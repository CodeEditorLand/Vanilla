import r from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as l}from"../../../../../base/test/common/utils.js";import{NullLogService as p}from"../../../../../platform/log/common/log.js";import{findExpressionInStackFrame as t}from"../../browser/debugHover.js";import{Scope as f,StackFrame as w,Thread as S,Variable as d}from"../../common/debugModel.js";import{Source as b}from"../../common/debugSource.js";import{createTestSession as v}from"./callStack.test.js";import{createMockDebugModel as E,mockUriIdentityService as g}from"./mockDebugModel.js";suite("Debug - Hover",()=>{const i=l();test("find expression in stack frame",async()=>{const c=E(i),n=i.add(v(c)),u=new class extends S{getCallStack(){return[e]}}(n,"mockthread",1),m=new b({name:"internalModule.js",path:"a/b/c/d/internalModule.js",sourceReference:10},"aDebugSessionId",g,new p),e=new class extends w{getScopes(){return Promise.resolve([s])}}(u,1,m,"app.js","normal",{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:10},1,!0),s=new class extends f{getChildren(){return Promise.resolve([o])}}(e,1,"local",1,!1,10,10),o=new class extends d{getChildren(){return Promise.resolve([a])}}(n,1,s,2,"A","A",void 0,0,0,void 0,{},"string"),a=new d(n,1,s,2,"B","A.B",void 0,0,0,void 0,{},"string");r.strictEqual(await t(e,[]),void 0),r.strictEqual(await t(e,["A"]),o),r.strictEqual(await t(e,["doesNotExist","no"]),void 0),r.strictEqual(await t(e,["a"]),void 0),r.strictEqual(await t(e,["B"]),void 0),r.strictEqual(await t(e,["A","B"]),a),r.strictEqual(await t(e,["A","C"]),void 0),s.expensive=!0,r.strictEqual(await t(e,["A"]),void 0)})});
