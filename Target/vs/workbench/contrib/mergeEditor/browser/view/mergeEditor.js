var q=Object.defineProperty;var Y=Object.getOwnPropertyDescriptor;var _=(g,u,e,t)=>{for(var i=t>1?void 0:t?Y(u,e):u,s=g.length-1,r;s>=0;s--)(r=g[s])&&(i=(t?r(u,e,i):r(i))||i);return t&&i&&q(u,e,i),i},a=(g,u)=>(e,t)=>u(e,t,g);import{reset as j}from"../../../../../base/browser/dom.js";import{SerializableGrid as Q}from"../../../../../base/browser/ui/grid/grid.js";import{Orientation as X}from"../../../../../base/browser/ui/splitview/splitview.js";import"../../../../../base/common/cancellation.js";import{Color as $}from"../../../../../base/common/color.js";import{BugIndicatingError as ee,onUnexpectedError as te}from"../../../../../base/common/errors.js";import{Emitter as ie}from"../../../../../base/common/event.js";import{Disposable as L,DisposableStore as M,MutableDisposable as oe,toDisposable as se}from"../../../../../base/common/lifecycle.js";import{autorun as re,autorunWithStore as ne,observableValue as C,transaction as x}from"../../../../../base/common/observable.js";import{basename as Z,isEqual as A}from"../../../../../base/common/resources.js";import{isDefined as D}from"../../../../../base/common/types.js";import"../../../../../base/common/uri.js";import"./media/mergeEditor.css";import"../../../../../editor/browser/editorBrowser.js";import{ICodeEditorService as K}from"../../../../../editor/browser/services/codeEditorService.js";import"../../../../../editor/common/config/editorOptions.js";import{ScrollType as k}from"../../../../../editor/common/editorCommon.js";import"../../../../../editor/common/model.js";import{ITextResourceConfigurationService as de}from"../../../../../editor/common/services/textResourceConfiguration.js";import{localize as ae}from"../../../../../nls.js";import{IConfigurationService as z}from"../../../../../platform/configuration/common/configuration.js";import{IContextKeyService as U}from"../../../../../platform/contextkey/common/contextkey.js";import"../../../../../platform/editor/common/editor.js";import{IFileService as ue}from"../../../../../platform/files/common/files.js";import{IInstantiationService as F}from"../../../../../platform/instantiation/common/instantiation.js";import{IStorageService as W,StorageScope as G,StorageTarget as le}from"../../../../../platform/storage/common/storage.js";import{ITelemetryService as pe}from"../../../../../platform/telemetry/common/telemetry.js";import{IThemeService as he}from"../../../../../platform/theme/common/themeService.js";import{AbstractTextEditor as ce}from"../../../../browser/parts/editor/textEditor.js";import{DEFAULT_EDITOR_ASSOCIATION as N}from"../../../../common/editor.js";import"../../../../common/editor/editorInput.js";import{applyTextEditorOptions as P}from"../../../../common/editor/editorOptions.js";import{readTransientState as we,writeTransientState as T}from"../../../codeEditor/browser/toggleWordWrap.js";import{MergeEditorInput as B}from"../mergeEditorInput.js";import"../mergeEditorInputModel.js";import"../model/mergeEditorModel.js";import{deepMerge as ve,PersistentStore as fe,thenIfNotDisposed as ge}from"../utils.js";import{observableConfigValue as me}from"../../../../../platform/observable/common/platformObservableUtils.js";import{BaseCodeEditorView as Ie}from"./editors/baseCodeEditorView.js";import{ScrollSynchronizer as Ve}from"./scrollSynchronizer.js";import{MergeEditorViewModel as Se}from"./viewModel.js";import{ViewZoneComputer as ye}from"./viewZones.js";import{ctxIsMergeEditor as Ce,ctxMergeBaseUri as be,ctxMergeEditorLayout as Ee,ctxMergeEditorShowBase as _e,ctxMergeEditorShowBaseAtTop as Me,ctxMergeEditorShowNonConflictingChanges as xe,ctxMergeResultUri as Te}from"../../common/mergeEditor.js";import{settingsSashBorder as Be}from"../../../preferences/common/settingsEditorColorRegistry.js";import{IEditorGroupsService as Oe}from"../../../../services/editor/common/editorGroupsService.js";import{IEditorResolverService as Re,RegisteredEditorPriority as De}from"../../../../services/editor/common/editorResolverService.js";import{IEditorService as H}from"../../../../services/editor/common/editorService.js";import"./colors.js";import{InputCodeEditorView as J}from"./editors/inputCodeEditorView.js";import{ResultCodeEditorView as Ne}from"./editors/resultCodeEditorView.js";let f=class extends ce{constructor(e,t,i,s,r,n,h,m,I,V,o,l,p){super(f.ID,e,s,t,r,h,n,I,V,o);this.contextKeyService=i;this._configurationService=m;this._codeEditorService=l;this.configurationService=p}static ID="mergeEditor";_sessionDisposables=new M;_viewModel=C(this,void 0);get viewModel(){return this._viewModel}rootHtmlElement;_grid=this._register(new oe);input1View=this._register(this.instantiationService.createInstance(J,1,this._viewModel));baseView=C(this,void 0);baseViewOptions=C(this,void 0);input2View=this._register(this.instantiationService.createInstance(J,2,this._viewModel));inputResultView=this._register(this.instantiationService.createInstance(Ne,this._viewModel));_layoutMode=this.instantiationService.createInstance(v);_layoutModeObs=C(this,this._layoutMode.value);_ctxIsMergeEditor=Ce.bindTo(this.contextKeyService);_ctxUsesColumnLayout=Ee.bindTo(this.contextKeyService);_ctxShowBase=_e.bindTo(this.contextKeyService);_ctxShowBaseAtTop=Me.bindTo(this.contextKeyService);_ctxResultUri=Te.bindTo(this.contextKeyService);_ctxBaseUri=be.bindTo(this.contextKeyService);_ctxShowNonConflictingChanges=xe.bindTo(this.contextKeyService);_inputModel=C(this,void 0);get inputModel(){return this._inputModel}get model(){return this.inputModel.get()?.model}get inputsWritable(){return!!this._configurationService.getValue("mergeEditor.writableInputs")}viewZoneComputer=new ye(this.input1View.editor,this.input2View.editor,this.inputResultView.editor);codeLensesVisible=me("mergeEditor.showCodeLenses",!0,this.configurationService);scrollSynchronizer=this._register(new Ve(this._viewModel,this.input1View,this.input2View,this.baseView,this.inputResultView,this._layoutModeObs));dispose(){this._sessionDisposables.dispose(),this._ctxIsMergeEditor.reset(),this._ctxUsesColumnLayout.reset(),this._ctxShowNonConflictingChanges.reset(),super.dispose()}_onDidChangeSizeConstraints=new ie;onDidChangeSizeConstraints=this._onDidChangeSizeConstraints.event;get minimumWidth(){return this._layoutMode.value.kind==="mixed"?this.input1View.view.minimumWidth+this.input2View.view.minimumWidth:this.input1View.view.minimumWidth+this.input2View.view.minimumWidth+this.inputResultView.view.minimumWidth}getTitle(){return this.input?this.input.getName():ae("mergeEditor","Text Merge Editor")}createEditorControl(e,t){this.rootHtmlElement=e,e.classList.add("merge-editor"),this.applyLayout(this._layoutMode.value),this.applyOptions(t)}updateEditorControlOptions(e){this.applyOptions(e)}applyOptions(e){const t=ve(e,{minimap:{enabled:!1},glyphMargin:!1,lineNumbersMinChars:2,readOnly:!this.inputsWritable});this.input1View.updateOptions(t),this.input2View.updateOptions(t),this.baseViewOptions.set({...this.input2View.editor.getRawOptions()},void 0),this.inputResultView.updateOptions(e)}getMainControl(){return this.inputResultView.editor}layout(e){this._grid.value?.layout(e.width,e.height)}async setInput(e,t,i,s){if(!(e instanceof B))throw new ee("ONLY MergeEditorInput is supported");await super.setInput(e,t,i,s),this._sessionDisposables.clear(),x(o=>{this._viewModel.set(void 0,o),this._inputModel.set(void 0,o)});const r=await e.resolve(),n=r.model,h=this.instantiationService.createInstance(Se,n,this.input1View,this.input2View,this.inputResultView,this.baseView,this.showNonConflictingChanges);n.telemetry.reportMergeEditorOpened({combinableConflictCount:n.combinableConflictCount,conflictCount:n.conflictCount,baseTop:this._layoutModeObs.get().showBaseAtTop,baseVisible:this._layoutModeObs.get().showBase,isColumnView:this._layoutModeObs.get().kind==="columns"}),x(o=>{this._viewModel.set(h,o),this._inputModel.set(r,o)}),this._sessionDisposables.add(h),this._ctxResultUri.set(r.resultUri.toString()),this._ctxBaseUri.set(n.base.uri.toString()),this._sessionDisposables.add(se(()=>{this._ctxBaseUri.reset(),this._ctxResultUri.reset()})),this._sessionDisposables.add(ne((o,l)=>{const p=this.baseView.read(o);this.inputResultView.editor.changeViewZones(b=>{const S=this._layoutModeObs.read(o),E=S.kind==="columns",y=S.kind==="mixed"&&!S.showBaseAtTop;this.input1View.editor.changeViewZones(c=>{this.input2View.editor.changeViewZones(d=>{p?p.editor.changeViewZones(w=>{l.add(this.setViewZones(o,h,this.input1View.editor,c,this.input2View.editor,d,p.editor,w,y,this.inputResultView.editor,b,E))}):l.add(this.setViewZones(o,h,this.input1View.editor,c,this.input2View.editor,d,void 0,void 0,!1,this.inputResultView.editor,b,E))})})}),this.scrollSynchronizer.updateScrolling()}));const m=this.loadEditorViewState(e,i);m?this._applyViewState(m):this._sessionDisposables.add(ge(n.onInitialized,()=>{const o=n.modifiedBaseRanges.get().find(l=>l.isConflicting);o&&(this.input1View.editor.revealLineInCenter(o.input1Range.startLineNumber),x(l=>{h.setActiveModifiedBaseRange(o,l)}))}));const I=o=>{const l=we(o,this._codeEditorService);T(n.input2.textModel,l,this._codeEditorService),T(n.input1.textModel,l,this._codeEditorService),T(n.resultTextModel,l,this._codeEditorService);const p=this.baseView.get()?.editor.getModel();p&&T(p,l,this._codeEditorService)};this._sessionDisposables.add(this._codeEditorService.onDidChangeTransientModelProperty(o=>{I(o)})),I(this.inputResultView.editor.getModel());const V=this;this._sessionDisposables.add(new class{_disposable=new M;constructor(){for(const o of this.baseInput1Input2())this._disposable.add(o.onDidChangeContent(()=>this._checkBaseInput1Input2AllEmpty()))}dispose(){this._disposable.dispose()}*baseInput1Input2(){yield n.base,yield n.input1.textModel,yield n.input2.textModel}_checkBaseInput1Input2AllEmpty(){for(const o of this.baseInput1Input2())if(o.getValueLength()>0)return;V.editorService.replaceEditors([{editor:e,replacement:{resource:e.result,options:{preserveFocus:!0}},forceReplaceDirty:!0}],V.group)}})}setViewZones(e,t,i,s,r,n,h,m,I,V,o,l){const p=[],b=[],S=[],E=[],y=this.viewZoneComputer.computeViewZones(e,t,{codeLensesVisible:this.codeLensesVisible.read(e),showNonConflictingChanges:this.showNonConflictingChanges.read(e),shouldAlignBase:I,shouldAlignResult:l}),c=new M;if(m)for(const d of y.baseViewZones)d.create(m,S,c);for(const d of y.resultViewZones)d.create(o,E,c);for(const d of y.input1ViewZones)d.create(s,p,c);for(const d of y.input2ViewZones)d.create(n,b,c);return c.add({dispose:()=>{i.changeViewZones(d=>{for(const w of p)d.removeZone(w)}),r.changeViewZones(d=>{for(const w of b)d.removeZone(w)}),h?.changeViewZones(d=>{for(const w of S)d.removeZone(w)}),V.changeViewZones(d=>{for(const w of E)d.removeZone(w)})}}),c}setOptions(e){super.setOptions(e),e&&P(e,this.inputResultView.editor,k.Smooth)}clearInput(){super.clearInput(),this._sessionDisposables.clear();for(const{editor:e}of[this.input1View,this.input2View,this.inputResultView])e.setModel(null)}focus(){super.focus(),(this.getControl()??this.inputResultView.editor).focus()}hasFocus(){for(const{editor:e}of[this.input1View,this.input2View,this.inputResultView])if(e.hasTextFocus())return!0;return super.hasFocus()}setEditorVisible(e){super.setEditorVisible(e);for(const{editor:t}of[this.input1View,this.input2View,this.inputResultView])e?t.onVisible():t.onHide();this._ctxIsMergeEditor.set(e)}getControl(){return this.inputResultView.editor}get scopedContextKeyService(){return this.getControl()?.invokeWithinContext(t=>t.get(U))}toggleBase(){this.setLayout({...this._layoutMode.value,showBase:!this._layoutMode.value.showBase})}toggleShowBaseTop(){const e=this._layoutMode.value.showBase&&this._layoutMode.value.showBaseAtTop;this.setLayout({...this._layoutMode.value,showBaseAtTop:!0,showBase:!e})}toggleShowBaseCenter(){const e=this._layoutMode.value.showBase&&!this._layoutMode.value.showBaseAtTop;this.setLayout({...this._layoutMode.value,showBaseAtTop:!1,showBase:!e})}setLayoutKind(e){this.setLayout({...this._layoutMode.value,kind:e})}setLayout(e){const t=this._layoutMode.value;JSON.stringify(t)!==JSON.stringify(e)&&(this.model?.telemetry.reportLayoutChange({baseTop:e.showBaseAtTop,baseVisible:e.showBase,isColumnView:e.kind==="columns"}),this.applyLayout(e))}baseViewDisposables=this._register(new M);applyLayout(e){x(t=>{if(e.showBase&&!this.baseView.get()){this.baseViewDisposables.clear();const i=this.baseViewDisposables.add(this.instantiationService.createInstance(Ie,this.viewModel));this.baseViewDisposables.add(re(s=>{const r=this.baseViewOptions.read(s);r&&i.updateOptions(r)})),this.baseView.set(i,t)}else!e.showBase&&this.baseView.get()&&(this.baseView.set(void 0,t),this.baseViewDisposables.clear());e.kind==="mixed"?this.setGrid([e.showBaseAtTop&&e.showBase?{size:38,data:this.baseView.get().view}:void 0,{size:38,groups:[{data:this.input1View.view},!e.showBaseAtTop&&e.showBase?{data:this.baseView.get().view}:void 0,{data:this.input2View.view}].filter(D)},{size:62,data:this.inputResultView.view}].filter(D)):e.kind==="columns"&&this.setGrid([e.showBase?{size:40,data:this.baseView.get().view}:void 0,{size:60,groups:[{data:this.input1View.view},{data:this.inputResultView.view},{data:this.input2View.view}]}].filter(D)),this._layoutMode.value=e,this._ctxUsesColumnLayout.set(e.kind),this._ctxShowBase.set(e.showBase),this._ctxShowBaseAtTop.set(e.showBaseAtTop),this._onDidChangeSizeConstraints.fire(),this._layoutModeObs.set(e,t)})}setGrid(e){let t=-1,i=-1;this._grid.value&&(t=this._grid.value.width,i=this._grid.value.height),this._grid.value=Q.from({orientation:X.VERTICAL,size:100,groups:e},{styles:{separatorBorder:this.theme.getColor(Be)??$.transparent},proportionalLayout:!0}),j(this.rootHtmlElement,this._grid.value.element),t!==-1&&this._grid.value.layout(t,i)}_applyViewState(e){e&&(this.inputResultView.editor.restoreViewState(e),e.input1State&&this.input1View.editor.restoreViewState(e.input1State),e.input2State&&this.input2View.editor.restoreViewState(e.input2State),e.focusIndex>=0&&[this.input1View.editor,this.input2View.editor,this.inputResultView.editor][e.focusIndex].focus())}computeEditorViewState(e){if(!A(this.inputModel.get()?.resultUri,e))return;const t=this.inputResultView.editor.saveViewState();if(!t)return;const i=this.input1View.editor.saveViewState()??void 0,s=this.input2View.editor.saveViewState()??void 0,r=[this.input1View.editor,this.input2View.editor,this.inputResultView.editor].findIndex(n=>n.hasWidgetFocus());return{...t,input1State:i,input2State:s,focusIndex:r}}tracksEditorViewState(e){return e instanceof B}showNonConflictingChangesStore=this.instantiationService.createInstance(fe,"mergeEditor/showNonConflictingChanges");showNonConflictingChanges=C(this,this.showNonConflictingChangesStore.get()??!1);toggleShowNonConflictingChanges(){this.showNonConflictingChanges.set(!this.showNonConflictingChanges.get(),void 0),this.showNonConflictingChangesStore.set(this.showNonConflictingChanges.get()),this._ctxShowNonConflictingChanges.set(this.showNonConflictingChanges.get())}};f=_([a(1,F),a(2,U),a(3,pe),a(4,W),a(5,he),a(6,de),a(7,z),a(8,H),a(9,Oe),a(10,ue),a(11,K),a(12,z)],f);let v=class{constructor(u){this._storageService=u;const e=u.get(v._key,G.PROFILE,"mixed");if(e==="mixed"||e==="columns")this._value={kind:e,showBase:!1,showBaseAtTop:!0};else if(e)try{this._value=JSON.parse(e)}catch(t){te(t)}}static _key="mergeEditor/layout";_value={kind:"mixed",showBase:!1,showBaseAtTop:!0};get value(){return this._value}set value(u){this._value!==u&&(this._value=u,this._storageService.store(v._key,JSON.stringify(this._value),G.PROFILE,le.USER))}};v=_([a(0,W)],v);let O=class extends L{constructor(e,t){super();this._editorService=e;this._store.add(t.registerCodeEditorOpenHandler(this.openCodeEditorFromMergeEditor.bind(this)))}async openCodeEditorFromMergeEditor(e,t,i){const s=this._editorService.activeEditorPane;if(!i&&e.options&&s instanceof f&&s.getControl()&&s.input instanceof B&&A(e.resource,s.input.result)){const r=s.getControl();return P(e.options,r,k.Smooth),r}return null}};O=_([a(0,H),a(1,K)],O);let R=class extends L{static ID="workbench.contrib.mergeEditorResolver";constructor(u,e){super();const t=i=>({editor:e.createInstance(B,i.base.resource,{uri:i.input1.resource,title:i.input1.label??Z(i.input1.resource),description:i.input1.description??"",detail:i.input1.detail},{uri:i.input2.resource,title:i.input2.label??Z(i.input2.resource),description:i.input2.description??"",detail:i.input2.detail},i.result.resource)});this._register(u.registerEditor("*",{id:N.id,label:N.displayName,detail:N.providerDisplayName,priority:De.builtin},{},{createMergeEditorInput:t}))}};R=_([a(0,Re),a(1,F)],R);export{f as MergeEditor,O as MergeEditorOpenHandlerContribution,R as MergeEditorResolverContribution};
