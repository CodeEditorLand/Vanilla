import{deepStrictEqual as a,strictEqual as o}from"assert";import{equals as m}from"../../../../../../base/common/arrays.js";import"../../../../../../editor/common/config/editorOptions.js";import{IConfigurationService as u}from"../../../../../../platform/configuration/common/configuration.js";import{TestConfigurationService as L}from"../../../../../../platform/configuration/test/common/testConfigurationService.js";import{ContextMenuService as w}from"../../../../../../platform/contextview/browser/contextMenuService.js";import{IContextMenuService as v}from"../../../../../../platform/contextview/browser/contextView.js";import{TestInstantiationService as x}from"../../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{ILogService as T,NullLogService as g}from"../../../../../../platform/log/common/log.js";import{IStorageService as S}from"../../../../../../platform/storage/common/storage.js";import{IThemeService as b}from"../../../../../../platform/theme/common/themeService.js";import{TestThemeService as y}from"../../../../../../platform/theme/test/common/testThemeService.js";import{IViewDescriptorService as I}from"../../../../../common/views.js";import{TerminalLinkManager as h}from"../../browser/terminalLinkManager.js";import"../../../../../../platform/terminal/common/capabilities/capabilities.js";import"../../../../terminal/common/terminal.js";import{TestViewDescriptorService as C}from"../../../../terminal/test/browser/xterm/xtermTerminal.test.js";import{TestStorageService as P}from"../../../../../test/common/workbenchTestServices.js";import{TerminalLinkResolver as M}from"../../browser/terminalLinkResolver.js";import{importAMDNodeModule as _}from"../../../../../../amdX.js";import{ensureNoDisposablesAreLeakedInTestSuite as D}from"../../../../../../base/test/common/utils.js";const R={fontFamily:"monospace",fontWeight:"normal",fontWeightBold:"normal",gpuAcceleration:"off",scrollback:1e3,fastScrollSensitivity:2,mouseWheelScrollSensitivity:1,unicodeVersion:"11",wordSeparators:" ()[]{}',\"`\u2500\u2018\u2019\u201C\u201D"};class F extends h{_links;async _getLinksForType(t,d){switch(d){case"word":return this._links?.wordLinks?.[t]?[this._links?.wordLinks?.[t]]:void 0;case"url":return this._links?.webLinks?.[t]?[this._links?.webLinks?.[t]]:void 0;case"localFile":return this._links?.fileLinks?.[t]?[this._links?.fileLinks?.[t]]:void 0}}setLinks(t){this._links=t}}suite("TerminalLinkManager",()=>{const s=D();let t,d,k,p,f,e;setup(async()=>{d=new L({editor:{fastScrollSensitivity:2,mouseWheelScrollSensitivity:1},terminal:{integrated:R}}),k=new y,p=new C,t=s.add(new x),t.stub(v,s.add(t.createInstance(w))),t.stub(u,d),t.stub(T,new g),t.stub(S,s.add(new P)),t.stub(b,k),t.stub(I,p);const i=(await _("@xterm/xterm","lib/xterm.js")).Terminal;f=s.add(new i({allowProposedApi:!0,cols:80,rows:30})),e=s.add(t.createInstance(F,f,{get initialCwd(){return""}},{get(n){}},t.createInstance(M)))}),suite("registerExternalLinkProvider",()=>{test("should not leak disposables if the link manager is already disposed",()=>{e.externalProvideLinksCb=async()=>{},e.dispose(),e.externalProvideLinksCb=async()=>{}})}),suite("getLinks and open recent link",()=>{test("should return no links",async()=>{const i=await e.getLinks();m(i.viewport.webLinks,[]),m(i.viewport.wordLinks,[]),m(i.viewport.fileLinks,[]);const n=await e.openRecentLink("url");o(n,void 0);const r=await e.openRecentLink("localFile");o(r,void 0)}),test("should return word links in order",async()=>{const i={range:{start:{x:1,y:1},end:{x:14,y:1}},text:"1_\u6211\u662F\u5B66\u751F.txt",activate:()=>Promise.resolve("")},n={range:{start:{x:1,y:1},end:{x:14,y:1}},text:"2_\u6211\u662F\u5B66\u751F.txt",activate:()=>Promise.resolve("")};e.setLinks({wordLinks:[i,n]});const r=await e.getLinks();a(r.viewport.wordLinks?.[0].text,n.text),a(r.viewport.wordLinks?.[1].text,i.text);const l=await e.openRecentLink("url");o(l,void 0);const c=await e.openRecentLink("localFile");o(c,void 0)}),test("should return web links in order",async()=>{const i={range:{start:{x:5,y:1},end:{x:40,y:1}},text:"https://foo.bar/[this is foo site 1]",activate:()=>Promise.resolve("")},n={range:{start:{x:5,y:2},end:{x:40,y:2}},text:"https://foo.bar/[this is foo site 2]",activate:()=>Promise.resolve("")};e.setLinks({webLinks:[i,n]});const r=await e.getLinks();a(r.viewport.webLinks?.[0].text,n.text),a(r.viewport.webLinks?.[1].text,i.text);const l=await e.openRecentLink("url");o(l,n);const c=await e.openRecentLink("localFile");o(c,void 0)}),test("should return file links in order",async()=>{const i={range:{start:{x:1,y:1},end:{x:32,y:1}},text:"file:///C:/users/test/file_1.txt",activate:()=>Promise.resolve("")},n={range:{start:{x:1,y:2},end:{x:32,y:2}},text:"file:///C:/users/test/file_2.txt",activate:()=>Promise.resolve("")};e.setLinks({fileLinks:[i,n]});const r=await e.getLinks();a(r.viewport.fileLinks?.[0].text,n.text),a(r.viewport.fileLinks?.[1].text,i.text);const l=await e.openRecentLink("url");o(l,void 0),e.setLinks({fileLinks:[n]});const c=await e.openRecentLink("localFile");o(c,n)})})});function le(s){return s}
