import{isWindows as T,OperatingSystem as d}from"../../../../../../base/common/platform.js";import{format as C}from"../../../../../../base/common/strings.js";import{IConfigurationService as F}from"../../../../../../platform/configuration/common/configuration.js";import{TestConfigurationService as y}from"../../../../../../platform/configuration/test/common/testConfigurationService.js";import{TestInstantiationService as I}from"../../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{TerminalBuiltinLinkType as P}from"../../browser/links.js";import{assertLinkHelper as S}from"./linkTestUtils.js";import{timeout as v}from"../../../../../../base/common/async.js";import{strictEqual as x}from"assert";import{TerminalLinkResolver as z}from"../../browser/terminalLinkResolver.js";import{IFileService as $}from"../../../../../../platform/files/common/files.js";import{createFileStat as M}from"../../../../../test/common/workbenchTestServices.js";import{URI as o}from"../../../../../../base/common/uri.js";import{NullLogService as R}from"../../../../../../platform/log/common/log.js";import{ITerminalLogService as A}from"../../../../../../platform/terminal/common/terminal.js";import{TerminalMultiLineLinkDetector as w}from"../../browser/terminalMultiLineLinkDetector.js";import{importAMDNodeModule as D}from"../../../../../../amdX.js";import{ensureNoDisposablesAreLeakedInTestSuite as H}from"../../../../../../base/test/common/utils.js";const U=["/foo","/foo/bar","/foo/[bar]","/foo/[bar].baz","/foo/[bar]/baz","/foo/bar+more",{link:"~/foo",resource:o.file("/home/foo")},{link:"./foo",resource:o.file("/parent/cwd/foo")},{link:"./$foo",resource:o.file("/parent/cwd/$foo")},{link:"../foo",resource:o.file("/parent/foo")},{link:"foo/bar",resource:o.file("/parent/cwd/foo/bar")},{link:"foo/bar+more",resource:o.file("/parent/cwd/foo/bar+more")}],N=["c:\\foo",{link:"\\\\?\\C:\\foo",resource:o.file("C:\\foo")},"c:/foo","c:/foo/bar","c:\\foo\\bar","c:\\foo\\bar+more","c:\\foo/bar\\baz",{link:"~\\foo",resource:o.file("C:\\Home\\foo")},{link:"~/foo",resource:o.file("C:\\Home\\foo")},{link:".\\foo",resource:o.file("C:\\Parent\\Cwd\\foo")},{link:"./foo",resource:o.file("C:\\Parent\\Cwd\\foo")},{link:"./$foo",resource:o.file("C:\\Parent\\Cwd\\$foo")},{link:"..\\foo",resource:o.file("C:\\Parent\\foo")},{link:"foo/bar",resource:o.file("C:\\Parent\\Cwd\\foo\\bar")},{link:"foo/bar",resource:o.file("C:\\Parent\\Cwd\\foo\\bar")},{link:"foo/[bar]",resource:o.file("C:\\Parent\\Cwd\\foo\\[bar]")},{link:"foo/[bar].baz",resource:o.file("C:\\Parent\\Cwd\\foo\\[bar].baz")},{link:"foo/[bar]/baz",resource:o.file("C:\\Parent\\Cwd\\foo\\[bar]/baz")},{link:"foo\\bar",resource:o.file("C:\\Parent\\Cwd\\foo\\bar")},{link:"foo\\[bar].baz",resource:o.file("C:\\Parent\\Cwd\\foo\\[bar].baz")},{link:"foo\\[bar]\\baz",resource:o.file("C:\\Parent\\Cwd\\foo\\[bar]\\baz")},{link:"foo\\bar+more",resource:o.file("C:\\Parent\\Cwd\\foo\\bar+more")}],f=[{urlFormat:`{0}\r
{1}:foo`,line:"5"},{urlFormat:`{0}\r
{1}: foo`,line:"5"},{urlFormat:`{0}\r
5:another link\r
{1}:{2} foo`,line:"5",column:"3"},{urlFormat:`{0}\r
  {1}:{2} foo`,line:"5",column:"3"},{urlFormat:`{0}\r
  5:6  error  another one\r
  {1}:{2}  error`,line:"5",column:"3"},{urlFormat:`{0}\r
  5:6  error  ${"a".repeat(80)}\r
  {1}:{2}  error`,line:"5",column:"3"},{urlFormat:`+++ b/{0}\r
@@ -7,6 +{1},7 @@`,line:"5"},{urlFormat:`+++ b/{0}\r
@@ -1,1 +1,1 @@\r
foo\r
bar\r
@@ -7,6 +{1},7 @@`,line:"5"}];suite("Workbench - TerminalMultiLineLinkDetector",()=>{const c=H();let l,k,m,u,b,s;async function g(e,r,t){let n;const i=await Promise.race([S(r,t,m,e).then(()=>"success"),(n=v(2)).then(()=>"timeout")]);x(i,"success",`Awaiting link assertion for "${r}" timed out`),n.cancel()}async function p(e,r){const t=r??o.file(e),n=e.split(`\r
`),i=n.at(-1);let a=0;for(const h of n)a+=Math.max(Math.ceil(h.length/80),1);await g(P.LocalFile,e,[{uri:t,range:[[1,a],[i.length,a]]}])}setup(async()=>{l=c.add(new I),k=new y,l.stub(F,k),l.stub($,{async stat(r){if(!s.map(t=>t.path).includes(r.path))throw new Error("Doesn't exist");return M(r)}}),l.stub(A,new R),u=l.createInstance(z),s=[];const e=(await D("@xterm/xterm","lib/xterm.js")).Terminal;b=new e({allowProposedApi:!0,cols:80,rows:30})}),suite("macOS/Linux",()=>{setup(()=>{m=l.createInstance(w,b,{initialCwd:"/parent/cwd",os:d.Linux,remoteAuthority:void 0,userHome:"/home",backend:void 0},u)});for(const e of U){const r=typeof e=="string"?e:e.link,t=typeof e=="string"?o.file(e):e.resource;suite(`Link: ${r}`,()=>{for(let n=0;n<f.length;n++){const i=f[n],a=C(i.urlFormat,r,i.line,i.column);test(`should detect in "${L(a)}"`,async()=>{s=[t],await p(a,t)})}})}}),T&&suite("Windows",()=>{setup(()=>{m=l.createInstance(w,b,{initialCwd:"C:\\Parent\\Cwd",os:d.Windows,remoteAuthority:void 0,userHome:"C:\\Home"},u)});for(const e of N){const r=typeof e=="string"?e:e.link,t=typeof e=="string"?o.file(e):e.resource;suite(`Link "${r}"`,()=>{for(let n=0;n<f.length;n++){const i=f[n],a=C(i.urlFormat,r,i.line,i.column);test(`should detect in "${L(a)}"`,async()=>{s=[t],await p(a,t)})}})}})});function L(c){return c.replaceAll(`\r
`,"\\r\\n")}
