import n from"assert";import{stub as w,useFakeTimers as x}from"sinon";import{Emitter as h}from"../../../../../../base/common/event.js";import{CharPredictState as p,PredictionStats as E,TypeAheadAddon as P}from"../../browser/terminalTypeAheadAddon.js";import"../../../../terminal/common/terminal.js";import"../../../../../../platform/telemetry/common/telemetry.js";import{TestConfigurationService as D}from"../../../../../../platform/configuration/test/common/testConfigurationService.js";import{ensureNoDisposablesAreLeakedInTestSuite as S}from"../../../../../../base/test/common/utils.js";import{DisposableStore as k}from"../../../../../../base/common/lifecycle.js";import{DEFAULT_LOCAL_ECHO_EXCLUDE as T}from"../../common/terminalTypeAheadConfiguration.js";const a="\x1B[";var C=(l=>(l.Back="D",l.Forwards="C",l))(C||{});suite("Workbench - Terminal Typeahead",()=>{const i=S();suite("PredictionStats",()=>{let o,l,c,e;setup(()=>{l=i.add(new h),c=i.add(new h),e=i.add(new h),o=i.add(new E({onPredictionAdded:l.event,onPredictionSucceeded:c.event,onPredictionFailed:e.event}))}),test("creates sane data",()=>{const f=y(5),r=x();try{for(const t of f)l.fire(t);for(let t=0;t<f.length;t++)r.tick(100),(t%2?e:c).fire(f[t]);n.strictEqual(o.accuracy,3/5),n.strictEqual(o.sampleSize,5),n.deepStrictEqual(o.latency,{count:3,min:100,max:500,median:300})}finally{r.restore()}}),test("circular buffer",()=>{const r=y(48);for(const t of r.slice(0,24))l.fire(t),c.fire(t);n.strictEqual(o.accuracy,1);for(const t of r.slice(24,24*3/2))l.fire(t),e.fire(t);n.strictEqual(o.accuracy,.5);for(const t of r.slice(24*3/2))l.fire(t),e.fire(t);n.strictEqual(o.accuracy,0)})}),suite("timeline",()=>{let o,l,c,e;const f=[`${a}?25l`,`${a}2;7H`,"o",`${a}2;8H`,`${a}?25h`].join(""),r=(t,s)=>{const u={data:t};o.fire(u),n.strictEqual(JSON.stringify(u.data),JSON.stringify(s))};setup(()=>{o=i.add(new h),c={localEchoStyle:"italic",localEchoLatencyThreshold:0,localEchoExcludePrograms:T},l=w(),e=new q({onBeforeProcessData:o.event},new D({terminal:{integrated:{...c}}}),{publicLog:l}),e.unlockMakingPredictions()}),teardown(()=>{e.dispose()}),test("predicts a single character",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("o"),t.expectWritten(`${a}3mo${a}23m`)}),test("validates character prediction",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("o"),r("o",f),n.strictEqual(e.stats?.accuracy,1)}),test("validates zsh prediction (#112842)",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("o"),r("o",f),t.onData("x"),r("\box",[`${a}?25l`,`${a}2;8H`,"\box",`${a}2;9H`,`${a}?25h`].join("")),n.strictEqual(e.stats?.accuracy,1)}),test("does not validate zsh prediction on differing lookbehindn (#112842)",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("o"),r("o",f),t.onData("x"),r("\bqx",[`${a}?25l`,`${a}2;8H`,`${a}X`,`${a}0m`,"\bqx",`${a}?25h`].join("")),n.strictEqual(e.stats?.accuracy,.5)}),test("rolls back character prediction",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("o"),r("q",[`${a}?25l`,`${a}2;7H`,`${a}X`,`${a}0m`,"q",`${a}?25h`].join("")),n.strictEqual(e.stats?.accuracy,0)}),test("handles left arrow when we hit the boundary",()=>{const t=i.add(d({lines:["|"]}));e.activate(t.terminal),e.unlockNavigating();const s=e.physicalCursor(t.terminal.buffer.active)?.x;t.onData(`${a}D`),t.expectWritten(""),o.fire({data:"xy"}),n.strictEqual(e.physicalCursor(t.terminal.buffer.active)?.x,s)}),test("handles right arrow when we hit the boundary",()=>{const t=i.add(d({lines:["|"]}));e.activate(t.terminal),e.unlockNavigating();const s=e.physicalCursor(t.terminal.buffer.active)?.x;t.onData(`${a}C`),t.expectWritten(""),o.fire({data:"xy"}),n.strictEqual(e.physicalCursor(t.terminal.buffer.active)?.x,s)}),test("internal cursor state is reset when all predictions are undone",()=>{const t=i.add(d({lines:["|"]}));e.activate(t.terminal),e.unlockNavigating();const s=e.physicalCursor(t.terminal.buffer.active)?.x;t.onData(`${a}D`),t.expectWritten(""),e.undoAllPredictions(),n.strictEqual(e.physicalCursor(t.terminal.buffer.active)?.x,s)}),test("restores cursor graphics mode",()=>{const t=i.add(d({lines:["hello|"],cursorAttrs:{isAttributeDefault:!1,isBold:!0,isFgPalette:!0,getFgColor:1}}));e.activate(t.terminal),t.onData("o"),r("q",[`${a}?25l`,`${a}2;7H`,`${a}X`,`${a}1;38;5;1m`,"q",`${a}?25h`].join("")),n.strictEqual(e.stats?.accuracy,0)}),test("validates against and applies graphics mode on predicted",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("o"),r(`${a}4mo`,[`${a}?25l`,`${a}2;7H`,`${a}4m`,"o",`${a}2;8H`,`${a}?25h`].join("")),n.strictEqual(e.stats?.accuracy,1)}),test("ignores cursor hides or shows",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("o"),r(`${a}?25lo${a}?25h`,[`${a}?25l`,`${a}?25l`,`${a}2;7H`,"o",`${a}?25h`,`${a}2;8H`,`${a}?25h`].join("")),n.strictEqual(e.stats?.accuracy,1)}),test("matches backspace at EOL (bash style)",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("\x7F"),r(`\b${a}K`,`\b${a}K`),n.strictEqual(e.stats?.accuracy,1)}),test("matches backspace at EOL (zsh style)",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("\x7F"),r("\b \b","\b \b"),n.strictEqual(e.stats?.accuracy,1)}),test("gradually matches backspace",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("\x7F"),r("\b",""),r(" \b","\b \b"),n.strictEqual(e.stats?.accuracy,1)}),test("restores old character after invalid backspace",()=>{const t=i.add(d({lines:["hel|lo"]}));e.activate(t.terminal),e.unlockNavigating(),t.onData("\x7F"),t.expectWritten(`${a}2;4H${a}X`),r("x",`${a}?25l${a}0ml${a}2;5H${a}0mx${a}?25h`),n.strictEqual(e.stats?.accuracy,0)}),test("waits for validation before deleting to left of cursor",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),t.onData("\x7F"),t.expectWritten(""),r("\b \b","\b \b"),t.cursor.x--,t.onData("o"),o.fire({data:"o"}),t.cursor.x++,t.clearWritten(),t.onData("\x7F"),t.expectWritten(`${a}2;6H${a}X`)}),test("waits for first valid prediction on a line",()=>{const t=i.add(d({lines:["hello|"]}));e.lockMakingPredictions(),e.activate(t.terminal),t.onData("o"),t.expectWritten(""),r("o","o"),t.onData("o"),t.expectWritten(`${a}3mo${a}23m`)}),test("disables on title change",()=>{const t=i.add(d({lines:["hello|"]}));e.activate(t.terminal),e.reevaluateNow(),n.strictEqual(e.isShowing,!0,"expected to show initially"),t.onTitleChange.fire("foo - VIM.exe"),e.reevaluateNow(),n.strictEqual(e.isShowing,!1,"expected to hide when vim is open"),t.onTitleChange.fire("foo - git.exe"),e.reevaluateNow(),n.strictEqual(e.isShowing,!0,"expected to show again after vim closed")}),test("adds line wrap prediction even if behind a boundary",()=>{const t=i.add(d({lines:["hello|"]}));e.lockMakingPredictions(),e.activate(t.terminal),t.onData("hi".repeat(50)),t.expectWritten(""),r("hi",[`${a}?25l`,"hi",...new Array(36).fill(`${a}3mh${a}23m${a}3mi${a}23m`),`${a}2;81H`,`${a}?25h`].join(""))})})});class q extends P{unlockMakingPredictions(){this._lastRow={y:1,startingX:100,endingX:100,charState:p.Validated}}lockMakingPredictions(){this._lastRow=void 0}unlockNavigating(){this._lastRow={y:1,startingX:1,endingX:1,charState:p.Validated}}reevaluateNow(){this._reevaluatePredictorStateNow(this.stats,this._timeline)}get isShowing(){return!!this._timeline?.isShowingPredictions}undoAllPredictions(){this._timeline?.undoAllPredictions()}physicalCursor(o){return this._timeline?.physicalCursor(o)}tentativeCursor(o){return this._timeline?.tentativeCursor(o)}}function V(i){return i}function y(i){return new Array(i).fill(0).map(A)}function A(){return{apply:()=>"",rollback:()=>"",matches:()=>0,rollForwards:()=>""}}function d({lines:i,cursorAttrs:o}){const l=new k,c=[],e={y:1,x:1},f=l.add(new h),r=l.add(new h),t=l.add(new h);for(let s=0;s<i.length;s++){const u=i[s];if(u.includes("|")){e.y=s+1,e.x=u.indexOf("|")+1,i[s]=u.replace("|","");break}}return{written:c,cursor:e,expectWritten:s=>{n.strictEqual(JSON.stringify(c.join("")),JSON.stringify(s)),c.splice(0,c.length)},clearWritten:()=>c.splice(0,c.length),onData:s=>r.fire(s),csiEmitter:t,onTitleChange:f,dispose:()=>l.dispose(),terminal:{cols:80,rows:5,onResize:new h().event,onData:r.event,onTitleChange:f.event,parser:{registerCsiHandler(s,u){l.add(t.event(u))}},write(s){c.push(s)},_core:{_inputHandler:{_curAttrData:b("",o)},writeSync(){}},buffer:{active:{type:"normal",baseY:0,get cursorY(){return e.y},get cursorX(){return e.x},getLine(s){const u=i[s-1]||"";return{length:u.length,getCell:m=>b(u[m-1]||""),translateToString:(m,v=0,$=u.length)=>{const g=u.slice(v,$);return m?g.trimRight():g}}}}}}}}function b(i,o={}){return new Proxy({},{get(l,c){if(typeof c=="string"&&o.hasOwnProperty(c))return()=>o[c];switch(c){case"getWidth":return()=>1;case"getChars":return()=>i;case"getCode":return()=>i.charCodeAt(0)||0;case"isAttributeDefault":return()=>!0;default:return String(c).startsWith("is")?()=>!1:()=>0}}})}
