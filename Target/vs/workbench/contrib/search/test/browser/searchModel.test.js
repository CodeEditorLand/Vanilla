import s from"assert";import*as d from"sinon";import*as U from"../../../../../base/common/arrays.js";import{DeferredPromise as X,timeout as E}from"../../../../../base/common/async.js";import{CancellationTokenSource as Y}from"../../../../../base/common/cancellation.js";import{URI as F}from"../../../../../base/common/uri.js";import{Range as I}from"../../../../../editor/common/core/range.js";import{IModelService as Z}from"../../../../../editor/common/services/model.js";import{ModelService as ee}from"../../../../../editor/common/services/modelService.js";import{IConfigurationService as te}from"../../../../../platform/configuration/common/configuration.js";import{TestConfigurationService as re}from"../../../../../platform/configuration/test/common/testConfigurationService.js";import{TestInstantiationService as se}from"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{ISearchService as S,OneLineRange as g,QueryType as h,TextSearchMatch as m}from"../../../../services/search/common/search.js";import{ITelemetryService as C}from"../../../../../platform/telemetry/common/telemetry.js";import{NullTelemetryService as ne}from"../../../../../platform/telemetry/common/telemetryUtils.js";import{CellMatch as oe,MatchInNotebook as ae,SearchModel as w}from"../../browser/searchModel.js";import{IThemeService as ce}from"../../../../../platform/theme/common/themeService.js";import{TestThemeService as le}from"../../../../../platform/theme/test/common/testThemeService.js";import{FileService as ie}from"../../../../../platform/files/common/fileService.js";import{ILogService as ue,NullLogService as j}from"../../../../../platform/log/common/log.js";import{IUriIdentityService as he}from"../../../../../platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as de}from"../../../../../platform/uriIdentity/common/uriIdentityService.js";import{ILabelService as me}from"../../../../../platform/label/common/label.js";import{INotebookEditorService as Se}from"../../../notebook/browser/services/notebookEditorService.js";import{IEditorGroupsService as pe}from"../../../../services/editor/common/editorGroupsService.js";import{TestEditorGroupsService as Ie,TestEditorService as ge}from"../../../../test/browser/workbenchTestServices.js";import{NotebookEditorWidgetService as ye}from"../../../notebook/browser/services/notebookEditorServiceImpl.js";import{createFileUriFromPathFromRoot as Q,getRootName as N}from"./searchTestCommon.js";import{contentMatchesToTextSearchMatches as A,webviewMatchesToTextSearchMatches as fe}from"../../browser/notebookSearch/searchNotebookHelpers.js";import{CellKind as D}from"../../../notebook/common/notebookCommon.js";import"../../../notebook/browser/notebookBrowser.js";import{FindMatch as L}from"../../../../../editor/common/model.js";import{ResourceMap as be,ResourceSet as B}from"../../../../../base/common/map.js";import{INotebookService as we}from"../../../notebook/common/notebookService.js";import{INotebookSearchService as y}from"../../common/notebookSearch.js";import{IContextKeyService as Re}from"../../../../../platform/contextkey/common/contextkey.js";import{MockContextKeyService as ke}from"../../../../../platform/keybinding/test/common/mockKeybindingService.js";import{IEditorService as ve}from"../../../../services/editor/common/editorService.js";import{ensureNoDisposablesAreLeakedInTestSuite as Me}from"../../../../../base/test/common/utils.js";const k=new class{id=-1;topic;name;description;data;startTime;stopTime;stop(){}timeTaken(){return-1}},q=new g(1,0,1);suite("SearchModel",()=>{let n;const c=Me(),H={fromCache:!1,resultCount:1,type:"searchProcess",detailStats:{fileWalkTime:0,cmdTime:0,cmdResultCount:0,directoriesWalked:2,filesWalked:3}},u=[{folder:Q()}];setup(()=>{n=new se,n.stub(C,ne),n.stub(me,{getUriBasenameLabel:r=>""}),n.stub(we,{getNotebookTextModels:()=>[]}),n.stub(Z,_(n)),n.stub(Se,z(n)),n.stub(S,{}),n.stub(S,"textSearch",Promise.resolve({results:[]}));const t=new ie(new j);c.add(t);const e=new de(t);c.add(e),n.stub(he,e),n.stub(ue,new j)}),teardown(()=>d.restore());function R(t,e=null){return{textSearch(r,o,a,l){return new Promise(b=>{queueMicrotask(()=>{t.forEach(a),b(e)})})},fileSearch(r,o){return new Promise(a=>{queueMicrotask(()=>{a({results:t,messages:[]})})})},aiTextSearch(r,o,a,l){return new Promise(b=>{queueMicrotask(()=>{t.forEach(a),b(e)})})},textSearchSplitSyncAsync(r,o,a){return{syncResults:{results:[],messages:[]},asyncResults:new Promise(l=>{queueMicrotask(()=>{t.forEach(a),l(e)})})}}}}function K(t){return{textSearch(e,r,o){return new Promise((a,l)=>{l(t)})},fileSearch(e,r){return new Promise((o,a)=>{queueMicrotask(()=>{a(t)})})},aiTextSearch(e,r,o,a){return new Promise((l,b)=>{b(t)})},textSearchSplitSyncAsync(e,r,o){return{syncResults:{results:[],messages:[]},asyncResults:new Promise((a,l)=>{l(t)})}}}}function $(t){return{textSearch(e,r,o){const a=r?.onCancellationRequested(()=>t.cancel());return a&&c.add(a),this.textSearchSplitSyncAsync(e,r,o).asyncResults},fileSearch(e,r){const o=r?.onCancellationRequested(()=>t.cancel());return o&&c.add(o),new Promise(a=>{queueMicrotask(()=>{a({})})})},aiTextSearch(e,r,o,a){const l=r?.onCancellationRequested(()=>t.cancel());return l&&c.add(l),Promise.resolve({results:[],messages:[]})},textSearchSplitSyncAsync(e,r,o){const a=r?.onCancellationRequested(()=>t.cancel());return a&&c.add(a),{syncResults:{results:[],messages:[]},asyncResults:new Promise(l=>{queueMicrotask(()=>{l({results:[],messages:[]})})})}}}}function V(t){return{textSearchSplitSyncAsync(e,r,o){return{syncResults:{results:[],messages:[]},asyncResults:t}}}}function p(t,e){return{_serviceBrand:void 0,notebookSearch(r,o,a,l){const b=o?.onCancellationRequested(()=>e?.cancel());b&&c.add(b);const v=new be(M=>M.path);return t.forEach(M=>{v.set(M.resource,M)}),l&&U.coalesce([...v.values()]).forEach(l),{openFilesToScan:new B([...v.keys()]),completeData:Promise.resolve({messages:[],results:U.coalesce([...v.values()]),limitHit:!1}),allScannedFiles:Promise.resolve(new B)}}}}test("Search Model: Search adds to results",async()=>{const t=[f("/1",new m("preview 1",new g(1,1,4)),new m("preview 1",new g(1,4,11))),f("/2",new m("preview 2",q))];n.stub(S,R(t,{limitHit:!1,messages:[],results:t})),n.stub(y,p([],void 0));const e=n.createInstance(w);c.add(e),await e.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}).asyncResults;const r=e.searchResult.matches();s.strictEqual(2,r.length),s.strictEqual(F.file(`${N()}/1`).toString(),r[0].resource.toString());let o=r[0].matches();s.strictEqual(2,o.length),s.strictEqual("preview 1",o[0].text()),s.ok(new I(2,2,2,5).equalsRange(o[0].range())),s.strictEqual("preview 1",o[1].text()),s.ok(new I(2,5,2,12).equalsRange(o[1].range())),o=r[1].matches(),s.strictEqual(1,o.length),s.strictEqual("preview 2",o[0].text()),s.ok(new I(2,1,2,2).equalsRange(o[0].range()))}),test("Search Model: Search can return notebook results",async()=>{const t=[f("/2",new m("test",new g(1,1,5)),new m("this is a test",new g(1,11,15))),f("/3",new m("test",q))];n.stub(S,R(t,{limitHit:!1,messages:[],results:t})),d.stub(oe.prototype,"addContext");const e={cellKind:D.Markup,textBuffer:{getLineContent(x){return x===1?"# Test":""}},id:"mdInputCell"},r=[new L(new I(1,3,1,7),["Test"])],o={cellKind:D.Code,textBuffer:{getLineContent(x){return x===1?'print("test! testing!!")':""}},id:"codeCell"},a=[new L(new I(1,8,1,12),["test"]),new L(new I(1,14,1,18),["test"])],l=[{index:0,searchPreviewInfo:{line:"test! testing!!",range:{start:1,end:5}}},{index:1,searchPreviewInfo:{line:"test! testing!!",range:{start:7,end:11}}}],b={cell:e,index:0,contentResults:A(r,e),webviewResults:[]},v={cell:o,index:1,contentResults:A(a,o),webviewResults:fe(l)},M=n.stub(y,p([G("/1",b,v)],void 0)),J=d.spy(M,"notebookSearch"),W=n.createInstance(w);c.add(W),await W.search({contentPattern:{pattern:"test"},type:h.Text,folderQueries:u}).asyncResults;const P=W.searchResult.matches();s(J.calledOnce),s.strictEqual(3,P.length),s.strictEqual(F.file(`${N()}/1`).toString(),P[0].resource.toString());const i=P[0].matches();s.ok(i[0].range().equalsRange(new I(1,3,1,7))),s.ok(i[1].range().equalsRange(new I(1,8,1,12))),s.ok(i[2].range().equalsRange(new I(1,14,1,18))),s.ok(i[3].range().equalsRange(new I(1,2,1,6))),s.ok(i[4].range().equalsRange(new I(1,8,1,12))),i.forEach(x=>x instanceof ae),s(i[0].cell?.id==="mdInputCell"),s(i[1].cell?.id==="codeCell"),s(i[2].cell?.id==="codeCell"),s(i[3].cell?.id==="codeCell"),s(i[4].cell?.id==="codeCell");const O=i[0].cellParent,T=i[1].cellParent;s(O.contentMatches.length===1),s(T.contentMatches.length===2),s(T.webviewMatches.length===2),s(O.contentMatches[0]===i[0]),s(T.contentMatches[0]===i[1]),s(T.contentMatches[1]===i[2]),s(T.webviewMatches[0]===i[3]),s(T.webviewMatches[1]===i[4]),s.strictEqual(F.file(`${N()}/2`).toString(),P[1].resource.toString()),s.strictEqual(F.file(`${N()}/3`).toString(),P[2].resource.toString())}),test("Search Model: Search reports telemetry on search completed",async()=>{const t=n.spy(C,"publicLog"),e=[f("/1",new m("preview 1",new g(1,1,4)),new m("preview 1",new g(1,4,11))),f("/2",new m("preview 2",q))];n.stub(S,R(e,{limitHit:!1,messages:[],results:e})),n.stub(y,p([],void 0));const r=n.createInstance(w);c.add(r),await r.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}).asyncResults,s.ok(t.calledThrice),s.ok(t.calledWith("searchResultsFirstRender")),s.ok(t.calledWith("searchResultsFinished"))}),test("Search Model: Search reports timed telemetry on search when progress is not called",()=>{const t=d.spy();d.stub(k,"stop").callsFake(t);const e=d.stub().returns(k);n.stub(C,"publicLog",e),n.stub(S,R([],{limitHit:!1,messages:[],results:[]})),n.stub(y,p([],void 0));const r=n.createInstance(w);return c.add(r),r.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}).asyncResults.then(()=>E(1).then(()=>{s.ok(e.calledWith("searchResultsFirstRender")),s.ok(e.calledWith("searchResultsFinished"))}))}),test("Search Model: Search reports timed telemetry on search when progress is called",()=>{const t=d.spy();d.stub(k,"stop").callsFake(t);const e=d.stub().returns(k);n.stub(C,"publicLog",e),n.stub(S,R([f("/1",new m("some preview",q))],{results:[],stats:H,messages:[]})),n.stub(y,p([],void 0));const r=n.createInstance(w);return c.add(r),r.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}).asyncResults.then(()=>E(1).then(()=>{s.ok(e.calledWith("searchResultsFirstRender")),s.ok(e.calledWith("searchResultsFinished"))}))}),test("Search Model: Search reports timed telemetry on search when error is called",()=>{const t=d.spy();d.stub(k,"stop").callsFake(t);const e=d.stub().returns(k);n.stub(C,"publicLog",e),n.stub(S,K(new Error("This error should be thrown by this test."))),n.stub(y,p([],void 0));const r=n.createInstance(w);return c.add(r),r.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}).asyncResults.then(()=>{},()=>E(1).then(()=>{s.ok(e.calledWith("searchResultsFirstRender")),s.ok(e.calledWith("searchResultsFinished"))}))}),test("Search Model: Search reports timed telemetry on search when error is cancelled error",()=>{const t=d.spy();d.stub(k,"stop").callsFake(t);const e=d.stub().returns(k);n.stub(C,"publicLog",e);const r=new X;n.stub(S,V(r.p)),n.stub(y,p([],void 0));const o=n.createInstance(w);c.add(o);const a=o.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}).asyncResults;return r.cancel(),a.then(()=>{},async()=>E(1).then(()=>{s.ok(e.calledWith("searchResultsFirstRender")),s.ok(e.calledWith("searchResultsFinished"))}))}),test("Search Model: Search results are cleared during search",async()=>{const t=[f("/1",new m("preview 1",new g(1,1,4)),new m("preview 1",new g(1,4,11))),f("/2",new m("preview 2",q))];n.stub(S,R(t,{limitHit:!1,messages:[],results:[]})),n.stub(y,p([],void 0));const e=n.createInstance(w);c.add(e),await e.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}).asyncResults,s.ok(!e.searchResult.isEmpty()),n.stub(S,R([])),e.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}),s.ok(e.searchResult.isEmpty())}),test("Search Model: Previous search is cancelled when new search is called",async()=>{const t=new Y;c.add(t),n.stub(S,$(t)),n.stub(y,p([],t));const e=n.createInstance(w);c.add(e),e.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}),n.stub(S,R([])),n.stub(y,p([],void 0)),e.search({contentPattern:{pattern:"somestring"},type:h.Text,folderQueries:u}),s.ok(t.token.isCancellationRequested)}),test("getReplaceString returns proper replace string for regExpressions",async()=>{const t=[f("/1",new m("preview 1",new g(1,1,4)),new m("preview 1",new g(1,4,11)))];n.stub(S,R(t,{limitHit:!1,messages:[],results:t})),n.stub(y,p([],void 0));const e=n.createInstance(w);c.add(e),await e.search({contentPattern:{pattern:"re"},type:h.Text,folderQueries:u}).asyncResults,e.replaceString="hello";let r=e.searchResult.matches()[0].matches()[0];s.strictEqual("hello",r.replaceString),await e.search({contentPattern:{pattern:"re",isRegExp:!0},type:h.Text,folderQueries:u}).asyncResults,r=e.searchResult.matches()[0].matches()[0],s.strictEqual("hello",r.replaceString),await e.search({contentPattern:{pattern:"re(?:vi)",isRegExp:!0},type:h.Text,folderQueries:u}).asyncResults,r=e.searchResult.matches()[0].matches()[0],s.strictEqual("hello",r.replaceString),await e.search({contentPattern:{pattern:"r(e)(?:vi)",isRegExp:!0},type:h.Text,folderQueries:u}).asyncResults,r=e.searchResult.matches()[0].matches()[0],s.strictEqual("hello",r.replaceString),await e.search({contentPattern:{pattern:"r(e)(?:vi)",isRegExp:!0},type:h.Text,folderQueries:u}).asyncResults,e.replaceString="hello$1",r=e.searchResult.matches()[0].matches()[0],s.strictEqual("helloe",r.replaceString)});function f(t,...e){return{resource:Q(t),results:e}}function G(t,...e){return{resource:Q(t),cellResults:e}}function _(t){t.stub(ce,new le);const e=new re;e.setUserConfiguration("search",{searchOnType:!0}),t.stub(te,e);const r=t.createInstance(ee);return c.add(r),r}function z(t){t.stub(pe,new Ie),t.stub(Re,new ke),t.stub(ve,c.add(new ge));const e=t.createInstance(ye);return c.add(e),e}});
