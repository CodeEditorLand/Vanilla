import r from"assert";import*as m from"sinon";import{TestInstantiationService as L}from"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{Match as T,FileMatch as K,SearchResult as U,SearchModel as j,FolderMatch as Q,CellMatch as V}from"../../browser/searchModel.js";import{URI as x}from"../../../../../base/common/uri.js";import{TextSearchMatch as c,OneLineRange as l,QueryType as k}from"../../../../services/search/common/search.js";import{ITelemetryService as G}from"../../../../../platform/telemetry/common/telemetry.js";import{NullTelemetryService as $}from"../../../../../platform/telemetry/common/telemetryUtils.js";import{Range as E}from"../../../../../editor/common/core/range.js";import{IConfigurationService as z}from"../../../../../platform/configuration/common/configuration.js";import{TestConfigurationService as B}from"../../../../../platform/configuration/test/common/testConfigurationService.js";import{ModelService as H}from"../../../../../editor/common/services/modelService.js";import{IModelService as J}from"../../../../../editor/common/services/model.js";import{IReplaceService as q}from"../../browser/replace.js";import{IThemeService as X}from"../../../../../platform/theme/common/themeService.js";import{TestThemeService as Y}from"../../../../../platform/theme/test/common/testThemeService.js";import{IUriIdentityService as Z}from"../../../../../platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as _}from"../../../../../platform/uriIdentity/common/uriIdentityService.js";import{FileService as ee}from"../../../../../platform/files/common/fileService.js";import{ILogService as te,NullLogService as D}from"../../../../../platform/log/common/log.js";import{ILabelService as re}from"../../../../../platform/label/common/label.js";import{MockLabelService as oe}from"../../../../services/label/test/common/mockLabelService.js";import{INotebookEditorService as ce}from"../../../notebook/browser/services/notebookEditorService.js";import{IEditorGroupsService as ae}from"../../../../services/editor/common/editorGroupsService.js";import{TestEditorGroupsService as se,TestEditorService as le}from"../../../../test/browser/workbenchTestServices.js";import{NotebookEditorWidgetService as ne}from"../../../notebook/browser/services/notebookEditorServiceImpl.js";import"../../../notebook/browser/notebookBrowser.js";import{CellKind as N}from"../../../notebook/common/notebookCommon.js";import{addToSearchResult as p,createFileUriFromPathFromRoot as v,getRootName as A}from"./searchTestCommon.js";import"../../browser/notebookSearch/searchNotebookHelpers.js";import{IContextKeyService as ie}from"../../../../../platform/contextkey/common/contextkey.js";import{MockContextKeyService as de}from"../../../../../platform/keybinding/test/common/mockKeybindingService.js";import{IEditorService as he}from"../../../../services/editor/common/editorService.js";import{ensureNoDisposablesAreLeakedInTestSuite as ue}from"../../../../../base/test/common/utils.js";const s=new l(1,0,1);suite("SearchResult",()=>{let h;const u=ue();setup(()=>{h=new L,h.stub(G,$),h.stub(J,P(h)),h.stub(ce,W(h));const e=new ee(new D);u.add(e);const t=new _(e);u.add(t),h.stub(Z,t),h.stubPromise(q,{}),h.stub(q,"replace",()=>Promise.resolve(null)),h.stub(re,new oe),h.stub(te,new D)}),teardown(()=>{h.dispose()}),test("Line Match",function(){const e=M("folder/file.txt",null),t=new T(e,["0 foo bar"],new l(0,2,5),new l(1,0,5),!1);r.strictEqual(t.text(),"0 foo bar"),r.strictEqual(t.range().startLineNumber,2),r.strictEqual(t.range().endLineNumber,2),r.strictEqual(t.range().startColumn,1),r.strictEqual(t.range().endColumn,6),r.strictEqual(t.id(),"file:///folder/file.txt>[2,1 -> 2,6]foo"),r.strictEqual(t.fullMatchText(),"foo"),r.strictEqual(t.fullMatchText(!0),"0 foo bar")}),test("Line Match - Remove",function(){const e=M("folder/file.txt",d(),new c("foo bar",new l(1,0,3))),t=e.matches()[0];e.remove(t),r.strictEqual(e.matches().length,0)}),test("File Match",function(){let e=M("folder/file.txt",d());r.strictEqual(e.matches().length,0),r.strictEqual(e.resource.toString(),"file:///folder/file.txt"),r.strictEqual(e.name(),"file.txt"),e=M("file.txt",d()),r.strictEqual(e.matches().length,0),r.strictEqual(e.resource.toString(),"file:///file.txt"),r.strictEqual(e.name(),"file.txt")}),test("File Match: Select an existing match",function(){const e=M("folder/file.txt",d(),new c("foo",new l(1,0,3)),new c("bar",new l(1,5,3)));e.setSelectedMatch(e.matches()[0]),r.strictEqual(e.matches()[0],e.getSelectedMatch())}),test("File Match: Select non existing match",function(){const e=M("folder/file.txt",d(),new c("foo",new l(1,0,3)),new c("bar",new l(1,5,3))),t=e.matches()[0];e.remove(t),e.setSelectedMatch(t),r.strictEqual(e.getSelectedMatch(),null)}),test("File Match: isSelected return true for selected match",function(){const e=M("folder/file.txt",d(),new c("foo",new l(1,0,3)),new c("bar",new l(1,5,3))),t=e.matches()[0];e.setSelectedMatch(t),r.ok(e.isMatchSelected(t))}),test("File Match: isSelected return false for un-selected match",function(){const e=M("folder/file.txt",d(),new c("foo",new l(1,0,3)),new c("bar",new l(1,5,3)));e.setSelectedMatch(e.matches()[0]),r.ok(!e.isMatchSelected(e.matches()[1]))}),test("File Match: unselect",function(){const e=M("folder/file.txt",d(),new c("foo",new l(1,0,3)),new c("bar",new l(1,5,3)));e.setSelectedMatch(e.matches()[0]),e.setSelectedMatch(null),r.strictEqual(null,e.getSelectedMatch())}),test("File Match: unselect when not selected",function(){const e=M("folder/file.txt",d(),new c("foo",new l(1,0,3)),new c("bar",new l(1,5,3)));e.setSelectedMatch(null),r.strictEqual(null,e.getSelectedMatch())}),test("Match -> FileMatch -> SearchResult hierarchy exists",function(){const e=h.createInstance(j);u.add(e);const t=h.createInstance(U,e);u.add(t);const o=M("far/boo",t),a=new T(o,["foo bar"],new l(0,0,3),new l(1,0,3),!1);r(a.parent()===o),r(o.parent()===t.folderMatches()[0])}),test("Adding a raw match will add a file match with line matches",function(){const e=d(),t=[n("/1",new c("preview 1",new l(1,1,4)),new c("preview 1",new l(1,4,11)),new c("preview 2",s))];p(e,t),r.strictEqual(3,e.count());const o=e.matches();r.strictEqual(1,o.length),r.strictEqual(x.file(`${A()}/1`).toString(),o[0].resource.toString());const a=o[0].matches();r.strictEqual(3,a.length),r.strictEqual("preview 1",a[0].text()),r.ok(new E(2,2,2,5).equalsRange(a[0].range())),r.strictEqual("preview 1",a[1].text()),r.ok(new E(2,5,2,12).equalsRange(a[1].range())),r.strictEqual("preview 2",a[2].text()),r.ok(new E(2,1,2,2).equalsRange(a[2].range()))}),test("Adding multiple raw matches",function(){const e=d(),t=[n("/1",new c("preview 1",new l(1,1,4)),new c("preview 1",new l(1,4,11))),n("/2",new c("preview 2",s))];p(e,t),r.strictEqual(3,e.count());const o=e.matches();r.strictEqual(2,o.length),r.strictEqual(x.file(`${A()}/1`).toString(),o[0].resource.toString());let a=o[0].matches();r.strictEqual(2,a.length),r.strictEqual("preview 1",a[0].text()),r.ok(new E(2,2,2,5).equalsRange(a[0].range())),r.strictEqual("preview 1",a[1].text()),r.ok(new E(2,5,2,12).equalsRange(a[1].range())),a=o[1].matches(),r.strictEqual(1,a.length),r.strictEqual("preview 2",a[0].text()),r.ok(new E(2,1,2,2).equalsRange(a[0].range()))}),test("Test that notebook matches get added correctly",function(){const e=d(),t={cellKind:N.Code},o={cellKind:N.Code};m.stub(V.prototype,"addContext");const a=m.spy(Q.prototype,"addFileMatch"),f=C("/1",{cell:t,index:0,contentResults:[new c("preview 1",new l(1,1,4))],webviewResults:[new c("preview 1",new l(1,4,11)),new c("preview 2",s)]}),w=C("/2",{cell:o,index:0,contentResults:[new c("preview 1",new l(1,1,4))],webviewResults:[new c("preview 1",new l(1,4,11)),new c("preview 2",s)]});p(e,[f,w]),r.strictEqual(6,e.count()),r.deepStrictEqual(f.cellResults[0].contentResults,a.getCall(0).args[0][0].cellResults[0].contentResults),r.deepStrictEqual(f.cellResults[0].webviewResults,a.getCall(0).args[0][0].cellResults[0].webviewResults),r.deepStrictEqual(w.cellResults[0].contentResults,a.getCall(0).args[0][1].cellResults[0].contentResults),r.deepStrictEqual(w.cellResults[0].webviewResults,a.getCall(0).args[0][1].cellResults[0].webviewResults)}),test("Dispose disposes matches",function(){const e=m.spy(),t=m.spy(),o=d();p(o,[n("/1",new c("preview 1",s)),n("/2",new c("preview 2",s))]),u.add(o.matches()[0].onDispose(e)),u.add(o.matches()[1].onDispose(t)),o.dispose(),r.ok(o.isEmpty()),r.ok(e.calledOnce),r.ok(t.calledOnce)}),test("remove triggers change event",function(){const e=m.spy(),t=d();p(t,[n("/1",new c("preview 1",s))]);const o=t.matches()[0];u.add(t.onChange(e)),t.remove(o),r.ok(e.calledOnce),r.deepStrictEqual([{elements:[o],removed:!0}],e.args[0])}),test("remove array triggers change event",function(){const e=m.spy(),t=d();p(t,[n("/1",new c("preview 1",s)),n("/2",new c("preview 2",s))]);const o=t.matches();u.add(t.onChange(e)),t.remove(o),r.ok(e.calledOnce),r.deepStrictEqual([{elements:o,removed:!0}],e.args[0])}),test("Removing all line matches and adding back will add file back to result",function(){const e=d();p(e,[n("/1",new c("preview 1",s))]);const t=e.matches()[0],o=t.matches()[0];t.remove(o),r.ok(e.isEmpty()),t.add(o,!0),r.strictEqual(1,e.fileCount()),r.strictEqual(t,e.matches()[0])}),test("replace should remove the file match",function(){const e=Promise.resolve(null);h.stub(q,"replace",e);const t=d();return p(t,[n("/1",new c("preview 1",s))]),t.replace(t.matches()[0]),e.then(()=>r.ok(t.isEmpty()))}),test("replace should trigger the change event",function(){const e=m.spy(),t=Promise.resolve(null);h.stub(q,"replace",t);const o=d();p(o,[n("/1",new c("preview 1",s))]),u.add(o.onChange(e));const a=o.matches()[0];return o.replace(a),t.then(()=>{r.ok(e.calledOnce),r.deepStrictEqual([{elements:[a],removed:!0}],e.args[0])})}),test("replaceAll should remove all file matches",function(){const e=Promise.resolve(null);h.stubPromise(q,"replace",e);const t=d();return p(t,[n("/1",new c("preview 1",s)),n("/2",new c("preview 2",s))]),t.replaceAll(null),e.then(()=>r.ok(t.isEmpty()))}),test("batchRemove should trigger the onChange event correctly",function(){const e=m.spy(),t=O(),o=t.folderMatches()[0],a=t.folderMatches()[1].allDownstreamFileMatches()[0],f=t.folderMatches()[1].allDownstreamFileMatches()[1].matches()[0],w=[o,a,f],b=o.allDownstreamFileMatches().concat([a,f.parent()]);u.add(t.onChange(e)),t.batchRemove(w),r.ok(e.calledOnce),r.deepStrictEqual([{elements:b,removed:!0,added:!1}],e.args[0])}),test("batchReplace should trigger the onChange event correctly",async function(){const e=m.spy();h.stub(q,"replace",S=>(Array.isArray(S)?e(S[0]):e(S),Promise.resolve()));const t=m.spy(),o=O(),a=o.folderMatches()[0],f=o.folderMatches()[1].allDownstreamFileMatches()[0],w=o.folderMatches()[1].allDownstreamFileMatches()[1].matches()[0],b=a.allDownstreamFileMatches()[0],F=[a,f,w];u.add(o.onChange(t)),await o.batchReplace(F),r.ok(t.calledOnce),m.assert.calledThrice(e),m.assert.calledWith(e.firstCall,b),m.assert.calledWith(e.secondCall,f),m.assert.calledWith(e.thirdCall,w)}),test("Creating a model with nested folders should create the correct structure",function(){const e=y(),t=e.folderMatches()[0],o=e.folderMatches()[1],a=e.folderMatches()[2],f=e.folderMatches()[3],w=t.allDownstreamFileMatches();r.deepStrictEqual(w,[...t.fileMatchesIterator(),...i(t,0).fileMatchesIterator()]),r.deepStrictEqual(i(t,0).allDownstreamFileMatches(),Array.from(i(t,0).fileMatchesIterator())),r.deepStrictEqual(R(i(t,0),0).parent(),i(t,0)),r.deepStrictEqual(i(t,0).parent(),t),r.deepStrictEqual(i(t,0).closestRoot,t),w.forEach(I=>{r.deepStrictEqual(I.closestRoot,t)});const b=o.allDownstreamFileMatches();r.deepStrictEqual(o.allDownstreamFileMatches(),[...o.fileMatchesIterator(),...i(o,0).fileMatchesIterator()]),r.deepStrictEqual(R(i(o,0),0).parent(),i(o,0)),b.forEach(I=>{r.deepStrictEqual(I.closestRoot,o)});const F=a.allDownstreamFileMatches();r.deepStrictEqual(F,Array.from(a.fileMatchesIterator())),r.deepStrictEqual(R(a,0).parent(),a),r.deepStrictEqual(R(a,0).closestRoot,a);const S=f.allDownstreamFileMatches(),g=i(i(f,0),0);r.deepStrictEqual(S,[...f.fileMatchesIterator(),...i(g,0).fileMatchesIterator(),...i(g,1).fileMatchesIterator()].flat()),r.deepStrictEqual(g.allDownstreamFileMatches(),i(f,0).allDownstreamFileMatches()),r.deepStrictEqual(R(i(g,1),0).parent(),i(g,1)),r.deepStrictEqual(i(g,1).parent(),g),r.deepStrictEqual(g.parent(),i(f,0)),S.forEach(I=>{r.deepStrictEqual(I.closestRoot,f)})}),test("Removing an intermediate folder should call OnChange() on all downstream file matches",function(){const e=m.spy(),t=y(),o=i(i(i(t.folderMatches()[3],0),0),0),a=o.allDownstreamFileMatches();u.add(t.onChange(e)),t.remove(o),r.ok(e.calledOnce),r.deepStrictEqual([{elements:a,removed:!0,added:!1,clearingAll:!1}],e.args[0])}),test("Replacing an intermediate folder should remove all downstream folders and file matches",async function(){const e=m.spy(),t=y(),o=i(t.folderMatches()[3],0),a=o.allDownstreamFileMatches();u.add(t.onChange(e)),await t.batchReplace([o]),r.deepStrictEqual([{elements:a,removed:!0,added:!1}],e.args[0])});function M(e,t,...o){t||(t=d());const a={resource:x.file("/"+e),results:o},f=t?.folderMatches()[0],w=h.createInstance(K,{pattern:""},void 0,void 0,f,a,null,"");return w.createMatches(!1),u.add(w),w}function d(){const e=h.createInstance(j);return u.add(e),e.searchResult.query={type:k.Text,folderQueries:[{folder:v()}],contentPattern:{pattern:""}},e.searchResult}function n(e,...t){return{resource:v(e),results:t}}function C(e,...t){return{resource:v(e),cellResults:t}}function P(e){e.stub(X,new Y);const t=new B;t.setUserConfiguration("search",{searchOnType:!0}),e.stub(z,t);const o=e.createInstance(H);return u.add(o),o}function W(e){e.stub(ae,new se),e.stub(ie,new de),e.stub(he,u.add(new le));const t=e.createInstance(ne);return u.add(t),t}function O(){const e=d();return e.query={type:k.Text,contentPattern:{pattern:"foo"},folderQueries:[{folder:v("/voo")},{folder:v("/with")}]},p(e,[n("/voo/foo.a",new c("preview 1",s),new c("preview 2",s)),n("/with/path/bar.b",new c("preview 3",s)),n("/with/path.c",new c("preview 4",s),new c("preview 5",s))]),e}function y(){const e=d();return e.query={type:k.Text,contentPattern:{pattern:"foo"},folderQueries:[{folder:v("/voo")},{folder:v("/with")},{folder:v("/with/test")},{folder:v("/eep")}]},p(e,[n("/voo/foo.a",new c("preview 1",s),new c("preview 2",s)),n("/voo/beep/foo.c",new c("preview 1",s),new c("preview 2",s)),n("/voo/beep/boop.c",new c("preview 3",s)),n("/with/path.c",new c("preview 4",s),new c("preview 5",s)),n("/with/path/bar.b",new c("preview 3",s)),n("/with/test/woo.c",new c("preview 3",s)),n("/eep/bar/goo/foo/here.txt",new c("preview 6",s),new c("preview 7",s)),n("/eep/bar/goo/ooo/there.txt",new c("preview 6",s),new c("preview 7",s)),n("/eep/eyy.y",new c("preview 6",s),new c("preview 7",s))]),e}function i(e,t){return Array.from(e.folderMatchesIterator())[t]}function R(e,t){return Array.from(e.fileMatchesIterator())[t]}});
