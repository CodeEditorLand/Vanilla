import{KeyChord as E,KeyCode as m,KeyMod as i}from"../../../../base/common/keyCodes.js";import"./media/review.css";import{isCodeEditor as S,isDiffEditor as M}from"../../../../editor/browser/editorBrowser.js";import{EditorContributionInstantiation as N,registerEditorContribution as F}from"../../../../editor/browser/editorExtensions.js";import{ICodeEditorService as h}from"../../../../editor/browser/services/codeEditorService.js";import*as a from"../../../../nls.js";import{CommandsRegistry as f}from"../../../../platform/commands/common/commands.js";import"../../../../platform/instantiation/common/instantiation.js";import{KeybindingsRegistry as l,KeybindingWeight as s}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{ICommentService as H}from"./commentService.js";import{ctxCommentEditorFocused as y,SimpleCommentEditor as A}from"./simpleCommentEditor.js";import{IEditorService as z}from"../../../services/editor/common/editorService.js";import{MenuId as c,MenuRegistry as C}from"../../../../platform/actions/common/actions.js";import{EditorContextKeys as b}from"../../../../editor/common/editorContextKeys.js";import{CommentController as g,ID as k}from"./commentsController.js";import{Range as W}from"../../../../editor/common/core/range.js";import{INotificationService as D}from"../../../../platform/notification/common/notification.js";import{CommentContextKeys as d}from"../common/commentContextKeys.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED as R}from"../../../../platform/accessibility/common/accessibility.js";import{ContextKeyExpr as p}from"../../../../platform/contextkey/common/contextkey.js";import{accessibilityHelpIsShown as I,accessibleViewCurrentProviderId as w}from"../../accessibility/browser/accessibilityConfiguration.js";import{CommentCommandId as n}from"../common/commentCommandIds.js";import{registerWorkbenchContribution2 as L,WorkbenchPhase as U}from"../../../common/contributions.js";import{CommentsInputContentProvider as P}from"./commentsInputContentProvider.js";import{AccessibleViewProviderId as x}from"../../../../platform/accessibility/browser/accessibleView.js";F(k,g,N.AfterFirstRender),L(P.ID,P,U.BlockRestore),l.registerCommandAndKeybindingRule({id:n.NextThread,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();r.nextCommentThread()},weight:s.EditorContrib,primary:i.Alt|m.F9}),l.registerCommandAndKeybindingRule({id:n.PreviousThread,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();r.previousCommentThread()},weight:s.EditorContrib,primary:i.Shift|i.Alt|m.F9}),l.registerCommandAndKeybindingRule({id:n.NextRange,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();r.nextCommentingRange()},when:p.and(R,p.or(b.focus,d.commentFocused,p.and(I,w.isEqualTo(x.Comments)))),primary:E(i.CtrlCmd|m.KeyK,i.CtrlCmd|i.Alt|m.DownArrow),weight:s.EditorContrib}),C.appendMenuItem(c.CommandPalette,{command:{id:n.NextRange,title:a.localize("comments.nextCommentingRange","Go to Next Commenting Range"),category:"Comments"},when:d.activeEditorHasCommentingRange}),l.registerCommandAndKeybindingRule({id:n.PreviousRange,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();r.previousCommentingRange()},when:p.and(R,p.or(b.focus,d.commentFocused,p.and(I,w.isEqualTo(x.Comments)))),primary:E(i.CtrlCmd|m.KeyK,i.CtrlCmd|i.Alt|m.UpArrow),weight:s.EditorContrib}),C.appendMenuItem(c.CommandPalette,{command:{id:n.PreviousRange,title:a.localize("comments.previousCommentingRange","Go to Previous Commenting Range"),category:"Comments"},when:d.activeEditorHasCommentingRange}),f.registerCommand({id:n.ToggleCommenting,handler:o=>{const e=o.get(H),t=e.isCommentingEnabled;e.enableCommenting(!t)}}),C.appendMenuItem(c.CommandPalette,{command:{id:n.ToggleCommenting,title:a.localize("comments.toggleCommenting","Toggle Editor Commenting"),category:"Comments"},when:d.WorkspaceHasCommenting}),l.registerCommandAndKeybindingRule({id:n.Add,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();const K=e?.range?new W(e.range.startLineNumber,e.range.startLineNumber,e.range.endLineNumber,e.range.endColumn):e?.fileComment?void 0:t.getSelection(),T=o.get(D);try{await r.addOrToggleCommentAtLine(K,void 0)}catch{T.error(a.localize("comments.addCommand.error","The cursor must be within a commenting range to add a comment"))}},weight:s.EditorContrib,primary:E(i.CtrlCmd|m.KeyK,i.CtrlCmd|i.Alt|m.KeyC)}),C.appendMenuItem(c.CommandPalette,{command:{id:n.Add,title:a.localize("comments.addCommand","Add Comment on Current Selection"),category:"Comments"},when:d.activeCursorHasCommentingRange}),f.registerCommand({id:n.CollapseAll,handler:o=>v(o)?.collapseAll()}),C.appendMenuItem(c.CommandPalette,{command:{id:n.CollapseAll,title:a.localize("comments.collapseAll","Collapse All Comments"),category:"Comments"},when:d.WorkspaceHasCommenting}),f.registerCommand({id:n.ExpandAll,handler:o=>v(o)?.expandAll()}),C.appendMenuItem(c.CommandPalette,{command:{id:n.ExpandAll,title:a.localize("comments.expandAll","Expand All Comments"),category:"Comments"},when:d.WorkspaceHasCommenting}),f.registerCommand({id:n.ExpandUnresolved,handler:o=>v(o)?.expandUnresolved()}),C.appendMenuItem(c.CommandPalette,{command:{id:n.ExpandUnresolved,title:a.localize("comments.expandUnresolved","Expand Unresolved Comments"),category:"Comments"},when:d.WorkspaceHasCommenting}),l.registerCommandAndKeybindingRule({id:n.Submit,weight:s.EditorContrib,primary:i.CtrlCmd|m.Enter,when:y,handler:(o,e)=>{const t=o.get(h).getFocusedCodeEditor();t instanceof A&&t.getParentThread().submitComment()}}),l.registerCommandAndKeybindingRule({id:n.Hide,weight:s.EditorContrib,primary:m.Escape,secondary:[i.Shift|m.Escape],when:y,handler:(o,e)=>{const t=o.get(h).getFocusedCodeEditor();t instanceof A&&t.getParentThread().collapse()}});function u(o){let e=o.get(z).activeTextEditorControl;return M(e)&&(e.getOriginalEditor().hasTextFocus()?e=e.getOriginalEditor():e=e.getModifiedEditor()),!S(e)||!e.hasModel()?null:e}function v(o){const e=u(o);if(!e)return;const t=g.get(e);if(t)return t}export{u as getActiveEditor};
