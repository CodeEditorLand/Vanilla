import t from"assert";import{DisposableStore as p}from"../../../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as S}from"../../../../../base/test/common/utils.js";import{IConfigurationService as m}from"../../../../../platform/configuration/common/configuration.js";import{TestConfigurationService as E}from"../../../../../platform/configuration/test/common/testConfigurationService.js";import"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{CellKind as l,NotebookSetting as d}from"../../common/notebookCommon.js";import{createNotebookCellList as i,setupInstantiationService as h,withTestNotebook as c}from"./testNotebookEditor.js";suite("NotebookCellList",()=>{let u,o;teardown(()=>{u.dispose()}),S();let n;setup(()=>{u=new p,o=h(u),n=new E,o.stub(m,n)}),test("revealElementsInView: reveal fully visible cell should not scroll",async function(){await c([["# header a","markdown",l.Markup,[],{}],["var b = 1;","javascript",l.Code,[],{}],["# header b","markdown",l.Markup,[],{}],["var b = 2;","javascript",l.Code,[],{}],["# header c","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1,!1,!1,!1,!1],cellLineNumberStates:{},editorViewStates:[null,null,null,null,null],cellTotalHeights:[50,100,50,100,50],collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.attachViewModel(a),e.layout(210,100),e.scrollTop=5,t.deepStrictEqual(e.scrollTop,5),t.deepStrictEqual(e.getViewScrollBottom(),215),e.revealCells({start:1,end:2}),t.deepStrictEqual(e.scrollTop,5),t.deepStrictEqual(e.getViewScrollBottom(),215),e.revealCells({start:2,end:3}),t.deepStrictEqual(e.scrollTop,5),t.deepStrictEqual(e.getViewScrollBottom(),215),e.revealCells({start:3,end:4}),t.deepStrictEqual(e.scrollTop,90)})}),test("revealElementsInView: reveal partially visible cell",async function(){await c([["# header a","markdown",l.Markup,[],{}],["var b = 1;","javascript",l.Code,[],{}],["# header b","markdown",l.Markup,[],{}],["var b = 2;","javascript",l.Code,[],{}],["# header c","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1,!1,!1,!1,!1],editorViewStates:[null,null,null,null,null],cellTotalHeights:[50,100,50,100,50],cellLineNumberStates:{},collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.attachViewModel(a),e.layout(210,100),t.deepStrictEqual(e.scrollTop,0),t.deepStrictEqual(e.getViewScrollBottom(),210),e.revealCells({start:3,end:4}),t.deepStrictEqual(e.scrollTop,90),e.scrollTop=5,t.deepStrictEqual(e.scrollTop,5),t.deepStrictEqual(e.getViewScrollBottom(),215),e.revealCells({start:0,end:1}),t.deepStrictEqual(e.scrollTop,0)})}),test("revealElementsInView: reveal cell out of viewport",async function(){await c([["# header a","markdown",l.Markup,[],{}],["var b = 1;","javascript",l.Code,[],{}],["# header b","markdown",l.Markup,[],{}],["var b = 2;","javascript",l.Code,[],{}],["# header c","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1,!1,!1,!1,!1],editorViewStates:[null,null,null,null,null],cellTotalHeights:[50,100,50,100,50],cellLineNumberStates:{},collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.updateOptions({paddingBottom:100}),e.attachViewModel(a),e.layout(210,100),t.deepStrictEqual(e.scrollTop,0),t.deepStrictEqual(e.getViewScrollBottom(),210),e.revealCells({start:4,end:5}),t.deepStrictEqual(e.scrollTop,140)})}),test("updateElementHeight",async function(){await c([["# header a","markdown",l.Markup,[],{}],["var b = 1;","javascript",l.Code,[],{}],["# header b","markdown",l.Markup,[],{}],["var b = 2;","javascript",l.Code,[],{}],["# header c","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1,!1,!1,!1,!1],editorViewStates:[null,null,null,null,null],cellTotalHeights:[50,100,50,100,50],cellLineNumberStates:{},collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.attachViewModel(a),e.layout(210,100),t.deepStrictEqual(e.scrollTop,0),t.deepStrictEqual(e.getViewScrollBottom(),210),e.updateElementHeight(0,60),t.deepStrictEqual(e.scrollTop,0),e.scrollTop=5,t.deepStrictEqual(e.scrollTop,5),t.deepStrictEqual(e.getViewScrollBottom(),215),e.updateElementHeight(0,80),t.deepStrictEqual(e.scrollTop,5)})}),test("updateElementHeight with anchor",async function(){await c([["# header a","markdown",l.Markup,[],{}],["var b = 1;","javascript",l.Code,[],{}],["# header b","markdown",l.Markup,[],{}],["var b = 2;","javascript",l.Code,[],{}],["# header c","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1,!1,!1,!1,!1],editorViewStates:[null,null,null,null,null],cellTotalHeights:[50,100,50,100,50],cellLineNumberStates:{},collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.attachViewModel(a),e.layout(210,100),t.deepStrictEqual(e.scrollTop,0),t.deepStrictEqual(e.getViewScrollBottom(),210),e.updateElementHeight2(a.cellAt(0),50),e.scrollTop=5,t.deepStrictEqual(e.scrollTop,5),t.deepStrictEqual(e.getViewScrollBottom(),215),e.setFocus([1]),e.updateElementHeight2(a.cellAt(0),100),t.deepStrictEqual(e.scrollHeight,400),t.deepStrictEqual(e.scrollTop,5),t.deepStrictEqual(e.getViewScrollBottom(),215),e.updateElementHeight2(a.cellAt(0),150),t.deepStrictEqual(e.scrollTop,55),t.deepStrictEqual(e.getViewScrollBottom(),265),e.updateElementHeight2(a.cellAt(0),50),t.deepStrictEqual(e.scrollTop,55),t.deepStrictEqual(e.getViewScrollBottom(),265),e.updateElementHeight2(a.cellAt(0),250),t.deepStrictEqual(e.scrollTop,350-e.renderHeight),t.deepStrictEqual(e.getViewScrollBottom(),350-e.renderHeight+210)})}),test("updateElementHeight with no scrolling",async function(){n.setUserConfiguration(d.scrollToRevealCell,"none"),await c([["# header a","markdown",l.Markup,[],{}],["var b = 1;","javascript",l.Code,[],{}],["# header b","markdown",l.Markup,[],{}],["var b = 2;","javascript",l.Code,[],{}],["# header c","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1,!1,!1,!1,!1],editorViewStates:[null,null,null,null,null],cellTotalHeights:[50,100,50,100,50],cellLineNumberStates:{},collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.attachViewModel(a),e.layout(210,100),t.deepStrictEqual(e.scrollTop,0),t.deepStrictEqual(e.getViewScrollBottom(),210),e.updateElementHeight2(a.cellAt(0),50),e.scrollTop=5,t.deepStrictEqual(e.scrollTop,5),t.deepStrictEqual(e.getViewScrollBottom(),215),e.setFocus([1]),e.updateElementHeight2(a.cellAt(0),100),t.deepStrictEqual(e.scrollHeight,400),t.deepStrictEqual(e.scrollTop,5),e.updateElementHeight2(a.cellAt(0),50),t.deepStrictEqual(e.scrollTop,5),e.updateElementHeight2(a.cellAt(0),250),t.deepStrictEqual(e.scrollTop,5)})}),test("updateElementHeight with no scroll setting and cell editor focused",async function(){n.setUserConfiguration(d.scrollToRevealCell,"none"),await c([["# header a","markdown",l.Markup,[],{}],["var b = 1;","javascript",l.Code,[],{}],["# header b","markdown",l.Markup,[],{}],["var b = 2;","javascript",l.Code,[],{}],["# header c","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1,!1,!1,!1,!1],editorViewStates:[null,null,null,null,null],cellTotalHeights:[50,100,50,100,50],cellLineNumberStates:{},collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.attachViewModel(a),e.layout(210,100),t.deepStrictEqual(e.scrollTop,0),t.deepStrictEqual(e.getViewScrollBottom(),210),e.setFocus([1]),s.focusNotebookCell(e.viewModel?.cellAt(1),"editor"),e.updateElementHeight2(a.cellAt(0),100),t.deepStrictEqual(e.scrollHeight,400),t.deepStrictEqual(e.scrollTop,50),e.updateElementHeight2(a.cellAt(0),50),t.deepStrictEqual(e.scrollTop,0),e.updateElementHeight2(a.cellAt(0),250),t.deepStrictEqual(e.scrollTop,350-e.renderHeight)})}),test("updateElementHeight with focused element out of viewport",async function(){await c([["# header a","markdown",l.Markup,[],{}],["var b = 1;","javascript",l.Code,[],{}],["# header b","markdown",l.Markup,[],{}],["var b = 2;","javascript",l.Code,[],{}],["# header c","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1,!1,!1,!1,!1],editorViewStates:[null,null,null,null,null],cellTotalHeights:[50,100,50,100,50],cellLineNumberStates:{},collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.attachViewModel(a),e.layout(210,100),t.deepStrictEqual(e.scrollTop,0),t.deepStrictEqual(e.getViewScrollBottom(),210),e.setFocus([4]),e.updateElementHeight2(a.cellAt(1),130),t.deepStrictEqual(e.scrollTop,0)})}),test("updateElementHeight of cells out of viewport should not trigger scroll #121140",async function(){await c([["# header a","markdown",l.Markup,[],{}],["var b = 1;","javascript",l.Code,[],{}],["# header b","markdown",l.Markup,[],{}],["var b = 2;","javascript",l.Code,[],{}],["# header c","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1,!1,!1,!1,!1],editorViewStates:[null,null,null,null,null],cellTotalHeights:[50,100,50,100,50],cellLineNumberStates:{},collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.attachViewModel(a),e.layout(210,100),t.deepStrictEqual(e.scrollTop,0),t.deepStrictEqual(e.getViewScrollBottom(),210),e.setFocus([1]),e.scrollTop=80,t.deepStrictEqual(e.scrollTop,80),e.updateElementHeight2(a.cellAt(0),30),t.deepStrictEqual(e.scrollTop,60)})}),test("visibleRanges should be exclusive of end",async function(){await c([],async(s,a,r)=>{const e=i(o,r);e.attachViewModel(a),e.layout(100,100),t.deepStrictEqual(e.visibleRanges,[])})}),test("visibleRanges should be exclusive of end 2",async function(){await c([["# header a","markdown",l.Markup,[],{}]],async(s,a,r)=>{a.restoreEditorViewState({editingCells:[!1],editorViewStates:[null],cellTotalHeights:[50],cellLineNumberStates:{},collapsedInputCells:{},collapsedOutputCells:{}});const e=i(o,r);e.attachViewModel(a),e.layout(100,100),t.deepStrictEqual(e.visibleRanges,[{start:0,end:1}])})})});
