import F from"assert";import{FileAccess as c}from"../../../../../base/common/network.js";import*as s from"../../../../../base/common/path.js";import{URI as i}from"../../../../../base/common/uri.js";import{flakySuite as m}from"../../../../../base/test/node/testUtils.js";import{isProgressMessage as h,QueryType as r}from"../../common/search.js";import{SearchService as y}from"../../node/rawSearchService.js";const n=s.normalize(c.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath),I=s.normalize(c.asFileUri("vs/workbench/services/search/test/node/fixtures2").fsPath),p=s.join(n,"examples"),Q=s.join(n,"more"),S={folder:i.file(n)},f=[S],u=[{folder:i.file(p),folderName:"examples_folder"},{folder:i.file(Q)}],T=void 0;async function t(e,a){const d=new y,o=[];await d.doFileSearch(e,T,l=>{h(l)||(Array.isArray(l)?o.push(...l):o.push(l))}),F.strictEqual(o.length,a,`rg ${o.length} !== ${a}`)}m("FileSearch-integration",function(){test("File - simple",()=>{const e={type:r.File,folderQueries:f};return t(e,14)}),test("File - filepattern",()=>{const e={type:r.File,folderQueries:f,filePattern:"anotherfile"};return t(e,1)}),test("File - exclude",()=>{const e={type:r.File,folderQueries:f,filePattern:"file",excludePattern:{"**/anotherfolder/**":!0}};return t(e,2)}),test("File - multiroot",()=>{const e={type:r.File,folderQueries:u,filePattern:"file",excludePattern:{"**/anotherfolder/**":!0}};return t(e,2)}),test("File - multiroot with folder name",()=>{const e={type:r.File,folderQueries:u,filePattern:"examples_folder anotherfile"};return t(e,1)}),test("File - multiroot with folder name and sibling exclude",()=>{const e={type:r.File,folderQueries:[{folder:i.file(n),folderName:"folder1"},{folder:i.file(I)}],filePattern:"folder1 site",excludePattern:{"*.css":{when:"$(basename).less"}}};return t(e,1)})});
