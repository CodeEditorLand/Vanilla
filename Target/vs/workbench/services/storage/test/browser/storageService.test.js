import{strictEqual as a}from"assert";import{DisposableStore as u}from"../../../../../base/common/lifecycle.js";import{Schemas as S}from"../../../../../base/common/network.js";import{joinPath as b}from"../../../../../base/common/resources.js";import{URI as E}from"../../../../../base/common/uri.js";import{Storage as l}from"../../../../../base/parts/storage/common/storage.js";import{flakySuite as f}from"../../../../../base/test/common/testUtils.js";import{runWithFakedTimers as y}from"../../../../../base/test/common/timeTravelScheduler.js";import{ensureNoDisposablesAreLeakedInTestSuite as m}from"../../../../../base/test/common/utils.js";import{FileService as I}from"../../../../../platform/files/common/fileService.js";import{InMemoryFileSystemProvider as v}from"../../../../../platform/files/common/inMemoryFilesystemProvider.js";import{NullLogService as p}from"../../../../../platform/log/common/log.js";import{StorageScope as c,StorageTarget as g}from"../../../../../platform/storage/common/storage.js";import{createSuite as B}from"../../../../../platform/storage/test/common/storageService.test.js";import"../../../../../platform/userDataProfile/common/userDataProfile.js";import{BrowserStorageService as P,IndexedDBStorageDatabase as s}from"../../browser/storageService.js";import{UserDataProfileService as R}from"../../../userDataProfile/common/userDataProfileService.js";async function N(){const o=new u,r=new p,t=o.add(new I(r)),e=o.add(new v);o.add(t.registerProvider(S.vscodeUserData,e));const n=E.file("/profiles").with({scheme:S.inMemory}),i=b(n,"extra"),d={id:"id",name:"inMemory",shortName:"inMemory",isDefault:!1,location:i,globalStorageHome:b(i,"globalStorageHome"),settingsResource:b(i,"settingsResource"),keybindingsResource:b(i,"keybindingsResource"),tasksResource:b(i,"tasksResource"),snippetsHome:b(i,"snippetsHome"),extensionsResource:b(i,"extensionsResource"),cacheHome:b(i,"cache")},w=o.add(new P({id:"workspace-storage-test"},o.add(new R(d)),r));return await w.initialize(),[o,w]}f("StorageService (browser)",function(){const o=new u;let r;B({setup:async()=>{const t=await N();return o.add(t[0]),r=t[1],r},teardown:async()=>{await r.clear(),o.clear()}}),m()}),f("StorageService (browser specific)",()=>{const o=new u;let r;setup(async()=>{const t=await N();o.add(t[0]),r=t[1]}),teardown(async()=>{await r.clear(),o.clear()}),test.skip("clear",()=>y({useFakeTimers:!0},async()=>{r.store("bar","foo",c.APPLICATION,g.MACHINE),r.store("bar",3,c.APPLICATION,g.USER),r.store("bar","foo",c.PROFILE,g.MACHINE),r.store("bar",3,c.PROFILE,g.USER),r.store("bar","foo",c.WORKSPACE,g.MACHINE),r.store("bar",3,c.WORKSPACE,g.USER),await r.clear();for(const t of[c.APPLICATION,c.PROFILE,c.WORKSPACE])for(const e of[g.USER,g.MACHINE])a(r.get("bar",t),void 0),a(r.keys(t,e).length,0)})),m()}),f("IndexDBStorageDatabase (browser)",()=>{const o="workspace-storage-db-test",r=new p,t=new u;teardown(async()=>{await t.add(await s.create({id:o},r)).clear(),t.clear()}),test("Basics",async()=>{let e=t.add(new l(t.add(await s.create({id:o},r))));await e.init(),e.set("bar","foo"),e.set("barNumber",55),e.set("barBoolean",!0),e.set("barUndefined",void 0),e.set("barNull",null),a(e.get("bar"),"foo"),a(e.get("barNumber"),"55"),a(e.get("barBoolean"),"true"),a(e.get("barUndefined"),void 0),a(e.get("barNull"),void 0),a(e.size,3),a(e.items.size,3),await e.close(),e=t.add(new l(t.add(await s.create({id:o},r)))),await e.init(),a(e.get("bar"),"foo"),a(e.get("barNumber"),"55"),a(e.get("barBoolean"),"true"),a(e.get("barUndefined"),void 0),a(e.get("barNull"),void 0),a(e.size,3),a(e.items.size,3),e.set("bar","foo2"),e.set("barNumber",552),a(e.get("bar"),"foo2"),a(e.get("barNumber"),"552"),await e.close(),e=t.add(new l(t.add(await s.create({id:o},r)))),await e.init(),a(e.get("bar"),"foo2"),a(e.get("barNumber"),"552"),a(e.get("barBoolean"),"true"),a(e.get("barUndefined"),void 0),a(e.get("barNull"),void 0),a(e.size,3),a(e.items.size,3),e.delete("bar"),e.delete("barNumber"),e.delete("barBoolean"),a(e.get("bar","undefined"),"undefined"),a(e.get("barNumber","undefinedNumber"),"undefinedNumber"),a(e.get("barBoolean","undefinedBoolean"),"undefinedBoolean"),a(e.size,0),a(e.items.size,0),await e.close(),e=t.add(new l(t.add(await s.create({id:o},r)))),await e.init(),a(e.get("bar","undefined"),"undefined"),a(e.get("barNumber","undefinedNumber"),"undefinedNumber"),a(e.get("barBoolean","undefinedBoolean"),"undefinedBoolean"),a(e.size,0),a(e.items.size,0)}),test("Clear",async()=>{let e=t.add(new l(t.add(await s.create({id:o},r))));await e.init(),e.set("bar","foo"),e.set("barNumber",55),e.set("barBoolean",!0),await e.close();const n=t.add(await s.create({id:o},r));e=t.add(new l(n)),await e.init(),await n.clear(),e=t.add(new l(t.add(await s.create({id:o},r)))),await e.init(),a(e.get("bar"),void 0),a(e.get("barNumber"),void 0),a(e.get("barBoolean"),void 0),a(e.size,0),a(e.items.size,0)}),test("Inserts and Deletes at the same time",async()=>{let e=t.add(new l(t.add(await s.create({id:o},r))));await e.init(),e.set("bar","foo"),e.set("barNumber",55),e.set("barBoolean",!0),await e.close(),e=t.add(new l(t.add(await s.create({id:o},r)))),await e.init(),e.set("bar","foobar");const n=JSON.stringify({largeItem:"Hello World".repeat(1e3)});e.set("largeItem",n),e.delete("barNumber"),e.delete("barBoolean"),await e.close(),e=t.add(new l(t.add(await s.create({id:o},r)))),await e.init(),a(e.get("bar"),"foobar"),a(e.get("largeItem"),n),a(e.get("barNumber"),void 0),a(e.get("barBoolean"),void 0)}),test("Storage change event",async()=>{const e=t.add(new l(t.add(await s.create({id:o},r))));let n=[];t.add(e.onDidChangeStorage(d=>n.push(d))),await e.init(),e.set("notExternal",42);let i=n.find(d=>d.key==="notExternal");a(i?.external,!1),n=[],e.set("isExternal",42,!0),i=n.find(d=>d.key==="isExternal"),a(i?.external,!0),e.delete("notExternal"),i=n.find(d=>d.key==="notExternal"),a(i?.external,!1),e.delete("isExternal",!0),i=n.find(d=>d.key==="isExternal"),a(i?.external,!0)}),m()});
