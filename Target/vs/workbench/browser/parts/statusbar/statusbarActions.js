import{localize as m,localize2 as h}from"../../../../nls.js";import{IStatusbarService as s}from"../../../services/statusbar/browser/statusbar.js";import{Action as u}from"../../../../base/common/actions.js";import{Parts as f,IWorkbenchLayoutService as g}from"../../../services/layout/browser/layoutService.js";import{KeyCode as i}from"../../../../base/common/keyCodes.js";import{KeybindingsRegistry as o,KeybindingWeight as c}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import"../../../../editor/browser/editorExtensions.js";import{Action2 as l,registerAction2 as v}from"../../../../platform/actions/common/actions.js";import{Categories as S}from"../../../../platform/action/common/actionCommonCategories.js";import{IEditorService as b}from"../../../services/editor/common/editorService.js";import"./statusbarModel.js";import{StatusBarFocused as n}from"../../../common/contextkeys.js";import{getActiveWindow as y}from"../../../../base/browser/dom.js";class I extends u{constructor(t,a,d){super(t,a,void 0,!0);this.model=d;this.checked=!d.isHidden(t)}async run(){this.model.isHidden(this.id)?this.model.show(this.id):this.model.hide(this.id)}}class L extends u{constructor(t,a,d){super(t,m("hide","Hide '{0}'",a),void 0,!0);this.model=d}async run(){this.model.hide(this.id)}}o.registerCommandAndKeybindingRule({id:"workbench.statusBar.focusPrevious",weight:c.WorkbenchContrib,primary:i.LeftArrow,secondary:[i.UpArrow],when:n,handler:r=>{r.get(s).focusPreviousEntry()}}),o.registerCommandAndKeybindingRule({id:"workbench.statusBar.focusNext",weight:c.WorkbenchContrib,primary:i.RightArrow,secondary:[i.DownArrow],when:n,handler:r=>{r.get(s).focusNextEntry()}}),o.registerCommandAndKeybindingRule({id:"workbench.statusBar.focusFirst",weight:c.WorkbenchContrib,primary:i.Home,when:n,handler:r=>{const e=r.get(s);e.focus(!1),e.focusNextEntry()}}),o.registerCommandAndKeybindingRule({id:"workbench.statusBar.focusLast",weight:c.WorkbenchContrib,primary:i.End,when:n,handler:r=>{const e=r.get(s);e.focus(!1),e.focusPreviousEntry()}}),o.registerCommandAndKeybindingRule({id:"workbench.statusBar.clearFocus",weight:c.WorkbenchContrib,primary:i.Escape,when:n,handler:r=>{const e=r.get(s),t=r.get(b);e.isEntryFocused()?e.focus(!1):t.activeEditorPane&&t.activeEditorPane.focus()}});class p extends l{constructor(){super({id:"workbench.action.focusStatusBar",title:h("focusStatusBar","Focus Status Bar"),category:S.View,f1:!0})}async run(e){e.get(g).focusPart(f.STATUSBAR_PART,y())}}v(p);export{L as HideStatusbarEntryAction,I as ToggleStatusbarEntryVisibilityAction};
