import n from"assert";import{Event as a}from"../../../../base/common/event.js";import{DisposableStore as x,ImmortalReference as C}from"../../../../base/common/lifecycle.js";import{URI as h}from"../../../../base/common/uri.js";import{mock as m}from"../../../../base/test/common/mock.js";import{ensureNoDisposablesAreLeakedInTestSuite as P}from"../../../../base/test/common/utils.js";import{IBulkEditService as M}from"../../../../editor/browser/services/bulkEditService.js";import{ICodeEditorService as W}from"../../../../editor/browser/services/codeEditorService.js";import{EditOperation as D}from"../../../../editor/common/core/editOperation.js";import{Position as O}from"../../../../editor/common/core/position.js";import{Range as g}from"../../../../editor/common/core/range.js";import"../../../../editor/common/model.js";import{IEditorWorkerService as b}from"../../../../editor/common/services/editorWorker.js";import{IModelService as U}from"../../../../editor/common/services/model.js";import{ModelService as L}from"../../../../editor/common/services/modelService.js";import{ITextModelService as F}from"../../../../editor/common/services/resolverService.js";import{TestCodeEditorService as N}from"../../../../editor/test/browser/editorTestServices.js";import{IConfigurationService as q}from"../../../../platform/configuration/common/configuration.js";import{TestConfigurationService as A}from"../../../../platform/configuration/test/common/testConfigurationService.js";import{IDialogService as j}from"../../../../platform/dialogs/common/dialogs.js";import{TestDialogService as B}from"../../../../platform/dialogs/test/common/testDialogService.js";import{IEnvironmentService as $}from"../../../../platform/environment/common/environment.js";import{IFileService as V}from"../../../../platform/files/common/files.js";import{SyncDescriptor as R}from"../../../../platform/instantiation/common/descriptors.js";import{InstantiationService as G}from"../../../../platform/instantiation/common/instantiationService.js";import{ServiceCollection as z}from"../../../../platform/instantiation/common/serviceCollection.js";import{ILabelService as H}from"../../../../platform/label/common/label.js";import{ILogService as J,NullLogService as K}from"../../../../platform/log/common/log.js";import{INotificationService as Q}from"../../../../platform/notification/common/notification.js";import{TestNotificationService as X}from"../../../../platform/notification/test/common/testNotificationService.js";import{TestThemeService as Y}from"../../../../platform/theme/test/common/testThemeService.js";import{IUndoRedoService as Z}from"../../../../platform/undoRedo/common/undoRedo.js";import{UndoRedoService as _}from"../../../../platform/undoRedo/common/undoRedoService.js";import{IUriIdentityService as ee}from"../../../../platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as re}from"../../../../platform/uriIdentity/common/uriIdentityService.js";import{IWorkspaceContextService as oe}from"../../../../platform/workspace/common/workspace.js";import{MainThreadBulkEdits as te}from"../../browser/mainThreadBulkEdits.js";import"../../common/extHost.protocol.js";import{SingleProxyRPCProtocol as ie}from"../common/testRPCProtocol.js";import{BulkEditService as ne}from"../../../contrib/bulkEdit/browser/bulkEditService.js";import{IEditorGroupsService as se}from"../../../services/editor/common/editorGroupsService.js";import{IEditorService as ce}from"../../../services/editor/common/editorService.js";import{IWorkbenchEnvironmentService as de}from"../../../services/environment/common/environmentService.js";import{SerializableObjectWithBuffers as u}from"../../../services/extensions/common/proxyIdentifier.js";import{LabelService as ae}from"../../../services/label/common/labelService.js";import{ILifecycleService as me}from"../../../services/lifecycle/common/lifecycle.js";import{IPaneCompositePartService as pe}from"../../../services/panecomposite/browser/panecomposite.js";import{ITextFileService as le}from"../../../services/textfile/common/textfiles.js";import{IWorkingCopyFileService as ve}from"../../../services/workingCopy/common/workingCopyFileService.js";import{IWorkingCopyService as fe}from"../../../services/workingCopy/common/workingCopyService.js";import{TestEditorGroupsService as ue,TestEditorService as Ie,TestEnvironmentService as k,TestFileService as Se,TestLifecycleService as we,TestWorkingCopyService as Ee}from"../../../test/browser/workbenchTestServices.js";import{TestContextService as ge,TestTextResourcePropertiesService as Re}from"../../../test/common/workbenchTestServices.js";import{ILanguageService as ye}from"../../../../editor/common/languages/language.js";import{LanguageService as Te}from"../../../../editor/common/services/languageService.js";import{ILanguageConfigurationService as ke}from"../../../../editor/common/languages/languageConfigurationRegistry.js";import{TestLanguageConfigurationService as xe}from"../../../../editor/test/common/modes/testLanguageConfigurationService.js";suite("MainThreadEditors",()=>{let s;const o=h.parse("foo:bar");let p,l;const I=new Map,y=new Map,v=new Set,S=new Set;setup(()=>{s=new x,I.clear(),y.clear(),v.clear(),S.clear();const i=new A,c=new B,d=new X,f=new _(c,d),w=new Y,e=new z;e.set(M,new R(ne)),e.set(H,new R(ae)),e.set(J,new K),e.set(oe,new ge),e.set($,k),e.set(de,k),e.set(q,i),e.set(j,c),e.set(Q,d),e.set(Z,f),e.set(U,p),e.set(W,new N(w)),e.set(V,new Se),e.set(ee,new R(re)),e.set(ce,s.add(new Ie)),e.set(me,new we),e.set(fe,new Ee),e.set(se,new ue),e.set(le,new class extends m(){isDirty(){return!1}files={onDidSave:a.None,onDidRevert:a.None,onDidChangeDirty:a.None};create(r){for(const t of r)v.add(t.resource);return Promise.resolve(Object.create(null))}async getEncodedReadable(r,t){}}),e.set(ve,new class extends m(){onDidRunWorkingCopyFileOperation=a.None;createFolder(r){this.create(r)}create(r){for(const t of r)v.add(t.resource);return Promise.resolve(Object.create(null))}move(r){const{source:t,target:E}=r[0].file;return I.set(t,E),Promise.resolve(Object.create(null))}copy(r){const{source:t,target:E}=r[0].file;return y.set(t,E),Promise.resolve(Object.create(null))}delete(r){for(const t of r)S.add(t.resource);return Promise.resolve(void 0)}}),e.set(F,new class extends m(){createModelReference(r){const t=new class extends m(){textEditorModel=p.getModel(r)};return t.isReadonly=()=>!1,Promise.resolve(new C(t))}}),e.set(b,new class extends m(){}),e.set(pe,new class extends m(){onDidPaneCompositeOpen=a.None;onDidPaneCompositeClose=a.None;getActivePaneComposite(){}}),e.set(ye,s.add(new Te)),e.set(ke,new xe);const T=new G(e);p=new L(i,new Re(i),f,T),l=T.createInstance(te,ie(null))}),teardown(()=>{s.dispose()}),P(),test("applyWorkspaceEdit returns false if model is changed by user",()=>{const i=s.add(p.createModel("something",null,o)),c={resource:o,versionId:i.getVersionId(),textEdit:{text:"asdfg",range:new g(1,1,1,1)}};return i.applyEdits([D.insert(new O(0,0),"something")]),l.$tryApplyWorkspaceEdit(new u({edits:[c]})).then(d=>{n.strictEqual(d,!1)})}),test("issue #54773: applyWorkspaceEdit checks model version in race situation",()=>{const i=s.add(p.createModel("something",null,o)),c={resource:o,versionId:i.getVersionId(),textEdit:{text:"asdfg",range:new g(1,1,1,1)}},d={resource:o,versionId:i.getVersionId(),textEdit:{text:"asdfg",range:new g(1,1,1,1)}},f=l.$tryApplyWorkspaceEdit(new u({edits:[c]})).then(e=>{n.strictEqual(e,!0)}),w=l.$tryApplyWorkspaceEdit(new u({edits:[d]})).then(e=>{n.strictEqual(e,!1)});return Promise.all([f,w])}),test("applyWorkspaceEdit with only resource edit",()=>l.$tryApplyWorkspaceEdit(new u({edits:[{oldResource:o,newResource:o,options:void 0},{oldResource:void 0,newResource:o,options:void 0},{oldResource:o,newResource:void 0,options:void 0}]})).then(i=>{n.strictEqual(i,!0),n.strictEqual(I.get(o),o),n.strictEqual(v.has(o),!0),n.strictEqual(S.has(o),!0)}))});
