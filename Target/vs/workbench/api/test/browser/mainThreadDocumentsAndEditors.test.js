import e from"assert";import{MainThreadDocumentsAndEditors as h}from"../../browser/mainThreadDocumentsAndEditors.js";import{SingleProxyRPCProtocol as w}from"../common/testRPCProtocol.js";import{TestConfigurationService as p}from"../../../../platform/configuration/test/common/testConfigurationService.js";import{ModelService as T}from"../../../../editor/common/services/modelService.js";import{TestCodeEditorService as I}from"../../../../editor/test/browser/editorTestServices.js";import"../../../services/textfile/common/textfiles.js";import"../../common/extHost.protocol.js";import{createTestCodeEditor as C}from"../../../../editor/test/browser/testCodeEditor.js";import{mock as a}from"../../../../base/test/common/mock.js";import{TestEditorService as M,TestEditorGroupsService as L,TestEnvironmentService as _,TestPathService as x}from"../../../test/browser/workbenchTestServices.js";import{Event as s}from"../../../../base/common/event.js";import"../../../../editor/common/model.js";import{ServiceCollection as A}from"../../../../platform/instantiation/common/serviceCollection.js";import{ICodeEditorService as P}from"../../../../editor/browser/services/codeEditorService.js";import"../../../../platform/files/common/files.js";import{TestThemeService as N}from"../../../../platform/theme/test/common/testThemeService.js";import{UndoRedoService as y}from"../../../../platform/undoRedo/common/undoRedoService.js";import{TestDialogService as b}from"../../../../platform/dialogs/test/common/testDialogService.js";import{TestNotificationService as F}from"../../../../platform/notification/test/common/testNotificationService.js";import{TestTextResourcePropertiesService as O,TestWorkingCopyFileService as R}from"../../../test/common/workbenchTestServices.js";import{UriIdentityService as k}from"../../../../platform/uriIdentity/common/uriIdentityService.js";import"../../../../platform/clipboard/common/clipboardService.js";import"../../../services/panecomposite/browser/panecomposite.js";import{TextModel as l}from"../../../../editor/common/model/textModel.js";import{DisposableStore as Y}from"../../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as U}from"../../../../base/test/common/utils.js";import{TestInstantiationService as G}from"../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{ILanguageService as H}from"../../../../editor/common/languages/language.js";import{LanguageService as W}from"../../../../editor/common/services/languageService.js";import{ILanguageConfigurationService as $}from"../../../../editor/common/languages/languageConfigurationRegistry.js";import{TestLanguageConfigurationService as j}from"../../../../editor/test/common/modes/testLanguageConfigurationService.js";import{IUndoRedoService as z}from"../../../../platform/undoRedo/common/undoRedo.js";suite("MainThreadDocumentsAndEditors",()=>{let c,n,E,f;const i=[];function u(t){return C(t,{hasTextFocus:!1,serviceCollection:new A([P,E])})}setup(()=>{c=new Y,i.length=0;const t=new p;t.setUserConfiguration("editor",{detectIndentation:!1});const o=new b,r=new F,d=new y(o,r),S=new N,m=new G;m.set(H,c.add(new W)),m.set($,new j),m.set(z,d),n=new T(t,new O(t),d,m),E=new I(S),f=new class extends a(){isDirty(){return!1}files={onDidSave:s.None,onDidRevert:s.None,onDidChangeDirty:s.None}};const g=c.add(new M),D=new L,v=new class extends a(){onDidRunOperation=s.None;onDidChangeFileSystemProviderCapabilities=s.None;onDidChangeFileSystemProviderRegistrations=s.None};new h(w(new class extends a(){$acceptDocumentsAndEditorsDelta(q){i.push(q)}}),n,f,g,E,v,null,D,new class extends a(){onDidPaneCompositeOpen=s.None;onDidPaneCompositeClose=s.None;getActivePaneComposite(){}},_,new R,new k(v),new class extends a(){readText(){return Promise.resolve("clipboard_contents")}},new x,new p)}),teardown(()=>{c.dispose()}),U(),test("Model#add",()=>{i.length=0,c.add(n.createModel("farboo",null)),e.strictEqual(i.length,1);const[t]=i;e.strictEqual(t.addedDocuments.length,1),e.strictEqual(t.removedDocuments,void 0),e.strictEqual(t.addedEditors,void 0),e.strictEqual(t.removedEditors,void 0),e.strictEqual(t.newActiveEditor,void 0)}),test("ignore huge model",function(){const t=l._MODEL_SYNC_LIMIT;try{const o="abc".repeat(1024);l._MODEL_SYNC_LIMIT=o.length/2;const r=n.createModel(o,null);c.add(r),e.ok(r.isTooLargeForSyncing()),e.strictEqual(i.length,1);const[d]=i;e.strictEqual(d.newActiveEditor,null),e.strictEqual(d.addedDocuments,void 0),e.strictEqual(d.removedDocuments,void 0),e.strictEqual(d.addedEditors,void 0),e.strictEqual(d.removedEditors,void 0)}finally{l._MODEL_SYNC_LIMIT=t}}),test("ignore huge model from editor",function(){const t=l._MODEL_SYNC_LIMIT;try{const o="abc".repeat(1024);l._MODEL_SYNC_LIMIT=o.length/2;const r=n.createModel(o,null),d=u(r);e.strictEqual(i.length,1),i.length=0,e.strictEqual(i.length,0),d.dispose(),r.dispose()}finally{l._MODEL_SYNC_LIMIT=t}}),test("ignore simple widget model",function(){this.timeout(1e3*60);const t=n.createModel("test",null,void 0,!0);c.add(t),e.ok(t.isForSimpleWidget),e.strictEqual(i.length,1);const[o]=i;e.strictEqual(o.newActiveEditor,null),e.strictEqual(o.addedDocuments,void 0),e.strictEqual(o.removedDocuments,void 0),e.strictEqual(o.addedEditors,void 0),e.strictEqual(o.removedEditors,void 0)}),test("ignore editor w/o model",()=>{const t=u(void 0);e.strictEqual(i.length,1);const[o]=i;e.strictEqual(o.newActiveEditor,null),e.strictEqual(o.addedDocuments,void 0),e.strictEqual(o.removedDocuments,void 0),e.strictEqual(o.addedEditors,void 0),e.strictEqual(o.removedEditors,void 0),t.dispose()}),test("editor with model",()=>{i.length=0;const t=n.createModel("farboo",null),o=u(t);e.strictEqual(i.length,2);const[r,d]=i;e.strictEqual(r.addedDocuments.length,1),e.strictEqual(r.newActiveEditor,void 0),e.strictEqual(r.removedDocuments,void 0),e.strictEqual(r.addedEditors,void 0),e.strictEqual(r.removedEditors,void 0),e.strictEqual(d.addedEditors.length,1),e.strictEqual(d.addedDocuments,void 0),e.strictEqual(d.removedDocuments,void 0),e.strictEqual(d.removedEditors,void 0),e.strictEqual(d.newActiveEditor,void 0),o.dispose(),t.dispose()}),test("editor with dispos-ed/-ing model",()=>{const t=n.createModel("farboo",null),o=u(t);i.length=0,n.destroyModel(t.uri),e.strictEqual(i.length,1);const[r]=i;e.strictEqual(r.newActiveEditor,void 0),e.strictEqual(r.removedEditors.length,1),e.strictEqual(r.removedDocuments.length,1),e.strictEqual(r.addedDocuments,void 0),e.strictEqual(r.addedEditors,void 0),o.dispose(),t.dispose()})});
