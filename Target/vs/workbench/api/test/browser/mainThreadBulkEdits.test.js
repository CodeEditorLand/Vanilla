import t from"assert";import"../../common/extHost.protocol.js";import{mock as d}from"../../../../base/test/common/mock.js";import{Event as o}from"../../../../base/common/event.js";import{URI as r}from"../../../../base/common/uri.js";import"../../../../platform/files/common/files.js";import{reviveWorkspaceEditDto as m}from"../../browser/mainThreadBulkEdits.js";import{UriIdentityService as u}from"../../../../platform/uriIdentity/common/uriIdentityService.js";import"../../../../editor/common/languages.js";import{ensureNoDisposablesAreLeakedInTestSuite as c}from"../../../../base/test/common/utils.js";suite("MainThreadBulkEdits",function(){c(),test('"Rename failed to apply edits" in monorepo with pnpm #158845',function(){const s=new class extends d(){onDidChangeFileSystemProviderCapabilities=o.None;onDidChangeFileSystemProviderRegistrations=o.None;hasProvider(a){return!0}hasCapability(a,p){return!1}},i=new u(s),n=[{resource:r.from({scheme:"case",path:"/hello/WORLD/foo.txt"}),textEdit:{range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1},text:"sss"},versionId:void 0},{resource:r.from({scheme:"case",path:"/heLLO/world/fOO.txt"}),textEdit:{range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1},text:"sss"},versionId:void 0},{resource:r.from({scheme:"case",path:"/other/path.txt"}),textEdit:{range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1},text:"sss"},versionId:void 0},{resource:r.from({scheme:"foo",path:"/other/path.txt"}),textEdit:{range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1},text:"sss"},versionId:void 0}],e=m({edits:n},i);t.strictEqual(e.edits[0].resource.path,"/hello/WORLD/foo.txt"),t.strictEqual(e.edits[1].resource.path,"/hello/WORLD/foo.txt"),t.strictEqual(e.edits[2].resource.path,"/other/path.txt"),t.strictEqual(e.edits[3].resource.path,"/other/path.txt"),i.dispose()})});
