import e from"assert";import{DisposableStore as T}from"../../../../../base/common/lifecycle.js";import{Schemas as U}from"../../../../../base/common/network.js";import{URI as f}from"../../../../../base/common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as D}from"../../../../../base/test/common/utils.js";import"../../../../../platform/editor/common/editor.js";import"../../../../../platform/instantiation/common/instantiation.js";import{DEFAULT_EDITOR_ASSOCIATION as u,isEditorInput as k,isResourceDiffEditorInput as x,isResourceEditorInput as M,isResourceMergeEditorInput as w,isResourceSideBySideEditorInput as b,isUntitledResourceEditorInput as A}from"../../../../common/editor.js";import{DiffEditorInput as F}from"../../../../common/editor/diffEditorInput.js";import{EditorInput as B}from"../../../../common/editor/editorInput.js";import{TextResourceEditorInput as O}from"../../../../common/editor/textResourceEditorInput.js";import{FileEditorInput as E}from"../../../../contrib/files/browser/editors/fileEditorInput.js";import{MergeEditorInput as W}from"../../../../contrib/mergeEditor/browser/mergeEditorInput.js";import{UntitledTextEditorInput as N}from"../../../../services/untitled/common/untitledTextEditorInput.js";import{TestEditorInput as q,TestServiceAccessor as L,workbenchInstantiationService as _}from"../../workbenchTestServices.js";suite("EditorInput",()=>{let p,l;const I=new T,a=f.from({scheme:"random",path:"/path"}),n={resource:a,options:{override:u.id}},r={resource:a,options:{override:u.id}},m={primary:n,secondary:n,options:{override:u.id}},s={resource:f.from({scheme:U.untitled,path:"/path"}),options:{override:u.id}},d={original:n,modified:n,options:{override:u.id}},c={base:n,input1:n,input2:n,result:n,options:{override:u.id}},h=()=>{if(!n.options||!r.options||!s.options||!d.options||!c.options)throw new Error("Malformed options on untyped inputs");n.options.override=void 0,r.options.override=void 0,s.options.override=void 0,d.options.override=void 0,c.options.override=void 0};setup(()=>{if(p=_(void 0,I),l=p.createInstance(L),!n.options||!r.options||!s.options||!d.options||!c.options)throw new Error("Malformed options on untyped inputs");n.options.override=u.id,r.options.override=u.id,s.options.override=u.id,d.options.override=u.id,c.options.override=u.id}),teardown(()=>{I.clear()});class y extends B{resource=void 0;get typeId(){return"myEditorInput"}resolve(){return null}}test("basics",()=>{let o=0;const t=I.add(new y),i=I.add(new y);e.ok(k(t)),e.ok(!k(void 0)),e.ok(!k({resource:f.file("/")})),e.ok(!k({})),e.ok(!M(t)),e.ok(!A(t)),e.ok(!x(t)),e.ok(!w(t)),e.ok(!b(t)),e(t.matches(t)),e(!t.matches(i)),e(t.getName()),I.add(t.onWillDispose(()=>{e(!0),o++})),t.dispose(),e.strictEqual(o,1)}),test("untyped matches",()=>{const o="untypedMatches",t=f.file("/fake"),i=I.add(new q(t,o)),R={resource:t,options:{override:o}},v={resource:f.file("/incorrectFake"),options:{override:o}},g={resource:t,options:{override:"wrongId"}},S={resource:f.file("/incorrectFake"),options:{override:"wrongId"}};e(i.matches(R)),e.ok(!i.matches(v)),e.ok(!i.matches(g)),e.ok(!i.matches(S))}),test("Untpyed inputs properly match TextResourceEditorInput",()=>{const o=p.createInstance(O,a,void 0,void 0,void 0,void 0);e.ok(o.matches(n)),e.ok(o.matches(r)),e.ok(!o.matches(m)),e.ok(!o.matches(s)),e.ok(!o.matches(d)),e.ok(!o.matches(c)),o.dispose()}),test("Untyped inputs properly match FileEditorInput",()=>{const o=p.createInstance(E,a,void 0,void 0,void 0,void 0,void 0,void 0);e.ok(o.matches(n)),e.ok(o.matches(r)),e.ok(!o.matches(m)),e.ok(!o.matches(s)),e.ok(!o.matches(d)),e.ok(!o.matches(c)),h(),e.ok(o.matches(n)),e.ok(o.matches(r)),e.ok(!o.matches(m)),e.ok(!o.matches(s)),e.ok(!o.matches(d)),e.ok(!o.matches(c)),o.dispose()}),test("Untyped inputs properly match MergeEditorInput",()=>{const o={uri:a,description:void 0,detail:void 0,title:void 0},t=p.createInstance(W,a,o,o,a);e.ok(!t.matches(n)),e.ok(!t.matches(r)),e.ok(!t.matches(m)),e.ok(!t.matches(s)),e.ok(!t.matches(d)),e.ok(t.matches(c)),h(),e.ok(!t.matches(n)),e.ok(!t.matches(r)),e.ok(!t.matches(m)),e.ok(!t.matches(s)),e.ok(!t.matches(d)),e.ok(t.matches(c)),t.dispose()}),test("Untyped inputs properly match UntitledTextEditorInput",()=>{const o=l.untitledTextEditorService.create({associatedResource:{authority:"",path:"/path",fragment:"",query:""}}),t=p.createInstance(N,o);e.ok(!t.matches(n)),e.ok(!t.matches(r)),e.ok(!t.matches(m)),e.ok(t.matches(s)),e.ok(!t.matches(d)),e.ok(!t.matches(c)),h(),e.ok(!t.matches(n)),e.ok(!t.matches(r)),e.ok(!t.matches(m)),e.ok(t.matches(s)),e.ok(!t.matches(d)),e.ok(!t.matches(c)),t.dispose()}),test("Untyped inputs properly match DiffEditorInput",()=>{const o=p.createInstance(E,a,void 0,void 0,void 0,void 0,void 0,void 0),t=p.createInstance(E,a,void 0,void 0,void 0,void 0,void 0,void 0),i=p.createInstance(F,void 0,void 0,o,t,!1);e.ok(!i.matches(n)),e.ok(!i.matches(r)),e.ok(!i.matches(m)),e.ok(!i.matches(s)),e.ok(i.matches(d)),e.ok(!i.matches(c)),h(),e.ok(!i.matches(n)),e.ok(!i.matches(r)),e.ok(!i.matches(m)),e.ok(!i.matches(s)),e.ok(i.matches(d)),e.ok(!i.matches(c)),i.dispose(),o.dispose(),t.dispose()}),D()});
