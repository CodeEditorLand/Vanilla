import i from"assert";import{EditorGroupModel as k,isGroupEditorChangeEvent as D,isGroupEditorCloseEvent as tt,isGroupEditorMoveEvent as it,isGroupEditorOpenEvent as et}from"../../../../common/editor/editorGroupModel.js";import{EditorExtensions as m,CloseDirection as G,EditorsOrder as u,SideBySideEditor as v,EditorCloseContext as V,GroupModelChangeKind as g}from"../../../../common/editor.js";import{URI as I}from"../../../../../base/common/uri.js";import{TestLifecycleService as h,workbenchInstantiationService as F}from"../../workbenchTestServices.js";import{TestConfigurationService as C}from"../../../../../platform/configuration/test/common/testConfigurationService.js";import{TestInstantiationService as x}from"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{IConfigurationService as N}from"../../../../../platform/configuration/common/configuration.js";import{ILifecycleService as L}from"../../../../services/lifecycle/common/lifecycle.js";import{IWorkspaceContextService as O}from"../../../../../platform/workspace/common/workspace.js";import{Registry as _}from"../../../../../platform/registry/common/platform.js";import"../../../../../platform/instantiation/common/instantiation.js";import{ITelemetryService as b}from"../../../../../platform/telemetry/common/telemetry.js";import{NullTelemetryService as R}from"../../../../../platform/telemetry/common/telemetryUtils.js";import{DiffEditorInput as H}from"../../../../common/editor/diffEditorInput.js";import{IStorageService as M}from"../../../../../platform/storage/common/storage.js";import{DisposableStore as rt,toDisposable as st}from"../../../../../base/common/lifecycle.js";import{TestContextService as w,TestStorageService as U}from"../../../common/workbenchTestServices.js";import{EditorInput as j}from"../../../../common/editor/editorInput.js";import{SideBySideEditorInput as Y}from"../../../../common/editor/sideBySideEditorInput.js";import{isEqual as nt}from"../../../../../base/common/resources.js";import{ensureNoDisposablesAreLeakedInTestSuite as ot}from"../../../../../base/test/common/utils.js";suite("EditorGroupModel",()=>{let B;suiteTeardown(()=>{B?.dispose(),B=void 0});function J(){B||(B=new x);const t=B;t.stub(M,p.add(new U)),t.stub(L,p.add(new h)),t.stub(O,new w),t.stub(b,R);const r=new C;return r.setUserConfiguration("workbench",{editor:{openPositioning:"right",focusRecentEditorAfterClose:!0}}),t.stub(N,r),t}function l(t){const r=p.add(J().createInstance(k,t));return p.add(st(()=>{for(const e of r.getEditors(u.MOST_RECENTLY_ACTIVE))r.closeEditor(e)})),r}function P(t){for(const r of t.getEditors(u.SEQUENTIAL))t.closeEditor(r,void 0,!1)}function K(t,r,e){const s=t.indexOf(r);if(s!==-1)if(e===G.LEFT)for(let n=s-1;n>=0;n--)t.closeEditor(t.getEditorByIndex(n));else if(e===G.RIGHT)for(let n=t.getEditors(u.SEQUENTIAL).length-1;n>s;n--)t.closeEditor(t.getEditorByIndex(n));else t.getEditors(u.MOST_RECENTLY_ACTIVE).filter(n=>!n.matches(r)).forEach(n=>t.closeEditor(n))}function f(t){const r={active:[],index:[],label:[],locked:[],opened:[],closed:[],activated:[],pinned:[],unpinned:[],sticky:[],unsticky:[],transient:[],moved:[],disposed:[]};return p.add(t.onDidModelChange(e=>{if(e.kind===g.GROUP_LOCKED){r.locked.push(t.id);return}else if(e.kind===g.GROUP_ACTIVE){r.active.push(t.id);return}else if(e.kind===g.GROUP_INDEX){r.index.push(t.id);return}else if(e.kind===g.GROUP_LABEL){r.label.push(t.id);return}if(e.editor)switch(e.kind){case g.EDITOR_OPEN:et(e)&&r.opened.push(e);break;case g.EDITOR_CLOSE:tt(e)&&r.closed.push(e);break;case g.EDITOR_ACTIVE:D(e)&&r.activated.push(e);break;case g.EDITOR_PIN:D(e)&&(t.isPinned(e.editor)?r.pinned.push(e):r.unpinned.push(e));break;case g.EDITOR_STICKY:D(e)&&(t.isSticky(e.editor)?r.sticky.push(e):r.unsticky.push(e));break;case g.EDITOR_TRANSIENT:D(e)&&r.transient.push(e);break;case g.EDITOR_MOVE:it(e)&&r.moved.push(e);break;case g.EDITOR_WILL_DISPOSE:D(e)&&r.disposed.push(e);break}})),r}let X=0;class z extends j{constructor(e){super();this.id=e}resource=void 0;get typeId(){return"testEditorInputForGroups"}async resolve(){return null}matches(e){return e&&this.id===e.id&&e instanceof z}setDirty(){this._onDidChangeDirty.fire()}setLabel(){this._onDidChangeLabel.fire()}}class W extends j{constructor(e){super();this.id=e}resource=void 0;get typeId(){return"testEditorInputForGroups-nonSerializable"}async resolve(){return null}matches(e){return e&&this.id===e.id&&e instanceof W}}class A extends j{constructor(e,s){super();this.id=e;this.resource=s}preferredResource=this.resource;get typeId(){return"testFileEditorInputForGroups"}get editorId(){return this.id}async resolve(){return null}setPreferredName(e){}setPreferredDescription(e){}setPreferredResource(e){}async setEncoding(e){}getEncoding(){}setPreferredEncoding(e){}setForceOpenAsBinary(){}setPreferredContents(e){}setLanguageId(e){}setPreferredLanguageId(e){}isResolved(){return!1}matches(e){return super.matches(e)?!0:e instanceof A?nt(e.resource,this.resource):!1}}function c(t=String(X++),r,e){return e?p.add(new A(t,e)):r?p.add(new W(t)):p.add(new z(t))}class T{static disableSerialize=!1;static disableDeserialize=!1;canSerialize(r){return!0}serialize(r){if(T.disableSerialize)return;const s={id:r.id};return JSON.stringify(s)}deserialize(r,e){if(T.disableDeserialize)return;const s=JSON.parse(e);return p.add(new z(s.id))}}const p=new rt;setup(()=>{T.disableSerialize=!1,T.disableDeserialize=!1,p.add(_.as(m.EditorFactory).registerEditorSerializer("testEditorInputForGroups",T))}),teardown(()=>{p.clear(),X=1}),test("Clone Group",function(){const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0}),t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!1,active:!0}),t.stick(e),i.ok(t.isSticky(e)),i.strictEqual(t.isLocked,!1),t.lock(!0),i.strictEqual(t.isLocked,!0);const n=p.add(t.clone());i.notStrictEqual(t.id,n.id),i.strictEqual(n.count,3),i.strictEqual(n.isLocked,!1);let o=!1;const a=n.onDidModelChange(E=>{E.kind===g.EDITOR_LABEL&&(o=!0)});r.setLabel(),i.ok(o),i.strictEqual(n.isPinned(r),!0),i.strictEqual(n.isActive(r),!1),i.strictEqual(n.isSticky(r),!1),i.strictEqual(n.isPinned(e),!0),i.strictEqual(n.isActive(e),!1),i.strictEqual(n.isSticky(e),!0),i.strictEqual(n.isPinned(s),!1),i.strictEqual(n.isActive(s),!0),i.strictEqual(n.isSticky(s),!1),a.dispose()}),test("isActive - untyped",()=>{const t=l(),r=p.add(new A("testInput",I.file("fake"))),e=p.add(new A("testInput2",I.file("fake2"))),s={resource:I.file("/fake"),options:{override:"testInput"}},n={resource:I.file("/fake2"),options:{override:"testInput2"}};t.openEditor(r,{pinned:!0,active:!0}),t.openEditor(e,{active:!1}),i.ok(t.isActive(r)),i.ok(t.isActive(s)),i.ok(!t.isActive(n))}),test("openEditor - prefers existing side by side editor if same",()=>{const t=F(void 0,p),r=l(),e=p.add(new A("testInput",I.file("fake1"))),s=p.add(new A("testInput",I.file("fake2"))),n=t.createInstance(Y,void 0,void 0,e,e),o=t.createInstance(Y,void 0,void 0,e,s);let a=r.openEditor(n,{pinned:!0,active:!0});i.strictEqual(a.editor,n),i.strictEqual(a.isNew,!0),a=r.openEditor(e,{pinned:!0,active:!0,supportSideBySide:v.BOTH}),i.strictEqual(a.editor,n),i.strictEqual(a.isNew,!1),r.closeEditor(n),a=r.openEditor(o,{pinned:!0,active:!0}),i.strictEqual(a.editor,o),i.strictEqual(a.isNew,!0),a=r.openEditor(e,{pinned:!0,active:!0}),i.strictEqual(a.editor,e),i.strictEqual(a.isNew,!0)}),test("indexOf() - prefers direct matching editor over side by side matching one",()=>{const t=F(void 0,p),r=l(),e=p.add(new A("testInput",I.file("fake1"))),s=t.createInstance(Y,void 0,void 0,e,e);r.openEditor(s,{pinned:!0,active:!0}),i.strictEqual(r.indexOf(s),0),i.strictEqual(r.indexOf(e),-1),i.strictEqual(r.indexOf(e,void 0,{supportSideBySide:v.BOTH}),0),i.strictEqual(r.indexOf(e,void 0,{supportSideBySide:v.ANY}),0),r.openEditor(e,{pinned:!0,active:!0}),i.strictEqual(r.indexOf(e),1),i.strictEqual(r.indexOf(e,void 0,{supportSideBySide:v.BOTH}),1),i.strictEqual(r.indexOf(e,void 0,{supportSideBySide:v.ANY}),1)}),test("contains() - untyped",function(){const t=l(),r=F(void 0,p),e=c("input1",!1,I.file("/input1")),s=c("input2",!1,I.file("/input2")),n={resource:I.file("/input1"),options:{override:"input1"}},o={resource:I.file("/input2"),options:{override:"input2"}},a=r.createInstance(H,"name","description",e,s,void 0),E=r.createInstance(H,"name","description",s,e,void 0),d={original:n,modified:o},q={original:o,modified:n},S=r.createInstance(Y,"name",void 0,e,e),Q=r.createInstance(Y,"name",void 0,e,s),Z={primary:n,secondary:n},$={primary:o,secondary:n};t.openEditor(e,{pinned:!0,active:!0}),i.strictEqual(t.contains(n),!0),i.strictEqual(t.contains(n,{strictEquals:!0}),!1),i.strictEqual(t.contains(n,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(n,{supportSideBySide:v.BOTH}),!0),i.strictEqual(t.contains(o),!1),i.strictEqual(t.contains(o,{strictEquals:!0}),!1),i.strictEqual(t.contains(o,{supportSideBySide:v.ANY}),!1),i.strictEqual(t.contains(o,{supportSideBySide:v.BOTH}),!1),i.strictEqual(t.contains(d),!1),i.strictEqual(t.contains(q),!1),t.openEditor(s,{pinned:!0,active:!0}),i.strictEqual(t.contains(n),!0),i.strictEqual(t.contains(o),!0),i.strictEqual(t.contains(d),!1),i.strictEqual(t.contains(q),!1),t.openEditor(a,{pinned:!0,active:!0}),i.strictEqual(t.contains(n),!0),i.strictEqual(t.contains(o),!0),i.strictEqual(t.contains(d),!0),i.strictEqual(t.contains(q),!1),t.openEditor(E,{pinned:!0,active:!0}),i.strictEqual(t.contains(n),!0),i.strictEqual(t.contains(o),!0),i.strictEqual(t.contains(d),!0),i.strictEqual(t.contains(q),!0),t.closeEditor(e),i.strictEqual(t.contains(n),!1),i.strictEqual(t.contains(n,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(n,{supportSideBySide:v.BOTH}),!1),i.strictEqual(t.contains(o),!0),i.strictEqual(t.contains(d),!0),i.strictEqual(t.contains(q),!0),t.closeEditor(s),i.strictEqual(t.contains(n),!1),i.strictEqual(t.contains(n,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(o),!1),i.strictEqual(t.contains(o,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(d),!0),i.strictEqual(t.contains(q),!0),t.closeEditor(a),i.strictEqual(t.contains(n),!1),i.strictEqual(t.contains(n,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(o),!1),i.strictEqual(t.contains(o,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(d),!1),i.strictEqual(t.contains(q),!0),t.closeEditor(E),i.strictEqual(t.contains(n),!1),i.strictEqual(t.contains(n,{supportSideBySide:v.ANY}),!1),i.strictEqual(t.contains(o),!1),i.strictEqual(t.contains(o,{supportSideBySide:v.ANY}),!1),i.strictEqual(t.contains(d),!1),i.strictEqual(t.contains(q),!1),i.strictEqual(t.count,0),t.openEditor(S,{pinned:!0,active:!0}),i.strictEqual(t.contains(Z),!0),i.strictEqual(t.contains(n,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(n,{supportSideBySide:v.BOTH}),!0),i.strictEqual(t.contains(n,{supportSideBySide:v.ANY,strictEquals:!0}),!1),i.strictEqual(t.contains(n,{supportSideBySide:v.BOTH,strictEquals:!0}),!1),t.closeEditor(S),i.strictEqual(t.count,0),t.openEditor(Q,{pinned:!0,active:!0}),i.strictEqual(t.contains($),!0),i.strictEqual(t.contains(n,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(n,{supportSideBySide:v.BOTH}),!1)}),test("contains()",()=>{const t=l(),r=F(void 0,p),e=c(),s=c(),n=r.createInstance(H,"name","description",e,s,void 0),o=r.createInstance(H,"name","description",s,e,void 0),a=r.createInstance(Y,"name",void 0,e,e),E=r.createInstance(Y,"name",void 0,e,s);t.openEditor(e,{pinned:!0,active:!0}),i.strictEqual(t.contains(e),!0),i.strictEqual(t.contains(e,{strictEquals:!0}),!0),i.strictEqual(t.contains(e,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(s),!1),i.strictEqual(t.contains(s,{strictEquals:!0}),!1),i.strictEqual(t.contains(s,{supportSideBySide:v.ANY}),!1),i.strictEqual(t.contains(n),!1),i.strictEqual(t.contains(o),!1),t.openEditor(s,{pinned:!0,active:!0}),i.strictEqual(t.contains(e),!0),i.strictEqual(t.contains(s),!0),i.strictEqual(t.contains(n),!1),i.strictEqual(t.contains(o),!1),t.openEditor(n,{pinned:!0,active:!0}),i.strictEqual(t.contains(e),!0),i.strictEqual(t.contains(s),!0),i.strictEqual(t.contains(n),!0),i.strictEqual(t.contains(o),!1),t.openEditor(o,{pinned:!0,active:!0}),i.strictEqual(t.contains(e),!0),i.strictEqual(t.contains(s),!0),i.strictEqual(t.contains(n),!0),i.strictEqual(t.contains(o),!0),t.closeEditor(e),i.strictEqual(t.contains(e),!1),i.strictEqual(t.contains(e,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(s),!0),i.strictEqual(t.contains(n),!0),i.strictEqual(t.contains(o),!0),t.closeEditor(s),i.strictEqual(t.contains(e),!1),i.strictEqual(t.contains(e,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(s),!1),i.strictEqual(t.contains(s,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(n),!0),i.strictEqual(t.contains(o),!0),t.closeEditor(n),i.strictEqual(t.contains(e),!1),i.strictEqual(t.contains(e,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(s),!1),i.strictEqual(t.contains(s,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(n),!1),i.strictEqual(t.contains(o),!0),t.closeEditor(o),i.strictEqual(t.contains(e),!1),i.strictEqual(t.contains(e,{supportSideBySide:v.ANY}),!1),i.strictEqual(t.contains(s),!1),i.strictEqual(t.contains(s,{supportSideBySide:v.ANY}),!1),i.strictEqual(t.contains(n),!1),i.strictEqual(t.contains(o),!1);const d=c(void 0,!0,I.parse("foo://bar")),q=c(void 0,!0,I.parse("foo://barsomething"));t.openEditor(d,{pinned:!0,active:!0}),i.strictEqual(t.contains(q),!1),i.strictEqual(t.contains(d),!0),t.closeEditor(d),i.strictEqual(t.contains(d),!1),i.strictEqual(t.count,0),t.openEditor(a,{pinned:!0,active:!0}),i.strictEqual(t.contains(a),!0),i.strictEqual(t.contains(e,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(e,{supportSideBySide:v.BOTH}),!0),i.strictEqual(t.contains(e,{supportSideBySide:v.ANY,strictEquals:!0}),!0),i.strictEqual(t.contains(e,{supportSideBySide:v.BOTH,strictEquals:!0}),!0),t.closeEditor(a),i.strictEqual(t.count,0),t.openEditor(E,{pinned:!0,active:!0}),i.strictEqual(t.contains(E),!0),i.strictEqual(t.contains(e,{supportSideBySide:v.ANY}),!0),i.strictEqual(t.contains(e,{supportSideBySide:v.ANY,strictEquals:!0}),!0),i.strictEqual(t.contains(e,{supportSideBySide:v.BOTH}),!1),i.strictEqual(t.contains(e,{supportSideBySide:v.BOTH,strictEquals:!0}),!1)}),test("group serialization",function(){J().invokeFunction(o=>_.as(m.EditorFactory).start(o));const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0}),t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!1,active:!0});let n=l(t.serialize());i.strictEqual(t.id,n.id),i.strictEqual(n.count,3),i.strictEqual(n.getEditors(u.SEQUENTIAL).length,3),i.strictEqual(n.getEditors(u.MOST_RECENTLY_ACTIVE).length,3),i.strictEqual(n.isPinned(r),!0),i.strictEqual(n.isPinned(e),!0),i.strictEqual(n.isPinned(s),!1),i.strictEqual(n.isActive(s),!0),T.disableSerialize=!0,n=l(t.serialize()),i.strictEqual(t.id,n.id),i.strictEqual(n.count,0),i.strictEqual(n.getEditors(u.SEQUENTIAL).length,0),i.strictEqual(n.getEditors(u.MOST_RECENTLY_ACTIVE).length,0),T.disableSerialize=!1,T.disableDeserialize=!0,n=l(t.serialize()),i.strictEqual(t.id,n.id),i.strictEqual(n.count,0),i.strictEqual(n.getEditors(u.SEQUENTIAL).length,0),i.strictEqual(n.getEditors(u.MOST_RECENTLY_ACTIVE).length,0)}),test("group serialization (sticky editor)",function(){J().invokeFunction(o=>_.as(m.EditorFactory).start(o));const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0}),t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!1,active:!0}),t.stick(e),i.ok(t.isSticky(e));let n=l(t.serialize());i.strictEqual(t.id,n.id),i.strictEqual(n.count,3),i.strictEqual(n.isPinned(r),!0),i.strictEqual(n.isActive(r),!1),i.strictEqual(n.isSticky(r),!1),i.strictEqual(n.isPinned(e),!0),i.strictEqual(n.isActive(e),!1),i.strictEqual(n.isSticky(e),!0),i.strictEqual(n.isPinned(s),!1),i.strictEqual(n.isActive(s),!0),i.strictEqual(n.isSticky(s),!1),T.disableSerialize=!0,n=l(t.serialize()),i.strictEqual(t.id,n.id),i.strictEqual(n.count,0),i.strictEqual(n.stickyCount,0),i.strictEqual(n.getEditors(u.SEQUENTIAL).length,0),i.strictEqual(n.getEditors(u.MOST_RECENTLY_ACTIVE).length,0),T.disableSerialize=!1,T.disableDeserialize=!0,n=l(t.serialize()),i.strictEqual(t.id,n.id),i.strictEqual(n.count,0),i.strictEqual(n.stickyCount,0),i.strictEqual(n.getEditors(u.SEQUENTIAL).length,0),i.strictEqual(n.getEditors(u.MOST_RECENTLY_ACTIVE).length,0)}),test("group serialization (locked group)",function(){const t=l(),r=f(t);i.strictEqual(r.locked.length,0),t.lock(!0),t.lock(!0),i.strictEqual(r.locked.length,1),t.lock(!1),t.lock(!1),i.strictEqual(r.locked.length,2)}),test("locked group",function(){const t=l();t.lock(!0);let r=l(t.serialize());i.strictEqual(t.id,r.id),i.strictEqual(r.count,0),i.strictEqual(r.isLocked,!0),t.lock(!1),r=l(t.serialize()),i.strictEqual(t.id,r.id),i.strictEqual(r.count,0),i.strictEqual(r.isLocked,!1)}),test("index",function(){const t=l(),r=f(t);i.strictEqual(r.index.length,0),t.setIndex(4),i.strictEqual(r.index.length,1)}),test("label",function(){const t=l(),r=f(t);i.strictEqual(r.label.length,0),t.setLabel("Window 1"),i.strictEqual(r.label.length,1)}),test("active",function(){const t=l(),r=f(t);i.strictEqual(r.active.length,0),t.setActive(void 0),i.strictEqual(r.active.length,1)}),test("One Editor",function(){const t=l(),r=f(t);i.strictEqual(t.count,0),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,0);const e=c(),{editor:s,isNew:n}=t.openEditor(e,{active:!0,pinned:!0});i.strictEqual(s,e),i.strictEqual(n,!0),i.strictEqual(t.count,1),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,1),i.strictEqual(t.findEditor(e)[0],e),i.strictEqual(t.activeEditor,e),i.strictEqual(t.isActive(e),!0),i.strictEqual(t.isPinned(e),!0),i.strictEqual(t.isPinned(0),!0),i.strictEqual(t.isFirst(e),!0),i.strictEqual(t.isLast(e),!0),i.strictEqual(r.opened[0].editor,e),i.strictEqual(r.opened[0].editorIndex,0),i.strictEqual(r.activated[0].editor,e),i.strictEqual(r.activated[0].editorIndex,0);const o=t.indexOf(e);i.strictEqual(t.findEditor(e)[1],o);let a=t.closeEditor(e,V.UNPIN);i.strictEqual(a?.editor,e),i.strictEqual(a?.editorIndex,o),i.strictEqual(t.count,0),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,0),i.strictEqual(t.activeEditor,null),i.strictEqual(t.isFirst(e),!1),i.strictEqual(t.isLast(e),!1),i.strictEqual(r.closed[0].editor,e),i.strictEqual(r.closed[0].editorIndex,0),i.strictEqual(r.closed[0].context===V.UNPIN,!0);const E=c();t.openEditor(E,{active:!0,pinned:!1}),i.strictEqual(t.count,1),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,1),i.strictEqual(t.activeEditor,E),i.strictEqual(t.isActive(E),!0),i.strictEqual(t.isPinned(E),!1),i.strictEqual(t.isPinned(0),!1),i.strictEqual(r.opened[1].editor,E),i.strictEqual(r.opened[1].editorIndex,0),i.strictEqual(r.activated[1].editor,E),i.strictEqual(r.activated[1].editorIndex,0),t.closeEditor(E),i.strictEqual(t.count,0),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,0),i.strictEqual(t.activeEditor,null),i.strictEqual(r.closed[1].editor,E),i.strictEqual(r.closed[1].editorIndex,0),i.strictEqual(r.closed[1].context===V.REPLACE,!1),a=t.closeEditor(E),i.ok(!a),i.strictEqual(t.count,0),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,0),i.strictEqual(t.activeEditor,null),i.strictEqual(r.closed[1].editor,E);const d=c();t.openEditor(d,{active:!1,pinned:!0}),i.strictEqual(t.count,1),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,1),i.strictEqual(t.activeEditor,d),i.strictEqual(t.isActive(d),!0),i.strictEqual(t.isPinned(d),!0),i.strictEqual(t.isPinned(0),!0),i.strictEqual(r.opened[2].editor,d),i.strictEqual(r.activated[2].editor,d),t.closeEditor(d),i.strictEqual(t.count,0),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,0),i.strictEqual(t.activeEditor,null),i.strictEqual(r.closed[2].editor,d),i.strictEqual(r.opened[2].editor,d),i.strictEqual(r.activated[2].editor,d),t.closeEditor(d),i.strictEqual(t.count,0),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,0),i.strictEqual(t.activeEditor,null),i.strictEqual(r.closed[2].editor,d);const q=c();t.openEditor(q),i.strictEqual(t.count,1),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,1),i.strictEqual(t.activeEditor,q),i.strictEqual(t.isActive(q),!0),i.strictEqual(t.isPinned(q),!1),i.strictEqual(t.isPinned(0),!1),i.strictEqual(r.opened[3].editor,q),i.strictEqual(r.activated[3].editor,q),t.closeEditor(q),i.strictEqual(t.count,0),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,0),i.strictEqual(t.activeEditor,null),i.strictEqual(r.closed[3].editor,q)}),test("Multiple Editors - Pinned and Active",function(){const t=l(),r=f(t),e=c("1"),s=c("1"),n=c("2"),o=c("3");let a=t.openEditor(e,{pinned:!0,active:!0});i.strictEqual(a.editor,e),i.strictEqual(a.isNew,!0),a=t.openEditor(s,{pinned:!0,active:!0}),i.strictEqual(a.editor,e),i.strictEqual(a.isNew,!1),t.openEditor(n,{pinned:!0,active:!0}),t.openEditor(o,{pinned:!0,active:!0}),i.strictEqual(t.count,3),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,3),i.strictEqual(t.activeEditor,o),i.strictEqual(t.isActive(e),!1),i.strictEqual(t.isPinned(e),!0),i.strictEqual(t.isActive(n),!1),i.strictEqual(t.isPinned(n),!0),i.strictEqual(t.isActive(o),!0),i.strictEqual(t.isPinned(o),!0),i.strictEqual(t.isFirst(e),!0),i.strictEqual(t.isFirst(n),!1),i.strictEqual(t.isFirst(o),!1),i.strictEqual(t.isLast(e),!1),i.strictEqual(t.isLast(n),!1),i.strictEqual(t.isLast(o),!0),i.strictEqual(r.opened[0].editor,e),i.strictEqual(r.opened[1].editor,n),i.strictEqual(r.opened[2].editor,o),i.strictEqual(r.activated[0].editor,e),i.strictEqual(r.activated[0].editorIndex,0),i.strictEqual(r.activated[1].editor,n),i.strictEqual(r.activated[1].editorIndex,1),i.strictEqual(r.activated[2].editor,o),i.strictEqual(r.activated[2].editorIndex,2);const E=t.getEditors(u.MOST_RECENTLY_ACTIVE);i.strictEqual(E[0],o),i.strictEqual(E[1],n),i.strictEqual(E[2],e);const d=c("1");t.openEditor(d,{pinned:!0,active:!0}),i.strictEqual(r.activated[3].editor,e),i.strictEqual(r.activated[3].editorIndex,0),t.unpin(d),i.strictEqual(r.unpinned[0].editor,e),i.strictEqual(r.unpinned[0].editorIndex,0),t.pin(d),i.strictEqual(r.pinned[0].editor,e),i.strictEqual(r.pinned[0].editorIndex,0),t.stick(d),i.strictEqual(r.sticky[0].editor,e),i.strictEqual(r.sticky[0].editorIndex,0),t.unstick(d),i.strictEqual(r.unsticky[0].editor,e),i.strictEqual(r.unsticky[0].editorIndex,0),t.moveEditor(d,1),i.strictEqual(r.moved[0].editor,e),i.strictEqual(r.moved[0].oldEditorIndex,0),i.strictEqual(r.moved[0].editorIndex,1),t.closeEditor(d),i.strictEqual(r.closed[0].editor,e),i.strictEqual(r.closed[0].editorIndex,1),P(t),i.strictEqual(r.closed.length,3),i.strictEqual(t.count,0)}),test("Multiple Editors - Preview editor moves to the side of the active one",function(){const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!1,active:!0}),t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!0,active:!0}),i.strictEqual(s,t.getEditors(u.SEQUENTIAL)[2]);const n=c();t.openEditor(n,{pinned:!1,active:!0}),i.strictEqual(n,t.getEditors(u.SEQUENTIAL)[2])}),test("Multiple Editors - Pinned and Active (DEFAULT_OPEN_EDITOR_DIRECTION = Direction.LEFT)",function(){const t=new x;t.stub(M,p.add(new U)),t.stub(L,p.add(new h)),t.stub(O,new w),t.stub(b,R);const r=new C;t.stub(N,r),r.setUserConfiguration("workbench",{editor:{openPositioning:"left"}});const e=p.add(t.createInstance(k,void 0)),s=f(e),n=c(),o=c(),a=c();e.openEditor(n,{pinned:!0,active:!0}),e.openEditor(o,{pinned:!0,active:!0}),e.openEditor(a,{pinned:!0,active:!0}),i.strictEqual(e.getEditors(u.SEQUENTIAL)[0],a),i.strictEqual(e.getEditors(u.SEQUENTIAL)[1],o),i.strictEqual(e.getEditors(u.SEQUENTIAL)[2],n),P(e),i.strictEqual(s.closed.length,3),i.strictEqual(e.count,0),t.dispose()}),test("Multiple Editors - Pinned and Not Active",function(){const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0}),t.openEditor(e,{pinned:!0}),t.openEditor(s,{pinned:!0}),i.strictEqual(t.count,3),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,3),i.strictEqual(t.activeEditor,r),i.strictEqual(t.isActive(r),!0),i.strictEqual(t.isPinned(r),!0),i.strictEqual(t.isPinned(0),!0),i.strictEqual(t.isActive(e),!1),i.strictEqual(t.isPinned(e),!0),i.strictEqual(t.isPinned(1),!0),i.strictEqual(t.isActive(s),!1),i.strictEqual(t.isPinned(s),!0),i.strictEqual(t.isPinned(2),!0),i.strictEqual(t.isPinned(s),!0);const n=t.getEditors(u.MOST_RECENTLY_ACTIVE);i.strictEqual(n[0],r),i.strictEqual(n[1],s),i.strictEqual(n[2],e)}),test("Multiple Editors - Preview gets overwritten",function(){const t=l(),r=f(t),e=c(),s=c(),n=c();t.openEditor(e),t.openEditor(s),t.openEditor(n),i.strictEqual(t.count,1),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,1),i.strictEqual(t.activeEditor,n),i.strictEqual(t.isActive(n),!0),i.strictEqual(t.isPinned(n),!1),i.strictEqual(!t.isPinned(n),!0),i.strictEqual(r.opened[0].editor,e),i.strictEqual(r.opened[1].editor,s),i.strictEqual(r.opened[2].editor,n),i.strictEqual(r.closed[0].editor,e),i.strictEqual(r.closed[1].editor,s),i.strictEqual(r.closed[0].context===V.REPLACE,!0),i.strictEqual(r.closed[1].context===V.REPLACE,!0);const o=t.getEditors(u.MOST_RECENTLY_ACTIVE);i.strictEqual(o[0],n),i.strictEqual(o.length,1)}),test("Multiple Editors - set active",function(){const t=l(),r=f(t),e=c(),s=c(),n=c();t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!0,active:!0}),t.openEditor(n,{pinned:!1,active:!0}),i.strictEqual(t.activeEditor,n);let o=t.getEditors(u.MOST_RECENTLY_ACTIVE);i.strictEqual(o[0],n),i.strictEqual(o[1],s),i.strictEqual(o[2],e),t.setActive(n),i.strictEqual(r.activated.length,3),t.setActive(e),i.strictEqual(r.activated[3].editor,e),i.strictEqual(t.activeEditor,e),i.strictEqual(t.isActive(e),!0),i.strictEqual(t.isActive(s),!1),i.strictEqual(t.isActive(n),!1),o=t.getEditors(u.MOST_RECENTLY_ACTIVE),i.strictEqual(o[0],e),i.strictEqual(o[1],n),i.strictEqual(o[2],s)}),test("Multiple Editors - pin and unpin",function(){const t=l(),r=f(t),e=c(),s=c(),n=c();t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!0,active:!0}),t.openEditor(n,{pinned:!1,active:!0}),i.strictEqual(t.activeEditor,n),i.strictEqual(t.count,3),t.pin(n),i.strictEqual(t.activeEditor,n),i.strictEqual(t.isPinned(n),!0),i.strictEqual(t.isActive(n),!0),i.strictEqual(r.pinned[0].editor,n),i.strictEqual(t.count,3),t.unpin(e),i.strictEqual(t.activeEditor,n),i.strictEqual(t.isPinned(e),!1),i.strictEqual(t.isActive(e),!1),i.strictEqual(r.unpinned[0].editor,e),i.strictEqual(t.count,3),t.unpin(s),i.strictEqual(t.activeEditor,n),i.strictEqual(t.count,2),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],s),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],n),i.strictEqual(r.closed[0].editor,e),i.strictEqual(t.count,2),t.unpin(n),i.strictEqual(t.activeEditor,n),i.strictEqual(t.count,1),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],n),i.strictEqual(r.closed[1].editor,s),i.strictEqual(t.count,1)}),test("Multiple Editors - closing picks next from MRU list",function(){const t=l(),r=f(t),e=c(),s=c(),n=c(),o=c(),a=c();t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!0,active:!0}),t.openEditor(n,{pinned:!0,active:!0}),t.openEditor(o,{pinned:!0,active:!0}),t.openEditor(a,{pinned:!0,active:!0}),i.strictEqual(t.activeEditor,a),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE)[0],a),i.strictEqual(t.count,5),t.closeEditor(a),i.strictEqual(t.activeEditor,o),i.strictEqual(r.activated[5].editor,o),i.strictEqual(t.count,4),t.setActive(e),t.setActive(o),t.closeEditor(o),i.strictEqual(t.activeEditor,e),i.strictEqual(t.count,3),t.closeEditor(e),i.strictEqual(t.activeEditor,n),i.strictEqual(t.count,2),t.setActive(s),t.closeEditor(s),i.strictEqual(t.activeEditor,n),i.strictEqual(t.count,1),t.closeEditor(n),i.ok(!t.activeEditor),i.strictEqual(t.count,0)}),test("Multiple Editors - closing picks next to the right",function(){const t=new x;t.stub(M,p.add(new U)),t.stub(L,p.add(new h)),t.stub(O,new w),t.stub(b,R);const r=new C;r.setUserConfiguration("workbench",{editor:{focusRecentEditorAfterClose:!1}}),t.stub(N,r);const e=p.add(t.createInstance(k,void 0)),s=f(e),n=c(),o=c(),a=c(),E=c(),d=c();e.openEditor(n,{pinned:!0,active:!0}),e.openEditor(o,{pinned:!0,active:!0}),e.openEditor(a,{pinned:!0,active:!0}),e.openEditor(E,{pinned:!0,active:!0}),e.openEditor(d,{pinned:!0,active:!0}),i.strictEqual(e.activeEditor,d),i.strictEqual(e.getEditors(u.MOST_RECENTLY_ACTIVE)[0],d),i.strictEqual(e.count,5),e.closeEditor(d),i.strictEqual(e.activeEditor,E),i.strictEqual(s.activated[5].editor,E),i.strictEqual(e.count,4),e.setActive(n),e.closeEditor(n),i.strictEqual(e.activeEditor,o),i.strictEqual(e.count,3),e.setActive(a),e.closeEditor(a),i.strictEqual(e.activeEditor,E),i.strictEqual(e.count,2),e.closeEditor(E),i.strictEqual(e.activeEditor,o),i.strictEqual(e.count,1),e.closeEditor(o),i.ok(!e.activeEditor),i.strictEqual(e.count,0),t.dispose()}),test("Multiple Editors - move editor",function(){const t=l(),r=f(t),e=c(),s=c(),n=c(),o=c(),a=c();t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!0,active:!0}),t.moveEditor(e,1),i.strictEqual(r.moved[0].editor,e),i.strictEqual(r.moved[0].oldEditorIndex,0),i.strictEqual(r.moved[0].editorIndex,1),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],s),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],e),t.setActive(e),t.openEditor(n,{pinned:!0,active:!0}),t.openEditor(o,{pinned:!0,active:!0}),t.openEditor(a,{pinned:!0,active:!0}),t.moveEditor(o,0),i.strictEqual(r.moved[1].editor,o),i.strictEqual(r.moved[1].oldEditorIndex,3),i.strictEqual(r.moved[1].editorIndex,0),i.strictEqual(r.moved[1].editor,o),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],o),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],s),i.strictEqual(t.getEditors(u.SEQUENTIAL)[2],e),i.strictEqual(t.getEditors(u.SEQUENTIAL)[3],n),i.strictEqual(t.getEditors(u.SEQUENTIAL)[4],a),t.moveEditor(o,3),t.moveEditor(s,1),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],e),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],s),i.strictEqual(t.getEditors(u.SEQUENTIAL)[2],n),i.strictEqual(t.getEditors(u.SEQUENTIAL)[3],o),i.strictEqual(t.getEditors(u.SEQUENTIAL)[4],a),i.strictEqual(r.moved.length,4),t.moveEditor(e,0),i.strictEqual(r.moved.length,4),t.moveEditor(e,-1),i.strictEqual(r.moved.length,4),t.moveEditor(a,4),i.strictEqual(r.moved.length,4),t.moveEditor(a,100),i.strictEqual(r.moved.length,4),t.moveEditor(a,-1),i.strictEqual(r.moved.length,5),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],a),t.moveEditor(e,100),i.strictEqual(r.moved.length,6),i.strictEqual(t.getEditors(u.SEQUENTIAL)[4],e)}),test("Multiple Editors - move editor across groups",function(){const t=l(),r=l(),e=c(),s=c(),n=c();t.openEditor(e,{active:!0,pinned:!0}),t.openEditor(s,{active:!0,pinned:!0}),r.openEditor(n,{active:!0,pinned:!0}),r.closeEditor(n),t.openEditor(n,{active:!0,pinned:!0,index:1}),i.strictEqual(t.count,3),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],e),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],n),i.strictEqual(t.getEditors(u.SEQUENTIAL)[2],s)}),test("Multiple Editors - move editor across groups (input already exists in group 1)",function(){const t=l(),r=l(),e=c(),s=c(),n=c(),o=s;t.openEditor(e,{active:!0,pinned:!0}),t.openEditor(s,{active:!0,pinned:!0}),t.openEditor(n,{active:!0,pinned:!0}),r.openEditor(o,{active:!0,pinned:!0}),r.closeEditor(o),t.openEditor(o,{active:!0,pinned:!0,index:0}),i.strictEqual(t.count,3),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],s),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],e),i.strictEqual(t.getEditors(u.SEQUENTIAL)[2],n)}),test("Multiple Editors - Pinned & Non Active",function(){const t=l(),r=c();t.openEditor(r),i.strictEqual(t.activeEditor,r),i.strictEqual(t.previewEditor,r),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],r),i.strictEqual(t.count,1);const e=c();t.openEditor(e,{pinned:!0,active:!1}),i.strictEqual(t.activeEditor,r),i.strictEqual(t.previewEditor,r),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],r),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],e),i.strictEqual(t.count,2);const s=c();t.openEditor(s,{pinned:!0,active:!1}),i.strictEqual(t.activeEditor,r),i.strictEqual(t.previewEditor,r),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],r),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],s),i.strictEqual(t.getEditors(u.SEQUENTIAL)[2],e),i.strictEqual(t.isPinned(r),!1),i.strictEqual(t.isPinned(e),!0),i.strictEqual(t.isPinned(s),!0),i.strictEqual(t.count,3)}),test("Multiple Editors - Close Others, Close Left, Close Right",function(){const t=l(),r=c(),e=c(),s=c(),n=c(),o=c();t.openEditor(r,{active:!0,pinned:!0}),t.openEditor(e,{active:!0,pinned:!0}),t.openEditor(s,{active:!0,pinned:!0}),t.openEditor(n,{active:!0,pinned:!0}),t.openEditor(o,{active:!0,pinned:!0}),K(t,t.activeEditor),i.strictEqual(t.activeEditor,o),i.strictEqual(t.count,1),P(t),t.openEditor(r,{active:!0,pinned:!0}),t.openEditor(e,{active:!0,pinned:!0}),t.openEditor(s,{active:!0,pinned:!0}),t.openEditor(n,{active:!0,pinned:!0}),t.openEditor(o,{active:!0,pinned:!0}),t.setActive(s),i.strictEqual(t.activeEditor,s),K(t,t.activeEditor,G.LEFT),i.strictEqual(t.activeEditor,s),i.strictEqual(t.count,3),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],s),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],n),i.strictEqual(t.getEditors(u.SEQUENTIAL)[2],o),P(t),t.openEditor(r,{active:!0,pinned:!0}),t.openEditor(e,{active:!0,pinned:!0}),t.openEditor(s,{active:!0,pinned:!0}),t.openEditor(n,{active:!0,pinned:!0}),t.openEditor(o,{active:!0,pinned:!0}),t.setActive(s),i.strictEqual(t.activeEditor,s),K(t,t.activeEditor,G.RIGHT),i.strictEqual(t.activeEditor,s),i.strictEqual(t.count,3),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],r),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],e),i.strictEqual(t.getEditors(u.SEQUENTIAL)[2],s)}),test("Multiple Editors - real user example",function(){const t=l(),r=c("index.html");let e=t.openEditor(r).editor;i.strictEqual(e,r),i.strictEqual(t.activeEditor,r),i.strictEqual(t.previewEditor,r),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],r),i.strictEqual(t.count,1);const s=c("index.html");e=t.openEditor(s).editor,i.strictEqual(e,r),i.strictEqual(t.activeEditor,r),i.strictEqual(t.previewEditor,r),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],r),i.strictEqual(t.count,1);const n=c("style.css");e=t.openEditor(n).editor,i.strictEqual(e,n),i.strictEqual(t.activeEditor,n),i.strictEqual(t.previewEditor,n),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],n),i.strictEqual(t.count,1);const o=c("test.js");e=t.openEditor(o,{active:!0,pinned:!0}).editor,i.strictEqual(e,o),i.strictEqual(t.previewEditor,n),i.strictEqual(t.activeEditor,o),i.strictEqual(t.isPinned(n),!1),i.strictEqual(t.isPinned(o),!0),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],n),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],o),i.strictEqual(t.count,2);const a=c("index.html");t.openEditor(a,{active:!0}),i.strictEqual(t.activeEditor,a),i.strictEqual(t.previewEditor,a),i.strictEqual(t.isPinned(a),!1),i.strictEqual(t.isPinned(o),!0),i.strictEqual(t.getEditors(u.SEQUENTIAL)[0],o),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],a),i.strictEqual(t.count,2);const E=c("test.js");t.setActive(E),i.strictEqual(t.activeEditor,o),i.strictEqual(t.isActive(E),!0),i.strictEqual(t.count,2);const d=c("index.html");t.pin(d),i.strictEqual(t.isPinned(d),!0),i.strictEqual(t.activeEditor,o);const q=c("file.ts");t.openEditor(q,{active:!0,pinned:!0}),i.strictEqual(t.isPinned(q),!0),i.strictEqual(t.count,3),i.strictEqual(t.activeEditor,q),t.unpin(q),i.strictEqual(t.count,3),i.strictEqual(t.isPinned(q),!1),i.strictEqual(t.activeEditor,q);const S=c("other.ts");t.openEditor(S,{active:!0}),i.strictEqual(t.count,3),i.strictEqual(t.activeEditor,S),i.ok(t.getEditors(u.SEQUENTIAL)[0].matches(o)),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],S),i.ok(t.getEditors(u.SEQUENTIAL)[2].matches(r));const Q=c("index.html");t.setActive(Q),i.strictEqual(t.activeEditor,a),t.closeEditor(r),i.strictEqual(t.count,2),i.strictEqual(t.activeEditor,S),i.ok(t.getEditors(u.SEQUENTIAL)[0].matches(o)),i.strictEqual(t.getEditors(u.SEQUENTIAL)[1],S),t.closeEditor(S),i.strictEqual(t.count,1),i.strictEqual(t.activeEditor,o),i.ok(t.getEditors(u.SEQUENTIAL)[0].matches(o)),t.unpin(o),i.strictEqual(t.count,1),i.strictEqual(t.activeEditor,o),i.ok(t.getEditors(u.SEQUENTIAL)[0].matches(o)),i.strictEqual(t.isPinned(o),!1),t.closeEditor(o),i.strictEqual(t.count,0),i.strictEqual(t.activeEditor,null),i.strictEqual(t.previewEditor,null)}),test("Single Group, Single Editor - persist",function(){const t=new x;t.stub(M,p.add(new U)),t.stub(O,new w);const r=p.add(new h);t.stub(L,r),t.stub(b,R);const e=new C;e.setUserConfiguration("workbench",{editor:{openPositioning:"right"}}),t.stub(N,e),t.invokeFunction(o=>_.as(m.EditorFactory).start(o));let s=l();const n=c();s.openEditor(n),i.strictEqual(s.count,1),i.strictEqual(s.activeEditor.matches(n),!0),i.strictEqual(s.previewEditor.matches(n),!0),i.strictEqual(s.isActive(n),!0),s=p.add(t.createInstance(k,s.serialize())),i.strictEqual(s.count,1),i.strictEqual(s.activeEditor.matches(n),!0),i.strictEqual(s.previewEditor.matches(n),!0),i.strictEqual(s.isActive(n),!0),t.dispose()}),test("Multiple Groups, Multiple editors - persist",function(){const t=new x;t.stub(M,p.add(new U)),t.stub(O,new w);const r=p.add(new h);t.stub(L,r),t.stub(b,R);const e=new C;e.setUserConfiguration("workbench",{editor:{openPositioning:"right"}}),t.stub(N,e),t.invokeFunction(Q=>_.as(m.EditorFactory).start(Q));let s=l();const n=c(),o=c(),a=c();s.openEditor(n,{active:!0,pinned:!0}),s.openEditor(o,{active:!0,pinned:!1}),s.openEditor(a,{active:!1,pinned:!0});let E=l();const d=c(),q=c(),S=c();E.openEditor(d,{active:!0,pinned:!0}),E.openEditor(q,{active:!1,pinned:!1}),E.openEditor(S,{active:!1,pinned:!0}),i.strictEqual(s.count,3),i.strictEqual(E.count,3),i.strictEqual(s.activeEditor.matches(o),!0),i.strictEqual(E.activeEditor.matches(d),!0),i.strictEqual(s.previewEditor.matches(o),!0),i.strictEqual(E.previewEditor.matches(q),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[0].matches(o),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[1].matches(a),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[2].matches(n),!0),i.strictEqual(E.getEditors(u.MOST_RECENTLY_ACTIVE)[0].matches(d),!0),i.strictEqual(E.getEditors(u.MOST_RECENTLY_ACTIVE)[1].matches(S),!0),i.strictEqual(E.getEditors(u.MOST_RECENTLY_ACTIVE)[2].matches(q),!0),s=p.add(t.createInstance(k,s.serialize())),E=p.add(t.createInstance(k,E.serialize())),i.strictEqual(s.count,3),i.strictEqual(E.count,3),i.strictEqual(s.activeEditor.matches(o),!0),i.strictEqual(E.activeEditor.matches(d),!0),i.strictEqual(s.previewEditor.matches(o),!0),i.strictEqual(E.previewEditor.matches(q),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[0].matches(o),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[1].matches(a),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[2].matches(n),!0),i.strictEqual(E.getEditors(u.MOST_RECENTLY_ACTIVE)[0].matches(d),!0),i.strictEqual(E.getEditors(u.MOST_RECENTLY_ACTIVE)[1].matches(S),!0),i.strictEqual(E.getEditors(u.MOST_RECENTLY_ACTIVE)[2].matches(q),!0),t.dispose()}),test("Single group, multiple editors - persist (some not persistable)",function(){const t=new x;t.stub(M,p.add(new U)),t.stub(O,new w);const r=p.add(new h);t.stub(L,r),t.stub(b,R);const e=new C;e.setUserConfiguration("workbench",{editor:{openPositioning:"right"}}),t.stub(N,e),t.invokeFunction(E=>_.as(m.EditorFactory).start(E));let s=l();const n=c(),o=c("3",!0),a=c();s.openEditor(n,{active:!0,pinned:!0}),s.openEditor(o,{active:!0,pinned:!1}),s.openEditor(a,{active:!1,pinned:!0}),i.strictEqual(s.count,3),i.strictEqual(s.activeEditor.matches(o),!0),i.strictEqual(s.previewEditor.matches(o),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[0].matches(o),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[1].matches(a),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[2].matches(n),!0),s=p.add(t.createInstance(k,s.serialize())),i.strictEqual(s.count,2),i.strictEqual(s.activeEditor.matches(a),!0),i.strictEqual(s.previewEditor,null),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[0].matches(a),!0),i.strictEqual(s.getEditors(u.MOST_RECENTLY_ACTIVE)[1].matches(n),!0),t.dispose()}),test("Single group, multiple editors - persist (some not persistable, sticky editors)",function(){const t=new x;t.stub(M,p.add(new U)),t.stub(O,new w);const r=p.add(new h);t.stub(L,r),t.stub(b,R);const e=new C;e.setUserConfiguration("workbench",{editor:{openPositioning:"right"}}),t.stub(N,e),t.invokeFunction(E=>_.as(m.EditorFactory).start(E));let s=l();const n=c(),o=c("3",!0),a=c();s.openEditor(n,{active:!0,pinned:!0}),s.openEditor(o,{active:!0,pinned:!0,sticky:!0}),s.openEditor(a,{active:!1,pinned:!0}),i.strictEqual(s.count,3),i.strictEqual(s.stickyCount,1),s=p.add(t.createInstance(k,s.serialize())),i.strictEqual(s.count,2),i.strictEqual(s.stickyCount,0),t.dispose()}),test("Multiple groups, multiple editors - persist (some not persistable, causes empty group)",function(){const t=new x;t.stub(M,p.add(new U)),t.stub(O,new w);const r=p.add(new h);t.stub(L,r),t.stub(b,R);const e=new C;e.setUserConfiguration("workbench",{editor:{openPositioning:"right"}}),t.stub(N,e),t.invokeFunction(d=>_.as(m.EditorFactory).start(d));let s=l(),n=l();const o=c(),a=c(),E=c("2",!0);s.openEditor(o,{pinned:!0}),s.openEditor(a),n.openEditor(E),s=p.add(t.createInstance(k,s.serialize())),n=p.add(t.createInstance(k,n.serialize())),i.strictEqual(s.count,2),i.strictEqual(s.getEditors(u.SEQUENTIAL)[0].matches(o),!0),i.strictEqual(s.getEditors(u.SEQUENTIAL)[1].matches(a),!0),t.dispose()}),test("Multiple Editors - Editor Dispose",function(){const t=l(),r=l(),e=f(t),s=f(r),n=c(),o=c(),a=c();t.openEditor(n,{pinned:!0,active:!0}),t.openEditor(o,{pinned:!0,active:!0}),t.openEditor(a,{pinned:!0,active:!0}),r.openEditor(n,{pinned:!0,active:!0}),r.openEditor(o,{pinned:!0,active:!0}),n.dispose(),i.strictEqual(e.disposed.length,1),i.strictEqual(e.disposed[0].editorIndex,0),i.strictEqual(s.disposed.length,1),i.strictEqual(s.disposed[0].editorIndex,0),i.ok(e.disposed[0].editor.matches(n)),i.ok(s.disposed[0].editor.matches(n)),a.dispose(),i.strictEqual(e.disposed.length,2),i.strictEqual(e.disposed[1].editorIndex,2),i.strictEqual(s.disposed.length,1),i.ok(e.disposed[1].editor.matches(a))}),test("Preview tab does not have a stable position (https://github.com/microsoft/vscode/issues/8245)",function(){const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0}),t.openEditor(e,{active:!0}),t.setActive(r),t.openEditor(s,{active:!0}),i.strictEqual(t.indexOf(s),1)}),test("Multiple Editors - Editor Emits Dirty and Label Changed",function(){const t=l(),r=l(),e=c(),s=c();t.openEditor(e,{pinned:!0,active:!0}),r.openEditor(s,{pinned:!0,active:!0});let n=0;p.add(t.onDidModelChange(d=>{d.kind===g.EDITOR_DIRTY&&n++}));let o=0;p.add(r.onDidModelChange(d=>{d.kind===g.EDITOR_DIRTY&&o++}));let a=0;p.add(t.onDidModelChange(d=>{d.kind===g.EDITOR_LABEL&&a++}));let E=0;p.add(r.onDidModelChange(d=>{d.kind===g.EDITOR_LABEL&&E++})),e.setDirty(),e.setLabel(),i.strictEqual(n,1),i.strictEqual(a,1),s.setDirty(),s.setLabel(),i.strictEqual(o,1),i.strictEqual(E,1),P(r),s.setDirty(),s.setLabel(),i.strictEqual(o,1),i.strictEqual(E,1),i.strictEqual(n,1),i.strictEqual(a,1)}),test("Sticky Editors",function(){const t=l(),r=c(),e=c(),s=c(),n=c();t.openEditor(r,{pinned:!0,active:!0}),t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!1,active:!0}),i.strictEqual(t.stickyCount,0),i.strictEqual(t.getEditors(u.SEQUENTIAL).length,3),i.strictEqual(t.getEditors(u.SEQUENTIAL,{excludeSticky:!0}).length,3),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE).length,3),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE,{excludeSticky:!0}).length,3),t.stick(s),i.strictEqual(t.stickyCount,1),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE,{excludeSticky:!0}).length,2),i.strictEqual(t.getEditors(u.MOST_RECENTLY_ACTIVE,{excludeSticky:!1}).length,3),i.strictEqual(t.isSticky(r),!1),i.strictEqual(t.isSticky(e),!1),i.strictEqual(t.isSticky(s),!0),i.strictEqual(t.isPinned(s),!0),i.strictEqual(t.indexOf(r),1),i.strictEqual(t.indexOf(e),2),i.strictEqual(t.indexOf(s),0);let o=t.getEditors(u.SEQUENTIAL);i.strictEqual(o.length,3);let a=t.getEditors(u.SEQUENTIAL,{excludeSticky:!0});i.strictEqual(a.length,2),i.ok(a.indexOf(r)>=0),i.ok(a.indexOf(e)>=0);let E=t.getEditors(u.MOST_RECENTLY_ACTIVE);i.strictEqual(E.length,3);let d=t.getEditors(u.MOST_RECENTLY_ACTIVE,{excludeSticky:!0});i.strictEqual(d.length,2),i.ok(d.indexOf(r)>=0),i.ok(d.indexOf(e)>=0),t.stick(s),i.strictEqual(t.isSticky(s),!0),t.stick(e),i.strictEqual(t.stickyCount,2),i.strictEqual(t.isSticky(r),!1),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.isSticky(s),!0),i.strictEqual(t.indexOf(r),2),i.strictEqual(t.indexOf(e),1),i.strictEqual(t.indexOf(s),0),o=t.getEditors(u.SEQUENTIAL),i.strictEqual(o.length,3),a=t.getEditors(u.SEQUENTIAL,{excludeSticky:!0}),i.strictEqual(a.length,1),i.ok(a.indexOf(r)>=0),E=t.getEditors(u.MOST_RECENTLY_ACTIVE),i.strictEqual(E.length,3),d=t.getEditors(u.MOST_RECENTLY_ACTIVE,{excludeSticky:!0}),i.strictEqual(d.length,1),i.ok(d.indexOf(r)>=0),t.stick(r),i.strictEqual(t.stickyCount,3),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.isSticky(s),!0),i.strictEqual(t.indexOf(r),2),i.strictEqual(t.indexOf(e),1),i.strictEqual(t.indexOf(s),0),o=t.getEditors(u.SEQUENTIAL),i.strictEqual(o.length,3),a=t.getEditors(u.SEQUENTIAL,{excludeSticky:!0}),i.strictEqual(a.length,0),E=t.getEditors(u.MOST_RECENTLY_ACTIVE),i.strictEqual(E.length,3),d=t.getEditors(u.MOST_RECENTLY_ACTIVE,{excludeSticky:!0}),i.strictEqual(d.length,0),t.unstick(s),i.strictEqual(t.stickyCount,2),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.indexOf(r),1),i.strictEqual(t.indexOf(e),0),i.strictEqual(t.indexOf(s),2),t.unstick(r),t.unstick(e),i.strictEqual(t.stickyCount,0),i.strictEqual(t.isSticky(r),!1),i.strictEqual(t.isSticky(e),!1),i.strictEqual(t.isSticky(s),!1),t.moveEditor(r,0),t.moveEditor(e,1),t.moveEditor(s,2),t.stick(r),t.stick(e),t.setActive(r);const q=f(t);t.openEditor(n,{pinned:!0,active:!0}),i.strictEqual(t.indexOf(n),2),t.closeEditor(n),i.strictEqual(q.closed[0].sticky,!1),t.setActive(e),t.openEditor(n,{pinned:!0,active:!0}),i.strictEqual(t.indexOf(n),2),t.closeEditor(n),i.strictEqual(q.closed[1].sticky,!1),i.strictEqual(t.stickyCount,2),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.indexOf(r),0),i.strictEqual(t.indexOf(e),1),i.strictEqual(t.indexOf(s),2),t.moveEditor(r,1),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.indexOf(r),1),i.strictEqual(t.indexOf(e),0),i.strictEqual(t.indexOf(s),2),t.moveEditor(r,0),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.indexOf(r),0),i.strictEqual(t.indexOf(e),1),i.strictEqual(t.indexOf(s),2),t.moveEditor(r,2),i.strictEqual(t.isSticky(r),!1),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.indexOf(r),2),i.strictEqual(t.indexOf(e),0),i.strictEqual(t.indexOf(s),1),t.moveEditor(e,2),i.strictEqual(t.isSticky(r),!1),i.strictEqual(t.isSticky(e),!1),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.indexOf(r),1),i.strictEqual(t.indexOf(e),2),i.strictEqual(t.indexOf(s),0),t.moveEditor(r,0),t.moveEditor(e,1),t.moveEditor(s,2),t.stick(r),t.unstick(e),i.strictEqual(t.stickyCount,1),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!1),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.indexOf(r),0),i.strictEqual(t.indexOf(e),1),i.strictEqual(t.indexOf(s),2),t.moveEditor(s,1),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!1),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.indexOf(r),0),i.strictEqual(t.indexOf(e),2),i.strictEqual(t.indexOf(s),1),t.moveEditor(s,2),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!1),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.indexOf(r),0),i.strictEqual(t.indexOf(e),1),i.strictEqual(t.indexOf(s),2),t.moveEditor(s,0),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!1),i.strictEqual(t.isSticky(s),!0),i.strictEqual(t.indexOf(r),1),i.strictEqual(t.indexOf(e),2),i.strictEqual(t.indexOf(s),0),t.moveEditor(e,0),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.isSticky(s),!0),i.strictEqual(t.indexOf(r),2),i.strictEqual(t.indexOf(e),0),i.strictEqual(t.indexOf(s),1),t.stick(r),t.stick(e),t.unstick(s),i.strictEqual(t.stickyCount,2),t.closeEditor(r),i.strictEqual(q.closed[2].sticky,!0),i.strictEqual(t.stickyCount,1),t.closeEditor(e),i.strictEqual(q.closed[3].sticky,!0),i.strictEqual(t.stickyCount,0),P(t),i.strictEqual(t.stickyCount,0),t.openEditor(r,{sticky:!0}),i.strictEqual(t.stickyCount,1),i.strictEqual(t.isSticky(r),!0),t.openEditor(e,{pinned:!0,active:!0}),i.strictEqual(t.stickyCount,1),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!1),t.openEditor(e,{sticky:!0}),i.strictEqual(t.stickyCount,2),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!0),t.openEditor(s,{pinned:!0,active:!0}),t.openEditor(n,{pinned:!1,active:!0,sticky:!0}),i.strictEqual(t.stickyCount,3),i.strictEqual(t.isSticky(r),!0),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.isSticky(n),!0),i.strictEqual(t.isPinned(n),!0),i.strictEqual(t.indexOf(r),0),i.strictEqual(t.indexOf(e),1),i.strictEqual(t.indexOf(s),3),i.strictEqual(t.indexOf(n),2)}),test("Sticky/Unsticky Editors sends correct editor index",function(){const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0}),t.openEditor(e,{pinned:!0,active:!0}),t.openEditor(s,{pinned:!1,active:!0}),i.strictEqual(t.stickyCount,0);const n=f(t);t.stick(s),i.strictEqual(n.sticky[0].editorIndex,0),i.strictEqual(t.isSticky(s),!0),i.strictEqual(t.stickyCount,1),t.stick(e),i.strictEqual(n.sticky[1].editorIndex,1),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.stickyCount,2),t.unstick(s),i.strictEqual(n.unsticky[0].editorIndex,1),i.strictEqual(t.isSticky(s),!1),i.strictEqual(t.isSticky(e),!0),i.strictEqual(t.stickyCount,1)}),test("onDidMoveEditor Event",()=>{const t=l(),r=l(),e=c(),s=c(),n=c(),o=c();t.openEditor(e,{pinned:!0,active:!0,index:0}),t.openEditor(s,{pinned:!0,active:!1,index:1}),r.openEditor(n,{pinned:!0,active:!0,index:0}),r.openEditor(o,{pinned:!0,active:!1,index:1});const a=f(t),E=f(r);t.moveEditor(e,1),i.strictEqual(a.moved[0].editor,e),i.strictEqual(a.moved[0].oldEditorIndex,0),i.strictEqual(a.moved[0].editorIndex,1),r.moveEditor(n,1),i.strictEqual(E.moved[0].editor,n),i.strictEqual(E.moved[0].oldEditorIndex,0),i.strictEqual(E.moved[0].editorIndex,1)}),test("onDidOpeneditor Event",()=>{const t=l(),r=l(),e=f(t),s=f(r),n=c(),o=c(),a=c(),E=c();t.openEditor(n,{pinned:!0,active:!0,index:0}),t.openEditor(o,{pinned:!0,active:!1,index:1}),r.openEditor(a,{pinned:!0,active:!0,index:0}),r.openEditor(E,{pinned:!0,active:!1,index:1}),i.strictEqual(e.opened.length,2),i.strictEqual(e.opened[0].editor,n),i.strictEqual(e.opened[0].editorIndex,0),i.strictEqual(e.opened[1].editor,o),i.strictEqual(e.opened[1].editorIndex,1),i.strictEqual(s.opened.length,2),i.strictEqual(s.opened[0].editor,a),i.strictEqual(s.opened[0].editorIndex,0),i.strictEqual(s.opened[1].editor,E),i.strictEqual(s.opened[1].editorIndex,1)}),test("moving editor sends sticky event when sticky changes",()=>{const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0,index:0,sticky:!0}),t.openEditor(e,{pinned:!0,active:!1,index:1}),t.openEditor(s,{pinned:!0,active:!1,index:2});const n=f(t);t.moveEditor(e,0),i.strictEqual(n.sticky[0].editor,e),i.strictEqual(n.sticky[0].editorIndex,0);const o=l(),a=c(),E=c(),d=c();o.openEditor(a,{pinned:!0,active:!0,index:0,sticky:!0}),o.openEditor(E,{pinned:!0,active:!1,index:1}),o.openEditor(d,{pinned:!0,active:!1,index:2});const q=f(o);o.moveEditor(a,1),i.strictEqual(q.unsticky[0].editor,a),i.strictEqual(q.unsticky[0].editorIndex,1)});function y(t,r,e){i.strictEqual(t.activeEditor,r),i.strictEqual(t.selectedEditors.length,e.length);for(let s=0;s<e.length;s++)i.strictEqual(t.selectedEditors[s],e[s])}test("editor selection: selectedEditors",()=>{const t=l(),r=t.activeEditor,e=t.selectedEditors;i.strictEqual(r,null),i.strictEqual(e.length,0);const s=c();t.openEditor(s,{pinned:!0,active:!0,index:0}),y(t,s,[s]);const n=c(),o=c();t.openEditor(n,{pinned:!0,active:!0,index:1}),t.openEditor(o,{pinned:!0,active:!0,index:2}),y(t,o,[o]),t.setSelection(n,[s]),y(t,n,[s,n])}),test("editor selection: openEditor with inactive selection",()=>{const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0,index:0}),t.openEditor(e,{pinned:!0,active:!0,index:1}),t.openEditor(s,{pinned:!0,active:!0,index:2}),t.openEditor(e,{active:!0,inactiveSelection:[s,r]}),y(t,e,[r,e,s]),t.openEditor(r,{active:!0,inactiveSelection:[s,r,s]}),y(t,r,[r,s]);const n=c();t.openEditor(n,{pinned:!0,active:!1,inactiveSelection:[e],index:3}),y(t,r,[r,e]);const o=c();t.openEditor(o,{pinned:!0,active:!0,inactiveSelection:[n],index:4}),y(t,o,[n,o])}),test("editor selection: closeEditor keeps selection",()=>{const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0,index:0}),t.openEditor(e,{pinned:!0,active:!0,index:1}),t.openEditor(s,{pinned:!0,active:!0,index:2}),t.setSelection(e,[s,r]),t.closeEditor(s),y(t,e,[r,e])}),test("editor selection: setSeletion",()=>{const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0,index:0}),t.openEditor(e,{pinned:!0,active:!0,index:1}),t.openEditor(s,{pinned:!0,active:!0,index:2}),t.setSelection(e,[s,r]),y(t,e,[r,e,s]),t.setSelection(s,[]),y(t,s,[s]),t.setSelection(e,[r,e,r]),y(t,e,[r,e])}),test("editor selection: isSelected",()=>{const t=l(),r=c(),e=c(),s=c();t.openEditor(r,{pinned:!0,active:!0,index:0}),t.openEditor(e,{pinned:!0,active:!0,index:1}),t.openEditor(s,{pinned:!0,active:!0,index:2}),t.setSelection(e,[s,r]),i.strictEqual(t.isSelected(r),!0),i.strictEqual(t.isSelected(e),!0),i.strictEqual(t.isSelected(s),!0),t.setSelection(s,[]),i.strictEqual(t.isSelected(r),!1),i.strictEqual(t.isSelected(e),!1),i.strictEqual(t.isSelected(s),!0),i.strictEqual(t.isSelected(0),!1),i.strictEqual(t.isSelected(1),!1),i.strictEqual(t.isSelected(2),!0)}),test("editor selection: select invalid editor",()=>{const t=l(),r=c(),e=c();t.openEditor(r,{pinned:!0,active:!0,index:0}),t.setSelection(e,[r]),i.strictEqual(t.activeEditor,r),i.strictEqual(t.selectedEditors.length,1),i.strictEqual(t.isSelected(r),!0),i.strictEqual(t.isSelected(r),!0),i.strictEqual(t.isSelected(e),!1),t.setSelection(r,[e]),i.strictEqual(t.activeEditor,r),i.strictEqual(t.selectedEditors.length,1),i.strictEqual(t.isSelected(r),!0),i.strictEqual(t.isSelected(r),!0),i.strictEqual(t.isSelected(e),!1)}),test("editor transient: basics",()=>{const t=l(),r=f(t),e=c(),s=c();t.openEditor(e,{pinned:!0,active:!0}),i.strictEqual(t.isTransient(e),!1),i.strictEqual(r.transient.length,0),t.openEditor(s,{pinned:!0,active:!0,transient:!0}),i.strictEqual(r.transient[0].editor,s),i.strictEqual(t.isTransient(s),!0),t.setTransient(e,!0),i.strictEqual(t.isTransient(e),!0),i.strictEqual(r.transient[1].editor,e),t.setTransient(s,!1),i.strictEqual(t.isTransient(s),!1),i.strictEqual(r.transient[2].editor,s)}),ot()});
