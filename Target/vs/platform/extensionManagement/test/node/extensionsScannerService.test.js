var D=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var P=(t,i,r,S)=>{for(var f=S>1?void 0:S?M(i,r):i,c=t.length-1,s;c>=0;c--)(s=t[c])&&(f=(S?s(i,r,f):s(f))||f);return S&&f&&D(i,r,f),f},b=(t,i)=>(r,S)=>i(r,S,t);import e from"assert";import{VSBuffer as q}from"../../../../base/common/buffer.js";import{dirname as T,joinPath as p}from"../../../../base/common/resources.js";import{URI as x}from"../../../../base/common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as F}from"../../../../base/test/common/utils.js";import{INativeEnvironmentService as I}from"../../../environment/common/environment.js";import{IExtensionsProfileScannerService as U}from"../../common/extensionsProfileScannerService.js";import{AbstractExtensionsScannerService as H,ExtensionScannerInput as l}from"../../common/extensionsScannerService.js";import{ExtensionsProfileScannerService as k}from"../../node/extensionsProfileScannerService.js";import{ExtensionType as m,TargetPlatform as g}from"../../../extensions/common/extensions.js";import{IFileService as E}from"../../../files/common/files.js";import{FileService as R}from"../../../files/common/fileService.js";import{InMemoryFileSystemProvider as J}from"../../../files/common/inMemoryFilesystemProvider.js";import{IInstantiationService as V}from"../../../instantiation/common/instantiation.js";import{TestInstantiationService as _}from"../../../instantiation/test/common/instantiationServiceMock.js";import{ILogService as j,NullLogService as B}from"../../../log/common/log.js";import{IProductService as w}from"../../../product/common/productService.js";import{NullTelemetryService as $}from"../../../telemetry/common/telemetryUtils.js";import{IUriIdentityService as W}from"../../../uriIdentity/common/uriIdentity.js";import{UriIdentityService as A}from"../../../uriIdentity/common/uriIdentityService.js";import{IUserDataProfilesService as L,UserDataProfilesService as C}from"../../../userDataProfile/common/userDataProfile.js";let v=Object.create(null);const o=x.file("/ROOT");let d=class extends H{constructor(i,r,S,f,c,s,n,u){super(x.file(c.builtinExtensionsPath),x.file(c.extensionsPath),p(c.userHome,".vscode-oss-dev","extensions","control.json"),i.defaultProfile,i,r,S,f,c,s,n,u)}async getTranslations(i){return v}};d=P([b(0,L),b(1,U),b(2,E),b(3,j),b(4,I),b(5,w),b(6,W),b(7,V)],d),suite("NativeExtensionsScanerService Test",()=>{const t=F();let i;setup(async()=>{v={},i=t.add(new _);const s=new B,n=t.add(new R(s)),u=t.add(new J);t.add(n.registerProvider(o.scheme,u)),i.stub(j,s),i.stub(E,n);const a=p(o,"system"),y=p(o,"extensions"),O=i.stub(I,{userHome:o,userRoamingDataHome:o,builtinExtensionsPath:a.fsPath,extensionsPath:y.fsPath,cacheHome:p(o,"cache")});i.stub(w,{version:"1.66.0"});const h=t.add(new A(n));i.stub(W,h);const N=t.add(new C(O,n,h,s));i.stub(L,N),i.stub(U,t.add(new k(O,n,N,h,$,s))),await n.createFolder(a),await n.createFolder(y)}),test("scan system extension",async()=>{const s=c({name:"name",publisher:"pub"}),n=await S(s),a=await t.add(i.createInstance(d)).scanSystemExtensions({});e.deepStrictEqual(a.length,1),e.deepStrictEqual(a[0].identifier,{id:"pub.name"}),e.deepStrictEqual(a[0].location.toString(),n.toString()),e.deepStrictEqual(a[0].isBuiltin,!0),e.deepStrictEqual(a[0].type,m.System),e.deepStrictEqual(a[0].isValid,!0),e.deepStrictEqual(a[0].validations,[]),e.deepStrictEqual(a[0].metadata,void 0),e.deepStrictEqual(a[0].targetPlatform,g.UNDEFINED),e.deepStrictEqual(a[0].manifest,s)}),test("scan user extension",async()=>{const s=c({name:"name",publisher:"pub",__metadata:{id:"uuid"}}),n=await r(s),a=await t.add(i.createInstance(d)).scanUserExtensions({});e.deepStrictEqual(a.length,1),e.deepStrictEqual(a[0].identifier,{id:"pub.name",uuid:"uuid"}),e.deepStrictEqual(a[0].location.toString(),n.toString()),e.deepStrictEqual(a[0].isBuiltin,!1),e.deepStrictEqual(a[0].type,m.User),e.deepStrictEqual(a[0].isValid,!0),e.deepStrictEqual(a[0].validations,[]),e.deepStrictEqual(a[0].metadata,{id:"uuid"}),e.deepStrictEqual(a[0].targetPlatform,g.UNDEFINED),delete s.__metadata,e.deepStrictEqual(a[0].manifest,s)}),test("scan existing extension",async()=>{const s=c({name:"name",publisher:"pub"}),n=await r(s),a=await t.add(i.createInstance(d)).scanExistingExtension(n,m.User,{});e.notEqual(a,null),e.deepStrictEqual(a.identifier,{id:"pub.name"}),e.deepStrictEqual(a.location.toString(),n.toString()),e.deepStrictEqual(a.isBuiltin,!1),e.deepStrictEqual(a.type,m.User),e.deepStrictEqual(a.isValid,!0),e.deepStrictEqual(a.validations,[]),e.deepStrictEqual(a.metadata,void 0),e.deepStrictEqual(a.targetPlatform,g.UNDEFINED),e.deepStrictEqual(a.manifest,s)}),test("scan single extension",async()=>{const s=c({name:"name",publisher:"pub"}),n=await r(s),a=await t.add(i.createInstance(d)).scanOneOrMultipleExtensions(n,m.User,{});e.deepStrictEqual(a.length,1),e.deepStrictEqual(a[0].identifier,{id:"pub.name"}),e.deepStrictEqual(a[0].location.toString(),n.toString()),e.deepStrictEqual(a[0].isBuiltin,!1),e.deepStrictEqual(a[0].type,m.User),e.deepStrictEqual(a[0].isValid,!0),e.deepStrictEqual(a[0].validations,[]),e.deepStrictEqual(a[0].metadata,void 0),e.deepStrictEqual(a[0].targetPlatform,g.UNDEFINED),e.deepStrictEqual(a[0].manifest,s)}),test("scan multiple extensions",async()=>{const s=await r(c({name:"name",publisher:"pub"}));await r(c({name:"name2",publisher:"pub"}));const u=await t.add(i.createInstance(d)).scanOneOrMultipleExtensions(T(s),m.User,{});e.deepStrictEqual(u.length,2),e.deepStrictEqual(u[0].identifier,{id:"pub.name"}),e.deepStrictEqual(u[1].identifier,{id:"pub.name2"})}),test("scan user extension with different versions",async()=>{await r(c({name:"name",publisher:"pub",version:"1.0.1"})),await r(c({name:"name",publisher:"pub",version:"1.0.2"}));const n=await t.add(i.createInstance(d)).scanUserExtensions({});e.deepStrictEqual(n.length,1),e.deepStrictEqual(n[0].identifier,{id:"pub.name"}),e.deepStrictEqual(n[0].manifest.version,"1.0.2")}),test("scan user extension include all versions",async()=>{await r(c({name:"name",publisher:"pub",version:"1.0.1"})),await r(c({name:"name",publisher:"pub",version:"1.0.2"}));const n=await t.add(i.createInstance(d)).scanUserExtensions({includeAllVersions:!0});e.deepStrictEqual(n.length,2),e.deepStrictEqual(n[0].identifier,{id:"pub.name"}),e.deepStrictEqual(n[0].manifest.version,"1.0.1"),e.deepStrictEqual(n[1].identifier,{id:"pub.name"}),e.deepStrictEqual(n[1].manifest.version,"1.0.2")}),test("scan user extension with different versions and higher version is not compatible",async()=>{await r(c({name:"name",publisher:"pub",version:"1.0.1"})),await r(c({name:"name",publisher:"pub",version:"1.0.2",engines:{vscode:"^1.67.0"}}));const n=await t.add(i.createInstance(d)).scanUserExtensions({});e.deepStrictEqual(n.length,1),e.deepStrictEqual(n[0].identifier,{id:"pub.name"}),e.deepStrictEqual(n[0].manifest.version,"1.0.1")}),test("scan exclude invalid extensions",async()=>{await r(c({name:"name",publisher:"pub"})),await r(c({name:"name2",publisher:"pub",engines:{vscode:"^1.67.0"}}));const n=await t.add(i.createInstance(d)).scanUserExtensions({});e.deepStrictEqual(n.length,1),e.deepStrictEqual(n[0].identifier,{id:"pub.name"})}),test("scan exclude uninstalled extensions",async()=>{await r(c({name:"name",publisher:"pub"})),await r(c({name:"name2",publisher:"pub"})),await i.get(E).writeFile(p(x.file(i.get(I).extensionsPath),".obsolete"),q.fromString(JSON.stringify({"pub.name2-1.0.0":!0})));const n=await t.add(i.createInstance(d)).scanUserExtensions({});e.deepStrictEqual(n.length,1),e.deepStrictEqual(n[0].identifier,{id:"pub.name"})}),test("scan include uninstalled extensions",async()=>{await r(c({name:"name",publisher:"pub"})),await r(c({name:"name2",publisher:"pub"})),await i.get(E).writeFile(p(x.file(i.get(I).extensionsPath),".obsolete"),q.fromString(JSON.stringify({"pub.name2-1.0.0":!0})));const n=await t.add(i.createInstance(d)).scanUserExtensions({includeUninstalled:!0});e.deepStrictEqual(n.length,2),e.deepStrictEqual(n[0].identifier,{id:"pub.name"}),e.deepStrictEqual(n[1].identifier,{id:"pub.name2"})}),test("scan include invalid extensions",async()=>{await r(c({name:"name",publisher:"pub"})),await r(c({name:"name2",publisher:"pub",engines:{vscode:"^1.67.0"}}));const n=await t.add(i.createInstance(d)).scanUserExtensions({includeInvalid:!0});e.deepStrictEqual(n.length,2),e.deepStrictEqual(n[0].identifier,{id:"pub.name"}),e.deepStrictEqual(n[1].identifier,{id:"pub.name2"})}),test("scan system extensions include additional builtin extensions",async()=>{i.stub(w,{version:"1.66.0",builtInExtensions:[{name:"pub.name2",version:"",repo:"",metadata:void 0},{name:"pub.name",version:"",repo:"",metadata:void 0}]}),await f(c({name:"name2",publisher:"pub"}),p(o,"additional"));const s=await f(c({name:"name",publisher:"pub"}),p(o,"additional"));await S(c({name:"name",publisher:"pub",version:"1.0.1"})),await i.get(E).writeFile(p(i.get(I).userHome,".vscode-oss-dev","extensions","control.json"),q.fromString(JSON.stringify({"pub.name2":"disabled","pub.name":s.fsPath})));const u=await t.add(i.createInstance(d)).scanSystemExtensions({checkControlFile:!0});e.deepStrictEqual(u.length,1),e.deepStrictEqual(u[0].identifier,{id:"pub.name"}),e.deepStrictEqual(u[0].manifest.version,"1.0.0")}),test("scan extension with default nls replacements",async()=>{const s=await r(c({name:"name",publisher:"pub",displayName:"%displayName%"}));await i.get(E).writeFile(p(s,"package.nls.json"),q.fromString(JSON.stringify({displayName:"Hello World"})));const u=await t.add(i.createInstance(d)).scanUserExtensions({});e.deepStrictEqual(u.length,1),e.deepStrictEqual(u[0].identifier,{id:"pub.name"}),e.deepStrictEqual(u[0].manifest.displayName,"Hello World")}),test("scan extension with en nls replacements",async()=>{const s=await r(c({name:"name",publisher:"pub",displayName:"%displayName%"}));await i.get(E).writeFile(p(s,"package.nls.json"),q.fromString(JSON.stringify({displayName:"Hello World"})));const n=p(s,"package.en.json");await i.get(E).writeFile(n,q.fromString(JSON.stringify({contents:{package:{displayName:"Hello World EN"}}})));const u=t.add(i.createInstance(d));v={"pub.name":n.fsPath};const a=await u.scanUserExtensions({language:"en"});e.deepStrictEqual(a.length,1),e.deepStrictEqual(a[0].identifier,{id:"pub.name"}),e.deepStrictEqual(a[0].manifest.displayName,"Hello World EN")}),test("scan extension falls back to default nls replacements",async()=>{const s=await r(c({name:"name",publisher:"pub",displayName:"%displayName%"}));await i.get(E).writeFile(p(s,"package.nls.json"),q.fromString(JSON.stringify({displayName:"Hello World"})));const n=p(s,"package.en.json");await i.get(E).writeFile(n,q.fromString(JSON.stringify({contents:{package:{displayName:"Hello World EN"}}})));const u=t.add(i.createInstance(d));v={"pub.name2":n.fsPath};const a=await u.scanUserExtensions({language:"en"});e.deepStrictEqual(a.length,1),e.deepStrictEqual(a[0].identifier,{id:"pub.name"}),e.deepStrictEqual(a[0].manifest.displayName,"Hello World")});async function r(s){const n=i.get(I);return f(s,x.file(n.extensionsPath))}async function S(s){const n=i.get(I);return f(s,x.file(n.builtinExtensionsPath))}async function f(s,n){const u=i.get(E),a=p(n,`${s.publisher}.${s.name}-${s.version}-${s.__metadata?.targetPlatform??g.UNDEFINED}`);return await u.writeFile(p(a,"package.json"),q.fromString(JSON.stringify(s))),a}function c(s){return{engines:{vscode:"^1.66.0"},version:"1.0.0",main:"main.js",activationEvents:["*"],...s}}}),suite("ExtensionScannerInput",()=>{F(),test("compare inputs - location",()=>{const t=(i,r)=>new l(i,r,void 0,void 0,!1,void 0,m.User,!0,!0,"1.1.1",void 0,void 0,!0,void 0,{});e.strictEqual(l.equals(t(o,void 0),t(o,void 0)),!0),e.strictEqual(l.equals(t(o,100),t(o,100)),!0),e.strictEqual(l.equals(t(p(o,"foo"),void 0),t(o,void 0)),!1),e.strictEqual(l.equals(t(o,100),t(o,200)),!1),e.strictEqual(l.equals(t(o,void 0),t(o,200)),!1)}),test("compare inputs - application location",()=>{const t=(i,r)=>new l(o,void 0,i,r,!1,void 0,m.User,!0,!0,"1.1.1",void 0,void 0,!0,void 0,{});e.strictEqual(l.equals(t(o,void 0),t(o,void 0)),!0),e.strictEqual(l.equals(t(o,100),t(o,100)),!0),e.strictEqual(l.equals(t(p(o,"foo"),void 0),t(o,void 0)),!1),e.strictEqual(l.equals(t(o,100),t(o,200)),!1),e.strictEqual(l.equals(t(o,void 0),t(o,200)),!1)}),test("compare inputs - profile",()=>{const t=(i,r)=>new l(o,void 0,void 0,void 0,i,r,m.User,!0,!0,"1.1.1",void 0,void 0,!0,void 0,{});e.strictEqual(l.equals(t(!0,{bailOutWhenFileNotFound:!0}),t(!0,{bailOutWhenFileNotFound:!0})),!0),e.strictEqual(l.equals(t(!1,{bailOutWhenFileNotFound:!0}),t(!1,{bailOutWhenFileNotFound:!0})),!0),e.strictEqual(l.equals(t(!0,{bailOutWhenFileNotFound:!1}),t(!0,{bailOutWhenFileNotFound:!1})),!0),e.strictEqual(l.equals(t(!0,{}),t(!0,{})),!0),e.strictEqual(l.equals(t(!0,{bailOutWhenFileNotFound:!0}),t(!0,{bailOutWhenFileNotFound:!1})),!1),e.strictEqual(l.equals(t(!0,{}),t(!0,{bailOutWhenFileNotFound:!0})),!1),e.strictEqual(l.equals(t(!0,void 0),t(!0,{})),!1),e.strictEqual(l.equals(t(!1,{bailOutWhenFileNotFound:!0}),t(!0,{bailOutWhenFileNotFound:!0})),!1)}),test("compare inputs - extension type",()=>{const t=i=>new l(o,void 0,void 0,void 0,!1,void 0,i,!0,!0,"1.1.1",void 0,void 0,!0,void 0,{});e.strictEqual(l.equals(t(m.System),t(m.System)),!0),e.strictEqual(l.equals(t(m.User),t(m.User)),!0),e.strictEqual(l.equals(t(m.User),t(m.System)),!1)})});
