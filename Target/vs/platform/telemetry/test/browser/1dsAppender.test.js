import e from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as u}from"../../../../base/test/common/utils.js";import{OneDataSystemWebAppender as o}from"../../browser/1dsAppender.js";import"../../common/1dsAppender.js";class p{pluginVersionString="Test Runner";events=[];IsTrackingPageView=!1;exceptions=[];track(s){this.events.push(s.baseData)}unload(s,i){}}suite("AIAdapter",()=>{let t,s;const i="prefix";teardown(()=>{s.flush()}),u(),setup(()=>{t=new p,s=new o(!1,i,void 0,()=>t)}),test("Simple event",()=>{s.log("testEvent"),e.strictEqual(t.events.length,1),e.strictEqual(t.events[0].name,`${i}/testEvent`)}),test("addional data",()=>{s=new o(!1,i,{first:"1st",second:2,third:!0},()=>t),s.log("testEvent"),e.strictEqual(t.events.length,1);const[r]=t.events;e.strictEqual(r.name,`${i}/testEvent`),e.strictEqual(r.properties.first,"1st"),e.strictEqual(r.measurements.second,2),e.strictEqual(r.measurements.third,1)}),test("property limits",()=>{let r="abcdefghijklmnopqrstuvwxyz";for(let n=0;n<6;n++)r+="abcdefghijklmnopqrstuvwxyz";e(r.length>150);let a="abcdefghijklmnopqrstuvwxyz012345678901234567890123";for(let n=0;n<400;n++)a+="abcdefghijklmnopqrstuvwxyz012345678901234567890123";e(a.length>8192);const l=Object.create(null);l[r]="1234",l.reallyLongPropertyValue=a,s.log("testEvent",l),e.strictEqual(t.events.length,1);for(const n in t.events[0].properties)e(n.length<150),e(t.events[0].properties[n].length<8192)}),test("Different data types",()=>{const r=new Date;s.log("testEvent",{favoriteDate:r,likeRed:!1,likeBlue:!0,favoriteNumber:1,favoriteColor:"blue",favoriteCars:["bmw","audi","ford"]}),e.strictEqual(t.events.length,1),e.strictEqual(t.events[0].name,`${i}/testEvent`),e.strictEqual(t.events[0].properties.favoriteColor,"blue"),e.strictEqual(t.events[0].measurements.likeRed,0),e.strictEqual(t.events[0].measurements.likeBlue,1),e.strictEqual(t.events[0].properties.favoriteDate,r.toISOString()),e.strictEqual(t.events[0].properties.favoriteCars,JSON.stringify(["bmw","audi","ford"])),e.strictEqual(t.events[0].measurements.favoriteNumber,1)}),test("Nested data",()=>{s.log("testEvent",{window:{title:"some title",measurements:{width:100,height:200}},nestedObj:{nestedObj2:{nestedObj3:{testProperty:"test"}},testMeasurement:1}}),e.strictEqual(t.events.length,1),e.strictEqual(t.events[0].name,`${i}/testEvent`),e.strictEqual(t.events[0].properties["window.title"],"some title"),e.strictEqual(t.events[0].measurements["window.measurements.width"],100),e.strictEqual(t.events[0].measurements["window.measurements.height"],200),e.strictEqual(t.events[0].properties["nestedObj.nestedObj2.nestedObj3"],JSON.stringify({testProperty:"test"})),e.strictEqual(t.events[0].measurements["nestedObj.testMeasurement"],1)})});
