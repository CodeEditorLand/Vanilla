import{coalesce as s}from"../../../base/common/arrays.js";import"../../../base/common/cancellation.js";import{toDisposable as o}from"../../../base/common/lifecycle.js";import"./quickInput.js";import{Registry as c}from"../../registry/common/platform.js";var t=(i=>(i[i.PRESERVE=0]="PRESERVE",i[i.LAST=1]="LAST",i))(t||{});const n={Quickaccess:"workbench.contributions.quickaccess"};class d{providers=[];defaultProvider=void 0;registerQuickAccessProvider(e){return e.prefix.length===0?this.defaultProvider=e:this.providers.push(e),this.providers.sort((i,r)=>r.prefix.length-i.prefix.length),o(()=>{this.providers.splice(this.providers.indexOf(e),1),this.defaultProvider===e&&(this.defaultProvider=void 0)})}getQuickAccessProviders(){return s([this.defaultProvider,...this.providers])}getQuickAccessProvider(e){return e&&this.providers.find(r=>e.startsWith(r.prefix))||void 0||this.defaultProvider}clear(){const e=[...this.providers],i=this.defaultProvider;return this.providers=[],this.defaultProvider=void 0,()=>{this.providers=e,this.defaultProvider=i}}}c.add(n.Quickaccess,new d);export{t as DefaultQuickAccessFilterValue,n as Extensions,d as QuickAccessRegistry};
