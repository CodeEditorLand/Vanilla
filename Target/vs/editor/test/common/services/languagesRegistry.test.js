import a from"assert";import{URI as g}from"../../../../base/common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as s}from"../../../../base/test/common/utils.js";import{LanguagesRegistry as t}from"../../../common/services/languagesRegistry.js";suite("LanguagesRegistry",()=>{s(),test("output language does not have a name",()=>{const e=new t(!1);e._registerLanguages([{id:"outputLangId",extensions:[],aliases:[],mimetypes:["outputLanguageMimeType"]}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[]),e.dispose()}),test("language with alias does have a name",()=>{const e=new t(!1);e._registerLanguages([{id:"langId",extensions:[],aliases:["LangName"],mimetypes:["bla"]}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[{languageName:"LangName",languageId:"langId"}]),a.deepStrictEqual(e.getLanguageName("langId"),"LangName"),e.dispose()}),test("language without alias gets a name",()=>{const e=new t(!1);e._registerLanguages([{id:"langId",extensions:[],mimetypes:["bla"]}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[{languageName:"langId",languageId:"langId"}]),a.deepStrictEqual(e.getLanguageName("langId"),"langId"),e.dispose()}),test("bug #4360: f# not shown in status bar",()=>{const e=new t(!1);e._registerLanguages([{id:"langId",extensions:[".ext1"],aliases:["LangName"],mimetypes:["bla"]}]),e._registerLanguages([{id:"langId",extensions:[".ext2"],aliases:[],mimetypes:["bla"]}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[{languageName:"LangName",languageId:"langId"}]),a.deepStrictEqual(e.getLanguageName("langId"),"LangName"),e.dispose()}),test("issue #5278: Extension cannot override language name anymore",()=>{const e=new t(!1);e._registerLanguages([{id:"langId",extensions:[".ext1"],aliases:["LangName"],mimetypes:["bla"]}]),e._registerLanguages([{id:"langId",extensions:[".ext2"],aliases:["BetterLanguageName"],mimetypes:["bla"]}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[{languageName:"BetterLanguageName",languageId:"langId"}]),a.deepStrictEqual(e.getLanguageName("langId"),"BetterLanguageName"),e.dispose()}),test("mimetypes are generated if necessary",()=>{const e=new t(!1);e._registerLanguages([{id:"langId"}]),a.deepStrictEqual(e.getMimeType("langId"),"text/x-langId"),e.dispose()}),test("first mimetype wins",()=>{const e=new t(!1);e._registerLanguages([{id:"langId",mimetypes:["text/langId","text/langId2"]}]),a.deepStrictEqual(e.getMimeType("langId"),"text/langId"),e.dispose()}),test("first mimetype wins 2",()=>{const e=new t(!1);e._registerLanguages([{id:"langId"}]),e._registerLanguages([{id:"langId",mimetypes:["text/langId"]}]),a.deepStrictEqual(e.getMimeType("langId"),"text/x-langId"),e.dispose()}),test("aliases",()=>{const e=new t(!1);e._registerLanguages([{id:"a"}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[{languageName:"a",languageId:"a"}]),a.deepStrictEqual(e.getLanguageIdByLanguageName("a"),"a"),a.deepStrictEqual(e.getLanguageName("a"),"a"),e._registerLanguages([{id:"a",aliases:["A1","A2"]}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[{languageName:"A1",languageId:"a"}]),a.deepStrictEqual(e.getLanguageIdByLanguageName("a"),"a"),a.deepStrictEqual(e.getLanguageIdByLanguageName("a1"),"a"),a.deepStrictEqual(e.getLanguageIdByLanguageName("a2"),"a"),a.deepStrictEqual(e.getLanguageName("a"),"A1"),e._registerLanguages([{id:"a",aliases:["A3","A4"]}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[{languageName:"A3",languageId:"a"}]),a.deepStrictEqual(e.getLanguageIdByLanguageName("a"),"a"),a.deepStrictEqual(e.getLanguageIdByLanguageName("a1"),"a"),a.deepStrictEqual(e.getLanguageIdByLanguageName("a2"),"a"),a.deepStrictEqual(e.getLanguageIdByLanguageName("a3"),"a"),a.deepStrictEqual(e.getLanguageIdByLanguageName("a4"),"a"),a.deepStrictEqual(e.getLanguageName("a"),"A3"),e.dispose()}),test("empty aliases array means no alias",()=>{const e=new t(!1);e._registerLanguages([{id:"a"}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[{languageName:"a",languageId:"a"}]),a.deepStrictEqual(e.getLanguageIdByLanguageName("a"),"a"),a.deepStrictEqual(e.getLanguageName("a"),"a"),e._registerLanguages([{id:"b",aliases:[]}]),a.deepStrictEqual(e.getSortedRegisteredLanguageNames(),[{languageName:"a",languageId:"a"}]),a.deepStrictEqual(e.getLanguageIdByLanguageName("a"),"a"),a.deepStrictEqual(e.getLanguageIdByLanguageName("b"),"b"),a.deepStrictEqual(e.getLanguageName("a"),"a"),a.deepStrictEqual(e.getLanguageName("b"),null),e.dispose()}),test("extensions",()=>{const e=new t(!1);e._registerLanguages([{id:"a",aliases:["aName"],extensions:["aExt"]}]),a.deepStrictEqual(e.getExtensions("a"),["aExt"]),e._registerLanguages([{id:"a",extensions:["aExt2"]}]),a.deepStrictEqual(e.getExtensions("a"),["aExt","aExt2"]),e.dispose()}),test("extensions of primary language registration come first",()=>{const e=new t(!1);e._registerLanguages([{id:"a",extensions:["aExt3"]}]),a.deepStrictEqual(e.getExtensions("a")[0],"aExt3"),e._registerLanguages([{id:"a",configuration:g.file("conf.json"),extensions:["aExt"]}]),a.deepStrictEqual(e.getExtensions("a")[0],"aExt"),e._registerLanguages([{id:"a",extensions:["aExt2"]}]),a.deepStrictEqual(e.getExtensions("a")[0],"aExt"),e.dispose()}),test("filenames",()=>{const e=new t(!1);e._registerLanguages([{id:"a",aliases:["aName"],filenames:["aFilename"]}]),a.deepStrictEqual(e.getFilenames("a"),["aFilename"]),e._registerLanguages([{id:"a",filenames:["aFilename2"]}]),a.deepStrictEqual(e.getFilenames("a"),["aFilename","aFilename2"]),e.dispose()}),test("configuration",()=>{const e=new t(!1);e._registerLanguages([{id:"a",aliases:["aName"],configuration:g.file("/path/to/aFilename")}]),a.deepStrictEqual(e.getConfigurationFiles("a"),[g.file("/path/to/aFilename")]),a.deepStrictEqual(e.getConfigurationFiles("aname"),[]),a.deepStrictEqual(e.getConfigurationFiles("aName"),[]),e._registerLanguages([{id:"a",configuration:g.file("/path/to/aFilename2")}]),a.deepStrictEqual(e.getConfigurationFiles("a"),[g.file("/path/to/aFilename"),g.file("/path/to/aFilename2")]),a.deepStrictEqual(e.getConfigurationFiles("aname"),[]),a.deepStrictEqual(e.getConfigurationFiles("aName"),[]),e.dispose()})});
