import i from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as g}from"../../../../base/test/common/utils.js";import{Position as t}from"../../../common/core/position.js";import{Range as e}from"../../../common/core/range.js";import{EndOfLineSequence as d,PositionAffinity as r}from"../../../common/model.js";import{ViewEventHandler as f}from"../../../common/viewEventHandler.js";import"../../../common/viewEvents.js";import{testViewModel as p}from"./testViewModel.js";suite("ViewModel",()=>{g(),test("issue #21073: SplitLinesCollection: attempt to access a 'newer' model",()=>{p([""],{lineNumbersMinChars:1},(s,u)=>{i.strictEqual(s.getLineCount(),1),s.setViewport(1,1,1),u.applyEdits([{range:new e(1,1,1,1),text:["line01","line02","line03","line04","line05","line06","line07","line08","line09","line10"].join(`
`)}]),i.strictEqual(s.getLineCount(),10)})}),test("issue #44805: SplitLinesCollection: attempt to access a 'newer' model",()=>{p([""],{},(o,s)=>{i.strictEqual(o.getLineCount(),1),s.pushEditOperations([],[{range:new e(1,1,1,1),text:`
insert1`}],()=>[]),s.pushEditOperations([],[{range:new e(1,1,1,1),text:`
insert2`}],()=>[]),s.pushEditOperations([],[{range:new e(1,1,1,1),text:`
insert3`}],()=>[]);const u=[];u.push(o.getLineCount());const c=new class extends f{handleEvents(w){u.push(o.getLineCount())}};o.addViewEventHandler(c),s.undo(),u.push(o.getLineCount()),i.deepStrictEqual(u,[4,1,1,1,1]),o.removeViewEventHandler(c),c.dispose()})}),test("issue #44805: No visible lines via API call",()=>{p(["line1","line2","line3"],{},(o,s)=>{i.strictEqual(o.getLineCount(),3),o.setHiddenAreas([new e(1,1,3,1)]),i.ok(o.getVisibleRanges()!==null)})}),test("issue #44805: No visible lines via undoing",()=>{p([""],{},(o,s)=>{i.strictEqual(o.getLineCount(),1),s.pushEditOperations([],[{range:new e(1,1,1,1),text:`line1
line2
line3`}],()=>[]),o.setHiddenAreas([new e(1,1,1,1)]),i.strictEqual(o.getLineCount(),2),s.undo(),i.ok(o.getVisibleRanges()!==null)})});function l(n,o,s,u){p(n,{},(c,w)=>{const m=c.getPlainTextToCopy(o,s,!1);i.deepStrictEqual(m,u)})}const a=["","line2","line3","line4",""];test("getPlainTextToCopy 0/1",()=>{l(a,[new e(2,2,2,2)],!1,"")}),test("getPlainTextToCopy 0/1 - emptySelectionClipboard",()=>{l(a,[new e(2,2,2,2)],!0,`line2
`)}),test("getPlainTextToCopy 1/1",()=>{l(a,[new e(2,2,2,6)],!1,"ine2")}),test("getPlainTextToCopy 1/1 - emptySelectionClipboard",()=>{l(a,[new e(2,2,2,6)],!0,"ine2")}),test("getPlainTextToCopy 0/2",()=>{l(a,[new e(2,2,2,2),new e(3,2,3,2)],!1,"")}),test("getPlainTextToCopy 0/2 - emptySelectionClipboard",()=>{l(a,[new e(2,2,2,2),new e(3,2,3,2)],!0,`line2
line3
`)}),test("getPlainTextToCopy 1/2",()=>{l(a,[new e(2,2,2,6),new e(3,2,3,2)],!1,"ine2")}),test("getPlainTextToCopy 1/2 - emptySelectionClipboard",()=>{l(a,[new e(2,2,2,6),new e(3,2,3,2)],!0,["ine2","line3"])}),test("getPlainTextToCopy 2/2",()=>{l(a,[new e(2,2,2,6),new e(3,2,3,6)],!1,["ine2","ine3"])}),test("getPlainTextToCopy 2/2 reversed",()=>{l(a,[new e(3,2,3,6),new e(2,2,2,6)],!1,["ine2","ine3"])}),test("getPlainTextToCopy 0/3 - emptySelectionClipboard",()=>{l(a,[new e(2,2,2,2),new e(2,3,2,3),new e(3,2,3,2)],!0,`line2
line3
`)}),test("issue #22688 - always use CRLF for clipboard on Windows",()=>{p(a,{},(n,o)=>{o.setEOL(d.LF);const s=n.getPlainTextToCopy([new e(2,1,5,1)],!0,!0);i.deepStrictEqual(s,`line2\r
line3\r
line4\r
`)})}),test("issue #40926: Incorrect spacing when inserting new line after multiple folded blocks of code",()=>{p(["foo = {","    foobar: function() {","        this.foobar();","    },","    foobar: function() {","        this.foobar();","    },","    foobar: function() {","        this.foobar();","    },","}"],{},(n,o)=>{n.setHiddenAreas([new e(3,1,3,1),new e(6,1,6,1),new e(9,1,9,1)]),o.applyEdits([{range:new e(4,7,4,7),text:`
    `},{range:new e(7,7,7,7),text:`
    `},{range:new e(10,7,10,7),text:`
    `}]),i.strictEqual(n.getLineCount(),11)})}),test("normalizePosition with multiple touching injected text",()=>{p(["just some text"],{},(n,o)=>{o.deltaDecorations([],[{range:new e(1,8,1,8),options:{description:"test",before:{content:"bar"},showIfCollapsed:!0}},{range:new e(1,8,1,8),options:{description:"test",before:{content:"bz"},showIfCollapsed:!0}}]),i.deepStrictEqual(n.normalizePosition(new t(1,8),r.None),new t(1,8)),i.deepStrictEqual(n.normalizePosition(new t(1,9),r.None),new t(1,8)),i.deepStrictEqual(n.normalizePosition(new t(1,11),r.None),new t(1,11)),i.deepStrictEqual(n.normalizePosition(new t(1,12),r.None),new t(1,11)),i.deepStrictEqual(n.normalizePosition(new t(1,13),r.None),new t(1,13)),i.deepStrictEqual(n.normalizePosition(new t(1,8),r.Left),new t(1,8)),i.deepStrictEqual(n.normalizePosition(new t(1,9),r.Left),new t(1,8)),i.deepStrictEqual(n.normalizePosition(new t(1,11),r.Left),new t(1,8)),i.deepStrictEqual(n.normalizePosition(new t(1,12),r.Left),new t(1,8)),i.deepStrictEqual(n.normalizePosition(new t(1,13),r.Left),new t(1,8)),i.deepStrictEqual(n.normalizePosition(new t(1,8),r.Right),new t(1,13)),i.deepStrictEqual(n.normalizePosition(new t(1,9),r.Right),new t(1,13)),i.deepStrictEqual(n.normalizePosition(new t(1,11),r.Right),new t(1,13)),i.deepStrictEqual(n.normalizePosition(new t(1,12),r.Right),new t(1,13)),i.deepStrictEqual(n.normalizePosition(new t(1,13),r.Right),new t(1,13))})}),test("issue #193262: Incorrect implementation of modifyPosition",()=>{p(["just some text"],{wordWrap:"wordWrapColumn",wordWrapColumn:5},(n,o)=>{i.deepStrictEqual(new t(3,1),n.modifyPosition(new t(3,2),-1))})})});
