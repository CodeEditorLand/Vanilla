import*as d from"assert";import{DisposableStore as I}from"../../../../base/common/lifecycle.js";import{derivedHandleChanges as m}from"../../../../base/common/observable.js";import{ensureNoDisposablesAreLeakedInTestSuite as y}from"../../../../base/test/common/utils.js";import"../../../browser/editorBrowser.js";import{observableCodeEditor as v}from"../../../browser/observableCodeEditor.js";import{Position as f}from"../../../common/core/position.js";import{Range as C}from"../../../common/core/range.js";import"../../../common/viewModel/viewModelImpl.js";import{withTestCodeEditor as E}from"../testCodeEditor.js";suite("CodeEditorWidget",()=>{y();function i(e){o(void 0,e)}function o(e,n){E("hello world",{},(t,r)=>{const g=new I;e?.(t,g);const a=v(t),l=new S,h=m({createEmptyChangeSummary:()=>{},handleChange:s=>{const c=w(s.changedObservable,a);return l.log(`handle change: ${c} ${O(s.change)}`),!0}},s=>{const c=a.versionId.read(s),b=a.selections.read(s)?.map(p=>p.toString()).join(", ");a.onDidType.read(s);const u=`running derived: selection: ${b}, value: ${c}`;return l.log(u),u});h.recomputeInitiallyAndOnChange(g),d.deepStrictEqual(l.getAndClearEntries(),["running derived: selection: [1,1 -> 1,1], value: 1"]),n({editor:t,viewModel:r,log:l,derived:h}),g.dispose()})}test("setPosition",()=>i(({editor:e,log:n})=>{e.setPosition(new f(1,2)),d.deepStrictEqual(n.getAndClearEntries(),['handle change: editor.selections {"selection":"[1,2 -> 1,2]","modelVersionId":1,"oldSelections":["[1,1 -> 1,1]"],"oldModelVersionId":1,"source":"api","reason":0}',"running derived: selection: [1,2 -> 1,2], value: 1"])})),test("keyboard.type",()=>i(({editor:e,log:n})=>{e.trigger("keyboard","type",{text:"abc"}),d.deepStrictEqual(n.getAndClearEntries(),['handle change: editor.onDidType "abc"','handle change: editor.versionId {"changes":[{"range":"[1,1 -> 1,1]","rangeLength":0,"text":"a","rangeOffset":0}],"eol":"\\n","versionId":2}','handle change: editor.versionId {"changes":[{"range":"[1,2 -> 1,2]","rangeLength":0,"text":"b","rangeOffset":1}],"eol":"\\n","versionId":3}','handle change: editor.versionId {"changes":[{"range":"[1,3 -> 1,3]","rangeLength":0,"text":"c","rangeOffset":2}],"eol":"\\n","versionId":4}','handle change: editor.selections {"selection":"[1,4 -> 1,4]","modelVersionId":4,"oldSelections":["[1,1 -> 1,1]"],"oldModelVersionId":1,"source":"keyboard","reason":0}',"running derived: selection: [1,4 -> 1,4], value: 4"])})),test("keyboard.type and set position",()=>i(({editor:e,log:n})=>{e.trigger("keyboard","type",{text:"abc"}),d.deepStrictEqual(n.getAndClearEntries(),['handle change: editor.onDidType "abc"','handle change: editor.versionId {"changes":[{"range":"[1,1 -> 1,1]","rangeLength":0,"text":"a","rangeOffset":0}],"eol":"\\n","versionId":2}','handle change: editor.versionId {"changes":[{"range":"[1,2 -> 1,2]","rangeLength":0,"text":"b","rangeOffset":1}],"eol":"\\n","versionId":3}','handle change: editor.versionId {"changes":[{"range":"[1,3 -> 1,3]","rangeLength":0,"text":"c","rangeOffset":2}],"eol":"\\n","versionId":4}','handle change: editor.selections {"selection":"[1,4 -> 1,4]","modelVersionId":4,"oldSelections":["[1,1 -> 1,1]"],"oldModelVersionId":1,"source":"keyboard","reason":0}',"running derived: selection: [1,4 -> 1,4], value: 4"]),e.setPosition(new f(1,5),"test"),d.deepStrictEqual(n.getAndClearEntries(),['handle change: editor.selections {"selection":"[1,5 -> 1,5]","modelVersionId":4,"oldSelections":["[1,4 -> 1,4]"],"oldModelVersionId":4,"source":"test","reason":0}',"running derived: selection: [1,5 -> 1,5], value: 4"])})),test("listener interaction (unforced)",()=>{let e,n;o((t,r)=>{r.add(t.onDidChangeModelContent(()=>{n.log(">>> before get"),e.get(),n.log("<<< after get")}))},t=>{const r=t.editor;e=t.derived,n=t.log,r.trigger("keyboard","type",{text:"a"}),d.deepStrictEqual(n.getAndClearEntries(),[">>> before get","<<< after get",'handle change: editor.onDidType "a"','handle change: editor.versionId {"changes":[{"range":"[1,1 -> 1,1]","rangeLength":0,"text":"a","rangeOffset":0}],"eol":"\\n","versionId":2}','handle change: editor.selections {"selection":"[1,2 -> 1,2]","modelVersionId":2,"oldSelections":["[1,1 -> 1,1]"],"oldModelVersionId":1,"source":"keyboard","reason":0}',"running derived: selection: [1,2 -> 1,2], value: 2"])})}),test("listener interaction ()",()=>{let e,n;o((t,r)=>{r.add(t.onDidChangeModelContent(()=>{n.log(">>> before forceUpdate"),v(t).forceUpdate(),n.log(">>> before get"),e.get(),n.log("<<< after get")}))},t=>{const r=t.editor;e=t.derived,n=t.log,r.trigger("keyboard","type",{text:"a"}),d.deepStrictEqual(n.getAndClearEntries(),[">>> before forceUpdate",">>> before get","handle change: editor.versionId undefined","running derived: selection: [1,2 -> 1,2], value: 2","<<< after get",'handle change: editor.onDidType "a"','handle change: editor.versionId {"changes":[{"range":"[1,1 -> 1,1]","rangeLength":0,"text":"a","rangeOffset":0}],"eol":"\\n","versionId":2}','handle change: editor.selections {"selection":"[1,2 -> 1,2]","modelVersionId":2,"oldSelections":["[1,1 -> 1,1]"],"oldModelVersionId":1,"source":"keyboard","reason":0}',"running derived: selection: [1,2 -> 1,2], value: 2"])})})});class S{entries=[];log(o){this.entries.push(o)}getAndClearEntries(){const o=[...this.entries];return this.entries.length=0,o}}function O(i){return JSON.stringify(i,(o,e)=>{if(e instanceof C)return e.toString();if(!(e===!1||Array.isArray(e)&&e.length===0))return e})}function w(i,o){switch(i){case o.selections:return"editor.selections";case o.versionId:return"editor.versionId";case o.onDidType:return"editor.onDidType";default:return"unknown"}}
