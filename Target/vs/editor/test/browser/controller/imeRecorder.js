import{DisposableStore as E,toDisposable as C}from"../../../../base/common/lifecycle.js";import"./imeRecordedTypes.js";import*as m from"../../../../base/browser/browser.js";import*as I from"../../../../base/common/platform.js";import{mainWindow as l}from"../../../../base/browser/window.js";import{TextAreaWrapper as K}from"../../../browser/controller/editContext/textArea/textAreaEditContextInput.js";(()=>{const u=l.document.getElementById("startRecording"),f=l.document.getElementById("endRecording");let i;const y=new E;let n=0,a={env:null,initial:null,events:[],final:null};const s=()=>({selectionDirection:i.selectionDirection,selectionEnd:i.selectionEnd,selectionStart:i.selectionStart,value:i.value});u.onclick=()=>{y.clear(),$(),n=0,a={env:{OS:I.OS,browser:{isAndroid:m.isAndroid,isFirefox:m.isFirefox,isChrome:m.isChrome,isSafari:m.isSafari}},initial:s(),events:[],final:null}},f.onclick=()=>{a.final=s(),console.log(S())};function S(){const o=[];return o.push("const recorded: IRecorded = {"),o.push(`	env: ${JSON.stringify(a.env)}, `),o.push(`	initial: ${r(a.initial)}, `),o.push(`	events: [
		${a.events.map(t=>d(t)).join(`,
		`)}
	],`),o.push(`	final: ${r(a.final)},`),o.push("}"),o.join(`
`);function p(t){return t.replace(/\\/g,"\\\\").replace(/'/g,"\\'")}function r(t){return`{ value: '${p(t.value)}', selectionStart: ${t.selectionStart}, selectionEnd: ${t.selectionEnd}, selectionDirection: '${t.selectionDirection}' }`}function d(t){return t.type==="keydown"||t.type==="keypress"||t.type==="keyup"?`{ timeStamp: ${t.timeStamp.toFixed(2)}, state: ${r(t.state)}, type: '${t.type}', altKey: ${t.altKey}, charCode: ${t.charCode}, code: '${t.code}', ctrlKey: ${t.ctrlKey}, isComposing: ${t.isComposing}, key: '${t.key}', keyCode: ${t.keyCode}, location: ${t.location}, metaKey: ${t.metaKey}, repeat: ${t.repeat}, shiftKey: ${t.shiftKey} }`:t.type==="compositionstart"||t.type==="compositionupdate"||t.type==="compositionend"?`{ timeStamp: ${t.timeStamp.toFixed(2)}, state: ${r(t.state)}, type: '${t.type}', data: '${p(t.data)}' }`:t.type==="beforeinput"||t.type==="input"?`{ timeStamp: ${t.timeStamp.toFixed(2)}, state: ${r(t.state)}, type: '${t.type}', data: ${t.data===null?"null":`'${p(t.data)}'`}, inputType: '${t.inputType}', isComposing: ${t.isComposing} }`:JSON.stringify(t)}}function $(){i=document.createElement("textarea"),l.document.body.appendChild(i),i.focus(),y.add(C(()=>{i.remove()}));const o=y.add(new K(i));o.setValue("","aaaa"),o.setSelectionRange("",2,2);const p=e=>{a.events.push(e)},r=e=>{if(e.type!=="keydown"&&e.type!=="keypress"&&e.type!=="keyup")throw new Error("Not supported!");n===0&&(n=e.timeStamp);const c={timeStamp:e.timeStamp-n,state:s(),type:e.type,altKey:e.altKey,charCode:e.charCode,code:e.code,ctrlKey:e.ctrlKey,isComposing:e.isComposing,key:e.key,keyCode:e.keyCode,location:e.location,metaKey:e.metaKey,repeat:e.repeat,shiftKey:e.shiftKey};p(c)},d=e=>{if(e.type!=="compositionstart"&&e.type!=="compositionupdate"&&e.type!=="compositionend")throw new Error("Not supported!");n===0&&(n=e.timeStamp);const c={timeStamp:e.timeStamp-n,state:s(),type:e.type,data:e.data};p(c)},t=e=>{if(e.type!=="beforeinput"&&e.type!=="input")throw new Error("Not supported!");n===0&&(n=e.timeStamp);const c={timeStamp:e.timeStamp-n,state:s(),type:e.type,data:e.data,inputType:e.inputType,isComposing:e.isComposing};p(c)};o.onKeyDown(r),o.onKeyPress(r),o.onKeyUp(r),o.onCompositionStart(d),o.onCompositionUpdate(d),o.onCompositionEnd(d),o.onBeforeInput(t),o.onInput(t)}})();
