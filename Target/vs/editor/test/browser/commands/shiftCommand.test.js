var N=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var v=(i,n,u,e)=>{for(var a=e>1?void 0:e?A(n,u):n,h=i.length-1,s;h>=0;h--)(s=i[h])&&(a=(e?s(n,u,a):s(a))||a);return e&&a&&N(n,u,a),a},T=(i,n)=>(u,e)=>n(u,e,i);import I from"assert";import{Disposable as O}from"../../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as k}from"../../../../base/test/common/utils.js";import{ShiftCommand as f}from"../../../common/commands/shiftCommand.js";import{EditorAutoIndentStrategy as S}from"../../../common/config/editorOptions.js";import"../../../common/core/editOperation.js";import{Range as D}from"../../../common/core/range.js";import{Selection as t}from"../../../common/core/selection.js";import{ILanguageService as E}from"../../../common/languages/language.js";import{ILanguageConfigurationService as w}from"../../../common/languages/languageConfigurationRegistry.js";import{getEditOperation as U,testCommand as M}from"../testCommand.js";import{javascriptOnEnterRules as R}from"../../common/modes/supports/onEnterRules.js";import{TestLanguageConfigurationService as C}from"../../common/modes/testLanguageConfigurationService.js";import{withEditorModel as W}from"../../common/testTextModel.js";import"../../../../platform/instantiation/common/instantiation.js";function z(i,n,u,e=n,a=u){return{range:new D(e,a,n,u),text:i,forceMoveMarkers:!1}}let c=class extends O{static languageId="commentMode";languageId=c.languageId;constructor(n,u){super(),this._register(n.registerLanguage({id:this.languageId})),this._register(u.register(this.languageId,{brackets:[["(",")"],["{","}"],["[","]"]],onEnterRules:R}))}};c=v([T(0,E),T(1,w)],c);function d(i,n,u,e,a,h,s){M(i,n,e,(o,r)=>new f(r,{isUnshift:!1,tabSize:4,indentSize:4,insertSpaces:!1,useTabStops:u,autoIndent:S.Full},o.get(w)),a,h,void 0,s)}function m(i,n,u,e,a,h,s){M(i,n,e,(o,r)=>new f(r,{isUnshift:!0,tabSize:4,indentSize:4,insertSpaces:!1,useTabStops:u,autoIndent:S.Full},o.get(w)),a,h,void 0,s)}function p(i,n){const u=i.get(w),e=i.get(E);n.add(new c(e,u))}suite("Editor Commands - ShiftCommand",()=>{k(),test("Bug 9503: Shifting without any selection",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,1,1,1),["	My First Line","		My Second Line","    Third Line","","123"],new t(1,2,1,2))}),test("shift on single line selection 1",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,3,1,1),["	My First Line","		My Second Line","    Third Line","","123"],new t(1,4,1,1))}),test("shift on single line selection 2",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,1,1,3),["	My First Line","		My Second Line","    Third Line","","123"],new t(1,1,1,4))}),test("simple shift",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,1,2,1),["	My First Line","		My Second Line","    Third Line","","123"],new t(1,1,2,1))}),test("shifting on two separate lines",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,1,2,1),["	My First Line","		My Second Line","    Third Line","","123"],new t(1,1,2,1)),d(["	My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(2,1,3,1),["	My First Line","			My Second Line","    Third Line","","123"],new t(2,1,3,1))}),test("shifting on two lines",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,2,2,2),["	My First Line","			My Second Line","    Third Line","","123"],new t(1,3,2,2))}),test("shifting on two lines again",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(2,2,1,2),["	My First Line","			My Second Line","    Third Line","","123"],new t(2,2,1,3))}),test("shifting at end of file",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(4,1,5,2),["My First Line","		My Second Line","    Third Line","","	123"],new t(4,1,5,3))}),test("issue #1120 TAB should not indent empty lines in a multi-line selection",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,1,5,2),["	My First Line","			My Second Line","		Third Line","","	123"],new t(1,1,5,3)),d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(4,1,5,1),["My First Line","		My Second Line","    Third Line","	","123"],new t(4,1,5,1))}),test("unshift on single line selection 1",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(2,3,2,1),["My First Line","			My Second Line","    Third Line","","123"],new t(2,3,2,1))}),test("unshift on single line selection 2",()=>{d(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(2,1,2,3),["My First Line","			My Second Line","    Third Line","","123"],new t(2,1,2,3))}),test("simple unshift",()=>{m(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,1,2,1),["My First Line","		My Second Line","    Third Line","","123"],new t(1,1,2,1))}),test("unshifting on two lines 1",()=>{m(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,2,2,2),["My First Line","	My Second Line","    Third Line","","123"],new t(1,2,2,2))}),test("unshifting on two lines 2",()=>{m(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(2,3,2,1),["My First Line","	My Second Line","    Third Line","","123"],new t(2,2,2,1))}),test("unshifting at the end of the file",()=>{m(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(4,1,5,2),["My First Line","		My Second Line","    Third Line","","123"],new t(4,1,5,2))}),test("unshift many times + shift",()=>{m(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(1,1,5,4),["My First Line","	My Second Line","Third Line","","123"],new t(1,1,5,4)),m(["My First Line","	My Second Line","Third Line","","123"],null,!0,new t(1,1,5,4),["My First Line","My Second Line","Third Line","","123"],new t(1,1,5,4)),d(["My First Line","My Second Line","Third Line","","123"],null,!0,new t(1,1,5,4),["	My First Line","	My Second Line","	Third Line","","	123"],new t(1,1,5,5))}),test("Bug 9119: Unshift from first column doesn't work",()=>{m(["My First Line","		My Second Line","    Third Line","","123"],null,!0,new t(2,1,2,1),["My First Line","	My Second Line","    Third Line","","123"],new t(2,1,2,1))}),test("issue #348: indenting around doc block comments",()=>{d(["","/**"," * a doc comment"," */","function hello() {}"],c.languageId,!0,new t(1,1,5,20),["","	/**","	 * a doc comment","	 */","	function hello() {}"],new t(1,1,5,21),p),m(["","/**"," * a doc comment"," */","function hello() {}"],c.languageId,!0,new t(1,1,5,20),["","/**"," * a doc comment"," */","function hello() {}"],new t(1,1,5,20),p),m(["	","	/**","	 * a doc comment","	 */","	function hello() {}"],c.languageId,!0,new t(1,1,5,21),["","/**"," * a doc comment"," */","function hello() {}"],new t(1,1,5,20),p)}),test("issue #1609: Wrong indentation of block comments",()=>{d(["","/**"," * test"," *"," * @type {number}"," */","var foo = 0;"],c.languageId,!0,new t(1,1,7,13),["","	/**","	 * test","	 *","	 * @type {number}","	 */","	var foo = 0;"],new t(1,1,7,14),p)}),test("issue #1620: a) Line indent doesn't handle leading whitespace properly",()=>{M(["   Written | Numeric","       one | 1","       two | 2","     three | 3","      four | 4","      five | 5","       six | 6","     seven | 7","     eight | 8","      nine | 9","       ten | 10","    eleven | 11",""],null,new t(1,1,13,1),(i,n)=>new f(n,{isUnshift:!1,tabSize:4,indentSize:4,insertSpaces:!0,useTabStops:!1,autoIndent:S.Full},i.get(w)),["       Written | Numeric","           one | 1","           two | 2","         three | 3","          four | 4","          five | 5","           six | 6","         seven | 7","         eight | 8","          nine | 9","           ten | 10","        eleven | 11",""],new t(1,1,13,1))}),test("issue #1620: b) Line indent doesn't handle leading whitespace properly",()=>{M(["       Written | Numeric","           one | 1","           two | 2","         three | 3","          four | 4","          five | 5","           six | 6","         seven | 7","         eight | 8","          nine | 9","           ten | 10","        eleven | 11",""],null,new t(1,1,13,1),(i,n)=>new f(n,{isUnshift:!0,tabSize:4,indentSize:4,insertSpaces:!0,useTabStops:!1,autoIndent:S.Full},i.get(w)),["   Written | Numeric","       one | 1","       two | 2","     three | 3","      four | 4","      five | 5","       six | 6","     seven | 7","     eight | 8","      nine | 9","       ten | 10","    eleven | 11",""],new t(1,1,13,1))}),test("issue #1620: c) Line indent doesn't handle leading whitespace properly",()=>{M(["       Written | Numeric","           one | 1","           two | 2","         three | 3","          four | 4","          five | 5","           six | 6","         seven | 7","         eight | 8","          nine | 9","           ten | 10","        eleven | 11",""],null,new t(1,1,13,1),(i,n)=>new f(n,{isUnshift:!0,tabSize:4,indentSize:4,insertSpaces:!1,useTabStops:!1,autoIndent:S.Full},i.get(w)),["   Written | Numeric","       one | 1","       two | 2","     three | 3","      four | 4","      five | 5","       six | 6","     seven | 7","     eight | 8","      nine | 9","       ten | 10","    eleven | 11",""],new t(1,1,13,1))}),test("issue #1620: d) Line indent doesn't handle leading whitespace properly",()=>{M(["	   Written | Numeric","	       one | 1","	       two | 2","	     three | 3","	      four | 4","	      five | 5","	       six | 6","	     seven | 7","	     eight | 8","	      nine | 9","	       ten | 10","	    eleven | 11",""],null,new t(1,1,13,1),(i,n)=>new f(n,{isUnshift:!0,tabSize:4,indentSize:4,insertSpaces:!0,useTabStops:!1,autoIndent:S.Full},i.get(w)),["   Written | Numeric","       one | 1","       two | 2","     three | 3","      four | 4","      five | 5","       six | 6","     seven | 7","     eight | 8","      nine | 9","       ten | 10","    eleven | 11",""],new t(1,1,13,1))}),test("issue microsoft/monaco-editor#443: Indentation of a single row deletes selected text in some cases",()=>{M(["Hello world!","another line"],null,new t(1,1,1,13),(i,n)=>new f(n,{isUnshift:!1,tabSize:4,indentSize:4,insertSpaces:!1,useTabStops:!0,autoIndent:S.Full},i.get(w)),["	Hello world!","another line"],new t(1,1,1,14))}),test("bug #16815:Shift+Tab doesn't go back to tabstop",()=>{const i=(s,o)=>{let r="";for(let l=0;l<o;l++)r+=s;return r},n=(s,o,r,l,L)=>{const y=r?i(" ",o):"	",g=i(y,L);l.length>0?a(s,o,r,[l+"aaa"],[z(g,1,1,1,l.length+1)]):a(s,o,r,[l+"aaa"],[])},u=(s,o,r,l,L)=>{const y=r?i(" ",o):"	",g=i(y,L);h(s,o,r,[l+"aaa"],[z(g,1,1,1,l.length+1)])},e=(s,o,r,l,L)=>{n(s,o,!0,r,l),n(s,o,!1,r,l),u(s,o,!0,r,L),u(s,o,!1,r,L)};e(4,4,"",0,1),e(4,4,"	",0,2),e(4,4," ",0,1),e(4,4," 	",0,2),e(4,4,"  ",0,1),e(4,4,"  	",0,2),e(4,4,"   ",0,1),e(4,4,"   	",0,2),e(4,4,"    ",0,2),e(4,4,"		",1,3),e(4,4,"	 ",1,2),e(4,4,"	 	",1,3),e(4,4,"	  ",1,2),e(4,4,"	  	",1,3),e(4,4,"	   ",1,2),e(4,4,"	   	",1,3),e(4,4,"	    ",1,3),e(4,4," 		",1,3),e(4,4," 	 ",1,2),e(4,4," 	 	",1,3),e(4,4," 	  ",1,2),e(4,4," 	  	",1,3),e(4,4," 	   ",1,2),e(4,4," 	   	",1,3),e(4,4," 	    ",1,3),e(4,4,"  		",1,3),e(4,4,"  	 ",1,2),e(4,4,"  	 	",1,3),e(4,4,"  	  ",1,2),e(4,4,"  	  	",1,3),e(4,4,"  	   ",1,2),e(4,4,"  	   	",1,3),e(4,4,"  	    ",1,3),e(4,4,"   		",1,3),e(4,4,"   	 ",1,2),e(4,4,"   	 	",1,3),e(4,4,"   	  ",1,2),e(4,4,"   	  	",1,3),e(4,4,"   	   ",1,2),e(4,4,"   	   	",1,3),e(4,4,"   	    ",1,3),e(4,4,"    	",1,3),e(4,4,"     ",1,2),e(4,4,"     	",1,3),e(4,4,"      ",1,2),e(4,4,"      	",1,3),e(4,4,"       ",1,2),e(4,4,"       	",1,3),e(4,4,"        ",1,3),e(4,4,"         ",2,3);function a(s,o,r,l,L){return W(l,y=>{const g=new C,b=new f(new t(1,1,l.length+1,1),{isUnshift:!0,tabSize:s,indentSize:o,insertSpaces:r,useTabStops:!0,autoIndent:S.Full},g),F=U(y,b);I.deepStrictEqual(F,L),g.dispose()})}function h(s,o,r,l,L){return W(l,y=>{const g=new C,b=new f(new t(1,1,l.length+1,1),{isUnshift:!1,tabSize:s,indentSize:o,insertSpaces:r,useTabStops:!0,autoIndent:S.Full},g),F=U(y,b);I.deepStrictEqual(F,L),g.dispose()})}})});
