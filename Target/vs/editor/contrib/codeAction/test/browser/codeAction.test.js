import i from"assert";import{CancellationToken as s}from"../../../../../base/common/cancellation.js";import{HierarchicalKind as b}from"../../../../../base/common/hierarchicalKind.js";import{DisposableStore as k}from"../../../../../base/common/lifecycle.js";import{URI as E}from"../../../../../base/common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as L}from"../../../../../base/test/common/utils.js";import{Range as c}from"../../../../common/core/range.js";import{LanguageFeatureRegistry as N}from"../../../../common/languageFeatureRegistry.js";import*as d from"../../../../common/languages.js";import"../../../../common/model/textModel.js";import{getCodeActions as l}from"../../browser/codeAction.js";import{CodeActionItem as m,CodeActionKind as g,CodeActionTriggerSource as u}from"../../common/types.js";import{createTextModel as q}from"../../../../test/common/testTextModel.js";import{MarkerSeverity as w}from"../../../../../platform/markers/common/markers.js";import{Progress as p}from"../../../../../platform/progress/common/progress.js";function f(...v){return new class{provideCodeActions(){return{actions:v,dispose:()=>{}}}}}suite("CodeAction",()=>{const v="fooLang",T=E.parse("untitled:path");let a,n;const t=new k,r={diagnostics:{abc:{title:"bTitle",diagnostics:[{startLineNumber:1,startColumn:1,endLineNumber:2,endColumn:1,severity:w.Error,message:"abc"}]},bcd:{title:"aTitle",diagnostics:[{startLineNumber:1,startColumn:1,endLineNumber:2,endColumn:1,severity:w.Error,message:"bcd"}]}},command:{abc:{command:new class{id;title},title:'Extract to inner function in function "test"'}},spelling:{bcd:{diagnostics:[],edit:new class{edits},title:"abc"}},tsLint:{abc:{$ident:"funny57",arguments:[],id:"_internal_command_delegation",title:"abc"},bcd:{$ident:"funny47",arguments:[],id:"_internal_command_delegation",title:"bcd"}}};setup(()=>{n=new N,t.clear(),a=q(`test1
test2
test3`,v,void 0,T),t.add(a)}),teardown(()=>{t.clear()}),L(),test("CodeActions are sorted by type, #38623",async()=>{const o=f(r.command.abc,r.diagnostics.bcd,r.spelling.bcd,r.tsLint.bcd,r.tsLint.abc,r.diagnostics.abc);t.add(n.register("fooLang",o));const e=[new m(r.diagnostics.bcd,o),new m(r.diagnostics.abc,o),new m(r.command.abc,o),new m(r.spelling.bcd,o),new m(r.tsLint.bcd,o),new m(r.tsLint.abc,o)],{validActions:A}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Invoke,triggerAction:u.Default},p.None,s.None));i.strictEqual(A.length,6),i.deepStrictEqual(A,e)}),test("getCodeActions should filter by scope",async()=>{const o=f({title:"a",kind:"a"},{title:"b",kind:"b"},{title:"a.b",kind:"a.b"});t.add(n.register("fooLang",o));{const{validActions:e}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Auto,triggerAction:u.Default,filter:{include:new b("a")}},p.None,s.None));i.strictEqual(e.length,2),i.strictEqual(e[0].action.title,"a"),i.strictEqual(e[1].action.title,"a.b")}{const{validActions:e}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Auto,triggerAction:u.Default,filter:{include:new b("a.b")}},p.None,s.None));i.strictEqual(e.length,1),i.strictEqual(e[0].action.title,"a.b")}{const{validActions:e}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Auto,triggerAction:u.Default,filter:{include:new b("a.b.c")}},p.None,s.None));i.strictEqual(e.length,0)}}),test("getCodeActions should forward requested scope to providers",async()=>{const o=new class{provideCodeActions(A,C,y,h){return{actions:[{title:y.only||"",kind:y.only}],dispose:()=>{}}}};t.add(n.register("fooLang",o));const{validActions:e}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Auto,triggerAction:u.Default,filter:{include:new b("a")}},p.None,s.None));i.strictEqual(e.length,1),i.strictEqual(e[0].action.title,"a")}),test("getCodeActions should not return source code action by default",async()=>{const o=f({title:"a",kind:g.Source.value},{title:"b",kind:"b"});t.add(n.register("fooLang",o));{const{validActions:e}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Auto,triggerAction:u.SourceAction},p.None,s.None));i.strictEqual(e.length,1),i.strictEqual(e[0].action.title,"b")}{const{validActions:e}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Auto,triggerAction:u.Default,filter:{include:g.Source,includeSourceActions:!0}},p.None,s.None));i.strictEqual(e.length,1),i.strictEqual(e[0].action.title,"a")}}),test("getCodeActions should support filtering out some requested source code actions #84602",async()=>{const o=f({title:"a",kind:g.Source.value},{title:"b",kind:g.Source.append("test").value},{title:"c",kind:"c"});t.add(n.register("fooLang",o));{const{validActions:e}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Auto,triggerAction:u.SourceAction,filter:{include:g.Source.append("test"),excludes:[g.Source],includeSourceActions:!0}},p.None,s.None));i.strictEqual(e.length,1),i.strictEqual(e[0].action.title,"b")}}),test("getCodeActions no invoke a provider that has been excluded #84602",async()=>{const o=g.Refactor,e=g.Refactor.append("sub");t.add(n.register("fooLang",f({title:"a",kind:o.value})));let A=!1;t.add(n.register("fooLang",new class{providedCodeActionKinds=[e.value];provideCodeActions(){return A=!0,{actions:[{title:"x",kind:e.value}],dispose:()=>{}}}}));{const{validActions:C}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Auto,triggerAction:u.Refactor,filter:{include:o,excludes:[e]}},p.None,s.None));i.strictEqual(A,!1),i.strictEqual(C.length,1),i.strictEqual(C[0].action.title,"a")}}),test("getCodeActions should not invoke code action providers filtered out by providedCodeActionKinds",async()=>{let o=!1;const e=new class{provideCodeActions(){return o=!0,{actions:[],dispose:()=>{}}}providedCodeActionKinds=[g.Refactor.value]};t.add(n.register("fooLang",e));const{validActions:A}=t.add(await l(n,a,new c(1,1,2,1),{type:d.CodeActionTriggerType.Auto,triggerAction:u.Refactor,filter:{include:g.QuickFix}},p.None,s.None));i.strictEqual(A.length,0),i.strictEqual(o,!1)})});
