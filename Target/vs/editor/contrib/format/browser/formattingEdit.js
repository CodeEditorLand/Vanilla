import"../../../browser/editorBrowser.js";import{EditOperation as r}from"../../../common/core/editOperation.js";import{Range as d}from"../../../common/core/range.js";import"../../../common/model.js";import"../../../common/languages.js";import{StableEditorScrollState as s}from"../../../browser/stableEditorScroll.js";class a{static _handleEolEdits(e,l){let o;const i=[];for(const t of l)typeof t.eol=="number"&&(o=t.eol),t.range&&typeof t.text=="string"&&i.push(t);return typeof o=="number"&&e.hasModel()&&e.getModel().pushEOL(o),i}static _isFullModelReplaceEdit(e,l){if(!e.hasModel())return!1;const o=e.getModel(),i=o.validateRange(l.range);return o.getFullModelRange().equalsRange(i)}static execute(e,l,o){o&&e.pushUndoStop();const i=s.capture(e),t=a._handleEolEdits(e,l);t.length===1&&a._isFullModelReplaceEdit(e,t[0])?e.executeEdits("formatEditsCommand",t.map(n=>r.replace(d.lift(n.range),n.text))):e.executeEdits("formatEditsCommand",t.map(n=>r.replaceMove(d.lift(n.range),n.text))),o&&e.pushUndoStop(),i.restoreRelativeVerticalPositionOfCursor(e)}}export{a as FormattingEdit};
