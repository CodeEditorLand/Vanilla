import r from"assert";import{withAsyncTestCodeEditor as g}from"../../../../test/browser/testCodeEditor.js";import{StickyScrollController as d}from"../../browser/stickyScrollController.js";import{ServiceCollection as w}from"../../../../../platform/instantiation/common/serviceCollection.js";import{ILanguageFeaturesService as m}from"../../../../common/services/languageFeatures.js";import{createTextModel as b}from"../../../../test/common/testTextModel.js";import{LanguageFeaturesService as h}from"../../../../common/services/languageFeaturesService.js";import{SymbolKind as s}from"../../../../common/languages.js";import{StickyLineCandidate as u,StickyLineCandidateProvider as E}from"../../browser/stickyScrollProvider.js";import{EditorOption as N}from"../../../../common/config/editorOptions.js";import{ILogService as D,NullLogService as I}from"../../../../../platform/log/common/log.js";import{IContextMenuService as q}from"../../../../../platform/contextview/browser/contextView.js";import{mock as y}from"../../../../../base/test/common/mock.js";import{ILanguageConfigurationService as v}from"../../../../common/languages/languageConfigurationRegistry.js";import{ILanguageFeatureDebounceService as F,LanguageFeatureDebounceService as W}from"../../../../common/services/languageFeatureDebounce.js";import{TestLanguageConfigurationService as M}from"../../../../test/common/modes/testLanguageConfigurationService.js";import{SyncDescriptor as P}from"../../../../../platform/instantiation/common/descriptors.js";import{runWithFakedTimers as C}from"../../../../../base/test/common/timeTravelScheduler.js";import{IEnvironmentService as x}from"../../../../../platform/environment/common/environment.js";import{ensureNoDisposablesAreLeakedInTestSuite as H}from"../../../../../base/test/common/utils.js";import{DisposableStore as R}from"../../../../../base/common/lifecycle.js";suite("Sticky Scroll Tests",()=>{const c=new R,S=new w([m,new h],[D,new I],[q,new class extends y(){}],[v,new M],[x,new class extends y(){isBuilt=!0;isExtensionDevelopment=!1}],[F,new P(W)]),p=["function foo() {","","}","/* comment related to TestClass"," end of the comment */","@classDecorator","class TestClass {","// comment related to the function functionOfClass","functionOfClass(){","function function1(){","}","}}","function bar() { function insideBar() {}","}"].join(`
`);setup(()=>{c.clear()}),teardown(()=>{c.clear()}),H();function L(){return{provideDocumentSymbols(){return[{name:"foo",detail:"foo",kind:s.Function,tags:[],range:{startLineNumber:1,endLineNumber:3,startColumn:1,endColumn:1},selectionRange:{startLineNumber:1,endLineNumber:1,startColumn:1,endColumn:1}},{name:"TestClass",detail:"TestClass",kind:s.Class,tags:[],range:{startLineNumber:4,endLineNumber:12,startColumn:1,endColumn:1},selectionRange:{startLineNumber:7,endLineNumber:7,startColumn:1,endColumn:1},children:[{name:"functionOfClass",detail:"functionOfClass",kind:s.Function,tags:[],range:{startLineNumber:8,endLineNumber:12,startColumn:1,endColumn:1},selectionRange:{startLineNumber:9,endLineNumber:9,startColumn:1,endColumn:1},children:[{name:"function1",detail:"function1",kind:s.Function,tags:[],range:{startLineNumber:10,endLineNumber:11,startColumn:1,endColumn:1},selectionRange:{startLineNumber:10,endLineNumber:10,startColumn:1,endColumn:1}}]}]},{name:"bar",detail:"bar",kind:s.Function,tags:[],range:{startLineNumber:13,endLineNumber:14,startColumn:1,endColumn:1},selectionRange:{startLineNumber:13,endLineNumber:13,startColumn:1,endColumn:1},children:[{name:"insideBar",detail:"insideBar",kind:s.Function,tags:[],range:{startLineNumber:13,endLineNumber:13,startColumn:1,endColumn:1},selectionRange:{startLineNumber:13,endLineNumber:13,startColumn:1,endColumn:1}}]}]}}}test("Testing the function getCandidateStickyLinesIntersecting",()=>C({useFakeTimers:!0},async()=>{const o=b(p);await g(o,{stickyScroll:{enabled:!0,maxLineCount:5,defaultModel:"outlineModel"},envConfig:{outerHeight:500},serviceCollection:S},async(n,f,l)=>{const t=l.get(m),i=l.get(v);c.add(t.documentSymbolProvider.register("*",L()));const a=new E(n,t,i);await a.update(),r.deepStrictEqual(a.getCandidateStickyLinesIntersecting({startLineNumber:1,endLineNumber:4}),[new u(1,2,1)]),r.deepStrictEqual(a.getCandidateStickyLinesIntersecting({startLineNumber:8,endLineNumber:10}),[new u(7,11,1),new u(9,11,2),new u(10,10,3)]),r.deepStrictEqual(a.getCandidateStickyLinesIntersecting({startLineNumber:10,endLineNumber:13}),[new u(7,11,1),new u(9,11,2),new u(10,10,3)]),a.dispose(),o.dispose()})})),test("issue #157180: Render the correct line corresponding to the scope definition",()=>C({useFakeTimers:!0},async()=>{const o=b(p);await g(o,{stickyScroll:{enabled:!0,maxLineCount:5,defaultModel:"outlineModel"},envConfig:{outerHeight:500},serviceCollection:S},async(n,f,l)=>{const t=n.registerAndInstantiateContribution(d.ID,d),i=n.getOption(N.lineHeight),a=l.get(m);c.add(a.documentSymbolProvider.register("*",L())),await t.stickyScrollCandidateProvider.update();let e;n.setScrollTop(1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[1]),n.setScrollTop(i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[1]),n.setScrollTop(4*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[]),n.setScrollTop(8*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[7,9]),n.setScrollTop(9*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[7,9]),n.setScrollTop(10*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[7]),t.dispose(),t.stickyScrollCandidateProvider.dispose(),o.dispose()})})),test("issue #156268 : Do not reveal sticky lines when they are in a folded region ",()=>C({useFakeTimers:!0},async()=>{const o=b(p);await g(o,{stickyScroll:{enabled:!0,maxLineCount:5,defaultModel:"outlineModel"},envConfig:{outerHeight:500},serviceCollection:S},async(n,f,l)=>{const t=n.registerAndInstantiateContribution(d.ID,d),i=n.getOption(N.lineHeight),a=l.get(m);c.add(a.documentSymbolProvider.register("*",L())),await t.stickyScrollCandidateProvider.update(),n.setHiddenAreas([{startLineNumber:2,endLineNumber:2,startColumn:1,endColumn:1},{startLineNumber:10,endLineNumber:11,startColumn:1,endColumn:1}]);let e;n.setScrollTop(1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[1]),n.setScrollTop(i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[]),n.setScrollTop(6*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[7,9]),n.setScrollTop(7*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[7]),n.setScrollTop(10*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[]),t.dispose(),t.stickyScrollCandidateProvider.dispose(),o.dispose()})}));const k=["class TestClass { foo() {","function bar(){","","}}","}",""].join(`
`);function T(){return{provideDocumentSymbols(){return[{name:"TestClass",detail:"TestClass",kind:s.Class,tags:[],range:{startLineNumber:1,endLineNumber:5,startColumn:1,endColumn:1},selectionRange:{startLineNumber:1,endLineNumber:1,startColumn:1,endColumn:1},children:[{name:"foo",detail:"foo",kind:s.Function,tags:[],range:{startLineNumber:1,endLineNumber:4,startColumn:1,endColumn:1},selectionRange:{startLineNumber:1,endLineNumber:1,startColumn:1,endColumn:1},children:[{name:"bar",detail:"bar",kind:s.Function,tags:[],range:{startLineNumber:2,endLineNumber:4,startColumn:1,endColumn:1},selectionRange:{startLineNumber:2,endLineNumber:2,startColumn:1,endColumn:1},children:[]}]}]}]}}}test("issue #159271 : render the correct widget state when the child scope starts on the same line as the parent scope",()=>C({useFakeTimers:!0},async()=>{const o=b(k);await g(o,{stickyScroll:{enabled:!0,maxLineCount:5,defaultModel:"outlineModel"},envConfig:{outerHeight:500},serviceCollection:S},async(n,f,l)=>{const t=n.registerAndInstantiateContribution(d.ID,d);await t.stickyScrollCandidateProvider.update();const i=n.getOption(N.lineHeight),a=l.get(m);c.add(a.documentSymbolProvider.register("*",T())),await t.stickyScrollCandidateProvider.update();let e;n.setScrollTop(1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[1,2]),n.setScrollTop(i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[1,2]),n.setScrollTop(2*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[1]),n.setScrollTop(3*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[1]),n.setScrollTop(4*i+1),e=t.findScrollWidgetState(),r.deepStrictEqual(e.startLineNumbers,[]),t.dispose(),t.stickyScrollCandidateProvider.dispose(),o.dispose()})}))});
