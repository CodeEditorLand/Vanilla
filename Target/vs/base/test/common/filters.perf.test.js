import{importAMDNodeModule as g}from"../../../amdX.js";import*as e from"../../common/filters.js";import{FileAccess as h}from"../../common/network.js";const f=["cci","ida","pos","CCI","enbled","callback","gGame","cons","zyx","aBc"],d=!1;function p(a,o){d&&suite(a,o)}p("Performance - fuzzyMatch",async function(){const a=h.asBrowserUri("vs/base/test/common/filters.perf.data").toString(!0),{data:o}=await g(a,"");console.log(`Matching ${o.length} items against ${f.length} patterns (${o.length*f.length} operations) `);function t(n,u){test(n,()=>{const l=Date.now();let s=0;for(let c=0;c<2;c++)for(const i of f){const m=i.toLowerCase();for(const z of o)s+=1,u(i,m,0,z,z.toLowerCase(),0)}const r=Date.now()-l;console.log(n,`${r}ms, ${Math.round(s/r)*15}/15ms, ${Math.round(s/r)}/1ms`)})}t("fuzzyScore",e.fuzzyScore),t("fuzzyScoreGraceful",e.fuzzyScoreGraceful),t("fuzzyScoreGracefulAggressive",e.fuzzyScoreGracefulAggressive)}),p("Performance - IFilter",async function(){const a=h.asBrowserUri("vs/base/test/common/filters.perf.data").toString(!0),{data:o}=await g(a,"");function t(n,u){test(n,()=>{const l=Date.now();let s=0;for(let c=0;c<2;c++)for(const i of f)for(const m of o)s+=1,u(i,m);const r=Date.now()-l;console.log(n,`${r}ms, ${Math.round(s/r)*15}/15ms, ${Math.round(s/r)}/1ms`)})}t("matchesFuzzy",e.matchesFuzzy),t("matchesFuzzy2",e.matchesFuzzy2),t("matchesPrefix",e.matchesPrefix),t("matchesContiguousSubString",e.matchesContiguousSubString),t("matchesCamelCase",e.matchesCamelCase)});
