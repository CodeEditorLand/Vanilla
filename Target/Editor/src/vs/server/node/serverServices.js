import{hostname as se,release as me}from"os";import{Emitter as ce}from"../../base/common/event.js";import{toDisposable as ae}from"../../base/common/lifecycle.js";import{Schemas as $}from"../../base/common/network.js";import*as y from"../../base/common/path.js";import"../../base/common/uriIpc.js";import{getMachineId as le,getSqmMachineId as ve,getdevDeviceId as ge}from"../../base/node/id.js";import{Promises as M}from"../../base/node/pfs.js";import{IPCServer as fe,StaticRouter as Se}from"../../base/parts/ipc/common/ipc.js";import{ProtocolConstants as H}from"../../base/parts/ipc/common/ipc.net.js";import{IConfigurationService as pe}from"../../platform/configuration/common/configuration.js";import{ConfigurationService as de}from"../../platform/configuration/common/configurationService.js";import{ExtensionHostDebugBroadcastChannel as U}from"../../platform/debug/common/extensionHostDebugIpc.js";import{IDownloadService as ue}from"../../platform/download/common/download.js";import{DownloadServiceChannelClient as Ce}from"../../platform/download/common/downloadIpc.js";import{IEnvironmentService as he,INativeEnvironmentService as Ie}from"../../platform/environment/common/environment.js";import{ExtensionGalleryServiceWithNoStorageService as Ee}from"../../platform/extensionManagement/common/extensionGalleryService.js";import{IExtensionGalleryService as _}from"../../platform/extensionManagement/common/extensionManagement.js";import{ExtensionSignatureVerificationService as we,IExtensionSignatureVerificationService as xe}from"../../platform/extensionManagement/node/extensionSignatureVerificationService.js";import{ExtensionManagementCLI as ye}from"../../platform/extensionManagement/common/extensionManagementCLI.js";import{ExtensionManagementChannel as Le}from"../../platform/extensionManagement/common/extensionManagementIpc.js";import{ExtensionManagementService as Te,INativeServerExtensionManagementService as G}from"../../platform/extensionManagement/node/extensionManagementService.js";import{IFileService as Pe}from"../../platform/files/common/files.js";import{FileService as Re}from"../../platform/files/common/fileService.js";import{DiskFileSystemProvider as Ae}from"../../platform/files/node/diskFileSystemProvider.js";import{SyncDescriptor as g}from"../../platform/instantiation/common/descriptors.js";import"../../platform/instantiation/common/instantiation.js";import{InstantiationService as De}from"../../platform/instantiation/common/instantiationService.js";import{ServiceCollection as be}from"../../platform/instantiation/common/serviceCollection.js";import{ILanguagePackService as F}from"../../platform/languagePacks/common/languagePacks.js";import{NativeLanguagePackService as ke}from"../../platform/languagePacks/node/languagePacks.js";import{AbstractLogger as Ne,DEFAULT_LOG_LEVEL as $e,getLogLevel as O,ILoggerService as Me,ILogService as He,log as Ue,LogLevel as C,LogLevelToString as _e}from"../../platform/log/common/log.js";import Ge from"../../platform/product/common/product.js";import{IProductService as Fe}from"../../platform/product/common/productService.js";import"../../platform/remote/common/remoteAgentEnvironment.js";import{IRequestService as q}from"../../platform/request/common/request.js";import{RequestChannel as Oe}from"../../platform/request/common/requestIpc.js";import{RequestService as qe}from"../../platform/request/node/requestService.js";import{resolveCommonProperties as je}from"../../platform/telemetry/common/commonProperties.js";import{ITelemetryService as j,TelemetryLevel as h}from"../../platform/telemetry/common/telemetry.js";import"../../platform/telemetry/common/telemetryService.js";import{getPiiPathsFromEnvironment as Ve,isInternalTelemetry as Be,isLoggingOnly as ze,NullAppender as Ke,supportsTelemetry as We}from"../../platform/telemetry/common/telemetryUtils.js";import Ye from"../../platform/telemetry/node/errorTelemetry.js";import{IPtyService as Je,TerminalSettingId as Qe}from"../../platform/terminal/common/terminal.js";import{PtyHostService as Xe}from"../../platform/terminal/node/ptyHostService.js";import{IUriIdentityService as Ze}from"../../platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as er}from"../../platform/uriIdentity/common/uriIdentityService.js";import{RemoteAgentEnvironmentChannel as rr}from"./remoteAgentEnvironmentImpl.js";import{RemoteAgentFileSystemProviderChannel as tr}from"./remoteFileSystemProviderServer.js";import{ServerTelemetryChannel as nr}from"../../platform/telemetry/common/remoteTelemetryChannel.js";import{IServerTelemetryService as L,ServerNullTelemetryService as or,ServerTelemetryService as ir}from"../../platform/telemetry/common/serverTelemetryService.js";import{RemoteTerminalChannel as sr}from"./remoteTerminalChannel.js";import{createURITransformer as mr}from"../../workbench/api/node/uriTransformer.js";import"./serverConnectionToken.js";import{ServerEnvironmentService as cr}from"./serverEnvironmentService.js";import{REMOTE_TERMINAL_CHANNEL_NAME as ar}from"../../workbench/contrib/terminal/common/remote/remoteTerminalChannel.js";import{REMOTE_FILE_SYSTEM_CHANNEL_NAME as lr}from"../../workbench/services/remote/common/remoteFileSystemProviderClient.js";import{ExtensionHostStatusService as vr,IExtensionHostStatusService as gr}from"./extensionHostStatusService.js";import{IExtensionsScannerService as V}from"../../platform/extensionManagement/common/extensionsScannerService.js";import{ExtensionsScannerService as fr}from"./extensionsScannerService.js";import{IExtensionsProfileScannerService as Sr}from"../../platform/extensionManagement/common/extensionsProfileScannerService.js";import{IUserDataProfilesService as pr}from"../../platform/userDataProfile/common/userDataProfile.js";import{NullPolicyService as dr}from"../../platform/policy/common/policy.js";import{OneDataSystemAppender as ur}from"../../platform/telemetry/node/1dsAppender.js";import{LoggerService as Cr}from"../../platform/log/node/loggerService.js";import{ServerUserDataProfilesService as hr}from"../../platform/userDataProfile/node/userDataProfile.js";import{ExtensionsProfileScannerService as Ir}from"../../platform/extensionManagement/node/extensionsProfileScannerService.js";import{LogService as Er}from"../../platform/log/common/logService.js";import{LoggerChannel as wr}from"../../platform/log/common/logIpc.js";import{localize as B}from"../../nls.js";import{RemoteExtensionsScannerChannel as xr,RemoteExtensionsScannerService as yr}from"./remoteExtensionsScanner.js";import{RemoteExtensionsScannerChannelName as Lr}from"../../platform/remote/common/remoteExtensionsScanner.js";import{RemoteUserDataProfilesServiceChannel as Tr}from"../../platform/userDataProfile/common/userDataProfileIpc.js";import{NodePtyHostStarter as Pr}from"../../platform/terminal/node/nodePtyHostStarter.js";import{CSSDevelopmentService as Rr,ICSSDevelopmentService as Ar}from"../../platform/cssDev/node/cssDevService.js";const Dr="monacoworkbench";async function gn(s,e,o,f){const r=new be,m=new br,c={_serviceBrand:void 0,...Ge};r.set(Fe,c);const t=new cr(e,c);r.set(he,t),r.set(Ie,t);const E=new Cr(O(t),t.logsHome);r.set(Me,E),m.registerChannel("logger",new wr(E,i=>I(i.remoteAuthority)));const z=E.createLogger("remoteagent",{name:B("remoteExtensionLog","Server")}),n=new Er(z,[new kr(O(t))]);r.set(He,n),setTimeout(()=>Nr(t.logsHome.with({scheme:$.file}).fsPath).then(null,i=>n.error(i)),1e4),n.onDidChangeLogLevel(i=>Ue(n,i,`Log level changed to ${_e(n.getLevel())}`)),n.trace(`Remote configuration data at ${o}`),n.trace("process arguments:",t.args),Array.isArray(c.serverGreeting)&&n.info(`

${c.serverGreeting.join(`
`)}

`),m.registerChannel(U.ChannelName,new U);const K=new Se(i=>i.clientId==="renderer"),d=f.add(new Re(n));r.set(Pe,d),d.registerProvider($.file,f.add(new Ae(n)));const R=new er(d);r.set(Ze,R);const S=new de(t.machineSettingsResource,d,new dr,n);r.set(pe,S);const u=new hr(R,t,d,n);r.set(pr,u),m.registerChannel("userDataProfiles",new Tr(u,i=>I(i.remoteAuthority))),r.set(Ar,new g(Rr,void 0,!0));const[,,W,Y,J]=await Promise.all([S.initialize(),u.init(),le(n.error.bind(n)),ve(n.error.bind(n)),ge(n.error.bind(n))]),A=new vr;r.set(gr,A);const Q=E.createLogger("network-server",{name:B("network-server","Network (Server)"),hidden:!0}),D=new qe(Q,S,t,n);r.set(q,D);let w=Ke;const b=Be(c,S);if(We(c,t)){!ze(c,t)&&c.aiConfig?.ariaKey&&(w=new ur(D,b,Dr,null,c.aiConfig.ariaKey),f.add(ae(()=>w?.flush())));const i={appenders:[w],commonProperties:je(me(),se(),process.arch,c.commit,c.version+"-remote",W,Y,J,b,"remoteAgent"),piiPaths:Ve(t)},l=t.args["telemetry-level"];let v=h.USAGE;l==="all"?v=h.USAGE:l==="error"?v=h.ERROR:l==="crash"?v=h.CRASH:l!==void 0&&(v=h.NONE),r.set(L,new g(ir,[i,v]))}else r.set(L,or);r.set(_,new g(Ee));const X=m.getChannel("download",K);r.set(ue,new Ce(X,()=>I("renderer"))),r.set(Sr,new g(Ir)),r.set(V,new g(fr)),r.set(xe,new g(we)),r.set(G,new g(Te));const p=new De(r);r.set(F,p.createInstance(ke));const Z=p.createInstance(Pr,{graceTime:H.ReconnectionGraceTime,shortGraceTime:H.ReconnectionShortGraceTime,scrollback:S.getValue(Qe.PersistentSessionScrollback)??100}),k=p.createInstance(Xe,Z);return r.set(Je,k),p.invokeFunction(i=>{const l=i.get(G),v=i.get(V),ee=i.get(_),re=i.get(F),te=new rr(s,t,u,A);m.registerChannel("remoteextensionsenvironment",te);const ne=new nr(i.get(L),w);m.registerChannel("telemetry",ne),m.registerChannel(ar,new sr(t,n,k,c,l,S));const N=new yr(p.createInstance(ye,n),t,u,v,n,ee,re);m.registerChannel(Lr,new xr(N,x=>I(x.remoteAuthority)));const oe=f.add(new tr(n,t));m.registerChannel(lr,oe),m.registerChannel("request",new Oe(i.get(q)));const ie=new Le(l,x=>I(x.remoteAuthority));return m.registerChannel("extensions",ie),N.whenExtensionsReady().then(()=>l.cleanUp()),f.add(new Ye(i.get(j))),{telemetryService:i.get(j)}}),{socketServer:m,instantiationService:p}}const T=Object.create(null);function I(s){return T[s]||(T[s]=mr(s)),T[s]}class br extends fe{_onDidConnectEmitter;constructor(){const e=new ce;super(e.event),this._onDidConnectEmitter=e}acceptConnection(e,o){this._onDidConnectEmitter.fire({protocol:e,onDidClientDisconnect:o})}}class kr extends Ne{useColors;constructor(e=$e){super(),this.setLevel(e),this.useColors=!!process.stdout.isTTY}trace(e,...o){this.checkLogLevel(C.Trace)&&(this.useColors?console.log(`\x1B[90m[${a()}]\x1B[0m`,e,...o):console.log(`[${a()}]`,e,...o))}debug(e,...o){this.checkLogLevel(C.Debug)&&(this.useColors?console.log(`\x1B[90m[${a()}]\x1B[0m`,e,...o):console.log(`[${a()}]`,e,...o))}info(e,...o){this.checkLogLevel(C.Info)&&(this.useColors?console.log(`\x1B[90m[${a()}]\x1B[0m`,e,...o):console.log(`[${a()}]`,e,...o))}warn(e,...o){this.checkLogLevel(C.Warning)&&(this.useColors?console.warn(`\x1B[93m[${a()}]\x1B[0m`,e,...o):console.warn(`[${a()}]`,e,...o))}error(e,...o){this.checkLogLevel(C.Error)&&(this.useColors?console.error(`\x1B[91m[${a()}]\x1B[0m`,e,...o):console.error(`[${a()}]`,e,...o))}flush(){}}function a(){const s=new Date;return`${P(s.getHours())}:${P(s.getMinutes())}:${P(s.getSeconds())}`}function P(s){return s<10?`0${s}`:String(s)}async function Nr(s){const e=y.basename(s),o=y.dirname(s),m=(await M.readdir(o)).filter(t=>/^\d{8}T\d{6}$/.test(t)).sort().filter(t=>t!==e),c=m.slice(0,Math.max(0,m.length-9));await Promise.all(c.map(t=>M.rm(y.join(o,t))))}export{br as SocketServer,gn as setupServerServices};
