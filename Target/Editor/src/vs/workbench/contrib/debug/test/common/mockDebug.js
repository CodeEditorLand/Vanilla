import{DeferredPromise as i}from"../../../../../base/common/async.js";import"../../../../../base/common/cancellation.js";import"../../../../../base/common/event.js";import"../../../../../base/common/uri.js";import"../../../../../editor/common/core/position.js";import"../../../../../editor/common/model.js";import{NullLogService as m}from"../../../../../platform/log/common/log.js";import"../../../../../platform/storage/common/storage.js";import"../../../../../platform/workspace/common/workspace.js";import{AbstractDebugAdapter as a}from"../../common/abstractDebugAdapter.js";import{State as d}from"../../common/debug.js";import"../../common/debugCompoundRoot.js";import"../../common/debugModel.js";import"../../common/debugSource.js";import{DebugStorage as p}from"../../common/debugStorage.js";class le{_serviceBrand;get state(){throw new Error("not implemented")}get onWillNewSession(){throw new Error("not implemented")}get onDidNewSession(){throw new Error("not implemented")}get onDidEndSession(){throw new Error("not implemented")}get onDidChangeState(){throw new Error("not implemented")}getConfigurationManager(){throw new Error("not implemented")}getAdapterManager(){throw new Error("Method not implemented.")}canSetBreakpointsIn(e){throw new Error("Method not implemented.")}focusStackFrame(e){throw new Error("not implemented")}sendAllBreakpoints(e){throw new Error("not implemented")}sendBreakpoints(e,o,r){throw new Error("not implemented")}addBreakpoints(e,o){throw new Error("not implemented")}updateBreakpoints(e,o,r){throw new Error("not implemented")}enableOrDisableBreakpoints(e){throw new Error("not implemented")}setBreakpointsActivated(){throw new Error("not implemented")}removeBreakpoints(){throw new Error("not implemented")}addInstructionBreakpoint(e){throw new Error("Method not implemented.")}removeInstructionBreakpoints(e){throw new Error("Method not implemented.")}setExceptionBreakpointCondition(e,o){throw new Error("Method not implemented.")}setExceptionBreakpointsForSession(e,o){throw new Error("Method not implemented.")}addFunctionBreakpoint(){}moveWatchExpression(e,o){}updateFunctionBreakpoint(e,o){throw new Error("not implemented")}removeFunctionBreakpoints(e){throw new Error("not implemented")}addDataBreakpoint(){throw new Error("Method not implemented.")}updateDataBreakpoint(e,o){throw new Error("not implemented")}removeDataBreakpoints(e){throw new Error("Method not implemented.")}addReplExpression(e){throw new Error("not implemented")}removeReplExpressions(){}addWatchExpression(e){throw new Error("not implemented")}renameWatchExpression(e,o){throw new Error("not implemented")}removeWatchExpressions(e){}startDebugging(e,o,r){return Promise.resolve(!0)}restartSession(){throw new Error("not implemented")}stopSession(){throw new Error("not implemented")}getModel(){throw new Error("not implemented")}getViewModel(){throw new Error("not implemented")}sourceIsNotAvailable(e){}tryToAutoFocusStackFrame(e){throw new Error("not implemented")}runTo(e,o,r){throw new Error("Method not implemented.")}}class ge{suppressDebugToolbar=!1;suppressDebugStatusbar=!1;suppressDebugView=!1;autoExpandLazyVariables=!1;getMemory(e){throw new Error("Method not implemented.")}get onDidInvalidateMemory(){throw new Error("Not implemented")}readMemory(e,o,r){throw new Error("Method not implemented.")}writeMemory(e,o,r,n){throw new Error("Method not implemented.")}get compoundRoot(){}get saveBeforeRestart(){return!0}get isSimpleUI(){return!1}get lifecycleManagedByParent(){return!1}stepInTargets(e){throw new Error("Method not implemented.")}cancel(e){throw new Error("Method not implemented.")}breakpointsLocations(e,o){throw new Error("Method not implemented.")}dataBytesBreakpointInfo(e,o){throw new Error("Method not implemented.")}dataBreakpointInfo(e,o){throw new Error("Method not implemented.")}sendDataBreakpoints(e){throw new Error("Method not implemented.")}subId;get compact(){return!1}setSubId(e){throw new Error("Method not implemented.")}get parentSession(){}getReplElements(){return[]}hasSeparateRepl(){return!0}removeReplExpressions(){}get onDidChangeReplElements(){throw new Error("not implemented")}addReplExpression(e,o){return Promise.resolve(void 0)}appendToRepl(e){}configuration={type:"mock",name:"mock",request:"launch"};unresolvedConfiguration={type:"mock",name:"mock",request:"launch"};state=d.Stopped;root;capabilities={};getId(){return"mock"}getLabel(){return"mockname"}get name(){return"mockname"}setName(e){throw new Error("not implemented")}getSourceForUri(e){throw new Error("not implemented")}getThread(e){throw new Error("not implemented")}getStoppedDetails(){throw new Error("not implemented")}get onDidCustomEvent(){throw new Error("not implemented")}get onDidLoadedSource(){throw new Error("not implemented")}get onDidChangeState(){throw new Error("not implemented")}get onDidEndAdapter(){throw new Error("not implemented")}get onDidChangeName(){throw new Error("not implemented")}get onDidProgressStart(){throw new Error("not implemented")}get onDidProgressUpdate(){throw new Error("not implemented")}get onDidProgressEnd(){throw new Error("not implemented")}setConfiguration(e){}getAllThreads(){return[]}getSource(e){throw new Error("not implemented")}getLoadedSources(){return Promise.resolve([])}completions(e,o,r,n,s){throw new Error("not implemented")}clearThreads(e,o){}rawUpdate(e){}initialize(e){throw new Error("Method not implemented.")}launchOrAttach(e){throw new Error("Method not implemented.")}restart(){throw new Error("Method not implemented.")}sendBreakpoints(e,o,r){throw new Error("Method not implemented.")}sendFunctionBreakpoints(e){throw new Error("Method not implemented.")}sendExceptionBreakpoints(e){throw new Error("Method not implemented.")}sendInstructionBreakpoints(e){throw new Error("Method not implemented.")}getDebugProtocolBreakpoint(e){throw new Error("Method not implemented.")}customRequest(e,o){throw new Error("Method not implemented.")}stackTrace(e,o,r,n){throw new Error("Method not implemented.")}exceptionInfo(e){throw new Error("Method not implemented.")}scopes(e){throw new Error("Method not implemented.")}variables(e,o,r,n,s){throw new Error("Method not implemented.")}evaluate(e,o,r){throw new Error("Method not implemented.")}restartFrame(e,o){throw new Error("Method not implemented.")}next(e,o){throw new Error("Method not implemented.")}stepIn(e,o,r){throw new Error("Method not implemented.")}stepOut(e,o){throw new Error("Method not implemented.")}stepBack(e,o){throw new Error("Method not implemented.")}continue(e){throw new Error("Method not implemented.")}reverseContinue(e){throw new Error("Method not implemented.")}pause(e){throw new Error("Method not implemented.")}terminateThreads(e){throw new Error("Method not implemented.")}setVariable(e,o,r){throw new Error("Method not implemented.")}setExpression(e,o,r){throw new Error("Method not implemented.")}loadSource(e){throw new Error("Method not implemented.")}disassemble(e,o,r,n){throw new Error("Method not implemented.")}terminate(e=!1){throw new Error("Method not implemented.")}disconnect(e=!1){throw new Error("Method not implemented.")}gotoTargets(e,o,r){throw new Error("Method not implemented.")}goto(e,o){throw new Error("Method not implemented.")}resolveLocationReference(e){throw new Error("Method not implemented.")}}class ce{capabilities={};disconnected=!1;sessionLengthInSeconds=0;readyForBreakpoints=!0;emittedStopped=!0;getLengthInSeconds(){return 100}stackTrace(e){return Promise.resolve({seq:1,type:"response",request_seq:1,success:!0,command:"stackTrace",body:{stackFrames:[{id:1,name:"mock",line:5,column:6}]}})}exceptionInfo(e){throw new Error("not implemented")}launchOrAttach(e){throw new Error("not implemented")}scopes(e){throw new Error("not implemented")}variables(e){throw new Error("not implemented")}evaluate(e){return Promise.resolve(null)}custom(e,o){throw new Error("not implemented")}terminate(e=!1){throw new Error("not implemented")}disconnect(e){throw new Error("not implemented")}threads(){throw new Error("not implemented")}stepIn(e){throw new Error("not implemented")}stepOut(e){throw new Error("not implemented")}stepBack(e){throw new Error("not implemented")}continue(e){throw new Error("not implemented")}reverseContinue(e){throw new Error("not implemented")}pause(e){throw new Error("not implemented")}terminateThreads(e){throw new Error("not implemented")}setVariable(e){throw new Error("not implemented")}restartFrame(e){throw new Error("not implemented")}completions(e){throw new Error("not implemented")}next(e){throw new Error("not implemented")}source(e){throw new Error("not implemented")}loadedSources(e){throw new Error("not implemented")}setBreakpoints(e){throw new Error("not implemented")}setFunctionBreakpoints(e){throw new Error("not implemented")}setExceptionBreakpoints(e){throw new Error("not implemented")}onDidStop=null}class we extends a{seq=0;pendingResponses=new Map;startSession(){return Promise.resolve()}stopSession(){return Promise.resolve()}sendMessage(e){if(e.type==="request")setTimeout(()=>{const o=e;switch(o.command){case"evaluate":this.evaluate(o,o.arguments);return}this.sendResponseBody(o,{})},0);else if(e.type==="response"){const o=e;this.pendingResponses.has(o.command)&&this.pendingResponses.get(o.command).complete(o)}}sendResponseBody(e,o){const r={seq:++this.seq,type:"response",request_seq:e.seq,command:e.command,success:!0,body:o};this.acceptMessage(r)}sendEventBody(e,o){const r={seq:++this.seq,type:"event",event:e,body:o};this.acceptMessage(r)}waitForResponseFromClient(e){const o=new i;return this.pendingResponses.has(e)?this.pendingResponses.get(e).p:(this.pendingResponses.set(e,o),o.p)}sendRequestBody(e,o){const r={seq:++this.seq,type:"request",command:e,arguments:o};this.acceptMessage(r)}evaluate(e,o){o.expression.indexOf("before.")===0&&this.sendEventBody("output",{output:o.expression}),this.sendResponseBody(e,{result:"="+o.expression,variablesReference:0}),o.expression.indexOf("after.")===0&&this.sendEventBody("output",{output:o.expression})}}class he extends p{constructor(e){super(e,void 0,void 0,new m)}}export{we as MockDebugAdapter,le as MockDebugService,he as MockDebugStorage,ce as MockRawSession,ge as MockSession};
