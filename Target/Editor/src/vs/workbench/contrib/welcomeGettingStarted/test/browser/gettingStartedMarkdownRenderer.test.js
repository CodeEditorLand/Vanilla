import c from"assert";import{FileAccess as s}from"../../../../../base/common/network.js";import{ensureNoDisposablesAreLeakedInTestSuite as a}from"../../../../../base/test/common/utils.js";import{LanguageService as d}from"../../../../../editor/common/services/languageService.js";import{TestNotificationService as g}from"../../../../../platform/notification/test/common/testNotificationService.js";import{GettingStartedDetailsRenderer as w}from"../../browser/gettingStartedDetailsRenderer.js";import{convertInternalMediaPathToFileURI as p}from"../../browser/gettingStartedService.js";import{TestFileService as S}from"../../../../test/browser/workbenchTestServices.js";import{TestExtensionService as l}from"../../../../test/common/workbenchTestServices.js";suite("Getting Started Markdown Renderer",()=>{a(),test("renders theme picker markdown with images",async()=>{const t=new S,r=new d,o=new w(t,new g,new l,r),i=p("theme_picker").with({query:JSON.stringify({moduleId:"vs/workbench/contrib/welcomeGettingStarted/common/media/theme_picker"})}),n=s.asFileUri("vs/workbench/contrib/welcomeGettingStarted/common/media/"),m=[...(await o.renderMarkdown(i,n)).matchAll(/img src="[^"]*"/g)].map(e=>e[0]);for(const e of m)c(/^img src=".*\/vs\/workbench\/contrib\/welcomeGettingStarted\/common\/media\/.*.png"$/.test(e),`${e} didnt match regex`);r.dispose()})});
