import t from"assert";import{shuffle as S}from"../../common/arrays.js";import{randomPath as T}from"../../common/extpath.js";import{StopWatch as x}from"../../common/stopwatch.js";import{ConfigKeysIterator as m,PathIterator as d,StringIterator as q,TernarySearchTree as a,UriIterator as E}from"../../common/ternarySearchTree.js";import{URI as s}from"../../common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as w}from"./utils.js";suite("Ternary Search Tree",()=>{w(),test("PathIterator",()=>{const e=new d;e.reset("file:///usr/bin/file.txt"),t.strictEqual(e.value(),"file:"),t.strictEqual(e.hasNext(),!0),t.strictEqual(e.cmp("file:"),0),t.ok(e.cmp("a")<0),t.ok(e.cmp("aile:")<0),t.ok(e.cmp("z")>0),t.ok(e.cmp("zile:")>0),e.next(),t.strictEqual(e.value(),"usr"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"bin"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"file.txt"),t.strictEqual(e.hasNext(),!1),e.next(),t.strictEqual(e.value(),""),t.strictEqual(e.hasNext(),!1),e.next(),t.strictEqual(e.value(),""),t.strictEqual(e.hasNext(),!1),e.reset("/foo/bar/"),t.strictEqual(e.value(),"foo"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"bar"),t.strictEqual(e.hasNext(),!1)}),test("URIIterator",function(){const e=new E(()=>!1,()=>!1);e.reset(s.parse("file:///usr/bin/file.txt")),t.strictEqual(e.value(),"file"),t.strictEqual(e.cmp("file"),0),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"usr"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"bin"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"file.txt"),t.strictEqual(e.hasNext(),!1),e.reset(s.parse("file://share/usr/bin/file.txt?foo")),t.strictEqual(e.value(),"file"),t.strictEqual(e.cmp("file"),0),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"share"),t.strictEqual(e.cmp("SHARe"),0),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"usr"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"bin"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"file.txt"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"foo"),t.strictEqual(e.cmp("z")>0,!0),t.strictEqual(e.cmp("a")<0,!0),t.strictEqual(e.hasNext(),!1)}),test("URIIterator - ignore query/fragment",function(){const e=new E(()=>!1,()=>!0);e.reset(s.parse("file:///usr/bin/file.txt")),t.strictEqual(e.value(),"file"),t.strictEqual(e.cmp("file"),0),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"usr"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"bin"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"file.txt"),t.strictEqual(e.hasNext(),!1),e.reset(s.parse("file://share/usr/bin/file.txt?foo")),t.strictEqual(e.value(),"file"),t.strictEqual(e.cmp("file"),0),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"share"),t.strictEqual(e.cmp("SHARe"),0),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"usr"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"bin"),t.strictEqual(e.hasNext(),!0),e.next(),t.strictEqual(e.value(),"file.txt"),t.strictEqual(e.hasNext(),!1)});function i(e,...r){t.ok(e._isBalanced(),"TST is not balanced");let o=0;for(const[u,c]of e){const g=r[o++];t.ok(g),t.strictEqual(u,g[0]),t.strictEqual(c,g[1])}t.strictEqual(o,r.length);const n=new Map;for(const[u,c]of r)n.set(u,c);n.forEach((u,c)=>{t.strictEqual(e.get(c),u)});let l=0;e.forEach((u,c)=>{t.strictEqual(u,n.get(c)),l++}),t.strictEqual(n.size,l);let f=0;for(const[u,c]of e)t.strictEqual(c,n.get(u)),f++;t.strictEqual(n.size,f)}test("TernarySearchTree - set",function(){let e=a.forStrings();e.set("foobar",1),e.set("foobaz",2),i(e,["foobar",1],["foobaz",2]),e=a.forStrings(),e.set("foobar",1),e.set("fooba",2),i(e,["fooba",2],["foobar",1]),e=a.forStrings(),e.set("foo",1),e.set("foo",2),i(e,["foo",2]),e=a.forStrings(),e.set("foo",1),e.set("foobar",2),e.set("bar",3),e.set("foob",4),e.set("bazz",5),i(e,["bar",3],["bazz",5],["foo",1],["foob",4],["foobar",2])}),test("TernarySearchTree - findLongestMatch",function(){const e=a.forStrings();e.set("foo",1),e.set("foobar",2),e.set("foobaz",3),i(e,["foo",1],["foobar",2],["foobaz",3]),t.strictEqual(e.findSubstr("f"),void 0),t.strictEqual(e.findSubstr("z"),void 0),t.strictEqual(e.findSubstr("foo"),1),t.strictEqual(e.findSubstr("foo\xF6"),1),t.strictEqual(e.findSubstr("fooba"),1),t.strictEqual(e.findSubstr("foobarr"),2),t.strictEqual(e.findSubstr("foobazrr"),3)}),test("TernarySearchTree - basics",function(){const e=new a(new q);e.set("foo",1),e.set("bar",2),e.set("foobar",3),i(e,["bar",2],["foo",1],["foobar",3]),t.strictEqual(e.get("foo"),1),t.strictEqual(e.get("bar"),2),t.strictEqual(e.get("foobar"),3),t.strictEqual(e.get("foobaz"),void 0),t.strictEqual(e.get("foobarr"),void 0),t.strictEqual(e.findSubstr("fo"),void 0),t.strictEqual(e.findSubstr("foo"),1),t.strictEqual(e.findSubstr("foooo"),1),e.delete("foobar"),e.delete("bar"),t.strictEqual(e.get("foobar"),void 0),t.strictEqual(e.get("bar"),void 0),e.set("foobar",17),e.set("barr",18),t.strictEqual(e.get("foobar"),17),t.strictEqual(e.get("barr"),18),t.strictEqual(e.get("bar"),void 0)}),test("TernarySearchTree - delete & cleanup",function(){let e=new a(new q);e.set("foo",1),e.set("foobar",2),e.set("bar",3),i(e,["bar",3],["foo",1],["foobar",2]),e.delete("foo"),i(e,["bar",3],["foobar",2]),e.delete("foobar"),i(e,["bar",3]),e=new a(new q),e.set("foo",1),e.set("foobar",2),e.set("bar",3),e.set("foobarbaz",4),e.deleteSuperstr("foo"),i(e,["bar",3],["foo",1]),e=new a(new q),e.set("foo",1),e.set("foobar",2),e.set("bar",3),e.set("foobarbaz",4),e.deleteSuperstr("fo"),i(e,["bar",3])}),test("TernarySearchTree (PathSegments) - basics",function(){const e=new a(new d);e.set("/user/foo/bar",1),e.set("/user/foo",2),e.set("/user/foo/flip/flop",3),t.strictEqual(e.get("/user/foo/bar"),1),t.strictEqual(e.get("/user/foo"),2),t.strictEqual(e.get("/user//foo"),2),t.strictEqual(e.get("/user\\foo"),2),t.strictEqual(e.get("/user/foo/flip/flop"),3),t.strictEqual(e.findSubstr("/user/bar"),void 0),t.strictEqual(e.findSubstr("/user/foo"),2),t.strictEqual(e.findSubstr("\\user\\foo"),2),t.strictEqual(e.findSubstr("/user//foo"),2),t.strictEqual(e.findSubstr("/user/foo/ba"),2),t.strictEqual(e.findSubstr("/user/foo/far/boo"),2),t.strictEqual(e.findSubstr("/user/foo/bar"),1),t.strictEqual(e.findSubstr("/user/foo/bar/far/boo"),1)}),test("TernarySearchTree - (AVL) set",function(){{const e=new a(new d);e.set("/fileA",1),e.set("/fileB",2),e.set("/fileC",3),i(e,["/fileA",1],["/fileB",2],["/fileC",3])}{const e=new a(new d);e.set("/foo/fileA",1),e.set("/foo/fileB",2),e.set("/foo/fileC",3),i(e,["/foo/fileA",1],["/foo/fileB",2],["/foo/fileC",3])}{const e=new a(new d);e.set("/fileC",3),e.set("/fileB",2),e.set("/fileA",1),i(e,["/fileA",1],["/fileB",2],["/fileC",3])}{const e=new a(new d);e.set("/mid/fileC",3),e.set("/mid/fileB",2),e.set("/mid/fileA",1),i(e,["/mid/fileA",1],["/mid/fileB",2],["/mid/fileC",3])}{const e=new a(new d);e.set("/fileD",7),e.set("/fileB",2),e.set("/fileG",42),e.set("/fileF",24),e.set("/fileZ",73),e.set("/fileE",15),i(e,["/fileB",2],["/fileD",7],["/fileE",15],["/fileF",24],["/fileG",42],["/fileZ",73])}{const e=new a(new d);e.set("/fileJ",42),e.set("/fileZ",73),e.set("/fileE",15),e.set("/fileB",2),e.set("/fileF",7),e.set("/fileG",1),i(e,["/fileB",2],["/fileE",15],["/fileF",7],["/fileG",1],["/fileJ",42],["/fileZ",73])}}),test("TernarySearchTree - (BST) delete",function(){const e=new a(new q);e.set("d",1),i(e,["d",1]),e.delete("d"),i(e),e.clear(),e.set("d",1),e.set("b",1),e.set("f",1),i(e,["b",1],["d",1],["f",1]),e.delete("d"),i(e,["b",1],["f",1]),e.clear(),e.set("d",1),e.set("b",1),e.set("f",1),e.set("e",1),i(e,["b",1],["d",1],["e",1],["f",1]),e.delete("f"),i(e,["b",1],["d",1],["e",1])}),test("TernarySearchTree - (AVL) delete",function(){const e=new a(new q);e.clear(),e.set("d",1),e.set("b",1),e.set("f",1),e.set("e",1),e.set("z",1),i(e,["b",1],["d",1],["e",1],["f",1],["z",1]),e.delete("b"),i(e,["d",1],["e",1],["f",1],["z",1]),e.clear(),e.set("d",1),e.set("c",1),e.set("f",1),e.set("a",1),e.set("b",1),i(e,["a",1],["b",1],["c",1],["d",1],["f",1]),e.delete("f"),i(e,["a",1],["b",1],["c",1],["d",1]),e.clear(),e.set("a",1),e.set("ad",1),e.set("ab",1),e.set("af",1),e.set("ae",1),e.set("az",1),i(e,["a",1],["ab",1],["ad",1],["ae",1],["af",1],["az",1]),e.delete("ab"),i(e,["a",1],["ad",1],["ae",1],["af",1],["az",1]),e.delete("a"),i(e,["ad",1],["ae",1],["af",1],["az",1])}),test("TernarySearchTree: Cannot read property '1' of undefined #138284",function(){const e=[s.parse("fake-fs:/C"),s.parse("fake-fs:/A"),s.parse("fake-fs:/D"),s.parse("fake-fs:/B")],r=a.forUris();for(const o of e)r.set(o,!0);t.ok(r._isBalanced()),r.delete(e[0]),t.ok(r._isBalanced())}),test("TernarySearchTree: Cannot read property '1' of undefined #138284 (simple)",function(){const e=["C","A","D","B"],r=a.forStrings();for(const o of e)r.set(o,!0);i(r,["A",!0],["B",!0],["C",!0],["D",!0]),r.delete(e[0]),i(r,["A",!0],["B",!0],["D",!0]);{const o=a.forStrings();o.set("C",!0),o.set("A",!0),o.set("B",!0),i(o,["A",!0],["B",!0],["C",!0])}}),test("TernarySearchTree: Cannot read property '1' of undefined #138284 (random)",function(){for(let e=10;e>=0;e--){const r=[];for(let n=0;n<100;n++)r.push(s.from({scheme:"fake-fs",path:T(void 0,void 0,10)}));const o=a.forUris();for(const n of r)o.set(n,!0),t.ok(o._isBalanced(),`SET${n}|${r.map(String).join()}`);for(const n of r)o.delete(n),t.ok(o._isBalanced(),`DEL${n}|${r.map(String).join()}`)}}),test("TernarySearchTree: Cannot read properties of undefined (reading 'length'): #161618 (simple)",function(){const e="config.debug.toolBarLocation,floating,config.editor.renderControlCharacters,true,config.editor.renderWhitespace,selection,config.files.autoSave,off,config.git.enabled,true,config.notebook.globalToolbar,true,config.terminal.integrated.tabs.enabled,true,config.terminal.integrated.tabs.showActions,singleTerminalOrNarrow,config.terminal.integrated.tabs.showActiveTerminal,singleTerminalOrNarrow,config.workbench.activityBar.visible,true,config.workbench.experimental.settingsProfiles.enabled,true,config.workbench.layoutControl.type,both,config.workbench.sideBar.location,left,config.workbench.statusBar.visible,true",r=e.split(","),o=[];for(let f=0;f<r.length;f+=2)o.push([r[f],r[f+1]]);const n=a.forConfigKeys();n.fill(o),t.strictEqual([...n].join(),e),t.ok(n.has("config.editor.renderWhitespace"));const l=[...n].length;n.delete("config.editor.renderWhitespace"),t.ok(n._isBalanced()),t.strictEqual([...n].length,l-1)}),test("TernarySearchTree: Cannot read properties of undefined (reading 'length'): #161618 (random)",function(){const e="config.debug.toolBarLocation,floating,config.editor.renderControlCharacters,true,config.editor.renderWhitespace,selection,config.files.autoSave,off,config.git.enabled,true,config.notebook.globalToolbar,true,config.terminal.integrated.tabs.enabled,true,config.terminal.integrated.tabs.showActions,singleTerminalOrNarrow,config.terminal.integrated.tabs.showActiveTerminal,singleTerminalOrNarrow,config.workbench.activityBar.visible,true,config.workbench.experimental.settingsProfiles.enabled,true,config.workbench.layoutControl.type,both,config.workbench.sideBar.location,left,config.workbench.statusBar.visible,true",r=e.split(","),o=[];for(let n=0;n<r.length;n+=2)o.push([r[n],r[n+1]]);for(let n=100;n>=0;n--){S(o);const l=a.forConfigKeys();l.fill(o),t.strictEqual([...l].join(),e),t.ok(l.has("config.editor.renderWhitespace"));const f=[...l].length;l.delete("config.editor.renderWhitespace"),t.ok(l._isBalanced()),t.strictEqual([...l].length,f-1)}}),test("TernarySearchTree (PathSegments) - lookup",function(){const e=new a(new d);e.set("/user/foo/bar",1),e.set("/user/foo",2),e.set("/user/foo/flip/flop",3),t.strictEqual(e.get("/foo"),void 0),t.strictEqual(e.get("/user"),void 0),t.strictEqual(e.get("/user/foo"),2),t.strictEqual(e.get("/user/foo/bar"),1),t.strictEqual(e.get("/user/foo/bar/boo"),void 0)}),test("TernarySearchTree (PathSegments) - superstr",function(){const e=new a(new d);e.set("/user/foo/bar",1),e.set("/user/foo",2),e.set("/user/foo/flip/flop",3),e.set("/usr/foo",4);let r,o=e.findSuperstr("/user");r=o.next(),t.strictEqual(r.value[1],2),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value[1],1),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value[1],3),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value,void 0),t.strictEqual(r.done,!0),o=e.findSuperstr("/usr"),r=o.next(),t.strictEqual(r.value[1],4),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value,void 0),t.strictEqual(r.done,!0),t.strictEqual(e.findSuperstr("/not"),void 0),t.strictEqual(e.findSuperstr("/us"),void 0),t.strictEqual(e.findSuperstr("/usrr"),void 0),t.strictEqual(e.findSuperstr("/userr"),void 0)}),test("TernarySearchTree (PathSegments) - delete_superstr",function(){const e=new a(new d);e.set("/user/foo/bar",1),e.set("/user/foo",2),e.set("/user/foo/flip/flop",3),e.set("/usr/foo",4),i(e,["/user/foo",2],["/user/foo/bar",1],["/user/foo/flip/flop",3],["/usr/foo",4]),e.deleteSuperstr("/user/fo"),i(e,["/user/foo",2],["/user/foo/bar",1],["/user/foo/flip/flop",3],["/usr/foo",4]),e.set("/user/foo/bar",1),e.set("/user/foo",2),e.set("/user/foo/flip/flop",3),e.set("/usr/foo",4),e.deleteSuperstr("/user/foo"),i(e,["/user/foo",2],["/usr/foo",4])}),test("TernarySearchTree (URI) - basics",function(){const e=new a(new E(()=>!1,()=>!1));e.set(s.file("/user/foo/bar"),1),e.set(s.file("/user/foo"),2),e.set(s.file("/user/foo/flip/flop"),3),t.strictEqual(e.get(s.file("/user/foo/bar")),1),t.strictEqual(e.get(s.file("/user/foo")),2),t.strictEqual(e.get(s.file("/user/foo/flip/flop")),3),t.strictEqual(e.findSubstr(s.file("/user/bar")),void 0),t.strictEqual(e.findSubstr(s.file("/user/foo")),2),t.strictEqual(e.findSubstr(s.file("/user/foo/ba")),2),t.strictEqual(e.findSubstr(s.file("/user/foo/far/boo")),2),t.strictEqual(e.findSubstr(s.file("/user/foo/bar")),1),t.strictEqual(e.findSubstr(s.file("/user/foo/bar/far/boo")),1)}),test("TernarySearchTree (URI) - query parameters",function(){const e=new a(new E(()=>!1,()=>!0)),r=s.parse("memfs:/?param=1");e.set(r,1),t.strictEqual(e.get(s.parse("memfs:/?param=1")),1),t.strictEqual(e.findSubstr(s.parse("memfs:/?param=1")),1),t.strictEqual(e.findSubstr(s.parse("memfs:/aaa?param=1")),1)}),test("TernarySearchTree (URI) - lookup",function(){const e=new a(new E(()=>!1,()=>!1));e.set(s.parse("http://foo.bar/user/foo/bar"),1),e.set(s.parse("http://foo.bar/user/foo?query"),2),e.set(s.parse("http://foo.bar/user/foo?QUERY"),3),e.set(s.parse("http://foo.bar/user/foo/flip/flop"),3),t.strictEqual(e.get(s.parse("http://foo.bar/foo")),void 0),t.strictEqual(e.get(s.parse("http://foo.bar/user")),void 0),t.strictEqual(e.get(s.parse("http://foo.bar/user/foo/bar")),1),t.strictEqual(e.get(s.parse("http://foo.bar/user/foo?query")),2),t.strictEqual(e.get(s.parse("http://foo.bar/user/foo?Query")),void 0),t.strictEqual(e.get(s.parse("http://foo.bar/user/foo?QUERY")),3),t.strictEqual(e.get(s.parse("http://foo.bar/user/foo/bar/boo")),void 0)}),test("TernarySearchTree (URI) - lookup, casing",function(){const e=new a(new E(r=>/^https?$/.test(r.scheme),()=>!1));e.set(s.parse("http://foo.bar/user/foo/bar"),1),t.strictEqual(e.get(s.parse("http://foo.bar/USER/foo/bar")),1),e.set(s.parse("foo://foo.bar/user/foo/bar"),1),t.strictEqual(e.get(s.parse("foo://foo.bar/USER/foo/bar")),void 0)}),test("TernarySearchTree (URI) - superstr",function(){const e=new a(new E(()=>!1,()=>!1));e.set(s.file("/user/foo/bar"),1),e.set(s.file("/user/foo"),2),e.set(s.file("/user/foo/flip/flop"),3),e.set(s.file("/usr/foo"),4);let r,o=e.findSuperstr(s.file("/user"));r=o.next(),t.strictEqual(r.value[1],2),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value[1],1),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value[1],3),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value,void 0),t.strictEqual(r.done,!0),o=e.findSuperstr(s.file("/usr")),r=o.next(),t.strictEqual(r.value[1],4),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value,void 0),t.strictEqual(r.done,!0),o=e.findSuperstr(s.file("/")),r=o.next(),t.strictEqual(r.value[1],2),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value[1],1),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value[1],3),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value[1],4),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value,void 0),t.strictEqual(r.done,!0),t.strictEqual(e.findSuperstr(s.file("/not")),void 0),t.strictEqual(e.findSuperstr(s.file("/us")),void 0),t.strictEqual(e.findSuperstr(s.file("/usrr")),void 0),t.strictEqual(e.findSuperstr(s.file("/userr")),void 0)}),test("TernarySearchTree (ConfigKeySegments) - basics",function(){const e=new a(new m);e.set("config.foo.bar",1),e.set("config.foo",2),e.set("config.foo.flip.flop",3),t.strictEqual(e.get("config.foo.bar"),1),t.strictEqual(e.get("config.foo"),2),t.strictEqual(e.get("config.foo.flip.flop"),3),t.strictEqual(e.findSubstr("config.bar"),void 0),t.strictEqual(e.findSubstr("config.foo"),2),t.strictEqual(e.findSubstr("config.foo.ba"),2),t.strictEqual(e.findSubstr("config.foo.far.boo"),2),t.strictEqual(e.findSubstr("config.foo.bar"),1),t.strictEqual(e.findSubstr("config.foo.bar.far.boo"),1)}),test("TernarySearchTree (ConfigKeySegments) - lookup",function(){const e=new a(new m);e.set("config.foo.bar",1),e.set("config.foo",2),e.set("config.foo.flip.flop",3),t.strictEqual(e.get("foo"),void 0),t.strictEqual(e.get("config"),void 0),t.strictEqual(e.get("config.foo"),2),t.strictEqual(e.get("config.foo.bar"),1),t.strictEqual(e.get("config.foo.bar.boo"),void 0)}),test("TernarySearchTree (ConfigKeySegments) - superstr",function(){const e=new a(new m);e.set("config.foo.bar",1),e.set("config.foo",2),e.set("config.foo.flip.flop",3),e.set("boo",4);let r;const o=e.findSuperstr("config");r=o.next(),t.strictEqual(r.value[1],2),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value[1],1),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value[1],3),t.strictEqual(r.done,!1),r=o.next(),t.strictEqual(r.value,void 0),t.strictEqual(r.done,!0),t.strictEqual(e.findSuperstr("foo"),void 0),t.strictEqual(e.findSuperstr("config.foo.no"),void 0),t.strictEqual(e.findSuperstr("config.foop"),void 0)}),test("TernarySearchTree (ConfigKeySegments) - delete_superstr",function(){const e=new a(new m);e.set("config.foo.bar",1),e.set("config.foo",2),e.set("config.foo.flip.flop",3),e.set("boo",4),i(e,["boo",4],["config.foo",2],["config.foo.bar",1],["config.foo.flip.flop",3]),e.deleteSuperstr("config.fo"),i(e,["boo",4],["config.foo",2],["config.foo.bar",1],["config.foo.flip.flop",3]),e.set("config.foo.bar",1),e.set("config.foo",2),e.set("config.foo.flip.flop",3),e.set("config.boo",4),e.deleteSuperstr("config.foo"),i(e,["boo",4],["config.foo",2])}),test("TST, fill",function(){const e=a.forStrings(),r=["foo","bar","bang","bazz"];Object.freeze(r),e.fill(!0,r);for(const o of r)t.ok(e.get(o),o)})}),suite.skip("TST, perf",function(){function i(f){const u=[];function c(){let b="";const h=4+Math.floor(Math.random()*4);for(let p=0;p<h;p++)b+=(Math.random()*26+65).toString(36);return b}const g=[];for(let b=0;b<1e4;b++)g.push(c());for(let b=0;b<f;b++){let h=4+Math.floor(Math.random()*4);const p=[];for(;h>=0;h--)p.push(g[Math.floor(Math.random()*g.length)]);u.push(s.from({scheme:"file",path:p.join("/")}))}return u}let e,r=[],o=[];suiteSetup(()=>{r=i(5e4),o=[...r.slice(0,5e4/2),...i(5e4/2)],S(o)}),setup(()=>{e=a.forUris();for(const f of r)e.set(f,!0)});const n=!1;function l(f,u){test(f,function(){n&&console.profile(f);const c=new x;u(),console.log(f,c.elapsed()),n&&console.profileEnd()})}l("TST, clear",function(){e.clear()}),l("TST, insert",function(){const f=a.forUris();for(const u of r)f.set(u,!0)}),l("TST, lookup",function(){let f=0;for(const u of o)e.has(u)&&(f+=1);t.strictEqual(f,r.length/2)}),l("TST, substr",function(){let f=0;for(const u of o)e.findSubstr(u)&&(f+=1);t.strictEqual(f,r.length/2)}),l("TST, superstr",function(){for(const f of o)e.findSuperstr(f)})});
