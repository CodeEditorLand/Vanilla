import r from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as m}from"../../../../base/test/common/utils.js";import u from"../../../product/common/product.js";import"../../../product/common/productService.js";import{RemoteAuthorityResolverError as t,RemoteAuthorityResolverErrorCode as a}from"../../common/remoteAuthorityResolver.js";import{RemoteAuthorityResolverService as c}from"../../electron-sandbox/remoteAuthorityResolverService.js";suite("RemoteAuthorityResolverService",()=>{m(),test("issue #147318: RemoteAuthorityResolverError keeps the same type",async()=>{const o={_serviceBrand:void 0,...u},e=new c(o,void 0),i=e.resolveAuthority("test+x");e._setResolvedAuthorityError("test+x",new t("something",a.TemporarilyNotAvailable));try{await i,r.fail()}catch(s){r.strictEqual(t.isTemporarilyNotAvailable(s),!0)}e.dispose()})});
