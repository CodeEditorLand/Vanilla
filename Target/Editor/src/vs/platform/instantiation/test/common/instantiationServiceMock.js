import*as c from"sinon";import{toDisposable as b}from"../../../../base/common/lifecycle.js";import{SyncDescriptor as l}from"../../common/descriptors.js";import"../../common/instantiation.js";import{InstantiationService as T,Trace as d}from"../../common/instantiationService.js";import{ServiceCollection as f}from"../../common/serviceCollection.js";const I=u=>u&&"callCount"in u;class v extends T{constructor(e=new f,i=!1,n,t){super(e,i,n);this._serviceCollection=e;this._properDispose=t;this._servciesMap=new Map}_servciesMap;get(e){return super._getOrCreateServiceInstance(e,d.traceCreation(!1,v))}set(e,i){return this._serviceCollection.set(e,i)}mock(e){return this._create(e,{mock:!0})}stub(e,i,n,t){const r=typeof i!="string"?i:void 0,o={id:e,service:r},s=typeof i=="string"?i:n,p=typeof i=="string"?n:t,a=this._create(o,{stub:!0},r&&!s);if(s)if(a[s])if(a[s].hasOwnProperty("restore")&&a[s].restore(),typeof p=="function"){const S=I(p)?p:c.spy(p);return a[s]=S,S}else{const S=p?c.stub().returns(p):c.stub();return a[s]=S,S}else a[s]=p;return a}stubPromise(e,i,n,t){return n=typeof i=="string"?Promise.resolve(n):n,t=typeof i!="string"&&typeof n=="string"?Promise.resolve(t):t,this.stub(e,i,n,t)}spy(e,i){const n=c.spy();return this.stub(e,i,n),n}_create(e,i,n=!1){if(this.isServiceMock(e)){const t=this._getOrCreateService(e,i,n);return this._serviceCollection.set(e.id,t),t}return i.mock?c.mock(e):this._createStub(e)}_getOrCreateService(e,i,n){const t=this._serviceCollection.get(e.id);return!n&&t&&(i.mock&&t.sinonOptions&&t.sinonOptions.mock||i.stub&&t.sinonOptions&&t.sinonOptions.stub)?t:this._createService(e,i)}_createService(e,i){e.service=e.service?e.service:this._servciesMap.get(e.id);const n=i.mock?c.mock(e.service):this._createStub(e.service);return n.sinonOptions=i,n}_createStub(e){return typeof e=="object"?e:c.createStubInstance(e)}isServiceMock(e){return typeof e=="object"&&e.hasOwnProperty("id")}createChild(e){return new v(e,!1,this)}dispose(){c.restore(),this._properDispose&&super.dispose()}}function w(u,y){const e=[],i=new f,n=(r,o)=>{i.has(r)||(typeof o=="function"?i.set(r,new l(o)):i.set(r,o)),e.push(r)};for(const[r,o]of y)n(r,o);const t=u.add(new v(i,!0));return u.add(b(()=>{for(const r of e){const o=i.get(r);typeof o.dispose=="function"&&o.dispose()}})),t}export{v as TestInstantiationService,w as createServices};
