import g from"assert";import{DisposableStore as I}from"../../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as A}from"../../../../base/test/common/utils.js";import"../../../common/core/editOperation.js";import{Position as O}from"../../../common/core/position.js";import{Range as r}from"../../../common/core/range.js";import{FontStyle as p,MetadataConsts as w,TokenMetadata as R}from"../../../common/encodedTokenAttributes.js";import{ILanguageConfigurationService as C,LanguageConfigurationService as N}from"../../../common/languages/languageConfigurationRegistry.js";import"../../../common/model/textModel.js";import{LanguageIdCodec as b}from"../../../common/services/languagesRegistry.js";import{LineTokens as k}from"../../../common/tokens/lineTokens.js";import{SparseMultilineTokens as u}from"../../../common/tokens/sparseMultilineTokens.js";import{SparseTokensStore as T}from"../../../common/tokens/sparseTokensStore.js";import{createModelServices as F,createTextModel as E,instantiateTextModel as M}from"../testTextModel.js";suite("TokensStore",()=>{A();const x=5;function h(e){const t=[],n=[];let s=1;for(let o=0;o<e.length;o++){const l=e[o];let a=0,i="";for(;;){const c=l.indexOf("|",a);if(c===-1)break;const m=l.indexOf("|",c+1);if(m===-1)break;if(c+1===m){i+=l.substring(a,m+1),a=m+1;continue}i+=l.substring(a,c);const f=i.length,d=m-c-1,U=x<<w.FOREGROUND_OFFSET|w.SEMANTIC_USE_FOREGROUND;n.length===0&&(s=o+1),n.push(o+1-s,f,f+d,U),i+=l.substr(c+1,d),a=m+1}i+=l.substring(a),t.push(i)}return{text:t.join(`
`),tokens:u.create(s,new Uint32Array(n))}}function y(e){const t=[];for(let n=1;n<=e.getLineCount();n++){const s=e.tokenization.getLineTokens(n),o=e.getLineContent(n);let l="";for(let a=0;a<s.getCount();a++){const i=s.getStartOffset(a),c=s.getEndOffset(a),m=s.getMetadata(a),f=R.getForeground(m),d=o.substring(i,c);f===x?l+=`|${d}|`:l+=d}t.push(l)}return t}function S(e,t,n){const s=h(e),o=E(s.text);o.tokenization.setSemanticTokens([s.tokens],!0),o.applyEdits(t);const l=y(o);g.deepStrictEqual(l,n),o.dispose()}test("issue #86303 - color shifting between different tokens",()=>{S(["import { |URI| } from 'vs/base/common/uri';","const foo = |URI|.parse('hey');"],[{range:new r(2,9,2,10),text:""}],["import { |URI| } from 'vs/base/common/uri';","const fo = |URI|.parse('hey');"])}),test("deleting a newline",()=>{S(["import { |URI| } from 'vs/base/common/uri';","const foo = |URI|.parse('hey');"],[{range:new r(1,42,2,1),text:""}],["import { |URI| } from 'vs/base/common/uri';const foo = |URI|.parse('hey');"])}),test("inserting a newline",()=>{S(["import { |URI| } from 'vs/base/common/uri';const foo = |URI|.parse('hey');"],[{range:new r(1,42,1,42),text:`
`}],["import { |URI| } from 'vs/base/common/uri';","const foo = |URI|.parse('hey');"])}),test("deleting a newline 2",()=>{S(["import { ","    |URI| } from 'vs/base/common/uri';const foo = |URI|.parse('hey');"],[{range:new r(1,10,2,5),text:""}],["import { |URI| } from 'vs/base/common/uri';const foo = |URI|.parse('hey');"])}),test("issue #179268: a complex edit",()=>{S(["|export| |'interior_material_selector.dart'|;","|export| |'mileage_selector.dart'|;","|export| |'owners_selector.dart'|;","|export| |'price_selector.dart'|;","|export| |'seat_count_selector.dart'|;","|export| |'year_selector.dart'|;","|export| |'winter_options_selector.dart'|;|export| |'camera_selector.dart'|;"],[{range:new r(1,9,1,9),text:`camera_selector.dart';
export '`},{range:new r(6,9,7,9),text:""},{range:new r(7,39,7,39),text:`
`},{range:new r(7,47,7,48),text:"ye"},{range:new r(7,49,7,51),text:""},{range:new r(7,52,7,53),text:""}],["|export| |'|camera_selector.dart';","export 'interior_material_selector.dart';","|export| |'mileage_selector.dart'|;","|export| |'owners_selector.dart'|;","|export| |'price_selector.dart'|;","|export| |'seat_count_selector.dart'|;","|export| |'||winter_options_selector.dart'|;","|export| |'year_selector.dart'|;"])}),test("issue #91936: Semantic token color highlighting fails on line with selected text",()=>{const e=E("                    else if ($s = 08) then '\\b'");e.tokenization.setSemanticTokens([u.create(1,new Uint32Array([0,20,24,491536,0,25,27,491536,0,28,29,32784,0,29,31,524304,0,32,33,32784,0,34,36,196624,0,36,37,32784,0,38,42,491536,0,43,47,360464]))],!0);const t=e.tokenization.getLineTokens(1),n=[];for(let s=0,o=t.getCount();s<o;s++)n.push(t.getEndOffset(s),t.getMetadata(s));g.deepStrictEqual(n,[20,33588225,24,34046977,25,33588225,27,34046977,28,33588225,29,33588225,31,34079745,32,33588225,33,33588225,34,33588225,36,33752065,37,33588225,38,33588225,42,34046977,43,33588225,47,33915905]),e.dispose()}),test('issue #147944: Language id "vs.editor.nullLanguage" is not configured nor known',()=>{const e=new I,t=F(e,[[C,N]]),n=e.add(M(t,`--[[

]]`));n.tokenization.setSemanticTokens([u.create(1,new Uint32Array([0,2,4,131088,1,0,0,131088,2,0,2,131088]))],!0),g.strictEqual(n.getWordAtPosition(new O(2,1)),null),e.dispose()}),test("partial tokens 1",()=>{const e=new b,t=new T(e);t.setPartial(new r(1,1,31,2),[u.create(5,new Uint32Array([0,5,10,1,5,5,10,2,10,5,10,3,15,5,10,4,20,5,10,5,25,5,10,6]))]),t.setPartial(new r(18,1,42,1),[u.create(20,new Uint32Array([0,5,10,4,5,5,10,5,10,5,10,6,15,5,10,7,20,5,10,8]))]),t.setPartial(new r(1,1,31,2),[u.create(5,new Uint32Array([0,5,10,1,5,5,10,2,10,5,10,3,15,5,10,4,20,5,10,5,25,5,10,6]))]);const n=t.addSparseTokens(10,new k(new Uint32Array([12,1]),"enum Enum1 {",e));g.strictEqual(n.getCount(),3)}),test("partial tokens 2",()=>{const e=new b,t=new T(e);t.setPartial(new r(1,1,31,2),[u.create(5,new Uint32Array([0,5,10,1,5,5,10,2,10,5,10,3,15,5,10,4,20,5,10,5,25,5,10,6]))]),t.setPartial(new r(6,1,36,2),[u.create(10,new Uint32Array([0,5,10,2,5,5,10,3,10,5,10,4,15,5,10,5,20,5,10,6]))]),t.setPartial(new r(17,1,42,1),[u.create(20,new Uint32Array([0,5,10,4,5,5,10,5,10,5,10,6,15,5,10,7,20,5,10,8]))]);const n=t.addSparseTokens(20,new k(new Uint32Array([12,1]),"enum Enum1 {",e));g.strictEqual(n.getCount(),3)}),test("partial tokens 3",()=>{const e=new b,t=new T(e);t.setPartial(new r(1,1,31,2),[u.create(5,new Uint32Array([0,5,10,1,5,5,10,2,10,5,10,3,15,5,10,4,20,5,10,5,25,5,10,6]))]),t.setPartial(new r(11,1,16,2),[u.create(10,new Uint32Array([0,5,10,3,5,5,10,4]))]);const n=t.addSparseTokens(5,new k(new Uint32Array([12,1]),"enum Enum1 {",e));g.strictEqual(n.getCount(),3)}),test("issue #94133: Semantic colors stick around when using (only) range provider",()=>{const e=new b,t=new T(e);t.setPartial(new r(1,1,1,20),[u.create(1,new Uint32Array([0,9,11,1]))]),t.setPartial(new r(1,1,1,20),[]);const n=t.addSparseTokens(1,new k(new Uint32Array([12,1]),"enum Enum1 {",e));g.strictEqual(n.getCount(),1)}),test("bug",()=>{function e(o){o=o.replace(/^\[\(/,""),o=o.replace(/\)\]$/,"");const l=o.split("),("),a=[];let i=0;for(const c of l){const m=c.split(","),f=m[1].split("-"),d=parseInt(m[0],10),U=parseInt(f[0],10),_=parseInt(f[1],10);i===0&&(i=d),a.push(d-i,U,_,(d+U)%13)}return u.create(i,new Uint32Array(a))}const t=new b,n=new T(t);n.setPartial(new r(36446,1,36475,115),[e("[(36448,24-29),(36448,33-46),(36448,47-54),(36450,25-35),(36450,36-50),(36451,28-33),(36451,36-49),(36451,50-57),(36452,35-53),(36452,54-62),(36454,33-38),(36454,41-54),(36454,55-60),(36455,35-53),(36455,54-62),(36457,33-44),(36457,45-49),(36457,50-56),(36457,62-83),(36457,84-88),(36458,35-53),(36458,54-62),(36460,33-37),(36460,38-42),(36460,47-57),(36460,58-67),(36461,35-53),(36461,54-62),(36463,34-38),(36463,39-45),(36463,46-51),(36463,54-63),(36463,64-71),(36463,76-80),(36463,81-87),(36463,88-92),(36463,97-107),(36463,108-119),(36464,35-53),(36464,54-62),(36466,33-71),(36466,72-76),(36467,35-53),(36467,54-62),(36469,24-29),(36469,33-46),(36469,47-54),(36470,24-35),(36470,38-46),(36473,25-35),(36473,36-51),(36474,28-33),(36474,36-49),(36474,50-58),(36475,35-53),(36475,54-62)]")]),n.setPartial(new r(36436,1,36464,142),[e("[(36437,33-37),(36437,38-42),(36437,47-57),(36437,58-67),(36438,35-53),(36438,54-62),(36440,24-29),(36440,33-46),(36440,47-53),(36442,25-35),(36442,36-50),(36443,30-39),(36443,42-46),(36443,47-53),(36443,54-58),(36443,63-73),(36443,74-84),(36443,87-91),(36443,92-98),(36443,101-105),(36443,106-112),(36443,113-119),(36444,28-37),(36444,38-42),(36444,47-57),(36444,58-75),(36444,80-95),(36444,96-105),(36445,35-53),(36445,54-62),(36448,24-29),(36448,33-46),(36448,47-54),(36450,25-35),(36450,36-50),(36451,28-33),(36451,36-49),(36451,50-57),(36452,35-53),(36452,54-62),(36454,33-38),(36454,41-54),(36454,55-60),(36455,35-53),(36455,54-62),(36457,33-44),(36457,45-49),(36457,50-56),(36457,62-83),(36457,84-88),(36458,35-53),(36458,54-62),(36460,33-37),(36460,38-42),(36460,47-57),(36460,58-67),(36461,35-53),(36461,54-62),(36463,34-38),(36463,39-45),(36463,46-51),(36463,54-63),(36463,64-71),(36463,76-80),(36463,81-87),(36463,88-92),(36463,97-107),(36463,108-119),(36464,35-53),(36464,54-62)]")]),n.setPartial(new r(36457,1,36485,140),[e("[(36457,33-44),(36457,45-49),(36457,50-56),(36457,62-83),(36457,84-88),(36458,35-53),(36458,54-62),(36460,33-37),(36460,38-42),(36460,47-57),(36460,58-67),(36461,35-53),(36461,54-62),(36463,34-38),(36463,39-45),(36463,46-51),(36463,54-63),(36463,64-71),(36463,76-80),(36463,81-87),(36463,88-92),(36463,97-107),(36463,108-119),(36464,35-53),(36464,54-62),(36466,33-71),(36466,72-76),(36467,35-53),(36467,54-62),(36469,24-29),(36469,33-46),(36469,47-54),(36470,24-35),(36470,38-46),(36473,25-35),(36473,36-51),(36474,28-33),(36474,36-49),(36474,50-58),(36475,35-53),(36475,54-62),(36477,28-32),(36477,33-37),(36477,42-52),(36477,53-69),(36478,32-36),(36478,37-41),(36478,46-56),(36478,57-74),(36479,32-36),(36479,37-41),(36479,46-56),(36479,57-76),(36480,32-36),(36480,37-41),(36480,46-56),(36480,57-68),(36481,32-36),(36481,37-41),(36481,46-56),(36481,57-68),(36482,39-57),(36482,58-66),(36484,34-38),(36484,39-45),(36484,46-50),(36484,55-65),(36484,66-82),(36484,86-97),(36484,98-102),(36484,103-109),(36484,111-124),(36484,125-133),(36485,39-57),(36485,58-66)]")]),n.setPartial(new r(36441,1,36469,56),[e("[(36442,25-35),(36442,36-50),(36443,30-39),(36443,42-46),(36443,47-53),(36443,54-58),(36443,63-73),(36443,74-84),(36443,87-91),(36443,92-98),(36443,101-105),(36443,106-112),(36443,113-119),(36444,28-37),(36444,38-42),(36444,47-57),(36444,58-75),(36444,80-95),(36444,96-105),(36445,35-53),(36445,54-62),(36448,24-29),(36448,33-46),(36448,47-54),(36450,25-35),(36450,36-50),(36451,28-33),(36451,36-49),(36451,50-57),(36452,35-53),(36452,54-62),(36454,33-38),(36454,41-54),(36454,55-60),(36455,35-53),(36455,54-62),(36457,33-44),(36457,45-49),(36457,50-56),(36457,62-83),(36457,84-88),(36458,35-53),(36458,54-62),(36460,33-37),(36460,38-42),(36460,47-57),(36460,58-67),(36461,35-53),(36461,54-62),(36463,34-38),(36463,39-45),(36463,46-51),(36463,54-63),(36463,64-71),(36463,76-80),(36463,81-87),(36463,88-92),(36463,97-107),(36463,108-119),(36464,35-53),(36464,54-62),(36466,33-71),(36466,72-76),(36467,35-53),(36467,54-62),(36469,24-29),(36469,33-46),(36469,47-54),(36470,24-35)]")]);const s=n.addSparseTokens(36451,new k(new Uint32Array([60,1]),"                        if (flags & ModifierFlags.Ambient) {",t));g.strictEqual(s.getCount(),7)}),test("issue #95949: Identifiers are colored in bold when targetting keywords",()=>{function e(a,i,c){return(c<<w.LANGUAGEID_OFFSET|i<<w.FONT_STYLE_OFFSET|a<<w.FOREGROUND_OFFSET)>>>0}function t(a){const i=[];for(let c=0;c<a.getCount();c++)i.push(a.getEndOffset(c)),i.push(a.getMetadata(c));return i}const n=new b,s=new T(n);s.set([u.create(1,new Uint32Array([0,6,11,1<<w.FOREGROUND_OFFSET|w.SEMANTIC_USE_FOREGROUND]))],!0);const o=s.addSparseTokens(1,new k(new Uint32Array([5,e(5,p.Bold,53),14,e(1,p.None,53),17,e(6,p.None,53),18,e(1,p.None,53)]),"const hello = 123;",n)),l=t(o);g.deepStrictEqual(l,[5,e(5,p.Bold,53),6,e(1,p.None,53),11,e(1,p.None,53),14,e(1,p.None,53),17,e(6,p.None,53),18,e(1,p.None,53)])})});
