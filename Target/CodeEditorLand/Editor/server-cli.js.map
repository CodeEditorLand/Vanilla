{
  "version": 3,
  "sources": ["../../../Dependency/CodeEditorLand/Editor/Source/server-cli.js"],
  "sourcesContent": ["// ESM-comment-begin\n// // Keep bootstrap-amd.js from redefining 'fs'.\n// delete process.env['ELECTRON_RUN_AS_NODE'];\n// const path = require('path');\n// const bootstrapNode = require('./bootstrap-node');\n// const bootstrapAmd = require('./bootstrap-amd');\n// const { resolveNLSConfiguration } = require('./vs/base/node/nls');\n// const product = require('./bootstrap-meta').product;\n// ESM-comment-end\n// ESM-uncomment-begin\nimport \"./bootstrap-server.js\"; // this MUST come before other imports as it changes global state\nimport * as path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport * as bootstrapAmd from \"./bootstrap-amd.js\";\nimport { product } from \"./bootstrap-meta.js\";\nimport * as bootstrapNode from \"./bootstrap-node.js\";\nimport { resolveNLSConfiguration } from \"./vs/base/node/nls.js\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n// ESM-uncomment-end\n\nasync function start() {\n\t// NLS\n\tconst nlsConfiguration = await resolveNLSConfiguration({\n\t\tuserLocale: \"en\",\n\t\tosLocale: \"en\",\n\t\tcommit: product.commit,\n\t\tuserDataPath: \"\",\n\t\tnlsMetadataPath: __dirname,\n\t});\n\tprocess.env[\"VSCODE_NLS_CONFIG\"] = JSON.stringify(nlsConfiguration); // required for `bootstrap-amd` to pick up NLS messages\n\n\tif (process.env[\"VSCODE_DEV\"]) {\n\t\t// When running out of sources, we need to load node modules from remote/node_modules,\n\t\t// which are compiled against nodejs, not electron\n\t\tprocess.env[\"VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH\"] =\n\t\t\tprocess.env[\"VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH\"] ||\n\t\t\tpath.join(__dirname, \"..\", \"remote\", \"node_modules\");\n\t\tbootstrapNode.devInjectNodeModuleLookupPath(\n\t\t\tprocess.env[\"VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH\"],\n\t\t);\n\t} else {\n\t\tdelete process.env[\"VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH\"];\n\t}\n\tbootstrapAmd.load(\"vs/server/node/server.cli\");\n}\n\nstart();\n"],
  "mappings": ";;AAUA,OAAO;AACP,YAAY,UAAU;AACtB,SAAS,qBAAqB;AAC9B,YAAY,kBAAkB;AAC9B,SAAS,eAAe;AACxB,YAAY,mBAAmB;AAC/B,SAAS,+BAA+B;AAExC,MAAM,YAAY,KAAK,QAAQ,cAAc,YAAY,GAAG,CAAC;AAG7D,eAAe,QAAQ;AAEtB,QAAM,mBAAmB,MAAM,wBAAwB;AAAA,IACtD,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,QAAQ,QAAQ;AAAA,IAChB,cAAc;AAAA,IACd,iBAAiB;AAAA,EAClB,CAAC;AACD,UAAQ,IAAI,mBAAmB,IAAI,KAAK,UAAU,gBAAgB;AAElE,MAAI,QAAQ,IAAI,YAAY,GAAG;AAG9B,YAAQ,IAAI,2CAA2C,IACtD,QAAQ,IAAI,2CAA2C,KACvD,KAAK,KAAK,WAAW,MAAM,UAAU,cAAc;AACpD,kBAAc;AAAA,MACb,QAAQ,IAAI,2CAA2C;AAAA,IACxD;AAAA,EACD,OAAO;AACN,WAAO,QAAQ,IAAI,2CAA2C;AAAA,EAC/D;AACA,eAAa,KAAK,2BAA2B;AAC9C;AAxBe;AA0Bf,MAAM;",
  "names": []
}
