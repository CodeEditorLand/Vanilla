import t from"assert";import{EditorActivation as A}from"../../../../../platform/editor/common/editor.js";import{URI as a}from"../../../../../base/common/uri.js";import{Event as H}from"../../../../../base/common/event.js";import{DEFAULT_EDITOR_ASSOCIATION as P,EditorCloseContext as _,EditorsOrder as h,isEditorInputWithOptions as X,SideBySideEditor as C,isEditorInput as rt,EditorInputCapabilities as B}from"../../../../common/editor.js";import{workbenchInstantiationService as M,TestServiceAccessor as it,registerTestEditor as ot,TestFileEditorInput as S,registerTestResourceEditor as st,registerTestSideBySideEditor as at,createEditorPart as nt,registerTestFileEditor as O,TestTextFileEditor as ut,TestSingletonFileEditorInput as W,workbenchTeardown as z}from"../../../../test/browser/workbenchTestServices.js";import{EditorService as ct}from"../../browser/editorService.js";import{IEditorGroupsService as dt,GroupDirection as R,GroupsArrangement as j}from"../../common/editorGroupsService.js";import"../../../../browser/parts/editor/editorPart.js";import{ACTIVE_GROUP as pt,IEditorService as lt,SIDE_GROUP as k}from"../../common/editorService.js";import{SyncDescriptor as J}from"../../../../../platform/instantiation/common/descriptors.js";import{FileEditorInput as N}from"../../../../contrib/files/browser/editors/fileEditorInput.js";import{timeout as Et}from"../../../../../base/common/async.js";import{FileOperationEvent as Z,FileOperation as tt}from"../../../../../platform/files/common/files.js";import{DisposableStore as vt}from"../../../../../base/common/lifecycle.js";import{MockScopableContextKeyService as qt}from"../../../../../platform/keybinding/test/common/mockKeybindingService.js";import{RegisteredEditorPriority as T}from"../../common/editorResolverService.js";import{WorkspaceTrustUriResponse as V}from"../../../../../platform/workspace/common/workspaceTrust.js";import{SideBySideEditorInput as x}from"../../../../common/editor/sideBySideEditorInput.js";import"../../../../common/editor/editorInput.js";import{ErrorPlaceholderEditor as et}from"../../../../browser/parts/editor/editorPlaceholder.js";import{TestConfigurationService as ft}from"../../../../../platform/configuration/test/common/testConfigurationService.js";import{IConfigurationService as gt}from"../../../../../platform/configuration/common/configuration.js";import{PLAINTEXT_LANGUAGE_ID as wt}from"../../../../../editor/common/languages/modesRegistry.js";import{ensureNoDisposablesAreLeakedInTestSuite as yt}from"../../../../../base/test/common/utils.js";import"../../common/editorPaneService.js";suite("EditorService",()=>{const D="MyTestEditorForEditorService",p="testEditorInputForEditorService",m=new vt;let F;setup(()=>{m.add(ot(D,[new J(S),new J(W)],p)),m.add(st()),m.add(at())}),teardown(async()=>{F&&(await z(F),F=void 0),m.clear()});async function I(e=M(void 0,m)){const i=await nt(e,m);e.stub(dt,i);const r=m.add(e.createInstance(ct,void 0));return e.stub(lt,r),F=e,[i,r,e.createInstance(it)]}function l(e,i){return m.add(new S(e,i))}test("openEditor() - basics",async()=>{const[,e,i]=await I();await Y(e,i.editorPaneService)}),test("openEditor() - basics (scoped)",async()=>{const[e,i,r]=await I(),o=i.createScoped("main",m);await e.whenReady,await Y(o,r.editorPaneService)});async function Y(e,i){let r=l(a.parse("my://resource-basics"),p),o=l(a.parse("my://resource2-basics"),p),s=0;m.add(e.onDidActiveEditorChange(()=>{s++}));let n=0;m.add(e.onDidVisibleEditorsChange(()=>{n++}));let d=0;m.add(e.onWillOpenEditor(()=>{d++}));let q=0;m.add(e.onDidCloseEditor(()=>{q++}));let E=0;m.add(i.onWillInstantiateEditorPane(u=>{u.typeId===D&&E++}));let v=await e.openEditor(r,{pinned:!0});t.strictEqual(v?.getId(),D),t.strictEqual(v,e.activeEditorPane),t.strictEqual(1,e.count),t.strictEqual(r,e.getEditors(h.MOST_RECENTLY_ACTIVE)[0].editor),t.strictEqual(r,e.getEditors(h.SEQUENTIAL)[0].editor),t.strictEqual(r,e.activeEditor),t.strictEqual(e.visibleEditorPanes.length,1),t.strictEqual(e.visibleEditorPanes[0],v),t.ok(!e.activeTextEditorControl),t.ok(!e.activeTextEditorLanguageId),t.strictEqual(e.visibleTextEditorControls.length,0),t.strictEqual(e.isOpened(r),!0),t.strictEqual(e.isOpened({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(e.isOpened({resource:r.resource,typeId:r.typeId,editorId:"unknownTypeId"}),!1),t.strictEqual(e.isOpened({resource:r.resource,typeId:"unknownTypeId",editorId:r.editorId}),!1),t.strictEqual(e.isOpened({resource:r.resource,typeId:"unknownTypeId",editorId:"unknownTypeId"}),!1),t.strictEqual(e.isVisible(r),!0),t.strictEqual(e.isVisible(o),!1),t.strictEqual(d,1),t.strictEqual(s,1),t.strictEqual(n,1),t.ok(i.didInstantiateEditorPane(D)),t.strictEqual(E,1),await v?.group.closeEditor(r),t.strictEqual(0,e.count),t.strictEqual(0,e.getEditors(h.MOST_RECENTLY_ACTIVE).length),t.strictEqual(0,e.getEditors(h.SEQUENTIAL).length),t.strictEqual(q,1),t.strictEqual(s,2),t.strictEqual(n,2),t.ok(r.gotDisposed),await e.openEditor(r,{pinned:!0}),t.strictEqual(0,e.count),r=l(a.parse("my://resource-basics"),p),o=l(a.parse("my://resource2-basics"),p),await e.openEditor(r,{pinned:!0}),v=await e.openEditor(o,{pinned:!0}),t.strictEqual(2,e.count),t.strictEqual(o,e.getEditors(h.MOST_RECENTLY_ACTIVE)[0].editor),t.strictEqual(r,e.getEditors(h.MOST_RECENTLY_ACTIVE)[1].editor),t.strictEqual(r,e.getEditors(h.SEQUENTIAL)[0].editor),t.strictEqual(o,e.getEditors(h.SEQUENTIAL)[1].editor),t.strictEqual(e.visibleEditorPanes.length,1),t.strictEqual(e.isOpened(r),!0),t.strictEqual(e.isOpened({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(e.isOpened(o),!0),t.strictEqual(e.isOpened({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0),t.strictEqual(s,4),t.strictEqual(d,3),t.strictEqual(n,4);const g=l(a.parse("my://resource3-basics"),p);await e.openEditor(g,{sticky:!0}),t.strictEqual(3,e.count);const w=e.getEditors(h.SEQUENTIAL);t.strictEqual(w.length,3),t.strictEqual(g,w[0].editor),t.strictEqual(r,w[1].editor),t.strictEqual(o,w[2].editor);const f=e.getEditors(h.SEQUENTIAL,{excludeSticky:!0});t.strictEqual(f.length,2),t.strictEqual(r,f[0].editor),t.strictEqual(o,f[1].editor);const c=e.getEditors(h.MOST_RECENTLY_ACTIVE,{excludeSticky:!0});t.strictEqual(c.length,2),t.strictEqual(r,f[0].editor),t.strictEqual(o,f[1].editor)}test("openEditor() - multiple calls are cancelled and indicated as such",async()=>{const[,e]=await I(),i=l(a.parse("my://resource-basics"),p),r=l(a.parse("my://resource2-basics"),p);let o=0;const s=e.onDidActiveEditorChange(()=>{o++});let n=0;const d=e.onDidVisibleEditorsChange(()=>{n++}),q=e.openEditor(i,{pinned:!0}),E=e.openEditor(r,{pinned:!0}),v=await q;t.strictEqual(v,void 0);const g=await E;t.strictEqual(g?.input,r),t.strictEqual(o,1),t.strictEqual(n,1),s.dispose(),d.dispose()}),test("openEditor() - same input does not cancel previous one - https://github.com/microsoft/vscode/issues/136684",async()=>{const[,e]=await I();let i=l(a.parse("my://resource-basics"),p),r=e.openEditor(i,{pinned:!0}),o=e.openEditor(i,{pinned:!0}),s=await r;t.strictEqual(s?.input,i);let n=await o;t.strictEqual(n?.input,i),t.ok(n.group),await n.group.closeAllEditors(),i=l(a.parse("my://resource-basics"),p);const d=l(a.parse("my://resource-basics"),p);r=e.openEditor(i,{pinned:!0}),o=e.openEditor(d,{pinned:!0}),s=await r,t.strictEqual(s?.input,i),n=await o,t.strictEqual(n?.input,i)}),test("openEditor() - singleton typed editors reveal instead of split",async()=>{const[e,i]=await I(),r=m.add(new W(a.parse("my://resource-basics1"),p)),o=m.add(new W(a.parse("my://resource-basics2"),p)),s=(await i.openEditor(r,{pinned:!0}))?.group,n=(await i.openEditor(o,{pinned:!0},k))?.group;t.strictEqual(e.activeGroup,n),await i.openEditor(r,{pinned:!0}),t.strictEqual(e.activeGroup,s)}),test("openEditor() - locked groups",async()=>{m.add(O());const[e,i,r]=await I();m.add(r.editorResolverService.registerEditor("*.editor-service-locked-group-tests",{id:p,label:"Label",priority:T.exclusive},{},{createEditorInput:L=>({editor:l(L.resource,p)})}));const o={resource:a.parse("file://resource-basics.editor-service-locked-group-tests"),options:{pinned:!0}},s={resource:a.parse("file://resource2-basics.editor-service-locked-group-tests"),options:{pinned:!0}},n={resource:a.parse("file://resource3-basics.editor-service-locked-group-tests"),options:{pinned:!0}},d={resource:a.parse("file://resource4-basics.editor-service-locked-group-tests"),options:{pinned:!0}},q={resource:a.parse("file://resource5-basics.editor-service-locked-group-tests"),options:{pinned:!0}},E={resource:a.parse("file://resource6-basics.editor-service-locked-group-tests"),options:{pinned:!0}},v={resource:a.parse("file://resource7-basics.editor-service-locked-group-tests"),options:{pinned:!0}},g=await i.openEditor(o,{pinned:!0}),w=await i.openEditor(s,{pinned:!0},k),f=g?.group;t.strictEqual(f?.count,1);const c=w?.group;t.strictEqual(c?.count,1),c.lock(!0),e.activateGroup(c.id),await i.openEditor(n,{pinned:!0}),t.strictEqual(f.count,2),t.strictEqual(f.activeEditor?.resource?.toString(),n.resource.toString()),t.strictEqual(c.count,1),await i.openEditor(n,{pinned:!0},c.id),t.strictEqual(f.count,2),t.strictEqual(c.count,2),t.strictEqual(c.activeEditor?.resource?.toString(),n.resource.toString()),await i.openEditor(s,{pinned:!0},c),await i.openEditor(s,{pinned:!0},pt),t.strictEqual(f.count,2),t.strictEqual(c.count,2),t.strictEqual(c.activeEditor?.resource?.toString(),s.resource.toString()),e.activateGroup(f.id);const u=await i.openEditor(d,{pinned:!0},k);t.strictEqual(e.count,3);const y=u?.group;t.strictEqual(y?.count,1),await i.openEditor(n,{pinned:!0},c),e.activateGroup(f.id),await i.openEditor(n,{pinned:!0},k),t.strictEqual(e.count,3),f.lock(!0),c.lock(!0),y.lock(!0),e.activateGroup(f.id);const b=(await i.openEditor(q,{pinned:!0}))?.group;t.strictEqual(b?.count,1),t.strictEqual(b.activeEditor?.resource?.toString(),q.resource.toString()),t.strictEqual(e.count,4),f.lock(!1),c.lock(!1),y.lock(!1),b.lock(!1),e.activateGroup(y.id),e.activateGroup(c.id),e.activateGroup(b.id),b.lock(!0),c.lock(!0),await i.openEditor(E,{pinned:!0}),t.strictEqual(e.count,4),t.strictEqual(e.activeGroup,y),t.strictEqual(y.activeEditor?.resource?.toString(),E.resource.toString()),f.lock(!0),c.lock(!0),y.lock(!0),b.lock(!0),e.activateGroup(f.id),await i.openEditor(E,{pinned:!0}),t.strictEqual(e.count,4),t.strictEqual(e.activeGroup,y),t.strictEqual(y.activeEditor?.resource?.toString(),E.resource.toString()),t.strictEqual(e.activeGroup,y),t.strictEqual(y.activeEditor?.resource?.toString(),E.resource.toString()),e.activateGroup(f.id),await i.openEditor(E,{pinned:!0}),t.strictEqual(e.count,4),t.strictEqual(e.activeGroup,y),t.strictEqual(y.activeEditor?.resource?.toString(),E.resource.toString()),await i.openEditor(v,{pinned:!0},y),await i.openEditor(E,{pinned:!0}),t.strictEqual(e.count,4),t.strictEqual(e.activeGroup,y),t.strictEqual(y.activeEditor?.resource?.toString(),E.resource.toString())}),test("locked groups - workbench.editor.revealIfOpen",async()=>{const e=M(void 0,m),i=new ft;await i.setUserConfiguration("workbench",{editor:{revealIfOpen:!0}}),e.stub(gt,i),m.add(O());const[r,o,s]=await I(e);m.add(s.editorResolverService.registerEditor("*.editor-service-locked-group-tests",{id:p,label:"Label",priority:T.exclusive},{},{createEditorInput:w=>({editor:l(w.resource,p)})}));const n=r.activeGroup,d=r.addGroup(n,R.RIGHT);r.activateGroup(n);const q={resource:a.parse("file://resource-basics.editor-service-locked-group-tests"),options:{pinned:!0}},E={resource:a.parse("file://resource2-basics.editor-service-locked-group-tests"),options:{pinned:!0}},v={resource:a.parse("file://resource3-basics.editor-service-locked-group-tests"),options:{pinned:!0}},g={resource:a.parse("file://resource4-basics.editor-service-locked-group-tests"),options:{pinned:!0}};await o.openEditor(q,n.id),await o.openEditor(E,n.id),t.strictEqual(r.activeGroup.id,n.id),await o.openEditor(v,d.id),await o.openEditor(g,d.id),t.strictEqual(r.activeGroup.id,d.id),n.lock(!0),d.lock(!0),await o.openEditor(q),t.strictEqual(r.activeGroup.id,n.id),t.strictEqual(r.activeGroup.activeEditor?.resource?.toString(),q.resource.toString()),await o.openEditor(v),t.strictEqual(r.activeGroup.id,d.id),t.strictEqual(r.activeGroup.activeEditor?.resource?.toString(),v.resource.toString()),t.strictEqual(r.groups.length,2)}),test("locked groups - revealIfVisible",async()=>{m.add(O());const[e,i,r]=await I();m.add(r.editorResolverService.registerEditor("*.editor-service-locked-group-tests",{id:p,label:"Label",priority:T.exclusive},{},{createEditorInput:v=>({editor:l(v.resource,p)})}));const o=e.activeGroup,s=e.addGroup(o,R.RIGHT);e.activateGroup(o);const n={resource:a.parse("file://resource-basics.editor-service-locked-group-tests"),options:{pinned:!0}},d={resource:a.parse("file://resource2-basics.editor-service-locked-group-tests"),options:{pinned:!0}},q={resource:a.parse("file://resource3-basics.editor-service-locked-group-tests"),options:{pinned:!0}},E={resource:a.parse("file://resource4-basics.editor-service-locked-group-tests"),options:{pinned:!0}};await i.openEditor(n,o.id),await i.openEditor(d,o.id),t.strictEqual(e.activeGroup.id,o.id),await i.openEditor(q,s.id),await i.openEditor(E,s.id),t.strictEqual(e.activeGroup.id,s.id),o.lock(!0),s.lock(!0),await i.openEditor({...d,options:{...d.options,revealIfVisible:!0}}),t.strictEqual(e.activeGroup.id,o.id),t.strictEqual(e.activeGroup.activeEditor?.resource?.toString(),d.resource.toString()),await i.openEditor({...E,options:{...E.options,revealIfVisible:!0}}),t.strictEqual(e.activeGroup.id,s.id),t.strictEqual(e.activeGroup.activeEditor?.resource?.toString(),E.resource.toString()),t.strictEqual(e.groups.length,2)}),test("locked groups - revealIfOpened",async()=>{m.add(O());const[e,i,r]=await I();m.add(r.editorResolverService.registerEditor("*.editor-service-locked-group-tests",{id:p,label:"Label",priority:T.exclusive},{},{createEditorInput:v=>({editor:l(v.resource,p)})}));const o=e.activeGroup,s=e.addGroup(o,R.RIGHT);e.activateGroup(o);const n={resource:a.parse("file://resource-basics.editor-service-locked-group-tests"),options:{pinned:!0}},d={resource:a.parse("file://resource2-basics.editor-service-locked-group-tests"),options:{pinned:!0}},q={resource:a.parse("file://resource3-basics.editor-service-locked-group-tests"),options:{pinned:!0}},E={resource:a.parse("file://resource4-basics.editor-service-locked-group-tests"),options:{pinned:!0}};await i.openEditor(n,o.id),await i.openEditor(d,o.id),t.strictEqual(e.activeGroup.id,o.id),await i.openEditor(q,s.id),await i.openEditor(E,s.id),t.strictEqual(e.activeGroup.id,s.id),o.lock(!0),s.lock(!0),await i.openEditor({...n,options:{...n.options,revealIfOpened:!0}}),t.strictEqual(e.activeGroup.id,o.id),t.strictEqual(e.activeGroup.activeEditor?.resource?.toString(),n.resource.toString()),await i.openEditor({...q,options:{...q.options,revealIfOpened:!0}}),t.strictEqual(e.activeGroup.id,s.id),t.strictEqual(e.activeGroup.activeEditor?.resource?.toString(),q.resource.toString()),t.strictEqual(e.groups.length,2)}),test("openEditor() - untyped, typed",()=>$(!1)),test("openEditors() - untyped, typed",()=>$(!0));async function $(e){m.add(O());const[i,r,o]=await I();let s=i.activeGroup,n=0,d=0,q=0,E,v,g;m.add(o.editorResolverService.registerEditor("*.editor-service-override-tests",{id:p,label:"Label",priority:T.exclusive},{},{createEditorInput:c=>(n++,E=c,{editor:l(c.resource,p)}),createUntitledEditorInput:c=>(d++,v=c,{editor:l(c.resource??a.parse(`untitled://my-untitled-editor-${d}`),p)}),createDiffEditorInput:c=>(q++,g=c,{editor:l(a.file(`diff-editor-${q}`),p)})}));async function w(){n=0,d=0,q=0,E=void 0,v=void 0,g=void 0,await z(o.instantiationService),s=i.activeGroup}async function f(c,u){return e?(!X(c)&&rt(c)&&(c={editor:c,options:{}}),(await r.openEditors([c],u))[0]):X(c)?r.openEditor(c.editor,c.options,u):r.openEditor(c,u)}{{const c={resource:a.file("file.editor-service-override-tests")},u=await f(c);let y=u?.input;t.strictEqual(u?.group,s),t.ok(y instanceof S),t.strictEqual(y.resource.toString(),c.resource.toString()),t.strictEqual(n,1),t.strictEqual(d,0),t.strictEqual(q,0),t.strictEqual(E,c),t.ok(!v),t.ok(!g),await f(c),t.strictEqual(u?.group.activeEditor,y);const G={resource:a.file("file-replaced.editor-service-override-tests")};await r.replaceEditors([{editor:y,replacement:G}],s),y=s.activeEditor,t.ok(y instanceof S),t.strictEqual(y?.resource?.toString(),G.resource.toString()),t.strictEqual(n,3),t.strictEqual(d,0),t.strictEqual(q,0),t.strictEqual(E,G),t.ok(!v),t.ok(!g),await w()}{const c={resource:a.file("file.editor-service-override-tests"),options:{override:P.id}},u=await f(c),y=u?.input;t.strictEqual(u?.group,s),t.ok(y instanceof N),t.strictEqual(y.resource.toString(),c.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await f(c),t.strictEqual(u?.group.activeEditor,y),await w()}{const c={resource:a.file("file.editor-service-override-tests"),options:{sticky:!0,preserveFocus:!0,override:P.id}},u=await f(c);t.strictEqual(u?.group,s),t.ok(u.input instanceof N),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(u.group.isSticky(u.input),!0),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w(),await i.activeGroup.closeEditor(u.input)}{const c={resource:a.file("file.editor-service-override-tests"),options:{override:P.id}},u=await f(c);t.strictEqual(u?.group,s),t.ok(u.input instanceof N),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}{const c={resource:a.file("file.editor-service-override-tests"),options:{override:p}},u=await f(c);t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(n,1),t.strictEqual(d,0),t.strictEqual(q,0),t.strictEqual(E,c),t.ok(!v),t.ok(!g),await w()}{const c={resource:a.file("file.editor-service-override-tests"),options:{sticky:!0,preserveFocus:!0}},u=await f(c);t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(u.group.isSticky(u.input),!0),t.strictEqual(n,1),t.strictEqual(d,0),t.strictEqual(q,0),t.strictEqual(E.resource.toString(),c.resource.toString()),t.strictEqual(E.options?.preserveFocus,!0),t.ok(!v),t.ok(!g),await w(),await i.activeGroup.closeEditor(u.input)}{const c={resource:a.file("file.editor-service-override-tests"),options:{sticky:!0,preserveFocus:!0,override:p}},u=await f(c);t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(u.group.isSticky(u.input),!0),t.strictEqual(n,1),t.strictEqual(d,0),t.strictEqual(q,0),t.strictEqual(E.resource.toString(),c.resource.toString()),t.strictEqual(E.options?.preserveFocus,!0),t.ok(!v),t.ok(!g),await w(),await i.activeGroup.closeEditor(u.input)}{const c={resource:a.file("file.editor-service-override-tests")},u=await f(c,k);t.strictEqual(o.editorGroupService.groups.length,2),t.notStrictEqual(u?.group,s),t.ok(u?.input instanceof S),t.strictEqual(u?.input.resource.toString(),c.resource.toString()),t.strictEqual(n,1),t.strictEqual(d,0),t.strictEqual(q,0),t.strictEqual(E,c),t.ok(!v),t.ok(!g),await w()}{const c={resource:a.file("file.editor-service-override-tests"),options:{override:P.id}},u=await f(c,k);t.strictEqual(o.editorGroupService.groups.length,2),t.notStrictEqual(u?.group,s),t.ok(u?.input instanceof N),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}}{{const c=l(a.file("file.editor-service-override-tests"),p),u=await f({editor:c});let y=u?.input;t.strictEqual(u?.group,s),t.ok(y instanceof S),t.strictEqual(y.resource.toString(),c.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await f(c),t.strictEqual(u?.group.activeEditor,y);const G=l(a.file("file-replaced.editor-service-override-tests"),p);await r.replaceEditors([{editor:c,replacement:G}],s),y=s.activeEditor,t.ok(y instanceof S),t.strictEqual(y.resource.toString(),G.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!v),t.ok(!g),await w()}{const c=l(a.file("file.editor-service-override-tests"),p),u=await f({editor:c}),y=u?.input;t.strictEqual(u?.group,s),t.ok(y instanceof S),t.strictEqual(y.resource.toString(),c.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await f(c),t.strictEqual(u?.group.activeEditor,c),await w()}{const c=l(a.file("file.editor-service-override-tests"),p),u=await f({editor:c,options:{sticky:!0,preserveFocus:!0}});t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(u.group.isSticky(u.input),!0),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w(),await i.activeGroup.closeEditor(u.input)}{const c=l(a.file("file.editor-service-override-tests"),p),u=await f({editor:c,options:{override:P.id}});t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}{const c=l(a.file("file.editor-service-override-tests"),p),u=await f({editor:c,options:{override:p}});t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}{const c=l(a.file("file.editor-service-override-tests"),p),u=await f({editor:c,options:{sticky:!0,preserveFocus:!0}});t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(u.group.isSticky(u.input),!0),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w(),await i.activeGroup.closeEditor(u.input)}{const c=l(a.file("file.editor-service-override-tests"),p),u=await f({editor:c,options:{sticky:!0,preserveFocus:!0,override:p}});t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(u.group.isSticky(u.input),!0),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w(),await i.activeGroup.closeEditor(u.input)}{const c=l(a.file("file.editor-service-override-tests"),p),u=await f({editor:c},k);t.strictEqual(o.editorGroupService.groups.length,2),t.notStrictEqual(u?.group,s),t.ok(u?.input instanceof S),t.strictEqual(u?.input.resource.toString(),c.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}{const c=l(a.file("file.editor-service-override-tests"),p),u=await f({editor:c},k);t.strictEqual(o.editorGroupService.groups.length,2),t.notStrictEqual(u?.group,s),t.ok(u?.input instanceof S),t.strictEqual(u.input.resource.toString(),c.resource.toString()),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}}{{const c={resource:void 0,options:{override:p}},u=await f(c);t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.scheme,"untitled"),t.strictEqual(n,0),t.strictEqual(d,1),t.strictEqual(q,0),t.ok(!E),t.strictEqual(v,c),t.ok(!g),await w()}{const c={resource:void 0,options:{override:p}},u=await f(c,k);t.strictEqual(o.editorGroupService.groups.length,2),t.notStrictEqual(u?.group,s),t.ok(u?.input instanceof S),t.strictEqual(u?.input.resource.scheme,"untitled"),t.strictEqual(n,0),t.strictEqual(d,1),t.strictEqual(q,0),t.ok(!E),t.strictEqual(v,c),t.ok(!g),await w()}{const c={resource:a.file("file-original.editor-service-override-tests").with({scheme:"untitled"})},u=await f(c),y=u?.input;t.strictEqual(u?.group,s),t.ok(y instanceof S),t.strictEqual(y.resource.scheme,"untitled"),t.strictEqual(n,0),t.strictEqual(d,1),t.strictEqual(q,0),t.ok(!E),t.strictEqual(v,c),t.ok(!g),await f(c),t.strictEqual(u?.group.activeEditor,y),await w()}{const c={resource:void 0,options:{sticky:!0,preserveFocus:!0,override:p}},u=await f(c);t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input.resource.scheme,"untitled"),t.strictEqual(u.group.isSticky(u.input),!0),t.strictEqual(n,0),t.strictEqual(d,1),t.strictEqual(q,0),t.ok(!E),t.strictEqual(v,c),t.strictEqual(v.options?.preserveFocus,!0),t.strictEqual(v.options?.sticky,!0),t.ok(!g),await w()}}{{const c={original:{resource:a.file("file-original.editor-service-override-tests")},modified:{resource:a.file("file-modified.editor-service-override-tests")},options:{override:p}},u=await f(c),y=u?.input;t.strictEqual(u?.group,s),t.ok(y instanceof S),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,1),t.ok(!E),t.ok(!v),t.strictEqual(g,c),await w()}{const c={original:{resource:a.file("file-original.editor-service-override-tests")},modified:{resource:a.file("file-modified.editor-service-override-tests")},options:{override:p}},u=await f(c,k);t.strictEqual(o.editorGroupService.groups.length,2),t.notStrictEqual(u?.group,s),t.ok(u?.input instanceof S),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,1),t.ok(!E),t.ok(!v),t.strictEqual(g,c),await w()}{const c={original:{resource:a.file("file-original.editor-service-override-tests")},modified:{resource:a.file("file-modified.editor-service-override-tests")},options:{override:p,sticky:!0,preserveFocus:!0}},u=await f(c);t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.group.isSticky(u.input),!0),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,1),t.ok(!E),t.ok(!v),t.strictEqual(g,c),t.strictEqual(g.options?.preserveFocus,!0),t.strictEqual(g.options?.sticky,!0),await w()}}{{const c=l(a.file("file.something"),p),u=await f({editor:c});t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input,c),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}{const c=l(a.file("file.something"),p),u=await f({editor:c},k);t.strictEqual(o.editorGroupService.groups.length,2),t.notStrictEqual(u?.group,s),t.ok(u?.input instanceof S),t.strictEqual(u?.input,c),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}}{{const c=l(a.file("file.something"),p);c.disableToUntyped=!0;const u=await f({editor:c});t.strictEqual(u?.group,s),t.ok(u.input instanceof S),t.strictEqual(u.input,c),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}{const c=l(a.file("file.something"),p);c.disableToUntyped=!0;const u=await f({editor:c},k);t.strictEqual(o.editorGroupService.groups.length,2),t.notStrictEqual(u?.group,s),t.ok(u?.input instanceof S),t.strictEqual(u?.input,c),t.strictEqual(n,0),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(!E),t.ok(!v),t.ok(!g),await w()}}if(e){const c={resource:a.file("file1.editor-service-override-tests")},u={resource:a.file("file2.editor-service-override-tests")},y={editor:l(a.file("file3.editor-service-override-tests"),p)},G={editor:l(a.file("file4.editor-service-override-tests"),p)},b={resource:a.file("file5.editor-service-override-tests")},L=(await r.openEditors([c,u,y,G,b]))[0];t.strictEqual(L?.group,s),t.strictEqual(L?.group.count,5),t.strictEqual(n,3),t.strictEqual(d,0),t.strictEqual(q,0),t.ok(E),t.ok(!v),t.ok(!g),await w()}{{const c={resource:a.file("file-1"),options:{revealIfVisible:!0,pinned:!0}},u={resource:a.file("file-2"),options:{pinned:!0}},y=await f(c),G=await f(u,k);t.strictEqual(y?.group.count,1),t.strictEqual(G?.group.count,1),o.editorGroupService.activateGroup(G.group),await f(c),t.strictEqual(y?.group.count,1),t.strictEqual(G?.group.count,1),await w()}{const c={resource:a.file("file-1"),options:{revealIfOpened:!0,pinned:!0}},u={resource:a.file("file-2"),options:{pinned:!0}},y=await f(c);await f(u),t.strictEqual(y?.group.activeEditor?.resource?.toString(),u.resource.toString());const G=await f(u,k);t.strictEqual(y?.group.count,2),t.strictEqual(G?.group.count,1),o.editorGroupService.activateGroup(G.group),await f(c),t.strictEqual(y?.group.count,2),t.strictEqual(G?.group.count,1),await w()}}}test("openEditor() applies options if editor already opened",async()=>{m.add(O());const[,e,i]=await I();m.add(i.editorResolverService.registerEditor("*.editor-service-override-tests",{id:p,label:"Label",priority:T.exclusive},{},{createEditorInput:o=>({editor:l(o.resource,p)})}));let r=await e.openEditor(l(a.parse("my://resource-openEditors"),p));r=await e.openEditor(l(a.parse("my://resource-openEditors"),p),{sticky:!0,preserveFocus:!0}),t.strictEqual(r?.options?.sticky,!0),t.strictEqual(r?.options?.preserveFocus,!0),await r.group.closeAllEditors(),r=await e.openEditor({resource:a.file("resource-openEditors")}),r=await e.openEditor({resource:a.file("resource-openEditors"),options:{sticky:!0,preserveFocus:!0}}),t.ok(r instanceof ut),t.strictEqual(r?.options?.sticky,!0),t.strictEqual(r?.options?.preserveFocus,!0),r=await e.openEditor({resource:a.file("file.editor-service-override-tests")}),r=await e.openEditor({resource:a.file("file.editor-service-override-tests"),options:{sticky:!0,preserveFocus:!0}}),t.strictEqual(r?.options?.sticky,!0),t.strictEqual(r?.options?.preserveFocus,!0)}),test("isOpen() with side by side editor",async()=>{const[e,i]=await I(),r=l(a.parse("my://resource-openEditors"),p),o=l(a.parse("my://resource2-openEditors"),p),s=new x("sideBySide","",r,o,i),n=await i.openEditor(s,{pinned:!0});t.strictEqual(e.activeGroup.count,1),t.strictEqual(i.isOpened(r),!1),t.strictEqual(i.isOpened(o),!0),t.strictEqual(i.isOpened({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1),t.strictEqual(i.isOpened({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0);const d=await i.openEditor(r,{pinned:!0});t.strictEqual(e.activeGroup.count,2),t.strictEqual(i.isOpened(r),!0),t.strictEqual(i.isOpened(o),!0),t.strictEqual(i.isOpened({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(i.isOpened({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0),await d?.group.closeEditor(r),t.strictEqual(e.activeGroup.count,1),t.strictEqual(i.isOpened(r),!1),t.strictEqual(i.isOpened(o),!0),t.strictEqual(i.isOpened({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1),t.strictEqual(i.isOpened({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0),await n?.group.closeEditor(s),t.strictEqual(i.isOpened(r),!1),t.strictEqual(i.isOpened(o),!1),t.strictEqual(i.isOpened({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1),t.strictEqual(i.isOpened({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!1)}),test("openEditors() / replaceEditors()",async()=>{const[e,i]=await I(),r=l(a.parse("my://resource-openEditors"),p),o=l(a.parse("my://resource2-openEditors"),p),s=l(a.parse("my://resource3-openEditors"),p);await i.openEditors([{editor:r},{editor:o}]),t.strictEqual(e.activeGroup.count,2),await i.replaceEditors([{editor:r,replacement:s}],e.activeGroup),t.strictEqual(e.activeGroup.count,2),t.strictEqual(e.activeGroup.getIndexOfEditor(s),0)}),test("openEditors() handles workspace trust (typed editors)",async()=>{const[e,i,r]=await I(),o=l(a.parse("my://resource1-openEditors"),p),s=l(a.parse("my://resource2-openEditors"),p),n=l(a.parse("my://resource3-openEditors"),p),d=l(a.parse("my://resource4-openEditors"),p),q=new x("side by side",void 0,n,d,i),E=r.workspaceTrustRequestService.requestOpenUrisHandler;try{let v=[];r.workspaceTrustRequestService.requestOpenUrisHandler=async g=>(v=g,V.Cancel),await i.openEditors([{editor:o},{editor:s},{editor:q}],void 0,{validateTrust:!0}),t.strictEqual(e.activeGroup.count,0),t.strictEqual(v.length,4),t.strictEqual(v.some(g=>g.toString()===o.resource.toString()),!0),t.strictEqual(v.some(g=>g.toString()===s.resource.toString()),!0),t.strictEqual(v.some(g=>g.toString()===n.resource.toString()),!0),t.strictEqual(v.some(g=>g.toString()===d.resource.toString()),!0),r.workspaceTrustRequestService.requestOpenUrisHandler=async g=>V.OpenInNewWindow,await i.openEditors([{editor:o},{editor:s},{editor:q}],void 0,{validateTrust:!0}),t.strictEqual(e.activeGroup.count,0),r.workspaceTrustRequestService.requestOpenUrisHandler=async g=>V.Open,await i.openEditors([{editor:o},{editor:s},{editor:q}],void 0,{validateTrust:!0}),t.strictEqual(e.activeGroup.count,3)}finally{r.workspaceTrustRequestService.requestOpenUrisHandler=E}}),test("openEditors() ignores trust when `validateTrust: false",async()=>{const[e,i,r]=await I(),o=l(a.parse("my://resource1-openEditors"),p),s=l(a.parse("my://resource2-openEditors"),p),n=l(a.parse("my://resource3-openEditors"),p),d=l(a.parse("my://resource4-openEditors"),p),q=new x("side by side",void 0,n,d,i),E=r.workspaceTrustRequestService.requestOpenUrisHandler;try{r.workspaceTrustRequestService.requestOpenUrisHandler=async v=>V.Cancel,await i.openEditors([{editor:o},{editor:s},{editor:q}]),t.strictEqual(e.activeGroup.count,3)}finally{r.workspaceTrustRequestService.requestOpenUrisHandler=E}}),test("openEditors() extracts proper resources from untyped editors for workspace trust",async()=>{const[,e,i]=await I(),r={resource:a.file("resource-openEditors")},o={original:{resource:a.parse("my://resource2-openEditors")},modified:{resource:a.parse("my://resource3-openEditors")}},s=i.workspaceTrustRequestService.requestOpenUrisHandler;try{let n=[];i.workspaceTrustRequestService.requestOpenUrisHandler=async d=>(n=d,s(d)),await e.openEditors([r,o],void 0,{validateTrust:!0}),t.strictEqual(n.length,3),t.strictEqual(n.some(d=>d.toString()===r.resource.toString()),!0),t.strictEqual(n.some(d=>d.toString()===o.original.resource?.toString()),!0),t.strictEqual(n.some(d=>d.toString()===o.modified.resource?.toString()),!0)}finally{i.workspaceTrustRequestService.requestOpenUrisHandler=s}}),test("close editor does not dispose when editor opened in other group",async()=>{const[e,i]=await I(),r=l(a.parse("my://resource-close1"),p),o=e.activeGroup,s=e.addGroup(o,R.RIGHT);await i.openEditor(r,{pinned:!0}),await i.openEditor(r,{pinned:!0},s);const n=i.editors;t.strictEqual(n.length,2),t.strictEqual(n[0],r),t.strictEqual(n[1],r),await o.closeEditor(r),t.strictEqual(r.isDisposed(),!1),await s.closeEditor(r),t.strictEqual(r.isDisposed(),!0)}),test("open to the side",async()=>{const[e,i]=await I(),r=l(a.parse("my://resource1-openside"),p),o=l(a.parse("my://resource2-openside"),p),s=e.activeGroup;await i.openEditor(r,{pinned:!0},s);let n=await i.openEditor(r,{pinned:!0,preserveFocus:!0},k);t.strictEqual(e.activeGroup,s),t.strictEqual(e.count,2),t.strictEqual(n?.group,e.groups[1]),t.strictEqual(i.isVisible(r),!0),t.strictEqual(i.isOpened(r),!0),n=await i.openEditor(o,{pinned:!0,preserveFocus:!0},k),t.strictEqual(e.activeGroup,s),t.strictEqual(e.count,2),t.strictEqual(n?.group,e.groups[1]),t.strictEqual(i.isVisible(o),!0),t.strictEqual(i.isOpened(o),!0)}),test("editor group activation",async()=>{const[e,i]=await I(),r=l(a.parse("my://resource1-openside"),p),o=l(a.parse("my://resource2-openside"),p),s=e.activeGroup;await i.openEditor(r,{pinned:!0},s);let n=await i.openEditor(o,{pinned:!0,preserveFocus:!0,activation:A.ACTIVATE},k);const d=n?.group;t.strictEqual(e.activeGroup,d),n=await i.openEditor(r,{pinned:!0,preserveFocus:!0,activation:A.PRESERVE},s),t.strictEqual(e.activeGroup,d),n=await i.openEditor(r,{pinned:!0,preserveFocus:!0,activation:A.ACTIVATE},s),t.strictEqual(e.activeGroup,s),n=await i.openEditor(o,{pinned:!0,activation:A.PRESERVE},d),t.strictEqual(e.activeGroup,s),n=await i.openEditor(o,{pinned:!0,activation:A.ACTIVATE},d),t.strictEqual(e.activeGroup,d),e.arrangeGroups(j.EXPAND),n=await i.openEditor(r,{pinned:!0,preserveFocus:!0,activation:A.RESTORE},s),t.strictEqual(e.activeGroup,d)}),test("inactive editor group does not activate when closing editor (#117686)",async()=>{const[e,i]=await I(),r=l(a.parse("my://resource1-openside"),p),o=l(a.parse("my://resource2-openside"),p),s=e.activeGroup;await i.openEditor(r,{pinned:!0},s),await i.openEditor(o,{pinned:!0},s);const n=(await i.openEditor(o,{pinned:!0},k))?.group;t.strictEqual(e.activeGroup,n),t.notStrictEqual(s,n),e.arrangeGroups(j.EXPAND,e.activeGroup),await s.closeEditor(o),t.strictEqual(e.activeGroup,n),t(!e.isGroupExpanded(s)),t(e.isGroupExpanded(e.activeGroup))}),test("active editor change / visible editor change events",async function(){const[e,i]=await I();let r=l(a.parse("my://resource-active"),p),o=l(a.parse("my://resource2-active"),p),s=!1;const n=i.onDidActiveEditorChange(()=>{s=!0});let d=!1;const q=i.onDidVisibleEditorsChange(()=>{d=!0});function E(u){t.strictEqual(s,u,`Unexpected active editor change state (got ${s}, expected ${u})`),s=!1}function v(u){t.strictEqual(d,u,`Unexpected visible editors change state (got ${d}, expected ${u})`),d=!1}async function g(u,y){await u.closeEditor(y),await Et(0)}let w=await i.openEditor(r,{pinned:!0});const f=w?.group;E(!0),v(!0),w=await i.openEditor(r),E(!1),v(!1),w=await i.openEditor(o),E(!0),v(!0),await g(f,o),E(!0),v(!0),await g(f,r),E(!0),v(!0),r=l(a.parse("my://resource-active"),p),o=l(a.parse("my://resource2-active"),p),w=await i.openEditor(r),E(!0),v(!0),w=await i.openEditor(r,{forceReload:!0}),E(!1),v(!1),await g(f,r),r=l(a.parse("my://resource-active"),p),o=l(a.parse("my://resource2-active"),p),w=await i.openEditor(r,{pinned:!0}),E(!0),v(!0),w=await i.openEditor(o,{inactive:!0}),E(!1),v(!1),await f.closeAllEditors(),E(!0),v(!0),r=l(a.parse("my://resource-active"),p),o=l(a.parse("my://resource2-active"),p),w=await i.openEditor(r,{pinned:!0}),E(!0),v(!0),w=await i.openEditor(o,{inactive:!0}),E(!1),v(!1),await g(f,o),E(!1),v(!1),await f.closeAllEditors(),E(!0),v(!0),r=l(a.parse("my://resource-active"),p),o=l(a.parse("my://resource2-active"),p),w=await i.openEditor(r,{pinned:!0}),E(!0),v(!0);let c=e.addGroup(e.activeGroup,R.RIGHT);E(!1),v(!1),c.focus(),E(!0),v(!1),e.removeGroup(c),E(!0),v(!1),await f.closeAllEditors(),E(!0),v(!0),r=l(a.parse("my://resource-active"),p),o=l(a.parse("my://resource2-active"),p),w=await i.openEditor(r,{pinned:!0}),E(!0),v(!0),c=e.addGroup(e.activeGroup,R.RIGHT),E(!1),v(!1),await c.openEditor(o),E(!0),v(!0),await g(c,o),E(!0),v(!0),await f.closeAllEditors(),E(!0),v(!0),r=l(a.parse("my://resource-active"),p),o=l(a.parse("my://resource2-active"),p),w=await i.openEditor(r,{pinned:!0}),E(!0),v(!0),c=e.addGroup(e.activeGroup,R.RIGHT),E(!1),v(!1),await c.openEditor(o),E(!0),v(!0),f.focus(),E(!0),v(!1),await g(c,o),E(!1),v(!0),await f.closeAllEditors(),E(!0),v(!0),r=l(a.parse("my://resource-active"),p),o=l(a.parse("my://resource2-active"),p),w=await i.openEditor(r,{pinned:!0}),E(!0),v(!0),w=await i.openEditor(o,{pinned:!0}),E(!0),v(!0),f.moveEditor(o,f,{index:0}),E(!1),v(!1),await f.closeAllEditors(),E(!0),v(!0),r=l(a.parse("my://resource-active"),p),o=l(a.parse("my://resource2-active"),p),w=await i.openEditor(r,{pinned:!0}),E(!0),v(!0),c=e.addGroup(e.activeGroup,R.RIGHT),E(!1),v(!1),await c.openEditor(o),E(!0),v(!0),await g(f,r),E(!1),v(!0),n.dispose(),q.dispose()}),test("editors change event",async function(){const[e,i]=await I(),r=e.activeGroup;let o=l(a.parse("my://resource-active"),p),s=l(a.parse("my://resource2-active"),p),n=0;async function d(E,v){const g=H.toPromise(i.onDidEditorsChange);await E(),await g,n++,t.strictEqual(n,v)}await d(()=>i.openEditor(o,{pinned:!0}),1),await d(()=>i.openEditor(s,{pinned:!0}),2),await d(()=>r.closeEditor(o),3),await d(()=>r.closeEditor(s),4),o=l(a.parse("my://resource-active"),p),s=l(a.parse("my://resource2-active"),p),await d(()=>i.openEditors([{editor:o,options:{pinned:!0}},{editor:s,options:{pinned:!0}}]),5),await d(()=>i.openEditor(s),6),await d(()=>i.openEditor(o,{pinned:!0,index:1}),7);const q=e.addGroup(e.activeGroup,R.RIGHT);await d(async()=>r.moveEditor(o,q),8),await d(async()=>e.moveGroup(q,r,R.LEFT),9)}),test("two active editor change events when opening editor to the side",async function(){const[,e]=await I(),i=l(a.parse("my://resource-active"),p);let r=0;const o=e.onDidActiveEditorChange(()=>{r++});function s(n){t.strictEqual(r,n,`Unexpected active editor change state (got ${r}, expected ${n})`),r=0}await e.openEditor(i,{pinned:!0}),s(1),await e.openEditor(i,{pinned:!0},k),s(2),o.dispose()}),test("activeTextEditorControl / activeTextEditorMode",async()=>{const[,e]=await I(),i=await e.openEditor({resource:void 0});t.strictEqual(e.activeEditorPane,i),t.strictEqual(e.activeTextEditorControl,i?.getControl()),t.strictEqual(e.activeTextEditorLanguageId,wt)}),test("openEditor returns undefined when inactive",async function(){const[,e]=await I(),i=l(a.parse("my://resource-active"),p),r=l(a.parse("my://resource2-inactive"),p),o=await e.openEditor(i,{pinned:!0});t.ok(o);const s=await e.openEditor(r,{inactive:!0});t.ok(!s)}),test("openEditor shows placeholder when opening fails",async function(){const[,e]=await I(),i=l(a.parse("my://resource-failing"),p);i.setFailToOpen();const r=await e.openEditor(i);t.ok(r instanceof et)}),test("openEditor shows placeholder when restoring fails",async function(){const[,e]=await I(),i=l(a.parse("my://resource-active"),p),r=l(a.parse("my://resource-failing"),p);await e.openEditor(i,{pinned:!0}),await e.openEditor(r,{inactive:!0}),r.setFailToOpen();const o=await e.openEditor(r);t.ok(o instanceof et)}),test("save, saveAll, revertAll",async function(){const[e,i]=await I(),r=l(a.parse("my://resource1"),p);r.dirty=!0;const o=l(a.parse("my://resource2"),p);o.dirty=!0;const s=l(a.parse("my://resource1"),p);s.dirty=!0;const n=e.activeGroup;await i.openEditor(r,{pinned:!0}),await i.openEditor(o,{pinned:!0}),await i.openEditor(s,{pinned:!0},k);const d=await i.save({groupId:n.id,editor:r});t.strictEqual(d.success,!0),t.strictEqual(d.editors[0],r),t.strictEqual(r.gotSaved,!0),r.gotSaved=!1,r.gotSavedAs=!1,r.gotReverted=!1,r.dirty=!0,o.dirty=!0,s.dirty=!0;const q=await i.save({groupId:n.id,editor:r},{saveAs:!0});t.strictEqual(q.success,!0),t.strictEqual(q.editors[0],r),t.strictEqual(r.gotSavedAs,!0),r.gotSaved=!1,r.gotSavedAs=!1,r.gotReverted=!1,r.dirty=!0,o.dirty=!0,s.dirty=!0;const E=await i.revertAll();t.strictEqual(E,!0),t.strictEqual(r.gotReverted,!0),r.gotSaved=!1,r.gotSavedAs=!1,r.gotReverted=!1,r.dirty=!0,o.dirty=!0,s.dirty=!0;const v=await i.saveAll();t.strictEqual(v.success,!0),t.strictEqual(v.editors.length,2),t.strictEqual(r.gotSaved,!0),t.strictEqual(o.gotSaved,!0),r.gotSaved=!1,r.gotSavedAs=!1,r.gotReverted=!1,o.gotSaved=!1,o.gotSavedAs=!1,o.gotReverted=!1,r.dirty=!0,o.dirty=!0,s.dirty=!0,await i.saveAll({saveAs:!0}),t.strictEqual(r.gotSavedAs,!0),t.strictEqual(o.gotSavedAs,!0),t.strictEqual(s.gotSaved,!1),t.strictEqual(s.gotSavedAs,!1),t.strictEqual(s.gotReverted,!1)}),test("saveAll, revertAll (sticky editor)",async function(){const[,e]=await I(),i=l(a.parse("my://resource1"),p);i.dirty=!0;const r=l(a.parse("my://resource2"),p);r.dirty=!0;const o=l(a.parse("my://resource1"),p);o.dirty=!0,await e.openEditor(i,{pinned:!0,sticky:!0}),await e.openEditor(r,{pinned:!0}),await e.openEditor(o,{pinned:!0},k);const s=await e.revertAll({excludeSticky:!0});t.strictEqual(s,!0),t.strictEqual(i.gotReverted,!1),t.strictEqual(o.gotReverted,!0),i.gotSaved=!1,i.gotSavedAs=!1,i.gotReverted=!1,o.gotSaved=!1,o.gotSavedAs=!1,o.gotReverted=!1,i.dirty=!0,r.dirty=!0,o.dirty=!0;const n=await e.saveAll({excludeSticky:!0});t.strictEqual(n.success,!0),t.strictEqual(n.editors.length,2),t.strictEqual(i.gotSaved,!1),t.strictEqual(r.gotSaved,!0),t.strictEqual(o.gotSaved,!0)}),test("saveAll, revertAll untitled (exclude untitled)",async function(){await U({},!1,!1),await U({includeUntitled:!1},!1,!1)}),test("saveAll, revertAll untitled (include untitled)",async function(){await U({includeUntitled:!0},!0,!1),await U({includeUntitled:{includeScratchpad:!1}},!0,!1)}),test("saveAll, revertAll untitled (include scratchpad)",async function(){await U({includeUntitled:{includeScratchpad:!0}},!0,!0)});async function U(e,i,r){const[,o]=await I(),s=l(a.parse("my://resource1"),p);s.dirty=!0;const n=l(a.parse("my://resource2"),p);n.dirty=!0,n.capabilities=B.Untitled;const d=l(a.parse("my://resource3"),p);d.modified=!0,d.capabilities=B.Scratchpad|B.Untitled,await o.openEditor(s,{pinned:!0,sticky:!0}),await o.openEditor(n,{pinned:!0}),await o.openEditor(d,{pinned:!0});const q=await o.revertAll(e);t.strictEqual(q,!0),t.strictEqual(s.gotReverted,!0),t.strictEqual(n.gotReverted,i),t.strictEqual(d.gotReverted,r),s.gotSaved=!1,n.gotSavedAs=!1,d.gotReverted=!1,s.gotSaved=!1,n.gotSavedAs=!1,d.gotReverted=!1,s.dirty=!0,n.dirty=!0,d.modified=!0;const E=await o.saveAll(e);t.strictEqual(E.success,!0),t.strictEqual(E.editors.length,r?3:i?2:1),t.strictEqual(s.gotSaved,!0),t.strictEqual(n.gotSaved,i),t.strictEqual(d.gotSaved,r)}test("file delete closes editor",async function(){return K(!1)}),test("file delete leaves dirty editors open",function(){return K(!0)});async function K(e){const[i,r,o]=await I(),s=l(a.parse("my://resource1"),p);s.dirty=e;const n=l(a.parse("my://resource2"),p);n.dirty=e;const d=i.activeGroup;await r.openEditor(s,{pinned:!0}),await r.openEditor(n,{pinned:!0}),t.strictEqual(d.activeEditor,n);const q=Q(r);o.fileService.fireAfterOperation(new Z(n.resource,tt.DELETE)),e||await q,e?t.strictEqual(d.activeEditor,n):t.strictEqual(d.activeEditor,s)}test("file move asks input to move",async function(){const[e,i,r]=await I(),o=l(a.parse("my://resource1"),p),s=l(a.parse("my://resource2"),p);o.movedEditor={editor:s};const n=e.activeGroup;await i.openEditor(o,{pinned:!0});const d=Q(i);r.fileService.fireAfterOperation(new Z(o.resource,tt.MOVE,{resource:s.resource,ctime:0,etag:"",isDirectory:!1,isFile:!0,mtime:0,name:"resource2",size:0,isSymbolicLink:!1,readonly:!1,locked:!1,children:void 0})),await d,t.strictEqual(n.activeEditor,s)});function Q(e){return H.toPromise(H.once(e.onDidActiveEditorChange))}test("file watcher gets installed for out of workspace files",async function(){const[,e,i]=await I(),r=l(a.parse("file://resource1"),p),o=l(a.parse("file://resource2"),p);await e.openEditor(r,{pinned:!0}),t.strictEqual(i.fileService.watches.length,1),t.strictEqual(i.fileService.watches[0].toString(),r.resource.toString());const s=await e.openEditor(o,{pinned:!0});t.strictEqual(i.fileService.watches.length,1),t.strictEqual(i.fileService.watches[0].toString(),o.resource.toString()),await s?.group.closeAllEditors(),t.strictEqual(i.fileService.watches.length,0)}),test("activeEditorPane scopedContextKeyService",async function(){const e=M({contextKeyService:n=>n.createInstance(qt)},m),[i,r]=await I(e),o=l(a.parse("file://resource1"),p);l(a.parse("file://resource2"),p),await r.openEditor(o,{pinned:!0});const s=r.activeEditorPane?.scopedContextKeyService;t.ok(!!s),t.strictEqual(s,i.activeGroup.activeEditorPane?.scopedContextKeyService)}),test("editorResolverService - openEditor",async function(){const[,e,i]=await I(),r=i.editorResolverService,o=i.textEditorService;let s=0;const n=r.registerEditor("*.md",{id:"TestEditor",label:"Test Editor",detail:"Test Editor Provider",priority:T.builtin},{},{createEditorInput:E=>(s++,{editor:o.createTextEditor(E)}),createDiffEditorInput:E=>({editor:o.createTextEditor(E)})});t.strictEqual(s,0);const d={resource:a.parse("file://test/path/resource1.txt")},q={resource:a.parse("file://test/path/resource1.md")};await e.openEditor(d),t.strictEqual(s,0),await e.openEditor(q),t.strictEqual(s,1),await e.openEditor({...q,options:{override:"default"}}),t.strictEqual(s,1),n.dispose()}),test("editorResolverService - openEditors",async function(){const[,e,i]=await I(),r=i.editorResolverService,o=i.textEditorService;let s=0;const n=r.registerEditor("*.md",{id:"TestEditor",label:"Test Editor",detail:"Test Editor Provider",priority:T.builtin},{},{createEditorInput:g=>(s++,{editor:o.createTextEditor(g)}),createDiffEditorInput:g=>({editor:o.createTextEditor(g)})});t.strictEqual(s,0);const d=l(a.parse("file://test/path/resource1.txt"),p).toUntyped(),q=l(a.parse("file://test/path/resource2.txt"),p).toUntyped(),E=l(a.parse("file://test/path/resource3.md"),p).toUntyped(),v=l(a.parse("file://test/path/resource4.md"),p).toUntyped();t.ok(d),t.ok(q),t.ok(E),t.ok(v),await e.openEditors([d,q,E,v]),t.strictEqual(s,2),n.dispose()}),test("editorResolverService - replaceEditors",async function(){const[e,i,r]=await I(),o=r.editorResolverService,s=r.textEditorService;let n=0;const d=o.registerEditor("*.md",{id:"TestEditor",label:"Test Editor",detail:"Test Editor Provider",priority:T.builtin},{},{createEditorInput:v=>(n++,{editor:s.createTextEditor(v)}),createDiffEditorInput:v=>({editor:s.createTextEditor(v)})});t.strictEqual(n,0);const q=l(a.parse("file://test/path/resource2.md"),p),E=q.toUntyped();t.ok(E),await i.openEditor(q),t.strictEqual(n,0),await i.replaceEditors([{editor:q,replacement:E}],e.activeGroup),t.strictEqual(n,1),d.dispose()}),test("closeEditor",async()=>{const[e,i]=await I(),r=l(a.parse("my://resource-openEditors"),p),o=l(a.parse("my://resource2-openEditors"),p);await i.openEditors([{editor:r},{editor:o}]),t.strictEqual(e.activeGroup.count,2),await i.closeEditor({editor:r,groupId:e.activeGroup.id}),t.strictEqual(e.activeGroup.count,1),await i.closeEditor({editor:r,groupId:e.activeGroup.id}),t.strictEqual(e.activeGroup.count,1),await i.closeEditor({editor:o,groupId:e.activeGroup.id}),t.strictEqual(e.activeGroup.count,0),await i.closeEditor({editor:o,groupId:999}),t.strictEqual(e.activeGroup.count,0)}),test("closeEditors",async()=>{const[e,i]=await I(),r=l(a.parse("my://resource-openEditors"),p),o=l(a.parse("my://resource2-openEditors"),p);await i.openEditors([{editor:r},{editor:o}]),t.strictEqual(e.activeGroup.count,2),await i.closeEditors([{editor:r,groupId:e.activeGroup.id},{editor:o,groupId:e.activeGroup.id}]),t.strictEqual(e.activeGroup.count,0)}),test("findEditors (in group)",async()=>{const[e,i]=await I(),r=l(a.parse("my://resource-openEditors"),p),o=l(a.parse("my://resource2-openEditors"),p);await i.openEditors([{editor:r},{editor:o}]),t.strictEqual(e.activeGroup.count,2);{const s=i.findEditors(r.resource,void 0,e.activeGroup);t.strictEqual(s.length,1),t.strictEqual(s[0],r);const n=i.findEditors(r,void 0,e.activeGroup);t.strictEqual(n,r)}{const s=i.findEditors(o.resource,void 0,e.activeGroup);t.strictEqual(s.length,1),t.strictEqual(s[0],o);const n=i.findEditors(o,void 0,e.activeGroup);t.strictEqual(n,o)}{const s=i.findEditors(a.parse("my://no-such-resource"),void 0,e.activeGroup);t.strictEqual(s.length,0);const n=i.findEditors({resource:a.parse("my://no-such-resource"),typeId:"",editorId:p},void 0,e.activeGroup);t.strictEqual(n,void 0)}{const s=await i.openEditor(l(a.parse("my://other-group-resource"),p),{pinned:!0,preserveFocus:!0},k),n=i.findEditors(r.resource,void 0,s.group.id);t.strictEqual(n.length,0);const d=i.findEditors(r,void 0,s.group.id);t.strictEqual(d,void 0)}await e.activeGroup.closeAllEditors();{const s=i.findEditors(r.resource,void 0,e.activeGroup);t.strictEqual(s.length,0);const n=i.findEditors(r,void 0,e.activeGroup);t.strictEqual(n,void 0)}}),test("findEditors (across groups)",async()=>{const[e,i]=await I(),r=e.activeGroup,o=l(a.parse("my://resource-openEditors"),p),s=l(a.parse("my://resource2-openEditors"),p);await i.openEditors([{editor:o},{editor:s}]);const n=await i.openEditor(o,{pinned:!0},k);{const d=i.findEditors(o.resource);t.strictEqual(d.length,2),t.strictEqual(d[0].editor,o),t.strictEqual(d[0].groupId,n?.group.id),t.strictEqual(d[1].editor,o),t.strictEqual(d[1].groupId,r.id);const q=i.findEditors(o);t.strictEqual(q.length,2),t.strictEqual(q[0].editor,o),t.strictEqual(q[0].groupId,n?.group.id),t.strictEqual(q[1].editor,o),t.strictEqual(q[1].groupId,r.id)}{const d=i.findEditors(s.resource);t.strictEqual(d.length,1),t.strictEqual(d[0].editor,s),t.strictEqual(d[0].groupId,r.id);const q=i.findEditors(s);t.strictEqual(q.length,1),t.strictEqual(q[0].editor,s),t.strictEqual(q[0].groupId,r.id)}{const d=i.findEditors(a.parse("my://no-such-resource"));t.strictEqual(d.length,0);const q=i.findEditors({resource:a.parse("my://no-such-resource"),typeId:"",editorId:p});t.strictEqual(q.length,0)}await r.closeAllEditors(),await n?.group.closeAllEditors();{const d=i.findEditors(o.resource);t.strictEqual(d.length,0);const q=i.findEditors(o);t.strictEqual(q.length,0)}}),test("findEditors (support side by side via options)",async()=>{const[,e]=await I(),i=l(a.parse("my://resource-findEditors-secondary"),p),r=l(a.parse("my://resource-findEditors-primary"),p),o=new x(void 0,void 0,i,r,e);await e.openEditor(o,{pinned:!0});let s=e.findEditors(a.parse("my://resource-findEditors-primary"));t.strictEqual(s.length,0),s=e.findEditors(a.parse("my://resource-findEditors-primary"),{supportSideBySide:C.PRIMARY}),t.strictEqual(s.length,1),s=e.findEditors(a.parse("my://resource-findEditors-secondary"),{supportSideBySide:C.PRIMARY}),t.strictEqual(s.length,0),s=e.findEditors(a.parse("my://resource-findEditors-primary"),{supportSideBySide:C.SECONDARY}),t.strictEqual(s.length,0),s=e.findEditors(a.parse("my://resource-findEditors-secondary"),{supportSideBySide:C.SECONDARY}),t.strictEqual(s.length,1),s=e.findEditors(a.parse("my://resource-findEditors-primary"),{supportSideBySide:C.ANY}),t.strictEqual(s.length,1),s=e.findEditors(a.parse("my://resource-findEditors-secondary"),{supportSideBySide:C.ANY}),t.strictEqual(s.length,1)}),test("side by side editor is not matching all other editors (https://github.com/microsoft/vscode/issues/132859)",async()=>{const[e,i]=await I(),r=e.activeGroup,o=l(a.parse("my://resource-openEditors"),p),s=l(a.parse("my://resource2-openEditors"),p),n=new x(void 0,void 0,o,o,i),d=new x(void 0,void 0,s,s,i);await i.openEditor(n,void 0,k),e.activateGroup(r),await i.openEditor(d,{revealIfOpened:!0,revealIfVisible:!0}),t.strictEqual(r.count,1)}),test("onDidCloseEditor indicates proper context when moving editor across groups",async()=>{const[e,i]=await I(),r=e.activeGroup,o=l(a.parse("my://resource-onDidCloseEditor1"),p),s=l(a.parse("my://resource-onDidCloseEditor2"),p);await i.openEditor(o,{pinned:!0}),await i.openEditor(s,{pinned:!0});const n=e.addGroup(r,R.RIGHT),d=[];m.add(i.onDidCloseEditor(q=>{d.push(q)})),r.moveEditor(o,n),t.strictEqual(d[0].context,_.MOVE),await n.closeEditor(o),t.strictEqual(d[1].context,_.UNKNOWN)}),test("onDidCloseEditor indicates proper context when replacing an editor",async()=>{const[e,i]=await I(),r=e.activeGroup,o=l(a.parse("my://resource-onDidCloseEditor1"),p),s=l(a.parse("my://resource-onDidCloseEditor2"),p);await i.openEditor(o,{pinned:!0});const n=[];m.add(i.onDidCloseEditor(d=>{n.push(d)})),await r.replaceEditors([{editor:o,replacement:s}]),t.strictEqual(n[0].context,_.REPLACE)}),yt()});
