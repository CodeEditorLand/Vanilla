var L=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var C=(p,n,d,c)=>{for(var l=c>1?void 0:c?A(n,d):n,v=p.length-1,k;v>=0;v--)(k=p[v])&&(l=(c?k(n,d,l):k(l))||l);return c&&l&&L(n,d,l),l},f=(p,n)=>(d,c)=>n(d,c,p);import r from"assert";import{URI as S}from"../../../../../base/common/uri.js";import{IEditorService as E}from"../../../editor/common/editorService.js";import"../../../../browser/parts/editor/editorPart.js";import{IEditorGroupsService as I}from"../../../editor/common/editorGroupsService.js";import{EditorService as h}from"../../../editor/browser/editorService.js";import"../../../../common/editor.js";import{IWorkingCopyBackupService as B}from"../../common/workingCopyBackup.js";import{ensureNoDisposablesAreLeakedInTestSuite as H,toResource as M}from"../../../../../base/test/common/utils.js";import{IFilesConfigurationService as G}from"../../../filesConfiguration/common/filesConfigurationService.js";import{IWorkingCopyService as N}from"../../common/workingCopyService.js";import"../../common/workingCopy.js";import{ILogService as J}from"../../../../../platform/log/common/log.js";import{ILifecycleService as K,LifecyclePhase as Q}from"../../../lifecycle/common/lifecycle.js";import"../../../../../platform/instantiation/common/instantiation.js";import{UntitledTextEditorInput as X}from"../../../untitled/common/untitledTextEditorInput.js";import{createEditorPart as b,InMemoryTestWorkingCopyBackupService as T,registerTestResourceEditor as q,TestServiceAccessor as R,toTypedWorkingCopyId as W,toUntypedWorkingCopyId as x,workbenchInstantiationService as U,workbenchTeardown as Y}from"../../../../test/browser/workbenchTestServices.js";import{TestWorkingCopy as Z}from"../../../../test/common/workbenchTestServices.js";import"../../../../../base/common/cancellation.js";import{timeout as D}from"../../../../../base/common/async.js";import{BrowserWorkingCopyBackupTracker as _}from"../../browser/workingCopyBackupTracker.js";import{DisposableStore as $}from"../../../../../base/common/lifecycle.js";import{IWorkingCopyEditorService as ee}from"../../common/workingCopyEditorService.js";import{bufferToReadable as m,VSBuffer as w}from"../../../../../base/common/buffer.js";import{isWindows as F}from"../../../../../base/common/platform.js";import{Schemas as O}from"../../../../../base/common/network.js";suite("WorkingCopyBackupTracker (browser)",function(){let p;const n=new $;setup(()=>{n.add(q())}),teardown(async()=>{await Y(p.instantiationService),n.clear()});let d=class extends _{constructor(e,o,s,t,i,u,y,g){super(e,o,s,t,i,u,y,g)}getBackupScheduleDelay(){return 10}get pendingBackupOperationCount(){return this.pendingBackupOperations.size}getUnrestoredBackups(){return this.unrestoredBackups}async testRestoreBackups(e){return super.restoreBackups(e)}};d=C([f(0,B),f(1,G),f(2,N),f(3,K),f(4,J),f(5,ee),f(6,E),f(7,I)],d);class c extends X{resolved=!1;resolve(){return this.resolved=!0,super.resolve()}}async function l(){const a=n.add(new T),e=U(void 0,n);e.stub(B,a);const o=await b(e,n);e.stub(I,o),n.add(q());const s=n.add(e.createInstance(h,void 0));e.stub(E,s),p=e.createInstance(R);const t=n.add(e.createInstance(d));return{accessor:p,part:o,tracker:t,workingCopyBackupService:a,instantiationService:e}}async function v(a={resource:void 0}){const{accessor:e,workingCopyBackupService:o}=await l(),s=n.add((await e.editorService.openEditor(a))?.input),t=n.add(await s.resolve());a?.contents||t.textEditorModel?.setValue("Super Good"),await o.joinBackupResource(),r.strictEqual(o.hasBackupSync(t),!0),t.dispose(),await o.joinDiscardBackup(),r.strictEqual(o.hasBackupSync(t),!1)}test("Track backups (untitled)",function(){return v()}),test("Track backups (untitled with initial contents)",function(){return v({resource:void 0,contents:"Foo Bar"})}),test("Track backups (custom)",async function(){const{accessor:a,tracker:e,workingCopyBackupService:o}=await l();class s extends Z{constructor(y){super(y),n.add(a.workingCopyService.registerWorkingCopy(this))}backupDelay=10;async backup(y){return await D(0),{}}}const t=M.call(this,"/path/custom.txt"),i=n.add(new s(t));i.setDirty(!0),r.strictEqual(e.pendingBackupOperationCount,1),await o.joinBackupResource(),r.strictEqual(o.hasBackupSync(i),!0),i.setDirty(!1),i.setDirty(!0),r.strictEqual(e.pendingBackupOperationCount,1),await o.joinBackupResource(),r.strictEqual(o.hasBackupSync(i),!0),i.setDirty(!1),r.strictEqual(e.pendingBackupOperationCount,1),await o.joinDiscardBackup(),r.strictEqual(o.hasBackupSync(i),!1),i.setDirty(!0),await D(0),i.setDirty(!1),r.strictEqual(e.pendingBackupOperationCount,1),await o.joinDiscardBackup(),r.strictEqual(o.hasBackupSync(i),!1)});async function k(){const a=S.file(F?"c:\\Foo":"/Foo"),e=S.file(F?"c:\\Bar":"/Bar"),o=S.from({scheme:O.untitled,path:"Untitled-1"}),s=S.from({scheme:O.untitled,path:"Untitled-2"}),t=n.add(new T),i=U(void 0,n);i.stub(B,t);const u=await b(i,n);i.stub(I,u);const y=n.add(i.createInstance(h,void 0));i.stub(E,y),p=i.createInstance(R);const g=x(o),P=W(s);await t.backup(g,m(w.fromString("untitled-1"))),await t.backup(P,m(w.fromString("untitled-2")));const z=x(a),V=W(e);await t.backup(z,m(w.fromString("fooFile"))),await t.backup(V,m(w.fromString("barFile")));const j=n.add(i.createInstance(d));return p.lifecycleService.phase=Q.Restored,[j,p]}test("Restore backups (basics, some handled)",async function(){const[a,e]=await k();r.strictEqual(a.getUnrestoredBackups().size,0);let o=0,s=0,t=0;await a.testRestoreBackups({handles:i=>(o++,i.typeId==="testBackupTypeId"),isOpen:(i,u)=>(s++,!1),createEditor:i=>(t++,n.add(e.instantiationService.createInstance(c,e.untitledTextEditorService.create({initialValue:"foo"}))))}),r.strictEqual(o,4),r.strictEqual(s,0),r.strictEqual(t,2),r.strictEqual(e.editorService.count,2),r.ok(e.editorService.editors.every(i=>i.isDirty())),r.strictEqual(a.getUnrestoredBackups().size,2);for(const i of e.editorService.editors)r.ok(i instanceof c),r.strictEqual(i.resolved,!0)}),test("Restore backups (basics, none handled)",async function(){const[a,e]=await k();await a.testRestoreBackups({handles:o=>!1,isOpen:(o,s)=>{throw new Error("unexpected")},createEditor:o=>{throw new Error("unexpected")}}),r.strictEqual(e.editorService.count,0),r.strictEqual(a.getUnrestoredBackups().size,4)}),test("Restore backups (basics, error case)",async function(){const[a]=await k();try{await a.testRestoreBackups({handles:e=>!0,isOpen:(e,o)=>{throw new Error("unexpected")},createEditor:e=>{throw new Error("unexpected")}})}catch{}r.strictEqual(a.getUnrestoredBackups().size,4)}),test("Restore backups (multiple handlers)",async function(){const[a,e]=await k(),o=a.testRestoreBackups({handles:t=>t.typeId==="testBackupTypeId",isOpen:(t,i)=>!1,createEditor:t=>n.add(e.instantiationService.createInstance(c,e.untitledTextEditorService.create({initialValue:"foo"})))}),s=a.testRestoreBackups({handles:t=>t.typeId.length===0,isOpen:(t,i)=>!1,createEditor:t=>n.add(e.instantiationService.createInstance(c,e.untitledTextEditorService.create({initialValue:"foo"})))});await Promise.all([o,s]),r.strictEqual(e.editorService.count,4),r.ok(e.editorService.editors.every(t=>t.isDirty())),r.strictEqual(a.getUnrestoredBackups().size,0);for(const t of e.editorService.editors)r.ok(t instanceof c),r.strictEqual(t.resolved,!0)}),test("Restore backups (editors already opened)",async function(){const[a,e]=await k();r.strictEqual(a.getUnrestoredBackups().size,0);let o=0,s=0;const t=n.add(e.instantiationService.createInstance(c,e.untitledTextEditorService.create({initialValue:"foo"}))),i=n.add(e.instantiationService.createInstance(c,e.untitledTextEditorService.create({initialValue:"foo"})));await e.editorService.openEditors([{editor:t},{editor:i}]),t.resolved=!1,i.resolved=!1,await a.testRestoreBackups({handles:u=>(o++,u.typeId==="testBackupTypeId"),isOpen:(u,y)=>(s++,!0),createEditor:u=>{throw new Error("unexpected")}}),r.strictEqual(o,4),r.strictEqual(s,4),r.strictEqual(e.editorService.count,2),r.strictEqual(a.getUnrestoredBackups().size,2);for(const u of e.editorService.editors)r.ok(u instanceof c),e.editorService.isVisible(u)?r.strictEqual(u.resolved,!1):r.strictEqual(u.resolved,!0)}),H()});
