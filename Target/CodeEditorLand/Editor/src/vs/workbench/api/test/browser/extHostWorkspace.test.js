import e from"assert";import{CancellationToken as I}from"../../../../base/common/cancellation.js";import{basename as b}from"../../../../base/common/path.js";import{URI as o}from"../../../../base/common/uri.js";import{ExtensionIdentifier as h}from"../../../../platform/extensions/common/extensions.js";import{NullLogService as u}from"../../../../platform/log/common/log.js";import"../../../../platform/workspace/common/workspace.js";import"../../browser/mainThreadWorkspace.js";import{MainContext as T}from"../../common/extHost.protocol.js";import{RelativePattern as E}from"../../common/extHostTypes.js";import{ExtHostWorkspace as v}from"../../common/extHostWorkspace.js";import{mock as w}from"../../../../base/test/common/mock.js";import{TestRPCProtocol as p}from"../common/testRPCProtocol.js";import{ExtHostRpcService as y}from"../../common/extHostRpcService.js";import"../../common/extHostInitDataService.js";import"../../../services/search/common/queryBuilder.js";import"../../../services/search/common/search.js";import{isLinux as M,isWindows as R}from"../../../../base/common/platform.js";import"../../common/extHostFileSystemInfo.js";import{FileSystemProviderCapabilities as U}from"../../../../platform/files/common/files.js";import{nullExtensionDescription as q}from"../../../services/extensions/common/extensions.js";import"../../common/extHostUriTransformerService.js";import{ensureNoDisposablesAreLeakedInTestSuite as O}from"../../../../base/test/common/utils.js";import{ExcludeSettingOptions as $}from"../../../services/search/common/searchExtTypes.js";function f(g,i,x){const s=new v(new y(g),new class extends w(){workspace=i},new class extends w(){getCapabilities(){return M?U.PathCaseSensitive:void 0}},x,new class extends w(){});return s.$initializeWorkspace(i,!0),s}suite("ExtHostWorkspace",function(){O();function g(s,t,n,l){const r=s.getRelativePath(t,l);e.strictEqual(r,n)}test("asRelativePath",()=>{const s=f(new p,{id:"foo",folders:[i(o.file("/Coding/Applications/NewsWoWBot"),0)],name:"Test"},new u);g(s,"/Coding/Applications/NewsWoWBot/bernd/das/brot","bernd/das/brot"),g(s,"/Apps/DartPubCache/hosted/pub.dartlang.org/convert-2.0.1/lib/src/hex.dart","/Apps/DartPubCache/hosted/pub.dartlang.org/convert-2.0.1/lib/src/hex.dart"),g(s,"",""),g(s,"/foo/bar","/foo/bar"),g(s,"in/out","in/out")}),test("asRelativePath, same paths, #11402",function(){const s="/home/aeschli/workspaces/samples/docker",t="/home/aeschli/workspaces/samples/docker",n=f(new p,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u);g(n,t,t),g(n,"/home/aeschli/workspaces/samples/docker/a.file","a.file")}),test("asRelativePath, no workspace",function(){const s=f(new p,null,new u);g(s,"",""),g(s,"/foo/bar","/foo/bar")}),test("asRelativePath, multiple folders",function(){const s=f(new p,{id:"foo",folders:[i(o.file("/Coding/One"),0),i(o.file("/Coding/Two"),1)],name:"Test"},new u);g(s,"/Coding/One/file.txt","One/file.txt"),g(s,"/Coding/Two/files/out.txt","Two/files/out.txt"),g(s,"/Coding/Two2/files/out.txt","/Coding/Two2/files/out.txt")}),test("slightly inconsistent behaviour of asRelativePath and getWorkspaceFolder, #31553",function(){const s=f(new p,{id:"foo",folders:[i(o.file("/Coding/One"),0),i(o.file("/Coding/Two"),1)],name:"Test"},new u);g(s,"/Coding/One/file.txt","One/file.txt"),g(s,"/Coding/One/file.txt","One/file.txt",!0),g(s,"/Coding/One/file.txt","file.txt",!1),g(s,"/Coding/Two/files/out.txt","Two/files/out.txt"),g(s,"/Coding/Two/files/out.txt","Two/files/out.txt",!0),g(s,"/Coding/Two/files/out.txt","files/out.txt",!1),g(s,"/Coding/Two2/files/out.txt","/Coding/Two2/files/out.txt"),g(s,"/Coding/Two2/files/out.txt","/Coding/Two2/files/out.txt",!0),g(s,"/Coding/Two2/files/out.txt","/Coding/Two2/files/out.txt",!1);const t=f(new p,{id:"foo",folders:[i(o.file("/Coding/One"),0)],name:"Test"},new u);g(t,"/Coding/One/file.txt","file.txt"),g(t,"/Coding/One/file.txt","file.txt",!1),g(t,"/Coding/One/file.txt","One/file.txt",!0),g(t,"/Coding/Two2/files/out.txt","/Coding/Two2/files/out.txt"),g(t,"/Coding/Two2/files/out.txt","/Coding/Two2/files/out.txt",!0),g(t,"/Coding/Two2/files/out.txt","/Coding/Two2/files/out.txt",!1)}),test("getPath, legacy",function(){let s=f(new p,{id:"foo",name:"Test",folders:[]},new u);e.strictEqual(s.getPath(),void 0),s=f(new p,null,new u),e.strictEqual(s.getPath(),void 0),s=f(new p,void 0,new u),e.strictEqual(s.getPath(),void 0),s=f(new p,{id:"foo",name:"Test",folders:[i(o.file("Folder"),0),i(o.file("Another/Folder"),1)]},new u),e.strictEqual(s.getPath().replace(/\\/g,"/"),"/Folder"),s=f(new p,{id:"foo",name:"Test",folders:[i(o.file("/Folder"),0)]},new u),e.strictEqual(s.getPath().replace(/\\/g,"/"),"/Folder")}),test("WorkspaceFolder has name and index",function(){const s=f(new p,{id:"foo",folders:[i(o.file("/Coding/One"),0),i(o.file("/Coding/Two"),1)],name:"Test"},new u),[t,n]=s.getWorkspaceFolders();e.strictEqual(t.name,"One"),e.strictEqual(t.index,0),e.strictEqual(n.name,"Two"),e.strictEqual(n.index,1)}),test("getContainingWorkspaceFolder",()=>{const s=f(new p,{id:"foo",name:"Test",folders:[i(o.file("/Coding/One"),0),i(o.file("/Coding/Two"),1),i(o.file("/Coding/Two/Nested"),2)]},new u);let t=s.getWorkspaceFolder(o.file("/foo/bar"));e.strictEqual(t,void 0),t=s.getWorkspaceFolder(o.file("/Coding/One/file/path.txt")),e.strictEqual(t.name,"One"),t=s.getWorkspaceFolder(o.file("/Coding/Two/file/path.txt")),e.strictEqual(t.name,"Two"),t=s.getWorkspaceFolder(o.file("/Coding/Two/Nest")),e.strictEqual(t.name,"Two"),t=s.getWorkspaceFolder(o.file("/Coding/Two/Nested/file")),e.strictEqual(t.name,"Nested"),t=s.getWorkspaceFolder(o.file("/Coding/Two/Nested/f")),e.strictEqual(t.name,"Nested"),t=s.getWorkspaceFolder(o.file("/Coding/Two/Nested"),!0),e.strictEqual(t.name,"Two"),t=s.getWorkspaceFolder(o.file("/Coding/Two/Nested/"),!0),e.strictEqual(t.name,"Two"),t=s.getWorkspaceFolder(o.file("/Coding/Two/Nested")),e.strictEqual(t.name,"Nested"),t=s.getWorkspaceFolder(o.file("/Coding/Two/Nested/")),e.strictEqual(t.name,"Nested"),t=s.getWorkspaceFolder(o.file("/Coding/Two"),!0),e.strictEqual(t,void 0),t=s.getWorkspaceFolder(o.file("/Coding/Two"),!1),e.strictEqual(t.name,"Two")}),test("Multiroot change event should have a delta, #29641",function(s){const t=f(new p,{id:"foo",name:"Test",folders:[]},new u);let n=!1;const l=d=>{n||(n=!0,s(d))};let r=t.onDidChangeWorkspace(d=>{try{e.deepStrictEqual(d.added,[]),e.deepStrictEqual(d.removed,[])}catch(a){l(a)}});t.$acceptWorkspaceData({id:"foo",name:"Test",folders:[]}),r.dispose(),r=t.onDidChangeWorkspace(d=>{try{e.deepStrictEqual(d.removed,[]),e.strictEqual(d.added.length,1),e.strictEqual(d.added[0].uri.toString(),"foo:bar")}catch(a){l(a)}}),t.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar"),0)]}),r.dispose(),r=t.onDidChangeWorkspace(d=>{try{e.deepStrictEqual(d.removed,[]),e.strictEqual(d.added.length,1),e.strictEqual(d.added[0].uri.toString(),"foo:bar2")}catch(a){l(a)}}),t.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar"),0),i(o.parse("foo:bar2"),1)]}),r.dispose(),r=t.onDidChangeWorkspace(d=>{try{e.strictEqual(d.removed.length,2),e.strictEqual(d.removed[0].uri.toString(),"foo:bar"),e.strictEqual(d.removed[1].uri.toString(),"foo:bar2"),e.strictEqual(d.added.length,1),e.strictEqual(d.added[0].uri.toString(),"foo:bar3")}catch(a){l(a)}}),t.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar3"),0)]}),r.dispose(),l()}),test("Multiroot change keeps existing workspaces live",function(){const s=f(new p,{id:"foo",name:"Test",folders:[i(o.parse("foo:bar"),0)]},new u),t=s.getWorkspaceFolders()[0];s.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar2"),0),i(o.parse("foo:bar"),1,"renamed")]}),e.strictEqual(s.getWorkspaceFolders()[1],t),e.strictEqual(t.index,1),e.strictEqual(t.name,"renamed"),s.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar3"),0),i(o.parse("foo:bar2"),1),i(o.parse("foo:bar"),2)]}),e.strictEqual(s.getWorkspaceFolders()[2],t),e.strictEqual(t.index,2),s.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar3"),0)]}),s.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar3"),0),i(o.parse("foo:bar"),1)]}),e.notStrictEqual(t,s.workspace.folders[0])}),test("updateWorkspaceFolders - invalid arguments",function(){let s=f(new p,{id:"foo",name:"Test",folders:[]},new u);e.strictEqual(!1,s.updateWorkspaceFolders(q,null,null)),e.strictEqual(!1,s.updateWorkspaceFolders(q,0,0)),e.strictEqual(!1,s.updateWorkspaceFolders(q,0,1)),e.strictEqual(!1,s.updateWorkspaceFolders(q,1,0)),e.strictEqual(!1,s.updateWorkspaceFolders(q,-1,0)),e.strictEqual(!1,s.updateWorkspaceFolders(q,-1,-1)),s=f(new p,{id:"foo",name:"Test",folders:[i(o.parse("foo:bar"),0)]},new u),e.strictEqual(!1,s.updateWorkspaceFolders(q,1,1)),e.strictEqual(!1,s.updateWorkspaceFolders(q,0,2)),e.strictEqual(!1,s.updateWorkspaceFolders(q,0,1,x(o.parse("foo:bar"))))}),test("updateWorkspaceFolders - valid arguments",function(s){let t=!1;const n=m=>{t||(t=!0,s(m))},r=f({getProxy:()=>{},set:()=>{},dispose:()=>{},assertRegistered:()=>{},drain:()=>{}},{id:"foo",name:"Test",folders:[]},new u);e.strictEqual(!0,r.updateWorkspaceFolders(q,0,0,x(o.parse("foo:bar")))),e.strictEqual(1,r.workspace.folders.length),e.strictEqual(r.workspace.folders[0].uri.toString(),o.parse("foo:bar").toString());const d=r.getWorkspaceFolders()[0];let a=!1,c=r.onDidChangeWorkspace(m=>{try{e.deepStrictEqual(m.removed,[]),e.strictEqual(m.added.length,1),e.strictEqual(m.added[0].uri.toString(),"foo:bar"),e.strictEqual(m.added[0],d),a=!0}catch(C){n(C)}});r.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar"),0)]}),e.strictEqual(a,!0),c.dispose(),e.strictEqual(r.getWorkspaceFolders()[0],d),e.strictEqual(!0,r.updateWorkspaceFolders(q,1,0,x(o.parse("foo:bar1")),x(o.parse("foo:bar2")))),e.strictEqual(3,r.workspace.folders.length),e.strictEqual(r.workspace.folders[0].uri.toString(),o.parse("foo:bar").toString()),e.strictEqual(r.workspace.folders[1].uri.toString(),o.parse("foo:bar1").toString()),e.strictEqual(r.workspace.folders[2].uri.toString(),o.parse("foo:bar2").toString());const k=r.getWorkspaceFolders()[1],W=r.getWorkspaceFolders()[2];a=!1,c=r.onDidChangeWorkspace(m=>{try{e.deepStrictEqual(m.removed,[]),e.strictEqual(m.added.length,2),e.strictEqual(m.added[0].uri.toString(),"foo:bar1"),e.strictEqual(m.added[1].uri.toString(),"foo:bar2"),e.strictEqual(m.added[0],k),e.strictEqual(m.added[1],W),a=!0}catch(C){n(C)}}),r.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar"),0),i(o.parse("foo:bar1"),1),i(o.parse("foo:bar2"),2)]}),e.strictEqual(a,!0),c.dispose(),e.strictEqual(r.getWorkspaceFolders()[0],d),e.strictEqual(r.getWorkspaceFolders()[1],k),e.strictEqual(r.getWorkspaceFolders()[2],W),e.strictEqual(!0,r.updateWorkspaceFolders(q,2,1)),e.strictEqual(2,r.workspace.folders.length),e.strictEqual(r.workspace.folders[0].uri.toString(),o.parse("foo:bar").toString()),e.strictEqual(r.workspace.folders[1].uri.toString(),o.parse("foo:bar1").toString()),a=!1,c=r.onDidChangeWorkspace(m=>{try{e.deepStrictEqual(m.added,[]),e.strictEqual(m.removed.length,1),e.strictEqual(m.removed[0],W),a=!0}catch(C){n(C)}}),r.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar"),0),i(o.parse("foo:bar1"),1)]}),e.strictEqual(a,!0),c.dispose(),e.strictEqual(r.getWorkspaceFolders()[0],d),e.strictEqual(r.getWorkspaceFolders()[1],k),e.strictEqual(!0,r.updateWorkspaceFolders(q,0,2,x(o.parse("foo:bar"),"renamed 1"),x(o.parse("foo:bar1"),"renamed 2"))),e.strictEqual(2,r.workspace.folders.length),e.strictEqual(r.workspace.folders[0].uri.toString(),o.parse("foo:bar").toString()),e.strictEqual(r.workspace.folders[1].uri.toString(),o.parse("foo:bar1").toString()),e.strictEqual(r.workspace.folders[0].name,"renamed 1"),e.strictEqual(r.workspace.folders[1].name,"renamed 2"),e.strictEqual(r.getWorkspaceFolders()[0].name,"renamed 1"),e.strictEqual(r.getWorkspaceFolders()[1].name,"renamed 2"),a=!1,c=r.onDidChangeWorkspace(m=>{try{e.deepStrictEqual(m.added,[]),e.strictEqual(m.removed.length,0),a=!0}catch(C){n(C)}}),r.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar"),0,"renamed 1"),i(o.parse("foo:bar1"),1,"renamed 2")]}),e.strictEqual(a,!0),c.dispose(),e.strictEqual(r.getWorkspaceFolders()[0],d),e.strictEqual(r.getWorkspaceFolders()[1],k),e.strictEqual(r.workspace.folders[0].name,"renamed 1"),e.strictEqual(r.workspace.folders[1].name,"renamed 2"),e.strictEqual(r.getWorkspaceFolders()[0].name,"renamed 1"),e.strictEqual(r.getWorkspaceFolders()[1].name,"renamed 2"),e.strictEqual(!0,r.updateWorkspaceFolders(q,0,2,x(o.parse("foo:bar3")),x(o.parse("foo:bar4")))),e.strictEqual(2,r.workspace.folders.length),e.strictEqual(r.workspace.folders[0].uri.toString(),o.parse("foo:bar3").toString()),e.strictEqual(r.workspace.folders[1].uri.toString(),o.parse("foo:bar4").toString());const F=r.getWorkspaceFolders()[0],P=r.getWorkspaceFolders()[1];a=!1,c=r.onDidChangeWorkspace(m=>{try{e.strictEqual(m.added.length,2),e.strictEqual(m.added[0],F),e.strictEqual(m.added[1],P),e.strictEqual(m.removed.length,2),e.strictEqual(m.removed[0],d),e.strictEqual(m.removed[1],k),a=!0}catch(C){n(C)}}),r.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar3"),0),i(o.parse("foo:bar4"),1)]}),e.strictEqual(a,!0),c.dispose(),e.strictEqual(r.getWorkspaceFolders()[0],F),e.strictEqual(r.getWorkspaceFolders()[1],P),e.strictEqual(!0,r.updateWorkspaceFolders(q,0,2,x(o.parse("foo:bar4")),x(o.parse("foo:bar3")))),e.strictEqual(2,r.workspace.folders.length),e.strictEqual(r.workspace.folders[0].uri.toString(),o.parse("foo:bar4").toString()),e.strictEqual(r.workspace.folders[1].uri.toString(),o.parse("foo:bar3").toString()),e.strictEqual(r.getWorkspaceFolders()[0],P),e.strictEqual(r.getWorkspaceFolders()[1],F),a=!1,c=r.onDidChangeWorkspace(m=>{try{e.strictEqual(m.added.length,0),e.strictEqual(m.removed.length,0),a=!0}catch(C){n(C)}}),r.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar4"),0),i(o.parse("foo:bar3"),1)]}),e.strictEqual(a,!0),c.dispose(),e.strictEqual(r.getWorkspaceFolders()[0],P),e.strictEqual(r.getWorkspaceFolders()[1],F),e.strictEqual(P.index,0),e.strictEqual(F.index,1),e.strictEqual(!0,r.updateWorkspaceFolders(q,2,0,x(o.parse("foo:bar5")))),e.strictEqual(3,r.workspace.folders.length),e.strictEqual(r.workspace.folders[0].uri.toString(),o.parse("foo:bar4").toString()),e.strictEqual(r.workspace.folders[1].uri.toString(),o.parse("foo:bar3").toString()),e.strictEqual(r.workspace.folders[2].uri.toString(),o.parse("foo:bar5").toString());const S=r.getWorkspaceFolders()[2];a=!1,c=r.onDidChangeWorkspace(m=>{try{e.strictEqual(m.added.length,1),e.strictEqual(m.added[0],S),a=!0}catch(C){n(C)}}),r.$acceptWorkspaceData({id:"foo",name:"Test",folders:[i(o.parse("foo:bar4"),0),i(o.parse("foo:bar3"),1),i(o.parse("foo:bar5"),2)]}),e.strictEqual(a,!0),c.dispose(),e.strictEqual(r.getWorkspaceFolders()[0],P),e.strictEqual(r.getWorkspaceFolders()[1],F),e.strictEqual(r.getWorkspaceFolders()[2],S),n()}),test("Multiroot change event is immutable",function(s){let t=!1;const n=d=>{t||(t=!0,s(d))},l=f(new p,{id:"foo",name:"Test",folders:[]},new u),r=l.onDidChangeWorkspace(d=>{try{e.throws(()=>{d.added=[]})}catch(a){n(a)}});l.$acceptWorkspaceData({id:"foo",name:"Test",folders:[]}),r.dispose(),n()}),test("`vscode.workspace.getWorkspaceFolder(file)` don't return workspace folder when file open from command line. #36221",function(){if(R){const s=f(new p,{id:"foo",name:"Test",folders:[i(o.file("c:/Users/marek/Desktop/vsc_test/"),0)]},new u);e.ok(s.getWorkspaceFolder(o.file("c:/Users/marek/Desktop/vsc_test/a.txt"))),e.ok(s.getWorkspaceFolder(o.file("C:/Users/marek/Desktop/vsc_test/b.txt")))}});function i(s,t,n=""){return{uri:s,index:t,name:n||b(s.path)}}function x(s,t){return{uri:s,name:t}}suite("findFiles -",function(){test("string include",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.includePattern,"foo"),e.strictEqual(d,null),e.strictEqual(a.excludePattern,void 0),e.strictEqual(a.disregardExcludeSettings,!1),e.strictEqual(a.maxResults,10),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles("foo",void 0,10,new h("test")).then(()=>{e(l,"mainThreadCalled")})});function s(t){const n="/project/foo",l=new p;let r=!1;return l.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(a,c,k){return r=!0,e.strictEqual(c.includePattern,"glob/**"),e.deepStrictEqual(a?o.from(a).toJSON():null,o.file("/other/folder").toJSON()),e.strictEqual(c.excludePattern,void 0),e.strictEqual(c.disregardExcludeSettings,!1),Promise.resolve(null)}}),f(l,{id:"foo",folders:[i(o.file(n),0)],name:"Test"},new u).findFiles(t,void 0,10,new h("test")).then(()=>{e(r,"mainThreadCalled")})}test("RelativePattern include (string)",()=>s(new E("/other/folder","glob/**"))),test("RelativePattern include (URI)",()=>s(new E(o.file("/other/folder"),"glob/**"))),test("no excludes",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.includePattern,"glob/**"),e.deepStrictEqual(o.revive(d).toString(),o.file("/other/folder").toString()),e.strictEqual(a.excludePattern,void 0),e.strictEqual(a.disregardExcludeSettings,!0),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles(new E("/other/folder","glob/**"),null,10,new h("test")).then(()=>{e(l,"mainThreadCalled")})}),test("with cancelled token",()=>{const t="/project/foo",n=new p;let l=!1;n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(a,c,k){return l=!0,Promise.resolve(null)}});const r=f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u),d=I.Cancelled;return r.findFiles(new E("/other/folder","glob/**"),null,10,new h("test"),d).then(()=>{e(!l,"!mainThreadCalled")})}),test("RelativePattern exclude",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.disregardExcludeSettings,!1),e.strictEqual(a.excludePattern?.length,1),e.strictEqual(a.excludePattern[0].pattern,"glob/**"),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles("",new E(t,"glob/**"),10,new h("test")).then(()=>{e(l,"mainThreadCalled")})})}),suite("findFiles2 -",function(){test("string include",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.filePattern,"foo"),e.strictEqual(a.includePattern,void 0),e.strictEqual(d,null),e.strictEqual(a.excludePattern,void 0),e.strictEqual(a.disregardExcludeSettings,!1),e.strictEqual(a.maxResults,10),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2("foo",{maxResults:10,useDefaultExcludes:!0},new h("test")).then(()=>{e(l,"mainThreadCalled")})});function s(t){const n="/project/foo",l=new p;let r=!1;return l.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(a,c,k){return r=!0,e.strictEqual(c.filePattern,"glob/**"),e.strictEqual(c.includePattern,void 0),e.deepStrictEqual(a?o.from(a).toJSON():null,o.file("/other/folder").toJSON()),e.strictEqual(c.excludePattern,void 0),e.strictEqual(c.disregardExcludeSettings,!1),Promise.resolve(null)}}),f(l,{id:"foo",folders:[i(o.file(n),0)],name:"Test"},new u).findFiles2(t,{maxResults:10},new h("test")).then(()=>{e(r,"mainThreadCalled")})}test("RelativePattern include (string)",()=>s(new E("/other/folder","glob/**"))),test("RelativePattern include (URI)",()=>s(new E(o.file("/other/folder"),"glob/**"))),test("no excludes",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.filePattern,"glob/**"),e.strictEqual(a.includePattern,void 0),e.deepStrictEqual(o.revive(d).toString(),o.file("/other/folder").toString()),e.strictEqual(a.excludePattern,void 0),e.strictEqual(a.disregardExcludeSettings,!1),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2(new E("/other/folder","glob/**"),{},new h("test")).then(()=>{e(l,"mainThreadCalled")})}),test("with cancelled token",()=>{const t="/project/foo",n=new p;let l=!1;n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(a,c,k){return l=!0,Promise.resolve(null)}});const r=f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u),d=I.Cancelled;return r.findFiles2(new E("/other/folder","glob/**"),{},new h("test"),d).then(()=>{e(!l,"!mainThreadCalled")})}),test("RelativePattern exclude",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.disregardExcludeSettings,!1),e.strictEqual(a.excludePattern?.length,1),e.strictEqual(a.excludePattern[0].pattern,"glob/**"),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2("",{exclude:new E(t,"glob/**")},new h("test")).then(()=>{e(l,"mainThreadCalled")})}),test("useIgnoreFiles",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.disregardExcludeSettings,!1),e.strictEqual(a.disregardIgnoreFiles,!1),e.strictEqual(a.disregardGlobalIgnoreFiles,!1),e.strictEqual(a.disregardParentIgnoreFiles,!1),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2("",{useIgnoreFiles:!0,useParentIgnoreFiles:!0,useGlobalIgnoreFiles:!0},new h("test")).then(()=>{e(l,"mainThreadCalled")})}),test("use symlinks",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.ignoreSymlinks,!1),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2("",{followSymlinks:!0},new h("test")).then(()=>{e(l,"mainThreadCalled")})})}),suite("findFiles2New -",function(){test("string include",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.filePattern,"foo"),e.strictEqual(a.includePattern,void 0),e.strictEqual(d,null),e.strictEqual(a.excludePattern,void 0),e.strictEqual(a.disregardExcludeSettings,!1),e.strictEqual(a.maxResults,10),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2New(["foo"],{maxResults:10,useExcludeSettings:$.FilesExclude},new h("test")).then(()=>{e(l,"mainThreadCalled")})});function s(t){const n="/project/foo",l=new p;let r=!1;return l.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(a,c,k){return r=!0,e.strictEqual(c.filePattern,"glob/**"),e.strictEqual(c.includePattern,void 0),e.deepStrictEqual(a?o.from(a).toJSON():null,o.file("/other/folder").toJSON()),e.strictEqual(c.excludePattern,void 0),e.strictEqual(c.disregardExcludeSettings,!1),Promise.resolve(null)}}),f(l,{id:"foo",folders:[i(o.file(n),0)],name:"Test"},new u).findFiles2New(t,{maxResults:10},new h("test")).then(()=>{e(r,"mainThreadCalled")})}test("RelativePattern include (string)",()=>s([new E("/other/folder","glob/**")])),test("RelativePattern include (URI)",()=>s([new E(o.file("/other/folder"),"glob/**")])),test("no excludes",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.filePattern,"glob/**"),e.strictEqual(a.includePattern,void 0),e.deepStrictEqual(o.revive(d).toString(),o.file("/other/folder").toString()),e.strictEqual(a.excludePattern,void 0),e.strictEqual(a.disregardExcludeSettings,!1),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2New([new E("/other/folder","glob/**")],{},new h("test")).then(()=>{e(l,"mainThreadCalled")})}),test("with cancelled token",()=>{const t="/project/foo",n=new p;let l=!1;n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(a,c,k){return l=!0,Promise.resolve(null)}});const r=f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u),d=I.Cancelled;return r.findFiles2New([new E("/other/folder","glob/**")],{},new h("test"),d).then(()=>{e(!l,"!mainThreadCalled")})}),test("RelativePattern exclude",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.disregardExcludeSettings,!1),e.strictEqual(a.excludePattern?.length,1),e.strictEqual(a.excludePattern[0].pattern,"glob/**"),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2New([""],{exclude:[new E(t,"glob/**")]},new h("test")).then(()=>{e(l,"mainThreadCalled")})}),test("useIgnoreFiles",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.disregardExcludeSettings,!1),e.strictEqual(a.disregardIgnoreFiles,!1),e.strictEqual(a.disregardGlobalIgnoreFiles,!1),e.strictEqual(a.disregardParentIgnoreFiles,!1),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2New([""],{useIgnoreFiles:{local:!0,parent:!0,global:!0}},new h("test")).then(()=>{e(l,"mainThreadCalled")})}),test("use symlinks",()=>{const t="/project/foo",n=new p;let l=!1;return n.set(T.MainThreadWorkspace,new class extends w(){$startFileSearch(d,a,c){return l=!0,e.strictEqual(a.ignoreSymlinks,!1),Promise.resolve(null)}}),f(n,{id:"foo",folders:[i(o.file(t),0)],name:"Test"},new u).findFiles2New([""],{followSymlinks:!0},new h("test")).then(()=>{e(l,"mainThreadCalled")})})}),suite("findTextInFiles -",function(){test("no include",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(r,d,a,c,k){return n=!0,e.strictEqual(r.pattern,"foo"),e.strictEqual(d,null),e.strictEqual(a.includePattern,void 0),e.strictEqual(a.excludePattern,void 0),null}}),await f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u).findTextInFiles({pattern:"foo"},{},()=>{},new h("test")),e(n,"mainThreadCalled")}),test("string include",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(r,d,a,c,k){return n=!0,e.strictEqual(r.pattern,"foo"),e.strictEqual(d,null),e.strictEqual(a.includePattern,"**/files"),e.strictEqual(a.excludePattern,void 0),null}}),await f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u).findTextInFiles({pattern:"foo"},{include:"**/files"},()=>{},new h("test")),e(n,"mainThreadCalled")}),test("RelativePattern include",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(r,d,a,c,k){return n=!0,e.strictEqual(r.pattern,"foo"),e.deepStrictEqual(o.revive(d).toString(),o.file("/other/folder").toString()),e.strictEqual(a.includePattern,"glob/**"),e.strictEqual(a.excludePattern,void 0),null}}),await f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u).findTextInFiles({pattern:"foo"},{include:new E("/other/folder","glob/**")},()=>{},new h("test")),e(n,"mainThreadCalled")}),test("with cancelled token",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(d,a,c,k,W){return n=!0,null}});const l=f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u),r=I.Cancelled;await l.findTextInFiles({pattern:"foo"},{},()=>{},new h("test"),r),e(!n,"!mainThreadCalled")}),test("RelativePattern exclude",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(r,d,a,c,k){return n=!0,e.strictEqual(r.pattern,"foo"),e.deepStrictEqual(d,null),e.strictEqual(a.includePattern,void 0),e.strictEqual(a.excludePattern?.length,1),e.strictEqual(a.excludePattern[0].pattern,"glob/**"),null}}),await f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u).findTextInFiles({pattern:"foo"},{exclude:new E("/other/folder","glob/**")},()=>{},new h("test")),e(n,"mainThreadCalled")})}),suite("findTextInFilesNew -",function(){test("no include",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(r,d,a,c,k){return n=!0,e.strictEqual(r.pattern,"foo"),e.strictEqual(d,null),e.strictEqual(a.includePattern,void 0),e.strictEqual(a.excludePattern,void 0),null}}),await f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u).findTextInFilesNew({pattern:"foo"},{},new h("test")).complete,e(n,"mainThreadCalled")}),test("string include",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(r,d,a,c,k){return n=!0,e.strictEqual(r.pattern,"foo"),e.strictEqual(d,null),e.strictEqual(a.includePattern,"**/files"),e.strictEqual(a.excludePattern,void 0),null}}),await f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u).findTextInFilesNew({pattern:"foo"},{include:["**/files"]},new h("test")).complete,e(n,"mainThreadCalled")}),test("RelativePattern include",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(r,d,a,c,k){return n=!0,e.strictEqual(r.pattern,"foo"),e.deepStrictEqual(o.revive(d).toString(),o.file("/other/folder").toString()),e.strictEqual(a.includePattern,"glob/**"),e.strictEqual(a.excludePattern,void 0),null}}),await f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u).findTextInFilesNew({pattern:"foo"},{include:[new E("/other/folder","glob/**")]},new h("test")).complete,e(n,"mainThreadCalled")}),test("with cancelled token",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(d,a,c,k,W){return n=!0,null}});const l=f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u),r=I.Cancelled;await l.findTextInFilesNew({pattern:"foo"},void 0,new h("test"),r).complete,e(!n,"!mainThreadCalled")}),test("RelativePattern exclude",async()=>{const s="/project/foo",t=new p;let n=!1;t.set(T.MainThreadWorkspace,new class extends w(){async $startTextSearch(r,d,a,c,k){return n=!0,e.strictEqual(r.pattern,"foo"),e.deepStrictEqual(d,null),e.strictEqual(a.includePattern,void 0),e.strictEqual(a.excludePattern?.length,1),e.strictEqual(a.excludePattern[0].pattern,"glob/**"),null}}),await f(t,{id:"foo",folders:[i(o.file(s),0)],name:"Test"},new u).findTextInFilesNew({pattern:"foo"},{exclude:[new E("/other/folder","glob/**")]},new h("test")).complete,e(n,"mainThreadCalled")})})});
