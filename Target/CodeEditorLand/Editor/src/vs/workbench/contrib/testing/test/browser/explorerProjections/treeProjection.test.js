import d from"assert";import{Emitter as h}from"../../../../../../base/common/event.js";import{DisposableStore as m}from"../../../../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as f}from"../../../../../../base/test/common/utils.js";import{TreeProjection as I}from"../../../browser/explorerProjections/treeProjection.js";import{TestId as t}from"../../../common/testId.js";import{TestResultItemChangeReason as u}from"../../../common/testResult.js";import{TestDiffOpType as a,TestItemExpandState as i,TestResultState as r}from"../../../common/testTypes.js";import{TestTreeTestHarness as S}from"../testObjectTree.js";import{TestTestItem as n}from"../../common/testStubs.js";class b extends I{}suite("Workbench - Testing Explorer Hierarchal by Location Projection",()=>{let e,s,o,c;teardown(()=>{c.dispose()}),f(),setup(()=>{c=new m,s=c.add(new h),o={results:[],onResultsChanged:()=>{},onTestChanged:s.event,getStateById:()=>({state:{state:0},computedState:0})},e=c.add(new S(l=>new b({},l,o)))}),test("renders initial tree",async()=>{e.flush(),d.deepStrictEqual(e.tree.getRendered(),[{e:"a"},{e:"b"}])}),test("expands children",async()=>{e.flush(),e.tree.expand(e.projection.getElementByTestId(new t(["ctrlId","id-a"]).toString())),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"aa"},{e:"ab"}]},{e:"b"}])}),test("updates render if second test provider appears",async()=>{e.flush(),e.pushDiff({op:a.Add,item:{controllerId:"ctrl2",expand:i.Expanded,item:new n(new t(["ctrlId2"]),"c").toTestItem()}},{op:a.Add,item:{controllerId:"ctrl2",expand:i.NotExpandable,item:new n(new t(["ctrlId2","id-c"]),"ca").toTestItem()}}),d.deepStrictEqual(e.flush(),[{e:"c",children:[{e:"ca"}]},{e:"root",children:[{e:"a"},{e:"b"}]}])}),test("updates nodes if they add children",async()=>{e.flush(),e.tree.expand(e.projection.getElementByTestId(new t(["ctrlId","id-a"]).toString())),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"aa"},{e:"ab"}]},{e:"b"}]),e.c.root.children.get("id-a").children.add(new n(new t(["ctrlId","id-a","id-ac"]),"ac")),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"aa"},{e:"ab"},{e:"ac"}]},{e:"b"}])}),test("updates nodes if they remove children",async()=>{e.flush(),e.tree.expand(e.projection.getElementByTestId(new t(["ctrlId","id-a"]).toString())),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"aa"},{e:"ab"}]},{e:"b"}]),e.c.root.children.get("id-a").children.delete("id-ab"),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"aa"}]},{e:"b"}])}),test("applies state changes",async()=>{e.flush();const l=p=>({item:{extId:new t(["ctrlId","id-a"]).toString(),busy:!1,description:null,error:null,label:"a",range:null,sortText:null,tags:[],uri:void 0},tasks:[],ownComputedState:p,computedState:p,expand:0,controllerId:"ctrl"});o.getStateById=()=>[void 0,l(r.Queued)],s.fire({reason:u.OwnStateChange,result:null,previousState:r.Unset,item:l(r.Queued),previousOwnDuration:void 0}),e.projection.applyTo(e.tree),d.deepStrictEqual(e.tree.getRendered("state"),[{e:"a",data:String(r.Queued)},{e:"b",data:String(r.Unset)}]),o.getStateById=()=>[void 0,l(r.Failed)],s.fire({reason:u.OwnStateChange,result:null,previousState:r.Queued,item:l(r.Unset),previousOwnDuration:void 0}),e.projection.applyTo(e.tree),d.deepStrictEqual(e.tree.getRendered("state"),[{e:"a",data:String(r.Failed)},{e:"b",data:String(r.Unset)}])}),test("applies test changes (resort)",async()=>{e.flush(),e.tree.expand(e.projection.getElementByTestId(new t(["ctrlId","id-a"]).toString())),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"aa"},{e:"ab"}]},{e:"b"}]),e.pushDiff({op:a.Update,item:{extId:new t(["ctrlId","id-a","id-aa"]).toString(),item:{sortText:"z"}}},{op:a.Update,item:{extId:new t(["ctrlId","id-a","id-ab"]).toString(),item:{sortText:"a"}}}),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"ab"},{e:"aa"}]},{e:"b"}]),e.pushDiff({op:a.Update,item:{extId:new t(["ctrlId","id-a","id-aa"]).toString(),item:{sortText:void 0,label:"z"}}},{op:a.Update,item:{extId:new t(["ctrlId","id-a","id-ab"]).toString(),item:{sortText:void 0,label:"a"}}}),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"a"},{e:"z"}]},{e:"b"}]),e.pushDiff({op:a.Update,item:{extId:new t(["ctrlId","id-a","id-aa"]).toString(),item:{label:"a2"}}},{op:a.Update,item:{extId:new t(["ctrlId","id-a","id-ab"]).toString(),item:{label:"z2"}}}),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"a2"},{e:"z2"}]},{e:"b"}])}),test("applies test changes (error)",async()=>{e.flush(),d.deepStrictEqual(e.flush(),[{e:"a"},{e:"b"}]),e.pushDiff({op:a.Update,item:{extId:new t(["ctrlId","id-a"]).toString(),item:{error:"bad"}}}),d.deepStrictEqual(e.flush(),[{e:"a"},{e:"b"}]),e.tree.expand(e.projection.getElementByTestId(new t(["ctrlId","id-a"]).toString())),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"bad"},{e:"aa"},{e:"ab"}]},{e:"b"}]),e.pushDiff({op:a.Update,item:{extId:new t(["ctrlId","id-a"]).toString(),item:{error:"badder"}}}),d.deepStrictEqual(e.flush(),[{e:"a",children:[{e:"badder"},{e:"aa"},{e:"ab"}]},{e:"b"}])}),test("fixes #204805",async()=>{e.flush(),e.pushDiff({op:a.Remove,itemId:"ctrlId"},{op:a.Add,item:{controllerId:"ctrlId",expand:i.NotExpandable,item:new n(new t(["ctrlId"]),"ctrl").toTestItem()}},{op:a.Add,item:{controllerId:"ctrlId",expand:i.NotExpandable,item:new n(new t(["ctrlId","a"]),"a").toTestItem()}}),d.deepStrictEqual(e.flush(),[{e:"a"}]),e.pushDiff({op:a.Add,item:{controllerId:"ctrlId",expand:i.NotExpandable,item:new n(new t(["ctrlId","a","b"]),"b").toTestItem()}}),e.flush(),e.tree.expandAll(),d.deepStrictEqual(e.tree.getRendered(),[{e:"a",children:[{e:"b"}]}]),e.pushDiff({op:a.Add,item:{controllerId:"ctrlId",expand:i.NotExpandable,item:new n(new t(["ctrlId","a","b","c"]),"c").toTestItem()}}),e.flush(),e.tree.expandAll(),d.deepStrictEqual(e.tree.getRendered(),[{e:"a",children:[{e:"b",children:[{e:"c"}]}]}])}),test("fixes #213316 (single root)",async()=>{e.flush(),d.deepStrictEqual(e.tree.getRendered(),[{e:"a"},{e:"b"}]),e.pushDiff({op:a.Remove,itemId:new t(["ctrlId","id-a"]).toString()}),e.flush(),d.deepStrictEqual(e.tree.getRendered(),[{e:"b"}])}),test("fixes #213316 (multi root)",async()=>{e.pushDiff({op:a.Add,item:{controllerId:"ctrl2",expand:i.Expanded,item:new n(new t(["ctrlId2"]),"c").toTestItem()}},{op:a.Add,item:{controllerId:"ctrl2",expand:i.NotExpandable,item:new n(new t(["ctrlId2","id-c"]),"ca").toTestItem()}}),e.flush(),d.deepStrictEqual(e.flush(),[{e:"c",children:[{e:"ca"}]},{e:"root",children:[{e:"a"},{e:"b"}]}]),e.pushDiff({op:a.Remove,itemId:new t(["ctrlId","id-a"]).toString()}),e.flush(),d.deepStrictEqual(e.tree.getRendered(),[{e:"c",children:[{e:"ca"}]},{e:"root",children:[{e:"b"}]}]),e.pushDiff({op:a.Remove,itemId:new t(["ctrlId","id-b"]).toString()}),e.flush(),d.deepStrictEqual(e.tree.getRendered(),[{e:"ca"}])})});
