var L=Object.defineProperty;var K=Object.getOwnPropertyDescriptor;var g=(w,s,i,r)=>{for(var t=r>1?void 0:r?K(s,i):s,c=w.length-1,n;c>=0;c--)(n=w[c])&&(t=(r?n(s,i,t):n(t))||t);return r&&t&&L(s,i,t),t},m=(w,s)=>(i,r)=>s(i,r,w);import{localize as u,localize2 as y}from"../../../../nls.js";import{IQuickInputService as b,ItemActivation as Q}from"../../../../platform/quickinput/common/quickInput.js";import{PickerQuickAccessProvider as A}from"../../../../platform/quickinput/browser/pickerQuickAccess.js";import{IViewDescriptorService as R,ViewContainerLocation as d}from"../../../common/views.js";import{IViewsService as B}from"../../../services/views/common/viewsService.js";import{IOutputService as G}from"../../../services/output/common/output.js";import{ITerminalGroupService as O,ITerminalService as F}from"../../terminal/browser/terminal.js";import{IContextKeyService as M}from"../../../../platform/contextkey/common/contextkey.js";import"../../../browser/panecomposite.js";import{matchesFuzzy as T}from"../../../../base/common/filters.js";import{fuzzyContains as q}from"../../../../base/common/strings.js";import{IKeybindingService as z}from"../../../../platform/keybinding/common/keybinding.js";import{Action2 as V}from"../../../../platform/actions/common/actions.js";import"../../../../platform/instantiation/common/instantiation.js";import{KeyMod as k,KeyCode as P}from"../../../../base/common/keyCodes.js";import{KeybindingWeight as N}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{Categories as D}from"../../../../platform/action/common/actionCommonCategories.js";import{IPaneCompositePartService as W}from"../../../services/panecomposite/browser/panecomposite.js";import{IDebugService as X,REPL_VIEW_ID as x}from"../../debug/common/debug.js";let v=class extends A{constructor(i,r,t,c,n,e,a,o){super(v.PREFIX,{noResultsPick:{label:u("noViewResults","No matching views"),containerLabel:""}});this.viewDescriptorService=i;this.viewsService=r;this.outputService=t;this.terminalService=c;this.terminalGroupService=n;this.debugService=e;this.paneCompositeService=a;this.contextKeyService=o}static PREFIX="view ";_getPicks(i){const r=this.doGetViewPickItems().filter(e=>i?(e.highlights={label:T(i,e.label,!0)??void 0},e.highlights.label||q(e.containerLabel,i)):!0),t=new Map;for(const e of r)t.has(e.label)||t.set(e.label,e.containerLabel);const c=[];let n;for(const e of r){if(n!==e.containerLabel){n=e.containerLabel;let a;t.has(n)?a=`${t.get(n)} / ${n}`:a=n,c.push({type:"separator",label:a})}c.push(e)}return c}doGetViewPickItems(){const i=[],r=(e,a)=>{const o=this.viewDescriptorService.getViewContainerModel(a),p=[];for(const l of o.allViewDescriptors)this.contextKeyService.contextMatchesRules(l.when)&&p.push({label:l.name.value,containerLabel:o.title,accept:()=>this.viewsService.openView(l.id,!0)});return p},t=(e,a)=>{const o=this.paneCompositeService.getPaneComposites(e),p=this.paneCompositeService.getVisiblePaneCompositeIds(e);o.sort((l,I)=>{let f=p.findIndex(C=>l.id===C),S=p.findIndex(C=>I.id===C);return f<0&&(f=o.indexOf(l)+p.length),S<0&&(S=o.indexOf(I)+p.length),f-S});for(const l of o)if(this.includeViewContainer(l)){const I=this.viewDescriptorService.getViewContainerById(l.id);I&&i.push({label:this.viewDescriptorService.getViewContainerModel(I).title,containerLabel:a,accept:()=>this.paneCompositeService.openPaneComposite(l.id,e,!0)})}};t(d.Sidebar,u("views","Side Bar")),t(d.Panel,u("panels","Panel")),t(d.AuxiliaryBar,u("secondary side bar","Secondary Side Bar"));const c=e=>{const a=this.paneCompositeService.getPaneComposites(e);for(const o of a){const p=this.viewDescriptorService.getViewContainerById(o.id);p&&i.push(...r(o,p))}};c(d.Sidebar),c(d.Panel),c(d.AuxiliaryBar),this.terminalGroupService.groups.forEach((e,a)=>{e.terminalInstances.forEach((o,p)=>{const l=u("terminalTitle","{0}: {1}",`${a+1}.${p+1}`,o.title);i.push({label:l,containerLabel:u("terminals","Terminal"),accept:async()=>{await this.terminalGroupService.showPanel(!0),this.terminalService.setActiveInstance(o)}})})}),this.debugService.getModel().getSessions(!0).filter(e=>e.hasSeparateRepl()).forEach((e,a)=>{const o=e.name;i.push({label:o,containerLabel:u("debugConsoles","Debug Console"),accept:async()=>{await this.debugService.focusStackFrame(void 0,void 0,e,{explicit:!0}),this.viewsService.isViewVisible(x)||await this.viewsService.openView(x,!0)}})});const n=this.outputService.getChannelDescriptors();for(const e of n)i.push({label:e.label,containerLabel:u("channels","Output"),accept:()=>this.outputService.showChannel(e.id)});return i}includeViewContainer(i){const r=this.viewDescriptorService.getViewContainerById(i.id);return r?.hideIfEmpty?this.viewDescriptorService.getViewContainerModel(r).activeViewDescriptors.length>0:!0}};v=g([m(0,R),m(1,B),m(2,G),m(3,F),m(4,O),m(5,X),m(6,W),m(7,M)],v);class E extends V{static ID="workbench.action.openView";constructor(){super({id:E.ID,title:y("openView","Open View"),category:D.View,f1:!0})}async run(s){s.get(b).quickAccess.show(v.PREFIX)}}class h extends V{static ID="workbench.action.quickOpenView";static KEYBINDING={primary:k.CtrlCmd|P.KeyQ,mac:{primary:k.WinCtrl|P.KeyQ},linux:{primary:0}};constructor(){super({id:h.ID,title:y("quickOpenView","Quick Open View"),category:D.View,f1:!1,keybinding:{weight:N.WorkbenchContrib,when:void 0,...h.KEYBINDING}})}async run(s){const i=s.get(z),r=s.get(b),t=i.lookupKeybindings(h.ID);r.quickAccess.show(v.PREFIX,{quickNavigateConfiguration:{keybindings:t},itemActivation:Q.FIRST})}}export{E as OpenViewPickerAction,h as QuickAccessViewPickerAction,v as ViewQuickAccessProvider};
