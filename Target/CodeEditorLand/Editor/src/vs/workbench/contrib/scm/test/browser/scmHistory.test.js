import*as t from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as o}from"../../../../../base/test/common/utils.js";import"../../../../../platform/theme/common/colorUtils.js";import{colorRegistry as l,historyItemGroupBase as r,historyItemGroupLocal as c,historyItemGroupRemote as n,toISCMHistoryItemViewModelArray as e}from"../../browser/scmHistory.js";import"../../common/history.js";function s(a,i,u){return{id:a,parentIds:i,subject:"",message:"",labels:u}}suite("toISCMHistoryItemViewModelArray",()=>{o(),test("empty graph",()=>{const a=e([]);t.strictEqual(a.length,0)}),test("single commit",()=>{const a=[s("a",[])],i=e(a);t.strictEqual(i.length,1),t.strictEqual(i[0].inputSwimlanes.length,0),t.strictEqual(i[0].outputSwimlanes.length,0)}),test("linear graph",()=>{const a=[s("a",["b"]),s("b",["c"]),s("c",["d"]),s("d",["e"]),s("e",[])],i=e(a);t.strictEqual(i.length,5),t.strictEqual(i[0].inputSwimlanes.length,0),t.strictEqual(i[0].outputSwimlanes.length,1),t.strictEqual(i[0].outputSwimlanes[0].id,"b"),t.strictEqual(i[0].outputSwimlanes[0].color,l[0]),t.strictEqual(i[1].inputSwimlanes.length,1),t.strictEqual(i[1].inputSwimlanes[0].id,"b"),t.strictEqual(i[1].inputSwimlanes[0].color,l[0]),t.strictEqual(i[1].outputSwimlanes.length,1),t.strictEqual(i[1].outputSwimlanes[0].id,"c"),t.strictEqual(i[1].outputSwimlanes[0].color,l[0]),t.strictEqual(i[2].inputSwimlanes.length,1),t.strictEqual(i[2].inputSwimlanes[0].id,"c"),t.strictEqual(i[2].inputSwimlanes[0].color,l[0]),t.strictEqual(i[2].outputSwimlanes.length,1),t.strictEqual(i[2].outputSwimlanes[0].id,"d"),t.strictEqual(i[2].outputSwimlanes[0].color,l[0]),t.strictEqual(i[3].inputSwimlanes.length,1),t.strictEqual(i[3].inputSwimlanes[0].id,"d"),t.strictEqual(i[3].inputSwimlanes[0].color,l[0]),t.strictEqual(i[3].outputSwimlanes.length,1),t.strictEqual(i[3].outputSwimlanes[0].id,"e"),t.strictEqual(i[3].outputSwimlanes[0].color,l[0]),t.strictEqual(i[4].inputSwimlanes.length,1),t.strictEqual(i[4].inputSwimlanes[0].id,"e"),t.strictEqual(i[4].inputSwimlanes[0].color,l[0]),t.strictEqual(i[4].outputSwimlanes.length,0)}),test("merge commit (single commit in topic branch)",()=>{const a=[s("a",["b"]),s("b",["c","d"]),s("d",["c"]),s("c",["e"]),s("e",["f"])],i=e(a);t.strictEqual(i.length,5),t.strictEqual(i[0].inputSwimlanes.length,0),t.strictEqual(i[0].outputSwimlanes.length,1),t.strictEqual(i[0].outputSwimlanes[0].id,"b"),t.strictEqual(i[0].outputSwimlanes[0].color,l[0]),t.strictEqual(i[1].inputSwimlanes.length,1),t.strictEqual(i[1].inputSwimlanes[0].id,"b"),t.strictEqual(i[1].inputSwimlanes[0].color,l[0]),t.strictEqual(i[1].outputSwimlanes.length,2),t.strictEqual(i[1].outputSwimlanes[0].id,"c"),t.strictEqual(i[1].outputSwimlanes[0].color,l[0]),t.strictEqual(i[1].outputSwimlanes[1].id,"d"),t.strictEqual(i[1].outputSwimlanes[1].color,l[1]),t.strictEqual(i[2].inputSwimlanes.length,2),t.strictEqual(i[2].inputSwimlanes[0].id,"c"),t.strictEqual(i[2].inputSwimlanes[0].color,l[0]),t.strictEqual(i[2].inputSwimlanes[1].id,"d"),t.strictEqual(i[2].inputSwimlanes[1].color,l[1]),t.strictEqual(i[2].outputSwimlanes.length,2),t.strictEqual(i[2].outputSwimlanes[0].id,"c"),t.strictEqual(i[2].outputSwimlanes[0].color,l[0]),t.strictEqual(i[2].outputSwimlanes[1].id,"c"),t.strictEqual(i[2].outputSwimlanes[1].color,l[1]),t.strictEqual(i[3].inputSwimlanes.length,2),t.strictEqual(i[3].inputSwimlanes[0].id,"c"),t.strictEqual(i[3].inputSwimlanes[0].color,l[0]),t.strictEqual(i[3].inputSwimlanes[1].id,"c"),t.strictEqual(i[3].inputSwimlanes[1].color,l[1]),t.strictEqual(i[3].outputSwimlanes.length,1),t.strictEqual(i[3].outputSwimlanes[0].id,"e"),t.strictEqual(i[3].outputSwimlanes[0].color,l[0]),t.strictEqual(i[4].inputSwimlanes.length,1),t.strictEqual(i[4].inputSwimlanes[0].id,"e"),t.strictEqual(i[4].inputSwimlanes[0].color,l[0]),t.strictEqual(i[4].outputSwimlanes.length,1),t.strictEqual(i[4].outputSwimlanes[0].id,"f"),t.strictEqual(i[4].outputSwimlanes[0].color,l[0])}),test("merge commit (multiple commits in topic branch)",()=>{const a=[s("a",["b","c"]),s("c",["d"]),s("b",["e"]),s("e",["f"]),s("f",["d"]),s("d",["g"])],i=e(a);t.strictEqual(i.length,6),t.strictEqual(i[0].inputSwimlanes.length,0),t.strictEqual(i[0].outputSwimlanes.length,2),t.strictEqual(i[0].outputSwimlanes[0].id,"b"),t.strictEqual(i[0].outputSwimlanes[0].color,l[0]),t.strictEqual(i[0].outputSwimlanes[1].id,"c"),t.strictEqual(i[0].outputSwimlanes[1].color,l[1]),t.strictEqual(i[1].inputSwimlanes.length,2),t.strictEqual(i[1].inputSwimlanes[0].id,"b"),t.strictEqual(i[1].inputSwimlanes[0].color,l[0]),t.strictEqual(i[1].inputSwimlanes[1].id,"c"),t.strictEqual(i[1].inputSwimlanes[1].color,l[1]),t.strictEqual(i[1].outputSwimlanes.length,2),t.strictEqual(i[1].outputSwimlanes[0].id,"b"),t.strictEqual(i[1].outputSwimlanes[0].color,l[0]),t.strictEqual(i[1].outputSwimlanes[1].id,"d"),t.strictEqual(i[1].outputSwimlanes[1].color,l[1]),t.strictEqual(i[2].inputSwimlanes.length,2),t.strictEqual(i[2].inputSwimlanes[0].id,"b"),t.strictEqual(i[2].inputSwimlanes[0].color,l[0]),t.strictEqual(i[2].inputSwimlanes[1].id,"d"),t.strictEqual(i[2].inputSwimlanes[1].color,l[1]),t.strictEqual(i[2].outputSwimlanes.length,2),t.strictEqual(i[2].outputSwimlanes[0].id,"e"),t.strictEqual(i[2].outputSwimlanes[0].color,l[0]),t.strictEqual(i[2].outputSwimlanes[1].id,"d"),t.strictEqual(i[2].outputSwimlanes[1].color,l[1]),t.strictEqual(i[3].inputSwimlanes.length,2),t.strictEqual(i[3].inputSwimlanes[0].id,"e"),t.strictEqual(i[3].inputSwimlanes[0].color,l[0]),t.strictEqual(i[3].inputSwimlanes[1].id,"d"),t.strictEqual(i[3].inputSwimlanes[1].color,l[1]),t.strictEqual(i[3].outputSwimlanes.length,2),t.strictEqual(i[3].outputSwimlanes[0].id,"f"),t.strictEqual(i[3].outputSwimlanes[0].color,l[0]),t.strictEqual(i[3].outputSwimlanes[1].id,"d"),t.strictEqual(i[3].outputSwimlanes[1].color,l[1]),t.strictEqual(i[4].inputSwimlanes.length,2),t.strictEqual(i[4].inputSwimlanes[0].id,"f"),t.strictEqual(i[4].inputSwimlanes[0].color,l[0]),t.strictEqual(i[4].inputSwimlanes[1].id,"d"),t.strictEqual(i[4].inputSwimlanes[1].color,l[1]),t.strictEqual(i[4].outputSwimlanes.length,2),t.strictEqual(i[4].outputSwimlanes[0].id,"d"),t.strictEqual(i[4].outputSwimlanes[0].color,l[0]),t.strictEqual(i[4].outputSwimlanes[1].id,"d"),t.strictEqual(i[4].outputSwimlanes[1].color,l[1]),t.strictEqual(i[5].inputSwimlanes.length,2),t.strictEqual(i[5].inputSwimlanes[0].id,"d"),t.strictEqual(i[5].inputSwimlanes[0].color,l[0]),t.strictEqual(i[5].inputSwimlanes[1].id,"d"),t.strictEqual(i[5].inputSwimlanes[1].color,l[1]),t.strictEqual(i[5].outputSwimlanes.length,1),t.strictEqual(i[5].outputSwimlanes[0].id,"g"),t.strictEqual(i[5].outputSwimlanes[0].color,l[0])}),test("create brach from merge commit",()=>{const a=[s("a",["b","c"]),s("c",["b"]),s("b",["d","e"]),s("e",["f"]),s("f",["g"]),s("d",["h"])],i=e(a);t.strictEqual(i.length,6),t.strictEqual(i[0].inputSwimlanes.length,0),t.strictEqual(i[0].outputSwimlanes.length,2),t.strictEqual(i[0].outputSwimlanes[0].id,"b"),t.strictEqual(i[0].outputSwimlanes[0].color,l[0]),t.strictEqual(i[0].outputSwimlanes[1].id,"c"),t.strictEqual(i[0].outputSwimlanes[1].color,l[1]),t.strictEqual(i[1].inputSwimlanes.length,2),t.strictEqual(i[1].inputSwimlanes[0].id,"b"),t.strictEqual(i[1].inputSwimlanes[0].color,l[0]),t.strictEqual(i[1].inputSwimlanes[1].id,"c"),t.strictEqual(i[1].inputSwimlanes[1].color,l[1]),t.strictEqual(i[1].outputSwimlanes.length,2),t.strictEqual(i[1].outputSwimlanes[0].id,"b"),t.strictEqual(i[1].outputSwimlanes[0].color,l[0]),t.strictEqual(i[1].outputSwimlanes[1].id,"b"),t.strictEqual(i[1].outputSwimlanes[1].color,l[1]),t.strictEqual(i[2].inputSwimlanes.length,2),t.strictEqual(i[2].inputSwimlanes[0].id,"b"),t.strictEqual(i[2].inputSwimlanes[0].color,l[0]),t.strictEqual(i[2].inputSwimlanes[1].id,"b"),t.strictEqual(i[2].inputSwimlanes[1].color,l[1]),t.strictEqual(i[2].outputSwimlanes.length,2),t.strictEqual(i[2].outputSwimlanes[0].id,"d"),t.strictEqual(i[2].outputSwimlanes[0].color,l[0]),t.strictEqual(i[2].outputSwimlanes[1].id,"e"),t.strictEqual(i[2].outputSwimlanes[1].color,l[2]),t.strictEqual(i[3].inputSwimlanes.length,2),t.strictEqual(i[3].inputSwimlanes[0].id,"d"),t.strictEqual(i[3].inputSwimlanes[0].color,l[0]),t.strictEqual(i[3].inputSwimlanes[1].id,"e"),t.strictEqual(i[3].inputSwimlanes[1].color,l[2]),t.strictEqual(i[3].outputSwimlanes.length,2),t.strictEqual(i[3].outputSwimlanes[0].id,"d"),t.strictEqual(i[3].outputSwimlanes[0].color,l[0]),t.strictEqual(i[3].outputSwimlanes[1].id,"f"),t.strictEqual(i[3].outputSwimlanes[1].color,l[2]),t.strictEqual(i[4].inputSwimlanes.length,2),t.strictEqual(i[4].inputSwimlanes[0].id,"d"),t.strictEqual(i[4].inputSwimlanes[0].color,l[0]),t.strictEqual(i[4].inputSwimlanes[1].id,"f"),t.strictEqual(i[4].inputSwimlanes[1].color,l[2]),t.strictEqual(i[4].outputSwimlanes.length,2),t.strictEqual(i[4].outputSwimlanes[0].id,"d"),t.strictEqual(i[4].outputSwimlanes[0].color,l[0]),t.strictEqual(i[4].outputSwimlanes[1].id,"g"),t.strictEqual(i[4].outputSwimlanes[1].color,l[2]),t.strictEqual(i[5].inputSwimlanes.length,2),t.strictEqual(i[5].inputSwimlanes[0].id,"d"),t.strictEqual(i[5].inputSwimlanes[0].color,l[0]),t.strictEqual(i[5].inputSwimlanes[1].id,"g"),t.strictEqual(i[5].inputSwimlanes[1].color,l[2]),t.strictEqual(i[5].outputSwimlanes.length,2),t.strictEqual(i[5].outputSwimlanes[0].id,"h"),t.strictEqual(i[5].outputSwimlanes[0].color,l[0]),t.strictEqual(i[5].outputSwimlanes[1].id,"g"),t.strictEqual(i[5].outputSwimlanes[1].color,l[2])}),test("create multiple branches from a commit",()=>{const a=[s("a",["b","c"]),s("c",["d"]),s("b",["e","f"]),s("f",["g"]),s("e",["g"]),s("d",["g"]),s("g",["h"])],i=e(a);t.strictEqual(i.length,7),t.strictEqual(i[0].inputSwimlanes.length,0),t.strictEqual(i[0].outputSwimlanes.length,2),t.strictEqual(i[0].outputSwimlanes[0].id,"b"),t.strictEqual(i[0].outputSwimlanes[0].color,l[0]),t.strictEqual(i[0].outputSwimlanes[1].id,"c"),t.strictEqual(i[0].outputSwimlanes[1].color,l[1]),t.strictEqual(i[1].inputSwimlanes.length,2),t.strictEqual(i[1].inputSwimlanes[0].id,"b"),t.strictEqual(i[1].inputSwimlanes[0].color,l[0]),t.strictEqual(i[1].inputSwimlanes[1].id,"c"),t.strictEqual(i[1].inputSwimlanes[1].color,l[1]),t.strictEqual(i[1].outputSwimlanes.length,2),t.strictEqual(i[1].outputSwimlanes[0].id,"b"),t.strictEqual(i[1].outputSwimlanes[0].color,l[0]),t.strictEqual(i[1].outputSwimlanes[1].id,"d"),t.strictEqual(i[1].outputSwimlanes[1].color,l[1]),t.strictEqual(i[2].inputSwimlanes.length,2),t.strictEqual(i[2].inputSwimlanes[0].id,"b"),t.strictEqual(i[2].inputSwimlanes[0].color,l[0]),t.strictEqual(i[2].inputSwimlanes[1].id,"d"),t.strictEqual(i[2].inputSwimlanes[1].color,l[1]),t.strictEqual(i[2].outputSwimlanes.length,3),t.strictEqual(i[2].outputSwimlanes[0].id,"e"),t.strictEqual(i[2].outputSwimlanes[0].color,l[0]),t.strictEqual(i[2].outputSwimlanes[1].id,"d"),t.strictEqual(i[2].outputSwimlanes[1].color,l[1]),t.strictEqual(i[2].outputSwimlanes[2].id,"f"),t.strictEqual(i[2].outputSwimlanes[2].color,l[2]),t.strictEqual(i[3].inputSwimlanes.length,3),t.strictEqual(i[3].inputSwimlanes[0].id,"e"),t.strictEqual(i[3].inputSwimlanes[0].color,l[0]),t.strictEqual(i[3].inputSwimlanes[1].id,"d"),t.strictEqual(i[3].inputSwimlanes[1].color,l[1]),t.strictEqual(i[3].inputSwimlanes[2].id,"f"),t.strictEqual(i[3].inputSwimlanes[2].color,l[2]),t.strictEqual(i[3].outputSwimlanes.length,3),t.strictEqual(i[3].outputSwimlanes[0].id,"e"),t.strictEqual(i[3].outputSwimlanes[0].color,l[0]),t.strictEqual(i[3].outputSwimlanes[1].id,"d"),t.strictEqual(i[3].outputSwimlanes[1].color,l[1]),t.strictEqual(i[3].outputSwimlanes[2].id,"g"),t.strictEqual(i[3].outputSwimlanes[2].color,l[2]),t.strictEqual(i[4].inputSwimlanes.length,3),t.strictEqual(i[4].inputSwimlanes[0].id,"e"),t.strictEqual(i[4].inputSwimlanes[0].color,l[0]),t.strictEqual(i[4].inputSwimlanes[1].id,"d"),t.strictEqual(i[4].inputSwimlanes[1].color,l[1]),t.strictEqual(i[4].inputSwimlanes[2].id,"g"),t.strictEqual(i[4].inputSwimlanes[2].color,l[2]),t.strictEqual(i[4].outputSwimlanes.length,3),t.strictEqual(i[4].outputSwimlanes[0].id,"g"),t.strictEqual(i[4].outputSwimlanes[0].color,l[0]),t.strictEqual(i[4].outputSwimlanes[1].id,"d"),t.strictEqual(i[4].outputSwimlanes[1].color,l[1]),t.strictEqual(i[4].outputSwimlanes[2].id,"g"),t.strictEqual(i[4].outputSwimlanes[2].color,l[2]),t.strictEqual(i[5].inputSwimlanes.length,3),t.strictEqual(i[5].inputSwimlanes[0].id,"g"),t.strictEqual(i[5].inputSwimlanes[0].color,l[0]),t.strictEqual(i[5].inputSwimlanes[1].id,"d"),t.strictEqual(i[5].inputSwimlanes[1].color,l[1]),t.strictEqual(i[5].inputSwimlanes[2].id,"g"),t.strictEqual(i[5].inputSwimlanes[2].color,l[2]),t.strictEqual(i[5].outputSwimlanes.length,3),t.strictEqual(i[5].outputSwimlanes[0].id,"g"),t.strictEqual(i[5].outputSwimlanes[0].color,l[0]),t.strictEqual(i[5].outputSwimlanes[1].id,"g"),t.strictEqual(i[5].outputSwimlanes[1].color,l[1]),t.strictEqual(i[5].outputSwimlanes[2].id,"g"),t.strictEqual(i[5].outputSwimlanes[2].color,l[2]),t.strictEqual(i[6].inputSwimlanes.length,3),t.strictEqual(i[6].inputSwimlanes[0].id,"g"),t.strictEqual(i[6].inputSwimlanes[0].color,l[0]),t.strictEqual(i[6].inputSwimlanes[1].id,"g"),t.strictEqual(i[6].inputSwimlanes[1].color,l[1]),t.strictEqual(i[6].inputSwimlanes[2].id,"g"),t.strictEqual(i[6].inputSwimlanes[2].color,l[2]),t.strictEqual(i[6].outputSwimlanes.length,1),t.strictEqual(i[6].outputSwimlanes[0].id,"h"),t.strictEqual(i[6].outputSwimlanes[0].color,l[0])}),test("graph with color map",()=>{const a=[s("a",["b"],[{title:"topic"}]),s("b",["c"]),s("c",["d"],[{title:"origin/topic"}]),s("d",["e"]),s("e",["f","g"]),s("g",["h"],[{title:"origin/main"}])],u=e(a,new Map([["topic",c],["origin/topic",n],["origin/main",r]]));t.strictEqual(u.length,6),t.strictEqual(u[0].inputSwimlanes.length,0),t.strictEqual(u[0].outputSwimlanes.length,1),t.strictEqual(u[0].outputSwimlanes[0].id,"b"),t.strictEqual(u[0].outputSwimlanes[0].color,c),t.strictEqual(u[1].inputSwimlanes.length,1),t.strictEqual(u[1].inputSwimlanes[0].id,"b"),t.strictEqual(u[1].inputSwimlanes[0].color,c),t.strictEqual(u[1].outputSwimlanes.length,1),t.strictEqual(u[1].outputSwimlanes[0].id,"c"),t.strictEqual(u[1].outputSwimlanes[0].color,c),t.strictEqual(u[2].inputSwimlanes.length,1),t.strictEqual(u[2].inputSwimlanes[0].id,"c"),t.strictEqual(u[2].inputSwimlanes[0].color,c),t.strictEqual(u[2].outputSwimlanes.length,1),t.strictEqual(u[2].outputSwimlanes[0].id,"d"),t.strictEqual(u[2].outputSwimlanes[0].color,n),t.strictEqual(u[3].inputSwimlanes.length,1),t.strictEqual(u[3].inputSwimlanes[0].id,"d"),t.strictEqual(u[3].inputSwimlanes[0].color,n),t.strictEqual(u[3].outputSwimlanes.length,1),t.strictEqual(u[3].outputSwimlanes[0].id,"e"),t.strictEqual(u[3].outputSwimlanes[0].color,n),t.strictEqual(u[4].inputSwimlanes.length,1),t.strictEqual(u[4].inputSwimlanes[0].id,"e"),t.strictEqual(u[4].inputSwimlanes[0].color,n),t.strictEqual(u[4].outputSwimlanes.length,2),t.strictEqual(u[4].outputSwimlanes[0].id,"f"),t.strictEqual(u[4].outputSwimlanes[0].color,n),t.strictEqual(u[4].outputSwimlanes[1].id,"g"),t.strictEqual(u[4].outputSwimlanes[1].color,r),t.strictEqual(u[5].inputSwimlanes.length,2),t.strictEqual(u[5].inputSwimlanes[0].id,"f"),t.strictEqual(u[5].inputSwimlanes[0].color,n),t.strictEqual(u[5].inputSwimlanes[1].id,"g"),t.strictEqual(u[5].inputSwimlanes[1].color,r),t.strictEqual(u[5].outputSwimlanes.length,2),t.strictEqual(u[5].outputSwimlanes[0].id,"f"),t.strictEqual(u[5].outputSwimlanes[0].color,n),t.strictEqual(u[5].outputSwimlanes[1].id,"h"),t.strictEqual(u[5].outputSwimlanes[1].color,r)})});
