import{CancellationTokenSource as c}from"../../../../../base/common/cancellation.js";import{IntervalTimer as u}from"../../../../../base/common/async.js";import{ensureNoDisposablesAreLeakedInTestSuite as m}from"../../../../../base/test/common/utils.js";import{asProgressiveEdit as d}from"../../browser/utils.js";import t from"assert";suite("AsyncEdit",()=>{m(),test("asProgressiveEdit",async()=>{const i=new u,n={range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1},text:"Hello, world!"},r=new c,s=d(i,n,5,r.token);t.deepStrictEqual(s.range,n.range);const e=s.newText[Symbol.asyncIterator](),a=await e.next();t.strictEqual(a.value,"Hello,"),t.strictEqual(a.done,!1);const o=await e.next();t.strictEqual(o.value," world!"),t.strictEqual(o.done,!1);const l=await e.next();t.strictEqual(l.value,void 0),t.strictEqual(l.done,!0),r.dispose()}),test("asProgressiveEdit - cancellation",async()=>{const i=new u,n={range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1},text:"Hello, world!"},r=new c,s=d(i,n,5,r.token);t.deepStrictEqual(s.range,n.range);const e=s.newText[Symbol.asyncIterator](),a=await e.next();t.strictEqual(a.value,"Hello,"),t.strictEqual(a.done,!1),r.dispose(!0);const o=await e.next();t.strictEqual(o.value,void 0),t.strictEqual(o.done,!0)})});
