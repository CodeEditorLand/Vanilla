var U=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var C=(n,e,t,d)=>{for(var a=d>1?void 0:d?L(e,t):e,l=n.length-1,o;l>=0;l--)(o=n[l])&&(a=(d?o(e,t,a):o(a))||a);return d&&a&&U(e,t,a),a},M=(n,e)=>(t,d)=>e(t,d,n);import r from"assert";import{EditorPane as P,EditorMemento as m}from"../../../../browser/parts/editor/editorPane.js";import{WorkspaceTrustRequiredPlaceholderEditor as A}from"../../../../browser/parts/editor/editorPlaceholder.js";import{EditorExtensions as z,EditorInputCapabilities as H}from"../../../../common/editor.js";import"../../../../../platform/instantiation/common/instantiation.js";import{Registry as O}from"../../../../../platform/registry/common/platform.js";import{SyncDescriptor as S}from"../../../../../platform/instantiation/common/descriptors.js";import{ITelemetryService as J}from"../../../../../platform/telemetry/common/telemetry.js";import{NullTelemetryService as q}from"../../../../../platform/telemetry/common/telemetryUtils.js";import{workbenchInstantiationService as y,TestEditorGroupView as E,TestEditorGroupsService as v,registerTestResourceEditor as F,TestEditorInput as K,createEditorPart as Q,TestTextResourceConfigurationService as I}from"../../workbenchTestServices.js";import{TextResourceEditorInput as B}from"../../../../common/editor/textResourceEditorInput.js";import{TestThemeService as X}from"../../../../../platform/theme/test/common/testThemeService.js";import{URI as s}from"../../../../../base/common/uri.js";import{EditorPaneDescriptor as w}from"../../../../browser/editor.js";import{CancellationToken as Y}from"../../../../../base/common/cancellation.js";import{DisposableStore as h}from"../../../../../base/common/lifecycle.js";import{TestStorageService as x,TestWorkspaceTrustManagementService as Z}from"../../../common/workbenchTestServices.js";import{extUri as W}from"../../../../../base/common/resources.js";import{EditorService as _}from"../../../../services/editor/browser/editorService.js";import{IEditorService as $}from"../../../../services/editor/common/editorService.js";import{IEditorGroupsService as ee}from"../../../../services/editor/common/editorGroupsService.js";import{IWorkspaceTrustManagementService as te}from"../../../../../platform/workspace/common/workspaceTrust.js";import{EditorInput as g}from"../../../../common/editor/editorInput.js";import{TestConfigurationService as re}from"../../../../../platform/configuration/test/common/testConfigurationService.js";import{ensureNoDisposablesAreLeakedInTestSuite as ie}from"../../../../../base/test/common/utils.js";const D=new X,u=O.as(z.EditorPane),k=O.as(z.EditorFactory);class b extends P{constructor(e){const t=new h;super("TestEditor",e,q,D,t.add(new x)),this._register(t)}getId(){return"testEditor"}layout(){}createEditor(){}}class oe extends P{constructor(e){const t=new h;super("testOtherEditor",e,q,D,t.add(new x)),this._register(t)}getId(){return"testOtherEditor"}layout(){}createEditor(){}}class j{canSerialize(e){return!0}serialize(e){return e.toString()}deserialize(e,t){return{}}}class R extends g{resource=void 0;prefersEditorPane(e){return e[1]}get typeId(){return"testInput"}resolve(){return null}}class G extends g{resource=void 0;get typeId(){return"otherTestInput"}resolve(){return null}}class V extends B{}suite("EditorPane",()=>{const n=new h;teardown(()=>{n.clear()}),test("EditorPane API",async()=>{const e=new E(1),t=new b(e);r.ok(t.group);const d=n.add(new G),a={};r(!t.isVisible()),r(!t.input),await t.setInput(d,a,Object.create(null),Y.None),r.strictEqual(d,t.input),t.setVisible(!0),r(t.isVisible()),t.dispose(),t.clearInput(),t.setVisible(!1),r(!t.isVisible()),r(!t.input),r(!t.getControl())}),test("EditorPaneDescriptor",()=>{const e=w.create(b,"id","name");r.strictEqual(e.typeId,"id"),r.strictEqual(e.name,"name")}),test("Editor Pane Registration",function(){const e=w.create(b,"id1","name"),t=w.create(oe,"id2","name"),d=u.getEditorPanes().length,a=u.getEditors().length;n.add(u.registerEditorPane(e,[new S(R)])),n.add(u.registerEditorPane(t,[new S(R),new S(G)])),r.strictEqual(u.getEditorPanes().length,d+2),r.strictEqual(u.getEditors().length,a+3),r.strictEqual(u.getEditorPane(n.add(new R)),t),r.strictEqual(u.getEditorPane(n.add(new G)),t),r.strictEqual(u.getEditorPaneByType("id1"),e),r.strictEqual(u.getEditorPaneByType("id2"),t),r(!u.getEditorPaneByType("id3"))}),test("Editor Pane Lookup favors specific class over superclass (match on specific class)",function(){const e=w.create(b,"id1","name");n.add(F()),n.add(u.registerEditorPane(e,[new S(V)]));const t=y(void 0,n),d=new E(1),a=n.add(u.getEditorPane(n.add(t.createInstance(V,s.file("/fake"),"fake","",void 0,void 0))).instantiate(t,d));r.strictEqual(a.getId(),"testEditor");const l=n.add(u.getEditorPane(n.add(t.createInstance(B,s.file("/fake"),"fake","",void 0,void 0))).instantiate(t,d));r.strictEqual(l.getId(),"workbench.editors.textResourceEditor")}),test("Editor Pane Lookup favors specific class over superclass (match on super class)",function(){const e=y(void 0,n),t=new E(1);n.add(F());const d=n.add(u.getEditorPane(n.add(e.createInstance(V,s.file("/fake"),"fake","",void 0,void 0))).instantiate(e,t));r.strictEqual("workbench.editors.textResourceEditor",d.getId())}),test("Editor Input Serializer",function(){const e=n.add(new K(s.file("/fake"),"testTypeId"));y(void 0,n).invokeFunction(d=>k.start(d)),n.add(k.registerEditorSerializer(e.typeId,j));let t=k.getEditorSerializer("testTypeId");r(t),t=k.getEditorSerializer(e),r(t),r.throws(()=>k.registerEditorSerializer(e.typeId,j))}),test("EditorMemento - basics",function(){const e=new E(0),t=new E(1),d=new E(4),a=new I,l=new v([e,t,new E(2)]),o=Object.create(null);let i=n.add(new m("id","key",o,3,l,a)),c=i.loadEditorState(e,s.file("/A"));r.ok(!c),i.saveEditorState(e,s.file("/A"),{line:3}),c=i.loadEditorState(e,s.file("/A")),r.ok(c),r.strictEqual(c.line,3),i.saveEditorState(t,s.file("/A"),{line:5}),c=i.loadEditorState(t,s.file("/A")),r.ok(c),r.strictEqual(c.line,5),i.saveEditorState(e,s.file("/B"),{line:1}),i.saveEditorState(e,s.file("/C"),{line:1}),i.saveEditorState(e,s.file("/D"),{line:1}),i.saveEditorState(e,s.file("/E"),{line:1}),r.ok(!i.loadEditorState(e,s.file("/A"))),r.ok(!i.loadEditorState(e,s.file("/B"))),r.ok(i.loadEditorState(e,s.file("/C"))),r.ok(i.loadEditorState(e,s.file("/D"))),r.ok(i.loadEditorState(e,s.file("/E"))),i.saveEditorState(d,s.file("/E"),{line:1}),r.ok(i.loadEditorState(d,s.file("/E"))),i.saveEditorState(d,s.file("/C"),{line:1}),r.ok(i.loadEditorState(d,s.file("/C"))),i.saveState(),i=n.add(new m("id","key",o,3,l,a)),r.ok(i.loadEditorState(e,s.file("/C"))),r.ok(i.loadEditorState(e,s.file("/D"))),r.ok(i.loadEditorState(e,s.file("/E"))),r.ok(!i.loadEditorState(d,s.file("/E"))),r.ok(!i.loadEditorState(d,s.file("/C"))),i.clearEditorState(s.file("/C"),d),i.clearEditorState(s.file("/E")),r.ok(!i.loadEditorState(d,s.file("/C"))),r.ok(i.loadEditorState(e,s.file("/D"))),r.ok(!i.loadEditorState(e,s.file("/E")))}),test("EditorMemento - move",function(){const e=new E(0),t=new I,d=new v([e]),a=Object.create(null),l=n.add(new m("id","key",a,3,d,t));l.saveEditorState(e,s.file("/some/folder/file-1.txt"),{line:1}),l.saveEditorState(e,s.file("/some/folder/file-2.txt"),{line:2}),l.saveEditorState(e,s.file("/some/other/file.txt"),{line:3}),l.moveEditorState(s.file("/some/folder/file-1.txt"),s.file("/some/folder/file-moved.txt"),W);let o=l.loadEditorState(e,s.file("/some/folder/file-1.txt"));r.ok(!o),o=l.loadEditorState(e,s.file("/some/folder/file-moved.txt")),r.strictEqual(o?.line,1),l.moveEditorState(s.file("/some/folder"),s.file("/some/folder-moved"),W),o=l.loadEditorState(e,s.file("/some/folder-moved/file-moved.txt")),r.strictEqual(o?.line,1),o=l.loadEditorState(e,s.file("/some/folder-moved/file-2.txt")),r.strictEqual(o?.line,2)}),test("EditoMemento - use with editor input",function(){const e=new E(0);class t extends g{constructor(f,p="testEditorInputForMementoTest"){super();this.resource=f;this.id=p}get typeId(){return"testEditorInputForMementoTest"}async resolve(){return null}matches(f){return f&&this.id===f.id&&f instanceof t}}const d=Object.create(null),a=n.add(new m("id","key",d,3,new v,new I)),l=n.add(new t(s.file("/A")));let o=a.loadEditorState(e,l);r.ok(!o),a.saveEditorState(e,l,{line:3}),o=a.loadEditorState(e,l),r.ok(o),r.strictEqual(o.line,3),l.dispose(),o=a.loadEditorState(e,l),r.ok(!o)}),test("EditoMemento - clear on editor dispose",function(){const e=new E(0);class t extends g{constructor(p,T="testEditorInputForMementoTest"){super();this.resource=p;this.id=T}get typeId(){return"testEditorInputForMementoTest"}async resolve(){return null}matches(p){return p&&this.id===p.id&&p instanceof t}}const d=Object.create(null),a=n.add(new m("id","key",d,3,new v,new I)),l=n.add(new t(s.file("/A")));let o=a.loadEditorState(e,l);r.ok(!o),a.saveEditorState(e,l.resource,{line:3}),o=a.loadEditorState(e,l),r.ok(o),r.strictEqual(o.line,3),l.dispose(),o=a.loadEditorState(e,l),r.ok(o);const i=n.add(new t(s.file("/B")));o=a.loadEditorState(e,i),r.ok(!o),a.saveEditorState(e,i.resource,{line:3}),o=a.loadEditorState(e,i),r.ok(o),r.strictEqual(o.line,3),a.clearEditorStateOnDispose(i.resource,i),i.dispose(),o=a.loadEditorState(e,i),r.ok(!o)}),test("EditorMemento - workbench.editor.sharedViewState",function(){const e=new E(0),t=new E(1),d=new I(new re({workbench:{editor:{sharedViewState:!0}}})),a=new v([e]),l=Object.create(null),o=n.add(new m("id","key",l,3,a,d)),i=s.file("/some/folder/file-1.txt");o.saveEditorState(e,i,{line:1});let c=o.loadEditorState(e,i);r.strictEqual(c.line,1),c=o.loadEditorState(t,i),r.strictEqual(c.line,1),o.saveEditorState(e,i,{line:3}),c=o.loadEditorState(t,i),r.strictEqual(c.line,3),o.saveEditorState(t,i,{line:1}),c=o.loadEditorState(t,i),r.strictEqual(c.line,1),o.clearEditorState(i,e),o.clearEditorState(i,t),c=o.loadEditorState(t,i),r.strictEqual(c.line,1),o.clearEditorState(i),c=o.loadEditorState(t,i),r.ok(!c)}),test("WorkspaceTrustRequiredEditor",async function(){let e=class extends P{constructor(N,ne){super("TestEditor",N,q,D,n.add(new x))}getId(){return"trustRequiredTestEditor"}layout(){}createEditor(){}};e=C([M(1,J)],e);class t extends g{resource=void 0;get typeId(){return"trustRequiredTestInput"}get capabilities(){return H.RequiresTrust}resolve(){return null}}const d=y(void 0,n),a=n.add(d.createInstance(Z));d.stub(te,a),a.setWorkspaceTrust(!1);const l=await Q(d,n);d.stub(ee,l);const o=n.add(d.createInstance(_,void 0));d.stub($,o);const i=l.activeGroup,c=w.create(e,"id1","name");n.add(u.registerEditorPane(c,[new S(t)]));const f=n.add(new t);await i.openEditor(f),r.strictEqual(i.activeEditorPane?.getId(),A.ID);const p=()=>new Promise(T=>{n.add(o.onDidActiveEditorChange(()=>{T(i.activeEditorPane?.getId())}))});a.setWorkspaceTrust(!0),r.strictEqual(await p(),"trustRequiredTestEditor"),a.setWorkspaceTrust(!1),r.strictEqual(await p(),A.ID),await i.closeAllEditors()}),ie()});
