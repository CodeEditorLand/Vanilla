import r from"assert";import{URI as a}from"../../../../base/common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as o}from"../../../../base/test/common/utils.js";import{MarkerSeverity as l}from"../../common/markers.js";import*as n from"../../common/markerService.js";function t(e=l.Error){return{severity:e,message:Math.random().toString(16),startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1}}suite("Marker Service",()=>{let e;teardown(function(){e.dispose()}),o(),test("query",()=>{e=new n.MarkerService,e.changeAll("far",[{resource:a.parse("file:///c/test/file.cs"),marker:t(l.Error)}]),r.strictEqual(e.read().length,1),r.strictEqual(e.read({owner:"far"}).length,1),r.strictEqual(e.read({resource:a.parse("file:///c/test/file.cs")}).length,1),r.strictEqual(e.read({owner:"far",resource:a.parse("file:///c/test/file.cs")}).length,1),e.changeAll("boo",[{resource:a.parse("file:///c/test/file.cs"),marker:t(l.Warning)}]),r.strictEqual(e.read().length,2),r.strictEqual(e.read({owner:"far"}).length,1),r.strictEqual(e.read({owner:"boo"}).length,1),r.strictEqual(e.read({severities:l.Error}).length,1),r.strictEqual(e.read({severities:l.Warning}).length,1),r.strictEqual(e.read({severities:l.Hint}).length,0),r.strictEqual(e.read({severities:l.Error|l.Warning}).length,2)}),test("changeOne override",()=>{e=new n.MarkerService,e.changeOne("far",a.parse("file:///path/only.cs"),[t()]),r.strictEqual(e.read().length,1),r.strictEqual(e.read({owner:"far"}).length,1),e.changeOne("boo",a.parse("file:///path/only.cs"),[t()]),r.strictEqual(e.read().length,2),r.strictEqual(e.read({owner:"far"}).length,1),r.strictEqual(e.read({owner:"boo"}).length,1),e.changeOne("far",a.parse("file:///path/only.cs"),[t(),t()]),r.strictEqual(e.read({owner:"far"}).length,2),r.strictEqual(e.read({owner:"boo"}).length,1)}),test("changeOne/All clears",()=>{e=new n.MarkerService,e.changeOne("far",a.parse("file:///path/only.cs"),[t()]),e.changeOne("boo",a.parse("file:///path/only.cs"),[t()]),r.strictEqual(e.read({owner:"far"}).length,1),r.strictEqual(e.read({owner:"boo"}).length,1),r.strictEqual(e.read().length,2),e.changeOne("far",a.parse("file:///path/only.cs"),[]),r.strictEqual(e.read({owner:"far"}).length,0),r.strictEqual(e.read({owner:"boo"}).length,1),r.strictEqual(e.read().length,1),e.changeAll("boo",[]),r.strictEqual(e.read({owner:"far"}).length,0),r.strictEqual(e.read({owner:"boo"}).length,0),r.strictEqual(e.read().length,0)}),test("changeAll sends event for cleared",()=>{e=new n.MarkerService,e.changeAll("far",[{resource:a.parse("file:///d/path"),marker:t()},{resource:a.parse("file:///d/path"),marker:t()}]),r.strictEqual(e.read({owner:"far"}).length,2);const s=e.onMarkerChanged(c=>{r.strictEqual(c.length,1),c.forEach(i=>r.strictEqual(i.toString(),"file:///d/path")),r.strictEqual(e.read({owner:"far"}).length,0)});e.changeAll("far",[]),s.dispose()}),test("changeAll merges",()=>{e=new n.MarkerService,e.changeAll("far",[{resource:a.parse("file:///c/test/file.cs"),marker:t()},{resource:a.parse("file:///c/test/file.cs"),marker:t()}]),r.strictEqual(e.read({owner:"far"}).length,2)}),test("changeAll must not break integrety, issue #12635",()=>{e=new n.MarkerService,e.changeAll("far",[{resource:a.parse("scheme:path1"),marker:t()},{resource:a.parse("scheme:path2"),marker:t()}]),e.changeAll("boo",[{resource:a.parse("scheme:path1"),marker:t()}]),e.changeAll("far",[{resource:a.parse("scheme:path1"),marker:t()},{resource:a.parse("scheme:path2"),marker:t()}]),r.strictEqual(e.read({owner:"far"}).length,2),r.strictEqual(e.read({resource:a.parse("scheme:path1")}).length,2)}),test("invalid marker data",()=>{const s=t();e=new n.MarkerService,s.message=void 0,e.changeOne("far",a.parse("some:uri/path"),[s]),r.strictEqual(e.read({owner:"far"}).length,0),s.message=null,e.changeOne("far",a.parse("some:uri/path"),[s]),r.strictEqual(e.read({owner:"far"}).length,0),s.message="null",e.changeOne("far",a.parse("some:uri/path"),[s]),r.strictEqual(e.read({owner:"far"}).length,1)}),test("MapMap#remove returns bad values, https://github.com/microsoft/vscode/issues/13548",()=>{e=new n.MarkerService,e.changeOne("o",a.parse("some:uri/1"),[t()]),e.changeOne("o",a.parse("some:uri/2"),[])}),test("Error code of zero in markers get removed, #31275",function(){const s={code:"0",startLineNumber:1,startColumn:2,endLineNumber:1,endColumn:5,message:"test",severity:0,source:"me"};e=new n.MarkerService,e.changeOne("far",a.parse("some:thing"),[s]);const c=e.read({resource:a.parse("some:thing")});r.strictEqual(c.length,1),r.strictEqual(c[0].code,"0")})});
