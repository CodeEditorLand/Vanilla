import{mainWindow as a}from"../../../base/browser/window.js";import{ErrorNoTelemetry as u}from"../../../base/common/errors.js";import{toDisposable as E}from"../../../base/common/lifecycle.js";import l from"../common/errorTelemetry.js";class d extends l{installErrorListeners(){let t;const i=this;typeof a.onerror=="function"&&(t=a.onerror),a.onerror=function(n,e,r,o,s){i._onUncaughtError(n,e,r,o,s),t?.apply(this,[n,e,r,o,s])},this._disposables.add(E(()=>{t&&(a.onerror=t)}))}_onUncaughtError(t,i,n,e,r){const o={callstack:t,msg:t,file:i,line:n,column:e};if(r){if(u.isErrorNoTelemetry(r))return;const{name:s,message:c,stack:m}=r;o.uncaught_error_name=s,c&&(o.uncaught_error_msg=c),m&&(o.callstack=Array.isArray(r.stack)?r.stack=r.stack.join(`
`):r.stack)}this._enqueue(o)}}export{d as default};
