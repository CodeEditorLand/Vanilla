import u from"assert";import{decodeKeybinding as R,createSimpleKeybinding as x}from"../../../../base/common/keybindings.js";import{KeyChord as c,KeyCode as e,KeyMod as o}from"../../../../base/common/keyCodes.js";import{OS as g}from"../../../../base/common/platform.js";import{ensureNoDisposablesAreLeakedInTestSuite as I}from"../../../../base/test/common/utils.js";import{ContextKeyExpr as l}from"../../../contextkey/common/contextkey.js";import{KeybindingResolver as i,ResultKind as v}from"../../common/keybindingResolver.js";import{ResolvedKeybindingItem as S}from"../../common/resolvedKeybindingItem.js";import{USLayoutResolvedKeybinding as w}from"../../common/usLayoutResolvedKeybinding.js";import{createUSLayoutResolvedKeybinding as B}from"./keybindingsTestUtils.js";function y(t){return{getValue:k=>t[k]}}suite("KeybindingResolver",()=>{I();function t(n,s,r,d,a){const f=B(n,g);return new S(f,s,r,d,a,null,!1)}function k(n){return w.getDispatchStr(n)}test("resolve key",()=>{const n=o.CtrlCmd|o.Shift|e.KeyZ,s=x(n,g),r=l.equals("bar","baz"),d=t(n,"yes",null,r,!0);u.strictEqual(r.evaluate(y({bar:"baz"})),!0),u.strictEqual(r.evaluate(y({bar:"bz"})),!1);const a=new i([d],[],()=>{}),f=a.resolve(y({bar:"baz"}),[],k(s));u.ok(f.kind===v.KbFound),u.strictEqual(f.commandId,"yes");const m=a.resolve(y({bar:"bz"}),[],k(s));u.strictEqual(m.kind,v.NoMatchingKb)}),test("resolve key with arguments",()=>{const n={text:"no"},s=o.CtrlCmd|o.Shift|e.KeyZ,r=x(s,g),d=l.equals("bar","baz"),a=t(s,"yes",n,d,!0),m=new i([a],[],()=>{}).resolve(y({bar:"baz"}),[],k(r));u.ok(m.kind===v.KbFound),u.strictEqual(m.commandArgs,n)}),suite("handle keybinding removals",()=>{test("simple 1",()=>{const n=[t(e.KeyA,"yes1",null,l.equals("1","a"),!0)],s=[t(e.KeyB,"yes2",null,l.equals("2","b"),!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!1)])}),test("simple 2",()=>{const n=[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)],s=[t(e.KeyC,"yes3",null,l.equals("3","c"),!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0),t(e.KeyC,"yes3",null,l.equals("3","c"),!1)])}),test("removal with not matching when",()=>{const n=[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)],s=[t(e.KeyA,"-yes1",null,l.equals("1","b"),!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)])}),test("removal with not matching keybinding",()=>{const n=[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)],s=[t(e.KeyB,"-yes1",null,l.equals("1","a"),!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)])}),test("removal with matching keybinding and when",()=>{const n=[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)],s=[t(e.KeyA,"-yes1",null,l.equals("1","a"),!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyB,"yes2",null,l.equals("2","b"),!0)])}),test("removal with unspecified keybinding",()=>{const n=[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)],s=[t(0,"-yes1",null,l.equals("1","a"),!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyB,"yes2",null,l.equals("2","b"),!0)])}),test("removal with unspecified when",()=>{const n=[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)],s=[t(e.KeyA,"-yes1",null,void 0,!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyB,"yes2",null,l.equals("2","b"),!0)])}),test("removal with unspecified when and unspecified keybinding",()=>{const n=[t(e.KeyA,"yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)],s=[t(0,"-yes1",null,void 0,!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyB,"yes2",null,l.equals("2","b"),!0)])}),test("issue #138997 - removal in default list",()=>{const n=[t(e.KeyA,"yes1",null,void 0,!0),t(e.KeyB,"yes2",null,void 0,!0),t(0,"-yes1",null,void 0,!1)],s=[],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyB,"yes2",null,void 0,!0)])}),test("issue #612#issuecomment-222109084 cannot remove keybindings for commands with ^",()=>{const n=[t(e.KeyA,"^yes1",null,l.equals("1","a"),!0),t(e.KeyB,"yes2",null,l.equals("2","b"),!0)],s=[t(e.KeyA,"-yes1",null,void 0,!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyB,"yes2",null,l.equals("2","b"),!0)])}),test("issue #140884 Unable to reassign F1 as keybinding for Show All Commands",()=>{const n=[t(e.KeyA,"command1",null,void 0,!0)],s=[t(e.KeyA,"-command1",null,void 0,!1),t(e.KeyA,"command1",null,void 0,!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyA,"command1",null,void 0,!1)])}),test("issue #141638: Keyboard Shortcuts: Change When Expression might actually remove keybinding in Insiders",()=>{const n=[t(e.KeyA,"command1",null,void 0,!0)],s=[t(e.KeyA,"command1",null,l.equals("a","1"),!1),t(e.KeyA,"-command1",null,void 0,!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[t(e.KeyA,"command1",null,l.equals("a","1"),!1)])}),test("issue #157751: Auto-quoting of context keys prevents removal of keybindings via UI",()=>{const n=[t(e.KeyA,"command1",null,l.deserialize("editorTextFocus && activeEditor != workbench.editor.notebook && editorLangId in julia.supportedLanguageIds"),!0)],s=[t(e.KeyA,"-command1",null,l.deserialize("editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'"),!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[])}),test("issue #160604: Remove keybindings with when clause does not work",()=>{const n=[t(e.KeyA,"command1",null,void 0,!0)],s=[t(e.KeyA,"-command1",null,l.true(),!1)],r=i.handleRemovals([...n,...s]);u.deepStrictEqual(r,[])}),test("contextIsEntirelyIncluded",()=>{const n=d=>typeof d=="string"||!d?l.deserialize(d):d,s=(d,a)=>{u.strictEqual(i.whenIsEntirelyIncluded(n(d),n(a)),!0)},r=(d,a)=>{u.strictEqual(i.whenIsEntirelyIncluded(n(d),n(a)),!1)};s(null,null),s(null,l.true()),s(l.true(),null),s(l.true(),l.true()),s("key1",null),s("key1",""),s("key1","key1"),s("key1",l.true()),s("!key1",""),s("!key1","!key1"),s("key2",""),s("key2","key2"),s("key1 && key1 && key2 && key2","key2"),s("key1 && key2","key2"),s("key1 && key2","key1"),s("key1 && key2",""),s("key1","key1 || key2"),s("key1 || !key1","key2 || !key2"),s("key1","key1 || key2 && key3"),r("key1","!key1"),r("!key1","key1"),r("key1 && key2","key3"),r("key1 && key2","key4"),r("key1","key2"),r("key1 || key2","key2"),r("","key2"),r(null,"key2")})}),suite("resolve command",()=>{function n(m,b,K){return t(m,b,null,K,!0)}const s=[n(e.KeyX,"first",l.and(l.equals("key1",!0),l.notEquals("key2",!1))),n(e.KeyX,"second",l.equals("key2",!0)),n(e.KeyZ,"second",void 0),n(e.KeyX,"third",l.equals("key3",!0)),n(o.CtrlCmd|e.KeyY,"fourth",l.equals("key4",!0)),n(c(o.CtrlCmd|e.KeyY,e.KeyZ),"fifth",void 0),n(0,"sixth",void 0),n(c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyU),"seventh",void 0),n(c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyK),"seventh",void 0),n(c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyU),"uncomment lines",void 0),n(c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyC),"comment lines",void 0),n(c(o.CtrlCmd|e.KeyG,o.CtrlCmd|e.KeyC),"unreachablechord",void 0),n(o.CtrlCmd|e.KeyG,"eleven",void 0),n([o.CtrlCmd|e.KeyK,e.KeyA,e.KeyB],"long multi chord",void 0),n([o.CtrlCmd|e.KeyB,o.CtrlCmd|e.KeyC],"shadowed by long-multi-chord-2",void 0),n([o.CtrlCmd|e.KeyB,o.CtrlCmd|e.KeyC,e.KeyI],"long-multi-chord-2",void 0)],r=new i(s,[],()=>{}),d=(m,b)=>{const K=r.lookupKeybindings(m);u.strictEqual(K.length,b.length,"Length mismatch @ commandId "+m);for(let h=0,q=K.length;h<q;h++){const C=B(b[h],g);u.strictEqual(K[h].resolvedKeybinding.getUserSettingsLabel(),C.getUserSettingsLabel(),"value mismatch @ commandId "+m)}},a=(m,b,K)=>{const h=R(b,g),q=[];for(let C=0,E=h.chords.length;C<E;C++){const A=k(h.chords[C]),p=r.resolve(m,q,A);C===E-1?(u.ok(p.kind===v.KbFound,`Enters multi chord for ${K} at chord ${C}`),u.strictEqual(p.commandId,K,`Enters multi chord for ${K} at chord ${C}`)):C>0?u.ok(p.kind===v.MoreChordsNeeded,`Continues multi chord for ${K} at chord ${C}`):u.ok(p.kind===v.MoreChordsNeeded,`Enters multi chord for ${K} at chord ${C}`),q.push(A)}};test("resolve command - 1",()=>{d("first",[])}),test("resolve command - 2",()=>{d("second",[e.KeyZ,e.KeyX]),a(y({key2:!0}),e.KeyX,"second"),a(y({}),e.KeyZ,"second")}),test("resolve command - 3",()=>{d("third",[e.KeyX]),a(y({key3:!0}),e.KeyX,"third")}),test("resolve command - 4",()=>{d("fourth",[])}),test("resolve command - 5",()=>{d("fifth",[c(o.CtrlCmd|e.KeyY,e.KeyZ)]),a(y({}),c(o.CtrlCmd|e.KeyY,e.KeyZ),"fifth")}),test("resolve command - 6",()=>{d("seventh",[c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyK)]),a(y({}),c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyK),"seventh")}),test("resolve command - 7",()=>{d("uncomment lines",[c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyU)]),a(y({}),c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyU),"uncomment lines")}),test("resolve command - 8",()=>{d("comment lines",[c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyC)]),a(y({}),c(o.CtrlCmd|e.KeyK,o.CtrlCmd|e.KeyC),"comment lines")}),test("resolve command - 9",()=>{d("unreachablechord",[])}),test("resolve command - 10",()=>{d("eleven",[o.CtrlCmd|e.KeyG]),a(y({}),o.CtrlCmd|e.KeyG,"eleven")}),test("resolve command - 11",()=>{d("sixth",[])}),test("resolve command - 12",()=>{d("long multi chord",[[o.CtrlCmd|e.KeyK,e.KeyA,e.KeyB]]),a(y({}),[o.CtrlCmd|e.KeyK,e.KeyA,e.KeyB],"long multi chord")});const f=y({});test("KBs having common prefix - the one defined later is returned",()=>{a(f,[o.CtrlCmd|e.KeyB,o.CtrlCmd|e.KeyC,e.KeyI],"long-multi-chord-2")})})});
