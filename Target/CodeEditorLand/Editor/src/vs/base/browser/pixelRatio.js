import{getWindowId as l,onDidUnregisterWindow as d}from"./dom.js";import{Emitter as r,Event as h}from"../common/event.js";import{Disposable as a,markAsSingleton as s}from"../common/lifecycle.js";class m extends a{_onDidChange=this._register(new r);onDidChange=this._onDidChange.event;_listener;_mediaQueryList;constructor(e){super(),this._listener=()=>this._handleChange(e,!0),this._mediaQueryList=null,this._handleChange(e,!1)}_handleChange(e,i){this._mediaQueryList?.removeEventListener("change",this._listener),this._mediaQueryList=e.matchMedia(`(resolution: ${e.devicePixelRatio}dppx)`),this._mediaQueryList.addEventListener("change",this._listener),i&&this._onDidChange.fire()}}class u extends a{_onDidChange=this._register(new r);onDidChange=this._onDidChange.event;_value;get value(){return this._value}constructor(e){super(),this._value=this._getPixelRatio(e);const i=this._register(new m(e));this._register(i.onDidChange(()=>{this._value=this._getPixelRatio(e),this._onDidChange.fire(this._value)}))}_getPixelRatio(e){const i=document.createElement("canvas").getContext("2d"),t=e.devicePixelRatio||1,o=i.webkitBackingStorePixelRatio||i.mozBackingStorePixelRatio||i.msBackingStorePixelRatio||i.oBackingStorePixelRatio||i.backingStorePixelRatio||1;return t/o}}class x{mapWindowIdToPixelRatioMonitor=new Map;_getOrCreatePixelRatioMonitor(e){const i=l(e);let t=this.mapWindowIdToPixelRatioMonitor.get(i);return t||(t=s(new u(e)),this.mapWindowIdToPixelRatioMonitor.set(i,t),s(h.once(d)(({vscodeWindowId:o})=>{o===i&&(t?.dispose(),this.mapWindowIdToPixelRatioMonitor.delete(i))}))),t}getInstance(e){return this._getOrCreatePixelRatioMonitor(e)}}const _=new x;export{_ as PixelRatio};
