var q=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var a=(r,e,s,n)=>{for(var u=n>1?void 0:n?E(e,s):e,c=r.length-1,o;c>=0;c--)(o=r[c])&&(u=(n?o(e,s,u):o(u))||u);return n&&u&&q(e,s,u),u};import t from"assert";import*as l from"sinon";import{memoize as i,throttle as w}from"../../common/decorators.js";import{ensureNoDisposablesAreLeakedInTestSuite as m}from"./utils.js";suite("Decorators",()=>{m(),test("memoize should memoize methods",()=>{class r{constructor(o){this._answer=o}count=0;answer(){return this.count++,this._answer}}a([i],r.prototype,"answer",1);const e=new r(42);t.strictEqual(e.count,0),t.strictEqual(e.answer(),42),t.strictEqual(e.count,1),t.strictEqual(e.answer(),42),t.strictEqual(e.count,1);const s=new r(1337);t.strictEqual(s.count,0),t.strictEqual(s.answer(),1337),t.strictEqual(s.count,1),t.strictEqual(s.answer(),1337),t.strictEqual(s.count,1),t.strictEqual(e.answer(),42),t.strictEqual(e.count,1);const n=new r(null);t.strictEqual(n.count,0),t.strictEqual(n.answer(),null),t.strictEqual(n.count,1),t.strictEqual(n.answer(),null),t.strictEqual(n.count,1);const u=new r(void 0);t.strictEqual(u.count,0),t.strictEqual(u.answer(),void 0),t.strictEqual(u.count,1),t.strictEqual(u.answer(),void 0),t.strictEqual(u.count,1)}),test("memoize should memoize getters",()=>{class r{constructor(o){this._answer=o}count=0;get answer(){return this.count++,this._answer}}a([i],r.prototype,"answer",1);const e=new r(42);t.strictEqual(e.count,0),t.strictEqual(e.answer,42),t.strictEqual(e.count,1),t.strictEqual(e.answer,42),t.strictEqual(e.count,1);const s=new r(1337);t.strictEqual(s.count,0),t.strictEqual(s.answer,1337),t.strictEqual(s.count,1),t.strictEqual(s.answer,1337),t.strictEqual(s.count,1),t.strictEqual(e.answer,42),t.strictEqual(e.count,1);const n=new r(null);t.strictEqual(n.count,0),t.strictEqual(n.answer,null),t.strictEqual(n.count,1),t.strictEqual(n.answer,null),t.strictEqual(n.count,1);const u=new r(void 0);t.strictEqual(u.count,0),t.strictEqual(u.answer,void 0),t.strictEqual(u.count,1),t.strictEqual(u.answer,void 0),t.strictEqual(u.count,1)}),test("memoized property should not be enumerable",()=>{class r{get answer(){return 42}}a([i],r.prototype,"answer",1);const e=new r;t.strictEqual(e.answer,42),t(!Object.keys(e).some(s=>/\$memoize\$/.test(s)))}),test("memoized property should not be writable",()=>{class r{get answer(){return 42}}a([i],r.prototype,"answer",1);const e=new r;t.strictEqual(e.answer,42);try{e.$memoize$answer=1337,t(!1)}catch{t.strictEqual(e.answer,42)}}),test("throttle",()=>{const r=l.spy(),e=l.useFakeTimers();try{class s{_handle;constructor(c){this._handle=c}report(c){this._handle(c)}}a([w(100,(c,o)=>c+o,()=>0)],s.prototype,"report",1);const n=new s(r);n.report(1),n.report(2),n.report(3),t.deepStrictEqual(r.args,[[1]]),e.tick(200),t.deepStrictEqual(r.args,[[1],[5]]),r.resetHistory(),n.report(4),n.report(5),e.tick(50),n.report(6),t.deepStrictEqual(r.args,[[4]]),e.tick(60),t.deepStrictEqual(r.args,[[4],[11]])}finally{e.restore()}})});
