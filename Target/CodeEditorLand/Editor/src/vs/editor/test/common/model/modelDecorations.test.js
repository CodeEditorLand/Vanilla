import d from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as x}from"../../../../base/test/common/utils.js";import{EditOperation as m}from"../../../common/core/editOperation.js";import{Position as u}from"../../../common/core/position.js";import{Range as e}from"../../../common/core/range.js";import{EndOfLineSequence as A,TrackedRangeStickiness as v}from"../../../common/model.js";import"../../../common/model/textModel.js";import{createTextModel as h}from"../testTextModel.js";function N(a,t){const l=[],g=a.getAllDecorations();for(let o=0,n=g.length;o<n;o++)l.push({range:g[o].range,className:g[o].options.className});l.sort((o,n)=>e.compareRangesUsingStarts(o.range,n.range)),d.deepStrictEqual(l,t)}function c(a,t,l,g,o,n){N(a,[{range:new e(t,l,g,o),className:n}])}function L(a){d.strictEqual(a.getAllDecorations().length,0,"Model has no decoration")}function i(a,t,l,g,o,n){return a.changeDecorations(s=>s.addDecoration(new e(t,l,g,o),{description:"test",className:n}))}function q(a,t,l){const g=[],o=a.getLineDecorations(t);for(let n=0,s=o.length;n<s;n++)g.push({start:o[n].range.startColumn,end:o[n].range.endColumn,className:o[n].options.className});d.deepStrictEqual(g,l,"Line decorations")}function y(a,t){q(a,t,[])}function I(a,t,l,g,o){q(a,t,[{start:l,end:g,className:o}])}suite("Editor Model - Model Decorations",()=>{const a="My First Line",t="		My Second Line",l="    Third Line",g="",o="1";let n;setup(()=>{const s=a+`\r
`+t+`
`+l+`
`+g+`\r
`+o;n=h(s)}),teardown(()=>{n.dispose()}),x(),test("single character decoration",()=>{i(n,1,1,1,2,"myType"),I(n,1,1,2,"myType"),y(n,2),y(n,3),y(n,4),y(n,5)}),test("line decoration",()=>{i(n,1,1,1,14,"myType"),I(n,1,1,14,"myType"),y(n,2),y(n,3),y(n,4),y(n,5)}),test("full line decoration",()=>{i(n,1,1,2,1,"myType");const s=n.getLineDecorations(1);d.strictEqual(s.length,1),d.strictEqual(s[0].options.className,"myType");const w=n.getLineDecorations(1);d.strictEqual(w.length,1),d.strictEqual(w[0].options.className,"myType"),y(n,3),y(n,4),y(n,5)}),test("multiple line decoration",()=>{i(n,1,2,3,2,"myType");const s=n.getLineDecorations(1);d.strictEqual(s.length,1),d.strictEqual(s[0].options.className,"myType");const w=n.getLineDecorations(1);d.strictEqual(w.length,1),d.strictEqual(w[0].options.className,"myType");const r=n.getLineDecorations(1);d.strictEqual(r.length,1),d.strictEqual(r[0].options.className,"myType"),y(n,4),y(n,5)}),test("decoration gets removed",()=>{const s=i(n,1,2,3,2,"myType");c(n,1,2,3,2,"myType"),n.changeDecorations(w=>{w.removeDecoration(s)}),L(n)}),test("decorations get removed",()=>{const s=i(n,1,2,3,2,"myType1"),w=i(n,1,2,3,1,"myType2");N(n,[{range:new e(1,2,3,1),className:"myType2"},{range:new e(1,2,3,2),className:"myType1"}]),n.changeDecorations(r=>{r.removeDecoration(s)}),N(n,[{range:new e(1,2,3,1),className:"myType2"}]),n.changeDecorations(r=>{r.removeDecoration(w)}),L(n)}),test("decoration range can be changed",()=>{const s=i(n,1,2,3,2,"myType");c(n,1,2,3,2,"myType"),n.changeDecorations(w=>{w.changeDecoration(s,new e(1,1,1,2))}),c(n,1,1,1,2,"myType")}),test("decorations emit event on add",()=>{let s=0;const w=n.onDidChangeDecorations(r=>{s++});i(n,1,2,3,2,"myType"),d.strictEqual(s,1,"listener called"),w.dispose()}),test("decorations emit event on change",()=>{let s=0;const w=i(n,1,2,3,2,"myType"),r=n.onDidChangeDecorations(p=>{s++});n.changeDecorations(p=>{p.changeDecoration(w,new e(1,1,1,2))}),d.strictEqual(s,1,"listener called"),r.dispose()}),test("decorations emit event on remove",()=>{let s=0;const w=i(n,1,2,3,2,"myType"),r=n.onDidChangeDecorations(p=>{s++});n.changeDecorations(p=>{p.removeDecoration(w)}),d.strictEqual(s,1,"listener called"),r.dispose()}),test("decorations emit event when inserting one line text before it",()=>{let s=0;i(n,1,2,3,2,"myType");const w=n.onDidChangeDecorations(r=>{s++});n.applyEdits([m.insert(new u(1,1),"Hallo ")]),d.strictEqual(s,1,"listener called"),w.dispose()}),test("decorations do not emit event on no-op deltaDecorations",()=>{let s=0;const w=n.onDidChangeDecorations(r=>{s++});n.deltaDecorations([],[]),n.changeDecorations(r=>{r.deltaDecorations([],[])}),d.strictEqual(s,0,"listener not called"),w.dispose()}),test("decorations are updated when inserting one line text before it",()=>{i(n,1,2,3,2,"myType"),c(n,1,2,3,2,"myType"),n.applyEdits([m.insert(new u(1,1),"Hallo ")]),c(n,1,8,3,2,"myType")}),test("decorations are updated when inserting one line text before it 2",()=>{i(n,1,1,3,2,"myType"),c(n,1,1,3,2,"myType"),n.applyEdits([m.replace(new e(1,1,1,1),"Hallo ")]),c(n,1,1,3,2,"myType")}),test("decorations are updated when inserting multiple lines text before it",()=>{i(n,1,2,3,2,"myType"),c(n,1,2,3,2,"myType"),n.applyEdits([m.insert(new u(1,1),`Hallo
I'm inserting multiple
lines`)]),c(n,3,7,5,2,"myType")}),test("decorations change when inserting text after them",()=>{i(n,1,2,3,2,"myType"),c(n,1,2,3,2,"myType"),n.applyEdits([m.insert(new u(3,2),"Hallo")]),c(n,1,2,3,7,"myType")}),test("decorations are updated when inserting text inside",()=>{i(n,1,2,3,2,"myType"),c(n,1,2,3,2,"myType"),n.applyEdits([m.insert(new u(1,3),"Hallo ")]),c(n,1,2,3,2,"myType")}),test("decorations are updated when inserting text inside 2",()=>{i(n,1,2,3,2,"myType"),c(n,1,2,3,2,"myType"),n.applyEdits([m.insert(new u(3,1),"Hallo ")]),c(n,1,2,3,8,"myType")}),test("decorations are updated when inserting text inside 3",()=>{i(n,1,1,2,16,"myType"),c(n,1,1,2,16,"myType"),n.applyEdits([m.insert(new u(2,2),`
`)]),c(n,1,1,3,15,"myType")}),test("decorations are updated when inserting multiple lines text inside",()=>{i(n,1,2,3,2,"myType"),c(n,1,2,3,2,"myType"),n.applyEdits([m.insert(new u(1,3),`Hallo
I'm inserting multiple
lines`)]),c(n,1,2,5,2,"myType")}),test("decorations are updated when deleting one line text before it",()=>{i(n,1,2,3,2,"myType"),c(n,1,2,3,2,"myType"),n.applyEdits([m.delete(new e(1,1,1,2))]),c(n,1,1,3,2,"myType")}),test("decorations are updated when deleting multiple lines text before it",()=>{i(n,2,2,3,2,"myType"),c(n,2,2,3,2,"myType"),n.applyEdits([m.delete(new e(1,1,2,1))]),c(n,1,2,2,2,"myType")}),test("decorations are updated when deleting multiple lines text before it 2",()=>{i(n,2,3,3,2,"myType"),c(n,2,3,3,2,"myType"),n.applyEdits([m.delete(new e(1,1,2,2))]),c(n,1,2,2,2,"myType")}),test("decorations are updated when deleting text inside",()=>{i(n,1,2,4,1,"myType"),c(n,1,2,4,1,"myType"),n.applyEdits([m.delete(new e(1,3,2,1))]),c(n,1,2,3,1,"myType")}),test("decorations are updated when deleting text inside 2",()=>{i(n,1,2,4,1,"myType"),c(n,1,2,4,1,"myType"),n.applyEdits([m.delete(new e(1,1,1,2)),m.delete(new e(4,1,4,1))]),c(n,1,1,4,1,"myType")}),test("decorations are updated when deleting multiple lines text",()=>{i(n,1,2,4,1,"myType"),c(n,1,2,4,1,"myType"),n.applyEdits([m.delete(new e(1,1,3,1))]),c(n,1,1,2,1,"myType")}),test("decorations are updated when changing EOL",()=>{i(n,1,2,4,1,"myType1"),i(n,1,3,4,1,"myType2"),i(n,1,4,4,1,"myType3"),i(n,1,5,4,1,"myType4"),i(n,1,6,4,1,"myType5"),i(n,1,7,4,1,"myType6"),i(n,1,8,4,1,"myType7"),i(n,1,9,4,1,"myType8"),i(n,1,10,4,1,"myType9"),n.applyEdits([m.insert(new u(1,1),"x")]),n.setEOL(A.CRLF),n.applyEdits([m.insert(new u(1,1),"x")]),N(n,[{range:new e(1,4,4,1),className:"myType1"},{range:new e(1,5,4,1),className:"myType2"},{range:new e(1,6,4,1),className:"myType3"},{range:new e(1,7,4,1),className:"myType4"},{range:new e(1,8,4,1),className:"myType5"},{range:new e(1,9,4,1),className:"myType6"},{range:new e(1,10,4,1),className:"myType7"},{range:new e(1,11,4,1),className:"myType8"},{range:new e(1,12,4,1),className:"myType9"}])}),test("an apparently simple edit",()=>{i(n,1,2,4,1,"myType1"),n.applyEdits([m.replace(new e(1,14,2,1),"x")]),N(n,[{range:new e(1,2,3,1),className:"myType1"}])}),test("removeAllDecorationsWithOwnerId can be called after model dispose",()=>{const s=h("asd");s.dispose(),s.removeAllDecorationsWithOwnerId(1)}),test("removeAllDecorationsWithOwnerId works",()=>{n.deltaDecorations([],[{range:new e(1,2,4,1),options:{description:"test",className:"myType1"}}],1),n.removeAllDecorationsWithOwnerId(1),L(n)})}),suite("Decorations and editing",()=>{x();function a(l,g,o,n,s,w,r){const p=h(["My First Line","My Second Line","Third Line"].join(`
`)),T=p.deltaDecorations([],[{range:l,options:{description:"test",stickiness:g}}])[0];p.applyEdits([{range:o,text:n,forceMoveMarkers:s}]);const f=p.getDecorationRange(T);d.deepStrictEqual(f,w,r),p.dispose()}function t(l,g,o,n){a(l,0,g,o,!1,n[0][0],"no-0-AlwaysGrowsWhenTypingAtEdges"),a(l,1,g,o,!1,n[0][1],"no-1-NeverGrowsWhenTypingAtEdges"),a(l,2,g,o,!1,n[0][2],"no-2-GrowsOnlyWhenTypingBefore"),a(l,3,g,o,!1,n[0][3],"no-3-GrowsOnlyWhenTypingAfter"),a(l,0,g,o,!0,n[1][0],"force-0-AlwaysGrowsWhenTypingAtEdges"),a(l,1,g,o,!0,n[1][1],"force-1-NeverGrowsWhenTypingAtEdges"),a(l,2,g,o,!0,n[1][2],"force-2-GrowsOnlyWhenTypingBefore"),a(l,3,g,o,!0,n[1][3],"force-3-GrowsOnlyWhenTypingAfter")}suite("insert",()=>{suite("collapsed dec",()=>{test("before",()=>{t(new e(1,4,1,4),new e(1,3,1,3),"xx",[[new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6)],[new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6)]])}),test("equal",()=>{t(new e(1,4,1,4),new e(1,4,1,4),"xx",[[new e(1,4,1,6),new e(1,6,1,6),new e(1,4,1,4),new e(1,6,1,6)],[new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6)]])}),test("after",()=>{t(new e(1,4,1,4),new e(1,5,1,5),"xx",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])})}),suite("non-collapsed dec",()=>{test("before",()=>{t(new e(1,4,1,9),new e(1,3,1,3),"xx",[[new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11)],[new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11)]])}),test("start",()=>{t(new e(1,4,1,9),new e(1,4,1,4),"xx",[[new e(1,4,1,11),new e(1,6,1,11),new e(1,4,1,11),new e(1,6,1,11)],[new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11)]])}),test("inside",()=>{t(new e(1,4,1,9),new e(1,5,1,5),"xx",[[new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11)],[new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11)]])}),test("end",()=>{t(new e(1,4,1,9),new e(1,9,1,9),"xx",[[new e(1,4,1,11),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,11)],[new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11)]])}),test("after",()=>{t(new e(1,4,1,9),new e(1,10,1,10),"xx",[[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)],[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)]])})})}),suite("delete",()=>{suite("collapsed dec",()=>{test("edit.end < range.start",()=>{t(new e(1,4,1,4),new e(1,1,1,3),"",[[new e(1,2,1,2),new e(1,2,1,2),new e(1,2,1,2),new e(1,2,1,2)],[new e(1,2,1,2),new e(1,2,1,2),new e(1,2,1,2),new e(1,2,1,2)]])}),test("edit.end <= range.start",()=>{t(new e(1,4,1,4),new e(1,2,1,4),"",[[new e(1,2,1,2),new e(1,2,1,2),new e(1,2,1,2),new e(1,2,1,2)],[new e(1,2,1,2),new e(1,2,1,2),new e(1,2,1,2),new e(1,2,1,2)]])}),test("edit.start < range.start && edit.end > range.end",()=>{t(new e(1,4,1,4),new e(1,3,1,5),"",[[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)],[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)]])}),test("edit.start >= range.end",()=>{t(new e(1,4,1,4),new e(1,4,1,6),"",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])}),test("edit.start > range.end",()=>{t(new e(1,4,1,4),new e(1,5,1,7),"",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])})}),suite("non-collapsed dec",()=>{test("edit.end < range.start",()=>{t(new e(1,4,1,9),new e(1,1,1,3),"",[[new e(1,2,1,7),new e(1,2,1,7),new e(1,2,1,7),new e(1,2,1,7)],[new e(1,2,1,7),new e(1,2,1,7),new e(1,2,1,7),new e(1,2,1,7)]])}),test("edit.end <= range.start",()=>{t(new e(1,4,1,9),new e(1,2,1,4),"",[[new e(1,2,1,7),new e(1,2,1,7),new e(1,2,1,7),new e(1,2,1,7)],[new e(1,2,1,7),new e(1,2,1,7),new e(1,2,1,7),new e(1,2,1,7)]])}),test("edit.start < range.start && edit.end < range.end",()=>{t(new e(1,4,1,9),new e(1,3,1,5),"",[[new e(1,3,1,7),new e(1,3,1,7),new e(1,3,1,7),new e(1,3,1,7)],[new e(1,3,1,7),new e(1,3,1,7),new e(1,3,1,7),new e(1,3,1,7)]])}),test("edit.start < range.start && edit.end == range.end",()=>{t(new e(1,4,1,9),new e(1,3,1,9),"",[[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)],[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)]])}),test("edit.start < range.start && edit.end > range.end",()=>{t(new e(1,4,1,9),new e(1,3,1,10),"",[[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)],[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)]])}),test("edit.start == range.start && edit.end < range.end",()=>{t(new e(1,4,1,9),new e(1,4,1,6),"",[[new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7)],[new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7)]])}),test("edit.start == range.start && edit.end == range.end",()=>{t(new e(1,4,1,9),new e(1,4,1,9),"",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])}),test("edit.start == range.start && edit.end > range.end",()=>{t(new e(1,4,1,9),new e(1,4,1,10),"",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])}),test("edit.start > range.start && edit.start < range.end && edit.end < range.end",()=>{t(new e(1,4,1,9),new e(1,5,1,7),"",[[new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7)],[new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7)]])}),test("edit.start > range.start && edit.start < range.end && edit.end == range.end",()=>{t(new e(1,4,1,9),new e(1,5,1,9),"",[[new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5)],[new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5)]])}),test("edit.start > range.start && edit.start < range.end && edit.end > range.end",()=>{t(new e(1,4,1,9),new e(1,5,1,10),"",[[new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5)],[new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5)]])}),test("edit.start == range.end",()=>{t(new e(1,4,1,9),new e(1,9,1,11),"",[[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)],[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)]])}),test("edit.start > range.end",()=>{t(new e(1,4,1,9),new e(1,10,1,11),"",[[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)],[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)]])})})}),suite("replace short",()=>{suite("collapsed dec",()=>{test("edit.end < range.start",()=>{t(new e(1,4,1,4),new e(1,1,1,3),"c",[[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)],[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)]])}),test("edit.end <= range.start",()=>{t(new e(1,4,1,4),new e(1,2,1,4),"c",[[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)],[new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3),new e(1,3,1,3)]])}),test("edit.start < range.start && edit.end > range.end",()=>{t(new e(1,4,1,4),new e(1,3,1,5),"c",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])}),test("edit.start >= range.end",()=>{t(new e(1,4,1,4),new e(1,4,1,6),"c",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,5,1,5),new e(1,5,1,5),new e(1,5,1,5),new e(1,5,1,5)]])}),test("edit.start > range.end",()=>{t(new e(1,4,1,4),new e(1,5,1,7),"c",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])})}),suite("non-collapsed dec",()=>{test("edit.end < range.start",()=>{t(new e(1,4,1,9),new e(1,1,1,3),"c",[[new e(1,3,1,8),new e(1,3,1,8),new e(1,3,1,8),new e(1,3,1,8)],[new e(1,3,1,8),new e(1,3,1,8),new e(1,3,1,8),new e(1,3,1,8)]])}),test("edit.end <= range.start",()=>{t(new e(1,4,1,9),new e(1,2,1,4),"c",[[new e(1,3,1,8),new e(1,3,1,8),new e(1,3,1,8),new e(1,3,1,8)],[new e(1,3,1,8),new e(1,3,1,8),new e(1,3,1,8),new e(1,3,1,8)]])}),test("edit.start < range.start && edit.end < range.end",()=>{t(new e(1,4,1,9),new e(1,3,1,5),"c",[[new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8)],[new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8)]])}),test("edit.start < range.start && edit.end == range.end",()=>{t(new e(1,4,1,9),new e(1,3,1,9),"c",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])}),test("edit.start < range.start && edit.end > range.end",()=>{t(new e(1,4,1,9),new e(1,3,1,10),"c",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])}),test("edit.start == range.start && edit.end < range.end",()=>{t(new e(1,4,1,9),new e(1,4,1,6),"c",[[new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8)],[new e(1,5,1,8),new e(1,5,1,8),new e(1,5,1,8),new e(1,5,1,8)]])}),test("edit.start == range.start && edit.end == range.end",()=>{t(new e(1,4,1,9),new e(1,4,1,9),"c",[[new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5)],[new e(1,5,1,5),new e(1,5,1,5),new e(1,5,1,5),new e(1,5,1,5)]])}),test("edit.start == range.start && edit.end > range.end",()=>{t(new e(1,4,1,9),new e(1,4,1,10),"c",[[new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5),new e(1,4,1,5)],[new e(1,5,1,5),new e(1,5,1,5),new e(1,5,1,5),new e(1,5,1,5)]])}),test("edit.start > range.start && edit.start < range.end && edit.end < range.end",()=>{t(new e(1,4,1,9),new e(1,5,1,7),"c",[[new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8)],[new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8)]])}),test("edit.start > range.start && edit.start < range.end && edit.end == range.end",()=>{t(new e(1,4,1,9),new e(1,5,1,9),"c",[[new e(1,4,1,6),new e(1,4,1,6),new e(1,4,1,6),new e(1,4,1,6)],[new e(1,4,1,6),new e(1,4,1,6),new e(1,4,1,6),new e(1,4,1,6)]])}),test("edit.start > range.start && edit.start < range.end && edit.end > range.end",()=>{t(new e(1,4,1,9),new e(1,5,1,10),"c",[[new e(1,4,1,6),new e(1,4,1,6),new e(1,4,1,6),new e(1,4,1,6)],[new e(1,4,1,6),new e(1,4,1,6),new e(1,4,1,6),new e(1,4,1,6)]])}),test("edit.start == range.end",()=>{t(new e(1,4,1,9),new e(1,9,1,11),"c",[[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)],[new e(1,4,1,10),new e(1,4,1,10),new e(1,4,1,10),new e(1,4,1,10)]])}),test("edit.start > range.end",()=>{t(new e(1,4,1,9),new e(1,10,1,11),"c",[[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)],[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)]])})})}),suite("replace long",()=>{suite("collapsed dec",()=>{test("edit.end < range.start",()=>{t(new e(1,4,1,4),new e(1,1,1,3),"cccc",[[new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6)],[new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6)]])}),test("edit.end <= range.start",()=>{t(new e(1,4,1,4),new e(1,2,1,4),"cccc",[[new e(1,4,1,6),new e(1,6,1,6),new e(1,4,1,4),new e(1,6,1,6)],[new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6),new e(1,6,1,6)]])}),test("edit.start < range.start && edit.end > range.end",()=>{t(new e(1,4,1,4),new e(1,3,1,5),"cccc",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,7,1,7),new e(1,7,1,7),new e(1,7,1,7),new e(1,7,1,7)]])}),test("edit.start >= range.end",()=>{t(new e(1,4,1,4),new e(1,4,1,6),"cccc",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,8,1,8),new e(1,8,1,8),new e(1,8,1,8),new e(1,8,1,8)]])}),test("edit.start > range.end",()=>{t(new e(1,4,1,4),new e(1,5,1,7),"cccc",[[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)],[new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4),new e(1,4,1,4)]])})}),suite("non-collapsed dec",()=>{test("edit.end < range.start",()=>{t(new e(1,4,1,9),new e(1,1,1,3),"cccc",[[new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11)],[new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11)]])}),test("edit.end <= range.start",()=>{t(new e(1,4,1,9),new e(1,2,1,4),"cccc",[[new e(1,4,1,11),new e(1,6,1,11),new e(1,4,1,11),new e(1,6,1,11)],[new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11),new e(1,6,1,11)]])}),test("edit.start < range.start && edit.end < range.end",()=>{t(new e(1,4,1,9),new e(1,3,1,5),"cccc",[[new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11)],[new e(1,7,1,11),new e(1,7,1,11),new e(1,7,1,11),new e(1,7,1,11)]])}),test("edit.start < range.start && edit.end == range.end",()=>{t(new e(1,4,1,9),new e(1,3,1,9),"cccc",[[new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7)],[new e(1,7,1,7),new e(1,7,1,7),new e(1,7,1,7),new e(1,7,1,7)]])}),test("edit.start < range.start && edit.end > range.end",()=>{t(new e(1,4,1,9),new e(1,3,1,10),"cccc",[[new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7),new e(1,4,1,7)],[new e(1,7,1,7),new e(1,7,1,7),new e(1,7,1,7),new e(1,7,1,7)]])}),test("edit.start == range.start && edit.end < range.end",()=>{t(new e(1,4,1,9),new e(1,4,1,6),"cccc",[[new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11)],[new e(1,8,1,11),new e(1,8,1,11),new e(1,8,1,11),new e(1,8,1,11)]])}),test("edit.start == range.start && edit.end == range.end",()=>{t(new e(1,4,1,9),new e(1,4,1,9),"cccc",[[new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8)],[new e(1,8,1,8),new e(1,8,1,8),new e(1,8,1,8),new e(1,8,1,8)]])}),test("edit.start == range.start && edit.end > range.end",()=>{t(new e(1,4,1,9),new e(1,4,1,10),"cccc",[[new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8),new e(1,4,1,8)],[new e(1,8,1,8),new e(1,8,1,8),new e(1,8,1,8),new e(1,8,1,8)]])}),test("edit.start > range.start && edit.start < range.end && edit.end < range.end",()=>{t(new e(1,4,1,9),new e(1,5,1,7),"cccc",[[new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11)],[new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11),new e(1,4,1,11)]])}),test("edit.start > range.start && edit.start < range.end && edit.end == range.end",()=>{t(new e(1,4,1,9),new e(1,5,1,9),"cccc",[[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)],[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)]])}),test("edit.start > range.start && edit.start < range.end && edit.end > range.end",()=>{t(new e(1,4,1,9),new e(1,5,1,10),"cccc",[[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)],[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)]])}),test("edit.start == range.end",()=>{t(new e(1,4,1,9),new e(1,9,1,11),"cccc",[[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)],[new e(1,4,1,13),new e(1,4,1,13),new e(1,4,1,13),new e(1,4,1,13)]])}),test("edit.start > range.end",()=>{t(new e(1,4,1,9),new e(1,10,1,11),"cccc",[[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)],[new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9),new e(1,4,1,9)]])})})})}),suite("deltaDecorations",()=>{x();function a(s,w,r,p,T){return{id:s,range:new e(w,r,p,T)}}function t(s){return{range:s.range,options:{description:"test",className:s.id}}}function l(s,w){return s===w?0:s<w?-1:1}function g(s,w){return w.map(r=>({range:s.getDecorationRange(r),id:s.getDecorationOptions(r).className}))}function o(s,w,r){const p=h(s.join(`
`)),T=p.deltaDecorations([],w.map(t)),f=g(p,T);d.strictEqual(T.length,w.length,"returns expected cnt of ids"),d.strictEqual(T.length,p.getAllDecorations().length,"does not leak decorations"),f.sort((D,E)=>l(D.id,E.id)),w.sort((D,E)=>l(D.id,E.id)),d.deepStrictEqual(f,w);const b=p.deltaDecorations(T,r.map(t)),M=g(p,b);d.strictEqual(b.length,r.length,"returns expected cnt of ids"),d.strictEqual(b.length,p.getAllDecorations().length,"does not leak decorations"),M.sort((D,E)=>l(D.id,E.id)),r.sort((D,E)=>l(D.id,E.id)),d.deepStrictEqual(f,w),p.dispose()}function n(s,w,r,p){return new e(s,w,r,p)}test("result respects input",()=>{const s=h(["Hello world,","How are you?"].join(`
`)),w=s.deltaDecorations([],[t(a("a",1,1,1,12)),t(a("b",2,1,2,13))]);d.deepStrictEqual(s.getDecorationRange(w[0]),n(1,1,1,12)),d.deepStrictEqual(s.getDecorationRange(w[1]),n(2,1,2,13)),s.dispose()}),test("deltaDecorations 1",()=>{o(["This is a text","That has multiple lines","And is very friendly","Towards testing"],[a("a",1,1,1,2),a("b",1,1,1,15),a("c",1,1,2,1),a("d",1,1,2,24),a("e",2,1,2,24),a("f",2,1,4,16)],[a("x",1,1,1,2),a("b",1,1,1,15),a("c",1,1,2,1),a("d",1,1,2,24),a("e",2,1,2,21),a("f",2,17,4,16)])}),test("deltaDecorations 2",()=>{o(["This is a text","That has multiple lines","And is very friendly","Towards testing"],[a("a",1,1,1,2),a("b",1,2,1,3),a("c",1,3,1,4),a("d",1,4,1,5),a("e",1,5,1,6)],[a("a",1,2,1,3),a("b",1,3,1,4),a("c",1,4,1,5),a("d",1,5,1,6)])}),test("deltaDecorations 3",()=>{o(["This is a text","That has multiple lines","And is very friendly","Towards testing"],[a("a",1,1,1,2),a("b",1,2,1,3),a("c",1,3,1,4),a("d",1,4,1,5),a("e",1,5,1,6)],[])}),test("issue #4317: editor.setDecorations doesn't update the hover message",()=>{const s=h("Hello world!");let w=s.deltaDecorations([],[{range:{startLineNumber:1,startColumn:1,endLineNumber:100,endColumn:1},options:{description:"test",hoverMessage:{value:"hello1"}}}]);w=s.deltaDecorations(w,[{range:{startLineNumber:1,startColumn:1,endLineNumber:100,endColumn:1},options:{description:"test",hoverMessage:{value:"hello2"}}}]);const r=s.getDecorationOptions(w[0]);d.deepStrictEqual(r.hoverMessage,{value:"hello2"}),s.dispose()}),test("model doesn't get confused with individual tracked ranges",()=>{const s=h(["Hello world,","How are you?"].join(`
`)),w=s.changeDecorations(p=>p.addDecoration({startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1},{description:"test",stickiness:v.AlwaysGrowsWhenTypingAtEdges}));s.changeDecorations(p=>{p.removeDecoration(w)});let r=s.deltaDecorations([],[t(a("a",1,1,1,12)),t(a("b",2,1,2,13))]);d.deepStrictEqual(s.getDecorationRange(r[0]),n(1,1,1,12)),d.deepStrictEqual(s.getDecorationRange(r[1]),n(2,1,2,13)),r=s.deltaDecorations(r,[t(a("a",1,1,1,12)),t(a("b",2,1,2,13))]),d.deepStrictEqual(s.getDecorationRange(r[0]),n(1,1,1,12)),d.deepStrictEqual(s.getDecorationRange(r[1]),n(2,1,2,13)),s.dispose()}),test("issue #16922: Clicking on link doesn't seem to do anything",()=>{const s=h(["Hello world,","How are you?","Fine.","Good."].join(`
`));s.deltaDecorations([],[{range:new e(1,1,1,1),options:{description:"test",className:"1"}},{range:new e(1,13,1,13),options:{description:"test",className:"2"}},{range:new e(2,1,2,1),options:{description:"test",className:"3"}},{range:new e(2,1,2,4),options:{description:"test",className:"4"}},{range:new e(2,8,2,13),options:{description:"test",className:"5"}},{range:new e(3,1,4,6),options:{description:"test",className:"6"}},{range:new e(1,1,3,6),options:{description:"test",className:"x1"}},{range:new e(2,5,2,8),options:{description:"test",className:"x2"}},{range:new e(1,1,2,8),options:{description:"test",className:"x3"}},{range:new e(2,5,3,1),options:{description:"test",className:"x4"}}]);const r=s.getDecorationsInRange(new e(2,6,2,6)).map(p=>p.options.className);r.sort(),d.deepStrictEqual(r,["x1","x2","x3","x4"]),s.dispose()}),test("issue #41492: URL highlighting persists after pasting over url",()=>{const s=h(["My First Line"].join(`
`)),w=s.deltaDecorations([],[{range:new e(1,2,1,14),options:{description:"test",stickiness:v.NeverGrowsWhenTypingAtEdges,collapseOnReplaceEdit:!0}}])[0];s.applyEdits([{range:new e(1,1,1,14),text:"Some new text that is longer than the previous one",forceMoveMarkers:!1}]);const r=s.getDecorationRange(w);d.deepStrictEqual(r,new e(1,1,1,1)),s.dispose()})});
