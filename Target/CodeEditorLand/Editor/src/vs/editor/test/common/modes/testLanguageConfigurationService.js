import{Emitter as r}from"../../../../base/common/event.js";import{Disposable as g}from"../../../../base/common/lifecycle.js";import"../../../common/languages/languageConfiguration.js";import{LanguageConfigurationRegistry as a,LanguageConfigurationServiceChangeEvent as t,ResolvedLanguageConfiguration as o}from"../../../common/languages/languageConfigurationRegistry.js";class l extends g{_serviceBrand;_registry=this._register(new a);_onDidChange=this._register(new r);onDidChange=this._onDidChange.event;constructor(){super(),this._register(this._registry.onDidChange(e=>this._onDidChange.fire(new t(e.languageId))))}register(e,n,i){return this._registry.register(e,n,i)}getLanguageConfiguration(e){return this._registry.getLanguageConfiguration(e)??new o("unknown",{})}}export{l as TestLanguageConfigurationService};
