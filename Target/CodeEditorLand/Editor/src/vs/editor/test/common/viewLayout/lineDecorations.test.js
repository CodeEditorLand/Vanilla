import n from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as i}from"../../../../base/test/common/utils.js";import{Range as t}from"../../../common/core/range.js";import{DecorationSegment as a,LineDecoration as c,LineDecorationsNormalizer as b}from"../../../common/viewLayout/lineDecorations.js";import{InlineDecoration as l,InlineDecorationType as e}from"../../../common/viewModel.js";suite("Editor ViewLayout - ViewLineParts",()=>{i(),test("Bug 9827:Overlapping inline decorations can cause wrong inline class to be applied",()=>{const r=b.normalize("abcabcabcabcabcabcabcabcabcabc",[new c(1,11,"c1",e.Regular),new c(3,4,"c2",e.Regular)]);n.deepStrictEqual(r,[new a(0,1,"c1",0),new a(2,2,"c2 c1",0),new a(3,9,"c1",0)])}),test("issue #3462: no whitespace shown at the end of a decorated line",()=>{const r=b.normalize("abcabcabcabcabcabcabcabcabcabc",[new c(15,21,"mtkw",e.Regular),new c(20,21,"inline-folded",e.Regular)]);n.deepStrictEqual(r,[new a(14,18,"mtkw",0),new a(19,19,"mtkw inline-folded",0)])}),test("issue #3661: Link decoration bleeds to next line when wrapping",()=>{const r=c.filter([new l(new t(2,12,3,30),"detected-link",e.Regular)],3,12,500);n.deepStrictEqual(r,[new c(12,30,"detected-link",e.Regular)])}),test("issue #37401: Allow both before and after decorations on empty line",()=>{const r=c.filter([new l(new t(4,1,4,2),"before",e.Before),new l(new t(4,0,4,1),"after",e.After)],4,1,500);n.deepStrictEqual(r,[new c(1,2,"before",e.Before),new c(0,1,"after",e.After)])}),test("ViewLineParts",()=>{n.deepStrictEqual(b.normalize("abcabcabcabcabcabcabcabcabcabc",[new c(1,2,"c1",e.Regular),new c(3,4,"c2",e.Regular)]),[new a(0,0,"c1",0),new a(2,2,"c2",0)]),n.deepStrictEqual(b.normalize("abcabcabcabcabcabcabcabcabcabc",[new c(1,3,"c1",e.Regular),new c(3,4,"c2",e.Regular)]),[new a(0,1,"c1",0),new a(2,2,"c2",0)]),n.deepStrictEqual(b.normalize("abcabcabcabcabcabcabcabcabcabc",[new c(1,4,"c1",e.Regular),new c(3,4,"c2",e.Regular)]),[new a(0,1,"c1",0),new a(2,2,"c1 c2",0)]),n.deepStrictEqual(b.normalize("abcabcabcabcabcabcabcabcabcabc",[new c(1,4,"c1",e.Regular),new c(1,4,"c1*",e.Regular),new c(3,4,"c2",e.Regular)]),[new a(0,1,"c1 c1*",0),new a(2,2,"c1 c1* c2",0)]),n.deepStrictEqual(b.normalize("abcabcabcabcabcabcabcabcabcabc",[new c(1,4,"c1",e.Regular),new c(1,4,"c1*",e.Regular),new c(1,4,"c1**",e.Regular),new c(3,4,"c2",e.Regular)]),[new a(0,1,"c1 c1* c1**",0),new a(2,2,"c1 c1* c1** c2",0)]),n.deepStrictEqual(b.normalize("abcabcabcabcabcabcabcabcabcabc",[new c(1,4,"c1",e.Regular),new c(1,4,"c1*",e.Regular),new c(1,4,"c1**",e.Regular),new c(3,4,"c2",e.Regular),new c(3,4,"c2*",e.Regular)]),[new a(0,1,"c1 c1* c1**",0),new a(2,2,"c1 c1* c1** c2 c2*",0)]),n.deepStrictEqual(b.normalize("abcabcabcabcabcabcabcabcabcabc",[new c(1,4,"c1",e.Regular),new c(1,4,"c1*",e.Regular),new c(1,4,"c1**",e.Regular),new c(3,4,"c2",e.Regular),new c(3,5,"c2*",e.Regular)]),[new a(0,1,"c1 c1* c1**",0),new a(2,2,"c1 c1* c1** c2 c2*",0),new a(3,3,"c2*",0)])})});
