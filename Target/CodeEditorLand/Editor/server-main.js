import"./bootstrap-server.js";import*as y from"path";import*as x from"http";import*as D from"os";import*as P from"readline";import{performance as w}from"perf_hooks";import{fileURLToPath as C}from"url";import I from"minimist";import*as b from"./bootstrap-node.js";import*as N from"./bootstrap-amd.js";import{resolveNLSConfiguration as T}from"./vs/base/node/nls.js";import{product as p}from"./bootstrap-meta.js";import*as m from"./vs/base/common/performance.js";const O=y.dirname(C(import.meta.url));m.mark("code/server/start"),global.vscodeServerStartTime=w.now();async function V(){const e=I(process.argv.slice(2),{boolean:["start-server","list-extensions","print-ip-address","help","version","accept-server-license-terms","update-extensions"],string:["install-extension","install-builtin-extension","uninstall-extension","locate-extension","socket-path","host","port","compatibility"],alias:{help:"h",version:"v"}});["host","port","accept-server-license-terms"].forEach(t=>{if(!e[t]){const s=process.env[`VSCODE_SERVER_${t.toUpperCase().replace("-","_")}`];s&&(e[t]=s)}});const r=["list-extensions","locate-extension"],n=["install-extension","install-builtin-extension","uninstall-extension","update-extensions"],i=e.help||e.version||r.some(t=>!!e[t])||n.some(t=>!!e[t])&&!e["start-server"],a=await T({userLocale:"en",osLocale:"en",commit:p.commit,userDataPath:"",nlsMetadataPath:O});if(i){A(a).then(t=>{t.spawnCli()});return}let o=null,l=null;const u=()=>(l||(l=A(a).then(async t=>{const s=await t.createServer(c);return o=s,s})),l);if(Array.isArray(p.serverLicense)&&p.serverLicense.length&&p.serverLicensePrompt&&e["accept-server-license-terms"]!==!0){U()&&process.exit(1);try{await L(p.serverLicensePrompt)||process.exit(1)}catch{process.exit(1)}}let h=!0,E=!0,c=null;const f=x.createServer(async(t,s)=>(h&&(h=!1,m.mark("code/server/firstRequest")),(await u()).handleRequest(t,s)));f.on("upgrade",async(t,s)=>(E&&(E=!1,m.mark("code/server/firstWebSocket")),(await u()).handleUpgrade(t,s))),f.on("error",async t=>(await u()).handleServerError(t));const S=g(e.host)||(e.compatibility!=="1.63"?"localhost":void 0),_=e["socket-path"]?{path:g(e["socket-path"])}:{host:S,port:await H(S,g(e.port))};f.listen(_,async()=>{let t=Array.isArray(p.serverGreeting)&&p.serverGreeting.length?`

${p.serverGreeting.join(`
`)}

`:"";if(typeof _.port=="number"&&e["print-ip-address"]){const s=D.networkInterfaces();Object.keys(s).forEach(function(d){s[d]?.forEach(function(v){!v.internal&&v.family==="IPv4"&&(t+=`IP Address: ${v.address}
`)})})}if(c=f.address(),c===null)throw new Error("Unexpected server address");t+=`Server bound to ${typeof c=="string"?c:`${c.address}:${c.port} (${c.family})`}
`,t+=`Extension host agent listening on ${typeof c=="string"?c:c.port}
`,m.mark("code/server/started"),global.vscodeServerListenTime=w.now(),await u()}),process.on("exit",()=>{f.close(),o&&o.dispose()})}function g(e){return Array.isArray(e)&&(e=e.pop()),typeof e=="string"?e:void 0}async function H(e,r){if(r){let n;if(r.match(/^\d+$/))return parseInt(r,10);if(n=k(r)){const i=await $(e,n.start,n.end);if(i!==void 0)return i;process.exit(1)}else process.exit(1)}return 8e3}function k(e){const r=e.match(/^(\d+)-(\d+)$/);if(r){const n=parseInt(r[1],10),i=parseInt(r[2],10);if(n>0&&n<=i&&i<=65535)return{start:n,end:i}}}async function $(e,r,n){const i=a=>new Promise(o=>{const l=x.createServer();l.listen(a,e,()=>{l.close(),o(!0)}).on("error",()=>{o(!1)})});for(let a=r;a<=n;a++)if(await i(a))return a}function A(e){return new Promise((r,n)=>{process.env.VSCODE_NLS_CONFIG=JSON.stringify(e),process.env.VSCODE_HANDLES_SIGPIPE="true",process.env.VSCODE_DEV?(process.env.VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH=process.env.VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH||y.join(O,"..","remote","node_modules"),b.devInjectNodeModuleLookupPath(process.env.VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH)):delete process.env.VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH,N.load("vs/server/node/server.main",r,n)})}function U(){try{return!process.stdin.isTTY}catch{}return!1}function L(e){const r=P.createInterface({input:process.stdin,output:process.stdout});return new Promise((n,i)=>{r.question(e+" ",async function(a){r.close();const o=a.toString().trim().toLowerCase();o===""||o==="y"||o==="yes"?n(!0):o==="n"||o==="no"?n(!1):(process.stdout.write(`
Invalid Response. Answer either yes (y, yes) or no (n, no)
`),n(await L(e)))})})}V();
