{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/code/electron-utility/sharedProcess/contrib/languagePackCachedDataCleaner.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from \"fs\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport type { IStringDictionary } from \"../../../../base/common/collections.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { join } from \"../../../../base/common/path.js\";\nimport { Promises } from \"../../../../base/node/pfs.js\";\nimport { INativeEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\n\ninterface IExtensionEntry {\n\tversion: string;\n\textensionIdentifier: {\n\t\tid: string;\n\t\tuuid: string;\n\t};\n}\n\ninterface ILanguagePackEntry {\n\thash: string;\n\textensions: IExtensionEntry[];\n}\n\ninterface ILanguagePackFile {\n\t[locale: string]: ILanguagePackEntry;\n}\n\nexport class LanguagePackCachedDataCleaner extends Disposable {\n\tprivate readonly _DataMaxAge =\n\t\tthis.productService.quality !== \"stable\"\n\t\t\t? 1000 * 60 * 60 * 24 * 7 // roughly 1 week (insiders)\n\t\t\t: 1000 * 60 * 60 * 24 * 30 * 3; // roughly 3 months (stable)\n\n\tconstructor(\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper();\n\n\t\t// We have no Language pack support for dev version (run from source)\n\t\t// So only cleanup when we have a build version.\n\t\tif (this.environmentService.isBuilt) {\n\t\t\tconst scheduler = this._register(new RunOnceScheduler(() => {\n\t\t\t\tthis.cleanUpLanguagePackCache();\n\t\t\t}, 40 * 1000 /* after 40s */));\n\t\t\tscheduler.schedule();\n\t\t}\n\t}\n\n\tprivate async cleanUpLanguagePackCache(): Promise<void> {\n\t\tthis.logService.trace(\n\t\t\t\"[language pack cache cleanup]: Starting to clean up unused language packs.\",\n\t\t);\n\n\t\ttry {\n\t\t\tconst installed: IStringDictionary<boolean> = Object.create(null);\n\t\t\tconst metaData: ILanguagePackFile = JSON.parse(\n\t\t\t\tawait fs.promises.readFile(\n\t\t\t\t\tjoin(\n\t\t\t\t\t\tthis.environmentService.userDataPath,\n\t\t\t\t\t\t\"languagepacks.json\",\n\t\t\t\t\t),\n\t\t\t\t\t\"utf8\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tfor (const locale of Object.keys(metaData)) {\n\t\t\t\tconst entry = metaData[locale];\n\t\t\t\tinstalled[`${entry.hash}.${locale}`] = true;\n\t\t\t}\n\n\t\t\t// Cleanup entries for language packs that aren't installed anymore\n\t\t\tconst cacheDir = join(this.environmentService.userDataPath, \"clp\");\n\t\t\tconst cacheDirExists = await Promises.exists(cacheDir);\n\t\t\tif (!cacheDirExists) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst entries = await Promises.readdir(cacheDir);\n\t\t\tfor (const entry of entries) {\n\t\t\t\tif (installed[entry]) {\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t`[language pack cache cleanup]: Skipping folder ${entry}. Language pack still in use.`,\n\t\t\t\t\t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t`[language pack cache cleanup]: Removing unused language pack: ${entry}`,\n\t\t\t\t);\n\n\t\t\t\tawait Promises.rm(join(cacheDir, entry));\n\t\t\t}\n\n\t\t\tconst now = Date.now();\n\t\t\tfor (const packEntry of Object.keys(installed)) {\n\t\t\t\tconst folder = join(cacheDir, packEntry);\n\t\t\t\tconst entries = await Promises.readdir(folder);\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tif (entry === \"tcf.json\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst candidate = join(folder, entry);\n\t\t\t\t\tconst stat = await fs.promises.stat(candidate);\n\t\t\t\t\tif (\n\t\t\t\t\t\tstat.isDirectory() &&\n\t\t\t\t\t\tnow - stat.mtime.getTime() > this._DataMaxAge\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`[language pack cache cleanup]: Removing language pack cache folder: ${join(packEntry, entry)}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tawait Promises.rm(candidate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,QAAQ;AACpB,SAAS,wBAAwB;AAEjC,SAAS,yBAAyB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,YAAY;AACrB,SAAS,gBAAgB;AACzB,SAAS,iCAAiC;AAC1C,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAmBzB,IAAM,gCAAN,cAA4C,WAAW;AAAA;AAAA,EAM7D,YAC6C,oBACd,YACI,gBACjC;AACD,UAAM;AAJsC;AACd;AACI;AAMlC,QAAI,KAAK,mBAAmB,SAAS;AACpC,YAAM,YAAY,KAAK,UAAU,IAAI;AAAA,QAAiB,MAAM;AAC3D,eAAK,yBAAyB;AAAA,QAC/B;AAAA,QAAG,KAAK;AAAA;AAAA,MAAoB,CAAC;AAC7B,gBAAU,SAAS;AAAA,IACpB;AAAA,EACD;AAAA,EAtDD,OAiC8D;AAAA;AAAA;AAAA,EAC5C,cAChB,KAAK,eAAe,YAAY,WAC7B,MAAO,KAAK,KAAK,KAAK,IACtB,MAAO,KAAK,KAAK,KAAK,KAAK;AAAA,EAmB/B,MAAc,2BAA0C;AACvD,SAAK,WAAW;AAAA,MACf;AAAA,IACD;AAEA,QAAI;AACH,YAAM,YAAwC,uBAAO,OAAO,IAAI;AAChE,YAAM,WAA8B,KAAK;AAAA,QACxC,MAAM,GAAG,SAAS;AAAA,UACjB;AAAA,YACC,KAAK,mBAAmB;AAAA,YACxB;AAAA,UACD;AAAA,UACA;AAAA,QACD;AAAA,MACD;AACA,iBAAW,UAAU,OAAO,KAAK,QAAQ,GAAG;AAC3C,cAAM,QAAQ,SAAS,MAAM;AAC7B,kBAAU,GAAG,MAAM,IAAI,IAAI,MAAM,EAAE,IAAI;AAAA,MACxC;AAGA,YAAM,WAAW,KAAK,KAAK,mBAAmB,cAAc,KAAK;AACjE,YAAM,iBAAiB,MAAM,SAAS,OAAO,QAAQ;AACrD,UAAI,CAAC,gBAAgB;AACpB;AAAA,MACD;AAEA,YAAM,UAAU,MAAM,SAAS,QAAQ,QAAQ;AAC/C,iBAAW,SAAS,SAAS;AAC5B,YAAI,UAAU,KAAK,GAAG;AACrB,eAAK,WAAW;AAAA,YACf,kDAAkD,KAAK;AAAA,UACxD;AACA;AAAA,QACD;AAEA,aAAK,WAAW;AAAA,UACf,iEAAiE,KAAK;AAAA,QACvE;AAEA,cAAM,SAAS,GAAG,KAAK,UAAU,KAAK,CAAC;AAAA,MACxC;AAEA,YAAM,MAAM,KAAK,IAAI;AACrB,iBAAW,aAAa,OAAO,KAAK,SAAS,GAAG;AAC/C,cAAM,SAAS,KAAK,UAAU,SAAS;AACvC,cAAMA,WAAU,MAAM,SAAS,QAAQ,MAAM;AAC7C,mBAAW,SAASA,UAAS;AAC5B,cAAI,UAAU,YAAY;AACzB;AAAA,UACD;AAEA,gBAAM,YAAY,KAAK,QAAQ,KAAK;AACpC,gBAAM,OAAO,MAAM,GAAG,SAAS,KAAK,SAAS;AAC7C,cACC,KAAK,YAAY,KACjB,MAAM,KAAK,MAAM,QAAQ,IAAI,KAAK,aACjC;AACD,iBAAK,WAAW;AAAA,cACf,uEAAuE,KAAK,WAAW,KAAK,CAAC;AAAA,YAC9F;AAEA,kBAAM,SAAS,GAAG,SAAS;AAAA,UAC5B;AAAA,QACD;AAAA,MACD;AAAA,IACD,SAAS,OAAO;AACf,wBAAkB,KAAK;AAAA,IACxB;AAAA,EACD;AACD;AA9Fa,gCAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,GATU;",
  "names": ["entries"]
}
