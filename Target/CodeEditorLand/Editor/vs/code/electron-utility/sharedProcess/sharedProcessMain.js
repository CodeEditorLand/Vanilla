import{hostname as re,release as te}from"os";import{getDesktopEnvironment as ie}from"../../../base/common/desktopEnvironmentInfo.js";import{toErrorMessage as ne}from"../../../base/common/errorMessage.js";import{onUnexpectedError as A,setUnexpectedErrorHandler as oe}from"../../../base/common/errors.js";import{Emitter as se}from"../../../base/common/event.js";import{Disposable as ae,combinedDisposable as ce,toDisposable as R}from"../../../base/common/lifecycle.js";import{Schemas as P}from"../../../base/common/network.js";import{isLinux as b}from"../../../base/common/platform.js";import{URI as F}from"../../../base/common/uri.js";import{getCodeDisplayProtocol as me,getDisplayProtocol as le}from"../../../base/node/osDisplayProtocolInfo.js";import{getOSReleaseInfo as fe}from"../../../base/node/osReleaseInfo.js";import{ProxyChannel as c,StaticRouter as N}from"../../../base/parts/ipc/common/ipc.js";import{Server as pe,once as Se}from"../../../base/parts/ipc/node/ipc.mp.js";import{localize as ve}from"../../../nls.js";import{IChecksumService as H}from"../../../platform/checksum/common/checksumService.js";import{ChecksumService as de}from"../../../platform/checksum/node/checksumService.js";import{IConfigurationService as ge}from"../../../platform/configuration/common/configuration.js";import{ConfigurationService as ue}from"../../../platform/configuration/common/configurationService.js";import{IDiagnosticsService as O}from"../../../platform/diagnostics/common/diagnostics.js";import{DiagnosticsService as he}from"../../../platform/diagnostics/node/diagnosticsService.js";import{IDownloadService as ye}from"../../../platform/download/common/download.js";import{DownloadService as Ie}from"../../../platform/download/common/downloadService.js";import{INativeEnvironmentService as Pe}from"../../../platform/environment/common/environment.js";import{NativeEnvironmentService as Ce}from"../../../platform/environment/node/environmentService.js";import{GlobalExtensionEnablementService as we}from"../../../platform/extensionManagement/common/extensionEnablementService.js";import{ExtensionGalleryService as De}from"../../../platform/extensionManagement/common/extensionGalleryService.js";import{IExtensionGalleryService as Ee,IExtensionManagementService as xe,IExtensionTipsService as W,IGlobalExtensionEnablementService as Ue}from"../../../platform/extensionManagement/common/extensionManagement.js";import{ExtensionManagementChannel as Me,ExtensionTipsChannel as Le}from"../../../platform/extensionManagement/common/extensionManagementIpc.js";import{ExtensionStorageService as Te,IExtensionStorageService as _e}from"../../../platform/extensionManagement/common/extensionStorage.js";import{IExtensionsProfileScannerService as ke}from"../../../platform/extensionManagement/common/extensionsProfileScannerService.js";import{IExtensionsScannerService as Ae}from"../../../platform/extensionManagement/common/extensionsScannerService.js";import{ExtensionManagementService as Re,INativeServerExtensionManagementService as be}from"../../../platform/extensionManagement/node/extensionManagementService.js";import{ExtensionSignatureVerificationService as Fe,IExtensionSignatureVerificationService as Ne}from"../../../platform/extensionManagement/node/extensionSignatureVerificationService.js";import{ExtensionTipsService as He}from"../../../platform/extensionManagement/node/extensionTipsService.js";import{ExtensionsProfileScannerService as Oe}from"../../../platform/extensionManagement/node/extensionsProfileScannerService.js";import{ExtensionsScannerService as We}from"../../../platform/extensionManagement/node/extensionsScannerService.js";import{IExtensionRecommendationNotificationService as Ve}from"../../../platform/extensionRecommendations/common/extensionRecommendations.js";import{ExtensionRecommendationNotificationServiceChannelClient as ze}from"../../../platform/extensionRecommendations/common/extensionRecommendationsIpc.js";import{DiskFileSystemProviderClient as je,LOCAL_FILE_SYSTEM_CHANNEL_NAME as qe}from"../../../platform/files/common/diskFileSystemProviderClient.js";import{FileService as Ge}from"../../../platform/files/common/fileService.js";import{IFileService as Ke}from"../../../platform/files/common/files.js";import{DiskFileSystemProvider as Be}from"../../../platform/files/node/diskFileSystemProvider.js";import{SyncDescriptor as t}from"../../../platform/instantiation/common/descriptors.js";import{IInstantiationService as Je}from"../../../platform/instantiation/common/instantiation.js";import{InstantiationService as Ye}from"../../../platform/instantiation/common/instantiationService.js";import{ServiceCollection as $e}from"../../../platform/instantiation/common/serviceCollection.js";import{IMainProcessService as Qe,MainProcessService as Xe}from"../../../platform/ipc/common/mainProcessService.js";import{ILanguagePackService as V}from"../../../platform/languagePacks/common/languagePacks.js";import{NativeLanguagePackService as Ze}from"../../../platform/languagePacks/node/languagePacks.js";import{ISharedProcessLifecycleService as er,SharedProcessLifecycleService as rr}from"../../../platform/lifecycle/node/sharedProcessLifecycleService.js";import{ConsoleLogger as tr,ILogService as x,ILoggerService as ir}from"../../../platform/log/common/log.js";import{LoggerChannelClient as nr}from"../../../platform/log/common/logIpc.js";import{LogService as or}from"../../../platform/log/common/logService.js";import{INativeHostService as sr}from"../../../platform/native/common/native.js";import{NativeHostService as ar}from"../../../platform/native/common/nativeHostService.js";import{IPolicyService as cr,NullPolicyService as mr}from"../../../platform/policy/common/policy.js";import{PolicyChannelClient as lr}from"../../../platform/policy/common/policyIpc.js";import fr from"../../../platform/product/common/product.js";import{IProductService as pr}from"../../../platform/product/common/productService.js";import{IV8InspectProfilingService as z}from"../../../platform/profiling/common/profiling.js";import{InspectProfilingService as Sr}from"../../../platform/profiling/node/profilingService.js";import{RemoteConnectionType as vr}from"../../../platform/remote/common/remoteAuthorityResolver.js";import{IRemoteSocketFactoryService as dr,RemoteSocketFactoryService as gr}from"../../../platform/remote/common/remoteSocketFactoryService.js";import{ISharedProcessTunnelService as j,ipcSharedProcessTunnelChannelName as ur}from"../../../platform/remote/common/sharedProcessTunnelService.js";import{nodeSocketFactory as hr}from"../../../platform/remote/node/nodeSocketFactory.js";import{IRemoteTunnelService as q}from"../../../platform/remoteTunnel/common/remoteTunnel.js";import{RemoteTunnelService as yr}from"../../../platform/remoteTunnel/node/remoteTunnelService.js";import{IRequestService as Ir}from"../../../platform/request/common/request.js";import{RequestService as Pr}from"../../../platform/request/electron-utility/requestService.js";import{SharedProcessLifecycle as U,SharedProcessRawConnection as Cr}from"../../../platform/sharedProcess/common/sharedProcess.js";import{ISignService as wr}from"../../../platform/sign/common/sign.js";import{SignService as Dr}from"../../../platform/sign/node/signService.js";import{IStorageService as Er}from"../../../platform/storage/common/storage.js";import{RemoteStorageService as xr}from"../../../platform/storage/common/storageService.js";import{resolveCommonProperties as Ur}from"../../../platform/telemetry/common/commonProperties.js";import{ICustomEndpointTelemetryService as G,ITelemetryService as K}from"../../../platform/telemetry/common/telemetry.js";import{TelemetryAppenderChannel as Mr}from"../../../platform/telemetry/common/telemetryIpc.js";import{TelemetryLogAppender as Lr}from"../../../platform/telemetry/common/telemetryLogAppender.js";import{TelemetryService as Tr}from"../../../platform/telemetry/common/telemetryService.js";import{NullAppender as _r,NullTelemetryService as kr,getPiiPathsFromEnvironment as Ar,isInternalTelemetry as Rr,isLoggingOnly as br,supportsTelemetry as Fr}from"../../../platform/telemetry/common/telemetryUtils.js";import{OneDataSystemAppender as Nr}from"../../../platform/telemetry/node/1dsAppender.js";import{CustomEndpointTelemetryService as Hr}from"../../../platform/telemetry/node/customEndpointTelemetryService.js";import{ISharedTunnelsService as Or}from"../../../platform/tunnel/common/tunnel.js";import{SharedProcessTunnelService as Wr}from"../../../platform/tunnel/node/sharedProcessTunnelService.js";import{SharedTunnelsService as Vr}from"../../../platform/tunnel/node/tunnelService.js";import{IUriIdentityService as zr}from"../../../platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as jr}from"../../../platform/uriIdentity/common/uriIdentityService.js";import{FileUserDataProvider as qr}from"../../../platform/userData/common/fileUserDataProvider.js";import{IUserDataProfilesService as M}from"../../../platform/userDataProfile/common/userDataProfile.js";import{UserDataProfilesService as Gr}from"../../../platform/userDataProfile/common/userDataProfileIpc.js";import{IUserDataProfileStorageService as Kr}from"../../../platform/userDataProfile/common/userDataProfileStorageService.js";import{SharedProcessUserDataProfileStorageService as Br}from"../../../platform/userDataProfile/node/userDataProfileStorageService.js";import{IIgnoredExtensionsManagementService as Jr,IgnoredExtensionsManagementService as Yr}from"../../../platform/userDataSync/common/ignoredExtensions.js";import{IUserDataSyncEnablementService as $r,IUserDataSyncLocalStoreService as Qr,IUserDataSyncLogService as Xr,IUserDataSyncResourceProviderService as B,IUserDataSyncService as J,IUserDataSyncStoreManagementService as Y,IUserDataSyncStoreService as Zr,IUserDataSyncUtilService as et,registerConfiguration as rt}from"../../../platform/userDataSync/common/userDataSync.js";import{IUserDataSyncAccountService as $,UserDataSyncAccountService as tt}from"../../../platform/userDataSync/common/userDataSyncAccount.js";import{UserDataSyncEnablementService as it}from"../../../platform/userDataSync/common/userDataSyncEnablementService.js";import{UserDataSyncAccountServiceChannel as nt,UserDataSyncStoreManagementServiceChannel as ot}from"../../../platform/userDataSync/common/userDataSyncIpc.js";import{UserDataSyncLocalStoreService as st}from"../../../platform/userDataSync/common/userDataSyncLocalStoreService.js";import{UserDataSyncLogService as at}from"../../../platform/userDataSync/common/userDataSyncLog.js";import{IUserDataSyncMachinesService as Q,UserDataSyncMachinesService as ct}from"../../../platform/userDataSync/common/userDataSyncMachines.js";import{UserDataSyncResourceProviderService as mt}from"../../../platform/userDataSync/common/userDataSyncResourceProvider.js";import{UserDataSyncService as lt}from"../../../platform/userDataSync/common/userDataSyncService.js";import{UserDataSyncServiceChannel as ft}from"../../../platform/userDataSync/common/userDataSyncServiceIpc.js";import{UserDataSyncStoreManagementService as pt,UserDataSyncStoreService as St}from"../../../platform/userDataSync/common/userDataSyncStoreService.js";import{UserDataAutoSyncService as vt}from"../../../platform/userDataSync/node/userDataAutoSyncService.js";import{ActiveWindowManager as dt}from"../../../platform/windows/node/windowTracker.js";import{CodeCacheCleaner as gt}from"./contrib/codeCacheCleaner.js";import{ExtensionsContributions as ut}from"./contrib/extensions.js";import{LanguagePackCachedDataCleaner as ht}from"./contrib/languagePackCachedDataCleaner.js";import{LocalizationsUpdater as yt}from"./contrib/localizationsUpdater.js";import{LogsDataCleaner as It}from"./contrib/logsDataCleaner.js";import{UnusedWorkspaceStorageDataCleaner as Pt}from"./contrib/storageDataCleaner.js";import{UserDataProfilesCleaner as Ct}from"./contrib/userDataProfilesCleaner.js";class wt extends ae{constructor(e){super();this.configuration=e;this.registerListeners()}server=this._register(new pe(this));lifecycleService=void 0;onDidWindowConnectRaw=this._register(new se);registerListeners(){let e=!1;const r=()=>{e||(e=!0,this.lifecycleService?.fireOnWillShutdown(),this.dispose())};process.once("exit",r),Se(process.parentPort,U.exit,r)}async init(){const e=await this.initServices();rt(),e.invokeFunction(r=>{const n=r.get(x),i=r.get(K),m=r.get(M);n.trace("sharedProcess configuration",JSON.stringify(this.configuration)),this.initChannels(r),this.registerErrorHandler(n),this.reportProfilesInfo(i,m),this._register(m.onDidChangeProfiles(()=>this.reportProfilesInfo(i,m))),this.reportClientOSInfo(i,n)}),this._register(ce(e.createInstance(gt,this.configuration.codeCachePath),e.createInstance(ht),e.createInstance(Pt),e.createInstance(It),e.createInstance(yt),e.createInstance(ut),e.createInstance(Ct)))}async initServices(){const e=new $e,r={_serviceBrand:void 0,...fr};e.set(pr,r);const n=new N(s=>s==="main"),i=new Xe(this.server,n);e.set(Qe,i);const m=this.configuration.policiesData?new lr(this.configuration.policiesData,i.getChannel("policy")):new mr;e.set(cr,m);const o=new Ce(this.configuration.args,r);e.set(Pe,o);const p=new nr(void 0,this.configuration.logLevel,o.logsHome,this.configuration.loggers.map(s=>({...s,resource:F.revive(s.resource)})),i.getChannel("logger"));e.set(ir,p);const u=this._register(p.createLogger("sharedprocess",{name:ve("sharedLog","Shared")})),C=this._register(new tr(u.getLevel())),a=this._register(new or(u,[C]));e.set(x,a),this.lifecycleService=this._register(new rr(a)),e.set(er,this.lifecycleService);const l=this._register(new Ge(a));e.set(Ke,l);const w=this._register(new Be(a));l.registerProvider(P.file,w);const h=new jr(l);e.set(zr,h);const f=this._register(new Gr(this.configuration.profiles.all,F.revive(this.configuration.profiles.home).with({scheme:o.userRoamingDataHome.scheme}),i.getChannel("userDataProfiles")));e.set(M,f);const D=this._register(new qr(P.file,this._register(new je(i.getChannel(qe),{pathCaseSensitive:b})),P.vscodeUserData,f,h,a));l.registerProvider(P.vscodeUserData,D);const S=this._register(new ue(f.defaultProfile.settingsResource,l,m,a));e.set(ge,S);const E=new xr(void 0,{defaultProfile:f.defaultProfile,currentProfile:f.defaultProfile},i,o);e.set(Er,E),this._register(R(()=>E.flush())),await Promise.all([S.initialize(),E.initialize()]);const L=new Pr(S,o,a);e.set(Ir,L),e.set(H,new t(de,void 0,!1)),e.set(z,new t(Sr,void 0,!1));const T=new ar(-1,i);e.set(sr,T),e.set(ye,new t(Ie,void 0,!0));const X=this._register(new dt(T)),Z=new N(s=>X.getActiveClientId().then(I=>s===I));e.set(Ve,new ze(this.server.getChannel("extensionRecommendationNotification",Z)));let y;const v=[],_=Rr(r,S);if(Fr(r,o)){const s=new Lr(a,p,o,r);if(v.push(s),!br(r,o)&&r.aiConfig?.ariaKey){const I=new Nr(L,_,"monacoworkbench",null,r.aiConfig.ariaKey);this._register(R(()=>I.flush())),v.push(I)}y=new Tr({appenders:v,commonProperties:Ur(te(),re(),process.arch,r.commit,r.version,this.configuration.machineId,this.configuration.sqmId,this.configuration.devDeviceId,_),sendErrorTelemetry:!0,piiPaths:Ar(o)},S,r)}else{y=kr;const s=_r;v.push(s)}this.server.registerChannel("telemetryAppender",new Mr(v)),e.set(K,y);const ee=new Hr(S,y,a,p,o,r);e.set(G,ee),e.set(ke,new t(Oe,void 0,!0)),e.set(Ae,new t(We,void 0,!0)),e.set(Ne,new t(Fe,void 0,!0)),e.set(be,new t(Re,void 0,!0)),e.set(Ee,new t(De,void 0,!0)),e.set(W,new t(He,void 0,!1)),e.set(V,new t(Ze,void 0,!1)),e.set(O,new t(he,void 0,!1)),e.set($,new t(tt,void 0,!0)),e.set(Xr,new t(at,void 0,!0)),e.set(et,c.toService(this.server.getChannel("userDataSyncUtil",s=>s.ctx!=="main"))),e.set(Ue,new t(we,void 0,!1)),e.set(Jr,new t(Yr,void 0,!0)),e.set(_e,new t(Te)),e.set(Y,new t(pt,void 0,!0)),e.set(Zr,new t(St,void 0,!0)),e.set(Q,new t(ct,void 0,!0)),e.set(Qr,new t(st,void 0,!1)),e.set($r,new t(it,void 0,!0)),e.set(J,new t(lt,void 0,!1)),e.set(Kr,new t(Br,void 0,!0)),e.set(B,new t(mt,void 0,!0)),e.set(wr,new t(Dr,void 0,!1));const k=new gr;return e.set(dr,k),k.register(vr.WebSocket,hr),e.set(Or,new t(Vr)),e.set(j,new t(Wr)),e.set(q,new t(yr)),new Ye(e)}initChannels(e){const r=new Me(e.get(xe),()=>null);this.server.registerChannel("extensions",r);const n=c.fromService(e.get(V),this._store);this.server.registerChannel("languagePacks",n);const i=c.fromService(e.get(O),this._store);this.server.registerChannel("diagnostics",i);const m=new Le(e.get(W));this.server.registerChannel("extensionTipsService",m);const o=c.fromService(e.get(H),this._store);this.server.registerChannel("checksum",o);const p=c.fromService(e.get(z),this._store);this.server.registerChannel("v8InspectProfiling",p);const u=c.fromService(e.get(Q),this._store);this.server.registerChannel("userDataSyncMachines",u);const C=c.fromService(e.get(G),this._store);this.server.registerChannel("customEndpointTelemetry",C);const a=new nt(e.get($));this.server.registerChannel("userDataSyncAccount",a);const l=new ot(e.get(Y));this.server.registerChannel("userDataSyncStoreManagement",l);const w=new ft(e.get(J),e.get(M),e.get(x));this.server.registerChannel("userDataSync",w);const h=this._register(e.get(Je).createInstance(vt));this.server.registerChannel("userDataAutoSync",c.fromService(h,this._store)),this.server.registerChannel("IUserDataSyncResourceProviderService",c.fromService(e.get(B),this._store));const f=c.fromService(e.get(j),this._store);this.server.registerChannel(ur,f);const D=c.fromService(e.get(q),this._store);this.server.registerChannel("remoteTunnel",D)}registerErrorHandler(e){process.on("uncaughtException",r=>A(r)),process.on("unhandledRejection",r=>A(r)),oe(r=>{const n=ne(r,!0);n&&e.error(`[uncaught exception in sharedProcess]: ${n}`)})}reportProfilesInfo(e,r){e.publicLog2("profilesInfo",{count:r.profiles.length})}async reportClientOSInfo(e,r){if(b){const[n,i]=await Promise.all([fe(r.error.bind(r)),le(r.error.bind(r))]),m=ie(),o=me(i,this.configuration.args["ozone-platform"]);n&&e.publicLog2("clientPlatformInfo",{platformId:n.id,platformVersionId:n.version_id,platformIdLike:n.id_like,desktopEnvironment:m,displayProtocol:i,codeDisplayProtocol:o})}}handledClientConnection(e){if(e.data!==Cr.response)return!1;const r=e.ports.at(0);return r?(this.onDidWindowConnectRaw.fire(r),!0):!1}}async function Dt(d){try{const g=new wt(d);process.parentPort.postMessage(U.ipcReady),await g.init(),process.parentPort.postMessage(U.initDone)}catch(g){process.parentPort.postMessage({error:g.toString()})}}const Et=setTimeout(()=>{process.parentPort.postMessage({warning:"[SharedProcess] did not receive configuration within 30s..."})},3e4);process.parentPort.once("message",d=>{clearTimeout(Et),Dt(d.data)});export{Dt as main};
