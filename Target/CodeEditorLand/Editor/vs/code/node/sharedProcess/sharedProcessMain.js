import{hostname as re,release as te}from"os";import{firstOrDefault as ie}from"../../../../vs/base/common/arrays.js";import{getDesktopEnvironment as ne}from"../../../../vs/base/common/desktopEnvironmentInfo.js";import{toErrorMessage as oe}from"../../../../vs/base/common/errorMessage.js";import{onUnexpectedError as A,setUnexpectedErrorHandler as se}from"../../../../vs/base/common/errors.js";import{Emitter as ae}from"../../../../vs/base/common/event.js";import{combinedDisposable as ce,Disposable as me,toDisposable as R}from"../../../../vs/base/common/lifecycle.js";import{Schemas as C}from"../../../../vs/base/common/network.js";import{isLinux as F}from"../../../../vs/base/common/platform.js";import{URI as b}from"../../../../vs/base/common/uri.js";import{getCodeDisplayProtocol as le,getDisplayProtocol as fe}from"../../../../vs/base/node/osDisplayProtocolInfo.js";import{getOSReleaseInfo as pe}from"../../../../vs/base/node/osReleaseInfo.js";import{ProxyChannel as a,StaticRouter as N}from"../../../../vs/base/parts/ipc/common/ipc.js";import{once as Se,Server as ve}from"../../../../vs/base/parts/ipc/node/ipc.mp.js";import"../../../../vs/base/parts/sandbox/node/electronTypes.js";import{CodeCacheCleaner as de}from"../../../../vs/code/node/sharedProcess/contrib/codeCacheCleaner.js";import{ExtensionsContributions as ge}from"../../../../vs/code/node/sharedProcess/contrib/extensions.js";import{LanguagePackCachedDataCleaner as ue}from"../../../../vs/code/node/sharedProcess/contrib/languagePackCachedDataCleaner.js";import{LocalizationsUpdater as he}from"../../../../vs/code/node/sharedProcess/contrib/localizationsUpdater.js";import{LogsDataCleaner as ye}from"../../../../vs/code/node/sharedProcess/contrib/logsDataCleaner.js";import{UnusedWorkspaceStorageDataCleaner as Ie}from"../../../../vs/code/node/sharedProcess/contrib/storageDataCleaner.js";import{UserDataProfilesCleaner as Ce}from"../../../../vs/code/node/sharedProcess/contrib/userDataProfilesCleaner.js";import{localize as Pe}from"../../../../vs/nls.js";import{IChecksumService as H}from"../../../../vs/platform/checksum/common/checksumService.js";import{ChecksumService as we}from"../../../../vs/platform/checksum/node/checksumService.js";import{IConfigurationService as De}from"../../../../vs/platform/configuration/common/configuration.js";import{ConfigurationService as Ee}from"../../../../vs/platform/configuration/common/configurationService.js";import{IDiagnosticsService as O}from"../../../../vs/platform/diagnostics/common/diagnostics.js";import{DiagnosticsService as Ue}from"../../../../vs/platform/diagnostics/node/diagnosticsService.js";import{IDownloadService as xe}from"../../../../vs/platform/download/common/download.js";import{DownloadService as Me}from"../../../../vs/platform/download/common/downloadService.js";import{INativeEnvironmentService as Le}from"../../../../vs/platform/environment/common/environment.js";import{NativeEnvironmentService as Te}from"../../../../vs/platform/environment/node/environmentService.js";import{GlobalExtensionEnablementService as _e}from"../../../../vs/platform/extensionManagement/common/extensionEnablementService.js";import{ExtensionGalleryService as ke}from"../../../../vs/platform/extensionManagement/common/extensionGalleryService.js";import{IExtensionGalleryService as Ae,IExtensionManagementService as Re,IExtensionTipsService as W,IGlobalExtensionEnablementService as Fe}from"../../../../vs/platform/extensionManagement/common/extensionManagement.js";import{ExtensionManagementChannel as be,ExtensionTipsChannel as Ne}from"../../../../vs/platform/extensionManagement/common/extensionManagementIpc.js";import{IExtensionsProfileScannerService as He}from"../../../../vs/platform/extensionManagement/common/extensionsProfileScannerService.js";import{IExtensionsScannerService as Oe}from"../../../../vs/platform/extensionManagement/common/extensionsScannerService.js";import{ExtensionStorageService as We,IExtensionStorageService as Ve}from"../../../../vs/platform/extensionManagement/common/extensionStorage.js";import{ExtensionManagementService as qe,INativeServerExtensionManagementService as ze}from"../../../../vs/platform/extensionManagement/node/extensionManagementService.js";import{ExtensionSignatureVerificationService as Ge,IExtensionSignatureVerificationService as je}from"../../../../vs/platform/extensionManagement/node/extensionSignatureVerificationService.js";import{ExtensionsProfileScannerService as Ke}from"../../../../vs/platform/extensionManagement/node/extensionsProfileScannerService.js";import{ExtensionsScannerService as Be}from"../../../../vs/platform/extensionManagement/node/extensionsScannerService.js";import{ExtensionTipsService as Je}from"../../../../vs/platform/extensionManagement/node/extensionTipsService.js";import{IExtensionRecommendationNotificationService as Ye}from"../../../../vs/platform/extensionRecommendations/common/extensionRecommendations.js";import{ExtensionRecommendationNotificationServiceChannelClient as $e}from"../../../../vs/platform/extensionRecommendations/common/extensionRecommendationsIpc.js";import{DiskFileSystemProviderClient as Qe,LOCAL_FILE_SYSTEM_CHANNEL_NAME as Xe}from"../../../../vs/platform/files/common/diskFileSystemProviderClient.js";import{IFileService as Ze}from"../../../../vs/platform/files/common/files.js";import{FileService as er}from"../../../../vs/platform/files/common/fileService.js";import{DiskFileSystemProvider as rr}from"../../../../vs/platform/files/node/diskFileSystemProvider.js";import{SyncDescriptor as t}from"../../../../vs/platform/instantiation/common/descriptors.js";import{IInstantiationService as tr}from"../../../../vs/platform/instantiation/common/instantiation.js";import{InstantiationService as ir}from"../../../../vs/platform/instantiation/common/instantiationService.js";import{ServiceCollection as nr}from"../../../../vs/platform/instantiation/common/serviceCollection.js";import{IMainProcessService as or,MainProcessService as sr}from"../../../../vs/platform/ipc/common/mainProcessService.js";import{ILanguagePackService as V}from"../../../../vs/platform/languagePacks/common/languagePacks.js";import{NativeLanguagePackService as ar}from"../../../../vs/platform/languagePacks/node/languagePacks.js";import{ISharedProcessLifecycleService as cr,SharedProcessLifecycleService as mr}from"../../../../vs/platform/lifecycle/node/sharedProcessLifecycleService.js";import{ConsoleLogger as lr,ILoggerService as fr,ILogService as U}from"../../../../vs/platform/log/common/log.js";import{LoggerChannelClient as pr}from"../../../../vs/platform/log/common/logIpc.js";import{LogService as Sr}from"../../../../vs/platform/log/common/logService.js";import{INativeHostService as vr}from"../../../../vs/platform/native/common/native.js";import{NativeHostService as dr}from"../../../../vs/platform/native/common/nativeHostService.js";import{IPolicyService as gr,NullPolicyService as ur}from"../../../../vs/platform/policy/common/policy.js";import{PolicyChannelClient as hr}from"../../../../vs/platform/policy/common/policyIpc.js";import yr from"../../../../vs/platform/product/common/product.js";import{IProductService as Ir}from"../../../../vs/platform/product/common/productService.js";import{IV8InspectProfilingService as q}from"../../../../vs/platform/profiling/common/profiling.js";import{InspectProfilingService as Cr}from"../../../../vs/platform/profiling/node/profilingService.js";import{RemoteConnectionType as Pr}from"../../../../vs/platform/remote/common/remoteAuthorityResolver.js";import{IRemoteSocketFactoryService as wr,RemoteSocketFactoryService as Dr}from"../../../../vs/platform/remote/common/remoteSocketFactoryService.js";import{ipcSharedProcessTunnelChannelName as Er,ISharedProcessTunnelService as z}from"../../../../vs/platform/remote/common/sharedProcessTunnelService.js";import{nodeSocketFactory as Ur}from"../../../../vs/platform/remote/node/nodeSocketFactory.js";import{IRemoteTunnelService as G}from"../../../../vs/platform/remoteTunnel/common/remoteTunnel.js";import{RemoteTunnelService as xr}from"../../../../vs/platform/remoteTunnel/node/remoteTunnelService.js";import{IRequestService as Mr}from"../../../../vs/platform/request/common/request.js";import{RequestChannelClient as Lr}from"../../../../vs/platform/request/common/requestIpc.js";import{SharedProcessLifecycle as x,SharedProcessRawConnection as Tr}from"../../../../vs/platform/sharedProcess/common/sharedProcess.js";import"../../../../vs/platform/sharedProcess/node/sharedProcess.js";import{ISignService as _r}from"../../../../vs/platform/sign/common/sign.js";import{SignService as kr}from"../../../../vs/platform/sign/node/signService.js";import{IStorageService as Ar}from"../../../../vs/platform/storage/common/storage.js";import{RemoteStorageService as Rr}from"../../../../vs/platform/storage/common/storageService.js";import{resolveCommonProperties as Fr}from"../../../../vs/platform/telemetry/common/commonProperties.js";import{ICustomEndpointTelemetryService as j,ITelemetryService as K}from"../../../../vs/platform/telemetry/common/telemetry.js";import{TelemetryAppenderChannel as br}from"../../../../vs/platform/telemetry/common/telemetryIpc.js";import{TelemetryLogAppender as Nr}from"../../../../vs/platform/telemetry/common/telemetryLogAppender.js";import{TelemetryService as Hr}from"../../../../vs/platform/telemetry/common/telemetryService.js";import{getPiiPathsFromEnvironment as Or,isInternalTelemetry as Wr,isLoggingOnly as Vr,NullAppender as qr,NullTelemetryService as zr,supportsTelemetry as Gr}from"../../../../vs/platform/telemetry/common/telemetryUtils.js";import{OneDataSystemAppender as jr}from"../../../../vs/platform/telemetry/node/1dsAppender.js";import{CustomEndpointTelemetryService as Kr}from"../../../../vs/platform/telemetry/node/customEndpointTelemetryService.js";import{ISharedTunnelsService as Br}from"../../../../vs/platform/tunnel/common/tunnel.js";import{SharedProcessTunnelService as Jr}from"../../../../vs/platform/tunnel/node/sharedProcessTunnelService.js";import{SharedTunnelsService as Yr}from"../../../../vs/platform/tunnel/node/tunnelService.js";import{IUriIdentityService as $r}from"../../../../vs/platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as Qr}from"../../../../vs/platform/uriIdentity/common/uriIdentityService.js";import{FileUserDataProvider as Xr}from"../../../../vs/platform/userData/common/fileUserDataProvider.js";import{IUserDataProfilesService as M}from"../../../../vs/platform/userDataProfile/common/userDataProfile.js";import{UserDataProfilesService as Zr}from"../../../../vs/platform/userDataProfile/common/userDataProfileIpc.js";import{IUserDataProfileStorageService as et}from"../../../../vs/platform/userDataProfile/common/userDataProfileStorageService.js";import{SharedProcessUserDataProfileStorageService as rt}from"../../../../vs/platform/userDataProfile/node/userDataProfileStorageService.js";import{IgnoredExtensionsManagementService as tt,IIgnoredExtensionsManagementService as it}from"../../../../vs/platform/userDataSync/common/ignoredExtensions.js";import{IUserDataSyncEnablementService as nt,IUserDataSyncLocalStoreService as ot,IUserDataSyncLogService as st,IUserDataSyncResourceProviderService as B,IUserDataSyncService as J,IUserDataSyncStoreManagementService as Y,IUserDataSyncStoreService as at,IUserDataSyncUtilService as ct,registerConfiguration as mt}from"../../../../vs/platform/userDataSync/common/userDataSync.js";import{IUserDataSyncAccountService as $,UserDataSyncAccountService as lt}from"../../../../vs/platform/userDataSync/common/userDataSyncAccount.js";import{UserDataSyncEnablementService as ft}from"../../../../vs/platform/userDataSync/common/userDataSyncEnablementService.js";import{UserDataSyncAccountServiceChannel as pt,UserDataSyncStoreManagementServiceChannel as St}from"../../../../vs/platform/userDataSync/common/userDataSyncIpc.js";import{UserDataSyncLocalStoreService as vt}from"../../../../vs/platform/userDataSync/common/userDataSyncLocalStoreService.js";import{UserDataSyncLogService as dt}from"../../../../vs/platform/userDataSync/common/userDataSyncLog.js";import{IUserDataSyncMachinesService as Q,UserDataSyncMachinesService as gt}from"../../../../vs/platform/userDataSync/common/userDataSyncMachines.js";import{UserDataSyncResourceProviderService as ut}from"../../../../vs/platform/userDataSync/common/userDataSyncResourceProvider.js";import{UserDataSyncService as ht}from"../../../../vs/platform/userDataSync/common/userDataSyncService.js";import{UserDataSyncServiceChannel as yt}from"../../../../vs/platform/userDataSync/common/userDataSyncServiceIpc.js";import{UserDataSyncStoreManagementService as It,UserDataSyncStoreService as Ct}from"../../../../vs/platform/userDataSync/common/userDataSyncStoreService.js";import{UserDataAutoSyncService as Pt}from"../../../../vs/platform/userDataSync/node/userDataAutoSyncService.js";import{ActiveWindowManager as wt}from"../../../../vs/platform/windows/node/windowTracker.js";class Dt extends me{constructor(e){super();this.configuration=e;this.registerListeners()}server=this._register(new ve(this));lifecycleService=void 0;onDidWindowConnectRaw=this._register(new ae);registerListeners(){let e=!1;const r=()=>{e||(e=!0,this.lifecycleService?.fireOnWillShutdown(),this.dispose())};process.once("exit",r),Se(process.parentPort,x.exit,r)}async init(){const e=await this.initServices();mt(),e.invokeFunction(r=>{const n=r.get(U),i=r.get(K),c=r.get(M);n.trace("sharedProcess configuration",JSON.stringify(this.configuration)),this.initChannels(r),this.registerErrorHandler(n),this.reportProfilesInfo(i,c),this._register(c.onDidChangeProfiles(()=>this.reportProfilesInfo(i,c))),this.reportClientOSInfo(i,n)}),this._register(ce(e.createInstance(de,this.configuration.codeCachePath),e.createInstance(ue),e.createInstance(Ie),e.createInstance(ye),e.createInstance(he),e.createInstance(ge),e.createInstance(Ce)))}async initServices(){const e=new nr,r={_serviceBrand:void 0,...yr};e.set(Ir,r);const n=new N(s=>s==="main"),i=new sr(this.server,n);e.set(or,i);const c=this.configuration.policiesData?new hr(this.configuration.policiesData,i.getChannel("policy")):new ur;e.set(gr,c);const o=new Te(this.configuration.args,r);e.set(Le,o);const p=new pr(void 0,this.configuration.logLevel,o.logsHome,this.configuration.loggers.map(s=>({...s,resource:b.revive(s.resource)})),i.getChannel("logger"));e.set(fr,p);const u=this._register(p.createLogger("sharedprocess",{name:Pe("sharedLog","Shared")})),P=this._register(new lr(u.getLevel())),m=this._register(new Sr(u,[P]));e.set(U,m),this.lifecycleService=this._register(new mr(m)),e.set(cr,this.lifecycleService);const l=this._register(new er(m));e.set(Ze,l);const w=this._register(new rr(m));l.registerProvider(C.file,w);const h=new Qr(l);e.set($r,h);const f=this._register(new Zr(this.configuration.profiles.all,b.revive(this.configuration.profiles.home).with({scheme:o.userRoamingDataHome.scheme}),i.getChannel("userDataProfiles")));e.set(M,f);const D=this._register(new Xr(C.file,this._register(new Qe(i.getChannel(Xe),{pathCaseSensitive:F})),C.vscodeUserData,f,h,m));l.registerProvider(C.vscodeUserData,D);const S=this._register(new Ee(f.defaultProfile.settingsResource,l,c,m));e.set(De,S);const E=new Rr(void 0,{defaultProfile:f.defaultProfile,currentProfile:f.defaultProfile},i,o);e.set(Ar,E),this._register(R(()=>E.flush())),await Promise.all([S.initialize(),E.initialize()]);const L=new Lr(i.getChannel("request"));e.set(Mr,L),e.set(H,new t(we,void 0,!1)),e.set(q,new t(Cr,void 0,!1));const T=new dr(-1,i);e.set(vr,T),e.set(xe,new t(Me,void 0,!0));const X=this._register(new wt(T)),Z=new N(s=>X.getActiveClientId().then(I=>s===I));e.set(Ye,new $e(this.server.getChannel("extensionRecommendationNotification",Z)));let y;const v=[],_=Wr(r,S);if(Gr(r,o)){const s=new Nr(m,p,o,r);if(v.push(s),!Vr(r,o)&&r.aiConfig?.ariaKey){const I=new jr(L,_,"monacoworkbench",null,r.aiConfig.ariaKey);this._register(R(()=>I.flush())),v.push(I)}y=new Hr({appenders:v,commonProperties:Fr(te(),re(),process.arch,r.commit,r.version,this.configuration.machineId,this.configuration.sqmId,this.configuration.devDeviceId,_),sendErrorTelemetry:!0,piiPaths:Or(o)},S,r)}else{y=zr;const s=qr;v.push(s)}this.server.registerChannel("telemetryAppender",new br(v)),e.set(K,y);const ee=new Kr(S,y,m,p,o,r);e.set(j,ee),e.set(He,new t(Ke,void 0,!0)),e.set(Oe,new t(Be,void 0,!0)),e.set(je,new t(Ge,void 0,!0)),e.set(ze,new t(qe,void 0,!0)),e.set(Ae,new t(ke,void 0,!0)),e.set(W,new t(Je,void 0,!1)),e.set(V,new t(ar,void 0,!1)),e.set(O,new t(Ue,void 0,!1)),e.set($,new t(lt,void 0,!0)),e.set(st,new t(dt,void 0,!0)),e.set(ct,a.toService(this.server.getChannel("userDataSyncUtil",s=>s.ctx!=="main"))),e.set(Fe,new t(_e,void 0,!1)),e.set(it,new t(tt,void 0,!0)),e.set(Ve,new t(We)),e.set(Y,new t(It,void 0,!0)),e.set(at,new t(Ct,void 0,!0)),e.set(Q,new t(gt,void 0,!0)),e.set(ot,new t(vt,void 0,!1)),e.set(nt,new t(ft,void 0,!0)),e.set(J,new t(ht,void 0,!1)),e.set(et,new t(rt,void 0,!0)),e.set(B,new t(ut,void 0,!0)),e.set(_r,new t(kr,void 0,!1));const k=new Dr;return e.set(wr,k),k.register(Pr.WebSocket,Ur),e.set(Br,new t(Yr)),e.set(z,new t(Jr)),e.set(G,new t(xr)),new ir(e)}initChannels(e){const r=new be(e.get(Re),()=>null);this.server.registerChannel("extensions",r);const n=a.fromService(e.get(V),this._store);this.server.registerChannel("languagePacks",n);const i=a.fromService(e.get(O),this._store);this.server.registerChannel("diagnostics",i);const c=new Ne(e.get(W));this.server.registerChannel("extensionTipsService",c);const o=a.fromService(e.get(H),this._store);this.server.registerChannel("checksum",o);const p=a.fromService(e.get(q),this._store);this.server.registerChannel("v8InspectProfiling",p);const u=a.fromService(e.get(Q),this._store);this.server.registerChannel("userDataSyncMachines",u);const P=a.fromService(e.get(j),this._store);this.server.registerChannel("customEndpointTelemetry",P);const m=new pt(e.get($));this.server.registerChannel("userDataSyncAccount",m);const l=new St(e.get(Y));this.server.registerChannel("userDataSyncStoreManagement",l);const w=new yt(e.get(J),e.get(M),e.get(U));this.server.registerChannel("userDataSync",w);const h=this._register(e.get(tr).createInstance(Pt));this.server.registerChannel("userDataAutoSync",a.fromService(h,this._store)),this.server.registerChannel("IUserDataSyncResourceProviderService",a.fromService(e.get(B),this._store));const f=a.fromService(e.get(z),this._store);this.server.registerChannel(Er,f);const D=a.fromService(e.get(G),this._store);this.server.registerChannel("remoteTunnel",D)}registerErrorHandler(e){process.on("uncaughtException",r=>A(r)),process.on("unhandledRejection",r=>A(r)),se(r=>{const n=oe(r,!0);n&&e.error(`[uncaught exception in sharedProcess]: ${n}`)})}reportProfilesInfo(e,r){e.publicLog2("profilesInfo",{count:r.profiles.length})}async reportClientOSInfo(e,r){if(F){const[n,i]=await Promise.all([pe(r.error.bind(r)),fe(r.error.bind(r))]),c=ne(),o=le(i,this.configuration.args["ozone-platform"]);n&&e.publicLog2("clientPlatformInfo",{platformId:n.id,platformVersionId:n.version_id,platformIdLike:n.id_like,desktopEnvironment:c,displayProtocol:i,codeDisplayProtocol:o})}}handledClientConnection(e){if(e.data!==Tr.response)return!1;const r=ie(e.ports);return r?(this.onDidWindowConnectRaw.fire(r),!0):!1}}async function Et(d){try{const g=new Dt(d);process.parentPort.postMessage(x.ipcReady),await g.init(),process.parentPort.postMessage(x.initDone)}catch(g){process.parentPort.postMessage({error:g.toString()})}}const Ut=setTimeout(()=>{process.parentPort.postMessage({warning:"[SharedProcess] did not receive configuration within 30s..."})},3e4);process.parentPort.once("message",d=>{clearTimeout(Ut),Et(d.data)});export{Et as main};
