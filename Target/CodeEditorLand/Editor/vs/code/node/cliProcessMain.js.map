{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/code/node/cliProcessMain.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from \"fs\";\nimport { hostname, release } from \"os\";\nimport { raceTimeout } from \"../../base/common/async.js\";\nimport { toErrorMessage } from \"../../base/common/errorMessage.js\";\nimport {\n\tisSigPipeError,\n\tonUnexpectedError,\n\tsetUnexpectedErrorHandler,\n} from \"../../base/common/errors.js\";\nimport { Disposable } from \"../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../base/common/network.js\";\nimport { isAbsolute, join } from \"../../base/common/path.js\";\nimport { isWindows } from \"../../base/common/platform.js\";\nimport { cwd } from \"../../base/common/process.js\";\nimport { URI } from \"../../base/common/uri.js\";\nimport { addUNCHostToAllowlist, getUNCHost } from \"../../base/node/unc.js\";\nimport { localize } from \"../../nls.js\";\nimport { IConfigurationService } from \"../../platform/configuration/common/configuration.js\";\nimport { ConfigurationService } from \"../../platform/configuration/common/configurationService.js\";\nimport { IDownloadService } from \"../../platform/download/common/download.js\";\nimport { DownloadService } from \"../../platform/download/common/downloadService.js\";\nimport type { NativeParsedArgs } from \"../../platform/environment/common/argv.js\";\nimport { INativeEnvironmentService } from \"../../platform/environment/common/environment.js\";\nimport { NativeEnvironmentService } from \"../../platform/environment/node/environmentService.js\";\nimport { ExtensionGalleryServiceWithNoStorageService } from \"../../platform/extensionManagement/common/extensionGalleryService.js\";\nimport {\n\tIExtensionGalleryService,\n\ttype InstallOptions,\n} from \"../../platform/extensionManagement/common/extensionManagement.js\";\nimport { ExtensionManagementCLI } from \"../../platform/extensionManagement/common/extensionManagementCLI.js\";\nimport { IExtensionsProfileScannerService } from \"../../platform/extensionManagement/common/extensionsProfileScannerService.js\";\nimport { IExtensionsScannerService } from \"../../platform/extensionManagement/common/extensionsScannerService.js\";\nimport {\n\tExtensionManagementService,\n\tINativeServerExtensionManagementService,\n} from \"../../platform/extensionManagement/node/extensionManagementService.js\";\nimport {\n\tExtensionSignatureVerificationService,\n\tIExtensionSignatureVerificationService,\n} from \"../../platform/extensionManagement/node/extensionSignatureVerificationService.js\";\nimport { ExtensionsProfileScannerService } from \"../../platform/extensionManagement/node/extensionsProfileScannerService.js\";\nimport { ExtensionsScannerService } from \"../../platform/extensionManagement/node/extensionsScannerService.js\";\nimport { FileService } from \"../../platform/files/common/fileService.js\";\nimport { IFileService } from \"../../platform/files/common/files.js\";\nimport { DiskFileSystemProvider } from \"../../platform/files/node/diskFileSystemProvider.js\";\nimport { SyncDescriptor } from \"../../platform/instantiation/common/descriptors.js\";\nimport type { IInstantiationService } from \"../../platform/instantiation/common/instantiation.js\";\nimport { InstantiationService } from \"../../platform/instantiation/common/instantiationService.js\";\nimport { ServiceCollection } from \"../../platform/instantiation/common/serviceCollection.js\";\nimport { ILanguagePackService } from \"../../platform/languagePacks/common/languagePacks.js\";\nimport { NativeLanguagePackService } from \"../../platform/languagePacks/node/languagePacks.js\";\nimport {\n\tConsoleLogger,\n\tILogService,\n\ttype ILogger,\n\tILoggerService,\n\tLogLevel,\n\tgetLogLevel,\n} from \"../../platform/log/common/log.js\";\nimport { LogService } from \"../../platform/log/common/logService.js\";\nimport { LoggerService } from \"../../platform/log/node/loggerService.js\";\nimport { FilePolicyService } from \"../../platform/policy/common/filePolicyService.js\";\nimport {\n\tIPolicyService,\n\tNullPolicyService,\n} from \"../../platform/policy/common/policy.js\";\nimport { NativePolicyService } from \"../../platform/policy/node/nativePolicyService.js\";\nimport product from \"../../platform/product/common/product.js\";\nimport { IProductService } from \"../../platform/product/common/productService.js\";\nimport { IRequestService } from \"../../platform/request/common/request.js\";\nimport { RequestService } from \"../../platform/request/node/requestService.js\";\nimport {\n\tSaveStrategy,\n\tStateReadonlyService,\n} from \"../../platform/state/node/stateService.js\";\nimport { resolveCommonProperties } from \"../../platform/telemetry/common/commonProperties.js\";\nimport { ITelemetryService } from \"../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype ITelemetryServiceConfig,\n\tTelemetryService,\n} from \"../../platform/telemetry/common/telemetryService.js\";\nimport {\n\ttype ITelemetryAppender,\n\tNullTelemetryService,\n\tgetPiiPathsFromEnvironment,\n\tisInternalTelemetry,\n\tsupportsTelemetry,\n} from \"../../platform/telemetry/common/telemetryUtils.js\";\nimport { OneDataSystemAppender } from \"../../platform/telemetry/node/1dsAppender.js\";\nimport { buildTelemetryMessage } from \"../../platform/telemetry/node/telemetry.js\";\nimport {\n\tresolveMachineId,\n\tresolveSqmId,\n\tresolvedevDeviceId,\n} from \"../../platform/telemetry/node/telemetryUtils.js\";\nimport { IUriIdentityService } from \"../../platform/uriIdentity/common/uriIdentity.js\";\nimport { UriIdentityService } from \"../../platform/uriIdentity/common/uriIdentityService.js\";\nimport { FileUserDataProvider } from \"../../platform/userData/common/fileUserDataProvider.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../platform/userDataProfile/common/userDataProfile.js\";\nimport { UserDataProfilesReadonlyService } from \"../../platform/userDataProfile/node/userDataProfile.js\";\n\nclass CliMain extends Disposable {\n\tconstructor(private argv: NativeParsedArgs) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Dispose on exit\n\t\tprocess.once(\"exit\", () => this.dispose());\n\t}\n\n\tasync run(): Promise<void> {\n\t\t// Services\n\t\tconst [instantiationService, appenders] = await this.initServices();\n\n\t\treturn instantiationService.invokeFunction(async (accessor) => {\n\t\t\tconst logService = accessor.get(ILogService);\n\t\t\tconst fileService = accessor.get(IFileService);\n\t\t\tconst environmentService = accessor.get(INativeEnvironmentService);\n\t\t\tconst userDataProfilesService = accessor.get(\n\t\t\t\tIUserDataProfilesService,\n\t\t\t);\n\n\t\t\t// Log info\n\t\t\tlogService.info(\"CLI main\", this.argv);\n\n\t\t\t// Error handler\n\t\t\tthis.registerErrorHandler(logService);\n\n\t\t\t// Run based on argv\n\t\t\tawait this.doRun(\n\t\t\t\tenvironmentService,\n\t\t\t\tfileService,\n\t\t\t\tuserDataProfilesService,\n\t\t\t\tinstantiationService,\n\t\t\t);\n\n\t\t\t// Flush the remaining data in AI adapter (with 1s timeout)\n\t\t\tawait Promise.all(\n\t\t\t\tappenders.map((a) => {\n\t\t\t\t\traceTimeout(a.flush(), 1000);\n\t\t\t\t}),\n\t\t\t);\n\t\t\treturn;\n\t\t});\n\t}\n\n\tprivate async initServices(): Promise<\n\t\t[IInstantiationService, ITelemetryAppender[]]\n\t> {\n\t\tconst services = new ServiceCollection();\n\n\t\t// Product\n\t\tconst productService = { _serviceBrand: undefined, ...product };\n\t\tservices.set(IProductService, productService);\n\n\t\t// Environment\n\t\tconst environmentService = new NativeEnvironmentService(\n\t\t\tthis.argv,\n\t\t\tproductService,\n\t\t);\n\t\tservices.set(INativeEnvironmentService, environmentService);\n\n\t\t// Init folders\n\t\tawait Promise.all(\n\t\t\t[\n\t\t\t\tthis.allowWindowsUNCPath(\n\t\t\t\t\tenvironmentService.appSettingsHome.with({\n\t\t\t\t\t\tscheme: Schemas.file,\n\t\t\t\t\t}).fsPath,\n\t\t\t\t),\n\t\t\t\tthis.allowWindowsUNCPath(environmentService.extensionsPath),\n\t\t\t].map((path) =>\n\t\t\t\tpath ? fs.promises.mkdir(path, { recursive: true }) : undefined,\n\t\t\t),\n\t\t);\n\n\t\t// Logger\n\t\tconst loggerService = new LoggerService(\n\t\t\tgetLogLevel(environmentService),\n\t\t\tenvironmentService.logsHome,\n\t\t);\n\t\tservices.set(ILoggerService, loggerService);\n\n\t\t// Log\n\t\tconst logger = this._register(\n\t\t\tloggerService.createLogger(\"cli\", { name: localize(\"cli\", \"CLI\") }),\n\t\t);\n\t\tconst otherLoggers: ILogger[] = [];\n\t\tif (loggerService.getLogLevel() === LogLevel.Trace) {\n\t\t\totherLoggers.push(new ConsoleLogger(loggerService.getLogLevel()));\n\t\t}\n\n\t\tconst logService = this._register(new LogService(logger, otherLoggers));\n\t\tservices.set(ILogService, logService);\n\n\t\t// Files\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tservices.set(IFileService, fileService);\n\n\t\tconst diskFileSystemProvider = this._register(\n\t\t\tnew DiskFileSystemProvider(logService),\n\t\t);\n\t\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\t\t// Uri Identity\n\t\tconst uriIdentityService = new UriIdentityService(fileService);\n\t\tservices.set(IUriIdentityService, uriIdentityService);\n\n\t\t// User Data Profiles\n\t\tconst stateService = new StateReadonlyService(\n\t\t\tSaveStrategy.DELAYED,\n\t\t\tenvironmentService,\n\t\t\tlogService,\n\t\t\tfileService,\n\t\t);\n\t\tconst userDataProfilesService = new UserDataProfilesReadonlyService(\n\t\t\tstateService,\n\t\t\turiIdentityService,\n\t\t\tenvironmentService,\n\t\t\tfileService,\n\t\t\tlogService,\n\t\t);\n\t\tservices.set(IUserDataProfilesService, userDataProfilesService);\n\n\t\t// Use FileUserDataProvider for user data to\n\t\t// enable atomic read / write operations.\n\t\tfileService.registerProvider(\n\t\t\tSchemas.vscodeUserData,\n\t\t\tnew FileUserDataProvider(\n\t\t\t\tSchemas.file,\n\t\t\t\tdiskFileSystemProvider,\n\t\t\t\tSchemas.vscodeUserData,\n\t\t\t\tuserDataProfilesService,\n\t\t\t\turiIdentityService,\n\t\t\t\tlogService,\n\t\t\t),\n\t\t);\n\n\t\t// Policy\n\t\tconst policyService =\n\t\t\tisWindows && productService.win32RegValueName\n\t\t\t\t? this._register(\n\t\t\t\t\t\tnew NativePolicyService(\n\t\t\t\t\t\t\tlogService,\n\t\t\t\t\t\t\tproductService.win32RegValueName,\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t: environmentService.policyFile\n\t\t\t\t\t? this._register(\n\t\t\t\t\t\t\tnew FilePolicyService(\n\t\t\t\t\t\t\t\tenvironmentService.policyFile,\n\t\t\t\t\t\t\t\tfileService,\n\t\t\t\t\t\t\t\tlogService,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t: new NullPolicyService();\n\t\tservices.set(IPolicyService, policyService);\n\n\t\t// Configuration\n\t\tconst configurationService = this._register(\n\t\t\tnew ConfigurationService(\n\t\t\t\tuserDataProfilesService.defaultProfile.settingsResource,\n\t\t\t\tfileService,\n\t\t\t\tpolicyService,\n\t\t\t\tlogService,\n\t\t\t),\n\t\t);\n\t\tservices.set(IConfigurationService, configurationService);\n\n\t\t// Initialize\n\t\tawait Promise.all([\n\t\t\tstateService.init(),\n\t\t\tconfigurationService.initialize(),\n\t\t]);\n\n\t\t// Get machine ID\n\t\tlet machineId: string | undefined;\n\t\ttry {\n\t\t\tmachineId = await resolveMachineId(stateService, logService);\n\t\t} catch (error) {\n\t\t\tif (error.code !== \"ENOENT\") {\n\t\t\t\tlogService.error(error);\n\t\t\t}\n\t\t}\n\t\tconst sqmId = await resolveSqmId(stateService, logService);\n\t\tconst devDeviceId = await resolvedevDeviceId(stateService, logService);\n\n\t\t// Initialize user data profiles after initializing the state\n\t\tuserDataProfilesService.init();\n\n\t\t// URI Identity\n\t\tservices.set(IUriIdentityService, new UriIdentityService(fileService));\n\n\t\t// Request\n\t\tconst requestService = new RequestService(\n\t\t\tconfigurationService,\n\t\t\tenvironmentService,\n\t\t\tlogService,\n\t\t);\n\t\tservices.set(IRequestService, requestService);\n\n\t\t// Download Service\n\t\tservices.set(\n\t\t\tIDownloadService,\n\t\t\tnew SyncDescriptor(DownloadService, undefined, true),\n\t\t);\n\n\t\t// Extensions\n\t\tservices.set(\n\t\t\tIExtensionsProfileScannerService,\n\t\t\tnew SyncDescriptor(\n\t\t\t\tExtensionsProfileScannerService,\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\t\tservices.set(\n\t\t\tIExtensionsScannerService,\n\t\t\tnew SyncDescriptor(ExtensionsScannerService, undefined, true),\n\t\t);\n\t\tservices.set(\n\t\t\tIExtensionSignatureVerificationService,\n\t\t\tnew SyncDescriptor(\n\t\t\t\tExtensionSignatureVerificationService,\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\t\tservices.set(\n\t\t\tINativeServerExtensionManagementService,\n\t\t\tnew SyncDescriptor(ExtensionManagementService, undefined, true),\n\t\t);\n\t\tservices.set(\n\t\t\tIExtensionGalleryService,\n\t\t\tnew SyncDescriptor(\n\t\t\t\tExtensionGalleryServiceWithNoStorageService,\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\n\t\t// Localizations\n\t\tservices.set(\n\t\t\tILanguagePackService,\n\t\t\tnew SyncDescriptor(NativeLanguagePackService, undefined, false),\n\t\t);\n\n\t\t// Telemetry\n\t\tconst appenders: ITelemetryAppender[] = [];\n\t\tconst isInternal = isInternalTelemetry(\n\t\t\tproductService,\n\t\t\tconfigurationService,\n\t\t);\n\t\tif (supportsTelemetry(productService, environmentService)) {\n\t\t\tif (productService.aiConfig && productService.aiConfig.ariaKey) {\n\t\t\t\tappenders.push(\n\t\t\t\t\tnew OneDataSystemAppender(\n\t\t\t\t\t\trequestService,\n\t\t\t\t\t\tisInternal,\n\t\t\t\t\t\t\"monacoworkbench\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tproductService.aiConfig.ariaKey,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappenders,\n\t\t\t\tsendErrorTelemetry: false,\n\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\trelease(),\n\t\t\t\t\thostname(),\n\t\t\t\t\tprocess.arch,\n\t\t\t\t\tproductService.commit,\n\t\t\t\t\tproductService.version,\n\t\t\t\t\tmachineId,\n\t\t\t\t\tsqmId,\n\t\t\t\t\tdevDeviceId,\n\t\t\t\t\tisInternal,\n\t\t\t\t),\n\t\t\t\tpiiPaths: getPiiPathsFromEnvironment(environmentService),\n\t\t\t};\n\n\t\t\tservices.set(\n\t\t\t\tITelemetryService,\n\t\t\t\tnew SyncDescriptor(TelemetryService, [config], false),\n\t\t\t);\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\treturn [new InstantiationService(services), appenders];\n\t}\n\n\tprivate allowWindowsUNCPath(path: string): string {\n\t\tif (isWindows) {\n\t\t\tconst host = getUNCHost(path);\n\t\t\tif (host) {\n\t\t\t\taddUNCHostToAllowlist(host);\n\t\t\t}\n\t\t}\n\n\t\treturn path;\n\t}\n\n\tprivate registerErrorHandler(logService: ILogService): void {\n\t\t// Install handler for unexpected errors\n\t\tsetUnexpectedErrorHandler((error) => {\n\t\t\tconst message = toErrorMessage(error, true);\n\t\t\tif (!message) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogService.error(`[uncaught exception in CLI]: ${message}`);\n\t\t});\n\n\t\t// Handle unhandled errors that can occur\n\t\tprocess.on(\"uncaughtException\", (err) => {\n\t\t\tif (!isSigPipeError(err)) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t});\n\t\tprocess.on(\"unhandledRejection\", (reason: unknown) =>\n\t\t\tonUnexpectedError(reason),\n\t\t);\n\t}\n\n\tprivate async doRun(\n\t\tenvironmentService: INativeEnvironmentService,\n\t\tfileService: IFileService,\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\tinstantiationService: IInstantiationService,\n\t): Promise<void> {\n\t\tlet profile: IUserDataProfile | undefined;\n\t\tif (environmentService.args.profile) {\n\t\t\tprofile = userDataProfilesService.profiles.find(\n\t\t\t\t(p) => p.name === environmentService.args.profile,\n\t\t\t);\n\t\t\tif (!profile) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Profile '${environmentService.args.profile}' not found.`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tconst profileLocation = (\n\t\t\tprofile ?? userDataProfilesService.defaultProfile\n\t\t).extensionsResource;\n\n\t\t// List Extensions\n\t\tif (this.argv[\"list-extensions\"]) {\n\t\t\treturn instantiationService\n\t\t\t\t.createInstance(\n\t\t\t\t\tExtensionManagementCLI,\n\t\t\t\t\tnew ConsoleLogger(LogLevel.Info, false),\n\t\t\t\t)\n\t\t\t\t.listExtensions(\n\t\t\t\t\t!!this.argv[\"show-versions\"],\n\t\t\t\t\tthis.argv[\"category\"],\n\t\t\t\t\tprofileLocation,\n\t\t\t\t);\n\t\t}\n\n\t\t// Install Extension\n\t\telse if (\n\t\t\tthis.argv[\"install-extension\"] ||\n\t\t\tthis.argv[\"install-builtin-extension\"]\n\t\t) {\n\t\t\tconst installOptions: InstallOptions = {\n\t\t\t\tisMachineScoped: !!this.argv[\"do-not-sync\"],\n\t\t\t\tinstallPreReleaseVersion: !!this.argv[\"pre-release\"],\n\t\t\t\tprofileLocation,\n\t\t\t};\n\t\t\treturn instantiationService\n\t\t\t\t.createInstance(\n\t\t\t\t\tExtensionManagementCLI,\n\t\t\t\t\tnew ConsoleLogger(LogLevel.Info, false),\n\t\t\t\t)\n\t\t\t\t.installExtensions(\n\t\t\t\t\tthis.asExtensionIdOrVSIX(\n\t\t\t\t\t\tthis.argv[\"install-extension\"] || [],\n\t\t\t\t\t),\n\t\t\t\t\tthis.asExtensionIdOrVSIX(\n\t\t\t\t\t\tthis.argv[\"install-builtin-extension\"] || [],\n\t\t\t\t\t),\n\t\t\t\t\tinstallOptions,\n\t\t\t\t\t!!this.argv[\"force\"],\n\t\t\t\t);\n\t\t}\n\n\t\t// Uninstall Extension\n\t\telse if (this.argv[\"uninstall-extension\"]) {\n\t\t\treturn instantiationService\n\t\t\t\t.createInstance(\n\t\t\t\t\tExtensionManagementCLI,\n\t\t\t\t\tnew ConsoleLogger(LogLevel.Info, false),\n\t\t\t\t)\n\t\t\t\t.uninstallExtensions(\n\t\t\t\t\tthis.asExtensionIdOrVSIX(this.argv[\"uninstall-extension\"]),\n\t\t\t\t\t!!this.argv[\"force\"],\n\t\t\t\t\tprofileLocation,\n\t\t\t\t);\n\t\t} else if (this.argv[\"update-extensions\"]) {\n\t\t\treturn instantiationService\n\t\t\t\t.createInstance(\n\t\t\t\t\tExtensionManagementCLI,\n\t\t\t\t\tnew ConsoleLogger(LogLevel.Info, false),\n\t\t\t\t)\n\t\t\t\t.updateExtensions(profileLocation);\n\t\t}\n\n\t\t// Locate Extension\n\t\telse if (this.argv[\"locate-extension\"]) {\n\t\t\treturn instantiationService\n\t\t\t\t.createInstance(\n\t\t\t\t\tExtensionManagementCLI,\n\t\t\t\t\tnew ConsoleLogger(LogLevel.Info, false),\n\t\t\t\t)\n\t\t\t\t.locateExtension(this.argv[\"locate-extension\"]);\n\t\t}\n\n\t\t// Telemetry\n\t\telse if (this.argv[\"telemetry\"]) {\n\t\t\tconsole.log(\n\t\t\t\tawait buildTelemetryMessage(\n\t\t\t\t\tenvironmentService.appRoot,\n\t\t\t\t\tenvironmentService.extensionsPath,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate asExtensionIdOrVSIX(inputs: string[]): (string | URI)[] {\n\t\treturn inputs.map((input) =>\n\t\t\t/\\.vsix$/i.test(input)\n\t\t\t\t? URI.file(isAbsolute(input) ? input : join(cwd(), input))\n\t\t\t\t: input,\n\t\t);\n\t}\n}\n\nexport async function main(argv: NativeParsedArgs): Promise<void> {\n\tconst cliMain = new CliMain(argv);\n\n\ttry {\n\t\tawait cliMain.run();\n\t} finally {\n\t\tcliMain.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
