{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/code/electron-sandbox/processExplorer/processExplorerMain.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/processExplorer.css\";\nimport \"../../../base/browser/ui/codicons/codiconStyles.js\"; // make sure codicon css is loaded\nimport { $, append, createStyleSheet } from \"../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../base/browser/keyboardEvent.js\";\nimport type { IListVirtualDelegate } from \"../../../base/browser/ui/list/list.js\";\nimport { DataTree } from \"../../../base/browser/ui/tree/dataTree.js\";\nimport type {\n\tIDataSource,\n\tITreeNode,\n\tITreeRenderer,\n} from \"../../../base/browser/ui/tree/tree.js\";\nimport { mainWindow } from \"../../../base/browser/window.js\";\nimport { RunOnceScheduler } from \"../../../base/common/async.js\";\nimport { KeyCode } from \"../../../base/common/keyCodes.js\";\nimport type { ProcessItem } from \"../../../base/common/processes.js\";\nimport type { IContextMenuItem } from \"../../../base/parts/contextmenu/common/contextmenu.js\";\nimport { popup } from \"../../../base/parts/contextmenu/electron-sandbox/contextmenu.js\";\nimport { ipcRenderer } from \"../../../base/parts/sandbox/electron-sandbox/globals.js\";\nimport { localize } from \"../../../nls.js\";\nimport {\n\ttype IRemoteDiagnosticError,\n\tisRemoteDiagnosticError,\n} from \"../../../platform/diagnostics/common/diagnostics.js\";\nimport { ByteSize } from \"../../../platform/files/common/files.js\";\nimport { ElectronIPCMainProcessService } from \"../../../platform/ipc/electron-sandbox/mainProcessService.js\";\nimport type {\n\tProcessExplorerData,\n\tProcessExplorerStyles,\n\tProcessExplorerWindowConfiguration,\n} from \"../../../platform/issue/common/issue.js\";\nimport type { INativeHostService } from \"../../../platform/native/common/native.js\";\nimport { NativeHostService } from \"../../../platform/native/common/nativeHostService.js\";\nimport { getIconsStyleSheet } from \"../../../platform/theme/browser/iconsStyleSheet.js\";\nimport {\n\tapplyZoom,\n\tzoomIn,\n\tzoomOut,\n} from \"../../../platform/window/electron-sandbox/window.js\";\n\nconst DEBUG_FLAGS_PATTERN = /\\s--inspect(?:-brk|port)?=(?<port>\\d+)?/;\nconst DEBUG_PORT_PATTERN = /\\s--inspect-port=(?<port>\\d+)/;\n\nclass ProcessListDelegate\n\timplements\n\t\tIListVirtualDelegate<\n\t\t\tMachineProcessInformation | ProcessItem | IRemoteDiagnosticError\n\t\t>\n{\n\tgetHeight(\n\t\telement:\n\t\t\t| MachineProcessInformation\n\t\t\t| ProcessItem\n\t\t\t| IRemoteDiagnosticError,\n\t) {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(\n\t\telement:\n\t\t\t| ProcessInformation\n\t\t\t| MachineProcessInformation\n\t\t\t| ProcessItem\n\t\t\t| IRemoteDiagnosticError,\n\t) {\n\t\tif (isProcessItem(element)) {\n\t\t\treturn \"process\";\n\t\t}\n\n\t\tif (isMachineProcessInformation(element)) {\n\t\t\treturn \"machine\";\n\t\t}\n\n\t\tif (isRemoteDiagnosticError(element)) {\n\t\t\treturn \"error\";\n\t\t}\n\n\t\tif (isProcessInformation(element)) {\n\t\t\treturn \"header\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n}\n\ninterface IProcessItemTemplateData extends IProcessRowTemplateData {\n\treadonly CPU: HTMLElement;\n\treadonly memory: HTMLElement;\n\treadonly PID: HTMLElement;\n}\n\ninterface IProcessRowTemplateData {\n\treadonly name: HTMLElement;\n}\n\nclass ProcessTreeDataSource\n\timplements\n\t\tIDataSource<\n\t\t\tProcessTree,\n\t\t\t| ProcessInformation\n\t\t\t| MachineProcessInformation\n\t\t\t| ProcessItem\n\t\t\t| IRemoteDiagnosticError\n\t\t>\n{\n\thasChildren(\n\t\telement:\n\t\t\t| ProcessTree\n\t\t\t| ProcessInformation\n\t\t\t| MachineProcessInformation\n\t\t\t| ProcessItem\n\t\t\t| IRemoteDiagnosticError,\n\t): boolean {\n\t\tif (isRemoteDiagnosticError(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isProcessItem(element)) {\n\t\t\treturn !!element.children?.length;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tgetChildren(\n\t\telement:\n\t\t\t| ProcessTree\n\t\t\t| ProcessInformation\n\t\t\t| MachineProcessInformation\n\t\t\t| ProcessItem\n\t\t\t| IRemoteDiagnosticError,\n\t) {\n\t\tif (isProcessItem(element)) {\n\t\t\treturn element.children ? element.children : [];\n\t\t}\n\n\t\tif (isRemoteDiagnosticError(element)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (isProcessInformation(element)) {\n\t\t\t// If there are multiple process roots, return these, otherwise go directly to the root process\n\t\t\tif (element.processRoots.length > 1) {\n\t\t\t\treturn element.processRoots;\n\t\t\t} else {\n\t\t\t\treturn [element.processRoots[0].rootProcess];\n\t\t\t}\n\t\t}\n\n\t\tif (isMachineProcessInformation(element)) {\n\t\t\treturn [element.rootProcess];\n\t\t}\n\n\t\treturn [element.processes];\n\t}\n}\n\nclass ProcessHeaderTreeRenderer\n\timplements ITreeRenderer<ProcessInformation, void, IProcessItemTemplateData>\n{\n\ttemplateId = \"header\";\n\n\trenderTemplate(container: HTMLElement): IProcessItemTemplateData {\n\t\tconst row = append(container, $(\".row\"));\n\t\tconst name = append(row, $(\".nameLabel\"));\n\t\tconst CPU = append(row, $(\".cpu\"));\n\t\tconst memory = append(row, $(\".memory\"));\n\t\tconst PID = append(row, $(\".pid\"));\n\t\treturn { name, CPU, memory, PID };\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<ProcessInformation, void>,\n\t\tindex: number,\n\t\ttemplateData: IProcessItemTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.name.textContent = localize(\"name\", \"Process Name\");\n\t\ttemplateData.CPU.textContent = localize(\"cpu\", \"CPU (%)\");\n\t\ttemplateData.PID.textContent = localize(\"pid\", \"PID\");\n\t\ttemplateData.memory.textContent = localize(\"memory\", \"Memory (MB)\");\n\t}\n\n\tdisposeTemplate(templateData: any): void {\n\t\t// Nothing to do\n\t}\n}\n\nclass MachineRenderer\n\timplements\n\t\tITreeRenderer<MachineProcessInformation, void, IProcessRowTemplateData>\n{\n\ttemplateId = \"machine\";\n\trenderTemplate(container: HTMLElement): IProcessRowTemplateData {\n\t\tconst data = Object.create(null);\n\t\tconst row = append(container, $(\".row\"));\n\t\tdata.name = append(row, $(\".nameLabel\"));\n\t\treturn data;\n\t}\n\trenderElement(\n\t\tnode: ITreeNode<MachineProcessInformation, void>,\n\t\tindex: number,\n\t\ttemplateData: IProcessRowTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.name.textContent = node.element.name;\n\t}\n\tdisposeTemplate(templateData: IProcessRowTemplateData): void {\n\t\t// Nothing to do\n\t}\n}\n\nclass ErrorRenderer\n\timplements\n\t\tITreeRenderer<IRemoteDiagnosticError, void, IProcessRowTemplateData>\n{\n\ttemplateId = \"error\";\n\trenderTemplate(container: HTMLElement): IProcessRowTemplateData {\n\t\tconst data = Object.create(null);\n\t\tconst row = append(container, $(\".row\"));\n\t\tdata.name = append(row, $(\".nameLabel\"));\n\t\treturn data;\n\t}\n\trenderElement(\n\t\tnode: ITreeNode<IRemoteDiagnosticError, void>,\n\t\tindex: number,\n\t\ttemplateData: IProcessRowTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.name.textContent = node.element.errorMessage;\n\t}\n\tdisposeTemplate(templateData: IProcessRowTemplateData): void {\n\t\t// Nothing to do\n\t}\n}\n\nclass ProcessRenderer\n\timplements ITreeRenderer<ProcessItem, void, IProcessItemTemplateData>\n{\n\tconstructor(\n\t\tprivate platform: string,\n\t\tprivate totalMem: number,\n\t\tprivate mapPidToName: Map<number, string>,\n\t) {}\n\n\ttemplateId = \"process\";\n\trenderTemplate(container: HTMLElement): IProcessItemTemplateData {\n\t\tconst row = append(container, $(\".row\"));\n\n\t\tconst name = append(row, $(\".nameLabel\"));\n\t\tconst CPU = append(row, $(\".cpu\"));\n\t\tconst memory = append(row, $(\".memory\"));\n\t\tconst PID = append(row, $(\".pid\"));\n\n\t\treturn { name, CPU, PID, memory };\n\t}\n\trenderElement(\n\t\tnode: ITreeNode<ProcessItem, void>,\n\t\tindex: number,\n\t\ttemplateData: IProcessItemTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tconst { element } = node;\n\n\t\tconst pid = element.pid.toFixed(0);\n\n\t\tlet name = element.name;\n\t\tif (this.mapPidToName.has(element.pid)) {\n\t\t\tname = this.mapPidToName.get(element.pid)!;\n\t\t}\n\n\t\ttemplateData.name.textContent = name;\n\t\ttemplateData.name.title = element.cmd;\n\n\t\ttemplateData.CPU.textContent = element.load.toFixed(0);\n\t\ttemplateData.PID.textContent = pid;\n\t\ttemplateData.PID.parentElement!.id = `pid-${pid}`;\n\n\t\tconst memory =\n\t\t\tthis.platform === \"win32\"\n\t\t\t\t? element.mem\n\t\t\t\t: this.totalMem * (element.mem / 100);\n\t\ttemplateData.memory.textContent = (memory / ByteSize.MB).toFixed(0);\n\t}\n\n\tdisposeTemplate(templateData: IProcessItemTemplateData): void {\n\t\t// Nothing to do\n\t}\n}\n\ninterface MachineProcessInformation {\n\tname: string;\n\trootProcess: ProcessItem | IRemoteDiagnosticError;\n}\n\ninterface ProcessInformation {\n\tprocessRoots: MachineProcessInformation[];\n}\n\ninterface ProcessTree {\n\tprocesses: ProcessInformation;\n}\n\nfunction isMachineProcessInformation(\n\titem: any,\n): item is MachineProcessInformation {\n\treturn !!item.name && !!item.rootProcess;\n}\n\nfunction isProcessInformation(item: any): item is ProcessInformation {\n\treturn !!item.processRoots;\n}\n\nfunction isProcessItem(item: any): item is ProcessItem {\n\treturn !!item.pid;\n}\n\nclass ProcessExplorer {\n\tprivate lastRequestTime: number;\n\n\tprivate mapPidToName = new Map<number, string>();\n\n\tprivate nativeHostService: INativeHostService;\n\n\tprivate tree:\n\t\t| DataTree<\n\t\t\t\tany,\n\t\t\t\t| ProcessTree\n\t\t\t\t| MachineProcessInformation\n\t\t\t\t| ProcessItem\n\t\t\t\t| ProcessInformation\n\t\t\t\t| IRemoteDiagnosticError,\n\t\t\t\tany\n\t\t  >\n\t\t| undefined;\n\n\tconstructor(\n\t\twindowId: number,\n\t\tprivate data: ProcessExplorerData,\n\t) {\n\t\tconst mainProcessService = new ElectronIPCMainProcessService(windowId);\n\t\tthis.nativeHostService = new NativeHostService(\n\t\t\twindowId,\n\t\t\tmainProcessService,\n\t\t) as INativeHostService;\n\n\t\tthis.applyStyles(data.styles);\n\t\tthis.setEventHandlers(data);\n\n\t\tipcRenderer.on(\n\t\t\t\"vscode:pidToNameResponse\",\n\t\t\t(event: unknown, pidToNames: [number, string][]) => {\n\t\t\t\tthis.mapPidToName.clear();\n\n\t\t\t\tfor (const [pid, name] of pidToNames) {\n\t\t\t\t\tthis.mapPidToName.set(pid, name);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\tipcRenderer.on(\n\t\t\t\"vscode:listProcessesResponse\",\n\t\t\tasync (\n\t\t\t\tevent: unknown,\n\t\t\t\tprocessRoots: MachineProcessInformation[],\n\t\t\t) => {\n\t\t\t\tprocessRoots.forEach((info, index) => {\n\t\t\t\t\tif (isProcessItem(info.rootProcess)) {\n\t\t\t\t\t\tinfo.rootProcess.name =\n\t\t\t\t\t\t\tindex === 0\n\t\t\t\t\t\t\t\t? `${this.data.applicationName} main`\n\t\t\t\t\t\t\t\t: \"remote agent\";\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (this.tree) {\n\t\t\t\t\tthis.tree.setInput({ processes: { processRoots } });\n\t\t\t\t\tthis.tree.layout(\n\t\t\t\t\t\tmainWindow.innerHeight,\n\t\t\t\t\t\tmainWindow.innerWidth,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.createProcessTree(processRoots);\n\t\t\t\t}\n\n\t\t\t\tthis.requestProcessList(0);\n\t\t\t},\n\t\t);\n\n\t\tthis.lastRequestTime = Date.now();\n\t\tipcRenderer.send(\"vscode:pidToNameRequest\");\n\t\tipcRenderer.send(\"vscode:listProcesses\");\n\t}\n\n\tprivate setEventHandlers(data: ProcessExplorerData): void {\n\t\tmainWindow.document.onkeydown = (e: KeyboardEvent) => {\n\t\t\tconst cmdOrCtrlKey =\n\t\t\t\tdata.platform === \"darwin\" ? e.metaKey : e.ctrlKey;\n\n\t\t\t// Cmd/Ctrl + w closes issue window\n\t\t\tif (cmdOrCtrlKey && e.keyCode === 87) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tipcRenderer.send(\"vscode:closeProcessExplorer\");\n\t\t\t}\n\n\t\t\t// Cmd/Ctrl + zooms in\n\t\t\tif (cmdOrCtrlKey && e.keyCode === 187) {\n\t\t\t\tzoomIn(mainWindow);\n\t\t\t}\n\n\t\t\t// Cmd/Ctrl - zooms out\n\t\t\tif (cmdOrCtrlKey && e.keyCode === 189) {\n\t\t\t\tzoomOut(mainWindow);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate async createProcessTree(\n\t\tprocessRoots: MachineProcessInformation[],\n\t): Promise<void> {\n\t\tconst container = mainWindow.document.getElementById(\"process-list\");\n\t\tif (!container) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { totalmem } = await this.nativeHostService.getOSStatistics();\n\n\t\tconst renderers = [\n\t\t\tnew ProcessRenderer(\n\t\t\t\tthis.data.platform,\n\t\t\t\ttotalmem,\n\t\t\t\tthis.mapPidToName,\n\t\t\t),\n\t\t\tnew ProcessHeaderTreeRenderer(),\n\t\t\tnew MachineRenderer(),\n\t\t\tnew ErrorRenderer(),\n\t\t];\n\n\t\tthis.tree = new DataTree(\n\t\t\t\"processExplorer\",\n\t\t\tcontainer,\n\t\t\tnew ProcessListDelegate(),\n\t\t\trenderers,\n\t\t\tnew ProcessTreeDataSource(),\n\t\t\t{\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId: (\n\t\t\t\t\t\telement:\n\t\t\t\t\t\t\t| ProcessTree\n\t\t\t\t\t\t\t| ProcessItem\n\t\t\t\t\t\t\t| MachineProcessInformation\n\t\t\t\t\t\t\t| ProcessInformation\n\t\t\t\t\t\t\t| IRemoteDiagnosticError,\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (isProcessItem(element)) {\n\t\t\t\t\t\t\treturn element.pid.toString();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isRemoteDiagnosticError(element)) {\n\t\t\t\t\t\t\treturn element.hostName;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isProcessInformation(element)) {\n\t\t\t\t\t\t\treturn \"processes\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isMachineProcessInformation(element)) {\n\t\t\t\t\t\t\treturn element.name;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn \"header\";\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.tree.setInput({ processes: { processRoots } });\n\t\tthis.tree.layout(mainWindow.innerHeight, mainWindow.innerWidth);\n\t\tthis.tree.onKeyDown((e) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.keyCode === KeyCode.KeyE && event.altKey) {\n\t\t\t\tconst selectionPids = this.getSelectedPids();\n\t\t\t\tvoid Promise.all(\n\t\t\t\t\tselectionPids.map((pid) =>\n\t\t\t\t\t\tthis.nativeHostService.killProcess(pid, \"SIGTERM\"),\n\t\t\t\t\t),\n\t\t\t\t).then(() => this.tree?.refresh());\n\t\t\t}\n\t\t});\n\t\tthis.tree.onContextMenu((e) => {\n\t\t\tif (isProcessItem(e.element)) {\n\t\t\t\tthis.showContextMenu(e.element, true);\n\t\t\t}\n\t\t});\n\n\t\tcontainer.style.height = `${mainWindow.innerHeight}px`;\n\n\t\tmainWindow.addEventListener(\"resize\", () => {\n\t\t\tcontainer.style.height = `${mainWindow.innerHeight}px`;\n\t\t\tthis.tree?.layout(mainWindow.innerHeight, mainWindow.innerWidth);\n\t\t});\n\t}\n\n\tprivate isDebuggable(cmd: string): boolean {\n\t\tconst matches = DEBUG_FLAGS_PATTERN.exec(cmd);\n\t\treturn (\n\t\t\t(matches && matches.groups!.port !== \"0\") ||\n\t\t\tcmd.indexOf(\"node \") >= 0 ||\n\t\t\tcmd.indexOf(\"node.exe\") >= 0\n\t\t);\n\t}\n\n\tprivate attachTo(item: ProcessItem) {\n\t\tconst config: any = {\n\t\t\ttype: \"node\",\n\t\t\trequest: \"attach\",\n\t\t\tname: `process ${item.pid}`,\n\t\t};\n\n\t\tlet matches = DEBUG_FLAGS_PATTERN.exec(item.cmd);\n\t\tif (matches) {\n\t\t\tconfig.port = Number(matches.groups!.port);\n\t\t} else {\n\t\t\t// no port -> try to attach via pid (send SIGUSR1)\n\t\t\tconfig.processId = String(item.pid);\n\t\t}\n\n\t\t// a debug-port=n or inspect-port=n overrides the port\n\t\tmatches = DEBUG_PORT_PATTERN.exec(item.cmd);\n\t\tif (matches) {\n\t\t\t// override port\n\t\t\tconfig.port = Number(matches.groups!.port);\n\t\t}\n\n\t\tipcRenderer.send(\"vscode:workbenchCommand\", {\n\t\t\tid: \"debug.startFromConfig\",\n\t\t\tfrom: \"processExplorer\",\n\t\t\targs: [config],\n\t\t});\n\t}\n\n\tprivate applyStyles(styles: ProcessExplorerStyles): void {\n\t\tconst styleElement = createStyleSheet();\n\t\tconst content: string[] = [];\n\n\t\tif (styles.listFocusBackground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list:focus .monaco-list-row.focused { background-color: ${styles.listFocusBackground}; }`,\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list:focus .monaco-list-row.focused:hover { background-color: ${styles.listFocusBackground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listFocusForeground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list:focus .monaco-list-row.focused { color: ${styles.listFocusForeground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listActiveSelectionBackground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list:focus .monaco-list-row.selected { background-color: ${styles.listActiveSelectionBackground}; }`,\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list:focus .monaco-list-row.selected:hover { background-color: ${styles.listActiveSelectionBackground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listActiveSelectionForeground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list:focus .monaco-list-row.selected { color: ${styles.listActiveSelectionForeground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listHoverBackground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list-row:hover:not(.selected):not(.focused) { background-color: ${styles.listHoverBackground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listHoverForeground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list-row:hover:not(.selected):not(.focused) { color: ${styles.listHoverForeground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listFocusOutline) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list:focus .monaco-list-row.focused { outline: 1px solid ${styles.listFocusOutline}; outline-offset: -1px; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listHoverOutline) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list-row:hover { outline: 1px dashed ${styles.listHoverOutline}; outline-offset: -1px; }`,\n\t\t\t);\n\t\t}\n\n\t\t// Scrollbars\n\t\tif (styles.scrollbarShadowColor) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-scrollable-element > .shadow.top {\n\t\t\t\t\tbox-shadow: ${styles.scrollbarShadowColor} 0 6px 6px -6px inset;\n\t\t\t\t}\n\n\t\t\t\t.monaco-scrollable-element > .shadow.left {\n\t\t\t\t\tbox-shadow: ${styles.scrollbarShadowColor} 6px 0 6px -6px inset;\n\t\t\t\t}\n\n\t\t\t\t.monaco-scrollable-element > .shadow.top.left {\n\t\t\t\t\tbox-shadow: ${styles.scrollbarShadowColor} 6px 6px 6px -6px inset;\n\t\t\t\t}\n\t\t\t`);\n\t\t}\n\n\t\tif (styles.scrollbarSliderBackgroundColor) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-scrollable-element > .scrollbar > .slider {\n\t\t\t\t\tbackground: ${styles.scrollbarSliderBackgroundColor};\n\t\t\t\t}\n\t\t\t`);\n\t\t}\n\n\t\tif (styles.scrollbarSliderHoverBackgroundColor) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-scrollable-element > .scrollbar > .slider:hover {\n\t\t\t\t\tbackground: ${styles.scrollbarSliderHoverBackgroundColor};\n\t\t\t\t}\n\t\t\t`);\n\t\t}\n\n\t\tif (styles.scrollbarSliderActiveBackgroundColor) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-scrollable-element > .scrollbar > .slider.active {\n\t\t\t\t\tbackground: ${styles.scrollbarSliderActiveBackgroundColor};\n\t\t\t\t}\n\t\t\t`);\n\t\t}\n\n\t\tstyleElement.textContent = content.join(\"\\n\");\n\n\t\tif (styles.color) {\n\t\t\tmainWindow.document.body.style.color = styles.color;\n\t\t}\n\t}\n\n\tprivate showContextMenu(item: ProcessItem, isLocal: boolean) {\n\t\tconst items: IContextMenuItem[] = [];\n\t\tconst pid = Number(item.pid);\n\n\t\tif (isLocal) {\n\t\t\titems.push({\n\t\t\t\taccelerator: \"Alt+E\",\n\t\t\t\tlabel: localize(\"killProcess\", \"Kill Process\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.nativeHostService.killProcess(pid, \"SIGTERM\");\n\t\t\t\t},\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\tlabel: localize(\"forceKillProcess\", \"Force Kill Process\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.nativeHostService.killProcess(pid, \"SIGKILL\");\n\t\t\t\t},\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: localize(\"copy\", \"Copy\"),\n\t\t\tclick: () => {\n\t\t\t\t// Collect the selected pids\n\t\t\t\tconst selectionPids = this.getSelectedPids();\n\t\t\t\t// If the selection does not contain the right clicked item, copy the right clicked\n\t\t\t\t// item only.\n\t\t\t\tif (!selectionPids?.includes(pid)) {\n\t\t\t\t\tselectionPids.length = 0;\n\t\t\t\t\tselectionPids.push(pid);\n\t\t\t\t}\n\t\t\t\tconst rows = selectionPids\n\t\t\t\t\t?.map((e) => mainWindow.document.getElementById(`pid-${e}`))\n\t\t\t\t\t.filter((e) => !!e) as HTMLElement[];\n\t\t\t\tif (rows) {\n\t\t\t\t\tconst text = rows\n\t\t\t\t\t\t.map((e) => e.innerText)\n\t\t\t\t\t\t.filter((e) => !!e) as string[];\n\t\t\t\t\tthis.nativeHostService.writeClipboardText(text.join(\"\\n\"));\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\titems.push({\n\t\t\tlabel: localize(\"copyAll\", \"Copy All\"),\n\t\t\tclick: () => {\n\t\t\t\tconst processList =\n\t\t\t\t\tmainWindow.document.getElementById(\"process-list\");\n\t\t\t\tif (processList) {\n\t\t\t\t\tthis.nativeHostService.writeClipboardText(\n\t\t\t\t\t\tprocessList.innerText,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (item && isLocal && this.isDebuggable(item.cmd)) {\n\t\t\titems.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\tlabel: localize(\"debug\", \"Debug\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.attachTo(item);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tpopup(items);\n\t}\n\n\tprivate requestProcessList(totalWaitTime: number): void {\n\t\tsetTimeout(() => {\n\t\t\tconst nextRequestTime = Date.now();\n\t\t\tconst waited =\n\t\t\t\ttotalWaitTime + nextRequestTime - this.lastRequestTime;\n\t\t\tthis.lastRequestTime = nextRequestTime;\n\n\t\t\t// Wait at least a second between requests.\n\t\t\tif (waited > 1000) {\n\t\t\t\tipcRenderer.send(\"vscode:pidToNameRequest\");\n\t\t\t\tipcRenderer.send(\"vscode:listProcesses\");\n\t\t\t} else {\n\t\t\t\tthis.requestProcessList(waited);\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\tprivate getSelectedPids() {\n\t\treturn this.tree\n\t\t\t?.getSelection()\n\t\t\t?.map((e) => {\n\t\t\t\tif (!e || !(\"pid\" in e)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn e.pid;\n\t\t\t})\n\t\t\t.filter((e) => !!e) as number[];\n\t}\n}\n\nfunction createCodiconStyleSheet() {\n\tconst codiconStyleSheet = createStyleSheet();\n\tcodiconStyleSheet.id = \"codiconStyles\";\n\n\tconst iconsStyleSheet = getIconsStyleSheet(undefined);\n\tfunction updateAll() {\n\t\tcodiconStyleSheet.textContent = iconsStyleSheet.getCSS();\n\t}\n\n\tconst delayer = new RunOnceScheduler(updateAll, 0);\n\ticonsStyleSheet.onDidChange(() => delayer.schedule());\n\tdelayer.schedule();\n}\n\nexport function startup(\n\tconfiguration: ProcessExplorerWindowConfiguration,\n): void {\n\tconst platformClass =\n\t\tconfiguration.data.platform === \"win32\"\n\t\t\t? \"windows\"\n\t\t\t: configuration.data.platform === \"linux\"\n\t\t\t\t? \"linux\"\n\t\t\t\t: \"mac\";\n\tmainWindow.document.body.classList.add(platformClass); // used by our fonts\n\tcreateCodiconStyleSheet();\n\tapplyZoom(configuration.data.zoomLevel, mainWindow);\n\n\tnew ProcessExplorer(configuration.windowId, configuration.data);\n}\n"],
  "mappings": ";;AAKA,OAAO;AACP,OAAO;AACP,SAAS,GAAG,QAAQ,wBAAwB;AAC5C,SAAS,6BAA6B;AAEtC,SAAS,gBAAgB;AAMzB,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AACjC,SAAS,eAAe;AAGxB,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AACzB;AAAA,EAEC;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB,SAAS,qCAAqC;AAO9C,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,MAAM,sBAAsB;AAC5B,MAAM,qBAAqB;AAE3B,MAAM,oBAKN;AAAA,EApDA,OAoDA;AAAA;AAAA;AAAA,EACC,UACC,SAIC;AACD,WAAO;AAAA,EACR;AAAA,EAEA,cACC,SAKC;AACD,QAAI,cAAc,OAAO,GAAG;AAC3B,aAAO;AAAA,IACR;AAEA,QAAI,4BAA4B,OAAO,GAAG;AACzC,aAAO;AAAA,IACR;AAEA,QAAI,wBAAwB,OAAO,GAAG;AACrC,aAAO;AAAA,IACR;AAEA,QAAI,qBAAqB,OAAO,GAAG;AAClC,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AACD;AAYA,MAAM,sBASN;AAAA,EA5GA,OA4GA;AAAA;AAAA;AAAA,EACC,YACC,SAMU;AACV,QAAI,wBAAwB,OAAO,GAAG;AACrC,aAAO;AAAA,IACR;AAEA,QAAI,cAAc,OAAO,GAAG;AAC3B,aAAO,CAAC,CAAC,QAAQ,UAAU;AAAA,IAC5B,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEA,YACC,SAMC;AACD,QAAI,cAAc,OAAO,GAAG;AAC3B,aAAO,QAAQ,WAAW,QAAQ,WAAW,CAAC;AAAA,IAC/C;AAEA,QAAI,wBAAwB,OAAO,GAAG;AACrC,aAAO,CAAC;AAAA,IACT;AAEA,QAAI,qBAAqB,OAAO,GAAG;AAElC,UAAI,QAAQ,aAAa,SAAS,GAAG;AACpC,eAAO,QAAQ;AAAA,MAChB,OAAO;AACN,eAAO,CAAC,QAAQ,aAAa,CAAC,EAAE,WAAW;AAAA,MAC5C;AAAA,IACD;AAEA,QAAI,4BAA4B,OAAO,GAAG;AACzC,aAAO,CAAC,QAAQ,WAAW;AAAA,IAC5B;AAEA,WAAO,CAAC,QAAQ,SAAS;AAAA,EAC1B;AACD;AAEA,MAAM,0BAEN;AAAA,EAnKA,OAmKA;AAAA;AAAA;AAAA,EACC,aAAa;AAAA,EAEb,eAAe,WAAkD;AAChE,UAAM,MAAM,OAAO,WAAW,EAAE,MAAM,CAAC;AACvC,UAAM,OAAO,OAAO,KAAK,EAAE,YAAY,CAAC;AACxC,UAAM,MAAM,OAAO,KAAK,EAAE,MAAM,CAAC;AACjC,UAAM,SAAS,OAAO,KAAK,EAAE,SAAS,CAAC;AACvC,UAAM,MAAM,OAAO,KAAK,EAAE,MAAM,CAAC;AACjC,WAAO,EAAE,MAAM,KAAK,QAAQ,IAAI;AAAA,EACjC;AAAA,EAEA,cACC,MACA,OACA,cACA,QACO;AACP,iBAAa,KAAK,cAAc,SAAS,QAAQ,cAAc;AAC/D,iBAAa,IAAI,cAAc,SAAS,OAAO,SAAS;AACxD,iBAAa,IAAI,cAAc,SAAS,OAAO,KAAK;AACpD,iBAAa,OAAO,cAAc,SAAS,UAAU,aAAa;AAAA,EACnE;AAAA,EAEA,gBAAgB,cAAyB;AAAA,EAEzC;AACD;AAEA,MAAM,gBAGN;AAAA,EAnMA,OAmMA;AAAA;AAAA;AAAA,EACC,aAAa;AAAA,EACb,eAAe,WAAiD;AAC/D,UAAM,OAAO,uBAAO,OAAO,IAAI;AAC/B,UAAM,MAAM,OAAO,WAAW,EAAE,MAAM,CAAC;AACvC,SAAK,OAAO,OAAO,KAAK,EAAE,YAAY,CAAC;AACvC,WAAO;AAAA,EACR;AAAA,EACA,cACC,MACA,OACA,cACA,QACO;AACP,iBAAa,KAAK,cAAc,KAAK,QAAQ;AAAA,EAC9C;AAAA,EACA,gBAAgB,cAA6C;AAAA,EAE7D;AACD;AAEA,MAAM,cAGN;AAAA,EA3NA,OA2NA;AAAA;AAAA;AAAA,EACC,aAAa;AAAA,EACb,eAAe,WAAiD;AAC/D,UAAM,OAAO,uBAAO,OAAO,IAAI;AAC/B,UAAM,MAAM,OAAO,WAAW,EAAE,MAAM,CAAC;AACvC,SAAK,OAAO,OAAO,KAAK,EAAE,YAAY,CAAC;AACvC,WAAO;AAAA,EACR;AAAA,EACA,cACC,MACA,OACA,cACA,QACO;AACP,iBAAa,KAAK,cAAc,KAAK,QAAQ;AAAA,EAC9C;AAAA,EACA,gBAAgB,cAA6C;AAAA,EAE7D;AACD;AAEA,MAAM,gBAEN;AAAA,EACC,YACS,UACA,UACA,cACP;AAHO;AACA;AACA;AAAA,EACN;AAAA,EAvPJ,OAkPA;AAAA;AAAA;AAAA,EAOC,aAAa;AAAA,EACb,eAAe,WAAkD;AAChE,UAAM,MAAM,OAAO,WAAW,EAAE,MAAM,CAAC;AAEvC,UAAM,OAAO,OAAO,KAAK,EAAE,YAAY,CAAC;AACxC,UAAM,MAAM,OAAO,KAAK,EAAE,MAAM,CAAC;AACjC,UAAM,SAAS,OAAO,KAAK,EAAE,SAAS,CAAC;AACvC,UAAM,MAAM,OAAO,KAAK,EAAE,MAAM,CAAC;AAEjC,WAAO,EAAE,MAAM,KAAK,KAAK,OAAO;AAAA,EACjC;AAAA,EACA,cACC,MACA,OACA,cACA,QACO;AACP,UAAM,EAAE,QAAQ,IAAI;AAEpB,UAAM,MAAM,QAAQ,IAAI,QAAQ,CAAC;AAEjC,QAAI,OAAO,QAAQ;AACnB,QAAI,KAAK,aAAa,IAAI,QAAQ,GAAG,GAAG;AACvC,aAAO,KAAK,aAAa,IAAI,QAAQ,GAAG;AAAA,IACzC;AAEA,iBAAa,KAAK,cAAc;AAChC,iBAAa,KAAK,QAAQ,QAAQ;AAElC,iBAAa,IAAI,cAAc,QAAQ,KAAK,QAAQ,CAAC;AACrD,iBAAa,IAAI,cAAc;AAC/B,iBAAa,IAAI,cAAe,KAAK,OAAO,GAAG;AAE/C,UAAM,SACL,KAAK,aAAa,UACf,QAAQ,MACR,KAAK,YAAY,QAAQ,MAAM;AACnC,iBAAa,OAAO,eAAe,SAAS,SAAS,IAAI,QAAQ,CAAC;AAAA,EACnE;AAAA,EAEA,gBAAgB,cAA8C;AAAA,EAE9D;AACD;AAeA,SAAS,4BACR,MACoC;AACpC,SAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,KAAK;AAC9B;AAJS;AAMT,SAAS,qBAAqB,MAAuC;AACpE,SAAO,CAAC,CAAC,KAAK;AACf;AAFS;AAIT,SAAS,cAAc,MAAgC;AACtD,SAAO,CAAC,CAAC,KAAK;AACf;AAFS;AAIT,MAAM,gBAAgB;AAAA,EAmBrB,YACC,UACQ,MACP;AADO;AAER,UAAM,qBAAqB,IAAI,8BAA8B,QAAQ;AACrE,SAAK,oBAAoB,IAAI;AAAA,MAC5B;AAAA,MACA;AAAA,IACD;AAEA,SAAK,YAAY,KAAK,MAAM;AAC5B,SAAK,iBAAiB,IAAI;AAE1B,gBAAY;AAAA,MACX;AAAA,MACA,CAAC,OAAgB,eAAmC;AACnD,aAAK,aAAa,MAAM;AAExB,mBAAW,CAAC,KAAK,IAAI,KAAK,YAAY;AACrC,eAAK,aAAa,IAAI,KAAK,IAAI;AAAA,QAChC;AAAA,MACD;AAAA,IACD;AAEA,gBAAY;AAAA,MACX;AAAA,MACA,OACC,OACA,iBACI;AACJ,qBAAa,QAAQ,CAAC,MAAM,UAAU;AACrC,cAAI,cAAc,KAAK,WAAW,GAAG;AACpC,iBAAK,YAAY,OAChB,UAAU,IACP,GAAG,KAAK,KAAK,eAAe,UAC5B;AAAA,UACL;AAAA,QACD,CAAC;AAED,YAAI,KAAK,MAAM;AACd,eAAK,KAAK,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC;AAClD,eAAK,KAAK;AAAA,YACT,WAAW;AAAA,YACX,WAAW;AAAA,UACZ;AAAA,QACD,OAAO;AACN,gBAAM,KAAK,kBAAkB,YAAY;AAAA,QAC1C;AAEA,aAAK,mBAAmB,CAAC;AAAA,MAC1B;AAAA,IACD;AAEA,SAAK,kBAAkB,KAAK,IAAI;AAChC,gBAAY,KAAK,yBAAyB;AAC1C,gBAAY,KAAK,sBAAsB;AAAA,EACxC;AAAA,EA5YD,OAiUsB;AAAA;AAAA;AAAA,EACb;AAAA,EAEA,eAAe,oBAAI,IAAoB;AAAA,EAEvC;AAAA,EAEA;AAAA,EAsEA,iBAAiB,MAAiC;AACzD,eAAW,SAAS,YAAY,CAAC,MAAqB;AACrD,YAAM,eACL,KAAK,aAAa,WAAW,EAAE,UAAU,EAAE;AAG5C,UAAI,gBAAgB,EAAE,YAAY,IAAI;AACrC,UAAE,gBAAgB;AAClB,UAAE,eAAe;AAEjB,oBAAY,KAAK,6BAA6B;AAAA,MAC/C;AAGA,UAAI,gBAAgB,EAAE,YAAY,KAAK;AACtC,eAAO,UAAU;AAAA,MAClB;AAGA,UAAI,gBAAgB,EAAE,YAAY,KAAK;AACtC,gBAAQ,UAAU;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,kBACb,cACgB;AAChB,UAAM,YAAY,WAAW,SAAS,eAAe,cAAc;AACnE,QAAI,CAAC,WAAW;AACf;AAAA,IACD;AAEA,UAAM,EAAE,SAAS,IAAI,MAAM,KAAK,kBAAkB,gBAAgB;AAElE,UAAM,YAAY;AAAA,MACjB,IAAI;AAAA,QACH,KAAK,KAAK;AAAA,QACV;AAAA,QACA,KAAK;AAAA,MACN;AAAA,MACA,IAAI,0BAA0B;AAAA,MAC9B,IAAI,gBAAgB;AAAA,MACpB,IAAI,cAAc;AAAA,IACnB;AAEA,SAAK,OAAO,IAAI;AAAA,MACf;AAAA,MACA;AAAA,MACA,IAAI,oBAAoB;AAAA,MACxB;AAAA,MACA,IAAI,sBAAsB;AAAA,MAC1B;AAAA,QACC,kBAAkB;AAAA,UACjB,OAAO,wBACN,YAMI;AACJ,gBAAI,cAAc,OAAO,GAAG;AAC3B,qBAAO,QAAQ,IAAI,SAAS;AAAA,YAC7B;AAEA,gBAAI,wBAAwB,OAAO,GAAG;AACrC,qBAAO,QAAQ;AAAA,YAChB;AAEA,gBAAI,qBAAqB,OAAO,GAAG;AAClC,qBAAO;AAAA,YACR;AAEA,gBAAI,4BAA4B,OAAO,GAAG;AACzC,qBAAO,QAAQ;AAAA,YAChB;AAEA,mBAAO;AAAA,UACR,GAzBO;AAAA,QA0BR;AAAA,MACD;AAAA,IACD;AAEA,SAAK,KAAK,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC;AAClD,SAAK,KAAK,OAAO,WAAW,aAAa,WAAW,UAAU;AAC9D,SAAK,KAAK,UAAU,CAAC,MAAM;AAC1B,YAAM,QAAQ,IAAI,sBAAsB,CAAC;AACzC,UAAI,MAAM,YAAY,QAAQ,QAAQ,MAAM,QAAQ;AACnD,cAAM,gBAAgB,KAAK,gBAAgB;AAC3C,aAAK,QAAQ;AAAA,UACZ,cAAc;AAAA,YAAI,CAAC,QAClB,KAAK,kBAAkB,YAAY,KAAK,SAAS;AAAA,UAClD;AAAA,QACD,EAAE,KAAK,MAAM,KAAK,MAAM,QAAQ,CAAC;AAAA,MAClC;AAAA,IACD,CAAC;AACD,SAAK,KAAK,cAAc,CAAC,MAAM;AAC9B,UAAI,cAAc,EAAE,OAAO,GAAG;AAC7B,aAAK,gBAAgB,EAAE,SAAS,IAAI;AAAA,MACrC;AAAA,IACD,CAAC;AAED,cAAU,MAAM,SAAS,GAAG,WAAW,WAAW;AAElD,eAAW,iBAAiB,UAAU,MAAM;AAC3C,gBAAU,MAAM,SAAS,GAAG,WAAW,WAAW;AAClD,WAAK,MAAM,OAAO,WAAW,aAAa,WAAW,UAAU;AAAA,IAChE,CAAC;AAAA,EACF;AAAA,EAEQ,aAAa,KAAsB;AAC1C,UAAM,UAAU,oBAAoB,KAAK,GAAG;AAC5C,WACE,WAAW,QAAQ,OAAQ,SAAS,OACrC,IAAI,QAAQ,OAAO,KAAK,KACxB,IAAI,QAAQ,UAAU,KAAK;AAAA,EAE7B;AAAA,EAEQ,SAAS,MAAmB;AACnC,UAAM,SAAc;AAAA,MACnB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM,WAAW,KAAK,GAAG;AAAA,IAC1B;AAEA,QAAI,UAAU,oBAAoB,KAAK,KAAK,GAAG;AAC/C,QAAI,SAAS;AACZ,aAAO,OAAO,OAAO,QAAQ,OAAQ,IAAI;AAAA,IAC1C,OAAO;AAEN,aAAO,YAAY,OAAO,KAAK,GAAG;AAAA,IACnC;AAGA,cAAU,mBAAmB,KAAK,KAAK,GAAG;AAC1C,QAAI,SAAS;AAEZ,aAAO,OAAO,OAAO,QAAQ,OAAQ,IAAI;AAAA,IAC1C;AAEA,gBAAY,KAAK,2BAA2B;AAAA,MAC3C,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM,CAAC,MAAM;AAAA,IACd,CAAC;AAAA,EACF;AAAA,EAEQ,YAAY,QAAqC;AACxD,UAAM,eAAe,iBAAiB;AACtC,UAAM,UAAoB,CAAC;AAE3B,QAAI,OAAO,qBAAqB;AAC/B,cAAQ;AAAA,QACP,mEAAmE,OAAO,mBAAmB;AAAA,MAC9F;AACA,cAAQ;AAAA,QACP,yEAAyE,OAAO,mBAAmB;AAAA,MACpG;AAAA,IACD;AAEA,QAAI,OAAO,qBAAqB;AAC/B,cAAQ;AAAA,QACP,wDAAwD,OAAO,mBAAmB;AAAA,MACnF;AAAA,IACD;AAEA,QAAI,OAAO,+BAA+B;AACzC,cAAQ;AAAA,QACP,oEAAoE,OAAO,6BAA6B;AAAA,MACzG;AACA,cAAQ;AAAA,QACP,0EAA0E,OAAO,6BAA6B;AAAA,MAC/G;AAAA,IACD;AAEA,QAAI,OAAO,+BAA+B;AACzC,cAAQ;AAAA,QACP,yDAAyD,OAAO,6BAA6B;AAAA,MAC9F;AAAA,IACD;AAEA,QAAI,OAAO,qBAAqB;AAC/B,cAAQ;AAAA,QACP,2EAA2E,OAAO,mBAAmB;AAAA,MACtG;AAAA,IACD;AAEA,QAAI,OAAO,qBAAqB;AAC/B,cAAQ;AAAA,QACP,gEAAgE,OAAO,mBAAmB;AAAA,MAC3F;AAAA,IACD;AAEA,QAAI,OAAO,kBAAkB;AAC5B,cAAQ;AAAA,QACP,oEAAoE,OAAO,gBAAgB;AAAA,MAC5F;AAAA,IACD;AAEA,QAAI,OAAO,kBAAkB;AAC5B,cAAQ;AAAA,QACP,gDAAgD,OAAO,gBAAgB;AAAA,MACxE;AAAA,IACD;AAGA,QAAI,OAAO,sBAAsB;AAChC,cAAQ,KAAK;AAAA;AAAA,mBAEG,OAAO,oBAAoB;AAAA;AAAA;AAAA;AAAA,mBAI3B,OAAO,oBAAoB;AAAA;AAAA;AAAA;AAAA,mBAI3B,OAAO,oBAAoB;AAAA;AAAA,IAE1C;AAAA,IACF;AAEA,QAAI,OAAO,gCAAgC;AAC1C,cAAQ,KAAK;AAAA;AAAA,mBAEG,OAAO,8BAA8B;AAAA;AAAA,IAEpD;AAAA,IACF;AAEA,QAAI,OAAO,qCAAqC;AAC/C,cAAQ,KAAK;AAAA;AAAA,mBAEG,OAAO,mCAAmC;AAAA;AAAA,IAEzD;AAAA,IACF;AAEA,QAAI,OAAO,sCAAsC;AAChD,cAAQ,KAAK;AAAA;AAAA,mBAEG,OAAO,oCAAoC;AAAA;AAAA,IAE1D;AAAA,IACF;AAEA,iBAAa,cAAc,QAAQ,KAAK,IAAI;AAE5C,QAAI,OAAO,OAAO;AACjB,iBAAW,SAAS,KAAK,MAAM,QAAQ,OAAO;AAAA,IAC/C;AAAA,EACD;AAAA,EAEQ,gBAAgB,MAAmB,SAAkB;AAC5D,UAAM,QAA4B,CAAC;AACnC,UAAM,MAAM,OAAO,KAAK,GAAG;AAE3B,QAAI,SAAS;AACZ,YAAM,KAAK;AAAA,QACV,aAAa;AAAA,QACb,OAAO,SAAS,eAAe,cAAc;AAAA,QAC7C,OAAO,6BAAM;AACZ,eAAK,kBAAkB,YAAY,KAAK,SAAS;AAAA,QAClD,GAFO;AAAA,MAGR,CAAC;AAED,YAAM,KAAK;AAAA,QACV,OAAO,SAAS,oBAAoB,oBAAoB;AAAA,QACxD,OAAO,6BAAM;AACZ,eAAK,kBAAkB,YAAY,KAAK,SAAS;AAAA,QAClD,GAFO;AAAA,MAGR,CAAC;AAED,YAAM,KAAK;AAAA,QACV,MAAM;AAAA,MACP,CAAC;AAAA,IACF;AAEA,UAAM,KAAK;AAAA,MACV,OAAO,SAAS,QAAQ,MAAM;AAAA,MAC9B,OAAO,6BAAM;AAEZ,cAAM,gBAAgB,KAAK,gBAAgB;AAG3C,YAAI,CAAC,eAAe,SAAS,GAAG,GAAG;AAClC,wBAAc,SAAS;AACvB,wBAAc,KAAK,GAAG;AAAA,QACvB;AACA,cAAM,OAAO,eACV,IAAI,CAAC,MAAM,WAAW,SAAS,eAAe,OAAO,CAAC,EAAE,CAAC,EAC1D,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACnB,YAAI,MAAM;AACT,gBAAM,OAAO,KACX,IAAI,CAAC,MAAM,EAAE,SAAS,EACtB,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACnB,eAAK,kBAAkB,mBAAmB,KAAK,KAAK,IAAI,CAAC;AAAA,QAC1D;AAAA,MACD,GAlBO;AAAA,IAmBR,CAAC;AAED,UAAM,KAAK;AAAA,MACV,OAAO,SAAS,WAAW,UAAU;AAAA,MACrC,OAAO,6BAAM;AACZ,cAAM,cACL,WAAW,SAAS,eAAe,cAAc;AAClD,YAAI,aAAa;AAChB,eAAK,kBAAkB;AAAA,YACtB,YAAY;AAAA,UACb;AAAA,QACD;AAAA,MACD,GARO;AAAA,IASR,CAAC;AAED,QAAI,QAAQ,WAAW,KAAK,aAAa,KAAK,GAAG,GAAG;AACnD,YAAM,KAAK;AAAA,QACV,MAAM;AAAA,MACP,CAAC;AAED,YAAM,KAAK;AAAA,QACV,OAAO,SAAS,SAAS,OAAO;AAAA,QAChC,OAAO,6BAAM;AACZ,eAAK,SAAS,IAAI;AAAA,QACnB,GAFO;AAAA,MAGR,CAAC;AAAA,IACF;AAEA,UAAM,KAAK;AAAA,EACZ;AAAA,EAEQ,mBAAmB,eAA6B;AACvD,eAAW,MAAM;AAChB,YAAM,kBAAkB,KAAK,IAAI;AACjC,YAAM,SACL,gBAAgB,kBAAkB,KAAK;AACxC,WAAK,kBAAkB;AAGvB,UAAI,SAAS,KAAM;AAClB,oBAAY,KAAK,yBAAyB;AAC1C,oBAAY,KAAK,sBAAsB;AAAA,MACxC,OAAO;AACN,aAAK,mBAAmB,MAAM;AAAA,MAC/B;AAAA,IACD,GAAG,GAAG;AAAA,EACP;AAAA,EAEQ,kBAAkB;AACzB,WAAO,KAAK,MACT,aAAa,GACb,IAAI,CAAC,MAAM;AACZ,UAAI,CAAC,KAAK,EAAE,SAAS,IAAI;AACxB,eAAO;AAAA,MACR;AACA,aAAO,EAAE;AAAA,IACV,CAAC,EACA,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA,EACpB;AACD;AAEA,SAAS,0BAA0B;AAClC,QAAM,oBAAoB,iBAAiB;AAC3C,oBAAkB,KAAK;AAEvB,QAAM,kBAAkB,mBAAmB,MAAS;AACpD,WAAS,YAAY;AACpB,sBAAkB,cAAc,gBAAgB,OAAO;AAAA,EACxD;AAFS;AAIT,QAAM,UAAU,IAAI,iBAAiB,WAAW,CAAC;AACjD,kBAAgB,YAAY,MAAM,QAAQ,SAAS,CAAC;AACpD,UAAQ,SAAS;AAClB;AAZS;AAcF,SAAS,QACf,eACO;AACP,QAAM,gBACL,cAAc,KAAK,aAAa,UAC7B,YACA,cAAc,KAAK,aAAa,UAC/B,UACA;AACL,aAAW,SAAS,KAAK,UAAU,IAAI,aAAa;AACpD,0BAAwB;AACxB,YAAU,cAAc,KAAK,WAAW,UAAU;AAElD,MAAI,gBAAgB,cAAc,UAAU,cAAc,IAAI;AAC/D;AAdgB;",
  "names": []
}
