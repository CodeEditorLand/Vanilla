import"./media/processExplorer.css";import"../../../base/browser/ui/codicons/codiconStyles.js";import{$ as m,append as l,createStyleSheet as v}from"../../../base/browser/dom.js";import{StandardKeyboardEvent as T}from"../../../base/browser/keyboardEvent.js";import"../../../base/browser/ui/list/list.js";import{DataTree as b}from"../../../base/browser/ui/tree/dataTree.js";import"../../../base/browser/ui/tree/tree.js";import{mainWindow as n}from"../../../base/browser/window.js";import{RunOnceScheduler as w}from"../../../base/common/async.js";import{KeyCode as x}from"../../../base/common/keyCodes.js";import"../../../base/common/processes.js";import"../../../base/parts/contextmenu/common/contextmenu.js";import{popup as S}from"../../../base/parts/contextmenu/electron-sandbox/contextmenu.js";import{ipcRenderer as p}from"../../../base/parts/sandbox/electron-sandbox/globals.js";import{localize as d}from"../../../nls.js";import{isRemoteDiagnosticError as f}from"../../../platform/diagnostics/common/diagnostics.js";import{ByteSize as E}from"../../../platform/files/common/files.js";import{ElectronIPCMainProcessService as D}from"../../../platform/ipc/electron-sandbox/mainProcessService.js";import"../../../platform/issue/common/issue.js";import"../../../platform/native/common/native.js";import{NativeHostService as C}from"../../../platform/native/common/nativeHostService.js";import{getIconsStyleSheet as R}from"../../../platform/theme/browser/iconsStyleSheet.js";import{applyZoom as y,zoomIn as M,zoomOut as k}from"../../../platform/window/electron-sandbox/window.js";const g=/\s--inspect(?:-brk|port)?=(?<port>\d+)?/,H=/\s--inspect-port=(?<port>\d+)/;class N{getHeight(e){return 22}getTemplateId(e){return h(e)?"process":P(e)?"machine":f(e)?"error":I(e)?"header":""}}class L{hasChildren(e){return f(e)?!1:h(e)?!!e.children?.length:!0}getChildren(e){return h(e)?e.children?e.children:[]:f(e)?[]:I(e)?e.processRoots.length>1?e.processRoots:[e.processRoots[0].rootProcess]:P(e)?[e.rootProcess]:[e.processes]}}class ${templateId="header";renderTemplate(e){const r=l(e,m(".row")),o=l(r,m(".nameLabel")),a=l(r,m(".cpu")),t=l(r,m(".memory")),i=l(r,m(".pid"));return{name:o,CPU:a,memory:t,PID:i}}renderElement(e,r,o,a){o.name.textContent=d("name","Process Name"),o.CPU.textContent=d("cpu","CPU (%)"),o.PID.textContent=d("pid","PID"),o.memory.textContent=d("memory","Memory (MB)")}disposeTemplate(e){}}class B{templateId="machine";renderTemplate(e){const r=Object.create(null),o=l(e,m(".row"));return r.name=l(o,m(".nameLabel")),r}renderElement(e,r,o,a){o.name.textContent=e.element.name}disposeTemplate(e){}}class F{templateId="error";renderTemplate(e){const r=Object.create(null),o=l(e,m(".row"));return r.name=l(o,m(".nameLabel")),r}renderElement(e,r,o,a){o.name.textContent=e.element.errorMessage}disposeTemplate(e){}}class A{constructor(e,r,o){this.platform=e;this.totalMem=r;this.mapPidToName=o}templateId="process";renderTemplate(e){const r=l(e,m(".row")),o=l(r,m(".nameLabel")),a=l(r,m(".cpu")),t=l(r,m(".memory")),i=l(r,m(".pid"));return{name:o,CPU:a,PID:i,memory:t}}renderElement(e,r,o,a){const{element:t}=e,i=t.pid.toFixed(0);let c=t.name;this.mapPidToName.has(t.pid)&&(c=this.mapPidToName.get(t.pid)),o.name.textContent=c,o.name.title=t.cmd,o.CPU.textContent=t.load.toFixed(0),o.PID.textContent=i,o.PID.parentElement.id=`pid-${i}`;const u=this.platform==="win32"?t.mem:this.totalMem*(t.mem/100);o.memory.textContent=(u/E.MB).toFixed(0)}disposeTemplate(e){}}function P(s){return!!s.name&&!!s.rootProcess}function I(s){return!!s.processRoots}function h(s){return!!s.pid}class K{constructor(e,r){this.data=r;const o=new D(e);this.nativeHostService=new C(e,o),this.applyStyles(r.styles),this.setEventHandlers(r),p.on("vscode:pidToNameResponse",(a,t)=>{this.mapPidToName.clear();for(const[i,c]of t)this.mapPidToName.set(i,c)}),p.on("vscode:listProcessesResponse",async(a,t)=>{t.forEach((i,c)=>{h(i.rootProcess)&&(i.rootProcess.name=c===0?`${this.data.applicationName} main`:"remote agent")}),this.tree?(this.tree.setInput({processes:{processRoots:t}}),this.tree.layout(n.innerHeight,n.innerWidth)):await this.createProcessTree(t),this.requestProcessList(0)}),this.lastRequestTime=Date.now(),p.send("vscode:pidToNameRequest"),p.send("vscode:listProcesses")}lastRequestTime;mapPidToName=new Map;nativeHostService;tree;setEventHandlers(e){n.document.onkeydown=r=>{const o=e.platform==="darwin"?r.metaKey:r.ctrlKey;o&&r.keyCode===87&&(r.stopPropagation(),r.preventDefault(),p.send("vscode:closeProcessExplorer")),o&&r.keyCode===187&&M(n),o&&r.keyCode===189&&k(n)}}async createProcessTree(e){const r=n.document.getElementById("process-list");if(!r)return;const{totalmem:o}=await this.nativeHostService.getOSStatistics(),a=[new A(this.data.platform,o,this.mapPidToName),new $,new B,new F];this.tree=new b("processExplorer",r,new N,a,new L,{identityProvider:{getId:t=>h(t)?t.pid.toString():f(t)?t.hostName:I(t)?"processes":P(t)?t.name:"header"}}),this.tree.setInput({processes:{processRoots:e}}),this.tree.layout(n.innerHeight,n.innerWidth),this.tree.onKeyDown(t=>{const i=new T(t);if(i.keyCode===x.KeyE&&i.altKey){const c=this.getSelectedPids();Promise.all(c.map(u=>this.nativeHostService.killProcess(u,"SIGTERM"))).then(()=>this.tree?.refresh())}}),this.tree.onContextMenu(t=>{h(t.element)&&this.showContextMenu(t.element,!0)}),r.style.height=`${n.innerHeight}px`,n.addEventListener("resize",()=>{r.style.height=`${n.innerHeight}px`,this.tree?.layout(n.innerHeight,n.innerWidth)})}isDebuggable(e){const r=g.exec(e);return r&&r.groups.port!=="0"||e.indexOf("node ")>=0||e.indexOf("node.exe")>=0}attachTo(e){const r={type:"node",request:"attach",name:`process ${e.pid}`};let o=g.exec(e.cmd);o?r.port=Number(o.groups.port):r.processId=String(e.pid),o=H.exec(e.cmd),o&&(r.port=Number(o.groups.port)),p.send("vscode:workbenchCommand",{id:"debug.startFromConfig",from:"processExplorer",args:[r]})}applyStyles(e){const r=v(),o=[];e.listFocusBackground&&(o.push(`.monaco-list:focus .monaco-list-row.focused { background-color: ${e.listFocusBackground}; }`),o.push(`.monaco-list:focus .monaco-list-row.focused:hover { background-color: ${e.listFocusBackground}; }`)),e.listFocusForeground&&o.push(`.monaco-list:focus .monaco-list-row.focused { color: ${e.listFocusForeground}; }`),e.listActiveSelectionBackground&&(o.push(`.monaco-list:focus .monaco-list-row.selected { background-color: ${e.listActiveSelectionBackground}; }`),o.push(`.monaco-list:focus .monaco-list-row.selected:hover { background-color: ${e.listActiveSelectionBackground}; }`)),e.listActiveSelectionForeground&&o.push(`.monaco-list:focus .monaco-list-row.selected { color: ${e.listActiveSelectionForeground}; }`),e.listHoverBackground&&o.push(`.monaco-list-row:hover:not(.selected):not(.focused) { background-color: ${e.listHoverBackground}; }`),e.listHoverForeground&&o.push(`.monaco-list-row:hover:not(.selected):not(.focused) { color: ${e.listHoverForeground}; }`),e.listFocusOutline&&o.push(`.monaco-list:focus .monaco-list-row.focused { outline: 1px solid ${e.listFocusOutline}; outline-offset: -1px; }`),e.listHoverOutline&&o.push(`.monaco-list-row:hover { outline: 1px dashed ${e.listHoverOutline}; outline-offset: -1px; }`),e.scrollbarShadowColor&&o.push(`
				.monaco-scrollable-element > .shadow.top {
					box-shadow: ${e.scrollbarShadowColor} 0 6px 6px -6px inset;
				}

				.monaco-scrollable-element > .shadow.left {
					box-shadow: ${e.scrollbarShadowColor} 6px 0 6px -6px inset;
				}

				.monaco-scrollable-element > .shadow.top.left {
					box-shadow: ${e.scrollbarShadowColor} 6px 6px 6px -6px inset;
				}
			`),e.scrollbarSliderBackgroundColor&&o.push(`
				.monaco-scrollable-element > .scrollbar > .slider {
					background: ${e.scrollbarSliderBackgroundColor};
				}
			`),e.scrollbarSliderHoverBackgroundColor&&o.push(`
				.monaco-scrollable-element > .scrollbar > .slider:hover {
					background: ${e.scrollbarSliderHoverBackgroundColor};
				}
			`),e.scrollbarSliderActiveBackgroundColor&&o.push(`
				.monaco-scrollable-element > .scrollbar > .slider.active {
					background: ${e.scrollbarSliderActiveBackgroundColor};
				}
			`),r.textContent=o.join(`
`),e.color&&(n.document.body.style.color=e.color)}showContextMenu(e,r){const o=[],a=Number(e.pid);r&&(o.push({accelerator:"Alt+E",label:d("killProcess","Kill Process"),click:()=>{this.nativeHostService.killProcess(a,"SIGTERM")}}),o.push({label:d("forceKillProcess","Force Kill Process"),click:()=>{this.nativeHostService.killProcess(a,"SIGKILL")}}),o.push({type:"separator"})),o.push({label:d("copy","Copy"),click:()=>{const t=this.getSelectedPids();t?.includes(a)||(t.length=0,t.push(a));const i=t?.map(c=>n.document.getElementById(`pid-${c}`)).filter(c=>!!c);if(i){const c=i.map(u=>u.innerText).filter(u=>!!u);this.nativeHostService.writeClipboardText(c.join(`
`))}}}),o.push({label:d("copyAll","Copy All"),click:()=>{const t=n.document.getElementById("process-list");t&&this.nativeHostService.writeClipboardText(t.innerText)}}),e&&r&&this.isDebuggable(e.cmd)&&(o.push({type:"separator"}),o.push({label:d("debug","Debug"),click:()=>{this.attachTo(e)}})),S(o)}requestProcessList(e){setTimeout(()=>{const r=Date.now(),o=e+r-this.lastRequestTime;this.lastRequestTime=r,o>1e3?(p.send("vscode:pidToNameRequest"),p.send("vscode:listProcesses")):this.requestProcessList(o)},200)}getSelectedPids(){return this.tree?.getSelection()?.map(e=>{if(!(!e||!("pid"in e)))return e.pid}).filter(e=>!!e)}}function O(){const s=v();s.id="codiconStyles";const e=R(void 0);function r(){s.textContent=e.getCSS()}const o=new w(r,0);e.onDidChange(()=>o.schedule()),o.schedule()}function be(s){const e=s.data.platform==="win32"?"windows":s.data.platform==="linux"?"linux":"mac";n.document.body.classList.add(e),O(),y(s.data.zoomLevel,n),new K(s.windowId,s.data)}export{be as startup};
