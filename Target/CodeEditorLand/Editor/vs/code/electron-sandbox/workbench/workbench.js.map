{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/code/electron-sandbox/workbench/workbench.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n//@ts-check\n'use strict';\n\n(function () {\n\n\t/**\n\t * @import {INativeWindowConfiguration} from '../../../platform/window/common/window'\n\t * @import {NativeParsedArgs} from '../../../platform/environment/common/argv'\n\t * @import {ISandboxConfiguration} from '../../../base/parts/sandbox/common/sandboxTypes'\n\t */\n\n\tconst bootstrapWindow = bootstrapWindowLib();\n\n\t// Add a perf entry right from the top\n\tperformance.mark('code/didStartRenderer');\n\n\t// Load workbench main JS and CSS all in parallel. This is an\n\t// optimization to prevent a waterfall of loading to happen, because\n\t// we know for a fact that workbench.desktop.main will depend on\n\t// the related CSS counterpart.\n\tbootstrapWindow.load([\n\t\t'vs/workbench/workbench.desktop.main',\n\t\t'vs/css!vs/workbench/workbench.desktop.main'\n\t],\n\t\tfunction (desktopMain, configuration) {\n\n\t\t\t// Mark start of workbench\n\t\t\tperformance.mark('code/didLoadWorkbenchMain');\n\n\t\t\treturn desktopMain.main(configuration);\n\t\t},\n\t\t{\n\t\t\tconfigureDeveloperSettings: function (windowConfig) {\n\t\t\t\treturn {\n\t\t\t\t\t// disable automated devtools opening on error when running extension tests\n\t\t\t\t\t// as this can lead to nondeterministic test execution (devtools steals focus)\n\t\t\t\t\tforceDisableShowDevtoolsOnError: typeof windowConfig.extensionTestsPath === 'string' || windowConfig['enable-smoke-test-driver'] === true,\n\t\t\t\t\t// enable devtools keybindings in extension development window\n\t\t\t\t\tforceEnableDeveloperKeybindings: Array.isArray(windowConfig.extensionDevelopmentPath) && windowConfig.extensionDevelopmentPath.length > 0,\n\t\t\t\t\tremoveDeveloperKeybindingsAfterLoad: true\n\t\t\t\t};\n\t\t\t},\n\t\t\tcanModifyDOM: function (windowConfig) {\n\t\t\t\tshowSplash(windowConfig);\n\t\t\t},\n\t\t\tbeforeLoaderConfig: function (loaderConfig) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tloaderConfig.recordStats = true;\n\t\t\t},\n\t\t\tbeforeRequire: function (windowConfig) {\n\t\t\t\tperformance.mark('code/willLoadWorkbenchMain');\n\n\t\t\t\t// Code windows have a `vscodeWindowId` property to identify them\n\t\t\t\tObject.defineProperty(window, 'vscodeWindowId', {\n\t\t\t\t\tget: () => windowConfig.windowId\n\t\t\t\t});\n\n\t\t\t\t// It looks like browsers only lazily enable\n\t\t\t\t// the <canvas> element when needed. Since we\n\t\t\t\t// leverage canvas elements in our code in many\n\t\t\t\t// locations, we try to help the browser to\n\t\t\t\t// initialize canvas when it is idle, right\n\t\t\t\t// before we wait for the scripts to be loaded.\n\t\t\t\twindow.requestIdleCallback(() => {\n\t\t\t\t\tconst canvas = document.createElement('canvas');\n\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\tcontext?.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\t\t\tcanvas.remove();\n\t\t\t\t}, { timeout: 50 });\n\t\t\t}\n\t\t}\n\t);\n\n\t//#region Helpers\n\n\t/**\n\t * @returns {{\n\t *   load: (\n\t *     modules: string[],\n\t *     resultCallback: (result: any, configuration: INativeWindowConfiguration & NativeParsedArgs) => unknown,\n\t *     options?: {\n\t *       configureDeveloperSettings?: (config: INativeWindowConfiguration & NativeParsedArgs) => {\n\t * \t\t\tforceDisableShowDevtoolsOnError?: boolean,\n\t * \t\t\tforceEnableDeveloperKeybindings?: boolean,\n\t * \t\t\tdisallowReloadKeybinding?: boolean,\n\t * \t\t\tremoveDeveloperKeybindingsAfterLoad?: boolean\n\t * \t\t },\n\t * \t     canModifyDOM?: (config: INativeWindowConfiguration & NativeParsedArgs) => void,\n\t * \t     beforeLoaderConfig?: (loaderConfig: object) => void,\n\t *       beforeRequire?: (config: ISandboxConfiguration) => void\n\t *     }\n\t *   ) => Promise<unknown>\n\t * }}\n\t */\n\tfunction bootstrapWindowLib() {\n\t\t// @ts-ignore (defined in bootstrap-window.js)\n\t\treturn window.MonacoBootstrapWindow;\n\t}\n\n\t/**\n\t * @param {INativeWindowConfiguration & NativeParsedArgs} configuration\n\t */\n\tfunction showSplash(configuration) {\n\t\tperformance.mark('code/willShowPartsSplash');\n\n\t\tlet data = configuration.partsSplash;\n\n\t\tif (data) {\n\t\t\t// high contrast mode has been turned by the OS -> ignore stored colors and layouts\n\t\t\tif (configuration.autoDetectHighContrast && configuration.colorScheme.highContrast) {\n\t\t\t\tif ((configuration.colorScheme.dark && data.baseTheme !== 'hc-black') || (!configuration.colorScheme.dark && data.baseTheme !== 'hc-light')) {\n\t\t\t\t\tdata = undefined;\n\t\t\t\t}\n\t\t\t} else if (configuration.autoDetectColorScheme) {\n\t\t\t\t// OS color scheme is tracked and has changed\n\t\t\t\tif ((configuration.colorScheme.dark && data.baseTheme !== 'vs-dark') || (!configuration.colorScheme.dark && data.baseTheme !== 'vs')) {\n\t\t\t\t\tdata = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// developing an extension -> ignore stored layouts\n\t\tif (data && configuration.extensionDevelopmentPath) {\n\t\t\tdata.layoutInfo = undefined;\n\t\t}\n\n\t\t// minimal color configuration (works with or without persisted data)\n\t\tlet baseTheme;\n\t\tlet shellBackground;\n\t\tlet shellForeground;\n\t\tif (data) {\n\t\t\tbaseTheme = data.baseTheme;\n\t\t\tshellBackground = data.colorInfo.editorBackground;\n\t\t\tshellForeground = data.colorInfo.foreground;\n\t\t} else if (configuration.autoDetectHighContrast && configuration.colorScheme.highContrast) {\n\t\t\tif (configuration.colorScheme.dark) {\n\t\t\t\tbaseTheme = 'hc-black';\n\t\t\t\tshellBackground = '#000000';\n\t\t\t\tshellForeground = '#FFFFFF';\n\t\t\t} else {\n\t\t\t\tbaseTheme = 'hc-light';\n\t\t\t\tshellBackground = '#FFFFFF';\n\t\t\t\tshellForeground = '#000000';\n\t\t\t}\n\t\t} else if (configuration.autoDetectColorScheme) {\n\t\t\tif (configuration.colorScheme.dark) {\n\t\t\t\tbaseTheme = 'vs-dark';\n\t\t\t\tshellBackground = '#1E1E1E';\n\t\t\t\tshellForeground = '#CCCCCC';\n\t\t\t} else {\n\t\t\t\tbaseTheme = 'vs';\n\t\t\t\tshellBackground = '#FFFFFF';\n\t\t\t\tshellForeground = '#000000';\n\t\t\t}\n\t\t}\n\n\t\tconst style = document.createElement('style');\n\t\tstyle.className = 'initialShellColors';\n\t\tdocument.head.appendChild(style);\n\t\tstyle.textContent = `body {\n\t\t\tbackground-color: ${shellBackground};\n\t\t\tcolor: ${shellForeground};\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t}`;\n\n\t\t// set zoom level as soon as possible\n\t\t// @ts-ignore\n\t\tif (typeof data?.zoomLevel === 'number' && typeof globalThis.vscode?.webFrame?.setZoomLevel === 'function') {\n\t\t\t// @ts-ignore\n\t\t\tglobalThis.vscode.webFrame.setZoomLevel(data.zoomLevel);\n\t\t}\n\n\t\t// restore parts if possible (we might not always store layout info)\n\t\tif (data?.layoutInfo) {\n\t\t\tconst { layoutInfo, colorInfo } = data;\n\n\t\t\tconst splash = document.createElement('div');\n\t\t\tsplash.id = 'monaco-parts-splash';\n\t\t\tsplash.className = baseTheme ?? 'vs-dark';\n\n\t\t\tif (layoutInfo.windowBorder && colorInfo.windowBorder) {\n\t\t\t\tsplash.setAttribute('style', `\n\t\t\t\t\tposition: relative;\n\t\t\t\t\theight: calc(100vh - 2px);\n\t\t\t\t\twidth: calc(100vw - 2px);\n\t\t\t\t\tborder: 1px solid var(--window-border-color);\n\t\t\t\t`);\n\t\t\t\tsplash.style.setProperty('--window-border-color', colorInfo.windowBorder);\n\n\t\t\t\tif (layoutInfo.windowBorderRadius) {\n\t\t\t\t\tsplash.style.borderRadius = layoutInfo.windowBorderRadius;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ensure there is enough space\n\t\t\tlayoutInfo.sideBarWidth = Math.min(layoutInfo.sideBarWidth, window.innerWidth - (layoutInfo.activityBarWidth + layoutInfo.editorPartMinWidth));\n\n\t\t\t// part: title\n\t\t\tconst titleDiv = document.createElement('div');\n\t\t\ttitleDiv.setAttribute('style', `\n\t\t\t\tposition: absolute;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: ${layoutInfo.titleBarHeight}px;\n\t\t\t\tleft: 0;\n\t\t\t\ttop: 0;\n\t\t\t\tbackground-color: ${colorInfo.titleBarBackground};\n\t\t\t\t-webkit-app-region: drag;\n\t\t\t`);\n\t\t\tsplash.appendChild(titleDiv);\n\n\t\t\tif (colorInfo.titleBarBorder && layoutInfo.titleBarHeight > 0) {\n\t\t\t\tconst titleBorder = document.createElement('div');\n\t\t\t\ttitleBorder.setAttribute('style', `\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 1px;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tborder-bottom: 1px solid ${colorInfo.titleBarBorder};\n\t\t\t\t`);\n\t\t\t\ttitleDiv.appendChild(titleBorder);\n\t\t\t}\n\n\t\t\t// part: activity bar\n\t\t\tconst activityDiv = document.createElement('div');\n\t\t\tactivityDiv.setAttribute('style', `\n\t\t\t\tposition: absolute;\n\t\t\t\twidth: ${layoutInfo.activityBarWidth}px;\n\t\t\t\theight: calc(100% - ${layoutInfo.titleBarHeight + layoutInfo.statusBarHeight}px);\n\t\t\t\ttop: ${layoutInfo.titleBarHeight}px;\n\t\t\t\t${layoutInfo.sideBarSide}: 0;\n\t\t\t\tbackground-color: ${colorInfo.activityBarBackground};\n\t\t\t`);\n\t\t\tsplash.appendChild(activityDiv);\n\n\t\t\tif (colorInfo.activityBarBorder && layoutInfo.activityBarWidth > 0) {\n\t\t\t\tconst activityBorderDiv = document.createElement('div');\n\t\t\t\tactivityBorderDiv.setAttribute('style', `\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 1px;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\t${layoutInfo.sideBarSide === 'left' ? 'right' : 'left'}: 0;\n\t\t\t\t\t${layoutInfo.sideBarSide === 'left' ? 'border-right' : 'border-left'}: 1px solid ${colorInfo.activityBarBorder};\n\t\t\t\t`);\n\t\t\t\tactivityDiv.appendChild(activityBorderDiv);\n\t\t\t}\n\n\t\t\t// part: side bar (only when opening workspace/folder)\n\t\t\t// folder or workspace -> status bar color, sidebar\n\t\t\tif (configuration.workspace) {\n\t\t\t\tconst sideDiv = document.createElement('div');\n\t\t\t\tsideDiv.setAttribute('style', `\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: ${layoutInfo.sideBarWidth}px;\n\t\t\t\t\theight: calc(100% - ${layoutInfo.titleBarHeight + layoutInfo.statusBarHeight}px);\n\t\t\t\t\ttop: ${layoutInfo.titleBarHeight}px;\n\t\t\t\t\t${layoutInfo.sideBarSide}: ${layoutInfo.activityBarWidth}px;\n\t\t\t\t\tbackground-color: ${colorInfo.sideBarBackground};\n\t\t\t\t`);\n\t\t\t\tsplash.appendChild(sideDiv);\n\n\t\t\t\tif (colorInfo.sideBarBorder && layoutInfo.sideBarWidth > 0) {\n\t\t\t\t\tconst sideBorderDiv = document.createElement('div');\n\t\t\t\t\tsideBorderDiv.setAttribute('style', `\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\twidth: 1px;\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\ttop: 0;\n\t\t\t\t\t\tright: 0;\n\t\t\t\t\t\t${layoutInfo.sideBarSide === 'left' ? 'right' : 'left'}: 0;\n\t\t\t\t\t\t${layoutInfo.sideBarSide === 'left' ? 'border-right' : 'border-left'}: 1px solid ${colorInfo.sideBarBorder};\n\t\t\t\t\t`);\n\t\t\t\t\tsideDiv.appendChild(sideBorderDiv);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// part: statusbar\n\t\t\tconst statusDiv = document.createElement('div');\n\t\t\tstatusDiv.setAttribute('style', `\n\t\t\t\tposition: absolute;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: ${layoutInfo.statusBarHeight}px;\n\t\t\t\tbottom: 0;\n\t\t\t\tleft: 0;\n\t\t\t\tbackground-color: ${configuration.workspace ? colorInfo.statusBarBackground : colorInfo.statusBarNoFolderBackground};\n\t\t\t`);\n\t\t\tsplash.appendChild(statusDiv);\n\n\t\t\tif (colorInfo.statusBarBorder && layoutInfo.statusBarHeight > 0) {\n\t\t\t\tconst statusBorderDiv = document.createElement('div');\n\t\t\t\tstatusBorderDiv.setAttribute('style', `\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 1px;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tborder-top: 1px solid ${colorInfo.statusBarBorder};\n\t\t\t\t`);\n\t\t\t\tstatusDiv.appendChild(statusBorderDiv);\n\t\t\t}\n\n\t\t\tdocument.body.appendChild(splash);\n\t\t}\n\n\t\tperformance.mark('code/didShowPartsSplash');\n\t}\n\n\t//#endregion\n}());\n"],
  "mappings": "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",
  "names": []
}
