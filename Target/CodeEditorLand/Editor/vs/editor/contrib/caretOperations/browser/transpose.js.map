{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/caretOperations/browser/transpose.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, registerEditorAction, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand } from '../../../common/commands/replaceCommand.js';\nimport { MoveOperations } from '../../../common/cursor/cursorMoveOperations.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ICommand } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\n\nclass TransposeLettersAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.transposeLetters',\n\t\t\tlabel: nls.localize('transposeLetters.label', \"Transpose Letters\"),\n\t\t\talias: 'Transpose Letters',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.KeyT\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = editor.getModel();\n\t\tconst commands: ICommand[] = [];\n\t\tconst selections = editor.getSelections();\n\n\t\tfor (const selection of selections) {\n\t\t\tif (!selection.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst lineNumber = selection.startLineNumber;\n\t\t\tconst column = selection.startColumn;\n\n\t\t\tconst lastColumn = model.getLineMaxColumn(lineNumber);\n\n\t\t\tif (lineNumber === 1 && (column === 1 || (column === 2 && lastColumn === 2))) {\n\t\t\t\t// at beginning of file, nothing to do\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// handle special case: when at end of line, transpose left two chars\n\t\t\t// otherwise, transpose left and right chars\n\t\t\tconst endPosition = (column === lastColumn) ?\n\t\t\t\tselection.getPosition() :\n\t\t\t\tMoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\n\n\t\t\tconst middlePosition = MoveOperations.leftPosition(model, endPosition);\n\t\t\tconst beginPosition = MoveOperations.leftPosition(model, middlePosition);\n\n\t\t\tconst leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\n\t\t\tconst rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\n\n\t\t\tconst replaceRange = Range.fromPositions(beginPosition, endPosition);\n\t\t\tcommands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\n\t\t}\n\n\t\tif (commands.length > 0) {\n\t\t\teditor.pushUndoStop();\n\t\t\teditor.executeCommands(this.id, commands);\n\t\t\teditor.pushUndoStop();\n\t\t}\n\t}\n}\n\nregisterEditorAction(TransposeLettersAction);\n"],
  "mappings": ";;AAKA,SAAS,SAAS,cAAc;AAChC,SAAS,mBAAmB;AAC5B,SAAS,cAAc,sBAAsB,wBAAwB;AACrE,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,aAAa;AACtB,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC,YAAY,SAAS;AACrB,SAAS,wBAAwB;AAEjC,MAAM,+BAA+B,aAAa;AAAA,EAhBlD,OAgBkD;AAAA;AAAA;AAAA,EAEjD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,IAAI,SAAS,0BAA0B,mBAAmB;AAAA,MACjE,OAAO;AAAA,MACP,cAAc,kBAAkB;AAAA,MAChC,QAAQ;AAAA,QACP,QAAQ,kBAAkB;AAAA,QAC1B,SAAS;AAAA,QACT,KAAK;AAAA,UACJ,SAAS,OAAO,UAAU,QAAQ;AAAA,QACnC;AAAA,QACA,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEO,IAAI,UAA4B,QAA2B;AACjE,QAAI,CAAC,OAAO,SAAS,GAAG;AACvB;AAAA,IACD;AAEA,UAAM,QAAQ,OAAO,SAAS;AAC9B,UAAM,WAAuB,CAAC;AAC9B,UAAM,aAAa,OAAO,cAAc;AAExC,eAAW,aAAa,YAAY;AACnC,UAAI,CAAC,UAAU,QAAQ,GAAG;AACzB;AAAA,MACD;AAEA,YAAM,aAAa,UAAU;AAC7B,YAAM,SAAS,UAAU;AAEzB,YAAM,aAAa,MAAM,iBAAiB,UAAU;AAEpD,UAAI,eAAe,MAAM,WAAW,KAAM,WAAW,KAAK,eAAe,IAAK;AAE7E;AAAA,MACD;AAIA,YAAM,cAAe,WAAW,aAC/B,UAAU,YAAY,IACtB,eAAe,cAAc,OAAO,UAAU,YAAY,EAAE,YAAY,UAAU,YAAY,EAAE,MAAM;AAEvG,YAAM,iBAAiB,eAAe,aAAa,OAAO,WAAW;AACrE,YAAM,gBAAgB,eAAe,aAAa,OAAO,cAAc;AAEvE,YAAM,WAAW,MAAM,gBAAgB,MAAM,cAAc,eAAe,cAAc,CAAC;AACzF,YAAM,YAAY,MAAM,gBAAgB,MAAM,cAAc,gBAAgB,WAAW,CAAC;AAExF,YAAM,eAAe,MAAM,cAAc,eAAe,WAAW;AACnE,eAAS,KAAK,IAAI,eAAe,cAAc,YAAY,QAAQ,CAAC;AAAA,IACrE;AAEA,QAAI,SAAS,SAAS,GAAG;AACxB,aAAO,aAAa;AACpB,aAAO,gBAAgB,KAAK,IAAI,QAAQ;AACxC,aAAO,aAAa;AAAA,IACrB;AAAA,EACD;AACD;AAEA,qBAAqB,sBAAsB;",
  "names": []
}
