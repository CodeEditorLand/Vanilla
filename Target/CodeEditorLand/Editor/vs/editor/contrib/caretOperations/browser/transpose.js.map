{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/caretOperations/browser/transpose.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n} from \"../../../browser/editorExtensions.js\";\nimport { ReplaceCommand } from \"../../../common/commands/replaceCommand.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { MoveOperations } from \"../../../common/cursor/cursorMoveOperations.js\";\nimport type { ICommand } from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\n\nclass TransposeLettersAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.transposeLetters\",\n\t\t\tlabel: nls.localize(\"transposeLetters.label\", \"Transpose Letters\"),\n\t\t\talias: \"Transpose Letters\",\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.KeyT,\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = editor.getModel();\n\t\tconst commands: ICommand[] = [];\n\t\tconst selections = editor.getSelections();\n\n\t\tfor (const selection of selections) {\n\t\t\tif (!selection.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst lineNumber = selection.startLineNumber;\n\t\t\tconst column = selection.startColumn;\n\n\t\t\tconst lastColumn = model.getLineMaxColumn(lineNumber);\n\n\t\t\tif (\n\t\t\t\tlineNumber === 1 &&\n\t\t\t\t(column === 1 || (column === 2 && lastColumn === 2))\n\t\t\t) {\n\t\t\t\t// at beginning of file, nothing to do\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// handle special case: when at end of line, transpose left two chars\n\t\t\t// otherwise, transpose left and right chars\n\t\t\tconst endPosition =\n\t\t\t\tcolumn === lastColumn\n\t\t\t\t\t? selection.getPosition()\n\t\t\t\t\t: MoveOperations.rightPosition(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tselection.getPosition().lineNumber,\n\t\t\t\t\t\t\tselection.getPosition().column,\n\t\t\t\t\t\t);\n\n\t\t\tconst middlePosition = MoveOperations.leftPosition(\n\t\t\t\tmodel,\n\t\t\t\tendPosition,\n\t\t\t);\n\t\t\tconst beginPosition = MoveOperations.leftPosition(\n\t\t\t\tmodel,\n\t\t\t\tmiddlePosition,\n\t\t\t);\n\n\t\t\tconst leftChar = model.getValueInRange(\n\t\t\t\tRange.fromPositions(beginPosition, middlePosition),\n\t\t\t);\n\t\t\tconst rightChar = model.getValueInRange(\n\t\t\t\tRange.fromPositions(middlePosition, endPosition),\n\t\t\t);\n\n\t\t\tconst replaceRange = Range.fromPositions(\n\t\t\t\tbeginPosition,\n\t\t\t\tendPosition,\n\t\t\t);\n\t\t\tcommands.push(\n\t\t\t\tnew ReplaceCommand(replaceRange, rightChar + leftChar),\n\t\t\t);\n\t\t}\n\n\t\tif (commands.length > 0) {\n\t\t\teditor.pushUndoStop();\n\t\t\teditor.executeCommands(this.id, commands);\n\t\t\teditor.pushUndoStop();\n\t\t}\n\t}\n}\n\nregisterEditorAction(TransposeLettersAction);\n"],
  "mappings": ";;AAKA,SAAS,SAAS,cAAc;AAChC,YAAY,SAAS;AACrB,SAAS,wBAAwB;AAEjC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,sBAAsB;AAC/B,SAAS,aAAa;AACtB,SAAS,sBAAsB;AAE/B,SAAS,yBAAyB;AAElC,MAAM,+BAA+B,aAAa;AAAA,EApBlD,OAoBkD;AAAA;AAAA;AAAA,EACjD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,IAAI,SAAS,0BAA0B,mBAAmB;AAAA,MACjE,OAAO;AAAA,MACP,cAAc,kBAAkB;AAAA,MAChC,QAAQ;AAAA,QACP,QAAQ,kBAAkB;AAAA,QAC1B,SAAS;AAAA,QACT,KAAK;AAAA,UACJ,SAAS,OAAO,UAAU,QAAQ;AAAA,QACnC;AAAA,QACA,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEO,IAAI,UAA4B,QAA2B;AACjE,QAAI,CAAC,OAAO,SAAS,GAAG;AACvB;AAAA,IACD;AAEA,UAAM,QAAQ,OAAO,SAAS;AAC9B,UAAM,WAAuB,CAAC;AAC9B,UAAM,aAAa,OAAO,cAAc;AAExC,eAAW,aAAa,YAAY;AACnC,UAAI,CAAC,UAAU,QAAQ,GAAG;AACzB;AAAA,MACD;AAEA,YAAM,aAAa,UAAU;AAC7B,YAAM,SAAS,UAAU;AAEzB,YAAM,aAAa,MAAM,iBAAiB,UAAU;AAEpD,UACC,eAAe,MACd,WAAW,KAAM,WAAW,KAAK,eAAe,IAChD;AAED;AAAA,MACD;AAIA,YAAM,cACL,WAAW,aACR,UAAU,YAAY,IACtB,eAAe;AAAA,QACf;AAAA,QACA,UAAU,YAAY,EAAE;AAAA,QACxB,UAAU,YAAY,EAAE;AAAA,MACzB;AAEH,YAAM,iBAAiB,eAAe;AAAA,QACrC;AAAA,QACA;AAAA,MACD;AACA,YAAM,gBAAgB,eAAe;AAAA,QACpC;AAAA,QACA;AAAA,MACD;AAEA,YAAM,WAAW,MAAM;AAAA,QACtB,MAAM,cAAc,eAAe,cAAc;AAAA,MAClD;AACA,YAAM,YAAY,MAAM;AAAA,QACvB,MAAM,cAAc,gBAAgB,WAAW;AAAA,MAChD;AAEA,YAAM,eAAe,MAAM;AAAA,QAC1B;AAAA,QACA;AAAA,MACD;AACA,eAAS;AAAA,QACR,IAAI,eAAe,cAAc,YAAY,QAAQ;AAAA,MACtD;AAAA,IACD;AAEA,QAAI,SAAS,SAAS,GAAG;AACxB,aAAO,aAAa;AACpB,aAAO,gBAAgB,KAAK,IAAI,QAAQ;AACxC,aAAO,aAAa;AAAA,IACrB;AAAA,EACD;AACD;AAEA,qBAAqB,sBAAsB;",
  "names": []
}
