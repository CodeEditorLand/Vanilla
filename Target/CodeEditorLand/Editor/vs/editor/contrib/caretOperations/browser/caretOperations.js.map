{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/caretOperations/browser/caretOperations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../../../nls.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\ttype IActionOptions,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n} from \"../../../browser/editorExtensions.js\";\nimport type { ICommand } from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport { MoveCaretCommand } from \"./moveCaretCommand.js\";\n\nclass MoveCaretAction extends EditorAction {\n\tprivate readonly left: boolean;\n\n\tconstructor(left: boolean, opts: IActionOptions) {\n\t\tsuper(opts);\n\n\t\tthis.left = left;\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst commands: ICommand[] = [];\n\t\tconst selections = editor.getSelections();\n\n\t\tfor (const selection of selections) {\n\t\t\tcommands.push(new MoveCaretCommand(selection, this.left));\n\t\t}\n\n\t\teditor.pushUndoStop();\n\t\teditor.executeCommands(this.id, commands);\n\t\teditor.pushUndoStop();\n\t}\n}\n\nclass MoveCaretLeftAction extends MoveCaretAction {\n\tconstructor() {\n\t\tsuper(true, {\n\t\t\tid: \"editor.action.moveCarretLeftAction\",\n\t\t\tlabel: nls.localize(\"caret.moveLeft\", \"Move Selected Text Left\"),\n\t\t\talias: \"Move Selected Text Left\",\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t});\n\t}\n}\n\nclass MoveCaretRightAction extends MoveCaretAction {\n\tconstructor() {\n\t\tsuper(false, {\n\t\t\tid: \"editor.action.moveCarretRightAction\",\n\t\t\tlabel: nls.localize(\"caret.moveRight\", \"Move Selected Text Right\"),\n\t\t\talias: \"Move Selected Text Right\",\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t});\n\t}\n}\n\nregisterEditorAction(MoveCaretLeftAction);\nregisterEditorAction(MoveCaretRightAction);\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AAErB;AAAA,EACC;AAAA,EAGA;AAAA,OACM;AAEP,SAAS,yBAAyB;AAClC,SAAS,wBAAwB;AAEjC,MAAM,wBAAwB,aAAa;AAAA,EAjB3C,OAiB2C;AAAA;AAAA;AAAA,EACzB;AAAA,EAEjB,YAAY,MAAe,MAAsB;AAChD,UAAM,IAAI;AAEV,SAAK,OAAO;AAAA,EACb;AAAA,EAEO,IAAI,UAA4B,QAA2B;AACjE,QAAI,CAAC,OAAO,SAAS,GAAG;AACvB;AAAA,IACD;AAEA,UAAM,WAAuB,CAAC;AAC9B,UAAM,aAAa,OAAO,cAAc;AAExC,eAAW,aAAa,YAAY;AACnC,eAAS,KAAK,IAAI,iBAAiB,WAAW,KAAK,IAAI,CAAC;AAAA,IACzD;AAEA,WAAO,aAAa;AACpB,WAAO,gBAAgB,KAAK,IAAI,QAAQ;AACxC,WAAO,aAAa;AAAA,EACrB;AACD;AAEA,MAAM,4BAA4B,gBAAgB;AAAA,EA5ClD,OA4CkD;AAAA;AAAA;AAAA,EACjD,cAAc;AACb,UAAM,MAAM;AAAA,MACX,IAAI;AAAA,MACJ,OAAO,IAAI,SAAS,kBAAkB,yBAAyB;AAAA,MAC/D,OAAO;AAAA,MACP,cAAc,kBAAkB;AAAA,IACjC,CAAC;AAAA,EACF;AACD;AAEA,MAAM,6BAA6B,gBAAgB;AAAA,EAvDnD,OAuDmD;AAAA;AAAA;AAAA,EAClD,cAAc;AACb,UAAM,OAAO;AAAA,MACZ,IAAI;AAAA,MACJ,OAAO,IAAI,SAAS,mBAAmB,0BAA0B;AAAA,MACjE,OAAO;AAAA,MACP,cAAc,kBAAkB;AAAA,IACjC,CAAC;AAAA,EACF;AACD;AAEA,qBAAqB,mBAAmB;AACxC,qBAAqB,oBAAoB;",
  "names": []
}
