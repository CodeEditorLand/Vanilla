{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/caretOperations/browser/moveCaretCommand.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Range } from \"../../../common/core/range.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport type {\n\tICommand,\n\tICursorStateComputerData,\n\tIEditOperationBuilder,\n} from \"../../../common/editorCommon.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\n\nexport class MoveCaretCommand implements ICommand {\n\tprivate readonly _selection: Selection;\n\tprivate readonly _isMovingLeft: boolean;\n\n\tconstructor(selection: Selection, isMovingLeft: boolean) {\n\t\tthis._selection = selection;\n\t\tthis._isMovingLeft = isMovingLeft;\n\t}\n\n\tpublic getEditOperations(\n\t\tmodel: ITextModel,\n\t\tbuilder: IEditOperationBuilder,\n\t): void {\n\t\tif (\n\t\t\tthis._selection.startLineNumber !== this._selection.endLineNumber ||\n\t\t\tthis._selection.isEmpty()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst lineNumber = this._selection.startLineNumber;\n\t\tconst startColumn = this._selection.startColumn;\n\t\tconst endColumn = this._selection.endColumn;\n\t\tif (this._isMovingLeft && startColumn === 1) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\t!this._isMovingLeft &&\n\t\t\tendColumn === model.getLineMaxColumn(lineNumber)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isMovingLeft) {\n\t\t\tconst rangeBefore = new Range(\n\t\t\t\tlineNumber,\n\t\t\t\tstartColumn - 1,\n\t\t\t\tlineNumber,\n\t\t\t\tstartColumn,\n\t\t\t);\n\t\t\tconst charBefore = model.getValueInRange(rangeBefore);\n\t\t\tbuilder.addEditOperation(rangeBefore, null);\n\t\t\tbuilder.addEditOperation(\n\t\t\t\tnew Range(lineNumber, endColumn, lineNumber, endColumn),\n\t\t\t\tcharBefore,\n\t\t\t);\n\t\t} else {\n\t\t\tconst rangeAfter = new Range(\n\t\t\t\tlineNumber,\n\t\t\t\tendColumn,\n\t\t\t\tlineNumber,\n\t\t\t\tendColumn + 1,\n\t\t\t);\n\t\t\tconst charAfter = model.getValueInRange(rangeAfter);\n\t\t\tbuilder.addEditOperation(rangeAfter, null);\n\t\t\tbuilder.addEditOperation(\n\t\t\t\tnew Range(lineNumber, startColumn, lineNumber, startColumn),\n\t\t\t\tcharAfter,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic computeCursorState(\n\t\tmodel: ITextModel,\n\t\thelper: ICursorStateComputerData,\n\t): Selection {\n\t\tif (this._isMovingLeft) {\n\t\t\treturn new Selection(\n\t\t\t\tthis._selection.startLineNumber,\n\t\t\t\tthis._selection.startColumn - 1,\n\t\t\t\tthis._selection.endLineNumber,\n\t\t\t\tthis._selection.endColumn - 1,\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Selection(\n\t\t\t\tthis._selection.startLineNumber,\n\t\t\t\tthis._selection.startColumn + 1,\n\t\t\t\tthis._selection.endLineNumber,\n\t\t\t\tthis._selection.endColumn + 1,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AACtB,SAAS,iBAAiB;AAQnB,MAAM,iBAAqC;AAAA,EAdlD,OAckD;AAAA;AAAA;AAAA,EAChC;AAAA,EACA;AAAA,EAEjB,YAAY,WAAsB,cAAuB;AACxD,SAAK,aAAa;AAClB,SAAK,gBAAgB;AAAA,EACtB;AAAA,EAEO,kBACN,OACA,SACO;AACP,QACC,KAAK,WAAW,oBAAoB,KAAK,WAAW,iBACpD,KAAK,WAAW,QAAQ,GACvB;AACD;AAAA,IACD;AACA,UAAM,aAAa,KAAK,WAAW;AACnC,UAAM,cAAc,KAAK,WAAW;AACpC,UAAM,YAAY,KAAK,WAAW;AAClC,QAAI,KAAK,iBAAiB,gBAAgB,GAAG;AAC5C;AAAA,IACD;AACA,QACC,CAAC,KAAK,iBACN,cAAc,MAAM,iBAAiB,UAAU,GAC9C;AACD;AAAA,IACD;AAEA,QAAI,KAAK,eAAe;AACvB,YAAM,cAAc,IAAI;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,QACd;AAAA,QACA;AAAA,MACD;AACA,YAAM,aAAa,MAAM,gBAAgB,WAAW;AACpD,cAAQ,iBAAiB,aAAa,IAAI;AAC1C,cAAQ;AAAA,QACP,IAAI,MAAM,YAAY,WAAW,YAAY,SAAS;AAAA,QACtD;AAAA,MACD;AAAA,IACD,OAAO;AACN,YAAM,aAAa,IAAI;AAAA,QACtB;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY;AAAA,MACb;AACA,YAAM,YAAY,MAAM,gBAAgB,UAAU;AAClD,cAAQ,iBAAiB,YAAY,IAAI;AACzC,cAAQ;AAAA,QACP,IAAI,MAAM,YAAY,aAAa,YAAY,WAAW;AAAA,QAC1D;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEO,mBACN,OACA,QACY;AACZ,QAAI,KAAK,eAAe;AACvB,aAAO,IAAI;AAAA,QACV,KAAK,WAAW;AAAA,QAChB,KAAK,WAAW,cAAc;AAAA,QAC9B,KAAK,WAAW;AAAA,QAChB,KAAK,WAAW,YAAY;AAAA,MAC7B;AAAA,IACD,OAAO;AACN,aAAO,IAAI;AAAA,QACV,KAAK,WAAW;AAAA,QAChB,KAAK,WAAW,cAAc;AAAA,QAC9B,KAAK,WAAW;AAAA,QAChB,KAAK,WAAW,YAAY;AAAA,MAC7B;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
