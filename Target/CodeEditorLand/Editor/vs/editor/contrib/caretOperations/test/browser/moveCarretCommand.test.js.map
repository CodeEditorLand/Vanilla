{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/caretOperations/test/browser/moveCarretCommand.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { MoveCaretCommand } from '../../browser/moveCaretCommand.js';\nimport { testCommand } from '../../../../test/browser/testCommand.js';\n\n\nfunction testMoveCaretLeftCommand(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (accessor, sel) => new MoveCaretCommand(sel, true), expectedLines, expectedSelection);\n}\n\nfunction testMoveCaretRightCommand(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (accessor, sel) => new MoveCaretCommand(sel, false), expectedLines, expectedSelection);\n}\n\nsuite('Editor Contrib - Move Caret Command', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('move selection to left', function () {\n\t\ttestMoveCaretLeftCommand(\n\t\t\t[\n\t\t\t\t'012345'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 1, 5),\n\t\t\t[\n\t\t\t\t'023145'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 1, 4)\n\t\t);\n\t});\n\ttest('move selection to right', function () {\n\t\ttestMoveCaretRightCommand(\n\t\t\t[\n\t\t\t\t'012345'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 1, 5),\n\t\t\t[\n\t\t\t\t'014235'\n\t\t\t],\n\t\t\tnew Selection(1, 4, 1, 6)\n\t\t);\n\t});\n\ttest('move selection to left - from first column - no change', function () {\n\t\ttestMoveCaretLeftCommand(\n\t\t\t[\n\t\t\t\t'012345'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t[\n\t\t\t\t'012345'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 1, 1)\n\t\t);\n\t});\n\ttest('move selection to right - from last column - no change', function () {\n\t\ttestMoveCaretRightCommand(\n\t\t\t[\n\t\t\t\t'012345'\n\t\t\t],\n\t\t\tnew Selection(1, 5, 1, 7),\n\t\t\t[\n\t\t\t\t'012345'\n\t\t\t],\n\t\t\tnew Selection(1, 5, 1, 7)\n\t\t);\n\t});\n});\n"],
  "mappings": ";;AAKA,SAAS,+CAA+C;AACxD,SAAS,iBAAiB;AAC1B,SAAS,wBAAwB;AACjC,SAAS,mBAAmB;AAG5B,SAAS,yBAAyB,OAAiB,WAAsB,eAAyB,mBAAoC;AACrI,cAAY,OAAO,MAAM,WAAW,CAAC,UAAU,QAAQ,IAAI,iBAAiB,KAAK,IAAI,GAAG,eAAe,iBAAiB;AACzH;AAFS;AAIT,SAAS,0BAA0B,OAAiB,WAAsB,eAAyB,mBAAoC;AACtI,cAAY,OAAO,MAAM,WAAW,CAAC,UAAU,QAAQ,IAAI,iBAAiB,KAAK,KAAK,GAAG,eAAe,iBAAiB;AAC1H;AAFS;AAIT,MAAM,uCAAuC,MAAM;AAElD,0CAAwC;AAExC,OAAK,0BAA0B,WAAY;AAC1C;AAAA,MACC;AAAA,QACC;AAAA,MACD;AAAA,MACA,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,MACxB;AAAA,QACC;AAAA,MACD;AAAA,MACA,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,IACzB;AAAA,EACD,CAAC;AACD,OAAK,2BAA2B,WAAY;AAC3C;AAAA,MACC;AAAA,QACC;AAAA,MACD;AAAA,MACA,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,MACxB;AAAA,QACC;AAAA,MACD;AAAA,MACA,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,IACzB;AAAA,EACD,CAAC;AACD,OAAK,0DAA0D,WAAY;AAC1E;AAAA,MACC;AAAA,QACC;AAAA,MACD;AAAA,MACA,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,MACxB;AAAA,QACC;AAAA,MACD;AAAA,MACA,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,IACzB;AAAA,EACD,CAAC;AACD,OAAK,0DAA0D,WAAY;AAC1E;AAAA,MACC;AAAA,QACC;AAAA,MACD;AAAA,MACA,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,MACxB;AAAA,QACC;AAAA,MACD;AAAA,MACA,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,IACzB;AAAA,EACD,CAAC;AACF,CAAC;",
  "names": []
}
