{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/quickAccess/browser/gotoSymbolQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DeferredPromise } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { IMatch } from '../../../../base/common/filters.js';\nimport { IPreparedQuery, pieceToQuery, prepareQuery, scoreFuzzy2 } from '../../../../base/common/fuzzyScorer.js';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { format, trim } from '../../../../base/common/strings.js';\nimport { IRange, Range } from '../../../common/core/range.js';\nimport { ScrollType } from '../../../common/editorCommon.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { DocumentSymbol, SymbolKind, SymbolKinds, SymbolTag, getAriaLabelForSymbol } from '../../../common/languages.js';\nimport { IOutlineModelService } from '../../documentSymbols/browser/outlineModel.js';\nimport { AbstractEditorNavigationQuickAccessProvider, IEditorNavigationQuickAccessOptions, IQuickAccessTextEditorContext } from './editorNavigationQuickAccess.js';\nimport { localize } from '../../../../nls.js';\nimport { IQuickInputButton, IQuickPick, IQuickPickItem, IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Position } from '../../../common/core/position.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { IQuickAccessProviderRunOptions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { URI } from '../../../../base/common/uri.js';\n\nexport interface IGotoSymbolQuickPickItem extends IQuickPickItem {\n\tkind: SymbolKind;\n\tindex: number;\n\tscore?: number;\n\turi?: URI;\n\tsymbolName?: string;\n\trange?: { decoration: IRange; selection: IRange };\n}\n\nexport interface IGotoSymbolQuickAccessProviderOptions extends IEditorNavigationQuickAccessOptions {\n\topenSideBySideDirection?: () => undefined | 'right' | 'down';\n\t/**\n\t * A handler to invoke when an item is accepted for\n\t * this particular showing of the quick access.\n\t * @param item The item that was accepted.\n\t */\n\treadonly handleAccept?: (item: IQuickPickItem) => void;\n}\n\nexport abstract class AbstractGotoSymbolQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\n\n\tstatic PREFIX = '@';\n\tstatic SCOPE_PREFIX = ':';\n\tstatic PREFIX_BY_CATEGORY = `${this.PREFIX}${this.SCOPE_PREFIX}`;\n\n\tprotected override readonly options: IGotoSymbolQuickAccessProviderOptions;\n\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IOutlineModelService private readonly _outlineModelService: IOutlineModelService,\n\t\toptions: IGotoSymbolQuickAccessProviderOptions = Object.create(null)\n\t) {\n\t\tsuper(options);\n\n\t\tthis.options = options;\n\t\tthis.options.canAcceptInBackground = true;\n\t}\n\n\tprotected provideWithoutTextEditor(picker: IQuickPick<IGotoSymbolQuickPickItem, { useSeparators: true }>): IDisposable {\n\t\tthis.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutEditor', \"To go to a symbol, first open a text editor with symbol information.\"));\n\n\t\treturn Disposable.None;\n\t}\n\n\tprotected provideWithTextEditor(context: IQuickAccessTextEditorContext, picker: IQuickPick<IGotoSymbolQuickPickItem, { useSeparators: true }>, token: CancellationToken, runOptions?: IQuickAccessProviderRunOptions): IDisposable {\n\t\tconst editor = context.editor;\n\t\tconst model = this.getModel(editor);\n\t\tif (!model) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\t// Provide symbols from model if available in registry\n\t\tif (this._languageFeaturesService.documentSymbolProvider.has(model)) {\n\t\t\treturn this.doProvideWithEditorSymbols(context, model, picker, token, runOptions);\n\t\t}\n\n\t\t// Otherwise show an entry for a model without registry\n\t\t// But give a chance to resolve the symbols at a later\n\t\t// point if possible\n\t\treturn this.doProvideWithoutEditorSymbols(context, model, picker, token);\n\t}\n\n\tprivate doProvideWithoutEditorSymbols(context: IQuickAccessTextEditorContext, model: ITextModel, picker: IQuickPick<IGotoSymbolQuickPickItem, { useSeparators: true }>, token: CancellationToken): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Generic pick for not having any symbol information\n\t\tthis.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutSymbolProvider', \"The active text editor does not provide symbol information.\"));\n\n\t\t// Wait for changes to the registry and see if eventually\n\t\t// we do get symbols. This can happen if the picker is opened\n\t\t// very early after the model has loaded but before the\n\t\t// language registry is ready.\n\t\t// https://github.com/microsoft/vscode/issues/70607\n\t\t(async () => {\n\t\t\tconst result = await this.waitForLanguageSymbolRegistry(model, disposables);\n\t\t\tif (!result || token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdisposables.add(this.doProvideWithEditorSymbols(context, model, picker, token));\n\t\t})();\n\n\t\treturn disposables;\n\t}\n\n\tprivate provideLabelPick(picker: IQuickPick<IGotoSymbolQuickPickItem, { useSeparators: true }>, label: string): void {\n\t\tpicker.items = [{ label, index: 0, kind: SymbolKind.String }];\n\t\tpicker.ariaLabel = label;\n\t}\n\n\tprotected async waitForLanguageSymbolRegistry(model: ITextModel, disposables: DisposableStore): Promise<boolean> {\n\t\tif (this._languageFeaturesService.documentSymbolProvider.has(model)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst symbolProviderRegistryPromise = new DeferredPromise<boolean>();\n\n\t\t// Resolve promise when registry knows model\n\t\tconst symbolProviderListener = disposables.add(this._languageFeaturesService.documentSymbolProvider.onDidChange(() => {\n\t\t\tif (this._languageFeaturesService.documentSymbolProvider.has(model)) {\n\t\t\t\tsymbolProviderListener.dispose();\n\n\t\t\t\tsymbolProviderRegistryPromise.complete(true);\n\t\t\t}\n\t\t}));\n\n\t\t// Resolve promise when we get disposed too\n\t\tdisposables.add(toDisposable(() => symbolProviderRegistryPromise.complete(false)));\n\n\t\treturn symbolProviderRegistryPromise.p;\n\t}\n\n\tprivate doProvideWithEditorSymbols(context: IQuickAccessTextEditorContext, model: ITextModel, picker: IQuickPick<IGotoSymbolQuickPickItem, { useSeparators: true }>, token: CancellationToken, runOptions?: IQuickAccessProviderRunOptions): IDisposable {\n\t\tconst editor = context.editor;\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Goto symbol once picked\n\t\tdisposables.add(picker.onDidAccept(event => {\n\t\t\tconst [item] = picker.selectedItems;\n\t\t\tif (item && item.range) {\n\t\t\t\tthis.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, preserveFocus: event.inBackground });\n\n\t\t\t\trunOptions?.handleAccept?.(item);\n\n\t\t\t\tif (!event.inBackground) {\n\t\t\t\t\tpicker.hide();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Goto symbol side by side if enabled\n\t\tdisposables.add(picker.onDidTriggerItemButton(({ item }) => {\n\t\t\tif (item && item.range) {\n\t\t\t\tthis.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, forceSideBySide: true });\n\n\t\t\t\tpicker.hide();\n\t\t\t}\n\t\t}));\n\n\t\t// Resolve symbols from document once and reuse this\n\t\t// request for all filtering and typing then on\n\t\tconst symbolsPromise = this.getDocumentSymbols(model, token);\n\n\t\t// Set initial picks and update on type\n\t\tlet picksCts: CancellationTokenSource | undefined = undefined;\n\t\tconst updatePickerItems = async (positionToEnclose: Position | undefined) => {\n\n\t\t\t// Cancel any previous ask for picks and busy\n\t\t\tpicksCts?.dispose(true);\n\t\t\tpicker.busy = false;\n\n\t\t\t// Create new cancellation source for this run\n\t\t\tpicksCts = new CancellationTokenSource(token);\n\n\t\t\t// Collect symbol picks\n\t\t\tpicker.busy = true;\n\t\t\ttry {\n\t\t\t\tconst query = prepareQuery(picker.value.substr(AbstractGotoSymbolQuickAccessProvider.PREFIX.length).trim());\n\t\t\t\tconst items = await this.doGetSymbolPicks(symbolsPromise, query, undefined, picksCts.token, model);\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (items.length > 0) {\n\t\t\t\t\tpicker.items = items;\n\t\t\t\t\tif (positionToEnclose && query.original.length === 0) {\n\t\t\t\t\t\tconst candidate = <IGotoSymbolQuickPickItem>findLast(items, item => Boolean(item.type !== 'separator' && item.range && Range.containsPosition(item.range.decoration, positionToEnclose)));\n\t\t\t\t\t\tif (candidate) {\n\t\t\t\t\t\t\tpicker.activeItems = [candidate];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tif (query.original.length > 0) {\n\t\t\t\t\t\tthis.provideLabelPick(picker, localize('noMatchingSymbolResults', \"No matching editor symbols\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.provideLabelPick(picker, localize('noSymbolResults', \"No editor symbols\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\tpicker.busy = false;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tdisposables.add(picker.onDidChangeValue(() => updatePickerItems(undefined)));\n\t\tupdatePickerItems(editor.getSelection()?.getPosition());\n\n\n\t\t// Reveal and decorate when active item changes\n\t\tdisposables.add(picker.onDidChangeActive(() => {\n\t\t\tconst [item] = picker.activeItems;\n\t\t\tif (item && item.range) {\n\n\t\t\t\t// Reveal\n\t\t\t\teditor.revealRangeInCenter(item.range.selection, ScrollType.Smooth);\n\n\t\t\t\t// Decorate\n\t\t\t\tthis.addDecorations(editor, item.range.decoration);\n\t\t\t}\n\t\t}));\n\n\t\treturn disposables;\n\t}\n\n\tprotected async doGetSymbolPicks(symbolsPromise: Promise<DocumentSymbol[]>, query: IPreparedQuery, options: { extraContainerLabel?: string } | undefined, token: CancellationToken, model: ITextModel): Promise<Array<IGotoSymbolQuickPickItem | IQuickPickSeparator>> {\n\t\tconst symbols = await symbolsPromise;\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst filterBySymbolKind = query.original.indexOf(AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX) === 0;\n\t\tconst filterPos = filterBySymbolKind ? 1 : 0;\n\n\t\t// Split between symbol and container query\n\t\tlet symbolQuery: IPreparedQuery;\n\t\tlet containerQuery: IPreparedQuery | undefined;\n\t\tif (query.values && query.values.length > 1) {\n\t\t\tsymbolQuery = pieceToQuery(query.values[0]); \t\t  // symbol: only match on first part\n\t\t\tcontainerQuery = pieceToQuery(query.values.slice(1)); // container: match on all but first parts\n\t\t} else {\n\t\t\tsymbolQuery = query;\n\t\t}\n\n\t\t// Convert to symbol picks and apply filtering\n\n\t\tlet buttons: IQuickInputButton[] | undefined;\n\t\tconst openSideBySideDirection = this.options?.openSideBySideDirection?.();\n\t\tif (openSideBySideDirection) {\n\t\t\tbuttons = [{\n\t\t\t\ticonClass: openSideBySideDirection === 'right' ? ThemeIcon.asClassName(Codicon.splitHorizontal) : ThemeIcon.asClassName(Codicon.splitVertical),\n\t\t\t\ttooltip: openSideBySideDirection === 'right' ? localize('openToSide', \"Open to the Side\") : localize('openToBottom', \"Open to the Bottom\")\n\t\t\t}];\n\t\t}\n\n\t\tconst filteredSymbolPicks: IGotoSymbolQuickPickItem[] = [];\n\t\tfor (let index = 0; index < symbols.length; index++) {\n\t\t\tconst symbol = symbols[index];\n\n\t\t\tconst symbolLabel = trim(symbol.name);\n\t\t\tconst symbolLabelWithIcon = `$(${SymbolKinds.toIcon(symbol.kind).id}) ${symbolLabel}`;\n\t\t\tconst symbolLabelIconOffset = symbolLabelWithIcon.length - symbolLabel.length;\n\n\t\t\tlet containerLabel = symbol.containerName;\n\t\t\tif (options?.extraContainerLabel) {\n\t\t\t\tif (containerLabel) {\n\t\t\t\t\tcontainerLabel = `${options.extraContainerLabel} \u2022 ${containerLabel}`;\n\t\t\t\t} else {\n\t\t\t\t\tcontainerLabel = options.extraContainerLabel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet symbolScore: number | undefined = undefined;\n\t\t\tlet symbolMatches: IMatch[] | undefined = undefined;\n\n\t\t\tlet containerScore: number | undefined = undefined;\n\t\t\tlet containerMatches: IMatch[] | undefined = undefined;\n\n\t\t\tif (query.original.length > filterPos) {\n\n\t\t\t\t// First: try to score on the entire query, it is possible that\n\t\t\t\t// the symbol matches perfectly (e.g. searching for \"change log\"\n\t\t\t\t// can be a match on a markdown symbol \"change log\"). In that\n\t\t\t\t// case we want to skip the container query altogether.\n\t\t\t\tlet skipContainerQuery = false;\n\t\t\t\tif (symbolQuery !== query) {\n\t\t\t\t\t[symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, { ...query, values: undefined /* disable multi-query support */ }, filterPos, symbolLabelIconOffset);\n\t\t\t\t\tif (typeof symbolScore === 'number') {\n\t\t\t\t\t\tskipContainerQuery = true; // since we consumed the query, skip any container matching\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Otherwise: score on the symbol query and match on the container later\n\t\t\t\tif (typeof symbolScore !== 'number') {\n\t\t\t\t\t[symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, symbolQuery, filterPos, symbolLabelIconOffset);\n\t\t\t\t\tif (typeof symbolScore !== 'number') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Score by container if specified\n\t\t\t\tif (!skipContainerQuery && containerQuery) {\n\t\t\t\t\tif (containerLabel && containerQuery.original.length > 0) {\n\t\t\t\t\t\t[containerScore, containerMatches] = scoreFuzzy2(containerLabel, containerQuery);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof containerScore !== 'number') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof symbolScore === 'number') {\n\t\t\t\t\t\tsymbolScore += containerScore; // boost symbolScore by containerScore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst deprecated = symbol.tags && symbol.tags.indexOf(SymbolTag.Deprecated) >= 0;\n\n\t\t\tfilteredSymbolPicks.push({\n\t\t\t\tindex,\n\t\t\t\tkind: symbol.kind,\n\t\t\t\tscore: symbolScore,\n\t\t\t\tlabel: symbolLabelWithIcon,\n\t\t\t\tariaLabel: getAriaLabelForSymbol(symbol.name, symbol.kind),\n\t\t\t\tdescription: containerLabel,\n\t\t\t\thighlights: deprecated ? undefined : {\n\t\t\t\t\tlabel: symbolMatches,\n\t\t\t\t\tdescription: containerMatches\n\t\t\t\t},\n\t\t\t\trange: {\n\t\t\t\t\tselection: Range.collapseToStart(symbol.selectionRange),\n\t\t\t\t\tdecoration: symbol.range\n\t\t\t\t},\n\t\t\t\turi: model.uri,\n\t\t\t\tsymbolName: symbolLabel,\n\t\t\t\tstrikethrough: deprecated,\n\t\t\t\tbuttons\n\t\t\t});\n\t\t}\n\n\t\t// Sort by score\n\t\tconst sortedFilteredSymbolPicks = filteredSymbolPicks.sort((symbolA, symbolB) => filterBySymbolKind ?\n\t\t\tthis.compareByKindAndScore(symbolA, symbolB) :\n\t\t\tthis.compareByScore(symbolA, symbolB)\n\t\t);\n\n\t\t// Add separator for types\n\t\t// - @  only total number of symbols\n\t\t// - @: grouped by symbol kind\n\t\tlet symbolPicks: Array<IGotoSymbolQuickPickItem | IQuickPickSeparator> = [];\n\t\tif (filterBySymbolKind) {\n\t\t\tlet lastSymbolKind: SymbolKind | undefined = undefined;\n\t\t\tlet lastSeparator: IQuickPickSeparator | undefined = undefined;\n\t\t\tlet lastSymbolKindCounter = 0;\n\n\t\t\tfunction updateLastSeparatorLabel(): void {\n\t\t\t\tif (lastSeparator && typeof lastSymbolKind === 'number' && lastSymbolKindCounter > 0) {\n\t\t\t\t\tlastSeparator.label = format(NLS_SYMBOL_KIND_CACHE[lastSymbolKind] || FALLBACK_NLS_SYMBOL_KIND, lastSymbolKindCounter);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const symbolPick of sortedFilteredSymbolPicks) {\n\n\t\t\t\t// Found new kind\n\t\t\t\tif (lastSymbolKind !== symbolPick.kind) {\n\n\t\t\t\t\t// Update last separator with number of symbols we found for kind\n\t\t\t\t\tupdateLastSeparatorLabel();\n\n\t\t\t\t\tlastSymbolKind = symbolPick.kind;\n\t\t\t\t\tlastSymbolKindCounter = 1;\n\n\t\t\t\t\t// Add new separator for new kind\n\t\t\t\t\tlastSeparator = { type: 'separator' };\n\t\t\t\t\tsymbolPicks.push(lastSeparator);\n\t\t\t\t}\n\n\t\t\t\t// Existing kind, keep counting\n\t\t\t\telse {\n\t\t\t\t\tlastSymbolKindCounter++;\n\t\t\t\t}\n\n\t\t\t\t// Add to final result\n\t\t\t\tsymbolPicks.push(symbolPick);\n\t\t\t}\n\n\t\t\t// Update last separator with number of symbols we found for kind\n\t\t\tupdateLastSeparatorLabel();\n\t\t} else if (sortedFilteredSymbolPicks.length > 0) {\n\t\t\tsymbolPicks = [\n\t\t\t\t{ label: localize('symbols', \"symbols ({0})\", filteredSymbolPicks.length), type: 'separator' },\n\t\t\t\t...sortedFilteredSymbolPicks\n\t\t\t];\n\t\t}\n\n\t\treturn symbolPicks;\n\t}\n\n\tprivate compareByScore(symbolA: IGotoSymbolQuickPickItem, symbolB: IGotoSymbolQuickPickItem): number {\n\t\tif (typeof symbolA.score !== 'number' && typeof symbolB.score === 'number') {\n\t\t\treturn 1;\n\t\t} else if (typeof symbolA.score === 'number' && typeof symbolB.score !== 'number') {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (typeof symbolA.score === 'number' && typeof symbolB.score === 'number') {\n\t\t\tif (symbolA.score > symbolB.score) {\n\t\t\t\treturn -1;\n\t\t\t} else if (symbolA.score < symbolB.score) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\n\t\tif (symbolA.index < symbolB.index) {\n\t\t\treturn -1;\n\t\t} else if (symbolA.index > symbolB.index) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprivate compareByKindAndScore(symbolA: IGotoSymbolQuickPickItem, symbolB: IGotoSymbolQuickPickItem): number {\n\t\tconst kindA = NLS_SYMBOL_KIND_CACHE[symbolA.kind] || FALLBACK_NLS_SYMBOL_KIND;\n\t\tconst kindB = NLS_SYMBOL_KIND_CACHE[symbolB.kind] || FALLBACK_NLS_SYMBOL_KIND;\n\n\t\t// Sort by type first if scoped search\n\t\tconst result = kindA.localeCompare(kindB);\n\t\tif (result === 0) {\n\t\t\treturn this.compareByScore(symbolA, symbolB);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected async getDocumentSymbols(document: ITextModel, token: CancellationToken): Promise<DocumentSymbol[]> {\n\t\tconst model = await this._outlineModelService.getOrCreate(document, token);\n\t\treturn token.isCancellationRequested ? [] : model.asListOfDocumentSymbols();\n\t}\n}\n\n// #region NLS Helpers\n\nconst FALLBACK_NLS_SYMBOL_KIND = localize('property', \"properties ({0})\");\nconst NLS_SYMBOL_KIND_CACHE: { [type: number]: string } = {\n\t[SymbolKind.Method]: localize('method', \"methods ({0})\"),\n\t[SymbolKind.Function]: localize('function', \"functions ({0})\"),\n\t[SymbolKind.Constructor]: localize('_constructor', \"constructors ({0})\"),\n\t[SymbolKind.Variable]: localize('variable', \"variables ({0})\"),\n\t[SymbolKind.Class]: localize('class', \"classes ({0})\"),\n\t[SymbolKind.Struct]: localize('struct', \"structs ({0})\"),\n\t[SymbolKind.Event]: localize('event', \"events ({0})\"),\n\t[SymbolKind.Operator]: localize('operator', \"operators ({0})\"),\n\t[SymbolKind.Interface]: localize('interface', \"interfaces ({0})\"),\n\t[SymbolKind.Namespace]: localize('namespace', \"namespaces ({0})\"),\n\t[SymbolKind.Package]: localize('package', \"packages ({0})\"),\n\t[SymbolKind.TypeParameter]: localize('typeParameter', \"type parameters ({0})\"),\n\t[SymbolKind.Module]: localize('modules', \"modules ({0})\"),\n\t[SymbolKind.Property]: localize('property', \"properties ({0})\"),\n\t[SymbolKind.Enum]: localize('enum', \"enumerations ({0})\"),\n\t[SymbolKind.EnumMember]: localize('enumMember', \"enumeration members ({0})\"),\n\t[SymbolKind.String]: localize('string', \"strings ({0})\"),\n\t[SymbolKind.File]: localize('file', \"files ({0})\"),\n\t[SymbolKind.Array]: localize('array', \"arrays ({0})\"),\n\t[SymbolKind.Number]: localize('number', \"numbers ({0})\"),\n\t[SymbolKind.Boolean]: localize('boolean', \"booleans ({0})\"),\n\t[SymbolKind.Object]: localize('object', \"objects ({0})\"),\n\t[SymbolKind.Key]: localize('key', \"keys ({0})\"),\n\t[SymbolKind.Field]: localize('field', \"fields ({0})\"),\n\t[SymbolKind.Constant]: localize('constant', \"constants ({0})\")\n};\n\n//#endregion\n"],
  "mappings": "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",
  "names": ["updateLastSeparatorLabel"]
}
