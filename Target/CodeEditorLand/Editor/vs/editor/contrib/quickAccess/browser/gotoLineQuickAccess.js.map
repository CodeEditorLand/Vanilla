{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/quickAccess/browser/gotoLineQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { getCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorOption, RenderLineNumbersType } from '../../../common/config/editorOptions.js';\nimport { IPosition } from '../../../common/core/position.js';\nimport { IRange } from '../../../common/core/range.js';\nimport { IEditor, ScrollType } from '../../../common/editorCommon.js';\nimport { AbstractEditorNavigationQuickAccessProvider, IQuickAccessTextEditorContext } from './editorNavigationQuickAccess.js';\nimport { localize } from '../../../../nls.js';\nimport { IQuickPick, IQuickPickItem } from '../../../../platform/quickinput/common/quickInput.js';\n\ninterface IGotoLineQuickPickItem extends IQuickPickItem, Partial<IPosition> { }\n\nexport abstract class AbstractGotoLineQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\n\n\tstatic PREFIX = ':';\n\n\tconstructor() {\n\t\tsuper({ canAcceptInBackground: true });\n\t}\n\n\tprotected provideWithoutTextEditor(picker: IQuickPick<IGotoLineQuickPickItem, { useSeparators: true }>): IDisposable {\n\t\tconst label = localize('cannotRunGotoLine', \"Open a text editor first to go to a line.\");\n\n\t\tpicker.items = [{ label }];\n\t\tpicker.ariaLabel = label;\n\n\t\treturn Disposable.None;\n\t}\n\n\tprotected provideWithTextEditor(context: IQuickAccessTextEditorContext, picker: IQuickPick<IGotoLineQuickPickItem, { useSeparators: true }>, token: CancellationToken): IDisposable {\n\t\tconst editor = context.editor;\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Goto line once picked\n\t\tdisposables.add(picker.onDidAccept(event => {\n\t\t\tconst [item] = picker.selectedItems;\n\t\t\tif (item) {\n\t\t\t\tif (!this.isValidLineNumber(editor, item.lineNumber)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.gotoLocation(context, { range: this.toRange(item.lineNumber, item.column), keyMods: picker.keyMods, preserveFocus: event.inBackground });\n\n\t\t\t\tif (!event.inBackground) {\n\t\t\t\t\tpicker.hide();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// React to picker changes\n\t\tconst updatePickerAndEditor = () => {\n\t\t\tconst position = this.parsePosition(editor, picker.value.trim().substr(AbstractGotoLineQuickAccessProvider.PREFIX.length));\n\t\t\tconst label = this.getPickLabel(editor, position.lineNumber, position.column);\n\n\t\t\t// Picker\n\t\t\tpicker.items = [{\n\t\t\t\tlineNumber: position.lineNumber,\n\t\t\t\tcolumn: position.column,\n\t\t\t\tlabel\n\t\t\t}];\n\n\t\t\t// ARIA Label\n\t\t\tpicker.ariaLabel = label;\n\n\t\t\t// Clear decorations for invalid range\n\t\t\tif (!this.isValidLineNumber(editor, position.lineNumber)) {\n\t\t\t\tthis.clearDecorations(editor);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Reveal\n\t\t\tconst range = this.toRange(position.lineNumber, position.column);\n\t\t\teditor.revealRangeInCenter(range, ScrollType.Smooth);\n\n\t\t\t// Decorate\n\t\t\tthis.addDecorations(editor, range);\n\t\t};\n\t\tupdatePickerAndEditor();\n\t\tdisposables.add(picker.onDidChangeValue(() => updatePickerAndEditor()));\n\n\t\t// Adjust line number visibility as needed\n\t\tconst codeEditor = getCodeEditor(editor);\n\t\tif (codeEditor) {\n\t\t\tconst options = codeEditor.getOptions();\n\t\t\tconst lineNumbers = options.get(EditorOption.lineNumbers);\n\t\t\tif (lineNumbers.renderType === RenderLineNumbersType.Relative) {\n\t\t\t\tcodeEditor.updateOptions({ lineNumbers: 'on' });\n\n\t\t\t\tdisposables.add(toDisposable(() => codeEditor.updateOptions({ lineNumbers: 'relative' })));\n\t\t\t}\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate toRange(lineNumber = 1, column = 1): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: lineNumber,\n\t\t\tstartColumn: column,\n\t\t\tendLineNumber: lineNumber,\n\t\t\tendColumn: column\n\t\t};\n\t}\n\n\tprivate parsePosition(editor: IEditor, value: string): IPosition {\n\n\t\t// Support line-col formats of `line,col`, `line:col`, `line#col`\n\t\tconst numbers = value.split(/,|:|#/).map(part => parseInt(part, 10)).filter(part => !isNaN(part));\n\t\tconst endLine = this.lineCount(editor) + 1;\n\n\t\treturn {\n\t\t\tlineNumber: numbers[0] > 0 ? numbers[0] : endLine + numbers[0],\n\t\t\tcolumn: numbers[1]\n\t\t};\n\t}\n\n\tprivate getPickLabel(editor: IEditor, lineNumber: number, column: number | undefined): string {\n\n\t\t// Location valid: indicate this as picker label\n\t\tif (this.isValidLineNumber(editor, lineNumber)) {\n\t\t\tif (this.isValidColumn(editor, lineNumber, column)) {\n\t\t\t\treturn localize('gotoLineColumnLabel', \"Go to line {0} and character {1}.\", lineNumber, column);\n\t\t\t}\n\n\t\t\treturn localize('gotoLineLabel', \"Go to line {0}.\", lineNumber);\n\t\t}\n\n\t\t// Location invalid: show generic label\n\t\tconst position = editor.getPosition() || { lineNumber: 1, column: 1 };\n\t\tconst lineCount = this.lineCount(editor);\n\t\tif (lineCount > 1) {\n\t\t\treturn localize('gotoLineLabelEmptyWithLimit', \"Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.\", position.lineNumber, position.column, lineCount);\n\t\t}\n\n\t\treturn localize('gotoLineLabelEmpty', \"Current Line: {0}, Character: {1}. Type a line number to navigate to.\", position.lineNumber, position.column);\n\t}\n\n\tprivate isValidLineNumber(editor: IEditor, lineNumber: number | undefined): boolean {\n\t\tif (!lineNumber || typeof lineNumber !== 'number') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn lineNumber > 0 && lineNumber <= this.lineCount(editor);\n\t}\n\n\tprivate isValidColumn(editor: IEditor, lineNumber: number, column: number | undefined): boolean {\n\t\tif (!column || typeof column !== 'number') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.getModel(editor);\n\t\tif (!model) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst positionCandidate = { lineNumber, column };\n\n\t\treturn model.validatePosition(positionCandidate).equals(positionCandidate);\n\t}\n\n\tprivate lineCount(editor: IEditor): number {\n\t\treturn this.getModel(editor)?.getLineCount() ?? 0;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
