{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/quickAccess/browser/gotoLineQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type {\n\tIQuickPick,\n\tIQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { getCodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorOption,\n\tRenderLineNumbersType,\n} from \"../../../common/config/editorOptions.js\";\nimport type { IPosition } from \"../../../common/core/position.js\";\nimport type { IRange } from \"../../../common/core/range.js\";\nimport { type IEditor, ScrollType } from \"../../../common/editorCommon.js\";\nimport {\n\tAbstractEditorNavigationQuickAccessProvider,\n\ttype IQuickAccessTextEditorContext,\n} from \"./editorNavigationQuickAccess.js\";\n\ninterface IGotoLineQuickPickItem extends IQuickPickItem, Partial<IPosition> {}\n\nexport abstract class AbstractGotoLineQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\n\tstatic PREFIX = \":\";\n\n\tconstructor() {\n\t\tsuper({ canAcceptInBackground: true });\n\t}\n\n\tprotected provideWithoutTextEditor(\n\t\tpicker: IQuickPick<IGotoLineQuickPickItem, { useSeparators: true }>,\n\t): IDisposable {\n\t\tconst label = localize(\n\t\t\t\"cannotRunGotoLine\",\n\t\t\t\"Open a text editor first to go to a line.\",\n\t\t);\n\n\t\tpicker.items = [{ label }];\n\t\tpicker.ariaLabel = label;\n\n\t\treturn Disposable.None;\n\t}\n\n\tprotected provideWithTextEditor(\n\t\tcontext: IQuickAccessTextEditorContext,\n\t\tpicker: IQuickPick<IGotoLineQuickPickItem, { useSeparators: true }>,\n\t\ttoken: CancellationToken,\n\t): IDisposable {\n\t\tconst editor = context.editor;\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Goto line once picked\n\t\tdisposables.add(\n\t\t\tpicker.onDidAccept((event) => {\n\t\t\t\tconst [item] = picker.selectedItems;\n\t\t\t\tif (item) {\n\t\t\t\t\tif (!this.isValidLineNumber(editor, item.lineNumber)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.gotoLocation(context, {\n\t\t\t\t\t\trange: this.toRange(item.lineNumber, item.column),\n\t\t\t\t\t\tkeyMods: picker.keyMods,\n\t\t\t\t\t\tpreserveFocus: event.inBackground,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!event.inBackground) {\n\t\t\t\t\t\tpicker.hide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// React to picker changes\n\t\tconst updatePickerAndEditor = () => {\n\t\t\tconst position = this.parsePosition(\n\t\t\t\teditor,\n\t\t\t\tpicker.value\n\t\t\t\t\t.trim()\n\t\t\t\t\t.substr(AbstractGotoLineQuickAccessProvider.PREFIX.length),\n\t\t\t);\n\t\t\tconst label = this.getPickLabel(\n\t\t\t\teditor,\n\t\t\t\tposition.lineNumber,\n\t\t\t\tposition.column,\n\t\t\t);\n\n\t\t\t// Picker\n\t\t\tpicker.items = [\n\t\t\t\t{\n\t\t\t\t\tlineNumber: position.lineNumber,\n\t\t\t\t\tcolumn: position.column,\n\t\t\t\t\tlabel,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\t// ARIA Label\n\t\t\tpicker.ariaLabel = label;\n\n\t\t\t// Clear decorations for invalid range\n\t\t\tif (!this.isValidLineNumber(editor, position.lineNumber)) {\n\t\t\t\tthis.clearDecorations(editor);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Reveal\n\t\t\tconst range = this.toRange(position.lineNumber, position.column);\n\t\t\teditor.revealRangeInCenter(range, ScrollType.Smooth);\n\n\t\t\t// Decorate\n\t\t\tthis.addDecorations(editor, range);\n\t\t};\n\t\tupdatePickerAndEditor();\n\t\tdisposables.add(picker.onDidChangeValue(() => updatePickerAndEditor()));\n\n\t\t// Adjust line number visibility as needed\n\t\tconst codeEditor = getCodeEditor(editor);\n\t\tif (codeEditor) {\n\t\t\tconst options = codeEditor.getOptions();\n\t\t\tconst lineNumbers = options.get(EditorOption.lineNumbers);\n\t\t\tif (lineNumbers.renderType === RenderLineNumbersType.Relative) {\n\t\t\t\tcodeEditor.updateOptions({ lineNumbers: \"on\" });\n\n\t\t\t\tdisposables.add(\n\t\t\t\t\ttoDisposable(() =>\n\t\t\t\t\t\tcodeEditor.updateOptions({ lineNumbers: \"relative\" }),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate toRange(lineNumber = 1, column = 1): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: lineNumber,\n\t\t\tstartColumn: column,\n\t\t\tendLineNumber: lineNumber,\n\t\t\tendColumn: column,\n\t\t};\n\t}\n\n\tprivate parsePosition(editor: IEditor, value: string): IPosition {\n\t\t// Support line-col formats of `line,col`, `line:col`, `line#col`\n\t\tconst numbers = value\n\t\t\t.split(/,|:|#/)\n\t\t\t.map((part) => Number.parseInt(part, 10))\n\t\t\t.filter((part) => !isNaN(part));\n\t\tconst endLine = this.lineCount(editor) + 1;\n\n\t\treturn {\n\t\t\tlineNumber: numbers[0] > 0 ? numbers[0] : endLine + numbers[0],\n\t\t\tcolumn: numbers[1],\n\t\t};\n\t}\n\n\tprivate getPickLabel(\n\t\teditor: IEditor,\n\t\tlineNumber: number,\n\t\tcolumn: number | undefined,\n\t): string {\n\t\t// Location valid: indicate this as picker label\n\t\tif (this.isValidLineNumber(editor, lineNumber)) {\n\t\t\tif (this.isValidColumn(editor, lineNumber, column)) {\n\t\t\t\treturn localize(\n\t\t\t\t\t\"gotoLineColumnLabel\",\n\t\t\t\t\t\"Go to line {0} and character {1}.\",\n\t\t\t\t\tlineNumber,\n\t\t\t\t\tcolumn,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn localize(\"gotoLineLabel\", \"Go to line {0}.\", lineNumber);\n\t\t}\n\n\t\t// Location invalid: show generic label\n\t\tconst position = editor.getPosition() || { lineNumber: 1, column: 1 };\n\t\tconst lineCount = this.lineCount(editor);\n\t\tif (lineCount > 1) {\n\t\t\treturn localize(\n\t\t\t\t\"gotoLineLabelEmptyWithLimit\",\n\t\t\t\t\"Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.\",\n\t\t\t\tposition.lineNumber,\n\t\t\t\tposition.column,\n\t\t\t\tlineCount,\n\t\t\t);\n\t\t}\n\n\t\treturn localize(\n\t\t\t\"gotoLineLabelEmpty\",\n\t\t\t\"Current Line: {0}, Character: {1}. Type a line number to navigate to.\",\n\t\t\tposition.lineNumber,\n\t\t\tposition.column,\n\t\t);\n\t}\n\n\tprivate isValidLineNumber(\n\t\teditor: IEditor,\n\t\tlineNumber: number | undefined,\n\t): boolean {\n\t\tif (!lineNumber || typeof lineNumber !== \"number\") {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn lineNumber > 0 && lineNumber <= this.lineCount(editor);\n\t}\n\n\tprivate isValidColumn(\n\t\teditor: IEditor,\n\t\tlineNumber: number,\n\t\tcolumn: number | undefined,\n\t): boolean {\n\t\tif (!column || typeof column !== \"number\") {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.getModel(editor);\n\t\tif (!model) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst positionCandidate = { lineNumber, column };\n\n\t\treturn model\n\t\t\t.validatePosition(positionCandidate)\n\t\t\t.equals(positionCandidate);\n\t}\n\n\tprivate lineCount(editor: IEditor): number {\n\t\treturn this.getModel(editor)?.getLineCount() ?? 0;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
