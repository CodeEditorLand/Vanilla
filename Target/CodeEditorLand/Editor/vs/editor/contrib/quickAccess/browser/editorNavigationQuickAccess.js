import{status as d}from"../../../../base/browser/ui/aria/aria.js";import{createSingleCallFunction as l}from"../../../../base/common/functional.js";import{DisposableStore as s,MutableDisposable as u,toDisposable as g}from"../../../../base/common/lifecycle.js";import{TextEditorSelectionSource as p}from"../../../../platform/editor/common/editor.js";import{themeColorFromId as I}from"../../../../platform/theme/common/themeService.js";import{getCodeEditor as h,isDiffEditor as v}from"../../../browser/editorBrowser.js";import{overviewRulerRangeHighlight as m}from"../../../common/core/editorColorRegistry.js";import{ScrollType as f}from"../../../common/editorCommon.js";import{OverviewRulerLane as D}from"../../../common/model.js";class A{constructor(e){this.options=e}provide(e,t,r){const i=new s;e.canAcceptInBackground=!!this.options?.canAcceptInBackground,e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1;const o=i.add(new u);return o.value=this.doProvide(e,t,r),i.add(this.onDidActiveTextEditorControlChange(()=>{o.value=void 0,o.value=this.doProvide(e,t)})),i}doProvide(e,t,r){const i=new s,o=this.activeTextEditorControl;if(o&&this.canProvideWithTextEditor(o)){const n={editor:o},c=h(o);if(c){let a=o.saveViewState()??void 0;i.add(c.onDidChangeCursorPosition(()=>{a=o.saveViewState()??void 0})),n.restoreViewState=()=>{a&&o===this.activeTextEditorControl&&o.restoreViewState(a)},i.add(l(t.onCancellationRequested)(()=>n.restoreViewState?.()))}i.add(g(()=>this.clearDecorations(o))),i.add(this.provideWithTextEditor(n,e,t,r))}else i.add(this.provideWithoutTextEditor(e,t));return i}canProvideWithTextEditor(e){return!0}gotoLocation({editor:e},t){e.setSelection(t.range,p.JUMP),e.revealRangeInCenter(t.range,f.Smooth),t.preserveFocus||e.focus();const r=e.getModel();r&&"getLineContent"in r&&d(`${r.getLineContent(t.range.startLineNumber)}`)}getModel(e){return v(e)?e.getModel()?.modified:e.getModel()}rangeHighlightDecorationId=void 0;addDecorations(e,t){e.changeDecorations(r=>{const i=[];this.rangeHighlightDecorationId&&(i.push(this.rangeHighlightDecorationId.overviewRulerDecorationId),i.push(this.rangeHighlightDecorationId.rangeHighlightId),this.rangeHighlightDecorationId=void 0);const o=[{range:t,options:{description:"quick-access-range-highlight",className:"rangeHighlight",isWholeLine:!0}},{range:t,options:{description:"quick-access-range-highlight-overview",overviewRuler:{color:I(m),position:D.Full}}}],[n,c]=r.deltaDecorations(i,o);this.rangeHighlightDecorationId={rangeHighlightId:n,overviewRulerDecorationId:c}})}clearDecorations(e){const t=this.rangeHighlightDecorationId;t&&(e.changeDecorations(r=>{r.deltaDecorations([t.overviewRulerDecorationId,t.rangeHighlightId],[])}),this.rangeHighlightDecorationId=void 0)}}export{A as AbstractEditorNavigationQuickAccessProvider};
