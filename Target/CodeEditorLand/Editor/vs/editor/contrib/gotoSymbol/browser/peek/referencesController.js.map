{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/gotoSymbol/browser/peek/referencesController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { KeyChord, KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { IEditorContribution } from '../../../../common/editorCommon.js';\nimport { Location } from '../../../../common/languages.js';\nimport { getOuterEditor, PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { TextEditorSelectionSource } from '../../../../../platform/editor/common/editor.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse, WorkbenchTreeElementCanExpand } from '../../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../platform/storage/common/storage.js';\nimport { OneReference, ReferencesModel } from '../referencesModel.js';\nimport { LayoutData, ReferenceWidget } from './referencesWidget.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { InputFocusedContext } from '../../../../../platform/contextkey/common/contextkeys.js';\n\nexport const ctxReferenceSearchVisible = new RawContextKey<boolean>('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\n\nexport abstract class ReferencesController implements IEditorContribution {\n\n\tstatic readonly ID = 'editor.contrib.referencesController';\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate _widget?: ReferenceWidget;\n\tprivate _model?: ReferencesModel;\n\tprivate _peekMode?: boolean;\n\tprivate _requestIdPool = 0;\n\tprivate _ignoreModelChangeEvent = false;\n\n\tprivate readonly _referenceSearchVisible: IContextKey<boolean>;\n\n\tstatic get(editor: ICodeEditor): ReferencesController | null {\n\t\treturn editor.getContribution<ReferencesController>(ReferencesController.ID);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _defaultTreeKeyboardSupport: boolean,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\n\t\tthis._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n\t}\n\n\tdispose(): void {\n\t\tthis._referenceSearchVisible.reset();\n\t\tthis._disposables.dispose();\n\t\tthis._widget?.dispose();\n\t\tthis._model?.dispose();\n\t\tthis._widget = undefined;\n\t\tthis._model = undefined;\n\t}\n\n\ttoggleWidget(range: Range, modelPromise: CancelablePromise<ReferencesModel>, peekMode: boolean): void {\n\n\t\t// close current widget and return early is position didn't change\n\t\tlet widgetPosition: Position | undefined;\n\t\tif (this._widget) {\n\t\t\twidgetPosition = this._widget.position;\n\t\t}\n\t\tthis.closeWidget();\n\t\tif (!!widgetPosition && range.containsPosition(widgetPosition)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._peekMode = peekMode;\n\t\tthis._referenceSearchVisible.set(true);\n\n\t\t// close the widget on model/mode changes\n\t\tthis._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\n\t\tthis._disposables.add(this._editor.onDidChangeModel(() => {\n\t\t\tif (!this._ignoreModelChangeEvent) {\n\t\t\t\tthis.closeWidget();\n\t\t\t}\n\t\t}));\n\t\tconst storageKey = 'peekViewLayout';\n\t\tconst data = LayoutData.fromJSON(this._storageService.get(storageKey, StorageScope.PROFILE, '{}'));\n\t\tthis._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n\t\tthis._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n\t\tthis._widget.show(range);\n\n\t\tthis._disposables.add(this._widget.onDidClose(() => {\n\t\t\tmodelPromise.cancel();\n\t\t\tif (this._widget) {\n\t\t\t\tthis._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\t\t\tif (!this._widget.isClosing) {\n\t\t\t\t\t// to prevent calling this too many times, check whether it was already closing.\n\t\t\t\t\tthis.closeWidget();\n\t\t\t\t}\n\t\t\t\tthis._widget = undefined;\n\t\t\t} else {\n\t\t\t\tthis.closeWidget();\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposables.add(this._widget.onDidSelectReference(event => {\n\t\t\tconst { element, kind } = event;\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (kind) {\n\t\t\t\tcase 'open':\n\t\t\t\t\tif (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n\t\t\t\t\t\t// when stable peek is configured we don't close\n\t\t\t\t\t\t// the peek window on selecting the editor\n\t\t\t\t\t\tthis.openReference(element, false, false);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'side':\n\t\t\t\t\tthis.openReference(element, true, false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'goto':\n\t\t\t\t\tif (peekMode) {\n\t\t\t\t\t\tthis._gotoReference(element, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.openReference(element, false, true);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}));\n\n\t\tconst requestId = ++this._requestIdPool;\n\n\t\tmodelPromise.then(model => {\n\n\t\t\t// still current request? widget still open?\n\t\t\tif (requestId !== this._requestIdPool || !this._widget) {\n\t\t\t\tmodel.dispose();\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tthis._model?.dispose();\n\t\t\tthis._model = model;\n\n\t\t\t// show widget\n\t\t\treturn this._widget.setModel(this._model).then(() => {\n\t\t\t\tif (this._widget && this._model && this._editor.hasModel()) { // might have been closed\n\n\t\t\t\t\t// set title\n\t\t\t\t\tif (!this._model.isEmpty) {\n\t\t\t\t\t\tthis._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._widget.setMetaTitle('');\n\t\t\t\t\t}\n\n\t\t\t\t\t// set 'best' selection\n\t\t\t\t\tconst uri = this._editor.getModel().uri;\n\t\t\t\t\tconst pos = new Position(range.startLineNumber, range.startColumn);\n\t\t\t\t\tconst selection = this._model.nearestReference(uri, pos);\n\t\t\t\t\tif (selection) {\n\t\t\t\t\t\treturn this._widget.setSelection(selection).then(() => {\n\t\t\t\t\t\t\tif (this._widget && this._editor.getOption(EditorOption.peekWidgetDefaultFocus) === 'editor') {\n\t\t\t\t\t\t\t\tthis._widget.focusOnPreviewEditor();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t}, error => {\n\t\t\tthis._notificationService.error(error);\n\t\t});\n\t}\n\n\tchangeFocusBetweenPreviewAndReferences() {\n\t\tif (!this._widget) {\n\t\t\t// can be called while still resolving...\n\t\t\treturn;\n\t\t}\n\t\tif (this._widget.isPreviewEditorFocused()) {\n\t\t\tthis._widget.focusOnReferenceTree();\n\t\t} else {\n\t\t\tthis._widget.focusOnPreviewEditor();\n\t\t}\n\t}\n\n\tasync goToNextOrPreviousReference(fwd: boolean) {\n\t\tif (!this._editor.hasModel() || !this._model || !this._widget) {\n\t\t\t// can be called while still resolving...\n\t\t\treturn;\n\t\t}\n\t\tconst currentPosition = this._widget.position;\n\t\tif (!currentPosition) {\n\t\t\treturn;\n\t\t}\n\t\tconst source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n\t\tif (!source) {\n\t\t\treturn;\n\t\t}\n\t\tconst target = this._model.nextOrPreviousReference(source, fwd);\n\t\tconst editorFocus = this._editor.hasTextFocus();\n\t\tconst previewEditorFocus = this._widget.isPreviewEditorFocused();\n\t\tawait this._widget.setSelection(target);\n\t\tawait this._gotoReference(target, false);\n\t\tif (editorFocus) {\n\t\t\tthis._editor.focus();\n\t\t} else if (this._widget && previewEditorFocus) {\n\t\t\tthis._widget.focusOnPreviewEditor();\n\t\t}\n\t}\n\n\tasync revealReference(reference: OneReference): Promise<void> {\n\t\tif (!this._editor.hasModel() || !this._model || !this._widget) {\n\t\t\t// can be called while still resolving...\n\t\t\treturn;\n\t\t}\n\n\t\tawait this._widget.revealReference(reference);\n\t}\n\n\tcloseWidget(focusEditor = true): void {\n\t\tthis._widget?.dispose();\n\t\tthis._model?.dispose();\n\t\tthis._referenceSearchVisible.reset();\n\t\tthis._disposables.clear();\n\t\tthis._widget = undefined;\n\t\tthis._model = undefined;\n\t\tif (focusEditor) {\n\t\t\tthis._editor.focus();\n\t\t}\n\t\tthis._requestIdPool += 1; // Cancel pending requests\n\t}\n\n\tprivate _gotoReference(ref: Location, pinned: boolean): Promise<any> {\n\t\tthis._widget?.hide();\n\n\t\tthis._ignoreModelChangeEvent = true;\n\t\tconst range = Range.lift(ref.range).collapseToStart();\n\n\t\treturn this._editorService.openCodeEditor({\n\t\t\tresource: ref.uri,\n\t\t\toptions: { selection: range, selectionSource: TextEditorSelectionSource.JUMP, pinned }\n\t\t}, this._editor).then(openedEditor => {\n\t\t\tthis._ignoreModelChangeEvent = false;\n\n\t\t\tif (!openedEditor || !this._widget) {\n\t\t\t\t// something went wrong...\n\t\t\t\tthis.closeWidget();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._editor === openedEditor) {\n\t\t\t\t//\n\t\t\t\tthis._widget.show(range);\n\t\t\t\tthis._widget.focusOnReferenceTree();\n\n\t\t\t} else {\n\t\t\t\t// we opened a different editor instance which means a different controller instance.\n\t\t\t\t// therefore we stop with this controller and continue with the other\n\t\t\t\tconst other = ReferencesController.get(openedEditor);\n\t\t\t\tconst model = this._model!.clone();\n\n\t\t\t\tthis.closeWidget();\n\t\t\t\topenedEditor.focus();\n\n\t\t\t\tother?.toggleWidget(\n\t\t\t\t\trange,\n\t\t\t\t\tcreateCancelablePromise(_ => Promise.resolve(model)),\n\t\t\t\t\tthis._peekMode ?? false\n\t\t\t\t);\n\t\t\t}\n\n\t\t}, (err) => {\n\t\t\tthis._ignoreModelChangeEvent = false;\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t}\n\n\topenReference(ref: Location, sideBySide: boolean, pinned: boolean): void {\n\t\t// clear stage\n\t\tif (!sideBySide) {\n\t\t\tthis.closeWidget();\n\t\t}\n\n\t\tconst { uri, range } = ref;\n\t\tthis._editorService.openCodeEditor({\n\t\t\tresource: uri,\n\t\t\toptions: { selection: range, selectionSource: TextEditorSelectionSource.JUMP, pinned }\n\t\t}, this._editor, sideBySide);\n\t}\n}\n\nfunction withController(accessor: ServicesAccessor, fn: (controller: ReferencesController) => void): void {\n\tconst outerEditor = getOuterEditor(accessor);\n\tif (!outerEditor) {\n\t\treturn;\n\t}\n\tconst controller = ReferencesController.get(outerEditor);\n\tif (controller) {\n\t\tfn(controller);\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'togglePeekWidgetFocus',\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.F2),\n\twhen: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.changeFocusBetweenPreviewAndReferences();\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'goToNextReference',\n\tweight: KeybindingWeight.EditorContrib - 10,\n\tprimary: KeyCode.F4,\n\tsecondary: [KeyCode.F12],\n\twhen: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.goToNextOrPreviousReference(true);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'goToPreviousReference',\n\tweight: KeybindingWeight.EditorContrib - 10,\n\tprimary: KeyMod.Shift | KeyCode.F4,\n\tsecondary: [KeyMod.Shift | KeyCode.F12],\n\twhen: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.goToNextOrPreviousReference(false);\n\t\t});\n\t}\n});\n\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\n\n// close\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand(\n\t'closeReferenceSearch',\n\taccessor => withController(accessor, controller => controller.closeWidget())\n);\nKeybindingsRegistry.registerKeybindingRule({\n\tid: 'closeReferenceSearch',\n\tweight: KeybindingWeight.EditorContrib - 101,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n\tid: 'closeReferenceSearch',\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ContextKeyExpr.and(\n\t\tctxReferenceSearchVisible,\n\t\tContextKeyExpr.not('config.editor.stablePeek'),\n\t\tContextKeyExpr.or(\n\t\t\tEditorContextKeys.editorTextFocus,\n\t\t\tInputFocusedContext.negate()\n\t\t)\n\t)\n});\n\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'revealReference',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyCode.Enter,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow]\n\t},\n\twhen: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n\thandler(accessor: ServicesAccessor) {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst focus = <any[]>listService.lastFocusedList?.getFocus();\n\t\tif (Array.isArray(focus) && focus[0] instanceof OneReference) {\n\t\t\twithController(accessor, controller => controller.revealReference(focus[0]));\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'openReferenceToSide',\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t},\n\twhen: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n\thandler(accessor: ServicesAccessor) {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst focus = <any[]>listService.lastFocusedList?.getFocus();\n\t\tif (Array.isArray(focus) && focus[0] instanceof OneReference) {\n\t\t\twithController(accessor, controller => controller.openReference(focus[0], true, true));\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand('openReference', (accessor) => {\n\tconst listService = accessor.get(IListService);\n\tconst focus = <any[]>listService.lastFocusedList?.getFocus();\n\tif (Array.isArray(focus) && focus[0] instanceof OneReference) {\n\t\twithController(accessor, controller => controller.openReference(focus[0], false, true));\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
