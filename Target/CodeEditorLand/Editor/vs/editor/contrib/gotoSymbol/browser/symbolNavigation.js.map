{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/gotoSymbol/browser/symbolNavigation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { combinedDisposable, DisposableStore, dispose, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { OneReference, ReferencesModel } from './referencesModel.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { TextEditorSelectionRevealType } from '../../../../platform/editor/common/editor.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\n\nexport const ctxHasSymbols = new RawContextKey('hasSymbols', false, localize('hasSymbols', \"Whether there are symbol locations that can be navigated via keyboard-only.\"));\n\nexport const ISymbolNavigationService = createDecorator<ISymbolNavigationService>('ISymbolNavigationService');\n\nexport interface ISymbolNavigationService {\n\treadonly _serviceBrand: undefined;\n\treset(): void;\n\tput(anchor: OneReference): void;\n\trevealNext(source: ICodeEditor): Promise<any>;\n}\n\nclass SymbolNavigationService implements ISymbolNavigationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _ctxHasSymbols: IContextKey<boolean>;\n\n\tprivate _currentModel?: ReferencesModel = undefined;\n\tprivate _currentIdx: number = -1;\n\tprivate _currentState?: IDisposable;\n\tprivate _currentMessage?: IDisposable;\n\tprivate _ignoreEditorChange: boolean = false;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tthis._ctxHasSymbols = ctxHasSymbols.bindTo(contextKeyService);\n\t}\n\n\treset(): void {\n\t\tthis._ctxHasSymbols.reset();\n\t\tthis._currentState?.dispose();\n\t\tthis._currentMessage?.dispose();\n\t\tthis._currentModel = undefined;\n\t\tthis._currentIdx = -1;\n\t}\n\n\tput(anchor: OneReference): void {\n\t\tconst refModel = anchor.parent.parent;\n\n\t\tif (refModel.references.length <= 1) {\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._currentModel = refModel;\n\t\tthis._currentIdx = refModel.references.indexOf(anchor);\n\t\tthis._ctxHasSymbols.set(true);\n\t\tthis._showMessage();\n\n\t\tconst editorState = new EditorState(this._editorService);\n\t\tconst listener = editorState.onDidChange(_ => {\n\n\t\t\tif (this._ignoreEditorChange) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst editor = this._editorService.getActiveCodeEditor();\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst model = editor.getModel();\n\t\t\tconst position = editor.getPosition();\n\t\t\tif (!model || !position) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet seenUri: boolean = false;\n\t\t\tlet seenPosition: boolean = false;\n\t\t\tfor (const reference of refModel.references) {\n\t\t\t\tif (isEqual(reference.uri, model.uri)) {\n\t\t\t\t\tseenUri = true;\n\t\t\t\t\tseenPosition = seenPosition || Range.containsPosition(reference.range, position);\n\t\t\t\t} else if (seenUri) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!seenUri || !seenPosition) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t});\n\n\t\tthis._currentState = combinedDisposable(editorState, listener);\n\t}\n\n\trevealNext(source: ICodeEditor): Promise<any> {\n\t\tif (!this._currentModel) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// get next result and advance\n\t\tthis._currentIdx += 1;\n\t\tthis._currentIdx %= this._currentModel.references.length;\n\t\tconst reference = this._currentModel.references[this._currentIdx];\n\n\t\t// status\n\t\tthis._showMessage();\n\n\t\t// open editor, ignore events while that happens\n\t\tthis._ignoreEditorChange = true;\n\t\treturn this._editorService.openCodeEditor({\n\t\t\tresource: reference.uri,\n\t\t\toptions: {\n\t\t\t\tselection: Range.collapseToStart(reference.range),\n\t\t\t\tselectionRevealType: TextEditorSelectionRevealType.NearTopIfOutsideViewport\n\t\t\t}\n\t\t}, source).finally(() => {\n\t\t\tthis._ignoreEditorChange = false;\n\t\t});\n\n\t}\n\n\tprivate _showMessage(): void {\n\n\t\tthis._currentMessage?.dispose();\n\n\t\tconst kb = this._keybindingService.lookupKeybinding('editor.gotoNextSymbolFromResult');\n\t\tconst message = kb\n\t\t\t? localize('location.kb', \"Symbol {0} of {1}, {2} for next\", this._currentIdx + 1, this._currentModel!.references.length, kb.getLabel())\n\t\t\t: localize('location', \"Symbol {0} of {1}\", this._currentIdx + 1, this._currentModel!.references.length);\n\n\t\tthis._currentMessage = this._notificationService.status(message);\n\t}\n}\n\nregisterSingleton(ISymbolNavigationService, SymbolNavigationService, InstantiationType.Delayed);\n\nregisterEditorCommand(new class extends EditorCommand {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.gotoNextSymbolFromResult',\n\t\t\tprecondition: ctxHasSymbols,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.F12\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor): void | Promise<void> {\n\t\treturn accessor.get(ISymbolNavigationService).revealNext(editor);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'editor.gotoNextSymbolFromResult.cancel',\n\tweight: KeybindingWeight.EditorContrib,\n\twhen: ctxHasSymbols,\n\tprimary: KeyCode.Escape,\n\thandler(accessor) {\n\t\taccessor.get(ISymbolNavigationService).reset();\n\t}\n});\n\n//\n\nclass EditorState {\n\n\tprivate readonly _listener = new Map<ICodeEditor, IDisposable>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _onDidChange = new Emitter<{ editor: ICodeEditor }>();\n\treadonly onDidChange: Event<{ editor: ICodeEditor }> = this._onDidChange.event;\n\n\tconstructor(@ICodeEditorService editorService: ICodeEditorService) {\n\t\tthis._disposables.add(editorService.onCodeEditorRemove(this._onDidRemoveEditor, this));\n\t\tthis._disposables.add(editorService.onCodeEditorAdd(this._onDidAddEditor, this));\n\t\teditorService.listCodeEditors().forEach(this._onDidAddEditor, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._onDidChange.dispose();\n\t\tdispose(this._listener.values());\n\t}\n\n\tprivate _onDidAddEditor(editor: ICodeEditor): void {\n\t\tthis._listener.set(editor, combinedDisposable(\n\t\t\teditor.onDidChangeCursorPosition(_ => this._onDidChange.fire({ editor })),\n\t\t\teditor.onDidChangeModelContent(_ => this._onDidChange.fire({ editor })),\n\t\t));\n\t}\n\n\tprivate _onDidRemoveEditor(editor: ICodeEditor): void {\n\t\tthis._listener.get(editor)?.dispose();\n\t\tthis._listener.delete(editor);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
