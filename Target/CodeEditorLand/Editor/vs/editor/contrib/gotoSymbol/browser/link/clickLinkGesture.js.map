{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/gotoSymbol/browser/link/clickLinkGesture.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../../base/common/platform.js';\nimport { ICodeEditor, IEditorMouseEvent, IMouseTarget } from '../../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { ICursorSelectionChangedEvent } from '../../../../common/cursorEvents.js';\n\nfunction hasModifier(e: { ctrlKey: boolean; shiftKey: boolean; altKey: boolean; metaKey: boolean }, modifier: 'ctrlKey' | 'shiftKey' | 'altKey' | 'metaKey'): boolean {\n\treturn !!e[modifier];\n}\n\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nexport class ClickLinkMouseEvent {\n\n\tpublic readonly target: IMouseTarget;\n\tpublic readonly hasTriggerModifier: boolean;\n\tpublic readonly hasSideBySideModifier: boolean;\n\tpublic readonly isNoneOrSingleMouseDown: boolean;\n\tpublic readonly isLeftClick: boolean;\n\tpublic readonly isMiddleClick: boolean;\n\tpublic readonly isRightClick: boolean;\n\n\tconstructor(source: IEditorMouseEvent, opts: ClickLinkOptions) {\n\t\tthis.target = source.target;\n\t\tthis.isLeftClick = source.event.leftButton;\n\t\tthis.isMiddleClick = source.event.middleButton;\n\t\tthis.isRightClick = source.event.rightButton;\n\t\tthis.hasTriggerModifier = hasModifier(source.event, opts.triggerModifier);\n\t\tthis.hasSideBySideModifier = hasModifier(source.event, opts.triggerSideBySideModifier);\n\t\tthis.isNoneOrSingleMouseDown = (source.event.detail <= 1);\n\t}\n}\n\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nexport class ClickLinkKeyboardEvent {\n\n\tpublic readonly keyCodeIsTriggerKey: boolean;\n\tpublic readonly keyCodeIsSideBySideKey: boolean;\n\tpublic readonly hasTriggerModifier: boolean;\n\n\tconstructor(source: IKeyboardEvent, opts: ClickLinkOptions) {\n\t\tthis.keyCodeIsTriggerKey = (source.keyCode === opts.triggerKey);\n\t\tthis.keyCodeIsSideBySideKey = (source.keyCode === opts.triggerSideBySideKey);\n\t\tthis.hasTriggerModifier = hasModifier(source, opts.triggerModifier);\n\t}\n}\nexport type TriggerModifier = 'ctrlKey' | 'shiftKey' | 'altKey' | 'metaKey';\n\nexport class ClickLinkOptions {\n\n\tpublic readonly triggerKey: KeyCode;\n\tpublic readonly triggerModifier: TriggerModifier;\n\tpublic readonly triggerSideBySideKey: KeyCode;\n\tpublic readonly triggerSideBySideModifier: TriggerModifier;\n\n\tconstructor(\n\t\ttriggerKey: KeyCode,\n\t\ttriggerModifier: TriggerModifier,\n\t\ttriggerSideBySideKey: KeyCode,\n\t\ttriggerSideBySideModifier: TriggerModifier\n\t) {\n\t\tthis.triggerKey = triggerKey;\n\t\tthis.triggerModifier = triggerModifier;\n\t\tthis.triggerSideBySideKey = triggerSideBySideKey;\n\t\tthis.triggerSideBySideModifier = triggerSideBySideModifier;\n\t}\n\n\tpublic equals(other: ClickLinkOptions): boolean {\n\t\treturn (\n\t\t\tthis.triggerKey === other.triggerKey\n\t\t\t&& this.triggerModifier === other.triggerModifier\n\t\t\t&& this.triggerSideBySideKey === other.triggerSideBySideKey\n\t\t\t&& this.triggerSideBySideModifier === other.triggerSideBySideModifier\n\t\t);\n\t}\n}\n\nfunction createOptions(multiCursorModifier: 'altKey' | 'ctrlKey' | 'metaKey'): ClickLinkOptions {\n\tif (multiCursorModifier === 'altKey') {\n\t\tif (platform.isMacintosh) {\n\t\t\treturn new ClickLinkOptions(KeyCode.Meta, 'metaKey', KeyCode.Alt, 'altKey');\n\t\t}\n\t\treturn new ClickLinkOptions(KeyCode.Ctrl, 'ctrlKey', KeyCode.Alt, 'altKey');\n\t}\n\n\tif (platform.isMacintosh) {\n\t\treturn new ClickLinkOptions(KeyCode.Alt, 'altKey', KeyCode.Meta, 'metaKey');\n\t}\n\treturn new ClickLinkOptions(KeyCode.Alt, 'altKey', KeyCode.Ctrl, 'ctrlKey');\n}\n\nexport interface IClickLinkGestureOptions {\n\t/**\n\t * Return 0 if the mouse event should not be considered.\n\t */\n\textractLineNumberFromMouseEvent?: (e: ClickLinkMouseEvent) => number;\n}\n\nexport class ClickLinkGesture extends Disposable {\n\n\tprivate readonly _onMouseMoveOrRelevantKeyDown: Emitter<[ClickLinkMouseEvent, ClickLinkKeyboardEvent | null]> = this._register(new Emitter<[ClickLinkMouseEvent, ClickLinkKeyboardEvent | null]>());\n\tpublic readonly onMouseMoveOrRelevantKeyDown: Event<[ClickLinkMouseEvent, ClickLinkKeyboardEvent | null]> = this._onMouseMoveOrRelevantKeyDown.event;\n\n\tprivate readonly _onExecute: Emitter<ClickLinkMouseEvent> = this._register(new Emitter<ClickLinkMouseEvent>());\n\tpublic readonly onExecute: Event<ClickLinkMouseEvent> = this._onExecute.event;\n\n\tprivate readonly _onCancel: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onCancel: Event<void> = this._onCancel.event;\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate readonly _extractLineNumberFromMouseEvent: (e: ClickLinkMouseEvent) => number;\n\tprivate _opts: ClickLinkOptions;\n\n\tprivate _lastMouseMoveEvent: ClickLinkMouseEvent | null;\n\tprivate _hasTriggerKeyOnMouseDown: boolean;\n\tprivate _lineNumberOnMouseDown: number;\n\n\tconstructor(editor: ICodeEditor, opts?: IClickLinkGestureOptions) {\n\t\tsuper();\n\n\t\tthis._editor = editor;\n\t\tthis._extractLineNumberFromMouseEvent = opts?.extractLineNumberFromMouseEvent ?? ((e) => e.target.position ? e.target.position.lineNumber : 0);\n\t\tthis._opts = createOptions(this._editor.getOption(EditorOption.multiCursorModifier));\n\n\t\tthis._lastMouseMoveEvent = null;\n\t\tthis._hasTriggerKeyOnMouseDown = false;\n\t\tthis._lineNumberOnMouseDown = 0;\n\n\t\tthis._register(this._editor.onDidChangeConfiguration((e) => {\n\t\t\tif (e.hasChanged(EditorOption.multiCursorModifier)) {\n\t\t\t\tconst newOpts = createOptions(this._editor.getOption(EditorOption.multiCursorModifier));\n\t\t\t\tif (this._opts.equals(newOpts)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._opts = newOpts;\n\t\t\t\tthis._lastMouseMoveEvent = null;\n\t\t\t\tthis._hasTriggerKeyOnMouseDown = false;\n\t\t\t\tthis._lineNumberOnMouseDown = 0;\n\t\t\t\tthis._onCancel.fire();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._editor.onMouseMove((e: IEditorMouseEvent) => this._onEditorMouseMove(new ClickLinkMouseEvent(e, this._opts))));\n\t\tthis._register(this._editor.onMouseDown((e: IEditorMouseEvent) => this._onEditorMouseDown(new ClickLinkMouseEvent(e, this._opts))));\n\t\tthis._register(this._editor.onMouseUp((e: IEditorMouseEvent) => this._onEditorMouseUp(new ClickLinkMouseEvent(e, this._opts))));\n\t\tthis._register(this._editor.onKeyDown((e: IKeyboardEvent) => this._onEditorKeyDown(new ClickLinkKeyboardEvent(e, this._opts))));\n\t\tthis._register(this._editor.onKeyUp((e: IKeyboardEvent) => this._onEditorKeyUp(new ClickLinkKeyboardEvent(e, this._opts))));\n\t\tthis._register(this._editor.onMouseDrag(() => this._resetHandler()));\n\n\t\tthis._register(this._editor.onDidChangeCursorSelection((e) => this._onDidChangeCursorSelection(e)));\n\t\tthis._register(this._editor.onDidChangeModel((e) => this._resetHandler()));\n\t\tthis._register(this._editor.onDidChangeModelContent(() => this._resetHandler()));\n\t\tthis._register(this._editor.onDidScrollChange((e) => {\n\t\t\tif (e.scrollTopChanged || e.scrollLeftChanged) {\n\t\t\t\tthis._resetHandler();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onDidChangeCursorSelection(e: ICursorSelectionChangedEvent): void {\n\t\tif (e.selection && e.selection.startColumn !== e.selection.endColumn) {\n\t\t\tthis._resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/microsoft/vscode/issues/7827)\n\t\t}\n\t}\n\n\tprivate _onEditorMouseMove(mouseEvent: ClickLinkMouseEvent): void {\n\t\tthis._lastMouseMoveEvent = mouseEvent;\n\n\t\tthis._onMouseMoveOrRelevantKeyDown.fire([mouseEvent, null]);\n\t}\n\n\tprivate _onEditorMouseDown(mouseEvent: ClickLinkMouseEvent): void {\n\t\t// We need to record if we had the trigger key on mouse down because someone might select something in the editor\n\t\t// holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then\n\t\t// release the mouse button without wanting to do the navigation.\n\t\t// With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.\n\t\tthis._hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;\n\t\tthis._lineNumberOnMouseDown = this._extractLineNumberFromMouseEvent(mouseEvent);\n\t}\n\n\tprivate _onEditorMouseUp(mouseEvent: ClickLinkMouseEvent): void {\n\t\tconst currentLineNumber = this._extractLineNumberFromMouseEvent(mouseEvent);\n\t\tif (this._hasTriggerKeyOnMouseDown && this._lineNumberOnMouseDown && this._lineNumberOnMouseDown === currentLineNumber) {\n\t\t\tthis._onExecute.fire(mouseEvent);\n\t\t}\n\t}\n\n\tprivate _onEditorKeyDown(e: ClickLinkKeyboardEvent): void {\n\t\tif (\n\t\t\tthis._lastMouseMoveEvent\n\t\t\t&& (\n\t\t\t\te.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)\n\t\t\t\t|| (e.keyCodeIsSideBySideKey && e.hasTriggerModifier) // User pressed Ctrl/Cmd+Alt (goto definition to the side)\n\t\t\t)\n\t\t) {\n\t\t\tthis._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent, e]);\n\t\t} else if (e.hasTriggerModifier) {\n\t\t\tthis._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration\n\t\t}\n\t}\n\n\tprivate _onEditorKeyUp(e: ClickLinkKeyboardEvent): void {\n\t\tif (e.keyCodeIsTriggerKey) {\n\t\t\tthis._onCancel.fire();\n\t\t}\n\t}\n\n\tprivate _resetHandler(): void {\n\t\tthis._lastMouseMoveEvent = null;\n\t\tthis._hasTriggerKeyOnMouseDown = false;\n\t\tthis._onCancel.fire();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
