{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/gotoSymbol/browser/link/goToDefinitionAtPosition.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport { CancelablePromise, createCancelablePromise } from '../../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport './goToDefinitionAtPosition.css';\nimport { CodeEditorStateFlag, EditorState } from '../../../editorState/browser/editorState.js';\nimport { ICodeEditor, MouseTargetType } from '../../../../browser/editorBrowser.js';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../../browser/editorExtensions.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { IRange, Range } from '../../../../common/core/range.js';\nimport { IEditorContribution, IEditorDecorationsCollection } from '../../../../common/editorCommon.js';\nimport { IModelDeltaDecoration, ITextModel } from '../../../../common/model.js';\nimport { LocationLink } from '../../../../common/languages.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { ITextModelService } from '../../../../common/services/resolverService.js';\nimport { ClickLinkGesture, ClickLinkKeyboardEvent, ClickLinkMouseEvent } from './clickLinkGesture.js';\nimport { PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { DefinitionAction } from '../goToCommands.js';\nimport { getDefinitionsAtPosition } from '../goToSymbol.js';\nimport { IWordAtPosition } from '../../../../common/core/wordHelper.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../../common/model/textModel.js';\n\nexport class GotoDefinitionAtPositionEditorContribution implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.gotodefinitionatposition';\n\tstatic readonly MAX_SOURCE_PREVIEW_LINES = 8;\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate readonly toUnhook = new DisposableStore();\n\tprivate readonly toUnhookForKeyboard = new DisposableStore();\n\tprivate readonly linkDecorations: IEditorDecorationsCollection;\n\tprivate currentWordAtPosition: IWordAtPosition | null = null;\n\tprivate previousPromise: CancelablePromise<LocationLink[] | null> | null = null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tthis.editor = editor;\n\t\tthis.linkDecorations = this.editor.createDecorationsCollection();\n\n\t\tconst linkGesture = new ClickLinkGesture(editor);\n\t\tthis.toUnhook.add(linkGesture);\n\n\t\tthis.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n\t\t\tthis.startFindDefinitionFromMouse(mouseEvent, keyboardEvent ?? undefined);\n\t\t}));\n\n\t\tthis.toUnhook.add(linkGesture.onExecute((mouseEvent: ClickLinkMouseEvent) => {\n\t\t\tif (this.isEnabled(mouseEvent)) {\n\t\t\t\tthis.gotoDefinition(mouseEvent.target.position!, mouseEvent.hasSideBySideModifier)\n\t\t\t\t\t.catch((error: Error) => {\n\t\t\t\t\t\tonUnexpectedError(error);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tthis.removeLinkDecorations();\n\t\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis.toUnhook.add(linkGesture.onCancel(() => {\n\t\t\tthis.removeLinkDecorations();\n\t\t\tthis.currentWordAtPosition = null;\n\t\t}));\n\t}\n\n\tstatic get(editor: ICodeEditor): GotoDefinitionAtPositionEditorContribution | null {\n\t\treturn editor.getContribution<GotoDefinitionAtPositionEditorContribution>(GotoDefinitionAtPositionEditorContribution.ID);\n\t}\n\n\tasync startFindDefinitionFromCursor(position: Position) {\n\t\t// For issue: https://github.com/microsoft/vscode/issues/46257\n\t\t// equivalent to mouse move with meta/ctrl key\n\n\t\t// First find the definition and add decorations\n\t\t// to the editor to be shown with the content hover widget\n\t\tawait this.startFindDefinition(position);\n\t\t// Add listeners for editor cursor move and key down events\n\t\t// Dismiss the \"extended\" editor decorations when the user hides\n\t\t// the hover widget. There is no event for the widget itself so these\n\t\t// serve as a best effort. After removing the link decorations, the hover\n\t\t// widget is clean and will only show declarations per next request.\n\t\tthis.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(() => {\n\t\t\tthis.currentWordAtPosition = null;\n\t\t\tthis.removeLinkDecorations();\n\t\t\tthis.toUnhookForKeyboard.clear();\n\t\t}));\n\t\tthis.toUnhookForKeyboard.add(this.editor.onKeyDown((e: IKeyboardEvent) => {\n\t\t\tif (e) {\n\t\t\t\tthis.currentWordAtPosition = null;\n\t\t\t\tthis.removeLinkDecorations();\n\t\t\t\tthis.toUnhookForKeyboard.clear();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate startFindDefinitionFromMouse(mouseEvent: ClickLinkMouseEvent, withKey?: ClickLinkKeyboardEvent): void {\n\n\t\t// check if we are active and on a content widget\n\t\tif (mouseEvent.target.type === MouseTargetType.CONTENT_WIDGET && this.linkDecorations.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\n\t\t\tthis.currentWordAtPosition = null;\n\t\t\tthis.removeLinkDecorations();\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = mouseEvent.target.position!;\n\n\t\tthis.startFindDefinition(position);\n\t}\n\n\tprivate async startFindDefinition(position: Position): Promise<void> {\n\n\t\t// Dispose listeners for updating decorations when using keyboard to show definition hover\n\t\tthis.toUnhookForKeyboard.clear();\n\n\t\t// Find word at mouse position\n\t\tconst word = position ? this.editor.getModel()?.getWordAtPosition(position) : null;\n\t\tif (!word) {\n\t\t\tthis.currentWordAtPosition = null;\n\t\t\tthis.removeLinkDecorations();\n\t\t\treturn;\n\t\t}\n\n\t\t// Return early if word at position is still the same\n\t\tif (this.currentWordAtPosition && this.currentWordAtPosition.startColumn === word.startColumn && this.currentWordAtPosition.endColumn === word.endColumn && this.currentWordAtPosition.word === word.word) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentWordAtPosition = word;\n\n\t\t// Find definition and decorate word if found\n\t\tconst state = new EditorState(this.editor, CodeEditorStateFlag.Position | CodeEditorStateFlag.Value | CodeEditorStateFlag.Selection | CodeEditorStateFlag.Scroll);\n\n\t\tif (this.previousPromise) {\n\t\t\tthis.previousPromise.cancel();\n\t\t\tthis.previousPromise = null;\n\t\t}\n\n\t\tthis.previousPromise = createCancelablePromise(token => this.findDefinition(position, token));\n\n\t\tlet results: LocationLink[] | null;\n\t\ttry {\n\t\t\tresults = await this.previousPromise;\n\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!results || !results.length || !state.validate(this.editor)) {\n\t\t\tthis.removeLinkDecorations();\n\t\t\treturn;\n\t\t}\n\n\t\tconst linkRange = results[0].originSelectionRange\n\t\t\t? Range.lift(results[0].originSelectionRange)\n\t\t\t: new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n\n\t\t// Multiple results\n\t\tif (results.length > 1) {\n\n\t\t\tlet combinedRange = linkRange;\n\t\t\tfor (const { originSelectionRange } of results) {\n\t\t\t\tif (originSelectionRange) {\n\t\t\t\t\tcombinedRange = Range.plusRange(combinedRange, originSelectionRange);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.addDecoration(\n\t\t\t\tcombinedRange,\n\t\t\t\tnew MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length))\n\t\t\t);\n\t\t} else {\n\t\t\t// Single result\n\t\t\tconst result = results[0];\n\n\t\t\tif (!result.uri) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.textModelResolverService.createModelReference(result.uri).then(ref => {\n\n\t\t\t\tif (!ref.object || !ref.object.textEditorModel) {\n\t\t\t\t\tref.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { object: { textEditorModel } } = ref;\n\t\t\t\tconst { startLineNumber } = result.range;\n\n\t\t\t\tif (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\n\t\t\t\t\t// invalid range\n\t\t\t\t\tref.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst previewValue = this.getPreviewValue(textEditorModel, startLineNumber, result);\n\t\t\t\tconst languageId = this.languageService.guessLanguageIdByFilepathOrFirstLine(textEditorModel.uri);\n\t\t\t\tthis.addDecoration(\n\t\t\t\t\tlinkRange,\n\t\t\t\t\tpreviewValue ? new MarkdownString().appendCodeblock(languageId ? languageId : '', previewValue) : undefined\n\t\t\t\t);\n\t\t\t\tref.dispose();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getPreviewValue(textEditorModel: ITextModel, startLineNumber: number, result: LocationLink) {\n\t\tlet rangeToUse = result.range;\n\t\tconst numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\n\t\tif (numberOfLinesInRange >= GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\n\t\t\trangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\n\t\t}\n\n\t\tconst previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\n\t\treturn previewValue;\n\t}\n\n\tprivate stripIndentationFromPreviewRange(textEditorModel: ITextModel, startLineNumber: number, previewRange: IRange) {\n\t\tconst startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n\t\tlet minIndent = startIndent;\n\n\t\tfor (let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\n\t\t\tconst endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n\t\t\tminIndent = Math.min(minIndent, endIndent);\n\t\t}\n\n\t\tconst previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\\\s{${minIndent - 1}}`, 'gm'), '').trim();\n\t\treturn previewValue;\n\t}\n\n\tprivate getPreviewRangeBasedOnIndentation(textEditorModel: ITextModel, startLineNumber: number) {\n\t\tconst startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n\t\tconst maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n\t\tlet endLineNumber = startLineNumber + 1;\n\n\t\tfor (; endLineNumber < maxLineNumber; endLineNumber++) {\n\t\t\tconst endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n\n\t\t\tif (startIndent === endIndent) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new Range(startLineNumber, 1, endLineNumber + 1, 1);\n\t}\n\n\tprivate addDecoration(range: Range, hoverMessage: MarkdownString | undefined): void {\n\n\t\tconst newDecorations: IModelDeltaDecoration = {\n\t\t\trange: range,\n\t\t\toptions: {\n\t\t\t\tdescription: 'goto-definition-link',\n\t\t\t\tinlineClassName: 'goto-definition-link',\n\t\t\t\thoverMessage\n\t\t\t}\n\t\t};\n\n\t\tthis.linkDecorations.set([newDecorations]);\n\t}\n\n\tprivate removeLinkDecorations(): void {\n\t\tthis.linkDecorations.clear();\n\t}\n\n\tprivate isEnabled(mouseEvent: ClickLinkMouseEvent, withKey?: ClickLinkKeyboardEvent): boolean {\n\t\treturn this.editor.hasModel()\n\t\t\t&& mouseEvent.isLeftClick\n\t\t\t&& mouseEvent.isNoneOrSingleMouseDown\n\t\t\t&& mouseEvent.target.type === MouseTargetType.CONTENT_TEXT\n\t\t\t&& !(mouseEvent.target.detail.injectedText?.options instanceof ModelDecorationInjectedTextOptions)\n\t\t\t&& (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false))\n\t\t\t&& this.languageFeaturesService.definitionProvider.has(this.editor.getModel());\n\t}\n\n\tprivate findDefinition(position: Position, token: CancellationToken): Promise<LocationLink[] | null> {\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn getDefinitionsAtPosition(this.languageFeaturesService.definitionProvider, model, position, false, token);\n\t}\n\n\tprivate gotoDefinition(position: Position, openToSide: boolean): Promise<any> {\n\t\tthis.editor.setPosition(position);\n\t\treturn this.editor.invokeWithinContext((accessor) => {\n\t\t\tconst canPeek = !openToSide && this.editor.getOption(EditorOption.definitionLinkOpensInPeek) && !this.isInPeekEditor(accessor);\n\t\t\tconst action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { title: { value: '', original: '' }, id: '', precondition: undefined });\n\t\t\treturn action.run(accessor);\n\t\t});\n\t}\n\n\tprivate isInPeekEditor(accessor: ServicesAccessor): boolean | undefined {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\treturn PeekContext.inPeekEditor.getValue(contextKeyService);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toUnhook.dispose();\n\t\tthis.toUnhookForKeyboard.dispose();\n\t}\n}\n\nregisterEditorContribution(GotoDefinitionAtPositionEditorContribution.ID, GotoDefinitionAtPositionEditorContribution, EditorContributionInstantiation.BeforeFirstInteraction);\n"],
  "mappings": "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",
  "names": []
}
