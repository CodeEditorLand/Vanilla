var E=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var p=(r,e,t,i)=>{for(var o=i>1?void 0:i?x(e,t):e,c=r.length-1,s;c>=0;c--)(s=r[c])&&(o=(i?s(e,t,o):s(o))||o);return i&&o&&E(e,t,o),o},n=(r,e)=>(t,i)=>e(t,i,r);import{Emitter as D}from"../../../../base/common/event.js";import{KeyCode as y}from"../../../../base/common/keyCodes.js";import{DisposableStore as M,combinedDisposable as b,dispose as R}from"../../../../base/common/lifecycle.js";import{isEqual as w}from"../../../../base/common/resources.js";import{localize as m}from"../../../../nls.js";import{IContextKeyService as K,RawContextKey as N}from"../../../../platform/contextkey/common/contextkey.js";import{TextEditorSelectionRevealType as k}from"../../../../platform/editor/common/editor.js";import{InstantiationType as A,registerSingleton as P}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator as T}from"../../../../platform/instantiation/common/instantiation.js";import{IKeybindingService as O}from"../../../../platform/keybinding/common/keybinding.js";import{KeybindingWeight as C,KeybindingsRegistry as H}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{INotificationService as F}from"../../../../platform/notification/common/notification.js";import{EditorCommand as B,registerEditorCommand as j}from"../../../browser/editorExtensions.js";import{ICodeEditorService as I}from"../../../browser/services/codeEditorService.js";import{Range as S}from"../../../common/core/range.js";const f=new N("hasSymbols",!1,m("hasSymbols","Whether there are symbol locations that can be navigated via keyboard-only.")),_=T("ISymbolNavigationService");let d=class{constructor(e,t,i,o){this._editorService=t;this._notificationService=i;this._keybindingService=o;this._ctxHasSymbols=f.bindTo(e)}_ctxHasSymbols;_currentModel=void 0;_currentIdx=-1;_currentState;_currentMessage;_ignoreEditorChange=!1;reset(){this._ctxHasSymbols.reset(),this._currentState?.dispose(),this._currentMessage?.dispose(),this._currentModel=void 0,this._currentIdx=-1}put(e){const t=e.parent.parent;if(t.references.length<=1){this.reset();return}this._currentModel=t,this._currentIdx=t.references.indexOf(e),this._ctxHasSymbols.set(!0),this._showMessage();const i=new a(this._editorService),o=i.onDidChange(c=>{if(this._ignoreEditorChange)return;const s=this._editorService.getActiveCodeEditor();if(!s)return;const v=s.getModel(),g=s.getPosition();if(!v||!g)return;let l=!1,h=!1;for(const u of t.references)if(w(u.uri,v.uri))l=!0,h=h||S.containsPosition(u.range,g);else if(l)break;(!l||!h)&&this.reset()});this._currentState=b(i,o)}revealNext(e){if(!this._currentModel)return Promise.resolve();this._currentIdx+=1,this._currentIdx%=this._currentModel.references.length;const t=this._currentModel.references[this._currentIdx];return this._showMessage(),this._ignoreEditorChange=!0,this._editorService.openCodeEditor({resource:t.uri,options:{selection:S.collapseToStart(t.range),selectionRevealType:k.NearTopIfOutsideViewport}},e).finally(()=>{this._ignoreEditorChange=!1})}_showMessage(){this._currentMessage?.dispose();const e=this._keybindingService.lookupKeybinding("editor.gotoNextSymbolFromResult"),t=e?m("location.kb","Symbol {0} of {1}, {2} for next",this._currentIdx+1,this._currentModel.references.length,e.getLabel()):m("location","Symbol {0} of {1}",this._currentIdx+1,this._currentModel.references.length);this._currentMessage=this._notificationService.status(t)}};d=p([n(0,K),n(1,I),n(2,F),n(3,O)],d),P(_,d,A.Delayed),j(new class extends B{constructor(){super({id:"editor.gotoNextSymbolFromResult",precondition:f,kbOpts:{weight:C.EditorContrib,primary:y.F12}})}runEditorCommand(r,e){return r.get(_).revealNext(e)}}),H.registerCommandAndKeybindingRule({id:"editor.gotoNextSymbolFromResult.cancel",weight:C.EditorContrib,when:f,primary:y.Escape,handler(r){r.get(_).reset()}});let a=class{_listener=new Map;_disposables=new M;_onDidChange=new D;onDidChange=this._onDidChange.event;constructor(e){this._disposables.add(e.onCodeEditorRemove(this._onDidRemoveEditor,this)),this._disposables.add(e.onCodeEditorAdd(this._onDidAddEditor,this)),e.listCodeEditors().forEach(this._onDidAddEditor,this)}dispose(){this._disposables.dispose(),this._onDidChange.dispose(),R(this._listener.values())}_onDidAddEditor(e){this._listener.set(e,b(e.onDidChangeCursorPosition(t=>this._onDidChange.fire({editor:e})),e.onDidChangeModelContent(t=>this._onDidChange.fire({editor:e}))))}_onDidRemoveEditor(e){this._listener.get(e)?.dispose(),this._listener.delete(e)}};a=p([n(0,I)],a);export{_ as ISymbolNavigationService,f as ctxHasSymbols};
