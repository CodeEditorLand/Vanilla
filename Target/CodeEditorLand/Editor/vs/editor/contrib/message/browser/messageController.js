var _=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var h=(d,e,t,s)=>{for(var i=s>1?void 0:s?u(e,t):e,r=d.length-1,n;r>=0;r--)(n=d[r])&&(i=(s?n(e,t,i):n(i))||i);return s&&i&&_(e,t,i),i},m=(d,e)=>(t,s)=>e(t,s,d);import{renderMarkdown as v}from"../../../../base/browser/markdownRenderer.js";import{alert as f}from"../../../../base/browser/ui/aria/aria.js";import{Event as E}from"../../../../base/common/event.js";import{isMarkdownString as l}from"../../../../base/common/htmlContent.js";import{KeyCode as I}from"../../../../base/common/keyCodes.js";import{DisposableStore as L,MutableDisposable as b}from"../../../../base/common/lifecycle.js";import"./messageController.css";import{ContentWidgetPositionPreference as g}from"../../../browser/editorBrowser.js";import{EditorCommand as C,EditorContributionInstantiation as M,registerEditorCommand as y,registerEditorContribution as D}from"../../../browser/editorExtensions.js";import"../../../common/core/position.js";import{Range as S}from"../../../common/core/range.js";import{ScrollType as W}from"../../../common/editorCommon.js";import{PositionAffinity as w}from"../../../common/model.js";import{openLinkFromMarkdown as N}from"../../../browser/widget/markdownRenderer/browser/markdownRenderer.js";import*as O from"../../../../nls.js";import{IContextKeyService as T,RawContextKey as P}from"../../../../platform/contextkey/common/contextkey.js";import{KeybindingWeight as A}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{IOpenerService as V}from"../../../../platform/opener/common/opener.js";import*as a from"../../../../base/browser/dom.js";let o=class{constructor(e,t,s){this._openerService=s;this._editor=e,this._visible=o.MESSAGE_VISIBLE.bindTo(t)}static ID="editor.contrib.messageController";static MESSAGE_VISIBLE=new P("messageVisible",!1,O.localize("messageVisible","Whether the editor is currently showing an inline message"));static get(e){return e.getContribution(o.ID)}_editor;_visible;_messageWidget=new b;_messageListeners=new L;_message;_mouseOverMessage=!1;dispose(){this._message?.dispose(),this._messageListeners.dispose(),this._messageWidget.dispose(),this._visible.reset()}isVisible(){return this._visible.get()}showMessage(e,t){f(l(e)?e.value:e),this._visible.set(!0),this._messageWidget.clear(),this._messageListeners.clear(),this._message=l(e)?v(e,{actionHandler:{callback:i=>{this.closeMessage(),N(this._openerService,i,l(e)?e.isTrusted:void 0)},disposables:this._messageListeners}}):void 0,this._messageWidget.value=new c(this._editor,t,typeof e=="string"?e:this._message.element),this._messageListeners.add(E.debounce(this._editor.onDidBlurEditorText,(i,r)=>r,0)(()=>{this._mouseOverMessage||this._messageWidget.value&&a.isAncestor(a.getActiveElement(),this._messageWidget.value.getDomNode())||this.closeMessage()})),this._messageListeners.add(this._editor.onDidChangeCursorPosition(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidDispose(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidChangeModel(()=>this.closeMessage())),this._messageListeners.add(a.addDisposableListener(this._messageWidget.value.getDomNode(),a.EventType.MOUSE_ENTER,()=>this._mouseOverMessage=!0,!0)),this._messageListeners.add(a.addDisposableListener(this._messageWidget.value.getDomNode(),a.EventType.MOUSE_LEAVE,()=>this._mouseOverMessage=!1,!0));let s;this._messageListeners.add(this._editor.onMouseMove(i=>{i.target.position&&(s?s.containsPosition(i.target.position)||this.closeMessage():s=new S(t.lineNumber-3,1,i.target.position.lineNumber+3,1))}))}closeMessage(){this._visible.reset(),this._messageListeners.clear(),this._messageWidget.value&&this._messageListeners.add(c.fadeOut(this._messageWidget.value))}};o=h([m(1,T),m(2,V)],o);const k=C.bindToContribution(o.get);y(new k({id:"leaveEditorMessage",precondition:o.MESSAGE_VISIBLE,handler:d=>d.closeMessage(),kbOpts:{weight:A.EditorContrib+30,primary:I.Escape}}));class c{allowEditorOverflow=!0;suppressMouseDown=!1;_editor;_position;_domNode;static fadeOut(e){const t=()=>{e.dispose(),clearTimeout(s),e.getDomNode().removeEventListener("animationend",t)},s=setTimeout(t,110);return e.getDomNode().addEventListener("animationend",t),e.getDomNode().classList.add("fadeOut"),{dispose:t}}constructor(e,{lineNumber:t,column:s},i){this._editor=e,this._editor.revealLinesInCenterIfOutsideViewport(t,t,W.Smooth),this._position={lineNumber:t,column:s},this._domNode=document.createElement("div"),this._domNode.classList.add("monaco-editor-overlaymessage"),this._domNode.style.marginLeft="-6px";const r=document.createElement("div");r.classList.add("anchor","top"),this._domNode.appendChild(r);const n=document.createElement("div");typeof i=="string"?(n.classList.add("message"),n.textContent=i):(i.classList.add("message"),n.appendChild(i)),this._domNode.appendChild(n);const p=document.createElement("div");p.classList.add("anchor","below"),this._domNode.appendChild(p),this._editor.addContentWidget(this),this._domNode.classList.add("fadeIn")}dispose(){this._editor.removeContentWidget(this)}getId(){return"messageoverlay"}getDomNode(){return this._domNode}getPosition(){return{position:this._position,preference:[g.ABOVE,g.BELOW],positionAffinity:w.Right}}afterRender(e){this._domNode.classList.toggle("below",e===g.BELOW)}}D(o.ID,o,M.Lazy);export{o as MessageController};
