{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/multicursor/browser/multicursor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { status } from \"../../../../base/browser/ui/aria/aria.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Constants } from \"../../../../base/common/uint.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorContributionInstantiation,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport { CursorMoveCommands } from \"../../../common/cursor/cursorMoveCommands.js\";\nimport type { CursorState } from \"../../../common/cursorCommon.js\";\nimport {\n\tCursorChangeReason,\n\ttype ICursorSelectionChangedEvent,\n} from \"../../../common/cursorEvents.js\";\nimport {\n\ttype IEditorContribution,\n\ttype IEditorDecorationsCollection,\n\tScrollType,\n} from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport type { FindMatch, ITextModel } from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { CommonFindController } from \"../../find/browser/findController.js\";\nimport {\n\tFindOptionOverride,\n\ttype INewFindReplaceState,\n} from \"../../find/browser/findState.js\";\nimport { getSelectionHighlightDecorationOptions } from \"../../wordHighlighter/browser/highlightDecorations.js\";\n\nfunction announceCursorChange(\n\tpreviousCursorState: CursorState[],\n\tcursorState: CursorState[],\n): void {\n\tconst cursorDiff = cursorState.filter(\n\t\t(cs) => !previousCursorState.find((pcs) => pcs.equals(cs)),\n\t);\n\tif (cursorDiff.length >= 1) {\n\t\tconst cursorPositions = cursorDiff\n\t\t\t.map(\n\t\t\t\t(cs) =>\n\t\t\t\t\t`line ${cs.viewState.position.lineNumber} column ${cs.viewState.position.column}`,\n\t\t\t)\n\t\t\t.join(\", \");\n\t\tconst msg =\n\t\t\tcursorDiff.length === 1\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"cursorAdded\",\n\t\t\t\t\t\t\"Cursor added: {0}\",\n\t\t\t\t\t\tcursorPositions,\n\t\t\t\t\t)\n\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\"cursorsAdded\",\n\t\t\t\t\t\t\"Cursors added: {0}\",\n\t\t\t\t\t\tcursorPositions,\n\t\t\t\t\t);\n\t\tstatus(msg);\n\t}\n}\n\nexport class InsertCursorAbove extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.insertCursorAbove\",\n\t\t\tlabel: nls.localize(\"mutlicursor.insertAbove\", \"Add Cursor Above\"),\n\t\t\talias: \"Add Cursor Above\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.UpArrow,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.UpArrow,\n\t\t\t\t\tsecondary: [\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.UpArrow,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: \"3_multi\",\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miInsertCursorAbove\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Add Cursor Above\",\n\t\t\t\t),\n\t\t\t\torder: 2,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet useLogicalLine = true;\n\t\tif (args && args.logicalLine === false) {\n\t\t\tuseLogicalLine = false;\n\t\t}\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tif (viewModel.cursorConfig.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewModel.model.pushStackElement();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tviewModel.setCursorStates(\n\t\t\targs.source,\n\t\t\tCursorChangeReason.Explicit,\n\t\t\tCursorMoveCommands.addCursorUp(\n\t\t\t\tviewModel,\n\t\t\t\tpreviousCursorState,\n\t\t\t\tuseLogicalLine,\n\t\t\t),\n\t\t);\n\t\tviewModel.revealTopMostCursor(args.source);\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nexport class InsertCursorBelow extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.insertCursorBelow\",\n\t\t\tlabel: nls.localize(\"mutlicursor.insertBelow\", \"Add Cursor Below\"),\n\t\t\talias: \"Add Cursor Below\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.DownArrow,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.DownArrow,\n\t\t\t\t\tsecondary: [\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.DownArrow,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: \"3_multi\",\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miInsertCursorBelow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"A&&dd Cursor Below\",\n\t\t\t\t),\n\t\t\t\torder: 3,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet useLogicalLine = true;\n\t\tif (args && args.logicalLine === false) {\n\t\t\tuseLogicalLine = false;\n\t\t}\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tif (viewModel.cursorConfig.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewModel.model.pushStackElement();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tviewModel.setCursorStates(\n\t\t\targs.source,\n\t\t\tCursorChangeReason.Explicit,\n\t\t\tCursorMoveCommands.addCursorDown(\n\t\t\t\tviewModel,\n\t\t\t\tpreviousCursorState,\n\t\t\t\tuseLogicalLine,\n\t\t\t),\n\t\t);\n\t\tviewModel.revealBottomMostCursor(args.source);\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nclass InsertCursorAtEndOfEachLineSelected extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.insertCursorAtEndOfEachLineSelected\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"mutlicursor.insertAtEndOfEachLineSelected\",\n\t\t\t\t\"Add Cursors to Line Ends\",\n\t\t\t),\n\t\t\talias: \"Add Cursors to Line Ends\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyI,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: \"3_multi\",\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miInsertCursorAtEndOfEachLineSelected\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Add C&&ursors to Line Ends\",\n\t\t\t\t),\n\t\t\t\torder: 4,\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate getCursorsForSelection(\n\t\tselection: Selection,\n\t\tmodel: ITextModel,\n\t\tresult: Selection[],\n\t): void {\n\t\tif (selection.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (\n\t\t\tlet i = selection.startLineNumber;\n\t\t\ti < selection.endLineNumber;\n\t\t\ti++\n\t\t) {\n\t\t\tconst currentLineMaxColumn = model.getLineMaxColumn(i);\n\t\t\tresult.push(\n\t\t\t\tnew Selection(i, currentLineMaxColumn, i, currentLineMaxColumn),\n\t\t\t);\n\t\t}\n\t\tif (selection.endColumn > 1) {\n\t\t\tresult.push(\n\t\t\t\tnew Selection(\n\t\t\t\t\tselection.endLineNumber,\n\t\t\t\t\tselection.endColumn,\n\t\t\t\t\tselection.endLineNumber,\n\t\t\t\t\tselection.endColumn,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = editor.getModel();\n\t\tconst selections = editor.getSelections();\n\t\tconst viewModel = editor._getViewModel();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tconst newSelections: Selection[] = [];\n\t\tselections.forEach((sel) =>\n\t\t\tthis.getCursorsForSelection(sel, model, newSelections),\n\t\t);\n\n\t\tif (newSelections.length > 0) {\n\t\t\teditor.setSelections(newSelections);\n\t\t}\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nclass InsertCursorAtEndOfLineSelected extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.addCursorsToBottom\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"mutlicursor.addCursorsToBottom\",\n\t\t\t\t\"Add Cursors To Bottom\",\n\t\t\t),\n\t\t\talias: \"Add Cursors To Bottom\",\n\t\t\tprecondition: undefined,\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selections = editor.getSelections();\n\t\tconst lineCount = editor.getModel().getLineCount();\n\n\t\tconst newSelections: Selection[] = [];\n\t\tfor (let i = selections[0].startLineNumber; i <= lineCount; i++) {\n\t\t\tnewSelections.push(\n\t\t\t\tnew Selection(\n\t\t\t\t\ti,\n\t\t\t\t\tselections[0].startColumn,\n\t\t\t\t\ti,\n\t\t\t\t\tselections[0].endColumn,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst viewModel = editor._getViewModel();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tif (newSelections.length > 0) {\n\t\t\teditor.setSelections(newSelections);\n\t\t}\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nclass InsertCursorAtTopOfLineSelected extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.addCursorsToTop\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"mutlicursor.addCursorsToTop\",\n\t\t\t\t\"Add Cursors To Top\",\n\t\t\t),\n\t\t\talias: \"Add Cursors To Top\",\n\t\t\tprecondition: undefined,\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selections = editor.getSelections();\n\n\t\tconst newSelections: Selection[] = [];\n\t\tfor (let i = selections[0].startLineNumber; i >= 1; i--) {\n\t\t\tnewSelections.push(\n\t\t\t\tnew Selection(\n\t\t\t\t\ti,\n\t\t\t\t\tselections[0].startColumn,\n\t\t\t\t\ti,\n\t\t\t\t\tselections[0].endColumn,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst viewModel = editor._getViewModel();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tif (newSelections.length > 0) {\n\t\t\teditor.setSelections(newSelections);\n\t\t}\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nexport class MultiCursorSessionResult {\n\tconstructor(\n\t\tpublic readonly selections: Selection[],\n\t\tpublic readonly revealRange: Range,\n\t\tpublic readonly revealScrollType: ScrollType,\n\t) {}\n}\n\nexport class MultiCursorSession {\n\tpublic static create(\n\t\teditor: ICodeEditor,\n\t\tfindController: CommonFindController,\n\t): MultiCursorSession | null {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\t\tconst findState = findController.getState();\n\n\t\t// Find widget owns entirely what we search for if:\n\t\t//  - focus is not in the editor (i.e. it is in the find widget)\n\t\t//  - and the search widget is visible\n\t\t//  - and the search string is non-empty\n\t\tif (\n\t\t\t!editor.hasTextFocus() &&\n\t\t\tfindState.isRevealed &&\n\t\t\tfindState.searchString.length > 0\n\t\t) {\n\t\t\t// Find widget owns what is searched for\n\t\t\treturn new MultiCursorSession(\n\t\t\t\teditor,\n\t\t\t\tfindController,\n\t\t\t\tfalse,\n\t\t\t\tfindState.searchString,\n\t\t\t\tfindState.wholeWord,\n\t\t\t\tfindState.matchCase,\n\t\t\t\tnull,\n\t\t\t);\n\t\t}\n\n\t\t// Otherwise, the selection gives the search text, and the find widget gives the search settings\n\t\t// The exception is the find state disassociation case: when beginning with a single, collapsed selection\n\t\tlet isDisconnectedFromFindController = false;\n\t\tlet wholeWord: boolean;\n\t\tlet matchCase: boolean;\n\t\tconst selections = editor.getSelections();\n\t\tif (selections.length === 1 && selections[0].isEmpty()) {\n\t\t\tisDisconnectedFromFindController = true;\n\t\t\twholeWord = true;\n\t\t\tmatchCase = true;\n\t\t} else {\n\t\t\twholeWord = findState.wholeWord;\n\t\t\tmatchCase = findState.matchCase;\n\t\t}\n\n\t\t// Selection owns what is searched for\n\t\tconst s = editor.getSelection();\n\n\t\tlet searchText: string;\n\t\tlet currentMatch: Selection | null = null;\n\n\t\tif (s.isEmpty()) {\n\t\t\t// selection is empty => expand to current word\n\t\t\tconst word = editor.getConfiguredWordAtPosition(\n\t\t\t\ts.getStartPosition(),\n\t\t\t);\n\t\t\tif (!word) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tsearchText = word.word;\n\t\t\tcurrentMatch = new Selection(\n\t\t\t\ts.startLineNumber,\n\t\t\t\tword.startColumn,\n\t\t\t\ts.startLineNumber,\n\t\t\t\tword.endColumn,\n\t\t\t);\n\t\t} else {\n\t\t\tsearchText = editor\n\t\t\t\t.getModel()\n\t\t\t\t.getValueInRange(s)\n\t\t\t\t.replace(/\\r\\n/g, \"\\n\");\n\t\t}\n\n\t\treturn new MultiCursorSession(\n\t\t\teditor,\n\t\t\tfindController,\n\t\t\tisDisconnectedFromFindController,\n\t\t\tsearchText,\n\t\t\twholeWord,\n\t\t\tmatchCase,\n\t\t\tcurrentMatch,\n\t\t);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tpublic readonly findController: CommonFindController,\n\t\tpublic readonly isDisconnectedFromFindController: boolean,\n\t\tpublic readonly searchText: string,\n\t\tpublic readonly wholeWord: boolean,\n\t\tpublic readonly matchCase: boolean,\n\t\tpublic currentMatch: Selection | null,\n\t) {}\n\n\tpublic addSelectionToNextFindMatch(): MultiCursorSessionResult | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst nextMatch = this._getNextMatch();\n\t\tif (!nextMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\treturn new MultiCursorSessionResult(\n\t\t\tallSelections.concat(nextMatch),\n\t\t\tnextMatch,\n\t\t\tScrollType.Smooth,\n\t\t);\n\t}\n\n\tpublic moveSelectionToNextFindMatch(): MultiCursorSessionResult | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst nextMatch = this._getNextMatch();\n\t\tif (!nextMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\treturn new MultiCursorSessionResult(\n\t\t\tallSelections.slice(0, allSelections.length - 1).concat(nextMatch),\n\t\t\tnextMatch,\n\t\t\tScrollType.Smooth,\n\t\t);\n\t}\n\n\tprivate _getNextMatch(): Selection | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.currentMatch) {\n\t\t\tconst result = this.currentMatch;\n\t\t\tthis.currentMatch = null;\n\t\t\treturn result;\n\t\t}\n\n\t\tthis.findController.highlightFindOptions();\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\tconst lastAddedSelection = allSelections[allSelections.length - 1];\n\t\tconst nextMatch = this._editor\n\t\t\t.getModel()\n\t\t\t.findNextMatch(\n\t\t\t\tthis.searchText,\n\t\t\t\tlastAddedSelection.getEndPosition(),\n\t\t\t\tfalse,\n\t\t\t\tthis.matchCase,\n\t\t\t\tthis.wholeWord\n\t\t\t\t\t? this._editor.getOption(EditorOption.wordSeparators)\n\t\t\t\t\t: null,\n\t\t\t\tfalse,\n\t\t\t);\n\n\t\tif (!nextMatch) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Selection(\n\t\t\tnextMatch.range.startLineNumber,\n\t\t\tnextMatch.range.startColumn,\n\t\t\tnextMatch.range.endLineNumber,\n\t\t\tnextMatch.range.endColumn,\n\t\t);\n\t}\n\n\tpublic addSelectionToPreviousFindMatch(): MultiCursorSessionResult | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst previousMatch = this._getPreviousMatch();\n\t\tif (!previousMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\treturn new MultiCursorSessionResult(\n\t\t\tallSelections.concat(previousMatch),\n\t\t\tpreviousMatch,\n\t\t\tScrollType.Smooth,\n\t\t);\n\t}\n\n\tpublic moveSelectionToPreviousFindMatch(): MultiCursorSessionResult | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst previousMatch = this._getPreviousMatch();\n\t\tif (!previousMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\treturn new MultiCursorSessionResult(\n\t\t\tallSelections\n\t\t\t\t.slice(0, allSelections.length - 1)\n\t\t\t\t.concat(previousMatch),\n\t\t\tpreviousMatch,\n\t\t\tScrollType.Smooth,\n\t\t);\n\t}\n\n\tprivate _getPreviousMatch(): Selection | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.currentMatch) {\n\t\t\tconst result = this.currentMatch;\n\t\t\tthis.currentMatch = null;\n\t\t\treturn result;\n\t\t}\n\n\t\tthis.findController.highlightFindOptions();\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\tconst lastAddedSelection = allSelections[allSelections.length - 1];\n\t\tconst previousMatch = this._editor\n\t\t\t.getModel()\n\t\t\t.findPreviousMatch(\n\t\t\t\tthis.searchText,\n\t\t\t\tlastAddedSelection.getStartPosition(),\n\t\t\t\tfalse,\n\t\t\t\tthis.matchCase,\n\t\t\t\tthis.wholeWord\n\t\t\t\t\t? this._editor.getOption(EditorOption.wordSeparators)\n\t\t\t\t\t: null,\n\t\t\t\tfalse,\n\t\t\t);\n\n\t\tif (!previousMatch) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Selection(\n\t\t\tpreviousMatch.range.startLineNumber,\n\t\t\tpreviousMatch.range.startColumn,\n\t\t\tpreviousMatch.range.endLineNumber,\n\t\t\tpreviousMatch.range.endColumn,\n\t\t);\n\t}\n\n\tpublic selectAll(searchScope: Range[] | null): FindMatch[] {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.findController.highlightFindOptions();\n\n\t\tconst editorModel = this._editor.getModel();\n\t\tif (searchScope) {\n\t\t\treturn editorModel.findMatches(\n\t\t\t\tthis.searchText,\n\t\t\t\tsearchScope,\n\t\t\t\tfalse,\n\t\t\t\tthis.matchCase,\n\t\t\t\tthis.wholeWord\n\t\t\t\t\t? this._editor.getOption(EditorOption.wordSeparators)\n\t\t\t\t\t: null,\n\t\t\t\tfalse,\n\t\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t);\n\t\t}\n\t\treturn editorModel.findMatches(\n\t\t\tthis.searchText,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tthis.matchCase,\n\t\t\tthis.wholeWord\n\t\t\t\t? this._editor.getOption(EditorOption.wordSeparators)\n\t\t\t\t: null,\n\t\t\tfalse,\n\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t);\n\t}\n}\n\nexport class MultiCursorSelectionController\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.contrib.multiCursorController\";\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate _ignoreSelectionChange: boolean;\n\tprivate _session: MultiCursorSession | null;\n\tprivate readonly _sessionDispose = this._register(new DisposableStore());\n\n\tpublic static get(\n\t\teditor: ICodeEditor,\n\t): MultiCursorSelectionController | null {\n\t\treturn editor.getContribution<MultiCursorSelectionController>(\n\t\t\tMultiCursorSelectionController.ID,\n\t\t);\n\t}\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._ignoreSelectionChange = false;\n\t\tthis._session = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._endSession();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _beginSessionIfNeeded(findController: CommonFindController): void {\n\t\tif (!this._session) {\n\t\t\t// Create a new session\n\t\t\tconst session = MultiCursorSession.create(\n\t\t\t\tthis._editor,\n\t\t\t\tfindController,\n\t\t\t);\n\t\t\tif (!session) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._session = session;\n\n\t\t\tconst newState: INewFindReplaceState = {\n\t\t\t\tsearchString: this._session.searchText,\n\t\t\t};\n\t\t\tif (this._session.isDisconnectedFromFindController) {\n\t\t\t\tnewState.wholeWordOverride = FindOptionOverride.True;\n\t\t\t\tnewState.matchCaseOverride = FindOptionOverride.True;\n\t\t\t\tnewState.isRegexOverride = FindOptionOverride.False;\n\t\t\t}\n\t\t\tfindController.getState().change(newState, false);\n\n\t\t\tthis._sessionDispose.add(\n\t\t\t\tthis._editor.onDidChangeCursorSelection((e) => {\n\t\t\t\t\tif (this._ignoreSelectionChange) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._endSession();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._sessionDispose.add(\n\t\t\t\tthis._editor.onDidBlurEditorText(() => {\n\t\t\t\t\tthis._endSession();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._sessionDispose.add(\n\t\t\t\tfindController.getState().onFindReplaceStateChange((e) => {\n\t\t\t\t\tif (e.matchCase || e.wholeWord) {\n\t\t\t\t\t\tthis._endSession();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _endSession(): void {\n\t\tthis._sessionDispose.clear();\n\t\tif (this._session && this._session.isDisconnectedFromFindController) {\n\t\t\tconst newState: INewFindReplaceState = {\n\t\t\t\twholeWordOverride: FindOptionOverride.NotSet,\n\t\t\t\tmatchCaseOverride: FindOptionOverride.NotSet,\n\t\t\t\tisRegexOverride: FindOptionOverride.NotSet,\n\t\t\t};\n\t\t\tthis._session.findController.getState().change(newState, false);\n\t\t}\n\t\tthis._session = null;\n\t}\n\n\tprivate _setSelections(selections: Selection[]): void {\n\t\tthis._ignoreSelectionChange = true;\n\t\tthis._editor.setSelections(selections);\n\t\tthis._ignoreSelectionChange = false;\n\t}\n\n\tprivate _expandEmptyToWord(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t): Selection {\n\t\tif (!selection.isEmpty()) {\n\t\t\treturn selection;\n\t\t}\n\t\tconst word = this._editor.getConfiguredWordAtPosition(\n\t\t\tselection.getStartPosition(),\n\t\t);\n\t\tif (!word) {\n\t\t\treturn selection;\n\t\t}\n\t\treturn new Selection(\n\t\t\tselection.startLineNumber,\n\t\t\tword.startColumn,\n\t\t\tselection.startLineNumber,\n\t\t\tword.endColumn,\n\t\t);\n\t}\n\n\tprivate _applySessionResult(result: MultiCursorSessionResult | null): void {\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\t\tthis._setSelections(result.selections);\n\t\tif (result.revealRange) {\n\t\t\tthis._editor.revealRangeInCenterIfOutsideViewport(\n\t\t\t\tresult.revealRange,\n\t\t\t\tresult.revealScrollType,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic getSession(\n\t\tfindController: CommonFindController,\n\t): MultiCursorSession | null {\n\t\treturn this._session;\n\t}\n\n\tpublic addSelectionToNextFindMatch(\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._session) {\n\t\t\t// If there are multiple cursors, handle the case where they do not all select the same text.\n\t\t\tconst allSelections = this._editor.getSelections();\n\t\t\tif (allSelections.length > 1) {\n\t\t\t\tconst findState = findController.getState();\n\t\t\t\tconst matchCase = findState.matchCase;\n\t\t\t\tconst selectionsContainSameText = modelRangesContainSameText(\n\t\t\t\t\tthis._editor.getModel(),\n\t\t\t\t\tallSelections,\n\t\t\t\t\tmatchCase,\n\t\t\t\t);\n\t\t\t\tif (!selectionsContainSameText) {\n\t\t\t\t\tconst model = this._editor.getModel();\n\t\t\t\t\tconst resultingSelections: Selection[] = [];\n\t\t\t\t\tfor (let i = 0, len = allSelections.length; i < len; i++) {\n\t\t\t\t\t\tresultingSelections[i] = this._expandEmptyToWord(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tallSelections[i],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis._editor.setSelections(resultingSelections);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._beginSessionIfNeeded(findController);\n\t\tif (this._session) {\n\t\t\tthis._applySessionResult(\n\t\t\t\tthis._session.addSelectionToNextFindMatch(),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic addSelectionToPreviousFindMatch(\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tthis._beginSessionIfNeeded(findController);\n\t\tif (this._session) {\n\t\t\tthis._applySessionResult(\n\t\t\t\tthis._session.addSelectionToPreviousFindMatch(),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic moveSelectionToNextFindMatch(\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tthis._beginSessionIfNeeded(findController);\n\t\tif (this._session) {\n\t\t\tthis._applySessionResult(\n\t\t\t\tthis._session.moveSelectionToNextFindMatch(),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic moveSelectionToPreviousFindMatch(\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tthis._beginSessionIfNeeded(findController);\n\t\tif (this._session) {\n\t\t\tthis._applySessionResult(\n\t\t\t\tthis._session.moveSelectionToPreviousFindMatch(),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic selectAll(findController: CommonFindController): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet matches: FindMatch[] | null = null;\n\n\t\tconst findState = findController.getState();\n\n\t\t// Special case: find widget owns entirely what we search for if:\n\t\t// - focus is not in the editor (i.e. it is in the find widget)\n\t\t// - and the search widget is visible\n\t\t// - and the search string is non-empty\n\t\t// - and we're searching for a regex\n\t\tif (\n\t\t\tfindState.isRevealed &&\n\t\t\tfindState.searchString.length > 0 &&\n\t\t\tfindState.isRegex\n\t\t) {\n\t\t\tconst editorModel = this._editor.getModel();\n\t\t\tif (findState.searchScope) {\n\t\t\t\tmatches = editorModel.findMatches(\n\t\t\t\t\tfindState.searchString,\n\t\t\t\t\tfindState.searchScope,\n\t\t\t\t\tfindState.isRegex,\n\t\t\t\t\tfindState.matchCase,\n\t\t\t\t\tfindState.wholeWord\n\t\t\t\t\t\t? this._editor.getOption(EditorOption.wordSeparators)\n\t\t\t\t\t\t: null,\n\t\t\t\t\tfalse,\n\t\t\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmatches = editorModel.findMatches(\n\t\t\t\t\tfindState.searchString,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfindState.isRegex,\n\t\t\t\t\tfindState.matchCase,\n\t\t\t\t\tfindState.wholeWord\n\t\t\t\t\t\t? this._editor.getOption(EditorOption.wordSeparators)\n\t\t\t\t\t\t: null,\n\t\t\t\t\tfalse,\n\t\t\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._beginSessionIfNeeded(findController);\n\t\t\tif (!this._session) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmatches = this._session.selectAll(findState.searchScope);\n\t\t}\n\n\t\tif (matches.length > 0) {\n\t\t\tconst editorSelection = this._editor.getSelection();\n\t\t\t// Have the primary cursor remain the one where the action was invoked\n\t\t\tfor (let i = 0, len = matches.length; i < len; i++) {\n\t\t\t\tconst match = matches[i];\n\t\t\t\tconst intersection =\n\t\t\t\t\tmatch.range.intersectRanges(editorSelection);\n\t\t\t\tif (intersection) {\n\t\t\t\t\t// bingo!\n\t\t\t\t\tmatches[i] = matches[0];\n\t\t\t\t\tmatches[0] = match;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._setSelections(\n\t\t\t\tmatches.map(\n\t\t\t\t\t(m) =>\n\t\t\t\t\t\tnew Selection(\n\t\t\t\t\t\t\tm.range.startLineNumber,\n\t\t\t\t\t\t\tm.range.startColumn,\n\t\t\t\t\t\t\tm.range.endLineNumber,\n\t\t\t\t\t\t\tm.range.endColumn,\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic selectAllUsingSelections(selections: Selection[]): void {\n\t\tif (selections.length > 0) {\n\t\t\tthis._setSelections(selections);\n\t\t}\n\t}\n}\n\nexport abstract class MultiCursorSelectionControllerAction extends EditorAction {\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst multiCursorController =\n\t\t\tMultiCursorSelectionController.get(editor);\n\t\tif (!multiCursorController) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewModel = editor._getViewModel();\n\t\tif (viewModel) {\n\t\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\t\tconst findController = CommonFindController.get(editor);\n\t\t\tif (findController) {\n\t\t\t\tthis._run(multiCursorController, findController);\n\t\t\t} else {\n\t\t\t\tconst newFindController = accessor\n\t\t\t\t\t.get(IInstantiationService)\n\t\t\t\t\t.createInstance(CommonFindController, editor);\n\t\t\t\tthis._run(multiCursorController, newFindController);\n\t\t\t\tnewFindController.dispose();\n\t\t\t}\n\n\t\t\tannounceCursorChange(\n\t\t\t\tpreviousCursorState,\n\t\t\t\tviewModel.getCursorStates(),\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected abstract _run(\n\t\tmultiCursorController: MultiCursorSelectionController,\n\t\tfindController: CommonFindController,\n\t): void;\n}\n\nexport class AddSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.addSelectionToNextFindMatch\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"addSelectionToNextFindMatch\",\n\t\t\t\t\"Add Selection To Next Find Match\",\n\t\t\t),\n\t\t\talias: \"Add Selection To Next Find Match\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyD,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: \"3_multi\",\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miAddSelectionToNextFindMatch\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Add &&Next Occurrence\",\n\t\t\t\t),\n\t\t\t\torder: 5,\n\t\t\t},\n\t\t});\n\t}\n\tprotected _run(\n\t\tmultiCursorController: MultiCursorSelectionController,\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tmultiCursorController.addSelectionToNextFindMatch(findController);\n\t}\n}\n\nexport class AddSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.addSelectionToPreviousFindMatch\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"addSelectionToPreviousFindMatch\",\n\t\t\t\t\"Add Selection To Previous Find Match\",\n\t\t\t),\n\t\t\talias: \"Add Selection To Previous Find Match\",\n\t\t\tprecondition: undefined,\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: \"3_multi\",\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miAddSelectionToPreviousFindMatch\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Add P&&revious Occurrence\",\n\t\t\t\t),\n\t\t\t\torder: 6,\n\t\t\t},\n\t\t});\n\t}\n\tprotected _run(\n\t\tmultiCursorController: MultiCursorSelectionController,\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tmultiCursorController.addSelectionToPreviousFindMatch(findController);\n\t}\n}\n\nexport class MoveSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.moveSelectionToNextFindMatch\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"moveSelectionToNextFindMatch\",\n\t\t\t\t\"Move Last Selection To Next Find Match\",\n\t\t\t),\n\t\t\talias: \"Move Last Selection To Next Find Match\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyD,\n\t\t\t\t),\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\tprotected _run(\n\t\tmultiCursorController: MultiCursorSelectionController,\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tmultiCursorController.moveSelectionToNextFindMatch(findController);\n\t}\n}\n\nexport class MoveSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.moveSelectionToPreviousFindMatch\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"moveSelectionToPreviousFindMatch\",\n\t\t\t\t\"Move Last Selection To Previous Find Match\",\n\t\t\t),\n\t\t\talias: \"Move Last Selection To Previous Find Match\",\n\t\t\tprecondition: undefined,\n\t\t});\n\t}\n\tprotected _run(\n\t\tmultiCursorController: MultiCursorSelectionController,\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tmultiCursorController.moveSelectionToPreviousFindMatch(findController);\n\t}\n}\n\nexport class SelectHighlightsAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.selectHighlights\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"selectAllOccurrencesOfFindMatch\",\n\t\t\t\t\"Select All Occurrences of Find Match\",\n\t\t\t),\n\t\t\talias: \"Select All Occurrences of Find Match\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyL,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: \"3_multi\",\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miSelectHighlights\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Select All &&Occurrences\",\n\t\t\t\t),\n\t\t\t\torder: 7,\n\t\t\t},\n\t\t});\n\t}\n\tprotected _run(\n\t\tmultiCursorController: MultiCursorSelectionController,\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tmultiCursorController.selectAll(findController);\n\t}\n}\n\nexport class CompatChangeAll extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.changeAll\",\n\t\t\tlabel: nls.localize(\"changeAll.label\", \"Change All Occurrences\"),\n\t\t\talias: \"Change All Occurrences\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.editorTextFocus,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.F2,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: \"1_modification\",\n\t\t\t\torder: 1.2,\n\t\t\t},\n\t\t});\n\t}\n\tprotected _run(\n\t\tmultiCursorController: MultiCursorSelectionController,\n\t\tfindController: CommonFindController,\n\t): void {\n\t\tmultiCursorController.selectAll(findController);\n\t}\n}\n\nclass SelectionHighlighterState {\n\tprivate readonly _modelVersionId: number = this._model.getVersionId();\n\tprivate _cachedFindMatches: Range[] | null = null;\n\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _searchText: string,\n\t\tprivate readonly _matchCase: boolean,\n\t\tprivate readonly _wordSeparators: string | null,\n\t\tprevState: SelectionHighlighterState | null,\n\t) {\n\t\tif (\n\t\t\tprevState &&\n\t\t\tthis._model === prevState._model &&\n\t\t\tthis._searchText === prevState._searchText &&\n\t\t\tthis._matchCase === prevState._matchCase &&\n\t\t\tthis._wordSeparators === prevState._wordSeparators &&\n\t\t\tthis._modelVersionId === prevState._modelVersionId\n\t\t) {\n\t\t\tthis._cachedFindMatches = prevState._cachedFindMatches;\n\t\t}\n\t}\n\n\tpublic findMatches(): Range[] {\n\t\tif (this._cachedFindMatches === null) {\n\t\t\tthis._cachedFindMatches = this._model\n\t\t\t\t.findMatches(\n\t\t\t\t\tthis._searchText,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis._matchCase,\n\t\t\t\t\tthis._wordSeparators,\n\t\t\t\t\tfalse,\n\t\t\t\t)\n\t\t\t\t.map((m) => m.range);\n\t\t\tthis._cachedFindMatches.sort(Range.compareRangesUsingStarts);\n\t\t}\n\t\treturn this._cachedFindMatches;\n\t}\n}\n\nexport class SelectionHighlighter\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.contrib.selectionHighlighter\";\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate _isEnabled: boolean;\n\tprivate readonly _decorations: IEditorDecorationsCollection;\n\tprivate readonly updateSoon: RunOnceScheduler;\n\tprivate state: SelectionHighlighterState | null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService\n\t) {\n\t\tsuper();\n\t\tthis.editor = editor;\n\t\tthis._isEnabled = editor.getOption(EditorOption.selectionHighlight);\n\t\tthis._decorations = editor.createDecorationsCollection();\n\t\tthis.updateSoon = this._register(new RunOnceScheduler(() => this._update(), 300));\n\t\tthis.state = null;\n\n\t\tthis._register(editor.onDidChangeConfiguration((e) => {\n\t\t\tthis._isEnabled = editor.getOption(EditorOption.selectionHighlight);\n\t\t}));\n\t\tthis._register(editor.onDidChangeCursorSelection((e: ICursorSelectionChangedEvent) => {\n\n\t\t\tif (!this._isEnabled) {\n\t\t\t\t// Early exit if nothing needs to be done!\n\t\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.selection.isEmpty()) {\n\t\t\t\tif (e.reason === CursorChangeReason.Explicit) {\n\t\t\t\t\tif (this.state) {\n\t\t\t\t\t\t// no longer valid\n\t\t\t\t\t\tthis._setState(null);\n\t\t\t\t\t}\n\t\t\t\t\tthis.updateSoon.schedule();\n\t\t\t\t} else {\n\t\t\t\t\tthis._setState(null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t}));\n\t\tthis._register(editor.onDidChangeModel((e) => {\n\t\t\tthis._setState(null);\n\t\t}));\n\t\tthis._register(editor.onDidChangeModelContent((e) => {\n\t\t\tif (this._isEnabled) {\n\t\t\t\tthis.updateSoon.schedule();\n\t\t\t}\n\t\t}));\n\t\tconst findController = CommonFindController.get(editor);\n\t\tif (findController) {\n\t\t\tthis._register(findController.getState().onFindReplaceStateChange((e) => {\n\t\t\t\tthis._update();\n\t\t\t}));\n\t\t}\n\t\tthis.updateSoon.schedule();\n\t}\n\n\tprivate _update(): void {\n\t\tthis._setState(\n\t\t\tSelectionHighlighter._createState(\n\t\t\t\tthis.state,\n\t\t\t\tthis._isEnabled,\n\t\t\t\tthis.editor,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate static _createState(\n\t\toldState: SelectionHighlighterState | null,\n\t\tisEnabled: boolean,\n\t\teditor: ICodeEditor,\n\t): SelectionHighlighterState | null {\n\t\tif (!isEnabled) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\t\tconst s = editor.getSelection();\n\t\tif (s.startLineNumber !== s.endLineNumber) {\n\t\t\t// multiline forbidden for perf reasons\n\t\t\treturn null;\n\t\t}\n\t\tconst multiCursorController =\n\t\t\tMultiCursorSelectionController.get(editor);\n\t\tif (!multiCursorController) {\n\t\t\treturn null;\n\t\t}\n\t\tconst findController = CommonFindController.get(editor);\n\t\tif (!findController) {\n\t\t\treturn null;\n\t\t}\n\t\tlet r = multiCursorController.getSession(findController);\n\t\tif (!r) {\n\t\t\tconst allSelections = editor.getSelections();\n\t\t\tif (allSelections.length > 1) {\n\t\t\t\tconst findState = findController.getState();\n\t\t\t\tconst matchCase = findState.matchCase;\n\t\t\t\tconst selectionsContainSameText = modelRangesContainSameText(\n\t\t\t\t\teditor.getModel(),\n\t\t\t\t\tallSelections,\n\t\t\t\t\tmatchCase,\n\t\t\t\t);\n\t\t\t\tif (!selectionsContainSameText) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tr = MultiCursorSession.create(editor, findController);\n\t\t}\n\t\tif (!r) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (r.currentMatch) {\n\t\t\t// This is an empty selection\n\t\t\t// Do not interfere with semantic word highlighting in the no selection case\n\t\t\treturn null;\n\t\t}\n\t\tif (/^[ \\t]+$/.test(r.searchText)) {\n\t\t\t// whitespace only selection\n\t\t\treturn null;\n\t\t}\n\t\tif (r.searchText.length > 200) {\n\t\t\t// very long selection\n\t\t\treturn null;\n\t\t}\n\n\t\t// TODO: better handling of this case\n\t\tconst findState = findController.getState();\n\t\tconst caseSensitive = findState.matchCase;\n\n\t\t// Return early if the find widget shows the exact same matches\n\t\tif (findState.isRevealed) {\n\t\t\tlet findStateSearchString = findState.searchString;\n\t\t\tif (!caseSensitive) {\n\t\t\t\tfindStateSearchString = findStateSearchString.toLowerCase();\n\t\t\t}\n\n\t\t\tlet mySearchString = r.searchText;\n\t\t\tif (!caseSensitive) {\n\t\t\t\tmySearchString = mySearchString.toLowerCase();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tfindStateSearchString === mySearchString &&\n\t\t\t\tr.matchCase === findState.matchCase &&\n\t\t\t\tr.wholeWord === findState.wholeWord &&\n\t\t\t\t!findState.isRegex\n\t\t\t) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn new SelectionHighlighterState(\n\t\t\teditor.getModel(),\n\t\t\tr.searchText,\n\t\t\tr.matchCase,\n\t\t\tr.wholeWord ? editor.getOption(EditorOption.wordSeparators) : null,\n\t\t\toldState,\n\t\t);\n\t}\n\n\tprivate _setState(newState: SelectionHighlighterState | null): void {\n\t\tthis.state = newState;\n\n\t\tif (!this.state) {\n\t\t\tthis._decorations.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (model.isTooLargeForTokenization()) {\n\t\t\t// the file is too large, so searching word under cursor in the whole document would be blocking the UI.\n\t\t\treturn;\n\t\t}\n\n\t\tconst allMatches = this.state.findMatches();\n\n\t\tconst selections = this.editor.getSelections();\n\t\tselections.sort(Range.compareRangesUsingStarts);\n\n\t\t// do not overlap with selection (issue #64 and #512)\n\t\tconst matches: Range[] = [];\n\t\tfor (\n\t\t\tlet i = 0, j = 0, len = allMatches.length, lenJ = selections.length;\n\t\t\ti < len;\n\t\t) {\n\t\t\tconst match = allMatches[i];\n\n\t\t\tif (j >= lenJ) {\n\t\t\t\t// finished all editor selections\n\t\t\t\tmatches.push(match);\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tconst cmp = Range.compareRangesUsingStarts(\n\t\t\t\t\tmatch,\n\t\t\t\t\tselections[j],\n\t\t\t\t);\n\t\t\t\tif (cmp < 0) {\n\t\t\t\t\t// match is before sel\n\t\t\t\t\tif (\n\t\t\t\t\t\tselections[j].isEmpty() ||\n\t\t\t\t\t\t!Range.areIntersecting(match, selections[j])\n\t\t\t\t\t) {\n\t\t\t\t\t\tmatches.push(match);\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t} else if (cmp > 0) {\n\t\t\t\t\t// sel is before match\n\t\t\t\t\tj++;\n\t\t\t\t} else {\n\t\t\t\t\t// sel is equal to match\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst occurrenceHighlighting: boolean =\n\t\t\tthis.editor.getOption(EditorOption.occurrencesHighlight) !== \"off\";\n\t\tconst hasSemanticHighlights =\n\t\t\tthis._languageFeaturesService.documentHighlightProvider.has(\n\t\t\t\tmodel,\n\t\t\t) && occurrenceHighlighting;\n\t\tconst decorations = matches.map((r) => {\n\t\t\treturn {\n\t\t\t\trange: r,\n\t\t\t\toptions: getSelectionHighlightDecorationOptions(\n\t\t\t\t\thasSemanticHighlights,\n\t\t\t\t),\n\t\t\t};\n\t\t});\n\n\t\tthis._decorations.set(decorations);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._setState(null);\n\t\tsuper.dispose();\n\t}\n}\n\nfunction modelRangesContainSameText(\n\tmodel: ITextModel,\n\tranges: Range[],\n\tmatchCase: boolean,\n): boolean {\n\tconst selectedText = getValueInRange(model, ranges[0], !matchCase);\n\tfor (let i = 1, len = ranges.length; i < len; i++) {\n\t\tconst range = ranges[i];\n\t\tif (range.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst thisSelectedText = getValueInRange(model, range, !matchCase);\n\t\tif (selectedText !== thisSelectedText) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction getValueInRange(\n\tmodel: ITextModel,\n\trange: Range,\n\ttoLowerCase: boolean,\n): string {\n\tconst text = model.getValueInRange(range);\n\treturn toLowerCase ? text.toLowerCase() : text;\n}\n\nexport class FocusNextCursor extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.focusNextCursor\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"mutlicursor.focusNextCursor\",\n\t\t\t\t\"Focus Next Cursor\",\n\t\t\t),\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\"mutlicursor.focusNextCursor.description\",\n\t\t\t\t\t\"Focuses the next cursor\",\n\t\t\t\t),\n\t\t\t\targs: [],\n\t\t\t},\n\t\t\talias: \"Focus Next Cursor\",\n\t\t\tprecondition: undefined,\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tif (viewModel.cursorConfig.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewModel.model.pushStackElement();\n\t\tconst previousCursorState = Array.from(viewModel.getCursorStates());\n\t\tconst firstCursor = previousCursorState.shift();\n\t\tif (!firstCursor) {\n\t\t\treturn;\n\t\t}\n\t\tpreviousCursorState.push(firstCursor);\n\n\t\tviewModel.setCursorStates(\n\t\t\targs.source,\n\t\t\tCursorChangeReason.Explicit,\n\t\t\tpreviousCursorState,\n\t\t);\n\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nexport class FocusPreviousCursor extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.focusPreviousCursor\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"mutlicursor.focusPreviousCursor\",\n\t\t\t\t\"Focus Previous Cursor\",\n\t\t\t),\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\"mutlicursor.focusPreviousCursor.description\",\n\t\t\t\t\t\"Focuses the previous cursor\",\n\t\t\t\t),\n\t\t\t\targs: [],\n\t\t\t},\n\t\t\talias: \"Focus Previous Cursor\",\n\t\t\tprecondition: undefined,\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tif (viewModel.cursorConfig.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewModel.model.pushStackElement();\n\t\tconst previousCursorState = Array.from(viewModel.getCursorStates());\n\t\tconst firstCursor = previousCursorState.pop();\n\t\tif (!firstCursor) {\n\t\t\treturn;\n\t\t}\n\t\tpreviousCursorState.unshift(firstCursor);\n\n\t\tviewModel.setCursorStates(\n\t\t\targs.source,\n\t\t\tCursorChangeReason.Explicit,\n\t\t\tpreviousCursorState,\n\t\t);\n\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nregisterEditorContribution(\n\tMultiCursorSelectionController.ID,\n\tMultiCursorSelectionController,\n\tEditorContributionInstantiation.Lazy,\n);\nregisterEditorContribution(\n\tSelectionHighlighter.ID,\n\tSelectionHighlighter,\n\tEditorContributionInstantiation.AfterFirstRender,\n);\n\nregisterEditorAction(InsertCursorAbove);\nregisterEditorAction(InsertCursorBelow);\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\nregisterEditorAction(AddSelectionToNextFindMatchAction);\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\nregisterEditorAction(SelectHighlightsAction);\nregisterEditorAction(CompatChangeAll);\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\nregisterEditorAction(InsertCursorAtTopOfLineSelected);\nregisterEditorAction(FocusNextCursor);\nregisterEditorAction(FocusPreviousCursor);\n"],
  "mappings": "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",
  "names": ["findState"]
}
