{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/multicursor/browser/multicursor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { KeyChord, KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Constants } from '../../../../base/common/uint.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorContributionInstantiation, registerEditorAction, registerEditorContribution, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { CursorState } from '../../../common/cursorCommon.js';\nimport { CursorChangeReason, ICursorSelectionChangedEvent } from '../../../common/cursorEvents.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorContribution, IEditorDecorationsCollection, ScrollType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { FindMatch, ITextModel } from '../../../common/model.js';\nimport { CommonFindController } from '../../find/browser/findController.js';\nimport { FindOptionOverride, INewFindReplaceState } from '../../find/browser/findState.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { getSelectionHighlightDecorationOptions } from '../../wordHighlighter/browser/highlightDecorations.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\n\nfunction announceCursorChange(previousCursorState: CursorState[], cursorState: CursorState[]): void {\n\tconst cursorDiff = cursorState.filter(cs => !previousCursorState.find(pcs => pcs.equals(cs)));\n\tif (cursorDiff.length >= 1) {\n\t\tconst cursorPositions = cursorDiff.map(cs => `line ${cs.viewState.position.lineNumber} column ${cs.viewState.position.column}`).join(', ');\n\t\tconst msg = cursorDiff.length === 1 ? nls.localize('cursorAdded', \"Cursor added: {0}\", cursorPositions) : nls.localize('cursorsAdded', \"Cursors added: {0}\", cursorPositions);\n\t\tstatus(msg);\n\t}\n}\n\nexport class InsertCursorAbove extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.insertCursorAbove',\n\t\t\tlabel: nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"),\n\t\t\talias: 'Add Cursor Above',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.UpArrow,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.UpArrow,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.UpArrow]\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '3_multi',\n\t\t\t\ttitle: nls.localize({ key: 'miInsertCursorAbove', comment: ['&& denotes a mnemonic'] }, \"&&Add Cursor Above\"),\n\t\t\t\torder: 2\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet useLogicalLine = true;\n\t\tif (args && args.logicalLine === false) {\n\t\t\tuseLogicalLine = false;\n\t\t}\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tif (viewModel.cursorConfig.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewModel.model.pushStackElement();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tviewModel.setCursorStates(\n\t\t\targs.source,\n\t\t\tCursorChangeReason.Explicit,\n\t\t\tCursorMoveCommands.addCursorUp(viewModel, previousCursorState, useLogicalLine)\n\t\t);\n\t\tviewModel.revealTopMostCursor(args.source);\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nexport class InsertCursorBelow extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.insertCursorBelow',\n\t\t\tlabel: nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"),\n\t\t\talias: 'Add Cursor Below',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.DownArrow,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.DownArrow,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.DownArrow]\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '3_multi',\n\t\t\t\ttitle: nls.localize({ key: 'miInsertCursorBelow', comment: ['&& denotes a mnemonic'] }, \"A&&dd Cursor Below\"),\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet useLogicalLine = true;\n\t\tif (args && args.logicalLine === false) {\n\t\t\tuseLogicalLine = false;\n\t\t}\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tif (viewModel.cursorConfig.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewModel.model.pushStackElement();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tviewModel.setCursorStates(\n\t\t\targs.source,\n\t\t\tCursorChangeReason.Explicit,\n\t\t\tCursorMoveCommands.addCursorDown(viewModel, previousCursorState, useLogicalLine)\n\t\t);\n\t\tviewModel.revealBottomMostCursor(args.source);\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nclass InsertCursorAtEndOfEachLineSelected extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.insertCursorAtEndOfEachLineSelected',\n\t\t\tlabel: nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Add Cursors to Line Ends\"),\n\t\t\talias: 'Add Cursors to Line Ends',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyI,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '3_multi',\n\t\t\t\ttitle: nls.localize({ key: 'miInsertCursorAtEndOfEachLineSelected', comment: ['&& denotes a mnemonic'] }, \"Add C&&ursors to Line Ends\"),\n\t\t\t\torder: 4\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getCursorsForSelection(selection: Selection, model: ITextModel, result: Selection[]): void {\n\t\tif (selection.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = selection.startLineNumber; i < selection.endLineNumber; i++) {\n\t\t\tconst currentLineMaxColumn = model.getLineMaxColumn(i);\n\t\t\tresult.push(new Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));\n\t\t}\n\t\tif (selection.endColumn > 1) {\n\t\t\tresult.push(new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));\n\t\t}\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = editor.getModel();\n\t\tconst selections = editor.getSelections();\n\t\tconst viewModel = editor._getViewModel();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tconst newSelections: Selection[] = [];\n\t\tselections.forEach((sel) => this.getCursorsForSelection(sel, model, newSelections));\n\n\t\tif (newSelections.length > 0) {\n\t\t\teditor.setSelections(newSelections);\n\t\t}\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nclass InsertCursorAtEndOfLineSelected extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.addCursorsToBottom',\n\t\t\tlabel: nls.localize('mutlicursor.addCursorsToBottom', \"Add Cursors To Bottom\"),\n\t\t\talias: 'Add Cursors To Bottom',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selections = editor.getSelections();\n\t\tconst lineCount = editor.getModel().getLineCount();\n\n\t\tconst newSelections: Selection[] = [];\n\t\tfor (let i = selections[0].startLineNumber; i <= lineCount; i++) {\n\t\t\tnewSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n\t\t}\n\n\t\tconst viewModel = editor._getViewModel();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tif (newSelections.length > 0) {\n\t\t\teditor.setSelections(newSelections);\n\t\t}\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nclass InsertCursorAtTopOfLineSelected extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.addCursorsToTop',\n\t\t\tlabel: nls.localize('mutlicursor.addCursorsToTop', \"Add Cursors To Top\"),\n\t\t\talias: 'Add Cursors To Top',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selections = editor.getSelections();\n\n\t\tconst newSelections: Selection[] = [];\n\t\tfor (let i = selections[0].startLineNumber; i >= 1; i--) {\n\t\t\tnewSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n\t\t}\n\n\t\tconst viewModel = editor._getViewModel();\n\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\tif (newSelections.length > 0) {\n\t\t\teditor.setSelections(newSelections);\n\t\t}\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nexport class MultiCursorSessionResult {\n\tconstructor(\n\t\tpublic readonly selections: Selection[],\n\t\tpublic readonly revealRange: Range,\n\t\tpublic readonly revealScrollType: ScrollType\n\t) { }\n}\n\nexport class MultiCursorSession {\n\n\tpublic static create(editor: ICodeEditor, findController: CommonFindController): MultiCursorSession | null {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\t\tconst findState = findController.getState();\n\n\t\t// Find widget owns entirely what we search for if:\n\t\t//  - focus is not in the editor (i.e. it is in the find widget)\n\t\t//  - and the search widget is visible\n\t\t//  - and the search string is non-empty\n\t\tif (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) {\n\t\t\t// Find widget owns what is searched for\n\t\t\treturn new MultiCursorSession(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);\n\t\t}\n\n\t\t// Otherwise, the selection gives the search text, and the find widget gives the search settings\n\t\t// The exception is the find state disassociation case: when beginning with a single, collapsed selection\n\t\tlet isDisconnectedFromFindController = false;\n\t\tlet wholeWord: boolean;\n\t\tlet matchCase: boolean;\n\t\tconst selections = editor.getSelections();\n\t\tif (selections.length === 1 && selections[0].isEmpty()) {\n\t\t\tisDisconnectedFromFindController = true;\n\t\t\twholeWord = true;\n\t\t\tmatchCase = true;\n\t\t} else {\n\t\t\twholeWord = findState.wholeWord;\n\t\t\tmatchCase = findState.matchCase;\n\t\t}\n\n\t\t// Selection owns what is searched for\n\t\tconst s = editor.getSelection();\n\n\t\tlet searchText: string;\n\t\tlet currentMatch: Selection | null = null;\n\n\t\tif (s.isEmpty()) {\n\t\t\t// selection is empty => expand to current word\n\t\t\tconst word = editor.getConfiguredWordAtPosition(s.getStartPosition());\n\t\t\tif (!word) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tsearchText = word.word;\n\t\t\tcurrentMatch = new Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);\n\t\t} else {\n\t\t\tsearchText = editor.getModel().getValueInRange(s).replace(/\\r\\n/g, '\\n');\n\t\t}\n\n\t\treturn new MultiCursorSession(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tpublic readonly findController: CommonFindController,\n\t\tpublic readonly isDisconnectedFromFindController: boolean,\n\t\tpublic readonly searchText: string,\n\t\tpublic readonly wholeWord: boolean,\n\t\tpublic readonly matchCase: boolean,\n\t\tpublic currentMatch: Selection | null\n\t) { }\n\n\tpublic addSelectionToNextFindMatch(): MultiCursorSessionResult | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst nextMatch = this._getNextMatch();\n\t\tif (!nextMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\treturn new MultiCursorSessionResult(allSelections.concat(nextMatch), nextMatch, ScrollType.Smooth);\n\t}\n\n\tpublic moveSelectionToNextFindMatch(): MultiCursorSessionResult | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst nextMatch = this._getNextMatch();\n\t\tif (!nextMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\treturn new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, ScrollType.Smooth);\n\t}\n\n\tprivate _getNextMatch(): Selection | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.currentMatch) {\n\t\t\tconst result = this.currentMatch;\n\t\t\tthis.currentMatch = null;\n\t\t\treturn result;\n\t\t}\n\n\t\tthis.findController.highlightFindOptions();\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\tconst lastAddedSelection = allSelections[allSelections.length - 1];\n\t\tconst nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, false);\n\n\t\tif (!nextMatch) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);\n\t}\n\n\tpublic addSelectionToPreviousFindMatch(): MultiCursorSessionResult | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst previousMatch = this._getPreviousMatch();\n\t\tif (!previousMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\treturn new MultiCursorSessionResult(allSelections.concat(previousMatch), previousMatch, ScrollType.Smooth);\n\t}\n\n\tpublic moveSelectionToPreviousFindMatch(): MultiCursorSessionResult | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst previousMatch = this._getPreviousMatch();\n\t\tif (!previousMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\treturn new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, ScrollType.Smooth);\n\t}\n\n\tprivate _getPreviousMatch(): Selection | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.currentMatch) {\n\t\t\tconst result = this.currentMatch;\n\t\t\tthis.currentMatch = null;\n\t\t\treturn result;\n\t\t}\n\n\t\tthis.findController.highlightFindOptions();\n\n\t\tconst allSelections = this._editor.getSelections();\n\t\tconst lastAddedSelection = allSelections[allSelections.length - 1];\n\t\tconst previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, false);\n\n\t\tif (!previousMatch) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);\n\t}\n\n\tpublic selectAll(searchScope: Range[] | null): FindMatch[] {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.findController.highlightFindOptions();\n\n\t\tconst editorModel = this._editor.getModel();\n\t\tif (searchScope) {\n\t\t\treturn editorModel.findMatches(this.searchText, searchScope, false, this.matchCase, this.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, false, Constants.MAX_SAFE_SMALL_INTEGER);\n\t\t}\n\t\treturn editorModel.findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, false, Constants.MAX_SAFE_SMALL_INTEGER);\n\t}\n}\n\nexport class MultiCursorSelectionController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.multiCursorController';\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate _ignoreSelectionChange: boolean;\n\tprivate _session: MultiCursorSession | null;\n\tprivate readonly _sessionDispose = this._register(new DisposableStore());\n\n\tpublic static get(editor: ICodeEditor): MultiCursorSelectionController | null {\n\t\treturn editor.getContribution<MultiCursorSelectionController>(MultiCursorSelectionController.ID);\n\t}\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._ignoreSelectionChange = false;\n\t\tthis._session = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._endSession();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _beginSessionIfNeeded(findController: CommonFindController): void {\n\t\tif (!this._session) {\n\t\t\t// Create a new session\n\t\t\tconst session = MultiCursorSession.create(this._editor, findController);\n\t\t\tif (!session) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._session = session;\n\n\t\t\tconst newState: INewFindReplaceState = { searchString: this._session.searchText };\n\t\t\tif (this._session.isDisconnectedFromFindController) {\n\t\t\t\tnewState.wholeWordOverride = FindOptionOverride.True;\n\t\t\t\tnewState.matchCaseOverride = FindOptionOverride.True;\n\t\t\t\tnewState.isRegexOverride = FindOptionOverride.False;\n\t\t\t}\n\t\t\tfindController.getState().change(newState, false);\n\n\t\t\tthis._sessionDispose.add(this._editor.onDidChangeCursorSelection((e) => {\n\t\t\t\tif (this._ignoreSelectionChange) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._endSession();\n\t\t\t}));\n\t\t\tthis._sessionDispose.add(this._editor.onDidBlurEditorText(() => {\n\t\t\t\tthis._endSession();\n\t\t\t}));\n\t\t\tthis._sessionDispose.add(findController.getState().onFindReplaceStateChange((e) => {\n\t\t\t\tif (e.matchCase || e.wholeWord) {\n\t\t\t\t\tthis._endSession();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate _endSession(): void {\n\t\tthis._sessionDispose.clear();\n\t\tif (this._session && this._session.isDisconnectedFromFindController) {\n\t\t\tconst newState: INewFindReplaceState = {\n\t\t\t\twholeWordOverride: FindOptionOverride.NotSet,\n\t\t\t\tmatchCaseOverride: FindOptionOverride.NotSet,\n\t\t\t\tisRegexOverride: FindOptionOverride.NotSet,\n\t\t\t};\n\t\t\tthis._session.findController.getState().change(newState, false);\n\t\t}\n\t\tthis._session = null;\n\t}\n\n\tprivate _setSelections(selections: Selection[]): void {\n\t\tthis._ignoreSelectionChange = true;\n\t\tthis._editor.setSelections(selections);\n\t\tthis._ignoreSelectionChange = false;\n\t}\n\n\tprivate _expandEmptyToWord(model: ITextModel, selection: Selection): Selection {\n\t\tif (!selection.isEmpty()) {\n\t\t\treturn selection;\n\t\t}\n\t\tconst word = this._editor.getConfiguredWordAtPosition(selection.getStartPosition());\n\t\tif (!word) {\n\t\t\treturn selection;\n\t\t}\n\t\treturn new Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n\t}\n\n\tprivate _applySessionResult(result: MultiCursorSessionResult | null): void {\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\t\tthis._setSelections(result.selections);\n\t\tif (result.revealRange) {\n\t\t\tthis._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);\n\t\t}\n\t}\n\n\tpublic getSession(findController: CommonFindController): MultiCursorSession | null {\n\t\treturn this._session;\n\t}\n\n\tpublic addSelectionToNextFindMatch(findController: CommonFindController): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._session) {\n\t\t\t// If there are multiple cursors, handle the case where they do not all select the same text.\n\t\t\tconst allSelections = this._editor.getSelections();\n\t\t\tif (allSelections.length > 1) {\n\t\t\t\tconst findState = findController.getState();\n\t\t\t\tconst matchCase = findState.matchCase;\n\t\t\t\tconst selectionsContainSameText = modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);\n\t\t\t\tif (!selectionsContainSameText) {\n\t\t\t\t\tconst model = this._editor.getModel();\n\t\t\t\t\tconst resultingSelections: Selection[] = [];\n\t\t\t\t\tfor (let i = 0, len = allSelections.length; i < len; i++) {\n\t\t\t\t\t\tresultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);\n\t\t\t\t\t}\n\t\t\t\t\tthis._editor.setSelections(resultingSelections);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._beginSessionIfNeeded(findController);\n\t\tif (this._session) {\n\t\t\tthis._applySessionResult(this._session.addSelectionToNextFindMatch());\n\t\t}\n\t}\n\n\tpublic addSelectionToPreviousFindMatch(findController: CommonFindController): void {\n\t\tthis._beginSessionIfNeeded(findController);\n\t\tif (this._session) {\n\t\t\tthis._applySessionResult(this._session.addSelectionToPreviousFindMatch());\n\t\t}\n\t}\n\n\tpublic moveSelectionToNextFindMatch(findController: CommonFindController): void {\n\t\tthis._beginSessionIfNeeded(findController);\n\t\tif (this._session) {\n\t\t\tthis._applySessionResult(this._session.moveSelectionToNextFindMatch());\n\t\t}\n\t}\n\n\tpublic moveSelectionToPreviousFindMatch(findController: CommonFindController): void {\n\t\tthis._beginSessionIfNeeded(findController);\n\t\tif (this._session) {\n\t\t\tthis._applySessionResult(this._session.moveSelectionToPreviousFindMatch());\n\t\t}\n\t}\n\n\tpublic selectAll(findController: CommonFindController): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet matches: FindMatch[] | null = null;\n\n\t\tconst findState = findController.getState();\n\n\t\t// Special case: find widget owns entirely what we search for if:\n\t\t// - focus is not in the editor (i.e. it is in the find widget)\n\t\t// - and the search widget is visible\n\t\t// - and the search string is non-empty\n\t\t// - and we're searching for a regex\n\t\tif (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) {\n\t\t\tconst editorModel = this._editor.getModel();\n\t\t\tif (findState.searchScope) {\n\t\t\t\tmatches = editorModel.findMatches(findState.searchString, findState.searchScope, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, false, Constants.MAX_SAFE_SMALL_INTEGER);\n\t\t\t} else {\n\t\t\t\tmatches = editorModel.findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, false, Constants.MAX_SAFE_SMALL_INTEGER);\n\t\t\t}\n\t\t} else {\n\n\t\t\tthis._beginSessionIfNeeded(findController);\n\t\t\tif (!this._session) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmatches = this._session.selectAll(findState.searchScope);\n\t\t}\n\n\t\tif (matches.length > 0) {\n\t\t\tconst editorSelection = this._editor.getSelection();\n\t\t\t// Have the primary cursor remain the one where the action was invoked\n\t\t\tfor (let i = 0, len = matches.length; i < len; i++) {\n\t\t\t\tconst match = matches[i];\n\t\t\t\tconst intersection = match.range.intersectRanges(editorSelection);\n\t\t\t\tif (intersection) {\n\t\t\t\t\t// bingo!\n\t\t\t\t\tmatches[i] = matches[0];\n\t\t\t\t\tmatches[0] = match;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._setSelections(matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn)));\n\t\t}\n\t}\n\n\tpublic selectAllUsingSelections(selections: Selection[]): void {\n\t\tif (selections.length > 0) {\n\t\t\tthis._setSelections(selections);\n\t\t}\n\t}\n}\n\nexport abstract class MultiCursorSelectionControllerAction extends EditorAction {\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst multiCursorController = MultiCursorSelectionController.get(editor);\n\t\tif (!multiCursorController) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewModel = editor._getViewModel();\n\t\tif (viewModel) {\n\t\t\tconst previousCursorState = viewModel.getCursorStates();\n\t\t\tconst findController = CommonFindController.get(editor);\n\t\t\tif (findController) {\n\t\t\t\tthis._run(multiCursorController, findController);\n\t\t\t} else {\n\t\t\t\tconst newFindController = accessor.get(IInstantiationService).createInstance(CommonFindController, editor);\n\t\t\t\tthis._run(multiCursorController, newFindController);\n\t\t\t\tnewFindController.dispose();\n\t\t\t}\n\n\t\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t\t}\n\t}\n\n\tprotected abstract _run(multiCursorController: MultiCursorSelectionController, findController: CommonFindController): void;\n}\n\nexport class AddSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.addSelectionToNextFindMatch',\n\t\t\tlabel: nls.localize('addSelectionToNextFindMatch', \"Add Selection To Next Find Match\"),\n\t\t\talias: 'Add Selection To Next Find Match',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyD,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '3_multi',\n\t\t\t\ttitle: nls.localize({ key: 'miAddSelectionToNextFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add &&Next Occurrence\"),\n\t\t\t\torder: 5\n\t\t\t}\n\t\t});\n\t}\n\tprotected _run(multiCursorController: MultiCursorSelectionController, findController: CommonFindController): void {\n\t\tmultiCursorController.addSelectionToNextFindMatch(findController);\n\t}\n}\n\nexport class AddSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.addSelectionToPreviousFindMatch',\n\t\t\tlabel: nls.localize('addSelectionToPreviousFindMatch', \"Add Selection To Previous Find Match\"),\n\t\t\talias: 'Add Selection To Previous Find Match',\n\t\t\tprecondition: undefined,\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '3_multi',\n\t\t\t\ttitle: nls.localize({ key: 'miAddSelectionToPreviousFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add P&&revious Occurrence\"),\n\t\t\t\torder: 6\n\t\t\t}\n\t\t});\n\t}\n\tprotected _run(multiCursorController: MultiCursorSelectionController, findController: CommonFindController): void {\n\t\tmultiCursorController.addSelectionToPreviousFindMatch(findController);\n\t}\n}\n\nexport class MoveSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.moveSelectionToNextFindMatch',\n\t\t\tlabel: nls.localize('moveSelectionToNextFindMatch', \"Move Last Selection To Next Find Match\"),\n\t\t\talias: 'Move Last Selection To Next Find Match',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyD),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\tprotected _run(multiCursorController: MultiCursorSelectionController, findController: CommonFindController): void {\n\t\tmultiCursorController.moveSelectionToNextFindMatch(findController);\n\t}\n}\n\nexport class MoveSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.moveSelectionToPreviousFindMatch',\n\t\t\tlabel: nls.localize('moveSelectionToPreviousFindMatch', \"Move Last Selection To Previous Find Match\"),\n\t\t\talias: 'Move Last Selection To Previous Find Match',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\tprotected _run(multiCursorController: MultiCursorSelectionController, findController: CommonFindController): void {\n\t\tmultiCursorController.moveSelectionToPreviousFindMatch(findController);\n\t}\n}\n\nexport class SelectHighlightsAction extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.selectHighlights',\n\t\t\tlabel: nls.localize('selectAllOccurrencesOfFindMatch', \"Select All Occurrences of Find Match\"),\n\t\t\talias: 'Select All Occurrences of Find Match',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyL,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '3_multi',\n\t\t\t\ttitle: nls.localize({ key: 'miSelectHighlights', comment: ['&& denotes a mnemonic'] }, \"Select All &&Occurrences\"),\n\t\t\t\torder: 7\n\t\t\t}\n\t\t});\n\t}\n\tprotected _run(multiCursorController: MultiCursorSelectionController, findController: CommonFindController): void {\n\t\tmultiCursorController.selectAll(findController);\n\t}\n}\n\nexport class CompatChangeAll extends MultiCursorSelectionControllerAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.changeAll',\n\t\t\tlabel: nls.localize('changeAll.label', \"Change All Occurrences\"),\n\t\t\talias: 'Change All Occurrences',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.editorTextFocus),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.F2,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.2\n\t\t\t}\n\t\t});\n\t}\n\tprotected _run(multiCursorController: MultiCursorSelectionController, findController: CommonFindController): void {\n\t\tmultiCursorController.selectAll(findController);\n\t}\n}\n\nclass SelectionHighlighterState {\n\tprivate readonly _modelVersionId: number = this._model.getVersionId();\n\tprivate _cachedFindMatches: Range[] | null = null;\n\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _searchText: string,\n\t\tprivate readonly _matchCase: boolean,\n\t\tprivate readonly _wordSeparators: string | null,\n\t\tprevState: SelectionHighlighterState | null\n\t) {\n\t\tif (prevState\n\t\t\t&& this._model === prevState._model\n\t\t\t&& this._searchText === prevState._searchText\n\t\t\t&& this._matchCase === prevState._matchCase\n\t\t\t&& this._wordSeparators === prevState._wordSeparators\n\t\t\t&& this._modelVersionId === prevState._modelVersionId\n\t\t) {\n\t\t\tthis._cachedFindMatches = prevState._cachedFindMatches;\n\t\t}\n\t}\n\n\tpublic findMatches(): Range[] {\n\t\tif (this._cachedFindMatches === null) {\n\t\t\tthis._cachedFindMatches = this._model.findMatches(this._searchText, true, false, this._matchCase, this._wordSeparators, false).map(m => m.range);\n\t\t\tthis._cachedFindMatches.sort(Range.compareRangesUsingStarts);\n\t\t}\n\t\treturn this._cachedFindMatches;\n\t}\n}\n\nexport class SelectionHighlighter extends Disposable implements IEditorContribution {\n\tpublic static readonly ID = 'editor.contrib.selectionHighlighter';\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate _isEnabled: boolean;\n\tprivate readonly _decorations: IEditorDecorationsCollection;\n\tprivate readonly updateSoon: RunOnceScheduler;\n\tprivate state: SelectionHighlighterState | null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService\n\t) {\n\t\tsuper();\n\t\tthis.editor = editor;\n\t\tthis._isEnabled = editor.getOption(EditorOption.selectionHighlight);\n\t\tthis._decorations = editor.createDecorationsCollection();\n\t\tthis.updateSoon = this._register(new RunOnceScheduler(() => this._update(), 300));\n\t\tthis.state = null;\n\n\t\tthis._register(editor.onDidChangeConfiguration((e) => {\n\t\t\tthis._isEnabled = editor.getOption(EditorOption.selectionHighlight);\n\t\t}));\n\t\tthis._register(editor.onDidChangeCursorSelection((e: ICursorSelectionChangedEvent) => {\n\n\t\t\tif (!this._isEnabled) {\n\t\t\t\t// Early exit if nothing needs to be done!\n\t\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.selection.isEmpty()) {\n\t\t\t\tif (e.reason === CursorChangeReason.Explicit) {\n\t\t\t\t\tif (this.state) {\n\t\t\t\t\t\t// no longer valid\n\t\t\t\t\t\tthis._setState(null);\n\t\t\t\t\t}\n\t\t\t\t\tthis.updateSoon.schedule();\n\t\t\t\t} else {\n\t\t\t\t\tthis._setState(null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t}));\n\t\tthis._register(editor.onDidChangeModel((e) => {\n\t\t\tthis._setState(null);\n\t\t}));\n\t\tthis._register(editor.onDidChangeModelContent((e) => {\n\t\t\tif (this._isEnabled) {\n\t\t\t\tthis.updateSoon.schedule();\n\t\t\t}\n\t\t}));\n\t\tconst findController = CommonFindController.get(editor);\n\t\tif (findController) {\n\t\t\tthis._register(findController.getState().onFindReplaceStateChange((e) => {\n\t\t\t\tthis._update();\n\t\t\t}));\n\t\t}\n\t\tthis.updateSoon.schedule();\n\t}\n\n\tprivate _update(): void {\n\t\tthis._setState(SelectionHighlighter._createState(this.state, this._isEnabled, this.editor));\n\t}\n\n\tprivate static _createState(oldState: SelectionHighlighterState | null, isEnabled: boolean, editor: ICodeEditor): SelectionHighlighterState | null {\n\t\tif (!isEnabled) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\t\tconst s = editor.getSelection();\n\t\tif (s.startLineNumber !== s.endLineNumber) {\n\t\t\t// multiline forbidden for perf reasons\n\t\t\treturn null;\n\t\t}\n\t\tconst multiCursorController = MultiCursorSelectionController.get(editor);\n\t\tif (!multiCursorController) {\n\t\t\treturn null;\n\t\t}\n\t\tconst findController = CommonFindController.get(editor);\n\t\tif (!findController) {\n\t\t\treturn null;\n\t\t}\n\t\tlet r = multiCursorController.getSession(findController);\n\t\tif (!r) {\n\t\t\tconst allSelections = editor.getSelections();\n\t\t\tif (allSelections.length > 1) {\n\t\t\t\tconst findState = findController.getState();\n\t\t\t\tconst matchCase = findState.matchCase;\n\t\t\t\tconst selectionsContainSameText = modelRangesContainSameText(editor.getModel(), allSelections, matchCase);\n\t\t\t\tif (!selectionsContainSameText) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tr = MultiCursorSession.create(editor, findController);\n\t\t}\n\t\tif (!r) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (r.currentMatch) {\n\t\t\t// This is an empty selection\n\t\t\t// Do not interfere with semantic word highlighting in the no selection case\n\t\t\treturn null;\n\t\t}\n\t\tif (/^[ \\t]+$/.test(r.searchText)) {\n\t\t\t// whitespace only selection\n\t\t\treturn null;\n\t\t}\n\t\tif (r.searchText.length > 200) {\n\t\t\t// very long selection\n\t\t\treturn null;\n\t\t}\n\n\t\t// TODO: better handling of this case\n\t\tconst findState = findController.getState();\n\t\tconst caseSensitive = findState.matchCase;\n\n\t\t// Return early if the find widget shows the exact same matches\n\t\tif (findState.isRevealed) {\n\t\t\tlet findStateSearchString = findState.searchString;\n\t\t\tif (!caseSensitive) {\n\t\t\t\tfindStateSearchString = findStateSearchString.toLowerCase();\n\t\t\t}\n\n\t\t\tlet mySearchString = r.searchText;\n\t\t\tif (!caseSensitive) {\n\t\t\t\tmySearchString = mySearchString.toLowerCase();\n\t\t\t}\n\n\t\t\tif (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn new SelectionHighlighterState(editor.getModel(), r.searchText, r.matchCase, r.wholeWord ? editor.getOption(EditorOption.wordSeparators) : null, oldState);\n\t}\n\n\tprivate _setState(newState: SelectionHighlighterState | null): void {\n\t\tthis.state = newState;\n\n\t\tif (!this.state) {\n\t\t\tthis._decorations.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (model.isTooLargeForTokenization()) {\n\t\t\t// the file is too large, so searching word under cursor in the whole document would be blocking the UI.\n\t\t\treturn;\n\t\t}\n\n\t\tconst allMatches = this.state.findMatches();\n\n\t\tconst selections = this.editor.getSelections();\n\t\tselections.sort(Range.compareRangesUsingStarts);\n\n\t\t// do not overlap with selection (issue #64 and #512)\n\t\tconst matches: Range[] = [];\n\t\tfor (let i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;) {\n\t\t\tconst match = allMatches[i];\n\n\t\t\tif (j >= lenJ) {\n\t\t\t\t// finished all editor selections\n\t\t\t\tmatches.push(match);\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tconst cmp = Range.compareRangesUsingStarts(match, selections[j]);\n\t\t\t\tif (cmp < 0) {\n\t\t\t\t\t// match is before sel\n\t\t\t\t\tif (selections[j].isEmpty() || !Range.areIntersecting(match, selections[j])) {\n\t\t\t\t\t\tmatches.push(match);\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t} else if (cmp > 0) {\n\t\t\t\t\t// sel is before match\n\t\t\t\t\tj++;\n\t\t\t\t} else {\n\t\t\t\t\t// sel is equal to match\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst occurrenceHighlighting: boolean = this.editor.getOption(EditorOption.occurrencesHighlight) !== 'off';\n\t\tconst hasSemanticHighlights = this._languageFeaturesService.documentHighlightProvider.has(model) && occurrenceHighlighting;\n\t\tconst decorations = matches.map(r => {\n\t\t\treturn {\n\t\t\t\trange: r,\n\t\t\t\toptions: getSelectionHighlightDecorationOptions(hasSemanticHighlights)\n\t\t\t};\n\t\t});\n\n\t\tthis._decorations.set(decorations);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._setState(null);\n\t\tsuper.dispose();\n\t}\n}\n\nfunction modelRangesContainSameText(model: ITextModel, ranges: Range[], matchCase: boolean): boolean {\n\tconst selectedText = getValueInRange(model, ranges[0], !matchCase);\n\tfor (let i = 1, len = ranges.length; i < len; i++) {\n\t\tconst range = ranges[i];\n\t\tif (range.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst thisSelectedText = getValueInRange(model, range, !matchCase);\n\t\tif (selectedText !== thisSelectedText) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction getValueInRange(model: ITextModel, range: Range, toLowerCase: boolean): string {\n\tconst text = model.getValueInRange(range);\n\treturn (toLowerCase ? text.toLowerCase() : text);\n}\n\nexport class FocusNextCursor extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.focusNextCursor',\n\t\t\tlabel: nls.localize('mutlicursor.focusNextCursor', \"Focus Next Cursor\"),\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize('mutlicursor.focusNextCursor.description', \"Focuses the next cursor\"),\n\t\t\t\targs: [],\n\t\t\t},\n\t\t\talias: 'Focus Next Cursor',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tif (viewModel.cursorConfig.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewModel.model.pushStackElement();\n\t\tconst previousCursorState = Array.from(viewModel.getCursorStates());\n\t\tconst firstCursor = previousCursorState.shift();\n\t\tif (!firstCursor) {\n\t\t\treturn;\n\t\t}\n\t\tpreviousCursorState.push(firstCursor);\n\n\t\tviewModel.setCursorStates(args.source, CursorChangeReason.Explicit, previousCursorState);\n\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nexport class FocusPreviousCursor extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.focusPreviousCursor',\n\t\t\tlabel: nls.localize('mutlicursor.focusPreviousCursor', \"Focus Previous Cursor\"),\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize('mutlicursor.focusPreviousCursor.description', \"Focuses the previous cursor\"),\n\t\t\t\targs: [],\n\t\t\t},\n\t\t\talias: 'Focus Previous Cursor',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tif (viewModel.cursorConfig.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewModel.model.pushStackElement();\n\t\tconst previousCursorState = Array.from(viewModel.getCursorStates());\n\t\tconst firstCursor = previousCursorState.pop();\n\t\tif (!firstCursor) {\n\t\t\treturn;\n\t\t}\n\t\tpreviousCursorState.unshift(firstCursor);\n\n\t\tviewModel.setCursorStates(args.source, CursorChangeReason.Explicit, previousCursorState);\n\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\tannounceCursorChange(previousCursorState, viewModel.getCursorStates());\n\t}\n}\n\nregisterEditorContribution(MultiCursorSelectionController.ID, MultiCursorSelectionController, EditorContributionInstantiation.Lazy);\nregisterEditorContribution(SelectionHighlighter.ID, SelectionHighlighter, EditorContributionInstantiation.AfterFirstRender);\n\nregisterEditorAction(InsertCursorAbove);\nregisterEditorAction(InsertCursorBelow);\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\nregisterEditorAction(AddSelectionToNextFindMatchAction);\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\nregisterEditorAction(SelectHighlightsAction);\nregisterEditorAction(CompatChangeAll);\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\nregisterEditorAction(InsertCursorAtTopOfLineSelected);\nregisterEditorAction(FocusNextCursor);\nregisterEditorAction(FocusPreviousCursor);\n"],
  "mappings": "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",
  "names": ["findState"]
}
