import s from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as d}from"../../../../../base/test/common/utils.js";import"../../../../common/core/range.js";import{Selection as e}from"../../../../common/core/selection.js";import{Handler as m}from"../../../../common/editorCommon.js";import{EndOfLineSequence as E}from"../../../../common/model.js";import{CommonFindController as u}from"../../../find/browser/findController.js";import{AddSelectionToNextFindMatchAction as g,InsertCursorAbove as h,InsertCursorBelow as q,MultiCursorSelectionController as a,SelectHighlightsAction as C}from"../../browser/multicursor.js";import{withTestCodeEditor as w}from"../../../../test/browser/testCodeEditor.js";import{ServiceCollection as b}from"../../../../../platform/instantiation/common/serviceCollection.js";import{IStorageService as A,InMemoryStorageService as f}from"../../../../../platform/storage/common/storage.js";suite("Multicursor",()=>{d(),test("issue #26393: Multiple cursors + Word wrap",()=>{w(["a".repeat(20),"a".repeat(20)],{wordWrap:"wordWrapColumn",wordWrapColumn:10},(i,r)=>{new q().run(null,i,{}),s.strictEqual(r.getCursorStates().length,2),s.strictEqual(r.getCursorStates()[0].viewState.position.lineNumber,1),s.strictEqual(r.getCursorStates()[1].viewState.position.lineNumber,3),i.setPosition({lineNumber:4,column:1}),new h().run(null,i,{}),s.strictEqual(r.getCursorStates().length,2),s.strictEqual(r.getCursorStates()[0].viewState.position.lineNumber,4),s.strictEqual(r.getCursorStates()[1].viewState.position.lineNumber,2)})}),test("issue #2205: Multi-cursor pastes in reverse order",()=>{w(["abc","def"],{},(i,r)=>{const c=new h;i.setSelection(new e(2,1,2,1)),c.run(null,i,{}),s.strictEqual(r.getSelections().length,2),i.trigger("test",m.Paste,{text:`1
2`,multicursorText:["1","2"]}),s.strictEqual(i.getModel().getLineContent(1),"1abc"),s.strictEqual(i.getModel().getLineContent(2),"2def")})}),test("issue #1336: Insert cursor below on last line adds a cursor to the end of the current line",()=>{w(["abc"],{},(i,r)=>{new q().run(null,i,{}),s.strictEqual(r.getSelections().length,1)})})});function S(i){return[i.startLineNumber,i.startColumn,i.endLineNumber,i.endColumn]}suite("Multicursor selection",()=>{d();const i=new b;i.set(A,new f),test("issue #8817: Cursor position changes when you cancel multicursor",()=>{w(["var x = (3 * 5)","var y = (3 * 5)","var z = (3 * 5)"],{serviceCollection:i},n=>{const t=n.registerAndInstantiateContribution(u.ID,u),l=n.registerAndInstantiateContribution(a.ID,a),o=new C;n.setSelection(new e(2,9,2,16)),o.run(null,n),s.deepStrictEqual(n.getSelections().map(S),[[2,9,2,16],[1,9,1,16],[3,9,3,16]]),n.trigger("test","removeSecondaryCursors",null),s.deepStrictEqual(S(n.getSelection()),[2,9,2,16]),l.dispose(),t.dispose()})}),test('issue #5400: "Select All Occurrences of Find Match" does not select all if find uses regex',()=>{w(["something","someething","someeething","nothing"],{serviceCollection:i},n=>{const t=n.registerAndInstantiateContribution(u.ID,u),l=n.registerAndInstantiateContribution(a.ID,a),o=new C;n.setSelection(new e(1,1,1,1)),t.getState().change({searchString:"some+thing",isRegex:!0,isRevealed:!0},!1),o.run(null,n),s.deepStrictEqual(n.getSelections().map(S),[[1,1,1,10],[2,1,2,11],[3,1,3,12]]),s.strictEqual(t.getState().searchString,"some+thing"),l.dispose(),t.dispose()})}),test("AddSelectionToNextFindMatchAction can work with multiline",()=>{w(["","qwe","rty","","qwe","","rty","qwe","rty"],{serviceCollection:i},n=>{const t=n.registerAndInstantiateContribution(u.ID,u),l=n.registerAndInstantiateContribution(a.ID,a),o=new g;n.setSelection(new e(2,1,3,4)),o.run(null,n),s.deepStrictEqual(n.getSelections().map(S),[[2,1,3,4],[8,1,9,4]]),n.trigger("test","removeSecondaryCursors",null),s.deepStrictEqual(S(n.getSelection()),[2,1,3,4]),l.dispose(),t.dispose()})}),test("issue #6661: AddSelectionToNextFindMatchAction can work with touching ranges",()=>{w(["abcabc","abc","abcabc"],{serviceCollection:i},n=>{const t=n.registerAndInstantiateContribution(u.ID,u),l=n.registerAndInstantiateContribution(a.ID,a),o=new g;n.setSelection(new e(1,1,1,4)),o.run(null,n),s.deepStrictEqual(n.getSelections().map(S),[[1,1,1,4],[1,4,1,7]]),o.run(null,n),o.run(null,n),o.run(null,n),s.deepStrictEqual(n.getSelections().map(S),[[1,1,1,4],[1,4,1,7],[2,1,2,4],[3,1,3,4],[3,4,3,7]]),n.trigger("test",m.Type,{text:"z"}),s.deepStrictEqual(n.getSelections().map(S),[[1,2,1,2],[1,3,1,3],[2,2,2,2],[3,2,3,2],[3,3,3,3]]),s.strictEqual(n.getValue(),["zz","z","zz"].join(`
`)),l.dispose(),t.dispose()})}),test("issue #23541: Multiline Ctrl+D does not work in CRLF files",()=>{w(["","qwe","rty","","qwe","","rty","qwe","rty"],{serviceCollection:i},n=>{n.getModel().setEOL(E.CRLF);const t=n.registerAndInstantiateContribution(u.ID,u),l=n.registerAndInstantiateContribution(a.ID,a),o=new g;n.setSelection(new e(2,1,3,4)),o.run(null,n),s.deepStrictEqual(n.getSelections().map(S),[[2,1,3,4],[8,1,9,4]]),n.trigger("test","removeSecondaryCursors",null),s.deepStrictEqual(S(n.getSelection()),[2,1,3,4]),l.dispose(),t.dispose()})});function r(n,t){w(n,{serviceCollection:i},l=>{const o=l.registerAndInstantiateContribution(u.ID,u),p=l.registerAndInstantiateContribution(a.ID,a);t(l,o),p.dispose(),o.dispose()})}function c(n,t){r(n,(l,o)=>{const p=new g;t(l,p,o)})}test("AddSelectionToNextFindMatchAction starting with single collapsed selection",()=>{c(["abc pizza","abc house","abc bar"],(t,l,o)=>{t.setSelections([new e(1,2,1,2)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4),new e(3,1,3,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4),new e(3,1,3,4)])})}),test("AddSelectionToNextFindMatchAction starting with two selections, one being collapsed 1)",()=>{c(["abc pizza","abc house","abc bar"],(t,l,o)=>{t.setSelections([new e(1,1,1,4),new e(2,2,2,2)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4),new e(3,1,3,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4),new e(3,1,3,4)])})}),test("AddSelectionToNextFindMatchAction starting with two selections, one being collapsed 2)",()=>{c(["abc pizza","abc house","abc bar"],(t,l,o)=>{t.setSelections([new e(1,2,1,2),new e(2,1,2,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4),new e(3,1,3,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4),new e(3,1,3,4)])})}),test("AddSelectionToNextFindMatchAction starting with all collapsed selections",()=>{c(["abc pizza","abc house","abc bar"],(t,l,o)=>{t.setSelections([new e(1,2,1,2),new e(2,2,2,2),new e(3,1,3,1)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4),new e(3,1,3,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4),new e(3,1,3,4)])})}),test("AddSelectionToNextFindMatchAction starting with all collapsed selections on different words",()=>{c(["abc pizza","abc house","abc bar"],(t,l,o)=>{t.setSelections([new e(1,6,1,6),new e(2,6,2,6),new e(3,6,3,6)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,5,1,10),new e(2,5,2,10),new e(3,5,3,8)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,5,1,10),new e(2,5,2,10),new e(3,5,3,8)])})}),test("issue #20651: AddSelectionToNextFindMatchAction case insensitive",()=>{c(["test","testte","Test","testte","test"],(t,l,o)=>{t.setSelections([new e(1,1,1,5)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,5),new e(2,1,2,5)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,5),new e(2,1,2,5),new e(3,1,3,5)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,5),new e(2,1,2,5),new e(3,1,3,5),new e(4,1,4,5)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,5),new e(2,1,2,5),new e(3,1,3,5),new e(4,1,4,5),new e(5,1,5,5)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,5),new e(2,1,2,5),new e(3,1,3,5),new e(4,1,4,5),new e(5,1,5,5)])})}),suite("Find state disassociation",()=>{const n=["app","apples","whatsapp","app","App"," app"];test("enters mode",()=>{c(n,(t,l,o)=>{t.setSelections([new e(1,2,1,2)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(4,1,4,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(4,1,4,4),new e(6,2,6,5)])})}),test("leaves mode when selection changes",()=>{c(n,(t,l,o)=>{t.setSelections([new e(1,2,1,2)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(4,1,4,4)]),t.setSelections([new e(1,1,1,4)]),l.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(2,1,2,4)])})}),test("Select Highlights respects mode ",()=>{r(n,(t,l)=>{const o=new C;t.setSelections([new e(1,2,1,2)]),o.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(4,1,4,4),new e(6,2,6,5)]),o.run(null,t),s.deepStrictEqual(t.getSelections(),[new e(1,1,1,4),new e(4,1,4,4),new e(6,2,6,5)])})})})});
