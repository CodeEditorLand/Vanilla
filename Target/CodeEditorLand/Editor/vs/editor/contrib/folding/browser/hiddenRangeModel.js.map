{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/folding/browser/hiddenRangeModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { findFirstIdxMonotonousOrArrLen } from \"../../../../base/common/arraysFind.js\";\n\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { countEOL } from \"../../../common/core/eolCounter.js\";\nimport { type IRange, Range } from \"../../../common/core/range.js\";\nimport type { Selection } from \"../../../common/core/selection.js\";\nimport type { IModelContentChangedEvent } from \"../../../common/textModelEvents.js\";\nimport type { FoldingModel } from \"./foldingModel.js\";\n\nexport class HiddenRangeModel {\n\tprivate readonly _foldingModel: FoldingModel;\n\tprivate _hiddenRanges: IRange[];\n\tprivate _foldingModelListener: IDisposable | null;\n\tprivate readonly _updateEventEmitter = new Emitter<IRange[]>();\n\tprivate _hasLineChanges = false;\n\n\tpublic get onDidChange(): Event<IRange[]> {\n\t\treturn this._updateEventEmitter.event;\n\t}\n\tpublic get hiddenRanges() {\n\t\treturn this._hiddenRanges;\n\t}\n\n\tpublic constructor(model: FoldingModel) {\n\t\tthis._foldingModel = model;\n\t\tthis._foldingModelListener = model.onDidChange((_) =>\n\t\t\tthis.updateHiddenRanges(),\n\t\t);\n\t\tthis._hiddenRanges = [];\n\t\tif (model.regions.length) {\n\t\t\tthis.updateHiddenRanges();\n\t\t}\n\t}\n\n\tpublic notifyChangeModelContent(e: IModelContentChangedEvent) {\n\t\tif (this._hiddenRanges.length && !this._hasLineChanges) {\n\t\t\tthis._hasLineChanges = e.changes.some((change) => {\n\t\t\t\treturn (\n\t\t\t\t\tchange.range.endLineNumber !==\n\t\t\t\t\t\tchange.range.startLineNumber ||\n\t\t\t\t\tcountEOL(change.text)[0] !== 0\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateHiddenRanges(): void {\n\t\tlet updateHiddenAreas = false;\n\t\tconst newHiddenAreas: IRange[] = [];\n\t\tlet i = 0; // index into hidden\n\t\tlet k = 0;\n\n\t\tlet lastCollapsedStart = Number.MAX_VALUE;\n\t\tlet lastCollapsedEnd = -1;\n\n\t\tconst ranges = this._foldingModel.regions;\n\t\tfor (; i < ranges.length; i++) {\n\t\t\tif (!ranges.isCollapsed(i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\n\t\t\tconst endLineNumber = ranges.getEndLineNumber(i);\n\t\t\tif (\n\t\t\t\tlastCollapsedStart <= startLineNumber &&\n\t\t\t\tendLineNumber <= lastCollapsedEnd\n\t\t\t) {\n\t\t\t\t// ignore ranges contained in collapsed regions\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!updateHiddenAreas &&\n\t\t\t\tk < this._hiddenRanges.length &&\n\t\t\t\tthis._hiddenRanges[k].startLineNumber === startLineNumber &&\n\t\t\t\tthis._hiddenRanges[k].endLineNumber === endLineNumber\n\t\t\t) {\n\t\t\t\t// reuse the old ranges\n\t\t\t\tnewHiddenAreas.push(this._hiddenRanges[k]);\n\t\t\t\tk++;\n\t\t\t} else {\n\t\t\t\tupdateHiddenAreas = true;\n\t\t\t\tnewHiddenAreas.push(\n\t\t\t\t\tnew Range(startLineNumber, 1, endLineNumber, 1),\n\t\t\t\t);\n\t\t\t}\n\t\t\tlastCollapsedStart = startLineNumber;\n\t\t\tlastCollapsedEnd = endLineNumber;\n\t\t}\n\t\tif (\n\t\t\tthis._hasLineChanges ||\n\t\t\tupdateHiddenAreas ||\n\t\t\tk < this._hiddenRanges.length\n\t\t) {\n\t\t\tthis.applyHiddenRanges(newHiddenAreas);\n\t\t}\n\t}\n\n\tprivate applyHiddenRanges(newHiddenAreas: IRange[]) {\n\t\tthis._hiddenRanges = newHiddenAreas;\n\t\tthis._hasLineChanges = false;\n\t\tthis._updateEventEmitter.fire(newHiddenAreas);\n\t}\n\n\tpublic hasRanges() {\n\t\treturn this._hiddenRanges.length > 0;\n\t}\n\n\tpublic isHidden(line: number): boolean {\n\t\treturn findRange(this._hiddenRanges, line) !== null;\n\t}\n\n\tpublic adjustSelections(selections: Selection[]): boolean {\n\t\tlet hasChanges = false;\n\t\tconst editorModel = this._foldingModel.textModel;\n\t\tlet lastRange: IRange | null = null;\n\n\t\tconst adjustLine = (line: number) => {\n\t\t\tif (!lastRange || !isInside(line, lastRange)) {\n\t\t\t\tlastRange = findRange(this._hiddenRanges, line);\n\t\t\t}\n\t\t\tif (lastRange) {\n\t\t\t\treturn lastRange.startLineNumber - 1;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\tfor (let i = 0, len = selections.length; i < len; i++) {\n\t\t\tlet selection = selections[i];\n\t\t\tconst adjustedStartLine = adjustLine(selection.startLineNumber);\n\t\t\tif (adjustedStartLine) {\n\t\t\t\tselection = selection.setStartPosition(\n\t\t\t\t\tadjustedStartLine,\n\t\t\t\t\teditorModel.getLineMaxColumn(adjustedStartLine),\n\t\t\t\t);\n\t\t\t\thasChanges = true;\n\t\t\t}\n\t\t\tconst adjustedEndLine = adjustLine(selection.endLineNumber);\n\t\t\tif (adjustedEndLine) {\n\t\t\t\tselection = selection.setEndPosition(\n\t\t\t\t\tadjustedEndLine,\n\t\t\t\t\teditorModel.getLineMaxColumn(adjustedEndLine),\n\t\t\t\t);\n\t\t\t\thasChanges = true;\n\t\t\t}\n\t\t\tselections[i] = selection;\n\t\t}\n\t\treturn hasChanges;\n\t}\n\n\tpublic dispose() {\n\t\tif (this.hiddenRanges.length > 0) {\n\t\t\tthis._hiddenRanges = [];\n\t\t\tthis._updateEventEmitter.fire(this._hiddenRanges);\n\t\t}\n\t\tif (this._foldingModelListener) {\n\t\t\tthis._foldingModelListener.dispose();\n\t\t\tthis._foldingModelListener = null;\n\t\t}\n\t}\n}\n\nfunction isInside(line: number, range: IRange) {\n\treturn line >= range.startLineNumber && line <= range.endLineNumber;\n}\nfunction findRange(ranges: IRange[], line: number): IRange | null {\n\tconst i =\n\t\tfindFirstIdxMonotonousOrArrLen(\n\t\t\tranges,\n\t\t\t(r) => line < r.startLineNumber,\n\t\t) - 1;\n\tif (i >= 0 && ranges[i].endLineNumber >= line) {\n\t\treturn ranges[i];\n\t}\n\treturn null;\n}\n"],
  "mappings": "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",
  "names": []
}
