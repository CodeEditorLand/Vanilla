{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/folding/browser/syntaxRangeProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { FoldingContext, FoldingRange, FoldingRangeProvider } from '../../../common/languages.js';\nimport { FoldingLimitReporter, RangeProvider } from './folding.js';\nimport { FoldingRegions, MAX_LINE_NUMBER } from './foldingRanges.js';\n\nexport interface IFoldingRangeData extends FoldingRange {\n\trank: number;\n}\n\nconst foldingContext: FoldingContext = {\n};\n\nconst ID_SYNTAX_PROVIDER = 'syntax';\n\nexport class SyntaxRangeProvider implements RangeProvider {\n\n\treadonly id = ID_SYNTAX_PROVIDER;\n\n\treadonly disposables: DisposableStore;\n\n\tconstructor(\n\t\tprivate readonly editorModel: ITextModel,\n\t\tprivate readonly providers: FoldingRangeProvider[],\n\t\treadonly handleFoldingRangesChange: () => void,\n\t\tprivate readonly foldingRangesLimit: FoldingLimitReporter,\n\t\tprivate readonly fallbackRangeProvider: RangeProvider | undefined // used when all providers return null\n\t) {\n\t\tthis.disposables = new DisposableStore();\n\t\tif (fallbackRangeProvider) {\n\t\t\tthis.disposables.add(fallbackRangeProvider);\n\t\t}\n\n\t\tfor (const provider of providers) {\n\t\t\tif (typeof provider.onDidChange === 'function') {\n\t\t\t\tthis.disposables.add(provider.onDidChange(handleFoldingRangesChange));\n\t\t\t}\n\t\t}\n\t}\n\n\tcompute(cancellationToken: CancellationToken): Promise<FoldingRegions | null> {\n\t\treturn collectSyntaxRanges(this.providers, this.editorModel, cancellationToken).then(ranges => {\n\t\t\tif (ranges) {\n\t\t\t\tconst res = sanitizeRanges(ranges, this.foldingRangesLimit);\n\t\t\t\treturn res;\n\t\t\t}\n\t\t\treturn this.fallbackRangeProvider?.compute(cancellationToken) ?? null;\n\t\t});\n\t}\n\n\tdispose() {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nfunction collectSyntaxRanges(providers: FoldingRangeProvider[], model: ITextModel, cancellationToken: CancellationToken): Promise<IFoldingRangeData[] | null> {\n\tlet rangeData: IFoldingRangeData[] | null = null;\n\tconst promises = providers.map((provider, i) => {\n\t\treturn Promise.resolve(provider.provideFoldingRanges(model, foldingContext, cancellationToken)).then(ranges => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (Array.isArray(ranges)) {\n\t\t\t\tif (!Array.isArray(rangeData)) {\n\t\t\t\t\trangeData = [];\n\t\t\t\t}\n\t\t\t\tconst nLines = model.getLineCount();\n\t\t\t\tfor (const r of ranges) {\n\t\t\t\t\tif (r.start > 0 && r.end > r.start && r.end <= nLines) {\n\t\t\t\t\t\trangeData.push({ start: r.start, end: r.end, rank: i, kind: r.kind });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, onUnexpectedExternalError);\n\t});\n\treturn Promise.all(promises).then(_ => {\n\t\treturn rangeData;\n\t});\n}\n\nclass RangesCollector {\n\tprivate readonly _startIndexes: number[];\n\tprivate readonly _endIndexes: number[];\n\tprivate readonly _nestingLevels: number[];\n\tprivate readonly _nestingLevelCounts: number[];\n\tprivate readonly _types: Array<string | undefined>;\n\tprivate _length: number;\n\tprivate readonly _foldingRangesLimit: FoldingLimitReporter;\n\n\tconstructor(foldingRangesLimit: FoldingLimitReporter) {\n\t\tthis._startIndexes = [];\n\t\tthis._endIndexes = [];\n\t\tthis._nestingLevels = [];\n\t\tthis._nestingLevelCounts = [];\n\t\tthis._types = [];\n\t\tthis._length = 0;\n\t\tthis._foldingRangesLimit = foldingRangesLimit;\n\t}\n\n\tpublic add(startLineNumber: number, endLineNumber: number, type: string | undefined, nestingLevel: number) {\n\t\tif (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\n\t\t\treturn;\n\t\t}\n\t\tconst index = this._length;\n\t\tthis._startIndexes[index] = startLineNumber;\n\t\tthis._endIndexes[index] = endLineNumber;\n\t\tthis._nestingLevels[index] = nestingLevel;\n\t\tthis._types[index] = type;\n\t\tthis._length++;\n\t\tif (nestingLevel < 30) {\n\t\t\tthis._nestingLevelCounts[nestingLevel] = (this._nestingLevelCounts[nestingLevel] || 0) + 1;\n\t\t}\n\t}\n\n\tpublic toIndentRanges() {\n\t\tconst limit = this._foldingRangesLimit.limit;\n\t\tif (this._length <= limit) {\n\t\t\tthis._foldingRangesLimit.update(this._length, false);\n\n\t\t\tconst startIndexes = new Uint32Array(this._length);\n\t\t\tconst endIndexes = new Uint32Array(this._length);\n\t\t\tfor (let i = 0; i < this._length; i++) {\n\t\t\t\tstartIndexes[i] = this._startIndexes[i];\n\t\t\t\tendIndexes[i] = this._endIndexes[i];\n\t\t\t}\n\t\t\treturn new FoldingRegions(startIndexes, endIndexes, this._types);\n\t\t} else {\n\t\t\tthis._foldingRangesLimit.update(this._length, limit);\n\n\t\t\tlet entries = 0;\n\t\t\tlet maxLevel = this._nestingLevelCounts.length;\n\t\t\tfor (let i = 0; i < this._nestingLevelCounts.length; i++) {\n\t\t\t\tconst n = this._nestingLevelCounts[i];\n\t\t\t\tif (n) {\n\t\t\t\t\tif (n + entries > limit) {\n\t\t\t\t\t\tmaxLevel = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tentries += n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst startIndexes = new Uint32Array(limit);\n\t\t\tconst endIndexes = new Uint32Array(limit);\n\t\t\tconst types: Array<string | undefined> = [];\n\t\t\tfor (let i = 0, k = 0; i < this._length; i++) {\n\t\t\t\tconst level = this._nestingLevels[i];\n\t\t\t\tif (level < maxLevel || (level === maxLevel && entries++ < limit)) {\n\t\t\t\t\tstartIndexes[k] = this._startIndexes[i];\n\t\t\t\t\tendIndexes[k] = this._endIndexes[i];\n\t\t\t\t\ttypes[k] = this._types[i];\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new FoldingRegions(startIndexes, endIndexes, types);\n\t\t}\n\n\t}\n\n}\n\nexport function sanitizeRanges(rangeData: IFoldingRangeData[], foldingRangesLimit: FoldingLimitReporter): FoldingRegions {\n\tconst sorted = rangeData.sort((d1, d2) => {\n\t\tlet diff = d1.start - d2.start;\n\t\tif (diff === 0) {\n\t\t\tdiff = d1.rank - d2.rank;\n\t\t}\n\t\treturn diff;\n\t});\n\tconst collector = new RangesCollector(foldingRangesLimit);\n\n\tlet top: IFoldingRangeData | undefined = undefined;\n\tconst previous: IFoldingRangeData[] = [];\n\tfor (const entry of sorted) {\n\t\tif (!top) {\n\t\t\ttop = entry;\n\t\t\tcollector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n\t\t} else {\n\t\t\tif (entry.start > top.start) {\n\t\t\t\tif (entry.end <= top.end) {\n\t\t\t\t\tprevious.push(top);\n\t\t\t\t\ttop = entry;\n\t\t\t\t\tcollector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n\t\t\t\t} else {\n\t\t\t\t\tif (entry.start > top.end) {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\ttop = previous.pop();\n\t\t\t\t\t\t} while (top && entry.start > top.end);\n\t\t\t\t\t\tif (top) {\n\t\t\t\t\t\t\tprevious.push(top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttop = entry;\n\t\t\t\t\t}\n\t\t\t\t\tcollector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn collector.toIndentRanges();\n}\n"],
  "mappings": "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",
  "names": []
}
