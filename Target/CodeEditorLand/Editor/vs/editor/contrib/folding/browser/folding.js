var j=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var w=(d,n,e,o)=>{for(var t=o>1?void 0:o?W(n,e):n,i=d.length-1,r;i>=0;i--)(r=d[i])&&(t=(o?r(n,e,t):r(t))||t);return o&&t&&j(n,e,t),t},I=(d,n)=>(e,o)=>n(e,o,d);import{Delayer as q,RunOnceScheduler as J,createCancelablePromise as Y}from"../../../../base/common/async.js";import{CancellationToken as $}from"../../../../base/common/cancellation.js";import{illegalArgument as N,onUnexpectedError as O}from"../../../../base/common/errors.js";import{KeyChord as R,KeyCode as g,KeyMod as s}from"../../../../base/common/keyCodes.js";import{Disposable as Q,DisposableStore as Z}from"../../../../base/common/lifecycle.js";import{escapeRegExpCharacters as ee}from"../../../../base/common/strings.js";import*as M from"../../../../base/common/types.js";import"./folding.css";import{Emitter as oe}from"../../../../base/common/event.js";import{StopWatch as te}from"../../../../base/common/stopwatch.js";import{URI as ie}from"../../../../base/common/uri.js";import*as u from"../../../../nls.js";import{CommandsRegistry as ne}from"../../../../platform/commands/common/commands.js";import{IConfigurationService as re}from"../../../../platform/configuration/common/configuration.js";import{IContextKeyService as le,RawContextKey as de}from"../../../../platform/contextkey/common/contextkey.js";import{KeybindingWeight as f}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{INotificationService as se}from"../../../../platform/notification/common/notification.js";import{MouseTargetType as k}from"../../../browser/editorBrowser.js";import{EditorAction as ae,EditorContributionInstantiation as ge,registerEditorAction as C,registerEditorContribution as ce,registerInstantiatedEditorAction as ue}from"../../../browser/editorExtensions.js";import{StableEditorScrollState as fe}from"../../../browser/stableEditorScroll.js";import{EditorOption as p}from"../../../common/config/editorOptions.js";import{ScrollType as pe}from"../../../common/editorCommon.js";import{EditorContextKeys as m}from"../../../common/editorContextKeys.js";import{FoldingRangeKind as L}from"../../../common/languages.js";import{ILanguageConfigurationService as T}from"../../../common/languages/languageConfigurationRegistry.js";import{ILanguageFeatureDebounceService as me}from"../../../common/services/languageFeatureDebounce.js";import{ILanguageFeaturesService as K}from"../../../common/services/languageFeatures.js";import{IModelService as he}from"../../../common/services/model.js";import{FoldingDecorationProvider as Ce}from"./foldingDecorations.js";import{FoldingModel as ve,getNextFoldLine as be,getParentFoldLine as Fe,getPreviousFoldLine as Re,setCollapseStateAtLevel as ye,setCollapseStateForMatchingLines as _,setCollapseStateForRest as U,setCollapseStateForType as D,setCollapseStateLevelsDown as x,setCollapseStateLevelsUp as z,setCollapseStateUp as Ee,toggleCollapseState as B}from"./foldingModel.js";import{FoldSource as Se,FoldingRegions as H}from"./foldingRanges.js";import{HiddenRangeModel as Me}from"./hiddenRangeModel.js";import{IndentRangeProvider as V}from"./indentRangeProvider.js";import{SyntaxRangeProvider as G}from"./syntaxRangeProvider.js";const c=new de("foldingEnabled",!1);let y=class extends Q{constructor(e,o,t,i,r,l){super();this.contextKeyService=o;this.languageConfigurationService=t;this.languageFeaturesService=l;this.editor=e,this._foldingLimitReporter=new Ie(e);const a=this.editor.getOptions();this._isEnabled=a.get(p.folding),this._useFoldingProviders=a.get(p.foldingStrategy)!=="indentation",this._unfoldOnClickAfterEndOfLine=a.get(p.unfoldOnClickAfterEndOfLine),this._restoringViewState=!1,this._currentModelHasFoldedImports=!1,this._foldingImportsByDefault=a.get(p.foldingImportsByDefault),this.updateDebounceInfo=r.for(l.foldingRangeProvider,"Folding",{min:200}),this.foldingModel=null,this.hiddenRangeModel=null,this.rangeProvider=null,this.foldingRegionPromise=null,this.foldingModelPromise=null,this.updateScheduler=null,this.cursorChangedScheduler=null,this.mouseDownInfo=null,this.foldingDecorationProvider=new Ce(e),this.foldingDecorationProvider.showFoldingControls=a.get(p.showFoldingControls),this.foldingDecorationProvider.showFoldingHighlights=a.get(p.foldingHighlight),this.foldingEnabled=c.bindTo(this.contextKeyService),this.foldingEnabled.set(this._isEnabled),this._register(this.editor.onDidChangeModel(()=>this.onModelChanged())),this._register(this.editor.onDidChangeConfiguration(F=>{if(F.hasChanged(p.folding)&&(this._isEnabled=this.editor.getOptions().get(p.folding),this.foldingEnabled.set(this._isEnabled),this.onModelChanged()),F.hasChanged(p.foldingMaximumRegions)&&this.onModelChanged(),F.hasChanged(p.showFoldingControls)||F.hasChanged(p.foldingHighlight)){const v=this.editor.getOptions();this.foldingDecorationProvider.showFoldingControls=v.get(p.showFoldingControls),this.foldingDecorationProvider.showFoldingHighlights=v.get(p.foldingHighlight),this.triggerFoldingModelChanged()}F.hasChanged(p.foldingStrategy)&&(this._useFoldingProviders=this.editor.getOptions().get(p.foldingStrategy)!=="indentation",this.onFoldingStrategyChanged()),F.hasChanged(p.unfoldOnClickAfterEndOfLine)&&(this._unfoldOnClickAfterEndOfLine=this.editor.getOptions().get(p.unfoldOnClickAfterEndOfLine)),F.hasChanged(p.foldingImportsByDefault)&&(this._foldingImportsByDefault=this.editor.getOptions().get(p.foldingImportsByDefault))})),this.onModelChanged()}static ID="editor.contrib.folding";static get(e){return e.getContribution(y.ID)}static _foldingRangeSelector;static getFoldingRangeProviders(e,o){const t=e.foldingRangeProvider.ordered(o);return y._foldingRangeSelector?.(t,o)??t}static setFoldingRangeProviderSelector(e){return y._foldingRangeSelector=e,{dispose:()=>{y._foldingRangeSelector=void 0}}}editor;_isEnabled;_useFoldingProviders;_unfoldOnClickAfterEndOfLine;_restoringViewState;_foldingImportsByDefault;_currentModelHasFoldedImports;foldingDecorationProvider;foldingModel;hiddenRangeModel;rangeProvider;foldingRegionPromise;foldingModelPromise;updateScheduler;updateDebounceInfo;foldingEnabled;cursorChangedScheduler;localToDispose=this._register(new Z);mouseDownInfo;_foldingLimitReporter;get limitReporter(){return this._foldingLimitReporter}saveViewState(){const e=this.editor.getModel();if(!e||!this._isEnabled||e.isTooLargeForTokenization())return{};if(this.foldingModel){const o=this.foldingModel.getMemento(),t=this.rangeProvider?this.rangeProvider.id:void 0;return{collapsedRegions:o,lineCount:e.getLineCount(),provider:t,foldedImports:this._currentModelHasFoldedImports}}}restoreViewState(e){const o=this.editor.getModel();if(!(!o||!this._isEnabled||o.isTooLargeForTokenization()||!this.hiddenRangeModel)&&e&&(this._currentModelHasFoldedImports=!!e.foldedImports,e.collapsedRegions&&e.collapsedRegions.length>0&&this.foldingModel)){this._restoringViewState=!0;try{this.foldingModel.applyMemento(e.collapsedRegions)}finally{this._restoringViewState=!1}}}onModelChanged(){this.localToDispose.clear();const e=this.editor.getModel();!this._isEnabled||!e||e.isTooLargeForTokenization()||(this._currentModelHasFoldedImports=!1,this.foldingModel=new ve(e,this.foldingDecorationProvider),this.localToDispose.add(this.foldingModel),this.hiddenRangeModel=new Me(this.foldingModel),this.localToDispose.add(this.hiddenRangeModel),this.localToDispose.add(this.hiddenRangeModel.onDidChange(o=>this.onHiddenRangesChanges(o))),this.updateScheduler=new q(this.updateDebounceInfo.get(e)),this.cursorChangedScheduler=new J(()=>this.revealCursor(),200),this.localToDispose.add(this.cursorChangedScheduler),this.localToDispose.add(this.languageFeaturesService.foldingRangeProvider.onDidChange(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelContent(o=>this.onDidChangeModelContent(o))),this.localToDispose.add(this.editor.onDidChangeCursorPosition(()=>this.onCursorPositionChanged())),this.localToDispose.add(this.editor.onMouseDown(o=>this.onEditorMouseDown(o))),this.localToDispose.add(this.editor.onMouseUp(o=>this.onEditorMouseUp(o))),this.localToDispose.add({dispose:()=>{this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.updateScheduler?.cancel(),this.updateScheduler=null,this.foldingModel=null,this.foldingModelPromise=null,this.hiddenRangeModel=null,this.cursorChangedScheduler=null,this.rangeProvider?.dispose(),this.rangeProvider=null}}),this.triggerFoldingModelChanged())}onFoldingStrategyChanged(){this.rangeProvider?.dispose(),this.rangeProvider=null,this.triggerFoldingModelChanged()}getRangeProvider(e){if(this.rangeProvider)return this.rangeProvider;const o=new V(e,this.languageConfigurationService,this._foldingLimitReporter);if(this.rangeProvider=o,this._useFoldingProviders&&this.foldingModel){const t=y.getFoldingRangeProviders(this.languageFeaturesService,e);t.length>0&&(this.rangeProvider=new G(e,t,()=>this.triggerFoldingModelChanged(),this._foldingLimitReporter,o))}return this.rangeProvider}getFoldingModel(){return this.foldingModelPromise}onDidChangeModelContent(e){this.hiddenRangeModel?.notifyChangeModelContent(e),this.triggerFoldingModelChanged()}triggerFoldingModelChanged(){this.updateScheduler&&(this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.foldingModelPromise=this.updateScheduler.trigger(()=>{const e=this.foldingModel;if(!e)return null;const o=new te,t=this.getRangeProvider(e.textModel),i=this.foldingRegionPromise=Y(r=>t.compute(r));return i.then(r=>{if(r&&i===this.foldingRegionPromise){let l;if(this._foldingImportsByDefault&&!this._currentModelHasFoldedImports){const v=r.setCollapsedAllOfType(L.Imports.value,!0);v&&(l=fe.capture(this.editor),this._currentModelHasFoldedImports=v)}const a=this.editor.getSelections();e.update(r,Le(a)),l?.restore(this.editor);const F=this.updateDebounceInfo.update(e.textModel,o.elapsed());this.updateScheduler&&(this.updateScheduler.defaultDelay=F)}return e})}).then(void 0,e=>(O(e),null)))}onHiddenRangesChanges(e){if(this.hiddenRangeModel&&e.length&&!this._restoringViewState){const o=this.editor.getSelections();o&&this.hiddenRangeModel.adjustSelections(o)&&this.editor.setSelections(o)}this.editor.setHiddenAreas(e,this)}onCursorPositionChanged(){this.hiddenRangeModel&&this.hiddenRangeModel.hasRanges()&&this.cursorChangedScheduler.schedule()}revealCursor(){const e=this.getFoldingModel();e&&e.then(o=>{if(o){const t=this.editor.getSelections();if(t&&t.length>0){const i=[];for(const r of t){const l=r.selectionStartLineNumber;this.hiddenRangeModel&&this.hiddenRangeModel.isHidden(l)&&i.push(...o.getAllRegionsAtLine(l,a=>a.isCollapsed&&l>a.startLineNumber))}i.length&&(o.toggleCollapseState(i),this.reveal(t[0].getPosition()))}}}).then(void 0,O)}onEditorMouseDown(e){if(this.mouseDownInfo=null,!this.hiddenRangeModel||!e.target||!e.target.range||!e.event.leftButton&&!e.event.middleButton)return;const o=e.target.range;let t=!1;switch(e.target.type){case k.GUTTER_LINE_DECORATIONS:{const i=e.target.detail,r=e.target.element.offsetLeft;if(i.offsetX-r<4)return;t=!0;break}case k.CONTENT_EMPTY:{if(this._unfoldOnClickAfterEndOfLine&&this.hiddenRangeModel.hasRanges()&&!e.target.detail.isAfterLines)break;return}case k.CONTENT_TEXT:{if(this.hiddenRangeModel.hasRanges()){const i=this.editor.getModel();if(i&&o.startColumn===i.getLineMaxColumn(o.startLineNumber))break}return}default:return}this.mouseDownInfo={lineNumber:o.startLineNumber,iconClicked:t}}onEditorMouseUp(e){const o=this.foldingModel;if(!o||!this.mouseDownInfo||!e.target)return;const t=this.mouseDownInfo.lineNumber,i=this.mouseDownInfo.iconClicked,r=e.target.range;if(!r||r.startLineNumber!==t)return;if(i){if(e.target.type!==k.GUTTER_LINE_DECORATIONS)return}else{const a=this.editor.getModel();if(!a||r.startColumn!==a.getLineMaxColumn(t))return}const l=o.getRegionAtLine(t);if(l&&l.startLineNumber===t){const a=l.isCollapsed;if(i||a){const F=e.event.altKey;let v=[];if(F){const E=b=>!b.containedBy(l)&&!l.containedBy(b),S=o.getRegionsInside(null,E);for(const b of S)b.isCollapsed&&v.push(b);v.length===0&&(v=S)}else{const E=e.event.middleButton||e.event.shiftKey;if(E)for(const S of o.getRegionsInside(l))S.isCollapsed===a&&v.push(S);(a||!E||v.length===0)&&v.push(l)}o.toggleCollapseState(v),this.reveal({lineNumber:t,column:1})}}}reveal(e){this.editor.revealPositionInCenterIfOutsideViewport(e,pe.Smooth)}};y=w([I(1,le),I(2,T),I(3,se),I(4,me),I(5,K)],y);class Ie{constructor(n){this.editor=n}get limit(){return this.editor.getOptions().get(p.foldingMaximumRegions)}_onDidChange=new oe;onDidChange=this._onDidChange.event;_computed=0;_limited=!1;get computed(){return this._computed}get limited(){return this._limited}update(n,e){(n!==this._computed||e!==this._limited)&&(this._computed=n,this._limited=e,this._onDidChange.fire())}}class h extends ae{runEditorCommand(n,e,o){const t=n.get(T),i=y.get(e);if(!i)return;const r=i.getFoldingModel();if(r)return this.reportTelemetry(n,e),r.then(l=>{if(l){this.invoke(i,l,e,o,t);const a=e.getSelection();a&&i.reveal(a.getStartPosition())}})}getSelectedLines(n){const e=n.getSelections();return e?e.map(o=>o.startLineNumber):[]}getLineNumbers(n,e){return n&&n.selectionLines?n.selectionLines.map(o=>o+1):this.getSelectedLines(e)}run(n,e){}}function Le(d){return!d||d.length===0?{startsInside:()=>!1}:{startsInside(n,e){for(const o of d){const t=o.startLineNumber;if(t>=n&&t<=e)return!0}return!1}}}function X(d){if(!M.isUndefined(d)){if(!M.isObject(d))return!1;const n=d;if(!M.isUndefined(n.levels)&&!M.isNumber(n.levels)||!M.isUndefined(n.direction)&&!M.isString(n.direction)||!M.isUndefined(n.selectionLines)&&(!Array.isArray(n.selectionLines)||!n.selectionLines.every(M.isNumber)))return!1}return!0}class xe extends h{constructor(){super({id:"editor.unfold",label:u.localize("unfoldAction.label","Unfold"),alias:"Unfold",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:s.CtrlCmd|s.Shift|g.BracketRight,mac:{primary:s.CtrlCmd|s.Alt|g.BracketRight},weight:f.EditorContrib},metadata:{description:"Unfold the content in the editor",args:[{name:"Unfold editor argument",description:`Property-value pairs that can be passed through this argument:
						* 'levels': Number of levels to unfold. If not set, defaults to 1.
						* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.
						* 'selectionLines': Array of the start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.
						`,constraint:X,schema:{type:"object",properties:{levels:{type:"number",default:1},direction:{type:"string",enum:["up","down"],default:"down"},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(n,e,o,t){const i=t&&t.levels||1,r=this.getLineNumbers(t,o);t&&t.direction==="up"?z(e,!1,i,r):x(e,!1,i,r)}}class Ae extends h{constructor(){super({id:"editor.unfoldRecursively",label:u.localize("unFoldRecursivelyAction.label","Unfold Recursively"),alias:"Unfold Recursively",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.BracketRight),weight:f.EditorContrib}})}invoke(n,e,o,t){x(e,!1,Number.MAX_VALUE,this.getSelectedLines(o))}}class ke extends h{constructor(){super({id:"editor.fold",label:u.localize("foldAction.label","Fold"),alias:"Fold",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:s.CtrlCmd|s.Shift|g.BracketLeft,mac:{primary:s.CtrlCmd|s.Alt|g.BracketLeft},weight:f.EditorContrib},metadata:{description:"Fold the content in the editor",args:[{name:"Fold editor argument",description:`Property-value pairs that can be passed through this argument:
							* 'levels': Number of levels to fold.
							* 'direction': If 'up', folds given number of levels up otherwise folds down.
							* 'selectionLines': Array of the start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.
							If no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.
						`,constraint:X,schema:{type:"object",properties:{levels:{type:"number"},direction:{type:"string",enum:["up","down"]},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(n,e,o,t){const i=this.getLineNumbers(t,o),r=t&&t.levels,l=t&&t.direction;typeof r!="number"&&typeof l!="string"?Ee(e,!0,i):l==="up"?z(e,!0,r||1,i):x(e,!0,r||1,i)}}class Pe extends h{constructor(){super({id:"editor.toggleFold",label:u.localize("toggleFoldAction.label","Toggle Fold"),alias:"Toggle Fold",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.KeyL),weight:f.EditorContrib}})}invoke(n,e,o){const t=this.getSelectedLines(o);B(e,1,t)}}class Te extends h{constructor(){super({id:"editor.foldRecursively",label:u.localize("foldRecursivelyAction.label","Fold Recursively"),alias:"Fold Recursively",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.BracketLeft),weight:f.EditorContrib}})}invoke(n,e,o){const t=this.getSelectedLines(o);x(e,!0,Number.MAX_VALUE,t)}}class _e extends h{constructor(){super({id:"editor.toggleFoldRecursively",label:u.localize("toggleFoldRecursivelyAction.label","Toggle Fold Recursively"),alias:"Toggle Fold Recursively",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|s.Shift|g.KeyL),weight:f.EditorContrib}})}invoke(n,e,o){const t=this.getSelectedLines(o);B(e,Number.MAX_VALUE,t)}}class De extends h{constructor(){super({id:"editor.foldAllBlockComments",label:u.localize("foldAllBlockComments.label","Fold All Block Comments"),alias:"Fold All Block Comments",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.Slash),weight:f.EditorContrib}})}invoke(n,e,o,t,i){if(e.regions.hasTypes())D(e,L.Comment.value,!0);else{const r=o.getModel();if(!r)return;const l=i.getLanguageConfiguration(r.getLanguageId()).comments;if(l&&l.blockCommentStartToken){const a=new RegExp("^\\s*"+ee(l.blockCommentStartToken));_(e,a,!0)}}}}class we extends h{constructor(){super({id:"editor.foldAllMarkerRegions",label:u.localize("foldAllMarkerRegions.label","Fold All Regions"),alias:"Fold All Regions",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.Digit8),weight:f.EditorContrib}})}invoke(n,e,o,t,i){if(e.regions.hasTypes())D(e,L.Region.value,!0);else{const r=o.getModel();if(!r)return;const l=i.getLanguageConfiguration(r.getLanguageId()).foldingRules;if(l&&l.markers&&l.markers.start){const a=new RegExp(l.markers.start);_(e,a,!0)}}}}class Ne extends h{constructor(){super({id:"editor.unfoldAllMarkerRegions",label:u.localize("unfoldAllMarkerRegions.label","Unfold All Regions"),alias:"Unfold All Regions",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.Digit9),weight:f.EditorContrib}})}invoke(n,e,o,t,i){if(e.regions.hasTypes())D(e,L.Region.value,!1);else{const r=o.getModel();if(!r)return;const l=i.getLanguageConfiguration(r.getLanguageId()).foldingRules;if(l&&l.markers&&l.markers.start){const a=new RegExp(l.markers.start);_(e,a,!1)}}}}class Oe extends h{constructor(){super({id:"editor.foldAllExcept",label:u.localize("foldAllExcept.label","Fold All Except Selected"),alias:"Fold All Except Selected",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.Minus),weight:f.EditorContrib}})}invoke(n,e,o){const t=this.getSelectedLines(o);U(e,!0,t)}}class Ke extends h{constructor(){super({id:"editor.unfoldAllExcept",label:u.localize("unfoldAllExcept.label","Unfold All Except Selected"),alias:"Unfold All Except Selected",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.Equal),weight:f.EditorContrib}})}invoke(n,e,o){const t=this.getSelectedLines(o);U(e,!1,t)}}class Ue extends h{constructor(){super({id:"editor.foldAll",label:u.localize("foldAllAction.label","Fold All"),alias:"Fold All",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.Digit0),weight:f.EditorContrib}})}invoke(n,e,o){x(e,!0)}}class ze extends h{constructor(){super({id:"editor.unfoldAll",label:u.localize("unfoldAllAction.label","Unfold All"),alias:"Unfold All",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.KeyJ),weight:f.EditorContrib}})}invoke(n,e,o){x(e,!1)}}class A extends h{static ID_PREFIX="editor.foldLevel";static ID=n=>A.ID_PREFIX+n;getFoldingLevel(){return Number.parseInt(this.id.substr(A.ID_PREFIX.length))}invoke(n,e,o){ye(e,this.getFoldingLevel(),!0,this.getSelectedLines(o))}}class Be extends h{constructor(){super({id:"editor.gotoParentFold",label:u.localize("gotoParentFold.label","Go to Parent Fold"),alias:"Go to Parent Fold",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,weight:f.EditorContrib}})}invoke(n,e,o){const t=this.getSelectedLines(o);if(t.length>0){const i=Fe(t[0],e);i!==null&&o.setSelection({startLineNumber:i,startColumn:1,endLineNumber:i,endColumn:1})}}}class He extends h{constructor(){super({id:"editor.gotoPreviousFold",label:u.localize("gotoPreviousFold.label","Go to Previous Folding Range"),alias:"Go to Previous Folding Range",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,weight:f.EditorContrib}})}invoke(n,e,o){const t=this.getSelectedLines(o);if(t.length>0){const i=Re(t[0],e);i!==null&&o.setSelection({startLineNumber:i,startColumn:1,endLineNumber:i,endColumn:1})}}}class Ve extends h{constructor(){super({id:"editor.gotoNextFold",label:u.localize("gotoNextFold.label","Go to Next Folding Range"),alias:"Go to Next Folding Range",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,weight:f.EditorContrib}})}invoke(n,e,o){const t=this.getSelectedLines(o);if(t.length>0){const i=be(t[0],e);i!==null&&o.setSelection({startLineNumber:i,startColumn:1,endLineNumber:i,endColumn:1})}}}class Ge extends h{constructor(){super({id:"editor.createFoldingRangeFromSelection",label:u.localize("createManualFoldRange.label","Create Folding Range from Selection"),alias:"Create Folding Range from Selection",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.Comma),weight:f.EditorContrib}})}invoke(n,e,o){const t=[],i=o.getSelections();if(i){for(const r of i){let l=r.endLineNumber;r.endColumn===1&&--l,l>r.startLineNumber&&(t.push({startLineNumber:r.startLineNumber,endLineNumber:l,type:void 0,isCollapsed:!0,source:Se.userDefined}),o.setSelection({startLineNumber:r.startLineNumber,startColumn:1,endLineNumber:r.startLineNumber,endColumn:1}))}if(t.length>0){t.sort((l,a)=>l.startLineNumber-a.startLineNumber);const r=H.sanitizeAndMerge(e.regions,t,o.getModel()?.getLineCount());e.updatePost(H.fromFoldRanges(r))}}}}class Xe extends h{constructor(){super({id:"editor.removeManualFoldingRanges",label:u.localize("removeManualFoldingRanges.label","Remove Manual Folding Ranges"),alias:"Remove Manual Folding Ranges",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.Period),weight:f.EditorContrib}})}invoke(n,e,o){const t=o.getSelections();if(t){const i=[];for(const r of t){const{startLineNumber:l,endLineNumber:a}=r;i.push(a>=l?{startLineNumber:l,endLineNumber:a}:{endLineNumber:a,startLineNumber:l})}e.removeManualRanges(i),n.triggerFoldingModelChanged()}}}class je extends h{constructor(){super({id:"editor.toggleImportFold",label:u.localize("toggleImportFold.label","Toggle Import Fold"),alias:"Toggle Import Fold",precondition:c,kbOpts:{kbExpr:m.editorTextFocus,weight:f.EditorContrib}})}async invoke(n,e){const o=[],t=e.regions;for(let i=t.length-1;i>=0;i--)t.getType(i)===L.Imports.value&&o.push(t.toRegion(i));e.toggleCollapseState(o),n.triggerFoldingModelChanged()}}ce(y.ID,y,ge.Eager),C(xe),C(Ae),C(ke),C(Te),C(_e),C(Ue),C(ze),C(De),C(we),C(Ne),C(Oe),C(Ke),C(Pe),C(Be),C(He),C(Ve),C(Ge),C(Xe),C(je);for(let d=1;d<=7;d++)ue(new A({id:A.ID(d),label:u.localize("foldLevelAction.label","Fold Level {0}",d),alias:`Fold Level ${d}`,precondition:c,kbOpts:{kbExpr:m.editorTextFocus,primary:R(s.CtrlCmd|g.KeyK,s.CtrlCmd|g.Digit0+d),weight:f.EditorContrib}}));ne.registerCommand("_executeFoldingRangeProvider",async(d,...n)=>{const[e]=n;if(!(e instanceof ie))throw N();const o=d.get(K),t=d.get(he).getModel(e);if(!t)throw N();const i=d.get(re);if(!i.getValue("editor.folding",{resource:e}))return[];const r=d.get(T),l=i.getValue("editor.foldingStrategy",{resource:e}),a={get limit(){return i.getValue("editor.foldingMaximumRegions",{resource:e})},update:(b,P)=>{}},F=new V(t,r,a);let v=F;if(l!=="indentation"){const b=y.getFoldingRangeProviders(o,t);b.length&&(v=new G(t,b,()=>{},a,F))}const E=await v.compute($.None),S=[];try{if(E)for(let b=0;b<E.length;b++){const P=E.getType(b);S.push({start:E.getStartLineNumber(b),end:E.getEndLineNumber(b),kind:P?L.fromValue(P):void 0})}return S}finally{v.dispose()}});export{y as FoldingController,Ie as RangesLimitReporter,Le as toSelectedLines};
