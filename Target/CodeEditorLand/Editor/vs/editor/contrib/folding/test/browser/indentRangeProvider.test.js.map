{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/folding/test/browser/indentRangeProvider.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { FoldingMarkers } from '../../../../common/languages/languageConfiguration.js';\nimport { computeRanges } from '../../browser/indentRangeProvider.js';\nimport { createTextModel } from '../../../../test/common/testTextModel.js';\n\ninterface ExpectedIndentRange {\n\tstartLineNumber: number;\n\tendLineNumber: number;\n\tparentIndex: number;\n}\n\nfunction assertRanges(lines: string[], expected: ExpectedIndentRange[], offside: boolean, markers?: FoldingMarkers): void {\n\tconst model = createTextModel(lines.join('\\n'));\n\tconst actual = computeRanges(model, offside, markers);\n\n\tconst actualRanges: ExpectedIndentRange[] = [];\n\tfor (let i = 0; i < actual.length; i++) {\n\t\tactualRanges[i] = r(actual.getStartLineNumber(i), actual.getEndLineNumber(i), actual.getParentIndex(i));\n\t}\n\tassert.deepStrictEqual(actualRanges, expected);\n\tmodel.dispose();\n}\n\nfunction r(startLineNumber: number, endLineNumber: number, parentIndex: number, marker = false): ExpectedIndentRange {\n\treturn { startLineNumber, endLineNumber, parentIndex };\n}\n\nsuite('Indentation Folding', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\ttest('Fold one level', () => {\n\t\tconst range = [\n\t\t\t'A',\n\t\t\t'  A',\n\t\t\t'  A',\n\t\t\t'  A'\n\t\t];\n\t\tassertRanges(range, [r(1, 4, -1)], true);\n\t\tassertRanges(range, [r(1, 4, -1)], false);\n\t});\n\n\ttest('Fold two levels', () => {\n\t\tconst range = [\n\t\t\t'A',\n\t\t\t'  A',\n\t\t\t'  A',\n\t\t\t'    A',\n\t\t\t'    A'\n\t\t];\n\t\tassertRanges(range, [r(1, 5, -1), r(3, 5, 0)], true);\n\t\tassertRanges(range, [r(1, 5, -1), r(3, 5, 0)], false);\n\t});\n\n\ttest('Fold three levels', () => {\n\t\tconst range = [\n\t\t\t'A',\n\t\t\t'  A',\n\t\t\t'    A',\n\t\t\t'      A',\n\t\t\t'A'\n\t\t];\n\t\tassertRanges(range, [r(1, 4, -1), r(2, 4, 0), r(3, 4, 1)], true);\n\t\tassertRanges(range, [r(1, 4, -1), r(2, 4, 0), r(3, 4, 1)], false);\n\t});\n\n\ttest('Fold decreasing indent', () => {\n\t\tconst range = [\n\t\t\t'    A',\n\t\t\t'  A',\n\t\t\t'A'\n\t\t];\n\t\tassertRanges(range, [], true);\n\t\tassertRanges(range, [], false);\n\t});\n\n\ttest('Fold Java', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'class A {',\n\t\t/* 2*/\t'  void foo() {',\n\t\t/* 3*/\t'    console.log();',\n\t\t/* 4*/\t'    console.log();',\n\t\t/* 5*/\t'  }',\n\t\t/* 6*/\t'',\n\t\t/* 7*/\t'  void bar() {',\n\t\t/* 8*/\t'    console.log();',\n\t\t/* 9*/\t'  }',\n\t\t/*10*/\t'}',\n\t\t/*11*/\t'interface B {',\n\t\t/*12*/\t'  void bar();',\n\t\t/*13*/\t'}',\n\t\t], [r(1, 9, -1), r(2, 4, 0), r(7, 8, 0), r(11, 12, -1)], false);\n\t});\n\n\ttest('Fold Javadoc', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'/**',\n\t\t/* 2*/\t' * Comment',\n\t\t/* 3*/\t' */',\n\t\t/* 4*/\t'class A {',\n\t\t/* 5*/\t'  void foo() {',\n\t\t/* 6*/\t'  }',\n\t\t/* 7*/\t'}',\n\t\t], [r(1, 3, -1), r(4, 6, -1)], false);\n\t});\n\ttest('Fold Whitespace Java', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'class A {',\n\t\t/* 2*/\t'',\n\t\t/* 3*/\t'  void foo() {',\n\t\t/* 4*/\t'     ',\n\t\t/* 5*/\t'     return 0;',\n\t\t/* 6*/\t'  }',\n\t\t/* 7*/\t'      ',\n\t\t/* 8*/\t'}',\n\t\t], [r(1, 7, -1), r(3, 5, 0)], false);\n\t});\n\n\ttest('Fold Whitespace Python', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'def a:',\n\t\t/* 2*/\t'  pass',\n\t\t/* 3*/\t'   ',\n\t\t/* 4*/\t'  def b:',\n\t\t/* 5*/\t'    pass',\n\t\t/* 6*/\t'  ',\n\t\t/* 7*/\t'      ',\n\t\t/* 8*/\t'def c: # since there was a deintent here'\n\t\t], [r(1, 5, -1), r(4, 5, 0)], true);\n\t});\n\n\ttest('Fold Tabs', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'class A {',\n\t\t/* 2*/\t'\\t\\t',\n\t\t/* 3*/\t'\\tvoid foo() {',\n\t\t/* 4*/\t'\\t \\t//hello',\n\t\t/* 5*/\t'\\t    return 0;',\n\t\t/* 6*/\t'  \\t}',\n\t\t/* 7*/\t'      ',\n\t\t/* 8*/\t'}',\n\t\t], [r(1, 7, -1), r(3, 5, 0)], false);\n\t});\n});\n\nconst markers: FoldingMarkers = {\n\tstart: /^\\s*#region\\b/,\n\tend: /^\\s*#endregion\\b/\n};\n\nsuite('Folding with regions', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\ttest('Inside region, indented', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'class A {',\n\t\t/* 2*/\t'  #region',\n\t\t/* 3*/\t'  void foo() {',\n\t\t/* 4*/\t'     ',\n\t\t/* 5*/\t'     return 0;',\n\t\t/* 6*/\t'  }',\n\t\t/* 7*/\t'  #endregion',\n\t\t/* 8*/\t'}',\n\t\t], [r(1, 7, -1), r(2, 7, 0, true), r(3, 5, 1)], false, markers);\n\t});\n\ttest('Inside region, not indented', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'var x;',\n\t\t/* 2*/\t'#region',\n\t\t/* 3*/\t'void foo() {',\n\t\t/* 4*/\t'     ',\n\t\t/* 5*/\t'     return 0;',\n\t\t/* 6*/\t'  }',\n\t\t/* 7*/\t'#endregion',\n\t\t/* 8*/\t'',\n\t\t], [r(2, 7, -1, true), r(3, 6, 0)], false, markers);\n\t});\n\ttest('Empty Regions', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'var x;',\n\t\t/* 2*/\t'#region',\n\t\t/* 3*/\t'#endregion',\n\t\t/* 4*/\t'#region',\n\t\t/* 5*/\t'',\n\t\t/* 6*/\t'#endregion',\n\t\t/* 7*/\t'var y;',\n\t\t], [r(2, 3, -1, true), r(4, 6, -1, true)], false, markers);\n\t});\n\ttest('Nested Regions', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'var x;',\n\t\t/* 2*/\t'#region',\n\t\t/* 3*/\t'#region',\n\t\t/* 4*/\t'',\n\t\t/* 5*/\t'#endregion',\n\t\t/* 6*/\t'#endregion',\n\t\t/* 7*/\t'var y;',\n\t\t], [r(2, 6, -1, true), r(3, 5, 0, true)], false, markers);\n\t});\n\ttest('Nested Regions 2', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'class A {',\n\t\t/* 2*/\t'  #region',\n\t\t/* 3*/\t'',\n\t\t/* 4*/\t'  #region',\n\t\t/* 5*/\t'',\n\t\t/* 6*/\t'  #endregion',\n\t\t/* 7*/\t'  // comment',\n\t\t/* 8*/\t'  #endregion',\n\t\t/* 9*/\t'}',\n\t\t], [r(1, 8, -1), r(2, 8, 0, true), r(4, 6, 1, true)], false, markers);\n\t});\n\ttest('Incomplete Regions', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'class A {',\n\t\t/* 2*/\t'#region',\n\t\t/* 3*/\t'  // comment',\n\t\t/* 4*/\t'}',\n\t\t], [r(2, 3, -1)], false, markers);\n\t});\n\ttest('Incomplete Regions 2', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'',\n\t\t/* 2*/\t'#region',\n\t\t/* 3*/\t'#region',\n\t\t/* 4*/\t'#region',\n\t\t/* 5*/\t'  // comment',\n\t\t/* 6*/\t'#endregion',\n\t\t/* 7*/\t'#endregion',\n\t\t/* 8*/\t' // hello',\n\t\t], [r(3, 7, -1, true), r(4, 6, 0, true)], false, markers);\n\t});\n\ttest('Indented region before', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'if (x)',\n\t\t/* 2*/\t'  return;',\n\t\t/* 3*/\t'',\n\t\t/* 4*/\t'#region',\n\t\t/* 5*/\t'  // comment',\n\t\t/* 6*/\t'#endregion',\n\t\t], [r(1, 3, -1), r(4, 6, -1, true)], false, markers);\n\t});\n\ttest('Indented region before 2', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'if (x)',\n\t\t/* 2*/\t'  log();',\n\t\t/* 3*/\t'',\n\t\t/* 4*/\t'    #region',\n\t\t/* 5*/\t'      // comment',\n\t\t/* 6*/\t'    #endregion',\n\t\t], [r(1, 6, -1), r(2, 6, 0), r(4, 6, 1, true)], false, markers);\n\t});\n\ttest('Indented region in-between', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'#region',\n\t\t/* 2*/\t'  // comment',\n\t\t/* 3*/\t'  if (x)',\n\t\t/* 4*/\t'    return;',\n\t\t/* 5*/\t'',\n\t\t/* 6*/\t'#endregion',\n\t\t], [r(1, 6, -1, true), r(3, 5, 0)], false, markers);\n\t});\n\ttest('Indented region after', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'#region',\n\t\t/* 2*/\t'  // comment',\n\t\t/* 3*/\t'',\n\t\t/* 4*/\t'#endregion',\n\t\t/* 5*/\t'  if (x)',\n\t\t/* 6*/\t'    return;',\n\t\t], [r(1, 4, -1, true), r(5, 6, -1)], false, markers);\n\t});\n\ttest('With off-side', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'#region',\n\t\t/* 2*/\t'  ',\n\t\t/* 3*/\t'',\n\t\t/* 4*/\t'#endregion',\n\t\t/* 5*/\t'',\n\t\t], [r(1, 4, -1, true)], true, markers);\n\t});\n\ttest('Nested with off-side', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'#region',\n\t\t/* 2*/\t'  ',\n\t\t/* 3*/\t'#region',\n\t\t/* 4*/\t'',\n\t\t/* 5*/\t'#endregion',\n\t\t/* 6*/\t'',\n\t\t/* 7*/\t'#endregion',\n\t\t/* 8*/\t'',\n\t\t], [r(1, 7, -1, true), r(3, 5, 0, true)], true, markers);\n\t});\n\ttest('Issue 35981', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'function thisFoldsToEndOfPage() {',\n\t\t/* 2*/\t'  const variable = []',\n\t\t/* 3*/\t'    // #region',\n\t\t/* 4*/\t'    .reduce((a, b) => a,[]);',\n\t\t/* 5*/\t'}',\n\t\t/* 6*/\t'',\n\t\t/* 7*/\t'function thisFoldsProperly() {',\n\t\t/* 8*/\t'  const foo = \"bar\"',\n\t\t/* 9*/\t'}',\n\t\t], [r(1, 4, -1), r(2, 4, 0), r(7, 8, -1)], false, markers);\n\t});\n\ttest('Misspelled Markers', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'#Region',\n\t\t/* 2*/\t'#endregion',\n\t\t/* 3*/\t'#regionsandmore',\n\t\t/* 4*/\t'#endregion',\n\t\t/* 5*/\t'#region',\n\t\t/* 6*/\t'#end region',\n\t\t/* 7*/\t'#region',\n\t\t/* 8*/\t'#endregionff',\n\t\t], [], true, markers);\n\t});\n\ttest('Issue 79359', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'#region',\n\t\t/* 2*/\t'',\n\t\t/* 3*/\t'class A',\n\t\t/* 4*/\t'  foo',\n\t\t/* 5*/\t'',\n\t\t/* 6*/\t'class A',\n\t\t/* 7*/\t'  foo',\n\t\t/* 8*/\t'',\n\t\t/* 9*/\t'#endregion',\n\t\t], [r(1, 9, -1, true), r(3, 4, 0), r(6, 7, 0)], true, markers);\n\t});\n});\n"],
  "mappings": "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",
  "names": ["markers"]
}
