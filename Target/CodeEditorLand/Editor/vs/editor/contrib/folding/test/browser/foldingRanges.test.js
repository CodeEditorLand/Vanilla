import i from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as b}from"../../../../../base/test/common/utils.js";import"../../../../common/languages/languageConfiguration.js";import{MAX_FOLDING_REGIONS as g,FoldingRegions as d,FoldSource as t}from"../../browser/foldingRanges.js";import{RangesCollector as E,computeRanges as f}from"../../browser/indentRangeProvider.js";import{createTextModel as u}from"../../../../test/common/testTextModel.js";const p={start:/^#region$/,end:/^#endregion$/};suite("FoldingRanges",()=>{b();const r=(n,s,e=void 0,a=t.provider,l=void 0)=>({startLineNumber:n,endLineNumber:s,type:l,isCollapsed:e||!1,source:a}),o=(n,s,e)=>{i.strictEqual(n.startLineNumber,s.startLineNumber,e+" start"),i.strictEqual(n.endLineNumber,s.endLineNumber,e+" end"),i.strictEqual(n.type,s.type,e+" type"),i.strictEqual(n.isCollapsed,s.isCollapsed,e+" collapsed"),i.strictEqual(n.source,s.source,e+" source")};test("test max folding regions",()=>{const n=[],s=g,e=new E({limit:g,update:()=>{}});for(let c=0;c<s;c++){const R=n.length;n.push("#region");const v=n.length;n.push("#endregion"),e.insertFirst(R,v,0)}const a=u(n.join(`
`)),l=e.toIndentRanges(a);i.strictEqual(l.length,s,"len"),a.dispose()}),test("findRange",()=>{const s=u(["#region","#endregion","class A {","  void foo() {","    if (true) {","        return;","    }","","    if (true) {","      return;","    }","  }","}"].join(`
`));try{const e=f(s,!1,p);i.strictEqual(e.findRange(1),0,"1"),i.strictEqual(e.findRange(2),0,"2"),i.strictEqual(e.findRange(3),1,"3"),i.strictEqual(e.findRange(4),2,"4"),i.strictEqual(e.findRange(5),3,"5"),i.strictEqual(e.findRange(6),3,"6"),i.strictEqual(e.findRange(7),2,"7"),i.strictEqual(e.findRange(8),2,"8"),i.strictEqual(e.findRange(9),4,"9"),i.strictEqual(e.findRange(10),4,"10"),i.strictEqual(e.findRange(11),2,"11"),i.strictEqual(e.findRange(12),1,"12"),i.strictEqual(e.findRange(13),-1,"13")}finally{s.dispose()}}),test("setCollapsed",()=>{const n=[];for(let l=0;l<500;l++)n.push("#region");for(let l=0;l<500;l++)n.push("#endregion");const e=u(n.join(`
`)),a=f(e,!1,p);i.strictEqual(a.length,500,"len");for(let l=0;l<500;l++)a.setCollapsed(l,l%3===0);for(let l=0;l<500;l++)i.strictEqual(a.isCollapsed(l),l%3===0,"line"+l);e.dispose()}),test("sanitizeAndMerge1",()=>{const n=[r(0,100),r(1,100,!1,t.provider,"A"),r(1,100,!1,t.provider,"Z"),r(10,10,!1),r(20,80,!1,t.provider,"C1"),r(22,80,!0,t.provider,"D1"),r(90,101)],s=[r(20,80,!0),r(18,80,!0),r(21,81,!0,t.provider,"Z"),r(22,80,!0,t.provider,"D2")],e=d.sanitizeAndMerge(n,s,100);i.strictEqual(e.length,3,"result length1"),o(e[0],r(1,100,!1,t.provider,"A"),"A1"),o(e[1],r(20,80,!0,t.provider,"C1"),"C1"),o(e[2],r(22,80,!0,t.provider,"D1"),"D1")}),test("sanitizeAndMerge2",()=>{const n=[r(1,100,!1,t.provider,"a1"),r(2,100,!1,t.provider,"a2"),r(3,19,!1,t.provider,"a3"),r(20,71,!1,t.provider,"a4"),r(21,29,!1,t.provider,"a5"),r(81,91,!1,t.provider,"a6")],s=[r(30,39,!0,t.provider,"b1"),r(40,49,!0,t.userDefined,"b2"),r(50,100,!0,t.userDefined,"b3"),r(80,90,!0,t.userDefined,"b4"),r(92,100,!0,t.userDefined,"b5")],e=d.sanitizeAndMerge(n,s,100);i.strictEqual(e.length,9,"result length1"),o(e[0],r(1,100,!1,t.provider,"a1"),"P1"),o(e[1],r(2,100,!1,t.provider,"a2"),"P2"),o(e[2],r(3,19,!1,t.provider,"a3"),"P3"),o(e[3],r(21,29,!1,t.provider,"a5"),"P4"),o(e[4],r(30,39,!0,t.recovered,"b1"),"P5"),o(e[5],r(40,49,!0,t.userDefined,"b2"),"P6"),o(e[6],r(50,100,!0,t.userDefined,"b3"),"P7"),o(e[7],r(80,90,!0,t.userDefined,"b4"),"P8"),o(e[8],r(92,100,!0,t.userDefined,"b5"),"P9")}),test("sanitizeAndMerge3",()=>{const n=[r(1,100,!1,t.provider,"a1"),r(10,29,!1,t.provider,"a2"),r(35,39,!0,t.recovered,"a3")],s=[r(10,29,!0,t.recovered,"b1"),r(20,28,!0,t.provider,"b2"),r(30,39,!0,t.recovered,"b3")],e=d.sanitizeAndMerge(n,s,100);i.strictEqual(e.length,5,"result length3"),o(e[0],r(1,100,!1,t.provider,"a1"),"R1"),o(e[1],r(10,29,!0,t.provider,"a2"),"R2"),o(e[2],r(20,28,!0,t.recovered,"b2"),"R3"),o(e[3],r(30,39,!0,t.recovered,"b3"),"R3"),o(e[4],r(35,39,!0,t.recovered,"a3"),"R4")}),test("sanitizeAndMerge4",()=>{const n=[r(1,100,!1,t.provider,"a1")],s=[r(20,28,!0,t.provider,"b1"),r(30,38,!0,t.provider,"b2")],e=d.sanitizeAndMerge(n,s,100);i.strictEqual(e.length,3,"result length4"),o(e[0],r(1,100,!1,t.provider,"a1"),"R1"),o(e[1],r(20,28,!0,t.recovered,"b1"),"R2"),o(e[2],r(30,38,!0,t.recovered,"b2"),"R3")})});
