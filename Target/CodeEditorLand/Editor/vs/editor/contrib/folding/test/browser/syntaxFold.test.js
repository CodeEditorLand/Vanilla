import b from"assert";import{CancellationToken as T}from"../../../../../base/common/cancellation.js";import"../../../../common/model.js";import"../../../../common/languages.js";import{SyntaxRangeProvider as P}from"../../browser/syntaxRangeProvider.js";import{createTextModel as A}from"../../../../test/common/testTextModel.js";import"../../browser/folding.js";import{ensureNoDisposablesAreLeakedInTestSuite as S}from"../../../../../base/test/common/utils.js";class h{constructor(s,e){this.model=s;this.ranges=e}provideFoldingRanges(s,e,o){return s===this.model?this.ranges:null}}suite("Syntax folding",()=>{S();function n(s,e){return{start:s,end:e}}test("Limit by nesting level",async()=>{const s=["{","  A","  {","    {","      B","    }","    {","      A","      {","         A","      }","      {","        {","          {","             A","          }","        }","      }","    }","  }","}","{","  A","}"],e=n(1,20),o=n(3,19),r=n(4,5),a=n(7,18),d=n(9,10),l=n(12,17),g=n(13,16),p=n(14,15),i=n(22,23),f=A(s.join(`
`)),F=[e,o,r,a,d,l,g,p,i],I=[new h(f,F)];async function t(R,x,y){let w=!1;const L={limit:R,update:(m,c)=>w=c},v=new P(f,I,()=>{},L,void 0);try{const m=await v.compute(T.None),c=[];if(m){for(let u=0;u<m.length;u++)c.push({start:m.getStartLineNumber(u),end:m.getEndLineNumber(u)});b.equal(w,9<=R?!1:R,"limited")}b.deepStrictEqual(c,x,y)}finally{v.dispose()}}await t(1e3,[e,o,r,a,d,l,g,p,i],"1000"),await t(9,[e,o,r,a,d,l,g,p,i],"9"),await t(8,[e,o,r,a,d,l,g,i],"8"),await t(7,[e,o,r,a,d,l,i],"7"),await t(6,[e,o,r,a,d,i],"6"),await t(5,[e,o,r,a,i],"5"),await t(4,[e,o,r,i],"4"),await t(3,[e,o,i],"3"),await t(2,[e,i],"2"),await t(1,[e],"1"),await t(0,[],"0"),f.dispose()})});
