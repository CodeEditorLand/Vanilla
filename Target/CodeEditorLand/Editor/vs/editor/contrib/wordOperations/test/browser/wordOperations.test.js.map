{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/wordOperations/test/browser/wordOperations.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { isFirefox } from '../../../../../base/common/platform.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { CoreEditingCommands } from '../../../../browser/coreCommands.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { EditorCommand } from '../../../../browser/editorExtensions.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { ViewModel } from '../../../../common/viewModel/viewModelImpl.js';\nimport { CursorWordEndLeft, CursorWordEndLeftSelect, CursorWordEndRight, CursorWordEndRightSelect, CursorWordLeft, CursorWordLeftSelect, CursorWordRight, CursorWordRightSelect, CursorWordStartLeft, CursorWordStartLeftSelect, CursorWordStartRight, CursorWordStartRightSelect, DeleteInsideWord, DeleteWordEndLeft, DeleteWordEndRight, DeleteWordLeft, DeleteWordRight, DeleteWordStartLeft, DeleteWordStartRight } from '../../browser/wordOperations.js';\nimport { deserializePipePositions, serializePipePositions, testRepeatedActionAndExtractPositions } from './wordTestUtils.js';\nimport { createCodeEditorServices, instantiateTestCodeEditor, withTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { instantiateTextModel } from '../../../../test/common/testTextModel.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\n\nsuite('WordOperations', () => {\n\n\tconst _cursorWordStartLeft = new CursorWordStartLeft();\n\tconst _cursorWordEndLeft = new CursorWordEndLeft();\n\tconst _cursorWordLeft = new CursorWordLeft();\n\tconst _cursorWordStartLeftSelect = new CursorWordStartLeftSelect();\n\tconst _cursorWordEndLeftSelect = new CursorWordEndLeftSelect();\n\tconst _cursorWordLeftSelect = new CursorWordLeftSelect();\n\tconst _cursorWordStartRight = new CursorWordStartRight();\n\tconst _cursorWordEndRight = new CursorWordEndRight();\n\tconst _cursorWordRight = new CursorWordRight();\n\tconst _cursorWordStartRightSelect = new CursorWordStartRightSelect();\n\tconst _cursorWordEndRightSelect = new CursorWordEndRightSelect();\n\tconst _cursorWordRightSelect = new CursorWordRightSelect();\n\tconst _deleteWordLeft = new DeleteWordLeft();\n\tconst _deleteWordStartLeft = new DeleteWordStartLeft();\n\tconst _deleteWordEndLeft = new DeleteWordEndLeft();\n\tconst _deleteWordRight = new DeleteWordRight();\n\tconst _deleteWordStartRight = new DeleteWordStartRight();\n\tconst _deleteWordEndRight = new DeleteWordEndRight();\n\tconst _deleteInsideWord = new DeleteInsideWord();\n\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\tlet languageConfigurationService: ILanguageConfigurationService;\n\tlet languageService: ILanguageService;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = createCodeEditorServices(disposables);\n\t\tlanguageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tlanguageService = instantiationService.get(ILanguageService);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction runEditorCommand(editor: ICodeEditor, command: EditorCommand): void {\n\t\tinstantiationService.invokeFunction((accessor) => {\n\t\t\tcommand.runEditorCommand(accessor, editor, null);\n\t\t});\n\t}\n\tfunction cursorWordLeft(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordLeftSelect : _cursorWordLeft);\n\t}\n\tfunction cursorWordStartLeft(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordStartLeftSelect : _cursorWordStartLeft);\n\t}\n\tfunction cursorWordEndLeft(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordEndLeftSelect : _cursorWordEndLeft);\n\t}\n\tfunction cursorWordRight(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordRightSelect : _cursorWordRight);\n\t}\n\tfunction moveWordEndRight(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordEndRightSelect : _cursorWordEndRight);\n\t}\n\tfunction moveWordStartRight(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordStartRightSelect : _cursorWordStartRight);\n\t}\n\tfunction deleteWordLeft(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordLeft);\n\t}\n\tfunction deleteWordStartLeft(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordStartLeft);\n\t}\n\tfunction deleteWordEndLeft(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordEndLeft);\n\t}\n\tfunction deleteWordRight(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordRight);\n\t}\n\tfunction deleteWordStartRight(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordStartRight);\n\t}\n\tfunction deleteWordEndRight(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordEndRight);\n\t}\n\tfunction deleteInsideWord(editor: ICodeEditor): void {\n\t\t_deleteInsideWord.run(null!, editor, null);\n\t}\n\n\ttest('cursorWordLeft - simple', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|    \\t|My |First |Line\\t ',\n\t\t\t'|\\t|My |Second |Line',\n\t\t\t'|    |Third |Line\uD83D\uDC36',\n\t\t\t'|',\n\t\t\t'|1',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordLeft - with selection', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor) => {\n\t\t\teditor.setPosition(new Position(5, 2));\n\t\t\tcursorWordLeft(editor, true);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(5, 2, 5, 1));\n\t\t});\n\t});\n\n\ttest('cursorWordLeft - issue #832', () => {\n\t\tconst EXPECTED = ['|   |/* |Just |some   |more   |text |a|+= |3 |+|5-|3 |+ |7 |*/  '].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordLeft - issue #48046: Word selection doesn\\'t work as usual', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|deep.|object.|property',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 21),\n\t\t\ted => cursorWordLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordLeft - Recognize words', function () {\n\t\tif (isFirefox) {\n\t\t\t// https://github.com/microsoft/vscode/issues/219843\n\t\t\treturn this.skip();\n\t\t}\n\t\tconst EXPECTED = [\n\t\t\t'|/* |\u3053\u308C|\u306F|\u30C6\u30B9\u30C8|\u3067\u3059 |/*',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordLeft(ed, true),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1)),\n\t\t\t{\n\t\t\t\twordSegmenterLocales: 'ja'\n\t\t\t}\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordLeft - Does not recognize words', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|/* |\u3053\u308C\u306F\u30C6\u30B9\u30C8\u3067\u3059 |/*',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordLeft(ed, true),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1)),\n\t\t\t{\n\t\t\t\twordSegmenterLocales: ''\n\t\t\t}\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordLeft - issue #169904: cursors out of sync', () => {\n\t\tconst text = [\n\t\t\t'.grid1 {',\n\t\t\t'  display: grid;',\n\t\t\t'  grid-template-columns:',\n\t\t\t'    [full-start] minmax(1em, 1fr)',\n\t\t\t'    [main-start] minmax(0, 40em) [main-end]',\n\t\t\t'    minmax(1em, 1fr) [full-end];',\n\t\t\t'}',\n\t\t\t'.grid2 {',\n\t\t\t'  display: grid;',\n\t\t\t'  grid-template-columns:',\n\t\t\t'    [full-start] minmax(1em, 1fr)',\n\t\t\t'    [main-start] minmax(0, 40em) [main-end] minmax(1em, 1fr) [full-end];',\n\t\t\t'}',\n\t\t];\n\t\twithTestCodeEditor(text, {}, (editor) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(5, 44, 5, 44),\n\t\t\t\tnew Selection(6, 32, 6, 32),\n\t\t\t\tnew Selection(12, 44, 12, 44),\n\t\t\t\tnew Selection(12, 72, 12, 72),\n\t\t\t]);\n\t\t\tcursorWordLeft(editor, false);\n\t\t\tassert.deepStrictEqual(editor.getSelections(), [\n\t\t\t\tnew Selection(5, 43, 5, 43),\n\t\t\t\tnew Selection(6, 31, 6, 31),\n\t\t\t\tnew Selection(12, 43, 12, 43),\n\t\t\t\tnew Selection(12, 71, 12, 71),\n\t\t\t]);\n\n\t\t});\n\t});\n\n\ttest('cursorWordLeftSelect - issue #74369: cursorWordLeft and cursorWordLeftSelect do not behave consistently', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|this.|is.|a.|test',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 15),\n\t\t\ted => cursorWordLeft(ed, true),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordStartLeft', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = ['|   |/* |Just |some   |more   |text |a|+= |3 |+|5|-|3 |+ |7 |*/  '].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordStartLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordStartLeft - issue #51119: regression makes VS compatibility impossible', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = ['|this|.|is|.|a|.|test'].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordStartLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('issue #51275 - cursorWordStartLeft does not push undo/redo stack element', () => {\n\t\tfunction type(viewModel: ViewModel, text: string) {\n\t\t\tfor (let i = 0; i < text.length; i++) {\n\t\t\t\tviewModel.type(text.charAt(i), 'keyboard');\n\t\t\t}\n\t\t}\n\n\t\twithTestCodeEditor('', {}, (editor, viewModel) => {\n\t\t\ttype(viewModel, 'foo bar baz');\n\t\t\tassert.strictEqual(editor.getValue(), 'foo bar baz');\n\n\t\t\tcursorWordStartLeft(editor);\n\t\t\tcursorWordStartLeft(editor);\n\t\t\ttype(viewModel, 'q');\n\n\t\t\tassert.strictEqual(editor.getValue(), 'foo qbar baz');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(editor.getValue(), 'foo bar baz');\n\t\t});\n\t});\n\n\ttest('cursorWordEndLeft', () => {\n\t\tconst EXPECTED = ['|   /*| Just| some|   more|   text| a|+=| 3| +|5|-|3| +| 7| */|  '].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordEndLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordRight - simple', () => {\n\t\tconst EXPECTED = [\n\t\t\t'    \\tMy| First| Line|\\t |',\n\t\t\t'\\tMy| Second| Line|',\n\t\t\t'    Third| Line\uD83D\uDC36|',\n\t\t\t'|',\n\t\t\t'1|',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => cursorWordRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(5, 2))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordRight - selection', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\teditor.setPosition(new Position(1, 1));\n\t\t\tcursorWordRight(editor, true);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 1, 8));\n\t\t});\n\t});\n\n\ttest('cursorWordRight - issue #832', () => {\n\t\tconst EXPECTED = [\n\t\t\t'   /*| Just| some|   more|   text| a|+=| 3| +5|-3| +| 7| */|  |',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => cursorWordRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 50))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordRight - issue #41199', () => {\n\t\tconst EXPECTED = [\n\t\t\t'console|.log|(err|)|',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => cursorWordRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 17))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordRight - Recognize words', function () {\n\t\tif (isFirefox) {\n\t\t\t// https://github.com/microsoft/vscode/issues/219843\n\t\t\treturn this.skip();\n\t\t}\n\t\tconst EXPECTED = [\n\t\t\t'/*| \u3053\u308C|\u306F|\u30C6\u30B9\u30C8|\u3067\u3059|/*|',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => cursorWordRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 14)),\n\t\t\t{\n\t\t\t\twordSegmenterLocales: 'ja'\n\t\t\t}\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordRight - Does not recognize words', () => {\n\t\tconst EXPECTED = [\n\t\t\t'/*| \u3053\u308C\u306F\u30C6\u30B9\u30C8\u3067\u3059|/*|',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => cursorWordRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 14)),\n\t\t\t{\n\t\t\t\twordSegmenterLocales: ''\n\t\t\t}\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('moveWordEndRight', () => {\n\t\tconst EXPECTED = [\n\t\t\t'   /*| Just| some|   more|   text| a|+=| 3| +5|-3| +| 7| */|  |',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => moveWordEndRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 50))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('moveWordStartRight', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = [\n\t\t\t'   |/* |Just |some   |more   |text |a|+= |3 |+|5|-|3 |+ |7 |*/  |',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => moveWordStartRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 50))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('issue #51119: cursorWordStartRight regression makes VS compatibility impossible', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = ['this|.|is|.|a|.|test|'].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => moveWordStartRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 15))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('issue #64810: cursorWordStartRight skips first word after newline', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = ['Hello |World|', '|Hei |mailman|'].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => moveWordStartRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(2, 12))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordLeft for non-empty selection', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setSelection(new Selection(3, 7, 3, 9));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(3), '    Thd Line\uD83D\uDC36');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(3, 7));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft for cursor at beginning of document', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 1));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    \\tMy First Line\\t ');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft for cursor at end of whitespace', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(3, 11));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(3), '    Line\uD83D\uDC36');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(3, 5));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft for cursor just behind a word', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 11));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(2), '\\tMy  Line');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(2, 5));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft for cursor inside of a word', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 12));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    \\tMy st Line\\t ');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 9));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for non-empty selection', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setSelection(new Selection(3, 7, 3, 9));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(3), '    Thd Line\uD83D\uDC36');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(3, 7));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for cursor at end of document', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(5, 3));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(5), '1');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(5, 2));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for cursor at beggining of whitespace', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(3, 1));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(3), 'Third Line\uD83D\uDC36');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(3, 1));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for cursor just before a word', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 5));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(2), '\\tMy  Line');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(2, 5));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for cursor inside of a word', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line\uD83D\uDC36',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 11));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    \\tMy Fi Line\\t ');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 11));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft - issue #832', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|   |/* |Just |some |text |a|+= |3 |+|5 |*/|  ',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 10000),\n\t\t\ted => deleteWordLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordStartLeft', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|   |/* |Just |some |text |a|+= |3 |+|5 |*/  ',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 10000),\n\t\t\ted => deleteWordStartLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordEndLeft', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|   /*| Just| some| text| a|+=| 3| +|5| */|  ',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 10000),\n\t\t\ted => deleteWordEndLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordLeft - issue #24947', () => {\n\t\twithTestCodeEditor([\n\t\t\t'{',\n\t\t\t'}'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteWordLeft(editor); assert.strictEqual(model.getLineContent(1), '{}');\n\t\t});\n\n\t\twithTestCodeEditor([\n\t\t\t'{',\n\t\t\t'}'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteWordStartLeft(editor); assert.strictEqual(model.getLineContent(1), '{}');\n\t\t});\n\n\t\twithTestCodeEditor([\n\t\t\t'{',\n\t\t\t'}'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteWordEndLeft(editor); assert.strictEqual(model.getLineContent(1), '{}');\n\t\t});\n\t});\n\n\ttest('deleteWordRight - issue #832', () => {\n\t\tconst EXPECTED = '   |/*| Just| some| text| a|+=| 3| +|5|-|3| */|  |';\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => deleteWordRight(ed),\n\t\t\ted => new Position(1, text.length - ed.getValue().length + 1),\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordRight - issue #3882', () => {\n\t\twithTestCodeEditor([\n\t\t\t'public void Add( int x,',\n\t\t\t'                 int y )'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 24));\n\t\t\tdeleteWordRight(editor); assert.strictEqual(model.getLineContent(1), 'public void Add( int x,int y )', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordStartRight - issue #3882', () => {\n\t\twithTestCodeEditor([\n\t\t\t'public void Add( int x,',\n\t\t\t'                 int y )'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 24));\n\t\t\tdeleteWordStartRight(editor); assert.strictEqual(model.getLineContent(1), 'public void Add( int x,int y )', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordEndRight - issue #3882', () => {\n\t\twithTestCodeEditor([\n\t\t\t'public void Add( int x,',\n\t\t\t'                 int y )'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 24));\n\t\t\tdeleteWordEndRight(editor); assert.strictEqual(model.getLineContent(1), 'public void Add( int x,int y )', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordStartRight', () => {\n\t\tconst EXPECTED = '   |/* |Just |some |text |a|+= |3 |+|5|-|3 |*/  |';\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => deleteWordStartRight(ed),\n\t\t\ted => new Position(1, text.length - ed.getValue().length + 1),\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordEndRight', () => {\n\t\tconst EXPECTED = '   /*| Just| some| text| a|+=| 3| +|5|-|3| */|  |';\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => deleteWordEndRight(ed),\n\t\t\ted => new Position(1, text.length - ed.getValue().length + 1),\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordRight - issue #3882 (1): Ctrl+Delete removing entire line when used at the end of line', () => {\n\t\twithTestCodeEditor([\n\t\t\t'A line with text.',\n\t\t\t'   And another one'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 18));\n\t\t\tdeleteWordRight(editor); assert.strictEqual(model.getLineContent(1), 'A line with text.And another one', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordLeft - issue #3882 (2): Ctrl+Delete removing entire line when used at the end of line', () => {\n\t\twithTestCodeEditor([\n\t\t\t'A line with text.',\n\t\t\t'   And another one'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteWordLeft(editor); assert.strictEqual(model.getLineContent(1), 'A line with text.   And another one', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordLeft - issue #91855: Matching (quote, bracket, paren) doesn\\'t get deleted when hitting Ctrl+Backspace', () => {\n\t\tconst languageId = 'myTestMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tautoClosingPairs: [\n\t\t\t\t{ open: '\\\"', close: '\\\"' }\n\t\t\t]\n\t\t}));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'a \"\"', languageId));\n\t\tconst editor = disposables.add(instantiateTestCodeEditor(instantiationService, model, { autoClosingDelete: 'always' }));\n\n\t\teditor.setPosition(new Position(1, 4));\n\t\tdeleteWordLeft(editor);\n\t\tassert.strictEqual(model.getLineContent(1), 'a ');\n\t});\n\n\ttest('deleteInsideWord - empty line', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Line1',\n\t\t\t'',\n\t\t\t'Line2'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'Line1\\nLine2');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in whitespace 1', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Just  some text.'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 6));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'Justsome text.');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in whitespace 2', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Just     some text.'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 6));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'Justsome text.');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in whitespace 3', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Just     \"some text.'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 6));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'Just\"some text.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '\"some text.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'some text.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'text.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in non-words', () => {\n\t\twithTestCodeEditor([\n\t\t\t'x=3+4+5+6'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 7));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x=3+45+6');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x=3++6');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x=36');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x=');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in words 1', () => {\n\t\twithTestCodeEditor([\n\t\t\t'This is interesting'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 7));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'This interesting');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'This');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in words 2', () => {\n\t\twithTestCodeEditor([\n\t\t\t'This  is  interesting'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 7));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'This  interesting');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'This');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
