{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/wordOperations/test/browser/wordTestUtils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Position } from '../../../../common/core/position.js';\nimport { ITestCodeEditor, TestCodeEditorInstantiationOptions, withTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\n\nexport function deserializePipePositions(text: string): [string, Position[]] {\n\tlet resultText = '';\n\tlet lineNumber = 1;\n\tlet charIndex = 0;\n\tconst positions: Position[] = [];\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charAt(i);\n\t\tif (chr === '\\n') {\n\t\t\tresultText += chr;\n\t\t\tlineNumber++;\n\t\t\tcharIndex = 0;\n\t\t\tcontinue;\n\t\t}\n\t\tif (chr === '|') {\n\t\t\tpositions.push(new Position(lineNumber, charIndex + 1));\n\t\t} else {\n\t\t\tresultText += chr;\n\t\t\tcharIndex++;\n\t\t}\n\t}\n\treturn [resultText, positions];\n}\n\nexport function serializePipePositions(text: string, positions: Position[]): string {\n\tpositions.sort(Position.compare);\n\tlet resultText = '';\n\tlet lineNumber = 1;\n\tlet charIndex = 0;\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charAt(i);\n\t\tif (positions.length > 0 && positions[0].lineNumber === lineNumber && positions[0].column === charIndex + 1) {\n\t\t\tresultText += '|';\n\t\t\tpositions.shift();\n\t\t}\n\t\tresultText += chr;\n\t\tif (chr === '\\n') {\n\t\t\tlineNumber++;\n\t\t\tcharIndex = 0;\n\t\t} else {\n\t\t\tcharIndex++;\n\t\t}\n\t}\n\tif (positions.length > 0 && positions[0].lineNumber === lineNumber && positions[0].column === charIndex + 1) {\n\t\tresultText += '|';\n\t\tpositions.shift();\n\t}\n\tif (positions.length > 0) {\n\t\tthrow new Error(`Unexpected left over positions!!!`);\n\t}\n\treturn resultText;\n}\n\nexport function testRepeatedActionAndExtractPositions(text: string, initialPosition: Position, action: (editor: ITestCodeEditor) => void, record: (editor: ITestCodeEditor) => Position, stopCondition: (editor: ITestCodeEditor) => boolean, options: TestCodeEditorInstantiationOptions = {}): Position[] {\n\tconst actualStops: Position[] = [];\n\twithTestCodeEditor(text, options, (editor) => {\n\t\teditor.setPosition(initialPosition);\n\t\twhile (true) {\n\t\t\taction(editor);\n\t\t\tactualStops.push(record(editor));\n\t\t\tif (stopCondition(editor)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (actualStops.length > 1000) {\n\t\t\t\tthrow new Error(`Endless loop detected involving position ${editor.getPosition()}!`);\n\t\t\t}\n\t\t}\n\t});\n\treturn actualStops;\n}\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB;AACzB,SAAS,iBAAiB,oCAAoC,0BAA0B;AAEjF,SAAS,yBAAyB,MAAoC;AAC5E,MAAI,aAAa;AACjB,MAAI,aAAa;AACjB,MAAI,YAAY;AAChB,QAAM,YAAwB,CAAC;AAC/B,WAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,IAAI,KAAK,KAAK;AAChD,UAAM,MAAM,KAAK,OAAO,CAAC;AACzB,QAAI,QAAQ,MAAM;AACjB,oBAAc;AACd;AACA,kBAAY;AACZ;AAAA,IACD;AACA,QAAI,QAAQ,KAAK;AAChB,gBAAU,KAAK,IAAI,SAAS,YAAY,YAAY,CAAC,CAAC;AAAA,IACvD,OAAO;AACN,oBAAc;AACd;AAAA,IACD;AAAA,EACD;AACA,SAAO,CAAC,YAAY,SAAS;AAC9B;AArBgB;AAuBT,SAAS,uBAAuB,MAAc,WAA+B;AACnF,YAAU,KAAK,SAAS,OAAO;AAC/B,MAAI,aAAa;AACjB,MAAI,aAAa;AACjB,MAAI,YAAY;AAChB,WAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,IAAI,KAAK,KAAK;AAChD,UAAM,MAAM,KAAK,OAAO,CAAC;AACzB,QAAI,UAAU,SAAS,KAAK,UAAU,CAAC,EAAE,eAAe,cAAc,UAAU,CAAC,EAAE,WAAW,YAAY,GAAG;AAC5G,oBAAc;AACd,gBAAU,MAAM;AAAA,IACjB;AACA,kBAAc;AACd,QAAI,QAAQ,MAAM;AACjB;AACA,kBAAY;AAAA,IACb,OAAO;AACN;AAAA,IACD;AAAA,EACD;AACA,MAAI,UAAU,SAAS,KAAK,UAAU,CAAC,EAAE,eAAe,cAAc,UAAU,CAAC,EAAE,WAAW,YAAY,GAAG;AAC5G,kBAAc;AACd,cAAU,MAAM;AAAA,EACjB;AACA,MAAI,UAAU,SAAS,GAAG;AACzB,UAAM,IAAI,MAAM,mCAAmC;AAAA,EACpD;AACA,SAAO;AACR;AA3BgB;AA6BT,SAAS,sCAAsC,MAAc,iBAA2B,QAA2C,QAA+C,eAAqD,UAA8C,CAAC,GAAe;AAC3S,QAAM,cAA0B,CAAC;AACjC,qBAAmB,MAAM,SAAS,CAAC,WAAW;AAC7C,WAAO,YAAY,eAAe;AAClC,WAAO,MAAM;AACZ,aAAO,MAAM;AACb,kBAAY,KAAK,OAAO,MAAM,CAAC;AAC/B,UAAI,cAAc,MAAM,GAAG;AAC1B;AAAA,MACD;AAEA,UAAI,YAAY,SAAS,KAAM;AAC9B,cAAM,IAAI,MAAM,4CAA4C,OAAO,YAAY,CAAC,GAAG;AAAA,MACpF;AAAA,IACD;AAAA,EACD,CAAC;AACD,SAAO;AACR;AAjBgB;",
  "names": []
}
