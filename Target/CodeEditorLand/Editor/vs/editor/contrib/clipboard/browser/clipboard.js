import*as O from"../../../../../vs/base/browser/browser.js";import{getActiveDocument as w}from"../../../../../vs/base/browser/dom.js";import{KeyCode as i,KeyMod as n}from"../../../../../vs/base/common/keyCodes.js";import*as p from"../../../../../vs/base/common/platform.js";import{CopyOptions as M,InMemoryClipboardMetadataManager as T}from"../../../../../vs/editor/browser/controller/textAreaInput.js";import"../../../../../vs/editor/browser/editorBrowser.js";import{EditorAction as N,MultiCommand as g,registerEditorAction as K}from"../../../../../vs/editor/browser/editorExtensions.js";import{ICodeEditorService as A}from"../../../../../vs/editor/browser/services/codeEditorService.js";import{EditorOption as b}from"../../../../../vs/editor/common/config/editorOptions.js";import{Handler as L}from"../../../../../vs/editor/common/editorCommon.js";import{EditorContextKeys as l}from"../../../../../vs/editor/common/editorContextKeys.js";import{CopyPasteController as _}from"../../../../../vs/editor/contrib/dropOrPasteInto/browser/copyPasteController.js";import*as t from"../../../../../vs/nls.js";import{MenuId as e,MenuRegistry as C}from"../../../../../vs/platform/actions/common/actions.js";import{IClipboardService as k}from"../../../../../vs/platform/clipboard/common/clipboardService.js";import{ContextKeyExpr as v}from"../../../../../vs/platform/contextkey/common/contextkey.js";import"../../../../../vs/platform/instantiation/common/instantiation.js";import{KeybindingWeight as y}from"../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";const d="9_cutcopypaste",D=p.isNative||document.queryCommandSupported("cut"),z=p.isNative||document.queryCommandSupported("copy"),W=typeof navigator.clipboard>"u"||O.isFirefox?document.queryCommandSupported("paste"):!0;function f(r){return r.register(),r}const F=D?f(new g({id:"editor.action.clipboardCutAction",precondition:void 0,kbOpts:p.isNative?{primary:n.CtrlCmd|i.KeyX,win:{primary:n.CtrlCmd|i.KeyX,secondary:[n.Shift|i.Delete]},weight:y.EditorContrib}:void 0,menuOpts:[{menuId:e.MenubarEditMenu,group:"2_ccp",title:t.localize({key:"miCut",comment:["&& denotes a mnemonic"]},"Cu&&t"),order:1},{menuId:e.EditorContext,group:d,title:t.localize("actions.clipboard.cutLabel","Cut"),when:l.writable,order:1},{menuId:e.CommandPalette,group:"",title:t.localize("actions.clipboard.cutLabel","Cut"),order:1},{menuId:e.SimpleEditorContext,group:d,title:t.localize("actions.clipboard.cutLabel","Cut"),when:l.writable,order:1}]})):void 0,H=z?f(new g({id:"editor.action.clipboardCopyAction",precondition:void 0,kbOpts:p.isNative?{primary:n.CtrlCmd|i.KeyC,win:{primary:n.CtrlCmd|i.KeyC,secondary:[n.CtrlCmd|i.Insert]},weight:y.EditorContrib}:void 0,menuOpts:[{menuId:e.MenubarEditMenu,group:"2_ccp",title:t.localize({key:"miCopy",comment:["&& denotes a mnemonic"]},"&&Copy"),order:2},{menuId:e.EditorContext,group:d,title:t.localize("actions.clipboard.copyLabel","Copy"),order:2},{menuId:e.CommandPalette,group:"",title:t.localize("actions.clipboard.copyLabel","Copy"),order:1},{menuId:e.SimpleEditorContext,group:d,title:t.localize("actions.clipboard.copyLabel","Copy"),order:2}]})):void 0;C.appendMenuItem(e.MenubarEditMenu,{submenu:e.MenubarCopy,title:t.localize2("copy as","Copy As"),group:"2_ccp",order:3}),C.appendMenuItem(e.EditorContext,{submenu:e.EditorContextCopy,title:t.localize2("copy as","Copy As"),group:d,order:3}),C.appendMenuItem(e.EditorContext,{submenu:e.EditorContextShare,title:t.localize2("share","Share"),group:"11_share",order:-1,when:v.and(v.notEquals("resourceScheme","output"),l.editorTextFocus)}),C.appendMenuItem(e.ExplorerContext,{submenu:e.ExplorerContextShare,title:t.localize2("share","Share"),group:"11_share",order:-1});const x=W?f(new g({id:"editor.action.clipboardPasteAction",precondition:void 0,kbOpts:p.isNative?{primary:n.CtrlCmd|i.KeyV,win:{primary:n.CtrlCmd|i.KeyV,secondary:[n.Shift|i.Insert]},linux:{primary:n.CtrlCmd|i.KeyV,secondary:[n.Shift|i.Insert]},weight:y.EditorContrib}:void 0,menuOpts:[{menuId:e.MenubarEditMenu,group:"2_ccp",title:t.localize({key:"miPaste",comment:["&& denotes a mnemonic"]},"&&Paste"),order:4},{menuId:e.EditorContext,group:d,title:t.localize("actions.clipboard.pasteLabel","Paste"),when:l.writable,order:4},{menuId:e.CommandPalette,group:"",title:t.localize("actions.clipboard.pasteLabel","Paste"),order:1},{menuId:e.SimpleEditorContext,group:d,title:t.localize("actions.clipboard.pasteLabel","Paste"),when:l.writable,order:4}]})):void 0;class q extends N{constructor(){super({id:"editor.action.clipboardCopyWithSyntaxHighlightingAction",label:t.localize("actions.clipboard.copyWithSyntaxHighlightingLabel","Copy With Syntax Highlighting"),alias:"Copy With Syntax Highlighting",precondition:void 0,kbOpts:{kbExpr:l.textInputFocus,primary:0,weight:y.EditorContrib}})}run(m,a){!a.hasModel()||!a.getOption(b.emptySelectionClipboard)&&a.getSelection().isEmpty()||(M.forceCopyWithSyntaxHighlighting=!0,a.focus(),a.getContainerDomNode().ownerDocument.execCommand("copy"),M.forceCopyWithSyntaxHighlighting=!1)}}function P(r,m){r&&(r.addImplementation(1e4,"code-editor",(a,u)=>{const o=a.get(A).getFocusedCodeEditor();if(o&&o.hasTextFocus()){const h=o.getOption(b.emptySelectionClipboard),c=o.getSelection();return c&&c.isEmpty()&&!h||o.getContainerDomNode().ownerDocument.execCommand(m),!0}return!1}),r.addImplementation(0,"generic-dom",(a,u)=>(w().execCommand(m),!0)))}P(F,"cut"),P(H,"copy"),x&&(x.addImplementation(1e4,"code-editor",(r,m)=>{const a=r.get(A),u=r.get(k),o=a.getFocusedCodeEditor();return o&&o.hasTextFocus()?o.getContainerDomNode().ownerDocument.execCommand("paste")?_.get(o)?.finishedPaste()??Promise.resolve():p.isWeb?(async()=>{const c=await u.readText();if(c!==""){const s=T.INSTANCE.get(c);let E=!1,S=null,I=null;s&&(E=o.getOption(b.emptySelectionClipboard)&&!!s.isFromEmptySelection,S=typeof s.multicursorText<"u"?s.multicursorText:null,I=s.mode),o.trigger("keyboard",L.Paste,{text:c,pasteOnNewLine:E,multicursorText:S,mode:I})}})():!0:!1}),x.addImplementation(0,"generic-dom",(r,m)=>(w().execCommand("paste"),!0))),z&&K(q);export{H as CopyAction,F as CutAction,x as PasteAction};
