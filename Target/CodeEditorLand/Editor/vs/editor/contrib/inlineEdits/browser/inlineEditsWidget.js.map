{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdits/browser/inlineEditsWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h, svgElem } from '../../../../base/browser/dom.js';\nimport { DEFAULT_FONT_FAMILY } from '../../../../base/browser/fonts.js';\nimport { Disposable, DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, derivedWithSetter, IObservable, ISettableObservable } from '../../../../base/common/observable.js';\nimport { MenuWorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorExtensionsRegistry } from '../../../browser/editorExtensions.js';\nimport { observableCodeEditor } from '../../../browser/observableCodeEditor.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { diffAddDecoration, diffAddDecorationEmpty, diffDeleteDecoration, diffDeleteDecorationEmpty, diffLineAddDecorationBackgroundWithIndicator, diffLineDeleteDecorationBackgroundWithIndicator, diffWholeLineAddDecoration, diffWholeLineDeleteDecoration } from '../../../browser/widget/diffEditor/registrations.contribution.js';\nimport { appendRemoveOnDispose, applyStyle } from '../../../browser/widget/diffEditor/utils.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../common/core/lineRange.js';\nimport { DetailedLineRangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../common/languages/modesRegistry.js';\nimport { IModelDeltaDecoration } from '../../../common/model.js';\nimport { TextModel } from '../../../common/model/textModel.js';\nimport { ContextMenuController } from '../../contextmenu/browser/contextmenu.js';\nimport { PlaceholderTextContribution } from '../../placeholderText/browser/placeholderTextContribution.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport './inlineEditsWidget.css';\n\nexport class InlineEdit {\n\tconstructor(\n\t\tpublic readonly range: LineRange,\n\t\tpublic readonly newLines: string[],\n\t\tpublic readonly changes: readonly DetailedLineRangeMapping[],\n\t) {\n\n\t}\n}\n\nexport class InlineEditsWidget extends Disposable {\n\tprivate readonly _editorObs = observableCodeEditor(this._editor);\n\n\tprivate readonly _elements = h('div.inline-edits-widget', {\n\t\tstyle: {\n\t\t\tposition: 'absolute',\n\t\t\toverflow: 'visible',\n\t\t\ttop: '0px',\n\t\t\tleft: '0px',\n\t\t},\n\t}, [\n\t\th('div@editorContainer', { style: { position: 'absolute', top: '0px', left: '0px', width: '500px', height: '500px', } }, [\n\t\t\th('div.toolbar@toolbar', { style: { position: 'absolute', top: '-25px', left: '0px' } }),\n\t\t\th('div.promptEditor@promptEditor', { style: { position: 'absolute', top: '-25px', left: '80px', width: '300px', height: '22px' } }),\n\t\t\th('div.preview@editor', { style: { position: 'absolute', top: '0px', left: '0px' } }),\n\t\t]),\n\t\tsvgElem('svg', { style: { overflow: 'visible', pointerEvents: 'none' }, }, [\n\t\t\tsvgElem('defs', [\n\t\t\t\tsvgElem('linearGradient', {\n\t\t\t\t\tid: 'Gradient2',\n\t\t\t\t\tx1: '0',\n\t\t\t\t\ty1: '0',\n\t\t\t\t\tx2: '1',\n\t\t\t\t\ty2: '0',\n\t\t\t\t}, [\n\t\t\t\t\t/*svgElem('stop', { offset: '0%', class: 'gradient-start', }),\n\t\t\t\t\tsvgElem('stop', { offset: '0%', class: 'gradient-start', }),\n\t\t\t\t\tsvgElem('stop', { offset: '20%', class: 'gradient-stop', }),*/\n\t\t\t\t\tsvgElem('stop', { offset: '0%', class: 'gradient-stop', }),\n\t\t\t\t\tsvgElem('stop', { offset: '100%', class: 'gradient-stop', }),\n\t\t\t\t]),\n\t\t\t]),\n\t\t\tsvgElem('path@path', {\n\t\t\t\td: '',\n\t\t\t\tfill: 'url(#Gradient2)',\n\t\t\t}),\n\t\t]),\n\t]);\n\n\tprotected readonly _toolbar = this._register(this._instantiationService.createInstance(MenuWorkbenchToolBar, this._elements.toolbar, MenuId.InlineEditsActions, {\n\t\ttoolbarOptions: {\n\t\t\tprimaryGroup: g => g.startsWith('primary'),\n\t\t},\n\t}));\n\tprivate readonly _previewTextModel = this._register(this._instantiationService.createInstance(\n\t\tTextModel,\n\t\t'',\n\t\tPLAINTEXT_LANGUAGE_ID,\n\t\tTextModel.DEFAULT_CREATION_OPTIONS,\n\t\tnull\n\t));\n\n\tprivate readonly _setText = derived(reader => {\n\t\tconst edit = this._edit.read(reader);\n\t\tif (!edit) { return; }\n\t\tthis._previewTextModel.setValue(edit.newLines.join('\\n'));\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\n\tprivate readonly _promptTextModel = this._register(this._instantiationService.createInstance(\n\t\tTextModel,\n\t\t'',\n\t\tPLAINTEXT_LANGUAGE_ID,\n\t\tTextModel.DEFAULT_CREATION_OPTIONS,\n\t\tnull\n\t));\n\tprivate readonly _promptEditor = this._register(this._instantiationService.createInstance(\n\t\tEmbeddedCodeEditorWidget,\n\t\tthis._elements.promptEditor,\n\t\t{\n\t\t\tglyphMargin: false,\n\t\t\tlineNumbers: 'off',\n\t\t\tminimap: { enabled: false },\n\t\t\tguides: {\n\t\t\t\tindentation: false,\n\t\t\t\tbracketPairs: false,\n\t\t\t\tbracketPairsHorizontal: false,\n\t\t\t\thighlightActiveIndentation: false,\n\t\t\t},\n\t\t\tfolding: false,\n\t\t\tselectOnLineNumbers: false,\n\t\t\tselectionHighlight: false,\n\t\t\tcolumnSelection: false,\n\t\t\toverviewRulerBorder: false,\n\t\t\toverviewRulerLanes: 0,\n\t\t\tlineDecorationsWidth: 0,\n\t\t\tlineNumbersMinChars: 0,\n\t\t\tplaceholder: 'Describe the change you want...',\n\t\t\tfontFamily: DEFAULT_FONT_FAMILY,\n\t\t},\n\t\t{\n\t\t\tcontributions: EditorExtensionsRegistry.getSomeEditorContributions([\n\t\t\t\tSuggestController.ID,\n\t\t\t\tPlaceholderTextContribution.ID,\n\t\t\t\tContextMenuController.ID,\n\t\t\t]),\n\t\t\tisSimpleWidget: true\n\t\t},\n\t\tthis._editor\n\t));\n\n\tprivate readonly _previewEditor = this._register(this._instantiationService.createInstance(\n\t\tEmbeddedCodeEditorWidget,\n\t\tthis._elements.editor,\n\t\t{\n\t\t\tglyphMargin: false,\n\t\t\tlineNumbers: 'off',\n\t\t\tminimap: { enabled: false },\n\t\t\tguides: {\n\t\t\t\tindentation: false,\n\t\t\t\tbracketPairs: false,\n\t\t\t\tbracketPairsHorizontal: false,\n\t\t\t\thighlightActiveIndentation: false,\n\t\t\t},\n\t\t\tfolding: false,\n\t\t\tselectOnLineNumbers: false,\n\t\t\tselectionHighlight: false,\n\t\t\tcolumnSelection: false,\n\t\t\toverviewRulerBorder: false,\n\t\t\toverviewRulerLanes: 0,\n\t\t\tlineDecorationsWidth: 0,\n\t\t\tlineNumbersMinChars: 0,\n\t\t},\n\t\t{ contributions: [], },\n\t\tthis._editor\n\t));\n\n\tprivate readonly _previewEditorObs = observableCodeEditor(this._previewEditor);\n\n\tprivate readonly _decorations = derived(this, (reader) => {\n\t\tthis._setText.read(reader);\n\t\tconst diff = this._edit.read(reader)?.changes;\n\t\tif (!diff) { return []; }\n\n\t\tconst originalDecorations: IModelDeltaDecoration[] = [];\n\t\tconst modifiedDecorations: IModelDeltaDecoration[] = [];\n\n\t\tif (diff.length === 1 && diff[0].innerChanges![0].modifiedRange.equalsRange(this._previewTextModel.getFullModelRange())) {\n\t\t\treturn [];\n\t\t}\n\n\t\tfor (const m of diff) {\n\t\t\tif (!m.original.isEmpty) {\n\t\t\t\toriginalDecorations.push({ range: m.original.toInclusiveRange()!, options: diffLineDeleteDecorationBackgroundWithIndicator });\n\t\t\t}\n\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\tmodifiedDecorations.push({ range: m.modified.toInclusiveRange()!, options: diffLineAddDecorationBackgroundWithIndicator });\n\t\t\t}\n\n\t\t\tif (m.modified.isEmpty || m.original.isEmpty) {\n\t\t\t\tif (!m.original.isEmpty) {\n\t\t\t\t\toriginalDecorations.push({ range: m.original.toInclusiveRange()!, options: diffWholeLineDeleteDecoration });\n\t\t\t\t}\n\t\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\t\tmodifiedDecorations.push({ range: m.modified.toInclusiveRange()!, options: diffWholeLineAddDecoration });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const i of m.innerChanges || []) {\n\t\t\t\t\t// Don't show empty markers outside the line range\n\t\t\t\t\tif (m.original.contains(i.originalRange.startLineNumber)) {\n\t\t\t\t\t\toriginalDecorations.push({ range: i.originalRange, options: i.originalRange.isEmpty() ? diffDeleteDecorationEmpty : diffDeleteDecoration });\n\t\t\t\t\t}\n\t\t\t\t\tif (m.modified.contains(i.modifiedRange.startLineNumber)) {\n\t\t\t\t\t\tmodifiedDecorations.push({ range: i.modifiedRange, options: i.modifiedRange.isEmpty() ? diffAddDecorationEmpty : diffAddDecoration });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn modifiedDecorations;\n\t});\n\n\tprivate readonly _layout1 = derived(this, reader => {\n\t\tconst model = this._editor.getModel()!;\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\tif (!inlineEdit) { return null; }\n\n\t\tconst range = inlineEdit.range;\n\n\t\tlet maxLeft = 0;\n\t\tfor (let i = range.startLineNumber; i < range.endLineNumberExclusive; i++) {\n\t\t\tconst column = model.getLineMaxColumn(i);\n\t\t\tconst left = this._editor.getOffsetForColumn(i, column);\n\t\t\tmaxLeft = Math.max(maxLeft, left);\n\t\t}\n\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tconst contentLeft = layoutInfo.contentLeft;\n\n\t\treturn { left: contentLeft + maxLeft };\n\t});\n\n\tprivate readonly _layout = derived(this, (reader) => {\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\tif (!inlineEdit) { return null; }\n\n\t\tconst range = inlineEdit.range;\n\n\t\tconst scrollLeft = this._editorObs.scrollLeft.read(reader);\n\n\t\tconst left = this._layout1.read(reader)!.left + 20 - scrollLeft;\n\n\t\tconst selectionTop = this._editor.getTopForLineNumber(range.startLineNumber) - this._editorObs.scrollTop.read(reader);\n\t\tconst selectionBottom = this._editor.getTopForLineNumber(range.endLineNumberExclusive) - this._editorObs.scrollTop.read(reader);\n\n\t\tconst topCode = new Point(left, selectionTop);\n\t\tconst bottomCode = new Point(left, selectionBottom);\n\t\tconst codeHeight = selectionBottom - selectionTop;\n\n\t\tconst codeEditDist = 50;\n\t\tconst editHeight = this._editor.getOption(EditorOption.lineHeight) * inlineEdit.newLines.length;\n\t\tconst difference = codeHeight - editHeight;\n\t\tconst topEdit = new Point(left + codeEditDist, selectionTop + (difference / 2));\n\t\tconst bottomEdit = new Point(left + codeEditDist, selectionBottom - (difference / 2));\n\n\t\treturn {\n\t\t\ttopCode,\n\t\t\tbottomCode,\n\t\t\tcodeHeight,\n\t\t\ttopEdit,\n\t\t\tbottomEdit,\n\t\t\teditHeight,\n\t\t};\n\t});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEdit | undefined>,\n\t\tprivate readonly _userPrompt: ISettableObservable<string | undefined>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tconst visible = derived(this, reader => this._edit.read(reader) !== undefined || this._userPrompt.read(reader) !== undefined);\n\t\tthis._register(applyStyle(this._elements.root, {\n\t\t\tdisplay: derived(this, reader => visible.read(reader) ? 'block' : 'none')\n\t\t}));\n\n\t\tthis._register(appendRemoveOnDispose(this._editor.getDomNode()!, this._elements.root));\n\n\t\tthis._register(observableCodeEditor(_editor).createOverlayWidget({\n\t\t\tdomNode: this._elements.root,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derived(reader => {\n\t\t\t\tconst x = this._layout1.read(reader)?.left;\n\t\t\t\tif (x === undefined) { return 0; }\n\t\t\t\tconst width = this._previewEditorObs.contentWidth.read(reader);\n\t\t\t\treturn x + width;\n\t\t\t}),\n\t\t}));\n\n\t\tthis._previewEditor.setModel(this._previewTextModel);\n\n\t\tthis._register(this._previewEditorObs.setDecorations(this._decorations));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst layoutInfo = this._layout.read(reader);\n\t\t\tif (!layoutInfo) { return; }\n\n\t\t\tconst { topCode, bottomCode, topEdit, bottomEdit, editHeight } = layoutInfo;\n\n\t\t\tconst straightWidthCode = 10;\n\t\t\tconst straightWidthEdit = 0;\n\t\t\tconst bezierDist = 40;\n\n\t\t\tconst path = new PathBuilder()\n\t\t\t\t.moveTo(topCode)\n\t\t\t\t.lineTo(topCode.deltaX(straightWidthCode))\n\t\t\t\t.curveTo(\n\t\t\t\t\ttopCode.deltaX(straightWidthCode + bezierDist),\n\t\t\t\t\ttopEdit.deltaX(-bezierDist - straightWidthEdit),\n\t\t\t\t\ttopEdit.deltaX(-straightWidthEdit),\n\t\t\t\t)\n\t\t\t\t.lineTo(topEdit)\n\t\t\t\t.lineTo(bottomEdit)\n\t\t\t\t.lineTo(bottomEdit.deltaX(-straightWidthEdit))\n\t\t\t\t.curveTo(\n\t\t\t\t\tbottomEdit.deltaX(-bezierDist - straightWidthEdit),\n\t\t\t\t\tbottomCode.deltaX(straightWidthCode + bezierDist),\n\t\t\t\t\tbottomCode.deltaX(straightWidthCode),\n\t\t\t\t)\n\t\t\t\t.lineTo(bottomCode)\n\t\t\t\t.build();\n\n\n\t\t\tthis._elements.path.setAttribute('d', path);\n\n\t\t\tthis._elements.editorContainer.style.top = `${topEdit.y}px`;\n\t\t\tthis._elements.editorContainer.style.left = `${topEdit.x}px`;\n\t\t\tthis._elements.editorContainer.style.height = `${editHeight}px`;\n\n\t\t\tconst width = this._previewEditorObs.contentWidth.read(reader);\n\t\t\tthis._previewEditor.layout({ height: editHeight, width });\n\t\t}));\n\n\t\tthis._promptEditor.setModel(this._promptTextModel);\n\t\tthis._promptEditor.layout();\n\t\tthis._register(createTwoWaySync(mapSettableObservable(this._userPrompt, v => v ?? '', v => v), observableCodeEditor(this._promptEditor).value));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst isFocused = observableCodeEditor(this._promptEditor).isFocused.read(reader);\n\t\t\tthis._elements.root.classList.toggle('focused', isFocused);\n\t\t}));\n\t}\n}\n\nfunction mapSettableObservable<T, T1>(obs: ISettableObservable<T>, fn1: (value: T) => T1, fn2: (value: T1) => T): ISettableObservable<T1> {\n\treturn derivedWithSetter(undefined, reader => fn1(obs.read(reader)), (value, tx) => obs.set(fn2(value), tx));\n}\n\nclass Point {\n\tconstructor(\n\t\tpublic readonly x: number,\n\t\tpublic readonly y: number,\n\t) { }\n\n\tpublic add(other: Point): Point {\n\t\treturn new Point(this.x + other.x, this.y + other.y);\n\t}\n\n\tpublic deltaX(delta: number): Point {\n\t\treturn new Point(this.x + delta, this.y);\n\t}\n}\n\nclass PathBuilder {\n\tprivate _data: string = '';\n\n\tpublic moveTo(point: Point): this {\n\t\tthis._data += `M ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic lineTo(point: Point): this {\n\t\tthis._data += `L ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic curveTo(cp1: Point, cp2: Point, to: Point): this {\n\t\tthis._data += `C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${to.x} ${to.y} `;\n\t\treturn this;\n\t}\n\n\tpublic build(): string {\n\t\treturn this._data;\n\t}\n}\n\nfunction createTwoWaySync<T>(main: ISettableObservable<T>, target: ISettableObservable<T>): IDisposable {\n\tconst store = new DisposableStore();\n\tstore.add(autorun(reader => {\n\t\tconst value = main.read(reader);\n\t\ttarget.set(value, undefined);\n\t}));\n\tstore.add(autorun(reader => {\n\t\tconst value = target.read(reader);\n\t\tmain.set(value, undefined);\n\t}));\n\treturn store;\n}\n"],
  "mappings": "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",
  "names": []
}
