{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdits/browser/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tasyncTransaction,\n\ttransaction,\n} from \"../../../../base/common/observable.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\ttype ServicesAccessor,\n} from \"../../../browser/editorExtensions.js\";\nimport { EmbeddedCodeEditorWidget } from \"../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport {\n\tinlineEditAcceptId,\n\tinlineEditVisible,\n\tshowNextInlineEditActionId,\n\tshowPreviousInlineEditActionId,\n} from \"./consts.js\";\nimport { InlineEditsController } from \"./inlineEditsController.js\";\n\nfunction labelAndAlias(str: nls.ILocalizedString): {\n\tlabel: string;\n\talias: string;\n} {\n\treturn {\n\t\tlabel: str.value,\n\t\talias: str.original,\n\t};\n}\n\nexport class ShowNextInlineEditAction extends EditorAction {\n\tpublic static ID = showNextInlineEditActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowNextInlineEditAction.ID,\n\t\t\t...labelAndAlias(\n\t\t\t\tnls.localize2(\n\t\t\t\t\t\"action.inlineEdits.showNext\",\n\t\t\t\t\t\"Show Next Inline Edit\",\n\t\t\t\t),\n\t\t\t),\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tinlineEditVisible,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketRight,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineEditsController.get(editor);\n\t\tcontroller?.model.get()?.next();\n\t}\n}\n\nexport class ShowPreviousInlineEditAction extends EditorAction {\n\tpublic static ID = showPreviousInlineEditActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowPreviousInlineEditAction.ID,\n\t\t\t...labelAndAlias(\n\t\t\t\tnls.localize2(\n\t\t\t\t\t\"action.inlineEdits.showPrevious\",\n\t\t\t\t\t\"Show Previous Inline Edit\",\n\t\t\t\t),\n\t\t\t),\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tinlineEditVisible,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketLeft,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineEditsController.get(editor);\n\t\tcontroller?.model.get()?.previous();\n\t}\n}\n\nexport class TriggerInlineEditAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.inlineEdits.trigger\",\n\t\t\t...labelAndAlias(\n\t\t\t\tnls.localize2(\n\t\t\t\t\t\"action.inlineEdits.trigger\",\n\t\t\t\t\t\"Trigger Inline Edit\",\n\t\t\t\t),\n\t\t\t),\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineEditsController.get(editor);\n\t\tawait asyncTransaction(async (tx) => {\n\t\t\t/** @description triggerExplicitly from command */\n\t\t\tawait controller?.model.get()?.triggerExplicitly(tx);\n\t\t});\n\t}\n}\n\nexport class AcceptInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: inlineEditAcceptId,\n\t\t\t...labelAndAlias(\n\t\t\t\tnls.localize2(\n\t\t\t\t\t\"action.inlineEdits.accept\",\n\t\t\t\t\t\"Accept Inline Edit\",\n\t\t\t\t),\n\t\t\t),\n\t\t\tprecondition: inlineEditVisible,\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.InlineEditsActions,\n\t\t\t\ttitle: nls.localize(\"inlineEditsActions\", \"Accept Inline Edit\"),\n\t\t\t\tgroup: \"primary\",\n\t\t\t\torder: 1,\n\t\t\t\ticon: Codicon.check,\n\t\t\t},\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\t\t\t\tweight: 20000,\n\t\t\t\tkbExpr: inlineEditVisible,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\t\teditor = editor.getParentEditor();\n\t\t}\n\t\tconst controller = InlineEditsController.get(editor);\n\t\tif (controller) {\n\t\t\tcontroller.model.get()?.accept(controller.editor);\n\t\t\tcontroller.editor.focus();\n\t\t}\n\t}\n}\n\n/*\nTODO@hediet\nexport class PinInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineEdits.pin',\n\t\t\t...labelAndAlias(nls.localize2('action.inlineEdits.pin', \"Pin Inline Edit\")),\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.Space,\n\t\t\t\tweight: 20000,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineEditsController.get(editor);\n\t\tif (controller) {\n\t\t\tcontroller.model.get()?.togglePin();\n\t\t}\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.InlineEditsActions, {\n\tcommand: {\n\t\tid: 'editor.action.inlineEdits.pin',\n\t\ttitle: nls.localize('Pin', \"Pin\"),\n\t\ticon: Codicon.pin,\n\t},\n\tgroup: 'primary',\n\torder: 1,\n\twhen: isPinnedContextKey.negate(),\n});\n\nMenuRegistry.appendMenuItem(MenuId.InlineEditsActions, {\n\tcommand: {\n\t\tid: 'editor.action.inlineEdits.unpin',\n\t\ttitle: nls.localize('Unpin', \"Unpin\"),\n\t\ticon: Codicon.pinned,\n\t},\n\tgroup: 'primary',\n\torder: 1,\n\twhen: isPinnedContextKey,\n});*/\n\nexport class HideInlineEdit extends EditorAction {\n\tpublic static ID = \"editor.action.inlineEdits.hide\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: HideInlineEdit.ID,\n\t\t\t...labelAndAlias(\n\t\t\t\tnls.localize2(\"action.inlineEdits.hide\", \"Hide Inline Edit\"),\n\t\t\t),\n\t\t\tprecondition: inlineEditVisible,\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineEditsController.get(editor);\n\t\ttransaction((tx) => {\n\t\t\tcontroller?.model.get()?.stop(tx);\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
