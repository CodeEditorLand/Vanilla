{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdits/browser/inlineEditsController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { readHotReloadableExport } from \"../../../../base/common/hotReloadHelpers.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype IReader,\n\ttype ISettableObservable,\n\tderived,\n\tderivedDisposable,\n\tderivedObservableWithCache,\n\tderivedWithSetter,\n\tobservableValue,\n} from \"../../../../base/common/observable.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tbindContextKey,\n\tobservableConfigValue,\n} from \"../../../../platform/observable/common/platformObservableUtils.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { observableCodeEditor } from \"../../../browser/observableCodeEditor.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport { ILanguageFeatureDebounceService } from \"../../../common/services/languageFeatureDebounce.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { inlineEditVisible, isPinnedContextKey } from \"./consts.js\";\nimport { InlineEditsModel } from \"./inlineEditsModel.js\";\nimport { InlineEditsWidget } from \"./inlineEditsWidget.js\";\n\nexport class InlineEditsController extends Disposable {\n\tstatic ID = \"editor.contrib.inlineEditsController\";\n\n\tpublic static get(editor: ICodeEditor): InlineEditsController | null {\n\t\treturn editor.getContribution<InlineEditsController>(\n\t\t\tInlineEditsController.ID,\n\t\t);\n\t}\n\n\tprivate readonly _enabled = observableConfigValue(\n\t\t\"editor.inlineEdits.enabled\",\n\t\tfalse,\n\t\tthis._configurationService,\n\t);\n\tprivate readonly _editorObs = observableCodeEditor(this.editor);\n\tprivate readonly _selection = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\tthis._editorObs.cursorSelection.read(reader) ??\n\t\t\tnew Selection(1, 1, 1, 1),\n\t);\n\n\tprivate readonly _debounceValue = this._debounceService.for(\n\t\tthis._languageFeaturesService.inlineCompletionsProvider,\n\t\t\"InlineEditsDebounce\",\n\t\t{ min: 50, max: 50 },\n\t);\n\n\tpublic readonly model = derivedDisposable<InlineEditsModel | undefined>(\n\t\tthis,\n\t\t(reader) => {\n\t\t\tif (!this._enabled.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (this._editorObs.isReadonly.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst textModel = this._editorObs.model.read(reader);\n\t\t\tif (!textModel) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst model: InlineEditsModel =\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\treadHotReloadableExport(InlineEditsModel, reader),\n\t\t\t\t\ttextModel,\n\t\t\t\t\tthis._editorObs.versionId,\n\t\t\t\t\tthis._selection,\n\t\t\t\t\tthis._debounceValue,\n\t\t\t\t);\n\n\t\t\treturn model;\n\t\t},\n\t);\n\n\tprivate readonly _hadInlineEdit = derivedObservableWithCache<boolean>(\n\t\tthis,\n\t\t(reader, lastValue) =>\n\t\t\tlastValue ||\n\t\t\tthis.model.read(reader)?.inlineEdit.read(reader) !== undefined,\n\t);\n\n\tprotected readonly _widget = derivedDisposable(this, (reader) => {\n\t\tif (!this._hadInlineEdit.read(reader)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._instantiationService.createInstance(\n\t\t\treadHotReloadableExport(InlineEditsWidget, reader),\n\t\t\tthis.editor,\n\t\t\tthis.model.map((m, reader) => m?.inlineEdit.read(reader)),\n\t\t\tflattenSettableObservable(\n\t\t\t\t(reader) =>\n\t\t\t\t\tthis.model.read(reader)?.userPrompt ??\n\t\t\t\t\tobservableValue(\"empty\", \"\"),\n\t\t\t),\n\t\t);\n\t});\n\n\tconstructor(\n\t\tpublic readonly editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@ILanguageFeatureDebounceService private readonly _debounceService: ILanguageFeatureDebounceService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(bindContextKey(inlineEditVisible, this._contextKeyService, r => !!this.model.read(r)?.inlineEdit.read(r)));\n\t\tthis._register(bindContextKey(isPinnedContextKey, this._contextKeyService, r => !!this.model.read(r)?.isPinned.read(r)));\n\n\t\tthis.model.recomputeInitiallyAndOnChange(this._store);\n\t\tthis._widget.recomputeInitiallyAndOnChange(this._store);\n\t}\n}\n\nfunction flattenSettableObservable<TResult>(\n\tfn: (reader: IReader | undefined) => ISettableObservable<TResult>,\n): ISettableObservable<TResult> {\n\treturn derivedWithSetter(\n\t\tundefined,\n\t\t(reader) => {\n\t\t\tconst obs = fn(reader);\n\t\t\treturn obs.read(reader);\n\t\t},\n\t\t(value, tx) => {\n\t\t\tfn(undefined).set(value, tx);\n\t\t},\n\t);\n}\n"],
  "mappings": "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",
  "names": ["reader"]
}
