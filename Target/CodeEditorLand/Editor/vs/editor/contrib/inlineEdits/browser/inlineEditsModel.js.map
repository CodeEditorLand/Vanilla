{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdits/browser/inlineEditsModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from \"../../../../base/common/async.js\";\nimport {\n\tCancellationToken,\n\tcancelOnDispose,\n} from \"../../../../base/common/cancellation.js\";\nimport {\n\titemsEquals,\n\tstructuralEquals,\n} from \"../../../../base/common/equals.js\";\nimport { BugIndicatingError } from \"../../../../base/common/errors.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\ttype ISettableObservable,\n\ttype ITransaction,\n\tObservablePromise,\n\tderived,\n\tderivedDisposable,\n\tderivedHandleChanges,\n\tderivedOpts,\n\tdisposableObservableValue,\n\tobservableSignal,\n\tobservableValue,\n\trecomputeInitiallyAndOnChange,\n\tsubtransaction,\n} from \"../../../../base/common/observable.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { IDiffProviderFactoryService } from \"../../../browser/widget/diffEditor/diffProviderFactoryService.js\";\nimport { LineRange } from \"../../../common/core/lineRange.js\";\nimport type { Range } from \"../../../common/core/range.js\";\nimport type { Selection } from \"../../../common/core/selection.js\";\nimport {\n\ttype Command,\n\ttype InlineCompletionContext,\n\tInlineCompletionTriggerKind,\n} from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport type { IFeatureDebounceInformation } from \"../../../common/services/languageFeatureDebounce.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { IModelService } from \"../../../common/services/model.js\";\nimport type { IModelContentChangedEvent } from \"../../../common/textModelEvents.js\";\nimport {\n\ttype InlineCompletionItem,\n\ttype InlineCompletionProviderResult,\n\tprovideInlineCompletions,\n} from \"../../inlineCompletions/browser/model/provideInlineCompletions.js\";\nimport { InlineEdit } from \"./inlineEditsWidget.js\";\n\nexport class InlineEditsModel extends Disposable {\n\tprivate static _modelId = 0;\n\tprivate static _createUniqueUri(): URI {\n\t\treturn URI.from({\n\t\t\tscheme: \"inline-edits\",\n\t\t\tpath: new Date().toString() + String(InlineEditsModel._modelId++),\n\t\t});\n\t}\n\n\tprivate readonly _forceUpdateExplicitlySignal = observableSignal(this);\n\n\t// We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n\tprivate readonly _selectedInlineCompletionId = observableValue<\n\t\tstring | undefined\n\t>(this, undefined);\n\n\tprivate readonly _isActive = observableValue<boolean>(this, false);\n\n\tprivate readonly _originalModel = derivedDisposable(() =>\n\t\tthis._modelService.createModel(\n\t\t\t\"\",\n\t\t\tnull,\n\t\t\tInlineEditsModel._createUniqueUri(),\n\t\t),\n\t).keepObserved(this._store);\n\tprivate readonly _modifiedModel = derivedDisposable(() =>\n\t\tthis._modelService.createModel(\n\t\t\t\"\",\n\t\t\tnull,\n\t\t\tInlineEditsModel._createUniqueUri(),\n\t\t),\n\t).keepObserved(this._store);\n\n\tprivate readonly _pinnedRange = new TrackedRange(\n\t\tthis.textModel,\n\t\tthis._textModelVersionId,\n\t);\n\n\tpublic readonly isPinned = this._pinnedRange.range.map((range) => !!range);\n\n\tpublic readonly userPrompt: ISettableObservable<string | undefined> =\n\t\tobservableValue<string | undefined>(this, undefined);\n\n\tconstructor(\n\t\tpublic readonly textModel: ITextModel,\n\t\tpublic readonly _textModelVersionId: IObservable<number | null, IModelContentChangedEvent | undefined>,\n\t\tprivate readonly _selection: IObservable<Selection>,\n\t\tprotected readonly _debounceValue: IFeatureDebounceInformation,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IDiffProviderFactoryService private readonly _diffProviderFactoryService: IDiffProviderFactoryService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._fetchInlineEditsPromise));\n\t}\n\n\tpublic readonly inlineEdit = derived<InlineEdit | undefined>(\n\t\tthis,\n\t\t(reader) => {\n\t\t\treturn this._inlineEdit.read(reader)?.promiseResult.read(reader)\n\t\t\t\t?.data;\n\t\t},\n\t);\n\n\tpublic readonly _inlineEdit = derived<\n\t\tObservablePromise<InlineEdit | undefined> | undefined\n\t>(this, (reader) => {\n\t\tconst edit = this.selectedInlineEdit.read(reader);\n\t\tif (!edit) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst range = edit.inlineCompletion.range;\n\t\tif (edit.inlineCompletion.insertText.trim() === \"\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet newLines = edit.inlineCompletion.insertText.split(/\\r\\n|\\r|\\n/);\n\n\t\tfunction removeIndentation(lines: string[]): string[] {\n\t\t\tconst indentation = lines[0].match(/^\\s*/)?.[0] ?? \"\";\n\t\t\treturn lines.map((l) =>\n\t\t\t\tl.replace(new RegExp(\"^\" + indentation), \"\"),\n\t\t\t);\n\t\t}\n\t\tnewLines = removeIndentation(newLines);\n\n\t\tconst existing = this.textModel.getValueInRange(range);\n\t\tlet existingLines = existing.split(/\\r\\n|\\r|\\n/);\n\t\texistingLines = removeIndentation(existingLines);\n\t\tthis._originalModel.get().setValue(existingLines.join(\"\\n\"));\n\t\tthis._modifiedModel.get().setValue(newLines.join(\"\\n\"));\n\n\t\tconst d = this._diffProviderFactoryService.createDiffProvider({\n\t\t\tdiffAlgorithm: \"advanced\",\n\t\t});\n\t\treturn ObservablePromise.fromFn(async () => {\n\t\t\tconst result = await d.computeDiff(\n\t\t\t\tthis._originalModel.get(),\n\t\t\t\tthis._modifiedModel.get(),\n\t\t\t\t{\n\t\t\t\t\tcomputeMoves: false,\n\t\t\t\t\tignoreTrimWhitespace: false,\n\t\t\t\t\tmaxComputationTimeMs: 1000,\n\t\t\t\t},\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\n\t\t\tif (result.identical) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn new InlineEdit(\n\t\t\t\tLineRange.fromRangeInclusive(range),\n\t\t\t\tremoveIndentation(newLines),\n\t\t\t\tresult.changes,\n\t\t\t);\n\t\t});\n\t});\n\n\tprivate readonly _fetchStore = this._register(new DisposableStore());\n\n\tprivate readonly _inlineEditsFetchResult = disposableObservableValue<\n\t\tInlineCompletionProviderResult | undefined\n\t>(this, undefined);\n\tprivate readonly _inlineEdits = derivedOpts<InlineEditData[]>(\n\t\t{ owner: this, equalsFn: structuralEquals },\n\t\t(reader) => {\n\t\t\treturn (\n\t\t\t\tthis._inlineEditsFetchResult\n\t\t\t\t\t.read(reader)\n\t\t\t\t\t?.completions.map((c) => new InlineEditData(c)) ?? []\n\t\t\t);\n\t\t},\n\t);\n\n\tprivate readonly _fetchInlineEditsPromise = derivedHandleChanges(\n\t\t{\n\t\t\towner: this,\n\t\t\tcreateEmptyChangeSummary: () => ({\n\t\t\t\tinlineCompletionTriggerKind:\n\t\t\t\t\tInlineCompletionTriggerKind.Automatic,\n\t\t\t}),\n\t\t\thandleChange: (ctx, changeSummary) => {\n\t\t\t\t/** @description fetch inline completions */\n\t\t\t\tif (ctx.didChange(this._forceUpdateExplicitlySignal)) {\n\t\t\t\t\tchangeSummary.inlineCompletionTriggerKind =\n\t\t\t\t\t\tInlineCompletionTriggerKind.Explicit;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t\tasync (reader, changeSummary) => {\n\t\t\tthis._fetchStore.clear();\n\t\t\tthis._forceUpdateExplicitlySignal.read(reader);\n\t\t\t/*if (!this._isActive.read(reader)) {\n\t\t\treturn undefined;\n\t\t}*/\n\t\t\tthis._textModelVersionId.read(reader);\n\n\t\t\tfunction mapValue<T, TOut>(value: T, fn: (value: T) => TOut): TOut {\n\t\t\t\treturn fn(value);\n\t\t\t}\n\n\t\t\tconst selection =\n\t\t\t\tthis._pinnedRange.range.read(reader) ??\n\t\t\t\tmapValue(this._selection.read(reader), (v) =>\n\t\t\t\t\tv.isEmpty() ? undefined : v,\n\t\t\t\t);\n\t\t\tif (!selection) {\n\t\t\t\tthis._inlineEditsFetchResult.set(undefined, undefined);\n\t\t\t\tthis.userPrompt.set(undefined, undefined);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst context: InlineCompletionContext = {\n\t\t\t\ttriggerKind: changeSummary.inlineCompletionTriggerKind,\n\t\t\t\tselectedSuggestionInfo: undefined,\n\t\t\t\tuserPrompt: this.userPrompt.read(reader),\n\t\t\t};\n\n\t\t\tconst token = cancelOnDispose(this._fetchStore);\n\t\t\tawait timeout(200, token);\n\t\t\tconst result = await provideInlineCompletions(\n\t\t\t\tthis.languageFeaturesService.inlineCompletionsProvider,\n\t\t\t\tselection,\n\t\t\t\tthis.textModel,\n\t\t\t\tcontext,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._inlineEditsFetchResult.set(result, undefined);\n\t\t},\n\t);\n\n\tpublic async trigger(tx?: ITransaction): Promise<void> {\n\t\tthis._isActive.set(true, tx);\n\t\tawait this._fetchInlineEditsPromise.get();\n\t}\n\n\tpublic async triggerExplicitly(tx?: ITransaction): Promise<void> {\n\t\tsubtransaction(tx, (tx) => {\n\t\t\tthis._isActive.set(true, tx);\n\t\t\tthis._forceUpdateExplicitlySignal.trigger(tx);\n\t\t});\n\t\tawait this._fetchInlineEditsPromise.get();\n\t}\n\n\tpublic stop(tx?: ITransaction): void {\n\t\tsubtransaction(tx, (tx) => {\n\t\t\tthis.userPrompt.set(undefined, tx);\n\t\t\tthis._isActive.set(false, tx);\n\t\t\tthis._inlineEditsFetchResult.set(undefined, tx);\n\t\t\tthis._pinnedRange.setRange(undefined, tx);\n\t\t\t//this._source.clear(tx);\n\t\t});\n\t}\n\n\tprivate readonly _filteredInlineEditItems = derivedOpts<InlineEditData[]>(\n\t\t{ owner: this, equalsFn: itemsEquals() },\n\t\t(reader) => {\n\t\t\treturn this._inlineEdits.read(reader);\n\t\t},\n\t);\n\n\tpublic readonly selectedInlineCompletionIndex = derived<number>(\n\t\tthis,\n\t\t(reader) => {\n\t\t\tconst selectedInlineCompletionId =\n\t\t\t\tthis._selectedInlineCompletionId.read(reader);\n\t\t\tconst filteredCompletions =\n\t\t\t\tthis._filteredInlineEditItems.read(reader);\n\t\t\tconst idx =\n\t\t\t\tthis._selectedInlineCompletionId === undefined\n\t\t\t\t\t? -1\n\t\t\t\t\t: filteredCompletions.findIndex(\n\t\t\t\t\t\t\t(v) => v.semanticId === selectedInlineCompletionId,\n\t\t\t\t\t\t);\n\t\t\tif (idx === -1) {\n\t\t\t\t// Reset the selection so that the selection does not jump back when it appears again\n\t\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn idx;\n\t\t},\n\t);\n\n\tpublic readonly selectedInlineEdit = derived<InlineEditData | undefined>(\n\t\tthis,\n\t\t(reader) => {\n\t\t\tconst filteredCompletions =\n\t\t\t\tthis._filteredInlineEditItems.read(reader);\n\t\t\tconst idx = this.selectedInlineCompletionIndex.read(reader);\n\t\t\treturn filteredCompletions[idx];\n\t\t},\n\t);\n\n\tpublic readonly activeCommands = derivedOpts<Command[]>(\n\t\t{ owner: this, equalsFn: itemsEquals() },\n\t\t(r) =>\n\t\t\tthis.selectedInlineEdit.read(r)?.inlineCompletion.source\n\t\t\t\t.inlineCompletions.commands ?? [],\n\t);\n\n\tprivate async _deltaSelectedInlineCompletionIndex(\n\t\tdelta: 1 | -1,\n\t): Promise<void> {\n\t\tawait this.triggerExplicitly();\n\n\t\tconst completions = this._filteredInlineEditItems.get() || [];\n\t\tif (completions.length > 0) {\n\t\t\tconst newIdx =\n\t\t\t\t(this.selectedInlineCompletionIndex.get() +\n\t\t\t\t\tdelta +\n\t\t\t\t\tcompletions.length) %\n\t\t\t\tcompletions.length;\n\t\t\tthis._selectedInlineCompletionId.set(\n\t\t\t\tcompletions[newIdx].semanticId,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t} else {\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t}\n\t}\n\n\tpublic async next(): Promise<void> {\n\t\tawait this._deltaSelectedInlineCompletionIndex(1);\n\t}\n\n\tpublic async previous(): Promise<void> {\n\t\tawait this._deltaSelectedInlineCompletionIndex(-1);\n\t}\n\n\tpublic togglePin(): void {\n\t\tif (this.isPinned.get()) {\n\t\t\tthis._pinnedRange.setRange(undefined, undefined);\n\t\t} else {\n\t\t\tthis._pinnedRange.setRange(this._selection.get(), undefined);\n\t\t}\n\t}\n\n\tpublic async accept(editor: ICodeEditor): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\t\tconst edit = this.selectedInlineEdit.get();\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\n\t\teditor.pushUndoStop();\n\t\teditor.executeEdits(\"inlineSuggestion.accept\", [\n\t\t\tedit.inlineCompletion.toSingleTextEdit().toSingleEditOperation(),\n\t\t]);\n\t\tthis.stop();\n\t}\n}\n\nclass InlineEditData {\n\tpublic readonly semanticId = this.inlineCompletion.hash();\n\n\tconstructor(public readonly inlineCompletion: InlineCompletionItem) {}\n}\n\nclass TrackedRange extends Disposable {\n\tprivate readonly _decorations = observableValue<string[]>(this, []);\n\n\tconstructor(\n\t\tprivate readonly _textModel: ITextModel,\n\t\tprivate readonly _versionId: IObservable<number | null>,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis._textModel.deltaDecorations(this._decorations.get(), []);\n\t\t\t}),\n\t\t);\n\t}\n\n\tsetRange(range: Range | undefined, tx: ITransaction | undefined): void {\n\t\tthis._decorations.set(\n\t\t\tthis._textModel.deltaDecorations(\n\t\t\t\tthis._decorations.get(),\n\t\t\t\trange\n\t\t\t\t\t? [{ range, options: { description: \"trackedRange\" } }]\n\t\t\t\t\t: [],\n\t\t\t),\n\t\t\ttx,\n\t\t);\n\t}\n\n\tpublic readonly range = derived(this, (reader) => {\n\t\tthis._versionId.read(reader);\n\t\tconst deco = this._decorations.read(reader)[0];\n\t\tif (!deco) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._textModel.getDecorationRange(deco) ?? null;\n\t});\n}\n"],
  "mappings": "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",
  "names": ["tx"]
}
