{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdits/browser/inlineEditsModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../../base/common/async.js';\nimport { CancellationToken, cancelOnDispose } from '../../../../base/common/cancellation.js';\nimport { itemsEquals, structuralEquals } from '../../../../base/common/equals.js';\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, ISettableObservable, ITransaction, ObservablePromise, derived, derivedDisposable, derivedHandleChanges, derivedOpts, disposableObservableValue, observableSignal, observableValue, recomputeInitiallyAndOnChange, subtransaction } from '../../../../base/common/observable.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { IDiffProviderFactoryService } from '../../../browser/widget/diffEditor/diffProviderFactoryService.js';\nimport { LineRange } from '../../../common/core/lineRange.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { Command, InlineCompletionContext, InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { IFeatureDebounceInformation } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { IModelContentChangedEvent } from '../../../common/textModelEvents.js';\nimport { InlineCompletionItem, InlineCompletionProviderResult, provideInlineCompletions } from '../../inlineCompletions/browser/model/provideInlineCompletions.js';\nimport { InlineEdit } from './inlineEditsWidget.js';\n\nexport class InlineEditsModel extends Disposable {\n\tprivate static _modelId = 0;\n\tprivate static _createUniqueUri(): URI {\n\t\treturn URI.from({ scheme: 'inline-edits', path: new Date().toString() + String(InlineEditsModel._modelId++) });\n\t}\n\n\tprivate readonly _forceUpdateExplicitlySignal = observableSignal(this);\n\n\t// We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n\tprivate readonly _selectedInlineCompletionId = observableValue<string | undefined>(this, undefined);\n\n\tprivate readonly _isActive = observableValue<boolean>(this, false);\n\n\tprivate readonly _originalModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditsModel._createUniqueUri())).keepObserved(this._store);\n\tprivate readonly _modifiedModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditsModel._createUniqueUri())).keepObserved(this._store);\n\n\tprivate readonly _pinnedRange = new TrackedRange(this.textModel, this._textModelVersionId);\n\n\tpublic readonly isPinned = this._pinnedRange.range.map(range => !!range);\n\n\tpublic readonly userPrompt: ISettableObservable<string | undefined> = observableValue<string | undefined>(this, undefined);\n\n\tconstructor(\n\t\tpublic readonly textModel: ITextModel,\n\t\tpublic readonly _textModelVersionId: IObservable<number | null, IModelContentChangedEvent | undefined>,\n\t\tprivate readonly _selection: IObservable<Selection>,\n\t\tprotected readonly _debounceValue: IFeatureDebounceInformation,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IDiffProviderFactoryService private readonly _diffProviderFactoryService: IDiffProviderFactoryService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._fetchInlineEditsPromise));\n\t}\n\n\tpublic readonly inlineEdit = derived<InlineEdit | undefined>(this, reader => {\n\t\treturn this._inlineEdit.read(reader)?.promiseResult.read(reader)?.data;\n\t});\n\n\tpublic readonly _inlineEdit = derived<ObservablePromise<InlineEdit | undefined> | undefined>(this, reader => {\n\t\tconst edit = this.selectedInlineEdit.read(reader);\n\t\tif (!edit) { return undefined; }\n\t\tconst range = edit.inlineCompletion.range;\n\t\tif (edit.inlineCompletion.insertText.trim() === '') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet newLines = edit.inlineCompletion.insertText.split(/\\r\\n|\\r|\\n/);\n\n\t\tfunction removeIndentation(lines: string[]): string[] {\n\t\t\tconst indentation = lines[0].match(/^\\s*/)?.[0] ?? '';\n\t\t\treturn lines.map(l => l.replace(new RegExp('^' + indentation), ''));\n\t\t}\n\t\tnewLines = removeIndentation(newLines);\n\n\t\tconst existing = this.textModel.getValueInRange(range);\n\t\tlet existingLines = existing.split(/\\r\\n|\\r|\\n/);\n\t\texistingLines = removeIndentation(existingLines);\n\t\tthis._originalModel.get().setValue(existingLines.join('\\n'));\n\t\tthis._modifiedModel.get().setValue(newLines.join('\\n'));\n\n\t\tconst d = this._diffProviderFactoryService.createDiffProvider({ diffAlgorithm: 'advanced' });\n\t\treturn ObservablePromise.fromFn(async () => {\n\t\t\tconst result = await d.computeDiff(this._originalModel.get(), this._modifiedModel.get(), {\n\t\t\t\tcomputeMoves: false,\n\t\t\t\tignoreTrimWhitespace: false,\n\t\t\t\tmaxComputationTimeMs: 1000,\n\t\t\t}, CancellationToken.None);\n\n\t\t\tif (result.identical) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn new InlineEdit(LineRange.fromRangeInclusive(range), removeIndentation(newLines), result.changes);\n\t\t});\n\t});\n\n\tprivate readonly _fetchStore = this._register(new DisposableStore());\n\n\tprivate readonly _inlineEditsFetchResult = disposableObservableValue<InlineCompletionProviderResult | undefined>(this, undefined);\n\tprivate readonly _inlineEdits = derivedOpts<InlineEditData[]>({ owner: this, equalsFn: structuralEquals }, reader => {\n\t\treturn this._inlineEditsFetchResult.read(reader)?.completions.map(c => new InlineEditData(c)) ?? [];\n\t});\n\n\tprivate readonly _fetchInlineEditsPromise = derivedHandleChanges({\n\t\towner: this,\n\t\tcreateEmptyChangeSummary: () => ({\n\t\t\tinlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n\t\t}),\n\t\thandleChange: (ctx, changeSummary) => {\n\t\t\t/** @description fetch inline completions */\n\t\t\tif (ctx.didChange(this._forceUpdateExplicitlySignal)) {\n\t\t\t\tchangeSummary.inlineCompletionTriggerKind = InlineCompletionTriggerKind.Explicit;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t}, async (reader, changeSummary) => {\n\t\tthis._fetchStore.clear();\n\t\tthis._forceUpdateExplicitlySignal.read(reader);\n\t\t/*if (!this._isActive.read(reader)) {\n\t\t\treturn undefined;\n\t\t}*/\n\t\tthis._textModelVersionId.read(reader);\n\n\t\tfunction mapValue<T, TOut>(value: T, fn: (value: T) => TOut): TOut {\n\t\t\treturn fn(value);\n\t\t}\n\n\t\tconst selection = this._pinnedRange.range.read(reader) ?? mapValue(this._selection.read(reader), v => v.isEmpty() ? undefined : v);\n\t\tif (!selection) {\n\t\t\tthis._inlineEditsFetchResult.set(undefined, undefined);\n\t\t\tthis.userPrompt.set(undefined, undefined);\n\t\t\treturn undefined;\n\t\t}\n\t\tconst context: InlineCompletionContext = {\n\t\t\ttriggerKind: changeSummary.inlineCompletionTriggerKind,\n\t\t\tselectedSuggestionInfo: undefined,\n\t\t\tuserPrompt: this.userPrompt.read(reader),\n\t\t};\n\n\t\tconst token = cancelOnDispose(this._fetchStore);\n\t\tawait timeout(200, token);\n\t\tconst result = await provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, selection, this.textModel, context, token);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._inlineEditsFetchResult.set(result, undefined);\n\t});\n\n\tpublic async trigger(tx?: ITransaction): Promise<void> {\n\t\tthis._isActive.set(true, tx);\n\t\tawait this._fetchInlineEditsPromise.get();\n\t}\n\n\tpublic async triggerExplicitly(tx?: ITransaction): Promise<void> {\n\t\tsubtransaction(tx, tx => {\n\t\t\tthis._isActive.set(true, tx);\n\t\t\tthis._forceUpdateExplicitlySignal.trigger(tx);\n\t\t});\n\t\tawait this._fetchInlineEditsPromise.get();\n\t}\n\n\tpublic stop(tx?: ITransaction): void {\n\t\tsubtransaction(tx, tx => {\n\t\t\tthis.userPrompt.set(undefined, tx);\n\t\t\tthis._isActive.set(false, tx);\n\t\t\tthis._inlineEditsFetchResult.set(undefined, tx);\n\t\t\tthis._pinnedRange.setRange(undefined, tx);\n\t\t\t//this._source.clear(tx);\n\t\t});\n\t}\n\n\tprivate readonly _filteredInlineEditItems = derivedOpts<InlineEditData[]>({ owner: this, equalsFn: itemsEquals() }, reader => {\n\t\treturn this._inlineEdits.read(reader);\n\t});\n\n\tpublic readonly selectedInlineCompletionIndex = derived<number>(this, (reader) => {\n\t\tconst selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n\t\tconst filteredCompletions = this._filteredInlineEditItems.read(reader);\n\t\tconst idx = this._selectedInlineCompletionId === undefined ? -1\n\t\t\t: filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n\t\tif (idx === -1) {\n\t\t\t// Reset the selection so that the selection does not jump back when it appears again\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t\treturn 0;\n\t\t}\n\t\treturn idx;\n\t});\n\n\tpublic readonly selectedInlineEdit = derived<InlineEditData | undefined>(this, (reader) => {\n\t\tconst filteredCompletions = this._filteredInlineEditItems.read(reader);\n\t\tconst idx = this.selectedInlineCompletionIndex.read(reader);\n\t\treturn filteredCompletions[idx];\n\t});\n\n\tpublic readonly activeCommands = derivedOpts<Command[]>({ owner: this, equalsFn: itemsEquals() },\n\t\tr => this.selectedInlineEdit.read(r)?.inlineCompletion.source.inlineCompletions.commands ?? []\n\t);\n\n\tprivate async _deltaSelectedInlineCompletionIndex(delta: 1 | -1): Promise<void> {\n\t\tawait this.triggerExplicitly();\n\n\t\tconst completions = this._filteredInlineEditItems.get() || [];\n\t\tif (completions.length > 0) {\n\t\t\tconst newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n\t\t\tthis._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n\t\t} else {\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t}\n\t}\n\n\tpublic async next(): Promise<void> {\n\t\tawait this._deltaSelectedInlineCompletionIndex(1);\n\t}\n\n\tpublic async previous(): Promise<void> {\n\t\tawait this._deltaSelectedInlineCompletionIndex(-1);\n\t}\n\n\tpublic togglePin(): void {\n\t\tif (this.isPinned.get()) {\n\t\t\tthis._pinnedRange.setRange(undefined, undefined);\n\t\t} else {\n\t\t\tthis._pinnedRange.setRange(this._selection.get(), undefined);\n\t\t}\n\t}\n\n\tpublic async accept(editor: ICodeEditor): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\t\tconst edit = this.selectedInlineEdit.get();\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\n\t\teditor.pushUndoStop();\n\t\teditor.executeEdits(\n\t\t\t'inlineSuggestion.accept',\n\t\t\t[\n\t\t\t\tedit.inlineCompletion.toSingleTextEdit().toSingleEditOperation()\n\t\t\t]\n\t\t);\n\t\tthis.stop();\n\t}\n}\n\nclass InlineEditData {\n\tpublic readonly semanticId = this.inlineCompletion.hash();\n\n\tconstructor(public readonly inlineCompletion: InlineCompletionItem) {\n\n\t}\n}\n\nclass TrackedRange extends Disposable {\n\tprivate readonly _decorations = observableValue<string[]>(this, []);\n\n\tconstructor(\n\t\tprivate readonly _textModel: ITextModel,\n\t\tprivate readonly _versionId: IObservable<number | null>,\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis._textModel.deltaDecorations(this._decorations.get(), []);\n\t\t}));\n\t}\n\n\tsetRange(range: Range | undefined, tx: ITransaction | undefined): void {\n\t\tthis._decorations.set(this._textModel.deltaDecorations(this._decorations.get(), range ? [{ range, options: { description: 'trackedRange' } }] : []), tx);\n\t}\n\n\tpublic readonly range = derived(this, reader => {\n\t\tthis._versionId.read(reader);\n\t\tconst deco = this._decorations.read(reader)[0];\n\t\tif (!deco) { return null; }\n\n\t\treturn this._textModel.getDecorationRange(deco) ?? null;\n\t});\n}\n"],
  "mappings": "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",
  "names": ["tx"]
}
