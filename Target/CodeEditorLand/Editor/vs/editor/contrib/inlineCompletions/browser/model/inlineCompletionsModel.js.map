{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareBy, Permutation } from \"../../../../../base/common/arrays.js\";\nimport { mapFindFirst } from \"../../../../../base/common/arraysFind.js\";\nimport { itemsEquals } from \"../../../../../base/common/equals.js\";\nimport {\n\tBugIndicatingError,\n\tonUnexpectedError,\n\tonUnexpectedExternalError,\n} from \"../../../../../base/common/errors.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport {\n\tautorun,\n\tderived,\n\tderivedHandleChanges,\n\tderivedOpts,\n\tobservableSignal,\n\tobservableValue,\n\trecomputeInitiallyAndOnChange,\n\tsubtransaction,\n\ttransaction,\n\ttype IObservable,\n\ttype IReader,\n\ttype ITransaction,\n} from \"../../../../../base/common/observable.js\";\nimport {\n\tcommonPrefixLength,\n\tsplitLinesIncludeSeparators,\n} from \"../../../../../base/common/strings.js\";\nimport { isDefined } from \"../../../../../base/common/types.js\";\nimport { ICommandService } from \"../../../../../platform/commands/common/commands.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport type { ICodeEditor } from \"../../../../browser/editorBrowser.js\";\nimport { EditOperation } from \"../../../../common/core/editOperation.js\";\nimport { Position } from \"../../../../common/core/position.js\";\nimport { Range } from \"../../../../common/core/range.js\";\nimport { Selection } from \"../../../../common/core/selection.js\";\nimport { SingleTextEdit, TextEdit } from \"../../../../common/core/textEdit.js\";\nimport { TextLength } from \"../../../../common/core/textLength.js\";\nimport { ScrollType } from \"../../../../common/editorCommon.js\";\nimport {\n\tInlineCompletionTriggerKind,\n\tPartialAcceptTriggerKind,\n\ttype Command,\n\ttype InlineCompletionContext,\n} from \"../../../../common/languages.js\";\nimport { ILanguageConfigurationService } from \"../../../../common/languages/languageConfigurationRegistry.js\";\nimport {\n\tEndOfLinePreference,\n\ttype ITextModel,\n} from \"../../../../common/model.js\";\nimport type { IFeatureDebounceInformation } from \"../../../../common/services/languageFeatureDebounce.js\";\nimport type { IModelContentChangedEvent } from \"../../../../common/textModelEvents.js\";\nimport { SnippetController2 } from \"../../../snippet/browser/snippetController2.js\";\nimport { addPositions, subtractPositions } from \"../utils.js\";\nimport {\n\tGhostText,\n\tghostTextOrReplacementEquals,\n\tghostTextsOrReplacementsEqual,\n\ttype GhostTextOrReplacement,\n} from \"./ghostText.js\";\nimport {\n\tInlineCompletionsSource,\n\ttype InlineCompletionWithUpdatedRange,\n} from \"./inlineCompletionsSource.js\";\nimport {\n\tcomputeGhostText,\n\tsingleTextEditAugments,\n\tsingleTextRemoveCommonPrefix,\n} from \"./singleTextEdit.js\";\nimport type { SuggestItemInfo } from \"./suggestWidgetAdaptor.js\";\n\nexport class InlineCompletionsModel extends Disposable {\n\tprivate readonly _source = this._register(\n\t\tthis._instantiationService.createInstance(\n\t\t\tInlineCompletionsSource,\n\t\t\tthis.textModel,\n\t\t\tthis._textModelVersionId,\n\t\t\tthis._debounceValue,\n\t\t),\n\t);\n\tprivate readonly _isActive = observableValue<boolean>(this, false);\n\tprivate readonly _forceUpdateExplicitlySignal = observableSignal(this);\n\n\t// We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n\tprivate readonly _selectedInlineCompletionId = observableValue<\n\t\tstring | undefined\n\t>(this, undefined);\n\tprivate readonly _primaryPosition = derived(\n\t\tthis,\n\t\t(reader) => this._positions.read(reader)[0] ?? new Position(1, 1),\n\t);\n\n\tprivate _isAcceptingPartially = false;\n\tpublic get isAcceptingPartially() {\n\t\treturn this._isAcceptingPartially;\n\t}\n\n\tconstructor(\n\t\tpublic readonly textModel: ITextModel,\n\t\tpublic readonly selectedSuggestItem: IObservable<\n\t\t\tSuggestItemInfo | undefined\n\t\t>,\n\t\tpublic readonly _textModelVersionId: IObservable<\n\t\t\tnumber | null,\n\t\t\tIModelContentChangedEvent | undefined\n\t\t>,\n\t\tprivate readonly _positions: IObservable<readonly Position[]>,\n\t\tprivate readonly _debounceValue: IFeatureDebounceInformation,\n\t\tprivate readonly _suggestPreviewEnabled: IObservable<boolean>,\n\t\tprivate readonly _suggestPreviewMode: IObservable<\n\t\t\t\"prefix\" | \"subword\" | \"subwordSmart\"\n\t\t>,\n\t\tprivate readonly _inlineSuggestMode: IObservable<\n\t\t\t\"prefix\" | \"subword\" | \"subwordSmart\"\n\t\t>,\n\t\tprivate readonly _enabled: IObservable<boolean>,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@ILanguageConfigurationService\n\t\tprivate readonly _languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\trecomputeInitiallyAndOnChange(this._fetchInlineCompletionsPromise),\n\t\t);\n\n\t\tlet lastItem: InlineCompletionWithUpdatedRange | undefined;\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description call handleItemDidShow */\n\t\t\t\tconst item = this.state.read(reader);\n\t\t\t\tconst completion = item?.inlineCompletion;\n\t\t\t\tif (completion?.semanticId !== lastItem?.semanticId) {\n\t\t\t\t\tlastItem = completion;\n\t\t\t\t\tif (completion) {\n\t\t\t\t\t\tconst i = completion.inlineCompletion;\n\t\t\t\t\t\tconst src = i.source;\n\t\t\t\t\t\tsrc.provider.handleItemDidShow?.(\n\t\t\t\t\t\t\tsrc.inlineCompletions,\n\t\t\t\t\t\t\ti.sourceInlineCompletion,\n\t\t\t\t\t\t\ti.insertText,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate readonly _preserveCurrentCompletionReasons = new Set([\n\t\tVersionIdChangeReason.Redo,\n\t\tVersionIdChangeReason.Undo,\n\t\tVersionIdChangeReason.AcceptWord,\n\t]);\n\n\tprivate _getReason(\n\t\te: IModelContentChangedEvent | undefined,\n\t): VersionIdChangeReason {\n\t\tif (e?.isUndoing) {\n\t\t\treturn VersionIdChangeReason.Undo;\n\t\t}\n\t\tif (e?.isRedoing) {\n\t\t\treturn VersionIdChangeReason.Redo;\n\t\t}\n\t\tif (this.isAcceptingPartially) {\n\t\t\treturn VersionIdChangeReason.AcceptWord;\n\t\t}\n\t\treturn VersionIdChangeReason.Other;\n\t}\n\n\tprivate readonly _fetchInlineCompletionsPromise = derivedHandleChanges(\n\t\t{\n\t\t\towner: this,\n\t\t\tcreateEmptyChangeSummary: () => ({\n\t\t\t\tpreserveCurrentCompletion: false,\n\t\t\t\tinlineCompletionTriggerKind:\n\t\t\t\t\tInlineCompletionTriggerKind.Automatic,\n\t\t\t}),\n\t\t\thandleChange: (ctx, changeSummary) => {\n\t\t\t\t/** @description fetch inline completions */\n\t\t\t\tif (\n\t\t\t\t\tctx.didChange(this._textModelVersionId) &&\n\t\t\t\t\tthis._preserveCurrentCompletionReasons.has(\n\t\t\t\t\t\tthis._getReason(ctx.change),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tchangeSummary.preserveCurrentCompletion = true;\n\t\t\t\t} else if (ctx.didChange(this._forceUpdateExplicitlySignal)) {\n\t\t\t\t\tchangeSummary.inlineCompletionTriggerKind =\n\t\t\t\t\t\tInlineCompletionTriggerKind.Explicit;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t\t(reader, changeSummary) => {\n\t\t\tthis._forceUpdateExplicitlySignal.read(reader);\n\t\t\tconst shouldUpdate =\n\t\t\t\t(this._enabled.read(reader) &&\n\t\t\t\t\tthis.selectedSuggestItem.read(reader)) ||\n\t\t\t\tthis._isActive.read(reader);\n\t\t\tif (!shouldUpdate) {\n\t\t\t\tthis._source.cancelUpdate();\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tthis._textModelVersionId.read(reader); // Refetch on text change\n\n\t\t\tconst suggestWidgetInlineCompletions =\n\t\t\t\tthis._source.suggestWidgetInlineCompletions.get();\n\t\t\tconst suggestItem = this.selectedSuggestItem.read(reader);\n\t\t\tif (suggestWidgetInlineCompletions && !suggestItem) {\n\t\t\t\tconst inlineCompletions = this._source.inlineCompletions.get();\n\t\t\t\ttransaction((tx) => {\n\t\t\t\t\t/** @description Seed inline completions with (newer) suggest widget inline completions */\n\t\t\t\t\tif (\n\t\t\t\t\t\t!inlineCompletions ||\n\t\t\t\t\t\tsuggestWidgetInlineCompletions.request.versionId >\n\t\t\t\t\t\t\tinlineCompletions.request.versionId\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._source.inlineCompletions.set(\n\t\t\t\t\t\t\tsuggestWidgetInlineCompletions.clone(),\n\t\t\t\t\t\t\ttx,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis._source.clearSuggestWidgetInlineCompletions(tx);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cursorPosition = this._primaryPosition.read(reader);\n\t\t\tconst context: InlineCompletionContext = {\n\t\t\t\ttriggerKind: changeSummary.inlineCompletionTriggerKind,\n\t\t\t\tselectedSuggestionInfo: suggestItem?.toSelectedSuggestionInfo(),\n\t\t\t};\n\t\t\tconst itemToPreserveCandidate = this.selectedInlineCompletion.get();\n\t\t\tconst itemToPreserve =\n\t\t\t\tchangeSummary.preserveCurrentCompletion ||\n\t\t\t\titemToPreserveCandidate?.forwardStable\n\t\t\t\t\t? itemToPreserveCandidate\n\t\t\t\t\t: undefined;\n\t\t\treturn this._source.fetch(cursorPosition, context, itemToPreserve);\n\t\t},\n\t);\n\n\tpublic async trigger(tx?: ITransaction): Promise<void> {\n\t\tthis._isActive.set(true, tx);\n\t\tawait this._fetchInlineCompletionsPromise.get();\n\t}\n\n\tpublic async triggerExplicitly(tx?: ITransaction): Promise<void> {\n\t\tsubtransaction(tx, (tx) => {\n\t\t\tthis._isActive.set(true, tx);\n\t\t\tthis._forceUpdateExplicitlySignal.trigger(tx);\n\t\t});\n\t\tawait this._fetchInlineCompletionsPromise.get();\n\t}\n\n\tpublic stop(tx?: ITransaction): void {\n\t\tsubtransaction(tx, (tx) => {\n\t\t\tthis._isActive.set(false, tx);\n\t\t\tthis._source.clear(tx);\n\t\t});\n\t}\n\n\tprivate readonly _filteredInlineCompletionItems = derivedOpts(\n\t\t{ owner: this, equalsFn: itemsEquals() },\n\t\t(reader) => {\n\t\t\tconst c = this._source.inlineCompletions.read(reader);\n\t\t\tif (!c) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst cursorPosition = this._primaryPosition.read(reader);\n\t\t\tconst filteredCompletions = c.inlineCompletions.filter((c) =>\n\t\t\t\tc.isVisible(this.textModel, cursorPosition, reader),\n\t\t\t);\n\t\t\treturn filteredCompletions;\n\t\t},\n\t);\n\n\tpublic readonly selectedInlineCompletionIndex = derived<number>(\n\t\tthis,\n\t\t(reader) => {\n\t\t\tconst selectedInlineCompletionId =\n\t\t\t\tthis._selectedInlineCompletionId.read(reader);\n\t\t\tconst filteredCompletions =\n\t\t\t\tthis._filteredInlineCompletionItems.read(reader);\n\t\t\tconst idx =\n\t\t\t\tthis._selectedInlineCompletionId === undefined\n\t\t\t\t\t? -1\n\t\t\t\t\t: filteredCompletions.findIndex(\n\t\t\t\t\t\t\t(v) => v.semanticId === selectedInlineCompletionId,\n\t\t\t\t\t\t);\n\t\t\tif (idx === -1) {\n\t\t\t\t// Reset the selection so that the selection does not jump back when it appears again\n\t\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn idx;\n\t\t},\n\t);\n\n\tpublic readonly selectedInlineCompletion = derived<\n\t\tInlineCompletionWithUpdatedRange | undefined\n\t>(this, (reader) => {\n\t\tconst filteredCompletions =\n\t\t\tthis._filteredInlineCompletionItems.read(reader);\n\t\tconst idx = this.selectedInlineCompletionIndex.read(reader);\n\t\treturn filteredCompletions[idx];\n\t});\n\n\tpublic readonly activeCommands = derivedOpts<Command[]>(\n\t\t{ owner: this, equalsFn: itemsEquals() },\n\t\t(r) =>\n\t\t\tthis.selectedInlineCompletion.read(r)?.inlineCompletion.source\n\t\t\t\t.inlineCompletions.commands ?? [],\n\t);\n\n\tpublic readonly lastTriggerKind: IObservable<\n\t\tInlineCompletionTriggerKind | undefined\n\t> = this._source.inlineCompletions.map(\n\t\tthis,\n\t\t(v) => v?.request.context.triggerKind,\n\t);\n\n\tpublic readonly inlineCompletionsCount = derived<number | undefined>(\n\t\tthis,\n\t\t(reader) => {\n\t\t\tif (\n\t\t\t\tthis.lastTriggerKind.read(reader) ===\n\t\t\t\tInlineCompletionTriggerKind.Explicit\n\t\t\t) {\n\t\t\t\treturn this._filteredInlineCompletionItems.read(reader).length;\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t},\n\t);\n\n\tpublic readonly state = derivedOpts<\n\t\t| {\n\t\t\t\tedits: readonly SingleTextEdit[];\n\t\t\t\tprimaryGhostText: GhostTextOrReplacement;\n\t\t\t\tghostTexts: readonly GhostTextOrReplacement[];\n\t\t\t\tsuggestItem: SuggestItemInfo | undefined;\n\t\t\t\tinlineCompletion: InlineCompletionWithUpdatedRange | undefined;\n\t\t  }\n\t\t| undefined\n\t>(\n\t\t{\n\t\t\towner: this,\n\t\t\tequalsFn: (a, b) => {\n\t\t\t\tif (!a || !b) {\n\t\t\t\t\treturn a === b;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\tghostTextsOrReplacementsEqual(a.ghostTexts, b.ghostTexts) &&\n\t\t\t\t\ta.inlineCompletion === b.inlineCompletion &&\n\t\t\t\t\ta.suggestItem === b.suggestItem\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t(reader) => {\n\t\t\tconst model = this.textModel;\n\n\t\t\tconst suggestItem = this.selectedSuggestItem.read(reader);\n\t\t\tif (suggestItem) {\n\t\t\t\tconst suggestCompletionEdit = singleTextRemoveCommonPrefix(\n\t\t\t\t\tsuggestItem.toSingleTextEdit(),\n\t\t\t\t\tmodel,\n\t\t\t\t);\n\t\t\t\tconst augmentation = this._computeAugmentation(\n\t\t\t\t\tsuggestCompletionEdit,\n\t\t\t\t\treader,\n\t\t\t\t);\n\n\t\t\t\tconst isSuggestionPreviewEnabled =\n\t\t\t\t\tthis._suggestPreviewEnabled.read(reader);\n\t\t\t\tif (!isSuggestionPreviewEnabled && !augmentation) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst fullEdit = augmentation?.edit ?? suggestCompletionEdit;\n\t\t\t\tconst fullEditPreviewLength = augmentation\n\t\t\t\t\t? augmentation.edit.text.length -\n\t\t\t\t\t\tsuggestCompletionEdit.text.length\n\t\t\t\t\t: 0;\n\n\t\t\t\tconst mode = this._suggestPreviewMode.read(reader);\n\t\t\t\tconst positions = this._positions.read(reader);\n\t\t\t\tconst edits = [\n\t\t\t\t\tfullEdit,\n\t\t\t\t\t...getSecondaryEdits(this.textModel, positions, fullEdit),\n\t\t\t\t];\n\t\t\t\tconst ghostTexts = edits\n\t\t\t\t\t.map((edit, idx) =>\n\t\t\t\t\t\tcomputeGhostText(\n\t\t\t\t\t\t\tedit,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\tpositions[idx],\n\t\t\t\t\t\t\tfullEditPreviewLength,\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t\t.filter(isDefined);\n\t\t\t\tconst primaryGhostText =\n\t\t\t\t\tghostTexts[0] ??\n\t\t\t\t\tnew GhostText(fullEdit.range.endLineNumber, []);\n\t\t\t\treturn {\n\t\t\t\t\tedits,\n\t\t\t\t\tprimaryGhostText,\n\t\t\t\t\tghostTexts,\n\t\t\t\t\tinlineCompletion: augmentation?.completion,\n\t\t\t\t\tsuggestItem,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (!this._isActive.read(reader)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst inlineCompletion =\n\t\t\t\t\tthis.selectedInlineCompletion.read(reader);\n\t\t\t\tif (!inlineCompletion) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst replacement = inlineCompletion.toSingleTextEdit(reader);\n\t\t\t\tconst mode = this._inlineSuggestMode.read(reader);\n\t\t\t\tconst positions = this._positions.read(reader);\n\t\t\t\tconst edits = [\n\t\t\t\t\treplacement,\n\t\t\t\t\t...getSecondaryEdits(\n\t\t\t\t\t\tthis.textModel,\n\t\t\t\t\t\tpositions,\n\t\t\t\t\t\treplacement,\n\t\t\t\t\t),\n\t\t\t\t];\n\t\t\t\tconst ghostTexts = edits\n\t\t\t\t\t.map((edit, idx) =>\n\t\t\t\t\t\tcomputeGhostText(edit, model, mode, positions[idx], 0),\n\t\t\t\t\t)\n\t\t\t\t\t.filter(isDefined);\n\t\t\t\tif (!ghostTexts[0]) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tedits,\n\t\t\t\t\tprimaryGhostText: ghostTexts[0],\n\t\t\t\t\tghostTexts,\n\t\t\t\t\tinlineCompletion,\n\t\t\t\t\tsuggestItem: undefined,\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t);\n\n\tprivate _computeAugmentation(\n\t\tsuggestCompletion: SingleTextEdit,\n\t\treader: IReader | undefined,\n\t) {\n\t\tconst model = this.textModel;\n\t\tconst suggestWidgetInlineCompletions =\n\t\t\tthis._source.suggestWidgetInlineCompletions.read(reader);\n\t\tconst candidateInlineCompletions = suggestWidgetInlineCompletions\n\t\t\t? suggestWidgetInlineCompletions.inlineCompletions\n\t\t\t: [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n\n\t\tconst augmentedCompletion = mapFindFirst(\n\t\t\tcandidateInlineCompletions,\n\t\t\t(completion) => {\n\t\t\t\tlet r = completion.toSingleTextEdit(reader);\n\t\t\t\tr = singleTextRemoveCommonPrefix(\n\t\t\t\t\tr,\n\t\t\t\t\tmodel,\n\t\t\t\t\tRange.fromPositions(\n\t\t\t\t\t\tr.range.getStartPosition(),\n\t\t\t\t\t\tsuggestCompletion.range.getEndPosition(),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\treturn singleTextEditAugments(r, suggestCompletion)\n\t\t\t\t\t? { completion, edit: r }\n\t\t\t\t\t: undefined;\n\t\t\t},\n\t\t);\n\n\t\treturn augmentedCompletion;\n\t}\n\n\tpublic readonly ghostTexts = derivedOpts(\n\t\t{ owner: this, equalsFn: ghostTextsOrReplacementsEqual },\n\t\t(reader) => {\n\t\t\tconst v = this.state.read(reader);\n\t\t\tif (!v) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn v.ghostTexts;\n\t\t},\n\t);\n\n\tpublic readonly primaryGhostText = derivedOpts(\n\t\t{ owner: this, equalsFn: ghostTextOrReplacementEquals },\n\t\t(reader) => {\n\t\t\tconst v = this.state.read(reader);\n\t\t\tif (!v) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn v?.primaryGhostText;\n\t\t},\n\t);\n\n\tprivate async _deltaSelectedInlineCompletionIndex(\n\t\tdelta: 1 | -1,\n\t): Promise<void> {\n\t\tawait this.triggerExplicitly();\n\n\t\tconst completions = this._filteredInlineCompletionItems.get() || [];\n\t\tif (completions.length > 0) {\n\t\t\tconst newIdx =\n\t\t\t\t(this.selectedInlineCompletionIndex.get() +\n\t\t\t\t\tdelta +\n\t\t\t\t\tcompletions.length) %\n\t\t\t\tcompletions.length;\n\t\t\tthis._selectedInlineCompletionId.set(\n\t\t\t\tcompletions[newIdx].semanticId,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t} else {\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t}\n\t}\n\n\tpublic async next(): Promise<void> {\n\t\tawait this._deltaSelectedInlineCompletionIndex(1);\n\t}\n\n\tpublic async previous(): Promise<void> {\n\t\tawait this._deltaSelectedInlineCompletionIndex(-1);\n\t}\n\n\tpublic async accept(editor: ICodeEditor): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tconst state = this.state.get();\n\t\tif (\n\t\t\t!state ||\n\t\t\tstate.primaryGhostText.isEmpty() ||\n\t\t\t!state.inlineCompletion\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst completion = state.inlineCompletion.toInlineCompletion(undefined);\n\n\t\tif (completion.command) {\n\t\t\t// Make sure the completion list will not be disposed.\n\t\t\tcompletion.source.addRef();\n\t\t}\n\n\t\teditor.pushUndoStop();\n\t\tif (completion.snippetInfo) {\n\t\t\teditor.executeEdits(\"inlineSuggestion.accept\", [\n\t\t\t\tEditOperation.replace(completion.range, \"\"),\n\t\t\t\t...completion.additionalTextEdits,\n\t\t\t]);\n\t\t\teditor.setPosition(\n\t\t\t\tcompletion.snippetInfo.range.getStartPosition(),\n\t\t\t\t\"inlineCompletionAccept\",\n\t\t\t);\n\t\t\tSnippetController2.get(editor)?.insert(\n\t\t\t\tcompletion.snippetInfo.snippet,\n\t\t\t\t{ undoStopBefore: false },\n\t\t\t);\n\t\t} else {\n\t\t\tconst edits = state.edits;\n\t\t\tconst selections = getEndPositionsAfterApplying(edits).map((p) =>\n\t\t\t\tSelection.fromPositions(p),\n\t\t\t);\n\t\t\teditor.executeEdits(\"inlineSuggestion.accept\", [\n\t\t\t\t...edits.map((edit) =>\n\t\t\t\t\tEditOperation.replace(edit.range, edit.text),\n\t\t\t\t),\n\t\t\t\t...completion.additionalTextEdits,\n\t\t\t]);\n\t\t\teditor.setSelections(selections, \"inlineCompletionAccept\");\n\t\t}\n\n\t\t// Reset before invoking the command, as the command might cause a follow up trigger (which we don't want to reset).\n\t\tthis.stop();\n\n\t\tif (completion.command) {\n\t\t\tawait this._commandService\n\t\t\t\t.executeCommand(\n\t\t\t\t\tcompletion.command.id,\n\t\t\t\t\t...(completion.command.arguments || []),\n\t\t\t\t)\n\t\t\t\t.then(undefined, onUnexpectedExternalError);\n\t\t\tcompletion.source.removeRef();\n\t\t}\n\t}\n\n\tpublic async acceptNextWord(editor: ICodeEditor): Promise<void> {\n\t\tawait this._acceptNext(\n\t\t\teditor,\n\t\t\t(pos, text) => {\n\t\t\t\tconst langId = this.textModel.getLanguageIdAtPosition(\n\t\t\t\t\tpos.lineNumber,\n\t\t\t\t\tpos.column,\n\t\t\t\t);\n\t\t\t\tconst config =\n\t\t\t\t\tthis._languageConfigurationService.getLanguageConfiguration(\n\t\t\t\t\t\tlangId,\n\t\t\t\t\t);\n\t\t\t\tconst wordRegExp = new RegExp(\n\t\t\t\t\tconfig.wordDefinition.source,\n\t\t\t\t\tconfig.wordDefinition.flags.replace(\"g\", \"\"),\n\t\t\t\t);\n\n\t\t\t\tconst m1 = text.match(wordRegExp);\n\t\t\t\tlet acceptUntilIndexExclusive = 0;\n\t\t\t\tif (m1 && m1.index !== undefined) {\n\t\t\t\t\tif (m1.index === 0) {\n\t\t\t\t\t\tacceptUntilIndexExclusive = m1[0].length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tacceptUntilIndexExclusive = m1.index;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tacceptUntilIndexExclusive = text.length;\n\t\t\t\t}\n\n\t\t\t\tconst wsRegExp = /\\s+/g;\n\t\t\t\tconst m2 = wsRegExp.exec(text);\n\t\t\t\tif (m2 && m2.index !== undefined) {\n\t\t\t\t\tif (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n\t\t\t\t\t\tacceptUntilIndexExclusive = m2.index + m2[0].length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn acceptUntilIndexExclusive;\n\t\t\t},\n\t\t\tPartialAcceptTriggerKind.Word,\n\t\t);\n\t}\n\n\tpublic async acceptNextLine(editor: ICodeEditor): Promise<void> {\n\t\tawait this._acceptNext(\n\t\t\teditor,\n\t\t\t(pos, text) => {\n\t\t\t\tconst m = text.match(/\\n/);\n\t\t\t\tif (m && m.index !== undefined) {\n\t\t\t\t\treturn m.index + 1;\n\t\t\t\t}\n\t\t\t\treturn text.length;\n\t\t\t},\n\t\t\tPartialAcceptTriggerKind.Line,\n\t\t);\n\t}\n\n\tprivate async _acceptNext(\n\t\teditor: ICodeEditor,\n\t\tgetAcceptUntilIndex: (position: Position, text: string) => number,\n\t\tkind: PartialAcceptTriggerKind,\n\t): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tconst state = this.state.get();\n\t\tif (\n\t\t\t!state ||\n\t\t\tstate.primaryGhostText.isEmpty() ||\n\t\t\t!state.inlineCompletion\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst ghostText = state.primaryGhostText;\n\t\tconst completion = state.inlineCompletion.toInlineCompletion(undefined);\n\n\t\tif (\n\t\t\tcompletion.snippetInfo ||\n\t\t\tcompletion.filterText !== completion.insertText\n\t\t) {\n\t\t\t// not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n\t\t\tawait this.accept(editor);\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstPart = ghostText.parts[0];\n\t\tconst ghostTextPos = new Position(\n\t\t\tghostText.lineNumber,\n\t\t\tfirstPart.column,\n\t\t);\n\t\tconst ghostTextVal = firstPart.text;\n\t\tconst acceptUntilIndexExclusive = getAcceptUntilIndex(\n\t\t\tghostTextPos,\n\t\t\tghostTextVal,\n\t\t);\n\t\tif (\n\t\t\tacceptUntilIndexExclusive === ghostTextVal.length &&\n\t\t\tghostText.parts.length === 1\n\t\t) {\n\t\t\tthis.accept(editor);\n\t\t\treturn;\n\t\t}\n\t\tconst partialGhostTextVal = ghostTextVal.substring(\n\t\t\t0,\n\t\t\tacceptUntilIndexExclusive,\n\t\t);\n\n\t\tconst positions = this._positions.get();\n\t\tconst cursorPosition = positions[0];\n\n\t\t// Executing the edit might free the completion, so we have to hold a reference on it.\n\t\tcompletion.source.addRef();\n\t\ttry {\n\t\t\tthis._isAcceptingPartially = true;\n\t\t\ttry {\n\t\t\t\teditor.pushUndoStop();\n\t\t\t\tconst replaceRange = Range.fromPositions(\n\t\t\t\t\tcursorPosition,\n\t\t\t\t\tghostTextPos,\n\t\t\t\t);\n\t\t\t\tconst newText =\n\t\t\t\t\teditor.getModel()!.getValueInRange(replaceRange) +\n\t\t\t\t\tpartialGhostTextVal;\n\t\t\t\tconst primaryEdit = new SingleTextEdit(replaceRange, newText);\n\t\t\t\tconst edits = [\n\t\t\t\t\tprimaryEdit,\n\t\t\t\t\t...getSecondaryEdits(\n\t\t\t\t\t\tthis.textModel,\n\t\t\t\t\t\tpositions,\n\t\t\t\t\t\tprimaryEdit,\n\t\t\t\t\t),\n\t\t\t\t];\n\t\t\t\tconst selections = getEndPositionsAfterApplying(edits).map(\n\t\t\t\t\t(p) => Selection.fromPositions(p),\n\t\t\t\t);\n\t\t\t\teditor.executeEdits(\n\t\t\t\t\t\"inlineSuggestion.accept\",\n\t\t\t\t\tedits.map((edit) =>\n\t\t\t\t\t\tEditOperation.replace(edit.range, edit.text),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\teditor.setSelections(\n\t\t\t\t\tselections,\n\t\t\t\t\t\"inlineCompletionPartialAccept\",\n\t\t\t\t);\n\t\t\t\teditor.revealPositionInCenterIfOutsideViewport(\n\t\t\t\t\teditor.getPosition()!,\n\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t);\n\t\t\t} finally {\n\t\t\t\tthis._isAcceptingPartially = false;\n\t\t\t}\n\n\t\t\tif (completion.source.provider.handlePartialAccept) {\n\t\t\t\tconst acceptedRange = Range.fromPositions(\n\t\t\t\t\tcompletion.range.getStartPosition(),\n\t\t\t\t\tTextLength.ofText(partialGhostTextVal).addToPosition(\n\t\t\t\t\t\tghostTextPos,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\t// This assumes that the inline completion and the model use the same EOL style.\n\t\t\t\tconst text = editor\n\t\t\t\t\t.getModel()!\n\t\t\t\t\t.getValueInRange(acceptedRange, EndOfLinePreference.LF);\n\t\t\t\tcompletion.source.provider.handlePartialAccept(\n\t\t\t\t\tcompletion.source.inlineCompletions,\n\t\t\t\t\tcompletion.sourceInlineCompletion,\n\t\t\t\t\ttext.length,\n\t\t\t\t\t{ kind },\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tcompletion.source.removeRef();\n\t\t}\n\t}\n\n\tpublic handleSuggestAccepted(item: SuggestItemInfo) {\n\t\tconst itemEdit = singleTextRemoveCommonPrefix(\n\t\t\titem.toSingleTextEdit(),\n\t\t\tthis.textModel,\n\t\t);\n\t\tconst augmentedCompletion = this._computeAugmentation(\n\t\t\titemEdit,\n\t\t\tundefined,\n\t\t);\n\t\tif (!augmentedCompletion) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst inlineCompletion =\n\t\t\taugmentedCompletion.completion.inlineCompletion;\n\t\tinlineCompletion.source.provider.handlePartialAccept?.(\n\t\t\tinlineCompletion.source.inlineCompletions,\n\t\t\tinlineCompletion.sourceInlineCompletion,\n\t\t\titemEdit.text.length,\n\t\t\t{\n\t\t\t\tkind: PartialAcceptTriggerKind.Suggest,\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport enum VersionIdChangeReason {\n\tUndo = 0,\n\tRedo = 1,\n\tAcceptWord = 2,\n\tOther = 3,\n}\n\nexport function getSecondaryEdits(\n\ttextModel: ITextModel,\n\tpositions: readonly Position[],\n\tprimaryEdit: SingleTextEdit,\n): SingleTextEdit[] {\n\tif (positions.length === 1) {\n\t\t// No secondary cursor positions\n\t\treturn [];\n\t}\n\tconst primaryPosition = positions[0];\n\tconst secondaryPositions = positions.slice(1);\n\tconst primaryEditStartPosition = primaryEdit.range.getStartPosition();\n\tconst primaryEditEndPosition = primaryEdit.range.getEndPosition();\n\tconst replacedTextAfterPrimaryCursor = textModel.getValueInRange(\n\t\tRange.fromPositions(primaryPosition, primaryEditEndPosition),\n\t);\n\tconst positionWithinTextEdit = subtractPositions(\n\t\tprimaryPosition,\n\t\tprimaryEditStartPosition,\n\t);\n\tif (positionWithinTextEdit.lineNumber < 1) {\n\t\tonUnexpectedError(\n\t\t\tnew BugIndicatingError(\n\t\t\t\t`positionWithinTextEdit line number should be bigger than 0.\n\t\t\tInvalid subtraction between ${primaryPosition.toString()} and ${primaryEditStartPosition.toString()}`,\n\t\t\t),\n\t\t);\n\t\treturn [];\n\t}\n\tconst secondaryEditText = substringPos(\n\t\tprimaryEdit.text,\n\t\tpositionWithinTextEdit,\n\t);\n\treturn secondaryPositions.map((pos) => {\n\t\tconst posEnd = addPositions(\n\t\t\tsubtractPositions(pos, primaryEditStartPosition),\n\t\t\tprimaryEditEndPosition,\n\t\t);\n\t\tconst textAfterSecondaryCursor = textModel.getValueInRange(\n\t\t\tRange.fromPositions(pos, posEnd),\n\t\t);\n\t\tconst l = commonPrefixLength(\n\t\t\treplacedTextAfterPrimaryCursor,\n\t\t\ttextAfterSecondaryCursor,\n\t\t);\n\t\tconst range = Range.fromPositions(pos, pos.delta(0, l));\n\t\treturn new SingleTextEdit(range, secondaryEditText);\n\t});\n}\n\nfunction substringPos(text: string, pos: Position): string {\n\tlet subtext = \"\";\n\tconst lines = splitLinesIncludeSeparators(text);\n\tfor (let i = pos.lineNumber - 1; i < lines.length; i++) {\n\t\tsubtext += lines[i].substring(\n\t\t\ti === pos.lineNumber - 1 ? pos.column - 1 : 0,\n\t\t);\n\t}\n\treturn subtext;\n}\n\nfunction getEndPositionsAfterApplying(\n\tedits: readonly SingleTextEdit[],\n): Position[] {\n\tconst sortPerm = Permutation.createSortPermutation(\n\t\tedits,\n\t\tcompareBy((e) => e.range, Range.compareRangesUsingStarts),\n\t);\n\tconst edit = new TextEdit(sortPerm.apply(edits));\n\tconst sortedNewRanges = edit.getNewRanges();\n\tconst newRanges = sortPerm.inverse().apply(sortedNewRanges);\n\treturn newRanges.map((range) => range.getEndPosition());\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW,mBAAmB;AACvC,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAC5B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OAIM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,iBAAiB;AAC1B,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AAEtC,SAAS,qBAAqB;AAC9B,SAAS,gBAAgB;AACzB,SAAS,aAAa;AACtB,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB,gBAAgB;AACzC,SAAS,kBAAkB;AAC3B,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,OAGM;AACP,SAAS,qCAAqC;AAC9C;AAAA,EACC;AAAA,OAEM;AAGP,SAAS,0BAA0B;AACnC,SAAS,cAAc,yBAAyB;AAChD;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OAEM;AACP;AAAA,EACC;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAGA,IAAM,yBAAN,cAAqC,WAAW;AAAA,EA0BtD,YACiB,WACA,qBAGA,qBAIC,YACA,gBACA,wBACA,qBAGA,oBAGA,UAEA,uBACiB,iBAEjB,+BAChB;AACD,UAAM;AAxBU;AACA;AAGA;AAIC;AACA;AACA;AACA;AAGA;AAGA;AAEA;AACiB;AAEjB;AAIjB,SAAK;AAAA,MACJ,8BAA8B,KAAK,8BAA8B;AAAA,IAClE;AAEA,QAAI;AACJ,SAAK;AAAA,MACJ,QAAQ,CAAC,WAAW;AAEnB,cAAM,OAAO,KAAK,MAAM,KAAK,MAAM;AACnC,cAAM,aAAa,MAAM;AACzB,YAAI,YAAY,eAAe,UAAU,YAAY;AACpD,qBAAW;AACX,cAAI,YAAY;AACf,kBAAM,IAAI,WAAW;AACrB,kBAAM,MAAM,EAAE;AACd,gBAAI,SAAS;AAAA,cACZ,IAAI;AAAA,cACJ,EAAE;AAAA,cACF,EAAE;AAAA,YACH;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAxJD,OA2EuD;AAAA;AAAA;AAAA,EACrC,UAAU,KAAK;AAAA,IAC/B,KAAK,sBAAsB;AAAA,MAC1B;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AAAA,EACD;AAAA,EACiB,YAAY,gBAAyB,MAAM,KAAK;AAAA,EAChD,+BAA+B,iBAAiB,IAAI;AAAA;AAAA,EAGpD,8BAA8B,gBAE7C,MAAM,MAAS;AAAA,EACA,mBAAmB;AAAA,IACnC;AAAA,IACA,CAAC,WAAW,KAAK,WAAW,KAAK,MAAM,EAAE,CAAC,KAAK,IAAI,SAAS,GAAG,CAAC;AAAA,EACjE;AAAA,EAEQ,wBAAwB;AAAA,EAChC,IAAW,uBAAuB;AACjC,WAAO,KAAK;AAAA,EACb;AAAA,EAuDiB,oCAAoC,oBAAI,IAAI;AAAA,IAC5D;AAAA,IACA;AAAA,IACA;AAAA,EACD,CAAC;AAAA,EAEO,WACP,GACwB;AACxB,QAAI,GAAG,WAAW;AACjB,aAAO;AAAA,IACR;AACA,QAAI,GAAG,WAAW;AACjB,aAAO;AAAA,IACR;AACA,QAAI,KAAK,sBAAsB;AAC9B,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEiB,iCAAiC;AAAA,IACjD;AAAA,MACC,OAAO;AAAA,MACP,0BAA0B,8BAAO;AAAA,QAChC,2BAA2B;AAAA,QAC3B,6BACC,4BAA4B;AAAA,MAC9B,IAJ0B;AAAA,MAK1B,cAAc,wBAAC,KAAK,kBAAkB;AAErC,YACC,IAAI,UAAU,KAAK,mBAAmB,KACtC,KAAK,kCAAkC;AAAA,UACtC,KAAK,WAAW,IAAI,MAAM;AAAA,QAC3B,GACC;AACD,wBAAc,4BAA4B;AAAA,QAC3C,WAAW,IAAI,UAAU,KAAK,4BAA4B,GAAG;AAC5D,wBAAc,8BACb,4BAA4B;AAAA,QAC9B;AACA,eAAO;AAAA,MACR,GAdc;AAAA,IAef;AAAA,IACA,CAAC,QAAQ,kBAAkB;AAC1B,WAAK,6BAA6B,KAAK,MAAM;AAC7C,YAAM,eACJ,KAAK,SAAS,KAAK,MAAM,KACzB,KAAK,oBAAoB,KAAK,MAAM,KACrC,KAAK,UAAU,KAAK,MAAM;AAC3B,UAAI,CAAC,cAAc;AAClB,aAAK,QAAQ,aAAa;AAC1B,eAAO;AAAA,MACR;AAEA,WAAK,oBAAoB,KAAK,MAAM;AAEpC,YAAM,iCACL,KAAK,QAAQ,+BAA+B,IAAI;AACjD,YAAM,cAAc,KAAK,oBAAoB,KAAK,MAAM;AACxD,UAAI,kCAAkC,CAAC,aAAa;AACnD,cAAM,oBAAoB,KAAK,QAAQ,kBAAkB,IAAI;AAC7D,oBAAY,CAAC,OAAO;AAEnB,cACC,CAAC,qBACD,+BAA+B,QAAQ,YACtC,kBAAkB,QAAQ,WAC1B;AACD,iBAAK,QAAQ,kBAAkB;AAAA,cAC9B,+BAA+B,MAAM;AAAA,cACrC;AAAA,YACD;AAAA,UACD;AACA,eAAK,QAAQ,oCAAoC,EAAE;AAAA,QACpD,CAAC;AAAA,MACF;AAEA,YAAM,iBAAiB,KAAK,iBAAiB,KAAK,MAAM;AACxD,YAAM,UAAmC;AAAA,QACxC,aAAa,cAAc;AAAA,QAC3B,wBAAwB,aAAa,yBAAyB;AAAA,MAC/D;AACA,YAAM,0BAA0B,KAAK,yBAAyB,IAAI;AAClE,YAAM,iBACL,cAAc,6BACd,yBAAyB,gBACtB,0BACA;AACJ,aAAO,KAAK,QAAQ,MAAM,gBAAgB,SAAS,cAAc;AAAA,IAClE;AAAA,EACD;AAAA,EAEA,MAAa,QAAQ,IAAkC;AACtD,SAAK,UAAU,IAAI,MAAM,EAAE;AAC3B,UAAM,KAAK,+BAA+B,IAAI;AAAA,EAC/C;AAAA,EAEA,MAAa,kBAAkB,IAAkC;AAChE,mBAAe,IAAI,CAACA,QAAO;AAC1B,WAAK,UAAU,IAAI,MAAMA,GAAE;AAC3B,WAAK,6BAA6B,QAAQA,GAAE;AAAA,IAC7C,CAAC;AACD,UAAM,KAAK,+BAA+B,IAAI;AAAA,EAC/C;AAAA,EAEO,KAAK,IAAyB;AACpC,mBAAe,IAAI,CAACA,QAAO;AAC1B,WAAK,UAAU,IAAI,OAAOA,GAAE;AAC5B,WAAK,QAAQ,MAAMA,GAAE;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEiB,iCAAiC;AAAA,IACjD,EAAE,OAAO,MAAM,UAAU,YAAY,EAAE;AAAA,IACvC,CAAC,WAAW;AACX,YAAM,IAAI,KAAK,QAAQ,kBAAkB,KAAK,MAAM;AACpD,UAAI,CAAC,GAAG;AACP,eAAO,CAAC;AAAA,MACT;AACA,YAAM,iBAAiB,KAAK,iBAAiB,KAAK,MAAM;AACxD,YAAM,sBAAsB,EAAE,kBAAkB;AAAA,QAAO,CAACC,OACvDA,GAAE,UAAU,KAAK,WAAW,gBAAgB,MAAM;AAAA,MACnD;AACA,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEgB,gCAAgC;AAAA,IAC/C;AAAA,IACA,CAAC,WAAW;AACX,YAAM,6BACL,KAAK,4BAA4B,KAAK,MAAM;AAC7C,YAAM,sBACL,KAAK,+BAA+B,KAAK,MAAM;AAChD,YAAM,MACL,KAAK,gCAAgC,SAClC,KACA,oBAAoB;AAAA,QACpB,CAAC,MAAM,EAAE,eAAe;AAAA,MACzB;AACH,UAAI,QAAQ,IAAI;AAEf,aAAK,4BAA4B,IAAI,QAAW,MAAS;AACzD,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEgB,2BAA2B,QAEzC,MAAM,CAAC,WAAW;AACnB,UAAM,sBACL,KAAK,+BAA+B,KAAK,MAAM;AAChD,UAAM,MAAM,KAAK,8BAA8B,KAAK,MAAM;AAC1D,WAAO,oBAAoB,GAAG;AAAA,EAC/B,CAAC;AAAA,EAEe,iBAAiB;AAAA,IAChC,EAAE,OAAO,MAAM,UAAU,YAAY,EAAE;AAAA,IACvC,CAAC,MACA,KAAK,yBAAyB,KAAK,CAAC,GAAG,iBAAiB,OACtD,kBAAkB,YAAY,CAAC;AAAA,EACnC;AAAA,EAEgB,kBAEZ,KAAK,QAAQ,kBAAkB;AAAA,IAClC;AAAA,IACA,CAAC,MAAM,GAAG,QAAQ,QAAQ;AAAA,EAC3B;AAAA,EAEgB,yBAAyB;AAAA,IACxC;AAAA,IACA,CAAC,WAAW;AACX,UACC,KAAK,gBAAgB,KAAK,MAAM,MAChC,4BAA4B,UAC3B;AACD,eAAO,KAAK,+BAA+B,KAAK,MAAM,EAAE;AAAA,MACzD,OAAO;AACN,eAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD;AAAA,EAEgB,QAAQ;AAAA,IAUvB;AAAA,MACC,OAAO;AAAA,MACP,UAAU,wBAAC,GAAG,MAAM;AACnB,YAAI,CAAC,KAAK,CAAC,GAAG;AACb,iBAAO,MAAM;AAAA,QACd;AACA,eACC,8BAA8B,EAAE,YAAY,EAAE,UAAU,KACxD,EAAE,qBAAqB,EAAE,oBACzB,EAAE,gBAAgB,EAAE;AAAA,MAEtB,GATU;AAAA,IAUX;AAAA,IACA,CAAC,WAAW;AACX,YAAM,QAAQ,KAAK;AAEnB,YAAM,cAAc,KAAK,oBAAoB,KAAK,MAAM;AACxD,UAAI,aAAa;AAChB,cAAM,wBAAwB;AAAA,UAC7B,YAAY,iBAAiB;AAAA,UAC7B;AAAA,QACD;AACA,cAAM,eAAe,KAAK;AAAA,UACzB;AAAA,UACA;AAAA,QACD;AAEA,cAAM,6BACL,KAAK,uBAAuB,KAAK,MAAM;AACxC,YAAI,CAAC,8BAA8B,CAAC,cAAc;AACjD,iBAAO;AAAA,QACR;AAEA,cAAM,WAAW,cAAc,QAAQ;AACvC,cAAM,wBAAwB,eAC3B,aAAa,KAAK,KAAK,SACxB,sBAAsB,KAAK,SAC1B;AAEH,cAAM,OAAO,KAAK,oBAAoB,KAAK,MAAM;AACjD,cAAM,YAAY,KAAK,WAAW,KAAK,MAAM;AAC7C,cAAM,QAAQ;AAAA,UACb;AAAA,UACA,GAAG,kBAAkB,KAAK,WAAW,WAAW,QAAQ;AAAA,QACzD;AACA,cAAM,aAAa,MACjB;AAAA,UAAI,CAAC,MAAM,QACX;AAAA,YACC;AAAA,YACA;AAAA,YACA;AAAA,YACA,UAAU,GAAG;AAAA,YACb;AAAA,UACD;AAAA,QACD,EACC,OAAO,SAAS;AAClB,cAAM,mBACL,WAAW,CAAC,KACZ,IAAI,UAAU,SAAS,MAAM,eAAe,CAAC,CAAC;AAC/C,eAAO;AAAA,UACN;AAAA,UACA;AAAA,UACA;AAAA,UACA,kBAAkB,cAAc;AAAA,UAChC;AAAA,QACD;AAAA,MACD,OAAO;AACN,YAAI,CAAC,KAAK,UAAU,KAAK,MAAM,GAAG;AACjC,iBAAO;AAAA,QACR;AACA,cAAM,mBACL,KAAK,yBAAyB,KAAK,MAAM;AAC1C,YAAI,CAAC,kBAAkB;AACtB,iBAAO;AAAA,QACR;AAEA,cAAM,cAAc,iBAAiB,iBAAiB,MAAM;AAC5D,cAAM,OAAO,KAAK,mBAAmB,KAAK,MAAM;AAChD,cAAM,YAAY,KAAK,WAAW,KAAK,MAAM;AAC7C,cAAM,QAAQ;AAAA,UACb;AAAA,UACA,GAAG;AAAA,YACF,KAAK;AAAA,YACL;AAAA,YACA;AAAA,UACD;AAAA,QACD;AACA,cAAM,aAAa,MACjB;AAAA,UAAI,CAAC,MAAM,QACX,iBAAiB,MAAM,OAAO,MAAM,UAAU,GAAG,GAAG,CAAC;AAAA,QACtD,EACC,OAAO,SAAS;AAClB,YAAI,CAAC,WAAW,CAAC,GAAG;AACnB,iBAAO;AAAA,QACR;AACA,eAAO;AAAA,UACN;AAAA,UACA,kBAAkB,WAAW,CAAC;AAAA,UAC9B;AAAA,UACA;AAAA,UACA,aAAa;AAAA,QACd;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,qBACP,mBACA,QACC;AACD,UAAM,QAAQ,KAAK;AACnB,UAAM,iCACL,KAAK,QAAQ,+BAA+B,KAAK,MAAM;AACxD,UAAM,6BAA6B,iCAChC,+BAA+B,oBAC/B,CAAC,KAAK,yBAAyB,KAAK,MAAM,CAAC,EAAE,OAAO,SAAS;AAEhE,UAAM,sBAAsB;AAAA,MAC3B;AAAA,MACA,CAAC,eAAe;AACf,YAAI,IAAI,WAAW,iBAAiB,MAAM;AAC1C,YAAI;AAAA,UACH;AAAA,UACA;AAAA,UACA,MAAM;AAAA,YACL,EAAE,MAAM,iBAAiB;AAAA,YACzB,kBAAkB,MAAM,eAAe;AAAA,UACxC;AAAA,QACD;AACA,eAAO,uBAAuB,GAAG,iBAAiB,IAC/C,EAAE,YAAY,MAAM,EAAE,IACtB;AAAA,MACJ;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEgB,aAAa;AAAA,IAC5B,EAAE,OAAO,MAAM,UAAU,8BAA8B;AAAA,IACvD,CAAC,WAAW;AACX,YAAM,IAAI,KAAK,MAAM,KAAK,MAAM;AAChC,UAAI,CAAC,GAAG;AACP,eAAO;AAAA,MACR;AACA,aAAO,EAAE;AAAA,IACV;AAAA,EACD;AAAA,EAEgB,mBAAmB;AAAA,IAClC,EAAE,OAAO,MAAM,UAAU,6BAA6B;AAAA,IACtD,CAAC,WAAW;AACX,YAAM,IAAI,KAAK,MAAM,KAAK,MAAM;AAChC,UAAI,CAAC,GAAG;AACP,eAAO;AAAA,MACR;AACA,aAAO,GAAG;AAAA,IACX;AAAA,EACD;AAAA,EAEA,MAAc,oCACb,OACgB;AAChB,UAAM,KAAK,kBAAkB;AAE7B,UAAM,cAAc,KAAK,+BAA+B,IAAI,KAAK,CAAC;AAClE,QAAI,YAAY,SAAS,GAAG;AAC3B,YAAM,UACJ,KAAK,8BAA8B,IAAI,IACvC,QACA,YAAY,UACb,YAAY;AACb,WAAK,4BAA4B;AAAA,QAChC,YAAY,MAAM,EAAE;AAAA,QACpB;AAAA,MACD;AAAA,IACD,OAAO;AACN,WAAK,4BAA4B,IAAI,QAAW,MAAS;AAAA,IAC1D;AAAA,EACD;AAAA,EAEA,MAAa,OAAsB;AAClC,UAAM,KAAK,oCAAoC,CAAC;AAAA,EACjD;AAAA,EAEA,MAAa,WAA0B;AACtC,UAAM,KAAK,oCAAoC,EAAE;AAAA,EAClD;AAAA,EAEA,MAAa,OAAO,QAAoC;AACvD,QAAI,OAAO,SAAS,MAAM,KAAK,WAAW;AACzC,YAAM,IAAI,mBAAmB;AAAA,IAC9B;AAEA,UAAM,QAAQ,KAAK,MAAM,IAAI;AAC7B,QACC,CAAC,SACD,MAAM,iBAAiB,QAAQ,KAC/B,CAAC,MAAM,kBACN;AACD;AAAA,IACD;AACA,UAAM,aAAa,MAAM,iBAAiB,mBAAmB,MAAS;AAEtE,QAAI,WAAW,SAAS;AAEvB,iBAAW,OAAO,OAAO;AAAA,IAC1B;AAEA,WAAO,aAAa;AACpB,QAAI,WAAW,aAAa;AAC3B,aAAO,aAAa,2BAA2B;AAAA,QAC9C,cAAc,QAAQ,WAAW,OAAO,EAAE;AAAA,QAC1C,GAAG,WAAW;AAAA,MACf,CAAC;AACD,aAAO;AAAA,QACN,WAAW,YAAY,MAAM,iBAAiB;AAAA,QAC9C;AAAA,MACD;AACA,yBAAmB,IAAI,MAAM,GAAG;AAAA,QAC/B,WAAW,YAAY;AAAA,QACvB,EAAE,gBAAgB,MAAM;AAAA,MACzB;AAAA,IACD,OAAO;AACN,YAAM,QAAQ,MAAM;AACpB,YAAM,aAAa,6BAA6B,KAAK,EAAE;AAAA,QAAI,CAAC,MAC3D,UAAU,cAAc,CAAC;AAAA,MAC1B;AACA,aAAO,aAAa,2BAA2B;AAAA,QAC9C,GAAG,MAAM;AAAA,UAAI,CAAC,SACb,cAAc,QAAQ,KAAK,OAAO,KAAK,IAAI;AAAA,QAC5C;AAAA,QACA,GAAG,WAAW;AAAA,MACf,CAAC;AACD,aAAO,cAAc,YAAY,wBAAwB;AAAA,IAC1D;AAGA,SAAK,KAAK;AAEV,QAAI,WAAW,SAAS;AACvB,YAAM,KAAK,gBACT;AAAA,QACA,WAAW,QAAQ;AAAA,QACnB,GAAI,WAAW,QAAQ,aAAa,CAAC;AAAA,MACtC,EACC,KAAK,QAAW,yBAAyB;AAC3C,iBAAW,OAAO,UAAU;AAAA,IAC7B;AAAA,EACD;AAAA,EAEA,MAAa,eAAe,QAAoC;AAC/D,UAAM,KAAK;AAAA,MACV;AAAA,MACA,CAAC,KAAK,SAAS;AACd,cAAM,SAAS,KAAK,UAAU;AAAA,UAC7B,IAAI;AAAA,UACJ,IAAI;AAAA,QACL;AACA,cAAM,SACL,KAAK,8BAA8B;AAAA,UAClC;AAAA,QACD;AACD,cAAM,aAAa,IAAI;AAAA,UACtB,OAAO,eAAe;AAAA,UACtB,OAAO,eAAe,MAAM,QAAQ,KAAK,EAAE;AAAA,QAC5C;AAEA,cAAM,KAAK,KAAK,MAAM,UAAU;AAChC,YAAI,4BAA4B;AAChC,YAAI,MAAM,GAAG,UAAU,QAAW;AACjC,cAAI,GAAG,UAAU,GAAG;AACnB,wCAA4B,GAAG,CAAC,EAAE;AAAA,UACnC,OAAO;AACN,wCAA4B,GAAG;AAAA,UAChC;AAAA,QACD,OAAO;AACN,sCAA4B,KAAK;AAAA,QAClC;AAEA,cAAM,WAAW;AACjB,cAAM,KAAK,SAAS,KAAK,IAAI;AAC7B,YAAI,MAAM,GAAG,UAAU,QAAW;AACjC,cAAI,GAAG,QAAQ,GAAG,CAAC,EAAE,SAAS,2BAA2B;AACxD,wCAA4B,GAAG,QAAQ,GAAG,CAAC,EAAE;AAAA,UAC9C;AAAA,QACD;AACA,eAAO;AAAA,MACR;AAAA,MACA,yBAAyB;AAAA,IAC1B;AAAA,EACD;AAAA,EAEA,MAAa,eAAe,QAAoC;AAC/D,UAAM,KAAK;AAAA,MACV;AAAA,MACA,CAAC,KAAK,SAAS;AACd,cAAM,IAAI,KAAK,MAAM,IAAI;AACzB,YAAI,KAAK,EAAE,UAAU,QAAW;AAC/B,iBAAO,EAAE,QAAQ;AAAA,QAClB;AACA,eAAO,KAAK;AAAA,MACb;AAAA,MACA,yBAAyB;AAAA,IAC1B;AAAA,EACD;AAAA,EAEA,MAAc,YACb,QACA,qBACA,MACgB;AAChB,QAAI,OAAO,SAAS,MAAM,KAAK,WAAW;AACzC,YAAM,IAAI,mBAAmB;AAAA,IAC9B;AAEA,UAAM,QAAQ,KAAK,MAAM,IAAI;AAC7B,QACC,CAAC,SACD,MAAM,iBAAiB,QAAQ,KAC/B,CAAC,MAAM,kBACN;AACD;AAAA,IACD;AACA,UAAM,YAAY,MAAM;AACxB,UAAM,aAAa,MAAM,iBAAiB,mBAAmB,MAAS;AAEtE,QACC,WAAW,eACX,WAAW,eAAe,WAAW,YACpC;AAED,YAAM,KAAK,OAAO,MAAM;AACxB;AAAA,IACD;AAEA,UAAM,YAAY,UAAU,MAAM,CAAC;AACnC,UAAM,eAAe,IAAI;AAAA,MACxB,UAAU;AAAA,MACV,UAAU;AAAA,IACX;AACA,UAAM,eAAe,UAAU;AAC/B,UAAM,4BAA4B;AAAA,MACjC;AAAA,MACA;AAAA,IACD;AACA,QACC,8BAA8B,aAAa,UAC3C,UAAU,MAAM,WAAW,GAC1B;AACD,WAAK,OAAO,MAAM;AAClB;AAAA,IACD;AACA,UAAM,sBAAsB,aAAa;AAAA,MACxC;AAAA,MACA;AAAA,IACD;AAEA,UAAM,YAAY,KAAK,WAAW,IAAI;AACtC,UAAM,iBAAiB,UAAU,CAAC;AAGlC,eAAW,OAAO,OAAO;AACzB,QAAI;AACH,WAAK,wBAAwB;AAC7B,UAAI;AACH,eAAO,aAAa;AACpB,cAAM,eAAe,MAAM;AAAA,UAC1B;AAAA,UACA;AAAA,QACD;AACA,cAAM,UACL,OAAO,SAAS,EAAG,gBAAgB,YAAY,IAC/C;AACD,cAAM,cAAc,IAAI,eAAe,cAAc,OAAO;AAC5D,cAAM,QAAQ;AAAA,UACb;AAAA,UACA,GAAG;AAAA,YACF,KAAK;AAAA,YACL;AAAA,YACA;AAAA,UACD;AAAA,QACD;AACA,cAAM,aAAa,6BAA6B,KAAK,EAAE;AAAA,UACtD,CAAC,MAAM,UAAU,cAAc,CAAC;AAAA,QACjC;AACA,eAAO;AAAA,UACN;AAAA,UACA,MAAM;AAAA,YAAI,CAAC,SACV,cAAc,QAAQ,KAAK,OAAO,KAAK,IAAI;AAAA,UAC5C;AAAA,QACD;AACA,eAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AACA,eAAO;AAAA,UACN,OAAO,YAAY;AAAA,UACnB,WAAW;AAAA,QACZ;AAAA,MACD,UAAE;AACD,aAAK,wBAAwB;AAAA,MAC9B;AAEA,UAAI,WAAW,OAAO,SAAS,qBAAqB;AACnD,cAAM,gBAAgB,MAAM;AAAA,UAC3B,WAAW,MAAM,iBAAiB;AAAA,UAClC,WAAW,OAAO,mBAAmB,EAAE;AAAA,YACtC;AAAA,UACD;AAAA,QACD;AAEA,cAAM,OAAO,OACX,SAAS,EACT,gBAAgB,eAAe,oBAAoB,EAAE;AACvD,mBAAW,OAAO,SAAS;AAAA,UAC1B,WAAW,OAAO;AAAA,UAClB,WAAW;AAAA,UACX,KAAK;AAAA,UACL,EAAE,KAAK;AAAA,QACR;AAAA,MACD;AAAA,IACD,UAAE;AACD,iBAAW,OAAO,UAAU;AAAA,IAC7B;AAAA,EACD;AAAA,EAEO,sBAAsB,MAAuB;AACnD,UAAM,WAAW;AAAA,MAChB,KAAK,iBAAiB;AAAA,MACtB,KAAK;AAAA,IACN;AACA,UAAM,sBAAsB,KAAK;AAAA,MAChC;AAAA,MACA;AAAA,IACD;AACA,QAAI,CAAC,qBAAqB;AACzB;AAAA,IACD;AAEA,UAAM,mBACL,oBAAoB,WAAW;AAChC,qBAAiB,OAAO,SAAS;AAAA,MAChC,iBAAiB,OAAO;AAAA,MACxB,iBAAiB;AAAA,MACjB,SAAS,KAAK;AAAA,MACd;AAAA,QACC,MAAM,yBAAyB;AAAA,MAChC;AAAA,IACD;AAAA,EACD;AACD;AAxtBa,yBAAN;AAAA,EA6CJ;AAAA,EAEA;AAAA,EACA;AAAA,GAhDU;AA0tBN,IAAK,wBAAL,kBAAKC,2BAAL;AACN,EAAAA,8CAAA,UAAO,KAAP;AACA,EAAAA,8CAAA,UAAO,KAAP;AACA,EAAAA,8CAAA,gBAAa,KAAb;AACA,EAAAA,8CAAA,WAAQ,KAAR;AAJW,SAAAA;AAAA,GAAA;AAOL,SAAS,kBACf,WACA,WACA,aACmB;AACnB,MAAI,UAAU,WAAW,GAAG;AAE3B,WAAO,CAAC;AAAA,EACT;AACA,QAAM,kBAAkB,UAAU,CAAC;AACnC,QAAM,qBAAqB,UAAU,MAAM,CAAC;AAC5C,QAAM,2BAA2B,YAAY,MAAM,iBAAiB;AACpE,QAAM,yBAAyB,YAAY,MAAM,eAAe;AAChE,QAAM,iCAAiC,UAAU;AAAA,IAChD,MAAM,cAAc,iBAAiB,sBAAsB;AAAA,EAC5D;AACA,QAAM,yBAAyB;AAAA,IAC9B;AAAA,IACA;AAAA,EACD;AACA,MAAI,uBAAuB,aAAa,GAAG;AAC1C;AAAA,MACC,IAAI;AAAA,QACH;AAAA,iCAC6B,gBAAgB,SAAS,CAAC,QAAQ,yBAAyB,SAAS,CAAC;AAAA,MACnG;AAAA,IACD;AACA,WAAO,CAAC;AAAA,EACT;AACA,QAAM,oBAAoB;AAAA,IACzB,YAAY;AAAA,IACZ;AAAA,EACD;AACA,SAAO,mBAAmB,IAAI,CAAC,QAAQ;AACtC,UAAM,SAAS;AAAA,MACd,kBAAkB,KAAK,wBAAwB;AAAA,MAC/C;AAAA,IACD;AACA,UAAM,2BAA2B,UAAU;AAAA,MAC1C,MAAM,cAAc,KAAK,MAAM;AAAA,IAChC;AACA,UAAM,IAAI;AAAA,MACT;AAAA,MACA;AAAA,IACD;AACA,UAAM,QAAQ,MAAM,cAAc,KAAK,IAAI,MAAM,GAAG,CAAC,CAAC;AACtD,WAAO,IAAI,eAAe,OAAO,iBAAiB;AAAA,EACnD,CAAC;AACF;AAhDgB;AAkDhB,SAAS,aAAa,MAAc,KAAuB;AAC1D,MAAI,UAAU;AACd,QAAM,QAAQ,4BAA4B,IAAI;AAC9C,WAAS,IAAI,IAAI,aAAa,GAAG,IAAI,MAAM,QAAQ,KAAK;AACvD,eAAW,MAAM,CAAC,EAAE;AAAA,MACnB,MAAM,IAAI,aAAa,IAAI,IAAI,SAAS,IAAI;AAAA,IAC7C;AAAA,EACD;AACA,SAAO;AACR;AATS;AAWT,SAAS,6BACR,OACa;AACb,QAAM,WAAW,YAAY;AAAA,IAC5B;AAAA,IACA,UAAU,CAAC,MAAM,EAAE,OAAO,MAAM,wBAAwB;AAAA,EACzD;AACA,QAAM,OAAO,IAAI,SAAS,SAAS,MAAM,KAAK,CAAC;AAC/C,QAAM,kBAAkB,KAAK,aAAa;AAC1C,QAAM,YAAY,SAAS,QAAQ,EAAE,MAAM,eAAe;AAC1D,SAAO,UAAU,IAAI,CAAC,UAAU,MAAM,eAAe,CAAC;AACvD;AAXS;",
  "names": ["tx", "c", "VersionIdChangeReason"]
}
