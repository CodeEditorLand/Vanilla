{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsSource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../../base/common/cancellation.js\";\nimport {\n\tequalsIfDefined,\n\titemEquals,\n} from \"../../../../../base/common/equals.js\";\nimport { matchesSubString } from \"../../../../../base/common/filters.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tMutableDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\ttype IReader,\n\ttype ITransaction,\n\tderivedOpts,\n\tdisposableObservableValue,\n\ttransaction,\n} from \"../../../../../base/common/observable.js\";\nimport type { Position } from \"../../../../common/core/position.js\";\nimport { Range } from \"../../../../common/core/range.js\";\nimport { SingleTextEdit } from \"../../../../common/core/textEdit.js\";\nimport { TextLength } from \"../../../../common/core/textLength.js\";\nimport {\n\ttype InlineCompletionContext,\n\tInlineCompletionTriggerKind,\n} from \"../../../../common/languages.js\";\nimport { ILanguageConfigurationService } from \"../../../../common/languages/languageConfigurationRegistry.js\";\nimport {\n\tEndOfLinePreference,\n\ttype ITextModel,\n} from \"../../../../common/model.js\";\nimport type { IFeatureDebounceInformation } from \"../../../../common/services/languageFeatureDebounce.js\";\nimport { ILanguageFeaturesService } from \"../../../../common/services/languageFeatures.js\";\nimport {\n\ttype InlineCompletionItem,\n\ttype InlineCompletionProviderResult,\n\tprovideInlineCompletions,\n} from \"./provideInlineCompletions.js\";\nimport { singleTextRemoveCommonPrefix } from \"./singleTextEdit.js\";\n\nexport class InlineCompletionsSource extends Disposable {\n\tprivate readonly _updateOperation = this._register(\n\t\tnew MutableDisposable<UpdateOperation>(),\n\t);\n\tpublic readonly inlineCompletions = disposableObservableValue<\n\t\tUpToDateInlineCompletions | undefined\n\t>(\"inlineCompletions\", undefined);\n\tpublic readonly suggestWidgetInlineCompletions = disposableObservableValue<\n\t\tUpToDateInlineCompletions | undefined\n\t>(\"suggestWidgetInlineCompletions\", undefined);\n\n\tconstructor(\n\t\tprivate readonly textModel: ITextModel,\n\t\tprivate readonly versionId: IObservable<number | null>,\n\t\tprivate readonly _debounceValue: IFeatureDebounceInformation,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILanguageConfigurationService private readonly languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.textModel.onDidChangeContent(() => {\n\t\t\tthis._updateOperation.clear();\n\t\t}));\n\t}\n\n\tpublic fetch(\n\t\tposition: Position,\n\t\tcontext: InlineCompletionContext,\n\t\tactiveInlineCompletion: InlineCompletionWithUpdatedRange | undefined,\n\t): Promise<boolean> {\n\t\tconst request = new UpdateRequest(\n\t\t\tposition,\n\t\t\tcontext,\n\t\t\tthis.textModel.getVersionId(),\n\t\t);\n\n\t\tconst target = context.selectedSuggestionInfo\n\t\t\t? this.suggestWidgetInlineCompletions\n\t\t\t: this.inlineCompletions;\n\n\t\tif (this._updateOperation.value?.request.satisfies(request)) {\n\t\t\treturn this._updateOperation.value.promise;\n\t\t} else if (target.get()?.request.satisfies(request)) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tconst updateOngoing = !!this._updateOperation.value;\n\t\tthis._updateOperation.clear();\n\n\t\tconst source = new CancellationTokenSource();\n\n\t\tconst promise = (async () => {\n\t\t\tconst shouldDebounce =\n\t\t\t\tupdateOngoing ||\n\t\t\t\tcontext.triggerKind === InlineCompletionTriggerKind.Automatic;\n\t\t\tif (shouldDebounce) {\n\t\t\t\t// This debounces the operation\n\t\t\t\tawait wait(\n\t\t\t\t\tthis._debounceValue.get(this.textModel),\n\t\t\t\t\tsource.token,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tsource.token.isCancellationRequested ||\n\t\t\t\tthis._store.isDisposed ||\n\t\t\t\tthis.textModel.getVersionId() !== request.versionId\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst startTime = new Date();\n\t\t\tconst updatedCompletions = await provideInlineCompletions(\n\t\t\t\tthis.languageFeaturesService.inlineCompletionsProvider,\n\t\t\t\tposition,\n\t\t\t\tthis.textModel,\n\t\t\t\tcontext,\n\t\t\t\tsource.token,\n\t\t\t\tthis.languageConfigurationService,\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\tsource.token.isCancellationRequested ||\n\t\t\t\tthis._store.isDisposed ||\n\t\t\t\tthis.textModel.getVersionId() !== request.versionId\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst endTime = new Date();\n\t\t\tthis._debounceValue.update(\n\t\t\t\tthis.textModel,\n\t\t\t\tendTime.getTime() - startTime.getTime(),\n\t\t\t);\n\n\t\t\tconst completions = new UpToDateInlineCompletions(\n\t\t\t\tupdatedCompletions,\n\t\t\t\trequest,\n\t\t\t\tthis.textModel,\n\t\t\t\tthis.versionId,\n\t\t\t);\n\t\t\tif (activeInlineCompletion) {\n\t\t\t\tconst asInlineCompletion =\n\t\t\t\t\tactiveInlineCompletion.toInlineCompletion(undefined);\n\t\t\t\tif (\n\t\t\t\t\tactiveInlineCompletion.canBeReused(\n\t\t\t\t\t\tthis.textModel,\n\t\t\t\t\t\tposition,\n\t\t\t\t\t) &&\n\t\t\t\t\t!updatedCompletions.has(asInlineCompletion)\n\t\t\t\t) {\n\t\t\t\t\tcompletions.prepend(\n\t\t\t\t\t\tactiveInlineCompletion.inlineCompletion,\n\t\t\t\t\t\tasInlineCompletion.range,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateOperation.clear();\n\t\t\ttransaction((tx) => {\n\t\t\t\t/** @description Update completions with provider result */\n\t\t\t\ttarget.set(completions, tx);\n\t\t\t});\n\n\t\t\treturn true;\n\t\t})();\n\n\t\tconst updateOperation = new UpdateOperation(request, source, promise);\n\t\tthis._updateOperation.value = updateOperation;\n\n\t\treturn promise;\n\t}\n\n\tpublic clear(tx: ITransaction): void {\n\t\tthis._updateOperation.clear();\n\t\tthis.inlineCompletions.set(undefined, tx);\n\t\tthis.suggestWidgetInlineCompletions.set(undefined, tx);\n\t}\n\n\tpublic clearSuggestWidgetInlineCompletions(tx: ITransaction): void {\n\t\tif (\n\t\t\tthis._updateOperation.value?.request.context.selectedSuggestionInfo\n\t\t) {\n\t\t\tthis._updateOperation.clear();\n\t\t}\n\t\tthis.suggestWidgetInlineCompletions.set(undefined, tx);\n\t}\n\n\tpublic cancelUpdate(): void {\n\t\tthis._updateOperation.clear();\n\t}\n}\n\nfunction wait(\n\tms: number,\n\tcancellationToken?: CancellationToken,\n): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tlet d: IDisposable | undefined;\n\t\tconst handle = setTimeout(() => {\n\t\t\tif (d) {\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t\tresolve();\n\t\t}, ms);\n\t\tif (cancellationToken) {\n\t\t\td = cancellationToken.onCancellationRequested(() => {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tif (d) {\n\t\t\t\t\td.dispose();\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t}\n\t});\n}\n\nclass UpdateRequest {\n\tconstructor(\n\t\tpublic readonly position: Position,\n\t\tpublic readonly context: InlineCompletionContext,\n\t\tpublic readonly versionId: number,\n\t) {}\n\n\tpublic satisfies(other: UpdateRequest): boolean {\n\t\treturn (\n\t\t\tthis.position.equals(other.position) &&\n\t\t\tequalsIfDefined(\n\t\t\t\tthis.context.selectedSuggestionInfo,\n\t\t\t\tother.context.selectedSuggestionInfo,\n\t\t\t\titemEquals(),\n\t\t\t) &&\n\t\t\t(other.context.triggerKind ===\n\t\t\t\tInlineCompletionTriggerKind.Automatic ||\n\t\t\t\tthis.context.triggerKind ===\n\t\t\t\t\tInlineCompletionTriggerKind.Explicit) &&\n\t\t\tthis.versionId === other.versionId\n\t\t);\n\t}\n}\n\nclass UpdateOperation implements IDisposable {\n\tconstructor(\n\t\tpublic readonly request: UpdateRequest,\n\t\tpublic readonly cancellationTokenSource: CancellationTokenSource,\n\t\tpublic readonly promise: Promise<boolean>,\n\t) {}\n\n\tdispose() {\n\t\tthis.cancellationTokenSource.cancel();\n\t}\n}\n\nexport class UpToDateInlineCompletions implements IDisposable {\n\tprivate readonly _inlineCompletions: InlineCompletionWithUpdatedRange[];\n\tpublic get inlineCompletions(): ReadonlyArray<InlineCompletionWithUpdatedRange> {\n\t\treturn this._inlineCompletions;\n\t}\n\n\tprivate _refCount = 1;\n\tprivate readonly _prependedInlineCompletionItems: InlineCompletionItem[] =\n\t\t[];\n\n\tconstructor(\n\t\tprivate readonly inlineCompletionProviderResult: InlineCompletionProviderResult,\n\t\tpublic readonly request: UpdateRequest,\n\t\tprivate readonly _textModel: ITextModel,\n\t\tprivate readonly _versionId: IObservable<number | null>,\n\t) {\n\t\tconst ids = _textModel.deltaDecorations(\n\t\t\t[],\n\t\t\tinlineCompletionProviderResult.completions.map((i) => ({\n\t\t\t\trange: i.range,\n\t\t\t\toptions: {\n\t\t\t\t\tdescription: \"inline-completion-tracking-range\",\n\t\t\t\t},\n\t\t\t})),\n\t\t);\n\n\t\tthis._inlineCompletions =\n\t\t\tinlineCompletionProviderResult.completions.map(\n\t\t\t\t(i, index) =>\n\t\t\t\t\tnew InlineCompletionWithUpdatedRange(\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tids[index],\n\t\t\t\t\t\tthis._textModel,\n\t\t\t\t\t\tthis._versionId,\n\t\t\t\t\t),\n\t\t\t);\n\t}\n\n\tpublic clone(): this {\n\t\tthis._refCount++;\n\t\treturn this;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._refCount--;\n\t\tif (this._refCount === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\t// To fix https://github.com/microsoft/vscode/issues/188348\n\t\t\t\tif (!this._textModel.isDisposed()) {\n\t\t\t\t\t// This is just cleanup. It's ok if it happens with a delay.\n\t\t\t\t\tthis._textModel.deltaDecorations(\n\t\t\t\t\t\tthis._inlineCompletions.map((i) => i.decorationId),\n\t\t\t\t\t\t[],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t\tthis.inlineCompletionProviderResult.dispose();\n\t\t\tfor (const i of this._prependedInlineCompletionItems) {\n\t\t\t\ti.source.removeRef();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic prepend(\n\t\tinlineCompletion: InlineCompletionItem,\n\t\trange: Range,\n\t\taddRefToSource: boolean,\n\t): void {\n\t\tif (addRefToSource) {\n\t\t\tinlineCompletion.source.addRef();\n\t\t}\n\n\t\tconst id = this._textModel.deltaDecorations(\n\t\t\t[],\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\trange,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tdescription: \"inline-completion-tracking-range\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t)[0];\n\t\tthis._inlineCompletions.unshift(\n\t\t\tnew InlineCompletionWithUpdatedRange(\n\t\t\t\tinlineCompletion,\n\t\t\t\tid,\n\t\t\t\tthis._textModel,\n\t\t\t\tthis._versionId,\n\t\t\t),\n\t\t);\n\t\tthis._prependedInlineCompletionItems.push(inlineCompletion);\n\t}\n}\n\nexport class InlineCompletionWithUpdatedRange {\n\tpublic readonly semanticId = JSON.stringify([\n\t\tthis.inlineCompletion.filterText,\n\t\tthis.inlineCompletion.insertText,\n\t\tthis.inlineCompletion.range.getStartPosition().toString(),\n\t]);\n\n\tpublic get forwardStable() {\n\t\treturn (\n\t\t\tthis.inlineCompletion.source.inlineCompletions\n\t\t\t\t.enableForwardStability ?? false\n\t\t);\n\t}\n\n\tprivate readonly _updatedRange = derivedOpts<Range | null>(\n\t\t{ owner: this, equalsFn: Range.equalsRange },\n\t\t(reader) => {\n\t\t\tthis._modelVersion.read(reader);\n\t\t\treturn this._textModel.getDecorationRange(this.decorationId);\n\t\t},\n\t);\n\n\tconstructor(\n\t\tpublic readonly inlineCompletion: InlineCompletionItem,\n\t\tpublic readonly decorationId: string,\n\t\tprivate readonly _textModel: ITextModel,\n\t\tprivate readonly _modelVersion: IObservable<number | null>,\n\t) {}\n\n\tpublic toInlineCompletion(\n\t\treader: IReader | undefined,\n\t): InlineCompletionItem {\n\t\treturn this.inlineCompletion.withRange(\n\t\t\tthis._updatedRange.read(reader) ?? emptyRange,\n\t\t);\n\t}\n\n\tpublic toSingleTextEdit(reader: IReader | undefined): SingleTextEdit {\n\t\treturn new SingleTextEdit(\n\t\t\tthis._updatedRange.read(reader) ?? emptyRange,\n\t\t\tthis.inlineCompletion.insertText,\n\t\t);\n\t}\n\n\tpublic isVisible(\n\t\tmodel: ITextModel,\n\t\tcursorPosition: Position,\n\t\treader: IReader | undefined,\n\t): boolean {\n\t\tconst minimizedReplacement = singleTextRemoveCommonPrefix(\n\t\t\tthis._toFilterTextReplacement(reader),\n\t\t\tmodel,\n\t\t);\n\t\tconst updatedRange = this._updatedRange.read(reader);\n\t\tif (\n\t\t\t!updatedRange ||\n\t\t\t!this.inlineCompletion.range\n\t\t\t\t.getStartPosition()\n\t\t\t\t.equals(updatedRange.getStartPosition()) ||\n\t\t\tcursorPosition.lineNumber !==\n\t\t\t\tminimizedReplacement.range.startLineNumber\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We might consider comparing by .toLowerText, but this requires GhostTextReplacement\n\t\tconst originalValue = model.getValueInRange(\n\t\t\tminimizedReplacement.range,\n\t\t\tEndOfLinePreference.LF,\n\t\t);\n\t\tconst filterText = minimizedReplacement.text;\n\n\t\tconst cursorPosIndex = Math.max(\n\t\t\t0,\n\t\t\tcursorPosition.column - minimizedReplacement.range.startColumn,\n\t\t);\n\n\t\tlet filterTextBefore = filterText.substring(0, cursorPosIndex);\n\t\tlet filterTextAfter = filterText.substring(cursorPosIndex);\n\n\t\tlet originalValueBefore = originalValue.substring(0, cursorPosIndex);\n\t\tlet originalValueAfter = originalValue.substring(cursorPosIndex);\n\n\t\tconst originalValueIndent = model.getLineIndentColumn(\n\t\t\tminimizedReplacement.range.startLineNumber,\n\t\t);\n\t\tif (minimizedReplacement.range.startColumn <= originalValueIndent) {\n\t\t\t// Remove indentation\n\t\t\toriginalValueBefore = originalValueBefore.trimStart();\n\t\t\tif (originalValueBefore.length === 0) {\n\t\t\t\toriginalValueAfter = originalValueAfter.trimStart();\n\t\t\t}\n\t\t\tfilterTextBefore = filterTextBefore.trimStart();\n\t\t\tif (filterTextBefore.length === 0) {\n\t\t\t\tfilterTextAfter = filterTextAfter.trimStart();\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\tfilterTextBefore.startsWith(originalValueBefore) &&\n\t\t\t!!matchesSubString(originalValueAfter, filterTextAfter)\n\t\t);\n\t}\n\n\tpublic canBeReused(model: ITextModel, position: Position): boolean {\n\t\tconst updatedRange = this._updatedRange.read(undefined);\n\t\tconst result =\n\t\t\t!!updatedRange &&\n\t\t\tupdatedRange.containsPosition(position) &&\n\t\t\tthis.isVisible(model, position, undefined) &&\n\t\t\tTextLength.ofRange(updatedRange).isGreaterThanOrEqualTo(\n\t\t\t\tTextLength.ofRange(this.inlineCompletion.range),\n\t\t\t);\n\t\treturn result;\n\t}\n\n\tprivate _toFilterTextReplacement(\n\t\treader: IReader | undefined,\n\t): SingleTextEdit {\n\t\treturn new SingleTextEdit(\n\t\t\tthis._updatedRange.read(reader) ?? emptyRange,\n\t\t\tthis.inlineCompletion.filterText,\n\t\t);\n\t}\n}\n\nconst emptyRange = new Range(1, 1, 1, 1);\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,wBAAwB;AACjC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP;AAAA,EAIC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,aAAa;AACtB,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B;AAAA,EAEC;AAAA,OACM;AACP,SAAS,qCAAqC;AAC9C;AAAA,EACC;AAAA,OAEM;AAEP,SAAS,gCAAgC;AACzC;AAAA,EAGC;AAAA,OACM;AACP,SAAS,oCAAoC;AAEtC,IAAM,0BAAN,cAAsC,WAAW;AAAA,EAWvD,YACkB,WACA,WACA,gBAC0B,yBACK,8BAC/C;AACD,UAAM;AANW;AACA;AACA;AAC0B;AACK;AAIhD,SAAK,UAAU,KAAK,UAAU,mBAAmB,MAAM;AACtD,WAAK,iBAAiB,MAAM;AAAA,IAC7B,CAAC,CAAC;AAAA,EACH;AAAA,EAxED,OAiDwD;AAAA;AAAA;AAAA,EACtC,mBAAmB,KAAK;AAAA,IACxC,IAAI,kBAAmC;AAAA,EACxC;AAAA,EACgB,oBAAoB,0BAElC,qBAAqB,MAAS;AAAA,EAChB,iCAAiC,0BAE/C,kCAAkC,MAAS;AAAA,EAgBtC,MACN,UACA,SACA,wBACmB;AACnB,UAAM,UAAU,IAAI;AAAA,MACnB;AAAA,MACA;AAAA,MACA,KAAK,UAAU,aAAa;AAAA,IAC7B;AAEA,UAAM,SAAS,QAAQ,yBACpB,KAAK,iCACL,KAAK;AAER,QAAI,KAAK,iBAAiB,OAAO,QAAQ,UAAU,OAAO,GAAG;AAC5D,aAAO,KAAK,iBAAiB,MAAM;AAAA,IACpC,WAAW,OAAO,IAAI,GAAG,QAAQ,UAAU,OAAO,GAAG;AACpD,aAAO,QAAQ,QAAQ,IAAI;AAAA,IAC5B;AAEA,UAAM,gBAAgB,CAAC,CAAC,KAAK,iBAAiB;AAC9C,SAAK,iBAAiB,MAAM;AAE5B,UAAM,SAAS,IAAI,wBAAwB;AAE3C,UAAM,WAAW,YAAY;AAC5B,YAAM,iBACL,iBACA,QAAQ,gBAAgB,4BAA4B;AACrD,UAAI,gBAAgB;AAEnB,cAAM;AAAA,UACL,KAAK,eAAe,IAAI,KAAK,SAAS;AAAA,UACtC,OAAO;AAAA,QACR;AAAA,MACD;AAEA,UACC,OAAO,MAAM,2BACb,KAAK,OAAO,cACZ,KAAK,UAAU,aAAa,MAAM,QAAQ,WACzC;AACD,eAAO;AAAA,MACR;AAEA,YAAM,YAAY,oBAAI,KAAK;AAC3B,YAAM,qBAAqB,MAAM;AAAA,QAChC,KAAK,wBAAwB;AAAA,QAC7B;AAAA,QACA,KAAK;AAAA,QACL;AAAA,QACA,OAAO;AAAA,QACP,KAAK;AAAA,MACN;AAEA,UACC,OAAO,MAAM,2BACb,KAAK,OAAO,cACZ,KAAK,UAAU,aAAa,MAAM,QAAQ,WACzC;AACD,eAAO;AAAA,MACR;AAEA,YAAM,UAAU,oBAAI,KAAK;AACzB,WAAK,eAAe;AAAA,QACnB,KAAK;AAAA,QACL,QAAQ,QAAQ,IAAI,UAAU,QAAQ;AAAA,MACvC;AAEA,YAAM,cAAc,IAAI;AAAA,QACvB;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AACA,UAAI,wBAAwB;AAC3B,cAAM,qBACL,uBAAuB,mBAAmB,MAAS;AACpD,YACC,uBAAuB;AAAA,UACtB,KAAK;AAAA,UACL;AAAA,QACD,KACA,CAAC,mBAAmB,IAAI,kBAAkB,GACzC;AACD,sBAAY;AAAA,YACX,uBAAuB;AAAA,YACvB,mBAAmB;AAAA,YACnB;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAEA,WAAK,iBAAiB,MAAM;AAC5B,kBAAY,CAAC,OAAO;AAEnB,eAAO,IAAI,aAAa,EAAE;AAAA,MAC3B,CAAC;AAED,aAAO;AAAA,IACR,GAAG;AAEH,UAAM,kBAAkB,IAAI,gBAAgB,SAAS,QAAQ,OAAO;AACpE,SAAK,iBAAiB,QAAQ;AAE9B,WAAO;AAAA,EACR;AAAA,EAEO,MAAM,IAAwB;AACpC,SAAK,iBAAiB,MAAM;AAC5B,SAAK,kBAAkB,IAAI,QAAW,EAAE;AACxC,SAAK,+BAA+B,IAAI,QAAW,EAAE;AAAA,EACtD;AAAA,EAEO,oCAAoC,IAAwB;AAClE,QACC,KAAK,iBAAiB,OAAO,QAAQ,QAAQ,wBAC5C;AACD,WAAK,iBAAiB,MAAM;AAAA,IAC7B;AACA,SAAK,+BAA+B,IAAI,QAAW,EAAE;AAAA,EACtD;AAAA,EAEO,eAAqB;AAC3B,SAAK,iBAAiB,MAAM;AAAA,EAC7B;AACD;AAxJa,0BAAN;AAAA,EAeJ;AAAA,EACA;AAAA,GAhBU;AA0Jb,SAAS,KACR,IACA,mBACgB;AAChB,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC/B,QAAI;AACJ,UAAM,SAAS,WAAW,MAAM;AAC/B,UAAI,GAAG;AACN,UAAE,QAAQ;AAAA,MACX;AACA,cAAQ;AAAA,IACT,GAAG,EAAE;AACL,QAAI,mBAAmB;AACtB,UAAI,kBAAkB,wBAAwB,MAAM;AACnD,qBAAa,MAAM;AACnB,YAAI,GAAG;AACN,YAAE,QAAQ;AAAA,QACX;AACA,gBAAQ;AAAA,MACT,CAAC;AAAA,IACF;AAAA,EACD,CAAC;AACF;AAtBS;AAwBT,MAAM,cAAc;AAAA,EACnB,YACiB,UACA,SACA,WACf;AAHe;AACA;AACA;AAAA,EACd;AAAA,EAxOJ,OAmOoB;AAAA;AAAA;AAAA,EAOZ,UAAU,OAA+B;AAC/C,WACC,KAAK,SAAS,OAAO,MAAM,QAAQ,KACnC;AAAA,MACC,KAAK,QAAQ;AAAA,MACb,MAAM,QAAQ;AAAA,MACd,WAAW;AAAA,IACZ,MACC,MAAM,QAAQ,gBACd,4BAA4B,aAC5B,KAAK,QAAQ,gBACZ,4BAA4B,aAC9B,KAAK,cAAc,MAAM;AAAA,EAE3B;AACD;AAEA,MAAM,gBAAuC;AAAA,EAC5C,YACiB,SACA,yBACA,SACf;AAHe;AACA;AACA;AAAA,EACd;AAAA,EAhQJ,OA2P6C;AAAA;AAAA;AAAA,EAO5C,UAAU;AACT,SAAK,wBAAwB,OAAO;AAAA,EACrC;AACD;AAEO,MAAM,0BAAiD;AAAA,EAU7D,YACkB,gCACD,SACC,YACA,YAChB;AAJgB;AACD;AACC;AACA;AAEjB,UAAM,MAAM,WAAW;AAAA,MACtB,CAAC;AAAA,MACD,+BAA+B,YAAY,IAAI,CAAC,OAAO;AAAA,QACtD,OAAO,EAAE;AAAA,QACT,SAAS;AAAA,UACR,aAAa;AAAA,QACd;AAAA,MACD,EAAE;AAAA,IACH;AAEA,SAAK,qBACJ,+BAA+B,YAAY;AAAA,MAC1C,CAAC,GAAG,UACH,IAAI;AAAA,QACH;AAAA,QACA,IAAI,KAAK;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACF;AAAA,EACF;AAAA,EA3SD,OAuQ8D;AAAA;AAAA;AAAA,EAC5C;AAAA,EACjB,IAAW,oBAAqE;AAC/E,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,YAAY;AAAA,EACH,kCAChB,CAAC;AAAA,EA8BK,QAAc;AACpB,SAAK;AACL,WAAO;AAAA,EACR;AAAA,EAEO,UAAgB;AACtB,SAAK;AACL,QAAI,KAAK,cAAc,GAAG;AACzB,iBAAW,MAAM;AAEhB,YAAI,CAAC,KAAK,WAAW,WAAW,GAAG;AAElC,eAAK,WAAW;AAAA,YACf,KAAK,mBAAmB,IAAI,CAAC,MAAM,EAAE,YAAY;AAAA,YACjD,CAAC;AAAA,UACF;AAAA,QACD;AAAA,MACD,GAAG,CAAC;AACJ,WAAK,+BAA+B,QAAQ;AAC5C,iBAAW,KAAK,KAAK,iCAAiC;AACrD,UAAE,OAAO,UAAU;AAAA,MACpB;AAAA,IACD;AAAA,EACD;AAAA,EAEO,QACN,kBACA,OACA,gBACO;AACP,QAAI,gBAAgB;AACnB,uBAAiB,OAAO,OAAO;AAAA,IAChC;AAEA,UAAM,KAAK,KAAK,WAAW;AAAA,MAC1B,CAAC;AAAA,MACD;AAAA,QACC;AAAA,UACC;AAAA,UACA,SAAS;AAAA,YACR,aAAa;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,IACD,EAAE,CAAC;AACH,SAAK,mBAAmB;AAAA,MACvB,IAAI;AAAA,QACH;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AACA,SAAK,gCAAgC,KAAK,gBAAgB;AAAA,EAC3D;AACD;AAEO,MAAM,iCAAiC;AAAA,EAsB7C,YACiB,kBACA,cACC,YACA,eAChB;AAJe;AACA;AACC;AACA;AAAA,EACf;AAAA,EAjYJ,OAsW8C;AAAA;AAAA;AAAA,EAC7B,aAAa,KAAK,UAAU;AAAA,IAC3C,KAAK,iBAAiB;AAAA,IACtB,KAAK,iBAAiB;AAAA,IACtB,KAAK,iBAAiB,MAAM,iBAAiB,EAAE,SAAS;AAAA,EACzD,CAAC;AAAA,EAED,IAAW,gBAAgB;AAC1B,WACC,KAAK,iBAAiB,OAAO,kBAC3B,0BAA0B;AAAA,EAE9B;AAAA,EAEiB,gBAAgB;AAAA,IAChC,EAAE,OAAO,MAAM,UAAU,MAAM,YAAY;AAAA,IAC3C,CAAC,WAAW;AACX,WAAK,cAAc,KAAK,MAAM;AAC9B,aAAO,KAAK,WAAW,mBAAmB,KAAK,YAAY;AAAA,IAC5D;AAAA,EACD;AAAA,EASO,mBACN,QACuB;AACvB,WAAO,KAAK,iBAAiB;AAAA,MAC5B,KAAK,cAAc,KAAK,MAAM,KAAK;AAAA,IACpC;AAAA,EACD;AAAA,EAEO,iBAAiB,QAA6C;AACpE,WAAO,IAAI;AAAA,MACV,KAAK,cAAc,KAAK,MAAM,KAAK;AAAA,MACnC,KAAK,iBAAiB;AAAA,IACvB;AAAA,EACD;AAAA,EAEO,UACN,OACA,gBACA,QACU;AACV,UAAM,uBAAuB;AAAA,MAC5B,KAAK,yBAAyB,MAAM;AAAA,MACpC;AAAA,IACD;AACA,UAAM,eAAe,KAAK,cAAc,KAAK,MAAM;AACnD,QACC,CAAC,gBACD,CAAC,KAAK,iBAAiB,MACrB,iBAAiB,EACjB,OAAO,aAAa,iBAAiB,CAAC,KACxC,eAAe,eACd,qBAAqB,MAAM,iBAC3B;AACD,aAAO;AAAA,IACR;AAGA,UAAM,gBAAgB,MAAM;AAAA,MAC3B,qBAAqB;AAAA,MACrB,oBAAoB;AAAA,IACrB;AACA,UAAM,aAAa,qBAAqB;AAExC,UAAM,iBAAiB,KAAK;AAAA,MAC3B;AAAA,MACA,eAAe,SAAS,qBAAqB,MAAM;AAAA,IACpD;AAEA,QAAI,mBAAmB,WAAW,UAAU,GAAG,cAAc;AAC7D,QAAI,kBAAkB,WAAW,UAAU,cAAc;AAEzD,QAAI,sBAAsB,cAAc,UAAU,GAAG,cAAc;AACnE,QAAI,qBAAqB,cAAc,UAAU,cAAc;AAE/D,UAAM,sBAAsB,MAAM;AAAA,MACjC,qBAAqB,MAAM;AAAA,IAC5B;AACA,QAAI,qBAAqB,MAAM,eAAe,qBAAqB;AAElE,4BAAsB,oBAAoB,UAAU;AACpD,UAAI,oBAAoB,WAAW,GAAG;AACrC,6BAAqB,mBAAmB,UAAU;AAAA,MACnD;AACA,yBAAmB,iBAAiB,UAAU;AAC9C,UAAI,iBAAiB,WAAW,GAAG;AAClC,0BAAkB,gBAAgB,UAAU;AAAA,MAC7C;AAAA,IACD;AAEA,WACC,iBAAiB,WAAW,mBAAmB,KAC/C,CAAC,CAAC,iBAAiB,oBAAoB,eAAe;AAAA,EAExD;AAAA,EAEO,YAAY,OAAmB,UAA6B;AAClE,UAAM,eAAe,KAAK,cAAc,KAAK,MAAS;AACtD,UAAM,SACL,CAAC,CAAC,gBACF,aAAa,iBAAiB,QAAQ,KACtC,KAAK,UAAU,OAAO,UAAU,MAAS,KACzC,WAAW,QAAQ,YAAY,EAAE;AAAA,MAChC,WAAW,QAAQ,KAAK,iBAAiB,KAAK;AAAA,IAC/C;AACD,WAAO;AAAA,EACR;AAAA,EAEQ,yBACP,QACiB;AACjB,WAAO,IAAI;AAAA,MACV,KAAK,cAAc,KAAK,MAAM,KAAK;AAAA,MACnC,KAAK,iBAAiB;AAAA,IACvB;AAAA,EACD;AACD;AAEA,MAAM,aAAa,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;",
  "names": []
}
