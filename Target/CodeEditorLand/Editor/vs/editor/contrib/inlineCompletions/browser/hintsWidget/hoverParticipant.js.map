{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineCompletions/browser/hintsWidget/hoverParticipant.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { DisposableStore, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable } from '../../../../../base/common/observable.js';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from '../../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { IModelDecoration } from '../../../../common/model.js';\nimport { HoverAnchor, HoverAnchorType, HoverForeignElementAnchor, IEditorHoverParticipant, IEditorHoverRenderContext, IHoverPart, IRenderedHoverPart, IRenderedHoverParts, RenderedHoverParts } from '../../../hover/browser/hoverTypes.js';\nimport { InlineCompletionsController } from '../controller/inlineCompletionsController.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { MarkdownRenderer } from '../../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport * as nls from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\n\nexport class InlineCompletionsHover implements IHoverPart {\n\tconstructor(\n\t\tpublic readonly owner: IEditorHoverParticipant<InlineCompletionsHover>,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly controller: InlineCompletionsController\n\t) { }\n\n\tpublic isValidForHoverAnchor(anchor: HoverAnchor): boolean {\n\t\treturn (\n\t\t\tanchor.type === HoverAnchorType.Range\n\t\t\t&& this.range.startColumn <= anchor.range.startColumn\n\t\t\t&& this.range.endColumn >= anchor.range.endColumn\n\t\t);\n\t}\n}\n\nexport class InlineCompletionsHoverParticipant implements IEditorHoverParticipant<InlineCompletionsHover> {\n\n\tpublic readonly hoverOrdinal: number = 4;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t}\n\n\tsuggestHoverAnchor(mouseEvent: IEditorMouseEvent): HoverAnchor | null {\n\t\tconst controller = InlineCompletionsController.get(this._editor);\n\t\tif (!controller) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst target = mouseEvent.target;\n\t\tif (target.type === MouseTargetType.CONTENT_VIEW_ZONE) {\n\t\t\t// handle the case where the mouse is over the view zone\n\t\t\tconst viewZoneData = target.detail;\n\t\t\tif (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel()!.validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_EMPTY) {\n\t\t\t// handle the case where the mouse is over the empty portion of a line following ghost text\n\t\t\tif (controller.shouldShowHoverAt(target.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_TEXT) {\n\t\t\t// handle the case where the mouse is directly over ghost text\n\t\t\tconst mightBeForeignElement = target.detail.mightBeForeignElement;\n\t\t\tif (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomputeSync(anchor: HoverAnchor, lineDecorations: IModelDecoration[]): InlineCompletionsHover[] {\n\t\tif (this._editor.getOption(EditorOption.inlineSuggest).showToolbar !== 'onHover') {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst controller = InlineCompletionsController.get(this._editor);\n\t\tif (controller && controller.shouldShowHoverAt(anchor.range)) {\n\t\t\treturn [new InlineCompletionsHover(this, anchor.range, controller)];\n\t\t}\n\t\treturn [];\n\t}\n\n\trenderHoverParts(context: IEditorHoverRenderContext, hoverParts: InlineCompletionsHover[]): IRenderedHoverParts<InlineCompletionsHover> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst part = hoverParts[0];\n\n\t\tthis._telemetryService.publicLog2<{}, {\n\t\t\towner: 'hediet';\n\t\t\tcomment: 'This event tracks whenever an inline completion hover is shown.';\n\t\t}>('inlineCompletionHover.shown');\n\n\t\tif (this.accessibilityService.isScreenReaderOptimized() && !this._editor.getOption(EditorOption.screenReaderAnnounceInlineSuggestion)) {\n\t\t\tdisposables.add(this.renderScreenReaderText(context, part));\n\t\t}\n\n\t\tconst model = part.controller.model.get()!;\n\n\t\tconst w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false,\n\t\t\tconstObservable(null),\n\t\t\tmodel.selectedInlineCompletionIndex,\n\t\t\tmodel.inlineCompletionsCount,\n\t\t\tmodel.activeCommands,\n\t\t);\n\t\tconst widgetNode: HTMLElement = w.getDomNode();\n\t\tcontext.fragment.appendChild(widgetNode);\n\n\t\tmodel.triggerExplicitly();\n\n\t\tdisposables.add(w);\n\t\tconst renderedHoverPart: IRenderedHoverPart<InlineCompletionsHover> = {\n\t\t\thoverPart: part,\n\t\t\thoverElement: widgetNode,\n\t\t\tdispose() { disposables.dispose(); }\n\t\t};\n\t\treturn new RenderedHoverParts([renderedHoverPart]);\n\t}\n\n\tgetAccessibleContent(hoverPart: InlineCompletionsHover): string {\n\t\treturn nls.localize('hoverAccessibilityStatusBar', 'There are inline completions here');\n\t}\n\n\tprivate renderScreenReaderText(context: IEditorHoverRenderContext, part: InlineCompletionsHover): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tconst $ = dom.$;\n\t\tconst markdownHoverElement = $('div.hover-row.markdown-hover');\n\t\tconst hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\n\t\tconst renderer = disposables.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n\t\tconst render = (code: string) => {\n\t\t\tdisposables.add(renderer.onDidRenderAsync(() => {\n\t\t\t\thoverContentsElement.className = 'hover-contents code-hover-contents';\n\t\t\t\tcontext.onContentsChanged();\n\t\t\t}));\n\n\t\t\tconst inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n\t\t\tconst renderedContents = disposables.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n\t\t\thoverContentsElement.replaceChildren(renderedContents.element);\n\t\t};\n\n\t\tdisposables.add(autorun(reader => {\n\t\t\t/** @description update hover */\n\t\t\tconst ghostText = part.controller.model.read(reader)?.primaryGhostText.read(reader);\n\t\t\tif (ghostText) {\n\t\t\t\tconst lineText = this._editor.getModel()!.getLineContent(ghostText.lineNumber);\n\t\t\t\trender(ghostText.renderForScreenReader(lineText));\n\t\t\t} else {\n\t\t\t\tdom.reset(hoverContentsElement);\n\t\t\t}\n\t\t}));\n\n\t\tcontext.fragment.appendChild(markdownHoverElement);\n\t\treturn disposables;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
