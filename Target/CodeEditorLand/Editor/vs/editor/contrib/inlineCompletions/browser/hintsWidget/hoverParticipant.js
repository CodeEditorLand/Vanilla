var f=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var I=(s,r,t,e)=>{for(var o=e>1?void 0:e?w(r,t):r,n=s.length-1,i;n>=0;n--)(i=s[n])&&(o=(e?i(r,t,o):i(o))||o);return e&&o&&f(r,t,o),o},l=(s,r)=>(t,e)=>r(t,e,s);import*as g from"../../../../../base/browser/dom.js";import{MarkdownString as b}from"../../../../../base/common/htmlContent.js";import{DisposableStore as y}from"../../../../../base/common/lifecycle.js";import{autorun as T,constObservable as E}from"../../../../../base/common/observable.js";import*as C from"../../../../../nls.js";import{IAccessibilityService as _}from"../../../../../platform/accessibility/common/accessibility.js";import{IInstantiationService as A}from"../../../../../platform/instantiation/common/instantiation.js";import{IOpenerService as R}from"../../../../../platform/opener/common/opener.js";import{ITelemetryService as x}from"../../../../../platform/telemetry/common/telemetry.js";import{MouseTargetType as h}from"../../../../browser/editorBrowser.js";import{MarkdownRenderer as P}from"../../../../browser/widget/markdownRenderer/browser/markdownRenderer.js";import{EditorOption as H}from"../../../../common/config/editorOptions.js";import{Range as O}from"../../../../common/core/range.js";import{ILanguageService as M}from"../../../../common/languages/language.js";import{HoverAnchorType as N,HoverForeignElementAnchor as u,RenderedHoverParts as D}from"../../../hover/browser/hoverTypes.js";import{InlineCompletionsController as S}from"../controller/inlineCompletionsController.js";import{InlineSuggestionHintsContentWidget as F}from"./inlineCompletionsHintsWidget.js";class k{constructor(r,t,e){this.owner=r;this.range=t;this.controller=e}isValidForHoverAnchor(r){return r.type===N.Range&&this.range.startColumn<=r.range.startColumn&&this.range.endColumn>=r.range.endColumn}}let p=class{constructor(r,t,e,o,n,i){this._editor=r;this._languageService=t;this._openerService=e;this.accessibilityService=o;this._instantiationService=n;this._telemetryService=i}hoverOrdinal=4;suggestHoverAnchor(r){const t=S.get(this._editor);if(!t)return null;const e=r.target;if(e.type===h.CONTENT_VIEW_ZONE){const o=e.detail;if(t.shouldShowHoverAtViewZone(o.viewZoneId))return new u(1e3,this,O.fromPositions(this._editor.getModel().validatePosition(o.positionBefore||o.position)),r.event.posx,r.event.posy,!1)}return e.type===h.CONTENT_EMPTY&&t.shouldShowHoverAt(e.range)?new u(1e3,this,e.range,r.event.posx,r.event.posy,!1):e.type===h.CONTENT_TEXT&&e.detail.mightBeForeignElement&&t.shouldShowHoverAt(e.range)?new u(1e3,this,e.range,r.event.posx,r.event.posy,!1):null}computeSync(r,t){if(this._editor.getOption(H.inlineSuggest).showToolbar!=="onHover")return[];const e=S.get(this._editor);return e&&e.shouldShowHoverAt(r.range)?[new k(this,r.range,e)]:[]}renderHoverParts(r,t){const e=new y,o=t[0];this._telemetryService.publicLog2("inlineCompletionHover.shown"),this.accessibilityService.isScreenReaderOptimized()&&!this._editor.getOption(H.screenReaderAnnounceInlineSuggestion)&&e.add(this.renderScreenReaderText(r,o));const n=o.controller.model.get(),i=this._instantiationService.createInstance(F,this._editor,!1,E(null),n.selectedInlineCompletionIndex,n.inlineCompletionsCount,n.activeCommands),a=i.getDomNode();r.fragment.appendChild(a),n.triggerExplicitly(),e.add(i);const m={hoverPart:o,hoverElement:a,dispose(){e.dispose()}};return new D([m])}getAccessibleContent(r){return C.localize("hoverAccessibilityStatusBar","There are inline completions here")}renderScreenReaderText(r,t){const e=new y,o=g.$,n=o("div.hover-row.markdown-hover"),i=g.append(n,o("div.hover-contents",{"aria-live":"assertive"})),a=e.add(new P({editor:this._editor},this._languageService,this._openerService)),m=c=>{e.add(a.onDidRenderAsync(()=>{i.className="hover-contents code-hover-contents",r.onContentsChanged()}));const d=C.localize("inlineSuggestionFollows","Suggestion:"),v=e.add(a.render(new b().appendText(d).appendCodeblock("text",c)));i.replaceChildren(v.element)};return e.add(T(c=>{const d=t.controller.model.read(c)?.primaryGhostText.read(c);if(d){const v=this._editor.getModel().getLineContent(d.lineNumber);m(d.renderForScreenReader(v))}else g.reset(i)})),r.fragment.appendChild(n),e}};p=I([l(1,M),l(2,R),l(3,_),l(4,A),l(5,x)],p);export{k as InlineCompletionsHover,p as InlineCompletionsHoverParticipant};
