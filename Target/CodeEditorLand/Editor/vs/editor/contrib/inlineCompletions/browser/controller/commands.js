import{KeyCode as a,KeyMod as p}from"../../../../../base/common/keyCodes.js";import{asyncTransaction as A,transaction as f}from"../../../../../base/common/observable.js";import*as t from"../../../../../nls.js";import{Action2 as v,MenuId as d}from"../../../../../platform/actions/common/actions.js";import{IConfigurationService as h}from"../../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as n}from"../../../../../platform/contextkey/common/contextkey.js";import{KeybindingWeight as b}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";import"../../../../browser/editorBrowser.js";import{EditorAction as c}from"../../../../browser/editorExtensions.js";import{EditorContextKeys as r}from"../../../../common/editorContextKeys.js";import{Context as m}from"../../../suggest/browser/suggest.js";import{inlineSuggestCommitId as E,showNextInlineSuggestionActionId as N,showPreviousInlineSuggestionActionId as C}from"./commandIds.js";import{InlineCompletionContextKeys as i}from"./inlineCompletionContextKeys.js";import{InlineCompletionsController as l}from"./inlineCompletionsController.js";class S extends c{static ID=N;constructor(){super({id:S.ID,label:t.localize("action.inlineSuggest.showNext","Show Next Inline Suggestion"),alias:"Show Next Inline Suggestion",precondition:n.and(r.writable,i.inlineSuggestionVisible),kbOpts:{weight:100,primary:p.Alt|a.BracketRight}})}async run(s,o){l.get(o)?.model.get()?.next()}}class I extends c{static ID=C;constructor(){super({id:I.ID,label:t.localize("action.inlineSuggest.showPrevious","Show Previous Inline Suggestion"),alias:"Show Previous Inline Suggestion",precondition:n.and(r.writable,i.inlineSuggestionVisible),kbOpts:{weight:100,primary:p.Alt|a.BracketLeft}})}async run(s,o){l.get(o)?.model.get()?.previous()}}class B extends c{constructor(){super({id:"editor.action.inlineSuggest.trigger",label:t.localize("action.inlineSuggest.trigger","Trigger Inline Suggestion"),alias:"Trigger Inline Suggestion",precondition:r.writable})}async run(s,o){const e=l.get(o);await A(async g=>{await e?.model.get()?.triggerExplicitly(g),e?.playAccessibilitySignal(g)})}}class R extends c{constructor(){super({id:"editor.action.inlineSuggest.acceptNextWord",label:t.localize("action.inlineSuggest.acceptNextWord","Accept Next Word Of Inline Suggestion"),alias:"Accept Next Word Of Inline Suggestion",precondition:n.and(r.writable,i.inlineSuggestionVisible),kbOpts:{weight:b.EditorContrib+1,primary:p.CtrlCmd|a.RightArrow,kbExpr:n.and(r.writable,i.inlineSuggestionVisible)},menuOpts:[{menuId:d.InlineSuggestionToolbar,title:t.localize("acceptWord","Accept Word"),group:"primary",order:2}]})}async run(s,o){const e=l.get(o);await e?.model.get()?.acceptNextWord(e.editor)}}class q extends c{constructor(){super({id:"editor.action.inlineSuggest.acceptNextLine",label:t.localize("action.inlineSuggest.acceptNextLine","Accept Next Line Of Inline Suggestion"),alias:"Accept Next Line Of Inline Suggestion",precondition:n.and(r.writable,i.inlineSuggestionVisible),kbOpts:{weight:b.EditorContrib+1},menuOpts:[{menuId:d.InlineSuggestionToolbar,title:t.localize("acceptLine","Accept Line"),group:"secondary",order:2}]})}async run(s,o){const e=l.get(o);await e?.model.get()?.acceptNextLine(e.editor)}}class G extends c{constructor(){super({id:E,label:t.localize("action.inlineSuggest.accept","Accept Inline Suggestion"),alias:"Accept Inline Suggestion",precondition:n.or(i.inlineSuggestionVisible,i.inlineEditVisible),menuOpts:[{menuId:d.InlineSuggestionToolbar,title:t.localize("accept","Accept"),group:"primary",order:1},{menuId:d.InlineEditsActions,title:t.localize("accept","Accept"),group:"primary",order:1}],kbOpts:{primary:a.Tab,weight:200,kbExpr:n.or(n.and(i.inlineSuggestionVisible,r.tabMovesFocus.toNegated(),m.Visible.toNegated(),r.hoverFocused.toNegated(),i.inlineSuggestionHasIndentationLessThanTabSize),n.and(i.inlineEditVisible,r.tabMovesFocus.toNegated(),m.Visible.toNegated(),r.hoverFocused.toNegated(),i.hasSelection.toNegated(),i.cursorAtInlineEdit))}})}async run(s,o){const e=l.get(o);e&&(e.model.get()?.accept(e.editor),e.editor.focus())}}class Q extends c{constructor(){super({id:"editor.action.inlineSuggest.jump",label:t.localize("action.inlineSuggest.jump","Jump to next inline edit"),alias:"Jump to next inline edit",precondition:i.inlineEditVisible,menuOpts:[{menuId:d.InlineEditsActions,title:t.localize("jump","Jump"),group:"primary",order:2,when:i.cursorAtInlineEdit.toNegated()}],kbOpts:{primary:a.Tab,weight:201,kbExpr:n.and(i.inlineEditVisible,i.hasSelection.toNegated(),r.tabMovesFocus.toNegated(),m.Visible.toNegated(),r.hoverFocused.toNegated(),i.cursorAtInlineEdit.toNegated())}})}async run(s,o){const e=l.get(o);e&&e.jump()}}class x extends c{static ID="editor.action.inlineSuggest.hide";constructor(){super({id:x.ID,label:t.localize("action.inlineSuggest.hide","Hide Inline Suggestion"),alias:"Hide Inline Suggestion",precondition:n.or(i.inlineSuggestionVisible,i.inlineEditVisible),kbOpts:{weight:100,primary:a.Escape}})}async run(s,o){const e=l.get(o);f(g=>{e?.model.get()?.stop(g)})}}class w extends v{static ID="editor.action.inlineSuggest.toggleAlwaysShowToolbar";constructor(){super({id:w.ID,title:t.localize("action.inlineSuggest.alwaysShowToolbar","Always Show Toolbar"),f1:!1,precondition:void 0,menu:[{id:d.InlineSuggestionToolbar,group:"secondary",order:10}],toggled:n.equals("config.editor.inlineSuggest.showToolbar","always")})}async run(s,o){const e=s.get(h),y=e.getValue("editor.inlineSuggest.showToolbar")==="always"?"onHover":"always";e.updateValue("editor.inlineSuggest.showToolbar",y)}}export{G as AcceptInlineCompletion,q as AcceptNextLineOfInlineCompletion,R as AcceptNextWordOfInlineCompletion,x as HideInlineCompletion,Q as JumpToNextInlineEdit,S as ShowNextInlineSuggestionAction,I as ShowPreviousInlineSuggestionAction,w as ToggleAlwaysShowInlineSuggestionToolbar,B as TriggerInlineSuggestionAction};
