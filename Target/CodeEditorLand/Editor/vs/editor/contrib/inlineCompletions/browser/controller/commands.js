import{KeyCode as g,KeyMod as p}from"../../../../../base/common/keyCodes.js";import{transaction as f}from"../../../../../base/common/observable.js";import{asyncTransaction as y}from"../../../../../base/common/observableInternal/base.js";import"../../../../browser/editorBrowser.js";import{EditorAction as s}from"../../../../browser/editorExtensions.js";import{EditorContextKeys as r}from"../../../../common/editorContextKeys.js";import{showNextInlineSuggestionActionId as A,showPreviousInlineSuggestionActionId as v,inlineSuggestCommitId as h}from"./commandIds.js";import{InlineCompletionContextKeys as t}from"./inlineCompletionContextKeys.js";import{InlineCompletionsController as c}from"./inlineCompletionsController.js";import{Context as C}from"../../../suggest/browser/suggest.js";import*as o from"../../../../../nls.js";import{MenuId as d,Action2 as N}from"../../../../../platform/actions/common/actions.js";import{IConfigurationService as E}from"../../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as l}from"../../../../../platform/contextkey/common/contextkey.js";import{KeybindingWeight as S}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";class m extends s{static ID=A;constructor(){super({id:m.ID,label:o.localize("action.inlineSuggest.showNext","Show Next Inline Suggestion"),alias:"Show Next Inline Suggestion",precondition:l.and(r.writable,t.inlineSuggestionVisible),kbOpts:{weight:100,primary:p.Alt|g.BracketRight}})}async run(n,i){c.get(i)?.model.get()?.next()}}class b extends s{static ID=v;constructor(){super({id:b.ID,label:o.localize("action.inlineSuggest.showPrevious","Show Previous Inline Suggestion"),alias:"Show Previous Inline Suggestion",precondition:l.and(r.writable,t.inlineSuggestionVisible),kbOpts:{weight:100,primary:p.Alt|g.BracketLeft}})}async run(n,i){c.get(i)?.model.get()?.previous()}}class j extends s{constructor(){super({id:"editor.action.inlineSuggest.trigger",label:o.localize("action.inlineSuggest.trigger","Trigger Inline Suggestion"),alias:"Trigger Inline Suggestion",precondition:r.writable})}async run(n,i){const e=c.get(i);await y(async a=>{await e?.model.get()?.triggerExplicitly(a),e?.playAccessibilitySignal(a)})}}class G extends s{constructor(){super({id:"editor.action.inlineSuggest.acceptNextWord",label:o.localize("action.inlineSuggest.acceptNextWord","Accept Next Word Of Inline Suggestion"),alias:"Accept Next Word Of Inline Suggestion",precondition:l.and(r.writable,t.inlineSuggestionVisible),kbOpts:{weight:S.EditorContrib+1,primary:p.CtrlCmd|g.RightArrow,kbExpr:l.and(r.writable,t.inlineSuggestionVisible)},menuOpts:[{menuId:d.InlineSuggestionToolbar,title:o.localize("acceptWord","Accept Word"),group:"primary",order:2}]})}async run(n,i){const e=c.get(i);await e?.model.get()?.acceptNextWord(e.editor)}}class J extends s{constructor(){super({id:"editor.action.inlineSuggest.acceptNextLine",label:o.localize("action.inlineSuggest.acceptNextLine","Accept Next Line Of Inline Suggestion"),alias:"Accept Next Line Of Inline Suggestion",precondition:l.and(r.writable,t.inlineSuggestionVisible),kbOpts:{weight:S.EditorContrib+1},menuOpts:[{menuId:d.InlineSuggestionToolbar,title:o.localize("acceptLine","Accept Line"),group:"secondary",order:2}]})}async run(n,i){const e=c.get(i);await e?.model.get()?.acceptNextLine(e.editor)}}class Q extends s{constructor(){super({id:h,label:o.localize("action.inlineSuggest.accept","Accept Inline Suggestion"),alias:"Accept Inline Suggestion",precondition:t.inlineSuggestionVisible,menuOpts:[{menuId:d.InlineSuggestionToolbar,title:o.localize("accept","Accept"),group:"primary",order:1}],kbOpts:{primary:g.Tab,weight:200,kbExpr:l.and(t.inlineSuggestionVisible,r.tabMovesFocus.toNegated(),t.inlineSuggestionHasIndentationLessThanTabSize,C.Visible.toNegated(),r.hoverFocused.toNegated())}})}async run(n,i){const e=c.get(i);e&&(e.model.get()?.accept(e.editor),e.editor.focus())}}class I extends s{static ID="editor.action.inlineSuggest.hide";constructor(){super({id:I.ID,label:o.localize("action.inlineSuggest.hide","Hide Inline Suggestion"),alias:"Hide Inline Suggestion",precondition:t.inlineSuggestionVisible,kbOpts:{weight:100,primary:g.Escape}})}async run(n,i){const e=c.get(i);f(a=>{e?.model.get()?.stop(a)})}}class x extends N{static ID="editor.action.inlineSuggest.toggleAlwaysShowToolbar";constructor(){super({id:x.ID,title:o.localize("action.inlineSuggest.alwaysShowToolbar","Always Show Toolbar"),f1:!1,precondition:void 0,menu:[{id:d.InlineSuggestionToolbar,group:"secondary",order:10}],toggled:l.equals("config.editor.inlineSuggest.showToolbar","always")})}async run(n,i){const e=n.get(E),w=e.getValue("editor.inlineSuggest.showToolbar")==="always"?"onHover":"always";e.updateValue("editor.inlineSuggest.showToolbar",w)}}export{Q as AcceptInlineCompletion,J as AcceptNextLineOfInlineCompletion,G as AcceptNextWordOfInlineCompletion,I as HideInlineCompletion,m as ShowNextInlineSuggestionAction,b as ShowPreviousInlineSuggestionAction,x as ToggleAlwaysShowInlineSuggestionToolbar,j as TriggerInlineSuggestionAction};
