import{LcsDiff as y}from"../../../../../base/common/diff/diff.js";import{getLeadingWhitespace as T}from"../../../../../base/common/strings.js";import{Range as D}from"../../../../common/core/range.js";import{SingleTextEdit as E}from"../../../../common/core/textEdit.js";import{GhostText as N,GhostTextPart as L}from"./ghostText.js";import{singleTextRemoveCommonPrefix as M}from"./singleTextEditHelpers.js";function U(g,n,s,d,l=0){let e=M(g,n);if(e.range.endLineNumber!==e.range.startLineNumber)return;const m=n.getLineContent(e.range.startLineNumber),x=T(m).length;if(e.range.startColumn-1<=x){const t=T(e.text).length,o=m.substring(e.range.startColumn-1,x),[c,h]=[e.range.getStartPosition(),e.range.getEndPosition()],C=c.column+o.length<=h.column?c.delta(0,o.length):h,p=D.fromPositions(C,h),P=e.text.startsWith(o)?e.text.substring(o.length):e.text.substring(t);e=new E(p,P)}const i=n.getValueInRange(e.range),r=A(i,e.text);if(!r)return;const u=e.range.startLineNumber,f=new Array;if(s==="prefix"){const t=r.filter(o=>o.originalLength===0);if(t.length>1||t.length===1&&t[0].originalStart!==i.length)return}const a=e.text.length-l;for(const t of r){const o=e.range.startColumn+t.originalStart+t.originalLength;if(s==="subwordSmart"&&d&&d.lineNumber===e.range.startLineNumber&&o<d.column||t.originalLength>0)return;if(t.modifiedLength===0)continue;const c=t.modifiedStart+t.modifiedLength,h=Math.max(t.modifiedStart,Math.min(c,a)),C=e.text.substring(t.modifiedStart,h),p=e.text.substring(h,Math.max(t.modifiedStart,c));C.length>0&&f.push(new L(o,C,!1)),p.length>0&&f.push(new L(o,p,!0))}return new N(u,f)}let b;function A(g,n){if(b?.originalValue===g&&b?.newValue===n)return b?.changes;{let s=S(g,n,!0);if(s){const d=w(s);if(d>0){const l=S(g,n,!1);l&&w(l)<d&&(s=l)}}return b={originalValue:g,newValue:n,changes:s},s}}function w(g){let n=0;for(const s of g)n+=s.originalLength;return n}function S(g,n,s){if(g.length>5e3||n.length>5e3)return;function d(i){let r=0;for(let u=0,f=i.length;u<f;u++){const a=i.charCodeAt(u);a>r&&(r=a)}return r}const l=Math.max(d(g),d(n));function e(i){if(i<0)throw new Error("unexpected");return l+i+1}function m(i){let r=0,u=0;const f=new Int32Array(i.length);for(let a=0,t=i.length;a<t;a++)if(s&&i[a]==="("){const o=u*100+r;f[a]=e(2*o),r++}else if(s&&i[a]===")"){r=Math.max(r-1,0);const o=u*100+r;f[a]=e(2*o+1),r===0&&u++}else f[a]=i.charCodeAt(a);return f}const x=m(g),I=m(n);return new y({getElements:()=>x},{getElements:()=>I}).ComputeDiff(!1).changes}export{U as computeGhostText};
