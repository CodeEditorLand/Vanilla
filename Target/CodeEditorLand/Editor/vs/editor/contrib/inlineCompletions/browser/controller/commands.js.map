{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineCompletions/browser/controller/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { asyncTransaction, transaction } from '../../../../../base/common/observable.js';\nimport * as nls from '../../../../../nls.js';\nimport { Action2, MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { EditorAction, ServicesAccessor } from '../../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { Context as SuggestContext } from '../../../suggest/browser/suggest.js';\nimport { inlineSuggestCommitId, showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\n\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n\tpublic static ID = showNextInlineSuggestionActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowNextInlineSuggestionAction.ID,\n\t\t\tlabel: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n\t\t\talias: 'Show Next Inline Suggestion',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketRight,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tcontroller?.model.get()?.next();\n\t}\n}\n\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n\tpublic static ID = showPreviousInlineSuggestionActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowPreviousInlineSuggestionAction.ID,\n\t\t\tlabel: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n\t\t\talias: 'Show Previous Inline Suggestion',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketLeft,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tcontroller?.model.get()?.previous();\n\t}\n}\n\nexport class TriggerInlineSuggestionAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.trigger',\n\t\t\tlabel: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n\t\t\talias: 'Trigger Inline Suggestion',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait asyncTransaction(async tx => {\n\t\t\t/** @description triggerExplicitly from command */\n\t\t\tawait controller?.model.get()?.triggerExplicitly(tx);\n\t\t\tcontroller?.playAccessibilitySignal(tx);\n\t\t});\n\t}\n}\n\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.acceptNextWord',\n\t\t\tlabel: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n\t\t\talias: 'Accept Next Word Of Inline Suggestion',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\ttitle: nls.localize('acceptWord', 'Accept Word'),\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait controller?.model.get()?.acceptNextWord(controller.editor);\n\t}\n}\n\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.acceptNextLine',\n\t\t\tlabel: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n\t\t\talias: 'Accept Next Line Of Inline Suggestion',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\ttitle: nls.localize('acceptLine', 'Accept Line'),\n\t\t\t\tgroup: 'secondary',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait controller?.model.get()?.acceptNextLine(controller.editor);\n\t}\n}\n\nexport class AcceptInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: inlineSuggestCommitId,\n\t\t\tlabel: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n\t\t\talias: 'Accept Inline Suggestion',\n\t\t\tprecondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\ttitle: nls.localize('accept', \"Accept\"),\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 1,\n\t\t\t}],\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Tab,\n\t\t\t\tweight: 200,\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\t\t\tEditorContextKeys.tabMovesFocus.toNegated(),\n\t\t\t\t\tInlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize,\n\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\tEditorContextKeys.hoverFocused.toNegated(),\n\t\t\t\t),\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tif (controller) {\n\t\t\tcontroller.model.get()?.accept(controller.editor);\n\t\t\tcontroller.editor.focus();\n\t\t}\n\t}\n}\n\nexport class HideInlineCompletion extends EditorAction {\n\tpublic static ID = 'editor.action.inlineSuggest.hide';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: HideInlineCompletion.ID,\n\t\t\tlabel: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n\t\t\talias: 'Hide Inline Suggestion',\n\t\t\tprecondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\ttransaction(tx => {\n\t\t\tcontroller?.model.get()?.stop(tx);\n\t\t});\n\t}\n}\n\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n\tpublic static ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n\t\t\ttitle: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n\t\t\tf1: false,\n\t\t\tprecondition: undefined,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.InlineSuggestionToolbar,\n\t\t\t\tgroup: 'secondary',\n\t\t\t\torder: 10,\n\t\t\t}],\n\t\t\ttoggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconst currentValue = configService.getValue<'always' | 'onHover'>('editor.inlineSuggest.showToolbar');\n\t\tconst newValue = currentValue === 'always' ? 'onHover' : 'always';\n\t\tconfigService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
