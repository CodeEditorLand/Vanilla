{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineCompletions/browser/controller/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport {\n\tasyncTransaction,\n\ttransaction,\n} from \"../../../../../base/common/observable.js\";\nimport * as nls from \"../../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\ttype ServicesAccessor,\n} from \"../../../../browser/editorExtensions.js\";\nimport { EditorContextKeys } from \"../../../../common/editorContextKeys.js\";\nimport { Context as SuggestContext } from \"../../../suggest/browser/suggest.js\";\nimport {\n\tinlineSuggestCommitId,\n\tshowNextInlineSuggestionActionId,\n\tshowPreviousInlineSuggestionActionId,\n} from \"./commandIds.js\";\nimport { InlineCompletionContextKeys } from \"./inlineCompletionContextKeys.js\";\nimport { InlineCompletionsController } from \"./inlineCompletionsController.js\";\n\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n\tpublic static ID = showNextInlineSuggestionActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowNextInlineSuggestionAction.ID,\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"action.inlineSuggest.showNext\",\n\t\t\t\t\"Show Next Inline Suggestion\",\n\t\t\t),\n\t\t\talias: \"Show Next Inline Suggestion\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketRight,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tcontroller?.model.get()?.next();\n\t}\n}\n\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n\tpublic static ID = showPreviousInlineSuggestionActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowPreviousInlineSuggestionAction.ID,\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"action.inlineSuggest.showPrevious\",\n\t\t\t\t\"Show Previous Inline Suggestion\",\n\t\t\t),\n\t\t\talias: \"Show Previous Inline Suggestion\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketLeft,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tcontroller?.model.get()?.previous();\n\t}\n}\n\nexport class TriggerInlineSuggestionAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.inlineSuggest.trigger\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"action.inlineSuggest.trigger\",\n\t\t\t\t\"Trigger Inline Suggestion\",\n\t\t\t),\n\t\t\talias: \"Trigger Inline Suggestion\",\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait asyncTransaction(async (tx) => {\n\t\t\t/** @description triggerExplicitly from command */\n\t\t\tawait controller?.model.get()?.triggerExplicitly(tx);\n\t\t\tcontroller?.playAccessibilitySignal(tx);\n\t\t});\n\t}\n}\n\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.inlineSuggest.acceptNextWord\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"action.inlineSuggest.acceptNextWord\",\n\t\t\t\t\"Accept Next Word Of Inline Suggestion\",\n\t\t\t),\n\t\t\talias: \"Accept Next Word Of Inline Suggestion\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\t\t),\n\t\t\t},\n\t\t\tmenuOpts: [\n\t\t\t\t{\n\t\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\t\ttitle: nls.localize(\"acceptWord\", \"Accept Word\"),\n\t\t\t\t\tgroup: \"primary\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait controller?.model.get()?.acceptNextWord(controller.editor);\n\t}\n}\n\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.inlineSuggest.acceptNextLine\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"action.inlineSuggest.acceptNextLine\",\n\t\t\t\t\"Accept Next Line Of Inline Suggestion\",\n\t\t\t),\n\t\t\talias: \"Accept Next Line Of Inline Suggestion\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t},\n\t\t\tmenuOpts: [\n\t\t\t\t{\n\t\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\t\ttitle: nls.localize(\"acceptLine\", \"Accept Line\"),\n\t\t\t\t\tgroup: \"secondary\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait controller?.model.get()?.acceptNextLine(controller.editor);\n\t}\n}\n\nexport class AcceptInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: inlineSuggestCommitId,\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"action.inlineSuggest.accept\",\n\t\t\t\t\"Accept Inline Suggestion\",\n\t\t\t),\n\t\t\talias: \"Accept Inline Suggestion\",\n\t\t\tprecondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\tmenuOpts: [\n\t\t\t\t{\n\t\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\t\ttitle: nls.localize(\"accept\", \"Accept\"),\n\t\t\t\t\tgroup: \"primary\",\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Tab,\n\t\t\t\tweight: 200,\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\t\t\tEditorContextKeys.tabMovesFocus.toNegated(),\n\t\t\t\t\tInlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize,\n\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\tEditorContextKeys.hoverFocused.toNegated(),\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tif (controller) {\n\t\t\tcontroller.model.get()?.accept(controller.editor);\n\t\t\tcontroller.editor.focus();\n\t\t}\n\t}\n}\n\nexport class HideInlineCompletion extends EditorAction {\n\tpublic static ID = \"editor.action.inlineSuggest.hide\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: HideInlineCompletion.ID,\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"action.inlineSuggest.hide\",\n\t\t\t\t\"Hide Inline Suggestion\",\n\t\t\t),\n\t\t\talias: \"Hide Inline Suggestion\",\n\t\t\tprecondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\ttransaction((tx) => {\n\t\t\tcontroller?.model.get()?.stop(tx);\n\t\t});\n\t}\n}\n\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n\tpublic static ID = \"editor.action.inlineSuggest.toggleAlwaysShowToolbar\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n\t\t\ttitle: nls.localize(\n\t\t\t\t\"action.inlineSuggest.alwaysShowToolbar\",\n\t\t\t\t\"Always Show Toolbar\",\n\t\t\t),\n\t\t\tf1: false,\n\t\t\tprecondition: undefined,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.InlineSuggestionToolbar,\n\t\t\t\t\tgroup: \"secondary\",\n\t\t\t\t\torder: 10,\n\t\t\t\t},\n\t\t\t],\n\t\t\ttoggled: ContextKeyExpr.equals(\n\t\t\t\t\"config.editor.inlineSuggest.showToolbar\",\n\t\t\t\t\"always\",\n\t\t\t),\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconst currentValue = configService.getValue<\"always\" | \"onHover\">(\n\t\t\t\"editor.inlineSuggest.showToolbar\",\n\t\t);\n\t\tconst newValue = currentValue === \"always\" ? \"onHover\" : \"always\";\n\t\tconfigService.updateValue(\"editor.inlineSuggest.showToolbar\", newValue);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
