{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineCompletions/test/browser/suggestWidgetModel.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../../../base/common/async.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { runWithFakedTimers } from '../../../../../base/test/common/timeTravelScheduler.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { CompletionItemKind, CompletionItemProvider } from '../../../../common/languages.js';\nimport { IEditorWorkerService } from '../../../../common/services/editorWorker.js';\nimport { ViewModel } from '../../../../common/viewModel/viewModelImpl.js';\nimport { GhostTextContext } from './utils.js';\nimport { SnippetController2 } from '../../../snippet/browser/snippetController2.js';\nimport { SuggestController } from '../../../suggest/browser/suggestController.js';\nimport { ISuggestMemoryService } from '../../../suggest/browser/suggestMemory.js';\nimport { ITestCodeEditor, TestCodeEditorInstantiationOptions, withAsyncTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { IMenu, IMenuService } from '../../../../../platform/actions/common/actions.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { MockKeybindingService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { ILogService, NullLogService } from '../../../../../platform/log/common/log.js';\nimport { InMemoryStorageService, IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../../../platform/telemetry/common/telemetryUtils.js';\nimport assert from 'assert';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { LanguageFeaturesService } from '../../../../common/services/languageFeaturesService.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { InlineCompletionsModel } from '../../browser/model/inlineCompletionsModel.js';\nimport { InlineCompletionsController } from '../../browser/controller/inlineCompletionsController.js';\nimport { autorun } from '../../../../../base/common/observable.js';\nimport { setUnexpectedErrorHandler } from '../../../../../base/common/errors.js';\nimport { IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('Suggest Widget Model', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tsetUnexpectedErrorHandler(function (err) {\n\t\t\tthrow err;\n\t\t});\n\t});\n\n\t// This test is skipped because the fix for this causes https://github.com/microsoft/vscode/issues/166023\n\ttest.skip('Active', async () => {\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider, },\n\t\t\tasync ({ editor, editorViewModel, context, model }) => {\n\t\t\t\tlet last: boolean | undefined = undefined;\n\t\t\t\tconst history = new Array<boolean>();\n\t\t\t\tconst d = autorun(reader => {\n\t\t\t\t\t/** @description debug */\n\t\t\t\t\tconst selectedSuggestItem = !!model.selectedSuggestItem.read(reader);\n\t\t\t\t\tif (last !== selectedSuggestItem) {\n\t\t\t\t\t\tlast = selectedSuggestItem;\n\t\t\t\t\t\thistory.push(last);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tcontext.keyboardType('h');\n\t\t\t\tconst suggestController = (editor.getContribution(SuggestController.ID) as SuggestController);\n\t\t\t\tsuggestController.triggerSuggest();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(history.splice(0), [false, true]);\n\n\t\t\t\tcontext.keyboardType('.');\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\t// No flicker here\n\t\t\t\tassert.deepStrictEqual(history.splice(0), []);\n\t\t\t\tsuggestController.cancelSuggestWidget();\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tassert.deepStrictEqual(history.splice(0), [false]);\n\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Ghost Text', async () => {\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider, suggest: { preview: true } },\n\t\t\tasync ({ editor, editorViewModel, context, model }) => {\n\t\t\t\tcontext.keyboardType('h');\n\t\t\t\tconst suggestController = (editor.getContribution(SuggestController.ID) as SuggestController);\n\t\t\t\tsuggestController.triggerSuggest();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['', 'h[ello]']);\n\n\t\t\t\tcontext.keyboardType('.');\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['h', 'hello.[hello]']);\n\n\t\t\t\tsuggestController.cancelSuggestWidget();\n\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['hello.']);\n\t\t\t}\n\t\t);\n\t});\n});\n\nconst provider: CompletionItemProvider = {\n\t_debugDisplayName: 'test',\n\ttriggerCharacters: ['.'],\n\tasync provideCompletionItems(model, pos) {\n\t\tconst word = model.getWordAtPosition(pos);\n\t\tconst range = word\n\t\t\t? { startLineNumber: 1, startColumn: word.startColumn, endLineNumber: 1, endColumn: word.endColumn }\n\t\t\t: Range.fromPositions(pos);\n\n\t\treturn {\n\t\t\tsuggestions: [{\n\t\t\t\tinsertText: 'hello',\n\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\tlabel: 'hello',\n\t\t\t\trange,\n\t\t\t\tcommitCharacters: ['.'],\n\t\t\t}]\n\t\t};\n\t},\n};\n\nasync function withAsyncTestCodeEditorAndInlineCompletionsModel(\n\ttext: string,\n\toptions: TestCodeEditorInstantiationOptions & { provider?: CompletionItemProvider; fakeClock?: boolean; serviceCollection?: never },\n\tcallback: (args: { editor: ITestCodeEditor; editorViewModel: ViewModel; model: InlineCompletionsModel; context: GhostTextContext }) => Promise<void>\n): Promise<void> {\n\tawait runWithFakedTimers({ useFakeTimers: options.fakeClock }, async () => {\n\t\tconst disposableStore = new DisposableStore();\n\n\t\ttry {\n\t\t\tconst serviceCollection = new ServiceCollection(\n\t\t\t\t[ITelemetryService, NullTelemetryService],\n\t\t\t\t[ILogService, new NullLogService()],\n\t\t\t\t[IStorageService, disposableStore.add(new InMemoryStorageService())],\n\t\t\t\t[IKeybindingService, new MockKeybindingService()],\n\t\t\t\t[IEditorWorkerService, new class extends mock<IEditorWorkerService>() {\n\t\t\t\t\toverride computeWordRanges() {\n\t\t\t\t\t\treturn Promise.resolve({});\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\t[ISuggestMemoryService, new class extends mock<ISuggestMemoryService>() {\n\t\t\t\t\toverride memorize(): void { }\n\t\t\t\t\toverride select(): number { return 0; }\n\t\t\t\t}],\n\t\t\t\t[IMenuService, new class extends mock<IMenuService>() {\n\t\t\t\t\toverride createMenu() {\n\t\t\t\t\t\treturn new class extends mock<IMenu>() {\n\t\t\t\t\t\t\toverride onDidChange = Event.None;\n\t\t\t\t\t\t\toverride dispose() { }\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\t[ILabelService, new class extends mock<ILabelService>() { }],\n\t\t\t\t[IWorkspaceContextService, new class extends mock<IWorkspaceContextService>() { }],\n\t\t\t\t[IAccessibilitySignalService, {\n\t\t\t\t\tplaySignal: async () => { },\n\t\t\t\t\tisSoundEnabled(signal: unknown) { return false; },\n\t\t\t\t} as any]\n\t\t\t);\n\n\t\t\tif (options.provider) {\n\t\t\t\tconst languageFeaturesService = new LanguageFeaturesService();\n\t\t\t\tserviceCollection.set(ILanguageFeaturesService, languageFeaturesService);\n\t\t\t\tdisposableStore.add(languageFeaturesService.completionProvider.register({ pattern: '**' }, options.provider));\n\t\t\t}\n\n\t\t\tawait withAsyncTestCodeEditor(text, { ...options, serviceCollection }, async (editor, editorViewModel, instantiationService) => {\n\t\t\t\teditor.registerAndInstantiateContribution(SnippetController2.ID, SnippetController2);\n\t\t\t\teditor.registerAndInstantiateContribution(SuggestController.ID, SuggestController);\n\t\t\t\teditor.registerAndInstantiateContribution(InlineCompletionsController.ID, InlineCompletionsController);\n\t\t\t\tconst model = InlineCompletionsController.get(editor)?.model.get()!;\n\n\t\t\t\tconst context = new GhostTextContext(model, editor);\n\t\t\t\tawait callback({ editor, editorViewModel, model, context });\n\t\t\t\tcontext.dispose();\n\t\t\t});\n\t\t} finally {\n\t\t\tdisposableStore.dispose();\n\t\t}\n\t});\n}\n"],
  "mappings": "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",
  "names": []
}
