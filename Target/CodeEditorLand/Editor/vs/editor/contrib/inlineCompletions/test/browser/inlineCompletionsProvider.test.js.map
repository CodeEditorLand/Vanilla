{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineCompletions/test/browser/inlineCompletionsProvider.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { runWithFakedTimers } from '../../../../../base/test/common/timeTravelScheduler.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { InlineCompletionsProvider } from '../../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { LanguageFeaturesService } from '../../../../common/services/languageFeaturesService.js';\nimport { ViewModel } from '../../../../common/viewModel/viewModelImpl.js';\nimport { InlineCompletionsController } from '../../browser/controller/inlineCompletionsController.js';\nimport { InlineCompletionsModel } from '../../browser/model/inlineCompletionsModel.js';\nimport { SingleTextEdit } from '../../../../common/core/textEdit.js';\nimport { GhostTextContext, MockInlineCompletionsProvider } from './utils.js';\nimport { ITestCodeEditor, TestCodeEditorInstantiationOptions, withAsyncTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { createTextModel } from '../../../../test/common/testTextModel.js';\nimport { IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { computeGhostText } from '../../browser/model/computeGhostText.js';\n\nsuite('Inline Completions', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsuite('inlineCompletionToGhostText', () => {\n\n\t\tfunction getOutput(text: string, suggestion: string): unknown {\n\t\t\tconst rangeStartOffset = text.indexOf('[');\n\t\t\tconst rangeEndOffset = text.indexOf(']') - 1;\n\t\t\tconst cleanedText = text.replace('[', '').replace(']', '');\n\t\t\tconst tempModel = createTextModel(cleanedText);\n\t\t\tconst range = Range.fromPositions(tempModel.getPositionAt(rangeStartOffset), tempModel.getPositionAt(rangeEndOffset));\n\t\t\tconst options = ['prefix', 'subword'] as const;\n\t\t\tconst result = {} as any;\n\t\t\tfor (const option of options) {\n\t\t\t\tresult[option] = computeGhostText(new SingleTextEdit(range, suggestion), tempModel, option)?.render(cleanedText, true);\n\t\t\t}\n\n\t\t\ttempModel.dispose();\n\n\t\t\tif (new Set(Object.values(result)).size === 1) {\n\t\t\t\treturn Object.values(result)[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\ttest('Basic', () => {\n\t\t\tassert.deepStrictEqual(getOutput('[foo]baz', 'foobar'), 'foo[bar]baz');\n\t\t\tassert.deepStrictEqual(getOutput('[aaa]aaa', 'aaaaaa'), 'aaa[aaa]aaa');\n\t\t\tassert.deepStrictEqual(getOutput('[foo]baz', 'boobar'), undefined);\n\t\t\tassert.deepStrictEqual(getOutput('[foo]foo', 'foofoo'), 'foo[foo]foo');\n\t\t\tassert.deepStrictEqual(getOutput('foo[]', 'bar\\nhello'), 'foo[bar\\nhello]');\n\t\t});\n\n\t\ttest('Empty ghost text', () => {\n\t\t\tassert.deepStrictEqual(getOutput('[foo]', 'foo'), 'foo');\n\t\t});\n\n\t\ttest('Whitespace (indentation)', () => {\n\t\t\tassert.deepStrictEqual(getOutput('[ foo]', 'foobar'), ' foo[bar]');\n\t\t\tassert.deepStrictEqual(getOutput('[\\tfoo]', 'foobar'), '\\tfoo[bar]');\n\t\t\tassert.deepStrictEqual(getOutput('[\\t foo]', '\\tfoobar'), '\t foo[bar]');\n\t\t\tassert.deepStrictEqual(getOutput('[\\tfoo]', '\\t\\tfoobar'), { prefix: undefined, subword: '\\t[\\t]foo[bar]' });\n\t\t\tassert.deepStrictEqual(getOutput('[\\t]', '\\t\\tfoobar'), '\\t[\\tfoobar]');\n\t\t\tassert.deepStrictEqual(getOutput('\\t[]', '\\t'), '\\t[\\t]');\n\t\t\tassert.deepStrictEqual(getOutput('\\t[\\t]', ''), '\\t\\t');\n\n\t\t\tassert.deepStrictEqual(getOutput('[ ]', 'return 1'), ' [return 1]');\n\t\t});\n\n\t\ttest('Whitespace (outside of indentation)', () => {\n\t\t\tassert.deepStrictEqual(getOutput('bar[ foo]', 'foobar'), undefined);\n\t\t\tassert.deepStrictEqual(getOutput('bar[\\tfoo]', 'foobar'), undefined);\n\t\t});\n\n\t\ttest('Unsupported Case', () => {\n\t\t\tassert.deepStrictEqual(getOutput('fo[o\\n]', 'x\\nbar'), undefined);\n\t\t});\n\n\t\ttest('New Line', () => {\n\t\t\tassert.deepStrictEqual(getOutput('fo[o\\n]', 'o\\nbar'), 'foo\\n[bar]');\n\t\t});\n\n\t\ttest('Multi Part Diffing', () => {\n\t\t\tassert.deepStrictEqual(getOutput('foo[()]', '(x);'), { prefix: undefined, subword: 'foo([x])[;]' });\n\t\t\tassert.deepStrictEqual(getOutput('[\\tfoo]', '\\t\\tfoobar'), { prefix: undefined, subword: '\\t[\\t]foo[bar]' });\n\t\t\tassert.deepStrictEqual(getOutput('[(y ===)]', '(y === 1) { f(); }'), { prefix: undefined, subword: '(y ===[ 1])[ { f(); }]' });\n\t\t\tassert.deepStrictEqual(getOutput('[(y ==)]', '(y === 1) { f(); }'), { prefix: undefined, subword: '(y ==[= 1])[ { f(); }]' });\n\n\t\t\tassert.deepStrictEqual(getOutput('[(y ==)]', '(y === 1) { f(); }'), { prefix: undefined, subword: '(y ==[= 1])[ { f(); }]' });\n\t\t});\n\n\t\ttest('Multi Part Diffing 1', () => {\n\t\t\tassert.deepStrictEqual(getOutput('[if () ()]', 'if (1 == f()) ()'), { prefix: undefined, subword: 'if ([1 == f()]) ()' });\n\t\t});\n\n\t\ttest('Multi Part Diffing 2', () => {\n\t\t\tassert.deepStrictEqual(getOutput('[)]', '())'), ({ prefix: undefined, subword: \"[(])[)]\" }));\n\t\t\tassert.deepStrictEqual(getOutput('[))]', '(())'), ({ prefix: undefined, subword: \"[((]))\" }));\n\t\t});\n\n\t\ttest('Parenthesis Matching', () => {\n\t\t\tassert.deepStrictEqual(getOutput('[console.log()]', 'console.log({ label: \"(\" })'), {\n\t\t\t\tprefix: undefined,\n\t\t\t\tsubword: 'console.log([{ label: \"(\" }])'\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Does not trigger automatically if disabled', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider, inlineSuggest: { enabled: false } },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('foo');\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\t// Provider is not called, no ghost text is shown.\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), []);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['']);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Ghost text is shown after trigger', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('foo');\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar', range: new Range(1, 1, 1, 4) });\n\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,4)', text: 'foo', triggerKind: 1, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['', 'foo[bar]']);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Ghost text is shown automatically when configured', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider, inlineSuggest: { enabled: true } },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('foo');\n\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar', range: new Range(1, 1, 1, 4) });\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,4)', text: 'foo', triggerKind: 0, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['', 'foo[bar]']);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Ghost text is updated automatically', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar', range: new Range(1, 1, 1, 4) });\n\t\t\t\tcontext.keyboardType('foo');\n\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobizz', range: new Range(1, 1, 1, 6) });\n\t\t\t\tcontext.keyboardType('b');\n\t\t\t\tcontext.keyboardType('i');\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,4)', text: 'foo', triggerKind: 1, },\n\t\t\t\t\t{ position: '(1,6)', text: 'foobi', triggerKind: 0, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\tcontext.getAndClearViewStates(),\n\t\t\t\t\t['', 'foo[bar]', 'foob[ar]', 'foobi', 'foobi[zz]']\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Unindent whitespace', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('  ');\n\t\t\t\tprovider.setReturnValue({ insertText: 'foo', range: new Range(1, 2, 1, 3) });\n\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['', '  [foo]']);\n\n\t\t\t\tmodel.accept(editor);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,3)', text: '  ', triggerKind: 1, },\n\t\t\t\t]);\n\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), [' foo']);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Unindent tab', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('\\t\\t');\n\t\t\t\tprovider.setReturnValue({ insertText: 'foo', range: new Range(1, 2, 1, 3) });\n\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['', '\\t\\t[foo]']);\n\n\t\t\t\tmodel.accept(editor);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,3)', text: '\\t\\t', triggerKind: 1, },\n\t\t\t\t]);\n\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['\\tfoo']);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('No unindent after indentation', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('buzz  ');\n\t\t\t\tprovider.setReturnValue({ insertText: 'foo', range: new Range(1, 6, 1, 7) });\n\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['']);\n\n\t\t\t\tmodel.accept(editor);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,7)', text: 'buzz  ', triggerKind: 1, },\n\t\t\t\t]);\n\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), []);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Next/previous', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('foo');\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar1', range: new Range(1, 1, 1, 4) });\n\t\t\t\tmodel.trigger();\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\tcontext.getAndClearViewStates(),\n\t\t\t\t\t['', 'foo[bar1]']\n\t\t\t\t);\n\n\t\t\t\tprovider.setReturnValues([\n\t\t\t\t\t{ insertText: 'foobar1', range: new Range(1, 1, 1, 4) },\n\t\t\t\t\t{ insertText: 'foobizz2', range: new Range(1, 1, 1, 4) },\n\t\t\t\t\t{ insertText: 'foobuzz3', range: new Range(1, 1, 1, 4) }\n\t\t\t\t]);\n\n\t\t\t\tmodel.next();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['foo[bizz2]']);\n\n\t\t\t\tmodel.next();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['foo[buzz3]']);\n\n\t\t\t\tmodel.next();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['foo[bar1]']);\n\n\t\t\t\tmodel.previous();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['foo[buzz3]']);\n\n\t\t\t\tmodel.previous();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['foo[bizz2]']);\n\n\t\t\t\tmodel.previous();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['foo[bar1]']);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,4)', text: 'foo', triggerKind: 0, },\n\t\t\t\t\t{ position: '(1,4)', text: 'foo', triggerKind: 1, },\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Calling the provider is debounced', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tmodel.trigger();\n\n\t\t\t\tcontext.keyboardType('f');\n\t\t\t\tawait timeout(40);\n\t\t\t\tcontext.keyboardType('o');\n\t\t\t\tawait timeout(40);\n\t\t\t\tcontext.keyboardType('o');\n\t\t\t\tawait timeout(40);\n\n\t\t\t\t// The provider is not called\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), []);\n\n\t\t\t\tawait timeout(400);\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,4)', text: 'foo', triggerKind: 0, }\n\t\t\t\t]);\n\n\t\t\t\tprovider.assertNotCalledTwiceWithin50ms();\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Backspace is debounced', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider, inlineSuggest: { enabled: true } },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('foo');\n\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar', range: new Range(1, 1, 1, 4) });\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tfor (let j = 0; j < 2; j++) {\n\t\t\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\t\t\tcontext.leftDelete();\n\t\t\t\t\t\tawait timeout(5);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.keyboardType('bar');\n\t\t\t\t}\n\n\t\t\t\tawait timeout(400);\n\n\t\t\t\tprovider.assertNotCalledTwiceWithin50ms();\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Forward stability', async function () {\n\t\t// The user types the text as suggested and the provider is forward-stable\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar', range: new Range(1, 1, 1, 4) });\n\t\t\t\tcontext.keyboardType('foo');\n\t\t\t\tmodel.trigger();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,4)', text: 'foo', triggerKind: 0, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['', 'foo[bar]']);\n\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar', range: new Range(1, 1, 1, 5) });\n\t\t\t\tcontext.keyboardType('b');\n\t\t\t\tassert.deepStrictEqual(context.currentPrettyViewState, 'foob[ar]');\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,5)', text: 'foob', triggerKind: 0, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['foob[ar]']);\n\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar', range: new Range(1, 1, 1, 6) });\n\t\t\t\tcontext.keyboardType('a');\n\t\t\t\tassert.deepStrictEqual(context.currentPrettyViewState, 'fooba[r]');\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,6)', text: 'fooba', triggerKind: 0, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['fooba[r]']);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Support forward instability', async function () {\n\t\t// The user types the text as suggested and the provider reports a different suggestion.\n\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar', range: new Range(1, 1, 1, 4) });\n\t\t\t\tcontext.keyboardType('foo');\n\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\tawait timeout(100);\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,4)', text: 'foo', triggerKind: 1, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['', 'foo[bar]']);\n\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobaz', range: new Range(1, 1, 1, 5) });\n\t\t\t\tcontext.keyboardType('b');\n\t\t\t\tassert.deepStrictEqual(context.currentPrettyViewState, 'foob[ar]');\n\t\t\t\tawait timeout(100);\n\t\t\t\t// This behavior might change!\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,5)', text: 'foob', triggerKind: 0, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['foob[ar]', 'foob[az]']);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Support backward instability', async function () {\n\t\t// The user deletes text and the suggestion changes\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('fooba');\n\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobar', range: new Range(1, 1, 1, 6) });\n\n\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,6)', text: 'fooba', triggerKind: 1, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), ['', 'fooba[r]']);\n\n\t\t\t\tprovider.setReturnValue({ insertText: 'foobaz', range: new Range(1, 1, 1, 5) });\n\t\t\t\tcontext.leftDelete();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(1,5)', text: 'foob', triggerKind: 0, }\n\t\t\t\t]);\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), [\n\t\t\t\t\t'foob[ar]',\n\t\t\t\t\t'foob[az]'\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('No race conditions', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider, },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('h');\n\t\t\t\tprovider.setReturnValue({ insertText: 'helloworld', range: new Range(1, 1, 1, 2) }, 1000);\n\n\t\t\t\tmodel.triggerExplicitly();\n\n\t\t\t\tawait timeout(1030);\n\t\t\t\tcontext.keyboardType('ello');\n\t\t\t\tprovider.setReturnValue({ insertText: 'helloworld', range: new Range(1, 1, 1, 6) }, 1000);\n\n\t\t\t\t// after 20ms: Inline completion provider answers back\n\t\t\t\t// after 50ms: Debounce is triggered\n\t\t\t\tawait timeout(2000);\n\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), [\n\t\t\t\t\t'',\n\t\t\t\t\t'hello[world]',\n\t\t\t\t]);\n\t\t\t});\n\t});\n\n\ttest('Do not reuse cache from previous session (#132516)', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider, inlineSuggest: { enabled: true } },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('hello\\n');\n\t\t\t\tcontext.cursorLeft();\n\t\t\t\tcontext.keyboardType('x');\n\t\t\t\tcontext.leftDelete();\n\t\t\t\tprovider.setReturnValue({ insertText: 'helloworld', range: new Range(1, 1, 1, 6) }, 1000);\n\t\t\t\tawait timeout(2000);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: '(1,6)',\n\t\t\t\t\t\ttext: 'hello\\n',\n\t\t\t\t\t\ttriggerKind: 0,\n\t\t\t\t\t}\n\t\t\t\t]);\n\n\t\t\t\tprovider.setReturnValue({ insertText: 'helloworld', range: new Range(2, 1, 2, 6) }, 1000);\n\n\t\t\t\tcontext.cursorDown();\n\t\t\t\tcontext.keyboardType('hello');\n\t\t\t\tawait timeout(40);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), []);\n\n\t\t\t\t// Update ghost text\n\t\t\t\tcontext.keyboardType('w');\n\t\t\t\tcontext.leftDelete();\n\n\t\t\t\tawait timeout(2000);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), [\n\t\t\t\t\t{ position: '(2,6)', triggerKind: 0, text: 'hello\\nhello' },\n\t\t\t\t]);\n\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), [\n\t\t\t\t\t'',\n\t\t\t\t\t'hello[world]\\n',\n\t\t\t\t\t'hello\\n',\n\t\t\t\t\t'hello\\nhello[world]',\n\t\t\t\t]);\n\t\t\t});\n\t});\n\n\ttest('Additional Text Edits', async function () {\n\t\tconst provider = new MockInlineCompletionsProvider();\n\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t{ fakeClock: true, provider },\n\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\tcontext.keyboardType('buzz\\nbaz');\n\t\t\t\tprovider.setReturnValue({\n\t\t\t\t\tinsertText: 'bazz',\n\t\t\t\t\trange: new Range(2, 1, 2, 4),\n\t\t\t\t\tadditionalTextEdits: [{\n\t\t\t\t\t\trange: new Range(1, 1, 1, 5),\n\t\t\t\t\t\ttext: 'bla'\n\t\t\t\t\t}],\n\t\t\t\t});\n\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\tawait timeout(1000);\n\n\t\t\t\tmodel.accept(editor);\n\n\t\t\t\tassert.deepStrictEqual(provider.getAndClearCallHistory(), ([{ position: \"(2,4)\", triggerKind: 1, text: \"buzz\\nbaz\" }]));\n\n\t\t\t\tassert.deepStrictEqual(context.getAndClearViewStates(), [\n\t\t\t\t\t'',\n\t\t\t\t\t'buzz\\nbaz[z]',\n\t\t\t\t\t'bla\\nbazz',\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t});\n\n\tsuite('inlineCompletionMultiCursor', () => {\n\n\t\ttest('Basic', async function () {\n\t\t\tconst provider = new MockInlineCompletionsProvider();\n\t\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t\t{ fakeClock: true, provider },\n\t\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\t\tcontext.keyboardType('console\\nconsole\\n');\n\t\t\t\t\teditor.setSelections([\n\t\t\t\t\t\tnew Selection(1, 1000, 1, 1000),\n\t\t\t\t\t\tnew Selection(2, 1000, 2, 1000),\n\t\t\t\t\t]);\n\t\t\t\t\tprovider.setReturnValue({\n\t\t\t\t\t\tinsertText: 'console.log(\"hello\");',\n\t\t\t\t\t\trange: new Range(1, 1, 1, 1000),\n\t\t\t\t\t});\n\t\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\t\tawait timeout(1000);\n\t\t\t\t\tmodel.accept(editor);\n\t\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\t\teditor.getValue(),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`console.log(\"hello\");`,\n\t\t\t\t\t\t\t`console.log(\"hello\");`,\n\t\t\t\t\t\t\t``\n\t\t\t\t\t\t].join('\\n')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\ttest('Multi Part', async function () {\n\t\t\tconst provider = new MockInlineCompletionsProvider();\n\t\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t\t{ fakeClock: true, provider },\n\t\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\t\tcontext.keyboardType('console.log()\\nconsole.log\\n');\n\t\t\t\t\teditor.setSelections([\n\t\t\t\t\t\tnew Selection(1, 12, 1, 12),\n\t\t\t\t\t\tnew Selection(2, 1000, 2, 1000),\n\t\t\t\t\t]);\n\t\t\t\t\tprovider.setReturnValue({\n\t\t\t\t\t\tinsertText: 'console.log(\"hello\");',\n\t\t\t\t\t\trange: new Range(1, 1, 1, 1000),\n\t\t\t\t\t});\n\t\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\t\tawait timeout(1000);\n\t\t\t\t\tmodel.accept(editor);\n\t\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\t\teditor.getValue(),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`console.log(\"hello\");`,\n\t\t\t\t\t\t\t`console.log(\"hello\");`,\n\t\t\t\t\t\t\t``\n\t\t\t\t\t\t].join('\\n')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\ttest('Multi Part and Different Cursor Columns', async function () {\n\t\t\tconst provider = new MockInlineCompletionsProvider();\n\t\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t\t{ fakeClock: true, provider },\n\t\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\t\tcontext.keyboardType('console.log()\\nconsole.warn\\n');\n\t\t\t\t\teditor.setSelections([\n\t\t\t\t\t\tnew Selection(1, 12, 1, 12),\n\t\t\t\t\t\tnew Selection(2, 14, 2, 14),\n\t\t\t\t\t]);\n\t\t\t\t\tprovider.setReturnValue({\n\t\t\t\t\t\tinsertText: 'console.log(\"hello\");',\n\t\t\t\t\t\trange: new Range(1, 1, 1, 1000),\n\t\t\t\t\t});\n\t\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\t\tawait timeout(1000);\n\t\t\t\t\tmodel.accept(editor);\n\t\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\t\teditor.getValue(),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`console.log(\"hello\");`,\n\t\t\t\t\t\t\t`console.warn(\"hello\");`,\n\t\t\t\t\t\t\t``\n\t\t\t\t\t\t].join('\\n')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\tasync function acceptNextWord(model: InlineCompletionsModel, editor: ITestCodeEditor, timesToAccept: number = 1): Promise<void> {\n\t\t\tfor (let i = 0; i < timesToAccept; i++) {\n\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\tawait timeout(1000);\n\t\t\t\tawait model.acceptNextWord(editor);\n\t\t\t}\n\t\t}\n\n\t\ttest('Basic Partial Completion', async function () {\n\t\t\tconst provider = new MockInlineCompletionsProvider();\n\t\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t\t{ fakeClock: true, provider },\n\t\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\t\tcontext.keyboardType('let\\nlet\\n');\n\t\t\t\t\teditor.setSelections([\n\t\t\t\t\t\tnew Selection(1, 1000, 1, 1000),\n\t\t\t\t\t\tnew Selection(2, 1000, 2, 1000),\n\t\t\t\t\t]);\n\n\t\t\t\t\tprovider.setReturnValue({\n\t\t\t\t\t\tinsertText: `let a = 'some word'; `,\n\t\t\t\t\t\trange: new Range(1, 1, 1, 1000),\n\t\t\t\t\t});\n\n\t\t\t\t\tawait acceptNextWord(model, editor, 2);\n\n\t\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\t\teditor.getValue(),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`let a`,\n\t\t\t\t\t\t\t`let a`,\n\t\t\t\t\t\t\t``\n\t\t\t\t\t\t].join('\\n')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\ttest('Partial Multi-Part Completion', async function () {\n\t\t\tconst provider = new MockInlineCompletionsProvider();\n\t\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t\t{ fakeClock: true, provider },\n\t\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\t\tcontext.keyboardType('for ()\\nfor \\n');\n\t\t\t\t\teditor.setSelections([\n\t\t\t\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t\t\t\tnew Selection(2, 1000, 2, 1000),\n\t\t\t\t\t]);\n\n\t\t\t\t\tprovider.setReturnValue({\n\t\t\t\t\t\tinsertText: `for (let i = 0; i < 10; i++) {`,\n\t\t\t\t\t\trange: new Range(1, 1, 1, 1000),\n\t\t\t\t\t});\n\n\t\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\t\tawait timeout(1000);\n\n\t\t\t\t\tawait acceptNextWord(model, editor, 3);\n\n\t\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\t\teditor.getValue(),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`for (let i)`,\n\t\t\t\t\t\t\t`for (let i`,\n\t\t\t\t\t\t\t``\n\t\t\t\t\t\t].join('\\n')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\ttest('Partial Mutli-Part and Different Cursor Columns Completion', async function () {\n\t\t\tconst provider = new MockInlineCompletionsProvider();\n\t\t\tawait withAsyncTestCodeEditorAndInlineCompletionsModel('',\n\t\t\t\t{ fakeClock: true, provider },\n\t\t\t\tasync ({ editor, editorViewModel, model, context }) => {\n\t\t\t\t\tcontext.keyboardType(`console.log()\\nconsole.warnnnn\\n`);\n\t\t\t\t\teditor.setSelections([\n\t\t\t\t\t\tnew Selection(1, 12, 1, 12),\n\t\t\t\t\t\tnew Selection(2, 16, 2, 16),\n\t\t\t\t\t]);\n\n\t\t\t\t\tprovider.setReturnValue({\n\t\t\t\t\t\tinsertText: `console.log(\"hello\" + \" \" + \"world\");`,\n\t\t\t\t\t\trange: new Range(1, 1, 1, 1000),\n\t\t\t\t\t});\n\n\t\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\t\tawait timeout(1000);\n\n\t\t\t\t\tawait acceptNextWord(model, editor, 4);\n\n\t\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\t\teditor.getValue(),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`console.log(\"hello\" + )`,\n\t\t\t\t\t\t\t`console.warnnnn(\"hello\" + `,\n\t\t\t\t\t\t\t``\n\t\t\t\t\t\t].join('\\n')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t});\n});\n\nasync function withAsyncTestCodeEditorAndInlineCompletionsModel<T>(\n\ttext: string,\n\toptions: TestCodeEditorInstantiationOptions & { provider?: InlineCompletionsProvider; fakeClock?: boolean },\n\tcallback: (args: { editor: ITestCodeEditor; editorViewModel: ViewModel; model: InlineCompletionsModel; context: GhostTextContext }) => Promise<T>\n): Promise<T> {\n\treturn await runWithFakedTimers({\n\t\tuseFakeTimers: options.fakeClock,\n\t}, async () => {\n\t\tconst disposableStore = new DisposableStore();\n\n\t\ttry {\n\t\t\tif (options.provider) {\n\t\t\t\tconst languageFeaturesService = new LanguageFeaturesService();\n\t\t\t\tif (!options.serviceCollection) {\n\t\t\t\t\toptions.serviceCollection = new ServiceCollection();\n\t\t\t\t}\n\t\t\t\toptions.serviceCollection.set(ILanguageFeaturesService, languageFeaturesService);\n\t\t\t\toptions.serviceCollection.set(IAccessibilitySignalService, {\n\t\t\t\t\tplaySignal: async () => { },\n\t\t\t\t\tisSoundEnabled(signal: unknown) { return false; },\n\t\t\t\t} as any);\n\t\t\t\tconst d = languageFeaturesService.inlineCompletionsProvider.register({ pattern: '**' }, options.provider);\n\t\t\t\tdisposableStore.add(d);\n\t\t\t}\n\n\t\t\tlet result: T;\n\t\t\tawait withAsyncTestCodeEditor(text, options, async (editor, editorViewModel, instantiationService) => {\n\t\t\t\tconst controller = instantiationService.createInstance(InlineCompletionsController, editor);\n\t\t\t\tconst model = controller.model.get()!;\n\t\t\t\tconst context = new GhostTextContext(model, editor);\n\t\t\t\ttry {\n\t\t\t\t\tresult = await callback({ editor, editorViewModel, model, context });\n\t\t\t\t} finally {\n\t\t\t\t\tcontext.dispose();\n\t\t\t\t\tmodel.dispose();\n\t\t\t\t\tcontroller.dispose();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (options.provider instanceof MockInlineCompletionsProvider) {\n\t\t\t\toptions.provider.assertNotCalledTwiceWithin50ms();\n\t\t\t}\n\n\t\t\treturn result!;\n\t\t} finally {\n\t\t\tdisposableStore.dispose();\n\t\t}\n\t});\n}\n"],
  "mappings": "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",
  "names": []
}
