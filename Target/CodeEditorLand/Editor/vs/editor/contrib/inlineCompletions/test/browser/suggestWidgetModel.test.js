import{timeout as s}from"../../../../../base/common/async.js";import{Event as C}from"../../../../../base/common/event.js";import{DisposableStore as I}from"../../../../../base/common/lifecycle.js";import{mock as a}from"../../../../../base/test/common/mock.js";import{runWithFakedTimers as w}from"../../../../../base/test/common/timeTravelScheduler.js";import{Range as y}from"../../../../common/core/range.js";import{CompletionItemKind as b}from"../../../../common/languages.js";import{IEditorWorkerService as k}from"../../../../common/services/editorWorker.js";import"../../../../common/viewModel/viewModelImpl.js";import{GhostTextContext as h}from"./utils.js";import{SnippetController2 as S}from"../../../snippet/browser/snippetController2.js";import{SuggestController as c}from"../../../suggest/browser/suggestController.js";import{ISuggestMemoryService as T}from"../../../suggest/browser/suggestMemory.js";import{withAsyncTestCodeEditor as M}from"../../../../test/browser/testCodeEditor.js";import{IMenuService as E}from"../../../../../platform/actions/common/actions.js";import{ServiceCollection as A}from"../../../../../platform/instantiation/common/serviceCollection.js";import{IKeybindingService as x}from"../../../../../platform/keybinding/common/keybinding.js";import{MockKeybindingService as W}from"../../../../../platform/keybinding/test/common/mockKeybindingService.js";import{ILogService as D,NullLogService as L}from"../../../../../platform/log/common/log.js";import{InMemoryStorageService as P,IStorageService as V}from"../../../../../platform/storage/common/storage.js";import{ITelemetryService as N}from"../../../../../platform/telemetry/common/telemetry.js";import{NullTelemetryService as q}from"../../../../../platform/telemetry/common/telemetryUtils.js";import l from"assert";import{ILabelService as F}from"../../../../../platform/label/common/label.js";import{IWorkspaceContextService as G}from"../../../../../platform/workspace/common/workspace.js";import{LanguageFeaturesService as K}from"../../../../common/services/languageFeaturesService.js";import{ILanguageFeaturesService as O}from"../../../../common/services/languageFeatures.js";import"../../browser/model/inlineCompletionsModel.js";import{InlineCompletionsController as u}from"../../browser/controller/inlineCompletionsController.js";import{autorun as R}from"../../../../../base/common/observable.js";import{setUnexpectedErrorHandler as z}from"../../../../../base/common/errors.js";import{IAccessibilitySignalService as H}from"../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js";import{ensureNoDisposablesAreLeakedInTestSuite as U}from"../../../../../base/test/common/utils.js";suite("Suggest Widget Model",()=>{U(),setup(()=>{z(function(r){throw r})}),test.skip("Active",async()=>{await f("",{fakeClock:!0,provider:v},async({editor:r,editorViewModel:o,context:t,model:n})=>{let i;const e=new Array,p=R(d=>{const m=!!n.selectedSuggestItem.read(d);i!==m&&(i=m,e.push(i))});t.keyboardType("h");const g=r.getContribution(c.ID);g.triggerSuggest(),await s(1e3),l.deepStrictEqual(e.splice(0),[!1,!0]),t.keyboardType("."),await s(1e3),l.deepStrictEqual(e.splice(0),[]),g.cancelSuggestWidget(),await s(1e3),l.deepStrictEqual(e.splice(0),[!1]),p.dispose()})}),test("Ghost Text",async()=>{await f("",{fakeClock:!0,provider:v,suggest:{preview:!0}},async({editor:r,editorViewModel:o,context:t,model:n})=>{t.keyboardType("h");const i=r.getContribution(c.ID);i.triggerSuggest(),await s(1e3),l.deepStrictEqual(t.getAndClearViewStates(),["","h[ello]"]),t.keyboardType("."),await s(1e3),l.deepStrictEqual(t.getAndClearViewStates(),["h","hello.[hello]"]),i.cancelSuggestWidget(),await s(1e3),l.deepStrictEqual(t.getAndClearViewStates(),["hello."])})})});const v={_debugDisplayName:"test",triggerCharacters:["."],async provideCompletionItems(r,o){const t=r.getWordAtPosition(o),n=t?{startLineNumber:1,startColumn:t.startColumn,endLineNumber:1,endColumn:t.endColumn}:y.fromPositions(o);return{suggestions:[{insertText:"hello",kind:b.Text,label:"hello",range:n,commitCharacters:["."]}]}}};async function f(r,o,t){await w({useFakeTimers:o.fakeClock},async()=>{const n=new I;try{const i=new A([N,q],[D,new L],[V,n.add(new P)],[x,new W],[k,new class extends a(){computeWordRanges(){return Promise.resolve({})}}],[T,new class extends a(){memorize(){}select(){return 0}}],[E,new class extends a(){createMenu(){return new class extends a(){onDidChange=C.None;dispose(){}}}}],[F,new class extends a(){}],[G,new class extends a(){}],[H,{playSignal:async()=>{},isSoundEnabled(e){return!1}}]);if(o.provider){const e=new K;i.set(O,e),n.add(e.completionProvider.register({pattern:"**"},o.provider))}await M(r,{...o,serviceCollection:i},async(e,p,g)=>{e.registerAndInstantiateContribution(S.ID,S),e.registerAndInstantiateContribution(c.ID,c),e.registerAndInstantiateContribution(u.ID,u);const d=u.get(e)?.model.get(),m=new h(d,e);await t({editor:e,editorViewModel:p,model:d,context:m}),m.dispose()})}finally{n.dispose()}})}
