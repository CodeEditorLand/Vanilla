{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineCompletions/test/browser/utils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { CoreEditingCommands, CoreNavigationCommands } from '../../../../browser/coreCommands.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { InlineCompletion, InlineCompletionContext, InlineCompletionsProvider } from '../../../../common/languages.js';\nimport { ITestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { InlineCompletionsModel } from '../../browser/model/inlineCompletionsModel.js';\nimport { autorun } from '../../../../../base/common/observable.js';\n\nexport class MockInlineCompletionsProvider implements InlineCompletionsProvider {\n\tprivate returnValue: InlineCompletion[] = [];\n\tprivate delayMs: number = 0;\n\n\tprivate callHistory = new Array<unknown>();\n\tprivate calledTwiceIn50Ms = false;\n\n\tpublic setReturnValue(value: InlineCompletion | undefined, delayMs: number = 0): void {\n\t\tthis.returnValue = value ? [value] : [];\n\t\tthis.delayMs = delayMs;\n\t}\n\n\tpublic setReturnValues(values: InlineCompletion[], delayMs: number = 0): void {\n\t\tthis.returnValue = values;\n\t\tthis.delayMs = delayMs;\n\t}\n\n\tpublic getAndClearCallHistory() {\n\t\tconst history = [...this.callHistory];\n\t\tthis.callHistory = [];\n\t\treturn history;\n\t}\n\n\tpublic assertNotCalledTwiceWithin50ms() {\n\t\tif (this.calledTwiceIn50Ms) {\n\t\t\tthrow new Error('provideInlineCompletions has been called at least twice within 50ms. This should not happen.');\n\t\t}\n\t}\n\n\tprivate lastTimeMs: number | undefined = undefined;\n\n\tasync provideInlineCompletions(model: ITextModel, position: Position, context: InlineCompletionContext, token: CancellationToken) {\n\t\tconst currentTimeMs = new Date().getTime();\n\t\tif (this.lastTimeMs && currentTimeMs - this.lastTimeMs < 50) {\n\t\t\tthis.calledTwiceIn50Ms = true;\n\t\t}\n\t\tthis.lastTimeMs = currentTimeMs;\n\n\t\tthis.callHistory.push({\n\t\t\tposition: position.toString(),\n\t\t\ttriggerKind: context.triggerKind,\n\t\t\ttext: model.getValue()\n\t\t});\n\t\tconst result = new Array<InlineCompletion>();\n\t\tresult.push(...this.returnValue);\n\n\t\tif (this.delayMs > 0) {\n\t\t\tawait timeout(this.delayMs);\n\t\t}\n\n\t\treturn { items: result };\n\t}\n\tfreeInlineCompletions() { }\n\thandleItemDidShow() { }\n}\n\nexport class GhostTextContext extends Disposable {\n\tpublic readonly prettyViewStates = new Array<string | undefined>();\n\tprivate _currentPrettyViewState: string | undefined;\n\tpublic get currentPrettyViewState() {\n\t\treturn this._currentPrettyViewState;\n\t}\n\n\tconstructor(model: InlineCompletionsModel, private readonly editor: ITestCodeEditor) {\n\t\tsuper();\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update */\n\t\t\tconst ghostText = model.primaryGhostText.read(reader);\n\t\t\tlet view: string | undefined;\n\t\t\tif (ghostText) {\n\t\t\t\tview = ghostText.render(this.editor.getValue(), true);\n\t\t\t} else {\n\t\t\t\tview = this.editor.getValue();\n\t\t\t}\n\n\t\t\tif (this._currentPrettyViewState !== view) {\n\t\t\t\tthis.prettyViewStates.push(view);\n\t\t\t}\n\t\t\tthis._currentPrettyViewState = view;\n\t\t}));\n\t}\n\n\tpublic getAndClearViewStates(): (string | undefined)[] {\n\t\tconst arr = [...this.prettyViewStates];\n\t\tthis.prettyViewStates.length = 0;\n\t\treturn arr;\n\t}\n\n\tpublic keyboardType(text: string): void {\n\t\tthis.editor.trigger('keyboard', 'type', { text });\n\t}\n\n\tpublic cursorUp(): void {\n\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic cursorRight(): void {\n\t\tCoreNavigationCommands.CursorRight.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic cursorLeft(): void {\n\t\tCoreNavigationCommands.CursorLeft.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic cursorDown(): void {\n\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic cursorLineEnd(): void {\n\t\tCoreNavigationCommands.CursorLineEnd.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic leftDelete(): void {\n\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, this.editor, null);\n\t}\n}\n\n"],
  "mappings": "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",
  "names": []
}
