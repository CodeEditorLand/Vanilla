{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/peekView/browser/peekView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type { IMouseEvent } from \"../../../../base/browser/mouseEvent.js\";\nimport {\n\tActionBar,\n\tActionsOrientation,\n\ttype IActionBarOptions,\n} from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Color } from \"../../../../base/common/color.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport * as objects from \"../../../../base/common/objects.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport \"./media/peekViewWidget.css\";\nimport * as nls from \"../../../../nls.js\";\nimport { createActionViewItem } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n\tcreateDecorator,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tactiveContrastBorder,\n\tcontrastBorder,\n\teditorForeground,\n\teditorInfoForeground,\n\tregisterColor,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorContributionInstantiation,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../browser/services/codeEditorService.js\";\nimport { EmbeddedCodeEditorWidget } from \"../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport {\n\ttype IOptions,\n\ttype IStyles,\n\tZoneWidget,\n} from \"../../zoneWidget/browser/zoneWidget.js\";\n\nexport const IPeekViewService =\n\tcreateDecorator<IPeekViewService>(\"IPeekViewService\");\nexport interface IPeekViewService {\n\treadonly _serviceBrand: undefined;\n\taddExclusiveWidget(editor: ICodeEditor, widget: PeekViewWidget): void;\n}\n\nregisterSingleton(\n\tIPeekViewService,\n\tclass implements IPeekViewService {\n\t\tdeclare readonly _serviceBrand: undefined;\n\n\t\tprivate readonly _widgets = new Map<\n\t\t\tICodeEditor,\n\t\t\t{ widget: PeekViewWidget; listener: IDisposable }\n\t\t>();\n\n\t\taddExclusiveWidget(editor: ICodeEditor, widget: PeekViewWidget): void {\n\t\t\tconst existing = this._widgets.get(editor);\n\t\t\tif (existing) {\n\t\t\t\texisting.listener.dispose();\n\t\t\t\texisting.widget.dispose();\n\t\t\t}\n\t\t\tconst remove = () => {\n\t\t\t\tconst data = this._widgets.get(editor);\n\t\t\t\tif (data && data.widget === widget) {\n\t\t\t\t\tdata.listener.dispose();\n\t\t\t\t\tthis._widgets.delete(editor);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._widgets.set(editor, {\n\t\t\t\twidget,\n\t\t\t\tlistener: widget.onDidClose(remove),\n\t\t\t});\n\t\t}\n\t},\n\tInstantiationType.Delayed,\n);\n\nexport namespace PeekContext {\n\texport const inPeekEditor = new RawContextKey<boolean>(\n\t\t\"inReferenceSearchEditor\",\n\t\ttrue,\n\t\tnls.localize(\n\t\t\t\"inReferenceSearchEditor\",\n\t\t\t\"Whether the current code editor is embedded inside peek\",\n\t\t),\n\t);\n\texport const notInPeekEditor = inPeekEditor.toNegated();\n}\n\nclass PeekContextController implements IEditorContribution {\n\tstatic readonly ID = \"editor.contrib.referenceController\";\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\t\tPeekContext.inPeekEditor.bindTo(contextKeyService);\n\t\t}\n\t}\n\n\tdispose(): void {}\n}\n\nregisterEditorContribution(\n\tPeekContextController.ID,\n\tPeekContextController,\n\tEditorContributionInstantiation.Eager,\n); // eager because it needs to define a context key\n\nexport function getOuterEditor(accessor: ServicesAccessor): ICodeEditor | null {\n\tconst editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\treturn editor.getParentEditor();\n\t}\n\treturn editor;\n}\n\nexport interface IPeekViewStyles extends IStyles {\n\theaderBackgroundColor?: Color;\n\tprimaryHeadingColor?: Color;\n\tsecondaryHeadingColor?: Color;\n}\n\nexport type IPeekViewOptions = IOptions &\n\tIPeekViewStyles & {\n\t\tsupportOnTitleClick?: boolean;\n\t};\n\nconst defaultOptions: IPeekViewOptions = {\n\theaderBackgroundColor: Color.white,\n\tprimaryHeadingColor: Color.fromHex(\"#333333\"),\n\tsecondaryHeadingColor: Color.fromHex(\"#6c6c6cb3\"),\n};\n\nexport abstract class PeekViewWidget extends ZoneWidget {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidClose = new Emitter<PeekViewWidget>();\n\treadonly onDidClose = this._onDidClose.event;\n\tprivate disposed?: true;\n\n\tprotected _headElement?: HTMLDivElement;\n\tprotected _titleElement?: HTMLDivElement;\n\tprotected _primaryHeading?: HTMLElement;\n\tprotected _secondaryHeading?: HTMLElement;\n\tprotected _metaHeading?: HTMLElement;\n\tprotected _actionbarWidget?: ActionBar;\n\tprotected _bodyElement?: HTMLDivElement;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\toptions: IPeekViewOptions,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper(editor, options);\n\t\tobjects.mixin(this.options, defaultOptions, false);\n\t}\n\n\toverride dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true; // prevent consumers who dispose on onDidClose from looping\n\t\t\tsuper.dispose();\n\t\t\tthis._onDidClose.fire(this);\n\t\t}\n\t}\n\n\toverride style(styles: IPeekViewStyles): void {\n\t\tconst options = <IPeekViewOptions>this.options;\n\t\tif (styles.headerBackgroundColor) {\n\t\t\toptions.headerBackgroundColor = styles.headerBackgroundColor;\n\t\t}\n\t\tif (styles.primaryHeadingColor) {\n\t\t\toptions.primaryHeadingColor = styles.primaryHeadingColor;\n\t\t}\n\t\tif (styles.secondaryHeadingColor) {\n\t\t\toptions.secondaryHeadingColor = styles.secondaryHeadingColor;\n\t\t}\n\t\tsuper.style(styles);\n\t}\n\n\tprotected override _applyStyles(): void {\n\t\tsuper._applyStyles();\n\t\tconst options = <IPeekViewOptions>this.options;\n\t\tif (this._headElement && options.headerBackgroundColor) {\n\t\t\tthis._headElement.style.backgroundColor =\n\t\t\t\toptions.headerBackgroundColor.toString();\n\t\t}\n\t\tif (this._primaryHeading && options.primaryHeadingColor) {\n\t\t\tthis._primaryHeading.style.color =\n\t\t\t\toptions.primaryHeadingColor.toString();\n\t\t}\n\t\tif (this._secondaryHeading && options.secondaryHeadingColor) {\n\t\t\tthis._secondaryHeading.style.color =\n\t\t\t\toptions.secondaryHeadingColor.toString();\n\t\t}\n\t\tif (this._bodyElement && options.frameColor) {\n\t\t\tthis._bodyElement.style.borderColor = options.frameColor.toString();\n\t\t}\n\t}\n\n\tprotected _fillContainer(container: HTMLElement): void {\n\t\tthis.setCssClass(\"peekview-widget\");\n\n\t\tthis._headElement = dom.$<HTMLDivElement>(\".head\");\n\t\tthis._bodyElement = dom.$<HTMLDivElement>(\".body\");\n\n\t\tthis._fillHead(this._headElement);\n\t\tthis._fillBody(this._bodyElement);\n\n\t\tcontainer.appendChild(this._headElement);\n\t\tcontainer.appendChild(this._bodyElement);\n\t}\n\n\tprotected _fillHead(container: HTMLElement, noCloseAction?: boolean): void {\n\t\tthis._titleElement = dom.$(\".peekview-title\");\n\t\tif ((this.options as IPeekViewOptions).supportOnTitleClick) {\n\t\t\tthis._titleElement.classList.add(\"clickable\");\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tthis._titleElement,\n\t\t\t\t\"click\",\n\t\t\t\t(event) => this._onTitleClick(event),\n\t\t\t);\n\t\t}\n\t\tdom.append(this._headElement!, this._titleElement);\n\n\t\tthis._fillTitleIcon(this._titleElement);\n\t\tthis._primaryHeading = dom.$(\"span.filename\");\n\t\tthis._secondaryHeading = dom.$(\"span.dirname\");\n\t\tthis._metaHeading = dom.$(\"span.meta\");\n\t\tdom.append(\n\t\t\tthis._titleElement,\n\t\t\tthis._primaryHeading,\n\t\t\tthis._secondaryHeading,\n\t\t\tthis._metaHeading,\n\t\t);\n\n\t\tconst actionsContainer = dom.$(\".peekview-actions\");\n\t\tdom.append(this._headElement!, actionsContainer);\n\n\t\tconst actionBarOptions = this._getActionBarOptions();\n\t\tthis._actionbarWidget = new ActionBar(\n\t\t\tactionsContainer,\n\t\t\tactionBarOptions,\n\t\t);\n\t\tthis._disposables.add(this._actionbarWidget);\n\n\t\tif (!noCloseAction) {\n\t\t\tthis._actionbarWidget.push(\n\t\t\t\tnew Action(\n\t\t\t\t\t\"peekview.close\",\n\t\t\t\t\tnls.localize(\"label.close\", \"Close\"),\n\t\t\t\t\tThemeIcon.asClassName(Codicon.close),\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.dispose();\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t\t{ label: false, icon: true },\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected _fillTitleIcon(container: HTMLElement): void {}\n\n\tprotected _getActionBarOptions(): IActionBarOptions {\n\t\treturn {\n\t\t\tactionViewItemProvider: createActionViewItem.bind(\n\t\t\t\tundefined,\n\t\t\t\tthis.instantiationService,\n\t\t\t),\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t};\n\t}\n\n\tprotected _onTitleClick(event: IMouseEvent): void {\n\t\t// implement me if supportOnTitleClick option is set\n\t}\n\n\tsetTitle(primaryHeading: string, secondaryHeading?: string): void {\n\t\tif (this._primaryHeading && this._secondaryHeading) {\n\t\t\tthis._primaryHeading.innerText = primaryHeading;\n\t\t\tthis._primaryHeading.setAttribute(\"title\", primaryHeading);\n\t\t\tif (secondaryHeading) {\n\t\t\t\tthis._secondaryHeading.innerText = secondaryHeading;\n\t\t\t} else {\n\t\t\t\tdom.clearNode(this._secondaryHeading);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetMetaTitle(value: string): void {\n\t\tif (this._metaHeading) {\n\t\t\tif (value) {\n\t\t\t\tthis._metaHeading.innerText = value;\n\t\t\t\tdom.show(this._metaHeading);\n\t\t\t} else {\n\t\t\t\tdom.hide(this._metaHeading);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected abstract _fillBody(container: HTMLElement): void;\n\n\tprotected override _doLayout(\n\t\theightInPixel: number,\n\t\twidthInPixel: number,\n\t): void {\n\t\tif (!this._isShowing && heightInPixel < 0) {\n\t\t\t// Looks like the view zone got folded away!\n\t\t\tthis.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tconst headHeight = Math.ceil(\n\t\t\tthis.editor.getOption(EditorOption.lineHeight) * 1.2,\n\t\t);\n\t\tconst bodyHeight = Math.round(\n\t\t\theightInPixel - (headHeight + 2) /* the border-top/bottom width*/,\n\t\t);\n\n\t\tthis._doLayoutHead(headHeight, widthInPixel);\n\t\tthis._doLayoutBody(bodyHeight, widthInPixel);\n\t}\n\n\tprotected _doLayoutHead(heightInPixel: number, widthInPixel: number): void {\n\t\tif (this._headElement) {\n\t\t\tthis._headElement.style.height = `${heightInPixel}px`;\n\t\t\tthis._headElement.style.lineHeight = this._headElement.style.height;\n\t\t}\n\t}\n\n\tprotected _doLayoutBody(heightInPixel: number, widthInPixel: number): void {\n\t\tif (this._bodyElement) {\n\t\t\tthis._bodyElement.style.height = `${heightInPixel}px`;\n\t\t}\n\t}\n}\n\nexport const peekViewTitleBackground = registerColor(\n\t\"peekViewTitle.background\",\n\t{\n\t\tdark: \"#252526\",\n\t\tlight: \"#F3F3F3\",\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\n\t\t\"peekViewTitleBackground\",\n\t\t\"Background color of the peek view title area.\",\n\t),\n);\nexport const peekViewTitleForeground = registerColor(\n\t\"peekViewTitleLabel.foreground\",\n\t{\n\t\tdark: Color.white,\n\t\tlight: Color.black,\n\t\thcDark: Color.white,\n\t\thcLight: editorForeground,\n\t},\n\tnls.localize(\"peekViewTitleForeground\", \"Color of the peek view title.\"),\n);\nexport const peekViewTitleInfoForeground = registerColor(\n\t\"peekViewTitleDescription.foreground\",\n\t{\n\t\tdark: \"#ccccccb3\",\n\t\tlight: \"#616161\",\n\t\thcDark: \"#FFFFFF99\",\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\n\t\t\"peekViewTitleInfoForeground\",\n\t\t\"Color of the peek view title info.\",\n\t),\n);\nexport const peekViewBorder = registerColor(\n\t\"peekView.border\",\n\t{\n\t\tdark: editorInfoForeground,\n\t\tlight: editorInfoForeground,\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\"peekViewBorder\", \"Color of the peek view borders and arrow.\"),\n);\n\nexport const peekViewResultsBackground = registerColor(\n\t\"peekViewResult.background\",\n\t{\n\t\tdark: \"#252526\",\n\t\tlight: \"#F3F3F3\",\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\n\t\t\"peekViewResultsBackground\",\n\t\t\"Background color of the peek view result list.\",\n\t),\n);\nexport const peekViewResultsMatchForeground = registerColor(\n\t\"peekViewResult.lineForeground\",\n\t{\n\t\tdark: \"#bbbbbb\",\n\t\tlight: \"#646465\",\n\t\thcDark: Color.white,\n\t\thcLight: editorForeground,\n\t},\n\tnls.localize(\n\t\t\"peekViewResultsMatchForeground\",\n\t\t\"Foreground color for line nodes in the peek view result list.\",\n\t),\n);\nexport const peekViewResultsFileForeground = registerColor(\n\t\"peekViewResult.fileForeground\",\n\t{\n\t\tdark: Color.white,\n\t\tlight: \"#1E1E1E\",\n\t\thcDark: Color.white,\n\t\thcLight: editorForeground,\n\t},\n\tnls.localize(\n\t\t\"peekViewResultsFileForeground\",\n\t\t\"Foreground color for file nodes in the peek view result list.\",\n\t),\n);\nexport const peekViewResultsSelectionBackground = registerColor(\n\t\"peekViewResult.selectionBackground\",\n\t{ dark: \"#3399ff33\", light: \"#3399ff33\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"peekViewResultsSelectionBackground\",\n\t\t\"Background color of the selected entry in the peek view result list.\",\n\t),\n);\nexport const peekViewResultsSelectionForeground = registerColor(\n\t\"peekViewResult.selectionForeground\",\n\t{\n\t\tdark: Color.white,\n\t\tlight: \"#6C6C6C\",\n\t\thcDark: Color.white,\n\t\thcLight: editorForeground,\n\t},\n\tnls.localize(\n\t\t\"peekViewResultsSelectionForeground\",\n\t\t\"Foreground color of the selected entry in the peek view result list.\",\n\t),\n);\nexport const peekViewEditorBackground = registerColor(\n\t\"peekViewEditor.background\",\n\t{\n\t\tdark: \"#001F33\",\n\t\tlight: \"#F2F8FC\",\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\n\t\t\"peekViewEditorBackground\",\n\t\t\"Background color of the peek view editor.\",\n\t),\n);\nexport const peekViewEditorGutterBackground = registerColor(\n\t\"peekViewEditorGutter.background\",\n\tpeekViewEditorBackground,\n\tnls.localize(\n\t\t\"peekViewEditorGutterBackground\",\n\t\t\"Background color of the gutter in the peek view editor.\",\n\t),\n);\nexport const peekViewEditorStickyScrollBackground = registerColor(\n\t\"peekViewEditorStickyScroll.background\",\n\tpeekViewEditorBackground,\n\tnls.localize(\n\t\t\"peekViewEditorStickScrollBackground\",\n\t\t\"Background color of sticky scroll in the peek view editor.\",\n\t),\n);\n\nexport const peekViewResultsMatchHighlight = registerColor(\n\t\"peekViewResult.matchHighlightBackground\",\n\t{ dark: \"#ea5c004d\", light: \"#ea5c004d\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"peekViewResultsMatchHighlight\",\n\t\t\"Match highlight color in the peek view result list.\",\n\t),\n);\nexport const peekViewEditorMatchHighlight = registerColor(\n\t\"peekViewEditor.matchHighlightBackground\",\n\t{ dark: \"#ff8f0099\", light: \"#f5d802de\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"peekViewEditorMatchHighlight\",\n\t\t\"Match highlight color in the peek view editor.\",\n\t),\n);\nexport const peekViewEditorMatchHighlightBorder = registerColor(\n\t\"peekViewEditor.matchHighlightBorder\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: activeContrastBorder,\n\t\thcLight: activeContrastBorder,\n\t},\n\tnls.localize(\n\t\t\"peekViewEditorMatchHighlightBorder\",\n\t\t\"Match highlight border in the peek view editor.\",\n\t),\n);\n"],
  "mappings": "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",
  "names": ["PeekContext"]
}
