{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/peekView/browser/peekView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { IMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { ActionBar, ActionsOrientation, IActionBarOptions } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport * as objects from '../../../../base/common/objects.js';\nimport './media/peekViewWidget.css';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { IOptions, IStyles, ZoneWidget } from '../../zoneWidget/browser/zoneWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { activeContrastBorder, contrastBorder, editorForeground, editorInfoForeground, registerColor } from '../../../../platform/theme/common/colorRegistry.js';\n\nexport const IPeekViewService = createDecorator<IPeekViewService>('IPeekViewService');\nexport interface IPeekViewService {\n\treadonly _serviceBrand: undefined;\n\taddExclusiveWidget(editor: ICodeEditor, widget: PeekViewWidget): void;\n}\n\nregisterSingleton(IPeekViewService, class implements IPeekViewService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _widgets = new Map<ICodeEditor, { widget: PeekViewWidget; listener: IDisposable }>();\n\n\taddExclusiveWidget(editor: ICodeEditor, widget: PeekViewWidget): void {\n\t\tconst existing = this._widgets.get(editor);\n\t\tif (existing) {\n\t\t\texisting.listener.dispose();\n\t\t\texisting.widget.dispose();\n\t\t}\n\t\tconst remove = () => {\n\t\t\tconst data = this._widgets.get(editor);\n\t\t\tif (data && data.widget === widget) {\n\t\t\t\tdata.listener.dispose();\n\t\t\t\tthis._widgets.delete(editor);\n\t\t\t}\n\t\t};\n\t\tthis._widgets.set(editor, { widget, listener: widget.onDidClose(remove) });\n\t}\n}, InstantiationType.Delayed);\n\nexport namespace PeekContext {\n\texport const inPeekEditor = new RawContextKey<boolean>('inReferenceSearchEditor', true, nls.localize('inReferenceSearchEditor', \"Whether the current code editor is embedded inside peek\"));\n\texport const notInPeekEditor = inPeekEditor.toNegated();\n}\n\nclass PeekContextController implements IEditorContribution {\n\n\tstatic readonly ID = 'editor.contrib.referenceController';\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\t\tPeekContext.inPeekEditor.bindTo(contextKeyService);\n\t\t}\n\t}\n\n\tdispose(): void { }\n}\n\nregisterEditorContribution(PeekContextController.ID, PeekContextController, EditorContributionInstantiation.Eager); // eager because it needs to define a context key\n\nexport function getOuterEditor(accessor: ServicesAccessor): ICodeEditor | null {\n\tconst editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\treturn editor.getParentEditor();\n\t}\n\treturn editor;\n}\n\nexport interface IPeekViewStyles extends IStyles {\n\theaderBackgroundColor?: Color;\n\tprimaryHeadingColor?: Color;\n\tsecondaryHeadingColor?: Color;\n}\n\nexport type IPeekViewOptions = IOptions & IPeekViewStyles & {\n\tsupportOnTitleClick?: boolean;\n};\n\nconst defaultOptions: IPeekViewOptions = {\n\theaderBackgroundColor: Color.white,\n\tprimaryHeadingColor: Color.fromHex('#333333'),\n\tsecondaryHeadingColor: Color.fromHex('#6c6c6cb3')\n};\n\nexport abstract class PeekViewWidget extends ZoneWidget {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidClose = new Emitter<PeekViewWidget>();\n\treadonly onDidClose = this._onDidClose.event;\n\tprivate disposed?: true;\n\n\tprotected _headElement?: HTMLDivElement;\n\tprotected _titleElement?: HTMLDivElement;\n\tprotected _primaryHeading?: HTMLElement;\n\tprotected _secondaryHeading?: HTMLElement;\n\tprotected _metaHeading?: HTMLElement;\n\tprotected _actionbarWidget?: ActionBar;\n\tprotected _bodyElement?: HTMLDivElement;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\toptions: IPeekViewOptions,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper(editor, options);\n\t\tobjects.mixin(this.options, defaultOptions, false);\n\t}\n\n\toverride dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true; // prevent consumers who dispose on onDidClose from looping\n\t\t\tsuper.dispose();\n\t\t\tthis._onDidClose.fire(this);\n\t\t}\n\t}\n\n\toverride style(styles: IPeekViewStyles): void {\n\t\tconst options = <IPeekViewOptions>this.options;\n\t\tif (styles.headerBackgroundColor) {\n\t\t\toptions.headerBackgroundColor = styles.headerBackgroundColor;\n\t\t}\n\t\tif (styles.primaryHeadingColor) {\n\t\t\toptions.primaryHeadingColor = styles.primaryHeadingColor;\n\t\t}\n\t\tif (styles.secondaryHeadingColor) {\n\t\t\toptions.secondaryHeadingColor = styles.secondaryHeadingColor;\n\t\t}\n\t\tsuper.style(styles);\n\t}\n\n\tprotected override _applyStyles(): void {\n\t\tsuper._applyStyles();\n\t\tconst options = <IPeekViewOptions>this.options;\n\t\tif (this._headElement && options.headerBackgroundColor) {\n\t\t\tthis._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\n\t\t}\n\t\tif (this._primaryHeading && options.primaryHeadingColor) {\n\t\t\tthis._primaryHeading.style.color = options.primaryHeadingColor.toString();\n\t\t}\n\t\tif (this._secondaryHeading && options.secondaryHeadingColor) {\n\t\t\tthis._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\n\t\t}\n\t\tif (this._bodyElement && options.frameColor) {\n\t\t\tthis._bodyElement.style.borderColor = options.frameColor.toString();\n\t\t}\n\t}\n\n\tprotected _fillContainer(container: HTMLElement): void {\n\t\tthis.setCssClass('peekview-widget');\n\n\t\tthis._headElement = dom.$<HTMLDivElement>('.head');\n\t\tthis._bodyElement = dom.$<HTMLDivElement>('.body');\n\n\t\tthis._fillHead(this._headElement);\n\t\tthis._fillBody(this._bodyElement);\n\n\t\tcontainer.appendChild(this._headElement);\n\t\tcontainer.appendChild(this._bodyElement);\n\t}\n\n\tprotected _fillHead(container: HTMLElement, noCloseAction?: boolean): void {\n\t\tthis._titleElement = dom.$('.peekview-title');\n\t\tif ((this.options as IPeekViewOptions).supportOnTitleClick) {\n\t\t\tthis._titleElement.classList.add('clickable');\n\t\t\tdom.addStandardDisposableListener(this._titleElement, 'click', event => this._onTitleClick(event));\n\t\t}\n\t\tdom.append(this._headElement!, this._titleElement);\n\n\t\tthis._fillTitleIcon(this._titleElement);\n\t\tthis._primaryHeading = dom.$('span.filename');\n\t\tthis._secondaryHeading = dom.$('span.dirname');\n\t\tthis._metaHeading = dom.$('span.meta');\n\t\tdom.append(this._titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);\n\n\t\tconst actionsContainer = dom.$('.peekview-actions');\n\t\tdom.append(this._headElement!, actionsContainer);\n\n\t\tconst actionBarOptions = this._getActionBarOptions();\n\t\tthis._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\n\t\tthis._disposables.add(this._actionbarWidget);\n\n\t\tif (!noCloseAction) {\n\t\t\tthis._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), ThemeIcon.asClassName(Codicon.close), true, () => {\n\t\t\t\tthis.dispose();\n\t\t\t\treturn Promise.resolve();\n\t\t\t}), { label: false, icon: true });\n\t\t}\n\t}\n\n\tprotected _fillTitleIcon(container: HTMLElement): void {\n\t}\n\n\tprotected _getActionBarOptions(): IActionBarOptions {\n\t\treturn {\n\t\t\tactionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService),\n\t\t\torientation: ActionsOrientation.HORIZONTAL\n\t\t};\n\t}\n\n\tprotected _onTitleClick(event: IMouseEvent): void {\n\t\t// implement me if supportOnTitleClick option is set\n\t}\n\n\tsetTitle(primaryHeading: string, secondaryHeading?: string): void {\n\t\tif (this._primaryHeading && this._secondaryHeading) {\n\t\t\tthis._primaryHeading.innerText = primaryHeading;\n\t\t\tthis._primaryHeading.setAttribute('title', primaryHeading);\n\t\t\tif (secondaryHeading) {\n\t\t\t\tthis._secondaryHeading.innerText = secondaryHeading;\n\t\t\t} else {\n\t\t\t\tdom.clearNode(this._secondaryHeading);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetMetaTitle(value: string): void {\n\t\tif (this._metaHeading) {\n\t\t\tif (value) {\n\t\t\t\tthis._metaHeading.innerText = value;\n\t\t\t\tdom.show(this._metaHeading);\n\t\t\t} else {\n\t\t\t\tdom.hide(this._metaHeading);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected abstract _fillBody(container: HTMLElement): void;\n\n\tprotected override _doLayout(heightInPixel: number, widthInPixel: number): void {\n\n\t\tif (!this._isShowing && heightInPixel < 0) {\n\t\t\t// Looks like the view zone got folded away!\n\t\t\tthis.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tconst headHeight = Math.ceil(this.editor.getOption(EditorOption.lineHeight) * 1.2);\n\t\tconst bodyHeight = Math.round(heightInPixel - (headHeight + 2 /* the border-top/bottom width*/));\n\n\t\tthis._doLayoutHead(headHeight, widthInPixel);\n\t\tthis._doLayoutBody(bodyHeight, widthInPixel);\n\t}\n\n\tprotected _doLayoutHead(heightInPixel: number, widthInPixel: number): void {\n\t\tif (this._headElement) {\n\t\t\tthis._headElement.style.height = `${heightInPixel}px`;\n\t\t\tthis._headElement.style.lineHeight = this._headElement.style.height;\n\t\t}\n\t}\n\n\tprotected _doLayoutBody(heightInPixel: number, widthInPixel: number): void {\n\t\tif (this._bodyElement) {\n\t\t\tthis._bodyElement.style.height = `${heightInPixel}px`;\n\t\t}\n\t}\n}\n\n\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', { dark: '#252526', light: '#F3F3F3', hcDark: Color.black, hcLight: Color.white }, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', { dark: Color.white, light: Color.black, hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', { dark: '#ccccccb3', light: '#616161', hcDark: '#FFFFFF99', hcLight: '#292929' }, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\nexport const peekViewBorder = registerColor('peekView.border', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\n\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', { dark: '#252526', light: '#F3F3F3', hcDark: Color.black, hcLight: Color.white }, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', { dark: '#bbbbbb', light: '#646465', hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', { dark: Color.white, light: '#1E1E1E', hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', { dark: '#3399ff33', light: '#3399ff33', hcDark: null, hcLight: null }, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', { dark: Color.white, light: '#6C6C6C', hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', { dark: '#001F33', light: '#F2F8FC', hcDark: Color.black, hcLight: Color.white }, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', peekViewEditorBackground, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\nexport const peekViewEditorStickyScrollBackground = registerColor('peekViewEditorStickyScroll.background', peekViewEditorBackground, nls.localize('peekViewEditorStickScrollBackground', 'Background color of sticky scroll in the peek view editor.'));\n\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', { dark: '#ea5c004d', light: '#ea5c004d', hcDark: null, hcLight: null }, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', { dark: '#ff8f0099', light: '#f5d802de', hcDark: null, hcLight: null }, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\n"],
  "mappings": "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",
  "names": ["PeekContext"]
}
