{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/readOnlyMessage/browser/contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorContributionInstantiation,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { MessageController } from \"../../message/browser/messageController.js\";\n\nexport class ReadOnlyMessageController\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.contrib.readOnlyMessageController\";\n\n\tconstructor(private readonly editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tthis.editor.onDidAttemptReadOnlyEdit(() =>\n\t\t\t\tthis._onDidAttemptReadOnlyEdit(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _onDidAttemptReadOnlyEdit(): void {\n\t\tconst messageController = MessageController.get(this.editor);\n\t\tif (messageController && this.editor.hasModel()) {\n\t\t\tlet message = this.editor\n\t\t\t\t.getOptions()\n\t\t\t\t.get(EditorOption.readOnlyMessage);\n\t\t\tif (!message) {\n\t\t\t\tif (this.editor.isSimpleWidget) {\n\t\t\t\t\tmessage = new MarkdownString(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"editor.simple.readonly\",\n\t\t\t\t\t\t\t\"Cannot edit in read-only input\",\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmessage = new MarkdownString(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"editor.readonly\",\n\t\t\t\t\t\t\t\"Cannot edit in read-only editor\",\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmessageController.showMessage(message, this.editor.getPosition());\n\t\t}\n\t}\n}\n\nregisterEditorContribution(\n\tReadOnlyMessageController.ID,\n\tReadOnlyMessageController,\n\tEditorContributionInstantiation.BeforeFirstInteraction,\n);\n"],
  "mappings": ";;AAKA,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,YAAY,SAAS;AAErB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,oBAAoB;AAE7B,SAAS,yBAAyB;AAE3B,MAAM,kCACJ,WAET;AAAA,EAGC,YAA6B,QAAqB;AACjD,UAAM;AADsB;AAE5B,SAAK;AAAA,MACJ,KAAK,OAAO;AAAA,QAAyB,MACpC,KAAK,0BAA0B;AAAA,MAChC;AAAA,IACD;AAAA,EACD;AAAA,EA9BD,OAoBA;AAAA;AAAA;AAAA,EACC,OAAuB,KAAK;AAAA,EAWpB,4BAAkC;AACzC,UAAM,oBAAoB,kBAAkB,IAAI,KAAK,MAAM;AAC3D,QAAI,qBAAqB,KAAK,OAAO,SAAS,GAAG;AAChD,UAAI,UAAU,KAAK,OACjB,WAAW,EACX,IAAI,aAAa,eAAe;AAClC,UAAI,CAAC,SAAS;AACb,YAAI,KAAK,OAAO,gBAAgB;AAC/B,oBAAU,IAAI;AAAA,YACb,IAAI;AAAA,cACH;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAAA,QACD,OAAO;AACN,oBAAU,IAAI;AAAA,YACb,IAAI;AAAA,cACH;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAEA,wBAAkB,YAAY,SAAS,KAAK,OAAO,YAAY,CAAC;AAAA,IACjE;AAAA,EACD;AACD;AAEA;AAAA,EACC,0BAA0B;AAAA,EAC1B;AAAA,EACA,gCAAgC;AACjC;",
  "names": []
}
