{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/wordPartOperations/browser/wordPartOperations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { DeleteWordContext, WordNavigationType, WordPartOperations } from '../../../common/cursor/cursorWordOperations.js';\nimport { WordCharacterClassifier } from '../../../common/core/wordCharacterClassifier.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { DeleteWordCommand, MoveWordCommand } from '../../wordOperations/browser/wordOperations.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\n\nexport class DeleteWordPartLeft extends DeleteWordCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'deleteWordPartLeft',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.Backspace },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range {\n\t\tconst r = WordPartOperations.deleteWordPartLeft(ctx);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\t\treturn new Range(1, 1, 1, 1);\n\t}\n}\n\nexport class DeleteWordPartRight extends DeleteWordCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'deleteWordPartRight',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.Delete },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range {\n\t\tconst r = WordPartOperations.deleteWordPartRight(ctx);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\t\tconst lineCount = ctx.model.getLineCount();\n\t\tconst maxColumn = ctx.model.getLineMaxColumn(lineCount);\n\t\treturn new Range(lineCount, maxColumn, lineCount, maxColumn);\n\t}\n}\n\nexport class WordPartLeftCommand extends MoveWordCommand {\n\tprotected _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType, hasMulticursor: boolean): Position {\n\t\treturn WordPartOperations.moveWordPartLeft(wordSeparators, model, position, hasMulticursor);\n\t}\n}\nexport class CursorWordPartLeft extends WordPartLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordPartLeft',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.LeftArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\n\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordPartLeftSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyMod.Shift | KeyCode.LeftArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\n\nexport class WordPartRightCommand extends MoveWordCommand {\n\tprotected _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType, hasMulticursor: boolean): Position {\n\t\treturn WordPartOperations.moveWordPartRight(wordSeparators, model, position);\n\t}\n}\nexport class CursorWordPartRight extends WordPartRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordPartRight',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.RightArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordPartRightSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyMod.Shift | KeyCode.RightArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\n\nregisterEditorCommand(new DeleteWordPartLeft());\nregisterEditorCommand(new DeleteWordPartRight());\nregisterEditorCommand(new CursorWordPartLeft());\nregisterEditorCommand(new CursorWordPartLeftSelect());\nregisterEditorCommand(new CursorWordPartRight());\nregisterEditorCommand(new CursorWordPartRightSelect());\n"],
  "mappings": "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",
  "names": []
}
