{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/parameterHints/browser/parameterHintsModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancelablePromise,\n\tDelayer,\n\tcreateCancelablePromise,\n} from \"../../../../base/common/async.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { CharacterSet } from \"../../../common/core/characterClassifier.js\";\nimport type { ICursorSelectionChangedEvent } from \"../../../common/cursorEvents.js\";\nimport type { LanguageFeatureRegistry } from \"../../../common/languageFeatureRegistry.js\";\nimport * as languages from \"../../../common/languages.js\";\nimport { provideSignatureHelp } from \"./provideSignatureHelp.js\";\n\nexport interface TriggerContext {\n\treadonly triggerKind: languages.SignatureHelpTriggerKind;\n\treadonly triggerCharacter?: string;\n}\n\nnamespace ParameterHintState {\n\texport enum Type {\n\t\tDefault = 0,\n\t\tActive = 1,\n\t\tPending = 2,\n\t}\n\n\texport const Default = { type: Type.Default } as const;\n\n\texport class Pending {\n\t\treadonly type = Type.Pending;\n\t\tconstructor(\n\t\t\treadonly request: CancelablePromise<\n\t\t\t\tlanguages.SignatureHelpResult | undefined | null\n\t\t\t>,\n\t\t\treadonly previouslyActiveHints: languages.SignatureHelp | undefined,\n\t\t) {}\n\t}\n\n\texport class Active {\n\t\treadonly type = Type.Active;\n\t\tconstructor(readonly hints: languages.SignatureHelp) {}\n\t}\n\n\texport type State = typeof Default | Pending | Active;\n}\n\nexport class ParameterHintsModel extends Disposable {\n\tprivate static readonly DEFAULT_DELAY = 120; // ms\n\n\tprivate readonly _onChangedHints = this._register(\n\t\tnew Emitter<languages.SignatureHelp | undefined>(),\n\t);\n\tpublic readonly onChangedHints = this._onChangedHints.event;\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate readonly providers: LanguageFeatureRegistry<languages.SignatureHelpProvider>;\n\n\tprivate triggerOnType = false;\n\tprivate _state: ParameterHintState.State = ParameterHintState.Default;\n\tprivate _pendingTriggers: TriggerContext[] = [];\n\n\tprivate readonly _lastSignatureHelpResult = this._register(\n\t\tnew MutableDisposable<languages.SignatureHelpResult>(),\n\t);\n\tprivate readonly triggerChars = new CharacterSet();\n\tprivate readonly retriggerChars = new CharacterSet();\n\n\tprivate readonly throttledDelayer: Delayer<boolean>;\n\tprivate triggerId = 0;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tproviders: LanguageFeatureRegistry<languages.SignatureHelpProvider>,\n\t\tdelay: number = ParameterHintsModel.DEFAULT_DELAY,\n\t) {\n\t\tsuper();\n\n\t\tthis.editor = editor;\n\t\tthis.providers = providers;\n\n\t\tthis.throttledDelayer = new Delayer(delay);\n\n\t\tthis._register(this.editor.onDidBlurEditorWidget(() => this.cancel()));\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeConfiguration(() =>\n\t\t\t\tthis.onEditorConfigurationChange(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeModel((e) => this.onModelChanged()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeModelLanguage((_) => this.onModelChanged()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeCursorSelection((e) =>\n\t\t\t\tthis.onCursorChange(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeModelContent((e) =>\n\t\t\t\tthis.onModelContentChange(),\n\t\t\t),\n\t\t);\n\t\tthis._register(this.providers.onDidChange(this.onModelChanged, this));\n\t\tthis._register(this.editor.onDidType((text) => this.onDidType(text)));\n\n\t\tthis.onEditorConfigurationChange();\n\t\tthis.onModelChanged();\n\t}\n\n\tprivate get state() {\n\t\treturn this._state;\n\t}\n\tprivate set state(value: ParameterHintState.State) {\n\t\tif (this._state.type === ParameterHintState.Type.Pending) {\n\t\t\tthis._state.request.cancel();\n\t\t}\n\t\tthis._state = value;\n\t}\n\n\tcancel(silent = false): void {\n\t\tthis.state = ParameterHintState.Default;\n\n\t\tthis.throttledDelayer.cancel();\n\n\t\tif (!silent) {\n\t\t\tthis._onChangedHints.fire(undefined);\n\t\t}\n\t}\n\n\ttrigger(context: TriggerContext, delay?: number): void {\n\t\tconst model = this.editor.getModel();\n\t\tif (!model || !this.providers.has(model)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst triggerId = ++this.triggerId;\n\n\t\tthis._pendingTriggers.push(context);\n\t\tthis.throttledDelayer\n\t\t\t.trigger(() => {\n\t\t\t\treturn this.doTrigger(triggerId);\n\t\t\t}, delay)\n\t\t\t.catch(onUnexpectedError);\n\t}\n\n\tpublic next(): void {\n\t\tif (this.state.type !== ParameterHintState.Type.Active) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst length = this.state.hints.signatures.length;\n\t\tconst activeSignature = this.state.hints.activeSignature;\n\t\tconst last = activeSignature % length === length - 1;\n\t\tconst cycle = this.editor.getOption(EditorOption.parameterHints).cycle;\n\n\t\t// If there is only one signature, or we're on last signature of list\n\t\tif ((length < 2 || last) && !cycle) {\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateActiveSignature(last && cycle ? 0 : activeSignature + 1);\n\t}\n\n\tpublic previous(): void {\n\t\tif (this.state.type !== ParameterHintState.Type.Active) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst length = this.state.hints.signatures.length;\n\t\tconst activeSignature = this.state.hints.activeSignature;\n\t\tconst first = activeSignature === 0;\n\t\tconst cycle = this.editor.getOption(EditorOption.parameterHints).cycle;\n\n\t\t// If there is only one signature, or we're on first signature of list\n\t\tif ((length < 2 || first) && !cycle) {\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateActiveSignature(\n\t\t\tfirst && cycle ? length - 1 : activeSignature - 1,\n\t\t);\n\t}\n\n\tprivate updateActiveSignature(activeSignature: number) {\n\t\tif (this.state.type !== ParameterHintState.Type.Active) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state = new ParameterHintState.Active({\n\t\t\t...this.state.hints,\n\t\t\tactiveSignature,\n\t\t});\n\t\tthis._onChangedHints.fire(this.state.hints);\n\t}\n\n\tprivate async doTrigger(triggerId: number): Promise<boolean> {\n\t\tconst isRetrigger =\n\t\t\tthis.state.type === ParameterHintState.Type.Active ||\n\t\t\tthis.state.type === ParameterHintState.Type.Pending;\n\t\tconst activeSignatureHelp = this.getLastActiveHints();\n\t\tthis.cancel(true);\n\n\t\tif (this._pendingTriggers.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst context: TriggerContext =\n\t\t\tthis._pendingTriggers.reduce(mergeTriggerContexts);\n\t\tthis._pendingTriggers = [];\n\n\t\tconst triggerContext = {\n\t\t\ttriggerKind: context.triggerKind,\n\t\t\ttriggerCharacter: context.triggerCharacter,\n\t\t\tisRetrigger: isRetrigger,\n\t\t\tactiveSignatureHelp: activeSignatureHelp,\n\t\t};\n\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tconst position = this.editor.getPosition();\n\n\t\tthis.state = new ParameterHintState.Pending(\n\t\t\tcreateCancelablePromise((token) =>\n\t\t\t\tprovideSignatureHelp(\n\t\t\t\t\tthis.providers,\n\t\t\t\t\tmodel,\n\t\t\t\t\tposition,\n\t\t\t\t\ttriggerContext,\n\t\t\t\t\ttoken,\n\t\t\t\t),\n\t\t\t),\n\t\t\tactiveSignatureHelp,\n\t\t);\n\n\t\ttry {\n\t\t\tconst result = await this.state.request;\n\n\t\t\t// Check that we are still resolving the correct signature help\n\t\t\tif (triggerId !== this.triggerId) {\n\t\t\t\tresult?.dispose();\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!result ||\n\t\t\t\t!result.value.signatures ||\n\t\t\t\tresult.value.signatures.length === 0\n\t\t\t) {\n\t\t\t\tresult?.dispose();\n\t\t\t\tthis._lastSignatureHelpResult.clear();\n\t\t\t\tthis.cancel();\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tthis.state = new ParameterHintState.Active(result.value);\n\t\t\t\tthis._lastSignatureHelpResult.value = result;\n\t\t\t\tthis._onChangedHints.fire(this.state.hints);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (triggerId === this.triggerId) {\n\t\t\t\tthis.state = ParameterHintState.Default;\n\t\t\t}\n\t\t\tonUnexpectedError(error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate getLastActiveHints(): languages.SignatureHelp | undefined {\n\t\tswitch (this.state.type) {\n\t\t\tcase ParameterHintState.Type.Active:\n\t\t\t\treturn this.state.hints;\n\t\t\tcase ParameterHintState.Type.Pending:\n\t\t\t\treturn this.state.previouslyActiveHints;\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate get isTriggered(): boolean {\n\t\treturn (\n\t\t\tthis.state.type === ParameterHintState.Type.Active ||\n\t\t\tthis.state.type === ParameterHintState.Type.Pending ||\n\t\t\tthis.throttledDelayer.isTriggered()\n\t\t);\n\t}\n\n\tprivate onModelChanged(): void {\n\t\tthis.cancel();\n\n\t\tthis.triggerChars.clear();\n\t\tthis.retriggerChars.clear();\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const support of this.providers.ordered(model)) {\n\t\t\tfor (const ch of support.signatureHelpTriggerCharacters || []) {\n\t\t\t\tif (ch.length) {\n\t\t\t\t\tconst charCode = ch.charCodeAt(0);\n\t\t\t\t\tthis.triggerChars.add(charCode);\n\n\t\t\t\t\t// All trigger characters are also considered retrigger characters\n\t\t\t\t\tthis.retriggerChars.add(charCode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const ch of support.signatureHelpRetriggerCharacters || []) {\n\t\t\t\tif (ch.length) {\n\t\t\t\t\tthis.retriggerChars.add(ch.charCodeAt(0));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidType(text: string) {\n\t\tif (!this.triggerOnType) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lastCharIndex = text.length - 1;\n\t\tconst triggerCharCode = text.charCodeAt(lastCharIndex);\n\n\t\tif (\n\t\t\tthis.triggerChars.has(triggerCharCode) ||\n\t\t\t(this.isTriggered && this.retriggerChars.has(triggerCharCode))\n\t\t) {\n\t\t\tthis.trigger({\n\t\t\t\ttriggerKind:\n\t\t\t\t\tlanguages.SignatureHelpTriggerKind.TriggerCharacter,\n\t\t\t\ttriggerCharacter: text.charAt(lastCharIndex),\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onCursorChange(e: ICursorSelectionChangedEvent): void {\n\t\tif (e.source === \"mouse\") {\n\t\t\tthis.cancel();\n\t\t} else if (this.isTriggered) {\n\t\t\tthis.trigger({\n\t\t\t\ttriggerKind: languages.SignatureHelpTriggerKind.ContentChange,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onModelContentChange(): void {\n\t\tif (this.isTriggered) {\n\t\t\tthis.trigger({\n\t\t\t\ttriggerKind: languages.SignatureHelpTriggerKind.ContentChange,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onEditorConfigurationChange(): void {\n\t\tthis.triggerOnType = this.editor.getOption(\n\t\t\tEditorOption.parameterHints,\n\t\t).enabled;\n\n\t\tif (!this.triggerOnType) {\n\t\t\tthis.cancel();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.cancel(true);\n\t\tsuper.dispose();\n\t}\n}\n\nfunction mergeTriggerContexts(\n\tprevious: TriggerContext,\n\tcurrent: TriggerContext,\n) {\n\tswitch (current.triggerKind) {\n\t\tcase languages.SignatureHelpTriggerKind.Invoke:\n\t\t\t// Invoke overrides previous triggers.\n\t\t\treturn current;\n\n\t\tcase languages.SignatureHelpTriggerKind.ContentChange:\n\t\t\t// Ignore content changes triggers\n\t\t\treturn previous;\n\n\t\tcase languages.SignatureHelpTriggerKind.TriggerCharacter:\n\t\tdefault:\n\t\t\treturn current;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ParameterHintState", "Type"]
}
