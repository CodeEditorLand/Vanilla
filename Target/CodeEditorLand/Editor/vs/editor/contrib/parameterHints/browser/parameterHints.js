var C=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var h=(t,r,n,a)=>{for(var i=a>1?void 0:a?f(r,n):r,p=t.length-1,l;p>=0;p--)(l=t[p])&&(i=(a?l(r,n,i):l(i))||i);return a&&i&&C(r,n,i),i},c=(t,r)=>(n,a)=>r(n,a,t);import{KeyCode as e,KeyMod as s}from"../../../../base/common/keyCodes.js";import{Lazy as v}from"../../../../base/common/lazy.js";import{Disposable as E}from"../../../../base/common/lifecycle.js";import*as I from"../../../../nls.js";import{ContextKeyExpr as b}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as x}from"../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as y}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{EditorAction as A,EditorCommand as H,EditorContributionInstantiation as P,registerEditorAction as S,registerEditorCommand as g,registerEditorContribution as k}from"../../../browser/editorExtensions.js";import{EditorContextKeys as d}from"../../../common/editorContextKeys.js";import*as K from"../../../common/languages.js";import{ILanguageFeaturesService as D}from"../../../common/services/languageFeatures.js";import{ParameterHintsModel as T}from"./parameterHintsModel.js";import{ParameterHintsWidget as V}from"./parameterHintsWidget.js";import{Context as m}from"./provideSignatureHelp.js";let o=class extends E{static ID="editor.controller.parameterHints";static get(r){return r.getContribution(o.ID)}editor;model;widget;constructor(r,n,a){super(),this.editor=r,this.model=this._register(new T(r,a.signatureHelpProvider)),this._register(this.model.onChangedHints(i=>{i?(this.widget.value.show(),this.widget.value.render(i)):this.widget.rawValue?.hide()})),this.widget=new v(()=>this._register(n.createInstance(V,this.editor,this.model)))}cancel(){this.model.cancel()}previous(){this.widget.rawValue?.previous()}next(){this.widget.rawValue?.next()}trigger(r){this.model.trigger(r,0)}};o=h([c(1,x),c(2,D)],o);class M extends A{constructor(){super({id:"editor.action.triggerParameterHints",label:I.localize("parameterHints.trigger.label","Trigger Parameter Hints"),alias:"Trigger Parameter Hints",precondition:d.hasSignatureHelpProvider,kbOpts:{kbExpr:d.editorTextFocus,primary:s.CtrlCmd|s.Shift|e.Space,weight:y.EditorContrib}})}run(r,n){o.get(n)?.trigger({triggerKind:K.SignatureHelpTriggerKind.Invoke})}}k(o.ID,o,P.BeforeFirstInteraction),S(M);const u=y.EditorContrib+75,w=H.bindToContribution(o.get);g(new w({id:"closeParameterHints",precondition:m.Visible,handler:t=>t.cancel(),kbOpts:{weight:u,kbExpr:d.focus,primary:e.Escape,secondary:[s.Shift|e.Escape]}})),g(new w({id:"showPrevParameterHint",precondition:b.and(m.Visible,m.MultipleSignatures),handler:t=>t.previous(),kbOpts:{weight:u,kbExpr:d.focus,primary:e.UpArrow,secondary:[s.Alt|e.UpArrow],mac:{primary:e.UpArrow,secondary:[s.Alt|e.UpArrow,s.WinCtrl|e.KeyP]}}})),g(new w({id:"showNextParameterHint",precondition:b.and(m.Visible,m.MultipleSignatures),handler:t=>t.next(),kbOpts:{weight:u,kbExpr:d.focus,primary:e.DownArrow,secondary:[s.Alt|e.DownArrow],mac:{primary:e.DownArrow,secondary:[s.Alt|e.DownArrow,s.WinCtrl|e.KeyN]}}}));export{o as ParameterHintsController,M as TriggerParameterHintsAction};
