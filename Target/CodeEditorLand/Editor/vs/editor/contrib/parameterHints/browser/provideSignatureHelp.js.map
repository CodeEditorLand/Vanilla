{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/parameterHints/browser/provideSignatureHelp.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IPosition, Position } from '../../../common/core/position.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport * as languages from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\n\nexport const Context = {\n\tVisible: new RawContextKey<boolean>('parameterHintsVisible', false),\n\tMultipleSignatures: new RawContextKey<boolean>('parameterHintsMultipleSignatures', false),\n};\n\nexport async function provideSignatureHelp(\n\tregistry: LanguageFeatureRegistry<languages.SignatureHelpProvider>,\n\tmodel: ITextModel,\n\tposition: Position,\n\tcontext: languages.SignatureHelpContext,\n\ttoken: CancellationToken\n): Promise<languages.SignatureHelpResult | undefined> {\n\n\tconst supports = registry.ordered(model);\n\n\tfor (const support of supports) {\n\t\ttry {\n\t\t\tconst result = await support.provideSignatureHelp(model, position, token, context);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tonUnexpectedExternalError(err);\n\t\t}\n\t}\n\treturn undefined;\n}\n\nCommandsRegistry.registerCommand('_executeSignatureHelpProvider', async (accessor, ...args: [URI, IPosition, string?]) => {\n\tconst [uri, position, triggerCharacter] = args;\n\tassertType(URI.isUri(uri));\n\tassertType(Position.isIPosition(position));\n\tassertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\n\tconst ref = await accessor.get(ITextModelService).createModelReference(uri);\n\ttry {\n\n\t\tconst result = await provideSignatureHelp(languageFeaturesService.signatureHelpProvider, ref.object.textEditorModel, Position.lift(position), {\n\t\t\ttriggerKind: languages.SignatureHelpTriggerKind.Invoke,\n\t\t\tisRetrigger: false,\n\t\t\ttriggerCharacter,\n\t\t}, CancellationToken.None);\n\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tsetTimeout(() => result.dispose(), 0);\n\t\treturn result.value;\n\n\t} finally {\n\t\tref.dispose();\n\t}\n});\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,iCAAiC;AAC1C,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,SAAS,WAAW,gBAAgB;AACpC,SAAS,+BAA+B;AACxC,YAAY,eAAe;AAC3B,SAAS,kBAAkB;AAC3B,SAAS,gCAAgC;AACzC,SAAS,yBAAyB;AAClC,SAAS,wBAAwB;AACjC,SAAS,qBAAqB;AAEvB,MAAM,UAAU;AAAA,EACtB,SAAS,IAAI,cAAuB,yBAAyB,KAAK;AAAA,EAClE,oBAAoB,IAAI,cAAuB,oCAAoC,KAAK;AACzF;AAEA,eAAsB,qBACrB,UACA,OACA,UACA,SACA,OACqD;AAErD,QAAM,WAAW,SAAS,QAAQ,KAAK;AAEvC,aAAW,WAAW,UAAU;AAC/B,QAAI;AACH,YAAM,SAAS,MAAM,QAAQ,qBAAqB,OAAO,UAAU,OAAO,OAAO;AACjF,UAAI,QAAQ;AACX,eAAO;AAAA,MACR;AAAA,IACD,SAAS,KAAK;AACb,gCAA0B,GAAG;AAAA,IAC9B;AAAA,EACD;AACA,SAAO;AACR;AArBsB;AAuBtB,iBAAiB,gBAAgB,iCAAiC,OAAO,aAAa,SAAoC;AACzH,QAAM,CAAC,KAAK,UAAU,gBAAgB,IAAI;AAC1C,aAAW,IAAI,MAAM,GAAG,CAAC;AACzB,aAAW,SAAS,YAAY,QAAQ,CAAC;AACzC,aAAW,OAAO,qBAAqB,YAAY,CAAC,gBAAgB;AAEpE,QAAM,0BAA0B,SAAS,IAAI,wBAAwB;AAErE,QAAM,MAAM,MAAM,SAAS,IAAI,iBAAiB,EAAE,qBAAqB,GAAG;AAC1E,MAAI;AAEH,UAAM,SAAS,MAAM,qBAAqB,wBAAwB,uBAAuB,IAAI,OAAO,iBAAiB,SAAS,KAAK,QAAQ,GAAG;AAAA,MAC7I,aAAa,UAAU,yBAAyB;AAAA,MAChD,aAAa;AAAA,MACb;AAAA,IACD,GAAG,kBAAkB,IAAI;AAEzB,QAAI,CAAC,QAAQ;AACZ,aAAO;AAAA,IACR;AAEA,eAAW,MAAM,OAAO,QAAQ,GAAG,CAAC;AACpC,WAAO,OAAO;AAAA,EAEf,UAAE;AACD,QAAI,QAAQ;AAAA,EACb;AACD,CAAC;",
  "names": []
}
