import{CancellationToken as p}from"../../../../../vs/base/common/cancellation.js";import{onUnexpectedExternalError as m}from"../../../../../vs/base/common/errors.js";import{assertType as g}from"../../../../../vs/base/common/types.js";import{URI as f}from"../../../../../vs/base/common/uri.js";import{Position as u}from"../../../../../vs/editor/common/core/position.js";import"../../../../../vs/editor/common/languageFeatureRegistry.js";import*as d from"../../../../../vs/editor/common/languages.js";import"../../../../../vs/editor/common/model.js";import{ILanguageFeaturesService as c}from"../../../../../vs/editor/common/services/languageFeatures.js";import{ITextModelService as x}from"../../../../../vs/editor/common/services/resolverService.js";import{CommandsRegistry as S}from"../../../../../vs/platform/commands/common/commands.js";import{RawContextKey as l}from"../../../../../vs/platform/contextkey/common/contextkey.js";const K={Visible:new l("parameterHintsVisible",!1),MultipleSignatures:new l("parameterHintsMultipleSignatures",!1)};async function y(t,i,o,n,r){const s=t.ordered(i);for(const a of s)try{const e=await a.provideSignatureHelp(i,o,r,n);if(e)return e}catch(e){m(e)}}S.registerCommand("_executeSignatureHelpProvider",async(t,...i)=>{const[o,n,r]=i;g(f.isUri(o)),g(u.isIPosition(n)),g(typeof r=="string"||!r);const s=t.get(c),a=await t.get(x).createModelReference(o);try{const e=await y(s.signatureHelpProvider,a.object.textEditorModel,u.lift(n),{triggerKind:d.SignatureHelpTriggerKind.Invoke,isRetrigger:!1,triggerCharacter:r},p.None);return e?(setTimeout(()=>e.dispose(),0),e.value):void 0}finally{a.dispose()}});export{K as Context,y as provideSignatureHelp};
