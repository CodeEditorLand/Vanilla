{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/parameterHints/browser/parameterHints.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Lazy } from \"../../../../base/common/lazy.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorCommand,\n\tEditorContributionInstantiation,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorCommand,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport * as languages from \"../../../common/languages.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport {\n\tParameterHintsModel,\n\ttype TriggerContext,\n} from \"./parameterHintsModel.js\";\nimport { ParameterHintsWidget } from \"./parameterHintsWidget.js\";\nimport { Context } from \"./provideSignatureHelp.js\";\n\nexport class ParameterHintsController\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.controller.parameterHints\";\n\n\tpublic static get(editor: ICodeEditor): ParameterHintsController | null {\n\t\treturn editor.getContribution<ParameterHintsController>(\n\t\t\tParameterHintsController.ID,\n\t\t);\n\t}\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate readonly model: ParameterHintsModel;\n\tprivate readonly widget: Lazy<ParameterHintsWidget>;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILanguageFeaturesService\n\t\tlanguageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tthis.editor = editor;\n\n\t\tthis.model = this._register(\n\t\t\tnew ParameterHintsModel(\n\t\t\t\teditor,\n\t\t\t\tlanguageFeaturesService.signatureHelpProvider,\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.model.onChangedHints((newParameterHints) => {\n\t\t\t\tif (newParameterHints) {\n\t\t\t\t\tthis.widget.value.show();\n\t\t\t\t\tthis.widget.value.render(newParameterHints);\n\t\t\t\t} else {\n\t\t\t\t\tthis.widget.rawValue?.hide();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.widget = new Lazy(() =>\n\t\t\tthis._register(\n\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\tParameterHintsWidget,\n\t\t\t\t\tthis.editor,\n\t\t\t\t\tthis.model,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n\n\tcancel(): void {\n\t\tthis.model.cancel();\n\t}\n\n\tprevious(): void {\n\t\tthis.widget.rawValue?.previous();\n\t}\n\n\tnext(): void {\n\t\tthis.widget.rawValue?.next();\n\t}\n\n\ttrigger(context: TriggerContext): void {\n\t\tthis.model.trigger(context, 0);\n\t}\n}\n\nexport class TriggerParameterHintsAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.triggerParameterHints\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"parameterHints.trigger.label\",\n\t\t\t\t\"Trigger Parameter Hints\",\n\t\t\t),\n\t\t\talias: \"Trigger Parameter Hints\",\n\t\t\tprecondition: EditorContextKeys.hasSignatureHelpProvider,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Space,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = ParameterHintsController.get(editor);\n\t\tcontroller?.trigger({\n\t\t\ttriggerKind: languages.SignatureHelpTriggerKind.Invoke,\n\t\t});\n\t}\n}\n\nregisterEditorContribution(\n\tParameterHintsController.ID,\n\tParameterHintsController,\n\tEditorContributionInstantiation.BeforeFirstInteraction,\n);\nregisterEditorAction(TriggerParameterHintsAction);\n\nconst weight = KeybindingWeight.EditorContrib + 75;\n\nconst ParameterHintsCommand =\n\tEditorCommand.bindToContribution<ParameterHintsController>(\n\t\tParameterHintsController.get,\n\t);\n\nregisterEditorCommand(\n\tnew ParameterHintsCommand({\n\t\tid: \"closeParameterHints\",\n\t\tprecondition: Context.Visible,\n\t\thandler: (x) => x.cancel(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: KeyCode.Escape,\n\t\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew ParameterHintsCommand({\n\t\tid: \"showPrevParameterHint\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tContext.Visible,\n\t\t\tContext.MultipleSignatures,\n\t\t),\n\t\thandler: (x) => x.previous(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: KeyCode.UpArrow,\n\t\t\tsecondary: [KeyMod.Alt | KeyCode.UpArrow],\n\t\t\tmac: {\n\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\tsecondary: [\n\t\t\t\t\tKeyMod.Alt | KeyCode.UpArrow,\n\t\t\t\t\tKeyMod.WinCtrl | KeyCode.KeyP,\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew ParameterHintsCommand({\n\t\tid: \"showNextParameterHint\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tContext.Visible,\n\t\t\tContext.MultipleSignatures,\n\t\t),\n\t\thandler: (x) => x.next(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: KeyCode.DownArrow,\n\t\t\tsecondary: [KeyMod.Alt | KeyCode.DownArrow],\n\t\t\tmac: {\n\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\tsecondary: [\n\t\t\t\t\tKeyMod.Alt | KeyCode.DownArrow,\n\t\t\t\t\tKeyMod.WinCtrl | KeyCode.KeyN,\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t}),\n);\n"],
  "mappings": "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",
  "names": []
}
