{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/snippet/test/browser/snippetSession.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IActiveCodeEditor } from '../../../../browser/editorBrowser.js';\nimport { IPosition, Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { TextModel } from '../../../../common/model/textModel.js';\nimport { SnippetParser } from '../../browser/snippetParser.js';\nimport { SnippetSession } from '../../browser/snippetSession.js';\nimport { createTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { TestLanguageConfigurationService } from '../../../../test/common/modes/testLanguageConfigurationService.js';\nimport { createTextModel } from '../../../../test/common/testTextModel.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\n\nsuite('SnippetSession', function () {\n\n\tlet languageConfigurationService: ILanguageConfigurationService;\n\tlet editor: IActiveCodeEditor;\n\tlet model: TextModel;\n\n\tfunction assertSelections(editor: IActiveCodeEditor, ...s: Selection[]) {\n\t\tfor (const selection of editor.getSelections()) {\n\t\t\tconst actual = s.shift()!;\n\t\t\tassert.ok(selection.equalsSelection(actual), `actual=${selection.toString()} <> expected=${actual.toString()}`);\n\t\t}\n\t\tassert.strictEqual(s.length, 0);\n\t}\n\n\tsetup(function () {\n\t\tmodel = createTextModel('function foo() {\\n    console.log(a);\\n}');\n\t\tlanguageConfigurationService = new TestLanguageConfigurationService();\n\t\tconst serviceCollection = new ServiceCollection(\n\t\t\t[ILabelService, new class extends mock<ILabelService>() { }],\n\t\t\t[ILanguageConfigurationService, languageConfigurationService],\n\t\t\t[IWorkspaceContextService, new class extends mock<IWorkspaceContextService>() {\n\t\t\t\toverride getWorkspace() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: 'workspace-id',\n\t\t\t\t\t\tfolders: [],\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}],\n\t\t);\n\t\teditor = createTestCodeEditor(model, { serviceCollection }) as IActiveCodeEditor;\n\t\teditor.setSelections([new Selection(1, 1, 1, 1), new Selection(2, 5, 2, 5)]);\n\t\tassert.strictEqual(model.getEOL(), '\\n');\n\t});\n\n\tteardown(function () {\n\t\tmodel.dispose();\n\t\teditor.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('normalize whitespace', function () {\n\n\t\tfunction assertNormalized(position: IPosition, input: string, expected: string): void {\n\t\t\tconst snippet = new SnippetParser().parse(input);\n\t\t\tSnippetSession.adjustWhitespace(model, position, true, snippet);\n\t\t\tassert.strictEqual(snippet.toTextmateString(), expected);\n\t\t}\n\n\t\tassertNormalized(new Position(1, 1), 'foo', 'foo');\n\t\tassertNormalized(new Position(1, 1), 'foo\\rbar', 'foo\\nbar');\n\t\tassertNormalized(new Position(1, 1), 'foo\\rbar', 'foo\\nbar');\n\t\tassertNormalized(new Position(2, 5), 'foo\\r\\tbar', 'foo\\n        bar');\n\t\tassertNormalized(new Position(2, 3), 'foo\\r\\tbar', 'foo\\n    bar');\n\t\tassertNormalized(new Position(2, 5), 'foo\\r\\tbar\\nfoo', 'foo\\n        bar\\n    foo');\n\n\t\t//Indentation issue with choice elements that span multiple lines #46266\n\t\tassertNormalized(new Position(2, 5), 'a\\nb${1|foo,\\nbar|}', 'a\\n    b${1|foo,\\nbar|}');\n\t});\n\n\ttest('adjust selection (overwrite[Before|After])', function () {\n\n\t\tlet range = SnippetSession.adjustSelection(model, new Selection(1, 2, 1, 2), 1, 0);\n\t\tassert.ok(range.equalsRange(new Range(1, 1, 1, 2)));\n\t\trange = SnippetSession.adjustSelection(model, new Selection(1, 2, 1, 2), 1111, 0);\n\t\tassert.ok(range.equalsRange(new Range(1, 1, 1, 2)));\n\t\trange = SnippetSession.adjustSelection(model, new Selection(1, 2, 1, 2), 0, 10);\n\t\tassert.ok(range.equalsRange(new Range(1, 2, 1, 12)));\n\t\trange = SnippetSession.adjustSelection(model, new Selection(1, 2, 1, 2), 0, 10111);\n\t\tassert.ok(range.equalsRange(new Range(1, 2, 1, 17)));\n\n\t});\n\n\ttest('text edits & selection', function () {\n\t\tconst session = new SnippetSession(editor, 'foo${1:bar}foo$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassert.strictEqual(editor.getModel()!.getValue(), 'foobarfoofunction foo() {\\n    foobarfooconsole.log(a);\\n}');\n\n\t\tassertSelections(editor, new Selection(1, 4, 1, 7), new Selection(2, 8, 2, 11));\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 10, 1, 10), new Selection(2, 14, 2, 14));\n\t});\n\n\ttest('text edit with reversed selection', function () {\n\n\t\tconst session = new SnippetSession(editor, '${1:bar}$0', undefined, languageConfigurationService);\n\t\teditor.setSelections([new Selection(2, 5, 2, 5), new Selection(1, 1, 1, 1)]);\n\n\t\tsession.insert();\n\t\tassert.strictEqual(model.getValue(), 'barfunction foo() {\\n    barconsole.log(a);\\n}');\n\t\tassertSelections(editor, new Selection(2, 5, 2, 8), new Selection(1, 1, 1, 4));\n\t});\n\n\ttest('snippets, repeated tabstops', function () {\n\t\tconst session = new SnippetSession(editor, '${1:abc}foo${1:abc}$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassertSelections(editor,\n\t\t\tnew Selection(1, 1, 1, 4), new Selection(1, 7, 1, 10),\n\t\t\tnew Selection(2, 5, 2, 8), new Selection(2, 11, 2, 14),\n\t\t);\n\t\tsession.next();\n\t\tassertSelections(editor,\n\t\t\tnew Selection(1, 10, 1, 10),\n\t\t\tnew Selection(2, 14, 2, 14),\n\t\t);\n\t});\n\n\ttest('snippets, just text', function () {\n\t\tconst session = new SnippetSession(editor, 'foobar', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassert.strictEqual(model.getValue(), 'foobarfunction foo() {\\n    foobarconsole.log(a);\\n}');\n\t\tassertSelections(editor, new Selection(1, 7, 1, 7), new Selection(2, 11, 2, 11));\n\t});\n\n\ttest('snippets, selections and new text with newlines', () => {\n\n\t\tconst session = new SnippetSession(editor, 'foo\\n\\t${1:bar}\\n$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\tassert.strictEqual(editor.getModel()!.getValue(), 'foo\\n    bar\\nfunction foo() {\\n    foo\\n        bar\\n    console.log(a);\\n}');\n\n\t\tassertSelections(editor, new Selection(2, 5, 2, 8), new Selection(5, 9, 5, 12));\n\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(3, 1, 3, 1), new Selection(6, 5, 6, 5));\n\t});\n\n\ttest('snippets, newline NO whitespace adjust', () => {\n\n\t\teditor.setSelection(new Selection(2, 5, 2, 5));\n\t\tconst session = new SnippetSession(editor, 'abc\\n    foo\\n        bar\\n$0', { overwriteBefore: 0, overwriteAfter: 0, adjustWhitespace: false, clipboardText: undefined, overtypingCapturer: undefined }, languageConfigurationService);\n\t\tsession.insert();\n\t\tassert.strictEqual(editor.getModel()!.getValue(), 'function foo() {\\n    abc\\n    foo\\n        bar\\nconsole.log(a);\\n}');\n\t});\n\n\ttest('snippets, selections -> next/prev', () => {\n\n\t\tconst session = new SnippetSession(editor, 'f$1oo${2:bar}foo$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\t// @ $2\n\t\tassertSelections(editor, new Selection(1, 2, 1, 2), new Selection(2, 6, 2, 6));\n\t\t// @ $1\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 4, 1, 7), new Selection(2, 8, 2, 11));\n\t\t// @ $2\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 2, 1, 2), new Selection(2, 6, 2, 6));\n\t\t// @ $1\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 4, 1, 7), new Selection(2, 8, 2, 11));\n\t\t// @ $0\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 10, 1, 10), new Selection(2, 14, 2, 14));\n\t});\n\n\ttest('snippets, selections & typing', function () {\n\t\tconst session = new SnippetSession(editor, 'f${1:oo}_$2_$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\teditor.trigger('test', 'type', { text: 'X' });\n\t\tsession.next();\n\t\teditor.trigger('test', 'type', { text: 'bar' });\n\n\t\t// go back to ${2:oo} which is now just 'X'\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 2, 1, 3), new Selection(2, 6, 2, 7));\n\n\t\t// go forward to $1 which is now 'bar'\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 4, 1, 7), new Selection(2, 8, 2, 11));\n\n\t\t// go to final tabstop\n\t\tsession.next();\n\t\tassert.strictEqual(model.getValue(), 'fX_bar_function foo() {\\n    fX_bar_console.log(a);\\n}');\n\t\tassertSelections(editor, new Selection(1, 8, 1, 8), new Selection(2, 12, 2, 12));\n\t});\n\n\ttest('snippets, insert shorter snippet into non-empty selection', function () {\n\t\tmodel.setValue('foo_bar_foo');\n\t\teditor.setSelections([new Selection(1, 1, 1, 4), new Selection(1, 9, 1, 12)]);\n\n\t\tnew SnippetSession(editor, 'x$0', undefined, languageConfigurationService).insert();\n\t\tassert.strictEqual(model.getValue(), 'x_bar_x');\n\t\tassertSelections(editor, new Selection(1, 2, 1, 2), new Selection(1, 8, 1, 8));\n\t});\n\n\ttest('snippets, insert longer snippet into non-empty selection', function () {\n\t\tmodel.setValue('foo_bar_foo');\n\t\teditor.setSelections([new Selection(1, 1, 1, 4), new Selection(1, 9, 1, 12)]);\n\n\t\tnew SnippetSession(editor, 'LONGER$0', undefined, languageConfigurationService).insert();\n\t\tassert.strictEqual(model.getValue(), 'LONGER_bar_LONGER');\n\t\tassertSelections(editor, new Selection(1, 7, 1, 7), new Selection(1, 18, 1, 18));\n\t});\n\n\ttest('snippets, don\\'t grow final tabstop', function () {\n\t\tmodel.setValue('foo_zzz_foo');\n\t\teditor.setSelection(new Selection(1, 5, 1, 8));\n\t\tconst session = new SnippetSession(editor, '$1bar$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\tassertSelections(editor, new Selection(1, 5, 1, 5));\n\t\teditor.trigger('test', 'type', { text: 'foo-' });\n\n\t\tsession.next();\n\t\tassert.strictEqual(model.getValue(), 'foo_foo-bar_foo');\n\t\tassertSelections(editor, new Selection(1, 12, 1, 12));\n\n\t\teditor.trigger('test', 'type', { text: 'XXX' });\n\t\tassert.strictEqual(model.getValue(), 'foo_foo-barXXX_foo');\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 5, 1, 9));\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 15, 1, 15));\n\t});\n\n\ttest('snippets, don\\'t merge touching tabstops 1/2', function () {\n\n\t\tconst session = new SnippetSession(editor, '$1$2$3$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassertSelections(editor, new Selection(1, 1, 1, 1), new Selection(2, 5, 2, 5));\n\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 1, 1, 1), new Selection(2, 5, 2, 5));\n\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 1, 1, 1), new Selection(2, 5, 2, 5));\n\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 1, 1, 1), new Selection(2, 5, 2, 5));\n\n\t\tsession.prev();\n\t\tsession.prev();\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 1, 1, 1), new Selection(2, 5, 2, 5));\n\t\teditor.trigger('test', 'type', { text: '111' });\n\n\t\tsession.next();\n\t\teditor.trigger('test', 'type', { text: '222' });\n\n\t\tsession.next();\n\t\teditor.trigger('test', 'type', { text: '333' });\n\n\t\tsession.next();\n\t\tassert.strictEqual(model.getValue(), '111222333function foo() {\\n    111222333console.log(a);\\n}');\n\t\tassertSelections(editor, new Selection(1, 10, 1, 10), new Selection(2, 14, 2, 14));\n\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 7, 1, 10), new Selection(2, 11, 2, 14));\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 4, 1, 7), new Selection(2, 8, 2, 11));\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 1, 1, 4), new Selection(2, 5, 2, 8));\n\t});\n\ttest('snippets, don\\'t merge touching tabstops 2/2', function () {\n\n\t\tconst session = new SnippetSession(editor, '$1$2$3$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassertSelections(editor, new Selection(1, 1, 1, 1), new Selection(2, 5, 2, 5));\n\n\t\teditor.trigger('test', 'type', { text: '111' });\n\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 4, 1, 4), new Selection(2, 8, 2, 8));\n\t\teditor.trigger('test', 'type', { text: '222' });\n\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 7, 1, 7), new Selection(2, 11, 2, 11));\n\t\teditor.trigger('test', 'type', { text: '333' });\n\n\t\tsession.next();\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t});\n\n\ttest('snippets, gracefully move over final tabstop', function () {\n\t\tconst session = new SnippetSession(editor, '${1}bar$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\tassert.strictEqual(session.isAtLastPlaceholder, false);\n\t\tassertSelections(editor, new Selection(1, 1, 1, 1), new Selection(2, 5, 2, 5));\n\n\t\tsession.next();\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 4, 1, 4), new Selection(2, 8, 2, 8));\n\n\t\tsession.next();\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 4, 1, 4), new Selection(2, 8, 2, 8));\n\t});\n\n\ttest('snippets, overwriting nested placeholder', function () {\n\t\tconst session = new SnippetSession(editor, 'log(${1:\"$2\"});$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassertSelections(editor, new Selection(1, 5, 1, 7), new Selection(2, 9, 2, 11));\n\n\t\teditor.trigger('test', 'type', { text: 'XXX' });\n\t\tassert.strictEqual(model.getValue(), 'log(XXX);function foo() {\\n    log(XXX);console.log(a);\\n}');\n\n\t\tsession.next();\n\t\tassert.strictEqual(session.isAtLastPlaceholder, false);\n\t\t// assertSelections(editor, new Selection(1, 7, 1, 7), new Selection(2, 11, 2, 11));\n\n\t\tsession.next();\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 10, 1, 10), new Selection(2, 14, 2, 14));\n\t});\n\n\ttest('snippets, selections and snippet ranges', function () {\n\t\tconst session = new SnippetSession(editor, '${1:foo}farboo${2:bar}$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassert.strictEqual(model.getValue(), 'foofarboobarfunction foo() {\\n    foofarboobarconsole.log(a);\\n}');\n\t\tassertSelections(editor, new Selection(1, 1, 1, 4), new Selection(2, 5, 2, 8));\n\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), true);\n\n\t\teditor.setSelections([new Selection(1, 1, 1, 1)]);\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), false);\n\n\t\teditor.setSelections([new Selection(1, 6, 1, 6), new Selection(2, 10, 2, 10)]);\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), false); // in snippet, outside placeholder\n\n\t\teditor.setSelections([new Selection(1, 6, 1, 6), new Selection(2, 10, 2, 10), new Selection(1, 1, 1, 1)]);\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), false); // in snippet, outside placeholder\n\n\t\teditor.setSelections([new Selection(1, 6, 1, 6), new Selection(2, 10, 2, 10), new Selection(2, 20, 2, 21)]);\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), false);\n\n\t\t// reset selection to placeholder\n\t\tsession.next();\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), true);\n\t\tassertSelections(editor, new Selection(1, 10, 1, 13), new Selection(2, 14, 2, 17));\n\n\t\t// reset selection to placeholder\n\t\tsession.next();\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), true);\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 13, 1, 13), new Selection(2, 17, 2, 17));\n\t});\n\n\ttest('snippets, nested sessions', function () {\n\n\t\tmodel.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\n\t\tconst first = new SnippetSession(editor, 'foo${2:bar}foo$0', undefined, languageConfigurationService);\n\t\tfirst.insert();\n\t\tassert.strictEqual(model.getValue(), 'foobarfoo');\n\t\tassertSelections(editor, new Selection(1, 4, 1, 7));\n\n\t\tconst second = new SnippetSession(editor, 'ba${1:zzzz}$0', undefined, languageConfigurationService);\n\t\tsecond.insert();\n\t\tassert.strictEqual(model.getValue(), 'foobazzzzfoo');\n\t\tassertSelections(editor, new Selection(1, 6, 1, 10));\n\n\t\tsecond.next();\n\t\tassert.strictEqual(second.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 10, 1, 10));\n\n\t\tfirst.next();\n\t\tassert.strictEqual(first.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 13, 1, 13));\n\t});\n\n\ttest('snippets, typing at final tabstop', function () {\n\n\t\tconst session = new SnippetSession(editor, 'farboo$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), false);\n\n\t\teditor.trigger('test', 'type', { text: 'XXX' });\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), false);\n\t});\n\n\ttest('snippets, typing at beginning', function () {\n\n\t\teditor.setSelection(new Selection(1, 2, 1, 2));\n\t\tconst session = new SnippetSession(editor, 'farboo$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\teditor.setSelection(new Selection(1, 2, 1, 2));\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), false);\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\n\t\teditor.trigger('test', 'type', { text: 'XXX' });\n\t\tassert.strictEqual(model.getLineContent(1), 'fXXXfarboounction foo() {');\n\t\tassert.strictEqual(session.isSelectionWithinPlaceholders(), false);\n\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 11, 1, 11));\n\t});\n\n\ttest('snippets, typing with nested placeholder', function () {\n\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\tconst session = new SnippetSession(editor, 'This ${1:is ${2:nested}}.$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassertSelections(editor, new Selection(1, 6, 1, 15));\n\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 9, 1, 15));\n\n\t\teditor.trigger('test', 'cut', {});\n\t\tassertSelections(editor, new Selection(1, 9, 1, 9));\n\n\t\teditor.trigger('test', 'type', { text: 'XXX' });\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 6, 1, 12));\n\t});\n\n\ttest('snippets, snippet with variables', function () {\n\t\tconst session = new SnippetSession(editor, '@line=$TM_LINE_NUMBER$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\tassert.strictEqual(model.getValue(), '@line=1function foo() {\\n    @line=2console.log(a);\\n}');\n\t\tassertSelections(editor, new Selection(1, 8, 1, 8), new Selection(2, 12, 2, 12));\n\t});\n\n\ttest('snippets, merge', function () {\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\tconst session = new SnippetSession(editor, 'This ${1:is ${2:nested}}.$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 9, 1, 15));\n\n\t\tsession.merge('really ${1:nested}$0');\n\t\tassertSelections(editor, new Selection(1, 16, 1, 22));\n\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 22, 1, 22));\n\t\tassert.strictEqual(session.isAtLastPlaceholder, false);\n\n\t\tsession.next();\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 23, 1, 23));\n\n\t\tsession.prev();\n\t\teditor.trigger('test', 'type', { text: 'AAA' });\n\n\t\t// back to `really ${1:nested}`\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 16, 1, 22));\n\n\t\t// back to `${1:is ...}` which now grew\n\t\tsession.prev();\n\t\tassertSelections(editor, new Selection(1, 6, 1, 25));\n\t});\n\n\ttest('snippets, transform', function () {\n\t\teditor.getModel()!.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\tconst session = new SnippetSession(editor, '${1/foo/bar/}$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassertSelections(editor, new Selection(1, 1, 1, 1));\n\n\t\teditor.trigger('test', 'type', { text: 'foo' });\n\t\tsession.next();\n\n\t\tassert.strictEqual(model.getValue(), 'bar');\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 4, 1, 4));\n\t});\n\n\ttest('snippets, multi placeholder same index one transform', function () {\n\t\teditor.getModel()!.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\tconst session = new SnippetSession(editor, '$1 baz ${1/foo/bar/}$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassertSelections(editor, new Selection(1, 1, 1, 1), new Selection(1, 6, 1, 6));\n\n\t\teditor.trigger('test', 'type', { text: 'foo' });\n\t\tsession.next();\n\n\t\tassert.strictEqual(model.getValue(), 'foo baz bar');\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 12, 1, 12));\n\t});\n\n\ttest('snippets, transform example', function () {\n\t\teditor.getModel()!.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\tconst session = new SnippetSession(editor, '${1:name} : ${2:type}${3/\\\\s:=(.*)/${1:+ :=}${1}/};\\n$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\tassertSelections(editor, new Selection(1, 1, 1, 5));\n\t\teditor.trigger('test', 'type', { text: 'clk' });\n\t\tsession.next();\n\n\t\tassertSelections(editor, new Selection(1, 7, 1, 11));\n\t\teditor.trigger('test', 'type', { text: 'std_logic' });\n\t\tsession.next();\n\n\t\tassertSelections(editor, new Selection(1, 16, 1, 16));\n\t\tsession.next();\n\n\t\tassert.strictEqual(model.getValue(), 'clk : std_logic;\\n');\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(2, 1, 2, 1));\n\t});\n\n\ttest('snippets, transform with indent', function () {\n\t\tconst snippet = [\n\t\t\t'private readonly ${1} = new Emitter<$2>();',\n\t\t\t'readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event;',\n\t\t\t'$0'\n\t\t].join('\\n');\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'\\tprivate readonly _prop = new Emitter<string>();',\n\t\t\t'\\treadonly prop: Event<string> = this._prop.event;',\n\t\t\t'\\t',\n\t\t\t'}'\n\t\t].join('\\n');\n\t\tconst base = [\n\t\t\t'{',\n\t\t\t'\\t',\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t\teditor.getModel()!.setValue(base);\n\t\teditor.getModel()!.updateOptions({ insertSpaces: false });\n\t\teditor.setSelection(new Selection(2, 2, 2, 2));\n\n\t\tconst session = new SnippetSession(editor, snippet, undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\tassertSelections(editor, new Selection(2, 19, 2, 19), new Selection(3, 11, 3, 11), new Selection(3, 28, 3, 28));\n\t\teditor.trigger('test', 'type', { text: '_prop' });\n\t\tsession.next();\n\n\t\tassertSelections(editor, new Selection(2, 39, 2, 39), new Selection(3, 23, 3, 23));\n\t\teditor.trigger('test', 'type', { text: 'string' });\n\t\tsession.next();\n\n\t\tassert.strictEqual(model.getValue(), expected);\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(4, 2, 4, 2));\n\n\t});\n\n\ttest('snippets, transform example hit if', function () {\n\t\teditor.getModel()!.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\tconst session = new SnippetSession(editor, '${1:name} : ${2:type}${3/\\\\s:=(.*)/${1:+ :=}${1}/};\\n$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\tassertSelections(editor, new Selection(1, 1, 1, 5));\n\t\teditor.trigger('test', 'type', { text: 'clk' });\n\t\tsession.next();\n\n\t\tassertSelections(editor, new Selection(1, 7, 1, 11));\n\t\teditor.trigger('test', 'type', { text: 'std_logic' });\n\t\tsession.next();\n\n\t\tassertSelections(editor, new Selection(1, 16, 1, 16));\n\t\teditor.trigger('test', 'type', { text: ' := \\'1\\'' });\n\t\tsession.next();\n\n\t\tassert.strictEqual(model.getValue(), 'clk : std_logic := \\'1\\';\\n');\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(2, 1, 2, 1));\n\t});\n\n\ttest('Snippet tab stop selection issue #96545, snippets, transform adjacent to previous placeholder', function () {\n\t\teditor.getModel()!.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\tconst session = new SnippetSession(editor, '${1:{}${2:fff}${1/{/}/}', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\tassertSelections(editor, new Selection(1, 1, 1, 2), new Selection(1, 5, 1, 6));\n\t\tsession.next();\n\n\t\tassert.strictEqual(model.getValue(), '{fff}');\n\t\tassertSelections(editor, new Selection(1, 2, 1, 5));\n\t\teditor.trigger('test', 'type', { text: 'ggg' });\n\t\tsession.next();\n\n\t\tassert.strictEqual(model.getValue(), '{ggg}');\n\t\tassert.strictEqual(session.isAtLastPlaceholder, true);\n\t\tassertSelections(editor, new Selection(1, 6, 1, 6));\n\t});\n\n\ttest('Snippet tab stop selection issue #96545', function () {\n\t\teditor.getModel().setValue('');\n\t\tconst session = new SnippetSession(editor, '${1:{}${2:fff}${1/[\\\\{]/}/}$0', undefined, languageConfigurationService);\n\t\tsession.insert();\n\t\tassert.strictEqual(editor.getModel().getValue(), '{fff{');\n\n\t\tassertSelections(editor, new Selection(1, 1, 1, 2), new Selection(1, 5, 1, 6));\n\t\tsession.next();\n\t\tassertSelections(editor, new Selection(1, 2, 1, 5));\n\t});\n\n\ttest('Snippet placeholder index incorrect after using 2+ snippets in a row that each end with a placeholder, #30769', function () {\n\t\teditor.getModel()!.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\tconst session = new SnippetSession(editor, 'test ${1:replaceme}', undefined, languageConfigurationService);\n\t\tsession.insert();\n\n\t\teditor.trigger('test', 'type', { text: '1' });\n\t\teditor.trigger('test', 'type', { text: '\\n' });\n\t\tassert.strictEqual(editor.getModel()!.getValue(), 'test 1\\n');\n\n\t\tsession.merge('test ${1:replaceme}');\n\t\teditor.trigger('test', 'type', { text: '2' });\n\t\teditor.trigger('test', 'type', { text: '\\n' });\n\n\t\tassert.strictEqual(editor.getModel()!.getValue(), 'test 1\\ntest 2\\n');\n\n\t\tsession.merge('test ${1:replaceme}');\n\t\teditor.trigger('test', 'type', { text: '3' });\n\t\teditor.trigger('test', 'type', { text: '\\n' });\n\n\t\tassert.strictEqual(editor.getModel()!.getValue(), 'test 1\\ntest 2\\ntest 3\\n');\n\n\t\tsession.merge('test ${1:replaceme}');\n\t\teditor.trigger('test', 'type', { text: '4' });\n\t\teditor.trigger('test', 'type', { text: '\\n' });\n\n\t\tassert.strictEqual(editor.getModel()!.getValue(), 'test 1\\ntest 2\\ntest 3\\ntest 4\\n');\n\t});\n\n\ttest('Snippet variable text isn\\'t whitespace normalised, #31124', function () {\n\t\teditor.getModel()!.setValue([\n\t\t\t'start',\n\t\t\t'\\t\\t-one',\n\t\t\t'\\t\\t-two',\n\t\t\t'end'\n\t\t].join('\\n'));\n\n\t\teditor.getModel()!.updateOptions({ insertSpaces: false });\n\t\teditor.setSelection(new Selection(2, 2, 3, 7));\n\n\t\tnew SnippetSession(editor, '<div>\\n\\t$TM_SELECTED_TEXT\\n</div>$0', undefined, languageConfigurationService).insert();\n\n\t\tlet expected = [\n\t\t\t'start',\n\t\t\t'\\t<div>',\n\t\t\t'\\t\\t\\t-one',\n\t\t\t'\\t\\t\\t-two',\n\t\t\t'\\t</div>',\n\t\t\t'end'\n\t\t].join('\\n');\n\n\t\tassert.strictEqual(editor.getModel()!.getValue(), expected);\n\n\t\teditor.getModel()!.setValue([\n\t\t\t'start',\n\t\t\t'\\t\\t-one',\n\t\t\t'\\t-two',\n\t\t\t'end'\n\t\t].join('\\n'));\n\n\t\teditor.getModel()!.updateOptions({ insertSpaces: false });\n\t\teditor.setSelection(new Selection(2, 2, 3, 7));\n\n\t\tnew SnippetSession(editor, '<div>\\n\\t$TM_SELECTED_TEXT\\n</div>$0', undefined, languageConfigurationService).insert();\n\n\t\texpected = [\n\t\t\t'start',\n\t\t\t'\\t<div>',\n\t\t\t'\\t\\t\\t-one',\n\t\t\t'\\t\\t-two',\n\t\t\t'\\t</div>',\n\t\t\t'end'\n\t\t].join('\\n');\n\n\t\tassert.strictEqual(editor.getModel()!.getValue(), expected);\n\t});\n\n\ttest('Selecting text from left to right, and choosing item messes up code, #31199', function () {\n\t\tconst model = editor.getModel()!;\n\t\tmodel.setValue('console.log');\n\n\t\tlet actual = SnippetSession.adjustSelection(model, new Selection(1, 12, 1, 9), 3, 0);\n\t\tassert.ok(actual.equalsSelection(new Selection(1, 9, 1, 6)));\n\n\t\tactual = SnippetSession.adjustSelection(model, new Selection(1, 9, 1, 12), 3, 0);\n\t\tassert.ok(actual.equalsSelection(new Selection(1, 9, 1, 12)));\n\n\t\teditor.setSelections([new Selection(1, 9, 1, 12)]);\n\t\tnew SnippetSession(editor, 'far', { overwriteBefore: 3, overwriteAfter: 0, adjustWhitespace: true, clipboardText: undefined, overtypingCapturer: undefined }, languageConfigurationService).insert();\n\t\tassert.strictEqual(model.getValue(), 'console.far');\n\t});\n\n\ttest('Tabs don\\'t get replaced with spaces in snippet transformations #103818', function () {\n\t\tconst model = editor.getModel()!;\n\t\tmodel.setValue('\\n{\\n  \\n}');\n\t\tmodel.updateOptions({ insertSpaces: true, indentSize: 2 });\n\t\teditor.setSelections([new Selection(1, 1, 1, 1), new Selection(3, 6, 3, 6)]);\n\t\tconst session = new SnippetSession(editor, [\n\t\t\t'function animate () {',\n\t\t\t'\\tvar ${1:a} = 12;',\n\t\t\t'\\tconsole.log(${1/(.*)/\\n\\t\\t$1\\n\\t/})',\n\t\t\t'}'\n\t\t].join('\\n'), undefined, languageConfigurationService);\n\n\t\tsession.insert();\n\n\t\tassert.strictEqual(model.getValue(), [\n\t\t\t'function animate () {',\n\t\t\t'  var a = 12;',\n\t\t\t'  console.log(a)',\n\t\t\t'}',\n\t\t\t'{',\n\t\t\t'  function animate () {',\n\t\t\t'    var a = 12;',\n\t\t\t'    console.log(a)',\n\t\t\t'  }',\n\t\t\t'}',\n\t\t].join('\\n'));\n\n\t\teditor.trigger('test', 'type', { text: 'bbb' });\n\t\tsession.next();\n\n\t\tassert.strictEqual(model.getValue(), [\n\t\t\t'function animate () {',\n\t\t\t'  var bbb = 12;',\n\t\t\t'  console.log(',\n\t\t\t'    bbb',\n\t\t\t'  )',\n\t\t\t'}',\n\t\t\t'{',\n\t\t\t'  function animate () {',\n\t\t\t'    var bbb = 12;',\n\t\t\t'    console.log(',\n\t\t\t'      bbb',\n\t\t\t'    )',\n\t\t\t'  }',\n\t\t\t'}',\n\t\t].join('\\n'));\n\t});\n\n\n\tsuite('createEditsAndSnippetsFromEdits', function () {\n\n\t\ttest('empty', function () {\n\n\t\t\tconst result = SnippetSession.createEditsAndSnippetsFromEdits(editor, [], true, true, undefined, undefined, languageConfigurationService);\n\n\t\t\tassert.deepStrictEqual(result.edits, []);\n\t\t\tassert.deepStrictEqual(result.snippets, []);\n\t\t});\n\n\t\ttest('basic', function () {\n\n\t\t\teditor.getModel().setValue('foo(\"bar\")');\n\n\t\t\tconst result = SnippetSession.createEditsAndSnippetsFromEdits(\n\t\t\t\teditor,\n\t\t\t\t[{ range: new Range(1, 5, 1, 9), template: '$1' }, { range: new Range(1, 1, 1, 1), template: 'const ${1:new_const} = \"bar\"' }],\n\t\t\t\ttrue, true, undefined, undefined, languageConfigurationService\n\t\t\t);\n\n\t\t\tassert.strictEqual(result.edits.length, 2);\n\t\t\tassert.deepStrictEqual(result.edits[0].range, new Range(1, 1, 1, 1));\n\t\t\tassert.deepStrictEqual(result.edits[0].text, 'const new_const = \"bar\"');\n\t\t\tassert.deepStrictEqual(result.edits[1].range, new Range(1, 5, 1, 9));\n\t\t\tassert.deepStrictEqual(result.edits[1].text, 'new_const');\n\n\t\t\tassert.strictEqual(result.snippets.length, 1);\n\t\t\tassert.strictEqual(result.snippets[0].isTrivialSnippet, false);\n\t\t});\n\n\t\ttest('with $SELECTION variable', function () {\n\t\t\teditor.getModel().setValue('Some text and a selection');\n\t\t\teditor.setSelections([new Selection(1, 17, 1, 26)]);\n\n\t\t\tconst result = SnippetSession.createEditsAndSnippetsFromEdits(\n\t\t\t\teditor,\n\t\t\t\t[{ range: new Range(1, 17, 1, 26), template: 'wrapped <$SELECTION>' }],\n\t\t\t\ttrue, true, undefined, undefined, languageConfigurationService\n\t\t\t);\n\n\t\t\tassert.strictEqual(result.edits.length, 1);\n\t\t\tassert.deepStrictEqual(result.edits[0].range, new Range(1, 17, 1, 26));\n\t\t\tassert.deepStrictEqual(result.edits[0].text, 'wrapped <selection>');\n\n\t\t\tassert.strictEqual(result.snippets.length, 1);\n\t\t\tassert.strictEqual(result.snippets[0].isTrivialSnippet, true);\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": ["editor", "model"]
}
