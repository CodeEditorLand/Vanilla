{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/snippet/test/browser/snippetController2.old.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { LanguageFeaturesService } from '../../../../common/services/languageFeaturesService.js';\nimport { SnippetController2 } from '../../browser/snippetController2.js';\nimport { ITestCodeEditor, withTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { TestLanguageConfigurationService } from '../../../../test/common/modes/testLanguageConfigurationService.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { NullLogService } from '../../../../../platform/log/common/log.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\n\nclass TestSnippetController extends SnippetController2 {\n\n\tprivate _testLanguageConfigurationService: TestLanguageConfigurationService;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService\n\t) {\n\t\tconst testLanguageConfigurationService = new TestLanguageConfigurationService();\n\t\tsuper(editor, new NullLogService(), new LanguageFeaturesService(), _contextKeyService, testLanguageConfigurationService);\n\t\tthis._testLanguageConfigurationService = testLanguageConfigurationService;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._testLanguageConfigurationService.dispose();\n\t}\n\n\tisInSnippetMode(): boolean {\n\t\treturn SnippetController2.InSnippetMode.getValue(this._contextKeyService)!;\n\t}\n}\n\nsuite('SnippetController', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction snippetTest(cb: (editor: ITestCodeEditor, template: string, snippetController: TestSnippetController) => void, lines?: string[]): void {\n\n\t\tif (!lines) {\n\t\t\tlines = [\n\t\t\t\t'function test() {',\n\t\t\t\t'\\tvar x = 3;',\n\t\t\t\t'\\tvar arr = [];',\n\t\t\t\t'\\t',\n\t\t\t\t'}'\n\t\t\t];\n\t\t}\n\n\t\tconst serviceCollection = new ServiceCollection(\n\t\t\t[ILabelService, new class extends mock<ILabelService>() { }],\n\t\t\t[IWorkspaceContextService, new class extends mock<IWorkspaceContextService>() { }],\n\t\t);\n\n\t\twithTestCodeEditor(lines, { serviceCollection }, (editor) => {\n\t\t\teditor.getModel()!.updateOptions({\n\t\t\t\tinsertSpaces: false\n\t\t\t});\n\t\t\tconst snippetController = editor.registerAndInstantiateContribution(TestSnippetController.ID, TestSnippetController);\n\t\t\tconst template = [\n\t\t\t\t'for (var ${1:index}; $1 < ${2:array}.length; $1++) {',\n\t\t\t\t'\\tvar element = $2[$1];',\n\t\t\t\t'\\t$0',\n\t\t\t\t'}'\n\t\t\t].join('\\n');\n\n\t\t\tcb(editor, template, snippetController);\n\t\t\tsnippetController.dispose();\n\t\t});\n\t}\n\n\ttest('Simple accepted', () => {\n\t\tsnippetTest((editor, template, snippetController) => {\n\t\t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\n\t\t\tsnippetController.insert(template);\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(4), '\\tfor (var index; index < array.length; index++) {');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(5), '\\t\\tvar element = array[index];');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '\\t\\t');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '\\t}');\n\n\t\t\teditor.trigger('test', 'type', { text: 'i' });\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(4), '\\tfor (var i; i < array.length; i++) {');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(5), '\\t\\tvar element = array[i];');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '\\t\\t');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '\\t}');\n\n\t\t\tsnippetController.next();\n\t\t\teditor.trigger('test', 'type', { text: 'arr' });\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(4), '\\tfor (var i; i < arr.length; i++) {');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(5), '\\t\\tvar element = arr[i];');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '\\t\\t');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '\\t}');\n\n\t\t\tsnippetController.prev();\n\t\t\teditor.trigger('test', 'type', { text: 'j' });\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(4), '\\tfor (var j; j < arr.length; j++) {');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(5), '\\t\\tvar element = arr[j];');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '\\t\\t');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '\\t}');\n\n\t\t\tsnippetController.next();\n\t\t\tsnippetController.next();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(6, 3));\n\t\t});\n\t});\n\n\ttest('Simple canceled', () => {\n\t\tsnippetTest((editor, template, snippetController) => {\n\t\t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\n\t\t\tsnippetController.insert(template);\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(4), '\\tfor (var index; index < array.length; index++) {');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(5), '\\t\\tvar element = array[index];');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '\\t\\t');\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '\\t}');\n\n\t\t\tsnippetController.cancel();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(4, 16));\n\t\t});\n\t});\n\n\t// test('Stops when deleting lines above', () => {\n\t// \tsnippetTest((editor, codeSnippet, snippetController) => {\n\t// \t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\t// \t\tsnippetController.insert(codeSnippet, 0, 0);\n\n\t// \t\teditor.getModel()!.applyEdits([{\n\t// \t\t\tforceMoveMarkers: false,\n\t// \t\t\tidentifier: null,\n\t// \t\t\tisAutoWhitespaceEdit: false,\n\t// \t\t\trange: new Range(1, 1, 3, 1),\n\t// \t\t\ttext: null\n\t// \t\t}]);\n\n\t// \t\tassert.strictEqual(snippetController.isInSnippetMode(), false);\n\t// \t});\n\t// });\n\n\t// test('Stops when deleting lines below', () => {\n\t// \tsnippetTest((editor, codeSnippet, snippetController) => {\n\t// \t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\t// \t\tsnippetController.run(codeSnippet, 0, 0);\n\n\t// \t\teditor.getModel()!.applyEdits([{\n\t// \t\t\tforceMoveMarkers: false,\n\t// \t\t\tidentifier: null,\n\t// \t\t\tisAutoWhitespaceEdit: false,\n\t// \t\t\trange: new Range(8, 1, 8, 100),\n\t// \t\t\ttext: null\n\t// \t\t}]);\n\n\t// \t\tassert.strictEqual(snippetController.isInSnippetMode(), false);\n\t// \t});\n\t// });\n\n\t// test('Stops when inserting lines above', () => {\n\t// \tsnippetTest((editor, codeSnippet, snippetController) => {\n\t// \t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\t// \t\tsnippetController.run(codeSnippet, 0, 0);\n\n\t// \t\teditor.getModel()!.applyEdits([{\n\t// \t\t\tforceMoveMarkers: false,\n\t// \t\t\tidentifier: null,\n\t// \t\t\tisAutoWhitespaceEdit: false,\n\t// \t\t\trange: new Range(1, 100, 1, 100),\n\t// \t\t\ttext: '\\nHello'\n\t// \t\t}]);\n\n\t// \t\tassert.strictEqual(snippetController.isInSnippetMode(), false);\n\t// \t});\n\t// });\n\n\t// test('Stops when inserting lines below', () => {\n\t// \tsnippetTest((editor, codeSnippet, snippetController) => {\n\t// \t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\t// \t\tsnippetController.run(codeSnippet, 0, 0);\n\n\t// \t\teditor.getModel()!.applyEdits([{\n\t// \t\t\tforceMoveMarkers: false,\n\t// \t\t\tidentifier: null,\n\t// \t\t\tisAutoWhitespaceEdit: false,\n\t// \t\t\trange: new Range(8, 100, 8, 100),\n\t// \t\t\ttext: '\\nHello'\n\t// \t\t}]);\n\n\t// \t\tassert.strictEqual(snippetController.isInSnippetMode(), false);\n\t// \t});\n\t// });\n\n\ttest('Stops when calling model.setValue()', () => {\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\teditor.getModel()!.setValue('goodbye');\n\n\t\t\tassert.strictEqual(snippetController.isInSnippetMode(), false);\n\t\t});\n\t});\n\n\ttest('Stops when undoing', () => {\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\teditor.getModel()!.undo();\n\n\t\t\tassert.strictEqual(snippetController.isInSnippetMode(), false);\n\t\t});\n\t});\n\n\ttest('Stops when moving cursor outside', () => {\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\n\t\t\tassert.strictEqual(snippetController.isInSnippetMode(), false);\n\t\t});\n\t});\n\n\ttest('Stops when disconnecting editor model', () => {\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\teditor.setModel(null);\n\n\t\t\tassert.strictEqual(snippetController.isInSnippetMode(), false);\n\t\t});\n\t});\n\n\ttest('Stops when disposing editor', () => {\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setPosition({ lineNumber: 4, column: 2 });\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\tsnippetController.dispose();\n\n\t\t\tassert.strictEqual(snippetController.isInSnippetMode(), false);\n\t\t});\n\t});\n\n\ttest('Final tabstop with multiple selections', () => {\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew Selection(2, 1, 2, 1),\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'foo$0';\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 2);\n\t\t\tconst [first, second] = editor.getSelections()!;\n\t\t\tassert.ok(first.equalsRange({ startLineNumber: 1, startColumn: 4, endLineNumber: 1, endColumn: 4 }), first.toString());\n\t\t\tassert.ok(second.equalsRange({ startLineNumber: 2, startColumn: 4, endLineNumber: 2, endColumn: 4 }), second.toString());\n\t\t});\n\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew Selection(2, 1, 2, 1),\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'foo$0bar';\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 2);\n\t\t\tconst [first, second] = editor.getSelections()!;\n\t\t\tassert.ok(first.equalsRange({ startLineNumber: 1, startColumn: 4, endLineNumber: 1, endColumn: 4 }), first.toString());\n\t\t\tassert.ok(second.equalsRange({ startLineNumber: 2, startColumn: 4, endLineNumber: 2, endColumn: 4 }), second.toString());\n\t\t});\n\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'foo$0bar';\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 2);\n\t\t\tconst [first, second] = editor.getSelections()!;\n\t\t\tassert.ok(first.equalsRange({ startLineNumber: 1, startColumn: 4, endLineNumber: 1, endColumn: 4 }), first.toString());\n\t\t\tassert.ok(second.equalsRange({ startLineNumber: 1, startColumn: 14, endLineNumber: 1, endColumn: 14 }), second.toString());\n\t\t});\n\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'foo\\n$0\\nbar';\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 2);\n\t\t\tconst [first, second] = editor.getSelections()!;\n\t\t\tassert.ok(first.equalsRange({ startLineNumber: 2, startColumn: 1, endLineNumber: 2, endColumn: 1 }), first.toString());\n\t\t\tassert.ok(second.equalsRange({ startLineNumber: 4, startColumn: 1, endLineNumber: 4, endColumn: 1 }), second.toString());\n\t\t});\n\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'foo\\n$0\\nbar';\n\t\t\tsnippetController.insert(codeSnippet);\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 2);\n\t\t\tconst [first, second] = editor.getSelections()!;\n\t\t\tassert.ok(first.equalsRange({ startLineNumber: 2, startColumn: 1, endLineNumber: 2, endColumn: 1 }), first.toString());\n\t\t\tassert.ok(second.equalsRange({ startLineNumber: 4, startColumn: 1, endLineNumber: 4, endColumn: 1 }), second.toString());\n\t\t});\n\n\t\tsnippetTest((editor, codeSnippet, snippetController) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(2, 7, 2, 7),\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'xo$0r';\n\t\t\tsnippetController.insert(codeSnippet, { overwriteBefore: 1 });\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 1);\n\t\t\tassert.ok(editor.getSelection()!.equalsRange({ startLineNumber: 2, startColumn: 8, endColumn: 8, endLineNumber: 2 }));\n\t\t});\n\t});\n\n\ttest('Final tabstop, #11742 simple', () => {\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelection(new Selection(1, 19, 1, 19));\n\n\t\t\tcodeSnippet = '{{% url_**$1** %}}';\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 2 });\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 1);\n\t\t\tassert.ok(editor.getSelection()!.equalsRange({ startLineNumber: 1, startColumn: 27, endLineNumber: 1, endColumn: 27 }));\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'example example {{% url_**** %}}');\n\n\t\t}, ['example example sc']);\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelection(new Selection(1, 3, 1, 3));\n\n\t\t\tcodeSnippet = [\n\t\t\t\t'afterEach((done) => {',\n\t\t\t\t'\\t${1}test',\n\t\t\t\t'});'\n\t\t\t].join('\\n');\n\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 2 });\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 1);\n\t\t\tassert.ok(editor.getSelection()!.equalsRange({ startLineNumber: 2, startColumn: 2, endLineNumber: 2, endColumn: 2 }), editor.getSelection()!.toString());\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'afterEach((done) => {\\n\\ttest\\n});');\n\n\t\t}, ['af']);\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelection(new Selection(1, 3, 1, 3));\n\n\t\t\tcodeSnippet = [\n\t\t\t\t'afterEach((done) => {',\n\t\t\t\t'${1}\\ttest',\n\t\t\t\t'});'\n\t\t\t].join('\\n');\n\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 2 });\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 1);\n\t\t\tassert.ok(editor.getSelection()!.equalsRange({ startLineNumber: 2, startColumn: 1, endLineNumber: 2, endColumn: 1 }), editor.getSelection()!.toString());\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'afterEach((done) => {\\n\\ttest\\n});');\n\n\t\t}, ['af']);\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelection(new Selection(1, 9, 1, 9));\n\n\t\t\tcodeSnippet = [\n\t\t\t\t'aft${1}er'\n\t\t\t].join('\\n');\n\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 8 });\n\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'after');\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 1);\n\t\t\tassert.ok(editor.getSelection()!.equalsRange({ startLineNumber: 1, startColumn: 4, endLineNumber: 1, endColumn: 4 }), editor.getSelection()!.toString());\n\n\t\t}, ['afterone']);\n\t});\n\n\ttest('Final tabstop, #11742 different indents', () => {\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(2, 4, 2, 4),\n\t\t\t\tnew Selection(1, 3, 1, 3)\n\t\t\t]);\n\n\t\t\tcodeSnippet = [\n\t\t\t\t'afterEach((done) => {',\n\t\t\t\t'\\t${0}test',\n\t\t\t\t'});'\n\t\t\t].join('\\n');\n\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 2 });\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 2);\n\t\t\tconst [first, second] = editor.getSelections()!;\n\n\t\t\tassert.ok(first.equalsRange({ startLineNumber: 5, startColumn: 3, endLineNumber: 5, endColumn: 3 }), first.toString());\n\t\t\tassert.ok(second.equalsRange({ startLineNumber: 2, startColumn: 2, endLineNumber: 2, endColumn: 2 }), second.toString());\n\n\t\t}, ['af', '\\taf']);\n\t});\n\n\ttest('Final tabstop, #11890 stay at the beginning', () => {\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 5, 1, 5)\n\t\t\t]);\n\n\t\t\tcodeSnippet = [\n\t\t\t\t'afterEach((done) => {',\n\t\t\t\t'${1}\\ttest',\n\t\t\t\t'});'\n\t\t\t].join('\\n');\n\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 2 });\n\n\t\t\tassert.strictEqual(editor.getSelections()!.length, 1);\n\t\t\tconst [first] = editor.getSelections()!;\n\n\t\t\tassert.ok(first.equalsRange({ startLineNumber: 2, startColumn: 3, endLineNumber: 2, endColumn: 3 }), first.toString());\n\n\t\t}, ['  af']);\n\t});\n\n\ttest('Final tabstop, no tabstop', () => {\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 3, 1, 3)\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'afterEach';\n\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 2 });\n\n\t\t\tassert.ok(editor.getSelection()!.equalsRange({ startLineNumber: 1, startColumn: 10, endLineNumber: 1, endColumn: 10 }));\n\n\t\t}, ['af', '\\taf']);\n\t});\n\n\ttest('Multiple cursor and overwriteBefore/After, issue #11060', () => {\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 7, 1, 7),\n\t\t\t\tnew Selection(2, 4, 2, 4)\n\t\t\t]);\n\n\t\t\tcodeSnippet = '_foo';\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 1 });\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'this._foo\\nabc_foo');\n\n\t\t}, ['this._', 'abc']);\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 7, 1, 7),\n\t\t\t\tnew Selection(2, 4, 2, 4)\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'XX';\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 1 });\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'this.XX\\nabcXX');\n\n\t\t}, ['this._', 'abc']);\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 7, 1, 7),\n\t\t\t\tnew Selection(2, 4, 2, 4),\n\t\t\t\tnew Selection(3, 5, 3, 5)\n\t\t\t]);\n\n\t\t\tcodeSnippet = '_foo';\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 1 });\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'this._foo\\nabc_foo\\ndef_foo');\n\n\t\t}, ['this._', 'abc', 'def_']);\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 7, 1, 7), // primary at `this._`\n\t\t\t\tnew Selection(2, 4, 2, 4),\n\t\t\t\tnew Selection(3, 6, 3, 6)\n\t\t\t]);\n\n\t\t\tcodeSnippet = '._foo';\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 2 });\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'this._foo\\nabc._foo\\ndef._foo');\n\n\t\t}, ['this._', 'abc', 'def._']);\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(3, 6, 3, 6), // primary at `def._`\n\t\t\t\tnew Selection(1, 7, 1, 7),\n\t\t\t\tnew Selection(2, 4, 2, 4),\n\t\t\t]);\n\n\t\t\tcodeSnippet = '._foo';\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 2 });\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'this._foo\\nabc._foo\\ndef._foo');\n\n\t\t}, ['this._', 'abc', 'def._']);\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(2, 4, 2, 4), // primary at `abc`\n\t\t\t\tnew Selection(3, 6, 3, 6),\n\t\t\t\tnew Selection(1, 7, 1, 7),\n\t\t\t]);\n\n\t\t\tcodeSnippet = '._foo';\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 2 });\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'this._._foo\\na._foo\\ndef._._foo');\n\n\t\t}, ['this._', 'abc', 'def._']);\n\n\t});\n\n\ttest('Multiple cursor and overwriteBefore/After, #16277', () => {\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t\tnew Selection(2, 5, 2, 5),\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'document';\n\t\t\tcontroller.insert(codeSnippet, { overwriteBefore: 3 });\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), '{document}\\n{document && true}');\n\n\t\t}, ['{foo}', '{foo && true}']);\n\t});\n\n\ttest('Insert snippet twice, #19449', () => {\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1, 1, 1)\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'for (var ${1:i}=0; ${1:i}<len; ${1:i}++) { $0 }';\n\t\t\tcontroller.insert(codeSnippet);\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'for (var i=0; i<len; i++) {  }for (var i=0; i<len; i++) {  }');\n\n\t\t}, ['for (var i=0; i<len; i++) {  }']);\n\n\n\t\tsnippetTest((editor, codeSnippet, controller) => {\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1, 1, 1)\n\t\t\t]);\n\n\t\t\tcodeSnippet = 'for (let ${1:i}=0; ${1:i}<len; ${1:i}++) { $0 }';\n\t\t\tcontroller.insert(codeSnippet);\n\t\t\tassert.strictEqual(editor.getModel()!.getValue(), 'for (let i=0; i<len; i++) {  }for (var i=0; i<len; i++) {  }');\n\n\t\t}, ['for (var i=0; i<len; i++) {  }']);\n\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
