import{LinkedList as L}from"../../../../base/common/linkedList.js";import{Position as p}from"../../../common/core/position.js";import{Range as u}from"../../../common/core/range.js";class f{async provideSelectionRanges(i,e){const r=[];for(const n of e){const o=[];r.push(o);const t=new Map;await new Promise(s=>f._bracketsRightYield(s,0,i,n,t)),await new Promise(s=>f._bracketsLeftYield(s,0,i,n,t,o))}return r}static _maxDuration=30;static _maxRounds=2;static _bracketsRightYield(i,e,r,n,o){const t=new Map,s=Date.now();for(;;){if(e>=f._maxRounds){i();break}if(!n){i();break}const m=r.bracketPairs.findNextBracket(n);if(!m){i();break}if(Date.now()-s>f._maxDuration){setTimeout(()=>f._bracketsRightYield(i,e+1,r,n,o));break}if(m.bracketInfo.isOpeningBracket){const c=m.bracketInfo.bracketText,a=t.has(c)?t.get(c):0;t.set(c,a+1)}else{const c=m.bracketInfo.getOpeningBrackets()[0].bracketText;let a=t.has(c)?t.get(c):0;if(a-=1,t.set(c,Math.max(0,a)),a<0){let g=o.get(c);g||(g=new L,o.set(c,g)),g.push(m.range)}}n=m.range.getEndPosition()}}static _bracketsLeftYield(i,e,r,n,o,t){const s=new Map,m=Date.now();for(;;){if(e>=f._maxRounds&&o.size===0){i();break}if(!n){i();break}const d=r.bracketPairs.findPrevBracket(n);if(!d){i();break}if(Date.now()-m>f._maxDuration){setTimeout(()=>f._bracketsLeftYield(i,e+1,r,n,o,t));break}if(d.bracketInfo.isOpeningBracket){const a=d.bracketInfo.bracketText;let g=s.has(a)?s.get(a):0;if(g-=1,s.set(a,Math.max(0,g)),g<0){const l=o.get(a);if(l){const k=l.shift();l.size===0&&o.delete(a);const h=u.fromPositions(d.range.getEndPosition(),k.getStartPosition()),b=u.fromPositions(d.range.getStartPosition(),k.getEndPosition());t.push({range:h}),t.push({range:b}),f._addBracketLeading(r,b,t)}}}else{const a=d.bracketInfo.getOpeningBrackets()[0].bracketText,g=s.has(a)?s.get(a):0;s.set(a,g+1)}n=d.range.getStartPosition()}}static _addBracketLeading(i,e,r){if(e.startLineNumber===e.endLineNumber)return;const n=e.startLineNumber,o=i.getLineFirstNonWhitespaceColumn(n);o!==0&&o!==e.startColumn&&(r.push({range:u.fromPositions(new p(n,o),e.getEndPosition())}),r.push({range:u.fromPositions(new p(n,1),e.getEndPosition())}));const t=n-1;if(t>0){const s=i.getLineFirstNonWhitespaceColumn(t);s===e.startColumn&&s!==i.getLineLastNonWhitespaceColumn(t)&&(r.push({range:u.fromPositions(new p(t,s),e.getEndPosition())}),r.push({range:u.fromPositions(new p(t,1),e.getEndPosition())}))}}}export{f as BracketSelectionRangeProvider};
