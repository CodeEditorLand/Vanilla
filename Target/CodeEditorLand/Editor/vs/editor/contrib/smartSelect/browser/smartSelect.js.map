{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/smartSelect/browser/smartSelect.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorContributionInstantiation, IActionOptions, registerEditorAction, registerEditorContribution, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ITextModel } from '../../../common/model.js';\nimport * as languages from '../../../common/languages.js';\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\nimport { WordSelectionRangeProvider } from './wordSelections.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\n\nclass SelectionRanges {\n\n\tconstructor(\n\t\treadonly index: number,\n\t\treadonly ranges: Range[]\n\t) { }\n\n\tmov(fwd: boolean): SelectionRanges {\n\t\tconst index = this.index + (fwd ? 1 : -1);\n\t\tif (index < 0 || index >= this.ranges.length) {\n\t\t\treturn this;\n\t\t}\n\t\tconst res = new SelectionRanges(index, this.ranges);\n\t\tif (res.ranges[index].equalsRange(this.ranges[this.index])) {\n\t\t\t// next range equals this range, retry with next-next\n\t\t\treturn res.mov(fwd);\n\t\t}\n\t\treturn res;\n\t}\n}\n\nexport class SmartSelectController implements IEditorContribution {\n\n\tstatic readonly ID = 'editor.contrib.smartSelectController';\n\n\tstatic get(editor: ICodeEditor): SmartSelectController | null {\n\t\treturn editor.getContribution<SmartSelectController>(SmartSelectController.ID);\n\t}\n\n\tprivate _state?: SelectionRanges[];\n\tprivate _selectionListener?: IDisposable;\n\tprivate _ignoreSelection: boolean = false;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t) { }\n\n\tdispose(): void {\n\t\tthis._selectionListener?.dispose();\n\t}\n\n\tasync run(forward: boolean): Promise<void> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selections = this._editor.getSelections();\n\t\tconst model = this._editor.getModel();\n\n\t\tif (!this._state) {\n\n\t\t\tawait provideSelectionRanges(this._languageFeaturesService.selectionRangeProvider, model, selections.map(s => s.getPosition()), this._editor.getOption(EditorOption.smartSelect), CancellationToken.None).then(ranges => {\n\t\t\t\tif (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n\t\t\t\t\t// invalid result\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\n\t\t\t\t\t// invalid editor state\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < ranges.length; i++) {\n\t\t\t\t\tranges[i] = ranges[i].filter(range => {\n\t\t\t\t\t\t// filter ranges inside the selection\n\t\t\t\t\t\treturn range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n\t\t\t\t\t});\n\t\t\t\t\t// prepend current selection\n\t\t\t\t\tranges[i].unshift(selections[i]);\n\t\t\t\t}\n\n\n\t\t\t\tthis._state = ranges.map(ranges => new SelectionRanges(0, ranges));\n\n\t\t\t\t// listen to caret move and forget about state\n\t\t\t\tthis._selectionListener?.dispose();\n\t\t\t\tthis._selectionListener = this._editor.onDidChangeCursorPosition(() => {\n\t\t\t\t\tif (!this._ignoreSelection) {\n\t\t\t\t\t\tthis._selectionListener?.dispose();\n\t\t\t\t\t\tthis._state = undefined;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (!this._state) {\n\t\t\t// no state\n\t\t\treturn;\n\t\t}\n\t\tthis._state = this._state.map(state => state.mov(forward));\n\t\tconst newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\n\t\tthis._ignoreSelection = true;\n\t\ttry {\n\t\t\tthis._editor.setSelections(newSelections);\n\t\t} finally {\n\t\t\tthis._ignoreSelection = false;\n\t\t}\n\t}\n}\n\nabstract class AbstractSmartSelect extends EditorAction {\n\n\tprivate readonly _forward: boolean;\n\n\tconstructor(forward: boolean, opts: IActionOptions) {\n\t\tsuper(opts);\n\t\tthis._forward = forward;\n\t}\n\n\tasync run(_accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = SmartSelectController.get(editor);\n\t\tif (controller) {\n\t\t\tawait controller.run(this._forward);\n\t\t}\n\t}\n}\n\nclass GrowSelectionAction extends AbstractSmartSelect {\n\tconstructor() {\n\t\tsuper(true, {\n\t\t\tid: 'editor.action.smartSelect.expand',\n\t\t\tlabel: nls.localize('smartSelect.expand', \"Expand Selection\"),\n\t\t\talias: 'Expand Selection',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.RightArrow,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyMod.Shift | KeyCode.RightArrow,\n\t\t\t\t\tsecondary: [KeyMod.WinCtrl | KeyMod.Shift | KeyCode.RightArrow],\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '1_basic',\n\t\t\t\ttitle: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\n\t\t\t\torder: 2\n\t\t\t}\n\t\t});\n\t}\n}\n\n// renamed command id\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\n\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n\tconstructor() {\n\t\tsuper(false, {\n\t\t\tid: 'editor.action.smartSelect.shrink',\n\t\t\tlabel: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n\t\t\talias: 'Shrink Selection',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyMod.Shift | KeyCode.LeftArrow,\n\t\t\t\t\tsecondary: [KeyMod.WinCtrl | KeyMod.Shift | KeyCode.LeftArrow],\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '1_basic',\n\t\t\t\ttitle: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n}\n\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController, EditorContributionInstantiation.Lazy);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction);\n\nexport interface SelectionRangesOptions {\n\tselectLeadingAndTrailingWhitespace: boolean;\n\tselectSubwords: boolean;\n}\n\nexport async function provideSelectionRanges(registry: LanguageFeatureRegistry<languages.SelectionRangeProvider>, model: ITextModel, positions: Position[], options: SelectionRangesOptions, token: CancellationToken): Promise<Range[][]> {\n\n\tconst providers = registry.all(model)\n\t\t.concat(new WordSelectionRangeProvider(options.selectSubwords)); // ALWAYS have word based selection range\n\n\tif (providers.length === 1) {\n\t\t// add word selection and bracket selection when no provider exists\n\t\tproviders.unshift(new BracketSelectionRangeProvider());\n\t}\n\n\tconst work: Promise<any>[] = [];\n\tconst allRawRanges: Range[][] = [];\n\n\tfor (const provider of providers) {\n\n\t\twork.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\n\t\t\tif (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n\t\t\t\tfor (let i = 0; i < positions.length; i++) {\n\t\t\t\t\tif (!allRawRanges[i]) {\n\t\t\t\t\t\tallRawRanges[i] = [];\n\t\t\t\t\t}\n\t\t\t\t\tfor (const oneProviderRanges of allProviderRanges[i]) {\n\t\t\t\t\t\tif (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n\t\t\t\t\t\t\tallRawRanges[i].push(Range.lift(oneProviderRanges.range));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, onUnexpectedExternalError));\n\t}\n\n\tawait Promise.all(work);\n\n\treturn allRawRanges.map(oneRawRanges => {\n\n\t\tif (oneRawRanges.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// sort all by start/end position\n\t\toneRawRanges.sort((a, b) => {\n\t\t\tif (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n\t\t\t\treturn 1;\n\t\t\t} else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n\t\t\t\treturn -1;\n\t\t\t} else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n\t\t\t\treturn -1;\n\t\t\t} else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\t// remove ranges that don't contain the former range or that are equal to the\n\t\t// former range\n\t\tconst oneRanges: Range[] = [];\n\t\tlet last: Range | undefined;\n\t\tfor (const range of oneRawRanges) {\n\t\t\tif (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\n\t\t\t\toneRanges.push(range);\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\tif (!options.selectLeadingAndTrailingWhitespace) {\n\t\t\treturn oneRanges;\n\t\t}\n\n\t\t// add ranges that expand trivia at line starts and ends whenever a range\n\t\t// wraps onto the a new line\n\t\tconst oneRangesWithTrivia: Range[] = [oneRanges[0]];\n\t\tfor (let i = 1; i < oneRanges.length; i++) {\n\t\t\tconst prev = oneRanges[i - 1];\n\t\t\tconst cur = oneRanges[i];\n\t\t\tif (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n\t\t\t\t// add line/block range without leading/failing whitespace\n\t\t\t\tconst rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n\t\t\t\tif (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\n\t\t\t\t\toneRangesWithTrivia.push(rangeNoWhitespace);\n\t\t\t\t}\n\t\t\t\t// add line/block range\n\t\t\t\tconst rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n\t\t\t\tif (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\n\t\t\t\t\toneRangesWithTrivia.push(rangeFull);\n\t\t\t\t}\n\t\t\t}\n\t\t\toneRangesWithTrivia.push(cur);\n\t\t}\n\t\treturn oneRangesWithTrivia;\n\t});\n}\n\n\nCommandsRegistry.registerCommand('_executeSelectionRangeProvider', async function (accessor, ...args) {\n\n\tconst [resource, positions] = args;\n\tassertType(URI.isUri(resource));\n\n\tconst registry = accessor.get(ILanguageFeaturesService).selectionRangeProvider;\n\tconst reference = await accessor.get(ITextModelService).createModelReference(resource);\n\n\ttry {\n\t\treturn provideSelectionRanges(registry, reference.object.textEditorModel, positions, { selectLeadingAndTrailingWhitespace: true, selectSubwords: true }, CancellationToken.None);\n\t} finally {\n\t\treference.dispose();\n\t}\n});\n"],
  "mappings": "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",
  "names": ["ranges"]
}
