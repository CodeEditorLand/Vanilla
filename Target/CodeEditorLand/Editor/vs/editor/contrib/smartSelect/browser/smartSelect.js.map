{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/smartSelect/browser/smartSelect.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from \"../../../../base/common/arrays.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { onUnexpectedExternalError } from \"../../../../base/common/errors.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { assertType } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorContributionInstantiation,\n\ttype IActionOptions,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport type { LanguageFeatureRegistry } from \"../../../common/languageFeatureRegistry.js\";\nimport type * as languages from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { ITextModelService } from \"../../../common/services/resolverService.js\";\nimport { BracketSelectionRangeProvider } from \"./bracketSelections.js\";\nimport { WordSelectionRangeProvider } from \"./wordSelections.js\";\n\nclass SelectionRanges {\n\tconstructor(\n\t\treadonly index: number,\n\t\treadonly ranges: Range[],\n\t) {}\n\n\tmov(fwd: boolean): SelectionRanges {\n\t\tconst index = this.index + (fwd ? 1 : -1);\n\t\tif (index < 0 || index >= this.ranges.length) {\n\t\t\treturn this;\n\t\t}\n\t\tconst res = new SelectionRanges(index, this.ranges);\n\t\tif (res.ranges[index].equalsRange(this.ranges[this.index])) {\n\t\t\t// next range equals this range, retry with next-next\n\t\t\treturn res.mov(fwd);\n\t\t}\n\t\treturn res;\n\t}\n}\n\nexport class SmartSelectController implements IEditorContribution {\n\tstatic readonly ID = \"editor.contrib.smartSelectController\";\n\n\tstatic get(editor: ICodeEditor): SmartSelectController | null {\n\t\treturn editor.getContribution<SmartSelectController>(\n\t\t\tSmartSelectController.ID,\n\t\t);\n\t}\n\n\tprivate _state?: SelectionRanges[];\n\tprivate _selectionListener?: IDisposable;\n\tprivate _ignoreSelection = false;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly _languageFeaturesService: ILanguageFeaturesService,\n\t) {}\n\n\tdispose(): void {\n\t\tthis._selectionListener?.dispose();\n\t}\n\n\tasync run(forward: boolean): Promise<void> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selections = this._editor.getSelections();\n\t\tconst model = this._editor.getModel();\n\n\t\tif (!this._state) {\n\t\t\tawait provideSelectionRanges(\n\t\t\t\tthis._languageFeaturesService.selectionRangeProvider,\n\t\t\t\tmodel,\n\t\t\t\tselections.map((s) => s.getPosition()),\n\t\t\t\tthis._editor.getOption(EditorOption.smartSelect),\n\t\t\t\tCancellationToken.None,\n\t\t\t).then((ranges) => {\n\t\t\t\tif (\n\t\t\t\t\t!arrays.isNonEmptyArray(ranges) ||\n\t\t\t\t\tranges.length !== selections.length\n\t\t\t\t) {\n\t\t\t\t\t// invalid result\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t!this._editor.hasModel() ||\n\t\t\t\t\t!arrays.equals(\n\t\t\t\t\t\tthis._editor.getSelections(),\n\t\t\t\t\t\tselections,\n\t\t\t\t\t\t(a, b) => a.equalsSelection(b),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// invalid editor state\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < ranges.length; i++) {\n\t\t\t\t\tranges[i] = ranges[i].filter((range) => {\n\t\t\t\t\t\t// filter ranges inside the selection\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\trange.containsPosition(\n\t\t\t\t\t\t\t\tselections[i].getStartPosition(),\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\trange.containsPosition(\n\t\t\t\t\t\t\t\tselections[i].getEndPosition(),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\t// prepend current selection\n\t\t\t\t\tranges[i].unshift(selections[i]);\n\t\t\t\t}\n\n\t\t\t\tthis._state = ranges.map(\n\t\t\t\t\t(ranges) => new SelectionRanges(0, ranges),\n\t\t\t\t);\n\n\t\t\t\t// listen to caret move and forget about state\n\t\t\t\tthis._selectionListener?.dispose();\n\t\t\t\tthis._selectionListener =\n\t\t\t\t\tthis._editor.onDidChangeCursorPosition(() => {\n\t\t\t\t\t\tif (!this._ignoreSelection) {\n\t\t\t\t\t\t\tthis._selectionListener?.dispose();\n\t\t\t\t\t\t\tthis._state = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (!this._state) {\n\t\t\t// no state\n\t\t\treturn;\n\t\t}\n\t\tthis._state = this._state.map((state) => state.mov(forward));\n\t\tconst newSelections = this._state.map((state) =>\n\t\t\tSelection.fromPositions(\n\t\t\t\tstate.ranges[state.index].getStartPosition(),\n\t\t\t\tstate.ranges[state.index].getEndPosition(),\n\t\t\t),\n\t\t);\n\t\tthis._ignoreSelection = true;\n\t\ttry {\n\t\t\tthis._editor.setSelections(newSelections);\n\t\t} finally {\n\t\t\tthis._ignoreSelection = false;\n\t\t}\n\t}\n}\n\nabstract class AbstractSmartSelect extends EditorAction {\n\tprivate readonly _forward: boolean;\n\n\tconstructor(forward: boolean, opts: IActionOptions) {\n\t\tsuper(opts);\n\t\tthis._forward = forward;\n\t}\n\n\tasync run(_accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = SmartSelectController.get(editor);\n\t\tif (controller) {\n\t\t\tawait controller.run(this._forward);\n\t\t}\n\t}\n}\n\nclass GrowSelectionAction extends AbstractSmartSelect {\n\tconstructor() {\n\t\tsuper(true, {\n\t\t\tid: \"editor.action.smartSelect.expand\",\n\t\t\tlabel: nls.localize(\"smartSelect.expand\", \"Expand Selection\"),\n\t\t\talias: \"Expand Selection\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.RightArrow,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary:\n\t\t\t\t\t\tKeyMod.CtrlCmd |\n\t\t\t\t\t\tKeyMod.WinCtrl |\n\t\t\t\t\t\tKeyMod.Shift |\n\t\t\t\t\t\tKeyCode.RightArrow,\n\t\t\t\t\tsecondary: [\n\t\t\t\t\t\tKeyMod.WinCtrl | KeyMod.Shift | KeyCode.RightArrow,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: \"1_basic\",\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miSmartSelectGrow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Expand Selection\",\n\t\t\t\t),\n\t\t\t\torder: 2,\n\t\t\t},\n\t\t});\n\t}\n}\n\n// renamed command id\nCommandsRegistry.registerCommandAlias(\n\t\"editor.action.smartSelect.grow\",\n\t\"editor.action.smartSelect.expand\",\n);\n\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n\tconstructor() {\n\t\tsuper(false, {\n\t\t\tid: \"editor.action.smartSelect.shrink\",\n\t\t\tlabel: nls.localize(\"smartSelect.shrink\", \"Shrink Selection\"),\n\t\t\talias: \"Shrink Selection\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary:\n\t\t\t\t\t\tKeyMod.CtrlCmd |\n\t\t\t\t\t\tKeyMod.WinCtrl |\n\t\t\t\t\t\tKeyMod.Shift |\n\t\t\t\t\t\tKeyCode.LeftArrow,\n\t\t\t\t\tsecondary: [\n\t\t\t\t\t\tKeyMod.WinCtrl | KeyMod.Shift | KeyCode.LeftArrow,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: \"1_basic\",\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miSmartSelectShrink\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Shrink Selection\",\n\t\t\t\t),\n\t\t\t\torder: 3,\n\t\t\t},\n\t\t});\n\t}\n}\n\nregisterEditorContribution(\n\tSmartSelectController.ID,\n\tSmartSelectController,\n\tEditorContributionInstantiation.Lazy,\n);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction);\n\nexport interface SelectionRangesOptions {\n\tselectLeadingAndTrailingWhitespace: boolean;\n\tselectSubwords: boolean;\n}\n\nexport async function provideSelectionRanges(\n\tregistry: LanguageFeatureRegistry<languages.SelectionRangeProvider>,\n\tmodel: ITextModel,\n\tpositions: Position[],\n\toptions: SelectionRangesOptions,\n\ttoken: CancellationToken,\n): Promise<Range[][]> {\n\tconst providers = registry\n\t\t.all(model)\n\t\t.concat(new WordSelectionRangeProvider(options.selectSubwords)); // ALWAYS have word based selection range\n\n\tif (providers.length === 1) {\n\t\t// add word selection and bracket selection when no provider exists\n\t\tproviders.unshift(new BracketSelectionRangeProvider());\n\t}\n\n\tconst work: Promise<any>[] = [];\n\tconst allRawRanges: Range[][] = [];\n\n\tfor (const provider of providers) {\n\t\twork.push(\n\t\t\tPromise.resolve(\n\t\t\t\tprovider.provideSelectionRanges(model, positions, token),\n\t\t\t).then((allProviderRanges) => {\n\t\t\t\tif (\n\t\t\t\t\tarrays.isNonEmptyArray(allProviderRanges) &&\n\t\t\t\t\tallProviderRanges.length === positions.length\n\t\t\t\t) {\n\t\t\t\t\tfor (let i = 0; i < positions.length; i++) {\n\t\t\t\t\t\tif (!allRawRanges[i]) {\n\t\t\t\t\t\t\tallRawRanges[i] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const oneProviderRanges of allProviderRanges[i]) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tRange.isIRange(oneProviderRanges.range) &&\n\t\t\t\t\t\t\t\tRange.containsPosition(\n\t\t\t\t\t\t\t\t\toneProviderRanges.range,\n\t\t\t\t\t\t\t\t\tpositions[i],\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tallRawRanges[i].push(\n\t\t\t\t\t\t\t\t\tRange.lift(oneProviderRanges.range),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, onUnexpectedExternalError),\n\t\t);\n\t}\n\n\tawait Promise.all(work);\n\n\treturn allRawRanges.map((oneRawRanges) => {\n\t\tif (oneRawRanges.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// sort all by start/end position\n\t\toneRawRanges.sort((a, b) => {\n\t\t\tif (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n\t\t\t\treturn 1;\n\t\t\t} else if (\n\t\t\t\tPosition.isBefore(b.getStartPosition(), a.getStartPosition())\n\t\t\t) {\n\t\t\t\treturn -1;\n\t\t\t} else if (\n\t\t\t\tPosition.isBefore(a.getEndPosition(), b.getEndPosition())\n\t\t\t) {\n\t\t\t\treturn -1;\n\t\t\t} else if (\n\t\t\t\tPosition.isBefore(b.getEndPosition(), a.getEndPosition())\n\t\t\t) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\t// remove ranges that don't contain the former range or that are equal to the\n\t\t// former range\n\t\tconst oneRanges: Range[] = [];\n\t\tlet last: Range | undefined;\n\t\tfor (const range of oneRawRanges) {\n\t\t\tif (\n\t\t\t\t!last ||\n\t\t\t\t(Range.containsRange(range, last) &&\n\t\t\t\t\t!Range.equalsRange(range, last))\n\t\t\t) {\n\t\t\t\toneRanges.push(range);\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\tif (!options.selectLeadingAndTrailingWhitespace) {\n\t\t\treturn oneRanges;\n\t\t}\n\n\t\t// add ranges that expand trivia at line starts and ends whenever a range\n\t\t// wraps onto the a new line\n\t\tconst oneRangesWithTrivia: Range[] = [oneRanges[0]];\n\t\tfor (let i = 1; i < oneRanges.length; i++) {\n\t\t\tconst prev = oneRanges[i - 1];\n\t\t\tconst cur = oneRanges[i];\n\t\t\tif (\n\t\t\t\tcur.startLineNumber !== prev.startLineNumber ||\n\t\t\t\tcur.endLineNumber !== prev.endLineNumber\n\t\t\t) {\n\t\t\t\t// add line/block range without leading/failing whitespace\n\t\t\t\tconst rangeNoWhitespace = new Range(\n\t\t\t\t\tprev.startLineNumber,\n\t\t\t\t\tmodel.getLineFirstNonWhitespaceColumn(prev.startLineNumber),\n\t\t\t\t\tprev.endLineNumber,\n\t\t\t\t\tmodel.getLineLastNonWhitespaceColumn(prev.endLineNumber),\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\trangeNoWhitespace.containsRange(prev) &&\n\t\t\t\t\t!rangeNoWhitespace.equalsRange(prev) &&\n\t\t\t\t\tcur.containsRange(rangeNoWhitespace) &&\n\t\t\t\t\t!cur.equalsRange(rangeNoWhitespace)\n\t\t\t\t) {\n\t\t\t\t\toneRangesWithTrivia.push(rangeNoWhitespace);\n\t\t\t\t}\n\t\t\t\t// add line/block range\n\t\t\t\tconst rangeFull = new Range(\n\t\t\t\t\tprev.startLineNumber,\n\t\t\t\t\t1,\n\t\t\t\t\tprev.endLineNumber,\n\t\t\t\t\tmodel.getLineMaxColumn(prev.endLineNumber),\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\trangeFull.containsRange(prev) &&\n\t\t\t\t\t!rangeFull.equalsRange(rangeNoWhitespace) &&\n\t\t\t\t\tcur.containsRange(rangeFull) &&\n\t\t\t\t\t!cur.equalsRange(rangeFull)\n\t\t\t\t) {\n\t\t\t\t\toneRangesWithTrivia.push(rangeFull);\n\t\t\t\t}\n\t\t\t}\n\t\t\toneRangesWithTrivia.push(cur);\n\t\t}\n\t\treturn oneRangesWithTrivia;\n\t});\n}\n\nCommandsRegistry.registerCommand(\n\t\"_executeSelectionRangeProvider\",\n\tasync (accessor, ...args) => {\n\t\tconst [resource, positions] = args;\n\t\tassertType(URI.isUri(resource));\n\n\t\tconst registry = accessor.get(\n\t\t\tILanguageFeaturesService,\n\t\t).selectionRangeProvider;\n\t\tconst reference = await accessor\n\t\t\t.get(ITextModelService)\n\t\t\t.createModelReference(resource);\n\n\t\ttry {\n\t\t\treturn provideSelectionRanges(\n\t\t\t\tregistry,\n\t\t\t\treference.object.textEditorModel,\n\t\t\t\tpositions,\n\t\t\t\t{\n\t\t\t\t\tselectLeadingAndTrailingWhitespace: true,\n\t\t\t\t\tselectSubwords: true,\n\t\t\t\t},\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t} finally {\n\t\t\treference.dispose();\n\t\t}\n\t},\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,YAAY;AACxB,SAAS,yBAAyB;AAClC,SAAS,iCAAiC;AAC1C,SAAS,SAAS,cAAc;AAEhC,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,YAAY,SAAS;AACrB,SAAS,cAAc;AACvB,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AAEjC;AAAA,EACC;AAAA,EACA;AAAA,EAGA;AAAA,EACA;AAAA,OACM;AACP,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AACzB,SAAS,aAAa;AACtB,SAAS,iBAAiB;AAE1B,SAAS,yBAAyB;AAIlC,SAAS,gCAAgC;AACzC,SAAS,yBAAyB;AAClC,SAAS,qCAAqC;AAC9C,SAAS,kCAAkC;AAE3C,MAAM,gBAAgB;AAAA,EACrB,YACU,OACA,QACR;AAFQ;AACA;AAAA,EACP;AAAA,EA3CJ,OAuCsB;AAAA;AAAA;AAAA,EAMrB,IAAI,KAA+B;AAClC,UAAM,QAAQ,KAAK,SAAS,MAAM,IAAI;AACtC,QAAI,QAAQ,KAAK,SAAS,KAAK,OAAO,QAAQ;AAC7C,aAAO;AAAA,IACR;AACA,UAAM,MAAM,IAAI,gBAAgB,OAAO,KAAK,MAAM;AAClD,QAAI,IAAI,OAAO,KAAK,EAAE,YAAY,KAAK,OAAO,KAAK,KAAK,CAAC,GAAG;AAE3D,aAAO,IAAI,IAAI,GAAG;AAAA,IACnB;AACA,WAAO;AAAA,EACR;AACD;AAEO,IAAM,wBAAN,MAA2D;AAAA,EAajE,YACkB,SAEA,0BAChB;AAHgB;AAEA;AAAA,EACf;AAAA,EA5EJ,OA2DkE;AAAA;AAAA;AAAA,EACjE,OAAgB,KAAK;AAAA,EAErB,OAAO,IAAI,QAAmD;AAC7D,WAAO,OAAO;AAAA,MACb,sBAAsB;AAAA,IACvB;AAAA,EACD;AAAA,EAEQ;AAAA,EACA;AAAA,EACA,mBAAmB;AAAA,EAQ3B,UAAgB;AACf,SAAK,oBAAoB,QAAQ;AAAA,EAClC;AAAA,EAEA,MAAM,IAAI,SAAiC;AAC1C,QAAI,CAAC,KAAK,QAAQ,SAAS,GAAG;AAC7B;AAAA,IACD;AAEA,UAAM,aAAa,KAAK,QAAQ,cAAc;AAC9C,UAAM,QAAQ,KAAK,QAAQ,SAAS;AAEpC,QAAI,CAAC,KAAK,QAAQ;AACjB,YAAM;AAAA,QACL,KAAK,yBAAyB;AAAA,QAC9B;AAAA,QACA,WAAW,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;AAAA,QACrC,KAAK,QAAQ,UAAU,aAAa,WAAW;AAAA,QAC/C,kBAAkB;AAAA,MACnB,EAAE,KAAK,CAAC,WAAW;AAClB,YACC,CAAC,OAAO,gBAAgB,MAAM,KAC9B,OAAO,WAAW,WAAW,QAC5B;AAED;AAAA,QACD;AACA,YACC,CAAC,KAAK,QAAQ,SAAS,KACvB,CAAC,OAAO;AAAA,UACP,KAAK,QAAQ,cAAc;AAAA,UAC3B;AAAA,UACA,CAAC,GAAG,MAAM,EAAE,gBAAgB,CAAC;AAAA,QAC9B,GACC;AAED;AAAA,QACD;AAEA,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACvC,iBAAO,CAAC,IAAI,OAAO,CAAC,EAAE,OAAO,CAAC,UAAU;AAEvC,mBACC,MAAM;AAAA,cACL,WAAW,CAAC,EAAE,iBAAiB;AAAA,YAChC,KACA,MAAM;AAAA,cACL,WAAW,CAAC,EAAE,eAAe;AAAA,YAC9B;AAAA,UAEF,CAAC;AAED,iBAAO,CAAC,EAAE,QAAQ,WAAW,CAAC,CAAC;AAAA,QAChC;AAEA,aAAK,SAAS,OAAO;AAAA,UACpB,CAACA,YAAW,IAAI,gBAAgB,GAAGA,OAAM;AAAA,QAC1C;AAGA,aAAK,oBAAoB,QAAQ;AACjC,aAAK,qBACJ,KAAK,QAAQ,0BAA0B,MAAM;AAC5C,cAAI,CAAC,KAAK,kBAAkB;AAC3B,iBAAK,oBAAoB,QAAQ;AACjC,iBAAK,SAAS;AAAA,UACf;AAAA,QACD,CAAC;AAAA,MACH,CAAC;AAAA,IACF;AAEA,QAAI,CAAC,KAAK,QAAQ;AAEjB;AAAA,IACD;AACA,SAAK,SAAS,KAAK,OAAO,IAAI,CAAC,UAAU,MAAM,IAAI,OAAO,CAAC;AAC3D,UAAM,gBAAgB,KAAK,OAAO;AAAA,MAAI,CAAC,UACtC,UAAU;AAAA,QACT,MAAM,OAAO,MAAM,KAAK,EAAE,iBAAiB;AAAA,QAC3C,MAAM,OAAO,MAAM,KAAK,EAAE,eAAe;AAAA,MAC1C;AAAA,IACD;AACA,SAAK,mBAAmB;AACxB,QAAI;AACH,WAAK,QAAQ,cAAc,aAAa;AAAA,IACzC,UAAE;AACD,WAAK,mBAAmB;AAAA,IACzB;AAAA,EACD;AACD;AA5Ga,wBAAN;AAAA,EAeJ;AAAA,GAfU;AA8Gb,MAAe,4BAA4B,aAAa;AAAA,EAzKxD,OAyKwD;AAAA;AAAA;AAAA,EACtC;AAAA,EAEjB,YAAY,SAAkB,MAAsB;AACnD,UAAM,IAAI;AACV,SAAK,WAAW;AAAA,EACjB;AAAA,EAEA,MAAM,IAAI,WAA6B,QAAoC;AAC1E,UAAM,aAAa,sBAAsB,IAAI,MAAM;AACnD,QAAI,YAAY;AACf,YAAM,WAAW,IAAI,KAAK,QAAQ;AAAA,IACnC;AAAA,EACD;AACD;AAEA,MAAM,4BAA4B,oBAAoB;AAAA,EAzLtD,OAyLsD;AAAA;AAAA;AAAA,EACrD,cAAc;AACb,UAAM,MAAM;AAAA,MACX,IAAI;AAAA,MACJ,OAAO,IAAI,SAAS,sBAAsB,kBAAkB;AAAA,MAC5D,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QACP,QAAQ,kBAAkB;AAAA,QAC1B,SAAS,OAAO,QAAQ,OAAO,MAAM,QAAQ;AAAA,QAC7C,KAAK;AAAA,UACJ,SACC,OAAO,UACP,OAAO,UACP,OAAO,QACP,QAAQ;AAAA,UACT,WAAW;AAAA,YACV,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,UACzC;AAAA,QACD;AAAA,QACA,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,MACA,UAAU;AAAA,QACT,QAAQ,OAAO;AAAA,QACf,OAAO;AAAA,QACP,OAAO,IAAI;AAAA,UACV;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,QACA,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAGA,iBAAiB;AAAA,EAChB;AAAA,EACA;AACD;AAEA,MAAM,8BAA8B,oBAAoB;AAAA,EArOxD,OAqOwD;AAAA;AAAA;AAAA,EACvD,cAAc;AACb,UAAM,OAAO;AAAA,MACZ,IAAI;AAAA,MACJ,OAAO,IAAI,SAAS,sBAAsB,kBAAkB;AAAA,MAC5D,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QACP,QAAQ,kBAAkB;AAAA,QAC1B,SAAS,OAAO,QAAQ,OAAO,MAAM,QAAQ;AAAA,QAC7C,KAAK;AAAA,UACJ,SACC,OAAO,UACP,OAAO,UACP,OAAO,QACP,QAAQ;AAAA,UACT,WAAW;AAAA,YACV,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,UACzC;AAAA,QACD;AAAA,QACA,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,MACA,UAAU;AAAA,QACT,QAAQ,OAAO;AAAA,QACf,OAAO;AAAA,QACP,OAAO,IAAI;AAAA,UACV;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,QACA,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAEA;AAAA,EACC,sBAAsB;AAAA,EACtB;AAAA,EACA,gCAAgC;AACjC;AACA,qBAAqB,mBAAmB;AACxC,qBAAqB,qBAAqB;AAO1C,eAAsB,uBACrB,UACA,OACA,WACA,SACA,OACqB;AACrB,QAAM,YAAY,SAChB,IAAI,KAAK,EACT,OAAO,IAAI,2BAA2B,QAAQ,cAAc,CAAC;AAE/D,MAAI,UAAU,WAAW,GAAG;AAE3B,cAAU,QAAQ,IAAI,8BAA8B,CAAC;AAAA,EACtD;AAEA,QAAM,OAAuB,CAAC;AAC9B,QAAM,eAA0B,CAAC;AAEjC,aAAW,YAAY,WAAW;AACjC,SAAK;AAAA,MACJ,QAAQ;AAAA,QACP,SAAS,uBAAuB,OAAO,WAAW,KAAK;AAAA,MACxD,EAAE,KAAK,CAAC,sBAAsB;AAC7B,YACC,OAAO,gBAAgB,iBAAiB,KACxC,kBAAkB,WAAW,UAAU,QACtC;AACD,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAC1C,gBAAI,CAAC,aAAa,CAAC,GAAG;AACrB,2BAAa,CAAC,IAAI,CAAC;AAAA,YACpB;AACA,uBAAW,qBAAqB,kBAAkB,CAAC,GAAG;AACrD,kBACC,MAAM,SAAS,kBAAkB,KAAK,KACtC,MAAM;AAAA,gBACL,kBAAkB;AAAA,gBAClB,UAAU,CAAC;AAAA,cACZ,GACC;AACD,6BAAa,CAAC,EAAE;AAAA,kBACf,MAAM,KAAK,kBAAkB,KAAK;AAAA,gBACnC;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,GAAG,yBAAyB;AAAA,IAC7B;AAAA,EACD;AAEA,QAAM,QAAQ,IAAI,IAAI;AAEtB,SAAO,aAAa,IAAI,CAAC,iBAAiB;AACzC,QAAI,aAAa,WAAW,GAAG;AAC9B,aAAO,CAAC;AAAA,IACT;AAGA,iBAAa,KAAK,CAAC,GAAG,MAAM;AAC3B,UAAI,SAAS,SAAS,EAAE,iBAAiB,GAAG,EAAE,iBAAiB,CAAC,GAAG;AAClE,eAAO;AAAA,MACR,WACC,SAAS,SAAS,EAAE,iBAAiB,GAAG,EAAE,iBAAiB,CAAC,GAC3D;AACD,eAAO;AAAA,MACR,WACC,SAAS,SAAS,EAAE,eAAe,GAAG,EAAE,eAAe,CAAC,GACvD;AACD,eAAO;AAAA,MACR,WACC,SAAS,SAAS,EAAE,eAAe,GAAG,EAAE,eAAe,CAAC,GACvD;AACD,eAAO;AAAA,MACR,OAAO;AACN,eAAO;AAAA,MACR;AAAA,IACD,CAAC;AAID,UAAM,YAAqB,CAAC;AAC5B,QAAI;AACJ,eAAW,SAAS,cAAc;AACjC,UACC,CAAC,QACA,MAAM,cAAc,OAAO,IAAI,KAC/B,CAAC,MAAM,YAAY,OAAO,IAAI,GAC9B;AACD,kBAAU,KAAK,KAAK;AACpB,eAAO;AAAA,MACR;AAAA,IACD;AAEA,QAAI,CAAC,QAAQ,oCAAoC;AAChD,aAAO;AAAA,IACR;AAIA,UAAM,sBAA+B,CAAC,UAAU,CAAC,CAAC;AAClD,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAC1C,YAAM,OAAO,UAAU,IAAI,CAAC;AAC5B,YAAM,MAAM,UAAU,CAAC;AACvB,UACC,IAAI,oBAAoB,KAAK,mBAC7B,IAAI,kBAAkB,KAAK,eAC1B;AAED,cAAM,oBAAoB,IAAI;AAAA,UAC7B,KAAK;AAAA,UACL,MAAM,gCAAgC,KAAK,eAAe;AAAA,UAC1D,KAAK;AAAA,UACL,MAAM,+BAA+B,KAAK,aAAa;AAAA,QACxD;AACA,YACC,kBAAkB,cAAc,IAAI,KACpC,CAAC,kBAAkB,YAAY,IAAI,KACnC,IAAI,cAAc,iBAAiB,KACnC,CAAC,IAAI,YAAY,iBAAiB,GACjC;AACD,8BAAoB,KAAK,iBAAiB;AAAA,QAC3C;AAEA,cAAM,YAAY,IAAI;AAAA,UACrB,KAAK;AAAA,UACL;AAAA,UACA,KAAK;AAAA,UACL,MAAM,iBAAiB,KAAK,aAAa;AAAA,QAC1C;AACA,YACC,UAAU,cAAc,IAAI,KAC5B,CAAC,UAAU,YAAY,iBAAiB,KACxC,IAAI,cAAc,SAAS,KAC3B,CAAC,IAAI,YAAY,SAAS,GACzB;AACD,8BAAoB,KAAK,SAAS;AAAA,QACnC;AAAA,MACD;AACA,0BAAoB,KAAK,GAAG;AAAA,IAC7B;AACA,WAAO;AAAA,EACR,CAAC;AACF;AA/IsB;AAiJtB,iBAAiB;AAAA,EAChB;AAAA,EACA,OAAO,aAAa,SAAS;AAC5B,UAAM,CAAC,UAAU,SAAS,IAAI;AAC9B,eAAW,IAAI,MAAM,QAAQ,CAAC;AAE9B,UAAM,WAAW,SAAS;AAAA,MACzB;AAAA,IACD,EAAE;AACF,UAAM,YAAY,MAAM,SACtB,IAAI,iBAAiB,EACrB,qBAAqB,QAAQ;AAE/B,QAAI;AACH,aAAO;AAAA,QACN;AAAA,QACA,UAAU,OAAO;AAAA,QACjB;AAAA,QACA;AAAA,UACC,oCAAoC;AAAA,UACpC,gBAAgB;AAAA,QACjB;AAAA,QACA,kBAAkB;AAAA,MACnB;AAAA,IACD,UAAE;AACD,gBAAU,QAAQ;AAAA,IACnB;AAAA,EACD;AACD;",
  "names": ["ranges"]
}
