{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/rename/browser/rename.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { CancellationError, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { isMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorCommand, EditorContributionInstantiation, ServicesAccessor, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { IPosition, Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport { NewSymbolNameTriggerKind, Rejection, RenameLocation, RenameProvider, WorkspaceEdit } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextResourceConfigurationService } from '../../../common/services/textResourceConfiguration.js';\nimport { CodeEditorStateFlag, EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { ConfigurationScope, Extensions, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CONTEXT_RENAME_INPUT_VISIBLE, NewNameSource, RenameWidget, RenameWidgetResult } from './renameWidget.js';\n\nclass RenameSkeleton {\n\n\tprivate readonly _providers: RenameProvider[];\n\tprivate _providerRenameIdx: number = 0;\n\n\tconstructor(\n\t\tprivate readonly model: ITextModel,\n\t\tprivate readonly position: Position,\n\t\tregistry: LanguageFeatureRegistry<RenameProvider>\n\t) {\n\t\tthis._providers = registry.ordered(model);\n\t}\n\n\thasProvider() {\n\t\treturn this._providers.length > 0;\n\t}\n\n\tasync resolveRenameLocation(token: CancellationToken): Promise<RenameLocation & Rejection | undefined> {\n\n\t\tconst rejects: string[] = [];\n\n\t\tfor (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\n\t\t\tconst provider = this._providers[this._providerRenameIdx];\n\t\t\tif (!provider.resolveRenameLocation) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst res = await provider.resolveRenameLocation(this.model, this.position, token);\n\t\t\tif (!res) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (res.rejectReason) {\n\t\t\t\trejects.push(res.rejectReason);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\t// we are here when no provider prepared a location which means we can\n\t\t// just rely on the word under cursor and start with the first provider\n\t\tthis._providerRenameIdx = 0;\n\n\t\tconst word = this.model.getWordAtPosition(this.position);\n\t\tif (!word) {\n\t\t\treturn {\n\t\t\t\trange: Range.fromPositions(this.position),\n\t\t\t\ttext: '',\n\t\t\t\trejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\trange: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\n\t\t\ttext: word.word,\n\t\t\trejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n\t\t};\n\t}\n\n\tasync provideRenameEdits(newName: string, token: CancellationToken): Promise<WorkspaceEdit & Rejection> {\n\t\treturn this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\n\t}\n\n\tprivate async _provideRenameEdits(newName: string, i: number, rejects: string[], token: CancellationToken): Promise<WorkspaceEdit & Rejection> {\n\t\tconst provider = this._providers[i];\n\t\tif (!provider) {\n\t\t\treturn {\n\t\t\t\tedits: [],\n\t\t\t\trejectReason: rejects.join('\\n')\n\t\t\t};\n\t\t}\n\n\t\tconst result = await provider.provideRenameEdits(this.model, this.position, newName, token);\n\t\tif (!result) {\n\t\t\treturn this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\n\t\t} else if (result.rejectReason) {\n\t\t\treturn this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport async function rename(registry: LanguageFeatureRegistry<RenameProvider>, model: ITextModel, position: Position, newName: string): Promise<WorkspaceEdit & Rejection> {\n\tconst skeleton = new RenameSkeleton(model, position, registry);\n\tconst loc = await skeleton.resolveRenameLocation(CancellationToken.None);\n\tif (loc?.rejectReason) {\n\t\treturn { edits: [], rejectReason: loc.rejectReason };\n\t}\n\treturn skeleton.provideRenameEdits(newName, CancellationToken.None);\n}\n\n// ---  register actions and commands\n\nclass RenameController implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.renameController';\n\n\tstatic get(editor: ICodeEditor): RenameController | null {\n\t\treturn editor.getContribution<RenameController>(RenameController.ID);\n\t}\n\n\tprivate readonly _renameWidget: RenameWidget;\n\tprivate readonly _disposableStore = new DisposableStore();\n\tprivate _cts: CancellationTokenSource = new CancellationTokenSource();\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@IEditorProgressService private readonly _progressService: IEditorProgressService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ITextResourceConfigurationService private readonly _configService: ITextResourceConfigurationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t\tthis._renameWidget = this._disposableStore.add(this._instaService.createInstance(RenameWidget, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposableStore.dispose();\n\t\tthis._cts.dispose(true);\n\t}\n\n\tasync run(): Promise<void> {\n\n\t\tconst trace = this._logService.trace.bind(this._logService, '[rename]');\n\n\t\t// set up cancellation token to prevent reentrant rename, this\n\t\t// is the parent to the resolve- and rename-tokens\n\t\tthis._cts.dispose(true);\n\t\tthis._cts = new CancellationTokenSource();\n\n\t\tif (!this.editor.hasModel()) {\n\t\t\ttrace('editor has no model');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst position = this.editor.getPosition();\n\t\tconst skeleton = new RenameSkeleton(this.editor.getModel(), position, this._languageFeaturesService.renameProvider);\n\n\t\tif (!skeleton.hasProvider()) {\n\t\t\ttrace('skeleton has no provider');\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// part 1 - resolve rename location\n\t\tconst cts1 = new EditorStateCancellationTokenSource(this.editor, CodeEditorStateFlag.Position | CodeEditorStateFlag.Value, undefined, this._cts.token);\n\n\t\tlet loc: RenameLocation & Rejection | undefined;\n\t\ttry {\n\t\t\ttrace('resolving rename location');\n\t\t\tconst resolveLocationOperation = skeleton.resolveRenameLocation(cts1.token);\n\t\t\tthis._progressService.showWhile(resolveLocationOperation, 250);\n\t\t\tloc = await resolveLocationOperation;\n\t\t\ttrace('resolved rename location');\n\t\t} catch (e: unknown) {\n\t\t\tif (e instanceof CancellationError) {\n\t\t\t\ttrace('resolve rename location cancelled', JSON.stringify(e, null, '\\t'));\n\t\t\t} else {\n\t\t\t\ttrace('resolve rename location failed', e instanceof Error ? e : JSON.stringify(e, null, '\\t'));\n\t\t\t\tif (typeof e === 'string' || isMarkdownString(e)) {\n\t\t\t\t\tMessageController.get(this.editor)?.showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\n\t\t} finally {\n\t\t\tcts1.dispose();\n\t\t}\n\n\t\tif (!loc) {\n\t\t\ttrace('returning early - no loc');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (loc.rejectReason) {\n\t\t\ttrace(`returning early - rejected with reason: ${loc.rejectReason}`, loc.rejectReason);\n\t\t\tMessageController.get(this.editor)?.showMessage(loc.rejectReason, position);\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (cts1.token.isCancellationRequested) {\n\t\t\ttrace('returning early - cts1 cancelled');\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// part 2 - do rename at location\n\t\tconst cts2 = new EditorStateCancellationTokenSource(this.editor, CodeEditorStateFlag.Position | CodeEditorStateFlag.Value, loc.range, this._cts.token);\n\n\t\tconst model = this.editor.getModel(); // @ulugbekna: assumes editor still has a model, otherwise, cts1 should've been cancelled\n\n\t\tconst newSymbolNamesProviders = this._languageFeaturesService.newSymbolNamesProvider.all(model);\n\n\t\tconst resolvedNewSymbolnamesProviders = await Promise.all(newSymbolNamesProviders.map(async p => [p, await p.supportsAutomaticNewSymbolNamesTriggerKind ?? false] as const));\n\n\t\tconst requestRenameSuggestions = (triggerKind: NewSymbolNameTriggerKind, cts: CancellationToken) => {\n\t\t\tlet providers = resolvedNewSymbolnamesProviders.slice();\n\n\t\t\tif (triggerKind === NewSymbolNameTriggerKind.Automatic) {\n\t\t\t\tproviders = providers.filter(([_, supportsAutomatic]) => supportsAutomatic);\n\t\t\t}\n\n\t\t\treturn providers.map(([p,]) => p.provideNewSymbolNames(model, loc.range, triggerKind, cts));\n\t\t};\n\n\t\ttrace('creating rename input field and awaiting its result');\n\t\tconst supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue<boolean>(this.editor.getModel().uri, 'editor.rename.enablePreview');\n\t\tconst inputFieldResult = await this._renameWidget.getInput(\n\t\t\tloc.range,\n\t\t\tloc.text,\n\t\t\tsupportPreview,\n\t\t\tnewSymbolNamesProviders.length > 0 ? requestRenameSuggestions : undefined,\n\t\t\tcts2\n\t\t);\n\t\ttrace('received response from rename input field');\n\n\t\tif (newSymbolNamesProviders.length > 0) { // @ulugbekna: we're interested only in telemetry for rename suggestions currently\n\t\t\tthis._reportTelemetry(newSymbolNamesProviders.length, model.getLanguageId(), inputFieldResult);\n\t\t}\n\n\t\t// no result, only hint to focus the editor or not\n\t\tif (typeof inputFieldResult === 'boolean') {\n\t\t\ttrace(`returning early - rename input field response - ${inputFieldResult}`);\n\t\t\tif (inputFieldResult) {\n\t\t\t\tthis.editor.focus();\n\t\t\t}\n\t\t\tcts2.dispose();\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.editor.focus();\n\n\t\ttrace('requesting rename edits');\n\t\tconst renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, cts2.token), cts2.token).then(async renameResult => {\n\n\t\t\tif (!renameResult) {\n\t\t\t\ttrace('returning early - no rename edits result');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.editor.hasModel()) {\n\t\t\t\ttrace('returning early - no model after rename edits are provided');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (renameResult.rejectReason) {\n\t\t\t\ttrace(`returning early - rejected with reason: ${renameResult.rejectReason}`);\n\t\t\t\tthis._notificationService.info(renameResult.rejectReason);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// collapse selection to active end\n\t\t\tthis.editor.setSelection(Range.fromPositions(this.editor.getSelection().getPosition()));\n\n\t\t\ttrace('applying edits');\n\n\t\t\tthis._bulkEditService.apply(renameResult, {\n\t\t\t\teditor: this.editor,\n\t\t\t\tshowPreview: inputFieldResult.wantsPreview,\n\t\t\t\tlabel: nls.localize('label', \"Renaming '{0}' to '{1}'\", loc?.text, inputFieldResult.newName),\n\t\t\t\tcode: 'undoredo.rename',\n\t\t\t\tquotableLabel: nls.localize('quotableLabel', \"Renaming {0} to {1}\", loc?.text, inputFieldResult.newName),\n\t\t\t\trespectAutoSaveConfig: true\n\t\t\t}).then(result => {\n\t\t\t\ttrace('edits applied');\n\t\t\t\tif (result.ariaSummary) {\n\t\t\t\t\talert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\ttrace(`error when applying edits ${JSON.stringify(err, null, '\\t')}`);\n\t\t\t\tthis._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\n\t\t\t\tthis._logService.error(err);\n\t\t\t});\n\n\t\t}, err => {\n\t\t\ttrace('error when providing rename edits', JSON.stringify(err, null, '\\t'));\n\n\t\t\tthis._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\n\t\t\tthis._logService.error(err);\n\n\t\t}).finally(() => {\n\t\t\tcts2.dispose();\n\t\t});\n\n\t\ttrace('returning rename operation');\n\n\t\tthis._progressService.showWhile(renameOperation, 250);\n\t\treturn renameOperation;\n\n\t}\n\n\tacceptRenameInput(wantsPreview: boolean): void {\n\t\tthis._renameWidget.acceptInput(wantsPreview);\n\t}\n\n\tcancelRenameInput(): void {\n\t\tthis._renameWidget.cancelInput(true, 'cancelRenameInput command');\n\t}\n\n\tfocusNextRenameSuggestion(): void {\n\t\tthis._renameWidget.focusNextRenameSuggestion();\n\t}\n\n\tfocusPreviousRenameSuggestion(): void {\n\t\tthis._renameWidget.focusPreviousRenameSuggestion();\n\t}\n\n\tprivate _reportTelemetry(nRenameSuggestionProviders: number, languageId: string, inputFieldResult: boolean | RenameWidgetResult) {\n\t\ttype RenameInvokedEvent =\n\t\t\t{\n\t\t\t\tkind: 'accepted' | 'cancelled';\n\t\t\t\tlanguageId: string;\n\t\t\t\tnRenameSuggestionProviders: number;\n\n\t\t\t\t/** provided only if kind = 'accepted' */\n\t\t\t\tsource?: NewNameSource['k'];\n\t\t\t\t/** provided only if kind = 'accepted' */\n\t\t\t\tnRenameSuggestions?: number;\n\t\t\t\t/** provided only if kind = 'accepted' */\n\t\t\t\ttimeBeforeFirstInputFieldEdit?: number;\n\t\t\t\t/** provided only if kind = 'accepted' */\n\t\t\t\twantsPreview?: boolean;\n\t\t\t\t/** provided only if kind = 'accepted' */\n\t\t\t\tnRenameSuggestionsInvocations?: number;\n\t\t\t\t/** provided only if kind = 'accepted' */\n\t\t\t\thadAutomaticRenameSuggestionsInvocation?: boolean;\n\t\t\t};\n\n\t\ttype RenameInvokedClassification = {\n\t\t\towner: 'ulugbekna';\n\t\t\tcomment: 'A rename operation was invoked.';\n\n\t\t\tkind: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether the rename operation was cancelled or accepted.' };\n\t\t\tlanguageId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Document language ID.' };\n\t\t\tnRenameSuggestionProviders: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Number of rename providers for this document.' };\n\n\t\t\tsource?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether the new name came from the input field or rename suggestions.' };\n\t\t\tnRenameSuggestions?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Number of rename suggestions user has got' };\n\t\t\ttimeBeforeFirstInputFieldEdit?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Milliseconds before user edits the input field for the first time' };\n\t\t\twantsPreview?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'If user wanted preview.' };\n\t\t\tnRenameSuggestionsInvocations?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Number of times rename suggestions were invoked' };\n\t\t\thadAutomaticRenameSuggestionsInvocation?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether rename suggestions were invoked automatically' };\n\t\t};\n\n\t\tconst value: RenameInvokedEvent =\n\t\t\ttypeof inputFieldResult === 'boolean'\n\t\t\t\t? {\n\t\t\t\t\tkind: 'cancelled',\n\t\t\t\t\tlanguageId,\n\t\t\t\t\tnRenameSuggestionProviders,\n\t\t\t\t}\n\t\t\t\t: {\n\t\t\t\t\tkind: 'accepted',\n\t\t\t\t\tlanguageId,\n\t\t\t\t\tnRenameSuggestionProviders,\n\n\t\t\t\t\tsource: inputFieldResult.stats.source.k,\n\t\t\t\t\tnRenameSuggestions: inputFieldResult.stats.nRenameSuggestions,\n\t\t\t\t\ttimeBeforeFirstInputFieldEdit: inputFieldResult.stats.timeBeforeFirstInputFieldEdit,\n\t\t\t\t\twantsPreview: inputFieldResult.wantsPreview,\n\t\t\t\t\tnRenameSuggestionsInvocations: inputFieldResult.stats.nRenameSuggestionsInvocations,\n\t\t\t\t\thadAutomaticRenameSuggestionsInvocation: inputFieldResult.stats.hadAutomaticRenameSuggestionsInvocation,\n\t\t\t\t};\n\n\t\tthis._telemetryService.publicLog2<RenameInvokedEvent, RenameInvokedClassification>('renameInvokedEvent', value);\n\t}\n}\n\n// ---- action implementation\n\nexport class RenameAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.rename',\n\t\t\tlabel: nls.localize('rename.label', \"Rename Symbol\"),\n\t\t\talias: 'Rename Symbol',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyCode.F2,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.1\n\t\t\t}\n\t\t});\n\t}\n\n\toverride runCommand(accessor: ServicesAccessor, args: [URI, IPosition]): void | Promise<void> {\n\t\tconst editorService = accessor.get(ICodeEditorService);\n\t\tconst [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n\n\t\tif (URI.isUri(uri) && Position.isIPosition(pos)) {\n\t\t\treturn editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n\t\t\t\tif (!editor) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teditor.setPosition(pos);\n\t\t\t\teditor.invokeWithinContext(accessor => {\n\t\t\t\t\tthis.reportTelemetry(accessor, editor);\n\t\t\t\t\treturn this.run(accessor, editor);\n\t\t\t\t});\n\t\t\t}, onUnexpectedError);\n\t\t}\n\n\t\treturn super.runCommand(accessor, args);\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst logService = accessor.get(ILogService);\n\n\t\tconst controller = RenameController.get(editor);\n\n\t\tif (controller) {\n\t\t\tlogService.trace('[RenameAction] got controller, running...');\n\t\t\treturn controller.run();\n\t\t}\n\t\tlogService.trace('[RenameAction] returning early - controller missing');\n\t\treturn Promise.resolve();\n\t}\n}\n\nregisterEditorContribution(RenameController.ID, RenameController, EditorContributionInstantiation.Lazy);\nregisterEditorAction(RenameAction);\n\nconst RenameCommand = EditorCommand.bindToContribution<RenameController>(RenameController.get);\n\nregisterEditorCommand(new RenameCommand({\n\tid: 'acceptRenameInput',\n\tprecondition: CONTEXT_RENAME_INPUT_VISIBLE,\n\thandler: x => x.acceptRenameInput(false),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n\t\tprimary: KeyCode.Enter\n\t}\n}));\n\nregisterEditorCommand(new RenameCommand({\n\tid: 'acceptRenameInputWithPreview',\n\tprecondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\n\thandler: x => x.acceptRenameInput(true),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n\t\tprimary: KeyMod.CtrlCmd + KeyCode.Enter\n\t}\n}));\n\nregisterEditorCommand(new RenameCommand({\n\tid: 'cancelRenameInput',\n\tprecondition: CONTEXT_RENAME_INPUT_VISIBLE,\n\thandler: x => x.cancelRenameInput(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t}\n}));\n\nregisterAction2(class FocusNextRenameSuggestion extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'focusNextRenameSuggestion',\n\t\t\ttitle: {\n\t\t\t\t...nls.localize2('focusNextRenameSuggestion', \"Focus Next Rename Suggestion\"),\n\t\t\t},\n\t\t\tprecondition: CONTEXT_RENAME_INPUT_VISIBLE,\n\t\t\tkeybinding: [\n\t\t\t\t{\n\t\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): void {\n\t\tconst currentEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (!currentEditor) { return; }\n\n\t\tconst controller = RenameController.get(currentEditor);\n\t\tif (!controller) { return; }\n\n\t\tcontroller.focusNextRenameSuggestion();\n\t}\n});\n\nregisterAction2(class FocusPreviousRenameSuggestion extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'focusPreviousRenameSuggestion',\n\t\t\ttitle: {\n\t\t\t\t...nls.localize2('focusPreviousRenameSuggestion', \"Focus Previous Rename Suggestion\"),\n\t\t\t},\n\t\t\tprecondition: CONTEXT_RENAME_INPUT_VISIBLE,\n\t\t\tkeybinding: [\n\t\t\t\t{\n\t\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): void {\n\t\tconst currentEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (!currentEditor) { return; }\n\n\t\tconst controller = RenameController.get(currentEditor);\n\t\tif (!controller) { return; }\n\n\t\tcontroller.focusPreviousRenameSuggestion();\n\t}\n});\n\n// ---- api bridge command\n\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (accessor, model, position, ...args) {\n\tconst [newName] = args;\n\tassertType(typeof newName === 'string');\n\tconst { renameProvider } = accessor.get(ILanguageFeaturesService);\n\treturn rename(renameProvider, model, position, newName);\n});\n\nregisterModelAndPositionCommand('_executePrepareRename', async function (accessor, model, position) {\n\tconst { renameProvider } = accessor.get(ILanguageFeaturesService);\n\tconst skeleton = new RenameSkeleton(model, position, renameProvider);\n\tconst loc = await skeleton.resolveRenameLocation(CancellationToken.None);\n\tif (loc?.rejectReason) {\n\t\tthrow new Error(loc.rejectReason);\n\t}\n\treturn loc;\n});\n\n\n//todo@jrieken use editor options world\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\tid: 'editor',\n\tproperties: {\n\t\t'editor.rename.enablePreview': {\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdescription: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\n\t\t\tdefault: true,\n\t\t\ttype: 'boolean'\n\t\t}\n\t}\n});\n"],
  "mappings": "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",
  "names": ["accessor"]
}
