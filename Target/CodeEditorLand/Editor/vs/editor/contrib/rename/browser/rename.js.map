{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/rename/browser/rename.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from \"../../../../base/browser/ui/aria/aria.js\";\nimport { raceCancellation } from \"../../../../base/common/async.js\";\nimport {\n\tCancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport {\n\tCancellationError,\n\tonUnexpectedError,\n} from \"../../../../base/common/errors.js\";\nimport { isMarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { assertType } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tConfigurationScope,\n\tExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { IEditorProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorCommand,\n\tEditorContributionInstantiation,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorCommand,\n\tregisterEditorContribution,\n\tregisterModelAndPositionCommand,\n} from \"../../../browser/editorExtensions.js\";\nimport { IBulkEditService } from \"../../../browser/services/bulkEditService.js\";\nimport { ICodeEditorService } from \"../../../browser/services/codeEditorService.js\";\nimport { type IPosition, Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport type { LanguageFeatureRegistry } from \"../../../common/languageFeatureRegistry.js\";\nimport {\n\tNewSymbolNameTriggerKind,\n\ttype Rejection,\n\ttype RenameLocation,\n\ttype RenameProvider,\n\ttype WorkspaceEdit,\n} from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { ITextResourceConfigurationService } from \"../../../common/services/textResourceConfiguration.js\";\nimport {\n\tCodeEditorStateFlag,\n\tEditorStateCancellationTokenSource,\n} from \"../../editorState/browser/editorState.js\";\nimport { MessageController } from \"../../message/browser/messageController.js\";\nimport {\n\tCONTEXT_RENAME_INPUT_VISIBLE,\n\ttype NewNameSource,\n\tRenameWidget,\n\ttype RenameWidgetResult,\n} from \"./renameWidget.js\";\n\nclass RenameSkeleton {\n\tprivate readonly _providers: RenameProvider[];\n\tprivate _providerRenameIdx = 0;\n\n\tconstructor(\n\t\tprivate readonly model: ITextModel,\n\t\tprivate readonly position: Position,\n\t\tregistry: LanguageFeatureRegistry<RenameProvider>,\n\t) {\n\t\tthis._providers = registry.ordered(model);\n\t}\n\n\thasProvider() {\n\t\treturn this._providers.length > 0;\n\t}\n\n\tasync resolveRenameLocation(\n\t\ttoken: CancellationToken,\n\t): Promise<(RenameLocation & Rejection) | undefined> {\n\t\tconst rejects: string[] = [];\n\n\t\tfor (\n\t\t\tthis._providerRenameIdx = 0;\n\t\t\tthis._providerRenameIdx < this._providers.length;\n\t\t\tthis._providerRenameIdx++\n\t\t) {\n\t\t\tconst provider = this._providers[this._providerRenameIdx];\n\t\t\tif (!provider.resolveRenameLocation) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst res = await provider.resolveRenameLocation(\n\t\t\t\tthis.model,\n\t\t\t\tthis.position,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t\tif (!res) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (res.rejectReason) {\n\t\t\t\trejects.push(res.rejectReason);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\t// we are here when no provider prepared a location which means we can\n\t\t// just rely on the word under cursor and start with the first provider\n\t\tthis._providerRenameIdx = 0;\n\n\t\tconst word = this.model.getWordAtPosition(this.position);\n\t\tif (!word) {\n\t\t\treturn {\n\t\t\t\trange: Range.fromPositions(this.position),\n\t\t\t\ttext: \"\",\n\t\t\t\trejectReason:\n\t\t\t\t\trejects.length > 0 ? rejects.join(\"\\n\") : undefined,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\trange: new Range(\n\t\t\t\tthis.position.lineNumber,\n\t\t\t\tword.startColumn,\n\t\t\t\tthis.position.lineNumber,\n\t\t\t\tword.endColumn,\n\t\t\t),\n\t\t\ttext: word.word,\n\t\t\trejectReason: rejects.length > 0 ? rejects.join(\"\\n\") : undefined,\n\t\t};\n\t}\n\n\tasync provideRenameEdits(\n\t\tnewName: string,\n\t\ttoken: CancellationToken,\n\t): Promise<WorkspaceEdit & Rejection> {\n\t\treturn this._provideRenameEdits(\n\t\t\tnewName,\n\t\t\tthis._providerRenameIdx,\n\t\t\t[],\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tprivate async _provideRenameEdits(\n\t\tnewName: string,\n\t\ti: number,\n\t\trejects: string[],\n\t\ttoken: CancellationToken,\n\t): Promise<WorkspaceEdit & Rejection> {\n\t\tconst provider = this._providers[i];\n\t\tif (!provider) {\n\t\t\treturn {\n\t\t\t\tedits: [],\n\t\t\t\trejectReason: rejects.join(\"\\n\"),\n\t\t\t};\n\t\t}\n\n\t\tconst result = await provider.provideRenameEdits(\n\t\t\tthis.model,\n\t\t\tthis.position,\n\t\t\tnewName,\n\t\t\ttoken,\n\t\t);\n\t\tif (!result) {\n\t\t\treturn this._provideRenameEdits(\n\t\t\t\tnewName,\n\t\t\t\ti + 1,\n\t\t\t\trejects.concat(nls.localize(\"no result\", \"No result.\")),\n\t\t\t\ttoken,\n\t\t\t);\n\t\t} else if (result.rejectReason) {\n\t\t\treturn this._provideRenameEdits(\n\t\t\t\tnewName,\n\t\t\t\ti + 1,\n\t\t\t\trejects.concat(result.rejectReason),\n\t\t\t\ttoken,\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport async function rename(\n\tregistry: LanguageFeatureRegistry<RenameProvider>,\n\tmodel: ITextModel,\n\tposition: Position,\n\tnewName: string,\n): Promise<WorkspaceEdit & Rejection> {\n\tconst skeleton = new RenameSkeleton(model, position, registry);\n\tconst loc = await skeleton.resolveRenameLocation(CancellationToken.None);\n\tif (loc?.rejectReason) {\n\t\treturn { edits: [], rejectReason: loc.rejectReason };\n\t}\n\treturn skeleton.provideRenameEdits(newName, CancellationToken.None);\n}\n\n// ---  register actions and commands\n\nclass RenameController implements IEditorContribution {\n\tpublic static readonly ID = \"editor.contrib.renameController\";\n\n\tstatic get(editor: ICodeEditor): RenameController | null {\n\t\treturn editor.getContribution<RenameController>(RenameController.ID);\n\t}\n\n\tprivate readonly _renameWidget: RenameWidget;\n\tprivate readonly _disposableStore = new DisposableStore();\n\tprivate _cts: CancellationTokenSource = new CancellationTokenSource();\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@IEditorProgressService private readonly _progressService: IEditorProgressService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ITextResourceConfigurationService private readonly _configService: ITextResourceConfigurationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t\tthis._renameWidget = this._disposableStore.add(this._instaService.createInstance(RenameWidget, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposableStore.dispose();\n\t\tthis._cts.dispose(true);\n\t}\n\n\tasync run(): Promise<void> {\n\t\tconst trace = this._logService.trace.bind(this._logService, \"[rename]\");\n\n\t\t// set up cancellation token to prevent reentrant rename, this\n\t\t// is the parent to the resolve- and rename-tokens\n\t\tthis._cts.dispose(true);\n\t\tthis._cts = new CancellationTokenSource();\n\n\t\tif (!this.editor.hasModel()) {\n\t\t\ttrace(\"editor has no model\");\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst position = this.editor.getPosition();\n\t\tconst skeleton = new RenameSkeleton(\n\t\t\tthis.editor.getModel(),\n\t\t\tposition,\n\t\t\tthis._languageFeaturesService.renameProvider,\n\t\t);\n\n\t\tif (!skeleton.hasProvider()) {\n\t\t\ttrace(\"skeleton has no provider\");\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// part 1 - resolve rename location\n\t\tconst cts1 = new EditorStateCancellationTokenSource(\n\t\t\tthis.editor,\n\t\t\tCodeEditorStateFlag.Position | CodeEditorStateFlag.Value,\n\t\t\tundefined,\n\t\t\tthis._cts.token,\n\t\t);\n\n\t\tlet loc: (RenameLocation & Rejection) | undefined;\n\t\ttry {\n\t\t\ttrace(\"resolving rename location\");\n\t\t\tconst resolveLocationOperation = skeleton.resolveRenameLocation(\n\t\t\t\tcts1.token,\n\t\t\t);\n\t\t\tthis._progressService.showWhile(resolveLocationOperation, 250);\n\t\t\tloc = await resolveLocationOperation;\n\t\t\ttrace(\"resolved rename location\");\n\t\t} catch (e: unknown) {\n\t\t\tif (e instanceof CancellationError) {\n\t\t\t\ttrace(\n\t\t\t\t\t\"resolve rename location cancelled\",\n\t\t\t\t\tJSON.stringify(e, null, \"\\t\"),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttrace(\n\t\t\t\t\t\"resolve rename location failed\",\n\t\t\t\t\te instanceof Error ? e : JSON.stringify(e, null, \"\\t\"),\n\t\t\t\t);\n\t\t\t\tif (typeof e === \"string\" || isMarkdownString(e)) {\n\t\t\t\t\tMessageController.get(this.editor)?.showMessage(\n\t\t\t\t\t\te ||\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"resolveRenameLocationFailed\",\n\t\t\t\t\t\t\t\t\"An unknown error occurred while resolving rename location\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tposition,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t} finally {\n\t\t\tcts1.dispose();\n\t\t}\n\n\t\tif (!loc) {\n\t\t\ttrace(\"returning early - no loc\");\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (loc.rejectReason) {\n\t\t\ttrace(\n\t\t\t\t`returning early - rejected with reason: ${loc.rejectReason}`,\n\t\t\t\tloc.rejectReason,\n\t\t\t);\n\t\t\tMessageController.get(this.editor)?.showMessage(\n\t\t\t\tloc.rejectReason,\n\t\t\t\tposition,\n\t\t\t);\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (cts1.token.isCancellationRequested) {\n\t\t\ttrace(\"returning early - cts1 cancelled\");\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// part 2 - do rename at location\n\t\tconst cts2 = new EditorStateCancellationTokenSource(\n\t\t\tthis.editor,\n\t\t\tCodeEditorStateFlag.Position | CodeEditorStateFlag.Value,\n\t\t\tloc.range,\n\t\t\tthis._cts.token,\n\t\t);\n\n\t\tconst model = this.editor.getModel(); // @ulugbekna: assumes editor still has a model, otherwise, cts1 should've been cancelled\n\n\t\tconst newSymbolNamesProviders =\n\t\t\tthis._languageFeaturesService.newSymbolNamesProvider.all(model);\n\n\t\tconst resolvedNewSymbolnamesProviders = await Promise.all(\n\t\t\tnewSymbolNamesProviders.map(\n\t\t\t\tasync (p) =>\n\t\t\t\t\t[\n\t\t\t\t\t\tp,\n\t\t\t\t\t\t(await p.supportsAutomaticNewSymbolNamesTriggerKind) ??\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t] as const,\n\t\t\t),\n\t\t);\n\n\t\tconst requestRenameSuggestions = (\n\t\t\ttriggerKind: NewSymbolNameTriggerKind,\n\t\t\tcts: CancellationToken,\n\t\t) => {\n\t\t\tlet providers = resolvedNewSymbolnamesProviders.slice();\n\n\t\t\tif (triggerKind === NewSymbolNameTriggerKind.Automatic) {\n\t\t\t\tproviders = providers.filter(\n\t\t\t\t\t([_, supportsAutomatic]) => supportsAutomatic,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn providers.map(([p]) =>\n\t\t\t\tp.provideNewSymbolNames(model, loc.range, triggerKind, cts),\n\t\t\t);\n\t\t};\n\n\t\ttrace(\"creating rename input field and awaiting its result\");\n\t\tconst supportPreview =\n\t\t\tthis._bulkEditService.hasPreviewHandler() &&\n\t\t\tthis._configService.getValue<boolean>(\n\t\t\t\tthis.editor.getModel().uri,\n\t\t\t\t\"editor.rename.enablePreview\",\n\t\t\t);\n\t\tconst inputFieldResult = await this._renameWidget.getInput(\n\t\t\tloc.range,\n\t\t\tloc.text,\n\t\t\tsupportPreview,\n\t\t\tnewSymbolNamesProviders.length > 0\n\t\t\t\t? requestRenameSuggestions\n\t\t\t\t: undefined,\n\t\t\tcts2,\n\t\t);\n\t\ttrace(\"received response from rename input field\");\n\n\t\tif (newSymbolNamesProviders.length > 0) {\n\t\t\t// @ulugbekna: we're interested only in telemetry for rename suggestions currently\n\t\t\tthis._reportTelemetry(\n\t\t\t\tnewSymbolNamesProviders.length,\n\t\t\t\tmodel.getLanguageId(),\n\t\t\t\tinputFieldResult,\n\t\t\t);\n\t\t}\n\n\t\t// no result, only hint to focus the editor or not\n\t\tif (typeof inputFieldResult === \"boolean\") {\n\t\t\ttrace(\n\t\t\t\t`returning early - rename input field response - ${inputFieldResult}`,\n\t\t\t);\n\t\t\tif (inputFieldResult) {\n\t\t\t\tthis.editor.focus();\n\t\t\t}\n\t\t\tcts2.dispose();\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.editor.focus();\n\n\t\ttrace(\"requesting rename edits\");\n\t\tconst renameOperation = raceCancellation(\n\t\t\tskeleton.provideRenameEdits(inputFieldResult.newName, cts2.token),\n\t\t\tcts2.token,\n\t\t)\n\t\t\t.then(\n\t\t\t\tasync (renameResult) => {\n\t\t\t\t\tif (!renameResult) {\n\t\t\t\t\t\ttrace(\"returning early - no rename edits result\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.editor.hasModel()) {\n\t\t\t\t\t\ttrace(\n\t\t\t\t\t\t\t\"returning early - no model after rename edits are provided\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (renameResult.rejectReason) {\n\t\t\t\t\t\ttrace(\n\t\t\t\t\t\t\t`returning early - rejected with reason: ${renameResult.rejectReason}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._notificationService.info(\n\t\t\t\t\t\t\trenameResult.rejectReason,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// collapse selection to active end\n\t\t\t\t\tthis.editor.setSelection(\n\t\t\t\t\t\tRange.fromPositions(\n\t\t\t\t\t\t\tthis.editor.getSelection().getPosition(),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\ttrace(\"applying edits\");\n\n\t\t\t\t\tthis._bulkEditService\n\t\t\t\t\t\t.apply(renameResult, {\n\t\t\t\t\t\t\teditor: this.editor,\n\t\t\t\t\t\t\tshowPreview: inputFieldResult.wantsPreview,\n\t\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t\t\"Renaming '{0}' to '{1}'\",\n\t\t\t\t\t\t\t\tloc?.text,\n\t\t\t\t\t\t\t\tinputFieldResult.newName,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcode: \"undoredo.rename\",\n\t\t\t\t\t\t\tquotableLabel: nls.localize(\n\t\t\t\t\t\t\t\t\"quotableLabel\",\n\t\t\t\t\t\t\t\t\"Renaming {0} to {1}\",\n\t\t\t\t\t\t\t\tloc?.text,\n\t\t\t\t\t\t\t\tinputFieldResult.newName,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trespectAutoSaveConfig: true,\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\ttrace(\"edits applied\");\n\t\t\t\t\t\t\tif (result.ariaSummary) {\n\t\t\t\t\t\t\t\talert(\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"aria\",\n\t\t\t\t\t\t\t\t\t\t\"Successfully renamed '{0}' to '{1}'. Summary: {2}\",\n\t\t\t\t\t\t\t\t\t\tloc.text,\n\t\t\t\t\t\t\t\t\t\tinputFieldResult.newName,\n\t\t\t\t\t\t\t\t\t\tresult.ariaSummary,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\ttrace(\n\t\t\t\t\t\t\t\t`error when applying edits ${JSON.stringify(err, null, \"\\t\")}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._notificationService.error(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"rename.failedApply\",\n\t\t\t\t\t\t\t\t\t\"Rename failed to apply edits\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._logService.error(err);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\ttrace(\n\t\t\t\t\t\t\"error when providing rename edits\",\n\t\t\t\t\t\tJSON.stringify(err, null, \"\\t\"),\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._notificationService.error(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"rename.failed\",\n\t\t\t\t\t\t\t\"Rename failed to compute edits\",\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tthis._logService.error(err);\n\t\t\t\t},\n\t\t\t)\n\t\t\t.finally(() => {\n\t\t\t\tcts2.dispose();\n\t\t\t});\n\n\t\ttrace(\"returning rename operation\");\n\n\t\tthis._progressService.showWhile(renameOperation, 250);\n\t\treturn renameOperation;\n\t}\n\n\tacceptRenameInput(wantsPreview: boolean): void {\n\t\tthis._renameWidget.acceptInput(wantsPreview);\n\t}\n\n\tcancelRenameInput(): void {\n\t\tthis._renameWidget.cancelInput(true, \"cancelRenameInput command\");\n\t}\n\n\tfocusNextRenameSuggestion(): void {\n\t\tthis._renameWidget.focusNextRenameSuggestion();\n\t}\n\n\tfocusPreviousRenameSuggestion(): void {\n\t\tthis._renameWidget.focusPreviousRenameSuggestion();\n\t}\n\n\tprivate _reportTelemetry(\n\t\tnRenameSuggestionProviders: number,\n\t\tlanguageId: string,\n\t\tinputFieldResult: boolean | RenameWidgetResult,\n\t) {\n\t\ttype RenameInvokedEvent = {\n\t\t\tkind: \"accepted\" | \"cancelled\";\n\t\t\tlanguageId: string;\n\t\t\tnRenameSuggestionProviders: number;\n\n\t\t\t/** provided only if kind = 'accepted' */\n\t\t\tsource?: NewNameSource[\"k\"];\n\t\t\t/** provided only if kind = 'accepted' */\n\t\t\tnRenameSuggestions?: number;\n\t\t\t/** provided only if kind = 'accepted' */\n\t\t\ttimeBeforeFirstInputFieldEdit?: number;\n\t\t\t/** provided only if kind = 'accepted' */\n\t\t\twantsPreview?: boolean;\n\t\t\t/** provided only if kind = 'accepted' */\n\t\t\tnRenameSuggestionsInvocations?: number;\n\t\t\t/** provided only if kind = 'accepted' */\n\t\t\thadAutomaticRenameSuggestionsInvocation?: boolean;\n\t\t};\n\n\t\ttype RenameInvokedClassification = {\n\t\t\towner: \"ulugbekna\";\n\t\t\tcomment: \"A rename operation was invoked.\";\n\n\t\t\tkind: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether the rename operation was cancelled or accepted.\";\n\t\t\t};\n\t\t\tlanguageId: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Document language ID.\";\n\t\t\t};\n\t\t\tnRenameSuggestionProviders: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Number of rename providers for this document.\";\n\t\t\t};\n\n\t\t\tsource?: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether the new name came from the input field or rename suggestions.\";\n\t\t\t};\n\t\t\tnRenameSuggestions?: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Number of rename suggestions user has got\";\n\t\t\t};\n\t\t\ttimeBeforeFirstInputFieldEdit?: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Milliseconds before user edits the input field for the first time\";\n\t\t\t};\n\t\t\twantsPreview?: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"If user wanted preview.\";\n\t\t\t};\n\t\t\tnRenameSuggestionsInvocations?: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Number of times rename suggestions were invoked\";\n\t\t\t};\n\t\t\thadAutomaticRenameSuggestionsInvocation?: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether rename suggestions were invoked automatically\";\n\t\t\t};\n\t\t};\n\n\t\tconst value: RenameInvokedEvent =\n\t\t\ttypeof inputFieldResult === \"boolean\"\n\t\t\t\t? {\n\t\t\t\t\t\tkind: \"cancelled\",\n\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t\tnRenameSuggestionProviders,\n\t\t\t\t\t}\n\t\t\t\t: {\n\t\t\t\t\t\tkind: \"accepted\",\n\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t\tnRenameSuggestionProviders,\n\n\t\t\t\t\t\tsource: inputFieldResult.stats.source.k,\n\t\t\t\t\t\tnRenameSuggestions:\n\t\t\t\t\t\t\tinputFieldResult.stats.nRenameSuggestions,\n\t\t\t\t\t\ttimeBeforeFirstInputFieldEdit:\n\t\t\t\t\t\t\tinputFieldResult.stats\n\t\t\t\t\t\t\t\t.timeBeforeFirstInputFieldEdit,\n\t\t\t\t\t\twantsPreview: inputFieldResult.wantsPreview,\n\t\t\t\t\t\tnRenameSuggestionsInvocations:\n\t\t\t\t\t\t\tinputFieldResult.stats\n\t\t\t\t\t\t\t\t.nRenameSuggestionsInvocations,\n\t\t\t\t\t\thadAutomaticRenameSuggestionsInvocation:\n\t\t\t\t\t\t\tinputFieldResult.stats\n\t\t\t\t\t\t\t\t.hadAutomaticRenameSuggestionsInvocation,\n\t\t\t\t\t};\n\n\t\tthis._telemetryService.publicLog2<\n\t\t\tRenameInvokedEvent,\n\t\t\tRenameInvokedClassification\n\t\t>(\"renameInvokedEvent\", value);\n\t}\n}\n\n// ---- action implementation\n\nexport class RenameAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.rename\",\n\t\t\tlabel: nls.localize(\"rename.label\", \"Rename Symbol\"),\n\t\t\talias: \"Rename Symbol\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasRenameProvider,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyCode.F2,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: \"1_modification\",\n\t\t\t\torder: 1.1,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride runCommand(\n\t\taccessor: ServicesAccessor,\n\t\targs: [URI, IPosition],\n\t): void | Promise<void> {\n\t\tconst editorService = accessor.get(ICodeEditorService);\n\t\tconst [uri, pos] = (Array.isArray(args) && args) || [\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t];\n\n\t\tif (URI.isUri(uri) && Position.isIPosition(pos)) {\n\t\t\treturn editorService\n\t\t\t\t.openCodeEditor(\n\t\t\t\t\t{ resource: uri },\n\t\t\t\t\teditorService.getActiveCodeEditor(),\n\t\t\t\t)\n\t\t\t\t.then((editor) => {\n\t\t\t\t\tif (!editor) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\teditor.setPosition(pos);\n\t\t\t\t\teditor.invokeWithinContext((accessor) => {\n\t\t\t\t\t\tthis.reportTelemetry(accessor, editor);\n\t\t\t\t\t\treturn this.run(accessor, editor);\n\t\t\t\t\t});\n\t\t\t\t}, onUnexpectedError);\n\t\t}\n\n\t\treturn super.runCommand(accessor, args);\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst logService = accessor.get(ILogService);\n\n\t\tconst controller = RenameController.get(editor);\n\n\t\tif (controller) {\n\t\t\tlogService.trace(\"[RenameAction] got controller, running...\");\n\t\t\treturn controller.run();\n\t\t}\n\t\tlogService.trace(\"[RenameAction] returning early - controller missing\");\n\t\treturn Promise.resolve();\n\t}\n}\n\nregisterEditorContribution(\n\tRenameController.ID,\n\tRenameController,\n\tEditorContributionInstantiation.Lazy,\n);\nregisterEditorAction(RenameAction);\n\nconst RenameCommand = EditorCommand.bindToContribution<RenameController>(\n\tRenameController.get,\n);\n\nregisterEditorCommand(\n\tnew RenameCommand({\n\t\tid: \"acceptRenameInput\",\n\t\tprecondition: CONTEXT_RENAME_INPUT_VISIBLE,\n\t\thandler: (x) => x.acceptRenameInput(false),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.focus,\n\t\t\t\tContextKeyExpr.not(\"isComposing\"),\n\t\t\t),\n\t\t\tprimary: KeyCode.Enter,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew RenameCommand({\n\t\tid: \"acceptRenameInputWithPreview\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tCONTEXT_RENAME_INPUT_VISIBLE,\n\t\t\tContextKeyExpr.has(\"config.editor.rename.enablePreview\"),\n\t\t),\n\t\thandler: (x) => x.acceptRenameInput(true),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.focus,\n\t\t\t\tContextKeyExpr.not(\"isComposing\"),\n\t\t\t),\n\t\t\tprimary: KeyMod.CtrlCmd + KeyCode.Enter,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew RenameCommand({\n\t\tid: \"cancelRenameInput\",\n\t\tprecondition: CONTEXT_RENAME_INPUT_VISIBLE,\n\t\thandler: (x) => x.cancelRenameInput(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: KeyCode.Escape,\n\t\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\t},\n\t}),\n);\n\nregisterAction2(\n\tclass FocusNextRenameSuggestion extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"focusNextRenameSuggestion\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...nls.localize2(\n\t\t\t\t\t\t\"focusNextRenameSuggestion\",\n\t\t\t\t\t\t\"Focus Next Rename Suggestion\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tprecondition: CONTEXT_RENAME_INPUT_VISIBLE,\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\t\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\toverride run(accessor: ServicesAccessor): void {\n\t\t\tconst currentEditor = accessor\n\t\t\t\t.get(ICodeEditorService)\n\t\t\t\t.getFocusedCodeEditor();\n\t\t\tif (!currentEditor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst controller = RenameController.get(currentEditor);\n\t\t\tif (!controller) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.focusNextRenameSuggestion();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass FocusPreviousRenameSuggestion extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"focusPreviousRenameSuggestion\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...nls.localize2(\n\t\t\t\t\t\t\"focusPreviousRenameSuggestion\",\n\t\t\t\t\t\t\"Focus Previous Rename Suggestion\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tprecondition: CONTEXT_RENAME_INPUT_VISIBLE,\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\t\t\tweight: KeybindingWeight.EditorContrib + 99,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\toverride run(accessor: ServicesAccessor): void {\n\t\t\tconst currentEditor = accessor\n\t\t\t\t.get(ICodeEditorService)\n\t\t\t\t.getFocusedCodeEditor();\n\t\t\tif (!currentEditor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst controller = RenameController.get(currentEditor);\n\t\t\tif (!controller) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.focusPreviousRenameSuggestion();\n\t\t}\n\t},\n);\n\n// ---- api bridge command\n\nregisterModelAndPositionCommand(\n\t\"_executeDocumentRenameProvider\",\n\t(accessor, model, position, ...args) => {\n\t\tconst [newName] = args;\n\t\tassertType(typeof newName === \"string\");\n\t\tconst { renameProvider } = accessor.get(ILanguageFeaturesService);\n\t\treturn rename(renameProvider, model, position, newName);\n\t},\n);\n\nregisterModelAndPositionCommand(\n\t\"_executePrepareRename\",\n\tasync (accessor, model, position) => {\n\t\tconst { renameProvider } = accessor.get(ILanguageFeaturesService);\n\t\tconst skeleton = new RenameSkeleton(model, position, renameProvider);\n\t\tconst loc = await skeleton.resolveRenameLocation(\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tif (loc?.rejectReason) {\n\t\t\tthrow new Error(loc.rejectReason);\n\t\t}\n\t\treturn loc;\n\t},\n);\n\n//todo@jrieken use editor options world\nRegistry.as<IConfigurationRegistry>(\n\tExtensions.Configuration,\n).registerConfiguration({\n\tid: \"editor\",\n\tproperties: {\n\t\t\"editor.rename.enablePreview\": {\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"enablePreview\",\n\t\t\t\t\"Enable/disable the ability to preview changes before renaming\",\n\t\t\t),\n\t\t\tdefault: true,\n\t\t\ttype: \"boolean\",\n\t\t},\n\t},\n});\n"],
  "mappings": "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",
  "names": ["accessor"]
}
