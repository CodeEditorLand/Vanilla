var q=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var A=(s,e,o,t)=>{for(var r=t>1?void 0:t?V(e,o):e,i=s.length-1,a;i>=0;i--)(a=s[i])&&(r=(t?a(e,o,r):a(r))||r);return t&&r&&q(e,o,r),r},l=(s,e)=>(o,t)=>e(o,t,s);import{alert as J}from"../../../../base/browser/ui/aria/aria.js";import{raceCancellation as $}from"../../../../base/common/async.js";import{CancellationToken as w,CancellationTokenSource as F}from"../../../../base/common/cancellation.js";import{CancellationError as G,onUnexpectedError as H}from"../../../../base/common/errors.js";import{isMarkdownString as X}from"../../../../base/common/htmlContent.js";import{KeyCode as g,KeyMod as T}from"../../../../base/common/keyCodes.js";import{DisposableStore as Q}from"../../../../base/common/lifecycle.js";import{assertType as Y}from"../../../../base/common/types.js";import{URI as Z}from"../../../../base/common/uri.js";import*as d from"../../../../nls.js";import{Action2 as L,registerAction2 as M}from"../../../../platform/actions/common/actions.js";import{ConfigurationScope as ee,Extensions as te}from"../../../../platform/configuration/common/configurationRegistry.js";import{ContextKeyExpr as v}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as oe}from"../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as f}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{ILogService as W}from"../../../../platform/log/common/log.js";import{INotificationService as ie}from"../../../../platform/notification/common/notification.js";import{IEditorProgressService as re}from"../../../../platform/progress/common/progress.js";import{Registry as ne}from"../../../../platform/registry/common/platform.js";import{ITelemetryService as ae}from"../../../../platform/telemetry/common/telemetry.js";import{EditorAction as se,EditorCommand as ce,EditorContributionInstantiation as de,registerEditorAction as me,registerEditorCommand as b,registerEditorContribution as le,registerModelAndPositionCommand as D}from"../../../browser/editorExtensions.js";import{IBulkEditService as ue}from"../../../browser/services/bulkEditService.js";import{ICodeEditorService as E}from"../../../browser/services/codeEditorService.js";import{Position as pe}from"../../../common/core/position.js";import{Range as _}from"../../../common/core/range.js";import{EditorContextKeys as h}from"../../../common/editorContextKeys.js";import{NewSymbolNameTriggerKind as ge}from"../../../common/languages.js";import{ILanguageFeaturesService as P}from"../../../common/services/languageFeatures.js";import{ITextResourceConfigurationService as ve}from"../../../common/services/textResourceConfiguration.js";import{CodeEditorStateFlag as y,EditorStateCancellationTokenSource as O}from"../../editorState/browser/editorState.js";import{MessageController as z}from"../../message/browser/messageController.js";import{CONTEXT_RENAME_INPUT_VISIBLE as S,RenameWidget as fe}from"./renameWidget.js";class C{constructor(e,o,t){this.model=e;this.position=o;this._providers=t.ordered(e)}_providers;_providerRenameIdx=0;hasProvider(){return this._providers.length>0}async resolveRenameLocation(e){const o=[];for(this._providerRenameIdx=0;this._providerRenameIdx<this._providers.length;this._providerRenameIdx++){const r=this._providers[this._providerRenameIdx];if(!r.resolveRenameLocation)break;const i=await r.resolveRenameLocation(this.model,this.position,e);if(i){if(i.rejectReason){o.push(i.rejectReason);continue}return i}}this._providerRenameIdx=0;const t=this.model.getWordAtPosition(this.position);return t?{range:new _(this.position.lineNumber,t.startColumn,this.position.lineNumber,t.endColumn),text:t.word,rejectReason:o.length>0?o.join(`
`):void 0}:{range:_.fromPositions(this.position),text:"",rejectReason:o.length>0?o.join(`
`):void 0}}async provideRenameEdits(e,o){return this._provideRenameEdits(e,this._providerRenameIdx,[],o)}async _provideRenameEdits(e,o,t,r){const i=this._providers[o];if(!i)return{edits:[],rejectReason:t.join(`
`)};const a=await i.provideRenameEdits(this.model,this.position,e,r);if(a){if(a.rejectReason)return this._provideRenameEdits(e,o+1,t.concat(a.rejectReason),r)}else return this._provideRenameEdits(e,o+1,t.concat(d.localize("no result","No result.")),r);return a}}async function he(s,e,o,t){const r=new C(e,o,s),i=await r.resolveRenameLocation(w.None);return i?.rejectReason?{edits:[],rejectReason:i.rejectReason}:r.provideRenameEdits(t,w.None)}let c=class{constructor(e,o,t,r,i,a,u,R,x){this.editor=e;this._instaService=o;this._notificationService=t;this._bulkEditService=r;this._progressService=i;this._logService=a;this._configService=u;this._languageFeaturesService=R;this._telemetryService=x;this._renameWidget=this._disposableStore.add(this._instaService.createInstance(fe,this.editor,["acceptRenameInput","acceptRenameInputWithPreview"]))}static ID="editor.contrib.renameController";static get(e){return e.getContribution(c.ID)}_renameWidget;_disposableStore=new Q;_cts=new F;dispose(){this._disposableStore.dispose(),this._cts.dispose(!0)}async run(){const e=this._logService.trace.bind(this._logService,"[rename]");if(this._cts.dispose(!0),this._cts=new F,!this.editor.hasModel()){e("editor has no model");return}const o=this.editor.getPosition(),t=new C(this.editor.getModel(),o,this._languageFeaturesService.renameProvider);if(!t.hasProvider()){e("skeleton has no provider");return}const r=new O(this.editor,y.Position|y.Value,void 0,this._cts.token);let i;try{e("resolving rename location");const n=t.resolveRenameLocation(r.token);this._progressService.showWhile(n,250),i=await n,e("resolved rename location")}catch(n){n instanceof G?e("resolve rename location cancelled",JSON.stringify(n,null,"	")):(e("resolve rename location failed",n instanceof Error?n:JSON.stringify(n,null,"	")),(typeof n=="string"||X(n))&&z.get(this.editor)?.showMessage(n||d.localize("resolveRenameLocationFailed","An unknown error occurred while resolving rename location"),o));return}finally{r.dispose()}if(!i){e("returning early - no loc");return}if(i.rejectReason){e(`returning early - rejected with reason: ${i.rejectReason}`,i.rejectReason),z.get(this.editor)?.showMessage(i.rejectReason,o);return}if(r.token.isCancellationRequested){e("returning early - cts1 cancelled");return}const a=new O(this.editor,y.Position|y.Value,i.range,this._cts.token),u=this.editor.getModel(),R=this._languageFeaturesService.newSymbolNamesProvider.all(u),x=await Promise.all(R.map(async n=>[n,await n.supportsAutomaticNewSymbolNamesTriggerKind??!1])),B=(n,p)=>{let I=x.slice();return n===ge.Automatic&&(I=I.filter(([j,U])=>U)),I.map(([j])=>j.provideNewSymbolNames(u,i.range,n,p))};e("creating rename input field and awaiting its result");const K=this._bulkEditService.hasPreviewHandler()&&this._configService.getValue(this.editor.getModel().uri,"editor.rename.enablePreview"),m=await this._renameWidget.getInput(i.range,i.text,K,R.length>0?B:void 0,a);if(e("received response from rename input field"),R.length>0&&this._reportTelemetry(R.length,u.getLanguageId(),m),typeof m=="boolean"){e(`returning early - rename input field response - ${m}`),m&&this.editor.focus(),a.dispose();return}this.editor.focus(),e("requesting rename edits");const N=$(t.provideRenameEdits(m.newName,a.token),a.token).then(async n=>{if(!n){e("returning early - no rename edits result");return}if(!this.editor.hasModel()){e("returning early - no model after rename edits are provided");return}if(n.rejectReason){e(`returning early - rejected with reason: ${n.rejectReason}`),this._notificationService.info(n.rejectReason);return}this.editor.setSelection(_.fromPositions(this.editor.getSelection().getPosition())),e("applying edits"),this._bulkEditService.apply(n,{editor:this.editor,showPreview:m.wantsPreview,label:d.localize("label","Renaming '{0}' to '{1}'",i?.text,m.newName),code:"undoredo.rename",quotableLabel:d.localize("quotableLabel","Renaming {0} to {1}",i?.text,m.newName),respectAutoSaveConfig:!0}).then(p=>{e("edits applied"),p.ariaSummary&&J(d.localize("aria","Successfully renamed '{0}' to '{1}'. Summary: {2}",i.text,m.newName,p.ariaSummary))}).catch(p=>{e(`error when applying edits ${JSON.stringify(p,null,"	")}`),this._notificationService.error(d.localize("rename.failedApply","Rename failed to apply edits")),this._logService.error(p)})},n=>{e("error when providing rename edits",JSON.stringify(n,null,"	")),this._notificationService.error(d.localize("rename.failed","Rename failed to compute edits")),this._logService.error(n)}).finally(()=>{a.dispose()});return e("returning rename operation"),this._progressService.showWhile(N,250),N}acceptRenameInput(e){this._renameWidget.acceptInput(e)}cancelRenameInput(){this._renameWidget.cancelInput(!0,"cancelRenameInput command")}focusNextRenameSuggestion(){this._renameWidget.focusNextRenameSuggestion()}focusPreviousRenameSuggestion(){this._renameWidget.focusPreviousRenameSuggestion()}_reportTelemetry(e,o,t){const r=typeof t=="boolean"?{kind:"cancelled",languageId:o,nRenameSuggestionProviders:e}:{kind:"accepted",languageId:o,nRenameSuggestionProviders:e,source:t.stats.source.k,nRenameSuggestions:t.stats.nRenameSuggestions,timeBeforeFirstInputFieldEdit:t.stats.timeBeforeFirstInputFieldEdit,wantsPreview:t.wantsPreview,nRenameSuggestionsInvocations:t.stats.nRenameSuggestionsInvocations,hadAutomaticRenameSuggestionsInvocation:t.stats.hadAutomaticRenameSuggestionsInvocation};this._telemetryService.publicLog2("renameInvokedEvent",r)}};c=A([l(1,oe),l(2,ie),l(3,ue),l(4,re),l(5,W),l(6,ve),l(7,P),l(8,ae)],c);class Re extends se{constructor(){super({id:"editor.action.rename",label:d.localize("rename.label","Rename Symbol"),alias:"Rename Symbol",precondition:v.and(h.writable,h.hasRenameProvider),kbOpts:{kbExpr:h.editorTextFocus,primary:g.F2,weight:f.EditorContrib},contextMenuOpts:{group:"1_modification",order:1.1}})}runCommand(e,o){const t=e.get(E),[r,i]=Array.isArray(o)&&o||[void 0,void 0];return Z.isUri(r)&&pe.isIPosition(i)?t.openCodeEditor({resource:r},t.getActiveCodeEditor()).then(a=>{a&&(a.setPosition(i),a.invokeWithinContext(u=>(this.reportTelemetry(u,a),this.run(u,a))))},H):super.runCommand(e,o)}run(e,o){const t=e.get(W),r=c.get(o);return r?(t.trace("[RenameAction] got controller, running..."),r.run()):(t.trace("[RenameAction] returning early - controller missing"),Promise.resolve())}}le(c.ID,c,de.Lazy),me(Re);const k=ce.bindToContribution(c.get);b(new k({id:"acceptRenameInput",precondition:S,handler:s=>s.acceptRenameInput(!1),kbOpts:{weight:f.EditorContrib+99,kbExpr:v.and(h.focus,v.not("isComposing")),primary:g.Enter}})),b(new k({id:"acceptRenameInputWithPreview",precondition:v.and(S,v.has("config.editor.rename.enablePreview")),handler:s=>s.acceptRenameInput(!0),kbOpts:{weight:f.EditorContrib+99,kbExpr:v.and(h.focus,v.not("isComposing")),primary:T.CtrlCmd+g.Enter}})),b(new k({id:"cancelRenameInput",precondition:S,handler:s=>s.cancelRenameInput(),kbOpts:{weight:f.EditorContrib+99,kbExpr:h.focus,primary:g.Escape,secondary:[T.Shift|g.Escape]}})),M(class extends L{constructor(){super({id:"focusNextRenameSuggestion",title:{...d.localize2("focusNextRenameSuggestion","Focus Next Rename Suggestion")},precondition:S,keybinding:[{primary:g.DownArrow,weight:f.EditorContrib+99}]})}run(e){const o=e.get(E).getFocusedCodeEditor();if(!o)return;const t=c.get(o);t&&t.focusNextRenameSuggestion()}}),M(class extends L{constructor(){super({id:"focusPreviousRenameSuggestion",title:{...d.localize2("focusPreviousRenameSuggestion","Focus Previous Rename Suggestion")},precondition:S,keybinding:[{primary:g.UpArrow,weight:f.EditorContrib+99}]})}run(e){const o=e.get(E).getFocusedCodeEditor();if(!o)return;const t=c.get(o);t&&t.focusPreviousRenameSuggestion()}}),D("_executeDocumentRenameProvider",(s,e,o,...t)=>{const[r]=t;Y(typeof r=="string");const{renameProvider:i}=s.get(P);return he(i,e,o,r)}),D("_executePrepareRename",async(s,e,o)=>{const{renameProvider:t}=s.get(P),i=await new C(e,o,t).resolveRenameLocation(w.None);if(i?.rejectReason)throw new Error(i.rejectReason);return i}),ne.as(te.Configuration).registerConfiguration({id:"editor",properties:{"editor.rename.enablePreview":{scope:ee.LANGUAGE_OVERRIDABLE,description:d.localize("enablePreview","Enable/disable the ability to preview changes before renaming"),default:!0,type:"boolean"}}});export{Re as RenameAction,he as rename};
