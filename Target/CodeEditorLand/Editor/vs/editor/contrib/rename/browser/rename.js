var q=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var F=(s,e,i,t)=>{for(var r=t>1?void 0:t?V(e,i):e,o=s.length-1,a;o>=0;o--)(a=s[o])&&(r=(t?a(e,i,r):a(r))||r);return t&&r&&q(e,i,r),r},l=(s,e)=>(i,t)=>e(i,t,s);import{alert as J}from"../../../../../vs/base/browser/ui/aria/aria.js";import{raceCancellation as $}from"../../../../../vs/base/common/async.js";import{CancellationToken as w,CancellationTokenSource as j}from"../../../../../vs/base/common/cancellation.js";import{CancellationError as G,onUnexpectedError as H}from"../../../../../vs/base/common/errors.js";import{isMarkdownString as X}from"../../../../../vs/base/common/htmlContent.js";import{KeyCode as p,KeyMod as T}from"../../../../../vs/base/common/keyCodes.js";import{DisposableStore as Q}from"../../../../../vs/base/common/lifecycle.js";import{assertType as Y}from"../../../../../vs/base/common/types.js";import{URI as Z}from"../../../../../vs/base/common/uri.js";import"../../../../../vs/editor/browser/editorBrowser.js";import{EditorAction as ee,EditorCommand as te,EditorContributionInstantiation as ie,registerEditorAction as oe,registerEditorCommand as b,registerEditorContribution as re,registerModelAndPositionCommand as L}from"../../../../../vs/editor/browser/editorExtensions.js";import{IBulkEditService as ne}from"../../../../../vs/editor/browser/services/bulkEditService.js";import{ICodeEditorService as E}from"../../../../../vs/editor/browser/services/codeEditorService.js";import{Position as ae}from"../../../../../vs/editor/common/core/position.js";import{Range as _}from"../../../../../vs/editor/common/core/range.js";import"../../../../../vs/editor/common/editorCommon.js";import{EditorContextKeys as f}from"../../../../../vs/editor/common/editorContextKeys.js";import"../../../../../vs/editor/common/languageFeatureRegistry.js";import{NewSymbolNameTriggerKind as se}from"../../../../../vs/editor/common/languages.js";import"../../../../../vs/editor/common/model.js";import{ILanguageFeaturesService as P}from"../../../../../vs/editor/common/services/languageFeatures.js";import{ITextResourceConfigurationService as ce}from"../../../../../vs/editor/common/services/textResourceConfiguration.js";import{CodeEditorStateFlag as y,EditorStateCancellationTokenSource as M}from"../../../../../vs/editor/contrib/editorState/browser/editorState.js";import{MessageController as W}from"../../../../../vs/editor/contrib/message/browser/messageController.js";import*as d from"../../../../../vs/nls.js";import{Action2 as D,registerAction2 as O}from"../../../../../vs/platform/actions/common/actions.js";import{ConfigurationScope as de,Extensions as me}from"../../../../../vs/platform/configuration/common/configurationRegistry.js";import{ContextKeyExpr as v}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as le}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{KeybindingWeight as h}from"../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import{ILogService as z}from"../../../../../vs/platform/log/common/log.js";import{INotificationService as ue}from"../../../../../vs/platform/notification/common/notification.js";import{IEditorProgressService as ge}from"../../../../../vs/platform/progress/common/progress.js";import{Registry as pe}from"../../../../../vs/platform/registry/common/platform.js";import{ITelemetryService as ve}from"../../../../../vs/platform/telemetry/common/telemetry.js";import{CONTEXT_RENAME_INPUT_VISIBLE as S,RenameWidget as fe}from"./renameWidget.js";class C{constructor(e,i,t){this.model=e;this.position=i;this._providers=t.ordered(e)}_providers;_providerRenameIdx=0;hasProvider(){return this._providers.length>0}async resolveRenameLocation(e){const i=[];for(this._providerRenameIdx=0;this._providerRenameIdx<this._providers.length;this._providerRenameIdx++){const r=this._providers[this._providerRenameIdx];if(!r.resolveRenameLocation)break;const o=await r.resolveRenameLocation(this.model,this.position,e);if(o){if(o.rejectReason){i.push(o.rejectReason);continue}return o}}this._providerRenameIdx=0;const t=this.model.getWordAtPosition(this.position);return t?{range:new _(this.position.lineNumber,t.startColumn,this.position.lineNumber,t.endColumn),text:t.word,rejectReason:i.length>0?i.join(`
`):void 0}:{range:_.fromPositions(this.position),text:"",rejectReason:i.length>0?i.join(`
`):void 0}}async provideRenameEdits(e,i){return this._provideRenameEdits(e,this._providerRenameIdx,[],i)}async _provideRenameEdits(e,i,t,r){const o=this._providers[i];if(!o)return{edits:[],rejectReason:t.join(`
`)};const a=await o.provideRenameEdits(this.model,this.position,e,r);if(a){if(a.rejectReason)return this._provideRenameEdits(e,i+1,t.concat(a.rejectReason),r)}else return this._provideRenameEdits(e,i+1,t.concat(d.localize("no result","No result.")),r);return a}}async function he(s,e,i,t){const r=new C(e,i,s),o=await r.resolveRenameLocation(w.None);return o?.rejectReason?{edits:[],rejectReason:o.rejectReason}:r.provideRenameEdits(t,w.None)}let c=class{constructor(e,i,t,r,o,a,u,R,x){this.editor=e;this._instaService=i;this._notificationService=t;this._bulkEditService=r;this._progressService=o;this._logService=a;this._configService=u;this._languageFeaturesService=R;this._telemetryService=x;this._renameWidget=this._disposableStore.add(this._instaService.createInstance(fe,this.editor,["acceptRenameInput","acceptRenameInputWithPreview"]))}static ID="editor.contrib.renameController";static get(e){return e.getContribution(c.ID)}_renameWidget;_disposableStore=new Q;_cts=new j;dispose(){this._disposableStore.dispose(),this._cts.dispose(!0)}async run(){const e=this._logService.trace.bind(this._logService,"[rename]");if(this._cts.dispose(!0),this._cts=new j,!this.editor.hasModel()){e("editor has no model");return}const i=this.editor.getPosition(),t=new C(this.editor.getModel(),i,this._languageFeaturesService.renameProvider);if(!t.hasProvider()){e("skeleton has no provider");return}const r=new M(this.editor,y.Position|y.Value,void 0,this._cts.token);let o;try{e("resolving rename location");const n=t.resolveRenameLocation(r.token);this._progressService.showWhile(n,250),o=await n,e("resolved rename location")}catch(n){n instanceof G?e("resolve rename location cancelled",JSON.stringify(n,null,"	")):(e("resolve rename location failed",n instanceof Error?n:JSON.stringify(n,null,"	")),(typeof n=="string"||X(n))&&W.get(this.editor)?.showMessage(n||d.localize("resolveRenameLocationFailed","An unknown error occurred while resolving rename location"),i));return}finally{r.dispose()}if(!o){e("returning early - no loc");return}if(o.rejectReason){e(`returning early - rejected with reason: ${o.rejectReason}`,o.rejectReason),W.get(this.editor)?.showMessage(o.rejectReason,i);return}if(r.token.isCancellationRequested){e("returning early - cts1 cancelled");return}const a=new M(this.editor,y.Position|y.Value,o.range,this._cts.token),u=this.editor.getModel(),R=this._languageFeaturesService.newSymbolNamesProvider.all(u),x=await Promise.all(R.map(async n=>[n,await n.supportsAutomaticNewSymbolNamesTriggerKind??!1])),B=(n,g)=>{let I=x.slice();return n===se.Automatic&&(I=I.filter(([A,U])=>U)),I.map(([A])=>A.provideNewSymbolNames(u,o.range,n,g))};e("creating rename input field and awaiting its result");const K=this._bulkEditService.hasPreviewHandler()&&this._configService.getValue(this.editor.getModel().uri,"editor.rename.enablePreview"),m=await this._renameWidget.getInput(o.range,o.text,K,R.length>0?B:void 0,a);if(e("received response from rename input field"),R.length>0&&this._reportTelemetry(R.length,u.getLanguageId(),m),typeof m=="boolean"){e(`returning early - rename input field response - ${m}`),m&&this.editor.focus(),a.dispose();return}this.editor.focus(),e("requesting rename edits");const N=$(t.provideRenameEdits(m.newName,a.token),a.token).then(async n=>{if(!n){e("returning early - no rename edits result");return}if(!this.editor.hasModel()){e("returning early - no model after rename edits are provided");return}if(n.rejectReason){e(`returning early - rejected with reason: ${n.rejectReason}`),this._notificationService.info(n.rejectReason);return}this.editor.setSelection(_.fromPositions(this.editor.getSelection().getPosition())),e("applying edits"),this._bulkEditService.apply(n,{editor:this.editor,showPreview:m.wantsPreview,label:d.localize("label","Renaming '{0}' to '{1}'",o?.text,m.newName),code:"undoredo.rename",quotableLabel:d.localize("quotableLabel","Renaming {0} to {1}",o?.text,m.newName),respectAutoSaveConfig:!0}).then(g=>{e("edits applied"),g.ariaSummary&&J(d.localize("aria","Successfully renamed '{0}' to '{1}'. Summary: {2}",o.text,m.newName,g.ariaSummary))}).catch(g=>{e(`error when applying edits ${JSON.stringify(g,null,"	")}`),this._notificationService.error(d.localize("rename.failedApply","Rename failed to apply edits")),this._logService.error(g)})},n=>{e("error when providing rename edits",JSON.stringify(n,null,"	")),this._notificationService.error(d.localize("rename.failed","Rename failed to compute edits")),this._logService.error(n)}).finally(()=>{a.dispose()});return e("returning rename operation"),this._progressService.showWhile(N,250),N}acceptRenameInput(e){this._renameWidget.acceptInput(e)}cancelRenameInput(){this._renameWidget.cancelInput(!0,"cancelRenameInput command")}focusNextRenameSuggestion(){this._renameWidget.focusNextRenameSuggestion()}focusPreviousRenameSuggestion(){this._renameWidget.focusPreviousRenameSuggestion()}_reportTelemetry(e,i,t){const r=typeof t=="boolean"?{kind:"cancelled",languageId:i,nRenameSuggestionProviders:e}:{kind:"accepted",languageId:i,nRenameSuggestionProviders:e,source:t.stats.source.k,nRenameSuggestions:t.stats.nRenameSuggestions,timeBeforeFirstInputFieldEdit:t.stats.timeBeforeFirstInputFieldEdit,wantsPreview:t.wantsPreview,nRenameSuggestionsInvocations:t.stats.nRenameSuggestionsInvocations,hadAutomaticRenameSuggestionsInvocation:t.stats.hadAutomaticRenameSuggestionsInvocation};this._telemetryService.publicLog2("renameInvokedEvent",r)}};c=F([l(1,le),l(2,ue),l(3,ne),l(4,ge),l(5,z),l(6,ce),l(7,P),l(8,ve)],c);class Re extends ee{constructor(){super({id:"editor.action.rename",label:d.localize("rename.label","Rename Symbol"),alias:"Rename Symbol",precondition:v.and(f.writable,f.hasRenameProvider),kbOpts:{kbExpr:f.editorTextFocus,primary:p.F2,weight:h.EditorContrib},contextMenuOpts:{group:"1_modification",order:1.1}})}runCommand(e,i){const t=e.get(E),[r,o]=Array.isArray(i)&&i||[void 0,void 0];return Z.isUri(r)&&ae.isIPosition(o)?t.openCodeEditor({resource:r},t.getActiveCodeEditor()).then(a=>{a&&(a.setPosition(o),a.invokeWithinContext(u=>(this.reportTelemetry(u,a),this.run(u,a))))},H):super.runCommand(e,i)}run(e,i){const t=e.get(z),r=c.get(i);return r?(t.trace("[RenameAction] got controller, running..."),r.run()):(t.trace("[RenameAction] returning early - controller missing"),Promise.resolve())}}re(c.ID,c,ie.Lazy),oe(Re);const k=te.bindToContribution(c.get);b(new k({id:"acceptRenameInput",precondition:S,handler:s=>s.acceptRenameInput(!1),kbOpts:{weight:h.EditorContrib+99,kbExpr:v.and(f.focus,v.not("isComposing")),primary:p.Enter}})),b(new k({id:"acceptRenameInputWithPreview",precondition:v.and(S,v.has("config.editor.rename.enablePreview")),handler:s=>s.acceptRenameInput(!0),kbOpts:{weight:h.EditorContrib+99,kbExpr:v.and(f.focus,v.not("isComposing")),primary:T.CtrlCmd+p.Enter}})),b(new k({id:"cancelRenameInput",precondition:S,handler:s=>s.cancelRenameInput(),kbOpts:{weight:h.EditorContrib+99,kbExpr:f.focus,primary:p.Escape,secondary:[T.Shift|p.Escape]}})),O(class extends D{constructor(){super({id:"focusNextRenameSuggestion",title:{...d.localize2("focusNextRenameSuggestion","Focus Next Rename Suggestion")},precondition:S,keybinding:[{primary:p.DownArrow,weight:h.EditorContrib+99}]})}run(e){const i=e.get(E).getFocusedCodeEditor();if(!i)return;const t=c.get(i);t&&t.focusNextRenameSuggestion()}}),O(class extends D{constructor(){super({id:"focusPreviousRenameSuggestion",title:{...d.localize2("focusPreviousRenameSuggestion","Focus Previous Rename Suggestion")},precondition:S,keybinding:[{primary:p.UpArrow,weight:h.EditorContrib+99}]})}run(e){const i=e.get(E).getFocusedCodeEditor();if(!i)return;const t=c.get(i);t&&t.focusPreviousRenameSuggestion()}}),L("_executeDocumentRenameProvider",function(s,e,i,...t){const[r]=t;Y(typeof r=="string");const{renameProvider:o}=s.get(P);return he(o,e,i,r)}),L("_executePrepareRename",async function(s,e,i){const{renameProvider:t}=s.get(P),o=await new C(e,i,t).resolveRenameLocation(w.None);if(o?.rejectReason)throw new Error(o.rejectReason);return o}),pe.as(me.Configuration).registerConfiguration({id:"editor",properties:{"editor.rename.enablePreview":{scope:de.LANGUAGE_OVERRIDABLE,description:d.localize("enablePreview","Enable/disable the ability to preview changes before renaming"),default:!0,type:"boolean"}}});export{Re as RenameAction,he as rename};
