{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/bracketMatching/browser/bracketMatching.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport \"./bracketMatching.css\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tMenuId,\n\tMenuRegistry,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { registerColor } from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { themeColorFromId } from \"../../../../platform/theme/common/themeService.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorContributionInstantiation,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport type {\n\tIEditorContribution,\n\tIEditorDecorationsCollection,\n} from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport {\n\ttype IModelDeltaDecoration,\n\tOverviewRulerLane,\n\tTrackedRangeStickiness,\n} from \"../../../common/model.js\";\nimport { ModelDecorationOptions } from \"../../../common/model/textModel.js\";\n\nconst overviewRulerBracketMatchForeground = registerColor(\n\t\"editorOverviewRuler.bracketMatchForeground\",\n\t\"#A0A0A0\",\n\tnls.localize(\n\t\t\"overviewRulerBracketMatchForeground\",\n\t\t\"Overview ruler marker color for matching brackets.\",\n\t),\n);\n\nclass JumpToBracketAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.jumpToBracket\",\n\t\t\tlabel: nls.localize(\"smartSelect.jumpBracket\", \"Go to Bracket\"),\n\t\t\talias: \"Go to Bracket\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tBracketMatchingController.get(editor)?.jumpToBracket();\n\t}\n}\n\nclass SelectToBracketAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.selectToBracket\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"smartSelect.selectToBracket\",\n\t\t\t\t\"Select to Bracket\",\n\t\t\t),\n\t\t\talias: \"Select to Bracket\",\n\t\t\tprecondition: undefined,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\"smartSelect.selectToBracketDescription\",\n\t\t\t\t\t\"Select the text inside and including the brackets or curly braces\",\n\t\t\t\t),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"args\",\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tselectBrackets: {\n\t\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\t\tdefault: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\tlet selectBrackets = true;\n\t\tif (args && args.selectBrackets === false) {\n\t\t\tselectBrackets = false;\n\t\t}\n\t\tBracketMatchingController.get(editor)?.selectToBracket(selectBrackets);\n\t}\n}\nclass RemoveBracketsAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.removeBrackets\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"smartSelect.removeBrackets\",\n\t\t\t\t\"Remove Brackets\",\n\t\t\t),\n\t\t\talias: \"Remove Brackets\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Backspace,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tBracketMatchingController.get(editor)?.removeBrackets(this.id);\n\t}\n}\n\ntype Brackets = [Range, Range];\n\nclass BracketsData {\n\tpublic readonly position: Position;\n\tpublic readonly brackets: Brackets | null;\n\tpublic readonly options: ModelDecorationOptions;\n\n\tconstructor(\n\t\tposition: Position,\n\t\tbrackets: Brackets | null,\n\t\toptions: ModelDecorationOptions,\n\t) {\n\t\tthis.position = position;\n\t\tthis.brackets = brackets;\n\t\tthis.options = options;\n\t}\n}\n\nexport class BracketMatchingController\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.contrib.bracketMatchingController\";\n\n\tpublic static get(editor: ICodeEditor): BracketMatchingController | null {\n\t\treturn editor.getContribution<BracketMatchingController>(\n\t\t\tBracketMatchingController.ID,\n\t\t);\n\t}\n\n\tprivate readonly _editor: ICodeEditor;\n\n\tprivate _lastBracketsData: BracketsData[];\n\tprivate _lastVersionId: number;\n\tprivate readonly _decorations: IEditorDecorationsCollection;\n\tprivate readonly _updateBracketsSoon: RunOnceScheduler;\n\tprivate _matchBrackets: \"never\" | \"near\" | \"always\";\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._lastBracketsData = [];\n\t\tthis._lastVersionId = 0;\n\t\tthis._decorations = this._editor.createDecorationsCollection();\n\t\tthis._updateBracketsSoon = this._register(\n\t\t\tnew RunOnceScheduler(() => this._updateBrackets(), 50),\n\t\t);\n\t\tthis._matchBrackets = this._editor.getOption(\n\t\t\tEditorOption.matchBrackets,\n\t\t);\n\n\t\tthis._updateBracketsSoon.schedule();\n\t\tthis._register(\n\t\t\teditor.onDidChangeCursorPosition((e) => {\n\t\t\t\tif (this._matchBrackets === \"never\") {\n\t\t\t\t\t// Early exit if nothing needs to be done!\n\t\t\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._updateBracketsSoon.schedule();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\teditor.onDidChangeModelContent((e) => {\n\t\t\t\tthis._updateBracketsSoon.schedule();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\teditor.onDidChangeModel((e) => {\n\t\t\t\tthis._lastBracketsData = [];\n\t\t\t\tthis._updateBracketsSoon.schedule();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\teditor.onDidChangeModelLanguageConfiguration((e) => {\n\t\t\t\tthis._lastBracketsData = [];\n\t\t\t\tthis._updateBracketsSoon.schedule();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\teditor.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.hasChanged(EditorOption.matchBrackets)) {\n\t\t\t\t\tthis._matchBrackets = this._editor.getOption(\n\t\t\t\t\t\tEditorOption.matchBrackets,\n\t\t\t\t\t);\n\t\t\t\t\tthis._decorations.clear();\n\t\t\t\t\tthis._lastBracketsData = [];\n\t\t\t\t\tthis._lastVersionId = 0;\n\t\t\t\t\tthis._updateBracketsSoon.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\teditor.onDidBlurEditorWidget(() => {\n\t\t\t\tthis._updateBracketsSoon.schedule();\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\teditor.onDidFocusEditorWidget(() => {\n\t\t\t\tthis._updateBracketsSoon.schedule();\n\t\t\t}),\n\t\t);\n\t}\n\n\tpublic jumpToBracket(): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst newSelections = this._editor.getSelections().map((selection) => {\n\t\t\tconst position = selection.getStartPosition();\n\n\t\t\t// find matching brackets if position is on a bracket\n\t\t\tconst brackets = model.bracketPairs.matchBracket(position);\n\t\t\tlet newCursorPosition: Position | null = null;\n\t\t\tif (brackets) {\n\t\t\t\tif (\n\t\t\t\t\tbrackets[0].containsPosition(position) &&\n\t\t\t\t\t!brackets[1].containsPosition(position)\n\t\t\t\t) {\n\t\t\t\t\tnewCursorPosition = brackets[1].getStartPosition();\n\t\t\t\t} else if (brackets[1].containsPosition(position)) {\n\t\t\t\t\tnewCursorPosition = brackets[0].getStartPosition();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// find the enclosing brackets if the position isn't on a matching bracket\n\t\t\t\tconst enclosingBrackets =\n\t\t\t\t\tmodel.bracketPairs.findEnclosingBrackets(position);\n\t\t\t\tif (enclosingBrackets) {\n\t\t\t\t\tnewCursorPosition = enclosingBrackets[1].getStartPosition();\n\t\t\t\t} else {\n\t\t\t\t\t// no enclosing brackets, try the very first next bracket\n\t\t\t\t\tconst nextBracket =\n\t\t\t\t\t\tmodel.bracketPairs.findNextBracket(position);\n\t\t\t\t\tif (nextBracket && nextBracket.range) {\n\t\t\t\t\t\tnewCursorPosition =\n\t\t\t\t\t\t\tnextBracket.range.getStartPosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newCursorPosition) {\n\t\t\t\treturn new Selection(\n\t\t\t\t\tnewCursorPosition.lineNumber,\n\t\t\t\t\tnewCursorPosition.column,\n\t\t\t\t\tnewCursorPosition.lineNumber,\n\t\t\t\t\tnewCursorPosition.column,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn new Selection(\n\t\t\t\tposition.lineNumber,\n\t\t\t\tposition.column,\n\t\t\t\tposition.lineNumber,\n\t\t\t\tposition.column,\n\t\t\t);\n\t\t});\n\n\t\tthis._editor.setSelections(newSelections);\n\t\tthis._editor.revealRange(newSelections[0]);\n\t}\n\n\tpublic selectToBracket(selectBrackets: boolean): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst newSelections: Selection[] = [];\n\n\t\tthis._editor.getSelections().forEach((selection) => {\n\t\t\tconst position = selection.getStartPosition();\n\t\t\tlet brackets = model.bracketPairs.matchBracket(position);\n\n\t\t\tif (!brackets) {\n\t\t\t\tbrackets = model.bracketPairs.findEnclosingBrackets(position);\n\t\t\t\tif (!brackets) {\n\t\t\t\t\tconst nextBracket =\n\t\t\t\t\t\tmodel.bracketPairs.findNextBracket(position);\n\t\t\t\t\tif (nextBracket && nextBracket.range) {\n\t\t\t\t\t\tbrackets = model.bracketPairs.matchBracket(\n\t\t\t\t\t\t\tnextBracket.range.getStartPosition(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet selectFrom: Position | null = null;\n\t\t\tlet selectTo: Position | null = null;\n\n\t\t\tif (brackets) {\n\t\t\t\tbrackets.sort(Range.compareRangesUsingStarts);\n\t\t\t\tconst [open, close] = brackets;\n\t\t\t\tselectFrom = selectBrackets\n\t\t\t\t\t? open.getStartPosition()\n\t\t\t\t\t: open.getEndPosition();\n\t\t\t\tselectTo = selectBrackets\n\t\t\t\t\t? close.getEndPosition()\n\t\t\t\t\t: close.getStartPosition();\n\n\t\t\t\tif (close.containsPosition(position)) {\n\t\t\t\t\t// select backwards if the cursor was on the closing bracket\n\t\t\t\t\tconst tmp = selectFrom;\n\t\t\t\t\tselectFrom = selectTo;\n\t\t\t\t\tselectTo = tmp;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectFrom && selectTo) {\n\t\t\t\tnewSelections.push(\n\t\t\t\t\tnew Selection(\n\t\t\t\t\t\tselectFrom.lineNumber,\n\t\t\t\t\t\tselectFrom.column,\n\t\t\t\t\t\tselectTo.lineNumber,\n\t\t\t\t\t\tselectTo.column,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tif (newSelections.length > 0) {\n\t\t\tthis._editor.setSelections(newSelections);\n\t\t\tthis._editor.revealRange(newSelections[0]);\n\t\t}\n\t}\n\tpublic removeBrackets(editSource?: string): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tthis._editor.getSelections().forEach((selection) => {\n\t\t\tconst position = selection.getPosition();\n\n\t\t\tlet brackets = model.bracketPairs.matchBracket(position);\n\t\t\tif (!brackets) {\n\t\t\t\tbrackets = model.bracketPairs.findEnclosingBrackets(position);\n\t\t\t}\n\t\t\tif (brackets) {\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t\tthis._editor.executeEdits(editSource, [\n\t\t\t\t\t{ range: brackets[0], text: \"\" },\n\t\t\t\t\t{ range: brackets[1], text: \"\" },\n\t\t\t\t]);\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static readonly _DECORATION_OPTIONS_WITH_OVERVIEW_RULER =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"bracket-match-overview\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tclassName: \"bracket-match\",\n\t\t\toverviewRuler: {\n\t\t\t\tcolor: themeColorFromId(overviewRulerBracketMatchForeground),\n\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t},\n\t\t});\n\n\tprivate static readonly _DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"bracket-match-no-overview\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tclassName: \"bracket-match\",\n\t\t});\n\n\tprivate _updateBrackets(): void {\n\t\tif (this._matchBrackets === \"never\") {\n\t\t\treturn;\n\t\t}\n\t\tthis._recomputeBrackets();\n\n\t\tconst newDecorations: IModelDeltaDecoration[] = [];\n\t\tlet newDecorationsLen = 0;\n\t\tfor (const bracketData of this._lastBracketsData) {\n\t\t\tconst brackets = bracketData.brackets;\n\t\t\tif (brackets) {\n\t\t\t\tnewDecorations[newDecorationsLen++] = {\n\t\t\t\t\trange: brackets[0],\n\t\t\t\t\toptions: bracketData.options,\n\t\t\t\t};\n\t\t\t\tnewDecorations[newDecorationsLen++] = {\n\t\t\t\t\trange: brackets[1],\n\t\t\t\t\toptions: bracketData.options,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthis._decorations.set(newDecorations);\n\t}\n\n\tprivate _recomputeBrackets(): void {\n\t\tif (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n\t\t\t// no model or no focus => no brackets!\n\t\t\tthis._lastBracketsData = [];\n\t\t\tthis._lastVersionId = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tconst selections = this._editor.getSelections();\n\t\tif (selections.length > 100) {\n\t\t\t// no bracket matching for high numbers of selections\n\t\t\tthis._lastBracketsData = [];\n\t\t\tthis._lastVersionId = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst versionId = model.getVersionId();\n\t\tlet previousData: BracketsData[] = [];\n\t\tif (this._lastVersionId === versionId) {\n\t\t\t// use the previous data only if the model is at the same version id\n\t\t\tpreviousData = this._lastBracketsData;\n\t\t}\n\n\t\tconst positions: Position[] = [];\n\t\tlet positionsLen = 0;\n\t\tfor (let i = 0, len = selections.length; i < len; i++) {\n\t\t\tconst selection = selections[i];\n\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\t// will bracket match a cursor only if the selection is collapsed\n\t\t\t\tpositions[positionsLen++] = selection.getStartPosition();\n\t\t\t}\n\t\t}\n\n\t\t// sort positions for `previousData` cache hits\n\t\tif (positions.length > 1) {\n\t\t\tpositions.sort(Position.compare);\n\t\t}\n\n\t\tconst newData: BracketsData[] = [];\n\t\tlet newDataLen = 0;\n\t\tlet previousIndex = 0;\n\t\tconst previousLen = previousData.length;\n\t\tfor (let i = 0, len = positions.length; i < len; i++) {\n\t\t\tconst position = positions[i];\n\n\t\t\twhile (\n\t\t\t\tpreviousIndex < previousLen &&\n\t\t\t\tpreviousData[previousIndex].position.isBefore(position)\n\t\t\t) {\n\t\t\t\tpreviousIndex++;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tpreviousIndex < previousLen &&\n\t\t\t\tpreviousData[previousIndex].position.equals(position)\n\t\t\t) {\n\t\t\t\tnewData[newDataLen++] = previousData[previousIndex];\n\t\t\t} else {\n\t\t\t\tlet brackets = model.bracketPairs.matchBracket(\n\t\t\t\t\tposition,\n\t\t\t\t\t20 /* give at most 20ms to compute */,\n\t\t\t\t);\n\t\t\t\tlet options =\n\t\t\t\t\tBracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\n\t\t\t\tif (!brackets && this._matchBrackets === \"always\") {\n\t\t\t\t\tbrackets = model.bracketPairs.findEnclosingBrackets(\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\t20 /* give at most 20ms to compute */,\n\t\t\t\t\t);\n\t\t\t\t\toptions =\n\t\t\t\t\t\tBracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\n\t\t\t\t}\n\t\t\t\tnewData[newDataLen++] = new BracketsData(\n\t\t\t\t\tposition,\n\t\t\t\t\tbrackets,\n\t\t\t\t\toptions,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._lastBracketsData = newData;\n\t\tthis._lastVersionId = versionId;\n\t}\n}\n\nregisterEditorContribution(\n\tBracketMatchingController.ID,\n\tBracketMatchingController,\n\tEditorContributionInstantiation.AfterFirstRender,\n);\nregisterEditorAction(SelectToBracketAction);\nregisterEditorAction(JumpToBracketAction);\nregisterEditorAction(RemoveBracketsAction);\n\n// Go to menu\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: \"5_infile_nav\",\n\tcommand: {\n\t\tid: \"editor.action.jumpToBracket\",\n\t\ttitle: nls.localize(\n\t\t\t{ key: \"miGoToBracket\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"Go to &&Bracket\",\n\t\t),\n\t},\n\torder: 2,\n});\n"],
  "mappings": "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",
  "names": []
}
