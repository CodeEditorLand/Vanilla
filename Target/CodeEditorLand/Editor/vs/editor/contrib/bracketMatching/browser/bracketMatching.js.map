{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/bracketMatching/browser/bracketMatching.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport './bracketMatching.css';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorContributionInstantiation, registerEditorAction, registerEditorContribution, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorContribution, IEditorDecorationsCollection } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IModelDeltaDecoration, OverviewRulerLane, TrackedRangeStickiness } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', '#A0A0A0', nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\n\nclass JumpToBracketAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.jumpToBracket',\n\t\t\tlabel: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\n\t\t\talias: 'Go to Bracket',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tBracketMatchingController.get(editor)?.jumpToBracket();\n\t}\n}\n\nclass SelectToBracketAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.selectToBracket',\n\t\t\tlabel: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\n\t\t\talias: 'Select to Bracket',\n\t\t\tprecondition: undefined,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('smartSelect.selectToBracketDescription', \"Select the text inside and including the brackets or curly braces\"),\n\t\t\t\targs: [{\n\t\t\t\t\tname: 'args',\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t'selectBrackets': {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tlet selectBrackets = true;\n\t\tif (args && args.selectBrackets === false) {\n\t\t\tselectBrackets = false;\n\t\t}\n\t\tBracketMatchingController.get(editor)?.selectToBracket(selectBrackets);\n\t}\n}\nclass RemoveBracketsAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.removeBrackets',\n\t\t\tlabel: nls.localize('smartSelect.removeBrackets', \"Remove Brackets\"),\n\t\t\talias: 'Remove Brackets',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Backspace,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tBracketMatchingController.get(editor)?.removeBrackets(this.id);\n\t}\n}\n\ntype Brackets = [Range, Range];\n\nclass BracketsData {\n\tpublic readonly position: Position;\n\tpublic readonly brackets: Brackets | null;\n\tpublic readonly options: ModelDecorationOptions;\n\n\tconstructor(position: Position, brackets: Brackets | null, options: ModelDecorationOptions) {\n\t\tthis.position = position;\n\t\tthis.brackets = brackets;\n\t\tthis.options = options;\n\t}\n}\n\nexport class BracketMatchingController extends Disposable implements IEditorContribution {\n\tpublic static readonly ID = 'editor.contrib.bracketMatchingController';\n\n\tpublic static get(editor: ICodeEditor): BracketMatchingController | null {\n\t\treturn editor.getContribution<BracketMatchingController>(BracketMatchingController.ID);\n\t}\n\n\tprivate readonly _editor: ICodeEditor;\n\n\tprivate _lastBracketsData: BracketsData[];\n\tprivate _lastVersionId: number;\n\tprivate readonly _decorations: IEditorDecorationsCollection;\n\tprivate readonly _updateBracketsSoon: RunOnceScheduler;\n\tprivate _matchBrackets: 'never' | 'near' | 'always';\n\n\tconstructor(\n\t\teditor: ICodeEditor\n\t) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._lastBracketsData = [];\n\t\tthis._lastVersionId = 0;\n\t\tthis._decorations = this._editor.createDecorationsCollection();\n\t\tthis._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\n\t\tthis._matchBrackets = this._editor.getOption(EditorOption.matchBrackets);\n\n\t\tthis._updateBracketsSoon.schedule();\n\t\tthis._register(editor.onDidChangeCursorPosition((e) => {\n\n\t\t\tif (this._matchBrackets === 'never') {\n\t\t\t\t// Early exit if nothing needs to be done!\n\t\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t\tthis._register(editor.onDidChangeModelContent((e) => {\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t\tthis._register(editor.onDidChangeModel((e) => {\n\t\t\tthis._lastBracketsData = [];\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t\tthis._register(editor.onDidChangeModelLanguageConfiguration((e) => {\n\t\t\tthis._lastBracketsData = [];\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t\tthis._register(editor.onDidChangeConfiguration((e) => {\n\t\t\tif (e.hasChanged(EditorOption.matchBrackets)) {\n\t\t\t\tthis._matchBrackets = this._editor.getOption(EditorOption.matchBrackets);\n\t\t\t\tthis._decorations.clear();\n\t\t\t\tthis._lastBracketsData = [];\n\t\t\t\tthis._lastVersionId = 0;\n\t\t\t\tthis._updateBracketsSoon.schedule();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(editor.onDidBlurEditorWidget(() => {\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\n\t\tthis._register(editor.onDidFocusEditorWidget(() => {\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t}\n\n\tpublic jumpToBracket(): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst newSelections = this._editor.getSelections().map(selection => {\n\t\t\tconst position = selection.getStartPosition();\n\n\t\t\t// find matching brackets if position is on a bracket\n\t\t\tconst brackets = model.bracketPairs.matchBracket(position);\n\t\t\tlet newCursorPosition: Position | null = null;\n\t\t\tif (brackets) {\n\t\t\t\tif (brackets[0].containsPosition(position) && !brackets[1].containsPosition(position)) {\n\t\t\t\t\tnewCursorPosition = brackets[1].getStartPosition();\n\t\t\t\t} else if (brackets[1].containsPosition(position)) {\n\t\t\t\t\tnewCursorPosition = brackets[0].getStartPosition();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// find the enclosing brackets if the position isn't on a matching bracket\n\t\t\t\tconst enclosingBrackets = model.bracketPairs.findEnclosingBrackets(position);\n\t\t\t\tif (enclosingBrackets) {\n\t\t\t\t\tnewCursorPosition = enclosingBrackets[1].getStartPosition();\n\t\t\t\t} else {\n\t\t\t\t\t// no enclosing brackets, try the very first next bracket\n\t\t\t\t\tconst nextBracket = model.bracketPairs.findNextBracket(position);\n\t\t\t\t\tif (nextBracket && nextBracket.range) {\n\t\t\t\t\t\tnewCursorPosition = nextBracket.range.getStartPosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newCursorPosition) {\n\t\t\t\treturn new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n\t\t\t}\n\t\t\treturn new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\t});\n\n\t\tthis._editor.setSelections(newSelections);\n\t\tthis._editor.revealRange(newSelections[0]);\n\t}\n\n\tpublic selectToBracket(selectBrackets: boolean): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst newSelections: Selection[] = [];\n\n\t\tthis._editor.getSelections().forEach(selection => {\n\t\t\tconst position = selection.getStartPosition();\n\t\t\tlet brackets = model.bracketPairs.matchBracket(position);\n\n\t\t\tif (!brackets) {\n\t\t\t\tbrackets = model.bracketPairs.findEnclosingBrackets(position);\n\t\t\t\tif (!brackets) {\n\t\t\t\t\tconst nextBracket = model.bracketPairs.findNextBracket(position);\n\t\t\t\t\tif (nextBracket && nextBracket.range) {\n\t\t\t\t\t\tbrackets = model.bracketPairs.matchBracket(nextBracket.range.getStartPosition());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet selectFrom: Position | null = null;\n\t\t\tlet selectTo: Position | null = null;\n\n\t\t\tif (brackets) {\n\t\t\t\tbrackets.sort(Range.compareRangesUsingStarts);\n\t\t\t\tconst [open, close] = brackets;\n\t\t\t\tselectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();\n\t\t\t\tselectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();\n\n\t\t\t\tif (close.containsPosition(position)) {\n\t\t\t\t\t// select backwards if the cursor was on the closing bracket\n\t\t\t\t\tconst tmp = selectFrom;\n\t\t\t\t\tselectFrom = selectTo;\n\t\t\t\t\tselectTo = tmp;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectFrom && selectTo) {\n\t\t\t\tnewSelections.push(new Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));\n\t\t\t}\n\t\t});\n\n\t\tif (newSelections.length > 0) {\n\t\t\tthis._editor.setSelections(newSelections);\n\t\t\tthis._editor.revealRange(newSelections[0]);\n\t\t}\n\t}\n\tpublic removeBrackets(editSource?: string): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tthis._editor.getSelections().forEach((selection) => {\n\t\t\tconst position = selection.getPosition();\n\n\t\t\tlet brackets = model.bracketPairs.matchBracket(position);\n\t\t\tif (!brackets) {\n\t\t\t\tbrackets = model.bracketPairs.findEnclosingBrackets(position);\n\t\t\t}\n\t\t\tif (brackets) {\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t\tthis._editor.executeEdits(\n\t\t\t\t\teditSource,\n\t\t\t\t\t[\n\t\t\t\t\t\t{ range: brackets[0], text: '' },\n\t\t\t\t\t\t{ range: brackets[1], text: '' }\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static readonly _DECORATION_OPTIONS_WITH_OVERVIEW_RULER = ModelDecorationOptions.register({\n\t\tdescription: 'bracket-match-overview',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'bracket-match',\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerBracketMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tprivate static readonly _DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = ModelDecorationOptions.register({\n\t\tdescription: 'bracket-match-no-overview',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'bracket-match'\n\t});\n\n\tprivate _updateBrackets(): void {\n\t\tif (this._matchBrackets === 'never') {\n\t\t\treturn;\n\t\t}\n\t\tthis._recomputeBrackets();\n\n\t\tconst newDecorations: IModelDeltaDecoration[] = [];\n\t\tlet newDecorationsLen = 0;\n\t\tfor (const bracketData of this._lastBracketsData) {\n\t\t\tconst brackets = bracketData.brackets;\n\t\t\tif (brackets) {\n\t\t\t\tnewDecorations[newDecorationsLen++] = { range: brackets[0], options: bracketData.options };\n\t\t\t\tnewDecorations[newDecorationsLen++] = { range: brackets[1], options: bracketData.options };\n\t\t\t}\n\t\t}\n\n\t\tthis._decorations.set(newDecorations);\n\t}\n\n\tprivate _recomputeBrackets(): void {\n\t\tif (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n\t\t\t// no model or no focus => no brackets!\n\t\t\tthis._lastBracketsData = [];\n\t\t\tthis._lastVersionId = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tconst selections = this._editor.getSelections();\n\t\tif (selections.length > 100) {\n\t\t\t// no bracket matching for high numbers of selections\n\t\t\tthis._lastBracketsData = [];\n\t\t\tthis._lastVersionId = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst versionId = model.getVersionId();\n\t\tlet previousData: BracketsData[] = [];\n\t\tif (this._lastVersionId === versionId) {\n\t\t\t// use the previous data only if the model is at the same version id\n\t\t\tpreviousData = this._lastBracketsData;\n\t\t}\n\n\t\tconst positions: Position[] = [];\n\t\tlet positionsLen = 0;\n\t\tfor (let i = 0, len = selections.length; i < len; i++) {\n\t\t\tconst selection = selections[i];\n\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\t// will bracket match a cursor only if the selection is collapsed\n\t\t\t\tpositions[positionsLen++] = selection.getStartPosition();\n\t\t\t}\n\t\t}\n\n\t\t// sort positions for `previousData` cache hits\n\t\tif (positions.length > 1) {\n\t\t\tpositions.sort(Position.compare);\n\t\t}\n\n\t\tconst newData: BracketsData[] = [];\n\t\tlet newDataLen = 0;\n\t\tlet previousIndex = 0;\n\t\tconst previousLen = previousData.length;\n\t\tfor (let i = 0, len = positions.length; i < len; i++) {\n\t\t\tconst position = positions[i];\n\n\t\t\twhile (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\n\t\t\t\tpreviousIndex++;\n\t\t\t}\n\n\t\t\tif (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\n\t\t\t\tnewData[newDataLen++] = previousData[previousIndex];\n\t\t\t} else {\n\t\t\t\tlet brackets = model.bracketPairs.matchBracket(position, 20 /* give at most 20ms to compute */);\n\t\t\t\tlet options = BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\n\t\t\t\tif (!brackets && this._matchBrackets === 'always') {\n\t\t\t\t\tbrackets = model.bracketPairs.findEnclosingBrackets(position, 20 /* give at most 20ms to compute */);\n\t\t\t\t\toptions = BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\n\t\t\t\t}\n\t\t\t\tnewData[newDataLen++] = new BracketsData(position, brackets, options);\n\t\t\t}\n\t\t}\n\n\t\tthis._lastBracketsData = newData;\n\t\tthis._lastVersionId = versionId;\n\t}\n}\n\nregisterEditorContribution(BracketMatchingController.ID, BracketMatchingController, EditorContributionInstantiation.AfterFirstRender);\nregisterEditorAction(SelectToBracketAction);\nregisterEditorAction(JumpToBracketAction);\nregisterEditorAction(RemoveBracketsAction);\n\n// Go to menu\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '5_infile_nav',\n\tcommand: {\n\t\tid: 'editor.action.jumpToBracket',\n\t\ttitle: nls.localize({ key: 'miGoToBracket', comment: ['&& denotes a mnemonic'] }, \"Go to &&Bracket\")\n\t},\n\torder: 2\n});\n"],
  "mappings": "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",
  "names": []
}
