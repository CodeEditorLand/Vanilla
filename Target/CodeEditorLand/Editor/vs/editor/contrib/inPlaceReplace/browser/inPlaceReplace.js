var N=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var h=(c,r,i,e)=>{for(var n=e>1?void 0:e?w(r,i):r,t=c.length-1,d;t>=0;t--)(d=c[t])&&(n=(e?d(r,i,n):d(n))||n);return e&&n&&N(r,i,n),n},v=(c,r)=>(i,e)=>r(i,e,c);import{createCancelablePromise as k,timeout as x}from"../../../../base/common/async.js";import{onUnexpectedError as f}from"../../../../base/common/errors.js";import{KeyCode as C,KeyMod as l}from"../../../../base/common/keyCodes.js";import{CodeEditorStateFlag as b,EditorState as y}from"../../editorState/browser/editorState.js";import"../../../browser/editorBrowser.js";import{EditorAction as g,EditorContributionInstantiation as D,registerEditorAction as R,registerEditorContribution as A}from"../../../browser/editorExtensions.js";import{Range as L}from"../../../common/core/range.js";import{Selection as W}from"../../../common/core/selection.js";import"../../../common/editorCommon.js";import{EditorContextKeys as u}from"../../../common/editorContextKeys.js";import{ModelDecorationOptions as O}from"../../../common/model/textModel.js";import"../../../common/languages.js";import{IEditorWorkerService as V}from"../../../common/services/editorWorker.js";import*as E from"../../../../nls.js";import{KeybindingWeight as I}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{InPlaceReplaceCommand as U}from"./inPlaceReplaceCommand.js";import"./inPlaceReplace.css";let o=class{static ID="editor.contrib.inPlaceReplaceController";static get(r){return r.getContribution(o.ID)}static DECORATION=O.register({description:"in-place-replace",className:"valueSetReplacement"});editor;editorWorkerService;decorations;currentRequest;decorationRemover;constructor(r,i){this.editor=r,this.editorWorkerService=i,this.decorations=this.editor.createDecorationsCollection()}dispose(){}run(r,i){this.currentRequest?.cancel();const e=this.editor.getSelection(),n=this.editor.getModel();if(!n||!e)return;let t=e;if(t.startLineNumber!==t.endLineNumber)return;const d=new y(this.editor,b.Value|b.Position),m=n.uri;return this.editorWorkerService.canNavigateValueSet(m)?(this.currentRequest=k(a=>this.editorWorkerService.navigateValueSet(m,t,i)),this.currentRequest.then(a=>{if(!a||!a.range||!a.value||!d.validate(this.editor))return;const S=L.lift(a.range);let s=a.range;const p=a.value.length-(t.endColumn-t.startColumn);s={startLineNumber:s.startLineNumber,startColumn:s.startColumn,endLineNumber:s.endLineNumber,endColumn:s.startColumn+a.value.length},p>1&&(t=new W(t.startLineNumber,t.startColumn,t.endLineNumber,t.endColumn+p-1));const P=new U(S,t,a.value);this.editor.pushUndoStop(),this.editor.executeCommand(r,P),this.editor.pushUndoStop(),this.decorations.set([{range:s,options:o.DECORATION}]),this.decorationRemover?.cancel(),this.decorationRemover=x(350),this.decorationRemover.then(()=>this.decorations.clear()).catch(f)}).catch(f)):Promise.resolve(void 0)}};o=h([v(1,V)],o);class q extends g{constructor(){super({id:"editor.action.inPlaceReplace.up",label:E.localize("InPlaceReplaceAction.previous.label","Replace with Previous Value"),alias:"Replace with Previous Value",precondition:u.writable,kbOpts:{kbExpr:u.editorTextFocus,primary:l.CtrlCmd|l.Shift|C.Comma,weight:I.EditorContrib}})}run(r,i){const e=o.get(i);return e?e.run(this.id,!1):Promise.resolve(void 0)}}class K extends g{constructor(){super({id:"editor.action.inPlaceReplace.down",label:E.localize("InPlaceReplaceAction.next.label","Replace with Next Value"),alias:"Replace with Next Value",precondition:u.writable,kbOpts:{kbExpr:u.editorTextFocus,primary:l.CtrlCmd|l.Shift|C.Period,weight:I.EditorContrib}})}run(r,i){const e=o.get(i);return e?e.run(this.id,!0):Promise.resolve(void 0)}}A(o.ID,o,D.Lazy),R(q),R(K);
