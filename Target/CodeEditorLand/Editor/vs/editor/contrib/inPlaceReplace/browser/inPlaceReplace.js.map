{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancelablePromise,\n\tcreateCancelablePromise,\n\ttimeout,\n} from \"../../../../base/common/async.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorContributionInstantiation,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport type {\n\tIEditorContribution,\n\tIEditorDecorationsCollection,\n} from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport type { IInplaceReplaceSupportResult } from \"../../../common/languages.js\";\nimport { ModelDecorationOptions } from \"../../../common/model/textModel.js\";\nimport { IEditorWorkerService } from \"../../../common/services/editorWorker.js\";\nimport {\n\tCodeEditorStateFlag,\n\tEditorState,\n} from \"../../editorState/browser/editorState.js\";\nimport { InPlaceReplaceCommand } from \"./inPlaceReplaceCommand.js\";\nimport \"./inPlaceReplace.css\";\n\nclass InPlaceReplaceController implements IEditorContribution {\n\tpublic static readonly ID = \"editor.contrib.inPlaceReplaceController\";\n\n\tstatic get(editor: ICodeEditor): InPlaceReplaceController | null {\n\t\treturn editor.getContribution<InPlaceReplaceController>(\n\t\t\tInPlaceReplaceController.ID,\n\t\t);\n\t}\n\n\tprivate static readonly DECORATION = ModelDecorationOptions.register({\n\t\tdescription: \"in-place-replace\",\n\t\tclassName: \"valueSetReplacement\",\n\t});\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate readonly editorWorkerService: IEditorWorkerService;\n\tprivate readonly decorations: IEditorDecorationsCollection;\n\tprivate currentRequest?: CancelablePromise<IInplaceReplaceSupportResult | null>;\n\tprivate decorationRemover?: CancelablePromise<void>;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService,\n\t) {\n\t\tthis.editor = editor;\n\t\tthis.editorWorkerService = editorWorkerService;\n\t\tthis.decorations = this.editor.createDecorationsCollection();\n\t}\n\n\tpublic dispose(): void {}\n\n\tpublic run(source: string, up: boolean): Promise<void> | undefined {\n\t\t// cancel any pending request\n\t\tthis.currentRequest?.cancel();\n\n\t\tconst editorSelection = this.editor.getSelection();\n\t\tconst model = this.editor.getModel();\n\t\tif (!model || !editorSelection) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet selection = editorSelection;\n\t\tif (selection.startLineNumber !== selection.endLineNumber) {\n\t\t\t// Can't accept multiline selection\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst state = new EditorState(\n\t\t\tthis.editor,\n\t\t\tCodeEditorStateFlag.Value | CodeEditorStateFlag.Position,\n\t\t);\n\t\tconst modelURI = model.uri;\n\t\tif (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.currentRequest = createCancelablePromise((token) =>\n\t\t\tthis.editorWorkerService.navigateValueSet(modelURI, selection, up),\n\t\t);\n\n\t\treturn this.currentRequest\n\t\t\t.then((result) => {\n\t\t\t\tif (!result || !result.range || !result.value) {\n\t\t\t\t\t// No proper result\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!state.validate(this.editor)) {\n\t\t\t\t\t// state has changed\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Selection\n\t\t\t\tconst editRange = Range.lift(result.range);\n\t\t\t\tlet highlightRange = result.range;\n\t\t\t\tconst diff =\n\t\t\t\t\tresult.value.length -\n\t\t\t\t\t(selection.endColumn - selection.startColumn);\n\n\t\t\t\t// highlight\n\t\t\t\thighlightRange = {\n\t\t\t\t\tstartLineNumber: highlightRange.startLineNumber,\n\t\t\t\t\tstartColumn: highlightRange.startColumn,\n\t\t\t\t\tendLineNumber: highlightRange.endLineNumber,\n\t\t\t\t\tendColumn: highlightRange.startColumn + result.value.length,\n\t\t\t\t};\n\t\t\t\tif (diff > 1) {\n\t\t\t\t\tselection = new Selection(\n\t\t\t\t\t\tselection.startLineNumber,\n\t\t\t\t\t\tselection.startColumn,\n\t\t\t\t\t\tselection.endLineNumber,\n\t\t\t\t\t\tselection.endColumn + diff - 1,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Insert new text\n\t\t\t\tconst command = new InPlaceReplaceCommand(\n\t\t\t\t\teditRange,\n\t\t\t\t\tselection,\n\t\t\t\t\tresult.value,\n\t\t\t\t);\n\n\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\tthis.editor.executeCommand(source, command);\n\t\t\t\tthis.editor.pushUndoStop();\n\n\t\t\t\t// add decoration\n\t\t\t\tthis.decorations.set([\n\t\t\t\t\t{\n\t\t\t\t\t\trange: highlightRange,\n\t\t\t\t\t\toptions: InPlaceReplaceController.DECORATION,\n\t\t\t\t\t},\n\t\t\t\t]);\n\n\t\t\t\t// remove decoration after delay\n\t\t\t\tthis.decorationRemover?.cancel();\n\t\t\t\tthis.decorationRemover = timeout(350);\n\t\t\t\tthis.decorationRemover\n\t\t\t\t\t.then(() => this.decorations.clear())\n\t\t\t\t\t.catch(onUnexpectedError);\n\t\t\t})\n\t\t\t.catch(onUnexpectedError);\n\t}\n}\n\nclass InPlaceReplaceUp extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.inPlaceReplace.up\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"InPlaceReplaceAction.previous.label\",\n\t\t\t\t\"Replace with Previous Value\",\n\t\t\t),\n\t\t\talias: \"Replace with Previous Value\",\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Comma,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t): Promise<void> | undefined {\n\t\tconst controller = InPlaceReplaceController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn controller.run(this.id, false);\n\t}\n}\n\nclass InPlaceReplaceDown extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.inPlaceReplace.down\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"InPlaceReplaceAction.next.label\",\n\t\t\t\t\"Replace with Next Value\",\n\t\t\t),\n\t\t\talias: \"Replace with Next Value\",\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Period,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t): Promise<void> | undefined {\n\t\tconst controller = InPlaceReplaceController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn controller.run(this.id, true);\n\t}\n}\n\nregisterEditorContribution(\n\tInPlaceReplaceController.ID,\n\tInPlaceReplaceController,\n\tEditorContributionInstantiation.Lazy,\n);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n"],
  "mappings": "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",
  "names": []
}
