{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { CodeEditorStateFlag, EditorState } from '../../editorState/browser/editorState.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorContributionInstantiation, registerEditorAction, registerEditorContribution, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorContribution, IEditorDecorationsCollection } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IInplaceReplaceSupportResult } from '../../../common/languages.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\n\nclass InPlaceReplaceController implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.inPlaceReplaceController';\n\n\tstatic get(editor: ICodeEditor): InPlaceReplaceController | null {\n\t\treturn editor.getContribution<InPlaceReplaceController>(InPlaceReplaceController.ID);\n\t}\n\n\tprivate static readonly DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'in-place-replace',\n\t\tclassName: 'valueSetReplacement'\n\t});\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate readonly editorWorkerService: IEditorWorkerService;\n\tprivate readonly decorations: IEditorDecorationsCollection;\n\tprivate currentRequest?: CancelablePromise<IInplaceReplaceSupportResult | null>;\n\tprivate decorationRemover?: CancelablePromise<void>;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService\n\t) {\n\t\tthis.editor = editor;\n\t\tthis.editorWorkerService = editorWorkerService;\n\t\tthis.decorations = this.editor.createDecorationsCollection();\n\t}\n\n\tpublic dispose(): void {\n\t}\n\n\tpublic run(source: string, up: boolean): Promise<void> | undefined {\n\n\t\t// cancel any pending request\n\t\tthis.currentRequest?.cancel();\n\n\t\tconst editorSelection = this.editor.getSelection();\n\t\tconst model = this.editor.getModel();\n\t\tif (!model || !editorSelection) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet selection = editorSelection;\n\t\tif (selection.startLineNumber !== selection.endLineNumber) {\n\t\t\t// Can't accept multiline selection\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst state = new EditorState(this.editor, CodeEditorStateFlag.Value | CodeEditorStateFlag.Position);\n\t\tconst modelURI = model.uri;\n\t\tif (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n\n\t\treturn this.currentRequest.then(result => {\n\n\t\t\tif (!result || !result.range || !result.value) {\n\t\t\t\t// No proper result\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!state.validate(this.editor)) {\n\t\t\t\t// state has changed\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Selection\n\t\t\tconst editRange = Range.lift(result.range);\n\t\t\tlet highlightRange = result.range;\n\t\t\tconst diff = result.value.length - (selection.endColumn - selection.startColumn);\n\n\t\t\t// highlight\n\t\t\thighlightRange = {\n\t\t\t\tstartLineNumber: highlightRange.startLineNumber,\n\t\t\t\tstartColumn: highlightRange.startColumn,\n\t\t\t\tendLineNumber: highlightRange.endLineNumber,\n\t\t\t\tendColumn: highlightRange.startColumn + result.value.length\n\t\t\t};\n\t\t\tif (diff > 1) {\n\t\t\t\tselection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n\t\t\t}\n\n\t\t\t// Insert new text\n\t\t\tconst command = new InPlaceReplaceCommand(editRange, selection, result.value);\n\n\t\t\tthis.editor.pushUndoStop();\n\t\t\tthis.editor.executeCommand(source, command);\n\t\t\tthis.editor.pushUndoStop();\n\n\t\t\t// add decoration\n\t\t\tthis.decorations.set([{\n\t\t\t\trange: highlightRange,\n\t\t\t\toptions: InPlaceReplaceController.DECORATION\n\t\t\t}]);\n\n\t\t\t// remove decoration after delay\n\t\t\tthis.decorationRemover?.cancel();\n\t\t\tthis.decorationRemover = timeout(350);\n\t\t\tthis.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n\n\t\t}).catch(onUnexpectedError);\n\t}\n}\n\nclass InPlaceReplaceUp extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inPlaceReplace.up',\n\t\t\tlabel: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n\t\t\talias: 'Replace with Previous Value',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Comma,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> | undefined {\n\t\tconst controller = InPlaceReplaceController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn controller.run(this.id, false);\n\t}\n}\n\nclass InPlaceReplaceDown extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inPlaceReplace.down',\n\t\t\tlabel: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n\t\t\talias: 'Replace with Next Value',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Period,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> | undefined {\n\t\tconst controller = InPlaceReplaceController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn controller.run(this.id, true);\n\t}\n}\n\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, EditorContributionInstantiation.Lazy);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n"],
  "mappings": "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",
  "names": []
}
