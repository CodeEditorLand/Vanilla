var g=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var m=(t,i,e,o)=>{for(var r=o>1?void 0:o?f(i,e):i,n=t.length-1,l;n>=0;n--)(l=t[n])&&(r=(o?l(i,e,r):l(r))||r);return o&&r&&g(i,e,r),r},d=(t,i)=>(e,o)=>i(e,o,t);import{Disposable as h}from"../../../../base/common/lifecycle.js";import{basename as p}from"../../../../base/common/resources.js";import*as s from"../../../../nls.js";import{IDialogService as _}from"../../../../platform/dialogs/common/dialogs.js";import"../../../browser/editorBrowser.js";import{EditorContributionInstantiation as v,registerEditorContribution as T}from"../../../browser/editorExtensions.js";import{ICodeEditorService as I}from"../../../browser/services/codeEditorService.js";import{EditorOption as u}from"../../../common/config/editorOptions.js";import"../../../common/editorCommon.js";import"../../../common/model.js";const c="ignoreUnusualLineTerminators";function L(t,i,e){t.setModelProperty(i.uri,c,e)}function S(t,i){return t.getModelProperty(i.uri,c)}let a=class extends h{constructor(e,o,r){super();this._editor=e;this._dialogService=o;this._codeEditorService=r;this._config=this._editor.getOption(u.unusualLineTerminators),this._register(this._editor.onDidChangeConfiguration(n=>{n.hasChanged(u.unusualLineTerminators)&&(this._config=this._editor.getOption(u.unusualLineTerminators),this._checkForUnusualLineTerminators())})),this._register(this._editor.onDidChangeModel(()=>{this._checkForUnusualLineTerminators()})),this._register(this._editor.onDidChangeModelContent(n=>{n.isUndoing||this._checkForUnusualLineTerminators()})),this._checkForUnusualLineTerminators()}static ID="editor.contrib.unusualLineTerminatorsDetector";_config;_isPresentingDialog=!1;async _checkForUnusualLineTerminators(){if(this._config==="off"||!this._editor.hasModel())return;const e=this._editor.getModel();if(!e.mightContainUnusualLineTerminators()||S(this._codeEditorService,e)===!0||this._editor.getOption(u.readOnly))return;if(this._config==="auto"){e.removeUnusualLineTerminators(this._editor.getSelections());return}if(this._isPresentingDialog)return;let r;try{this._isPresentingDialog=!0,r=await this._dialogService.confirm({title:s.localize("unusualLineTerminators.title","Unusual Line Terminators"),message:s.localize("unusualLineTerminators.message","Detected unusual line terminators"),detail:s.localize("unusualLineTerminators.detail","The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\n\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.",p(e.uri)),primaryButton:s.localize({key:"unusualLineTerminators.fix",comment:["&& denotes a mnemonic"]},"&&Remove Unusual Line Terminators"),cancelButton:s.localize("unusualLineTerminators.ignore","Ignore")})}finally{this._isPresentingDialog=!1}if(!r.confirmed){L(this._codeEditorService,e,!0);return}e.removeUnusualLineTerminators(this._editor.getSelections())}};a=m([d(1,_),d(2,I)],a),T(a.ID,a,v.AfterFirstRender);export{a as UnusualLineTerminatorsDetector};
