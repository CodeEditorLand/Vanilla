{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/lineSelection/browser/lineSelection.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n} from \"../../../browser/editorExtensions.js\";\nimport { CursorMoveCommands } from \"../../../common/cursor/cursorMoveCommands.js\";\nimport { CursorChangeReason } from \"../../../common/cursorEvents.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\n\nexport class ExpandLineSelectionAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"expandLineSelection\",\n\t\t\tlabel: nls.localize(\"expandLineSelection\", \"Expand Line Selection\"),\n\t\t\talias: \"Expand Line Selection\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorCore,\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyL,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\t_accessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\targs = args || {};\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewModel = editor._getViewModel();\n\t\tviewModel.model.pushStackElement();\n\t\tviewModel.setCursorStates(\n\t\t\targs.source,\n\t\t\tCursorChangeReason.Explicit,\n\t\t\tCursorMoveCommands.expandLineSelection(\n\t\t\t\tviewModel,\n\t\t\t\tviewModel.getCursorStates(),\n\t\t\t),\n\t\t);\n\t\tviewModel.revealAllCursors(args.source, true);\n\t}\n}\n\nregisterEditorAction(ExpandLineSelectionAction);\n"],
  "mappings": ";;AAKA,SAAS,SAAS,cAAc;AAChC,YAAY,SAAS;AACrB,SAAS,wBAAwB;AAEjC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,0BAA0B;AACnC,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAE3B,MAAM,kCAAkC,aAAa;AAAA,EAlB5D,OAkB4D;AAAA;AAAA;AAAA,EAC3D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,IAAI,SAAS,uBAAuB,uBAAuB;AAAA,MAClE,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QACP,QAAQ,iBAAiB;AAAA,QACzB,QAAQ,kBAAkB;AAAA,QAC1B,SAAS,OAAO,UAAU,QAAQ;AAAA,MACnC;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEO,IACN,WACA,QACA,MACO;AACP,WAAO,QAAQ,CAAC;AAChB,QAAI,CAAC,OAAO,SAAS,GAAG;AACvB;AAAA,IACD;AACA,UAAM,YAAY,OAAO,cAAc;AACvC,cAAU,MAAM,iBAAiB;AACjC,cAAU;AAAA,MACT,KAAK;AAAA,MACL,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,QAClB;AAAA,QACA,UAAU,gBAAgB;AAAA,MAC3B;AAAA,IACD;AACA,cAAU,iBAAiB,KAAK,QAAQ,IAAI;AAAA,EAC7C;AACD;AAEA,qBAAqB,yBAAyB;",
  "names": []
}
