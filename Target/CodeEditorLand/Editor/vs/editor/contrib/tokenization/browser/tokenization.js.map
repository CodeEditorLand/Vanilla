{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/tokenization/browser/tokenization.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StopWatch } from \"../../../../base/common/stopwatch.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n} from \"../../../browser/editorExtensions.js\";\n\nclass ForceRetokenizeAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.forceRetokenize\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"forceRetokenize\",\n\t\t\t\t\"Developer: Force Retokenize\",\n\t\t\t),\n\t\t\talias: \"Developer: Force Retokenize\",\n\t\t\tprecondition: undefined,\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tmodel.tokenization.resetTokenization();\n\t\tconst sw = new StopWatch();\n\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\tsw.stop();\n\t\tconsole.log(`tokenization took ${sw.elapsed()}`);\n\t}\n}\n\nregisterEditorAction(ForceRetokenizeAction);\n"],
  "mappings": ";;AAKA,SAAS,iBAAiB;AAC1B,YAAY,SAAS;AAErB;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AAEP,MAAM,8BAA8B,aAAa;AAAA,EAdjD,OAciD;AAAA;AAAA;AAAA,EAChD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,IAAI;AAAA,QACV;AAAA,QACA;AAAA,MACD;AAAA,MACA,OAAO;AAAA,MACP,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEO,IAAI,UAA4B,QAA2B;AACjE,QAAI,CAAC,OAAO,SAAS,GAAG;AACvB;AAAA,IACD;AACA,UAAM,QAAQ,OAAO,SAAS;AAC9B,UAAM,aAAa,kBAAkB;AACrC,UAAM,KAAK,IAAI,UAAU;AACzB,UAAM,aAAa,kBAAkB,MAAM,aAAa,CAAC;AACzD,OAAG,KAAK;AACR,YAAQ,IAAI,qBAAqB,GAAG,QAAQ,CAAC,EAAE;AAAA,EAChD;AACD;AAEA,qBAAqB,qBAAqB;",
  "names": []
}
