{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/codeAction/test/browser/codeAction.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { HierarchicalKind } from '../../../../../base/common/hierarchicalKind.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { LanguageFeatureRegistry } from '../../../../common/languageFeatureRegistry.js';\nimport * as languages from '../../../../common/languages.js';\nimport { TextModel } from '../../../../common/model/textModel.js';\nimport { getCodeActions } from '../../browser/codeAction.js';\nimport { CodeActionItem, CodeActionKind, CodeActionTriggerSource } from '../../common/types.js';\nimport { createTextModel } from '../../../../test/common/testTextModel.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../../platform/markers/common/markers.js';\nimport { Progress } from '../../../../../platform/progress/common/progress.js';\n\nfunction staticCodeActionProvider(...actions: languages.CodeAction[]): languages.CodeActionProvider {\n\treturn new class implements languages.CodeActionProvider {\n\t\tprovideCodeActions(): languages.CodeActionList {\n\t\t\treturn {\n\t\t\t\tactions: actions,\n\t\t\t\tdispose: () => { }\n\t\t\t};\n\t\t}\n\t};\n}\n\n\nsuite('CodeAction', () => {\n\n\tconst langId = 'fooLang';\n\tconst uri = URI.parse('untitled:path');\n\tlet model: TextModel;\n\tlet registry: LanguageFeatureRegistry<languages.CodeActionProvider>;\n\tconst disposables = new DisposableStore();\n\tconst testData = {\n\t\tdiagnostics: {\n\t\t\tabc: {\n\t\t\t\ttitle: 'bTitle',\n\t\t\t\tdiagnostics: [{\n\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\tendLineNumber: 2,\n\t\t\t\t\tendColumn: 1,\n\t\t\t\t\tseverity: MarkerSeverity.Error,\n\t\t\t\t\tmessage: 'abc'\n\t\t\t\t}]\n\t\t\t},\n\t\t\tbcd: {\n\t\t\t\ttitle: 'aTitle',\n\t\t\t\tdiagnostics: [{\n\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\tendLineNumber: 2,\n\t\t\t\t\tendColumn: 1,\n\t\t\t\t\tseverity: MarkerSeverity.Error,\n\t\t\t\t\tmessage: 'bcd'\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\tcommand: {\n\t\t\tabc: {\n\t\t\t\tcommand: new class implements languages.Command {\n\t\t\t\t\tid!: '1';\n\t\t\t\t\ttitle!: 'abc';\n\t\t\t\t},\n\t\t\t\ttitle: 'Extract to inner function in function \"test\"'\n\t\t\t}\n\t\t},\n\t\tspelling: {\n\t\t\tbcd: {\n\t\t\t\tdiagnostics: <IMarkerData[]>[],\n\t\t\t\tedit: new class implements languages.WorkspaceEdit {\n\t\t\t\t\tedits!: languages.IWorkspaceTextEdit[];\n\t\t\t\t},\n\t\t\t\ttitle: 'abc'\n\t\t\t}\n\t\t},\n\t\ttsLint: {\n\t\t\tabc: {\n\t\t\t\t$ident: 'funny' + 57,\n\t\t\t\targuments: <IMarkerData[]>[],\n\t\t\t\tid: '_internal_command_delegation',\n\t\t\t\ttitle: 'abc'\n\t\t\t},\n\t\t\tbcd: {\n\t\t\t\t$ident: 'funny' + 47,\n\t\t\t\targuments: <IMarkerData[]>[],\n\t\t\t\tid: '_internal_command_delegation',\n\t\t\t\ttitle: 'bcd'\n\t\t\t}\n\t\t}\n\t};\n\n\tsetup(() => {\n\t\tregistry = new LanguageFeatureRegistry();\n\t\tdisposables.clear();\n\t\tmodel = createTextModel('test1\\ntest2\\ntest3', langId, undefined, uri);\n\t\tdisposables.add(model);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('CodeActions are sorted by type, #38623', async () => {\n\n\t\tconst provider = staticCodeActionProvider(\n\t\t\ttestData.command.abc,\n\t\t\ttestData.diagnostics.bcd,\n\t\t\ttestData.spelling.bcd,\n\t\t\ttestData.tsLint.bcd,\n\t\t\ttestData.tsLint.abc,\n\t\t\ttestData.diagnostics.abc\n\t\t);\n\n\t\tdisposables.add(registry.register('fooLang', provider));\n\n\t\tconst expected = [\n\t\t\t// CodeActions with a diagnostics array are shown first without further sorting\n\t\t\tnew CodeActionItem(testData.diagnostics.bcd, provider),\n\t\t\tnew CodeActionItem(testData.diagnostics.abc, provider),\n\n\t\t\t// CodeActions without diagnostics are shown in the given order without any further sorting\n\t\t\tnew CodeActionItem(testData.command.abc, provider),\n\t\t\tnew CodeActionItem(testData.spelling.bcd, provider),\n\t\t\tnew CodeActionItem(testData.tsLint.bcd, provider),\n\t\t\tnew CodeActionItem(testData.tsLint.abc, provider)\n\t\t];\n\n\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), { type: languages.CodeActionTriggerType.Invoke, triggerAction: CodeActionTriggerSource.Default }, Progress.None, CancellationToken.None));\n\t\tassert.strictEqual(actions.length, 6);\n\t\tassert.deepStrictEqual(actions, expected);\n\t});\n\n\ttest('getCodeActions should filter by scope', async () => {\n\t\tconst provider = staticCodeActionProvider(\n\t\t\t{ title: 'a', kind: 'a' },\n\t\t\t{ title: 'b', kind: 'b' },\n\t\t\t{ title: 'a.b', kind: 'a.b' }\n\t\t);\n\n\t\tdisposables.add(registry.register('fooLang', provider));\n\n\t\t{\n\t\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), { type: languages.CodeActionTriggerType.Auto, triggerAction: CodeActionTriggerSource.Default, filter: { include: new HierarchicalKind('a') } }, Progress.None, CancellationToken.None));\n\t\t\tassert.strictEqual(actions.length, 2);\n\t\t\tassert.strictEqual(actions[0].action.title, 'a');\n\t\t\tassert.strictEqual(actions[1].action.title, 'a.b');\n\t\t}\n\n\t\t{\n\t\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), { type: languages.CodeActionTriggerType.Auto, triggerAction: CodeActionTriggerSource.Default, filter: { include: new HierarchicalKind('a.b') } }, Progress.None, CancellationToken.None));\n\t\t\tassert.strictEqual(actions.length, 1);\n\t\t\tassert.strictEqual(actions[0].action.title, 'a.b');\n\t\t}\n\n\t\t{\n\t\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), { type: languages.CodeActionTriggerType.Auto, triggerAction: CodeActionTriggerSource.Default, filter: { include: new HierarchicalKind('a.b.c') } }, Progress.None, CancellationToken.None));\n\t\t\tassert.strictEqual(actions.length, 0);\n\t\t}\n\t});\n\n\ttest('getCodeActions should forward requested scope to providers', async () => {\n\t\tconst provider = new class implements languages.CodeActionProvider {\n\t\t\tprovideCodeActions(_model: any, _range: Range, context: languages.CodeActionContext, _token: any): languages.CodeActionList {\n\t\t\t\treturn {\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{ title: context.only || '', kind: context.only }\n\t\t\t\t\t],\n\t\t\t\t\tdispose: () => { }\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(registry.register('fooLang', provider));\n\n\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), { type: languages.CodeActionTriggerType.Auto, triggerAction: CodeActionTriggerSource.Default, filter: { include: new HierarchicalKind('a') } }, Progress.None, CancellationToken.None));\n\t\tassert.strictEqual(actions.length, 1);\n\t\tassert.strictEqual(actions[0].action.title, 'a');\n\t});\n\n\ttest('getCodeActions should not return source code action by default', async () => {\n\t\tconst provider = staticCodeActionProvider(\n\t\t\t{ title: 'a', kind: CodeActionKind.Source.value },\n\t\t\t{ title: 'b', kind: 'b' }\n\t\t);\n\n\t\tdisposables.add(registry.register('fooLang', provider));\n\n\t\t{\n\t\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), { type: languages.CodeActionTriggerType.Auto, triggerAction: CodeActionTriggerSource.SourceAction }, Progress.None, CancellationToken.None));\n\t\t\tassert.strictEqual(actions.length, 1);\n\t\t\tassert.strictEqual(actions[0].action.title, 'b');\n\t\t}\n\n\t\t{\n\t\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), { type: languages.CodeActionTriggerType.Auto, triggerAction: CodeActionTriggerSource.Default, filter: { include: CodeActionKind.Source, includeSourceActions: true } }, Progress.None, CancellationToken.None));\n\t\t\tassert.strictEqual(actions.length, 1);\n\t\t\tassert.strictEqual(actions[0].action.title, 'a');\n\t\t}\n\t});\n\n\ttest('getCodeActions should support filtering out some requested source code actions #84602', async () => {\n\t\tconst provider = staticCodeActionProvider(\n\t\t\t{ title: 'a', kind: CodeActionKind.Source.value },\n\t\t\t{ title: 'b', kind: CodeActionKind.Source.append('test').value },\n\t\t\t{ title: 'c', kind: 'c' }\n\t\t);\n\n\t\tdisposables.add(registry.register('fooLang', provider));\n\n\t\t{\n\t\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), {\n\t\t\t\ttype: languages.CodeActionTriggerType.Auto, triggerAction: CodeActionTriggerSource.SourceAction, filter: {\n\t\t\t\t\tinclude: CodeActionKind.Source.append('test'),\n\t\t\t\t\texcludes: [CodeActionKind.Source],\n\t\t\t\t\tincludeSourceActions: true,\n\t\t\t\t}\n\t\t\t}, Progress.None, CancellationToken.None));\n\t\t\tassert.strictEqual(actions.length, 1);\n\t\t\tassert.strictEqual(actions[0].action.title, 'b');\n\t\t}\n\t});\n\n\ttest('getCodeActions no invoke a provider that has been excluded #84602', async () => {\n\t\tconst baseType = CodeActionKind.Refactor;\n\t\tconst subType = CodeActionKind.Refactor.append('sub');\n\n\t\tdisposables.add(registry.register('fooLang', staticCodeActionProvider(\n\t\t\t{ title: 'a', kind: baseType.value }\n\t\t)));\n\n\t\tlet didInvoke = false;\n\t\tdisposables.add(registry.register('fooLang', new class implements languages.CodeActionProvider {\n\n\t\t\tprovidedCodeActionKinds = [subType.value];\n\n\t\t\tprovideCodeActions(): languages.ProviderResult<languages.CodeActionList> {\n\t\t\t\tdidInvoke = true;\n\t\t\t\treturn {\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{ title: 'x', kind: subType.value }\n\t\t\t\t\t],\n\t\t\t\t\tdispose: () => { }\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\t{\n\t\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), {\n\t\t\t\ttype: languages.CodeActionTriggerType.Auto, triggerAction: CodeActionTriggerSource.Refactor, filter: {\n\t\t\t\t\tinclude: baseType,\n\t\t\t\t\texcludes: [subType],\n\t\t\t\t}\n\t\t\t}, Progress.None, CancellationToken.None));\n\t\t\tassert.strictEqual(didInvoke, false);\n\t\t\tassert.strictEqual(actions.length, 1);\n\t\t\tassert.strictEqual(actions[0].action.title, 'a');\n\t\t}\n\t});\n\n\ttest('getCodeActions should not invoke code action providers filtered out by providedCodeActionKinds', async () => {\n\t\tlet wasInvoked = false;\n\t\tconst provider = new class implements languages.CodeActionProvider {\n\t\t\tprovideCodeActions(): languages.CodeActionList {\n\t\t\t\twasInvoked = true;\n\t\t\t\treturn { actions: [], dispose: () => { } };\n\t\t\t}\n\n\t\t\tprovidedCodeActionKinds = [CodeActionKind.Refactor.value];\n\t\t};\n\n\t\tdisposables.add(registry.register('fooLang', provider));\n\n\t\tconst { validActions: actions } = disposables.add(await getCodeActions(registry, model, new Range(1, 1, 2, 1), {\n\t\t\ttype: languages.CodeActionTriggerType.Auto, triggerAction: CodeActionTriggerSource.Refactor,\n\t\t\tfilter: {\n\t\t\t\tinclude: CodeActionKind.QuickFix\n\t\t\t}\n\t\t}, Progress.None, CancellationToken.None));\n\t\tassert.strictEqual(actions.length, 0);\n\t\tassert.strictEqual(wasInvoked, false);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
