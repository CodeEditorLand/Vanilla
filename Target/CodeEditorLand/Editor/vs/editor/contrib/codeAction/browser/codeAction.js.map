{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/codeAction/browser/codeAction.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tcoalesce,\n\tequals,\n\tisNonEmptyArray,\n} from \"../../../../base/common/arrays.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tillegalArgument,\n\tisCancellationError,\n\tonUnexpectedExternalError,\n} from \"../../../../base/common/errors.js\";\nimport { HierarchicalKind } from \"../../../../base/common/hierarchicalKind.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport {\n\ttype IProgress,\n\tProgress,\n} from \"../../../../platform/progress/common/progress.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { IBulkEditService } from \"../../../browser/services/bulkEditService.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport type { LanguageFeatureRegistry } from \"../../../common/languageFeatureRegistry.js\";\nimport * as languages from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { IModelService } from \"../../../common/services/model.js\";\nimport { TextModelCancellationTokenSource } from \"../../editorState/browser/editorState.js\";\nimport {\n\ttype CodeActionFilter,\n\tCodeActionItem,\n\tCodeActionKind,\n\ttype CodeActionSet,\n\ttype CodeActionTrigger,\n\tCodeActionTriggerSource,\n\tfiltersAction,\n\tmayIncludeActionsOfKind,\n} from \"../common/types.js\";\n\nexport const codeActionCommandId = \"editor.action.codeAction\";\nexport const quickFixCommandId = \"editor.action.quickFix\";\nexport const autoFixCommandId = \"editor.action.autoFix\";\nexport const refactorCommandId = \"editor.action.refactor\";\nexport const refactorPreviewCommandId = \"editor.action.refactor.preview\";\nexport const sourceActionCommandId = \"editor.action.sourceAction\";\nexport const organizeImportsCommandId = \"editor.action.organizeImports\";\nexport const fixAllCommandId = \"editor.action.fixAll\";\n\nclass ManagedCodeActionSet extends Disposable implements CodeActionSet {\n\tprivate static codeActionsPreferredComparator(\n\t\ta: languages.CodeAction,\n\t\tb: languages.CodeAction,\n\t): number {\n\t\tif (a.isPreferred && !b.isPreferred) {\n\t\t\treturn -1;\n\t\t} else if (!a.isPreferred && b.isPreferred) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate static codeActionsComparator(\n\t\t{ action: a }: CodeActionItem,\n\t\t{ action: b }: CodeActionItem,\n\t): number {\n\t\tif (a.isAI && !b.isAI) {\n\t\t\treturn 1;\n\t\t} else if (!a.isAI && b.isAI) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (isNonEmptyArray(a.diagnostics)) {\n\t\t\treturn isNonEmptyArray(b.diagnostics)\n\t\t\t\t? ManagedCodeActionSet.codeActionsPreferredComparator(a, b)\n\t\t\t\t: -1;\n\t\t} else if (isNonEmptyArray(b.diagnostics)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn ManagedCodeActionSet.codeActionsPreferredComparator(a, b); // both have no diagnostics\n\t\t}\n\t}\n\n\tpublic readonly validActions: readonly CodeActionItem[];\n\tpublic readonly allActions: readonly CodeActionItem[];\n\n\tpublic constructor(\n\t\tactions: readonly CodeActionItem[],\n\t\tpublic readonly documentation: readonly languages.Command[],\n\t\tdisposables: DisposableStore,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(disposables);\n\n\t\tthis.allActions = [...actions].sort(\n\t\t\tManagedCodeActionSet.codeActionsComparator,\n\t\t);\n\t\tthis.validActions = this.allActions.filter(\n\t\t\t({ action }) => !action.disabled,\n\t\t);\n\t}\n\n\tpublic get hasAutoFix() {\n\t\treturn this.validActions.some(\n\t\t\t({ action: fix }) =>\n\t\t\t\t!!fix.kind &&\n\t\t\t\tCodeActionKind.QuickFix.contains(\n\t\t\t\t\tnew HierarchicalKind(fix.kind),\n\t\t\t\t) &&\n\t\t\t\t!!fix.isPreferred,\n\t\t);\n\t}\n\n\tpublic get hasAIFix() {\n\t\treturn this.validActions.some(({ action: fix }) => !!fix.isAI);\n\t}\n\n\tpublic get allAIFixes() {\n\t\treturn this.validActions.every(({ action: fix }) => !!fix.isAI);\n\t}\n}\n\nconst emptyCodeActionsResponse = {\n\tactions: [] as CodeActionItem[],\n\tdocumentation: undefined,\n};\n\nexport async function getCodeActions(\n\tregistry: LanguageFeatureRegistry<languages.CodeActionProvider>,\n\tmodel: ITextModel,\n\trangeOrSelection: Range | Selection,\n\ttrigger: CodeActionTrigger,\n\tprogress: IProgress<languages.CodeActionProvider>,\n\ttoken: CancellationToken,\n): Promise<CodeActionSet> {\n\tconst filter = trigger.filter || {};\n\tconst notebookFilter: CodeActionFilter = {\n\t\t...filter,\n\t\texcludes: [...(filter.excludes || []), CodeActionKind.Notebook],\n\t};\n\n\tconst codeActionContext: languages.CodeActionContext = {\n\t\tonly: filter.include?.value,\n\t\ttrigger: trigger.type,\n\t};\n\n\tconst cts = new TextModelCancellationTokenSource(model, token);\n\t// if the trigger is auto (autosave, lightbulb, etc), we should exclude notebook codeActions\n\tconst excludeNotebookCodeActions =\n\t\ttrigger.type === languages.CodeActionTriggerType.Auto;\n\tconst providers = getCodeActionProviders(\n\t\tregistry,\n\t\tmodel,\n\t\texcludeNotebookCodeActions ? notebookFilter : filter,\n\t);\n\n\tconst disposables = new DisposableStore();\n\tconst promises = providers.map(async (provider) => {\n\t\ttry {\n\t\t\tprogress.report(provider);\n\t\t\tconst providedCodeActions = await provider.provideCodeActions(\n\t\t\t\tmodel,\n\t\t\t\trangeOrSelection,\n\t\t\t\tcodeActionContext,\n\t\t\t\tcts.token,\n\t\t\t);\n\t\t\tif (providedCodeActions) {\n\t\t\t\tdisposables.add(providedCodeActions);\n\t\t\t}\n\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn emptyCodeActionsResponse;\n\t\t\t}\n\n\t\t\tconst filteredActions = (providedCodeActions?.actions || []).filter(\n\t\t\t\t(action) => action && filtersAction(filter, action),\n\t\t\t);\n\t\t\tconst documentation = getDocumentationFromProvider(\n\t\t\t\tprovider,\n\t\t\t\tfilteredActions,\n\t\t\t\tfilter.include,\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tactions: filteredActions.map(\n\t\t\t\t\t(action) => new CodeActionItem(action, provider),\n\t\t\t\t),\n\t\t\t\tdocumentation,\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tif (isCancellationError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tonUnexpectedExternalError(err);\n\t\t\treturn emptyCodeActionsResponse;\n\t\t}\n\t});\n\n\tconst listener = registry.onDidChange(() => {\n\t\tconst newProviders = registry.all(model);\n\t\tif (!equals(newProviders, providers)) {\n\t\t\tcts.cancel();\n\t\t}\n\t});\n\n\ttry {\n\t\tconst actions = await Promise.all(promises);\n\t\tconst allActions = actions.flatMap((x) => x.actions);\n\t\tconst allDocumentation = [\n\t\t\t...coalesce(actions.map((x) => x.documentation)),\n\t\t\t...getAdditionalDocumentationForShowingActions(\n\t\t\t\tregistry,\n\t\t\t\tmodel,\n\t\t\t\ttrigger,\n\t\t\t\tallActions,\n\t\t\t),\n\t\t];\n\t\treturn new ManagedCodeActionSet(\n\t\t\tallActions,\n\t\t\tallDocumentation,\n\t\t\tdisposables,\n\t\t);\n\t} finally {\n\t\tlistener.dispose();\n\t\tcts.dispose();\n\t}\n}\n\nfunction getCodeActionProviders(\n\tregistry: LanguageFeatureRegistry<languages.CodeActionProvider>,\n\tmodel: ITextModel,\n\tfilter: CodeActionFilter,\n) {\n\treturn (\n\t\tregistry\n\t\t\t.all(model)\n\t\t\t// Don't include providers that we know will not return code actions of interest\n\t\t\t.filter((provider) => {\n\t\t\t\tif (!provider.providedCodeActionKinds) {\n\t\t\t\t\t// We don't know what type of actions this provider will return.\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn provider.providedCodeActionKinds.some((kind) =>\n\t\t\t\t\tmayIncludeActionsOfKind(filter, new HierarchicalKind(kind)),\n\t\t\t\t);\n\t\t\t})\n\t);\n}\n\nfunction* getAdditionalDocumentationForShowingActions(\n\tregistry: LanguageFeatureRegistry<languages.CodeActionProvider>,\n\tmodel: ITextModel,\n\ttrigger: CodeActionTrigger,\n\tactionsToShow: readonly CodeActionItem[],\n): Iterable<languages.Command> {\n\tif (model && actionsToShow.length) {\n\t\tfor (const provider of registry.all(model)) {\n\t\t\tif (provider._getAdditionalMenuItems) {\n\t\t\t\tyield* provider._getAdditionalMenuItems?.(\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger: trigger.type,\n\t\t\t\t\t\tonly: trigger.filter?.include?.value,\n\t\t\t\t\t},\n\t\t\t\t\tactionsToShow.map((item) => item.action),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getDocumentationFromProvider(\n\tprovider: languages.CodeActionProvider,\n\tprovidedCodeActions: readonly languages.CodeAction[],\n\tonly?: HierarchicalKind,\n): languages.Command | undefined {\n\tif (!provider.documentation) {\n\t\treturn undefined;\n\t}\n\n\tconst documentation = provider.documentation.map((entry) => ({\n\t\tkind: new HierarchicalKind(entry.kind),\n\t\tcommand: entry.command,\n\t}));\n\n\tif (only) {\n\t\tlet currentBest:\n\t\t\t| {\n\t\t\t\t\treadonly kind: HierarchicalKind;\n\t\t\t\t\treadonly command: languages.Command;\n\t\t\t  }\n\t\t\t| undefined;\n\t\tfor (const entry of documentation) {\n\t\t\tif (entry.kind.contains(only)) {\n\t\t\t\tif (currentBest) {\n\t\t\t\t\t// Take best match\n\t\t\t\t\tif (currentBest.kind.contains(entry.kind)) {\n\t\t\t\t\t\tcurrentBest = entry;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcurrentBest = entry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (currentBest) {\n\t\t\treturn currentBest?.command;\n\t\t}\n\t}\n\n\t// Otherwise, check to see if any of the provided actions match.\n\tfor (const action of providedCodeActions) {\n\t\tif (!action.kind) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const entry of documentation) {\n\t\t\tif (entry.kind.contains(new HierarchicalKind(action.kind))) {\n\t\t\t\treturn entry.command;\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport enum ApplyCodeActionReason {\n\tOnSave = \"onSave\",\n\tFromProblemsView = \"fromProblemsView\",\n\tFromCodeActions = \"fromCodeActions\",\n\tFromAILightbulb = \"fromAILightbulb\", // direct invocation when clicking on the AI lightbulb\n}\n\nexport async function applyCodeAction(\n\taccessor: ServicesAccessor,\n\titem: CodeActionItem,\n\tcodeActionReason: ApplyCodeActionReason,\n\toptions?: { readonly preview?: boolean; readonly editor?: ICodeEditor },\n\ttoken: CancellationToken = CancellationToken.None,\n): Promise<void> {\n\tconst bulkEditService = accessor.get(IBulkEditService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst telemetryService = accessor.get(ITelemetryService);\n\tconst notificationService = accessor.get(INotificationService);\n\n\ttype ApplyCodeActionEvent = {\n\t\tcodeActionTitle: string;\n\t\tcodeActionKind: string | undefined;\n\t\tcodeActionIsPreferred: boolean;\n\t\treason: ApplyCodeActionReason;\n\t};\n\ttype ApplyCodeEventClassification = {\n\t\tcodeActionTitle: {\n\t\t\tclassification: \"SystemMetaData\";\n\t\t\tpurpose: \"FeatureInsight\";\n\t\t\tcomment: \"The display label of the applied code action\";\n\t\t};\n\t\tcodeActionKind: {\n\t\t\tclassification: \"SystemMetaData\";\n\t\t\tpurpose: \"FeatureInsight\";\n\t\t\tcomment: \"The kind (refactor, quickfix) of the applied code action\";\n\t\t};\n\t\tcodeActionIsPreferred: {\n\t\t\tclassification: \"SystemMetaData\";\n\t\t\tpurpose: \"FeatureInsight\";\n\t\t\tcomment: \"Was the code action marked as being a preferred action?\";\n\t\t};\n\t\treason: {\n\t\t\tclassification: \"SystemMetaData\";\n\t\t\tpurpose: \"FeatureInsight\";\n\t\t\tcomment: \"The kind of action used to trigger apply code action.\";\n\t\t};\n\t\towner: \"justschen\";\n\t\tcomment: \"Event used to gain insights into which code actions are being triggered\";\n\t};\n\n\ttelemetryService.publicLog2<\n\t\tApplyCodeActionEvent,\n\t\tApplyCodeEventClassification\n\t>(\"codeAction.applyCodeAction\", {\n\t\tcodeActionTitle: item.action.title,\n\t\tcodeActionKind: item.action.kind,\n\t\tcodeActionIsPreferred: !!item.action.isPreferred,\n\t\treason: codeActionReason,\n\t});\n\n\tawait item.resolve(token);\n\tif (token.isCancellationRequested) {\n\t\treturn;\n\t}\n\n\tif (item.action.edit?.edits.length) {\n\t\tconst result = await bulkEditService.apply(item.action.edit, {\n\t\t\teditor: options?.editor,\n\t\t\tlabel: item.action.title,\n\t\t\tquotableLabel: item.action.title,\n\t\t\tcode: \"undoredo.codeAction\",\n\t\t\trespectAutoSaveConfig:\n\t\t\t\tcodeActionReason !== ApplyCodeActionReason.OnSave,\n\t\t\tshowPreview: options?.preview,\n\t\t});\n\n\t\tif (!result.isApplied) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (item.action.command) {\n\t\ttry {\n\t\t\tawait commandService.executeCommand(\n\t\t\t\titem.action.command.id,\n\t\t\t\t...(item.action.command.arguments || []),\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconst message = asMessage(err);\n\t\t\tnotificationService.error(\n\t\t\t\ttypeof message === \"string\"\n\t\t\t\t\t? message\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"applyCodeActionFailed\",\n\t\t\t\t\t\t\t\"An unknown error occurred while applying the code action\",\n\t\t\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n}\n\nfunction asMessage(err: any): string | undefined {\n\tif (typeof err === \"string\") {\n\t\treturn err;\n\t} else if (err instanceof Error && typeof err.message === \"string\") {\n\t\treturn err.message;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nCommandsRegistry.registerCommand(\n\t\"_executeCodeActionProvider\",\n\tasync (\n\t\taccessor,\n\t\tresource: URI,\n\t\trangeOrSelection: Range | Selection,\n\t\tkind?: string,\n\t\titemResolveCount?: number,\n\t): Promise<ReadonlyArray<languages.CodeAction>> => {\n\t\tif (!(resource instanceof URI)) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tconst { codeActionProvider } = accessor.get(ILanguageFeaturesService);\n\t\tconst model = accessor.get(IModelService).getModel(resource);\n\t\tif (!model) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tconst validatedRangeOrSelection = Selection.isISelection(\n\t\t\trangeOrSelection,\n\t\t)\n\t\t\t? Selection.liftSelection(rangeOrSelection)\n\t\t\t: Range.isIRange(rangeOrSelection)\n\t\t\t\t? model.validateRange(rangeOrSelection)\n\t\t\t\t: undefined;\n\n\t\tif (!validatedRangeOrSelection) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tconst include =\n\t\t\ttypeof kind === \"string\" ? new HierarchicalKind(kind) : undefined;\n\t\tconst codeActionSet = await getCodeActions(\n\t\t\tcodeActionProvider,\n\t\t\tmodel,\n\t\t\tvalidatedRangeOrSelection,\n\t\t\t{\n\t\t\t\ttype: languages.CodeActionTriggerType.Invoke,\n\t\t\t\ttriggerAction: CodeActionTriggerSource.Default,\n\t\t\t\tfilter: { includeSourceActions: true, include },\n\t\t\t},\n\t\t\tProgress.None,\n\t\t\tCancellationToken.None,\n\t\t);\n\n\t\tconst resolving: Promise<any>[] = [];\n\t\tconst resolveCount = Math.min(\n\t\t\tcodeActionSet.validActions.length,\n\t\t\ttypeof itemResolveCount === \"number\" ? itemResolveCount : 0,\n\t\t);\n\t\tfor (let i = 0; i < resolveCount; i++) {\n\t\t\tresolving.push(\n\t\t\t\tcodeActionSet.validActions[i].resolve(CancellationToken.None),\n\t\t\t);\n\t\t}\n\n\t\ttry {\n\t\t\tawait Promise.all(resolving);\n\t\t\treturn codeActionSet.validActions.map((item) => item.action);\n\t\t} finally {\n\t\t\tsetTimeout(() => codeActionSet.dispose(), 100);\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": ["ApplyCodeActionReason"]
}
