{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/codeAction/browser/codeActionCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { HierarchicalKind } from \"../../../../base/common/hierarchicalKind.js\";\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { escapeRegExpCharacters } from \"../../../../base/common/strings.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorCommand,\n\ttype ServicesAccessor,\n} from \"../../../browser/editorExtensions.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport {\n\tCodeActionAutoApply,\n\tCodeActionCommandArgs,\n\ttype CodeActionFilter,\n\tCodeActionKind,\n\tCodeActionTriggerSource,\n} from \"../common/types.js\";\nimport {\n\tautoFixCommandId,\n\tcodeActionCommandId,\n\tfixAllCommandId,\n\torganizeImportsCommandId,\n\tquickFixCommandId,\n\trefactorCommandId,\n\tsourceActionCommandId,\n} from \"./codeAction.js\";\nimport { CodeActionController } from \"./codeActionController.js\";\nimport { SUPPORTED_CODE_ACTIONS } from \"./codeActionModel.js\";\n\nfunction contextKeyForSupportedActions(kind: HierarchicalKind) {\n\treturn ContextKeyExpr.regex(\n\t\tSUPPORTED_CODE_ACTIONS.keys()[0],\n\t\tnew RegExp(\"(\\\\s|^)\" + escapeRegExpCharacters(kind.value) + \"\\\\b\"),\n\t);\n}\n\nconst argsSchema: IJSONSchema = {\n\ttype: \"object\",\n\tdefaultSnippets: [{ body: { kind: \"\" } }],\n\tproperties: {\n\t\tkind: {\n\t\t\ttype: \"string\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"args.schema.kind\",\n\t\t\t\t\"Kind of the code action to run.\",\n\t\t\t),\n\t\t},\n\t\tapply: {\n\t\t\ttype: \"string\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"args.schema.apply\",\n\t\t\t\t\"Controls when the returned actions are applied.\",\n\t\t\t),\n\t\t\tdefault: CodeActionAutoApply.IfSingle,\n\t\t\tenum: [\n\t\t\t\tCodeActionAutoApply.First,\n\t\t\t\tCodeActionAutoApply.IfSingle,\n\t\t\t\tCodeActionAutoApply.Never,\n\t\t\t],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"args.schema.apply.first\",\n\t\t\t\t\t\"Always apply the first returned code action.\",\n\t\t\t\t),\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"args.schema.apply.ifSingle\",\n\t\t\t\t\t\"Apply the first returned code action if it is the only one.\",\n\t\t\t\t),\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"args.schema.apply.never\",\n\t\t\t\t\t\"Do not apply the returned code actions.\",\n\t\t\t\t),\n\t\t\t],\n\t\t},\n\t\tpreferred: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"args.schema.preferred\",\n\t\t\t\t\"Controls if only preferred code actions should be returned.\",\n\t\t\t),\n\t\t},\n\t},\n};\n\nfunction triggerCodeActionsForEditorSelection(\n\teditor: ICodeEditor,\n\tnotAvailableMessage: string,\n\tfilter: CodeActionFilter | undefined,\n\tautoApply: CodeActionAutoApply | undefined,\n\ttriggerAction: CodeActionTriggerSource = CodeActionTriggerSource.Default,\n): void {\n\tif (editor.hasModel()) {\n\t\tconst controller = CodeActionController.get(editor);\n\t\tcontroller?.manualTriggerAtCurrentPosition(\n\t\t\tnotAvailableMessage,\n\t\t\ttriggerAction,\n\t\t\tfilter,\n\t\t\tautoApply,\n\t\t);\n\t}\n}\n\nexport class QuickFixAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: quickFixCommandId,\n\t\t\tlabel: nls.localize(\"quickfix.trigger.label\", \"Quick Fix...\"),\n\t\t\talias: \"Quick Fix...\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasCodeActionsProvider,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(\n\t\t\teditor,\n\t\t\tnls.localize(\n\t\t\t\t\"editor.action.quickFix.noneMessage\",\n\t\t\t\t\"No code actions available\",\n\t\t\t),\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tCodeActionTriggerSource.QuickFix,\n\t\t);\n\t}\n}\n\nexport class CodeActionCommand extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: codeActionCommandId,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasCodeActionsProvider,\n\t\t\t),\n\t\t\tmetadata: {\n\t\t\t\tdescription: \"Trigger a code action\",\n\t\t\t\targs: [{ name: \"args\", schema: argsSchema }],\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic runEditorCommand(\n\t\t_accessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\tuserArgs: any,\n\t) {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: HierarchicalKind.Empty,\n\t\t\tapply: CodeActionAutoApply.IfSingle,\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(\n\t\t\teditor,\n\t\t\ttypeof userArgs?.kind === \"string\"\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"editor.action.codeAction.noneMessage.preferred.kind\",\n\t\t\t\t\t\t\t\"No preferred code actions for '{0}' available\",\n\t\t\t\t\t\t\tuserArgs.kind,\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"editor.action.codeAction.noneMessage.kind\",\n\t\t\t\t\t\t\t\"No code actions for '{0}' available\",\n\t\t\t\t\t\t\tuserArgs.kind,\n\t\t\t\t\t\t)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"editor.action.codeAction.noneMessage.preferred\",\n\t\t\t\t\t\t\t\"No preferred code actions available\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"editor.action.codeAction.noneMessage\",\n\t\t\t\t\t\t\t\"No code actions available\",\n\t\t\t\t\t\t),\n\t\t\t{\n\t\t\t\tinclude: args.kind,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply,\n\t\t);\n\t}\n}\n\nexport class RefactorAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: refactorCommandId,\n\t\t\tlabel: nls.localize(\"refactor.label\", \"Refactor...\"),\n\t\t\talias: \"Refactor...\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasCodeActionsProvider,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyR,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KeyR,\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: \"1_modification\",\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.Refactor),\n\t\t\t\t),\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: \"Refactor...\",\n\t\t\t\targs: [{ name: \"args\", schema: argsSchema }],\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\t_accessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\tuserArgs: any,\n\t): void {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Refactor,\n\t\t\tapply: CodeActionAutoApply.Never,\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(\n\t\t\teditor,\n\t\t\ttypeof userArgs?.kind === \"string\"\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"editor.action.refactor.noneMessage.preferred.kind\",\n\t\t\t\t\t\t\t\"No preferred refactorings for '{0}' available\",\n\t\t\t\t\t\t\tuserArgs.kind,\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"editor.action.refactor.noneMessage.kind\",\n\t\t\t\t\t\t\t\"No refactorings for '{0}' available\",\n\t\t\t\t\t\t\tuserArgs.kind,\n\t\t\t\t\t\t)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"editor.action.refactor.noneMessage.preferred\",\n\t\t\t\t\t\t\t\"No preferred refactorings available\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"editor.action.refactor.noneMessage\",\n\t\t\t\t\t\t\t\"No refactorings available\",\n\t\t\t\t\t\t),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.Refactor.contains(args.kind)\n\t\t\t\t\t? args.kind\n\t\t\t\t\t: HierarchicalKind.None,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply,\n\t\t\tCodeActionTriggerSource.Refactor,\n\t\t);\n\t}\n}\n\nexport class SourceAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: sourceActionCommandId,\n\t\t\tlabel: nls.localize(\"source.label\", \"Source Action...\"),\n\t\t\talias: \"Source Action...\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasCodeActionsProvider,\n\t\t\t),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: \"1_modification\",\n\t\t\t\torder: 2.1,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.Source),\n\t\t\t\t),\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: \"Source Action...\",\n\t\t\t\targs: [{ name: \"args\", schema: argsSchema }],\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\t_accessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\tuserArgs: any,\n\t): void {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Source,\n\t\t\tapply: CodeActionAutoApply.Never,\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(\n\t\t\teditor,\n\t\t\ttypeof userArgs?.kind === \"string\"\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"editor.action.source.noneMessage.preferred.kind\",\n\t\t\t\t\t\t\t\"No preferred source actions for '{0}' available\",\n\t\t\t\t\t\t\tuserArgs.kind,\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"editor.action.source.noneMessage.kind\",\n\t\t\t\t\t\t\t\"No source actions for '{0}' available\",\n\t\t\t\t\t\t\tuserArgs.kind,\n\t\t\t\t\t\t)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"editor.action.source.noneMessage.preferred\",\n\t\t\t\t\t\t\t\"No preferred source actions available\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"editor.action.source.noneMessage\",\n\t\t\t\t\t\t\t\"No source actions available\",\n\t\t\t\t\t\t),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.Source.contains(args.kind)\n\t\t\t\t\t? args.kind\n\t\t\t\t\t: HierarchicalKind.None,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply,\n\t\t\tCodeActionTriggerSource.SourceAction,\n\t\t);\n\t}\n}\n\nexport class OrganizeImportsAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: organizeImportsCommandId,\n\t\t\tlabel: nls.localize(\"organizeImports.label\", \"Organize Imports\"),\n\t\t\talias: \"Organize Imports\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(\n\t\t\t\t\tCodeActionKind.SourceOrganizeImports,\n\t\t\t\t),\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyO,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(\n\t\t\teditor,\n\t\t\tnls.localize(\n\t\t\t\t\"editor.action.organize.noneMessage\",\n\t\t\t\t\"No organize imports action available\",\n\t\t\t),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.SourceOrganizeImports,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t},\n\t\t\tCodeActionAutoApply.IfSingle,\n\t\t\tCodeActionTriggerSource.OrganizeImports,\n\t\t);\n\t}\n}\n\nexport class FixAllAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: fixAllCommandId,\n\t\t\tlabel: nls.localize(\"fixAll.label\", \"Fix All\"),\n\t\t\talias: \"Fix All\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.SourceFixAll),\n\t\t\t),\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(\n\t\t\teditor,\n\t\t\tnls.localize(\"fixAll.noneMessage\", \"No fix all action available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.SourceFixAll,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t},\n\t\t\tCodeActionAutoApply.IfSingle,\n\t\t\tCodeActionTriggerSource.FixAll,\n\t\t);\n\t}\n}\n\nexport class AutoFixAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: autoFixCommandId,\n\t\t\tlabel: nls.localize(\"autoFix.label\", \"Auto Fix...\"),\n\t\t\talias: \"Auto Fix...\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.QuickFix),\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.Period,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Period,\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(\n\t\t\teditor,\n\t\t\tnls.localize(\n\t\t\t\t\"editor.action.autoFix.noneMessage\",\n\t\t\t\t\"No auto fixes available\",\n\t\t\t),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.QuickFix,\n\t\t\t\tonlyIncludePreferredActions: true,\n\t\t\t},\n\t\t\tCodeActionAutoApply.IfSingle,\n\t\t\tCodeActionTriggerSource.AutoFix,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
