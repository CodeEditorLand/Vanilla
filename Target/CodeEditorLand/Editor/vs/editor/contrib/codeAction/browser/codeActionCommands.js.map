{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/codeAction/browser/codeActionCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { IJSONSchema } from '../../../../base/common/jsonSchema.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { escapeRegExpCharacters } from '../../../../base/common/strings.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorCommand, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { autoFixCommandId, codeActionCommandId, fixAllCommandId, organizeImportsCommandId, quickFixCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { CodeActionAutoApply, CodeActionCommandArgs, CodeActionFilter, CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { CodeActionController } from './codeActionController.js';\nimport { SUPPORTED_CODE_ACTIONS } from './codeActionModel.js';\n\nfunction contextKeyForSupportedActions(kind: HierarchicalKind) {\n\treturn ContextKeyExpr.regex(\n\t\tSUPPORTED_CODE_ACTIONS.keys()[0],\n\t\tnew RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\n}\n\nconst argsSchema: IJSONSchema = {\n\ttype: 'object',\n\tdefaultSnippets: [{ body: { kind: '' } }],\n\tproperties: {\n\t\t'kind': {\n\t\t\ttype: 'string',\n\t\t\tdescription: nls.localize('args.schema.kind', \"Kind of the code action to run.\"),\n\t\t},\n\t\t'apply': {\n\t\t\ttype: 'string',\n\t\t\tdescription: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\n\t\t\tdefault: CodeActionAutoApply.IfSingle,\n\t\t\tenum: [CodeActionAutoApply.First, CodeActionAutoApply.IfSingle, CodeActionAutoApply.Never],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"),\n\t\t\t\tnls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"),\n\t\t\t\tnls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\"),\n\t\t\t]\n\t\t},\n\t\t'preferred': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\"),\n\t\t}\n\t}\n};\n\nfunction triggerCodeActionsForEditorSelection(\n\teditor: ICodeEditor,\n\tnotAvailableMessage: string,\n\tfilter: CodeActionFilter | undefined,\n\tautoApply: CodeActionAutoApply | undefined,\n\ttriggerAction: CodeActionTriggerSource = CodeActionTriggerSource.Default\n): void {\n\tif (editor.hasModel()) {\n\t\tconst controller = CodeActionController.get(editor);\n\t\tcontroller?.manualTriggerAtCurrentPosition(notAvailableMessage, triggerAction, filter, autoApply);\n\t}\n}\n\nexport class QuickFixAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: quickFixCommandId,\n\t\t\tlabel: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\n\t\t\talias: 'Quick Fix...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined, CodeActionTriggerSource.QuickFix);\n\t}\n}\n\nexport class CodeActionCommand extends EditorCommand {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: codeActionCommandId,\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tmetadata: {\n\t\t\t\tdescription: 'Trigger a code action',\n\t\t\t\targs: [{ name: 'args', schema: argsSchema, }]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, userArgs: any) {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: HierarchicalKind.Empty,\n\t\t\tapply: CodeActionAutoApply.IfSingle,\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\ttypeof userArgs?.kind === 'string'\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind)\n\t\t\t\t\t: nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\")\n\t\t\t\t\t: nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"),\n\t\t\t{\n\t\t\t\tinclude: args.kind,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply);\n\t}\n}\n\n\nexport class RefactorAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: refactorCommandId,\n\t\t\tlabel: nls.localize('refactor.label', \"Refactor...\"),\n\t\t\talias: 'Refactor...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyR,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KeyR\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.Refactor)),\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: 'Refactor...',\n\t\t\t\targs: [{ name: 'args', schema: argsSchema }]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor, userArgs: any): void {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Refactor,\n\t\t\tapply: CodeActionAutoApply.Never\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\ttypeof userArgs?.kind === 'string'\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind)\n\t\t\t\t\t: nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\")\n\t\t\t\t\t: nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.Refactor.contains(args.kind) ? args.kind : HierarchicalKind.None,\n\t\t\t\tonlyIncludePreferredActions: args.preferred\n\t\t\t},\n\t\t\targs.apply, CodeActionTriggerSource.Refactor);\n\t}\n}\n\nexport class SourceAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: sourceActionCommandId,\n\t\t\tlabel: nls.localize('source.label', \"Source Action...\"),\n\t\t\talias: 'Source Action...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 2.1,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.Source)),\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: 'Source Action...',\n\t\t\t\targs: [{ name: 'args', schema: argsSchema }]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor, userArgs: any): void {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Source,\n\t\t\tapply: CodeActionAutoApply.Never\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\ttypeof userArgs?.kind === 'string'\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind)\n\t\t\t\t\t: nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\")\n\t\t\t\t\t: nls.localize('editor.action.source.noneMessage', \"No source actions available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.Source.contains(args.kind) ? args.kind : HierarchicalKind.None,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply, CodeActionTriggerSource.SourceAction);\n\t}\n}\n\nexport class OrganizeImportsAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: organizeImportsCommandId,\n\t\t\tlabel: nls.localize('organizeImports.label', \"Organize Imports\"),\n\t\t\talias: 'Organize Imports',\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyO,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\tnls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"),\n\t\t\t{ include: CodeActionKind.SourceOrganizeImports, includeSourceActions: true },\n\t\t\tCodeActionAutoApply.IfSingle, CodeActionTriggerSource.OrganizeImports);\n\t}\n}\n\nexport class FixAllAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: fixAllCommandId,\n\t\t\tlabel: nls.localize('fixAll.label', \"Fix All\"),\n\t\t\talias: 'Fix All',\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.SourceFixAll))\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\tnls.localize('fixAll.noneMessage', \"No fix all action available\"),\n\t\t\t{ include: CodeActionKind.SourceFixAll, includeSourceActions: true },\n\t\t\tCodeActionAutoApply.IfSingle, CodeActionTriggerSource.FixAll);\n\t}\n}\n\nexport class AutoFixAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: autoFixCommandId,\n\t\t\tlabel: nls.localize('autoFix.label', \"Auto Fix...\"),\n\t\t\talias: 'Auto Fix...',\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.QuickFix)),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.Period,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Period\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\tnls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.QuickFix,\n\t\t\t\tonlyIncludePreferredActions: true\n\t\t\t},\n\t\t\tCodeActionAutoApply.IfSingle, CodeActionTriggerSource.AutoFix);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
