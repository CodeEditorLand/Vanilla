{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/codeAction/browser/lightBulbWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Gesture } from '../../../../base/browser/touch.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './lightBulbWidget.css';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition, IEditorMouseEvent } from '../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IPosition } from '../../../common/core/position.js';\nimport { GlyphMarginLane, IModelDecorationsChangeAccessor, TrackedRangeStickiness } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { computeIndentLevel } from '../../../common/model/utils.js';\nimport { autoFixCommandId, quickFixCommandId } from './codeAction.js';\nimport { CodeActionSet, CodeActionTrigger } from '../common/types.js';\nimport * as nls from '../../../../nls.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { Range } from '../../../common/core/range.js';\n\nconst GUTTER_LIGHTBULB_ICON = registerIcon('gutter-lightbulb', Codicon.lightBulb, nls.localize('gutterLightbulbWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor.'));\nconst GUTTER_LIGHTBULB_AUTO_FIX_ICON = registerIcon('gutter-lightbulb-auto-fix', Codicon.lightbulbAutofix, nls.localize('gutterLightbulbAutoFixWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and a quick fix is available.'));\nconst GUTTER_LIGHTBULB_AIFIX_ICON = registerIcon('gutter-lightbulb-sparkle', Codicon.lightbulbSparkle, nls.localize('gutterLightbulbAIFixWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix is available.'));\nconst GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON = registerIcon('gutter-lightbulb-aifix-auto-fix', Codicon.lightbulbSparkleAutofix, nls.localize('gutterLightbulbAIFixAutoFixWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.'));\nconst GUTTER_SPARKLE_FILLED_ICON = registerIcon('gutter-lightbulb-sparkle-filled', Codicon.sparkleFilled, nls.localize('gutterLightbulbSparkleFilledWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.'));\n\nnamespace LightBulbState {\n\n\texport const enum Type {\n\t\tHidden,\n\t\tShowing,\n\t}\n\n\texport const Hidden = { type: Type.Hidden } as const;\n\n\texport class Showing {\n\t\treadonly type = Type.Showing;\n\n\t\tconstructor(\n\t\t\tpublic readonly actions: CodeActionSet,\n\t\t\tpublic readonly trigger: CodeActionTrigger,\n\t\t\tpublic readonly editorPosition: IPosition,\n\t\t\tpublic readonly widgetPosition: IContentWidgetPosition,\n\t\t) { }\n\t}\n\n\texport type State = typeof Hidden | Showing;\n}\n\nexport class LightBulbWidget extends Disposable implements IContentWidget {\n\tprivate _gutterDecorationID: string | undefined;\n\n\tprivate static readonly GUTTER_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'codicon-gutter-lightbulb-decoration',\n\t\tglyphMarginClassName: ThemeIcon.asClassName(Codicon.lightBulb),\n\t\tglyphMargin: { position: GlyphMarginLane.Left },\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t});\n\n\tpublic static readonly ID = 'editor.contrib.lightbulbWidget';\n\n\tprivate static readonly _posPref = [ContentWidgetPositionPreference.EXACT];\n\n\tprivate readonly _domNode: HTMLElement;\n\n\tprivate readonly _onClick = this._register(new Emitter<{ readonly x: number; readonly y: number; readonly actions: CodeActionSet; readonly trigger: CodeActionTrigger }>());\n\tpublic readonly onClick = this._onClick.event;\n\n\tprivate _state: LightBulbState.State = LightBulbState.Hidden;\n\tprivate _gutterState: LightBulbState.State = LightBulbState.Hidden;\n\tprivate _iconClasses: string[] = [];\n\n\tprivate readonly lightbulbClasses = [\n\t\t'codicon-' + GUTTER_LIGHTBULB_ICON.id,\n\t\t'codicon-' + GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON.id,\n\t\t'codicon-' + GUTTER_LIGHTBULB_AUTO_FIX_ICON.id,\n\t\t'codicon-' + GUTTER_LIGHTBULB_AIFIX_ICON.id,\n\t\t'codicon-' + GUTTER_SPARKLE_FILLED_ICON.id\n\t];\n\n\tprivate _preferredKbLabel?: string;\n\tprivate _quickFixKbLabel?: string;\n\n\tprivate gutterDecoration: ModelDecorationOptions = LightBulbWidget.GUTTER_DECORATION;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService\n\t) {\n\t\tsuper();\n\n\t\tthis._domNode = dom.$('div.lightBulbWidget');\n\t\tthis._domNode.role = 'listbox';\n\t\tthis._register(Gesture.ignoreTarget(this._domNode));\n\n\t\tthis._editor.addContentWidget(this);\n\n\t\tthis._register(this._editor.onDidChangeModelContent(_ => {\n\t\t\t// cancel when the line in question has been removed\n\t\t\tconst editorModel = this._editor.getModel();\n\t\t\tif (this.state.type !== LightBulbState.Type.Showing || !editorModel || this.state.editorPosition.lineNumber >= editorModel.getLineCount()) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\n\t\t\tif (this.gutterState.type !== LightBulbState.Type.Showing || !editorModel || this.gutterState.editorPosition.lineNumber >= editorModel.getLineCount()) {\n\t\t\t\tthis.gutterHide();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(dom.addStandardDisposableGenericMouseDownListener(this._domNode, e => {\n\t\t\tif (this.state.type !== LightBulbState.Type.Showing) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Make sure that focus / cursor location is not lost when clicking widget icon\n\t\t\tthis._editor.focus();\n\t\t\te.preventDefault();\n\n\t\t\t// a bit of extra work to make sure the menu\n\t\t\t// doesn't cover the line-text\n\t\t\tconst { top, height } = dom.getDomNodePagePosition(this._domNode);\n\t\t\tconst lineHeight = this._editor.getOption(EditorOption.lineHeight);\n\n\t\t\tlet pad = Math.floor(lineHeight / 3);\n\t\t\tif (this.state.widgetPosition.position !== null && this.state.widgetPosition.position.lineNumber < this.state.editorPosition.lineNumber) {\n\t\t\t\tpad += lineHeight;\n\t\t\t}\n\n\t\t\tthis._onClick.fire({\n\t\t\t\tx: e.posx,\n\t\t\t\ty: top + height + pad,\n\t\t\t\tactions: this.state.actions,\n\t\t\t\ttrigger: this.state.trigger,\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(this._domNode, 'mouseenter', (e: MouseEvent) => {\n\t\t\tif ((e.buttons & 1) !== 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// mouse enters lightbulb while the primary/left button\n\t\t\t// is being pressed -> hide the lightbulb\n\t\t\tthis.hide();\n\t\t}));\n\n\n\t\tthis._register(Event.runAndSubscribe(this._keybindingService.onDidUpdateKeybindings, () => {\n\t\t\tthis._preferredKbLabel = this._keybindingService.lookupKeybinding(autoFixCommandId)?.getLabel() ?? undefined;\n\t\t\tthis._quickFixKbLabel = this._keybindingService.lookupKeybinding(quickFixCommandId)?.getLabel() ?? undefined;\n\t\t\tthis._updateLightBulbTitleAndIcon();\n\t\t}));\n\n\t\tthis._register(this._editor.onMouseDown(async (e: IEditorMouseEvent) => {\n\n\t\t\tif (!e.target.element || !this.lightbulbClasses.some(cls => e.target.element && e.target.element.classList.contains(cls))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.gutterState.type !== LightBulbState.Type.Showing) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Make sure that focus / cursor location is not lost when clicking widget icon\n\t\t\tthis._editor.focus();\n\n\t\t\t// a bit of extra work to make sure the menu\n\t\t\t// doesn't cover the line-text\n\t\t\tconst { top, height } = dom.getDomNodePagePosition(e.target.element);\n\t\t\tconst lineHeight = this._editor.getOption(EditorOption.lineHeight);\n\n\t\t\tlet pad = Math.floor(lineHeight / 3);\n\t\t\tif (this.gutterState.widgetPosition.position !== null && this.gutterState.widgetPosition.position.lineNumber < this.gutterState.editorPosition.lineNumber) {\n\t\t\t\tpad += lineHeight;\n\t\t\t}\n\n\t\t\tthis._onClick.fire({\n\t\t\t\tx: e.event.posx,\n\t\t\t\ty: top + height + pad,\n\t\t\t\tactions: this.gutterState.actions,\n\t\t\t\ttrigger: this.gutterState.trigger,\n\t\t\t});\n\t\t}));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._editor.removeContentWidget(this);\n\t\tif (this._gutterDecorationID) {\n\t\t\tthis._removeGutterDecoration(this._gutterDecorationID);\n\t\t}\n\t}\n\n\tgetId(): string {\n\t\treturn 'LightBulbWidget';\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn this._state.type === LightBulbState.Type.Showing ? this._state.widgetPosition : null;\n\t}\n\n\tpublic update(actions: CodeActionSet, trigger: CodeActionTrigger, atPosition: IPosition) {\n\t\tif (actions.validActions.length <= 0) {\n\t\t\tthis.gutterHide();\n\t\t\treturn this.hide();\n\t\t}\n\n\t\tconst hasTextFocus = this._editor.hasTextFocus();\n\t\tif (!hasTextFocus) {\n\t\t\tthis.gutterHide();\n\t\t\treturn this.hide();\n\t\t}\n\n\t\tconst options = this._editor.getOptions();\n\t\tif (!options.get(EditorOption.lightbulb).enabled) {\n\t\t\tthis.gutterHide();\n\t\t\treturn this.hide();\n\t\t}\n\n\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\tthis.gutterHide();\n\t\t\treturn this.hide();\n\t\t}\n\n\t\tconst { lineNumber, column } = model.validatePosition(atPosition);\n\n\t\tconst tabSize = model.getOptions().tabSize;\n\t\tconst fontInfo = this._editor.getOptions().get(EditorOption.fontInfo);\n\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\tconst indent = computeIndentLevel(lineContent, tabSize);\n\t\tconst lineHasSpace = fontInfo.spaceWidth * indent > 22;\n\t\tconst isFolded = (lineNumber: number) => {\n\t\t\treturn lineNumber > 2 && this._editor.getTopForLineNumber(lineNumber) === this._editor.getTopForLineNumber(lineNumber - 1);\n\t\t};\n\n\t\t// Check for glyph margin decorations of any kind\n\t\tconst currLineDecorations = this._editor.getLineDecorations(lineNumber);\n\t\tlet hasDecoration = false;\n\t\tif (currLineDecorations) {\n\t\t\tfor (const decoration of currLineDecorations) {\n\t\t\t\tconst glyphClass = decoration.options.glyphMarginClassName;\n\n\t\t\t\tif (glyphClass && !this.lightbulbClasses.some(className => glyphClass.includes(className))) {\n\t\t\t\t\thasDecoration = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet effectiveLineNumber = lineNumber;\n\t\tlet effectiveColumnNumber = 1;\n\t\tif (!lineHasSpace) {\n\t\t\t// Checks if line is empty or starts with any amount of whitespace\n\t\t\tconst isLineEmptyOrIndented = (lineNumber: number): boolean => {\n\t\t\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\t\t\treturn /^\\s*$|^\\s+/.test(lineContent) || lineContent.length <= effectiveColumnNumber;\n\t\t\t};\n\n\t\t\tif (lineNumber > 1 && !isFolded(lineNumber - 1)) {\n\t\t\t\tconst lineCount = model.getLineCount();\n\t\t\t\tconst endLine = lineNumber === lineCount;\n\t\t\t\tconst prevLineEmptyOrIndented = lineNumber > 1 && isLineEmptyOrIndented(lineNumber - 1);\n\t\t\t\tconst nextLineEmptyOrIndented = !endLine && isLineEmptyOrIndented(lineNumber + 1);\n\t\t\t\tconst currLineEmptyOrIndented = isLineEmptyOrIndented(lineNumber);\n\t\t\t\tconst notEmpty = !nextLineEmptyOrIndented && !prevLineEmptyOrIndented;\n\n\t\t\t\t// check above and below. if both are blocked, display lightbulb in the gutter.\n\t\t\t\tif (!nextLineEmptyOrIndented && !prevLineEmptyOrIndented && !hasDecoration) {\n\t\t\t\t\tthis.gutterState = new LightBulbState.Showing(actions, trigger, atPosition, {\n\t\t\t\t\t\tposition: { lineNumber: effectiveLineNumber, column: effectiveColumnNumber },\n\t\t\t\t\t\tpreference: LightBulbWidget._posPref\n\t\t\t\t\t});\n\t\t\t\t\tthis.renderGutterLightbub();\n\t\t\t\t\treturn this.hide();\n\t\t\t\t} else if (prevLineEmptyOrIndented || endLine || (prevLineEmptyOrIndented && !currLineEmptyOrIndented)) {\n\t\t\t\t\teffectiveLineNumber -= 1;\n\t\t\t\t} else if (nextLineEmptyOrIndented || (notEmpty && currLineEmptyOrIndented)) {\n\t\t\t\t\teffectiveLineNumber += 1;\n\t\t\t\t}\n\t\t\t} else if (lineNumber === 1 && (lineNumber === model.getLineCount() || !isLineEmptyOrIndented(lineNumber + 1) && !isLineEmptyOrIndented(lineNumber))) {\n\t\t\t\t// special checks for first line blocked vs. not blocked.\n\t\t\t\tthis.gutterState = new LightBulbState.Showing(actions, trigger, atPosition, {\n\t\t\t\t\tposition: { lineNumber: effectiveLineNumber, column: effectiveColumnNumber },\n\t\t\t\t\tpreference: LightBulbWidget._posPref\n\t\t\t\t});\n\n\t\t\t\tif (hasDecoration) {\n\t\t\t\t\tthis.gutterHide();\n\t\t\t\t} else {\n\t\t\t\t\tthis.renderGutterLightbub();\n\t\t\t\t\treturn this.hide();\n\t\t\t\t}\n\t\t\t} else if ((lineNumber < model.getLineCount()) && !isFolded(lineNumber + 1)) {\n\t\t\t\teffectiveLineNumber += 1;\n\t\t\t} else if (column * fontInfo.spaceWidth < 22) {\n\t\t\t\t// cannot show lightbulb above/below and showing\n\t\t\t\t// it inline would overlay the cursor...\n\t\t\t\treturn this.hide();\n\t\t\t}\n\t\t\teffectiveColumnNumber = /^\\S\\s*$/.test(model.getLineContent(effectiveLineNumber)) ? 2 : 1;\n\t\t}\n\n\t\tthis.state = new LightBulbState.Showing(actions, trigger, atPosition, {\n\t\t\tposition: { lineNumber: effectiveLineNumber, column: effectiveColumnNumber },\n\t\t\tpreference: LightBulbWidget._posPref\n\t\t});\n\n\t\tif (this._gutterDecorationID) {\n\t\t\tthis._removeGutterDecoration(this._gutterDecorationID);\n\t\t\tthis.gutterHide();\n\t\t}\n\n\t\tconst validActions = actions.validActions;\n\t\tconst actionKind = actions.validActions[0].action.kind;\n\t\tif (validActions.length !== 1 || !actionKind) {\n\t\t\tthis._editor.layoutContentWidget(this);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n\n\tpublic hide(): void {\n\t\tif (this.state === LightBulbState.Hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state = LightBulbState.Hidden;\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n\n\tpublic gutterHide(): void {\n\t\tif (this.gutterState === LightBulbState.Hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._gutterDecorationID) {\n\t\t\tthis._removeGutterDecoration(this._gutterDecorationID);\n\t\t}\n\n\t\tthis.gutterState = LightBulbState.Hidden;\n\t}\n\n\tprivate get state(): LightBulbState.State { return this._state; }\n\n\tprivate set state(value) {\n\t\tthis._state = value;\n\t\tthis._updateLightBulbTitleAndIcon();\n\t}\n\n\tprivate get gutterState(): LightBulbState.State { return this._gutterState; }\n\n\tprivate set gutterState(value) {\n\t\tthis._gutterState = value;\n\t\tthis._updateGutterLightBulbTitleAndIcon();\n\t}\n\n\tprivate _updateLightBulbTitleAndIcon(): void {\n\t\tthis._domNode.classList.remove(...this._iconClasses);\n\t\tthis._iconClasses = [];\n\t\tif (this.state.type !== LightBulbState.Type.Showing) {\n\t\t\treturn;\n\t\t}\n\t\tlet icon: ThemeIcon;\n\t\tlet autoRun = false;\n\t\tif (this.state.actions.allAIFixes) {\n\t\t\ticon = Codicon.sparkleFilled;\n\t\t\tif (this.state.actions.validActions.length === 1) {\n\t\t\t\tautoRun = true;\n\t\t\t}\n\t\t} else if (this.state.actions.hasAutoFix) {\n\t\t\tif (this.state.actions.hasAIFix) {\n\t\t\t\ticon = Codicon.lightbulbSparkleAutofix;\n\t\t\t} else {\n\t\t\t\ticon = Codicon.lightbulbAutofix;\n\t\t\t}\n\t\t} else if (this.state.actions.hasAIFix) {\n\t\t\ticon = Codicon.lightbulbSparkle;\n\t\t} else {\n\t\t\ticon = Codicon.lightBulb;\n\t\t}\n\t\tthis._updateLightbulbTitle(this.state.actions.hasAutoFix, autoRun);\n\t\tthis._iconClasses = ThemeIcon.asClassNameArray(icon);\n\t\tthis._domNode.classList.add(...this._iconClasses);\n\t}\n\n\tprivate _updateGutterLightBulbTitleAndIcon(): void {\n\t\tif (this.gutterState.type !== LightBulbState.Type.Showing) {\n\t\t\treturn;\n\t\t}\n\t\tlet icon: ThemeIcon;\n\t\tlet autoRun = false;\n\t\tif (this.gutterState.actions.allAIFixes) {\n\t\t\ticon = GUTTER_SPARKLE_FILLED_ICON;\n\t\t\tif (this.gutterState.actions.validActions.length === 1) {\n\t\t\t\tautoRun = true;\n\t\t\t}\n\t\t} else if (this.gutterState.actions.hasAutoFix) {\n\t\t\tif (this.gutterState.actions.hasAIFix) {\n\t\t\t\ticon = GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON;\n\t\t\t} else {\n\t\t\t\ticon = GUTTER_LIGHTBULB_AUTO_FIX_ICON;\n\t\t\t}\n\t\t} else if (this.gutterState.actions.hasAIFix) {\n\t\t\ticon = GUTTER_LIGHTBULB_AIFIX_ICON;\n\t\t} else {\n\t\t\ticon = GUTTER_LIGHTBULB_ICON;\n\t\t}\n\t\tthis._updateLightbulbTitle(this.gutterState.actions.hasAutoFix, autoRun);\n\n\t\tconst GUTTER_DECORATION = ModelDecorationOptions.register({\n\t\t\tdescription: 'codicon-gutter-lightbulb-decoration',\n\t\t\tglyphMarginClassName: ThemeIcon.asClassName(icon),\n\t\t\tglyphMargin: { position: GlyphMarginLane.Left },\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t});\n\n\t\tthis.gutterDecoration = GUTTER_DECORATION;\n\t}\n\n\t/* Gutter Helper Functions */\n\tprivate renderGutterLightbub(): void {\n\t\tconst selection = this._editor.getSelection();\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._gutterDecorationID === undefined) {\n\t\t\tthis._addGutterDecoration(selection.startLineNumber);\n\t\t} else {\n\t\t\tthis._updateGutterDecoration(this._gutterDecorationID, selection.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _addGutterDecoration(lineNumber: number) {\n\t\tthis._editor.changeDecorations((accessor: IModelDecorationsChangeAccessor) => {\n\t\t\tthis._gutterDecorationID = accessor.addDecoration(new Range(lineNumber, 0, lineNumber, 0), this.gutterDecoration);\n\t\t});\n\t}\n\n\tprivate _removeGutterDecoration(decorationId: string) {\n\t\tthis._editor.changeDecorations((accessor: IModelDecorationsChangeAccessor) => {\n\t\t\taccessor.removeDecoration(decorationId);\n\t\t\tthis._gutterDecorationID = undefined;\n\t\t});\n\t}\n\n\tprivate _updateGutterDecoration(decorationId: string, lineNumber: number) {\n\t\tthis._editor.changeDecorations((accessor: IModelDecorationsChangeAccessor) => {\n\t\t\taccessor.changeDecoration(decorationId, new Range(lineNumber, 0, lineNumber, 0));\n\t\t\taccessor.changeDecorationOptions(decorationId, this.gutterDecoration);\n\t\t});\n\t}\n\n\tprivate _updateLightbulbTitle(autoFix: boolean, autoRun: boolean): void {\n\t\tif (this.state.type !== LightBulbState.Type.Showing) {\n\t\t\treturn;\n\t\t}\n\t\tif (autoRun) {\n\t\t\tthis.title = nls.localize('codeActionAutoRun', \"Run: {0}\", this.state.actions.validActions[0].action.title);\n\t\t} else if (autoFix && this._preferredKbLabel) {\n\t\t\tthis.title = nls.localize('preferredcodeActionWithKb', \"Show Code Actions. Preferred Quick Fix Available ({0})\", this._preferredKbLabel);\n\t\t} else if (!autoFix && this._quickFixKbLabel) {\n\t\t\tthis.title = nls.localize('codeActionWithKb', \"Show Code Actions ({0})\", this._quickFixKbLabel);\n\t\t} else if (!autoFix) {\n\t\t\tthis.title = nls.localize('codeAction', \"Show Code Actions\");\n\t\t}\n\t}\n\n\tprivate set title(value: string) {\n\t\tthis._domNode.title = value;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["LightBulbState", "Type", "lineNumber", "lineContent"]
}
