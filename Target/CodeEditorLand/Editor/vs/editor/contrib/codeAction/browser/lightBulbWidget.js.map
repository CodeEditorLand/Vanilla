{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/codeAction/browser/lightBulbWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { Gesture } from \"../../../../base/browser/touch.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport \"./lightBulbWidget.css\";\nimport * as nls from \"../../../../nls.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport {\n\tContentWidgetPositionPreference,\n\ttype ICodeEditor,\n\ttype IContentWidget,\n\ttype IContentWidgetPosition,\n\ttype IEditorMouseEvent,\n} from \"../../../browser/editorBrowser.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { IPosition } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport {\n\tGlyphMarginLane,\n\ttype IModelDecorationsChangeAccessor,\n\tTrackedRangeStickiness,\n} from \"../../../common/model.js\";\nimport { ModelDecorationOptions } from \"../../../common/model/textModel.js\";\nimport { computeIndentLevel } from \"../../../common/model/utils.js\";\nimport type { CodeActionSet, CodeActionTrigger } from \"../common/types.js\";\nimport { autoFixCommandId, quickFixCommandId } from \"./codeAction.js\";\n\nconst GUTTER_LIGHTBULB_ICON = registerIcon(\n\t\"gutter-lightbulb\",\n\tCodicon.lightBulb,\n\tnls.localize(\n\t\t\"gutterLightbulbWidget\",\n\t\t\"Icon which spawns code actions menu from the gutter when there is no space in the editor.\",\n\t),\n);\nconst GUTTER_LIGHTBULB_AUTO_FIX_ICON = registerIcon(\n\t\"gutter-lightbulb-auto-fix\",\n\tCodicon.lightbulbAutofix,\n\tnls.localize(\n\t\t\"gutterLightbulbAutoFixWidget\",\n\t\t\"Icon which spawns code actions menu from the gutter when there is no space in the editor and a quick fix is available.\",\n\t),\n);\nconst GUTTER_LIGHTBULB_AIFIX_ICON = registerIcon(\n\t\"gutter-lightbulb-sparkle\",\n\tCodicon.lightbulbSparkle,\n\tnls.localize(\n\t\t\"gutterLightbulbAIFixWidget\",\n\t\t\"Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix is available.\",\n\t),\n);\nconst GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON = registerIcon(\n\t\"gutter-lightbulb-aifix-auto-fix\",\n\tCodicon.lightbulbSparkleAutofix,\n\tnls.localize(\n\t\t\"gutterLightbulbAIFixAutoFixWidget\",\n\t\t\"Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.\",\n\t),\n);\nconst GUTTER_SPARKLE_FILLED_ICON = registerIcon(\n\t\"gutter-lightbulb-sparkle-filled\",\n\tCodicon.sparkleFilled,\n\tnls.localize(\n\t\t\"gutterLightbulbSparkleFilledWidget\",\n\t\t\"Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.\",\n\t),\n);\n\nnamespace LightBulbState {\n\texport enum Type {\n\t\tHidden = 0,\n\t\tShowing = 1,\n\t}\n\n\texport const Hidden = { type: Type.Hidden } as const;\n\n\texport class Showing {\n\t\treadonly type = Type.Showing;\n\n\t\tconstructor(\n\t\t\tpublic readonly actions: CodeActionSet,\n\t\t\tpublic readonly trigger: CodeActionTrigger,\n\t\t\tpublic readonly editorPosition: IPosition,\n\t\t\tpublic readonly widgetPosition: IContentWidgetPosition,\n\t\t) {}\n\t}\n\n\texport type State = typeof Hidden | Showing;\n}\n\nexport class LightBulbWidget extends Disposable implements IContentWidget {\n\tprivate _gutterDecorationID: string | undefined;\n\n\tprivate static readonly GUTTER_DECORATION = ModelDecorationOptions.register(\n\t\t{\n\t\t\tdescription: \"codicon-gutter-lightbulb-decoration\",\n\t\t\tglyphMarginClassName: ThemeIcon.asClassName(Codicon.lightBulb),\n\t\t\tglyphMargin: { position: GlyphMarginLane.Left },\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t},\n\t);\n\n\tpublic static readonly ID = \"editor.contrib.lightbulbWidget\";\n\n\tprivate static readonly _posPref = [ContentWidgetPositionPreference.EXACT];\n\n\tprivate readonly _domNode: HTMLElement;\n\n\tprivate readonly _onClick = this._register(\n\t\tnew Emitter<{\n\t\t\treadonly x: number;\n\t\t\treadonly y: number;\n\t\t\treadonly actions: CodeActionSet;\n\t\t\treadonly trigger: CodeActionTrigger;\n\t\t}>(),\n\t);\n\tpublic readonly onClick = this._onClick.event;\n\n\tprivate _state: LightBulbState.State = LightBulbState.Hidden;\n\tprivate _gutterState: LightBulbState.State = LightBulbState.Hidden;\n\tprivate _iconClasses: string[] = [];\n\n\tprivate readonly lightbulbClasses = [\n\t\t\"codicon-\" + GUTTER_LIGHTBULB_ICON.id,\n\t\t\"codicon-\" + GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON.id,\n\t\t\"codicon-\" + GUTTER_LIGHTBULB_AUTO_FIX_ICON.id,\n\t\t\"codicon-\" + GUTTER_LIGHTBULB_AIFIX_ICON.id,\n\t\t\"codicon-\" + GUTTER_SPARKLE_FILLED_ICON.id,\n\t];\n\n\tprivate _preferredKbLabel?: string;\n\tprivate _quickFixKbLabel?: string;\n\n\tprivate gutterDecoration: ModelDecorationOptions =\n\t\tLightBulbWidget.GUTTER_DECORATION;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IKeybindingService\n\t\tprivate readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis._domNode = dom.$(\"div.lightBulbWidget\");\n\t\tthis._domNode.role = \"listbox\";\n\t\tthis._register(Gesture.ignoreTarget(this._domNode));\n\n\t\tthis._editor.addContentWidget(this);\n\n\t\tthis._register(\n\t\t\tthis._editor.onDidChangeModelContent((_) => {\n\t\t\t\t// cancel when the line in question has been removed\n\t\t\t\tconst editorModel = this._editor.getModel();\n\t\t\t\tif (\n\t\t\t\t\tthis.state.type !== LightBulbState.Type.Showing ||\n\t\t\t\t\t!editorModel ||\n\t\t\t\t\tthis.state.editorPosition.lineNumber >=\n\t\t\t\t\t\teditorModel.getLineCount()\n\t\t\t\t) {\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tthis.gutterState.type !== LightBulbState.Type.Showing ||\n\t\t\t\t\t!editorModel ||\n\t\t\t\t\tthis.gutterState.editorPosition.lineNumber >=\n\t\t\t\t\t\teditorModel.getLineCount()\n\t\t\t\t) {\n\t\t\t\t\tthis.gutterHide();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tdom.addStandardDisposableGenericMouseDownListener(\n\t\t\t\tthis._domNode,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (this.state.type !== LightBulbState.Type.Showing) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Make sure that focus / cursor location is not lost when clicking widget icon\n\t\t\t\t\tthis._editor.focus();\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t// a bit of extra work to make sure the menu\n\t\t\t\t\t// doesn't cover the line-text\n\t\t\t\t\tconst { top, height } = dom.getDomNodePagePosition(\n\t\t\t\t\t\tthis._domNode,\n\t\t\t\t\t);\n\t\t\t\t\tconst lineHeight = this._editor.getOption(\n\t\t\t\t\t\tEditorOption.lineHeight,\n\t\t\t\t\t);\n\n\t\t\t\t\tlet pad = Math.floor(lineHeight / 3);\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.state.widgetPosition.position !== null &&\n\t\t\t\t\t\tthis.state.widgetPosition.position.lineNumber <\n\t\t\t\t\t\t\tthis.state.editorPosition.lineNumber\n\t\t\t\t\t) {\n\t\t\t\t\t\tpad += lineHeight;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._onClick.fire({\n\t\t\t\t\t\tx: e.posx,\n\t\t\t\t\t\ty: top + height + pad,\n\t\t\t\t\t\tactions: this.state.actions,\n\t\t\t\t\t\ttrigger: this.state.trigger,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._domNode,\n\t\t\t\t\"mouseenter\",\n\t\t\t\t(e: MouseEvent) => {\n\t\t\t\t\tif ((e.buttons & 1) !== 1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// mouse enters lightbulb while the primary/left button\n\t\t\t\t\t// is being pressed -> hide the lightbulb\n\t\t\t\t\tthis.hide();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tthis._keybindingService.onDidUpdateKeybindings,\n\t\t\t\t() => {\n\t\t\t\t\tthis._preferredKbLabel =\n\t\t\t\t\t\tthis._keybindingService\n\t\t\t\t\t\t\t.lookupKeybinding(autoFixCommandId)\n\t\t\t\t\t\t\t?.getLabel() ?? undefined;\n\t\t\t\t\tthis._quickFixKbLabel =\n\t\t\t\t\t\tthis._keybindingService\n\t\t\t\t\t\t\t.lookupKeybinding(quickFixCommandId)\n\t\t\t\t\t\t\t?.getLabel() ?? undefined;\n\t\t\t\t\tthis._updateLightBulbTitleAndIcon();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._editor.onMouseDown(async (e: IEditorMouseEvent) => {\n\t\t\t\tif (\n\t\t\t\t\t!e.target.element ||\n\t\t\t\t\t!this.lightbulbClasses.some(\n\t\t\t\t\t\t(cls) =>\n\t\t\t\t\t\t\te.target.element &&\n\t\t\t\t\t\t\te.target.element.classList.contains(cls),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.gutterState.type !== LightBulbState.Type.Showing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Make sure that focus / cursor location is not lost when clicking widget icon\n\t\t\t\tthis._editor.focus();\n\n\t\t\t\t// a bit of extra work to make sure the menu\n\t\t\t\t// doesn't cover the line-text\n\t\t\t\tconst { top, height } = dom.getDomNodePagePosition(\n\t\t\t\t\te.target.element,\n\t\t\t\t);\n\t\t\t\tconst lineHeight = this._editor.getOption(\n\t\t\t\t\tEditorOption.lineHeight,\n\t\t\t\t);\n\n\t\t\t\tlet pad = Math.floor(lineHeight / 3);\n\t\t\t\tif (\n\t\t\t\t\tthis.gutterState.widgetPosition.position !== null &&\n\t\t\t\t\tthis.gutterState.widgetPosition.position.lineNumber <\n\t\t\t\t\t\tthis.gutterState.editorPosition.lineNumber\n\t\t\t\t) {\n\t\t\t\t\tpad += lineHeight;\n\t\t\t\t}\n\n\t\t\t\tthis._onClick.fire({\n\t\t\t\t\tx: e.event.posx,\n\t\t\t\t\ty: top + height + pad,\n\t\t\t\t\tactions: this.gutterState.actions,\n\t\t\t\t\ttrigger: this.gutterState.trigger,\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._editor.removeContentWidget(this);\n\t\tif (this._gutterDecorationID) {\n\t\t\tthis._removeGutterDecoration(this._gutterDecorationID);\n\t\t}\n\t}\n\n\tgetId(): string {\n\t\treturn \"LightBulbWidget\";\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn this._state.type === LightBulbState.Type.Showing\n\t\t\t? this._state.widgetPosition\n\t\t\t: null;\n\t}\n\n\tpublic update(\n\t\tactions: CodeActionSet,\n\t\ttrigger: CodeActionTrigger,\n\t\tatPosition: IPosition,\n\t) {\n\t\tif (actions.validActions.length <= 0) {\n\t\t\tthis.gutterHide();\n\t\t\treturn this.hide();\n\t\t}\n\n\t\tconst hasTextFocus = this._editor.hasTextFocus();\n\t\tif (!hasTextFocus) {\n\t\t\tthis.gutterHide();\n\t\t\treturn this.hide();\n\t\t}\n\n\t\tconst options = this._editor.getOptions();\n\t\tif (!options.get(EditorOption.lightbulb).enabled) {\n\t\t\tthis.gutterHide();\n\t\t\treturn this.hide();\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\tthis.gutterHide();\n\t\t\treturn this.hide();\n\t\t}\n\n\t\tconst { lineNumber, column } = model.validatePosition(atPosition);\n\n\t\tconst tabSize = model.getOptions().tabSize;\n\t\tconst fontInfo = this._editor.getOptions().get(EditorOption.fontInfo);\n\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\tconst indent = computeIndentLevel(lineContent, tabSize);\n\t\tconst lineHasSpace = fontInfo.spaceWidth * indent > 22;\n\t\tconst isFolded = (lineNumber: number) => {\n\t\t\treturn (\n\t\t\t\tlineNumber > 2 &&\n\t\t\t\tthis._editor.getTopForLineNumber(lineNumber) ===\n\t\t\t\t\tthis._editor.getTopForLineNumber(lineNumber - 1)\n\t\t\t);\n\t\t};\n\n\t\t// Check for glyph margin decorations of any kind\n\t\tconst currLineDecorations = this._editor.getLineDecorations(lineNumber);\n\t\tlet hasDecoration = false;\n\t\tif (currLineDecorations) {\n\t\t\tfor (const decoration of currLineDecorations) {\n\t\t\t\tconst glyphClass = decoration.options.glyphMarginClassName;\n\n\t\t\t\tif (\n\t\t\t\t\tglyphClass &&\n\t\t\t\t\t!this.lightbulbClasses.some((className) =>\n\t\t\t\t\t\tglyphClass.includes(className),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\thasDecoration = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet effectiveLineNumber = lineNumber;\n\t\tlet effectiveColumnNumber = 1;\n\t\tif (!lineHasSpace) {\n\t\t\t// Checks if line is empty or starts with any amount of whitespace\n\t\t\tconst isLineEmptyOrIndented = (lineNumber: number): boolean => {\n\t\t\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\t\t\treturn (\n\t\t\t\t\t/^\\s*$|^\\s+/.test(lineContent) ||\n\t\t\t\t\tlineContent.length <= effectiveColumnNumber\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tif (lineNumber > 1 && !isFolded(lineNumber - 1)) {\n\t\t\t\tconst lineCount = model.getLineCount();\n\t\t\t\tconst endLine = lineNumber === lineCount;\n\t\t\t\tconst prevLineEmptyOrIndented =\n\t\t\t\t\tlineNumber > 1 && isLineEmptyOrIndented(lineNumber - 1);\n\t\t\t\tconst nextLineEmptyOrIndented =\n\t\t\t\t\t!endLine && isLineEmptyOrIndented(lineNumber + 1);\n\t\t\t\tconst currLineEmptyOrIndented =\n\t\t\t\t\tisLineEmptyOrIndented(lineNumber);\n\t\t\t\tconst notEmpty =\n\t\t\t\t\t!nextLineEmptyOrIndented && !prevLineEmptyOrIndented;\n\n\t\t\t\t// check above and below. if both are blocked, display lightbulb in the gutter.\n\t\t\t\tif (\n\t\t\t\t\t!nextLineEmptyOrIndented &&\n\t\t\t\t\t!prevLineEmptyOrIndented &&\n\t\t\t\t\t!hasDecoration\n\t\t\t\t) {\n\t\t\t\t\tthis.gutterState = new LightBulbState.Showing(\n\t\t\t\t\t\tactions,\n\t\t\t\t\t\ttrigger,\n\t\t\t\t\t\tatPosition,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\t\tlineNumber: effectiveLineNumber,\n\t\t\t\t\t\t\t\tcolumn: effectiveColumnNumber,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpreference: LightBulbWidget._posPref,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tthis.renderGutterLightbub();\n\t\t\t\t\treturn this.hide();\n\t\t\t\t} else if (\n\t\t\t\t\tprevLineEmptyOrIndented ||\n\t\t\t\t\tendLine ||\n\t\t\t\t\t(prevLineEmptyOrIndented && !currLineEmptyOrIndented)\n\t\t\t\t) {\n\t\t\t\t\teffectiveLineNumber -= 1;\n\t\t\t\t} else if (\n\t\t\t\t\tnextLineEmptyOrIndented ||\n\t\t\t\t\t(notEmpty && currLineEmptyOrIndented)\n\t\t\t\t) {\n\t\t\t\t\teffectiveLineNumber += 1;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tlineNumber === 1 &&\n\t\t\t\t(lineNumber === model.getLineCount() ||\n\t\t\t\t\t(!isLineEmptyOrIndented(lineNumber + 1) &&\n\t\t\t\t\t\t!isLineEmptyOrIndented(lineNumber)))\n\t\t\t) {\n\t\t\t\t// special checks for first line blocked vs. not blocked.\n\t\t\t\tthis.gutterState = new LightBulbState.Showing(\n\t\t\t\t\tactions,\n\t\t\t\t\ttrigger,\n\t\t\t\t\tatPosition,\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\tlineNumber: effectiveLineNumber,\n\t\t\t\t\t\t\tcolumn: effectiveColumnNumber,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpreference: LightBulbWidget._posPref,\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tif (hasDecoration) {\n\t\t\t\t\tthis.gutterHide();\n\t\t\t\t} else {\n\t\t\t\t\tthis.renderGutterLightbub();\n\t\t\t\t\treturn this.hide();\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tlineNumber < model.getLineCount() &&\n\t\t\t\t!isFolded(lineNumber + 1)\n\t\t\t) {\n\t\t\t\teffectiveLineNumber += 1;\n\t\t\t} else if (column * fontInfo.spaceWidth < 22) {\n\t\t\t\t// cannot show lightbulb above/below and showing\n\t\t\t\t// it inline would overlay the cursor...\n\t\t\t\treturn this.hide();\n\t\t\t}\n\t\t\teffectiveColumnNumber = /^\\S\\s*$/.test(\n\t\t\t\tmodel.getLineContent(effectiveLineNumber),\n\t\t\t)\n\t\t\t\t? 2\n\t\t\t\t: 1;\n\t\t}\n\n\t\tthis.state = new LightBulbState.Showing(actions, trigger, atPosition, {\n\t\t\tposition: {\n\t\t\t\tlineNumber: effectiveLineNumber,\n\t\t\t\tcolumn: effectiveColumnNumber,\n\t\t\t},\n\t\t\tpreference: LightBulbWidget._posPref,\n\t\t});\n\n\t\tif (this._gutterDecorationID) {\n\t\t\tthis._removeGutterDecoration(this._gutterDecorationID);\n\t\t\tthis.gutterHide();\n\t\t}\n\n\t\tconst validActions = actions.validActions;\n\t\tconst actionKind = actions.validActions[0].action.kind;\n\t\tif (validActions.length !== 1 || !actionKind) {\n\t\t\tthis._editor.layoutContentWidget(this);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n\n\tpublic hide(): void {\n\t\tif (this.state === LightBulbState.Hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state = LightBulbState.Hidden;\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n\n\tpublic gutterHide(): void {\n\t\tif (this.gutterState === LightBulbState.Hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._gutterDecorationID) {\n\t\t\tthis._removeGutterDecoration(this._gutterDecorationID);\n\t\t}\n\n\t\tthis.gutterState = LightBulbState.Hidden;\n\t}\n\n\tprivate get state(): LightBulbState.State {\n\t\treturn this._state;\n\t}\n\n\tprivate set state(value) {\n\t\tthis._state = value;\n\t\tthis._updateLightBulbTitleAndIcon();\n\t}\n\n\tprivate get gutterState(): LightBulbState.State {\n\t\treturn this._gutterState;\n\t}\n\n\tprivate set gutterState(value) {\n\t\tthis._gutterState = value;\n\t\tthis._updateGutterLightBulbTitleAndIcon();\n\t}\n\n\tprivate _updateLightBulbTitleAndIcon(): void {\n\t\tthis._domNode.classList.remove(...this._iconClasses);\n\t\tthis._iconClasses = [];\n\t\tif (this.state.type !== LightBulbState.Type.Showing) {\n\t\t\treturn;\n\t\t}\n\t\tlet icon: ThemeIcon;\n\t\tlet autoRun = false;\n\t\tif (this.state.actions.allAIFixes) {\n\t\t\ticon = Codicon.sparkleFilled;\n\t\t\tif (this.state.actions.validActions.length === 1) {\n\t\t\t\tautoRun = true;\n\t\t\t}\n\t\t} else if (this.state.actions.hasAutoFix) {\n\t\t\tif (this.state.actions.hasAIFix) {\n\t\t\t\ticon = Codicon.lightbulbSparkleAutofix;\n\t\t\t} else {\n\t\t\t\ticon = Codicon.lightbulbAutofix;\n\t\t\t}\n\t\t} else if (this.state.actions.hasAIFix) {\n\t\t\ticon = Codicon.lightbulbSparkle;\n\t\t} else {\n\t\t\ticon = Codicon.lightBulb;\n\t\t}\n\t\tthis._updateLightbulbTitle(this.state.actions.hasAutoFix, autoRun);\n\t\tthis._iconClasses = ThemeIcon.asClassNameArray(icon);\n\t\tthis._domNode.classList.add(...this._iconClasses);\n\t}\n\n\tprivate _updateGutterLightBulbTitleAndIcon(): void {\n\t\tif (this.gutterState.type !== LightBulbState.Type.Showing) {\n\t\t\treturn;\n\t\t}\n\t\tlet icon: ThemeIcon;\n\t\tlet autoRun = false;\n\t\tif (this.gutterState.actions.allAIFixes) {\n\t\t\ticon = GUTTER_SPARKLE_FILLED_ICON;\n\t\t\tif (this.gutterState.actions.validActions.length === 1) {\n\t\t\t\tautoRun = true;\n\t\t\t}\n\t\t} else if (this.gutterState.actions.hasAutoFix) {\n\t\t\tif (this.gutterState.actions.hasAIFix) {\n\t\t\t\ticon = GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON;\n\t\t\t} else {\n\t\t\t\ticon = GUTTER_LIGHTBULB_AUTO_FIX_ICON;\n\t\t\t}\n\t\t} else if (this.gutterState.actions.hasAIFix) {\n\t\t\ticon = GUTTER_LIGHTBULB_AIFIX_ICON;\n\t\t} else {\n\t\t\ticon = GUTTER_LIGHTBULB_ICON;\n\t\t}\n\t\tthis._updateLightbulbTitle(\n\t\t\tthis.gutterState.actions.hasAutoFix,\n\t\t\tautoRun,\n\t\t);\n\n\t\tconst GUTTER_DECORATION = ModelDecorationOptions.register({\n\t\t\tdescription: \"codicon-gutter-lightbulb-decoration\",\n\t\t\tglyphMarginClassName: ThemeIcon.asClassName(icon),\n\t\t\tglyphMargin: { position: GlyphMarginLane.Left },\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t});\n\n\t\tthis.gutterDecoration = GUTTER_DECORATION;\n\t}\n\n\t/* Gutter Helper Functions */\n\tprivate renderGutterLightbub(): void {\n\t\tconst selection = this._editor.getSelection();\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._gutterDecorationID === undefined) {\n\t\t\tthis._addGutterDecoration(selection.startLineNumber);\n\t\t} else {\n\t\t\tthis._updateGutterDecoration(\n\t\t\t\tthis._gutterDecorationID,\n\t\t\t\tselection.startLineNumber,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _addGutterDecoration(lineNumber: number) {\n\t\tthis._editor.changeDecorations(\n\t\t\t(accessor: IModelDecorationsChangeAccessor) => {\n\t\t\t\tthis._gutterDecorationID = accessor.addDecoration(\n\t\t\t\t\tnew Range(lineNumber, 0, lineNumber, 0),\n\t\t\t\t\tthis.gutterDecoration,\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate _removeGutterDecoration(decorationId: string) {\n\t\tthis._editor.changeDecorations(\n\t\t\t(accessor: IModelDecorationsChangeAccessor) => {\n\t\t\t\taccessor.removeDecoration(decorationId);\n\t\t\t\tthis._gutterDecorationID = undefined;\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate _updateGutterDecoration(decorationId: string, lineNumber: number) {\n\t\tthis._editor.changeDecorations(\n\t\t\t(accessor: IModelDecorationsChangeAccessor) => {\n\t\t\t\taccessor.changeDecoration(\n\t\t\t\t\tdecorationId,\n\t\t\t\t\tnew Range(lineNumber, 0, lineNumber, 0),\n\t\t\t\t);\n\t\t\t\taccessor.changeDecorationOptions(\n\t\t\t\t\tdecorationId,\n\t\t\t\t\tthis.gutterDecoration,\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate _updateLightbulbTitle(autoFix: boolean, autoRun: boolean): void {\n\t\tif (this.state.type !== LightBulbState.Type.Showing) {\n\t\t\treturn;\n\t\t}\n\t\tif (autoRun) {\n\t\t\tthis.title = nls.localize(\n\t\t\t\t\"codeActionAutoRun\",\n\t\t\t\t\"Run: {0}\",\n\t\t\t\tthis.state.actions.validActions[0].action.title,\n\t\t\t);\n\t\t} else if (autoFix && this._preferredKbLabel) {\n\t\t\tthis.title = nls.localize(\n\t\t\t\t\"preferredcodeActionWithKb\",\n\t\t\t\t\"Show Code Actions. Preferred Quick Fix Available ({0})\",\n\t\t\t\tthis._preferredKbLabel,\n\t\t\t);\n\t\t} else if (!autoFix && this._quickFixKbLabel) {\n\t\t\tthis.title = nls.localize(\n\t\t\t\t\"codeActionWithKb\",\n\t\t\t\t\"Show Code Actions ({0})\",\n\t\t\t\tthis._quickFixKbLabel,\n\t\t\t);\n\t\t} else if (!autoFix) {\n\t\t\tthis.title = nls.localize(\"codeAction\", \"Show Code Actions\");\n\t\t}\n\t}\n\n\tprivate set title(value: string) {\n\t\tthis._domNode.title = value;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["LightBulbState", "Type", "lineNumber", "lineContent"]
}
