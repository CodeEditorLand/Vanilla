{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/placeholderText/browser/placeholderTextContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h } from '../../../../base/browser/dom.js';\nimport { structuralEquals } from '../../../../base/common/equals.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, DebugOwner, derivedObservableWithCache, derivedOpts, derivedWithStore, IObservable, IReader } from '../../../../base/common/observable.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../browser/observableCodeEditor.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\n\n/**\n * Use the editor option to set the placeholder text.\n*/\nexport class PlaceholderTextContribution extends Disposable implements IEditorContribution {\n\tpublic static get(editor: ICodeEditor): PlaceholderTextContribution {\n\t\treturn editor.getContribution<PlaceholderTextContribution>(PlaceholderTextContribution.ID)!;\n\t}\n\n\tpublic static readonly ID = 'editor.contrib.placeholderText';\n\tprivate readonly _editorObs = observableCodeEditor(this._editor);\n\n\tprivate readonly _placeholderText = this._editorObs.getOption(EditorOption.placeholder);\n\n\tprivate readonly _state = derivedOpts<{ placeholder: string } | undefined>({ owner: this, equalsFn: structuralEquals }, reader => {\n\t\tconst p = this._placeholderText.read(reader);\n\t\tif (!p) { return undefined; }\n\t\tif (!this._editorObs.valueIsEmpty.read(reader)) { return undefined; }\n\t\treturn { placeholder: p };\n\t});\n\n\tprivate readonly _shouldViewBeAlive = isOrWasTrue(this, reader => this._state.read(reader)?.placeholder !== undefined);\n\n\tprivate readonly _view = derivedWithStore((reader, store) => {\n\t\tif (!this._shouldViewBeAlive.read(reader)) { return; }\n\n\t\tconst element = h('div.editorPlaceholder');\n\n\t\tstore.add(autorun(reader => {\n\t\t\tconst data = this._state.read(reader);\n\t\t\tconst shouldBeVisibile = data?.placeholder !== undefined;\n\t\t\telement.root.style.display = shouldBeVisibile ? 'block' : 'none';\n\t\t\telement.root.innerText = data?.placeholder ?? '';\n\t\t}));\n\t\tstore.add(autorun(reader => {\n\t\t\tconst info = this._editorObs.layoutInfo.read(reader);\n\t\t\telement.root.style.left = `${info.contentLeft}px`;\n\t\t\telement.root.style.width = (info.contentWidth - info.verticalScrollbarWidth) + 'px';\n\t\t\telement.root.style.top = `${this._editor.getTopForLineNumber(0)}px`;\n\t\t}));\n\t\tstore.add(autorun(reader => {\n\t\t\telement.root.style.fontFamily = this._editorObs.getOption(EditorOption.fontFamily).read(reader);\n\t\t\telement.root.style.fontSize = this._editorObs.getOption(EditorOption.fontSize).read(reader) + 'px';\n\t\t\telement.root.style.lineHeight = this._editorObs.getOption(EditorOption.lineHeight).read(reader) + 'px';\n\t\t}));\n\t\tstore.add(this._editorObs.createOverlayWidget({\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: constObservable(0),\n\t\t\tposition: constObservable(null),\n\t\t\tdomNode: element.root,\n\t\t}));\n\t});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t) {\n\t\tsuper();\n\t\tthis._view.recomputeInitiallyAndOnChange(this._store);\n\t}\n}\n\nfunction isOrWasTrue(owner: DebugOwner, fn: (reader: IReader) => boolean): IObservable<boolean> {\n\treturn derivedObservableWithCache<boolean>(owner, (reader, lastValue) => {\n\t\tif (lastValue === true) { return true; }\n\t\treturn fn(reader);\n\t});\n}\n"],
  "mappings": ";;AAKA,SAAS,SAAS;AAClB,SAAS,wBAAwB;AACjC,SAAS,kBAAkB;AAC3B,SAAS,SAAS,iBAAiB,YAAY,4BAA4B,aAAa,kBAAkB,aAAa,eAAe;AACtI,SAAS,mBAAmB;AAC5B,SAAS,4BAA4B;AACrC,SAAS,oBAAoB;AAC7B,SAAS,2BAA2B;AAK7B,MAAM,oCAAoC,WAA0C;AAAA,EAiD1F,YACkB,SAChB;AACD,UAAM;AAFW;AAGjB,SAAK,MAAM,8BAA8B,KAAK,MAAM;AAAA,EACrD;AAAA,EAvED,OAiB2F;AAAA;AAAA;AAAA,EAC1F,OAAc,IAAI,QAAkD;AACnE,WAAO,OAAO,gBAA6C,4BAA4B,EAAE;AAAA,EAC1F;AAAA,EAEA,OAAuB,KAAK;AAAA,EACX,aAAa,qBAAqB,KAAK,OAAO;AAAA,EAE9C,mBAAmB,KAAK,WAAW,UAAU,aAAa,WAAW;AAAA,EAErE,SAAS,YAAiD,EAAE,OAAO,MAAM,UAAU,iBAAiB,GAAG,YAAU;AACjI,UAAM,IAAI,KAAK,iBAAiB,KAAK,MAAM;AAC3C,QAAI,CAAC,GAAG;AAAE,aAAO;AAAA,IAAW;AAC5B,QAAI,CAAC,KAAK,WAAW,aAAa,KAAK,MAAM,GAAG;AAAE,aAAO;AAAA,IAAW;AACpE,WAAO,EAAE,aAAa,EAAE;AAAA,EACzB,CAAC;AAAA,EAEgB,qBAAqB,YAAY,MAAM,YAAU,KAAK,OAAO,KAAK,MAAM,GAAG,gBAAgB,MAAS;AAAA,EAEpG,QAAQ,iBAAiB,CAAC,QAAQ,UAAU;AAC5D,QAAI,CAAC,KAAK,mBAAmB,KAAK,MAAM,GAAG;AAAE;AAAA,IAAQ;AAErD,UAAM,UAAU,EAAE,uBAAuB;AAEzC,UAAM,IAAI,QAAQ,CAAAA,YAAU;AAC3B,YAAM,OAAO,KAAK,OAAO,KAAKA,OAAM;AACpC,YAAM,mBAAmB,MAAM,gBAAgB;AAC/C,cAAQ,KAAK,MAAM,UAAU,mBAAmB,UAAU;AAC1D,cAAQ,KAAK,YAAY,MAAM,eAAe;AAAA,IAC/C,CAAC,CAAC;AACF,UAAM,IAAI,QAAQ,CAAAA,YAAU;AAC3B,YAAM,OAAO,KAAK,WAAW,WAAW,KAAKA,OAAM;AACnD,cAAQ,KAAK,MAAM,OAAO,GAAG,KAAK,WAAW;AAC7C,cAAQ,KAAK,MAAM,QAAS,KAAK,eAAe,KAAK,yBAA0B;AAC/E,cAAQ,KAAK,MAAM,MAAM,GAAG,KAAK,QAAQ,oBAAoB,CAAC,CAAC;AAAA,IAChE,CAAC,CAAC;AACF,UAAM,IAAI,QAAQ,CAAAA,YAAU;AAC3B,cAAQ,KAAK,MAAM,aAAa,KAAK,WAAW,UAAU,aAAa,UAAU,EAAE,KAAKA,OAAM;AAC9F,cAAQ,KAAK,MAAM,WAAW,KAAK,WAAW,UAAU,aAAa,QAAQ,EAAE,KAAKA,OAAM,IAAI;AAC9F,cAAQ,KAAK,MAAM,aAAa,KAAK,WAAW,UAAU,aAAa,UAAU,EAAE,KAAKA,OAAM,IAAI;AAAA,IACnG,CAAC,CAAC;AACF,UAAM,IAAI,KAAK,WAAW,oBAAoB;AAAA,MAC7C,qBAAqB;AAAA,MACrB,qBAAqB,gBAAgB,CAAC;AAAA,MACtC,UAAU,gBAAgB,IAAI;AAAA,MAC9B,SAAS,QAAQ;AAAA,IAClB,CAAC,CAAC;AAAA,EACH,CAAC;AAQF;AAEA,SAAS,YAAY,OAAmB,IAAwD;AAC/F,SAAO,2BAAoC,OAAO,CAAC,QAAQ,cAAc;AACxE,QAAI,cAAc,MAAM;AAAE,aAAO;AAAA,IAAM;AACvC,WAAO,GAAG,MAAM;AAAA,EACjB,CAAC;AACF;AALS;",
  "names": ["reader"]
}
