{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/codelens/browser/codelensController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { CancelablePromise, createCancelablePromise, disposableTimeout, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { IActiveCodeEditor, ICodeEditor, IViewZoneChangeAccessor, MouseTargetType } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorContributionInstantiation, registerEditorAction, registerEditorContribution, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorOption, EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IModelDecorationsChangeAccessor } from '../../../common/model.js';\nimport { CodeLens, Command } from '../../../common/languages.js';\nimport { CodeLensItem, CodeLensModel, getCodeLensModel } from './codelens.js';\nimport { ICodeLensCache } from './codeLensCache.js';\nimport { CodeLensHelper, CodeLensWidget } from './codelensWidget.js';\nimport { localize } from '../../../../nls.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IFeatureDebounceInformation, ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\n\nexport class CodeLensContribution implements IEditorContribution {\n\n\tstatic readonly ID: string = 'css.editor.codeLens';\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _localToDispose = new DisposableStore();\n\n\tprivate readonly _lenses: CodeLensWidget[] = [];\n\n\tprivate readonly _provideCodeLensDebounce: IFeatureDebounceInformation;\n\tprivate readonly _resolveCodeLensesDebounce: IFeatureDebounceInformation;\n\tprivate readonly _resolveCodeLensesScheduler: RunOnceScheduler;\n\n\tprivate _getCodeLensModelPromise: CancelablePromise<CodeLensModel> | undefined;\n\tprivate readonly _oldCodeLensModels = new DisposableStore();\n\tprivate _currentCodeLensModel: CodeLensModel | undefined;\n\tprivate _resolveCodeLensesPromise: CancelablePromise<any> | undefined;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILanguageFeatureDebounceService debounceService: ILanguageFeatureDebounceService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@ICodeLensCache private readonly _codeLensCache: ICodeLensCache\n\t) {\n\t\tthis._provideCodeLensDebounce = debounceService.for(_languageFeaturesService.codeLensProvider, 'CodeLensProvide', { min: 250 });\n\t\tthis._resolveCodeLensesDebounce = debounceService.for(_languageFeaturesService.codeLensProvider, 'CodeLensResolve', { min: 250, salt: 'resolve' });\n\t\tthis._resolveCodeLensesScheduler = new RunOnceScheduler(() => this._resolveCodeLensesInViewport(), this._resolveCodeLensesDebounce.default());\n\n\t\tthis._disposables.add(this._editor.onDidChangeModel(() => this._onModelChange()));\n\t\tthis._disposables.add(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\n\t\tthis._disposables.add(this._editor.onDidChangeConfiguration((e) => {\n\t\t\tif (e.hasChanged(EditorOption.fontInfo) || e.hasChanged(EditorOption.codeLensFontSize) || e.hasChanged(EditorOption.codeLensFontFamily)) {\n\t\t\t\tthis._updateLensStyle();\n\t\t\t}\n\t\t\tif (e.hasChanged(EditorOption.codeLens)) {\n\t\t\t\tthis._onModelChange();\n\t\t\t}\n\t\t}));\n\t\tthis._disposables.add(_languageFeaturesService.codeLensProvider.onDidChange(this._onModelChange, this));\n\t\tthis._onModelChange();\n\n\t\tthis._updateLensStyle();\n\t}\n\n\tdispose(): void {\n\t\tthis._localDispose();\n\t\tthis._disposables.dispose();\n\t\tthis._oldCodeLensModels.dispose();\n\t\tthis._currentCodeLensModel?.dispose();\n\t}\n\n\tprivate _getLayoutInfo() {\n\t\tconst lineHeightFactor = Math.max(1.3, this._editor.getOption(EditorOption.lineHeight) / this._editor.getOption(EditorOption.fontSize));\n\t\tlet fontSize = this._editor.getOption(EditorOption.codeLensFontSize);\n\t\tif (!fontSize || fontSize < 5) {\n\t\t\tfontSize = (this._editor.getOption(EditorOption.fontSize) * .9) | 0;\n\t\t}\n\t\treturn {\n\t\t\tfontSize,\n\t\t\tcodeLensHeight: (fontSize * lineHeightFactor) | 0,\n\t\t};\n\t}\n\n\tprivate _updateLensStyle(): void {\n\n\t\tconst { codeLensHeight, fontSize } = this._getLayoutInfo();\n\t\tconst fontFamily = this._editor.getOption(EditorOption.codeLensFontFamily);\n\t\tconst editorFontInfo = this._editor.getOption(EditorOption.fontInfo);\n\n\t\tconst { style } = this._editor.getContainerDomNode();\n\n\t\tstyle.setProperty('--vscode-editorCodeLens-lineHeight', `${codeLensHeight}px`);\n\t\tstyle.setProperty('--vscode-editorCodeLens-fontSize', `${fontSize}px`);\n\t\tstyle.setProperty('--vscode-editorCodeLens-fontFeatureSettings', editorFontInfo.fontFeatureSettings);\n\n\t\tif (fontFamily) {\n\t\t\tstyle.setProperty('--vscode-editorCodeLens-fontFamily', fontFamily);\n\t\t\tstyle.setProperty('--vscode-editorCodeLens-fontFamilyDefault', EDITOR_FONT_DEFAULTS.fontFamily);\n\t\t}\n\n\t\t//\n\t\tthis._editor.changeViewZones(accessor => {\n\t\t\tfor (const lens of this._lenses) {\n\t\t\t\tlens.updateHeight(codeLensHeight, accessor);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _localDispose(): void {\n\t\tthis._getCodeLensModelPromise?.cancel();\n\t\tthis._getCodeLensModelPromise = undefined;\n\t\tthis._resolveCodeLensesPromise?.cancel();\n\t\tthis._resolveCodeLensesPromise = undefined;\n\t\tthis._localToDispose.clear();\n\t\tthis._oldCodeLensModels.clear();\n\t\tthis._currentCodeLensModel?.dispose();\n\t}\n\n\tprivate _onModelChange(): void {\n\n\t\tthis._localDispose();\n\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._editor.getOption(EditorOption.codeLens) || model.isTooLargeForTokenization()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cachedLenses = this._codeLensCache.get(model);\n\t\tif (cachedLenses) {\n\t\t\tthis._renderCodeLensSymbols(cachedLenses);\n\t\t}\n\n\t\tif (!this._languageFeaturesService.codeLensProvider.has(model)) {\n\t\t\t// no provider -> return but check with\n\t\t\t// cached lenses. they expire after 30 seconds\n\t\t\tif (cachedLenses) {\n\t\t\t\tdisposableTimeout(() => {\n\t\t\t\t\tconst cachedLensesNow = this._codeLensCache.get(model);\n\t\t\t\t\tif (cachedLenses === cachedLensesNow) {\n\t\t\t\t\t\tthis._codeLensCache.delete(model);\n\t\t\t\t\t\tthis._onModelChange();\n\t\t\t\t\t}\n\t\t\t\t}, 30 * 1000, this._localToDispose);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const provider of this._languageFeaturesService.codeLensProvider.all(model)) {\n\t\t\tif (typeof provider.onDidChange === 'function') {\n\t\t\t\tconst registration = provider.onDidChange(() => scheduler.schedule());\n\t\t\t\tthis._localToDispose.add(registration);\n\t\t\t}\n\t\t}\n\n\t\tconst scheduler = new RunOnceScheduler(() => {\n\t\t\tconst t1 = Date.now();\n\n\t\t\tthis._getCodeLensModelPromise?.cancel();\n\t\t\tthis._getCodeLensModelPromise = createCancelablePromise(token => getCodeLensModel(this._languageFeaturesService.codeLensProvider, model, token));\n\n\t\t\tthis._getCodeLensModelPromise.then(result => {\n\t\t\t\tif (this._currentCodeLensModel) {\n\t\t\t\t\tthis._oldCodeLensModels.add(this._currentCodeLensModel);\n\t\t\t\t}\n\t\t\t\tthis._currentCodeLensModel = result;\n\n\t\t\t\t// cache model to reduce flicker\n\t\t\t\tthis._codeLensCache.put(model, result);\n\n\t\t\t\t// update moving average\n\t\t\t\tconst newDelay = this._provideCodeLensDebounce.update(model, Date.now() - t1);\n\t\t\t\tscheduler.delay = newDelay;\n\n\t\t\t\t// render lenses\n\t\t\t\tthis._renderCodeLensSymbols(result);\n\t\t\t\t// dom.scheduleAtNextAnimationFrame(() => this._resolveCodeLensesInViewport());\n\t\t\t\tthis._resolveCodeLensesInViewportSoon();\n\t\t\t}, onUnexpectedError);\n\n\t\t}, this._provideCodeLensDebounce.get(model));\n\n\t\tthis._localToDispose.add(scheduler);\n\t\tthis._localToDispose.add(toDisposable(() => this._resolveCodeLensesScheduler.cancel()));\n\t\tthis._localToDispose.add(this._editor.onDidChangeModelContent(() => {\n\t\t\tthis._editor.changeDecorations(decorationsAccessor => {\n\t\t\t\tthis._editor.changeViewZones(viewZonesAccessor => {\n\t\t\t\t\tconst toDispose: CodeLensWidget[] = [];\n\t\t\t\t\tlet lastLensLineNumber: number = -1;\n\n\t\t\t\t\tthis._lenses.forEach((lens) => {\n\t\t\t\t\t\tif (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\n\t\t\t\t\t\t\t// invalid -> lens collapsed, attach range doesn't exist anymore\n\t\t\t\t\t\t\t// line_number -> lenses should never be on the same line\n\t\t\t\t\t\t\ttoDispose.push(lens);\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlens.update(viewZonesAccessor);\n\t\t\t\t\t\t\tlastLensLineNumber = lens.getLineNumber();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tconst helper = new CodeLensHelper();\n\t\t\t\t\ttoDispose.forEach((l) => {\n\t\t\t\t\t\tl.dispose(helper, viewZonesAccessor);\n\t\t\t\t\t\tthis._lenses.splice(this._lenses.indexOf(l), 1);\n\t\t\t\t\t});\n\t\t\t\t\thelper.commit(decorationsAccessor);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Ask for all references again\n\t\t\tscheduler.schedule();\n\n\t\t\t// Cancel pending and active resolve requests\n\t\t\tthis._resolveCodeLensesScheduler.cancel();\n\t\t\tthis._resolveCodeLensesPromise?.cancel();\n\t\t\tthis._resolveCodeLensesPromise = undefined;\n\t\t}));\n\t\tthis._localToDispose.add(this._editor.onDidFocusEditorText(() => {\n\t\t\tscheduler.schedule();\n\t\t}));\n\t\tthis._localToDispose.add(this._editor.onDidBlurEditorText(() => {\n\t\t\tscheduler.cancel();\n\t\t}));\n\t\tthis._localToDispose.add(this._editor.onDidScrollChange(e => {\n\t\t\tif (e.scrollTopChanged && this._lenses.length > 0) {\n\t\t\t\tthis._resolveCodeLensesInViewportSoon();\n\t\t\t}\n\t\t}));\n\t\tthis._localToDispose.add(this._editor.onDidLayoutChange(() => {\n\t\t\tthis._resolveCodeLensesInViewportSoon();\n\t\t}));\n\t\tthis._localToDispose.add(toDisposable(() => {\n\t\t\tif (this._editor.getModel()) {\n\t\t\t\tconst scrollState = StableEditorScrollState.capture(this._editor);\n\t\t\t\tthis._editor.changeDecorations(decorationsAccessor => {\n\t\t\t\t\tthis._editor.changeViewZones(viewZonesAccessor => {\n\t\t\t\t\t\tthis._disposeAllLenses(decorationsAccessor, viewZonesAccessor);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tscrollState.restore(this._editor);\n\t\t\t} else {\n\t\t\t\t// No accessors available\n\t\t\t\tthis._disposeAllLenses(undefined, undefined);\n\t\t\t}\n\t\t}));\n\t\tthis._localToDispose.add(this._editor.onMouseDown(e => {\n\t\t\tif (e.target.type !== MouseTargetType.CONTENT_WIDGET) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet target = e.target.element;\n\t\t\tif (target?.tagName === 'SPAN') {\n\t\t\t\ttarget = target.parentElement;\n\t\t\t}\n\t\t\tif (target?.tagName === 'A') {\n\t\t\t\tfor (const lens of this._lenses) {\n\t\t\t\t\tconst command = lens.getCommand(target as HTMLLinkElement);\n\t\t\t\t\tif (command) {\n\t\t\t\t\t\tthis._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tscheduler.schedule();\n\t}\n\n\tprivate _disposeAllLenses(decChangeAccessor: IModelDecorationsChangeAccessor | undefined, viewZoneChangeAccessor: IViewZoneChangeAccessor | undefined): void {\n\t\tconst helper = new CodeLensHelper();\n\t\tfor (const lens of this._lenses) {\n\t\t\tlens.dispose(helper, viewZoneChangeAccessor);\n\t\t}\n\t\tif (decChangeAccessor) {\n\t\t\thelper.commit(decChangeAccessor);\n\t\t}\n\t\tthis._lenses.length = 0;\n\t}\n\n\tprivate _renderCodeLensSymbols(symbols: CodeLensModel): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst maxLineNumber = this._editor.getModel().getLineCount();\n\t\tconst groups: CodeLensItem[][] = [];\n\t\tlet lastGroup: CodeLensItem[] | undefined;\n\n\t\tfor (const symbol of symbols.lenses) {\n\t\t\tconst line = symbol.symbol.range.startLineNumber;\n\t\t\tif (line < 1 || line > maxLineNumber) {\n\t\t\t\t// invalid code lens\n\t\t\t\tcontinue;\n\t\t\t} else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\n\t\t\t\t// on same line as previous\n\t\t\t\tlastGroup.push(symbol);\n\t\t\t} else {\n\t\t\t\t// on later line as previous\n\t\t\t\tlastGroup = [symbol];\n\t\t\t\tgroups.push(lastGroup);\n\t\t\t}\n\t\t}\n\n\t\tif (!groups.length && !this._lenses.length) {\n\t\t\t// Nothing to change\n\t\t\treturn;\n\t\t}\n\n\t\tconst scrollState = StableEditorScrollState.capture(this._editor);\n\t\tconst layoutInfo = this._getLayoutInfo();\n\n\t\tthis._editor.changeDecorations(decorationsAccessor => {\n\t\t\tthis._editor.changeViewZones(viewZoneAccessor => {\n\n\t\t\t\tconst helper = new CodeLensHelper();\n\t\t\t\tlet codeLensIndex = 0;\n\t\t\t\tlet groupsIndex = 0;\n\n\t\t\t\twhile (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\n\n\t\t\t\t\tconst symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\n\t\t\t\t\tconst codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\n\n\t\t\t\t\tif (codeLensLineNumber < symbolsLineNumber) {\n\t\t\t\t\t\tthis._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n\t\t\t\t\t\tthis._lenses.splice(codeLensIndex, 1);\n\t\t\t\t\t} else if (codeLensLineNumber === symbolsLineNumber) {\n\t\t\t\t\t\tthis._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\n\t\t\t\t\t\tgroupsIndex++;\n\t\t\t\t\t\tcodeLensIndex++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._lenses.splice(codeLensIndex, 0, new CodeLensWidget(groups[groupsIndex], <IActiveCodeEditor>this._editor, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n\t\t\t\t\t\tcodeLensIndex++;\n\t\t\t\t\t\tgroupsIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Delete extra code lenses\n\t\t\t\twhile (codeLensIndex < this._lenses.length) {\n\t\t\t\t\tthis._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n\t\t\t\t\tthis._lenses.splice(codeLensIndex, 1);\n\t\t\t\t}\n\n\t\t\t\t// Create extra symbols\n\t\t\t\twhile (groupsIndex < groups.length) {\n\t\t\t\t\tthis._lenses.push(new CodeLensWidget(groups[groupsIndex], <IActiveCodeEditor>this._editor, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n\t\t\t\t\tgroupsIndex++;\n\t\t\t\t}\n\n\t\t\t\thelper.commit(decorationsAccessor);\n\t\t\t});\n\t\t});\n\n\t\tscrollState.restore(this._editor);\n\t}\n\n\tprivate _resolveCodeLensesInViewportSoon(): void {\n\t\tconst model = this._editor.getModel();\n\t\tif (model) {\n\t\t\tthis._resolveCodeLensesScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate _resolveCodeLensesInViewport(): void {\n\n\t\tthis._resolveCodeLensesPromise?.cancel();\n\t\tthis._resolveCodeLensesPromise = undefined;\n\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst toResolve: CodeLensItem[][] = [];\n\t\tconst lenses: CodeLensWidget[] = [];\n\t\tthis._lenses.forEach((lens) => {\n\t\t\tconst request = lens.computeIfNecessary(model);\n\t\t\tif (request) {\n\t\t\t\ttoResolve.push(request);\n\t\t\t\tlenses.push(lens);\n\t\t\t}\n\t\t});\n\n\t\tif (toResolve.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst t1 = Date.now();\n\n\t\tconst resolvePromise = createCancelablePromise(token => {\n\n\t\t\tconst promises = toResolve.map((request, i) => {\n\n\t\t\t\tconst resolvedSymbols = new Array<CodeLens | undefined | null>(request.length);\n\t\t\t\tconst promises = request.map((request, i) => {\n\t\t\t\t\tif (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\n\t\t\t\t\t\treturn Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\n\t\t\t\t\t\t\tresolvedSymbols[i] = symbol;\n\t\t\t\t\t\t}, onUnexpectedExternalError);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolvedSymbols[i] = request.symbol;\n\t\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn Promise.all(promises).then(() => {\n\t\t\t\t\tif (!token.isCancellationRequested && !lenses[i].isDisposed()) {\n\t\t\t\t\t\tlenses[i].updateCommands(resolvedSymbols);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn Promise.all(promises);\n\t\t});\n\t\tthis._resolveCodeLensesPromise = resolvePromise;\n\n\t\tthis._resolveCodeLensesPromise.then(() => {\n\n\t\t\t// update moving average\n\t\t\tconst newDelay = this._resolveCodeLensesDebounce.update(model, Date.now() - t1);\n\t\t\tthis._resolveCodeLensesScheduler.delay = newDelay;\n\n\t\t\tif (this._currentCodeLensModel) { // update the cached state with new resolved items\n\t\t\t\tthis._codeLensCache.put(model, this._currentCodeLensModel);\n\t\t\t}\n\t\t\tthis._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model\n\t\t\tif (resolvePromise === this._resolveCodeLensesPromise) {\n\t\t\t\tthis._resolveCodeLensesPromise = undefined;\n\t\t\t}\n\t\t}, err => {\n\t\t\tonUnexpectedError(err); // can also be cancellation!\n\t\t\tif (resolvePromise === this._resolveCodeLensesPromise) {\n\t\t\t\tthis._resolveCodeLensesPromise = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tasync getModel(): Promise<CodeLensModel | undefined> {\n\t\tawait this._getCodeLensModelPromise;\n\t\tawait this._resolveCodeLensesPromise;\n\t\treturn !this._currentCodeLensModel?.isDisposed\n\t\t\t? this._currentCodeLensModel\n\t\t\t: undefined;\n\t}\n}\n\nregisterEditorContribution(CodeLensContribution.ID, CodeLensContribution, EditorContributionInstantiation.AfterFirstRender);\n\nregisterEditorAction(class ShowLensesInCurrentLine extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'codelens.showLensesInCurrentLine',\n\t\t\tprecondition: EditorContextKeys.hasCodeLensProvider,\n\t\t\tlabel: localize('showLensOnLine', \"Show CodeLens Commands For Current Line\"),\n\t\t\talias: 'Show CodeLens Commands For Current Line',\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\n\t\tconst lineNumber = editor.getSelection().positionLineNumber;\n\t\tconst codelensController = editor.getContribution<CodeLensContribution>(CodeLensContribution.ID);\n\t\tif (!codelensController) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = await codelensController.getModel();\n\t\tif (!model) {\n\t\t\t// nothing\n\t\t\treturn;\n\t\t}\n\n\t\tconst items: { label: string; command: Command }[] = [];\n\t\tfor (const lens of model.lenses) {\n\t\t\tif (lens.symbol.command && lens.symbol.range.startLineNumber === lineNumber) {\n\t\t\t\titems.push({\n\t\t\t\t\tlabel: lens.symbol.command.title,\n\t\t\t\t\tcommand: lens.symbol.command\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (items.length === 0) {\n\t\t\t// We dont want an empty picker\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = await quickInputService.pick(items, {\n\t\t\tcanPickMany: false,\n\t\t\tplaceHolder: localize('placeHolder', \"Select a command\")\n\t\t});\n\t\tif (!item) {\n\t\t\t// Nothing picked\n\t\t\treturn;\n\t\t}\n\n\t\tlet command = item.command;\n\n\t\tif (model.isDisposed) {\n\t\t\t// try to find the same command again in-case the model has been re-created in the meantime\n\t\t\t// this is a best attempt approach which shouldn't be needed because eager model re-creates\n\t\t\t// shouldn't happen due to focus in/out anymore\n\t\t\tconst newModel = await codelensController.getModel();\n\t\t\tconst newLens = newModel?.lenses.find(lens => lens.symbol.range.startLineNumber === lineNumber && lens.symbol.command?.title === command.title);\n\t\t\tif (!newLens || !newLens.symbol.command) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcommand = newLens.symbol.command;\n\t\t}\n\n\t\ttry {\n\t\t\tawait commandService.executeCommand(command.id, ...(command.arguments || []));\n\t\t} catch (err) {\n\t\t\tnotificationService.error(err);\n\t\t}\n\t}\n});\n"],
  "mappings": "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",
  "names": ["promises", "request", "i"]
}
