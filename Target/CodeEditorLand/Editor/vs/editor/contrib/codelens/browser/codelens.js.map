{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/codelens/browser/codelens.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tillegalArgument,\n\tonUnexpectedExternalError,\n} from \"../../../../base/common/errors.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { assertType } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport type { LanguageFeatureRegistry } from \"../../../common/languageFeatureRegistry.js\";\nimport type {\n\tCodeLens,\n\tCodeLensList,\n\tCodeLensProvider,\n} from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { IModelService } from \"../../../common/services/model.js\";\n\nexport interface CodeLensItem {\n\tsymbol: CodeLens;\n\tprovider: CodeLensProvider;\n}\n\nexport class CodeLensModel {\n\tlenses: CodeLensItem[] = [];\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tget isDisposed(): boolean {\n\t\treturn this._disposables.isDisposed;\n\t}\n\n\tadd(list: CodeLensList, provider: CodeLensProvider): void {\n\t\tthis._disposables.add(list);\n\t\tfor (const symbol of list.lenses) {\n\t\t\tthis.lenses.push({ symbol, provider });\n\t\t}\n\t}\n}\n\nexport async function getCodeLensModel(\n\tregistry: LanguageFeatureRegistry<CodeLensProvider>,\n\tmodel: ITextModel,\n\ttoken: CancellationToken,\n): Promise<CodeLensModel> {\n\tconst provider = registry.ordered(model);\n\tconst providerRanks = new Map<CodeLensProvider, number>();\n\tconst result = new CodeLensModel();\n\n\tconst promises = provider.map(async (provider, i) => {\n\t\tproviderRanks.set(provider, i);\n\n\t\ttry {\n\t\t\tconst list = await Promise.resolve(\n\t\t\t\tprovider.provideCodeLenses(model, token),\n\t\t\t);\n\t\t\tif (list) {\n\t\t\t\tresult.add(list, provider);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tonUnexpectedExternalError(err);\n\t\t}\n\t});\n\n\tawait Promise.all(promises);\n\n\tresult.lenses = result.lenses.sort((a, b) => {\n\t\t// sort by lineNumber, provider-rank, and column\n\t\tif (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) {\n\t\t\treturn -1;\n\t\t} else if (\n\t\t\ta.symbol.range.startLineNumber > b.symbol.range.startLineNumber\n\t\t) {\n\t\t\treturn 1;\n\t\t} else if (\n\t\t\tproviderRanks.get(a.provider)! < providerRanks.get(b.provider)!\n\t\t) {\n\t\t\treturn -1;\n\t\t} else if (\n\t\t\tproviderRanks.get(a.provider)! > providerRanks.get(b.provider)!\n\t\t) {\n\t\t\treturn 1;\n\t\t} else if (a.symbol.range.startColumn < b.symbol.range.startColumn) {\n\t\t\treturn -1;\n\t\t} else if (a.symbol.range.startColumn > b.symbol.range.startColumn) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t});\n\treturn result;\n}\n\nCommandsRegistry.registerCommand(\n\t\"_executeCodeLensProvider\",\n\t(accessor, ...args: [URI, number | undefined | null]) => {\n\t\tlet [uri, itemResolveCount] = args;\n\t\tassertType(URI.isUri(uri));\n\t\tassertType(typeof itemResolveCount === \"number\" || !itemResolveCount);\n\n\t\tconst { codeLensProvider } = accessor.get(ILanguageFeaturesService);\n\n\t\tconst model = accessor.get(IModelService).getModel(uri);\n\t\tif (!model) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tconst result: CodeLens[] = [];\n\t\tconst disposables = new DisposableStore();\n\t\treturn getCodeLensModel(codeLensProvider, model, CancellationToken.None)\n\t\t\t.then((value) => {\n\t\t\t\tdisposables.add(value);\n\t\t\t\tconst resolve: Promise<any>[] = [];\n\n\t\t\t\tfor (const item of value.lenses) {\n\t\t\t\t\tif (\n\t\t\t\t\t\titemResolveCount === undefined ||\n\t\t\t\t\t\titemResolveCount === null ||\n\t\t\t\t\t\tBoolean(item.symbol.command)\n\t\t\t\t\t) {\n\t\t\t\t\t\tresult.push(item.symbol);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\titemResolveCount-- > 0 &&\n\t\t\t\t\t\titem.provider.resolveCodeLens\n\t\t\t\t\t) {\n\t\t\t\t\t\tresolve.push(\n\t\t\t\t\t\t\tPromise.resolve(\n\t\t\t\t\t\t\t\titem.provider.resolveCodeLens(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\titem.symbol,\n\t\t\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t).then((symbol) =>\n\t\t\t\t\t\t\t\tresult.push(symbol || item.symbol),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all(resolve);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn result;\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\t// make sure to return results, then (on next tick)\n\t\t\t\t// dispose the results\n\t\t\t\tsetTimeout(() => disposables.dispose(), 100);\n\t\t\t});\n\t},\n);\n"],
  "mappings": "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",
  "names": ["provider"]
}
