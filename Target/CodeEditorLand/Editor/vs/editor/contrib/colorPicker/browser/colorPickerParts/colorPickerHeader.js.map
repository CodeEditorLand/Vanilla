{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerHeader.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"../colorPicker.css\";\nimport * as dom from \"../../../../../base/browser/dom.js\";\nimport { Color } from \"../../../../../base/common/color.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport { editorHoverBackground } from \"../../../../../platform/theme/common/colorRegistry.js\";\nimport type { IThemeService } from \"../../../../../platform/theme/common/themeService.js\";\nimport type { ColorPickerModel } from \"../colorPickerModel.js\";\nimport { CloseButton } from \"./colorPickerCloseButton.js\";\n\nconst $ = dom.$;\n\nexport class ColorPickerHeader extends Disposable {\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly _pickedColorNode: HTMLElement;\n\tprivate readonly _pickedColorPresentation: HTMLElement;\n\tprivate readonly _originalColorNode: HTMLElement;\n\tprivate readonly _closeButton: CloseButton | null = null;\n\tprivate backgroundColor: Color;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly model: ColorPickerModel,\n\t\tthemeService: IThemeService,\n\t\tprivate showingStandaloneColorPicker = false,\n\t) {\n\t\tsuper();\n\n\t\tthis._domNode = $(\".colorpicker-header\");\n\t\tdom.append(container, this._domNode);\n\n\t\tthis._pickedColorNode = dom.append(this._domNode, $(\".picked-color\"));\n\t\tdom.append(this._pickedColorNode, $(\"span.codicon.codicon-color-mode\"));\n\t\tthis._pickedColorPresentation = dom.append(\n\t\t\tthis._pickedColorNode,\n\t\t\tdocument.createElement(\"span\"),\n\t\t);\n\t\tthis._pickedColorPresentation.classList.add(\n\t\t\t\"picked-color-presentation\",\n\t\t);\n\n\t\tconst tooltip = localize(\n\t\t\t\"clickToToggleColorOptions\",\n\t\t\t\"Click to toggle color options (rgb/hsl/hex)\",\n\t\t);\n\t\tthis._pickedColorNode.setAttribute(\"title\", tooltip);\n\n\t\tthis._originalColorNode = dom.append(\n\t\t\tthis._domNode,\n\t\t\t$(\".original-color\"),\n\t\t);\n\t\tthis._originalColorNode.style.backgroundColor =\n\t\t\tColor.Format.CSS.format(this.model.originalColor) || \"\";\n\n\t\tthis.backgroundColor =\n\t\t\tthemeService.getColorTheme().getColor(editorHoverBackground) ||\n\t\t\tColor.white;\n\t\tthis._register(\n\t\t\tthemeService.onDidColorThemeChange((theme) => {\n\t\t\t\tthis.backgroundColor =\n\t\t\t\t\ttheme.getColor(editorHoverBackground) || Color.white;\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._pickedColorNode,\n\t\t\t\tdom.EventType.CLICK,\n\t\t\t\t() => this.model.selectNextColorPresentation(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._originalColorNode,\n\t\t\t\tdom.EventType.CLICK,\n\t\t\t\t() => {\n\t\t\t\t\tthis.model.color = this.model.originalColor;\n\t\t\t\t\tthis.model.flushColor();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(model.onDidChangeColor(this.onDidChangeColor, this));\n\t\tthis._register(\n\t\t\tmodel.onDidChangePresentation(this.onDidChangePresentation, this),\n\t\t);\n\t\tthis._pickedColorNode.style.backgroundColor =\n\t\t\tColor.Format.CSS.format(model.color) || \"\";\n\t\tthis._pickedColorNode.classList.toggle(\n\t\t\t\"light\",\n\t\t\tmodel.color.rgba.a < 0.5\n\t\t\t\t? this.backgroundColor.isLighter()\n\t\t\t\t: model.color.isLighter(),\n\t\t);\n\n\t\tthis.onDidChangeColor(this.model.color);\n\n\t\t// When the color picker widget is a standalone color picker widget, then add a close button\n\t\tif (this.showingStandaloneColorPicker) {\n\t\t\tthis._domNode.classList.add(\"standalone-colorpicker\");\n\t\t\tthis._closeButton = this._register(new CloseButton(this._domNode));\n\t\t}\n\t}\n\n\tpublic get domNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tpublic get closeButton(): CloseButton | null {\n\t\treturn this._closeButton;\n\t}\n\n\tpublic get pickedColorNode(): HTMLElement {\n\t\treturn this._pickedColorNode;\n\t}\n\n\tpublic get originalColorNode(): HTMLElement {\n\t\treturn this._originalColorNode;\n\t}\n\n\tprivate onDidChangeColor(color: Color): void {\n\t\tthis._pickedColorNode.style.backgroundColor =\n\t\t\tColor.Format.CSS.format(color) || \"\";\n\t\tthis._pickedColorNode.classList.toggle(\n\t\t\t\"light\",\n\t\t\tcolor.rgba.a < 0.5\n\t\t\t\t? this.backgroundColor.isLighter()\n\t\t\t\t: color.isLighter(),\n\t\t);\n\t\tthis.onDidChangePresentation();\n\t}\n\n\tprivate onDidChangePresentation(): void {\n\t\tthis._pickedColorPresentation.textContent = this.model.presentation\n\t\t\t? this.model.presentation.label\n\t\t\t: \"\";\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
