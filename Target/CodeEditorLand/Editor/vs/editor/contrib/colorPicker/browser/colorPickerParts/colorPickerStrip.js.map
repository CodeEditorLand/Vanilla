{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerStrip.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport '../colorPicker.css';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../../../../base/browser/globalPointerMoveMonitor.js';\nimport { Color, RGBA } from '../../../../../base/common/color.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\n\nconst $ = dom.$;\n\nexport abstract class Strip extends Disposable {\n\n\tprotected domNode: HTMLElement;\n\tprotected overlay: HTMLElement;\n\tprotected slider: HTMLElement;\n\tprivate height!: number;\n\n\tprivate readonly _onDidChange = new Emitter<number>();\n\treadonly onDidChange: Event<number> = this._onDidChange.event;\n\n\tprivate readonly _onColorFlushed = new Emitter<void>();\n\treadonly onColorFlushed: Event<void> = this._onColorFlushed.event;\n\n\tconstructor(container: HTMLElement, protected model: ColorPickerModel, showingStandaloneColorPicker: boolean = false) {\n\t\tsuper();\n\t\tif (showingStandaloneColorPicker) {\n\t\t\tthis.domNode = dom.append(container, $('.standalone-strip'));\n\t\t\tthis.overlay = dom.append(this.domNode, $('.standalone-overlay'));\n\t\t} else {\n\t\t\tthis.domNode = dom.append(container, $('.strip'));\n\t\t\tthis.overlay = dom.append(this.domNode, $('.overlay'));\n\t\t}\n\t\tthis.slider = dom.append(this.domNode, $('.slider'));\n\t\tthis.slider.style.top = `0px`;\n\n\t\tthis._register(dom.addDisposableListener(this.domNode, dom.EventType.POINTER_DOWN, e => this.onPointerDown(e)));\n\t\tthis._register(model.onDidChangeColor(this.onDidChangeColor, this));\n\t\tthis.layout();\n\t}\n\n\tlayout(): void {\n\t\tthis.height = this.domNode.offsetHeight - this.slider.offsetHeight;\n\n\t\tconst value = this.getValue(this.model.color);\n\t\tthis.updateSliderPosition(value);\n\t}\n\n\tprotected onDidChangeColor(color: Color) {\n\t\tconst value = this.getValue(color);\n\t\tthis.updateSliderPosition(value);\n\t}\n\n\tprivate onPointerDown(e: PointerEvent): void {\n\t\tif (!e.target || !(e.target instanceof Element)) {\n\t\t\treturn;\n\t\t}\n\t\tconst monitor = this._register(new GlobalPointerMoveMonitor());\n\t\tconst origin = dom.getDomNodePagePosition(this.domNode);\n\t\tthis.domNode.classList.add('grabbing');\n\n\t\tif (e.target !== this.slider) {\n\t\t\tthis.onDidChangeTop(e.offsetY);\n\t\t}\n\n\t\tmonitor.startMonitoring(e.target, e.pointerId, e.buttons, event => this.onDidChangeTop(event.pageY - origin.top), () => null);\n\n\t\tconst pointerUpListener = dom.addDisposableListener(e.target.ownerDocument, dom.EventType.POINTER_UP, () => {\n\t\t\tthis._onColorFlushed.fire();\n\t\t\tpointerUpListener.dispose();\n\t\t\tmonitor.stopMonitoring(true);\n\t\t\tthis.domNode.classList.remove('grabbing');\n\t\t}, true);\n\t}\n\n\tprivate onDidChangeTop(top: number): void {\n\t\tconst value = Math.max(0, Math.min(1, 1 - (top / this.height)));\n\n\t\tthis.updateSliderPosition(value);\n\t\tthis._onDidChange.fire(value);\n\t}\n\n\tprivate updateSliderPosition(value: number): void {\n\t\tthis.slider.style.top = `${(1 - value) * this.height}px`;\n\t}\n\n\tprotected abstract getValue(color: Color): number;\n}\n\nexport class OpacityStrip extends Strip {\n\n\tconstructor(container: HTMLElement, model: ColorPickerModel, showingStandaloneColorPicker: boolean = false) {\n\t\tsuper(container, model, showingStandaloneColorPicker);\n\t\tthis.domNode.classList.add('opacity-strip');\n\n\t\tthis.onDidChangeColor(this.model.color);\n\t}\n\n\tprotected override onDidChangeColor(color: Color): void {\n\t\tsuper.onDidChangeColor(color);\n\t\tconst { r, g, b } = color.rgba;\n\t\tconst opaque = new Color(new RGBA(r, g, b, 1));\n\t\tconst transparent = new Color(new RGBA(r, g, b, 0));\n\n\t\tthis.overlay.style.background = `linear-gradient(to bottom, ${opaque} 0%, ${transparent} 100%)`;\n\t}\n\n\tprotected getValue(color: Color): number {\n\t\treturn color.hsva.a;\n\t}\n}\n\nexport class HueStrip extends Strip {\n\n\tconstructor(container: HTMLElement, model: ColorPickerModel, showingStandaloneColorPicker: boolean = false) {\n\t\tsuper(container, model, showingStandaloneColorPicker);\n\t\tthis.domNode.classList.add('hue-strip');\n\t}\n\n\tprotected getValue(color: Color): number {\n\t\treturn 1 - (color.hsva.h / 360);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
