import{Disposable as n}from"../../../../../base/common/lifecycle.js";import{MouseTargetType as s}from"../../../../browser/editorBrowser.js";import{EditorOption as a}from"../../../../common/config/editorOptions.js";import{Range as d}from"../../../../common/core/range.js";import"../../../../common/editorCommon.js";import{ColorDecorationInjectedTextMarker as c}from"../colorDetector.js";import{ContentHoverController as u}from"../../../hover/browser/contentHoverController.js";import{HoverStartMode as l,HoverStartSource as m}from"../../../hover/browser/hoverOperation.js";class O extends n{constructor(r){super();this._editor=r;this._register(r.onMouseDown(t=>this.onMouseDown(t)))}static ID="editor.contrib.colorContribution";static RECOMPUTE_TIME=1e3;dispose(){super.dispose()}onMouseDown(r){const t=this._editor.getOption(a.colorDecoratorsActivatedOn);if(t!=="click"&&t!=="clickAndHover")return;const o=r.target;if(o.type!==s.CONTENT_TEXT||!o.detail.injectedText||o.detail.injectedText.options.attachedData!==c||!o.range)return;const e=this._editor.getContribution(u.ID);if(e&&!e.isColorPickerVisible){const i=new d(o.range.startLineNumber,o.range.startColumn+1,o.range.endLineNumber,o.range.endColumn+1);e.showContentHover(i,l.Immediate,m.Mouse,!1,!0)}}}export{O as HoverColorPickerContribution};
