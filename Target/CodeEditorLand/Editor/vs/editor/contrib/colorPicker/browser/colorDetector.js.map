{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/colorDetector.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancelablePromise,\n\tTimeoutTimer,\n\tcreateCancelablePromise,\n} from \"../../../../base/common/async.js\";\nimport { RGBA } from \"../../../../base/common/color.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { StopWatch } from \"../../../../base/common/stopwatch.js\";\nimport { noBreakWhitespace } from \"../../../../base/common/strings.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { DynamicCssRules } from \"../../../browser/editorDom.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport type {\n\tIModelDecoration,\n\tIModelDeltaDecoration,\n} from \"../../../common/model.js\";\nimport { ModelDecorationOptions } from \"../../../common/model/textModel.js\";\nimport {\n\ttype IFeatureDebounceInformation,\n\tILanguageFeatureDebounceService,\n} from \"../../../common/services/languageFeatureDebounce.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { type IColorData, getColors } from \"./color.js\";\n\nexport const ColorDecorationInjectedTextMarker = Object.create({});\n\nexport class ColorDetector extends Disposable implements IEditorContribution {\n\tpublic static readonly ID: string = \"editor.contrib.colorDetector\";\n\n\tstatic readonly RECOMPUTE_TIME = 1000; // ms\n\n\tprivate readonly _localToDispose = this._register(new DisposableStore());\n\tprivate _computePromise: CancelablePromise<IColorData[]> | null;\n\tprivate _timeoutTimer: TimeoutTimer | null;\n\tprivate _debounceInformation: IFeatureDebounceInformation;\n\n\tprivate _decorationsIds: string[] = [];\n\tprivate _colorDatas = new Map<string, IColorData>();\n\n\tprivate readonly _colorDecoratorIds =\n\t\tthis._editor.createDecorationsCollection();\n\n\tprivate _isColorDecoratorsEnabled: boolean;\n\tprivate _isDefaultColorDecoratorsEnabled: boolean;\n\n\tprivate readonly _ruleFactory = new DynamicCssRules(this._editor);\n\n\tprivate readonly _decoratorLimitReporter = new DecoratorLimitReporter();\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILanguageFeatureDebounceService\n\t\tlanguageFeatureDebounceService: ILanguageFeatureDebounceService,\n\t) {\n\t\tsuper();\n\t\tthis._debounceInformation = languageFeatureDebounceService.for(\n\t\t\t_languageFeaturesService.colorProvider,\n\t\t\t\"Document Colors\",\n\t\t\t{ min: ColorDetector.RECOMPUTE_TIME },\n\t\t);\n\t\tthis._register(\n\t\t\t_editor.onDidChangeModel(() => {\n\t\t\t\tthis._isColorDecoratorsEnabled = this.isEnabled();\n\t\t\t\tthis.updateColors();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\t_editor.onDidChangeModelLanguage(() => this.updateColors()),\n\t\t);\n\t\tthis._register(\n\t\t\t_languageFeaturesService.colorProvider.onDidChange(() =>\n\t\t\t\tthis.updateColors(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\t_editor.onDidChangeConfiguration((e) => {\n\t\t\t\tconst prevIsEnabled = this._isColorDecoratorsEnabled;\n\t\t\t\tthis._isColorDecoratorsEnabled = this.isEnabled();\n\t\t\t\tthis._isDefaultColorDecoratorsEnabled = this._editor.getOption(\n\t\t\t\t\tEditorOption.defaultColorDecorators,\n\t\t\t\t);\n\t\t\t\tconst updatedColorDecoratorsSetting =\n\t\t\t\t\tprevIsEnabled !== this._isColorDecoratorsEnabled ||\n\t\t\t\t\te.hasChanged(EditorOption.colorDecoratorsLimit);\n\t\t\t\tconst updatedDefaultColorDecoratorsSetting = e.hasChanged(\n\t\t\t\t\tEditorOption.defaultColorDecorators,\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tupdatedColorDecoratorsSetting ||\n\t\t\t\t\tupdatedDefaultColorDecoratorsSetting\n\t\t\t\t) {\n\t\t\t\t\tif (this._isColorDecoratorsEnabled) {\n\t\t\t\t\t\tthis.updateColors();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.removeAllDecorations();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._timeoutTimer = null;\n\t\tthis._computePromise = null;\n\t\tthis._isColorDecoratorsEnabled = this.isEnabled();\n\t\tthis._isDefaultColorDecoratorsEnabled = this._editor.getOption(\n\t\t\tEditorOption.defaultColorDecorators,\n\t\t);\n\t\tthis.updateColors();\n\t}\n\n\tisEnabled(): boolean {\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn false;\n\t\t}\n\t\tconst languageId = model.getLanguageId();\n\t\t// handle deprecated settings. [languageId].colorDecorators.enable\n\t\tconst deprecatedConfig =\n\t\t\tthis._configurationService.getValue(languageId);\n\t\tif (deprecatedConfig && typeof deprecatedConfig === \"object\") {\n\t\t\tconst colorDecorators = (deprecatedConfig as any)[\n\t\t\t\t\"colorDecorators\"\n\t\t\t]; // deprecatedConfig.valueOf('.colorDecorators.enable');\n\t\t\tif (\n\t\t\t\tcolorDecorators &&\n\t\t\t\tcolorDecorators[\"enable\"] !== undefined &&\n\t\t\t\t!colorDecorators[\"enable\"]\n\t\t\t) {\n\t\t\t\treturn colorDecorators[\"enable\"];\n\t\t\t}\n\t\t}\n\n\t\treturn this._editor.getOption(EditorOption.colorDecorators);\n\t}\n\n\tpublic get limitReporter() {\n\t\treturn this._decoratorLimitReporter;\n\t}\n\n\tstatic get(editor: ICodeEditor): ColorDetector | null {\n\t\treturn editor.getContribution<ColorDetector>(this.ID);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.stop();\n\t\tthis.removeAllDecorations();\n\t\tsuper.dispose();\n\t}\n\n\tprivate updateColors(): void {\n\t\tthis.stop();\n\n\t\tif (!this._isColorDecoratorsEnabled) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._editor.getModel();\n\n\t\tif (!model || !this._languageFeaturesService.colorProvider.has(model)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._localToDispose.add(\n\t\t\tthis._editor.onDidChangeModelContent(() => {\n\t\t\t\tif (!this._timeoutTimer) {\n\t\t\t\t\tthis._timeoutTimer = new TimeoutTimer();\n\t\t\t\t\tthis._timeoutTimer.cancelAndSet(() => {\n\t\t\t\t\t\tthis._timeoutTimer = null;\n\t\t\t\t\t\tthis.beginCompute();\n\t\t\t\t\t}, this._debounceInformation.get(model));\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.beginCompute();\n\t}\n\n\tprivate async beginCompute(): Promise<void> {\n\t\tthis._computePromise = createCancelablePromise(async (token) => {\n\t\t\tconst model = this._editor.getModel();\n\t\t\tif (!model) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst sw = new StopWatch(false);\n\t\t\tconst colors = await getColors(\n\t\t\t\tthis._languageFeaturesService.colorProvider,\n\t\t\t\tmodel,\n\t\t\t\ttoken,\n\t\t\t\tthis._isDefaultColorDecoratorsEnabled,\n\t\t\t);\n\t\t\tthis._debounceInformation.update(model, sw.elapsed());\n\t\t\treturn colors;\n\t\t});\n\t\ttry {\n\t\t\tconst colors = await this._computePromise;\n\t\t\tthis.updateDecorations(colors);\n\t\t\tthis.updateColorDecorators(colors);\n\t\t\tthis._computePromise = null;\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\tprivate stop(): void {\n\t\tif (this._timeoutTimer) {\n\t\t\tthis._timeoutTimer.cancel();\n\t\t\tthis._timeoutTimer = null;\n\t\t}\n\t\tif (this._computePromise) {\n\t\t\tthis._computePromise.cancel();\n\t\t\tthis._computePromise = null;\n\t\t}\n\t\tthis._localToDispose.clear();\n\t}\n\n\tprivate updateDecorations(colorDatas: IColorData[]): void {\n\t\tconst decorations = colorDatas.map((c) => ({\n\t\t\trange: {\n\t\t\t\tstartLineNumber: c.colorInfo.range.startLineNumber,\n\t\t\t\tstartColumn: c.colorInfo.range.startColumn,\n\t\t\t\tendLineNumber: c.colorInfo.range.endLineNumber,\n\t\t\t\tendColumn: c.colorInfo.range.endColumn,\n\t\t\t},\n\t\t\toptions: ModelDecorationOptions.EMPTY,\n\t\t}));\n\n\t\tthis._editor.changeDecorations((changeAccessor) => {\n\t\t\tthis._decorationsIds = changeAccessor.deltaDecorations(\n\t\t\t\tthis._decorationsIds,\n\t\t\t\tdecorations,\n\t\t\t);\n\n\t\t\tthis._colorDatas = new Map<string, IColorData>();\n\t\t\tthis._decorationsIds.forEach((id, i) =>\n\t\t\t\tthis._colorDatas.set(id, colorDatas[i]),\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate readonly _colorDecorationClassRefs = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tprivate updateColorDecorators(colorData: IColorData[]): void {\n\t\tthis._colorDecorationClassRefs.clear();\n\n\t\tconst decorations: IModelDeltaDecoration[] = [];\n\n\t\tconst limit = this._editor.getOption(EditorOption.colorDecoratorsLimit);\n\n\t\tfor (\n\t\t\tlet i = 0;\n\t\t\ti < colorData.length && decorations.length < limit;\n\t\t\ti++\n\t\t) {\n\t\t\tconst { red, green, blue, alpha } = colorData[i].colorInfo.color;\n\t\t\tconst rgba = new RGBA(\n\t\t\t\tMath.round(red * 255),\n\t\t\t\tMath.round(green * 255),\n\t\t\t\tMath.round(blue * 255),\n\t\t\t\talpha,\n\t\t\t);\n\t\t\tconst color = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n\n\t\t\tconst ref = this._colorDecorationClassRefs.add(\n\t\t\t\tthis._ruleFactory.createClassNameRef({\n\t\t\t\t\tbackgroundColor: color,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdecorations.push({\n\t\t\t\trange: {\n\t\t\t\t\tstartLineNumber:\n\t\t\t\t\t\tcolorData[i].colorInfo.range.startLineNumber,\n\t\t\t\t\tstartColumn: colorData[i].colorInfo.range.startColumn,\n\t\t\t\t\tendLineNumber: colorData[i].colorInfo.range.endLineNumber,\n\t\t\t\t\tendColumn: colorData[i].colorInfo.range.endColumn,\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\tdescription: \"colorDetector\",\n\t\t\t\t\tbefore: {\n\t\t\t\t\t\tcontent: noBreakWhitespace,\n\t\t\t\t\t\tinlineClassName: `${ref.className} colorpicker-color-decoration`,\n\t\t\t\t\t\tinlineClassNameAffectsLetterSpacing: true,\n\t\t\t\t\t\tattachedData: ColorDecorationInjectedTextMarker,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tconst limited = limit < colorData.length ? limit : false;\n\t\tthis._decoratorLimitReporter.update(colorData.length, limited);\n\n\t\tthis._colorDecoratorIds.set(decorations);\n\t}\n\n\tprivate removeAllDecorations(): void {\n\t\tthis._editor.removeDecorations(this._decorationsIds);\n\t\tthis._decorationsIds = [];\n\t\tthis._colorDecoratorIds.clear();\n\t\tthis._colorDecorationClassRefs.clear();\n\t}\n\n\tgetColorData(position: Position): IColorData | null {\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst decorations = model\n\t\t\t.getDecorationsInRange(Range.fromPositions(position, position))\n\t\t\t.filter((d) => this._colorDatas.has(d.id));\n\n\t\tif (decorations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._colorDatas.get(decorations[0].id)!;\n\t}\n\n\tisColorDecoration(decoration: IModelDecoration): boolean {\n\t\treturn this._colorDecoratorIds.has(decoration);\n\t}\n}\n\nexport class DecoratorLimitReporter {\n\tprivate _onDidChange = new Emitter<void>();\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate _computed = 0;\n\tprivate _limited: number | false = false;\n\tpublic get computed(): number {\n\t\treturn this._computed;\n\t}\n\tpublic get limited(): number | false {\n\t\treturn this._limited;\n\t}\n\tpublic update(computed: number, limited: number | false) {\n\t\tif (computed !== this._computed || limited !== this._limited) {\n\t\t\tthis._computed = computed;\n\t\t\tthis._limited = limited;\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,YAAY;AACrB,SAAS,yBAAyB;AAClC,SAAS,eAA2B;AACpC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,iBAAiB;AAC1B,SAAS,yBAAyB;AAClC,SAAS,6BAA6B;AAEtC,SAAS,uBAAuB;AAChC,SAAS,oBAAoB;AAE7B,SAAS,aAAa;AAMtB,SAAS,8BAA8B;AACvC;AAAA,EAEC;AAAA,OACM;AACP,SAAS,gCAAgC;AACzC,SAA0B,iBAAiB;AAEpC,MAAM,oCAAoC,uBAAO,OAAO,CAAC,CAAC;AAE1D,IAAM,gBAAN,cAA4B,WAA0C;AAAA,EAuB5E,YACkB,SAEA,uBAEA,0BAEjB,gCACC;AACD,UAAM;AARW;AAEA;AAEA;AAKjB,SAAK,uBAAuB,+BAA+B;AAAA,MAC1D,yBAAyB;AAAA,MACzB;AAAA,MACA,EAAE,KAAK,cAAc,eAAe;AAAA,IACrC;AACA,SAAK;AAAA,MACJ,QAAQ,iBAAiB,MAAM;AAC9B,aAAK,4BAA4B,KAAK,UAAU;AAChD,aAAK,aAAa;AAAA,MACnB,CAAC;AAAA,IACF;AACA,SAAK;AAAA,MACJ,QAAQ,yBAAyB,MAAM,KAAK,aAAa,CAAC;AAAA,IAC3D;AACA,SAAK;AAAA,MACJ,yBAAyB,cAAc;AAAA,QAAY,MAClD,KAAK,aAAa;AAAA,MACnB;AAAA,IACD;AACA,SAAK;AAAA,MACJ,QAAQ,yBAAyB,CAAC,MAAM;AACvC,cAAM,gBAAgB,KAAK;AAC3B,aAAK,4BAA4B,KAAK,UAAU;AAChD,aAAK,mCAAmC,KAAK,QAAQ;AAAA,UACpD,aAAa;AAAA,QACd;AACA,cAAM,gCACL,kBAAkB,KAAK,6BACvB,EAAE,WAAW,aAAa,oBAAoB;AAC/C,cAAM,uCAAuC,EAAE;AAAA,UAC9C,aAAa;AAAA,QACd;AACA,YACC,iCACA,sCACC;AACD,cAAI,KAAK,2BAA2B;AACnC,iBAAK,aAAa;AAAA,UACnB,OAAO;AACN,iBAAK,qBAAqB;AAAA,UAC3B;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,SAAK,gBAAgB;AACrB,SAAK,kBAAkB;AACvB,SAAK,4BAA4B,KAAK,UAAU;AAChD,SAAK,mCAAmC,KAAK,QAAQ;AAAA,MACpD,aAAa;AAAA,IACd;AACA,SAAK,aAAa;AAAA,EACnB;AAAA,EA7HD,OAwC6E;AAAA;AAAA;AAAA,EAC5E,OAAuB,KAAa;AAAA,EAEpC,OAAgB,iBAAiB;AAAA;AAAA,EAEhB,kBAAkB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAAA,EAC/D;AAAA,EACA;AAAA,EACA;AAAA,EAEA,kBAA4B,CAAC;AAAA,EAC7B,cAAc,oBAAI,IAAwB;AAAA,EAEjC,qBAChB,KAAK,QAAQ,4BAA4B;AAAA,EAElC;AAAA,EACA;AAAA,EAES,eAAe,IAAI,gBAAgB,KAAK,OAAO;AAAA,EAE/C,0BAA0B,IAAI,uBAAuB;AAAA,EAkEtE,YAAqB;AACpB,UAAM,QAAQ,KAAK,QAAQ,SAAS;AACpC,QAAI,CAAC,OAAO;AACX,aAAO;AAAA,IACR;AACA,UAAM,aAAa,MAAM,cAAc;AAEvC,UAAM,mBACL,KAAK,sBAAsB,SAAS,UAAU;AAC/C,QAAI,oBAAoB,OAAO,qBAAqB,UAAU;AAC7D,YAAM,kBAAmB,iBACxB,iBACD;AACA,UACC,mBACA,gBAAgB,QAAQ,MAAM,UAC9B,CAAC,gBAAgB,QAAQ,GACxB;AACD,eAAO,gBAAgB,QAAQ;AAAA,MAChC;AAAA,IACD;AAEA,WAAO,KAAK,QAAQ,UAAU,aAAa,eAAe;AAAA,EAC3D;AAAA,EAEA,IAAW,gBAAgB;AAC1B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,OAAO,IAAI,QAA2C;AACrD,WAAO,OAAO,gBAA+B,KAAK,EAAE;AAAA,EACrD;AAAA,EAES,UAAgB;AACxB,SAAK,KAAK;AACV,SAAK,qBAAqB;AAC1B,UAAM,QAAQ;AAAA,EACf;AAAA,EAEQ,eAAqB;AAC5B,SAAK,KAAK;AAEV,QAAI,CAAC,KAAK,2BAA2B;AACpC;AAAA,IACD;AACA,UAAM,QAAQ,KAAK,QAAQ,SAAS;AAEpC,QAAI,CAAC,SAAS,CAAC,KAAK,yBAAyB,cAAc,IAAI,KAAK,GAAG;AACtE;AAAA,IACD;AAEA,SAAK,gBAAgB;AAAA,MACpB,KAAK,QAAQ,wBAAwB,MAAM;AAC1C,YAAI,CAAC,KAAK,eAAe;AACxB,eAAK,gBAAgB,IAAI,aAAa;AACtC,eAAK,cAAc,aAAa,MAAM;AACrC,iBAAK,gBAAgB;AACrB,iBAAK,aAAa;AAAA,UACnB,GAAG,KAAK,qBAAqB,IAAI,KAAK,CAAC;AAAA,QACxC;AAAA,MACD,CAAC;AAAA,IACF;AACA,SAAK,aAAa;AAAA,EACnB;AAAA,EAEA,MAAc,eAA8B;AAC3C,SAAK,kBAAkB,wBAAwB,OAAO,UAAU;AAC/D,YAAM,QAAQ,KAAK,QAAQ,SAAS;AACpC,UAAI,CAAC,OAAO;AACX,eAAO,CAAC;AAAA,MACT;AACA,YAAM,KAAK,IAAI,UAAU,KAAK;AAC9B,YAAM,SAAS,MAAM;AAAA,QACpB,KAAK,yBAAyB;AAAA,QAC9B;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AACA,WAAK,qBAAqB,OAAO,OAAO,GAAG,QAAQ,CAAC;AACpD,aAAO;AAAA,IACR,CAAC;AACD,QAAI;AACH,YAAM,SAAS,MAAM,KAAK;AAC1B,WAAK,kBAAkB,MAAM;AAC7B,WAAK,sBAAsB,MAAM;AACjC,WAAK,kBAAkB;AAAA,IACxB,SAAS,GAAG;AACX,wBAAkB,CAAC;AAAA,IACpB;AAAA,EACD;AAAA,EAEQ,OAAa;AACpB,QAAI,KAAK,eAAe;AACvB,WAAK,cAAc,OAAO;AAC1B,WAAK,gBAAgB;AAAA,IACtB;AACA,QAAI,KAAK,iBAAiB;AACzB,WAAK,gBAAgB,OAAO;AAC5B,WAAK,kBAAkB;AAAA,IACxB;AACA,SAAK,gBAAgB,MAAM;AAAA,EAC5B;AAAA,EAEQ,kBAAkB,YAAgC;AACzD,UAAM,cAAc,WAAW,IAAI,CAAC,OAAO;AAAA,MAC1C,OAAO;AAAA,QACN,iBAAiB,EAAE,UAAU,MAAM;AAAA,QACnC,aAAa,EAAE,UAAU,MAAM;AAAA,QAC/B,eAAe,EAAE,UAAU,MAAM;AAAA,QACjC,WAAW,EAAE,UAAU,MAAM;AAAA,MAC9B;AAAA,MACA,SAAS,uBAAuB;AAAA,IACjC,EAAE;AAEF,SAAK,QAAQ,kBAAkB,CAAC,mBAAmB;AAClD,WAAK,kBAAkB,eAAe;AAAA,QACrC,KAAK;AAAA,QACL;AAAA,MACD;AAEA,WAAK,cAAc,oBAAI,IAAwB;AAC/C,WAAK,gBAAgB;AAAA,QAAQ,CAAC,IAAI,MACjC,KAAK,YAAY,IAAI,IAAI,WAAW,CAAC,CAAC;AAAA,MACvC;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEiB,4BAA4B,KAAK;AAAA,IACjD,IAAI,gBAAgB;AAAA,EACrB;AAAA,EAEQ,sBAAsB,WAA+B;AAC5D,SAAK,0BAA0B,MAAM;AAErC,UAAM,cAAuC,CAAC;AAE9C,UAAM,QAAQ,KAAK,QAAQ,UAAU,aAAa,oBAAoB;AAEtE,aACK,IAAI,GACR,IAAI,UAAU,UAAU,YAAY,SAAS,OAC7C,KACC;AACD,YAAM,EAAE,KAAK,OAAO,MAAM,MAAM,IAAI,UAAU,CAAC,EAAE,UAAU;AAC3D,YAAM,OAAO,IAAI;AAAA,QAChB,KAAK,MAAM,MAAM,GAAG;AAAA,QACpB,KAAK,MAAM,QAAQ,GAAG;AAAA,QACtB,KAAK,MAAM,OAAO,GAAG;AAAA,QACrB;AAAA,MACD;AACA,YAAM,QAAQ,QAAQ,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC;AAE7D,YAAM,MAAM,KAAK,0BAA0B;AAAA,QAC1C,KAAK,aAAa,mBAAmB;AAAA,UACpC,iBAAiB;AAAA,QAClB,CAAC;AAAA,MACF;AAEA,kBAAY,KAAK;AAAA,QAChB,OAAO;AAAA,UACN,iBACC,UAAU,CAAC,EAAE,UAAU,MAAM;AAAA,UAC9B,aAAa,UAAU,CAAC,EAAE,UAAU,MAAM;AAAA,UAC1C,eAAe,UAAU,CAAC,EAAE,UAAU,MAAM;AAAA,UAC5C,WAAW,UAAU,CAAC,EAAE,UAAU,MAAM;AAAA,QACzC;AAAA,QACA,SAAS;AAAA,UACR,aAAa;AAAA,UACb,QAAQ;AAAA,YACP,SAAS;AAAA,YACT,iBAAiB,GAAG,IAAI,SAAS;AAAA,YACjC,qCAAqC;AAAA,YACrC,cAAc;AAAA,UACf;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AACA,UAAM,UAAU,QAAQ,UAAU,SAAS,QAAQ;AACnD,SAAK,wBAAwB,OAAO,UAAU,QAAQ,OAAO;AAE7D,SAAK,mBAAmB,IAAI,WAAW;AAAA,EACxC;AAAA,EAEQ,uBAA6B;AACpC,SAAK,QAAQ,kBAAkB,KAAK,eAAe;AACnD,SAAK,kBAAkB,CAAC;AACxB,SAAK,mBAAmB,MAAM;AAC9B,SAAK,0BAA0B,MAAM;AAAA,EACtC;AAAA,EAEA,aAAa,UAAuC;AACnD,UAAM,QAAQ,KAAK,QAAQ,SAAS;AACpC,QAAI,CAAC,OAAO;AACX,aAAO;AAAA,IACR;AAEA,UAAM,cAAc,MAClB,sBAAsB,MAAM,cAAc,UAAU,QAAQ,CAAC,EAC7D,OAAO,CAAC,MAAM,KAAK,YAAY,IAAI,EAAE,EAAE,CAAC;AAE1C,QAAI,YAAY,WAAW,GAAG;AAC7B,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,YAAY,IAAI,YAAY,CAAC,EAAE,EAAE;AAAA,EAC9C;AAAA,EAEA,kBAAkB,YAAuC;AACxD,WAAO,KAAK,mBAAmB,IAAI,UAAU;AAAA,EAC9C;AACD;AAzSa,gBAAN;AAAA,EAyBJ;AAAA,EAEA;AAAA,EAEA;AAAA,GA7BU;AA2SN,MAAM,uBAAuB;AAAA,EAnVpC,OAmVoC;AAAA;AAAA;AAAA,EAC3B,eAAe,IAAI,QAAc;AAAA,EACzB,cAA2B,KAAK,aAAa;AAAA,EAErD,YAAY;AAAA,EACZ,WAA2B;AAAA,EACnC,IAAW,WAAmB;AAC7B,WAAO,KAAK;AAAA,EACb;AAAA,EACA,IAAW,UAA0B;AACpC,WAAO,KAAK;AAAA,EACb;AAAA,EACO,OAAO,UAAkB,SAAyB;AACxD,QAAI,aAAa,KAAK,aAAa,YAAY,KAAK,UAAU;AAC7D,WAAK,YAAY;AACjB,WAAK,WAAW;AAChB,WAAK,aAAa,KAAK;AAAA,IACxB;AAAA,EACD;AACD;",
  "names": []
}
