{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerSaturationBox.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport '../colorPicker.css';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../../../../base/browser/globalPointerMoveMonitor.js';\nimport { Color, HSVA } from '../../../../../base/common/color.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\n\nconst $ = dom.$;\n\nexport class SaturationBox extends Disposable {\n\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly selection: HTMLElement;\n\tprivate readonly _canvas: HTMLCanvasElement;\n\tprivate width!: number;\n\tprivate height!: number;\n\n\tprivate monitor: GlobalPointerMoveMonitor | null;\n\tprivate readonly _onDidChange = new Emitter<{ s: number; v: number }>();\n\treadonly onDidChange: Event<{ s: number; v: number }> = this._onDidChange.event;\n\n\tprivate readonly _onColorFlushed = new Emitter<void>();\n\treadonly onColorFlushed: Event<void> = this._onColorFlushed.event;\n\n\tconstructor(container: HTMLElement, private readonly model: ColorPickerModel, private pixelRatio: number) {\n\t\tsuper();\n\n\t\tthis._domNode = $('.saturation-wrap');\n\t\tdom.append(container, this._domNode);\n\n\t\t// Create canvas, draw selected color\n\t\tthis._canvas = document.createElement('canvas');\n\t\tthis._canvas.className = 'saturation-box';\n\t\tdom.append(this._domNode, this._canvas);\n\n\t\t// Add selection circle\n\t\tthis.selection = $('.saturation-selection');\n\t\tdom.append(this._domNode, this.selection);\n\n\t\tthis.layout();\n\n\t\tthis._register(dom.addDisposableListener(this._domNode, dom.EventType.POINTER_DOWN, e => this.onPointerDown(e)));\n\t\tthis._register(this.model.onDidChangeColor(this.onDidChangeColor, this));\n\t\tthis.monitor = null;\n\t}\n\n\tpublic get domNode() {\n\t\treturn this._domNode;\n\t}\n\n\tpublic get canvas() {\n\t\treturn this._canvas;\n\t}\n\n\tprivate onPointerDown(e: PointerEvent): void {\n\t\tif (!e.target || !(e.target instanceof Element)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.monitor = this._register(new GlobalPointerMoveMonitor());\n\t\tconst origin = dom.getDomNodePagePosition(this._domNode);\n\n\t\tif (e.target !== this.selection) {\n\t\t\tthis.onDidChangePosition(e.offsetX, e.offsetY);\n\t\t}\n\n\t\tthis.monitor.startMonitoring(e.target, e.pointerId, e.buttons, event => this.onDidChangePosition(event.pageX - origin.left, event.pageY - origin.top), () => null);\n\n\t\tconst pointerUpListener = dom.addDisposableListener(e.target.ownerDocument, dom.EventType.POINTER_UP, () => {\n\t\t\tthis._onColorFlushed.fire();\n\t\t\tpointerUpListener.dispose();\n\t\t\tif (this.monitor) {\n\t\t\t\tthis.monitor.stopMonitoring(true);\n\t\t\t\tthis.monitor = null;\n\t\t\t}\n\t\t}, true);\n\t}\n\n\tprivate onDidChangePosition(left: number, top: number): void {\n\t\tconst s = Math.max(0, Math.min(1, left / this.width));\n\t\tconst v = Math.max(0, Math.min(1, 1 - (top / this.height)));\n\n\t\tthis.paintSelection(s, v);\n\t\tthis._onDidChange.fire({ s, v });\n\t}\n\n\tlayout(): void {\n\t\tthis.width = this._domNode.offsetWidth;\n\t\tthis.height = this._domNode.offsetHeight;\n\t\tthis._canvas.width = this.width * this.pixelRatio;\n\t\tthis._canvas.height = this.height * this.pixelRatio;\n\t\tthis.paint();\n\n\t\tconst hsva = this.model.color.hsva;\n\t\tthis.paintSelection(hsva.s, hsva.v);\n\t}\n\n\tprivate paint(): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tconst saturatedColor = new Color(new HSVA(hsva.h, 1, 1, 1));\n\t\tconst ctx = this._canvas.getContext('2d')!;\n\n\t\tconst whiteGradient = ctx.createLinearGradient(0, 0, this._canvas.width, 0);\n\t\twhiteGradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n\t\twhiteGradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\n\t\twhiteGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n\n\t\tconst blackGradient = ctx.createLinearGradient(0, 0, 0, this._canvas.height);\n\t\tblackGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n\t\tblackGradient.addColorStop(1, 'rgba(0, 0, 0, 1)');\n\n\t\tctx.rect(0, 0, this._canvas.width, this._canvas.height);\n\t\tctx.fillStyle = Color.Format.CSS.format(saturatedColor)!;\n\t\tctx.fill();\n\t\tctx.fillStyle = whiteGradient;\n\t\tctx.fill();\n\t\tctx.fillStyle = blackGradient;\n\t\tctx.fill();\n\t}\n\n\tprivate paintSelection(s: number, v: number): void {\n\t\tthis.selection.style.left = `${s * this.width}px`;\n\t\tthis.selection.style.top = `${this.height - v * this.height}px`;\n\t}\n\n\tprivate onDidChangeColor(color: Color): void {\n\t\tif (this.monitor && this.monitor.isMonitoring()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.paint();\n\t\tconst hsva = color.hsva;\n\t\tthis.paintSelection(hsva.s, hsva.v);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
