{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/color.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IRange } from '../../../common/core/range.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { DocumentColorProvider, IColorInformation, IColorPresentation } from '../../../common/languages.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport { DefaultDocumentColorProvider } from './defaultDocumentColorProvider.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ServicesAccessor } from '../../../browser/editorExtensions.js';\n\nexport async function getColors(colorProviderRegistry: LanguageFeatureRegistry<DocumentColorProvider>, model: ITextModel, token: CancellationToken, isDefaultColorDecoratorsEnabled: boolean = true): Promise<IColorData[]> {\n\treturn _findColorData<IColorData>(new ColorDataCollector(), colorProviderRegistry, model, token, isDefaultColorDecoratorsEnabled);\n}\n\nexport function getColorPresentations(model: ITextModel, colorInfo: IColorInformation, provider: DocumentColorProvider, token: CancellationToken): Promise<IColorPresentation[] | null | undefined> {\n\treturn Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\n}\n\nexport interface IColorData {\n\tcolorInfo: IColorInformation;\n\tprovider: DocumentColorProvider;\n}\n\nexport interface IExtColorData { range: IRange; color: [number, number, number, number] }\n\ninterface DataCollector<T> {\n\tcompute(provider: DocumentColorProvider, model: ITextModel, token: CancellationToken, result: T[]): Promise<boolean>;\n}\n\nclass ColorDataCollector implements DataCollector<IColorData> {\n\tconstructor() { }\n\tasync compute(provider: DocumentColorProvider, model: ITextModel, token: CancellationToken, colors: IColorData[]): Promise<boolean> {\n\t\tconst documentColors = await provider.provideDocumentColors(model, token);\n\t\tif (Array.isArray(documentColors)) {\n\t\t\tfor (const colorInfo of documentColors) {\n\t\t\t\tcolors.push({ colorInfo, provider });\n\t\t\t}\n\t\t}\n\t\treturn Array.isArray(documentColors);\n\t}\n}\n\nexport class ExtColorDataCollector implements DataCollector<IExtColorData> {\n\tconstructor() { }\n\tasync compute(provider: DocumentColorProvider, model: ITextModel, token: CancellationToken, colors: IExtColorData[]): Promise<boolean> {\n\t\tconst documentColors = await provider.provideDocumentColors(model, token);\n\t\tif (Array.isArray(documentColors)) {\n\t\t\tfor (const colorInfo of documentColors) {\n\t\t\t\tcolors.push({ range: colorInfo.range, color: [colorInfo.color.red, colorInfo.color.green, colorInfo.color.blue, colorInfo.color.alpha] });\n\t\t\t}\n\t\t}\n\t\treturn Array.isArray(documentColors);\n\t}\n\n}\n\nexport class ColorPresentationsCollector implements DataCollector<IColorPresentation> {\n\tconstructor(private colorInfo: IColorInformation) { }\n\tasync compute(provider: DocumentColorProvider, model: ITextModel, _token: CancellationToken, colors: IColorPresentation[]): Promise<boolean> {\n\t\tconst documentColors = await provider.provideColorPresentations(model, this.colorInfo, CancellationToken.None);\n\t\tif (Array.isArray(documentColors)) {\n\t\t\tcolors.push(...documentColors);\n\t\t}\n\t\treturn Array.isArray(documentColors);\n\t}\n}\n\nexport async function _findColorData<T extends IColorPresentation | IExtColorData | IColorData>(collector: DataCollector<T>, colorProviderRegistry: LanguageFeatureRegistry<DocumentColorProvider>, model: ITextModel, token: CancellationToken, isDefaultColorDecoratorsEnabled: boolean): Promise<T[]> {\n\tlet validDocumentColorProviderFound = false;\n\tlet defaultProvider: DefaultDocumentColorProvider | undefined;\n\tconst colorData: T[] = [];\n\tconst documentColorProviders = colorProviderRegistry.ordered(model);\n\tfor (let i = documentColorProviders.length - 1; i >= 0; i--) {\n\t\tconst provider = documentColorProviders[i];\n\t\tif (provider instanceof DefaultDocumentColorProvider) {\n\t\t\tdefaultProvider = provider;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tif (await collector.compute(provider, model, token, colorData)) {\n\t\t\t\t\tvalidDocumentColorProviderFound = true;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedExternalError(e);\n\t\t\t}\n\t\t}\n\t}\n\tif (validDocumentColorProviderFound) {\n\t\treturn colorData;\n\t}\n\tif (defaultProvider && isDefaultColorDecoratorsEnabled) {\n\t\tawait collector.compute(defaultProvider, model, token, colorData);\n\t\treturn colorData;\n\t}\n\treturn [];\n}\n\nexport function _setupColorCommand(accessor: ServicesAccessor, resource: URI): { model: ITextModel; colorProviderRegistry: LanguageFeatureRegistry<DocumentColorProvider>; isDefaultColorDecoratorsEnabled: boolean } {\n\tconst { colorProvider: colorProviderRegistry } = accessor.get(ILanguageFeaturesService);\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument();\n\t}\n\tconst isDefaultColorDecoratorsEnabled = accessor.get(IConfigurationService).getValue<boolean>('editor.defaultColorDecorators', { resource });\n\treturn { model, colorProviderRegistry, isDefaultColorDecoratorsEnabled };\n}\n\n"],
  "mappings": "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",
  "names": []
}
