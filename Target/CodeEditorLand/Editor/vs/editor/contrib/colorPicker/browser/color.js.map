{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/color.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tillegalArgument,\n\tonUnexpectedExternalError,\n} from \"../../../../base/common/errors.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type { ServicesAccessor } from \"../../../browser/editorExtensions.js\";\nimport type { IRange } from \"../../../common/core/range.js\";\nimport type { LanguageFeatureRegistry } from \"../../../common/languageFeatureRegistry.js\";\nimport type {\n\tDocumentColorProvider,\n\tIColorInformation,\n\tIColorPresentation,\n} from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { IModelService } from \"../../../common/services/model.js\";\nimport { DefaultDocumentColorProvider } from \"./defaultDocumentColorProvider.js\";\n\nexport async function getColors(\n\tcolorProviderRegistry: LanguageFeatureRegistry<DocumentColorProvider>,\n\tmodel: ITextModel,\n\ttoken: CancellationToken,\n\tisDefaultColorDecoratorsEnabled = true,\n): Promise<IColorData[]> {\n\treturn _findColorData<IColorData>(\n\t\tnew ColorDataCollector(),\n\t\tcolorProviderRegistry,\n\t\tmodel,\n\t\ttoken,\n\t\tisDefaultColorDecoratorsEnabled,\n\t);\n}\n\nexport function getColorPresentations(\n\tmodel: ITextModel,\n\tcolorInfo: IColorInformation,\n\tprovider: DocumentColorProvider,\n\ttoken: CancellationToken,\n): Promise<IColorPresentation[] | null | undefined> {\n\treturn Promise.resolve(\n\t\tprovider.provideColorPresentations(model, colorInfo, token),\n\t);\n}\n\nexport interface IColorData {\n\tcolorInfo: IColorInformation;\n\tprovider: DocumentColorProvider;\n}\n\nexport interface IExtColorData {\n\trange: IRange;\n\tcolor: [number, number, number, number];\n}\n\ninterface DataCollector<T> {\n\tcompute(\n\t\tprovider: DocumentColorProvider,\n\t\tmodel: ITextModel,\n\t\ttoken: CancellationToken,\n\t\tresult: T[],\n\t): Promise<boolean>;\n}\n\nclass ColorDataCollector implements DataCollector<IColorData> {\n\tconstructor() {}\n\tasync compute(\n\t\tprovider: DocumentColorProvider,\n\t\tmodel: ITextModel,\n\t\ttoken: CancellationToken,\n\t\tcolors: IColorData[],\n\t): Promise<boolean> {\n\t\tconst documentColors = await provider.provideDocumentColors(\n\t\t\tmodel,\n\t\t\ttoken,\n\t\t);\n\t\tif (Array.isArray(documentColors)) {\n\t\t\tfor (const colorInfo of documentColors) {\n\t\t\t\tcolors.push({ colorInfo, provider });\n\t\t\t}\n\t\t}\n\t\treturn Array.isArray(documentColors);\n\t}\n}\n\nexport class ExtColorDataCollector implements DataCollector<IExtColorData> {\n\tconstructor() {}\n\tasync compute(\n\t\tprovider: DocumentColorProvider,\n\t\tmodel: ITextModel,\n\t\ttoken: CancellationToken,\n\t\tcolors: IExtColorData[],\n\t): Promise<boolean> {\n\t\tconst documentColors = await provider.provideDocumentColors(\n\t\t\tmodel,\n\t\t\ttoken,\n\t\t);\n\t\tif (Array.isArray(documentColors)) {\n\t\t\tfor (const colorInfo of documentColors) {\n\t\t\t\tcolors.push({\n\t\t\t\t\trange: colorInfo.range,\n\t\t\t\t\tcolor: [\n\t\t\t\t\t\tcolorInfo.color.red,\n\t\t\t\t\t\tcolorInfo.color.green,\n\t\t\t\t\t\tcolorInfo.color.blue,\n\t\t\t\t\t\tcolorInfo.color.alpha,\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Array.isArray(documentColors);\n\t}\n}\n\nexport class ColorPresentationsCollector\n\timplements DataCollector<IColorPresentation>\n{\n\tconstructor(private colorInfo: IColorInformation) {}\n\tasync compute(\n\t\tprovider: DocumentColorProvider,\n\t\tmodel: ITextModel,\n\t\t_token: CancellationToken,\n\t\tcolors: IColorPresentation[],\n\t): Promise<boolean> {\n\t\tconst documentColors = await provider.provideColorPresentations(\n\t\t\tmodel,\n\t\t\tthis.colorInfo,\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tif (Array.isArray(documentColors)) {\n\t\t\tcolors.push(...documentColors);\n\t\t}\n\t\treturn Array.isArray(documentColors);\n\t}\n}\n\nexport async function _findColorData<\n\tT extends IColorPresentation | IExtColorData | IColorData,\n>(\n\tcollector: DataCollector<T>,\n\tcolorProviderRegistry: LanguageFeatureRegistry<DocumentColorProvider>,\n\tmodel: ITextModel,\n\ttoken: CancellationToken,\n\tisDefaultColorDecoratorsEnabled: boolean,\n): Promise<T[]> {\n\tlet validDocumentColorProviderFound = false;\n\tlet defaultProvider: DefaultDocumentColorProvider | undefined;\n\tconst colorData: T[] = [];\n\tconst documentColorProviders = colorProviderRegistry.ordered(model);\n\tfor (let i = documentColorProviders.length - 1; i >= 0; i--) {\n\t\tconst provider = documentColorProviders[i];\n\t\tif (provider instanceof DefaultDocumentColorProvider) {\n\t\t\tdefaultProvider = provider;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tif (\n\t\t\t\t\tawait collector.compute(provider, model, token, colorData)\n\t\t\t\t) {\n\t\t\t\t\tvalidDocumentColorProviderFound = true;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedExternalError(e);\n\t\t\t}\n\t\t}\n\t}\n\tif (validDocumentColorProviderFound) {\n\t\treturn colorData;\n\t}\n\tif (defaultProvider && isDefaultColorDecoratorsEnabled) {\n\t\tawait collector.compute(defaultProvider, model, token, colorData);\n\t\treturn colorData;\n\t}\n\treturn [];\n}\n\nexport function _setupColorCommand(\n\taccessor: ServicesAccessor,\n\tresource: URI,\n): {\n\tmodel: ITextModel;\n\tcolorProviderRegistry: LanguageFeatureRegistry<DocumentColorProvider>;\n\tisDefaultColorDecoratorsEnabled: boolean;\n} {\n\tconst { colorProvider: colorProviderRegistry } = accessor.get(\n\t\tILanguageFeaturesService,\n\t);\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument();\n\t}\n\tconst isDefaultColorDecoratorsEnabled = accessor\n\t\t.get(IConfigurationService)\n\t\t.getValue<boolean>(\"editor.defaultColorDecorators\", { resource });\n\treturn { model, colorProviderRegistry, isDefaultColorDecoratorsEnabled };\n}\n"],
  "mappings": "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",
  "names": []
}
