var E=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var b=(h,r,t,e)=>{for(var o=e>1?void 0:e?S(r,t):r,a=h.length-1,c;a>=0;a--)(c=h[a])&&(o=(e?c(r,t,o):c(o))||o);return e&&o&&E(r,t,o),o},d=(h,r)=>(t,e)=>r(t,e,h);import*as x from"../../../../../vs/base/browser/dom.js";import{Emitter as H}from"../../../../../vs/base/common/event.js";import{Disposable as v}from"../../../../../vs/base/common/lifecycle.js";import{ContentWidgetPositionPreference as f}from"../../../../../vs/editor/browser/editorBrowser.js";import{EditorContributionInstantiation as W,registerEditorContribution as B}from"../../../../../vs/editor/browser/editorExtensions.js";import{EditorOption as F}from"../../../../../vs/editor/common/config/editorOptions.js";import"../../../../../vs/editor/common/core/position.js";import"../../../../../vs/editor/common/core/range.js";import"../../../../../vs/editor/common/editorCommon.js";import{EditorContextKeys as I}from"../../../../../vs/editor/common/editorContextKeys.js";import"../../../../../vs/editor/common/languages.js";import{PositionAffinity as L}from"../../../../../vs/editor/common/model.js";import{ILanguageFeaturesService as D}from"../../../../../vs/editor/common/services/languageFeatures.js";import{StandaloneColorPickerParticipant as N}from"../../../../../vs/editor/contrib/colorPicker/browser/colorHoverParticipant.js";import"../../../../../vs/editor/contrib/colorPicker/browser/colorPickerWidget.js";import{DefaultDocumentColorProvider as R}from"../../../../../vs/editor/contrib/colorPicker/browser/defaultDocumentColorProvider.js";import{EditorHoverStatusBar as w}from"../../../../../vs/editor/contrib/hover/browser/contentHoverStatusBar.js";import"../../../../../vs/editor/contrib/hover/browser/hoverTypes.js";import{IContextKeyService as O}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as g}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{IKeybindingService as V}from"../../../../../vs/platform/keybinding/common/keybinding.js";import"vs/css!./colorPicker";import{IEditorWorkerService as M}from"../../../../../vs/editor/common/services/editorWorker.js";let s=class extends v{constructor(t,e,o){super();this._editor=t;this._instantiationService=o;this._standaloneColorPickerVisible=I.standaloneColorPickerVisible.bindTo(e),this._standaloneColorPickerFocused=I.standaloneColorPickerFocused.bindTo(e)}static ID="editor.contrib.standaloneColorPickerController";_standaloneColorPickerWidget=null;_standaloneColorPickerVisible;_standaloneColorPickerFocused;showOrFocus(){this._editor.hasModel()&&(this._standaloneColorPickerVisible.get()?this._standaloneColorPickerFocused.get()||this._standaloneColorPickerWidget?.focus():this._standaloneColorPickerWidget=this._instantiationService.createInstance(l,this._editor,this._standaloneColorPickerVisible,this._standaloneColorPickerFocused))}hide(){this._standaloneColorPickerFocused.set(!1),this._standaloneColorPickerVisible.set(!1),this._standaloneColorPickerWidget?.hide(),this._editor.focus()}insertColor(){this._standaloneColorPickerWidget?.updateEditor(),this.hide()}static get(t){return t.getContribution(s.ID)}};s=b([d(1,O),d(2,g)],s),B(s.ID,s,W.AfterFirstRender);const P=8,A=22;let l=class extends v{constructor(t,e,o,a,c,_,u){super();this._editor=t;this._standaloneColorPickerVisible=e;this._standaloneColorPickerFocused=o;this._keybindingService=c;this._languageFeaturesService=_;this._editorWorkerService=u;this._standaloneColorPickerVisible.set(!0),this._standaloneColorPickerParticipant=a.createInstance(N,this._editor),this._position=this._editor._getViewModel()?.getPrimaryCursorState().modelState.position;const n=this._editor.getSelection(),m=n?{startLineNumber:n.startLineNumber,startColumn:n.startColumn,endLineNumber:n.endLineNumber,endColumn:n.endColumn}:{startLineNumber:0,endLineNumber:0,endColumn:0,startColumn:0},C=this._register(x.trackFocus(this._body));this._register(C.onDidBlur(i=>{this.hide()})),this._register(C.onDidFocus(i=>{this.focus()})),this._register(this._editor.onDidChangeCursorPosition(()=>{this._selectionSetInEditor?this._selectionSetInEditor=!1:this.hide()})),this._register(this._editor.onMouseMove(i=>{const p=i.target.element?.classList;p&&p.contains("colorpicker-color-decoration")&&this.hide()})),this._register(this.onResult(i=>{this._render(i.value,i.foundInEditor)})),this._start(m),this._body.style.zIndex="50",this._editor.addContentWidget(this)}static ID="editor.contrib.standaloneColorPickerWidget";allowEditorOverflow=!0;_position=void 0;_standaloneColorPickerParticipant;_body=document.createElement("div");_colorHover=null;_selectionSetInEditor=!1;_onResult=this._register(new H);onResult=this._onResult.event;updateEditor(){this._colorHover&&this._standaloneColorPickerParticipant.updateEditorModel(this._colorHover)}getId(){return l.ID}getDomNode(){return this._body}getPosition(){if(!this._position)return null;const t=this._editor.getOption(F.hover).above;return{position:this._position,secondaryPosition:this._position,preference:t?[f.ABOVE,f.BELOW]:[f.BELOW,f.ABOVE],positionAffinity:L.None}}hide(){this.dispose(),this._standaloneColorPickerVisible.set(!1),this._standaloneColorPickerFocused.set(!1),this._editor.removeContentWidget(this),this._editor.focus()}focus(){this._standaloneColorPickerFocused.set(!0),this._body.focus()}async _start(t){const e=await this._computeAsync(t);e&&this._onResult.fire(new K(e.result,e.foundInEditor))}async _computeAsync(t){if(!this._editor.hasModel())return null;const e={range:t,color:{red:0,green:0,blue:0,alpha:1}},o=await this._standaloneColorPickerParticipant.createColorHover(e,new R(this._editorWorkerService),this._languageFeaturesService.colorProvider);return o?{result:o.colorHover,foundInEditor:o.foundInEditor}:null}_render(t,e){const o=document.createDocumentFragment(),a=this._register(new w(this._keybindingService)),c={fragment:o,statusBar:a,onContentsChanged:()=>{},hide:()=>this.hide()};this._colorHover=t;const _=this._standaloneColorPickerParticipant.renderHoverParts(c,[t]);if(!_)return;this._register(_.disposables);const u=_.colorPicker;this._body.classList.add("standalone-colorpicker-body"),this._body.style.maxHeight=Math.max(this._editor.getLayoutInfo().height/4,250)+"px",this._body.style.maxWidth=Math.max(this._editor.getLayoutInfo().width*.66,500)+"px",this._body.tabIndex=0,this._body.appendChild(o),u.layout();const n=u.body,m=n.saturationBox.domNode.clientWidth,C=n.domNode.clientWidth-m-A-P,i=u.body.enterButton;i?.onClicked(()=>{this.updateEditor(),this.hide()});const p=u.header,y=p.pickedColorNode;y.style.width=m+P+"px";const k=p.originalColorNode;k.style.width=C+"px",u.header.closeButton?.onClicked(()=>{this.hide()}),e&&(i&&(i.button.textContent="Replace"),this._selectionSetInEditor=!0,this._editor.setSelection(t.range)),this._editor.layoutContentWidget(this)}};l=b([d(3,g),d(4,V),d(5,D),d(6,M)],l);class K{constructor(r,t){this.value=r;this.foundInEditor=t}}export{s as StandaloneColorPickerController,l as StandaloneColorPickerWidget};
