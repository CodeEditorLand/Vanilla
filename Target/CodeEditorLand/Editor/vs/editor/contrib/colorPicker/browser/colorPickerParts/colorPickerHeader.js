import"../colorPicker.css";import*as o from"../../../../../base/browser/dom.js";import{Color as i}from"../../../../../base/common/color.js";import{Disposable as a}from"../../../../../base/common/lifecycle.js";import{localize as h}from"../../../../../nls.js";import{editorHoverBackground as s}from"../../../../../platform/theme/common/colorRegistry.js";import{CloseButton as c}from"./colorPickerCloseButton.js";const r=o.$;class P extends a{constructor(e,t,l,g=!1){super();this.model=t;this.showingStandaloneColorPicker=g;this._domNode=r(".colorpicker-header"),o.append(e,this._domNode),this._pickedColorNode=o.append(this._domNode,r(".picked-color")),o.append(this._pickedColorNode,r("span.codicon.codicon-color-mode")),this._pickedColorPresentation=o.append(this._pickedColorNode,document.createElement("span")),this._pickedColorPresentation.classList.add("picked-color-presentation");const n=h("clickToToggleColorOptions","Click to toggle color options (rgb/hsl/hex)");this._pickedColorNode.setAttribute("title",n),this._originalColorNode=o.append(this._domNode,r(".original-color")),this._originalColorNode.style.backgroundColor=i.Format.CSS.format(this.model.originalColor)||"",this.backgroundColor=l.getColorTheme().getColor(s)||i.white,this._register(l.onDidColorThemeChange(d=>{this.backgroundColor=d.getColor(s)||i.white})),this._register(o.addDisposableListener(this._pickedColorNode,o.EventType.CLICK,()=>this.model.selectNextColorPresentation())),this._register(o.addDisposableListener(this._originalColorNode,o.EventType.CLICK,()=>{this.model.color=this.model.originalColor,this.model.flushColor()})),this._register(t.onDidChangeColor(this.onDidChangeColor,this)),this._register(t.onDidChangePresentation(this.onDidChangePresentation,this)),this._pickedColorNode.style.backgroundColor=i.Format.CSS.format(t.color)||"",this._pickedColorNode.classList.toggle("light",t.color.rgba.a<.5?this.backgroundColor.isLighter():t.color.isLighter()),this.onDidChangeColor(this.model.color),this.showingStandaloneColorPicker&&(this._domNode.classList.add("standalone-colorpicker"),this._closeButton=this._register(new c(this._domNode)))}_domNode;_pickedColorNode;_pickedColorPresentation;_originalColorNode;_closeButton=null;backgroundColor;get domNode(){return this._domNode}get closeButton(){return this._closeButton}get pickedColorNode(){return this._pickedColorNode}get originalColorNode(){return this._originalColorNode}onDidChangeColor(e){this._pickedColorNode.style.backgroundColor=i.Format.CSS.format(e)||"",this._pickedColorNode.classList.toggle("light",e.rgba.a<.5?this.backgroundColor.isLighter():e.isLighter()),this.onDidChangePresentation()}onDidChangePresentation(){this._pickedColorPresentation.textContent=this.model.presentation?this.model.presentation.label:""}}export{P as ColorPickerHeader};
