{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/hoverColorPicker/hoverColorPickerWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport '../colorPicker.css';\nimport { PixelRatio } from '../../../../../base/browser/pixelRatio.js';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Widget } from '../../../../../base/browser/ui/widget.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\nimport { IEditorHoverColorPickerWidget } from '../../../hover/browser/hoverTypes.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { ColorPickerBody } from '../colorPickerParts/colorPickerBody.js';\nimport { ColorPickerHeader } from '../colorPickerParts/colorPickerHeader.js';\n\nconst $ = dom.$;\n\nexport class ColorPickerWidget extends Widget implements IEditorHoverColorPickerWidget {\n\n\tprivate static readonly ID = 'editor.contrib.colorPickerWidget';\n\tprivate readonly _domNode: HTMLElement;\n\n\tbody: ColorPickerBody;\n\theader: ColorPickerHeader;\n\n\tconstructor(container: Node, readonly model: ColorPickerModel, private pixelRatio: number, themeService: IThemeService, standaloneColorPicker: boolean = false) {\n\t\tsuper();\n\n\t\tthis._register(PixelRatio.getInstance(dom.getWindow(container)).onDidChange(() => this.layout()));\n\n\t\tthis._domNode = $('.colorpicker-widget');\n\t\tcontainer.appendChild(this._domNode);\n\n\t\tthis.header = this._register(new ColorPickerHeader(this._domNode, this.model, themeService, standaloneColorPicker));\n\t\tthis.body = this._register(new ColorPickerBody(this._domNode, this.model, this.pixelRatio, standaloneColorPicker));\n\t}\n\n\tgetId(): string {\n\t\treturn ColorPickerWidget.ID;\n\t}\n\n\tlayout(): void {\n\t\tthis.body.layout();\n\t}\n\n\tget domNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n}\n"],
  "mappings": ";;AAKA,OAAO;AACP,SAAS,kBAAkB;AAC3B,YAAY,SAAS;AACrB,SAAS,cAAc;AACvB,SAAS,wBAAwB;AACjC,SAAS,qCAAqC;AAC9C,SAAS,qBAAqB;AAC9B,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAElC,MAAM,IAAI,IAAI;AAEP,MAAM,0BAA0B,OAAgD;AAAA,EAQtF,YAAY,WAA0B,OAAiC,YAAoB,cAA6B,wBAAiC,OAAO;AAC/J,UAAM;AAD+B;AAAiC;AAGtE,SAAK,UAAU,WAAW,YAAY,IAAI,UAAU,SAAS,CAAC,EAAE,YAAY,MAAM,KAAK,OAAO,CAAC,CAAC;AAEhG,SAAK,WAAW,EAAE,qBAAqB;AACvC,cAAU,YAAY,KAAK,QAAQ;AAEnC,SAAK,SAAS,KAAK,UAAU,IAAI,kBAAkB,KAAK,UAAU,KAAK,OAAO,cAAc,qBAAqB,CAAC;AAClH,SAAK,OAAO,KAAK,UAAU,IAAI,gBAAgB,KAAK,UAAU,KAAK,OAAO,KAAK,YAAY,qBAAqB,CAAC;AAAA,EAClH;AAAA,EAnCD,OAiBuF;AAAA;AAAA;AAAA,EAEtF,OAAwB,KAAK;AAAA,EACZ;AAAA,EAEjB;AAAA,EACA;AAAA,EAcA,QAAgB;AACf,WAAO,kBAAkB;AAAA,EAC1B;AAAA,EAEA,SAAe;AACd,SAAK,KAAK,OAAO;AAAA,EAClB;AAAA,EAEA,IAAI,UAAuB;AAC1B,WAAO,KAAK;AAAA,EACb;AACD;",
  "names": []
}
