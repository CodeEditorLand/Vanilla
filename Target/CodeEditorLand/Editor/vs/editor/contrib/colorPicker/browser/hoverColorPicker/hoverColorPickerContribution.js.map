{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/hoverColorPicker/hoverColorPickerContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from '../../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { IEditorContribution } from '../../../../common/editorCommon.js';\nimport { ColorDecorationInjectedTextMarker } from '../colorDetector.js';\nimport { ContentHoverController } from '../../../hover/browser/contentHoverController.js';\nimport { HoverStartMode, HoverStartSource } from '../../../hover/browser/hoverOperation.js';\n\nexport class HoverColorPickerContribution extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID: string = 'editor.contrib.colorContribution';\n\n\tstatic readonly RECOMPUTE_TIME = 1000; // ms\n\n\tconstructor(private readonly _editor: ICodeEditor,\n\t) {\n\t\tsuper();\n\t\tthis._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate onMouseDown(mouseEvent: IEditorMouseEvent) {\n\n\t\tconst colorDecoratorsActivatedOn = this._editor.getOption(EditorOption.colorDecoratorsActivatedOn);\n\t\tif (colorDecoratorsActivatedOn !== 'click' && colorDecoratorsActivatedOn !== 'clickAndHover') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = mouseEvent.target;\n\n\t\tif (target.type !== MouseTargetType.CONTENT_TEXT) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.detail.injectedText) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (target.detail.injectedText.options.attachedData !== ColorDecorationInjectedTextMarker) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.range) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hoverController = this._editor.getContribution<ContentHoverController>(ContentHoverController.ID);\n\t\tif (!hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tif (!hoverController.isColorPickerVisible) {\n\t\t\tconst range = new Range(target.range.startLineNumber, target.range.startColumn + 1, target.range.endLineNumber, target.range.endColumn + 1);\n\t\t\thoverController.showContentHover(range, HoverStartMode.Immediate, HoverStartSource.Mouse, false, true);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAC3B,SAAS,aAAa,mBAAmB,uBAAuB;AAChE,SAAS,oBAAoB;AAC7B,SAAS,aAAa;AACtB,SAAS,2BAA2B;AACpC,SAAS,yCAAyC;AAClD,SAAS,8BAA8B;AACvC,SAAS,gBAAgB,wBAAwB;AAE1C,MAAM,qCAAqC,WAA0C;AAAA;AAAA,EAM3F,YAA6B,SAC3B;AACD,UAAM;AAFsB;AAG5B,SAAK,UAAU,QAAQ,YAAY,CAAC,MAAM,KAAK,YAAY,CAAC,CAAC,CAAC;AAAA,EAC/D;AAAA,EAxBD,OAc4F;AAAA;AAAA;AAAA,EAE3F,OAAuB,KAAa;AAAA,EAEpC,OAAgB,iBAAiB;AAAA,EAQxB,UAAgB;AACxB,UAAM,QAAQ;AAAA,EACf;AAAA,EAEQ,YAAY,YAA+B;AAElD,UAAM,6BAA6B,KAAK,QAAQ,UAAU,aAAa,0BAA0B;AACjG,QAAI,+BAA+B,WAAW,+BAA+B,iBAAiB;AAC7F;AAAA,IACD;AAEA,UAAM,SAAS,WAAW;AAE1B,QAAI,OAAO,SAAS,gBAAgB,cAAc;AACjD;AAAA,IACD;AAEA,QAAI,CAAC,OAAO,OAAO,cAAc;AAChC;AAAA,IACD;AAEA,QAAI,OAAO,OAAO,aAAa,QAAQ,iBAAiB,mCAAmC;AAC1F;AAAA,IACD;AAEA,QAAI,CAAC,OAAO,OAAO;AAClB;AAAA,IACD;AAEA,UAAM,kBAAkB,KAAK,QAAQ,gBAAwC,uBAAuB,EAAE;AACtG,QAAI,CAAC,iBAAiB;AACrB;AAAA,IACD;AACA,QAAI,CAAC,gBAAgB,sBAAsB;AAC1C,YAAM,QAAQ,IAAI,MAAM,OAAO,MAAM,iBAAiB,OAAO,MAAM,cAAc,GAAG,OAAO,MAAM,eAAe,OAAO,MAAM,YAAY,CAAC;AAC1I,sBAAgB,iBAAiB,OAAO,eAAe,WAAW,iBAAiB,OAAO,OAAO,IAAI;AAAA,IACtG;AAAA,EACD;AACD;",
  "names": []
}
