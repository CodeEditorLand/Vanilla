{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/hoverColorPicker/hoverColorPickerContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IEditorMouseEvent,\n\tMouseTargetType,\n} from \"../../../../browser/editorBrowser.js\";\nimport { EditorOption } from \"../../../../common/config/editorOptions.js\";\nimport { Range } from \"../../../../common/core/range.js\";\nimport type { IEditorContribution } from \"../../../../common/editorCommon.js\";\nimport { ContentHoverController } from \"../../../hover/browser/contentHoverController.js\";\nimport {\n\tHoverStartMode,\n\tHoverStartSource,\n} from \"../../../hover/browser/hoverOperation.js\";\nimport { ColorDecorationInjectedTextMarker } from \"../colorDetector.js\";\n\nexport class HoverColorPickerContribution\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID: string = \"editor.contrib.colorContribution\";\n\n\tstatic readonly RECOMPUTE_TIME = 1000; // ms\n\n\tconstructor(private readonly _editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate onMouseDown(mouseEvent: IEditorMouseEvent) {\n\t\tconst colorDecoratorsActivatedOn = this._editor.getOption(\n\t\t\tEditorOption.colorDecoratorsActivatedOn,\n\t\t);\n\t\tif (\n\t\t\tcolorDecoratorsActivatedOn !== \"click\" &&\n\t\t\tcolorDecoratorsActivatedOn !== \"clickAndHover\"\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = mouseEvent.target;\n\n\t\tif (target.type !== MouseTargetType.CONTENT_TEXT) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.detail.injectedText) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\ttarget.detail.injectedText.options.attachedData !==\n\t\t\tColorDecorationInjectedTextMarker\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.range) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hoverController =\n\t\t\tthis._editor.getContribution<ContentHoverController>(\n\t\t\t\tContentHoverController.ID,\n\t\t\t);\n\t\tif (!hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tif (!hoverController.isColorPickerVisible) {\n\t\t\tconst range = new Range(\n\t\t\t\ttarget.range.startLineNumber,\n\t\t\t\ttarget.range.startColumn + 1,\n\t\t\t\ttarget.range.endLineNumber,\n\t\t\t\ttarget.range.endColumn + 1,\n\t\t\t);\n\t\t\thoverController.showContentHover(\n\t\t\t\trange,\n\t\t\t\tHoverStartMode.Immediate,\n\t\t\t\tHoverStartSource.Mouse,\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAC3B;AAAA,EAGC;AAAA,OACM;AACP,SAAS,oBAAoB;AAC7B,SAAS,aAAa;AAEtB,SAAS,8BAA8B;AACvC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,yCAAyC;AAE3C,MAAM,qCACJ,WAET;AAAA;AAAA,EAKC,YAA6B,SAAsB;AAClD,UAAM;AADsB;AAE5B,SAAK,UAAU,QAAQ,YAAY,CAAC,MAAM,KAAK,YAAY,CAAC,CAAC,CAAC;AAAA,EAC/D;AAAA,EAhCD,OAwBA;AAAA;AAAA;AAAA,EACC,OAAuB,KAAa;AAAA,EAEpC,OAAgB,iBAAiB;AAAA,EAOxB,UAAgB;AACxB,UAAM,QAAQ;AAAA,EACf;AAAA,EAEQ,YAAY,YAA+B;AAClD,UAAM,6BAA6B,KAAK,QAAQ;AAAA,MAC/C,aAAa;AAAA,IACd;AACA,QACC,+BAA+B,WAC/B,+BAA+B,iBAC9B;AACD;AAAA,IACD;AAEA,UAAM,SAAS,WAAW;AAE1B,QAAI,OAAO,SAAS,gBAAgB,cAAc;AACjD;AAAA,IACD;AAEA,QAAI,CAAC,OAAO,OAAO,cAAc;AAChC;AAAA,IACD;AAEA,QACC,OAAO,OAAO,aAAa,QAAQ,iBACnC,mCACC;AACD;AAAA,IACD;AAEA,QAAI,CAAC,OAAO,OAAO;AAClB;AAAA,IACD;AAEA,UAAM,kBACL,KAAK,QAAQ;AAAA,MACZ,uBAAuB;AAAA,IACxB;AACD,QAAI,CAAC,iBAAiB;AACrB;AAAA,IACD;AACA,QAAI,CAAC,gBAAgB,sBAAsB;AAC1C,YAAM,QAAQ,IAAI;AAAA,QACjB,OAAO,MAAM;AAAA,QACb,OAAO,MAAM,cAAc;AAAA,QAC3B,OAAO,MAAM;AAAA,QACb,OAAO,MAAM,YAAY;AAAA,MAC1B;AACA,sBAAgB;AAAA,QACf;AAAA,QACA,eAAe;AAAA,QACf,iBAAiB;AAAA,QACjB;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
