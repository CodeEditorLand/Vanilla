{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/colorPickerParticipantUtils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension } from '../../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { IActiveCodeEditor, ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { ISingleEditOperation } from '../../../common/core/editOperation.js';\nimport { DocumentColorProvider, IColorInformation } from '../../../common/languages.js';\nimport { ITextModel, TrackedRangeStickiness } from '../../../common/model.js';\nimport { getColorPresentations } from './color.js';\nimport { ColorHover, HoverColorPickerParticipant } from './hoverColorPicker/hoverColorPickerParticipant.js';\nimport { ColorPickerModel } from './colorPickerModel.js';\nimport { ColorPickerWidget } from './hoverColorPicker/hoverColorPickerWidget.js';\nimport { StandaloneColorPickerHover, StandaloneColorPickerParticipant } from './standaloneColorPicker/standaloneColorPickerParticipant.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IEditorHoverRenderContext } from '../../hover/browser/hoverTypes.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\n\nexport async function createColorHover<T extends HoverColorPickerParticipant | StandaloneColorPickerParticipant>(participant: T, editorModel: ITextModel, colorInfo: IColorInformation, provider: DocumentColorProvider): Promise<T extends HoverColorPickerParticipant ? ColorHover : StandaloneColorPickerHover>;\nexport async function createColorHover(participant: HoverColorPickerParticipant | StandaloneColorPickerParticipant, editorModel: ITextModel, colorInfo: IColorInformation, provider: DocumentColorProvider): Promise<ColorHover | StandaloneColorPickerHover> {\n\tconst originalText = editorModel.getValueInRange(colorInfo.range);\n\tconst { red, green, blue, alpha } = colorInfo.color;\n\tconst rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\n\tconst color = new Color(rgba);\n\n\tconst colorPresentations = await getColorPresentations(editorModel, colorInfo, provider, CancellationToken.None);\n\tconst model = new ColorPickerModel(color, [], 0);\n\tmodel.colorPresentations = colorPresentations || [];\n\tmodel.guessColorPresentation(color, originalText);\n\n\tif (participant instanceof HoverColorPickerParticipant) {\n\t\treturn new ColorHover(participant, Range.lift(colorInfo.range), model, provider);\n\t} else {\n\t\treturn new StandaloneColorPickerHover(participant, Range.lift(colorInfo.range), model, provider);\n\t}\n}\n\nexport function renderHoverParts<T extends (ColorHover | StandaloneColorPickerHover)>(participant: HoverColorPickerParticipant | StandaloneColorPickerParticipant, editor: ICodeEditor, themeService: IThemeService, hoverParts: T[], context: IEditorHoverRenderContext): { hoverPart: T; colorPicker: ColorPickerWidget; disposables: DisposableStore } | undefined {\n\tif (hoverParts.length === 0 || !editor.hasModel()) {\n\t\treturn undefined;\n\t}\n\tif (context.setMinimumDimensions) {\n\t\tconst minimumHeight = editor.getOption(EditorOption.lineHeight) + 8;\n\t\tcontext.setMinimumDimensions(new Dimension(302, minimumHeight));\n\t}\n\n\tconst disposables = new DisposableStore();\n\tconst colorHover = hoverParts[0];\n\tconst editorModel = editor.getModel();\n\tconst model = colorHover.model;\n\tconst colorPicker = disposables.add(new ColorPickerWidget(context.fragment, model, editor.getOption(EditorOption.pixelRatio), themeService, participant instanceof StandaloneColorPickerParticipant));\n\n\tlet editorUpdatedByColorPicker = false;\n\tlet range = new Range(colorHover.range.startLineNumber, colorHover.range.startColumn, colorHover.range.endLineNumber, colorHover.range.endColumn);\n\tif (participant instanceof StandaloneColorPickerParticipant) {\n\t\tconst color = colorHover.model.color;\n\t\tparticipant.color = color;\n\t\tupdateColorPresentations(editorModel, model, color, range, colorHover);\n\t\tdisposables.add(model.onColorFlushed((color: Color) => {\n\t\t\tparticipant.color = color;\n\t\t}));\n\t} else {\n\t\tdisposables.add(model.onColorFlushed(async (color: Color) => {\n\t\t\tawait updateColorPresentations(editorModel, model, color, range, colorHover);\n\t\t\teditorUpdatedByColorPicker = true;\n\t\t\trange = updateEditorModel(editor, range, model);\n\t\t}));\n\t}\n\tdisposables.add(model.onDidChangeColor((color: Color) => {\n\t\tupdateColorPresentations(editorModel, model, color, range, colorHover);\n\t}));\n\tdisposables.add(editor.onDidChangeModelContent((e) => {\n\t\tif (editorUpdatedByColorPicker) {\n\t\t\teditorUpdatedByColorPicker = false;\n\t\t} else {\n\t\t\tcontext.hide();\n\t\t\teditor.focus();\n\t\t}\n\t}));\n\treturn { hoverPart: colorHover, colorPicker, disposables };\n}\n\nexport function updateEditorModel(editor: IActiveCodeEditor, range: Range, model: ColorPickerModel): Range {\n\tconst textEdits: ISingleEditOperation[] = [];\n\tconst edit = model.presentation.textEdit ?? { range, text: model.presentation.label, forceMoveMarkers: false };\n\ttextEdits.push(edit);\n\n\tif (model.presentation.additionalTextEdits) {\n\t\ttextEdits.push(...model.presentation.additionalTextEdits);\n\t}\n\tconst replaceRange = Range.lift(edit.range);\n\tconst trackedRange = editor.getModel()._setTrackedRange(null, replaceRange, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter);\n\teditor.executeEdits('colorpicker', textEdits);\n\teditor.pushUndoStop();\n\treturn editor.getModel()._getTrackedRange(trackedRange) ?? replaceRange;\n}\n\nexport async function updateColorPresentations(editorModel: ITextModel, colorPickerModel: ColorPickerModel, color: Color, range: Range, colorHover: ColorHover | StandaloneColorPickerHover) {\n\tconst colorPresentations = await getColorPresentations(editorModel, {\n\t\trange: range,\n\t\tcolor: {\n\t\t\tred: color.rgba.r / 255,\n\t\t\tgreen: color.rgba.g / 255,\n\t\t\tblue: color.rgba.b / 255,\n\t\t\talpha: color.rgba.a\n\t\t}\n\t}, colorHover.provider, CancellationToken.None);\n\tcolorPickerModel.colorPresentations = colorPresentations || [];\n}\n"],
  "mappings": ";;AAKA,SAAS,iBAAiB;AAC1B,SAAS,yBAAyB;AAClC,SAAS,OAAO,YAAY;AAC5B,SAAS,uBAAuB;AAChC,SAAS,mBAAmB,mBAAmB;AAC/C,SAAS,oBAAoB;AAC7B,SAAS,4BAA4B;AACrC,SAAS,uBAAuB,yBAAyB;AACzD,SAAS,YAAY,8BAA8B;AACnD,SAAS,6BAA6B;AACtC,SAAS,YAAY,mCAAmC;AACxD,SAAS,wBAAwB;AACjC,SAAS,yBAAyB;AAClC,SAAS,4BAA4B,wCAAwC;AAC7E,SAAS,aAAa;AACtB,SAAS,iCAAiC;AAC1C,SAAS,qBAAqB;AAG9B,eAAsB,iBAAiB,aAA6E,aAAyB,WAA8B,UAAmF;AAC7P,QAAM,eAAe,YAAY,gBAAgB,UAAU,KAAK;AAChE,QAAM,EAAE,KAAK,OAAO,MAAM,MAAM,IAAI,UAAU;AAC9C,QAAM,OAAO,IAAI,KAAK,KAAK,MAAM,MAAM,GAAG,GAAG,KAAK,MAAM,QAAQ,GAAG,GAAG,KAAK,MAAM,OAAO,GAAG,GAAG,KAAK;AACnG,QAAM,QAAQ,IAAI,MAAM,IAAI;AAE5B,QAAM,qBAAqB,MAAM,sBAAsB,aAAa,WAAW,UAAU,kBAAkB,IAAI;AAC/G,QAAM,QAAQ,IAAI,iBAAiB,OAAO,CAAC,GAAG,CAAC;AAC/C,QAAM,qBAAqB,sBAAsB,CAAC;AAClD,QAAM,uBAAuB,OAAO,YAAY;AAEhD,MAAI,uBAAuB,6BAA6B;AACvD,WAAO,IAAI,WAAW,aAAa,MAAM,KAAK,UAAU,KAAK,GAAG,OAAO,QAAQ;AAAA,EAChF,OAAO;AACN,WAAO,IAAI,2BAA2B,aAAa,MAAM,KAAK,UAAU,KAAK,GAAG,OAAO,QAAQ;AAAA,EAChG;AACD;AAhBsB;AAkBf,SAAS,iBAAsE,aAA6E,QAAqB,cAA6B,YAAiB,SAAgI;AACrW,MAAI,WAAW,WAAW,KAAK,CAAC,OAAO,SAAS,GAAG;AAClD,WAAO;AAAA,EACR;AACA,MAAI,QAAQ,sBAAsB;AACjC,UAAM,gBAAgB,OAAO,UAAU,aAAa,UAAU,IAAI;AAClE,YAAQ,qBAAqB,IAAI,UAAU,KAAK,aAAa,CAAC;AAAA,EAC/D;AAEA,QAAM,cAAc,IAAI,gBAAgB;AACxC,QAAM,aAAa,WAAW,CAAC;AAC/B,QAAM,cAAc,OAAO,SAAS;AACpC,QAAM,QAAQ,WAAW;AACzB,QAAM,cAAc,YAAY,IAAI,IAAI,kBAAkB,QAAQ,UAAU,OAAO,OAAO,UAAU,aAAa,UAAU,GAAG,cAAc,uBAAuB,gCAAgC,CAAC;AAEpM,MAAI,6BAA6B;AACjC,MAAI,QAAQ,IAAI,MAAM,WAAW,MAAM,iBAAiB,WAAW,MAAM,aAAa,WAAW,MAAM,eAAe,WAAW,MAAM,SAAS;AAChJ,MAAI,uBAAuB,kCAAkC;AAC5D,UAAM,QAAQ,WAAW,MAAM;AAC/B,gBAAY,QAAQ;AACpB,6BAAyB,aAAa,OAAO,OAAO,OAAO,UAAU;AACrE,gBAAY,IAAI,MAAM,eAAe,CAACA,WAAiB;AACtD,kBAAY,QAAQA;AAAA,IACrB,CAAC,CAAC;AAAA,EACH,OAAO;AACN,gBAAY,IAAI,MAAM,eAAe,OAAO,UAAiB;AAC5D,YAAM,yBAAyB,aAAa,OAAO,OAAO,OAAO,UAAU;AAC3E,mCAA6B;AAC7B,cAAQ,kBAAkB,QAAQ,OAAO,KAAK;AAAA,IAC/C,CAAC,CAAC;AAAA,EACH;AACA,cAAY,IAAI,MAAM,iBAAiB,CAAC,UAAiB;AACxD,6BAAyB,aAAa,OAAO,OAAO,OAAO,UAAU;AAAA,EACtE,CAAC,CAAC;AACF,cAAY,IAAI,OAAO,wBAAwB,CAAC,MAAM;AACrD,QAAI,4BAA4B;AAC/B,mCAA6B;AAAA,IAC9B,OAAO;AACN,cAAQ,KAAK;AACb,aAAO,MAAM;AAAA,IACd;AAAA,EACD,CAAC,CAAC;AACF,SAAO,EAAE,WAAW,YAAY,aAAa,YAAY;AAC1D;AA3CgB;AA6CT,SAAS,kBAAkB,QAA2B,OAAc,OAAgC;AAC1G,QAAM,YAAoC,CAAC;AAC3C,QAAM,OAAO,MAAM,aAAa,YAAY,EAAE,OAAO,MAAM,MAAM,aAAa,OAAO,kBAAkB,MAAM;AAC7G,YAAU,KAAK,IAAI;AAEnB,MAAI,MAAM,aAAa,qBAAqB;AAC3C,cAAU,KAAK,GAAG,MAAM,aAAa,mBAAmB;AAAA,EACzD;AACA,QAAM,eAAe,MAAM,KAAK,KAAK,KAAK;AAC1C,QAAM,eAAe,OAAO,SAAS,EAAE,iBAAiB,MAAM,cAAc,uBAAuB,wBAAwB;AAC3H,SAAO,aAAa,eAAe,SAAS;AAC5C,SAAO,aAAa;AACpB,SAAO,OAAO,SAAS,EAAE,iBAAiB,YAAY,KAAK;AAC5D;AAbgB;AAehB,eAAsB,yBAAyB,aAAyB,kBAAoC,OAAc,OAAc,YAAqD;AAC5L,QAAM,qBAAqB,MAAM,sBAAsB,aAAa;AAAA,IACnE;AAAA,IACA,OAAO;AAAA,MACN,KAAK,MAAM,KAAK,IAAI;AAAA,MACpB,OAAO,MAAM,KAAK,IAAI;AAAA,MACtB,MAAM,MAAM,KAAK,IAAI;AAAA,MACrB,OAAO,MAAM,KAAK;AAAA,IACnB;AAAA,EACD,GAAG,WAAW,UAAU,kBAAkB,IAAI;AAC9C,mBAAiB,qBAAqB,sBAAsB,CAAC;AAC9D;AAXsB;",
  "names": ["color"]
}
