import{Dimension as H}from"../../../../base/browser/dom.js";import{CancellationToken as P}from"../../../../base/common/cancellation.js";import{Color as h,RGBA as M}from"../../../../base/common/color.js";import{DisposableStore as T}from"../../../../base/common/lifecycle.js";import{EditorOption as f}from"../../../common/config/editorOptions.js";import{TrackedRangeStickiness as x}from"../../../common/model.js";import{getColorPresentations as u}from"./color.js";import{ColorHover as I,HoverColorPickerParticipant as S}from"./hoverColorPicker/hoverColorPickerParticipant.js";import{ColorPickerModel as b}from"./colorPickerModel.js";import{ColorPickerWidget as E}from"./hoverColorPicker/hoverColorPickerWidget.js";import{StandaloneColorPickerHover as R,StandaloneColorPickerParticipant as k}from"./standaloneColorPicker/standaloneColorPickerParticipant.js";import{Range as C}from"../../../common/core/range.js";async function ro(e,r,o,a){const l=r.getValueInRange(o.range),{red:i,green:n,blue:m,alpha:s}=o.color,g=new M(Math.round(i*255),Math.round(n*255),Math.round(m*255),s),c=new h(g),d=await u(r,o,a,P.None),t=new b(c,[],0);return t.colorPresentations=d||[],t.guessColorPresentation(c,l),e instanceof S?new I(e,C.lift(o.range),t,a):new R(e,C.lift(o.range),t,a)}function no(e,r,o,a,l){if(a.length===0||!r.hasModel())return;if(l.setMinimumDimensions){const t=r.getOption(f.lineHeight)+8;l.setMinimumDimensions(new H(302,t))}const i=new T,n=a[0],m=r.getModel(),s=n.model,g=i.add(new E(l.fragment,s,r.getOption(f.pixelRatio),o,e instanceof k));let c=!1,d=new C(n.range.startLineNumber,n.range.startColumn,n.range.endLineNumber,n.range.endColumn);if(e instanceof k){const t=n.model.color;e.color=t,p(m,s,t,d,n),i.add(s.onColorFlushed(v=>{e.color=v}))}else i.add(s.onColorFlushed(async t=>{await p(m,s,t,d,n),c=!0,d=w(r,d,s)}));return i.add(s.onDidChangeColor(t=>{p(m,s,t,d,n)})),i.add(r.onDidChangeModelContent(t=>{c?c=!1:(l.hide(),r.focus())})),{hoverPart:n,colorPicker:g,disposables:i}}function w(e,r,o){const a=[],l=o.presentation.textEdit??{range:r,text:o.presentation.label,forceMoveMarkers:!1};a.push(l),o.presentation.additionalTextEdits&&a.push(...o.presentation.additionalTextEdits);const i=C.lift(l.range),n=e.getModel()._setTrackedRange(null,i,x.GrowsOnlyWhenTypingAfter);return e.executeEdits("colorpicker",a),e.pushUndoStop(),e.getModel()._getTrackedRange(n)??i}async function p(e,r,o,a,l){const i=await u(e,{range:a,color:{red:o.rgba.r/255,green:o.rgba.g/255,blue:o.rgba.b/255,alpha:o.rgba.a}},l.provider,P.None);r.colorPresentations=i||[]}export{ro as createColorHover,no as renderHoverParts,p as updateColorPresentations,w as updateEditorModel};
