import{Dimension as h}from"../../../../base/browser/dom.js";import{CancellationToken as P}from"../../../../base/common/cancellation.js";import{Color as H,RGBA as M}from"../../../../base/common/color.js";import{DisposableStore as T}from"../../../../base/common/lifecycle.js";import{EditorOption as f}from"../../../common/config/editorOptions.js";import{Range as p}from"../../../common/core/range.js";import{TrackedRangeStickiness as x}from"../../../common/model.js";import{getColorPresentations as u}from"./color.js";import{ColorPickerModel as I}from"./colorPickerModel.js";import{ColorHover as S,HoverColorPickerParticipant as b}from"./hoverColorPicker/hoverColorPickerParticipant.js";import{ColorPickerWidget as w}from"./hoverColorPicker/hoverColorPickerWidget.js";import{StandaloneColorPickerHover as E,StandaloneColorPickerParticipant as v}from"./standaloneColorPicker/standaloneColorPickerParticipant.js";async function _(e,r,o,a){const l=r.getValueInRange(o.range),{red:i,green:t,blue:m,alpha:s}=o.color,C=new M(Math.round(i*255),Math.round(t*255),Math.round(m*255),s),c=new H(C),d=await u(r,o,a,P.None),n=new I(c,[],0);return n.colorPresentations=d||[],n.guessColorPresentation(c,l),e instanceof b?new S(e,p.lift(o.range),n,a):new E(e,p.lift(o.range),n,a)}function V(e,r,o,a,l){if(a.length===0||!r.hasModel())return;if(l.setMinimumDimensions){const n=r.getOption(f.lineHeight)+8;l.setMinimumDimensions(new h(302,n))}const i=new T,t=a[0],m=r.getModel(),s=t.model,C=i.add(new w(l.fragment,s,r.getOption(f.pixelRatio),o,e instanceof v));let c=!1,d=new p(t.range.startLineNumber,t.range.startColumn,t.range.endLineNumber,t.range.endColumn);if(e instanceof v){const n=t.model.color;e.color=n,g(m,s,n,d,t),i.add(s.onColorFlushed(k=>{e.color=k}))}else i.add(s.onColorFlushed(async n=>{await g(m,s,n,d,t),c=!0,d=y(r,d,s)}));return i.add(s.onDidChangeColor(n=>{g(m,s,n,d,t)})),i.add(r.onDidChangeModelContent(n=>{c?c=!1:(l.hide(),r.focus())})),{hoverPart:t,colorPicker:C,disposables:i}}function y(e,r,o){const a=[],l=o.presentation.textEdit??{range:r,text:o.presentation.label,forceMoveMarkers:!1};a.push(l),o.presentation.additionalTextEdits&&a.push(...o.presentation.additionalTextEdits);const i=p.lift(l.range),t=e.getModel()._setTrackedRange(null,i,x.GrowsOnlyWhenTypingAfter);return e.executeEdits("colorpicker",a),e.pushUndoStop(),e.getModel()._getTrackedRange(t)??i}async function g(e,r,o,a,l){const i=await u(e,{range:a,color:{red:o.rgba.r/255,green:o.rgba.g/255,blue:o.rgba.b/255,alpha:o.rgba.a}},l.provider,P.None);r.colorPresentations=i||[]}export{_ as createColorHover,V as renderHoverParts,g as updateColorPresentations,y as updateEditorModel};
