{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/standaloneColorPicker/standaloneColorPickerActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode } from \"../../../../../base/common/keyCodes.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport { MenuId } from \"../../../../../platform/actions/common/actions.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorAction2,\n\ttype ServicesAccessor,\n} from \"../../../../browser/editorExtensions.js\";\nimport { EditorContextKeys } from \"../../../../common/editorContextKeys.js\";\nimport { StandaloneColorPickerController } from \"./standaloneColorPickerController.js\";\n\nexport class ShowOrFocusStandaloneColorPicker extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.showOrFocusStandaloneColorPicker\",\n\t\t\ttitle: {\n\t\t\t\t...localize2(\n\t\t\t\t\t\"showOrFocusStandaloneColorPicker\",\n\t\t\t\t\t\"Show or Focus Standalone Color Picker\",\n\t\t\t\t),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"mishowOrFocusStandaloneColorPicker\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Show or Focus Standalone Color Picker\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tprecondition: undefined,\n\t\t\tmenu: [{ id: MenuId.CommandPalette }],\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"showOrFocusStandaloneColorPickerDescription\",\n\t\t\t\t\t\"Show or focus a standalone color picker which uses the default color provider. It displays hex/rgb/hsl colors.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\trunEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\tStandaloneColorPickerController.get(editor)?.showOrFocus();\n\t}\n}\n\nexport class HideStandaloneColorPicker extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.hideColorPicker\",\n\t\t\tlabel: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: \"hideColorPicker\",\n\t\t\t\t\tcomment: [\"Action that hides the color picker\"],\n\t\t\t\t},\n\t\t\t\t\"Hide the Color Picker\",\n\t\t\t),\n\t\t\talias: \"Hide the Color Picker\",\n\t\t\tprecondition:\n\t\t\t\tEditorContextKeys.standaloneColorPickerVisible.isEqualTo(true),\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"hideColorPickerDescription\",\n\t\t\t\t\t\"Hide the standalone color picker.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tStandaloneColorPickerController.get(editor)?.hide();\n\t}\n}\n\nexport class InsertColorWithStandaloneColorPicker extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.insertColorWithStandaloneColorPicker\",\n\t\t\tlabel: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: \"insertColorWithStandaloneColorPicker\",\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\"Action that inserts color with standalone color picker\",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t\"Insert Color with Standalone Color Picker\",\n\t\t\t),\n\t\t\talias: \"Insert Color with Standalone Color Picker\",\n\t\t\tprecondition:\n\t\t\t\tEditorContextKeys.standaloneColorPickerFocused.isEqualTo(true),\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"insertColorWithStandaloneColorPickerDescription\",\n\t\t\t\t\t\"Insert hex/rgb/hsl colors with the focused standalone color picker.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tStandaloneColorPickerController.get(editor)?.insertColor();\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,UAAU,iBAAiB;AACpC,SAAS,cAAc;AACvB,SAAS,wBAAwB;AAEjC;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AACP,SAAS,yBAAyB;AAClC,SAAS,uCAAuC;AAEzC,MAAM,yCAAyC,cAAc;AAAA,EAlBpE,OAkBoE;AAAA;AAAA;AAAA,EACnE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN,GAAG;AAAA,UACF;AAAA,UACA;AAAA,QACD;AAAA,QACA,eAAe;AAAA,UACd;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA,cAAc;AAAA,MACd,MAAM,CAAC,EAAE,IAAI,OAAO,eAAe,CAAC;AAAA,MACpC,UAAU;AAAA,QACT,aAAa;AAAA,UACZ;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACA,iBAAiB,WAA6B,QAAqB;AAClE,oCAAgC,IAAI,MAAM,GAAG,YAAY;AAAA,EAC1D;AACD;AAEO,MAAM,kCAAkC,aAAa;AAAA,EAlD5D,OAkD4D;AAAA;AAAA;AAAA,EAC3D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,UACC,KAAK;AAAA,UACL,SAAS,CAAC,oCAAoC;AAAA,QAC/C;AAAA,QACA;AAAA,MACD;AAAA,MACA,OAAO;AAAA,MACP,cACC,kBAAkB,6BAA6B,UAAU,IAAI;AAAA,MAC9D,QAAQ;AAAA,QACP,SAAS,QAAQ;AAAA,QACjB,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,MACA,UAAU;AAAA,QACT,aAAa;AAAA,UACZ;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACO,IAAI,WAA6B,QAA2B;AAClE,oCAAgC,IAAI,MAAM,GAAG,KAAK;AAAA,EACnD;AACD;AAEO,MAAM,6CAA6C,aAAa;AAAA,EAjFvE,OAiFuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,UACC,KAAK;AAAA,UACL,SAAS;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,MACD;AAAA,MACA,OAAO;AAAA,MACP,cACC,kBAAkB,6BAA6B,UAAU,IAAI;AAAA,MAC9D,QAAQ;AAAA,QACP,SAAS,QAAQ;AAAA,QACjB,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,MACA,UAAU;AAAA,QACT,aAAa;AAAA,UACZ;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACO,IAAI,WAA6B,QAA2B;AAClE,oCAAgC,IAAI,MAAM,GAAG,YAAY;AAAA,EAC1D;AACD;",
  "names": []
}
