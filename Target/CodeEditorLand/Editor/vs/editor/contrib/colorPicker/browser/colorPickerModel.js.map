{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/colorPickerModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Color } from \"../../../../base/common/color.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport type { IColorPresentation } from \"../../../common/languages.js\";\n\nexport class ColorPickerModel {\n\treadonly originalColor: Color;\n\tprivate _color: Color;\n\n\tget color(): Color {\n\t\treturn this._color;\n\t}\n\n\tset color(color: Color) {\n\t\tif (this._color.equals(color)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._color = color;\n\t\tthis._onDidChangeColor.fire(color);\n\t}\n\n\tget presentation(): IColorPresentation {\n\t\treturn this.colorPresentations[this.presentationIndex];\n\t}\n\n\tprivate _colorPresentations: IColorPresentation[];\n\n\tget colorPresentations(): IColorPresentation[] {\n\t\treturn this._colorPresentations;\n\t}\n\n\tset colorPresentations(colorPresentations: IColorPresentation[]) {\n\t\tthis._colorPresentations = colorPresentations;\n\t\tif (this.presentationIndex > colorPresentations.length - 1) {\n\t\t\tthis.presentationIndex = 0;\n\t\t}\n\t\tthis._onDidChangePresentation.fire(this.presentation);\n\t}\n\n\tprivate readonly _onColorFlushed = new Emitter<Color>();\n\treadonly onColorFlushed: Event<Color> = this._onColorFlushed.event;\n\n\tprivate readonly _onDidChangeColor = new Emitter<Color>();\n\treadonly onDidChangeColor: Event<Color> = this._onDidChangeColor.event;\n\n\tprivate readonly _onDidChangePresentation =\n\t\tnew Emitter<IColorPresentation>();\n\treadonly onDidChangePresentation: Event<IColorPresentation> =\n\t\tthis._onDidChangePresentation.event;\n\n\tconstructor(\n\t\tcolor: Color,\n\t\tavailableColorPresentations: IColorPresentation[],\n\t\tprivate presentationIndex: number,\n\t) {\n\t\tthis.originalColor = color;\n\t\tthis._color = color;\n\t\tthis._colorPresentations = availableColorPresentations;\n\t}\n\n\tselectNextColorPresentation(): void {\n\t\tthis.presentationIndex =\n\t\t\t(this.presentationIndex + 1) % this.colorPresentations.length;\n\t\tthis.flushColor();\n\t\tthis._onDidChangePresentation.fire(this.presentation);\n\t}\n\n\tguessColorPresentation(color: Color, originalText: string): void {\n\t\tlet presentationIndex = -1;\n\t\tfor (let i = 0; i < this.colorPresentations.length; i++) {\n\t\t\tif (\n\t\t\t\toriginalText.toLowerCase() === this.colorPresentations[i].label\n\t\t\t) {\n\t\t\t\tpresentationIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (presentationIndex === -1) {\n\t\t\t// check which color presentation text has same prefix as original text's prefix\n\t\t\tconst originalTextPrefix = originalText.split(\"(\")[0].toLowerCase();\n\t\t\tfor (let i = 0; i < this.colorPresentations.length; i++) {\n\t\t\t\tif (\n\t\t\t\t\tthis.colorPresentations[i].label\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.startsWith(originalTextPrefix)\n\t\t\t\t) {\n\t\t\t\t\tpresentationIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tpresentationIndex !== -1 &&\n\t\t\tpresentationIndex !== this.presentationIndex\n\t\t) {\n\t\t\tthis.presentationIndex = presentationIndex;\n\t\t\tthis._onDidChangePresentation.fire(this.presentation);\n\t\t}\n\t}\n\n\tflushColor(): void {\n\t\tthis._onColorFlushed.fire(this._color);\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,eAA2B;AAG7B,MAAM,iBAAiB;AAAA,EA8C7B,YACC,OACA,6BACQ,mBACP;AADO;AAER,SAAK,gBAAgB;AACrB,SAAK,SAAS;AACd,SAAK,sBAAsB;AAAA,EAC5B;AAAA,EA/DD,OAS8B;AAAA;AAAA;AAAA,EACpB;AAAA,EACD;AAAA,EAER,IAAI,QAAe;AAClB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,MAAM,OAAc;AACvB,QAAI,KAAK,OAAO,OAAO,KAAK,GAAG;AAC9B;AAAA,IACD;AAEA,SAAK,SAAS;AACd,SAAK,kBAAkB,KAAK,KAAK;AAAA,EAClC;AAAA,EAEA,IAAI,eAAmC;AACtC,WAAO,KAAK,mBAAmB,KAAK,iBAAiB;AAAA,EACtD;AAAA,EAEQ;AAAA,EAER,IAAI,qBAA2C;AAC9C,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,mBAAmB,oBAA0C;AAChE,SAAK,sBAAsB;AAC3B,QAAI,KAAK,oBAAoB,mBAAmB,SAAS,GAAG;AAC3D,WAAK,oBAAoB;AAAA,IAC1B;AACA,SAAK,yBAAyB,KAAK,KAAK,YAAY;AAAA,EACrD;AAAA,EAEiB,kBAAkB,IAAI,QAAe;AAAA,EAC7C,iBAA+B,KAAK,gBAAgB;AAAA,EAE5C,oBAAoB,IAAI,QAAe;AAAA,EAC/C,mBAAiC,KAAK,kBAAkB;AAAA,EAEhD,2BAChB,IAAI,QAA4B;AAAA,EACxB,0BACR,KAAK,yBAAyB;AAAA,EAY/B,8BAAoC;AACnC,SAAK,qBACH,KAAK,oBAAoB,KAAK,KAAK,mBAAmB;AACxD,SAAK,WAAW;AAChB,SAAK,yBAAyB,KAAK,KAAK,YAAY;AAAA,EACrD;AAAA,EAEA,uBAAuB,OAAc,cAA4B;AAChE,QAAI,oBAAoB;AACxB,aAAS,IAAI,GAAG,IAAI,KAAK,mBAAmB,QAAQ,KAAK;AACxD,UACC,aAAa,YAAY,MAAM,KAAK,mBAAmB,CAAC,EAAE,OACzD;AACD,4BAAoB;AACpB;AAAA,MACD;AAAA,IACD;AAEA,QAAI,sBAAsB,IAAI;AAE7B,YAAM,qBAAqB,aAAa,MAAM,GAAG,EAAE,CAAC,EAAE,YAAY;AAClE,eAAS,IAAI,GAAG,IAAI,KAAK,mBAAmB,QAAQ,KAAK;AACxD,YACC,KAAK,mBAAmB,CAAC,EAAE,MACzB,YAAY,EACZ,WAAW,kBAAkB,GAC9B;AACD,8BAAoB;AACpB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,QACC,sBAAsB,MACtB,sBAAsB,KAAK,mBAC1B;AACD,WAAK,oBAAoB;AACzB,WAAK,yBAAyB,KAAK,KAAK,YAAY;AAAA,IACrD;AAAA,EACD;AAAA,EAEA,aAAmB;AAClB,SAAK,gBAAgB,KAAK,KAAK,MAAM;AAAA,EACtC;AACD;",
  "names": []
}
