{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/colorPickerModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { IColorPresentation } from '../../../common/languages.js';\n\nexport class ColorPickerModel {\n\n\treadonly originalColor: Color;\n\tprivate _color: Color;\n\n\tget color(): Color {\n\t\treturn this._color;\n\t}\n\n\tset color(color: Color) {\n\t\tif (this._color.equals(color)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._color = color;\n\t\tthis._onDidChangeColor.fire(color);\n\t}\n\n\tget presentation(): IColorPresentation { return this.colorPresentations[this.presentationIndex]; }\n\n\tprivate _colorPresentations: IColorPresentation[];\n\n\tget colorPresentations(): IColorPresentation[] {\n\t\treturn this._colorPresentations;\n\t}\n\n\tset colorPresentations(colorPresentations: IColorPresentation[]) {\n\t\tthis._colorPresentations = colorPresentations;\n\t\tif (this.presentationIndex > colorPresentations.length - 1) {\n\t\t\tthis.presentationIndex = 0;\n\t\t}\n\t\tthis._onDidChangePresentation.fire(this.presentation);\n\t}\n\n\tprivate readonly _onColorFlushed = new Emitter<Color>();\n\treadonly onColorFlushed: Event<Color> = this._onColorFlushed.event;\n\n\tprivate readonly _onDidChangeColor = new Emitter<Color>();\n\treadonly onDidChangeColor: Event<Color> = this._onDidChangeColor.event;\n\n\tprivate readonly _onDidChangePresentation = new Emitter<IColorPresentation>();\n\treadonly onDidChangePresentation: Event<IColorPresentation> = this._onDidChangePresentation.event;\n\n\tconstructor(color: Color, availableColorPresentations: IColorPresentation[], private presentationIndex: number) {\n\t\tthis.originalColor = color;\n\t\tthis._color = color;\n\t\tthis._colorPresentations = availableColorPresentations;\n\t}\n\n\tselectNextColorPresentation(): void {\n\t\tthis.presentationIndex = (this.presentationIndex + 1) % this.colorPresentations.length;\n\t\tthis.flushColor();\n\t\tthis._onDidChangePresentation.fire(this.presentation);\n\t}\n\n\tguessColorPresentation(color: Color, originalText: string): void {\n\t\tlet presentationIndex = -1;\n\t\tfor (let i = 0; i < this.colorPresentations.length; i++) {\n\t\t\tif (originalText.toLowerCase() === this.colorPresentations[i].label) {\n\t\t\t\tpresentationIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (presentationIndex === -1) {\n\t\t\t// check which color presentation text has same prefix as original text's prefix\n\t\t\tconst originalTextPrefix = originalText.split('(')[0].toLowerCase();\n\t\t\tfor (let i = 0; i < this.colorPresentations.length; i++) {\n\t\t\t\tif (this.colorPresentations[i].label.toLowerCase().startsWith(originalTextPrefix)) {\n\t\t\t\t\tpresentationIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (presentationIndex !== -1 && presentationIndex !== this.presentationIndex) {\n\t\t\tthis.presentationIndex = presentationIndex;\n\t\t\tthis._onDidChangePresentation.fire(this.presentation);\n\t\t}\n\t}\n\n\tflushColor(): void {\n\t\tthis._onColorFlushed.fire(this._color);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AACtB,SAAS,SAAS,aAAa;AAC/B,SAAS,0BAA0B;AAE5B,MAAM,iBAAiB;AAAA,EA2C7B,YAAY,OAAc,6BAA2D,mBAA2B;AAA3B;AACpF,SAAK,gBAAgB;AACrB,SAAK,SAAS;AACd,SAAK,sBAAsB;AAAA,EAC5B;AAAA,EAxDD,OAS8B;AAAA;AAAA;AAAA,EAEpB;AAAA,EACD;AAAA,EAER,IAAI,QAAe;AAClB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,MAAM,OAAc;AACvB,QAAI,KAAK,OAAO,OAAO,KAAK,GAAG;AAC9B;AAAA,IACD;AAEA,SAAK,SAAS;AACd,SAAK,kBAAkB,KAAK,KAAK;AAAA,EAClC;AAAA,EAEA,IAAI,eAAmC;AAAE,WAAO,KAAK,mBAAmB,KAAK,iBAAiB;AAAA,EAAG;AAAA,EAEzF;AAAA,EAER,IAAI,qBAA2C;AAC9C,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,mBAAmB,oBAA0C;AAChE,SAAK,sBAAsB;AAC3B,QAAI,KAAK,oBAAoB,mBAAmB,SAAS,GAAG;AAC3D,WAAK,oBAAoB;AAAA,IAC1B;AACA,SAAK,yBAAyB,KAAK,KAAK,YAAY;AAAA,EACrD;AAAA,EAEiB,kBAAkB,IAAI,QAAe;AAAA,EAC7C,iBAA+B,KAAK,gBAAgB;AAAA,EAE5C,oBAAoB,IAAI,QAAe;AAAA,EAC/C,mBAAiC,KAAK,kBAAkB;AAAA,EAEhD,2BAA2B,IAAI,QAA4B;AAAA,EACnE,0BAAqD,KAAK,yBAAyB;AAAA,EAQ5F,8BAAoC;AACnC,SAAK,qBAAqB,KAAK,oBAAoB,KAAK,KAAK,mBAAmB;AAChF,SAAK,WAAW;AAChB,SAAK,yBAAyB,KAAK,KAAK,YAAY;AAAA,EACrD;AAAA,EAEA,uBAAuB,OAAc,cAA4B;AAChE,QAAI,oBAAoB;AACxB,aAAS,IAAI,GAAG,IAAI,KAAK,mBAAmB,QAAQ,KAAK;AACxD,UAAI,aAAa,YAAY,MAAM,KAAK,mBAAmB,CAAC,EAAE,OAAO;AACpE,4BAAoB;AACpB;AAAA,MACD;AAAA,IACD;AAEA,QAAI,sBAAsB,IAAI;AAE7B,YAAM,qBAAqB,aAAa,MAAM,GAAG,EAAE,CAAC,EAAE,YAAY;AAClE,eAAS,IAAI,GAAG,IAAI,KAAK,mBAAmB,QAAQ,KAAK;AACxD,YAAI,KAAK,mBAAmB,CAAC,EAAE,MAAM,YAAY,EAAE,WAAW,kBAAkB,GAAG;AAClF,8BAAoB;AACpB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,QAAI,sBAAsB,MAAM,sBAAsB,KAAK,mBAAmB;AAC7E,WAAK,oBAAoB;AACzB,WAAK,yBAAyB,KAAK,KAAK,YAAY;AAAA,IACrD;AAAA,EACD;AAAA,EAEA,aAAmB;AAClB,SAAK,gBAAgB,KAAK,KAAK,MAAM;AAAA,EACtC;AACD;",
  "names": []
}
