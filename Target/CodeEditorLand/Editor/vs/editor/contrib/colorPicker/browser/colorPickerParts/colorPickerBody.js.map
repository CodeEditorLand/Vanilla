{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerBody.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport \"../colorPicker.css\";\nimport * as dom from \"../../../../../base/browser/dom.js\";\nimport { Color, HSVA } from \"../../../../../base/common/color.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport type { ColorPickerModel } from \"../colorPickerModel.js\";\nimport { InsertButton } from \"./colorPickerInsertButton.js\";\nimport { SaturationBox } from \"./colorPickerSaturationBox.js\";\nimport { HueStrip, OpacityStrip, type Strip } from \"./colorPickerStrip.js\";\n\nconst $ = dom.$;\n\nexport class ColorPickerBody extends Disposable {\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly _saturationBox: SaturationBox;\n\tprivate readonly _hueStrip: Strip;\n\tprivate readonly _opacityStrip: Strip;\n\tprivate readonly _insertButton: InsertButton | null = null;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly model: ColorPickerModel,\n\t\tprivate pixelRatio: number,\n\t\tisStandaloneColorPicker = false,\n\t) {\n\t\tsuper();\n\n\t\tthis._domNode = $(\".colorpicker-body\");\n\t\tdom.append(container, this._domNode);\n\n\t\tthis._saturationBox = new SaturationBox(\n\t\t\tthis._domNode,\n\t\t\tthis.model,\n\t\t\tthis.pixelRatio,\n\t\t);\n\t\tthis._register(this._saturationBox);\n\t\tthis._register(\n\t\t\tthis._saturationBox.onDidChange(\n\t\t\t\tthis.onDidSaturationValueChange,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._saturationBox.onColorFlushed(this.flushColor, this),\n\t\t);\n\n\t\tthis._opacityStrip = new OpacityStrip(\n\t\t\tthis._domNode,\n\t\t\tthis.model,\n\t\t\tisStandaloneColorPicker,\n\t\t);\n\t\tthis._register(this._opacityStrip);\n\t\tthis._register(\n\t\t\tthis._opacityStrip.onDidChange(this.onDidOpacityChange, this),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._opacityStrip.onColorFlushed(this.flushColor, this),\n\t\t);\n\n\t\tthis._hueStrip = new HueStrip(\n\t\t\tthis._domNode,\n\t\t\tthis.model,\n\t\t\tisStandaloneColorPicker,\n\t\t);\n\t\tthis._register(this._hueStrip);\n\t\tthis._register(this._hueStrip.onDidChange(this.onDidHueChange, this));\n\t\tthis._register(this._hueStrip.onColorFlushed(this.flushColor, this));\n\n\t\tif (isStandaloneColorPicker) {\n\t\t\tthis._insertButton = this._register(\n\t\t\t\tnew InsertButton(this._domNode),\n\t\t\t);\n\t\t\tthis._domNode.classList.add(\"standalone-colorpicker\");\n\t\t}\n\t}\n\n\tprivate flushColor(): void {\n\t\tthis.model.flushColor();\n\t}\n\n\tprivate onDidSaturationValueChange({\n\t\ts,\n\t\tv,\n\t}: { s: number; v: number }): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tthis.model.color = new Color(new HSVA(hsva.h, s, v, hsva.a));\n\t}\n\n\tprivate onDidOpacityChange(a: number): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tthis.model.color = new Color(new HSVA(hsva.h, hsva.s, hsva.v, a));\n\t}\n\n\tprivate onDidHueChange(value: number): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tconst h = (1 - value) * 360;\n\n\t\tthis.model.color = new Color(\n\t\t\tnew HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a),\n\t\t);\n\t}\n\n\tget domNode() {\n\t\treturn this._domNode;\n\t}\n\n\tget saturationBox() {\n\t\treturn this._saturationBox;\n\t}\n\n\tget opacityStrip() {\n\t\treturn this._opacityStrip;\n\t}\n\n\tget hueStrip() {\n\t\treturn this._hueStrip;\n\t}\n\n\tget enterButton() {\n\t\treturn this._insertButton;\n\t}\n\n\tlayout(): void {\n\t\tthis._saturationBox.layout();\n\t\tthis._opacityStrip.layout();\n\t\tthis._hueStrip.layout();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
