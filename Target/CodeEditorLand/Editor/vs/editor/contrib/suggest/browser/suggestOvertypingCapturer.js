import{DisposableStore as d}from"../../../../base/common/lifecycle.js";import"../../../browser/editorBrowser.js";import"./suggestModel.js";class a{static _maxSelectionLength=51200;_disposables=new d;_lastOvertyped=[];_locked=!1;constructor(e,i){this._disposables.add(e.onWillType(()=>{if(this._locked||!e.hasModel())return;const s=e.getSelections(),n=s.length;let o=!1;for(let t=0;t<n;t++)if(!s[t].isEmpty()){o=!0;break}if(!o){this._lastOvertyped.length!==0&&(this._lastOvertyped.length=0);return}this._lastOvertyped=[];const r=e.getModel();for(let t=0;t<n;t++){const l=s[t];if(r.getValueLengthInRange(l)>a._maxSelectionLength)return;this._lastOvertyped[t]={value:r.getValueInRange(l),multiline:l.startLineNumber!==l.endLineNumber}}})),this._disposables.add(i.onDidTrigger(s=>{this._locked=!0})),this._disposables.add(i.onDidCancel(s=>{this._locked=!1}))}getLastOvertypedInfo(e){if(e>=0&&e<this._lastOvertyped.length)return this._lastOvertyped[e]}dispose(){this._disposables.dispose()}}export{a as OvertypingCapturer};
