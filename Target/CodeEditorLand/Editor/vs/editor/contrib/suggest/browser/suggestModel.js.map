{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/browser/suggestModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { DisposableStore, dispose, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { getLeadingWhitespace, isHighSurrogate, isLowSurrogate } from '../../../../base/common/strings.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { CursorChangeReason, ICursorSelectionChangedEvent } from '../../../common/cursorEvents.js';\nimport { IPosition, Position } from '../../../common/core/position.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { CompletionContext, CompletionItemKind, CompletionItemProvider, CompletionTriggerKind } from '../../../common/languages.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { WordDistance } from './wordDistance.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CompletionModel } from './completionModel.js';\nimport { CompletionDurations, CompletionItem, CompletionOptions, getSnippetSuggestSupport, provideSuggestionItems, QuickSuggestionsOptions, SnippetSortOrder } from './suggest.js';\nimport { IWordAtPosition } from '../../../common/core/wordHelper.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { FuzzyScoreOptions } from '../../../../base/common/filters.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { InlineCompletionContextKeys } from '../../inlineCompletions/browser/controller/inlineCompletionContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\n\nexport interface ICancelEvent {\n\treadonly retrigger: boolean;\n}\n\nexport interface ITriggerEvent {\n\treadonly auto: boolean;\n\treadonly shy: boolean;\n\treadonly position: IPosition;\n}\n\nexport interface ISuggestEvent {\n\treadonly completionModel: CompletionModel;\n\treadonly isFrozen: boolean;\n\treadonly triggerOptions: SuggestTriggerOptions;\n}\n\nexport interface SuggestTriggerOptions {\n\treadonly auto: boolean;\n\treadonly shy?: boolean;\n\treadonly refilter?: boolean;\n\treadonly retrigger?: boolean;\n\treadonly triggerKind?: CompletionTriggerKind;\n\treadonly triggerCharacter?: string;\n\treadonly clipboardText?: string;\n\tcompletionOptions?: Partial<CompletionOptions>;\n}\n\nexport class LineContext {\n\n\tstatic shouldAutoTrigger(editor: ICodeEditor): boolean {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tconst pos = editor.getPosition();\n\t\tmodel.tokenization.tokenizeIfCheap(pos.lineNumber);\n\n\t\tconst word = model.getWordAtPosition(pos);\n\t\tif (!word) {\n\t\t\treturn false;\n\t\t}\n\t\tif (word.endColumn !== pos.column &&\n\t\t\tword.startColumn + 1 !== pos.column /* after typing a single character before a word */) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(Number(word.word))) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\treadonly lineNumber: number;\n\treadonly column: number;\n\treadonly leadingLineContent: string;\n\treadonly leadingWord: IWordAtPosition;\n\treadonly triggerOptions: SuggestTriggerOptions;\n\n\tconstructor(model: ITextModel, position: Position, triggerOptions: SuggestTriggerOptions) {\n\t\tthis.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n\t\tthis.leadingWord = model.getWordUntilPosition(position);\n\t\tthis.lineNumber = position.lineNumber;\n\t\tthis.column = position.column;\n\t\tthis.triggerOptions = triggerOptions;\n\t}\n}\n\nexport const enum State {\n\tIdle = 0,\n\tManual = 1,\n\tAuto = 2\n}\n\nfunction canShowQuickSuggest(editor: ICodeEditor, contextKeyService: IContextKeyService, configurationService: IConfigurationService): boolean {\n\tif (!Boolean(contextKeyService.getContextKeyValue(InlineCompletionContextKeys.inlineSuggestionVisible.key))) {\n\t\t// Allow if there is no inline suggestion.\n\t\treturn true;\n\t}\n\tconst suppressSuggestions = contextKeyService.getContextKeyValue<boolean | undefined>(InlineCompletionContextKeys.suppressSuggestions.key);\n\tif (suppressSuggestions !== undefined) {\n\t\treturn !suppressSuggestions;\n\t}\n\treturn !editor.getOption(EditorOption.inlineSuggest).suppressSuggestions;\n}\n\nfunction canShowSuggestOnTriggerCharacters(editor: ICodeEditor, contextKeyService: IContextKeyService, configurationService: IConfigurationService): boolean {\n\tif (!Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))) {\n\t\t// Allow if there is no inline suggestion.\n\t\treturn true;\n\t}\n\tconst suppressSuggestions = contextKeyService.getContextKeyValue<boolean | undefined>(InlineCompletionContextKeys.suppressSuggestions.key);\n\tif (suppressSuggestions !== undefined) {\n\t\treturn !suppressSuggestions;\n\t}\n\treturn !editor.getOption(EditorOption.inlineSuggest).suppressSuggestions;\n}\n\nexport class SuggestModel implements IDisposable {\n\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _triggerCharacterListener = new DisposableStore();\n\tprivate readonly _triggerQuickSuggest = new TimeoutTimer();\n\n\tprivate _triggerState: SuggestTriggerOptions | undefined = undefined;\n\tprivate _requestToken?: CancellationTokenSource;\n\tprivate _context?: LineContext;\n\tprivate _currentSelection: Selection;\n\n\tprivate _completionModel: CompletionModel | undefined;\n\tprivate readonly _completionDisposables = new DisposableStore();\n\tprivate readonly _onDidCancel = new Emitter<ICancelEvent>();\n\tprivate readonly _onDidTrigger = new Emitter<ITriggerEvent>();\n\tprivate readonly _onDidSuggest = new Emitter<ISuggestEvent>();\n\n\treadonly onDidCancel: Event<ICancelEvent> = this._onDidCancel.event;\n\treadonly onDidTrigger: Event<ITriggerEvent> = this._onDidTrigger.event;\n\treadonly onDidSuggest: Event<ISuggestEvent> = this._onDidSuggest.event;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IEditorWorkerService private readonly _editorWorkerService: IEditorWorkerService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IEnvironmentService private readonly _envService: IEnvironmentService,\n\t) {\n\t\tthis._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\n\n\t\t// wire up various listeners\n\t\tthis._toDispose.add(this._editor.onDidChangeModel(() => {\n\t\t\tthis._updateTriggerCharacters();\n\t\t\tthis.cancel();\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidChangeModelLanguage(() => {\n\t\t\tthis._updateTriggerCharacters();\n\t\t\tthis.cancel();\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidChangeConfiguration(() => {\n\t\t\tthis._updateTriggerCharacters();\n\t\t}));\n\t\tthis._toDispose.add(this._languageFeaturesService.completionProvider.onDidChange(() => {\n\t\t\tthis._updateTriggerCharacters();\n\t\t\tthis._updateActiveSuggestSession();\n\t\t}));\n\n\t\tlet editorIsComposing = false;\n\t\tthis._toDispose.add(this._editor.onDidCompositionStart(() => {\n\t\t\teditorIsComposing = true;\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidCompositionEnd(() => {\n\t\t\teditorIsComposing = false;\n\t\t\tthis._onCompositionEnd();\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidChangeCursorSelection(e => {\n\t\t\t// only trigger suggest when the editor isn't composing a character\n\t\t\tif (!editorIsComposing) {\n\t\t\t\tthis._onCursorChange(e);\n\t\t\t}\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidChangeModelContent(() => {\n\t\t\t// only filter completions when the editor isn't composing a character\n\t\t\t// allow-any-unicode-next-line\n\t\t\t// e.g. \u00A8 + u makes \u00FC but just \u00A8 cannot be used for filtering\n\t\t\tif (!editorIsComposing && this._triggerState !== undefined) {\n\t\t\t\tthis._refilterCompletionItems();\n\t\t\t}\n\t\t}));\n\n\t\tthis._updateTriggerCharacters();\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._triggerCharacterListener);\n\t\tdispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\n\t\tthis._toDispose.dispose();\n\t\tthis._completionDisposables.dispose();\n\t\tthis.cancel();\n\t}\n\n\tprivate _updateTriggerCharacters(): void {\n\t\tthis._triggerCharacterListener.clear();\n\n\t\tif (this._editor.getOption(EditorOption.readOnly)\n\t\t\t|| !this._editor.hasModel()\n\t\t\t|| !this._editor.getOption(EditorOption.suggestOnTriggerCharacters)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst supportsByTriggerCharacter = new Map<string, Set<CompletionItemProvider>>();\n\t\tfor (const support of this._languageFeaturesService.completionProvider.all(this._editor.getModel())) {\n\t\t\tfor (const ch of support.triggerCharacters || []) {\n\t\t\t\tlet set = supportsByTriggerCharacter.get(ch);\n\t\t\t\tif (!set) {\n\t\t\t\t\tset = new Set();\n\t\t\t\t\tconst suggestSupport = getSnippetSuggestSupport();\n\t\t\t\t\tif (suggestSupport) {\n\t\t\t\t\t\tset.add(suggestSupport);\n\t\t\t\t\t}\n\t\t\t\t\tsupportsByTriggerCharacter.set(ch, set);\n\t\t\t\t}\n\t\t\t\tset.add(support);\n\t\t\t}\n\t\t}\n\n\n\t\tconst checkTriggerCharacter = (text?: string) => {\n\n\t\t\tif (!canShowSuggestOnTriggerCharacters(this._editor, this._contextKeyService, this._configurationService)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (LineContext.shouldAutoTrigger(this._editor)) {\n\t\t\t\t// don't trigger by trigger characters when this is a case for quick suggest\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!text) {\n\t\t\t\t// came here from the compositionEnd-event\n\t\t\t\tconst position = this._editor.getPosition()!;\n\t\t\t\tconst model = this._editor.getModel()!;\n\t\t\t\ttext = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n\t\t\t}\n\n\t\t\tlet lastChar = '';\n\t\t\tif (isLowSurrogate(text.charCodeAt(text.length - 1))) {\n\t\t\t\tif (isHighSurrogate(text.charCodeAt(text.length - 2))) {\n\t\t\t\t\tlastChar = text.substr(text.length - 2);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlastChar = text.charAt(text.length - 1);\n\t\t\t}\n\n\t\t\tconst supports = supportsByTriggerCharacter.get(lastChar);\n\t\t\tif (supports) {\n\n\t\t\t\t// keep existing items that where not computed by the\n\t\t\t\t// supports/providers that want to trigger now\n\t\t\t\tconst providerItemsToReuse = new Map<CompletionItemProvider, CompletionItem[]>();\n\t\t\t\tif (this._completionModel) {\n\t\t\t\t\tfor (const [provider, items] of this._completionModel.getItemsByProvider()) {\n\t\t\t\t\t\tif (!supports.has(provider)) {\n\t\t\t\t\t\t\tproviderItemsToReuse.set(provider, items);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.trigger({\n\t\t\t\t\tauto: true,\n\t\t\t\t\ttriggerKind: CompletionTriggerKind.TriggerCharacter,\n\t\t\t\t\ttriggerCharacter: lastChar,\n\t\t\t\t\tretrigger: Boolean(this._completionModel),\n\t\t\t\t\tclipboardText: this._completionModel?.clipboardText,\n\t\t\t\t\tcompletionOptions: { providerFilter: supports, providerItemsToReuse }\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\n\t\tthis._triggerCharacterListener.add(this._editor.onDidCompositionEnd(() => checkTriggerCharacter()));\n\t}\n\n\t// --- trigger/retrigger/cancel suggest\n\n\tget state(): State {\n\t\tif (!this._triggerState) {\n\t\t\treturn State.Idle;\n\t\t} else if (!this._triggerState.auto) {\n\t\t\treturn State.Manual;\n\t\t} else {\n\t\t\treturn State.Auto;\n\t\t}\n\t}\n\n\tcancel(retrigger: boolean = false): void {\n\t\tif (this._triggerState !== undefined) {\n\t\t\tthis._triggerQuickSuggest.cancel();\n\t\t\tthis._requestToken?.cancel();\n\t\t\tthis._requestToken = undefined;\n\t\t\tthis._triggerState = undefined;\n\t\t\tthis._completionModel = undefined;\n\t\t\tthis._context = undefined;\n\t\t\tthis._onDidCancel.fire({ retrigger });\n\t\t}\n\t}\n\n\tclear() {\n\t\tthis._completionDisposables.clear();\n\t}\n\n\tprivate _updateActiveSuggestSession(): void {\n\t\tif (this._triggerState !== undefined) {\n\t\t\tif (!this._editor.hasModel() || !this._languageFeaturesService.completionProvider.has(this._editor.getModel())) {\n\t\t\t\tthis.cancel();\n\t\t\t} else {\n\t\t\t\tthis.trigger({ auto: this._triggerState.auto, retrigger: true });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _onCursorChange(e: ICursorSelectionChangedEvent): void {\n\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst prevSelection = this._currentSelection;\n\t\tthis._currentSelection = this._editor.getSelection();\n\n\t\tif (!e.selection.isEmpty()\n\t\t\t|| (e.reason !== CursorChangeReason.NotSet && e.reason !== CursorChangeReason.Explicit)\n\t\t\t|| (e.source !== 'keyboard' && e.source !== 'deleteLeft')\n\t\t) {\n\t\t\t// Early exit if nothing needs to be done!\n\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\n\t\tif (this._triggerState === undefined && e.reason === CursorChangeReason.NotSet) {\n\t\t\tif (prevSelection.containsRange(this._currentSelection) || prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\n\t\t\t\t// cursor did move RIGHT due to typing -> trigger quick suggest\n\t\t\t\tthis._doTriggerQuickSuggest();\n\t\t\t}\n\n\t\t} else if (this._triggerState !== undefined && e.reason === CursorChangeReason.Explicit) {\n\t\t\t// suggest is active and something like cursor keys are used to move\n\t\t\t// the cursor. this means we can refilter at the new position\n\t\t\tthis._refilterCompletionItems();\n\t\t}\n\t}\n\n\tprivate _onCompositionEnd(): void {\n\t\t// trigger or refilter when composition ends\n\t\tif (this._triggerState === undefined) {\n\t\t\tthis._doTriggerQuickSuggest();\n\t\t} else {\n\t\t\tthis._refilterCompletionItems();\n\t\t}\n\t}\n\n\tprivate _doTriggerQuickSuggest(): void {\n\n\t\tif (QuickSuggestionsOptions.isAllOff(this._editor.getOption(EditorOption.quickSuggestions))) {\n\t\t\t// not enabled\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._editor.getOption(EditorOption.suggest).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor)?.isInSnippet()) {\n\t\t\t// no quick suggestion when in snippet mode\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cancel();\n\n\t\tthis._triggerQuickSuggest.cancelAndSet(() => {\n\t\t\tif (this._triggerState !== undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!LineContext.shouldAutoTrigger(this._editor)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst model = this._editor.getModel();\n\t\t\tconst pos = this._editor.getPosition();\n\t\t\t// validate enabled now\n\t\t\tconst config = this._editor.getOption(EditorOption.quickSuggestions);\n\t\t\tif (QuickSuggestionsOptions.isAllOff(config)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!QuickSuggestionsOptions.isAllOn(config)) {\n\t\t\t\t// Check the type of the token that triggered this\n\t\t\t\tmodel.tokenization.tokenizeIfCheap(pos.lineNumber);\n\t\t\t\tconst lineTokens = model.tokenization.getLineTokens(pos.lineNumber);\n\t\t\t\tconst tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\n\t\t\t\tif (QuickSuggestionsOptions.valueFor(config, tokenType) !== 'on') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!canShowQuickSuggest(this._editor, this._contextKeyService, this._configurationService)) {\n\t\t\t\t// do not trigger quick suggestions if inline suggestions are shown\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._languageFeaturesService.completionProvider.has(model)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// we made it till here -> trigger now\n\t\t\tthis.trigger({ auto: true });\n\n\t\t}, this._editor.getOption(EditorOption.quickSuggestionsDelay));\n\t}\n\n\tprivate _refilterCompletionItems(): void {\n\t\tassertType(this._editor.hasModel());\n\t\tassertType(this._triggerState !== undefined);\n\n\t\tconst model = this._editor.getModel();\n\t\tconst position = this._editor.getPosition();\n\t\tconst ctx = new LineContext(model, position, { ...this._triggerState, refilter: true });\n\t\tthis._onNewContext(ctx);\n\t}\n\n\ttrigger(options: SuggestTriggerOptions): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst ctx = new LineContext(model, this._editor.getPosition(), options);\n\n\t\t// Cancel previous requests, change state & update UI\n\t\tthis.cancel(options.retrigger);\n\t\tthis._triggerState = options;\n\t\tthis._onDidTrigger.fire({ auto: options.auto, shy: options.shy ?? false, position: this._editor.getPosition() });\n\n\t\t// Capture context when request was sent\n\t\tthis._context = ctx;\n\n\t\t// Build context for request\n\t\tlet suggestCtx: CompletionContext = { triggerKind: options.triggerKind ?? CompletionTriggerKind.Invoke };\n\t\tif (options.triggerCharacter) {\n\t\t\tsuggestCtx = {\n\t\t\t\ttriggerKind: CompletionTriggerKind.TriggerCharacter,\n\t\t\t\ttriggerCharacter: options.triggerCharacter\n\t\t\t};\n\t\t}\n\n\t\tthis._requestToken = new CancellationTokenSource();\n\n\t\t// kind filter and snippet sort rules\n\t\tconst snippetSuggestions = this._editor.getOption(EditorOption.snippetSuggestions);\n\t\tlet snippetSortOrder = SnippetSortOrder.Inline;\n\t\tswitch (snippetSuggestions) {\n\t\t\tcase 'top':\n\t\t\t\tsnippetSortOrder = SnippetSortOrder.Top;\n\t\t\t\tbreak;\n\t\t\t// \t\u2193 that's the default anyways...\n\t\t\t// case 'inline':\n\t\t\t// \tsnippetSortOrder = SnippetSortOrder.Inline;\n\t\t\t// \tbreak;\n\t\t\tcase 'bottom':\n\t\t\t\tsnippetSortOrder = SnippetSortOrder.Bottom;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst { itemKind: itemKindFilter, showDeprecated } = SuggestModel.createSuggestFilter(this._editor);\n\t\tconst completionOptions = new CompletionOptions(snippetSortOrder, options.completionOptions?.kindFilter ?? itemKindFilter, options.completionOptions?.providerFilter, options.completionOptions?.providerItemsToReuse, showDeprecated);\n\t\tconst wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\n\n\t\tconst completions = provideSuggestionItems(\n\t\t\tthis._languageFeaturesService.completionProvider,\n\t\t\tmodel,\n\t\t\tthis._editor.getPosition(),\n\t\t\tcompletionOptions,\n\t\t\tsuggestCtx,\n\t\t\tthis._requestToken.token\n\t\t);\n\n\t\tPromise.all([completions, wordDistance]).then(async ([completions, wordDistance]) => {\n\n\t\t\tthis._requestToken?.dispose();\n\n\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet clipboardText = options?.clipboardText;\n\t\t\tif (!clipboardText && completions.needsClipboard) {\n\t\t\t\tclipboardText = await this._clipboardService.readText();\n\t\t\t}\n\n\t\t\tif (this._triggerState === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst model = this._editor.getModel();\n\t\t\t// const items = completions.items;\n\n\t\t\t// if (existing) {\n\t\t\t// \tconst cmpFn = getSuggestionComparator(snippetSortOrder);\n\t\t\t// \titems = items.concat(existing.items).sort(cmpFn);\n\t\t\t// }\n\n\t\t\tconst ctx = new LineContext(model, this._editor.getPosition(), options);\n\t\t\tconst fuzzySearchOptions = {\n\t\t\t\t...FuzzyScoreOptions.default,\n\t\t\t\tfirstMatchCanBeWeak: !this._editor.getOption(EditorOption.suggest).matchOnWordStartOnly\n\t\t\t};\n\t\t\tthis._completionModel = new CompletionModel(completions.items, this._context!.column, {\n\t\t\t\tleadingLineContent: ctx.leadingLineContent,\n\t\t\t\tcharacterCountDelta: ctx.column - this._context!.column\n\t\t\t},\n\t\t\t\twordDistance,\n\t\t\t\tthis._editor.getOption(EditorOption.suggest),\n\t\t\t\tthis._editor.getOption(EditorOption.snippetSuggestions),\n\t\t\t\tfuzzySearchOptions,\n\t\t\t\tclipboardText\n\t\t\t);\n\n\t\t\t// store containers so that they can be disposed later\n\t\t\tthis._completionDisposables.add(completions.disposable);\n\n\t\t\tthis._onNewContext(ctx);\n\n\t\t\t// finally report telemetry about durations\n\t\t\tthis._reportDurationsTelemetry(completions.durations);\n\n\t\t\t// report invalid completions by source\n\t\t\tif (!this._envService.isBuilt || this._envService.isExtensionDevelopment) {\n\t\t\t\tfor (const item of completions.items) {\n\t\t\t\t\tif (item.isInvalid) {\n\t\t\t\t\t\tthis._logService.warn(`[suggest] did IGNORE invalid completion item from ${item.provider._debugDisplayName}`, item.completion);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}).catch(onUnexpectedError);\n\t}\n\n\tprivate _telemetryGate: number = 0;\n\n\tprivate _reportDurationsTelemetry(durations: CompletionDurations): void {\n\n\t\tif (this._telemetryGate++ % 230 !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\ttype Durations = { data: string };\n\t\t\ttype DurationsClassification = {\n\t\t\t\towner: 'jrieken';\n\t\t\t\tcomment: 'Completions performance numbers';\n\t\t\t\tdata: { comment: 'Durations per source and overall'; classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth' };\n\t\t\t};\n\t\t\tthis._telemetryService.publicLog2<Durations, DurationsClassification>('suggest.durations.json', { data: JSON.stringify(durations) });\n\t\t\tthis._logService.debug('suggest.durations.json', durations);\n\t\t});\n\t}\n\n\tstatic createSuggestFilter(editor: ICodeEditor): { itemKind: Set<CompletionItemKind>; showDeprecated: boolean } {\n\t\t// kind filter and snippet sort rules\n\t\tconst result = new Set<CompletionItemKind>();\n\n\t\t// snippet setting\n\t\tconst snippetSuggestions = editor.getOption(EditorOption.snippetSuggestions);\n\t\tif (snippetSuggestions === 'none') {\n\t\t\tresult.add(CompletionItemKind.Snippet);\n\t\t}\n\n\t\t// type setting\n\t\tconst suggestOptions = editor.getOption(EditorOption.suggest);\n\t\tif (!suggestOptions.showMethods) { result.add(CompletionItemKind.Method); }\n\t\tif (!suggestOptions.showFunctions) { result.add(CompletionItemKind.Function); }\n\t\tif (!suggestOptions.showConstructors) { result.add(CompletionItemKind.Constructor); }\n\t\tif (!suggestOptions.showFields) { result.add(CompletionItemKind.Field); }\n\t\tif (!suggestOptions.showVariables) { result.add(CompletionItemKind.Variable); }\n\t\tif (!suggestOptions.showClasses) { result.add(CompletionItemKind.Class); }\n\t\tif (!suggestOptions.showStructs) { result.add(CompletionItemKind.Struct); }\n\t\tif (!suggestOptions.showInterfaces) { result.add(CompletionItemKind.Interface); }\n\t\tif (!suggestOptions.showModules) { result.add(CompletionItemKind.Module); }\n\t\tif (!suggestOptions.showProperties) { result.add(CompletionItemKind.Property); }\n\t\tif (!suggestOptions.showEvents) { result.add(CompletionItemKind.Event); }\n\t\tif (!suggestOptions.showOperators) { result.add(CompletionItemKind.Operator); }\n\t\tif (!suggestOptions.showUnits) { result.add(CompletionItemKind.Unit); }\n\t\tif (!suggestOptions.showValues) { result.add(CompletionItemKind.Value); }\n\t\tif (!suggestOptions.showConstants) { result.add(CompletionItemKind.Constant); }\n\t\tif (!suggestOptions.showEnums) { result.add(CompletionItemKind.Enum); }\n\t\tif (!suggestOptions.showEnumMembers) { result.add(CompletionItemKind.EnumMember); }\n\t\tif (!suggestOptions.showKeywords) { result.add(CompletionItemKind.Keyword); }\n\t\tif (!suggestOptions.showWords) { result.add(CompletionItemKind.Text); }\n\t\tif (!suggestOptions.showColors) { result.add(CompletionItemKind.Color); }\n\t\tif (!suggestOptions.showFiles) { result.add(CompletionItemKind.File); }\n\t\tif (!suggestOptions.showReferences) { result.add(CompletionItemKind.Reference); }\n\t\tif (!suggestOptions.showColors) { result.add(CompletionItemKind.Customcolor); }\n\t\tif (!suggestOptions.showFolders) { result.add(CompletionItemKind.Folder); }\n\t\tif (!suggestOptions.showTypeParameters) { result.add(CompletionItemKind.TypeParameter); }\n\t\tif (!suggestOptions.showSnippets) { result.add(CompletionItemKind.Snippet); }\n\t\tif (!suggestOptions.showUsers) { result.add(CompletionItemKind.User); }\n\t\tif (!suggestOptions.showIssues) { result.add(CompletionItemKind.Issue); }\n\n\t\treturn { itemKind: result, showDeprecated: suggestOptions.showDeprecated };\n\t}\n\n\tprivate _onNewContext(ctx: LineContext): void {\n\n\t\tif (!this._context) {\n\t\t\t// happens when 24x7 IntelliSense is enabled and still in its delay\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.lineNumber !== this._context.lineNumber) {\n\t\t\t// e.g. happens when pressing Enter while IntelliSense is computed\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\n\t\t\t// cancel IntelliSense when line start changes\n\t\t\t// happens when the current word gets outdented\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.column < this._context.column) {\n\t\t\t// typed -> moved cursor LEFT -> retrigger if still on a word\n\t\t\tif (ctx.leadingWord.word) {\n\t\t\t\tthis.trigger({ auto: this._context.triggerOptions.auto, retrigger: true });\n\t\t\t} else {\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._completionModel) {\n\t\t\t// happens when IntelliSense is not yet computed\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\n\t\t\t// started a new word while IntelliSense shows -> retrigger but reuse all items that we currently have\n\t\t\tconst shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\n\t\t\tif (shouldAutoTrigger && this._context) {\n\t\t\t\t// shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n\t\t\t\t// suggestions to be cancelled, which causes `this._context` to be undefined\n\t\t\t\tconst map = this._completionModel.getItemsByProvider();\n\t\t\t\tthis.trigger({\n\t\t\t\t\tauto: this._context.triggerOptions.auto,\n\t\t\t\t\tretrigger: true,\n\t\t\t\t\tclipboardText: this._completionModel.clipboardText,\n\t\t\t\t\tcompletionOptions: { providerItemsToReuse: map }\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.column > this._context.column && this._completionModel.getIncompleteProvider().size > 0 && ctx.leadingWord.word.length !== 0) {\n\t\t\t// typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\n\n\t\t\tconst providerItemsToReuse = new Map<CompletionItemProvider, CompletionItem[]>();\n\t\t\tconst providerFilter = new Set<CompletionItemProvider>();\n\t\t\tfor (const [provider, items] of this._completionModel.getItemsByProvider()) {\n\t\t\t\tif (items.length > 0 && items[0].container.incomplete) {\n\t\t\t\t\tproviderFilter.add(provider);\n\t\t\t\t} else {\n\t\t\t\t\tproviderItemsToReuse.set(provider, items);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.trigger({\n\t\t\t\tauto: this._context.triggerOptions.auto,\n\t\t\t\ttriggerKind: CompletionTriggerKind.TriggerForIncompleteCompletions,\n\t\t\t\tretrigger: true,\n\t\t\t\tclipboardText: this._completionModel.clipboardText,\n\t\t\t\tcompletionOptions: { providerFilter, providerItemsToReuse }\n\t\t\t});\n\n\t\t} else {\n\t\t\t// typed -> moved cursor RIGHT -> update UI\n\t\t\tconst oldLineContext = this._completionModel.lineContext;\n\t\t\tlet isFrozen = false;\n\n\t\t\tthis._completionModel.lineContext = {\n\t\t\t\tleadingLineContent: ctx.leadingLineContent,\n\t\t\t\tcharacterCountDelta: ctx.column - this._context.column\n\t\t\t};\n\n\t\t\tif (this._completionModel.items.length === 0) {\n\n\t\t\t\tconst shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\n\t\t\t\tif (!this._context) {\n\t\t\t\t\t// shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n\t\t\t\t\t// suggestions to be cancelled, which causes `this._context` to be undefined\n\t\t\t\t\tthis.cancel();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (shouldAutoTrigger && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\n\t\t\t\t\t// retrigger when heading into a new word\n\t\t\t\t\tthis.trigger({ auto: this._context.triggerOptions.auto, retrigger: true });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this._context.triggerOptions.auto) {\n\t\t\t\t\t// freeze when IntelliSense was manually requested\n\t\t\t\t\tthis._completionModel.lineContext = oldLineContext;\n\t\t\t\t\tisFrozen = this._completionModel.items.length > 0;\n\n\t\t\t\t\tif (isFrozen && ctx.leadingWord.word.length === 0) {\n\t\t\t\t\t\t// there were results before but now there aren't\n\t\t\t\t\t\t// and also we are not on a word anymore -> cancel\n\t\t\t\t\t\tthis.cancel();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\t// nothing left\n\t\t\t\t\tthis.cancel();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidSuggest.fire({\n\t\t\t\tcompletionModel: this._completionModel,\n\t\t\t\ttriggerOptions: ctx.triggerOptions,\n\t\t\t\tisFrozen,\n\t\t\t});\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["State", "completions", "wordDistance", "model", "ctx"]
}
