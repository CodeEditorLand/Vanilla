{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/browser/suggestModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TimeoutTimer } from \"../../../../base/common/async.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { FuzzyScoreOptions } from \"../../../../base/common/filters.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\tgetLeadingWhitespace,\n\tisHighSurrogate,\n\tisLowSurrogate,\n} from \"../../../../base/common/strings.js\";\nimport { assertType } from \"../../../../base/common/types.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { IPosition, Position } from \"../../../common/core/position.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport type { IWordAtPosition } from \"../../../common/core/wordHelper.js\";\nimport {\n\tCursorChangeReason,\n\ttype ICursorSelectionChangedEvent,\n} from \"../../../common/cursorEvents.js\";\nimport {\n\ttype CompletionContext,\n\tCompletionItemKind,\n\ttype CompletionItemProvider,\n\tCompletionTriggerKind,\n} from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { IEditorWorkerService } from \"../../../common/services/editorWorker.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { InlineCompletionContextKeys } from \"../../inlineCompletions/browser/controller/inlineCompletionContextKeys.js\";\nimport { SnippetController2 } from \"../../snippet/browser/snippetController2.js\";\nimport { CompletionModel } from \"./completionModel.js\";\nimport {\n\ttype CompletionDurations,\n\ttype CompletionItem,\n\tCompletionOptions,\n\tQuickSuggestionsOptions,\n\tSnippetSortOrder,\n\tgetSnippetSuggestSupport,\n\tprovideSuggestionItems,\n} from \"./suggest.js\";\nimport { WordDistance } from \"./wordDistance.js\";\n\nexport interface ICancelEvent {\n\treadonly retrigger: boolean;\n}\n\nexport interface ITriggerEvent {\n\treadonly auto: boolean;\n\treadonly shy: boolean;\n\treadonly position: IPosition;\n}\n\nexport interface ISuggestEvent {\n\treadonly completionModel: CompletionModel;\n\treadonly isFrozen: boolean;\n\treadonly triggerOptions: SuggestTriggerOptions;\n}\n\nexport interface SuggestTriggerOptions {\n\treadonly auto: boolean;\n\treadonly shy?: boolean;\n\treadonly refilter?: boolean;\n\treadonly retrigger?: boolean;\n\treadonly triggerKind?: CompletionTriggerKind;\n\treadonly triggerCharacter?: string;\n\treadonly clipboardText?: string;\n\tcompletionOptions?: Partial<CompletionOptions>;\n}\n\nexport class LineContext {\n\tstatic shouldAutoTrigger(editor: ICodeEditor): boolean {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tconst pos = editor.getPosition();\n\t\tmodel.tokenization.tokenizeIfCheap(pos.lineNumber);\n\n\t\tconst word = model.getWordAtPosition(pos);\n\t\tif (!word) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tword.endColumn !== pos.column &&\n\t\t\tword.startColumn + 1 !==\n\t\t\t\tpos.column /* after typing a single character before a word */\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(Number(word.word))) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\treadonly lineNumber: number;\n\treadonly column: number;\n\treadonly leadingLineContent: string;\n\treadonly leadingWord: IWordAtPosition;\n\treadonly triggerOptions: SuggestTriggerOptions;\n\n\tconstructor(\n\t\tmodel: ITextModel,\n\t\tposition: Position,\n\t\ttriggerOptions: SuggestTriggerOptions,\n\t) {\n\t\tthis.leadingLineContent = model\n\t\t\t.getLineContent(position.lineNumber)\n\t\t\t.substr(0, position.column - 1);\n\t\tthis.leadingWord = model.getWordUntilPosition(position);\n\t\tthis.lineNumber = position.lineNumber;\n\t\tthis.column = position.column;\n\t\tthis.triggerOptions = triggerOptions;\n\t}\n}\n\nexport enum State {\n\tIdle = 0,\n\tManual = 1,\n\tAuto = 2,\n}\n\nfunction canShowQuickSuggest(\n\teditor: ICodeEditor,\n\tcontextKeyService: IContextKeyService,\n\tconfigurationService: IConfigurationService,\n): boolean {\n\tif (\n\t\t!Boolean(\n\t\t\tcontextKeyService.getContextKeyValue(\n\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible.key,\n\t\t\t),\n\t\t)\n\t) {\n\t\t// Allow if there is no inline suggestion.\n\t\treturn true;\n\t}\n\tconst suppressSuggestions = contextKeyService.getContextKeyValue<\n\t\tboolean | undefined\n\t>(InlineCompletionContextKeys.suppressSuggestions.key);\n\tif (suppressSuggestions !== undefined) {\n\t\treturn !suppressSuggestions;\n\t}\n\treturn !editor.getOption(EditorOption.inlineSuggest).suppressSuggestions;\n}\n\nfunction canShowSuggestOnTriggerCharacters(\n\teditor: ICodeEditor,\n\tcontextKeyService: IContextKeyService,\n\tconfigurationService: IConfigurationService,\n): boolean {\n\tif (\n\t\t!Boolean(\n\t\t\tcontextKeyService.getContextKeyValue(\"inlineSuggestionVisible\"),\n\t\t)\n\t) {\n\t\t// Allow if there is no inline suggestion.\n\t\treturn true;\n\t}\n\tconst suppressSuggestions = contextKeyService.getContextKeyValue<\n\t\tboolean | undefined\n\t>(InlineCompletionContextKeys.suppressSuggestions.key);\n\tif (suppressSuggestions !== undefined) {\n\t\treturn !suppressSuggestions;\n\t}\n\treturn !editor.getOption(EditorOption.inlineSuggest).suppressSuggestions;\n}\n\nexport class SuggestModel implements IDisposable {\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _triggerCharacterListener = new DisposableStore();\n\tprivate readonly _triggerQuickSuggest = new TimeoutTimer();\n\n\tprivate _triggerState: SuggestTriggerOptions | undefined = undefined;\n\tprivate _requestToken?: CancellationTokenSource;\n\tprivate _context?: LineContext;\n\tprivate _currentSelection: Selection;\n\n\tprivate _completionModel: CompletionModel | undefined;\n\tprivate readonly _completionDisposables = new DisposableStore();\n\tprivate readonly _onDidCancel = new Emitter<ICancelEvent>();\n\tprivate readonly _onDidTrigger = new Emitter<ITriggerEvent>();\n\tprivate readonly _onDidSuggest = new Emitter<ISuggestEvent>();\n\n\treadonly onDidCancel: Event<ICancelEvent> = this._onDidCancel.event;\n\treadonly onDidTrigger: Event<ITriggerEvent> = this._onDidTrigger.event;\n\treadonly onDidSuggest: Event<ISuggestEvent> = this._onDidSuggest.event;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IEditorWorkerService\n\t\tprivate readonly _editorWorkerService: IEditorWorkerService,\n\t\t@IClipboardService\n\t\tprivate readonly _clipboardService: IClipboardService,\n\t\t@ITelemetryService\n\t\tprivate readonly _telemetryService: ITelemetryService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IContextKeyService\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IEnvironmentService private readonly _envService: IEnvironmentService,\n\t) {\n\t\tthis._currentSelection =\n\t\t\tthis._editor.getSelection() || new Selection(1, 1, 1, 1);\n\n\t\t// wire up various listeners\n\t\tthis._toDispose.add(\n\t\t\tthis._editor.onDidChangeModel(() => {\n\t\t\t\tthis._updateTriggerCharacters();\n\t\t\t\tthis.cancel();\n\t\t\t}),\n\t\t);\n\t\tthis._toDispose.add(\n\t\t\tthis._editor.onDidChangeModelLanguage(() => {\n\t\t\t\tthis._updateTriggerCharacters();\n\t\t\t\tthis.cancel();\n\t\t\t}),\n\t\t);\n\t\tthis._toDispose.add(\n\t\t\tthis._editor.onDidChangeConfiguration(() => {\n\t\t\t\tthis._updateTriggerCharacters();\n\t\t\t}),\n\t\t);\n\t\tthis._toDispose.add(\n\t\t\tthis._languageFeaturesService.completionProvider.onDidChange(() => {\n\t\t\t\tthis._updateTriggerCharacters();\n\t\t\t\tthis._updateActiveSuggestSession();\n\t\t\t}),\n\t\t);\n\n\t\tlet editorIsComposing = false;\n\t\tthis._toDispose.add(\n\t\t\tthis._editor.onDidCompositionStart(() => {\n\t\t\t\teditorIsComposing = true;\n\t\t\t}),\n\t\t);\n\t\tthis._toDispose.add(\n\t\t\tthis._editor.onDidCompositionEnd(() => {\n\t\t\t\teditorIsComposing = false;\n\t\t\t\tthis._onCompositionEnd();\n\t\t\t}),\n\t\t);\n\t\tthis._toDispose.add(\n\t\t\tthis._editor.onDidChangeCursorSelection((e) => {\n\t\t\t\t// only trigger suggest when the editor isn't composing a character\n\t\t\t\tif (!editorIsComposing) {\n\t\t\t\t\tthis._onCursorChange(e);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._toDispose.add(\n\t\t\tthis._editor.onDidChangeModelContent(() => {\n\t\t\t\t// only filter completions when the editor isn't composing a character\n\t\t\t\t// allow-any-unicode-next-line\n\t\t\t\t// e.g. \u00A8 + u makes \u00FC but just \u00A8 cannot be used for filtering\n\t\t\t\tif (!editorIsComposing && this._triggerState !== undefined) {\n\t\t\t\t\tthis._refilterCompletionItems();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._updateTriggerCharacters();\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._triggerCharacterListener);\n\t\tdispose([\n\t\t\tthis._onDidCancel,\n\t\t\tthis._onDidSuggest,\n\t\t\tthis._onDidTrigger,\n\t\t\tthis._triggerQuickSuggest,\n\t\t]);\n\t\tthis._toDispose.dispose();\n\t\tthis._completionDisposables.dispose();\n\t\tthis.cancel();\n\t}\n\n\tprivate _updateTriggerCharacters(): void {\n\t\tthis._triggerCharacterListener.clear();\n\n\t\tif (\n\t\t\tthis._editor.getOption(EditorOption.readOnly) ||\n\t\t\t!this._editor.hasModel() ||\n\t\t\t!this._editor.getOption(EditorOption.suggestOnTriggerCharacters)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst supportsByTriggerCharacter = new Map<\n\t\t\tstring,\n\t\t\tSet<CompletionItemProvider>\n\t\t>();\n\t\tfor (const support of this._languageFeaturesService.completionProvider.all(\n\t\t\tthis._editor.getModel(),\n\t\t)) {\n\t\t\tfor (const ch of support.triggerCharacters || []) {\n\t\t\t\tlet set = supportsByTriggerCharacter.get(ch);\n\t\t\t\tif (!set) {\n\t\t\t\t\tset = new Set();\n\t\t\t\t\tconst suggestSupport = getSnippetSuggestSupport();\n\t\t\t\t\tif (suggestSupport) {\n\t\t\t\t\t\tset.add(suggestSupport);\n\t\t\t\t\t}\n\t\t\t\t\tsupportsByTriggerCharacter.set(ch, set);\n\t\t\t\t}\n\t\t\t\tset.add(support);\n\t\t\t}\n\t\t}\n\n\t\tconst checkTriggerCharacter = (text?: string) => {\n\t\t\tif (\n\t\t\t\t!canShowSuggestOnTriggerCharacters(\n\t\t\t\t\tthis._editor,\n\t\t\t\t\tthis._contextKeyService,\n\t\t\t\t\tthis._configurationService,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (LineContext.shouldAutoTrigger(this._editor)) {\n\t\t\t\t// don't trigger by trigger characters when this is a case for quick suggest\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!text) {\n\t\t\t\t// came here from the compositionEnd-event\n\t\t\t\tconst position = this._editor.getPosition()!;\n\t\t\t\tconst model = this._editor.getModel()!;\n\t\t\t\ttext = model\n\t\t\t\t\t.getLineContent(position.lineNumber)\n\t\t\t\t\t.substr(0, position.column - 1);\n\t\t\t}\n\n\t\t\tlet lastChar = \"\";\n\t\t\tif (isLowSurrogate(text.charCodeAt(text.length - 1))) {\n\t\t\t\tif (isHighSurrogate(text.charCodeAt(text.length - 2))) {\n\t\t\t\t\tlastChar = text.substr(text.length - 2);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlastChar = text.charAt(text.length - 1);\n\t\t\t}\n\n\t\t\tconst supports = supportsByTriggerCharacter.get(lastChar);\n\t\t\tif (supports) {\n\t\t\t\t// keep existing items that where not computed by the\n\t\t\t\t// supports/providers that want to trigger now\n\t\t\t\tconst providerItemsToReuse = new Map<\n\t\t\t\t\tCompletionItemProvider,\n\t\t\t\t\tCompletionItem[]\n\t\t\t\t>();\n\t\t\t\tif (this._completionModel) {\n\t\t\t\t\tfor (const [\n\t\t\t\t\t\tprovider,\n\t\t\t\t\t\titems,\n\t\t\t\t\t] of this._completionModel.getItemsByProvider()) {\n\t\t\t\t\t\tif (!supports.has(provider)) {\n\t\t\t\t\t\t\tproviderItemsToReuse.set(provider, items);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.trigger({\n\t\t\t\t\tauto: true,\n\t\t\t\t\ttriggerKind: CompletionTriggerKind.TriggerCharacter,\n\t\t\t\t\ttriggerCharacter: lastChar,\n\t\t\t\t\tretrigger: Boolean(this._completionModel),\n\t\t\t\t\tclipboardText: this._completionModel?.clipboardText,\n\t\t\t\t\tcompletionOptions: {\n\t\t\t\t\t\tproviderFilter: supports,\n\t\t\t\t\t\tproviderItemsToReuse,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis._triggerCharacterListener.add(\n\t\t\tthis._editor.onDidType(checkTriggerCharacter),\n\t\t);\n\t\tthis._triggerCharacterListener.add(\n\t\t\tthis._editor.onDidCompositionEnd(() => checkTriggerCharacter()),\n\t\t);\n\t}\n\n\t// --- trigger/retrigger/cancel suggest\n\n\tget state(): State {\n\t\tif (!this._triggerState) {\n\t\t\treturn State.Idle;\n\t\t} else if (this._triggerState.auto) {\n\t\t\treturn State.Auto;\n\t\t} else {\n\t\t\treturn State.Manual;\n\t\t}\n\t}\n\n\tcancel(retrigger = false): void {\n\t\tif (this._triggerState !== undefined) {\n\t\t\tthis._triggerQuickSuggest.cancel();\n\t\t\tthis._requestToken?.cancel();\n\t\t\tthis._requestToken = undefined;\n\t\t\tthis._triggerState = undefined;\n\t\t\tthis._completionModel = undefined;\n\t\t\tthis._context = undefined;\n\t\t\tthis._onDidCancel.fire({ retrigger });\n\t\t}\n\t}\n\n\tclear() {\n\t\tthis._completionDisposables.clear();\n\t}\n\n\tprivate _updateActiveSuggestSession(): void {\n\t\tif (this._triggerState !== undefined) {\n\t\t\tif (\n\t\t\t\t!this._editor.hasModel() ||\n\t\t\t\t!this._languageFeaturesService.completionProvider.has(\n\t\t\t\t\tthis._editor.getModel(),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.cancel();\n\t\t\t} else {\n\t\t\t\tthis.trigger({\n\t\t\t\t\tauto: this._triggerState.auto,\n\t\t\t\t\tretrigger: true,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _onCursorChange(e: ICursorSelectionChangedEvent): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst prevSelection = this._currentSelection;\n\t\tthis._currentSelection = this._editor.getSelection();\n\n\t\tif (\n\t\t\t!e.selection.isEmpty() ||\n\t\t\t(e.reason !== CursorChangeReason.NotSet &&\n\t\t\t\te.reason !== CursorChangeReason.Explicit) ||\n\t\t\t(e.source !== \"keyboard\" && e.source !== \"deleteLeft\")\n\t\t) {\n\t\t\t// Early exit if nothing needs to be done!\n\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis._triggerState === undefined &&\n\t\t\te.reason === CursorChangeReason.NotSet\n\t\t) {\n\t\t\tif (\n\t\t\t\tprevSelection.containsRange(this._currentSelection) ||\n\t\t\t\tprevSelection\n\t\t\t\t\t.getEndPosition()\n\t\t\t\t\t.isBeforeOrEqual(this._currentSelection.getPosition())\n\t\t\t) {\n\t\t\t\t// cursor did move RIGHT due to typing -> trigger quick suggest\n\t\t\t\tthis._doTriggerQuickSuggest();\n\t\t\t}\n\t\t} else if (\n\t\t\tthis._triggerState !== undefined &&\n\t\t\te.reason === CursorChangeReason.Explicit\n\t\t) {\n\t\t\t// suggest is active and something like cursor keys are used to move\n\t\t\t// the cursor. this means we can refilter at the new position\n\t\t\tthis._refilterCompletionItems();\n\t\t}\n\t}\n\n\tprivate _onCompositionEnd(): void {\n\t\t// trigger or refilter when composition ends\n\t\tif (this._triggerState === undefined) {\n\t\t\tthis._doTriggerQuickSuggest();\n\t\t} else {\n\t\t\tthis._refilterCompletionItems();\n\t\t}\n\t}\n\n\tprivate _doTriggerQuickSuggest(): void {\n\t\tif (\n\t\t\tQuickSuggestionsOptions.isAllOff(\n\t\t\t\tthis._editor.getOption(EditorOption.quickSuggestions),\n\t\t\t)\n\t\t) {\n\t\t\t// not enabled\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis._editor.getOption(EditorOption.suggest)\n\t\t\t\t.snippetsPreventQuickSuggestions &&\n\t\t\tSnippetController2.get(this._editor)?.isInSnippet()\n\t\t) {\n\t\t\t// no quick suggestion when in snippet mode\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cancel();\n\n\t\tthis._triggerQuickSuggest.cancelAndSet(() => {\n\t\t\tif (this._triggerState !== undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!LineContext.shouldAutoTrigger(this._editor)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst model = this._editor.getModel();\n\t\t\tconst pos = this._editor.getPosition();\n\t\t\t// validate enabled now\n\t\t\tconst config = this._editor.getOption(\n\t\t\t\tEditorOption.quickSuggestions,\n\t\t\t);\n\t\t\tif (QuickSuggestionsOptions.isAllOff(config)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!QuickSuggestionsOptions.isAllOn(config)) {\n\t\t\t\t// Check the type of the token that triggered this\n\t\t\t\tmodel.tokenization.tokenizeIfCheap(pos.lineNumber);\n\t\t\t\tconst lineTokens = model.tokenization.getLineTokens(\n\t\t\t\t\tpos.lineNumber,\n\t\t\t\t);\n\t\t\t\tconst tokenType = lineTokens.getStandardTokenType(\n\t\t\t\t\tlineTokens.findTokenIndexAtOffset(\n\t\t\t\t\t\tMath.max(pos.column - 1 - 1, 0),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tQuickSuggestionsOptions.valueFor(config, tokenType) !== \"on\"\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!canShowQuickSuggest(\n\t\t\t\t\tthis._editor,\n\t\t\t\t\tthis._contextKeyService,\n\t\t\t\t\tthis._configurationService,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// do not trigger quick suggestions if inline suggestions are shown\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._languageFeaturesService.completionProvider.has(model)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// we made it till here -> trigger now\n\t\t\tthis.trigger({ auto: true });\n\t\t}, this._editor.getOption(EditorOption.quickSuggestionsDelay));\n\t}\n\n\tprivate _refilterCompletionItems(): void {\n\t\tassertType(this._editor.hasModel());\n\t\tassertType(this._triggerState !== undefined);\n\n\t\tconst model = this._editor.getModel();\n\t\tconst position = this._editor.getPosition();\n\t\tconst ctx = new LineContext(model, position, {\n\t\t\t...this._triggerState,\n\t\t\trefilter: true,\n\t\t});\n\t\tthis._onNewContext(ctx);\n\t}\n\n\ttrigger(options: SuggestTriggerOptions): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst ctx = new LineContext(model, this._editor.getPosition(), options);\n\n\t\t// Cancel previous requests, change state & update UI\n\t\tthis.cancel(options.retrigger);\n\t\tthis._triggerState = options;\n\t\tthis._onDidTrigger.fire({\n\t\t\tauto: options.auto,\n\t\t\tshy: options.shy ?? false,\n\t\t\tposition: this._editor.getPosition(),\n\t\t});\n\n\t\t// Capture context when request was sent\n\t\tthis._context = ctx;\n\n\t\t// Build context for request\n\t\tlet suggestCtx: CompletionContext = {\n\t\t\ttriggerKind: options.triggerKind ?? CompletionTriggerKind.Invoke,\n\t\t};\n\t\tif (options.triggerCharacter) {\n\t\t\tsuggestCtx = {\n\t\t\t\ttriggerKind: CompletionTriggerKind.TriggerCharacter,\n\t\t\t\ttriggerCharacter: options.triggerCharacter,\n\t\t\t};\n\t\t}\n\n\t\tthis._requestToken = new CancellationTokenSource();\n\n\t\t// kind filter and snippet sort rules\n\t\tconst snippetSuggestions = this._editor.getOption(\n\t\t\tEditorOption.snippetSuggestions,\n\t\t);\n\t\tlet snippetSortOrder = SnippetSortOrder.Inline;\n\t\tswitch (snippetSuggestions) {\n\t\t\tcase \"top\":\n\t\t\t\tsnippetSortOrder = SnippetSortOrder.Top;\n\t\t\t\tbreak;\n\t\t\t// \t\u2193 that's the default anyways...\n\t\t\t// case 'inline':\n\t\t\t// \tsnippetSortOrder = SnippetSortOrder.Inline;\n\t\t\t// \tbreak;\n\t\t\tcase \"bottom\":\n\t\t\t\tsnippetSortOrder = SnippetSortOrder.Bottom;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst { itemKind: itemKindFilter, showDeprecated } =\n\t\t\tSuggestModel.createSuggestFilter(this._editor);\n\t\tconst completionOptions = new CompletionOptions(\n\t\t\tsnippetSortOrder,\n\t\t\toptions.completionOptions?.kindFilter ?? itemKindFilter,\n\t\t\toptions.completionOptions?.providerFilter,\n\t\t\toptions.completionOptions?.providerItemsToReuse,\n\t\t\tshowDeprecated,\n\t\t);\n\t\tconst wordDistance = WordDistance.create(\n\t\t\tthis._editorWorkerService,\n\t\t\tthis._editor,\n\t\t);\n\n\t\tconst completions = provideSuggestionItems(\n\t\t\tthis._languageFeaturesService.completionProvider,\n\t\t\tmodel,\n\t\t\tthis._editor.getPosition(),\n\t\t\tcompletionOptions,\n\t\t\tsuggestCtx,\n\t\t\tthis._requestToken.token,\n\t\t);\n\n\t\tPromise.all([completions, wordDistance])\n\t\t\t.then(async ([completions, wordDistance]) => {\n\t\t\t\tthis._requestToken?.dispose();\n\n\t\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet clipboardText = options?.clipboardText;\n\t\t\t\tif (!clipboardText && completions.needsClipboard) {\n\t\t\t\t\tclipboardText = await this._clipboardService.readText();\n\t\t\t\t}\n\n\t\t\t\tif (this._triggerState === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst model = this._editor.getModel();\n\t\t\t\t// const items = completions.items;\n\n\t\t\t\t// if (existing) {\n\t\t\t\t// \tconst cmpFn = getSuggestionComparator(snippetSortOrder);\n\t\t\t\t// \titems = items.concat(existing.items).sort(cmpFn);\n\t\t\t\t// }\n\n\t\t\t\tconst ctx = new LineContext(\n\t\t\t\t\tmodel,\n\t\t\t\t\tthis._editor.getPosition(),\n\t\t\t\t\toptions,\n\t\t\t\t);\n\t\t\t\tconst fuzzySearchOptions = {\n\t\t\t\t\t...FuzzyScoreOptions.default,\n\t\t\t\t\tfirstMatchCanBeWeak: !this._editor.getOption(\n\t\t\t\t\t\tEditorOption.suggest,\n\t\t\t\t\t).matchOnWordStartOnly,\n\t\t\t\t};\n\t\t\t\tthis._completionModel = new CompletionModel(\n\t\t\t\t\tcompletions.items,\n\t\t\t\t\tthis._context!.column,\n\t\t\t\t\t{\n\t\t\t\t\t\tleadingLineContent: ctx.leadingLineContent,\n\t\t\t\t\t\tcharacterCountDelta: ctx.column - this._context!.column,\n\t\t\t\t\t},\n\t\t\t\t\twordDistance,\n\t\t\t\t\tthis._editor.getOption(EditorOption.suggest),\n\t\t\t\t\tthis._editor.getOption(EditorOption.snippetSuggestions),\n\t\t\t\t\tfuzzySearchOptions,\n\t\t\t\t\tclipboardText,\n\t\t\t\t);\n\n\t\t\t\t// store containers so that they can be disposed later\n\t\t\t\tthis._completionDisposables.add(completions.disposable);\n\n\t\t\t\tthis._onNewContext(ctx);\n\n\t\t\t\t// finally report telemetry about durations\n\t\t\t\tthis._reportDurationsTelemetry(completions.durations);\n\n\t\t\t\t// report invalid completions by source\n\t\t\t\tif (\n\t\t\t\t\t!this._envService.isBuilt ||\n\t\t\t\t\tthis._envService.isExtensionDevelopment\n\t\t\t\t) {\n\t\t\t\t\tfor (const item of completions.items) {\n\t\t\t\t\t\tif (item.isInvalid) {\n\t\t\t\t\t\t\tthis._logService.warn(\n\t\t\t\t\t\t\t\t`[suggest] did IGNORE invalid completion item from ${item.provider._debugDisplayName}`,\n\t\t\t\t\t\t\t\titem.completion,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(onUnexpectedError);\n\t}\n\n\tprivate _telemetryGate = 0;\n\n\tprivate _reportDurationsTelemetry(durations: CompletionDurations): void {\n\t\tif (this._telemetryGate++ % 230 !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\ttype Durations = { data: string };\n\t\t\ttype DurationsClassification = {\n\t\t\t\towner: \"jrieken\";\n\t\t\t\tcomment: \"Completions performance numbers\";\n\t\t\t\tdata: {\n\t\t\t\t\tcomment: \"Durations per source and overall\";\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t};\n\t\t\t};\n\t\t\tthis._telemetryService.publicLog2<\n\t\t\t\tDurations,\n\t\t\t\tDurationsClassification\n\t\t\t>(\"suggest.durations.json\", { data: JSON.stringify(durations) });\n\t\t\tthis._logService.debug(\"suggest.durations.json\", durations);\n\t\t});\n\t}\n\n\tstatic createSuggestFilter(editor: ICodeEditor): {\n\t\titemKind: Set<CompletionItemKind>;\n\t\tshowDeprecated: boolean;\n\t} {\n\t\t// kind filter and snippet sort rules\n\t\tconst result = new Set<CompletionItemKind>();\n\n\t\t// snippet setting\n\t\tconst snippetSuggestions = editor.getOption(\n\t\t\tEditorOption.snippetSuggestions,\n\t\t);\n\t\tif (snippetSuggestions === \"none\") {\n\t\t\tresult.add(CompletionItemKind.Snippet);\n\t\t}\n\n\t\t// type setting\n\t\tconst suggestOptions = editor.getOption(EditorOption.suggest);\n\t\tif (!suggestOptions.showMethods) {\n\t\t\tresult.add(CompletionItemKind.Method);\n\t\t}\n\t\tif (!suggestOptions.showFunctions) {\n\t\t\tresult.add(CompletionItemKind.Function);\n\t\t}\n\t\tif (!suggestOptions.showConstructors) {\n\t\t\tresult.add(CompletionItemKind.Constructor);\n\t\t}\n\t\tif (!suggestOptions.showFields) {\n\t\t\tresult.add(CompletionItemKind.Field);\n\t\t}\n\t\tif (!suggestOptions.showVariables) {\n\t\t\tresult.add(CompletionItemKind.Variable);\n\t\t}\n\t\tif (!suggestOptions.showClasses) {\n\t\t\tresult.add(CompletionItemKind.Class);\n\t\t}\n\t\tif (!suggestOptions.showStructs) {\n\t\t\tresult.add(CompletionItemKind.Struct);\n\t\t}\n\t\tif (!suggestOptions.showInterfaces) {\n\t\t\tresult.add(CompletionItemKind.Interface);\n\t\t}\n\t\tif (!suggestOptions.showModules) {\n\t\t\tresult.add(CompletionItemKind.Module);\n\t\t}\n\t\tif (!suggestOptions.showProperties) {\n\t\t\tresult.add(CompletionItemKind.Property);\n\t\t}\n\t\tif (!suggestOptions.showEvents) {\n\t\t\tresult.add(CompletionItemKind.Event);\n\t\t}\n\t\tif (!suggestOptions.showOperators) {\n\t\t\tresult.add(CompletionItemKind.Operator);\n\t\t}\n\t\tif (!suggestOptions.showUnits) {\n\t\t\tresult.add(CompletionItemKind.Unit);\n\t\t}\n\t\tif (!suggestOptions.showValues) {\n\t\t\tresult.add(CompletionItemKind.Value);\n\t\t}\n\t\tif (!suggestOptions.showConstants) {\n\t\t\tresult.add(CompletionItemKind.Constant);\n\t\t}\n\t\tif (!suggestOptions.showEnums) {\n\t\t\tresult.add(CompletionItemKind.Enum);\n\t\t}\n\t\tif (!suggestOptions.showEnumMembers) {\n\t\t\tresult.add(CompletionItemKind.EnumMember);\n\t\t}\n\t\tif (!suggestOptions.showKeywords) {\n\t\t\tresult.add(CompletionItemKind.Keyword);\n\t\t}\n\t\tif (!suggestOptions.showWords) {\n\t\t\tresult.add(CompletionItemKind.Text);\n\t\t}\n\t\tif (!suggestOptions.showColors) {\n\t\t\tresult.add(CompletionItemKind.Color);\n\t\t}\n\t\tif (!suggestOptions.showFiles) {\n\t\t\tresult.add(CompletionItemKind.File);\n\t\t}\n\t\tif (!suggestOptions.showReferences) {\n\t\t\tresult.add(CompletionItemKind.Reference);\n\t\t}\n\t\tif (!suggestOptions.showColors) {\n\t\t\tresult.add(CompletionItemKind.Customcolor);\n\t\t}\n\t\tif (!suggestOptions.showFolders) {\n\t\t\tresult.add(CompletionItemKind.Folder);\n\t\t}\n\t\tif (!suggestOptions.showTypeParameters) {\n\t\t\tresult.add(CompletionItemKind.TypeParameter);\n\t\t}\n\t\tif (!suggestOptions.showSnippets) {\n\t\t\tresult.add(CompletionItemKind.Snippet);\n\t\t}\n\t\tif (!suggestOptions.showUsers) {\n\t\t\tresult.add(CompletionItemKind.User);\n\t\t}\n\t\tif (!suggestOptions.showIssues) {\n\t\t\tresult.add(CompletionItemKind.Issue);\n\t\t}\n\n\t\treturn {\n\t\t\titemKind: result,\n\t\t\tshowDeprecated: suggestOptions.showDeprecated,\n\t\t};\n\t}\n\n\tprivate _onNewContext(ctx: LineContext): void {\n\t\tif (!this._context) {\n\t\t\t// happens when 24x7 IntelliSense is enabled and still in its delay\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.lineNumber !== this._context.lineNumber) {\n\t\t\t// e.g. happens when pressing Enter while IntelliSense is computed\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tgetLeadingWhitespace(ctx.leadingLineContent) !==\n\t\t\tgetLeadingWhitespace(this._context.leadingLineContent)\n\t\t) {\n\t\t\t// cancel IntelliSense when line start changes\n\t\t\t// happens when the current word gets outdented\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.column < this._context.column) {\n\t\t\t// typed -> moved cursor LEFT -> retrigger if still on a word\n\t\t\tif (ctx.leadingWord.word) {\n\t\t\t\tthis.trigger({\n\t\t\t\t\tauto: this._context.triggerOptions.auto,\n\t\t\t\t\tretrigger: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._completionModel) {\n\t\t\t// happens when IntelliSense is not yet computed\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tctx.leadingWord.word.length !== 0 &&\n\t\t\tctx.leadingWord.startColumn > this._context.leadingWord.startColumn\n\t\t) {\n\t\t\t// started a new word while IntelliSense shows -> retrigger but reuse all items that we currently have\n\t\t\tconst shouldAutoTrigger = LineContext.shouldAutoTrigger(\n\t\t\t\tthis._editor,\n\t\t\t);\n\t\t\tif (shouldAutoTrigger && this._context) {\n\t\t\t\t// shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n\t\t\t\t// suggestions to be cancelled, which causes `this._context` to be undefined\n\t\t\t\tconst map = this._completionModel.getItemsByProvider();\n\t\t\t\tthis.trigger({\n\t\t\t\t\tauto: this._context.triggerOptions.auto,\n\t\t\t\t\tretrigger: true,\n\t\t\t\t\tclipboardText: this._completionModel.clipboardText,\n\t\t\t\t\tcompletionOptions: { providerItemsToReuse: map },\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tctx.column > this._context.column &&\n\t\t\tthis._completionModel.getIncompleteProvider().size > 0 &&\n\t\t\tctx.leadingWord.word.length !== 0\n\t\t) {\n\t\t\t// typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\n\n\t\t\tconst providerItemsToReuse = new Map<\n\t\t\t\tCompletionItemProvider,\n\t\t\t\tCompletionItem[]\n\t\t\t>();\n\t\t\tconst providerFilter = new Set<CompletionItemProvider>();\n\t\t\tfor (const [\n\t\t\t\tprovider,\n\t\t\t\titems,\n\t\t\t] of this._completionModel.getItemsByProvider()) {\n\t\t\t\tif (items.length > 0 && items[0].container.incomplete) {\n\t\t\t\t\tproviderFilter.add(provider);\n\t\t\t\t} else {\n\t\t\t\t\tproviderItemsToReuse.set(provider, items);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.trigger({\n\t\t\t\tauto: this._context.triggerOptions.auto,\n\t\t\t\ttriggerKind:\n\t\t\t\t\tCompletionTriggerKind.TriggerForIncompleteCompletions,\n\t\t\t\tretrigger: true,\n\t\t\t\tclipboardText: this._completionModel.clipboardText,\n\t\t\t\tcompletionOptions: { providerFilter, providerItemsToReuse },\n\t\t\t});\n\t\t} else {\n\t\t\t// typed -> moved cursor RIGHT -> update UI\n\t\t\tconst oldLineContext = this._completionModel.lineContext;\n\t\t\tlet isFrozen = false;\n\n\t\t\tthis._completionModel.lineContext = {\n\t\t\t\tleadingLineContent: ctx.leadingLineContent,\n\t\t\t\tcharacterCountDelta: ctx.column - this._context.column,\n\t\t\t};\n\n\t\t\tif (this._completionModel.items.length === 0) {\n\t\t\t\tconst shouldAutoTrigger = LineContext.shouldAutoTrigger(\n\t\t\t\t\tthis._editor,\n\t\t\t\t);\n\t\t\t\tif (!this._context) {\n\t\t\t\t\t// shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n\t\t\t\t\t// suggestions to be cancelled, which causes `this._context` to be undefined\n\t\t\t\t\tthis.cancel();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tshouldAutoTrigger &&\n\t\t\t\t\tthis._context.leadingWord.endColumn <\n\t\t\t\t\t\tctx.leadingWord.startColumn\n\t\t\t\t) {\n\t\t\t\t\t// retrigger when heading into a new word\n\t\t\t\t\tthis.trigger({\n\t\t\t\t\t\tauto: this._context.triggerOptions.auto,\n\t\t\t\t\t\tretrigger: true,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this._context.triggerOptions.auto) {\n\t\t\t\t\t// nothing left\n\t\t\t\t\tthis.cancel();\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// freeze when IntelliSense was manually requested\n\t\t\t\t\tthis._completionModel.lineContext = oldLineContext;\n\t\t\t\t\tisFrozen = this._completionModel.items.length > 0;\n\n\t\t\t\t\tif (isFrozen && ctx.leadingWord.word.length === 0) {\n\t\t\t\t\t\t// there were results before but now there aren't\n\t\t\t\t\t\t// and also we are not on a word anymore -> cancel\n\t\t\t\t\t\tthis.cancel();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidSuggest.fire({\n\t\t\t\tcompletionModel: this._completionModel,\n\t\t\t\ttriggerOptions: ctx.triggerOptions,\n\t\t\t\tisFrozen,\n\t\t\t});\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["State", "completions", "wordDistance", "model", "ctx"]
}
