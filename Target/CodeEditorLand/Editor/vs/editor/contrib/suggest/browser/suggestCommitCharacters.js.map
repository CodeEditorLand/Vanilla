{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/browser/suggestCommitCharacters.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { CharacterSet } from '../../../common/core/characterClassifier.js';\nimport { State, SuggestModel } from './suggestModel.js';\nimport { ISelectedSuggestion, SuggestWidget } from './suggestWidget.js';\n\nexport class CommitCharacterController {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate _active?: {\n\t\treadonly acceptCharacters: CharacterSet;\n\t\treadonly item: ISelectedSuggestion;\n\t};\n\n\tconstructor(editor: ICodeEditor, widget: SuggestWidget, model: SuggestModel, accept: (selected: ISelectedSuggestion) => any) {\n\n\t\tthis._disposables.add(model.onDidSuggest(e => {\n\t\t\tif (e.completionModel.items.length === 0) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}));\n\t\tthis._disposables.add(model.onDidCancel(e => {\n\t\t\tthis.reset();\n\t\t}));\n\n\t\tthis._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\n\t\tthis._disposables.add(widget.onDidFocus(this._onItem, this));\n\t\tthis._disposables.add(widget.onDidHide(this.reset, this));\n\n\t\tthis._disposables.add(editor.onWillType(text => {\n\t\t\tif (this._active && !widget.isFrozen() && model.state !== State.Idle) {\n\t\t\t\tconst ch = text.charCodeAt(text.length - 1);\n\t\t\t\tif (this._active.acceptCharacters.has(ch) && editor.getOption(EditorOption.acceptSuggestionOnCommitCharacter)) {\n\t\t\t\t\taccept(this._active.item);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onItem(selected: ISelectedSuggestion | undefined): void {\n\t\tif (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\n\t\t\t// no item or no commit characters\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._active && this._active.item.item === selected.item) {\n\t\t\t// still the same item\n\t\t\treturn;\n\t\t}\n\n\t\t// keep item and its commit characters\n\t\tconst acceptCharacters = new CharacterSet();\n\t\tfor (const ch of selected.item.completion.commitCharacters) {\n\t\t\tif (ch.length > 0) {\n\t\t\t\tacceptCharacters.add(ch.charCodeAt(0));\n\t\t\t}\n\t\t}\n\t\tthis._active = { acceptCharacters, item: selected };\n\t}\n\n\treset(): void {\n\t\tthis._active = undefined;\n\t}\n\n\tdispose() {\n\t\tthis._disposables.dispose();\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,SAAS,OAAO,oBAAoB;AACpC,SAAS,qBAAqB,qBAAqB;AAE5C,MAAM,0BAA0B;AAAA,EAbvC,OAauC;AAAA;AAAA;AAAA,EAErB,eAAe,IAAI,gBAAgB;AAAA,EAE5C;AAAA,EAKR,YAAY,QAAqB,QAAuB,OAAqB,QAAgD;AAE5H,SAAK,aAAa,IAAI,MAAM,aAAa,OAAK;AAC7C,UAAI,EAAE,gBAAgB,MAAM,WAAW,GAAG;AACzC,aAAK,MAAM;AAAA,MACZ;AAAA,IACD,CAAC,CAAC;AACF,SAAK,aAAa,IAAI,MAAM,YAAY,OAAK;AAC5C,WAAK,MAAM;AAAA,IACZ,CAAC,CAAC;AAEF,SAAK,aAAa,IAAI,OAAO,UAAU,MAAM,KAAK,QAAQ,OAAO,eAAe,CAAC,CAAC,CAAC;AACnF,SAAK,aAAa,IAAI,OAAO,WAAW,KAAK,SAAS,IAAI,CAAC;AAC3D,SAAK,aAAa,IAAI,OAAO,UAAU,KAAK,OAAO,IAAI,CAAC;AAExD,SAAK,aAAa,IAAI,OAAO,WAAW,UAAQ;AAC/C,UAAI,KAAK,WAAW,CAAC,OAAO,SAAS,KAAK,MAAM,UAAU,MAAM,MAAM;AACrE,cAAM,KAAK,KAAK,WAAW,KAAK,SAAS,CAAC;AAC1C,YAAI,KAAK,QAAQ,iBAAiB,IAAI,EAAE,KAAK,OAAO,UAAU,aAAa,iCAAiC,GAAG;AAC9G,iBAAO,KAAK,QAAQ,IAAI;AAAA,QACzB;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEQ,QAAQ,UAAiD;AAChE,QAAI,CAAC,YAAY,CAAC,gBAAgB,SAAS,KAAK,WAAW,gBAAgB,GAAG;AAE7E,WAAK,MAAM;AACX;AAAA,IACD;AAEA,QAAI,KAAK,WAAW,KAAK,QAAQ,KAAK,SAAS,SAAS,MAAM;AAE7D;AAAA,IACD;AAGA,UAAM,mBAAmB,IAAI,aAAa;AAC1C,eAAW,MAAM,SAAS,KAAK,WAAW,kBAAkB;AAC3D,UAAI,GAAG,SAAS,GAAG;AAClB,yBAAiB,IAAI,GAAG,WAAW,CAAC,CAAC;AAAA,MACtC;AAAA,IACD;AACA,SAAK,UAAU,EAAE,kBAAkB,MAAM,SAAS;AAAA,EACnD;AAAA,EAEA,QAAc;AACb,SAAK,UAAU;AAAA,EAChB;AAAA,EAEA,UAAU;AACT,SAAK,aAAa,QAAQ;AAAA,EAC3B;AACD;",
  "names": []
}
