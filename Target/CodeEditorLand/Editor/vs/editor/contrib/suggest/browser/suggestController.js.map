{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/browser/suggestController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { KeyCodeChord } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, IDisposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorCommand, EditorContributionInstantiation, registerEditorAction, registerEditorCommand, registerEditorContribution, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { IPosition, Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IEditorContribution, ScrollType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ITextModel, TrackedRangeStickiness } from '../../../common/model.js';\nimport { CompletionItemInsertTextRule, CompletionItemProvider, CompletionTriggerKind } from '../../../common/languages.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { CompletionItem, Context as SuggestContext, ISuggestItemPreselector, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { State, SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { ISelectedSuggestion, SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { WindowIdleValue, getWindow } from '../../../../base/browser/dom.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\n\n// sticky suggest widget which doesn't disappear on focus out and such\nconst _sticky = false\n\t// || Boolean(\"true\") // done \"weirdly\" so that a lint warning prevents you from pushing this\n\t;\n\nclass LineSuffix {\n\n\tprivate readonly _decorationOptions = ModelDecorationOptions.register({\n\t\tdescription: 'suggest-line-suffix',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t});\n\n\tprivate _marker: string | undefined;\n\n\tconstructor(private readonly _model: ITextModel, private readonly _position: IPosition) {\n\t\t// spy on what's happening right of the cursor. two cases:\n\t\t// 1. end of line -> check that it's still end of line\n\t\t// 2. mid of line -> add a marker and compute the delta\n\t\tconst maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n\t\tif (maxColumn !== _position.column) {\n\t\t\tconst offset = _model.getOffsetAt(_position);\n\t\t\tconst end = _model.getPositionAt(offset + 1);\n\t\t\t_model.changeDecorations(accessor => {\n\t\t\t\tif (this._marker) {\n\t\t\t\t\taccessor.removeDecoration(this._marker);\n\t\t\t\t}\n\t\t\t\tthis._marker = accessor.addDecoration(Range.fromPositions(_position, end), this._decorationOptions);\n\t\t\t});\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._marker && !this._model.isDisposed()) {\n\t\t\tthis._model.changeDecorations(accessor => {\n\t\t\t\taccessor.removeDecoration(this._marker!);\n\t\t\t\tthis._marker = undefined;\n\t\t\t});\n\t\t}\n\t}\n\n\tdelta(position: IPosition): number {\n\t\tif (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n\t\t\t// bail out early if things seems fishy\n\t\t\treturn 0;\n\t\t}\n\t\t// read the marker (in case suggest was triggered at line end) or compare\n\t\t// the cursor to the line end.\n\t\tif (this._marker) {\n\t\t\tconst range = this._model.getDecorationRange(this._marker);\n\t\t\tconst end = this._model.getOffsetAt(range!.getStartPosition());\n\t\t\treturn end - this._model.getOffsetAt(position);\n\t\t} else {\n\t\t\treturn this._model.getLineMaxColumn(position.lineNumber) - position.column;\n\t\t}\n\t}\n}\n\nconst enum InsertFlags {\n\tNone = 0,\n\tNoBeforeUndoStop = 1,\n\tNoAfterUndoStop = 2,\n\tKeepAlternativeSuggestions = 4,\n\tAlternativeOverwriteConfig = 8\n}\n\nexport class SuggestController implements IEditorContribution {\n\n\tpublic static readonly ID: string = 'editor.contrib.suggestController';\n\n\tpublic static get(editor: ICodeEditor): SuggestController | null {\n\t\treturn editor.getContribution<SuggestController>(SuggestController.ID);\n\t}\n\n\treadonly editor: ICodeEditor;\n\treadonly model: SuggestModel;\n\treadonly widget: WindowIdleValue<SuggestWidget>;\n\n\tprivate readonly _alternatives: WindowIdleValue<SuggestAlternatives>;\n\tprivate readonly _lineSuffix = new MutableDisposable<LineSuffix>();\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _overtypingCapturer: WindowIdleValue<OvertypingCapturer>;\n\tprivate readonly _selectors = new PriorityRegistry<ISuggestItemPreselector>(s => s.priority);\n\n\tprivate readonly _onWillInsertSuggestItem = new Emitter<{ item: CompletionItem }>();\n\treadonly onWillInsertSuggestItem: Event<{ item: CompletionItem }> = this._onWillInsertSuggestItem.event;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ISuggestMemoryService private readonly _memoryService: ISuggestMemoryService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t\tthis.editor = editor;\n\t\tthis.model = _instantiationService.createInstance(SuggestModel, this.editor,);\n\n\t\t// default selector\n\t\tthis._selectors.register({\n\t\t\tpriority: 0,\n\t\t\tselect: (model, pos, items) => this._memoryService.select(model, pos, items)\n\t\t});\n\n\t\t// context key: update insert/replace mode\n\t\tconst ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n\t\tctxInsertMode.set(editor.getOption(EditorOption.suggest).insertMode);\n\t\tthis._toDispose.add(this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(EditorOption.suggest).insertMode)));\n\n\t\tthis.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n\n\t\t\tconst widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n\n\t\t\tthis._toDispose.add(widget);\n\t\t\tthis._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, InsertFlags.None), this));\n\n\t\t\t// Wire up logic to accept a suggestion on certain characters\n\t\t\tconst commitCharacterController = new CommitCharacterController(this.editor, widget, this.model, item => this._insertSuggestion(item, InsertFlags.NoAfterUndoStop));\n\t\t\tthis._toDispose.add(commitCharacterController);\n\n\n\t\t\t// Wire up makes text edit context key\n\t\t\tconst ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n\t\t\tconst ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n\t\t\tconst ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n\n\t\t\tthis._toDispose.add(toDisposable(() => {\n\t\t\t\tctxMakesTextEdit.reset();\n\t\t\t\tctxHasInsertAndReplace.reset();\n\t\t\t\tctxCanResolve.reset();\n\t\t\t}));\n\n\t\t\tthis._toDispose.add(widget.onDidFocus(({ item }) => {\n\n\t\t\t\t// (ctx: makesTextEdit)\n\t\t\t\tconst position = this.editor.getPosition()!;\n\t\t\t\tconst startColumn = item.editStart.column;\n\t\t\t\tconst endColumn = position.column;\n\t\t\t\tlet value = true;\n\t\t\t\tif (\n\t\t\t\t\tthis.editor.getOption(EditorOption.acceptSuggestionOnEnter) === 'smart'\n\t\t\t\t\t&& this.model.state === State.Auto\n\t\t\t\t\t&& !item.completion.additionalTextEdits\n\t\t\t\t\t&& !(item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet)\n\t\t\t\t\t&& endColumn - startColumn === item.completion.insertText.length\n\t\t\t\t) {\n\t\t\t\t\tconst oldText = this.editor.getModel()!.getValueInRange({\n\t\t\t\t\t\tstartLineNumber: position.lineNumber,\n\t\t\t\t\t\tstartColumn,\n\t\t\t\t\t\tendLineNumber: position.lineNumber,\n\t\t\t\t\t\tendColumn\n\t\t\t\t\t});\n\t\t\t\t\tvalue = oldText !== item.completion.insertText;\n\t\t\t\t}\n\t\t\t\tctxMakesTextEdit.set(value);\n\n\t\t\t\t// (ctx: hasInsertAndReplaceRange)\n\t\t\t\tctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n\n\t\t\t\t// (ctx: canResolve)\n\t\t\t\tctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n\t\t\t}));\n\n\t\t\tthis._toDispose.add(widget.onDetailsKeyDown(e => {\n\t\t\t\t// cmd + c on macOS, ctrl + c on Win / Linux\n\t\t\t\tif (\n\t\t\t\t\te.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, KeyCode.KeyC)) ||\n\t\t\t\t\t(platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, KeyCode.KeyC)))\n\t\t\t\t) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!e.toKeyCodeChord().isModifierKey()) {\n\t\t\t\t\tthis.editor.focus();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn widget;\n\t\t}));\n\n\t\t// Wire up text overtyping capture\n\t\tthis._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n\t\t\treturn this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n\t\t}));\n\n\t\tthis._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n\t\t\treturn this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n\t\t}));\n\n\t\tthis._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n\n\t\tthis._toDispose.add(this.model.onDidTrigger(e => {\n\t\t\tthis.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n\t\t\tthis._lineSuffix.value = new LineSuffix(this.editor.getModel()!, e.position);\n\t\t}));\n\t\tthis._toDispose.add(this.model.onDidSuggest(e => {\n\t\t\tif (e.triggerOptions.shy) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet index = -1;\n\t\t\tfor (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n\t\t\t\tindex = selector.select(this.editor.getModel()!, this.editor.getPosition()!, e.completionModel.items);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (index === -1) {\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\tif (this.model.state === State.Idle) {\n\t\t\t\t// selecting an item can \"pump\" out selection/cursor change events\n\t\t\t\t// which can cancel suggest halfway through this function. therefore\n\t\t\t\t// we need to check again and bail if the session has been canceled\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet noFocus = false;\n\t\t\tif (e.triggerOptions.auto) {\n\t\t\t\t// don't \"focus\" item when configured to do\n\t\t\t\tconst options = this.editor.getOption(EditorOption.suggest);\n\t\t\t\tif (options.selectionMode === 'never' || options.selectionMode === 'always') {\n\t\t\t\t\t// simple: always or never\n\t\t\t\t\tnoFocus = options.selectionMode === 'never';\n\n\t\t\t\t} else if (options.selectionMode === 'whenTriggerCharacter') {\n\t\t\t\t\t// on with trigger character\n\t\t\t\t\tnoFocus = e.triggerOptions.triggerKind !== CompletionTriggerKind.TriggerCharacter;\n\n\t\t\t\t} else if (options.selectionMode === 'whenQuickSuggestion') {\n\t\t\t\t\t// without trigger character or when refiltering\n\t\t\t\t\tnoFocus = e.triggerOptions.triggerKind === CompletionTriggerKind.TriggerCharacter && !e.triggerOptions.refilter;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\n\t\t}));\n\t\tthis._toDispose.add(this.model.onDidCancel(e => {\n\t\t\tif (!e.retrigger) {\n\t\t\t\tthis.widget.value.hideWidget();\n\t\t\t}\n\t\t}));\n\t\tthis._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n\t\t\tif (!_sticky) {\n\t\t\t\tthis.model.cancel();\n\t\t\t\tthis.model.clear();\n\t\t\t}\n\t\t}));\n\n\t\t// Manage the acceptSuggestionsOnEnter context key\n\t\tconst acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n\t\tconst updateFromConfig = () => {\n\t\t\tconst acceptSuggestionOnEnter = this.editor.getOption(EditorOption.acceptSuggestionOnEnter);\n\t\t\tacceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n\t\t};\n\t\tthis._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n\t\tupdateFromConfig();\n\t}\n\n\tdispose(): void {\n\t\tthis._alternatives.dispose();\n\t\tthis._toDispose.dispose();\n\t\tthis.widget.dispose();\n\t\tthis.model.dispose();\n\t\tthis._lineSuffix.dispose();\n\t\tthis._onWillInsertSuggestItem.dispose();\n\t}\n\n\tprotected _insertSuggestion(\n\t\tevent: ISelectedSuggestion | undefined,\n\t\tflags: InsertFlags\n\t): void {\n\t\tif (!event || !event.item) {\n\t\t\tthis._alternatives.value.reset();\n\t\t\tthis.model.cancel();\n\t\t\tthis.model.clear();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst snippetController = SnippetController2.get(this.editor);\n\t\tif (!snippetController) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._onWillInsertSuggestItem.fire({ item: event.item });\n\n\t\tconst model = this.editor.getModel();\n\t\tconst modelVersionNow = model.getAlternativeVersionId();\n\t\tconst { item } = event;\n\n\t\t//\n\t\tconst tasks: Promise<any>[] = [];\n\t\tconst cts = new CancellationTokenSource();\n\n\t\t// pushing undo stops *before* additional text edits and\n\t\t// *after* the main edit\n\t\tif (!(flags & InsertFlags.NoBeforeUndoStop)) {\n\t\t\tthis.editor.pushUndoStop();\n\t\t}\n\n\t\t// compute overwrite[Before|After] deltas BEFORE applying extra edits\n\t\tconst info = this.getOverwriteInfo(item, Boolean(flags & InsertFlags.AlternativeOverwriteConfig));\n\n\t\t// keep item in memory\n\t\tthis._memoryService.memorize(model, this.editor.getPosition(), item);\n\n\t\tconst isResolved = item.isResolved;\n\n\t\t// telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\n\t\tlet _commandExectionDuration = -1;\n\t\tlet _additionalEditsAppliedAsync = -1;\n\n\t\tif (Array.isArray(item.completion.additionalTextEdits)) {\n\n\t\t\t// cancel -> stops all listening and closes widget\n\t\t\tthis.model.cancel();\n\n\t\t\t// sync additional edits\n\t\t\tconst scrollState = StableEditorScrollState.capture(this.editor);\n\t\t\tthis.editor.executeEdits(\n\t\t\t\t'suggestController.additionalTextEdits.sync',\n\t\t\t\titem.completion.additionalTextEdits.map(edit => {\n\t\t\t\t\tlet range = Range.lift(edit.range);\n\t\t\t\t\tif (range.startLineNumber === item.position.lineNumber && range.startColumn > item.position.column) {\n\t\t\t\t\t\t// shift additional edit when it is \"after\" the completion insertion position\n\t\t\t\t\t\tconst columnDelta = this.editor.getPosition()!.column - item.position.column;\n\t\t\t\t\t\tconst startColumnDelta = columnDelta;\n\t\t\t\t\t\tconst endColumnDelta = Range.spansMultipleLines(range) ? 0 : columnDelta;\n\t\t\t\t\t\trange = new Range(range.startLineNumber, range.startColumn + startColumnDelta, range.endLineNumber, range.endColumn + endColumnDelta);\n\t\t\t\t\t}\n\t\t\t\t\treturn EditOperation.replaceMove(range, edit.text);\n\t\t\t\t})\n\t\t\t);\n\t\t\tscrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n\n\t\t} else if (!isResolved) {\n\t\t\t// async additional edits\n\t\t\tconst sw = new StopWatch();\n\t\t\tlet position: IPosition | undefined;\n\n\t\t\tconst docListener = model.onDidChangeContent(e => {\n\t\t\t\tif (e.isFlush) {\n\t\t\t\t\tcts.cancel();\n\t\t\t\t\tdocListener.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const change of e.changes) {\n\t\t\t\t\tconst thisPosition = Range.getEndPosition(change.range);\n\t\t\t\t\tif (!position || Position.isBefore(thisPosition, position)) {\n\t\t\t\t\t\tposition = thisPosition;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst oldFlags = flags;\n\t\t\tflags |= InsertFlags.NoAfterUndoStop;\n\t\t\tlet didType = false;\n\t\t\tconst typeListener = this.editor.onWillType(() => {\n\t\t\t\ttypeListener.dispose();\n\t\t\t\tdidType = true;\n\t\t\t\tif (!(oldFlags & InsertFlags.NoAfterUndoStop)) {\n\t\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ttasks.push(item.resolve(cts.token).then(() => {\n\t\t\t\tif (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position!, Range.getStartPosition(edit.range)))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (didType) {\n\t\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\t}\n\t\t\t\tconst scrollState = StableEditorScrollState.capture(this.editor);\n\t\t\t\tthis.editor.executeEdits(\n\t\t\t\t\t'suggestController.additionalTextEdits.async',\n\t\t\t\t\titem.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text))\n\t\t\t\t);\n\t\t\t\tscrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n\t\t\t\tif (didType || !(oldFlags & InsertFlags.NoAfterUndoStop)) {\n\t\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}).then(applied => {\n\t\t\t\tthis._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n\t\t\t\t_additionalEditsAppliedAsync = applied === true ? 1 : applied === false ? 0 : -2;\n\t\t\t}).finally(() => {\n\t\t\t\tdocListener.dispose();\n\t\t\t\ttypeListener.dispose();\n\t\t\t}));\n\t\t}\n\n\t\tlet { insertText } = item.completion;\n\t\tif (!(item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet)) {\n\t\t\tinsertText = SnippetParser.escape(insertText);\n\t\t}\n\n\t\t// cancel -> stops all listening and closes widget\n\t\tthis.model.cancel();\n\n\t\tsnippetController.insert(insertText, {\n\t\t\toverwriteBefore: info.overwriteBefore,\n\t\t\toverwriteAfter: info.overwriteAfter,\n\t\t\tundoStopBefore: false,\n\t\t\tundoStopAfter: false,\n\t\t\tadjustWhitespace: !(item.completion.insertTextRules! & CompletionItemInsertTextRule.KeepWhitespace),\n\t\t\tclipboardText: event.model.clipboardText,\n\t\t\tovertypingCapturer: this._overtypingCapturer.value\n\t\t});\n\n\t\tif (!(flags & InsertFlags.NoAfterUndoStop)) {\n\t\t\tthis.editor.pushUndoStop();\n\t\t}\n\n\t\tif (item.completion.command) {\n\t\t\tif (item.completion.command.id === TriggerSuggestAction.id) {\n\t\t\t\t// retigger\n\t\t\t\tthis.model.trigger({ auto: true, retrigger: true });\n\t\t\t} else {\n\t\t\t\t// exec command, done\n\t\t\t\tconst sw = new StopWatch();\n\t\t\t\ttasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(e => {\n\t\t\t\t\tif (item.completion.extensionId) {\n\t\t\t\t\t\tonUnexpectedExternalError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t\t}\n\t\t\t\t}).finally(() => {\n\t\t\t\t\t_commandExectionDuration = sw.elapsed();\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tif (flags & InsertFlags.KeepAlternativeSuggestions) {\n\t\t\tthis._alternatives.value.set(event, next => {\n\n\t\t\t\t// cancel resolving of additional edits\n\t\t\t\tcts.cancel();\n\n\t\t\t\t// this is not so pretty. when inserting the 'next'\n\t\t\t\t// suggestion we undo until we are at the state at\n\t\t\t\t// which we were before inserting the previous suggestion...\n\t\t\t\twhile (model.canUndo()) {\n\t\t\t\t\tif (modelVersionNow !== model.getAlternativeVersionId()) {\n\t\t\t\t\t\tmodel.undo();\n\t\t\t\t\t}\n\t\t\t\t\tthis._insertSuggestion(\n\t\t\t\t\t\tnext,\n\t\t\t\t\t\tInsertFlags.NoBeforeUndoStop | InsertFlags.NoAfterUndoStop | (flags & InsertFlags.AlternativeOverwriteConfig ? InsertFlags.AlternativeOverwriteConfig : 0)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis._alertCompletionItem(item);\n\n\t\t// clear only now - after all tasks are done\n\t\tPromise.all(tasks).finally(() => {\n\t\t\tthis._reportSuggestionAcceptedTelemetry(item, model, isResolved, _commandExectionDuration, _additionalEditsAppliedAsync, event.index, event.model.items);\n\n\t\t\tthis.model.clear();\n\t\t\tcts.dispose();\n\t\t});\n\t}\n\n\tprivate _reportSuggestionAcceptedTelemetry(item: CompletionItem, model: ITextModel, itemResolved: boolean, commandExectionDuration: number, additionalEditsAppliedAsync: number, index: number, completionItems: CompletionItem[]): void {\n\t\tif (Math.floor(Math.random() * 100) === 0) {\n\t\t\t// throttle telemetry event because accepting completions happens a lot\n\t\t\treturn;\n\t\t}\n\n\t\tconst labelMap = new Map<string, number[]>();\n\n\t\tfor (let i = 0; i < Math.min(30, completionItems.length); i++) {\n\t\t\tconst label = completionItems[i].textLabel;\n\n\t\t\tif (labelMap.has(label)) {\n\t\t\t\tlabelMap.get(label)!.push(i);\n\t\t\t} else {\n\t\t\t\tlabelMap.set(label, [i]);\n\t\t\t}\n\t\t}\n\n\t\tconst firstIndexArray = labelMap.get(item.textLabel);\n\t\tconst hasDuplicates = firstIndexArray && firstIndexArray.length > 1;\n\t\tconst firstIndex = hasDuplicates ? firstIndexArray[0] : -1;\n\n\t\ttype AcceptedSuggestion = {\n\t\t\textensionId: string; providerId: string;\n\t\t\tfileExtension: string; languageId: string; basenameHash: string; kind: number;\n\t\t\tresolveInfo: number; resolveDuration: number;\n\t\t\tcommandDuration: number;\n\t\t\tadditionalEditsAsync: number;\n\t\t\tindex: number; firstIndex: number;\n\t\t};\n\t\ttype AcceptedSuggestionClassification = {\n\t\t\towner: 'jrieken';\n\t\t\tcomment: 'Information accepting completion items';\n\t\t\textensionId: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'Extension contributing the completions item' };\n\t\t\tproviderId: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'Provider of the completions item' };\n\t\t\tbasenameHash: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'Hash of the basename of the file into which the completion was inserted' };\n\t\t\tfileExtension: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'File extension of the file into which the completion was inserted' };\n\t\t\tlanguageId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Language type of the file into which the completion was inserted' };\n\t\t\tkind: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The completion item kind' };\n\t\t\tresolveInfo: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'If the item was inserted before resolving was done' };\n\t\t\tresolveDuration: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'How long resolving took to finish' };\n\t\t\tcommandDuration: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'How long a completion item command took' };\n\t\t\tadditionalEditsAsync: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Info about asynchronously applying additional edits' };\n\t\t\tindex: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The index of the completion item in the sorted list.' };\n\t\t\tfirstIndex: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'When there are multiple completions, the index of the first instance.' };\n\t\t};\n\n\t\tthis._telemetryService.publicLog2<AcceptedSuggestion, AcceptedSuggestionClassification>('suggest.acceptedSuggestion', {\n\t\t\textensionId: item.extensionId?.value ?? 'unknown',\n\t\t\tproviderId: item.provider._debugDisplayName ?? 'unknown',\n\t\t\tkind: item.completion.kind,\n\t\t\tbasenameHash: hash(basename(model.uri)).toString(16),\n\t\t\tlanguageId: model.getLanguageId(),\n\t\t\tfileExtension: extname(model.uri),\n\t\t\tresolveInfo: !item.provider.resolveCompletionItem ? -1 : itemResolved ? 1 : 0,\n\t\t\tresolveDuration: item.resolveDuration,\n\t\t\tcommandDuration: commandExectionDuration,\n\t\t\tadditionalEditsAsync: additionalEditsAppliedAsync,\n\t\t\tindex,\n\t\t\tfirstIndex,\n\t\t});\n\t}\n\n\tgetOverwriteInfo(item: CompletionItem, toggleMode: boolean): { overwriteBefore: number; overwriteAfter: number } {\n\t\tassertType(this.editor.hasModel());\n\n\t\tlet replace = this.editor.getOption(EditorOption.suggest).insertMode === 'replace';\n\t\tif (toggleMode) {\n\t\t\treplace = !replace;\n\t\t}\n\t\tconst overwriteBefore = item.position.column - item.editStart.column;\n\t\tconst overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n\t\tconst columnDelta = this.editor.getPosition().column - item.position.column;\n\t\tconst suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n\n\t\treturn {\n\t\t\toverwriteBefore: overwriteBefore + columnDelta,\n\t\t\toverwriteAfter: overwriteAfter + suffixDelta\n\t\t};\n\t}\n\n\tprivate _alertCompletionItem(item: CompletionItem): void {\n\t\tif (isNonEmptyArray(item.completion.additionalTextEdits)) {\n\t\t\tconst msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n\t\t\talert(msg);\n\t\t}\n\t}\n\n\ttriggerSuggest(onlyFrom?: Set<CompletionItemProvider>, auto?: boolean, noFilter?: boolean): void {\n\t\tif (this.editor.hasModel()) {\n\t\t\tthis.model.trigger({\n\t\t\t\tauto: auto ?? false,\n\t\t\t\tcompletionOptions: { providerFilter: onlyFrom, kindFilter: noFilter ? new Set() : undefined }\n\t\t\t});\n\t\t\tthis.editor.revealPosition(this.editor.getPosition(), ScrollType.Smooth);\n\t\t\tthis.editor.focus();\n\t\t}\n\t}\n\n\ttriggerSuggestAndAcceptBest(arg: { fallback: string }): void {\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\n\t\t}\n\t\tconst positionNow = this.editor.getPosition();\n\n\t\tconst fallback = () => {\n\t\t\tif (positionNow.equals(this.editor.getPosition()!)) {\n\t\t\t\tthis._commandService.executeCommand(arg.fallback);\n\t\t\t}\n\t\t};\n\n\t\tconst makesTextEdit = (item: CompletionItem): boolean => {\n\t\t\tif (item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet || item.completion.additionalTextEdits) {\n\t\t\t\t// snippet, other editor -> makes edit\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst position = this.editor.getPosition()!;\n\t\t\tconst startColumn = item.editStart.column;\n\t\t\tconst endColumn = position.column;\n\t\t\tif (endColumn - startColumn !== item.completion.insertText.length) {\n\t\t\t\t// unequal lengths -> makes edit\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst textNow = this.editor.getModel()!.getValueInRange({\n\t\t\t\tstartLineNumber: position.lineNumber,\n\t\t\t\tstartColumn,\n\t\t\t\tendLineNumber: position.lineNumber,\n\t\t\t\tendColumn\n\t\t\t});\n\t\t\t// unequal text -> makes edit\n\t\t\treturn textNow !== item.completion.insertText;\n\t\t};\n\n\t\tEvent.once(this.model.onDidTrigger)(_ => {\n\t\t\t// wait for trigger because only then the cancel-event is trustworthy\n\t\t\tconst listener: IDisposable[] = [];\n\n\t\t\tEvent.any<any>(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n\t\t\t\t// retrigger or cancel -> try to type default text\n\t\t\t\tdispose(listener);\n\t\t\t\tfallback();\n\t\t\t}, undefined, listener);\n\n\t\t\tthis.model.onDidSuggest(({ completionModel }) => {\n\t\t\t\tdispose(listener);\n\t\t\t\tif (completionModel.items.length === 0) {\n\t\t\t\t\tfallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst index = this._memoryService.select(this.editor.getModel()!, this.editor.getPosition()!, completionModel.items);\n\t\t\t\tconst item = completionModel.items[index];\n\t\t\t\tif (!makesTextEdit(item)) {\n\t\t\t\t\tfallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\tthis._insertSuggestion({ index, item, model: completionModel }, InsertFlags.KeepAlternativeSuggestions | InsertFlags.NoBeforeUndoStop | InsertFlags.NoAfterUndoStop);\n\n\t\t\t}, undefined, listener);\n\t\t});\n\n\t\tthis.model.trigger({ auto: false, shy: true });\n\t\tthis.editor.revealPosition(positionNow, ScrollType.Smooth);\n\t\tthis.editor.focus();\n\t}\n\n\tacceptSelectedSuggestion(keepAlternativeSuggestions: boolean, alternativeOverwriteConfig: boolean): void {\n\t\tconst item = this.widget.value.getFocusedItem();\n\t\tlet flags = 0;\n\t\tif (keepAlternativeSuggestions) {\n\t\t\tflags |= InsertFlags.KeepAlternativeSuggestions;\n\t\t}\n\t\tif (alternativeOverwriteConfig) {\n\t\t\tflags |= InsertFlags.AlternativeOverwriteConfig;\n\t\t}\n\t\tthis._insertSuggestion(item, flags);\n\t}\n\n\tacceptNextSuggestion() {\n\t\tthis._alternatives.value.next();\n\t}\n\n\tacceptPrevSuggestion() {\n\t\tthis._alternatives.value.prev();\n\t}\n\n\tcancelSuggestWidget(): void {\n\t\tthis.model.cancel();\n\t\tthis.model.clear();\n\t\tthis.widget.value.hideWidget();\n\t}\n\n\tfocusSuggestion(): void {\n\t\tthis.widget.value.focusSelected();\n\t}\n\n\tselectNextSuggestion(): void {\n\t\tthis.widget.value.selectNext();\n\t}\n\n\tselectNextPageSuggestion(): void {\n\t\tthis.widget.value.selectNextPage();\n\t}\n\n\tselectLastSuggestion(): void {\n\t\tthis.widget.value.selectLast();\n\t}\n\n\tselectPrevSuggestion(): void {\n\t\tthis.widget.value.selectPrevious();\n\t}\n\n\tselectPrevPageSuggestion(): void {\n\t\tthis.widget.value.selectPreviousPage();\n\t}\n\n\tselectFirstSuggestion(): void {\n\t\tthis.widget.value.selectFirst();\n\t}\n\n\ttoggleSuggestionDetails(): void {\n\t\tthis.widget.value.toggleDetails();\n\t}\n\n\ttoggleExplainMode(): void {\n\t\tthis.widget.value.toggleExplainMode();\n\t}\n\n\ttoggleSuggestionFocus(): void {\n\t\tthis.widget.value.toggleDetailsFocus();\n\t}\n\n\tresetWidgetSize(): void {\n\t\tthis.widget.value.resetPersistedSize();\n\t}\n\n\tforceRenderingAbove() {\n\t\tthis.widget.value.forceRenderingAbove();\n\t}\n\n\tstopForceRenderingAbove() {\n\t\tif (!this.widget.isInitialized) {\n\t\t\t// This method has no effect if the widget is not initialized yet.\n\t\t\treturn;\n\t\t}\n\t\tthis.widget.value.stopForceRenderingAbove();\n\t}\n\n\tregisterSelector(selector: ISuggestItemPreselector): IDisposable {\n\t\treturn this._selectors.register(selector);\n\t}\n}\n\nclass PriorityRegistry<T> {\n\tprivate readonly _items = new Array<T>();\n\n\tconstructor(private readonly prioritySelector: (item: T) => number) { }\n\n\tregister(value: T): IDisposable {\n\t\tif (this._items.indexOf(value) !== -1) {\n\t\t\tthrow new Error('Value is already registered');\n\t\t}\n\t\tthis._items.push(value);\n\t\tthis._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tconst idx = this._items.indexOf(value);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis._items.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tget itemsOrderedByPriorityDesc(): readonly T[] {\n\t\treturn this._items;\n\t}\n}\n\nexport class TriggerSuggestAction extends EditorAction {\n\n\tstatic readonly id = 'editor.action.triggerSuggest';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TriggerSuggestAction.id,\n\t\t\tlabel: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n\t\t\talias: 'Trigger Suggest',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider, SuggestContext.Visible.toNegated()),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyI],\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Space, secondary: [KeyMod.Alt | KeyCode.Escape, KeyMod.CtrlCmd | KeyCode.KeyI] },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trun(_accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tconst controller = SuggestController.get(editor);\n\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype TriggerArgs = { auto: boolean };\n\t\tlet auto: boolean | undefined;\n\t\tif (args && typeof args === 'object') {\n\t\t\tif ((<TriggerArgs>args).auto === true) {\n\t\t\t\tauto = true;\n\t\t\t}\n\t\t}\n\n\t\tcontroller.triggerSuggest(undefined, auto, undefined);\n\t}\n}\n\nregisterEditorContribution(SuggestController.ID, SuggestController, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorAction(TriggerSuggestAction);\n\nconst weight = KeybindingWeight.EditorContrib + 90;\n\nconst SuggestCommand = EditorCommand.bindToContribution<SuggestController>(SuggestController.get);\n\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'acceptSelectedSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n\thandler(x) {\n\t\tx.acceptSelectedSuggestion(true, false);\n\t},\n\tkbOpts: [{\n\t\t// normal tab\n\t\tprimary: KeyCode.Tab,\n\t\tkbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n\t\tweight,\n\t}, {\n\t\t// accept on enter has special rules\n\t\tprimary: KeyCode.Enter,\n\t\tkbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n\t\tweight,\n\t}],\n\tmenuOpts: [{\n\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\ttitle: nls.localize('accept.insert', \"Insert\"),\n\t\tgroup: 'left',\n\t\torder: 1,\n\t\twhen: SuggestContext.HasInsertAndReplaceRange.toNegated()\n\t}, {\n\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\ttitle: nls.localize('accept.insert', \"Insert\"),\n\t\tgroup: 'left',\n\t\torder: 1,\n\t\twhen: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n\t}, {\n\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\ttitle: nls.localize('accept.replace', \"Replace\"),\n\t\tgroup: 'left',\n\t\torder: 1,\n\t\twhen: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n\t}]\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'acceptAlternativeSelectedSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.HasFocusedSuggestion),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Tab],\n\t},\n\thandler(x) {\n\t\tx.acceptSelectedSuggestion(false, true);\n\t},\n\tmenuOpts: [{\n\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\tgroup: 'left',\n\t\torder: 2,\n\t\twhen: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n\t\ttitle: nls.localize('accept.replace', \"Replace\")\n\t}, {\n\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\tgroup: 'left',\n\t\torder: 2,\n\t\twhen: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n\t\ttitle: nls.localize('accept.insert', \"Insert\")\n\t}]\n}));\n\n\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'hideSuggestWidget',\n\tprecondition: SuggestContext.Visible,\n\thandler: x => x.cancelSuggestWidget(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectNextSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n\thandler: c => c.selectNextSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.DownArrow,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow],\n\t\tmac: { primary: KeyCode.DownArrow, secondary: [KeyMod.CtrlCmd | KeyCode.DownArrow, KeyMod.WinCtrl | KeyCode.KeyN] }\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectNextPageSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n\thandler: c => c.selectNextPageSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.PageDown,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.PageDown]\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectLastSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n\thandler: c => c.selectLastSuggestion()\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectPrevSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n\thandler: c => c.selectPrevSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.UpArrow,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.UpArrow],\n\t\tmac: { primary: KeyCode.UpArrow, secondary: [KeyMod.CtrlCmd | KeyCode.UpArrow, KeyMod.WinCtrl | KeyCode.KeyP] }\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectPrevPageSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n\thandler: c => c.selectPrevPageSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.PageUp,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.PageUp]\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectFirstSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n\thandler: c => c.selectFirstSuggestion()\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'focusSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n\thandler: x => x.focusSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyI],\n\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Space, secondary: [KeyMod.CtrlCmd | KeyCode.KeyI] }\n\t},\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'focusAndAcceptSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n\thandler: c => {\n\t\tc.focusSuggestion();\n\t\tc.acceptSelectedSuggestion(true, false);\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'toggleSuggestionDetails',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n\thandler: x => x.toggleSuggestionDetails(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyI],\n\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Space, secondary: [KeyMod.CtrlCmd | KeyCode.KeyI] }\n\t},\n\tmenuOpts: [{\n\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\tgroup: 'right',\n\t\torder: 1,\n\t\twhen: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n\t\ttitle: nls.localize('detail.more', \"Show Less\")\n\t}, {\n\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\tgroup: 'right',\n\t\torder: 1,\n\t\twhen: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n\t\ttitle: nls.localize('detail.less', \"Show More\")\n\t}]\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'toggleExplainMode',\n\tprecondition: SuggestContext.Visible,\n\thandler: x => x.toggleExplainMode(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Slash,\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'toggleSuggestionFocus',\n\tprecondition: SuggestContext.Visible,\n\thandler: x => x.toggleSuggestionFocus(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Space,\n\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.Space }\n\t}\n}));\n\n//#region tab completions\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'insertBestCompletion',\n\tprecondition: ContextKeyExpr.and(\n\t\tEditorContextKeys.textInputFocus,\n\t\tContextKeyExpr.equals('config.editor.tabCompletion', 'on'),\n\t\tWordContextKey.AtEnd,\n\t\tSuggestContext.Visible.toNegated(),\n\t\tSuggestAlternatives.OtherSuggestions.toNegated(),\n\t\tSnippetController2.InSnippetMode.toNegated()\n\t),\n\thandler: (x, arg) => {\n\n\t\tx.triggerSuggestAndAcceptBest(isObject(arg) ? { fallback: 'tab', ...arg } : { fallback: 'tab' });\n\t},\n\tkbOpts: {\n\t\tweight,\n\t\tprimary: KeyCode.Tab\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'insertNextSuggestion',\n\tprecondition: ContextKeyExpr.and(\n\t\tEditorContextKeys.textInputFocus,\n\t\tContextKeyExpr.equals('config.editor.tabCompletion', 'on'),\n\t\tSuggestAlternatives.OtherSuggestions,\n\t\tSuggestContext.Visible.toNegated(),\n\t\tSnippetController2.InSnippetMode.toNegated()\n\t),\n\thandler: x => x.acceptNextSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.Tab\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'insertPrevSuggestion',\n\tprecondition: ContextKeyExpr.and(\n\t\tEditorContextKeys.textInputFocus,\n\t\tContextKeyExpr.equals('config.editor.tabCompletion', 'on'),\n\t\tSuggestAlternatives.OtherSuggestions,\n\t\tSuggestContext.Visible.toNegated(),\n\t\tSnippetController2.InSnippetMode.toNegated()\n\t),\n\thandler: x => x.acceptPrevSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyMod.Shift | KeyCode.Tab\n\t}\n}));\n\n\nregisterEditorAction(class extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.resetSuggestSize',\n\t\t\tlabel: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n\t\t\talias: 'Reset Suggest Widget Size',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\trun(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tSuggestController.get(editor)?.resetWidgetSize();\n\t}\n});\n"],
  "mappings": "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",
  "names": ["InsertFlags"]
}
