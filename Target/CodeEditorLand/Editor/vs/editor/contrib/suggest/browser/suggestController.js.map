{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/browser/suggestController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WindowIdleValue, getWindow } from \"../../../../base/browser/dom.js\";\nimport { alert } from \"../../../../base/browser/ui/aria/aria.js\";\nimport { isNonEmptyArray } from \"../../../../base/common/arrays.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport {\n\tonUnexpectedError,\n\tonUnexpectedExternalError,\n} from \"../../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { hash } from \"../../../../base/common/hash.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { KeyCodeChord } from \"../../../../base/common/keybindings.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport * as platform from \"../../../../base/common/platform.js\";\nimport { basename, extname } from \"../../../../base/common/resources.js\";\nimport { StopWatch } from \"../../../../base/common/stopwatch.js\";\nimport { assertType, isObject } from \"../../../../base/common/types.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorCommand,\n\tEditorContributionInstantiation,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorCommand,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport { StableEditorScrollState } from \"../../../browser/stableEditorScroll.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { EditOperation } from \"../../../common/core/editOperation.js\";\nimport { type IPosition, Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport {\n\ttype IEditorContribution,\n\tScrollType,\n} from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport {\n\tCompletionItemInsertTextRule,\n\ttype CompletionItemProvider,\n\tCompletionTriggerKind,\n} from \"../../../common/languages.js\";\nimport {\n\ttype ITextModel,\n\tTrackedRangeStickiness,\n} from \"../../../common/model.js\";\nimport { ModelDecorationOptions } from \"../../../common/model/textModel.js\";\nimport { SnippetController2 } from \"../../snippet/browser/snippetController2.js\";\nimport { SnippetParser } from \"../../snippet/browser/snippetParser.js\";\nimport {\n\ttype CompletionItem,\n\ttype ISuggestItemPreselector,\n\tContext as SuggestContext,\n\tsuggestWidgetStatusbarMenu,\n} from \"./suggest.js\";\nimport { SuggestAlternatives } from \"./suggestAlternatives.js\";\nimport { CommitCharacterController } from \"./suggestCommitCharacters.js\";\nimport { ISuggestMemoryService } from \"./suggestMemory.js\";\nimport { State, SuggestModel } from \"./suggestModel.js\";\nimport { OvertypingCapturer } from \"./suggestOvertypingCapturer.js\";\nimport { type ISelectedSuggestion, SuggestWidget } from \"./suggestWidget.js\";\nimport { WordContextKey } from \"./wordContextKey.js\";\n\n// sticky suggest widget which doesn't disappear on focus out and such\nconst _sticky = false;\n// || Boolean(\"true\") // done \"weirdly\" so that a lint warning prevents you from pushing this\n\nclass LineSuffix {\n\tprivate readonly _decorationOptions = ModelDecorationOptions.register({\n\t\tdescription: \"suggest-line-suffix\",\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t});\n\n\tprivate _marker: string | undefined;\n\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _position: IPosition,\n\t) {\n\t\t// spy on what's happening right of the cursor. two cases:\n\t\t// 1. end of line -> check that it's still end of line\n\t\t// 2. mid of line -> add a marker and compute the delta\n\t\tconst maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n\t\tif (maxColumn !== _position.column) {\n\t\t\tconst offset = _model.getOffsetAt(_position);\n\t\t\tconst end = _model.getPositionAt(offset + 1);\n\t\t\t_model.changeDecorations((accessor) => {\n\t\t\t\tif (this._marker) {\n\t\t\t\t\taccessor.removeDecoration(this._marker);\n\t\t\t\t}\n\t\t\t\tthis._marker = accessor.addDecoration(\n\t\t\t\t\tRange.fromPositions(_position, end),\n\t\t\t\t\tthis._decorationOptions,\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._marker && !this._model.isDisposed()) {\n\t\t\tthis._model.changeDecorations((accessor) => {\n\t\t\t\taccessor.removeDecoration(this._marker!);\n\t\t\t\tthis._marker = undefined;\n\t\t\t});\n\t\t}\n\t}\n\n\tdelta(position: IPosition): number {\n\t\tif (\n\t\t\tthis._model.isDisposed() ||\n\t\t\tthis._position.lineNumber !== position.lineNumber\n\t\t) {\n\t\t\t// bail out early if things seems fishy\n\t\t\treturn 0;\n\t\t}\n\t\t// read the marker (in case suggest was triggered at line end) or compare\n\t\t// the cursor to the line end.\n\t\tif (this._marker) {\n\t\t\tconst range = this._model.getDecorationRange(this._marker);\n\t\t\tconst end = this._model.getOffsetAt(range!.getStartPosition());\n\t\t\treturn end - this._model.getOffsetAt(position);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\tthis._model.getLineMaxColumn(position.lineNumber) -\n\t\t\t\tposition.column\n\t\t\t);\n\t\t}\n\t}\n}\n\nenum InsertFlags {\n\tNone = 0,\n\tNoBeforeUndoStop = 1,\n\tNoAfterUndoStop = 2,\n\tKeepAlternativeSuggestions = 4,\n\tAlternativeOverwriteConfig = 8,\n}\n\nexport class SuggestController implements IEditorContribution {\n\tpublic static readonly ID: string = \"editor.contrib.suggestController\";\n\n\tpublic static get(editor: ICodeEditor): SuggestController | null {\n\t\treturn editor.getContribution<SuggestController>(SuggestController.ID);\n\t}\n\n\treadonly editor: ICodeEditor;\n\treadonly model: SuggestModel;\n\treadonly widget: WindowIdleValue<SuggestWidget>;\n\n\tprivate readonly _alternatives: WindowIdleValue<SuggestAlternatives>;\n\tprivate readonly _lineSuffix = new MutableDisposable<LineSuffix>();\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _overtypingCapturer: WindowIdleValue<OvertypingCapturer>;\n\tprivate readonly _selectors = new PriorityRegistry<ISuggestItemPreselector>(\n\t\t(s) => s.priority,\n\t);\n\n\tprivate readonly _onWillInsertSuggestItem = new Emitter<{\n\t\titem: CompletionItem;\n\t}>();\n\treadonly onWillInsertSuggestItem: Event<{ item: CompletionItem }> =\n\t\tthis._onWillInsertSuggestItem.event;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ISuggestMemoryService private readonly _memoryService: ISuggestMemoryService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t\tthis.editor = editor;\n\t\tthis.model = _instantiationService.createInstance(SuggestModel, this.editor,);\n\n\t\t// default selector\n\t\tthis._selectors.register({\n\t\t\tpriority: 0,\n\t\t\tselect: (model, pos, items) => this._memoryService.select(model, pos, items)\n\t\t});\n\n\t\t// context key: update insert/replace mode\n\t\tconst ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n\t\tctxInsertMode.set(editor.getOption(EditorOption.suggest).insertMode);\n\t\tthis._toDispose.add(this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(EditorOption.suggest).insertMode)));\n\n\t\tthis.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n\n\t\t\tconst widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n\n\t\t\tthis._toDispose.add(widget);\n\t\t\tthis._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, InsertFlags.None), this));\n\n\t\t\t// Wire up logic to accept a suggestion on certain characters\n\t\t\tconst commitCharacterController = new CommitCharacterController(this.editor, widget, this.model, item => this._insertSuggestion(item, InsertFlags.NoAfterUndoStop));\n\t\t\tthis._toDispose.add(commitCharacterController);\n\n\n\t\t\t// Wire up makes text edit context key\n\t\t\tconst ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n\t\t\tconst ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n\t\t\tconst ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n\n\t\t\tthis._toDispose.add(toDisposable(() => {\n\t\t\t\tctxMakesTextEdit.reset();\n\t\t\t\tctxHasInsertAndReplace.reset();\n\t\t\t\tctxCanResolve.reset();\n\t\t\t}));\n\n\t\t\tthis._toDispose.add(widget.onDidFocus(({ item }) => {\n\n\t\t\t\t// (ctx: makesTextEdit)\n\t\t\t\tconst position = this.editor.getPosition()!;\n\t\t\t\tconst startColumn = item.editStart.column;\n\t\t\t\tconst endColumn = position.column;\n\t\t\t\tlet value = true;\n\t\t\t\tif (\n\t\t\t\t\tthis.editor.getOption(EditorOption.acceptSuggestionOnEnter) === 'smart'\n\t\t\t\t\t&& this.model.state === State.Auto\n\t\t\t\t\t&& !item.completion.additionalTextEdits\n\t\t\t\t\t&& !(item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet)\n\t\t\t\t\t&& endColumn - startColumn === item.completion.insertText.length\n\t\t\t\t) {\n\t\t\t\t\tconst oldText = this.editor.getModel()!.getValueInRange({\n\t\t\t\t\t\tstartLineNumber: position.lineNumber,\n\t\t\t\t\t\tstartColumn,\n\t\t\t\t\t\tendLineNumber: position.lineNumber,\n\t\t\t\t\t\tendColumn\n\t\t\t\t\t});\n\t\t\t\t\tvalue = oldText !== item.completion.insertText;\n\t\t\t\t}\n\t\t\t\tctxMakesTextEdit.set(value);\n\n\t\t\t\t// (ctx: hasInsertAndReplaceRange)\n\t\t\t\tctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n\n\t\t\t\t// (ctx: canResolve)\n\t\t\t\tctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n\t\t\t}));\n\n\t\t\tthis._toDispose.add(widget.onDetailsKeyDown(e => {\n\t\t\t\t// cmd + c on macOS, ctrl + c on Win / Linux\n\t\t\t\tif (\n\t\t\t\t\te.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, KeyCode.KeyC)) ||\n\t\t\t\t\t(platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, KeyCode.KeyC)))\n\t\t\t\t) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!e.toKeyCodeChord().isModifierKey()) {\n\t\t\t\t\tthis.editor.focus();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn widget;\n\t\t}));\n\n\t\t// Wire up text overtyping capture\n\t\tthis._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n\t\t\treturn this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n\t\t}));\n\n\t\tthis._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n\t\t\treturn this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n\t\t}));\n\n\t\tthis._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n\n\t\tthis._toDispose.add(this.model.onDidTrigger(e => {\n\t\t\tthis.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n\t\t\tthis._lineSuffix.value = new LineSuffix(this.editor.getModel()!, e.position);\n\t\t}));\n\t\tthis._toDispose.add(this.model.onDidSuggest(e => {\n\t\t\tif (e.triggerOptions.shy) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet index = -1;\n\t\t\tfor (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n\t\t\t\tindex = selector.select(this.editor.getModel()!, this.editor.getPosition()!, e.completionModel.items);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (index === -1) {\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\tif (this.model.state === State.Idle) {\n\t\t\t\t// selecting an item can \"pump\" out selection/cursor change events\n\t\t\t\t// which can cancel suggest halfway through this function. therefore\n\t\t\t\t// we need to check again and bail if the session has been canceled\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet noFocus = false;\n\t\t\tif (e.triggerOptions.auto) {\n\t\t\t\t// don't \"focus\" item when configured to do\n\t\t\t\tconst options = this.editor.getOption(EditorOption.suggest);\n\t\t\t\tif (options.selectionMode === 'never' || options.selectionMode === 'always') {\n\t\t\t\t\t// simple: always or never\n\t\t\t\t\tnoFocus = options.selectionMode === 'never';\n\n\t\t\t\t} else if (options.selectionMode === 'whenTriggerCharacter') {\n\t\t\t\t\t// on with trigger character\n\t\t\t\t\tnoFocus = e.triggerOptions.triggerKind !== CompletionTriggerKind.TriggerCharacter;\n\n\t\t\t\t} else if (options.selectionMode === 'whenQuickSuggestion') {\n\t\t\t\t\t// without trigger character or when refiltering\n\t\t\t\t\tnoFocus = e.triggerOptions.triggerKind === CompletionTriggerKind.TriggerCharacter && !e.triggerOptions.refilter;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\n\t\t}));\n\t\tthis._toDispose.add(this.model.onDidCancel(e => {\n\t\t\tif (!e.retrigger) {\n\t\t\t\tthis.widget.value.hideWidget();\n\t\t\t}\n\t\t}));\n\t\tthis._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n\t\t\tif (!_sticky) {\n\t\t\t\tthis.model.cancel();\n\t\t\t\tthis.model.clear();\n\t\t\t}\n\t\t}));\n\n\t\t// Manage the acceptSuggestionsOnEnter context key\n\t\tconst acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n\t\tconst updateFromConfig = () => {\n\t\t\tconst acceptSuggestionOnEnter = this.editor.getOption(EditorOption.acceptSuggestionOnEnter);\n\t\t\tacceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n\t\t};\n\t\tthis._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n\t\tupdateFromConfig();\n\t}\n\n\tdispose(): void {\n\t\tthis._alternatives.dispose();\n\t\tthis._toDispose.dispose();\n\t\tthis.widget.dispose();\n\t\tthis.model.dispose();\n\t\tthis._lineSuffix.dispose();\n\t\tthis._onWillInsertSuggestItem.dispose();\n\t}\n\n\tprotected _insertSuggestion(\n\t\tevent: ISelectedSuggestion | undefined,\n\t\tflags: InsertFlags,\n\t): void {\n\t\tif (!event || !event.item) {\n\t\t\tthis._alternatives.value.reset();\n\t\t\tthis.model.cancel();\n\t\t\tthis.model.clear();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst snippetController = SnippetController2.get(this.editor);\n\t\tif (!snippetController) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._onWillInsertSuggestItem.fire({ item: event.item });\n\n\t\tconst model = this.editor.getModel();\n\t\tconst modelVersionNow = model.getAlternativeVersionId();\n\t\tconst { item } = event;\n\n\t\t//\n\t\tconst tasks: Promise<any>[] = [];\n\t\tconst cts = new CancellationTokenSource();\n\n\t\t// pushing undo stops *before* additional text edits and\n\t\t// *after* the main edit\n\t\tif (!(flags & InsertFlags.NoBeforeUndoStop)) {\n\t\t\tthis.editor.pushUndoStop();\n\t\t}\n\n\t\t// compute overwrite[Before|After] deltas BEFORE applying extra edits\n\t\tconst info = this.getOverwriteInfo(\n\t\t\titem,\n\t\t\tBoolean(flags & InsertFlags.AlternativeOverwriteConfig),\n\t\t);\n\n\t\t// keep item in memory\n\t\tthis._memoryService.memorize(model, this.editor.getPosition(), item);\n\n\t\tconst isResolved = item.isResolved;\n\n\t\t// telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\n\t\tlet _commandExectionDuration = -1;\n\t\tlet _additionalEditsAppliedAsync = -1;\n\n\t\tif (Array.isArray(item.completion.additionalTextEdits)) {\n\t\t\t// cancel -> stops all listening and closes widget\n\t\t\tthis.model.cancel();\n\n\t\t\t// sync additional edits\n\t\t\tconst scrollState = StableEditorScrollState.capture(this.editor);\n\t\t\tthis.editor.executeEdits(\n\t\t\t\t\"suggestController.additionalTextEdits.sync\",\n\t\t\t\titem.completion.additionalTextEdits.map((edit) => {\n\t\t\t\t\tlet range = Range.lift(edit.range);\n\t\t\t\t\tif (\n\t\t\t\t\t\trange.startLineNumber === item.position.lineNumber &&\n\t\t\t\t\t\trange.startColumn > item.position.column\n\t\t\t\t\t) {\n\t\t\t\t\t\t// shift additional edit when it is \"after\" the completion insertion position\n\t\t\t\t\t\tconst columnDelta =\n\t\t\t\t\t\t\tthis.editor.getPosition()!.column -\n\t\t\t\t\t\t\titem.position.column;\n\t\t\t\t\t\tconst startColumnDelta = columnDelta;\n\t\t\t\t\t\tconst endColumnDelta = Range.spansMultipleLines(range)\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: columnDelta;\n\t\t\t\t\t\trange = new Range(\n\t\t\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\t\t\trange.startColumn + startColumnDelta,\n\t\t\t\t\t\t\trange.endLineNumber,\n\t\t\t\t\t\t\trange.endColumn + endColumnDelta,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn EditOperation.replaceMove(range, edit.text);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tscrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n\t\t} else if (!isResolved) {\n\t\t\t// async additional edits\n\t\t\tconst sw = new StopWatch();\n\t\t\tlet position: IPosition | undefined;\n\n\t\t\tconst docListener = model.onDidChangeContent((e) => {\n\t\t\t\tif (e.isFlush) {\n\t\t\t\t\tcts.cancel();\n\t\t\t\t\tdocListener.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const change of e.changes) {\n\t\t\t\t\tconst thisPosition = Range.getEndPosition(change.range);\n\t\t\t\t\tif (\n\t\t\t\t\t\t!position ||\n\t\t\t\t\t\tPosition.isBefore(thisPosition, position)\n\t\t\t\t\t) {\n\t\t\t\t\t\tposition = thisPosition;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst oldFlags = flags;\n\t\t\tflags |= InsertFlags.NoAfterUndoStop;\n\t\t\tlet didType = false;\n\t\t\tconst typeListener = this.editor.onWillType(() => {\n\t\t\t\ttypeListener.dispose();\n\t\t\t\tdidType = true;\n\t\t\t\tif (!(oldFlags & InsertFlags.NoAfterUndoStop)) {\n\t\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ttasks.push(\n\t\t\t\titem\n\t\t\t\t\t.resolve(cts.token)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!item.completion.additionalTextEdits ||\n\t\t\t\t\t\t\tcts.token.isCancellationRequested\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tposition &&\n\t\t\t\t\t\t\titem.completion.additionalTextEdits.some((edit) =>\n\t\t\t\t\t\t\t\tPosition.isBefore(\n\t\t\t\t\t\t\t\t\tposition!,\n\t\t\t\t\t\t\t\t\tRange.getStartPosition(edit.range),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (didType) {\n\t\t\t\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst scrollState = StableEditorScrollState.capture(\n\t\t\t\t\t\t\tthis.editor,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.editor.executeEdits(\n\t\t\t\t\t\t\t\"suggestController.additionalTextEdits.async\",\n\t\t\t\t\t\t\titem.completion.additionalTextEdits.map((edit) =>\n\t\t\t\t\t\t\t\tEditOperation.replaceMove(\n\t\t\t\t\t\t\t\t\tRange.lift(edit.range),\n\t\t\t\t\t\t\t\t\tedit.text,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tscrollState.restoreRelativeVerticalPositionOfCursor(\n\t\t\t\t\t\t\tthis.editor,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdidType ||\n\t\t\t\t\t\t\t!(oldFlags & InsertFlags.NoAfterUndoStop)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t})\n\t\t\t\t\t.then((applied) => {\n\t\t\t\t\t\tthis._logService.trace(\n\t\t\t\t\t\t\t\"[suggest] async resolving of edits DONE (ms, applied?)\",\n\t\t\t\t\t\t\tsw.elapsed(),\n\t\t\t\t\t\t\tapplied,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t_additionalEditsAppliedAsync =\n\t\t\t\t\t\t\tapplied === true ? 1 : applied === false ? 0 : -2;\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tdocListener.dispose();\n\t\t\t\t\t\ttypeListener.dispose();\n\t\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tlet { insertText } = item.completion;\n\t\tif (\n\t\t\t!(\n\t\t\t\titem.completion.insertTextRules! &\n\t\t\t\tCompletionItemInsertTextRule.InsertAsSnippet\n\t\t\t)\n\t\t) {\n\t\t\tinsertText = SnippetParser.escape(insertText);\n\t\t}\n\n\t\t// cancel -> stops all listening and closes widget\n\t\tthis.model.cancel();\n\n\t\tsnippetController.insert(insertText, {\n\t\t\toverwriteBefore: info.overwriteBefore,\n\t\t\toverwriteAfter: info.overwriteAfter,\n\t\t\tundoStopBefore: false,\n\t\t\tundoStopAfter: false,\n\t\t\tadjustWhitespace: !(\n\t\t\t\titem.completion.insertTextRules! &\n\t\t\t\tCompletionItemInsertTextRule.KeepWhitespace\n\t\t\t),\n\t\t\tclipboardText: event.model.clipboardText,\n\t\t\tovertypingCapturer: this._overtypingCapturer.value,\n\t\t});\n\n\t\tif (!(flags & InsertFlags.NoAfterUndoStop)) {\n\t\t\tthis.editor.pushUndoStop();\n\t\t}\n\n\t\tif (item.completion.command) {\n\t\t\tif (item.completion.command.id === TriggerSuggestAction.id) {\n\t\t\t\t// retigger\n\t\t\t\tthis.model.trigger({ auto: true, retrigger: true });\n\t\t\t} else {\n\t\t\t\t// exec command, done\n\t\t\t\tconst sw = new StopWatch();\n\t\t\t\ttasks.push(\n\t\t\t\t\tthis._commandService\n\t\t\t\t\t\t.executeCommand(\n\t\t\t\t\t\t\titem.completion.command.id,\n\t\t\t\t\t\t\t...(item.completion.command.arguments\n\t\t\t\t\t\t\t\t? [...item.completion.command.arguments]\n\t\t\t\t\t\t\t\t: []),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\tif (item.completion.extensionId) {\n\t\t\t\t\t\t\t\tonUnexpectedExternalError(e);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t_commandExectionDuration = sw.elapsed();\n\t\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (flags & InsertFlags.KeepAlternativeSuggestions) {\n\t\t\tthis._alternatives.value.set(event, (next) => {\n\t\t\t\t// cancel resolving of additional edits\n\t\t\t\tcts.cancel();\n\n\t\t\t\t// this is not so pretty. when inserting the 'next'\n\t\t\t\t// suggestion we undo until we are at the state at\n\t\t\t\t// which we were before inserting the previous suggestion...\n\t\t\t\twhile (model.canUndo()) {\n\t\t\t\t\tif (modelVersionNow !== model.getAlternativeVersionId()) {\n\t\t\t\t\t\tmodel.undo();\n\t\t\t\t\t}\n\t\t\t\t\tthis._insertSuggestion(\n\t\t\t\t\t\tnext,\n\t\t\t\t\t\tInsertFlags.NoBeforeUndoStop |\n\t\t\t\t\t\t\tInsertFlags.NoAfterUndoStop |\n\t\t\t\t\t\t\t(flags & InsertFlags.AlternativeOverwriteConfig\n\t\t\t\t\t\t\t\t? InsertFlags.AlternativeOverwriteConfig\n\t\t\t\t\t\t\t\t: 0),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis._alertCompletionItem(item);\n\n\t\t// clear only now - after all tasks are done\n\t\tPromise.all(tasks).finally(() => {\n\t\t\tthis._reportSuggestionAcceptedTelemetry(\n\t\t\t\titem,\n\t\t\t\tmodel,\n\t\t\t\tisResolved,\n\t\t\t\t_commandExectionDuration,\n\t\t\t\t_additionalEditsAppliedAsync,\n\t\t\t\tevent.index,\n\t\t\t\tevent.model.items,\n\t\t\t);\n\n\t\t\tthis.model.clear();\n\t\t\tcts.dispose();\n\t\t});\n\t}\n\n\tprivate _reportSuggestionAcceptedTelemetry(\n\t\titem: CompletionItem,\n\t\tmodel: ITextModel,\n\t\titemResolved: boolean,\n\t\tcommandExectionDuration: number,\n\t\tadditionalEditsAppliedAsync: number,\n\t\tindex: number,\n\t\tcompletionItems: CompletionItem[],\n\t): void {\n\t\tif (Math.floor(Math.random() * 100) === 0) {\n\t\t\t// throttle telemetry event because accepting completions happens a lot\n\t\t\treturn;\n\t\t}\n\n\t\tconst labelMap = new Map<string, number[]>();\n\n\t\tfor (let i = 0; i < Math.min(30, completionItems.length); i++) {\n\t\t\tconst label = completionItems[i].textLabel;\n\n\t\t\tif (labelMap.has(label)) {\n\t\t\t\tlabelMap.get(label)!.push(i);\n\t\t\t} else {\n\t\t\t\tlabelMap.set(label, [i]);\n\t\t\t}\n\t\t}\n\n\t\tconst firstIndexArray = labelMap.get(item.textLabel);\n\t\tconst hasDuplicates = firstIndexArray && firstIndexArray.length > 1;\n\t\tconst firstIndex = hasDuplicates ? firstIndexArray[0] : -1;\n\n\t\ttype AcceptedSuggestion = {\n\t\t\textensionId: string;\n\t\t\tproviderId: string;\n\t\t\tfileExtension: string;\n\t\t\tlanguageId: string;\n\t\t\tbasenameHash: string;\n\t\t\tkind: number;\n\t\t\tresolveInfo: number;\n\t\t\tresolveDuration: number;\n\t\t\tcommandDuration: number;\n\t\t\tadditionalEditsAsync: number;\n\t\t\tindex: number;\n\t\t\tfirstIndex: number;\n\t\t};\n\t\ttype AcceptedSuggestionClassification = {\n\t\t\towner: \"jrieken\";\n\t\t\tcomment: \"Information accepting completion items\";\n\t\t\textensionId: {\n\t\t\t\tclassification: \"PublicNonPersonalData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Extension contributing the completions item\";\n\t\t\t};\n\t\t\tproviderId: {\n\t\t\t\tclassification: \"PublicNonPersonalData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Provider of the completions item\";\n\t\t\t};\n\t\t\tbasenameHash: {\n\t\t\t\tclassification: \"PublicNonPersonalData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Hash of the basename of the file into which the completion was inserted\";\n\t\t\t};\n\t\t\tfileExtension: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"File extension of the file into which the completion was inserted\";\n\t\t\t};\n\t\t\tlanguageId: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Language type of the file into which the completion was inserted\";\n\t\t\t};\n\t\t\tkind: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The completion item kind\";\n\t\t\t};\n\t\t\tresolveInfo: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"If the item was inserted before resolving was done\";\n\t\t\t};\n\t\t\tresolveDuration: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"How long resolving took to finish\";\n\t\t\t};\n\t\t\tcommandDuration: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"How long a completion item command took\";\n\t\t\t};\n\t\t\tadditionalEditsAsync: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Info about asynchronously applying additional edits\";\n\t\t\t};\n\t\t\tindex: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The index of the completion item in the sorted list.\";\n\t\t\t};\n\t\t\tfirstIndex: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"When there are multiple completions, the index of the first instance.\";\n\t\t\t};\n\t\t};\n\n\t\tthis._telemetryService.publicLog2<\n\t\t\tAcceptedSuggestion,\n\t\t\tAcceptedSuggestionClassification\n\t\t>(\"suggest.acceptedSuggestion\", {\n\t\t\textensionId: item.extensionId?.value ?? \"unknown\",\n\t\t\tproviderId: item.provider._debugDisplayName ?? \"unknown\",\n\t\t\tkind: item.completion.kind,\n\t\t\tbasenameHash: hash(basename(model.uri)).toString(16),\n\t\t\tlanguageId: model.getLanguageId(),\n\t\t\tfileExtension: extname(model.uri),\n\t\t\tresolveInfo: item.provider.resolveCompletionItem\n\t\t\t\t? itemResolved\n\t\t\t\t\t? 1\n\t\t\t\t\t: 0\n\t\t\t\t: -1,\n\t\t\tresolveDuration: item.resolveDuration,\n\t\t\tcommandDuration: commandExectionDuration,\n\t\t\tadditionalEditsAsync: additionalEditsAppliedAsync,\n\t\t\tindex,\n\t\t\tfirstIndex,\n\t\t});\n\t}\n\n\tgetOverwriteInfo(\n\t\titem: CompletionItem,\n\t\ttoggleMode: boolean,\n\t): { overwriteBefore: number; overwriteAfter: number } {\n\t\tassertType(this.editor.hasModel());\n\n\t\tlet replace =\n\t\t\tthis.editor.getOption(EditorOption.suggest).insertMode ===\n\t\t\t\"replace\";\n\t\tif (toggleMode) {\n\t\t\treplace = !replace;\n\t\t}\n\t\tconst overwriteBefore = item.position.column - item.editStart.column;\n\t\tconst overwriteAfter =\n\t\t\t(replace ? item.editReplaceEnd.column : item.editInsertEnd.column) -\n\t\t\titem.position.column;\n\t\tconst columnDelta =\n\t\t\tthis.editor.getPosition().column - item.position.column;\n\t\tconst suffixDelta = this._lineSuffix.value\n\t\t\t? this._lineSuffix.value.delta(this.editor.getPosition())\n\t\t\t: 0;\n\n\t\treturn {\n\t\t\toverwriteBefore: overwriteBefore + columnDelta,\n\t\t\toverwriteAfter: overwriteAfter + suffixDelta,\n\t\t};\n\t}\n\n\tprivate _alertCompletionItem(item: CompletionItem): void {\n\t\tif (isNonEmptyArray(item.completion.additionalTextEdits)) {\n\t\t\tconst msg = nls.localize(\n\t\t\t\t\"aria.alert.snippet\",\n\t\t\t\t\"Accepting '{0}' made {1} additional edits\",\n\t\t\t\titem.textLabel,\n\t\t\t\titem.completion.additionalTextEdits.length,\n\t\t\t);\n\t\t\talert(msg);\n\t\t}\n\t}\n\n\ttriggerSuggest(\n\t\tonlyFrom?: Set<CompletionItemProvider>,\n\t\tauto?: boolean,\n\t\tnoFilter?: boolean,\n\t): void {\n\t\tif (this.editor.hasModel()) {\n\t\t\tthis.model.trigger({\n\t\t\t\tauto: auto ?? false,\n\t\t\t\tcompletionOptions: {\n\t\t\t\t\tproviderFilter: onlyFrom,\n\t\t\t\t\tkindFilter: noFilter ? new Set() : undefined,\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.editor.revealPosition(\n\t\t\t\tthis.editor.getPosition(),\n\t\t\t\tScrollType.Smooth,\n\t\t\t);\n\t\t\tthis.editor.focus();\n\t\t}\n\t}\n\n\ttriggerSuggestAndAcceptBest(arg: { fallback: string }): void {\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst positionNow = this.editor.getPosition();\n\n\t\tconst fallback = () => {\n\t\t\tif (positionNow.equals(this.editor.getPosition()!)) {\n\t\t\t\tthis._commandService.executeCommand(arg.fallback);\n\t\t\t}\n\t\t};\n\n\t\tconst makesTextEdit = (item: CompletionItem): boolean => {\n\t\t\tif (\n\t\t\t\titem.completion.insertTextRules! &\n\t\t\t\t\tCompletionItemInsertTextRule.InsertAsSnippet ||\n\t\t\t\titem.completion.additionalTextEdits\n\t\t\t) {\n\t\t\t\t// snippet, other editor -> makes edit\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst position = this.editor.getPosition()!;\n\t\t\tconst startColumn = item.editStart.column;\n\t\t\tconst endColumn = position.column;\n\t\t\tif (endColumn - startColumn !== item.completion.insertText.length) {\n\t\t\t\t// unequal lengths -> makes edit\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst textNow = this.editor.getModel()!.getValueInRange({\n\t\t\t\tstartLineNumber: position.lineNumber,\n\t\t\t\tstartColumn,\n\t\t\t\tendLineNumber: position.lineNumber,\n\t\t\t\tendColumn,\n\t\t\t});\n\t\t\t// unequal text -> makes edit\n\t\t\treturn textNow !== item.completion.insertText;\n\t\t};\n\n\t\tEvent.once(this.model.onDidTrigger)((_) => {\n\t\t\t// wait for trigger because only then the cancel-event is trustworthy\n\t\t\tconst listener: IDisposable[] = [];\n\n\t\t\tEvent.any<any>(this.model.onDidTrigger, this.model.onDidCancel)(\n\t\t\t\t() => {\n\t\t\t\t\t// retrigger or cancel -> try to type default text\n\t\t\t\t\tdispose(listener);\n\t\t\t\t\tfallback();\n\t\t\t\t},\n\t\t\t\tundefined,\n\t\t\t\tlistener,\n\t\t\t);\n\n\t\t\tthis.model.onDidSuggest(\n\t\t\t\t({ completionModel }) => {\n\t\t\t\t\tdispose(listener);\n\t\t\t\t\tif (completionModel.items.length === 0) {\n\t\t\t\t\t\tfallback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst index = this._memoryService.select(\n\t\t\t\t\t\tthis.editor.getModel()!,\n\t\t\t\t\t\tthis.editor.getPosition()!,\n\t\t\t\t\t\tcompletionModel.items,\n\t\t\t\t\t);\n\t\t\t\t\tconst item = completionModel.items[index];\n\t\t\t\t\tif (!makesTextEdit(item)) {\n\t\t\t\t\t\tfallback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\t\tthis._insertSuggestion(\n\t\t\t\t\t\t{ index, item, model: completionModel },\n\t\t\t\t\t\tInsertFlags.KeepAlternativeSuggestions |\n\t\t\t\t\t\t\tInsertFlags.NoBeforeUndoStop |\n\t\t\t\t\t\t\tInsertFlags.NoAfterUndoStop,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tundefined,\n\t\t\t\tlistener,\n\t\t\t);\n\t\t});\n\n\t\tthis.model.trigger({ auto: false, shy: true });\n\t\tthis.editor.revealPosition(positionNow, ScrollType.Smooth);\n\t\tthis.editor.focus();\n\t}\n\n\tacceptSelectedSuggestion(\n\t\tkeepAlternativeSuggestions: boolean,\n\t\talternativeOverwriteConfig: boolean,\n\t): void {\n\t\tconst item = this.widget.value.getFocusedItem();\n\t\tlet flags = 0;\n\t\tif (keepAlternativeSuggestions) {\n\t\t\tflags |= InsertFlags.KeepAlternativeSuggestions;\n\t\t}\n\t\tif (alternativeOverwriteConfig) {\n\t\t\tflags |= InsertFlags.AlternativeOverwriteConfig;\n\t\t}\n\t\tthis._insertSuggestion(item, flags);\n\t}\n\n\tacceptNextSuggestion() {\n\t\tthis._alternatives.value.next();\n\t}\n\n\tacceptPrevSuggestion() {\n\t\tthis._alternatives.value.prev();\n\t}\n\n\tcancelSuggestWidget(): void {\n\t\tthis.model.cancel();\n\t\tthis.model.clear();\n\t\tthis.widget.value.hideWidget();\n\t}\n\n\tfocusSuggestion(): void {\n\t\tthis.widget.value.focusSelected();\n\t}\n\n\tselectNextSuggestion(): void {\n\t\tthis.widget.value.selectNext();\n\t}\n\n\tselectNextPageSuggestion(): void {\n\t\tthis.widget.value.selectNextPage();\n\t}\n\n\tselectLastSuggestion(): void {\n\t\tthis.widget.value.selectLast();\n\t}\n\n\tselectPrevSuggestion(): void {\n\t\tthis.widget.value.selectPrevious();\n\t}\n\n\tselectPrevPageSuggestion(): void {\n\t\tthis.widget.value.selectPreviousPage();\n\t}\n\n\tselectFirstSuggestion(): void {\n\t\tthis.widget.value.selectFirst();\n\t}\n\n\ttoggleSuggestionDetails(): void {\n\t\tthis.widget.value.toggleDetails();\n\t}\n\n\ttoggleExplainMode(): void {\n\t\tthis.widget.value.toggleExplainMode();\n\t}\n\n\ttoggleSuggestionFocus(): void {\n\t\tthis.widget.value.toggleDetailsFocus();\n\t}\n\n\tresetWidgetSize(): void {\n\t\tthis.widget.value.resetPersistedSize();\n\t}\n\n\tforceRenderingAbove() {\n\t\tthis.widget.value.forceRenderingAbove();\n\t}\n\n\tstopForceRenderingAbove() {\n\t\tif (!this.widget.isInitialized) {\n\t\t\t// This method has no effect if the widget is not initialized yet.\n\t\t\treturn;\n\t\t}\n\t\tthis.widget.value.stopForceRenderingAbove();\n\t}\n\n\tregisterSelector(selector: ISuggestItemPreselector): IDisposable {\n\t\treturn this._selectors.register(selector);\n\t}\n}\n\nclass PriorityRegistry<T> {\n\tprivate readonly _items = new Array<T>();\n\n\tconstructor(private readonly prioritySelector: (item: T) => number) {}\n\n\tregister(value: T): IDisposable {\n\t\tif (this._items.indexOf(value) !== -1) {\n\t\t\tthrow new Error(\"Value is already registered\");\n\t\t}\n\t\tthis._items.push(value);\n\t\tthis._items.sort(\n\t\t\t(s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1),\n\t\t);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tconst idx = this._items.indexOf(value);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis._items.splice(idx, 1);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tget itemsOrderedByPriorityDesc(): readonly T[] {\n\t\treturn this._items;\n\t}\n}\n\nexport class TriggerSuggestAction extends EditorAction {\n\tstatic readonly id = \"editor.action.triggerSuggest\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TriggerSuggestAction.id,\n\t\t\tlabel: nls.localize(\"suggest.trigger.label\", \"Trigger Suggest\"),\n\t\t\talias: \"Trigger Suggest\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasCompletionItemProvider,\n\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyI],\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Space,\n\t\t\t\t\tsecondary: [\n\t\t\t\t\t\tKeyMod.Alt | KeyCode.Escape,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyI,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\trun(_accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tconst controller = SuggestController.get(editor);\n\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype TriggerArgs = { auto: boolean };\n\t\tlet auto: boolean | undefined;\n\t\tif (args && typeof args === \"object\") {\n\t\t\tif ((<TriggerArgs>args).auto === true) {\n\t\t\t\tauto = true;\n\t\t\t}\n\t\t}\n\n\t\tcontroller.triggerSuggest(undefined, auto, undefined);\n\t}\n}\n\nregisterEditorContribution(\n\tSuggestController.ID,\n\tSuggestController,\n\tEditorContributionInstantiation.BeforeFirstInteraction,\n);\nregisterEditorAction(TriggerSuggestAction);\n\nconst weight = KeybindingWeight.EditorContrib + 90;\n\nconst SuggestCommand = EditorCommand.bindToContribution<SuggestController>(\n\tSuggestController.get,\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"acceptSelectedSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tSuggestContext.HasFocusedSuggestion,\n\t\t),\n\t\thandler(x) {\n\t\t\tx.acceptSelectedSuggestion(true, false);\n\t\t},\n\t\tkbOpts: [\n\t\t\t{\n\t\t\t\t// normal tab\n\t\t\t\tprimary: KeyCode.Tab,\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tSuggestContext.Visible,\n\t\t\t\t\tEditorContextKeys.textInputFocus,\n\t\t\t\t),\n\t\t\t\tweight,\n\t\t\t},\n\t\t\t{\n\t\t\t\t// accept on enter has special rules\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tSuggestContext.Visible,\n\t\t\t\t\tEditorContextKeys.textInputFocus,\n\t\t\t\t\tSuggestContext.AcceptSuggestionsOnEnter,\n\t\t\t\t\tSuggestContext.MakesTextEdit,\n\t\t\t\t),\n\t\t\t\tweight,\n\t\t\t},\n\t\t],\n\t\tmenuOpts: [\n\t\t\t{\n\t\t\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\t\t\ttitle: nls.localize(\"accept.insert\", \"Insert\"),\n\t\t\t\tgroup: \"left\",\n\t\t\t\torder: 1,\n\t\t\t\twhen: SuggestContext.HasInsertAndReplaceRange.toNegated(),\n\t\t\t},\n\t\t\t{\n\t\t\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\t\t\ttitle: nls.localize(\"accept.insert\", \"Insert\"),\n\t\t\t\tgroup: \"left\",\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tSuggestContext.HasInsertAndReplaceRange,\n\t\t\t\t\tSuggestContext.InsertMode.isEqualTo(\"insert\"),\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\t\t\ttitle: nls.localize(\"accept.replace\", \"Replace\"),\n\t\t\t\tgroup: \"left\",\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tSuggestContext.HasInsertAndReplaceRange,\n\t\t\t\t\tSuggestContext.InsertMode.isEqualTo(\"replace\"),\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"acceptAlternativeSelectedSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tEditorContextKeys.textInputFocus,\n\t\t\tSuggestContext.HasFocusedSuggestion,\n\t\t),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\tsecondary: [KeyMod.Shift | KeyCode.Tab],\n\t\t},\n\t\thandler(x) {\n\t\t\tx.acceptSelectedSuggestion(false, true);\n\t\t},\n\t\tmenuOpts: [\n\t\t\t{\n\t\t\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\t\t\tgroup: \"left\",\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tSuggestContext.HasInsertAndReplaceRange,\n\t\t\t\t\tSuggestContext.InsertMode.isEqualTo(\"insert\"),\n\t\t\t\t),\n\t\t\t\ttitle: nls.localize(\"accept.replace\", \"Replace\"),\n\t\t\t},\n\t\t\t{\n\t\t\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\t\t\tgroup: \"left\",\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tSuggestContext.HasInsertAndReplaceRange,\n\t\t\t\t\tSuggestContext.InsertMode.isEqualTo(\"replace\"),\n\t\t\t\t),\n\t\t\t\ttitle: nls.localize(\"accept.insert\", \"Insert\"),\n\t\t\t},\n\t\t],\n\t}),\n);\n\n// continue to support the old command\nCommandsRegistry.registerCommandAlias(\n\t\"acceptSelectedSuggestionOnEnter\",\n\t\"acceptSelectedSuggestion\",\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"hideSuggestWidget\",\n\t\tprecondition: SuggestContext.Visible,\n\t\thandler: (x) => x.cancelSuggestWidget(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.Escape,\n\t\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"selectNextSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tContextKeyExpr.or(\n\t\t\t\tSuggestContext.MultipleSuggestions,\n\t\t\t\tSuggestContext.HasFocusedSuggestion.negate(),\n\t\t\t),\n\t\t),\n\t\thandler: (c) => c.selectNextSuggestion(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.DownArrow,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow],\n\t\t\tmac: {\n\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\tsecondary: [\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t\t\tKeyMod.WinCtrl | KeyCode.KeyN,\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"selectNextPageSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tContextKeyExpr.or(\n\t\t\t\tSuggestContext.MultipleSuggestions,\n\t\t\t\tSuggestContext.HasFocusedSuggestion.negate(),\n\t\t\t),\n\t\t),\n\t\thandler: (c) => c.selectNextPageSuggestion(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.PageDown,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.PageDown],\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"selectLastSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tContextKeyExpr.or(\n\t\t\t\tSuggestContext.MultipleSuggestions,\n\t\t\t\tSuggestContext.HasFocusedSuggestion.negate(),\n\t\t\t),\n\t\t),\n\t\thandler: (c) => c.selectLastSuggestion(),\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"selectPrevSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tContextKeyExpr.or(\n\t\t\t\tSuggestContext.MultipleSuggestions,\n\t\t\t\tSuggestContext.HasFocusedSuggestion.negate(),\n\t\t\t),\n\t\t),\n\t\thandler: (c) => c.selectPrevSuggestion(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.UpArrow,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.UpArrow],\n\t\t\tmac: {\n\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\tsecondary: [\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t\t\tKeyMod.WinCtrl | KeyCode.KeyP,\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"selectPrevPageSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tContextKeyExpr.or(\n\t\t\t\tSuggestContext.MultipleSuggestions,\n\t\t\t\tSuggestContext.HasFocusedSuggestion.negate(),\n\t\t\t),\n\t\t),\n\t\thandler: (c) => c.selectPrevPageSuggestion(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.PageUp,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.PageUp],\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"selectFirstSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tContextKeyExpr.or(\n\t\t\t\tSuggestContext.MultipleSuggestions,\n\t\t\t\tSuggestContext.HasFocusedSuggestion.negate(),\n\t\t\t),\n\t\t),\n\t\thandler: (c) => c.selectFirstSuggestion(),\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"focusSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tSuggestContext.HasFocusedSuggestion.negate(),\n\t\t),\n\t\thandler: (x) => x.focusSuggestion(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyI],\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Space,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyI],\n\t\t\t},\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"focusAndAcceptSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tSuggestContext.HasFocusedSuggestion.negate(),\n\t\t),\n\t\thandler: (c) => {\n\t\t\tc.focusSuggestion();\n\t\t\tc.acceptSelectedSuggestion(true, false);\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"toggleSuggestionDetails\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tSuggestContext.Visible,\n\t\t\tSuggestContext.HasFocusedSuggestion,\n\t\t),\n\t\thandler: (x) => x.toggleSuggestionDetails(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyI],\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Space,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyI],\n\t\t\t},\n\t\t},\n\t\tmenuOpts: [\n\t\t\t{\n\t\t\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\t\t\tgroup: \"right\",\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tSuggestContext.DetailsVisible,\n\t\t\t\t\tSuggestContext.CanResolve,\n\t\t\t\t),\n\t\t\t\ttitle: nls.localize(\"detail.more\", \"Show Less\"),\n\t\t\t},\n\t\t\t{\n\t\t\t\tmenuId: suggestWidgetStatusbarMenu,\n\t\t\t\tgroup: \"right\",\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tSuggestContext.DetailsVisible.toNegated(),\n\t\t\t\t\tSuggestContext.CanResolve,\n\t\t\t\t),\n\t\t\t\ttitle: nls.localize(\"detail.less\", \"Show More\"),\n\t\t\t},\n\t\t],\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"toggleExplainMode\",\n\t\tprecondition: SuggestContext.Visible,\n\t\thandler: (x) => x.toggleExplainMode(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Slash,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"toggleSuggestionFocus\",\n\t\tprecondition: SuggestContext.Visible,\n\t\thandler: (x) => x.toggleSuggestionFocus(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Space,\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.Space },\n\t\t},\n\t}),\n);\n\n//#region tab completions\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"insertBestCompletion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tEditorContextKeys.textInputFocus,\n\t\t\tContextKeyExpr.equals(\"config.editor.tabCompletion\", \"on\"),\n\t\t\tWordContextKey.AtEnd,\n\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\tSuggestAlternatives.OtherSuggestions.toNegated(),\n\t\t\tSnippetController2.InSnippetMode.toNegated(),\n\t\t),\n\t\thandler: (x, arg) => {\n\t\t\tx.triggerSuggestAndAcceptBest(\n\t\t\t\tisObject(arg)\n\t\t\t\t\t? { fallback: \"tab\", ...arg }\n\t\t\t\t\t: { fallback: \"tab\" },\n\t\t\t);\n\t\t},\n\t\tkbOpts: {\n\t\t\tweight,\n\t\t\tprimary: KeyCode.Tab,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"insertNextSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tEditorContextKeys.textInputFocus,\n\t\t\tContextKeyExpr.equals(\"config.editor.tabCompletion\", \"on\"),\n\t\t\tSuggestAlternatives.OtherSuggestions,\n\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\tSnippetController2.InSnippetMode.toNegated(),\n\t\t),\n\t\thandler: (x) => x.acceptNextSuggestion(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.Tab,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew SuggestCommand({\n\t\tid: \"insertPrevSuggestion\",\n\t\tprecondition: ContextKeyExpr.and(\n\t\t\tEditorContextKeys.textInputFocus,\n\t\t\tContextKeyExpr.equals(\"config.editor.tabCompletion\", \"on\"),\n\t\t\tSuggestAlternatives.OtherSuggestions,\n\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\tSnippetController2.InSnippetMode.toNegated(),\n\t\t),\n\t\thandler: (x) => x.acceptPrevSuggestion(),\n\t\tkbOpts: {\n\t\t\tweight: weight,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.Tab,\n\t\t},\n\t}),\n);\n\nregisterEditorAction(\n\tclass extends EditorAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"editor.action.resetSuggestSize\",\n\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\"suggest.reset.label\",\n\t\t\t\t\t\"Reset Suggest Widget Size\",\n\t\t\t\t),\n\t\t\t\talias: \"Reset Suggest Widget Size\",\n\t\t\t\tprecondition: undefined,\n\t\t\t});\n\t\t}\n\n\t\trun(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\t\tSuggestController.get(editor)?.resetWidgetSize();\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": ["InsertFlags"]
}
