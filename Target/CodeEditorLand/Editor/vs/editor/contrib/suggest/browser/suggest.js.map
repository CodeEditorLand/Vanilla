{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/browser/suggest.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tCancellationError,\n\tisCancellationError,\n\tonUnexpectedExternalError,\n} from \"../../../../base/common/errors.js\";\nimport { FuzzyScore } from \"../../../../base/common/filters.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tisDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { StopWatch } from \"../../../../base/common/stopwatch.js\";\nimport { assertType } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { RawContextKey } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ExtensionIdentifier } from \"../../../../platform/extensions/common/extensions.js\";\nimport { historyNavigationVisible } from \"../../../../platform/history/browser/contextScopedHistoryWidget.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport type {\n\tInternalQuickSuggestionsOptions,\n\tQuickSuggestionsValue,\n} from \"../../../common/config/editorOptions.js\";\nimport { type IPosition, Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { StandardTokenType } from \"../../../common/encodedTokenAttributes.js\";\nimport type { LanguageFeatureRegistry } from \"../../../common/languageFeatureRegistry.js\";\nimport * as languages from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { ITextModelService } from \"../../../common/services/resolverService.js\";\nimport { SnippetParser } from \"../../snippet/browser/snippetParser.js\";\n\nexport const Context = {\n\tVisible: historyNavigationVisible,\n\tHasFocusedSuggestion: new RawContextKey<boolean>(\n\t\t\"suggestWidgetHasFocusedSuggestion\",\n\t\tfalse,\n\t\tlocalize(\n\t\t\t\"suggestWidgetHasSelection\",\n\t\t\t\"Whether any suggestion is focused\",\n\t\t),\n\t),\n\tDetailsVisible: new RawContextKey<boolean>(\n\t\t\"suggestWidgetDetailsVisible\",\n\t\tfalse,\n\t\tlocalize(\n\t\t\t\"suggestWidgetDetailsVisible\",\n\t\t\t\"Whether suggestion details are visible\",\n\t\t),\n\t),\n\tMultipleSuggestions: new RawContextKey<boolean>(\n\t\t\"suggestWidgetMultipleSuggestions\",\n\t\tfalse,\n\t\tlocalize(\n\t\t\t\"suggestWidgetMultipleSuggestions\",\n\t\t\t\"Whether there are multiple suggestions to pick from\",\n\t\t),\n\t),\n\tMakesTextEdit: new RawContextKey<boolean>(\n\t\t\"suggestionMakesTextEdit\",\n\t\ttrue,\n\t\tlocalize(\n\t\t\t\"suggestionMakesTextEdit\",\n\t\t\t\"Whether inserting the current suggestion yields in a change or has everything already been typed\",\n\t\t),\n\t),\n\tAcceptSuggestionsOnEnter: new RawContextKey<boolean>(\n\t\t\"acceptSuggestionOnEnter\",\n\t\ttrue,\n\t\tlocalize(\n\t\t\t\"acceptSuggestionOnEnter\",\n\t\t\t\"Whether suggestions are inserted when pressing Enter\",\n\t\t),\n\t),\n\tHasInsertAndReplaceRange: new RawContextKey<boolean>(\n\t\t\"suggestionHasInsertAndReplaceRange\",\n\t\tfalse,\n\t\tlocalize(\n\t\t\t\"suggestionHasInsertAndReplaceRange\",\n\t\t\t\"Whether the current suggestion has insert and replace behaviour\",\n\t\t),\n\t),\n\tInsertMode: new RawContextKey<\"insert\" | \"replace\">(\n\t\t\"suggestionInsertMode\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"string\",\n\t\t\tdescription: localize(\n\t\t\t\t\"suggestionInsertMode\",\n\t\t\t\t\"Whether the default behaviour is to insert or replace\",\n\t\t\t),\n\t\t},\n\t),\n\tCanResolve: new RawContextKey<boolean>(\n\t\t\"suggestionCanResolve\",\n\t\tfalse,\n\t\tlocalize(\n\t\t\t\"suggestionCanResolve\",\n\t\t\t\"Whether the current suggestion supports to resolve further details\",\n\t\t),\n\t),\n};\n\nexport const suggestWidgetStatusbarMenu = new MenuId(\"suggestWidgetStatusBar\");\n\nexport class CompletionItem {\n\t_brand!: \"ISuggestionItem\";\n\n\t//\n\treadonly editStart: IPosition;\n\treadonly editInsertEnd: IPosition;\n\treadonly editReplaceEnd: IPosition;\n\n\t//\n\treadonly textLabel: string;\n\n\t// perf\n\treadonly labelLow: string;\n\treadonly sortTextLow?: string;\n\treadonly filterTextLow?: string;\n\n\t// validation\n\treadonly isInvalid: boolean = false;\n\n\t// sorting, filtering\n\tscore: FuzzyScore = FuzzyScore.Default;\n\tdistance = 0;\n\tidx?: number;\n\tword?: string;\n\n\t// instrumentation\n\treadonly extensionId?: ExtensionIdentifier;\n\n\t// resolving\n\tprivate _resolveDuration?: number;\n\tprivate _resolveCache?: Promise<void>;\n\n\tconstructor(\n\t\treadonly position: IPosition,\n\t\treadonly completion: languages.CompletionItem,\n\t\treadonly container: languages.CompletionList,\n\t\treadonly provider: languages.CompletionItemProvider,\n\t) {\n\t\tthis.textLabel =\n\t\t\ttypeof completion.label === \"string\"\n\t\t\t\t? completion.label\n\t\t\t\t: completion.label?.label;\n\n\t\t// ensure lower-variants (perf)\n\t\tthis.labelLow = this.textLabel.toLowerCase();\n\n\t\t// validate label\n\t\tthis.isInvalid = !this.textLabel;\n\n\t\tthis.sortTextLow =\n\t\t\tcompletion.sortText && completion.sortText.toLowerCase();\n\t\tthis.filterTextLow =\n\t\t\tcompletion.filterText && completion.filterText.toLowerCase();\n\n\t\tthis.extensionId = completion.extensionId;\n\n\t\t// normalize ranges\n\t\tif (Range.isIRange(completion.range)) {\n\t\t\tthis.editStart = new Position(\n\t\t\t\tcompletion.range.startLineNumber,\n\t\t\t\tcompletion.range.startColumn,\n\t\t\t);\n\t\t\tthis.editInsertEnd = new Position(\n\t\t\t\tcompletion.range.endLineNumber,\n\t\t\t\tcompletion.range.endColumn,\n\t\t\t);\n\t\t\tthis.editReplaceEnd = new Position(\n\t\t\t\tcompletion.range.endLineNumber,\n\t\t\t\tcompletion.range.endColumn,\n\t\t\t);\n\n\t\t\t// validate range\n\t\t\tthis.isInvalid =\n\t\t\t\tthis.isInvalid ||\n\t\t\t\tRange.spansMultipleLines(completion.range) ||\n\t\t\t\tcompletion.range.startLineNumber !== position.lineNumber;\n\t\t} else {\n\t\t\tthis.editStart = new Position(\n\t\t\t\tcompletion.range.insert.startLineNumber,\n\t\t\t\tcompletion.range.insert.startColumn,\n\t\t\t);\n\t\t\tthis.editInsertEnd = new Position(\n\t\t\t\tcompletion.range.insert.endLineNumber,\n\t\t\t\tcompletion.range.insert.endColumn,\n\t\t\t);\n\t\t\tthis.editReplaceEnd = new Position(\n\t\t\t\tcompletion.range.replace.endLineNumber,\n\t\t\t\tcompletion.range.replace.endColumn,\n\t\t\t);\n\n\t\t\t// validate ranges\n\t\t\tthis.isInvalid =\n\t\t\t\tthis.isInvalid ||\n\t\t\t\tRange.spansMultipleLines(completion.range.insert) ||\n\t\t\t\tRange.spansMultipleLines(completion.range.replace) ||\n\t\t\t\tcompletion.range.insert.startLineNumber !==\n\t\t\t\t\tposition.lineNumber ||\n\t\t\t\tcompletion.range.replace.startLineNumber !==\n\t\t\t\t\tposition.lineNumber ||\n\t\t\t\tcompletion.range.insert.startColumn !==\n\t\t\t\t\tcompletion.range.replace.startColumn;\n\t\t}\n\n\t\t// create the suggestion resolver\n\t\tif (typeof provider.resolveCompletionItem !== \"function\") {\n\t\t\tthis._resolveCache = Promise.resolve();\n\t\t\tthis._resolveDuration = 0;\n\t\t}\n\t}\n\n\t// ---- resolving\n\n\tget isResolved(): boolean {\n\t\treturn this._resolveDuration !== undefined;\n\t}\n\n\tget resolveDuration(): number {\n\t\treturn this._resolveDuration !== undefined ? this._resolveDuration : -1;\n\t}\n\n\tasync resolve(token: CancellationToken) {\n\t\tif (!this._resolveCache) {\n\t\t\tconst sub = token.onCancellationRequested(() => {\n\t\t\t\tthis._resolveCache = undefined;\n\t\t\t\tthis._resolveDuration = undefined;\n\t\t\t});\n\t\t\tconst sw = new StopWatch(true);\n\t\t\tthis._resolveCache = Promise.resolve(\n\t\t\t\tthis.provider.resolveCompletionItem!(this.completion, token),\n\t\t\t)\n\t\t\t\t.then(\n\t\t\t\t\t(value) => {\n\t\t\t\t\t\tObject.assign(this.completion, value);\n\t\t\t\t\t\tthis._resolveDuration = sw.elapsed();\n\t\t\t\t\t},\n\t\t\t\t\t(err) => {\n\t\t\t\t\t\tif (isCancellationError(err)) {\n\t\t\t\t\t\t\t// the IPC queue will reject the request with the\n\t\t\t\t\t\t\t// cancellation error -> reset cached\n\t\t\t\t\t\t\tthis._resolveCache = undefined;\n\t\t\t\t\t\t\tthis._resolveDuration = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\t.finally(() => {\n\t\t\t\t\tsub.dispose();\n\t\t\t\t});\n\t\t}\n\t\treturn this._resolveCache;\n\t}\n}\n\nexport enum SnippetSortOrder {\n\tTop = 0,\n\tInline = 1,\n\tBottom = 2,\n}\n\nexport class CompletionOptions {\n\tstatic readonly default = new CompletionOptions();\n\n\tconstructor(\n\t\treadonly snippetSortOrder = SnippetSortOrder.Bottom,\n\t\treadonly kindFilter = new Set<languages.CompletionItemKind>(),\n\t\treadonly providerFilter = new Set<languages.CompletionItemProvider>(),\n\t\treadonly providerItemsToReuse: ReadonlyMap<\n\t\t\tlanguages.CompletionItemProvider,\n\t\t\tCompletionItem[]\n\t\t> = new Map<languages.CompletionItemProvider, CompletionItem[]>(),\n\t\treadonly showDeprecated = true,\n\t) {}\n}\n\nlet _snippetSuggestSupport: languages.CompletionItemProvider | undefined;\n\nexport function getSnippetSuggestSupport():\n\t| languages.CompletionItemProvider\n\t| undefined {\n\treturn _snippetSuggestSupport;\n}\n\nexport function setSnippetSuggestSupport(\n\tsupport: languages.CompletionItemProvider | undefined,\n): languages.CompletionItemProvider | undefined {\n\tconst old = _snippetSuggestSupport;\n\t_snippetSuggestSupport = support;\n\treturn old;\n}\n\nexport interface CompletionDurationEntry {\n\treadonly providerName: string;\n\treadonly elapsedProvider: number;\n\treadonly elapsedOverall: number;\n}\n\nexport interface CompletionDurations {\n\treadonly entries: readonly CompletionDurationEntry[];\n\treadonly elapsed: number;\n}\n\nexport class CompletionItemModel {\n\tconstructor(\n\t\treadonly items: CompletionItem[],\n\t\treadonly needsClipboard: boolean,\n\t\treadonly durations: CompletionDurations,\n\t\treadonly disposable: IDisposable,\n\t) {}\n}\n\nexport async function provideSuggestionItems(\n\tregistry: LanguageFeatureRegistry<languages.CompletionItemProvider>,\n\tmodel: ITextModel,\n\tposition: Position,\n\toptions: CompletionOptions = CompletionOptions.default,\n\tcontext: languages.CompletionContext = {\n\t\ttriggerKind: languages.CompletionTriggerKind.Invoke,\n\t},\n\ttoken: CancellationToken = CancellationToken.None,\n): Promise<CompletionItemModel> {\n\tconst sw = new StopWatch();\n\tposition = position.clone();\n\n\tconst word = model.getWordAtPosition(position);\n\tconst defaultReplaceRange = word\n\t\t? new Range(\n\t\t\t\tposition.lineNumber,\n\t\t\t\tword.startColumn,\n\t\t\t\tposition.lineNumber,\n\t\t\t\tword.endColumn,\n\t\t\t)\n\t\t: Range.fromPositions(position);\n\tconst defaultRange = {\n\t\treplace: defaultReplaceRange,\n\t\tinsert: defaultReplaceRange.setEndPosition(\n\t\t\tposition.lineNumber,\n\t\t\tposition.column,\n\t\t),\n\t};\n\n\tconst result: CompletionItem[] = [];\n\tconst disposables = new DisposableStore();\n\tconst durations: CompletionDurationEntry[] = [];\n\tlet needsClipboard = false;\n\n\tconst onCompletionList = (\n\t\tprovider: languages.CompletionItemProvider,\n\t\tcontainer: languages.CompletionList | null | undefined,\n\t\tsw: StopWatch,\n\t): boolean => {\n\t\tlet didAddResult = false;\n\t\tif (!container) {\n\t\t\treturn didAddResult;\n\t\t}\n\t\tfor (const suggestion of container.suggestions) {\n\t\t\tif (!options.kindFilter.has(suggestion.kind)) {\n\t\t\t\t// skip if not showing deprecated suggestions\n\t\t\t\tif (\n\t\t\t\t\t!options.showDeprecated &&\n\t\t\t\t\tsuggestion?.tags?.includes(\n\t\t\t\t\t\tlanguages.CompletionItemTag.Deprecated,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default range when missing\n\t\t\t\tif (!suggestion.range) {\n\t\t\t\t\tsuggestion.range = defaultRange;\n\t\t\t\t}\n\t\t\t\t// fill in default sortText when missing\n\t\t\t\tif (!suggestion.sortText) {\n\t\t\t\t\tsuggestion.sortText =\n\t\t\t\t\t\ttypeof suggestion.label === \"string\"\n\t\t\t\t\t\t\t? suggestion.label\n\t\t\t\t\t\t\t: suggestion.label.label;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t!needsClipboard &&\n\t\t\t\t\tsuggestion.insertTextRules &&\n\t\t\t\t\tsuggestion.insertTextRules &\n\t\t\t\t\t\tlanguages.CompletionItemInsertTextRule.InsertAsSnippet\n\t\t\t\t) {\n\t\t\t\t\tneedsClipboard = SnippetParser.guessNeedsClipboard(\n\t\t\t\t\t\tsuggestion.insertText,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tresult.push(\n\t\t\t\t\tnew CompletionItem(\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\tsuggestion,\n\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\tprovider,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tdidAddResult = true;\n\t\t\t}\n\t\t}\n\t\tif (isDisposable(container)) {\n\t\t\tdisposables.add(container);\n\t\t}\n\t\tdurations.push({\n\t\t\tproviderName: provider._debugDisplayName ?? \"unknown_provider\",\n\t\t\telapsedProvider: container.duration ?? -1,\n\t\t\telapsedOverall: sw.elapsed(),\n\t\t});\n\t\treturn didAddResult;\n\t};\n\n\t// ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\n\t// do so - no snippet filter, no special-providers-only request\n\tconst snippetCompletions = (async () => {\n\t\tif (\n\t\t\t!_snippetSuggestSupport ||\n\t\t\toptions.kindFilter.has(languages.CompletionItemKind.Snippet)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\t// we have items from a previous session that we can reuse\n\t\tconst reuseItems = options.providerItemsToReuse.get(\n\t\t\t_snippetSuggestSupport,\n\t\t);\n\t\tif (reuseItems) {\n\t\t\treuseItems.forEach((item) => result.push(item));\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\toptions.providerFilter.size > 0 &&\n\t\t\t!options.providerFilter.has(_snippetSuggestSupport)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst sw = new StopWatch();\n\t\tconst list = await _snippetSuggestSupport.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\tcontext,\n\t\t\ttoken,\n\t\t);\n\t\tonCompletionList(_snippetSuggestSupport, list, sw);\n\t})();\n\n\t// add suggestions from contributed providers - providers are ordered in groups of\n\t// equal score and once a group produces a result the process stops\n\t// get provider groups, always add snippet suggestion provider\n\tfor (const providerGroup of registry.orderedGroups(model)) {\n\t\t// for each support in the group ask for suggestions\n\t\tlet didAddResult = false;\n\t\tawait Promise.all(\n\t\t\tproviderGroup.map(async (provider) => {\n\t\t\t\t// we have items from a previous session that we can reuse\n\t\t\t\tif (options.providerItemsToReuse.has(provider)) {\n\t\t\t\t\tconst items = options.providerItemsToReuse.get(provider)!;\n\t\t\t\t\titems.forEach((item) => result.push(item));\n\t\t\t\t\tdidAddResult = didAddResult || items.length > 0;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// check if this provider is filtered out\n\t\t\t\tif (\n\t\t\t\t\toptions.providerFilter.size > 0 &&\n\t\t\t\t\t!options.providerFilter.has(provider)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tconst sw = new StopWatch();\n\t\t\t\t\tconst list = await provider.provideCompletionItems(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t);\n\t\t\t\t\tdidAddResult =\n\t\t\t\t\t\tonCompletionList(provider, list, sw) || didAddResult;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tif (didAddResult || token.isCancellationRequested) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tawait snippetCompletions;\n\n\tif (token.isCancellationRequested) {\n\t\tdisposables.dispose();\n\t\treturn Promise.reject<any>(new CancellationError());\n\t}\n\n\treturn new CompletionItemModel(\n\t\tresult.sort(getSuggestionComparator(options.snippetSortOrder)),\n\t\tneedsClipboard,\n\t\t{ entries: durations, elapsed: sw.elapsed() },\n\t\tdisposables,\n\t);\n}\n\nfunction defaultComparator(a: CompletionItem, b: CompletionItem): number {\n\t// check with 'sortText'\n\tif (a.sortTextLow && b.sortTextLow) {\n\t\tif (a.sortTextLow < b.sortTextLow) {\n\t\t\treturn -1;\n\t\t} else if (a.sortTextLow > b.sortTextLow) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\t// check with 'label'\n\tif (a.textLabel < b.textLabel) {\n\t\treturn -1;\n\t} else if (a.textLabel > b.textLabel) {\n\t\treturn 1;\n\t}\n\t// check with 'type'\n\treturn a.completion.kind - b.completion.kind;\n}\n\nfunction snippetUpComparator(a: CompletionItem, b: CompletionItem): number {\n\tif (a.completion.kind !== b.completion.kind) {\n\t\tif (a.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn -1;\n\t\t} else if (b.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn defaultComparator(a, b);\n}\n\nfunction snippetDownComparator(a: CompletionItem, b: CompletionItem): number {\n\tif (a.completion.kind !== b.completion.kind) {\n\t\tif (a.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn 1;\n\t\t} else if (b.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn defaultComparator(a, b);\n}\n\ninterface Comparator<T> {\n\t(a: T, b: T): number;\n}\nconst _snippetComparators = new Map<\n\tSnippetSortOrder,\n\tComparator<CompletionItem>\n>();\n_snippetComparators.set(SnippetSortOrder.Top, snippetUpComparator);\n_snippetComparators.set(SnippetSortOrder.Bottom, snippetDownComparator);\n_snippetComparators.set(SnippetSortOrder.Inline, defaultComparator);\n\nexport function getSuggestionComparator(\n\tsnippetConfig: SnippetSortOrder,\n): (a: CompletionItem, b: CompletionItem) => number {\n\treturn _snippetComparators.get(snippetConfig)!;\n}\n\nCommandsRegistry.registerCommand(\n\t\"_executeCompletionItemProvider\",\n\tasync (accessor, ...args: [URI, IPosition, string?, number?]) => {\n\t\tconst [uri, position, triggerCharacter, maxItemsToResolve] = args;\n\t\tassertType(URI.isUri(uri));\n\t\tassertType(Position.isIPosition(position));\n\t\tassertType(typeof triggerCharacter === \"string\" || !triggerCharacter);\n\t\tassertType(typeof maxItemsToResolve === \"number\" || !maxItemsToResolve);\n\n\t\tconst { completionProvider } = accessor.get(ILanguageFeaturesService);\n\t\tconst ref = await accessor\n\t\t\t.get(ITextModelService)\n\t\t\t.createModelReference(uri);\n\t\ttry {\n\t\t\tconst result: languages.CompletionList = {\n\t\t\t\tincomplete: false,\n\t\t\t\tsuggestions: [],\n\t\t\t};\n\n\t\t\tconst resolving: Promise<any>[] = [];\n\t\t\tconst actualPosition =\n\t\t\t\tref.object.textEditorModel.validatePosition(position);\n\t\t\tconst completions = await provideSuggestionItems(\n\t\t\t\tcompletionProvider,\n\t\t\t\tref.object.textEditorModel,\n\t\t\t\tactualPosition,\n\t\t\t\tundefined,\n\t\t\t\t{\n\t\t\t\t\ttriggerCharacter: triggerCharacter ?? undefined,\n\t\t\t\t\ttriggerKind: triggerCharacter\n\t\t\t\t\t\t? languages.CompletionTriggerKind.TriggerCharacter\n\t\t\t\t\t\t: languages.CompletionTriggerKind.Invoke,\n\t\t\t\t},\n\t\t\t);\n\t\t\tfor (const item of completions.items) {\n\t\t\t\tif (resolving.length < (maxItemsToResolve ?? 0)) {\n\t\t\t\t\tresolving.push(item.resolve(CancellationToken.None));\n\t\t\t\t}\n\t\t\t\tresult.incomplete =\n\t\t\t\t\tresult.incomplete || item.container.incomplete;\n\t\t\t\tresult.suggestions.push(item.completion);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait Promise.all(resolving);\n\t\t\t\treturn result;\n\t\t\t} finally {\n\t\t\t\tsetTimeout(() => completions.disposable.dispose(), 100);\n\t\t\t}\n\t\t} finally {\n\t\t\tref.dispose();\n\t\t}\n\t},\n);\n\ninterface SuggestController extends IEditorContribution {\n\ttriggerSuggest(\n\t\tonlyFrom?: Set<languages.CompletionItemProvider>,\n\t\tauto?: boolean,\n\t\tnoFilter?: boolean,\n\t): void;\n}\n\nexport function showSimpleSuggestions(\n\teditor: ICodeEditor,\n\tprovider: languages.CompletionItemProvider,\n) {\n\teditor\n\t\t.getContribution<SuggestController>(\"editor.contrib.suggestController\")\n\t\t?.triggerSuggest(\n\t\t\tnew Set<languages.CompletionItemProvider>().add(provider),\n\t\t\tundefined,\n\t\t\ttrue,\n\t\t);\n}\n\nexport interface ISuggestItemPreselector {\n\t/**\n\t * The preselector with highest priority is asked first.\n\t */\n\treadonly priority: number;\n\n\t/**\n\t * Is called to preselect a suggest item.\n\t * When -1 is returned, item preselectors with lower priority are asked.\n\t */\n\tselect(\n\t\tmodel: ITextModel,\n\t\tpos: IPosition,\n\t\titems: CompletionItem[],\n\t): number | -1;\n}\n\nexport abstract class QuickSuggestionsOptions {\n\tstatic isAllOff(config: InternalQuickSuggestionsOptions): boolean {\n\t\treturn (\n\t\t\tconfig.other === \"off\" &&\n\t\t\tconfig.comments === \"off\" &&\n\t\t\tconfig.strings === \"off\"\n\t\t);\n\t}\n\n\tstatic isAllOn(config: InternalQuickSuggestionsOptions): boolean {\n\t\treturn (\n\t\t\tconfig.other === \"on\" &&\n\t\t\tconfig.comments === \"on\" &&\n\t\t\tconfig.strings === \"on\"\n\t\t);\n\t}\n\n\tstatic valueFor(\n\t\tconfig: InternalQuickSuggestionsOptions,\n\t\ttokenType: StandardTokenType,\n\t): QuickSuggestionsValue {\n\t\tswitch (tokenType) {\n\t\t\tcase StandardTokenType.Comment:\n\t\t\t\treturn config.comments;\n\t\t\tcase StandardTokenType.String:\n\t\t\t\treturn config.strings;\n\t\t\tdefault:\n\t\t\t\treturn config.other;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["SnippetSortOrder", "sw"]
}
