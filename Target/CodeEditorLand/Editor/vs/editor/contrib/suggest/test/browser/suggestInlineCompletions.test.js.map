{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/test/browser/suggestInlineCompletions.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { CompletionContext, CompletionItem, CompletionItemKind, CompletionItemProvider, CompletionList, InlineCompletionTriggerKind, ProviderResult } from '../../../../common/languages.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { TextModel } from '../../../../common/model/textModel.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { SuggestInlineCompletions } from '../../browser/suggestInlineCompletions.js';\nimport { ISuggestMemoryService } from '../../browser/suggestMemory.js';\nimport { createCodeEditorServices, instantiateTestCodeEditor, ITestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { createTextModel } from '../../../../test/common/testTextModel.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\n\n\nsuite('Suggest Inline Completions', function () {\n\n\tconst disposables = new DisposableStore();\n\tconst services = new ServiceCollection([ISuggestMemoryService, new class extends mock<ISuggestMemoryService>() {\n\t\toverride select(): number {\n\t\t\treturn 0;\n\t\t}\n\t}]);\n\n\tlet insta: TestInstantiationService;\n\tlet model: TextModel;\n\tlet editor: ITestCodeEditor;\n\n\tsetup(function () {\n\n\t\tinsta = createCodeEditorServices(disposables, services);\n\t\tmodel = createTextModel('he', undefined, undefined, URI.from({ scheme: 'foo', path: 'foo.bar' }));\n\t\teditor = instantiateTestCodeEditor(insta, model);\n\t\teditor.updateOptions({ quickSuggestions: { comments: 'inline', strings: 'inline', other: 'inline' } });\n\n\t\tinsta.invokeFunction(accessor => {\n\t\t\tdisposables.add(accessor.get(ILanguageFeaturesService).completionProvider.register({ pattern: '*.bar', scheme: 'foo' }, new class implements CompletionItemProvider {\n\t\t\t\t_debugDisplayName = 'test';\n\n\t\t\t\ttriggerCharacters?: string[] | undefined;\n\n\t\t\t\tprovideCompletionItems(model: ITextModel, position: Position, context: CompletionContext, token: CancellationToken): ProviderResult<CompletionList> {\n\n\t\t\t\t\tconst word = model.getWordUntilPosition(position);\n\t\t\t\t\tconst range = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n\n\t\t\t\t\tconst suggestions: CompletionItem[] = [];\n\t\t\t\t\tsuggestions.push({ insertText: 'hello', label: 'hello', range, kind: CompletionItemKind.Class });\n\t\t\t\t\tsuggestions.push({ insertText: 'hell', label: 'hell', range, kind: CompletionItemKind.Class });\n\t\t\t\t\tsuggestions.push({ insertText: 'hey', label: 'hey', range, kind: CompletionItemKind.Snippet });\n\t\t\t\t\treturn { suggestions };\n\t\t\t\t}\n\n\t\t\t}));\n\t\t});\n\t});\n\n\tteardown(function () {\n\t\tdisposables.clear();\n\t\tmodel.dispose();\n\t\teditor.dispose();\n\t});\n\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Aggressive inline completions when typing within line #146948', async function () {\n\n\t\tconst completions: SuggestInlineCompletions = disposables.add(insta.createInstance(SuggestInlineCompletions));\n\n\t\t{\n\t\t\t// (1,3), end of word -> suggestions\n\t\t\tconst result = await completions.provideInlineCompletions(model, new Position(1, 3), { triggerKind: InlineCompletionTriggerKind.Explicit, selectedSuggestionInfo: undefined }, CancellationToken.None);\n\t\t\tassert.strictEqual(result?.items.length, 3);\n\t\t\tcompletions.freeInlineCompletions(result);\n\t\t}\n\t\t{\n\t\t\t// (1,2), middle of word -> NO suggestions\n\t\t\tconst result = await completions.provideInlineCompletions(model, new Position(1, 2), { triggerKind: InlineCompletionTriggerKind.Explicit, selectedSuggestionInfo: undefined }, CancellationToken.None);\n\t\t\tassert.ok(result === undefined);\n\t\t}\n\t});\n\n\ttest('Snippets show in inline suggestions even though they are turned off #175190', async function () {\n\t\tconst completions: SuggestInlineCompletions = disposables.add(insta.createInstance(SuggestInlineCompletions));\n\n\t\t{\n\t\t\t// unfiltered\n\t\t\tconst result = await completions.provideInlineCompletions(model, new Position(1, 3), { triggerKind: InlineCompletionTriggerKind.Explicit, selectedSuggestionInfo: undefined }, CancellationToken.None);\n\t\t\tassert.strictEqual(result?.items.length, 3);\n\t\t\tcompletions.freeInlineCompletions(result);\n\t\t}\n\n\t\t{\n\t\t\t// filtered\n\t\t\teditor.updateOptions({ suggest: { showSnippets: false } });\n\t\t\tconst result = await completions.provideInlineCompletions(model, new Position(1, 3), { triggerKind: InlineCompletionTriggerKind.Explicit, selectedSuggestionInfo: undefined }, CancellationToken.None);\n\t\t\tassert.strictEqual(result?.items.length, 2);\n\t\t\tcompletions.freeInlineCompletions(result);\n\t\t}\n\n\t});\n});\n"],
  "mappings": "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",
  "names": ["model"]
}
