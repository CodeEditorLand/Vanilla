{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/test/browser/suggestModel.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { Event } from '../../../../../base/common/event.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { CoreEditingCommands } from '../../../../browser/coreCommands.js';\nimport { EditOperation } from '../../../../common/core/editOperation.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { Handler } from '../../../../common/editorCommon.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { TextModel } from '../../../../common/model/textModel.js';\nimport { CompletionItemKind, CompletionItemProvider, CompletionList, CompletionTriggerKind, EncodedTokenizationResult, IState, TokenizationRegistry } from '../../../../common/languages.js';\nimport { MetadataConsts } from '../../../../common/encodedTokenAttributes.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { NullState } from '../../../../common/languages/nullTokenize.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { SnippetController2 } from '../../../snippet/browser/snippetController2.js';\nimport { SuggestController } from '../../browser/suggestController.js';\nimport { ISuggestMemoryService } from '../../browser/suggestMemory.js';\nimport { LineContext, SuggestModel } from '../../browser/suggestModel.js';\nimport { ISelectedSuggestion } from '../../browser/suggestWidget.js';\nimport { createTestCodeEditor, ITestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { createModelServices, createTextModel, instantiateTextModel } from '../../../../test/common/testTextModel.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { MockKeybindingService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { InMemoryStorageService, IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { LanguageFeaturesService } from '../../../../common/services/languageFeaturesService.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { getSnippetSuggestSupport, setSnippetSuggestSupport } from '../../browser/suggest.js';\nimport { IEnvironmentService } from '../../../../../platform/environment/common/environment.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\n\nfunction createMockEditor(model: TextModel, languageFeaturesService: ILanguageFeaturesService): ITestCodeEditor {\n\n\tconst storeService = new InMemoryStorageService();\n\tconst editor = createTestCodeEditor(model, {\n\t\tserviceCollection: new ServiceCollection(\n\t\t\t[ILanguageFeaturesService, languageFeaturesService],\n\t\t\t[ITelemetryService, NullTelemetryService],\n\t\t\t[IStorageService, storeService],\n\t\t\t[IKeybindingService, new MockKeybindingService()],\n\t\t\t[ISuggestMemoryService, new class implements ISuggestMemoryService {\n\t\t\t\tdeclare readonly _serviceBrand: undefined;\n\t\t\t\tmemorize(): void {\n\t\t\t\t}\n\t\t\t\tselect(): number {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[ILabelService, new class extends mock<ILabelService>() { }],\n\t\t\t[IWorkspaceContextService, new class extends mock<IWorkspaceContextService>() { }],\n\t\t\t[IEnvironmentService, new class extends mock<IEnvironmentService>() {\n\t\t\t\toverride isBuilt: boolean = true;\n\t\t\t\toverride isExtensionDevelopment: boolean = false;\n\t\t\t}],\n\t\t),\n\t});\n\tconst ctrl = editor.registerAndInstantiateContribution(SnippetController2.ID, SnippetController2);\n\teditor.hasWidgetFocus = () => true;\n\n\teditor.registerDisposable(ctrl);\n\teditor.registerDisposable(storeService);\n\treturn editor;\n}\n\nsuite('SuggestModel - Context', function () {\n\tconst OUTER_LANGUAGE_ID = 'outerMode';\n\tconst INNER_LANGUAGE_ID = 'innerMode';\n\n\tclass OuterMode extends Disposable {\n\t\tpublic readonly languageId = OUTER_LANGUAGE_ID;\n\t\tconstructor(\n\t\t\t@ILanguageService languageService: ILanguageService,\n\t\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t\t) {\n\t\t\tsuper();\n\t\t\tthis._register(languageService.registerLanguage({ id: this.languageId }));\n\t\t\tthis._register(languageConfigurationService.register(this.languageId, {}));\n\n\t\t\tthis._register(TokenizationRegistry.register(this.languageId, {\n\t\t\t\tgetInitialState: (): IState => NullState,\n\t\t\t\ttokenize: undefined!,\n\t\t\t\ttokenizeEncoded: (line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult => {\n\t\t\t\t\tconst tokensArr: number[] = [];\n\t\t\t\t\tlet prevLanguageId: string | undefined = undefined;\n\t\t\t\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\t\t\t\tconst languageId = (line.charAt(i) === 'x' ? INNER_LANGUAGE_ID : OUTER_LANGUAGE_ID);\n\t\t\t\t\t\tconst encodedLanguageId = languageService.languageIdCodec.encodeLanguageId(languageId);\n\t\t\t\t\t\tif (prevLanguageId !== languageId) {\n\t\t\t\t\t\t\ttokensArr.push(i);\n\t\t\t\t\t\t\ttokensArr.push((encodedLanguageId << MetadataConsts.LANGUAGEID_OFFSET));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevLanguageId = languageId;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tokens = new Uint32Array(tokensArr.length);\n\t\t\t\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\ttokens[i] = tokensArr[i];\n\t\t\t\t\t}\n\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tclass InnerMode extends Disposable {\n\t\tpublic readonly languageId = INNER_LANGUAGE_ID;\n\t\tconstructor(\n\t\t\t@ILanguageService languageService: ILanguageService,\n\t\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService\n\t\t) {\n\t\t\tsuper();\n\t\t\tthis._register(languageService.registerLanguage({ id: this.languageId }));\n\t\t\tthis._register(languageConfigurationService.register(this.languageId, {}));\n\t\t}\n\t}\n\n\tconst assertAutoTrigger = (model: TextModel, offset: number, expected: boolean, message?: string): void => {\n\t\tconst pos = model.getPositionAt(offset);\n\t\tconst editor = createMockEditor(model, new LanguageFeaturesService());\n\t\teditor.setPosition(pos);\n\t\tassert.strictEqual(LineContext.shouldAutoTrigger(editor), expected, message);\n\t\teditor.dispose();\n\t};\n\n\tlet disposables: DisposableStore;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t});\n\n\tteardown(function () {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Context - shouldAutoTrigger', function () {\n\t\tconst model = createTextModel('Das Pferd frisst keinen Gurkensalat - Philipp Reis 1861.\\nWer hat\\'s erfunden?');\n\t\tdisposables.add(model);\n\n\t\tassertAutoTrigger(model, 3, true, 'end of word, Das|');\n\t\tassertAutoTrigger(model, 4, false, 'no word Das |');\n\t\tassertAutoTrigger(model, 1, true, 'typing a single character before a word: D|as');\n\t\tassertAutoTrigger(model, 55, false, 'number, 1861|');\n\t\tmodel.dispose();\n\t});\n\n\ttest('shouldAutoTrigger at embedded language boundaries', () => {\n\t\tconst disposables = new DisposableStore();\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tconst outerMode = disposables.add(instantiationService.createInstance(OuterMode));\n\t\tdisposables.add(instantiationService.createInstance(InnerMode));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'a<xx>a<x>', outerMode.languageId));\n\n\t\tassertAutoTrigger(model, 1, true, 'a|<x \u2014 should trigger at end of word');\n\t\tassertAutoTrigger(model, 2, false, 'a<|x \u2014 should NOT trigger at start of word');\n\t\tassertAutoTrigger(model, 3, true, 'a<x|x \u2014  should trigger after typing a single character before a word');\n\t\tassertAutoTrigger(model, 4, true, 'a<xx|> \u2014 should trigger at boundary between languages');\n\t\tassertAutoTrigger(model, 5, false, 'a<xx>|a \u2014 should NOT trigger at start of word');\n\t\tassertAutoTrigger(model, 6, true, 'a<xx>a|< \u2014 should trigger at end of word');\n\t\tassertAutoTrigger(model, 8, true, 'a<xx>a<x|> \u2014 should trigger at end of word at boundary');\n\n\t\tdisposables.dispose();\n\t});\n});\n\nsuite('SuggestModel - TriggerAndCancelOracle', function () {\n\n\n\tfunction getDefaultSuggestRange(model: ITextModel, position: Position) {\n\t\tconst wordUntil = model.getWordUntilPosition(position);\n\t\treturn new Range(position.lineNumber, wordUntil.startColumn, position.lineNumber, wordUntil.endColumn);\n\t}\n\n\tconst alwaysEmptySupport: CompletionItemProvider = {\n\t\t_debugDisplayName: 'test',\n\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\treturn {\n\t\t\t\tincomplete: false,\n\t\t\t\tsuggestions: []\n\t\t\t};\n\t\t}\n\t};\n\n\tconst alwaysSomethingSupport: CompletionItemProvider = {\n\t\t_debugDisplayName: 'test',\n\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\treturn {\n\t\t\t\tincomplete: false,\n\t\t\t\tsuggestions: [{\n\t\t\t\t\tlabel: doc.getWordUntilPosition(pos).word,\n\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\tinsertText: 'foofoo',\n\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\t};\n\n\tlet disposables: DisposableStore;\n\tlet model: TextModel;\n\tconst languageFeaturesService = new LanguageFeaturesService();\n\tconst registry = languageFeaturesService.completionProvider;\n\n\tsetup(function () {\n\t\tdisposables = new DisposableStore();\n\t\tmodel = createTextModel('abc def', undefined, undefined, URI.parse('test:somefile.ttt'));\n\t\tdisposables.add(model);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction withOracle(callback: (model: SuggestModel, editor: ITestCodeEditor) => any): Promise<any> {\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst editor = createMockEditor(model, languageFeaturesService);\n\t\t\tconst oracle = editor.invokeWithinContext(accessor => accessor.get(IInstantiationService).createInstance(SuggestModel, editor));\n\t\t\tdisposables.add(oracle);\n\t\t\tdisposables.add(editor);\n\n\t\t\ttry {\n\t\t\t\tresolve(callback(oracle, editor));\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction assertEvent<E>(event: Event<E>, action: () => any, assert: (e: E) => any) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst sub = event(e => {\n\t\t\t\tsub.dispose();\n\t\t\t\ttry {\n\t\t\t\t\tresolve(assert(e));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\ttry {\n\t\t\t\taction();\n\t\t\t} catch (err) {\n\t\t\t\tsub.dispose();\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\ttest('events - cancel/trigger', function () {\n\t\treturn withOracle(model => {\n\n\t\t\treturn Promise.all([\n\n\t\t\t\tassertEvent(model.onDidTrigger, function () {\n\t\t\t\t\tmodel.trigger({ auto: true });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.auto, true);\n\n\t\t\t\t\treturn assertEvent(model.onDidCancel, function () {\n\t\t\t\t\t\tmodel.cancel();\n\t\t\t\t\t}, function (event) {\n\t\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t\t});\n\t\t\t\t}),\n\n\t\t\t\tassertEvent(model.onDidTrigger, function () {\n\t\t\t\t\tmodel.trigger({ auto: true });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\t}),\n\n\t\t\t\tassertEvent(model.onDidTrigger, function () {\n\t\t\t\t\tmodel.trigger({ auto: false });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.auto, false);\n\t\t\t\t})\n\t\t\t]);\n\t\t});\n\t});\n\n\n\ttest('events - suggest/empty', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, alwaysEmptySupport));\n\n\t\treturn withOracle(model => {\n\t\t\treturn Promise.all([\n\t\t\t\tassertEvent(model.onDidCancel, function () {\n\t\t\t\t\tmodel.trigger({ auto: true });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t}),\n\t\t\t\tassertEvent(model.onDidSuggest, function () {\n\t\t\t\t\tmodel.trigger({ auto: false });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.triggerOptions.auto, false);\n\t\t\t\t\tassert.strictEqual(event.isFrozen, false);\n\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 0);\n\t\t\t\t})\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('trigger - on type', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle((model, editor) => {\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 4 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'd' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\n\t\t\t\tassert.strictEqual(first.provider, alwaysSomethingSupport);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('#17400: Keep filtering suggestModel.ts after space', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'My Table',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'My Table',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('');\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t// make sure completionModel starts here!\n\t\t\t\tmodel.trigger({ auto: true });\n\t\t\t}, event => {\n\n\t\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'My' });\n\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\t\tconst [first] = event.completionModel.items;\n\t\t\t\t\tassert.strictEqual(first.completion.label, 'My Table');\n\n\t\t\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t\t\teditor.setPosition({ lineNumber: 1, column: 3 });\n\t\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ' ' });\n\n\t\t\t\t\t}, event => {\n\t\t\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\t\t\tconst [first] = event.completionModel.items;\n\t\t\t\t\t\tassert.strictEqual(first.completion.label, 'My Table');\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('#21484: Trigger character always force a new completion session', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'foo.bar',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'foo.bar',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\ttriggerCharacters: ['.'],\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'boom',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'boom',\n\t\t\t\t\t\trange: Range.fromPositions(\n\t\t\t\t\t\t\tpos.delta(0, doc.getLineContent(pos.lineNumber)[pos.column - 2] === '.' ? 0 : -1),\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('');\n\n\t\treturn withOracle(async (model, editor) => {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'foo' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\t\t\t\tassert.strictEqual(first.completion.label, 'foo.bar');\n\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: '.' });\n\n\t\t\t}, event => {\n\t\t\t\t// SYNC\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\t\t\t\tassert.strictEqual(first.completion.label, 'foo.bar');\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\t// nothing -> triggered by the trigger character typing (see above)\n\n\t\t\t}, event => {\n\t\t\t\t// ASYNC\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\tconst [first, second] = event.completionModel.items;\n\t\t\t\tassert.strictEqual(first.completion.label, 'foo.bar');\n\t\t\t\tassert.strictEqual(second.completion.label, 'boom');\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Intellisense Completion doesn\\'t respect space after equal sign (.html file), #29353 [1/2]', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\teditor.getModel()!.setValue('fo');\n\t\t\teditor.setPosition({ lineNumber: 1, column: 3 });\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\tmodel.trigger({ auto: false });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, false);\n\t\t\t\tassert.strictEqual(event.isFrozen, false);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\treturn assertEvent(model.onDidCancel, () => {\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: '+' });\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Intellisense Completion doesn\\'t respect space after equal sign (.html file), #29353 [2/2]', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\teditor.getModel()!.setValue('fo');\n\t\t\teditor.setPosition({ lineNumber: 1, column: 3 });\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\tmodel.trigger({ auto: false });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, false);\n\t\t\t\tassert.strictEqual(event.isFrozen, false);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\treturn assertEvent(model.onDidCancel, () => {\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ' ' });\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Incomplete suggestion results cause re-triggering when typing w/o further context, #28400 (1/2)', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'foo',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'foo',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\teditor.getModel()!.setValue('foo');\n\t\t\teditor.setPosition({ lineNumber: 1, column: 4 });\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\tmodel.trigger({ auto: false });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, false);\n\t\t\t\tassert.strictEqual(event.completionModel.getIncompleteProvider().size, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\treturn assertEvent(model.onDidCancel, () => {\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ';' });\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Incomplete suggestion results cause re-triggering when typing w/o further context, #28400 (2/2)', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'foo;',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'foo',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\teditor.getModel()!.setValue('foo');\n\t\t\teditor.setPosition({ lineNumber: 1, column: 4 });\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\tmodel.trigger({ auto: false });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, false);\n\t\t\t\tassert.strictEqual(event.completionModel.getIncompleteProvider().size, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t\t// while we cancel incrementally enriching the set of\n\t\t\t\t\t// completions we still filter against those that we have\n\t\t\t\t\t// until now\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ';' });\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.triggerOptions.auto, false);\n\t\t\t\t\tassert.strictEqual(event.completionModel.getIncompleteProvider().size, 1);\n\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Trigger character is provided in suggest context', function () {\n\t\tlet triggerCharacter = '';\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\ttriggerCharacters: ['.'],\n\t\t\tprovideCompletionItems(doc, pos, context): CompletionList {\n\t\t\t\tassert.strictEqual(context.triggerKind, CompletionTriggerKind.TriggerCharacter);\n\t\t\t\ttriggerCharacter = context.triggerCharacter!;\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'foo.bar',\n\t\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\t\tinsertText: 'foo.bar',\n\t\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('');\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'foo.' });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(triggerCharacter, '.');\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Mac press and hold accent character insertion does not update suggestions, #35269', function () {\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'abc',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'abc',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: '\u00E4bc',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: '\u00E4bc',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('');\n\t\treturn withOracle((model, editor) => {\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'a' });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].completion.label, 'abc');\n\n\t\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t\teditor.executeEdits('test', [EditOperation.replace(new Range(1, 1, 1, 2), '\u00E4')]);\n\n\t\t\t\t}, event => {\n\t\t\t\t\t// suggest model changed to \u00E4bc\n\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\t\tassert.strictEqual(event.completionModel.items[0].completion.label, '\u00E4bc');\n\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Backspace should not always cancel code completion, #36491', function () {\n\t\tdisposables.add(registry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle(async (model, editor) => {\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 4 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'd' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\n\t\t\t\tassert.strictEqual(first.provider, alwaysSomethingSupport);\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\n\t\t\t\tassert.strictEqual(first.provider, alwaysSomethingSupport);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Text changes for completion CodeAction are affected by the completion #39893', function () {\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'bar',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'bar',\n\t\t\t\t\t\trange: Range.fromPositions(pos.delta(0, -2), pos),\n\t\t\t\t\t\tadditionalTextEdits: [{\n\t\t\t\t\t\t\ttext: ', bar',\n\t\t\t\t\t\t\trange: { startLineNumber: 1, endLineNumber: 1, startColumn: 17, endColumn: 17 }\n\t\t\t\t\t\t}]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('ba; import { foo } from \"./b\"');\n\n\t\treturn withOracle(async (sugget, editor) => {\n\t\t\tclass TestCtrl extends SuggestController {\n\t\t\t\t_insertSuggestion_publicForTest(item: ISelectedSuggestion, flags: number = 0) {\n\t\t\t\t\tsuper._insertSuggestion(item, flags);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst ctrl = <TestCtrl>editor.registerAndInstantiateContribution(TestCtrl.ID, TestCtrl);\n\t\t\teditor.registerAndInstantiateContribution(SnippetController2.ID, SnippetController2);\n\n\t\t\tawait assertEvent(sugget.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 3 });\n\t\t\t\tsugget.trigger({ auto: false });\n\t\t\t}, event => {\n\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\t\t\t\tassert.strictEqual(first.completion.label, 'bar');\n\n\t\t\t\tctrl._insertSuggestion_publicForTest({ item: first, index: 0, model: event.completionModel });\n\t\t\t});\n\n\t\t\tassert.strictEqual(\n\t\t\t\tmodel.getValue(),\n\t\t\t\t'bar; import { foo, bar } from \"./b\"'\n\t\t\t);\n\t\t});\n\t});\n\n\ttest('Completion unexpectedly triggers on second keypress of an edit group in a snippet #43523', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle((model, editor) => {\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('d');\n\t\t\t\teditor.setSelection(new Selection(1, 1, 1, 2));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'e' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\n\t\t\t\tassert.strictEqual(first.provider, alwaysSomethingSupport);\n\t\t\t});\n\t\t});\n\t});\n\n\n\ttest('Fails to render completion details #47988', function () {\n\n\t\tlet disposeA = 0;\n\t\tlet disposeB = 0;\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Folder,\n\t\t\t\t\t\tlabel: 'CompleteNot',\n\t\t\t\t\t\tinsertText: 'Incomplete',\n\t\t\t\t\t\tsortText: 'a',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}],\n\t\t\t\t\tdispose() { disposeA += 1; }\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Folder,\n\t\t\t\t\t\tlabel: 'Complete',\n\t\t\t\t\t\tinsertText: 'Complete',\n\t\t\t\t\t\tsortText: 'z',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}],\n\t\t\t\t\tdispose() { disposeB += 1; }\n\t\t\t\t};\n\t\t\t},\n\t\t\tresolveCompletionItem(item) {\n\t\t\t\treturn item;\n\t\t\t},\n\t\t}));\n\n\t\treturn withOracle(async (model, editor) => {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('');\n\t\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'c' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\tassert.strictEqual(disposeA, 0);\n\t\t\t\tassert.strictEqual(disposeB, 0);\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'o' });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\n\t\t\t\t// clean up\n\t\t\t\tmodel.clear();\n\t\t\t\tassert.strictEqual(disposeA, 2); // provide got called two times!\n\t\t\t\tassert.strictEqual(disposeB, 1);\n\t\t\t});\n\n\t\t});\n\t});\n\n\n\ttest('Trigger (full) completions when (incomplete) completions are already active #99504', function () {\n\n\t\tlet countA = 0;\n\t\tlet countB = 0;\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\tcountA += 1;\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false, // doesn't matter if incomplete or not\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Class,\n\t\t\t\t\t\tlabel: 'Z aaa',\n\t\t\t\t\t\tinsertText: 'Z aaa',\n\t\t\t\t\t\trange: new Range(1, 1, pos.lineNumber, pos.column)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\tcountB += 1;\n\t\t\t\tif (!doc.getWordUntilPosition(pos).word.startsWith('a')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Folder,\n\t\t\t\t\t\tlabel: 'aaa',\n\t\t\t\t\t\tinsertText: 'aaa',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t},\n\t\t}));\n\n\t\treturn withOracle(async (model, editor) => {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('');\n\t\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'Z' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'Z aaa');\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\t// started another word: Z a|\n\t\t\t\t// item should be: Z aaa, aaa\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ' a' });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'Z aaa');\n\t\t\t\tassert.strictEqual(event.completionModel.items[1].textLabel, 'aaa');\n\n\t\t\t\tassert.strictEqual(countA, 1); // should we keep the suggestions from the \"active\" provider?, Yes! See: #106573\n\t\t\t\tassert.strictEqual(countB, 2);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('registerCompletionItemProvider with letters as trigger characters block other completion items to show up #127815', async function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Class,\n\t\t\t\t\t\tlabel: 'AAAA',\n\t\t\t\t\t\tinsertText: 'WordTriggerA',\n\t\t\t\t\t\trange: new Range(pos.lineNumber, pos.column, pos.lineNumber, pos.column)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\ttriggerCharacters: ['a', '.'],\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Class,\n\t\t\t\t\t\tlabel: 'AAAA',\n\t\t\t\t\t\tinsertText: 'AutoTriggerA',\n\t\t\t\t\t\trange: new Range(pos.lineNumber, pos.column, pos.lineNumber, pos.column)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t},\n\t\t}));\n\n\t\treturn withOracle(async (model, editor) => {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('');\n\t\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: '.' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t});\n\n\n\t\t\teditor.getModel().setValue('');\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('');\n\t\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'a' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Unexpected suggest scoring #167242', async function () {\n\t\tdisposables.add(registry.register('*', {\n\t\t\t// word-based\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\tconst word = doc.getWordUntilPosition(pos);\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'pull',\n\t\t\t\t\t\tinsertText: 'pull',\n\t\t\t\t\t\trange: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t// JSON-based\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Class,\n\t\t\t\t\t\tlabel: 'git.pull',\n\t\t\t\t\t\tinsertText: 'git.pull',\n\t\t\t\t\t\trange: new Range(pos.lineNumber, 1, pos.lineNumber, pos.column)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t},\n\t\t}));\n\n\t\treturn withOracle(async function (model, editor) {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('gi');\n\t\t\t\teditor.setSelection(new Selection(1, 3, 1, 3));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 't' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'git.pull');\n\t\t\t});\n\n\t\t\teditor.trigger('keyboard', Handler.Type, { text: '.' });\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'p' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'git.pull');\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Completion list closes unexpectedly when typing a digit after a word separator #169390', function () {\n\n\t\tconst requestCounts = [0, 0];\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\trequestCounts[0] += 1;\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'foo-20',\n\t\t\t\t\t\tinsertText: 'foo-20',\n\t\t\t\t\t\trange: new Range(pos.lineNumber, 1, pos.lineNumber, pos.column)\n\t\t\t\t\t}, {\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'foo-hello',\n\t\t\t\t\t\tinsertText: 'foo-hello',\n\t\t\t\t\t\trange: new Range(pos.lineNumber, 1, pos.lineNumber, pos.column)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\ttriggerCharacters: ['2'],\n\t\t\tprovideCompletionItems(doc, pos, ctx) {\n\t\t\t\trequestCounts[1] += 1;\n\t\t\t\tif (ctx.triggerKind !== CompletionTriggerKind.TriggerCharacter) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Class,\n\t\t\t\t\t\tlabel: 'foo-210',\n\t\t\t\t\t\tinsertText: 'foo-210',\n\t\t\t\t\t\trange: new Range(pos.lineNumber, 1, pos.lineNumber, pos.column)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t},\n\t\t}));\n\n\t\treturn withOracle(async function (model, editor) {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('foo');\n\t\t\t\teditor.setSelection(new Selection(1, 4, 1, 4));\n\t\t\t\tmodel.trigger({ auto: false });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, false);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'foo-20');\n\t\t\t\tassert.strictEqual(event.completionModel.items[1].textLabel, 'foo-hello');\n\t\t\t});\n\n\t\t\teditor.trigger('keyboard', Handler.Type, { text: '-' });\n\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: '2' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'foo-20');\n\t\t\t\tassert.strictEqual(event.completionModel.items[1].textLabel, 'foo-210');\n\t\t\t\tassert.deepStrictEqual(requestCounts, [1, 2]);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Set refilter-flag, keep triggerKind', function () {\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\ttriggerCharacters: ['.'],\n\t\t\tprovideCompletionItems(doc, pos, ctx) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: doc.getWordUntilPosition(pos).word || 'hello',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'foofoo',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t}));\n\n\t\treturn withOracle(async function (model, editor) {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('foo');\n\t\t\t\teditor.setSelection(new Selection(1, 4, 1, 4));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'o' });\n\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.triggerOptions.triggerCharacter, undefined);\n\t\t\t\tassert.strictEqual(event.triggerOptions.triggerKind, undefined);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: '.' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.triggerOptions.refilter, undefined);\n\t\t\t\tassert.strictEqual(event.triggerOptions.triggerCharacter, '.');\n\t\t\t\tassert.strictEqual(event.triggerOptions.triggerKind, CompletionTriggerKind.TriggerCharacter);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'h' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.triggerOptions.refilter, true);\n\t\t\t\tassert.strictEqual(event.triggerOptions.triggerCharacter, '.');\n\t\t\t\tassert.strictEqual(event.triggerOptions.triggerKind, CompletionTriggerKind.TriggerCharacter);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Snippets gone from IntelliSense #173244', function () {\n\n\t\tconst snippetProvider: CompletionItemProvider = {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos, ctx) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'log',\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tinsertText: 'log',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tconst old = setSnippetSuggestSupport(snippetProvider);\n\n\t\tdisposables.add(toDisposable(() => {\n\t\t\tif (getSnippetSuggestSupport() === snippetProvider) {\n\t\t\t\tsetSnippetSuggestSupport(old);\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(registry.register({ scheme: 'test' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\ttriggerCharacters: ['.'],\n\t\t\tprovideCompletionItems(doc, pos, ctx) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'locals',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'locals',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}],\n\t\t\t\t\tincomplete: true\n\t\t\t\t};\n\t\t\t},\n\t\t}));\n\n\t\treturn withOracle(async function (model, editor) {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('');\n\t\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'l' });\n\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.triggerOptions.triggerCharacter, undefined);\n\t\t\t\tassert.strictEqual(event.triggerOptions.triggerKind, undefined);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'locals');\n\t\t\t\tassert.strictEqual(event.completionModel.items[1].textLabel, 'log');\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'o' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.triggerOptions.triggerKind, CompletionTriggerKind.TriggerForIncompleteCompletions);\n\t\t\t\tassert.strictEqual(event.triggerOptions.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'locals');\n\t\t\t\tassert.strictEqual(event.completionModel.items[1].textLabel, 'log');\n\t\t\t});\n\n\t\t});\n\t});\n});\n"],
  "mappings": ";;;;;;;;;;;;AAIA,OAAO,YAAY;AACnB,SAAS,aAAa;AACtB,SAAS,YAAY,iBAAiB,oBAAoB;AAC1D,SAAS,WAAW;AACpB,SAAS,YAAY;AACrB,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B,SAAS,gBAAgB;AACzB,SAAS,aAAa;AACtB,SAAS,iBAAiB;AAC1B,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;AAC1B,SAAS,oBAAoB,wBAAwB,gBAAgB,uBAAuB,2BAA2B,QAAQ,4BAA4B;AAC3J,SAAS,sBAAsB;AAC/B,SAAS,qCAAqC;AAC9C,SAAS,iBAAiB;AAC1B,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,6BAA6B;AACtC,SAAS,aAAa,oBAAoB;AAC1C,SAAS,2BAA2B;AACpC,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,qBAAqB,iBAAiB,4BAA4B;AAC3E,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB,uBAAuB;AACxD,SAAS,yBAAyB;AAClC,SAAS,4BAA4B;AACrC,SAAS,gCAAgC;AACzC,SAAS,+BAA+B;AACxC,SAAS,gCAAgC;AACzC,SAAS,6BAA6B;AACtC,SAAS,0BAA0B,gCAAgC;AACnE,SAAS,2BAA2B;AACpC,SAAS,+CAA+C;AAGxD,SAAS,iBAAiB,OAAkB,yBAAoE;AAE/G,QAAM,eAAe,IAAI,uBAAuB;AAChD,QAAM,SAAS,qBAAqB,OAAO;AAAA,IAC1C,mBAAmB,IAAI;AAAA,MACtB,CAAC,0BAA0B,uBAAuB;AAAA,MAClD,CAAC,mBAAmB,oBAAoB;AAAA,MACxC,CAAC,iBAAiB,YAAY;AAAA,MAC9B,CAAC,oBAAoB,IAAI,sBAAsB,CAAC;AAAA,MAChD,CAAC,uBAAuB,IAAI,MAAuC;AAAA,QAElE,WAAiB;AAAA,QACjB;AAAA,QACA,SAAiB;AAChB,iBAAO;AAAA,QACR;AAAA,MACD,GAAC;AAAA,MACD,CAAC,eAAe,IAAI,cAAc,KAAoB,EAAE;AAAA,MAAE,GAAC;AAAA,MAC3D,CAAC,0BAA0B,IAAI,cAAc,KAA+B,EAAE;AAAA,MAAE,GAAC;AAAA,MACjF,CAAC,qBAAqB,IAAI,cAAc,KAA0B,EAAE;AAAA,QAC1D,UAAmB;AAAA,QACnB,yBAAkC;AAAA,MAC5C,GAAC;AAAA,IACF;AAAA,EACD,CAAC;AACD,QAAM,OAAO,OAAO,mCAAmC,mBAAmB,IAAI,kBAAkB;AAChG,SAAO,iBAAiB,MAAM;AAE9B,SAAO,mBAAmB,IAAI;AAC9B,SAAO,mBAAmB,YAAY;AACtC,SAAO;AACR;AA/BS;AAiCT,MAAM,0BAA0B,WAAY;AAC3C,QAAM,oBAAoB;AAC1B,QAAM,oBAAoB;AAE1B,MAAM,YAAN,cAAwB,WAAW;AAAA,IAlFpC,OAkFoC;AAAA;AAAA;AAAA,IAClB,aAAa;AAAA,IAC7B,YACmB,iBACa,8BAC9B;AACD,YAAM;AACN,WAAK,UAAU,gBAAgB,iBAAiB,EAAE,IAAI,KAAK,WAAW,CAAC,CAAC;AACxE,WAAK,UAAU,6BAA6B,SAAS,KAAK,YAAY,CAAC,CAAC,CAAC;AAEzE,WAAK,UAAU,qBAAqB,SAAS,KAAK,YAAY;AAAA,QAC7D,iBAAiB,6BAAc,WAAd;AAAA,QACjB,UAAU;AAAA,QACV,iBAAiB,wBAAC,MAAc,QAAiB,UAA6C;AAC7F,gBAAM,YAAsB,CAAC;AAC7B,cAAI,iBAAqC;AACzC,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACrC,kBAAM,aAAc,KAAK,OAAO,CAAC,MAAM,MAAM,oBAAoB;AACjE,kBAAM,oBAAoB,gBAAgB,gBAAgB,iBAAiB,UAAU;AACrF,gBAAI,mBAAmB,YAAY;AAClC,wBAAU,KAAK,CAAC;AAChB,wBAAU,KAAM,qBAAqB,eAAe,iBAAkB;AAAA,YACvE;AACA,6BAAiB;AAAA,UAClB;AAEA,gBAAM,SAAS,IAAI,YAAY,UAAU,MAAM;AAC/C,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACvC,mBAAO,CAAC,IAAI,UAAU,CAAC;AAAA,UACxB;AACA,iBAAO,IAAI,0BAA0B,QAAQ,KAAK;AAAA,QACnD,GAlBiB;AAAA,MAmBlB,CAAC,CAAC;AAAA,IACH;AAAA,EACD;AAlCM,cAAN;AAAA,IAGG;AAAA,IACA;AAAA,KAJG;AAoCN,MAAM,YAAN,cAAwB,WAAW;AAAA,IAtHpC,OAsHoC;AAAA;AAAA;AAAA,IAClB,aAAa;AAAA,IAC7B,YACmB,iBACa,8BAC9B;AACD,YAAM;AACN,WAAK,UAAU,gBAAgB,iBAAiB,EAAE,IAAI,KAAK,WAAW,CAAC,CAAC;AACxE,WAAK,UAAU,6BAA6B,SAAS,KAAK,YAAY,CAAC,CAAC,CAAC;AAAA,IAC1E;AAAA,EACD;AAVM,cAAN;AAAA,IAGG;AAAA,IACA;AAAA,KAJG;AAYN,QAAM,oBAAoB,wBAAC,OAAkB,QAAgB,UAAmB,YAA2B;AAC1G,UAAM,MAAM,MAAM,cAAc,MAAM;AACtC,UAAM,SAAS,iBAAiB,OAAO,IAAI,wBAAwB,CAAC;AACpE,WAAO,YAAY,GAAG;AACtB,WAAO,YAAY,YAAY,kBAAkB,MAAM,GAAG,UAAU,OAAO;AAC3E,WAAO,QAAQ;AAAA,EAChB,GAN0B;AAQ1B,MAAI;AAEJ,QAAM,MAAM;AACX,kBAAc,IAAI,gBAAgB;AAAA,EACnC,CAAC;AAED,WAAS,WAAY;AACpB,gBAAY,QAAQ;AAAA,EACrB,CAAC;AAED,0CAAwC;AAExC,OAAK,+BAA+B,WAAY;AAC/C,UAAM,QAAQ,gBAAgB,+EAAgF;AAC9G,gBAAY,IAAI,KAAK;AAErB,sBAAkB,OAAO,GAAG,MAAM,mBAAmB;AACrD,sBAAkB,OAAO,GAAG,OAAO,eAAe;AAClD,sBAAkB,OAAO,GAAG,MAAM,+CAA+C;AACjF,sBAAkB,OAAO,IAAI,OAAO,eAAe;AACnD,UAAM,QAAQ;AAAA,EACf,CAAC;AAED,OAAK,qDAAqD,MAAM;AAC/D,UAAMA,eAAc,IAAI,gBAAgB;AACxC,UAAM,uBAAuB,oBAAoBA,YAAW;AAC5D,UAAM,YAAYA,aAAY,IAAI,qBAAqB,eAAe,SAAS,CAAC;AAChF,IAAAA,aAAY,IAAI,qBAAqB,eAAe,SAAS,CAAC;AAE9D,UAAM,QAAQA,aAAY,IAAI,qBAAqB,sBAAsB,aAAa,UAAU,UAAU,CAAC;AAE3G,sBAAkB,OAAO,GAAG,MAAM,2CAAsC;AACxE,sBAAkB,OAAO,GAAG,OAAO,iDAA4C;AAC/E,sBAAkB,OAAO,GAAG,MAAM,4EAAuE;AACzG,sBAAkB,OAAO,GAAG,MAAM,4DAAuD;AACzF,sBAAkB,OAAO,GAAG,OAAO,oDAA+C;AAClF,sBAAkB,OAAO,GAAG,MAAM,+CAA0C;AAC5E,sBAAkB,OAAO,GAAG,MAAM,6DAAwD;AAE1F,IAAAA,aAAY,QAAQ;AAAA,EACrB,CAAC;AACF,CAAC;AAED,MAAM,yCAAyC,WAAY;AAG1D,WAAS,uBAAuBC,QAAmB,UAAoB;AACtE,UAAM,YAAYA,OAAM,qBAAqB,QAAQ;AACrD,WAAO,IAAI,MAAM,SAAS,YAAY,UAAU,aAAa,SAAS,YAAY,UAAU,SAAS;AAAA,EACtG;AAHS;AAKT,QAAM,qBAA6C;AAAA,IAClD,mBAAmB;AAAA,IACnB,uBAAuB,KAAK,KAAqB;AAChD,aAAO;AAAA,QACN,YAAY;AAAA,QACZ,aAAa,CAAC;AAAA,MACf;AAAA,IACD;AAAA,EACD;AAEA,QAAM,yBAAiD;AAAA,IACtD,mBAAmB;AAAA,IACnB,uBAAuB,KAAK,KAAqB;AAChD,aAAO;AAAA,QACN,YAAY;AAAA,QACZ,aAAa,CAAC;AAAA,UACb,OAAO,IAAI,qBAAqB,GAAG,EAAE;AAAA,UACrC,MAAM,mBAAmB;AAAA,UACzB,YAAY;AAAA,UACZ,OAAO,uBAAuB,KAAK,GAAG;AAAA,QACvC,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AAEA,MAAI;AACJ,MAAI;AACJ,QAAM,0BAA0B,IAAI,wBAAwB;AAC5D,QAAM,WAAW,wBAAwB;AAEzC,QAAM,WAAY;AACjB,kBAAc,IAAI,gBAAgB;AAClC,YAAQ,gBAAgB,WAAW,QAAW,QAAW,IAAI,MAAM,mBAAmB,CAAC;AACvF,gBAAY,IAAI,KAAK;AAAA,EACtB,CAAC;AAED,WAAS,MAAM;AACd,gBAAY,QAAQ;AAAA,EACrB,CAAC;AAED,0CAAwC;AAExC,WAAS,WAAW,UAA+E;AAElG,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvC,YAAM,SAAS,iBAAiB,OAAO,uBAAuB;AAC9D,YAAM,SAAS,OAAO,oBAAoB,cAAY,SAAS,IAAI,qBAAqB,EAAE,eAAe,cAAc,MAAM,CAAC;AAC9H,kBAAY,IAAI,MAAM;AACtB,kBAAY,IAAI,MAAM;AAEtB,UAAI;AACH,gBAAQ,SAAS,QAAQ,MAAM,CAAC;AAAA,MACjC,SAAS,KAAK;AACb,eAAO,GAAG;AAAA,MACX;AAAA,IACD,CAAC;AAAA,EACF;AAdS;AAgBT,WAAS,YAAe,OAAiB,QAAmBC,SAAuB;AAClF,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvC,YAAM,MAAM,MAAM,OAAK;AACtB,YAAI,QAAQ;AACZ,YAAI;AACH,kBAAQA,QAAO,CAAC,CAAC;AAAA,QAClB,SAAS,KAAK;AACb,iBAAO,GAAG;AAAA,QACX;AAAA,MACD,CAAC;AACD,UAAI;AACH,eAAO;AAAA,MACR,SAAS,KAAK;AACb,YAAI,QAAQ;AACZ,eAAO,GAAG;AAAA,MACX;AAAA,IACD,CAAC;AAAA,EACF;AAjBS;AAmBT,OAAK,2BAA2B,WAAY;AAC3C,WAAO,WAAW,CAAAD,WAAS;AAE1B,aAAO,QAAQ,IAAI;AAAA,QAElB,YAAYA,OAAM,cAAc,WAAY;AAC3C,UAAAA,OAAM,QAAQ,EAAE,MAAM,KAAK,CAAC;AAAA,QAC7B,GAAG,SAAU,OAAO;AACnB,iBAAO,YAAY,MAAM,MAAM,IAAI;AAEnC,iBAAO,YAAYA,OAAM,aAAa,WAAY;AACjD,YAAAA,OAAM,OAAO;AAAA,UACd,GAAG,SAAUE,QAAO;AACnB,mBAAO,YAAYA,OAAM,WAAW,KAAK;AAAA,UAC1C,CAAC;AAAA,QACF,CAAC;AAAA,QAED,YAAYF,OAAM,cAAc,WAAY;AAC3C,UAAAA,OAAM,QAAQ,EAAE,MAAM,KAAK,CAAC;AAAA,QAC7B,GAAG,SAAU,OAAO;AACnB,iBAAO,YAAY,MAAM,MAAM,IAAI;AAAA,QACpC,CAAC;AAAA,QAED,YAAYA,OAAM,cAAc,WAAY;AAC3C,UAAAA,OAAM,QAAQ,EAAE,MAAM,MAAM,CAAC;AAAA,QAC9B,GAAG,SAAU,OAAO;AACnB,iBAAO,YAAY,MAAM,MAAM,KAAK;AAAA,QACrC,CAAC;AAAA,MACF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAGD,OAAK,0BAA0B,WAAY;AAE1C,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG,kBAAkB,CAAC;AAEzE,WAAO,WAAW,CAAAA,WAAS;AAC1B,aAAO,QAAQ,IAAI;AAAA,QAClB,YAAYA,OAAM,aAAa,WAAY;AAC1C,UAAAA,OAAM,QAAQ,EAAE,MAAM,KAAK,CAAC;AAAA,QAC7B,GAAG,SAAU,OAAO;AACnB,iBAAO,YAAY,MAAM,WAAW,KAAK;AAAA,QAC1C,CAAC;AAAA,QACD,YAAYA,OAAM,cAAc,WAAY;AAC3C,UAAAA,OAAM,QAAQ,EAAE,MAAM,MAAM,CAAC;AAAA,QAC9B,GAAG,SAAU,OAAO;AACnB,iBAAO,YAAY,MAAM,eAAe,MAAM,KAAK;AACnD,iBAAO,YAAY,MAAM,UAAU,KAAK;AACxC,iBAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAAA,QACzD,CAAC;AAAA,MACF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,qBAAqB,WAAY;AAErC,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG,sBAAsB,CAAC;AAE7E,WAAO,WAAW,CAACA,QAAO,WAAW;AACpC,aAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,eAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAC/C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,cAAM,CAAC,KAAK,IAAI,MAAM,gBAAgB;AAEtC,eAAO,YAAY,MAAM,UAAU,sBAAsB;AAAA,MAC1D,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,sDAAsD,WAAY;AAEtE,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAqB;AAChD,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,uBAAuB,KAAK,GAAG;AAAA,UACvC,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,UAAM,SAAS,EAAE;AAEjB,WAAO,WAAW,CAACA,QAAO,WAAW;AAEpC,aAAO,YAAYA,OAAM,cAAc,MAAM;AAE5C,QAAAA,OAAM,QAAQ,EAAE,MAAM,KAAK,CAAC;AAAA,MAC7B,GAAG,WAAS;AAEX,eAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,iBAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAC/C,iBAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,KAAK,CAAC;AAAA,QAExD,GAAG,CAAAE,WAAS;AACX,iBAAO,YAAYA,OAAM,eAAe,MAAM,IAAI;AAClD,iBAAO,YAAYA,OAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,gBAAM,CAAC,KAAK,IAAIA,OAAM,gBAAgB;AACtC,iBAAO,YAAY,MAAM,WAAW,OAAO,UAAU;AAErD,iBAAO,YAAYF,OAAM,cAAc,MAAM;AAC5C,mBAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAC/C,mBAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,UAEvD,GAAG,CAAAE,WAAS;AACX,mBAAO,YAAYA,OAAM,eAAe,MAAM,IAAI;AAClD,mBAAO,YAAYA,OAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,kBAAM,CAACC,MAAK,IAAID,OAAM,gBAAgB;AACtC,mBAAO,YAAYC,OAAM,WAAW,OAAO,UAAU;AAAA,UACtD,CAAC;AAAA,QACF,CAAC;AAAA,MACF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,mEAAmE,WAAY;AAEnF,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAqB;AAChD,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,MAAM,cAAc,IAAI,KAAK,QAAW,CAAC,GAAG,GAAG;AAAA,UACvD,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,mBAAmB,CAAC,GAAG;AAAA,MACvB,uBAAuB,KAAK,KAAqB;AAChD,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,MAAM;AAAA,cACZ,IAAI,MAAM,GAAG,IAAI,eAAe,IAAI,UAAU,EAAE,IAAI,SAAS,CAAC,MAAM,MAAM,IAAI,EAAE;AAAA,cAChF;AAAA,YACD;AAAA,UACD,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,UAAM,SAAS,EAAE;AAEjB,WAAO,WAAW,OAAOH,QAAO,WAAW;AAE1C,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAC/C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,MAAM,CAAC;AAAA,MAEzD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,cAAM,CAAC,KAAK,IAAI,MAAM,gBAAgB;AACtC,eAAO,YAAY,MAAM,WAAW,OAAO,SAAS;AAAA,MAErD,CAAC;AAED,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AAEX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,cAAM,CAAC,KAAK,IAAI,MAAM,gBAAgB;AACtC,eAAO,YAAY,MAAM,WAAW,OAAO,SAAS;AAAA,MACrD,CAAC;AAED,YAAM,YAAYA,OAAM,cAAc,MAAM;AAAA,MAG5C,GAAG,WAAS;AAEX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,cAAM,CAAC,OAAO,MAAM,IAAI,MAAM,gBAAgB;AAC9C,eAAO,YAAY,MAAM,WAAW,OAAO,SAAS;AACpD,eAAO,YAAY,OAAO,WAAW,OAAO,MAAM;AAAA,MACnD,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,6FAA8F,WAAY;AAE9G,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG,sBAAsB,CAAC;AAE7E,WAAO,WAAW,CAACA,QAAO,WAAW;AAEpC,aAAO,SAAS,EAAG,SAAS,IAAI;AAChC,aAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAE/C,aAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,QAAAA,OAAM,QAAQ,EAAE,MAAM,MAAM,CAAC;AAAA,MAC9B,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,KAAK;AACnD,eAAO,YAAY,MAAM,UAAU,KAAK;AACxC,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAExD,eAAO,YAAYA,OAAM,aAAa,MAAM;AAC3C,iBAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,QACvD,GAAG,CAAAE,WAAS;AACX,iBAAO,YAAYA,OAAM,WAAW,KAAK;AAAA,QAC1C,CAAC;AAAA,MACF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,6FAA8F,WAAY;AAE9G,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG,sBAAsB,CAAC;AAE7E,WAAO,WAAW,CAACF,QAAO,WAAW;AAEpC,aAAO,SAAS,EAAG,SAAS,IAAI;AAChC,aAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAE/C,aAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,QAAAA,OAAM,QAAQ,EAAE,MAAM,MAAM,CAAC;AAAA,MAC9B,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,KAAK;AACnD,eAAO,YAAY,MAAM,UAAU,KAAK;AACxC,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAExD,eAAO,YAAYA,OAAM,aAAa,MAAM;AAC3C,iBAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,QACvD,GAAG,CAAAE,WAAS;AACX,iBAAO,YAAYA,OAAM,WAAW,KAAK;AAAA,QAC1C,CAAC;AAAA,MACF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,mGAAmG,WAAY;AAEnH,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAqB;AAChD,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,MAAM,cAAc,IAAI,KAAK,QAAW,CAAC,GAAG,GAAG;AAAA,UACvD,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,WAAO,WAAW,CAACF,QAAO,WAAW;AAEpC,aAAO,SAAS,EAAG,SAAS,KAAK;AACjC,aAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAE/C,aAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,QAAAA,OAAM,QAAQ,EAAE,MAAM,MAAM,CAAC;AAAA,MAC9B,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,KAAK;AACnD,eAAO,YAAY,MAAM,gBAAgB,sBAAsB,EAAE,MAAM,CAAC;AACxE,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAExD,eAAO,YAAYA,OAAM,aAAa,MAAM;AAC3C,iBAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,QACvD,GAAG,CAAAE,WAAS;AACX,iBAAO,YAAYA,OAAM,WAAW,KAAK;AAAA,QAC1C,CAAC;AAAA,MACF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,mGAAmG,WAAY;AAEnH,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAqB;AAChD,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,MAAM,cAAc,IAAI,KAAK,QAAW,CAAC,GAAG,GAAG;AAAA,UACvD,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,WAAO,WAAW,CAACF,QAAO,WAAW;AAEpC,aAAO,SAAS,EAAG,SAAS,KAAK;AACjC,aAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAE/C,aAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,QAAAA,OAAM,QAAQ,EAAE,MAAM,MAAM,CAAC;AAAA,MAC9B,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,KAAK;AACnD,eAAO,YAAY,MAAM,gBAAgB,sBAAsB,EAAE,MAAM,CAAC;AACxE,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAExD,eAAO,YAAYA,OAAM,cAAc,MAAM;AAI5C,iBAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,QACvD,GAAG,CAAAE,WAAS;AACX,iBAAO,YAAYA,OAAM,eAAe,MAAM,KAAK;AACnD,iBAAO,YAAYA,OAAM,gBAAgB,sBAAsB,EAAE,MAAM,CAAC;AACxE,iBAAO,YAAYA,OAAM,gBAAgB,MAAM,QAAQ,CAAC;AAAA,QAEzD,CAAC;AAAA,MACF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,oDAAoD,WAAY;AACpE,QAAI,mBAAmB;AACvB,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,mBAAmB,CAAC,GAAG;AAAA,MACvB,uBAAuB,KAAK,KAAK,SAAyB;AACzD,eAAO,YAAY,QAAQ,aAAa,sBAAsB,gBAAgB;AAC9E,2BAAmB,QAAQ;AAC3B,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa;AAAA,YACZ;AAAA,cACC,OAAO;AAAA,cACP,MAAM,mBAAmB;AAAA,cACzB,YAAY;AAAA,cACZ,OAAO,MAAM,cAAc,IAAI,KAAK,QAAW,CAAC,GAAG,GAAG;AAAA,YACvD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,UAAM,SAAS,EAAE;AAEjB,WAAO,WAAW,CAACF,QAAO,WAAW;AAEpC,aAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,eAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAC/C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,OAAO,CAAC;AAAA,MAC1D,GAAG,WAAS;AACX,eAAO,YAAY,kBAAkB,GAAG;AAAA,MACzC,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,qFAAqF,WAAY;AACrG,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAqB;AAChD,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,MAAM,cAAc,IAAI,KAAK,QAAW,CAAC,GAAG,GAAG;AAAA,UACvD,GAAG;AAAA,YACF,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,MAAM,cAAc,IAAI,KAAK,QAAW,CAAC,GAAG,GAAG;AAAA,UACvD,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,UAAM,SAAS,EAAE;AACjB,WAAO,WAAW,CAACA,QAAO,WAAW;AAEpC,aAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,eAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAC/C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MACvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,OAAO,KAAK;AAEzE,eAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,iBAAO,aAAa,QAAQ,CAAC,cAAc,QAAQ,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,MAAG,CAAC,CAAC;AAAA,QAEhF,GAAG,CAAAE,WAAS;AAEX,iBAAO,YAAYA,OAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,iBAAO,YAAYA,OAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,OAAO,QAAK;AAAA,QAE1E,CAAC;AAAA,MACF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,8DAA8D,WAAY;AAC9E,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG,sBAAsB,CAAC;AAE7E,WAAO,WAAW,OAAOF,QAAO,WAAW;AAC1C,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAC/C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,cAAM,CAAC,KAAK,IAAI,MAAM,gBAAgB;AAEtC,eAAO,YAAY,MAAM,UAAU,sBAAsB;AAAA,MAC1D,CAAC;AAED,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,4BAAoB,WAAW,iBAAiB,MAAM,QAAQ,IAAI;AAAA,MAEnE,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,cAAM,CAAC,KAAK,IAAI,MAAM,gBAAgB;AAEtC,eAAO,YAAY,MAAM,UAAU,sBAAsB;AAAA,MAC1D,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,gFAAgF,WAAY;AAChG,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAqB;AAChD,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,MAAM,cAAc,IAAI,MAAM,GAAG,EAAE,GAAG,GAAG;AAAA,YAChD,qBAAqB,CAAC;AAAA,cACrB,MAAM;AAAA,cACN,OAAO,EAAE,iBAAiB,GAAG,eAAe,GAAG,aAAa,IAAI,WAAW,GAAG;AAAA,YAC/E,CAAC;AAAA,UACF,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,UAAM,SAAS,+BAA+B;AAE9C,WAAO,WAAW,OAAO,QAAQ,WAAW;AAAA,MAC3C,MAAM,iBAAiB,kBAAkB;AAAA,QA3tB5C,OA2tB4C;AAAA;AAAA;AAAA,QACxC,gCAAgC,MAA2B,QAAgB,GAAG;AAC7E,gBAAM,kBAAkB,MAAM,KAAK;AAAA,QACpC;AAAA,MACD;AACA,YAAM,OAAiB,OAAO,mCAAmC,SAAS,IAAI,QAAQ;AACtF,aAAO,mCAAmC,mBAAmB,IAAI,kBAAkB;AAEnF,YAAM,YAAY,OAAO,cAAc,MAAM;AAC5C,eAAO,YAAY,EAAE,YAAY,GAAG,QAAQ,EAAE,CAAC;AAC/C,eAAO,QAAQ,EAAE,MAAM,MAAM,CAAC;AAAA,MAC/B,GAAG,WAAS;AAEX,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,cAAM,CAAC,KAAK,IAAI,MAAM,gBAAgB;AACtC,eAAO,YAAY,MAAM,WAAW,OAAO,KAAK;AAEhD,aAAK,gCAAgC,EAAE,MAAM,OAAO,OAAO,GAAG,OAAO,MAAM,gBAAgB,CAAC;AAAA,MAC7F,CAAC;AAED,aAAO;AAAA,QACN,MAAM,SAAS;AAAA,QACf;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF,CAAC;AAED,OAAK,4FAA4F,WAAY;AAE5G,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG,sBAAsB,CAAC;AAE7E,WAAO,WAAW,CAACA,QAAO,WAAW;AACpC,aAAO,YAAYA,OAAM,cAAc,MAAM;AAC5C,eAAO,SAAS,GAAG;AACnB,eAAO,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,cAAM,CAAC,KAAK,IAAI,MAAM,gBAAgB;AAEtC,eAAO,YAAY,MAAM,UAAU,sBAAsB;AAAA,MAC1D,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAGD,OAAK,6CAA6C,WAAY;AAE7D,QAAI,WAAW;AACf,QAAI,WAAW;AAEf,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAK;AAChC,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,UAAU;AAAA,YACV,OAAO,uBAAuB,KAAK,GAAG;AAAA,UACvC,CAAC;AAAA,UACD,UAAU;AAAE,wBAAY;AAAA,UAAG;AAAA,QAC5B;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAK;AAChC,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,UAAU;AAAA,YACV,OAAO,uBAAuB,KAAK,GAAG;AAAA,UACvC,CAAC;AAAA,UACD,UAAU;AAAE,wBAAY;AAAA,UAAG;AAAA,QAC5B;AAAA,MACD;AAAA,MACA,sBAAsB,MAAM;AAC3B,eAAO;AAAA,MACR;AAAA,IACD,CAAC,CAAC;AAEF,WAAO,WAAW,OAAOA,QAAO,WAAW;AAE1C,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,SAAS,EAAE;AAClB,eAAO,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,UAAU,CAAC;AAC9B,eAAO,YAAY,UAAU,CAAC;AAAA,MAC/B,CAAC;AAED,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MACvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAGxD,QAAAA,OAAM,MAAM;AACZ,eAAO,YAAY,UAAU,CAAC;AAC9B,eAAO,YAAY,UAAU,CAAC;AAAA,MAC/B,CAAC;AAAA,IAEF,CAAC;AAAA,EACF,CAAC;AAGD,OAAK,sFAAsF,WAAY;AAEtG,QAAI,SAAS;AACb,QAAI,SAAS;AAEb,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAK;AAChC,kBAAU;AACV,eAAO;AAAA,UACN,YAAY;AAAA;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,OAAO,IAAI,MAAM,GAAG,GAAG,IAAI,YAAY,IAAI,MAAM;AAAA,UAClD,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAK;AAChC,kBAAU;AACV,YAAI,CAAC,IAAI,qBAAqB,GAAG,EAAE,KAAK,WAAW,GAAG,GAAG;AACxD;AAAA,QACD;AACA,eAAO;AAAA,UACN,YAAY;AAAA,UACZ,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,OAAO,uBAAuB,KAAK,GAAG;AAAA,UACvC,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,WAAO,WAAW,OAAOA,QAAO,WAAW;AAE1C,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,SAAS,EAAE;AAClB,eAAO,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,OAAO;AAAA,MACrE,CAAC;AAED,YAAM,YAAYA,OAAM,cAAc,MAAM;AAG3C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,KAAK,CAAC;AAAA,MACxD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,OAAO;AACpE,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,KAAK;AAElE,eAAO,YAAY,QAAQ,CAAC;AAC5B,eAAO,YAAY,QAAQ,CAAC;AAAA,MAC7B,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,qHAAqH,iBAAkB;AAE3I,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAK;AAChC,eAAO;AAAA,UACN,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,OAAO,IAAI,MAAM,IAAI,YAAY,IAAI,QAAQ,IAAI,YAAY,IAAI,MAAM;AAAA,UACxE,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,mBAAmB,CAAC,KAAK,GAAG;AAAA,MAC5B,uBAAuB,KAAK,KAAK;AAChC,eAAO;AAAA,UACN,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,OAAO,IAAI,MAAM,IAAI,YAAY,IAAI,QAAQ,IAAI,YAAY,IAAI,MAAM;AAAA,UACxE,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,WAAO,WAAW,OAAOA,QAAO,WAAW;AAE1C,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,SAAS,EAAE;AAClB,eAAO,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAAA,MACzD,CAAC;AAGD,aAAO,SAAS,EAAE,SAAS,EAAE;AAE7B,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,SAAS,EAAE;AAClB,eAAO,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAAA,MACzD,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,sCAAsC,iBAAkB;AAC5D,gBAAY,IAAI,SAAS,SAAS,KAAK;AAAA;AAAA,MAEtC,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAK;AAChC,cAAM,OAAO,IAAI,qBAAqB,GAAG;AACzC,eAAO;AAAA,UACN,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,OAAO,IAAI,MAAM,IAAI,YAAY,KAAK,aAAa,IAAI,YAAY,KAAK,SAAS;AAAA,UAClF,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA;AAAA,MAErD,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAK;AAChC,eAAO;AAAA,UACN,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,OAAO,IAAI,MAAM,IAAI,YAAY,GAAG,IAAI,YAAY,IAAI,MAAM;AAAA,UAC/D,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,WAAO,WAAW,eAAgBA,QAAO,QAAQ;AAEhD,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,SAAS,IAAI;AACpB,eAAO,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,UAAU;AAAA,MACxE,CAAC;AAED,aAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAEtD,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,UAAU;AAAA,MACxE,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,0FAA0F,WAAY;AAE1G,UAAM,gBAAgB,CAAC,GAAG,CAAC;AAE3B,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MAEnB,uBAAuB,KAAK,KAAK;AAChC,sBAAc,CAAC,KAAK;AACpB,eAAO;AAAA,UACN,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,OAAO,IAAI,MAAM,IAAI,YAAY,GAAG,IAAI,YAAY,IAAI,MAAM;AAAA,UAC/D,GAAG;AAAA,YACF,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,OAAO,IAAI,MAAM,IAAI,YAAY,GAAG,IAAI,YAAY,IAAI,MAAM;AAAA,UAC/D,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,mBAAmB,CAAC,GAAG;AAAA,MACvB,uBAAuB,KAAK,KAAK,KAAK;AACrC,sBAAc,CAAC,KAAK;AACpB,YAAI,IAAI,gBAAgB,sBAAsB,kBAAkB;AAC/D;AAAA,QACD;AACA,eAAO;AAAA,UACN,aAAa,CAAC;AAAA,YACb,MAAM,mBAAmB;AAAA,YACzB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,OAAO,IAAI,MAAM,IAAI,YAAY,GAAG,IAAI,YAAY,IAAI,MAAM;AAAA,UAC/D,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,WAAO,WAAW,eAAgBA,QAAO,QAAQ;AAEhD,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,SAAS,KAAK;AACrB,eAAO,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,QAAAA,OAAM,QAAQ,EAAE,MAAM,MAAM,CAAC;AAAA,MAE9B,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,KAAK;AACnD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,QAAQ;AACrE,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,WAAW;AAAA,MACzE,CAAC;AAED,aAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAGtD,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,QAAQ;AACrE,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,SAAS;AACtE,eAAO,gBAAgB,eAAe,CAAC,GAAG,CAAC,CAAC;AAAA,MAC7C,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,uCAAuC,WAAY;AAEvD,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,mBAAmB,CAAC,GAAG;AAAA,MACvB,uBAAuB,KAAK,KAAK,KAAK;AACrC,eAAO;AAAA,UACN,aAAa,CAAC;AAAA,YACb,OAAO,IAAI,qBAAqB,GAAG,EAAE,QAAQ;AAAA,YAC7C,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,uBAAuB,KAAK,GAAG;AAAA,UACvC,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,WAAO,WAAW,eAAgBA,QAAO,QAAQ;AAEhD,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,SAAS,KAAK;AACrB,eAAO,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAGvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,eAAe,kBAAkB,MAAS;AACnE,eAAO,YAAY,MAAM,eAAe,aAAa,MAAS;AAC9D,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAAA,MACzD,CAAC;AAED,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,eAAe,UAAU,MAAS;AAC3D,eAAO,YAAY,MAAM,eAAe,kBAAkB,GAAG;AAC7D,eAAO,YAAY,MAAM,eAAe,aAAa,sBAAsB,gBAAgB;AAC3F,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAAA,MACzD,CAAC;AAED,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,eAAe,UAAU,IAAI;AACtD,eAAO,YAAY,MAAM,eAAe,kBAAkB,GAAG;AAC7D,eAAO,YAAY,MAAM,eAAe,aAAa,sBAAsB,gBAAgB;AAC3F,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AAAA,MACzD,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,2CAA2C,WAAY;AAE3D,UAAM,kBAA0C;AAAA,MAC/C,mBAAmB;AAAA,MACnB,uBAAuB,KAAK,KAAK,KAAK;AACrC,eAAO;AAAA,UACN,aAAa,CAAC;AAAA,YACb,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,uBAAuB,KAAK,GAAG;AAAA,UACvC,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD;AACA,UAAM,MAAM,yBAAyB,eAAe;AAEpD,gBAAY,IAAI,aAAa,MAAM;AAClC,UAAI,yBAAyB,MAAM,iBAAiB;AACnD,iCAAyB,GAAG;AAAA,MAC7B;AAAA,IACD,CAAC,CAAC;AAEF,gBAAY,IAAI,SAAS,SAAS,EAAE,QAAQ,OAAO,GAAG;AAAA,MACrD,mBAAmB;AAAA,MACnB,mBAAmB,CAAC,GAAG;AAAA,MACvB,uBAAuB,KAAK,KAAK,KAAK;AACrC,eAAO;AAAA,UACN,aAAa,CAAC;AAAA,YACb,OAAO;AAAA,YACP,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,OAAO,uBAAuB,KAAK,GAAG;AAAA,UACvC,CAAC;AAAA,UACD,YAAY;AAAA,QACb;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,WAAO,WAAW,eAAgBA,QAAO,QAAQ;AAEhD,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,SAAS,EAAE;AAClB,eAAO,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAGvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,eAAe,kBAAkB,MAAS;AACnE,eAAO,YAAY,MAAM,eAAe,aAAa,MAAS;AAC9D,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,QAAQ;AACrE,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,KAAK;AAAA,MACnE,CAAC;AAED,YAAM,YAAYA,OAAM,cAAc,MAAM;AAC3C,eAAO,QAAQ,YAAY,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,MAEvD,GAAG,WAAS;AACX,eAAO,YAAY,MAAM,eAAe,aAAa,sBAAsB,+BAA+B;AAC1G,eAAO,YAAY,MAAM,eAAe,MAAM,IAAI;AAClD,eAAO,YAAY,MAAM,gBAAgB,MAAM,QAAQ,CAAC;AACxD,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,QAAQ;AACrE,eAAO,YAAY,MAAM,gBAAgB,MAAM,CAAC,EAAE,WAAW,KAAK;AAAA,MACnE,CAAC;AAAA,IAEF,CAAC;AAAA,EACF,CAAC;AACF,CAAC;",
  "names": ["disposables", "model", "assert", "event", "first"]
}
