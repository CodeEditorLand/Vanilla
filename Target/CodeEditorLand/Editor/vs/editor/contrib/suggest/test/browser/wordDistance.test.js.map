{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/test/browser/wordDistance.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Event } from '../../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { IPosition } from '../../../../common/core/position.js';\nimport { IRange } from '../../../../common/core/range.js';\nimport { DEFAULT_WORD_REGEXP } from '../../../../common/core/wordHelper.js';\nimport * as languages from '../../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { BaseEditorSimpleWorker } from '../../../../common/services/editorSimpleWorker.js';\nimport { EditorWorkerService } from '../../../../browser/services/editorWorkerService.js';\nimport { IModelService } from '../../../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../../../common/services/textResourceConfiguration.js';\nimport { CompletionItem } from '../../browser/suggest.js';\nimport { WordDistance } from '../../browser/wordDistance.js';\nimport { createCodeEditorServices, instantiateTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { instantiateTextModel } from '../../../../test/common/testTextModel.js';\nimport { TestLanguageConfigurationService } from '../../../../test/common/modes/testLanguageConfigurationService.js';\nimport { NullLogService } from '../../../../../platform/log/common/log.js';\nimport { LanguageFeaturesService } from '../../../../common/services/languageFeaturesService.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('suggest, word distance', function () {\n\n\tlet distance: WordDistance;\n\tconst disposables = new DisposableStore();\n\n\tsetup(async function () {\n\t\tconst languageId = 'bracketMode';\n\n\t\tdisposables.clear();\n\t\tconst instantiationService = createCodeEditorServices(disposables);\n\t\tconst languageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')'],\n\t\t\t]\n\t\t}));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'function abc(aa, ab){\\na\\n}', languageId, undefined, URI.parse('test:///some.path')));\n\t\tconst editor = disposables.add(instantiateTestCodeEditor(instantiationService, model));\n\t\teditor.updateOptions({ suggest: { localityBonus: true } });\n\t\teditor.setPosition({ lineNumber: 2, column: 2 });\n\n\t\tconst modelService = new class extends mock<IModelService>() {\n\t\t\toverride onModelRemoved = Event.None;\n\t\t\toverride getModel(uri: URI) {\n\t\t\t\treturn uri.toString() === model.uri.toString() ? model : null;\n\t\t\t}\n\t\t};\n\n\t\tconst service = new class extends EditorWorkerService {\n\n\t\t\tprivate _worker = new BaseEditorSimpleWorker();\n\n\t\t\tconstructor() {\n\t\t\t\tsuper(null!, modelService, new class extends mock<ITextResourceConfigurationService>() { }, new NullLogService(), new TestLanguageConfigurationService(), new LanguageFeaturesService());\n\t\t\t\tthis._worker.$acceptNewModel({\n\t\t\t\t\turl: model.uri.toString(),\n\t\t\t\t\tlines: model.getLinesContent(),\n\t\t\t\t\tEOL: model.getEOL(),\n\t\t\t\t\tversionId: model.getVersionId()\n\t\t\t\t});\n\t\t\t\tmodel.onDidChangeContent(e => this._worker.$acceptModelChanged(model.uri.toString(), e));\n\t\t\t}\n\t\t\toverride computeWordRanges(resource: URI, range: IRange): Promise<{ [word: string]: IRange[] } | null> {\n\t\t\t\treturn this._worker.$computeWordRanges(resource.toString(), range, DEFAULT_WORD_REGEXP.source, DEFAULT_WORD_REGEXP.flags);\n\t\t\t}\n\t\t};\n\n\t\tdistance = await WordDistance.create(service, editor);\n\n\t\tdisposables.add(service);\n\t});\n\n\tteardown(function () {\n\t\tdisposables.clear();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction createSuggestItem(label: string, overwriteBefore: number, position: IPosition): CompletionItem {\n\t\tconst suggestion: languages.CompletionItem = {\n\t\t\tlabel,\n\t\t\trange: { startLineNumber: position.lineNumber, startColumn: position.column - overwriteBefore, endLineNumber: position.lineNumber, endColumn: position.column },\n\t\t\tinsertText: label,\n\t\t\tkind: 0\n\t\t};\n\t\tconst container: languages.CompletionList = {\n\t\t\tsuggestions: [suggestion]\n\t\t};\n\t\tconst provider: languages.CompletionItemProvider = {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\t\treturn new CompletionItem(position, suggestion, container, provider);\n\t}\n\n\ttest('Suggest locality bonus can boost current word #90515', function () {\n\t\tconst pos = { lineNumber: 2, column: 2 };\n\t\tconst d1 = distance.distance(pos, createSuggestItem('a', 1, pos).completion);\n\t\tconst d2 = distance.distance(pos, createSuggestItem('aa', 1, pos).completion);\n\t\tconst d3 = distance.distance(pos, createSuggestItem('ab', 1, pos).completion);\n\n\t\tassert.ok(d1 > d2);\n\t\tassert.ok(d2 === d3);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
