{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/suggest/test/browser/suggestController.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { TextModel } from '../../../../common/model/textModel.js';\nimport { CompletionItemInsertTextRule, CompletionItemKind } from '../../../../common/languages.js';\nimport { IEditorWorkerService } from '../../../../common/services/editorWorker.js';\nimport { SnippetController2 } from '../../../snippet/browser/snippetController2.js';\nimport { SuggestController } from '../../browser/suggestController.js';\nimport { ISuggestMemoryService } from '../../browser/suggestMemory.js';\nimport { createTestCodeEditor, ITestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { createTextModel } from '../../../../test/common/testTextModel.js';\nimport { IMenu, IMenuService } from '../../../../../platform/actions/common/actions.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { MockKeybindingService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { ILogService, NullLogService } from '../../../../../platform/log/common/log.js';\nimport { InMemoryStorageService, IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { LanguageFeaturesService } from '../../../../common/services/languageFeaturesService.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { IEnvironmentService } from '../../../../../platform/environment/common/environment.js';\nimport { DeleteLinesAction } from '../../../linesOperations/browser/linesOperations.js';\n\nsuite('SuggestController', function () {\n\n\tconst disposables = new DisposableStore();\n\n\tlet controller: SuggestController;\n\tlet editor: ITestCodeEditor;\n\tlet model: TextModel;\n\tconst languageFeaturesService = new LanguageFeaturesService();\n\n\tteardown(function () {\n\n\t\tdisposables.clear();\n\t});\n\n\t// ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(function () {\n\n\t\tconst serviceCollection = new ServiceCollection(\n\t\t\t[ILanguageFeaturesService, languageFeaturesService],\n\t\t\t[ITelemetryService, NullTelemetryService],\n\t\t\t[ILogService, new NullLogService()],\n\t\t\t[IStorageService, disposables.add(new InMemoryStorageService())],\n\t\t\t[IKeybindingService, new MockKeybindingService()],\n\t\t\t[IEditorWorkerService, new class extends mock<IEditorWorkerService>() {\n\t\t\t\toverride computeWordRanges() {\n\t\t\t\t\treturn Promise.resolve({});\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[ISuggestMemoryService, new class extends mock<ISuggestMemoryService>() {\n\t\t\t\toverride memorize(): void { }\n\t\t\t\toverride select(): number { return 0; }\n\t\t\t}],\n\t\t\t[IMenuService, new class extends mock<IMenuService>() {\n\t\t\t\toverride createMenu() {\n\t\t\t\t\treturn new class extends mock<IMenu>() {\n\t\t\t\t\t\toverride onDidChange = Event.None;\n\t\t\t\t\t\toverride dispose() { }\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[ILabelService, new class extends mock<ILabelService>() { }],\n\t\t\t[IWorkspaceContextService, new class extends mock<IWorkspaceContextService>() { }],\n\t\t\t[IEnvironmentService, new class extends mock<IEnvironmentService>() {\n\t\t\t\toverride isBuilt: boolean = true;\n\t\t\t\toverride isExtensionDevelopment: boolean = false;\n\t\t\t}],\n\t\t);\n\n\t\tmodel = disposables.add(createTextModel('', undefined, undefined, URI.from({ scheme: 'test-ctrl', path: '/path.tst' })));\n\t\teditor = disposables.add(createTestCodeEditor(model, { serviceCollection }));\n\n\t\teditor.registerAndInstantiateContribution(SnippetController2.ID, SnippetController2);\n\t\tcontroller = editor.registerAndInstantiateContribution(SuggestController.ID, SuggestController);\n\t});\n\n\ttest('postfix completion reports incorrect position #86984', async function () {\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'let ${1:name} = foo$0',\n\t\t\t\t\t\tinsertTextRules: CompletionItemInsertTextRule.InsertAsSnippet,\n\t\t\t\t\t\trange: { startLineNumber: 1, startColumn: 9, endLineNumber: 1, endColumn: 11 },\n\t\t\t\t\t\tadditionalTextEdits: [{\n\t\t\t\t\t\t\ttext: '',\n\t\t\t\t\t\t\trange: { startLineNumber: 1, startColumn: 5, endLineNumber: 1, endColumn: 9 }\n\t\t\t\t\t\t}]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('    foo.le');\n\t\teditor.setSelection(new Selection(1, 11, 1, 11));\n\n\t\t// trigger\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tconst p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\tassert.strictEqual(editor.getValue(), '    let name = foo');\n\t});\n\n\ttest('use additionalTextEdits sync when possible', async function () {\n\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos),\n\t\t\t\t\t\tadditionalTextEdits: [{\n\t\t\t\t\t\t\ttext: 'I came sync',\n\t\t\t\t\t\t\trange: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }\n\t\t\t\t\t\t}]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('hello\\nhallo');\n\t\teditor.setSelection(new Selection(2, 6, 2, 6));\n\n\t\t// trigger\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tconst p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'I came synchello\\nhallohello');\n\t});\n\n\ttest('resolve additionalTextEdits async when needed', async function () {\n\n\t\tlet resolveCallCount = 0;\n\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tresolveCallCount += 1;\n\t\t\t\tawait timeout(10);\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'I came late',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('hello\\nhallo');\n\t\teditor.setSelection(new Selection(2, 6, 2, 6));\n\n\t\t// trigger\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tconst p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallohello');\n\t\tassert.strictEqual(resolveCallCount, 1);\n\n\t\t// additional edits happened after a litte wait\n\t\tawait timeout(20);\n\t\tassert.strictEqual(editor.getValue(), 'I came latehello\\nhallohello');\n\n\t\t// single undo stop\n\t\teditor.getModel()?.undo();\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallo');\n\t});\n\n\ttest('resolve additionalTextEdits async when needed (typing)', async function () {\n\n\t\tlet resolveCallCount = 0;\n\t\tlet resolve: Function = () => { };\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tresolveCallCount += 1;\n\t\t\t\tawait new Promise(_resolve => resolve = _resolve);\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'I came late',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('hello\\nhallo');\n\t\teditor.setSelection(new Selection(2, 6, 2, 6));\n\n\t\t// trigger\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tconst p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallohello');\n\t\tassert.strictEqual(resolveCallCount, 1);\n\n\t\t// additional edits happened after a litte wait\n\t\tassert.ok(editor.getSelection()?.equalsSelection(new Selection(2, 11, 2, 11)));\n\t\teditor.trigger('test', 'type', { text: 'TYPING' });\n\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallohelloTYPING');\n\n\t\tresolve();\n\t\tawait timeout(10);\n\t\tassert.strictEqual(editor.getValue(), 'I came latehello\\nhallohelloTYPING');\n\t\tassert.ok(editor.getSelection()?.equalsSelection(new Selection(2, 17, 2, 17)));\n\t});\n\n\t// additional edit come late and are AFTER the selection -> cancel\n\ttest('resolve additionalTextEdits async when needed (simple conflict)', async function () {\n\n\t\tlet resolveCallCount = 0;\n\t\tlet resolve: Function = () => { };\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tresolveCallCount += 1;\n\t\t\t\tawait new Promise(_resolve => resolve = _resolve);\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'I came late',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 6, endLineNumber: 1, endColumn: 6 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\n\t\t// trigger\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tconst p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'hello');\n\t\tassert.strictEqual(resolveCallCount, 1);\n\n\t\tresolve();\n\t\tawait timeout(10);\n\t\tassert.strictEqual(editor.getValue(), 'hello');\n\t});\n\n\t// additional edit come late and are AFTER the position at which the user typed -> cancelled\n\ttest('resolve additionalTextEdits async when needed (conflict)', async function () {\n\n\t\tlet resolveCallCount = 0;\n\t\tlet resolve: Function = () => { };\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tresolveCallCount += 1;\n\t\t\t\tawait new Promise(_resolve => resolve = _resolve);\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'I came late',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 2, endLineNumber: 1, endColumn: 2 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('hello\\nhallo');\n\t\teditor.setSelection(new Selection(2, 6, 2, 6));\n\n\t\t// trigger\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tconst p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallohello');\n\t\tassert.strictEqual(resolveCallCount, 1);\n\n\t\t// additional edits happened after a litte wait\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\teditor.trigger('test', 'type', { text: 'TYPING' });\n\n\t\tassert.strictEqual(editor.getValue(), 'TYPINGhello\\nhallohello');\n\n\t\tresolve();\n\t\tawait timeout(10);\n\t\tassert.strictEqual(editor.getValue(), 'TYPINGhello\\nhallohello');\n\t\tassert.ok(editor.getSelection()?.equalsSelection(new Selection(1, 7, 1, 7)));\n\t});\n\n\ttest('resolve additionalTextEdits async when needed (cancel)', async function () {\n\n\t\tconst resolve: Function[] = [];\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}, {\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hallo',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tawait new Promise(_resolve => resolve.push(_resolve));\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'additionalTextEdits',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 2, endLineNumber: 1, endColumn: 2 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('abc');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\n\t\t// trigger\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tconst p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(true, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'helloabc');\n\n\t\t// next\n\t\tcontroller.acceptNextSuggestion();\n\n\t\t// resolve additional edits (MUST be cancelled)\n\t\tresolve.forEach(fn => fn);\n\t\tresolve.length = 0;\n\t\tawait timeout(10);\n\n\t\t// next suggestion used\n\t\tassert.strictEqual(editor.getValue(), 'halloabc');\n\t});\n\n\ttest('Completion edits are applied inconsistently when additionalTextEdits and textEdit start at the same offset #143888', async function () {\n\n\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'MyClassName',\n\t\t\t\t\t\tinsertText: 'MyClassName',\n\t\t\t\t\t\trange: Range.fromPositions(pos),\n\t\t\t\t\t\tadditionalTextEdits: [{\n\t\t\t\t\t\t\trange: Range.fromPositions(pos),\n\t\t\t\t\t\t\ttext: 'import \"my_class.txt\";\\n'\n\t\t\t\t\t\t}]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\n\t\t// trigger\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tconst p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(true, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'import \"my_class.txt\";\\nMyClassName');\n\n\t});\n\n\ttest('Pressing enter on autocomplete should always apply the selected dropdown completion, not a different, hidden one #161883', async function () {\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\n\t\t\t\tconst word = doc.getWordUntilPosition(pos);\n\t\t\t\tconst range = new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn);\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'filterBankSize',\n\t\t\t\t\t\tinsertText: 'filterBankSize',\n\t\t\t\t\t\tsortText: 'a',\n\t\t\t\t\t\trange\n\t\t\t\t\t}, {\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'filter',\n\t\t\t\t\t\tinsertText: 'filter',\n\t\t\t\t\t\tsortText: 'b',\n\t\t\t\t\t\trange\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('filte');\n\t\teditor.setSelection(new Selection(1, 6, 1, 6));\n\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\n\t\tconst { completionModel } = await p1;\n\t\tassert.strictEqual(completionModel.items.length, 2);\n\n\t\tconst [first, second] = completionModel.items;\n\t\tassert.strictEqual(first.textLabel, 'filterBankSize');\n\t\tassert.strictEqual(second.textLabel, 'filter');\n\n\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 6, 1, 6));\n\t\teditor.trigger('keyboard', 'type', { text: 'r' }); // now filter \"overtakes\" filterBankSize because it is fully matched\n\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 7, 1, 7));\n\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tassert.strictEqual(editor.getValue(), 'filter');\n\t});\n\n\ttest('Fast autocomple typing selects the previous autocomplete suggestion, #71795', async function () {\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\n\t\t\t\tconst word = doc.getWordUntilPosition(pos);\n\t\t\t\tconst range = new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn);\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'false',\n\t\t\t\t\t\tinsertText: 'false',\n\t\t\t\t\t\trange\n\t\t\t\t\t}, {\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'float',\n\t\t\t\t\t\tinsertText: 'float',\n\t\t\t\t\t\trange\n\t\t\t\t\t}, {\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'for',\n\t\t\t\t\t\tinsertText: 'for',\n\t\t\t\t\t\trange\n\t\t\t\t\t}, {\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'foreach',\n\t\t\t\t\t\tinsertText: 'foreach',\n\t\t\t\t\t\trange\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('f');\n\t\teditor.setSelection(new Selection(1, 2, 1, 2));\n\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\n\t\tconst { completionModel } = await p1;\n\t\tassert.strictEqual(completionModel.items.length, 4);\n\n\t\tconst [first, second, third, fourth] = completionModel.items;\n\t\tassert.strictEqual(first.textLabel, 'false');\n\t\tassert.strictEqual(second.textLabel, 'float');\n\t\tassert.strictEqual(third.textLabel, 'for');\n\t\tassert.strictEqual(fourth.textLabel, 'foreach');\n\n\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 2, 1, 2));\n\t\teditor.trigger('keyboard', 'type', { text: 'o' }); // filters`false` and `float`\n\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 3, 1, 3));\n\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tassert.strictEqual(editor.getValue(), 'for');\n\t});\n\n\ttest.skip('Suggest widget gets orphaned in editor #187779', async function () {\n\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\n\t\t\t\tconst word = doc.getLineContent(pos.lineNumber);\n\t\t\t\tconst range = new Range(pos.lineNumber, 1, pos.lineNumber, pos.column);\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: word,\n\t\t\t\t\t\tinsertText: word,\n\t\t\t\t\t\trange\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue(`console.log(example.)\\nconsole.log(EXAMPLE.not)`);\n\t\teditor.setSelection(new Selection(1, 21, 1, 21));\n\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\n\t\tawait p1;\n\n\t\tconst p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tnew DeleteLinesAction().run(null!, editor);\n\n\t\tawait p2;\n\t});\n\n\ttest('Ranges where additionalTextEdits are applied are not appropriate when characters are typed #177591', async function () {\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'aaa',\n\t\t\t\t\t\tinsertText: 'aaa',\n\t\t\t\t\t\trange: Range.fromPositions(pos),\n\t\t\t\t\t\tadditionalTextEdits: [{\n\t\t\t\t\t\t\trange: Range.fromPositions(pos.delta(0, 10)),\n\t\t\t\t\t\t\ttext: 'aaa'\n\t\t\t\t\t\t}]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\t{ // PART1 - no typing\n\t\t\teditor.setValue(`123456789123456789`);\n\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\t\tcontroller.triggerSuggest();\n\n\t\t\tconst e = await p1;\n\t\t\tassert.strictEqual(e.completionModel.items.length, 1);\n\t\t\tassert.strictEqual(e.completionModel.items[0].textLabel, 'aaa');\n\n\t\t\tcontroller.acceptSelectedSuggestion(false, false);\n\n\t\t\tassert.strictEqual(editor.getValue(), 'aaa1234567891aaa23456789');\n\t\t}\n\n\t\t{ // PART2 - typing\n\t\t\teditor.setValue(`123456789123456789`);\n\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\t\tcontroller.triggerSuggest();\n\n\t\t\tconst e = await p1;\n\t\t\tassert.strictEqual(e.completionModel.items.length, 1);\n\t\t\tassert.strictEqual(e.completionModel.items[0].textLabel, 'aaa');\n\n\t\t\teditor.trigger('keyboard', 'type', { text: 'aa' });\n\n\t\t\tcontroller.acceptSelectedSuggestion(false, false);\n\n\t\t\tassert.strictEqual(editor.getValue(), 'aaa1234567891aaa23456789');\n\t\t}\n\t});\n\n\ttest.skip('[Bug] \"No suggestions\" persists while typing if the completion helper is set to return an empty list for empty content#3557', async function () {\n\t\tlet requestCount = 0;\n\n\t\tdisposables.add(languageFeaturesService.completionProvider.register({ scheme: 'test-ctrl' }, {\n\t\t\t_debugDisplayName: 'test',\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\trequestCount += 1;\n\n\t\t\t\tif (requestCount === 1) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tlabel: 'foo',\n\t\t\t\t\t\tinsertText: 'foo',\n\t\t\t\t\t\trange: new Range(pos.lineNumber, 1, pos.lineNumber, pos.column)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tconst p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\n\t\tconst e1 = await p1;\n\t\tassert.strictEqual(e1.completionModel.items.length, 0);\n\t\tassert.strictEqual(requestCount, 1);\n\n\t\tconst p2 = Event.toPromise(controller.model.onDidSuggest);\n\t\teditor.trigger('keyboard', 'type', { text: 'f' });\n\n\t\tconst e2 = await p2;\n\t\tassert.strictEqual(e2.completionModel.items.length, 1);\n\t\tassert.strictEqual(requestCount, 2);\n\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
