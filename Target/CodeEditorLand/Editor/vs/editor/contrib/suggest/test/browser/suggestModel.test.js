var F=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var I=(f,y,m,s)=>{for(var u=s>1?void 0:s?v(y,m):y,h=f.length-1,a;h>=0;h--)(a=f[h])&&(u=(s?a(y,m,u):a(u))||u);return s&&u&&F(y,m,u),u},S=(f,y)=>(m,s)=>y(m,s,f);import r from"assert";import"../../../../../base/common/event.js";import{Disposable as D,DisposableStore as w,toDisposable as z}from"../../../../../base/common/lifecycle.js";import{URI as K}from"../../../../../base/common/uri.js";import{mock as M}from"../../../../../base/test/common/mock.js";import{CoreEditingCommands as U}from"../../../../browser/coreCommands.js";import{EditOperation as W}from"../../../../common/core/editOperation.js";import"../../../../common/core/position.js";import{Range as b}from"../../../../common/core/range.js";import{Selection as q}from"../../../../common/core/selection.js";import{Handler as c}from"../../../../common/editorCommon.js";import"../../../../common/model.js";import"../../../../common/model/textModel.js";import{CompletionItemKind as d,CompletionTriggerKind as C,EncodedTokenizationResult as R,TokenizationRegistry as G}from"../../../../common/languages.js";import{MetadataConsts as B}from"../../../../common/encodedTokenAttributes.js";import{ILanguageConfigurationService as k}from"../../../../common/languages/languageConfigurationRegistry.js";import{NullState as Z}from"../../../../common/languages/nullTokenize.js";import{ILanguageService as N}from"../../../../common/languages/language.js";import{SnippetController2 as T}from"../../../snippet/browser/snippetController2.js";import{SuggestController as H}from"../../browser/suggestController.js";import{ISuggestMemoryService as J}from"../../browser/suggestMemory.js";import{LineContext as Q,SuggestModel as X}from"../../browser/suggestModel.js";import"../../browser/suggestWidget.js";import{createTestCodeEditor as Y}from"../../../../test/browser/testCodeEditor.js";import{createModelServices as $,createTextModel as P,instantiateTextModel as j}from"../../../../test/common/testTextModel.js";import{ServiceCollection as ee}from"../../../../../platform/instantiation/common/serviceCollection.js";import{IKeybindingService as te}from"../../../../../platform/keybinding/common/keybinding.js";import{MockKeybindingService as re}from"../../../../../platform/keybinding/test/common/mockKeybindingService.js";import{ILabelService as ie}from"../../../../../platform/label/common/label.js";import{InMemoryStorageService as oe,IStorageService as se}from"../../../../../platform/storage/common/storage.js";import{ITelemetryService as ne}from"../../../../../platform/telemetry/common/telemetry.js";import{NullTelemetryService as ae}from"../../../../../platform/telemetry/common/telemetryUtils.js";import{IWorkspaceContextService as le}from"../../../../../platform/workspace/common/workspace.js";import{LanguageFeaturesService as L}from"../../../../common/services/languageFeaturesService.js";import{ILanguageFeaturesService as ge}from"../../../../common/services/languageFeatures.js";import{IInstantiationService as ue}from"../../../../../platform/instantiation/common/instantiation.js";import{getSnippetSuggestSupport as ce,setSnippetSuggestSupport as O}from"../../browser/suggest.js";import{IEnvironmentService as me}from"../../../../../platform/environment/common/environment.js";import{ensureNoDisposablesAreLeakedInTestSuite as _}from"../../../../../base/test/common/utils.js";function A(f,y){const m=new oe,s=Y(f,{serviceCollection:new ee([ge,y],[ne,ae],[se,m],[te,new re],[J,new class{memorize(){}select(){return-1}}],[ie,new class extends M(){}],[le,new class extends M(){}],[me,new class extends M(){isBuilt=!0;isExtensionDevelopment=!1}])}),u=s.registerAndInstantiateContribution(T.ID,T);return s.hasWidgetFocus=()=>!0,s.registerDisposable(u),s.registerDisposable(m),s}suite("SuggestModel - Context",function(){const f="outerMode",y="innerMode";let m=class extends D{languageId=f;constructor(g,n){super(),this._register(g.registerLanguage({id:this.languageId})),this._register(n.register(this.languageId,{})),this._register(G.register(this.languageId,{getInitialState:()=>Z,tokenize:void 0,tokenizeEncoded:(i,e,t)=>{const o=[];let l;for(let E=0;E<i.length;E++){const x=i.charAt(E)==="x"?y:f,V=g.languageIdCodec.encodeLanguageId(x);l!==x&&(o.push(E),o.push(V<<B.LANGUAGEID_OFFSET)),l=x}const p=new Uint32Array(o.length);for(let E=0;E<p.length;E++)p[E]=o[E];return new R(p,t)}}))}};m=I([S(0,N),S(1,k)],m);let s=class extends D{languageId=y;constructor(g,n){super(),this._register(g.registerLanguage({id:this.languageId})),this._register(n.register(this.languageId,{}))}};s=I([S(0,N),S(1,k)],s);const u=(a,g,n,i)=>{const e=a.getPositionAt(g),t=A(a,new L);t.setPosition(e),r.strictEqual(Q.shouldAutoTrigger(t),n,i),t.dispose()};let h;setup(()=>{h=new w}),teardown(function(){h.dispose()}),_(),test("Context - shouldAutoTrigger",function(){const a=P(`Das Pferd frisst keinen Gurkensalat - Philipp Reis 1861.
Wer hat's erfunden?`);h.add(a),u(a,3,!0,"end of word, Das|"),u(a,4,!1,"no word Das |"),u(a,1,!0,"typing a single character before a word: D|as"),u(a,55,!1,"number, 1861|"),a.dispose()}),test("shouldAutoTrigger at embedded language boundaries",()=>{const a=new w,g=$(a),n=a.add(g.createInstance(m));a.add(g.createInstance(s));const i=a.add(j(g,"a<xx>a<x>",n.languageId));u(i,1,!0,"a|<x \u2014 should trigger at end of word"),u(i,2,!1,"a<|x \u2014 should NOT trigger at start of word"),u(i,3,!0,"a<x|x \u2014  should trigger after typing a single character before a word"),u(i,4,!0,"a<xx|> \u2014 should trigger at boundary between languages"),u(i,5,!1,"a<xx>|a \u2014 should NOT trigger at start of word"),u(i,6,!0,"a<xx>a|< \u2014 should trigger at end of word"),u(i,8,!0,"a<xx>a<x|> \u2014 should trigger at end of word at boundary"),a.dispose()})}),suite("SuggestModel - TriggerAndCancelOracle",function(){function f(i,e){const t=i.getWordUntilPosition(e);return new b(e.lineNumber,t.startColumn,e.lineNumber,t.endColumn)}const y={_debugDisplayName:"test",provideCompletionItems(i,e){return{incomplete:!1,suggestions:[]}}},m={_debugDisplayName:"test",provideCompletionItems(i,e){return{incomplete:!1,suggestions:[{label:i.getWordUntilPosition(e).word,kind:d.Property,insertText:"foofoo",range:f(i,e)}]}}};let s,u;const h=new L,a=h.completionProvider;setup(function(){s=new w,u=P("abc def",void 0,void 0,K.parse("test:somefile.ttt")),s.add(u)}),teardown(()=>{s.dispose()}),_();function g(i){return new Promise((e,t)=>{const o=A(u,h),l=o.invokeWithinContext(p=>p.get(ue).createInstance(X,o));s.add(l),s.add(o);try{e(i(l,o))}catch(p){t(p)}})}function n(i,e,t){return new Promise((o,l)=>{const p=i(E=>{p.dispose();try{o(t(E))}catch(x){l(x)}});try{e()}catch(E){p.dispose(),l(E)}})}test("events - cancel/trigger",function(){return g(i=>Promise.all([n(i.onDidTrigger,function(){i.trigger({auto:!0})},function(e){return r.strictEqual(e.auto,!0),n(i.onDidCancel,function(){i.cancel()},function(t){r.strictEqual(t.retrigger,!1)})}),n(i.onDidTrigger,function(){i.trigger({auto:!0})},function(e){r.strictEqual(e.auto,!0)}),n(i.onDidTrigger,function(){i.trigger({auto:!1})},function(e){r.strictEqual(e.auto,!1)})]))}),test("events - suggest/empty",function(){return s.add(a.register({scheme:"test"},y)),g(i=>Promise.all([n(i.onDidCancel,function(){i.trigger({auto:!0})},function(e){r.strictEqual(e.retrigger,!1)}),n(i.onDidSuggest,function(){i.trigger({auto:!1})},function(e){r.strictEqual(e.triggerOptions.auto,!1),r.strictEqual(e.isFrozen,!1),r.strictEqual(e.completionModel.items.length,0)})]))}),test("trigger - on type",function(){return s.add(a.register({scheme:"test"},m)),g((i,e)=>n(i.onDidSuggest,()=>{e.setPosition({lineNumber:1,column:4}),e.trigger("keyboard",c.Type,{text:"d"})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,1);const[o]=t.completionModel.items;r.strictEqual(o.provider,m)}))}),test("#17400: Keep filtering suggestModel.ts after space",function(){return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(i,e){return{incomplete:!1,suggestions:[{label:"My Table",kind:d.Property,insertText:"My Table",range:f(i,e)}]}}})),u.setValue(""),g((i,e)=>n(i.onDidSuggest,()=>{i.trigger({auto:!0})},t=>n(i.onDidSuggest,()=>{e.setPosition({lineNumber:1,column:1}),e.trigger("keyboard",c.Type,{text:"My"})},o=>{r.strictEqual(o.triggerOptions.auto,!0),r.strictEqual(o.completionModel.items.length,1);const[l]=o.completionModel.items;return r.strictEqual(l.completion.label,"My Table"),n(i.onDidSuggest,()=>{e.setPosition({lineNumber:1,column:3}),e.trigger("keyboard",c.Type,{text:" "})},p=>{r.strictEqual(p.triggerOptions.auto,!0),r.strictEqual(p.completionModel.items.length,1);const[E]=p.completionModel.items;r.strictEqual(E.completion.label,"My Table")})})))}),test("#21484: Trigger character always force a new completion session",function(){return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(i,e){return{incomplete:!1,suggestions:[{label:"foo.bar",kind:d.Property,insertText:"foo.bar",range:b.fromPositions(e.with(void 0,1),e)}]}}})),s.add(a.register({scheme:"test"},{_debugDisplayName:"test",triggerCharacters:["."],provideCompletionItems(i,e){return{incomplete:!1,suggestions:[{label:"boom",kind:d.Property,insertText:"boom",range:b.fromPositions(e.delta(0,i.getLineContent(e.lineNumber)[e.column-2]==="."?0:-1),e)}]}}})),u.setValue(""),g(async(i,e)=>{await n(i.onDidSuggest,()=>{e.setPosition({lineNumber:1,column:1}),e.trigger("keyboard",c.Type,{text:"foo"})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,1);const[o]=t.completionModel.items;r.strictEqual(o.completion.label,"foo.bar")}),await n(i.onDidSuggest,()=>{e.trigger("keyboard",c.Type,{text:"."})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,1);const[o]=t.completionModel.items;r.strictEqual(o.completion.label,"foo.bar")}),await n(i.onDidSuggest,()=>{},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,2);const[o,l]=t.completionModel.items;r.strictEqual(o.completion.label,"foo.bar"),r.strictEqual(l.completion.label,"boom")})})}),test("Intellisense Completion doesn't respect space after equal sign (.html file), #29353 [1/2]",function(){return s.add(a.register({scheme:"test"},m)),g((i,e)=>(e.getModel().setValue("fo"),e.setPosition({lineNumber:1,column:3}),n(i.onDidSuggest,()=>{i.trigger({auto:!1})},t=>(r.strictEqual(t.triggerOptions.auto,!1),r.strictEqual(t.isFrozen,!1),r.strictEqual(t.completionModel.items.length,1),n(i.onDidCancel,()=>{e.trigger("keyboard",c.Type,{text:"+"})},o=>{r.strictEqual(o.retrigger,!1)})))))}),test("Intellisense Completion doesn't respect space after equal sign (.html file), #29353 [2/2]",function(){return s.add(a.register({scheme:"test"},m)),g((i,e)=>(e.getModel().setValue("fo"),e.setPosition({lineNumber:1,column:3}),n(i.onDidSuggest,()=>{i.trigger({auto:!1})},t=>(r.strictEqual(t.triggerOptions.auto,!1),r.strictEqual(t.isFrozen,!1),r.strictEqual(t.completionModel.items.length,1),n(i.onDidCancel,()=>{e.trigger("keyboard",c.Type,{text:" "})},o=>{r.strictEqual(o.retrigger,!1)})))))}),test("Incomplete suggestion results cause re-triggering when typing w/o further context, #28400 (1/2)",function(){return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(i,e){return{incomplete:!0,suggestions:[{label:"foo",kind:d.Property,insertText:"foo",range:b.fromPositions(e.with(void 0,1),e)}]}}})),g((i,e)=>(e.getModel().setValue("foo"),e.setPosition({lineNumber:1,column:4}),n(i.onDidSuggest,()=>{i.trigger({auto:!1})},t=>(r.strictEqual(t.triggerOptions.auto,!1),r.strictEqual(t.completionModel.getIncompleteProvider().size,1),r.strictEqual(t.completionModel.items.length,1),n(i.onDidCancel,()=>{e.trigger("keyboard",c.Type,{text:";"})},o=>{r.strictEqual(o.retrigger,!1)})))))}),test("Incomplete suggestion results cause re-triggering when typing w/o further context, #28400 (2/2)",function(){return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(i,e){return{incomplete:!0,suggestions:[{label:"foo;",kind:d.Property,insertText:"foo",range:b.fromPositions(e.with(void 0,1),e)}]}}})),g((i,e)=>(e.getModel().setValue("foo"),e.setPosition({lineNumber:1,column:4}),n(i.onDidSuggest,()=>{i.trigger({auto:!1})},t=>(r.strictEqual(t.triggerOptions.auto,!1),r.strictEqual(t.completionModel.getIncompleteProvider().size,1),r.strictEqual(t.completionModel.items.length,1),n(i.onDidSuggest,()=>{e.trigger("keyboard",c.Type,{text:";"})},o=>{r.strictEqual(o.triggerOptions.auto,!1),r.strictEqual(o.completionModel.getIncompleteProvider().size,1),r.strictEqual(o.completionModel.items.length,1)})))))}),test("Trigger character is provided in suggest context",function(){let i="";return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",triggerCharacters:["."],provideCompletionItems(e,t,o){return r.strictEqual(o.triggerKind,C.TriggerCharacter),i=o.triggerCharacter,{incomplete:!1,suggestions:[{label:"foo.bar",kind:d.Property,insertText:"foo.bar",range:b.fromPositions(t.with(void 0,1),t)}]}}})),u.setValue(""),g((e,t)=>n(e.onDidSuggest,()=>{t.setPosition({lineNumber:1,column:1}),t.trigger("keyboard",c.Type,{text:"foo."})},o=>{r.strictEqual(i,".")}))}),test("Mac press and hold accent character insertion does not update suggestions, #35269",function(){return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(i,e){return{incomplete:!0,suggestions:[{label:"abc",kind:d.Property,insertText:"abc",range:b.fromPositions(e.with(void 0,1),e)},{label:"\xE4bc",kind:d.Property,insertText:"\xE4bc",range:b.fromPositions(e.with(void 0,1),e)}]}}})),u.setValue(""),g((i,e)=>n(i.onDidSuggest,()=>{e.setPosition({lineNumber:1,column:1}),e.trigger("keyboard",c.Type,{text:"a"})},t=>(r.strictEqual(t.completionModel.items.length,1),r.strictEqual(t.completionModel.items[0].completion.label,"abc"),n(i.onDidSuggest,()=>{e.executeEdits("test",[W.replace(new b(1,1,1,2),"\xE4")])},o=>{r.strictEqual(o.completionModel.items.length,1),r.strictEqual(o.completionModel.items[0].completion.label,"\xE4bc")}))))}),test("Backspace should not always cancel code completion, #36491",function(){return s.add(a.register({scheme:"test"},m)),g(async(i,e)=>{await n(i.onDidSuggest,()=>{e.setPosition({lineNumber:1,column:4}),e.trigger("keyboard",c.Type,{text:"d"})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,1);const[o]=t.completionModel.items;r.strictEqual(o.provider,m)}),await n(i.onDidSuggest,()=>{U.DeleteLeft.runEditorCommand(null,e,null)},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,1);const[o]=t.completionModel.items;r.strictEqual(o.provider,m)})})}),test("Text changes for completion CodeAction are affected by the completion #39893",function(){return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(i,e){return{incomplete:!0,suggestions:[{label:"bar",kind:d.Property,insertText:"bar",range:b.fromPositions(e.delta(0,-2),e),additionalTextEdits:[{text:", bar",range:{startLineNumber:1,endLineNumber:1,startColumn:17,endColumn:17}}]}]}}})),u.setValue('ba; import { foo } from "./b"'),g(async(i,e)=>{class t extends H{_insertSuggestion_publicForTest(p,E=0){super._insertSuggestion(p,E)}}const o=e.registerAndInstantiateContribution(t.ID,t);e.registerAndInstantiateContribution(T.ID,T),await n(i.onDidSuggest,()=>{e.setPosition({lineNumber:1,column:3}),i.trigger({auto:!1})},l=>{r.strictEqual(l.completionModel.items.length,1);const[p]=l.completionModel.items;r.strictEqual(p.completion.label,"bar"),o._insertSuggestion_publicForTest({item:p,index:0,model:l.completionModel})}),r.strictEqual(u.getValue(),'bar; import { foo, bar } from "./b"')})}),test("Completion unexpectedly triggers on second keypress of an edit group in a snippet #43523",function(){return s.add(a.register({scheme:"test"},m)),g((i,e)=>n(i.onDidSuggest,()=>{e.setValue("d"),e.setSelection(new q(1,1,1,2)),e.trigger("keyboard",c.Type,{text:"e"})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,1);const[o]=t.completionModel.items;r.strictEqual(o.provider,m)}))}),test("Fails to render completion details #47988",function(){let i=0,e=0;return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(t,o){return{incomplete:!0,suggestions:[{kind:d.Folder,label:"CompleteNot",insertText:"Incomplete",sortText:"a",range:f(t,o)}],dispose(){i+=1}}}})),s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(t,o){return{incomplete:!1,suggestions:[{kind:d.Folder,label:"Complete",insertText:"Complete",sortText:"z",range:f(t,o)}],dispose(){e+=1}}},resolveCompletionItem(t){return t}})),g(async(t,o)=>{await n(t.onDidSuggest,()=>{o.setValue(""),o.setSelection(new q(1,1,1,1)),o.trigger("keyboard",c.Type,{text:"c"})},l=>{r.strictEqual(l.triggerOptions.auto,!0),r.strictEqual(l.completionModel.items.length,2),r.strictEqual(i,0),r.strictEqual(e,0)}),await n(t.onDidSuggest,()=>{o.trigger("keyboard",c.Type,{text:"o"})},l=>{r.strictEqual(l.triggerOptions.auto,!0),r.strictEqual(l.completionModel.items.length,2),t.clear(),r.strictEqual(i,2),r.strictEqual(e,1)})})}),test("Trigger (full) completions when (incomplete) completions are already active #99504",function(){let i=0,e=0;return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(t,o){return i+=1,{incomplete:!1,suggestions:[{kind:d.Class,label:"Z aaa",insertText:"Z aaa",range:new b(1,1,o.lineNumber,o.column)}]}}})),s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(t,o){if(e+=1,!!t.getWordUntilPosition(o).word.startsWith("a"))return{incomplete:!1,suggestions:[{kind:d.Folder,label:"aaa",insertText:"aaa",range:f(t,o)}]}}})),g(async(t,o)=>{await n(t.onDidSuggest,()=>{o.setValue(""),o.setSelection(new q(1,1,1,1)),o.trigger("keyboard",c.Type,{text:"Z"})},l=>{r.strictEqual(l.triggerOptions.auto,!0),r.strictEqual(l.completionModel.items.length,1),r.strictEqual(l.completionModel.items[0].textLabel,"Z aaa")}),await n(t.onDidSuggest,()=>{o.trigger("keyboard",c.Type,{text:" a"})},l=>{r.strictEqual(l.triggerOptions.auto,!0),r.strictEqual(l.completionModel.items.length,2),r.strictEqual(l.completionModel.items[0].textLabel,"Z aaa"),r.strictEqual(l.completionModel.items[1].textLabel,"aaa"),r.strictEqual(i,1),r.strictEqual(e,2)})})}),test("registerCompletionItemProvider with letters as trigger characters block other completion items to show up #127815",async function(){return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(i,e){return{suggestions:[{kind:d.Class,label:"AAAA",insertText:"WordTriggerA",range:new b(e.lineNumber,e.column,e.lineNumber,e.column)}]}}})),s.add(a.register({scheme:"test"},{_debugDisplayName:"test",triggerCharacters:["a","."],provideCompletionItems(i,e){return{suggestions:[{kind:d.Class,label:"AAAA",insertText:"AutoTriggerA",range:new b(e.lineNumber,e.column,e.lineNumber,e.column)}]}}})),g(async(i,e)=>{await n(i.onDidSuggest,()=>{e.setValue(""),e.setSelection(new q(1,1,1,1)),e.trigger("keyboard",c.Type,{text:"."})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,1)}),e.getModel().setValue(""),await n(i.onDidSuggest,()=>{e.setValue(""),e.setSelection(new q(1,1,1,1)),e.trigger("keyboard",c.Type,{text:"a"})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,2)})})}),test("Unexpected suggest scoring #167242",async function(){return s.add(a.register("*",{_debugDisplayName:"test",provideCompletionItems(i,e){const t=i.getWordUntilPosition(e);return{suggestions:[{kind:d.Text,label:"pull",insertText:"pull",range:new b(e.lineNumber,t.startColumn,e.lineNumber,t.endColumn)}]}}})),s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(i,e){return{suggestions:[{kind:d.Class,label:"git.pull",insertText:"git.pull",range:new b(e.lineNumber,1,e.lineNumber,e.column)}]}}})),g(async function(i,e){await n(i.onDidSuggest,()=>{e.setValue("gi"),e.setSelection(new q(1,3,1,3)),e.trigger("keyboard",c.Type,{text:"t"})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,1),r.strictEqual(t.completionModel.items[0].textLabel,"git.pull")}),e.trigger("keyboard",c.Type,{text:"."}),await n(i.onDidSuggest,()=>{e.trigger("keyboard",c.Type,{text:"p"})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.completionModel.items.length,1),r.strictEqual(t.completionModel.items[0].textLabel,"git.pull")})})}),test("Completion list closes unexpectedly when typing a digit after a word separator #169390",function(){const i=[0,0];return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",provideCompletionItems(e,t){return i[0]+=1,{suggestions:[{kind:d.Text,label:"foo-20",insertText:"foo-20",range:new b(t.lineNumber,1,t.lineNumber,t.column)},{kind:d.Text,label:"foo-hello",insertText:"foo-hello",range:new b(t.lineNumber,1,t.lineNumber,t.column)}]}}})),s.add(a.register({scheme:"test"},{_debugDisplayName:"test",triggerCharacters:["2"],provideCompletionItems(e,t,o){if(i[1]+=1,o.triggerKind===C.TriggerCharacter)return{suggestions:[{kind:d.Class,label:"foo-210",insertText:"foo-210",range:new b(t.lineNumber,1,t.lineNumber,t.column)}]}}})),g(async function(e,t){await n(e.onDidSuggest,()=>{t.setValue("foo"),t.setSelection(new q(1,4,1,4)),e.trigger({auto:!1})},o=>{r.strictEqual(o.triggerOptions.auto,!1),r.strictEqual(o.completionModel.items.length,2),r.strictEqual(o.completionModel.items[0].textLabel,"foo-20"),r.strictEqual(o.completionModel.items[1].textLabel,"foo-hello")}),t.trigger("keyboard",c.Type,{text:"-"}),await n(e.onDidSuggest,()=>{t.trigger("keyboard",c.Type,{text:"2"})},o=>{r.strictEqual(o.triggerOptions.auto,!0),r.strictEqual(o.completionModel.items.length,2),r.strictEqual(o.completionModel.items[0].textLabel,"foo-20"),r.strictEqual(o.completionModel.items[1].textLabel,"foo-210"),r.deepStrictEqual(i,[1,2])})})}),test("Set refilter-flag, keep triggerKind",function(){return s.add(a.register({scheme:"test"},{_debugDisplayName:"test",triggerCharacters:["."],provideCompletionItems(i,e,t){return{suggestions:[{label:i.getWordUntilPosition(e).word||"hello",kind:d.Property,insertText:"foofoo",range:f(i,e)}]}}})),g(async function(i,e){await n(i.onDidSuggest,()=>{e.setValue("foo"),e.setSelection(new q(1,4,1,4)),e.trigger("keyboard",c.Type,{text:"o"})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.triggerOptions.triggerCharacter,void 0),r.strictEqual(t.triggerOptions.triggerKind,void 0),r.strictEqual(t.completionModel.items.length,1)}),await n(i.onDidSuggest,()=>{e.trigger("keyboard",c.Type,{text:"."})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.triggerOptions.refilter,void 0),r.strictEqual(t.triggerOptions.triggerCharacter,"."),r.strictEqual(t.triggerOptions.triggerKind,C.TriggerCharacter),r.strictEqual(t.completionModel.items.length,1)}),await n(i.onDidSuggest,()=>{e.trigger("keyboard",c.Type,{text:"h"})},t=>{r.strictEqual(t.triggerOptions.auto,!0),r.strictEqual(t.triggerOptions.refilter,!0),r.strictEqual(t.triggerOptions.triggerCharacter,"."),r.strictEqual(t.triggerOptions.triggerKind,C.TriggerCharacter),r.strictEqual(t.completionModel.items.length,1)})})}),test("Snippets gone from IntelliSense #173244",function(){const i={_debugDisplayName:"test",provideCompletionItems(t,o,l){return{suggestions:[{label:"log",kind:d.Snippet,insertText:"log",range:f(t,o)}]}}},e=O(i);return s.add(z(()=>{ce()===i&&O(e)})),s.add(a.register({scheme:"test"},{_debugDisplayName:"test",triggerCharacters:["."],provideCompletionItems(t,o,l){return{suggestions:[{label:"locals",kind:d.Property,insertText:"locals",range:f(t,o)}],incomplete:!0}}})),g(async function(t,o){await n(t.onDidSuggest,()=>{o.setValue(""),o.setSelection(new q(1,1,1,1)),o.trigger("keyboard",c.Type,{text:"l"})},l=>{r.strictEqual(l.triggerOptions.auto,!0),r.strictEqual(l.triggerOptions.triggerCharacter,void 0),r.strictEqual(l.triggerOptions.triggerKind,void 0),r.strictEqual(l.completionModel.items.length,2),r.strictEqual(l.completionModel.items[0].textLabel,"locals"),r.strictEqual(l.completionModel.items[1].textLabel,"log")}),await n(t.onDidSuggest,()=>{o.trigger("keyboard",c.Type,{text:"o"})},l=>{r.strictEqual(l.triggerOptions.triggerKind,C.TriggerForIncompleteCompletions),r.strictEqual(l.triggerOptions.auto,!0),r.strictEqual(l.completionModel.items.length,2),r.strictEqual(l.completionModel.items[0].textLabel,"locals"),r.strictEqual(l.completionModel.items[1].textLabel,"log")})})})});
