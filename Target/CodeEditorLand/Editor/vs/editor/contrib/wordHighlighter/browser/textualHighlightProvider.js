var f=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var g=(s,e,o,r)=>{for(var t=r>1?void 0:r?P(e,o):e,i=s.length-1,n;i>=0;i--)(n=s[i])&&(t=(r?n(e,o,t):n(t))||t);return r&&t&&f(e,o,t),t},u=(s,e)=>(o,r)=>e(o,r,s);import{Disposable as v}from"../../../../base/common/lifecycle.js";import{ResourceMap as D}from"../../../../base/common/map.js";import{USUAL_WORD_SEPARATORS as a}from"../../../common/core/wordHelper.js";import{DocumentHighlightKind as h}from"../../../common/languages.js";import{ILanguageFeaturesService as H}from"../../../common/services/languageFeatures.js";class d{selector={language:"*"};provideDocumentHighlights(e,o,r){const t=[],i=e.getWordAtPosition({lineNumber:o.lineNumber,column:o.column});return i?e.isDisposed()?void 0:e.findMatches(i.word,!0,!1,!0,a,!1).map(m=>({range:m.range,kind:h.Text})):Promise.resolve(t)}provideMultiDocumentHighlights(e,o,r,t){const i=new D,n=e.getWordAtPosition({lineNumber:o.lineNumber,column:o.column});if(!n)return Promise.resolve(i);for(const m of[e,...r]){if(m.isDisposed())continue;const c=m.findMatches(n.word,!0,!1,!0,a,!1).map(p=>({range:p.range,kind:h.Text}));c&&i.set(m.uri,c)}return i}}let l=class extends v{constructor(e){super(),this._register(e.documentHighlightProvider.register("*",new d)),this._register(e.multiDocumentHighlightProvider.register("*",new d))}};l=g([u(0,H)],l);export{l as TextualMultiDocumentHighlightFeature};
