{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/wordHighlighter/browser/wordHighlighter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { CancelablePromise, createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { matchesScheme, Schemas } from '../../../../base/common/network.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IActiveCodeEditor, ICodeEditor, isDiffEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorContributionInstantiation, IActionOptions, registerEditorAction, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IWordAtPosition } from '../../../common/core/wordHelper.js';\nimport { CursorChangeReason, ICursorPositionChangedEvent } from '../../../common/cursorEvents.js';\nimport { IDiffEditor, IEditorContribution, IEditorDecorationsCollection } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport { DocumentHighlight, DocumentHighlightProvider, MultiDocumentHighlightProvider } from '../../../common/languages.js';\nimport { score } from '../../../common/languageSelector.js';\nimport { IModelDeltaDecoration, ITextModel, shouldSynchronizeModel } from '../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHighlightDecorationOptions } from './highlightDecorations.js';\nimport { TextualMultiDocumentHighlightFeature } from './textualHighlightProvider.js';\n\nconst ctxHasWordHighlights = new RawContextKey<boolean>('hasWordHighlights', false);\n\nexport function getOccurrencesAtPosition(registry: LanguageFeatureRegistry<DocumentHighlightProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<ResourceMap<DocumentHighlight[]> | null | undefined> {\n\tconst orderedByScore = registry.ordered(model);\n\n\t// in order of score ask the occurrences provider\n\t// until someone response with a good result\n\t// (good = non undefined and non null value)\n\t// (result of size == 0 is valid, no highlights is a valid/expected result -- not a signal to fall back to other providers)\n\treturn first<DocumentHighlight[] | null | undefined>(orderedByScore.map(provider => () => {\n\t\treturn Promise.resolve(provider.provideDocumentHighlights(model, position, token))\n\t\t\t.then(undefined, onUnexpectedExternalError);\n\t}), (result): result is DocumentHighlight[] => result !== undefined && result !== null).then(result => {\n\t\tif (result) {\n\t\t\tconst map = new ResourceMap<DocumentHighlight[]>();\n\t\t\tmap.set(model.uri, result);\n\t\t\treturn map;\n\t\t}\n\t\treturn new ResourceMap<DocumentHighlight[]>();\n\t});\n}\n\nexport function getOccurrencesAcrossMultipleModels(registry: LanguageFeatureRegistry<MultiDocumentHighlightProvider>, model: ITextModel, position: Position, token: CancellationToken, otherModels: ITextModel[]): Promise<ResourceMap<DocumentHighlight[]> | null | undefined> {\n\tconst orderedByScore = registry.ordered(model);\n\n\t// in order of score ask the occurrences provider\n\t// until someone response with a good result\n\t// (good = non undefined and non null ResourceMap)\n\t// (result of size == 0 is valid, no highlights is a valid/expected result -- not a signal to fall back to other providers)\n\treturn first<ResourceMap<DocumentHighlight[]> | null | undefined>(orderedByScore.map(provider => () => {\n\t\tconst filteredModels = otherModels.filter(otherModel => {\n\t\t\treturn shouldSynchronizeModel(otherModel);\n\t\t}).filter(otherModel => {\n\t\t\treturn score(provider.selector, otherModel.uri, otherModel.getLanguageId(), true, undefined, undefined) > 0;\n\t\t});\n\t\treturn Promise.resolve(provider.provideMultiDocumentHighlights(model, position, filteredModels, token))\n\t\t\t.then(undefined, onUnexpectedExternalError);\n\t}), (result): result is ResourceMap<DocumentHighlight[]> => result !== undefined && result !== null);\n}\n\ninterface IOccurenceAtPositionRequest {\n\treadonly result: Promise<ResourceMap<DocumentHighlight[]>>;\n\tisValid(model: ITextModel, selection: Selection, decorations: IEditorDecorationsCollection): boolean;\n\tcancel(): void;\n}\n\ninterface IWordHighlighterQuery {\n\tmodelInfo: {\n\t\tmodelURI: URI;\n\t\tselection: Selection;\n\t} | null;\n}\n\nabstract class OccurenceAtPositionRequest implements IOccurenceAtPositionRequest {\n\n\tprivate readonly _wordRange: Range | null;\n\tprivate _result: CancelablePromise<ResourceMap<DocumentHighlight[]>> | null;\n\n\tconstructor(private readonly _model: ITextModel, private readonly _selection: Selection, private readonly _wordSeparators: string) {\n\t\tthis._wordRange = this._getCurrentWordRange(_model, _selection);\n\t\tthis._result = null;\n\t}\n\n\tget result() {\n\t\tif (!this._result) {\n\t\t\tthis._result = createCancelablePromise(token => this._compute(this._model, this._selection, this._wordSeparators, token));\n\t\t}\n\t\treturn this._result;\n\t}\n\n\tprotected abstract _compute(model: ITextModel, selection: Selection, wordSeparators: string, token: CancellationToken): Promise<ResourceMap<DocumentHighlight[]>>;\n\n\tprivate _getCurrentWordRange(model: ITextModel, selection: Selection): Range | null {\n\t\tconst word = model.getWordAtPosition(selection.getPosition());\n\t\tif (word) {\n\t\t\treturn new Range(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(model: ITextModel, selection: Selection, decorations: IEditorDecorationsCollection): boolean {\n\n\t\tconst lineNumber = selection.startLineNumber;\n\t\tconst startColumn = selection.startColumn;\n\t\tconst endColumn = selection.endColumn;\n\t\tconst currentWordRange = this._getCurrentWordRange(model, selection);\n\n\t\tlet requestIsValid = Boolean(this._wordRange && this._wordRange.equalsRange(currentWordRange));\n\n\t\t// Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\n\t\t// (Same symbol)\n\t\tfor (let i = 0, len = decorations.length; !requestIsValid && i < len; i++) {\n\t\t\tconst range = decorations.getRange(i);\n\t\t\tif (range && range.startLineNumber === lineNumber) {\n\t\t\t\tif (range.startColumn <= startColumn && range.endColumn >= endColumn) {\n\t\t\t\t\trequestIsValid = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn requestIsValid;\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.result.cancel();\n\t}\n}\n\nclass SemanticOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\n\n\tprivate readonly _providers: LanguageFeatureRegistry<DocumentHighlightProvider>;\n\n\tconstructor(model: ITextModel, selection: Selection, wordSeparators: string, providers: LanguageFeatureRegistry<DocumentHighlightProvider>) {\n\t\tsuper(model, selection, wordSeparators);\n\t\tthis._providers = providers;\n\t}\n\n\tprotected _compute(model: ITextModel, selection: Selection, wordSeparators: string, token: CancellationToken): Promise<ResourceMap<DocumentHighlight[]>> {\n\t\treturn getOccurrencesAtPosition(this._providers, model, selection.getPosition(), token).then(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn new ResourceMap<DocumentHighlight[]>();\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t}\n}\n\nclass MultiModelOccurenceRequest extends OccurenceAtPositionRequest {\n\tprivate readonly _providers: LanguageFeatureRegistry<MultiDocumentHighlightProvider>;\n\tprivate readonly _otherModels: ITextModel[];\n\n\tconstructor(model: ITextModel, selection: Selection, wordSeparators: string, providers: LanguageFeatureRegistry<MultiDocumentHighlightProvider>, otherModels: ITextModel[]) {\n\t\tsuper(model, selection, wordSeparators);\n\t\tthis._providers = providers;\n\t\tthis._otherModels = otherModels;\n\t}\n\n\tprotected override _compute(model: ITextModel, selection: Selection, wordSeparators: string, token: CancellationToken): Promise<ResourceMap<DocumentHighlight[]>> {\n\t\treturn getOccurrencesAcrossMultipleModels(this._providers, model, selection.getPosition(), token, this._otherModels).then(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn new ResourceMap<DocumentHighlight[]>();\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t}\n}\n\n\nfunction computeOccurencesAtPosition(registry: LanguageFeatureRegistry<DocumentHighlightProvider>, model: ITextModel, selection: Selection, wordSeparators: string): IOccurenceAtPositionRequest {\n\treturn new SemanticOccurenceAtPositionRequest(model, selection, wordSeparators, registry);\n}\n\nfunction computeOccurencesMultiModel(registry: LanguageFeatureRegistry<MultiDocumentHighlightProvider>, model: ITextModel, selection: Selection, wordSeparators: string, otherModels: ITextModel[]): IOccurenceAtPositionRequest {\n\treturn new MultiModelOccurenceRequest(model, selection, wordSeparators, registry, otherModels);\n}\n\nregisterModelAndPositionCommand('_executeDocumentHighlights', async (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst map = await getOccurrencesAtPosition(languageFeaturesService.documentHighlightProvider, model, position, CancellationToken.None);\n\treturn map?.get(model.uri);\n});\n\nclass WordHighlighter {\n\n\tprivate readonly editor: IActiveCodeEditor;\n\tprivate readonly providers: LanguageFeatureRegistry<DocumentHighlightProvider>;\n\tprivate readonly multiDocumentProviders: LanguageFeatureRegistry<MultiDocumentHighlightProvider>;\n\tprivate readonly model: ITextModel;\n\tprivate readonly decorations: IEditorDecorationsCollection;\n\tprivate readonly toUnhook = new DisposableStore();\n\n\tprivate readonly textModelService: ITextModelService;\n\tprivate readonly codeEditorService: ICodeEditorService;\n\n\tprivate occurrencesHighlight: string;\n\n\tprivate workerRequestTokenId: number = 0;\n\tprivate workerRequest: IOccurenceAtPositionRequest | null;\n\tprivate workerRequestCompleted: boolean = false;\n\tprivate workerRequestValue: ResourceMap<DocumentHighlight[]> = new ResourceMap();\n\n\tprivate lastCursorPositionChangeTime: number = 0;\n\tprivate renderDecorationsTimer: any = -1;\n\n\tprivate readonly _hasWordHighlights: IContextKey<boolean>;\n\tprivate _ignorePositionChangeEvent: boolean;\n\n\tprivate readonly runDelayer: Delayer<void> = this.toUnhook.add(new Delayer<void>(25));\n\n\tprivate static storedDecorationIDs: ResourceMap<string[]> = new ResourceMap();\n\tprivate static query: IWordHighlighterQuery | null = null;\n\n\tconstructor(\n\t\teditor: IActiveCodeEditor,\n\t\tproviders: LanguageFeatureRegistry<DocumentHighlightProvider>,\n\t\tmultiProviders: LanguageFeatureRegistry<MultiDocumentHighlightProvider>,\n\t\tcontextKeyService: IContextKeyService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tthis.editor = editor;\n\t\tthis.providers = providers;\n\t\tthis.multiDocumentProviders = multiProviders;\n\n\t\tthis.codeEditorService = codeEditorService;\n\t\tthis.textModelService = textModelService;\n\n\t\tthis._hasWordHighlights = ctxHasWordHighlights.bindTo(contextKeyService);\n\t\tthis._ignorePositionChangeEvent = false;\n\t\tthis.occurrencesHighlight = this.editor.getOption(EditorOption.occurrencesHighlight);\n\t\tthis.model = this.editor.getModel();\n\n\t\tthis.toUnhook.add(editor.onDidChangeCursorPosition((e: ICursorPositionChangedEvent) => {\n\t\t\tif (this._ignorePositionChangeEvent) {\n\t\t\t\t// We are changing the position => ignore this event\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.occurrencesHighlight === 'off') {\n\t\t\t\t// Early exit if nothing needs to be done!\n\t\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.runDelayer.trigger(() => { this._onPositionChanged(e); });\n\t\t}));\n\t\tthis.toUnhook.add(editor.onDidFocusEditorText((e) => {\n\t\t\tif (this.occurrencesHighlight === 'off') {\n\t\t\t\t// Early exit if nothing needs to be done\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.workerRequest) {\n\t\t\t\tthis.runDelayer.trigger(() => { this._run(); });\n\t\t\t}\n\t\t}));\n\t\tthis.toUnhook.add(editor.onDidChangeModelContent((e) => {\n\t\t\tif (!matchesScheme(this.model.uri, 'output')) {\n\t\t\t\tthis._stopAll();\n\t\t\t}\n\t\t}));\n\t\tthis.toUnhook.add(editor.onDidChangeModel((e) => {\n\t\t\tif (!e.newModelUrl && e.oldModelUrl) {\n\t\t\t\tthis._stopSingular();\n\t\t\t} else if (WordHighlighter.query) {\n\t\t\t\tthis._run();\n\t\t\t}\n\t\t}));\n\t\tthis.toUnhook.add(editor.onDidChangeConfiguration((e) => {\n\t\t\tconst newValue = this.editor.getOption(EditorOption.occurrencesHighlight);\n\t\t\tif (this.occurrencesHighlight !== newValue) {\n\t\t\t\tthis.occurrencesHighlight = newValue;\n\t\t\t\tswitch (newValue) {\n\t\t\t\t\tcase 'off':\n\t\t\t\t\t\tthis._stopAll();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'singleFile':\n\t\t\t\t\t\tthis._stopAll(WordHighlighter.query?.modelInfo?.modelURI);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'multiFile':\n\t\t\t\t\t\tif (WordHighlighter.query) {\n\t\t\t\t\t\t\tthis._run(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn('Unknown occurrencesHighlight setting value:', newValue);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis.toUnhook.add(editor.onDidBlurEditorWidget(() => {\n\t\t\t// logic is as follows\n\t\t\t// - didBlur => active null => stopall\n\t\t\t// - didBlur => active nb   => if this.editor is notebook, do nothing (new cell, so we don't want to stopAll)\n\t\t\t//              active nb   => if this.editor is NOT nb,   stopAll\n\n\t\t\tconst activeEditor = this.codeEditorService.getFocusedCodeEditor();\n\t\t\tif (!activeEditor) { // clicked into nb cell list, outline, terminal, etc\n\t\t\t\tthis._stopAll();\n\t\t\t} else if (activeEditor.getModel()?.uri.scheme === Schemas.vscodeNotebookCell && this.editor.getModel()?.uri.scheme !== Schemas.vscodeNotebookCell) { // switched tabs from non-nb to nb\n\t\t\t\tthis._stopAll();\n\t\t\t}\n\t\t}));\n\n\t\tthis.decorations = this.editor.createDecorationsCollection();\n\t\tthis.workerRequestTokenId = 0;\n\t\tthis.workerRequest = null;\n\t\tthis.workerRequestCompleted = false;\n\n\t\tthis.lastCursorPositionChangeTime = 0;\n\t\tthis.renderDecorationsTimer = -1;\n\n\t\t// if there is a query already, highlight off that query\n\t\tif (WordHighlighter.query) {\n\t\t\tthis._run();\n\t\t}\n\t}\n\n\tpublic hasDecorations(): boolean {\n\t\treturn (this.decorations.length > 0);\n\t}\n\n\tpublic restore(): void {\n\t\tif (this.occurrencesHighlight === 'off') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.runDelayer.cancel();\n\t\tthis._run();\n\t}\n\n\tpublic stop(): void {\n\t\tif (this.occurrencesHighlight === 'off') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._stopAll();\n\t}\n\n\tprivate _getSortedHighlights(): Range[] {\n\t\treturn (\n\t\t\tthis.decorations.getRanges()\n\t\t\t\t.sort(Range.compareRangesUsingStarts)\n\t\t);\n\t}\n\n\tpublic moveNext() {\n\t\tconst highlights = this._getSortedHighlights();\n\t\tconst index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\n\t\tconst newIndex = ((index + 1) % highlights.length);\n\t\tconst dest = highlights[newIndex];\n\t\ttry {\n\t\t\tthis._ignorePositionChangeEvent = true;\n\t\t\tthis.editor.setPosition(dest.getStartPosition());\n\t\t\tthis.editor.revealRangeInCenterIfOutsideViewport(dest);\n\t\t\tconst word = this._getWord();\n\t\t\tif (word) {\n\t\t\t\tconst lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\n\t\t\t\talert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._ignorePositionChangeEvent = false;\n\t\t}\n\t}\n\n\tpublic moveBack() {\n\t\tconst highlights = this._getSortedHighlights();\n\t\tconst index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\n\t\tconst newIndex = ((index - 1 + highlights.length) % highlights.length);\n\t\tconst dest = highlights[newIndex];\n\t\ttry {\n\t\t\tthis._ignorePositionChangeEvent = true;\n\t\t\tthis.editor.setPosition(dest.getStartPosition());\n\t\t\tthis.editor.revealRangeInCenterIfOutsideViewport(dest);\n\t\t\tconst word = this._getWord();\n\t\t\tif (word) {\n\t\t\t\tconst lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\n\t\t\t\talert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._ignorePositionChangeEvent = false;\n\t\t}\n\t}\n\n\tprivate _removeSingleDecorations(): void {\n\t\t// return if no model\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentDecorationIDs = WordHighlighter.storedDecorationIDs.get(this.editor.getModel().uri);\n\t\tif (!currentDecorationIDs) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor.removeDecorations(currentDecorationIDs);\n\t\tWordHighlighter.storedDecorationIDs.delete(this.editor.getModel().uri);\n\n\t\tif (this.decorations.length > 0) {\n\t\t\tthis.decorations.clear();\n\t\t\tthis._hasWordHighlights.set(false);\n\t\t}\n\t}\n\n\tprivate _removeAllDecorations(preservedModel?: URI): void {\n\t\tconst currentEditors = this.codeEditorService.listCodeEditors();\n\t\tconst deleteURI = [];\n\t\t// iterate over editors and store models in currentModels\n\t\tfor (const editor of currentEditors) {\n\t\t\tif (!editor.hasModel() || isEqual(editor.getModel().uri, preservedModel)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst currentDecorationIDs = WordHighlighter.storedDecorationIDs.get(editor.getModel().uri);\n\t\t\tif (!currentDecorationIDs) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\teditor.removeDecorations(currentDecorationIDs);\n\t\t\tdeleteURI.push(editor.getModel().uri);\n\n\t\t\tconst editorHighlighterContrib = WordHighlighterContribution.get(editor);\n\t\t\tif (!editorHighlighterContrib?.wordHighlighter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (editorHighlighterContrib.wordHighlighter.decorations.length > 0) {\n\t\t\t\teditorHighlighterContrib.wordHighlighter.decorations.clear();\n\t\t\t\teditorHighlighterContrib.wordHighlighter.workerRequest = null;\n\t\t\t\teditorHighlighterContrib.wordHighlighter._hasWordHighlights.set(false);\n\t\t\t}\n\t\t}\n\n\t\tfor (const uri of deleteURI) {\n\t\t\tWordHighlighter.storedDecorationIDs.delete(uri);\n\t\t}\n\t}\n\n\tprivate _stopSingular(): void {\n\t\t// Remove any existing decorations + a possible query, and re - run to update decorations\n\t\tthis._removeSingleDecorations();\n\n\t\tif (this.editor.hasTextFocus()) {\n\t\t\tif (this.editor.getModel()?.uri.scheme !== Schemas.vscodeNotebookCell && WordHighlighter.query?.modelInfo?.modelURI.scheme !== Schemas.vscodeNotebookCell) { // clear query if focused non-nb editor\n\t\t\t\tWordHighlighter.query = null;\n\t\t\t\tthis._run(); // TODO: @Yoyokrazy -- investigate why we need a full rerun here. likely addressed a case/patch in the first iteration of this feature\n\t\t\t} else { // remove modelInfo to account for nb cell being disposed\n\t\t\t\tif (WordHighlighter.query?.modelInfo) {\n\t\t\t\t\tWordHighlighter.query.modelInfo = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Cancel any renderDecorationsTimer\n\t\tif (this.renderDecorationsTimer !== -1) {\n\t\t\tclearTimeout(this.renderDecorationsTimer);\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t}\n\n\t\t// Cancel any worker request\n\t\tif (this.workerRequest !== null) {\n\t\t\tthis.workerRequest.cancel();\n\t\t\tthis.workerRequest = null;\n\t\t}\n\n\t\t// Invalidate any worker request callback\n\t\tif (!this.workerRequestCompleted) {\n\t\t\tthis.workerRequestTokenId++;\n\t\t\tthis.workerRequestCompleted = true;\n\t\t}\n\t}\n\n\tprivate _stopAll(preservedModel?: URI): void {\n\t\t// Remove any existing decorations\n\t\t// TODO: @Yoyokrazy -- this triggers as notebooks scroll, causing highlights to disappear momentarily.\n\t\t// maybe a nb type check?\n\t\tthis._removeAllDecorations(preservedModel);\n\n\t\t// Cancel any renderDecorationsTimer\n\t\tif (this.renderDecorationsTimer !== -1) {\n\t\t\tclearTimeout(this.renderDecorationsTimer);\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t}\n\n\t\t// Cancel any worker request\n\t\tif (this.workerRequest !== null) {\n\t\t\tthis.workerRequest.cancel();\n\t\t\tthis.workerRequest = null;\n\t\t}\n\n\t\t// Invalidate any worker request callback\n\t\tif (!this.workerRequestCompleted) {\n\t\t\tthis.workerRequestTokenId++;\n\t\t\tthis.workerRequestCompleted = true;\n\t\t}\n\t}\n\n\tprivate _onPositionChanged(e: ICursorPositionChangedEvent): void {\n\n\t\t// disabled\n\t\tif (this.occurrencesHighlight === 'off') {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\t// ignore typing & other\n\t\t// need to check if the model is a notebook cell, should not stop if nb\n\t\tif (e.reason !== CursorChangeReason.Explicit && this.editor.getModel()?.uri.scheme !== Schemas.vscodeNotebookCell) {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._run();\n\t}\n\n\tprivate _getWord(): IWordAtPosition | null {\n\t\tconst editorSelection = this.editor.getSelection();\n\t\tconst lineNumber = editorSelection.startLineNumber;\n\t\tconst startColumn = editorSelection.startColumn;\n\n\t\tif (this.model.isDisposed()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.model.getWordAtPosition({\n\t\t\tlineNumber: lineNumber,\n\t\t\tcolumn: startColumn\n\t\t});\n\t}\n\n\tprivate getOtherModelsToHighlight(model: ITextModel): ITextModel[] {\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// notebook case\n\t\tconst isNotebookEditor = model.uri.scheme === Schemas.vscodeNotebookCell;\n\t\tif (isNotebookEditor) {\n\t\t\tconst currentModels: ITextModel[] = [];\n\t\t\tconst currentEditors = this.codeEditorService.listCodeEditors();\n\t\t\tfor (const editor of currentEditors) {\n\t\t\t\tconst tempModel = editor.getModel();\n\t\t\t\tif (tempModel && tempModel !== model && tempModel.uri.scheme === Schemas.vscodeNotebookCell) {\n\t\t\t\t\tcurrentModels.push(tempModel);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn currentModels;\n\t\t}\n\n\t\t// inline case\n\t\t// ? current works when highlighting outside of an inline diff, highlighting in.\n\t\t// ? broken when highlighting within a diff editor. highlighting the main editor does not work\n\t\t// ? editor group service could be useful here\n\t\tconst currentModels: ITextModel[] = [];\n\t\tconst currentEditors = this.codeEditorService.listCodeEditors();\n\t\tfor (const editor of currentEditors) {\n\t\t\tif (!isDiffEditor(editor)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst diffModel = (editor as IDiffEditor).getModel();\n\t\t\tif (!diffModel) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (model === diffModel.modified) { // embedded inline chat diff would pass this, allowing highlights\n\t\t\t\t//? currentModels.push(diffModel.original);\n\t\t\t\tcurrentModels.push(diffModel.modified);\n\t\t\t}\n\t\t}\n\t\tif (currentModels.length) { // no matching editors have been found\n\t\t\treturn currentModels;\n\t\t}\n\n\t\t// multi-doc OFF\n\t\tif (this.occurrencesHighlight === 'singleFile') {\n\t\t\treturn [];\n\t\t}\n\n\t\t// multi-doc ON\n\t\tfor (const editor of currentEditors) {\n\t\t\tconst tempModel = editor.getModel();\n\n\t\t\tconst isValidModel = tempModel && tempModel !== model;\n\n\t\t\tif (isValidModel) {\n\t\t\t\tcurrentModels.push(tempModel);\n\t\t\t}\n\t\t}\n\t\treturn currentModels;\n\t}\n\n\tprivate async _run(multiFileConfigChange?: boolean): Promise<void> {\n\n\t\tconst hasTextFocus = this.editor.hasTextFocus();\n\n\t\tif (!hasTextFocus) { // new nb cell scrolled in, didChangeModel fires\n\t\t\tif (!WordHighlighter.query) { // no previous query, nothing to highlight off of\n\t\t\t\tthis._stopAll();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else { // has text focus\n\t\t\tconst editorSelection = this.editor.getSelection();\n\n\t\t\t// ignore multiline selection\n\t\t\tif (!editorSelection || editorSelection.startLineNumber !== editorSelection.endLineNumber) {\n\t\t\t\tWordHighlighter.query = null;\n\t\t\t\tthis._stopAll();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst startColumn = editorSelection.startColumn;\n\t\t\tconst endColumn = editorSelection.endColumn;\n\n\t\t\tconst word = this._getWord();\n\n\t\t\t// The selection must be inside a word or surround one word at most\n\t\t\tif (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\n\t\t\t\t// no previous query, nothing to highlight\n\t\t\t\tWordHighlighter.query = null;\n\t\t\t\tthis._stopAll();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tWordHighlighter.query = {\n\t\t\t\tmodelInfo: {\n\t\t\t\t\tmodelURI: this.model.uri,\n\t\t\t\t\tselection: editorSelection,\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\n\t\tthis.lastCursorPositionChangeTime = (new Date()).getTime();\n\n\t\tif (isEqual(this.editor.getModel().uri, WordHighlighter.query.modelInfo?.modelURI)) { // only trigger new worker requests from the primary model that initiated the query\n\t\t\t// case d)\n\n\t\t\t// check if the new queried word is contained in the range of a stored decoration for this model\n\t\t\tif (!multiFileConfigChange) {\n\t\t\t\tconst currentModelDecorationRanges = this.decorations.getRanges();\n\t\t\t\tfor (const storedRange of currentModelDecorationRanges) {\n\t\t\t\t\tif (storedRange.containsPosition(this.editor.getPosition())) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// stop all previous actions if new word is highlighted\n\t\t\t// if we trigger the run off a setting change -> multifile highlighting, we do not want to remove decorations from this model\n\t\t\tthis._stopAll(multiFileConfigChange ? this.model.uri : undefined);\n\n\t\t\tconst myRequestId = ++this.workerRequestTokenId;\n\t\t\tthis.workerRequestCompleted = false;\n\n\t\t\tconst otherModelsToHighlight = this.getOtherModelsToHighlight(this.editor.getModel());\n\n\t\t\t// when reaching here, there are two possible states.\n\t\t\t// \t\t1) we have text focus, and a valid query was updated.\n\t\t\t// \t\t2) we do not have text focus, and a valid query is cached.\n\t\t\t// the query will ALWAYS have the correct data for the current highlight request, so it can always be passed to the workerRequest safely\n\t\t\tif (!WordHighlighter.query || !WordHighlighter.query.modelInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst queryModelRef = await this.textModelService.createModelReference(WordHighlighter.query.modelInfo.modelURI);\n\t\t\tconst queryModel = queryModelRef.object.textEditorModel;\n\t\t\tthis.workerRequest = this.computeWithModel(queryModel, WordHighlighter.query.modelInfo.selection, otherModelsToHighlight);\n\n\t\t\tthis.workerRequest?.result.then(data => {\n\t\t\t\tif (myRequestId === this.workerRequestTokenId) {\n\t\t\t\t\tthis.workerRequestCompleted = true;\n\t\t\t\t\tthis.workerRequestValue = data || [];\n\t\t\t\t\tthis._beginRenderDecorations();\n\t\t\t\t}\n\t\t\t}, onUnexpectedError);\n\t\t} else if (this.model.uri.scheme === Schemas.vscodeNotebookCell) {\n\t\t\t// new wordHighlighter coming from a different model, NOT the query model, need to create a textModel ref\n\n\t\t\t// this._stopAll(multiFileConfigChange ? this.model.uri : undefined);\n\n\t\t\tconst myRequestId = ++this.workerRequestTokenId;\n\t\t\tthis.workerRequestCompleted = false;\n\n\t\t\tif (!WordHighlighter.query || !WordHighlighter.query.modelInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst queryModelRef = await this.textModelService.createModelReference(WordHighlighter.query.modelInfo.modelURI);\n\t\t\tconst queryModel = queryModelRef.object.textEditorModel;\n\t\t\tthis.workerRequest = this.computeWithModel(queryModel, WordHighlighter.query.modelInfo.selection, [this.model]);\n\n\t\t\tthis.workerRequest?.result.then(data => {\n\t\t\t\tif (myRequestId === this.workerRequestTokenId) {\n\t\t\t\t\tthis.workerRequestCompleted = true;\n\t\t\t\t\tthis.workerRequestValue = data || [];\n\t\t\t\t\tthis._beginRenderDecorations();\n\t\t\t\t}\n\t\t\t}, onUnexpectedError);\n\t\t}\n\t}\n\n\tprivate computeWithModel(model: ITextModel, selection: Selection, otherModels: ITextModel[]): IOccurenceAtPositionRequest | null {\n\t\tif (!otherModels.length) {\n\t\t\treturn computeOccurencesAtPosition(this.providers, model, selection, this.editor.getOption(EditorOption.wordSeparators));\n\t\t} else {\n\t\t\treturn computeOccurencesMultiModel(this.multiDocumentProviders, model, selection, this.editor.getOption(EditorOption.wordSeparators), otherModels);\n\t\t}\n\t}\n\n\tprivate _beginRenderDecorations(): void {\n\t\tconst currentTime = (new Date()).getTime();\n\t\tconst minimumRenderTime = this.lastCursorPositionChangeTime + 250;\n\n\t\tif (currentTime >= minimumRenderTime) {\n\t\t\t// Synchronous\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t\tthis.renderDecorations();\n\t\t} else {\n\t\t\t// Asynchronous\n\t\t\tthis.renderDecorationsTimer = setTimeout(() => {\n\t\t\t\tthis.renderDecorations();\n\t\t\t}, (minimumRenderTime - currentTime));\n\t\t}\n\t}\n\n\tprivate renderDecorations(): void {\n\t\tthis.renderDecorationsTimer = -1;\n\t\t// create new loop, iterate over current editors using this.codeEditorService.listCodeEditors(),\n\t\t// if the URI of that codeEditor is in the map, then add the decorations to the decorations array\n\t\t// then set the decorations for the editor\n\t\tconst currentEditors = this.codeEditorService.listCodeEditors();\n\t\tfor (const editor of currentEditors) {\n\t\t\tconst editorHighlighterContrib = WordHighlighterContribution.get(editor);\n\t\t\tif (!editorHighlighterContrib) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newDecorations: IModelDeltaDecoration[] = [];\n\t\t\tconst uri = editor.getModel()?.uri;\n\t\t\tif (uri && this.workerRequestValue.has(uri)) {\n\t\t\t\tconst oldDecorationIDs: string[] | undefined = WordHighlighter.storedDecorationIDs.get(uri);\n\t\t\t\tconst newDocumentHighlights = this.workerRequestValue.get(uri);\n\t\t\t\tif (newDocumentHighlights) {\n\t\t\t\t\tfor (const highlight of newDocumentHighlights) {\n\t\t\t\t\t\tif (!highlight.range) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewDecorations.push({\n\t\t\t\t\t\t\trange: highlight.range,\n\t\t\t\t\t\t\toptions: getHighlightDecorationOptions(highlight.kind)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet newDecorationIDs: string[] = [];\n\t\t\t\teditor.changeDecorations((changeAccessor) => {\n\t\t\t\t\tnewDecorationIDs = changeAccessor.deltaDecorations(oldDecorationIDs ?? [], newDecorations);\n\t\t\t\t});\n\t\t\t\tWordHighlighter.storedDecorationIDs = WordHighlighter.storedDecorationIDs.set(uri, newDecorationIDs);\n\n\t\t\t\tif (newDecorations.length > 0) {\n\t\t\t\t\teditorHighlighterContrib.wordHighlighter?.decorations.set(newDecorations);\n\t\t\t\t\teditorHighlighterContrib.wordHighlighter?._hasWordHighlights.set(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// clear the worker request when decorations are completed\n\t\tthis.workerRequest = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._stopSingular();\n\t\tthis.toUnhook.dispose();\n\t}\n}\n\nexport class WordHighlighterContribution extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.wordHighlighter';\n\n\tpublic static get(editor: ICodeEditor): WordHighlighterContribution | null {\n\t\treturn editor.getContribution<WordHighlighterContribution>(WordHighlighterContribution.ID);\n\t}\n\n\tprivate _wordHighlighter: WordHighlighter | null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t) {\n\t\tsuper();\n\t\tthis._wordHighlighter = null;\n\t\tconst createWordHighlighterIfPossible = () => {\n\t\t\tif (editor.hasModel() && !editor.getModel().isTooLargeForTokenization()) {\n\t\t\t\tthis._wordHighlighter = new WordHighlighter(editor, languageFeaturesService.documentHighlightProvider, languageFeaturesService.multiDocumentHighlightProvider, contextKeyService, textModelService, codeEditorService);\n\t\t\t}\n\t\t};\n\t\tthis._register(editor.onDidChangeModel((e) => {\n\t\t\tif (this._wordHighlighter) {\n\t\t\t\tif (!e.newModelUrl && e.oldModelUrl?.scheme !== Schemas.vscodeNotebookCell) { // happens when switching tabs to a notebook that has focus in the cell list, no new model URI (this also doesn't make it to the wordHighlighter, bc no editor.hasModel)\n\t\t\t\t\tthis.wordHighlighter?.stop();\n\t\t\t\t}\n\n\t\t\t\tthis._wordHighlighter.dispose();\n\t\t\t\tthis._wordHighlighter = null;\n\t\t\t}\n\t\t\tcreateWordHighlighterIfPossible();\n\t\t}));\n\t\tcreateWordHighlighterIfPossible();\n\t}\n\n\tpublic get wordHighlighter(): WordHighlighter | null {\n\t\treturn this._wordHighlighter;\n\t}\n\n\tpublic saveViewState(): boolean {\n\t\tif (this._wordHighlighter && this._wordHighlighter.hasDecorations()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic moveNext() {\n\t\tthis._wordHighlighter?.moveNext();\n\t}\n\n\tpublic moveBack() {\n\t\tthis._wordHighlighter?.moveBack();\n\t}\n\n\tpublic restoreViewState(state: boolean | undefined): void {\n\t\tif (this._wordHighlighter && state) {\n\t\t\tthis._wordHighlighter.restore();\n\t\t}\n\t}\n\n\tpublic stopHighlighting() {\n\t\tthis._wordHighlighter?.stop();\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._wordHighlighter) {\n\t\t\tthis._wordHighlighter.dispose();\n\t\t\tthis._wordHighlighter = null;\n\t\t}\n\t\tsuper.dispose();\n\t}\n}\n\n\nclass WordHighlightNavigationAction extends EditorAction {\n\n\tprivate readonly _isNext: boolean;\n\n\tconstructor(next: boolean, opts: IActionOptions) {\n\t\tsuper(opts);\n\t\tthis._isNext = next;\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = WordHighlighterContribution.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isNext) {\n\t\t\tcontroller.moveNext();\n\t\t} else {\n\t\t\tcontroller.moveBack();\n\t\t}\n\t}\n}\n\nclass NextWordHighlightAction extends WordHighlightNavigationAction {\n\tconstructor() {\n\t\tsuper(true, {\n\t\t\tid: 'editor.action.wordHighlight.next',\n\t\t\tlabel: nls.localize('wordHighlight.next.label', \"Go to Next Symbol Highlight\"),\n\t\t\talias: 'Go to Next Symbol Highlight',\n\t\t\tprecondition: ctxHasWordHighlights,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass PrevWordHighlightAction extends WordHighlightNavigationAction {\n\tconstructor() {\n\t\tsuper(false, {\n\t\t\tid: 'editor.action.wordHighlight.prev',\n\t\t\tlabel: nls.localize('wordHighlight.previous.label', \"Go to Previous Symbol Highlight\"),\n\t\t\talias: 'Go to Previous Symbol Highlight',\n\t\t\tprecondition: ctxHasWordHighlights,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass TriggerWordHighlightAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.wordHighlight.trigger',\n\t\t\tlabel: nls.localize('wordHighlight.trigger.label', \"Trigger Symbol Highlight\"),\n\t\t\talias: 'Trigger Symbol Highlight',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tconst controller = WordHighlighterContribution.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.restoreViewState(true);\n\t}\n}\n\nregisterEditorContribution(WordHighlighterContribution.ID, WordHighlighterContribution, EditorContributionInstantiation.Eager); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(NextWordHighlightAction);\nregisterEditorAction(PrevWordHighlightAction);\nregisterEditorAction(TriggerWordHighlightAction);\nregisterEditorFeature(TextualMultiDocumentHighlightFeature);\n"],
  "mappings": "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",
  "names": ["currentModels", "currentEditors"]
}
