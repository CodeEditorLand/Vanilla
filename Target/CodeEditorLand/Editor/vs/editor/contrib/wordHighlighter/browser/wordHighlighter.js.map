{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/wordHighlighter/browser/wordHighlighter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from \"../../../../base/browser/ui/aria/aria.js\";\nimport {\n\ttype CancelablePromise,\n\tDelayer,\n\tcreateCancelablePromise,\n\tfirst,\n} from \"../../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tonUnexpectedError,\n\tonUnexpectedExternalError,\n} from \"../../../../base/common/errors.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { Schemas, matchesScheme } from \"../../../../base/common/network.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\ttype IActiveCodeEditor,\n\ttype ICodeEditor,\n\tisDiffEditor,\n} from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorContributionInstantiation,\n\ttype IActionOptions,\n\tregisterEditorAction,\n\tregisterEditorContribution,\n\tregisterModelAndPositionCommand,\n} from \"../../../browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../browser/services/codeEditorService.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type { Selection } from \"../../../common/core/selection.js\";\nimport type { IWordAtPosition } from \"../../../common/core/wordHelper.js\";\nimport {\n\tCursorChangeReason,\n\ttype ICursorPositionChangedEvent,\n} from \"../../../common/cursorEvents.js\";\nimport type {\n\tIDiffEditor,\n\tIEditorContribution,\n\tIEditorDecorationsCollection,\n} from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport { registerEditorFeature } from \"../../../common/editorFeatures.js\";\nimport type { LanguageFeatureRegistry } from \"../../../common/languageFeatureRegistry.js\";\nimport { score } from \"../../../common/languageSelector.js\";\nimport type {\n\tDocumentHighlight,\n\tDocumentHighlightProvider,\n\tMultiDocumentHighlightProvider,\n} from \"../../../common/languages.js\";\nimport {\n\ttype IModelDeltaDecoration,\n\ttype ITextModel,\n\tshouldSynchronizeModel,\n} from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { ITextModelService } from \"../../../common/services/resolverService.js\";\nimport { getHighlightDecorationOptions } from \"./highlightDecorations.js\";\nimport { TextualMultiDocumentHighlightFeature } from \"./textualHighlightProvider.js\";\n\nconst ctxHasWordHighlights = new RawContextKey<boolean>(\n\t\"hasWordHighlights\",\n\tfalse,\n);\n\nexport function getOccurrencesAtPosition(\n\tregistry: LanguageFeatureRegistry<DocumentHighlightProvider>,\n\tmodel: ITextModel,\n\tposition: Position,\n\ttoken: CancellationToken,\n): Promise<ResourceMap<DocumentHighlight[]> | null | undefined> {\n\tconst orderedByScore = registry.ordered(model);\n\n\t// in order of score ask the occurrences provider\n\t// until someone response with a good result\n\t// (good = non undefined and non null value)\n\t// (result of size == 0 is valid, no highlights is a valid/expected result -- not a signal to fall back to other providers)\n\treturn first<DocumentHighlight[] | null | undefined>(\n\t\torderedByScore.map((provider) => () => {\n\t\t\treturn Promise.resolve(\n\t\t\t\tprovider.provideDocumentHighlights(model, position, token),\n\t\t\t).then(undefined, onUnexpectedExternalError);\n\t\t}),\n\t\t(result): result is DocumentHighlight[] =>\n\t\t\tresult !== undefined && result !== null,\n\t).then((result) => {\n\t\tif (result) {\n\t\t\tconst map = new ResourceMap<DocumentHighlight[]>();\n\t\t\tmap.set(model.uri, result);\n\t\t\treturn map;\n\t\t}\n\t\treturn new ResourceMap<DocumentHighlight[]>();\n\t});\n}\n\nexport function getOccurrencesAcrossMultipleModels(\n\tregistry: LanguageFeatureRegistry<MultiDocumentHighlightProvider>,\n\tmodel: ITextModel,\n\tposition: Position,\n\ttoken: CancellationToken,\n\totherModels: ITextModel[],\n): Promise<ResourceMap<DocumentHighlight[]> | null | undefined> {\n\tconst orderedByScore = registry.ordered(model);\n\n\t// in order of score ask the occurrences provider\n\t// until someone response with a good result\n\t// (good = non undefined and non null ResourceMap)\n\t// (result of size == 0 is valid, no highlights is a valid/expected result -- not a signal to fall back to other providers)\n\treturn first<ResourceMap<DocumentHighlight[]> | null | undefined>(\n\t\torderedByScore.map((provider) => () => {\n\t\t\tconst filteredModels = otherModels\n\t\t\t\t.filter((otherModel) => {\n\t\t\t\t\treturn shouldSynchronizeModel(otherModel);\n\t\t\t\t})\n\t\t\t\t.filter((otherModel) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tscore(\n\t\t\t\t\t\t\tprovider.selector,\n\t\t\t\t\t\t\totherModel.uri,\n\t\t\t\t\t\t\totherModel.getLanguageId(),\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t) > 0\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\treturn Promise.resolve(\n\t\t\t\tprovider.provideMultiDocumentHighlights(\n\t\t\t\t\tmodel,\n\t\t\t\t\tposition,\n\t\t\t\t\tfilteredModels,\n\t\t\t\t\ttoken,\n\t\t\t\t),\n\t\t\t).then(undefined, onUnexpectedExternalError);\n\t\t}),\n\t\t(result): result is ResourceMap<DocumentHighlight[]> =>\n\t\t\tresult !== undefined && result !== null,\n\t);\n}\n\ninterface IOccurenceAtPositionRequest {\n\treadonly result: Promise<ResourceMap<DocumentHighlight[]>>;\n\tisValid(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t\tdecorations: IEditorDecorationsCollection,\n\t): boolean;\n\tcancel(): void;\n}\n\ninterface IWordHighlighterQuery {\n\tmodelInfo: {\n\t\tmodelURI: URI;\n\t\tselection: Selection;\n\t} | null;\n}\n\nabstract class OccurenceAtPositionRequest\n\timplements IOccurenceAtPositionRequest\n{\n\tprivate readonly _wordRange: Range | null;\n\tprivate _result: CancelablePromise<ResourceMap<DocumentHighlight[]>> | null;\n\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _selection: Selection,\n\t\tprivate readonly _wordSeparators: string,\n\t) {\n\t\tthis._wordRange = this._getCurrentWordRange(_model, _selection);\n\t\tthis._result = null;\n\t}\n\n\tget result() {\n\t\tif (!this._result) {\n\t\t\tthis._result = createCancelablePromise((token) =>\n\t\t\t\tthis._compute(\n\t\t\t\t\tthis._model,\n\t\t\t\t\tthis._selection,\n\t\t\t\t\tthis._wordSeparators,\n\t\t\t\t\ttoken,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn this._result;\n\t}\n\n\tprotected abstract _compute(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t\twordSeparators: string,\n\t\ttoken: CancellationToken,\n\t): Promise<ResourceMap<DocumentHighlight[]>>;\n\n\tprivate _getCurrentWordRange(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t): Range | null {\n\t\tconst word = model.getWordAtPosition(selection.getPosition());\n\t\tif (word) {\n\t\t\treturn new Range(\n\t\t\t\tselection.startLineNumber,\n\t\t\t\tword.startColumn,\n\t\t\t\tselection.startLineNumber,\n\t\t\t\tword.endColumn,\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t\tdecorations: IEditorDecorationsCollection,\n\t): boolean {\n\t\tconst lineNumber = selection.startLineNumber;\n\t\tconst startColumn = selection.startColumn;\n\t\tconst endColumn = selection.endColumn;\n\t\tconst currentWordRange = this._getCurrentWordRange(model, selection);\n\n\t\tlet requestIsValid = Boolean(\n\t\t\tthis._wordRange && this._wordRange.equalsRange(currentWordRange),\n\t\t);\n\n\t\t// Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\n\t\t// (Same symbol)\n\t\tfor (\n\t\t\tlet i = 0, len = decorations.length;\n\t\t\t!requestIsValid && i < len;\n\t\t\ti++\n\t\t) {\n\t\t\tconst range = decorations.getRange(i);\n\t\t\tif (range && range.startLineNumber === lineNumber) {\n\t\t\t\tif (\n\t\t\t\t\trange.startColumn <= startColumn &&\n\t\t\t\t\trange.endColumn >= endColumn\n\t\t\t\t) {\n\t\t\t\t\trequestIsValid = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn requestIsValid;\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.result.cancel();\n\t}\n}\n\nclass SemanticOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\n\tprivate readonly _providers: LanguageFeatureRegistry<DocumentHighlightProvider>;\n\n\tconstructor(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t\twordSeparators: string,\n\t\tproviders: LanguageFeatureRegistry<DocumentHighlightProvider>,\n\t) {\n\t\tsuper(model, selection, wordSeparators);\n\t\tthis._providers = providers;\n\t}\n\n\tprotected _compute(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t\twordSeparators: string,\n\t\ttoken: CancellationToken,\n\t): Promise<ResourceMap<DocumentHighlight[]>> {\n\t\treturn getOccurrencesAtPosition(\n\t\t\tthis._providers,\n\t\t\tmodel,\n\t\t\tselection.getPosition(),\n\t\t\ttoken,\n\t\t).then((value) => {\n\t\t\tif (!value) {\n\t\t\t\treturn new ResourceMap<DocumentHighlight[]>();\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t}\n}\n\nclass MultiModelOccurenceRequest extends OccurenceAtPositionRequest {\n\tprivate readonly _providers: LanguageFeatureRegistry<MultiDocumentHighlightProvider>;\n\tprivate readonly _otherModels: ITextModel[];\n\n\tconstructor(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t\twordSeparators: string,\n\t\tproviders: LanguageFeatureRegistry<MultiDocumentHighlightProvider>,\n\t\totherModels: ITextModel[],\n\t) {\n\t\tsuper(model, selection, wordSeparators);\n\t\tthis._providers = providers;\n\t\tthis._otherModels = otherModels;\n\t}\n\n\tprotected override _compute(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t\twordSeparators: string,\n\t\ttoken: CancellationToken,\n\t): Promise<ResourceMap<DocumentHighlight[]>> {\n\t\treturn getOccurrencesAcrossMultipleModels(\n\t\t\tthis._providers,\n\t\t\tmodel,\n\t\t\tselection.getPosition(),\n\t\t\ttoken,\n\t\t\tthis._otherModels,\n\t\t).then((value) => {\n\t\t\tif (!value) {\n\t\t\t\treturn new ResourceMap<DocumentHighlight[]>();\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t}\n}\n\nfunction computeOccurencesAtPosition(\n\tregistry: LanguageFeatureRegistry<DocumentHighlightProvider>,\n\tmodel: ITextModel,\n\tselection: Selection,\n\twordSeparators: string,\n): IOccurenceAtPositionRequest {\n\treturn new SemanticOccurenceAtPositionRequest(\n\t\tmodel,\n\t\tselection,\n\t\twordSeparators,\n\t\tregistry,\n\t);\n}\n\nfunction computeOccurencesMultiModel(\n\tregistry: LanguageFeatureRegistry<MultiDocumentHighlightProvider>,\n\tmodel: ITextModel,\n\tselection: Selection,\n\twordSeparators: string,\n\totherModels: ITextModel[],\n): IOccurenceAtPositionRequest {\n\treturn new MultiModelOccurenceRequest(\n\t\tmodel,\n\t\tselection,\n\t\twordSeparators,\n\t\tregistry,\n\t\totherModels,\n\t);\n}\n\nregisterModelAndPositionCommand(\n\t\"_executeDocumentHighlights\",\n\tasync (accessor, model, position) => {\n\t\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\t\tconst map = await getOccurrencesAtPosition(\n\t\t\tlanguageFeaturesService.documentHighlightProvider,\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\tCancellationToken.None,\n\t\t);\n\t\treturn map?.get(model.uri);\n\t},\n);\n\nclass WordHighlighter {\n\tprivate readonly editor: IActiveCodeEditor;\n\tprivate readonly providers: LanguageFeatureRegistry<DocumentHighlightProvider>;\n\tprivate readonly multiDocumentProviders: LanguageFeatureRegistry<MultiDocumentHighlightProvider>;\n\tprivate readonly model: ITextModel;\n\tprivate readonly decorations: IEditorDecorationsCollection;\n\tprivate readonly toUnhook = new DisposableStore();\n\n\tprivate readonly textModelService: ITextModelService;\n\tprivate readonly codeEditorService: ICodeEditorService;\n\n\tprivate occurrencesHighlight: string;\n\n\tprivate workerRequestTokenId = 0;\n\tprivate workerRequest: IOccurenceAtPositionRequest | null;\n\tprivate workerRequestCompleted = false;\n\tprivate workerRequestValue: ResourceMap<DocumentHighlight[]> =\n\t\tnew ResourceMap();\n\n\tprivate lastCursorPositionChangeTime = 0;\n\tprivate renderDecorationsTimer: any = -1;\n\n\tprivate readonly _hasWordHighlights: IContextKey<boolean>;\n\tprivate _ignorePositionChangeEvent: boolean;\n\n\tprivate readonly runDelayer: Delayer<void> = this.toUnhook.add(\n\t\tnew Delayer<void>(25),\n\t);\n\n\tprivate static storedDecorationIDs: ResourceMap<string[]> =\n\t\tnew ResourceMap();\n\tprivate static query: IWordHighlighterQuery | null = null;\n\n\tconstructor(\n\t\teditor: IActiveCodeEditor,\n\t\tproviders: LanguageFeatureRegistry<DocumentHighlightProvider>,\n\t\tmultiProviders: LanguageFeatureRegistry<MultiDocumentHighlightProvider>,\n\t\tcontextKeyService: IContextKeyService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tthis.editor = editor;\n\t\tthis.providers = providers;\n\t\tthis.multiDocumentProviders = multiProviders;\n\n\t\tthis.codeEditorService = codeEditorService;\n\t\tthis.textModelService = textModelService;\n\n\t\tthis._hasWordHighlights =\n\t\t\tctxHasWordHighlights.bindTo(contextKeyService);\n\t\tthis._ignorePositionChangeEvent = false;\n\t\tthis.occurrencesHighlight = this.editor.getOption(\n\t\t\tEditorOption.occurrencesHighlight,\n\t\t);\n\t\tthis.model = this.editor.getModel();\n\n\t\tthis.toUnhook.add(\n\t\t\teditor.onDidChangeCursorPosition(\n\t\t\t\t(e: ICursorPositionChangedEvent) => {\n\t\t\t\t\tif (this._ignorePositionChangeEvent) {\n\t\t\t\t\t\t// We are changing the position => ignore this event\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.occurrencesHighlight === \"off\") {\n\t\t\t\t\t\t// Early exit if nothing needs to be done!\n\t\t\t\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.runDelayer.trigger(() => {\n\t\t\t\t\t\tthis._onPositionChanged(e);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis.toUnhook.add(\n\t\t\teditor.onDidFocusEditorText((e) => {\n\t\t\t\tif (this.occurrencesHighlight === \"off\") {\n\t\t\t\t\t// Early exit if nothing needs to be done\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.workerRequest) {\n\t\t\t\t\tthis.runDelayer.trigger(() => {\n\t\t\t\t\t\tthis._run();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.toUnhook.add(\n\t\t\teditor.onDidChangeModelContent((e) => {\n\t\t\t\tif (!matchesScheme(this.model.uri, \"output\")) {\n\t\t\t\t\tthis._stopAll();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.toUnhook.add(\n\t\t\teditor.onDidChangeModel((e) => {\n\t\t\t\tif (!e.newModelUrl && e.oldModelUrl) {\n\t\t\t\t\tthis._stopSingular();\n\t\t\t\t} else if (WordHighlighter.query) {\n\t\t\t\t\tthis._run();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.toUnhook.add(\n\t\t\teditor.onDidChangeConfiguration((e) => {\n\t\t\t\tconst newValue = this.editor.getOption(\n\t\t\t\t\tEditorOption.occurrencesHighlight,\n\t\t\t\t);\n\t\t\t\tif (this.occurrencesHighlight !== newValue) {\n\t\t\t\t\tthis.occurrencesHighlight = newValue;\n\t\t\t\t\tswitch (newValue) {\n\t\t\t\t\t\tcase \"off\":\n\t\t\t\t\t\t\tthis._stopAll();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"singleFile\":\n\t\t\t\t\t\t\tthis._stopAll(\n\t\t\t\t\t\t\t\tWordHighlighter.query?.modelInfo?.modelURI,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"multiFile\":\n\t\t\t\t\t\t\tif (WordHighlighter.query) {\n\t\t\t\t\t\t\t\tthis._run(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t\"Unknown occurrencesHighlight setting value:\",\n\t\t\t\t\t\t\t\tnewValue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.toUnhook.add(\n\t\t\teditor.onDidBlurEditorWidget(() => {\n\t\t\t\t// logic is as follows\n\t\t\t\t// - didBlur => active null => stopall\n\t\t\t\t// - didBlur => active nb   => if this.editor is notebook, do nothing (new cell, so we don't want to stopAll)\n\t\t\t\t//              active nb   => if this.editor is NOT nb,   stopAll\n\n\t\t\t\tconst activeEditor =\n\t\t\t\t\tthis.codeEditorService.getFocusedCodeEditor();\n\t\t\t\tif (!activeEditor) {\n\t\t\t\t\t// clicked into nb cell list, outline, terminal, etc\n\t\t\t\t\tthis._stopAll();\n\t\t\t\t} else if (\n\t\t\t\t\tactiveEditor.getModel()?.uri.scheme ===\n\t\t\t\t\t\tSchemas.vscodeNotebookCell &&\n\t\t\t\t\tthis.editor.getModel()?.uri.scheme !==\n\t\t\t\t\t\tSchemas.vscodeNotebookCell\n\t\t\t\t) {\n\t\t\t\t\t// switched tabs from non-nb to nb\n\t\t\t\t\tthis._stopAll();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.decorations = this.editor.createDecorationsCollection();\n\t\tthis.workerRequestTokenId = 0;\n\t\tthis.workerRequest = null;\n\t\tthis.workerRequestCompleted = false;\n\n\t\tthis.lastCursorPositionChangeTime = 0;\n\t\tthis.renderDecorationsTimer = -1;\n\n\t\t// if there is a query already, highlight off that query\n\t\tif (WordHighlighter.query) {\n\t\t\tthis._run();\n\t\t}\n\t}\n\n\tpublic hasDecorations(): boolean {\n\t\treturn this.decorations.length > 0;\n\t}\n\n\tpublic restore(): void {\n\t\tif (this.occurrencesHighlight === \"off\") {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.runDelayer.cancel();\n\t\tthis._run();\n\t}\n\n\tpublic stop(): void {\n\t\tif (this.occurrencesHighlight === \"off\") {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._stopAll();\n\t}\n\n\tprivate _getSortedHighlights(): Range[] {\n\t\treturn this.decorations\n\t\t\t.getRanges()\n\t\t\t.sort(Range.compareRangesUsingStarts);\n\t}\n\n\tpublic moveNext() {\n\t\tconst highlights = this._getSortedHighlights();\n\t\tconst index = highlights.findIndex((range) =>\n\t\t\trange.containsPosition(this.editor.getPosition()),\n\t\t);\n\t\tconst newIndex = (index + 1) % highlights.length;\n\t\tconst dest = highlights[newIndex];\n\t\ttry {\n\t\t\tthis._ignorePositionChangeEvent = true;\n\t\t\tthis.editor.setPosition(dest.getStartPosition());\n\t\t\tthis.editor.revealRangeInCenterIfOutsideViewport(dest);\n\t\t\tconst word = this._getWord();\n\t\t\tif (word) {\n\t\t\t\tconst lineContent = this.editor\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.getLineContent(dest.startLineNumber);\n\t\t\t\talert(\n\t\t\t\t\t`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`,\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._ignorePositionChangeEvent = false;\n\t\t}\n\t}\n\n\tpublic moveBack() {\n\t\tconst highlights = this._getSortedHighlights();\n\t\tconst index = highlights.findIndex((range) =>\n\t\t\trange.containsPosition(this.editor.getPosition()),\n\t\t);\n\t\tconst newIndex = (index - 1 + highlights.length) % highlights.length;\n\t\tconst dest = highlights[newIndex];\n\t\ttry {\n\t\t\tthis._ignorePositionChangeEvent = true;\n\t\t\tthis.editor.setPosition(dest.getStartPosition());\n\t\t\tthis.editor.revealRangeInCenterIfOutsideViewport(dest);\n\t\t\tconst word = this._getWord();\n\t\t\tif (word) {\n\t\t\t\tconst lineContent = this.editor\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.getLineContent(dest.startLineNumber);\n\t\t\t\talert(\n\t\t\t\t\t`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`,\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._ignorePositionChangeEvent = false;\n\t\t}\n\t}\n\n\tprivate _removeSingleDecorations(): void {\n\t\t// return if no model\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentDecorationIDs = WordHighlighter.storedDecorationIDs.get(\n\t\t\tthis.editor.getModel().uri,\n\t\t);\n\t\tif (!currentDecorationIDs) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor.removeDecorations(currentDecorationIDs);\n\t\tWordHighlighter.storedDecorationIDs.delete(this.editor.getModel().uri);\n\n\t\tif (this.decorations.length > 0) {\n\t\t\tthis.decorations.clear();\n\t\t\tthis._hasWordHighlights.set(false);\n\t\t}\n\t}\n\n\tprivate _removeAllDecorations(preservedModel?: URI): void {\n\t\tconst currentEditors = this.codeEditorService.listCodeEditors();\n\t\tconst deleteURI = [];\n\t\t// iterate over editors and store models in currentModels\n\t\tfor (const editor of currentEditors) {\n\t\t\tif (\n\t\t\t\t!editor.hasModel() ||\n\t\t\t\tisEqual(editor.getModel().uri, preservedModel)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst currentDecorationIDs =\n\t\t\t\tWordHighlighter.storedDecorationIDs.get(editor.getModel().uri);\n\t\t\tif (!currentDecorationIDs) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\teditor.removeDecorations(currentDecorationIDs);\n\t\t\tdeleteURI.push(editor.getModel().uri);\n\n\t\t\tconst editorHighlighterContrib =\n\t\t\t\tWordHighlighterContribution.get(editor);\n\t\t\tif (!editorHighlighterContrib?.wordHighlighter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\teditorHighlighterContrib.wordHighlighter.decorations.length > 0\n\t\t\t) {\n\t\t\t\teditorHighlighterContrib.wordHighlighter.decorations.clear();\n\t\t\t\teditorHighlighterContrib.wordHighlighter.workerRequest = null;\n\t\t\t\teditorHighlighterContrib.wordHighlighter._hasWordHighlights.set(\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfor (const uri of deleteURI) {\n\t\t\tWordHighlighter.storedDecorationIDs.delete(uri);\n\t\t}\n\t}\n\n\tprivate _stopSingular(): void {\n\t\t// Remove any existing decorations + a possible query, and re - run to update decorations\n\t\tthis._removeSingleDecorations();\n\n\t\tif (this.editor.hasTextFocus()) {\n\t\t\tif (\n\t\t\t\tthis.editor.getModel()?.uri.scheme !==\n\t\t\t\t\tSchemas.vscodeNotebookCell &&\n\t\t\t\tWordHighlighter.query?.modelInfo?.modelURI.scheme !==\n\t\t\t\t\tSchemas.vscodeNotebookCell\n\t\t\t) {\n\t\t\t\t// clear query if focused non-nb editor\n\t\t\t\tWordHighlighter.query = null;\n\t\t\t\tthis._run(); // TODO: @Yoyokrazy -- investigate why we need a full rerun here. likely addressed a case/patch in the first iteration of this feature\n\t\t\t} else {\n\t\t\t\t// remove modelInfo to account for nb cell being disposed\n\t\t\t\tif (WordHighlighter.query?.modelInfo) {\n\t\t\t\t\tWordHighlighter.query.modelInfo = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Cancel any renderDecorationsTimer\n\t\tif (this.renderDecorationsTimer !== -1) {\n\t\t\tclearTimeout(this.renderDecorationsTimer);\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t}\n\n\t\t// Cancel any worker request\n\t\tif (this.workerRequest !== null) {\n\t\t\tthis.workerRequest.cancel();\n\t\t\tthis.workerRequest = null;\n\t\t}\n\n\t\t// Invalidate any worker request callback\n\t\tif (!this.workerRequestCompleted) {\n\t\t\tthis.workerRequestTokenId++;\n\t\t\tthis.workerRequestCompleted = true;\n\t\t}\n\t}\n\n\tprivate _stopAll(preservedModel?: URI): void {\n\t\t// Remove any existing decorations\n\t\t// TODO: @Yoyokrazy -- this triggers as notebooks scroll, causing highlights to disappear momentarily.\n\t\t// maybe a nb type check?\n\t\tthis._removeAllDecorations(preservedModel);\n\n\t\t// Cancel any renderDecorationsTimer\n\t\tif (this.renderDecorationsTimer !== -1) {\n\t\t\tclearTimeout(this.renderDecorationsTimer);\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t}\n\n\t\t// Cancel any worker request\n\t\tif (this.workerRequest !== null) {\n\t\t\tthis.workerRequest.cancel();\n\t\t\tthis.workerRequest = null;\n\t\t}\n\n\t\t// Invalidate any worker request callback\n\t\tif (!this.workerRequestCompleted) {\n\t\t\tthis.workerRequestTokenId++;\n\t\t\tthis.workerRequestCompleted = true;\n\t\t}\n\t}\n\n\tprivate _onPositionChanged(e: ICursorPositionChangedEvent): void {\n\t\t// disabled\n\t\tif (this.occurrencesHighlight === \"off\") {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\t// ignore typing & other\n\t\t// need to check if the model is a notebook cell, should not stop if nb\n\t\tif (\n\t\t\te.reason !== CursorChangeReason.Explicit &&\n\t\t\tthis.editor.getModel()?.uri.scheme !== Schemas.vscodeNotebookCell\n\t\t) {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._run();\n\t}\n\n\tprivate _getWord(): IWordAtPosition | null {\n\t\tconst editorSelection = this.editor.getSelection();\n\t\tconst lineNumber = editorSelection.startLineNumber;\n\t\tconst startColumn = editorSelection.startColumn;\n\n\t\tif (this.model.isDisposed()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.model.getWordAtPosition({\n\t\t\tlineNumber: lineNumber,\n\t\t\tcolumn: startColumn,\n\t\t});\n\t}\n\n\tprivate getOtherModelsToHighlight(model: ITextModel): ITextModel[] {\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// notebook case\n\t\tconst isNotebookEditor =\n\t\t\tmodel.uri.scheme === Schemas.vscodeNotebookCell;\n\t\tif (isNotebookEditor) {\n\t\t\tconst currentModels: ITextModel[] = [];\n\t\t\tconst currentEditors = this.codeEditorService.listCodeEditors();\n\t\t\tfor (const editor of currentEditors) {\n\t\t\t\tconst tempModel = editor.getModel();\n\t\t\t\tif (\n\t\t\t\t\ttempModel &&\n\t\t\t\t\ttempModel !== model &&\n\t\t\t\t\ttempModel.uri.scheme === Schemas.vscodeNotebookCell\n\t\t\t\t) {\n\t\t\t\t\tcurrentModels.push(tempModel);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn currentModels;\n\t\t}\n\n\t\t// inline case\n\t\t// ? current works when highlighting outside of an inline diff, highlighting in.\n\t\t// ? broken when highlighting within a diff editor. highlighting the main editor does not work\n\t\t// ? editor group service could be useful here\n\t\tconst currentModels: ITextModel[] = [];\n\t\tconst currentEditors = this.codeEditorService.listCodeEditors();\n\t\tfor (const editor of currentEditors) {\n\t\t\tif (!isDiffEditor(editor)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst diffModel = (editor as IDiffEditor).getModel();\n\t\t\tif (!diffModel) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (model === diffModel.modified) {\n\t\t\t\t// embedded inline chat diff would pass this, allowing highlights\n\t\t\t\t//? currentModels.push(diffModel.original);\n\t\t\t\tcurrentModels.push(diffModel.modified);\n\t\t\t}\n\t\t}\n\t\tif (currentModels.length) {\n\t\t\t// no matching editors have been found\n\t\t\treturn currentModels;\n\t\t}\n\n\t\t// multi-doc OFF\n\t\tif (this.occurrencesHighlight === \"singleFile\") {\n\t\t\treturn [];\n\t\t}\n\n\t\t// multi-doc ON\n\t\tfor (const editor of currentEditors) {\n\t\t\tconst tempModel = editor.getModel();\n\n\t\t\tconst isValidModel = tempModel && tempModel !== model;\n\n\t\t\tif (isValidModel) {\n\t\t\t\tcurrentModels.push(tempModel);\n\t\t\t}\n\t\t}\n\t\treturn currentModels;\n\t}\n\n\tprivate async _run(multiFileConfigChange?: boolean): Promise<void> {\n\t\tconst hasTextFocus = this.editor.hasTextFocus();\n\n\t\tif (hasTextFocus) {\n\t\t\t// has text focus\n\t\t\tconst editorSelection = this.editor.getSelection();\n\n\t\t\t// ignore multiline selection\n\t\t\tif (\n\t\t\t\t!editorSelection ||\n\t\t\t\teditorSelection.startLineNumber !==\n\t\t\t\t\teditorSelection.endLineNumber\n\t\t\t) {\n\t\t\t\tWordHighlighter.query = null;\n\t\t\t\tthis._stopAll();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst startColumn = editorSelection.startColumn;\n\t\t\tconst endColumn = editorSelection.endColumn;\n\n\t\t\tconst word = this._getWord();\n\n\t\t\t// The selection must be inside a word or surround one word at most\n\t\t\tif (\n\t\t\t\t!word ||\n\t\t\t\tword.startColumn > startColumn ||\n\t\t\t\tword.endColumn < endColumn\n\t\t\t) {\n\t\t\t\t// no previous query, nothing to highlight\n\t\t\t\tWordHighlighter.query = null;\n\t\t\t\tthis._stopAll();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tWordHighlighter.query = {\n\t\t\t\tmodelInfo: {\n\t\t\t\t\tmodelURI: this.model.uri,\n\t\t\t\t\tselection: editorSelection,\n\t\t\t\t},\n\t\t\t};\n\t\t} else {\n\t\t\t// new nb cell scrolled in, didChangeModel fires\n\t\t\tif (!WordHighlighter.query) {\n\t\t\t\t// no previous query, nothing to highlight off of\n\t\t\t\tthis._stopAll();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.lastCursorPositionChangeTime = new Date().getTime();\n\n\t\tif (\n\t\t\tisEqual(\n\t\t\t\tthis.editor.getModel().uri,\n\t\t\t\tWordHighlighter.query.modelInfo?.modelURI,\n\t\t\t)\n\t\t) {\n\t\t\t// only trigger new worker requests from the primary model that initiated the query\n\t\t\t// case d)\n\n\t\t\t// check if the new queried word is contained in the range of a stored decoration for this model\n\t\t\tif (!multiFileConfigChange) {\n\t\t\t\tconst currentModelDecorationRanges =\n\t\t\t\t\tthis.decorations.getRanges();\n\t\t\t\tfor (const storedRange of currentModelDecorationRanges) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tstoredRange.containsPosition(this.editor.getPosition())\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// stop all previous actions if new word is highlighted\n\t\t\t// if we trigger the run off a setting change -> multifile highlighting, we do not want to remove decorations from this model\n\t\t\tthis._stopAll(multiFileConfigChange ? this.model.uri : undefined);\n\n\t\t\tconst myRequestId = ++this.workerRequestTokenId;\n\t\t\tthis.workerRequestCompleted = false;\n\n\t\t\tconst otherModelsToHighlight = this.getOtherModelsToHighlight(\n\t\t\t\tthis.editor.getModel(),\n\t\t\t);\n\n\t\t\t// when reaching here, there are two possible states.\n\t\t\t// \t\t1) we have text focus, and a valid query was updated.\n\t\t\t// \t\t2) we do not have text focus, and a valid query is cached.\n\t\t\t// the query will ALWAYS have the correct data for the current highlight request, so it can always be passed to the workerRequest safely\n\t\t\tif (!WordHighlighter.query || !WordHighlighter.query.modelInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst queryModelRef =\n\t\t\t\tawait this.textModelService.createModelReference(\n\t\t\t\t\tWordHighlighter.query.modelInfo.modelURI,\n\t\t\t\t);\n\t\t\tconst queryModel = queryModelRef.object.textEditorModel;\n\t\t\tthis.workerRequest = this.computeWithModel(\n\t\t\t\tqueryModel,\n\t\t\t\tWordHighlighter.query.modelInfo.selection,\n\t\t\t\totherModelsToHighlight,\n\t\t\t);\n\n\t\t\tthis.workerRequest?.result.then((data) => {\n\t\t\t\tif (myRequestId === this.workerRequestTokenId) {\n\t\t\t\t\tthis.workerRequestCompleted = true;\n\t\t\t\t\tthis.workerRequestValue = data || [];\n\t\t\t\t\tthis._beginRenderDecorations();\n\t\t\t\t}\n\t\t\t}, onUnexpectedError);\n\t\t} else if (this.model.uri.scheme === Schemas.vscodeNotebookCell) {\n\t\t\t// new wordHighlighter coming from a different model, NOT the query model, need to create a textModel ref\n\n\t\t\t// this._stopAll(multiFileConfigChange ? this.model.uri : undefined);\n\n\t\t\tconst myRequestId = ++this.workerRequestTokenId;\n\t\t\tthis.workerRequestCompleted = false;\n\n\t\t\tif (!WordHighlighter.query || !WordHighlighter.query.modelInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst queryModelRef =\n\t\t\t\tawait this.textModelService.createModelReference(\n\t\t\t\t\tWordHighlighter.query.modelInfo.modelURI,\n\t\t\t\t);\n\t\t\tconst queryModel = queryModelRef.object.textEditorModel;\n\t\t\tthis.workerRequest = this.computeWithModel(\n\t\t\t\tqueryModel,\n\t\t\t\tWordHighlighter.query.modelInfo.selection,\n\t\t\t\t[this.model],\n\t\t\t);\n\n\t\t\tthis.workerRequest?.result.then((data) => {\n\t\t\t\tif (myRequestId === this.workerRequestTokenId) {\n\t\t\t\t\tthis.workerRequestCompleted = true;\n\t\t\t\t\tthis.workerRequestValue = data || [];\n\t\t\t\t\tthis._beginRenderDecorations();\n\t\t\t\t}\n\t\t\t}, onUnexpectedError);\n\t\t}\n\t}\n\n\tprivate computeWithModel(\n\t\tmodel: ITextModel,\n\t\tselection: Selection,\n\t\totherModels: ITextModel[],\n\t): IOccurenceAtPositionRequest | null {\n\t\tif (otherModels.length) {\n\t\t\treturn computeOccurencesMultiModel(\n\t\t\t\tthis.multiDocumentProviders,\n\t\t\t\tmodel,\n\t\t\t\tselection,\n\t\t\t\tthis.editor.getOption(EditorOption.wordSeparators),\n\t\t\t\totherModels,\n\t\t\t);\n\t\t} else {\n\t\t\treturn computeOccurencesAtPosition(\n\t\t\t\tthis.providers,\n\t\t\t\tmodel,\n\t\t\t\tselection,\n\t\t\t\tthis.editor.getOption(EditorOption.wordSeparators),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _beginRenderDecorations(): void {\n\t\tconst currentTime = new Date().getTime();\n\t\tconst minimumRenderTime = this.lastCursorPositionChangeTime + 250;\n\n\t\tif (currentTime >= minimumRenderTime) {\n\t\t\t// Synchronous\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t\tthis.renderDecorations();\n\t\t} else {\n\t\t\t// Asynchronous\n\t\t\tthis.renderDecorationsTimer = setTimeout(() => {\n\t\t\t\tthis.renderDecorations();\n\t\t\t}, minimumRenderTime - currentTime);\n\t\t}\n\t}\n\n\tprivate renderDecorations(): void {\n\t\tthis.renderDecorationsTimer = -1;\n\t\t// create new loop, iterate over current editors using this.codeEditorService.listCodeEditors(),\n\t\t// if the URI of that codeEditor is in the map, then add the decorations to the decorations array\n\t\t// then set the decorations for the editor\n\t\tconst currentEditors = this.codeEditorService.listCodeEditors();\n\t\tfor (const editor of currentEditors) {\n\t\t\tconst editorHighlighterContrib =\n\t\t\t\tWordHighlighterContribution.get(editor);\n\t\t\tif (!editorHighlighterContrib) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newDecorations: IModelDeltaDecoration[] = [];\n\t\t\tconst uri = editor.getModel()?.uri;\n\t\t\tif (uri && this.workerRequestValue.has(uri)) {\n\t\t\t\tconst oldDecorationIDs: string[] | undefined =\n\t\t\t\t\tWordHighlighter.storedDecorationIDs.get(uri);\n\t\t\t\tconst newDocumentHighlights = this.workerRequestValue.get(uri);\n\t\t\t\tif (newDocumentHighlights) {\n\t\t\t\t\tfor (const highlight of newDocumentHighlights) {\n\t\t\t\t\t\tif (!highlight.range) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewDecorations.push({\n\t\t\t\t\t\t\trange: highlight.range,\n\t\t\t\t\t\t\toptions: getHighlightDecorationOptions(\n\t\t\t\t\t\t\t\thighlight.kind,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet newDecorationIDs: string[] = [];\n\t\t\t\teditor.changeDecorations((changeAccessor) => {\n\t\t\t\t\tnewDecorationIDs = changeAccessor.deltaDecorations(\n\t\t\t\t\t\toldDecorationIDs ?? [],\n\t\t\t\t\t\tnewDecorations,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tWordHighlighter.storedDecorationIDs =\n\t\t\t\t\tWordHighlighter.storedDecorationIDs.set(\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tnewDecorationIDs,\n\t\t\t\t\t);\n\n\t\t\t\tif (newDecorations.length > 0) {\n\t\t\t\t\teditorHighlighterContrib.wordHighlighter?.decorations.set(\n\t\t\t\t\t\tnewDecorations,\n\t\t\t\t\t);\n\t\t\t\t\teditorHighlighterContrib.wordHighlighter?._hasWordHighlights.set(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// clear the worker request when decorations are completed\n\t\tthis.workerRequest = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._stopSingular();\n\t\tthis.toUnhook.dispose();\n\t}\n}\n\nexport class WordHighlighterContribution\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.contrib.wordHighlighter\";\n\n\tpublic static get(editor: ICodeEditor): WordHighlighterContribution | null {\n\t\treturn editor.getContribution<WordHighlighterContribution>(\n\t\t\tWordHighlighterContribution.ID,\n\t\t);\n\t}\n\n\tprivate _wordHighlighter: WordHighlighter | null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService\n\t\tlanguageFeaturesService: ILanguageFeaturesService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t) {\n\t\tsuper();\n\t\tthis._wordHighlighter = null;\n\t\tconst createWordHighlighterIfPossible = () => {\n\t\t\tif (\n\t\t\t\teditor.hasModel() &&\n\t\t\t\t!editor.getModel().isTooLargeForTokenization()\n\t\t\t) {\n\t\t\t\tthis._wordHighlighter = new WordHighlighter(\n\t\t\t\t\teditor,\n\t\t\t\t\tlanguageFeaturesService.documentHighlightProvider,\n\t\t\t\t\tlanguageFeaturesService.multiDocumentHighlightProvider,\n\t\t\t\t\tcontextKeyService,\n\t\t\t\t\ttextModelService,\n\t\t\t\t\tcodeEditorService,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tthis._register(\n\t\t\teditor.onDidChangeModel((e) => {\n\t\t\t\tif (this._wordHighlighter) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!e.newModelUrl &&\n\t\t\t\t\t\te.oldModelUrl?.scheme !== Schemas.vscodeNotebookCell\n\t\t\t\t\t) {\n\t\t\t\t\t\t// happens when switching tabs to a notebook that has focus in the cell list, no new model URI (this also doesn't make it to the wordHighlighter, bc no editor.hasModel)\n\t\t\t\t\t\tthis.wordHighlighter?.stop();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._wordHighlighter.dispose();\n\t\t\t\t\tthis._wordHighlighter = null;\n\t\t\t\t}\n\t\t\t\tcreateWordHighlighterIfPossible();\n\t\t\t}),\n\t\t);\n\t\tcreateWordHighlighterIfPossible();\n\t}\n\n\tpublic get wordHighlighter(): WordHighlighter | null {\n\t\treturn this._wordHighlighter;\n\t}\n\n\tpublic saveViewState(): boolean {\n\t\tif (this._wordHighlighter && this._wordHighlighter.hasDecorations()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic moveNext() {\n\t\tthis._wordHighlighter?.moveNext();\n\t}\n\n\tpublic moveBack() {\n\t\tthis._wordHighlighter?.moveBack();\n\t}\n\n\tpublic restoreViewState(state: boolean | undefined): void {\n\t\tif (this._wordHighlighter && state) {\n\t\t\tthis._wordHighlighter.restore();\n\t\t}\n\t}\n\n\tpublic stopHighlighting() {\n\t\tthis._wordHighlighter?.stop();\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._wordHighlighter) {\n\t\t\tthis._wordHighlighter.dispose();\n\t\t\tthis._wordHighlighter = null;\n\t\t}\n\t\tsuper.dispose();\n\t}\n}\n\nclass WordHighlightNavigationAction extends EditorAction {\n\tprivate readonly _isNext: boolean;\n\n\tconstructor(next: boolean, opts: IActionOptions) {\n\t\tsuper(opts);\n\t\tthis._isNext = next;\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = WordHighlighterContribution.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isNext) {\n\t\t\tcontroller.moveNext();\n\t\t} else {\n\t\t\tcontroller.moveBack();\n\t\t}\n\t}\n}\n\nclass NextWordHighlightAction extends WordHighlightNavigationAction {\n\tconstructor() {\n\t\tsuper(true, {\n\t\t\tid: \"editor.action.wordHighlight.next\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"wordHighlight.next.label\",\n\t\t\t\t\"Go to Next Symbol Highlight\",\n\t\t\t),\n\t\t\talias: \"Go to Next Symbol Highlight\",\n\t\t\tprecondition: ctxHasWordHighlights,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n}\n\nclass PrevWordHighlightAction extends WordHighlightNavigationAction {\n\tconstructor() {\n\t\tsuper(false, {\n\t\t\tid: \"editor.action.wordHighlight.prev\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"wordHighlight.previous.label\",\n\t\t\t\t\"Go to Previous Symbol Highlight\",\n\t\t\t),\n\t\t\talias: \"Go to Previous Symbol Highlight\",\n\t\t\tprecondition: ctxHasWordHighlights,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n}\n\nclass TriggerWordHighlightAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.wordHighlight.trigger\",\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"wordHighlight.trigger.label\",\n\t\t\t\t\"Trigger Symbol Highlight\",\n\t\t\t),\n\t\t\talias: \"Trigger Symbol Highlight\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\tconst controller = WordHighlighterContribution.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.restoreViewState(true);\n\t}\n}\n\nregisterEditorContribution(\n\tWordHighlighterContribution.ID,\n\tWordHighlighterContribution,\n\tEditorContributionInstantiation.Eager,\n); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(NextWordHighlightAction);\nregisterEditorAction(PrevWordHighlightAction);\nregisterEditorAction(TriggerWordHighlightAction);\nregisterEditorFeature(TextualMultiDocumentHighlightFeature);\n"],
  "mappings": "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",
  "names": ["currentModels", "currentEditors"]
}
