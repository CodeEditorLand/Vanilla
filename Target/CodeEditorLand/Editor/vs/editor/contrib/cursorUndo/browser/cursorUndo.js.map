{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/cursorUndo/browser/cursorUndo.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorContributionInstantiation,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport type { Selection } from \"../../../common/core/selection.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\n\nclass CursorState {\n\treadonly selections: readonly Selection[];\n\n\tconstructor(selections: readonly Selection[]) {\n\t\tthis.selections = selections;\n\t}\n\n\tpublic equals(other: CursorState): boolean {\n\t\tconst thisLen = this.selections.length;\n\t\tconst otherLen = other.selections.length;\n\t\tif (thisLen !== otherLen) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < thisLen; i++) {\n\t\t\tif (!this.selections[i].equalsSelection(other.selections[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nclass StackElement {\n\tconstructor(\n\t\tpublic readonly cursorState: CursorState,\n\t\tpublic readonly scrollTop: number,\n\t\tpublic readonly scrollLeft: number,\n\t) {}\n}\n\nexport class CursorUndoRedoController\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.contrib.cursorUndoRedoController\";\n\n\tpublic static get(editor: ICodeEditor): CursorUndoRedoController | null {\n\t\treturn editor.getContribution<CursorUndoRedoController>(\n\t\t\tCursorUndoRedoController.ID,\n\t\t);\n\t}\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate _isCursorUndoRedo: boolean;\n\n\tprivate _undoStack: StackElement[];\n\tprivate _redoStack: StackElement[];\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._isCursorUndoRedo = false;\n\n\t\tthis._undoStack = [];\n\t\tthis._redoStack = [];\n\n\t\tthis._register(\n\t\t\teditor.onDidChangeModel((e) => {\n\t\t\t\tthis._undoStack = [];\n\t\t\t\tthis._redoStack = [];\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\teditor.onDidChangeModelContent((e) => {\n\t\t\t\tthis._undoStack = [];\n\t\t\t\tthis._redoStack = [];\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\teditor.onDidChangeCursorSelection((e) => {\n\t\t\t\tif (this._isCursorUndoRedo) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!e.oldSelections) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (e.oldModelVersionId !== e.modelVersionId) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst prevState = new CursorState(e.oldSelections);\n\t\t\t\tconst isEqualToLastUndoStack =\n\t\t\t\t\tthis._undoStack.length > 0 &&\n\t\t\t\t\tthis._undoStack[\n\t\t\t\t\t\tthis._undoStack.length - 1\n\t\t\t\t\t].cursorState.equals(prevState);\n\t\t\t\tif (!isEqualToLastUndoStack) {\n\t\t\t\t\tthis._undoStack.push(\n\t\t\t\t\t\tnew StackElement(\n\t\t\t\t\t\t\tprevState,\n\t\t\t\t\t\t\teditor.getScrollTop(),\n\t\t\t\t\t\t\teditor.getScrollLeft(),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tthis._redoStack = [];\n\t\t\t\t\tif (this._undoStack.length > 50) {\n\t\t\t\t\t\t// keep the cursor undo stack bounded\n\t\t\t\t\t\tthis._undoStack.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tpublic cursorUndo(): void {\n\t\tif (!this._editor.hasModel() || this._undoStack.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._redoStack.push(\n\t\t\tnew StackElement(\n\t\t\t\tnew CursorState(this._editor.getSelections()),\n\t\t\t\tthis._editor.getScrollTop(),\n\t\t\t\tthis._editor.getScrollLeft(),\n\t\t\t),\n\t\t);\n\t\tthis._applyState(this._undoStack.pop()!);\n\t}\n\n\tpublic cursorRedo(): void {\n\t\tif (!this._editor.hasModel() || this._redoStack.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._undoStack.push(\n\t\t\tnew StackElement(\n\t\t\t\tnew CursorState(this._editor.getSelections()),\n\t\t\t\tthis._editor.getScrollTop(),\n\t\t\t\tthis._editor.getScrollLeft(),\n\t\t\t),\n\t\t);\n\t\tthis._applyState(this._redoStack.pop()!);\n\t}\n\n\tprivate _applyState(stackElement: StackElement): void {\n\t\tthis._isCursorUndoRedo = true;\n\t\tthis._editor.setSelections(stackElement.cursorState.selections);\n\t\tthis._editor.setScrollPosition({\n\t\t\tscrollTop: stackElement.scrollTop,\n\t\t\tscrollLeft: stackElement.scrollLeft,\n\t\t});\n\t\tthis._isCursorUndoRedo = false;\n\t}\n}\n\nexport class CursorUndo extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"cursorUndo\",\n\t\t\tlabel: nls.localize(\"cursor.undo\", \"Cursor Undo\"),\n\t\t\talias: \"Cursor Undo\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyU,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\tCursorUndoRedoController.get(editor)?.cursorUndo();\n\t}\n}\n\nexport class CursorRedo extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"cursorRedo\",\n\t\t\tlabel: nls.localize(\"cursor.redo\", \"Cursor Redo\"),\n\t\t\talias: \"Cursor Redo\",\n\t\t\tprecondition: undefined,\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\tCursorUndoRedoController.get(editor)?.cursorRedo();\n\t}\n}\n\nregisterEditorContribution(\n\tCursorUndoRedoController.ID,\n\tCursorUndoRedoController,\n\tEditorContributionInstantiation.Eager,\n); // eager because it needs to listen to record cursor state ASAP\nregisterEditorAction(CursorUndo);\nregisterEditorAction(CursorRedo);\n"],
  "mappings": "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",
  "names": []
}
