import{KeyCode as u,KeyMod as h}from"../../../../base/common/keyCodes.js";import{Disposable as p}from"../../../../base/common/lifecycle.js";import*as l from"../../../../nls.js";import{KeybindingWeight as S}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import"../../../browser/editorBrowser.js";import{EditorAction as c,EditorContributionInstantiation as _,registerEditorAction as a,registerEditorContribution as C}from"../../../browser/editorExtensions.js";import"../../../common/core/selection.js";import"../../../common/editorCommon.js";import{EditorContextKeys as g}from"../../../common/editorContextKeys.js";class n{selections;constructor(o){this.selections=o}equals(o){const t=this.selections.length,e=o.selections.length;if(t!==e)return!1;for(let i=0;i<t;i++)if(!this.selections[i].equalsSelection(o.selections[i]))return!1;return!0}}class d{constructor(o,t,e){this.cursorState=o;this.scrollTop=t;this.scrollLeft=e}}class r extends p{static ID="editor.contrib.cursorUndoRedoController";static get(o){return o.getContribution(r.ID)}_editor;_isCursorUndoRedo;_undoStack;_redoStack;constructor(o){super(),this._editor=o,this._isCursorUndoRedo=!1,this._undoStack=[],this._redoStack=[],this._register(o.onDidChangeModel(t=>{this._undoStack=[],this._redoStack=[]})),this._register(o.onDidChangeModelContent(t=>{this._undoStack=[],this._redoStack=[]})),this._register(o.onDidChangeCursorSelection(t=>{if(this._isCursorUndoRedo||!t.oldSelections||t.oldModelVersionId!==t.modelVersionId)return;const e=new n(t.oldSelections);this._undoStack.length>0&&this._undoStack[this._undoStack.length-1].cursorState.equals(e)||(this._undoStack.push(new d(e,o.getScrollTop(),o.getScrollLeft())),this._redoStack=[],this._undoStack.length>50&&this._undoStack.shift())}))}cursorUndo(){!this._editor.hasModel()||this._undoStack.length===0||(this._redoStack.push(new d(new n(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._undoStack.pop()))}cursorRedo(){!this._editor.hasModel()||this._redoStack.length===0||(this._undoStack.push(new d(new n(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._redoStack.pop()))}_applyState(o){this._isCursorUndoRedo=!0,this._editor.setSelections(o.cursorState.selections),this._editor.setScrollPosition({scrollTop:o.scrollTop,scrollLeft:o.scrollLeft}),this._isCursorUndoRedo=!1}}class f extends c{constructor(){super({id:"cursorUndo",label:l.localize("cursor.undo","Cursor Undo"),alias:"Cursor Undo",precondition:void 0,kbOpts:{kbExpr:g.textInputFocus,primary:h.CtrlCmd|u.KeyU,weight:S.EditorContrib}})}run(o,t,e){r.get(t)?.cursorUndo()}}class b extends c{constructor(){super({id:"cursorRedo",label:l.localize("cursor.redo","Cursor Redo"),alias:"Cursor Redo",precondition:void 0})}run(o,t,e){r.get(t)?.cursorRedo()}}C(r.ID,r,_.Eager),a(f),a(b);export{b as CursorRedo,f as CursorUndo,r as CursorUndoRedoController};
