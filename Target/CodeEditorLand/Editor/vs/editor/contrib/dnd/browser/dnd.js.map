{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/dnd/browser/dnd.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { IMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { ICodeEditor, IEditorMouseEvent, IMouseTarget, IPartialEditorMouseEvent, MouseTargetType } from '../../../browser/editorBrowser.js';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { CodeEditorWidget } from '../../../browser/widget/codeEditor/codeEditorWidget.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { CursorChangeReason } from '../../../common/cursorEvents.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorContribution, IEditorDecorationsCollection, ScrollType } from '../../../common/editorCommon.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\n\nfunction hasTriggerModifier(e: IKeyboardEvent | IMouseEvent): boolean {\n\tif (isMacintosh) {\n\t\treturn e.altKey;\n\t} else {\n\t\treturn e.ctrlKey;\n\t}\n}\n\nexport class DragAndDropController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.dragAndDrop';\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate _dragSelection: Selection | null;\n\tprivate readonly _dndDecorationIds: IEditorDecorationsCollection;\n\tprivate _mouseDown: boolean;\n\tprivate _modifierPressed: boolean;\n\tstatic readonly TRIGGER_KEY_VALUE = isMacintosh ? KeyCode.Alt : KeyCode.Ctrl;\n\n\tstatic get(editor: ICodeEditor): DragAndDropController | null {\n\t\treturn editor.getContribution<DragAndDropController>(DragAndDropController.ID);\n\t}\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._dndDecorationIds = this._editor.createDecorationsCollection();\n\t\tthis._register(this._editor.onMouseDown((e: IEditorMouseEvent) => this._onEditorMouseDown(e)));\n\t\tthis._register(this._editor.onMouseUp((e: IEditorMouseEvent) => this._onEditorMouseUp(e)));\n\t\tthis._register(this._editor.onMouseDrag((e: IEditorMouseEvent) => this._onEditorMouseDrag(e)));\n\t\tthis._register(this._editor.onMouseDrop((e: IPartialEditorMouseEvent) => this._onEditorMouseDrop(e)));\n\t\tthis._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n\t\tthis._register(this._editor.onKeyDown((e: IKeyboardEvent) => this.onEditorKeyDown(e)));\n\t\tthis._register(this._editor.onKeyUp((e: IKeyboardEvent) => this.onEditorKeyUp(e)));\n\t\tthis._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n\t\tthis._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n\t\tthis._mouseDown = false;\n\t\tthis._modifierPressed = false;\n\t\tthis._dragSelection = null;\n\t}\n\n\tprivate onEditorBlur() {\n\t\tthis._removeDecoration();\n\t\tthis._dragSelection = null;\n\t\tthis._mouseDown = false;\n\t\tthis._modifierPressed = false;\n\t}\n\n\tprivate onEditorKeyDown(e: IKeyboardEvent): void {\n\t\tif (!this._editor.getOption(EditorOption.dragAndDrop) || this._editor.getOption(EditorOption.columnSelection)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (hasTriggerModifier(e)) {\n\t\t\tthis._modifierPressed = true;\n\t\t}\n\n\t\tif (this._mouseDown && hasTriggerModifier(e)) {\n\t\t\tthis._editor.updateOptions({\n\t\t\t\tmouseStyle: 'copy'\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onEditorKeyUp(e: IKeyboardEvent): void {\n\t\tif (!this._editor.getOption(EditorOption.dragAndDrop) || this._editor.getOption(EditorOption.columnSelection)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (hasTriggerModifier(e)) {\n\t\t\tthis._modifierPressed = false;\n\t\t}\n\n\t\tif (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n\t\t\tthis._editor.updateOptions({\n\t\t\t\tmouseStyle: 'default'\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _onEditorMouseDown(mouseEvent: IEditorMouseEvent): void {\n\t\tthis._mouseDown = true;\n\t}\n\n\tprivate _onEditorMouseUp(mouseEvent: IEditorMouseEvent): void {\n\t\tthis._mouseDown = false;\n\t\t// Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n\t\tthis._editor.updateOptions({\n\t\t\tmouseStyle: 'text'\n\t\t});\n\t}\n\n\tprivate _onEditorMouseDrag(mouseEvent: IEditorMouseEvent): void {\n\t\tconst target = mouseEvent.target;\n\n\t\tif (this._dragSelection === null) {\n\t\t\tconst selections = this._editor.getSelections() || [];\n\t\t\tconst possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n\t\t\tif (possibleSelections.length === 1) {\n\t\t\t\tthis._dragSelection = possibleSelections[0];\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (hasTriggerModifier(mouseEvent.event)) {\n\t\t\tthis._editor.updateOptions({\n\t\t\t\tmouseStyle: 'copy'\n\t\t\t});\n\t\t} else {\n\t\t\tthis._editor.updateOptions({\n\t\t\t\tmouseStyle: 'default'\n\t\t\t});\n\t\t}\n\n\t\tif (target.position) {\n\t\t\tif (this._dragSelection.containsPosition(target.position)) {\n\t\t\t\tthis._removeDecoration();\n\t\t\t} else {\n\t\t\t\tthis.showAt(target.position);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _onEditorMouseDropCanceled() {\n\t\tthis._editor.updateOptions({\n\t\t\tmouseStyle: 'text'\n\t\t});\n\n\t\tthis._removeDecoration();\n\t\tthis._dragSelection = null;\n\t\tthis._mouseDown = false;\n\t}\n\n\tprivate _onEditorMouseDrop(mouseEvent: IPartialEditorMouseEvent): void {\n\t\tif (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n\t\t\tconst newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n\n\t\t\tif (this._dragSelection === null) {\n\t\t\t\tlet newSelections: Selection[] | null = null;\n\t\t\t\tif (mouseEvent.event.shiftKey) {\n\t\t\t\t\tconst primarySelection = this._editor.getSelection();\n\t\t\t\t\tif (primarySelection) {\n\t\t\t\t\t\tconst { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n\t\t\t\t\t\tnewSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewSelections = (this._editor.getSelections() || []).map(selection => {\n\t\t\t\t\t\tif (selection.containsPosition(newCursorPosition)) {\n\t\t\t\t\t\t\treturn new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn selection;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n\t\t\t\t(<CodeEditorWidget>this._editor).setSelections(newSelections || [], 'mouse', CursorChangeReason.Explicit);\n\t\t\t} else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n\t\t\t\t(\n\t\t\t\t\t(\n\t\t\t\t\t\thasTriggerModifier(mouseEvent.event) ||\n\t\t\t\t\t\tthis._modifierPressed\n\t\t\t\t\t) && (\n\t\t\t\t\t\tthis._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)\n\t\t\t\t\t) // we allow users to paste content beside the selection\n\t\t\t\t)) {\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t\tthis._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t}\n\t\t}\n\n\t\tthis._editor.updateOptions({\n\t\t\tmouseStyle: 'text'\n\t\t});\n\n\t\tthis._removeDecoration();\n\t\tthis._dragSelection = null;\n\t\tthis._mouseDown = false;\n\t}\n\n\tprivate static readonly _DECORATION_OPTIONS = ModelDecorationOptions.register({\n\t\tdescription: 'dnd-target',\n\t\tclassName: 'dnd-target'\n\t});\n\n\tpublic showAt(position: Position): void {\n\t\tthis._dndDecorationIds.set([{\n\t\t\trange: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n\t\t\toptions: DragAndDropController._DECORATION_OPTIONS\n\t\t}]);\n\t\tthis._editor.revealPosition(position, ScrollType.Immediate);\n\t}\n\n\tprivate _removeDecoration(): void {\n\t\tthis._dndDecorationIds.clear();\n\t}\n\n\tprivate _hitContent(target: IMouseTarget): boolean {\n\t\treturn target.type === MouseTargetType.CONTENT_TEXT ||\n\t\t\ttarget.type === MouseTargetType.CONTENT_EMPTY;\n\t}\n\n\tprivate _hitMargin(target: IMouseTarget): boolean {\n\t\treturn target.type === MouseTargetType.GUTTER_GLYPH_MARGIN ||\n\t\t\ttarget.type === MouseTargetType.GUTTER_LINE_NUMBERS ||\n\t\t\ttarget.type === MouseTargetType.GUTTER_LINE_DECORATIONS;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._removeDecoration();\n\t\tthis._dragSelection = null;\n\t\tthis._mouseDown = false;\n\t\tthis._modifierPressed = false;\n\t\tsuper.dispose();\n\t}\n}\n\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController, EditorContributionInstantiation.BeforeFirstInteraction);\n"],
  "mappings": "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",
  "names": []
}
