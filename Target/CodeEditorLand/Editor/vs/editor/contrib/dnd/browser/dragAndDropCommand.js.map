{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/dnd/browser/dragAndDropCommand.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport type {\n\tICommand,\n\tICursorStateComputerData,\n\tIEditOperationBuilder,\n} from \"../../../common/editorCommon.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\n\nexport class DragAndDropCommand implements ICommand {\n\tprivate readonly selection: Selection;\n\tprivate readonly targetPosition: Position;\n\tprivate targetSelection: Selection | null;\n\tprivate readonly copy: boolean;\n\n\tconstructor(selection: Selection, targetPosition: Position, copy: boolean) {\n\t\tthis.selection = selection;\n\t\tthis.targetPosition = targetPosition;\n\t\tthis.copy = copy;\n\t\tthis.targetSelection = null;\n\t}\n\n\tpublic getEditOperations(\n\t\tmodel: ITextModel,\n\t\tbuilder: IEditOperationBuilder,\n\t): void {\n\t\tconst text = model.getValueInRange(this.selection);\n\t\tif (!this.copy) {\n\t\t\tbuilder.addEditOperation(this.selection, null);\n\t\t}\n\t\tbuilder.addEditOperation(\n\t\t\tnew Range(\n\t\t\t\tthis.targetPosition.lineNumber,\n\t\t\t\tthis.targetPosition.column,\n\t\t\t\tthis.targetPosition.lineNumber,\n\t\t\t\tthis.targetPosition.column,\n\t\t\t),\n\t\t\ttext,\n\t\t);\n\n\t\tif (\n\t\t\tthis.selection.containsPosition(this.targetPosition) &&\n\t\t\t!(\n\t\t\t\t(\n\t\t\t\t\tthis.copy &&\n\t\t\t\t\t(this.selection\n\t\t\t\t\t\t.getEndPosition()\n\t\t\t\t\t\t.equals(this.targetPosition) ||\n\t\t\t\t\t\tthis.selection\n\t\t\t\t\t\t\t.getStartPosition()\n\t\t\t\t\t\t\t.equals(this.targetPosition))\n\t\t\t\t) // we allow users to paste content beside the selection\n\t\t\t)\n\t\t) {\n\t\t\tthis.targetSelection = this.selection;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.copy) {\n\t\t\tthis.targetSelection = new Selection(\n\t\t\t\tthis.targetPosition.lineNumber,\n\t\t\t\tthis.targetPosition.column,\n\t\t\t\tthis.selection.endLineNumber -\n\t\t\t\t\tthis.selection.startLineNumber +\n\t\t\t\t\tthis.targetPosition.lineNumber,\n\t\t\t\tthis.selection.startLineNumber === this.selection.endLineNumber\n\t\t\t\t\t? this.targetPosition.column +\n\t\t\t\t\t\t\tthis.selection.endColumn -\n\t\t\t\t\t\t\tthis.selection.startColumn\n\t\t\t\t\t: this.selection.endColumn,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n\t\t\t// Drag the selection downwards\n\t\t\tthis.targetSelection = new Selection(\n\t\t\t\tthis.targetPosition.lineNumber -\n\t\t\t\t\tthis.selection.endLineNumber +\n\t\t\t\t\tthis.selection.startLineNumber,\n\t\t\t\tthis.targetPosition.column,\n\t\t\t\tthis.targetPosition.lineNumber,\n\t\t\t\tthis.selection.startLineNumber === this.selection.endLineNumber\n\t\t\t\t\t? this.targetPosition.column +\n\t\t\t\t\t\t\tthis.selection.endColumn -\n\t\t\t\t\t\t\tthis.selection.startColumn\n\t\t\t\t\t: this.selection.endColumn,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n\t\t\t// Drag the selection upwards\n\t\t\tthis.targetSelection = new Selection(\n\t\t\t\tthis.targetPosition.lineNumber,\n\t\t\t\tthis.targetPosition.column,\n\t\t\t\tthis.targetPosition.lineNumber +\n\t\t\t\t\tthis.selection.endLineNumber -\n\t\t\t\t\tthis.selection.startLineNumber,\n\t\t\t\tthis.selection.startLineNumber === this.selection.endLineNumber\n\t\t\t\t\t? this.targetPosition.column +\n\t\t\t\t\t\t\tthis.selection.endColumn -\n\t\t\t\t\t\t\tthis.selection.startColumn\n\t\t\t\t\t: this.selection.endColumn,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// The target position is at the same line as the selection's end position.\n\t\tif (this.selection.endColumn <= this.targetPosition.column) {\n\t\t\t// The target position is after the selection's end position\n\t\t\tthis.targetSelection = new Selection(\n\t\t\t\tthis.targetPosition.lineNumber -\n\t\t\t\t\tthis.selection.endLineNumber +\n\t\t\t\t\tthis.selection.startLineNumber,\n\t\t\t\tthis.selection.startLineNumber === this.selection.endLineNumber\n\t\t\t\t\t? this.targetPosition.column -\n\t\t\t\t\t\t\tthis.selection.endColumn +\n\t\t\t\t\t\t\tthis.selection.startColumn\n\t\t\t\t\t: this.targetPosition.column -\n\t\t\t\t\t\t\tthis.selection.endColumn +\n\t\t\t\t\t\t\tthis.selection.startColumn,\n\t\t\t\tthis.targetPosition.lineNumber,\n\t\t\t\tthis.selection.startLineNumber === this.selection.endLineNumber\n\t\t\t\t\t? this.targetPosition.column\n\t\t\t\t\t: this.selection.endColumn,\n\t\t\t);\n\t\t} else {\n\t\t\t// The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n\t\t\tthis.targetSelection = new Selection(\n\t\t\t\tthis.targetPosition.lineNumber -\n\t\t\t\t\tthis.selection.endLineNumber +\n\t\t\t\t\tthis.selection.startLineNumber,\n\t\t\t\tthis.targetPosition.column,\n\t\t\t\tthis.targetPosition.lineNumber,\n\t\t\t\tthis.targetPosition.column +\n\t\t\t\t\tthis.selection.endColumn -\n\t\t\t\t\tthis.selection.startColumn,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic computeCursorState(\n\t\tmodel: ITextModel,\n\t\thelper: ICursorStateComputerData,\n\t): Selection {\n\t\treturn this.targetSelection!;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
