{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/editorState/test/browser/editorState.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { CodeEditorStateFlag, EditorState } from '../../browser/editorState.js';\n\ninterface IStubEditorState {\n\tmodel?: { uri?: URI; version?: number };\n\tposition?: Position;\n\tselection?: Selection;\n\tscroll?: { left?: number; top?: number };\n}\n\nsuite('Editor Core - Editor State', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst allFlags = (\n\t\tCodeEditorStateFlag.Value\n\t\t| CodeEditorStateFlag.Selection\n\t\t| CodeEditorStateFlag.Position\n\t\t| CodeEditorStateFlag.Scroll\n\t);\n\n\ttest('empty editor state should be valid', () => {\n\t\tconst result = validate({}, {});\n\t\tassert.strictEqual(result, true);\n\t});\n\n\ttest('different model URIs should be invalid', () => {\n\t\tconst result = validate(\n\t\t\t{ model: { uri: URI.parse('http://test1') } },\n\t\t\t{ model: { uri: URI.parse('http://test2') } }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\ttest('different model versions should be invalid', () => {\n\t\tconst result = validate(\n\t\t\t{ model: { version: 1 } },\n\t\t\t{ model: { version: 2 } }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\ttest('different positions should be invalid', () => {\n\t\tconst result = validate(\n\t\t\t{ position: new Position(1, 2) },\n\t\t\t{ position: new Position(2, 3) }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\ttest('different selections should be invalid', () => {\n\t\tconst result = validate(\n\t\t\t{ selection: new Selection(1, 2, 3, 4) },\n\t\t\t{ selection: new Selection(5, 2, 3, 4) }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\ttest('different scroll positions should be invalid', () => {\n\t\tconst result = validate(\n\t\t\t{ scroll: { left: 1, top: 2 } },\n\t\t\t{ scroll: { left: 3, top: 2 } }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\n\tfunction validate(source: IStubEditorState, target: IStubEditorState) {\n\t\tconst sourceEditor = createEditor(source),\n\t\t\ttargetEditor = createEditor(target);\n\n\t\tconst result = new EditorState(sourceEditor, allFlags).validate(targetEditor);\n\n\t\treturn result;\n\t}\n\n\tfunction createEditor({ model, position, selection, scroll }: IStubEditorState = {}): ICodeEditor {\n\t\tconst mappedModel = model ? { uri: model.uri ? model.uri : URI.parse('http://dummy.org'), getVersionId: () => model.version } : null;\n\n\t\treturn {\n\t\t\tgetModel: (): ITextModel => <any>mappedModel,\n\t\t\tgetPosition: (): Position | undefined => position,\n\t\t\tgetSelection: (): Selection | undefined => selection,\n\t\t\tgetScrollLeft: (): number | undefined => scroll && scroll.left,\n\t\t\tgetScrollTop: (): number | undefined => scroll && scroll.top\n\t\t} as ICodeEditor;\n\t}\n\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,WAAW;AACpB,SAAS,+CAA+C;AACxD,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAC3B,SAAS,qBAAqB,mBAAmB;AASjD,MAAM,8BAA8B,MAAM;AAEzC,0CAAwC;AAExC,QAAM,WACL,oBAAoB,QAClB,oBAAoB,YACpB,oBAAoB,WACpB,oBAAoB;AAGvB,OAAK,sCAAsC,MAAM;AAChD,UAAM,SAAS,SAAS,CAAC,GAAG,CAAC,CAAC;AAC9B,WAAO,YAAY,QAAQ,IAAI;AAAA,EAChC,CAAC;AAED,OAAK,0CAA0C,MAAM;AACpD,UAAM,SAAS;AAAA,MACd,EAAE,OAAO,EAAE,KAAK,IAAI,MAAM,cAAc,EAAE,EAAE;AAAA,MAC5C,EAAE,OAAO,EAAE,KAAK,IAAI,MAAM,cAAc,EAAE,EAAE;AAAA,IAC7C;AAEA,WAAO,YAAY,QAAQ,KAAK;AAAA,EACjC,CAAC;AAED,OAAK,8CAA8C,MAAM;AACxD,UAAM,SAAS;AAAA,MACd,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE;AAAA,MACxB,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE;AAAA,IACzB;AAEA,WAAO,YAAY,QAAQ,KAAK;AAAA,EACjC,CAAC;AAED,OAAK,yCAAyC,MAAM;AACnD,UAAM,SAAS;AAAA,MACd,EAAE,UAAU,IAAI,SAAS,GAAG,CAAC,EAAE;AAAA,MAC/B,EAAE,UAAU,IAAI,SAAS,GAAG,CAAC,EAAE;AAAA,IAChC;AAEA,WAAO,YAAY,QAAQ,KAAK;AAAA,EACjC,CAAC;AAED,OAAK,0CAA0C,MAAM;AACpD,UAAM,SAAS;AAAA,MACd,EAAE,WAAW,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE;AAAA,MACvC,EAAE,WAAW,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE;AAAA,IACxC;AAEA,WAAO,YAAY,QAAQ,KAAK;AAAA,EACjC,CAAC;AAED,OAAK,gDAAgD,MAAM;AAC1D,UAAM,SAAS;AAAA,MACd,EAAE,QAAQ,EAAE,MAAM,GAAG,KAAK,EAAE,EAAE;AAAA,MAC9B,EAAE,QAAQ,EAAE,MAAM,GAAG,KAAK,EAAE,EAAE;AAAA,IAC/B;AAEA,WAAO,YAAY,QAAQ,KAAK;AAAA,EACjC,CAAC;AAGD,WAAS,SAAS,QAA0B,QAA0B;AACrE,UAAM,eAAe,aAAa,MAAM,GACvC,eAAe,aAAa,MAAM;AAEnC,UAAM,SAAS,IAAI,YAAY,cAAc,QAAQ,EAAE,SAAS,YAAY;AAE5E,WAAO;AAAA,EACR;AAPS;AAST,WAAS,aAAa,EAAE,OAAO,UAAU,WAAW,OAAO,IAAsB,CAAC,GAAgB;AACjG,UAAM,cAAc,QAAQ,EAAE,KAAK,MAAM,MAAM,MAAM,MAAM,IAAI,MAAM,kBAAkB,GAAG,cAAc,6BAAM,MAAM,SAAZ,gBAAoB,IAAI;AAEhI,WAAO;AAAA,MACN,UAAU,6BAAuB,aAAvB;AAAA,MACV,aAAa,6BAA4B,UAA5B;AAAA,MACb,cAAc,6BAA6B,WAA7B;AAAA,MACd,eAAe,6BAA0B,UAAU,OAAO,MAA3C;AAAA,MACf,cAAc,6BAA0B,UAAU,OAAO,KAA3C;AAAA,IACf;AAAA,EACD;AAVS;AAYV,CAAC;",
  "names": []
}
