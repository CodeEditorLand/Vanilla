{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/editorState/browser/editorState.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from '../../../../base/common/strings.js';\nimport { ICodeEditor, IActiveCodeEditor } from '../../../browser/editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range, IRange } from '../../../common/core/range.js';\nimport { CancellationTokenSource, CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IDisposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\n\nexport const enum CodeEditorStateFlag {\n\tValue = 1,\n\tSelection = 2,\n\tPosition = 4,\n\tScroll = 8\n}\n\nexport class EditorState {\n\n\tprivate readonly flags: number;\n\n\tprivate readonly position: Position | null;\n\tprivate readonly selection: Range | null;\n\tprivate readonly modelVersionId: string | null;\n\tprivate readonly scrollLeft: number;\n\tprivate readonly scrollTop: number;\n\n\tconstructor(editor: ICodeEditor, flags: number) {\n\t\tthis.flags = flags;\n\n\t\tif ((this.flags & CodeEditorStateFlag.Value) !== 0) {\n\t\t\tconst model = editor.getModel();\n\t\t\tthis.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n\t\t} else {\n\t\t\tthis.modelVersionId = null;\n\t\t}\n\t\tif ((this.flags & CodeEditorStateFlag.Position) !== 0) {\n\t\t\tthis.position = editor.getPosition();\n\t\t} else {\n\t\t\tthis.position = null;\n\t\t}\n\t\tif ((this.flags & CodeEditorStateFlag.Selection) !== 0) {\n\t\t\tthis.selection = editor.getSelection();\n\t\t} else {\n\t\t\tthis.selection = null;\n\t\t}\n\t\tif ((this.flags & CodeEditorStateFlag.Scroll) !== 0) {\n\t\t\tthis.scrollLeft = editor.getScrollLeft();\n\t\t\tthis.scrollTop = editor.getScrollTop();\n\t\t} else {\n\t\t\tthis.scrollLeft = -1;\n\t\t\tthis.scrollTop = -1;\n\t\t}\n\t}\n\n\tprivate _equals(other: any): boolean {\n\n\t\tif (!(other instanceof EditorState)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst state = <EditorState>other;\n\n\t\tif (this.modelVersionId !== state.modelVersionId) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validate(editor: ICodeEditor): boolean {\n\t\treturn this._equals(new EditorState(editor, this.flags));\n\t}\n}\n\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource implements IDisposable {\n\n\tprivate readonly _listener = new DisposableStore();\n\n\tconstructor(editor: IActiveCodeEditor, flags: CodeEditorStateFlag, range?: IRange, parent?: CancellationToken) {\n\t\tsuper(editor, parent);\n\n\t\tif (flags & CodeEditorStateFlag.Position) {\n\t\t\tthis._listener.add(editor.onDidChangeCursorPosition(e => {\n\t\t\t\tif (!range || !Range.containsPosition(range, e.position)) {\n\t\t\t\t\tthis.cancel();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\tif (flags & CodeEditorStateFlag.Selection) {\n\t\t\tthis._listener.add(editor.onDidChangeCursorSelection(e => {\n\t\t\t\tif (!range || !Range.containsRange(range, e.selection)) {\n\t\t\t\t\tthis.cancel();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\tif (flags & CodeEditorStateFlag.Scroll) {\n\t\t\tthis._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n\t\t}\n\t\tif (flags & CodeEditorStateFlag.Value) {\n\t\t\tthis._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n\t\t\tthis._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tthis._listener.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource implements IDisposable {\n\n\tprivate _listener: IDisposable;\n\n\tconstructor(model: ITextModel, parent?: CancellationToken) {\n\t\tsuper(parent);\n\t\tthis._listener = model.onDidChangeContent(() => this.cancel());\n\t}\n\n\toverride dispose() {\n\t\tthis._listener.dispose();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["CodeEditorStateFlag"]
}
