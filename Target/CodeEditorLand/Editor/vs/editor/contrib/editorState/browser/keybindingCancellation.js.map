{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/editorState/browser/keybindingCancellation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport { LinkedList } from \"../../../../base/common/linkedList.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\ttype ServicesAccessor,\n\tcreateDecorator,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorCommand,\n\tregisterEditorCommand,\n} from \"../../../browser/editorExtensions.js\";\n\nconst IEditorCancellationTokens = createDecorator<IEditorCancellationTokens>(\n\t\"IEditorCancelService\",\n);\n\ninterface IEditorCancellationTokens {\n\treadonly _serviceBrand: undefined;\n\tadd(editor: ICodeEditor, cts: CancellationTokenSource): () => void;\n\tcancel(editor: ICodeEditor): void;\n}\n\nconst ctxCancellableOperation = new RawContextKey(\n\t\"cancellableOperation\",\n\tfalse,\n\tlocalize(\n\t\t\"cancellableOperation\",\n\t\t\"Whether the editor runs a cancellable operation, e.g. like 'Peek References'\",\n\t),\n);\n\nregisterSingleton(\n\tIEditorCancellationTokens,\n\tclass implements IEditorCancellationTokens {\n\t\tdeclare readonly _serviceBrand: undefined;\n\n\t\tprivate readonly _tokens = new WeakMap<\n\t\t\tICodeEditor,\n\t\t\t{\n\t\t\t\tkey: IContextKey<boolean>;\n\t\t\t\ttokens: LinkedList<CancellationTokenSource>;\n\t\t\t}\n\t\t>();\n\n\t\tadd(editor: ICodeEditor, cts: CancellationTokenSource): () => void {\n\t\t\tlet data = this._tokens.get(editor);\n\t\t\tif (!data) {\n\t\t\t\tdata = editor.invokeWithinContext((accessor) => {\n\t\t\t\t\tconst key = ctxCancellableOperation.bindTo(\n\t\t\t\t\t\taccessor.get(IContextKeyService),\n\t\t\t\t\t);\n\t\t\t\t\tconst tokens = new LinkedList<CancellationTokenSource>();\n\t\t\t\t\treturn { key, tokens };\n\t\t\t\t});\n\t\t\t\tthis._tokens.set(editor, data);\n\t\t\t}\n\n\t\t\tlet removeFn: Function | undefined;\n\n\t\t\tdata.key.set(true);\n\t\t\tremoveFn = data.tokens.push(cts);\n\n\t\t\treturn () => {\n\t\t\t\t// remove w/o cancellation\n\t\t\t\tif (removeFn) {\n\t\t\t\t\tremoveFn();\n\t\t\t\t\tdata.key.set(!data.tokens.isEmpty());\n\t\t\t\t\tremoveFn = undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tcancel(editor: ICodeEditor): void {\n\t\t\tconst data = this._tokens.get(editor);\n\t\t\tif (!data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// remove with cancellation\n\t\t\tconst cts = data.tokens.pop();\n\t\t\tif (cts) {\n\t\t\t\tcts.cancel();\n\t\t\t\tdata.key.set(!data.tokens.isEmpty());\n\t\t\t}\n\t\t}\n\t},\n\tInstantiationType.Delayed,\n);\n\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n\tprivate readonly _unregister: Function;\n\n\tconstructor(\n\t\treadonly editor: ICodeEditor,\n\t\tparent?: CancellationToken,\n\t) {\n\t\tsuper(parent);\n\t\tthis._unregister = editor.invokeWithinContext((accessor) =>\n\t\t\taccessor.get(IEditorCancellationTokens).add(editor, this),\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._unregister();\n\t\tsuper.dispose();\n\t}\n}\n\nregisterEditorCommand(\n\tnew (class extends EditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"editor.cancelOperation\",\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t},\n\t\t\t\tprecondition: ctxCancellableOperation,\n\t\t\t});\n\t\t}\n\n\t\trunEditorCommand(\n\t\t\taccessor: ServicesAccessor,\n\t\t\teditor: ICodeEditor,\n\t\t): void {\n\t\t\taccessor.get(IEditorCancellationTokens).cancel(editor);\n\t\t}\n\t})(),\n);\n"],
  "mappings": ";;AAKA;AAAA,EAEC;AAAA,OACM;AACP,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAEC;AAAA,OACM;AACP,SAAS,wBAAwB;AAEjC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,MAAM,4BAA4B;AAAA,EACjC;AACD;AAQA,MAAM,0BAA0B,IAAI;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEA;AAAA,EACC;AAAA,EACA,MAA2C;AAAA,IAGzB,UAAU,oBAAI,QAM7B;AAAA,IAEF,IAAI,QAAqB,KAA0C;AAClE,UAAI,OAAO,KAAK,QAAQ,IAAI,MAAM;AAClC,UAAI,CAAC,MAAM;AACV,eAAO,OAAO,oBAAoB,CAAC,aAAa;AAC/C,gBAAM,MAAM,wBAAwB;AAAA,YACnC,SAAS,IAAI,kBAAkB;AAAA,UAChC;AACA,gBAAM,SAAS,IAAI,WAAoC;AACvD,iBAAO,EAAE,KAAK,OAAO;AAAA,QACtB,CAAC;AACD,aAAK,QAAQ,IAAI,QAAQ,IAAI;AAAA,MAC9B;AAEA,UAAI;AAEJ,WAAK,IAAI,IAAI,IAAI;AACjB,iBAAW,KAAK,OAAO,KAAK,GAAG;AAE/B,aAAO,MAAM;AAEZ,YAAI,UAAU;AACb,mBAAS;AACT,eAAK,IAAI,IAAI,CAAC,KAAK,OAAO,QAAQ,CAAC;AACnC,qBAAW;AAAA,QACZ;AAAA,MACD;AAAA,IACD;AAAA,IAEA,OAAO,QAA2B;AACjC,YAAM,OAAO,KAAK,QAAQ,IAAI,MAAM;AACpC,UAAI,CAAC,MAAM;AACV;AAAA,MACD;AAEA,YAAM,MAAM,KAAK,OAAO,IAAI;AAC5B,UAAI,KAAK;AACR,YAAI,OAAO;AACX,aAAK,IAAI,IAAI,CAAC,KAAK,OAAO,QAAQ,CAAC;AAAA,MACpC;AAAA,IACD;AAAA,EACD;AAAA,EACA,kBAAkB;AACnB;AAEO,MAAM,gDAAgD,wBAAwB;AAAA,EAGpF,YACU,QACT,QACC;AACD,UAAM,MAAM;AAHH;AAIT,SAAK,cAAc,OAAO;AAAA,MAAoB,CAAC,aAC9C,SAAS,IAAI,yBAAyB,EAAE,IAAI,QAAQ,IAAI;AAAA,IACzD;AAAA,EACD;AAAA,EAvHD,OA4GqF;AAAA;AAAA;AAAA,EACnE;AAAA,EAYR,UAAgB;AACxB,SAAK,YAAY;AACjB,UAAM,QAAQ;AAAA,EACf;AACD;AAEA;AAAA,EACC,IAAK,cAAc,cAAc;AAAA,IAChC,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,QAAQ;AAAA,UACP,QAAQ,iBAAiB;AAAA,UACzB,SAAS,QAAQ;AAAA,QAClB;AAAA,QACA,cAAc;AAAA,MACf,CAAC;AAAA,IACF;AAAA,IAEA,iBACC,UACA,QACO;AACP,eAAS,IAAI,yBAAyB,EAAE,OAAO,MAAM;AAAA,IACtD;AAAA,EACD,EAAG;AACJ;",
  "names": []
}
