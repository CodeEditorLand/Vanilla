{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/editorState/browser/keybindingCancellation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { IContextKeyService, RawContextKey, IContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { CancellationTokenSource, CancellationToken } from '../../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { createDecorator, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { localize } from '../../../../nls.js';\n\n\nconst IEditorCancellationTokens = createDecorator<IEditorCancellationTokens>('IEditorCancelService');\n\ninterface IEditorCancellationTokens {\n\treadonly _serviceBrand: undefined;\n\tadd(editor: ICodeEditor, cts: CancellationTokenSource): () => void;\n\tcancel(editor: ICodeEditor): void;\n}\n\nconst ctxCancellableOperation = new RawContextKey('cancellableOperation', false, localize('cancellableOperation', 'Whether the editor runs a cancellable operation, e.g. like \\'Peek References\\''));\n\nregisterSingleton(IEditorCancellationTokens, class implements IEditorCancellationTokens {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _tokens = new WeakMap<ICodeEditor, { key: IContextKey<boolean>; tokens: LinkedList<CancellationTokenSource> }>();\n\n\tadd(editor: ICodeEditor, cts: CancellationTokenSource): () => void {\n\t\tlet data = this._tokens.get(editor);\n\t\tif (!data) {\n\t\t\tdata = editor.invokeWithinContext(accessor => {\n\t\t\t\tconst key = ctxCancellableOperation.bindTo(accessor.get(IContextKeyService));\n\t\t\t\tconst tokens = new LinkedList<CancellationTokenSource>();\n\t\t\t\treturn { key, tokens };\n\t\t\t});\n\t\t\tthis._tokens.set(editor, data);\n\t\t}\n\n\t\tlet removeFn: Function | undefined;\n\n\t\tdata.key.set(true);\n\t\tremoveFn = data.tokens.push(cts);\n\n\t\treturn () => {\n\t\t\t// remove w/o cancellation\n\t\t\tif (removeFn) {\n\t\t\t\tremoveFn();\n\t\t\t\tdata.key.set(!data.tokens.isEmpty());\n\t\t\t\tremoveFn = undefined;\n\t\t\t}\n\t\t};\n\t}\n\n\tcancel(editor: ICodeEditor): void {\n\t\tconst data = this._tokens.get(editor);\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\t// remove with cancellation\n\t\tconst cts = data.tokens.pop();\n\t\tif (cts) {\n\t\t\tcts.cancel();\n\t\t\tdata.key.set(!data.tokens.isEmpty());\n\t\t}\n\t}\n\n}, InstantiationType.Delayed);\n\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n\n\tprivate readonly _unregister: Function;\n\n\tconstructor(readonly editor: ICodeEditor, parent?: CancellationToken) {\n\t\tsuper(parent);\n\t\tthis._unregister = editor.invokeWithinContext(accessor => accessor.get(IEditorCancellationTokens).add(editor, this));\n\t}\n\n\toverride dispose(): void {\n\t\tthis._unregister();\n\t\tsuper.dispose();\n\t}\n}\n\nregisterEditorCommand(new class extends EditorCommand {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.cancelOperation',\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape\n\t\t\t},\n\t\t\tprecondition: ctxCancellableOperation\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\taccessor.get(IEditorCancellationTokens).cancel(editor);\n\t}\n});\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,eAAe,6BAA6B;AACrD,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB,eAAe,mBAAmB;AAC/D,SAAS,wBAAwB;AACjC,SAAS,yBAAyB,yBAAyB;AAC3D,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB,wBAAwB;AAClD,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,gBAAgB;AAGzB,MAAM,4BAA4B,gBAA2C,sBAAsB;AAQnG,MAAM,0BAA0B,IAAI,cAAc,wBAAwB,OAAO,SAAS,wBAAwB,8EAAgF,CAAC;AAEnM,kBAAkB,2BAA2B,MAA2C;AAAA,EAItE,UAAU,oBAAI,QAAiG;AAAA,EAEhI,IAAI,QAAqB,KAA0C;AAClE,QAAI,OAAO,KAAK,QAAQ,IAAI,MAAM;AAClC,QAAI,CAAC,MAAM;AACV,aAAO,OAAO,oBAAoB,cAAY;AAC7C,cAAM,MAAM,wBAAwB,OAAO,SAAS,IAAI,kBAAkB,CAAC;AAC3E,cAAM,SAAS,IAAI,WAAoC;AACvD,eAAO,EAAE,KAAK,OAAO;AAAA,MACtB,CAAC;AACD,WAAK,QAAQ,IAAI,QAAQ,IAAI;AAAA,IAC9B;AAEA,QAAI;AAEJ,SAAK,IAAI,IAAI,IAAI;AACjB,eAAW,KAAK,OAAO,KAAK,GAAG;AAE/B,WAAO,MAAM;AAEZ,UAAI,UAAU;AACb,iBAAS;AACT,aAAK,IAAI,IAAI,CAAC,KAAK,OAAO,QAAQ,CAAC;AACnC,mBAAW;AAAA,MACZ;AAAA,IACD;AAAA,EACD;AAAA,EAEA,OAAO,QAA2B;AACjC,UAAM,OAAO,KAAK,QAAQ,IAAI,MAAM;AACpC,QAAI,CAAC,MAAM;AACV;AAAA,IACD;AAEA,UAAM,MAAM,KAAK,OAAO,IAAI;AAC5B,QAAI,KAAK;AACR,UAAI,OAAO;AACX,WAAK,IAAI,IAAI,CAAC,KAAK,OAAO,QAAQ,CAAC;AAAA,IACpC;AAAA,EACD;AAED,GAAG,kBAAkB,OAAO;AAErB,MAAM,gDAAgD,wBAAwB;AAAA,EAIpF,YAAqB,QAAqB,QAA4B;AACrE,UAAM,MAAM;AADQ;AAEpB,SAAK,cAAc,OAAO,oBAAoB,cAAY,SAAS,IAAI,yBAAyB,EAAE,IAAI,QAAQ,IAAI,CAAC;AAAA,EACpH;AAAA,EAjFD,OA0EqF;AAAA;AAAA;AAAA,EAEnE;AAAA,EAOR,UAAgB;AACxB,SAAK,YAAY;AACjB,UAAM,QAAQ;AAAA,EACf;AACD;AAEA,sBAAsB,IAAI,cAAc,cAAc;AAAA,EAErD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,QAAQ;AAAA,QACP,QAAQ,iBAAiB;AAAA,QACzB,SAAS,QAAQ;AAAA,MAClB;AAAA,MACA,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,iBAAiB,UAA4B,QAA2B;AACvE,aAAS,IAAI,yBAAyB,EAAE,OAAO,MAAM;AAAA,EACtD;AACD,GAAC;",
  "names": []
}
