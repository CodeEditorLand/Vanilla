{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlayHints/browser/inlayHints.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tCancellationError,\n\tonUnexpectedExternalError,\n} from \"../../../../base/common/errors.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { type IPosition, Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type { LanguageFeatureRegistry } from \"../../../common/languageFeatureRegistry.js\";\nimport type {\n\tCommand,\n\tInlayHint,\n\tInlayHintList,\n\tInlayHintsProvider,\n} from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\n\nexport class InlayHintAnchor {\n\tconstructor(\n\t\treadonly range: Range,\n\t\treadonly direction: \"before\" | \"after\",\n\t) {}\n}\n\nexport class InlayHintItem {\n\tprivate _isResolved = false;\n\tprivate _currentResolve?: Promise<void>;\n\n\tconstructor(\n\t\treadonly hint: InlayHint,\n\t\treadonly anchor: InlayHintAnchor,\n\t\treadonly provider: InlayHintsProvider,\n\t) {}\n\n\twith(delta: { anchor: InlayHintAnchor }): InlayHintItem {\n\t\tconst result = new InlayHintItem(\n\t\t\tthis.hint,\n\t\t\tdelta.anchor,\n\t\t\tthis.provider,\n\t\t);\n\t\tresult._isResolved = this._isResolved;\n\t\tresult._currentResolve = this._currentResolve;\n\t\treturn result;\n\t}\n\n\tasync resolve(token: CancellationToken): Promise<void> {\n\t\tif (typeof this.provider.resolveInlayHint !== \"function\") {\n\t\t\treturn;\n\t\t}\n\t\tif (this._currentResolve) {\n\t\t\t// wait for an active resolve operation and try again\n\t\t\t// when that's done.\n\t\t\tawait this._currentResolve;\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn this.resolve(token);\n\t\t}\n\t\tif (!this._isResolved) {\n\t\t\tthis._currentResolve = this._doResolve(token).finally(\n\t\t\t\t() => (this._currentResolve = undefined),\n\t\t\t);\n\t\t}\n\t\tawait this._currentResolve;\n\t}\n\n\tprivate async _doResolve(token: CancellationToken) {\n\t\ttry {\n\t\t\tconst newHint = await Promise.resolve(\n\t\t\t\tthis.provider.resolveInlayHint!(this.hint, token),\n\t\t\t);\n\t\t\tthis.hint.tooltip = newHint?.tooltip ?? this.hint.tooltip;\n\t\t\tthis.hint.label = newHint?.label ?? this.hint.label;\n\t\t\tthis.hint.textEdits = newHint?.textEdits ?? this.hint.textEdits;\n\t\t\tthis._isResolved = true;\n\t\t} catch (err) {\n\t\t\tonUnexpectedExternalError(err);\n\t\t\tthis._isResolved = false;\n\t\t}\n\t}\n}\n\nexport class InlayHintsFragments {\n\tprivate static _emptyInlayHintList: InlayHintList = Object.freeze({\n\t\tdispose() {},\n\t\thints: [],\n\t});\n\n\tstatic async create(\n\t\tregistry: LanguageFeatureRegistry<InlayHintsProvider>,\n\t\tmodel: ITextModel,\n\t\tranges: Range[],\n\t\ttoken: CancellationToken,\n\t): Promise<InlayHintsFragments> {\n\t\tconst data: [InlayHintList, InlayHintsProvider][] = [];\n\n\t\tconst promises = registry\n\t\t\t.ordered(model)\n\t\t\t.reverse()\n\t\t\t.map((provider) =>\n\t\t\t\tranges.map(async (range) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst result = await provider.provideInlayHints(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tresult?.hints.length ||\n\t\t\t\t\t\t\tprovider.onDidChangeInlayHints\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdata.push([\n\t\t\t\t\t\t\t\tresult ??\n\t\t\t\t\t\t\t\t\tInlayHintsFragments._emptyInlayHintList,\n\t\t\t\t\t\t\t\tprovider,\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\tawait Promise.all(promises.flat());\n\n\t\tif (token.isCancellationRequested || model.isDisposed()) {\n\t\t\tthrow new CancellationError();\n\t\t}\n\n\t\treturn new InlayHintsFragments(ranges, data, model);\n\t}\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\treadonly items: readonly InlayHintItem[];\n\treadonly ranges: readonly Range[];\n\treadonly provider: Set<InlayHintsProvider>;\n\n\tprivate constructor(\n\t\tranges: Range[],\n\t\tdata: [InlayHintList, InlayHintsProvider][],\n\t\tmodel: ITextModel,\n\t) {\n\t\tthis.ranges = ranges;\n\t\tthis.provider = new Set();\n\t\tconst items: InlayHintItem[] = [];\n\t\tfor (const [list, provider] of data) {\n\t\t\tthis._disposables.add(list);\n\t\t\tthis.provider.add(provider);\n\n\t\t\tfor (const hint of list.hints) {\n\t\t\t\t// compute the range to which the item should be attached to\n\t\t\t\tconst position = model.validatePosition(hint.position);\n\t\t\t\tlet direction: \"before\" | \"after\" = \"before\";\n\n\t\t\t\tconst wordRange = InlayHintsFragments._getRangeAtPosition(\n\t\t\t\t\tmodel,\n\t\t\t\t\tposition,\n\t\t\t\t);\n\t\t\t\tlet range: Range;\n\n\t\t\t\tif (wordRange.getStartPosition().isBefore(position)) {\n\t\t\t\t\trange = Range.fromPositions(\n\t\t\t\t\t\twordRange.getStartPosition(),\n\t\t\t\t\t\tposition,\n\t\t\t\t\t);\n\t\t\t\t\tdirection = \"after\";\n\t\t\t\t} else {\n\t\t\t\t\trange = Range.fromPositions(\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\twordRange.getEndPosition(),\n\t\t\t\t\t);\n\t\t\t\t\tdirection = \"before\";\n\t\t\t\t}\n\n\t\t\t\titems.push(\n\t\t\t\t\tnew InlayHintItem(\n\t\t\t\t\t\thint,\n\t\t\t\t\t\tnew InlayHintAnchor(range, direction),\n\t\t\t\t\t\tprovider,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.items = items.sort((a, b) =>\n\t\t\tPosition.compare(a.hint.position, b.hint.position),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate static _getRangeAtPosition(\n\t\tmodel: ITextModel,\n\t\tposition: IPosition,\n\t): Range {\n\t\tconst line = position.lineNumber;\n\t\tconst word = model.getWordAtPosition(position);\n\t\tif (word) {\n\t\t\t// always prefer the word range\n\t\t\treturn new Range(line, word.startColumn, line, word.endColumn);\n\t\t}\n\n\t\tmodel.tokenization.tokenizeIfCheap(line);\n\t\tconst tokens = model.tokenization.getLineTokens(line);\n\t\tconst offset = position.column - 1;\n\t\tconst idx = tokens.findTokenIndexAtOffset(offset);\n\n\t\tlet start = tokens.getStartOffset(idx);\n\t\tlet end = tokens.getEndOffset(idx);\n\n\t\tif (end - start === 1) {\n\t\t\t// single character token, when at its end try leading/trailing token instead\n\t\t\tif (start === offset && idx > 1) {\n\t\t\t\t// leading token\n\t\t\t\tstart = tokens.getStartOffset(idx - 1);\n\t\t\t\tend = tokens.getEndOffset(idx - 1);\n\t\t\t} else if (end === offset && idx < tokens.getCount() - 1) {\n\t\t\t\t// trailing token\n\t\t\t\tstart = tokens.getStartOffset(idx + 1);\n\t\t\t\tend = tokens.getEndOffset(idx + 1);\n\t\t\t}\n\t\t}\n\n\t\treturn new Range(line, start + 1, line, end + 1);\n\t}\n}\n\nexport function asCommandLink(command: Command): string {\n\treturn URI.from({\n\t\tscheme: Schemas.command,\n\t\tpath: command.id,\n\t\tquery:\n\t\t\tcommand.arguments &&\n\t\t\tencodeURIComponent(JSON.stringify(command.arguments)),\n\t}).toString();\n}\n"],
  "mappings": "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",
  "names": []
}
