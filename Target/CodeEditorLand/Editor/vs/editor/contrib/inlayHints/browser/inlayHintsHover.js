var y=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var h=(d,s,t,i)=>{for(var r=i>1?void 0:i?M(s,t):s,o=d.length-1,e;o>=0;o--)(e=d[o])&&(r=(i?e(s,t,r):e(r))||r);return i&&r&&y(s,t,r),r},c=(d,s)=>(t,i)=>s(t,i,d);import{AsyncIterableObject as v}from"../../../../base/common/async.js";import"../../../../base/common/cancellation.js";import{isEmptyMarkdownString as b,MarkdownString as p}from"../../../../base/common/htmlContent.js";import{MouseTargetType as S}from"../../../browser/editorBrowser.js";import{Position as H}from"../../../common/core/position.js";import"../../../common/model.js";import{ModelDecorationInjectedTextOptions as T}from"../../../common/model/textModel.js";import{HoverForeignElementAnchor as C}from"../../hover/browser/hoverTypes.js";import{ILanguageService as E}from"../../../common/languages/language.js";import{ITextModelService as P}from"../../../common/services/resolverService.js";import{getHoverProviderResultsAsAsyncIterable as O}from"../../hover/browser/getHover.js";import{MarkdownHover as f,MarkdownHoverParticipant as A}from"../../hover/browser/markdownHoverParticipant.js";import{RenderedInlayHintLabelPart as x,InlayHintsController as L}from"./inlayHintsController.js";import{IConfigurationService as _}from"../../../../platform/configuration/common/configuration.js";import{IOpenerService as D}from"../../../../platform/opener/common/opener.js";import{ILanguageFeaturesService as j}from"../../../common/services/languageFeatures.js";import{EditorOption as R}from"../../../common/config/editorOptions.js";import{localize as m}from"../../../../nls.js";import*as k from"../../../../base/common/platform.js";import{asCommandLink as F}from"./inlayHints.js";import{isNonEmptyArray as K}from"../../../../base/common/arrays.js";import{IKeybindingService as N}from"../../../../platform/keybinding/common/keybinding.js";import{IHoverService as $}from"../../../../platform/hover/browser/hover.js";import{ICommandService as Y}from"../../../../platform/commands/common/commands.js";class w extends C{constructor(t,i,r,o){super(10,i,t.item.anchor.range,r,o,!0);this.part=t}}let u=class extends A{constructor(t,i,r,o,e,a,n,g,l){super(t,i,r,a,g,o,e,l);this._resolverService=n}hoverOrdinal=6;suggestHoverAnchor(t){if(!L.get(this._editor)||t.target.type!==S.CONTENT_TEXT)return null;const r=t.target.detail.injectedText?.options;return r instanceof T&&r.attachedData instanceof x?new w(r.attachedData,this,t.event.posx,t.event.posy):null}computeSync(){return[]}computeAsync(t,i,r){return t instanceof w?new v(async o=>{const{part:e}=t;if(await e.item.resolve(r),r.isCancellationRequested)return;let a;typeof e.item.hint.tooltip=="string"?a=new p().appendText(e.item.hint.tooltip):e.item.hint.tooltip&&(a=e.item.hint.tooltip),a&&o.emitOne(new f(this,t.range,[a],!1,0)),K(e.item.hint.textEdits)&&o.emitOne(new f(this,t.range,[new p().appendText(m("hint.dbl","Double-click to insert"))],!1,10001));let n;if(typeof e.part.tooltip=="string"?n=new p().appendText(e.part.tooltip):e.part.tooltip&&(n=e.part.tooltip),n&&o.emitOne(new f(this,t.range,[n],!1,1)),e.part.location||e.part.command){let l;const I=this._editor.getOption(R.multiCursorModifier)==="altKey"?k.isMacintosh?m("links.navigate.kb.meta.mac","cmd + click"):m("links.navigate.kb.meta","ctrl + click"):k.isMacintosh?m("links.navigate.kb.alt.mac","option + click"):m("links.navigate.kb.alt","alt + click");e.part.location&&e.part.command?l=new p().appendText(m("hint.defAndCommand","Go to Definition ({0}), right click for more",I)):e.part.location?l=new p().appendText(m("hint.def","Go to Definition ({0})",I)):e.part.command&&(l=new p(`[${m("hint.cmd","Execute Command")}](${F(e.part.command)} "${e.part.command.title}") (${I})`,{isTrusted:!0})),l&&o.emitOne(new f(this,t.range,[l],!1,1e4))}const g=await this._resolveInlayHintLabelPartHover(e,r);for await(const l of g)o.emitOne(l)}):v.EMPTY}async _resolveInlayHintLabelPartHover(t,i){if(!t.part.location)return v.EMPTY;const{uri:r,range:o}=t.part.location,e=await this._resolverService.createModelReference(r);try{const a=e.object.textEditorModel;return this._languageFeaturesService.hoverProvider.has(a)?O(this._languageFeaturesService.hoverProvider,a,new H(o.startLineNumber,o.startColumn),i).filter(n=>!b(n.hover.contents)).map(n=>new f(this,t.item.anchor.range,n.hover.contents,!1,2+n.ordinal)):v.EMPTY}finally{e.dispose()}}};u=h([c(1,E),c(2,D),c(3,N),c(4,$),c(5,_),c(6,P),c(7,j),c(8,Y)],u);export{u as InlayHintsHover};
