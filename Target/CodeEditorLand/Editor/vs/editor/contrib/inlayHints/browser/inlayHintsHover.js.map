{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlayHints/browser/inlayHintsHover.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IMarkdownString, isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from '../../../browser/editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { IModelDecoration } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverAnchor, HoverForeignElementAnchor, IEditorHoverParticipant } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHoverProviderResultsAsAsyncIterable } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\n\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n\tconstructor(\n\t\treadonly part: RenderedInlayHintLabelPart,\n\t\towner: InlayHintsHover,\n\t\tinitialMousePosX: number | undefined,\n\t\tinitialMousePosY: number | undefined\n\t) {\n\t\tsuper(10, owner, part.item.anchor.range, initialMousePosX, initialMousePosY, true);\n\t}\n}\n\nexport class InlayHintsHover extends MarkdownHoverParticipant implements IEditorHoverParticipant<MarkdownHover> {\n\n\tpublic override readonly hoverOrdinal: number = 6;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITextModelService private readonly _resolverService: ITextModelService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(editor, languageService, openerService, configurationService, languageFeaturesService, keybindingService, hoverService, commandService);\n\t}\n\n\tsuggestHoverAnchor(mouseEvent: IEditorMouseEvent): HoverAnchor | null {\n\t\tconst controller = InlayHintsController.get(this._editor);\n\t\tif (!controller) {\n\t\t\treturn null;\n\t\t}\n\t\tif (mouseEvent.target.type !== MouseTargetType.CONTENT_TEXT) {\n\t\t\treturn null;\n\t\t}\n\t\tconst options = mouseEvent.target.detail.injectedText?.options;\n\t\tif (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new InlayHintsHoverAnchor(options.attachedData, this, mouseEvent.event.posx, mouseEvent.event.posy);\n\t}\n\n\toverride computeSync(): MarkdownHover[] {\n\t\treturn [];\n\t}\n\n\toverride computeAsync(anchor: HoverAnchor, _lineDecorations: IModelDecoration[], token: CancellationToken): AsyncIterableObject<MarkdownHover> {\n\t\tif (!(anchor instanceof InlayHintsHoverAnchor)) {\n\t\t\treturn AsyncIterableObject.EMPTY;\n\t\t}\n\n\t\treturn new AsyncIterableObject<MarkdownHover>(async executor => {\n\n\t\t\tconst { part } = anchor;\n\t\t\tawait part.item.resolve(token);\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// (1) Inlay Tooltip\n\t\t\tlet itemTooltip: IMarkdownString | undefined;\n\t\t\tif (typeof part.item.hint.tooltip === 'string') {\n\t\t\t\titemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n\t\t\t} else if (part.item.hint.tooltip) {\n\t\t\t\titemTooltip = part.item.hint.tooltip;\n\t\t\t}\n\t\t\tif (itemTooltip) {\n\t\t\t\texecutor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], false, 0));\n\t\t\t}\n\t\t\t// (1.2) Inlay dbl-click gesture\n\t\t\tif (isNonEmptyArray(part.item.hint.textEdits)) {\n\t\t\t\texecutor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double-click to insert\"))], false, 10001));\n\t\t\t}\n\n\t\t\t// (2) Inlay Label Part Tooltip\n\t\t\tlet partTooltip: IMarkdownString | undefined;\n\t\t\tif (typeof part.part.tooltip === 'string') {\n\t\t\t\tpartTooltip = new MarkdownString().appendText(part.part.tooltip);\n\t\t\t} else if (part.part.tooltip) {\n\t\t\t\tpartTooltip = part.part.tooltip;\n\t\t\t}\n\t\t\tif (partTooltip) {\n\t\t\t\texecutor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], false, 1));\n\t\t\t}\n\n\t\t\t// (2.2) Inlay Label Part Help Hover\n\t\t\tif (part.part.location || part.part.command) {\n\t\t\t\tlet linkHint: MarkdownString | undefined;\n\t\t\t\tconst useMetaKey = this._editor.getOption(EditorOption.multiCursorModifier) === 'altKey';\n\t\t\t\tconst kb = useMetaKey\n\t\t\t\t\t? platform.isMacintosh\n\t\t\t\t\t\t? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n\t\t\t\t\t\t: localize('links.navigate.kb.meta', \"ctrl + click\")\n\t\t\t\t\t: platform.isMacintosh\n\t\t\t\t\t\t? localize('links.navigate.kb.alt.mac', \"option + click\")\n\t\t\t\t\t\t: localize('links.navigate.kb.alt', \"alt + click\");\n\n\t\t\t\tif (part.part.location && part.part.command) {\n\t\t\t\t\tlinkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n\t\t\t\t} else if (part.part.location) {\n\t\t\t\t\tlinkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n\t\t\t\t} else if (part.part.command) {\n\t\t\t\t\tlinkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n\t\t\t\t}\n\t\t\t\tif (linkHint) {\n\t\t\t\t\texecutor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], false, 10000));\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// (3) Inlay Label Part Location tooltip\n\t\t\tconst iterable = await this._resolveInlayHintLabelPartHover(part, token);\n\t\t\tfor await (const item of iterable) {\n\t\t\t\texecutor.emitOne(item);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _resolveInlayHintLabelPartHover(part: RenderedInlayHintLabelPart, token: CancellationToken): Promise<AsyncIterableObject<MarkdownHover>> {\n\t\tif (!part.part.location) {\n\t\t\treturn AsyncIterableObject.EMPTY;\n\t\t}\n\t\tconst { uri, range } = part.part.location;\n\t\tconst ref = await this._resolverService.createModelReference(uri);\n\t\ttry {\n\t\t\tconst model = ref.object.textEditorModel;\n\t\t\tif (!this._languageFeaturesService.hoverProvider.has(model)) {\n\t\t\t\treturn AsyncIterableObject.EMPTY;\n\t\t\t}\n\t\t\treturn getHoverProviderResultsAsAsyncIterable(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n\t\t\t\t.filter(item => !isEmptyMarkdownString(item.hover.contents))\n\t\t\t\t.map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, false, 2 + item.ordinal));\n\t\t} finally {\n\t\t\tref.dispose();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
