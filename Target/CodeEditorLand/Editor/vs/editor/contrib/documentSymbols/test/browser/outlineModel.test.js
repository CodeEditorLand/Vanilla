import t from"assert";import{CancellationToken as p,CancellationTokenSource as k}from"../../../../../base/common/cancellation.js";import{DisposableStore as x}from"../../../../../base/common/lifecycle.js";import{URI as E}from"../../../../../base/common/uri.js";import{Range as n}from"../../../../common/core/range.js";import{SymbolKind as R}from"../../../../common/languages.js";import{LanguageFeatureDebounceService as v}from"../../../../common/services/languageFeatureDebounce.js";import{LanguageFeaturesService as T}from"../../../../common/services/languageFeaturesService.js";import{IModelService as S}from"../../../../common/services/model.js";import{createModelServices as q,createTextModel as M}from"../../../../test/common/testTextModel.js";import{NullLogService as b}from"../../../../../platform/log/common/log.js";import{MarkerSeverity as F}from"../../../../../platform/markers/common/markers.js";import{OutlineElement as s,OutlineGroup as m,OutlineModel as N,OutlineModelService as y}from"../../browser/outlineModel.js";import{mock as O}from"../../../../../base/test/common/mock.js";import"../../../../../platform/environment/common/environment.js";import{ensureNoDisposablesAreLeakedInTestSuite as A}from"../../../../../base/test/common/utils.js";suite("OutlineModel",function(){const g=new x,d=new T;teardown(function(){g.clear()}),A(),test("OutlineModel#create, cached",async function(){const i=q(g).get(S),c=new class extends O(){isBuilt=!0;isExtensionDevelopment=!1},r=new y(d,new v(new b,c),i),o=M("foo",void 0,void 0,E.file("/fome/path.foo"));let u=0;const f=d.documentSymbolProvider.register({pattern:"**/path.foo"},{provideDocumentSymbols(){return u+=1,[]}});await r.getOrCreate(o,p.None),t.strictEqual(u,1),await r.getOrCreate(o,p.None),t.strictEqual(u,1),o.applyEdits([{text:"XXX",range:new n(1,1,1,1)}]),await r.getOrCreate(o,p.None),t.strictEqual(u,2),f.dispose(),o.dispose(),r.dispose()}),test("OutlineModel#create, cached/cancel",async function(){const i=q(g).get(S),c=new class extends O(){isBuilt=!0;isExtensionDevelopment=!1},r=new y(d,new v(new b,c),i),o=M("foo",void 0,void 0,E.file("/fome/path.foo"));let u=!1;const f=d.documentSymbolProvider.register({pattern:"**/path.foo"},{provideDocumentSymbols(B,C){return new Promise(D=>{const I=C.onCancellationRequested(L=>{u=!0,D(null),I.dispose()})})}});t.strictEqual(u,!1);const w=new k;r.getOrCreate(o,w.token);const h=new k;r.getOrCreate(o,h.token),w.cancel(),t.strictEqual(u,!1),h.cancel(),t.strictEqual(u,!0),f.dispose(),o.dispose(),r.dispose()});function a(e,i="foo"){return{name:i,detail:"fake",kind:R.Boolean,tags:[],selectionRange:e,range:e}}function l(e){return{...e,owner:"ffff",message:"test",severity:F.Error,resource:null}}test("OutlineElement - updateMarker",function(){const e=new s("foo1",null,a(new n(1,1,1,10))),i=new s("foo2",null,a(new n(2,1,5,1))),c=new s("foo3",null,a(new n(6,1,10,10))),r=new m("group",null,null,1);r.children.set(e.id,e),r.children.set(i.id,i),r.children.set(c.id,c);const o=[l(new n(6,1,6,7)),l(new n(1,1,1,4)),l(new n(10,2,14,1))];o.sort(n.compareRangesUsingStarts),r.updateMarker(o),t.strictEqual(o.length,0),t.strictEqual(e.marker.count,1),t.strictEqual(i.marker,void 0),t.strictEqual(c.marker.count,2),r.updateMarker([]),t.strictEqual(e.marker,void 0),t.strictEqual(i.marker,void 0),t.strictEqual(c.marker,void 0)}),test("OutlineElement - updateMarker, 2",function(){const e=new s("A",null,a(new n(1,1,11,1))),i=new s("A/B",null,a(new n(2,4,5,4))),c=new s("A/C",null,a(new n(6,4,9,4))),r=new m("group",null,null,1);r.children.set(e.id,e),e.children.set(i.id,i),e.children.set(c.id,c);let o=[l(new n(2,4,5,4))];r.updateMarker(o),t.strictEqual(e.marker.count,0),t.strictEqual(i.marker.count,1),t.strictEqual(c.marker,void 0),o=[l(new n(2,4,5,4)),l(new n(2,6,2,8)),l(new n(7,6,7,8))],r.updateMarker(o),t.strictEqual(e.marker.count,0),t.strictEqual(i.marker.count,2),t.strictEqual(c.marker.count,1),o=[l(new n(1,4,1,11)),l(new n(7,6,7,8))],r.updateMarker(o),t.strictEqual(e.marker.count,1),t.strictEqual(i.marker,void 0),t.strictEqual(c.marker.count,1)}),test("OutlineElement - updateMarker/multiple groups",function(){const e=new class extends N{constructor(){super(null)}readyForTesting(){this._groups=this.children}};e.children.set("g1",new m("g1",e,null,1)),e.children.get("g1").children.set("c1",new s("c1",e.children.get("g1"),a(new n(1,1,11,1)))),e.children.set("g2",new m("g2",e,null,1)),e.children.get("g2").children.set("c2",new s("c2",e.children.get("g2"),a(new n(1,1,7,1)))),e.children.get("g2").children.get("c2").children.set("c2.1",new s("c2.1",e.children.get("g2").children.get("c2"),a(new n(1,3,2,19)))),e.children.get("g2").children.get("c2").children.set("c2.2",new s("c2.2",e.children.get("g2").children.get("c2"),a(new n(4,1,6,10)))),e.readyForTesting();const i=[l(new n(1,1,2,8)),l(new n(6,1,6,98))];e.updateMarker(i),t.strictEqual(e.children.get("g1").children.get("c1").marker.count,2),t.strictEqual(e.children.get("g2").children.get("c2").children.get("c2.1").marker.count,1),t.strictEqual(e.children.get("g2").children.get("c2").children.get("c2.2").marker.count,1)})});
