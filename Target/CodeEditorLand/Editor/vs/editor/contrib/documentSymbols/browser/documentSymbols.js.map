{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/documentSymbols/browser/documentSymbols.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\n\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', async function (accessor, ...args) {\n\tconst [resource] = args;\n\tassertType(URI.isUri(resource));\n\n\tconst outlineService = accessor.get(IOutlineModelService);\n\tconst modelService = accessor.get(ITextModelService);\n\n\tconst reference = await modelService.createModelReference(resource);\n\ttry {\n\t\treturn (await outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n\t} finally {\n\t\treference.dispose();\n\t}\n});\n"],
  "mappings": "AAKA,SAAS,yBAAyB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,SAAS,yBAAyB;AAClC,SAAS,4BAA4B;AACrC,SAAS,wBAAwB;AAEjC,iBAAiB,gBAAgB,kCAAkC,eAAgB,aAAa,MAAM;AACrG,QAAM,CAAC,QAAQ,IAAI;AACnB,aAAW,IAAI,MAAM,QAAQ,CAAC;AAE9B,QAAM,iBAAiB,SAAS,IAAI,oBAAoB;AACxD,QAAM,eAAe,SAAS,IAAI,iBAAiB;AAEnD,QAAM,YAAY,MAAM,aAAa,qBAAqB,QAAQ;AAClE,MAAI;AACH,YAAQ,MAAM,eAAe,YAAY,UAAU,OAAO,iBAAiB,kBAAkB,IAAI,GAAG,mBAAmB;AAAA,EACxH,UAAE;AACD,cAAU,QAAQ;AAAA,EACnB;AACD,CAAC;",
  "names": []
}
