import{asArray as G,isNonEmptyArray as j}from"../../../../base/common/arrays.js";import{CancellationToken as b}from"../../../../base/common/cancellation.js";import{onUnexpectedExternalError as C}from"../../../../base/common/errors.js";import{Iterable as H}from"../../../../base/common/iterator.js";import{LinkedList as J}from"../../../../base/common/linkedList.js";import{assertType as P}from"../../../../base/common/types.js";import{URI as M}from"../../../../base/common/uri.js";import{AccessibilitySignal as W,IAccessibilitySignalService as U}from"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js";import{CommandsRegistry as L}from"../../../../platform/commands/common/commands.js";import{ExtensionIdentifierSet as Q}from"../../../../platform/extensions/common/extensions.js";import{IInstantiationService as q}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as X}from"../../../../platform/log/common/log.js";import{isCodeEditor as S}from"../../../browser/editorBrowser.js";import{Position as V}from"../../../common/core/position.js";import{Range as p}from"../../../common/core/range.js";import{Selection as D}from"../../../common/core/selection.js";import{ScrollType as _}from"../../../common/editorCommon.js";import{IEditorWorkerService as T}from"../../../common/services/editorWorker.js";import{ILanguageFeaturesService as w}from"../../../common/services/languageFeatures.js";import{ITextModelService as A}from"../../../common/services/resolverService.js";import{CodeEditorStateFlag as h,EditorStateCancellationTokenSource as K,TextModelCancellationTokenSource as z}from"../../editorState/browser/editorState.js";import{FormattingEdit as B}from"./formattingEdit.js";function N(o,t,e){const a=[],i=new Q,s=o.ordered(e);for(const n of s)a.push(n),n.extensionId&&i.add(n.extensionId);const u=t.ordered(e);for(const n of u){if(n.extensionId){if(i.has(n.extensionId))continue;i.add(n.extensionId)}a.push({displayName:n.displayName,extensionId:n.extensionId,provideDocumentFormattingEdits(c,d,g){return n.provideDocumentRangeFormattingEdits(c,c.getFullModelRange(),d,g)}})}return a}var Y=(e=>(e[e.File=1]="File",e[e.Selection=2]="Selection",e))(Y||{}),Z=(e=>(e[e.Explicit=1]="Explicit",e[e.Silent=2]="Silent",e))(Z||{});class y{static _selectors=new J;static setFormatterSelector(t){return{dispose:y._selectors.unshift(t)}}static async select(t,e,a,i){if(t.length===0)return;const s=H.first(y._selectors);if(s)return await s(t,e,a,i)}}async function Te(o,t,e,a,i,s,u){const n=o.get(q),{documentRangeFormattingEditProvider:c}=o.get(w),d=S(t)?t.getModel():t,g=c.ordered(d),m=await y.select(g,d,a,2);m&&(i.report(m),await n.invokeFunction($,m,t,e,s,u))}async function $(o,t,e,a,i,s){const u=o.get(T),n=o.get(X),c=o.get(U);let d,g;S(e)?(d=e.getModel(),g=new K(e,h.Value|h.Position,void 0,i)):(d=e,g=new z(e,i));const m=[];let E=0;for(const r of G(a).sort(p.compareRangesUsingStarts))E>0&&p.areIntersectingOrTouching(m[E-1],r)?m[E-1]=p.fromPositions(m[E-1].getStartPosition(),r.getEndPosition()):E=m.push(r);const x=async r=>{n.trace("[format][provideDocumentRangeFormattingEdits] (request)",t.extensionId?.value,r);const l=await t.provideDocumentRangeFormattingEdits(d,r,d.getFormattingOptions(),g.token)||[];return n.trace("[format][provideDocumentRangeFormattingEdits] (response)",t.extensionId?.value,l),l},I=(r,l)=>{if(!r.length||!l.length)return!1;const v=r.reduce((f,k)=>p.plusRange(f,k.range),r[0].range);if(!l.some(f=>p.intersectRanges(v,f.range)))return!1;for(const f of r)for(const k of l)if(p.intersectRanges(f.range,k.range))return!0;return!1},R=[],F=[];try{if(typeof t.provideDocumentRangesFormattingEdits=="function"){n.trace("[format][provideDocumentRangeFormattingEdits] (request)",t.extensionId?.value,m);const r=await t.provideDocumentRangesFormattingEdits(d,m,d.getFormattingOptions(),g.token)||[];n.trace("[format][provideDocumentRangeFormattingEdits] (response)",t.extensionId?.value,r),F.push(r)}else{for(const r of m){if(g.token.isCancellationRequested)return!0;F.push(await x(r))}for(let r=0;r<m.length;++r)for(let l=r+1;l<m.length;++l){if(g.token.isCancellationRequested)return!0;if(I(F[r],F[l])){const v=p.plusRange(m[r],m[l]),f=await x(v);m.splice(l,1),m.splice(r,1),m.push(v),F.splice(l,1),F.splice(r,1),F.push(f),r=0,l=0}}}for(const r of F){if(g.token.isCancellationRequested)return!0;const l=await u.computeMoreMinimalEdits(d.uri,r);l&&R.push(...l)}}finally{g.dispose()}if(R.length===0)return!1;if(S(e))B.execute(e,R,!0),e.revealPositionInCenterIfOutsideViewport(e.getPosition(),_.Immediate);else{const[{range:r}]=R,l=new D(r.startLineNumber,r.startColumn,r.endLineNumber,r.endColumn);d.pushEditOperations([l],R.map(v=>({text:v.text,range:p.lift(v.range),forceMoveMarkers:!0})),v=>{for(const{range:f}of v)if(p.areIntersectingOrTouching(f,l))return[new D(f.startLineNumber,f.startColumn,f.endLineNumber,f.endColumn)];return null})}return c.playSignal(W.format,{userGesture:s}),!0}async function we(o,t,e,a,i,s){const u=o.get(q),n=o.get(w),c=S(t)?t.getModel():t,d=N(n.documentFormattingEditProvider,n.documentRangeFormattingEditProvider,c),g=await y.select(d,c,e,1);g&&(a.report(g),await u.invokeFunction(O,g,t,e,i,s))}async function O(o,t,e,a,i,s){const u=o.get(T),n=o.get(U);let c,d;S(e)?(c=e.getModel(),d=new K(e,h.Value|h.Position,void 0,i)):(c=e,d=new z(e,i));let g;try{const m=await t.provideDocumentFormattingEdits(c,c.getFormattingOptions(),d.token);if(g=await u.computeMoreMinimalEdits(c.uri,m),d.token.isCancellationRequested)return!0}finally{d.dispose()}if(!g||g.length===0)return!1;if(S(e))B.execute(e,g,a!==2),a!==2&&e.revealPositionInCenterIfOutsideViewport(e.getPosition(),_.Immediate);else{const[{range:m}]=g,E=new D(m.startLineNumber,m.startColumn,m.endLineNumber,m.endColumn);c.pushEditOperations([E],g.map(x=>({text:x.text,range:p.lift(x.range),forceMoveMarkers:!0})),x=>{for(const{range:I}of x)if(p.areIntersectingOrTouching(I,E))return[new D(I.startLineNumber,I.startColumn,I.endLineNumber,I.endColumn)];return null})}return n.playSignal(W.format,{userGesture:s}),!0}async function ee(o,t,e,a,i,s){const u=t.documentRangeFormattingEditProvider.ordered(e);for(const n of u){const c=await Promise.resolve(n.provideDocumentRangeFormattingEdits(e,a,i,s)).catch(C);if(j(c))return await o.computeMoreMinimalEdits(e.uri,c)}}async function te(o,t,e,a,i){const s=N(t.documentFormattingEditProvider,t.documentRangeFormattingEditProvider,e);for(const u of s){const n=await Promise.resolve(u.provideDocumentFormattingEdits(e,a,i)).catch(C);if(j(n))return await o.computeMoreMinimalEdits(e.uri,n)}}async function Ce(o,t,e,a,i){const s=S(e)?e.getModel():e,u=N(t.documentFormattingEditProvider,t.documentRangeFormattingEditProvider,s),n=await y.select(u,s,a,1);if(n){const c=await Promise.resolve(n.provideDocumentFormattingEdits(s,s.getOptions(),i)).catch(C);return await o.computeMoreMinimalEdits(s.uri,c)}}function ne(o,t,e,a,i,s,u){const n=t.onTypeFormattingEditProvider.ordered(e);return n.length===0||n[0].autoFormatTriggerCharacters.indexOf(i)<0?Promise.resolve(void 0):Promise.resolve(n[0].provideOnTypeFormattingEdits(e,a,i,s,u)).catch(C).then(c=>o.computeMoreMinimalEdits(e.uri,c))}L.registerCommand("_executeFormatRangeProvider",async(o,...t)=>{const[e,a,i]=t;P(M.isUri(e)),P(p.isIRange(a));const s=o.get(A),u=o.get(T),n=o.get(w),c=await s.createModelReference(e);try{return ee(u,n,c.object.textEditorModel,p.lift(a),i,b.None)}finally{c.dispose()}}),L.registerCommand("_executeFormatDocumentProvider",async(o,...t)=>{const[e,a]=t;P(M.isUri(e));const i=o.get(A),s=o.get(T),u=o.get(w),n=await i.createModelReference(e);try{return te(s,u,n.object.textEditorModel,a,b.None)}finally{n.dispose()}}),L.registerCommand("_executeFormatOnTypeProvider",async(o,...t)=>{const[e,a,i,s]=t;P(M.isUri(e)),P(V.isIPosition(a)),P(typeof i=="string");const u=o.get(A),n=o.get(T),c=o.get(w),d=await u.createModelReference(e);try{return ne(n,c,d.object.textEditorModel,V.lift(a),i,s,b.None)}finally{d.dispose()}});export{y as FormattingConflicts,Y as FormattingKind,Z as FormattingMode,$ as formatDocumentRangesWithProvider,Te as formatDocumentRangesWithSelectedProvider,O as formatDocumentWithProvider,we as formatDocumentWithSelectedProvider,te as getDocumentFormattingEditsUntilResult,Ce as getDocumentFormattingEditsWithSelectedProvider,ee as getDocumentRangeFormattingEditsUntilResult,ne as getOnTypeFormattingEdits,N as getRealAndSyntheticDocumentFormattersOrdered};
