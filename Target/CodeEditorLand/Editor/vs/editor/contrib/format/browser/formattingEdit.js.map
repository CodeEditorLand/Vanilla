{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/format/browser/formattingEdit.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { StableEditorScrollState } from \"../../../browser/stableEditorScroll.js\";\nimport {\n\tEditOperation,\n\ttype ISingleEditOperation,\n} from \"../../../common/core/editOperation.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type { TextEdit } from \"../../../common/languages.js\";\nimport type { EndOfLineSequence } from \"../../../common/model.js\";\n\nexport class FormattingEdit {\n\tprivate static _handleEolEdits(\n\t\teditor: ICodeEditor,\n\t\tedits: TextEdit[],\n\t): ISingleEditOperation[] {\n\t\tlet newEol: EndOfLineSequence | undefined;\n\t\tconst singleEdits: ISingleEditOperation[] = [];\n\n\t\tfor (const edit of edits) {\n\t\t\tif (typeof edit.eol === \"number\") {\n\t\t\t\tnewEol = edit.eol;\n\t\t\t}\n\t\t\tif (edit.range && typeof edit.text === \"string\") {\n\t\t\t\tsingleEdits.push(edit);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newEol === \"number\") {\n\t\t\tif (editor.hasModel()) {\n\t\t\t\teditor.getModel().pushEOL(newEol);\n\t\t\t}\n\t\t}\n\n\t\treturn singleEdits;\n\t}\n\n\tprivate static _isFullModelReplaceEdit(\n\t\teditor: ICodeEditor,\n\t\tedit: ISingleEditOperation,\n\t): boolean {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tconst editRange = model.validateRange(edit.range);\n\t\tconst fullModelRange = model.getFullModelRange();\n\t\treturn fullModelRange.equalsRange(editRange);\n\t}\n\n\tstatic execute(\n\t\teditor: ICodeEditor,\n\t\t_edits: TextEdit[],\n\t\taddUndoStops: boolean,\n\t) {\n\t\tif (addUndoStops) {\n\t\t\teditor.pushUndoStop();\n\t\t}\n\t\tconst scrollState = StableEditorScrollState.capture(editor);\n\t\tconst edits = FormattingEdit._handleEolEdits(editor, _edits);\n\t\tif (\n\t\t\tedits.length === 1 &&\n\t\t\tFormattingEdit._isFullModelReplaceEdit(editor, edits[0])\n\t\t) {\n\t\t\t// We use replace semantics and hope that markers stay put...\n\t\t\teditor.executeEdits(\n\t\t\t\t\"formatEditsCommand\",\n\t\t\t\tedits.map((edit) =>\n\t\t\t\t\tEditOperation.replace(Range.lift(edit.range), edit.text),\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\teditor.executeEdits(\n\t\t\t\t\"formatEditsCommand\",\n\t\t\t\tedits.map((edit) =>\n\t\t\t\t\tEditOperation.replaceMove(\n\t\t\t\t\t\tRange.lift(edit.range),\n\t\t\t\t\t\tedit.text,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (addUndoStops) {\n\t\t\teditor.pushUndoStop();\n\t\t}\n\t\tscrollState.restoreRelativeVerticalPositionOfCursor(editor);\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,+BAA+B;AACxC;AAAA,EACC;AAAA,OAEM;AACP,SAAS,aAAa;AAIf,MAAM,eAAe;AAAA,EAf5B,OAe4B;AAAA;AAAA;AAAA,EAC3B,OAAe,gBACd,QACA,OACyB;AACzB,QAAI;AACJ,UAAM,cAAsC,CAAC;AAE7C,eAAW,QAAQ,OAAO;AACzB,UAAI,OAAO,KAAK,QAAQ,UAAU;AACjC,iBAAS,KAAK;AAAA,MACf;AACA,UAAI,KAAK,SAAS,OAAO,KAAK,SAAS,UAAU;AAChD,oBAAY,KAAK,IAAI;AAAA,MACtB;AAAA,IACD;AAEA,QAAI,OAAO,WAAW,UAAU;AAC/B,UAAI,OAAO,SAAS,GAAG;AACtB,eAAO,SAAS,EAAE,QAAQ,MAAM;AAAA,MACjC;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,OAAe,wBACd,QACA,MACU;AACV,QAAI,CAAC,OAAO,SAAS,GAAG;AACvB,aAAO;AAAA,IACR;AACA,UAAM,QAAQ,OAAO,SAAS;AAC9B,UAAM,YAAY,MAAM,cAAc,KAAK,KAAK;AAChD,UAAM,iBAAiB,MAAM,kBAAkB;AAC/C,WAAO,eAAe,YAAY,SAAS;AAAA,EAC5C;AAAA,EAEA,OAAO,QACN,QACA,QACA,cACC;AACD,QAAI,cAAc;AACjB,aAAO,aAAa;AAAA,IACrB;AACA,UAAM,cAAc,wBAAwB,QAAQ,MAAM;AAC1D,UAAM,QAAQ,eAAe,gBAAgB,QAAQ,MAAM;AAC3D,QACC,MAAM,WAAW,KACjB,eAAe,wBAAwB,QAAQ,MAAM,CAAC,CAAC,GACtD;AAED,aAAO;AAAA,QACN;AAAA,QACA,MAAM;AAAA,UAAI,CAAC,SACV,cAAc,QAAQ,MAAM,KAAK,KAAK,KAAK,GAAG,KAAK,IAAI;AAAA,QACxD;AAAA,MACD;AAAA,IACD,OAAO;AACN,aAAO;AAAA,QACN;AAAA,QACA,MAAM;AAAA,UAAI,CAAC,SACV,cAAc;AAAA,YACb,MAAM,KAAK,KAAK,KAAK;AAAA,YACrB,KAAK;AAAA,UACN;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,QAAI,cAAc;AACjB,aAAO,aAAa;AAAA,IACrB;AACA,gBAAY,wCAAwC,MAAM;AAAA,EAC3D;AACD;",
  "names": []
}
