{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/format/browser/formatActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from \"../../../../base/common/arrays.js\";\nimport {\n\tCancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tIEditorProgressService,\n\tProgress,\n} from \"../../../../platform/progress/common/progress.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorContributionInstantiation,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../browser/services/codeEditorService.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { CharacterSet } from \"../../../common/core/characterClassifier.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport { IEditorWorkerService } from \"../../../common/services/editorWorker.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport {\n\tFormattingMode,\n\tformatDocumentRangesWithSelectedProvider,\n\tformatDocumentWithSelectedProvider,\n\tgetOnTypeFormattingEdits,\n} from \"./format.js\";\nimport { FormattingEdit } from \"./formattingEdit.js\";\n\nexport class FormatOnType implements IEditorContribution {\n\tpublic static readonly ID = \"editor.contrib.autoFormat\";\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _sessionDisposables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IEditorWorkerService\n\t\tprivate readonly _workerService: IEditorWorkerService,\n\t\t@IAccessibilitySignalService\n\t\tprivate readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t) {\n\t\tthis._disposables.add(\n\t\t\t_languageFeaturesService.onTypeFormattingEditProvider.onDidChange(\n\t\t\t\tthis._update,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t\tthis._disposables.add(_editor.onDidChangeModel(() => this._update()));\n\t\tthis._disposables.add(\n\t\t\t_editor.onDidChangeModelLanguage(() => this._update()),\n\t\t);\n\t\tthis._disposables.add(\n\t\t\t_editor.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.hasChanged(EditorOption.formatOnType)) {\n\t\t\t\t\tthis._update();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._update();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._sessionDisposables.dispose();\n\t}\n\n\tprivate _update(): void {\n\t\t// clean up\n\t\tthis._sessionDisposables.clear();\n\n\t\t// we are disabled\n\t\tif (!this._editor.getOption(EditorOption.formatOnType)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no model\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\n\t\t// no support\n\t\tconst [support] =\n\t\t\tthis._languageFeaturesService.onTypeFormattingEditProvider.ordered(\n\t\t\t\tmodel,\n\t\t\t);\n\t\tif (!support || !support.autoFormatTriggerCharacters) {\n\t\t\treturn;\n\t\t}\n\n\t\t// register typing listeners that will trigger the format\n\t\tconst triggerChars = new CharacterSet();\n\t\tfor (const ch of support.autoFormatTriggerCharacters) {\n\t\t\ttriggerChars.add(ch.charCodeAt(0));\n\t\t}\n\t\tthis._sessionDisposables.add(\n\t\t\tthis._editor.onDidType((text: string) => {\n\t\t\t\tconst lastCharCode = text.charCodeAt(text.length - 1);\n\t\t\t\tif (triggerChars.has(lastCharCode)) {\n\t\t\t\t\tthis._trigger(String.fromCharCode(lastCharCode));\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _trigger(ch: string): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis._editor.getSelections().length > 1 ||\n\t\t\t!this._editor.getSelection().isEmpty()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst position = this._editor.getPosition();\n\t\tconst cts = new CancellationTokenSource();\n\n\t\t// install a listener that checks if edits happens before the\n\t\t// position on which we format right now. If so, we won't\n\t\t// apply the format edits\n\t\tconst unbind = this._editor.onDidChangeModelContent((e) => {\n\t\t\tif (e.isFlush) {\n\t\t\t\t// a model.setValue() was called\n\t\t\t\t// cancel only once\n\t\t\t\tcts.cancel();\n\t\t\t\tunbind.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0, len = e.changes.length; i < len; i++) {\n\t\t\t\tconst change = e.changes[i];\n\t\t\t\tif (change.range.endLineNumber <= position.lineNumber) {\n\t\t\t\t\t// cancel only once\n\t\t\t\t\tcts.cancel();\n\t\t\t\t\tunbind.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tgetOnTypeFormattingEdits(\n\t\t\tthis._workerService,\n\t\t\tthis._languageFeaturesService,\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\tch,\n\t\t\tmodel.getFormattingOptions(),\n\t\t\tcts.token,\n\t\t)\n\t\t\t.then((edits) => {\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (isNonEmptyArray(edits)) {\n\t\t\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\t\t\tAccessibilitySignal.format,\n\t\t\t\t\t\t{ userGesture: false },\n\t\t\t\t\t);\n\t\t\t\t\tFormattingEdit.execute(this._editor, edits, true);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tunbind.dispose();\n\t\t\t});\n\t}\n}\n\nclass FormatOnPaste implements IEditorContribution {\n\tpublic static readonly ID = \"editor.contrib.formatOnPaste\";\n\n\tprivate readonly _callOnDispose = new DisposableStore();\n\tprivate readonly _callOnModel = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tthis._callOnDispose.add(\n\t\t\teditor.onDidChangeConfiguration(() => this._update()),\n\t\t);\n\t\tthis._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\n\t\tthis._callOnDispose.add(\n\t\t\teditor.onDidChangeModelLanguage(() => this._update()),\n\t\t);\n\t\tthis._callOnDispose.add(\n\t\t\t_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(\n\t\t\t\tthis._update,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._callOnDispose.dispose();\n\t\tthis._callOnModel.dispose();\n\t}\n\n\tprivate _update(): void {\n\t\t// clean up\n\t\tthis._callOnModel.clear();\n\n\t\t// we are disabled\n\t\tif (!this.editor.getOption(EditorOption.formatOnPaste)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no model\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no formatter\n\t\tif (\n\t\t\t!this._languageFeaturesService.documentRangeFormattingEditProvider.has(\n\t\t\t\tthis.editor.getModel(),\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._callOnModel.add(\n\t\t\tthis.editor.onDidPaste(({ range }) => this._trigger(range)),\n\t\t);\n\t}\n\n\tprivate _trigger(range: Range): void {\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.editor.getSelections().length > 1) {\n\t\t\treturn;\n\t\t}\n\t\tthis._instantiationService\n\t\t\t.invokeFunction(\n\t\t\t\tformatDocumentRangesWithSelectedProvider,\n\t\t\t\tthis.editor,\n\t\t\t\trange,\n\t\t\t\tFormattingMode.Silent,\n\t\t\t\tProgress.None,\n\t\t\t\tCancellationToken.None,\n\t\t\t\tfalse,\n\t\t\t)\n\t\t\t.catch(onUnexpectedError);\n\t}\n}\n\nclass FormatDocumentAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.formatDocument\",\n\t\t\tlabel: nls.localize(\"formatDocument.label\", \"Format Document\"),\n\t\t\talias: \"Format Document\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.notInCompositeEditor,\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasDocumentFormattingProvider,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyI,\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: \"1_modification\",\n\t\t\t\torder: 1.3,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tif (editor.hasModel()) {\n\t\t\tconst instaService = accessor.get(IInstantiationService);\n\t\t\tconst progressService = accessor.get(IEditorProgressService);\n\t\t\tawait progressService.showWhile(\n\t\t\t\tinstaService.invokeFunction(\n\t\t\t\t\tformatDocumentWithSelectedProvider,\n\t\t\t\t\teditor,\n\t\t\t\t\tFormattingMode.Explicit,\n\t\t\t\t\tProgress.None,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t\t250,\n\t\t\t);\n\t\t}\n\t}\n}\n\nclass FormatSelectionAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.formatSelection\",\n\t\t\tlabel: nls.localize(\"formatSelection.label\", \"Format Selection\"),\n\t\t\talias: \"Format Selection\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasDocumentSelectionFormattingProvider,\n\t\t\t),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyF,\n\t\t\t\t),\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\twhen: EditorContextKeys.hasNonEmptySelection,\n\t\t\t\tgroup: \"1_modification\",\n\t\t\t\torder: 1.31,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst instaService = accessor.get(IInstantiationService);\n\t\tconst model = editor.getModel();\n\n\t\tconst ranges = editor.getSelections().map((range) => {\n\t\t\treturn range.isEmpty()\n\t\t\t\t? new Range(\n\t\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\t\tmodel.getLineMaxColumn(range.startLineNumber),\n\t\t\t\t\t)\n\t\t\t\t: range;\n\t\t});\n\n\t\tconst progressService = accessor.get(IEditorProgressService);\n\t\tawait progressService.showWhile(\n\t\t\tinstaService.invokeFunction(\n\t\t\t\tformatDocumentRangesWithSelectedProvider,\n\t\t\t\teditor,\n\t\t\t\tranges,\n\t\t\t\tFormattingMode.Explicit,\n\t\t\t\tProgress.None,\n\t\t\t\tCancellationToken.None,\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t250,\n\t\t);\n\t}\n}\n\nregisterEditorContribution(\n\tFormatOnType.ID,\n\tFormatOnType,\n\tEditorContributionInstantiation.BeforeFirstInteraction,\n);\nregisterEditorContribution(\n\tFormatOnPaste.ID,\n\tFormatOnPaste,\n\tEditorContributionInstantiation.BeforeFirstInteraction,\n);\nregisterEditorAction(FormatDocumentAction);\nregisterEditorAction(FormatSelectionAction);\n\n// this is the old format action that does both (format document OR format selection)\n// and we keep it here such that existing keybinding configurations etc will still work\nCommandsRegistry.registerCommand(\"editor.action.format\", async (accessor) => {\n\tconst editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\tif (!editor || !editor.hasModel()) {\n\t\treturn;\n\t}\n\tconst commandService = accessor.get(ICommandService);\n\tif (editor.getSelection().isEmpty()) {\n\t\tawait commandService.executeCommand(\"editor.action.formatDocument\");\n\t} else {\n\t\tawait commandService.executeCommand(\"editor.action.formatSelection\");\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
