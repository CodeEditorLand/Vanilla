{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/format/browser/formatActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { KeyChord, KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorContributionInstantiation, registerEditorAction, registerEditorContribution, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { CharacterSet } from '../../../common/core/characterClassifier.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { formatDocumentRangesWithSelectedProvider, formatDocumentWithSelectedProvider, FormattingMode, getOnTypeFormattingEdits } from './format.js';\nimport { FormattingEdit } from './formattingEdit.js';\nimport * as nls from '../../../../nls.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IEditorProgressService, Progress } from '../../../../platform/progress/common/progress.js';\n\nexport class FormatOnType implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.autoFormat';\n\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _sessionDisposables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IEditorWorkerService private readonly _workerService: IEditorWorkerService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService\n\t) {\n\t\tthis._disposables.add(_languageFeaturesService.onTypeFormattingEditProvider.onDidChange(this._update, this));\n\t\tthis._disposables.add(_editor.onDidChangeModel(() => this._update()));\n\t\tthis._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n\t\tthis._disposables.add(_editor.onDidChangeConfiguration(e => {\n\t\t\tif (e.hasChanged(EditorOption.formatOnType)) {\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t}));\n\t\tthis._update();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._sessionDisposables.dispose();\n\t}\n\n\tprivate _update(): void {\n\n\t\t// clean up\n\t\tthis._sessionDisposables.clear();\n\n\t\t// we are disabled\n\t\tif (!this._editor.getOption(EditorOption.formatOnType)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no model\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\n\t\t// no support\n\t\tconst [support] = this._languageFeaturesService.onTypeFormattingEditProvider.ordered(model);\n\t\tif (!support || !support.autoFormatTriggerCharacters) {\n\t\t\treturn;\n\t\t}\n\n\t\t// register typing listeners that will trigger the format\n\t\tconst triggerChars = new CharacterSet();\n\t\tfor (const ch of support.autoFormatTriggerCharacters) {\n\t\t\ttriggerChars.add(ch.charCodeAt(0));\n\t\t}\n\t\tthis._sessionDisposables.add(this._editor.onDidType((text: string) => {\n\t\t\tconst lastCharCode = text.charCodeAt(text.length - 1);\n\t\t\tif (triggerChars.has(lastCharCode)) {\n\t\t\t\tthis._trigger(String.fromCharCode(lastCharCode));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _trigger(ch: string): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._editor.getSelections().length > 1 || !this._editor.getSelection().isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst position = this._editor.getPosition();\n\t\tconst cts = new CancellationTokenSource();\n\n\t\t// install a listener that checks if edits happens before the\n\t\t// position on which we format right now. If so, we won't\n\t\t// apply the format edits\n\t\tconst unbind = this._editor.onDidChangeModelContent((e) => {\n\t\t\tif (e.isFlush) {\n\t\t\t\t// a model.setValue() was called\n\t\t\t\t// cancel only once\n\t\t\t\tcts.cancel();\n\t\t\t\tunbind.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0, len = e.changes.length; i < len; i++) {\n\t\t\t\tconst change = e.changes[i];\n\t\t\t\tif (change.range.endLineNumber <= position.lineNumber) {\n\t\t\t\t\t// cancel only once\n\t\t\t\t\tcts.cancel();\n\t\t\t\t\tunbind.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tgetOnTypeFormattingEdits(\n\t\t\tthis._workerService,\n\t\t\tthis._languageFeaturesService,\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\tch,\n\t\t\tmodel.getFormattingOptions(),\n\t\t\tcts.token\n\t\t).then(edits => {\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isNonEmptyArray(edits)) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.format, { userGesture: false });\n\t\t\t\tFormattingEdit.execute(this._editor, edits, true);\n\t\t\t}\n\t\t}).finally(() => {\n\t\t\tunbind.dispose();\n\t\t});\n\t}\n}\n\nclass FormatOnPaste implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.formatOnPaste';\n\n\tprivate readonly _callOnDispose = new DisposableStore();\n\tprivate readonly _callOnModel = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tthis._callOnDispose.add(editor.onDidChangeConfiguration(() => this._update()));\n\t\tthis._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\n\t\tthis._callOnDispose.add(editor.onDidChangeModelLanguage(() => this._update()));\n\t\tthis._callOnDispose.add(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(this._update, this));\n\t}\n\n\tdispose(): void {\n\t\tthis._callOnDispose.dispose();\n\t\tthis._callOnModel.dispose();\n\t}\n\n\tprivate _update(): void {\n\n\t\t// clean up\n\t\tthis._callOnModel.clear();\n\n\t\t// we are disabled\n\t\tif (!this.editor.getOption(EditorOption.formatOnPaste)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no model\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no formatter\n\t\tif (!this._languageFeaturesService.documentRangeFormattingEditProvider.has(this.editor.getModel())) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._callOnModel.add(this.editor.onDidPaste(({ range }) => this._trigger(range)));\n\t}\n\n\tprivate _trigger(range: Range): void {\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.editor.getSelections().length > 1) {\n\t\t\treturn;\n\t\t}\n\t\tthis._instantiationService.invokeFunction(formatDocumentRangesWithSelectedProvider, this.editor, range, FormattingMode.Silent, Progress.None, CancellationToken.None, false).catch(onUnexpectedError);\n\t}\n}\n\nclass FormatDocumentAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.formatDocument',\n\t\t\tlabel: nls.localize('formatDocument.label', \"Format Document\"),\n\t\t\talias: 'Format Document',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.notInCompositeEditor, EditorContextKeys.writable, EditorContextKeys.hasDocumentFormattingProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyI },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.3\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tif (editor.hasModel()) {\n\t\t\tconst instaService = accessor.get(IInstantiationService);\n\t\t\tconst progressService = accessor.get(IEditorProgressService);\n\t\t\tawait progressService.showWhile(\n\t\t\t\tinstaService.invokeFunction(formatDocumentWithSelectedProvider, editor, FormattingMode.Explicit, Progress.None, CancellationToken.None, true),\n\t\t\t\t250\n\t\t\t);\n\t\t}\n\t}\n}\n\nclass FormatSelectionAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.formatSelection',\n\t\t\tlabel: nls.localize('formatSelection.label', \"Format Selection\"),\n\t\t\talias: 'Format Selection',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasDocumentSelectionFormattingProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyF),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\twhen: EditorContextKeys.hasNonEmptySelection,\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.31\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst instaService = accessor.get(IInstantiationService);\n\t\tconst model = editor.getModel();\n\n\t\tconst ranges = editor.getSelections().map(range => {\n\t\t\treturn range.isEmpty()\n\t\t\t\t? new Range(range.startLineNumber, 1, range.startLineNumber, model.getLineMaxColumn(range.startLineNumber))\n\t\t\t\t: range;\n\t\t});\n\n\t\tconst progressService = accessor.get(IEditorProgressService);\n\t\tawait progressService.showWhile(\n\t\t\tinstaService.invokeFunction(formatDocumentRangesWithSelectedProvider, editor, ranges, FormattingMode.Explicit, Progress.None, CancellationToken.None, true),\n\t\t\t250\n\t\t);\n\t}\n}\n\nregisterEditorContribution(FormatOnType.ID, FormatOnType, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorContribution(FormatOnPaste.ID, FormatOnPaste, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorAction(FormatDocumentAction);\nregisterEditorAction(FormatSelectionAction);\n\n// this is the old format action that does both (format document OR format selection)\n// and we keep it here such that existing keybinding configurations etc will still work\nCommandsRegistry.registerCommand('editor.action.format', async accessor => {\n\tconst editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\tif (!editor || !editor.hasModel()) {\n\t\treturn;\n\t}\n\tconst commandService = accessor.get(ICommandService);\n\tif (editor.getSelection().isEmpty()) {\n\t\tawait commandService.executeCommand('editor.action.formatDocument');\n\t} else {\n\t\tawait commandService.executeCommand('editor.action.formatSelection');\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
