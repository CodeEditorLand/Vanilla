{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/stickyScroll/browser/stickyScrollProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { CancellationToken, CancellationTokenSource, } from '../../../../base/common/cancellation.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Range } from '../../../common/core/range.js';\nimport { binarySearch } from '../../../../base/common/arrays.js';\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { StickyModelProvider, IStickyModelProvider } from './stickyScrollModelProvider.js';\nimport { StickyElement, StickyModel, StickyRange } from './stickyScrollElement.js';\n\nexport class StickyLineCandidate {\n\tconstructor(\n\t\tpublic readonly startLineNumber: number,\n\t\tpublic readonly endLineNumber: number,\n\t\tpublic readonly nestingDepth: number,\n\t) { }\n}\n\nexport interface IStickyLineCandidateProvider {\n\n\tdispose(): void;\n\tgetVersionId(): number | undefined;\n\tupdate(): Promise<void>;\n\tgetCandidateStickyLinesIntersecting(range: StickyRange): StickyLineCandidate[];\n\tonDidChangeStickyScroll: Event<void>;\n\n}\n\nexport class StickyLineCandidateProvider extends Disposable implements IStickyLineCandidateProvider {\n\n\tstatic readonly ID = 'store.contrib.stickyScrollController';\n\n\tprivate readonly _onDidChangeStickyScroll = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeStickyScroll = this._onDidChangeStickyScroll.event;\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate readonly _updateSoon: RunOnceScheduler;\n\tprivate readonly _sessionStore: DisposableStore;\n\n\tprivate _model: StickyModel | null = null;\n\tprivate _cts: CancellationTokenSource | null = null;\n\tprivate _stickyModelProvider: IStickyModelProvider | null = null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._sessionStore = this._register(new DisposableStore());\n\t\tthis._updateSoon = this._register(new RunOnceScheduler(() => this.update(), 50));\n\n\t\tthis._register(this._editor.onDidChangeConfiguration(e => {\n\t\t\tif (e.hasChanged(EditorOption.stickyScroll)) {\n\t\t\t\tthis.readConfiguration();\n\t\t\t}\n\t\t}));\n\t\tthis.readConfiguration();\n\t}\n\n\tprivate readConfiguration() {\n\t\tthis._sessionStore.clear();\n\n\t\tconst options = this._editor.getOption(EditorOption.stickyScroll);\n\t\tif (!options.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sessionStore.add(this._editor.onDidChangeModel(() => {\n\t\t\t// We should not show an old model for a different file, it will always be wrong.\n\t\t\t// So we clear the model here immediately and then trigger an update.\n\t\t\tthis._model = null;\n\t\t\tthis.updateStickyModelProvider();\n\t\t\tthis._onDidChangeStickyScroll.fire();\n\n\t\t\tthis.update();\n\t\t}));\n\t\tthis._sessionStore.add(this._editor.onDidChangeHiddenAreas(() => this.update()));\n\t\tthis._sessionStore.add(this._editor.onDidChangeModelContent(() => this._updateSoon.schedule()));\n\t\tthis._sessionStore.add(this._languageFeaturesService.documentSymbolProvider.onDidChange(() => this.update()));\n\t\tthis._sessionStore.add(toDisposable(() => {\n\t\t\tthis._stickyModelProvider?.dispose();\n\t\t\tthis._stickyModelProvider = null;\n\t\t}));\n\t\tthis.updateStickyModelProvider();\n\t\tthis.update();\n\t}\n\n\tpublic getVersionId(): number | undefined {\n\t\treturn this._model?.version;\n\t}\n\n\tprivate updateStickyModelProvider() {\n\t\tthis._stickyModelProvider?.dispose();\n\t\tthis._stickyModelProvider = null;\n\n\t\tconst editor = this._editor;\n\t\tif (editor.hasModel()) {\n\t\t\tthis._stickyModelProvider = new StickyModelProvider(\n\t\t\t\teditor,\n\t\t\t\t() => this._updateSoon.schedule(),\n\t\t\t\tthis._languageConfigurationService,\n\t\t\t\tthis._languageFeaturesService\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic async update(): Promise<void> {\n\t\tthis._cts?.dispose(true);\n\t\tthis._cts = new CancellationTokenSource();\n\t\tawait this.updateStickyModel(this._cts.token);\n\t\tthis._onDidChangeStickyScroll.fire();\n\t}\n\n\tprivate async updateStickyModel(token: CancellationToken): Promise<void> {\n\n\t\tif (!this._editor.hasModel() || !this._stickyModelProvider || this._editor.getModel().isTooLargeForTokenization()) {\n\t\t\tthis._model = null;\n\t\t\treturn;\n\t\t}\n\t\tconst model = await this._stickyModelProvider.update(token);\n\t\tif (token.isCancellationRequested) {\n\t\t\t// the computation was canceled, so do not overwrite the model\n\t\t\treturn;\n\t\t}\n\n\t\tthis._model = model;\n\t}\n\n\tprivate updateIndex(index: number) {\n\t\tif (index === -1) {\n\t\t\tindex = 0;\n\t\t} else if (index < 0) {\n\t\t\tindex = -index - 2;\n\t\t}\n\t\treturn index;\n\t}\n\n\tpublic getCandidateStickyLinesIntersectingFromStickyModel(\n\t\trange: StickyRange,\n\t\toutlineModel: StickyElement,\n\t\tresult: StickyLineCandidate[],\n\t\tdepth: number,\n\t\tlastStartLineNumber: number\n\t): void {\n\t\tif (outlineModel.children.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet lastLine = lastStartLineNumber;\n\t\tconst childrenStartLines: number[] = [];\n\n\t\tfor (let i = 0; i < outlineModel.children.length; i++) {\n\t\t\tconst child = outlineModel.children[i];\n\t\t\tif (child.range) {\n\t\t\t\tchildrenStartLines.push(child.range.startLineNumber);\n\t\t\t}\n\t\t}\n\t\tconst lowerBound = this.updateIndex(binarySearch(childrenStartLines, range.startLineNumber, (a: number, b: number) => { return a - b; }));\n\t\tconst upperBound = this.updateIndex(binarySearch(childrenStartLines, range.startLineNumber + depth, (a: number, b: number) => { return a - b; }));\n\n\t\tfor (let i = lowerBound; i <= upperBound; i++) {\n\t\t\tconst child = outlineModel.children[i];\n\t\t\tif (!child) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (child.range) {\n\t\t\t\tconst childStartLine = child.range.startLineNumber;\n\t\t\t\tconst childEndLine = child.range.endLineNumber;\n\t\t\t\tif (range.startLineNumber <= childEndLine + 1 && childStartLine - 1 <= range.endLineNumber && childStartLine !== lastLine) {\n\t\t\t\t\tlastLine = childStartLine;\n\t\t\t\t\tresult.push(new StickyLineCandidate(childStartLine, childEndLine - 1, depth + 1));\n\t\t\t\t\tthis.getCandidateStickyLinesIntersectingFromStickyModel(range, child, result, depth + 1, childStartLine);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.getCandidateStickyLinesIntersectingFromStickyModel(range, child, result, depth, lastStartLineNumber);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getCandidateStickyLinesIntersecting(range: StickyRange): StickyLineCandidate[] {\n\t\tif (!this._model?.element) {\n\t\t\treturn [];\n\t\t}\n\t\tlet stickyLineCandidates: StickyLineCandidate[] = [];\n\t\tthis.getCandidateStickyLinesIntersectingFromStickyModel(range, this._model.element, stickyLineCandidates, 0, -1);\n\t\tconst hiddenRanges: Range[] | undefined = this._editor._getViewModel()?.getHiddenAreas();\n\n\t\tif (hiddenRanges) {\n\t\t\tfor (const hiddenRange of hiddenRanges) {\n\t\t\t\tstickyLineCandidates = stickyLineCandidates.filter(stickyLine => !(stickyLine.startLineNumber >= hiddenRange.startLineNumber && stickyLine.endLineNumber <= hiddenRange.endLineNumber + 1));\n\t\t\t}\n\t\t}\n\t\treturn stickyLineCandidates;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
