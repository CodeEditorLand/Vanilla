{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/stickyScroll/browser/stickyScrollWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { createTrustedTypesPolicy } from \"../../../../base/browser/trustedTypes.js\";\nimport { equals } from \"../../../../base/common/arrays.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport \"./stickyScroll.css\";\nimport {\n\ttype ICodeEditor,\n\ttype IOverlayWidget,\n\ttype IOverlayWidgetPosition,\n\tOverlayWidgetPositionPreference,\n} from \"../../../browser/editorBrowser.js\";\nimport { getColumnOfNodeOffset } from \"../../../browser/viewParts/lines/viewLine.js\";\nimport { EmbeddedCodeEditorWidget } from \"../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js\";\nimport {\n\ttype EditorLayoutInfo,\n\tEditorOption,\n\tRenderLineNumbersType,\n} from \"../../../common/config/editorOptions.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { StringBuilder } from \"../../../common/core/stringBuilder.js\";\nimport { LineDecoration } from \"../../../common/viewLayout/lineDecorations.js\";\nimport {\n\ttype CharacterMapping,\n\tRenderLineInput,\n\trenderViewLine,\n} from \"../../../common/viewLayout/viewLineRenderer.js\";\nimport {\n\tfoldingCollapsedIcon,\n\tfoldingExpandedIcon,\n} from \"../../folding/browser/foldingDecorations.js\";\nimport type { FoldingModel } from \"../../folding/browser/foldingModel.js\";\n\nexport class StickyScrollWidgetState {\n\tconstructor(\n\t\treadonly startLineNumbers: number[],\n\t\treadonly endLineNumbers: number[],\n\t\treadonly lastLineRelativePosition: number,\n\t\treadonly showEndForLine: number | null = null,\n\t) {}\n\n\tequals(other: StickyScrollWidgetState | undefined): boolean {\n\t\treturn (\n\t\t\t!!other &&\n\t\t\tthis.lastLineRelativePosition === other.lastLineRelativePosition &&\n\t\t\tthis.showEndForLine === other.showEndForLine &&\n\t\t\tequals(this.startLineNumbers, other.startLineNumbers) &&\n\t\t\tequals(this.endLineNumbers, other.endLineNumbers)\n\t\t);\n\t}\n\n\tstatic get Empty() {\n\t\treturn new StickyScrollWidgetState([], [], 0);\n\t}\n}\n\nconst _ttPolicy = createTrustedTypesPolicy(\"stickyScrollViewLayer\", {\n\tcreateHTML: (value) => value,\n});\nconst STICKY_INDEX_ATTR = \"data-sticky-line-index\";\nconst STICKY_IS_LINE_ATTR = \"data-sticky-is-line\";\nconst STICKY_IS_LINE_NUMBER_ATTR = \"data-sticky-is-line-number\";\nconst STICKY_IS_FOLDING_ICON_ATTR = \"data-sticky-is-folding-icon\";\n\nexport class StickyScrollWidget extends Disposable implements IOverlayWidget {\n\tprivate readonly _foldingIconStore = new DisposableStore();\n\tprivate readonly _rootDomNode: HTMLElement = document.createElement(\"div\");\n\tprivate readonly _lineNumbersDomNode: HTMLElement =\n\t\tdocument.createElement(\"div\");\n\tprivate readonly _linesDomNodeScrollable: HTMLElement =\n\t\tdocument.createElement(\"div\");\n\tprivate readonly _linesDomNode: HTMLElement = document.createElement(\"div\");\n\n\tprivate _previousState: StickyScrollWidgetState | undefined;\n\tprivate _lineHeight: number = this._editor.getOption(\n\t\tEditorOption.lineHeight,\n\t);\n\tprivate _renderedStickyLines: RenderedStickyLine[] = [];\n\tprivate _lineNumbers: number[] = [];\n\tprivate _lastLineRelativePosition = 0;\n\tprivate _minContentWidthInPx = 0;\n\tprivate _isOnGlyphMargin = false;\n\n\tconstructor(private readonly _editor: ICodeEditor) {\n\t\tsuper();\n\n\t\tthis._lineNumbersDomNode.className = \"sticky-widget-line-numbers\";\n\t\tthis._lineNumbersDomNode.setAttribute(\"role\", \"none\");\n\n\t\tthis._linesDomNode.className = \"sticky-widget-lines\";\n\t\tthis._linesDomNode.setAttribute(\"role\", \"list\");\n\n\t\tthis._linesDomNodeScrollable.className =\n\t\t\t\"sticky-widget-lines-scrollable\";\n\t\tthis._linesDomNodeScrollable.appendChild(this._linesDomNode);\n\n\t\tthis._rootDomNode.className = \"sticky-widget\";\n\t\tthis._rootDomNode.classList.toggle(\n\t\t\t\"peek\",\n\t\t\t_editor instanceof EmbeddedCodeEditorWidget,\n\t\t);\n\t\tthis._rootDomNode.appendChild(this._lineNumbersDomNode);\n\t\tthis._rootDomNode.appendChild(this._linesDomNodeScrollable);\n\n\t\tconst updateScrollLeftPosition = () => {\n\t\t\tthis._linesDomNode.style.left = this._editor.getOption(\n\t\t\t\tEditorOption.stickyScroll,\n\t\t\t).scrollWithEditor\n\t\t\t\t? `-${this._editor.getScrollLeft()}px`\n\t\t\t\t: \"0px\";\n\t\t};\n\t\tthis._register(\n\t\t\tthis._editor.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.hasChanged(EditorOption.stickyScroll)) {\n\t\t\t\t\tupdateScrollLeftPosition();\n\t\t\t\t}\n\t\t\t\tif (e.hasChanged(EditorOption.lineHeight)) {\n\t\t\t\t\tthis._lineHeight = this._editor.getOption(\n\t\t\t\t\t\tEditorOption.lineHeight,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._editor.onDidScrollChange((e) => {\n\t\t\t\tif (e.scrollLeftChanged) {\n\t\t\t\t\tupdateScrollLeftPosition();\n\t\t\t\t}\n\t\t\t\tif (e.scrollWidthChanged) {\n\t\t\t\t\tthis._updateWidgetWidth();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._editor.onDidChangeModel(() => {\n\t\t\t\tupdateScrollLeftPosition();\n\t\t\t\tthis._updateWidgetWidth();\n\t\t\t}),\n\t\t);\n\t\tthis._register(this._foldingIconStore);\n\t\tupdateScrollLeftPosition();\n\n\t\tthis._register(\n\t\t\tthis._editor.onDidLayoutChange((e) => {\n\t\t\t\tthis._updateWidgetWidth();\n\t\t\t}),\n\t\t);\n\t\tthis._updateWidgetWidth();\n\t}\n\n\tget lineNumbers(): number[] {\n\t\treturn this._lineNumbers;\n\t}\n\n\tget lineNumberCount(): number {\n\t\treturn this._lineNumbers.length;\n\t}\n\n\tgetRenderedStickyLine(lineNumber: number): RenderedStickyLine | undefined {\n\t\treturn this._renderedStickyLines.find(\n\t\t\t(stickyLine) => stickyLine.lineNumber === lineNumber,\n\t\t);\n\t}\n\n\tgetCurrentLines(): readonly number[] {\n\t\treturn this._lineNumbers;\n\t}\n\n\tsetState(\n\t\t_state: StickyScrollWidgetState | undefined,\n\t\tfoldingModel: FoldingModel | undefined,\n\t\t_rebuildFromLine?: number,\n\t): void {\n\t\tif (\n\t\t\t_rebuildFromLine === undefined &&\n\t\t\t((!this._previousState && !_state) ||\n\t\t\t\t(this._previousState && this._previousState.equals(_state)))\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst isWidgetHeightZero = this._isWidgetHeightZero(_state);\n\t\tconst state = isWidgetHeightZero ? undefined : _state;\n\t\tconst rebuildFromLine = isWidgetHeightZero\n\t\t\t? 0\n\t\t\t: this._findLineToRebuildWidgetFrom(_state, _rebuildFromLine);\n\n\t\tthis._renderRootNode(state, foldingModel, rebuildFromLine);\n\t\tthis._previousState = _state;\n\t}\n\n\tprivate _isWidgetHeightZero(\n\t\tstate: StickyScrollWidgetState | undefined,\n\t): boolean {\n\t\tif (!state) {\n\t\t\treturn true;\n\t\t}\n\t\tconst futureWidgetHeight =\n\t\t\tstate.startLineNumbers.length * this._lineHeight +\n\t\t\tstate.lastLineRelativePosition;\n\t\tif (futureWidgetHeight > 0) {\n\t\t\tthis._lastLineRelativePosition = state.lastLineRelativePosition;\n\t\t\tconst lineNumbers = [...state.startLineNumbers];\n\t\t\tif (state.showEndForLine !== null) {\n\t\t\t\tlineNumbers[state.showEndForLine] =\n\t\t\t\t\tstate.endLineNumbers[state.showEndForLine];\n\t\t\t}\n\t\t\tthis._lineNumbers = lineNumbers;\n\t\t} else {\n\t\t\tthis._lastLineRelativePosition = 0;\n\t\t\tthis._lineNumbers = [];\n\t\t}\n\t\treturn futureWidgetHeight === 0;\n\t}\n\n\tprivate _findLineToRebuildWidgetFrom(\n\t\tstate: StickyScrollWidgetState | undefined,\n\t\t_rebuildFromLine?: number,\n\t): number {\n\t\tif (!state || !this._previousState) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (_rebuildFromLine !== undefined) {\n\t\t\treturn _rebuildFromLine;\n\t\t}\n\t\tconst previousState = this._previousState;\n\t\tconst indexOfLinesAlreadyRendered = state.startLineNumbers.findIndex(\n\t\t\t(startLineNumber) =>\n\t\t\t\t!previousState.startLineNumbers.includes(startLineNumber),\n\t\t);\n\t\treturn indexOfLinesAlreadyRendered === -1\n\t\t\t? 0\n\t\t\t: indexOfLinesAlreadyRendered;\n\t}\n\n\tprivate _updateWidgetWidth(): void {\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tconst lineNumbersWidth = layoutInfo.contentLeft;\n\t\tthis._lineNumbersDomNode.style.width = `${lineNumbersWidth}px`;\n\t\tthis._linesDomNodeScrollable.style.setProperty(\n\t\t\t\"--vscode-editorStickyScroll-scrollableWidth\",\n\t\t\t`${this._editor.getScrollWidth() - layoutInfo.verticalScrollbarWidth}px`,\n\t\t);\n\t\tthis._rootDomNode.style.width = `${layoutInfo.width - layoutInfo.verticalScrollbarWidth}px`;\n\t}\n\n\tprivate _clearStickyLinesFromLine(clearFromLine: number) {\n\t\tthis._foldingIconStore.clear();\n\t\t// Removing only the lines that need to be rerendered\n\t\tfor (let i = clearFromLine; i < this._renderedStickyLines.length; i++) {\n\t\t\tconst stickyLine = this._renderedStickyLines[i];\n\t\t\tstickyLine.lineNumberDomNode.remove();\n\t\t\tstickyLine.lineDomNode.remove();\n\t\t}\n\t\t// Keep the lines that need to be updated\n\t\tthis._renderedStickyLines = this._renderedStickyLines.slice(\n\t\t\t0,\n\t\t\tclearFromLine,\n\t\t);\n\t\tthis._rootDomNode.style.display = \"none\";\n\t}\n\n\tprivate _useFoldingOpacityTransition(requireTransitions: boolean) {\n\t\tthis._lineNumbersDomNode.style.setProperty(\n\t\t\t\"--vscode-editorStickyScroll-foldingOpacityTransition\",\n\t\t\t`opacity ${requireTransitions ? 0.5 : 0}s`,\n\t\t);\n\t}\n\n\tprivate _setFoldingIconsVisibility(allVisible: boolean) {\n\t\tfor (const line of this._renderedStickyLines) {\n\t\t\tconst foldingIcon = line.foldingIcon;\n\t\t\tif (!foldingIcon) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfoldingIcon.setVisible(allVisible ? true : foldingIcon.isCollapsed);\n\t\t}\n\t}\n\n\tprivate async _renderRootNode(\n\t\tstate: StickyScrollWidgetState | undefined,\n\t\tfoldingModel: FoldingModel | undefined,\n\t\trebuildFromLine: number,\n\t): Promise<void> {\n\t\tthis._clearStickyLinesFromLine(rebuildFromLine);\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\t\t// For existing sticky lines update the top and z-index\n\t\tfor (const stickyLine of this._renderedStickyLines) {\n\t\t\tthis._updateTopAndZIndexOfStickyLine(stickyLine);\n\t\t}\n\t\t// For new sticky lines\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tconst linesToRender = this._lineNumbers.slice(rebuildFromLine);\n\t\tfor (const [index, line] of linesToRender.entries()) {\n\t\t\tconst stickyLine = this._renderChildNode(\n\t\t\t\tindex + rebuildFromLine,\n\t\t\t\tline,\n\t\t\t\tfoldingModel,\n\t\t\t\tlayoutInfo,\n\t\t\t);\n\t\t\tif (!stickyLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._linesDomNode.appendChild(stickyLine.lineDomNode);\n\t\t\tthis._lineNumbersDomNode.appendChild(stickyLine.lineNumberDomNode);\n\t\t\tthis._renderedStickyLines.push(stickyLine);\n\t\t}\n\t\tif (foldingModel) {\n\t\t\tthis._setFoldingHoverListeners();\n\t\t\tthis._useFoldingOpacityTransition(!this._isOnGlyphMargin);\n\t\t}\n\n\t\tconst widgetHeight =\n\t\t\tthis._lineNumbers.length * this._lineHeight +\n\t\t\tthis._lastLineRelativePosition;\n\t\tthis._rootDomNode.style.display = \"block\";\n\t\tthis._lineNumbersDomNode.style.height = `${widgetHeight}px`;\n\t\tthis._linesDomNodeScrollable.style.height = `${widgetHeight}px`;\n\t\tthis._rootDomNode.style.height = `${widgetHeight}px`;\n\n\t\tthis._rootDomNode.style.marginLeft = \"0px\";\n\t\tthis._minContentWidthInPx =\n\t\t\tMath.max(...this._renderedStickyLines.map((l) => l.scrollWidth)) +\n\t\t\tlayoutInfo.verticalScrollbarWidth;\n\t\tthis._editor.layoutOverlayWidget(this);\n\t}\n\n\tprivate _setFoldingHoverListeners(): void {\n\t\tconst showFoldingControls: \"mouseover\" | \"always\" | \"never\" =\n\t\t\tthis._editor.getOption(EditorOption.showFoldingControls);\n\t\tif (showFoldingControls !== \"mouseover\") {\n\t\t\treturn;\n\t\t}\n\t\tthis._foldingIconStore.add(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._lineNumbersDomNode,\n\t\t\t\tdom.EventType.MOUSE_ENTER,\n\t\t\t\t() => {\n\t\t\t\t\tthis._isOnGlyphMargin = true;\n\t\t\t\t\tthis._setFoldingIconsVisibility(true);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._foldingIconStore.add(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._lineNumbersDomNode,\n\t\t\t\tdom.EventType.MOUSE_LEAVE,\n\t\t\t\t() => {\n\t\t\t\t\tthis._isOnGlyphMargin = false;\n\t\t\t\t\tthis._useFoldingOpacityTransition(true);\n\t\t\t\t\tthis._setFoldingIconsVisibility(false);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _renderChildNode(\n\t\tindex: number,\n\t\tline: number,\n\t\tfoldingModel: FoldingModel | undefined,\n\t\tlayoutInfo: EditorLayoutInfo,\n\t): RenderedStickyLine | undefined {\n\t\tconst viewModel = this._editor._getViewModel();\n\t\tif (!viewModel) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewLineNumber =\n\t\t\tviewModel.coordinatesConverter.convertModelPositionToViewPosition(\n\t\t\t\tnew Position(line, 1),\n\t\t\t).lineNumber;\n\t\tconst lineRenderingData =\n\t\t\tviewModel.getViewLineRenderingData(viewLineNumber);\n\t\tconst lineNumberOption = this._editor.getOption(\n\t\t\tEditorOption.lineNumbers,\n\t\t);\n\n\t\tlet actualInlineDecorations: LineDecoration[];\n\t\ttry {\n\t\t\tactualInlineDecorations = LineDecoration.filter(\n\t\t\t\tlineRenderingData.inlineDecorations,\n\t\t\t\tviewLineNumber,\n\t\t\t\tlineRenderingData.minColumn,\n\t\t\t\tlineRenderingData.maxColumn,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tactualInlineDecorations = [];\n\t\t}\n\n\t\tconst renderLineInput: RenderLineInput = new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tlineRenderingData.content,\n\t\t\tlineRenderingData.continuesWithWrappedLine,\n\t\t\tlineRenderingData.isBasicASCII,\n\t\t\tlineRenderingData.containsRTL,\n\t\t\t0,\n\t\t\tlineRenderingData.tokens,\n\t\t\tactualInlineDecorations,\n\t\t\tlineRenderingData.tabSize,\n\t\t\tlineRenderingData.startVisibleColumn,\n\t\t\t1,\n\t\t\t1,\n\t\t\t1,\n\t\t\t500,\n\t\t\t\"none\",\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t);\n\n\t\tconst sb = new StringBuilder(2000);\n\t\tconst renderOutput = renderViewLine(renderLineInput, sb);\n\n\t\tlet newLine;\n\t\tif (_ttPolicy) {\n\t\t\tnewLine = _ttPolicy.createHTML(sb.build());\n\t\t} else {\n\t\t\tnewLine = sb.build();\n\t\t}\n\n\t\tconst lineHTMLNode = document.createElement(\"span\");\n\t\tlineHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n\t\tlineHTMLNode.setAttribute(STICKY_IS_LINE_ATTR, \"\");\n\t\tlineHTMLNode.setAttribute(\"role\", \"listitem\");\n\t\tlineHTMLNode.tabIndex = 0;\n\t\tlineHTMLNode.className = \"sticky-line-content\";\n\t\tlineHTMLNode.classList.add(`stickyLine${line}`);\n\t\tlineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n\t\tlineHTMLNode.innerHTML = newLine as string;\n\n\t\tconst lineNumberHTMLNode = document.createElement(\"span\");\n\t\tlineNumberHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n\t\tlineNumberHTMLNode.setAttribute(STICKY_IS_LINE_NUMBER_ATTR, \"\");\n\t\tlineNumberHTMLNode.className = \"sticky-line-number\";\n\t\tlineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n\t\tconst lineNumbersWidth = layoutInfo.contentLeft;\n\t\tlineNumberHTMLNode.style.width = `${lineNumbersWidth}px`;\n\n\t\tconst innerLineNumberHTML = document.createElement(\"span\");\n\t\tif (\n\t\t\tlineNumberOption.renderType === RenderLineNumbersType.On ||\n\t\t\t(lineNumberOption.renderType === RenderLineNumbersType.Interval &&\n\t\t\t\tline % 10 === 0)\n\t\t) {\n\t\t\tinnerLineNumberHTML.innerText = line.toString();\n\t\t} else if (\n\t\t\tlineNumberOption.renderType === RenderLineNumbersType.Relative\n\t\t) {\n\t\t\tinnerLineNumberHTML.innerText = Math.abs(\n\t\t\t\tline - this._editor.getPosition()!.lineNumber,\n\t\t\t).toString();\n\t\t}\n\t\tinnerLineNumberHTML.className = \"sticky-line-number-inner\";\n\t\tinnerLineNumberHTML.style.lineHeight = `${this._lineHeight}px`;\n\t\tinnerLineNumberHTML.style.width = `${layoutInfo.lineNumbersWidth}px`;\n\t\tinnerLineNumberHTML.style.paddingLeft = `${layoutInfo.lineNumbersLeft}px`;\n\n\t\tlineNumberHTMLNode.appendChild(innerLineNumberHTML);\n\t\tconst foldingIcon = this._renderFoldingIconForLine(foldingModel, line);\n\t\tif (foldingIcon) {\n\t\t\tlineNumberHTMLNode.appendChild(foldingIcon.domNode);\n\t\t}\n\n\t\tthis._editor.applyFontInfo(lineHTMLNode);\n\t\tthis._editor.applyFontInfo(innerLineNumberHTML);\n\n\t\tlineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n\t\tlineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n\t\tlineNumberHTMLNode.style.height = `${this._lineHeight}px`;\n\t\tlineHTMLNode.style.height = `${this._lineHeight}px`;\n\n\t\tconst renderedLine = new RenderedStickyLine(\n\t\t\tindex,\n\t\t\tline,\n\t\t\tlineHTMLNode,\n\t\t\tlineNumberHTMLNode,\n\t\t\tfoldingIcon,\n\t\t\trenderOutput.characterMapping,\n\t\t\tlineHTMLNode.scrollWidth,\n\t\t);\n\t\treturn this._updateTopAndZIndexOfStickyLine(renderedLine);\n\t}\n\n\tprivate _updateTopAndZIndexOfStickyLine(\n\t\tstickyLine: RenderedStickyLine,\n\t): RenderedStickyLine {\n\t\tconst index = stickyLine.index;\n\t\tconst lineHTMLNode = stickyLine.lineDomNode;\n\t\tconst lineNumberHTMLNode = stickyLine.lineNumberDomNode;\n\t\tconst isLastLine = index === this._lineNumbers.length - 1;\n\n\t\tconst lastLineZIndex = \"0\";\n\t\tconst intermediateLineZIndex = \"1\";\n\t\tlineHTMLNode.style.zIndex = isLastLine\n\t\t\t? lastLineZIndex\n\t\t\t: intermediateLineZIndex;\n\t\tlineNumberHTMLNode.style.zIndex = isLastLine\n\t\t\t? lastLineZIndex\n\t\t\t: intermediateLineZIndex;\n\n\t\tconst lastLineTop = `${index * this._lineHeight + this._lastLineRelativePosition + (stickyLine.foldingIcon?.isCollapsed ? 1 : 0)}px`;\n\t\tconst intermediateLineTop = `${index * this._lineHeight}px`;\n\t\tlineHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n\t\tlineNumberHTMLNode.style.top = isLastLine\n\t\t\t? lastLineTop\n\t\t\t: intermediateLineTop;\n\t\treturn stickyLine;\n\t}\n\n\tprivate _renderFoldingIconForLine(\n\t\tfoldingModel: FoldingModel | undefined,\n\t\tline: number,\n\t): StickyFoldingIcon | undefined {\n\t\tconst showFoldingControls: \"mouseover\" | \"always\" | \"never\" =\n\t\t\tthis._editor.getOption(EditorOption.showFoldingControls);\n\t\tif (!foldingModel || showFoldingControls === \"never\") {\n\t\t\treturn;\n\t\t}\n\t\tconst foldingRegions = foldingModel.regions;\n\t\tconst indexOfFoldingRegion = foldingRegions.findRange(line);\n\t\tconst startLineNumber =\n\t\t\tfoldingRegions.getStartLineNumber(indexOfFoldingRegion);\n\t\tconst isFoldingScope = line === startLineNumber;\n\t\tif (!isFoldingScope) {\n\t\t\treturn;\n\t\t}\n\t\tconst isCollapsed = foldingRegions.isCollapsed(indexOfFoldingRegion);\n\t\tconst foldingIcon = new StickyFoldingIcon(\n\t\t\tisCollapsed,\n\t\t\tstartLineNumber,\n\t\t\tfoldingRegions.getEndLineNumber(indexOfFoldingRegion),\n\t\t\tthis._lineHeight,\n\t\t);\n\t\tfoldingIcon.setVisible(\n\t\t\tthis._isOnGlyphMargin\n\t\t\t\t? true\n\t\t\t\t: isCollapsed || showFoldingControls === \"always\",\n\t\t);\n\t\tfoldingIcon.domNode.setAttribute(STICKY_IS_FOLDING_ICON_ATTR, \"\");\n\t\treturn foldingIcon;\n\t}\n\n\tgetId(): string {\n\t\treturn \"editor.contrib.stickyScrollWidget\";\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._rootDomNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\t\treturn {\n\t\t\tpreference: OverlayWidgetPositionPreference.TOP_CENTER,\n\t\t\tstackOridinal: 10,\n\t\t};\n\t}\n\n\tgetMinContentWidthInPx(): number {\n\t\treturn this._minContentWidthInPx;\n\t}\n\n\tfocusLineWithIndex(index: number) {\n\t\tif (0 <= index && index < this._renderedStickyLines.length) {\n\t\t\tthis._renderedStickyLines[index].lineDomNode.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Given a leaf dom node, tries to find the editor position.\n\t */\n\tgetEditorPositionFromNode(\n\t\tspanDomNode: HTMLElement | null,\n\t): Position | null {\n\t\tif (!spanDomNode || spanDomNode.children.length > 0) {\n\t\t\t// This is not a leaf node\n\t\t\treturn null;\n\t\t}\n\t\tconst renderedStickyLine =\n\t\t\tthis._getRenderedStickyLineFromChildDomNode(spanDomNode);\n\t\tif (!renderedStickyLine) {\n\t\t\treturn null;\n\t\t}\n\t\tconst column = getColumnOfNodeOffset(\n\t\t\trenderedStickyLine.characterMapping,\n\t\t\tspanDomNode,\n\t\t\t0,\n\t\t);\n\t\treturn new Position(renderedStickyLine.lineNumber, column);\n\t}\n\n\tgetLineNumberFromChildDomNode(domNode: HTMLElement | null): number | null {\n\t\treturn (\n\t\t\tthis._getRenderedStickyLineFromChildDomNode(domNode)?.lineNumber ??\n\t\t\tnull\n\t\t);\n\t}\n\n\tprivate _getRenderedStickyLineFromChildDomNode(\n\t\tdomNode: HTMLElement | null,\n\t): RenderedStickyLine | null {\n\t\tconst index = this.getLineIndexFromChildDomNode(domNode);\n\t\tif (\n\t\t\tindex === null ||\n\t\t\tindex < 0 ||\n\t\t\tindex >= this._renderedStickyLines.length\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._renderedStickyLines[index];\n\t}\n\n\t/**\n\t * Given a child dom node, tries to find the line number attribute that was stored in the node.\n\t * @returns the attribute value or null if none is found.\n\t */\n\tgetLineIndexFromChildDomNode(domNode: HTMLElement | null): number | null {\n\t\tconst lineIndex = this._getAttributeValue(domNode, STICKY_INDEX_ATTR);\n\t\treturn lineIndex ? Number.parseInt(lineIndex, 10) : null;\n\t}\n\n\t/**\n\t * Given a child dom node, tries to find if it is (contained in) a sticky line.\n\t * @returns a boolean.\n\t */\n\tisInStickyLine(domNode: HTMLElement | null): boolean {\n\t\tconst isInLine = this._getAttributeValue(domNode, STICKY_IS_LINE_ATTR);\n\t\treturn isInLine !== undefined;\n\t}\n\n\t/**\n\t * Given a child dom node, tries to find if this dom node is (contained in) a sticky folding icon.\n\t * @returns a boolean.\n\t */\n\tisInFoldingIconDomNode(domNode: HTMLElement | null): boolean {\n\t\tconst isInFoldingIcon = this._getAttributeValue(\n\t\t\tdomNode,\n\t\t\tSTICKY_IS_FOLDING_ICON_ATTR,\n\t\t);\n\t\treturn isInFoldingIcon !== undefined;\n\t}\n\n\t/**\n\t * Given the dom node, finds if it or its parent sequence contains the given attribute.\n\t * @returns the attribute value or undefined.\n\t */\n\tprivate _getAttributeValue(\n\t\tdomNode: HTMLElement | null,\n\t\tattribute: string,\n\t): string | undefined {\n\t\twhile (domNode && domNode !== this._rootDomNode) {\n\t\t\tconst line = domNode.getAttribute(attribute);\n\t\t\tif (line !== null) {\n\t\t\t\treturn line;\n\t\t\t}\n\t\t\tdomNode = domNode.parentElement;\n\t\t}\n\t\treturn;\n\t}\n}\n\nclass RenderedStickyLine {\n\tconstructor(\n\t\tpublic readonly index: number,\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly lineDomNode: HTMLElement,\n\t\tpublic readonly lineNumberDomNode: HTMLElement,\n\t\tpublic readonly foldingIcon: StickyFoldingIcon | undefined,\n\t\tpublic readonly characterMapping: CharacterMapping,\n\t\tpublic readonly scrollWidth: number,\n\t) {}\n}\n\nclass StickyFoldingIcon {\n\tpublic domNode: HTMLElement;\n\n\tconstructor(\n\t\tpublic isCollapsed: boolean,\n\t\tpublic foldingStartLine: number,\n\t\tpublic foldingEndLine: number,\n\t\tpublic dimension: number,\n\t) {\n\t\tthis.domNode = document.createElement(\"div\");\n\t\tthis.domNode.style.width = `${dimension}px`;\n\t\tthis.domNode.style.height = `${dimension}px`;\n\t\tthis.domNode.className = ThemeIcon.asClassName(\n\t\t\tisCollapsed ? foldingCollapsedIcon : foldingExpandedIcon,\n\t\t);\n\t}\n\n\tpublic setVisible(visible: boolean) {\n\t\tthis.domNode.style.cursor = visible ? \"pointer\" : \"default\";\n\t\tthis.domNode.style.opacity = visible ? \"1\" : \"0\";\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
