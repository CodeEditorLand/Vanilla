{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/stickyScroll/browser/stickyScrollModelProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { IActiveCodeEditor } from '../../../browser/editorBrowser.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { OutlineElement, OutlineGroup, OutlineModel } from '../../documentSymbols/browser/outlineModel.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { CancelablePromise, createCancelablePromise, Delayer } from '../../../../base/common/async.js';\nimport { FoldingController, RangesLimitReporter } from '../../folding/browser/folding.js';\nimport { SyntaxRangeProvider } from '../../folding/browser/syntaxRangeProvider.js';\nimport { IndentRangeProvider } from '../../folding/browser/indentRangeProvider.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { FoldingRegions } from '../../folding/browser/foldingRanges.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { StickyElement, StickyModel, StickyRange } from './stickyScrollElement.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\nenum ModelProvider {\n\tOUTLINE_MODEL = 'outlineModel',\n\tFOLDING_PROVIDER_MODEL = 'foldingProviderModel',\n\tINDENTATION_MODEL = 'indentationModel'\n}\n\nenum Status {\n\tVALID,\n\tINVALID,\n\tCANCELED\n}\n\nexport interface IStickyModelProvider extends IDisposable {\n\n\t/**\n\t * Method which updates the sticky model\n\t * @param token cancellation token\n\t * @returns the sticky model\n\t */\n\tupdate(token: CancellationToken): Promise<StickyModel | null>;\n}\n\nexport class StickyModelProvider extends Disposable implements IStickyModelProvider {\n\n\tprivate _modelProviders: IStickyModelCandidateProvider<any>[] = [];\n\tprivate _modelPromise: CancelablePromise<any | null> | null = null;\n\tprivate _updateScheduler: Delayer<StickyModel | null> = this._register(new Delayer<StickyModel | null>(300));\n\tprivate readonly _updateOperation: DisposableStore = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tprivate readonly _editor: IActiveCodeEditor,\n\t\tonProviderUpdate: () => void,\n\t\t@IInstantiationService _languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService _languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tswitch (this._editor.getOption(EditorOption.stickyScroll).defaultModel) {\n\t\t\tcase ModelProvider.OUTLINE_MODEL:\n\t\t\t\tthis._modelProviders.push(new StickyModelFromCandidateOutlineProvider(this._editor, _languageFeaturesService));\n\t\t\t// fall through\n\t\t\tcase ModelProvider.FOLDING_PROVIDER_MODEL:\n\t\t\t\tthis._modelProviders.push(new StickyModelFromCandidateSyntaxFoldingProvider(this._editor, onProviderUpdate, _languageFeaturesService));\n\t\t\t// fall through\n\t\t\tcase ModelProvider.INDENTATION_MODEL:\n\t\t\t\tthis._modelProviders.push(new StickyModelFromCandidateIndentationFoldingProvider(this._editor, _languageConfigurationService));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._modelProviders.forEach(provider => provider.dispose());\n\t\tthis._updateOperation.clear();\n\t\tthis._cancelModelPromise();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _cancelModelPromise(): void {\n\t\tif (this._modelPromise) {\n\t\t\tthis._modelPromise.cancel();\n\t\t\tthis._modelPromise = null;\n\t\t}\n\t}\n\n\tpublic async update(token: CancellationToken): Promise<StickyModel | null> {\n\n\t\tthis._updateOperation.clear();\n\t\tthis._updateOperation.add({\n\t\t\tdispose: () => {\n\t\t\t\tthis._cancelModelPromise();\n\t\t\t\tthis._updateScheduler.cancel();\n\t\t\t}\n\t\t});\n\t\tthis._cancelModelPromise();\n\n\t\treturn await this._updateScheduler.trigger(async () => {\n\n\t\t\tfor (const modelProvider of this._modelProviders) {\n\t\t\t\tconst { statusPromise, modelPromise } = modelProvider.computeStickyModel(token);\n\t\t\t\tthis._modelPromise = modelPromise;\n\t\t\t\tconst status = await statusPromise;\n\t\t\t\tif (this._modelPromise !== modelPromise) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase Status.CANCELED:\n\t\t\t\t\t\tthis._updateOperation.clear();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tcase Status.VALID:\n\t\t\t\t\t\treturn modelProvider.stickyModel;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}).catch((error) => {\n\t\t\tonUnexpectedError(error);\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\ninterface IStickyModelCandidateProvider<T> extends IDisposable {\n\tget stickyModel(): StickyModel | null;\n\n\t/**\n\t * Method which computes the sticky model and returns a status to signal whether the sticky model has been successfully found\n\t * @param token cancellation token\n\t * @returns a promise of a status indicating whether the sticky model has been successfully found as well as the model promise\n\t */\n\tcomputeStickyModel(token: CancellationToken): { statusPromise: Promise<Status> | Status; modelPromise: CancelablePromise<T | null> | null };\n}\n\nabstract class StickyModelCandidateProvider<T> extends Disposable implements IStickyModelCandidateProvider<T> {\n\n\tprotected _stickyModel: StickyModel | null = null;\n\n\tconstructor(protected readonly _editor: IActiveCodeEditor) {\n\t\tsuper();\n\t}\n\n\tget stickyModel(): StickyModel | null {\n\t\treturn this._stickyModel;\n\t}\n\n\tprivate _invalid(): Status {\n\t\tthis._stickyModel = null;\n\t\treturn Status.INVALID;\n\t}\n\n\tpublic computeStickyModel(token: CancellationToken): { statusPromise: Promise<Status> | Status; modelPromise: CancelablePromise<T | null> | null } {\n\t\tif (token.isCancellationRequested || !this.isProviderValid()) {\n\t\t\treturn { statusPromise: this._invalid(), modelPromise: null };\n\t\t}\n\t\tconst providerModelPromise = createCancelablePromise(token => this.createModelFromProvider(token));\n\n\t\treturn {\n\t\t\tstatusPromise: providerModelPromise.then(providerModel => {\n\t\t\t\tif (!this.isModelValid(providerModel)) {\n\t\t\t\t\treturn this._invalid();\n\n\t\t\t\t}\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn Status.CANCELED;\n\t\t\t\t}\n\t\t\t\tthis._stickyModel = this.createStickyModel(token, providerModel);\n\t\t\t\treturn Status.VALID;\n\t\t\t}).then(undefined, (err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\treturn Status.CANCELED;\n\t\t\t}),\n\t\t\tmodelPromise: providerModelPromise\n\t\t};\n\t}\n\n\t/**\n\t * Method which checks whether the model returned by the provider is valid and can be used to compute a sticky model.\n\t * This method by default returns true.\n\t * @param model model returned by the provider\n\t * @returns boolean indicating whether the model is valid\n\t */\n\tprotected isModelValid(model: T): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Method which checks whether the provider is valid before applying it to find the provider model.\n\t * This method by default returns true.\n\t * @returns boolean indicating whether the provider is valid\n\t */\n\tprotected isProviderValid(): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Abstract method which creates the model from the provider and returns the provider model\n\t * @param token cancellation token\n\t * @returns the model returned by the provider\n\t */\n\tprotected abstract createModelFromProvider(token: CancellationToken): Promise<T>;\n\n\t/**\n\t * Abstract method which computes the sticky model from the model returned by the provider and returns the sticky model\n\t * @param token cancellation token\n\t * @param model model returned by the provider\n\t * @returns the sticky model\n\t */\n\tprotected abstract createStickyModel(token: CancellationToken, model: T): StickyModel;\n}\n\nclass StickyModelFromCandidateOutlineProvider extends StickyModelCandidateProvider<OutlineModel> {\n\n\tconstructor(_editor: IActiveCodeEditor, @ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService) {\n\t\tsuper(_editor);\n\t}\n\n\tprotected createModelFromProvider(token: CancellationToken): Promise<OutlineModel> {\n\t\treturn OutlineModel.create(this._languageFeaturesService.documentSymbolProvider, this._editor.getModel(), token);\n\t}\n\n\tprotected createStickyModel(token: CancellationToken, model: OutlineModel): StickyModel {\n\t\tconst { stickyOutlineElement, providerID } = this._stickyModelFromOutlineModel(model, this._stickyModel?.outlineProviderId);\n\t\tconst textModel = this._editor.getModel();\n\t\treturn new StickyModel(textModel.uri, textModel.getVersionId(), stickyOutlineElement, providerID);\n\t}\n\n\tprotected override isModelValid(model: OutlineModel): boolean {\n\t\treturn model && model.children.size > 0;\n\t}\n\n\tprivate _stickyModelFromOutlineModel(outlineModel: OutlineModel, preferredProvider: string | undefined): { stickyOutlineElement: StickyElement; providerID: string | undefined } {\n\n\t\tlet outlineElements: Map<string, OutlineElement>;\n\t\t// When several possible outline providers\n\t\tif (Iterable.first(outlineModel.children.values()) instanceof OutlineGroup) {\n\t\t\tconst provider = Iterable.find(outlineModel.children.values(), outlineGroupOfModel => outlineGroupOfModel.id === preferredProvider);\n\t\t\tif (provider) {\n\t\t\t\toutlineElements = provider.children;\n\t\t\t} else {\n\t\t\t\tlet tempID = '';\n\t\t\t\tlet maxTotalSumOfRanges = -1;\n\t\t\t\tlet optimalOutlineGroup = undefined;\n\t\t\t\tfor (const [_key, outlineGroup] of outlineModel.children.entries()) {\n\t\t\t\t\tconst totalSumRanges = this._findSumOfRangesOfGroup(outlineGroup);\n\t\t\t\t\tif (totalSumRanges > maxTotalSumOfRanges) {\n\t\t\t\t\t\toptimalOutlineGroup = outlineGroup;\n\t\t\t\t\t\tmaxTotalSumOfRanges = totalSumRanges;\n\t\t\t\t\t\ttempID = outlineGroup.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpreferredProvider = tempID;\n\t\t\t\toutlineElements = optimalOutlineGroup!.children;\n\t\t\t}\n\t\t} else {\n\t\t\toutlineElements = outlineModel.children as Map<string, OutlineElement>;\n\t\t}\n\t\tconst stickyChildren: StickyElement[] = [];\n\t\tconst outlineElementsArray = Array.from(outlineElements.values()).sort((element1, element2) => {\n\t\t\tconst range1: StickyRange = new StickyRange(element1.symbol.range.startLineNumber, element1.symbol.range.endLineNumber);\n\t\t\tconst range2: StickyRange = new StickyRange(element2.symbol.range.startLineNumber, element2.symbol.range.endLineNumber);\n\t\t\treturn this._comparator(range1, range2);\n\t\t});\n\t\tfor (const outlineElement of outlineElementsArray) {\n\t\t\tstickyChildren.push(this._stickyModelFromOutlineElement(outlineElement, outlineElement.symbol.selectionRange.startLineNumber));\n\t\t}\n\t\tconst stickyOutlineElement = new StickyElement(undefined, stickyChildren, undefined);\n\n\t\treturn {\n\t\t\tstickyOutlineElement: stickyOutlineElement,\n\t\t\tproviderID: preferredProvider\n\t\t};\n\t}\n\n\tprivate _stickyModelFromOutlineElement(outlineElement: OutlineElement, previousStartLine: number): StickyElement {\n\t\tconst children: StickyElement[] = [];\n\t\tfor (const child of outlineElement.children.values()) {\n\t\t\tif (child.symbol.selectionRange.startLineNumber !== child.symbol.range.endLineNumber) {\n\t\t\t\tif (child.symbol.selectionRange.startLineNumber !== previousStartLine) {\n\t\t\t\t\tchildren.push(this._stickyModelFromOutlineElement(child, child.symbol.selectionRange.startLineNumber));\n\t\t\t\t} else {\n\t\t\t\t\tfor (const subchild of child.children.values()) {\n\t\t\t\t\t\tchildren.push(this._stickyModelFromOutlineElement(subchild, child.symbol.selectionRange.startLineNumber));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchildren.sort((child1, child2) => this._comparator(child1.range!, child2.range!));\n\t\tconst range = new StickyRange(outlineElement.symbol.selectionRange.startLineNumber, outlineElement.symbol.range.endLineNumber);\n\t\treturn new StickyElement(range, children, undefined);\n\t}\n\n\tprivate _comparator(range1: StickyRange, range2: StickyRange): number {\n\t\tif (range1.startLineNumber !== range2.startLineNumber) {\n\t\t\treturn range1.startLineNumber - range2.startLineNumber;\n\t\t} else {\n\t\t\treturn range2.endLineNumber - range1.endLineNumber;\n\t\t}\n\t}\n\n\tprivate _findSumOfRangesOfGroup(outline: OutlineGroup | OutlineElement): number {\n\t\tlet res = 0;\n\t\tfor (const child of outline.children.values()) {\n\t\t\tres += this._findSumOfRangesOfGroup(child);\n\t\t}\n\t\tif (outline instanceof OutlineElement) {\n\t\t\treturn res + outline.symbol.range.endLineNumber - outline.symbol.selectionRange.startLineNumber;\n\t\t} else {\n\t\t\treturn res;\n\t\t}\n\t}\n}\n\nabstract class StickyModelFromCandidateFoldingProvider extends StickyModelCandidateProvider<FoldingRegions | null> {\n\n\tprotected _foldingLimitReporter: RangesLimitReporter;\n\n\tconstructor(editor: IActiveCodeEditor) {\n\t\tsuper(editor);\n\t\tthis._foldingLimitReporter = new RangesLimitReporter(editor);\n\t}\n\n\tprotected createStickyModel(token: CancellationToken, model: FoldingRegions): StickyModel {\n\t\tconst foldingElement = this._fromFoldingRegions(model);\n\t\tconst textModel = this._editor.getModel();\n\t\treturn new StickyModel(textModel.uri, textModel.getVersionId(), foldingElement, undefined);\n\t}\n\n\tprotected override isModelValid(model: FoldingRegions): boolean {\n\t\treturn model !== null;\n\t}\n\n\n\tprivate _fromFoldingRegions(foldingRegions: FoldingRegions): StickyElement {\n\t\tconst length = foldingRegions.length;\n\t\tconst orderedStickyElements: StickyElement[] = [];\n\n\t\t// The root sticky outline element\n\t\tconst stickyOutlineElement = new StickyElement(\n\t\t\tundefined,\n\t\t\t[],\n\t\t\tundefined\n\t\t);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\t// Finding the parent index of the current range\n\t\t\tconst parentIndex = foldingRegions.getParentIndex(i);\n\n\t\t\tlet parentNode;\n\t\t\tif (parentIndex !== -1) {\n\t\t\t\t// Access the reference of the parent node\n\t\t\t\tparentNode = orderedStickyElements[parentIndex];\n\t\t\t} else {\n\t\t\t\t// In that case the parent node is the root node\n\t\t\t\tparentNode = stickyOutlineElement;\n\t\t\t}\n\n\t\t\tconst child = new StickyElement(\n\t\t\t\tnew StickyRange(foldingRegions.getStartLineNumber(i), foldingRegions.getEndLineNumber(i) + 1),\n\t\t\t\t[],\n\t\t\t\tparentNode\n\t\t\t);\n\t\t\tparentNode.children.push(child);\n\t\t\torderedStickyElements.push(child);\n\t\t}\n\t\treturn stickyOutlineElement;\n\t}\n}\n\nclass StickyModelFromCandidateIndentationFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n\n\tprivate readonly provider: IndentRangeProvider;\n\n\tconstructor(\n\t\teditor: IActiveCodeEditor,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService) {\n\t\tsuper(editor);\n\n\t\tthis.provider = this._register(new IndentRangeProvider(editor.getModel(), this._languageConfigurationService, this._foldingLimitReporter));\n\t}\n\n\tprotected override async createModelFromProvider(token: CancellationToken): Promise<FoldingRegions> {\n\t\treturn this.provider.compute(token);\n\t}\n}\n\nclass StickyModelFromCandidateSyntaxFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n\n\tprivate readonly provider: SyntaxRangeProvider | undefined;\n\n\tconstructor(editor: IActiveCodeEditor,\n\t\tonProviderUpdate: () => void,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService\n\t) {\n\t\tsuper(editor);\n\t\tconst selectedProviders = FoldingController.getFoldingRangeProviders(this._languageFeaturesService, editor.getModel());\n\t\tif (selectedProviders.length > 0) {\n\t\t\tthis.provider = this._register(new SyntaxRangeProvider(editor.getModel(), selectedProviders, onProviderUpdate, this._foldingLimitReporter, undefined));\n\t\t}\n\t}\n\n\tprotected override isProviderValid(): boolean {\n\t\treturn this.provider !== undefined;\n\t}\n\n\tprotected override async createModelFromProvider(token: CancellationToken): Promise<FoldingRegions | null> {\n\t\treturn this.provider?.compute(token) ?? null;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ModelProvider", "Status", "token"]
}
