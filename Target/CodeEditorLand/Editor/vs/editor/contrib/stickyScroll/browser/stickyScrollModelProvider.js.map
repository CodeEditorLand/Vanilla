{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/stickyScroll/browser/stickyScrollModelProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancelablePromise,\n\tDelayer,\n\tcreateCancelablePromise,\n} from \"../../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { IActiveCodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { ILanguageConfigurationService } from \"../../../common/languages/languageConfigurationRegistry.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport {\n\tOutlineElement,\n\tOutlineGroup,\n\tOutlineModel,\n} from \"../../documentSymbols/browser/outlineModel.js\";\nimport {\n\tFoldingController,\n\tRangesLimitReporter,\n} from \"../../folding/browser/folding.js\";\nimport type { FoldingRegions } from \"../../folding/browser/foldingRanges.js\";\nimport { IndentRangeProvider } from \"../../folding/browser/indentRangeProvider.js\";\nimport { SyntaxRangeProvider } from \"../../folding/browser/syntaxRangeProvider.js\";\nimport {\n\tStickyElement,\n\tStickyModel,\n\tStickyRange,\n} from \"./stickyScrollElement.js\";\n\nenum ModelProvider {\n\tOUTLINE_MODEL = \"outlineModel\",\n\tFOLDING_PROVIDER_MODEL = \"foldingProviderModel\",\n\tINDENTATION_MODEL = \"indentationModel\",\n}\n\nenum Status {\n\tVALID = 0,\n\tINVALID = 1,\n\tCANCELED = 2,\n}\n\nexport interface IStickyModelProvider extends IDisposable {\n\t/**\n\t * Method which updates the sticky model\n\t * @param token cancellation token\n\t * @returns the sticky model\n\t */\n\tupdate(token: CancellationToken): Promise<StickyModel | null>;\n}\n\nexport class StickyModelProvider\n\textends Disposable\n\timplements IStickyModelProvider\n{\n\tprivate _modelProviders: IStickyModelCandidateProvider<any>[] = [];\n\tprivate _modelPromise: CancelablePromise<any | null> | null = null;\n\tprivate _updateScheduler: Delayer<StickyModel | null> = this._register(\n\t\tnew Delayer<StickyModel | null>(300),\n\t);\n\tprivate readonly _updateOperation: DisposableStore = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tconstructor(\n\t\tprivate readonly _editor: IActiveCodeEditor,\n\t\tonProviderUpdate: () => void,\n\t\t@IInstantiationService _languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService _languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tswitch (\n\t\t\tthis._editor.getOption(EditorOption.stickyScroll).defaultModel\n\t\t) {\n\t\t\tcase ModelProvider.OUTLINE_MODEL:\n\t\t\t\tthis._modelProviders.push(\n\t\t\t\t\tnew StickyModelFromCandidateOutlineProvider(\n\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\t_languageFeaturesService,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t// fall through\n\t\t\tcase ModelProvider.FOLDING_PROVIDER_MODEL:\n\t\t\t\tthis._modelProviders.push(\n\t\t\t\t\tnew StickyModelFromCandidateSyntaxFoldingProvider(\n\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\tonProviderUpdate,\n\t\t\t\t\t\t_languageFeaturesService,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t// fall through\n\t\t\tcase ModelProvider.INDENTATION_MODEL:\n\t\t\t\tthis._modelProviders.push(\n\t\t\t\t\tnew StickyModelFromCandidateIndentationFoldingProvider(\n\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\t_languageConfigurationService,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._modelProviders.forEach((provider) => provider.dispose());\n\t\tthis._updateOperation.clear();\n\t\tthis._cancelModelPromise();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _cancelModelPromise(): void {\n\t\tif (this._modelPromise) {\n\t\t\tthis._modelPromise.cancel();\n\t\t\tthis._modelPromise = null;\n\t\t}\n\t}\n\n\tpublic async update(token: CancellationToken): Promise<StickyModel | null> {\n\t\tthis._updateOperation.clear();\n\t\tthis._updateOperation.add({\n\t\t\tdispose: () => {\n\t\t\t\tthis._cancelModelPromise();\n\t\t\t\tthis._updateScheduler.cancel();\n\t\t\t},\n\t\t});\n\t\tthis._cancelModelPromise();\n\n\t\treturn await this._updateScheduler\n\t\t\t.trigger(async () => {\n\t\t\t\tfor (const modelProvider of this._modelProviders) {\n\t\t\t\t\tconst { statusPromise, modelPromise } =\n\t\t\t\t\t\tmodelProvider.computeStickyModel(token);\n\t\t\t\t\tthis._modelPromise = modelPromise;\n\t\t\t\t\tconst status = await statusPromise;\n\t\t\t\t\tif (this._modelPromise !== modelPromise) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\tcase Status.CANCELED:\n\t\t\t\t\t\t\tthis._updateOperation.clear();\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\tcase Status.VALID:\n\t\t\t\t\t\t\treturn modelProvider.stickyModel;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tonUnexpectedError(error);\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n}\n\ninterface IStickyModelCandidateProvider<T> extends IDisposable {\n\tget stickyModel(): StickyModel | null;\n\n\t/**\n\t * Method which computes the sticky model and returns a status to signal whether the sticky model has been successfully found\n\t * @param token cancellation token\n\t * @returns a promise of a status indicating whether the sticky model has been successfully found as well as the model promise\n\t */\n\tcomputeStickyModel(token: CancellationToken): {\n\t\tstatusPromise: Promise<Status> | Status;\n\t\tmodelPromise: CancelablePromise<T | null> | null;\n\t};\n}\n\nabstract class StickyModelCandidateProvider<T>\n\textends Disposable\n\timplements IStickyModelCandidateProvider<T>\n{\n\tprotected _stickyModel: StickyModel | null = null;\n\n\tconstructor(protected readonly _editor: IActiveCodeEditor) {\n\t\tsuper();\n\t}\n\n\tget stickyModel(): StickyModel | null {\n\t\treturn this._stickyModel;\n\t}\n\n\tprivate _invalid(): Status {\n\t\tthis._stickyModel = null;\n\t\treturn Status.INVALID;\n\t}\n\n\tpublic computeStickyModel(token: CancellationToken): {\n\t\tstatusPromise: Promise<Status> | Status;\n\t\tmodelPromise: CancelablePromise<T | null> | null;\n\t} {\n\t\tif (token.isCancellationRequested || !this.isProviderValid()) {\n\t\t\treturn { statusPromise: this._invalid(), modelPromise: null };\n\t\t}\n\t\tconst providerModelPromise = createCancelablePromise((token) =>\n\t\t\tthis.createModelFromProvider(token),\n\t\t);\n\n\t\treturn {\n\t\t\tstatusPromise: providerModelPromise\n\t\t\t\t.then((providerModel) => {\n\t\t\t\t\tif (!this.isModelValid(providerModel)) {\n\t\t\t\t\t\treturn this._invalid();\n\t\t\t\t\t}\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\treturn Status.CANCELED;\n\t\t\t\t\t}\n\t\t\t\t\tthis._stickyModel = this.createStickyModel(\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t\tproviderModel,\n\t\t\t\t\t);\n\t\t\t\t\treturn Status.VALID;\n\t\t\t\t})\n\t\t\t\t.then(undefined, (err) => {\n\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t\treturn Status.CANCELED;\n\t\t\t\t}),\n\t\t\tmodelPromise: providerModelPromise,\n\t\t};\n\t}\n\n\t/**\n\t * Method which checks whether the model returned by the provider is valid and can be used to compute a sticky model.\n\t * This method by default returns true.\n\t * @param model model returned by the provider\n\t * @returns boolean indicating whether the model is valid\n\t */\n\tprotected isModelValid(model: T): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Method which checks whether the provider is valid before applying it to find the provider model.\n\t * This method by default returns true.\n\t * @returns boolean indicating whether the provider is valid\n\t */\n\tprotected isProviderValid(): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Abstract method which creates the model from the provider and returns the provider model\n\t * @param token cancellation token\n\t * @returns the model returned by the provider\n\t */\n\tprotected abstract createModelFromProvider(\n\t\ttoken: CancellationToken,\n\t): Promise<T>;\n\n\t/**\n\t * Abstract method which computes the sticky model from the model returned by the provider and returns the sticky model\n\t * @param token cancellation token\n\t * @param model model returned by the provider\n\t * @returns the sticky model\n\t */\n\tprotected abstract createStickyModel(\n\t\ttoken: CancellationToken,\n\t\tmodel: T,\n\t): StickyModel;\n}\n\nclass StickyModelFromCandidateOutlineProvider extends StickyModelCandidateProvider<OutlineModel> {\n\tconstructor(_editor: IActiveCodeEditor, @ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService) {\n\t\tsuper(_editor);\n\t}\n\n\tprotected createModelFromProvider(\n\t\ttoken: CancellationToken,\n\t): Promise<OutlineModel> {\n\t\treturn OutlineModel.create(\n\t\t\tthis._languageFeaturesService.documentSymbolProvider,\n\t\t\tthis._editor.getModel(),\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tprotected createStickyModel(\n\t\ttoken: CancellationToken,\n\t\tmodel: OutlineModel,\n\t): StickyModel {\n\t\tconst { stickyOutlineElement, providerID } =\n\t\t\tthis._stickyModelFromOutlineModel(\n\t\t\t\tmodel,\n\t\t\t\tthis._stickyModel?.outlineProviderId,\n\t\t\t);\n\t\tconst textModel = this._editor.getModel();\n\t\treturn new StickyModel(\n\t\t\ttextModel.uri,\n\t\t\ttextModel.getVersionId(),\n\t\t\tstickyOutlineElement,\n\t\t\tproviderID,\n\t\t);\n\t}\n\n\tprotected override isModelValid(model: OutlineModel): boolean {\n\t\treturn model && model.children.size > 0;\n\t}\n\n\tprivate _stickyModelFromOutlineModel(\n\t\toutlineModel: OutlineModel,\n\t\tpreferredProvider: string | undefined,\n\t): { stickyOutlineElement: StickyElement; providerID: string | undefined } {\n\t\tlet outlineElements: Map<string, OutlineElement>;\n\t\t// When several possible outline providers\n\t\tif (\n\t\t\tIterable.first(outlineModel.children.values()) instanceof\n\t\t\tOutlineGroup\n\t\t) {\n\t\t\tconst provider = Iterable.find(\n\t\t\t\toutlineModel.children.values(),\n\t\t\t\t(outlineGroupOfModel) =>\n\t\t\t\t\toutlineGroupOfModel.id === preferredProvider,\n\t\t\t);\n\t\t\tif (provider) {\n\t\t\t\toutlineElements = provider.children;\n\t\t\t} else {\n\t\t\t\tlet tempID = \"\";\n\t\t\t\tlet maxTotalSumOfRanges = -1;\n\t\t\t\tlet optimalOutlineGroup;\n\t\t\t\tfor (const [\n\t\t\t\t\t_key,\n\t\t\t\t\toutlineGroup,\n\t\t\t\t] of outlineModel.children.entries()) {\n\t\t\t\t\tconst totalSumRanges =\n\t\t\t\t\t\tthis._findSumOfRangesOfGroup(outlineGroup);\n\t\t\t\t\tif (totalSumRanges > maxTotalSumOfRanges) {\n\t\t\t\t\t\toptimalOutlineGroup = outlineGroup;\n\t\t\t\t\t\tmaxTotalSumOfRanges = totalSumRanges;\n\t\t\t\t\t\ttempID = outlineGroup.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpreferredProvider = tempID;\n\t\t\t\toutlineElements = optimalOutlineGroup!.children;\n\t\t\t}\n\t\t} else {\n\t\t\toutlineElements = outlineModel.children as Map<\n\t\t\t\tstring,\n\t\t\t\tOutlineElement\n\t\t\t>;\n\t\t}\n\t\tconst stickyChildren: StickyElement[] = [];\n\t\tconst outlineElementsArray = Array.from(outlineElements.values()).sort(\n\t\t\t(element1, element2) => {\n\t\t\t\tconst range1: StickyRange = new StickyRange(\n\t\t\t\t\telement1.symbol.range.startLineNumber,\n\t\t\t\t\telement1.symbol.range.endLineNumber,\n\t\t\t\t);\n\t\t\t\tconst range2: StickyRange = new StickyRange(\n\t\t\t\t\telement2.symbol.range.startLineNumber,\n\t\t\t\t\telement2.symbol.range.endLineNumber,\n\t\t\t\t);\n\t\t\t\treturn this._comparator(range1, range2);\n\t\t\t},\n\t\t);\n\t\tfor (const outlineElement of outlineElementsArray) {\n\t\t\tstickyChildren.push(\n\t\t\t\tthis._stickyModelFromOutlineElement(\n\t\t\t\t\toutlineElement,\n\t\t\t\t\toutlineElement.symbol.selectionRange.startLineNumber,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tconst stickyOutlineElement = new StickyElement(\n\t\t\tundefined,\n\t\t\tstickyChildren,\n\t\t\tundefined,\n\t\t);\n\n\t\treturn {\n\t\t\tstickyOutlineElement: stickyOutlineElement,\n\t\t\tproviderID: preferredProvider,\n\t\t};\n\t}\n\n\tprivate _stickyModelFromOutlineElement(\n\t\toutlineElement: OutlineElement,\n\t\tpreviousStartLine: number,\n\t): StickyElement {\n\t\tconst children: StickyElement[] = [];\n\t\tfor (const child of outlineElement.children.values()) {\n\t\t\tif (\n\t\t\t\tchild.symbol.selectionRange.startLineNumber !==\n\t\t\t\tchild.symbol.range.endLineNumber\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tchild.symbol.selectionRange.startLineNumber !==\n\t\t\t\t\tpreviousStartLine\n\t\t\t\t) {\n\t\t\t\t\tchildren.push(\n\t\t\t\t\t\tthis._stickyModelFromOutlineElement(\n\t\t\t\t\t\t\tchild,\n\t\t\t\t\t\t\tchild.symbol.selectionRange.startLineNumber,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tfor (const subchild of child.children.values()) {\n\t\t\t\t\t\tchildren.push(\n\t\t\t\t\t\t\tthis._stickyModelFromOutlineElement(\n\t\t\t\t\t\t\t\tsubchild,\n\t\t\t\t\t\t\t\tchild.symbol.selectionRange.startLineNumber,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchildren.sort((child1, child2) =>\n\t\t\tthis._comparator(child1.range!, child2.range!),\n\t\t);\n\t\tconst range = new StickyRange(\n\t\t\toutlineElement.symbol.selectionRange.startLineNumber,\n\t\t\toutlineElement.symbol.range.endLineNumber,\n\t\t);\n\t\treturn new StickyElement(range, children, undefined);\n\t}\n\n\tprivate _comparator(range1: StickyRange, range2: StickyRange): number {\n\t\tif (range1.startLineNumber !== range2.startLineNumber) {\n\t\t\treturn range1.startLineNumber - range2.startLineNumber;\n\t\t} else {\n\t\t\treturn range2.endLineNumber - range1.endLineNumber;\n\t\t}\n\t}\n\n\tprivate _findSumOfRangesOfGroup(\n\t\toutline: OutlineGroup | OutlineElement,\n\t): number {\n\t\tlet res = 0;\n\t\tfor (const child of outline.children.values()) {\n\t\t\tres += this._findSumOfRangesOfGroup(child);\n\t\t}\n\t\tif (outline instanceof OutlineElement) {\n\t\t\treturn (\n\t\t\t\tres +\n\t\t\t\toutline.symbol.range.endLineNumber -\n\t\t\t\toutline.symbol.selectionRange.startLineNumber\n\t\t\t);\n\t\t} else {\n\t\t\treturn res;\n\t\t}\n\t}\n}\n\nabstract class StickyModelFromCandidateFoldingProvider extends StickyModelCandidateProvider<FoldingRegions | null> {\n\tprotected _foldingLimitReporter: RangesLimitReporter;\n\n\tconstructor(editor: IActiveCodeEditor) {\n\t\tsuper(editor);\n\t\tthis._foldingLimitReporter = new RangesLimitReporter(editor);\n\t}\n\n\tprotected createStickyModel(\n\t\ttoken: CancellationToken,\n\t\tmodel: FoldingRegions,\n\t): StickyModel {\n\t\tconst foldingElement = this._fromFoldingRegions(model);\n\t\tconst textModel = this._editor.getModel();\n\t\treturn new StickyModel(\n\t\t\ttextModel.uri,\n\t\t\ttextModel.getVersionId(),\n\t\t\tfoldingElement,\n\t\t\tundefined,\n\t\t);\n\t}\n\n\tprotected override isModelValid(model: FoldingRegions): boolean {\n\t\treturn model !== null;\n\t}\n\n\tprivate _fromFoldingRegions(foldingRegions: FoldingRegions): StickyElement {\n\t\tconst length = foldingRegions.length;\n\t\tconst orderedStickyElements: StickyElement[] = [];\n\n\t\t// The root sticky outline element\n\t\tconst stickyOutlineElement = new StickyElement(\n\t\t\tundefined,\n\t\t\t[],\n\t\t\tundefined,\n\t\t);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\t// Finding the parent index of the current range\n\t\t\tconst parentIndex = foldingRegions.getParentIndex(i);\n\n\t\t\tlet parentNode;\n\t\t\tif (parentIndex !== -1) {\n\t\t\t\t// Access the reference of the parent node\n\t\t\t\tparentNode = orderedStickyElements[parentIndex];\n\t\t\t} else {\n\t\t\t\t// In that case the parent node is the root node\n\t\t\t\tparentNode = stickyOutlineElement;\n\t\t\t}\n\n\t\t\tconst child = new StickyElement(\n\t\t\t\tnew StickyRange(\n\t\t\t\t\tfoldingRegions.getStartLineNumber(i),\n\t\t\t\t\tfoldingRegions.getEndLineNumber(i) + 1,\n\t\t\t\t),\n\t\t\t\t[],\n\t\t\t\tparentNode,\n\t\t\t);\n\t\t\tparentNode.children.push(child);\n\t\t\torderedStickyElements.push(child);\n\t\t}\n\t\treturn stickyOutlineElement;\n\t}\n}\n\nclass StickyModelFromCandidateIndentationFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n\tprivate readonly provider: IndentRangeProvider;\n\n\tconstructor(\n\t\teditor: IActiveCodeEditor,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService) {\n\t\tsuper(editor);\n\n\t\tthis.provider = this._register(new IndentRangeProvider(editor.getModel(), this._languageConfigurationService, this._foldingLimitReporter));\n\t}\n\n\tprotected override async createModelFromProvider(\n\t\ttoken: CancellationToken,\n\t): Promise<FoldingRegions> {\n\t\treturn this.provider.compute(token);\n\t}\n}\n\nclass StickyModelFromCandidateSyntaxFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n\tprivate readonly provider: SyntaxRangeProvider | undefined;\n\n\tconstructor(editor: IActiveCodeEditor,\n\t\tonProviderUpdate: () => void,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService\n\t) {\n\t\tsuper(editor);\n\t\tconst selectedProviders = FoldingController.getFoldingRangeProviders(this._languageFeaturesService, editor.getModel());\n\t\tif (selectedProviders.length > 0) {\n\t\t\tthis.provider = this._register(new SyntaxRangeProvider(editor.getModel(), selectedProviders, onProviderUpdate, this._foldingLimitReporter, undefined));\n\t\t}\n\t}\n\n\tprotected override isProviderValid(): boolean {\n\t\treturn this.provider !== undefined;\n\t}\n\n\tprotected override async createModelFromProvider(\n\t\ttoken: CancellationToken,\n\t): Promise<FoldingRegions | null> {\n\t\treturn this.provider?.compute(token) ?? null;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ModelProvider", "Status", "token"]
}
