{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/indentation/common/indentUtils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function getSpaceCnt(str: string, tabSize: number) {\n\tlet spacesCnt = 0;\n\n\tfor (let i = 0; i < str.length; i++) {\n\t\tif (str.charAt(i) === \"\\t\") {\n\t\t\tspacesCnt += tabSize;\n\t\t} else {\n\t\t\tspacesCnt++;\n\t\t}\n\t}\n\n\treturn spacesCnt;\n}\n\nexport function generateIndent(\n\tspacesCnt: number,\n\ttabSize: number,\n\tinsertSpaces: boolean,\n) {\n\tspacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n\n\tlet result = \"\";\n\tif (!insertSpaces) {\n\t\tconst tabsCnt = Math.floor(spacesCnt / tabSize);\n\t\tspacesCnt = spacesCnt % tabSize;\n\t\tfor (let i = 0; i < tabsCnt; i++) {\n\t\t\tresult += \"\\t\";\n\t\t}\n\t}\n\n\tfor (let i = 0; i < spacesCnt; i++) {\n\t\tresult += \" \";\n\t}\n\n\treturn result;\n}\n"],
  "mappings": ";;AAKO,SAAS,YAAY,KAAa,SAAiB;AACzD,MAAI,YAAY;AAEhB,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACpC,QAAI,IAAI,OAAO,CAAC,MAAM,KAAM;AAC3B,mBAAa;AAAA,IACd,OAAO;AACN;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AACR;AAZgB;AAcT,SAAS,eACf,WACA,SACA,cACC;AACD,cAAY,YAAY,IAAI,IAAI;AAEhC,MAAI,SAAS;AACb,MAAI,CAAC,cAAc;AAClB,UAAM,UAAU,KAAK,MAAM,YAAY,OAAO;AAC9C,gBAAY,YAAY;AACxB,aAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AACjC,gBAAU;AAAA,IACX;AAAA,EACD;AAEA,WAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AACnC,cAAU;AAAA,EACX;AAEA,SAAO;AACR;AArBgB;",
  "names": []
}
