var X=Object.defineProperty;var Y=Object.getOwnPropertyDescriptor;var W=(a,n,e,t)=>{for(var i=t>1?void 0:t?Y(n,e):n,s=a.length-1,o;s>=0;s--)(o=a[s])&&(i=(t?o(n,e,i):o(i))||i);return t&&i&&X(n,e,i),i},P=(a,n)=>(e,t)=>n(e,t,a);import{DisposableStore as F}from"../../../../base/common/lifecycle.js";import*as y from"../../../../base/common/strings.js";import*as c from"../../../../nls.js";import{IQuickInputService as Z}from"../../../../platform/quickinput/common/quickInput.js";import{EditorAction as L,EditorContributionInstantiation as $,registerEditorAction as f,registerEditorContribution as ee}from"../../../browser/editorExtensions.js";import{ShiftCommand as j}from"../../../common/commands/shiftCommand.js";import{EditorAutoIndentStrategy as te,EditorOption as D}from"../../../common/config/editorOptions.js";import{Range as v}from"../../../common/core/range.js";import{EditorContextKeys as z}from"../../../common/editorContextKeys.js";import{StandardTokenType as B}from"../../../common/encodedTokenAttributes.js";import{getGoodIndentForLine as q,getIndentMetadata as ne}from"../../../common/languages/autoIndent.js";import{ILanguageConfigurationService as E}from"../../../common/languages/languageConfigurationRegistry.js";import{IndentConsts as ie}from"../../../common/languages/supports/indentRules.js";import{IModelService as K}from"../../../common/services/model.js";import{getStandardTokenTypeAtPosition as oe}from"../../../common/tokens/lineTokens.js";import*as I from"../common/indentUtils.js";import{getReindentEditOperations as V}from"../common/indentation.js";class M extends L{static ID="editor.action.indentationToSpaces";constructor(){super({id:M.ID,label:c.localize("indentationToSpaces","Convert Indentation to Spaces"),alias:"Convert Indentation to Spaces",precondition:z.writable,metadata:{description:c.localize2("indentationToSpacesDescription","Convert the tab indentation to spaces.")}})}run(n,e){const t=e.getModel();if(!t)return;const i=t.getOptions(),s=e.getSelection();if(!s)return;const o=new de(s,i.tabSize);e.pushUndoStop(),e.executeCommands(this.id,[o]),e.pushUndoStop(),t.updateOptions({insertSpaces:!0})}}class N extends L{static ID="editor.action.indentationToTabs";constructor(){super({id:N.ID,label:c.localize("indentationToTabs","Convert Indentation to Tabs"),alias:"Convert Indentation to Tabs",precondition:z.writable,metadata:{description:c.localize2("indentationToTabsDescription","Convert the spaces indentation to tabs.")}})}run(n,e){const t=e.getModel();if(!t)return;const i=t.getOptions(),s=e.getSelection();if(!s)return;const o=new le(s,i.tabSize);e.pushUndoStop(),e.executeCommands(this.id,[o]),e.pushUndoStop(),t.updateOptions({insertSpaces:!1})}}class k extends L{constructor(e,t,i){super(i);this.insertSpaces=e;this.displaySizeOnly=t}run(e,t){const i=e.get(Z),s=e.get(K),o=t.getModel();if(!o)return;const l=s.getCreationOptions(o.getLanguageId(),o.uri,o.isForSimpleWidget),d=o.getOptions(),p=[1,2,3,4,5,6,7,8].map(r=>({id:r.toString(),label:r.toString(),description:r===l.tabSize&&r===d.tabSize?c.localize("configuredTabSize","Configured Tab Size"):r===l.tabSize?c.localize("defaultTabSize","Default Tab Size"):r===d.tabSize?c.localize("currentTabSize","Current Tab Size"):void 0})),m=Math.min(o.getOptions().tabSize-1,7);setTimeout(()=>{i.pick(p,{placeHolder:c.localize({key:"selectTabWidth",comment:["Tab corresponds to the tab key"]},"Select Tab Size for Current File"),activeItem:p[m]}).then(r=>{if(r&&o&&!o.isDisposed()){const S=Number.parseInt(r.label,10);this.displaySizeOnly?o.updateOptions({tabSize:S}):o.updateOptions({tabSize:S,indentSize:S,insertSpaces:this.insertSpaces})}})},50)}}class w extends k{static ID="editor.action.indentUsingTabs";constructor(){super(!1,!1,{id:w.ID,label:c.localize("indentUsingTabs","Indent Using Tabs"),alias:"Indent Using Tabs",precondition:void 0,metadata:{description:c.localize2("indentUsingTabsDescription","Use indentation with tabs.")}})}}class _ extends k{static ID="editor.action.indentUsingSpaces";constructor(){super(!0,!1,{id:_.ID,label:c.localize("indentUsingSpaces","Indent Using Spaces"),alias:"Indent Using Spaces",precondition:void 0,metadata:{description:c.localize2("indentUsingSpacesDescription","Use indentation with spaces.")}})}}class U extends k{static ID="editor.action.changeTabDisplaySize";constructor(){super(!0,!0,{id:U.ID,label:c.localize("changeTabDisplaySize","Change Tab Display Size"),alias:"Change Tab Display Size",precondition:void 0,metadata:{description:c.localize2("changeTabDisplaySizeDescription","Change the space size equivalent of the tab.")}})}}class A extends L{static ID="editor.action.detectIndentation";constructor(){super({id:A.ID,label:c.localize("detectIndentation","Detect Indentation from Content"),alias:"Detect Indentation from Content",precondition:void 0,metadata:{description:c.localize2("detectIndentationDescription","Detect the indentation from content.")}})}run(n,e){const t=n.get(K),i=e.getModel();if(!i)return;const s=t.getCreationOptions(i.getLanguageId(),i.uri,i.isForSimpleWidget);i.detectIndentation(s.insertSpaces,s.tabSize)}}class se extends L{constructor(){super({id:"editor.action.reindentlines",label:c.localize("editor.reindentlines","Reindent Lines"),alias:"Reindent Lines",precondition:z.writable,metadata:{description:c.localize2("editor.reindentlinesDescription","Reindent the lines of the editor.")}})}run(n,e){const t=n.get(E),i=e.getModel();if(!i)return;const s=V(i,t,1,i.getLineCount());s.length>0&&(e.pushUndoStop(),e.executeEdits(this.id,s),e.pushUndoStop())}}class re extends L{constructor(){super({id:"editor.action.reindentselectedlines",label:c.localize("editor.reindentselectedlines","Reindent Selected Lines"),alias:"Reindent Selected Lines",precondition:z.writable,metadata:{description:c.localize2("editor.reindentselectedlinesDescription","Reindent the selected lines of the editor.")}})}run(n,e){const t=n.get(E),i=e.getModel();if(!i)return;const s=e.getSelections();if(s===null)return;const o=[];for(const l of s){let d=l.startLineNumber,p=l.endLineNumber;if(d!==p&&l.endColumn===1&&p--,d===1){if(d===p)continue}else d--;const m=V(i,t,d,p);o.push(...m)}o.length>0&&(e.pushUndoStop(),e.executeEdits(this.id,o),e.pushUndoStop())}}class ae{_edits;_initialSelection;_selectionId;constructor(n,e){this._initialSelection=e,this._edits=[],this._selectionId=null;for(const t of n)t.range&&typeof t.text=="string"&&this._edits.push(t)}getEditOperations(n,e){for(const i of this._edits)e.addEditOperation(v.lift(i.range),i.text);let t=!1;Array.isArray(this._edits)&&this._edits.length===1&&this._initialSelection.isEmpty()&&(this._edits[0].range.startColumn===this._initialSelection.endColumn&&this._edits[0].range.startLineNumber===this._initialSelection.endLineNumber?(t=!0,this._selectionId=e.trackSelection(this._initialSelection,!0)):this._edits[0].range.endColumn===this._initialSelection.startColumn&&this._edits[0].range.endLineNumber===this._initialSelection.startLineNumber&&(t=!0,this._selectionId=e.trackSelection(this._initialSelection,!1))),t||(this._selectionId=e.trackSelection(this._initialSelection))}computeCursorState(n,e){return e.getTrackedSelection(this._selectionId)}}let T=class{constructor(n,e){this.editor=n;this._languageConfigurationService=e;this.callOnDispose.add(n.onDidChangeConfiguration(()=>this.update())),this.callOnDispose.add(n.onDidChangeModel(()=>this.update())),this.callOnDispose.add(n.onDidChangeModelLanguage(()=>this.update()))}static ID="editor.contrib.autoIndentOnPaste";callOnDispose=new F;callOnModel=new F;update(){this.callOnModel.clear(),!(this.editor.getOption(D.autoIndent)<te.Full||this.editor.getOption(D.formatOnPaste))&&this.editor.hasModel()&&this.callOnModel.add(this.editor.onDidPaste(({range:n})=>{this.trigger(n)}))}trigger(n){const e=this.editor.getSelections();if(e===null||e.length>1)return;const t=this.editor.getModel();if(!t||this.rangeContainsOnlyWhitespaceCharacters(t,n)||ce(t,n)||!t.tokenization.isCheapToTokenize(n.getStartPosition().lineNumber))return;const s=this.editor.getOption(D.autoIndent),{tabSize:o,indentSize:l,insertSpaces:d}=t.getOptions(),p=[],m={shiftIndent:g=>j.shiftIndent(g,g.length+1,o,l,d),unshiftIndent:g=>j.unshiftIndent(g,g.length+1,o,l,d)};let r=n.startLineNumber;for(;r<=n.endLineNumber;){if(this.shouldIgnoreLine(t,r)){r++;continue}break}if(r>n.endLineNumber)return;let S=t.getLineContent(r);if(!/\S/.test(S.substring(0,n.startColumn-1))){const g=q(s,t,t.getLanguageId(),r,m,this._languageConfigurationService);if(g!==null){const b=y.getLeadingWhitespace(S),u=I.getSpaceCnt(g,o),C=I.getSpaceCnt(b,o);if(u!==C){const h=I.generateIndent(u,o,d);p.push({range:new v(r,1,r,b.length+1),text:h}),S=h+S.substring(b.length)}else{const h=ne(t,r,this._languageConfigurationService);if(h===0||h===ie.UNINDENT_MASK)return}}}const H=r;for(;r<n.endLineNumber;){if(!/\S/.test(t.getLineContent(r+1))){r++;continue}break}if(r!==n.endLineNumber){const b=q(s,{tokenization:{getLineTokens:u=>t.tokenization.getLineTokens(u),getLanguageId:()=>t.getLanguageId(),getLanguageIdAtPosition:(u,C)=>t.getLanguageIdAtPosition(u,C)},getLineContent:u=>u===H?S:t.getLineContent(u)},t.getLanguageId(),r+1,m,this._languageConfigurationService);if(b!==null){const u=I.getSpaceCnt(b,o),C=I.getSpaceCnt(y.getLeadingWhitespace(t.getLineContent(r+1)),o);if(u!==C){const h=u-C;for(let O=r+1;O<=n.endLineNumber;O++){const Q=t.getLineContent(O),x=y.getLeadingWhitespace(Q),J=I.getSpaceCnt(x,o)+h,R=I.generateIndent(J,o,d);R!==x&&p.push({range:new v(O,1,O,x.length+1),text:R})}}}}if(p.length>0){this.editor.pushUndoStop();const g=new ae(p,this.editor.getSelection());this.editor.executeCommand("autoIndentOnPaste",g),this.editor.pushUndoStop()}}rangeContainsOnlyWhitespaceCharacters(n,e){const t=s=>s.trim().length===0;let i=!0;if(e.startLineNumber===e.endLineNumber){const o=n.getLineContent(e.startLineNumber).substring(e.startColumn-1,e.endColumn-1);i=t(o)}else for(let s=e.startLineNumber;s<=e.endLineNumber;s++){const o=n.getLineContent(s);if(s===e.startLineNumber){const l=o.substring(e.startColumn-1);i=t(l)}else if(s===e.endLineNumber){const l=o.substring(0,e.endColumn-1);i=t(l)}else i=n.getLineFirstNonWhitespaceColumn(s)===0;if(!i)break}return i}shouldIgnoreLine(n,e){n.tokenization.forceTokenization(e);const t=n.getLineFirstNonWhitespaceColumn(e);if(t===0)return!0;const i=n.tokenization.getLineTokens(e);if(i.getCount()>0){const s=i.findTokenIndexAtOffset(t);if(s>=0&&i.getStandardTokenType(s)===B.Comment)return!0}return!1}dispose(){this.callOnDispose.dispose(),this.callOnModel.dispose()}};T=W([P(1,E)],T);function ce(a,n){const e=t=>oe(a,t)===B.String;return e(n.getStartPosition())||e(n.getEndPosition())}function G(a,n,e,t){if(a.getLineCount()===1&&a.getLineMaxColumn(1)===1)return;let i="";for(let o=0;o<e;o++)i+=" ";const s=new RegExp(i,"gi");for(let o=1,l=a.getLineCount();o<=l;o++){let d=a.getLineFirstNonWhitespaceColumn(o);if(d===0&&(d=a.getLineMaxColumn(o)),d===1)continue;const p=new v(o,1,o,d),m=a.getValueInRange(p),r=t?m.replace(/\t/gi,i):m.replace(s,"	");n.addEditOperation(p,r)}}class de{constructor(n,e){this.selection=n;this.tabSize=e}selectionId=null;getEditOperations(n,e){this.selectionId=e.trackSelection(this.selection),G(n,e,this.tabSize,!0)}computeCursorState(n,e){return e.getTrackedSelection(this.selectionId)}}class le{constructor(n,e){this.selection=n;this.tabSize=e}selectionId=null;getEditOperations(n,e){this.selectionId=e.trackSelection(this.selection),G(n,e,this.tabSize,!1)}computeCursorState(n,e){return e.getTrackedSelection(this.selectionId)}}ee(T.ID,T,$.BeforeFirstInteraction),f(M),f(N),f(w),f(_),f(U),f(A),f(se),f(re);export{T as AutoIndentOnPaste,ae as AutoIndentOnPasteCommand,k as ChangeIndentationSizeAction,U as ChangeTabDisplaySize,A as DetectIndentation,_ as IndentUsingSpaces,w as IndentUsingTabs,M as IndentationToSpacesAction,de as IndentationToSpacesCommand,N as IndentationToTabsAction,le as IndentationToTabsCommand,se as ReindentLinesAction,re as ReindentSelectedLinesAction};
