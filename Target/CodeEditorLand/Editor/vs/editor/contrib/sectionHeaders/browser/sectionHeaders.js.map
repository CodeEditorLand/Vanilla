{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/sectionHeaders/browser/sectionHeaders.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancelablePromise,\n\tRunOnceScheduler,\n} from \"../../../../base/common/async.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorContributionInstantiation,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport {\n\tEditorOption,\n\ttype IEditorMinimapOptions,\n} from \"../../../common/config/editorOptions.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { StandardTokenType } from \"../../../common/encodedTokenAttributes.js\";\nimport { ILanguageConfigurationService } from \"../../../common/languages/languageConfigurationRegistry.js\";\nimport {\n\ttype IModelDeltaDecoration,\n\tMinimapPosition,\n\tMinimapSectionHeaderStyle,\n\tTrackedRangeStickiness,\n} from \"../../../common/model.js\";\nimport { ModelDecorationOptions } from \"../../../common/model/textModel.js\";\nimport { IEditorWorkerService } from \"../../../common/services/editorWorker.js\";\nimport type {\n\tFindSectionHeaderOptions,\n\tSectionHeader,\n} from \"../../../common/services/findSectionHeaders.js\";\n\nexport class SectionHeaderDetector\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID: string = \"editor.sectionHeaderDetector\";\n\n\tprivate options: FindSectionHeaderOptions | undefined;\n\tprivate decorations = this.editor.createDecorationsCollection();\n\tprivate computeSectionHeaders: RunOnceScheduler;\n\tprivate computePromise: CancelablePromise<SectionHeader[]> | null;\n\tprivate currentOccurrences: {\n\t\t[decorationId: string]: SectionHeaderOccurrence;\n\t};\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ILanguageConfigurationService\n\t\tprivate readonly languageConfigurationService: ILanguageConfigurationService,\n\t\t@IEditorWorkerService\n\t\tprivate readonly editorWorkerService: IEditorWorkerService,\n\t) {\n\t\tsuper();\n\n\t\tthis.options = this.createOptions(\n\t\t\teditor.getOption(EditorOption.minimap),\n\t\t);\n\t\tthis.computePromise = null;\n\t\tthis.currentOccurrences = {};\n\n\t\tthis._register(\n\t\t\teditor.onDidChangeModel((e) => {\n\t\t\t\tthis.currentOccurrences = {};\n\t\t\t\tthis.options = this.createOptions(\n\t\t\t\t\teditor.getOption(EditorOption.minimap),\n\t\t\t\t);\n\t\t\t\tthis.stop();\n\t\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\teditor.onDidChangeModelLanguage((e) => {\n\t\t\t\tthis.currentOccurrences = {};\n\t\t\t\tthis.options = this.createOptions(\n\t\t\t\t\teditor.getOption(EditorOption.minimap),\n\t\t\t\t);\n\t\t\t\tthis.stop();\n\t\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tlanguageConfigurationService.onDidChange((e) => {\n\t\t\t\tconst editorLanguageId = this.editor\n\t\t\t\t\t.getModel()\n\t\t\t\t\t?.getLanguageId();\n\t\t\t\tif (editorLanguageId && e.affects(editorLanguageId)) {\n\t\t\t\t\tthis.currentOccurrences = {};\n\t\t\t\t\tthis.options = this.createOptions(\n\t\t\t\t\t\teditor.getOption(EditorOption.minimap),\n\t\t\t\t\t);\n\t\t\t\t\tthis.stop();\n\t\t\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\teditor.onDidChangeConfiguration((e) => {\n\t\t\t\tif (this.options && !e.hasChanged(EditorOption.minimap)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.options = this.createOptions(\n\t\t\t\t\teditor.getOption(EditorOption.minimap),\n\t\t\t\t);\n\n\t\t\t\t// Remove any links (for the getting disabled case)\n\t\t\t\tthis.updateDecorations([]);\n\n\t\t\t\t// Stop any computation (for the getting disabled case)\n\t\t\t\tthis.stop();\n\n\t\t\t\t// Start computing (for the getting enabled case)\n\t\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeModelContent((e) => {\n\t\t\t\tthis.computeSectionHeaders.schedule();\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\teditor.onDidChangeModelTokens((e) => {\n\t\t\t\tif (!this.computeSectionHeaders.isScheduled()) {\n\t\t\t\t\tthis.computeSectionHeaders.schedule(1000);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.computeSectionHeaders = this._register(\n\t\t\tnew RunOnceScheduler(() => {\n\t\t\t\tthis.findSectionHeaders();\n\t\t\t}, 250),\n\t\t);\n\n\t\tthis.computeSectionHeaders.schedule(0);\n\t}\n\n\tprivate createOptions(\n\t\tminimap: Readonly<Required<IEditorMinimapOptions>>,\n\t): FindSectionHeaderOptions | undefined {\n\t\tif (!minimap || !this.editor.hasModel()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst languageId = this.editor.getModel().getLanguageId();\n\t\tif (!languageId) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst commentsConfiguration =\n\t\t\tthis.languageConfigurationService.getLanguageConfiguration(\n\t\t\t\tlanguageId,\n\t\t\t).comments;\n\t\tconst foldingRules =\n\t\t\tthis.languageConfigurationService.getLanguageConfiguration(\n\t\t\t\tlanguageId,\n\t\t\t).foldingRules;\n\n\t\tif (!commentsConfiguration && !foldingRules?.markers) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tfoldingRules,\n\t\t\tfindMarkSectionHeaders: minimap.showMarkSectionHeaders,\n\t\t\tfindRegionSectionHeaders: minimap.showRegionSectionHeaders,\n\t\t};\n\t}\n\n\tprivate findSectionHeaders() {\n\t\tif (\n\t\t\t!this.editor.hasModel() ||\n\t\t\t(!this.options?.findMarkSectionHeaders &&\n\t\t\t\t!this.options?.findRegionSectionHeaders)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (model.isDisposed() || model.isTooLargeForSyncing()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelVersionId = model.getVersionId();\n\t\tthis.editorWorkerService\n\t\t\t.findSectionHeaders(model.uri, this.options)\n\t\t\t.then((sectionHeaders) => {\n\t\t\t\tif (\n\t\t\t\t\tmodel.isDisposed() ||\n\t\t\t\t\tmodel.getVersionId() !== modelVersionId\n\t\t\t\t) {\n\t\t\t\t\t// model changed in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.updateDecorations(sectionHeaders);\n\t\t\t});\n\t}\n\n\tprivate updateDecorations(sectionHeaders: SectionHeader[]): void {\n\t\tconst model = this.editor.getModel();\n\t\tif (model) {\n\t\t\t// Remove all section headers that should be in comments and are not in comments\n\t\t\tsectionHeaders = sectionHeaders.filter((sectionHeader) => {\n\t\t\t\tif (!sectionHeader.shouldBeInComments) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tconst validRange = model.validateRange(sectionHeader.range);\n\t\t\t\tconst tokens = model.tokenization.getLineTokens(\n\t\t\t\t\tvalidRange.startLineNumber,\n\t\t\t\t);\n\t\t\t\tconst idx = tokens.findTokenIndexAtOffset(\n\t\t\t\t\tvalidRange.startColumn - 1,\n\t\t\t\t);\n\t\t\t\tconst tokenType = tokens.getStandardTokenType(idx);\n\t\t\t\tconst languageId = tokens.getLanguageId(idx);\n\t\t\t\treturn (\n\t\t\t\t\tlanguageId === model.getLanguageId() &&\n\t\t\t\t\ttokenType === StandardTokenType.Comment\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\tconst oldDecorations = Object.values(this.currentOccurrences).map(\n\t\t\t(occurrence) => occurrence.decorationId,\n\t\t);\n\t\tconst newDecorations = sectionHeaders.map((sectionHeader) =>\n\t\t\tdecoration(sectionHeader),\n\t\t);\n\n\t\tthis.editor.changeDecorations((changeAccessor) => {\n\t\t\tconst decorations = changeAccessor.deltaDecorations(\n\t\t\t\toldDecorations,\n\t\t\t\tnewDecorations,\n\t\t\t);\n\n\t\t\tthis.currentOccurrences = {};\n\t\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\t\tconst occurrence = {\n\t\t\t\t\tsectionHeader: sectionHeaders[i],\n\t\t\t\t\tdecorationId: decorations[i],\n\t\t\t\t};\n\t\t\t\tthis.currentOccurrences[occurrence.decorationId] = occurrence;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate stop(): void {\n\t\tthis.computeSectionHeaders.cancel();\n\t\tif (this.computePromise) {\n\t\t\tthis.computePromise.cancel();\n\t\t\tthis.computePromise = null;\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.stop();\n\t\tthis.decorations.clear();\n\t}\n}\n\ninterface SectionHeaderOccurrence {\n\treadonly sectionHeader: SectionHeader;\n\treadonly decorationId: string;\n}\n\nfunction decoration(sectionHeader: SectionHeader): IModelDeltaDecoration {\n\treturn {\n\t\trange: sectionHeader.range,\n\t\toptions: ModelDecorationOptions.createDynamic({\n\t\t\tdescription: \"section-header\",\n\t\t\tstickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingAfter,\n\t\t\tcollapseOnReplaceEdit: true,\n\t\t\tminimap: {\n\t\t\t\tcolor: undefined,\n\t\t\t\tposition: MinimapPosition.Inline,\n\t\t\t\tsectionHeaderStyle: sectionHeader.hasSeparatorLine\n\t\t\t\t\t? MinimapSectionHeaderStyle.Underlined\n\t\t\t\t\t: MinimapSectionHeaderStyle.Normal,\n\t\t\t\tsectionHeaderText: sectionHeader.text,\n\t\t\t},\n\t\t}),\n\t};\n}\n\nregisterEditorContribution(\n\tSectionHeaderDetector.ID,\n\tSectionHeaderDetector,\n\tEditorContributionInstantiation.AfterFirstRender,\n);\n"],
  "mappings": "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",
  "names": []
}
