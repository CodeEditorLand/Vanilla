{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport {\n\ttype CancelablePromise,\n\tcreateCancelablePromise,\n\traceCancellation,\n} from \"../../../../base/common/async.js\";\nimport {\n\tVSDataTransfer,\n\tmatchesMimeType,\n} from \"../../../../base/common/dataTransfer.js\";\nimport { HierarchicalKind } from \"../../../../base/common/hierarchicalKind.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { RawContextKey } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { LocalSelectionTransfer } from \"../../../../platform/dnd/browser/dnd.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { toExternalVSDataTransfer } from \"../../../browser/dnd.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { IPosition } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport type {\n\tDocumentDropEdit,\n\tDocumentDropEditProvider,\n} from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { DraggedTreeItemsIdentifier } from \"../../../common/services/treeViewsDnd.js\";\nimport { ITreeViewsDnDService } from \"../../../common/services/treeViewsDndService.js\";\nimport {\n\tCodeEditorStateFlag,\n\tEditorStateCancellationTokenSource,\n} from \"../../editorState/browser/editorState.js\";\nimport { InlineProgressManager } from \"../../inlineProgress/browser/inlineProgress.js\";\nimport { sortEditsByYieldTo } from \"./edit.js\";\nimport { PostEditWidgetManager } from \"./postEditWidget.js\";\n\nexport const defaultProviderConfig =\n\t\"editor.experimental.dropIntoEditor.defaultProvider\";\n\nexport const changeDropTypeCommandId = \"editor.changeDropType\";\n\nexport const dropWidgetVisibleCtx = new RawContextKey<boolean>(\n\t\"dropWidgetVisible\",\n\tfalse,\n\tlocalize(\"dropWidgetVisible\", \"Whether the drop widget is showing\"),\n);\n\nexport class DropIntoEditorController\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.contrib.dropIntoEditorController\";\n\n\tpublic static get(editor: ICodeEditor): DropIntoEditorController | null {\n\t\treturn editor.getContribution<DropIntoEditorController>(\n\t\t\tDropIntoEditorController.ID,\n\t\t);\n\t}\n\n\tprivate _currentOperation?: CancelablePromise<void>;\n\n\tprivate readonly _dropProgressManager: InlineProgressManager;\n\tprivate readonly _postDropWidgetManager: PostEditWidgetManager<DocumentDropEdit>;\n\n\tprivate readonly treeItemsTransfer =\n\t\tLocalSelectionTransfer.getInstance<DraggedTreeItemsIdentifier>();\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configService: IConfigurationService,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITreeViewsDnDService\n\t\tprivate readonly _treeViewsDragAndDropService: ITreeViewsDnDService,\n\t) {\n\t\tsuper();\n\n\t\tthis._dropProgressManager = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tInlineProgressManager,\n\t\t\t\t\"dropIntoEditor\",\n\t\t\t\teditor,\n\t\t\t),\n\t\t);\n\t\tthis._postDropWidgetManager = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tPostEditWidgetManager,\n\t\t\t\t\"dropIntoEditor\",\n\t\t\t\teditor,\n\t\t\t\tdropWidgetVisibleCtx,\n\t\t\t\t{\n\t\t\t\t\tid: changeDropTypeCommandId,\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"postDropWidgetTitle\",\n\t\t\t\t\t\t\"Show drop options...\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\teditor.onDropIntoEditor((e) =>\n\t\t\t\tthis.onDropIntoEditor(editor, e.position, e.event),\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic clearWidgets() {\n\t\tthis._postDropWidgetManager.clear();\n\t}\n\n\tpublic changeDropType() {\n\t\tthis._postDropWidgetManager.tryShowSelector();\n\t}\n\n\tprivate async onDropIntoEditor(\n\t\teditor: ICodeEditor,\n\t\tposition: IPosition,\n\t\tdragEvent: DragEvent,\n\t) {\n\t\tif (!dragEvent.dataTransfer || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._currentOperation?.cancel();\n\n\t\teditor.focus();\n\t\teditor.setPosition(position);\n\n\t\tconst p = createCancelablePromise(async (token) => {\n\t\t\tconst disposables = new DisposableStore();\n\n\t\t\tconst tokenSource = disposables.add(\n\t\t\t\tnew EditorStateCancellationTokenSource(\n\t\t\t\t\teditor,\n\t\t\t\t\tCodeEditorStateFlag.Value,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttoken,\n\t\t\t\t),\n\t\t\t);\n\t\t\ttry {\n\t\t\t\tconst ourDataTransfer =\n\t\t\t\t\tawait this.extractDataTransferData(dragEvent);\n\t\t\t\tif (\n\t\t\t\t\tourDataTransfer.size === 0 ||\n\t\t\t\t\ttokenSource.token.isCancellationRequested\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst model = editor.getModel();\n\t\t\t\tif (!model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst providers =\n\t\t\t\t\tthis._languageFeaturesService.documentDropEditProvider\n\t\t\t\t\t\t.ordered(model)\n\t\t\t\t\t\t.filter((provider) => {\n\t\t\t\t\t\t\tif (!provider.dropMimeTypes) {\n\t\t\t\t\t\t\t\t// Keep all providers that don't specify mime types\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn provider.dropMimeTypes.some((mime) =>\n\t\t\t\t\t\t\t\tourDataTransfer.matches(mime),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\n\t\t\t\tconst editSession = disposables.add(\n\t\t\t\t\tawait this.getDropEdits(\n\t\t\t\t\t\tproviders,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\tourDataTransfer,\n\t\t\t\t\t\ttokenSource,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (tokenSource.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (editSession.edits.length) {\n\t\t\t\t\tconst activeEditIndex = this.getInitialActiveEditIndex(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\teditSession.edits,\n\t\t\t\t\t);\n\t\t\t\t\tconst canShowWidget =\n\t\t\t\t\t\teditor.getOption(EditorOption.dropIntoEditor)\n\t\t\t\t\t\t\t.showDropSelector === \"afterDrop\";\n\t\t\t\t\t// Pass in the parent token here as it tracks cancelling the entire drop operation\n\t\t\t\t\tawait this._postDropWidgetManager.applyEditAndShowIfNeeded(\n\t\t\t\t\t\t[Range.fromPositions(position)],\n\t\t\t\t\t\t{ activeEditIndex, allEdits: editSession.edits },\n\t\t\t\t\t\tcanShowWidget,\n\t\t\t\t\t\tasync (edit) => edit,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tif (this._currentOperation === p) {\n\t\t\t\t\tthis._currentOperation = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._dropProgressManager.showWhile(\n\t\t\tposition,\n\t\t\tlocalize(\n\t\t\t\t\"dropIntoEditorProgress\",\n\t\t\t\t\"Running drop handlers. Click to cancel\",\n\t\t\t),\n\t\t\tp,\n\t\t\t{ cancel: () => p.cancel() },\n\t\t);\n\t\tthis._currentOperation = p;\n\t}\n\n\tprivate async getDropEdits(\n\t\tproviders: readonly DocumentDropEditProvider[],\n\t\tmodel: ITextModel,\n\t\tposition: IPosition,\n\t\tdataTransfer: VSDataTransfer,\n\t\ttokenSource: EditorStateCancellationTokenSource,\n\t) {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst results = await raceCancellation(\n\t\t\tPromise.all(\n\t\t\t\tproviders.map(async (provider) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst edits = await provider.provideDocumentDropEdits(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\tdataTransfer,\n\t\t\t\t\t\t\ttokenSource.token,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (edits) {\n\t\t\t\t\t\t\tdisposables.add(edits);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn edits?.edits.map((edit) => ({\n\t\t\t\t\t\t\t...edit,\n\t\t\t\t\t\t\tproviderId: provider.id,\n\t\t\t\t\t\t}));\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t}),\n\t\t\t),\n\t\t\ttokenSource.token,\n\t\t);\n\n\t\tconst edits = coalesce(results ?? []).flat();\n\t\treturn {\n\t\t\tedits: sortEditsByYieldTo(edits),\n\t\t\tdispose: () => disposables.dispose(),\n\t\t};\n\t}\n\n\tprivate getInitialActiveEditIndex(\n\t\tmodel: ITextModel,\n\t\tedits: ReadonlyArray<\n\t\t\tDocumentDropEdit & { readonly providerId?: string }\n\t\t>,\n\t) {\n\t\tconst preferredProviders = this._configService.getValue<\n\t\t\tRecord<string, string>\n\t\t>(defaultProviderConfig, { resource: model.uri });\n\t\tfor (const [configMime, desiredKindStr] of Object.entries(\n\t\t\tpreferredProviders,\n\t\t)) {\n\t\t\tconst desiredKind = new HierarchicalKind(desiredKindStr);\n\t\t\tconst editIndex = edits.findIndex(\n\t\t\t\t(edit) =>\n\t\t\t\t\tdesiredKind.value === edit.providerId &&\n\t\t\t\t\tedit.handledMimeType &&\n\t\t\t\t\tmatchesMimeType(configMime, [edit.handledMimeType]),\n\t\t\t);\n\t\t\tif (editIndex >= 0) {\n\t\t\t\treturn editIndex;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate async extractDataTransferData(\n\t\tdragEvent: DragEvent,\n\t): Promise<VSDataTransfer> {\n\t\tif (!dragEvent.dataTransfer) {\n\t\t\treturn new VSDataTransfer();\n\t\t}\n\n\t\tconst dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n\n\t\tif (\n\t\t\tthis.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)\n\t\t) {\n\t\t\tconst data = this.treeItemsTransfer.getData(\n\t\t\t\tDraggedTreeItemsIdentifier.prototype,\n\t\t\t);\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\tfor (const id of data) {\n\t\t\t\t\tconst treeDataTransfer =\n\t\t\t\t\t\tawait this._treeViewsDragAndDropService.removeDragOperationTransfer(\n\t\t\t\t\t\t\tid.identifier,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (treeDataTransfer) {\n\t\t\t\t\t\tfor (const [type, value] of treeDataTransfer) {\n\t\t\t\t\t\t\tdataTransfer.replace(type, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dataTransfer;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["edits"]
}
