{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\ttype IReadonlyVSDataTransfer,\n\tUriList,\n} from \"../../../../base/common/dataTransfer.js\";\nimport { HierarchicalKind } from \"../../../../base/common/hierarchicalKind.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { Mimes } from \"../../../../base/common/mime.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { relativePath } from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport type { IPosition } from \"../../../common/core/position.js\";\nimport type { IRange } from \"../../../common/core/range.js\";\nimport {\n\ttype DocumentDropEditProvider,\n\ttype DocumentDropEditsSession,\n\ttype DocumentPasteContext,\n\ttype DocumentPasteEdit,\n\ttype DocumentPasteEditProvider,\n\ttype DocumentPasteEditsSession,\n\tDocumentPasteTriggerKind,\n} from \"../../../common/languages.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\n\nabstract class SimplePasteAndDropProvider\n\timplements DocumentDropEditProvider, DocumentPasteEditProvider\n{\n\tabstract readonly kind: HierarchicalKind;\n\tabstract readonly dropMimeTypes: readonly string[] | undefined;\n\tabstract readonly pasteMimeTypes: readonly string[];\n\n\tasync provideDocumentPasteEdits(\n\t\t_model: ITextModel,\n\t\t_ranges: readonly IRange[],\n\t\tdataTransfer: IReadonlyVSDataTransfer,\n\t\tcontext: DocumentPasteContext,\n\t\ttoken: CancellationToken,\n\t): Promise<DocumentPasteEditsSession | undefined> {\n\t\tconst edit = await this.getEdit(dataTransfer, token);\n\t\tif (!edit) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tedits: [\n\t\t\t\t{\n\t\t\t\t\tinsertText: edit.insertText,\n\t\t\t\t\ttitle: edit.title,\n\t\t\t\t\tkind: edit.kind,\n\t\t\t\t\thandledMimeType: edit.handledMimeType,\n\t\t\t\t\tyieldTo: edit.yieldTo,\n\t\t\t\t},\n\t\t\t],\n\t\t\tdispose() {},\n\t\t};\n\t}\n\n\tasync provideDocumentDropEdits(\n\t\t_model: ITextModel,\n\t\t_position: IPosition,\n\t\tdataTransfer: IReadonlyVSDataTransfer,\n\t\ttoken: CancellationToken,\n\t): Promise<DocumentDropEditsSession | undefined> {\n\t\tconst edit = await this.getEdit(dataTransfer, token);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\t\treturn {\n\t\t\tedits: [\n\t\t\t\t{\n\t\t\t\t\tinsertText: edit.insertText,\n\t\t\t\t\ttitle: edit.title,\n\t\t\t\t\tkind: edit.kind,\n\t\t\t\t\thandledMimeType: edit.handledMimeType,\n\t\t\t\t\tyieldTo: edit.yieldTo,\n\t\t\t\t},\n\t\t\t],\n\t\t\tdispose() {},\n\t\t};\n\t}\n\n\tprotected abstract getEdit(\n\t\tdataTransfer: IReadonlyVSDataTransfer,\n\t\ttoken: CancellationToken,\n\t): Promise<DocumentPasteEdit | undefined>;\n}\n\nexport class DefaultTextPasteOrDropEditProvider extends SimplePasteAndDropProvider {\n\tstatic readonly id = \"text\";\n\tstatic readonly kind = new HierarchicalKind(\"text.plain\");\n\n\treadonly id = DefaultTextPasteOrDropEditProvider.id;\n\treadonly kind = DefaultTextPasteOrDropEditProvider.kind;\n\treadonly dropMimeTypes = [Mimes.text];\n\treadonly pasteMimeTypes = [Mimes.text];\n\n\tprotected async getEdit(\n\t\tdataTransfer: IReadonlyVSDataTransfer,\n\t\t_token: CancellationToken,\n\t): Promise<DocumentPasteEdit | undefined> {\n\t\tconst textEntry = dataTransfer.get(Mimes.text);\n\t\tif (!textEntry) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Suppress if there's also a uriList entry.\n\t\t// Typically the uri-list contains the same text as the text entry so showing both is confusing.\n\t\tif (dataTransfer.has(Mimes.uriList)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst insertText = await textEntry.asString();\n\t\treturn {\n\t\t\thandledMimeType: Mimes.text,\n\t\t\ttitle: localize(\"text.label\", \"Insert Plain Text\"),\n\t\t\tinsertText,\n\t\t\tkind: this.kind,\n\t\t};\n\t}\n}\n\nclass PathProvider extends SimplePasteAndDropProvider {\n\treadonly kind = new HierarchicalKind(\"uri.absolute\");\n\treadonly dropMimeTypes = [Mimes.uriList];\n\treadonly pasteMimeTypes = [Mimes.uriList];\n\n\tprotected async getEdit(\n\t\tdataTransfer: IReadonlyVSDataTransfer,\n\t\ttoken: CancellationToken,\n\t): Promise<DocumentPasteEdit | undefined> {\n\t\tconst entries = await extractUriList(dataTransfer);\n\t\tif (!entries.length || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet uriCount = 0;\n\t\tconst insertText = entries\n\t\t\t.map(({ uri, originalText }) => {\n\t\t\t\tif (uri.scheme === Schemas.file) {\n\t\t\t\t\treturn uri.fsPath;\n\t\t\t\t} else {\n\t\t\t\t\turiCount++;\n\t\t\t\t\treturn originalText;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.join(\" \");\n\n\t\tlet label: string;\n\t\tif (uriCount > 0) {\n\t\t\t// Dropping at least one generic uri (such as https) so use most generic label\n\t\t\tlabel =\n\t\t\t\tentries.length > 1\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"defaultDropProvider.uriList.uris\",\n\t\t\t\t\t\t\t\"Insert Uris\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\"defaultDropProvider.uriList.uri\", \"Insert Uri\");\n\t\t} else {\n\t\t\t// All the paths are file paths\n\t\t\tlabel =\n\t\t\t\tentries.length > 1\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"defaultDropProvider.uriList.paths\",\n\t\t\t\t\t\t\t\"Insert Paths\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"defaultDropProvider.uriList.path\",\n\t\t\t\t\t\t\t\"Insert Path\",\n\t\t\t\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\thandledMimeType: Mimes.uriList,\n\t\t\tinsertText,\n\t\t\ttitle: label,\n\t\t\tkind: this.kind,\n\t\t};\n\t}\n}\n\nclass RelativePathProvider extends SimplePasteAndDropProvider {\n\treadonly kind = new HierarchicalKind(\"uri.relative\");\n\treadonly dropMimeTypes = [Mimes.uriList];\n\treadonly pasteMimeTypes = [Mimes.uriList];\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async getEdit(\n\t\tdataTransfer: IReadonlyVSDataTransfer,\n\t\ttoken: CancellationToken,\n\t): Promise<DocumentPasteEdit | undefined> {\n\t\tconst entries = await extractUriList(dataTransfer);\n\t\tif (!entries.length || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst relativeUris = coalesce(\n\t\t\tentries.map(({ uri }) => {\n\t\t\t\tconst root =\n\t\t\t\t\tthis._workspaceContextService.getWorkspaceFolder(uri);\n\t\t\t\treturn root ? relativePath(root.uri, uri) : undefined;\n\t\t\t}),\n\t\t);\n\n\t\tif (!relativeUris.length) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\thandledMimeType: Mimes.uriList,\n\t\t\tinsertText: relativeUris.join(\" \"),\n\t\t\ttitle:\n\t\t\t\tentries.length > 1\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"defaultDropProvider.uriList.relativePaths\",\n\t\t\t\t\t\t\t\"Insert Relative Paths\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"defaultDropProvider.uriList.relativePath\",\n\t\t\t\t\t\t\t\"Insert Relative Path\",\n\t\t\t\t\t\t),\n\t\t\tkind: this.kind,\n\t\t};\n\t}\n}\n\nclass PasteHtmlProvider implements DocumentPasteEditProvider {\n\tpublic readonly kind = new HierarchicalKind(\"html\");\n\n\tpublic readonly pasteMimeTypes = [\"text/html\"];\n\n\tprivate readonly _yieldTo = [{ mimeType: Mimes.text }];\n\n\tasync provideDocumentPasteEdits(\n\t\t_model: ITextModel,\n\t\t_ranges: readonly IRange[],\n\t\tdataTransfer: IReadonlyVSDataTransfer,\n\t\tcontext: DocumentPasteContext,\n\t\ttoken: CancellationToken,\n\t): Promise<DocumentPasteEditsSession | undefined> {\n\t\tif (\n\t\t\tcontext.triggerKind !== DocumentPasteTriggerKind.PasteAs &&\n\t\t\t!context.only?.contains(this.kind)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry = dataTransfer.get(\"text/html\");\n\t\tconst htmlText = await entry?.asString();\n\t\tif (!htmlText || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tdispose() {},\n\t\t\tedits: [\n\t\t\t\t{\n\t\t\t\t\tinsertText: htmlText,\n\t\t\t\t\tyieldTo: this._yieldTo,\n\t\t\t\t\ttitle: localize(\"pasteHtmlLabel\", \"Insert HTML\"),\n\t\t\t\t\tkind: this.kind,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n}\n\nasync function extractUriList(\n\tdataTransfer: IReadonlyVSDataTransfer,\n): Promise<{ readonly uri: URI; readonly originalText: string }[]> {\n\tconst urlListEntry = dataTransfer.get(Mimes.uriList);\n\tif (!urlListEntry) {\n\t\treturn [];\n\t}\n\n\tconst strUriList = await urlListEntry.asString();\n\tconst entries: { readonly uri: URI; readonly originalText: string }[] = [];\n\tfor (const entry of UriList.parse(strUriList)) {\n\t\ttry {\n\t\t\tentries.push({ uri: URI.parse(entry), originalText: entry });\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n\treturn entries;\n}\n\nexport class DefaultDropProvidersFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.documentDropEditProvider.register(\n\t\t\t\t\"*\",\n\t\t\t\tnew DefaultTextPasteOrDropEditProvider(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.documentDropEditProvider.register(\n\t\t\t\t\"*\",\n\t\t\t\tnew PathProvider(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.documentDropEditProvider.register(\n\t\t\t\t\"*\",\n\t\t\t\tnew RelativePathProvider(workspaceContextService),\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class DefaultPasteProvidersFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.documentPasteEditProvider.register(\n\t\t\t\t\"*\",\n\t\t\t\tnew DefaultTextPasteOrDropEditProvider(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.documentPasteEditProvider.register(\n\t\t\t\t\"*\",\n\t\t\t\tnew PathProvider(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.documentPasteEditProvider.register(\n\t\t\t\t\"*\",\n\t\t\t\tnew RelativePathProvider(workspaceContextService),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.documentPasteEditProvider.register(\n\t\t\t\t\"*\",\n\t\t\t\tnew PasteHtmlProvider(),\n\t\t\t),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
