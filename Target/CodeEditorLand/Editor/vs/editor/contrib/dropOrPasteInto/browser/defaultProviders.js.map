{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IReadonlyVSDataTransfer, UriList } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IPosition } from '../../../common/core/position.js';\nimport { IRange } from '../../../common/core/range.js';\nimport { DocumentDropEditProvider, DocumentDropEditsSession, DocumentPasteContext, DocumentPasteEdit, DocumentPasteEditProvider, DocumentPasteEditsSession, DocumentPasteTriggerKind } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\n\n\nabstract class SimplePasteAndDropProvider implements DocumentDropEditProvider, DocumentPasteEditProvider {\n\n\tabstract readonly kind: HierarchicalKind;\n\tabstract readonly dropMimeTypes: readonly string[] | undefined;\n\tabstract readonly pasteMimeTypes: readonly string[];\n\n\tasync provideDocumentPasteEdits(_model: ITextModel, _ranges: readonly IRange[], dataTransfer: IReadonlyVSDataTransfer, context: DocumentPasteContext, token: CancellationToken): Promise<DocumentPasteEditsSession | undefined> {\n\t\tconst edit = await this.getEdit(dataTransfer, token);\n\t\tif (!edit) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tedits: [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }],\n\t\t\tdispose() { },\n\t\t};\n\t}\n\n\tasync provideDocumentDropEdits(_model: ITextModel, _position: IPosition, dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): Promise<DocumentDropEditsSession | undefined> {\n\t\tconst edit = await this.getEdit(dataTransfer, token);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\t\treturn {\n\t\t\tedits: [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }],\n\t\t\tdispose() { },\n\t\t};\n\t}\n\n\tprotected abstract getEdit(dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): Promise<DocumentPasteEdit | undefined>;\n}\n\nexport class DefaultTextPasteOrDropEditProvider extends SimplePasteAndDropProvider {\n\n\tstatic readonly id = 'text';\n\tstatic readonly kind = new HierarchicalKind('text.plain');\n\n\treadonly id = DefaultTextPasteOrDropEditProvider.id;\n\treadonly kind = DefaultTextPasteOrDropEditProvider.kind;\n\treadonly dropMimeTypes = [Mimes.text];\n\treadonly pasteMimeTypes = [Mimes.text];\n\n\tprotected async getEdit(dataTransfer: IReadonlyVSDataTransfer, _token: CancellationToken): Promise<DocumentPasteEdit | undefined> {\n\t\tconst textEntry = dataTransfer.get(Mimes.text);\n\t\tif (!textEntry) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Suppress if there's also a uriList entry.\n\t\t// Typically the uri-list contains the same text as the text entry so showing both is confusing.\n\t\tif (dataTransfer.has(Mimes.uriList)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst insertText = await textEntry.asString();\n\t\treturn {\n\t\t\thandledMimeType: Mimes.text,\n\t\t\ttitle: localize('text.label', \"Insert Plain Text\"),\n\t\t\tinsertText,\n\t\t\tkind: this.kind,\n\t\t};\n\t}\n}\n\nclass PathProvider extends SimplePasteAndDropProvider {\n\n\treadonly kind = new HierarchicalKind('uri.absolute');\n\treadonly dropMimeTypes = [Mimes.uriList];\n\treadonly pasteMimeTypes = [Mimes.uriList];\n\n\tprotected async getEdit(dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): Promise<DocumentPasteEdit | undefined> {\n\t\tconst entries = await extractUriList(dataTransfer);\n\t\tif (!entries.length || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet uriCount = 0;\n\t\tconst insertText = entries\n\t\t\t.map(({ uri, originalText }) => {\n\t\t\t\tif (uri.scheme === Schemas.file) {\n\t\t\t\t\treturn uri.fsPath;\n\t\t\t\t} else {\n\t\t\t\t\turiCount++;\n\t\t\t\t\treturn originalText;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.join(' ');\n\n\t\tlet label: string;\n\t\tif (uriCount > 0) {\n\t\t\t// Dropping at least one generic uri (such as https) so use most generic label\n\t\t\tlabel = entries.length > 1\n\t\t\t\t? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n\t\t\t\t: localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n\t\t} else {\n\t\t\t// All the paths are file paths\n\t\t\tlabel = entries.length > 1\n\t\t\t\t? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n\t\t\t\t: localize('defaultDropProvider.uriList.path', \"Insert Path\");\n\t\t}\n\n\t\treturn {\n\t\t\thandledMimeType: Mimes.uriList,\n\t\t\tinsertText,\n\t\t\ttitle: label,\n\t\t\tkind: this.kind,\n\t\t};\n\t}\n}\n\nclass RelativePathProvider extends SimplePasteAndDropProvider {\n\n\treadonly kind = new HierarchicalKind('uri.relative');\n\treadonly dropMimeTypes = [Mimes.uriList];\n\treadonly pasteMimeTypes = [Mimes.uriList];\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async getEdit(dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): Promise<DocumentPasteEdit | undefined> {\n\t\tconst entries = await extractUriList(dataTransfer);\n\t\tif (!entries.length || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst relativeUris = coalesce(entries.map(({ uri }) => {\n\t\t\tconst root = this._workspaceContextService.getWorkspaceFolder(uri);\n\t\t\treturn root ? relativePath(root.uri, uri) : undefined;\n\t\t}));\n\n\t\tif (!relativeUris.length) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\thandledMimeType: Mimes.uriList,\n\t\t\tinsertText: relativeUris.join(' '),\n\t\t\ttitle: entries.length > 1\n\t\t\t\t? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n\t\t\t\t: localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n\t\t\tkind: this.kind,\n\t\t};\n\t}\n}\n\nclass PasteHtmlProvider implements DocumentPasteEditProvider {\n\n\tpublic readonly kind = new HierarchicalKind('html');\n\n\tpublic readonly pasteMimeTypes = ['text/html'];\n\n\tprivate readonly _yieldTo = [{ mimeType: Mimes.text }];\n\n\tasync provideDocumentPasteEdits(_model: ITextModel, _ranges: readonly IRange[], dataTransfer: IReadonlyVSDataTransfer, context: DocumentPasteContext, token: CancellationToken): Promise<DocumentPasteEditsSession | undefined> {\n\t\tif (context.triggerKind !== DocumentPasteTriggerKind.PasteAs && !context.only?.contains(this.kind)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry = dataTransfer.get('text/html');\n\t\tconst htmlText = await entry?.asString();\n\t\tif (!htmlText || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tdispose() { },\n\t\t\tedits: [{\n\t\t\t\tinsertText: htmlText,\n\t\t\t\tyieldTo: this._yieldTo,\n\t\t\t\ttitle: localize('pasteHtmlLabel', 'Insert HTML'),\n\t\t\t\tkind: this.kind,\n\t\t\t}],\n\t\t};\n\t}\n}\n\nasync function extractUriList(dataTransfer: IReadonlyVSDataTransfer): Promise<{ readonly uri: URI; readonly originalText: string }[]> {\n\tconst urlListEntry = dataTransfer.get(Mimes.uriList);\n\tif (!urlListEntry) {\n\t\treturn [];\n\t}\n\n\tconst strUriList = await urlListEntry.asString();\n\tconst entries: { readonly uri: URI; readonly originalText: string }[] = [];\n\tfor (const entry of UriList.parse(strUriList)) {\n\t\ttry {\n\t\t\tentries.push({ uri: URI.parse(entry), originalText: entry });\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n\treturn entries;\n}\n\nexport class DefaultDropProvidersFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(languageFeaturesService.documentDropEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n\t\tthis._register(languageFeaturesService.documentDropEditProvider.register('*', new PathProvider()));\n\t\tthis._register(languageFeaturesService.documentDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n\t}\n}\n\nexport class DefaultPasteProvidersFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n\t\tthis._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n\t\tthis._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n\t\tthis._register(languageFeaturesService.documentPasteEditProvider.register('*', new PasteHtmlProvider()));\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
