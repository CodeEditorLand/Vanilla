import{KeyCode as i,KeyMod as p}from"../../../../base/common/keyCodes.js";import*as m from"../../../../nls.js";import{Extensions as c,ConfigurationScope as g}from"../../../../platform/configuration/common/configurationRegistry.js";import{KeybindingWeight as e}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{Registry as f}from"../../../../platform/registry/common/platform.js";import"../../../browser/editorBrowser.js";import{EditorCommand as t,EditorContributionInstantiation as u,registerEditorCommand as n,registerEditorContribution as C}from"../../../browser/editorExtensions.js";import{editorConfigurationBaseNode as l}from"../../../common/config/editorConfigurationSchema.js";import{registerEditorFeature as E}from"../../../common/editorFeatures.js";import{DefaultDropProvidersFeature as y}from"./defaultProviders.js";import{changeDropTypeCommandId as b,defaultProviderConfig as I,DropIntoEditorController as r,dropWidgetVisibleCtx as s}from"./dropIntoEditorController.js";C(r.ID,r,u.BeforeFirstInteraction),E(y),n(new class extends t{constructor(){super({id:b,precondition:s,kbOpts:{weight:e.EditorContrib,primary:p.CtrlCmd|i.Period}})}runEditorCommand(d,o,a){r.get(o)?.changeDropType()}}),n(new class extends t{constructor(){super({id:"editor.hideDropWidget",precondition:s,kbOpts:{weight:e.EditorContrib,primary:i.Escape}})}runEditorCommand(d,o,a){r.get(o)?.clearWidgets()}}),f.as(c.Configuration).registerConfiguration({...l,properties:{[I]:{type:"object",scope:g.LANGUAGE_OVERRIDABLE,description:m.localize("defaultProviderDescription","Configures the default drop provider to use for content of a given mime type."),default:{},additionalProperties:{type:"string"}}}});
