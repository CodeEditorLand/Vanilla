{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../browser/editorBrowser.js';\nimport { IBulkEditResult, IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { DocumentDropEdit, DocumentPasteEdit } from '../../../common/languages.js';\nimport { TrackedRangeStickiness } from '../../../common/model.js';\nimport { createCombinedWorkspaceEdit } from './edit.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\n\n\ninterface EditSet<Edit extends DocumentPasteEdit | DocumentDropEdit> {\n\treadonly activeEditIndex: number;\n\treadonly allEdits: ReadonlyArray<Edit>;\n}\n\ninterface ShowCommand {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nclass PostEditWidget<T extends DocumentPasteEdit | DocumentDropEdit> extends Disposable implements IContentWidget {\n\tprivate static readonly baseId = 'editor.widget.postEditWidget';\n\n\treadonly allowEditorOverflow = true;\n\treadonly suppressMouseDown = true;\n\n\tprivate domNode!: HTMLElement;\n\tprivate button!: Button;\n\n\tprivate readonly visibleContext: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate readonly typeId: string,\n\t\tprivate readonly editor: ICodeEditor,\n\t\tvisibleContext: RawContextKey<boolean>,\n\t\tprivate readonly showCommand: ShowCommand,\n\t\tprivate readonly range: Range,\n\t\tprivate readonly edits: EditSet<T>,\n\t\tprivate readonly onSelectNewEdit: (editIndex: number) => void,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis.create();\n\n\t\tthis.visibleContext = visibleContext.bindTo(contextKeyService);\n\t\tthis.visibleContext.set(true);\n\t\tthis._register(toDisposable(() => this.visibleContext.reset()));\n\n\t\tthis.editor.addContentWidget(this);\n\t\tthis.editor.layoutContentWidget(this);\n\n\t\tthis._register(toDisposable((() => this.editor.removeContentWidget(this))));\n\n\t\tthis._register(this.editor.onDidChangeCursorPosition(e => {\n\t\t\tif (!range.containsPosition(e.position)) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n\t\t\tthis._updateButtonTitle();\n\t\t}));\n\t}\n\n\tprivate _updateButtonTitle() {\n\t\tconst binding = this._keybindingService.lookupKeybinding(this.showCommand.id)?.getLabel();\n\t\tthis.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n\t}\n\n\tprivate create(): void {\n\t\tthis.domNode = dom.$('.post-edit-widget');\n\n\t\tthis.button = this._register(new Button(this.domNode, {\n\t\t\tsupportIcons: true,\n\t\t}));\n\t\tthis.button.label = '$(insert)';\n\n\t\tthis._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n\t}\n\n\tgetId(): string {\n\t\treturn PostEditWidget.baseId + '.' + this.typeId;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: this.range.getEndPosition(),\n\t\t\tpreference: [ContentWidgetPositionPreference.BELOW]\n\t\t};\n\t}\n\n\tshowSelector() {\n\t\tthis._contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => {\n\t\t\t\tconst pos = dom.getDomNodePagePosition(this.button.element);\n\t\t\t\treturn { x: pos.left + pos.width, y: pos.top + pos.height };\n\t\t\t},\n\t\t\tgetActions: () => {\n\t\t\t\treturn this.edits.allEdits.map((edit, i) => toAction({\n\t\t\t\t\tid: '',\n\t\t\t\t\tlabel: edit.title,\n\t\t\t\t\tchecked: i === this.edits.activeEditIndex,\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tif (i !== this.edits.activeEditIndex) {\n\t\t\t\t\t\t\treturn this.onSelectNewEdit(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class PostEditWidgetManager<T extends DocumentPasteEdit | DocumentDropEdit> extends Disposable {\n\n\tprivate readonly _currentWidget = this._register(new MutableDisposable<PostEditWidget<T>>());\n\n\tconstructor(\n\t\tprivate readonly _id: string,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _visibleContext: RawContextKey<boolean>,\n\t\tprivate readonly _showCommand: ShowCommand,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(Event.any(\n\t\t\t_editor.onDidChangeModel,\n\t\t\t_editor.onDidChangeModelContent,\n\t\t)(() => this.clear()));\n\t}\n\n\tpublic async applyEditAndShowIfNeeded(ranges: readonly Range[], edits: EditSet<T>, canShowWidget: boolean, resolve: (edit: T, token: CancellationToken) => Promise<T>, token: CancellationToken) {\n\t\tconst model = this._editor.getModel();\n\t\tif (!model || !ranges.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst edit = edits.allEdits.at(edits.activeEditIndex);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onDidSelectEdit = async (newEditIndex: number) => {\n\t\t\tconst model = this._editor.getModel();\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait model.undo();\n\t\t\tthis.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, resolve, token);\n\t\t};\n\n\t\tconst handleError = (e: Error, message: string) => {\n\t\t\tif (isCancellationError(e)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._notificationService.error(message);\n\t\t\tif (canShowWidget) {\n\t\t\t\tthis.show(ranges[0], edits, onDidSelectEdit);\n\t\t\t}\n\t\t};\n\n\t\tlet resolvedEdit: T;\n\t\ttry {\n\t\t\tresolvedEdit = await resolve(edit, token);\n\t\t} catch (e) {\n\t\t\treturn handleError(e, localize('resolveError', \"Error resolving edit '{0}':\\n{1}\", edit.title, toErrorMessage(e)));\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, ranges, resolvedEdit);\n\n\t\t// Use a decoration to track edits around the trigger range\n\t\tconst primaryRange = ranges[0];\n\t\tconst editTrackingDecoration = model.deltaDecorations([], [{\n\t\t\trange: primaryRange,\n\t\t\toptions: { description: 'paste-line-suffix', stickiness: TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges }\n\t\t}]);\n\n\t\tthis._editor.focus();\n\t\tlet editResult: IBulkEditResult;\n\t\tlet editRange: Range | null;\n\t\ttry {\n\t\t\teditResult = await this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n\t\t\teditRange = model.getDecorationRange(editTrackingDecoration[0]);\n\t\t} catch (e) {\n\t\t\treturn handleError(e, localize('applyError', \"Error applying edit '{0}':\\n{1}\", edit.title, toErrorMessage(e)));\n\t\t} finally {\n\t\t\tmodel.deltaDecorations(editTrackingDecoration, []);\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n\t\t\tthis.show(editRange ?? primaryRange, edits, onDidSelectEdit);\n\t\t}\n\t}\n\n\tpublic show(range: Range, edits: EditSet<T>, onDidSelectEdit: (newIndex: number) => void) {\n\t\tthis.clear();\n\n\t\tif (this._editor.hasModel()) {\n\t\t\tthis._currentWidget.value = this._instantiationService.createInstance(PostEditWidget<T>, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n\t\t}\n\t}\n\n\tpublic clear() {\n\t\tthis._currentWidget.clear();\n\t}\n\n\tpublic tryShowSelector() {\n\t\tthis._currentWidget.value?.showSelector();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["model"]
}
