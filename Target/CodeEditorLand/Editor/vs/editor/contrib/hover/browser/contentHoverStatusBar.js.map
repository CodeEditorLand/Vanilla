{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/contentHoverStatusBar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { HoverAction } from \"../../../../base/browser/ui/hover/hoverWidget.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport type {\n\tIEditorHoverAction,\n\tIEditorHoverStatusBar,\n} from \"./hoverTypes.js\";\n\nconst $ = dom.$;\n\nexport class EditorHoverStatusBar\n\textends Disposable\n\timplements IEditorHoverStatusBar\n{\n\tpublic readonly hoverElement: HTMLElement;\n\tpublic readonly actions: HoverAction[] = [];\n\n\tprivate readonly actionsElement: HTMLElement;\n\tprivate _hasContent = false;\n\n\tpublic get hasContent() {\n\t\treturn this._hasContent;\n\t}\n\n\tconstructor(\n\t\t@IKeybindingService\n\t\tprivate readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\t\tthis.hoverElement = $(\"div.hover-row.status-bar\");\n\t\tthis.hoverElement.tabIndex = 0;\n\t\tthis.actionsElement = dom.append(this.hoverElement, $(\"div.actions\"));\n\t}\n\n\tpublic addAction(actionOptions: {\n\t\tlabel: string;\n\t\ticonClass?: string;\n\t\trun: (target: HTMLElement) => void;\n\t\tcommandId: string;\n\t}): IEditorHoverAction {\n\t\tconst keybinding = this._keybindingService.lookupKeybinding(\n\t\t\tactionOptions.commandId,\n\t\t);\n\t\tconst keybindingLabel = keybinding ? keybinding.getLabel() : null;\n\t\tthis._hasContent = true;\n\t\tconst action = this._register(\n\t\t\tHoverAction.render(\n\t\t\t\tthis.actionsElement,\n\t\t\t\tactionOptions,\n\t\t\t\tkeybindingLabel,\n\t\t\t),\n\t\t);\n\t\tthis.actions.push(action);\n\t\treturn action;\n\t}\n\n\tpublic append(element: HTMLElement): HTMLElement {\n\t\tconst result = dom.append(this.actionsElement, element);\n\t\tthis._hasContent = true;\n\t\treturn result;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAIA,YAAY,SAAS;AACrB,SAAS,mBAAmB;AAC5B,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B;AAMnC,MAAM,IAAI,IAAI;AAEP,IAAM,uBAAN,cACE,WAET;AAAA,EAWC,YAEkB,oBAChB;AACD,UAAM;AAFW;AAGjB,SAAK,eAAe,EAAE,0BAA0B;AAChD,SAAK,aAAa,WAAW;AAC7B,SAAK,iBAAiB,IAAI,OAAO,KAAK,cAAc,EAAE,aAAa,CAAC;AAAA,EACrE;AAAA,EArCD,OAkBA;AAAA;AAAA;AAAA,EACiB;AAAA,EACA,UAAyB,CAAC;AAAA,EAEzB;AAAA,EACT,cAAc;AAAA,EAEtB,IAAW,aAAa;AACvB,WAAO,KAAK;AAAA,EACb;AAAA,EAYO,UAAU,eAKM;AACtB,UAAM,aAAa,KAAK,mBAAmB;AAAA,MAC1C,cAAc;AAAA,IACf;AACA,UAAM,kBAAkB,aAAa,WAAW,SAAS,IAAI;AAC7D,SAAK,cAAc;AACnB,UAAM,SAAS,KAAK;AAAA,MACnB,YAAY;AAAA,QACX,KAAK;AAAA,QACL;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACA,SAAK,QAAQ,KAAK,MAAM;AACxB,WAAO;AAAA,EACR;AAAA,EAEO,OAAO,SAAmC;AAChD,UAAM,SAAS,IAAI,OAAO,KAAK,gBAAgB,OAAO;AACtD,SAAK,cAAc;AACnB,WAAO;AAAA,EACR;AACD;AAnDa,uBAAN;AAAA,EAeJ;AAAA,GAfU;",
  "names": []
}
