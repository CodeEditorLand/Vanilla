{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/glyphHoverWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { HoverWidget } from \"../../../../base/browser/ui/hover/hoverWidget.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IEditorMouseEvent,\n\ttype IOverlayWidget,\n\ttype IOverlayWidgetPosition,\n\tMouseTargetType,\n} from \"../../../browser/editorBrowser.js\";\nimport { MarkdownRenderer } from \"../../../browser/widget/markdownRenderer/browser/markdownRenderer.js\";\nimport {\n\ttype ConfigurationChangedEvent,\n\tEditorOption,\n} from \"../../../common/config/editorOptions.js\";\nimport { ILanguageService } from \"../../../common/languages/language.js\";\nimport {\n\tGlyphHoverComputer,\n\ttype GlyphHoverComputerOptions,\n\ttype IHoverMessage,\n\ttype LaneOrLineNumber,\n} from \"./glyphHoverComputer.js\";\nimport {\n\tHoverOperation,\n\ttype HoverResult,\n\tHoverStartMode,\n} from \"./hoverOperation.js\";\nimport type { IHoverWidget } from \"./hoverTypes.js\";\nimport { isMousePositionWithinElement } from \"./hoverUtils.js\";\n\nconst $ = dom.$;\n\nexport class GlyphHoverWidget\n\textends Disposable\n\timplements IOverlayWidget, IHoverWidget\n{\n\tpublic static readonly ID = \"editor.contrib.modesGlyphHoverWidget\";\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate readonly _hover: HoverWidget;\n\n\tprivate _isVisible: boolean;\n\tprivate _messages: IHoverMessage[];\n\n\tprivate readonly _markdownRenderer: MarkdownRenderer;\n\tprivate readonly _hoverOperation: HoverOperation<\n\t\tGlyphHoverComputerOptions,\n\t\tIHoverMessage\n\t>;\n\tprivate readonly _renderDisposeables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tprivate _hoverComputerOptions: GlyphHoverComputerOptions | undefined;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\n\t\tthis._isVisible = false;\n\t\tthis._messages = [];\n\n\t\tthis._hover = this._register(new HoverWidget());\n\t\tthis._hover.containerDomNode.classList.toggle(\n\t\t\t\"hidden\",\n\t\t\t!this._isVisible,\n\t\t);\n\n\t\tthis._markdownRenderer = this._register(\n\t\t\tnew MarkdownRenderer(\n\t\t\t\t{ editor: this._editor },\n\t\t\t\tlanguageService,\n\t\t\t\topenerService,\n\t\t\t),\n\t\t);\n\t\tthis._hoverOperation = this._register(\n\t\t\tnew HoverOperation(\n\t\t\t\tthis._editor,\n\t\t\t\tnew GlyphHoverComputer(this._editor),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._hoverOperation.onResult((result) => this._withResult(result)),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._editor.onDidChangeModelDecorations(() =>\n\t\t\t\tthis._onModelDecorationsChanged(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._editor.onDidChangeConfiguration(\n\t\t\t\t(e: ConfigurationChangedEvent) => {\n\t\t\t\t\tif (e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\t\t\tthis._updateFont();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tthis._hover.containerDomNode,\n\t\t\t\t\"mouseleave\",\n\t\t\t\t(e) => {\n\t\t\t\t\tthis._onMouseLeave(e);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._editor.addOverlayWidget(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._hoverComputerOptions = undefined;\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tsuper.dispose();\n\t}\n\n\tpublic getId(): string {\n\t\treturn GlyphHoverWidget.ID;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._hover.containerDomNode;\n\t}\n\n\tpublic getPosition(): IOverlayWidgetPosition | null {\n\t\treturn null;\n\t}\n\n\tprivate _updateFont(): void {\n\t\tconst codeClasses: HTMLElement[] = Array.prototype.slice.call(\n\t\t\tthis._hover.contentsDomNode.getElementsByClassName(\"code\"),\n\t\t);\n\t\tcodeClasses.forEach((node) => this._editor.applyFontInfo(node));\n\t}\n\n\tprivate _onModelDecorationsChanged(): void {\n\t\tif (this._isVisible && this._hoverComputerOptions) {\n\t\t\t// The decorations have changed and the hover is visible,\n\t\t\t// we need to recompute the displayed text\n\t\t\tthis._hoverOperation.cancel();\n\t\t\tthis._hoverOperation.start(\n\t\t\t\tHoverStartMode.Delayed,\n\t\t\t\tthis._hoverComputerOptions,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic showsOrWillShow(mouseEvent: IEditorMouseEvent): boolean {\n\t\tconst target = mouseEvent.target;\n\t\tif (\n\t\t\ttarget.type === MouseTargetType.GUTTER_GLYPH_MARGIN &&\n\t\t\ttarget.detail.glyphMarginLane\n\t\t) {\n\t\t\tthis._startShowingAt(\n\t\t\t\ttarget.position.lineNumber,\n\t\t\t\ttarget.detail.glyphMarginLane,\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\tif (target.type === MouseTargetType.GUTTER_LINE_NUMBERS) {\n\t\t\tthis._startShowingAt(target.position.lineNumber, \"lineNo\");\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _startShowingAt(\n\t\tlineNumber: number,\n\t\tlaneOrLine: LaneOrLineNumber,\n\t): void {\n\t\tif (\n\t\t\tthis._hoverComputerOptions &&\n\t\t\tthis._hoverComputerOptions.lineNumber === lineNumber &&\n\t\t\tthis._hoverComputerOptions.laneOrLine === laneOrLine\n\t\t) {\n\t\t\t// We have to show the widget at the exact same line number as before, so no work is needed\n\t\t\treturn;\n\t\t}\n\t\tthis._hoverOperation.cancel();\n\t\tthis.hide();\n\t\tthis._hoverComputerOptions = { lineNumber, laneOrLine };\n\t\tthis._hoverOperation.start(\n\t\t\tHoverStartMode.Delayed,\n\t\t\tthis._hoverComputerOptions,\n\t\t);\n\t}\n\n\tpublic hide(): void {\n\t\tthis._hoverComputerOptions = undefined;\n\t\tthis._hoverOperation.cancel();\n\t\tif (!this._isVisible) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isVisible = false;\n\t\tthis._hover.containerDomNode.classList.toggle(\n\t\t\t\"hidden\",\n\t\t\t!this._isVisible,\n\t\t);\n\t}\n\n\tprivate _withResult(\n\t\tresult: HoverResult<GlyphHoverComputerOptions, IHoverMessage>,\n\t): void {\n\t\tthis._messages = result.value;\n\n\t\tif (this._messages.length > 0) {\n\t\t\tthis._renderMessages(\n\t\t\t\tresult.options.lineNumber,\n\t\t\t\tresult.options.laneOrLine,\n\t\t\t\tthis._messages,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\tprivate _renderMessages(\n\t\tlineNumber: number,\n\t\tlaneOrLine: LaneOrLineNumber,\n\t\tmessages: IHoverMessage[],\n\t): void {\n\t\tthis._renderDisposeables.clear();\n\n\t\tconst fragment = document.createDocumentFragment();\n\n\t\tfor (const msg of messages) {\n\t\t\tconst markdownHoverElement = $(\"div.hover-row.markdown-hover\");\n\t\t\tconst hoverContentsElement = dom.append(\n\t\t\t\tmarkdownHoverElement,\n\t\t\t\t$(\"div.hover-contents\"),\n\t\t\t);\n\t\t\tconst renderedContents = this._renderDisposeables.add(\n\t\t\t\tthis._markdownRenderer.render(msg.value),\n\t\t\t);\n\t\t\thoverContentsElement.appendChild(renderedContents.element);\n\t\t\tfragment.appendChild(markdownHoverElement);\n\t\t}\n\n\t\tthis._updateContents(fragment);\n\t\tthis._showAt(lineNumber, laneOrLine);\n\t}\n\n\tprivate _updateContents(node: Node): void {\n\t\tthis._hover.contentsDomNode.textContent = \"\";\n\t\tthis._hover.contentsDomNode.appendChild(node);\n\t\tthis._updateFont();\n\t}\n\n\tprivate _showAt(lineNumber: number, laneOrLine: LaneOrLineNumber): void {\n\t\tif (!this._isVisible) {\n\t\t\tthis._isVisible = true;\n\t\t\tthis._hover.containerDomNode.classList.toggle(\n\t\t\t\t\"hidden\",\n\t\t\t\t!this._isVisible,\n\t\t\t);\n\t\t}\n\n\t\tconst editorLayout = this._editor.getLayoutInfo();\n\t\tconst topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n\t\tconst editorScrollTop = this._editor.getScrollTop();\n\t\tconst lineHeight = this._editor.getOption(EditorOption.lineHeight);\n\t\tconst nodeHeight = this._hover.containerDomNode.clientHeight;\n\t\tconst top =\n\t\t\ttopForLineNumber - editorScrollTop - (nodeHeight - lineHeight) / 2;\n\t\tconst left =\n\t\t\teditorLayout.glyphMarginLeft +\n\t\t\teditorLayout.glyphMarginWidth +\n\t\t\t(laneOrLine === \"lineNo\" ? editorLayout.lineNumbersWidth : 0);\n\t\tthis._hover.containerDomNode.style.left = `${left}px`;\n\t\tthis._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n\t}\n\n\tprivate _onMouseLeave(e: MouseEvent): void {\n\t\tconst editorDomNode = this._editor.getDomNode();\n\t\tconst isMousePositionOutsideOfEditor =\n\t\t\t!editorDomNode ||\n\t\t\t!isMousePositionWithinElement(editorDomNode, e.x, e.y);\n\t\tif (isMousePositionOutsideOfEditor) {\n\t\t\tthis.hide();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
