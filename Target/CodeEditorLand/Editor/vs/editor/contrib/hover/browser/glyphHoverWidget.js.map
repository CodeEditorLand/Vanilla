{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/glyphHoverWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { ICodeEditor, IEditorMouseEvent, IOverlayWidget, IOverlayWidgetPosition, MouseTargetType } from '../../../browser/editorBrowser.js';\nimport { ConfigurationChangedEvent, EditorOption } from '../../../common/config/editorOptions.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverOperation, HoverResult, HoverStartMode } from './hoverOperation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { IHoverWidget } from './hoverTypes.js';\nimport { IHoverMessage, LaneOrLineNumber, GlyphHoverComputer, GlyphHoverComputerOptions } from './glyphHoverComputer.js';\nimport { isMousePositionWithinElement } from './hoverUtils.js';\n\nconst $ = dom.$;\n\nexport class GlyphHoverWidget extends Disposable implements IOverlayWidget, IHoverWidget {\n\n\tpublic static readonly ID = 'editor.contrib.modesGlyphHoverWidget';\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate readonly _hover: HoverWidget;\n\n\tprivate _isVisible: boolean;\n\tprivate _messages: IHoverMessage[];\n\n\tprivate readonly _markdownRenderer: MarkdownRenderer;\n\tprivate readonly _hoverOperation: HoverOperation<GlyphHoverComputerOptions, IHoverMessage>;\n\tprivate readonly _renderDisposeables = this._register(new DisposableStore());\n\n\tprivate _hoverComputerOptions: GlyphHoverComputerOptions | undefined;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\n\t\tthis._isVisible = false;\n\t\tthis._messages = [];\n\n\t\tthis._hover = this._register(new HoverWidget());\n\t\tthis._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n\n\t\tthis._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n\t\tthis._hoverOperation = this._register(new HoverOperation(this._editor, new GlyphHoverComputer(this._editor)));\n\t\tthis._register(this._hoverOperation.onResult((result) => this._withResult(result)));\n\n\t\tthis._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n\t\tthis._register(this._editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\tthis._updateFont();\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addStandardDisposableListener(this._hover.containerDomNode, 'mouseleave', (e) => {\n\t\t\tthis._onMouseLeave(e);\n\t\t}));\n\t\tthis._editor.addOverlayWidget(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._hoverComputerOptions = undefined;\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tsuper.dispose();\n\t}\n\n\tpublic getId(): string {\n\t\treturn GlyphHoverWidget.ID;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._hover.containerDomNode;\n\t}\n\n\tpublic getPosition(): IOverlayWidgetPosition | null {\n\t\treturn null;\n\t}\n\n\tprivate _updateFont(): void {\n\t\tconst codeClasses: HTMLElement[] = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n\t\tcodeClasses.forEach(node => this._editor.applyFontInfo(node));\n\t}\n\n\tprivate _onModelDecorationsChanged(): void {\n\t\tif (this._isVisible && this._hoverComputerOptions) {\n\t\t\t// The decorations have changed and the hover is visible,\n\t\t\t// we need to recompute the displayed text\n\t\t\tthis._hoverOperation.cancel();\n\t\t\tthis._hoverOperation.start(HoverStartMode.Delayed, this._hoverComputerOptions);\n\t\t}\n\t}\n\n\tpublic showsOrWillShow(mouseEvent: IEditorMouseEvent): boolean {\n\t\tconst target = mouseEvent.target;\n\t\tif (target.type === MouseTargetType.GUTTER_GLYPH_MARGIN && target.detail.glyphMarginLane) {\n\t\t\tthis._startShowingAt(target.position.lineNumber, target.detail.glyphMarginLane);\n\t\t\treturn true;\n\t\t}\n\t\tif (target.type === MouseTargetType.GUTTER_LINE_NUMBERS) {\n\t\t\tthis._startShowingAt(target.position.lineNumber, 'lineNo');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _startShowingAt(lineNumber: number, laneOrLine: LaneOrLineNumber): void {\n\t\tif (this._hoverComputerOptions\n\t\t\t&& this._hoverComputerOptions.lineNumber === lineNumber\n\t\t\t&& this._hoverComputerOptions.laneOrLine === laneOrLine) {\n\t\t\t// We have to show the widget at the exact same line number as before, so no work is needed\n\t\t\treturn;\n\t\t}\n\t\tthis._hoverOperation.cancel();\n\t\tthis.hide();\n\t\tthis._hoverComputerOptions = { lineNumber, laneOrLine };\n\t\tthis._hoverOperation.start(HoverStartMode.Delayed, this._hoverComputerOptions);\n\t}\n\n\tpublic hide(): void {\n\t\tthis._hoverComputerOptions = undefined;\n\t\tthis._hoverOperation.cancel();\n\t\tif (!this._isVisible) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isVisible = false;\n\t\tthis._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n\t}\n\n\tprivate _withResult(result: HoverResult<GlyphHoverComputerOptions, IHoverMessage>): void {\n\t\tthis._messages = result.value;\n\n\t\tif (this._messages.length > 0) {\n\t\t\tthis._renderMessages(result.options.lineNumber, result.options.laneOrLine, this._messages);\n\t\t} else {\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\tprivate _renderMessages(lineNumber: number, laneOrLine: LaneOrLineNumber, messages: IHoverMessage[]): void {\n\t\tthis._renderDisposeables.clear();\n\n\t\tconst fragment = document.createDocumentFragment();\n\n\t\tfor (const msg of messages) {\n\t\t\tconst markdownHoverElement = $('div.hover-row.markdown-hover');\n\t\t\tconst hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n\t\t\tconst renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n\t\t\thoverContentsElement.appendChild(renderedContents.element);\n\t\t\tfragment.appendChild(markdownHoverElement);\n\t\t}\n\n\t\tthis._updateContents(fragment);\n\t\tthis._showAt(lineNumber, laneOrLine);\n\t}\n\n\tprivate _updateContents(node: Node): void {\n\t\tthis._hover.contentsDomNode.textContent = '';\n\t\tthis._hover.contentsDomNode.appendChild(node);\n\t\tthis._updateFont();\n\t}\n\n\tprivate _showAt(lineNumber: number, laneOrLine: LaneOrLineNumber): void {\n\t\tif (!this._isVisible) {\n\t\t\tthis._isVisible = true;\n\t\t\tthis._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n\t\t}\n\n\t\tconst editorLayout = this._editor.getLayoutInfo();\n\t\tconst topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n\t\tconst editorScrollTop = this._editor.getScrollTop();\n\t\tconst lineHeight = this._editor.getOption(EditorOption.lineHeight);\n\t\tconst nodeHeight = this._hover.containerDomNode.clientHeight;\n\t\tconst top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n\t\tconst left = editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth + (laneOrLine === 'lineNo' ? editorLayout.lineNumbersWidth : 0);\n\t\tthis._hover.containerDomNode.style.left = `${left}px`;\n\t\tthis._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n\t}\n\n\tprivate _onMouseLeave(e: MouseEvent): void {\n\t\tconst editorDomNode = this._editor.getDomNode();\n\t\tconst isMousePositionOutsideOfEditor = !editorDomNode || !isMousePositionWithinElement(editorDomNode, e.x, e.y);\n\t\tif (isMousePositionOutsideOfEditor) {\n\t\t\tthis.hide();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
