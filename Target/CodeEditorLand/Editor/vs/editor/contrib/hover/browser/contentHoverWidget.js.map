{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/contentHoverWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport {\n\tHoverWidget,\n\tgetHoverAccessibleViewHint,\n} from \"../../../../base/browser/ui/hover/hoverWidget.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tContentWidgetPositionPreference,\n\ttype ICodeEditor,\n\ttype IContentWidgetPosition,\n} from \"../../../browser/editorBrowser.js\";\nimport {\n\ttype ConfigurationChangedEvent,\n\tEditorOption,\n} from \"../../../common/config/editorOptions.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport { PositionAffinity } from \"../../../common/model.js\";\nimport type { RenderedContentHover } from \"./contentHoverRendered.js\";\nimport { HoverStartSource } from \"./hoverOperation.js\";\nimport { ResizableContentWidget } from \"./resizableContentWidget.js\";\n\nconst HORIZONTAL_SCROLLING_BY = 30;\nconst CONTAINER_HEIGHT_PADDING = 6;\n\nexport class ContentHoverWidget extends ResizableContentWidget {\n\tpublic static ID = \"editor.contrib.resizableContentHoverWidget\";\n\tprivate static _lastDimensions: dom.Dimension = new dom.Dimension(0, 0);\n\n\tprivate _renderedHover: RenderedContentHover | undefined;\n\tprivate _positionPreference: ContentWidgetPositionPreference | undefined;\n\tprivate _minimumSize: dom.Dimension;\n\tprivate _contentWidth: number | undefined;\n\n\tprivate readonly _hover: HoverWidget = this._register(new HoverWidget());\n\tprivate readonly _hoverVisibleKey: IContextKey<boolean>;\n\tprivate readonly _hoverFocusedKey: IContextKey<boolean>;\n\n\tprivate readonly _onDidResize = this._register(new Emitter<void>());\n\tpublic readonly onDidResize = this._onDidResize.event;\n\n\tpublic get isVisibleFromKeyboard(): boolean {\n\t\treturn this._renderedHover?.source === HoverStartSource.Keyboard;\n\t}\n\n\tpublic get isVisible(): boolean {\n\t\treturn this._hoverVisibleKey.get() ?? false;\n\t}\n\n\tpublic get isFocused(): boolean {\n\t\treturn this._hoverFocusedKey.get() ?? false;\n\t}\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService\n\t) {\n\t\tconst minimumHeight = editor.getOption(EditorOption.lineHeight) + 8;\n\t\tconst minimumWidth = 150;\n\t\tconst minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n\t\tsuper(editor, minimumSize);\n\n\t\tthis._minimumSize = minimumSize;\n\t\tthis._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n\t\tthis._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n\n\t\tdom.append(this._resizableNode.domNode, this._hover.containerDomNode);\n\t\tthis._resizableNode.domNode.style.zIndex = '50';\n\n\t\tthis._register(this._editor.onDidLayoutChange(() => {\n\t\t\tif (this.isVisible) {\n\t\t\t\tthis._updateMaxDimensions();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\tthis._updateFont();\n\t\t\t}\n\t\t}));\n\t\tconst focusTracker = this._register(dom.trackFocus(this._resizableNode.domNode));\n\t\tthis._register(focusTracker.onDidFocus(() => {\n\t\t\tthis._hoverFocusedKey.set(true);\n\t\t}));\n\t\tthis._register(focusTracker.onDidBlur(() => {\n\t\t\tthis._hoverFocusedKey.set(false);\n\t\t}));\n\t\tthis._setRenderedHover(undefined);\n\t\tthis._editor.addContentWidget(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._renderedHover?.dispose();\n\t\tthis._editor.removeContentWidget(this);\n\t}\n\n\tpublic getId(): string {\n\t\treturn ContentHoverWidget.ID;\n\t}\n\n\tprivate static _applyDimensions(\n\t\tcontainer: HTMLElement,\n\t\twidth: number | string,\n\t\theight: number | string,\n\t): void {\n\t\tconst transformedWidth =\n\t\t\ttypeof width === \"number\" ? `${width}px` : width;\n\t\tconst transformedHeight =\n\t\t\ttypeof height === \"number\" ? `${height}px` : height;\n\t\tcontainer.style.width = transformedWidth;\n\t\tcontainer.style.height = transformedHeight;\n\t}\n\n\tprivate _setContentsDomNodeDimensions(\n\t\twidth: number | string,\n\t\theight: number | string,\n\t): void {\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\t\treturn ContentHoverWidget._applyDimensions(\n\t\t\tcontentsDomNode,\n\t\t\twidth,\n\t\t\theight,\n\t\t);\n\t}\n\n\tprivate _setContainerDomNodeDimensions(\n\t\twidth: number | string,\n\t\theight: number | string,\n\t): void {\n\t\tconst containerDomNode = this._hover.containerDomNode;\n\t\treturn ContentHoverWidget._applyDimensions(\n\t\t\tcontainerDomNode,\n\t\t\twidth,\n\t\t\theight,\n\t\t);\n\t}\n\n\tprivate _setHoverWidgetDimensions(\n\t\twidth: number | string,\n\t\theight: number | string,\n\t): void {\n\t\tthis._setContentsDomNodeDimensions(width, height);\n\t\tthis._setContainerDomNodeDimensions(width, height);\n\t\tthis._layoutContentWidget();\n\t}\n\n\tprivate static _applyMaxDimensions(\n\t\tcontainer: HTMLElement,\n\t\twidth: number | string,\n\t\theight: number | string,\n\t) {\n\t\tconst transformedWidth =\n\t\t\ttypeof width === \"number\" ? `${width}px` : width;\n\t\tconst transformedHeight =\n\t\t\ttypeof height === \"number\" ? `${height}px` : height;\n\t\tcontainer.style.maxWidth = transformedWidth;\n\t\tcontainer.style.maxHeight = transformedHeight;\n\t}\n\n\tprivate _setHoverWidgetMaxDimensions(\n\t\twidth: number | string,\n\t\theight: number | string,\n\t): void {\n\t\tContentHoverWidget._applyMaxDimensions(\n\t\t\tthis._hover.contentsDomNode,\n\t\t\twidth,\n\t\t\theight,\n\t\t);\n\t\tContentHoverWidget._applyMaxDimensions(\n\t\t\tthis._hover.containerDomNode,\n\t\t\twidth,\n\t\t\theight,\n\t\t);\n\t\tthis._hover.containerDomNode.style.setProperty(\n\t\t\t\"--vscode-hover-maxWidth\",\n\t\t\ttypeof width === \"number\" ? `${width}px` : width,\n\t\t);\n\t\tthis._layoutContentWidget();\n\t}\n\n\tprivate _setAdjustedHoverWidgetDimensions(size: dom.Dimension): void {\n\t\tthis._setHoverWidgetMaxDimensions(\"none\", \"none\");\n\t\tconst width = size.width;\n\t\tconst height = size.height;\n\t\tthis._setHoverWidgetDimensions(width, height);\n\t}\n\n\tprivate _updateResizableNodeMaxDimensions(): void {\n\t\tconst maxRenderingWidth =\n\t\t\tthis._findMaximumRenderingWidth() ?? Number.POSITIVE_INFINITY;\n\t\tconst maxRenderingHeight =\n\t\t\tthis._findMaximumRenderingHeight() ?? Number.POSITIVE_INFINITY;\n\t\tthis._resizableNode.maxSize = new dom.Dimension(\n\t\t\tmaxRenderingWidth,\n\t\t\tmaxRenderingHeight,\n\t\t);\n\t\tthis._setHoverWidgetMaxDimensions(\n\t\t\tmaxRenderingWidth,\n\t\t\tmaxRenderingHeight,\n\t\t);\n\t}\n\n\tprotected override _resize(size: dom.Dimension): void {\n\t\tContentHoverWidget._lastDimensions = new dom.Dimension(\n\t\t\tsize.width,\n\t\t\tsize.height,\n\t\t);\n\t\tthis._setAdjustedHoverWidgetDimensions(size);\n\t\tthis._resizableNode.layout(size.height, size.width);\n\t\tthis._updateResizableNodeMaxDimensions();\n\t\tthis._hover.scrollbar.scanDomNode();\n\t\tthis._editor.layoutContentWidget(this);\n\t\tthis._onDidResize.fire();\n\t}\n\n\tprivate _findAvailableSpaceVertically(): number | undefined {\n\t\tconst position = this._renderedHover?.showAtPosition;\n\t\tif (!position) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._positionPreference ===\n\t\t\tContentWidgetPositionPreference.ABOVE\n\t\t\t? this._availableVerticalSpaceAbove(position)\n\t\t\t: this._availableVerticalSpaceBelow(position);\n\t}\n\n\tprivate _findMaximumRenderingHeight(): number | undefined {\n\t\tconst availableSpace = this._findAvailableSpaceVertically();\n\t\tif (!availableSpace) {\n\t\t\treturn;\n\t\t}\n\t\t// Padding needed in order to stop the resizing down to a smaller height\n\t\tlet maximumHeight = CONTAINER_HEIGHT_PADDING;\n\t\tArray.from(this._hover.contentsDomNode.children).forEach(\n\t\t\t(hoverPart) => {\n\t\t\t\tmaximumHeight += hoverPart.clientHeight;\n\t\t\t},\n\t\t);\n\n\t\treturn Math.min(availableSpace, maximumHeight);\n\t}\n\n\tprivate _isHoverTextOverflowing(): boolean {\n\t\t// To find out if the text is overflowing, we will disable wrapping, check the widths, and then re-enable wrapping\n\t\tthis._hover.containerDomNode.style.setProperty(\n\t\t\t\"--vscode-hover-whiteSpace\",\n\t\t\t\"nowrap\",\n\t\t);\n\t\tthis._hover.containerDomNode.style.setProperty(\n\t\t\t\"--vscode-hover-sourceWhiteSpace\",\n\t\t\t\"nowrap\",\n\t\t);\n\n\t\tconst overflowing = Array.from(\n\t\t\tthis._hover.contentsDomNode.children,\n\t\t).some((hoverElement) => {\n\t\t\treturn hoverElement.scrollWidth > hoverElement.clientWidth;\n\t\t});\n\n\t\tthis._hover.containerDomNode.style.removeProperty(\n\t\t\t\"--vscode-hover-whiteSpace\",\n\t\t);\n\t\tthis._hover.containerDomNode.style.removeProperty(\n\t\t\t\"--vscode-hover-sourceWhiteSpace\",\n\t\t);\n\n\t\treturn overflowing;\n\t}\n\n\tprivate _findMaximumRenderingWidth(): number | undefined {\n\t\tif (!this._editor || !this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst overflowing = this._isHoverTextOverflowing();\n\t\tconst initialWidth =\n\t\t\ttypeof this._contentWidth === \"undefined\"\n\t\t\t\t? 0\n\t\t\t\t: this._contentWidth - 2; // - 2 for the borders\n\n\t\tif (\n\t\t\toverflowing ||\n\t\t\tthis._hover.containerDomNode.clientWidth < initialWidth\n\t\t) {\n\t\t\tconst bodyBoxWidth = dom.getClientArea(\n\t\t\t\tthis._hover.containerDomNode.ownerDocument.body,\n\t\t\t).width;\n\t\t\tconst horizontalPadding = 14;\n\t\t\treturn bodyBoxWidth - horizontalPadding;\n\t\t} else {\n\t\t\treturn this._hover.containerDomNode.clientWidth + 2;\n\t\t}\n\t}\n\n\tpublic isMouseGettingCloser(posx: number, posy: number): boolean {\n\t\tif (!this._renderedHover) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tthis._renderedHover.initialMousePosX === undefined ||\n\t\t\tthis._renderedHover.initialMousePosY === undefined\n\t\t) {\n\t\t\tthis._renderedHover.initialMousePosX = posx;\n\t\t\tthis._renderedHover.initialMousePosY = posy;\n\t\t\treturn false;\n\t\t}\n\n\t\tconst widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n\t\tif (this._renderedHover.closestMouseDistance === undefined) {\n\t\t\tthis._renderedHover.closestMouseDistance =\n\t\t\t\tcomputeDistanceFromPointToRectangle(\n\t\t\t\t\tthis._renderedHover.initialMousePosX,\n\t\t\t\t\tthis._renderedHover.initialMousePosY,\n\t\t\t\t\twidgetRect.left,\n\t\t\t\t\twidgetRect.top,\n\t\t\t\t\twidgetRect.width,\n\t\t\t\t\twidgetRect.height,\n\t\t\t\t);\n\t\t}\n\n\t\tconst distance = computeDistanceFromPointToRectangle(\n\t\t\tposx,\n\t\t\tposy,\n\t\t\twidgetRect.left,\n\t\t\twidgetRect.top,\n\t\t\twidgetRect.width,\n\t\t\twidgetRect.height,\n\t\t);\n\t\tif (\n\t\t\tdistance >\n\t\t\tthis._renderedHover.closestMouseDistance +\n\t\t\t\t4 /* tolerance of 4 pixels */\n\t\t) {\n\t\t\t// The mouse is getting farther away\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._renderedHover.closestMouseDistance = Math.min(\n\t\t\tthis._renderedHover.closestMouseDistance,\n\t\t\tdistance,\n\t\t);\n\t\treturn true;\n\t}\n\n\tprivate _setRenderedHover(\n\t\trenderedHover: RenderedContentHover | undefined,\n\t): void {\n\t\tthis._renderedHover?.dispose();\n\t\tthis._renderedHover = renderedHover;\n\t\tthis._hoverVisibleKey.set(!!renderedHover);\n\t\tthis._hover.containerDomNode.classList.toggle(\"hidden\", !renderedHover);\n\t}\n\n\tprivate _updateFont(): void {\n\t\tconst { fontSize, lineHeight } = this._editor.getOption(\n\t\t\tEditorOption.fontInfo,\n\t\t);\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\t\tcontentsDomNode.style.fontSize = `${fontSize}px`;\n\t\tcontentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n\t\tconst codeClasses: HTMLElement[] = Array.prototype.slice.call(\n\t\t\tthis._hover.contentsDomNode.getElementsByClassName(\"code\"),\n\t\t);\n\t\tcodeClasses.forEach((node) => this._editor.applyFontInfo(node));\n\t}\n\n\tprivate _updateContent(node: DocumentFragment): void {\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\t\tcontentsDomNode.style.paddingBottom = \"\";\n\t\tcontentsDomNode.textContent = \"\";\n\t\tcontentsDomNode.appendChild(node);\n\t}\n\n\tprivate _layoutContentWidget(): void {\n\t\tthis._editor.layoutContentWidget(this);\n\t\tthis._hover.onContentsChanged();\n\t}\n\n\tprivate _updateMaxDimensions() {\n\t\tconst height = Math.max(\n\t\t\tthis._editor.getLayoutInfo().height / 4,\n\t\t\t250,\n\t\t\tContentHoverWidget._lastDimensions.height,\n\t\t);\n\t\tconst width = Math.max(\n\t\t\tthis._editor.getLayoutInfo().width * 0.66,\n\t\t\t750,\n\t\t\tContentHoverWidget._lastDimensions.width,\n\t\t);\n\t\tthis._setHoverWidgetMaxDimensions(width, height);\n\t}\n\n\tprivate _render(renderedHover: RenderedContentHover) {\n\t\tthis._setRenderedHover(renderedHover);\n\t\tthis._updateFont();\n\t\tthis._updateContent(renderedHover.domNode);\n\t\tthis._updateMaxDimensions();\n\t\tthis.onContentsChanged();\n\t\t// Simply force a synchronous render on the editor\n\t\t// such that the widget does not really render with left = '0px'\n\t\tthis._editor.render();\n\t}\n\n\toverride getPosition(): IContentWidgetPosition | null {\n\t\tif (!this._renderedHover) {\n\t\t\treturn null;\n\t\t}\n\t\treturn {\n\t\t\tposition: this._renderedHover.showAtPosition,\n\t\t\tsecondaryPosition: this._renderedHover.showAtSecondaryPosition,\n\t\t\tpositionAffinity: this._renderedHover.shouldAppearBeforeContent\n\t\t\t\t? PositionAffinity.LeftOfInjectedText\n\t\t\t\t: undefined,\n\t\t\tpreference: [\n\t\t\t\tthis._positionPreference ??\n\t\t\t\t\tContentWidgetPositionPreference.ABOVE,\n\t\t\t],\n\t\t};\n\t}\n\n\tpublic show(renderedHover: RenderedContentHover): void {\n\t\tif (!this._editor || !this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tthis._render(renderedHover);\n\t\tconst widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n\t\tconst widgetPosition = renderedHover.showAtPosition;\n\t\tthis._positionPreference =\n\t\t\tthis._findPositionPreference(widgetHeight, widgetPosition) ??\n\t\t\tContentWidgetPositionPreference.ABOVE;\n\n\t\t// See https://github.com/microsoft/vscode/issues/140339\n\t\t// TODO: Doing a second layout of the hover after force rendering the editor\n\t\tthis.onContentsChanged();\n\t\tif (renderedHover.shouldFocus) {\n\t\t\tthis._hover.containerDomNode.focus();\n\t\t}\n\t\tthis._onDidResize.fire();\n\t\t// The aria label overrides the label, so if we add to it, add the contents of the hover\n\t\tconst hoverFocused =\n\t\t\tthis._hover.containerDomNode.ownerDocument.activeElement ===\n\t\t\tthis._hover.containerDomNode;\n\t\tconst accessibleViewHint =\n\t\t\thoverFocused &&\n\t\t\tgetHoverAccessibleViewHint(\n\t\t\t\tthis._configurationService.getValue(\n\t\t\t\t\t\"accessibility.verbosity.hover\",\n\t\t\t\t) === true &&\n\t\t\t\t\tthis._accessibilityService.isScreenReaderOptimized(),\n\t\t\t\tthis._keybindingService\n\t\t\t\t\t.lookupKeybinding(\"editor.action.accessibleView\")\n\t\t\t\t\t?.getAriaLabel() ?? \"\",\n\t\t\t);\n\n\t\tif (accessibleViewHint) {\n\t\t\tthis._hover.contentsDomNode.ariaLabel =\n\t\t\t\tthis._hover.contentsDomNode.textContent +\n\t\t\t\t\", \" +\n\t\t\t\taccessibleViewHint;\n\t\t}\n\t}\n\n\tpublic hide(): void {\n\t\tif (!this._renderedHover) {\n\t\t\treturn;\n\t\t}\n\t\tconst hoverStoleFocus =\n\t\t\tthis._renderedHover.shouldFocus || this._hoverFocusedKey.get();\n\t\tthis._setRenderedHover(undefined);\n\t\tthis._resizableNode.maxSize = new dom.Dimension(\n\t\t\tNumber.POSITIVE_INFINITY,\n\t\t\tNumber.POSITIVE_INFINITY,\n\t\t);\n\t\tthis._resizableNode.clearSashHoverState();\n\t\tthis._hoverFocusedKey.set(false);\n\t\tthis._editor.layoutContentWidget(this);\n\t\tif (hoverStoleFocus) {\n\t\t\tthis._editor.focus();\n\t\t}\n\t}\n\n\tprivate _removeConstraintsRenderNormally(): void {\n\t\t// Added because otherwise the initial size of the hover content is smaller than should be\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tthis._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n\t\tthis._setHoverWidgetDimensions(\"auto\", \"auto\");\n\t}\n\n\tpublic setMinimumDimensions(dimensions: dom.Dimension): void {\n\t\t// We combine the new minimum dimensions with the previous ones\n\t\tthis._minimumSize = new dom.Dimension(\n\t\t\tMath.max(this._minimumSize.width, dimensions.width),\n\t\t\tMath.max(this._minimumSize.height, dimensions.height),\n\t\t);\n\t\tthis._updateMinimumWidth();\n\t}\n\n\tprivate _updateMinimumWidth(): void {\n\t\tconst width =\n\t\t\ttypeof this._contentWidth === \"undefined\"\n\t\t\t\t? this._minimumSize.width\n\t\t\t\t: Math.min(this._contentWidth, this._minimumSize.width);\n\t\t// We want to avoid that the hover is artificially large, so we use the content width as minimum width\n\t\tthis._resizableNode.minSize = new dom.Dimension(\n\t\t\twidth,\n\t\t\tthis._minimumSize.height,\n\t\t);\n\t}\n\n\tpublic onContentsChanged(): void {\n\t\tthis._removeConstraintsRenderNormally();\n\t\tconst containerDomNode = this._hover.containerDomNode;\n\n\t\tlet height = dom.getTotalHeight(containerDomNode);\n\t\tlet width = dom.getTotalWidth(containerDomNode);\n\t\tthis._resizableNode.layout(height, width);\n\n\t\tthis._setHoverWidgetDimensions(width, height);\n\n\t\theight = dom.getTotalHeight(containerDomNode);\n\t\twidth = dom.getTotalWidth(containerDomNode);\n\t\tthis._contentWidth = width;\n\t\tthis._updateMinimumWidth();\n\t\tthis._resizableNode.layout(height, width);\n\n\t\tif (this._renderedHover?.showAtPosition) {\n\t\t\tconst widgetHeight = dom.getTotalHeight(\n\t\t\t\tthis._hover.containerDomNode,\n\t\t\t);\n\t\t\tthis._positionPreference = this._findPositionPreference(\n\t\t\t\twidgetHeight,\n\t\t\t\tthis._renderedHover.showAtPosition,\n\t\t\t);\n\t\t}\n\t\tthis._layoutContentWidget();\n\t}\n\n\tpublic focus(): void {\n\t\tthis._hover.containerDomNode.focus();\n\t}\n\n\tpublic scrollUp(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst fontInfo = this._editor.getOption(EditorOption.fontInfo);\n\t\tthis._hover.scrollbar.setScrollPosition({\n\t\t\tscrollTop: scrollTop - fontInfo.lineHeight,\n\t\t});\n\t}\n\n\tpublic scrollDown(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst fontInfo = this._editor.getOption(EditorOption.fontInfo);\n\t\tthis._hover.scrollbar.setScrollPosition({\n\t\t\tscrollTop: scrollTop + fontInfo.lineHeight,\n\t\t});\n\t}\n\n\tpublic scrollLeft(): void {\n\t\tconst scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n\t\tthis._hover.scrollbar.setScrollPosition({\n\t\t\tscrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY,\n\t\t});\n\t}\n\n\tpublic scrollRight(): void {\n\t\tconst scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n\t\tthis._hover.scrollbar.setScrollPosition({\n\t\t\tscrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY,\n\t\t});\n\t}\n\n\tpublic pageUp(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n\t\tthis._hover.scrollbar.setScrollPosition({\n\t\t\tscrollTop: scrollTop - scrollHeight,\n\t\t});\n\t}\n\n\tpublic pageDown(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n\t\tthis._hover.scrollbar.setScrollPosition({\n\t\t\tscrollTop: scrollTop + scrollHeight,\n\t\t});\n\t}\n\n\tpublic goToTop(): void {\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n\t}\n\n\tpublic goToBottom(): void {\n\t\tthis._hover.scrollbar.setScrollPosition({\n\t\t\tscrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight,\n\t\t});\n\t}\n}\n\nfunction computeDistanceFromPointToRectangle(\n\tpointX: number,\n\tpointY: number,\n\tleft: number,\n\ttop: number,\n\twidth: number,\n\theight: number,\n): number {\n\tconst x = left + width / 2; // x center of rectangle\n\tconst y = top + height / 2; // y center of rectangle\n\tconst dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n\tconst dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n\treturn Math.sqrt(dx * dx + dy * dy);\n}\n"],
  "mappings": "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",
  "names": []
}
