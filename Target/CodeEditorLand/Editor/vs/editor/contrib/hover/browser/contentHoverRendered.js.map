{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/contentHoverRendered.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEditorHoverContext, IEditorHoverParticipant, IEditorHoverRenderContext, IHoverPart, IRenderedHoverParts, RenderedHoverParts } from './hoverTypes.js';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { EditorHoverStatusBar } from './contentHoverStatusBar.js';\nimport { HoverStartSource } from './hoverOperation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ContentHoverResult } from './contentHoverTypes.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverVerbosityAction } from '../../../common/languages.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { HoverColorPickerParticipant } from '../../colorPicker/browser/hoverColorPicker/hoverColorPickerParticipant.js';\nimport { localize } from '../../../../nls.js';\nimport { InlayHintsHover } from '../../inlayHints/browser/inlayHintsHover.js';\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { HoverAction } from '../../../../base/browser/ui/hover/hoverWidget.js';\n\nexport class RenderedContentHover extends Disposable {\n\n\tpublic closestMouseDistance: number | undefined;\n\tpublic initialMousePosX: number | undefined;\n\tpublic initialMousePosY: number | undefined;\n\n\tpublic readonly showAtPosition: Position;\n\tpublic readonly showAtSecondaryPosition: Position;\n\tpublic readonly shouldFocus: boolean;\n\tpublic readonly source: HoverStartSource;\n\tpublic readonly shouldAppearBeforeContent: boolean;\n\n\tprivate readonly _renderedHoverParts: RenderedContentHoverParts;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\thoverResult: ContentHoverResult,\n\t\tparticipants: IEditorHoverParticipant<IHoverPart>[],\n\t\tcontext: IEditorHoverContext,\n\t\tkeybindingService: IKeybindingService\n\t) {\n\t\tsuper();\n\t\tconst parts = hoverResult.hoverParts;\n\t\tthis._renderedHoverParts = this._register(new RenderedContentHoverParts(\n\t\t\teditor,\n\t\t\tparticipants,\n\t\t\tparts,\n\t\t\tkeybindingService,\n\t\t\tcontext\n\t\t));\n\t\tconst contentHoverComputerOptions = hoverResult.options;\n\t\tconst anchor = contentHoverComputerOptions.anchor;\n\t\tconst { showAtPosition, showAtSecondaryPosition } = RenderedContentHover.computeHoverPositions(editor, anchor.range, parts);\n\t\tthis.shouldAppearBeforeContent = parts.some(m => m.isBeforeContent);\n\t\tthis.showAtPosition = showAtPosition;\n\t\tthis.showAtSecondaryPosition = showAtSecondaryPosition;\n\t\tthis.initialMousePosX = anchor.initialMousePosX;\n\t\tthis.initialMousePosY = anchor.initialMousePosY;\n\t\tthis.shouldFocus = contentHoverComputerOptions.shouldFocus;\n\t\tthis.source = contentHoverComputerOptions.source;\n\t}\n\n\tpublic get domNode(): DocumentFragment {\n\t\treturn this._renderedHoverParts.domNode;\n\t}\n\n\tpublic get domNodeHasChildren(): boolean {\n\t\treturn this._renderedHoverParts.domNodeHasChildren;\n\t}\n\n\tpublic get focusedHoverPartIndex(): number {\n\t\treturn this._renderedHoverParts.focusedHoverPartIndex;\n\t}\n\n\tpublic focusHoverPartWithIndex(index: number): void {\n\t\tthis._renderedHoverParts.focusHoverPartWithIndex(index);\n\t}\n\n\tpublic getAccessibleWidgetContent(): string {\n\t\treturn this._renderedHoverParts.getAccessibleContent();\n\t}\n\n\tpublic getAccessibleWidgetContentAtIndex(index: number): string {\n\t\treturn this._renderedHoverParts.getAccessibleHoverContentAtIndex(index);\n\t}\n\n\tpublic async updateHoverVerbosityLevel(action: HoverVerbosityAction, index: number, focus?: boolean): Promise<void> {\n\t\tthis._renderedHoverParts.updateHoverVerbosityLevel(action, index, focus);\n\t}\n\n\tpublic doesHoverAtIndexSupportVerbosityAction(index: number, action: HoverVerbosityAction): boolean {\n\t\treturn this._renderedHoverParts.doesHoverAtIndexSupportVerbosityAction(index, action);\n\t}\n\n\tpublic isColorPickerVisible(): boolean {\n\t\treturn this._renderedHoverParts.isColorPickerVisible();\n\t}\n\n\tpublic static computeHoverPositions(editor: ICodeEditor, anchorRange: Range, hoverParts: IHoverPart[]): { showAtPosition: Position; showAtSecondaryPosition: Position } {\n\n\t\tlet startColumnBoundary = 1;\n\t\tif (editor.hasModel()) {\n\t\t\t// Ensure the range is on the current view line\n\t\t\tconst viewModel = editor._getViewModel();\n\t\t\tconst coordinatesConverter = viewModel.coordinatesConverter;\n\t\t\tconst anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n\t\t\tconst anchorViewMinColumn = viewModel.getLineMinColumn(anchorViewRange.startLineNumber);\n\t\t\tconst anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, anchorViewMinColumn);\n\t\t\tstartColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n\t\t}\n\n\t\t// The anchor range is always on a single line\n\t\tconst anchorStartLineNumber = anchorRange.startLineNumber;\n\t\tlet secondaryPositionColumn = anchorRange.startColumn;\n\t\tlet forceShowAtRange: Range | undefined;\n\n\t\tfor (const hoverPart of hoverParts) {\n\t\t\tconst hoverPartRange = hoverPart.range;\n\t\t\tconst hoverPartRangeOnAnchorStartLine = hoverPartRange.startLineNumber === anchorStartLineNumber;\n\t\t\tconst hoverPartRangeOnAnchorEndLine = hoverPartRange.endLineNumber === anchorStartLineNumber;\n\t\t\tconst hoverPartRangeIsOnAnchorLine = hoverPartRangeOnAnchorStartLine && hoverPartRangeOnAnchorEndLine;\n\t\t\tif (hoverPartRangeIsOnAnchorLine) {\n\t\t\t\t// this message has a range that is completely sitting on the line of the anchor\n\t\t\t\tconst hoverPartStartColumn = hoverPartRange.startColumn;\n\t\t\t\tconst minSecondaryPositionColumn = Math.min(secondaryPositionColumn, hoverPartStartColumn);\n\t\t\t\tsecondaryPositionColumn = Math.max(minSecondaryPositionColumn, startColumnBoundary);\n\t\t\t}\n\t\t\tif (hoverPart.forceShowAtRange) {\n\t\t\t\tforceShowAtRange = hoverPartRange;\n\t\t\t}\n\t\t}\n\n\t\tlet showAtPosition: Position;\n\t\tlet showAtSecondaryPosition: Position;\n\t\tif (forceShowAtRange) {\n\t\t\tconst forceShowAtPosition = forceShowAtRange.getStartPosition();\n\t\t\tshowAtPosition = forceShowAtPosition;\n\t\t\tshowAtSecondaryPosition = forceShowAtPosition;\n\t\t} else {\n\t\t\tshowAtPosition = anchorRange.getStartPosition();\n\t\t\tshowAtSecondaryPosition = new Position(anchorStartLineNumber, secondaryPositionColumn);\n\t\t}\n\t\treturn {\n\t\t\tshowAtPosition,\n\t\t\tshowAtSecondaryPosition,\n\t\t};\n\t}\n}\n\ninterface IRenderedContentHoverPart {\n\t/**\n\t * Type of rendered part\n\t */\n\ttype: 'hoverPart';\n\t/**\n\t * Participant of the rendered hover part\n\t */\n\tparticipant: IEditorHoverParticipant<IHoverPart>;\n\t/**\n\t * The rendered hover part\n\t */\n\thoverPart: IHoverPart;\n\t/**\n\t * The HTML element containing the hover status bar.\n\t */\n\thoverElement: HTMLElement;\n}\n\ninterface IRenderedContentStatusBar {\n\t/**\n\t * Type of rendered part\n\t */\n\ttype: 'statusBar';\n\t/**\n\t * The HTML element containing the hover status bar.\n\t */\n\thoverElement: HTMLElement;\n\t/**\n\t * The actions of the hover status bar.\n\t */\n\tactions: HoverAction[];\n}\n\ntype IRenderedContentHoverPartOrStatusBar = IRenderedContentHoverPart | IRenderedContentStatusBar;\n\nclass RenderedStatusBar implements IDisposable {\n\n\tconstructor(fragment: DocumentFragment, private readonly _statusBar: EditorHoverStatusBar) {\n\t\tfragment.appendChild(this._statusBar.hoverElement);\n\t}\n\n\tget hoverElement(): HTMLElement {\n\t\treturn this._statusBar.hoverElement;\n\t}\n\n\tget actions(): HoverAction[] {\n\t\treturn this._statusBar.actions;\n\t}\n\n\tdispose() {\n\t\tthis._statusBar.dispose();\n\t}\n}\n\nclass RenderedContentHoverParts extends Disposable {\n\n\tprivate static readonly _DECORATION_OPTIONS = ModelDecorationOptions.register({\n\t\tdescription: 'content-hover-highlight',\n\t\tclassName: 'hoverHighlight'\n\t});\n\n\tprivate readonly _renderedParts: IRenderedContentHoverPartOrStatusBar[] = [];\n\tprivate readonly _fragment: DocumentFragment;\n\tprivate readonly _context: IEditorHoverContext;\n\n\tprivate _markdownHoverParticipant: MarkdownHoverParticipant | undefined;\n\tprivate _colorHoverParticipant: HoverColorPickerParticipant | undefined;\n\tprivate _focusedHoverPartIndex: number = -1;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tparticipants: IEditorHoverParticipant<IHoverPart>[],\n\t\thoverParts: IHoverPart[],\n\t\tkeybindingService: IKeybindingService,\n\t\tcontext: IEditorHoverContext\n\t) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._fragment = document.createDocumentFragment();\n\t\tthis._register(this._renderParts(participants, hoverParts, context, keybindingService));\n\t\tthis._register(this._registerListenersOnRenderedParts());\n\t\tthis._register(this._createEditorDecorations(editor, hoverParts));\n\t\tthis._updateMarkdownAndColorParticipantInfo(participants);\n\t}\n\n\tprivate _createEditorDecorations(editor: ICodeEditor, hoverParts: IHoverPart[]): IDisposable {\n\t\tif (hoverParts.length === 0) {\n\t\t\treturn Disposable.None;\n\t\t}\n\t\tlet highlightRange = hoverParts[0].range;\n\t\tfor (const hoverPart of hoverParts) {\n\t\t\tconst hoverPartRange = hoverPart.range;\n\t\t\thighlightRange = Range.plusRange(highlightRange, hoverPartRange);\n\t\t}\n\t\tconst highlightDecoration = editor.createDecorationsCollection();\n\t\thighlightDecoration.set([{\n\t\t\trange: highlightRange,\n\t\t\toptions: RenderedContentHoverParts._DECORATION_OPTIONS\n\t\t}]);\n\t\treturn toDisposable(() => {\n\t\t\thighlightDecoration.clear();\n\t\t});\n\t}\n\n\tprivate _renderParts(participants: IEditorHoverParticipant<IHoverPart>[], hoverParts: IHoverPart[], hoverContext: IEditorHoverContext, keybindingService: IKeybindingService): IDisposable {\n\t\tconst statusBar = new EditorHoverStatusBar(keybindingService);\n\t\tconst hoverRenderingContext: IEditorHoverRenderContext = {\n\t\t\tfragment: this._fragment,\n\t\t\tstatusBar,\n\t\t\t...hoverContext\n\t\t};\n\t\tconst disposables = new DisposableStore();\n\t\tfor (const participant of participants) {\n\t\t\tconst renderedHoverParts = this._renderHoverPartsForParticipant(hoverParts, participant, hoverRenderingContext);\n\t\t\tdisposables.add(renderedHoverParts);\n\t\t\tfor (const renderedHoverPart of renderedHoverParts.renderedHoverParts) {\n\t\t\t\tthis._renderedParts.push({\n\t\t\t\t\ttype: 'hoverPart',\n\t\t\t\t\tparticipant,\n\t\t\t\t\thoverPart: renderedHoverPart.hoverPart,\n\t\t\t\t\thoverElement: renderedHoverPart.hoverElement,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst renderedStatusBar = this._renderStatusBar(this._fragment, statusBar);\n\t\tif (renderedStatusBar) {\n\t\t\tdisposables.add(renderedStatusBar);\n\t\t\tthis._renderedParts.push({\n\t\t\t\ttype: 'statusBar',\n\t\t\t\thoverElement: renderedStatusBar.hoverElement,\n\t\t\t\tactions: renderedStatusBar.actions,\n\t\t\t});\n\t\t}\n\t\treturn toDisposable(() => { disposables.dispose(); });\n\t}\n\n\tprivate _renderHoverPartsForParticipant(hoverParts: IHoverPart[], participant: IEditorHoverParticipant<IHoverPart>, hoverRenderingContext: IEditorHoverRenderContext): IRenderedHoverParts<IHoverPart> {\n\t\tconst hoverPartsForParticipant = hoverParts.filter(hoverPart => hoverPart.owner === participant);\n\t\tconst hasHoverPartsForParticipant = hoverPartsForParticipant.length > 0;\n\t\tif (!hasHoverPartsForParticipant) {\n\t\t\treturn new RenderedHoverParts([]);\n\t\t}\n\t\treturn participant.renderHoverParts(hoverRenderingContext, hoverPartsForParticipant);\n\t}\n\n\tprivate _renderStatusBar(fragment: DocumentFragment, statusBar: EditorHoverStatusBar): RenderedStatusBar | undefined {\n\t\tif (!statusBar.hasContent) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new RenderedStatusBar(fragment, statusBar);\n\t}\n\n\tprivate _registerListenersOnRenderedParts(): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tthis._renderedParts.forEach((renderedPart: IRenderedContentHoverPartOrStatusBar, index: number) => {\n\t\t\tconst element = renderedPart.hoverElement;\n\t\t\telement.tabIndex = 0;\n\t\t\tdisposables.add(dom.addDisposableListener(element, dom.EventType.FOCUS_IN, (event: Event) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tthis._focusedHoverPartIndex = index;\n\t\t\t}));\n\t\t\tdisposables.add(dom.addDisposableListener(element, dom.EventType.FOCUS_OUT, (event: Event) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tthis._focusedHoverPartIndex = -1;\n\t\t\t}));\n\t\t});\n\t\treturn disposables;\n\t}\n\n\tprivate _updateMarkdownAndColorParticipantInfo(participants: IEditorHoverParticipant<IHoverPart>[]) {\n\t\tconst markdownHoverParticipant = participants.find(p => {\n\t\t\treturn (p instanceof MarkdownHoverParticipant) && !(p instanceof InlayHintsHover);\n\t\t});\n\t\tif (markdownHoverParticipant) {\n\t\t\tthis._markdownHoverParticipant = markdownHoverParticipant as MarkdownHoverParticipant;\n\t\t}\n\t\tthis._colorHoverParticipant = participants.find(p => p instanceof HoverColorPickerParticipant);\n\t}\n\n\tpublic focusHoverPartWithIndex(index: number): void {\n\t\tif (index < 0 || index >= this._renderedParts.length) {\n\t\t\treturn;\n\t\t}\n\t\tthis._renderedParts[index].hoverElement.focus();\n\t}\n\n\tpublic getAccessibleContent(): string {\n\t\tconst content: string[] = [];\n\t\tfor (let i = 0; i < this._renderedParts.length; i++) {\n\t\t\tcontent.push(this.getAccessibleHoverContentAtIndex(i));\n\t\t}\n\t\treturn content.join('\\n\\n');\n\t}\n\n\tpublic getAccessibleHoverContentAtIndex(index: number): string {\n\t\tconst renderedPart = this._renderedParts[index];\n\t\tif (!renderedPart) {\n\t\t\treturn '';\n\t\t}\n\t\tif (renderedPart.type === 'statusBar') {\n\t\t\tconst statusBarDescription = [localize('hoverAccessibilityStatusBar', \"This is a hover status bar.\")];\n\t\t\tfor (const action of renderedPart.actions) {\n\t\t\t\tconst keybinding = action.actionKeybindingLabel;\n\t\t\t\tif (keybinding) {\n\t\t\t\t\tstatusBarDescription.push(localize('hoverAccessibilityStatusBarActionWithKeybinding', \"It has an action with label {0} and keybinding {1}.\", action.actionLabel, keybinding));\n\t\t\t\t} else {\n\t\t\t\t\tstatusBarDescription.push(localize('hoverAccessibilityStatusBarActionWithoutKeybinding', \"It has an action with label {0}.\", action.actionLabel));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn statusBarDescription.join('\\n');\n\t\t}\n\t\treturn renderedPart.participant.getAccessibleContent(renderedPart.hoverPart);\n\t}\n\n\tpublic async updateHoverVerbosityLevel(action: HoverVerbosityAction, index: number, focus?: boolean): Promise<void> {\n\t\tif (!this._markdownHoverParticipant) {\n\t\t\treturn;\n\t\t}\n\t\tconst normalizedMarkdownHoverIndex = this._normalizedIndexToMarkdownHoverIndexRange(this._markdownHoverParticipant, index);\n\t\tif (normalizedMarkdownHoverIndex === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst renderedPart = await this._markdownHoverParticipant.updateMarkdownHoverVerbosityLevel(action, normalizedMarkdownHoverIndex, focus);\n\t\tif (!renderedPart) {\n\t\t\treturn;\n\t\t}\n\t\tthis._renderedParts[index] = {\n\t\t\ttype: 'hoverPart',\n\t\t\tparticipant: this._markdownHoverParticipant,\n\t\t\thoverPart: renderedPart.hoverPart,\n\t\t\thoverElement: renderedPart.hoverElement,\n\t\t};\n\t\tthis._context.onContentsChanged();\n\t}\n\n\tpublic doesHoverAtIndexSupportVerbosityAction(index: number, action: HoverVerbosityAction): boolean {\n\t\tif (!this._markdownHoverParticipant) {\n\t\t\treturn false;\n\t\t}\n\t\tconst normalizedMarkdownHoverIndex = this._normalizedIndexToMarkdownHoverIndexRange(this._markdownHoverParticipant, index);\n\t\tif (normalizedMarkdownHoverIndex === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._markdownHoverParticipant.doesMarkdownHoverAtIndexSupportVerbosityAction(normalizedMarkdownHoverIndex, action);\n\t}\n\n\tpublic isColorPickerVisible(): boolean {\n\t\treturn this._colorHoverParticipant?.isColorPickerVisible() ?? false;\n\t}\n\n\tprivate _normalizedIndexToMarkdownHoverIndexRange(markdownHoverParticipant: MarkdownHoverParticipant, index: number): number | undefined {\n\t\tconst renderedPart = this._renderedParts[index];\n\t\tif (!renderedPart || renderedPart.type !== 'hoverPart') {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst isHoverPartMarkdownHover = renderedPart.participant === markdownHoverParticipant;\n\t\tif (!isHoverPartMarkdownHover) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst firstIndexOfMarkdownHovers = this._renderedParts.findIndex(renderedPart =>\n\t\t\trenderedPart.type === 'hoverPart'\n\t\t\t&& renderedPart.participant === markdownHoverParticipant\n\t\t);\n\t\tif (firstIndexOfMarkdownHovers === -1) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\t\treturn index - firstIndexOfMarkdownHovers;\n\t}\n\n\tpublic get domNode(): DocumentFragment {\n\t\treturn this._fragment;\n\t}\n\n\tpublic get domNodeHasChildren(): boolean {\n\t\treturn this._fragment.hasChildNodes();\n\t}\n\n\tpublic get focusedHoverPartIndex(): number {\n\t\treturn this._focusedHoverPartIndex;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["renderedPart"]
}
