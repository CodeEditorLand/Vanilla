{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/contentHoverRendered.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type { HoverAction } from \"../../../../base/browser/ui/hover/hoverWidget.js\";\nimport { BugIndicatingError } from \"../../../../base/common/errors.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type { HoverVerbosityAction } from \"../../../common/languages.js\";\nimport { ModelDecorationOptions } from \"../../../common/model/textModel.js\";\nimport { HoverColorPickerParticipant } from \"../../colorPicker/browser/hoverColorPicker/hoverColorPickerParticipant.js\";\nimport { InlayHintsHover } from \"../../inlayHints/browser/inlayHintsHover.js\";\nimport { EditorHoverStatusBar } from \"./contentHoverStatusBar.js\";\nimport type { ContentHoverResult } from \"./contentHoverTypes.js\";\nimport type { HoverStartSource } from \"./hoverOperation.js\";\nimport {\n\ttype IEditorHoverContext,\n\ttype IEditorHoverParticipant,\n\ttype IEditorHoverRenderContext,\n\ttype IHoverPart,\n\ttype IRenderedHoverParts,\n\tRenderedHoverParts,\n} from \"./hoverTypes.js\";\nimport { MarkdownHoverParticipant } from \"./markdownHoverParticipant.js\";\n\nexport class RenderedContentHover extends Disposable {\n\tpublic closestMouseDistance: number | undefined;\n\tpublic initialMousePosX: number | undefined;\n\tpublic initialMousePosY: number | undefined;\n\n\tpublic readonly showAtPosition: Position;\n\tpublic readonly showAtSecondaryPosition: Position;\n\tpublic readonly shouldFocus: boolean;\n\tpublic readonly source: HoverStartSource;\n\tpublic readonly shouldAppearBeforeContent: boolean;\n\n\tprivate readonly _renderedHoverParts: RenderedContentHoverParts;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\thoverResult: ContentHoverResult,\n\t\tparticipants: IEditorHoverParticipant<IHoverPart>[],\n\t\tcontext: IEditorHoverContext,\n\t\tkeybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\t\tconst parts = hoverResult.hoverParts;\n\t\tthis._renderedHoverParts = this._register(\n\t\t\tnew RenderedContentHoverParts(\n\t\t\t\teditor,\n\t\t\t\tparticipants,\n\t\t\t\tparts,\n\t\t\t\tkeybindingService,\n\t\t\t\tcontext,\n\t\t\t),\n\t\t);\n\t\tconst contentHoverComputerOptions = hoverResult.options;\n\t\tconst anchor = contentHoverComputerOptions.anchor;\n\t\tconst { showAtPosition, showAtSecondaryPosition } =\n\t\t\tRenderedContentHover.computeHoverPositions(\n\t\t\t\teditor,\n\t\t\t\tanchor.range,\n\t\t\t\tparts,\n\t\t\t);\n\t\tthis.shouldAppearBeforeContent = parts.some((m) => m.isBeforeContent);\n\t\tthis.showAtPosition = showAtPosition;\n\t\tthis.showAtSecondaryPosition = showAtSecondaryPosition;\n\t\tthis.initialMousePosX = anchor.initialMousePosX;\n\t\tthis.initialMousePosY = anchor.initialMousePosY;\n\t\tthis.shouldFocus = contentHoverComputerOptions.shouldFocus;\n\t\tthis.source = contentHoverComputerOptions.source;\n\t}\n\n\tpublic get domNode(): DocumentFragment {\n\t\treturn this._renderedHoverParts.domNode;\n\t}\n\n\tpublic get domNodeHasChildren(): boolean {\n\t\treturn this._renderedHoverParts.domNodeHasChildren;\n\t}\n\n\tpublic get focusedHoverPartIndex(): number {\n\t\treturn this._renderedHoverParts.focusedHoverPartIndex;\n\t}\n\n\tpublic focusHoverPartWithIndex(index: number): void {\n\t\tthis._renderedHoverParts.focusHoverPartWithIndex(index);\n\t}\n\n\tpublic getAccessibleWidgetContent(): string {\n\t\treturn this._renderedHoverParts.getAccessibleContent();\n\t}\n\n\tpublic getAccessibleWidgetContentAtIndex(index: number): string {\n\t\treturn this._renderedHoverParts.getAccessibleHoverContentAtIndex(index);\n\t}\n\n\tpublic async updateHoverVerbosityLevel(\n\t\taction: HoverVerbosityAction,\n\t\tindex: number,\n\t\tfocus?: boolean,\n\t): Promise<void> {\n\t\tthis._renderedHoverParts.updateHoverVerbosityLevel(\n\t\t\taction,\n\t\t\tindex,\n\t\t\tfocus,\n\t\t);\n\t}\n\n\tpublic doesHoverAtIndexSupportVerbosityAction(\n\t\tindex: number,\n\t\taction: HoverVerbosityAction,\n\t): boolean {\n\t\treturn this._renderedHoverParts.doesHoverAtIndexSupportVerbosityAction(\n\t\t\tindex,\n\t\t\taction,\n\t\t);\n\t}\n\n\tpublic isColorPickerVisible(): boolean {\n\t\treturn this._renderedHoverParts.isColorPickerVisible();\n\t}\n\n\tpublic static computeHoverPositions(\n\t\teditor: ICodeEditor,\n\t\tanchorRange: Range,\n\t\thoverParts: IHoverPart[],\n\t): { showAtPosition: Position; showAtSecondaryPosition: Position } {\n\t\tlet startColumnBoundary = 1;\n\t\tif (editor.hasModel()) {\n\t\t\t// Ensure the range is on the current view line\n\t\t\tconst viewModel = editor._getViewModel();\n\t\t\tconst coordinatesConverter = viewModel.coordinatesConverter;\n\t\t\tconst anchorViewRange =\n\t\t\t\tcoordinatesConverter.convertModelRangeToViewRange(anchorRange);\n\t\t\tconst anchorViewMinColumn = viewModel.getLineMinColumn(\n\t\t\t\tanchorViewRange.startLineNumber,\n\t\t\t);\n\t\t\tconst anchorViewRangeStart = new Position(\n\t\t\t\tanchorViewRange.startLineNumber,\n\t\t\t\tanchorViewMinColumn,\n\t\t\t);\n\t\t\tstartColumnBoundary =\n\t\t\t\tcoordinatesConverter.convertViewPositionToModelPosition(\n\t\t\t\t\tanchorViewRangeStart,\n\t\t\t\t).column;\n\t\t}\n\n\t\t// The anchor range is always on a single line\n\t\tconst anchorStartLineNumber = anchorRange.startLineNumber;\n\t\tlet secondaryPositionColumn = anchorRange.startColumn;\n\t\tlet forceShowAtRange: Range | undefined;\n\n\t\tfor (const hoverPart of hoverParts) {\n\t\t\tconst hoverPartRange = hoverPart.range;\n\t\t\tconst hoverPartRangeOnAnchorStartLine =\n\t\t\t\thoverPartRange.startLineNumber === anchorStartLineNumber;\n\t\t\tconst hoverPartRangeOnAnchorEndLine =\n\t\t\t\thoverPartRange.endLineNumber === anchorStartLineNumber;\n\t\t\tconst hoverPartRangeIsOnAnchorLine =\n\t\t\t\thoverPartRangeOnAnchorStartLine &&\n\t\t\t\thoverPartRangeOnAnchorEndLine;\n\t\t\tif (hoverPartRangeIsOnAnchorLine) {\n\t\t\t\t// this message has a range that is completely sitting on the line of the anchor\n\t\t\t\tconst hoverPartStartColumn = hoverPartRange.startColumn;\n\t\t\t\tconst minSecondaryPositionColumn = Math.min(\n\t\t\t\t\tsecondaryPositionColumn,\n\t\t\t\t\thoverPartStartColumn,\n\t\t\t\t);\n\t\t\t\tsecondaryPositionColumn = Math.max(\n\t\t\t\t\tminSecondaryPositionColumn,\n\t\t\t\t\tstartColumnBoundary,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (hoverPart.forceShowAtRange) {\n\t\t\t\tforceShowAtRange = hoverPartRange;\n\t\t\t}\n\t\t}\n\n\t\tlet showAtPosition: Position;\n\t\tlet showAtSecondaryPosition: Position;\n\t\tif (forceShowAtRange) {\n\t\t\tconst forceShowAtPosition = forceShowAtRange.getStartPosition();\n\t\t\tshowAtPosition = forceShowAtPosition;\n\t\t\tshowAtSecondaryPosition = forceShowAtPosition;\n\t\t} else {\n\t\t\tshowAtPosition = anchorRange.getStartPosition();\n\t\t\tshowAtSecondaryPosition = new Position(\n\t\t\t\tanchorStartLineNumber,\n\t\t\t\tsecondaryPositionColumn,\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\tshowAtPosition,\n\t\t\tshowAtSecondaryPosition,\n\t\t};\n\t}\n}\n\ninterface IRenderedContentHoverPart {\n\t/**\n\t * Type of rendered part\n\t */\n\ttype: \"hoverPart\";\n\t/**\n\t * Participant of the rendered hover part\n\t */\n\tparticipant: IEditorHoverParticipant<IHoverPart>;\n\t/**\n\t * The rendered hover part\n\t */\n\thoverPart: IHoverPart;\n\t/**\n\t * The HTML element containing the hover status bar.\n\t */\n\thoverElement: HTMLElement;\n}\n\ninterface IRenderedContentStatusBar {\n\t/**\n\t * Type of rendered part\n\t */\n\ttype: \"statusBar\";\n\t/**\n\t * The HTML element containing the hover status bar.\n\t */\n\thoverElement: HTMLElement;\n\t/**\n\t * The actions of the hover status bar.\n\t */\n\tactions: HoverAction[];\n}\n\ntype IRenderedContentHoverPartOrStatusBar =\n\t| IRenderedContentHoverPart\n\t| IRenderedContentStatusBar;\n\nclass RenderedStatusBar implements IDisposable {\n\tconstructor(\n\t\tfragment: DocumentFragment,\n\t\tprivate readonly _statusBar: EditorHoverStatusBar,\n\t) {\n\t\tfragment.appendChild(this._statusBar.hoverElement);\n\t}\n\n\tget hoverElement(): HTMLElement {\n\t\treturn this._statusBar.hoverElement;\n\t}\n\n\tget actions(): HoverAction[] {\n\t\treturn this._statusBar.actions;\n\t}\n\n\tdispose() {\n\t\tthis._statusBar.dispose();\n\t}\n}\n\nclass RenderedContentHoverParts extends Disposable {\n\tprivate static readonly _DECORATION_OPTIONS =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"content-hover-highlight\",\n\t\t\tclassName: \"hoverHighlight\",\n\t\t});\n\n\tprivate readonly _renderedParts: IRenderedContentHoverPartOrStatusBar[] =\n\t\t[];\n\tprivate readonly _fragment: DocumentFragment;\n\tprivate readonly _context: IEditorHoverContext;\n\n\tprivate _markdownHoverParticipant: MarkdownHoverParticipant | undefined;\n\tprivate _colorHoverParticipant: HoverColorPickerParticipant | undefined;\n\tprivate _focusedHoverPartIndex = -1;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tparticipants: IEditorHoverParticipant<IHoverPart>[],\n\t\thoverParts: IHoverPart[],\n\t\tkeybindingService: IKeybindingService,\n\t\tcontext: IEditorHoverContext,\n\t) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._fragment = document.createDocumentFragment();\n\t\tthis._register(\n\t\t\tthis._renderParts(\n\t\t\t\tparticipants,\n\t\t\t\thoverParts,\n\t\t\t\tcontext,\n\t\t\t\tkeybindingService,\n\t\t\t),\n\t\t);\n\t\tthis._register(this._registerListenersOnRenderedParts());\n\t\tthis._register(this._createEditorDecorations(editor, hoverParts));\n\t\tthis._updateMarkdownAndColorParticipantInfo(participants);\n\t}\n\n\tprivate _createEditorDecorations(\n\t\teditor: ICodeEditor,\n\t\thoverParts: IHoverPart[],\n\t): IDisposable {\n\t\tif (hoverParts.length === 0) {\n\t\t\treturn Disposable.None;\n\t\t}\n\t\tlet highlightRange = hoverParts[0].range;\n\t\tfor (const hoverPart of hoverParts) {\n\t\t\tconst hoverPartRange = hoverPart.range;\n\t\t\thighlightRange = Range.plusRange(highlightRange, hoverPartRange);\n\t\t}\n\t\tconst highlightDecoration = editor.createDecorationsCollection();\n\t\thighlightDecoration.set([\n\t\t\t{\n\t\t\t\trange: highlightRange,\n\t\t\t\toptions: RenderedContentHoverParts._DECORATION_OPTIONS,\n\t\t\t},\n\t\t]);\n\t\treturn toDisposable(() => {\n\t\t\thighlightDecoration.clear();\n\t\t});\n\t}\n\n\tprivate _renderParts(\n\t\tparticipants: IEditorHoverParticipant<IHoverPart>[],\n\t\thoverParts: IHoverPart[],\n\t\thoverContext: IEditorHoverContext,\n\t\tkeybindingService: IKeybindingService,\n\t): IDisposable {\n\t\tconst statusBar = new EditorHoverStatusBar(keybindingService);\n\t\tconst hoverRenderingContext: IEditorHoverRenderContext = {\n\t\t\tfragment: this._fragment,\n\t\t\tstatusBar,\n\t\t\t...hoverContext,\n\t\t};\n\t\tconst disposables = new DisposableStore();\n\t\tfor (const participant of participants) {\n\t\t\tconst renderedHoverParts = this._renderHoverPartsForParticipant(\n\t\t\t\thoverParts,\n\t\t\t\tparticipant,\n\t\t\t\thoverRenderingContext,\n\t\t\t);\n\t\t\tdisposables.add(renderedHoverParts);\n\t\t\tfor (const renderedHoverPart of renderedHoverParts.renderedHoverParts) {\n\t\t\t\tthis._renderedParts.push({\n\t\t\t\t\ttype: \"hoverPart\",\n\t\t\t\t\tparticipant,\n\t\t\t\t\thoverPart: renderedHoverPart.hoverPart,\n\t\t\t\t\thoverElement: renderedHoverPart.hoverElement,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst renderedStatusBar = this._renderStatusBar(\n\t\t\tthis._fragment,\n\t\t\tstatusBar,\n\t\t);\n\t\tif (renderedStatusBar) {\n\t\t\tdisposables.add(renderedStatusBar);\n\t\t\tthis._renderedParts.push({\n\t\t\t\ttype: \"statusBar\",\n\t\t\t\thoverElement: renderedStatusBar.hoverElement,\n\t\t\t\tactions: renderedStatusBar.actions,\n\t\t\t});\n\t\t}\n\t\treturn toDisposable(() => {\n\t\t\tdisposables.dispose();\n\t\t});\n\t}\n\n\tprivate _renderHoverPartsForParticipant(\n\t\thoverParts: IHoverPart[],\n\t\tparticipant: IEditorHoverParticipant<IHoverPart>,\n\t\thoverRenderingContext: IEditorHoverRenderContext,\n\t): IRenderedHoverParts<IHoverPart> {\n\t\tconst hoverPartsForParticipant = hoverParts.filter(\n\t\t\t(hoverPart) => hoverPart.owner === participant,\n\t\t);\n\t\tconst hasHoverPartsForParticipant = hoverPartsForParticipant.length > 0;\n\t\tif (!hasHoverPartsForParticipant) {\n\t\t\treturn new RenderedHoverParts([]);\n\t\t}\n\t\treturn participant.renderHoverParts(\n\t\t\thoverRenderingContext,\n\t\t\thoverPartsForParticipant,\n\t\t);\n\t}\n\n\tprivate _renderStatusBar(\n\t\tfragment: DocumentFragment,\n\t\tstatusBar: EditorHoverStatusBar,\n\t): RenderedStatusBar | undefined {\n\t\tif (!statusBar.hasContent) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new RenderedStatusBar(fragment, statusBar);\n\t}\n\n\tprivate _registerListenersOnRenderedParts(): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tthis._renderedParts.forEach(\n\t\t\t(\n\t\t\t\trenderedPart: IRenderedContentHoverPartOrStatusBar,\n\t\t\t\tindex: number,\n\t\t\t) => {\n\t\t\t\tconst element = renderedPart.hoverElement;\n\t\t\t\telement.tabIndex = 0;\n\t\t\t\tdisposables.add(\n\t\t\t\t\tdom.addDisposableListener(\n\t\t\t\t\t\telement,\n\t\t\t\t\t\tdom.EventType.FOCUS_IN,\n\t\t\t\t\t\t(event: Event) => {\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tthis._focusedHoverPartIndex = index;\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tdisposables.add(\n\t\t\t\t\tdom.addDisposableListener(\n\t\t\t\t\t\telement,\n\t\t\t\t\t\tdom.EventType.FOCUS_OUT,\n\t\t\t\t\t\t(event: Event) => {\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tthis._focusedHoverPartIndex = -1;\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\t\treturn disposables;\n\t}\n\n\tprivate _updateMarkdownAndColorParticipantInfo(\n\t\tparticipants: IEditorHoverParticipant<IHoverPart>[],\n\t) {\n\t\tconst markdownHoverParticipant = participants.find((p) => {\n\t\t\treturn (\n\t\t\t\tp instanceof MarkdownHoverParticipant &&\n\t\t\t\t!(p instanceof InlayHintsHover)\n\t\t\t);\n\t\t});\n\t\tif (markdownHoverParticipant) {\n\t\t\tthis._markdownHoverParticipant =\n\t\t\t\tmarkdownHoverParticipant as MarkdownHoverParticipant;\n\t\t}\n\t\tthis._colorHoverParticipant = participants.find(\n\t\t\t(p) => p instanceof HoverColorPickerParticipant,\n\t\t);\n\t}\n\n\tpublic focusHoverPartWithIndex(index: number): void {\n\t\tif (index < 0 || index >= this._renderedParts.length) {\n\t\t\treturn;\n\t\t}\n\t\tthis._renderedParts[index].hoverElement.focus();\n\t}\n\n\tpublic getAccessibleContent(): string {\n\t\tconst content: string[] = [];\n\t\tfor (let i = 0; i < this._renderedParts.length; i++) {\n\t\t\tcontent.push(this.getAccessibleHoverContentAtIndex(i));\n\t\t}\n\t\treturn content.join(\"\\n\\n\");\n\t}\n\n\tpublic getAccessibleHoverContentAtIndex(index: number): string {\n\t\tconst renderedPart = this._renderedParts[index];\n\t\tif (!renderedPart) {\n\t\t\treturn \"\";\n\t\t}\n\t\tif (renderedPart.type === \"statusBar\") {\n\t\t\tconst statusBarDescription = [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"hoverAccessibilityStatusBar\",\n\t\t\t\t\t\"This is a hover status bar.\",\n\t\t\t\t),\n\t\t\t];\n\t\t\tfor (const action of renderedPart.actions) {\n\t\t\t\tconst keybinding = action.actionKeybindingLabel;\n\t\t\t\tif (keybinding) {\n\t\t\t\t\tstatusBarDescription.push(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"hoverAccessibilityStatusBarActionWithKeybinding\",\n\t\t\t\t\t\t\t\"It has an action with label {0} and keybinding {1}.\",\n\t\t\t\t\t\t\taction.actionLabel,\n\t\t\t\t\t\t\tkeybinding,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tstatusBarDescription.push(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"hoverAccessibilityStatusBarActionWithoutKeybinding\",\n\t\t\t\t\t\t\t\"It has an action with label {0}.\",\n\t\t\t\t\t\t\taction.actionLabel,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn statusBarDescription.join(\"\\n\");\n\t\t}\n\t\treturn renderedPart.participant.getAccessibleContent(\n\t\t\trenderedPart.hoverPart,\n\t\t);\n\t}\n\n\tpublic async updateHoverVerbosityLevel(\n\t\taction: HoverVerbosityAction,\n\t\tindex: number,\n\t\tfocus?: boolean,\n\t): Promise<void> {\n\t\tif (!this._markdownHoverParticipant) {\n\t\t\treturn;\n\t\t}\n\t\tconst normalizedMarkdownHoverIndex =\n\t\t\tthis._normalizedIndexToMarkdownHoverIndexRange(\n\t\t\t\tthis._markdownHoverParticipant,\n\t\t\t\tindex,\n\t\t\t);\n\t\tif (normalizedMarkdownHoverIndex === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst renderedPart =\n\t\t\tawait this._markdownHoverParticipant.updateMarkdownHoverVerbosityLevel(\n\t\t\t\taction,\n\t\t\t\tnormalizedMarkdownHoverIndex,\n\t\t\t\tfocus,\n\t\t\t);\n\t\tif (!renderedPart) {\n\t\t\treturn;\n\t\t}\n\t\tthis._renderedParts[index] = {\n\t\t\ttype: \"hoverPart\",\n\t\t\tparticipant: this._markdownHoverParticipant,\n\t\t\thoverPart: renderedPart.hoverPart,\n\t\t\thoverElement: renderedPart.hoverElement,\n\t\t};\n\t\tthis._context.onContentsChanged();\n\t}\n\n\tpublic doesHoverAtIndexSupportVerbosityAction(\n\t\tindex: number,\n\t\taction: HoverVerbosityAction,\n\t): boolean {\n\t\tif (!this._markdownHoverParticipant) {\n\t\t\treturn false;\n\t\t}\n\t\tconst normalizedMarkdownHoverIndex =\n\t\t\tthis._normalizedIndexToMarkdownHoverIndexRange(\n\t\t\t\tthis._markdownHoverParticipant,\n\t\t\t\tindex,\n\t\t\t);\n\t\tif (normalizedMarkdownHoverIndex === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._markdownHoverParticipant.doesMarkdownHoverAtIndexSupportVerbosityAction(\n\t\t\tnormalizedMarkdownHoverIndex,\n\t\t\taction,\n\t\t);\n\t}\n\n\tpublic isColorPickerVisible(): boolean {\n\t\treturn this._colorHoverParticipant?.isColorPickerVisible() ?? false;\n\t}\n\n\tprivate _normalizedIndexToMarkdownHoverIndexRange(\n\t\tmarkdownHoverParticipant: MarkdownHoverParticipant,\n\t\tindex: number,\n\t): number | undefined {\n\t\tconst renderedPart = this._renderedParts[index];\n\t\tif (!renderedPart || renderedPart.type !== \"hoverPart\") {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst isHoverPartMarkdownHover =\n\t\t\trenderedPart.participant === markdownHoverParticipant;\n\t\tif (!isHoverPartMarkdownHover) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst firstIndexOfMarkdownHovers = this._renderedParts.findIndex(\n\t\t\t(renderedPart) =>\n\t\t\t\trenderedPart.type === \"hoverPart\" &&\n\t\t\t\trenderedPart.participant === markdownHoverParticipant,\n\t\t);\n\t\tif (firstIndexOfMarkdownHovers === -1) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\t\treturn index - firstIndexOfMarkdownHovers;\n\t}\n\n\tpublic get domNode(): DocumentFragment {\n\t\treturn this._fragment;\n\t}\n\n\tpublic get domNodeHasChildren(): boolean {\n\t\treturn this._fragment.hasChildNodes();\n\t}\n\n\tpublic get focusedHoverPartIndex(): number {\n\t\treturn this._focusedHoverPartIndex;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["renderedPart"]
}
