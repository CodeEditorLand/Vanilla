{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/contentHoverComputer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IActiveCodeEditor, ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { IModelDecoration } from '../../../common/model.js';\nimport { HoverStartSource, IHoverComputer } from './hoverOperation.js';\nimport { HoverAnchor, HoverAnchorType, IEditorHoverParticipant, IHoverPart } from './hoverTypes.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\n\nexport interface ContentHoverComputerOptions {\n\tshouldFocus: boolean;\n\tanchor: HoverAnchor;\n\tsource: HoverStartSource;\n\tinsistOnKeepingHoverVisible: boolean;\n}\n\nexport class ContentHoverComputer implements IHoverComputer<ContentHoverComputerOptions, IHoverPart> {\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _participants: readonly IEditorHoverParticipant[]\n\t) {\n\t}\n\n\tprivate static _getLineDecorations(editor: IActiveCodeEditor, anchor: HoverAnchor): IModelDecoration[] {\n\t\tif (anchor.type !== HoverAnchorType.Range && !anchor.supportsMarkerHover) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst model = editor.getModel();\n\t\tconst lineNumber = anchor.range.startLineNumber;\n\n\t\tif (lineNumber > model.getLineCount()) {\n\t\t\t// invalid line\n\t\t\treturn [];\n\t\t}\n\n\t\tconst maxColumn = model.getLineMaxColumn(lineNumber);\n\n\t\treturn editor.getLineDecorations(lineNumber).filter((d) => {\n\t\t\tif (d.options.isWholeLine) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n\t\t\tconst endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n\n\t\t\tif (d.options.showIfCollapsed) {\n\t\t\t\t// Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n\t\t\t\tif (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tpublic computeAsync(options: ContentHoverComputerOptions, token: CancellationToken): AsyncIterableObject<IHoverPart> {\n\t\tconst anchor = options.anchor;\n\n\t\tif (!this._editor.hasModel() || !anchor) {\n\t\t\treturn AsyncIterableObject.EMPTY;\n\t\t}\n\n\t\tconst lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n\n\t\treturn AsyncIterableObject.merge(\n\t\t\tthis._participants.map((participant) => {\n\t\t\t\tif (!participant.computeAsync) {\n\t\t\t\t\treturn AsyncIterableObject.EMPTY;\n\t\t\t\t}\n\t\t\t\treturn participant.computeAsync(anchor, lineDecorations, token);\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic computeSync(options: ContentHoverComputerOptions): IHoverPart[] {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst anchor = options.anchor;\n\t\tconst lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n\n\t\tlet result: IHoverPart[] = [];\n\t\tfor (const participant of this._participants) {\n\t\t\tresult = result.concat(participant.computeSync(anchor, lineDecorations));\n\t\t}\n\n\t\treturn coalesce(result);\n\t}\n}\n\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC,SAAS,mBAAmB,mBAAmB;AAC/C,SAAS,wBAAwB;AACjC,SAAS,kBAAkB,sBAAsB;AACjD,SAAS,aAAa,iBAAiB,yBAAyB,kBAAkB;AAClF,SAAS,2BAA2B;AAS7B,MAAM,qBAAwF;AAAA,EAEpG,YACkB,SACA,eAChB;AAFgB;AACA;AAAA,EAElB;AAAA,EA1BD,OAoBqG;AAAA;AAAA;AAAA,EAQpG,OAAe,oBAAoB,QAA2B,QAAyC;AACtG,QAAI,OAAO,SAAS,gBAAgB,SAAS,CAAC,OAAO,qBAAqB;AACzE,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,QAAQ,OAAO,SAAS;AAC9B,UAAM,aAAa,OAAO,MAAM;AAEhC,QAAI,aAAa,MAAM,aAAa,GAAG;AAEtC,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,YAAY,MAAM,iBAAiB,UAAU;AAEnD,WAAO,OAAO,mBAAmB,UAAU,EAAE,OAAO,CAAC,MAAM;AAC1D,UAAI,EAAE,QAAQ,aAAa;AAC1B,eAAO;AAAA,MACR;AAEA,YAAM,cAAe,EAAE,MAAM,oBAAoB,aAAc,EAAE,MAAM,cAAc;AACrF,YAAM,YAAa,EAAE,MAAM,kBAAkB,aAAc,EAAE,MAAM,YAAY;AAE/E,UAAI,EAAE,QAAQ,iBAAiB;AAE9B,YAAI,cAAc,OAAO,MAAM,cAAc,KAAK,OAAO,MAAM,YAAY,IAAI,WAAW;AACzF,iBAAO;AAAA,QACR;AAAA,MACD,OAAO;AACN,YAAI,cAAc,OAAO,MAAM,eAAe,OAAO,MAAM,YAAY,WAAW;AACjF,iBAAO;AAAA,QACR;AAAA,MACD;AAEA,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AAAA,EAEO,aAAa,SAAsC,OAA2D;AACpH,UAAM,SAAS,QAAQ;AAEvB,QAAI,CAAC,KAAK,QAAQ,SAAS,KAAK,CAAC,QAAQ;AACxC,aAAO,oBAAoB;AAAA,IAC5B;AAEA,UAAM,kBAAkB,qBAAqB,oBAAoB,KAAK,SAAS,MAAM;AAErF,WAAO,oBAAoB;AAAA,MAC1B,KAAK,cAAc,IAAI,CAAC,gBAAgB;AACvC,YAAI,CAAC,YAAY,cAAc;AAC9B,iBAAO,oBAAoB;AAAA,QAC5B;AACA,eAAO,YAAY,aAAa,QAAQ,iBAAiB,KAAK;AAAA,MAC/D,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEO,YAAY,SAAoD;AACtE,QAAI,CAAC,KAAK,QAAQ,SAAS,GAAG;AAC7B,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,SAAS,QAAQ;AACvB,UAAM,kBAAkB,qBAAqB,oBAAoB,KAAK,SAAS,MAAM;AAErF,QAAI,SAAuB,CAAC;AAC5B,eAAW,eAAe,KAAK,eAAe;AAC7C,eAAS,OAAO,OAAO,YAAY,YAAY,QAAQ,eAAe,CAAC;AAAA,IACxE;AAEA,WAAO,SAAS,MAAM;AAAA,EACvB;AACD;",
  "names": []
}
