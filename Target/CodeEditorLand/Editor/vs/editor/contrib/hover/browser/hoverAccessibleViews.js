import{localize as a}from"../../../../nls.js";import{EditorContextKeys as p}from"../../../common/editorContextKeys.js";import{ContentHoverController as v}from"./contentHoverController.js";import{AccessibleViewType as c,AccessibleViewProviderId as u,AccessibleContentProvider as g}from"../../../../platform/accessibility/browser/accessibleView.js";import{IContextViewService as V}from"../../../../platform/contextview/browser/contextView.js";import{IHoverService as E}from"../../../../platform/hover/browser/hover.js";import{IInstantiationService as b}from"../../../../platform/instantiation/common/instantiation.js";import{HoverVerbosityAction as n}from"../../../common/languages.js";import{DECREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID as w,DECREASE_HOVER_VERBOSITY_ACTION_ID as h,INCREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID as x,INCREASE_HOVER_VERBOSITY_ACTION_ID as C}from"./hoverActionIds.js";import{ICodeEditorService as I}from"../../../browser/services/codeEditorService.js";import{Action as H}from"../../../../base/common/actions.js";import{ThemeIcon as S}from"../../../../base/common/themables.js";import{Codicon as m}from"../../../../base/common/codicons.js";import{Emitter as O}from"../../../../base/common/event.js";import{Disposable as P}from"../../../../base/common/lifecycle.js";import{IKeybindingService as D}from"../../../../platform/keybinding/common/keybinding.js";import{labelForHoverVerbosityAction as F}from"./markdownHoverParticipant.js";var l;(e=>(e.increaseVerbosity=a("increaseVerbosity","- The focused hover part verbosity level can be increased with the Increase Hover Verbosity command.",`<keybinding:${C}>`),e.decreaseVerbosity=a("decreaseVerbosity","- The focused hover part verbosity level can be decreased with the Decrease Hover Verbosity command.",`<keybinding:${h}>`)))(l||={});class ce{type=c.View;priority=95;name="hover";when=p.hoverFocused;getProvider(i){const e=i.get(I),o=e.getActiveCodeEditor()||e.getFocusedCodeEditor();if(!o)throw new Error("No active or focused code editor");const t=v.get(o);if(!t)return;const r=i.get(D);return i.get(b).createInstance(T,r,o,t)}}class de{priority=100;name="hover";type=c.Help;when=p.hoverVisible;getProvider(i){const e=i.get(I),o=e.getActiveCodeEditor()||e.getFocusedCodeEditor();if(!o)throw new Error("No active or focused code editor");const t=v.get(o);if(t)return i.get(b).createInstance(f,t)}}class A extends P{constructor(e){super();this._hoverController=e}id=u.Hover;verbositySettingKey="accessibility.verbosity.hover";_onDidChangeContent=this._register(new O);onDidChangeContent=this._onDidChangeContent.event;_focusedHoverPartIndex=-1;onOpen(){this._hoverController&&(this._hoverController.shouldKeepOpenOnEditorMouseMoveOrLeave=!0,this._focusedHoverPartIndex=this._hoverController.focusedHoverPartIndex(),this._register(this._hoverController.onHoverContentsChanged(()=>{this._onDidChangeContent.fire()})))}onClose(){this._hoverController&&(this._focusedHoverPartIndex===-1?this._hoverController.focus():this._hoverController.focusHoverPartWithIndex(this._focusedHoverPartIndex),this._focusedHoverPartIndex=-1,this._hoverController.shouldKeepOpenOnEditorMouseMoveOrLeave=!1)}provideContentAtIndex(e,o){if(e!==-1){const t=this._hoverController.getAccessibleWidgetContentAtIndex(e);if(t===void 0)return"";const r=[];return o&&r.push(...this._descriptionsOfVerbosityActionsForIndex(e)),r.push(t),r.join(`
`)}else{const t=this._hoverController.getAccessibleWidgetContent();if(t===void 0)return"";const r=[];return r.push(t),r.join(`
`)}}_descriptionsOfVerbosityActionsForIndex(e){const o=[],t=this._descriptionOfVerbosityActionForIndex(n.Increase,e);t!==void 0&&o.push(t);const r=this._descriptionOfVerbosityActionForIndex(n.Decrease,e);return r!==void 0&&o.push(r),o}_descriptionOfVerbosityActionForIndex(e,o){if(this._hoverController.doesHoverAtIndexSupportVerbosityAction(o,e))switch(e){case n.Increase:return l.increaseVerbosity;case n.Decrease:return l.decreaseVerbosity}}}class f extends A{options={type:c.Help};constructor(i){super(i)}provideContent(){return this.provideContentAtIndex(this._focusedHoverPartIndex,!0)}}class T extends A{constructor(e,o,t){super(t);this._keybindingService=e;this._editor=o;this._initializeOptions(this._editor,t)}options={type:c.View};provideContent(){return this.provideContentAtIndex(this._focusedHoverPartIndex,!1)}get actions(){const e=[];return e.push(this._getActionFor(this._editor,n.Increase)),e.push(this._getActionFor(this._editor,n.Decrease)),e}_getActionFor(e,o){let t,r,d;switch(o){case n.Increase:t=C,r=x,d=m.add;break;case n.Decrease:t=h,r=w,d=m.remove;break}const y=F(this._keybindingService,o),_=this._hoverController.doesHoverAtIndexSupportVerbosityAction(this._focusedHoverPartIndex,o);return new H(r,y,S.asClassName(d),_,()=>{e.getAction(t)?.run({index:this._focusedHoverPartIndex,focus:!1})})}_initializeOptions(e,o){const t=this._register(new f(o));this.options.language=e.getModel()?.getLanguageId(),this.options.customHelp=()=>t.provideContentAtIndex(this._focusedHoverPartIndex,!0)}}class le{type=c.View;priority=90;name="extension-hover";getProvider(i){const o=i.get(V).getContextViewElement(),t=o?.textContent??void 0,r=i.get(E);if(!(o.classList.contains("accessible-view-container")||!t))return new g(u.Hover,{language:"typescript",type:c.View},()=>t,()=>{r.showAndFocusLastHover()},"accessibility.verbosity.hover")}}export{le as ExtHoverAccessibleView,de as HoverAccessibilityHelp,f as HoverAccessibilityHelpProvider,ce as HoverAccessibleView,T as HoverAccessibleViewProvider};
