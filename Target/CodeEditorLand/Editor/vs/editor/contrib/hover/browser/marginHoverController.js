var _=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var v=(s,i,e,t)=>{for(var o=t>1?void 0:t?g(i,e):i,d=s.length-1,h;d>=0;d--)(h=s[d])&&(o=(t?h(i,e,o):h(o))||o);return t&&o&&_(i,e,o),o},u=(s,i)=>(e,t)=>i(e,t,s);import"../../../../../vs/base/browser/keyboardEvent.js";import{RunOnceScheduler as p}from"../../../../../vs/base/common/async.js";import{KeyCode as n}from"../../../../../vs/base/common/keyCodes.js";import{Disposable as c,DisposableStore as M}from"../../../../../vs/base/common/lifecycle.js";import"../../../../../vs/editor/browser/editorBrowser.js";import{EditorOption as l}from"../../../../../vs/editor/common/config/editorOptions.js";import"../../../../../vs/editor/common/editorCommon.js";import"../../../../../vs/editor/contrib/hover/browser/hoverTypes.js";import{isMousePositionWithinElement as E}from"../../../../../vs/editor/contrib/hover/browser/hoverUtils.js";import{IInstantiationService as S}from"../../../../../vs/platform/instantiation/common/instantiation.js";import"vs/css!./hover";import{MarginHoverWidget as y}from"../../../../../vs/editor/contrib/hover/browser/marginHoverWidget.js";const a=!1;let r=class extends c{constructor(e,t){super();this._editor=e;this._instantiationService=t;this._reactToEditorMouseMoveRunner=this._register(new p(()=>this._reactToEditorMouseMove(this._mouseMoveEvent),0)),this._hookListeners(),this._register(this._editor.onDidChangeConfiguration(o=>{o.hasChanged(l.hover)&&(this._unhookListeners(),this._hookListeners())}))}static ID="editor.contrib.marginHover";shouldKeepOpenOnEditorMouseMoveOrLeave=!1;_listenersStore=new M;_glyphWidget;_mouseMoveEvent;_reactToEditorMouseMoveRunner;_hoverSettings;_hoverState={mouseDown:!1};static get(e){return e.getContribution(r.ID)}_hookListeners(){const e=this._editor.getOption(l.hover);this._hoverSettings={enabled:e.enabled,sticky:e.sticky,hidingDelay:e.hidingDelay},e.enabled?(this._listenersStore.add(this._editor.onMouseDown(t=>this._onEditorMouseDown(t))),this._listenersStore.add(this._editor.onMouseUp(()=>this._onEditorMouseUp())),this._listenersStore.add(this._editor.onMouseMove(t=>this._onEditorMouseMove(t))),this._listenersStore.add(this._editor.onKeyDown(t=>this._onKeyDown(t)))):(this._listenersStore.add(this._editor.onMouseMove(t=>this._onEditorMouseMove(t))),this._listenersStore.add(this._editor.onKeyDown(t=>this._onKeyDown(t)))),this._listenersStore.add(this._editor.onMouseLeave(t=>this._onEditorMouseLeave(t))),this._listenersStore.add(this._editor.onDidChangeModel(()=>{this._cancelScheduler(),this._hideWidgets()})),this._listenersStore.add(this._editor.onDidChangeModelContent(()=>this._cancelScheduler())),this._listenersStore.add(this._editor.onDidScrollChange(t=>this._onEditorScrollChanged(t)))}_unhookListeners(){this._listenersStore.clear()}_cancelScheduler(){this._mouseMoveEvent=void 0,this._reactToEditorMouseMoveRunner.cancel()}_onEditorScrollChanged(e){(e.scrollTopChanged||e.scrollLeftChanged)&&this._hideWidgets()}_onEditorMouseDown(e){this._hoverState.mouseDown=!0,!this._isMouseOnMarginHoverWidget(e)&&this._hideWidgets()}_isMouseOnMarginHoverWidget(e){const t=this._glyphWidget?.getDomNode();return t?E(t,e.event.posx,e.event.posy):!1}_onEditorMouseUp(){this._hoverState.mouseDown=!1}_onEditorMouseLeave(e){this.shouldKeepOpenOnEditorMouseMoveOrLeave||(this._cancelScheduler(),this._isMouseOnMarginHoverWidget(e))||a||this._hideWidgets()}_shouldNotRecomputeCurrentHoverWidget(e){const t=this._hoverSettings.sticky,o=this._isMouseOnMarginHoverWidget(e);return t&&o}_onEditorMouseMove(e){if(this.shouldKeepOpenOnEditorMouseMoveOrLeave)return;if(this._mouseMoveEvent=e,this._shouldNotRecomputeCurrentHoverWidget(e)){this._reactToEditorMouseMoveRunner.cancel();return}this._reactToEditorMouseMove(e)}_reactToEditorMouseMove(e){!e||this._tryShowHoverWidget(e)||a||this._hideWidgets()}_tryShowHoverWidget(e){return this._getOrCreateGlyphWidget().showsOrWillShow(e)}_onKeyDown(e){this._editor.hasModel()&&(e.keyCode===n.Ctrl||e.keyCode===n.Alt||e.keyCode===n.Meta||e.keyCode===n.Shift||this._hideWidgets())}_hideWidgets(){a||this._glyphWidget?.hide()}_getOrCreateGlyphWidget(){return this._glyphWidget||(this._glyphWidget=this._instantiationService.createInstance(y,this._editor)),this._glyphWidget}hideContentHover(){this._hideWidgets()}dispose(){super.dispose(),this._unhookListeners(),this._listenersStore.dispose(),this._glyphWidget?.dispose()}};r=v([u(1,S)],r);export{r as MarginHoverController};
