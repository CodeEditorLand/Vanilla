{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/hoverAccessibleViews.ts"],
  "sourcesContent": ["import { Action, type IAction } from \"../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tAccessibleContentProvider,\n\tAccessibleViewProviderId,\n\tAccessibleViewType,\n\ttype IAccessibleViewContentProvider,\n\ttype IAccessibleViewOptions,\n} from \"../../../../platform/accessibility/browser/accessibleView.js\";\nimport type { IAccessibleViewImplentation } from \"../../../../platform/accessibility/browser/accessibleViewRegistry.js\";\nimport { IContextViewService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../../browser/services/codeEditorService.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport { HoverVerbosityAction } from \"../../../common/languages.js\";\nimport { ContentHoverController } from \"./contentHoverController.js\";\nimport {\n\tDECREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID,\n\tDECREASE_HOVER_VERBOSITY_ACTION_ID,\n\tINCREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID,\n\tINCREASE_HOVER_VERBOSITY_ACTION_ID,\n} from \"./hoverActionIds.js\";\nimport { labelForHoverVerbosityAction } from \"./markdownHoverParticipant.js\";\n\nnamespace HoverAccessibilityHelpNLS {\n\texport const increaseVerbosity = localize(\n\t\t\"increaseVerbosity\",\n\t\t\"- The focused hover part verbosity level can be increased with the Increase Hover Verbosity command.\",\n\t\t`<keybinding:${INCREASE_HOVER_VERBOSITY_ACTION_ID}>`,\n\t);\n\texport const decreaseVerbosity = localize(\n\t\t\"decreaseVerbosity\",\n\t\t\"- The focused hover part verbosity level can be decreased with the Decrease Hover Verbosity command.\",\n\t\t`<keybinding:${DECREASE_HOVER_VERBOSITY_ACTION_ID}>`,\n\t);\n}\n\nexport class HoverAccessibleView implements IAccessibleViewImplentation {\n\tpublic readonly type = AccessibleViewType.View;\n\tpublic readonly priority = 95;\n\tpublic readonly name = \"hover\";\n\tpublic readonly when = EditorContextKeys.hoverFocused;\n\n\tgetProvider(\n\t\taccessor: ServicesAccessor,\n\t): AccessibleContentProvider | undefined {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst codeEditor =\n\t\t\tcodeEditorService.getActiveCodeEditor() ||\n\t\t\tcodeEditorService.getFocusedCodeEditor();\n\t\tif (!codeEditor) {\n\t\t\tthrow new Error(\"No active or focused code editor\");\n\t\t}\n\t\tconst hoverController = ContentHoverController.get(codeEditor);\n\t\tif (!hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\treturn accessor\n\t\t\t.get(IInstantiationService)\n\t\t\t.createInstance(\n\t\t\t\tHoverAccessibleViewProvider,\n\t\t\t\tkeybindingService,\n\t\t\t\tcodeEditor,\n\t\t\t\thoverController,\n\t\t\t);\n\t}\n}\n\nexport class HoverAccessibilityHelp implements IAccessibleViewImplentation {\n\tpublic readonly priority = 100;\n\tpublic readonly name = \"hover\";\n\tpublic readonly type = AccessibleViewType.Help;\n\tpublic readonly when = EditorContextKeys.hoverVisible;\n\n\tgetProvider(\n\t\taccessor: ServicesAccessor,\n\t): AccessibleContentProvider | undefined {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst codeEditor =\n\t\t\tcodeEditorService.getActiveCodeEditor() ||\n\t\t\tcodeEditorService.getFocusedCodeEditor();\n\t\tif (!codeEditor) {\n\t\t\tthrow new Error(\"No active or focused code editor\");\n\t\t}\n\t\tconst hoverController = ContentHoverController.get(codeEditor);\n\t\tif (!hoverController) {\n\t\t\treturn;\n\t\t}\n\t\treturn accessor\n\t\t\t.get(IInstantiationService)\n\t\t\t.createInstance(HoverAccessibilityHelpProvider, hoverController);\n\t}\n}\n\nabstract class BaseHoverAccessibleViewProvider\n\textends Disposable\n\timplements IAccessibleViewContentProvider\n{\n\tabstract provideContent(): string;\n\tabstract options: IAccessibleViewOptions;\n\n\tpublic readonly id = AccessibleViewProviderId.Hover;\n\tpublic readonly verbositySettingKey = \"accessibility.verbosity.hover\";\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\tpublic readonly onDidChangeContent: Event<void> =\n\t\tthis._onDidChangeContent.event;\n\n\tprotected _focusedHoverPartIndex = -1;\n\n\tconstructor(protected readonly _hoverController: ContentHoverController) {\n\t\tsuper();\n\t}\n\n\tpublic onOpen(): void {\n\t\tif (!this._hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tthis._hoverController.shouldKeepOpenOnEditorMouseMoveOrLeave = true;\n\t\tthis._focusedHoverPartIndex =\n\t\t\tthis._hoverController.focusedHoverPartIndex();\n\t\tthis._register(\n\t\t\tthis._hoverController.onHoverContentsChanged(() => {\n\t\t\t\tthis._onDidChangeContent.fire();\n\t\t\t}),\n\t\t);\n\t}\n\n\tpublic onClose(): void {\n\t\tif (!this._hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._focusedHoverPartIndex === -1) {\n\t\t\tthis._hoverController.focus();\n\t\t} else {\n\t\t\tthis._hoverController.focusHoverPartWithIndex(\n\t\t\t\tthis._focusedHoverPartIndex,\n\t\t\t);\n\t\t}\n\t\tthis._focusedHoverPartIndex = -1;\n\t\tthis._hoverController.shouldKeepOpenOnEditorMouseMoveOrLeave = false;\n\t}\n\n\tprovideContentAtIndex(\n\t\tfocusedHoverIndex: number,\n\t\tincludeVerbosityActions: boolean,\n\t): string {\n\t\tif (focusedHoverIndex !== -1) {\n\t\t\tconst accessibleContent =\n\t\t\t\tthis._hoverController.getAccessibleWidgetContentAtIndex(\n\t\t\t\t\tfocusedHoverIndex,\n\t\t\t\t);\n\t\t\tif (accessibleContent === undefined) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tconst contents: string[] = [];\n\t\t\tif (includeVerbosityActions) {\n\t\t\t\tcontents.push(\n\t\t\t\t\t...this._descriptionsOfVerbosityActionsForIndex(\n\t\t\t\t\t\tfocusedHoverIndex,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tcontents.push(accessibleContent);\n\t\t\treturn contents.join(\"\\n\");\n\t\t} else {\n\t\t\tconst accessibleContent =\n\t\t\t\tthis._hoverController.getAccessibleWidgetContent();\n\t\t\tif (accessibleContent === undefined) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tconst contents: string[] = [];\n\t\t\tcontents.push(accessibleContent);\n\t\t\treturn contents.join(\"\\n\");\n\t\t}\n\t}\n\n\tprivate _descriptionsOfVerbosityActionsForIndex(index: number): string[] {\n\t\tconst content: string[] = [];\n\t\tconst descriptionForIncreaseAction =\n\t\t\tthis._descriptionOfVerbosityActionForIndex(\n\t\t\t\tHoverVerbosityAction.Increase,\n\t\t\t\tindex,\n\t\t\t);\n\t\tif (descriptionForIncreaseAction !== undefined) {\n\t\t\tcontent.push(descriptionForIncreaseAction);\n\t\t}\n\t\tconst descriptionForDecreaseAction =\n\t\t\tthis._descriptionOfVerbosityActionForIndex(\n\t\t\t\tHoverVerbosityAction.Decrease,\n\t\t\t\tindex,\n\t\t\t);\n\t\tif (descriptionForDecreaseAction !== undefined) {\n\t\t\tcontent.push(descriptionForDecreaseAction);\n\t\t}\n\t\treturn content;\n\t}\n\n\tprivate _descriptionOfVerbosityActionForIndex(\n\t\taction: HoverVerbosityAction,\n\t\tindex: number,\n\t): string | undefined {\n\t\tconst isActionSupported =\n\t\t\tthis._hoverController.doesHoverAtIndexSupportVerbosityAction(\n\t\t\t\tindex,\n\t\t\t\taction,\n\t\t\t);\n\t\tif (!isActionSupported) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (action) {\n\t\t\tcase HoverVerbosityAction.Increase:\n\t\t\t\treturn HoverAccessibilityHelpNLS.increaseVerbosity;\n\t\t\tcase HoverVerbosityAction.Decrease:\n\t\t\t\treturn HoverAccessibilityHelpNLS.decreaseVerbosity;\n\t\t}\n\t}\n}\n\nexport class HoverAccessibilityHelpProvider\n\textends BaseHoverAccessibleViewProvider\n\timplements IAccessibleViewContentProvider\n{\n\tpublic readonly options: IAccessibleViewOptions = {\n\t\ttype: AccessibleViewType.Help,\n\t};\n\n\tconstructor(hoverController: ContentHoverController) {\n\t\tsuper(hoverController);\n\t}\n\n\tprovideContent(): string {\n\t\treturn this.provideContentAtIndex(this._focusedHoverPartIndex, true);\n\t}\n}\n\nexport class HoverAccessibleViewProvider\n\textends BaseHoverAccessibleViewProvider\n\timplements IAccessibleViewContentProvider\n{\n\tpublic readonly options: IAccessibleViewOptions = {\n\t\ttype: AccessibleViewType.View,\n\t};\n\n\tconstructor(\n\t\tprivate readonly _keybindingService: IKeybindingService,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\thoverController: ContentHoverController,\n\t) {\n\t\tsuper(hoverController);\n\t\tthis._initializeOptions(this._editor, hoverController);\n\t}\n\n\tpublic provideContent(): string {\n\t\treturn this.provideContentAtIndex(this._focusedHoverPartIndex, false);\n\t}\n\n\tpublic get actions(): IAction[] {\n\t\tconst actions: IAction[] = [];\n\t\tactions.push(\n\t\t\tthis._getActionFor(this._editor, HoverVerbosityAction.Increase),\n\t\t);\n\t\tactions.push(\n\t\t\tthis._getActionFor(this._editor, HoverVerbosityAction.Decrease),\n\t\t);\n\t\treturn actions;\n\t}\n\n\tprivate _getActionFor(\n\t\teditor: ICodeEditor,\n\t\taction: HoverVerbosityAction,\n\t): IAction {\n\t\tlet actionId: string;\n\t\tlet accessibleActionId: string;\n\t\tlet actionCodicon: ThemeIcon;\n\t\tswitch (action) {\n\t\t\tcase HoverVerbosityAction.Increase:\n\t\t\t\tactionId = INCREASE_HOVER_VERBOSITY_ACTION_ID;\n\t\t\t\taccessibleActionId =\n\t\t\t\t\tINCREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID;\n\t\t\t\tactionCodicon = Codicon.add;\n\t\t\t\tbreak;\n\t\t\tcase HoverVerbosityAction.Decrease:\n\t\t\t\tactionId = DECREASE_HOVER_VERBOSITY_ACTION_ID;\n\t\t\t\taccessibleActionId =\n\t\t\t\t\tDECREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID;\n\t\t\t\tactionCodicon = Codicon.remove;\n\t\t\t\tbreak;\n\t\t}\n\t\tconst actionLabel = labelForHoverVerbosityAction(\n\t\t\tthis._keybindingService,\n\t\t\taction,\n\t\t);\n\t\tconst actionEnabled =\n\t\t\tthis._hoverController.doesHoverAtIndexSupportVerbosityAction(\n\t\t\t\tthis._focusedHoverPartIndex,\n\t\t\t\taction,\n\t\t\t);\n\t\treturn new Action(\n\t\t\taccessibleActionId,\n\t\t\tactionLabel,\n\t\t\tThemeIcon.asClassName(actionCodicon),\n\t\t\tactionEnabled,\n\t\t\t() => {\n\t\t\t\teditor\n\t\t\t\t\t.getAction(actionId)\n\t\t\t\t\t?.run({ index: this._focusedHoverPartIndex, focus: false });\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate _initializeOptions(\n\t\teditor: ICodeEditor,\n\t\thoverController: ContentHoverController,\n\t): void {\n\t\tconst helpProvider = this._register(\n\t\t\tnew HoverAccessibilityHelpProvider(hoverController),\n\t\t);\n\t\tthis.options.language = editor.getModel()?.getLanguageId();\n\t\tthis.options.customHelp = () => {\n\t\t\treturn helpProvider.provideContentAtIndex(\n\t\t\t\tthis._focusedHoverPartIndex,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t};\n\t}\n}\n\nexport class ExtHoverAccessibleView implements IAccessibleViewImplentation {\n\tpublic readonly type = AccessibleViewType.View;\n\tpublic readonly priority = 90;\n\tpublic readonly name = \"extension-hover\";\n\n\tgetProvider(\n\t\taccessor: ServicesAccessor,\n\t): AccessibleContentProvider | undefined {\n\t\tconst contextViewService = accessor.get(IContextViewService);\n\t\tconst contextViewElement = contextViewService.getContextViewElement();\n\t\tconst extensionHoverContent =\n\t\t\tcontextViewElement?.textContent ?? undefined;\n\t\tconst hoverService = accessor.get(IHoverService);\n\n\t\tif (\n\t\t\tcontextViewElement.classList.contains(\n\t\t\t\t\"accessible-view-container\",\n\t\t\t) ||\n\t\t\t!extensionHoverContent\n\t\t) {\n\t\t\t// The accessible view, itself, uses the context view service to display the text. We don't want to read that.\n\t\t\treturn;\n\t\t}\n\t\treturn new AccessibleContentProvider(\n\t\t\tAccessibleViewProviderId.Hover,\n\t\t\t{ language: \"typescript\", type: AccessibleViewType.View },\n\t\t\t() => {\n\t\t\t\treturn extensionHoverContent;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thoverService.showAndFocusLastHover();\n\t\t\t},\n\t\t\t\"accessibility.verbosity.hover\",\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAAA,SAAS,cAA4B;AACrC,SAAS,eAAe;AACxB,SAAS,eAA2B;AACpC,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;AAK1B,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OAGM;AAEP,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B;AAAA,EACC;AAAA,OAEM;AACP,SAAS,0BAA0B;AAEnC,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,4BAA4B;AACrC,SAAS,8BAA8B;AACvC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,oCAAoC;AAE7C,IAAU;AAAA,CAAV,CAAUA,+BAAV;AACQ,EAAMA,2BAAA,oBAAoB;AAAA,IAChC;AAAA,IACA;AAAA,IACA,eAAe,kCAAkC;AAAA,EAClD;AACO,EAAMA,2BAAA,oBAAoB;AAAA,IAChC;AAAA,IACA;AAAA,IACA,eAAe,kCAAkC;AAAA,EAClD;AAAA,GAVS;AAaH,MAAM,oBAA2D;AAAA,EAnDxE,OAmDwE;AAAA;AAAA;AAAA,EACvD,OAAO,mBAAmB;AAAA,EAC1B,WAAW;AAAA,EACX,OAAO;AAAA,EACP,OAAO,kBAAkB;AAAA,EAEzC,YACC,UACwC;AACxC,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,aACL,kBAAkB,oBAAoB,KACtC,kBAAkB,qBAAqB;AACxC,QAAI,CAAC,YAAY;AAChB,YAAM,IAAI,MAAM,kCAAkC;AAAA,IACnD;AACA,UAAM,kBAAkB,uBAAuB,IAAI,UAAU;AAC7D,QAAI,CAAC,iBAAiB;AACrB;AAAA,IACD;AACA,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,WAAO,SACL,IAAI,qBAAqB,EACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACF;AACD;AAEO,MAAM,uBAA8D;AAAA,EAnF3E,OAmF2E;AAAA;AAAA;AAAA,EAC1D,WAAW;AAAA,EACX,OAAO;AAAA,EACP,OAAO,mBAAmB;AAAA,EAC1B,OAAO,kBAAkB;AAAA,EAEzC,YACC,UACwC;AACxC,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,aACL,kBAAkB,oBAAoB,KACtC,kBAAkB,qBAAqB;AACxC,QAAI,CAAC,YAAY;AAChB,YAAM,IAAI,MAAM,kCAAkC;AAAA,IACnD;AACA,UAAM,kBAAkB,uBAAuB,IAAI,UAAU;AAC7D,QAAI,CAAC,iBAAiB;AACrB;AAAA,IACD;AACA,WAAO,SACL,IAAI,qBAAqB,EACzB,eAAe,gCAAgC,eAAe;AAAA,EACjE;AACD;AAEA,MAAe,wCACN,WAET;AAAA,EAeC,YAA+B,kBAA0C;AACxE,UAAM;AADwB;AAAA,EAE/B;AAAA,EAjID,OAgHA;AAAA;AAAA;AAAA,EAIiB,KAAK,yBAAyB;AAAA,EAC9B,sBAAsB;AAAA,EAErB,sBAAqC,KAAK;AAAA,IAC1D,IAAI,QAAc;AAAA,EACnB;AAAA,EACgB,qBACf,KAAK,oBAAoB;AAAA,EAEhB,yBAAyB;AAAA,EAM5B,SAAe;AACrB,QAAI,CAAC,KAAK,kBAAkB;AAC3B;AAAA,IACD;AACA,SAAK,iBAAiB,yCAAyC;AAC/D,SAAK,yBACJ,KAAK,iBAAiB,sBAAsB;AAC7C,SAAK;AAAA,MACJ,KAAK,iBAAiB,uBAAuB,MAAM;AAClD,aAAK,oBAAoB,KAAK;AAAA,MAC/B,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEO,UAAgB;AACtB,QAAI,CAAC,KAAK,kBAAkB;AAC3B;AAAA,IACD;AACA,QAAI,KAAK,2BAA2B,IAAI;AACvC,WAAK,iBAAiB,MAAM;AAAA,IAC7B,OAAO;AACN,WAAK,iBAAiB;AAAA,QACrB,KAAK;AAAA,MACN;AAAA,IACD;AACA,SAAK,yBAAyB;AAC9B,SAAK,iBAAiB,yCAAyC;AAAA,EAChE;AAAA,EAEA,sBACC,mBACA,yBACS;AACT,QAAI,sBAAsB,IAAI;AAC7B,YAAM,oBACL,KAAK,iBAAiB;AAAA,QACrB;AAAA,MACD;AACD,UAAI,sBAAsB,QAAW;AACpC,eAAO;AAAA,MACR;AACA,YAAM,WAAqB,CAAC;AAC5B,UAAI,yBAAyB;AAC5B,iBAAS;AAAA,UACR,GAAG,KAAK;AAAA,YACP;AAAA,UACD;AAAA,QACD;AAAA,MACD;AACA,eAAS,KAAK,iBAAiB;AAC/B,aAAO,SAAS,KAAK,IAAI;AAAA,IAC1B,OAAO;AACN,YAAM,oBACL,KAAK,iBAAiB,2BAA2B;AAClD,UAAI,sBAAsB,QAAW;AACpC,eAAO;AAAA,MACR;AACA,YAAM,WAAqB,CAAC;AAC5B,eAAS,KAAK,iBAAiB;AAC/B,aAAO,SAAS,KAAK,IAAI;AAAA,IAC1B;AAAA,EACD;AAAA,EAEQ,wCAAwC,OAAyB;AACxE,UAAM,UAAoB,CAAC;AAC3B,UAAM,+BACL,KAAK;AAAA,MACJ,qBAAqB;AAAA,MACrB;AAAA,IACD;AACD,QAAI,iCAAiC,QAAW;AAC/C,cAAQ,KAAK,4BAA4B;AAAA,IAC1C;AACA,UAAM,+BACL,KAAK;AAAA,MACJ,qBAAqB;AAAA,MACrB;AAAA,IACD;AACD,QAAI,iCAAiC,QAAW;AAC/C,cAAQ,KAAK,4BAA4B;AAAA,IAC1C;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,sCACP,QACA,OACqB;AACrB,UAAM,oBACL,KAAK,iBAAiB;AAAA,MACrB;AAAA,MACA;AAAA,IACD;AACD,QAAI,CAAC,mBAAmB;AACvB;AAAA,IACD;AACA,YAAQ,QAAQ;AAAA,MACf,KAAK,qBAAqB;AACzB,eAAO,0BAA0B;AAAA,MAClC,KAAK,qBAAqB;AACzB,eAAO,0BAA0B;AAAA,IACnC;AAAA,EACD;AACD;AAEO,MAAM,uCACJ,gCAET;AAAA,EA/OA,OA+OA;AAAA;AAAA;AAAA,EACiB,UAAkC;AAAA,IACjD,MAAM,mBAAmB;AAAA,EAC1B;AAAA,EAEA,YAAY,iBAAyC;AACpD,UAAM,eAAe;AAAA,EACtB;AAAA,EAEA,iBAAyB;AACxB,WAAO,KAAK,sBAAsB,KAAK,wBAAwB,IAAI;AAAA,EACpE;AACD;AAEO,MAAM,oCACJ,gCAET;AAAA,EAKC,YACkB,oBACA,SACjB,iBACC;AACD,UAAM,eAAe;AAJJ;AACA;AAIjB,SAAK,mBAAmB,KAAK,SAAS,eAAe;AAAA,EACtD;AAAA,EA5QD,OAgQA;AAAA;AAAA;AAAA,EACiB,UAAkC;AAAA,IACjD,MAAM,mBAAmB;AAAA,EAC1B;AAAA,EAWO,iBAAyB;AAC/B,WAAO,KAAK,sBAAsB,KAAK,wBAAwB,KAAK;AAAA,EACrE;AAAA,EAEA,IAAW,UAAqB;AAC/B,UAAM,UAAqB,CAAC;AAC5B,YAAQ;AAAA,MACP,KAAK,cAAc,KAAK,SAAS,qBAAqB,QAAQ;AAAA,IAC/D;AACA,YAAQ;AAAA,MACP,KAAK,cAAc,KAAK,SAAS,qBAAqB,QAAQ;AAAA,IAC/D;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,cACP,QACA,QACU;AACV,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,YAAQ,QAAQ;AAAA,MACf,KAAK,qBAAqB;AACzB,mBAAW;AACX,6BACC;AACD,wBAAgB,QAAQ;AACxB;AAAA,MACD,KAAK,qBAAqB;AACzB,mBAAW;AACX,6BACC;AACD,wBAAgB,QAAQ;AACxB;AAAA,IACF;AACA,UAAM,cAAc;AAAA,MACnB,KAAK;AAAA,MACL;AAAA,IACD;AACA,UAAM,gBACL,KAAK,iBAAiB;AAAA,MACrB,KAAK;AAAA,MACL;AAAA,IACD;AACD,WAAO,IAAI;AAAA,MACV;AAAA,MACA;AAAA,MACA,UAAU,YAAY,aAAa;AAAA,MACnC;AAAA,MACA,MAAM;AACL,eACE,UAAU,QAAQ,GACjB,IAAI,EAAE,OAAO,KAAK,wBAAwB,OAAO,MAAM,CAAC;AAAA,MAC5D;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,mBACP,QACA,iBACO;AACP,UAAM,eAAe,KAAK;AAAA,MACzB,IAAI,+BAA+B,eAAe;AAAA,IACnD;AACA,SAAK,QAAQ,WAAW,OAAO,SAAS,GAAG,cAAc;AACzD,SAAK,QAAQ,aAAa,MAAM;AAC/B,aAAO,aAAa;AAAA,QACnB,KAAK;AAAA,QACL;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,uBAA8D;AAAA,EAzV3E,OAyV2E;AAAA;AAAA;AAAA,EAC1D,OAAO,mBAAmB;AAAA,EAC1B,WAAW;AAAA,EACX,OAAO;AAAA,EAEvB,YACC,UACwC;AACxC,UAAM,qBAAqB,SAAS,IAAI,mBAAmB;AAC3D,UAAM,qBAAqB,mBAAmB,sBAAsB;AACpE,UAAM,wBACL,oBAAoB,eAAe;AACpC,UAAM,eAAe,SAAS,IAAI,aAAa;AAE/C,QACC,mBAAmB,UAAU;AAAA,MAC5B;AAAA,IACD,KACA,CAAC,uBACA;AAED;AAAA,IACD;AACA,WAAO,IAAI;AAAA,MACV,yBAAyB;AAAA,MACzB,EAAE,UAAU,cAAc,MAAM,mBAAmB,KAAK;AAAA,MACxD,MAAM;AACL,eAAO;AAAA,MACR;AAAA,MACA,MAAM;AACL,qBAAa,sBAAsB;AAAA,MACpC;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;",
  "names": ["HoverAccessibilityHelpNLS"]
}
