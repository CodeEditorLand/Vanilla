{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/hoverAccessibleViews.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../../nls.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ContentHoverController } from './contentHoverController.js';\nimport { AccessibleViewType, AccessibleViewProviderId, AccessibleContentProvider, IAccessibleViewContentProvider, IAccessibleViewOptions } from '../../../../platform/accessibility/browser/accessibleView.js';\nimport { IAccessibleViewImplentation } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { HoverVerbosityAction } from '../../../common/languages.js';\nimport { DECREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID, DECREASE_HOVER_VERBOSITY_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACTION_ID } from './hoverActionIds.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Action, IAction } from '../../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { labelForHoverVerbosityAction } from './markdownHoverParticipant.js';\n\nnamespace HoverAccessibilityHelpNLS {\n\texport const increaseVerbosity = localize('increaseVerbosity', '- The focused hover part verbosity level can be increased with the Increase Hover Verbosity command.', `<keybinding:${INCREASE_HOVER_VERBOSITY_ACTION_ID}>`);\n\texport const decreaseVerbosity = localize('decreaseVerbosity', '- The focused hover part verbosity level can be decreased with the Decrease Hover Verbosity command.', `<keybinding:${DECREASE_HOVER_VERBOSITY_ACTION_ID}>`);\n}\n\nexport class HoverAccessibleView implements IAccessibleViewImplentation {\n\n\tpublic readonly type = AccessibleViewType.View;\n\tpublic readonly priority = 95;\n\tpublic readonly name = 'hover';\n\tpublic readonly when = EditorContextKeys.hoverFocused;\n\n\tgetProvider(accessor: ServicesAccessor): AccessibleContentProvider | undefined {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst codeEditor = codeEditorService.getActiveCodeEditor() || codeEditorService.getFocusedCodeEditor();\n\t\tif (!codeEditor) {\n\t\t\tthrow new Error('No active or focused code editor');\n\t\t}\n\t\tconst hoverController = ContentHoverController.get(codeEditor);\n\t\tif (!hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\treturn accessor.get(IInstantiationService).createInstance(HoverAccessibleViewProvider, keybindingService, codeEditor, hoverController);\n\t}\n}\n\nexport class HoverAccessibilityHelp implements IAccessibleViewImplentation {\n\n\tpublic readonly priority = 100;\n\tpublic readonly name = 'hover';\n\tpublic readonly type = AccessibleViewType.Help;\n\tpublic readonly when = EditorContextKeys.hoverVisible;\n\n\tgetProvider(accessor: ServicesAccessor): AccessibleContentProvider | undefined {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst codeEditor = codeEditorService.getActiveCodeEditor() || codeEditorService.getFocusedCodeEditor();\n\t\tif (!codeEditor) {\n\t\t\tthrow new Error('No active or focused code editor');\n\t\t}\n\t\tconst hoverController = ContentHoverController.get(codeEditor);\n\t\tif (!hoverController) {\n\t\t\treturn;\n\t\t}\n\t\treturn accessor.get(IInstantiationService).createInstance(HoverAccessibilityHelpProvider, hoverController);\n\t}\n}\n\nabstract class BaseHoverAccessibleViewProvider extends Disposable implements IAccessibleViewContentProvider {\n\n\tabstract provideContent(): string;\n\tabstract options: IAccessibleViewOptions;\n\n\tpublic readonly id = AccessibleViewProviderId.Hover;\n\tpublic readonly verbositySettingKey = 'accessibility.verbosity.hover';\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tprotected _focusedHoverPartIndex: number = -1;\n\n\tconstructor(protected readonly _hoverController: ContentHoverController) {\n\t\tsuper();\n\t}\n\n\tpublic onOpen(): void {\n\t\tif (!this._hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tthis._hoverController.shouldKeepOpenOnEditorMouseMoveOrLeave = true;\n\t\tthis._focusedHoverPartIndex = this._hoverController.focusedHoverPartIndex();\n\t\tthis._register(this._hoverController.onHoverContentsChanged(() => {\n\t\t\tthis._onDidChangeContent.fire();\n\t\t}));\n\t}\n\n\tpublic onClose(): void {\n\t\tif (!this._hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._focusedHoverPartIndex === -1) {\n\t\t\tthis._hoverController.focus();\n\t\t} else {\n\t\t\tthis._hoverController.focusHoverPartWithIndex(this._focusedHoverPartIndex);\n\t\t}\n\t\tthis._focusedHoverPartIndex = -1;\n\t\tthis._hoverController.shouldKeepOpenOnEditorMouseMoveOrLeave = false;\n\t}\n\n\tprovideContentAtIndex(focusedHoverIndex: number, includeVerbosityActions: boolean): string {\n\t\tif (focusedHoverIndex !== -1) {\n\t\t\tconst accessibleContent = this._hoverController.getAccessibleWidgetContentAtIndex(focusedHoverIndex);\n\t\t\tif (accessibleContent === undefined) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tconst contents: string[] = [];\n\t\t\tif (includeVerbosityActions) {\n\t\t\t\tcontents.push(...this._descriptionsOfVerbosityActionsForIndex(focusedHoverIndex));\n\t\t\t}\n\t\t\tcontents.push(accessibleContent);\n\t\t\treturn contents.join('\\n');\n\t\t} else {\n\t\t\tconst accessibleContent = this._hoverController.getAccessibleWidgetContent();\n\t\t\tif (accessibleContent === undefined) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tconst contents: string[] = [];\n\t\t\tcontents.push(accessibleContent);\n\t\t\treturn contents.join('\\n');\n\t\t}\n\t}\n\n\tprivate _descriptionsOfVerbosityActionsForIndex(index: number): string[] {\n\t\tconst content: string[] = [];\n\t\tconst descriptionForIncreaseAction = this._descriptionOfVerbosityActionForIndex(HoverVerbosityAction.Increase, index);\n\t\tif (descriptionForIncreaseAction !== undefined) {\n\t\t\tcontent.push(descriptionForIncreaseAction);\n\t\t}\n\t\tconst descriptionForDecreaseAction = this._descriptionOfVerbosityActionForIndex(HoverVerbosityAction.Decrease, index);\n\t\tif (descriptionForDecreaseAction !== undefined) {\n\t\t\tcontent.push(descriptionForDecreaseAction);\n\t\t}\n\t\treturn content;\n\t}\n\n\tprivate _descriptionOfVerbosityActionForIndex(action: HoverVerbosityAction, index: number): string | undefined {\n\t\tconst isActionSupported = this._hoverController.doesHoverAtIndexSupportVerbosityAction(index, action);\n\t\tif (!isActionSupported) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (action) {\n\t\t\tcase HoverVerbosityAction.Increase:\n\t\t\t\treturn HoverAccessibilityHelpNLS.increaseVerbosity;\n\t\t\tcase HoverVerbosityAction.Decrease:\n\t\t\t\treturn HoverAccessibilityHelpNLS.decreaseVerbosity;\n\t\t}\n\t}\n}\n\nexport class HoverAccessibilityHelpProvider extends BaseHoverAccessibleViewProvider implements IAccessibleViewContentProvider {\n\n\tpublic readonly options: IAccessibleViewOptions = { type: AccessibleViewType.Help };\n\n\tconstructor(hoverController: ContentHoverController) {\n\t\tsuper(hoverController);\n\t}\n\n\tprovideContent(): string {\n\t\treturn this.provideContentAtIndex(this._focusedHoverPartIndex, true);\n\t}\n}\n\nexport class HoverAccessibleViewProvider extends BaseHoverAccessibleViewProvider implements IAccessibleViewContentProvider {\n\n\tpublic readonly options: IAccessibleViewOptions = { type: AccessibleViewType.View };\n\n\tconstructor(\n\t\tprivate readonly _keybindingService: IKeybindingService,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\thoverController: ContentHoverController,\n\t) {\n\t\tsuper(hoverController);\n\t\tthis._initializeOptions(this._editor, hoverController);\n\t}\n\n\tpublic provideContent(): string {\n\t\treturn this.provideContentAtIndex(this._focusedHoverPartIndex, false);\n\t}\n\n\tpublic get actions(): IAction[] {\n\t\tconst actions: IAction[] = [];\n\t\tactions.push(this._getActionFor(this._editor, HoverVerbosityAction.Increase));\n\t\tactions.push(this._getActionFor(this._editor, HoverVerbosityAction.Decrease));\n\t\treturn actions;\n\t}\n\n\tprivate _getActionFor(editor: ICodeEditor, action: HoverVerbosityAction): IAction {\n\t\tlet actionId: string;\n\t\tlet accessibleActionId: string;\n\t\tlet actionCodicon: ThemeIcon;\n\t\tswitch (action) {\n\t\t\tcase HoverVerbosityAction.Increase:\n\t\t\t\tactionId = INCREASE_HOVER_VERBOSITY_ACTION_ID;\n\t\t\t\taccessibleActionId = INCREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID;\n\t\t\t\tactionCodicon = Codicon.add;\n\t\t\t\tbreak;\n\t\t\tcase HoverVerbosityAction.Decrease:\n\t\t\t\tactionId = DECREASE_HOVER_VERBOSITY_ACTION_ID;\n\t\t\t\taccessibleActionId = DECREASE_HOVER_VERBOSITY_ACCESSIBLE_ACTION_ID;\n\t\t\t\tactionCodicon = Codicon.remove;\n\t\t\t\tbreak;\n\t\t}\n\t\tconst actionLabel = labelForHoverVerbosityAction(this._keybindingService, action);\n\t\tconst actionEnabled = this._hoverController.doesHoverAtIndexSupportVerbosityAction(this._focusedHoverPartIndex, action);\n\t\treturn new Action(accessibleActionId, actionLabel, ThemeIcon.asClassName(actionCodicon), actionEnabled, () => {\n\t\t\teditor.getAction(actionId)?.run({ index: this._focusedHoverPartIndex, focus: false });\n\t\t});\n\t}\n\n\tprivate _initializeOptions(editor: ICodeEditor, hoverController: ContentHoverController): void {\n\t\tconst helpProvider = this._register(new HoverAccessibilityHelpProvider(hoverController));\n\t\tthis.options.language = editor.getModel()?.getLanguageId();\n\t\tthis.options.customHelp = () => { return helpProvider.provideContentAtIndex(this._focusedHoverPartIndex, true); };\n\t}\n}\n\nexport class ExtHoverAccessibleView implements IAccessibleViewImplentation {\n\tpublic readonly type = AccessibleViewType.View;\n\tpublic readonly priority = 90;\n\tpublic readonly name = 'extension-hover';\n\n\tgetProvider(accessor: ServicesAccessor): AccessibleContentProvider | undefined {\n\t\tconst contextViewService = accessor.get(IContextViewService);\n\t\tconst contextViewElement = contextViewService.getContextViewElement();\n\t\tconst extensionHoverContent = contextViewElement?.textContent ?? undefined;\n\t\tconst hoverService = accessor.get(IHoverService);\n\n\t\tif (contextViewElement.classList.contains('accessible-view-container') || !extensionHoverContent) {\n\t\t\t// The accessible view, itself, uses the context view service to display the text. We don't want to read that.\n\t\t\treturn;\n\t\t}\n\t\treturn new AccessibleContentProvider(\n\t\t\tAccessibleViewProviderId.Hover,\n\t\t\t{ language: 'typescript', type: AccessibleViewType.View },\n\t\t\t() => { return extensionHoverContent; },\n\t\t\t() => {\n\t\t\t\thoverService.showAndFocusLastHover();\n\t\t\t},\n\t\t\t'accessibility.verbosity.hover',\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["HoverAccessibilityHelpNLS"]
}
