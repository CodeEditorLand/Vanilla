{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/hover/browser/contentHoverWidgetWrapper.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IEditorMouseEvent,\n\tMouseTargetType,\n} from \"../../../browser/editorBrowser.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { Range } from \"../../../common/core/range.js\";\nimport { TokenizationRegistry } from \"../../../common/languages.js\";\nimport type { HoverVerbosityAction } from \"../../../common/standalone/standaloneEnums.js\";\nimport {\n\tContentHoverComputer,\n\ttype ContentHoverComputerOptions,\n} from \"./contentHoverComputer.js\";\nimport { RenderedContentHover } from \"./contentHoverRendered.js\";\nimport { ContentHoverResult } from \"./contentHoverTypes.js\";\nimport { ContentHoverWidget } from \"./contentHoverWidget.js\";\nimport {\n\tHoverOperation,\n\ttype HoverResult,\n\tHoverStartMode,\n\tHoverStartSource,\n} from \"./hoverOperation.js\";\nimport {\n\ttype HoverAnchor,\n\tHoverParticipantRegistry,\n\tHoverRangeAnchor,\n\ttype IEditorHoverContext,\n\ttype IEditorHoverParticipant,\n\ttype IHoverPart,\n\ttype IHoverWidget,\n} from \"./hoverTypes.js\";\nimport { isMousePositionWithinElement } from \"./hoverUtils.js\";\n\nexport class ContentHoverWidgetWrapper\n\textends Disposable\n\timplements IHoverWidget\n{\n\tprivate _currentResult: ContentHoverResult | null = null;\n\tprivate _renderedContentHover: RenderedContentHover | undefined;\n\n\tprivate readonly _contentHoverWidget: ContentHoverWidget;\n\tprivate readonly _participants: IEditorHoverParticipant[];\n\tprivate readonly _hoverOperation: HoverOperation<\n\t\tContentHoverComputerOptions,\n\t\tIHoverPart\n\t>;\n\n\tprivate readonly _onContentsChanged = this._register(new Emitter<void>());\n\tpublic readonly onContentsChanged = this._onContentsChanged.event;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IKeybindingService\n\t\tprivate readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\t\tthis._contentHoverWidget = this._register(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tContentHoverWidget,\n\t\t\t\tthis._editor,\n\t\t\t),\n\t\t);\n\t\tthis._participants = this._initializeHoverParticipants();\n\t\tthis._hoverOperation = this._register(\n\t\t\tnew HoverOperation(\n\t\t\t\tthis._editor,\n\t\t\t\tnew ContentHoverComputer(this._editor, this._participants),\n\t\t\t),\n\t\t);\n\t\tthis._registerListeners();\n\t}\n\n\tprivate _initializeHoverParticipants(): IEditorHoverParticipant[] {\n\t\tconst participants: IEditorHoverParticipant[] = [];\n\t\tfor (const participant of HoverParticipantRegistry.getAll()) {\n\t\t\tconst participantInstance =\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tparticipant,\n\t\t\t\t\tthis._editor,\n\t\t\t\t);\n\t\t\tparticipants.push(participantInstance);\n\t\t}\n\t\tparticipants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n\t\tthis._register(\n\t\t\tthis._contentHoverWidget.onDidResize(() => {\n\t\t\t\tthis._participants.forEach((participant) =>\n\t\t\t\t\tparticipant.handleResize?.(),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\treturn participants;\n\t}\n\n\tprivate _registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis._hoverOperation.onResult((result) => {\n\t\t\t\tconst messages = result.hasLoadingMessage\n\t\t\t\t\t? this._addLoadingMessage(result)\n\t\t\t\t\t: result.value;\n\t\t\t\tthis._withResult(\n\t\t\t\t\tnew ContentHoverResult(\n\t\t\t\t\t\tmessages,\n\t\t\t\t\t\tresult.isComplete,\n\t\t\t\t\t\tresult.options,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\tconst contentHoverWidgetNode = this._contentHoverWidget.getDomNode();\n\t\tthis._register(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tcontentHoverWidgetNode,\n\t\t\t\t\"keydown\",\n\t\t\t\t(e) => {\n\t\t\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tcontentHoverWidgetNode,\n\t\t\t\t\"mouseleave\",\n\t\t\t\t(e) => {\n\t\t\t\t\tthis._onMouseLeave(e);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tTokenizationRegistry.onDidChange(() => {\n\t\t\t\tif (this._contentHoverWidget.position && this._currentResult) {\n\t\t\t\t\tthis._setCurrentResult(this._currentResult); // render again\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Returns true if the hover shows now or will show.\n\t */\n\tprivate _startShowingOrUpdateHover(\n\t\tanchor: HoverAnchor | null,\n\t\tmode: HoverStartMode,\n\t\tsource: HoverStartSource,\n\t\tfocus: boolean,\n\t\tmouseEvent: IEditorMouseEvent | null,\n\t): boolean {\n\t\tconst contentHoverIsVisible =\n\t\t\tthis._contentHoverWidget.position && this._currentResult;\n\t\tif (!contentHoverIsVisible) {\n\t\t\tif (anchor) {\n\t\t\t\tthis._startHoverOperationIfNecessary(\n\t\t\t\t\tanchor,\n\t\t\t\t\tmode,\n\t\t\t\t\tsource,\n\t\t\t\t\tfocus,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tconst isHoverSticky = this._editor.getOption(EditorOption.hover).sticky;\n\t\tconst isMouseGettingCloser =\n\t\t\tmouseEvent &&\n\t\t\tthis._contentHoverWidget.isMouseGettingCloser(\n\t\t\t\tmouseEvent.event.posx,\n\t\t\t\tmouseEvent.event.posy,\n\t\t\t);\n\t\tconst isHoverStickyAndIsMouseGettingCloser =\n\t\t\tisHoverSticky && isMouseGettingCloser;\n\t\t// The mouse is getting closer to the hover, so we will keep the hover untouched\n\t\t// But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n\t\tif (isHoverStickyAndIsMouseGettingCloser) {\n\t\t\tif (anchor) {\n\t\t\t\tthis._startHoverOperationIfNecessary(\n\t\t\t\t\tanchor,\n\t\t\t\t\tmode,\n\t\t\t\t\tsource,\n\t\t\t\t\tfocus,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t// If mouse is not getting closer and anchor not defined, hide the hover\n\t\tif (!anchor) {\n\t\t\tthis._setCurrentResult(null);\n\t\t\treturn false;\n\t\t}\n\t\t// If mouse if not getting closer and anchor is defined, and the new anchor is the same as the previous anchor\n\t\tconst currentAnchorEqualsPreviousAnchor =\n\t\t\tthis._currentResult &&\n\t\t\tthis._currentResult.options.anchor.equals(anchor);\n\t\tif (currentAnchorEqualsPreviousAnchor) {\n\t\t\treturn true;\n\t\t}\n\t\t// If mouse if not getting closer and anchor is defined, and the new anchor is not compatible with the previous anchor\n\t\tconst currentAnchorCompatibleWithPreviousAnchor =\n\t\t\tthis._currentResult &&\n\t\t\tanchor.canAdoptVisibleHover(\n\t\t\t\tthis._currentResult.options.anchor,\n\t\t\t\tthis._contentHoverWidget.position,\n\t\t\t);\n\t\tif (!currentAnchorCompatibleWithPreviousAnchor) {\n\t\t\tthis._setCurrentResult(null);\n\t\t\tthis._startHoverOperationIfNecessary(\n\t\t\t\tanchor,\n\t\t\t\tmode,\n\t\t\t\tsource,\n\t\t\t\tfocus,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\t// We aren't getting any closer to the hover, so we will filter existing results\n\t\t// and keep those which also apply to the new anchor.\n\t\tif (this._currentResult) {\n\t\t\tthis._setCurrentResult(this._currentResult.filter(anchor));\n\t\t}\n\t\tthis._startHoverOperationIfNecessary(\n\t\t\tanchor,\n\t\t\tmode,\n\t\t\tsource,\n\t\t\tfocus,\n\t\t\tfalse,\n\t\t);\n\t\treturn true;\n\t}\n\n\tprivate _startHoverOperationIfNecessary(\n\t\tanchor: HoverAnchor,\n\t\tmode: HoverStartMode,\n\t\tsource: HoverStartSource,\n\t\tshouldFocus: boolean,\n\t\tinsistOnKeepingHoverVisible: boolean,\n\t): void {\n\t\tconst currentAnchorEqualToPreviousHover =\n\t\t\tthis._hoverOperation.options &&\n\t\t\tthis._hoverOperation.options.anchor.equals(anchor);\n\t\tif (currentAnchorEqualToPreviousHover) {\n\t\t\treturn;\n\t\t}\n\t\tthis._hoverOperation.cancel();\n\t\tconst contentHoverComputerOptions: ContentHoverComputerOptions = {\n\t\t\tanchor,\n\t\t\tsource,\n\t\t\tshouldFocus,\n\t\t\tinsistOnKeepingHoverVisible,\n\t\t};\n\t\tthis._hoverOperation.start(mode, contentHoverComputerOptions);\n\t}\n\n\tprivate _setCurrentResult(hoverResult: ContentHoverResult | null): void {\n\t\tlet currentHoverResult = hoverResult;\n\t\tconst currentResultEqualToPreviousResult =\n\t\t\tthis._currentResult === currentHoverResult;\n\t\tif (currentResultEqualToPreviousResult) {\n\t\t\treturn;\n\t\t}\n\t\tconst currentHoverResultIsEmpty =\n\t\t\tcurrentHoverResult && currentHoverResult.hoverParts.length === 0;\n\t\tif (currentHoverResultIsEmpty) {\n\t\t\tcurrentHoverResult = null;\n\t\t}\n\t\tthis._currentResult = currentHoverResult;\n\t\tif (this._currentResult) {\n\t\t\tthis._showHover(this._currentResult);\n\t\t} else {\n\t\t\tthis._hideHover();\n\t\t}\n\t}\n\n\tprivate _addLoadingMessage(\n\t\thoverResult: HoverResult<ContentHoverComputerOptions, IHoverPart>,\n\t): IHoverPart[] {\n\t\tfor (const participant of this._participants) {\n\t\t\tif (!participant.createLoadingMessage) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst loadingMessage = participant.createLoadingMessage(\n\t\t\t\thoverResult.options.anchor,\n\t\t\t);\n\t\t\tif (!loadingMessage) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn hoverResult.value.slice(0).concat([loadingMessage]);\n\t\t}\n\t\treturn hoverResult.value;\n\t}\n\n\tprivate _withResult(hoverResult: ContentHoverResult): void {\n\t\tconst previousHoverIsVisibleWithCompleteResult =\n\t\t\tthis._contentHoverWidget.position &&\n\t\t\tthis._currentResult &&\n\t\t\tthis._currentResult.isComplete;\n\t\tif (!previousHoverIsVisibleWithCompleteResult) {\n\t\t\tthis._setCurrentResult(hoverResult);\n\t\t}\n\t\t// The hover is visible with a previous complete result.\n\t\tconst isCurrentHoverResultComplete = hoverResult.isComplete;\n\t\tif (!isCurrentHoverResultComplete) {\n\t\t\t// Instead of rendering the new partial result, we wait for the result to be complete.\n\t\t\treturn;\n\t\t}\n\t\tconst currentHoverResultIsEmpty = hoverResult.hoverParts.length === 0;\n\t\tconst insistOnKeepingPreviousHoverVisible =\n\t\t\thoverResult.options.insistOnKeepingHoverVisible;\n\t\tconst shouldKeepPreviousHoverVisible =\n\t\t\tcurrentHoverResultIsEmpty && insistOnKeepingPreviousHoverVisible;\n\t\tif (shouldKeepPreviousHoverVisible) {\n\t\t\t// The hover would now hide normally, so we'll keep the previous messages\n\t\t\treturn;\n\t\t}\n\t\tthis._setCurrentResult(hoverResult);\n\t}\n\n\tprivate _showHover(hoverResult: ContentHoverResult): void {\n\t\tconst context = this._getHoverContext();\n\t\tthis._renderedContentHover = new RenderedContentHover(\n\t\t\tthis._editor,\n\t\t\thoverResult,\n\t\t\tthis._participants,\n\t\t\tcontext,\n\t\t\tthis._keybindingService,\n\t\t);\n\t\tif (this._renderedContentHover.domNodeHasChildren) {\n\t\t\tthis._contentHoverWidget.show(this._renderedContentHover);\n\t\t} else {\n\t\t\tthis._renderedContentHover.dispose();\n\t\t}\n\t}\n\n\tprivate _hideHover(): void {\n\t\tthis._contentHoverWidget.hide();\n\t}\n\n\tprivate _getHoverContext(): IEditorHoverContext {\n\t\tconst hide = () => {\n\t\t\tthis.hide();\n\t\t};\n\t\tconst onContentsChanged = () => {\n\t\t\tthis._onContentsChanged.fire();\n\t\t\tthis._contentHoverWidget.onContentsChanged();\n\t\t};\n\t\tconst setMinimumDimensions = (dimensions: dom.Dimension) => {\n\t\t\tthis._contentHoverWidget.setMinimumDimensions(dimensions);\n\t\t};\n\t\treturn { hide, onContentsChanged, setMinimumDimensions };\n\t}\n\n\tpublic showsOrWillShow(mouseEvent: IEditorMouseEvent): boolean {\n\t\tconst isContentWidgetResizing = this._contentHoverWidget.isResizing;\n\t\tif (isContentWidgetResizing) {\n\t\t\treturn true;\n\t\t}\n\t\tconst anchorCandidates: HoverAnchor[] =\n\t\t\tthis._findHoverAnchorCandidates(mouseEvent);\n\t\tconst anchorCandidatesExist = anchorCandidates.length > 0;\n\t\tif (!anchorCandidatesExist) {\n\t\t\treturn this._startShowingOrUpdateHover(\n\t\t\t\tnull,\n\t\t\t\tHoverStartMode.Delayed,\n\t\t\t\tHoverStartSource.Mouse,\n\t\t\t\tfalse,\n\t\t\t\tmouseEvent,\n\t\t\t);\n\t\t}\n\t\tconst anchor = anchorCandidates[0];\n\t\treturn this._startShowingOrUpdateHover(\n\t\t\tanchor,\n\t\t\tHoverStartMode.Delayed,\n\t\t\tHoverStartSource.Mouse,\n\t\t\tfalse,\n\t\t\tmouseEvent,\n\t\t);\n\t}\n\n\tprivate _findHoverAnchorCandidates(\n\t\tmouseEvent: IEditorMouseEvent,\n\t): HoverAnchor[] {\n\t\tconst anchorCandidates: HoverAnchor[] = [];\n\t\tfor (const participant of this._participants) {\n\t\t\tif (!participant.suggestHoverAnchor) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst anchor = participant.suggestHoverAnchor(mouseEvent);\n\t\t\tif (!anchor) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tanchorCandidates.push(anchor);\n\t\t}\n\t\tconst target = mouseEvent.target;\n\t\tswitch (target.type) {\n\t\t\tcase MouseTargetType.CONTENT_TEXT: {\n\t\t\t\tanchorCandidates.push(\n\t\t\t\t\tnew HoverRangeAnchor(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttarget.range,\n\t\t\t\t\t\tmouseEvent.event.posx,\n\t\t\t\t\t\tmouseEvent.event.posy,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MouseTargetType.CONTENT_EMPTY: {\n\t\t\t\tconst epsilon =\n\t\t\t\t\tthis._editor.getOption(EditorOption.fontInfo)\n\t\t\t\t\t\t.typicalHalfwidthCharacterWidth / 2;\n\t\t\t\t// Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n\t\t\t\tconst mouseIsWithinLinesAndCloseToHover =\n\t\t\t\t\t!target.detail.isAfterLines &&\n\t\t\t\t\ttypeof target.detail.horizontalDistanceToText ===\n\t\t\t\t\t\t\"number\" &&\n\t\t\t\t\ttarget.detail.horizontalDistanceToText < epsilon;\n\t\t\t\tif (!mouseIsWithinLinesAndCloseToHover) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tanchorCandidates.push(\n\t\t\t\t\tnew HoverRangeAnchor(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttarget.range,\n\t\t\t\t\t\tmouseEvent.event.posx,\n\t\t\t\t\t\tmouseEvent.event.posy,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tanchorCandidates.sort((a, b) => b.priority - a.priority);\n\t\treturn anchorCandidates;\n\t}\n\n\tprivate _onMouseLeave(e: MouseEvent): void {\n\t\tconst editorDomNode = this._editor.getDomNode();\n\t\tconst isMousePositionOutsideOfEditor =\n\t\t\t!editorDomNode ||\n\t\t\t!isMousePositionWithinElement(editorDomNode, e.x, e.y);\n\t\tif (isMousePositionOutsideOfEditor) {\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\tpublic startShowingAtRange(\n\t\trange: Range,\n\t\tmode: HoverStartMode,\n\t\tsource: HoverStartSource,\n\t\tfocus: boolean,\n\t): void {\n\t\tthis._startShowingOrUpdateHover(\n\t\t\tnew HoverRangeAnchor(0, range, undefined, undefined),\n\t\t\tmode,\n\t\t\tsource,\n\t\t\tfocus,\n\t\t\tnull,\n\t\t);\n\t}\n\n\tpublic getWidgetContent(): string | undefined {\n\t\tconst node = this._contentHoverWidget.getDomNode();\n\t\tif (!node.textContent) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn node.textContent;\n\t}\n\n\tpublic async updateHoverVerbosityLevel(\n\t\taction: HoverVerbosityAction,\n\t\tindex: number,\n\t\tfocus?: boolean,\n\t): Promise<void> {\n\t\tthis._renderedContentHover?.updateHoverVerbosityLevel(\n\t\t\taction,\n\t\t\tindex,\n\t\t\tfocus,\n\t\t);\n\t}\n\n\tpublic doesHoverAtIndexSupportVerbosityAction(\n\t\tindex: number,\n\t\taction: HoverVerbosityAction,\n\t): boolean {\n\t\treturn (\n\t\t\tthis._renderedContentHover?.doesHoverAtIndexSupportVerbosityAction(\n\t\t\t\tindex,\n\t\t\t\taction,\n\t\t\t) ?? false\n\t\t);\n\t}\n\n\tpublic getAccessibleWidgetContent(): string | undefined {\n\t\treturn this._renderedContentHover?.getAccessibleWidgetContent();\n\t}\n\n\tpublic getAccessibleWidgetContentAtIndex(\n\t\tindex: number,\n\t): string | undefined {\n\t\treturn this._renderedContentHover?.getAccessibleWidgetContentAtIndex(\n\t\t\tindex,\n\t\t);\n\t}\n\n\tpublic focusedHoverPartIndex(): number {\n\t\treturn this._renderedContentHover?.focusedHoverPartIndex ?? -1;\n\t}\n\n\tpublic containsNode(node: Node | null | undefined): boolean {\n\t\treturn node\n\t\t\t? this._contentHoverWidget.getDomNode().contains(node)\n\t\t\t: false;\n\t}\n\n\tpublic focus(): void {\n\t\tthis._contentHoverWidget.focus();\n\t}\n\n\tpublic focusHoverPartWithIndex(index: number): void {\n\t\tthis._renderedContentHover?.focusHoverPartWithIndex(index);\n\t}\n\n\tpublic scrollUp(): void {\n\t\tthis._contentHoverWidget.scrollUp();\n\t}\n\n\tpublic scrollDown(): void {\n\t\tthis._contentHoverWidget.scrollDown();\n\t}\n\n\tpublic scrollLeft(): void {\n\t\tthis._contentHoverWidget.scrollLeft();\n\t}\n\n\tpublic scrollRight(): void {\n\t\tthis._contentHoverWidget.scrollRight();\n\t}\n\n\tpublic pageUp(): void {\n\t\tthis._contentHoverWidget.pageUp();\n\t}\n\n\tpublic pageDown(): void {\n\t\tthis._contentHoverWidget.pageDown();\n\t}\n\n\tpublic goToTop(): void {\n\t\tthis._contentHoverWidget.goToTop();\n\t}\n\n\tpublic goToBottom(): void {\n\t\tthis._contentHoverWidget.goToBottom();\n\t}\n\n\tpublic hide(): void {\n\t\tthis._hoverOperation.cancel();\n\t\tthis._setCurrentResult(null);\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._contentHoverWidget.getDomNode();\n\t}\n\n\tpublic get isColorPickerVisible(): boolean {\n\t\treturn this._renderedContentHover?.isColorPickerVisible() ?? false;\n\t}\n\n\tpublic get isVisibleFromKeyboard(): boolean {\n\t\treturn this._contentHoverWidget.isVisibleFromKeyboard;\n\t}\n\n\tpublic get isVisible(): boolean {\n\t\treturn this._contentHoverWidget.isVisible;\n\t}\n\n\tpublic get isFocused(): boolean {\n\t\treturn this._contentHoverWidget.isFocused;\n\t}\n\n\tpublic get isResizing(): boolean {\n\t\treturn this._contentHoverWidget.isResizing;\n\t}\n\n\tpublic get widget() {\n\t\treturn this._contentHoverWidget;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
