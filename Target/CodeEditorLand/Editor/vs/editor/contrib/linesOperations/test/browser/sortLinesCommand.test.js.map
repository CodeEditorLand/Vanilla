{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/linesOperations/test/browser/sortLinesCommand.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { SortLinesCommand } from '../../browser/sortLinesCommand.js';\nimport { testCommand } from '../../../../test/browser/testCommand.js';\n\nfunction testSortLinesAscendingCommand(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (accessor, sel) => new SortLinesCommand(sel, false), expectedLines, expectedSelection);\n}\n\nfunction testSortLinesDescendingCommand(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (accessor, sel) => new SortLinesCommand(sel, true), expectedLines, expectedSelection);\n}\n\nsuite('Editor Contrib - Sort Lines Command', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('no op unless at least two lines selected 1', function () {\n\t\ttestSortLinesAscendingCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 1, 1),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 1, 1)\n\t\t);\n\t});\n\n\ttest('no op unless at least two lines selected 2', function () {\n\t\ttestSortLinesAscendingCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 2, 1),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 2, 1)\n\t\t);\n\t});\n\n\ttest('sorting two lines ascending', function () {\n\t\ttestSortLinesAscendingCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(3, 3, 4, 2),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'fourth line',\n\t\t\t\t'third line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(3, 3, 4, 1)\n\t\t);\n\t});\n\n\ttest('sorting first 4 lines ascending', function () {\n\t\ttestSortLinesAscendingCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 1),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'fourth line',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 1)\n\t\t);\n\t});\n\n\ttest('sorting all lines ascending', function () {\n\t\ttestSortLinesAscendingCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 6),\n\t\t\t[\n\t\t\t\t'fifth',\n\t\t\t\t'first',\n\t\t\t\t'fourth line',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 11)\n\t\t);\n\t});\n\n\ttest('sorting first 4 lines descending', function () {\n\t\ttestSortLinesDescendingCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 1),\n\t\t\t[\n\t\t\t\t'third line',\n\t\t\t\t'second line',\n\t\t\t\t'fourth line',\n\t\t\t\t'first',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 1)\n\t\t);\n\t});\n\n\ttest('sorting all lines descending', function () {\n\t\ttestSortLinesDescendingCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 6),\n\t\t\t[\n\t\t\t\t'third line',\n\t\t\t\t'second line',\n\t\t\t\t'fourth line',\n\t\t\t\t'first',\n\t\t\t\t'fifth',\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 6)\n\t\t);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
