{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/linesOperations/test/browser/copyLinesCommand.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { CopyLinesCommand } from '../../browser/copyLinesCommand.js';\nimport { DuplicateSelectionAction } from '../../browser/linesOperations.js';\nimport { withTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { testCommand } from '../../../../test/browser/testCommand.js';\n\nfunction testCopyLinesDownCommand(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (accessor, sel) => new CopyLinesCommand(sel, true), expectedLines, expectedSelection);\n}\n\nfunction testCopyLinesUpCommand(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (accessor, sel) => new CopyLinesCommand(sel, false), expectedLines, expectedSelection);\n}\n\nsuite('Editor Contrib - Copy Lines Command', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('copy first line down', function () {\n\t\ttestCopyLinesDownCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 1, 1),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(2, 3, 2, 1)\n\t\t);\n\t});\n\n\ttest('copy first line up', function () {\n\t\ttestCopyLinesUpCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 1, 1),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 1, 1)\n\t\t);\n\t});\n\n\ttest('copy last line down', function () {\n\t\ttestCopyLinesDownCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(5, 3, 5, 1),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(6, 3, 6, 1)\n\t\t);\n\t});\n\n\ttest('copy last line up', function () {\n\t\ttestCopyLinesUpCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(5, 3, 5, 1),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(5, 3, 5, 1)\n\t\t);\n\t});\n\n\ttest('issue #1322: copy line up', function () {\n\t\ttestCopyLinesUpCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(3, 11, 3, 11),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(3, 11, 3, 11)\n\t\t);\n\t});\n\n\ttest('issue #1322: copy last line up', function () {\n\t\ttestCopyLinesUpCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(5, 6, 5, 6),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(5, 6, 5, 6)\n\t\t);\n\t});\n\n\ttest('copy many lines up', function () {\n\t\ttestCopyLinesUpCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(4, 3, 2, 1),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(4, 3, 2, 1)\n\t\t);\n\t});\n\n\ttest('ignore empty selection', function () {\n\t\ttestCopyLinesUpCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(2, 1, 1, 1),\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(2, 1, 1, 1)\n\t\t);\n\t});\n});\n\nsuite('Editor Contrib - Duplicate Selection', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst duplicateSelectionAction = new DuplicateSelectionAction();\n\n\tfunction testDuplicateSelectionAction(lines: string[], selections: Selection[], expectedLines: string[], expectedSelections: Selection[]): void {\n\t\twithTestCodeEditor(lines.join('\\n'), {}, (editor) => {\n\t\t\teditor.setSelections(selections);\n\t\t\tduplicateSelectionAction.run(null!, editor, {});\n\t\t\tassert.deepStrictEqual(editor.getValue(), expectedLines.join('\\n'));\n\t\t\tassert.deepStrictEqual(editor.getSelections()!.map(s => s.toString()), expectedSelections.map(s => s.toString()));\n\t\t});\n\t}\n\n\ttest('empty selection', function () {\n\t\ttestDuplicateSelectionAction(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\t[new Selection(2, 2, 2, 2), new Selection(3, 2, 3, 2)],\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\t[new Selection(3, 2, 3, 2), new Selection(5, 2, 5, 2)]\n\t\t);\n\t});\n\n\ttest('with selection', function () {\n\t\ttestDuplicateSelectionAction(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\t[new Selection(2, 1, 2, 4), new Selection(3, 1, 3, 4)],\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'secsecond line',\n\t\t\t\t'thithird line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\t[new Selection(2, 4, 2, 7), new Selection(3, 4, 3, 7)]\n\t\t);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
