var _=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var m=(s,n,e,t)=>{for(var o=t>1?void 0:t?j(n,e):n,r=s.length-1,l;r>=0;r--)(l=s[r])&&(o=(t?l(n,e,o):l(o))||o);return t&&o&&_(n,e,o),o},d=(s,n)=>(e,t)=>n(e,t,s);import{Disposable as L,DisposableStore as S}from"../../../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as w}from"../../../../../base/test/common/utils.js";import{EditorAutoIndentStrategy as I}from"../../../../common/config/editorOptions.js";import{Selection as i}from"../../../../common/core/selection.js";import{ILanguageService as b}from"../../../../common/languages/language.js";import"../../../../common/languages/languageConfiguration.js";import{ILanguageConfigurationService as C}from"../../../../common/languages/languageConfigurationRegistry.js";import{LanguageService as v}from"../../../../common/services/languageService.js";import{MoveLinesCommand as D}from"../../browser/moveLinesCommand.js";import{testCommand as k}from"../../../../test/browser/testCommand.js";import{TestLanguageConfigurationService as c}from"../../../../test/common/modes/testLanguageConfigurationService.js";var x=(e=>(e[e.Up=0]="Up",e[e.Down=1]="Down",e))(x||{});function u(s,n,e,t,o){$(1,s,n,e,t,o)}function a(s,n,e,t,o){$(0,s,n,e,t,o)}function M(s,n,e,t,o,r){P(1,s,n,e,t,o,r)}function U(s,n,e,t,o,r){P(0,s,n,e,t,o,r)}function $(s,n,e,t,o,r){const l=new S;r||(r=l.add(new c)),k(n,null,e,(h,p)=>new D(p,s!==0,I.Advanced,r),t,o),l.dispose()}function P(s,n,e,t,o,r,l){const h=new S;l||(l=h.add(new c)),k(e,n,t,(p,T)=>new D(T,s!==0,I.Full,l),o,r),h.dispose()}suite("Editor Contrib - Move Lines Command",()=>{w(),test("move first up / last down disabled",function(){a(["first","second line","third line","fourth line","fifth"],new i(1,1,1,1),["first","second line","third line","fourth line","fifth"],new i(1,1,1,1)),u(["first","second line","third line","fourth line","fifth"],new i(5,1,5,1),["first","second line","third line","fourth line","fifth"],new i(5,1,5,1))}),test("move first line down",function(){u(["first","second line","third line","fourth line","fifth"],new i(1,4,1,1),["second line","first","third line","fourth line","fifth"],new i(2,4,2,1))}),test("move 2nd line up",function(){a(["first","second line","third line","fourth line","fifth"],new i(2,1,2,1),["second line","first","third line","fourth line","fifth"],new i(1,1,1,1))}),test("issue #1322a: move 2nd line up",function(){a(["first","second line","third line","fourth line","fifth"],new i(2,12,2,12),["second line","first","third line","fourth line","fifth"],new i(1,12,1,12))}),test("issue #1322b: move last line up",function(){a(["first","second line","third line","fourth line","fifth"],new i(5,6,5,6),["first","second line","third line","fifth","fourth line"],new i(4,6,4,6))}),test("issue #1322c: move last line selected up",function(){a(["first","second line","third line","fourth line","fifth"],new i(5,6,5,1),["first","second line","third line","fifth","fourth line"],new i(4,6,4,1))}),test("move last line up",function(){a(["first","second line","third line","fourth line","fifth"],new i(5,1,5,1),["first","second line","third line","fifth","fourth line"],new i(4,1,4,1))}),test("move 4th line down",function(){u(["first","second line","third line","fourth line","fifth"],new i(4,1,4,1),["first","second line","third line","fifth","fourth line"],new i(5,1,5,1))}),test("move multiple lines down",function(){u(["first","second line","third line","fourth line","fifth"],new i(4,4,2,2),["first","fifth","second line","third line","fourth line"],new i(5,4,3,2))}),test("invisible selection is ignored",function(){u(["first","second line","third line","fourth line","fifth"],new i(2,1,1,1),["second line","first","third line","fourth line","fifth"],new i(3,1,2,1))})});let f=class extends L{languageId="moveLinesIndentMode";constructor(n,e,t){super(),this._register(e.registerLanguage({id:this.languageId})),this._register(t.register(this.languageId,{indentationRules:n}))}};f=m([d(1,b),d(2,C)],f),suite("Editor contrib - Move Lines Command honors Indentation Rules",()=>{w();const s={decreaseIndentPattern:/^\s*((?!\S.*\/[*]).*[*]\/\s*)?[})\]]|^\s*(case\b.*|default):\s*(\/\/.*|\/[*].*[*]\/\s*)?$/,increaseIndentPattern:/(\{[^}"'`]*|\([^)"']*|\[[^\]"']*|^\s*(\{\}|\(\)|\[\]|(case\b.*|default):))\s*(\/\/.*|\/[*].*[*]\/\s*)?$/,indentNextLinePattern:/^\s*(for|while|if|else)\b(?!.*[;{}]\s*(\/\/.*|\/[*].*[*]\/\s*)?$)/,unIndentedLinePattern:/^(?!.*([;{}]|\S:)\s*(\/\/.*|\/[*].*[*]\/\s*)?$)(?!.*(\{[^}"']*|\([^)"']*|\[[^\]"']*|^\s*(\{\}|\(\)|\[\]|(case\b.*|default):))\s*(\/\/.*|\/[*].*[*]\/\s*)?$)(?!^\s*((?!\S.*\/[*]).*[*]\/\s*)?[})\]]|^\s*(case\b.*|default):\s*(\/\/.*|\/[*].*[*]\/\s*)?$)(?!^\s*(for|while|if|else)\b(?!.*[;{}]\s*(\/\/.*|\/[*].*[*]\/\s*)?$))/};test("first line indentation adjust to 0",()=>{const n=new v,e=new c,t=new f(s,n,e);U(t.languageId,["class X {","	z = 2","}"],new i(2,1,2,1),["z = 2","class X {","}"],new i(1,1,1,1),e),t.dispose(),n.dispose(),e.dispose()}),test("move lines across block",()=>{const n=new v,e=new c,t=new f(s,n,e);M(t.languageId,["const value = 2;","const standardLanguageDescriptions = [","    {","        diagnosticSource: 'js',","    }","];"],new i(1,1,1,1),["const standardLanguageDescriptions = [","    const value = 2;","    {","        diagnosticSource: 'js',","    }","];"],new i(2,5,2,5),e),t.dispose(),n.dispose(),e.dispose()}),test("move line should still work as before if there is no indentation rules",()=>{U(null,["if (true) {","    var task = new Task(() => {","        var work = 1234;","    });","}"],new i(3,1,3,1),["if (true) {","        var work = 1234;","    var task = new Task(() => {","    });","}"],new i(2,1,2,1))})});let g=class extends L{languageId="moveLinesEnterMode";constructor(n,e){super(),this._register(n.registerLanguage({id:this.languageId})),this._register(e.register(this.languageId,{indentationRules:{decreaseIndentPattern:/^\s*\[$/,increaseIndentPattern:/^\s*\]$/},brackets:[["{","}"]]}))}};g=m([d(0,b),d(1,C)],g),suite("Editor - contrib - Move Lines Command honors onEnter Rules",()=>{w(),test("issue #54829. move block across block",()=>{const s=new v,n=new c,e=new g(s,n);M(e.languageId,["if (true) {","    if (false) {","        if (1) {","            console.log('b');","        }","        console.log('a');","    }","}"],new i(3,9,5,10),["if (true) {","    if (false) {","        console.log('a');","        if (1) {","            console.log('b');","        }","    }","}"],new i(4,9,6,10),n),e.dispose(),s.dispose(),n.dispose()})});
