{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/linesOperations/browser/copyLinesCommand.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Range } from \"../../../common/core/range.js\";\nimport {\n\tSelection,\n\tSelectionDirection,\n} from \"../../../common/core/selection.js\";\nimport type {\n\tICommand,\n\tICursorStateComputerData,\n\tIEditOperationBuilder,\n} from \"../../../common/editorCommon.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\n\nexport class CopyLinesCommand implements ICommand {\n\tprivate readonly _selection: Selection;\n\tprivate readonly _isCopyingDown: boolean;\n\tprivate readonly _noop: boolean;\n\n\tprivate _selectionDirection: SelectionDirection;\n\tprivate _selectionId: string | null;\n\tprivate _startLineNumberDelta: number;\n\tprivate _endLineNumberDelta: number;\n\n\tconstructor(selection: Selection, isCopyingDown: boolean, noop?: boolean) {\n\t\tthis._selection = selection;\n\t\tthis._isCopyingDown = isCopyingDown;\n\t\tthis._noop = noop || false;\n\t\tthis._selectionDirection = SelectionDirection.LTR;\n\t\tthis._selectionId = null;\n\t\tthis._startLineNumberDelta = 0;\n\t\tthis._endLineNumberDelta = 0;\n\t}\n\n\tpublic getEditOperations(\n\t\tmodel: ITextModel,\n\t\tbuilder: IEditOperationBuilder,\n\t): void {\n\t\tlet s = this._selection;\n\n\t\tthis._startLineNumberDelta = 0;\n\t\tthis._endLineNumberDelta = 0;\n\t\tif (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n\t\t\tthis._endLineNumberDelta = 1;\n\t\t\ts = s.setEndPosition(\n\t\t\t\ts.endLineNumber - 1,\n\t\t\t\tmodel.getLineMaxColumn(s.endLineNumber - 1),\n\t\t\t);\n\t\t}\n\n\t\tconst sourceLines: string[] = [];\n\t\tfor (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n\t\t\tsourceLines.push(model.getLineContent(i));\n\t\t}\n\t\tconst sourceText = sourceLines.join(\"\\n\");\n\n\t\tif (sourceText === \"\") {\n\t\t\t// Duplicating empty line\n\t\t\tif (this._isCopyingDown) {\n\t\t\t\tthis._startLineNumberDelta++;\n\t\t\t\tthis._endLineNumberDelta++;\n\t\t\t}\n\t\t}\n\n\t\tif (this._noop) {\n\t\t\tbuilder.addEditOperation(\n\t\t\t\tnew Range(\n\t\t\t\t\ts.endLineNumber,\n\t\t\t\t\tmodel.getLineMaxColumn(s.endLineNumber),\n\t\t\t\t\ts.endLineNumber + 1,\n\t\t\t\t\t1,\n\t\t\t\t),\n\t\t\t\ts.endLineNumber === model.getLineCount() ? \"\" : \"\\n\",\n\t\t\t);\n\t\t} else if (this._isCopyingDown) {\n\t\t\tbuilder.addEditOperation(\n\t\t\t\tnew Range(s.startLineNumber, 1, s.startLineNumber, 1),\n\t\t\t\tsourceText + \"\\n\",\n\t\t\t);\n\t\t} else {\n\t\t\tbuilder.addEditOperation(\n\t\t\t\tnew Range(\n\t\t\t\t\ts.endLineNumber,\n\t\t\t\t\tmodel.getLineMaxColumn(s.endLineNumber),\n\t\t\t\t\ts.endLineNumber,\n\t\t\t\t\tmodel.getLineMaxColumn(s.endLineNumber),\n\t\t\t\t),\n\t\t\t\t\"\\n\" + sourceText,\n\t\t\t);\n\t\t}\n\n\t\tthis._selectionId = builder.trackSelection(s);\n\t\tthis._selectionDirection = this._selection.getDirection();\n\t}\n\n\tpublic computeCursorState(\n\t\tmodel: ITextModel,\n\t\thelper: ICursorStateComputerData,\n\t): Selection {\n\t\tlet result = helper.getTrackedSelection(this._selectionId!);\n\n\t\tif (\n\t\t\tthis._startLineNumberDelta !== 0 ||\n\t\t\tthis._endLineNumberDelta !== 0\n\t\t) {\n\t\t\tlet startLineNumber = result.startLineNumber;\n\t\t\tlet startColumn = result.startColumn;\n\t\t\tlet endLineNumber = result.endLineNumber;\n\t\t\tlet endColumn = result.endColumn;\n\n\t\t\tif (this._startLineNumberDelta !== 0) {\n\t\t\t\tstartLineNumber = startLineNumber + this._startLineNumberDelta;\n\t\t\t\tstartColumn = 1;\n\t\t\t}\n\n\t\t\tif (this._endLineNumberDelta !== 0) {\n\t\t\t\tendLineNumber = endLineNumber + this._endLineNumberDelta;\n\t\t\t\tendColumn = 1;\n\t\t\t}\n\n\t\t\tresult = Selection.createWithDirection(\n\t\t\t\tstartLineNumber,\n\t\t\t\tstartColumn,\n\t\t\t\tendLineNumber,\n\t\t\t\tendColumn,\n\t\t\t\tthis._selectionDirection,\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AACtB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAQA,MAAM,iBAAqC;AAAA,EAjBlD,OAiBkD;AAAA;AAAA;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EAET;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAER,YAAY,WAAsB,eAAwB,MAAgB;AACzE,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,QAAQ,QAAQ;AACrB,SAAK,sBAAsB,mBAAmB;AAC9C,SAAK,eAAe;AACpB,SAAK,wBAAwB;AAC7B,SAAK,sBAAsB;AAAA,EAC5B;AAAA,EAEO,kBACN,OACA,SACO;AACP,QAAI,IAAI,KAAK;AAEb,SAAK,wBAAwB;AAC7B,SAAK,sBAAsB;AAC3B,QAAI,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,cAAc,GAAG;AAC7D,WAAK,sBAAsB;AAC3B,UAAI,EAAE;AAAA,QACL,EAAE,gBAAgB;AAAA,QAClB,MAAM,iBAAiB,EAAE,gBAAgB,CAAC;AAAA,MAC3C;AAAA,IACD;AAEA,UAAM,cAAwB,CAAC;AAC/B,aAAS,IAAI,EAAE,iBAAiB,KAAK,EAAE,eAAe,KAAK;AAC1D,kBAAY,KAAK,MAAM,eAAe,CAAC,CAAC;AAAA,IACzC;AACA,UAAM,aAAa,YAAY,KAAK,IAAI;AAExC,QAAI,eAAe,IAAI;AAEtB,UAAI,KAAK,gBAAgB;AACxB,aAAK;AACL,aAAK;AAAA,MACN;AAAA,IACD;AAEA,QAAI,KAAK,OAAO;AACf,cAAQ;AAAA,QACP,IAAI;AAAA,UACH,EAAE;AAAA,UACF,MAAM,iBAAiB,EAAE,aAAa;AAAA,UACtC,EAAE,gBAAgB;AAAA,UAClB;AAAA,QACD;AAAA,QACA,EAAE,kBAAkB,MAAM,aAAa,IAAI,KAAK;AAAA,MACjD;AAAA,IACD,WAAW,KAAK,gBAAgB;AAC/B,cAAQ;AAAA,QACP,IAAI,MAAM,EAAE,iBAAiB,GAAG,EAAE,iBAAiB,CAAC;AAAA,QACpD,aAAa;AAAA,MACd;AAAA,IACD,OAAO;AACN,cAAQ;AAAA,QACP,IAAI;AAAA,UACH,EAAE;AAAA,UACF,MAAM,iBAAiB,EAAE,aAAa;AAAA,UACtC,EAAE;AAAA,UACF,MAAM,iBAAiB,EAAE,aAAa;AAAA,QACvC;AAAA,QACA,OAAO;AAAA,MACR;AAAA,IACD;AAEA,SAAK,eAAe,QAAQ,eAAe,CAAC;AAC5C,SAAK,sBAAsB,KAAK,WAAW,aAAa;AAAA,EACzD;AAAA,EAEO,mBACN,OACA,QACY;AACZ,QAAI,SAAS,OAAO,oBAAoB,KAAK,YAAa;AAE1D,QACC,KAAK,0BAA0B,KAC/B,KAAK,wBAAwB,GAC5B;AACD,UAAI,kBAAkB,OAAO;AAC7B,UAAI,cAAc,OAAO;AACzB,UAAI,gBAAgB,OAAO;AAC3B,UAAI,YAAY,OAAO;AAEvB,UAAI,KAAK,0BAA0B,GAAG;AACrC,0BAAkB,kBAAkB,KAAK;AACzC,sBAAc;AAAA,MACf;AAEA,UAAI,KAAK,wBAAwB,GAAG;AACnC,wBAAgB,gBAAgB,KAAK;AACrC,oBAAY;AAAA,MACb;AAEA,eAAS,UAAU;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;",
  "names": []
}
