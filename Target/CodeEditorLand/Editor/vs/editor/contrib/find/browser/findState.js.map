{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/find/browser/findState.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { MATCHES_LIMIT } from \"./findModel.js\";\n\nexport interface FindReplaceStateChangedEvent {\n\tmoveCursor: boolean;\n\tupdateHistory: boolean;\n\n\tsearchString: boolean;\n\treplaceString: boolean;\n\tisRevealed: boolean;\n\tisReplaceRevealed: boolean;\n\tisRegex: boolean;\n\twholeWord: boolean;\n\tmatchCase: boolean;\n\tpreserveCase: boolean;\n\tsearchScope: boolean;\n\tmatchesPosition: boolean;\n\tmatchesCount: boolean;\n\tcurrentMatch: boolean;\n\tloop: boolean;\n\tisSearching: boolean;\n\tfilters: boolean;\n}\n\nexport enum FindOptionOverride {\n\tNotSet = 0,\n\tTrue = 1,\n\tFalse = 2,\n}\n\nexport interface INewFindReplaceState<\n\tT extends { update: (value: T) => void } = { update: () => {} },\n> {\n\tsearchString?: string;\n\treplaceString?: string;\n\tisRevealed?: boolean;\n\tisReplaceRevealed?: boolean;\n\tisRegex?: boolean;\n\tisRegexOverride?: FindOptionOverride;\n\twholeWord?: boolean;\n\twholeWordOverride?: FindOptionOverride;\n\tmatchCase?: boolean;\n\tmatchCaseOverride?: FindOptionOverride;\n\tpreserveCase?: boolean;\n\tpreserveCaseOverride?: FindOptionOverride;\n\tsearchScope?: Range[] | null;\n\tloop?: boolean;\n\tisSearching?: boolean;\n\tfilters?: T;\n}\n\nfunction effectiveOptionValue(\n\toverride: FindOptionOverride,\n\tvalue: boolean,\n): boolean {\n\tif (override === FindOptionOverride.True) {\n\t\treturn true;\n\t}\n\tif (override === FindOptionOverride.False) {\n\t\treturn false;\n\t}\n\treturn value;\n}\n\nexport class FindReplaceState<\n\tT extends { update: (value: T) => void } = { update: () => {} },\n> extends Disposable {\n\tprivate _searchString: string;\n\tprivate _replaceString: string;\n\tprivate _isRevealed: boolean;\n\tprivate _isReplaceRevealed: boolean;\n\tprivate _isRegex: boolean;\n\tprivate _isRegexOverride: FindOptionOverride;\n\tprivate _wholeWord: boolean;\n\tprivate _wholeWordOverride: FindOptionOverride;\n\tprivate _matchCase: boolean;\n\tprivate _matchCaseOverride: FindOptionOverride;\n\tprivate _preserveCase: boolean;\n\tprivate _preserveCaseOverride: FindOptionOverride;\n\tprivate _searchScope: Range[] | null;\n\tprivate _matchesPosition: number;\n\tprivate _matchesCount: number;\n\tprivate _currentMatch: Range | null;\n\tprivate _loop: boolean;\n\tprivate _isSearching: boolean;\n\tprivate _filters: T | null;\n\tprivate readonly _onFindReplaceStateChange = this._register(\n\t\tnew Emitter<FindReplaceStateChangedEvent>(),\n\t);\n\n\tpublic get searchString(): string {\n\t\treturn this._searchString;\n\t}\n\tpublic get replaceString(): string {\n\t\treturn this._replaceString;\n\t}\n\tpublic get isRevealed(): boolean {\n\t\treturn this._isRevealed;\n\t}\n\tpublic get isReplaceRevealed(): boolean {\n\t\treturn this._isReplaceRevealed;\n\t}\n\tpublic get isRegex(): boolean {\n\t\treturn effectiveOptionValue(this._isRegexOverride, this._isRegex);\n\t}\n\tpublic get wholeWord(): boolean {\n\t\treturn effectiveOptionValue(this._wholeWordOverride, this._wholeWord);\n\t}\n\tpublic get matchCase(): boolean {\n\t\treturn effectiveOptionValue(this._matchCaseOverride, this._matchCase);\n\t}\n\tpublic get preserveCase(): boolean {\n\t\treturn effectiveOptionValue(\n\t\t\tthis._preserveCaseOverride,\n\t\t\tthis._preserveCase,\n\t\t);\n\t}\n\n\tpublic get actualIsRegex(): boolean {\n\t\treturn this._isRegex;\n\t}\n\tpublic get actualWholeWord(): boolean {\n\t\treturn this._wholeWord;\n\t}\n\tpublic get actualMatchCase(): boolean {\n\t\treturn this._matchCase;\n\t}\n\tpublic get actualPreserveCase(): boolean {\n\t\treturn this._preserveCase;\n\t}\n\n\tpublic get searchScope(): Range[] | null {\n\t\treturn this._searchScope;\n\t}\n\tpublic get matchesPosition(): number {\n\t\treturn this._matchesPosition;\n\t}\n\tpublic get matchesCount(): number {\n\t\treturn this._matchesCount;\n\t}\n\tpublic get currentMatch(): Range | null {\n\t\treturn this._currentMatch;\n\t}\n\tpublic get isSearching(): boolean {\n\t\treturn this._isSearching;\n\t}\n\tpublic get filters(): T | null {\n\t\treturn this._filters;\n\t}\n\tpublic readonly onFindReplaceStateChange: Event<FindReplaceStateChangedEvent> =\n\t\tthis._onFindReplaceStateChange.event;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._searchString = \"\";\n\t\tthis._replaceString = \"\";\n\t\tthis._isRevealed = false;\n\t\tthis._isReplaceRevealed = false;\n\t\tthis._isRegex = false;\n\t\tthis._isRegexOverride = FindOptionOverride.NotSet;\n\t\tthis._wholeWord = false;\n\t\tthis._wholeWordOverride = FindOptionOverride.NotSet;\n\t\tthis._matchCase = false;\n\t\tthis._matchCaseOverride = FindOptionOverride.NotSet;\n\t\tthis._preserveCase = false;\n\t\tthis._preserveCaseOverride = FindOptionOverride.NotSet;\n\t\tthis._searchScope = null;\n\t\tthis._matchesPosition = 0;\n\t\tthis._matchesCount = 0;\n\t\tthis._currentMatch = null;\n\t\tthis._loop = true;\n\t\tthis._isSearching = false;\n\t\tthis._filters = null;\n\t}\n\n\tpublic changeMatchInfo(\n\t\tmatchesPosition: number,\n\t\tmatchesCount: number,\n\t\tcurrentMatch: Range | undefined,\n\t): void {\n\t\tconst changeEvent: FindReplaceStateChangedEvent = {\n\t\t\tmoveCursor: false,\n\t\t\tupdateHistory: false,\n\t\t\tsearchString: false,\n\t\t\treplaceString: false,\n\t\t\tisRevealed: false,\n\t\t\tisReplaceRevealed: false,\n\t\t\tisRegex: false,\n\t\t\twholeWord: false,\n\t\t\tmatchCase: false,\n\t\t\tpreserveCase: false,\n\t\t\tsearchScope: false,\n\t\t\tmatchesPosition: false,\n\t\t\tmatchesCount: false,\n\t\t\tcurrentMatch: false,\n\t\t\tloop: false,\n\t\t\tisSearching: false,\n\t\t\tfilters: false,\n\t\t};\n\t\tlet somethingChanged = false;\n\n\t\tif (matchesCount === 0) {\n\t\t\tmatchesPosition = 0;\n\t\t}\n\t\tif (matchesPosition > matchesCount) {\n\t\t\tmatchesPosition = matchesCount;\n\t\t}\n\n\t\tif (this._matchesPosition !== matchesPosition) {\n\t\t\tthis._matchesPosition = matchesPosition;\n\t\t\tchangeEvent.matchesPosition = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\t\tif (this._matchesCount !== matchesCount) {\n\t\t\tthis._matchesCount = matchesCount;\n\t\t\tchangeEvent.matchesCount = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (typeof currentMatch !== \"undefined\") {\n\t\t\tif (!Range.equalsRange(this._currentMatch, currentMatch)) {\n\t\t\t\tthis._currentMatch = currentMatch;\n\t\t\t\tchangeEvent.currentMatch = true;\n\t\t\t\tsomethingChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (somethingChanged) {\n\t\t\tthis._onFindReplaceStateChange.fire(changeEvent);\n\t\t}\n\t}\n\n\tpublic change(\n\t\tnewState: INewFindReplaceState<T>,\n\t\tmoveCursor: boolean,\n\t\tupdateHistory = true,\n\t): void {\n\t\tconst changeEvent: FindReplaceStateChangedEvent = {\n\t\t\tmoveCursor: moveCursor,\n\t\t\tupdateHistory: updateHistory,\n\t\t\tsearchString: false,\n\t\t\treplaceString: false,\n\t\t\tisRevealed: false,\n\t\t\tisReplaceRevealed: false,\n\t\t\tisRegex: false,\n\t\t\twholeWord: false,\n\t\t\tmatchCase: false,\n\t\t\tpreserveCase: false,\n\t\t\tsearchScope: false,\n\t\t\tmatchesPosition: false,\n\t\t\tmatchesCount: false,\n\t\t\tcurrentMatch: false,\n\t\t\tloop: false,\n\t\t\tisSearching: false,\n\t\t\tfilters: false,\n\t\t};\n\t\tlet somethingChanged = false;\n\n\t\tconst oldEffectiveIsRegex = this.isRegex;\n\t\tconst oldEffectiveWholeWords = this.wholeWord;\n\t\tconst oldEffectiveMatchCase = this.matchCase;\n\t\tconst oldEffectivePreserveCase = this.preserveCase;\n\n\t\tif (typeof newState.searchString !== \"undefined\") {\n\t\t\tif (this._searchString !== newState.searchString) {\n\t\t\t\tthis._searchString = newState.searchString;\n\t\t\t\tchangeEvent.searchString = true;\n\t\t\t\tsomethingChanged = true;\n\t\t\t}\n\t\t}\n\t\tif (typeof newState.replaceString !== \"undefined\") {\n\t\t\tif (this._replaceString !== newState.replaceString) {\n\t\t\t\tthis._replaceString = newState.replaceString;\n\t\t\t\tchangeEvent.replaceString = true;\n\t\t\t\tsomethingChanged = true;\n\t\t\t}\n\t\t}\n\t\tif (typeof newState.isRevealed !== \"undefined\") {\n\t\t\tif (this._isRevealed !== newState.isRevealed) {\n\t\t\t\tthis._isRevealed = newState.isRevealed;\n\t\t\t\tchangeEvent.isRevealed = true;\n\t\t\t\tsomethingChanged = true;\n\t\t\t}\n\t\t}\n\t\tif (typeof newState.isReplaceRevealed !== \"undefined\") {\n\t\t\tif (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n\t\t\t\tthis._isReplaceRevealed = newState.isReplaceRevealed;\n\t\t\t\tchangeEvent.isReplaceRevealed = true;\n\t\t\t\tsomethingChanged = true;\n\t\t\t}\n\t\t}\n\t\tif (typeof newState.isRegex !== \"undefined\") {\n\t\t\tthis._isRegex = newState.isRegex;\n\t\t}\n\t\tif (typeof newState.wholeWord !== \"undefined\") {\n\t\t\tthis._wholeWord = newState.wholeWord;\n\t\t}\n\t\tif (typeof newState.matchCase !== \"undefined\") {\n\t\t\tthis._matchCase = newState.matchCase;\n\t\t}\n\t\tif (typeof newState.preserveCase !== \"undefined\") {\n\t\t\tthis._preserveCase = newState.preserveCase;\n\t\t}\n\t\tif (typeof newState.searchScope !== \"undefined\") {\n\t\t\tif (\n\t\t\t\t!newState.searchScope?.every((newSearchScope) => {\n\t\t\t\t\treturn this._searchScope?.some((existingSearchScope) => {\n\t\t\t\t\t\treturn !Range.equalsRange(\n\t\t\t\t\t\t\texistingSearchScope,\n\t\t\t\t\t\t\tnewSearchScope,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\tthis._searchScope = newState.searchScope;\n\t\t\t\tchangeEvent.searchScope = true;\n\t\t\t\tsomethingChanged = true;\n\t\t\t}\n\t\t}\n\t\tif (typeof newState.loop !== \"undefined\") {\n\t\t\tif (this._loop !== newState.loop) {\n\t\t\t\tthis._loop = newState.loop;\n\t\t\t\tchangeEvent.loop = true;\n\t\t\t\tsomethingChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newState.isSearching !== \"undefined\") {\n\t\t\tif (this._isSearching !== newState.isSearching) {\n\t\t\t\tthis._isSearching = newState.isSearching;\n\t\t\t\tchangeEvent.isSearching = true;\n\t\t\t\tsomethingChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newState.filters !== \"undefined\") {\n\t\t\tif (this._filters) {\n\t\t\t\tthis._filters.update(newState.filters);\n\t\t\t} else {\n\t\t\t\tthis._filters = newState.filters;\n\t\t\t}\n\n\t\t\tchangeEvent.filters = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\t// Overrides get set when they explicitly come in and get reset anytime something else changes\n\t\tthis._isRegexOverride =\n\t\t\ttypeof newState.isRegexOverride !== \"undefined\"\n\t\t\t\t? newState.isRegexOverride\n\t\t\t\t: FindOptionOverride.NotSet;\n\t\tthis._wholeWordOverride =\n\t\t\ttypeof newState.wholeWordOverride !== \"undefined\"\n\t\t\t\t? newState.wholeWordOverride\n\t\t\t\t: FindOptionOverride.NotSet;\n\t\tthis._matchCaseOverride =\n\t\t\ttypeof newState.matchCaseOverride !== \"undefined\"\n\t\t\t\t? newState.matchCaseOverride\n\t\t\t\t: FindOptionOverride.NotSet;\n\t\tthis._preserveCaseOverride =\n\t\t\ttypeof newState.preserveCaseOverride !== \"undefined\"\n\t\t\t\t? newState.preserveCaseOverride\n\t\t\t\t: FindOptionOverride.NotSet;\n\n\t\tif (oldEffectiveIsRegex !== this.isRegex) {\n\t\t\tsomethingChanged = true;\n\t\t\tchangeEvent.isRegex = true;\n\t\t}\n\t\tif (oldEffectiveWholeWords !== this.wholeWord) {\n\t\t\tsomethingChanged = true;\n\t\t\tchangeEvent.wholeWord = true;\n\t\t}\n\t\tif (oldEffectiveMatchCase !== this.matchCase) {\n\t\t\tsomethingChanged = true;\n\t\t\tchangeEvent.matchCase = true;\n\t\t}\n\n\t\tif (oldEffectivePreserveCase !== this.preserveCase) {\n\t\t\tsomethingChanged = true;\n\t\t\tchangeEvent.preserveCase = true;\n\t\t}\n\n\t\tif (somethingChanged) {\n\t\t\tthis._onFindReplaceStateChange.fire(changeEvent);\n\t\t}\n\t}\n\n\tpublic canNavigateBack(): boolean {\n\t\treturn this.canNavigateInLoop() || this.matchesPosition !== 1;\n\t}\n\n\tpublic canNavigateForward(): boolean {\n\t\treturn (\n\t\t\tthis.canNavigateInLoop() || this.matchesPosition < this.matchesCount\n\t\t);\n\t}\n\n\tprivate canNavigateInLoop(): boolean {\n\t\treturn this._loop || this.matchesCount >= MATCHES_LIMIT;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["FindOptionOverride"]
}
