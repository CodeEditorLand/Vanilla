{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/find/browser/findDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\tminimapFindMatch,\n\toverviewRulerFindMatchForeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { themeColorFromId } from \"../../../../platform/theme/common/themeService.js\";\nimport type { IActiveCodeEditor } from \"../../../browser/editorBrowser.js\";\nimport type { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport {\n\ttype FindMatch,\n\ttype IModelDecorationsChangeAccessor,\n\ttype IModelDeltaDecoration,\n\tMinimapPosition,\n\tOverviewRulerLane,\n\tTrackedRangeStickiness,\n} from \"../../../common/model.js\";\nimport { ModelDecorationOptions } from \"../../../common/model/textModel.js\";\n\nexport class FindDecorations implements IDisposable {\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate _decorations: string[];\n\tprivate _overviewRulerApproximateDecorations: string[];\n\tprivate _findScopeDecorationIds: string[];\n\tprivate _rangeHighlightDecorationId: string | null;\n\tprivate _highlightedDecorationId: string | null;\n\tprivate _startPosition: Position;\n\n\tconstructor(editor: IActiveCodeEditor) {\n\t\tthis._editor = editor;\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationIds = [];\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t\tthis._startPosition = this._editor.getPosition();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._editor.removeDecorations(this._allDecorations());\n\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationIds = [];\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationIds = [];\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._decorations.length;\n\t}\n\n\t/** @deprecated use getFindScopes to support multiple selections */\n\tpublic getFindScope(): Range | null {\n\t\tif (this._findScopeDecorationIds[0]) {\n\t\t\treturn this._editor\n\t\t\t\t.getModel()\n\t\t\t\t.getDecorationRange(this._findScopeDecorationIds[0]);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getFindScopes(): Range[] | null {\n\t\tif (this._findScopeDecorationIds.length) {\n\t\t\tconst scopes = this._findScopeDecorationIds\n\t\t\t\t.map((findScopeDecorationId) =>\n\t\t\t\t\tthis._editor\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t.getDecorationRange(findScopeDecorationId),\n\t\t\t\t)\n\t\t\t\t.filter((element) => !!element);\n\t\t\tif (scopes.length) {\n\t\t\t\treturn scopes as Range[];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getStartPosition(): Position {\n\t\treturn this._startPosition;\n\t}\n\n\tpublic setStartPosition(newStartPosition: Position): void {\n\t\tthis._startPosition = newStartPosition;\n\t\tthis.setCurrentFindMatch(null);\n\t}\n\n\tprivate _getDecorationIndex(decorationId: string): number {\n\t\tconst index = this._decorations.indexOf(decorationId);\n\t\tif (index >= 0) {\n\t\t\treturn index + 1;\n\t\t}\n\t\treturn 1;\n\t}\n\n\tpublic getDecorationRangeAt(index: number): Range | null {\n\t\tconst decorationId =\n\t\t\tindex < this._decorations.length ? this._decorations[index] : null;\n\t\tif (decorationId) {\n\t\t\treturn this._editor.getModel().getDecorationRange(decorationId);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getCurrentMatchesPosition(desiredRange: Range): number {\n\t\tconst candidates = this._editor\n\t\t\t.getModel()\n\t\t\t.getDecorationsInRange(desiredRange);\n\t\tfor (const candidate of candidates) {\n\t\t\tconst candidateOpts = candidate.options;\n\t\t\tif (\n\t\t\t\tcandidateOpts === FindDecorations._FIND_MATCH_DECORATION ||\n\t\t\t\tcandidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION\n\t\t\t) {\n\t\t\t\treturn this._getDecorationIndex(candidate.id);\n\t\t\t}\n\t\t}\n\t\t// We don't know the current match position, so returns zero to show '?' in find widget\n\t\treturn 0;\n\t}\n\n\tpublic setCurrentFindMatch(nextMatch: Range | null): number {\n\t\tlet newCurrentDecorationId: string | null = null;\n\t\tlet matchPosition = 0;\n\t\tif (nextMatch) {\n\t\t\tfor (let i = 0, len = this._decorations.length; i < len; i++) {\n\t\t\t\tconst range = this._editor\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.getDecorationRange(this._decorations[i]);\n\t\t\t\tif (nextMatch.equalsRange(range)) {\n\t\t\t\t\tnewCurrentDecorationId = this._decorations[i];\n\t\t\t\t\tmatchPosition = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis._highlightedDecorationId !== null ||\n\t\t\tnewCurrentDecorationId !== null\n\t\t) {\n\t\t\tthis._editor.changeDecorations(\n\t\t\t\t(changeAccessor: IModelDecorationsChangeAccessor) => {\n\t\t\t\t\tif (this._highlightedDecorationId !== null) {\n\t\t\t\t\t\tchangeAccessor.changeDecorationOptions(\n\t\t\t\t\t\t\tthis._highlightedDecorationId,\n\t\t\t\t\t\t\tFindDecorations._FIND_MATCH_DECORATION,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._highlightedDecorationId = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (newCurrentDecorationId !== null) {\n\t\t\t\t\t\tthis._highlightedDecorationId = newCurrentDecorationId;\n\t\t\t\t\t\tchangeAccessor.changeDecorationOptions(\n\t\t\t\t\t\t\tthis._highlightedDecorationId,\n\t\t\t\t\t\t\tFindDecorations._CURRENT_FIND_MATCH_DECORATION,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._rangeHighlightDecorationId !== null) {\n\t\t\t\t\t\tchangeAccessor.removeDecoration(\n\t\t\t\t\t\t\tthis._rangeHighlightDecorationId,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._rangeHighlightDecorationId = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (newCurrentDecorationId !== null) {\n\t\t\t\t\t\tlet rng = this._editor\n\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t.getDecorationRange(newCurrentDecorationId)!;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\trng.startLineNumber !== rng.endLineNumber &&\n\t\t\t\t\t\t\trng.endColumn === 1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst lineBeforeEnd = rng.endLineNumber - 1;\n\t\t\t\t\t\t\tconst lineBeforeEndMaxColumn = this._editor\n\t\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t\t.getLineMaxColumn(lineBeforeEnd);\n\t\t\t\t\t\t\trng = new Range(\n\t\t\t\t\t\t\t\trng.startLineNumber,\n\t\t\t\t\t\t\t\trng.startColumn,\n\t\t\t\t\t\t\t\tlineBeforeEnd,\n\t\t\t\t\t\t\t\tlineBeforeEndMaxColumn,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._rangeHighlightDecorationId =\n\t\t\t\t\t\t\tchangeAccessor.addDecoration(\n\t\t\t\t\t\t\t\trng,\n\t\t\t\t\t\t\t\tFindDecorations._RANGE_HIGHLIGHT_DECORATION,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\treturn matchPosition;\n\t}\n\n\tpublic set(findMatches: FindMatch[], findScopes: Range[] | null): void {\n\t\tthis._editor.changeDecorations((accessor) => {\n\t\t\tlet findMatchesOptions: ModelDecorationOptions =\n\t\t\t\tFindDecorations._FIND_MATCH_DECORATION;\n\t\t\tconst newOverviewRulerApproximateDecorations: IModelDeltaDecoration[] =\n\t\t\t\t[];\n\n\t\t\tif (findMatches.length > 1000) {\n\t\t\t\t// we go into a mode where the overview ruler gets \"approximate\" decorations\n\t\t\t\t// the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n\t\t\t\tfindMatchesOptions =\n\t\t\t\t\tFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n\n\t\t\t\t// approximate a distance in lines where matches should be merged\n\t\t\t\tconst lineCount = this._editor.getModel().getLineCount();\n\t\t\t\tconst height = this._editor.getLayoutInfo().height;\n\t\t\t\tconst approxPixelsPerLine = height / lineCount;\n\t\t\t\tconst mergeLinesDelta = Math.max(\n\t\t\t\t\t2,\n\t\t\t\t\tMath.ceil(3 / approxPixelsPerLine),\n\t\t\t\t);\n\n\t\t\t\t// merge decorations as much as possible\n\t\t\t\tlet prevStartLineNumber = findMatches[0].range.startLineNumber;\n\t\t\t\tlet prevEndLineNumber = findMatches[0].range.endLineNumber;\n\t\t\t\tfor (let i = 1, len = findMatches.length; i < len; i++) {\n\t\t\t\t\tconst range = findMatches[i].range;\n\t\t\t\t\tif (\n\t\t\t\t\t\tprevEndLineNumber + mergeLinesDelta >=\n\t\t\t\t\t\trange.startLineNumber\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (range.endLineNumber > prevEndLineNumber) {\n\t\t\t\t\t\t\tprevEndLineNumber = range.endLineNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewOverviewRulerApproximateDecorations.push({\n\t\t\t\t\t\t\trange: new Range(\n\t\t\t\t\t\t\t\tprevStartLineNumber,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\tprevEndLineNumber,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\toptions:\n\t\t\t\t\t\t\t\tFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprevStartLineNumber = range.startLineNumber;\n\t\t\t\t\t\tprevEndLineNumber = range.endLineNumber;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewOverviewRulerApproximateDecorations.push({\n\t\t\t\t\trange: new Range(\n\t\t\t\t\t\tprevStartLineNumber,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\tprevEndLineNumber,\n\t\t\t\t\t\t1,\n\t\t\t\t\t),\n\t\t\t\t\toptions:\n\t\t\t\t\t\tFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Find matches\n\t\t\tconst newFindMatchesDecorations: IModelDeltaDecoration[] =\n\t\t\t\tnew Array<IModelDeltaDecoration>(findMatches.length);\n\t\t\tfor (let i = 0, len = findMatches.length; i < len; i++) {\n\t\t\t\tnewFindMatchesDecorations[i] = {\n\t\t\t\t\trange: findMatches[i].range,\n\t\t\t\t\toptions: findMatchesOptions,\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis._decorations = accessor.deltaDecorations(\n\t\t\t\tthis._decorations,\n\t\t\t\tnewFindMatchesDecorations,\n\t\t\t);\n\n\t\t\t// Overview ruler approximate decorations\n\t\t\tthis._overviewRulerApproximateDecorations =\n\t\t\t\taccessor.deltaDecorations(\n\t\t\t\t\tthis._overviewRulerApproximateDecorations,\n\t\t\t\t\tnewOverviewRulerApproximateDecorations,\n\t\t\t\t);\n\n\t\t\t// Range highlight\n\t\t\tif (this._rangeHighlightDecorationId) {\n\t\t\t\taccessor.removeDecoration(this._rangeHighlightDecorationId);\n\t\t\t\tthis._rangeHighlightDecorationId = null;\n\t\t\t}\n\n\t\t\t// Find scope\n\t\t\tif (this._findScopeDecorationIds.length) {\n\t\t\t\tthis._findScopeDecorationIds.forEach((findScopeDecorationId) =>\n\t\t\t\t\taccessor.removeDecoration(findScopeDecorationId),\n\t\t\t\t);\n\t\t\t\tthis._findScopeDecorationIds = [];\n\t\t\t}\n\t\t\tif (findScopes?.length) {\n\t\t\t\tthis._findScopeDecorationIds = findScopes.map((findScope) =>\n\t\t\t\t\taccessor.addDecoration(\n\t\t\t\t\t\tfindScope,\n\t\t\t\t\t\tFindDecorations._FIND_SCOPE_DECORATION,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic matchBeforePosition(position: Position): Range | null {\n\t\tif (this._decorations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = this._decorations.length - 1; i >= 0; i--) {\n\t\t\tconst decorationId = this._decorations[i];\n\t\t\tconst r = this._editor.getModel().getDecorationRange(decorationId);\n\t\t\tif (!r || r.endLineNumber > position.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (r.endLineNumber < position.lineNumber) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tif (r.endColumn > position.column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\treturn this._editor\n\t\t\t.getModel()\n\t\t\t.getDecorationRange(\n\t\t\t\tthis._decorations[this._decorations.length - 1],\n\t\t\t);\n\t}\n\n\tpublic matchAfterPosition(position: Position): Range | null {\n\t\tif (this._decorations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = 0, len = this._decorations.length; i < len; i++) {\n\t\t\tconst decorationId = this._decorations[i];\n\t\t\tconst r = this._editor.getModel().getDecorationRange(decorationId);\n\t\t\tif (!r || r.startLineNumber < position.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (r.startLineNumber > position.lineNumber) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tif (r.startColumn < position.column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\treturn this._editor.getModel().getDecorationRange(this._decorations[0]);\n\t}\n\n\tprivate _allDecorations(): string[] {\n\t\tlet result: string[] = [];\n\t\tresult = result.concat(this._decorations);\n\t\tresult = result.concat(this._overviewRulerApproximateDecorations);\n\t\tif (this._findScopeDecorationIds.length) {\n\t\t\tresult.push(...this._findScopeDecorationIds);\n\t\t}\n\t\tif (this._rangeHighlightDecorationId) {\n\t\t\tresult.push(this._rangeHighlightDecorationId);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static readonly _CURRENT_FIND_MATCH_DECORATION =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"current-find-match\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tzIndex: 13,\n\t\t\tclassName: \"currentFindMatch\",\n\t\t\tinlineClassName: \"currentFindMatchInline\",\n\t\t\tshowIfCollapsed: true,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t},\n\t\t\tminimap: {\n\t\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\t\tposition: MinimapPosition.Inline,\n\t\t\t},\n\t\t});\n\n\tpublic static readonly _FIND_MATCH_DECORATION =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"find-match\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tzIndex: 10,\n\t\t\tclassName: \"findMatch\",\n\t\t\tinlineClassName: \"findMatchInline\",\n\t\t\tshowIfCollapsed: true,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t},\n\t\t\tminimap: {\n\t\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\t\tposition: MinimapPosition.Inline,\n\t\t\t},\n\t\t});\n\n\tpublic static readonly _FIND_MATCH_NO_OVERVIEW_DECORATION =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"find-match-no-overview\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tclassName: \"findMatch\",\n\t\t\tshowIfCollapsed: true,\n\t\t});\n\n\tprivate static readonly _FIND_MATCH_ONLY_OVERVIEW_DECORATION =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"find-match-only-overview\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t},\n\t\t});\n\n\tprivate static readonly _RANGE_HIGHLIGHT_DECORATION =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"find-range-highlight\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tclassName: \"rangeHighlight\",\n\t\t\tisWholeLine: true,\n\t\t});\n\n\tprivate static readonly _FIND_SCOPE_DECORATION =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"find-scope\",\n\t\t\tclassName: \"findScope\",\n\t\t\tisWholeLine: true,\n\t\t});\n}\n"],
  "mappings": "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",
  "names": []
}
