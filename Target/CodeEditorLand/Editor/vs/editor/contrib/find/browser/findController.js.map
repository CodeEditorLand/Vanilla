{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/find/browser/findController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Delayer } from \"../../../../base/common/async.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport * as strings from \"../../../../base/common/strings.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextViewService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport {\n\tIThemeService,\n\tthemeColorFromId,\n} from \"../../../../platform/theme/common/themeService.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorCommand,\n\tEditorContributionInstantiation,\n\tMultiEditorAction,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorCommand,\n\tregisterEditorContribution,\n\tregisterMultiEditorAction,\n} from \"../../../browser/editorExtensions.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { overviewRulerRangeHighlight } from \"../../../common/core/editorColorRegistry.js\";\nimport type { IRange } from \"../../../common/core/range.js\";\nimport type { Selection } from \"../../../common/core/selection.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport { OverviewRulerLane } from \"../../../common/model.js\";\nimport {\n\tCONTEXT_FIND_INPUT_FOCUSED,\n\tCONTEXT_FIND_WIDGET_VISIBLE,\n\tCONTEXT_REPLACE_INPUT_FOCUSED,\n\tFIND_IDS,\n\tFindModelBoundToEditorModel,\n\tToggleCaseSensitiveKeybinding,\n\tTogglePreserveCaseKeybinding,\n\tToggleRegexKeybinding,\n\tToggleSearchScopeKeybinding,\n\tToggleWholeWordKeybinding,\n} from \"./findModel.js\";\nimport { FindOptionsWidget } from \"./findOptionsWidget.js\";\nimport {\n\tFindReplaceState,\n\ttype FindReplaceStateChangedEvent,\n\ttype INewFindReplaceState,\n} from \"./findState.js\";\nimport { FindWidget, type IFindController } from \"./findWidget.js\";\n\nconst SEARCH_STRING_MAX_LENGTH = 524288;\n\nexport function getSelectionSearchString(\n\teditor: ICodeEditor,\n\tseedSearchStringFromSelection: \"single\" | \"multiple\" = \"single\",\n\tseedSearchStringFromNonEmptySelection = false,\n): string | null {\n\tif (!editor.hasModel()) {\n\t\treturn null;\n\t}\n\n\tconst selection = editor.getSelection();\n\t// if selection spans multiple lines, default search string to empty\n\n\tif (\n\t\t(seedSearchStringFromSelection === \"single\" &&\n\t\t\tselection.startLineNumber === selection.endLineNumber) ||\n\t\tseedSearchStringFromSelection === \"multiple\"\n\t) {\n\t\tif (selection.isEmpty()) {\n\t\t\tconst wordAtPosition = editor.getConfiguredWordAtPosition(\n\t\t\t\tselection.getStartPosition(),\n\t\t\t);\n\t\t\tif (\n\t\t\t\twordAtPosition &&\n\t\t\t\tseedSearchStringFromNonEmptySelection === false\n\t\t\t) {\n\t\t\t\treturn wordAtPosition.word;\n\t\t\t}\n\t\t} else if (\n\t\t\teditor.getModel().getValueLengthInRange(selection) <\n\t\t\tSEARCH_STRING_MAX_LENGTH\n\t\t) {\n\t\t\treturn editor.getModel().getValueInRange(selection);\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport enum FindStartFocusAction {\n\tNoFocusChange = 0,\n\tFocusFindInput = 1,\n\tFocusReplaceInput = 2,\n}\n\nexport interface IFindStartOptions {\n\tforceRevealReplace: boolean;\n\tseedSearchStringFromSelection: \"none\" | \"single\" | \"multiple\";\n\tseedSearchStringFromNonEmptySelection: boolean;\n\tseedSearchStringFromGlobalClipboard: boolean;\n\tshouldFocus: FindStartFocusAction;\n\tshouldAnimate: boolean;\n\tupdateSearchScope: boolean;\n\tloop: boolean;\n}\n\nexport interface IFindStartArguments {\n\tsearchString?: string;\n\treplaceString?: string;\n\tisRegex?: boolean;\n\tmatchWholeWord?: boolean;\n\tisCaseSensitive?: boolean;\n\tpreserveCase?: boolean;\n\tfindInSelection?: boolean;\n}\n\nexport class CommonFindController\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.contrib.findController\";\n\n\tprotected _editor: ICodeEditor;\n\tprivate readonly _findWidgetVisible: IContextKey<boolean>;\n\tprotected _state: FindReplaceState;\n\tprotected _updateHistoryDelayer: Delayer<void>;\n\tprivate _model: FindModelBoundToEditorModel | null;\n\tprotected readonly _storageService: IStorageService;\n\tprivate readonly _clipboardService: IClipboardService;\n\tprotected readonly _contextKeyService: IContextKeyService;\n\tprotected readonly _notificationService: INotificationService;\n\tprotected readonly _hoverService: IHoverService;\n\n\tget editor() {\n\t\treturn this._editor;\n\t}\n\n\tpublic static get(editor: ICodeEditor): CommonFindController | null {\n\t\treturn editor.getContribution<CommonFindController>(\n\t\t\tCommonFindController.ID,\n\t\t);\n\t}\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._findWidgetVisible =\n\t\t\tCONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n\t\tthis._contextKeyService = contextKeyService;\n\t\tthis._storageService = storageService;\n\t\tthis._clipboardService = clipboardService;\n\t\tthis._notificationService = notificationService;\n\t\tthis._hoverService = hoverService;\n\n\t\tthis._updateHistoryDelayer = new Delayer<void>(500);\n\t\tthis._state = this._register(new FindReplaceState());\n\t\tthis.loadQueryState();\n\t\tthis._register(\n\t\t\tthis._state.onFindReplaceStateChange((e) =>\n\t\t\t\tthis._onStateChanged(e),\n\t\t\t),\n\t\t);\n\n\t\tthis._model = null;\n\n\t\tthis._register(\n\t\t\tthis._editor.onDidChangeModel(() => {\n\t\t\t\tconst shouldRestartFind =\n\t\t\t\t\tthis._editor.getModel() && this._state.isRevealed;\n\n\t\t\t\tthis.disposeModel();\n\n\t\t\t\tthis._state.change(\n\t\t\t\t\t{\n\t\t\t\t\t\tsearchScope: null,\n\t\t\t\t\t\tmatchCase: this._storageService.getBoolean(\n\t\t\t\t\t\t\t\"editor.matchCase\",\n\t\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t),\n\t\t\t\t\t\twholeWord: this._storageService.getBoolean(\n\t\t\t\t\t\t\t\"editor.wholeWord\",\n\t\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tisRegex: this._storageService.getBoolean(\n\t\t\t\t\t\t\t\"editor.isRegex\",\n\t\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpreserveCase: this._storageService.getBoolean(\n\t\t\t\t\t\t\t\"editor.preserveCase\",\n\t\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\n\t\t\t\tif (shouldRestartFind) {\n\t\t\t\t\tthis._start({\n\t\t\t\t\t\tforceRevealReplace: false,\n\t\t\t\t\t\tseedSearchStringFromSelection: \"none\",\n\t\t\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\t\t\tshouldAnimate: false,\n\t\t\t\t\t\tupdateSearchScope: false,\n\t\t\t\t\t\tloop: this._editor.getOption(EditorOption.find).loop,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.disposeModel();\n\t\tsuper.dispose();\n\t}\n\n\tprivate disposeModel(): void {\n\t\tif (this._model) {\n\t\t\tthis._model.dispose();\n\t\t\tthis._model = null;\n\t\t}\n\t}\n\n\tprivate _onStateChanged(e: FindReplaceStateChangedEvent): void {\n\t\tthis.saveQueryState(e);\n\n\t\tif (e.isRevealed) {\n\t\t\tif (this._state.isRevealed) {\n\t\t\t\tthis._findWidgetVisible.set(true);\n\t\t\t} else {\n\t\t\t\tthis._findWidgetVisible.reset();\n\t\t\t\tthis.disposeModel();\n\t\t\t}\n\t\t}\n\t\tif (e.searchString) {\n\t\t\tthis.setGlobalBufferTerm(this._state.searchString);\n\t\t}\n\t}\n\n\tprivate saveQueryState(e: FindReplaceStateChangedEvent) {\n\t\tif (e.isRegex) {\n\t\t\tthis._storageService.store(\n\t\t\t\t\"editor.isRegex\",\n\t\t\t\tthis._state.actualIsRegex,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\t\tif (e.wholeWord) {\n\t\t\tthis._storageService.store(\n\t\t\t\t\"editor.wholeWord\",\n\t\t\t\tthis._state.actualWholeWord,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\t\tif (e.matchCase) {\n\t\t\tthis._storageService.store(\n\t\t\t\t\"editor.matchCase\",\n\t\t\t\tthis._state.actualMatchCase,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\t\tif (e.preserveCase) {\n\t\t\tthis._storageService.store(\n\t\t\t\t\"editor.preserveCase\",\n\t\t\t\tthis._state.actualPreserveCase,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate loadQueryState() {\n\t\tthis._state.change(\n\t\t\t{\n\t\t\t\tmatchCase: this._storageService.getBoolean(\n\t\t\t\t\t\"editor.matchCase\",\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\tthis._state.matchCase,\n\t\t\t\t),\n\t\t\t\twholeWord: this._storageService.getBoolean(\n\t\t\t\t\t\"editor.wholeWord\",\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\tthis._state.wholeWord,\n\t\t\t\t),\n\t\t\t\tisRegex: this._storageService.getBoolean(\n\t\t\t\t\t\"editor.isRegex\",\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\tthis._state.isRegex,\n\t\t\t\t),\n\t\t\t\tpreserveCase: this._storageService.getBoolean(\n\t\t\t\t\t\"editor.preserveCase\",\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\tthis._state.preserveCase,\n\t\t\t\t),\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\t}\n\n\tpublic isFindInputFocused(): boolean {\n\t\treturn !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n\t}\n\n\tpublic getState(): FindReplaceState {\n\t\treturn this._state;\n\t}\n\n\tpublic closeFindWidget(): void {\n\t\tthis._state.change(\n\t\t\t{\n\t\t\t\tisRevealed: false,\n\t\t\t\tsearchScope: null,\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\t\tthis._editor.focus();\n\t}\n\n\tpublic toggleCaseSensitive(): void {\n\t\tthis._state.change({ matchCase: !this._state.matchCase }, false);\n\t\tif (!this._state.isRevealed) {\n\t\t\tthis.highlightFindOptions();\n\t\t}\n\t}\n\n\tpublic toggleWholeWords(): void {\n\t\tthis._state.change({ wholeWord: !this._state.wholeWord }, false);\n\t\tif (!this._state.isRevealed) {\n\t\t\tthis.highlightFindOptions();\n\t\t}\n\t}\n\n\tpublic toggleRegex(): void {\n\t\tthis._state.change({ isRegex: !this._state.isRegex }, false);\n\t\tif (!this._state.isRevealed) {\n\t\t\tthis.highlightFindOptions();\n\t\t}\n\t}\n\n\tpublic togglePreserveCase(): void {\n\t\tthis._state.change({ preserveCase: !this._state.preserveCase }, false);\n\t\tif (!this._state.isRevealed) {\n\t\t\tthis.highlightFindOptions();\n\t\t}\n\t}\n\n\tpublic toggleSearchScope(): void {\n\t\tif (this._state.searchScope) {\n\t\t\tthis._state.change({ searchScope: null }, true);\n\t\t} else if (this._editor.hasModel()) {\n\t\t\tlet selections = this._editor.getSelections();\n\t\t\tselections = selections\n\t\t\t\t.map((selection) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tselection.endColumn === 1 &&\n\t\t\t\t\t\tselection.endLineNumber > selection.startLineNumber\n\t\t\t\t\t) {\n\t\t\t\t\t\tselection = selection.setEndPosition(\n\t\t\t\t\t\t\tselection.endLineNumber - 1,\n\t\t\t\t\t\t\tthis._editor\n\t\t\t\t\t\t\t\t.getModel()!\n\t\t\t\t\t\t\t\t.getLineMaxColumn(selection.endLineNumber - 1),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (!selection.isEmpty()) {\n\t\t\t\t\t\treturn selection;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t})\n\t\t\t\t.filter((element): element is Selection => !!element);\n\n\t\t\tif (selections.length) {\n\t\t\t\tthis._state.change({ searchScope: selections }, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setSearchString(searchString: string): void {\n\t\tif (this._state.isRegex) {\n\t\t\tsearchString = strings.escapeRegExpCharacters(searchString);\n\t\t}\n\t\tthis._state.change({ searchString: searchString }, false);\n\t}\n\n\tpublic highlightFindOptions(ignoreWhenVisible = false): void {\n\t\t// overwritten in subclass\n\t}\n\n\tprotected async _start(\n\t\topts: IFindStartOptions,\n\t\tnewState?: INewFindReplaceState,\n\t): Promise<void> {\n\t\tthis.disposeModel();\n\n\t\tif (!this._editor.hasModel()) {\n\t\t\t// cannot do anything with an editor that doesn't have a model...\n\t\t\treturn;\n\t\t}\n\n\t\tconst stateChanges: INewFindReplaceState = {\n\t\t\t...newState,\n\t\t\tisRevealed: true,\n\t\t};\n\n\t\tif (opts.seedSearchStringFromSelection === \"single\") {\n\t\t\tconst selectionSearchString = getSelectionSearchString(\n\t\t\t\tthis._editor,\n\t\t\t\topts.seedSearchStringFromSelection,\n\t\t\t\topts.seedSearchStringFromNonEmptySelection,\n\t\t\t);\n\t\t\tif (selectionSearchString) {\n\t\t\t\tif (this._state.isRegex) {\n\t\t\t\t\tstateChanges.searchString = strings.escapeRegExpCharacters(\n\t\t\t\t\t\tselectionSearchString,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tstateChanges.searchString = selectionSearchString;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (\n\t\t\topts.seedSearchStringFromSelection === \"multiple\" &&\n\t\t\t!opts.updateSearchScope\n\t\t) {\n\t\t\tconst selectionSearchString = getSelectionSearchString(\n\t\t\t\tthis._editor,\n\t\t\t\topts.seedSearchStringFromSelection,\n\t\t\t);\n\t\t\tif (selectionSearchString) {\n\t\t\t\tstateChanges.searchString = selectionSearchString;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!stateChanges.searchString &&\n\t\t\topts.seedSearchStringFromGlobalClipboard\n\t\t) {\n\t\t\tconst selectionSearchString = await this.getGlobalBufferTerm();\n\n\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\t// the editor has lost its model in the meantime\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (selectionSearchString) {\n\t\t\t\tstateChanges.searchString = selectionSearchString;\n\t\t\t}\n\t\t}\n\n\t\t// Overwrite isReplaceRevealed\n\t\tif (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n\t\t\tstateChanges.isReplaceRevealed = true;\n\t\t} else if (!this._findWidgetVisible.get()) {\n\t\t\tstateChanges.isReplaceRevealed = false;\n\t\t}\n\n\t\tif (opts.updateSearchScope) {\n\t\t\tconst currentSelections = this._editor.getSelections();\n\t\t\tif (currentSelections.some((selection) => !selection.isEmpty())) {\n\t\t\t\tstateChanges.searchScope = currentSelections;\n\t\t\t}\n\t\t}\n\n\t\tstateChanges.loop = opts.loop;\n\n\t\tthis._state.change(stateChanges, false);\n\n\t\tif (!this._model) {\n\t\t\tthis._model = new FindModelBoundToEditorModel(\n\t\t\t\tthis._editor,\n\t\t\t\tthis._state,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic start(\n\t\topts: IFindStartOptions,\n\t\tnewState?: INewFindReplaceState,\n\t): Promise<void> {\n\t\treturn this._start(opts, newState);\n\t}\n\n\tpublic moveToNextMatch(): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.moveToNextMatch();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic moveToPrevMatch(): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.moveToPrevMatch();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic goToMatch(index: number): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.moveToMatch(index);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic replace(): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.replace();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic replaceAll(): boolean {\n\t\tif (this._model) {\n\t\t\tif (this._editor.getModel()?.isTooLargeForHeapOperation()) {\n\t\t\t\tthis._notificationService.warn(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"too.large.for.replaceall\",\n\t\t\t\t\t\t\"The file is too large to perform a replace all operation.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._model.replaceAll();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic selectAllMatches(): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.selectAllMatches();\n\t\t\tthis._editor.focus();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic async getGlobalBufferTerm(): Promise<string> {\n\t\tif (\n\t\t\tthis._editor.getOption(EditorOption.find).globalFindClipboard &&\n\t\t\tthis._editor.hasModel() &&\n\t\t\t!this._editor.getModel().isTooLargeForSyncing()\n\t\t) {\n\t\t\treturn this._clipboardService.readFindText();\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tpublic setGlobalBufferTerm(text: string): void {\n\t\tif (\n\t\t\tthis._editor.getOption(EditorOption.find).globalFindClipboard &&\n\t\t\tthis._editor.hasModel() &&\n\t\t\t!this._editor.getModel().isTooLargeForSyncing()\n\t\t) {\n\t\t\t// intentionally not awaited\n\t\t\tthis._clipboardService.writeFindText(text);\n\t\t}\n\t}\n}\n\nexport class FindController\n\textends CommonFindController\n\timplements IFindController\n{\n\tprivate _widget: FindWidget | null;\n\tprivate _findOptionsWidget: FindOptionsWidget | null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextViewService private readonly _contextViewService: IContextViewService,\n\t\t@IContextKeyService _contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService _storageService: IStorageService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(editor, _contextKeyService, _storageService, clipboardService, notificationService, hoverService);\n\t\tthis._widget = null;\n\t\tthis._findOptionsWidget = null;\n\t}\n\n\tprotected override async _start(\n\t\topts: IFindStartOptions,\n\t\tnewState?: INewFindReplaceState,\n\t): Promise<void> {\n\t\tif (!this._widget) {\n\t\t\tthis._createFindWidget();\n\t\t}\n\n\t\tconst selection = this._editor.getSelection();\n\t\tlet updateSearchScope = false;\n\n\t\tswitch (this._editor.getOption(EditorOption.find).autoFindInSelection) {\n\t\t\tcase \"always\":\n\t\t\t\tupdateSearchScope = true;\n\t\t\t\tbreak;\n\t\t\tcase \"never\":\n\t\t\t\tupdateSearchScope = false;\n\t\t\t\tbreak;\n\t\t\tcase \"multiline\": {\n\t\t\t\tconst isSelectionMultipleLine =\n\t\t\t\t\t!!selection &&\n\t\t\t\t\tselection.startLineNumber !== selection.endLineNumber;\n\t\t\t\tupdateSearchScope = isSelectionMultipleLine;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\topts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n\n\t\tawait super._start(opts, newState);\n\n\t\tif (this._widget) {\n\t\t\tif (opts.shouldFocus === FindStartFocusAction.FocusReplaceInput) {\n\t\t\t\tthis._widget.focusReplaceInput();\n\t\t\t} else if (\n\t\t\t\topts.shouldFocus === FindStartFocusAction.FocusFindInput\n\t\t\t) {\n\t\t\t\tthis._widget.focusFindInput();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic override highlightFindOptions(ignoreWhenVisible = false): void {\n\t\tif (!this._widget) {\n\t\t\tthis._createFindWidget();\n\t\t}\n\t\tif (this._state.isRevealed && !ignoreWhenVisible) {\n\t\t\tthis._widget!.highlightFindOptions();\n\t\t} else {\n\t\t\tthis._findOptionsWidget!.highlightFindOptions();\n\t\t}\n\t}\n\n\tprivate _createFindWidget() {\n\t\tthis._widget = this._register(\n\t\t\tnew FindWidget(\n\t\t\t\tthis._editor,\n\t\t\t\tthis,\n\t\t\t\tthis._state,\n\t\t\t\tthis._contextViewService,\n\t\t\t\tthis._keybindingService,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\tthis._themeService,\n\t\t\t\tthis._storageService,\n\t\t\t\tthis._notificationService,\n\t\t\t\tthis._hoverService,\n\t\t\t),\n\t\t);\n\t\tthis._findOptionsWidget = this._register(\n\t\t\tnew FindOptionsWidget(\n\t\t\t\tthis._editor,\n\t\t\t\tthis._state,\n\t\t\t\tthis._keybindingService,\n\t\t\t),\n\t\t);\n\t}\n\n\tsaveViewState(): any {\n\t\treturn this._widget?.getViewState();\n\t}\n\n\trestoreViewState(state: any): void {\n\t\tthis._widget?.setViewState(state);\n\t}\n}\n\nexport const StartFindAction = registerMultiEditorAction(\n\tnew MultiEditorAction({\n\t\tid: FIND_IDS.StartFindAction,\n\t\tlabel: nls.localize(\"startFindAction\", \"Find\"),\n\t\talias: \"Find\",\n\t\tprecondition: ContextKeyExpr.or(\n\t\t\tEditorContextKeys.focus,\n\t\t\tContextKeyExpr.has(\"editorIsOpen\"),\n\t\t),\n\t\tkbOpts: {\n\t\t\tkbExpr: null,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t},\n\t\tmenuOpts: {\n\t\t\tmenuId: MenuId.MenubarEditMenu,\n\t\t\tgroup: \"3_find\",\n\t\t\ttitle: nls.localize(\n\t\t\t\t{ key: \"miFind\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Find\",\n\t\t\t),\n\t\t\torder: 1,\n\t\t},\n\t}),\n);\n\nStartFindAction.addImplementation(\n\t0,\n\t(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): boolean | Promise<void> => {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn false;\n\t\t}\n\t\treturn controller.start({\n\t\t\tforceRevealReplace: false,\n\t\t\tseedSearchStringFromSelection:\n\t\t\t\teditor.getOption(EditorOption.find)\n\t\t\t\t\t.seedSearchStringFromSelection !== \"never\"\n\t\t\t\t\t? \"single\"\n\t\t\t\t\t: \"none\",\n\t\t\tseedSearchStringFromNonEmptySelection:\n\t\t\t\teditor.getOption(EditorOption.find)\n\t\t\t\t\t.seedSearchStringFromSelection === \"selection\",\n\t\t\tseedSearchStringFromGlobalClipboard: editor.getOption(\n\t\t\t\tEditorOption.find,\n\t\t\t).globalFindClipboard,\n\t\t\tshouldFocus: FindStartFocusAction.FocusFindInput,\n\t\t\tshouldAnimate: true,\n\t\t\tupdateSearchScope: false,\n\t\t\tloop: editor.getOption(EditorOption.find).loop,\n\t\t});\n\t},\n);\n\nconst findArgDescription = {\n\tdescription: \"Open a new In-Editor Find Widget.\",\n\targs: [\n\t\t{\n\t\t\tname: \"Open a new In-Editor Find Widget args\",\n\t\t\tschema: {\n\t\t\t\tproperties: {\n\t\t\t\t\tsearchString: { type: \"string\" },\n\t\t\t\t\treplaceString: { type: \"string\" },\n\t\t\t\t\tisRegex: { type: \"boolean\" },\n\t\t\t\t\tmatchWholeWord: { type: \"boolean\" },\n\t\t\t\t\tisCaseSensitive: { type: \"boolean\" },\n\t\t\t\t\tpreserveCase: { type: \"boolean\" },\n\t\t\t\t\tfindInSelection: { type: \"boolean\" },\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n} as const;\n\nexport class StartFindWithArgsAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.StartFindWithArgs,\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"startFindWithArgsAction\",\n\t\t\t\t\"Find With Arguments\",\n\t\t\t),\n\t\t\talias: \"Find With Arguments\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: null,\n\t\t\t\tprimary: 0,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tmetadata: findArgDescription,\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | null,\n\t\teditor: ICodeEditor,\n\t\targs?: IFindStartArguments,\n\t): Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (controller) {\n\t\t\tconst newState: INewFindReplaceState = args\n\t\t\t\t? {\n\t\t\t\t\t\tsearchString: args.searchString,\n\t\t\t\t\t\treplaceString: args.replaceString,\n\t\t\t\t\t\tisReplaceRevealed: args.replaceString !== undefined,\n\t\t\t\t\t\tisRegex: args.isRegex,\n\t\t\t\t\t\t// isRegexOverride: args.regexOverride,\n\t\t\t\t\t\twholeWord: args.matchWholeWord,\n\t\t\t\t\t\t// wholeWordOverride: args.wholeWordOverride,\n\t\t\t\t\t\tmatchCase: args.isCaseSensitive,\n\t\t\t\t\t\t// matchCaseOverride: args.matchCaseOverride,\n\t\t\t\t\t\tpreserveCase: args.preserveCase,\n\t\t\t\t\t\t// preserveCaseOverride: args.preserveCaseOverride,\n\t\t\t\t\t}\n\t\t\t\t: {};\n\n\t\t\tawait controller.start(\n\t\t\t\t{\n\t\t\t\t\tforceRevealReplace: false,\n\t\t\t\t\tseedSearchStringFromSelection:\n\t\t\t\t\t\tcontroller.getState().searchString.length === 0 &&\n\t\t\t\t\t\teditor.getOption(EditorOption.find)\n\t\t\t\t\t\t\t.seedSearchStringFromSelection !== \"never\"\n\t\t\t\t\t\t\t? \"single\"\n\t\t\t\t\t\t\t: \"none\",\n\t\t\t\t\tseedSearchStringFromNonEmptySelection:\n\t\t\t\t\t\teditor.getOption(EditorOption.find)\n\t\t\t\t\t\t\t.seedSearchStringFromSelection === \"selection\",\n\t\t\t\t\tseedSearchStringFromGlobalClipboard: true,\n\t\t\t\t\tshouldFocus: FindStartFocusAction.FocusFindInput,\n\t\t\t\t\tshouldAnimate: true,\n\t\t\t\t\tupdateSearchScope: args?.findInSelection || false,\n\t\t\t\t\tloop: editor.getOption(EditorOption.find).loop,\n\t\t\t\t},\n\t\t\t\tnewState,\n\t\t\t);\n\n\t\t\tcontroller.setGlobalBufferTerm(controller.getState().searchString);\n\t\t}\n\t}\n}\n\nexport class StartFindWithSelectionAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.StartFindWithSelection,\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"startFindWithSelectionAction\",\n\t\t\t\t\"Find With Selection\",\n\t\t\t),\n\t\t\talias: \"Find With Selection\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: null,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyE,\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | null,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (controller) {\n\t\t\tawait controller.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: \"multiple\",\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: true,\n\t\t\t\tupdateSearchScope: false,\n\t\t\t\tloop: editor.getOption(EditorOption.find).loop,\n\t\t\t});\n\n\t\t\tcontroller.setGlobalBufferTerm(controller.getState().searchString);\n\t\t}\n\t}\n}\nexport abstract class MatchFindAction extends EditorAction {\n\tpublic async run(\n\t\taccessor: ServicesAccessor | null,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (controller && !this._run(controller)) {\n\t\t\tawait controller.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection:\n\t\t\t\t\tcontroller.getState().searchString.length === 0 &&\n\t\t\t\t\teditor.getOption(EditorOption.find)\n\t\t\t\t\t\t.seedSearchStringFromSelection !== \"never\"\n\t\t\t\t\t\t? \"single\"\n\t\t\t\t\t\t: \"none\",\n\t\t\t\tseedSearchStringFromNonEmptySelection:\n\t\t\t\t\teditor.getOption(EditorOption.find)\n\t\t\t\t\t\t.seedSearchStringFromSelection === \"selection\",\n\t\t\t\tseedSearchStringFromGlobalClipboard: true,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: true,\n\t\t\t\tupdateSearchScope: false,\n\t\t\t\tloop: editor.getOption(EditorOption.find).loop,\n\t\t\t});\n\t\t\tthis._run(controller);\n\t\t}\n\t}\n\n\tprotected abstract _run(controller: CommonFindController): boolean;\n}\n\nexport class NextMatchFindAction extends MatchFindAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.NextMatchFindAction,\n\t\t\tlabel: nls.localize(\"findNextMatchAction\", \"Find Next\"),\n\t\t\talias: \"Find Next\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: [\n\t\t\t\t{\n\t\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\t\tprimary: KeyCode.F3,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyG,\n\t\t\t\t\t\tsecondary: [KeyCode.F3],\n\t\t\t\t\t},\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.focus,\n\t\t\t\t\t\tCONTEXT_FIND_INPUT_FOCUSED,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tprotected _run(controller: CommonFindController): boolean {\n\t\tconst result = controller.moveToNextMatch();\n\t\tif (result) {\n\t\t\tcontroller.editor.pushUndoStop();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport class PreviousMatchFindAction extends MatchFindAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.PreviousMatchFindAction,\n\t\t\tlabel: nls.localize(\"findPreviousMatchAction\", \"Find Previous\"),\n\t\t\talias: \"Find Previous\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: [\n\t\t\t\t{\n\t\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\t\tprimary: KeyMod.Shift | KeyCode.F3,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG,\n\t\t\t\t\t\tsecondary: [KeyMod.Shift | KeyCode.F3],\n\t\t\t\t\t},\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.focus,\n\t\t\t\t\t\tCONTEXT_FIND_INPUT_FOCUSED,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tprotected _run(controller: CommonFindController): boolean {\n\t\treturn controller.moveToPrevMatch();\n\t}\n}\n\nexport class MoveToMatchFindAction extends EditorAction {\n\tprivate _highlightDecorations: string[] = [];\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.GoToMatchFindAction,\n\t\t\tlabel: nls.localize(\"findMatchAction.goToMatch\", \"Go to Match...\"),\n\t\t\talias: \"Go to Match...\",\n\t\t\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void | Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matchesCount = controller.getState().matchesCount;\n\t\tif (matchesCount < 1) {\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tnotificationService.notify({\n\t\t\t\tseverity: Severity.Warning,\n\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\"findMatchAction.noResults\",\n\t\t\t\t\t\"No matches. Try searching for something else.\",\n\t\t\t\t),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst disposables = new DisposableStore();\n\t\tconst inputBox = disposables.add(quickInputService.createInputBox());\n\t\tinputBox.placeholder = nls.localize(\n\t\t\t\"findMatchAction.inputPlaceHolder\",\n\t\t\t\"Type a number to go to a specific match (between 1 and {0})\",\n\t\t\tmatchesCount,\n\t\t);\n\n\t\tconst toFindMatchIndex = (value: string): number | undefined => {\n\t\t\tconst index = Number.parseInt(value);\n\t\t\tif (isNaN(index)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst matchCount = controller.getState().matchesCount;\n\t\t\tif (index > 0 && index <= matchCount) {\n\t\t\t\treturn index - 1; // zero based\n\t\t\t} else if (index < 0 && index >= -matchCount) {\n\t\t\t\treturn matchCount + index;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\tconst updatePickerAndEditor = (value: string) => {\n\t\t\tconst index = toFindMatchIndex(value);\n\t\t\tif (typeof index === \"number\") {\n\t\t\t\t// valid\n\t\t\t\tinputBox.validationMessage = undefined;\n\t\t\t\tcontroller.goToMatch(index);\n\t\t\t\tconst currentMatch = controller.getState().currentMatch;\n\t\t\t\tif (currentMatch) {\n\t\t\t\t\tthis.addDecorations(editor, currentMatch);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinputBox.validationMessage = nls.localize(\n\t\t\t\t\t\"findMatchAction.inputValidationMessage\",\n\t\t\t\t\t\"Please type a number between 1 and {0}\",\n\t\t\t\t\tcontroller.getState().matchesCount,\n\t\t\t\t);\n\t\t\t\tthis.clearDecorations(editor);\n\t\t\t}\n\t\t};\n\t\tdisposables.add(\n\t\t\tinputBox.onDidChangeValue((value) => {\n\t\t\t\tupdatePickerAndEditor(value);\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tinputBox.onDidAccept(() => {\n\t\t\t\tconst index = toFindMatchIndex(inputBox.value);\n\t\t\t\tif (typeof index === \"number\") {\n\t\t\t\t\tcontroller.goToMatch(index);\n\t\t\t\t\tinputBox.hide();\n\t\t\t\t} else {\n\t\t\t\t\tinputBox.validationMessage = nls.localize(\n\t\t\t\t\t\t\"findMatchAction.inputValidationMessage\",\n\t\t\t\t\t\t\"Please type a number between 1 and {0}\",\n\t\t\t\t\t\tcontroller.getState().matchesCount,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tinputBox.onDidHide(() => {\n\t\t\t\tthis.clearDecorations(editor);\n\t\t\t\tdisposables.dispose();\n\t\t\t}),\n\t\t);\n\n\t\tinputBox.show();\n\t}\n\n\tprivate clearDecorations(editor: ICodeEditor): void {\n\t\teditor.changeDecorations((changeAccessor) => {\n\t\t\tthis._highlightDecorations = changeAccessor.deltaDecorations(\n\t\t\t\tthis._highlightDecorations,\n\t\t\t\t[],\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate addDecorations(editor: ICodeEditor, range: IRange): void {\n\t\teditor.changeDecorations((changeAccessor) => {\n\t\t\tthis._highlightDecorations = changeAccessor.deltaDecorations(\n\t\t\t\tthis._highlightDecorations,\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\trange,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\"find-match-quick-access-range-highlight\",\n\t\t\t\t\t\t\tclassName: \"rangeHighlight\",\n\t\t\t\t\t\t\tisWholeLine: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trange,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\"find-match-quick-access-range-highlight-overview\",\n\t\t\t\t\t\t\toverviewRuler: {\n\t\t\t\t\t\t\t\tcolor: themeColorFromId(\n\t\t\t\t\t\t\t\t\toverviewRulerRangeHighlight,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tposition: OverviewRulerLane.Full,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t);\n\t\t});\n\t}\n}\n\nexport abstract class SelectionMatchFindAction extends EditorAction {\n\tpublic async run(\n\t\taccessor: ServicesAccessor | null,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectionSearchString = getSelectionSearchString(\n\t\t\teditor,\n\t\t\t\"single\",\n\t\t\tfalse,\n\t\t);\n\t\tif (selectionSearchString) {\n\t\t\tcontroller.setSearchString(selectionSearchString);\n\t\t}\n\t\tif (!this._run(controller)) {\n\t\t\tawait controller.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: \"none\",\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: true,\n\t\t\t\tupdateSearchScope: false,\n\t\t\t\tloop: editor.getOption(EditorOption.find).loop,\n\t\t\t});\n\t\t\tthis._run(controller);\n\t\t}\n\t}\n\n\tprotected abstract _run(controller: CommonFindController): boolean;\n}\n\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.NextSelectionMatchFindAction,\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"nextSelectionMatchFindAction\",\n\t\t\t\t\"Find Next Selection\",\n\t\t\t),\n\t\t\talias: \"Find Next Selection\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.F3,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tprotected _run(controller: CommonFindController): boolean {\n\t\treturn controller.moveToNextMatch();\n\t}\n}\n\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.PreviousSelectionMatchFindAction,\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"previousSelectionMatchFindAction\",\n\t\t\t\t\"Find Previous Selection\",\n\t\t\t),\n\t\t\talias: \"Find Previous Selection\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.F3,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tprotected _run(controller: CommonFindController): boolean {\n\t\treturn controller.moveToPrevMatch();\n\t}\n}\n\nexport const StartFindReplaceAction = registerMultiEditorAction(\n\tnew MultiEditorAction({\n\t\tid: FIND_IDS.StartFindReplaceAction,\n\t\tlabel: nls.localize(\"startReplace\", \"Replace\"),\n\t\talias: \"Replace\",\n\t\tprecondition: ContextKeyExpr.or(\n\t\t\tEditorContextKeys.focus,\n\t\t\tContextKeyExpr.has(\"editorIsOpen\"),\n\t\t),\n\t\tkbOpts: {\n\t\t\tkbExpr: null,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyH,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyF },\n\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t},\n\t\tmenuOpts: {\n\t\t\tmenuId: MenuId.MenubarEditMenu,\n\t\t\tgroup: \"3_find\",\n\t\t\ttitle: nls.localize(\n\t\t\t\t{ key: \"miReplace\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Replace\",\n\t\t\t),\n\t\t\torder: 2,\n\t\t},\n\t}),\n);\n\nStartFindReplaceAction.addImplementation(\n\t0,\n\t(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): boolean | Promise<void> => {\n\t\tif (!editor.hasModel() || editor.getOption(EditorOption.readOnly)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst currentSelection = editor.getSelection();\n\t\tconst findInputFocused = controller.isFindInputFocused();\n\t\t// we only seed search string from selection when the current selection is single line and not empty,\n\t\t// + the find input is not focused\n\t\tconst seedSearchStringFromSelection =\n\t\t\t!currentSelection.isEmpty() &&\n\t\t\tcurrentSelection.startLineNumber ===\n\t\t\t\tcurrentSelection.endLineNumber &&\n\t\t\teditor.getOption(EditorOption.find)\n\t\t\t\t.seedSearchStringFromSelection !== \"never\" &&\n\t\t\t!findInputFocused;\n\t\t/*\n\t* if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n\t* findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n\t* findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n\t* findInputFocused false seedSearchStringFromSelection false FocusFindInput\n\t*/\n\t\tconst shouldFocus =\n\t\t\tfindInputFocused || seedSearchStringFromSelection\n\t\t\t\t? FindStartFocusAction.FocusReplaceInput\n\t\t\t\t: FindStartFocusAction.FocusFindInput;\n\n\t\treturn controller.start({\n\t\t\tforceRevealReplace: true,\n\t\t\tseedSearchStringFromSelection: seedSearchStringFromSelection\n\t\t\t\t? \"single\"\n\t\t\t\t: \"none\",\n\t\t\tseedSearchStringFromNonEmptySelection:\n\t\t\t\teditor.getOption(EditorOption.find)\n\t\t\t\t\t.seedSearchStringFromSelection === \"selection\",\n\t\t\tseedSearchStringFromGlobalClipboard:\n\t\t\t\teditor.getOption(EditorOption.find)\n\t\t\t\t\t.seedSearchStringFromSelection !== \"never\",\n\t\t\tshouldFocus: shouldFocus,\n\t\t\tshouldAnimate: true,\n\t\t\tupdateSearchScope: false,\n\t\t\tloop: editor.getOption(EditorOption.find).loop,\n\t\t});\n\t},\n);\n\nregisterEditorContribution(\n\tCommonFindController.ID,\n\tFindController,\n\tEditorContributionInstantiation.Eager,\n); // eager because it uses `saveViewState`/`restoreViewState`\n\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\n\nconst FindCommand = EditorCommand.bindToContribution<CommonFindController>(\n\tCommonFindController.get,\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.CloseFindWidgetCommand,\n\t\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\t\thandler: (x) => x.closeFindWidget(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.focus,\n\t\t\t\tContextKeyExpr.not(\"isComposing\"),\n\t\t\t),\n\t\t\tprimary: KeyCode.Escape,\n\t\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.ToggleCaseSensitiveCommand,\n\t\tprecondition: undefined,\n\t\thandler: (x) => x.toggleCaseSensitive(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: ToggleCaseSensitiveKeybinding.primary,\n\t\t\tmac: ToggleCaseSensitiveKeybinding.mac,\n\t\t\twin: ToggleCaseSensitiveKeybinding.win,\n\t\t\tlinux: ToggleCaseSensitiveKeybinding.linux,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.ToggleWholeWordCommand,\n\t\tprecondition: undefined,\n\t\thandler: (x) => x.toggleWholeWords(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: ToggleWholeWordKeybinding.primary,\n\t\t\tmac: ToggleWholeWordKeybinding.mac,\n\t\t\twin: ToggleWholeWordKeybinding.win,\n\t\t\tlinux: ToggleWholeWordKeybinding.linux,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.ToggleRegexCommand,\n\t\tprecondition: undefined,\n\t\thandler: (x) => x.toggleRegex(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: ToggleRegexKeybinding.primary,\n\t\t\tmac: ToggleRegexKeybinding.mac,\n\t\t\twin: ToggleRegexKeybinding.win,\n\t\t\tlinux: ToggleRegexKeybinding.linux,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.ToggleSearchScopeCommand,\n\t\tprecondition: undefined,\n\t\thandler: (x) => x.toggleSearchScope(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: ToggleSearchScopeKeybinding.primary,\n\t\t\tmac: ToggleSearchScopeKeybinding.mac,\n\t\t\twin: ToggleSearchScopeKeybinding.win,\n\t\t\tlinux: ToggleSearchScopeKeybinding.linux,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.TogglePreserveCaseCommand,\n\t\tprecondition: undefined,\n\t\thandler: (x) => x.togglePreserveCase(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: TogglePreserveCaseKeybinding.primary,\n\t\t\tmac: TogglePreserveCaseKeybinding.mac,\n\t\t\twin: TogglePreserveCaseKeybinding.win,\n\t\t\tlinux: TogglePreserveCaseKeybinding.linux,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.ReplaceOneAction,\n\t\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\t\thandler: (x) => x.replace(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Digit1,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.ReplaceOneAction,\n\t\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\t\thandler: (x) => x.replace(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.focus,\n\t\t\t\tCONTEXT_REPLACE_INPUT_FOCUSED,\n\t\t\t),\n\t\t\tprimary: KeyCode.Enter,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.ReplaceAllAction,\n\t\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\t\thandler: (x) => x.replaceAll(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter,\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.ReplaceAllAction,\n\t\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\t\thandler: (x) => x.replaceAll(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.focus,\n\t\t\t\tCONTEXT_REPLACE_INPUT_FOCUSED,\n\t\t\t),\n\t\t\tprimary: undefined,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t},\n\t\t},\n\t}),\n);\n\nregisterEditorCommand(\n\tnew FindCommand({\n\t\tid: FIND_IDS.SelectAllMatchesAction,\n\t\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\t\thandler: (x) => x.selectAllMatches(),\n\t\tkbOpts: {\n\t\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\tprimary: KeyMod.Alt | KeyCode.Enter,\n\t\t},\n\t}),\n);\n"],
  "mappings": "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",
  "names": ["FindStartFocusAction"]
}
