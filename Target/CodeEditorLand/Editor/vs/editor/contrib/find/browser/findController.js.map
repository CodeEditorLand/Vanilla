{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/find/browser/findController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Delayer } from '../../../../base/common/async.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorCommand, EditorContributionInstantiation, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { IRange } from '../../../common/core/range.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState, FindReplaceStateChangedEvent, INewFindReplaceState } from './findState.js';\nimport { FindWidget, IFindController } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\n\nconst SEARCH_STRING_MAX_LENGTH = 524288;\n\nexport function getSelectionSearchString(editor: ICodeEditor, seedSearchStringFromSelection: 'single' | 'multiple' = 'single', seedSearchStringFromNonEmptySelection: boolean = false): string | null {\n\tif (!editor.hasModel()) {\n\t\treturn null;\n\t}\n\n\tconst selection = editor.getSelection();\n\t// if selection spans multiple lines, default search string to empty\n\n\tif ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n\t\t|| seedSearchStringFromSelection === 'multiple') {\n\t\tif (selection.isEmpty()) {\n\t\t\tconst wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n\t\t\tif (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n\t\t\t\treturn wordAtPosition.word;\n\t\t\t}\n\t\t} else {\n\t\t\tif (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n\t\t\t\treturn editor.getModel().getValueInRange(selection);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport const enum FindStartFocusAction {\n\tNoFocusChange,\n\tFocusFindInput,\n\tFocusReplaceInput\n}\n\nexport interface IFindStartOptions {\n\tforceRevealReplace: boolean;\n\tseedSearchStringFromSelection: 'none' | 'single' | 'multiple';\n\tseedSearchStringFromNonEmptySelection: boolean;\n\tseedSearchStringFromGlobalClipboard: boolean;\n\tshouldFocus: FindStartFocusAction;\n\tshouldAnimate: boolean;\n\tupdateSearchScope: boolean;\n\tloop: boolean;\n}\n\nexport interface IFindStartArguments {\n\tsearchString?: string;\n\treplaceString?: string;\n\tisRegex?: boolean;\n\tmatchWholeWord?: boolean;\n\tisCaseSensitive?: boolean;\n\tpreserveCase?: boolean;\n\tfindInSelection?: boolean;\n}\n\nexport class CommonFindController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.findController';\n\n\tprotected _editor: ICodeEditor;\n\tprivate readonly _findWidgetVisible: IContextKey<boolean>;\n\tprotected _state: FindReplaceState;\n\tprotected _updateHistoryDelayer: Delayer<void>;\n\tprivate _model: FindModelBoundToEditorModel | null;\n\tprotected readonly _storageService: IStorageService;\n\tprivate readonly _clipboardService: IClipboardService;\n\tprotected readonly _contextKeyService: IContextKeyService;\n\tprotected readonly _notificationService: INotificationService;\n\tprotected readonly _hoverService: IHoverService;\n\n\tget editor() {\n\t\treturn this._editor;\n\t}\n\n\tpublic static get(editor: ICodeEditor): CommonFindController | null {\n\t\treturn editor.getContribution<CommonFindController>(CommonFindController.ID);\n\t}\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IHoverService hoverService: IHoverService\n\t) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n\t\tthis._contextKeyService = contextKeyService;\n\t\tthis._storageService = storageService;\n\t\tthis._clipboardService = clipboardService;\n\t\tthis._notificationService = notificationService;\n\t\tthis._hoverService = hoverService;\n\n\t\tthis._updateHistoryDelayer = new Delayer<void>(500);\n\t\tthis._state = this._register(new FindReplaceState());\n\t\tthis.loadQueryState();\n\t\tthis._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n\n\t\tthis._model = null;\n\n\t\tthis._register(this._editor.onDidChangeModel(() => {\n\t\t\tconst shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n\n\t\t\tthis.disposeModel();\n\n\t\t\tthis._state.change({\n\t\t\t\tsearchScope: null,\n\t\t\t\tmatchCase: this._storageService.getBoolean('editor.matchCase', StorageScope.WORKSPACE, false),\n\t\t\t\twholeWord: this._storageService.getBoolean('editor.wholeWord', StorageScope.WORKSPACE, false),\n\t\t\t\tisRegex: this._storageService.getBoolean('editor.isRegex', StorageScope.WORKSPACE, false),\n\t\t\t\tpreserveCase: this._storageService.getBoolean('editor.preserveCase', StorageScope.WORKSPACE, false)\n\t\t\t}, false);\n\n\t\t\tif (shouldRestartFind) {\n\t\t\t\tthis._start({\n\t\t\t\t\tforceRevealReplace: false,\n\t\t\t\t\tseedSearchStringFromSelection: 'none',\n\t\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\t\tshouldAnimate: false,\n\t\t\t\t\tupdateSearchScope: false,\n\t\t\t\t\tloop: this._editor.getOption(EditorOption.find).loop\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.disposeModel();\n\t\tsuper.dispose();\n\t}\n\n\tprivate disposeModel(): void {\n\t\tif (this._model) {\n\t\t\tthis._model.dispose();\n\t\t\tthis._model = null;\n\t\t}\n\t}\n\n\tprivate _onStateChanged(e: FindReplaceStateChangedEvent): void {\n\t\tthis.saveQueryState(e);\n\n\t\tif (e.isRevealed) {\n\t\t\tif (this._state.isRevealed) {\n\t\t\t\tthis._findWidgetVisible.set(true);\n\t\t\t} else {\n\t\t\t\tthis._findWidgetVisible.reset();\n\t\t\t\tthis.disposeModel();\n\t\t\t}\n\t\t}\n\t\tif (e.searchString) {\n\t\t\tthis.setGlobalBufferTerm(this._state.searchString);\n\t\t}\n\t}\n\n\tprivate saveQueryState(e: FindReplaceStateChangedEvent) {\n\t\tif (e.isRegex) {\n\t\t\tthis._storageService.store('editor.isRegex', this._state.actualIsRegex, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t}\n\t\tif (e.wholeWord) {\n\t\t\tthis._storageService.store('editor.wholeWord', this._state.actualWholeWord, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t}\n\t\tif (e.matchCase) {\n\t\t\tthis._storageService.store('editor.matchCase', this._state.actualMatchCase, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t}\n\t\tif (e.preserveCase) {\n\t\t\tthis._storageService.store('editor.preserveCase', this._state.actualPreserveCase, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t}\n\t}\n\n\tprivate loadQueryState() {\n\t\tthis._state.change({\n\t\t\tmatchCase: this._storageService.getBoolean('editor.matchCase', StorageScope.WORKSPACE, this._state.matchCase),\n\t\t\twholeWord: this._storageService.getBoolean('editor.wholeWord', StorageScope.WORKSPACE, this._state.wholeWord),\n\t\t\tisRegex: this._storageService.getBoolean('editor.isRegex', StorageScope.WORKSPACE, this._state.isRegex),\n\t\t\tpreserveCase: this._storageService.getBoolean('editor.preserveCase', StorageScope.WORKSPACE, this._state.preserveCase)\n\t\t}, false);\n\t}\n\n\tpublic isFindInputFocused(): boolean {\n\t\treturn !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n\t}\n\n\tpublic getState(): FindReplaceState {\n\t\treturn this._state;\n\t}\n\n\tpublic closeFindWidget(): void {\n\t\tthis._state.change({\n\t\t\tisRevealed: false,\n\t\t\tsearchScope: null\n\t\t}, false);\n\t\tthis._editor.focus();\n\t}\n\n\tpublic toggleCaseSensitive(): void {\n\t\tthis._state.change({ matchCase: !this._state.matchCase }, false);\n\t\tif (!this._state.isRevealed) {\n\t\t\tthis.highlightFindOptions();\n\t\t}\n\t}\n\n\tpublic toggleWholeWords(): void {\n\t\tthis._state.change({ wholeWord: !this._state.wholeWord }, false);\n\t\tif (!this._state.isRevealed) {\n\t\t\tthis.highlightFindOptions();\n\t\t}\n\t}\n\n\tpublic toggleRegex(): void {\n\t\tthis._state.change({ isRegex: !this._state.isRegex }, false);\n\t\tif (!this._state.isRevealed) {\n\t\t\tthis.highlightFindOptions();\n\t\t}\n\t}\n\n\tpublic togglePreserveCase(): void {\n\t\tthis._state.change({ preserveCase: !this._state.preserveCase }, false);\n\t\tif (!this._state.isRevealed) {\n\t\t\tthis.highlightFindOptions();\n\t\t}\n\t}\n\n\tpublic toggleSearchScope(): void {\n\t\tif (this._state.searchScope) {\n\t\t\tthis._state.change({ searchScope: null }, true);\n\t\t} else {\n\t\t\tif (this._editor.hasModel()) {\n\t\t\t\tlet selections = this._editor.getSelections();\n\t\t\t\tselections = selections.map(selection => {\n\t\t\t\t\tif (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n\t\t\t\t\t\tselection = selection.setEndPosition(\n\t\t\t\t\t\t\tselection.endLineNumber - 1,\n\t\t\t\t\t\t\tthis._editor.getModel()!.getLineMaxColumn(selection.endLineNumber - 1)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (!selection.isEmpty()) {\n\t\t\t\t\t\treturn selection;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}).filter((element): element is Selection => !!element);\n\n\t\t\t\tif (selections.length) {\n\t\t\t\t\tthis._state.change({ searchScope: selections }, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setSearchString(searchString: string): void {\n\t\tif (this._state.isRegex) {\n\t\t\tsearchString = strings.escapeRegExpCharacters(searchString);\n\t\t}\n\t\tthis._state.change({ searchString: searchString }, false);\n\t}\n\n\tpublic highlightFindOptions(ignoreWhenVisible: boolean = false): void {\n\t\t// overwritten in subclass\n\t}\n\n\tprotected async _start(opts: IFindStartOptions, newState?: INewFindReplaceState): Promise<void> {\n\t\tthis.disposeModel();\n\n\t\tif (!this._editor.hasModel()) {\n\t\t\t// cannot do anything with an editor that doesn't have a model...\n\t\t\treturn;\n\t\t}\n\n\t\tconst stateChanges: INewFindReplaceState = {\n\t\t\t...newState,\n\t\t\tisRevealed: true\n\t\t};\n\n\t\tif (opts.seedSearchStringFromSelection === 'single') {\n\t\t\tconst selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n\t\t\tif (selectionSearchString) {\n\t\t\t\tif (this._state.isRegex) {\n\t\t\t\t\tstateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n\t\t\t\t} else {\n\t\t\t\t\tstateChanges.searchString = selectionSearchString;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n\t\t\tconst selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n\t\t\tif (selectionSearchString) {\n\t\t\t\tstateChanges.searchString = selectionSearchString;\n\t\t\t}\n\t\t}\n\n\t\tif (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n\t\t\tconst selectionSearchString = await this.getGlobalBufferTerm();\n\n\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\t// the editor has lost its model in the meantime\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (selectionSearchString) {\n\t\t\t\tstateChanges.searchString = selectionSearchString;\n\t\t\t}\n\t\t}\n\n\t\t// Overwrite isReplaceRevealed\n\t\tif (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n\t\t\tstateChanges.isReplaceRevealed = true;\n\t\t} else if (!this._findWidgetVisible.get()) {\n\t\t\tstateChanges.isReplaceRevealed = false;\n\t\t}\n\n\t\tif (opts.updateSearchScope) {\n\t\t\tconst currentSelections = this._editor.getSelections();\n\t\t\tif (currentSelections.some(selection => !selection.isEmpty())) {\n\t\t\t\tstateChanges.searchScope = currentSelections;\n\t\t\t}\n\t\t}\n\n\t\tstateChanges.loop = opts.loop;\n\n\t\tthis._state.change(stateChanges, false);\n\n\t\tif (!this._model) {\n\t\t\tthis._model = new FindModelBoundToEditorModel(this._editor, this._state);\n\t\t}\n\t}\n\n\tpublic start(opts: IFindStartOptions, newState?: INewFindReplaceState): Promise<void> {\n\t\treturn this._start(opts, newState);\n\t}\n\n\tpublic moveToNextMatch(): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.moveToNextMatch();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic moveToPrevMatch(): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.moveToPrevMatch();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic goToMatch(index: number): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.moveToMatch(index);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic replace(): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.replace();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic replaceAll(): boolean {\n\t\tif (this._model) {\n\t\t\tif (this._editor.getModel()?.isTooLargeForHeapOperation()) {\n\t\t\t\tthis._notificationService.warn(nls.localize('too.large.for.replaceall', \"The file is too large to perform a replace all operation.\"));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._model.replaceAll();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic selectAllMatches(): boolean {\n\t\tif (this._model) {\n\t\t\tthis._model.selectAllMatches();\n\t\t\tthis._editor.focus();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic async getGlobalBufferTerm(): Promise<string> {\n\t\tif (this._editor.getOption(EditorOption.find).globalFindClipboard\n\t\t\t&& this._editor.hasModel()\n\t\t\t&& !this._editor.getModel().isTooLargeForSyncing()\n\t\t) {\n\t\t\treturn this._clipboardService.readFindText();\n\t\t}\n\t\treturn '';\n\t}\n\n\tpublic setGlobalBufferTerm(text: string): void {\n\t\tif (this._editor.getOption(EditorOption.find).globalFindClipboard\n\t\t\t&& this._editor.hasModel()\n\t\t\t&& !this._editor.getModel().isTooLargeForSyncing()\n\t\t) {\n\t\t\t// intentionally not awaited\n\t\t\tthis._clipboardService.writeFindText(text);\n\t\t}\n\t}\n}\n\nexport class FindController extends CommonFindController implements IFindController {\n\n\tprivate _widget: FindWidget | null;\n\tprivate _findOptionsWidget: FindOptionsWidget | null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextViewService private readonly _contextViewService: IContextViewService,\n\t\t@IContextKeyService _contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService _storageService: IStorageService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(editor, _contextKeyService, _storageService, clipboardService, notificationService, hoverService);\n\t\tthis._widget = null;\n\t\tthis._findOptionsWidget = null;\n\t}\n\n\tprotected override async _start(opts: IFindStartOptions, newState?: INewFindReplaceState): Promise<void> {\n\t\tif (!this._widget) {\n\t\t\tthis._createFindWidget();\n\t\t}\n\n\t\tconst selection = this._editor.getSelection();\n\t\tlet updateSearchScope = false;\n\n\t\tswitch (this._editor.getOption(EditorOption.find).autoFindInSelection) {\n\t\t\tcase 'always':\n\t\t\t\tupdateSearchScope = true;\n\t\t\t\tbreak;\n\t\t\tcase 'never':\n\t\t\t\tupdateSearchScope = false;\n\t\t\t\tbreak;\n\t\t\tcase 'multiline': {\n\t\t\t\tconst isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n\t\t\t\tupdateSearchScope = isSelectionMultipleLine;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\topts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n\n\t\tawait super._start(opts, newState);\n\n\t\tif (this._widget) {\n\t\t\tif (opts.shouldFocus === FindStartFocusAction.FocusReplaceInput) {\n\t\t\t\tthis._widget.focusReplaceInput();\n\t\t\t} else if (opts.shouldFocus === FindStartFocusAction.FocusFindInput) {\n\t\t\t\tthis._widget.focusFindInput();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic override highlightFindOptions(ignoreWhenVisible: boolean = false): void {\n\t\tif (!this._widget) {\n\t\t\tthis._createFindWidget();\n\t\t}\n\t\tif (this._state.isRevealed && !ignoreWhenVisible) {\n\t\t\tthis._widget!.highlightFindOptions();\n\t\t} else {\n\t\t\tthis._findOptionsWidget!.highlightFindOptions();\n\t\t}\n\t}\n\n\tprivate _createFindWidget() {\n\t\tthis._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService, this._hoverService));\n\t\tthis._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n\t}\n\n\tsaveViewState(): any {\n\t\treturn this._widget?.getViewState();\n\t}\n\n\trestoreViewState(state: any): void {\n\t\tthis._widget?.setViewState(state);\n\t}\n}\n\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n\tid: FIND_IDS.StartFindAction,\n\tlabel: nls.localize('startFindAction', \"Find\"),\n\talias: 'Find',\n\tprecondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n\tkbOpts: {\n\t\tkbExpr: null,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\tweight: KeybindingWeight.EditorContrib\n\t},\n\tmenuOpts: {\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '3_find',\n\t\ttitle: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n\t\torder: 1\n\t}\n}));\n\nStartFindAction.addImplementation(0, (accessor: ServicesAccessor, editor: ICodeEditor, args: any): boolean | Promise<void> => {\n\tconst controller = CommonFindController.get(editor);\n\tif (!controller) {\n\t\treturn false;\n\t}\n\treturn controller.start({\n\t\tforceRevealReplace: false,\n\t\tseedSearchStringFromSelection: editor.getOption(EditorOption.find).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n\t\tseedSearchStringFromNonEmptySelection: editor.getOption(EditorOption.find).seedSearchStringFromSelection === 'selection',\n\t\tseedSearchStringFromGlobalClipboard: editor.getOption(EditorOption.find).globalFindClipboard,\n\t\tshouldFocus: FindStartFocusAction.FocusFindInput,\n\t\tshouldAnimate: true,\n\t\tupdateSearchScope: false,\n\t\tloop: editor.getOption(EditorOption.find).loop\n\t});\n});\n\nconst findArgDescription = {\n\tdescription: 'Open a new In-Editor Find Widget.',\n\targs: [{\n\t\tname: 'Open a new In-Editor Find Widget args',\n\t\tschema: {\n\t\t\tproperties: {\n\t\t\t\tsearchString: { type: 'string' },\n\t\t\t\treplaceString: { type: 'string' },\n\t\t\t\tisRegex: { type: 'boolean' },\n\t\t\t\tmatchWholeWord: { type: 'boolean' },\n\t\t\t\tisCaseSensitive: { type: 'boolean' },\n\t\t\t\tpreserveCase: { type: 'boolean' },\n\t\t\t\tfindInSelection: { type: 'boolean' },\n\t\t\t}\n\t\t}\n\t}]\n} as const;\n\nexport class StartFindWithArgsAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.StartFindWithArgs,\n\t\t\tlabel: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n\t\t\talias: 'Find With Arguments',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: null,\n\t\t\t\tprimary: 0,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmetadata: findArgDescription\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | null, editor: ICodeEditor, args?: IFindStartArguments): Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (controller) {\n\t\t\tconst newState: INewFindReplaceState = args ? {\n\t\t\t\tsearchString: args.searchString,\n\t\t\t\treplaceString: args.replaceString,\n\t\t\t\tisReplaceRevealed: args.replaceString !== undefined,\n\t\t\t\tisRegex: args.isRegex,\n\t\t\t\t// isRegexOverride: args.regexOverride,\n\t\t\t\twholeWord: args.matchWholeWord,\n\t\t\t\t// wholeWordOverride: args.wholeWordOverride,\n\t\t\t\tmatchCase: args.isCaseSensitive,\n\t\t\t\t// matchCaseOverride: args.matchCaseOverride,\n\t\t\t\tpreserveCase: args.preserveCase,\n\t\t\t\t// preserveCaseOverride: args.preserveCaseOverride,\n\t\t\t} : {};\n\n\t\t\tawait controller.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(EditorOption.find).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n\t\t\t\tseedSearchStringFromNonEmptySelection: editor.getOption(EditorOption.find).seedSearchStringFromSelection === 'selection',\n\t\t\t\tseedSearchStringFromGlobalClipboard: true,\n\t\t\t\tshouldFocus: FindStartFocusAction.FocusFindInput,\n\t\t\t\tshouldAnimate: true,\n\t\t\t\tupdateSearchScope: args?.findInSelection || false,\n\t\t\t\tloop: editor.getOption(EditorOption.find).loop\n\t\t\t}, newState);\n\n\t\t\tcontroller.setGlobalBufferTerm(controller.getState().searchString);\n\t\t}\n\t}\n}\n\nexport class StartFindWithSelectionAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.StartFindWithSelection,\n\t\t\tlabel: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n\t\t\talias: 'Find With Selection',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: null,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyE,\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | null, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (controller) {\n\t\t\tawait controller.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: 'multiple',\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: true,\n\t\t\t\tupdateSearchScope: false,\n\t\t\t\tloop: editor.getOption(EditorOption.find).loop\n\t\t\t});\n\n\t\t\tcontroller.setGlobalBufferTerm(controller.getState().searchString);\n\t\t}\n\t}\n}\nexport abstract class MatchFindAction extends EditorAction {\n\tpublic async run(accessor: ServicesAccessor | null, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (controller && !this._run(controller)) {\n\t\t\tawait controller.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(EditorOption.find).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n\t\t\t\tseedSearchStringFromNonEmptySelection: editor.getOption(EditorOption.find).seedSearchStringFromSelection === 'selection',\n\t\t\t\tseedSearchStringFromGlobalClipboard: true,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: true,\n\t\t\t\tupdateSearchScope: false,\n\t\t\t\tloop: editor.getOption(EditorOption.find).loop\n\t\t\t});\n\t\t\tthis._run(controller);\n\t\t}\n\t}\n\n\tprotected abstract _run(controller: CommonFindController): boolean;\n}\n\nexport class NextMatchFindAction extends MatchFindAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.NextMatchFindAction,\n\t\t\tlabel: nls.localize('findNextMatchAction', \"Find Next\"),\n\t\t\talias: 'Find Next',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: [{\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyCode.F3,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyG, secondary: [KeyCode.F3] },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}, {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}]\n\t\t});\n\t}\n\n\tprotected _run(controller: CommonFindController): boolean {\n\t\tconst result = controller.moveToNextMatch();\n\t\tif (result) {\n\t\t\tcontroller.editor.pushUndoStop();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n\nexport class PreviousMatchFindAction extends MatchFindAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.PreviousMatchFindAction,\n\t\t\tlabel: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n\t\t\talias: 'Find Previous',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: [{\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F3,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG, secondary: [KeyMod.Shift | KeyCode.F3] },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}, {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tprotected _run(controller: CommonFindController): boolean {\n\t\treturn controller.moveToPrevMatch();\n\t}\n}\n\nexport class MoveToMatchFindAction extends EditorAction {\n\n\tprivate _highlightDecorations: string[] = [];\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.GoToMatchFindAction,\n\t\t\tlabel: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n\t\t\talias: 'Go to Match...',\n\t\t\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void | Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matchesCount = controller.getState().matchesCount;\n\t\tif (matchesCount < 1) {\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tnotificationService.notify({\n\t\t\t\tseverity: Severity.Warning,\n\t\t\t\tmessage: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst disposables = new DisposableStore();\n\t\tconst inputBox = disposables.add(quickInputService.createInputBox());\n\t\tinputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n\n\t\tconst toFindMatchIndex = (value: string): number | undefined => {\n\t\t\tconst index = parseInt(value);\n\t\t\tif (isNaN(index)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst matchCount = controller.getState().matchesCount;\n\t\t\tif (index > 0 && index <= matchCount) {\n\t\t\t\treturn index - 1; // zero based\n\t\t\t} else if (index < 0 && index >= -matchCount) {\n\t\t\t\treturn matchCount + index;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\tconst updatePickerAndEditor = (value: string) => {\n\t\t\tconst index = toFindMatchIndex(value);\n\t\t\tif (typeof index === 'number') {\n\t\t\t\t// valid\n\t\t\t\tinputBox.validationMessage = undefined;\n\t\t\t\tcontroller.goToMatch(index);\n\t\t\t\tconst currentMatch = controller.getState().currentMatch;\n\t\t\t\tif (currentMatch) {\n\t\t\t\t\tthis.addDecorations(editor, currentMatch);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n\t\t\t\tthis.clearDecorations(editor);\n\t\t\t}\n\t\t};\n\t\tdisposables.add(inputBox.onDidChangeValue(value => {\n\t\t\tupdatePickerAndEditor(value);\n\t\t}));\n\n\t\tdisposables.add(inputBox.onDidAccept(() => {\n\t\t\tconst index = toFindMatchIndex(inputBox.value);\n\t\t\tif (typeof index === 'number') {\n\t\t\t\tcontroller.goToMatch(index);\n\t\t\t\tinputBox.hide();\n\t\t\t} else {\n\t\t\t\tinputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(inputBox.onDidHide(() => {\n\t\t\tthis.clearDecorations(editor);\n\t\t\tdisposables.dispose();\n\t\t}));\n\n\t\tinputBox.show();\n\t}\n\n\tprivate clearDecorations(editor: ICodeEditor): void {\n\t\teditor.changeDecorations(changeAccessor => {\n\t\t\tthis._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n\t\t});\n\t}\n\n\tprivate addDecorations(editor: ICodeEditor, range: IRange): void {\n\t\teditor.changeDecorations(changeAccessor => {\n\t\t\tthis._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [\n\t\t\t\t{\n\t\t\t\t\trange,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tdescription: 'find-match-quick-access-range-highlight',\n\t\t\t\t\t\tclassName: 'rangeHighlight',\n\t\t\t\t\t\tisWholeLine: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\trange,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tdescription: 'find-match-quick-access-range-highlight-overview',\n\t\t\t\t\t\toverviewRuler: {\n\t\t\t\t\t\t\tcolor: themeColorFromId(overviewRulerRangeHighlight),\n\t\t\t\t\t\t\tposition: OverviewRulerLane.Full\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]);\n\t\t});\n\t}\n}\n\nexport abstract class SelectionMatchFindAction extends EditorAction {\n\tpublic async run(accessor: ServicesAccessor | null, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = CommonFindController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectionSearchString = getSelectionSearchString(editor, 'single', false);\n\t\tif (selectionSearchString) {\n\t\t\tcontroller.setSearchString(selectionSearchString);\n\t\t}\n\t\tif (!this._run(controller)) {\n\t\t\tawait controller.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: 'none',\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: true,\n\t\t\t\tupdateSearchScope: false,\n\t\t\t\tloop: editor.getOption(EditorOption.find).loop\n\t\t\t});\n\t\t\tthis._run(controller);\n\t\t}\n\t}\n\n\tprotected abstract _run(controller: CommonFindController): boolean;\n}\n\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.NextSelectionMatchFindAction,\n\t\t\tlabel: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n\t\t\talias: 'Find Next Selection',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.F3,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _run(controller: CommonFindController): boolean {\n\t\treturn controller.moveToNextMatch();\n\t}\n}\n\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FIND_IDS.PreviousSelectionMatchFindAction,\n\t\t\tlabel: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n\t\t\talias: 'Find Previous Selection',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.F3,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _run(controller: CommonFindController): boolean {\n\t\treturn controller.moveToPrevMatch();\n\t}\n}\n\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n\tid: FIND_IDS.StartFindReplaceAction,\n\tlabel: nls.localize('startReplace', \"Replace\"),\n\talias: 'Replace',\n\tprecondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n\tkbOpts: {\n\t\tkbExpr: null,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyH,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyF },\n\t\tweight: KeybindingWeight.EditorContrib\n\t},\n\tmenuOpts: {\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '3_find',\n\t\ttitle: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n\t\torder: 2\n\t}\n}));\n\nStartFindReplaceAction.addImplementation(0, (accessor: ServicesAccessor, editor: ICodeEditor, args: any): boolean | Promise<void> => {\n\tif (!editor.hasModel() || editor.getOption(EditorOption.readOnly)) {\n\t\treturn false;\n\t}\n\tconst controller = CommonFindController.get(editor);\n\tif (!controller) {\n\t\treturn false;\n\t}\n\n\tconst currentSelection = editor.getSelection();\n\tconst findInputFocused = controller.isFindInputFocused();\n\t// we only seed search string from selection when the current selection is single line and not empty,\n\t// + the find input is not focused\n\tconst seedSearchStringFromSelection = !currentSelection.isEmpty()\n\t\t&& currentSelection.startLineNumber === currentSelection.endLineNumber\n\t\t&& (editor.getOption(EditorOption.find).seedSearchStringFromSelection !== 'never')\n\t\t&& !findInputFocused;\n\t/*\n\t* if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n\t* findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n\t* findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n\t* findInputFocused false seedSearchStringFromSelection false FocusFindInput\n\t*/\n\tconst shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n\t\tFindStartFocusAction.FocusReplaceInput : FindStartFocusAction.FocusFindInput;\n\n\treturn controller.start({\n\t\tforceRevealReplace: true,\n\t\tseedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n\t\tseedSearchStringFromNonEmptySelection: editor.getOption(EditorOption.find).seedSearchStringFromSelection === 'selection',\n\t\tseedSearchStringFromGlobalClipboard: editor.getOption(EditorOption.find).seedSearchStringFromSelection !== 'never',\n\t\tshouldFocus: shouldFocus,\n\t\tshouldAnimate: true,\n\t\tupdateSearchScope: false,\n\t\tloop: editor.getOption(EditorOption.find).loop\n\t});\n});\n\nregisterEditorContribution(CommonFindController.ID, FindController, EditorContributionInstantiation.Eager); // eager because it uses `saveViewState`/`restoreViewState`\n\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\n\nconst FindCommand = EditorCommand.bindToContribution<CommonFindController>(CommonFindController.get);\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.CloseFindWidgetCommand,\n\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\thandler: x => x.closeFindWidget(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.ToggleCaseSensitiveCommand,\n\tprecondition: undefined,\n\thandler: x => x.toggleCaseSensitive(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: ToggleCaseSensitiveKeybinding.primary,\n\t\tmac: ToggleCaseSensitiveKeybinding.mac,\n\t\twin: ToggleCaseSensitiveKeybinding.win,\n\t\tlinux: ToggleCaseSensitiveKeybinding.linux\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.ToggleWholeWordCommand,\n\tprecondition: undefined,\n\thandler: x => x.toggleWholeWords(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: ToggleWholeWordKeybinding.primary,\n\t\tmac: ToggleWholeWordKeybinding.mac,\n\t\twin: ToggleWholeWordKeybinding.win,\n\t\tlinux: ToggleWholeWordKeybinding.linux\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.ToggleRegexCommand,\n\tprecondition: undefined,\n\thandler: x => x.toggleRegex(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: ToggleRegexKeybinding.primary,\n\t\tmac: ToggleRegexKeybinding.mac,\n\t\twin: ToggleRegexKeybinding.win,\n\t\tlinux: ToggleRegexKeybinding.linux\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.ToggleSearchScopeCommand,\n\tprecondition: undefined,\n\thandler: x => x.toggleSearchScope(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: ToggleSearchScopeKeybinding.primary,\n\t\tmac: ToggleSearchScopeKeybinding.mac,\n\t\twin: ToggleSearchScopeKeybinding.win,\n\t\tlinux: ToggleSearchScopeKeybinding.linux\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.TogglePreserveCaseCommand,\n\tprecondition: undefined,\n\thandler: x => x.togglePreserveCase(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: TogglePreserveCaseKeybinding.primary,\n\t\tmac: TogglePreserveCaseKeybinding.mac,\n\t\twin: TogglePreserveCaseKeybinding.win,\n\t\tlinux: TogglePreserveCaseKeybinding.linux\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.ReplaceOneAction,\n\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\thandler: x => x.replace(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Digit1\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.ReplaceOneAction,\n\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\thandler: x => x.replace(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n\t\tprimary: KeyCode.Enter\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.ReplaceAllAction,\n\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\thandler: x => x.replaceAll(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.ReplaceAllAction,\n\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\thandler: x => x.replaceAll(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n\t\tprimary: undefined,\n\t\tmac: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t}\n\t}\n}));\n\nregisterEditorCommand(new FindCommand({\n\tid: FIND_IDS.SelectAllMatchesAction,\n\tprecondition: CONTEXT_FIND_WIDGET_VISIBLE,\n\thandler: x => x.selectAllMatches(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 5,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: KeyMod.Alt | KeyCode.Enter\n\t}\n}));\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,SAAS,cAAc;AAChC,SAAS,YAAY,uBAAuB;AAC5C,YAAY,aAAa;AACzB,SAAS,mBAAmB;AAC5B,SAAS,cAAc,eAAe,iCAAiC,mBAAmB,sBAAsB,uBAAuB,4BAA4B,2BAA2B,wBAAwB;AACtN,SAAS,oBAAoB;AAC7B,SAAS,mCAAmC;AAC5C,SAAS,cAAc;AACvB,SAAS,2BAA2B;AACpC,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,4BAA4B,6BAA6B,+BAA+B,6BAA6B,UAAU,+BAA+B,8BAA8B,uBAAuB,6BAA6B,iCAAiC;AAC1R,SAAS,yBAAyB;AAClC,SAAS,kBAAkB,8BAA8B,4BAA4B;AACrF,SAAS,YAAY,uBAAuB;AAC5C,YAAY,SAAS;AACrB,SAAS,cAAc;AACvB,SAAS,yBAAyB;AAClC,SAAS,gBAAgB,aAAa,0BAA0B;AAChE,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AACjC,SAAS,sBAAsB,gBAAgB;AAC/C,SAAS,0BAA0B;AACnC,SAAS,iBAAiB,cAAc,qBAAqB;AAC7D,SAAS,eAAe,wBAAwB;AAChD,SAAS,iBAAiB;AAC1B,SAAS,qBAAqB;AAE9B,MAAM,2BAA2B;AAE1B,SAAS,yBAAyB,QAAqB,gCAAuD,UAAU,wCAAiD,OAAsB;AACrM,MAAI,CAAC,OAAO,SAAS,GAAG;AACvB,WAAO;AAAA,EACR;AAEA,QAAM,YAAY,OAAO,aAAa;AAGtC,MAAK,kCAAkC,YAAY,UAAU,oBAAoB,UAAU,iBACvF,kCAAkC,YAAY;AACjD,QAAI,UAAU,QAAQ,GAAG;AACxB,YAAM,iBAAiB,OAAO,4BAA4B,UAAU,iBAAiB,CAAC;AACtF,UAAI,kBAAmB,UAAU,uCAAwC;AACxE,eAAO,eAAe;AAAA,MACvB;AAAA,IACD,OAAO;AACN,UAAI,OAAO,SAAS,EAAE,sBAAsB,SAAS,IAAI,0BAA0B;AAClF,eAAO,OAAO,SAAS,EAAE,gBAAgB,SAAS;AAAA,MACnD;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AACR;AAvBgB;AAyBT,IAAW,uBAAX,kBAAWA,0BAAX;AACN,EAAAA,4CAAA;AACA,EAAAA,4CAAA;AACA,EAAAA,4CAAA;AAHiB,SAAAA;AAAA,GAAA;AA2BX,IAAM,uBAAN,cAAmC,WAA0C;AAAA,EAzFpF,OAyFoF;AAAA;AAAA;AAAA,EAEnF,OAAuB,KAAK;AAAA,EAElB;AAAA,EACO;AAAA,EACP;AAAA,EACA;AAAA,EACF;AAAA,EACW;AAAA,EACF;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EAEnB,IAAI,SAAS;AACZ,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,OAAc,IAAI,QAAkD;AACnE,WAAO,OAAO,gBAAsC,qBAAqB,EAAE;AAAA,EAC5E;AAAA,EAEA,YACC,QACoB,mBACH,gBACE,kBACG,qBACP,cACd;AACD,UAAM;AACN,SAAK,UAAU;AACf,SAAK,qBAAqB,4BAA4B,OAAO,iBAAiB;AAC9E,SAAK,qBAAqB;AAC1B,SAAK,kBAAkB;AACvB,SAAK,oBAAoB;AACzB,SAAK,uBAAuB;AAC5B,SAAK,gBAAgB;AAErB,SAAK,wBAAwB,IAAI,QAAc,GAAG;AAClD,SAAK,SAAS,KAAK,UAAU,IAAI,iBAAiB,CAAC;AACnD,SAAK,eAAe;AACpB,SAAK,UAAU,KAAK,OAAO,yBAAyB,CAAC,MAAM,KAAK,gBAAgB,CAAC,CAAC,CAAC;AAEnF,SAAK,SAAS;AAEd,SAAK,UAAU,KAAK,QAAQ,iBAAiB,MAAM;AAClD,YAAM,oBAAqB,KAAK,QAAQ,SAAS,KAAK,KAAK,OAAO;AAElE,WAAK,aAAa;AAElB,WAAK,OAAO,OAAO;AAAA,QAClB,aAAa;AAAA,QACb,WAAW,KAAK,gBAAgB,WAAW,oBAAoB,aAAa,WAAW,KAAK;AAAA,QAC5F,WAAW,KAAK,gBAAgB,WAAW,oBAAoB,aAAa,WAAW,KAAK;AAAA,QAC5F,SAAS,KAAK,gBAAgB,WAAW,kBAAkB,aAAa,WAAW,KAAK;AAAA,QACxF,cAAc,KAAK,gBAAgB,WAAW,uBAAuB,aAAa,WAAW,KAAK;AAAA,MACnG,GAAG,KAAK;AAER,UAAI,mBAAmB;AACtB,aAAK,OAAO;AAAA,UACX,oBAAoB;AAAA,UACpB,+BAA+B;AAAA,UAC/B,uCAAuC;AAAA,UACvC,qCAAqC;AAAA,UACrC,aAAa;AAAA,UACb,eAAe;AAAA,UACf,mBAAmB;AAAA,UACnB,MAAM,KAAK,QAAQ,UAAU,aAAa,IAAI,EAAE;AAAA,QACjD,CAAC;AAAA,MACF;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEgB,UAAgB;AAC/B,SAAK,aAAa;AAClB,UAAM,QAAQ;AAAA,EACf;AAAA,EAEQ,eAAqB;AAC5B,QAAI,KAAK,QAAQ;AAChB,WAAK,OAAO,QAAQ;AACpB,WAAK,SAAS;AAAA,IACf;AAAA,EACD;AAAA,EAEQ,gBAAgB,GAAuC;AAC9D,SAAK,eAAe,CAAC;AAErB,QAAI,EAAE,YAAY;AACjB,UAAI,KAAK,OAAO,YAAY;AAC3B,aAAK,mBAAmB,IAAI,IAAI;AAAA,MACjC,OAAO;AACN,aAAK,mBAAmB,MAAM;AAC9B,aAAK,aAAa;AAAA,MACnB;AAAA,IACD;AACA,QAAI,EAAE,cAAc;AACnB,WAAK,oBAAoB,KAAK,OAAO,YAAY;AAAA,IAClD;AAAA,EACD;AAAA,EAEQ,eAAe,GAAiC;AACvD,QAAI,EAAE,SAAS;AACd,WAAK,gBAAgB,MAAM,kBAAkB,KAAK,OAAO,eAAe,aAAa,WAAW,cAAc,OAAO;AAAA,IACtH;AACA,QAAI,EAAE,WAAW;AAChB,WAAK,gBAAgB,MAAM,oBAAoB,KAAK,OAAO,iBAAiB,aAAa,WAAW,cAAc,OAAO;AAAA,IAC1H;AACA,QAAI,EAAE,WAAW;AAChB,WAAK,gBAAgB,MAAM,oBAAoB,KAAK,OAAO,iBAAiB,aAAa,WAAW,cAAc,OAAO;AAAA,IAC1H;AACA,QAAI,EAAE,cAAc;AACnB,WAAK,gBAAgB,MAAM,uBAAuB,KAAK,OAAO,oBAAoB,aAAa,WAAW,cAAc,OAAO;AAAA,IAChI;AAAA,EACD;AAAA,EAEQ,iBAAiB;AACxB,SAAK,OAAO,OAAO;AAAA,MAClB,WAAW,KAAK,gBAAgB,WAAW,oBAAoB,aAAa,WAAW,KAAK,OAAO,SAAS;AAAA,MAC5G,WAAW,KAAK,gBAAgB,WAAW,oBAAoB,aAAa,WAAW,KAAK,OAAO,SAAS;AAAA,MAC5G,SAAS,KAAK,gBAAgB,WAAW,kBAAkB,aAAa,WAAW,KAAK,OAAO,OAAO;AAAA,MACtG,cAAc,KAAK,gBAAgB,WAAW,uBAAuB,aAAa,WAAW,KAAK,OAAO,YAAY;AAAA,IACtH,GAAG,KAAK;AAAA,EACT;AAAA,EAEO,qBAA8B;AACpC,WAAO,CAAC,CAAC,2BAA2B,SAAS,KAAK,kBAAkB;AAAA,EACrE;AAAA,EAEO,WAA6B;AACnC,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,kBAAwB;AAC9B,SAAK,OAAO,OAAO;AAAA,MAClB,YAAY;AAAA,MACZ,aAAa;AAAA,IACd,GAAG,KAAK;AACR,SAAK,QAAQ,MAAM;AAAA,EACpB;AAAA,EAEO,sBAA4B;AAClC,SAAK,OAAO,OAAO,EAAE,WAAW,CAAC,KAAK,OAAO,UAAU,GAAG,KAAK;AAC/D,QAAI,CAAC,KAAK,OAAO,YAAY;AAC5B,WAAK,qBAAqB;AAAA,IAC3B;AAAA,EACD;AAAA,EAEO,mBAAyB;AAC/B,SAAK,OAAO,OAAO,EAAE,WAAW,CAAC,KAAK,OAAO,UAAU,GAAG,KAAK;AAC/D,QAAI,CAAC,KAAK,OAAO,YAAY;AAC5B,WAAK,qBAAqB;AAAA,IAC3B;AAAA,EACD;AAAA,EAEO,cAAoB;AAC1B,SAAK,OAAO,OAAO,EAAE,SAAS,CAAC,KAAK,OAAO,QAAQ,GAAG,KAAK;AAC3D,QAAI,CAAC,KAAK,OAAO,YAAY;AAC5B,WAAK,qBAAqB;AAAA,IAC3B;AAAA,EACD;AAAA,EAEO,qBAA2B;AACjC,SAAK,OAAO,OAAO,EAAE,cAAc,CAAC,KAAK,OAAO,aAAa,GAAG,KAAK;AACrE,QAAI,CAAC,KAAK,OAAO,YAAY;AAC5B,WAAK,qBAAqB;AAAA,IAC3B;AAAA,EACD;AAAA,EAEO,oBAA0B;AAChC,QAAI,KAAK,OAAO,aAAa;AAC5B,WAAK,OAAO,OAAO,EAAE,aAAa,KAAK,GAAG,IAAI;AAAA,IAC/C,OAAO;AACN,UAAI,KAAK,QAAQ,SAAS,GAAG;AAC5B,YAAI,aAAa,KAAK,QAAQ,cAAc;AAC5C,qBAAa,WAAW,IAAI,eAAa;AACxC,cAAI,UAAU,cAAc,KAAK,UAAU,gBAAgB,UAAU,iBAAiB;AACrF,wBAAY,UAAU;AAAA,cACrB,UAAU,gBAAgB;AAAA,cAC1B,KAAK,QAAQ,SAAS,EAAG,iBAAiB,UAAU,gBAAgB,CAAC;AAAA,YACtE;AAAA,UACD;AACA,cAAI,CAAC,UAAU,QAAQ,GAAG;AACzB,mBAAO;AAAA,UACR;AACA,iBAAO;AAAA,QACR,CAAC,EAAE,OAAO,CAAC,YAAkC,CAAC,CAAC,OAAO;AAEtD,YAAI,WAAW,QAAQ;AACtB,eAAK,OAAO,OAAO,EAAE,aAAa,WAAW,GAAG,IAAI;AAAA,QACrD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEO,gBAAgB,cAA4B;AAClD,QAAI,KAAK,OAAO,SAAS;AACxB,qBAAe,QAAQ,uBAAuB,YAAY;AAAA,IAC3D;AACA,SAAK,OAAO,OAAO,EAAE,aAA2B,GAAG,KAAK;AAAA,EACzD;AAAA,EAEO,qBAAqB,oBAA6B,OAAa;AAAA,EAEtE;AAAA,EAEA,MAAgB,OAAO,MAAyB,UAAgD;AAC/F,SAAK,aAAa;AAElB,QAAI,CAAC,KAAK,QAAQ,SAAS,GAAG;AAE7B;AAAA,IACD;AAEA,UAAM,eAAqC;AAAA,MAC1C,GAAG;AAAA,MACH,YAAY;AAAA,IACb;AAEA,QAAI,KAAK,kCAAkC,UAAU;AACpD,YAAM,wBAAwB,yBAAyB,KAAK,SAAS,KAAK,+BAA+B,KAAK,qCAAqC;AACnJ,UAAI,uBAAuB;AAC1B,YAAI,KAAK,OAAO,SAAS;AACxB,uBAAa,eAAe,QAAQ,uBAAuB,qBAAqB;AAAA,QACjF,OAAO;AACN,uBAAa,eAAe;AAAA,QAC7B;AAAA,MACD;AAAA,IACD,WAAW,KAAK,kCAAkC,cAAc,CAAC,KAAK,mBAAmB;AACxF,YAAM,wBAAwB,yBAAyB,KAAK,SAAS,KAAK,6BAA6B;AACvG,UAAI,uBAAuB;AAC1B,qBAAa,eAAe;AAAA,MAC7B;AAAA,IACD;AAEA,QAAI,CAAC,aAAa,gBAAgB,KAAK,qCAAqC;AAC3E,YAAM,wBAAwB,MAAM,KAAK,oBAAoB;AAE7D,UAAI,CAAC,KAAK,QAAQ,SAAS,GAAG;AAE7B;AAAA,MACD;AAEA,UAAI,uBAAuB;AAC1B,qBAAa,eAAe;AAAA,MAC7B;AAAA,IACD;AAGA,QAAI,KAAK,sBAAsB,aAAa,mBAAmB;AAC9D,mBAAa,oBAAoB;AAAA,IAClC,WAAW,CAAC,KAAK,mBAAmB,IAAI,GAAG;AAC1C,mBAAa,oBAAoB;AAAA,IAClC;AAEA,QAAI,KAAK,mBAAmB;AAC3B,YAAM,oBAAoB,KAAK,QAAQ,cAAc;AACrD,UAAI,kBAAkB,KAAK,eAAa,CAAC,UAAU,QAAQ,CAAC,GAAG;AAC9D,qBAAa,cAAc;AAAA,MAC5B;AAAA,IACD;AAEA,iBAAa,OAAO,KAAK;AAEzB,SAAK,OAAO,OAAO,cAAc,KAAK;AAEtC,QAAI,CAAC,KAAK,QAAQ;AACjB,WAAK,SAAS,IAAI,4BAA4B,KAAK,SAAS,KAAK,MAAM;AAAA,IACxE;AAAA,EACD;AAAA,EAEO,MAAM,MAAyB,UAAgD;AACrF,WAAO,KAAK,OAAO,MAAM,QAAQ;AAAA,EAClC;AAAA,EAEO,kBAA2B;AACjC,QAAI,KAAK,QAAQ;AAChB,WAAK,OAAO,gBAAgB;AAC5B,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEO,kBAA2B;AACjC,QAAI,KAAK,QAAQ;AAChB,WAAK,OAAO,gBAAgB;AAC5B,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEO,UAAU,OAAwB;AACxC,QAAI,KAAK,QAAQ;AAChB,WAAK,OAAO,YAAY,KAAK;AAC7B,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEO,UAAmB;AACzB,QAAI,KAAK,QAAQ;AAChB,WAAK,OAAO,QAAQ;AACpB,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEO,aAAsB;AAC5B,QAAI,KAAK,QAAQ;AAChB,UAAI,KAAK,QAAQ,SAAS,GAAG,2BAA2B,GAAG;AAC1D,aAAK,qBAAqB,KAAK,IAAI,SAAS,4BAA4B,2DAA2D,CAAC;AACpI,eAAO;AAAA,MACR;AACA,WAAK,OAAO,WAAW;AACvB,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEO,mBAA4B;AAClC,QAAI,KAAK,QAAQ;AAChB,WAAK,OAAO,iBAAiB;AAC7B,WAAK,QAAQ,MAAM;AACnB,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAa,sBAAuC;AACnD,QAAI,KAAK,QAAQ,UAAU,aAAa,IAAI,EAAE,uBAC1C,KAAK,QAAQ,SAAS,KACtB,CAAC,KAAK,QAAQ,SAAS,EAAE,qBAAqB,GAChD;AACD,aAAO,KAAK,kBAAkB,aAAa;AAAA,IAC5C;AACA,WAAO;AAAA,EACR;AAAA,EAEO,oBAAoB,MAAoB;AAC9C,QAAI,KAAK,QAAQ,UAAU,aAAa,IAAI,EAAE,uBAC1C,KAAK,QAAQ,SAAS,KACtB,CAAC,KAAK,QAAQ,SAAS,EAAE,qBAAqB,GAChD;AAED,WAAK,kBAAkB,cAAc,IAAI;AAAA,IAC1C;AAAA,EACD;AACD;AA7Va,uBAAN;AAAA,EAyBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA7BU;AA+VN,IAAM,iBAAN,cAA6B,qBAAgD;AAAA,EAKnF,YACC,QACsC,qBAClB,oBACiB,oBACL,eACV,qBACL,iBACE,kBACJ,cACd;AACD,UAAM,QAAQ,oBAAoB,iBAAiB,kBAAkB,qBAAqB,YAAY;AAThE;AAED;AACL;AAOhC,SAAK,UAAU;AACf,SAAK,qBAAqB;AAAA,EAC3B;AAAA,EA3cD,OAwboF;AAAA;AAAA;AAAA,EAE3E;AAAA,EACA;AAAA,EAkBR,MAAyB,OAAO,MAAyB,UAAgD;AACxG,QAAI,CAAC,KAAK,SAAS;AAClB,WAAK,kBAAkB;AAAA,IACxB;AAEA,UAAM,YAAY,KAAK,QAAQ,aAAa;AAC5C,QAAI,oBAAoB;AAExB,YAAQ,KAAK,QAAQ,UAAU,aAAa,IAAI,EAAE,qBAAqB;AAAA,MACtE,KAAK;AACJ,4BAAoB;AACpB;AAAA,MACD,KAAK;AACJ,4BAAoB;AACpB;AAAA,MACD,KAAK,aAAa;AACjB,cAAM,0BAA0B,CAAC,CAAC,aAAa,UAAU,oBAAoB,UAAU;AACvF,4BAAoB;AACpB;AAAA,MACD;AAAA,MACA;AACC;AAAA,IACF;AAEA,SAAK,oBAAoB,KAAK,qBAAqB;AAEnD,UAAM,MAAM,OAAO,MAAM,QAAQ;AAEjC,QAAI,KAAK,SAAS;AACjB,UAAI,KAAK,gBAAgB,2BAAwC;AAChE,aAAK,QAAQ,kBAAkB;AAAA,MAChC,WAAW,KAAK,gBAAgB,wBAAqC;AACpE,aAAK,QAAQ,eAAe;AAAA,MAC7B;AAAA,IACD;AAAA,EACD;AAAA,EAEgB,qBAAqB,oBAA6B,OAAa;AAC9E,QAAI,CAAC,KAAK,SAAS;AAClB,WAAK,kBAAkB;AAAA,IACxB;AACA,QAAI,KAAK,OAAO,cAAc,CAAC,mBAAmB;AACjD,WAAK,QAAS,qBAAqB;AAAA,IACpC,OAAO;AACN,WAAK,mBAAoB,qBAAqB;AAAA,IAC/C;AAAA,EACD;AAAA,EAEQ,oBAAoB;AAC3B,SAAK,UAAU,KAAK,UAAU,IAAI,WAAW,KAAK,SAAS,MAAM,KAAK,QAAQ,KAAK,qBAAqB,KAAK,oBAAoB,KAAK,oBAAoB,KAAK,eAAe,KAAK,iBAAiB,KAAK,sBAAsB,KAAK,aAAa,CAAC;AAClP,SAAK,qBAAqB,KAAK,UAAU,IAAI,kBAAkB,KAAK,SAAS,KAAK,QAAQ,KAAK,kBAAkB,CAAC;AAAA,EACnH;AAAA,EAEA,gBAAqB;AACpB,WAAO,KAAK,SAAS,aAAa;AAAA,EACnC;AAAA,EAEA,iBAAiB,OAAkB;AAClC,SAAK,SAAS,aAAa,KAAK;AAAA,EACjC;AACD;AAjFa,iBAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAdU;AAmFN,MAAM,kBAAkB,0BAA0B,IAAI,kBAAkB;AAAA,EAC9E,IAAI,SAAS;AAAA,EACb,OAAO,IAAI,SAAS,mBAAmB,MAAM;AAAA,EAC7C,OAAO;AAAA,EACP,cAAc,eAAe,GAAG,kBAAkB,OAAO,eAAe,IAAI,cAAc,CAAC;AAAA,EAC3F,QAAQ;AAAA,IACP,QAAQ;AAAA,IACR,SAAS,OAAO,UAAU,QAAQ;AAAA,IAClC,QAAQ,iBAAiB;AAAA,EAC1B;AAAA,EACA,UAAU;AAAA,IACT,QAAQ,OAAO;AAAA,IACf,OAAO;AAAA,IACP,OAAO,IAAI,SAAS,EAAE,KAAK,UAAU,SAAS,CAAC,uBAAuB,EAAE,GAAG,QAAQ;AAAA,IACnF,OAAO;AAAA,EACR;AACD,CAAC,CAAC;AAEF,gBAAgB,kBAAkB,GAAG,CAAC,UAA4B,QAAqB,SAAuC;AAC7H,QAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,MAAI,CAAC,YAAY;AAChB,WAAO;AAAA,EACR;AACA,SAAO,WAAW,MAAM;AAAA,IACvB,oBAAoB;AAAA,IACpB,+BAA+B,OAAO,UAAU,aAAa,IAAI,EAAE,kCAAkC,UAAU,WAAW;AAAA,IAC1H,uCAAuC,OAAO,UAAU,aAAa,IAAI,EAAE,kCAAkC;AAAA,IAC7G,qCAAqC,OAAO,UAAU,aAAa,IAAI,EAAE;AAAA,IACzE,aAAa;AAAA,IACb,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,MAAM,OAAO,UAAU,aAAa,IAAI,EAAE;AAAA,EAC3C,CAAC;AACF,CAAC;AAED,MAAM,qBAAqB;AAAA,EAC1B,aAAa;AAAA,EACb,MAAM,CAAC;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,MACP,YAAY;AAAA,QACX,cAAc,EAAE,MAAM,SAAS;AAAA,QAC/B,eAAe,EAAE,MAAM,SAAS;AAAA,QAChC,SAAS,EAAE,MAAM,UAAU;AAAA,QAC3B,gBAAgB,EAAE,MAAM,UAAU;AAAA,QAClC,iBAAiB,EAAE,MAAM,UAAU;AAAA,QACnC,cAAc,EAAE,MAAM,UAAU;AAAA,QAChC,iBAAiB,EAAE,MAAM,UAAU;AAAA,MACpC;AAAA,IACD;AAAA,EACD,CAAC;AACF;AAEO,MAAM,gCAAgC,aAAa;AAAA,EAhkB1D,OAgkB0D;AAAA;AAAA;AAAA,EAEzD,cAAc;AACb,UAAM;AAAA,MACL,IAAI,SAAS;AAAA,MACb,OAAO,IAAI,SAAS,2BAA2B,qBAAqB;AAAA,MACpE,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QACP,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,MACA,UAAU;AAAA,IACX,CAAC;AAAA,EACF;AAAA,EAEA,MAAa,IAAI,UAAmC,QAAqB,MAA2C;AACnH,UAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,QAAI,YAAY;AACf,YAAM,WAAiC,OAAO;AAAA,QAC7C,cAAc,KAAK;AAAA,QACnB,eAAe,KAAK;AAAA,QACpB,mBAAmB,KAAK,kBAAkB;AAAA,QAC1C,SAAS,KAAK;AAAA;AAAA,QAEd,WAAW,KAAK;AAAA;AAAA,QAEhB,WAAW,KAAK;AAAA;AAAA,QAEhB,cAAc,KAAK;AAAA;AAAA,MAEpB,IAAI,CAAC;AAEL,YAAM,WAAW,MAAM;AAAA,QACtB,oBAAoB;AAAA,QACpB,+BAAgC,WAAW,SAAS,EAAE,aAAa,WAAW,KAAM,OAAO,UAAU,aAAa,IAAI,EAAE,kCAAkC,UAAU,WAAW;AAAA,QAC/K,uCAAuC,OAAO,UAAU,aAAa,IAAI,EAAE,kCAAkC;AAAA,QAC7G,qCAAqC;AAAA,QACrC,aAAa;AAAA,QACb,eAAe;AAAA,QACf,mBAAmB,MAAM,mBAAmB;AAAA,QAC5C,MAAM,OAAO,UAAU,aAAa,IAAI,EAAE;AAAA,MAC3C,GAAG,QAAQ;AAEX,iBAAW,oBAAoB,WAAW,SAAS,EAAE,YAAY;AAAA,IAClE;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,aAAa;AAAA,EAlnB/D,OAknB+D;AAAA;AAAA;AAAA,EAE9D,cAAc;AACb,UAAM;AAAA,MACL,IAAI,SAAS;AAAA,MACb,OAAO,IAAI,SAAS,gCAAgC,qBAAqB;AAAA,MACzE,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QACP,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,KAAK;AAAA,UACJ,SAAS,OAAO,UAAU,QAAQ;AAAA,QACnC;AAAA,QACA,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAa,IAAI,UAAmC,QAAoC;AACvF,UAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,QAAI,YAAY;AACf,YAAM,WAAW,MAAM;AAAA,QACtB,oBAAoB;AAAA,QACpB,+BAA+B;AAAA,QAC/B,uCAAuC;AAAA,QACvC,qCAAqC;AAAA,QACrC,aAAa;AAAA,QACb,eAAe;AAAA,QACf,mBAAmB;AAAA,QACnB,MAAM,OAAO,UAAU,aAAa,IAAI,EAAE;AAAA,MAC3C,CAAC;AAED,iBAAW,oBAAoB,WAAW,SAAS,EAAE,YAAY;AAAA,IAClE;AAAA,EACD;AACD;AACO,MAAe,wBAAwB,aAAa;AAAA,EAvpB3D,OAupB2D;AAAA;AAAA;AAAA,EAC1D,MAAa,IAAI,UAAmC,QAAoC;AACvF,UAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,QAAI,cAAc,CAAC,KAAK,KAAK,UAAU,GAAG;AACzC,YAAM,WAAW,MAAM;AAAA,QACtB,oBAAoB;AAAA,QACpB,+BAAgC,WAAW,SAAS,EAAE,aAAa,WAAW,KAAM,OAAO,UAAU,aAAa,IAAI,EAAE,kCAAkC,UAAU,WAAW;AAAA,QAC/K,uCAAuC,OAAO,UAAU,aAAa,IAAI,EAAE,kCAAkC;AAAA,QAC7G,qCAAqC;AAAA,QACrC,aAAa;AAAA,QACb,eAAe;AAAA,QACf,mBAAmB;AAAA,QACnB,MAAM,OAAO,UAAU,aAAa,IAAI,EAAE;AAAA,MAC3C,CAAC;AACD,WAAK,KAAK,UAAU;AAAA,IACrB;AAAA,EACD;AAGD;AAEO,MAAM,4BAA4B,gBAAgB;AAAA,EA5qBzD,OA4qByD;AAAA;AAAA;AAAA,EAExD,cAAc;AACb,UAAM;AAAA,MACL,IAAI,SAAS;AAAA,MACb,OAAO,IAAI,SAAS,uBAAuB,WAAW;AAAA,MACtD,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ,CAAC;AAAA,QACR,QAAQ,kBAAkB;AAAA,QAC1B,SAAS,QAAQ;AAAA,QACjB,KAAK,EAAE,SAAS,OAAO,UAAU,QAAQ,MAAM,WAAW,CAAC,QAAQ,EAAE,EAAE;AAAA,QACvE,QAAQ,iBAAiB;AAAA,MAC1B,GAAG;AAAA,QACF,QAAQ,eAAe,IAAI,kBAAkB,OAAO,0BAA0B;AAAA,QAC9E,SAAS,QAAQ;AAAA,QACjB,QAAQ,iBAAiB;AAAA,MAC1B,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AAAA,EAEU,KAAK,YAA2C;AACzD,UAAM,SAAS,WAAW,gBAAgB;AAC1C,QAAI,QAAQ;AACX,iBAAW,OAAO,aAAa;AAC/B,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AACD;AAGO,MAAM,gCAAgC,gBAAgB;AAAA,EA7sB7D,OA6sB6D;AAAA;AAAA;AAAA,EAE5D,cAAc;AACb,UAAM;AAAA,MACL,IAAI,SAAS;AAAA,MACb,OAAO,IAAI,SAAS,2BAA2B,eAAe;AAAA,MAC9D,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QAAC;AAAA,UACR,QAAQ,kBAAkB;AAAA,UAC1B,SAAS,OAAO,QAAQ,QAAQ;AAAA,UAChC,KAAK,EAAE,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ,MAAM,WAAW,CAAC,OAAO,QAAQ,QAAQ,EAAE,EAAE;AAAA,UACrG,QAAQ,iBAAiB;AAAA,QAC1B;AAAA,QAAG;AAAA,UACF,QAAQ,eAAe,IAAI,kBAAkB,OAAO,0BAA0B;AAAA,UAC9E,SAAS,OAAO,QAAQ,QAAQ;AAAA,UAChC,QAAQ,iBAAiB;AAAA,QAC1B;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEU,KAAK,YAA2C;AACzD,WAAO,WAAW,gBAAgB;AAAA,EACnC;AACD;AAEO,MAAM,8BAA8B,aAAa;AAAA,EAxuBxD,OAwuBwD;AAAA;AAAA;AAAA,EAE/C,wBAAkC,CAAC;AAAA,EAC3C,cAAc;AACb,UAAM;AAAA,MACL,IAAI,SAAS;AAAA,MACb,OAAO,IAAI,SAAS,6BAA6B,gBAAgB;AAAA,MACjE,OAAO;AAAA,MACP,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEO,IAAI,UAA4B,QAAqB,MAAiC;AAC5F,UAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,QAAI,CAAC,YAAY;AAChB;AAAA,IACD;AAEA,UAAM,eAAe,WAAW,SAAS,EAAE;AAC3C,QAAI,eAAe,GAAG;AACrB,YAAM,sBAAsB,SAAS,IAAI,oBAAoB;AAC7D,0BAAoB,OAAO;AAAA,QAC1B,UAAU,SAAS;AAAA,QACnB,SAAS,IAAI,SAAS,6BAA6B,+CAA+C;AAAA,MACnG,CAAC;AACD;AAAA,IACD;AAEA,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,cAAc,IAAI,gBAAgB;AACxC,UAAM,WAAW,YAAY,IAAI,kBAAkB,eAAe,CAAC;AACnE,aAAS,cAAc,IAAI,SAAS,oCAAoC,+DAA+D,YAAY;AAEnJ,UAAM,mBAAmB,wBAAC,UAAsC;AAC/D,YAAM,QAAQ,SAAS,KAAK;AAC5B,UAAI,MAAM,KAAK,GAAG;AACjB,eAAO;AAAA,MACR;AAEA,YAAM,aAAa,WAAW,SAAS,EAAE;AACzC,UAAI,QAAQ,KAAK,SAAS,YAAY;AACrC,eAAO,QAAQ;AAAA,MAChB,WAAW,QAAQ,KAAK,SAAS,CAAC,YAAY;AAC7C,eAAO,aAAa;AAAA,MACrB;AAEA,aAAO;AAAA,IACR,GAdyB;AAgBzB,UAAM,wBAAwB,wBAAC,UAAkB;AAChD,YAAM,QAAQ,iBAAiB,KAAK;AACpC,UAAI,OAAO,UAAU,UAAU;AAE9B,iBAAS,oBAAoB;AAC7B,mBAAW,UAAU,KAAK;AAC1B,cAAM,eAAe,WAAW,SAAS,EAAE;AAC3C,YAAI,cAAc;AACjB,eAAK,eAAe,QAAQ,YAAY;AAAA,QACzC;AAAA,MACD,OAAO;AACN,iBAAS,oBAAoB,IAAI,SAAS,0CAA0C,0CAA0C,WAAW,SAAS,EAAE,YAAY;AAChK,aAAK,iBAAiB,MAAM;AAAA,MAC7B;AAAA,IACD,GAd8B;AAe9B,gBAAY,IAAI,SAAS,iBAAiB,WAAS;AAClD,4BAAsB,KAAK;AAAA,IAC5B,CAAC,CAAC;AAEF,gBAAY,IAAI,SAAS,YAAY,MAAM;AAC1C,YAAM,QAAQ,iBAAiB,SAAS,KAAK;AAC7C,UAAI,OAAO,UAAU,UAAU;AAC9B,mBAAW,UAAU,KAAK;AAC1B,iBAAS,KAAK;AAAA,MACf,OAAO;AACN,iBAAS,oBAAoB,IAAI,SAAS,0CAA0C,0CAA0C,WAAW,SAAS,EAAE,YAAY;AAAA,MACjK;AAAA,IACD,CAAC,CAAC;AAEF,gBAAY,IAAI,SAAS,UAAU,MAAM;AACxC,WAAK,iBAAiB,MAAM;AAC5B,kBAAY,QAAQ;AAAA,IACrB,CAAC,CAAC;AAEF,aAAS,KAAK;AAAA,EACf;AAAA,EAEQ,iBAAiB,QAA2B;AACnD,WAAO,kBAAkB,oBAAkB;AAC1C,WAAK,wBAAwB,eAAe,iBAAiB,KAAK,uBAAuB,CAAC,CAAC;AAAA,IAC5F,CAAC;AAAA,EACF;AAAA,EAEQ,eAAe,QAAqB,OAAqB;AAChE,WAAO,kBAAkB,oBAAkB;AAC1C,WAAK,wBAAwB,eAAe,iBAAiB,KAAK,uBAAuB;AAAA,QACxF;AAAA,UACC;AAAA,UACA,SAAS;AAAA,YACR,aAAa;AAAA,YACb,WAAW;AAAA,YACX,aAAa;AAAA,UACd;AAAA,QACD;AAAA,QACA;AAAA,UACC;AAAA,UACA,SAAS;AAAA,YACR,aAAa;AAAA,YACb,eAAe;AAAA,cACd,OAAO,iBAAiB,2BAA2B;AAAA,cACnD,UAAU,kBAAkB;AAAA,YAC7B;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AACD;AAEO,MAAe,iCAAiC,aAAa;AAAA,EA91BpE,OA81BoE;AAAA;AAAA;AAAA,EACnE,MAAa,IAAI,UAAmC,QAAoC;AACvF,UAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,QAAI,CAAC,YAAY;AAChB;AAAA,IACD;AAEA,UAAM,wBAAwB,yBAAyB,QAAQ,UAAU,KAAK;AAC9E,QAAI,uBAAuB;AAC1B,iBAAW,gBAAgB,qBAAqB;AAAA,IACjD;AACA,QAAI,CAAC,KAAK,KAAK,UAAU,GAAG;AAC3B,YAAM,WAAW,MAAM;AAAA,QACtB,oBAAoB;AAAA,QACpB,+BAA+B;AAAA,QAC/B,uCAAuC;AAAA,QACvC,qCAAqC;AAAA,QACrC,aAAa;AAAA,QACb,eAAe;AAAA,QACf,mBAAmB;AAAA,QACnB,MAAM,OAAO,UAAU,aAAa,IAAI,EAAE;AAAA,MAC3C,CAAC;AACD,WAAK,KAAK,UAAU;AAAA,IACrB;AAAA,EACD;AAGD;AAEO,MAAM,qCAAqC,yBAAyB;AAAA,EA33B3E,OA23B2E;AAAA;AAAA;AAAA,EAE1E,cAAc;AACb,UAAM;AAAA,MACL,IAAI,SAAS;AAAA,MACb,OAAO,IAAI,SAAS,gCAAgC,qBAAqB;AAAA,MACzE,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QACP,QAAQ,kBAAkB;AAAA,QAC1B,SAAS,OAAO,UAAU,QAAQ;AAAA,QAClC,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEU,KAAK,YAA2C;AACzD,WAAO,WAAW,gBAAgB;AAAA,EACnC;AACD;AAEO,MAAM,yCAAyC,yBAAyB;AAAA,EAh5B/E,OAg5B+E;AAAA;AAAA;AAAA,EAE9E,cAAc;AACb,UAAM;AAAA,MACL,IAAI,SAAS;AAAA,MACb,OAAO,IAAI,SAAS,oCAAoC,yBAAyB;AAAA,MACjF,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QACP,QAAQ,kBAAkB;AAAA,QAC1B,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,QACjD,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEU,KAAK,YAA2C;AACzD,WAAO,WAAW,gBAAgB;AAAA,EACnC;AACD;AAEO,MAAM,yBAAyB,0BAA0B,IAAI,kBAAkB;AAAA,EACrF,IAAI,SAAS;AAAA,EACb,OAAO,IAAI,SAAS,gBAAgB,SAAS;AAAA,EAC7C,OAAO;AAAA,EACP,cAAc,eAAe,GAAG,kBAAkB,OAAO,eAAe,IAAI,cAAc,CAAC;AAAA,EAC3F,QAAQ;AAAA,IACP,QAAQ;AAAA,IACR,SAAS,OAAO,UAAU,QAAQ;AAAA,IAClC,KAAK,EAAE,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ,KAAK;AAAA,IAC3D,QAAQ,iBAAiB;AAAA,EAC1B;AAAA,EACA,UAAU;AAAA,IACT,QAAQ,OAAO;AAAA,IACf,OAAO;AAAA,IACP,OAAO,IAAI,SAAS,EAAE,KAAK,aAAa,SAAS,CAAC,uBAAuB,EAAE,GAAG,WAAW;AAAA,IACzF,OAAO;AAAA,EACR;AACD,CAAC,CAAC;AAEF,uBAAuB,kBAAkB,GAAG,CAAC,UAA4B,QAAqB,SAAuC;AACpI,MAAI,CAAC,OAAO,SAAS,KAAK,OAAO,UAAU,aAAa,QAAQ,GAAG;AAClE,WAAO;AAAA,EACR;AACA,QAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,MAAI,CAAC,YAAY;AAChB,WAAO;AAAA,EACR;AAEA,QAAM,mBAAmB,OAAO,aAAa;AAC7C,QAAM,mBAAmB,WAAW,mBAAmB;AAGvD,QAAM,gCAAgC,CAAC,iBAAiB,QAAQ,KAC5D,iBAAiB,oBAAoB,iBAAiB,iBACrD,OAAO,UAAU,aAAa,IAAI,EAAE,kCAAkC,WACvE,CAAC;AAQL,QAAM,cAAe,oBAAoB,gCACxC,4BAAyC;AAE1C,SAAO,WAAW,MAAM;AAAA,IACvB,oBAAoB;AAAA,IACpB,+BAA+B,gCAAgC,WAAW;AAAA,IAC1E,uCAAuC,OAAO,UAAU,aAAa,IAAI,EAAE,kCAAkC;AAAA,IAC7G,qCAAqC,OAAO,UAAU,aAAa,IAAI,EAAE,kCAAkC;AAAA,IAC3G;AAAA,IACA,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,MAAM,OAAO,UAAU,aAAa,IAAI,EAAE;AAAA,EAC3C,CAAC;AACF,CAAC;AAED,2BAA2B,qBAAqB,IAAI,gBAAgB,gCAAgC,KAAK;AAEzG,qBAAqB,uBAAuB;AAC5C,qBAAqB,4BAA4B;AACjD,qBAAqB,mBAAmB;AACxC,qBAAqB,uBAAuB;AAC5C,qBAAqB,qBAAqB;AAC1C,qBAAqB,4BAA4B;AACjD,qBAAqB,gCAAgC;AAErD,MAAM,cAAc,cAAc,mBAAyC,qBAAqB,GAAG;AAEnG,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,gBAAgB,GAAvB;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,eAAe,IAAI,kBAAkB,OAAO,eAAe,IAAI,aAAa,CAAC;AAAA,IACrF,SAAS,QAAQ;AAAA,IACjB,WAAW,CAAC,OAAO,QAAQ,QAAQ,MAAM;AAAA,EAC1C;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,oBAAoB,GAA3B;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,kBAAkB;AAAA,IAC1B,SAAS,8BAA8B;AAAA,IACvC,KAAK,8BAA8B;AAAA,IACnC,KAAK,8BAA8B;AAAA,IACnC,OAAO,8BAA8B;AAAA,EACtC;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,iBAAiB,GAAxB;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,kBAAkB;AAAA,IAC1B,SAAS,0BAA0B;AAAA,IACnC,KAAK,0BAA0B;AAAA,IAC/B,KAAK,0BAA0B;AAAA,IAC/B,OAAO,0BAA0B;AAAA,EAClC;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,YAAY,GAAnB;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,kBAAkB;AAAA,IAC1B,SAAS,sBAAsB;AAAA,IAC/B,KAAK,sBAAsB;AAAA,IAC3B,KAAK,sBAAsB;AAAA,IAC3B,OAAO,sBAAsB;AAAA,EAC9B;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,kBAAkB,GAAzB;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,kBAAkB;AAAA,IAC1B,SAAS,4BAA4B;AAAA,IACrC,KAAK,4BAA4B;AAAA,IACjC,KAAK,4BAA4B;AAAA,IACjC,OAAO,4BAA4B;AAAA,EACpC;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,mBAAmB,GAA1B;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,kBAAkB;AAAA,IAC1B,SAAS,6BAA6B;AAAA,IACtC,KAAK,6BAA6B;AAAA,IAClC,KAAK,6BAA6B;AAAA,IAClC,OAAO,6BAA6B;AAAA,EACrC;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,QAAQ,GAAf;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,kBAAkB;AAAA,IAC1B,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,EAClD;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,QAAQ,GAAf;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,eAAe,IAAI,kBAAkB,OAAO,6BAA6B;AAAA,IACjF,SAAS,QAAQ;AAAA,EAClB;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,WAAW,GAAlB;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,kBAAkB;AAAA,IAC1B,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ;AAAA,EAChD;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,WAAW,GAAlB;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,eAAe,IAAI,kBAAkB,OAAO,6BAA6B;AAAA,IACjF,SAAS;AAAA,IACT,KAAK;AAAA,MACJ,SAAS,OAAO,UAAU,QAAQ;AAAA,IACnC;AAAA,EACD;AACD,CAAC,CAAC;AAEF,sBAAsB,IAAI,YAAY;AAAA,EACrC,IAAI,SAAS;AAAA,EACb,cAAc;AAAA,EACd,SAAS,8BAAK,EAAE,iBAAiB,GAAxB;AAAA,EACT,QAAQ;AAAA,IACP,QAAQ,iBAAiB,gBAAgB;AAAA,IACzC,QAAQ,kBAAkB;AAAA,IAC1B,SAAS,OAAO,MAAM,QAAQ;AAAA,EAC/B;AACD,CAAC,CAAC;",
  "names": ["FindStartFocusAction"]
}
