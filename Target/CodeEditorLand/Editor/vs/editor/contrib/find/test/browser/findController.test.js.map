{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/find/test/browser/findController.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Delayer } from '../../../../../base/common/async.js';\nimport * as platform from '../../../../../base/common/platform.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { EditorAction } from '../../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../../common/core/editOperation.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { CommonFindController, FindStartFocusAction, IFindStartOptions, NextMatchFindAction, NextSelectionMatchFindAction, StartFindAction, StartFindReplaceAction, StartFindWithSelectionAction } from '../../browser/findController.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED } from '../../browser/findModel.js';\nimport { withAsyncTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\nimport { IClipboardService } from '../../../../../platform/clipboard/common/clipboardService.js';\nimport { IContextKey, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IHoverService } from '../../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IStorageService, InMemoryStorageService, StorageScope, StorageTarget } from '../../../../../platform/storage/common/storage.js';\n\nclass TestFindController extends CommonFindController {\n\n\tpublic hasFocus: boolean;\n\tpublic delayUpdateHistory: boolean = false;\n\n\tprivate _findInputFocused: IContextKey<boolean>;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IHoverService hoverService: IHoverService\n\t) {\n\t\tsuper(editor, contextKeyService, storageService, clipboardService, notificationService, hoverService);\n\t\tthis._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n\t\tthis._updateHistoryDelayer = new Delayer<void>(50);\n\t\tthis.hasFocus = false;\n\t}\n\n\tprotected override async _start(opts: IFindStartOptions): Promise<void> {\n\t\tawait super._start(opts);\n\n\t\tif (opts.shouldFocus !== FindStartFocusAction.NoFocusChange) {\n\t\t\tthis.hasFocus = true;\n\t\t}\n\n\t\tconst inputFocused = opts.shouldFocus === FindStartFocusAction.FocusFindInput;\n\t\tthis._findInputFocused.set(inputFocused);\n\t}\n}\n\nfunction fromSelection(slc: Selection): number[] {\n\treturn [slc.startLineNumber, slc.startColumn, slc.endLineNumber, slc.endColumn];\n}\n\nfunction executeAction(instantiationService: IInstantiationService, editor: ICodeEditor, action: EditorAction, args?: any): Promise<void> {\n\treturn instantiationService.invokeFunction((accessor) => {\n\t\treturn Promise.resolve(action.runEditorCommand(accessor, editor, args));\n\t});\n}\n\nsuite('FindController', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet clipboardState = '';\n\tconst serviceCollection = new ServiceCollection();\n\tserviceCollection.set(IStorageService, new InMemoryStorageService());\n\n\tif (platform.isMacintosh) {\n\t\tserviceCollection.set(IClipboardService, <any>{\n\t\t\treadFindText: () => clipboardState,\n\t\t\twriteFindText: (value: any) => { clipboardState = value; }\n\t\t});\n\t}\n\n\t/* test('stores to the global clipboard buffer on start find action', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'ABC',\n\t\t\t'ABC',\n\t\t\t'XYZ',\n\t\t\t'ABC'\n\t\t], { serviceCollection: serviceCollection }, async (editor) => {\n\t\t\tclipboardState = '';\n\t\t\tif (!platform.isMacintosh) {\n\t\t\t\tassert.ok(true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tlet startFindAction = new StartFindAction();\n\t\t\t// I select ABC on the first line\n\t\t\teditor.setSelection(new Selection(1, 1, 1, 4));\n\t\t\t// I hit Ctrl+F to show the Find dialog\n\t\t\tstartFindAction.run(null, editor);\n\n\t\t\tassert.deepStrictEqual(findController.getGlobalBufferTerm(), findController.getState().searchString);\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('reads from the global clipboard buffer on next find action if buffer exists', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'ABC',\n\t\t\t'ABC',\n\t\t\t'XYZ',\n\t\t\t'ABC'\n\t\t], { serviceCollection: serviceCollection }, async (editor) => {\n\t\t\tclipboardState = 'ABC';\n\n\t\t\tif (!platform.isMacintosh) {\n\t\t\t\tassert.ok(true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tlet findState = findController.getState();\n\t\t\tlet nextMatchFindAction = new NextMatchFindAction();\n\n\t\t\tnextMatchFindAction.run(null, editor);\n\t\t\tassert.strictEqual(findState.searchString, 'ABC');\n\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [1, 1, 1, 4]);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('writes to the global clipboard buffer when text changes', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'ABC',\n\t\t\t'ABC',\n\t\t\t'XYZ',\n\t\t\t'ABC'\n\t\t], { serviceCollection: serviceCollection }, async (editor) => {\n\t\t\tclipboardState = '';\n\t\t\tif (!platform.isMacintosh) {\n\t\t\t\tassert.ok(true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tlet findState = findController.getState();\n\n\t\t\tfindState.change({ searchString: 'ABC' }, true);\n\n\t\t\tassert.deepStrictEqual(findController.getGlobalBufferTerm(), 'ABC');\n\n\t\t\tfindController.dispose();\n\t\t});\n\t}); */\n\n\ttest('issue #1857: F3, Find Next, acts like \"Find Under Cursor\"', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'ABC',\n\t\t\t'ABC',\n\t\t\t'XYZ',\n\t\t\t'ABC'\n\t\t], { serviceCollection: serviceCollection }, async (editor, _, instantiationService) => {\n\t\t\tclipboardState = '';\n\t\t\t// The cursor is at the very top, of the file, at the first ABC\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tconst findState = findController.getState();\n\t\t\tconst nextMatchFindAction = new NextMatchFindAction();\n\n\t\t\t// I hit Ctrl+F to show the Find dialog\n\t\t\tawait executeAction(instantiationService, editor, StartFindAction);\n\n\t\t\t// I type ABC.\n\t\t\tfindState.change({ searchString: 'A' }, true);\n\t\t\tfindState.change({ searchString: 'AB' }, true);\n\t\t\tfindState.change({ searchString: 'ABC' }, true);\n\n\t\t\t// The first ABC is highlighted.\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [1, 1, 1, 4]);\n\n\t\t\t// I hit Esc to exit the Find dialog.\n\t\t\tfindController.closeFindWidget();\n\t\t\tfindController.hasFocus = false;\n\n\t\t\t// The cursor is now at end of the first line, with ABC on that line highlighted.\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [1, 1, 1, 4]);\n\n\t\t\t// I hit delete to remove it and change the text to XYZ.\n\t\t\teditor.pushUndoStop();\n\t\t\teditor.executeEdits('test', [EditOperation.delete(new Range(1, 1, 1, 4))]);\n\t\t\teditor.executeEdits('test', [EditOperation.insert(new Position(1, 1), 'XYZ')]);\n\t\t\teditor.pushUndoStop();\n\n\t\t\t// At this point the text editor looks like this:\n\t\t\t//   XYZ\n\t\t\t//   ABC\n\t\t\t//   XYZ\n\t\t\t//   ABC\n\t\t\tassert.strictEqual(editor.getModel()!.getLineContent(1), 'XYZ');\n\n\t\t\t// The cursor is at end of the first line.\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [1, 4, 1, 4]);\n\n\t\t\t// I hit F3 to \"Find Next\" to find the next occurrence of ABC, but instead it searches for XYZ.\n\t\t\tawait nextMatchFindAction.run(null, editor);\n\n\t\t\tassert.strictEqual(findState.searchString, 'ABC');\n\t\t\tassert.strictEqual(findController.hasFocus, false);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #3090: F3 does not loop with two matches on a single line', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'import nls = require(\\'vs/nls\\');'\n\t\t], { serviceCollection: serviceCollection }, async (editor) => {\n\t\t\tclipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tconst nextMatchFindAction = new NextMatchFindAction();\n\n\t\t\teditor.setPosition({\n\t\t\t\tlineNumber: 1,\n\t\t\t\tcolumn: 9\n\t\t\t});\n\n\t\t\tawait nextMatchFindAction.run(null, editor);\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [1, 26, 1, 29]);\n\n\t\t\tawait nextMatchFindAction.run(null, editor);\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [1, 8, 1, 11]);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #6149: Auto-escape highlighted text for search and replace regex mode', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'var x = (3 * 5)',\n\t\t\t'var y = (3 * 5)',\n\t\t\t'var z = (3  * 5)',\n\t\t], { serviceCollection: serviceCollection }, async (editor, _, instantiationService) => {\n\t\t\tclipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tconst nextMatchFindAction = new NextMatchFindAction();\n\n\t\t\teditor.setSelection(new Selection(1, 9, 1, 13));\n\n\t\t\tfindController.toggleRegex();\n\t\t\tawait executeAction(instantiationService, editor, StartFindAction);\n\n\t\t\tawait nextMatchFindAction.run(null, editor);\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [2, 9, 2, 13]);\n\n\t\t\tawait nextMatchFindAction.run(null, editor);\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [1, 9, 1, 13]);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #41027: Don\\'t replace find input value on replace action if find input is active', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'test',\n\t\t], { serviceCollection: serviceCollection }, async (editor, _, instantiationService) => {\n\t\t\tconst testRegexString = 'tes.';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tconst nextMatchFindAction = new NextMatchFindAction();\n\n\t\t\tfindController.toggleRegex();\n\t\t\tfindController.setSearchString(testRegexString);\n\t\t\tawait findController.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: 'none',\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.FocusFindInput,\n\t\t\t\tshouldAnimate: false,\n\t\t\t\tupdateSearchScope: false,\n\t\t\t\tloop: true\n\t\t\t});\n\t\t\tawait nextMatchFindAction.run(null, editor);\n\t\t\tawait executeAction(instantiationService, editor, StartFindReplaceAction);\n\n\t\t\tassert.strictEqual(findController.getState().searchString, testRegexString);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #9043: Clear search scope when find widget is hidden', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'var x = (3 * 5)',\n\t\t\t'var y = (3 * 5)',\n\t\t\t'var z = (3 * 5)',\n\t\t], { serviceCollection: serviceCollection }, async (editor) => {\n\t\t\tclipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tawait findController.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: 'none',\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: false,\n\t\t\t\tupdateSearchScope: false,\n\t\t\t\tloop: true\n\t\t\t});\n\n\t\t\tassert.strictEqual(findController.getState().searchScope, null);\n\n\t\t\tfindController.getState().change({\n\t\t\t\tsearchScope: [new Range(1, 1, 1, 5)]\n\t\t\t}, false);\n\n\t\t\tassert.deepStrictEqual(findController.getState().searchScope, [new Range(1, 1, 1, 5)]);\n\n\t\t\tfindController.closeFindWidget();\n\t\t\tassert.strictEqual(findController.getState().searchScope, null);\n\t\t});\n\t});\n\n\ttest('issue #18111: Regex replace with single space replaces with no space', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'HRESULT OnAmbientPropertyChange(DISPID   dispid);'\n\t\t], { serviceCollection: serviceCollection }, async (editor, _, instantiationService) => {\n\t\t\tclipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\n\t\t\tawait executeAction(instantiationService, editor, StartFindAction);\n\n\t\t\tfindController.getState().change({ searchString: '\\\\b\\\\s{3}\\\\b', replaceString: ' ', isRegex: true }, false);\n\t\t\tfindController.moveToNextMatch();\n\n\t\t\tassert.deepStrictEqual(editor.getSelections()!.map(fromSelection), [\n\t\t\t\t[1, 39, 1, 42]\n\t\t\t]);\n\n\t\t\tfindController.replace();\n\n\t\t\tassert.deepStrictEqual(editor.getValue(), 'HRESULT OnAmbientPropertyChange(DISPID dispid);');\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #24714: Regular expression with ^ in search & replace', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'',\n\t\t\t'line2',\n\t\t\t'line3'\n\t\t], { serviceCollection: serviceCollection }, async (editor, _, instantiationService) => {\n\t\t\tclipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\n\t\t\tawait executeAction(instantiationService, editor, StartFindAction);\n\n\t\t\tfindController.getState().change({ searchString: '^', replaceString: 'x', isRegex: true }, false);\n\t\t\tfindController.moveToNextMatch();\n\n\t\t\tassert.deepStrictEqual(editor.getSelections()!.map(fromSelection), [\n\t\t\t\t[2, 1, 2, 1]\n\t\t\t]);\n\n\t\t\tfindController.replace();\n\n\t\t\tassert.deepStrictEqual(editor.getValue(), '\\nxline2\\nline3');\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #38232: Find Next Selection, regex enabled', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'([funny]',\n\t\t\t'',\n\t\t\t'([funny]'\n\t\t], { serviceCollection: serviceCollection }, async (editor) => {\n\t\t\tclipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tconst nextSelectionMatchFindAction = new NextSelectionMatchFindAction();\n\n\t\t\t// toggle regex\n\t\t\tfindController.getState().change({ isRegex: true }, false);\n\n\t\t\t// change selection\n\t\t\teditor.setSelection(new Selection(1, 1, 1, 9));\n\n\t\t\t// cmd+f3\n\t\t\tawait nextSelectionMatchFindAction.run(null, editor);\n\n\t\t\tassert.deepStrictEqual(editor.getSelections()!.map(fromSelection), [\n\t\t\t\t[3, 1, 3, 9]\n\t\t\t]);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #38232: Find Next Selection, regex enabled, find widget open', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'([funny]',\n\t\t\t'',\n\t\t\t'([funny]'\n\t\t], { serviceCollection: serviceCollection }, async (editor, _, instantiationService) => {\n\t\t\tclipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tconst nextSelectionMatchFindAction = new NextSelectionMatchFindAction();\n\n\t\t\t// cmd+f - open find widget\n\t\t\tawait executeAction(instantiationService, editor, StartFindAction);\n\n\t\t\t// toggle regex\n\t\t\tfindController.getState().change({ isRegex: true }, false);\n\n\t\t\t// change selection\n\t\t\teditor.setSelection(new Selection(1, 1, 1, 9));\n\n\t\t\t// cmd+f3\n\t\t\tawait nextSelectionMatchFindAction.run(null, editor);\n\n\t\t\tassert.deepStrictEqual(editor.getSelections()!.map(fromSelection), [\n\t\t\t\t[3, 1, 3, 9]\n\t\t\t]);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #47400, CMD+E supports feeding multiple line of text into the find widget', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'ABC',\n\t\t\t'ABC',\n\t\t\t'XYZ',\n\t\t\t'ABC',\n\t\t\t'ABC'\n\t\t], { serviceCollection: serviceCollection }, async (editor, _, instantiationService) => {\n\t\t\tclipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\n\t\t\t// change selection\n\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\n\t\t\t// cmd+f - open find widget\n\t\t\tawait executeAction(instantiationService, editor, StartFindAction);\n\n\t\t\teditor.setSelection(new Selection(1, 1, 2, 4));\n\t\t\tconst startFindWithSelectionAction = new StartFindWithSelectionAction();\n\t\t\tawait startFindWithSelectionAction.run(null, editor);\n\t\t\tconst findState = findController.getState();\n\n\t\t\tassert.deepStrictEqual(findState.searchString.split(/\\r\\n|\\r|\\n/g), ['ABC', 'ABC']);\n\n\t\t\teditor.setSelection(new Selection(3, 1, 3, 1));\n\t\t\tawait startFindWithSelectionAction.run(null, editor);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #109756, CMD+E with empty cursor should always work', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'ABC',\n\t\t\t'ABC',\n\t\t\t'XYZ',\n\t\t\t'ABC',\n\t\t\t'ABC'\n\t\t], { serviceCollection: serviceCollection }, async (editor) => {\n\t\t\tclipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\teditor.setSelection(new Selection(1, 2, 1, 2));\n\n\t\t\tconst startFindWithSelectionAction = new StartFindWithSelectionAction();\n\t\t\tstartFindWithSelectionAction.run(null, editor);\n\n\t\t\tconst findState = findController.getState();\n\t\t\tassert.deepStrictEqual(findState.searchString, 'ABC');\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n});\n\nsuite('FindController query options persistence', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst serviceCollection = new ServiceCollection();\n\tconst storageService = new InMemoryStorageService();\n\tstorageService.store('editor.isRegex', false, StorageScope.WORKSPACE, StorageTarget.USER);\n\tstorageService.store('editor.matchCase', false, StorageScope.WORKSPACE, StorageTarget.USER);\n\tstorageService.store('editor.wholeWord', false, StorageScope.WORKSPACE, StorageTarget.USER);\n\tserviceCollection.set(IStorageService, storageService);\n\n\ttest('matchCase', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'abc',\n\t\t\t'ABC',\n\t\t\t'XYZ',\n\t\t\t'ABC'\n\t\t], { serviceCollection: serviceCollection }, async (editor, _, instantiationService) => {\n\t\t\tstorageService.store('editor.matchCase', true, StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t\t// The cursor is at the very top, of the file, at the first ABC\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tconst findState = findController.getState();\n\n\t\t\t// I hit Ctrl+F to show the Find dialog\n\t\t\tawait executeAction(instantiationService, editor, StartFindAction);\n\n\t\t\t// I type ABC.\n\t\t\tfindState.change({ searchString: 'ABC' }, true);\n\t\t\t// The second ABC is highlighted as matchCase is true.\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [2, 1, 2, 4]);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\tstorageService.store('editor.matchCase', false, StorageScope.WORKSPACE, StorageTarget.USER);\n\tstorageService.store('editor.wholeWord', true, StorageScope.WORKSPACE, StorageTarget.USER);\n\n\ttest('wholeWord', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'ABC',\n\t\t\t'AB',\n\t\t\t'XYZ',\n\t\t\t'ABC'\n\t\t], { serviceCollection: serviceCollection }, async (editor, _, instantiationService) => {\n\t\t\t// The cursor is at the very top, of the file, at the first ABC\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tconst findState = findController.getState();\n\n\t\t\t// I hit Ctrl+F to show the Find dialog\n\t\t\tawait executeAction(instantiationService, editor, StartFindAction);\n\n\t\t\t// I type AB.\n\t\t\tfindState.change({ searchString: 'AB' }, true);\n\t\t\t// The second AB is highlighted as wholeWord is true.\n\t\t\tassert.deepStrictEqual(fromSelection(editor.getSelection()!), [2, 1, 2, 3]);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('toggling options is saved', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'ABC',\n\t\t\t'AB',\n\t\t\t'XYZ',\n\t\t\t'ABC'\n\t\t], { serviceCollection: serviceCollection }, async (editor) => {\n\t\t\t// The cursor is at the very top, of the file, at the first ABC\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tfindController.toggleRegex();\n\t\t\tassert.strictEqual(storageService.getBoolean('editor.isRegex', StorageScope.WORKSPACE), true);\n\n\t\t\tfindController.dispose();\n\t\t});\n\t});\n\n\ttest('issue #27083: Update search scope once find widget becomes visible', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'var x = (3 * 5)',\n\t\t\t'var y = (3 * 5)',\n\t\t\t'var z = (3 * 5)',\n\t\t], { serviceCollection: serviceCollection, find: { autoFindInSelection: 'always', globalFindClipboard: false } }, async (editor) => {\n\t\t\t// clipboardState = '';\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\t\t\tconst findConfig: IFindStartOptions = {\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: 'none',\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: false,\n\t\t\t\tupdateSearchScope: true,\n\t\t\t\tloop: true\n\t\t\t};\n\n\t\t\teditor.setSelection(new Range(1, 1, 2, 1));\n\t\t\tfindController.start(findConfig);\n\t\t\tassert.deepStrictEqual(findController.getState().searchScope, [new Selection(1, 1, 2, 1)]);\n\n\t\t\tfindController.closeFindWidget();\n\n\t\t\teditor.setSelections([new Selection(1, 1, 2, 1), new Selection(2, 1, 2, 5)]);\n\t\t\tfindController.start(findConfig);\n\t\t\tassert.deepStrictEqual(findController.getState().searchScope, [new Selection(1, 1, 2, 1), new Selection(2, 1, 2, 5)]);\n\t\t});\n\t});\n\n\ttest('issue #58604: Do not update searchScope if it is empty', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'var x = (3 * 5)',\n\t\t\t'var y = (3 * 5)',\n\t\t\t'var z = (3 * 5)',\n\t\t], { serviceCollection: serviceCollection, find: { autoFindInSelection: 'always', globalFindClipboard: false } }, async (editor) => {\n\t\t\t// clipboardState = '';\n\t\t\teditor.setSelection(new Range(1, 2, 1, 2));\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\n\t\t\tawait findController.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: 'none',\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: false,\n\t\t\t\tupdateSearchScope: true,\n\t\t\t\tloop: true\n\t\t\t});\n\n\t\t\tassert.deepStrictEqual(findController.getState().searchScope, null);\n\t\t});\n\t});\n\n\ttest('issue #58604: Update searchScope if it is not empty', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'var x = (3 * 5)',\n\t\t\t'var y = (3 * 5)',\n\t\t\t'var z = (3 * 5)',\n\t\t], { serviceCollection: serviceCollection, find: { autoFindInSelection: 'always', globalFindClipboard: false } }, async (editor) => {\n\t\t\t// clipboardState = '';\n\t\t\teditor.setSelection(new Range(1, 2, 1, 3));\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\n\t\t\tawait findController.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: 'none',\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: false,\n\t\t\t\tupdateSearchScope: true,\n\t\t\t\tloop: true\n\t\t\t});\n\n\t\t\tassert.deepStrictEqual(findController.getState().searchScope, [new Selection(1, 2, 1, 3)]);\n\t\t});\n\t});\n\n\n\ttest('issue #27083: Find in selection when multiple lines are selected', async () => {\n\t\tawait withAsyncTestCodeEditor([\n\t\t\t'var x = (3 * 5)',\n\t\t\t'var y = (3 * 5)',\n\t\t\t'var z = (3 * 5)',\n\t\t], { serviceCollection: serviceCollection, find: { autoFindInSelection: 'multiline', globalFindClipboard: false } }, async (editor) => {\n\t\t\t// clipboardState = '';\n\t\t\teditor.setSelection(new Range(1, 6, 2, 1));\n\t\t\tconst findController = editor.registerAndInstantiateContribution(TestFindController.ID, TestFindController);\n\n\t\t\tawait findController.start({\n\t\t\t\tforceRevealReplace: false,\n\t\t\t\tseedSearchStringFromSelection: 'none',\n\t\t\t\tseedSearchStringFromNonEmptySelection: false,\n\t\t\t\tseedSearchStringFromGlobalClipboard: false,\n\t\t\t\tshouldFocus: FindStartFocusAction.NoFocusChange,\n\t\t\t\tshouldAnimate: false,\n\t\t\t\tupdateSearchScope: true,\n\t\t\t\tloop: true\n\t\t\t});\n\n\t\t\tassert.deepStrictEqual(findController.getState().searchScope, [new Selection(1, 6, 2, 1)]);\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
