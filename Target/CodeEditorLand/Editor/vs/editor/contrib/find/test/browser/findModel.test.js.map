{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/find/test/browser/findModel.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { CoreNavigationCommands } from '../../../../browser/coreCommands.js';\nimport { IActiveCodeEditor, ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { PieceTreeTextBufferBuilder } from '../../../../common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js';\nimport { FindModelBoundToEditorModel } from '../../browser/findModel.js';\nimport { FindReplaceState } from '../../browser/findState.js';\nimport { withTestCodeEditor } from '../../../../test/browser/testCodeEditor.js';\n\nsuite('FindModel', () => {\n\n\tlet disposables: DisposableStore;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction findTest(testName: string, callback: (editor: IActiveCodeEditor) => void): void {\n\t\ttest(testName, () => {\n\t\t\tconst textArr = [\n\t\t\t\t'// my cool header',\n\t\t\t\t'#include \"cool.h\"',\n\t\t\t\t'#include <iostream>',\n\t\t\t\t'',\n\t\t\t\t'int main() {',\n\t\t\t\t'    cout << \"hello world, Hello!\" << endl;',\n\t\t\t\t'    cout << \"hello world again\" << endl;',\n\t\t\t\t'    cout << \"Hello world again\" << endl;',\n\t\t\t\t'    cout << \"helloworld again\" << endl;',\n\t\t\t\t'}',\n\t\t\t\t'// blablablaciao',\n\t\t\t\t''\n\t\t\t];\n\t\t\twithTestCodeEditor(textArr, {}, (editor) => callback(editor as IActiveCodeEditor));\n\n\t\t\tconst text = textArr.join('\\n');\n\t\t\tconst ptBuilder = new PieceTreeTextBufferBuilder();\n\t\t\tptBuilder.acceptChunk(text.substr(0, 94));\n\t\t\tptBuilder.acceptChunk(text.substr(94, 101));\n\t\t\tptBuilder.acceptChunk(text.substr(195, 59));\n\t\t\tconst factory = ptBuilder.finish();\n\t\t\twithTestCodeEditor(\n\t\t\t\tfactory,\n\t\t\t\t{},\n\t\t\t\t(editor) => callback(editor as IActiveCodeEditor)\n\t\t\t);\n\t\t});\n\t}\n\n\tfunction fromRange(rng: Range): number[] {\n\t\treturn [rng.startLineNumber, rng.startColumn, rng.endLineNumber, rng.endColumn];\n\t}\n\n\tfunction _getFindState(editor: ICodeEditor) {\n\t\tconst model = editor.getModel()!;\n\t\tconst currentFindMatches: Range[] = [];\n\t\tconst allFindMatches: Range[] = [];\n\n\t\tfor (const dec of model.getAllDecorations()) {\n\t\t\tif (dec.options.className === 'currentFindMatch') {\n\t\t\t\tcurrentFindMatches.push(dec.range);\n\t\t\t\tallFindMatches.push(dec.range);\n\t\t\t} else if (dec.options.className === 'findMatch') {\n\t\t\t\tallFindMatches.push(dec.range);\n\t\t\t}\n\t\t}\n\n\t\tcurrentFindMatches.sort(Range.compareRangesUsingStarts);\n\t\tallFindMatches.sort(Range.compareRangesUsingStarts);\n\n\t\treturn {\n\t\t\thighlighted: currentFindMatches.map(fromRange),\n\t\t\tfindDecorations: allFindMatches.map(fromRange)\n\t\t};\n\t}\n\n\tfunction assertFindState(editor: ICodeEditor, cursor: number[], highlighted: number[] | null, findDecorations: number[][]): void {\n\t\tassert.deepStrictEqual(fromRange(editor.getSelection()!), cursor, 'cursor');\n\n\t\tconst expectedState = {\n\t\t\thighlighted: highlighted ? [highlighted] : [],\n\t\t\tfindDecorations: findDecorations\n\t\t};\n\t\tassert.deepStrictEqual(_getFindState(editor), expectedState, 'state');\n\t}\n\n\tfindTest('incremental find from beginning of file', (editor) => {\n\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\t// simulate typing the search string\n\t\tfindState.change({ searchString: 'H' }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 12, 1, 13],\n\t\t\t[1, 12, 1, 13],\n\t\t\t[\n\t\t\t\t[1, 12, 1, 13],\n\t\t\t\t[2, 16, 2, 17],\n\t\t\t\t[6, 14, 6, 15],\n\t\t\t\t[6, 27, 6, 28],\n\t\t\t\t[7, 14, 7, 15],\n\t\t\t\t[8, 14, 8, 15],\n\t\t\t\t[9, 14, 9, 15]\n\t\t\t]\n\t\t);\n\n\t\t// simulate typing the search string\n\t\tfindState.change({ searchString: 'He' }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 12, 1, 14],\n\t\t\t[1, 12, 1, 14],\n\t\t\t[\n\t\t\t\t[1, 12, 1, 14],\n\t\t\t\t[6, 14, 6, 16],\n\t\t\t\t[6, 27, 6, 29],\n\t\t\t\t[7, 14, 7, 16],\n\t\t\t\t[8, 14, 8, 16],\n\t\t\t\t[9, 14, 9, 16]\n\t\t\t]\n\t\t);\n\n\t\t// simulate typing the search string\n\t\tfindState.change({ searchString: 'Hello' }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\t// simulate toggling on `matchCase`\n\t\tfindState.change({ matchCase: true }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 27, 6, 32],\n\t\t\t[6, 27, 6, 32],\n\t\t\t[\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\t// simulate typing the search string\n\t\tfindState.change({ searchString: 'hello' }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\t// simulate toggling on `wholeWord`\n\t\tfindState.change({ wholeWord: true }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19]\n\t\t\t]\n\t\t);\n\n\t\t// simulate toggling off `matchCase`\n\t\tfindState.change({ matchCase: false }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\t// simulate toggling off `wholeWord`\n\t\tfindState.change({ wholeWord: false }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\t// simulate adding a search scope\n\t\tfindState.change({ searchScope: [new Range(8, 1, 10, 1)] }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\t// simulate removing the search scope\n\t\tfindState.change({ searchScope: null }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find model removes its decorations', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello' }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassert.strictEqual(findState.matchesCount, 5);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t});\n\n\tfindTest('find model updates state matchesCount', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello' }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassert.strictEqual(findState.matchesCount, 5);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindState.change({ searchString: 'helloo' }, false);\n\t\tassert.strictEqual(findState.matchesCount, 0);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find model reacts to position change', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello' }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\teditor.trigger('mouse', CoreNavigationCommands.MoveTo.id, {\n\t\t\tposition: new Position(6, 20)\n\t\t});\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 20, 6, 20],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindState.change({ searchString: 'Hello' }, true);\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 27, 6, 32],\n\t\t\t[6, 27, 6, 32],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find model next', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 27, 6, 32],\n\t\t\t[6, 27, 6, 32],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find model next stays in scope', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', wholeWord: true, searchScope: [new Range(7, 1, 9, 1)] }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('multi-selection find model next stays in scope (overlap)', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', wholeWord: true, searchScope: [new Range(7, 1, 8, 2), new Range(8, 1, 9, 1)] }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('multi-selection find model next stays in scope', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', matchCase: true, wholeWord: false, searchScope: [new Range(6, 1, 7, 38), new Range(9, 3, 9, 38)] }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t// `matchCase: false` would\n\t\t\t\t// find this match as well:\n\t\t\t\t// [6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t// `wholeWord: true` would\n\t\t\t\t// exclude this match:\n\t\t\t\t[9, 14, 9, 19],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[9, 14, 9, 19],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[9, 14, 9, 19],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[9, 14, 9, 19],\n\t\t\t[9, 14, 9, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[9, 14, 9, 19],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[9, 14, 9, 19],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find model prev', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 27, 6, 32],\n\t\t\t[6, 27, 6, 32],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find model prev stays in scope', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', wholeWord: true, searchScope: [new Range(7, 1, 9, 1)] }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find model next/prev with no matches', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'helloo', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find model next/prev respects cursor position', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\teditor.trigger('mouse', CoreNavigationCommands.MoveTo.id, {\n\t\t\tposition: new Position(6, 20)\n\t\t});\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 20, 6, 20],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 27, 6, 32],\n\t\t\t[6, 27, 6, 32],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find ^', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: '^', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 1],\n\t\t\t\t[2, 1, 2, 1],\n\t\t\t\t[3, 1, 3, 1],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 1],\n\t\t\t\t[6, 1, 6, 1],\n\t\t\t\t[7, 1, 7, 1],\n\t\t\t\t[8, 1, 8, 1],\n\t\t\t\t[9, 1, 9, 1],\n\t\t\t\t[10, 1, 10, 1],\n\t\t\t\t[11, 1, 11, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[2, 1, 2, 1],\n\t\t\t[2, 1, 2, 1],\n\t\t\t[\n\t\t\t\t[1, 1, 1, 1],\n\t\t\t\t[2, 1, 2, 1],\n\t\t\t\t[3, 1, 3, 1],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 1],\n\t\t\t\t[6, 1, 6, 1],\n\t\t\t\t[7, 1, 7, 1],\n\t\t\t\t[8, 1, 8, 1],\n\t\t\t\t[9, 1, 9, 1],\n\t\t\t\t[10, 1, 10, 1],\n\t\t\t\t[11, 1, 11, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[3, 1, 3, 1],\n\t\t\t[3, 1, 3, 1],\n\t\t\t[\n\t\t\t\t[1, 1, 1, 1],\n\t\t\t\t[2, 1, 2, 1],\n\t\t\t\t[3, 1, 3, 1],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 1],\n\t\t\t\t[6, 1, 6, 1],\n\t\t\t\t[7, 1, 7, 1],\n\t\t\t\t[8, 1, 8, 1],\n\t\t\t\t[9, 1, 9, 1],\n\t\t\t\t[10, 1, 10, 1],\n\t\t\t\t[11, 1, 11, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find $', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: '$', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[1, 18, 1, 18],\n\t\t\t\t[2, 18, 2, 18],\n\t\t\t\t[3, 20, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 13, 5, 13],\n\t\t\t\t[6, 43, 6, 43],\n\t\t\t\t[7, 41, 7, 41],\n\t\t\t\t[8, 41, 8, 41],\n\t\t\t\t[9, 40, 9, 40],\n\t\t\t\t[10, 2, 10, 2],\n\t\t\t\t[11, 17, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 18, 1, 18],\n\t\t\t[1, 18, 1, 18],\n\t\t\t[\n\t\t\t\t[1, 18, 1, 18],\n\t\t\t\t[2, 18, 2, 18],\n\t\t\t\t[3, 20, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 13, 5, 13],\n\t\t\t\t[6, 43, 6, 43],\n\t\t\t\t[7, 41, 7, 41],\n\t\t\t\t[8, 41, 8, 41],\n\t\t\t\t[9, 40, 9, 40],\n\t\t\t\t[10, 2, 10, 2],\n\t\t\t\t[11, 17, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[2, 18, 2, 18],\n\t\t\t[2, 18, 2, 18],\n\t\t\t[\n\t\t\t\t[1, 18, 1, 18],\n\t\t\t\t[2, 18, 2, 18],\n\t\t\t\t[3, 20, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 13, 5, 13],\n\t\t\t\t[6, 43, 6, 43],\n\t\t\t\t[7, 41, 7, 41],\n\t\t\t\t[8, 41, 8, 41],\n\t\t\t\t[9, 40, 9, 40],\n\t\t\t\t[10, 2, 10, 2],\n\t\t\t\t[11, 17, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[3, 20, 3, 20],\n\t\t\t[3, 20, 3, 20],\n\t\t\t[\n\t\t\t\t[1, 18, 1, 18],\n\t\t\t\t[2, 18, 2, 18],\n\t\t\t\t[3, 20, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 13, 5, 13],\n\t\t\t\t[6, 43, 6, 43],\n\t\t\t\t[7, 41, 7, 41],\n\t\t\t\t[8, 41, 8, 41],\n\t\t\t\t[9, 40, 9, 40],\n\t\t\t\t[10, 2, 10, 2],\n\t\t\t\t[11, 17, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find next ^$', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: '^$', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[4, 1, 4, 1],\n\t\t\t[4, 1, 4, 1],\n\t\t\t[\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[12, 1, 12, 1],\n\t\t\t[12, 1, 12, 1],\n\t\t\t[\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[4, 1, 4, 1],\n\t\t\t[4, 1, 4, 1],\n\t\t\t[\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find .*', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: '.*', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 18],\n\t\t\t\t[2, 1, 2, 18],\n\t\t\t\t[3, 1, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 13],\n\t\t\t\t[6, 1, 6, 43],\n\t\t\t\t[7, 1, 7, 41],\n\t\t\t\t[8, 1, 8, 41],\n\t\t\t\t[9, 1, 9, 40],\n\t\t\t\t[10, 1, 10, 2],\n\t\t\t\t[11, 1, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find next ^.*$', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: '^.*$', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 18],\n\t\t\t\t[2, 1, 2, 18],\n\t\t\t\t[3, 1, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 13],\n\t\t\t\t[6, 1, 6, 43],\n\t\t\t\t[7, 1, 7, 41],\n\t\t\t\t[8, 1, 8, 41],\n\t\t\t\t[9, 1, 9, 40],\n\t\t\t\t[10, 1, 10, 2],\n\t\t\t\t[11, 1, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 18],\n\t\t\t[1, 1, 1, 18],\n\t\t\t[\n\t\t\t\t[1, 1, 1, 18],\n\t\t\t\t[2, 1, 2, 18],\n\t\t\t\t[3, 1, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 13],\n\t\t\t\t[6, 1, 6, 43],\n\t\t\t\t[7, 1, 7, 41],\n\t\t\t\t[8, 1, 8, 41],\n\t\t\t\t[9, 1, 9, 40],\n\t\t\t\t[10, 1, 10, 2],\n\t\t\t\t[11, 1, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[2, 1, 2, 18],\n\t\t\t[2, 1, 2, 18],\n\t\t\t[\n\t\t\t\t[1, 1, 1, 18],\n\t\t\t\t[2, 1, 2, 18],\n\t\t\t\t[3, 1, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 13],\n\t\t\t\t[6, 1, 6, 43],\n\t\t\t\t[7, 1, 7, 41],\n\t\t\t\t[8, 1, 8, 41],\n\t\t\t\t[9, 1, 9, 40],\n\t\t\t\t[10, 1, 10, 2],\n\t\t\t\t[11, 1, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find prev ^.*$', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: '^.*$', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 18],\n\t\t\t\t[2, 1, 2, 18],\n\t\t\t\t[3, 1, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 13],\n\t\t\t\t[6, 1, 6, 43],\n\t\t\t\t[7, 1, 7, 41],\n\t\t\t\t[8, 1, 8, 41],\n\t\t\t\t[9, 1, 9, 40],\n\t\t\t\t[10, 1, 10, 2],\n\t\t\t\t[11, 1, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[12, 1, 12, 1],\n\t\t\t[12, 1, 12, 1],\n\t\t\t[\n\t\t\t\t[1, 1, 1, 18],\n\t\t\t\t[2, 1, 2, 18],\n\t\t\t\t[3, 1, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 13],\n\t\t\t\t[6, 1, 6, 43],\n\t\t\t\t[7, 1, 7, 41],\n\t\t\t\t[8, 1, 8, 41],\n\t\t\t\t[9, 1, 9, 40],\n\t\t\t\t[10, 1, 10, 2],\n\t\t\t\t[11, 1, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[11, 1, 11, 17],\n\t\t\t[11, 1, 11, 17],\n\t\t\t[\n\t\t\t\t[1, 1, 1, 18],\n\t\t\t\t[2, 1, 2, 18],\n\t\t\t\t[3, 1, 3, 20],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 13],\n\t\t\t\t[6, 1, 6, 43],\n\t\t\t\t[7, 1, 7, 41],\n\t\t\t\t[8, 1, 8, 41],\n\t\t\t\t[9, 1, 9, 40],\n\t\t\t\t[10, 1, 10, 2],\n\t\t\t\t[11, 1, 11, 17],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('find prev ^$', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: '^$', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[12, 1, 12, 1],\n\t\t\t[12, 1, 12, 1],\n\t\t\t[\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[4, 1, 4, 1],\n\t\t\t[4, 1, 4, 1],\n\t\t\t[\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[12, 1, 12, 1],\n\t\t\t[12, 1, 12, 1],\n\t\t\t[\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[12, 1, 12, 1],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replace hello', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', replaceString: 'hi', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\teditor.trigger('mouse', CoreNavigationCommands.MoveTo.id, {\n\t\t\tposition: new Position(6, 20)\n\t\t});\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 20, 6, 20],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hello world, Hello!\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 27, 6, 32],\n\t\t\t[6, 27, 6, 32],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hello world, Hello!\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hello world, hi!\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \"hi world again\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"hi world again\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 16, 6, 16],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hi world, hi!\" << endl;');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replace bla', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'bla', replaceString: 'ciao' }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[11, 4, 11, 7],\n\t\t\t\t[11, 7, 11, 10],\n\t\t\t\t[11, 10, 11, 13]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[11, 4, 11, 7],\n\t\t\t[11, 4, 11, 7],\n\t\t\t[\n\t\t\t\t[11, 4, 11, 7],\n\t\t\t\t[11, 7, 11, 10],\n\t\t\t\t[11, 10, 11, 13]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(11), '// blablablaciao');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[11, 8, 11, 11],\n\t\t\t[11, 8, 11, 11],\n\t\t\t[\n\t\t\t\t[11, 8, 11, 11],\n\t\t\t\t[11, 11, 11, 14]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(11), '// ciaoblablaciao');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[11, 12, 11, 15],\n\t\t\t[11, 12, 11, 15],\n\t\t\t[\n\t\t\t\t[11, 12, 11, 15]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(11), '// ciaociaoblaciao');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[11, 16, 11, 16],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(11), '// ciaociaociaociao');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replaceAll hello', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', replaceString: 'hi', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\teditor.trigger('mouse', CoreNavigationCommands.MoveTo.id, {\n\t\t\tposition: new Position(6, 20)\n\t\t});\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 20, 6, 20],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hello world, Hello!\" << endl;');\n\n\t\tfindModel.replaceAll();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 17, 6, 17],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hi world, hi!\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \"hi world again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"hi world again\" << endl;');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replaceAll two spaces with one space', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: '  ', replaceString: ' ' }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 1, 6, 3],\n\t\t\t\t[6, 3, 6, 5],\n\t\t\t\t[7, 1, 7, 3],\n\t\t\t\t[7, 3, 7, 5],\n\t\t\t\t[8, 1, 8, 3],\n\t\t\t\t[8, 3, 8, 5],\n\t\t\t\t[9, 1, 9, 3],\n\t\t\t\t[9, 3, 9, 5]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 1, 6, 3],\n\t\t\t\t[7, 1, 7, 3],\n\t\t\t\t[8, 1, 8, 3],\n\t\t\t\t[9, 1, 9, 3]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '  cout << \"hello world, Hello!\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '  cout << \"hello world again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '  cout << \"Hello world again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(9), '  cout << \"helloworld again\" << endl;');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replaceAll bla', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'bla', replaceString: 'ciao' }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[11, 4, 11, 7],\n\t\t\t\t[11, 7, 11, 10],\n\t\t\t\t[11, 10, 11, 13]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(11), '// ciaociaociaociao');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replaceAll bla with \\\\t\\\\n', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'bla', replaceString: '<\\\\n\\\\t>', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[11, 4, 11, 7],\n\t\t\t\t[11, 7, 11, 10],\n\t\t\t\t[11, 10, 11, 13]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(11), '// <');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(12), '\\t><');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(13), '\\t><');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(14), '\\t>ciao');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('issue #3516: \"replace all\" moves page/cursor/focus/scroll to the place of the last replacement', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'include', replaceString: 'bar' }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[2, 2, 2, 9],\n\t\t\t\t[3, 2, 3, 9]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(2), '#bar \"cool.h\"');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(3), '#bar <iostream>');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('listens to model content changes', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', replaceString: 'hi', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\teditor.getModel()!.setValue('hello\\nhi');\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('selectAllMatches', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', replaceString: 'hi', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.selectAllMatches();\n\n\t\tassert.deepStrictEqual(editor.getSelections()!.map(s => s.toString()), [\n\t\t\tnew Selection(6, 14, 6, 19),\n\t\t\tnew Selection(6, 27, 6, 32),\n\t\t\tnew Selection(7, 14, 7, 19),\n\t\t\tnew Selection(8, 14, 8, 19)\n\t\t].map(s => s.toString()));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('issue #14143 selectAllMatches should maintain primary cursor if feasible', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', replaceString: 'hi', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\teditor.setSelection(new Range(7, 14, 7, 19));\n\n\t\tfindModel.selectAllMatches();\n\n\t\tassert.deepStrictEqual(editor.getSelections()!.map(s => s.toString()), [\n\t\t\tnew Selection(7, 14, 7, 19),\n\t\t\tnew Selection(6, 14, 6, 19),\n\t\t\tnew Selection(6, 27, 6, 32),\n\t\t\tnew Selection(8, 14, 8, 19)\n\t\t].map(s => s.toString()));\n\n\t\tassert.deepStrictEqual(editor.getSelection()!.toString(), new Selection(7, 14, 7, 19).toString());\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('issue #1914: NPE when there is only one find match', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'cool.h' }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[2, 11, 2, 17]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[2, 11, 2, 17],\n\t\t\t[2, 11, 2, 17],\n\t\t\t[\n\t\t\t\t[2, 11, 2, 17]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[2, 11, 2, 17],\n\t\t\t[2, 11, 2, 17],\n\t\t\t[\n\t\t\t\t[2, 11, 2, 17]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replace when search string has look ahed regex', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello(?=\\\\sworld)', replaceString: 'hi', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replace();\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hello world, Hello!\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hi world, Hello!\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \"hi world again\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 16, 8, 16],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"hi world again\" << endl;');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replace when search string has look ahed regex and cursor is at the last find match', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello(?=\\\\sworld)', replaceString: 'hi', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\teditor.trigger('mouse', CoreNavigationCommands.MoveTo.id, {\n\t\t\tposition: new Position(8, 14)\n\t\t});\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 14],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replace();\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"Hello world again\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"hi world again\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hi world, Hello!\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 16, 7, 16],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \"hi world again\" << endl;');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replaceAll when search string has look ahed regex', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello(?=\\\\sworld)', replaceString: 'hi', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hi world, Hello!\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \"hi world again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"hi world again\" << endl;');\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replace when search string has look ahed regex and replace string has capturing groups', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hel(lo)(?=\\\\sworld)', replaceString: 'hi$1', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replace();\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[6, 14, 6, 19],\n\t\t\t[6, 14, 6, 19],\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hello world, Hello!\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[7, 14, 7, 19],\n\t\t\t[7, 14, 7, 19],\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hilo world, Hello!\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 14, 8, 19],\n\t\t\t[8, 14, 8, 19],\n\t\t\t[\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \"hilo world again\" << endl;');\n\n\t\tfindModel.replace();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[8, 18, 8, 18],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"hilo world again\" << endl;');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replaceAll when search string has look ahed regex and replace string has capturing groups', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'wo(rl)d(?=.*;$)', replaceString: 'gi$1', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 20, 6, 25],\n\t\t\t\t[7, 20, 7, 25],\n\t\t\t\t[8, 20, 8, 25],\n\t\t\t\t[9, 19, 9, 24]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hello girl, Hello!\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \"hello girl again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"Hello girl again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(9), '    cout << \"hellogirl again\" << endl;');\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replaceAll when search string is multiline and has look ahed regex and replace string has capturing groups', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'wo(rl)d(.*;\\\\n)(?=.*hello)', replaceString: 'gi$1$2', isRegex: true, matchCase: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 20, 7, 1],\n\t\t\t\t[8, 20, 9, 1]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hello girl, Hello!\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"Hello girl again\" << endl;');\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('replaceAll preserving case', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', replaceString: 'goodbye', isRegex: false, matchCase: false, preserveCase: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19],\n\t\t\t\t[9, 14, 9, 19],\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"goodbye world, Goodbye!\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \"goodbye world again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \"Goodbye world again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(9), '    cout << \"goodbyeworld again\" << endl;');\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('issue #18711 replaceAll with empty string', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', replaceString: '', wholeWord: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[6, 27, 6, 32],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[8, 14, 8, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \" world, !\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \" world again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(8), '    cout << \" world again\" << endl;');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('issue #32522 replaceAll with ^ on more than 1000 matches', (editor) => {\n\t\tlet initialText = '';\n\t\tfor (let i = 0; i < 1100; i++) {\n\t\t\tinitialText += 'line' + i + '\\n';\n\t\t}\n\t\teditor.getModel()!.setValue(initialText);\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: '^', replaceString: 'a ', isRegex: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tfindModel.replaceAll();\n\n\t\tlet expectedText = '';\n\t\tfor (let i = 0; i < 1100; i++) {\n\t\t\texpectedText += 'a line' + i + '\\n';\n\t\t}\n\t\texpectedText += 'a ';\n\t\tassert.strictEqual(editor.getModel()!.getValue(), expectedText);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('issue #19740 Find and replace capture group/backreference inserts `undefined` instead of empty string', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello(z)?', replaceString: 'hi$1', isRegex: true, matchCase: true }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[6, 14, 6, 19],\n\t\t\t\t[7, 14, 7, 19],\n\t\t\t\t[9, 14, 9, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.replaceAll();\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[]\n\t\t);\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(6), '    cout << \"hi world, Hello!\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(7), '    cout << \"hi world again\" << endl;');\n\t\tassert.strictEqual(editor.getModel()!.getLineContent(9), '    cout << \"hiworld again\" << endl;');\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('issue #27083. search scope works even if it is a single line', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', wholeWord: true, searchScope: [new Range(7, 1, 8, 1)] }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassertFindState(\n\t\t\teditor,\n\t\t\t[1, 1, 1, 1],\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t[7, 14, 7, 19]\n\t\t\t]\n\t\t);\n\n\t\tfindModel.dispose();\n\t\tfindState.dispose();\n\t});\n\n\tfindTest('issue #3516: Control behavior of \"Next\" operations (not looping back to beginning)', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello', loop: false }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassert.strictEqual(findState.matchesCount, 5);\n\n\t\t// Test next operations\n\t\tassert.strictEqual(findState.matchesPosition, 0);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 1);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), false);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 2);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 3);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 4);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 5);\n\t\tassert.strictEqual(findState.canNavigateForward(), false);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 5);\n\t\tassert.strictEqual(findState.canNavigateForward(), false);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 5);\n\t\tassert.strictEqual(findState.canNavigateForward(), false);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\t// Test previous operations\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 4);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 3);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 2);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 1);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), false);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 1);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), false);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 1);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), false);\n\n\t});\n\n\tfindTest('issue #3516: Control behavior of \"Next\" operations (looping back to beginning)', (editor) => {\n\t\tconst findState = disposables.add(new FindReplaceState());\n\t\tfindState.change({ searchString: 'hello' }, false);\n\t\tconst findModel = disposables.add(new FindModelBoundToEditorModel(editor, findState));\n\n\t\tassert.strictEqual(findState.matchesCount, 5);\n\n\t\t// Test next operations\n\t\tassert.strictEqual(findState.matchesPosition, 0);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 1);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 2);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 3);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 4);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 5);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 1);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToNextMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 2);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\t// Test previous operations\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 1);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 5);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 4);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 3);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 2);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t\tfindModel.moveToPrevMatch();\n\t\tassert.strictEqual(findState.matchesPosition, 1);\n\t\tassert.strictEqual(findState.canNavigateForward(), true);\n\t\tassert.strictEqual(findState.canNavigateBack(), true);\n\n\t});\n\n});\n"],
  "mappings": "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",
  "names": []
}
