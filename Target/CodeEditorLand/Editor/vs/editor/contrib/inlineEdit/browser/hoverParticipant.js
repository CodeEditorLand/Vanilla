var p=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var c=(i,r,t,e)=>{for(var o=e>1?void 0:e?h(r,t):r,n=i.length-1,l;n>=0;n--)(l=i[n])&&(o=(e?l(r,t,o):l(o))||o);return e&&o&&p(r,t,o),o},a=(i,r)=>(t,e)=>r(t,e,i);import{DisposableStore as g}from"../../../../base/common/lifecycle.js";import{constObservable as H}from"../../../../base/common/observable.js";import*as I from"../../../../nls.js";import{IInstantiationService as u}from"../../../../platform/instantiation/common/instantiation.js";import{ITelemetryService as E}from"../../../../platform/telemetry/common/telemetry.js";import{MouseTargetType as d}from"../../../browser/editorBrowser.js";import{EditorOption as f}from"../../../common/config/editorOptions.js";import"../../../common/core/range.js";import"../../../common/model.js";import{HoverAnchorType as y,HoverForeignElementAnchor as v,RenderedHoverParts as w}from"../../hover/browser/hoverTypes.js";import{InlineEditController as m}from"./inlineEditController.js";import{InlineEditHintsContentWidget as T}from"./inlineEditHintsWidget.js";class b{constructor(r,t,e){this.owner=r;this.range=t;this.controller=e}isValidForHoverAnchor(r){return r.type===y.Range&&this.range.startColumn<=r.range.startColumn&&this.range.endColumn>=r.range.endColumn}}let s=class{constructor(r,t,e){this._editor=r;this._instantiationService=t;this._telemetryService=e}hoverOrdinal=5;suggestHoverAnchor(r){const t=m.get(this._editor);if(!t)return null;const e=r.target;if(e.type===d.CONTENT_VIEW_ZONE){const o=e.detail;if(t.shouldShowHoverAtViewZone(o.viewZoneId)){const n=e.range;return new v(1e3,this,n,r.event.posx,r.event.posy,!1)}}return e.type===d.CONTENT_EMPTY&&t.shouldShowHoverAt(e.range)?new v(1e3,this,e.range,r.event.posx,r.event.posy,!1):e.type===d.CONTENT_TEXT&&e.detail.mightBeForeignElement&&t.shouldShowHoverAt(e.range)?new v(1e3,this,e.range,r.event.posx,r.event.posy,!1):null}computeSync(r,t){if(this._editor.getOption(f.inlineEdit).showToolbar!=="onHover")return[];const e=m.get(this._editor);return e&&e.shouldShowHoverAt(r.range)?[new b(this,r.range,e)]:[]}renderHoverParts(r,t){const e=new g;this._telemetryService.publicLog2("inlineEditHover.shown");const o=this._instantiationService.createInstance(T,this._editor,!1,H(null));e.add(o);const n=o.getDomNode(),l={hoverPart:t[0],hoverElement:n,dispose:()=>e.dispose()};return new w([l])}getAccessibleContent(r){return I.localize("hoverAccessibilityInlineEdits","There are inline edits here.")}};s=c([a(1,u),a(2,E)],s);export{b as InlineEditHover,s as InlineEditHoverParticipant};
