{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdit/browser/inlineEditController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createStyleSheet2 } from \"../../../../base/browser/dom.js\";\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { onUnexpectedExternalError } from \"../../../../base/common/errors.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype ISettableObservable,\n\tautorun,\n\tconstObservable,\n\tderivedDisposable,\n\tobservableFromEvent,\n\tobservableSignalFromEvent,\n\tobservableValue,\n\ttransaction,\n} from \"../../../../base/common/observable.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { IDiffProviderFactoryService } from \"../../../browser/widget/diffEditor/diffProviderFactoryService.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { EditOperation } from \"../../../common/core/editOperation.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport {\n\ttype IInlineEdit,\n\tInlineEditTriggerKind,\n} from \"../../../common/languages.js\";\nimport { ILanguageFeaturesService } from \"../../../common/services/languageFeatures.js\";\nimport { IModelService } from \"../../../common/services/model.js\";\nimport {\n\tGhostText,\n\tGhostTextPart,\n} from \"../../inlineCompletions/browser/model/ghostText.js\";\nimport { GhostTextWidget } from \"./ghostTextWidget.js\";\nimport { InlineEditHintsWidget } from \"./inlineEditHintsWidget.js\";\nimport { InlineEditSideBySideWidget } from \"./inlineEditSideBySideWidget.js\";\n\nexport class InlineEditController extends Disposable {\n\tstatic ID = \"editor.contrib.inlineEditController\";\n\n\tpublic static readonly inlineEditVisibleKey = \"inlineEditVisible\";\n\tpublic static readonly inlineEditVisibleContext =\n\t\tnew RawContextKey<boolean>(this.inlineEditVisibleKey, false);\n\tprivate _isVisibleContext =\n\t\tInlineEditController.inlineEditVisibleContext.bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\n\tpublic static readonly cursorAtInlineEditKey = \"cursorAtInlineEdit\";\n\tpublic static readonly cursorAtInlineEditContext =\n\t\tnew RawContextKey<boolean>(this.cursorAtInlineEditKey, false);\n\tprivate _isCursorAtInlineEditContext =\n\t\tInlineEditController.cursorAtInlineEditContext.bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\n\tpublic static get(editor: ICodeEditor): InlineEditController | null {\n\t\treturn editor.getContribution<InlineEditController>(\n\t\t\tInlineEditController.ID,\n\t\t);\n\t}\n\n\tprivate _currentEdit: ISettableObservable<IInlineEdit | undefined> =\n\t\tobservableValue(this, undefined);\n\tprivate _currentWidget = derivedDisposable(this._currentEdit, (reader) => {\n\t\tconst edit = this._currentEdit.read(reader);\n\t\tif (!edit) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst line = edit.range.endLineNumber;\n\t\tconst column = edit.range.endColumn;\n\t\tconst textToDisplay =\n\t\t\tedit.text.endsWith(\"\\n\") &&\n\t\t\t!(\n\t\t\t\tedit.range.startLineNumber === edit.range.endLineNumber &&\n\t\t\t\tedit.range.startColumn === edit.range.endColumn\n\t\t\t)\n\t\t\t\t? edit.text.slice(0, -1)\n\t\t\t\t: edit.text;\n\t\tconst ghostText = new GhostText(line, [\n\t\t\tnew GhostTextPart(column, textToDisplay, false),\n\t\t]);\n\t\t//only show ghost text for single line edits\n\t\t//unless it is a pure removal\n\t\t//multi line edits are shown in the side by side widget\n\t\tconst isSingleLine =\n\t\t\tedit.range.startLineNumber === edit.range.endLineNumber &&\n\t\t\tghostText.parts.length === 1 &&\n\t\t\tghostText.parts[0].lines.length === 1;\n\t\tconst isPureRemoval = edit.text === \"\";\n\t\tif (!isSingleLine && !isPureRemoval) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst instance = this.instantiationService.createInstance(\n\t\t\tGhostTextWidget,\n\t\t\tthis.editor,\n\t\t\t{\n\t\t\t\tghostText: constObservable(ghostText),\n\t\t\t\tminReservedLineCount: constObservable(0),\n\t\t\t\ttargetTextModel: constObservable(\n\t\t\t\t\tthis.editor.getModel() ?? undefined,\n\t\t\t\t),\n\t\t\t\trange: constObservable(edit.range),\n\t\t\t},\n\t\t);\n\t\treturn instance;\n\t});\n\tprivate _currentRequestCts: CancellationTokenSource | undefined;\n\n\tprivate _jumpBackPosition: Position | undefined;\n\tprivate _isAccepting: ISettableObservable<boolean> = observableValue(\n\t\tthis,\n\t\tfalse,\n\t);\n\n\tprivate readonly _enabled = observableFromEvent(\n\t\tthis,\n\t\tthis.editor.onDidChangeConfiguration,\n\t\t() => this.editor.getOption(EditorOption.inlineEdit).enabled,\n\t);\n\tprivate readonly _fontFamily = observableFromEvent(\n\t\tthis,\n\t\tthis.editor.onDidChangeConfiguration,\n\t\t() => this.editor.getOption(EditorOption.inlineEdit).fontFamily,\n\t);\n\n\tconstructor(\n\t\tpublic readonly editor: ICodeEditor,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@IDiffProviderFactoryService\n\t\tprivate readonly _diffProviderFactoryService: IDiffProviderFactoryService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\n\t\t//Automatically request inline edit when the content was changed\n\t\t//Cancel the previous request if there is one\n\t\t//Remove the previous ghost text\n\t\tconst modelChangedSignal = observableSignalFromEvent(\n\t\t\t\"InlineEditController.modelContentChangedSignal\",\n\t\t\teditor.onDidChangeModelContent,\n\t\t);\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description InlineEditController.modelContentChanged model */\n\t\t\t\tif (!this._enabled.read(reader)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmodelChangedSignal.read(reader);\n\t\t\t\tif (this._isAccepting.read(reader)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.getInlineEdit(editor, true);\n\t\t\t}),\n\t\t);\n\n\t\t//Check if the cursor is at the ghost text\n\t\tconst cursorPosition = observableFromEvent(\n\t\t\tthis,\n\t\t\teditor.onDidChangeCursorPosition,\n\t\t\t() => editor.getPosition(),\n\t\t);\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description InlineEditController.cursorPositionChanged model */\n\t\t\t\tif (!this._enabled.read(reader)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst pos = cursorPosition.read(reader);\n\t\t\t\tif (pos) {\n\t\t\t\t\tthis.checkCursorPosition(pos);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t//Perform stuff when the current edit has changed\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description InlineEditController.update model */\n\t\t\t\tconst currentEdit = this._currentEdit.read(reader);\n\t\t\t\tthis._isCursorAtInlineEditContext.set(false);\n\t\t\t\tif (!currentEdit) {\n\t\t\t\t\tthis._isVisibleContext.set(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isVisibleContext.set(true);\n\t\t\t\tconst pos = editor.getPosition();\n\t\t\t\tif (pos) {\n\t\t\t\t\tthis.checkCursorPosition(pos);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t//Clear suggestions on lost focus\n\t\tconst editorBlurSingal = observableSignalFromEvent(\n\t\t\t\"InlineEditController.editorBlurSignal\",\n\t\t\teditor.onDidBlurEditorWidget,\n\t\t);\n\t\tthis._register(\n\t\t\tautorun(async (reader) => {\n\t\t\t\t/** @description InlineEditController.editorBlur */\n\t\t\t\tif (!this._enabled.read(reader)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teditorBlurSingal.read(reader);\n\t\t\t\t// This is a hidden setting very useful for debugging\n\t\t\t\tif (\n\t\t\t\t\tthis._configurationService.getValue(\n\t\t\t\t\t\t\"editor.experimentalInlineEdit.keepOnBlur\",\n\t\t\t\t\t) ||\n\t\t\t\t\teditor.getOption(EditorOption.inlineEdit).keepOnBlur\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._currentRequestCts?.dispose(true);\n\t\t\t\tthis._currentRequestCts = undefined;\n\t\t\t\tawait this.clear(false);\n\t\t\t}),\n\t\t);\n\n\t\t//Invoke provider on focus\n\t\tconst editorFocusSignal = observableSignalFromEvent(\n\t\t\t\"InlineEditController.editorFocusSignal\",\n\t\t\teditor.onDidFocusEditorText,\n\t\t);\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description InlineEditController.editorFocus */\n\t\t\t\tif (!this._enabled.read(reader)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teditorFocusSignal.read(reader);\n\t\t\t\tthis.getInlineEdit(editor, true);\n\t\t\t}),\n\t\t);\n\n\t\t//handle changes of font setting\n\t\tconst styleElement = this._register(createStyleSheet2());\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\tconst fontFamily = this._fontFamily.read(reader);\n\t\t\t\tstyleElement.setStyle(\n\t\t\t\t\tfontFamily === \"\" || fontFamily === \"default\"\n\t\t\t\t\t\t? ``\n\t\t\t\t\t\t: `\n.monaco-editor .inline-edit-decoration,\n.monaco-editor .inline-edit-decoration-preview,\n.monaco-editor .inline-edit {\n\tfont-family: ${fontFamily};\n}`,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tnew InlineEditHintsWidget(\n\t\t\t\tthis.editor,\n\t\t\t\tthis._currentWidget,\n\t\t\t\tthis.instantiationService,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tnew InlineEditSideBySideWidget(\n\t\t\t\tthis.editor,\n\t\t\t\tthis._currentEdit,\n\t\t\t\tthis.instantiationService,\n\t\t\t\tthis._diffProviderFactoryService,\n\t\t\t\tthis._modelService,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate checkCursorPosition(position: Position) {\n\t\tif (!this._currentEdit) {\n\t\t\tthis._isCursorAtInlineEditContext.set(false);\n\t\t\treturn;\n\t\t}\n\t\tconst gt = this._currentEdit.get();\n\t\tif (!gt) {\n\t\t\tthis._isCursorAtInlineEditContext.set(false);\n\t\t\treturn;\n\t\t}\n\t\tthis._isCursorAtInlineEditContext.set(\n\t\t\tRange.containsPosition(gt.range, position),\n\t\t);\n\t}\n\n\tprivate validateInlineEdit(\n\t\teditor: ICodeEditor,\n\t\tedit: IInlineEdit,\n\t): boolean {\n\t\t//Multiline inline replacing edit must replace whole lines\n\t\tif (\n\t\t\tedit.text.includes(\"\\n\") &&\n\t\t\tedit.range.startLineNumber !== edit.range.endLineNumber &&\n\t\t\tedit.range.startColumn !== edit.range.endColumn\n\t\t) {\n\t\t\tconst firstColumn = edit.range.startColumn;\n\t\t\tif (firstColumn !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst lastLine = edit.range.endLineNumber;\n\t\t\tconst lastColumn = edit.range.endColumn;\n\t\t\tconst lineLength = editor.getModel()?.getLineLength(lastLine) ?? 0;\n\t\t\tif (lastColumn !== lineLength + 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async fetchInlineEdit(\n\t\teditor: ICodeEditor,\n\t\tauto: boolean,\n\t): Promise<IInlineEdit | undefined> {\n\t\tif (this._currentRequestCts) {\n\t\t\tthis._currentRequestCts.dispose(true);\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tconst modelVersion = model.getVersionId();\n\t\tconst providers =\n\t\t\tthis.languageFeaturesService.inlineEditProvider.all(model);\n\t\tif (providers.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst provider = providers[0];\n\t\tthis._currentRequestCts = new CancellationTokenSource();\n\t\tconst token = this._currentRequestCts.token;\n\t\tconst triggerKind = auto\n\t\t\t? InlineEditTriggerKind.Automatic\n\t\t\t: InlineEditTriggerKind.Invoke;\n\t\tconst shouldDebounce = auto;\n\t\tif (shouldDebounce) {\n\t\t\tawait wait(50, token);\n\t\t}\n\t\tif (\n\t\t\ttoken.isCancellationRequested ||\n\t\t\tmodel.isDisposed() ||\n\t\t\tmodel.getVersionId() !== modelVersion\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst edit = await provider.provideInlineEdit(\n\t\t\tmodel,\n\t\t\t{ triggerKind },\n\t\t\ttoken,\n\t\t);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\ttoken.isCancellationRequested ||\n\t\t\tmodel.isDisposed() ||\n\t\t\tmodel.getVersionId() !== modelVersion\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.validateInlineEdit(editor, edit)) {\n\t\t\treturn;\n\t\t}\n\t\treturn edit;\n\t}\n\n\tprivate async getInlineEdit(editor: ICodeEditor, auto: boolean) {\n\t\tthis._isCursorAtInlineEditContext.set(false);\n\t\tawait this.clear();\n\t\tconst edit = await this.fetchInlineEdit(editor, auto);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\t\tthis._currentEdit.set(edit, undefined);\n\t}\n\n\tpublic async trigger() {\n\t\tawait this.getInlineEdit(this.editor, false);\n\t}\n\n\tpublic async jumpBack() {\n\t\tif (!this._jumpBackPosition) {\n\t\t\treturn;\n\t\t}\n\t\tthis.editor.setPosition(this._jumpBackPosition);\n\t\t//if position is outside viewports, scroll to it\n\t\tthis.editor.revealPositionInCenterIfOutsideViewport(\n\t\t\tthis._jumpBackPosition,\n\t\t);\n\t}\n\n\tpublic async accept() {\n\t\tthis._isAccepting.set(true, undefined);\n\t\tconst data = this._currentEdit.get();\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\t//It should only happen in case of last line suggestion\n\t\tlet text = data.text;\n\t\tif (data.text.startsWith(\"\\n\")) {\n\t\t\ttext = data.text.substring(1);\n\t\t}\n\t\tthis.editor.pushUndoStop();\n\t\tthis.editor.executeEdits(\"acceptCurrent\", [\n\t\t\tEditOperation.replace(Range.lift(data.range), text),\n\t\t]);\n\t\tif (data.accepted) {\n\t\t\tawait this._commandService\n\t\t\t\t.executeCommand(\n\t\t\t\t\tdata.accepted.id,\n\t\t\t\t\t...(data.accepted.arguments || []),\n\t\t\t\t)\n\t\t\t\t.then(undefined, onUnexpectedExternalError);\n\t\t}\n\t\tthis.freeEdit(data);\n\t\ttransaction((tx) => {\n\t\t\tthis._currentEdit.set(undefined, tx);\n\t\t\tthis._isAccepting.set(false, tx);\n\t\t});\n\t}\n\n\tpublic jumpToCurrent(): void {\n\t\tthis._jumpBackPosition = this.editor.getSelection()?.getStartPosition();\n\n\t\tconst data = this._currentEdit.get();\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tconst position = Position.lift({\n\t\t\tlineNumber: data.range.startLineNumber,\n\t\t\tcolumn: data.range.startColumn,\n\t\t});\n\t\tthis.editor.setPosition(position);\n\t\t//if position is outside viewports, scroll to it\n\t\tthis.editor.revealPositionInCenterIfOutsideViewport(position);\n\t}\n\n\tpublic async clear(sendRejection = true) {\n\t\tconst edit = this._currentEdit.get();\n\t\tif (edit && edit?.rejected && sendRejection) {\n\t\t\tawait this._commandService\n\t\t\t\t.executeCommand(\n\t\t\t\t\tedit.rejected.id,\n\t\t\t\t\t...(edit.rejected.arguments || []),\n\t\t\t\t)\n\t\t\t\t.then(undefined, onUnexpectedExternalError);\n\t\t}\n\t\tif (edit) {\n\t\t\tthis.freeEdit(edit);\n\t\t}\n\t\tthis._currentEdit.set(undefined, undefined);\n\t}\n\n\tprivate freeEdit(edit: IInlineEdit) {\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tconst providers =\n\t\t\tthis.languageFeaturesService.inlineEditProvider.all(model);\n\t\tif (providers.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tproviders[0].freeInlineEdit(edit);\n\t}\n\n\tpublic shouldShowHoverAt(range: Range) {\n\t\tconst currentEdit = this._currentEdit.get();\n\t\tconst currentWidget = this._currentWidget.get();\n\t\tif (!currentEdit) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!currentWidget) {\n\t\t\treturn false;\n\t\t}\n\t\tconst edit = currentEdit;\n\t\tconst model = currentWidget.model;\n\t\tconst overReplaceRange =\n\t\t\tRange.containsPosition(edit.range, range.getStartPosition()) ||\n\t\t\tRange.containsPosition(edit.range, range.getEndPosition());\n\t\tif (overReplaceRange) {\n\t\t\treturn true;\n\t\t}\n\t\tconst ghostText = model.ghostText.get();\n\t\tif (ghostText) {\n\t\t\treturn ghostText.parts.some((p) =>\n\t\t\t\trange.containsPosition(\n\t\t\t\t\tnew Position(ghostText.lineNumber, p.column),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic shouldShowHoverAtViewZone(viewZoneId: string): boolean {\n\t\treturn this._currentWidget.get()?.ownsViewZone(viewZoneId) ?? false;\n\t}\n}\n\nfunction wait(\n\tms: number,\n\tcancellationToken?: CancellationToken,\n): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tlet d: IDisposable | undefined;\n\t\tconst handle = setTimeout(() => {\n\t\t\tif (d) {\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t\tresolve();\n\t\t}, ms);\n\t\tif (cancellationToken) {\n\t\t\td = cancellationToken.onCancellationRequested(() => {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tif (d) {\n\t\t\t\t\td.dispose();\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t}\n\t});\n}\n"],
  "mappings": "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",
  "names": []
}
