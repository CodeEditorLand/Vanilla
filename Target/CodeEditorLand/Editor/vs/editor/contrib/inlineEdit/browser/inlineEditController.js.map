{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdit/browser/inlineEditController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createStyleSheet2 } from '../../../../base/browser/dom.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ISettableObservable, autorun, constObservable, derivedDisposable, observableFromEvent, observableSignalFromEvent, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { IDiffProviderFactoryService } from '../../../browser/widget/diffEditor/diffProviderFactoryService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IInlineEdit, InlineEditTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { GhostText, GhostTextPart } from '../../inlineCompletions/browser/model/ghostText.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineEditHintsWidget } from './inlineEditHintsWidget.js';\nimport { InlineEditSideBySideWidget } from './inlineEditSideBySideWidget.js';\n\nexport class InlineEditController extends Disposable {\n\tstatic ID = 'editor.contrib.inlineEditController';\n\n\tpublic static readonly inlineEditVisibleKey = 'inlineEditVisible';\n\tpublic static readonly inlineEditVisibleContext = new RawContextKey<boolean>(this.inlineEditVisibleKey, false);\n\tprivate _isVisibleContext = InlineEditController.inlineEditVisibleContext.bindTo(this.contextKeyService);\n\n\tpublic static readonly cursorAtInlineEditKey = 'cursorAtInlineEdit';\n\tpublic static readonly cursorAtInlineEditContext = new RawContextKey<boolean>(this.cursorAtInlineEditKey, false);\n\tprivate _isCursorAtInlineEditContext = InlineEditController.cursorAtInlineEditContext.bindTo(this.contextKeyService);\n\n\tpublic static get(editor: ICodeEditor): InlineEditController | null {\n\t\treturn editor.getContribution<InlineEditController>(InlineEditController.ID);\n\t}\n\n\tprivate _currentEdit: ISettableObservable<IInlineEdit | undefined> = observableValue(this, undefined);\n\tprivate _currentWidget = derivedDisposable(this._currentEdit, (reader) => {\n\t\tconst edit = this._currentEdit.read(reader);\n\t\tif (!edit) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst line = edit.range.endLineNumber;\n\t\tconst column = edit.range.endColumn;\n\t\tconst textToDisplay = edit.text.endsWith('\\n') && !(edit.range.startLineNumber === edit.range.endLineNumber && edit.range.startColumn === edit.range.endColumn) ? edit.text.slice(0, -1) : edit.text;\n\t\tconst ghostText = new GhostText(line, [new GhostTextPart(column, textToDisplay, false)]);\n\t\t//only show ghost text for single line edits\n\t\t//unless it is a pure removal\n\t\t//multi line edits are shown in the side by side widget\n\t\tconst isSingleLine = edit.range.startLineNumber === edit.range.endLineNumber && ghostText.parts.length === 1 && ghostText.parts[0].lines.length === 1;\n\t\tconst isPureRemoval = edit.text === '';\n\t\tif (!isSingleLine && !isPureRemoval) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst instance = this.instantiationService.createInstance(GhostTextWidget, this.editor, {\n\t\t\tghostText: constObservable(ghostText),\n\t\t\tminReservedLineCount: constObservable(0),\n\t\t\ttargetTextModel: constObservable(this.editor.getModel() ?? undefined),\n\t\t\trange: constObservable(edit.range)\n\t\t});\n\t\treturn instance;\n\t});\n\tprivate _currentRequestCts: CancellationTokenSource | undefined;\n\n\tprivate _jumpBackPosition: Position | undefined;\n\tprivate _isAccepting: ISettableObservable<boolean> = observableValue(this, false);\n\n\tprivate readonly _enabled = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(EditorOption.inlineEdit).enabled);\n\tprivate readonly _fontFamily = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(EditorOption.inlineEdit).fontFamily);\n\n\n\tconstructor(\n\t\tpublic readonly editor: ICodeEditor,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IDiffProviderFactoryService private readonly _diffProviderFactoryService: IDiffProviderFactoryService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\n\t\t//Automatically request inline edit when the content was changed\n\t\t//Cancel the previous request if there is one\n\t\t//Remove the previous ghost text\n\t\tconst modelChangedSignal = observableSignalFromEvent('InlineEditController.modelContentChangedSignal', editor.onDidChangeModelContent);\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description InlineEditController.modelContentChanged model */\n\t\t\tif (!this._enabled.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmodelChangedSignal.read(reader);\n\t\t\tif (this._isAccepting.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.getInlineEdit(editor, true);\n\t\t}));\n\n\t\t//Check if the cursor is at the ghost text\n\t\tconst cursorPosition = observableFromEvent(this, editor.onDidChangeCursorPosition, () => editor.getPosition());\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description InlineEditController.cursorPositionChanged model */\n\t\t\tif (!this._enabled.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst pos = cursorPosition.read(reader);\n\t\t\tif (pos) {\n\t\t\t\tthis.checkCursorPosition(pos);\n\t\t\t}\n\t\t}));\n\n\t\t//Perform stuff when the current edit has changed\n\t\tthis._register(autorun((reader) => {\n\t\t\t/** @description InlineEditController.update model */\n\t\t\tconst currentEdit = this._currentEdit.read(reader);\n\t\t\tthis._isCursorAtInlineEditContext.set(false);\n\t\t\tif (!currentEdit) {\n\t\t\t\tthis._isVisibleContext.set(false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._isVisibleContext.set(true);\n\t\t\tconst pos = editor.getPosition();\n\t\t\tif (pos) {\n\t\t\t\tthis.checkCursorPosition(pos);\n\t\t\t}\n\t\t}));\n\n\t\t//Clear suggestions on lost focus\n\t\tconst editorBlurSingal = observableSignalFromEvent('InlineEditController.editorBlurSignal', editor.onDidBlurEditorWidget);\n\t\tthis._register(autorun(async reader => {\n\t\t\t/** @description InlineEditController.editorBlur */\n\t\t\tif (!this._enabled.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\teditorBlurSingal.read(reader);\n\t\t\t// This is a hidden setting very useful for debugging\n\t\t\tif (this._configurationService.getValue('editor.experimentalInlineEdit.keepOnBlur') || editor.getOption(EditorOption.inlineEdit).keepOnBlur) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._currentRequestCts?.dispose(true);\n\t\t\tthis._currentRequestCts = undefined;\n\t\t\tawait this.clear(false);\n\t\t}));\n\n\t\t//Invoke provider on focus\n\t\tconst editorFocusSignal = observableSignalFromEvent('InlineEditController.editorFocusSignal', editor.onDidFocusEditorText);\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description InlineEditController.editorFocus */\n\t\t\tif (!this._enabled.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\teditorFocusSignal.read(reader);\n\t\t\tthis.getInlineEdit(editor, true);\n\t\t}));\n\n\n\t\t//handle changes of font setting\n\t\tconst styleElement = this._register(createStyleSheet2());\n\t\tthis._register(autorun(reader => {\n\t\t\tconst fontFamily = this._fontFamily.read(reader);\n\t\t\tstyleElement.setStyle(fontFamily === '' || fontFamily === 'default' ? `` : `\n.monaco-editor .inline-edit-decoration,\n.monaco-editor .inline-edit-decoration-preview,\n.monaco-editor .inline-edit {\n\tfont-family: ${fontFamily};\n}`);\n\t\t}));\n\n\t\tthis._register(new InlineEditHintsWidget(this.editor, this._currentWidget, this.instantiationService));\n\t\tthis._register(new InlineEditSideBySideWidget(this.editor, this._currentEdit, this.instantiationService, this._diffProviderFactoryService, this._modelService));\n\t}\n\n\tprivate checkCursorPosition(position: Position) {\n\t\tif (!this._currentEdit) {\n\t\t\tthis._isCursorAtInlineEditContext.set(false);\n\t\t\treturn;\n\t\t}\n\t\tconst gt = this._currentEdit.get();\n\t\tif (!gt) {\n\t\t\tthis._isCursorAtInlineEditContext.set(false);\n\t\t\treturn;\n\t\t}\n\t\tthis._isCursorAtInlineEditContext.set(Range.containsPosition(gt.range, position));\n\t}\n\n\tprivate validateInlineEdit(editor: ICodeEditor, edit: IInlineEdit): boolean {\n\t\t//Multiline inline replacing edit must replace whole lines\n\t\tif (edit.text.includes('\\n') && edit.range.startLineNumber !== edit.range.endLineNumber && edit.range.startColumn !== edit.range.endColumn) {\n\t\t\tconst firstColumn = edit.range.startColumn;\n\t\t\tif (firstColumn !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst lastLine = edit.range.endLineNumber;\n\t\t\tconst lastColumn = edit.range.endColumn;\n\t\t\tconst lineLength = editor.getModel()?.getLineLength(lastLine) ?? 0;\n\t\t\tif (lastColumn !== lineLength + 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async fetchInlineEdit(editor: ICodeEditor, auto: boolean): Promise<IInlineEdit | undefined> {\n\t\tif (this._currentRequestCts) {\n\t\t\tthis._currentRequestCts.dispose(true);\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tconst modelVersion = model.getVersionId();\n\t\tconst providers = this.languageFeaturesService.inlineEditProvider.all(model);\n\t\tif (providers.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst provider = providers[0];\n\t\tthis._currentRequestCts = new CancellationTokenSource();\n\t\tconst token = this._currentRequestCts.token;\n\t\tconst triggerKind = auto ? InlineEditTriggerKind.Automatic : InlineEditTriggerKind.Invoke;\n\t\tconst shouldDebounce = auto;\n\t\tif (shouldDebounce) {\n\t\t\tawait wait(50, token);\n\t\t}\n\t\tif (token.isCancellationRequested || model.isDisposed() || model.getVersionId() !== modelVersion) {\n\t\t\treturn;\n\t\t}\n\t\tconst edit = await provider.provideInlineEdit(model, { triggerKind }, token);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\t\tif (token.isCancellationRequested || model.isDisposed() || model.getVersionId() !== modelVersion) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.validateInlineEdit(editor, edit)) {\n\t\t\treturn;\n\t\t}\n\t\treturn edit;\n\t}\n\n\tprivate async getInlineEdit(editor: ICodeEditor, auto: boolean) {\n\t\tthis._isCursorAtInlineEditContext.set(false);\n\t\tawait this.clear();\n\t\tconst edit = await this.fetchInlineEdit(editor, auto);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\t\tthis._currentEdit.set(edit, undefined);\n\t}\n\n\tpublic async trigger() {\n\t\tawait this.getInlineEdit(this.editor, false);\n\t}\n\n\tpublic async jumpBack() {\n\t\tif (!this._jumpBackPosition) {\n\t\t\treturn;\n\t\t}\n\t\tthis.editor.setPosition(this._jumpBackPosition);\n\t\t//if position is outside viewports, scroll to it\n\t\tthis.editor.revealPositionInCenterIfOutsideViewport(this._jumpBackPosition);\n\t}\n\n\tpublic async accept() {\n\t\tthis._isAccepting.set(true, undefined);\n\t\tconst data = this._currentEdit.get();\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\t//It should only happen in case of last line suggestion\n\t\tlet text = data.text;\n\t\tif (data.text.startsWith('\\n')) {\n\t\t\ttext = data.text.substring(1);\n\t\t}\n\t\tthis.editor.pushUndoStop();\n\t\tthis.editor.executeEdits('acceptCurrent', [EditOperation.replace(Range.lift(data.range), text)]);\n\t\tif (data.accepted) {\n\t\t\tawait this._commandService\n\t\t\t\t.executeCommand(data.accepted.id, ...(data.accepted.arguments || []))\n\t\t\t\t.then(undefined, onUnexpectedExternalError);\n\t\t}\n\t\tthis.freeEdit(data);\n\t\ttransaction((tx) => {\n\t\t\tthis._currentEdit.set(undefined, tx);\n\t\t\tthis._isAccepting.set(false, tx);\n\t\t});\n\t}\n\n\tpublic jumpToCurrent(): void {\n\t\tthis._jumpBackPosition = this.editor.getSelection()?.getStartPosition();\n\n\t\tconst data = this._currentEdit.get();\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tconst position = Position.lift({ lineNumber: data.range.startLineNumber, column: data.range.startColumn });\n\t\tthis.editor.setPosition(position);\n\t\t//if position is outside viewports, scroll to it\n\t\tthis.editor.revealPositionInCenterIfOutsideViewport(position);\n\t}\n\n\tpublic async clear(sendRejection: boolean = true) {\n\t\tconst edit = this._currentEdit.get();\n\t\tif (edit && edit?.rejected && sendRejection) {\n\t\t\tawait this._commandService\n\t\t\t\t.executeCommand(edit.rejected.id, ...(edit.rejected.arguments || []))\n\t\t\t\t.then(undefined, onUnexpectedExternalError);\n\t\t}\n\t\tif (edit) {\n\t\t\tthis.freeEdit(edit);\n\t\t}\n\t\tthis._currentEdit.set(undefined, undefined);\n\t}\n\n\tprivate freeEdit(edit: IInlineEdit) {\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tconst providers = this.languageFeaturesService.inlineEditProvider.all(model);\n\t\tif (providers.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tproviders[0].freeInlineEdit(edit);\n\t}\n\n\tpublic shouldShowHoverAt(range: Range) {\n\t\tconst currentEdit = this._currentEdit.get();\n\t\tconst currentWidget = this._currentWidget.get();\n\t\tif (!currentEdit) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!currentWidget) {\n\t\t\treturn false;\n\t\t}\n\t\tconst edit = currentEdit;\n\t\tconst model = currentWidget.model;\n\t\tconst overReplaceRange = Range.containsPosition(edit.range, range.getStartPosition()) || Range.containsPosition(edit.range, range.getEndPosition());\n\t\tif (overReplaceRange) {\n\t\t\treturn true;\n\t\t}\n\t\tconst ghostText = model.ghostText.get();\n\t\tif (ghostText) {\n\t\t\treturn ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic shouldShowHoverAtViewZone(viewZoneId: string): boolean {\n\t\treturn this._currentWidget.get()?.ownsViewZone(viewZoneId) ?? false;\n\t}\n\n}\n\nfunction wait(ms: number, cancellationToken?: CancellationToken): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tlet d: IDisposable | undefined = undefined;\n\t\tconst handle = setTimeout(() => {\n\t\t\tif (d) { d.dispose(); }\n\t\t\tresolve();\n\t\t}, ms);\n\t\tif (cancellationToken) {\n\t\t\td = cancellationToken.onCancellationRequested(() => {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tif (d) { d.dispose(); }\n\t\t\t\tresolve();\n\t\t\t});\n\t\t}\n\t});\n}\n"],
  "mappings": "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",
  "names": []
}
