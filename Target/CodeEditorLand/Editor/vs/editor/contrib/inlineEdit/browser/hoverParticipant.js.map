{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdit/browser/hoverParticipant.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { constObservable } from \"../../../../base/common/observable.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IEditorMouseEvent,\n\tMouseTargetType,\n} from \"../../../browser/editorBrowser.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { Range } from \"../../../common/core/range.js\";\nimport type { IModelDecoration } from \"../../../common/model.js\";\nimport {\n\ttype HoverAnchor,\n\tHoverAnchorType,\n\tHoverForeignElementAnchor,\n\ttype IEditorHoverParticipant,\n\ttype IEditorHoverRenderContext,\n\ttype IHoverPart,\n\ttype IRenderedHoverPart,\n\ttype IRenderedHoverParts,\n\tRenderedHoverParts,\n} from \"../../hover/browser/hoverTypes.js\";\nimport { InlineEditController } from \"./inlineEditController.js\";\nimport { InlineEditHintsContentWidget } from \"./inlineEditHintsWidget.js\";\n\nexport class InlineEditHover implements IHoverPart {\n\tconstructor(\n\t\tpublic readonly owner: IEditorHoverParticipant<InlineEditHover>,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly controller: InlineEditController,\n\t) {}\n\n\tpublic isValidForHoverAnchor(anchor: HoverAnchor): boolean {\n\t\treturn (\n\t\t\tanchor.type === HoverAnchorType.Range &&\n\t\t\tthis.range.startColumn <= anchor.range.startColumn &&\n\t\t\tthis.range.endColumn >= anchor.range.endColumn\n\t\t);\n\t}\n}\n\nexport class InlineEditHoverParticipant\n\timplements IEditorHoverParticipant<InlineEditHover>\n{\n\tpublic readonly hoverOrdinal: number = 5;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t}\n\n\tsuggestHoverAnchor(mouseEvent: IEditorMouseEvent): HoverAnchor | null {\n\t\tconst controller = InlineEditController.get(this._editor);\n\t\tif (!controller) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst target = mouseEvent.target;\n\t\tif (target.type === MouseTargetType.CONTENT_VIEW_ZONE) {\n\t\t\t// handle the case where the mouse is over the view zone\n\t\t\tconst viewZoneData = target.detail;\n\t\t\tif (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n\t\t\t\t// const range = Range.fromPositions(this._editor.getModel()!.validatePosition(viewZoneData.positionBefore || viewZoneData.position));\n\t\t\t\tconst range = target.range;\n\t\t\t\treturn new HoverForeignElementAnchor(\n\t\t\t\t\t1000,\n\t\t\t\t\tthis,\n\t\t\t\t\trange,\n\t\t\t\t\tmouseEvent.event.posx,\n\t\t\t\t\tmouseEvent.event.posy,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_EMPTY) {\n\t\t\t// handle the case where the mouse is over the empty portion of a line following ghost text\n\t\t\tif (controller.shouldShowHoverAt(target.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(\n\t\t\t\t\t1000,\n\t\t\t\t\tthis,\n\t\t\t\t\ttarget.range,\n\t\t\t\t\tmouseEvent.event.posx,\n\t\t\t\t\tmouseEvent.event.posy,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_TEXT) {\n\t\t\t// handle the case where the mouse is directly over ghost text\n\t\t\tconst mightBeForeignElement = target.detail.mightBeForeignElement;\n\t\t\tif (\n\t\t\t\tmightBeForeignElement &&\n\t\t\t\tcontroller.shouldShowHoverAt(target.range)\n\t\t\t) {\n\t\t\t\treturn new HoverForeignElementAnchor(\n\t\t\t\t\t1000,\n\t\t\t\t\tthis,\n\t\t\t\t\ttarget.range,\n\t\t\t\t\tmouseEvent.event.posx,\n\t\t\t\t\tmouseEvent.event.posy,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomputeSync(\n\t\tanchor: HoverAnchor,\n\t\tlineDecorations: IModelDecoration[],\n\t): InlineEditHover[] {\n\t\tif (\n\t\t\tthis._editor.getOption(EditorOption.inlineEdit).showToolbar !==\n\t\t\t\"onHover\"\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst controller = InlineEditController.get(this._editor);\n\t\tif (controller && controller.shouldShowHoverAt(anchor.range)) {\n\t\t\treturn [new InlineEditHover(this, anchor.range, controller)];\n\t\t}\n\t\treturn [];\n\t}\n\n\trenderHoverParts(\n\t\tcontext: IEditorHoverRenderContext,\n\t\thoverParts: InlineEditHover[],\n\t): IRenderedHoverParts<InlineEditHover> {\n\t\tconst disposables = new DisposableStore();\n\n\t\tthis._telemetryService.publicLog2<\n\t\t\t{},\n\t\t\t{\n\t\t\t\towner: \"hediet\";\n\t\t\t\tcomment: \"This event tracks whenever an inline edit hover is shown.\";\n\t\t\t}\n\t\t>(\"inlineEditHover.shown\");\n\n\t\tconst w = this._instantiationService.createInstance(\n\t\t\tInlineEditHintsContentWidget,\n\t\t\tthis._editor,\n\t\t\tfalse,\n\t\t\tconstObservable(null),\n\t\t);\n\t\tdisposables.add(w);\n\t\tconst widgetNode: HTMLElement = w.getDomNode();\n\t\tconst renderedHoverPart: IRenderedHoverPart<InlineEditHover> = {\n\t\t\thoverPart: hoverParts[0],\n\t\t\thoverElement: widgetNode,\n\t\t\tdispose: () => disposables.dispose(),\n\t\t};\n\t\treturn new RenderedHoverParts([renderedHoverPart]);\n\t}\n\n\tgetAccessibleContent(hoverPart: InlineEditHover): string {\n\t\treturn nls.localize(\n\t\t\t\"hoverAccessibilityInlineEdits\",\n\t\t\t\"There are inline edits here.\",\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
