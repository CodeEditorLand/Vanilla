{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdit/browser/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\ttype ServicesAccessor,\n} from \"../../../browser/editorExtensions.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport {\n\tinlineEditAcceptId,\n\tinlineEditJumpBackId,\n\tinlineEditJumpToId,\n\tinlineEditRejectId,\n} from \"./commandIds.js\";\nimport { InlineEditController } from \"./inlineEditController.js\";\n\nexport class AcceptInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: inlineEditAcceptId,\n\t\t\tlabel: \"Accept Inline Edit\",\n\t\t\talias: \"Accept Inline Edit\",\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tInlineEditController.inlineEditVisibleContext,\n\t\t\t),\n\t\t\tkbOpts: [\n\t\t\t\t{\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\t\tprimary: KeyCode.Tab,\n\t\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\t\tInlineEditController.inlineEditVisibleContext,\n\t\t\t\t\t\tInlineEditController.cursorAtInlineEditContext,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t],\n\t\t\tmenuOpts: [\n\t\t\t\t{\n\t\t\t\t\tmenuId: MenuId.InlineEditToolbar,\n\t\t\t\t\ttitle: \"Accept\",\n\t\t\t\t\tgroup: \"primary\",\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tawait controller?.accept();\n\t}\n}\n\nexport class TriggerInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tconst activeExpr = ContextKeyExpr.and(\n\t\t\tEditorContextKeys.writable,\n\t\t\tContextKeyExpr.not(InlineEditController.inlineEditVisibleKey),\n\t\t);\n\t\tsuper({\n\t\t\tid: \"editor.action.inlineEdit.trigger\",\n\t\t\tlabel: \"Trigger Inline Edit\",\n\t\t\talias: \"Trigger Inline Edit\",\n\t\t\tprecondition: activeExpr,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Equal,\n\t\t\t\tkbExpr: activeExpr,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tcontroller?.trigger();\n\t}\n}\n\nexport class JumpToInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tconst activeExpr = ContextKeyExpr.and(\n\t\t\tEditorContextKeys.writable,\n\t\t\tInlineEditController.inlineEditVisibleContext,\n\t\t\tContextKeyExpr.not(InlineEditController.cursorAtInlineEditKey),\n\t\t);\n\n\t\tsuper({\n\t\t\tid: inlineEditJumpToId,\n\t\t\tlabel: \"Jump to Inline Edit\",\n\t\t\talias: \"Jump to Inline Edit\",\n\t\t\tprecondition: activeExpr,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Equal,\n\t\t\t\tkbExpr: activeExpr,\n\t\t\t},\n\t\t\tmenuOpts: [\n\t\t\t\t{\n\t\t\t\t\tmenuId: MenuId.InlineEditToolbar,\n\t\t\t\t\ttitle: \"Jump To Edit\",\n\t\t\t\t\tgroup: \"primary\",\n\t\t\t\t\torder: 3,\n\t\t\t\t\twhen: activeExpr,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tcontroller?.jumpToCurrent();\n\t}\n}\n\nexport class JumpBackInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tconst activeExpr = ContextKeyExpr.and(\n\t\t\tEditorContextKeys.writable,\n\t\t\tInlineEditController.cursorAtInlineEditContext,\n\t\t);\n\n\t\tsuper({\n\t\t\tid: inlineEditJumpBackId,\n\t\t\tlabel: \"Jump Back from Inline Edit\",\n\t\t\talias: \"Jump Back from Inline Edit\",\n\t\t\tprecondition: activeExpr,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 10,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Equal,\n\t\t\t\tkbExpr: activeExpr,\n\t\t\t},\n\t\t\tmenuOpts: [\n\t\t\t\t{\n\t\t\t\t\tmenuId: MenuId.InlineEditToolbar,\n\t\t\t\t\ttitle: \"Jump Back\",\n\t\t\t\t\tgroup: \"primary\",\n\t\t\t\t\torder: 3,\n\t\t\t\t\twhen: activeExpr,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tcontroller?.jumpBack();\n\t}\n}\n\nexport class RejectInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tconst activeExpr = ContextKeyExpr.and(\n\t\t\tEditorContextKeys.writable,\n\t\t\tInlineEditController.inlineEditVisibleContext,\n\t\t);\n\t\tsuper({\n\t\t\tid: inlineEditRejectId,\n\t\t\tlabel: \"Reject Inline Edit\",\n\t\t\talias: \"Reject Inline Edit\",\n\t\t\tprecondition: activeExpr,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tkbExpr: activeExpr,\n\t\t\t},\n\t\t\tmenuOpts: [\n\t\t\t\t{\n\t\t\t\t\tmenuId: MenuId.InlineEditToolbar,\n\t\t\t\t\ttitle: \"Reject\",\n\t\t\t\t\tgroup: \"secondary\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic async run(\n\t\taccessor: ServicesAccessor | undefined,\n\t\teditor: ICodeEditor,\n\t): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tawait controller?.clear();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
