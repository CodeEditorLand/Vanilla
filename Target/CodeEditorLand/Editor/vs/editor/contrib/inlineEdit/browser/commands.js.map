{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdit/browser/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { inlineEditAcceptId, inlineEditJumpBackId, inlineEditJumpToId, inlineEditRejectId } from './commandIds.js';\nimport { InlineEditController } from './inlineEditController.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\n\nexport class AcceptInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: inlineEditAcceptId,\n\t\t\tlabel: 'Accept Inline Edit',\n\t\t\talias: 'Accept Inline Edit',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineEditController.inlineEditVisibleContext),\n\t\t\tkbOpts: [\n\t\t\t\t{\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\t\tprimary: KeyCode.Tab,\n\t\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineEditController.inlineEditVisibleContext, InlineEditController.cursorAtInlineEditContext)\n\t\t\t\t}],\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineEditToolbar,\n\t\t\t\ttitle: 'Accept',\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 1,\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tawait controller?.accept();\n\t}\n}\n\nexport class TriggerInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tconst activeExpr = ContextKeyExpr.and(EditorContextKeys.writable, ContextKeyExpr.not(InlineEditController.inlineEditVisibleKey));\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineEdit.trigger',\n\t\t\tlabel: 'Trigger Inline Edit',\n\t\t\talias: 'Trigger Inline Edit',\n\t\t\tprecondition: activeExpr,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Equal,\n\t\t\t\tkbExpr: activeExpr\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tcontroller?.trigger();\n\t}\n}\n\nexport class JumpToInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tconst activeExpr = ContextKeyExpr.and(EditorContextKeys.writable, InlineEditController.inlineEditVisibleContext, ContextKeyExpr.not(InlineEditController.cursorAtInlineEditKey));\n\n\t\tsuper({\n\t\t\tid: inlineEditJumpToId,\n\t\t\tlabel: 'Jump to Inline Edit',\n\t\t\talias: 'Jump to Inline Edit',\n\t\t\tprecondition: activeExpr,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Equal,\n\t\t\t\tkbExpr: activeExpr\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineEditToolbar,\n\t\t\t\ttitle: 'Jump To Edit',\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 3,\n\t\t\t\twhen: activeExpr\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tcontroller?.jumpToCurrent();\n\t}\n}\n\nexport class JumpBackInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tconst activeExpr = ContextKeyExpr.and(EditorContextKeys.writable, InlineEditController.cursorAtInlineEditContext);\n\n\t\tsuper({\n\t\t\tid: inlineEditJumpBackId,\n\t\t\tlabel: 'Jump Back from Inline Edit',\n\t\t\talias: 'Jump Back from Inline Edit',\n\t\t\tprecondition: activeExpr,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 10,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Equal,\n\t\t\t\tkbExpr: activeExpr\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineEditToolbar,\n\t\t\t\ttitle: 'Jump Back',\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 3,\n\t\t\t\twhen: activeExpr\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tcontroller?.jumpBack();\n\t}\n}\n\nexport class RejectInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tconst activeExpr = ContextKeyExpr.and(EditorContextKeys.writable, InlineEditController.inlineEditVisibleContext);\n\t\tsuper({\n\t\t\tid: inlineEditRejectId,\n\t\t\tlabel: 'Reject Inline Edit',\n\t\t\talias: 'Reject Inline Edit',\n\t\t\tprecondition: activeExpr,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tkbExpr: activeExpr\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineEditToolbar,\n\t\t\t\ttitle: 'Reject',\n\t\t\t\tgroup: 'secondary',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineEditController.get(editor);\n\t\tawait controller?.clear();\n\t}\n}\n\n"],
  "mappings": "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",
  "names": []
}
