{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdit/browser/inlineEditSideBySideWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $ } from \"../../../../base/browser/dom.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Disposable, toDisposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\tObservablePromise,\n\tautorun,\n\tautorunWithStore,\n\tderived,\n\tderivedDisposable,\n\tobservableSignalFromEvent,\n} from \"../../../../base/common/observable.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tICodeEditor,\n\tIOverlayWidget,\n\tIOverlayWidgetPosition,\n} from \"../../../browser/editorBrowser.js\";\nimport { observableCodeEditor } from \"../../../browser/observableCodeEditor.js\";\nimport { EmbeddedCodeEditorWidget } from \"../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js\";\nimport { IDiffProviderFactoryService } from \"../../../browser/widget/diffEditor/diffProviderFactoryService.js\";\nimport {\n\tdiffAddDecoration,\n\tdiffAddDecorationEmpty,\n\tdiffDeleteDecoration,\n\tdiffDeleteDecorationEmpty,\n\tdiffLineAddDecorationBackgroundWithIndicator,\n\tdiffLineDeleteDecorationBackgroundWithIndicator,\n\tdiffWholeLineAddDecoration,\n\tdiffWholeLineDeleteDecoration,\n} from \"../../../browser/widget/diffEditor/registrations.contribution.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { type IRange, Range } from \"../../../common/core/range.js\";\nimport type { DetailedLineRangeMapping } from \"../../../common/diff/rangeMapping.js\";\nimport type { IInlineEdit } from \"../../../common/languages.js\";\nimport { PLAINTEXT_LANGUAGE_ID } from \"../../../common/languages/modesRegistry.js\";\nimport type { IModelDeltaDecoration } from \"../../../common/model.js\";\nimport { TextModel } from \"../../../common/model/textModel.js\";\nimport { IModelService } from \"../../../common/services/model.js\";\nimport \"./inlineEditSideBySideWidget.css\";\n\nfunction* range(start: number, end: number, step = 1) {\n\tif (end === undefined) {\n\t\t[end, start] = [start, 0];\n\t}\n\tfor (let n = start; n < end; n += step) {\n\t\tyield n;\n\t}\n}\n\nfunction removeIndentation(lines: string[]) {\n\tconst indentation = lines[0].match(/^\\s*/)?.[0] ?? \"\";\n\tconst length = indentation.length;\n\n\treturn {\n\t\ttext: lines.map((l) => l.replace(new RegExp(\"^\" + indentation), \"\")),\n\t\tshift: length,\n\t};\n}\n\ntype Pos = {\n\ttop: number;\n\tleft: Position;\n};\n\nexport class InlineEditSideBySideWidget extends Disposable {\n\tprivate static _modelId = 0;\n\tprivate static _createUniqueUri(): URI {\n\t\treturn URI.from({\n\t\t\tscheme: \"inline-edit-widget\",\n\t\t\tpath:\n\t\t\t\tnew Date().toString() +\n\t\t\t\tString(InlineEditSideBySideWidget._modelId++),\n\t\t});\n\t}\n\n\tprivate readonly _position = derived(this, (reader) => {\n\t\tconst ghostText = this._model.read(reader);\n\n\t\tif (!ghostText || ghostText.text.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tif (\n\t\t\tghostText.range.startLineNumber === ghostText.range.endLineNumber &&\n\t\t\t!(\n\t\t\t\tghostText.range.startColumn === ghostText.range.endColumn &&\n\t\t\t\tghostText.range.startColumn === 1\n\t\t\t)\n\t\t) {\n\t\t\t//for inner-line suggestions we still want to use minimal ghost text\n\t\t\treturn null;\n\t\t}\n\t\tconst editorModel = this._editor.getModel();\n\t\tif (!editorModel) {\n\t\t\treturn null;\n\t\t}\n\t\tconst lines = Array.from(\n\t\t\trange(\n\t\t\t\tghostText.range.startLineNumber,\n\t\t\t\tghostText.range.endLineNumber + 1,\n\t\t\t),\n\t\t);\n\t\tconst lengths = lines.map((lineNumber) =>\n\t\t\teditorModel.getLineLastNonWhitespaceColumn(lineNumber),\n\t\t);\n\t\tconst maxColumn = Math.max(...lengths);\n\t\tconst lineOfMaxColumn = lines[lengths.indexOf(maxColumn)];\n\n\t\tconst position = new Position(lineOfMaxColumn, maxColumn);\n\t\tconst pos = {\n\t\t\ttop: ghostText.range.startLineNumber,\n\t\t\tleft: position,\n\t\t};\n\n\t\treturn pos;\n\t});\n\n\tprivate readonly _text = derived(this, (reader) => {\n\t\tconst ghostText = this._model.read(reader);\n\t\tif (!ghostText) {\n\t\t\treturn { text: \"\", shift: 0 };\n\t\t}\n\t\tconst t = removeIndentation(ghostText.text.split(\"\\n\"));\n\t\treturn {\n\t\t\ttext: t.text.join(\"\\n\"),\n\t\t\tshift: t.shift,\n\t\t};\n\t});\n\n\tprivate readonly _originalModel = derivedDisposable(() =>\n\t\tthis._modelService.createModel(\n\t\t\t\"\",\n\t\t\tnull,\n\t\t\tInlineEditSideBySideWidget._createUniqueUri(),\n\t\t),\n\t).keepObserved(this._store);\n\tprivate readonly _modifiedModel = derivedDisposable(() =>\n\t\tthis._modelService.createModel(\n\t\t\t\"\",\n\t\t\tnull,\n\t\t\tInlineEditSideBySideWidget._createUniqueUri(),\n\t\t),\n\t).keepObserved(this._store);\n\n\tprivate readonly _diff = derived(this, (reader) => {\n\t\treturn this._diffPromise.read(reader)?.promiseResult.read(reader)?.data;\n\t});\n\n\tprivate readonly _diffPromise = derived(this, (reader) => {\n\t\tconst ghostText = this._model.read(reader);\n\t\tif (!ghostText) {\n\t\t\treturn;\n\t\t}\n\t\tconst editorModel = this._editor.getModel();\n\t\tif (!editorModel) {\n\t\t\treturn;\n\t\t}\n\t\tconst originalText = removeIndentation(\n\t\t\teditorModel.getValueInRange(ghostText.range).split(\"\\n\"),\n\t\t).text.join(\"\\n\");\n\t\tconst modifiedText = removeIndentation(\n\t\t\tghostText.text.split(\"\\n\"),\n\t\t).text.join(\"\\n\");\n\t\tthis._originalModel.get().setValue(originalText);\n\t\tthis._modifiedModel.get().setValue(modifiedText);\n\t\tconst d = this._diffProviderFactoryService.createDiffProvider({\n\t\t\tdiffAlgorithm: \"advanced\",\n\t\t});\n\t\treturn ObservablePromise.fromFn(async () => {\n\t\t\tconst result = await d.computeDiff(\n\t\t\t\tthis._originalModel.get(),\n\t\t\t\tthis._modifiedModel.get(),\n\t\t\t\t{\n\t\t\t\t\tcomputeMoves: false,\n\t\t\t\t\tignoreTrimWhitespace: false,\n\t\t\t\t\tmaxComputationTimeMs: 1000,\n\t\t\t\t},\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\n\t\t\tif (result.identical) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn result.changes;\n\t\t});\n\t});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _model: IObservable<IInlineEdit | undefined>,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IDiffProviderFactoryService\n\t\tprivate readonly _diffProviderFactoryService: IDiffProviderFactoryService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t/** @description setup content widget */\n\t\t\t\tconst model = this._model.read(reader);\n\t\t\t\tif (!model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this._position.get() === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst contentWidget = store.add(\n\t\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\t\tInlineEditSideBySideContentWidget,\n\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\tthis._position,\n\t\t\t\t\t\tthis._text.map((t) => t.text),\n\t\t\t\t\t\tthis._text.map((t) => t.shift),\n\t\t\t\t\t\tthis._diff,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\t_editor.addOverlayWidget(contentWidget);\n\t\t\t\tstore.add(\n\t\t\t\t\ttoDisposable(() =>\n\t\t\t\t\t\t_editor.removeOverlayWidget(contentWidget),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n}\n\nclass InlineEditSideBySideContentWidget\n\textends Disposable\n\timplements IOverlayWidget\n{\n\tprivate static _dropDownVisible = false;\n\tpublic static get dropDownVisible() {\n\t\treturn this._dropDownVisible;\n\t}\n\n\tprivate static id = 0;\n\n\tprivate readonly id =\n\t\t`InlineEditSideBySideContentWidget${InlineEditSideBySideContentWidget.id++}`;\n\tpublic readonly allowEditorOverflow = false;\n\n\tprivate readonly _nodes = $(\"div.inlineEditSideBySide\", undefined);\n\n\tprivate readonly _scrollChanged = observableSignalFromEvent(\n\t\t\"editor.onDidScrollChange\",\n\t\tthis._editor.onDidScrollChange,\n\t);\n\n\tprivate readonly _previewEditor = this._register(\n\t\tthis._instantiationService.createInstance(\n\t\t\tEmbeddedCodeEditorWidget,\n\t\t\tthis._nodes,\n\t\t\t{\n\t\t\t\tglyphMargin: false,\n\t\t\t\tlineNumbers: \"off\",\n\t\t\t\tminimap: { enabled: false },\n\t\t\t\tguides: {\n\t\t\t\t\tindentation: false,\n\t\t\t\t\tbracketPairs: false,\n\t\t\t\t\tbracketPairsHorizontal: false,\n\t\t\t\t\thighlightActiveIndentation: false,\n\t\t\t\t},\n\t\t\t\tfolding: false,\n\t\t\t\tselectOnLineNumbers: false,\n\t\t\t\tselectionHighlight: false,\n\t\t\t\tcolumnSelection: false,\n\t\t\t\toverviewRulerBorder: false,\n\t\t\t\toverviewRulerLanes: 0,\n\t\t\t\tlineDecorationsWidth: 0,\n\t\t\t\tlineNumbersMinChars: 0,\n\t\t\t\tscrollbar: {\n\t\t\t\t\tvertical: \"hidden\",\n\t\t\t\t\thorizontal: \"hidden\",\n\t\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t\t\thandleMouseWheel: false,\n\t\t\t\t},\n\t\t\t\treadOnly: true,\n\t\t\t\twordWrap: \"off\",\n\t\t\t\twordWrapOverride1: \"off\",\n\t\t\t\twordWrapOverride2: \"off\",\n\t\t\t\twrappingIndent: \"none\",\n\t\t\t\twrappingStrategy: undefined,\n\t\t\t},\n\t\t\t{ contributions: [], isSimpleWidget: true },\n\t\t\tthis._editor,\n\t\t),\n\t);\n\n\tprivate readonly _previewEditorObs = observableCodeEditor(\n\t\tthis._previewEditor,\n\t);\n\tprivate readonly _editorObs = observableCodeEditor(this._editor);\n\n\tprivate readonly _previewTextModel = this._register(\n\t\tthis._instantiationService.createInstance(\n\t\t\tTextModel,\n\t\t\t\"\",\n\t\t\tthis._editor.getModel()?.getLanguageId() ?? PLAINTEXT_LANGUAGE_ID,\n\t\t\tTextModel.DEFAULT_CREATION_OPTIONS,\n\t\t\tnull,\n\t\t),\n\t);\n\n\tprivate readonly _setText = derived((reader) => {\n\t\tconst edit = this._text.read(reader);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\t\tthis._previewTextModel.setValue(edit);\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\tprivate readonly _decorations = derived(this, (reader) => {\n\t\tthis._setText.read(reader);\n\t\tconst position = this._position.read(reader);\n\t\tif (!position) {\n\t\t\treturn { org: [], mod: [] };\n\t\t}\n\t\tconst diff = this._diff.read(reader);\n\t\tif (!diff) {\n\t\t\treturn { org: [], mod: [] };\n\t\t}\n\n\t\tconst originalDecorations: IModelDeltaDecoration[] = [];\n\t\tconst modifiedDecorations: IModelDeltaDecoration[] = [];\n\n\t\tif (\n\t\t\tdiff.length === 1 &&\n\t\t\tdiff[0].innerChanges![0].modifiedRange.equalsRange(\n\t\t\t\tthis._previewTextModel.getFullModelRange(),\n\t\t\t)\n\t\t) {\n\t\t\treturn { org: [], mod: [] };\n\t\t}\n\t\tconst shift = this._shift.get();\n\n\t\tconst moveRange = (range: IRange) => {\n\t\t\treturn new Range(\n\t\t\t\trange.startLineNumber + position.top - 1,\n\t\t\t\trange.startColumn + shift,\n\t\t\t\trange.endLineNumber + position.top - 1,\n\t\t\t\trange.endColumn + shift,\n\t\t\t);\n\t\t};\n\n\t\tfor (const m of diff) {\n\t\t\tif (!m.original.isEmpty) {\n\t\t\t\toriginalDecorations.push({\n\t\t\t\t\trange: moveRange(m.original.toInclusiveRange()!),\n\t\t\t\t\toptions: diffLineDeleteDecorationBackgroundWithIndicator,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\tmodifiedDecorations.push({\n\t\t\t\t\trange: m.modified.toInclusiveRange()!,\n\t\t\t\t\toptions: diffLineAddDecorationBackgroundWithIndicator,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (m.modified.isEmpty || m.original.isEmpty) {\n\t\t\t\tif (!m.original.isEmpty) {\n\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\trange: moveRange(m.original.toInclusiveRange()!),\n\t\t\t\t\t\toptions: diffWholeLineDeleteDecoration,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\t\tmodifiedDecorations.push({\n\t\t\t\t\t\trange: m.modified.toInclusiveRange()!,\n\t\t\t\t\t\toptions: diffWholeLineAddDecoration,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const i of m.innerChanges || []) {\n\t\t\t\t\t// Don't show empty markers outside the line range\n\t\t\t\t\tif (m.original.contains(i.originalRange.startLineNumber)) {\n\t\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\t\trange: moveRange(i.originalRange),\n\t\t\t\t\t\t\toptions: i.originalRange.isEmpty()\n\t\t\t\t\t\t\t\t? diffDeleteDecorationEmpty\n\t\t\t\t\t\t\t\t: diffDeleteDecoration,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (m.modified.contains(i.modifiedRange.startLineNumber)) {\n\t\t\t\t\t\tmodifiedDecorations.push({\n\t\t\t\t\t\t\trange: i.modifiedRange,\n\t\t\t\t\t\t\toptions: i.modifiedRange.isEmpty()\n\t\t\t\t\t\t\t\t? diffAddDecorationEmpty\n\t\t\t\t\t\t\t\t: diffAddDecoration,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { org: originalDecorations, mod: modifiedDecorations };\n\t});\n\n\tprivate readonly _originalDecorations = derived(this, (reader) => {\n\t\treturn this._decorations.read(reader).org;\n\t});\n\n\tprivate readonly _modifiedDecorations = derived(this, (reader) => {\n\t\treturn this._decorations.read(reader).mod;\n\t});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _position: IObservable<Pos | null>,\n\t\tprivate readonly _text: IObservable<string>,\n\t\tprivate readonly _shift: IObservable<number>,\n\t\tprivate readonly _diff: IObservable<\n\t\t\treadonly DetailedLineRangeMapping[] | undefined\n\t\t>,\n\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._previewEditor.setModel(this._previewTextModel);\n\n\t\tthis._register(\n\t\t\tthis._editorObs.setDecorations(this._originalDecorations),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._previewEditorObs.setDecorations(this._modifiedDecorations),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\tconst width = this._previewEditorObs.contentWidth.read(reader);\n\t\t\t\tconst lines = this._text.read(reader).split(\"\\n\").length - 1;\n\t\t\t\tconst height =\n\t\t\t\t\tthis._editor.getOption(EditorOption.lineHeight) * lines;\n\t\t\t\tif (width <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._previewEditor.layout({ height: height, width: width });\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description update position */\n\t\t\t\tthis._position.read(reader);\n\t\t\t\tthis._editor.layoutOverlayWidget(this);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description scroll change */\n\t\t\t\tthis._scrollChanged.read(reader);\n\t\t\t\tconst position = this._position.read(reader);\n\t\t\t\tif (!position) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._editor.layoutOverlayWidget(this);\n\t\t\t}),\n\t\t);\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._nodes;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\t\tconst position = this._position.get();\n\t\tif (!position) {\n\t\t\treturn null;\n\t\t}\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tconst visibPos = this._editor.getScrolledVisiblePosition(\n\t\t\tnew Position(position.top, 1),\n\t\t);\n\t\tif (!visibPos) {\n\t\t\treturn null;\n\t\t}\n\t\tconst top = visibPos.top - 1; //-1 to offset the border width\n\t\tconst offset = this._editor.getOffsetForColumn(\n\t\t\tposition.left.lineNumber,\n\t\t\tposition.left.column,\n\t\t);\n\t\tconst left = layoutInfo.contentLeft + offset + 10;\n\t\treturn {\n\t\t\tpreference: {\n\t\t\t\tleft,\n\t\t\t\ttop,\n\t\t\t},\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["range"]
}
