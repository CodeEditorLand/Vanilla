{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/contrib/inlineEdit/browser/inlineEditSideBySideWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $ } from '../../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, ObservablePromise, autorun, autorunWithStore, derived, derivedDisposable, observableSignalFromEvent } from '../../../../base/common/observable.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition } from '../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../browser/observableCodeEditor.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { IDiffProviderFactoryService } from '../../../browser/widget/diffEditor/diffProviderFactoryService.js';\nimport { diffAddDecoration, diffAddDecorationEmpty, diffDeleteDecoration, diffDeleteDecorationEmpty, diffLineAddDecorationBackgroundWithIndicator, diffLineDeleteDecorationBackgroundWithIndicator, diffWholeLineAddDecoration, diffWholeLineDeleteDecoration } from '../../../browser/widget/diffEditor/registrations.contribution.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { IRange, Range } from '../../../common/core/range.js';\nimport { DetailedLineRangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { IInlineEdit } from '../../../common/languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../common/languages/modesRegistry.js';\nimport { IModelDeltaDecoration } from '../../../common/model.js';\nimport { TextModel } from '../../../common/model/textModel.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport './inlineEditSideBySideWidget.css';\n\nfunction* range(start: number, end: number, step = 1) {\n\tif (end === undefined) { [end, start] = [start, 0]; }\n\tfor (let n = start; n < end; n += step) { yield n; }\n}\n\nfunction removeIndentation(lines: string[]) {\n\tconst indentation = lines[0].match(/^\\s*/)?.[0] ?? '';\n\tconst length = indentation.length;\n\n\treturn {\n\t\ttext: lines.map(l => l.replace(new RegExp('^' + indentation), '')),\n\t\tshift: length\n\t};\n}\n\ntype Pos = {\n\ttop: number;\n\tleft: Position;\n};\n\nexport class InlineEditSideBySideWidget extends Disposable {\n\tprivate static _modelId = 0;\n\tprivate static _createUniqueUri(): URI {\n\t\treturn URI.from({ scheme: 'inline-edit-widget', path: new Date().toString() + String(InlineEditSideBySideWidget._modelId++) });\n\t}\n\n\tprivate readonly _position = derived(this, reader => {\n\t\tconst ghostText = this._model.read(reader);\n\n\t\tif (!ghostText || ghostText.text.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tif (ghostText.range.startLineNumber === ghostText.range.endLineNumber && !(ghostText.range.startColumn === ghostText.range.endColumn && ghostText.range.startColumn === 1)) {\n\t\t\t//for inner-line suggestions we still want to use minimal ghost text\n\t\t\treturn null;\n\t\t}\n\t\tconst editorModel = this._editor.getModel();\n\t\tif (!editorModel) {\n\t\t\treturn null;\n\t\t}\n\t\tconst lines = Array.from(range(ghostText.range.startLineNumber, ghostText.range.endLineNumber + 1));\n\t\tconst lengths = lines.map(lineNumber => editorModel.getLineLastNonWhitespaceColumn(lineNumber));\n\t\tconst maxColumn = Math.max(...lengths);\n\t\tconst lineOfMaxColumn = lines[lengths.indexOf(maxColumn)];\n\n\t\tconst position = new Position(lineOfMaxColumn, maxColumn);\n\t\tconst pos = {\n\t\t\ttop: ghostText.range.startLineNumber,\n\t\t\tleft: position\n\t\t};\n\n\t\treturn pos;\n\t});\n\n\tprivate readonly _text = derived(this, reader => {\n\t\tconst ghostText = this._model.read(reader);\n\t\tif (!ghostText) {\n\t\t\treturn { text: '', shift: 0 };\n\t\t}\n\t\tconst t = removeIndentation(ghostText.text.split('\\n'));\n\t\treturn {\n\t\t\ttext: t.text.join('\\n'),\n\t\t\tshift: t.shift\n\t\t};\n\t});\n\n\n\tprivate readonly _originalModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditSideBySideWidget._createUniqueUri())).keepObserved(this._store);\n\tprivate readonly _modifiedModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditSideBySideWidget._createUniqueUri())).keepObserved(this._store);\n\n\tprivate readonly _diff = derived(this, reader => {\n\t\treturn this._diffPromise.read(reader)?.promiseResult.read(reader)?.data;\n\t});\n\n\tprivate readonly _diffPromise = derived(this, reader => {\n\t\tconst ghostText = this._model.read(reader);\n\t\tif (!ghostText) {\n\t\t\treturn;\n\t\t}\n\t\tconst editorModel = this._editor.getModel();\n\t\tif (!editorModel) {\n\t\t\treturn;\n\t\t}\n\t\tconst originalText = removeIndentation(editorModel.getValueInRange(ghostText.range).split('\\n')).text.join('\\n');\n\t\tconst modifiedText = removeIndentation(ghostText.text.split('\\n')).text.join('\\n');\n\t\tthis._originalModel.get().setValue(originalText);\n\t\tthis._modifiedModel.get().setValue(modifiedText);\n\t\tconst d = this._diffProviderFactoryService.createDiffProvider({ diffAlgorithm: 'advanced' });\n\t\treturn ObservablePromise.fromFn(async () => {\n\t\t\tconst result = await d.computeDiff(this._originalModel.get(), this._modifiedModel.get(), {\n\t\t\t\tcomputeMoves: false,\n\t\t\t\tignoreTrimWhitespace: false,\n\t\t\t\tmaxComputationTimeMs: 1000,\n\t\t\t}, CancellationToken.None);\n\n\t\t\tif (result.identical) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn result.changes;\n\t\t});\n\t});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _model: IObservable<IInlineEdit | undefined>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IDiffProviderFactoryService private readonly _diffProviderFactoryService: IDiffProviderFactoryService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description setup content widget */\n\t\t\tconst model = this._model.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._position.get() === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst contentWidget = store.add(this._instantiationService.createInstance(\n\t\t\t\tInlineEditSideBySideContentWidget,\n\t\t\t\tthis._editor,\n\t\t\t\tthis._position,\n\t\t\t\tthis._text.map(t => t.text),\n\t\t\t\tthis._text.map(t => t.shift),\n\t\t\t\tthis._diff\n\t\t\t));\n\t\t\t_editor.addOverlayWidget(contentWidget);\n\t\t\tstore.add(toDisposable(() => _editor.removeOverlayWidget(contentWidget)));\n\t\t}));\n\t}\n}\n\nclass InlineEditSideBySideContentWidget extends Disposable implements IOverlayWidget {\n\tprivate static _dropDownVisible = false;\n\tpublic static get dropDownVisible() { return this._dropDownVisible; }\n\n\tprivate static id = 0;\n\n\tprivate readonly id = `InlineEditSideBySideContentWidget${InlineEditSideBySideContentWidget.id++}`;\n\tpublic readonly allowEditorOverflow = false;\n\n\tprivate readonly _nodes = $('div.inlineEditSideBySide', undefined);\n\n\tprivate readonly _scrollChanged = observableSignalFromEvent('editor.onDidScrollChange', this._editor.onDidScrollChange);\n\n\tprivate readonly _previewEditor = this._register(this._instantiationService.createInstance(\n\t\tEmbeddedCodeEditorWidget,\n\t\tthis._nodes,\n\t\t{\n\t\t\tglyphMargin: false,\n\t\t\tlineNumbers: 'off',\n\t\t\tminimap: { enabled: false },\n\t\t\tguides: {\n\t\t\t\tindentation: false,\n\t\t\t\tbracketPairs: false,\n\t\t\t\tbracketPairsHorizontal: false,\n\t\t\t\thighlightActiveIndentation: false,\n\t\t\t},\n\t\t\tfolding: false,\n\t\t\tselectOnLineNumbers: false,\n\t\t\tselectionHighlight: false,\n\t\t\tcolumnSelection: false,\n\t\t\toverviewRulerBorder: false,\n\t\t\toverviewRulerLanes: 0,\n\t\t\tlineDecorationsWidth: 0,\n\t\t\tlineNumbersMinChars: 0,\n\t\t\tscrollbar: { vertical: 'hidden', horizontal: 'hidden', alwaysConsumeMouseWheel: false, handleMouseWheel: false },\n\t\t\treadOnly: true,\n\t\t\twordWrap: 'off',\n\t\t\twordWrapOverride1: 'off',\n\t\t\twordWrapOverride2: 'off',\n\t\t\twrappingIndent: 'none',\n\t\t\twrappingStrategy: undefined,\n\t\t},\n\t\t{ contributions: [], isSimpleWidget: true },\n\t\tthis._editor\n\t));\n\n\tprivate readonly _previewEditorObs = observableCodeEditor(this._previewEditor);\n\tprivate readonly _editorObs = observableCodeEditor(this._editor);\n\n\tprivate readonly _previewTextModel = this._register(this._instantiationService.createInstance(\n\t\tTextModel,\n\t\t'',\n\t\tthis._editor.getModel()?.getLanguageId() ?? PLAINTEXT_LANGUAGE_ID,\n\t\tTextModel.DEFAULT_CREATION_OPTIONS,\n\t\tnull\n\t));\n\n\tprivate readonly _setText = derived(reader => {\n\t\tconst edit = this._text.read(reader);\n\t\tif (!edit) { return; }\n\t\tthis._previewTextModel.setValue(edit);\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\n\tprivate readonly _decorations = derived(this, (reader) => {\n\t\tthis._setText.read(reader);\n\t\tconst position = this._position.read(reader);\n\t\tif (!position) { return { org: [], mod: [] }; }\n\t\tconst diff = this._diff.read(reader);\n\t\tif (!diff) { return { org: [], mod: [] }; }\n\n\t\tconst originalDecorations: IModelDeltaDecoration[] = [];\n\t\tconst modifiedDecorations: IModelDeltaDecoration[] = [];\n\n\t\tif (diff.length === 1 && diff[0].innerChanges![0].modifiedRange.equalsRange(this._previewTextModel.getFullModelRange())) {\n\t\t\treturn { org: [], mod: [] };\n\t\t}\n\t\tconst shift = this._shift.get();\n\n\t\tconst moveRange = (range: IRange) => {\n\t\t\treturn new Range(range.startLineNumber + position.top - 1, range.startColumn + shift, range.endLineNumber + position.top - 1, range.endColumn + shift);\n\t\t};\n\n\t\tfor (const m of diff) {\n\t\t\tif (!m.original.isEmpty) {\n\t\t\t\toriginalDecorations.push({ range: moveRange(m.original.toInclusiveRange()!), options: diffLineDeleteDecorationBackgroundWithIndicator });\n\t\t\t}\n\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\tmodifiedDecorations.push({ range: m.modified.toInclusiveRange()!, options: diffLineAddDecorationBackgroundWithIndicator });\n\t\t\t}\n\n\t\t\tif (m.modified.isEmpty || m.original.isEmpty) {\n\t\t\t\tif (!m.original.isEmpty) {\n\t\t\t\t\toriginalDecorations.push({ range: moveRange(m.original.toInclusiveRange()!), options: diffWholeLineDeleteDecoration });\n\t\t\t\t}\n\t\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\t\tmodifiedDecorations.push({ range: m.modified.toInclusiveRange()!, options: diffWholeLineAddDecoration });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const i of m.innerChanges || []) {\n\t\t\t\t\t// Don't show empty markers outside the line range\n\t\t\t\t\tif (m.original.contains(i.originalRange.startLineNumber)) {\n\t\t\t\t\t\toriginalDecorations.push({ range: moveRange(i.originalRange), options: i.originalRange.isEmpty() ? diffDeleteDecorationEmpty : diffDeleteDecoration });\n\t\t\t\t\t}\n\t\t\t\t\tif (m.modified.contains(i.modifiedRange.startLineNumber)) {\n\t\t\t\t\t\tmodifiedDecorations.push({ range: i.modifiedRange, options: i.modifiedRange.isEmpty() ? diffAddDecorationEmpty : diffAddDecoration });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { org: originalDecorations, mod: modifiedDecorations };\n\t});\n\n\tprivate readonly _originalDecorations = derived(this, reader => {\n\t\treturn this._decorations.read(reader).org;\n\t});\n\n\tprivate readonly _modifiedDecorations = derived(this, reader => {\n\t\treturn this._decorations.read(reader).mod;\n\t});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _position: IObservable<Pos | null>,\n\t\tprivate readonly _text: IObservable<string>,\n\t\tprivate readonly _shift: IObservable<number>,\n\t\tprivate readonly _diff: IObservable<readonly DetailedLineRangeMapping[] | undefined>,\n\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._previewEditor.setModel(this._previewTextModel);\n\n\t\tthis._register(this._editorObs.setDecorations(this._originalDecorations));\n\t\tthis._register(this._previewEditorObs.setDecorations(this._modifiedDecorations));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst width = this._previewEditorObs.contentWidth.read(reader);\n\t\t\tconst lines = this._text.read(reader).split('\\n').length - 1;\n\t\t\tconst height = this._editor.getOption(EditorOption.lineHeight) * lines;\n\t\t\tif (width <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._previewEditor.layout({ height: height, width: width });\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update position */\n\t\t\tthis._position.read(reader);\n\t\t\tthis._editor.layoutOverlayWidget(this);\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description scroll change */\n\t\t\tthis._scrollChanged.read(reader);\n\t\t\tconst position = this._position.read(reader);\n\t\t\tif (!position) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._editor.layoutOverlayWidget(this);\n\t\t}));\n\t}\n\n\tgetId(): string { return this.id; }\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._nodes;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\t\tconst position = this._position.get();\n\t\tif (!position) {\n\t\t\treturn null;\n\t\t}\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tconst visibPos = this._editor.getScrolledVisiblePosition(new Position(position.top, 1));\n\t\tif (!visibPos) {\n\t\t\treturn null;\n\t\t}\n\t\tconst top = visibPos.top - 1; //-1 to offset the border width\n\t\tconst offset = this._editor.getOffsetForColumn(position.left.lineNumber, position.left.column);\n\t\tconst left = layoutInfo.contentLeft + offset + 10;\n\t\treturn {\n\t\t\tpreference: {\n\t\t\t\tleft,\n\t\t\t\ttop,\n\t\t\t}\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["range"]
}
