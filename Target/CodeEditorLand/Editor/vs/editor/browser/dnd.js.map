{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/dnd.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DataTransfers } from '../../base/browser/dnd.js';\nimport { createFileDataTransferItem, createStringDataTransferItem, IDataTransferItem, UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers, FileAdditionalNativeProperties } from '../../platform/dnd/browser/dnd.js';\n\n\nexport function toVSDataTransfer(dataTransfer: DataTransfer) {\n\tconst vsDataTransfer = new VSDataTransfer();\n\tfor (const item of dataTransfer.items) {\n\t\tconst type = item.type;\n\t\tif (item.kind === 'string') {\n\t\t\tconst asStringValue = new Promise<string>(resolve => item.getAsString(resolve));\n\t\t\tvsDataTransfer.append(type, createStringDataTransferItem(asStringValue));\n\t\t} else if (item.kind === 'file') {\n\t\t\tconst file = item.getAsFile();\n\t\t\tif (file) {\n\t\t\t\tvsDataTransfer.append(type, createFileDataTransferItemFromFile(file));\n\t\t\t}\n\t\t}\n\t}\n\treturn vsDataTransfer;\n}\n\nfunction createFileDataTransferItemFromFile(file: File): IDataTransferItem {\n\tconst uri = (file as FileAdditionalNativeProperties).path ? URI.parse((file as FileAdditionalNativeProperties).path!) : undefined;\n\treturn createFileDataTransferItem(file.name, uri, async () => {\n\t\treturn new Uint8Array(await file.arrayBuffer());\n\t});\n}\n\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([\n\tCodeDataTransfers.EDITORS,\n\tCodeDataTransfers.FILES,\n\tDataTransfers.RESOURCES,\n\tDataTransfers.INTERNAL_URI_LIST,\n]);\n\nexport function toExternalVSDataTransfer(sourceDataTransfer: DataTransfer, overwriteUriList = false): VSDataTransfer {\n\tconst vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n\n\t// Try to expose the internal uri-list type as the standard type\n\tconst uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n\tif (uriList) {\n\t\tvsDataTransfer.replace(Mimes.uriList, uriList);\n\t} else {\n\t\tif (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n\t\t\t// Otherwise, fallback to adding dragged resources to the uri list\n\t\t\tconst editorData: string[] = [];\n\t\t\tfor (const item of sourceDataTransfer.items) {\n\t\t\t\tconst file = item.getAsFile();\n\t\t\t\tif (file) {\n\t\t\t\t\tconst path = (file as FileAdditionalNativeProperties).path;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\teditorData.push(URI.file(path).toString());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\teditorData.push(URI.parse(file.name, true).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// Parsing failed. Leave out from list\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (editorData.length) {\n\t\t\t\tvsDataTransfer.replace(Mimes.uriList, createStringDataTransferItem(UriList.create(editorData)));\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const internal of INTERNAL_DND_MIME_TYPES) {\n\t\tvsDataTransfer.delete(internal);\n\t}\n\n\treturn vsDataTransfer;\n}\n"],
  "mappings": ";;AAKA,SAAS,qBAAqB;AAC9B,SAAS,4BAA4B,8BAA8B,mBAAmB,SAAS,sBAAsB;AACrH,SAAS,aAAa;AACtB,SAAS,WAAW;AACpB,SAAS,mBAAmB,sCAAsC;AAG3D,SAAS,iBAAiB,cAA4B;AAC5D,QAAM,iBAAiB,IAAI,eAAe;AAC1C,aAAW,QAAQ,aAAa,OAAO;AACtC,UAAM,OAAO,KAAK;AAClB,QAAI,KAAK,SAAS,UAAU;AAC3B,YAAM,gBAAgB,IAAI,QAAgB,aAAW,KAAK,YAAY,OAAO,CAAC;AAC9E,qBAAe,OAAO,MAAM,6BAA6B,aAAa,CAAC;AAAA,IACxE,WAAW,KAAK,SAAS,QAAQ;AAChC,YAAM,OAAO,KAAK,UAAU;AAC5B,UAAI,MAAM;AACT,uBAAe,OAAO,MAAM,mCAAmC,IAAI,CAAC;AAAA,MACrE;AAAA,IACD;AAAA,EACD;AACA,SAAO;AACR;AAfgB;AAiBhB,SAAS,mCAAmC,MAA+B;AAC1E,QAAM,MAAO,KAAwC,OAAO,IAAI,MAAO,KAAwC,IAAK,IAAI;AACxH,SAAO,2BAA2B,KAAK,MAAM,KAAK,YAAY;AAC7D,WAAO,IAAI,WAAW,MAAM,KAAK,YAAY,CAAC;AAAA,EAC/C,CAAC;AACF;AALS;AAOT,MAAM,0BAA0B,OAAO,OAAO;AAAA,EAC7C,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,cAAc;AAAA,EACd,cAAc;AACf,CAAC;AAEM,SAAS,yBAAyB,oBAAkC,mBAAmB,OAAuB;AACpH,QAAM,iBAAiB,iBAAiB,kBAAkB;AAG1D,QAAM,UAAU,eAAe,IAAI,cAAc,iBAAiB;AAClE,MAAI,SAAS;AACZ,mBAAe,QAAQ,MAAM,SAAS,OAAO;AAAA,EAC9C,OAAO;AACN,QAAI,oBAAoB,CAAC,eAAe,IAAI,MAAM,OAAO,GAAG;AAE3D,YAAM,aAAuB,CAAC;AAC9B,iBAAW,QAAQ,mBAAmB,OAAO;AAC5C,cAAM,OAAO,KAAK,UAAU;AAC5B,YAAI,MAAM;AACT,gBAAM,OAAQ,KAAwC;AACtD,cAAI;AACH,gBAAI,MAAM;AACT,yBAAW,KAAK,IAAI,KAAK,IAAI,EAAE,SAAS,CAAC;AAAA,YAC1C,OAAO;AACN,yBAAW,KAAK,IAAI,MAAM,KAAK,MAAM,IAAI,EAAE,SAAS,CAAC;AAAA,YACtD;AAAA,UACD,QAAQ;AAAA,UAER;AAAA,QACD;AAAA,MACD;AAEA,UAAI,WAAW,QAAQ;AACtB,uBAAe,QAAQ,MAAM,SAAS,6BAA6B,QAAQ,OAAO,UAAU,CAAC,CAAC;AAAA,MAC/F;AAAA,IACD;AAAA,EACD;AAEA,aAAW,YAAY,yBAAyB;AAC/C,mBAAe,OAAO,QAAQ;AAAA,EAC/B;AAEA,SAAO;AACR;AAtCgB;",
  "names": []
}
