{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/dnd.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DataTransfers } from \"../../base/browser/dnd.js\";\nimport {\n\ttype IDataTransferItem,\n\tUriList,\n\tVSDataTransfer,\n\tcreateFileDataTransferItem,\n\tcreateStringDataTransferItem,\n} from \"../../base/common/dataTransfer.js\";\nimport { Mimes } from \"../../base/common/mime.js\";\nimport { URI } from \"../../base/common/uri.js\";\nimport {\n\tCodeDataTransfers,\n\ttype FileAdditionalNativeProperties,\n} from \"../../platform/dnd/browser/dnd.js\";\n\nexport function toVSDataTransfer(dataTransfer: DataTransfer) {\n\tconst vsDataTransfer = new VSDataTransfer();\n\tfor (const item of dataTransfer.items) {\n\t\tconst type = item.type;\n\t\tif (item.kind === \"string\") {\n\t\t\tconst asStringValue = new Promise<string>((resolve) =>\n\t\t\t\titem.getAsString(resolve),\n\t\t\t);\n\t\t\tvsDataTransfer.append(\n\t\t\t\ttype,\n\t\t\t\tcreateStringDataTransferItem(asStringValue),\n\t\t\t);\n\t\t} else if (item.kind === \"file\") {\n\t\t\tconst file = item.getAsFile();\n\t\t\tif (file) {\n\t\t\t\tvsDataTransfer.append(\n\t\t\t\t\ttype,\n\t\t\t\t\tcreateFileDataTransferItemFromFile(file),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\treturn vsDataTransfer;\n}\n\nfunction createFileDataTransferItemFromFile(file: File): IDataTransferItem {\n\tconst uri = (file as FileAdditionalNativeProperties).path\n\t\t? URI.parse((file as FileAdditionalNativeProperties).path!)\n\t\t: undefined;\n\treturn createFileDataTransferItem(file.name, uri, async () => {\n\t\treturn new Uint8Array(await file.arrayBuffer());\n\t});\n}\n\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([\n\tCodeDataTransfers.EDITORS,\n\tCodeDataTransfers.FILES,\n\tDataTransfers.RESOURCES,\n\tDataTransfers.INTERNAL_URI_LIST,\n]);\n\nexport function toExternalVSDataTransfer(\n\tsourceDataTransfer: DataTransfer,\n\toverwriteUriList = false,\n): VSDataTransfer {\n\tconst vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n\n\t// Try to expose the internal uri-list type as the standard type\n\tconst uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n\tif (uriList) {\n\t\tvsDataTransfer.replace(Mimes.uriList, uriList);\n\t} else if (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n\t\t// Otherwise, fallback to adding dragged resources to the uri list\n\t\tconst editorData: string[] = [];\n\t\tfor (const item of sourceDataTransfer.items) {\n\t\t\tconst file = item.getAsFile();\n\t\t\tif (file) {\n\t\t\t\tconst path = (file as FileAdditionalNativeProperties).path;\n\t\t\t\ttry {\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\teditorData.push(URI.file(path).toString());\n\t\t\t\t\t} else {\n\t\t\t\t\t\teditorData.push(URI.parse(file.name, true).toString());\n\t\t\t\t\t}\n\t\t\t\t} catch {\n\t\t\t\t\t// Parsing failed. Leave out from list\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (editorData.length) {\n\t\t\tvsDataTransfer.replace(\n\t\t\t\tMimes.uriList,\n\t\t\t\tcreateStringDataTransferItem(UriList.create(editorData)),\n\t\t\t);\n\t\t}\n\t}\n\n\tfor (const internal of INTERNAL_DND_MIME_TYPES) {\n\t\tvsDataTransfer.delete(internal);\n\t}\n\n\treturn vsDataTransfer;\n}\n"],
  "mappings": ";;AAKA,SAAS,qBAAqB;AAC9B;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,aAAa;AACtB,SAAS,WAAW;AACpB;AAAA,EACC;AAAA,OAEM;AAEA,SAAS,iBAAiB,cAA4B;AAC5D,QAAM,iBAAiB,IAAI,eAAe;AAC1C,aAAW,QAAQ,aAAa,OAAO;AACtC,UAAM,OAAO,KAAK;AAClB,QAAI,KAAK,SAAS,UAAU;AAC3B,YAAM,gBAAgB,IAAI;AAAA,QAAgB,CAAC,YAC1C,KAAK,YAAY,OAAO;AAAA,MACzB;AACA,qBAAe;AAAA,QACd;AAAA,QACA,6BAA6B,aAAa;AAAA,MAC3C;AAAA,IACD,WAAW,KAAK,SAAS,QAAQ;AAChC,YAAM,OAAO,KAAK,UAAU;AAC5B,UAAI,MAAM;AACT,uBAAe;AAAA,UACd;AAAA,UACA,mCAAmC,IAAI;AAAA,QACxC;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACA,SAAO;AACR;AAvBgB;AAyBhB,SAAS,mCAAmC,MAA+B;AAC1E,QAAM,MAAO,KAAwC,OAClD,IAAI,MAAO,KAAwC,IAAK,IACxD;AACH,SAAO,2BAA2B,KAAK,MAAM,KAAK,YAAY;AAC7D,WAAO,IAAI,WAAW,MAAM,KAAK,YAAY,CAAC;AAAA,EAC/C,CAAC;AACF;AAPS;AAST,MAAM,0BAA0B,OAAO,OAAO;AAAA,EAC7C,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,cAAc;AAAA,EACd,cAAc;AACf,CAAC;AAEM,SAAS,yBACf,oBACA,mBAAmB,OACF;AACjB,QAAM,iBAAiB,iBAAiB,kBAAkB;AAG1D,QAAM,UAAU,eAAe,IAAI,cAAc,iBAAiB;AAClE,MAAI,SAAS;AACZ,mBAAe,QAAQ,MAAM,SAAS,OAAO;AAAA,EAC9C,WAAW,oBAAoB,CAAC,eAAe,IAAI,MAAM,OAAO,GAAG;AAElE,UAAM,aAAuB,CAAC;AAC9B,eAAW,QAAQ,mBAAmB,OAAO;AAC5C,YAAM,OAAO,KAAK,UAAU;AAC5B,UAAI,MAAM;AACT,cAAM,OAAQ,KAAwC;AACtD,YAAI;AACH,cAAI,MAAM;AACT,uBAAW,KAAK,IAAI,KAAK,IAAI,EAAE,SAAS,CAAC;AAAA,UAC1C,OAAO;AACN,uBAAW,KAAK,IAAI,MAAM,KAAK,MAAM,IAAI,EAAE,SAAS,CAAC;AAAA,UACtD;AAAA,QACD,QAAQ;AAAA,QAER;AAAA,MACD;AAAA,IACD;AAEA,QAAI,WAAW,QAAQ;AACtB,qBAAe;AAAA,QACd,MAAM;AAAA,QACN,6BAA6B,QAAQ,OAAO,UAAU,CAAC;AAAA,MACxD;AAAA,IACD;AAAA,EACD;AAEA,aAAW,YAAY,yBAAyB;AAC/C,mBAAe,OAAO,QAAQ;AAAA,EAC/B;AAEA,SAAO;AACR;AA1CgB;",
  "names": []
}
