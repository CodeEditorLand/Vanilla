{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/controller/editContext/native/debugEditContext.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst COLOR_FOR_CONTROL_BOUNDS = \"blue\";\nconst COLOR_FOR_SELECTION_BOUNDS = \"red\";\nconst COLOR_FOR_CHARACTER_BOUNDS = \"green\";\n\nexport class DebugEditContext extends EditContext {\n\tprivate _isDebugging = true;\n\tprivate _controlBounds: DOMRect | null = null;\n\tprivate _selectionBounds: DOMRect | null = null;\n\tprivate _characterBounds: {\n\t\trangeStart: number;\n\t\tcharacterBounds: DOMRect[];\n\t} | null = null;\n\n\tconstructor(options?: EditContextInit | undefined) {\n\t\tsuper(options);\n\t}\n\n\toverride updateText(\n\t\trangeStart: number,\n\t\trangeEnd: number,\n\t\ttext: string,\n\t): void {\n\t\tsuper.updateText(rangeStart, rangeEnd, text);\n\t\tthis.renderDebug();\n\t}\n\toverride updateSelection(start: number, end: number): void {\n\t\tsuper.updateSelection(start, end);\n\t\tthis.renderDebug();\n\t}\n\toverride updateControlBounds(controlBounds: DOMRect): void {\n\t\tsuper.updateControlBounds(controlBounds);\n\t\tthis._controlBounds = controlBounds;\n\t\tthis.renderDebug();\n\t}\n\toverride updateSelectionBounds(selectionBounds: DOMRect): void {\n\t\tsuper.updateSelectionBounds(selectionBounds);\n\t\tthis._selectionBounds = selectionBounds;\n\t\tthis.renderDebug();\n\t}\n\toverride updateCharacterBounds(\n\t\trangeStart: number,\n\t\tcharacterBounds: DOMRect[],\n\t): void {\n\t\tsuper.updateCharacterBounds(rangeStart, characterBounds);\n\t\tthis._characterBounds = { rangeStart, characterBounds };\n\t\tthis.renderDebug();\n\t}\n\toverride attachedElements(): HTMLElement[] {\n\t\treturn super.attachedElements();\n\t}\n\n\toverride characterBounds(): DOMRect[] {\n\t\treturn super.characterBounds();\n\t}\n\n\tprivate readonly _ontextupdateWrapper = new EventListenerWrapper(\n\t\t\"textupdate\",\n\t\tthis,\n\t);\n\tprivate readonly _ontextformatupdateWrapper = new EventListenerWrapper(\n\t\t\"textformatupdate\",\n\t\tthis,\n\t);\n\tprivate readonly _oncharacterboundsupdateWrapper = new EventListenerWrapper(\n\t\t\"characterboundsupdate\",\n\t\tthis,\n\t);\n\tprivate readonly _oncompositionstartWrapper = new EventListenerWrapper(\n\t\t\"compositionstart\",\n\t\tthis,\n\t);\n\tprivate readonly _oncompositionendWrapper = new EventListenerWrapper(\n\t\t\"compositionend\",\n\t\tthis,\n\t);\n\n\toverride get ontextupdate(): EventHandler | null {\n\t\treturn this._ontextupdateWrapper.eventHandler;\n\t}\n\toverride set ontextupdate(value: EventHandler | null) {\n\t\tthis._ontextupdateWrapper.eventHandler = value;\n\t}\n\toverride get ontextformatupdate(): EventHandler | null {\n\t\treturn this._ontextformatupdateWrapper.eventHandler;\n\t}\n\toverride set ontextformatupdate(value: EventHandler | null) {\n\t\tthis._ontextformatupdateWrapper.eventHandler = value;\n\t}\n\toverride get oncharacterboundsupdate(): EventHandler | null {\n\t\treturn this._oncharacterboundsupdateWrapper.eventHandler;\n\t}\n\toverride set oncharacterboundsupdate(value: EventHandler | null) {\n\t\tthis._oncharacterboundsupdateWrapper.eventHandler = value;\n\t}\n\toverride get oncompositionstart(): EventHandler | null {\n\t\treturn this._oncompositionstartWrapper.eventHandler;\n\t}\n\toverride set oncompositionstart(value: EventHandler | null) {\n\t\tthis._oncompositionstartWrapper.eventHandler = value;\n\t}\n\toverride get oncompositionend(): EventHandler | null {\n\t\treturn this._oncompositionendWrapper.eventHandler;\n\t}\n\toverride set oncompositionend(value: EventHandler | null) {\n\t\tthis._oncompositionendWrapper.eventHandler = value;\n\t}\n\n\tprivate readonly _listenerMap = new Map<\n\t\tEventListenerOrEventListenerObject,\n\t\tEventListenerOrEventListenerObject\n\t>();\n\n\toverride addEventListener<K extends keyof EditContextEventHandlersEventMap>(\n\t\ttype: K,\n\t\tlistener: (\n\t\t\tthis: GlobalEventHandlers,\n\t\t\tev: EditContextEventHandlersEventMap[K],\n\t\t) => any,\n\t\toptions?: boolean | AddEventListenerOptions,\n\t): void;\n\toverride addEventListener(\n\t\ttype: string,\n\t\tlistener: EventListenerOrEventListenerObject,\n\t\toptions?: boolean | AddEventListenerOptions,\n\t): void {\n\t\tif (!listener) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst debugListener = (event: Event) => {\n\t\t\tif (this._isDebugging) {\n\t\t\t\tthis.renderDebug();\n\t\t\t\tconsole.log(`DebugEditContex.on_${type}`, event);\n\t\t\t}\n\t\t\tif (typeof listener === \"function\") {\n\t\t\t\tlistener.call(this, event);\n\t\t\t} else if (\n\t\t\t\ttypeof listener === \"object\" &&\n\t\t\t\t\"handleEvent\" in listener\n\t\t\t) {\n\t\t\t\tlistener.handleEvent(event);\n\t\t\t}\n\t\t};\n\t\tthis._listenerMap.set(listener, debugListener);\n\t\tsuper.addEventListener(type, debugListener, options);\n\t\tthis.renderDebug();\n\t}\n\n\toverride removeEventListener(\n\t\ttype: string,\n\t\tlistener: EventListenerOrEventListenerObject | null,\n\t\toptions?: boolean | EventListenerOptions | undefined,\n\t): void {\n\t\tif (!listener) {\n\t\t\treturn;\n\t\t}\n\t\tconst debugListener = this._listenerMap.get(listener);\n\t\tif (debugListener) {\n\t\t\tsuper.removeEventListener(type, debugListener, options);\n\t\t\tthis._listenerMap.delete(listener);\n\t\t}\n\t\tthis.renderDebug();\n\t}\n\n\toverride dispatchEvent(event: Event): boolean {\n\t\treturn super.dispatchEvent(event);\n\t}\n\n\tpublic startDebugging() {\n\t\tthis._isDebugging = true;\n\t\tthis.renderDebug();\n\t}\n\n\tpublic endDebugging() {\n\t\tthis._isDebugging = false;\n\t\tthis.renderDebug();\n\t}\n\n\tprivate _disposables: { dispose(): void }[] = [];\n\n\tpublic renderDebug() {\n\t\tthis._disposables.forEach((d) => d.dispose());\n\t\tthis._disposables = [];\n\t\tif (!this._isDebugging || this._listenerMap.size === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._controlBounds) {\n\t\t\tthis._disposables.push(\n\t\t\t\tcreateRect(this._controlBounds, COLOR_FOR_CONTROL_BOUNDS),\n\t\t\t);\n\t\t}\n\t\tif (this._selectionBounds) {\n\t\t\tthis._disposables.push(\n\t\t\t\tcreateRect(this._selectionBounds, COLOR_FOR_SELECTION_BOUNDS),\n\t\t\t);\n\t\t}\n\t\tif (this._characterBounds) {\n\t\t\tfor (const rect of this._characterBounds.characterBounds) {\n\t\t\t\tthis._disposables.push(\n\t\t\t\t\tcreateRect(rect, COLOR_FOR_CHARACTER_BOUNDS),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis._disposables.push(\n\t\t\tcreateDiv(this.text, this.selectionStart, this.selectionEnd),\n\t\t);\n\t}\n}\n\nfunction createDiv(text: string, selectionStart: number, selectionEnd: number) {\n\tconst ret = document.createElement(\"div\");\n\tret.className = \"debug-rect-marker\";\n\tret.style.position = \"absolute\";\n\tret.style.zIndex = \"999999999\";\n\tret.style.bottom = \"50px\";\n\tret.style.left = \"60px\";\n\tret.style.backgroundColor = \"white\";\n\tret.style.border = \"1px solid black\";\n\tret.style.padding = \"5px\";\n\tret.style.whiteSpace = \"pre\";\n\tret.style.font = \"12px monospace\";\n\tret.style.pointerEvents = \"none\";\n\n\tconst before = text.substring(0, selectionStart);\n\tconst selected = text.substring(selectionStart, selectionEnd) || \"|\";\n\tconst after = text.substring(selectionEnd) + \" \";\n\n\tconst beforeNode = document.createTextNode(before);\n\tret.appendChild(beforeNode);\n\n\tconst selectedNode = document.createElement(\"span\");\n\tselectedNode.style.backgroundColor = \"yellow\";\n\tselectedNode.appendChild(document.createTextNode(selected));\n\n\tselectedNode.style.minWidth = \"2px\";\n\tselectedNode.style.minHeight = \"16px\";\n\tret.appendChild(selectedNode);\n\n\tconst afterNode = document.createTextNode(after);\n\tret.appendChild(afterNode);\n\n\t// eslint-disable-next-line no-restricted-syntax\n\tdocument.body.appendChild(ret);\n\n\treturn {\n\t\tdispose: () => {\n\t\t\tret.remove();\n\t\t},\n\t};\n}\n\nfunction createRect(rect: DOMRect, color: \"green\" | \"blue\" | \"red\") {\n\tconst ret = document.createElement(\"div\");\n\tret.className = \"debug-rect-marker\";\n\tret.style.position = \"absolute\";\n\tret.style.zIndex = \"999999999\";\n\tret.style.outline = `2px solid ${color}`;\n\tret.style.pointerEvents = \"none\";\n\n\tret.style.top = rect.top + \"px\";\n\tret.style.left = rect.left + \"px\";\n\tret.style.width = rect.width + \"px\";\n\tret.style.height = rect.height + \"px\";\n\n\t// eslint-disable-next-line no-restricted-syntax\n\tdocument.body.appendChild(ret);\n\n\treturn {\n\t\tdispose: () => {\n\t\t\tret.remove();\n\t\t},\n\t};\n}\n\nclass EventListenerWrapper {\n\tprivate _eventHandler: EventHandler | null = null;\n\n\tconstructor(\n\t\tprivate readonly _eventType: string,\n\t\tprivate readonly _target: EventTarget,\n\t) {}\n\n\tget eventHandler(): EventHandler | null {\n\t\treturn this._eventHandler;\n\t}\n\n\tset eventHandler(value: EventHandler | null) {\n\t\tif (this._eventHandler) {\n\t\t\tthis._target.removeEventListener(\n\t\t\t\tthis._eventType,\n\t\t\t\tthis._eventHandler,\n\t\t\t);\n\t\t}\n\t\tthis._eventHandler = value;\n\t\tif (value) {\n\t\t\tthis._target.addEventListener(this._eventType, value);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
