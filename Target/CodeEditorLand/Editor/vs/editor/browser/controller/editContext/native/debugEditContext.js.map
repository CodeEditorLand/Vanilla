{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/controller/editContext/native/debugEditContext.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst COLOR_FOR_CONTROL_BOUNDS = 'blue';\nconst COLOR_FOR_SELECTION_BOUNDS = 'red';\nconst COLOR_FOR_CHARACTER_BOUNDS = 'green';\n\nexport class DebugEditContext extends EditContext {\n\tprivate _isDebugging = true;\n\tprivate _controlBounds: DOMRect | null = null;\n\tprivate _selectionBounds: DOMRect | null = null;\n\tprivate _characterBounds: { rangeStart: number; characterBounds: DOMRect[] } | null = null;\n\n\tconstructor(options?: EditContextInit | undefined) {\n\t\tsuper(options);\n\t}\n\n\toverride updateText(rangeStart: number, rangeEnd: number, text: string): void {\n\t\tsuper.updateText(rangeStart, rangeEnd, text);\n\t\tthis.renderDebug();\n\t}\n\toverride updateSelection(start: number, end: number): void {\n\t\tsuper.updateSelection(start, end);\n\t\tthis.renderDebug();\n\t}\n\toverride updateControlBounds(controlBounds: DOMRect): void {\n\t\tsuper.updateControlBounds(controlBounds);\n\t\tthis._controlBounds = controlBounds;\n\t\tthis.renderDebug();\n\t}\n\toverride updateSelectionBounds(selectionBounds: DOMRect): void {\n\t\tsuper.updateSelectionBounds(selectionBounds);\n\t\tthis._selectionBounds = selectionBounds;\n\t\tthis.renderDebug();\n\t}\n\toverride updateCharacterBounds(rangeStart: number, characterBounds: DOMRect[]): void {\n\t\tsuper.updateCharacterBounds(rangeStart, characterBounds);\n\t\tthis._characterBounds = { rangeStart, characterBounds };\n\t\tthis.renderDebug();\n\t}\n\toverride attachedElements(): HTMLElement[] {\n\t\treturn super.attachedElements();\n\t}\n\n\toverride characterBounds(): DOMRect[] {\n\t\treturn super.characterBounds();\n\t}\n\n\tprivate readonly _ontextupdateWrapper = new EventListenerWrapper('textupdate', this);\n\tprivate readonly _ontextformatupdateWrapper = new EventListenerWrapper('textformatupdate', this);\n\tprivate readonly _oncharacterboundsupdateWrapper = new EventListenerWrapper('characterboundsupdate', this);\n\tprivate readonly _oncompositionstartWrapper = new EventListenerWrapper('compositionstart', this);\n\tprivate readonly _oncompositionendWrapper = new EventListenerWrapper('compositionend', this);\n\n\toverride get ontextupdate(): EventHandler | null { return this._ontextupdateWrapper.eventHandler; }\n\toverride set ontextupdate(value: EventHandler | null) { this._ontextupdateWrapper.eventHandler = value; }\n\toverride get ontextformatupdate(): EventHandler | null { return this._ontextformatupdateWrapper.eventHandler; }\n\toverride set ontextformatupdate(value: EventHandler | null) { this._ontextformatupdateWrapper.eventHandler = value; }\n\toverride get oncharacterboundsupdate(): EventHandler | null { return this._oncharacterboundsupdateWrapper.eventHandler; }\n\toverride set oncharacterboundsupdate(value: EventHandler | null) { this._oncharacterboundsupdateWrapper.eventHandler = value; }\n\toverride get oncompositionstart(): EventHandler | null { return this._oncompositionstartWrapper.eventHandler; }\n\toverride set oncompositionstart(value: EventHandler | null) { this._oncompositionstartWrapper.eventHandler = value; }\n\toverride get oncompositionend(): EventHandler | null { return this._oncompositionendWrapper.eventHandler; }\n\toverride set oncompositionend(value: EventHandler | null) { this._oncompositionendWrapper.eventHandler = value; }\n\n\n\tprivate readonly _listenerMap = new Map<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>();\n\n\toverride addEventListener<K extends keyof EditContextEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: EditContextEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n\toverride addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\n\t\tif (!listener) { return; }\n\n\t\tconst debugListener = (event: Event) => {\n\t\t\tif (this._isDebugging) {\n\t\t\t\tthis.renderDebug();\n\t\t\t\tconsole.log(`DebugEditContex.on_${type}`, event);\n\t\t\t}\n\t\t\tif (typeof listener === 'function') {\n\t\t\t\tlistener.call(this, event);\n\t\t\t} else if (typeof listener === 'object' && 'handleEvent' in listener) {\n\t\t\t\tlistener.handleEvent(event);\n\t\t\t}\n\t\t};\n\t\tthis._listenerMap.set(listener, debugListener);\n\t\tsuper.addEventListener(type, debugListener, options);\n\t\tthis.renderDebug();\n\t}\n\n\toverride removeEventListener(type: string, listener: EventListenerOrEventListenerObject | null, options?: boolean | EventListenerOptions | undefined): void {\n\t\tif (!listener) { return; }\n\t\tconst debugListener = this._listenerMap.get(listener);\n\t\tif (debugListener) {\n\t\t\tsuper.removeEventListener(type, debugListener, options);\n\t\t\tthis._listenerMap.delete(listener);\n\t\t}\n\t\tthis.renderDebug();\n\t}\n\n\toverride dispatchEvent(event: Event): boolean {\n\t\treturn super.dispatchEvent(event);\n\t}\n\n\tpublic startDebugging() {\n\t\tthis._isDebugging = true;\n\t\tthis.renderDebug();\n\t}\n\n\tpublic endDebugging() {\n\t\tthis._isDebugging = false;\n\t\tthis.renderDebug();\n\t}\n\n\tprivate _disposables: { dispose(): void }[] = [];\n\n\tpublic renderDebug() {\n\t\tthis._disposables.forEach(d => d.dispose());\n\t\tthis._disposables = [];\n\t\tif (!this._isDebugging || this._listenerMap.size === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._controlBounds) {\n\t\t\tthis._disposables.push(createRect(this._controlBounds, COLOR_FOR_CONTROL_BOUNDS));\n\t\t}\n\t\tif (this._selectionBounds) {\n\t\t\tthis._disposables.push(createRect(this._selectionBounds, COLOR_FOR_SELECTION_BOUNDS));\n\t\t}\n\t\tif (this._characterBounds) {\n\t\t\tfor (const rect of this._characterBounds.characterBounds) {\n\t\t\t\tthis._disposables.push(createRect(rect, COLOR_FOR_CHARACTER_BOUNDS));\n\t\t\t}\n\t\t}\n\t\tthis._disposables.push(createDiv(this.text, this.selectionStart, this.selectionEnd));\n\t}\n}\n\nfunction createDiv(text: string, selectionStart: number, selectionEnd: number) {\n\tconst ret = document.createElement('div');\n\tret.className = 'debug-rect-marker';\n\tret.style.position = 'absolute';\n\tret.style.zIndex = '999999999';\n\tret.style.bottom = '50px';\n\tret.style.left = '60px';\n\tret.style.backgroundColor = 'white';\n\tret.style.border = '1px solid black';\n\tret.style.padding = '5px';\n\tret.style.whiteSpace = 'pre';\n\tret.style.font = '12px monospace';\n\tret.style.pointerEvents = 'none';\n\n\tconst before = text.substring(0, selectionStart);\n\tconst selected = text.substring(selectionStart, selectionEnd) || '|';\n\tconst after = text.substring(selectionEnd) + ' ';\n\n\tconst beforeNode = document.createTextNode(before);\n\tret.appendChild(beforeNode);\n\n\tconst selectedNode = document.createElement('span');\n\tselectedNode.style.backgroundColor = 'yellow';\n\tselectedNode.appendChild(document.createTextNode(selected));\n\n\tselectedNode.style.minWidth = '2px';\n\tselectedNode.style.minHeight = '16px';\n\tret.appendChild(selectedNode);\n\n\tconst afterNode = document.createTextNode(after);\n\tret.appendChild(afterNode);\n\n\t// eslint-disable-next-line no-restricted-syntax\n\tdocument.body.appendChild(ret);\n\n\treturn {\n\t\tdispose: () => {\n\t\t\tret.remove();\n\t\t}\n\t};\n}\n\nfunction createRect(rect: DOMRect, color: 'green' | 'blue' | 'red') {\n\tconst ret = document.createElement('div');\n\tret.className = 'debug-rect-marker';\n\tret.style.position = 'absolute';\n\tret.style.zIndex = '999999999';\n\tret.style.outline = `2px solid ${color}`;\n\tret.style.pointerEvents = 'none';\n\n\tret.style.top = rect.top + 'px';\n\tret.style.left = rect.left + 'px';\n\tret.style.width = rect.width + 'px';\n\tret.style.height = rect.height + 'px';\n\n\t// eslint-disable-next-line no-restricted-syntax\n\tdocument.body.appendChild(ret);\n\n\treturn {\n\t\tdispose: () => {\n\t\t\tret.remove();\n\t\t}\n\t};\n}\n\nclass EventListenerWrapper {\n\tprivate _eventHandler: EventHandler | null = null;\n\n\tconstructor(\n\t\tprivate readonly _eventType: string,\n\t\tprivate readonly _target: EventTarget,\n\t) {\n\t}\n\n\tget eventHandler(): EventHandler | null {\n\t\treturn this._eventHandler;\n\t}\n\n\tset eventHandler(value: EventHandler | null) {\n\t\tif (this._eventHandler) {\n\t\t\tthis._target.removeEventListener(this._eventType, this._eventHandler);\n\t\t}\n\t\tthis._eventHandler = value;\n\t\tif (value) {\n\t\t\tthis._target.addEventListener(this._eventType, value);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
