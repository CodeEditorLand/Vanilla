{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/controller/editContext/native/screenReaderSupport.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from '../../../../../base/browser/dom.js';\nimport { FastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { AccessibilitySupport } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { FontInfo } from '../../../../common/config/fontInfo.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { EndOfLinePreference } from '../../../../common/model.js';\nimport { ViewConfigurationChangedEvent, ViewCursorStateChangedEvent } from '../../../../common/viewEvents.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport { applyFontInfo } from '../../../config/domFontInfo.js';\nimport { RestrictedRenderingContext, RenderingContext } from '../../../view/renderingContext.js';\nimport { ariaLabelForScreenReaderContent, ISimpleModel, newlinecount, PagedScreenReaderStrategy, ScreenReaderContentState } from '../screenReaderUtils.js';\n\nexport class ScreenReaderSupport {\n\n\t// Configuration values\n\tprivate _contentLeft: number = 1;\n\tprivate _contentWidth: number = 1;\n\tprivate _lineHeight: number = 1;\n\tprivate _fontInfo: FontInfo | undefined;\n\tprivate _accessibilitySupport: AccessibilitySupport = AccessibilitySupport.Unknown;\n\tprivate _accessibilityPageSize: number = 1;\n\n\tprivate _primarySelection: Selection = new Selection(1, 1, 1, 1);\n\tprivate _screenReaderContentState: ScreenReaderContentState | undefined;\n\n\tconstructor(\n\t\tprivate readonly _domNode: FastDomNode<HTMLElement>,\n\t\tprivate readonly _context: ViewContext,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tthis._updateConfigurationSettings();\n\t\tthis._updateDomAttributes();\n\t}\n\n\tpublic onConfigurationChanged(e: ViewConfigurationChangedEvent): void {\n\t\tthis._updateConfigurationSettings();\n\t\tthis._updateDomAttributes();\n\t\tif (e.hasChanged(EditorOption.accessibilitySupport)) {\n\t\t\tthis.writeScreenReaderContent();\n\t\t}\n\t}\n\n\tprivate _updateConfigurationSettings(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._accessibilitySupport = options.get(EditorOption.accessibilitySupport);\n\t\tthis._accessibilityPageSize = options.get(EditorOption.accessibilityPageSize);\n\t}\n\n\tprivate _updateDomAttributes(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._domNode.domNode.setAttribute('aria-label', ariaLabelForScreenReaderContent(options, this._keybindingService));\n\t\tconst tabSize = this._context.viewModel.model.getOptions().tabSize;\n\t\tconst spaceWidth = options.get(EditorOption.fontInfo).spaceWidth;\n\t\tthis._domNode.domNode.style.tabSize = `${tabSize * spaceWidth}px`;\n\t}\n\n\tpublic onCursorStateChanged(e: ViewCursorStateChangedEvent): void {\n\t\tthis._primarySelection = e.selections[0] ?? new Selection(1, 1, 1, 1);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis.writeScreenReaderContent();\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tif (!this._screenReaderContentState) {\n\t\t\treturn;\n\t\t}\n\t\t// For correct alignment of the screen reader content, we need to apply the correct font\n\t\tapplyFontInfo(this._domNode, this._fontInfo!);\n\n\t\tconst verticalOffsetForPrimaryLineNumber = this._context.viewLayout.getVerticalOffsetForLineNumber(this._primarySelection.positionLineNumber);\n\t\tconst editorScrollTop = this._context.viewLayout.getCurrentScrollTop();\n\t\tconst top = verticalOffsetForPrimaryLineNumber - editorScrollTop;\n\n\t\tthis._domNode.setTop(top);\n\t\tthis._domNode.setLeft(this._contentLeft);\n\t\tthis._domNode.setWidth(this._contentWidth);\n\t\tthis._domNode.setHeight(this._lineHeight);\n\n\t\t// Setting position within the screen reader content by modifying scroll position\n\t\tconst textContentBeforeSelection = this._screenReaderContentState.value.substring(0, this._screenReaderContentState.selectionStart);\n\t\tconst numberOfLinesOfContentBeforeSelection = newlinecount(textContentBeforeSelection);\n\t\tthis._domNode.domNode.scrollTop = numberOfLinesOfContentBeforeSelection * this._lineHeight;\n\t}\n\n\tpublic setAriaOptions(): void { }\n\n\tpublic writeScreenReaderContent(): void {\n\t\tconst focusedElement = getActiveWindow().document.activeElement;\n\t\tif (!focusedElement || focusedElement !== this._domNode.domNode) {\n\t\t\treturn;\n\t\t}\n\t\tthis._screenReaderContentState = this._getScreenReaderContentState();\n\t\tif (!this._screenReaderContentState) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._domNode.domNode.textContent !== this._screenReaderContentState.value) {\n\t\t\tthis._domNode.domNode.textContent = this._screenReaderContentState.value;\n\t\t}\n\t\tthis._setSelectionOfScreenReaderContent(this._screenReaderContentState.selectionStart, this._screenReaderContentState.selectionEnd);\n\t}\n\n\tprivate _getScreenReaderContentState(): ScreenReaderContentState | undefined {\n\t\tif (this._accessibilitySupport === AccessibilitySupport.Disabled) {\n\t\t\treturn;\n\t\t}\n\t\tconst simpleModel: ISimpleModel = {\n\t\t\tgetLineCount: (): number => {\n\t\t\t\treturn this._context.viewModel.getLineCount();\n\t\t\t},\n\t\t\tgetLineMaxColumn: (lineNumber: number): number => {\n\t\t\t\treturn this._context.viewModel.getLineMaxColumn(lineNumber);\n\t\t\t},\n\t\t\tgetValueInRange: (range: Range, eol: EndOfLinePreference): string => {\n\t\t\t\treturn this._context.viewModel.getValueInRange(range, eol);\n\t\t\t},\n\t\t\tgetValueLengthInRange: (range: Range, eol: EndOfLinePreference): number => {\n\t\t\t\treturn this._context.viewModel.getValueLengthInRange(range, eol);\n\t\t\t},\n\t\t\tmodifyPosition: (position: Position, offset: number): Position => {\n\t\t\t\treturn this._context.viewModel.modifyPosition(position, offset);\n\t\t\t}\n\t\t};\n\t\treturn PagedScreenReaderStrategy.fromEditorSelection(simpleModel, this._primarySelection, this._accessibilityPageSize, this._accessibilitySupport === AccessibilitySupport.Unknown);\n\t}\n\n\tprivate _setSelectionOfScreenReaderContent(selectionOffsetStart: number, selectionOffsetEnd: number): void {\n\t\tconst activeDocument = getActiveWindow().document;\n\t\tconst activeDocumentSelection = activeDocument.getSelection();\n\t\tif (!activeDocumentSelection) {\n\t\t\treturn;\n\t\t}\n\t\tconst textContent = this._domNode.domNode.firstChild;\n\t\tif (!textContent) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = new globalThis.Range();\n\t\trange.setStart(textContent, selectionOffsetStart);\n\t\trange.setEnd(textContent, selectionOffsetEnd);\n\t\tactiveDocumentSelection.removeAllRanges();\n\t\tactiveDocumentSelection.addRange(range);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
