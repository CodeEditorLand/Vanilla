import{commonPrefixLength as E,commonSuffixLength as p}from"../../../../../base/common/strings.js";const c=!1;class u{constructor(e,n,i,t,l){this.value=e;this.selectionStart=n;this.selectionEnd=i;this.selection=t;this.newlineCountBeforeSelection=l}static EMPTY=new u("",0,0,null,void 0);toString(){return`[ <${this.value}>, selectionStart: ${this.selectionStart}, selectionEnd: ${this.selectionEnd}]`}static readFromTextArea(e,n){const i=e.getValue(),t=e.getSelectionStart(),l=e.getSelectionEnd();let o;if(n){const r=i.substring(0,t),s=n.value.substring(0,n.selectionStart);r===s&&(o=n.newlineCountBeforeSelection)}return new u(i,t,l,null,o)}collapseSelection(){return this.selectionStart===this.value.length?this:new u(this.value,this.value.length,this.value.length,null,void 0)}writeToTextArea(e,n,i){c&&console.log(`writeToTextArea ${e}: ${this.toString()}`),n.setValue(e,this.value),i&&n.setSelectionRange(e,this.selectionStart,this.selectionEnd)}deduceEditorPosition(e){if(e<=this.selectionStart){const t=this.value.substring(e,this.selectionStart);return this._finishDeduceEditorPosition(this.selection?.getStartPosition()??null,t,-1)}if(e>=this.selectionEnd){const t=this.value.substring(this.selectionEnd,e);return this._finishDeduceEditorPosition(this.selection?.getEndPosition()??null,t,1)}const n=this.value.substring(this.selectionStart,e);if(n.indexOf(String.fromCharCode(8230))===-1)return this._finishDeduceEditorPosition(this.selection?.getStartPosition()??null,n,1);const i=this.value.substring(e,this.selectionEnd);return this._finishDeduceEditorPosition(this.selection?.getEndPosition()??null,i,-1)}_finishDeduceEditorPosition(e,n,i){let t=0,l=-1;for(;(l=n.indexOf(`
`,l+1))!==-1;)t++;return[e,i*n.length,t]}static deduceInput(e,n,i){if(!e)return{text:"",replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:0};c&&(console.log("------------------------deduceInput"),console.log(`PREVIOUS STATE: ${e.toString()}`),console.log(`CURRENT STATE: ${n.toString()}`));const t=Math.min(E(e.value,n.value),e.selectionStart,n.selectionStart),l=Math.min(p(e.value,n.value),e.value.length-e.selectionEnd,n.value.length-n.selectionEnd),o=e.value.substring(t,e.value.length-l),r=n.value.substring(t,n.value.length-l),s=e.selectionStart-t,d=e.selectionEnd-t,a=n.selectionStart-t,h=n.selectionEnd-t;if(c&&(console.log(`AFTER DIFFING PREVIOUS STATE: <${o}>, selectionStart: ${s}, selectionEnd: ${d}`),console.log(`AFTER DIFFING CURRENT STATE: <${r}>, selectionStart: ${a}, selectionEnd: ${h}`)),a===h){const g=e.selectionStart-t;return c&&console.log(`REMOVE PREVIOUS: ${g} chars`),{text:r,replacePrevCharCnt:g,replaceNextCharCnt:0,positionDelta:0}}const b=d-s;return{text:r,replacePrevCharCnt:b,replaceNextCharCnt:0,positionDelta:0}}static deduceAndroidCompositionInput(e,n){if(!e)return{text:"",replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:0};if(c&&(console.log("------------------------deduceAndroidCompositionInput"),console.log(`PREVIOUS STATE: ${e.toString()}`),console.log(`CURRENT STATE: ${n.toString()}`)),e.value===n.value)return{text:"",replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:n.selectionEnd-e.selectionEnd};const i=Math.min(E(e.value,n.value),e.selectionEnd),t=Math.min(p(e.value,n.value),e.value.length-e.selectionEnd),l=e.value.substring(i,e.value.length-t),o=n.value.substring(i,n.value.length-t),r=e.selectionStart-i,s=e.selectionEnd-i,d=n.selectionStart-i,a=n.selectionEnd-i;return c&&(console.log(`AFTER DIFFING PREVIOUS STATE: <${l}>, selectionStart: ${r}, selectionEnd: ${s}`),console.log(`AFTER DIFFING CURRENT STATE: <${o}>, selectionStart: ${d}, selectionEnd: ${a}`)),{text:o,replacePrevCharCnt:s,replaceNextCharCnt:l.length-s,positionDelta:a-o.length}}static fromScreenReaderContentState(e){return new u(e.value,e.selectionStart,e.selectionEnd,e.selection,e.newlineCountBeforeSelection)}}export{u as TextAreaState,c as _debugComposition};
