var V=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var w=(u,h,e,t)=>{for(var n=t>1?void 0:t?I(h,e):h,r=u.length-1,i;r>=0;r--)(i=u[r])&&(n=(t?i(h,e,n):i(n))||n);return t&&n&&V(h,e,n),n},b=(u,h)=>(e,t)=>h(e,t,u);import"./nativeEditContext.css";import{isFirefox as A}from"../../../../../base/browser/browser.js";import{addDisposableListener as C}from"../../../../../base/browser/dom.js";import{FastDomNode as W}from"../../../../../base/browser/fastDomNode.js";import{StandardKeyboardEvent as T}from"../../../../../base/browser/keyboardEvent.js";import{KeyCode as B}from"../../../../../base/common/keyCodes.js";import{IClipboardService as k}from"../../../../../platform/clipboard/common/clipboardService.js";import{IInstantiationService as H}from"../../../../../platform/instantiation/common/instantiation.js";import{EditorOption as l}from"../../../../common/config/editorOptions.js";import{EndOfLinePreference as K}from"../../../../common/model.js";import"../../../../common/viewEvents.js";import"../../../../common/viewModel/viewContext.js";import"../../../view/renderingContext.js";import"../../../view/viewController.js";import{getDataToCopy as U,InMemoryClipboardMetadataManager as G}from"../clipboardUtils.js";import{AbstractEditContext as $}from"../editContextUtils.js";import{editContextAddDisposableListener as S,FocusTracker as j}from"./nativeEditContextUtils.js";import{ScreenReaderSupport as X}from"./screenReaderSupport.js";import{Range as E}from"../../../../common/core/range.js";import{Selection as P}from"../../../../common/core/selection.js";import{Position as O}from"../../../../common/core/position.js";import"../textArea/textAreaEditContext.js";import{PositionOffsetTransformer as Y}from"../../../../common/core/positionToOffset.js";let v=class extends ${constructor(e,t,n,r,i){super(e);this._visibleRangeProvider=n;this.domNode=new W(document.createElement("div")),this.domNode.setClassName("native-edit-context"),this._updateDomAttributes(),this._focusTracker=this._register(new j(this.domNode.domNode,o=>this._context.viewModel.setHasFocus(o))),this._editContext=new EditContext,this.domNode.domNode.editContext=this._editContext,this._screenReaderSupport=r.createInstance(X,this.domNode,e),this._register(C(this.domNode.domNode,"copy",()=>this._ensureClipboardGetsEditorSelection(i))),this._register(C(this.domNode.domNode,"cut",()=>{this._ensureClipboardGetsEditorSelection(i),t.cut()})),this._register(C(this.domNode.domNode,"keyup",o=>t.emitKeyUp(new T(o)))),this._register(C(this.domNode.domNode,"keydown",async o=>{const s=new T(o);s.keyCode===B.KEY_IN_COMPOSITION&&s.stopPropagation(),t.emitKeyDown(s)})),this._register(C(this.domNode.domNode,"beforeinput",async o=>{o.inputType==="insertParagraph"&&this._onType(t,{text:`
`,replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:0})})),this._register(S(this._editContext,"textformatupdate",o=>this._handleTextFormatUpdate(o))),this._register(S(this._editContext,"characterboundsupdate",o=>this._updateCharacterBounds(o))),this._register(S(this._editContext,"textupdate",o=>{this._emitTypeEvent(t,o)})),this._register(S(this._editContext,"compositionstart",o=>{t.compositionStart(),this._context.viewModel.onCompositionStart()})),this._register(S(this._editContext,"compositionend",o=>{t.compositionEnd(),this._context.viewModel.onCompositionEnd()}))}domNode;_editContext;_screenReaderSupport;_parent;_decorations=[];_primarySelection=new P(1,1,1,1);_textStartPositionWithinEditor=new O(1,1);_focusTracker;dispose(){this.domNode.domNode.blur(),this.domNode.domNode.remove(),super.dispose()}appendTo(e){e.appendChild(this.domNode),this._parent=e.domNode}setAriaOptions(){this._screenReaderSupport.setAriaOptions()}getLastRenderData(){return this._primarySelection.getPosition()}prepareRender(e){this._screenReaderSupport.prepareRender(e),this._updateEditContext(),this._updateSelectionAndControlBounds(e)}render(e){this._screenReaderSupport.render(e)}onCursorStateChanged(e){return this._primarySelection=e.modelSelections[0]??new P(1,1,1,1),this._screenReaderSupport.onCursorStateChanged(e),!0}onConfigurationChanged(e){return this._screenReaderSupport.onConfigurationChanged(e),this._updateDomAttributes(),!0}writeScreenReaderContent(){this._screenReaderSupport.writeScreenReaderContent()}isFocused(){return this._focusTracker.isFocused}focus(){this._focusTracker.focus()}refreshFocusState(){}_updateDomAttributes(){const e=this._context.configuration.options;this.domNode.domNode.setAttribute("tabindex",String(e.get(l.tabIndex)))}_updateEditContext(){const e=this._getNewEditContextState();this._editContext.updateText(0,Number.MAX_SAFE_INTEGER,e.text),this._editContext.updateSelection(e.selectionStartOffset,e.selectionEndOffset),this._textStartPositionWithinEditor=e.textStartPositionWithinEditor}_emitTypeEvent(e,t){if(!this._editContext)return;const n=this._context.viewModel.model,r=n.getOffsetAt(this._textStartPositionWithinEditor),i=n.getOffsetAt(this._primarySelection.getEndPosition()),o=n.getOffsetAt(this._primarySelection.getStartPosition()),s=i-r,a=o-r;let d=0,p=0;t.updateRangeEnd>s&&(d=t.updateRangeEnd-s),t.updateRangeStart<a&&(p=a-t.updateRangeStart);let c="";a<t.updateRangeStart&&(c+=this._editContext.text.substring(a,t.updateRangeStart)),c+=t.text,s>t.updateRangeEnd&&(c+=this._editContext.text.substring(t.updateRangeEnd,s));const m={text:c,replacePrevCharCnt:p,replaceNextCharCnt:d,positionDelta:0};this._onType(e,m),this._updateEditContext()}_onType(e,t){t.replacePrevCharCnt||t.replaceNextCharCnt||t.positionDelta?e.compositionType(t.text,t.replacePrevCharCnt,t.replaceNextCharCnt,t.positionDelta):e.type(t.text)}_getNewEditContextState(){const e=this._context.viewModel.model,t=this._primarySelection.startLineNumber,n=this._primarySelection.endLineNumber,r=e.getLineMaxColumn(n),i=new E(t,1,n,r),o=e.getValueInRange(i,K.TextDefined),s=this._primarySelection.startColumn-1,a=o.length+this._primarySelection.endColumn-r,d=i.getStartPosition();return{text:o,selectionStartOffset:s,selectionEndOffset:a,textStartPositionWithinEditor:d}}_handleTextFormatUpdate(e){if(!this._editContext)return;const t=e.getTextFormats(),n=this._textStartPositionWithinEditor,r=[];t.forEach(i=>{const o=this._context.viewModel.model,s=o.getOffsetAt(n),a=o.getPositionAt(s+i.rangeStart),d=o.getPositionAt(s+i.rangeEnd),p=E.fromPositions(a,d),c=["edit-context-format-decoration",`underline-style-${i.underlineStyle.toLowerCase()}`,`underline-thickness-${i.underlineThickness.toLowerCase()}`];r.push({range:p,options:{description:"textFormatDecoration",inlineClassName:c.join(" ")}})}),this._decorations=this._context.viewModel.model.deltaDecorations(this._decorations,r)}_updateSelectionAndControlBounds(e){if(!this._parent)return;const t=this._context.configuration.options,n=t.get(l.lineHeight),r=t.get(l.layoutInfo).contentLeft,i=this._parent.getBoundingClientRect(),o=this._primarySelection.getStartPosition(),s=this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(o),a=this._context.viewLayout.getVerticalOffsetForLineNumber(s.lineNumber),d=this._context.viewLayout.getCurrentScrollTop(),p=this._context.viewLayout.getCurrentScrollLeft(),c=i.top+a-d,m=(this._primarySelection.endLineNumber-this._primarySelection.startLineNumber+1)*n;let x=i.left+r-p,f;if(this._primarySelection.isEmpty()){const _=e.visibleRangeForPosition(s);_&&(x+=_.left),f=0}else f=i.width-r;const g=new DOMRect(x,c,f,m);this._editContext.updateSelectionBounds(g),this._editContext.updateControlBounds(g)}_updateCharacterBounds(e){if(!this._parent)return;const t=this._context.configuration.options,n=t.get(l.fontInfo).typicalHalfwidthCharacterWidth,r=t.get(l.lineHeight),i=t.get(l.layoutInfo).contentLeft,o=this._parent.getBoundingClientRect(),s=[],a=new Y(this._editContext.text);for(let d=e.rangeStart;d<e.rangeEnd;d++){const p=a.getPosition(d),c=this._textStartPositionWithinEditor.lineNumber-1,m=new O(c+p.lineNumber,p.column),x=m.delta(0,1),f=E.fromPositions(m,x),g=this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(f),_=this._visibleRangeProvider.linesVisibleRangesForRange(g,!0)??[],L=this._context.viewLayout.getVerticalOffsetForLineNumber(g.startLineNumber),M=this._context.viewLayout.getCurrentScrollTop(),D=this._context.viewLayout.getCurrentScrollLeft(),F=o.top+L-M;let y=0,R=n;if(_.length>0)for(const N of _[0].ranges){y=N.left,R=N.width;break}s.push(new DOMRect(o.left+i+y-D,F,R,r))}this._editContext.updateCharacterBounds(e.rangeStart,s)}_ensureClipboardGetsEditorSelection(e){const t=this._context.configuration.options,n=t.get(l.emptySelectionClipboard),r=t.get(l.copyWithSyntaxHighlighting),i=this._context.viewModel.getCursorStates().map(a=>a.modelState.selection),o=U(this._context.viewModel,i,n,r),s={version:1,isFromEmptySelection:o.isFromEmptySelection,multicursorText:o.multicursorText,mode:o.mode};G.INSTANCE.set(A?o.text.replace(/\r\n/g,`
`):o.text,s),e.writeText(o.text)}};v=w([b(3,H),b(4,k)],v);export{v as NativeEditContext};
