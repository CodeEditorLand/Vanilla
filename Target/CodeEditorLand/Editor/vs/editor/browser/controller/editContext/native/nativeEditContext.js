var F=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var w=(u,m,e,t)=>{for(var i=t>1?void 0:t?I(m,e):m,r=u.length-1,n;r>=0;r--)(n=u[r])&&(i=(t?n(m,e,i):n(i))||i);return t&&i&&F(m,e,i),i},b=(u,m)=>(e,t)=>m(e,t,u);import"./nativeEditContext.css";import{isFirefox as V}from"../../../../../base/browser/browser.js";import{addDisposableListener as C}from"../../../../../base/browser/dom.js";import{FastDomNode as k}from"../../../../../base/browser/fastDomNode.js";import{StandardKeyboardEvent as P}from"../../../../../base/browser/keyboardEvent.js";import{KeyCode as W}from"../../../../../base/common/keyCodes.js";import{IClipboardService as B}from"../../../../../platform/clipboard/common/clipboardService.js";import{IInstantiationService as H}from"../../../../../platform/instantiation/common/instantiation.js";import{EditorOption as h}from"../../../../common/config/editorOptions.js";import{EndOfLinePreference as K}from"../../../../common/model.js";import"../../../../common/viewEvents.js";import"../../../../common/viewModel/viewContext.js";import"../../../view/renderingContext.js";import"../../../view/viewController.js";import{getDataToCopy as U,InMemoryClipboardMetadataManager as Y}from"../clipboardUtils.js";import{AbstractEditContext as G}from"../editContextUtils.js";import{editContextAddDisposableListener as S,FocusTracker as X}from"./nativeEditContextUtils.js";import{ScreenReaderSupport as j}from"./screenReaderSupport.js";import{Range as E}from"../../../../common/core/range.js";import{Selection as T}from"../../../../common/core/selection.js";import{Position as O}from"../../../../common/core/position.js";import"../textArea/textAreaEditContext.js";import{PositionOffsetTransformer as q}from"../../../../common/core/positionToOffset.js";var z=(t=>(t.NONE="edit-context-composition-none",t.SECONDARY="edit-context-composition-secondary",t.PRIMARY="edit-context-composition-primary",t))(z||{});let v=class extends G{constructor(e,t,i,r,n){super(e);this._visibleRangeProvider=i;this.domNode=new k(document.createElement("div")),this.domNode.setClassName("native-edit-context"),this._updateDomAttributes(),this._focusTracker=this._register(new X(this.domNode.domNode,o=>this._context.viewModel.setHasFocus(o))),this._editContext=new EditContext,this.domNode.domNode.editContext=this._editContext,this._screenReaderSupport=r.createInstance(j,this.domNode,e),this._register(C(this.domNode.domNode,"copy",()=>this._ensureClipboardGetsEditorSelection(n))),this._register(C(this.domNode.domNode,"cut",()=>{this._ensureClipboardGetsEditorSelection(n),t.cut()})),this._register(C(this.domNode.domNode,"keyup",o=>t.emitKeyUp(new P(o)))),this._register(C(this.domNode.domNode,"keydown",async o=>{const s=new P(o);s.keyCode===W.KEY_IN_COMPOSITION&&s.stopPropagation(),t.emitKeyDown(s)})),this._register(C(this.domNode.domNode,"beforeinput",async o=>{o.inputType==="insertParagraph"&&this._onType(t,{text:`
`,replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:0})})),this._register(S(this._editContext,"textformatupdate",o=>this._handleTextFormatUpdate(o))),this._register(S(this._editContext,"characterboundsupdate",o=>this._updateCharacterBounds(o))),this._register(S(this._editContext,"textupdate",o=>{this._emitTypeEvent(t,o)})),this._register(S(this._editContext,"compositionstart",o=>{t.compositionStart(),this._context.viewModel.onCompositionStart()})),this._register(S(this._editContext,"compositionend",o=>{t.compositionEnd(),this._context.viewModel.onCompositionEnd()}))}domNode;_editContext;_screenReaderSupport;_parent;_decorations=[];_primarySelection=new T(1,1,1,1);_textStartPositionWithinEditor=new O(1,1);_focusTracker;dispose(){this.domNode.domNode.blur(),this.domNode.domNode.remove(),super.dispose()}appendTo(e){e.appendChild(this.domNode),this._parent=e.domNode}setAriaOptions(){this._screenReaderSupport.setAriaOptions()}getLastRenderData(){return this._primarySelection.getPosition()}prepareRender(e){this._screenReaderSupport.prepareRender(e),this._updateEditContext(),this._updateSelectionAndControlBounds(e)}render(e){this._screenReaderSupport.render(e)}onCursorStateChanged(e){return this._primarySelection=e.modelSelections[0]??new T(1,1,1,1),this._screenReaderSupport.onCursorStateChanged(e),!0}onConfigurationChanged(e){return this._screenReaderSupport.onConfigurationChanged(e),this._updateDomAttributes(),!0}writeScreenReaderContent(){this._screenReaderSupport.writeScreenReaderContent()}isFocused(){return this._focusTracker.isFocused}focus(){this._focusTracker.focus()}refreshFocusState(){}_updateDomAttributes(){const e=this._context.configuration.options;this.domNode.domNode.setAttribute("tabindex",String(e.get(h.tabIndex)))}_updateEditContext(){const e=this._getNewEditContextState();this._editContext.updateText(0,Number.MAX_SAFE_INTEGER,e.text),this._editContext.updateSelection(e.selectionStartOffset,e.selectionEndOffset),this._textStartPositionWithinEditor=e.textStartPositionWithinEditor}_emitTypeEvent(e,t){if(!this._editContext)return;const i=this._context.viewModel.model,r=i.getOffsetAt(this._textStartPositionWithinEditor),n=i.getOffsetAt(this._primarySelection.getEndPosition()),o=i.getOffsetAt(this._primarySelection.getStartPosition()),s=n-r,a=o-r;let d=0,l=0;t.updateRangeEnd>s&&(d=t.updateRangeEnd-s),t.updateRangeStart<a&&(l=a-t.updateRangeStart);let c="";a<t.updateRangeStart&&(c+=this._editContext.text.substring(a,t.updateRangeStart)),c+=t.text,s>t.updateRangeEnd&&(c+=this._editContext.text.substring(t.updateRangeEnd,s));const p={text:c,replacePrevCharCnt:l,replaceNextCharCnt:d,positionDelta:0};this._onType(e,p),this._updateEditContext()}_onType(e,t){t.replacePrevCharCnt||t.replaceNextCharCnt||t.positionDelta?e.compositionType(t.text,t.replacePrevCharCnt,t.replaceNextCharCnt,t.positionDelta):e.type(t.text)}_getNewEditContextState(){const e=this._context.viewModel.model,t=this._primarySelection.startLineNumber,i=this._primarySelection.endLineNumber,r=e.getLineMaxColumn(i),n=new E(t,1,i,r),o=e.getValueInRange(n,K.TextDefined),s=this._primarySelection.startColumn-1,a=o.length+this._primarySelection.endColumn-r,d=n.getStartPosition();return{text:o,selectionStartOffset:s,selectionEndOffset:a,textStartPositionWithinEditor:d}}_handleTextFormatUpdate(e){if(!this._editContext)return;const t=e.getTextFormats(),i=this._textStartPositionWithinEditor,r=[];t.forEach(n=>{const o=this._context.viewModel.model,s=o.getOffsetAt(i),a=o.getPositionAt(s+n.rangeStart),d=o.getPositionAt(s+n.rangeEnd),l=E.fromPositions(a,d),c=n.underlineThickness.toLowerCase();let p="edit-context-composition-none";switch(c){case"thin":p="edit-context-composition-secondary";break;case"thick":p="edit-context-composition-primary";break}r.push({range:l,options:{description:"textFormatDecoration",inlineClassName:p}})}),this._decorations=this._context.viewModel.model.deltaDecorations(this._decorations,r)}_updateSelectionAndControlBounds(e){if(!this._parent)return;const t=this._context.configuration.options,i=t.get(h.lineHeight),r=t.get(h.layoutInfo).contentLeft,n=this._parent.getBoundingClientRect(),o=this._primarySelection.getStartPosition(),s=this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(o),a=this._context.viewLayout.getVerticalOffsetForLineNumber(s.lineNumber),d=this._context.viewLayout.getCurrentScrollTop(),l=this._context.viewLayout.getCurrentScrollLeft(),c=n.top+a-d,p=(this._primarySelection.endLineNumber-this._primarySelection.startLineNumber+1)*i;let x=n.left+r-l,f;if(this._primarySelection.isEmpty()){const _=e.visibleRangeForPosition(s);_&&(x+=_.left),f=0}else f=n.width-r;const g=new DOMRect(x,c,f,p);this._editContext.updateSelectionBounds(g),this._editContext.updateControlBounds(g)}_updateCharacterBounds(e){if(!this._parent)return;const t=this._context.configuration.options,i=t.get(h.fontInfo).typicalHalfwidthCharacterWidth,r=t.get(h.lineHeight),n=t.get(h.layoutInfo).contentLeft,o=this._parent.getBoundingClientRect(),s=[],a=new q(this._editContext.text);for(let d=e.rangeStart;d<e.rangeEnd;d++){const l=a.getPosition(d),c=this._textStartPositionWithinEditor.lineNumber-1,p=new O(c+l.lineNumber,l.column),x=p.delta(0,1),f=E.fromPositions(p,x),g=this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(f),_=this._visibleRangeProvider.linesVisibleRangesForRange(g,!0)??[],L=this._context.viewLayout.getVerticalOffsetForLineNumber(g.startLineNumber),M=this._context.viewLayout.getCurrentScrollTop(),D=this._context.viewLayout.getCurrentScrollLeft(),A=o.top+L-M;let y=0,R=i;if(_.length>0)for(const N of _[0].ranges){y=N.left,R=N.width;break}s.push(new DOMRect(o.left+n+y-D,A,R,r))}this._editContext.updateCharacterBounds(e.rangeStart,s)}_ensureClipboardGetsEditorSelection(e){const t=this._context.configuration.options,i=t.get(h.emptySelectionClipboard),r=t.get(h.copyWithSyntaxHighlighting),n=this._context.viewModel.getCursorStates().map(a=>a.modelState.selection),o=U(this._context.viewModel,n,i,r),s={version:1,isFromEmptySelection:o.isFromEmptySelection,multicursorText:o.multicursorText,mode:o.mode};Y.INSTANCE.set(V?o.text.replace(/\r\n/g,`
`):o.text,s),e.writeText(o.text)}};v=w([b(3,H),b(4,B)],v);export{v as NativeEditContext};
