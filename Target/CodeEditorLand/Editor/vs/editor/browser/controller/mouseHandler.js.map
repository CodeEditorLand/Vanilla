{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/controller/mouseHandler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../base/browser/dom.js\";\nimport {\n\ttype IMouseWheelEvent,\n\tStandardWheelEvent,\n} from \"../../../base/browser/mouseEvent.js\";\nimport { MouseWheelClassifier } from \"../../../base/browser/ui/scrollbar/scrollableElement.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport * as platform from \"../../../base/common/platform.js\";\nimport { EditorOption } from \"../../common/config/editorOptions.js\";\nimport { EditorZoom } from \"../../common/config/editorZoom.js\";\nimport { Position } from \"../../common/core/position.js\";\nimport { Selection } from \"../../common/core/selection.js\";\nimport { ViewEventHandler } from \"../../common/viewEventHandler.js\";\nimport type * as viewEvents from \"../../common/viewEvents.js\";\nimport type { ViewContext } from \"../../common/viewModel/viewContext.js\";\nimport { NavigationCommandRevealType } from \"../coreCommands.js\";\nimport {\n\ttype IMouseTarget,\n\ttype IMouseTargetOutsideEditor,\n\ttype IMouseTargetViewZoneData,\n\tMouseTargetType,\n} from \"../editorBrowser.js\";\nimport {\n\tClientCoordinates,\n\tEditorMouseEvent,\n\tEditorMouseEventFactory,\n\tGlobalEditorPointerMoveMonitor,\n\tPageCoordinates,\n\tcreateCoordinatesRelativeToEditor,\n\tcreateEditorPagePosition,\n} from \"../editorDom.js\";\nimport type { HorizontalPosition } from \"../view/renderingContext.js\";\nimport type { ViewController } from \"../view/viewController.js\";\nimport {\n\tHitTestContext,\n\tMouseTarget,\n\tMouseTargetFactory,\n\ttype PointerHandlerLastRenderData,\n} from \"./mouseTarget.js\";\n\nexport interface IPointerHandlerHelper {\n\tviewDomNode: HTMLElement;\n\tlinesContentDomNode: HTMLElement;\n\tviewLinesDomNode: HTMLElement;\n\n\tfocusTextArea(): void;\n\tdispatchTextAreaEvent(event: CustomEvent): void;\n\n\t/**\n\t * Get the last rendered information for cursors & textarea.\n\t */\n\tgetLastRenderData(): PointerHandlerLastRenderData;\n\n\t/**\n\t * Render right now\n\t */\n\trenderNow(): void;\n\n\tshouldSuppressMouseDownOnViewZone(viewZoneId: string): boolean;\n\tshouldSuppressMouseDownOnWidget(widgetId: string): boolean;\n\n\t/**\n\t * Decode a position from a rendered dom node\n\t */\n\tgetPositionFromDOMInfo(\n\t\tspanNode: HTMLElement,\n\t\toffset: number,\n\t): Position | null;\n\n\tvisibleRangeForPosition(\n\t\tlineNumber: number,\n\t\tcolumn: number,\n\t): HorizontalPosition | null;\n\tgetLineWidth(lineNumber: number): number;\n}\n\nexport class MouseHandler extends ViewEventHandler {\n\tprotected _context: ViewContext;\n\tprotected viewController: ViewController;\n\tprotected viewHelper: IPointerHandlerHelper;\n\tprotected mouseTargetFactory: MouseTargetFactory;\n\tprotected readonly _mouseDownOperation: MouseDownOperation;\n\tprivate lastMouseLeaveTime: number;\n\tprivate _height: number;\n\tprivate _mouseLeaveMonitor: IDisposable | null = null;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tviewController: ViewController,\n\t\tviewHelper: IPointerHandlerHelper,\n\t) {\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis.viewController = viewController;\n\t\tthis.viewHelper = viewHelper;\n\t\tthis.mouseTargetFactory = new MouseTargetFactory(\n\t\t\tthis._context,\n\t\t\tviewHelper,\n\t\t);\n\n\t\tthis._mouseDownOperation = this._register(\n\t\t\tnew MouseDownOperation(\n\t\t\t\tthis._context,\n\t\t\t\tthis.viewController,\n\t\t\t\tthis.viewHelper,\n\t\t\t\tthis.mouseTargetFactory,\n\t\t\t\t(e, testEventTarget) =>\n\t\t\t\t\tthis._createMouseTarget(e, testEventTarget),\n\t\t\t\t(e) => this._getMouseColumn(e),\n\t\t\t),\n\t\t);\n\n\t\tthis.lastMouseLeaveTime = -1;\n\t\tthis._height = this._context.configuration.options.get(\n\t\t\tEditorOption.layoutInfo,\n\t\t).height;\n\n\t\tconst mouseEvents = new EditorMouseEventFactory(\n\t\t\tthis.viewHelper.viewDomNode,\n\t\t);\n\n\t\tthis._register(\n\t\t\tmouseEvents.onContextMenu(this.viewHelper.viewDomNode, (e) =>\n\t\t\t\tthis._onContextMenu(e, true),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tmouseEvents.onMouseMove(this.viewHelper.viewDomNode, (e) => {\n\t\t\t\tthis._onMouseMove(e);\n\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/138789\n\t\t\t\t// When moving the mouse really quickly, the browser sometimes forgets to\n\t\t\t\t// send us a `mouseleave` or `mouseout` event. We therefore install here\n\t\t\t\t// a global `mousemove` listener to manually recover if the mouse goes outside\n\t\t\t\t// the editor. As soon as the mouse leaves outside of the editor, we\n\t\t\t\t// remove this listener\n\n\t\t\t\tif (!this._mouseLeaveMonitor) {\n\t\t\t\t\tthis._mouseLeaveMonitor = dom.addDisposableListener(\n\t\t\t\t\t\tthis.viewHelper.viewDomNode.ownerDocument,\n\t\t\t\t\t\t\"mousemove\",\n\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!this.viewHelper.viewDomNode.contains(\n\t\t\t\t\t\t\t\t\te.target as Node | null,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// went outside the editor!\n\t\t\t\t\t\t\t\tthis._onMouseLeave(\n\t\t\t\t\t\t\t\t\tnew EditorMouseEvent(\n\t\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\tthis.viewHelper.viewDomNode,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tmouseEvents.onMouseUp(this.viewHelper.viewDomNode, (e) =>\n\t\t\t\tthis._onMouseUp(e),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tmouseEvents.onMouseLeave(this.viewHelper.viewDomNode, (e) =>\n\t\t\t\tthis._onMouseLeave(e),\n\t\t\t),\n\t\t);\n\n\t\t// `pointerdown` events can't be used to determine if there's a double click, or triple click\n\t\t// because their `e.detail` is always 0.\n\t\t// We will therefore save the pointer id for the mouse and then reuse it in the `mousedown` event\n\t\t// for `element.setPointerCapture`.\n\t\tlet capturePointerId = 0;\n\t\tthis._register(\n\t\t\tmouseEvents.onPointerDown(\n\t\t\t\tthis.viewHelper.viewDomNode,\n\t\t\t\t(e, pointerId) => {\n\t\t\t\t\tcapturePointerId = pointerId;\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\t// The `pointerup` listener registered by `GlobalEditorPointerMoveMonitor` does not get invoked 100% of the times.\n\t\t// I speculate that this is because the `pointerup` listener is only registered during the `mousedown` event, and perhaps\n\t\t// the `pointerup` event is already queued for dispatching, which makes it that the new listener doesn't get fired.\n\t\t// See https://github.com/microsoft/vscode/issues/146486 for repro steps.\n\t\t// To compensate for that, we simply register here a `pointerup` listener and just communicate it.\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis.viewHelper.viewDomNode,\n\t\t\t\tdom.EventType.POINTER_UP,\n\t\t\t\t(e: PointerEvent) => {\n\t\t\t\t\tthis._mouseDownOperation.onPointerUp();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tmouseEvents.onMouseDown(this.viewHelper.viewDomNode, (e) =>\n\t\t\t\tthis._onMouseDown(e, capturePointerId),\n\t\t\t),\n\t\t);\n\t\tthis._setupMouseWheelZoomListener();\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tprivate _setupMouseWheelZoomListener(): void {\n\t\tconst classifier = MouseWheelClassifier.INSTANCE;\n\n\t\tlet prevMouseWheelTime = 0;\n\t\tlet gestureStartZoomLevel = EditorZoom.getZoomLevel();\n\t\tlet gestureHasZoomModifiers = false;\n\t\tlet gestureAccumulatedDelta = 0;\n\n\t\tconst onMouseWheel = (browserEvent: IMouseWheelEvent) => {\n\t\t\tthis.viewController.emitMouseWheel(browserEvent);\n\n\t\t\tif (\n\t\t\t\t!this._context.configuration.options.get(\n\t\t\t\t\tEditorOption.mouseWheelZoom,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst e = new StandardWheelEvent(browserEvent);\n\t\t\tclassifier.acceptStandardWheelEvent(e);\n\n\t\t\tif (classifier.isPhysicalMouseWheel()) {\n\t\t\t\tif (hasMouseWheelZoomModifiers(browserEvent)) {\n\t\t\t\t\tconst zoomLevel: number = EditorZoom.getZoomLevel();\n\t\t\t\t\tconst delta = e.deltaY > 0 ? 1 : -1;\n\t\t\t\t\tEditorZoom.setZoomLevel(zoomLevel + delta);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// we consider mousewheel events that occur within 50ms of each other to be part of the same gesture\n\t\t\t\t// we don't want to consider mouse wheel events where ctrl/cmd is pressed during the inertia phase\n\t\t\t\t// we also want to accumulate deltaY values from the same gesture and use that to set the zoom level\n\t\t\t\tif (Date.now() - prevMouseWheelTime > 50) {\n\t\t\t\t\t// reset if more than 50ms have passed\n\t\t\t\t\tgestureStartZoomLevel = EditorZoom.getZoomLevel();\n\t\t\t\t\tgestureHasZoomModifiers =\n\t\t\t\t\t\thasMouseWheelZoomModifiers(browserEvent);\n\t\t\t\t\tgestureAccumulatedDelta = 0;\n\t\t\t\t}\n\n\t\t\t\tprevMouseWheelTime = Date.now();\n\t\t\t\tgestureAccumulatedDelta += e.deltaY;\n\n\t\t\t\tif (gestureHasZoomModifiers) {\n\t\t\t\t\tEditorZoom.setZoomLevel(\n\t\t\t\t\t\tgestureStartZoomLevel + gestureAccumulatedDelta / 5,\n\t\t\t\t\t);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis.viewHelper.viewDomNode,\n\t\t\t\tdom.EventType.MOUSE_WHEEL,\n\t\t\t\tonMouseWheel,\n\t\t\t\t{ capture: true, passive: false },\n\t\t\t),\n\t\t);\n\n\t\tfunction hasMouseWheelZoomModifiers(\n\t\t\tbrowserEvent: IMouseWheelEvent,\n\t\t): boolean {\n\t\t\treturn platform.isMacintosh\n\t\t\t\t? // on macOS we support cmd + two fingers scroll (`metaKey` set)\n\t\t\t\t\t// and also the two fingers pinch gesture (`ctrKey` set)\n\t\t\t\t\t(browserEvent.metaKey || browserEvent.ctrlKey) &&\n\t\t\t\t\t\t!browserEvent.shiftKey &&\n\t\t\t\t\t\t!browserEvent.altKey\n\t\t\t\t: browserEvent.ctrlKey &&\n\t\t\t\t\t\t!browserEvent.metaKey &&\n\t\t\t\t\t\t!browserEvent.shiftKey &&\n\t\t\t\t\t\t!browserEvent.altKey;\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tif (this._mouseLeaveMonitor) {\n\t\t\tthis._mouseLeaveMonitor.dispose();\n\t\t\tthis._mouseLeaveMonitor = null;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\tpublic override onConfigurationChanged(\n\t\te: viewEvents.ViewConfigurationChangedEvent,\n\t): boolean {\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\t// layout change\n\t\t\tconst height = this._context.configuration.options.get(\n\t\t\t\tEditorOption.layoutInfo,\n\t\t\t).height;\n\t\t\tif (this._height !== height) {\n\t\t\t\tthis._height = height;\n\t\t\t\tthis._mouseDownOperation.onHeightChanged();\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onCursorStateChanged(\n\t\te: viewEvents.ViewCursorStateChangedEvent,\n\t): boolean {\n\t\tthis._mouseDownOperation.onCursorStateChanged(e);\n\t\treturn false;\n\t}\n\tpublic override onFocusChanged(\n\t\te: viewEvents.ViewFocusChangedEvent,\n\t): boolean {\n\t\treturn false;\n\t}\n\t// --- end event handlers\n\n\tpublic getTargetAtClientPoint(\n\t\tclientX: number,\n\t\tclientY: number,\n\t): IMouseTarget | null {\n\t\tconst clientPos = new ClientCoordinates(clientX, clientY);\n\t\tconst pos = clientPos.toPageCoordinates(\n\t\t\tdom.getWindow(this.viewHelper.viewDomNode),\n\t\t);\n\t\tconst editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n\n\t\tif (\n\t\t\tpos.y < editorPos.y ||\n\t\t\tpos.y > editorPos.y + editorPos.height ||\n\t\t\tpos.x < editorPos.x ||\n\t\t\tpos.x > editorPos.x + editorPos.width\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst relativePos = createCoordinatesRelativeToEditor(\n\t\t\tthis.viewHelper.viewDomNode,\n\t\t\teditorPos,\n\t\t\tpos,\n\t\t);\n\t\treturn this.mouseTargetFactory.createMouseTarget(\n\t\t\tthis.viewHelper.getLastRenderData(),\n\t\t\teditorPos,\n\t\t\tpos,\n\t\t\trelativePos,\n\t\t\tnull,\n\t\t);\n\t}\n\n\tprotected _createMouseTarget(\n\t\te: EditorMouseEvent,\n\t\ttestEventTarget: boolean,\n\t): IMouseTarget {\n\t\tlet target = e.target;\n\t\tif (!this.viewHelper.viewDomNode.contains(target)) {\n\t\t\tconst shadowRoot = dom.getShadowRoot(this.viewHelper.viewDomNode);\n\t\t\tif (shadowRoot) {\n\t\t\t\ttarget = (<any>shadowRoot)\n\t\t\t\t\t.elementsFromPoint(e.posx, e.posy)\n\t\t\t\t\t.find((el: Element) =>\n\t\t\t\t\t\tthis.viewHelper.viewDomNode.contains(el),\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn this.mouseTargetFactory.createMouseTarget(\n\t\t\tthis.viewHelper.getLastRenderData(),\n\t\t\te.editorPos,\n\t\t\te.pos,\n\t\t\te.relativePos,\n\t\t\ttestEventTarget ? target : null,\n\t\t);\n\t}\n\n\tprivate _getMouseColumn(e: EditorMouseEvent): number {\n\t\treturn this.mouseTargetFactory.getMouseColumn(e.relativePos);\n\t}\n\n\tprotected _onContextMenu(\n\t\te: EditorMouseEvent,\n\t\ttestEventTarget: boolean,\n\t): void {\n\t\tthis.viewController.emitContextMenu({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, testEventTarget),\n\t\t});\n\t}\n\n\tprotected _onMouseMove(e: EditorMouseEvent): void {\n\t\tconst targetIsWidget = this.mouseTargetFactory.mouseTargetIsWidget(e);\n\t\tif (!targetIsWidget) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (this._mouseDownOperation.isActive()) {\n\t\t\t// In selection/drag operation\n\t\t\treturn;\n\t\t}\n\t\tconst actualMouseMoveTime = e.timestamp;\n\t\tif (actualMouseMoveTime < this.lastMouseLeaveTime) {\n\t\t\t// Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.viewController.emitMouseMove({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, true),\n\t\t});\n\t}\n\n\tprotected _onMouseLeave(e: EditorMouseEvent): void {\n\t\tif (this._mouseLeaveMonitor) {\n\t\t\tthis._mouseLeaveMonitor.dispose();\n\t\t\tthis._mouseLeaveMonitor = null;\n\t\t}\n\t\tthis.lastMouseLeaveTime = new Date().getTime();\n\t\tthis.viewController.emitMouseLeave({\n\t\t\tevent: e,\n\t\t\ttarget: null,\n\t\t});\n\t}\n\n\tprotected _onMouseUp(e: EditorMouseEvent): void {\n\t\tthis.viewController.emitMouseUp({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, true),\n\t\t});\n\t}\n\n\tprotected _onMouseDown(e: EditorMouseEvent, pointerId: number): void {\n\t\tconst t = this._createMouseTarget(e, true);\n\n\t\tconst targetIsContent =\n\t\t\tt.type === MouseTargetType.CONTENT_TEXT ||\n\t\t\tt.type === MouseTargetType.CONTENT_EMPTY;\n\t\tconst targetIsGutter =\n\t\t\tt.type === MouseTargetType.GUTTER_GLYPH_MARGIN ||\n\t\t\tt.type === MouseTargetType.GUTTER_LINE_NUMBERS ||\n\t\t\tt.type === MouseTargetType.GUTTER_LINE_DECORATIONS;\n\t\tconst targetIsLineNumbers =\n\t\t\tt.type === MouseTargetType.GUTTER_LINE_NUMBERS;\n\t\tconst selectOnLineNumbers = this._context.configuration.options.get(\n\t\t\tEditorOption.selectOnLineNumbers,\n\t\t);\n\t\tconst targetIsViewZone =\n\t\t\tt.type === MouseTargetType.CONTENT_VIEW_ZONE ||\n\t\t\tt.type === MouseTargetType.GUTTER_VIEW_ZONE;\n\t\tconst targetIsWidget = t.type === MouseTargetType.CONTENT_WIDGET;\n\n\t\tlet shouldHandle = e.leftButton || e.middleButton;\n\t\tif (platform.isMacintosh && e.leftButton && e.ctrlKey) {\n\t\t\tshouldHandle = false;\n\t\t}\n\n\t\tconst focus = () => {\n\t\t\te.preventDefault();\n\t\t\tthis.viewHelper.focusTextArea();\n\t\t};\n\n\t\tif (\n\t\t\tshouldHandle &&\n\t\t\t(targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))\n\t\t) {\n\t\t\tfocus();\n\t\t\tthis._mouseDownOperation.start(t.type, e, pointerId);\n\t\t} else if (targetIsGutter) {\n\t\t\t// Do not steal focus\n\t\t\te.preventDefault();\n\t\t} else if (targetIsViewZone) {\n\t\t\tconst viewZoneData = t.detail;\n\t\t\tif (\n\t\t\t\tshouldHandle &&\n\t\t\t\tthis.viewHelper.shouldSuppressMouseDownOnViewZone(\n\t\t\t\t\tviewZoneData.viewZoneId,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tfocus();\n\t\t\t\tthis._mouseDownOperation.start(t.type, e, pointerId);\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t} else if (\n\t\t\ttargetIsWidget &&\n\t\t\tthis.viewHelper.shouldSuppressMouseDownOnWidget(<string>t.detail)\n\t\t) {\n\t\t\tfocus();\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tthis.viewController.emitMouseDown({\n\t\t\tevent: e,\n\t\t\ttarget: t,\n\t\t});\n\t}\n\n\tprotected _onMouseWheel(e: IMouseWheelEvent): void {\n\t\tthis.viewController.emitMouseWheel(e);\n\t}\n}\n\nclass MouseDownOperation extends Disposable {\n\tprivate readonly _createMouseTarget: (\n\t\te: EditorMouseEvent,\n\t\ttestEventTarget: boolean,\n\t) => IMouseTarget;\n\tprivate readonly _getMouseColumn: (e: EditorMouseEvent) => number;\n\n\tprivate readonly _mouseMoveMonitor: GlobalEditorPointerMoveMonitor;\n\tprivate readonly _topBottomDragScrolling: TopBottomDragScrolling;\n\tprivate readonly _mouseState: MouseDownState;\n\n\tprivate _currentSelection: Selection;\n\tprivate _isActive: boolean;\n\tprivate _lastMouseEvent: EditorMouseEvent | null;\n\n\tconstructor(\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewController: ViewController,\n\t\tprivate readonly _viewHelper: IPointerHandlerHelper,\n\t\tprivate readonly _mouseTargetFactory: MouseTargetFactory,\n\t\tcreateMouseTarget: (\n\t\t\te: EditorMouseEvent,\n\t\t\ttestEventTarget: boolean,\n\t\t) => IMouseTarget,\n\t\tgetMouseColumn: (e: EditorMouseEvent) => number,\n\t) {\n\t\tsuper();\n\t\tthis._createMouseTarget = createMouseTarget;\n\t\tthis._getMouseColumn = getMouseColumn;\n\n\t\tthis._mouseMoveMonitor = this._register(\n\t\t\tnew GlobalEditorPointerMoveMonitor(this._viewHelper.viewDomNode),\n\t\t);\n\t\tthis._topBottomDragScrolling = this._register(\n\t\t\tnew TopBottomDragScrolling(\n\t\t\t\tthis._context,\n\t\t\t\tthis._viewHelper,\n\t\t\t\tthis._mouseTargetFactory,\n\t\t\t\t(position, inSelectionMode, revealType) =>\n\t\t\t\t\tthis._dispatchMouse(position, inSelectionMode, revealType),\n\t\t\t),\n\t\t);\n\t\tthis._mouseState = new MouseDownState();\n\n\t\tthis._currentSelection = new Selection(1, 1, 1, 1);\n\t\tthis._isActive = false;\n\t\tthis._lastMouseEvent = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic isActive(): boolean {\n\t\treturn this._isActive;\n\t}\n\n\tprivate _onMouseDownThenMove(e: EditorMouseEvent): void {\n\t\tthis._lastMouseEvent = e;\n\t\tthis._mouseState.setModifiers(e);\n\n\t\tconst position = this._findMousePosition(e, false);\n\t\tif (!position) {\n\t\t\t// Ignoring because position is unknown\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._mouseState.isDragAndDrop) {\n\t\t\tthis._viewController.emitMouseDrag({\n\t\t\t\tevent: e,\n\t\t\t\ttarget: position,\n\t\t\t});\n\t\t} else if (\n\t\t\tposition.type === MouseTargetType.OUTSIDE_EDITOR &&\n\t\t\t(position.outsidePosition === \"above\" ||\n\t\t\t\tposition.outsidePosition === \"below\")\n\t\t) {\n\t\t\tthis._topBottomDragScrolling.start(position, e);\n\t\t} else {\n\t\t\tthis._topBottomDragScrolling.stop();\n\t\t\tthis._dispatchMouse(\n\t\t\t\tposition,\n\t\t\t\ttrue,\n\t\t\t\tNavigationCommandRevealType.Minimal,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic start(\n\t\ttargetType: MouseTargetType,\n\t\te: EditorMouseEvent,\n\t\tpointerId: number,\n\t): void {\n\t\tthis._lastMouseEvent = e;\n\n\t\tthis._mouseState.setStartedOnLineNumbers(\n\t\t\ttargetType === MouseTargetType.GUTTER_LINE_NUMBERS,\n\t\t);\n\t\tthis._mouseState.setStartButtons(e);\n\t\tthis._mouseState.setModifiers(e);\n\t\tconst position = this._findMousePosition(e, true);\n\t\tif (!position || !position.position) {\n\t\t\t// Ignoring because position is unknown\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseState.trySetCount(e.detail, position.position);\n\n\t\t// Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n\t\te.detail = this._mouseState.count;\n\n\t\tconst options = this._context.configuration.options;\n\n\t\tif (\n\t\t\t!options.get(EditorOption.readOnly) &&\n\t\t\toptions.get(EditorOption.dragAndDrop) &&\n\t\t\t!options.get(EditorOption.columnSelection) &&\n\t\t\t!this._mouseState.altKey && // we don't support multiple mouse\n\t\t\te.detail < 2 && // only single click on a selection can work\n\t\t\t!this._isActive && // the mouse is not down yet\n\t\t\t!this._currentSelection.isEmpty() && // we don't drag single cursor\n\t\t\tposition.type === MouseTargetType.CONTENT_TEXT && // single click on text\n\t\t\tposition.position &&\n\t\t\tthis._currentSelection.containsPosition(position.position) // single click on a selection\n\t\t) {\n\t\t\tthis._mouseState.isDragAndDrop = true;\n\t\t\tthis._isActive = true;\n\n\t\t\tthis._mouseMoveMonitor.startMonitoring(\n\t\t\t\tthis._viewHelper.viewLinesDomNode,\n\t\t\t\tpointerId,\n\t\t\t\te.buttons,\n\t\t\t\t(e) => this._onMouseDownThenMove(e),\n\t\t\t\t(browserEvent?: MouseEvent | KeyboardEvent) => {\n\t\t\t\t\tconst position = this._findMousePosition(\n\t\t\t\t\t\tthis._lastMouseEvent!,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (dom.isKeyboardEvent(browserEvent)) {\n\t\t\t\t\t\t// cancel\n\t\t\t\t\t\tthis._viewController.emitMouseDropCanceled();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._viewController.emitMouseDrop({\n\t\t\t\t\t\t\tevent: this._lastMouseEvent!,\n\t\t\t\t\t\t\ttarget: position\n\t\t\t\t\t\t\t\t? this._createMouseTarget(\n\t\t\t\t\t\t\t\t\t\tthis._lastMouseEvent!,\n\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: null, // Ignoring because position is unknown, e.g., Content View Zone\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._stop();\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseState.isDragAndDrop = false;\n\t\tthis._dispatchMouse(\n\t\t\tposition,\n\t\t\te.shiftKey,\n\t\t\tNavigationCommandRevealType.Minimal,\n\t\t);\n\n\t\tif (!this._isActive) {\n\t\t\tthis._isActive = true;\n\t\t\tthis._mouseMoveMonitor.startMonitoring(\n\t\t\t\tthis._viewHelper.viewLinesDomNode,\n\t\t\t\tpointerId,\n\t\t\t\te.buttons,\n\t\t\t\t(e) => this._onMouseDownThenMove(e),\n\t\t\t\t() => this._stop(),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _stop(): void {\n\t\tthis._isActive = false;\n\t\tthis._topBottomDragScrolling.stop();\n\t}\n\n\tpublic onHeightChanged(): void {\n\t\tthis._mouseMoveMonitor.stopMonitoring();\n\t}\n\n\tpublic onPointerUp(): void {\n\t\tthis._mouseMoveMonitor.stopMonitoring();\n\t}\n\n\tpublic onCursorStateChanged(\n\t\te: viewEvents.ViewCursorStateChangedEvent,\n\t): void {\n\t\tthis._currentSelection = e.selections[0];\n\t}\n\n\tprivate _getPositionOutsideEditor(\n\t\te: EditorMouseEvent,\n\t): IMouseTarget | null {\n\t\tconst editorContent = e.editorPos;\n\t\tconst model = this._context.viewModel;\n\t\tconst viewLayout = this._context.viewLayout;\n\n\t\tconst mouseColumn = this._getMouseColumn(e);\n\n\t\tif (e.posy < editorContent.y) {\n\t\t\tconst outsideDistance = editorContent.y - e.posy;\n\t\t\tconst verticalOffset = Math.max(\n\t\t\t\tviewLayout.getCurrentScrollTop() - outsideDistance,\n\t\t\t\t0,\n\t\t\t);\n\t\t\tconst viewZoneData = HitTestContext.getZoneAtCoord(\n\t\t\t\tthis._context,\n\t\t\t\tverticalOffset,\n\t\t\t);\n\t\t\tif (viewZoneData) {\n\t\t\t\tconst newPosition =\n\t\t\t\t\tthis._helpPositionJumpOverViewZone(viewZoneData);\n\t\t\t\tif (newPosition) {\n\t\t\t\t\treturn MouseTarget.createOutsideEditor(\n\t\t\t\t\t\tmouseColumn,\n\t\t\t\t\t\tnewPosition,\n\t\t\t\t\t\t\"above\",\n\t\t\t\t\t\toutsideDistance,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst aboveLineNumber =\n\t\t\t\tviewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n\t\t\treturn MouseTarget.createOutsideEditor(\n\t\t\t\tmouseColumn,\n\t\t\t\tnew Position(aboveLineNumber, 1),\n\t\t\t\t\"above\",\n\t\t\t\toutsideDistance,\n\t\t\t);\n\t\t}\n\n\t\tif (e.posy > editorContent.y + editorContent.height) {\n\t\t\tconst outsideDistance =\n\t\t\t\te.posy - editorContent.y - editorContent.height;\n\t\t\tconst verticalOffset =\n\t\t\t\tviewLayout.getCurrentScrollTop() + e.relativePos.y;\n\t\t\tconst viewZoneData = HitTestContext.getZoneAtCoord(\n\t\t\t\tthis._context,\n\t\t\t\tverticalOffset,\n\t\t\t);\n\t\t\tif (viewZoneData) {\n\t\t\t\tconst newPosition =\n\t\t\t\t\tthis._helpPositionJumpOverViewZone(viewZoneData);\n\t\t\t\tif (newPosition) {\n\t\t\t\t\treturn MouseTarget.createOutsideEditor(\n\t\t\t\t\t\tmouseColumn,\n\t\t\t\t\t\tnewPosition,\n\t\t\t\t\t\t\"below\",\n\t\t\t\t\t\toutsideDistance,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst belowLineNumber =\n\t\t\t\tviewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n\t\t\treturn MouseTarget.createOutsideEditor(\n\t\t\t\tmouseColumn,\n\t\t\t\tnew Position(\n\t\t\t\t\tbelowLineNumber,\n\t\t\t\t\tmodel.getLineMaxColumn(belowLineNumber),\n\t\t\t\t),\n\t\t\t\t\"below\",\n\t\t\t\toutsideDistance,\n\t\t\t);\n\t\t}\n\n\t\tconst possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(\n\t\t\tviewLayout.getCurrentScrollTop() + e.relativePos.y,\n\t\t);\n\n\t\tif (e.posx < editorContent.x) {\n\t\t\tconst outsideDistance = editorContent.x - e.posx;\n\t\t\treturn MouseTarget.createOutsideEditor(\n\t\t\t\tmouseColumn,\n\t\t\t\tnew Position(possibleLineNumber, 1),\n\t\t\t\t\"left\",\n\t\t\t\toutsideDistance,\n\t\t\t);\n\t\t}\n\n\t\tif (e.posx > editorContent.x + editorContent.width) {\n\t\t\tconst outsideDistance =\n\t\t\t\te.posx - editorContent.x - editorContent.width;\n\t\t\treturn MouseTarget.createOutsideEditor(\n\t\t\t\tmouseColumn,\n\t\t\t\tnew Position(\n\t\t\t\t\tpossibleLineNumber,\n\t\t\t\t\tmodel.getLineMaxColumn(possibleLineNumber),\n\t\t\t\t),\n\t\t\t\t\"right\",\n\t\t\t\toutsideDistance,\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findMousePosition(\n\t\te: EditorMouseEvent,\n\t\ttestEventTarget: boolean,\n\t): IMouseTarget | null {\n\t\tconst positionOutsideEditor = this._getPositionOutsideEditor(e);\n\t\tif (positionOutsideEditor) {\n\t\t\treturn positionOutsideEditor;\n\t\t}\n\n\t\tconst t = this._createMouseTarget(e, testEventTarget);\n\t\tconst hintedPosition = t.position;\n\t\tif (!hintedPosition) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (\n\t\t\tt.type === MouseTargetType.CONTENT_VIEW_ZONE ||\n\t\t\tt.type === MouseTargetType.GUTTER_VIEW_ZONE\n\t\t) {\n\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(t.detail);\n\t\t\tif (newPosition) {\n\t\t\t\treturn MouseTarget.createViewZone(\n\t\t\t\t\tt.type,\n\t\t\t\t\tt.element,\n\t\t\t\t\tt.mouseColumn,\n\t\t\t\t\tnewPosition,\n\t\t\t\t\tt.detail,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn t;\n\t}\n\n\tprivate _helpPositionJumpOverViewZone(\n\t\tviewZoneData: IMouseTargetViewZoneData,\n\t): Position | null {\n\t\t// Force position on view zones to go above or below depending on where selection started from\n\t\tconst selectionStart = new Position(\n\t\t\tthis._currentSelection.selectionStartLineNumber,\n\t\t\tthis._currentSelection.selectionStartColumn,\n\t\t);\n\t\tconst positionBefore = viewZoneData.positionBefore;\n\t\tconst positionAfter = viewZoneData.positionAfter;\n\n\t\tif (positionBefore && positionAfter) {\n\t\t\tif (positionBefore.isBefore(selectionStart)) {\n\t\t\t\treturn positionBefore;\n\t\t\t} else {\n\t\t\t\treturn positionAfter;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _dispatchMouse(\n\t\tposition: IMouseTarget,\n\t\tinSelectionMode: boolean,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tif (!position.position) {\n\t\t\treturn;\n\t\t}\n\t\tthis._viewController.dispatchMouse({\n\t\t\tposition: position.position,\n\t\t\tmouseColumn: position.mouseColumn,\n\t\t\tstartedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n\t\t\trevealType,\n\n\t\t\tinSelectionMode: inSelectionMode,\n\t\t\tmouseDownCount: this._mouseState.count,\n\t\t\taltKey: this._mouseState.altKey,\n\t\t\tctrlKey: this._mouseState.ctrlKey,\n\t\t\tmetaKey: this._mouseState.metaKey,\n\t\t\tshiftKey: this._mouseState.shiftKey,\n\n\t\t\tleftButton: this._mouseState.leftButton,\n\t\t\tmiddleButton: this._mouseState.middleButton,\n\n\t\t\tonInjectedText:\n\t\t\t\tposition.type === MouseTargetType.CONTENT_TEXT &&\n\t\t\t\tposition.detail.injectedText !== null,\n\t\t});\n\t}\n}\n\nclass TopBottomDragScrolling extends Disposable {\n\tprivate _operation: TopBottomDragScrollingOperation | null;\n\n\tconstructor(\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewHelper: IPointerHandlerHelper,\n\t\tprivate readonly _mouseTargetFactory: MouseTargetFactory,\n\t\tprivate readonly _dispatchMouse: (\n\t\t\tposition: IMouseTarget,\n\t\t\tinSelectionMode: boolean,\n\t\t\trevealType: NavigationCommandRevealType,\n\t\t) => void,\n\t) {\n\t\tsuper();\n\t\tthis._operation = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.stop();\n\t}\n\n\tpublic start(\n\t\tposition: IMouseTargetOutsideEditor,\n\t\tmouseEvent: EditorMouseEvent,\n\t): void {\n\t\tif (this._operation) {\n\t\t\tthis._operation.setPosition(position, mouseEvent);\n\t\t} else {\n\t\t\tthis._operation = new TopBottomDragScrollingOperation(\n\t\t\t\tthis._context,\n\t\t\t\tthis._viewHelper,\n\t\t\t\tthis._mouseTargetFactory,\n\t\t\t\tthis._dispatchMouse,\n\t\t\t\tposition,\n\t\t\t\tmouseEvent,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic stop(): void {\n\t\tif (this._operation) {\n\t\t\tthis._operation.dispose();\n\t\t\tthis._operation = null;\n\t\t}\n\t}\n}\n\nclass TopBottomDragScrollingOperation extends Disposable {\n\tprivate _position: IMouseTargetOutsideEditor;\n\tprivate _mouseEvent: EditorMouseEvent;\n\tprivate _lastTime: number;\n\tprivate _animationFrameDisposable: IDisposable;\n\n\tconstructor(\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewHelper: IPointerHandlerHelper,\n\t\tprivate readonly _mouseTargetFactory: MouseTargetFactory,\n\t\tprivate readonly _dispatchMouse: (\n\t\t\tposition: IMouseTarget,\n\t\t\tinSelectionMode: boolean,\n\t\t\trevealType: NavigationCommandRevealType,\n\t\t) => void,\n\t\tposition: IMouseTargetOutsideEditor,\n\t\tmouseEvent: EditorMouseEvent,\n\t) {\n\t\tsuper();\n\t\tthis._position = position;\n\t\tthis._mouseEvent = mouseEvent;\n\t\tthis._lastTime = Date.now();\n\t\tthis._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(\n\t\t\tdom.getWindow(mouseEvent.browserEvent),\n\t\t\t() => this._execute(),\n\t\t);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._animationFrameDisposable.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tpublic setPosition(\n\t\tposition: IMouseTargetOutsideEditor,\n\t\tmouseEvent: EditorMouseEvent,\n\t): void {\n\t\tthis._position = position;\n\t\tthis._mouseEvent = mouseEvent;\n\t}\n\n\t/**\n\t * update internal state and return elapsed ms since last time\n\t */\n\tprivate _tick(): number {\n\t\tconst now = Date.now();\n\t\tconst elapsed = now - this._lastTime;\n\t\tthis._lastTime = now;\n\t\treturn elapsed;\n\t}\n\n\t/**\n\t * get the number of lines per second to auto-scroll\n\t */\n\tprivate _getScrollSpeed(): number {\n\t\tconst lineHeight = this._context.configuration.options.get(\n\t\t\tEditorOption.lineHeight,\n\t\t);\n\t\tconst viewportInLines =\n\t\t\tthis._context.configuration.options.get(EditorOption.layoutInfo)\n\t\t\t\t.height / lineHeight;\n\t\tconst outsideDistanceInLines =\n\t\t\tthis._position.outsideDistance / lineHeight;\n\n\t\tif (outsideDistanceInLines <= 1.5) {\n\t\t\treturn Math.max(30, viewportInLines * (1 + outsideDistanceInLines));\n\t\t}\n\t\tif (outsideDistanceInLines <= 3) {\n\t\t\treturn Math.max(60, viewportInLines * (2 + outsideDistanceInLines));\n\t\t}\n\t\treturn Math.max(200, viewportInLines * (7 + outsideDistanceInLines));\n\t}\n\n\tprivate _execute(): void {\n\t\tconst lineHeight = this._context.configuration.options.get(\n\t\t\tEditorOption.lineHeight,\n\t\t);\n\t\tconst scrollSpeedInLines = this._getScrollSpeed();\n\t\tconst elapsed = this._tick();\n\t\tconst scrollInPixels =\n\t\t\tscrollSpeedInLines * (elapsed / 1000) * lineHeight;\n\t\tconst scrollValue =\n\t\t\tthis._position.outsidePosition === \"above\"\n\t\t\t\t? -scrollInPixels\n\t\t\t\t: scrollInPixels;\n\n\t\tthis._context.viewModel.viewLayout.deltaScrollNow(0, scrollValue);\n\t\tthis._viewHelper.renderNow();\n\n\t\tconst viewportData = this._context.viewLayout.getLinesViewportData();\n\t\tconst edgeLineNumber =\n\t\t\tthis._position.outsidePosition === \"above\"\n\t\t\t\t? viewportData.startLineNumber\n\t\t\t\t: viewportData.endLineNumber;\n\n\t\t// First, try to find a position that matches the horizontal position of the mouse\n\t\tlet mouseTarget: IMouseTarget;\n\t\t{\n\t\t\tconst editorPos = createEditorPagePosition(\n\t\t\t\tthis._viewHelper.viewDomNode,\n\t\t\t);\n\t\t\tconst horizontalScrollbarHeight =\n\t\t\t\tthis._context.configuration.options.get(\n\t\t\t\t\tEditorOption.layoutInfo,\n\t\t\t\t).horizontalScrollbarHeight;\n\t\t\tconst pos = new PageCoordinates(\n\t\t\t\tthis._mouseEvent.pos.x,\n\t\t\t\teditorPos.y +\n\t\t\t\t\teditorPos.height -\n\t\t\t\t\thorizontalScrollbarHeight -\n\t\t\t\t\t0.1,\n\t\t\t);\n\t\t\tconst relativePos = createCoordinatesRelativeToEditor(\n\t\t\t\tthis._viewHelper.viewDomNode,\n\t\t\t\teditorPos,\n\t\t\t\tpos,\n\t\t\t);\n\t\t\tmouseTarget = this._mouseTargetFactory.createMouseTarget(\n\t\t\t\tthis._viewHelper.getLastRenderData(),\n\t\t\t\teditorPos,\n\t\t\t\tpos,\n\t\t\t\trelativePos,\n\t\t\t\tnull,\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\t!mouseTarget.position ||\n\t\t\tmouseTarget.position.lineNumber !== edgeLineNumber\n\t\t) {\n\t\t\tif (this._position.outsidePosition === \"above\") {\n\t\t\t\tmouseTarget = MouseTarget.createOutsideEditor(\n\t\t\t\t\tthis._position.mouseColumn,\n\t\t\t\t\tnew Position(edgeLineNumber, 1),\n\t\t\t\t\t\"above\",\n\t\t\t\t\tthis._position.outsideDistance,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmouseTarget = MouseTarget.createOutsideEditor(\n\t\t\t\t\tthis._position.mouseColumn,\n\t\t\t\t\tnew Position(\n\t\t\t\t\t\tedgeLineNumber,\n\t\t\t\t\t\tthis._context.viewModel.getLineMaxColumn(\n\t\t\t\t\t\t\tedgeLineNumber,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t\"below\",\n\t\t\t\t\tthis._position.outsideDistance,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._dispatchMouse(\n\t\t\tmouseTarget,\n\t\t\ttrue,\n\t\t\tNavigationCommandRevealType.None,\n\t\t);\n\t\tthis._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(\n\t\t\tdom.getWindow(mouseTarget.element),\n\t\t\t() => this._execute(),\n\t\t);\n\t}\n}\n\nclass MouseDownState {\n\tprivate static readonly CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms\n\n\tprivate _altKey: boolean;\n\tpublic get altKey(): boolean {\n\t\treturn this._altKey;\n\t}\n\n\tprivate _ctrlKey: boolean;\n\tpublic get ctrlKey(): boolean {\n\t\treturn this._ctrlKey;\n\t}\n\n\tprivate _metaKey: boolean;\n\tpublic get metaKey(): boolean {\n\t\treturn this._metaKey;\n\t}\n\n\tprivate _shiftKey: boolean;\n\tpublic get shiftKey(): boolean {\n\t\treturn this._shiftKey;\n\t}\n\n\tprivate _leftButton: boolean;\n\tpublic get leftButton(): boolean {\n\t\treturn this._leftButton;\n\t}\n\n\tprivate _middleButton: boolean;\n\tpublic get middleButton(): boolean {\n\t\treturn this._middleButton;\n\t}\n\n\tprivate _startedOnLineNumbers: boolean;\n\tpublic get startedOnLineNumbers(): boolean {\n\t\treturn this._startedOnLineNumbers;\n\t}\n\n\tprivate _lastMouseDownPosition: Position | null;\n\tprivate _lastMouseDownPositionEqualCount: number;\n\tprivate _lastMouseDownCount: number;\n\tprivate _lastSetMouseDownCountTime: number;\n\tpublic isDragAndDrop: boolean;\n\n\tconstructor() {\n\t\tthis._altKey = false;\n\t\tthis._ctrlKey = false;\n\t\tthis._metaKey = false;\n\t\tthis._shiftKey = false;\n\t\tthis._leftButton = false;\n\t\tthis._middleButton = false;\n\t\tthis._startedOnLineNumbers = false;\n\t\tthis._lastMouseDownPosition = null;\n\t\tthis._lastMouseDownPositionEqualCount = 0;\n\t\tthis._lastMouseDownCount = 0;\n\t\tthis._lastSetMouseDownCountTime = 0;\n\t\tthis.isDragAndDrop = false;\n\t}\n\n\tpublic get count(): number {\n\t\treturn this._lastMouseDownCount;\n\t}\n\n\tpublic setModifiers(source: EditorMouseEvent) {\n\t\tthis._altKey = source.altKey;\n\t\tthis._ctrlKey = source.ctrlKey;\n\t\tthis._metaKey = source.metaKey;\n\t\tthis._shiftKey = source.shiftKey;\n\t}\n\n\tpublic setStartButtons(source: EditorMouseEvent) {\n\t\tthis._leftButton = source.leftButton;\n\t\tthis._middleButton = source.middleButton;\n\t}\n\n\tpublic setStartedOnLineNumbers(startedOnLineNumbers: boolean): void {\n\t\tthis._startedOnLineNumbers = startedOnLineNumbers;\n\t}\n\n\tpublic trySetCount(\n\t\tsetMouseDownCount: number,\n\t\tnewMouseDownPosition: Position,\n\t): void {\n\t\t// a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n\t\tconst currentTime = new Date().getTime();\n\t\tif (\n\t\t\tcurrentTime - this._lastSetMouseDownCountTime >\n\t\t\tMouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME\n\t\t) {\n\t\t\tsetMouseDownCount = 1;\n\t\t}\n\t\tthis._lastSetMouseDownCountTime = currentTime;\n\n\t\t// b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n\t\tif (setMouseDownCount > this._lastMouseDownCount + 1) {\n\t\t\tsetMouseDownCount = this._lastMouseDownCount + 1;\n\t\t}\n\n\t\t// c. Invalidate multiple clicking if the logical position is different\n\t\tif (\n\t\t\tthis._lastMouseDownPosition &&\n\t\t\tthis._lastMouseDownPosition.equals(newMouseDownPosition)\n\t\t) {\n\t\t\tthis._lastMouseDownPositionEqualCount++;\n\t\t} else {\n\t\t\tthis._lastMouseDownPositionEqualCount = 1;\n\t\t}\n\t\tthis._lastMouseDownPosition = newMouseDownPosition;\n\n\t\t// Finally set the lastMouseDownCount\n\t\tthis._lastMouseDownCount = Math.min(\n\t\t\tsetMouseDownCount,\n\t\t\tthis._lastMouseDownPositionEqualCount,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["e", "position"]
}
