var M=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var W=(d,o,e,t)=>{for(var i=t>1?void 0:t?L(o,e):o,r=d.length-1,n;r>=0;r--)(n=d[r])&&(i=(t?n(o,e,i):n(i))||i);return t&&i&&M(o,e,i),i},N=(d,o)=>(e,t)=>o(e,t,d);import*as P from"../../../vs/base/browser/dom.js";import{createFastDomNode as v}from"../../../vs/base/browser/fastDomNode.js";import"../../../vs/base/browser/mouseEvent.js";import{inputLatency as I}from"../../../vs/base/browser/performance.js";import"../../../vs/base/browser/window.js";import{BugIndicatingError as c,onUnexpectedError as A}from"../../../vs/base/common/errors.js";import"../../../vs/base/common/lifecycle.js";import"../../../vs/editor/browser/controller/mouseHandler.js";import{PointerHandlerLastRenderData as O}from"../../../vs/editor/browser/controller/mouseTarget.js";import{PointerHandler as V}from"../../../vs/editor/browser/controller/pointerHandler.js";import{TextAreaHandler as T}from"../../../vs/editor/browser/controller/textAreaHandler.js";import"../../../vs/editor/browser/editorBrowser.js";import{RenderingContext as E}from"../../../vs/editor/browser/view/renderingContext.js";import{ViewController as G}from"../../../vs/editor/browser/view/viewController.js";import{ContentViewOverlays as H,MarginViewOverlays as F}from"../../../vs/editor/browser/view/viewOverlays.js";import{PartFingerprint as S,PartFingerprints as Z}from"../../../vs/editor/browser/view/viewPart.js";import{ViewUserInputEvents as B}from"../../../vs/editor/browser/view/viewUserInputEvents.js";import{BlockDecorations as k}from"../../../vs/editor/browser/viewParts/blockDecorations/blockDecorations.js";import{ViewContentWidgets as U}from"../../../vs/editor/browser/viewParts/contentWidgets/contentWidgets.js";import{CurrentLineHighlightOverlay as q,CurrentLineMarginHighlightOverlay as z}from"../../../vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js";import{DecorationsOverlay as j}from"../../../vs/editor/browser/viewParts/decorations/decorations.js";import{EditorScrollbar as J}from"../../../vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js";import{GlyphMarginWidgets as K}from"../../../vs/editor/browser/viewParts/glyphMargin/glyphMargin.js";import{IndentGuidesOverlay as Q}from"../../../vs/editor/browser/viewParts/indentGuides/indentGuides.js";import{LineNumbersOverlay as X}from"../../../vs/editor/browser/viewParts/lineNumbers/lineNumbers.js";import{ViewLines as Y}from"../../../vs/editor/browser/viewParts/lines/viewLines.js";import{LinesDecorationsOverlay as $}from"../../../vs/editor/browser/viewParts/linesDecorations/linesDecorations.js";import{Margin as ee}from"../../../vs/editor/browser/viewParts/margin/margin.js";import{MarginViewLineDecorationsOverlay as te}from"../../../vs/editor/browser/viewParts/marginDecorations/marginDecorations.js";import{Minimap as ie}from"../../../vs/editor/browser/viewParts/minimap/minimap.js";import{ViewOverlayWidgets as ne}from"../../../vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js";import{DecorationsOverviewRuler as oe}from"../../../vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js";import{OverviewRuler as re}from"../../../vs/editor/browser/viewParts/overviewRuler/overviewRuler.js";import{Rulers as se}from"../../../vs/editor/browser/viewParts/rulers/rulers.js";import{ScrollDecorationViewPart as ae}from"../../../vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js";import{SelectionsOverlay as de}from"../../../vs/editor/browser/viewParts/selections/selections.js";import{ViewCursors as le}from"../../../vs/editor/browser/viewParts/viewCursors/viewCursors.js";import{ViewZones as he}from"../../../vs/editor/browser/viewParts/viewZones/viewZones.js";import{WhitespaceOverlay as pe}from"../../../vs/editor/browser/viewParts/whitespace/whitespace.js";import"../../../vs/editor/common/config/editorConfiguration.js";import{EditorOption as b}from"../../../vs/editor/common/config/editorOptions.js";import{Position as D}from"../../../vs/editor/common/core/position.js";import{Range as ce}from"../../../vs/editor/common/core/range.js";import{Selection as ue}from"../../../vs/editor/common/core/selection.js";import{ScrollType as me}from"../../../vs/editor/common/editorCommon.js";import{GlyphMarginLane as ge}from"../../../vs/editor/common/model.js";import{ViewEventHandler as ve}from"../../../vs/editor/common/viewEventHandler.js";import"../../../vs/editor/common/viewEvents.js";import{ViewportData as _e}from"../../../vs/editor/common/viewLayout/viewLinesViewportData.js";import"../../../vs/editor/common/viewModel.js";import{ViewContext as we}from"../../../vs/editor/common/viewModel/viewContext.js";import{IInstantiationService as fe}from"../../../vs/platform/instantiation/common/instantiation.js";import{getThemeTypeSelector as Ce}from"../../../vs/platform/theme/common/themeService.js";let m=class extends ve{constructor(e,t,i,r,n,s,u){super();this._instantiationService=u;this._selections=[new ue(1,1,1,1)],this._renderAnimationFrame=null;const w=new G(t,r,n,e);this._context=new we(t,i,r),this._context.addEventHandler(this),this._viewParts=[],this._textAreaHandler=this._instantiationService.createInstance(T,this._context,w,this._createTextAreaHandlerHelper()),this._viewParts.push(this._textAreaHandler),this._linesContent=v(document.createElement("div")),this._linesContent.setClassName("lines-content monaco-editor-background"),this._linesContent.setPosition("absolute"),this.domNode=v(document.createElement("div")),this.domNode.setClassName(this._getEditorClassName()),this.domNode.setAttribute("role","code"),this._overflowGuardContainer=v(document.createElement("div")),Z.write(this._overflowGuardContainer,S.OverflowGuard),this._overflowGuardContainer.setClassName("overflow-guard"),this._scrollbar=new J(this._context,this._linesContent,this.domNode,this._overflowGuardContainer),this._viewParts.push(this._scrollbar),this._viewLines=new Y(this._context,this._linesContent),this._viewZones=new he(this._context),this._viewParts.push(this._viewZones);const g=new oe(this._context);this._viewParts.push(g);const f=new ae(this._context);this._viewParts.push(f);const l=new H(this._context);this._viewParts.push(l),l.addDynamicOverlay(new q(this._context)),l.addDynamicOverlay(new de(this._context)),l.addDynamicOverlay(new Q(this._context)),l.addDynamicOverlay(new j(this._context)),l.addDynamicOverlay(new pe(this._context));const h=new F(this._context);this._viewParts.push(h),h.addDynamicOverlay(new z(this._context)),h.addDynamicOverlay(new te(this._context)),h.addDynamicOverlay(new $(this._context)),h.addDynamicOverlay(new X(this._context)),this._glyphMarginWidgets=new K(this._context),this._viewParts.push(this._glyphMarginWidgets);const p=new ee(this._context);p.getDomNode().appendChild(this._viewZones.marginDomNode),p.getDomNode().appendChild(h.getDomNode()),p.getDomNode().appendChild(this._glyphMarginWidgets.domNode),this._viewParts.push(p),this._contentWidgets=new U(this._context,this.domNode),this._viewParts.push(this._contentWidgets),this._viewCursors=new le(this._context),this._viewParts.push(this._viewCursors),this._overlayWidgets=new ne(this._context,this.domNode),this._viewParts.push(this._overlayWidgets);const C=new se(this._context);this._viewParts.push(C);const y=new k(this._context);this._viewParts.push(y);const R=new ie(this._context);if(this._viewParts.push(R),g){const x=this._scrollbar.getOverviewRulerLayoutInfo();x.parent.insertBefore(g.getDomNode(),x.insertBefore)}this._linesContent.appendChild(l.getDomNode()),this._linesContent.appendChild(C.domNode),this._linesContent.appendChild(this._viewZones.domNode),this._linesContent.appendChild(this._viewLines.getDomNode()),this._linesContent.appendChild(this._contentWidgets.domNode),this._linesContent.appendChild(this._viewCursors.getDomNode()),this._overflowGuardContainer.appendChild(p.getDomNode()),this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode()),this._overflowGuardContainer.appendChild(f.getDomNode()),this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea),this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover),this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode()),this._overflowGuardContainer.appendChild(R.getDomNode()),this._overflowGuardContainer.appendChild(y.domNode),this.domNode.appendChild(this._overflowGuardContainer),s?(s.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode),s.appendChild(this._overlayWidgets.overflowingOverlayWidgetsDomNode.domNode)):(this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode),this.domNode.appendChild(this._overlayWidgets.overflowingOverlayWidgetsDomNode)),this._applyLayout(),this._pointerHandler=this._register(new V(this._context,w,this._createPointerHandlerHelper()))}_scrollbar;_context;_selections;_viewLines;_viewZones;_contentWidgets;_overlayWidgets;_glyphMarginWidgets;_viewCursors;_viewParts;_textAreaHandler;_pointerHandler;_linesContent;domNode;_overflowGuardContainer;_shouldRecomputeGlyphMarginLanes=!1;_renderAnimationFrame;_computeGlyphMarginLanes(){const e=this._context.viewModel.model,t=this._context.viewModel.glyphLanes;let i=[],r=0;i=i.concat(e.getAllMarginDecorations().map(n=>{const s=n.options.glyphMargin?.position??ge.Center;return r=Math.max(r,n.range.endLineNumber),{range:n.range,lane:s,persist:n.options.glyphMargin?.persistLane}})),i=i.concat(this._glyphMarginWidgets.getWidgets().map(n=>{const s=e.validateRange(n.preference.range);return r=Math.max(r,s.endLineNumber),{range:s,lane:n.preference.lane}})),i.sort((n,s)=>ce.compareRangesUsingStarts(n.range,s.range)),t.reset(r);for(const n of i)t.push(n.lane,n.range,n.persist);return t}_createPointerHandlerHelper(){return{viewDomNode:this.domNode.domNode,linesContentDomNode:this._linesContent.domNode,viewLinesDomNode:this._viewLines.getDomNode().domNode,focusTextArea:()=>{this.focus()},dispatchTextAreaEvent:e=>{this._textAreaHandler.textArea.domNode.dispatchEvent(e)},getLastRenderData:()=>{const e=this._viewCursors.getLastRenderData()||[],t=this._textAreaHandler.getLastRenderData();return new O(e,t)},renderNow:()=>{this.render(!0,!1)},shouldSuppressMouseDownOnViewZone:e=>this._viewZones.shouldSuppressMouseDownOnViewZone(e),shouldSuppressMouseDownOnWidget:e=>this._contentWidgets.shouldSuppressMouseDownOnWidget(e),getPositionFromDOMInfo:(e,t)=>(this._flushAccumulatedAndRenderNow(),this._viewLines.getPositionFromDOMInfo(e,t)),visibleRangeForPosition:(e,t)=>(this._flushAccumulatedAndRenderNow(),this._viewLines.visibleRangeForPosition(new D(e,t))),getLineWidth:e=>(this._flushAccumulatedAndRenderNow(),this._viewLines.getLineWidth(e))}}_createTextAreaHandlerHelper(){return{visibleRangeForPosition:e=>(this._flushAccumulatedAndRenderNow(),this._viewLines.visibleRangeForPosition(e))}}_applyLayout(){const t=this._context.configuration.options.get(b.layoutInfo);this.domNode.setWidth(t.width),this.domNode.setHeight(t.height),this._overflowGuardContainer.setWidth(t.width),this._overflowGuardContainer.setHeight(t.height),this._linesContent.setWidth(16777216),this._linesContent.setHeight(16777216)}_getEditorClassName(){const e=this._textAreaHandler.isFocused()?" focused":"";return this._context.configuration.options.get(b.editorClassName)+" "+Ce(this._context.theme.type)+e}handleEvents(e){super.handleEvents(e),this._scheduleRender()}onConfigurationChanged(e){return this.domNode.setClassName(this._getEditorClassName()),this._applyLayout(),!1}onCursorStateChanged(e){return this._selections=e.selections,!1}onDecorationsChanged(e){return e.affectsGlyphMargin&&(this._shouldRecomputeGlyphMarginLanes=!0),!1}onFocusChanged(e){return this.domNode.setClassName(this._getEditorClassName()),!1}onThemeChanged(e){return this._context.theme.update(e.theme),this.domNode.setClassName(this._getEditorClassName()),!1}dispose(){this._renderAnimationFrame!==null&&(this._renderAnimationFrame.dispose(),this._renderAnimationFrame=null),this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove(),this._context.removeEventHandler(this),this._viewLines.dispose();for(const e of this._viewParts)e.dispose();super.dispose()}_scheduleRender(){if(this._store.isDisposed)throw new c;if(this._renderAnimationFrame===null){const e=this._createCoordinatedRendering();this._renderAnimationFrame=_.INSTANCE.scheduleCoordinatedRendering({window:P.getWindow(this.domNode?.domNode),prepareRenderText:()=>{if(this._store.isDisposed)throw new c;try{return e.prepareRenderText()}finally{this._renderAnimationFrame=null}},renderText:()=>{if(this._store.isDisposed)throw new c;return e.renderText()},prepareRender:(t,i)=>{if(this._store.isDisposed)throw new c;return e.prepareRender(t,i)},render:(t,i)=>{if(this._store.isDisposed)throw new c;return e.render(t,i)}})}}_flushAccumulatedAndRenderNow(){const e=this._createCoordinatedRendering();a(()=>e.prepareRenderText());const t=a(()=>e.renderText());if(t){const[i,r]=t;a(()=>e.prepareRender(i,r)),a(()=>e.render(i,r))}}_getViewPartsToRender(){const e=[];let t=0;for(const i of this._viewParts)i.shouldRender()&&(e[t++]=i);return e}_createCoordinatedRendering(){return{prepareRenderText:()=>{if(this._shouldRecomputeGlyphMarginLanes){this._shouldRecomputeGlyphMarginLanes=!1;const e=this._computeGlyphMarginLanes();this._context.configuration.setGlyphMarginDecorationLaneCount(e.requiredLanes)}I.onRenderStart()},renderText:()=>{if(!this.domNode.domNode.isConnected)return null;let e=this._getViewPartsToRender();if(!this._viewLines.shouldRender()&&e.length===0)return null;const t=this._context.viewLayout.getLinesViewportData();this._context.viewModel.setViewport(t.startLineNumber,t.endLineNumber,t.centeredLineNumber);const i=new _e(this._selections,t,this._context.viewLayout.getWhitespaceViewportData(),this._context.viewModel);return this._contentWidgets.shouldRender()&&this._contentWidgets.onBeforeRender(i),this._viewLines.shouldRender()&&(this._viewLines.renderText(i),this._viewLines.onDidRender(),e=this._getViewPartsToRender()),[e,new E(this._context.viewLayout,i,this._viewLines)]},prepareRender:(e,t)=>{for(const i of e)i.prepareRender(t)},render:(e,t)=>{for(const i of e)i.render(t),i.onDidRender()}}}delegateVerticalScrollbarPointerDown(e){this._scrollbar.delegateVerticalScrollbarPointerDown(e)}delegateScrollFromMouseWheelEvent(e){this._scrollbar.delegateScrollFromMouseWheelEvent(e)}restoreState(e){this._context.viewModel.viewLayout.setScrollPosition({scrollTop:e.scrollTop,scrollLeft:e.scrollLeft},me.Immediate),this._context.viewModel.visibleLinesStabilized()}getOffsetForColumn(e,t){const i=this._context.viewModel.model.validatePosition({lineNumber:e,column:t}),r=this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(i);this._flushAccumulatedAndRenderNow();const n=this._viewLines.visibleRangeForPosition(new D(r.lineNumber,r.column));return n?n.left:-1}getTargetAtClientPoint(e,t){const i=this._pointerHandler.getTargetAtClientPoint(e,t);return i?B.convertViewToModelMouseTarget(i,this._context.viewModel.coordinatesConverter):null}createOverviewRuler(e){return new re(this._context,e)}change(e){this._viewZones.changeViewZones(e),this._scheduleRender()}render(e,t){if(t){this._viewLines.forceShouldRender();for(const i of this._viewParts)i.forceShouldRender()}e?this._flushAccumulatedAndRenderNow():this._scheduleRender()}writeScreenReaderContent(e){this._textAreaHandler.writeScreenReaderContent(e)}focus(){this._textAreaHandler.focusTextArea()}isFocused(){return this._textAreaHandler.isFocused()}refreshFocusState(){this._textAreaHandler.refreshFocusState()}setAriaOptions(e){this._textAreaHandler.setAriaOptions(e)}addContentWidget(e){this._contentWidgets.addWidget(e.widget),this.layoutContentWidget(e),this._scheduleRender()}layoutContentWidget(e){this._contentWidgets.setWidgetPosition(e.widget,e.position?.position??null,e.position?.secondaryPosition??null,e.position?.preference??null,e.position?.positionAffinity??null),this._scheduleRender()}removeContentWidget(e){this._contentWidgets.removeWidget(e.widget),this._scheduleRender()}addOverlayWidget(e){this._overlayWidgets.addWidget(e.widget),this.layoutOverlayWidget(e),this._scheduleRender()}layoutOverlayWidget(e){this._overlayWidgets.setWidgetPosition(e.widget,e.position)&&this._scheduleRender()}removeOverlayWidget(e){this._overlayWidgets.removeWidget(e.widget),this._scheduleRender()}addGlyphMarginWidget(e){this._glyphMarginWidgets.addWidget(e.widget),this._shouldRecomputeGlyphMarginLanes=!0,this._scheduleRender()}layoutGlyphMarginWidget(e){const t=e.position;this._glyphMarginWidgets.setWidgetPosition(e.widget,t)&&(this._shouldRecomputeGlyphMarginLanes=!0,this._scheduleRender())}removeGlyphMarginWidget(e){this._glyphMarginWidgets.removeWidget(e.widget),this._shouldRecomputeGlyphMarginLanes=!0,this._scheduleRender()}};m=W([N(6,fe)],m);function a(d){try{return d()}catch(o){return A(o),null}}class _{static INSTANCE=new _;_coordinatedRenderings=[];_animationFrameRunners=new Map;constructor(){}scheduleCoordinatedRendering(o){return this._coordinatedRenderings.push(o),this._scheduleRender(o.window),{dispose:()=>{const e=this._coordinatedRenderings.indexOf(o);if(e!==-1&&(this._coordinatedRenderings.splice(e,1),this._coordinatedRenderings.length===0)){for(const[t,i]of this._animationFrameRunners)i.dispose();this._animationFrameRunners.clear()}}}}_scheduleRender(o){if(!this._animationFrameRunners.has(o)){const e=()=>{this._animationFrameRunners.delete(o),this._onRenderScheduled()};this._animationFrameRunners.set(o,P.runAtThisOrScheduleAtNextAnimationFrame(o,e,100))}}_onRenderScheduled(){const o=this._coordinatedRenderings.slice(0);this._coordinatedRenderings=[];for(const t of o)a(()=>t.prepareRenderText());const e=[];for(let t=0,i=o.length;t<i;t++){const r=o[t];e[t]=a(()=>r.renderText())}for(let t=0,i=o.length;t<i;t++){const r=o[t],n=e[t];if(!n)continue;const[s,u]=n;a(()=>r.prepareRender(s,u))}for(let t=0,i=o.length;t<i;t++){const r=o[t],n=e[t];if(!n)continue;const[s,u]=n;a(()=>r.render(s,u))}}}export{m as View};
