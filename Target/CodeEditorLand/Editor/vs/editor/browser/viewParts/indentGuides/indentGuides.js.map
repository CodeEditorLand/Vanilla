{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/indentGuides/indentGuides.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./indentGuides.css\";\nimport { ArrayQueue } from \"../../../../base/common/arrays.js\";\nimport type { Color } from \"../../../../base/common/color.js\";\nimport { isDefined } from \"../../../../base/common/types.js\";\nimport { registerThemingParticipant } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tEditorOption,\n\ttype InternalGuidesOptions,\n} from \"../../../common/config/editorOptions.js\";\nimport {\n\teditorActiveIndentGuide1,\n\teditorActiveIndentGuide2,\n\teditorActiveIndentGuide3,\n\teditorActiveIndentGuide4,\n\teditorActiveIndentGuide5,\n\teditorActiveIndentGuide6,\n\teditorBracketHighlightingForeground1,\n\teditorBracketHighlightingForeground2,\n\teditorBracketHighlightingForeground3,\n\teditorBracketHighlightingForeground4,\n\teditorBracketHighlightingForeground5,\n\teditorBracketHighlightingForeground6,\n\teditorBracketPairGuideActiveBackground1,\n\teditorBracketPairGuideActiveBackground2,\n\teditorBracketPairGuideActiveBackground3,\n\teditorBracketPairGuideActiveBackground4,\n\teditorBracketPairGuideActiveBackground5,\n\teditorBracketPairGuideActiveBackground6,\n\teditorBracketPairGuideBackground1,\n\teditorBracketPairGuideBackground2,\n\teditorBracketPairGuideBackground3,\n\teditorBracketPairGuideBackground4,\n\teditorBracketPairGuideBackground5,\n\teditorBracketPairGuideBackground6,\n\teditorIndentGuide1,\n\teditorIndentGuide2,\n\teditorIndentGuide3,\n\teditorIndentGuide4,\n\teditorIndentGuide5,\n\teditorIndentGuide6,\n} from \"../../../common/core/editorColorRegistry.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { BracketPairGuidesClassNames } from \"../../../common/model/guidesTextModelPart.js\";\nimport {\n\tHorizontalGuidesState,\n\tIndentGuide,\n} from \"../../../common/textModelGuides.js\";\nimport type * as viewEvents from \"../../../common/viewEvents.js\";\nimport type { ViewContext } from \"../../../common/viewModel/viewContext.js\";\nimport { DynamicViewOverlay } from \"../../view/dynamicViewOverlay.js\";\nimport type { RenderingContext } from \"../../view/renderingContext.js\";\n\n/**\n * Indent guides are vertical lines that help identify the indentation level of\n * the code.\n */\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n\tprivate readonly _context: ViewContext;\n\tprivate _primaryPosition: Position | null;\n\tprivate _spaceWidth: number;\n\tprivate _renderResult: string[] | null;\n\tprivate _maxIndentLeft: number;\n\tprivate _bracketPairGuideOptions: InternalGuidesOptions;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._primaryPosition = null;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft =\n\t\t\twrappingInfo.wrappingColumn === -1\n\t\t\t\t? -1\n\t\t\t\t: wrappingInfo.wrappingColumn *\n\t\t\t\t\tfontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(\n\t\te: viewEvents.ViewConfigurationChangedEvent,\n\t): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft =\n\t\t\twrappingInfo.wrappingColumn === -1\n\t\t\t\t? -1\n\t\t\t\t: wrappingInfo.wrappingColumn *\n\t\t\t\t\tfontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(\n\t\te: viewEvents.ViewCursorStateChangedEvent,\n\t): boolean {\n\t\tconst selection = e.selections[0];\n\t\tconst newPosition = selection.getPosition();\n\t\tif (!this._primaryPosition?.equals(newPosition)) {\n\t\t\tthis._primaryPosition = newPosition;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(\n\t\te: viewEvents.ViewDecorationsChangedEvent,\n\t): boolean {\n\t\t// true for inline decorations\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(\n\t\te: viewEvents.ViewLinesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(\n\t\te: viewEvents.ViewLinesDeletedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(\n\t\te: viewEvents.ViewLinesInsertedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(\n\t\te: viewEvents.ViewScrollChangedEvent,\n\t): boolean {\n\t\treturn e.scrollTopChanged; // || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(\n\t\te: viewEvents.ViewZonesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLanguageConfigurationChanged(\n\t\te: viewEvents.ViewLanguageConfigurationEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (\n\t\t\t!this._bracketPairGuideOptions.indentation &&\n\t\t\tthis._bracketPairGuideOptions.bracketPairs === false\n\t\t) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst scrollWidth = ctx.scrollWidth;\n\n\t\tconst activeCursorPosition = this._primaryPosition;\n\n\t\tconst indents = this.getGuidesByLine(\n\t\t\tvisibleStartLineNumber,\n\t\t\tMath.min(\n\t\t\t\tvisibleEndLineNumber + 1,\n\t\t\t\tthis._context.viewModel.getLineCount(),\n\t\t\t),\n\t\t\tactiveCursorPosition,\n\t\t);\n\n\t\tconst output: string[] = [];\n\t\tfor (\n\t\t\tlet lineNumber = visibleStartLineNumber;\n\t\t\tlineNumber <= visibleEndLineNumber;\n\t\t\tlineNumber++\n\t\t) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst indent = indents[lineIndex];\n\t\t\tlet result = \"\";\n\t\t\tconst leftOffset =\n\t\t\t\tctx.visibleRangeForPosition(new Position(lineNumber, 1))\n\t\t\t\t\t?.left ?? 0;\n\t\t\tfor (const guide of indent) {\n\t\t\t\tconst left =\n\t\t\t\t\tguide.column === -1\n\t\t\t\t\t\t? leftOffset +\n\t\t\t\t\t\t\t(guide.visibleColumn - 1) * this._spaceWidth\n\t\t\t\t\t\t: ctx.visibleRangeForPosition(\n\t\t\t\t\t\t\t\tnew Position(lineNumber, guide.column),\n\t\t\t\t\t\t\t)!.left;\n\n\t\t\t\tif (\n\t\t\t\t\tleft > scrollWidth ||\n\t\t\t\t\t(this._maxIndentLeft > 0 && left > this._maxIndentLeft)\n\t\t\t\t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst className = guide.horizontalLine\n\t\t\t\t\t? guide.horizontalLine.top\n\t\t\t\t\t\t? \"horizontal-top\"\n\t\t\t\t\t\t: \"horizontal-bottom\"\n\t\t\t\t\t: \"vertical\";\n\n\t\t\t\tconst width = guide.horizontalLine\n\t\t\t\t\t? (ctx.visibleRangeForPosition(\n\t\t\t\t\t\t\tnew Position(\n\t\t\t\t\t\t\t\tlineNumber,\n\t\t\t\t\t\t\t\tguide.horizontalLine.endColumn,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)?.left ?? left + this._spaceWidth) - left\n\t\t\t\t\t: this._spaceWidth;\n\n\t\t\t\tresult += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;width:${width}px\"></div>`;\n\t\t\t}\n\t\t\toutput[lineIndex] = result;\n\t\t}\n\t\tthis._renderResult = output;\n\t}\n\n\tprivate getGuidesByLine(\n\t\tvisibleStartLineNumber: number,\n\t\tvisibleEndLineNumber: number,\n\t\tactiveCursorPosition: Position | null,\n\t): IndentGuide[][] {\n\t\tconst bracketGuides =\n\t\t\tthis._bracketPairGuideOptions.bracketPairs !== false\n\t\t\t\t? this._context.viewModel.getBracketGuidesInRangeByLine(\n\t\t\t\t\t\tvisibleStartLineNumber,\n\t\t\t\t\t\tvisibleEndLineNumber,\n\t\t\t\t\t\tactiveCursorPosition,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thighlightActive:\n\t\t\t\t\t\t\t\tthis._bracketPairGuideOptions\n\t\t\t\t\t\t\t\t\t.highlightActiveBracketPair,\n\t\t\t\t\t\t\thorizontalGuides:\n\t\t\t\t\t\t\t\tthis._bracketPairGuideOptions\n\t\t\t\t\t\t\t\t\t.bracketPairsHorizontal === true\n\t\t\t\t\t\t\t\t\t? HorizontalGuidesState.Enabled\n\t\t\t\t\t\t\t\t\t: this._bracketPairGuideOptions\n\t\t\t\t\t\t\t\t\t\t\t\t.bracketPairsHorizontal ===\n\t\t\t\t\t\t\t\t\t\t\t\"active\"\n\t\t\t\t\t\t\t\t\t\t? HorizontalGuidesState.EnabledForActive\n\t\t\t\t\t\t\t\t\t\t: HorizontalGuidesState.Disabled,\n\t\t\t\t\t\t\tincludeInactive:\n\t\t\t\t\t\t\t\tthis._bracketPairGuideOptions.bracketPairs ===\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t: null;\n\n\t\tconst indentGuides = this._bracketPairGuideOptions.indentation\n\t\t\t? this._context.viewModel.getLinesIndentGuides(\n\t\t\t\t\tvisibleStartLineNumber,\n\t\t\t\t\tvisibleEndLineNumber,\n\t\t\t\t)\n\t\t\t: null;\n\n\t\tlet activeIndentStartLineNumber = 0;\n\t\tlet activeIndentEndLineNumber = 0;\n\t\tlet activeIndentLevel = 0;\n\n\t\tif (\n\t\t\tthis._bracketPairGuideOptions.highlightActiveIndentation !==\n\t\t\t\tfalse &&\n\t\t\tactiveCursorPosition\n\t\t) {\n\t\t\tconst activeIndentInfo =\n\t\t\t\tthis._context.viewModel.getActiveIndentGuide(\n\t\t\t\t\tactiveCursorPosition.lineNumber,\n\t\t\t\t\tvisibleStartLineNumber,\n\t\t\t\t\tvisibleEndLineNumber,\n\t\t\t\t);\n\t\t\tactiveIndentStartLineNumber = activeIndentInfo.startLineNumber;\n\t\t\tactiveIndentEndLineNumber = activeIndentInfo.endLineNumber;\n\t\t\tactiveIndentLevel = activeIndentInfo.indent;\n\t\t}\n\n\t\tconst { indentSize } = this._context.viewModel.model.getOptions();\n\n\t\tconst result: IndentGuide[][] = [];\n\t\tfor (\n\t\t\tlet lineNumber = visibleStartLineNumber;\n\t\t\tlineNumber <= visibleEndLineNumber;\n\t\t\tlineNumber++\n\t\t) {\n\t\t\tconst lineGuides = new Array<IndentGuide>();\n\t\t\tresult.push(lineGuides);\n\n\t\t\tconst bracketGuidesInLine = bracketGuides\n\t\t\t\t? bracketGuides[lineNumber - visibleStartLineNumber]\n\t\t\t\t: [];\n\t\t\tconst bracketGuidesInLineQueue = new ArrayQueue(\n\t\t\t\tbracketGuidesInLine,\n\t\t\t);\n\n\t\t\tconst indentGuidesInLine = indentGuides\n\t\t\t\t? indentGuides[lineNumber - visibleStartLineNumber]\n\t\t\t\t: 0;\n\n\t\t\tfor (\n\t\t\t\tlet indentLvl = 1;\n\t\t\t\tindentLvl <= indentGuidesInLine;\n\t\t\t\tindentLvl++\n\t\t\t) {\n\t\t\t\tconst indentGuide = (indentLvl - 1) * indentSize + 1;\n\t\t\t\tconst isActive =\n\t\t\t\t\t// Disable active indent guide if there are bracket guides.\n\t\t\t\t\t(this._bracketPairGuideOptions\n\t\t\t\t\t\t.highlightActiveIndentation === \"always\" ||\n\t\t\t\t\t\tbracketGuidesInLine.length === 0) &&\n\t\t\t\t\tactiveIndentStartLineNumber <= lineNumber &&\n\t\t\t\t\tlineNumber <= activeIndentEndLineNumber &&\n\t\t\t\t\tindentLvl === activeIndentLevel;\n\t\t\t\tlineGuides.push(\n\t\t\t\t\t...(bracketGuidesInLineQueue.takeWhile(\n\t\t\t\t\t\t(g) => g.visibleColumn < indentGuide,\n\t\t\t\t\t) || []),\n\t\t\t\t);\n\t\t\t\tconst peeked = bracketGuidesInLineQueue.peek();\n\t\t\t\tif (\n\t\t\t\t\t!peeked ||\n\t\t\t\t\tpeeked.visibleColumn !== indentGuide ||\n\t\t\t\t\tpeeked.horizontalLine\n\t\t\t\t) {\n\t\t\t\t\tlineGuides.push(\n\t\t\t\t\t\tnew IndentGuide(\n\t\t\t\t\t\t\tindentGuide,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t`core-guide-indent lvl-${(indentLvl - 1) % 30}` +\n\t\t\t\t\t\t\t\t(isActive ? \" indent-active\" : \"\"),\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlineGuides.push(\n\t\t\t\t...(bracketGuidesInLineQueue.takeWhile((g) => true) || []),\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nfunction transparentToUndefined(color: Color | undefined): Color | undefined {\n\tif (color && color.isTransparent()) {\n\t\treturn undefined;\n\t}\n\treturn color;\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst colors = [\n\t\t{\n\t\t\tbracketColor: editorBracketHighlightingForeground1,\n\t\t\tguideColor: editorBracketPairGuideBackground1,\n\t\t\tguideColorActive: editorBracketPairGuideActiveBackground1,\n\t\t},\n\t\t{\n\t\t\tbracketColor: editorBracketHighlightingForeground2,\n\t\t\tguideColor: editorBracketPairGuideBackground2,\n\t\t\tguideColorActive: editorBracketPairGuideActiveBackground2,\n\t\t},\n\t\t{\n\t\t\tbracketColor: editorBracketHighlightingForeground3,\n\t\t\tguideColor: editorBracketPairGuideBackground3,\n\t\t\tguideColorActive: editorBracketPairGuideActiveBackground3,\n\t\t},\n\t\t{\n\t\t\tbracketColor: editorBracketHighlightingForeground4,\n\t\t\tguideColor: editorBracketPairGuideBackground4,\n\t\t\tguideColorActive: editorBracketPairGuideActiveBackground4,\n\t\t},\n\t\t{\n\t\t\tbracketColor: editorBracketHighlightingForeground5,\n\t\t\tguideColor: editorBracketPairGuideBackground5,\n\t\t\tguideColorActive: editorBracketPairGuideActiveBackground5,\n\t\t},\n\t\t{\n\t\t\tbracketColor: editorBracketHighlightingForeground6,\n\t\t\tguideColor: editorBracketPairGuideBackground6,\n\t\t\tguideColorActive: editorBracketPairGuideActiveBackground6,\n\t\t},\n\t];\n\tconst colorProvider = new BracketPairGuidesClassNames();\n\n\tconst indentColors = [\n\t\t{\n\t\t\tindentColor: editorIndentGuide1,\n\t\t\tindentColorActive: editorActiveIndentGuide1,\n\t\t},\n\t\t{\n\t\t\tindentColor: editorIndentGuide2,\n\t\t\tindentColorActive: editorActiveIndentGuide2,\n\t\t},\n\t\t{\n\t\t\tindentColor: editorIndentGuide3,\n\t\t\tindentColorActive: editorActiveIndentGuide3,\n\t\t},\n\t\t{\n\t\t\tindentColor: editorIndentGuide4,\n\t\t\tindentColorActive: editorActiveIndentGuide4,\n\t\t},\n\t\t{\n\t\t\tindentColor: editorIndentGuide5,\n\t\t\tindentColorActive: editorActiveIndentGuide5,\n\t\t},\n\t\t{\n\t\t\tindentColor: editorIndentGuide6,\n\t\t\tindentColorActive: editorActiveIndentGuide6,\n\t\t},\n\t];\n\n\tconst colorValues = colors\n\t\t.map((c) => {\n\t\t\tconst bracketColor = theme.getColor(c.bracketColor);\n\t\t\tconst guideColor = theme.getColor(c.guideColor);\n\t\t\tconst guideColorActive = theme.getColor(c.guideColorActive);\n\n\t\t\tconst effectiveGuideColor = transparentToUndefined(\n\t\t\t\ttransparentToUndefined(guideColor) ??\n\t\t\t\t\tbracketColor?.transparent(0.3),\n\t\t\t);\n\t\t\tconst effectiveGuideColorActive = transparentToUndefined(\n\t\t\t\ttransparentToUndefined(guideColorActive) ?? bracketColor,\n\t\t\t);\n\n\t\t\tif (!effectiveGuideColor || !effectiveGuideColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tguideColor: effectiveGuideColor,\n\t\t\t\tguideColorActive: effectiveGuideColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tconst indentColorValues = indentColors\n\t\t.map((c) => {\n\t\t\tconst indentColor = theme.getColor(c.indentColor);\n\t\t\tconst indentColorActive = theme.getColor(c.indentColorActive);\n\n\t\t\tconst effectiveIndentColor = transparentToUndefined(indentColor);\n\t\t\tconst effectiveIndentColorActive =\n\t\t\t\ttransparentToUndefined(indentColorActive);\n\n\t\t\tif (!effectiveIndentColor || !effectiveIndentColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tindentColor: effectiveIndentColor,\n\t\t\t\tindentColorActive: effectiveIndentColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tif (colorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = colorValues[level % colorValues.length];\n\t\t\tcollector.addRule(\n\t\t\t\t`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, \".\")} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`,\n\t\t\t);\n\t\t}\n\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`,\n\t\t);\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`,\n\t\t);\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`,\n\t\t);\n\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`,\n\t\t);\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`,\n\t\t);\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`,\n\t\t);\n\t}\n\n\tif (indentColorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = indentColorValues[level % indentColorValues.length];\n\t\t\tcollector.addRule(\n\t\t\t\t`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`,\n\t\t\t);\n\t\t}\n\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`,\n\t\t);\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`,\n\t\t);\n\t}\n});\n"],
  "mappings": "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",
  "names": ["colors"]
}
