{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/indentGuides/indentGuides.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuide1, editorIndentGuide2, editorIndentGuide3, editorIndentGuide4, editorIndentGuide5, editorIndentGuide6, editorActiveIndentGuide1, editorActiveIndentGuide2, editorActiveIndentGuide3, editorActiveIndentGuide4, editorActiveIndentGuide5, editorActiveIndentGuide6 } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption, InternalGuidesOptions } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\n\n/**\n * Indent guides are vertical lines that help identify the indentation level of\n * the code.\n */\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _primaryPosition: Position | null;\n\tprivate _spaceWidth: number;\n\tprivate _renderResult: string[] | null;\n\tprivate _maxIndentLeft: number;\n\tprivate _bracketPairGuideOptions: InternalGuidesOptions;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._primaryPosition = null;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst selection = e.selections[0];\n\t\tconst newPosition = selection.getPosition();\n\t\tif (!this._primaryPosition?.equals(newPosition)) {\n\t\t\tthis._primaryPosition = newPosition;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;// || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLanguageConfigurationChanged(e: viewEvents.ViewLanguageConfigurationEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst scrollWidth = ctx.scrollWidth;\n\n\t\tconst activeCursorPosition = this._primaryPosition;\n\n\t\tconst indents = this.getGuidesByLine(\n\t\t\tvisibleStartLineNumber,\n\t\t\tMath.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()),\n\t\t\tactiveCursorPosition\n\t\t);\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst indent = indents[lineIndex];\n\t\t\tlet result = '';\n\t\t\tconst leftOffset = ctx.visibleRangeForPosition(new Position(lineNumber, 1))?.left ?? 0;\n\t\t\tfor (const guide of indent) {\n\t\t\t\tconst left =\n\t\t\t\t\tguide.column === -1\n\t\t\t\t\t\t? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n\t\t\t\t\t\t: ctx.visibleRangeForPosition(\n\t\t\t\t\t\t\tnew Position(lineNumber, guide.column)\n\t\t\t\t\t\t)!.left;\n\n\t\t\t\tif (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n\n\t\t\t\tconst width = guide.horizontalLine\n\t\t\t\t\t? (ctx.visibleRangeForPosition(\n\t\t\t\t\t\tnew Position(lineNumber, guide.horizontalLine.endColumn)\n\t\t\t\t\t)?.left ?? (left + this._spaceWidth)) - left\n\t\t\t\t\t: this._spaceWidth;\n\n\t\t\t\tresult += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;width:${width}px\"></div>`;\n\t\t\t}\n\t\t\toutput[lineIndex] = result;\n\t\t}\n\t\tthis._renderResult = output;\n\t}\n\n\tprivate getGuidesByLine(\n\t\tvisibleStartLineNumber: number,\n\t\tvisibleEndLineNumber: number,\n\t\tactiveCursorPosition: Position | null\n\t): IndentGuide[][] {\n\t\tconst bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n\t\t\t? this._context.viewModel.getBracketGuidesInRangeByLine(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber,\n\t\t\t\tactiveCursorPosition,\n\t\t\t\t{\n\t\t\t\t\thighlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n\t\t\t\t\thorizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n\t\t\t\t\t\t? HorizontalGuidesState.Enabled\n\t\t\t\t\t\t: this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n\t\t\t\t\t\t\t? HorizontalGuidesState.EnabledForActive\n\t\t\t\t\t\t\t: HorizontalGuidesState.Disabled,\n\t\t\t\t\tincludeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n\t\t\t\t}\n\t\t\t)\n\t\t\t: null;\n\n\t\tconst indentGuides = this._bracketPairGuideOptions.indentation\n\t\t\t? this._context.viewModel.getLinesIndentGuides(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber\n\t\t\t)\n\t\t\t: null;\n\n\t\tlet activeIndentStartLineNumber = 0;\n\t\tlet activeIndentEndLineNumber = 0;\n\t\tlet activeIndentLevel = 0;\n\n\t\tif (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n\t\t\tconst activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n\t\t\tactiveIndentStartLineNumber = activeIndentInfo.startLineNumber;\n\t\t\tactiveIndentEndLineNumber = activeIndentInfo.endLineNumber;\n\t\t\tactiveIndentLevel = activeIndentInfo.indent;\n\t\t}\n\n\t\tconst { indentSize } = this._context.viewModel.model.getOptions();\n\n\t\tconst result: IndentGuide[][] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineGuides = new Array<IndentGuide>();\n\t\t\tresult.push(lineGuides);\n\n\t\t\tconst bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n\t\t\tconst bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n\n\t\t\tconst indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n\n\t\t\tfor (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n\t\t\t\tconst indentGuide = (indentLvl - 1) * indentSize + 1;\n\t\t\t\tconst isActive =\n\t\t\t\t\t// Disable active indent guide if there are bracket guides.\n\t\t\t\t\t(this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n\t\t\t\t\tactiveIndentStartLineNumber <= lineNumber &&\n\t\t\t\t\tlineNumber <= activeIndentEndLineNumber &&\n\t\t\t\t\tindentLvl === activeIndentLevel;\n\t\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n\t\t\t\tconst peeked = bracketGuidesInLineQueue.peek();\n\t\t\t\tif (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n\t\t\t\t\tlineGuides.push(\n\t\t\t\t\t\tnew IndentGuide(\n\t\t\t\t\t\t\tindentGuide,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t`core-guide-indent lvl-${(indentLvl - 1) % 30}` + (isActive ? ' indent-active' : ''),\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nfunction transparentToUndefined(color: Color | undefined): Color | undefined {\n\tif (color && color.isTransparent()) {\n\t\treturn undefined;\n\t}\n\treturn color;\n}\n\nregisterThemingParticipant((theme, collector) => {\n\n\tconst colors = [\n\t\t{ bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n\t\t{ bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n\t\t{ bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n\t\t{ bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n\t\t{ bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n\t\t{ bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n\t];\n\tconst colorProvider = new BracketPairGuidesClassNames();\n\n\tconst indentColors = [\n\t\t{ indentColor: editorIndentGuide1, indentColorActive: editorActiveIndentGuide1 },\n\t\t{ indentColor: editorIndentGuide2, indentColorActive: editorActiveIndentGuide2 },\n\t\t{ indentColor: editorIndentGuide3, indentColorActive: editorActiveIndentGuide3 },\n\t\t{ indentColor: editorIndentGuide4, indentColorActive: editorActiveIndentGuide4 },\n\t\t{ indentColor: editorIndentGuide5, indentColorActive: editorActiveIndentGuide5 },\n\t\t{ indentColor: editorIndentGuide6, indentColorActive: editorActiveIndentGuide6 },\n\t];\n\n\tconst colorValues = colors\n\t\t.map(c => {\n\t\t\tconst bracketColor = theme.getColor(c.bracketColor);\n\t\t\tconst guideColor = theme.getColor(c.guideColor);\n\t\t\tconst guideColorActive = theme.getColor(c.guideColorActive);\n\n\t\t\tconst effectiveGuideColor = transparentToUndefined(transparentToUndefined(guideColor) ?? bracketColor?.transparent(0.3));\n\t\t\tconst effectiveGuideColorActive = transparentToUndefined(transparentToUndefined(guideColorActive) ?? bracketColor);\n\n\t\t\tif (!effectiveGuideColor || !effectiveGuideColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tguideColor: effectiveGuideColor,\n\t\t\t\tguideColorActive: effectiveGuideColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tconst indentColorValues = indentColors\n\t\t.map(c => {\n\t\t\tconst indentColor = theme.getColor(c.indentColor);\n\t\t\tconst indentColorActive = theme.getColor(c.indentColorActive);\n\n\t\t\tconst effectiveIndentColor = transparentToUndefined(indentColor);\n\t\t\tconst effectiveIndentColorActive = transparentToUndefined(indentColorActive);\n\n\t\t\tif (!effectiveIndentColor || !effectiveIndentColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tindentColor: effectiveIndentColor,\n\t\t\t\tindentColorActive: effectiveIndentColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tif (colorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = colorValues[level % colorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n\n\t\tcollector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n\t}\n\n\tif (indentColorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = indentColorValues[level % indentColorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`);\n\t}\n});\n"],
  "mappings": "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",
  "names": ["colors"]
}
