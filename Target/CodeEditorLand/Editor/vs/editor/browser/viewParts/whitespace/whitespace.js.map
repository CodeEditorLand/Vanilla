{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/whitespace/whitespace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./whitespace.css\";\nimport { CharCode } from \"../../../../base/common/charCode.js\";\nimport * as strings from \"../../../../base/common/strings.js\";\nimport type { IEditorConfiguration } from \"../../../common/config/editorConfiguration.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport { editorWhitespaces } from \"../../../common/core/editorColorRegistry.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport type { Selection } from \"../../../common/core/selection.js\";\nimport type * as viewEvents from \"../../../common/viewEvents.js\";\nimport { LineRange } from \"../../../common/viewLayout/viewLineRenderer.js\";\nimport type { ViewLineData } from \"../../../common/viewModel.js\";\nimport type { ViewContext } from \"../../../common/viewModel/viewContext.js\";\nimport { DynamicViewOverlay } from \"../../view/dynamicViewOverlay.js\";\nimport type { RenderingContext } from \"../../view/renderingContext.js\";\n\n/**\n * The whitespace overlay will visual certain whitespace depending on the\n * current editor configuration (boundary, selection, etc.).\n */\nexport class WhitespaceOverlay extends DynamicViewOverlay {\n\tprivate readonly _context: ViewContext;\n\tprivate _options: WhitespaceOptions;\n\tprivate _selection: Selection[];\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._options = new WhitespaceOptions(this._context.configuration);\n\t\tthis._selection = [];\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(\n\t\te: viewEvents.ViewConfigurationChangedEvent,\n\t): boolean {\n\t\tconst newOptions = new WhitespaceOptions(this._context.configuration);\n\t\tif (this._options.equals(newOptions)) {\n\t\t\treturn e.hasChanged(EditorOption.layoutInfo);\n\t\t}\n\t\tthis._options = newOptions;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(\n\t\te: viewEvents.ViewCursorStateChangedEvent,\n\t): boolean {\n\t\tthis._selection = e.selections;\n\t\tif (this._options.renderWhitespace === \"selection\") {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(\n\t\te: viewEvents.ViewDecorationsChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(\n\t\te: viewEvents.ViewLinesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(\n\t\te: viewEvents.ViewLinesDeletedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(\n\t\te: viewEvents.ViewLinesInsertedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(\n\t\te: viewEvents.ViewScrollChangedEvent,\n\t): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(\n\t\te: viewEvents.ViewZonesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._options.renderWhitespace === \"none\") {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst startLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst endLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst lineCount = endLineNumber - startLineNumber + 1;\n\t\tconst needed = new Array<boolean>(lineCount);\n\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\tneeded[i] = true;\n\t\t}\n\t\tconst viewportData =\n\t\t\tthis._context.viewModel.getMinimapLinesRenderingData(\n\t\t\t\tctx.viewportData.startLineNumber,\n\t\t\t\tctx.viewportData.endLineNumber,\n\t\t\t\tneeded,\n\t\t\t);\n\n\t\tthis._renderResult = [];\n\t\tfor (\n\t\t\tlet lineNumber = ctx.viewportData.startLineNumber;\n\t\t\tlineNumber <= ctx.viewportData.endLineNumber;\n\t\t\tlineNumber++\n\t\t) {\n\t\t\tconst lineIndex = lineNumber - ctx.viewportData.startLineNumber;\n\t\t\tconst lineData = viewportData.data[lineIndex]!;\n\n\t\t\tlet selectionsOnLine: LineRange[] | null = null;\n\t\t\tif (this._options.renderWhitespace === \"selection\") {\n\t\t\t\tconst selections = this._selection;\n\t\t\t\tfor (const selection of selections) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tselection.endLineNumber < lineNumber ||\n\t\t\t\t\t\tselection.startLineNumber > lineNumber\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Selection does not intersect line\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst startColumn =\n\t\t\t\t\t\tselection.startLineNumber === lineNumber\n\t\t\t\t\t\t\t? selection.startColumn\n\t\t\t\t\t\t\t: lineData.minColumn;\n\t\t\t\t\tconst endColumn =\n\t\t\t\t\t\tselection.endLineNumber === lineNumber\n\t\t\t\t\t\t\t? selection.endColumn\n\t\t\t\t\t\t\t: lineData.maxColumn;\n\n\t\t\t\t\tif (startColumn < endColumn) {\n\t\t\t\t\t\tif (!selectionsOnLine) {\n\t\t\t\t\t\t\tselectionsOnLine = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectionsOnLine.push(\n\t\t\t\t\t\t\tnew LineRange(startColumn - 1, endColumn - 1),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._renderResult[lineIndex] = this._applyRenderWhitespace(\n\t\t\t\tctx,\n\t\t\t\tlineNumber,\n\t\t\t\tselectionsOnLine,\n\t\t\t\tlineData,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _applyRenderWhitespace(\n\t\tctx: RenderingContext,\n\t\tlineNumber: number,\n\t\tselections: LineRange[] | null,\n\t\tlineData: ViewLineData,\n\t): string {\n\t\tif (this._options.renderWhitespace === \"selection\" && !selections) {\n\t\t\treturn \"\";\n\t\t}\n\t\tif (\n\t\t\tthis._options.renderWhitespace === \"trailing\" &&\n\t\t\tlineData.continuesWithWrappedLine\n\t\t) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst color = this._context.theme.getColor(editorWhitespaces);\n\t\tconst USE_SVG = this._options.renderWithSVG;\n\n\t\tconst lineContent = lineData.content;\n\t\tconst len =\n\t\t\tthis._options.stopRenderingLineAfter === -1\n\t\t\t\t? lineContent.length\n\t\t\t\t: Math.min(\n\t\t\t\t\t\tthis._options.stopRenderingLineAfter,\n\t\t\t\t\t\tlineContent.length,\n\t\t\t\t\t);\n\t\tconst continuesWithWrappedLine = lineData.continuesWithWrappedLine;\n\t\tconst fauxIndentLength = lineData.minColumn - 1;\n\t\tconst onlyBoundary = this._options.renderWhitespace === \"boundary\";\n\t\tconst onlyTrailing = this._options.renderWhitespace === \"trailing\";\n\t\tconst lineHeight = this._options.lineHeight;\n\t\tconst middotWidth = this._options.middotWidth;\n\t\tconst wsmiddotWidth = this._options.wsmiddotWidth;\n\t\tconst spaceWidth = this._options.spaceWidth;\n\t\tconst wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n\t\tconst middotDiff = Math.abs(middotWidth - spaceWidth);\n\n\t\t// U+2E31 - WORD SEPARATOR MIDDLE DOT\n\t\t// U+00B7 - MIDDLE DOT\n\t\tconst renderSpaceCharCode = wsmiddotDiff < middotDiff ? 0x2e31 : 0xb7;\n\n\t\tconst canUseHalfwidthRightwardsArrow =\n\t\t\tthis._options.canUseHalfwidthRightwardsArrow;\n\n\t\tlet result = \"\";\n\n\t\tlet lineIsEmptyOrWhitespace = false;\n\t\tlet firstNonWhitespaceIndex =\n\t\t\tstrings.firstNonWhitespaceIndex(lineContent);\n\t\tlet lastNonWhitespaceIndex: number;\n\t\tif (firstNonWhitespaceIndex === -1) {\n\t\t\tlineIsEmptyOrWhitespace = true;\n\t\t\tfirstNonWhitespaceIndex = len;\n\t\t\tlastNonWhitespaceIndex = len;\n\t\t} else {\n\t\t\tlastNonWhitespaceIndex =\n\t\t\t\tstrings.lastNonWhitespaceIndex(lineContent);\n\t\t}\n\n\t\tlet currentSelectionIndex = 0;\n\t\tlet currentSelection = selections && selections[currentSelectionIndex];\n\t\tlet maxLeft = 0;\n\n\t\tfor (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n\t\t\tconst chCode = lineContent.charCodeAt(charIndex);\n\n\t\t\tif (currentSelection && charIndex >= currentSelection.endOffset) {\n\t\t\t\tcurrentSelectionIndex++;\n\t\t\t\tcurrentSelection =\n\t\t\t\t\tselections && selections[currentSelectionIndex];\n\t\t\t}\n\n\t\t\tif (chCode !== CharCode.Tab && chCode !== CharCode.Space) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tonlyTrailing &&\n\t\t\t\t!lineIsEmptyOrWhitespace &&\n\t\t\t\tcharIndex <= lastNonWhitespaceIndex\n\t\t\t) {\n\t\t\t\t// If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tonlyBoundary &&\n\t\t\t\tcharIndex >= firstNonWhitespaceIndex &&\n\t\t\t\tcharIndex <= lastNonWhitespaceIndex &&\n\t\t\t\tchCode === CharCode.Space\n\t\t\t) {\n\t\t\t\t// rendering only boundary whitespace\n\t\t\t\tconst prevChCode =\n\t\t\t\t\tcharIndex - 1 >= 0\n\t\t\t\t\t\t? lineContent.charCodeAt(charIndex - 1)\n\t\t\t\t\t\t: CharCode.Null;\n\t\t\t\tconst nextChCode =\n\t\t\t\t\tcharIndex + 1 < len\n\t\t\t\t\t\t? lineContent.charCodeAt(charIndex + 1)\n\t\t\t\t\t\t: CharCode.Null;\n\t\t\t\tif (\n\t\t\t\t\tprevChCode !== CharCode.Space &&\n\t\t\t\t\tnextChCode !== CharCode.Space\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tonlyBoundary &&\n\t\t\t\tcontinuesWithWrappedLine &&\n\t\t\t\tcharIndex === len - 1\n\t\t\t) {\n\t\t\t\tconst prevCharCode =\n\t\t\t\t\tcharIndex - 1 >= 0\n\t\t\t\t\t\t? lineContent.charCodeAt(charIndex - 1)\n\t\t\t\t\t\t: CharCode.Null;\n\t\t\t\tconst isSingleTrailingSpace =\n\t\t\t\t\tchCode === CharCode.Space &&\n\t\t\t\t\tprevCharCode !== CharCode.Space &&\n\t\t\t\t\tprevCharCode !== CharCode.Tab;\n\t\t\t\tif (isSingleTrailingSpace) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tselections &&\n\t\t\t\t(!currentSelection ||\n\t\t\t\t\tcurrentSelection.startOffset > charIndex ||\n\t\t\t\t\tcurrentSelection.endOffset <= charIndex)\n\t\t\t) {\n\t\t\t\t// If rendering whitespace on selection, check that the charIndex falls within a selection\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(\n\t\t\t\tnew Position(lineNumber, charIndex + 1),\n\t\t\t);\n\t\t\tif (!visibleRange) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (USE_SVG) {\n\t\t\t\tmaxLeft = Math.max(maxLeft, visibleRange.left);\n\t\t\t\tif (chCode === CharCode.Tab) {\n\t\t\t\t\tresult += this._renderArrow(\n\t\t\t\t\t\tlineHeight,\n\t\t\t\t\t\tspaceWidth,\n\t\t\t\t\t\tvisibleRange.left,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tresult += `<circle cx=\"${(visibleRange.left + spaceWidth / 2).toFixed(2)}\" cy=\"${(lineHeight / 2).toFixed(2)}\" r=\"${(spaceWidth / 7).toFixed(2)}\" />`;\n\t\t\t\t}\n\t\t\t} else if (chCode === CharCode.Tab) {\n\t\t\t\tresult += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${canUseHalfwidthRightwardsArrow ? String.fromCharCode(0xffeb) : String.fromCharCode(0x2192)}</div>`;\n\t\t\t} else {\n\t\t\t\tresult += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${String.fromCharCode(renderSpaceCharCode)}</div>`;\n\t\t\t}\n\t\t}\n\n\t\tif (USE_SVG) {\n\t\t\tmaxLeft = Math.round(maxLeft + spaceWidth);\n\t\t\treturn (\n\t\t\t\t`<svg style=\"bottom:0;position:absolute;width:${maxLeft}px;height:${lineHeight}px\" viewBox=\"0 0 ${maxLeft} ${lineHeight}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"${color}\">` +\n\t\t\t\tresult +\n\t\t\t\t`</svg>`\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _renderArrow(\n\t\tlineHeight: number,\n\t\tspaceWidth: number,\n\t\tleft: number,\n\t): string {\n\t\tconst strokeWidth = spaceWidth / 7;\n\t\tconst width = spaceWidth;\n\t\tconst dy = lineHeight / 2;\n\t\tconst dx = left;\n\n\t\tconst p1 = { x: 0, y: strokeWidth / 2 };\n\t\tconst p2 = { x: (100 / 125) * width, y: p1.y };\n\t\tconst p3 = { x: p2.x - 0.2 * p2.x, y: p2.y + 0.2 * p2.x };\n\t\tconst p4 = { x: p3.x + 0.1 * p2.x, y: p3.y + 0.1 * p2.x };\n\t\tconst p5 = { x: p4.x + 0.35 * p2.x, y: p4.y - 0.35 * p2.x };\n\t\tconst p6 = { x: p5.x, y: -p5.y };\n\t\tconst p7 = { x: p4.x, y: -p4.y };\n\t\tconst p8 = { x: p3.x, y: -p3.y };\n\t\tconst p9 = { x: p2.x, y: -p2.y };\n\t\tconst p10 = { x: p1.x, y: -p1.y };\n\n\t\tconst p = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10];\n\t\tconst parts = p\n\t\t\t.map((p) => `${(dx + p.x).toFixed(2)} ${(dy + p.y).toFixed(2)}`)\n\t\t\t.join(\" L \");\n\t\treturn `<path d=\"M ${parts}\" />`;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nclass WhitespaceOptions {\n\tpublic readonly renderWhitespace:\n\t\t| \"none\"\n\t\t| \"boundary\"\n\t\t| \"selection\"\n\t\t| \"trailing\"\n\t\t| \"all\";\n\tpublic readonly renderWithSVG: boolean;\n\tpublic readonly spaceWidth: number;\n\tpublic readonly middotWidth: number;\n\tpublic readonly wsmiddotWidth: number;\n\tpublic readonly canUseHalfwidthRightwardsArrow: boolean;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stopRenderingLineAfter: number;\n\n\tconstructor(config: IEditorConfiguration) {\n\t\tconst options = config.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst experimentalWhitespaceRendering = options.get(\n\t\t\tEditorOption.experimentalWhitespaceRendering,\n\t\t);\n\t\tif (experimentalWhitespaceRendering === \"off\") {\n\t\t\t// whitespace is rendered in the view line\n\t\t\tthis.renderWhitespace = \"none\";\n\t\t\tthis.renderWithSVG = false;\n\t\t} else if (experimentalWhitespaceRendering === \"svg\") {\n\t\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t\tthis.renderWithSVG = true;\n\t\t} else {\n\t\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t\tthis.renderWithSVG = false;\n\t\t}\n\t\tthis.spaceWidth = fontInfo.spaceWidth;\n\t\tthis.middotWidth = fontInfo.middotWidth;\n\t\tthis.wsmiddotWidth = fontInfo.wsmiddotWidth;\n\t\tthis.canUseHalfwidthRightwardsArrow =\n\t\t\tfontInfo.canUseHalfwidthRightwardsArrow;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stopRenderingLineAfter = options.get(\n\t\t\tEditorOption.stopRenderingLineAfter,\n\t\t);\n\t}\n\n\tpublic equals(other: WhitespaceOptions): boolean {\n\t\treturn (\n\t\t\tthis.renderWhitespace === other.renderWhitespace &&\n\t\t\tthis.renderWithSVG === other.renderWithSVG &&\n\t\t\tthis.spaceWidth === other.spaceWidth &&\n\t\t\tthis.middotWidth === other.middotWidth &&\n\t\t\tthis.wsmiddotWidth === other.wsmiddotWidth &&\n\t\t\tthis.canUseHalfwidthRightwardsArrow ===\n\t\t\t\tother.canUseHalfwidthRightwardsArrow &&\n\t\t\tthis.lineHeight === other.lineHeight &&\n\t\t\tthis.stopRenderingLineAfter === other.stopRenderingLineAfter\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["p"]
}
