{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/whitespace/whitespace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './whitespace.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewLineData } from '../../../common/viewModel.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { LineRange } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorWhitespaces } from '../../../common/core/editorColorRegistry.js';\n\n/**\n * The whitespace overlay will visual certain whitespace depending on the\n * current editor configuration (boundary, selection, etc.).\n */\nexport class WhitespaceOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _options: WhitespaceOptions;\n\tprivate _selection: Selection[];\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._options = new WhitespaceOptions(this._context.configuration);\n\t\tthis._selection = [];\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst newOptions = new WhitespaceOptions(this._context.configuration);\n\t\tif (this._options.equals(newOptions)) {\n\t\t\treturn e.hasChanged(EditorOption.layoutInfo);\n\t\t}\n\t\tthis._options = newOptions;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selection = e.selections;\n\t\tif (this._options.renderWhitespace === 'selection') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._options.renderWhitespace === 'none') {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst startLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst endLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst lineCount = endLineNumber - startLineNumber + 1;\n\t\tconst needed = new Array<boolean>(lineCount);\n\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\tneeded[i] = true;\n\t\t}\n\t\tconst viewportData = this._context.viewModel.getMinimapLinesRenderingData(ctx.viewportData.startLineNumber, ctx.viewportData.endLineNumber, needed);\n\n\t\tthis._renderResult = [];\n\t\tfor (let lineNumber = ctx.viewportData.startLineNumber; lineNumber <= ctx.viewportData.endLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - ctx.viewportData.startLineNumber;\n\t\t\tconst lineData = viewportData.data[lineIndex]!;\n\n\t\t\tlet selectionsOnLine: LineRange[] | null = null;\n\t\t\tif (this._options.renderWhitespace === 'selection') {\n\t\t\t\tconst selections = this._selection;\n\t\t\t\tfor (const selection of selections) {\n\n\t\t\t\t\tif (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n\t\t\t\t\t\t// Selection does not intersect line\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n\t\t\t\t\tconst endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n\n\t\t\t\t\tif (startColumn < endColumn) {\n\t\t\t\t\t\tif (!selectionsOnLine) {\n\t\t\t\t\t\t\tselectionsOnLine = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._renderResult[lineIndex] = this._applyRenderWhitespace(ctx, lineNumber, selectionsOnLine, lineData);\n\t\t}\n\t}\n\n\tprivate _applyRenderWhitespace(ctx: RenderingContext, lineNumber: number, selections: LineRange[] | null, lineData: ViewLineData): string {\n\t\tif (this._options.renderWhitespace === 'selection' && !selections) {\n\t\t\treturn '';\n\t\t}\n\t\tif (this._options.renderWhitespace === 'trailing' && lineData.continuesWithWrappedLine) {\n\t\t\treturn '';\n\t\t}\n\t\tconst color = this._context.theme.getColor(editorWhitespaces);\n\t\tconst USE_SVG = this._options.renderWithSVG;\n\n\t\tconst lineContent = lineData.content;\n\t\tconst len = (this._options.stopRenderingLineAfter === -1 ? lineContent.length : Math.min(this._options.stopRenderingLineAfter, lineContent.length));\n\t\tconst continuesWithWrappedLine = lineData.continuesWithWrappedLine;\n\t\tconst fauxIndentLength = lineData.minColumn - 1;\n\t\tconst onlyBoundary = (this._options.renderWhitespace === 'boundary');\n\t\tconst onlyTrailing = (this._options.renderWhitespace === 'trailing');\n\t\tconst lineHeight = this._options.lineHeight;\n\t\tconst middotWidth = this._options.middotWidth;\n\t\tconst wsmiddotWidth = this._options.wsmiddotWidth;\n\t\tconst spaceWidth = this._options.spaceWidth;\n\t\tconst wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n\t\tconst middotDiff = Math.abs(middotWidth - spaceWidth);\n\n\t\t// U+2E31 - WORD SEPARATOR MIDDLE DOT\n\t\t// U+00B7 - MIDDLE DOT\n\t\tconst renderSpaceCharCode = (wsmiddotDiff < middotDiff ? 0x2E31 : 0xB7);\n\n\t\tconst canUseHalfwidthRightwardsArrow = this._options.canUseHalfwidthRightwardsArrow;\n\n\t\tlet result: string = '';\n\n\t\tlet lineIsEmptyOrWhitespace = false;\n\t\tlet firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n\t\tlet lastNonWhitespaceIndex: number;\n\t\tif (firstNonWhitespaceIndex === -1) {\n\t\t\tlineIsEmptyOrWhitespace = true;\n\t\t\tfirstNonWhitespaceIndex = len;\n\t\t\tlastNonWhitespaceIndex = len;\n\t\t} else {\n\t\t\tlastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n\t\t}\n\n\t\tlet currentSelectionIndex = 0;\n\t\tlet currentSelection = selections && selections[currentSelectionIndex];\n\t\tlet maxLeft = 0;\n\n\t\tfor (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n\t\t\tconst chCode = lineContent.charCodeAt(charIndex);\n\n\t\t\tif (currentSelection && charIndex >= currentSelection.endOffset) {\n\t\t\t\tcurrentSelectionIndex++;\n\t\t\t\tcurrentSelection = selections && selections[currentSelectionIndex];\n\t\t\t}\n\n\t\t\tif (chCode !== CharCode.Tab && chCode !== CharCode.Space) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (onlyTrailing && !lineIsEmptyOrWhitespace && charIndex <= lastNonWhitespaceIndex) {\n\t\t\t\t// If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (onlyBoundary && charIndex >= firstNonWhitespaceIndex && charIndex <= lastNonWhitespaceIndex && chCode === CharCode.Space) {\n\t\t\t\t// rendering only boundary whitespace\n\t\t\t\tconst prevChCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : CharCode.Null);\n\t\t\t\tconst nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : CharCode.Null);\n\t\t\t\tif (prevChCode !== CharCode.Space && nextChCode !== CharCode.Space) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (onlyBoundary && continuesWithWrappedLine && charIndex === len - 1) {\n\t\t\t\tconst prevCharCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : CharCode.Null);\n\t\t\t\tconst isSingleTrailingSpace = (chCode === CharCode.Space && (prevCharCode !== CharCode.Space && prevCharCode !== CharCode.Tab));\n\t\t\t\tif (isSingleTrailingSpace) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selections && (!currentSelection || currentSelection.startOffset > charIndex || currentSelection.endOffset <= charIndex)) {\n\t\t\t\t// If rendering whitespace on selection, check that the charIndex falls within a selection\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(new Position(lineNumber, charIndex + 1));\n\t\t\tif (!visibleRange) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (USE_SVG) {\n\t\t\t\tmaxLeft = Math.max(maxLeft, visibleRange.left);\n\t\t\t\tif (chCode === CharCode.Tab) {\n\t\t\t\t\tresult += this._renderArrow(lineHeight, spaceWidth, visibleRange.left);\n\t\t\t\t} else {\n\t\t\t\t\tresult += `<circle cx=\"${(visibleRange.left + spaceWidth / 2).toFixed(2)}\" cy=\"${(lineHeight / 2).toFixed(2)}\" r=\"${(spaceWidth / 7).toFixed(2)}\" />`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (chCode === CharCode.Tab) {\n\t\t\t\t\tresult += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${canUseHalfwidthRightwardsArrow ? String.fromCharCode(0xFFEB) : String.fromCharCode(0x2192)}</div>`;\n\t\t\t\t} else {\n\t\t\t\t\tresult += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${String.fromCharCode(renderSpaceCharCode)}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (USE_SVG) {\n\t\t\tmaxLeft = Math.round(maxLeft + spaceWidth);\n\t\t\treturn (\n\t\t\t\t`<svg style=\"bottom:0;position:absolute;width:${maxLeft}px;height:${lineHeight}px\" viewBox=\"0 0 ${maxLeft} ${lineHeight}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"${color}\">`\n\t\t\t\t+ result\n\t\t\t\t+ `</svg>`\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _renderArrow(lineHeight: number, spaceWidth: number, left: number): string {\n\t\tconst strokeWidth = spaceWidth / 7;\n\t\tconst width = spaceWidth;\n\t\tconst dy = lineHeight / 2;\n\t\tconst dx = left;\n\n\t\tconst p1 = { x: 0, y: strokeWidth / 2 };\n\t\tconst p2 = { x: 100 / 125 * width, y: p1.y };\n\t\tconst p3 = { x: p2.x - 0.2 * p2.x, y: p2.y + 0.2 * p2.x };\n\t\tconst p4 = { x: p3.x + 0.1 * p2.x, y: p3.y + 0.1 * p2.x };\n\t\tconst p5 = { x: p4.x + 0.35 * p2.x, y: p4.y - 0.35 * p2.x };\n\t\tconst p6 = { x: p5.x, y: -p5.y };\n\t\tconst p7 = { x: p4.x, y: -p4.y };\n\t\tconst p8 = { x: p3.x, y: -p3.y };\n\t\tconst p9 = { x: p2.x, y: -p2.y };\n\t\tconst p10 = { x: p1.x, y: -p1.y };\n\n\t\tconst p = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10];\n\t\tconst parts = p.map((p) => `${(dx + p.x).toFixed(2)} ${(dy + p.y).toFixed(2)}`).join(' L ');\n\t\treturn `<path d=\"M ${parts}\" />`;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nclass WhitespaceOptions {\n\n\tpublic readonly renderWhitespace: 'none' | 'boundary' | 'selection' | 'trailing' | 'all';\n\tpublic readonly renderWithSVG: boolean;\n\tpublic readonly spaceWidth: number;\n\tpublic readonly middotWidth: number;\n\tpublic readonly wsmiddotWidth: number;\n\tpublic readonly canUseHalfwidthRightwardsArrow: boolean;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stopRenderingLineAfter: number;\n\n\tconstructor(config: IEditorConfiguration) {\n\t\tconst options = config.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst experimentalWhitespaceRendering = options.get(EditorOption.experimentalWhitespaceRendering);\n\t\tif (experimentalWhitespaceRendering === 'off') {\n\t\t\t// whitespace is rendered in the view line\n\t\t\tthis.renderWhitespace = 'none';\n\t\t\tthis.renderWithSVG = false;\n\t\t} else if (experimentalWhitespaceRendering === 'svg') {\n\t\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t\tthis.renderWithSVG = true;\n\t\t} else {\n\t\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t\tthis.renderWithSVG = false;\n\t\t}\n\t\tthis.spaceWidth = fontInfo.spaceWidth;\n\t\tthis.middotWidth = fontInfo.middotWidth;\n\t\tthis.wsmiddotWidth = fontInfo.wsmiddotWidth;\n\t\tthis.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stopRenderingLineAfter = options.get(EditorOption.stopRenderingLineAfter);\n\t}\n\n\tpublic equals(other: WhitespaceOptions): boolean {\n\t\treturn (\n\t\t\tthis.renderWhitespace === other.renderWhitespace\n\t\t\t&& this.renderWithSVG === other.renderWithSVG\n\t\t\t&& this.spaceWidth === other.spaceWidth\n\t\t\t&& this.middotWidth === other.middotWidth\n\t\t\t&& this.wsmiddotWidth === other.wsmiddotWidth\n\t\t\t&& this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.stopRenderingLineAfter === other.stopRenderingLineAfter\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAKA,OAAO;AACP,SAAS,0BAA0B;AACnC,SAAS,iBAAiB;AAC1B,SAAS,wBAAwB;AACjC,SAAS,mBAAmB;AAC5B,YAAY,gBAAgB;AAC5B,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,SAAS,4BAA4B;AACrC,YAAY,aAAa;AACzB,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAM3B,MAAM,0BAA0B,mBAAmB;AAAA,EAxB1D,OAwB0D;AAAA;AAAA;AAAA,EAExC;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EAER,YAAY,SAAsB;AACjC,UAAM;AACN,SAAK,WAAW;AAChB,SAAK,WAAW,IAAI,kBAAkB,KAAK,SAAS,aAAa;AACjE,SAAK,aAAa,CAAC;AACnB,SAAK,gBAAgB;AACrB,SAAK,SAAS,gBAAgB,IAAI;AAAA,EACnC;AAAA,EAEgB,UAAgB;AAC/B,SAAK,SAAS,mBAAmB,IAAI;AACrC,SAAK,gBAAgB;AACrB,UAAM,QAAQ;AAAA,EACf;AAAA;AAAA,EAIgB,uBAAuB,GAAsD;AAC5F,UAAM,aAAa,IAAI,kBAAkB,KAAK,SAAS,aAAa;AACpE,QAAI,KAAK,SAAS,OAAO,UAAU,GAAG;AACrC,aAAO,EAAE,WAAW,aAAa,UAAU;AAAA,IAC5C;AACA,SAAK,WAAW;AAChB,WAAO;AAAA,EACR;AAAA,EACgB,qBAAqB,GAAoD;AACxF,SAAK,aAAa,EAAE;AACpB,QAAI,KAAK,SAAS,qBAAqB,aAAa;AACnD,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EACgB,qBAAqB,GAAoD;AACxF,WAAO;AAAA,EACR;AAAA,EACgB,UAAU,GAAyC;AAClE,WAAO;AAAA,EACR;AAAA,EACgB,eAAe,GAA8C;AAC5E,WAAO;AAAA,EACR;AAAA,EACgB,eAAe,GAA8C;AAC5E,WAAO;AAAA,EACR;AAAA,EACgB,gBAAgB,GAA+C;AAC9E,WAAO;AAAA,EACR;AAAA,EACgB,gBAAgB,GAA+C;AAC9E,WAAO,EAAE;AAAA,EACV;AAAA,EACgB,eAAe,GAA8C;AAC5E,WAAO;AAAA,EACR;AAAA;AAAA,EAGO,cAAc,KAA6B;AACjD,QAAI,KAAK,SAAS,qBAAqB,QAAQ;AAC9C,WAAK,gBAAgB;AACrB;AAAA,IACD;AAEA,UAAM,kBAAkB,IAAI,aAAa;AACzC,UAAM,gBAAgB,IAAI,aAAa;AACvC,UAAM,YAAY,gBAAgB,kBAAkB;AACpD,UAAM,SAAS,IAAI,MAAe,SAAS;AAC3C,aAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AACnC,aAAO,CAAC,IAAI;AAAA,IACb;AACA,UAAM,eAAe,KAAK,SAAS,UAAU,6BAA6B,IAAI,aAAa,iBAAiB,IAAI,aAAa,eAAe,MAAM;AAElJ,SAAK,gBAAgB,CAAC;AACtB,aAAS,aAAa,IAAI,aAAa,iBAAiB,cAAc,IAAI,aAAa,eAAe,cAAc;AACnH,YAAM,YAAY,aAAa,IAAI,aAAa;AAChD,YAAM,WAAW,aAAa,KAAK,SAAS;AAE5C,UAAI,mBAAuC;AAC3C,UAAI,KAAK,SAAS,qBAAqB,aAAa;AACnD,cAAM,aAAa,KAAK;AACxB,mBAAW,aAAa,YAAY;AAEnC,cAAI,UAAU,gBAAgB,cAAc,UAAU,kBAAkB,YAAY;AAEnF;AAAA,UACD;AAEA,gBAAM,cAAe,UAAU,oBAAoB,aAAa,UAAU,cAAc,SAAS;AACjG,gBAAM,YAAa,UAAU,kBAAkB,aAAa,UAAU,YAAY,SAAS;AAE3F,cAAI,cAAc,WAAW;AAC5B,gBAAI,CAAC,kBAAkB;AACtB,iCAAmB,CAAC;AAAA,YACrB;AACA,6BAAiB,KAAK,IAAI,UAAU,cAAc,GAAG,YAAY,CAAC,CAAC;AAAA,UACpE;AAAA,QACD;AAAA,MACD;AAEA,WAAK,cAAc,SAAS,IAAI,KAAK,uBAAuB,KAAK,YAAY,kBAAkB,QAAQ;AAAA,IACxG;AAAA,EACD;AAAA,EAEQ,uBAAuB,KAAuB,YAAoB,YAAgC,UAAgC;AACzI,QAAI,KAAK,SAAS,qBAAqB,eAAe,CAAC,YAAY;AAClE,aAAO;AAAA,IACR;AACA,QAAI,KAAK,SAAS,qBAAqB,cAAc,SAAS,0BAA0B;AACvF,aAAO;AAAA,IACR;AACA,UAAM,QAAQ,KAAK,SAAS,MAAM,SAAS,iBAAiB;AAC5D,UAAM,UAAU,KAAK,SAAS;AAE9B,UAAM,cAAc,SAAS;AAC7B,UAAM,MAAO,KAAK,SAAS,2BAA2B,KAAK,YAAY,SAAS,KAAK,IAAI,KAAK,SAAS,wBAAwB,YAAY,MAAM;AACjJ,UAAM,2BAA2B,SAAS;AAC1C,UAAM,mBAAmB,SAAS,YAAY;AAC9C,UAAM,eAAgB,KAAK,SAAS,qBAAqB;AACzD,UAAM,eAAgB,KAAK,SAAS,qBAAqB;AACzD,UAAM,aAAa,KAAK,SAAS;AACjC,UAAM,cAAc,KAAK,SAAS;AAClC,UAAM,gBAAgB,KAAK,SAAS;AACpC,UAAM,aAAa,KAAK,SAAS;AACjC,UAAM,eAAe,KAAK,IAAI,gBAAgB,UAAU;AACxD,UAAM,aAAa,KAAK,IAAI,cAAc,UAAU;AAIpD,UAAM,sBAAuB,eAAe,aAAa,QAAS;AAElE,UAAM,iCAAiC,KAAK,SAAS;AAErD,QAAI,SAAiB;AAErB,QAAI,0BAA0B;AAC9B,QAAI,0BAA0B,QAAQ,wBAAwB,WAAW;AACzE,QAAI;AACJ,QAAI,4BAA4B,IAAI;AACnC,gCAA0B;AAC1B,gCAA0B;AAC1B,+BAAyB;AAAA,IAC1B,OAAO;AACN,+BAAyB,QAAQ,uBAAuB,WAAW;AAAA,IACpE;AAEA,QAAI,wBAAwB;AAC5B,QAAI,mBAAmB,cAAc,WAAW,qBAAqB;AACrE,QAAI,UAAU;AAEd,aAAS,YAAY,kBAAkB,YAAY,KAAK,aAAa;AACpE,YAAM,SAAS,YAAY,WAAW,SAAS;AAE/C,UAAI,oBAAoB,aAAa,iBAAiB,WAAW;AAChE;AACA,2BAAmB,cAAc,WAAW,qBAAqB;AAAA,MAClE;AAEA,UAAI,WAAW,SAAS,OAAO,WAAW,SAAS,OAAO;AACzD;AAAA,MACD;AAEA,UAAI,gBAAgB,CAAC,2BAA2B,aAAa,wBAAwB;AAEpF;AAAA,MACD;AAEA,UAAI,gBAAgB,aAAa,2BAA2B,aAAa,0BAA0B,WAAW,SAAS,OAAO;AAE7H,cAAM,aAAc,YAAY,KAAK,IAAI,YAAY,WAAW,YAAY,CAAC,IAAI,SAAS;AAC1F,cAAM,aAAc,YAAY,IAAI,MAAM,YAAY,WAAW,YAAY,CAAC,IAAI,SAAS;AAC3F,YAAI,eAAe,SAAS,SAAS,eAAe,SAAS,OAAO;AACnE;AAAA,QACD;AAAA,MACD;AAEA,UAAI,gBAAgB,4BAA4B,cAAc,MAAM,GAAG;AACtE,cAAM,eAAgB,YAAY,KAAK,IAAI,YAAY,WAAW,YAAY,CAAC,IAAI,SAAS;AAC5F,cAAM,wBAAyB,WAAW,SAAS,UAAU,iBAAiB,SAAS,SAAS,iBAAiB,SAAS;AAC1H,YAAI,uBAAuB;AAC1B;AAAA,QACD;AAAA,MACD;AAEA,UAAI,eAAe,CAAC,oBAAoB,iBAAiB,cAAc,aAAa,iBAAiB,aAAa,YAAY;AAE7H;AAAA,MACD;AAEA,YAAM,eAAe,IAAI,wBAAwB,IAAI,SAAS,YAAY,YAAY,CAAC,CAAC;AACxF,UAAI,CAAC,cAAc;AAClB;AAAA,MACD;AAEA,UAAI,SAAS;AACZ,kBAAU,KAAK,IAAI,SAAS,aAAa,IAAI;AAC7C,YAAI,WAAW,SAAS,KAAK;AAC5B,oBAAU,KAAK,aAAa,YAAY,YAAY,aAAa,IAAI;AAAA,QACtE,OAAO;AACN,oBAAU,gBAAgB,aAAa,OAAO,aAAa,GAAG,QAAQ,CAAC,CAAC,UAAU,aAAa,GAAG,QAAQ,CAAC,CAAC,SAAS,aAAa,GAAG,QAAQ,CAAC,CAAC;AAAA,QAChJ;AAAA,MACD,OAAO;AACN,YAAI,WAAW,SAAS,KAAK;AAC5B,oBAAU,gCAAgC,aAAa,IAAI,aAAa,UAAU,QAAQ,iCAAiC,OAAO,aAAa,KAAM,IAAI,OAAO,aAAa,IAAM,CAAC;AAAA,QACrL,OAAO;AACN,oBAAU,gCAAgC,aAAa,IAAI,aAAa,UAAU,QAAQ,OAAO,aAAa,mBAAmB,CAAC;AAAA,QACnI;AAAA,MACD;AAAA,IACD;AAEA,QAAI,SAAS;AACZ,gBAAU,KAAK,MAAM,UAAU,UAAU;AACzC,aACC,gDAAgD,OAAO,aAAa,UAAU,oBAAoB,OAAO,IAAI,UAAU,8CAA8C,KAAK,OACxK,SACA;AAAA,IAEJ;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,aAAa,YAAoB,YAAoB,MAAsB;AAClF,UAAM,cAAc,aAAa;AACjC,UAAM,QAAQ;AACd,UAAM,KAAK,aAAa;AACxB,UAAM,KAAK;AAEX,UAAM,KAAK,EAAE,GAAG,GAAG,GAAG,cAAc,EAAE;AACtC,UAAM,KAAK,EAAE,GAAG,MAAM,MAAM,OAAO,GAAG,GAAG,EAAE;AAC3C,UAAM,KAAK,EAAE,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,EAAE;AACxD,UAAM,KAAK,EAAE,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,EAAE;AACxD,UAAM,KAAK,EAAE,GAAG,GAAG,IAAI,OAAO,GAAG,GAAG,GAAG,GAAG,IAAI,OAAO,GAAG,EAAE;AAC1D,UAAM,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE;AAC/B,UAAM,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE;AAC/B,UAAM,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE;AAC/B,UAAM,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE;AAC/B,UAAM,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE;AAEhC,UAAM,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG;AAClD,UAAM,QAAQ,EAAE,IAAI,CAACA,QAAM,IAAI,KAAKA,IAAE,GAAG,QAAQ,CAAC,CAAC,KAAK,KAAKA,IAAE,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,KAAK,KAAK;AAC1F,WAAO,cAAc,KAAK;AAAA,EAC3B;AAAA,EAEO,OAAO,iBAAyB,YAA4B;AAClE,QAAI,CAAC,KAAK,eAAe;AACxB,aAAO;AAAA,IACR;AACA,UAAM,YAAY,aAAa;AAC/B,QAAI,YAAY,KAAK,aAAa,KAAK,cAAc,QAAQ;AAC5D,aAAO;AAAA,IACR;AACA,WAAO,KAAK,cAAc,SAAS;AAAA,EACpC;AACD;AAEA,MAAM,kBAAkB;AAAA,EA5RxB,OA4RwB;AAAA;AAAA;AAAA,EAEP;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEhB,YAAY,QAA8B;AACzC,UAAM,UAAU,OAAO;AACvB,UAAM,WAAW,QAAQ,IAAI,aAAa,QAAQ;AAClD,UAAM,kCAAkC,QAAQ,IAAI,aAAa,+BAA+B;AAChG,QAAI,oCAAoC,OAAO;AAE9C,WAAK,mBAAmB;AACxB,WAAK,gBAAgB;AAAA,IACtB,WAAW,oCAAoC,OAAO;AACrD,WAAK,mBAAmB,QAAQ,IAAI,aAAa,gBAAgB;AACjE,WAAK,gBAAgB;AAAA,IACtB,OAAO;AACN,WAAK,mBAAmB,QAAQ,IAAI,aAAa,gBAAgB;AACjE,WAAK,gBAAgB;AAAA,IACtB;AACA,SAAK,aAAa,SAAS;AAC3B,SAAK,cAAc,SAAS;AAC5B,SAAK,gBAAgB,SAAS;AAC9B,SAAK,iCAAiC,SAAS;AAC/C,SAAK,aAAa,QAAQ,IAAI,aAAa,UAAU;AACrD,SAAK,yBAAyB,QAAQ,IAAI,aAAa,sBAAsB;AAAA,EAC9E;AAAA,EAEO,OAAO,OAAmC;AAChD,WACC,KAAK,qBAAqB,MAAM,oBAC7B,KAAK,kBAAkB,MAAM,iBAC7B,KAAK,eAAe,MAAM,cAC1B,KAAK,gBAAgB,MAAM,eAC3B,KAAK,kBAAkB,MAAM,iBAC7B,KAAK,mCAAmC,MAAM,kCAC9C,KAAK,eAAe,MAAM,cAC1B,KAAK,2BAA2B,MAAM;AAAA,EAE3C;AACD;",
  "names": ["p"]
}
