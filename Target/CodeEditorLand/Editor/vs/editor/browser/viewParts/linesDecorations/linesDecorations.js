import"./linesDecorations.css";import{EditorOption as p}from"../../../common/config/editorOptions.js";import{DecorationToRender as h,DedupOverlay as b}from"../glyphMargin/glyphMargin.js";class L extends b{_context;_decorationsLeft;_decorationsWidth;_renderResult;constructor(e){super(),this._context=e;const t=this._context.configuration.options.get(p.layoutInfo);this._decorationsLeft=t.decorationsLeft,this._decorationsWidth=t.decorationsWidth,this._renderResult=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}onConfigurationChanged(e){const t=this._context.configuration.options.get(p.layoutInfo);return this._decorationsLeft=t.decorationsLeft,this._decorationsWidth=t.decorationsWidth,!0}onDecorationsChanged(e){return!0}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged}onZonesChanged(e){return!0}_getDecorations(e){const o=e.getDecorationsInViewport(),t=[];let d=0;for(let r=0,l=o.length;r<l;r++){const n=o[r],s=n.options.linesDecorationsClassName,i=n.options.zIndex;s&&(t[d++]=new h(n.range.startLineNumber,n.range.endLineNumber,s,n.options.linesDecorationsTooltip??null,i));const a=n.options.firstLineDecorationClassName;a&&(t[d++]=new h(n.range.startLineNumber,n.range.startLineNumber,a,n.options.linesDecorationsTooltip??null,i))}return t}prepareRender(e){const o=e.visibleRange.startLineNumber,t=e.visibleRange.endLineNumber,d=this._render(o,t,this._getDecorations(e)),r=this._decorationsLeft.toString(),l=this._decorationsWidth.toString(),n='" style="left:'+r+"px;width:"+l+'px;"></div>',s=[];for(let i=o;i<=t;i++){const a=i-o,g=d[a].getDecorations();let v="";for(const c of g){let u='<div class="cldr '+c.className;c.tooltip!==null&&(u+='" title="'+c.tooltip),u+=n,v+=u}s[a]=v}this._renderResult=s}render(e,o){return this._renderResult?this._renderResult[o-e]:""}}export{L as LinesDecorationsOverlay};
