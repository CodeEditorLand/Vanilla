{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/lineNumbers/lineNumbers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./lineNumbers.css\";\nimport * as platform from \"../../../../base/common/platform.js\";\nimport { registerThemingParticipant } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tEditorOption,\n\tRenderLineNumbersType,\n} from \"../../../common/config/editorOptions.js\";\nimport {\n\teditorDimmedLineNumber,\n\teditorLineNumbers,\n} from \"../../../common/core/editorColorRegistry.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport type * as viewEvents from \"../../../common/viewEvents.js\";\nimport type { ViewContext } from \"../../../common/viewModel/viewContext.js\";\nimport { DynamicViewOverlay } from \"../../view/dynamicViewOverlay.js\";\nimport type { RenderingContext } from \"../../view/renderingContext.js\";\n\n/**\n * Renders line numbers to the left of the main view lines content.\n */\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n\tpublic static readonly CLASS_NAME = \"line-numbers\";\n\n\tprivate readonly _context: ViewContext;\n\n\tprivate _lineHeight!: number;\n\tprivate _renderLineNumbers!: RenderLineNumbersType;\n\tprivate _renderCustomLineNumbers!: ((lineNumber: number) => string) | null;\n\tprivate _renderFinalNewline!: \"off\" | \"on\" | \"dimmed\";\n\tprivate _lineNumbersLeft!: number;\n\tprivate _lineNumbersWidth!: number;\n\tprivate _lastCursorModelPosition: Position;\n\tprivate _renderResult: string[] | null;\n\tprivate _activeLineNumber: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tthis._readConfig();\n\n\t\tthis._lastCursorModelPosition = new Position(1, 1);\n\t\tthis._renderResult = null;\n\t\tthis._activeLineNumber = 1;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tprivate _readConfig(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tconst lineNumbers = options.get(EditorOption.lineNumbers);\n\t\tthis._renderLineNumbers = lineNumbers.renderType;\n\t\tthis._renderCustomLineNumbers = lineNumbers.renderFn;\n\t\tthis._renderFinalNewline = options.get(EditorOption.renderFinalNewline);\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n\t\tthis._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(\n\t\te: viewEvents.ViewConfigurationChangedEvent,\n\t): boolean {\n\t\tthis._readConfig();\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(\n\t\te: viewEvents.ViewCursorStateChangedEvent,\n\t): boolean {\n\t\tconst primaryViewPosition = e.selections[0].getPosition();\n\t\tthis._lastCursorModelPosition =\n\t\t\tthis._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(\n\t\t\t\tprimaryViewPosition,\n\t\t\t);\n\n\t\tlet shouldRender = false;\n\t\tif (this._activeLineNumber !== primaryViewPosition.lineNumber) {\n\t\t\tthis._activeLineNumber = primaryViewPosition.lineNumber;\n\t\t\tshouldRender = true;\n\t\t}\n\t\tif (\n\t\t\tthis._renderLineNumbers === RenderLineNumbersType.Relative ||\n\t\t\tthis._renderLineNumbers === RenderLineNumbersType.Interval\n\t\t) {\n\t\t\tshouldRender = true;\n\t\t}\n\t\treturn shouldRender;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(\n\t\te: viewEvents.ViewLinesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(\n\t\te: viewEvents.ViewLinesDeletedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(\n\t\te: viewEvents.ViewLinesInsertedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(\n\t\te: viewEvents.ViewScrollChangedEvent,\n\t): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(\n\t\te: viewEvents.ViewZonesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(\n\t\te: viewEvents.ViewDecorationsChangedEvent,\n\t): boolean {\n\t\treturn e.affectsLineNumber;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _getLineRenderLineNumber(viewLineNumber: number): string {\n\t\tconst modelPosition =\n\t\t\tthis._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(\n\t\t\t\tnew Position(viewLineNumber, 1),\n\t\t\t);\n\t\tif (modelPosition.column !== 1) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst modelLineNumber = modelPosition.lineNumber;\n\n\t\tif (this._renderCustomLineNumbers) {\n\t\t\treturn this._renderCustomLineNumbers(modelLineNumber);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Relative) {\n\t\t\tconst diff = Math.abs(\n\t\t\t\tthis._lastCursorModelPosition.lineNumber - modelLineNumber,\n\t\t\t);\n\t\t\tif (diff === 0) {\n\t\t\t\treturn (\n\t\t\t\t\t'<span class=\"relative-current-line-number\">' +\n\t\t\t\t\tmodelLineNumber +\n\t\t\t\t\t\"</span>\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn String(diff);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Interval) {\n\t\t\tif (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tif (modelLineNumber % 10 === 0) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tconst finalLineNumber = this._context.viewModel.getLineCount();\n\t\t\tif (modelLineNumber === finalLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\treturn \"\";\n\t\t}\n\n\t\treturn String(modelLineNumber);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Off) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineHeightClassName = platform.isLinux\n\t\t\t? this._lineHeight % 2 === 0\n\t\t\t\t? \" lh-even\"\n\t\t\t\t: \" lh-odd\"\n\t\t\t: \"\";\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tconst lineNoDecorations = this._context.viewModel\n\t\t\t.getDecorationsInViewport(ctx.visibleRange)\n\t\t\t.filter((d) => !!d.options.lineNumberClassName);\n\t\tlineNoDecorations.sort((a, b) =>\n\t\t\tRange.compareRangesUsingEnds(a.range, b.range),\n\t\t);\n\t\tlet decorationStartIndex = 0;\n\n\t\tconst lineCount = this._context.viewModel.getLineCount();\n\t\tconst output: string[] = [];\n\t\tfor (\n\t\t\tlet lineNumber = visibleStartLineNumber;\n\t\t\tlineNumber <= visibleEndLineNumber;\n\t\t\tlineNumber++\n\t\t) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\n\t\t\tlet renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n\t\t\tlet extraClassNames = \"\";\n\n\t\t\t// skip decorations whose end positions we've already passed\n\t\t\twhile (\n\t\t\t\tdecorationStartIndex < lineNoDecorations.length &&\n\t\t\t\tlineNoDecorations[decorationStartIndex].range.endLineNumber <\n\t\t\t\t\tlineNumber\n\t\t\t) {\n\t\t\t\tdecorationStartIndex++;\n\t\t\t}\n\t\t\tfor (\n\t\t\t\tlet i = decorationStartIndex;\n\t\t\t\ti < lineNoDecorations.length;\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tconst { range, options } = lineNoDecorations[i];\n\t\t\t\tif (range.startLineNumber <= lineNumber) {\n\t\t\t\t\textraClassNames += \" \" + options.lineNumberClassName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!renderLineNumber && !extraClassNames) {\n\t\t\t\toutput[lineIndex] = \"\";\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tlineNumber === lineCount &&\n\t\t\t\tthis._context.viewModel.getLineLength(lineNumber) === 0\n\t\t\t) {\n\t\t\t\t// this is the last line\n\t\t\t\tif (this._renderFinalNewline === \"off\") {\n\t\t\t\t\trenderLineNumber = \"\";\n\t\t\t\t}\n\t\t\t\tif (this._renderFinalNewline === \"dimmed\") {\n\t\t\t\t\textraClassNames += \" dimmed-line-number\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lineNumber === this._activeLineNumber) {\n\t\t\t\textraClassNames += \" active-line-number\";\n\t\t\t}\n\n\t\t\toutput[lineIndex] =\n\t\t\t\t`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassNames}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`;\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorLineNumbersColor = theme.getColor(editorLineNumbers);\n\tconst editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n\tif (editorDimmedLineNumberColor) {\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`,\n\t\t);\n\t} else if (editorLineNumbersColor) {\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`,\n\t\t);\n\t}\n});\n"],
  "mappings": ";;AAKA,OAAO;AACP,YAAY,cAAc;AAC1B,SAAS,kCAAkC;AAC3C;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB,SAAS,aAAa;AAGtB,SAAS,0BAA0B;AAM5B,MAAM,2BAA2B,mBAAmB;AAAA,EA1B3D,OA0B2D;AAAA;AAAA;AAAA,EAC1D,OAAuB,aAAa;AAAA,EAEnB;AAAA,EAET;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAER,YAAY,SAAsB;AACjC,UAAM;AACN,SAAK,WAAW;AAEhB,SAAK,YAAY;AAEjB,SAAK,2BAA2B,IAAI,SAAS,GAAG,CAAC;AACjD,SAAK,gBAAgB;AACrB,SAAK,oBAAoB;AACzB,SAAK,SAAS,gBAAgB,IAAI;AAAA,EACnC;AAAA,EAEQ,cAAoB;AAC3B,UAAM,UAAU,KAAK,SAAS,cAAc;AAC5C,SAAK,cAAc,QAAQ,IAAI,aAAa,UAAU;AACtD,UAAM,cAAc,QAAQ,IAAI,aAAa,WAAW;AACxD,SAAK,qBAAqB,YAAY;AACtC,SAAK,2BAA2B,YAAY;AAC5C,SAAK,sBAAsB,QAAQ,IAAI,aAAa,kBAAkB;AACtE,UAAM,aAAa,QAAQ,IAAI,aAAa,UAAU;AACtD,SAAK,mBAAmB,WAAW;AACnC,SAAK,oBAAoB,WAAW;AAAA,EACrC;AAAA,EAEgB,UAAgB;AAC/B,SAAK,SAAS,mBAAmB,IAAI;AACrC,SAAK,gBAAgB;AACrB,UAAM,QAAQ;AAAA,EACf;AAAA;AAAA,EAIgB,uBACf,GACU;AACV,SAAK,YAAY;AACjB,WAAO;AAAA,EACR;AAAA,EACgB,qBACf,GACU;AACV,UAAM,sBAAsB,EAAE,WAAW,CAAC,EAAE,YAAY;AACxD,SAAK,2BACJ,KAAK,SAAS,UAAU,qBAAqB;AAAA,MAC5C;AAAA,IACD;AAED,QAAI,eAAe;AACnB,QAAI,KAAK,sBAAsB,oBAAoB,YAAY;AAC9D,WAAK,oBAAoB,oBAAoB;AAC7C,qBAAe;AAAA,IAChB;AACA,QACC,KAAK,uBAAuB,sBAAsB,YAClD,KAAK,uBAAuB,sBAAsB,UACjD;AACD,qBAAe;AAAA,IAChB;AACA,WAAO;AAAA,EACR;AAAA,EACgB,UAAU,GAAyC;AAClE,WAAO;AAAA,EACR;AAAA,EACgB,eACf,GACU;AACV,WAAO;AAAA,EACR;AAAA,EACgB,eACf,GACU;AACV,WAAO;AAAA,EACR;AAAA,EACgB,gBACf,GACU;AACV,WAAO;AAAA,EACR;AAAA,EACgB,gBACf,GACU;AACV,WAAO,EAAE;AAAA,EACV;AAAA,EACgB,eACf,GACU;AACV,WAAO;AAAA,EACR;AAAA,EACgB,qBACf,GACU;AACV,WAAO,EAAE;AAAA,EACV;AAAA;AAAA,EAIQ,yBAAyB,gBAAgC;AAChE,UAAM,gBACL,KAAK,SAAS,UAAU,qBAAqB;AAAA,MAC5C,IAAI,SAAS,gBAAgB,CAAC;AAAA,IAC/B;AACD,QAAI,cAAc,WAAW,GAAG;AAC/B,aAAO;AAAA,IACR;AACA,UAAM,kBAAkB,cAAc;AAEtC,QAAI,KAAK,0BAA0B;AAClC,aAAO,KAAK,yBAAyB,eAAe;AAAA,IACrD;AAEA,QAAI,KAAK,uBAAuB,sBAAsB,UAAU;AAC/D,YAAM,OAAO,KAAK;AAAA,QACjB,KAAK,yBAAyB,aAAa;AAAA,MAC5C;AACA,UAAI,SAAS,GAAG;AACf,eACC,gDACA,kBACA;AAAA,MAEF;AACA,aAAO,OAAO,IAAI;AAAA,IACnB;AAEA,QAAI,KAAK,uBAAuB,sBAAsB,UAAU;AAC/D,UAAI,KAAK,yBAAyB,eAAe,iBAAiB;AACjE,eAAO,OAAO,eAAe;AAAA,MAC9B;AACA,UAAI,kBAAkB,OAAO,GAAG;AAC/B,eAAO,OAAO,eAAe;AAAA,MAC9B;AACA,YAAM,kBAAkB,KAAK,SAAS,UAAU,aAAa;AAC7D,UAAI,oBAAoB,iBAAiB;AACxC,eAAO,OAAO,eAAe;AAAA,MAC9B;AACA,aAAO;AAAA,IACR;AAEA,WAAO,OAAO,eAAe;AAAA,EAC9B;AAAA,EAEO,cAAc,KAA6B;AACjD,QAAI,KAAK,uBAAuB,sBAAsB,KAAK;AAC1D,WAAK,gBAAgB;AACrB;AAAA,IACD;AAEA,UAAM,sBAAsB,SAAS,UAClC,KAAK,cAAc,MAAM,IACxB,aACA,YACD;AACH,UAAM,yBAAyB,IAAI,aAAa;AAChD,UAAM,uBAAuB,IAAI,aAAa;AAE9C,UAAM,oBAAoB,KAAK,SAAS,UACtC,yBAAyB,IAAI,YAAY,EACzC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,mBAAmB;AAC/C,sBAAkB;AAAA,MAAK,CAAC,GAAG,MAC1B,MAAM,uBAAuB,EAAE,OAAO,EAAE,KAAK;AAAA,IAC9C;AACA,QAAI,uBAAuB;AAE3B,UAAM,YAAY,KAAK,SAAS,UAAU,aAAa;AACvD,UAAM,SAAmB,CAAC;AAC1B,aACK,aAAa,wBACjB,cAAc,sBACd,cACC;AACD,YAAM,YAAY,aAAa;AAE/B,UAAI,mBAAmB,KAAK,yBAAyB,UAAU;AAC/D,UAAI,kBAAkB;AAGtB,aACC,uBAAuB,kBAAkB,UACzC,kBAAkB,oBAAoB,EAAE,MAAM,gBAC7C,YACA;AACD;AAAA,MACD;AACA,eACK,IAAI,sBACR,IAAI,kBAAkB,QACtB,KACC;AACD,cAAM,EAAE,OAAO,QAAQ,IAAI,kBAAkB,CAAC;AAC9C,YAAI,MAAM,mBAAmB,YAAY;AACxC,6BAAmB,MAAM,QAAQ;AAAA,QAClC;AAAA,MACD;AAEA,UAAI,CAAC,oBAAoB,CAAC,iBAAiB;AAC1C,eAAO,SAAS,IAAI;AACpB;AAAA,MACD;AAEA,UACC,eAAe,aACf,KAAK,SAAS,UAAU,cAAc,UAAU,MAAM,GACrD;AAED,YAAI,KAAK,wBAAwB,OAAO;AACvC,6BAAmB;AAAA,QACpB;AACA,YAAI,KAAK,wBAAwB,UAAU;AAC1C,6BAAmB;AAAA,QACpB;AAAA,MACD;AACA,UAAI,eAAe,KAAK,mBAAmB;AAC1C,2BAAmB;AAAA,MACpB;AAEA,aAAO,SAAS,IACf,eAAe,mBAAmB,UAAU,GAAG,mBAAmB,GAAG,eAAe,iBAAiB,KAAK,gBAAgB,YAAY,KAAK,iBAAiB,QAAQ,gBAAgB;AAAA,IACtL;AAEA,SAAK,gBAAgB;AAAA,EACtB;AAAA,EAEO,OAAO,iBAAyB,YAA4B;AAClE,QAAI,CAAC,KAAK,eAAe;AACxB,aAAO;AAAA,IACR;AACA,UAAM,YAAY,aAAa;AAC/B,QAAI,YAAY,KAAK,aAAa,KAAK,cAAc,QAAQ;AAC5D,aAAO;AAAA,IACR;AACA,WAAO,KAAK,cAAc,SAAS;AAAA,EACpC;AACD;AAEA,2BAA2B,CAAC,OAAO,cAAc;AAChD,QAAM,yBAAyB,MAAM,SAAS,iBAAiB;AAC/D,QAAM,8BAA8B,MAAM,SAAS,sBAAsB;AACzE,MAAI,6BAA6B;AAChC,cAAU;AAAA,MACT,4DAA4D,2BAA2B;AAAA,IACxF;AAAA,EACD,WAAW,wBAAwB;AAClC,cAAU;AAAA,MACT,4DAA4D,uBAAuB,YAAY,GAAG,CAAC;AAAA,IACpG;AAAA,EACD;AACD,CAAC;",
  "names": []
}
