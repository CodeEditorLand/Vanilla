import "vs/css!./overlayWidgets";
import { FastDomNode } from "vs/base/browser/fastDomNode";
import { IOverlayWidget, IOverlayWidgetPosition } from "vs/editor/browser/editorBrowser";
import { RenderingContext, RestrictedRenderingContext } from "vs/editor/browser/view/renderingContext";
import { ViewPart } from "vs/editor/browser/view/viewPart";
import * as viewEvents from "vs/editor/common/viewEvents";
import { ViewContext } from "vs/editor/common/viewModel/viewContext";
export declare class ViewOverlayWidgets extends ViewPart {
    private readonly _viewDomNode;
    private _widgets;
    private _viewDomNodeRect;
    private readonly _domNode;
    readonly overflowingOverlayWidgetsDomNode: FastDomNode<HTMLElement>;
    private _verticalScrollbarWidth;
    private _minimapWidth;
    private _horizontalScrollbarHeight;
    private _editorHeight;
    private _editorWidth;
    constructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>);
    dispose(): void;
    getDomNode(): FastDomNode<HTMLElement>;
    onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean;
    addWidget(widget: IOverlayWidget): void;
    setWidgetPosition(widget: IOverlayWidget, position: IOverlayWidgetPosition | null): boolean;
    removeWidget(widget: IOverlayWidget): void;
    private _updateMaxMinWidth;
    private _renderWidget;
    prepareRender(ctx: RenderingContext): void;
    render(ctx: RestrictedRenderingContext): void;
}
