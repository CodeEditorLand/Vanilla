{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./overlayWidgets.css\";\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport {\n\ttype FastDomNode,\n\tcreateFastDomNode,\n} from \"../../../../base/browser/fastDomNode.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type * as viewEvents from \"../../../common/viewEvents.js\";\nimport type { ViewContext } from \"../../../common/viewModel/viewContext.js\";\nimport {\n\ttype IOverlayWidget,\n\ttype IOverlayWidgetPosition,\n\ttype IOverlayWidgetPositionCoordinates,\n\tOverlayWidgetPositionPreference,\n} from \"../../editorBrowser.js\";\nimport type {\n\tRenderingContext,\n\tRestrictedRenderingContext,\n} from \"../../view/renderingContext.js\";\nimport {\n\tPartFingerprint,\n\tPartFingerprints,\n\tViewPart,\n} from \"../../view/viewPart.js\";\n\ninterface IWidgetData {\n\twidget: IOverlayWidget;\n\tpreference:\n\t\t| OverlayWidgetPositionPreference\n\t\t| IOverlayWidgetPositionCoordinates\n\t\t| null;\n\tstack?: number;\n\tdomNode: FastDomNode<HTMLElement>;\n}\n\ninterface IWidgetMap {\n\t[key: string]: IWidgetData;\n}\n\nexport class ViewOverlayWidgets extends ViewPart {\n\tprivate readonly _viewDomNode: FastDomNode<HTMLElement>;\n\tprivate _widgets: IWidgetMap;\n\tprivate _viewDomNodeRect: dom.IDomNodePagePosition;\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tpublic readonly overflowingOverlayWidgetsDomNode: FastDomNode<HTMLElement>;\n\tprivate _verticalScrollbarWidth: number;\n\tprivate _minimapWidth: number;\n\tprivate _horizontalScrollbarHeight: number;\n\tprivate _editorHeight: number;\n\tprivate _editorWidth: number;\n\n\tconstructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>) {\n\t\tsuper(context);\n\t\tthis._viewDomNode = viewDomNode;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._widgets = {};\n\t\tthis._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n\t\tthis._minimapWidth = layoutInfo.minimap.minimapWidth;\n\t\tthis._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n\t\tthis._editorHeight = layoutInfo.height;\n\t\tthis._editorWidth = layoutInfo.width;\n\t\tthis._viewDomNodeRect = { top: 0, left: 0, width: 0, height: 0 };\n\n\t\tthis._domNode = createFastDomNode(document.createElement(\"div\"));\n\t\tPartFingerprints.write(this._domNode, PartFingerprint.OverlayWidgets);\n\t\tthis._domNode.setClassName(\"overlayWidgets\");\n\n\t\tthis.overflowingOverlayWidgetsDomNode = createFastDomNode(\n\t\t\tdocument.createElement(\"div\"),\n\t\t);\n\t\tPartFingerprints.write(\n\t\t\tthis.overflowingOverlayWidgetsDomNode,\n\t\t\tPartFingerprint.OverflowingOverlayWidgets,\n\t\t);\n\t\tthis.overflowingOverlayWidgetsDomNode.setClassName(\n\t\t\t\"overflowingOverlayWidgets\",\n\t\t);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._widgets = {};\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(\n\t\te: viewEvents.ViewConfigurationChangedEvent,\n\t): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n\t\tthis._minimapWidth = layoutInfo.minimap.minimapWidth;\n\t\tthis._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n\t\tthis._editorHeight = layoutInfo.height;\n\t\tthis._editorWidth = layoutInfo.width;\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tpublic addWidget(widget: IOverlayWidget): void {\n\t\tconst domNode = createFastDomNode(widget.getDomNode());\n\n\t\tthis._widgets[widget.getId()] = {\n\t\t\twidget: widget,\n\t\t\tpreference: null,\n\t\t\tdomNode: domNode,\n\t\t};\n\n\t\t// This is sync because a widget wants to be in the dom\n\t\tdomNode.setPosition(\"absolute\");\n\t\tdomNode.setAttribute(\"widgetId\", widget.getId());\n\n\t\tif (widget.allowEditorOverflow) {\n\t\t\tthis.overflowingOverlayWidgetsDomNode.appendChild(domNode);\n\t\t} else {\n\t\t\tthis._domNode.appendChild(domNode);\n\t\t}\n\n\t\tthis.setShouldRender();\n\t\tthis._updateMaxMinWidth();\n\t}\n\n\tpublic setWidgetPosition(\n\t\twidget: IOverlayWidget,\n\t\tposition: IOverlayWidgetPosition | null,\n\t): boolean {\n\t\tconst widgetData = this._widgets[widget.getId()];\n\t\tconst preference = position ? position.preference : null;\n\t\tconst stack = position?.stackOridinal;\n\t\tif (\n\t\t\twidgetData.preference === preference &&\n\t\t\twidgetData.stack === stack\n\t\t) {\n\t\t\tthis._updateMaxMinWidth();\n\t\t\treturn false;\n\t\t}\n\n\t\twidgetData.preference = preference;\n\t\twidgetData.stack = stack;\n\t\tthis.setShouldRender();\n\t\tthis._updateMaxMinWidth();\n\n\t\treturn true;\n\t}\n\n\tpublic removeWidget(widget: IOverlayWidget): void {\n\t\tconst widgetId = widget.getId();\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\tconst widgetData = this._widgets[widgetId];\n\t\t\tconst domNode = widgetData.domNode.domNode;\n\t\t\tdelete this._widgets[widgetId];\n\n\t\t\tdomNode.remove();\n\t\t\tthis.setShouldRender();\n\t\t\tthis._updateMaxMinWidth();\n\t\t}\n\t}\n\n\tprivate _updateMaxMinWidth(): void {\n\t\tlet maxMinWidth = 0;\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst widgetId = keys[i];\n\t\t\tconst widget = this._widgets[widgetId];\n\t\t\tconst widgetMinWidthInPx = widget.widget.getMinContentWidthInPx?.();\n\t\t\tif (typeof widgetMinWidthInPx !== \"undefined\") {\n\t\t\t\tmaxMinWidth = Math.max(maxMinWidth, widgetMinWidthInPx);\n\t\t\t}\n\t\t}\n\t\tthis._context.viewLayout.setOverlayWidgetsMinWidth(maxMinWidth);\n\t}\n\n\tprivate _renderWidget(\n\t\twidgetData: IWidgetData,\n\t\tstackCoordinates: number[],\n\t): void {\n\t\tconst domNode = widgetData.domNode;\n\n\t\tif (widgetData.preference === null) {\n\t\t\tdomNode.setTop(\"\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst maxRight = 2 * this._verticalScrollbarWidth + this._minimapWidth;\n\t\tif (\n\t\t\twidgetData.preference ===\n\t\t\t\tOverlayWidgetPositionPreference.TOP_RIGHT_CORNER ||\n\t\t\twidgetData.preference ===\n\t\t\t\tOverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER\n\t\t) {\n\t\t\tif (\n\t\t\t\twidgetData.preference ===\n\t\t\t\tOverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER\n\t\t\t) {\n\t\t\t\tconst widgetHeight = domNode.domNode.clientHeight;\n\t\t\t\tdomNode.setTop(\n\t\t\t\t\tthis._editorHeight -\n\t\t\t\t\t\twidgetHeight -\n\t\t\t\t\t\t2 * this._horizontalScrollbarHeight,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdomNode.setTop(0);\n\t\t\t}\n\n\t\t\tif (widgetData.stack !== undefined) {\n\t\t\t\tdomNode.setTop(stackCoordinates[widgetData.preference]);\n\t\t\t\tstackCoordinates[widgetData.preference] +=\n\t\t\t\t\tdomNode.domNode.clientWidth;\n\t\t\t} else {\n\t\t\t\tdomNode.setRight(maxRight);\n\t\t\t}\n\t\t} else if (\n\t\t\twidgetData.preference === OverlayWidgetPositionPreference.TOP_CENTER\n\t\t) {\n\t\t\tdomNode.domNode.style.right = \"50%\";\n\t\t\tif (widgetData.stack !== undefined) {\n\t\t\t\tdomNode.setTop(\n\t\t\t\t\tstackCoordinates[\n\t\t\t\t\t\tOverlayWidgetPositionPreference.TOP_CENTER\n\t\t\t\t\t],\n\t\t\t\t);\n\t\t\t\tstackCoordinates[OverlayWidgetPositionPreference.TOP_CENTER] +=\n\t\t\t\t\tdomNode.domNode.clientHeight;\n\t\t\t} else {\n\t\t\t\tdomNode.setTop(0);\n\t\t\t}\n\t\t} else {\n\t\t\tconst { top, left } = widgetData.preference;\n\t\t\tconst fixedOverflowWidgets =\n\t\t\t\tthis._context.configuration.options.get(\n\t\t\t\t\tEditorOption.fixedOverflowWidgets,\n\t\t\t\t);\n\t\t\tif (fixedOverflowWidgets && widgetData.widget.allowEditorOverflow) {\n\t\t\t\t// top, left are computed relative to the editor and we need them relative to the page\n\t\t\t\tconst editorBoundingBox = this._viewDomNodeRect;\n\t\t\t\tdomNode.setTop(top + editorBoundingBox.top);\n\t\t\t\tdomNode.setLeft(left + editorBoundingBox.left);\n\t\t\t\tdomNode.setPosition(\"fixed\");\n\t\t\t} else {\n\t\t\t\tdomNode.setTop(top);\n\t\t\t\tdomNode.setLeft(left);\n\t\t\t\tdomNode.setPosition(\"absolute\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._viewDomNodeRect = dom.getDomNodePagePosition(\n\t\t\tthis._viewDomNode.domNode,\n\t\t);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setWidth(this._editorWidth);\n\n\t\tconst keys = Object.keys(this._widgets);\n\t\tconst stackCoordinates = Array.from(\n\t\t\t{ length: OverlayWidgetPositionPreference.TOP_CENTER + 1 },\n\t\t\t() => 0,\n\t\t);\n\t\tkeys.sort(\n\t\t\t(a, b) =>\n\t\t\t\t(this._widgets[a].stack || 0) - (this._widgets[b].stack || 0),\n\t\t);\n\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst widgetId = keys[i];\n\t\t\tthis._renderWidget(this._widgets[widgetId], stackCoordinates);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
