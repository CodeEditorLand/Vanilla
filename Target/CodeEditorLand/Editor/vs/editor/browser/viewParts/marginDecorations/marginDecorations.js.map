{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/marginDecorations/marginDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\n\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n\tprivate readonly _context: ViewContext;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprotected _getDecorations(ctx: RenderingContext): DecorationToRender[] {\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tconst r: DecorationToRender[] = [];\n\t\tlet rLen = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst marginClassName = d.options.marginClassName;\n\t\t\tconst zIndex = d.options.zIndex;\n\t\t\tif (marginClassName) {\n\t\t\t\tr[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, null, zIndex);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst decorations = toRender[lineIndex].getDecorations();\n\t\t\tlet lineOutput = '';\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tlineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n\t\t\t}\n\t\t\toutput[lineIndex] = lineOutput;\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineNumber - startLineNumber];\n\t}\n}\n"],
  "mappings": ";;AAKA,OAAO;AACP,SAAS,oBAAoB,oBAAoB;AACjD,SAAS,wBAAwB;AACjC,SAAS,mBAAmB;AAC5B,YAAY,gBAAgB;AAErB,MAAM,yCAAyC,aAAa;AAAA,EAXnE,OAWmE;AAAA;AAAA;AAAA,EACjD;AAAA,EACT;AAAA,EAER,YAAY,SAAsB;AACjC,UAAM;AACN,SAAK,WAAW;AAChB,SAAK,gBAAgB;AACrB,SAAK,SAAS,gBAAgB,IAAI;AAAA,EACnC;AAAA,EAEgB,UAAgB;AAC/B,SAAK,SAAS,mBAAmB,IAAI;AACrC,SAAK,gBAAgB;AACrB,UAAM,QAAQ;AAAA,EACf;AAAA;AAAA,EAIgB,uBAAuB,GAAsD;AAC5F,WAAO;AAAA,EACR;AAAA,EACgB,qBAAqB,GAAoD;AACxF,WAAO;AAAA,EACR;AAAA,EACgB,UAAU,GAAyC;AAClE,WAAO;AAAA,EACR;AAAA,EACgB,eAAe,GAA8C;AAC5E,WAAO;AAAA,EACR;AAAA,EACgB,eAAe,GAA8C;AAC5E,WAAO;AAAA,EACR;AAAA,EACgB,gBAAgB,GAA+C;AAC9E,WAAO;AAAA,EACR;AAAA,EACgB,gBAAgB,GAA+C;AAC9E,WAAO,EAAE;AAAA,EACV;AAAA,EACgB,eAAe,GAA8C;AAC5E,WAAO;AAAA,EACR;AAAA;AAAA,EAIU,gBAAgB,KAA6C;AACtE,UAAM,cAAc,IAAI,yBAAyB;AACjD,UAAM,IAA0B,CAAC;AACjC,QAAI,OAAO;AACX,aAAS,IAAI,GAAG,MAAM,YAAY,QAAQ,IAAI,KAAK,KAAK;AACvD,YAAM,IAAI,YAAY,CAAC;AACvB,YAAM,kBAAkB,EAAE,QAAQ;AAClC,YAAM,SAAS,EAAE,QAAQ;AACzB,UAAI,iBAAiB;AACpB,UAAE,MAAM,IAAI,IAAI,mBAAmB,EAAE,MAAM,iBAAiB,EAAE,MAAM,eAAe,iBAAiB,MAAM,MAAM;AAAA,MACjH;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEO,cAAc,KAA6B;AACjD,UAAM,yBAAyB,IAAI,aAAa;AAChD,UAAM,uBAAuB,IAAI,aAAa;AAC9C,UAAM,WAAW,KAAK,QAAQ,wBAAwB,sBAAsB,KAAK,gBAAgB,GAAG,CAAC;AAErG,UAAM,SAAmB,CAAC;AAC1B,aAAS,aAAa,wBAAwB,cAAc,sBAAsB,cAAc;AAC/F,YAAM,YAAY,aAAa;AAC/B,YAAM,cAAc,SAAS,SAAS,EAAE,eAAe;AACvD,UAAI,aAAa;AACjB,iBAAW,cAAc,aAAa;AACrC,sBAAc,sBAAsB,WAAW,YAAY;AAAA,MAC5D;AACA,aAAO,SAAS,IAAI;AAAA,IACrB;AAEA,SAAK,gBAAgB;AAAA,EACtB;AAAA,EAEO,OAAO,iBAAyB,YAA4B;AAClE,QAAI,CAAC,KAAK,eAAe;AACxB,aAAO;AAAA,IACR;AACA,WAAO,KAAK,cAAc,aAAa,eAAe;AAAA,EACvD;AACD;",
  "names": []
}
