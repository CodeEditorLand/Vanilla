{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/rulers/rulers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './rulers.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption, IRulerOption } from '../../../common/config/editorOptions.js';\n\n/**\n * Rulers are vertical lines that appear at certain columns in the editor. There can be >= 0 rulers\n * at a time.\n */\nexport class Rulers extends ViewPart {\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\tprivate readonly _renderedRulers: FastDomNode<HTMLElement>[];\n\tprivate _rulers: IRulerOption[];\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tthis.domNode = createFastDomNode<HTMLElement>(document.createElement('div'));\n\t\tthis.domNode.setAttribute('role', 'presentation');\n\t\tthis.domNode.setAttribute('aria-hidden', 'true');\n\t\tthis.domNode.setClassName('view-rulers');\n\t\tthis._renderedRulers = [];\n\t\tconst options = this._context.configuration.options;\n\t\tthis._rulers = options.get(EditorOption.rulers);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._rulers = options.get(EditorOption.rulers);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollHeightChanged;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tprivate _ensureRulersCount(): void {\n\t\tconst currentCount = this._renderedRulers.length;\n\t\tconst desiredCount = this._rulers.length;\n\n\t\tif (currentCount === desiredCount) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentCount < desiredCount) {\n\t\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\t\tconst rulerWidth = tabSize;\n\t\t\tlet addCount = desiredCount - currentCount;\n\t\t\twhile (addCount > 0) {\n\t\t\t\tconst node = createFastDomNode(document.createElement('div'));\n\t\t\t\tnode.setClassName('view-ruler');\n\t\t\t\tnode.setWidth(rulerWidth);\n\t\t\t\tthis.domNode.appendChild(node);\n\t\t\t\tthis._renderedRulers.push(node);\n\t\t\t\taddCount--;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tlet removeCount = currentCount - desiredCount;\n\t\twhile (removeCount > 0) {\n\t\t\tconst node = this._renderedRulers.pop()!;\n\t\t\tthis.domNode.removeChild(node);\n\t\t\tremoveCount--;\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\n\t\tthis._ensureRulersCount();\n\n\t\tfor (let i = 0, len = this._rulers.length; i < len; i++) {\n\t\t\tconst node = this._renderedRulers[i];\n\t\t\tconst ruler = this._rulers[i];\n\n\t\t\tnode.setBoxShadow(ruler.color ? `1px 0 0 0 ${ruler.color} inset` : ``);\n\t\t\tnode.setHeight(Math.min(ctx.scrollHeight, 1000000));\n\t\t\tnode.setLeft(ruler.column * this._typicalHalfwidthCharacterWidth);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,OAAO;AACP,SAAS,aAAa,yBAAyB;AAC/C,SAAS,gBAAgB;AACzB,SAAS,kBAAkB,kCAAkC;AAC7D,SAAS,mBAAmB;AAC5B,YAAY,gBAAgB;AAC5B,SAAS,cAAc,oBAAoB;AAMpC,MAAM,eAAe,SAAS;AAAA,EAjBrC,OAiBqC;AAAA;AAAA;AAAA,EAE7B;AAAA,EACU;AAAA,EACT;AAAA,EACA;AAAA,EAER,YAAY,SAAsB;AACjC,UAAM,OAAO;AACb,SAAK,UAAU,kBAA+B,SAAS,cAAc,KAAK,CAAC;AAC3E,SAAK,QAAQ,aAAa,QAAQ,cAAc;AAChD,SAAK,QAAQ,aAAa,eAAe,MAAM;AAC/C,SAAK,QAAQ,aAAa,aAAa;AACvC,SAAK,kBAAkB,CAAC;AACxB,UAAM,UAAU,KAAK,SAAS,cAAc;AAC5C,SAAK,UAAU,QAAQ,IAAI,aAAa,MAAM;AAC9C,SAAK,kCAAkC,QAAQ,IAAI,aAAa,QAAQ,EAAE;AAAA,EAC3E;AAAA,EAEgB,UAAgB;AAC/B,UAAM,QAAQ;AAAA,EACf;AAAA;AAAA,EAIgB,uBAAuB,GAAsD;AAC5F,UAAM,UAAU,KAAK,SAAS,cAAc;AAC5C,SAAK,UAAU,QAAQ,IAAI,aAAa,MAAM;AAC9C,SAAK,kCAAkC,QAAQ,IAAI,aAAa,QAAQ,EAAE;AAC1E,WAAO;AAAA,EACR;AAAA,EACgB,gBAAgB,GAA+C;AAC9E,WAAO,EAAE;AAAA,EACV;AAAA;AAAA,EAIO,cAAc,KAA6B;AAAA,EAElD;AAAA,EAEQ,qBAA2B;AAClC,UAAM,eAAe,KAAK,gBAAgB;AAC1C,UAAM,eAAe,KAAK,QAAQ;AAElC,QAAI,iBAAiB,cAAc;AAElC;AAAA,IACD;AAEA,QAAI,eAAe,cAAc;AAChC,YAAM,EAAE,QAAQ,IAAI,KAAK,SAAS,UAAU,MAAM,WAAW;AAC7D,YAAM,aAAa;AACnB,UAAI,WAAW,eAAe;AAC9B,aAAO,WAAW,GAAG;AACpB,cAAM,OAAO,kBAAkB,SAAS,cAAc,KAAK,CAAC;AAC5D,aAAK,aAAa,YAAY;AAC9B,aAAK,SAAS,UAAU;AACxB,aAAK,QAAQ,YAAY,IAAI;AAC7B,aAAK,gBAAgB,KAAK,IAAI;AAC9B;AAAA,MACD;AACA;AAAA,IACD;AAEA,QAAI,cAAc,eAAe;AACjC,WAAO,cAAc,GAAG;AACvB,YAAM,OAAO,KAAK,gBAAgB,IAAI;AACtC,WAAK,QAAQ,YAAY,IAAI;AAC7B;AAAA,IACD;AAAA,EACD;AAAA,EAEO,OAAO,KAAuC;AAEpD,SAAK,mBAAmB;AAExB,aAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,QAAQ,IAAI,KAAK,KAAK;AACxD,YAAM,OAAO,KAAK,gBAAgB,CAAC;AACnC,YAAM,QAAQ,KAAK,QAAQ,CAAC;AAE5B,WAAK,aAAa,MAAM,QAAQ,aAAa,MAAM,KAAK,WAAW,EAAE;AACrE,WAAK,UAAU,KAAK,IAAI,IAAI,cAAc,GAAO,CAAC;AAClD,WAAK,QAAQ,MAAM,SAAS,KAAK,+BAA+B;AAAA,IACjE;AAAA,EACD;AACD;",
  "names": []
}
