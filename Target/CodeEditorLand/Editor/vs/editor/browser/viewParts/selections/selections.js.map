{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/selections/selections.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Range } from '../../../common/core/range.js';\nimport { HorizontalRange, LineVisibleRanges, RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\nconst enum CornerStyle {\n\tEXTERN,\n\tINTERN,\n\tFLAT\n}\n\ninterface IVisibleRangeEndPointStyle {\n\ttop: CornerStyle;\n\tbottom: CornerStyle;\n}\n\nclass HorizontalRangeWithStyle {\n\tpublic left: number;\n\tpublic width: number;\n\tpublic startStyle: IVisibleRangeEndPointStyle | null;\n\tpublic endStyle: IVisibleRangeEndPointStyle | null;\n\n\tconstructor(other: HorizontalRange) {\n\t\tthis.left = other.left;\n\t\tthis.width = other.width;\n\t\tthis.startStyle = null;\n\t\tthis.endStyle = null;\n\t}\n}\n\nclass LineVisibleRangesWithStyle {\n\tpublic lineNumber: number;\n\tpublic ranges: HorizontalRangeWithStyle[];\n\n\tconstructor(lineNumber: number, ranges: HorizontalRangeWithStyle[]) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.ranges = ranges;\n\t}\n}\n\nfunction toStyledRange(item: HorizontalRange): HorizontalRangeWithStyle {\n\treturn new HorizontalRangeWithStyle(item);\n}\n\nfunction toStyled(item: LineVisibleRanges): LineVisibleRangesWithStyle {\n\treturn new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\n\nexport class SelectionsOverlay extends DynamicViewOverlay {\n\n\tprivate static readonly SELECTION_CLASS_NAME = 'selected-text';\n\tprivate static readonly SELECTION_TOP_LEFT = 'top-left-radius';\n\tprivate static readonly SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\n\tprivate static readonly SELECTION_TOP_RIGHT = 'top-right-radius';\n\tprivate static readonly SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\n\tprivate static readonly EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\n\n\tprivate static readonly ROUNDED_PIECE_WIDTH = 10;\n\n\tprivate readonly _context: ViewContext;\n\tprivate _roundedSelection: boolean;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _selections: Range[];\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tthis._roundedSelection = options.get(EditorOption.roundedSelection);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tthis._selections = [];\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._roundedSelection = options.get(EditorOption.roundedSelection);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections.slice(0);\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;//e.inlineDecorationsChanged;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _visibleRangesHaveGaps(linesVisibleRanges: LineVisibleRangesWithStyle[]): boolean {\n\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = linesVisibleRanges[i];\n\n\t\t\tif (lineVisibleRanges.ranges.length > 1) {\n\t\t\t\t// There are two ranges on the same line\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _enrichVisibleRangesWithStyle(viewport: Range, linesVisibleRanges: LineVisibleRangesWithStyle[], previousFrame: LineVisibleRangesWithStyle[] | null): void {\n\t\tconst epsilon = this._typicalHalfwidthCharacterWidth / 4;\n\t\tlet previousFrameTop: HorizontalRangeWithStyle | null = null;\n\t\tlet previousFrameBottom: HorizontalRangeWithStyle | null = null;\n\n\t\tif (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n\n\t\t\tconst topLineNumber = linesVisibleRanges[0].lineNumber;\n\t\t\tif (topLineNumber === viewport.startLineNumber) {\n\t\t\t\tfor (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === topLineNumber) {\n\t\t\t\t\t\tpreviousFrameTop = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n\t\t\tif (bottomLineNumber === viewport.endLineNumber) {\n\t\t\t\tfor (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === bottomLineNumber) {\n\t\t\t\t\t\tpreviousFrameBottom = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (previousFrameTop && !previousFrameTop.startStyle) {\n\t\t\t\tpreviousFrameTop = null;\n\t\t\t}\n\t\t\tif (previousFrameBottom && !previousFrameBottom.startStyle) {\n\t\t\t\tpreviousFrameBottom = null;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\t// We know for a fact that there is precisely one range on each line\n\t\t\tconst curLineRange = linesVisibleRanges[i].ranges[0];\n\t\t\tconst curLeft = curLineRange.left;\n\t\t\tconst curRight = curLineRange.left + curLineRange.width;\n\n\t\t\tconst startStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN\n\t\t\t};\n\n\t\t\tconst endStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN\n\t\t\t};\n\n\t\t\tif (i > 0) {\n\t\t\t\t// Look above\n\t\t\t\tconst prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n\t\t\t\tconst prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - prevLeft) < epsilon) {\n\t\t\t\t\tstartStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (curLeft > prevLeft) {\n\t\t\t\t\tstartStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - prevRight) < epsilon) {\n\t\t\t\t\tendStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (prevLeft < curRight && curRight < prevRight) {\n\t\t\t\t\tendStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameTop) {\n\t\t\t\t// Accept some hiccups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.top = previousFrameTop.startStyle!.top;\n\t\t\t\tendStyle.top = previousFrameTop.endStyle!.top;\n\t\t\t}\n\n\t\t\tif (i + 1 < len) {\n\t\t\t\t// Look below\n\t\t\t\tconst nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n\t\t\t\tconst nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - nextLeft) < epsilon) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (nextLeft < curLeft && curLeft < nextRight) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - nextRight) < epsilon) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (curRight < nextRight) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameBottom) {\n\t\t\t\t// Accept some hiccups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.bottom = previousFrameBottom.startStyle!.bottom;\n\t\t\t\tendStyle.bottom = previousFrameBottom.endStyle!.bottom;\n\t\t\t}\n\n\t\t\tcurLineRange.startStyle = startStyle;\n\t\t\tcurLineRange.endStyle = endStyle;\n\t\t}\n\t}\n\n\tprivate _getVisibleRangesWithStyle(selection: Range, ctx: RenderingContext, previousFrame: LineVisibleRangesWithStyle[] | null): LineVisibleRangesWithStyle[] {\n\t\tconst _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n\t\tconst linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n\t\tconst visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n\n\t\tif (!visibleRangesHaveGaps && this._roundedSelection) {\n\t\t\tthis._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n\t\t}\n\n\t\t// The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n\t\treturn linesVisibleRanges;\n\t}\n\n\tprivate _createSelectionPiece(top: number, bottom: number, className: string, left: number, width: number): string {\n\t\treturn (\n\t\t\t'<div class=\"cslr '\n\t\t\t+ className\n\t\t\t+ '\" style=\"'\n\t\t\t+ 'top:' + top.toString() + 'px;'\n\t\t\t+ 'bottom:' + bottom.toString() + 'px;'\n\t\t\t+ 'left:' + left.toString() + 'px;'\n\t\t\t+ 'width:' + width.toString() + 'px;'\n\t\t\t+ '\"></div>'\n\t\t);\n\t}\n\n\tprivate _actualRenderOneSelection(output2: [string, string][], visibleStartLineNumber: number, hasMultipleSelections: boolean, visibleRanges: LineVisibleRangesWithStyle[]): void {\n\t\tif (visibleRanges.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n\n\t\tconst firstLineNumber = visibleRanges[0].lineNumber;\n\t\tconst lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n\n\t\tfor (let i = 0, len = visibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = visibleRanges[i];\n\t\t\tconst lineNumber = lineVisibleRanges.lineNumber;\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\n\t\t\tconst top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n\t\t\tconst bottom = hasMultipleSelections ? (lineNumber !== firstLineNumber && lineNumber === lastLineNumber ? 1 : 0) : 0;\n\n\t\t\tlet innerCornerOutput = '';\n\t\t\tlet restOfSelectionOutput = '';\n\n\t\t\tfor (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n\t\t\t\tconst visibleRange = lineVisibleRanges.ranges[j];\n\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (startStyle.top === CornerStyle.INTERN || startStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t// Reverse rounded corner to the left\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (startStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (startStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.top === CornerStyle.INTERN || endStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t// Reverse rounded corner to the right\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (endStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (endStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet className = SelectionsOverlay.SELECTION_CLASS_NAME;\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (startStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (startStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trestOfSelectionOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left, visibleRange.width);\n\t\t\t}\n\n\t\t\toutput2[lineIndex][0] += innerCornerOutput;\n\t\t\toutput2[lineIndex][1] += restOfSelectionOutput;\n\t\t}\n\t}\n\n\tprivate _previousFrameVisibleRangesWithStyle: (LineVisibleRangesWithStyle[] | null)[] = [];\n\tpublic prepareRender(ctx: RenderingContext): void {\n\n\t\t// Build HTML for inner corners separate from HTML for the rest of selections,\n\t\t// as the inner corner HTML can interfere with that of other selections.\n\t\t// In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n\t\tconst output: [string, string][] = [];\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = ['', ''];\n\t\t}\n\n\t\tconst thisFrameVisibleRangesWithStyle: (LineVisibleRangesWithStyle[] | null)[] = [];\n\t\tfor (let i = 0, len = this._selections.length; i < len; i++) {\n\t\t\tconst selection = this._selections[i];\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\tthisFrameVisibleRangesWithStyle[i] = null;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n\t\t\tthisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n\t\t\tthis._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n\t\t}\n\n\t\tthis._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n\t\tthis._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n\tif (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n\t\tcollector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n\t}\n});\n\nfunction abs(n: number): number {\n\treturn n < 0 ? -n : n;\n}\n"],
  "mappings": "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",
  "names": ["CornerStyle", "className"]
}
