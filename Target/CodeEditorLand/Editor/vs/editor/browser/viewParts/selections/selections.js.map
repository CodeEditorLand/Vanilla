{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/selections/selections.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./selections.css\";\nimport { editorSelectionForeground } from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { registerThemingParticipant } from \"../../../../platform/theme/common/themeService.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type { Range } from \"../../../common/core/range.js\";\nimport type * as viewEvents from \"../../../common/viewEvents.js\";\nimport type { ViewContext } from \"../../../common/viewModel/viewContext.js\";\nimport { DynamicViewOverlay } from \"../../view/dynamicViewOverlay.js\";\nimport type {\n\tHorizontalRange,\n\tLineVisibleRanges,\n\tRenderingContext,\n} from \"../../view/renderingContext.js\";\n\nenum CornerStyle {\n\tEXTERN = 0,\n\tINTERN = 1,\n\tFLAT = 2,\n}\n\ninterface IVisibleRangeEndPointStyle {\n\ttop: CornerStyle;\n\tbottom: CornerStyle;\n}\n\nclass HorizontalRangeWithStyle {\n\tpublic left: number;\n\tpublic width: number;\n\tpublic startStyle: IVisibleRangeEndPointStyle | null;\n\tpublic endStyle: IVisibleRangeEndPointStyle | null;\n\n\tconstructor(other: HorizontalRange) {\n\t\tthis.left = other.left;\n\t\tthis.width = other.width;\n\t\tthis.startStyle = null;\n\t\tthis.endStyle = null;\n\t}\n}\n\nclass LineVisibleRangesWithStyle {\n\tpublic lineNumber: number;\n\tpublic ranges: HorizontalRangeWithStyle[];\n\n\tconstructor(lineNumber: number, ranges: HorizontalRangeWithStyle[]) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.ranges = ranges;\n\t}\n}\n\nfunction toStyledRange(item: HorizontalRange): HorizontalRangeWithStyle {\n\treturn new HorizontalRangeWithStyle(item);\n}\n\nfunction toStyled(item: LineVisibleRanges): LineVisibleRangesWithStyle {\n\treturn new LineVisibleRangesWithStyle(\n\t\titem.lineNumber,\n\t\titem.ranges.map(toStyledRange),\n\t);\n}\n\nexport class SelectionsOverlay extends DynamicViewOverlay {\n\tprivate static readonly SELECTION_CLASS_NAME = \"selected-text\";\n\tprivate static readonly SELECTION_TOP_LEFT = \"top-left-radius\";\n\tprivate static readonly SELECTION_BOTTOM_LEFT = \"bottom-left-radius\";\n\tprivate static readonly SELECTION_TOP_RIGHT = \"top-right-radius\";\n\tprivate static readonly SELECTION_BOTTOM_RIGHT = \"bottom-right-radius\";\n\tprivate static readonly EDITOR_BACKGROUND_CLASS_NAME =\n\t\t\"monaco-editor-background\";\n\n\tprivate static readonly ROUNDED_PIECE_WIDTH = 10;\n\n\tprivate readonly _context: ViewContext;\n\tprivate _roundedSelection: boolean;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _selections: Range[];\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tthis._roundedSelection = options.get(EditorOption.roundedSelection);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(\n\t\t\tEditorOption.fontInfo,\n\t\t).typicalHalfwidthCharacterWidth;\n\t\tthis._selections = [];\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(\n\t\te: viewEvents.ViewConfigurationChangedEvent,\n\t): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._roundedSelection = options.get(EditorOption.roundedSelection);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(\n\t\t\tEditorOption.fontInfo,\n\t\t).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(\n\t\te: viewEvents.ViewCursorStateChangedEvent,\n\t): boolean {\n\t\tthis._selections = e.selections.slice(0);\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(\n\t\te: viewEvents.ViewDecorationsChangedEvent,\n\t): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true; //e.inlineDecorationsChanged;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(\n\t\te: viewEvents.ViewLinesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(\n\t\te: viewEvents.ViewLinesDeletedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(\n\t\te: viewEvents.ViewLinesInsertedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(\n\t\te: viewEvents.ViewScrollChangedEvent,\n\t): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(\n\t\te: viewEvents.ViewZonesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _visibleRangesHaveGaps(\n\t\tlinesVisibleRanges: LineVisibleRangesWithStyle[],\n\t): boolean {\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = linesVisibleRanges[i];\n\n\t\t\tif (lineVisibleRanges.ranges.length > 1) {\n\t\t\t\t// There are two ranges on the same line\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _enrichVisibleRangesWithStyle(\n\t\tviewport: Range,\n\t\tlinesVisibleRanges: LineVisibleRangesWithStyle[],\n\t\tpreviousFrame: LineVisibleRangesWithStyle[] | null,\n\t): void {\n\t\tconst epsilon = this._typicalHalfwidthCharacterWidth / 4;\n\t\tlet previousFrameTop: HorizontalRangeWithStyle | null = null;\n\t\tlet previousFrameBottom: HorizontalRangeWithStyle | null = null;\n\n\t\tif (\n\t\t\tpreviousFrame &&\n\t\t\tpreviousFrame.length > 0 &&\n\t\t\tlinesVisibleRanges.length > 0\n\t\t) {\n\t\t\tconst topLineNumber = linesVisibleRanges[0].lineNumber;\n\t\t\tif (topLineNumber === viewport.startLineNumber) {\n\t\t\t\tfor (\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t!previousFrameTop && i < previousFrame.length;\n\t\t\t\t\ti++\n\t\t\t\t) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === topLineNumber) {\n\t\t\t\t\t\tpreviousFrameTop = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bottomLineNumber =\n\t\t\t\tlinesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n\t\t\tif (bottomLineNumber === viewport.endLineNumber) {\n\t\t\t\tfor (\n\t\t\t\t\tlet i = previousFrame.length - 1;\n\t\t\t\t\t!previousFrameBottom && i >= 0;\n\t\t\t\t\ti--\n\t\t\t\t) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === bottomLineNumber) {\n\t\t\t\t\t\tpreviousFrameBottom = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (previousFrameTop && !previousFrameTop.startStyle) {\n\t\t\t\tpreviousFrameTop = null;\n\t\t\t}\n\t\t\tif (previousFrameBottom && !previousFrameBottom.startStyle) {\n\t\t\t\tpreviousFrameBottom = null;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\t// We know for a fact that there is precisely one range on each line\n\t\t\tconst curLineRange = linesVisibleRanges[i].ranges[0];\n\t\t\tconst curLeft = curLineRange.left;\n\t\t\tconst curRight = curLineRange.left + curLineRange.width;\n\n\t\t\tconst startStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN,\n\t\t\t};\n\n\t\t\tconst endStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN,\n\t\t\t};\n\n\t\t\tif (i > 0) {\n\t\t\t\t// Look above\n\t\t\t\tconst prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n\t\t\t\tconst prevRight =\n\t\t\t\t\tlinesVisibleRanges[i - 1].ranges[0].left +\n\t\t\t\t\tlinesVisibleRanges[i - 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - prevLeft) < epsilon) {\n\t\t\t\t\tstartStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (curLeft > prevLeft) {\n\t\t\t\t\tstartStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - prevRight) < epsilon) {\n\t\t\t\t\tendStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (prevLeft < curRight && curRight < prevRight) {\n\t\t\t\t\tendStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameTop) {\n\t\t\t\t// Accept some hiccups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.top = previousFrameTop.startStyle!.top;\n\t\t\t\tendStyle.top = previousFrameTop.endStyle!.top;\n\t\t\t}\n\n\t\t\tif (i + 1 < len) {\n\t\t\t\t// Look below\n\t\t\t\tconst nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n\t\t\t\tconst nextRight =\n\t\t\t\t\tlinesVisibleRanges[i + 1].ranges[0].left +\n\t\t\t\t\tlinesVisibleRanges[i + 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - nextLeft) < epsilon) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (nextLeft < curLeft && curLeft < nextRight) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - nextRight) < epsilon) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (curRight < nextRight) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameBottom) {\n\t\t\t\t// Accept some hiccups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.bottom = previousFrameBottom.startStyle!.bottom;\n\t\t\t\tendStyle.bottom = previousFrameBottom.endStyle!.bottom;\n\t\t\t}\n\n\t\t\tcurLineRange.startStyle = startStyle;\n\t\t\tcurLineRange.endStyle = endStyle;\n\t\t}\n\t}\n\n\tprivate _getVisibleRangesWithStyle(\n\t\tselection: Range,\n\t\tctx: RenderingContext,\n\t\tpreviousFrame: LineVisibleRangesWithStyle[] | null,\n\t): LineVisibleRangesWithStyle[] {\n\t\tconst _linesVisibleRanges =\n\t\t\tctx.linesVisibleRangesForRange(selection, true) || [];\n\t\tconst linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n\t\tconst visibleRangesHaveGaps =\n\t\t\tthis._visibleRangesHaveGaps(linesVisibleRanges);\n\n\t\tif (!visibleRangesHaveGaps && this._roundedSelection) {\n\t\t\tthis._enrichVisibleRangesWithStyle(\n\t\t\t\tctx.visibleRange,\n\t\t\t\tlinesVisibleRanges,\n\t\t\t\tpreviousFrame,\n\t\t\t);\n\t\t}\n\n\t\t// The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n\t\treturn linesVisibleRanges;\n\t}\n\n\tprivate _createSelectionPiece(\n\t\ttop: number,\n\t\tbottom: number,\n\t\tclassName: string,\n\t\tleft: number,\n\t\twidth: number,\n\t): string {\n\t\treturn (\n\t\t\t'<div class=\"cslr ' +\n\t\t\tclassName +\n\t\t\t'\" style=\"' +\n\t\t\t\"top:\" +\n\t\t\ttop.toString() +\n\t\t\t\"px;\" +\n\t\t\t\"bottom:\" +\n\t\t\tbottom.toString() +\n\t\t\t\"px;\" +\n\t\t\t\"left:\" +\n\t\t\tleft.toString() +\n\t\t\t\"px;\" +\n\t\t\t\"width:\" +\n\t\t\twidth.toString() +\n\t\t\t\"px;\" +\n\t\t\t'\"></div>'\n\t\t);\n\t}\n\n\tprivate _actualRenderOneSelection(\n\t\toutput2: [string, string][],\n\t\tvisibleStartLineNumber: number,\n\t\thasMultipleSelections: boolean,\n\t\tvisibleRanges: LineVisibleRangesWithStyle[],\n\t): void {\n\t\tif (visibleRanges.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n\n\t\tconst firstLineNumber = visibleRanges[0].lineNumber;\n\t\tconst lastLineNumber =\n\t\t\tvisibleRanges[visibleRanges.length - 1].lineNumber;\n\n\t\tfor (let i = 0, len = visibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = visibleRanges[i];\n\t\t\tconst lineNumber = lineVisibleRanges.lineNumber;\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\n\t\t\tconst top = hasMultipleSelections\n\t\t\t\t? lineNumber === firstLineNumber\n\t\t\t\t\t? 1\n\t\t\t\t\t: 0\n\t\t\t\t: 0;\n\t\t\tconst bottom = hasMultipleSelections\n\t\t\t\t? lineNumber !== firstLineNumber &&\n\t\t\t\t\tlineNumber === lastLineNumber\n\t\t\t\t\t? 1\n\t\t\t\t\t: 0\n\t\t\t\t: 0;\n\n\t\t\tlet innerCornerOutput = \"\";\n\t\t\tlet restOfSelectionOutput = \"\";\n\n\t\t\tfor (\n\t\t\t\tlet j = 0, lenJ = lineVisibleRanges.ranges.length;\n\t\t\t\tj < lenJ;\n\t\t\t\tj++\n\t\t\t) {\n\t\t\t\tconst visibleRange = lineVisibleRanges.ranges[j];\n\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (\n\t\t\t\t\t\tstartStyle.top === CornerStyle.INTERN ||\n\t\t\t\t\t\tstartStyle.bottom === CornerStyle.INTERN\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Reverse rounded corner to the left\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(\n\t\t\t\t\t\t\ttop,\n\t\t\t\t\t\t\tbottom,\n\t\t\t\t\t\t\tSelectionsOverlay.SELECTION_CLASS_NAME,\n\t\t\t\t\t\t\tvisibleRange.left -\n\t\t\t\t\t\t\t\tSelectionsOverlay.ROUNDED_PIECE_WIDTH,\n\t\t\t\t\t\t\tSelectionsOverlay.ROUNDED_PIECE_WIDTH,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className =\n\t\t\t\t\t\t\tSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (startStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName +=\n\t\t\t\t\t\t\t\t\" \" + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (startStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName +=\n\t\t\t\t\t\t\t\t\" \" + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(\n\t\t\t\t\t\t\ttop,\n\t\t\t\t\t\t\tbottom,\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t\tvisibleRange.left -\n\t\t\t\t\t\t\t\tSelectionsOverlay.ROUNDED_PIECE_WIDTH,\n\t\t\t\t\t\t\tSelectionsOverlay.ROUNDED_PIECE_WIDTH,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tendStyle.top === CornerStyle.INTERN ||\n\t\t\t\t\t\tendStyle.bottom === CornerStyle.INTERN\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Reverse rounded corner to the right\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(\n\t\t\t\t\t\t\ttop,\n\t\t\t\t\t\t\tbottom,\n\t\t\t\t\t\t\tSelectionsOverlay.SELECTION_CLASS_NAME,\n\t\t\t\t\t\t\tvisibleRange.left + visibleRange.width,\n\t\t\t\t\t\t\tSelectionsOverlay.ROUNDED_PIECE_WIDTH,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className =\n\t\t\t\t\t\t\tSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (endStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName +=\n\t\t\t\t\t\t\t\t\" \" + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (endStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName +=\n\t\t\t\t\t\t\t\t\" \" + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(\n\t\t\t\t\t\t\ttop,\n\t\t\t\t\t\t\tbottom,\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t\tvisibleRange.left + visibleRange.width,\n\t\t\t\t\t\t\tSelectionsOverlay.ROUNDED_PIECE_WIDTH,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet className = SelectionsOverlay.SELECTION_CLASS_NAME;\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (startStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += \" \" + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (startStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName +=\n\t\t\t\t\t\t\t\" \" + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName +=\n\t\t\t\t\t\t\t\" \" + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName +=\n\t\t\t\t\t\t\t\" \" + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trestOfSelectionOutput += this._createSelectionPiece(\n\t\t\t\t\ttop,\n\t\t\t\t\tbottom,\n\t\t\t\t\tclassName,\n\t\t\t\t\tvisibleRange.left,\n\t\t\t\t\tvisibleRange.width,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toutput2[lineIndex][0] += innerCornerOutput;\n\t\t\toutput2[lineIndex][1] += restOfSelectionOutput;\n\t\t}\n\t}\n\n\tprivate _previousFrameVisibleRangesWithStyle: (\n\t\t| LineVisibleRangesWithStyle[]\n\t\t| null\n\t)[] = [];\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Build HTML for inner corners separate from HTML for the rest of selections,\n\t\t// as the inner corner HTML can interfere with that of other selections.\n\t\t// In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n\t\tconst output: [string, string][] = [];\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tfor (\n\t\t\tlet lineNumber = visibleStartLineNumber;\n\t\t\tlineNumber <= visibleEndLineNumber;\n\t\t\tlineNumber++\n\t\t) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = [\"\", \"\"];\n\t\t}\n\n\t\tconst thisFrameVisibleRangesWithStyle: (\n\t\t\t| LineVisibleRangesWithStyle[]\n\t\t\t| null\n\t\t)[] = [];\n\t\tfor (let i = 0, len = this._selections.length; i < len; i++) {\n\t\t\tconst selection = this._selections[i];\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\tthisFrameVisibleRangesWithStyle[i] = null;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visibleRangesWithStyle = this._getVisibleRangesWithStyle(\n\t\t\t\tselection,\n\t\t\t\tctx,\n\t\t\t\tthis._previousFrameVisibleRangesWithStyle[i],\n\t\t\t);\n\t\t\tthisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n\t\t\tthis._actualRenderOneSelection(\n\t\t\t\toutput,\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tthis._selections.length > 1,\n\t\t\t\tvisibleRangesWithStyle,\n\t\t\t);\n\t\t}\n\n\t\tthis._previousFrameVisibleRangesWithStyle =\n\t\t\tthisFrameVisibleRangesWithStyle;\n\t\tthis._renderResult = output.map(\n\t\t\t([internalCorners, restOfSelection]) =>\n\t\t\t\tinternalCorners + restOfSelection,\n\t\t);\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorSelectionForegroundColor = theme.getColor(\n\t\teditorSelectionForeground,\n\t);\n\tif (\n\t\teditorSelectionForegroundColor &&\n\t\t!editorSelectionForegroundColor.isTransparent()\n\t) {\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`,\n\t\t);\n\t}\n});\n\nfunction abs(n: number): number {\n\treturn n < 0 ? -n : n;\n}\n"],
  "mappings": "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",
  "names": ["CornerStyle", "className"]
}
