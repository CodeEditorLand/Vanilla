{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./currentLineHighlight.css\";\nimport * as arrays from \"../../../../base/common/arrays.js\";\nimport { isHighContrast } from \"../../../../platform/theme/common/theme.js\";\nimport { registerThemingParticipant } from \"../../../../platform/theme/common/themeService.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport {\n\teditorLineHighlight,\n\teditorLineHighlightBorder,\n} from \"../../../common/core/editorColorRegistry.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { Selection } from \"../../../common/core/selection.js\";\nimport type * as viewEvents from \"../../../common/viewEvents.js\";\nimport type { ViewContext } from \"../../../common/viewModel/viewContext.js\";\nimport { DynamicViewOverlay } from \"../../view/dynamicViewOverlay.js\";\nimport type { RenderingContext } from \"../../view/renderingContext.js\";\n\nexport abstract class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n\tprivate readonly _context: ViewContext;\n\tprotected _renderLineHighlight: \"none\" | \"gutter\" | \"line\" | \"all\";\n\tprotected _wordWrap: boolean;\n\tprotected _contentLeft: number;\n\tprotected _contentWidth: number;\n\tprotected _selectionIsEmpty: boolean;\n\tprotected _renderLineHighlightOnlyWhenFocus: boolean;\n\tprotected _focused: boolean;\n\t/**\n\t * Unique sorted list of view line numbers which have cursors sitting on them.\n\t */\n\tprivate _cursorLineNumbers: number[];\n\tprivate _selections: Selection[];\n\tprivate _renderData: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._renderLineHighlight = options.get(\n\t\t\tEditorOption.renderLineHighlight,\n\t\t);\n\t\tthis._renderLineHighlightOnlyWhenFocus = options.get(\n\t\t\tEditorOption.renderLineHighlightOnlyWhenFocus,\n\t\t);\n\t\tthis._wordWrap = layoutInfo.isViewportWrapping;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._selectionIsEmpty = true;\n\t\tthis._focused = false;\n\t\tthis._cursorLineNumbers = [1];\n\t\tthis._selections = [new Selection(1, 1, 1, 1)];\n\t\tthis._renderData = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tsuper.dispose();\n\t}\n\n\tprivate _readFromSelections(): boolean {\n\t\tlet hasChanged = false;\n\n\t\tconst lineNumbers = new Set<number>();\n\t\tfor (const selection of this._selections) {\n\t\t\tlineNumbers.add(selection.positionLineNumber);\n\t\t}\n\t\tconst cursorsLineNumbers = Array.from(lineNumbers);\n\t\tcursorsLineNumbers.sort((a, b) => a - b);\n\t\tif (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n\t\t\tthis._cursorLineNumbers = cursorsLineNumbers;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tconst selectionIsEmpty = this._selections.every((s) => s.isEmpty());\n\t\tif (this._selectionIsEmpty !== selectionIsEmpty) {\n\t\t\tthis._selectionIsEmpty = selectionIsEmpty;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\treturn hasChanged;\n\t}\n\n\t// --- begin event handlers\n\tpublic override onThemeChanged(\n\t\te: viewEvents.ViewThemeChangedEvent,\n\t): boolean {\n\t\treturn this._readFromSelections();\n\t}\n\tpublic override onConfigurationChanged(\n\t\te: viewEvents.ViewConfigurationChangedEvent,\n\t): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._renderLineHighlight = options.get(\n\t\t\tEditorOption.renderLineHighlight,\n\t\t);\n\t\tthis._renderLineHighlightOnlyWhenFocus = options.get(\n\t\t\tEditorOption.renderLineHighlightOnlyWhenFocus,\n\t\t);\n\t\tthis._wordWrap = layoutInfo.isViewportWrapping;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(\n\t\te: viewEvents.ViewCursorStateChangedEvent,\n\t): boolean {\n\t\tthis._selections = e.selections;\n\t\treturn this._readFromSelections();\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(\n\t\te: viewEvents.ViewLinesDeletedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(\n\t\te: viewEvents.ViewLinesInsertedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(\n\t\te: viewEvents.ViewScrollChangedEvent,\n\t): boolean {\n\t\treturn e.scrollWidthChanged || e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(\n\t\te: viewEvents.ViewZonesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFocusChanged(\n\t\te: viewEvents.ViewFocusChangedEvent,\n\t): boolean {\n\t\tif (!this._renderLineHighlightOnlyWhenFocus) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._focused = e.isFocused;\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._shouldRenderThis()) {\n\t\t\tthis._renderData = null;\n\t\t\treturn;\n\t\t}\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\t// initialize renderData\n\t\tconst renderData: string[] = [];\n\t\tfor (\n\t\t\tlet lineNumber = visibleStartLineNumber;\n\t\t\tlineNumber <= visibleEndLineNumber;\n\t\t\tlineNumber++\n\t\t) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\trenderData[lineIndex] = \"\";\n\t\t}\n\n\t\tif (this._wordWrap) {\n\t\t\t// do a first pass to render wrapped lines\n\t\t\tconst renderedLineWrapped = this._renderOne(ctx, false);\n\t\t\tfor (const cursorLineNumber of this._cursorLineNumbers) {\n\t\t\t\tconst coordinatesConverter =\n\t\t\t\t\tthis._context.viewModel.coordinatesConverter;\n\t\t\t\tconst modelLineNumber =\n\t\t\t\t\tcoordinatesConverter.convertViewPositionToModelPosition(\n\t\t\t\t\t\tnew Position(cursorLineNumber, 1),\n\t\t\t\t\t).lineNumber;\n\t\t\t\tconst firstViewLineNumber =\n\t\t\t\t\tcoordinatesConverter.convertModelPositionToViewPosition(\n\t\t\t\t\t\tnew Position(modelLineNumber, 1),\n\t\t\t\t\t).lineNumber;\n\t\t\t\tconst lastViewLineNumber =\n\t\t\t\t\tcoordinatesConverter.convertModelPositionToViewPosition(\n\t\t\t\t\t\tnew Position(\n\t\t\t\t\t\t\tmodelLineNumber,\n\t\t\t\t\t\t\tthis._context.viewModel.model.getLineMaxColumn(\n\t\t\t\t\t\t\t\tmodelLineNumber,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t).lineNumber;\n\n\t\t\t\tconst firstLine = Math.max(\n\t\t\t\t\tfirstViewLineNumber,\n\t\t\t\t\tvisibleStartLineNumber,\n\t\t\t\t);\n\t\t\t\tconst lastLine = Math.min(\n\t\t\t\t\tlastViewLineNumber,\n\t\t\t\t\tvisibleEndLineNumber,\n\t\t\t\t);\n\t\t\t\tfor (\n\t\t\t\t\tlet lineNumber = firstLine;\n\t\t\t\t\tlineNumber <= lastLine;\n\t\t\t\t\tlineNumber++\n\t\t\t\t) {\n\t\t\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\t\t\trenderData[lineIndex] = renderedLineWrapped;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// do a second pass to render exact lines\n\t\tconst renderedLineExact = this._renderOne(ctx, true);\n\t\tfor (const cursorLineNumber of this._cursorLineNumbers) {\n\t\t\tif (\n\t\t\t\tcursorLineNumber < visibleStartLineNumber ||\n\t\t\t\tcursorLineNumber > visibleEndLineNumber\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst lineIndex = cursorLineNumber - visibleStartLineNumber;\n\t\t\trenderData[lineIndex] = renderedLineExact;\n\t\t}\n\n\t\tthis._renderData = renderData;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderData) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex >= this._renderData.length) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn this._renderData[lineIndex];\n\t}\n\n\tprotected _shouldRenderInMargin(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === \"gutter\" ||\n\t\t\t\tthis._renderLineHighlight === \"all\") &&\n\t\t\t(!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n\n\tprotected _shouldRenderInContent(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === \"line\" ||\n\t\t\t\tthis._renderLineHighlight === \"all\") &&\n\t\t\tthis._selectionIsEmpty &&\n\t\t\t(!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n\n\tprotected abstract _shouldRenderThis(): boolean;\n\tprotected abstract _shouldRenderOther(): boolean;\n\tprotected abstract _renderOne(\n\t\tctx: RenderingContext,\n\t\texact: boolean,\n\t): string;\n}\n\n/**\n * Emphasizes the current line by drawing a border around it.\n */\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n\tprotected _renderOne(ctx: RenderingContext, exact: boolean): string {\n\t\tconst className =\n\t\t\t\"current-line\" +\n\t\t\t(this._shouldRenderInMargin() ? \" current-line-both\" : \"\") +\n\t\t\t(exact ? \" current-line-exact\" : \"\");\n\t\treturn `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px;\"></div>`;\n\t}\n\tprotected _shouldRenderThis(): boolean {\n\t\treturn this._shouldRenderInContent();\n\t}\n\tprotected _shouldRenderOther(): boolean {\n\t\treturn this._shouldRenderInMargin();\n\t}\n}\n\n/**\n * Emphasizes the current line margin/gutter by drawing a border around it.\n */\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n\tprotected _renderOne(ctx: RenderingContext, exact: boolean): string {\n\t\tconst className =\n\t\t\t\"current-line\" +\n\t\t\t(this._shouldRenderInMargin() ? \" current-line-margin\" : \"\") +\n\t\t\t(this._shouldRenderOther() ? \" current-line-margin-both\" : \"\") +\n\t\t\t(this._shouldRenderInMargin() && exact\n\t\t\t\t? \" current-line-exact-margin\"\n\t\t\t\t: \"\");\n\t\treturn `<div class=\"${className}\" style=\"width:${this._contentLeft}px\"></div>`;\n\t}\n\tprotected _shouldRenderThis(): boolean {\n\t\treturn true;\n\t}\n\tprotected _shouldRenderOther(): boolean {\n\t\treturn this._shouldRenderInContent();\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst lineHighlight = theme.getColor(editorLineHighlight);\n\tif (lineHighlight) {\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`,\n\t\t);\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`,\n\t\t);\n\t}\n\tif (\n\t\t!lineHighlight ||\n\t\tlineHighlight.isTransparent() ||\n\t\ttheme.defines(editorLineHighlightBorder)\n\t) {\n\t\tconst lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n\t\tif (lineHighlightBorder) {\n\t\t\tcollector.addRule(\n\t\t\t\t`.monaco-editor .view-overlays .current-line-exact { border: 2px solid ${lineHighlightBorder}; }`,\n\t\t\t);\n\t\t\tcollector.addRule(\n\t\t\t\t`.monaco-editor .margin-view-overlays .current-line-exact-margin { border: 2px solid ${lineHighlightBorder}; }`,\n\t\t\t);\n\t\t\tif (isHighContrast(theme.type)) {\n\t\t\t\tcollector.addRule(\n\t\t\t\t\t`.monaco-editor .view-overlays .current-line-exact { border-width: 1px; }`,\n\t\t\t\t);\n\t\t\t\tcollector.addRule(\n\t\t\t\t\t`.monaco-editor .margin-view-overlays .current-line-exact-margin { border-width: 1px; }`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n});\n"],
  "mappings": ";;AAKA,OAAO;AACP,YAAY,YAAY;AACxB,SAAS,sBAAsB;AAC/B,SAAS,kCAAkC;AAC3C,SAAS,oBAAoB;AAC7B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAG1B,SAAS,0BAA0B;AAG5B,MAAe,qCAAqC,mBAAmB;AAAA,EArB9E,OAqB8E;AAAA;AAAA;AAAA,EAC5D;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIF;AAAA,EACA;AAAA,EACA;AAAA,EAER,YAAY,SAAsB;AACjC,UAAM;AACN,SAAK,WAAW;AAEhB,UAAM,UAAU,KAAK,SAAS,cAAc;AAC5C,UAAM,aAAa,QAAQ,IAAI,aAAa,UAAU;AACtD,SAAK,uBAAuB,QAAQ;AAAA,MACnC,aAAa;AAAA,IACd;AACA,SAAK,oCAAoC,QAAQ;AAAA,MAChD,aAAa;AAAA,IACd;AACA,SAAK,YAAY,WAAW;AAC5B,SAAK,eAAe,WAAW;AAC/B,SAAK,gBAAgB,WAAW;AAChC,SAAK,oBAAoB;AACzB,SAAK,WAAW;AAChB,SAAK,qBAAqB,CAAC,CAAC;AAC5B,SAAK,cAAc,CAAC,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7C,SAAK,cAAc;AAEnB,SAAK,SAAS,gBAAgB,IAAI;AAAA,EACnC;AAAA,EAEgB,UAAgB;AAC/B,SAAK,SAAS,mBAAmB,IAAI;AACrC,UAAM,QAAQ;AAAA,EACf;AAAA,EAEQ,sBAA+B;AACtC,QAAI,aAAa;AAEjB,UAAM,cAAc,oBAAI,IAAY;AACpC,eAAW,aAAa,KAAK,aAAa;AACzC,kBAAY,IAAI,UAAU,kBAAkB;AAAA,IAC7C;AACA,UAAM,qBAAqB,MAAM,KAAK,WAAW;AACjD,uBAAmB,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC;AACvC,QAAI,CAAC,OAAO,OAAO,KAAK,oBAAoB,kBAAkB,GAAG;AAChE,WAAK,qBAAqB;AAC1B,mBAAa;AAAA,IACd;AAEA,UAAM,mBAAmB,KAAK,YAAY,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC;AAClE,QAAI,KAAK,sBAAsB,kBAAkB;AAChD,WAAK,oBAAoB;AACzB,mBAAa;AAAA,IACd;AAEA,WAAO;AAAA,EACR;AAAA;AAAA,EAGgB,eACf,GACU;AACV,WAAO,KAAK,oBAAoB;AAAA,EACjC;AAAA,EACgB,uBACf,GACU;AACV,UAAM,UAAU,KAAK,SAAS,cAAc;AAC5C,UAAM,aAAa,QAAQ,IAAI,aAAa,UAAU;AACtD,SAAK,uBAAuB,QAAQ;AAAA,MACnC,aAAa;AAAA,IACd;AACA,SAAK,oCAAoC,QAAQ;AAAA,MAChD,aAAa;AAAA,IACd;AACA,SAAK,YAAY,WAAW;AAC5B,SAAK,eAAe,WAAW;AAC/B,SAAK,gBAAgB,WAAW;AAChC,WAAO;AAAA,EACR;AAAA,EACgB,qBACf,GACU;AACV,SAAK,cAAc,EAAE;AACrB,WAAO,KAAK,oBAAoB;AAAA,EACjC;AAAA,EACgB,UAAU,GAAyC;AAClE,WAAO;AAAA,EACR;AAAA,EACgB,eACf,GACU;AACV,WAAO;AAAA,EACR;AAAA,EACgB,gBACf,GACU;AACV,WAAO;AAAA,EACR;AAAA,EACgB,gBACf,GACU;AACV,WAAO,EAAE,sBAAsB,EAAE;AAAA,EAClC;AAAA,EACgB,eACf,GACU;AACV,WAAO;AAAA,EACR;AAAA,EACgB,eACf,GACU;AACV,QAAI,CAAC,KAAK,mCAAmC;AAC5C,aAAO;AAAA,IACR;AAEA,SAAK,WAAW,EAAE;AAClB,WAAO;AAAA,EACR;AAAA;AAAA,EAGO,cAAc,KAA6B;AACjD,QAAI,CAAC,KAAK,kBAAkB,GAAG;AAC9B,WAAK,cAAc;AACnB;AAAA,IACD;AACA,UAAM,yBAAyB,IAAI,aAAa;AAChD,UAAM,uBAAuB,IAAI,aAAa;AAG9C,UAAM,aAAuB,CAAC;AAC9B,aACK,aAAa,wBACjB,cAAc,sBACd,cACC;AACD,YAAM,YAAY,aAAa;AAC/B,iBAAW,SAAS,IAAI;AAAA,IACzB;AAEA,QAAI,KAAK,WAAW;AAEnB,YAAM,sBAAsB,KAAK,WAAW,KAAK,KAAK;AACtD,iBAAW,oBAAoB,KAAK,oBAAoB;AACvD,cAAM,uBACL,KAAK,SAAS,UAAU;AACzB,cAAM,kBACL,qBAAqB;AAAA,UACpB,IAAI,SAAS,kBAAkB,CAAC;AAAA,QACjC,EAAE;AACH,cAAM,sBACL,qBAAqB;AAAA,UACpB,IAAI,SAAS,iBAAiB,CAAC;AAAA,QAChC,EAAE;AACH,cAAM,qBACL,qBAAqB;AAAA,UACpB,IAAI;AAAA,YACH;AAAA,YACA,KAAK,SAAS,UAAU,MAAM;AAAA,cAC7B;AAAA,YACD;AAAA,UACD;AAAA,QACD,EAAE;AAEH,cAAM,YAAY,KAAK;AAAA,UACtB;AAAA,UACA;AAAA,QACD;AACA,cAAM,WAAW,KAAK;AAAA,UACrB;AAAA,UACA;AAAA,QACD;AACA,iBACK,aAAa,WACjB,cAAc,UACd,cACC;AACD,gBAAM,YAAY,aAAa;AAC/B,qBAAW,SAAS,IAAI;AAAA,QACzB;AAAA,MACD;AAAA,IACD;AAGA,UAAM,oBAAoB,KAAK,WAAW,KAAK,IAAI;AACnD,eAAW,oBAAoB,KAAK,oBAAoB;AACvD,UACC,mBAAmB,0BACnB,mBAAmB,sBAClB;AACD;AAAA,MACD;AACA,YAAM,YAAY,mBAAmB;AACrC,iBAAW,SAAS,IAAI;AAAA,IACzB;AAEA,SAAK,cAAc;AAAA,EACpB;AAAA,EAEO,OAAO,iBAAyB,YAA4B;AAClE,QAAI,CAAC,KAAK,aAAa;AACtB,aAAO;AAAA,IACR;AACA,UAAM,YAAY,aAAa;AAC/B,QAAI,aAAa,KAAK,YAAY,QAAQ;AACzC,aAAO;AAAA,IACR;AACA,WAAO,KAAK,YAAY,SAAS;AAAA,EAClC;AAAA,EAEU,wBAAiC;AAC1C,YACE,KAAK,yBAAyB,YAC9B,KAAK,yBAAyB,WAC9B,CAAC,KAAK,qCAAqC,KAAK;AAAA,EAEnD;AAAA,EAEU,yBAAkC;AAC3C,YACE,KAAK,yBAAyB,UAC9B,KAAK,yBAAyB,UAC/B,KAAK,sBACJ,CAAC,KAAK,qCAAqC,KAAK;AAAA,EAEnD;AAQD;AAKO,MAAM,oCAAoC,6BAA6B;AAAA,EA7Q9E,OA6Q8E;AAAA;AAAA;AAAA,EACnE,WAAW,KAAuB,OAAwB;AACnE,UAAM,YACL,kBACC,KAAK,sBAAsB,IAAI,uBAAuB,OACtD,QAAQ,wBAAwB;AAClC,WAAO,eAAe,SAAS,kBAAkB,KAAK,IAAI,IAAI,aAAa,KAAK,aAAa,CAAC;AAAA,EAC/F;AAAA,EACU,oBAA6B;AACtC,WAAO,KAAK,uBAAuB;AAAA,EACpC;AAAA,EACU,qBAA8B;AACvC,WAAO,KAAK,sBAAsB;AAAA,EACnC;AACD;AAKO,MAAM,0CAA0C,6BAA6B;AAAA,EAhSpF,OAgSoF;AAAA;AAAA;AAAA,EACzE,WAAW,KAAuB,OAAwB;AACnE,UAAM,YACL,kBACC,KAAK,sBAAsB,IAAI,yBAAyB,OACxD,KAAK,mBAAmB,IAAI,8BAA8B,OAC1D,KAAK,sBAAsB,KAAK,QAC9B,+BACA;AACJ,WAAO,eAAe,SAAS,kBAAkB,KAAK,YAAY;AAAA,EACnE;AAAA,EACU,oBAA6B;AACtC,WAAO;AAAA,EACR;AAAA,EACU,qBAA8B;AACvC,WAAO,KAAK,uBAAuB;AAAA,EACpC;AACD;AAEA,2BAA2B,CAAC,OAAO,cAAc;AAChD,QAAM,gBAAgB,MAAM,SAAS,mBAAmB;AACxD,MAAI,eAAe;AAClB,cAAU;AAAA,MACT,mEAAmE,aAAa;AAAA,IACjF;AACA,cAAU;AAAA,MACT,iFAAiF,aAAa;AAAA,IAC/F;AAAA,EACD;AACA,MACC,CAAC,iBACD,cAAc,cAAc,KAC5B,MAAM,QAAQ,yBAAyB,GACtC;AACD,UAAM,sBAAsB,MAAM,SAAS,yBAAyB;AACpE,QAAI,qBAAqB;AACxB,gBAAU;AAAA,QACT,yEAAyE,mBAAmB;AAAA,MAC7F;AACA,gBAAU;AAAA,QACT,uFAAuF,mBAAmB;AAAA,MAC3G;AACA,UAAI,eAAe,MAAM,IAAI,GAAG;AAC/B,kBAAU;AAAA,UACT;AAAA,QACD;AACA,kBAAU;AAAA,UACT;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD,CAAC;",
  "names": []
}
