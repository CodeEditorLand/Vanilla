{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/margin/margin.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./margin.css\";\nimport {\n\ttype FastDomNode,\n\tcreateFastDomNode,\n} from \"../../../../base/browser/fastDomNode.js\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type * as viewEvents from \"../../../common/viewEvents.js\";\nimport type { ViewContext } from \"../../../common/viewModel/viewContext.js\";\nimport type {\n\tRenderingContext,\n\tRestrictedRenderingContext,\n} from \"../../view/renderingContext.js\";\nimport { ViewPart } from \"../../view/viewPart.js\";\n\n/**\n * Margin is a vertical strip located on the left of the editor's content area.\n * It is used for various features such as line numbers, folding markers, and\n * decorations that provide additional information about the lines of code.\n */\nexport class Margin extends ViewPart {\n\tpublic static readonly CLASS_NAME = \"glyph-margin\";\n\tpublic static readonly OUTER_CLASS_NAME = \"margin\";\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate _canUseLayerHinting: boolean;\n\tprivate _contentLeft: number;\n\tprivate _glyphMarginLeft: number;\n\tprivate _glyphMarginWidth: number;\n\tprivate _glyphMarginBackgroundDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._canUseLayerHinting = !options.get(\n\t\t\tEditorOption.disableLayerHinting,\n\t\t);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\n\t\tthis._domNode = createFastDomNode(document.createElement(\"div\"));\n\t\tthis._domNode.setClassName(Margin.OUTER_CLASS_NAME);\n\t\tthis._domNode.setPosition(\"absolute\");\n\t\tthis._domNode.setAttribute(\"role\", \"presentation\");\n\t\tthis._domNode.setAttribute(\"aria-hidden\", \"true\");\n\n\t\tthis._glyphMarginBackgroundDomNode = createFastDomNode(\n\t\t\tdocument.createElement(\"div\"),\n\t\t);\n\t\tthis._glyphMarginBackgroundDomNode.setClassName(Margin.CLASS_NAME);\n\n\t\tthis._domNode.appendChild(this._glyphMarginBackgroundDomNode);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(\n\t\te: viewEvents.ViewConfigurationChangedEvent,\n\t): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._canUseLayerHinting = !options.get(\n\t\t\tEditorOption.disableLayerHinting,\n\t\t);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(\n\t\te: viewEvents.ViewScrollChangedEvent,\n\t): boolean {\n\t\treturn super.onScrollChanged(e) || e.scrollTopChanged;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setLayerHinting(this._canUseLayerHinting);\n\t\tthis._domNode.setContain(\"strict\");\n\t\tconst adjustedScrollTop = ctx.scrollTop - ctx.bigNumbersDelta;\n\t\tthis._domNode.setTop(-adjustedScrollTop);\n\n\t\tconst height = Math.min(ctx.scrollHeight, 1000000);\n\t\tthis._domNode.setHeight(height);\n\t\tthis._domNode.setWidth(this._contentLeft);\n\n\t\tthis._glyphMarginBackgroundDomNode.setLeft(this._glyphMarginLeft);\n\t\tthis._glyphMarginBackgroundDomNode.setWidth(this._glyphMarginWidth);\n\t\tthis._glyphMarginBackgroundDomNode.setHeight(height);\n\t}\n}\n"],
  "mappings": ";;AAKA,OAAO;AACP;AAAA,EAEC;AAAA,OACM;AACP,SAAS,oBAAoB;AAO7B,SAAS,gBAAgB;AAOlB,MAAM,eAAe,SAAS;AAAA,EAxBrC,OAwBqC;AAAA;AAAA;AAAA,EACpC,OAAuB,aAAa;AAAA,EACpC,OAAuB,mBAAmB;AAAA,EAEzB;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAER,YAAY,SAAsB;AACjC,UAAM,OAAO;AACb,UAAM,UAAU,KAAK,SAAS,cAAc;AAC5C,UAAM,aAAa,QAAQ,IAAI,aAAa,UAAU;AAEtD,SAAK,sBAAsB,CAAC,QAAQ;AAAA,MACnC,aAAa;AAAA,IACd;AACA,SAAK,eAAe,WAAW;AAC/B,SAAK,mBAAmB,WAAW;AACnC,SAAK,oBAAoB,WAAW;AAEpC,SAAK,WAAW,kBAAkB,SAAS,cAAc,KAAK,CAAC;AAC/D,SAAK,SAAS,aAAa,OAAO,gBAAgB;AAClD,SAAK,SAAS,YAAY,UAAU;AACpC,SAAK,SAAS,aAAa,QAAQ,cAAc;AACjD,SAAK,SAAS,aAAa,eAAe,MAAM;AAEhD,SAAK,gCAAgC;AAAA,MACpC,SAAS,cAAc,KAAK;AAAA,IAC7B;AACA,SAAK,8BAA8B,aAAa,OAAO,UAAU;AAEjE,SAAK,SAAS,YAAY,KAAK,6BAA6B;AAAA,EAC7D;AAAA,EAEgB,UAAgB;AAC/B,UAAM,QAAQ;AAAA,EACf;AAAA,EAEO,aAAuC;AAC7C,WAAO,KAAK;AAAA,EACb;AAAA;AAAA,EAIgB,uBACf,GACU;AACV,UAAM,UAAU,KAAK,SAAS,cAAc;AAC5C,UAAM,aAAa,QAAQ,IAAI,aAAa,UAAU;AAEtD,SAAK,sBAAsB,CAAC,QAAQ;AAAA,MACnC,aAAa;AAAA,IACd;AACA,SAAK,eAAe,WAAW;AAC/B,SAAK,mBAAmB,WAAW;AACnC,SAAK,oBAAoB,WAAW;AAEpC,WAAO;AAAA,EACR;AAAA,EACgB,gBACf,GACU;AACV,WAAO,MAAM,gBAAgB,CAAC,KAAK,EAAE;AAAA,EACtC;AAAA;AAAA,EAIO,cAAc,KAA6B;AAAA,EAElD;AAAA,EAEO,OAAO,KAAuC;AACpD,SAAK,SAAS,gBAAgB,KAAK,mBAAmB;AACtD,SAAK,SAAS,WAAW,QAAQ;AACjC,UAAM,oBAAoB,IAAI,YAAY,IAAI;AAC9C,SAAK,SAAS,OAAO,CAAC,iBAAiB;AAEvC,UAAM,SAAS,KAAK,IAAI,IAAI,cAAc,GAAO;AACjD,SAAK,SAAS,UAAU,MAAM;AAC9B,SAAK,SAAS,SAAS,KAAK,YAAY;AAExC,SAAK,8BAA8B,QAAQ,KAAK,gBAAgB;AAChE,SAAK,8BAA8B,SAAS,KAAK,iBAAiB;AAClE,SAAK,8BAA8B,UAAU,MAAM;AAAA,EACpD;AACD;",
  "names": []
}
