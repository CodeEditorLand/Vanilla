import{toUint8 as L}from"../../../../base/common/uint.js";import"../../../common/core/rgba.js";import{Constants as s,getCharIndex as U}from"./minimapCharSheet.js";class S{constructor(t,a){this.scale=a;this.charDataNormal=S.soften(t,12/15),this.charDataLight=S.soften(t,50/60)}_minimapCharRendererBrand=void 0;charDataNormal;charDataLight;static soften(t,a){const n=new Uint8ClampedArray(t.length);for(let e=0,r=t.length;e<r;e++)n[e]=L(t[e]*a);return n}renderChar(t,a,n,e,r,i,m,p,u,D,B){const d=s.BASE_CHAR_WIDTH*this.scale,h=s.BASE_CHAR_HEIGHT*this.scale,b=B?1:h;if(a+d>t.width||n+b>t.height){console.warn("bad render request outside image data");return}const R=D?this.charDataLight:this.charDataNormal,C=U(e,u),H=t.width*s.RGBA_CHANNELS_CNT,G=m.r,N=m.g,_=m.b,E=r.r-G,w=r.g-N,y=r.b-_,l=Math.max(i,p),o=t.data;let f=C*d*h,c=n*H+a*s.RGBA_CHANNELS_CNT;for(let A=0;A<b;A++){let g=c;for(let T=0;T<d;T++){const I=R[f++]/255*(i/255);o[g++]=G+E*I,o[g++]=N+w*I,o[g++]=_+y*I,o[g++]=l}c+=H}}blockRenderChar(t,a,n,e,r,i,m,p){const u=s.BASE_CHAR_WIDTH*this.scale,D=s.BASE_CHAR_HEIGHT*this.scale,B=p?1:D;if(a+u>t.width||n+B>t.height){console.warn("bad render request outside image data");return}const d=t.width*s.RGBA_CHANNELS_CNT,h=.5*(r/255),b=i.r,R=i.g,C=i.b,H=e.r-b,G=e.g-R,N=e.b-C,_=b+H*h,E=R+G*h,w=C+N*h,y=Math.max(r,m),l=t.data;let o=n*d+a*s.RGBA_CHANNELS_CNT;for(let f=0;f<B;f++){let c=o;for(let A=0;A<u;A++)l[c++]=_,l[c++]=E,l[c++]=w,l[c++]=y;o+=d}}}export{S as MinimapCharRenderer};
