{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from \"../../../../base/common/uint.js\";\nimport type { RGBA8 } from \"../../../common/core/rgba.js\";\nimport { Constants, getCharIndex } from \"./minimapCharSheet.js\";\n\nexport class MinimapCharRenderer {\n\t_minimapCharRendererBrand: void = undefined;\n\n\tprivate readonly charDataNormal: Uint8ClampedArray;\n\tprivate readonly charDataLight: Uint8ClampedArray;\n\n\tconstructor(\n\t\tcharData: Uint8ClampedArray,\n\t\tpublic readonly scale: number,\n\t) {\n\t\tthis.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n\t\tthis.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n\t}\n\n\tprivate static soften(\n\t\tinput: Uint8ClampedArray,\n\t\tratio: number,\n\t): Uint8ClampedArray {\n\t\tconst result = new Uint8ClampedArray(input.length);\n\t\tfor (let i = 0, len = input.length; i < len; i++) {\n\t\t\tresult[i] = toUint8(input[i] * ratio);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic renderChar(\n\t\ttarget: ImageData,\n\t\tdx: number,\n\t\tdy: number,\n\t\tchCode: number,\n\t\tcolor: RGBA8,\n\t\tforegroundAlpha: number,\n\t\tbackgroundColor: RGBA8,\n\t\tbackgroundAlpha: number,\n\t\tfontScale: number,\n\t\tuseLighterFont: boolean,\n\t\tforce1pxHeight: boolean,\n\t): void {\n\t\tconst charWidth = Constants.BASE_CHAR_WIDTH * this.scale;\n\t\tconst charHeight = Constants.BASE_CHAR_HEIGHT * this.scale;\n\t\tconst renderHeight = force1pxHeight ? 1 : charHeight;\n\t\tif (\n\t\t\tdx + charWidth > target.width ||\n\t\t\tdy + renderHeight > target.height\n\t\t) {\n\t\t\tconsole.warn(\"bad render request outside image data\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst charData = useLighterFont\n\t\t\t? this.charDataLight\n\t\t\t: this.charDataNormal;\n\t\tconst charIndex = getCharIndex(chCode, fontScale);\n\n\t\tconst destWidth = target.width * Constants.RGBA_CHANNELS_CNT;\n\n\t\tconst backgroundR = backgroundColor.r;\n\t\tconst backgroundG = backgroundColor.g;\n\t\tconst backgroundB = backgroundColor.b;\n\n\t\tconst deltaR = color.r - backgroundR;\n\t\tconst deltaG = color.g - backgroundG;\n\t\tconst deltaB = color.b - backgroundB;\n\n\t\tconst destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n\n\t\tconst dest = target.data;\n\t\tlet sourceOffset = charIndex * charWidth * charHeight;\n\n\t\tlet row = dy * destWidth + dx * Constants.RGBA_CHANNELS_CNT;\n\t\tfor (let y = 0; y < renderHeight; y++) {\n\t\t\tlet column = row;\n\t\t\tfor (let x = 0; x < charWidth; x++) {\n\t\t\t\tconst c =\n\t\t\t\t\t(charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n\t\t\t\tdest[column++] = backgroundR + deltaR * c;\n\t\t\t\tdest[column++] = backgroundG + deltaG * c;\n\t\t\t\tdest[column++] = backgroundB + deltaB * c;\n\t\t\t\tdest[column++] = destAlpha;\n\t\t\t}\n\n\t\t\trow += destWidth;\n\t\t}\n\t}\n\n\tpublic blockRenderChar(\n\t\ttarget: ImageData,\n\t\tdx: number,\n\t\tdy: number,\n\t\tcolor: RGBA8,\n\t\tforegroundAlpha: number,\n\t\tbackgroundColor: RGBA8,\n\t\tbackgroundAlpha: number,\n\t\tforce1pxHeight: boolean,\n\t): void {\n\t\tconst charWidth = Constants.BASE_CHAR_WIDTH * this.scale;\n\t\tconst charHeight = Constants.BASE_CHAR_HEIGHT * this.scale;\n\t\tconst renderHeight = force1pxHeight ? 1 : charHeight;\n\t\tif (\n\t\t\tdx + charWidth > target.width ||\n\t\t\tdy + renderHeight > target.height\n\t\t) {\n\t\t\tconsole.warn(\"bad render request outside image data\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst destWidth = target.width * Constants.RGBA_CHANNELS_CNT;\n\n\t\tconst c = 0.5 * (foregroundAlpha / 255);\n\n\t\tconst backgroundR = backgroundColor.r;\n\t\tconst backgroundG = backgroundColor.g;\n\t\tconst backgroundB = backgroundColor.b;\n\n\t\tconst deltaR = color.r - backgroundR;\n\t\tconst deltaG = color.g - backgroundG;\n\t\tconst deltaB = color.b - backgroundB;\n\n\t\tconst colorR = backgroundR + deltaR * c;\n\t\tconst colorG = backgroundG + deltaG * c;\n\t\tconst colorB = backgroundB + deltaB * c;\n\n\t\tconst destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n\n\t\tconst dest = target.data;\n\n\t\tlet row = dy * destWidth + dx * Constants.RGBA_CHANNELS_CNT;\n\t\tfor (let y = 0; y < renderHeight; y++) {\n\t\t\tlet column = row;\n\t\t\tfor (let x = 0; x < charWidth; x++) {\n\t\t\t\tdest[column++] = colorR;\n\t\t\t\tdest[column++] = colorG;\n\t\t\t\tdest[column++] = colorB;\n\t\t\t\tdest[column++] = destAlpha;\n\t\t\t}\n\n\t\t\trow += destWidth;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
