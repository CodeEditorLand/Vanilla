{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/viewParts/blockDecorations/blockDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype FastDomNode,\n\tcreateFastDomNode,\n} from \"../../../../base/browser/fastDomNode.js\";\nimport \"./blockDecorations.css\";\nimport { EditorOption } from \"../../../common/config/editorOptions.js\";\nimport type * as viewEvents from \"../../../common/viewEvents.js\";\nimport type { ViewContext } from \"../../../common/viewModel/viewContext.js\";\nimport type {\n\tRenderingContext,\n\tRestrictedRenderingContext,\n} from \"../../view/renderingContext.js\";\nimport { ViewPart } from \"../../view/viewPart.js\";\n\nexport class BlockDecorations extends ViewPart {\n\tpublic domNode: FastDomNode<HTMLElement>;\n\n\tprivate readonly blocks: FastDomNode<HTMLElement>[] = [];\n\n\tprivate contentWidth = -1;\n\tprivate contentLeft = 0;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis.domNode = createFastDomNode<HTMLElement>(\n\t\t\tdocument.createElement(\"div\"),\n\t\t);\n\t\tthis.domNode.setAttribute(\"role\", \"presentation\");\n\t\tthis.domNode.setAttribute(\"aria-hidden\", \"true\");\n\t\tthis.domNode.setClassName(\"blockDecorations-container\");\n\n\t\tthis.update();\n\t}\n\n\tprivate update(): boolean {\n\t\tlet didChange = false;\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst newContentWidth =\n\t\t\tlayoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n\n\t\tif (this.contentWidth !== newContentWidth) {\n\t\t\tthis.contentWidth = newContentWidth;\n\t\t\tdidChange = true;\n\t\t}\n\n\t\tconst newContentLeft = layoutInfo.contentLeft;\n\t\tif (this.contentLeft !== newContentLeft) {\n\t\t\tthis.contentLeft = newContentLeft;\n\t\t\tdidChange = true;\n\t\t}\n\n\t\treturn didChange;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(\n\t\te: viewEvents.ViewConfigurationChangedEvent,\n\t): boolean {\n\t\treturn this.update();\n\t}\n\tpublic override onScrollChanged(\n\t\te: viewEvents.ViewScrollChangedEvent,\n\t): boolean {\n\t\treturn e.scrollTopChanged || e.scrollLeftChanged;\n\t}\n\tpublic override onDecorationsChanged(\n\t\te: viewEvents.ViewDecorationsChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\n\tpublic override onZonesChanged(\n\t\te: viewEvents.ViewZonesChangedEvent,\n\t): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tlet count = 0;\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tfor (const decoration of decorations) {\n\t\t\tif (!decoration.options.blockClassName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet block = this.blocks[count];\n\t\t\tif (!block) {\n\t\t\t\tblock = this.blocks[count] = createFastDomNode(\n\t\t\t\t\tdocument.createElement(\"div\"),\n\t\t\t\t);\n\t\t\t\tthis.domNode.appendChild(block);\n\t\t\t}\n\n\t\t\tlet top: number;\n\t\t\tlet bottom: number;\n\n\t\t\tif (decoration.options.blockIsAfterEnd) {\n\t\t\t\t// range must be empty\n\t\t\t\ttop = ctx.getVerticalOffsetAfterLineNumber(\n\t\t\t\t\tdecoration.range.endLineNumber,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t\tbottom = ctx.getVerticalOffsetAfterLineNumber(\n\t\t\t\t\tdecoration.range.endLineNumber,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttop = ctx.getVerticalOffsetForLineNumber(\n\t\t\t\t\tdecoration.range.startLineNumber,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t\tbottom =\n\t\t\t\t\tdecoration.range.isEmpty() &&\n\t\t\t\t\t!decoration.options.blockDoesNotCollapse\n\t\t\t\t\t\t? ctx.getVerticalOffsetForLineNumber(\n\t\t\t\t\t\t\t\tdecoration.range.startLineNumber,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: ctx.getVerticalOffsetAfterLineNumber(\n\t\t\t\t\t\t\t\tdecoration.range.endLineNumber,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst [paddingTop, paddingRight, paddingBottom, paddingLeft] =\n\t\t\t\tdecoration.options.blockPadding ?? [0, 0, 0, 0];\n\n\t\t\tblock.setClassName(\n\t\t\t\t\"blockDecorations-block \" + decoration.options.blockClassName,\n\t\t\t);\n\t\t\tblock.setLeft(this.contentLeft - paddingLeft);\n\t\t\tblock.setWidth(this.contentWidth + paddingLeft + paddingRight);\n\t\t\tblock.setTop(top - ctx.scrollTop - paddingTop);\n\t\t\tblock.setHeight(bottom - top + paddingTop + paddingBottom);\n\n\t\t\tcount++;\n\t\t}\n\n\t\tfor (let i = count; i < this.blocks.length; i++) {\n\t\t\tthis.blocks[i].domNode.remove();\n\t\t}\n\t\tthis.blocks.length = count;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
