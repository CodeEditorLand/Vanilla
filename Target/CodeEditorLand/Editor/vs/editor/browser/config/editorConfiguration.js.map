{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/config/editorConfiguration.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from '../../../base/browser/browser.js';\nimport * as arrays from '../../../base/common/arrays.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { ElementSizeObserver } from './elementSizeObserver.js';\nimport { FontMeasurements } from './fontMeasurements.js';\nimport { migrateOptions } from './migrateOptions.js';\nimport { TabFocus } from './tabFocus.js';\nimport { ComputeOptionsMemory, ConfigurationChangedEvent, EditorOption, editorOptionsRegistry, FindComputedEditorOptionValueById, IComputedEditorOptions, IEditorOptions, IEnvironmentalOptions } from '../../common/config/editorOptions.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { BareFontInfo, FontInfo, IValidatedEditorOptions } from '../../common/config/fontInfo.js';\nimport { IDimension } from '../../common/core/dimension.js';\nimport { IEditorConfiguration } from '../../common/config/editorConfiguration.js';\nimport { AccessibilitySupport, IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { getWindow, getWindowById } from '../../../base/browser/dom.js';\nimport { PixelRatio } from '../../../base/browser/pixelRatio.js';\nimport { MenuId } from '../../../platform/actions/common/actions.js';\n\nexport interface IEditorConstructionOptions extends IEditorOptions {\n\t/**\n\t * The initial editor dimension (to avoid measuring the container).\n\t */\n\tdimension?: IDimension;\n\t/**\n\t * Place overflow widgets inside an external DOM node.\n\t * Defaults to an internal DOM node.\n\t */\n\toverflowWidgetsDomNode?: HTMLElement;\n}\n\nexport class EditorConfiguration extends Disposable implements IEditorConfiguration {\n\n\tprivate _onDidChange = this._register(new Emitter<ConfigurationChangedEvent>());\n\tpublic readonly onDidChange: Event<ConfigurationChangedEvent> = this._onDidChange.event;\n\n\tprivate _onDidChangeFast = this._register(new Emitter<ConfigurationChangedEvent>());\n\tpublic readonly onDidChangeFast: Event<ConfigurationChangedEvent> = this._onDidChangeFast.event;\n\n\tpublic readonly isSimpleWidget: boolean;\n\tpublic readonly contextMenuId: MenuId;\n\tprivate readonly _containerObserver: ElementSizeObserver;\n\n\tprivate _isDominatedByLongLines: boolean = false;\n\tprivate _viewLineCount: number = 1;\n\tprivate _lineNumbersDigitCount: number = 1;\n\tprivate _reservedHeight: number = 0;\n\tprivate _glyphMarginDecorationLaneCount: number = 1;\n\tprivate _targetWindowId: number;\n\n\tprivate readonly _computeOptionsMemory: ComputeOptionsMemory = new ComputeOptionsMemory();\n\t/**\n\t * Raw options as they were passed in and merged with all calls to `updateOptions`.\n\t */\n\tprivate readonly _rawOptions: IEditorOptions;\n\t/**\n\t * Validated version of `_rawOptions`.\n\t */\n\tprivate _validatedOptions: ValidatedEditorOptions;\n\t/**\n\t * Complete options which are a combination of passed in options and env values.\n\t */\n\tpublic options: ComputedEditorOptions;\n\n\tconstructor(\n\t\tisSimpleWidget: boolean,\n\t\tcontextMenuId: MenuId,\n\t\toptions: Readonly<IEditorConstructionOptions>,\n\t\tcontainer: HTMLElement | null,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis.isSimpleWidget = isSimpleWidget;\n\t\tthis.contextMenuId = contextMenuId;\n\t\tthis._containerObserver = this._register(new ElementSizeObserver(container, options.dimension));\n\t\tthis._targetWindowId = getWindow(container).vscodeWindowId;\n\n\t\tthis._rawOptions = deepCloneAndMigrateOptions(options);\n\t\tthis._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n\t\tthis.options = this._computeOptions();\n\n\t\tif (this.options.get(EditorOption.automaticLayout)) {\n\t\t\tthis._containerObserver.startObserving();\n\t\t}\n\n\t\tthis._register(EditorZoom.onDidChangeZoomLevel(() => this._recomputeOptions()));\n\t\tthis._register(TabFocus.onDidChangeTabFocus(() => this._recomputeOptions()));\n\t\tthis._register(this._containerObserver.onDidChange(() => this._recomputeOptions()));\n\t\tthis._register(FontMeasurements.onDidChange(() => this._recomputeOptions()));\n\t\tthis._register(PixelRatio.getInstance(getWindow(container)).onDidChange(() => this._recomputeOptions()));\n\t\tthis._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => this._recomputeOptions()));\n\t}\n\n\tprivate _recomputeOptions(): void {\n\t\tconst newOptions = this._computeOptions();\n\t\tconst changeEvent = EditorOptionsUtil.checkEquals(this.options, newOptions);\n\t\tif (changeEvent === null) {\n\t\t\t// nothing changed!\n\t\t\treturn;\n\t\t}\n\n\t\tthis.options = newOptions;\n\t\tthis._onDidChangeFast.fire(changeEvent);\n\t\tthis._onDidChange.fire(changeEvent);\n\t}\n\n\tprivate _computeOptions(): ComputedEditorOptions {\n\t\tconst partialEnv = this._readEnvConfiguration();\n\t\tconst bareFontInfo = BareFontInfo.createFromValidatedSettings(this._validatedOptions, partialEnv.pixelRatio, this.isSimpleWidget);\n\t\tconst fontInfo = this._readFontInfo(bareFontInfo);\n\t\tconst env: IEnvironmentalOptions = {\n\t\t\tmemory: this._computeOptionsMemory,\n\t\t\touterWidth: partialEnv.outerWidth,\n\t\t\touterHeight: partialEnv.outerHeight - this._reservedHeight,\n\t\t\tfontInfo: fontInfo,\n\t\t\textraEditorClassName: partialEnv.extraEditorClassName,\n\t\t\tisDominatedByLongLines: this._isDominatedByLongLines,\n\t\t\tviewLineCount: this._viewLineCount,\n\t\t\tlineNumbersDigitCount: this._lineNumbersDigitCount,\n\t\t\temptySelectionClipboard: partialEnv.emptySelectionClipboard,\n\t\t\tpixelRatio: partialEnv.pixelRatio,\n\t\t\ttabFocusMode: TabFocus.getTabFocusMode(),\n\t\t\taccessibilitySupport: partialEnv.accessibilitySupport,\n\t\t\tglyphMarginDecorationLaneCount: this._glyphMarginDecorationLaneCount\n\t\t};\n\t\treturn EditorOptionsUtil.computeOptions(this._validatedOptions, env);\n\t}\n\n\tprotected _readEnvConfiguration(): IEnvConfiguration {\n\t\treturn {\n\t\t\textraEditorClassName: getExtraEditorClassName(),\n\t\t\touterWidth: this._containerObserver.getWidth(),\n\t\t\touterHeight: this._containerObserver.getHeight(),\n\t\t\temptySelectionClipboard: browser.isWebKit || browser.isFirefox,\n\t\t\tpixelRatio: PixelRatio.getInstance(getWindowById(this._targetWindowId, true).window).value,\n\t\t\taccessibilitySupport: (\n\t\t\t\tthis._accessibilityService.isScreenReaderOptimized()\n\t\t\t\t\t? AccessibilitySupport.Enabled\n\t\t\t\t\t: this._accessibilityService.getAccessibilitySupport()\n\t\t\t)\n\t\t};\n\t}\n\n\tprotected _readFontInfo(bareFontInfo: BareFontInfo): FontInfo {\n\t\treturn FontMeasurements.readFontInfo(getWindowById(this._targetWindowId, true).window, bareFontInfo);\n\t}\n\n\tpublic getRawOptions(): IEditorOptions {\n\t\treturn this._rawOptions;\n\t}\n\n\tpublic updateOptions(_newOptions: Readonly<IEditorOptions>): void {\n\t\tconst newOptions = deepCloneAndMigrateOptions(_newOptions);\n\n\t\tconst didChange = EditorOptionsUtil.applyUpdate(this._rawOptions, newOptions);\n\t\tif (!didChange) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n\t\tthis._recomputeOptions();\n\t}\n\n\tpublic observeContainer(dimension?: IDimension): void {\n\t\tthis._containerObserver.observe(dimension);\n\t}\n\n\tpublic setIsDominatedByLongLines(isDominatedByLongLines: boolean): void {\n\t\tif (this._isDominatedByLongLines === isDominatedByLongLines) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDominatedByLongLines = isDominatedByLongLines;\n\t\tthis._recomputeOptions();\n\t}\n\n\tpublic setModelLineCount(modelLineCount: number): void {\n\t\tconst lineNumbersDigitCount = digitCount(modelLineCount);\n\t\tif (this._lineNumbersDigitCount === lineNumbersDigitCount) {\n\t\t\treturn;\n\t\t}\n\t\tthis._lineNumbersDigitCount = lineNumbersDigitCount;\n\t\tthis._recomputeOptions();\n\t}\n\n\tpublic setViewLineCount(viewLineCount: number): void {\n\t\tif (this._viewLineCount === viewLineCount) {\n\t\t\treturn;\n\t\t}\n\t\tthis._viewLineCount = viewLineCount;\n\t\tthis._recomputeOptions();\n\t}\n\n\tpublic setReservedHeight(reservedHeight: number) {\n\t\tif (this._reservedHeight === reservedHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._reservedHeight = reservedHeight;\n\t\tthis._recomputeOptions();\n\t}\n\n\tpublic setGlyphMarginDecorationLaneCount(decorationLaneCount: number): void {\n\t\tif (this._glyphMarginDecorationLaneCount === decorationLaneCount) {\n\t\t\treturn;\n\t\t}\n\t\tthis._glyphMarginDecorationLaneCount = decorationLaneCount;\n\t\tthis._recomputeOptions();\n\t}\n}\n\nfunction digitCount(n: number): number {\n\tlet r = 0;\n\twhile (n) {\n\t\tn = Math.floor(n / 10);\n\t\tr++;\n\t}\n\treturn r ? r : 1;\n}\n\nfunction getExtraEditorClassName(): string {\n\tlet extra = '';\n\tif (!browser.isSafari && !browser.isWebkitWebView) {\n\t\t// Use user-select: none in all browsers except Safari and native macOS WebView\n\t\textra += 'no-user-select ';\n\t}\n\tif (browser.isSafari) {\n\t\t// See https://github.com/microsoft/vscode/issues/108822\n\t\textra += 'no-minimap-shadow ';\n\t\textra += 'enable-user-select ';\n\t}\n\tif (platform.isMacintosh) {\n\t\textra += 'mac ';\n\t}\n\treturn extra;\n}\n\nexport interface IEnvConfiguration {\n\textraEditorClassName: string;\n\touterWidth: number;\n\touterHeight: number;\n\temptySelectionClipboard: boolean;\n\tpixelRatio: number;\n\taccessibilitySupport: AccessibilitySupport;\n}\n\nclass ValidatedEditorOptions implements IValidatedEditorOptions {\n\tprivate readonly _values: any[] = [];\n\tpublic _read<T>(option: EditorOption): T {\n\t\treturn this._values[option];\n\t}\n\tpublic get<T extends EditorOption>(id: T): FindComputedEditorOptionValueById<T> {\n\t\treturn this._values[id];\n\t}\n\tpublic _write<T>(option: EditorOption, value: T): void {\n\t\tthis._values[option] = value;\n\t}\n}\n\nexport class ComputedEditorOptions implements IComputedEditorOptions {\n\tprivate readonly _values: any[] = [];\n\tpublic _read<T>(id: EditorOption): T {\n\t\tif (id >= this._values.length) {\n\t\t\tthrow new Error('Cannot read uninitialized value');\n\t\t}\n\t\treturn this._values[id];\n\t}\n\tpublic get<T extends EditorOption>(id: T): FindComputedEditorOptionValueById<T> {\n\t\treturn this._read(id);\n\t}\n\tpublic _write<T>(id: EditorOption, value: T): void {\n\t\tthis._values[id] = value;\n\t}\n}\n\nclass EditorOptionsUtil {\n\n\tpublic static validateOptions(options: IEditorOptions): ValidatedEditorOptions {\n\t\tconst result = new ValidatedEditorOptions();\n\t\tfor (const editorOption of editorOptionsRegistry) {\n\t\t\tconst value = (editorOption.name === '_never_' ? undefined : (options as any)[editorOption.name]);\n\t\t\tresult._write(editorOption.id, editorOption.validate(value));\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static computeOptions(options: ValidatedEditorOptions, env: IEnvironmentalOptions): ComputedEditorOptions {\n\t\tconst result = new ComputedEditorOptions();\n\t\tfor (const editorOption of editorOptionsRegistry) {\n\t\t\tresult._write(editorOption.id, editorOption.compute(env, result, options._read(editorOption.id)));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _deepEquals<T>(a: T, b: T): boolean {\n\t\tif (typeof a !== 'object' || typeof b !== 'object' || !a || !b) {\n\t\t\treturn a === b;\n\t\t}\n\t\tif (Array.isArray(a) || Array.isArray(b)) {\n\t\t\treturn (Array.isArray(a) && Array.isArray(b) ? arrays.equals(a, b) : false);\n\t\t}\n\t\tif (Object.keys(a as unknown as object).length !== Object.keys(b as unknown as object).length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const key in a) {\n\t\t\tif (!EditorOptionsUtil._deepEquals(a[key], b[key])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static checkEquals(a: ComputedEditorOptions, b: ComputedEditorOptions): ConfigurationChangedEvent | null {\n\t\tconst result: boolean[] = [];\n\t\tlet somethingChanged = false;\n\t\tfor (const editorOption of editorOptionsRegistry) {\n\t\t\tconst changed = !EditorOptionsUtil._deepEquals(a._read(editorOption.id), b._read(editorOption.id));\n\t\t\tresult[editorOption.id] = changed;\n\t\t\tif (changed) {\n\t\t\t\tsomethingChanged = true;\n\t\t\t}\n\t\t}\n\t\treturn (somethingChanged ? new ConfigurationChangedEvent(result) : null);\n\t}\n\n\t/**\n\t * Returns true if something changed.\n\t * Modifies `options`.\n\t*/\n\tpublic static applyUpdate(options: IEditorOptions, update: Readonly<IEditorOptions>): boolean {\n\t\tlet changed = false;\n\t\tfor (const editorOption of editorOptionsRegistry) {\n\t\t\tif (update.hasOwnProperty(editorOption.name)) {\n\t\t\t\tconst result = editorOption.applyUpdate((options as any)[editorOption.name], (update as any)[editorOption.name]);\n\t\t\t\t(options as any)[editorOption.name] = result.newValue;\n\t\t\t\tchanged = changed || result.didChange;\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n}\n\nfunction deepCloneAndMigrateOptions(_options: Readonly<IEditorOptions>): IEditorOptions {\n\tconst options = objects.deepClone(_options);\n\tmigrateOptions(options);\n\treturn options;\n}\n"],
  "mappings": "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",
  "names": []
}
