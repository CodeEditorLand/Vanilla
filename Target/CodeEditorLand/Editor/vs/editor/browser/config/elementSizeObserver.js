import{Disposable as h}from"../../../base/common/lifecycle.js";import{Emitter as o}from"../../../base/common/event.js";import{getWindow as l,scheduleAtNextAnimationFrame as m}from"../../../base/browser/dom.js";class _ extends h{_onDidChange=this._register(new o);onDidChange=this._onDidChange.event;_referenceDomElement;_width;_height;_resizeObserver;constructor(e,r){super(),this._referenceDomElement=e,this._width=-1,this._height=-1,this._resizeObserver=null,this.measureReferenceDomElement(!1,r)}dispose(){this.stopObserving(),super.dispose()}getWidth(){return this._width}getHeight(){return this._height}startObserving(){if(!this._resizeObserver&&this._referenceDomElement){let e=null;const r=()=>{e?this.observe({width:e.width,height:e.height}):this.observe()};let i=!1,t=!1;const n=()=>{if(i&&!t)try{i=!1,t=!0,r()}finally{m(l(this._referenceDomElement),()=>{t=!1,n()})}};this._resizeObserver=new ResizeObserver(s=>{s&&s[0]&&s[0].contentRect?e={width:s[0].contentRect.width,height:s[0].contentRect.height}:e=null,i=!0,n()}),this._resizeObserver.observe(this._referenceDomElement)}}stopObserving(){this._resizeObserver&&(this._resizeObserver.disconnect(),this._resizeObserver=null)}observe(e){this.measureReferenceDomElement(!0,e)}measureReferenceDomElement(e,r){let i=0,t=0;r?(i=r.width,t=r.height):this._referenceDomElement&&(i=this._referenceDomElement.clientWidth,t=this._referenceDomElement.clientHeight),i=Math.max(5,i),t=Math.max(5,t),(this._width!==i||this._height!==t)&&(this._width=i,this._height=t,e&&this._onDidChange.fire())}}export{_ as ElementSizeObserver};
