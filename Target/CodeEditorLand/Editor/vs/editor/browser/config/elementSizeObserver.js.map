{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/config/elementSizeObserver.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tgetWindow,\n\tscheduleAtNextAnimationFrame,\n} from \"../../../base/browser/dom.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport type { IDimension } from \"../../common/core/dimension.js\";\n\nexport class ElementSizeObserver extends Disposable {\n\tprivate _onDidChange = this._register(new Emitter<void>());\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _referenceDomElement: HTMLElement | null;\n\tprivate _width: number;\n\tprivate _height: number;\n\tprivate _resizeObserver: ResizeObserver | null;\n\n\tconstructor(\n\t\treferenceDomElement: HTMLElement | null,\n\t\tdimension: IDimension | undefined,\n\t) {\n\t\tsuper();\n\t\tthis._referenceDomElement = referenceDomElement;\n\t\tthis._width = -1;\n\t\tthis._height = -1;\n\t\tthis._resizeObserver = null;\n\t\tthis.measureReferenceDomElement(false, dimension);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.stopObserving();\n\t\tsuper.dispose();\n\t}\n\n\tpublic getWidth(): number {\n\t\treturn this._width;\n\t}\n\n\tpublic getHeight(): number {\n\t\treturn this._height;\n\t}\n\n\tpublic startObserving(): void {\n\t\tif (!this._resizeObserver && this._referenceDomElement) {\n\t\t\t// We want to react to the resize observer only once per animation frame\n\t\t\t// The first time the resize observer fires, we will react to it immediately.\n\t\t\t// Otherwise we will postpone to the next animation frame.\n\t\t\t// We'll use `observeContentRect` to store the content rect we received.\n\n\t\t\tlet observedDimenstion: IDimension | null = null;\n\t\t\tconst observeNow = () => {\n\t\t\t\tif (observedDimenstion) {\n\t\t\t\t\tthis.observe({\n\t\t\t\t\t\twidth: observedDimenstion.width,\n\t\t\t\t\t\theight: observedDimenstion.height,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.observe();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet shouldObserve = false;\n\t\t\tlet alreadyObservedThisAnimationFrame = false;\n\n\t\t\tconst update = () => {\n\t\t\t\tif (shouldObserve && !alreadyObservedThisAnimationFrame) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tshouldObserve = false;\n\t\t\t\t\t\talreadyObservedThisAnimationFrame = true;\n\t\t\t\t\t\tobserveNow();\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tscheduleAtNextAnimationFrame(\n\t\t\t\t\t\t\tgetWindow(this._referenceDomElement),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\talreadyObservedThisAnimationFrame = false;\n\t\t\t\t\t\t\t\tupdate();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._resizeObserver = new ResizeObserver((entries) => {\n\t\t\t\tif (entries && entries[0] && entries[0].contentRect) {\n\t\t\t\t\tobservedDimenstion = {\n\t\t\t\t\t\twidth: entries[0].contentRect.width,\n\t\t\t\t\t\theight: entries[0].contentRect.height,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tobservedDimenstion = null;\n\t\t\t\t}\n\t\t\t\tshouldObserve = true;\n\t\t\t\tupdate();\n\t\t\t});\n\t\t\tthis._resizeObserver.observe(this._referenceDomElement);\n\t\t}\n\t}\n\n\tpublic stopObserving(): void {\n\t\tif (this._resizeObserver) {\n\t\t\tthis._resizeObserver.disconnect();\n\t\t\tthis._resizeObserver = null;\n\t\t}\n\t}\n\n\tpublic observe(dimension?: IDimension): void {\n\t\tthis.measureReferenceDomElement(true, dimension);\n\t}\n\n\tprivate measureReferenceDomElement(\n\t\temitEvent: boolean,\n\t\tdimension?: IDimension,\n\t): void {\n\t\tlet observedWidth = 0;\n\t\tlet observedHeight = 0;\n\t\tif (dimension) {\n\t\t\tobservedWidth = dimension.width;\n\t\t\tobservedHeight = dimension.height;\n\t\t} else if (this._referenceDomElement) {\n\t\t\tobservedWidth = this._referenceDomElement.clientWidth;\n\t\t\tobservedHeight = this._referenceDomElement.clientHeight;\n\t\t}\n\t\tobservedWidth = Math.max(5, observedWidth);\n\t\tobservedHeight = Math.max(5, observedHeight);\n\t\tif (this._width !== observedWidth || this._height !== observedHeight) {\n\t\t\tthis._width = observedWidth;\n\t\t\tthis._height = observedHeight;\n\t\t\tif (emitEvent) {\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,eAA2B;AACpC,SAAS,kBAAkB;AAGpB,MAAM,4BAA4B,WAAW;AAAA,EAbpD,OAaoD;AAAA;AAAA;AAAA,EAC3C,eAAe,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EACzC,cAA2B,KAAK,aAAa;AAAA,EAE5C;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EAER,YACC,qBACA,WACC;AACD,UAAM;AACN,SAAK,uBAAuB;AAC5B,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,kBAAkB;AACvB,SAAK,2BAA2B,OAAO,SAAS;AAAA,EACjD;AAAA,EAEgB,UAAgB;AAC/B,SAAK,cAAc;AACnB,UAAM,QAAQ;AAAA,EACf;AAAA,EAEO,WAAmB;AACzB,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,YAAoB;AAC1B,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,iBAAuB;AAC7B,QAAI,CAAC,KAAK,mBAAmB,KAAK,sBAAsB;AAMvD,UAAI,qBAAwC;AAC5C,YAAM,aAAa,6BAAM;AACxB,YAAI,oBAAoB;AACvB,eAAK,QAAQ;AAAA,YACZ,OAAO,mBAAmB;AAAA,YAC1B,QAAQ,mBAAmB;AAAA,UAC5B,CAAC;AAAA,QACF,OAAO;AACN,eAAK,QAAQ;AAAA,QACd;AAAA,MACD,GATmB;AAWnB,UAAI,gBAAgB;AACpB,UAAI,oCAAoC;AAExC,YAAM,SAAS,6BAAM;AACpB,YAAI,iBAAiB,CAAC,mCAAmC;AACxD,cAAI;AACH,4BAAgB;AAChB,gDAAoC;AACpC,uBAAW;AAAA,UACZ,UAAE;AACD;AAAA,cACC,UAAU,KAAK,oBAAoB;AAAA,cACnC,MAAM;AACL,oDAAoC;AACpC,uBAAO;AAAA,cACR;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,GAhBe;AAkBf,WAAK,kBAAkB,IAAI,eAAe,CAAC,YAAY;AACtD,YAAI,WAAW,QAAQ,CAAC,KAAK,QAAQ,CAAC,EAAE,aAAa;AACpD,+BAAqB;AAAA,YACpB,OAAO,QAAQ,CAAC,EAAE,YAAY;AAAA,YAC9B,QAAQ,QAAQ,CAAC,EAAE,YAAY;AAAA,UAChC;AAAA,QACD,OAAO;AACN,+BAAqB;AAAA,QACtB;AACA,wBAAgB;AAChB,eAAO;AAAA,MACR,CAAC;AACD,WAAK,gBAAgB,QAAQ,KAAK,oBAAoB;AAAA,IACvD;AAAA,EACD;AAAA,EAEO,gBAAsB;AAC5B,QAAI,KAAK,iBAAiB;AACzB,WAAK,gBAAgB,WAAW;AAChC,WAAK,kBAAkB;AAAA,IACxB;AAAA,EACD;AAAA,EAEO,QAAQ,WAA8B;AAC5C,SAAK,2BAA2B,MAAM,SAAS;AAAA,EAChD;AAAA,EAEQ,2BACP,WACA,WACO;AACP,QAAI,gBAAgB;AACpB,QAAI,iBAAiB;AACrB,QAAI,WAAW;AACd,sBAAgB,UAAU;AAC1B,uBAAiB,UAAU;AAAA,IAC5B,WAAW,KAAK,sBAAsB;AACrC,sBAAgB,KAAK,qBAAqB;AAC1C,uBAAiB,KAAK,qBAAqB;AAAA,IAC5C;AACA,oBAAgB,KAAK,IAAI,GAAG,aAAa;AACzC,qBAAiB,KAAK,IAAI,GAAG,cAAc;AAC3C,QAAI,KAAK,WAAW,iBAAiB,KAAK,YAAY,gBAAgB;AACrE,WAAK,SAAS;AACd,WAAK,UAAU;AACf,UAAI,WAAW;AACd,aAAK,aAAa,KAAK;AAAA,MACxB;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
