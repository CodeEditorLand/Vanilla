{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/config/migrateOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEditorOptions } from '../../common/config/editorOptions.js';\n\nexport interface ISettingsReader {\n\t(key: string): any;\n}\n\nexport interface ISettingsWriter {\n\t(key: string, value: any): void;\n}\n\nexport class EditorSettingMigration {\n\n\tpublic static items: EditorSettingMigration[] = [];\n\n\tconstructor(\n\t\tpublic readonly key: string,\n\t\tpublic readonly migrate: (value: any, read: ISettingsReader, write: ISettingsWriter) => void\n\t) { }\n\n\tapply(options: any): void {\n\t\tconst value = EditorSettingMigration._read(options, this.key);\n\t\tconst read = (key: string) => EditorSettingMigration._read(options, key);\n\t\tconst write = (key: string, value: any) => EditorSettingMigration._write(options, key, value);\n\t\tthis.migrate(value, read, write);\n\t}\n\n\tprivate static _read(source: any, key: string): any {\n\t\tif (typeof source === 'undefined') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst firstDotIndex = key.indexOf('.');\n\t\tif (firstDotIndex >= 0) {\n\t\t\tconst firstSegment = key.substring(0, firstDotIndex);\n\t\t\treturn this._read(source[firstSegment], key.substring(firstDotIndex + 1));\n\t\t}\n\t\treturn source[key];\n\t}\n\n\tprivate static _write(target: any, key: string, value: any): void {\n\t\tconst firstDotIndex = key.indexOf('.');\n\t\tif (firstDotIndex >= 0) {\n\t\t\tconst firstSegment = key.substring(0, firstDotIndex);\n\t\t\ttarget[firstSegment] = target[firstSegment] || {};\n\t\t\tthis._write(target[firstSegment], key.substring(firstDotIndex + 1), value);\n\t\t\treturn;\n\t\t}\n\t\ttarget[key] = value;\n\t}\n}\n\nfunction registerEditorSettingMigration(key: string, migrate: (value: any, read: ISettingsReader, write: ISettingsWriter) => void): void {\n\tEditorSettingMigration.items.push(new EditorSettingMigration(key, migrate));\n}\n\nfunction registerSimpleEditorSettingMigration(key: string, values: [any, any][]): void {\n\tregisterEditorSettingMigration(key, (value, read, write) => {\n\t\tif (typeof value !== 'undefined') {\n\t\t\tfor (const [oldValue, newValue] of values) {\n\t\t\t\tif (value === oldValue) {\n\t\t\t\t\twrite(key, newValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Compatibility with old options\n */\nexport function migrateOptions(options: IEditorOptions): void {\n\tEditorSettingMigration.items.forEach(migration => migration.apply(options));\n}\n\nregisterSimpleEditorSettingMigration('wordWrap', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('lineNumbers', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorBlinking', [['visible', 'solid']]);\nregisterSimpleEditorSettingMigration('renderWhitespace', [[true, 'boundary'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('renderLineHighlight', [[true, 'line'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('acceptSuggestionOnEnter', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('tabCompletion', [[false, 'off'], [true, 'onlySnippets']]);\nregisterSimpleEditorSettingMigration('hover', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('parameterHints', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('autoIndent', [[false, 'advanced'], [true, 'full']]);\nregisterSimpleEditorSettingMigration('matchBrackets', [[true, 'always'], [false, 'never']]);\nregisterSimpleEditorSettingMigration('renderFinalNewline', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorSmoothCaretAnimation', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('occurrencesHighlight', [[true, 'singleFile'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('wordBasedSuggestions', [[true, 'matchingDocuments'], [false, 'off']]);\n\nregisterEditorSettingMigration('autoClosingBrackets', (value, read, write) => {\n\tif (value === false) {\n\t\twrite('autoClosingBrackets', 'never');\n\t\tif (typeof read('autoClosingQuotes') === 'undefined') {\n\t\t\twrite('autoClosingQuotes', 'never');\n\t\t}\n\t\tif (typeof read('autoSurround') === 'undefined') {\n\t\t\twrite('autoSurround', 'never');\n\t\t}\n\t}\n});\n\nregisterEditorSettingMigration('renderIndentGuides', (value, read, write) => {\n\tif (typeof value !== 'undefined') {\n\t\twrite('renderIndentGuides', undefined);\n\t\tif (typeof read('guides.indentation') === 'undefined') {\n\t\t\twrite('guides.indentation', !!value);\n\t\t}\n\t}\n});\n\nregisterEditorSettingMigration('highlightActiveIndentGuide', (value, read, write) => {\n\tif (typeof value !== 'undefined') {\n\t\twrite('highlightActiveIndentGuide', undefined);\n\t\tif (typeof read('guides.highlightActiveIndentation') === 'undefined') {\n\t\t\twrite('guides.highlightActiveIndentation', !!value);\n\t\t}\n\t}\n});\n\nconst suggestFilteredTypesMapping: Record<string, string> = {\n\tmethod: 'showMethods',\n\tfunction: 'showFunctions',\n\tconstructor: 'showConstructors',\n\tdeprecated: 'showDeprecated',\n\tfield: 'showFields',\n\tvariable: 'showVariables',\n\tclass: 'showClasses',\n\tstruct: 'showStructs',\n\tinterface: 'showInterfaces',\n\tmodule: 'showModules',\n\tproperty: 'showProperties',\n\tevent: 'showEvents',\n\toperator: 'showOperators',\n\tunit: 'showUnits',\n\tvalue: 'showValues',\n\tconstant: 'showConstants',\n\tenum: 'showEnums',\n\tenumMember: 'showEnumMembers',\n\tkeyword: 'showKeywords',\n\ttext: 'showWords',\n\tcolor: 'showColors',\n\tfile: 'showFiles',\n\treference: 'showReferences',\n\tfolder: 'showFolders',\n\ttypeParameter: 'showTypeParameters',\n\tsnippet: 'showSnippets',\n};\n\nregisterEditorSettingMigration('suggest.filteredTypes', (value, read, write) => {\n\tif (value && typeof value === 'object') {\n\t\tfor (const entry of Object.entries(suggestFilteredTypesMapping)) {\n\t\t\tconst v = value[entry[0]];\n\t\t\tif (v === false) {\n\t\t\t\tif (typeof read(`suggest.${entry[1]}`) === 'undefined') {\n\t\t\t\t\twrite(`suggest.${entry[1]}`, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twrite('suggest.filteredTypes', undefined);\n\t}\n});\n\nregisterEditorSettingMigration('quickSuggestions', (input, read, write) => {\n\tif (typeof input === 'boolean') {\n\t\tconst value = input ? 'on' : 'off';\n\t\tconst newValue = { comments: value, strings: value, other: value };\n\t\twrite('quickSuggestions', newValue);\n\t}\n});\n\n// Sticky Scroll\n\nregisterEditorSettingMigration('experimental.stickyScroll.enabled', (value, read, write) => {\n\tif (typeof value === 'boolean') {\n\t\twrite('experimental.stickyScroll.enabled', undefined);\n\t\tif (typeof read('stickyScroll.enabled') === 'undefined') {\n\t\t\twrite('stickyScroll.enabled', value);\n\t\t}\n\t}\n});\n\nregisterEditorSettingMigration('experimental.stickyScroll.maxLineCount', (value, read, write) => {\n\tif (typeof value === 'number') {\n\t\twrite('experimental.stickyScroll.maxLineCount', undefined);\n\t\tif (typeof read('stickyScroll.maxLineCount') === 'undefined') {\n\t\t\twrite('stickyScroll.maxLineCount', value);\n\t\t}\n\t}\n});\n\n// Code Actions on Save\nregisterEditorSettingMigration('codeActionsOnSave', (value, read, write) => {\n\tif (value && typeof value === 'object') {\n\t\tlet toBeModified = false;\n\t\tconst newValue = {} as any;\n\t\tfor (const entry of Object.entries(value)) {\n\t\t\tif (typeof entry[1] === 'boolean') {\n\t\t\t\ttoBeModified = true;\n\t\t\t\tnewValue[entry[0]] = entry[1] ? 'explicit' : 'never';\n\t\t\t} else {\n\t\t\t\tnewValue[entry[0]] = entry[1];\n\t\t\t}\n\t\t}\n\t\tif (toBeModified) {\n\t\t\twrite(`codeActionsOnSave`, newValue);\n\t\t}\n\t}\n});\n\n// Migrate Quick Fix Settings\nregisterEditorSettingMigration('codeActionWidget.includeNearbyQuickfixes', (value, read, write) => {\n\tif (typeof value === 'boolean') {\n\t\twrite('codeActionWidget.includeNearbyQuickfixes', undefined);\n\t\tif (typeof read('codeActionWidget.includeNearbyQuickFixes') === 'undefined') {\n\t\t\twrite('codeActionWidget.includeNearbyQuickFixes', value);\n\t\t}\n\t}\n});\n\n// Migrate the lightbulb settings\nregisterEditorSettingMigration('lightbulb.enabled', (value, read, write) => {\n\tif (typeof value === 'boolean') {\n\t\twrite('lightbulb.enabled', value ? undefined : 'off');\n\t}\n});\n\n"],
  "mappings": "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",
  "names": ["value"]
}
