{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/config/fontMeasurements.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWindowId } from \"../../../base/browser/dom.js\";\nimport { PixelRatio } from \"../../../base/browser/pixelRatio.js\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { EditorFontLigatures } from \"../../common/config/editorOptions.js\";\nimport {\n\ttype BareFontInfo,\n\tFontInfo,\n\tSERIALIZED_FONT_INFO_VERSION,\n} from \"../../common/config/fontInfo.js\";\nimport {\n\tCharWidthRequest,\n\tCharWidthRequestType,\n\treadCharWidths,\n} from \"./charWidthReader.js\";\n\n/**\n * Serializable font information.\n */\nexport interface ISerializedFontInfo {\n\treadonly version: number;\n\treadonly pixelRatio: number;\n\treadonly fontFamily: string;\n\treadonly fontWeight: string;\n\treadonly fontSize: number;\n\treadonly fontFeatureSettings: string;\n\treadonly fontVariationSettings: string;\n\treadonly lineHeight: number;\n\treadonly letterSpacing: number;\n\treadonly isMonospace: boolean;\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly typicalFullwidthCharacterWidth: number;\n\treadonly canUseHalfwidthRightwardsArrow: boolean;\n\treadonly spaceWidth: number;\n\treadonly middotWidth: number;\n\treadonly wsmiddotWidth: number;\n\treadonly maxDigitWidth: number;\n}\n\nexport class FontMeasurementsImpl extends Disposable {\n\tprivate readonly _cache = new Map<number, FontMeasurementsCache>();\n\n\tprivate _evictUntrustedReadingsTimeout = -1;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\tpublic readonly onDidChange = this._onDidChange.event;\n\n\tpublic override dispose(): void {\n\t\tif (this._evictUntrustedReadingsTimeout !== -1) {\n\t\t\tclearTimeout(this._evictUntrustedReadingsTimeout);\n\t\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Clear all cached font information and trigger a change event.\n\t */\n\tpublic clearAllFontInfos(): void {\n\t\tthis._cache.clear();\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _ensureCache(targetWindow: Window): FontMeasurementsCache {\n\t\tconst windowId = getWindowId(targetWindow);\n\t\tlet cache = this._cache.get(windowId);\n\t\tif (!cache) {\n\t\t\tcache = new FontMeasurementsCache();\n\t\t\tthis._cache.set(windowId, cache);\n\t\t}\n\t\treturn cache;\n\t}\n\n\tprivate _writeToCache(\n\t\ttargetWindow: Window,\n\t\titem: BareFontInfo,\n\t\tvalue: FontInfo,\n\t): void {\n\t\tconst cache = this._ensureCache(targetWindow);\n\t\tcache.put(item, value);\n\n\t\tif (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n\t\t\t// Try reading again after some time\n\t\t\tthis._evictUntrustedReadingsTimeout = targetWindow.setTimeout(\n\t\t\t\t() => {\n\t\t\t\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t\t\t\t\tthis._evictUntrustedReadings(targetWindow);\n\t\t\t\t},\n\t\t\t\t5000,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _evictUntrustedReadings(targetWindow: Window): void {\n\t\tconst cache = this._ensureCache(targetWindow);\n\t\tconst values = cache.getValues();\n\t\tlet somethingRemoved = false;\n\t\tfor (const item of values) {\n\t\t\tif (!item.isTrusted) {\n\t\t\t\tsomethingRemoved = true;\n\t\t\t\tcache.remove(item);\n\t\t\t}\n\t\t}\n\t\tif (somethingRemoved) {\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\t/**\n\t * Serialized currently cached font information.\n\t */\n\tpublic serializeFontInfo(targetWindow: Window): ISerializedFontInfo[] {\n\t\t// Only save trusted font info (that has been measured in this running instance)\n\t\tconst cache = this._ensureCache(targetWindow);\n\t\treturn cache.getValues().filter((item) => item.isTrusted);\n\t}\n\n\t/**\n\t * Restore previously serialized font informations.\n\t */\n\tpublic restoreFontInfo(\n\t\ttargetWindow: Window,\n\t\tsavedFontInfos: ISerializedFontInfo[],\n\t): void {\n\t\t// Take all the saved font info and insert them in the cache without the trusted flag.\n\t\t// The reason for this is that a font might have been installed on the OS in the meantime.\n\t\tfor (const savedFontInfo of savedFontInfos) {\n\t\t\tif (savedFontInfo.version !== SERIALIZED_FONT_INFO_VERSION) {\n\t\t\t\t// cannot use older version\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst fontInfo = new FontInfo(savedFontInfo, false);\n\t\t\tthis._writeToCache(targetWindow, fontInfo, fontInfo);\n\t\t}\n\t}\n\n\t/**\n\t * Read font information.\n\t */\n\tpublic readFontInfo(\n\t\ttargetWindow: Window,\n\t\tbareFontInfo: BareFontInfo,\n\t): FontInfo {\n\t\tconst cache = this._ensureCache(targetWindow);\n\t\tif (!cache.has(bareFontInfo)) {\n\t\t\tlet readConfig = this._actualReadFontInfo(\n\t\t\t\ttargetWindow,\n\t\t\t\tbareFontInfo,\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\treadConfig.typicalHalfwidthCharacterWidth <= 2 ||\n\t\t\t\treadConfig.typicalFullwidthCharacterWidth <= 2 ||\n\t\t\t\treadConfig.spaceWidth <= 2 ||\n\t\t\t\treadConfig.maxDigitWidth <= 2\n\t\t\t) {\n\t\t\t\t// Hey, it's Bug 14341 ... we couldn't read\n\t\t\t\treadConfig = new FontInfo(\n\t\t\t\t\t{\n\t\t\t\t\t\tpixelRatio: PixelRatio.getInstance(targetWindow).value,\n\t\t\t\t\t\tfontFamily: readConfig.fontFamily,\n\t\t\t\t\t\tfontWeight: readConfig.fontWeight,\n\t\t\t\t\t\tfontSize: readConfig.fontSize,\n\t\t\t\t\t\tfontFeatureSettings: readConfig.fontFeatureSettings,\n\t\t\t\t\t\tfontVariationSettings: readConfig.fontVariationSettings,\n\t\t\t\t\t\tlineHeight: readConfig.lineHeight,\n\t\t\t\t\t\tletterSpacing: readConfig.letterSpacing,\n\t\t\t\t\t\tisMonospace: readConfig.isMonospace,\n\t\t\t\t\t\ttypicalHalfwidthCharacterWidth: Math.max(\n\t\t\t\t\t\t\treadConfig.typicalHalfwidthCharacterWidth,\n\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttypicalFullwidthCharacterWidth: Math.max(\n\t\t\t\t\t\t\treadConfig.typicalFullwidthCharacterWidth,\n\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcanUseHalfwidthRightwardsArrow:\n\t\t\t\t\t\t\treadConfig.canUseHalfwidthRightwardsArrow,\n\t\t\t\t\t\tspaceWidth: Math.max(readConfig.spaceWidth, 5),\n\t\t\t\t\t\tmiddotWidth: Math.max(readConfig.middotWidth, 5),\n\t\t\t\t\t\twsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n\t\t\t\t\t\tmaxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n\t\t\t\t\t},\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._writeToCache(targetWindow, bareFontInfo, readConfig);\n\t\t}\n\t\treturn cache.get(bareFontInfo);\n\t}\n\n\tprivate _createRequest(\n\t\tchr: string,\n\t\ttype: CharWidthRequestType,\n\t\tall: CharWidthRequest[],\n\t\tmonospace: CharWidthRequest[] | null,\n\t): CharWidthRequest {\n\t\tconst result = new CharWidthRequest(chr, type);\n\t\tall.push(result);\n\t\tmonospace?.push(result);\n\t\treturn result;\n\t}\n\n\tprivate _actualReadFontInfo(\n\t\ttargetWindow: Window,\n\t\tbareFontInfo: BareFontInfo,\n\t): FontInfo {\n\t\tconst all: CharWidthRequest[] = [];\n\t\tconst monospace: CharWidthRequest[] = [];\n\n\t\tconst typicalHalfwidthCharacter = this._createRequest(\n\t\t\t\"n\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst typicalFullwidthCharacter = this._createRequest(\n\t\t\t\"\\uff4d\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tnull,\n\t\t);\n\t\tconst space = this._createRequest(\n\t\t\t\" \",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit0 = this._createRequest(\n\t\t\t\"0\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit1 = this._createRequest(\n\t\t\t\"1\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit2 = this._createRequest(\n\t\t\t\"2\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit3 = this._createRequest(\n\t\t\t\"3\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit4 = this._createRequest(\n\t\t\t\"4\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit5 = this._createRequest(\n\t\t\t\"5\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit6 = this._createRequest(\n\t\t\t\"6\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit7 = this._createRequest(\n\t\t\t\"7\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit8 = this._createRequest(\n\t\t\t\"8\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst digit9 = this._createRequest(\n\t\t\t\"9\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\n\t\t// monospace test: used for whitespace rendering\n\t\tconst rightwardsArrow = this._createRequest(\n\t\t\t\"\u2192\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\t\tconst halfwidthRightwardsArrow = this._createRequest(\n\t\t\t\"\uFFEB\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tnull,\n\t\t);\n\n\t\t// U+00B7 - MIDDLE DOT\n\t\tconst middot = this._createRequest(\n\t\t\t\"\u00B7\",\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tmonospace,\n\t\t);\n\n\t\t// U+2E31 - WORD SEPARATOR MIDDLE DOT\n\t\tconst wsmiddotWidth = this._createRequest(\n\t\t\tString.fromCharCode(0x2e31),\n\t\t\tCharWidthRequestType.Regular,\n\t\t\tall,\n\t\t\tnull,\n\t\t);\n\n\t\t// monospace test: some characters\n\t\tconst monospaceTestChars = \"|/-_ilm%\";\n\t\tfor (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n\t\t\tthis._createRequest(\n\t\t\t\tmonospaceTestChars.charAt(i),\n\t\t\t\tCharWidthRequestType.Regular,\n\t\t\t\tall,\n\t\t\t\tmonospace,\n\t\t\t);\n\t\t\tthis._createRequest(\n\t\t\t\tmonospaceTestChars.charAt(i),\n\t\t\t\tCharWidthRequestType.Italic,\n\t\t\t\tall,\n\t\t\t\tmonospace,\n\t\t\t);\n\t\t\tthis._createRequest(\n\t\t\t\tmonospaceTestChars.charAt(i),\n\t\t\t\tCharWidthRequestType.Bold,\n\t\t\t\tall,\n\t\t\t\tmonospace,\n\t\t\t);\n\t\t}\n\n\t\treadCharWidths(targetWindow, bareFontInfo, all);\n\n\t\tconst maxDigitWidth = Math.max(\n\t\t\tdigit0.width,\n\t\t\tdigit1.width,\n\t\t\tdigit2.width,\n\t\t\tdigit3.width,\n\t\t\tdigit4.width,\n\t\t\tdigit5.width,\n\t\t\tdigit6.width,\n\t\t\tdigit7.width,\n\t\t\tdigit8.width,\n\t\t\tdigit9.width,\n\t\t);\n\n\t\tlet isMonospace =\n\t\t\tbareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF;\n\t\tconst referenceWidth = monospace[0].width;\n\t\tfor (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n\t\t\tconst diff = referenceWidth - monospace[i].width;\n\t\t\tif (diff < -0.001 || diff > 0.001) {\n\t\t\t\tisMonospace = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet canUseHalfwidthRightwardsArrow = true;\n\t\tif (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n\t\t\t// using a halfwidth rightwards arrow would break monospace...\n\t\t\tcanUseHalfwidthRightwardsArrow = false;\n\t\t}\n\t\tif (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n\t\t\t// using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n\t\t\tcanUseHalfwidthRightwardsArrow = false;\n\t\t}\n\n\t\treturn new FontInfo(\n\t\t\t{\n\t\t\t\tpixelRatio: PixelRatio.getInstance(targetWindow).value,\n\t\t\t\tfontFamily: bareFontInfo.fontFamily,\n\t\t\t\tfontWeight: bareFontInfo.fontWeight,\n\t\t\t\tfontSize: bareFontInfo.fontSize,\n\t\t\t\tfontFeatureSettings: bareFontInfo.fontFeatureSettings,\n\t\t\t\tfontVariationSettings: bareFontInfo.fontVariationSettings,\n\t\t\t\tlineHeight: bareFontInfo.lineHeight,\n\t\t\t\tletterSpacing: bareFontInfo.letterSpacing,\n\t\t\t\tisMonospace: isMonospace,\n\t\t\t\ttypicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n\t\t\t\ttypicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n\t\t\t\tcanUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n\t\t\t\tspaceWidth: space.width,\n\t\t\t\tmiddotWidth: middot.width,\n\t\t\t\twsmiddotWidth: wsmiddotWidth.width,\n\t\t\t\tmaxDigitWidth: maxDigitWidth,\n\t\t\t},\n\t\t\ttrue,\n\t\t);\n\t}\n}\n\nclass FontMeasurementsCache {\n\tprivate readonly _keys: { [key: string]: BareFontInfo };\n\tprivate readonly _values: { [key: string]: FontInfo };\n\n\tconstructor() {\n\t\tthis._keys = Object.create(null);\n\t\tthis._values = Object.create(null);\n\t}\n\n\tpublic has(item: BareFontInfo): boolean {\n\t\tconst itemId = item.getId();\n\t\treturn !!this._values[itemId];\n\t}\n\n\tpublic get(item: BareFontInfo): FontInfo {\n\t\tconst itemId = item.getId();\n\t\treturn this._values[itemId];\n\t}\n\n\tpublic put(item: BareFontInfo, value: FontInfo): void {\n\t\tconst itemId = item.getId();\n\t\tthis._keys[itemId] = item;\n\t\tthis._values[itemId] = value;\n\t}\n\n\tpublic remove(item: BareFontInfo): void {\n\t\tconst itemId = item.getId();\n\t\tdelete this._keys[itemId];\n\t\tdelete this._values[itemId];\n\t}\n\n\tpublic getValues(): FontInfo[] {\n\t\treturn Object.keys(this._keys).map((id) => this._values[id]);\n\t}\n}\n\nexport const FontMeasurements = new FontMeasurementsImpl();\n"],
  "mappings": "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",
  "names": []
}
