{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/config/fontMeasurements.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWindowId } from '../../../base/browser/dom.js';\nimport { PixelRatio } from '../../../base/browser/pixelRatio.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CharWidthRequest, CharWidthRequestType, readCharWidths } from './charWidthReader.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { BareFontInfo, FontInfo, SERIALIZED_FONT_INFO_VERSION } from '../../common/config/fontInfo.js';\n\n/**\n * Serializable font information.\n */\nexport interface ISerializedFontInfo {\n\treadonly version: number;\n\treadonly pixelRatio: number;\n\treadonly fontFamily: string;\n\treadonly fontWeight: string;\n\treadonly fontSize: number;\n\treadonly fontFeatureSettings: string;\n\treadonly fontVariationSettings: string;\n\treadonly lineHeight: number;\n\treadonly letterSpacing: number;\n\treadonly isMonospace: boolean;\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly typicalFullwidthCharacterWidth: number;\n\treadonly canUseHalfwidthRightwardsArrow: boolean;\n\treadonly spaceWidth: number;\n\treadonly middotWidth: number;\n\treadonly wsmiddotWidth: number;\n\treadonly maxDigitWidth: number;\n}\n\nexport class FontMeasurementsImpl extends Disposable {\n\n\tprivate readonly _cache = new Map<number, FontMeasurementsCache>();\n\n\tprivate _evictUntrustedReadingsTimeout = -1;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\tpublic readonly onDidChange = this._onDidChange.event;\n\n\tpublic override dispose(): void {\n\t\tif (this._evictUntrustedReadingsTimeout !== -1) {\n\t\t\tclearTimeout(this._evictUntrustedReadingsTimeout);\n\t\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Clear all cached font information and trigger a change event.\n\t */\n\tpublic clearAllFontInfos(): void {\n\t\tthis._cache.clear();\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _ensureCache(targetWindow: Window): FontMeasurementsCache {\n\t\tconst windowId = getWindowId(targetWindow);\n\t\tlet cache = this._cache.get(windowId);\n\t\tif (!cache) {\n\t\t\tcache = new FontMeasurementsCache();\n\t\t\tthis._cache.set(windowId, cache);\n\t\t}\n\t\treturn cache;\n\t}\n\n\tprivate _writeToCache(targetWindow: Window, item: BareFontInfo, value: FontInfo): void {\n\t\tconst cache = this._ensureCache(targetWindow);\n\t\tcache.put(item, value);\n\n\t\tif (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n\t\t\t// Try reading again after some time\n\t\t\tthis._evictUntrustedReadingsTimeout = targetWindow.setTimeout(() => {\n\t\t\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t\t\t\tthis._evictUntrustedReadings(targetWindow);\n\t\t\t}, 5000);\n\t\t}\n\t}\n\n\tprivate _evictUntrustedReadings(targetWindow: Window): void {\n\t\tconst cache = this._ensureCache(targetWindow);\n\t\tconst values = cache.getValues();\n\t\tlet somethingRemoved = false;\n\t\tfor (const item of values) {\n\t\t\tif (!item.isTrusted) {\n\t\t\t\tsomethingRemoved = true;\n\t\t\t\tcache.remove(item);\n\t\t\t}\n\t\t}\n\t\tif (somethingRemoved) {\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\t/**\n\t * Serialized currently cached font information.\n\t */\n\tpublic serializeFontInfo(targetWindow: Window): ISerializedFontInfo[] {\n\t\t// Only save trusted font info (that has been measured in this running instance)\n\t\tconst cache = this._ensureCache(targetWindow);\n\t\treturn cache.getValues().filter(item => item.isTrusted);\n\t}\n\n\t/**\n\t * Restore previously serialized font informations.\n\t */\n\tpublic restoreFontInfo(targetWindow: Window, savedFontInfos: ISerializedFontInfo[]): void {\n\t\t// Take all the saved font info and insert them in the cache without the trusted flag.\n\t\t// The reason for this is that a font might have been installed on the OS in the meantime.\n\t\tfor (const savedFontInfo of savedFontInfos) {\n\t\t\tif (savedFontInfo.version !== SERIALIZED_FONT_INFO_VERSION) {\n\t\t\t\t// cannot use older version\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst fontInfo = new FontInfo(savedFontInfo, false);\n\t\t\tthis._writeToCache(targetWindow, fontInfo, fontInfo);\n\t\t}\n\t}\n\n\t/**\n\t * Read font information.\n\t */\n\tpublic readFontInfo(targetWindow: Window, bareFontInfo: BareFontInfo): FontInfo {\n\t\tconst cache = this._ensureCache(targetWindow);\n\t\tif (!cache.has(bareFontInfo)) {\n\t\t\tlet readConfig = this._actualReadFontInfo(targetWindow, bareFontInfo);\n\n\t\t\tif (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n\t\t\t\t// Hey, it's Bug 14341 ... we couldn't read\n\t\t\t\treadConfig = new FontInfo({\n\t\t\t\t\tpixelRatio: PixelRatio.getInstance(targetWindow).value,\n\t\t\t\t\tfontFamily: readConfig.fontFamily,\n\t\t\t\t\tfontWeight: readConfig.fontWeight,\n\t\t\t\t\tfontSize: readConfig.fontSize,\n\t\t\t\t\tfontFeatureSettings: readConfig.fontFeatureSettings,\n\t\t\t\t\tfontVariationSettings: readConfig.fontVariationSettings,\n\t\t\t\t\tlineHeight: readConfig.lineHeight,\n\t\t\t\t\tletterSpacing: readConfig.letterSpacing,\n\t\t\t\t\tisMonospace: readConfig.isMonospace,\n\t\t\t\t\ttypicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n\t\t\t\t\ttypicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n\t\t\t\t\tcanUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n\t\t\t\t\tspaceWidth: Math.max(readConfig.spaceWidth, 5),\n\t\t\t\t\tmiddotWidth: Math.max(readConfig.middotWidth, 5),\n\t\t\t\t\twsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n\t\t\t\t\tmaxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n\t\t\t\t}, false);\n\t\t\t}\n\n\t\t\tthis._writeToCache(targetWindow, bareFontInfo, readConfig);\n\t\t}\n\t\treturn cache.get(bareFontInfo);\n\t}\n\n\tprivate _createRequest(chr: string, type: CharWidthRequestType, all: CharWidthRequest[], monospace: CharWidthRequest[] | null): CharWidthRequest {\n\t\tconst result = new CharWidthRequest(chr, type);\n\t\tall.push(result);\n\t\tmonospace?.push(result);\n\t\treturn result;\n\t}\n\n\tprivate _actualReadFontInfo(targetWindow: Window, bareFontInfo: BareFontInfo): FontInfo {\n\t\tconst all: CharWidthRequest[] = [];\n\t\tconst monospace: CharWidthRequest[] = [];\n\n\t\tconst typicalHalfwidthCharacter = this._createRequest('n', CharWidthRequestType.Regular, all, monospace);\n\t\tconst typicalFullwidthCharacter = this._createRequest('\\uff4d', CharWidthRequestType.Regular, all, null);\n\t\tconst space = this._createRequest(' ', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit0 = this._createRequest('0', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit1 = this._createRequest('1', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit2 = this._createRequest('2', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit3 = this._createRequest('3', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit4 = this._createRequest('4', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit5 = this._createRequest('5', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit6 = this._createRequest('6', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit7 = this._createRequest('7', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit8 = this._createRequest('8', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit9 = this._createRequest('9', CharWidthRequestType.Regular, all, monospace);\n\n\t\t// monospace test: used for whitespace rendering\n\t\tconst rightwardsArrow = this._createRequest('\u2192', CharWidthRequestType.Regular, all, monospace);\n\t\tconst halfwidthRightwardsArrow = this._createRequest('\uFFEB', CharWidthRequestType.Regular, all, null);\n\n\t\t// U+00B7 - MIDDLE DOT\n\t\tconst middot = this._createRequest('\u00B7', CharWidthRequestType.Regular, all, monospace);\n\n\t\t// U+2E31 - WORD SEPARATOR MIDDLE DOT\n\t\tconst wsmiddotWidth = this._createRequest(String.fromCharCode(0x2E31), CharWidthRequestType.Regular, all, null);\n\n\t\t// monospace test: some characters\n\t\tconst monospaceTestChars = '|/-_ilm%';\n\t\tfor (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n\t\t\tthis._createRequest(monospaceTestChars.charAt(i), CharWidthRequestType.Regular, all, monospace);\n\t\t\tthis._createRequest(monospaceTestChars.charAt(i), CharWidthRequestType.Italic, all, monospace);\n\t\t\tthis._createRequest(monospaceTestChars.charAt(i), CharWidthRequestType.Bold, all, monospace);\n\t\t}\n\n\t\treadCharWidths(targetWindow, bareFontInfo, all);\n\n\t\tconst maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n\n\t\tlet isMonospace = (bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF);\n\t\tconst referenceWidth = monospace[0].width;\n\t\tfor (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n\t\t\tconst diff = referenceWidth - monospace[i].width;\n\t\t\tif (diff < -0.001 || diff > 0.001) {\n\t\t\t\tisMonospace = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet canUseHalfwidthRightwardsArrow = true;\n\t\tif (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n\t\t\t// using a halfwidth rightwards arrow would break monospace...\n\t\t\tcanUseHalfwidthRightwardsArrow = false;\n\t\t}\n\t\tif (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n\t\t\t// using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n\t\t\tcanUseHalfwidthRightwardsArrow = false;\n\t\t}\n\n\t\treturn new FontInfo({\n\t\t\tpixelRatio: PixelRatio.getInstance(targetWindow).value,\n\t\t\tfontFamily: bareFontInfo.fontFamily,\n\t\t\tfontWeight: bareFontInfo.fontWeight,\n\t\t\tfontSize: bareFontInfo.fontSize,\n\t\t\tfontFeatureSettings: bareFontInfo.fontFeatureSettings,\n\t\t\tfontVariationSettings: bareFontInfo.fontVariationSettings,\n\t\t\tlineHeight: bareFontInfo.lineHeight,\n\t\t\tletterSpacing: bareFontInfo.letterSpacing,\n\t\t\tisMonospace: isMonospace,\n\t\t\ttypicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n\t\t\ttypicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n\t\t\tcanUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n\t\t\tspaceWidth: space.width,\n\t\t\tmiddotWidth: middot.width,\n\t\t\twsmiddotWidth: wsmiddotWidth.width,\n\t\t\tmaxDigitWidth: maxDigitWidth\n\t\t}, true);\n\t}\n}\n\nclass FontMeasurementsCache {\n\n\tprivate readonly _keys: { [key: string]: BareFontInfo };\n\tprivate readonly _values: { [key: string]: FontInfo };\n\n\tconstructor() {\n\t\tthis._keys = Object.create(null);\n\t\tthis._values = Object.create(null);\n\t}\n\n\tpublic has(item: BareFontInfo): boolean {\n\t\tconst itemId = item.getId();\n\t\treturn !!this._values[itemId];\n\t}\n\n\tpublic get(item: BareFontInfo): FontInfo {\n\t\tconst itemId = item.getId();\n\t\treturn this._values[itemId];\n\t}\n\n\tpublic put(item: BareFontInfo, value: FontInfo): void {\n\t\tconst itemId = item.getId();\n\t\tthis._keys[itemId] = item;\n\t\tthis._values[itemId] = value;\n\t}\n\n\tpublic remove(item: BareFontInfo): void {\n\t\tconst itemId = item.getId();\n\t\tdelete this._keys[itemId];\n\t\tdelete this._values[itemId];\n\t}\n\n\tpublic getValues(): FontInfo[] {\n\t\treturn Object.keys(this._keys).map(id => this._values[id]);\n\t}\n}\n\nexport const FontMeasurements = new FontMeasurementsImpl();\n"],
  "mappings": "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",
  "names": []
}
