{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/multiDiffEditor/objectPool.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport type {\n\tIDisposable,\n\tIReference,\n} from \"../../../../base/common/lifecycle.js\";\n\nexport class ObjectPool<\n\tTData extends IObjectData,\n\tT extends IPooledObject<TData>,\n> implements IDisposable\n{\n\tprivate readonly _unused = new Set<T>();\n\tprivate readonly _used = new Set<T>();\n\tprivate readonly _itemData = new Map<T, TData>();\n\n\tconstructor(private readonly _create: (data: TData) => T) {}\n\n\tpublic getUnusedObj(data: TData): IReference<T> {\n\t\tlet obj: T;\n\n\t\tif (this._unused.size === 0) {\n\t\t\tobj = this._create(data);\n\t\t\tthis._itemData.set(obj, data);\n\t\t} else {\n\t\t\tconst values = [...this._unused.values()];\n\t\t\tobj =\n\t\t\t\tvalues.find(\n\t\t\t\t\t(obj) => this._itemData.get(obj)!.getId() === data.getId(),\n\t\t\t\t) ?? values[0];\n\t\t\tthis._unused.delete(obj);\n\t\t\tthis._itemData.set(obj, data);\n\t\t\tobj.setData(data);\n\t\t}\n\t\tthis._used.add(obj);\n\t\treturn {\n\t\t\tobject: obj,\n\t\t\tdispose: () => {\n\t\t\t\tthis._used.delete(obj);\n\t\t\t\tif (this._unused.size > 5) {\n\t\t\t\t\tobj.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tthis._unused.add(obj);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tdispose(): void {\n\t\tfor (const obj of this._used) {\n\t\t\tobj.dispose();\n\t\t}\n\t\tfor (const obj of this._unused) {\n\t\t\tobj.dispose();\n\t\t}\n\t\tthis._used.clear();\n\t\tthis._unused.clear();\n\t}\n}\n\nexport interface IObjectData {\n\tgetId(): unknown;\n}\n\nexport interface IPooledObject<TData> extends IDisposable {\n\tsetData(data: TData): void;\n}\n"],
  "mappings": ";;AASO,MAAM,WAIb;AAAA,EAKC,YAA6B,SAA6B;AAA7B;AAAA,EAA8B;AAAA,EAlB5D,OAaA;AAAA;AAAA;AAAA,EACkB,UAAU,oBAAI,IAAO;AAAA,EACrB,QAAQ,oBAAI,IAAO;AAAA,EACnB,YAAY,oBAAI,IAAc;AAAA,EAIxC,aAAa,MAA4B;AAC/C,QAAI;AAEJ,QAAI,KAAK,QAAQ,SAAS,GAAG;AAC5B,YAAM,KAAK,QAAQ,IAAI;AACvB,WAAK,UAAU,IAAI,KAAK,IAAI;AAAA,IAC7B,OAAO;AACN,YAAM,SAAS,CAAC,GAAG,KAAK,QAAQ,OAAO,CAAC;AACxC,YACC,OAAO;AAAA,QACN,CAACA,SAAQ,KAAK,UAAU,IAAIA,IAAG,EAAG,MAAM,MAAM,KAAK,MAAM;AAAA,MAC1D,KAAK,OAAO,CAAC;AACd,WAAK,QAAQ,OAAO,GAAG;AACvB,WAAK,UAAU,IAAI,KAAK,IAAI;AAC5B,UAAI,QAAQ,IAAI;AAAA,IACjB;AACA,SAAK,MAAM,IAAI,GAAG;AAClB,WAAO;AAAA,MACN,QAAQ;AAAA,MACR,SAAS,6BAAM;AACd,aAAK,MAAM,OAAO,GAAG;AACrB,YAAI,KAAK,QAAQ,OAAO,GAAG;AAC1B,cAAI,QAAQ;AAAA,QACb,OAAO;AACN,eAAK,QAAQ,IAAI,GAAG;AAAA,QACrB;AAAA,MACD,GAPS;AAAA,IAQV;AAAA,EACD;AAAA,EAEA,UAAgB;AACf,eAAW,OAAO,KAAK,OAAO;AAC7B,UAAI,QAAQ;AAAA,IACb;AACA,eAAW,OAAO,KAAK,SAAS;AAC/B,UAAI,QAAQ;AAAA,IACb;AACA,SAAK,MAAM,MAAM;AACjB,SAAK,QAAQ,MAAM;AAAA,EACpB;AACD;",
  "names": ["obj"]
}
