{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/multiDiffEditor/multiDiffEditorViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\ttype ITransaction,\n\tconstObservable,\n\tderived,\n\tderivedObservableWithWritableCache,\n\tmapObservableArrayCached,\n\tobservableFromValueWithChangeEvent,\n\tobservableValue,\n\ttransaction,\n} from \"../../../../base/common/observable.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { ContextKeyValue } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { IDiffEditorOptions } from \"../../../common/config/editorOptions.js\";\nimport type { Selection } from \"../../../common/core/selection.js\";\nimport type { IDiffEditorViewModel } from \"../../../common/editorCommon.js\";\nimport { IModelService } from \"../../../common/services/model.js\";\nimport { DiffEditorOptions } from \"../diffEditor/diffEditorOptions.js\";\nimport { DiffEditorViewModel } from \"../diffEditor/diffEditorViewModel.js\";\nimport { RefCounted } from \"../diffEditor/utils.js\";\nimport type { IDocumentDiffItem, IMultiDiffEditorModel } from \"./model.js\";\n\nexport class MultiDiffEditorViewModel extends Disposable {\n\tprivate readonly _documents: IObservable<\n\t\treadonly RefCounted<IDocumentDiffItem>[] | \"loading\"\n\t> = observableFromValueWithChangeEvent(this.model, this.model.documents);\n\n\tprivate readonly _documentsArr = derived(this, (reader) => {\n\t\tconst result = this._documents.read(reader);\n\t\tif (result === \"loading\") {\n\t\t\treturn [];\n\t\t}\n\t\treturn result;\n\t});\n\n\tpublic readonly isLoading = derived(\n\t\tthis,\n\t\t(reader) => this._documents.read(reader) === \"loading\",\n\t);\n\n\tpublic readonly items: IObservable<readonly DocumentDiffItemViewModel[]> =\n\t\tmapObservableArrayCached(this, this._documentsArr, (d, store) =>\n\t\t\tstore.add(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tDocumentDiffItemViewModel,\n\t\t\t\t\td,\n\t\t\t\t\tthis,\n\t\t\t\t),\n\t\t\t),\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\tpublic readonly focusedDiffItem = derived(this, (reader) =>\n\t\tthis.items.read(reader).find((i) => i.isFocused.read(reader)),\n\t);\n\tpublic readonly activeDiffItem = derivedObservableWithWritableCache<\n\t\tDocumentDiffItemViewModel | undefined\n\t>(this, (reader, lastValue) =>\n\t\t(this.focusedDiffItem.read(reader) ??\n\t\t(lastValue && this.items.read(reader).indexOf(lastValue) !== -1))\n\t\t\t? lastValue\n\t\t\t: undefined,\n\t);\n\n\tpublic async waitForDiffs(): Promise<void> {\n\t\tfor (const d of this.items.get()) {\n\t\t\tawait d.diffEditorViewModel.waitForDiff();\n\t\t}\n\t}\n\n\tpublic collapseAll(): void {\n\t\ttransaction((tx) => {\n\t\t\tfor (const d of this.items.get()) {\n\t\t\t\td.collapsed.set(true, tx);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic expandAll(): void {\n\t\ttransaction((tx) => {\n\t\t\tfor (const d of this.items.get()) {\n\t\t\t\td.collapsed.set(false, tx);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic get contextKeys(): Record<string, ContextKeyValue> | undefined {\n\t\treturn this.model.contextKeys;\n\t}\n\n\tconstructor(\n\t\tpublic readonly model: IMultiDiffEditorModel,\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n}\n\nexport class DocumentDiffItemViewModel extends Disposable {\n\t/**\n\t * The diff editor view model keeps its inner objects alive.\n\t */\n\tpublic readonly diffEditorViewModelRef: RefCounted<IDiffEditorViewModel>;\n\tpublic get diffEditorViewModel(): IDiffEditorViewModel {\n\t\treturn this.diffEditorViewModelRef.object;\n\t}\n\tpublic readonly collapsed = observableValue<boolean>(this, false);\n\n\tpublic readonly lastTemplateData = observableValue<{\n\t\tcontentHeight: number;\n\t\tselections: Selection[] | undefined;\n\t}>(this, { contentHeight: 500, selections: undefined });\n\n\tpublic get originalUri(): URI | undefined {\n\t\treturn this.documentDiffItem.original?.uri;\n\t}\n\tpublic get modifiedUri(): URI | undefined {\n\t\treturn this.documentDiffItem.modified?.uri;\n\t}\n\n\tpublic readonly isActive: IObservable<boolean> = derived(\n\t\tthis,\n\t\t(reader) => this._editorViewModel.activeDiffItem.read(reader) === this,\n\t);\n\n\tprivate readonly _isFocusedSource = observableValue<IObservable<boolean>>(\n\t\tthis,\n\t\tconstObservable(false),\n\t);\n\tpublic readonly isFocused = derived(this, (reader) =>\n\t\tthis._isFocusedSource.read(reader).read(reader),\n\t);\n\n\tpublic setIsFocused(\n\t\tsource: IObservable<boolean>,\n\t\ttx: ITransaction | undefined,\n\t): void {\n\t\tthis._isFocusedSource.set(source, tx);\n\t}\n\n\tprivate readonly documentDiffItemRef: RefCounted<IDocumentDiffItem>;\n\tpublic get documentDiffItem(): IDocumentDiffItem {\n\t\treturn this.documentDiffItemRef.object;\n\t}\n\n\tpublic readonly isAlive = observableValue<boolean>(this, true);\n\n\tconstructor(\n\t\tdocumentDiffItem: RefCounted<IDocumentDiffItem>,\n\t\tprivate readonly _editorViewModel: MultiDiffEditorViewModel,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.isAlive.set(false, undefined);\n\t\t\t}),\n\t\t);\n\n\t\tthis.documentDiffItemRef = this._register(\n\t\t\tdocumentDiffItem.createNewRef(this),\n\t\t);\n\n\t\tfunction updateOptions(\n\t\t\toptions: IDiffEditorOptions,\n\t\t): IDiffEditorOptions {\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\thideUnchangedRegions: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tconst options = this._instantiationService.createInstance(\n\t\t\tDiffEditorOptions,\n\t\t\tupdateOptions(this.documentDiffItem.options || {}),\n\t\t);\n\t\tif (this.documentDiffItem.onOptionsDidChange) {\n\t\t\tthis._register(\n\t\t\t\tthis.documentDiffItem.onOptionsDidChange(() => {\n\t\t\t\t\toptions.updateOptions(\n\t\t\t\t\t\tupdateOptions(this.documentDiffItem.options || {}),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tconst diffEditorViewModelStore = new DisposableStore();\n\t\tconst originalTextModel =\n\t\t\tthis.documentDiffItem.original ??\n\t\t\tdiffEditorViewModelStore.add(\n\t\t\t\tthis._modelService.createModel(\"\", null),\n\t\t\t);\n\t\tconst modifiedTextModel =\n\t\t\tthis.documentDiffItem.modified ??\n\t\t\tdiffEditorViewModelStore.add(\n\t\t\t\tthis._modelService.createModel(\"\", null),\n\t\t\t);\n\t\tdiffEditorViewModelStore.add(\n\t\t\tthis.documentDiffItemRef.createNewRef(this),\n\t\t);\n\n\t\tthis.diffEditorViewModelRef = this._register(\n\t\t\tRefCounted.createWithDisposable(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tDiffEditorViewModel,\n\t\t\t\t\t{\n\t\t\t\t\t\toriginal: originalTextModel,\n\t\t\t\t\t\tmodified: modifiedTextModel,\n\t\t\t\t\t},\n\t\t\t\t\toptions,\n\t\t\t\t),\n\t\t\t\tdiffEditorViewModelStore,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic getKey(): string {\n\t\treturn JSON.stringify([\n\t\t\tthis.originalUri?.toString(),\n\t\t\tthis.modifiedUri?.toString(),\n\t\t]);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["options"]
}
