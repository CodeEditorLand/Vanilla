var v=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var m=(r,t,e,i)=>{for(var o=i>1?void 0:i?g(t,e):t,d=r.length-1,n;d>=0;d--)(n=r[d])&&(o=(i?n(t,e,o):n(o))||o);return i&&o&&v(t,e,o),o},a=(r,t)=>(e,i)=>t(e,i,r);import{Disposable as p,DisposableStore as y,toDisposable as M}from"../../../../../vs/base/common/lifecycle.js";import{derived as c,observableValue as l,transaction as h}from"../../../../../vs/base/common/observable.js";import{constObservable as S,derivedObservableWithWritableCache as _,mapObservableArrayCached as w,observableFromValueWithChangeEvent as E}from"../../../../../vs/base/common/observableInternal/utils.js";import"../../../../../vs/base/common/uri.js";import{DiffEditorOptions as O}from"../../../../../vs/editor/browser/widget/diffEditor/diffEditorOptions.js";import{DiffEditorViewModel as R}from"../../../../../vs/editor/browser/widget/diffEditor/diffEditorViewModel.js";import{RefCounted as V}from"../../../../../vs/editor/browser/widget/diffEditor/utils.js";import"../../../../../vs/editor/browser/widget/multiDiffEditor/model.js";import"../../../../../vs/editor/common/config/editorOptions.js";import"../../../../../vs/editor/common/core/selection.js";import"../../../../../vs/editor/common/editorCommon.js";import{IModelService as C}from"../../../../../vs/editor/common/services/model.js";import"../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as x}from"../../../../../vs/platform/instantiation/common/instantiation.js";class te extends p{constructor(e,i){super();this.model=e;this._instantiationService=i}_documents=E(this.model,this.model.documents);items=w(this,this._documents,(e,i)=>i.add(this._instantiationService.createInstance(s,e,this))).recomputeInitiallyAndOnChange(this._store);focusedDiffItem=c(this,e=>this.items.read(e).find(i=>i.isFocused.read(e)));activeDiffItem=_(this,(e,i)=>this.focusedDiffItem.read(e)??i);async waitForDiffs(){for(const e of this.items.get())await e.diffEditorViewModel.waitForDiff()}collapseAll(){h(e=>{for(const i of this.items.get())i.collapsed.set(!0,e)})}expandAll(){h(e=>{for(const i of this.items.get())i.collapsed.set(!1,e)})}get contextKeys(){return this.model.contextKeys}}let s=class extends p{constructor(e,i,o,d){super();this._editorViewModel=i;this._instantiationService=o;this._modelService=d;this._register(M(()=>{this.isAlive.set(!1,void 0)})),this.documentDiffItemRef=this._register(e.createNewRef(this));function n(D){return{...D,hideUnchangedRegions:{enabled:!0}}}const u=this._instantiationService.createInstance(O,n(this.documentDiffItem.options||{}));this.documentDiffItem.onOptionsDidChange&&this._register(this.documentDiffItem.onOptionsDidChange(()=>{u.updateOptions(n(this.documentDiffItem.options||{}))}));const f=new y,I=this.documentDiffItem.original??f.add(this._modelService.createModel("",null)),b=this.documentDiffItem.modified??f.add(this._modelService.createModel("",null));f.add(this.documentDiffItemRef.createNewRef(this)),this.diffEditorViewModelRef=this._register(V.createWithDisposable(this._instantiationService.createInstance(R,{original:I,modified:b},u),f,this))}diffEditorViewModelRef;get diffEditorViewModel(){return this.diffEditorViewModelRef.object}collapsed=l(this,!1);lastTemplateData=l(this,{contentHeight:500,selections:void 0});get originalUri(){return this.documentDiffItem.original?.uri}get modifiedUri(){return this.documentDiffItem.modified?.uri}isActive=c(this,e=>this._editorViewModel.activeDiffItem.read(e)===this);_isFocusedSource=l(this,S(!1));isFocused=c(this,e=>this._isFocusedSource.read(e).read(e));setIsFocused(e,i){this._isFocusedSource.set(e,i)}documentDiffItemRef;get documentDiffItem(){return this.documentDiffItemRef.object}isAlive=l(this,!0);getKey(){return JSON.stringify([this.originalUri?.toString(),this.modifiedUri?.toString()])}};s=m([a(2,x),a(3,C)],s);export{s as DocumentDiffItemViewModel,te as MultiDiffEditorViewModel};
