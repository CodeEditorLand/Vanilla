{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/multiDiffEditor/multiDiffEditorWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Dimension } from \"../../../../base/browser/dom.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport { readHotReloadableExport } from \"../../../../base/common/hotReloadHelpers.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\tderived,\n\tderivedWithStore,\n\tobservableValue,\n\trecomputeInitiallyAndOnChange,\n} from \"../../../../base/common/observable.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { Range } from \"../../../common/core/range.js\";\nimport type { IDiffEditor } from \"../../../common/editorCommon.js\";\nimport type { ICodeEditor } from \"../../editorBrowser.js\";\nimport type { DiffEditorWidget } from \"../diffEditor/diffEditorWidget.js\";\nimport \"./colors.js\";\nimport { DiffEditorItemTemplate } from \"./diffEditorItemTemplate.js\";\nimport type { IDocumentDiffItem, IMultiDiffEditorModel } from \"./model.js\";\nimport { MultiDiffEditorViewModel } from \"./multiDiffEditorViewModel.js\";\nimport {\n\ttype IMultiDiffEditorViewState,\n\ttype IMultiDiffResourceId,\n\tMultiDiffEditorWidgetImpl,\n} from \"./multiDiffEditorWidgetImpl.js\";\nimport type { IWorkbenchUIElementFactory } from \"./workbenchUIElementFactory.js\";\n\nexport class MultiDiffEditorWidget extends Disposable {\n\tprivate readonly _dimension = observableValue<Dimension | undefined>(\n\t\tthis,\n\t\tundefined,\n\t);\n\tprivate readonly _viewModel = observableValue<\n\t\tMultiDiffEditorViewModel | undefined\n\t>(this, undefined);\n\n\tprivate readonly _widgetImpl = derivedWithStore(this, (reader, store) => {\n\t\treadHotReloadableExport(DiffEditorItemTemplate, reader);\n\t\treturn store.add(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\treadHotReloadableExport(MultiDiffEditorWidgetImpl, reader),\n\t\t\t\tthis._element,\n\t\t\t\tthis._dimension,\n\t\t\t\tthis._viewModel,\n\t\t\t\tthis._workbenchUIElementFactory,\n\t\t\t),\n\t\t);\n\t});\n\n\tconstructor(\n\t\tprivate readonly _element: HTMLElement,\n\t\tprivate readonly _workbenchUIElementFactory: IWorkbenchUIElementFactory,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._widgetImpl));\n\t}\n\n\tpublic reveal(\n\t\tresource: IMultiDiffResourceId,\n\t\toptions?: RevealOptions,\n\t): void {\n\t\tthis._widgetImpl.get().reveal(resource, options);\n\t}\n\n\tpublic createViewModel(\n\t\tmodel: IMultiDiffEditorModel,\n\t): MultiDiffEditorViewModel {\n\t\treturn new MultiDiffEditorViewModel(model, this._instantiationService);\n\t}\n\n\tpublic setViewModel(viewModel: MultiDiffEditorViewModel | undefined): void {\n\t\tthis._viewModel.set(viewModel, undefined);\n\t}\n\n\tpublic layout(dimension: Dimension): void {\n\t\tthis._dimension.set(dimension, undefined);\n\t}\n\n\tprivate readonly _activeControl = derived(this, (reader) =>\n\t\tthis._widgetImpl.read(reader).activeControl.read(reader),\n\t);\n\n\tpublic getActiveControl(): DiffEditorWidget | undefined {\n\t\treturn this._activeControl.get();\n\t}\n\n\tpublic readonly onDidChangeActiveControl = Event.fromObservableLight(\n\t\tthis._activeControl,\n\t);\n\n\tpublic getViewState(): IMultiDiffEditorViewState {\n\t\treturn this._widgetImpl.get().getViewState();\n\t}\n\n\tpublic setViewState(viewState: IMultiDiffEditorViewState): void {\n\t\tthis._widgetImpl.get().setViewState(viewState);\n\t}\n\n\tpublic tryGetCodeEditor(\n\t\tresource: URI,\n\t): { diffEditor: IDiffEditor; editor: ICodeEditor } | undefined {\n\t\treturn this._widgetImpl.get().tryGetCodeEditor(resource);\n\t}\n\n\tpublic findDocumentDiffItem(resource: URI): IDocumentDiffItem | undefined {\n\t\treturn this._widgetImpl.get().findDocumentDiffItem(resource);\n\t}\n}\n\nexport interface RevealOptions {\n\trange?: Range;\n\thighlight: boolean;\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMA,SAAS,aAAa;AACtB,SAAS,+BAA+B;AACxC,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,6BAA6B;AAKtC,OAAO;AACP,SAAS,8BAA8B;AAEvC,SAAS,gCAAgC;AACzC;AAAA,EAGC;AAAA,OACM;AAGA,IAAM,wBAAN,cAAoC,WAAW;AAAA,EAsBrD,YACkB,UACA,4BACuB,uBACvC;AACD,UAAM;AAJW;AACA;AACuB;AAIxC,SAAK,UAAU,8BAA8B,KAAK,WAAW,CAAC;AAAA,EAC/D;AAAA,EA9DD,OAgCsD;AAAA;AAAA;AAAA,EACpC,aAAa;AAAA,IAC7B;AAAA,IACA;AAAA,EACD;AAAA,EACiB,aAAa,gBAE5B,MAAM,MAAS;AAAA,EAEA,cAAc,iBAAiB,MAAM,CAAC,QAAQ,UAAU;AACxE,4BAAwB,wBAAwB,MAAM;AACtD,WAAO,MAAM;AAAA,MACZ,KAAK,sBAAsB;AAAA,QAC1B,wBAAwB,2BAA2B,MAAM;AAAA,QACzD,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD,CAAC;AAAA,EAYM,OACN,UACA,SACO;AACP,SAAK,YAAY,IAAI,EAAE,OAAO,UAAU,OAAO;AAAA,EAChD;AAAA,EAEO,gBACN,OAC2B;AAC3B,WAAO,IAAI,yBAAyB,OAAO,KAAK,qBAAqB;AAAA,EACtE;AAAA,EAEO,aAAa,WAAuD;AAC1E,SAAK,WAAW,IAAI,WAAW,MAAS;AAAA,EACzC;AAAA,EAEO,OAAO,WAA4B;AACzC,SAAK,WAAW,IAAI,WAAW,MAAS;AAAA,EACzC;AAAA,EAEiB,iBAAiB;AAAA,IAAQ;AAAA,IAAM,CAAC,WAChD,KAAK,YAAY,KAAK,MAAM,EAAE,cAAc,KAAK,MAAM;AAAA,EACxD;AAAA,EAEO,mBAAiD;AACvD,WAAO,KAAK,eAAe,IAAI;AAAA,EAChC;AAAA,EAEgB,2BAA2B,MAAM;AAAA,IAChD,KAAK;AAAA,EACN;AAAA,EAEO,eAA0C;AAChD,WAAO,KAAK,YAAY,IAAI,EAAE,aAAa;AAAA,EAC5C;AAAA,EAEO,aAAa,WAA4C;AAC/D,SAAK,YAAY,IAAI,EAAE,aAAa,SAAS;AAAA,EAC9C;AAAA,EAEO,iBACN,UAC+D;AAC/D,WAAO,KAAK,YAAY,IAAI,EAAE,iBAAiB,QAAQ;AAAA,EACxD;AAAA,EAEO,qBAAqB,UAA8C;AACzE,WAAO,KAAK,YAAY,IAAI,EAAE,qBAAqB,QAAQ;AAAA,EAC5D;AACD;AAlFa,wBAAN;AAAA,EAyBJ;AAAA,GAzBU;",
  "names": []
}
