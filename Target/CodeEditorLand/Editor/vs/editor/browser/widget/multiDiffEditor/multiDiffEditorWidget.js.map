{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/multiDiffEditor/multiDiffEditorWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension } from '../../../../base/browser/dom.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { readHotReloadableExport } from '../../../../base/common/hotReloadHelpers.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { derived, derivedWithStore, observableValue, recomputeInitiallyAndOnChange } from '../../../../base/common/observable.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IDiffEditor } from '../../../common/editorCommon.js';\nimport { ICodeEditor } from '../../editorBrowser.js';\nimport { DiffEditorWidget } from '../diffEditor/diffEditorWidget.js';\nimport './colors.js';\nimport { DiffEditorItemTemplate } from './diffEditorItemTemplate.js';\nimport { IDocumentDiffItem, IMultiDiffEditorModel } from './model.js';\nimport { MultiDiffEditorViewModel } from './multiDiffEditorViewModel.js';\nimport { IMultiDiffEditorViewState, IMultiDiffResourceId, MultiDiffEditorWidgetImpl } from './multiDiffEditorWidgetImpl.js';\nimport { IWorkbenchUIElementFactory } from './workbenchUIElementFactory.js';\n\nexport class MultiDiffEditorWidget extends Disposable {\n\tprivate readonly _dimension = observableValue<Dimension | undefined>(this, undefined);\n\tprivate readonly _viewModel = observableValue<MultiDiffEditorViewModel | undefined>(this, undefined);\n\n\tprivate readonly _widgetImpl = derivedWithStore(this, (reader, store) => {\n\t\treadHotReloadableExport(DiffEditorItemTemplate, reader);\n\t\treturn store.add(this._instantiationService.createInstance((\n\t\t\treadHotReloadableExport(MultiDiffEditorWidgetImpl, reader)),\n\t\t\tthis._element,\n\t\t\tthis._dimension,\n\t\t\tthis._viewModel,\n\t\t\tthis._workbenchUIElementFactory,\n\t\t));\n\t});\n\n\tconstructor(\n\t\tprivate readonly _element: HTMLElement,\n\t\tprivate readonly _workbenchUIElementFactory: IWorkbenchUIElementFactory,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._widgetImpl));\n\t}\n\n\tpublic reveal(resource: IMultiDiffResourceId, options?: RevealOptions): void {\n\t\tthis._widgetImpl.get().reveal(resource, options);\n\t}\n\n\tpublic createViewModel(model: IMultiDiffEditorModel): MultiDiffEditorViewModel {\n\t\treturn new MultiDiffEditorViewModel(model, this._instantiationService);\n\t}\n\n\tpublic setViewModel(viewModel: MultiDiffEditorViewModel | undefined): void {\n\t\tthis._viewModel.set(viewModel, undefined);\n\t}\n\n\tpublic layout(dimension: Dimension): void {\n\t\tthis._dimension.set(dimension, undefined);\n\t}\n\n\tprivate readonly _activeControl = derived(this, (reader) => this._widgetImpl.read(reader).activeControl.read(reader));\n\n\tpublic getActiveControl(): DiffEditorWidget | undefined {\n\t\treturn this._activeControl.get();\n\t}\n\n\tpublic readonly onDidChangeActiveControl = Event.fromObservableLight(this._activeControl);\n\n\tpublic getViewState(): IMultiDiffEditorViewState {\n\t\treturn this._widgetImpl.get().getViewState();\n\t}\n\n\tpublic setViewState(viewState: IMultiDiffEditorViewState): void {\n\t\tthis._widgetImpl.get().setViewState(viewState);\n\t}\n\n\tpublic tryGetCodeEditor(resource: URI): { diffEditor: IDiffEditor; editor: ICodeEditor } | undefined {\n\t\treturn this._widgetImpl.get().tryGetCodeEditor(resource);\n\t}\n\n\tpublic findDocumentDiffItem(resource: URI): IDocumentDiffItem | undefined {\n\t\treturn this._widgetImpl.get().findDocumentDiffItem(resource);\n\t}\n}\n\nexport interface RevealOptions {\n\trange?: Range;\n\thighlight: boolean;\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,iBAAiB;AAC1B,SAAS,aAAa;AACtB,SAAS,+BAA+B;AACxC,SAAS,kBAAkB;AAC3B,SAAS,SAAS,kBAAkB,iBAAiB,qCAAqC;AAC1F,SAAS,WAAW;AACpB,SAAS,6BAA6B;AACtC,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB;AAC5B,SAAS,wBAAwB;AACjC,OAAO;AACP,SAAS,8BAA8B;AACvC,SAAS,mBAAmB,6BAA6B;AACzD,SAAS,gCAAgC;AACzC,SAAS,2BAA2B,sBAAsB,iCAAiC;AAC3F,SAAS,kCAAkC;AAEpC,IAAM,wBAAN,cAAoC,WAAW;AAAA,EAerD,YACkB,UACA,4BACuB,uBACvC;AACD,UAAM;AAJW;AACA;AACuB;AAIxC,SAAK,UAAU,8BAA8B,KAAK,WAAW,CAAC;AAAA,EAC/D;AAAA,EA9CD,OAuBsD;AAAA;AAAA;AAAA,EACpC,aAAa,gBAAuC,MAAM,MAAS;AAAA,EACnE,aAAa,gBAAsD,MAAM,MAAS;AAAA,EAElF,cAAc,iBAAiB,MAAM,CAAC,QAAQ,UAAU;AACxE,4BAAwB,wBAAwB,MAAM;AACtD,WAAO,MAAM,IAAI,KAAK,sBAAsB;AAAA,MAC3C,wBAAwB,2BAA2B,MAAM;AAAA,MACzD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN,CAAC;AAAA,EACF,CAAC;AAAA,EAYM,OAAO,UAAgC,SAA+B;AAC5E,SAAK,YAAY,IAAI,EAAE,OAAO,UAAU,OAAO;AAAA,EAChD;AAAA,EAEO,gBAAgB,OAAwD;AAC9E,WAAO,IAAI,yBAAyB,OAAO,KAAK,qBAAqB;AAAA,EACtE;AAAA,EAEO,aAAa,WAAuD;AAC1E,SAAK,WAAW,IAAI,WAAW,MAAS;AAAA,EACzC;AAAA,EAEO,OAAO,WAA4B;AACzC,SAAK,WAAW,IAAI,WAAW,MAAS;AAAA,EACzC;AAAA,EAEiB,iBAAiB,QAAQ,MAAM,CAAC,WAAW,KAAK,YAAY,KAAK,MAAM,EAAE,cAAc,KAAK,MAAM,CAAC;AAAA,EAE7G,mBAAiD;AACvD,WAAO,KAAK,eAAe,IAAI;AAAA,EAChC;AAAA,EAEgB,2BAA2B,MAAM,oBAAoB,KAAK,cAAc;AAAA,EAEjF,eAA0C;AAChD,WAAO,KAAK,YAAY,IAAI,EAAE,aAAa;AAAA,EAC5C;AAAA,EAEO,aAAa,WAA4C;AAC/D,SAAK,YAAY,IAAI,EAAE,aAAa,SAAS;AAAA,EAC9C;AAAA,EAEO,iBAAiB,UAA6E;AACpG,WAAO,KAAK,YAAY,IAAI,EAAE,iBAAiB,QAAQ;AAAA,EACxD;AAAA,EAEO,qBAAqB,UAA8C;AACzE,WAAO,KAAK,YAAY,IAAI,EAAE,qBAAqB,QAAQ;AAAA,EAC5D;AACD;AAhEa,wBAAN;AAAA,EAkBJ;AAAA,GAlBU;",
  "names": []
}
