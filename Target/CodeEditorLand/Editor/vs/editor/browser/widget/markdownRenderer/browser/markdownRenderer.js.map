{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/markdownRenderer/browser/markdownRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype MarkdownRenderOptions,\n\ttype MarkedOptions,\n\trenderMarkdown,\n} from \"../../../../../base/browser/markdownRenderer.js\";\nimport { createTrustedTypesPolicy } from \"../../../../../base/browser/trustedTypes.js\";\nimport { onUnexpectedError } from \"../../../../../base/common/errors.js\";\nimport { Emitter } from \"../../../../../base/common/event.js\";\nimport type {\n\tIMarkdownString,\n\tMarkdownStringTrustedOptions,\n} from \"../../../../../base/common/htmlContent.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport \"./renderedMarkdown.css\";\nimport { IOpenerService } from \"../../../../../platform/opener/common/opener.js\";\nimport { EditorOption } from \"../../../../common/config/editorOptions.js\";\nimport { ILanguageService } from \"../../../../common/languages/language.js\";\nimport { PLAINTEXT_LANGUAGE_ID } from \"../../../../common/languages/modesRegistry.js\";\nimport { tokenizeToString } from \"../../../../common/languages/textToHtmlTokenizer.js\";\nimport { applyFontInfo } from \"../../../config/domFontInfo.js\";\nimport type { ICodeEditor } from \"../../../editorBrowser.js\";\n\nexport interface IMarkdownRenderResult extends IDisposable {\n\treadonly element: HTMLElement;\n}\n\nexport interface IMarkdownRendererOptions {\n\treadonly editor?: ICodeEditor;\n\treadonly codeBlockFontFamily?: string;\n\treadonly codeBlockFontSize?: string;\n}\n\n/**\n * Markdown renderer that can render codeblocks with the editor mechanics. This\n * renderer should always be preferred.\n */\nexport class MarkdownRenderer {\n\tprivate static _ttpTokenizer = createTrustedTypesPolicy(\n\t\t\"tokenizeToString\",\n\t\t{\n\t\t\tcreateHTML(html: string) {\n\t\t\t\treturn html;\n\t\t\t},\n\t\t},\n\t);\n\n\tprivate readonly _onDidRenderAsync = new Emitter<void>();\n\treadonly onDidRenderAsync = this._onDidRenderAsync.event;\n\n\tconstructor(\n\t\tprivate readonly _options: IMarkdownRendererOptions,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t) { }\n\n\tdispose(): void {\n\t\tthis._onDidRenderAsync.dispose();\n\t}\n\n\trender(\n\t\tmarkdown: IMarkdownString | undefined,\n\t\toptions?: MarkdownRenderOptions,\n\t\tmarkedOptions?: MarkedOptions,\n\t): IMarkdownRenderResult {\n\t\tif (!markdown) {\n\t\t\tconst element = document.createElement(\"span\");\n\t\t\treturn { element, dispose: () => {} };\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst rendered = disposables.add(\n\t\t\trenderMarkdown(\n\t\t\t\tmarkdown,\n\t\t\t\t{\n\t\t\t\t\t...this._getRenderOptions(markdown, disposables),\n\t\t\t\t\t...options,\n\t\t\t\t},\n\t\t\t\tmarkedOptions,\n\t\t\t),\n\t\t);\n\t\trendered.element.classList.add(\"rendered-markdown\");\n\t\treturn {\n\t\t\telement: rendered.element,\n\t\t\tdispose: () => disposables.dispose(),\n\t\t};\n\t}\n\n\tprotected _getRenderOptions(\n\t\tmarkdown: IMarkdownString,\n\t\tdisposables: DisposableStore,\n\t): MarkdownRenderOptions {\n\t\treturn {\n\t\t\tcodeBlockRenderer: async (languageAlias, value) => {\n\t\t\t\t// In markdown,\n\t\t\t\t// it is possible that we stumble upon language aliases (e.g.js instead of javascript)\n\t\t\t\t// it is possible no alias is given in which case we fall back to the current editor lang\n\t\t\t\tlet languageId: string | undefined | null;\n\t\t\t\tif (languageAlias) {\n\t\t\t\t\tlanguageId =\n\t\t\t\t\t\tthis._languageService.getLanguageIdByLanguageName(\n\t\t\t\t\t\t\tlanguageAlias,\n\t\t\t\t\t\t);\n\t\t\t\t} else if (this._options.editor) {\n\t\t\t\t\tlanguageId = this._options.editor\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t?.getLanguageId();\n\t\t\t\t}\n\t\t\t\tif (!languageId) {\n\t\t\t\t\tlanguageId = PLAINTEXT_LANGUAGE_ID;\n\t\t\t\t}\n\t\t\t\tconst html = await tokenizeToString(\n\t\t\t\t\tthis._languageService,\n\t\t\t\t\tvalue,\n\t\t\t\t\tlanguageId,\n\t\t\t\t);\n\n\t\t\t\tconst element = document.createElement(\"span\");\n\n\t\t\t\telement.innerHTML = (MarkdownRenderer._ttpTokenizer?.createHTML(\n\t\t\t\t\thtml,\n\t\t\t\t) ?? html) as string;\n\n\t\t\t\t// use \"good\" font\n\t\t\t\tif (this._options.editor) {\n\t\t\t\t\tconst fontInfo = this._options.editor.getOption(\n\t\t\t\t\t\tEditorOption.fontInfo,\n\t\t\t\t\t);\n\t\t\t\t\tapplyFontInfo(element, fontInfo);\n\t\t\t\t} else if (this._options.codeBlockFontFamily) {\n\t\t\t\t\telement.style.fontFamily =\n\t\t\t\t\t\tthis._options.codeBlockFontFamily;\n\t\t\t\t}\n\n\t\t\t\tif (this._options.codeBlockFontSize !== undefined) {\n\t\t\t\t\telement.style.fontSize = this._options.codeBlockFontSize;\n\t\t\t\t}\n\n\t\t\t\treturn element;\n\t\t\t},\n\t\t\tasyncRenderCallback: () => this._onDidRenderAsync.fire(),\n\t\t\tactionHandler: {\n\t\t\t\tcallback: (link) => this.openMarkdownLink(link, markdown),\n\t\t\t\tdisposables: disposables,\n\t\t\t},\n\t\t};\n\t}\n\n\tprotected async openMarkdownLink(link: string, markdown: IMarkdownString) {\n\t\tawait openLinkFromMarkdown(\n\t\t\tthis._openerService,\n\t\t\tlink,\n\t\t\tmarkdown.isTrusted,\n\t\t);\n\t}\n}\n\nexport async function openLinkFromMarkdown(\n\topenerService: IOpenerService,\n\tlink: string,\n\tisTrusted: boolean | MarkdownStringTrustedOptions | undefined,\n): Promise<boolean> {\n\ttry {\n\t\treturn await openerService.open(link, {\n\t\t\tfromUserGesture: true,\n\t\t\tallowContributedOpeners: true,\n\t\t\tallowCommands: toAllowCommandsOption(isTrusted),\n\t\t});\n\t} catch (e) {\n\t\tonUnexpectedError(e);\n\t\treturn false;\n\t}\n}\n\nfunction toAllowCommandsOption(\n\tisTrusted: boolean | MarkdownStringTrustedOptions | undefined,\n): boolean | readonly string[] {\n\tif (isTrusted === true) {\n\t\treturn true; // Allow all commands\n\t}\n\n\tif (isTrusted && Array.isArray(isTrusted.enabledCommands)) {\n\t\treturn isTrusted.enabledCommands; // Allow subset of commands\n\t}\n\n\treturn false; // Block commands\n}\n"],
  "mappings": "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",
  "names": []
}
