{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/features/overviewRulerFeature.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventType, addDisposableListener, addStandardDisposableListener, h } from '../../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { IMouseWheelEvent } from '../../../../../base/browser/mouseEvent.js';\nimport { ScrollbarState } from '../../../../../base/browser/ui/scrollbar/scrollbarState.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, autorun, autorunWithStore, derived, observableFromEvent, observableSignalFromEvent } from '../../../../../base/common/observable.js';\nimport { CodeEditorWidget } from '../../codeEditor/codeEditorWidget.js';\nimport { DiffEditorEditors } from '../components/diffEditorEditors.js';\nimport { DiffEditorViewModel } from '../diffEditorViewModel.js';\nimport { appendRemoveOnDispose } from '../utils.js';\nimport { EditorLayoutInfo, EditorOption } from '../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../common/core/lineRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { OverviewRulerZone } from '../../../../common/viewModel/overviewZoneManager.js';\nimport { defaultInsertColor, defaultRemoveColor, diffInserted, diffOverviewRulerInserted, diffOverviewRulerRemoved, diffRemoved } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\n\nexport class OverviewRulerFeature extends Disposable {\n\tprivate static readonly ONE_OVERVIEW_WIDTH = 15;\n\tpublic static readonly ENTIRE_DIFF_OVERVIEW_WIDTH = this.ONE_OVERVIEW_WIDTH * 2;\n\tpublic readonly width = OverviewRulerFeature.ENTIRE_DIFF_OVERVIEW_WIDTH;\n\n\tconstructor(\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _rootElement: HTMLElement,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _rootWidth: IObservable<number>,\n\t\tprivate readonly _rootHeight: IObservable<number>,\n\t\tprivate readonly _modifiedEditorLayoutInfo: IObservable<EditorLayoutInfo | null>,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\n\t\tconst currentColorTheme = observableFromEvent(this._themeService.onDidColorThemeChange, () => this._themeService.getColorTheme());\n\n\t\tconst currentColors = derived(reader => {\n\t\t\t/** @description colors */\n\t\t\tconst theme = currentColorTheme.read(reader);\n\t\t\tconst insertColor = theme.getColor(diffOverviewRulerInserted) || (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n\t\t\tconst removeColor = theme.getColor(diffOverviewRulerRemoved) || (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n\t\t\treturn { insertColor, removeColor };\n\t\t});\n\n\t\tconst viewportDomElement = createFastDomNode(document.createElement('div'));\n\t\tviewportDomElement.setClassName('diffViewport');\n\t\tviewportDomElement.setPosition('absolute');\n\n\t\tconst diffOverviewRoot = h('div.diffOverview', {\n\t\t\tstyle: { position: 'absolute', top: '0px', width: OverviewRulerFeature.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px' }\n\t\t}).root;\n\t\tthis._register(appendRemoveOnDispose(diffOverviewRoot, viewportDomElement.domNode));\n\t\tthis._register(addStandardDisposableListener(diffOverviewRoot, EventType.POINTER_DOWN, (e) => {\n\t\t\tthis._editors.modified.delegateVerticalScrollbarPointerDown(e);\n\t\t}));\n\t\tthis._register(addDisposableListener(diffOverviewRoot, EventType.MOUSE_WHEEL, (e: IMouseWheelEvent) => {\n\t\t\tthis._editors.modified.delegateScrollFromMouseWheelEvent(e);\n\t\t}, { passive: false }));\n\t\tthis._register(appendRemoveOnDispose(this._rootElement, diffOverviewRoot));\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description recreate overview rules when model changes */\n\t\t\tconst m = this._diffModel.read(reader);\n\n\t\t\tconst originalOverviewRuler = this._editors.original.createOverviewRuler('original diffOverviewRuler');\n\t\t\tif (originalOverviewRuler) {\n\t\t\t\tstore.add(originalOverviewRuler);\n\t\t\t\tstore.add(appendRemoveOnDispose(diffOverviewRoot, originalOverviewRuler.getDomNode()));\n\t\t\t}\n\n\t\t\tconst modifiedOverviewRuler = this._editors.modified.createOverviewRuler('modified diffOverviewRuler');\n\t\t\tif (modifiedOverviewRuler) {\n\t\t\t\tstore.add(modifiedOverviewRuler);\n\t\t\t\tstore.add(appendRemoveOnDispose(diffOverviewRoot, modifiedOverviewRuler.getDomNode()));\n\t\t\t}\n\n\t\t\tif (!originalOverviewRuler || !modifiedOverviewRuler) {\n\t\t\t\t// probably no model\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst origViewZonesChanged = observableSignalFromEvent('viewZoneChanged', this._editors.original.onDidChangeViewZones);\n\t\t\tconst modViewZonesChanged = observableSignalFromEvent('viewZoneChanged', this._editors.modified.onDidChangeViewZones);\n\t\t\tconst origHiddenRangesChanged = observableSignalFromEvent('hiddenRangesChanged', this._editors.original.onDidChangeHiddenAreas);\n\t\t\tconst modHiddenRangesChanged = observableSignalFromEvent('hiddenRangesChanged', this._editors.modified.onDidChangeHiddenAreas);\n\n\t\t\tstore.add(autorun(reader => {\n\t\t\t\t/** @description set overview ruler zones */\n\t\t\t\torigViewZonesChanged.read(reader);\n\t\t\t\tmodViewZonesChanged.read(reader);\n\t\t\t\torigHiddenRangesChanged.read(reader);\n\t\t\t\tmodHiddenRangesChanged.read(reader);\n\n\t\t\t\tconst colors = currentColors.read(reader);\n\t\t\t\tconst diff = m?.diff.read(reader)?.mappings;\n\n\t\t\t\tfunction createZones(ranges: LineRange[], color: Color, editor: CodeEditorWidget) {\n\t\t\t\t\tconst vm = editor._getViewModel();\n\t\t\t\t\tif (!vm) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn ranges\n\t\t\t\t\t\t.filter(d => d.length > 0)\n\t\t\t\t\t\t.map(r => {\n\t\t\t\t\t\t\tconst start = vm.coordinatesConverter.convertModelPositionToViewPosition(new Position(r.startLineNumber, 1));\n\t\t\t\t\t\t\tconst end = vm.coordinatesConverter.convertModelPositionToViewPosition(new Position(r.endLineNumberExclusive, 1));\n\t\t\t\t\t\t\t// By computing the lineCount, we won't ask the view model later for the bottom vertical position.\n\t\t\t\t\t\t\t// (The view model will take into account the alignment viewzones, which will give\n\t\t\t\t\t\t\t// modifications and deletetions always the same height.)\n\t\t\t\t\t\t\tconst lineCount = end.lineNumber - start.lineNumber;\n\t\t\t\t\t\t\treturn new OverviewRulerZone(start.lineNumber, end.lineNumber, lineCount, color.toString());\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst originalZones = createZones((diff || []).map(d => d.lineRangeMapping.original), colors.removeColor, this._editors.original);\n\t\t\t\tconst modifiedZones = createZones((diff || []).map(d => d.lineRangeMapping.modified), colors.insertColor, this._editors.modified);\n\t\t\t\toriginalOverviewRuler?.setZones(originalZones);\n\t\t\t\tmodifiedOverviewRuler?.setZones(modifiedZones);\n\t\t\t}));\n\n\t\t\tstore.add(autorun(reader => {\n\t\t\t\t/** @description layout overview ruler */\n\t\t\t\tconst height = this._rootHeight.read(reader);\n\t\t\t\tconst width = this._rootWidth.read(reader);\n\t\t\t\tconst layoutInfo = this._modifiedEditorLayoutInfo.read(reader);\n\t\t\t\tif (layoutInfo) {\n\t\t\t\t\tconst freeSpace = OverviewRulerFeature.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * OverviewRulerFeature.ONE_OVERVIEW_WIDTH;\n\t\t\t\t\toriginalOverviewRuler.setLayout({\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\theight: height,\n\t\t\t\t\t\tright: freeSpace + OverviewRulerFeature.ONE_OVERVIEW_WIDTH,\n\t\t\t\t\t\twidth: OverviewRulerFeature.ONE_OVERVIEW_WIDTH,\n\t\t\t\t\t});\n\t\t\t\t\tmodifiedOverviewRuler.setLayout({\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\theight: height,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\twidth: OverviewRulerFeature.ONE_OVERVIEW_WIDTH,\n\t\t\t\t\t});\n\t\t\t\t\tconst scrollTop = this._editors.modifiedScrollTop.read(reader);\n\t\t\t\t\tconst scrollHeight = this._editors.modifiedScrollHeight.read(reader);\n\n\t\t\t\t\tconst scrollBarOptions = this._editors.modified.getOption(EditorOption.scrollbar);\n\t\t\t\t\tconst state = new ScrollbarState(\n\t\t\t\t\t\tscrollBarOptions.verticalHasArrows ? scrollBarOptions.arrowSize : 0,\n\t\t\t\t\t\tscrollBarOptions.verticalScrollbarSize,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tlayoutInfo.height,\n\t\t\t\t\t\tscrollHeight,\n\t\t\t\t\t\tscrollTop\n\t\t\t\t\t);\n\n\t\t\t\t\tviewportDomElement.setTop(state.getSliderPosition());\n\t\t\t\t\tviewportDomElement.setHeight(state.getSliderSize());\n\t\t\t\t} else {\n\t\t\t\t\tviewportDomElement.setTop(0);\n\t\t\t\t\tviewportDomElement.setHeight(0);\n\t\t\t\t}\n\n\t\t\t\tdiffOverviewRoot.style.height = height + 'px';\n\t\t\t\tdiffOverviewRoot.style.left = (width - OverviewRulerFeature.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n\t\t\t\tviewportDomElement.setWidth(OverviewRulerFeature.ENTIRE_DIFF_OVERVIEW_WIDTH);\n\t\t\t}));\n\t\t}));\n\t}\n}\n"],
  "mappings": "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",
  "names": ["reader"]
}
