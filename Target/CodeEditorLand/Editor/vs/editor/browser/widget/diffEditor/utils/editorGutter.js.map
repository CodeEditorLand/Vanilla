{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/utils/editorGutter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h, reset } from \"../../../../../base/browser/dom.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\ttype IReader,\n\ttype ISettableObservable,\n\tautorun,\n\tobservableFromEvent,\n\tobservableSignal,\n\tobservableSignalFromEvent,\n\tobservableValue,\n\ttransaction,\n} from \"../../../../../base/common/observable.js\";\nimport { LineRange } from \"../../../../common/core/lineRange.js\";\nimport { OffsetRange } from \"../../../../common/core/offsetRange.js\";\nimport type { CodeEditorWidget } from \"../../codeEditor/codeEditorWidget.js\";\n\nexport class EditorGutter<\n\tT extends IGutterItemInfo = IGutterItemInfo,\n> extends Disposable {\n\tprivate readonly scrollTop = observableFromEvent(\n\t\tthis,\n\t\tthis._editor.onDidScrollChange,\n\t\t(e) =>\n\t\t\t/** @description editor.onDidScrollChange */ this._editor.getScrollTop(),\n\t);\n\tprivate readonly isScrollTopZero = this.scrollTop.map(\n\t\t(scrollTop) => /** @description isScrollTopZero */ scrollTop === 0,\n\t);\n\tprivate readonly modelAttached = observableFromEvent(\n\t\tthis,\n\t\tthis._editor.onDidChangeModel,\n\t\t(e) =>\n\t\t\t/** @description editor.onDidChangeModel */ this._editor.hasModel(),\n\t);\n\n\tprivate readonly editorOnDidChangeViewZones = observableSignalFromEvent(\n\t\t\"onDidChangeViewZones\",\n\t\tthis._editor.onDidChangeViewZones,\n\t);\n\tprivate readonly editorOnDidContentSizeChange = observableSignalFromEvent(\n\t\t\"onDidContentSizeChange\",\n\t\tthis._editor.onDidContentSizeChange,\n\t);\n\tprivate readonly domNodeSizeChanged =\n\t\tobservableSignal(\"domNodeSizeChanged\");\n\n\tconstructor(\n\t\tprivate readonly _editor: CodeEditorWidget,\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tprivate readonly itemProvider: IGutterItemProvider<T>,\n\t) {\n\t\tsuper();\n\t\tthis._domNode.className = \"gutter monaco-editor\";\n\t\tconst scrollDecoration = this._domNode.appendChild(\n\t\t\th(\"div.scroll-decoration\", {\n\t\t\t\trole: \"presentation\",\n\t\t\t\tariaHidden: \"true\",\n\t\t\t\tstyle: { width: \"100%\" },\n\t\t\t}).root,\n\t\t);\n\n\t\tconst o = new ResizeObserver(() => {\n\t\t\ttransaction((tx) => {\n\t\t\t\t/** @description ResizeObserver: size changed */\n\t\t\t\tthis.domNodeSizeChanged.trigger(tx);\n\t\t\t});\n\t\t});\n\t\to.observe(this._domNode);\n\t\tthis._register(toDisposable(() => o.disconnect()));\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description update scroll decoration */\n\t\t\t\tscrollDecoration.className = this.isScrollTopZero.read(reader)\n\t\t\t\t\t? \"\"\n\t\t\t\t\t: \"scroll-decoration\";\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) =>\n\t\t\t\t/** @description EditorGutter.Render */ this.render(reader),\n\t\t\t),\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\treset(this._domNode);\n\t}\n\n\tprivate readonly views = new Map<string, ManagedGutterItemView>();\n\n\tprivate render(reader: IReader): void {\n\t\tif (!this.modelAttached.read(reader)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.domNodeSizeChanged.read(reader);\n\t\tthis.editorOnDidChangeViewZones.read(reader);\n\t\tthis.editorOnDidContentSizeChange.read(reader);\n\n\t\tconst scrollTop = this.scrollTop.read(reader);\n\n\t\tconst visibleRanges = this._editor.getVisibleRanges();\n\t\tconst unusedIds = new Set(this.views.keys());\n\n\t\tconst viewRange = OffsetRange.ofStartAndLength(\n\t\t\t0,\n\t\t\tthis._domNode.clientHeight,\n\t\t);\n\n\t\tif (!viewRange.isEmpty) {\n\t\t\tfor (const visibleRange of visibleRanges) {\n\t\t\t\tconst visibleRange2 = new LineRange(\n\t\t\t\t\tvisibleRange.startLineNumber,\n\t\t\t\t\tvisibleRange.endLineNumber + 1,\n\t\t\t\t);\n\n\t\t\t\tconst gutterItems =\n\t\t\t\t\tthis.itemProvider.getIntersectingGutterItems(\n\t\t\t\t\t\tvisibleRange2,\n\t\t\t\t\t\treader,\n\t\t\t\t\t);\n\n\t\t\t\ttransaction((tx) => {\n\t\t\t\t\t/** EditorGutter.render */\n\n\t\t\t\t\tfor (const gutterItem of gutterItems) {\n\t\t\t\t\t\tif (!gutterItem.range.intersect(visibleRange2)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tunusedIds.delete(gutterItem.id);\n\t\t\t\t\t\tlet view = this.views.get(gutterItem.id);\n\t\t\t\t\t\tif (view) {\n\t\t\t\t\t\t\tview.item.set(gutterItem, tx);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst viewDomNode = document.createElement(\"div\");\n\t\t\t\t\t\t\tthis._domNode.appendChild(viewDomNode);\n\t\t\t\t\t\t\tconst gutterItemObs = observableValue(\n\t\t\t\t\t\t\t\t\"item\",\n\t\t\t\t\t\t\t\tgutterItem,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst itemView = this.itemProvider.createView(\n\t\t\t\t\t\t\t\tgutterItemObs,\n\t\t\t\t\t\t\t\tviewDomNode,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tview = new ManagedGutterItemView(\n\t\t\t\t\t\t\t\tgutterItemObs,\n\t\t\t\t\t\t\t\titemView,\n\t\t\t\t\t\t\t\tviewDomNode,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.views.set(gutterItem.id, view);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst top =\n\t\t\t\t\t\t\tgutterItem.range.startLineNumber <=\n\t\t\t\t\t\t\tthis._editor.getModel()!.getLineCount()\n\t\t\t\t\t\t\t\t? this._editor.getTopForLineNumber(\n\t\t\t\t\t\t\t\t\t\tgutterItem.range.startLineNumber,\n\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t) - scrollTop\n\t\t\t\t\t\t\t\t: this._editor.getBottomForLineNumber(\n\t\t\t\t\t\t\t\t\t\tgutterItem.range.startLineNumber - 1,\n\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t) - scrollTop;\n\t\t\t\t\t\tconst bottom =\n\t\t\t\t\t\t\tgutterItem.range.endLineNumberExclusive === 1\n\t\t\t\t\t\t\t\t? Math.max(\n\t\t\t\t\t\t\t\t\t\ttop,\n\t\t\t\t\t\t\t\t\t\tthis._editor.getTopForLineNumber(\n\t\t\t\t\t\t\t\t\t\t\tgutterItem.range.startLineNumber,\n\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t) - scrollTop,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: Math.max(\n\t\t\t\t\t\t\t\t\t\ttop,\n\t\t\t\t\t\t\t\t\t\tthis._editor.getBottomForLineNumber(\n\t\t\t\t\t\t\t\t\t\t\tgutterItem.range\n\t\t\t\t\t\t\t\t\t\t\t\t.endLineNumberExclusive - 1,\n\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t) - scrollTop,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst height = bottom - top;\n\t\t\t\t\t\tview.domNode.style.top = `${top}px`;\n\t\t\t\t\t\tview.domNode.style.height = `${height}px`;\n\n\t\t\t\t\t\tview.gutterItemView.layout(\n\t\t\t\t\t\t\tOffsetRange.ofStartAndLength(top, height),\n\t\t\t\t\t\t\tviewRange,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfor (const id of unusedIds) {\n\t\t\tconst view = this.views.get(id)!;\n\t\t\tview.gutterItemView.dispose();\n\t\t\tview.domNode.remove();\n\t\t\tthis.views.delete(id);\n\t\t}\n\t}\n}\n\nclass ManagedGutterItemView {\n\tconstructor(\n\t\tpublic readonly item: ISettableObservable<IGutterItemInfo>,\n\t\tpublic readonly gutterItemView: IGutterItemView,\n\t\tpublic readonly domNode: HTMLDivElement,\n\t) {}\n}\n\nexport interface IGutterItemProvider<TItem extends IGutterItemInfo> {\n\tgetIntersectingGutterItems(range: LineRange, reader: IReader): TItem[];\n\n\tcreateView(item: IObservable<TItem>, target: HTMLElement): IGutterItemView;\n}\n\nexport interface IGutterItemInfo {\n\tid: string;\n\trange: LineRange;\n}\n\nexport interface IGutterItemView extends IDisposable {\n\tlayout(itemRange: OffsetRange, viewRange: OffsetRange): void;\n}\n"],
  "mappings": "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",
  "names": []
}
