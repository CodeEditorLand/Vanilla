{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/utils/editorGutter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h, reset } from '../../../../../base/browser/dom.js';\nimport { Disposable, IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, IObservable, IReader, ISettableObservable, observableFromEvent, observableSignal, observableSignalFromEvent, observableValue, transaction } from '../../../../../base/common/observable.js';\nimport { CodeEditorWidget } from '../../codeEditor/codeEditorWidget.js';\nimport { LineRange } from '../../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../../common/core/offsetRange.js';\n\nexport class EditorGutter<T extends IGutterItemInfo = IGutterItemInfo> extends Disposable {\n\tprivate readonly scrollTop = observableFromEvent(this,\n\t\tthis._editor.onDidScrollChange,\n\t\t(e) => /** @description editor.onDidScrollChange */ this._editor.getScrollTop()\n\t);\n\tprivate readonly isScrollTopZero = this.scrollTop.map((scrollTop) => /** @description isScrollTopZero */ scrollTop === 0);\n\tprivate readonly modelAttached = observableFromEvent(this,\n\t\tthis._editor.onDidChangeModel,\n\t\t(e) => /** @description editor.onDidChangeModel */ this._editor.hasModel()\n\t);\n\n\tprivate readonly editorOnDidChangeViewZones = observableSignalFromEvent('onDidChangeViewZones', this._editor.onDidChangeViewZones);\n\tprivate readonly editorOnDidContentSizeChange = observableSignalFromEvent('onDidContentSizeChange', this._editor.onDidContentSizeChange);\n\tprivate readonly domNodeSizeChanged = observableSignal('domNodeSizeChanged');\n\n\tconstructor(\n\t\tprivate readonly _editor: CodeEditorWidget,\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tprivate readonly itemProvider: IGutterItemProvider<T>\n\t) {\n\t\tsuper();\n\t\tthis._domNode.className = 'gutter monaco-editor';\n\t\tconst scrollDecoration = this._domNode.appendChild(\n\t\t\th('div.scroll-decoration', { role: 'presentation', ariaHidden: 'true', style: { width: '100%' } })\n\t\t\t\t.root\n\t\t);\n\n\t\tconst o = new ResizeObserver(() => {\n\t\t\ttransaction(tx => {\n\t\t\t\t/** @description ResizeObserver: size changed */\n\t\t\t\tthis.domNodeSizeChanged.trigger(tx);\n\t\t\t});\n\t\t});\n\t\to.observe(this._domNode);\n\t\tthis._register(toDisposable(() => o.disconnect()));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update scroll decoration */\n\t\t\tscrollDecoration.className = this.isScrollTopZero.read(reader) ? '' : 'scroll-decoration';\n\t\t}));\n\n\t\tthis._register(autorun(reader => /** @description EditorGutter.Render */ this.render(reader)));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\treset(this._domNode);\n\t}\n\n\tprivate readonly views = new Map<string, ManagedGutterItemView>();\n\n\tprivate render(reader: IReader): void {\n\t\tif (!this.modelAttached.read(reader)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.domNodeSizeChanged.read(reader);\n\t\tthis.editorOnDidChangeViewZones.read(reader);\n\t\tthis.editorOnDidContentSizeChange.read(reader);\n\n\t\tconst scrollTop = this.scrollTop.read(reader);\n\n\t\tconst visibleRanges = this._editor.getVisibleRanges();\n\t\tconst unusedIds = new Set(this.views.keys());\n\n\t\tconst viewRange = OffsetRange.ofStartAndLength(0, this._domNode.clientHeight);\n\n\t\tif (!viewRange.isEmpty) {\n\t\t\tfor (const visibleRange of visibleRanges) {\n\t\t\t\tconst visibleRange2 = new LineRange(\n\t\t\t\t\tvisibleRange.startLineNumber,\n\t\t\t\t\tvisibleRange.endLineNumber + 1\n\t\t\t\t);\n\n\t\t\t\tconst gutterItems = this.itemProvider.getIntersectingGutterItems(\n\t\t\t\t\tvisibleRange2,\n\t\t\t\t\treader\n\t\t\t\t);\n\n\t\t\t\ttransaction(tx => {\n\t\t\t\t\t/** EditorGutter.render */\n\n\t\t\t\t\tfor (const gutterItem of gutterItems) {\n\t\t\t\t\t\tif (!gutterItem.range.intersect(visibleRange2)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tunusedIds.delete(gutterItem.id);\n\t\t\t\t\t\tlet view = this.views.get(gutterItem.id);\n\t\t\t\t\t\tif (!view) {\n\t\t\t\t\t\t\tconst viewDomNode = document.createElement('div');\n\t\t\t\t\t\t\tthis._domNode.appendChild(viewDomNode);\n\t\t\t\t\t\t\tconst gutterItemObs = observableValue('item', gutterItem);\n\t\t\t\t\t\t\tconst itemView = this.itemProvider.createView(\n\t\t\t\t\t\t\t\tgutterItemObs,\n\t\t\t\t\t\t\t\tviewDomNode\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tview = new ManagedGutterItemView(gutterItemObs, itemView, viewDomNode);\n\t\t\t\t\t\t\tthis.views.set(gutterItem.id, view);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tview.item.set(gutterItem, tx);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst top =\n\t\t\t\t\t\t\tgutterItem.range.startLineNumber <= this._editor.getModel()!.getLineCount()\n\t\t\t\t\t\t\t\t? this._editor.getTopForLineNumber(gutterItem.range.startLineNumber, true) - scrollTop\n\t\t\t\t\t\t\t\t: this._editor.getBottomForLineNumber(gutterItem.range.startLineNumber - 1, false) - scrollTop;\n\t\t\t\t\t\tconst bottom =\n\t\t\t\t\t\t\tgutterItem.range.endLineNumberExclusive === 1 ?\n\t\t\t\t\t\t\t\tMath.max(top, this._editor.getTopForLineNumber(gutterItem.range.startLineNumber, false) - scrollTop)\n\t\t\t\t\t\t\t\t: Math.max(top, this._editor.getBottomForLineNumber(gutterItem.range.endLineNumberExclusive - 1, true) - scrollTop);\n\n\t\t\t\t\t\tconst height = bottom - top;\n\t\t\t\t\t\tview.domNode.style.top = `${top}px`;\n\t\t\t\t\t\tview.domNode.style.height = `${height}px`;\n\n\t\t\t\t\t\tview.gutterItemView.layout(OffsetRange.ofStartAndLength(top, height), viewRange);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfor (const id of unusedIds) {\n\t\t\tconst view = this.views.get(id)!;\n\t\t\tview.gutterItemView.dispose();\n\t\t\tview.domNode.remove();\n\t\t\tthis.views.delete(id);\n\t\t}\n\t}\n}\n\nclass ManagedGutterItemView {\n\tconstructor(\n\t\tpublic readonly item: ISettableObservable<IGutterItemInfo>,\n\t\tpublic readonly gutterItemView: IGutterItemView,\n\t\tpublic readonly domNode: HTMLDivElement,\n\t) { }\n}\n\nexport interface IGutterItemProvider<TItem extends IGutterItemInfo> {\n\tgetIntersectingGutterItems(range: LineRange, reader: IReader): TItem[];\n\n\tcreateView(item: IObservable<TItem>, target: HTMLElement): IGutterItemView;\n}\n\nexport interface IGutterItemInfo {\n\tid: string;\n\trange: LineRange;\n}\n\nexport interface IGutterItemView extends IDisposable {\n\tlayout(itemRange: OffsetRange, viewRange: OffsetRange): void;\n}\n"],
  "mappings": "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",
  "names": []
}
