{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/components/accessibleDiffViewer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, addStandardDisposableListener, reset } from '../../../../../base/browser/dom.js';\nimport { createTrustedTypesPolicy } from '../../../../../base/browser/trustedTypes.js';\nimport { ActionBar } from '../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../../../base/common/actions.js';\nimport { forEachAdjacent, groupAdjacentBy } from '../../../../../base/common/arrays.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, ITransaction, autorun, autorunWithStore, derived, derivedWithStore, observableValue, subtransaction, transaction } from '../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { applyFontInfo } from '../../../config/domFontInfo.js';\nimport { applyStyle } from '../utils.js';\nimport { EditorFontLigatures, EditorOption, IComputedEditorOptions } from '../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../../common/core/offsetRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { DetailedLineRangeMapping, LineRangeMapping } from '../../../../common/diff/rangeMapping.js';\nimport { ILanguageIdCodec } from '../../../../common/languages.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { ITextModel, TextModelResolvedOptions } from '../../../../common/model.js';\nimport { LineTokens } from '../../../../common/tokens/lineTokens.js';\nimport { RenderLineInput, renderViewLine2 } from '../../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../../../common/viewModel.js';\nimport { localize } from '../../../../../nls.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { registerIcon } from '../../../../../platform/theme/common/iconRegistry.js';\nimport './accessibleDiffViewer.css';\nimport { DiffEditorEditors } from './diffEditorEditors.js';\n\nconst accessibleDiffViewerInsertIcon = registerIcon('diff-review-insert', Codicon.add, localize('accessibleDiffViewerInsertIcon', 'Icon for \\'Insert\\' in accessible diff viewer.'));\nconst accessibleDiffViewerRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, localize('accessibleDiffViewerRemoveIcon', 'Icon for \\'Remove\\' in accessible diff viewer.'));\nconst accessibleDiffViewerCloseIcon = registerIcon('diff-review-close', Codicon.close, localize('accessibleDiffViewerCloseIcon', 'Icon for \\'Close\\' in accessible diff viewer.'));\n\nexport interface IAccessibleDiffViewerModel {\n\tgetOriginalModel(): ITextModel;\n\tgetOriginalOptions(): IComputedEditorOptions;\n\n\t/**\n\t * Should do: `setSelection`, `revealLine` and `focus`\n\t */\n\toriginalReveal(range: Range): void;\n\n\tgetModifiedModel(): ITextModel;\n\tgetModifiedOptions(): IComputedEditorOptions;\n\t/**\n\t * Should do: `setSelection`, `revealLine` and `focus`\n\t */\n\tmodifiedReveal(range?: Range): void;\n\tmodifiedSetSelection(range: Range): void;\n\tmodifiedFocus(): void;\n\n\tgetModifiedPosition(): Position | undefined;\n}\n\nexport class AccessibleDiffViewer extends Disposable {\n\tpublic static _ttPolicy = createTrustedTypesPolicy('diffReview', { createHTML: value => value });\n\n\tconstructor(\n\t\tprivate readonly _parentNode: HTMLElement,\n\t\tprivate readonly _visible: IObservable<boolean>,\n\t\tprivate readonly _setVisible: (visible: boolean, tx: ITransaction | undefined) => void,\n\t\tprivate readonly _canClose: IObservable<boolean>,\n\t\tprivate readonly _width: IObservable<number>,\n\t\tprivate readonly _height: IObservable<number>,\n\t\tprivate readonly _diffs: IObservable<DetailedLineRangeMapping[] | undefined>,\n\t\tprivate readonly _models: IAccessibleDiffViewerModel,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate readonly _state = derivedWithStore(this, (reader, store) => {\n\t\tconst visible = this._visible.read(reader);\n\t\tthis._parentNode.style.visibility = visible ? 'visible' : 'hidden';\n\t\tif (!visible) {\n\t\t\treturn null;\n\t\t}\n\t\tconst model = store.add(this._instantiationService.createInstance(ViewModel, this._diffs, this._models, this._setVisible, this._canClose));\n\t\tconst view = store.add(this._instantiationService.createInstance(View, this._parentNode, model, this._width, this._height, this._models));\n\t\treturn { model, view, };\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\tnext(): void {\n\t\ttransaction(tx => {\n\t\t\tconst isVisible = this._visible.get();\n\t\t\tthis._setVisible(true, tx);\n\t\t\tif (isVisible) {\n\t\t\t\tthis._state.get()!.model.nextGroup(tx);\n\t\t\t}\n\t\t});\n\t}\n\n\tprev(): void {\n\t\ttransaction(tx => {\n\t\t\tthis._setVisible(true, tx);\n\t\t\tthis._state.get()!.model.previousGroup(tx);\n\t\t});\n\t}\n\n\tclose(): void {\n\t\ttransaction(tx => {\n\t\t\tthis._setVisible(false, tx);\n\t\t});\n\t}\n}\n\nclass ViewModel extends Disposable {\n\tprivate readonly _groups = observableValue<ViewElementGroup[]>(this, []);\n\tprivate readonly _currentGroupIdx = observableValue(this, 0);\n\tprivate readonly _currentElementIdx = observableValue(this, 0);\n\n\tpublic readonly groups: IObservable<ViewElementGroup[]> = this._groups;\n\tpublic readonly currentGroup: IObservable<ViewElementGroup | undefined>\n\t\t= this._currentGroupIdx.map((idx, r) => this._groups.read(r)[idx]);\n\tpublic readonly currentGroupIndex: IObservable<number> = this._currentGroupIdx;\n\n\tpublic readonly currentElement: IObservable<ViewElement | undefined>\n\t\t= this._currentElementIdx.map((idx, r) => this.currentGroup.read(r)?.lines[idx]);\n\n\tconstructor(\n\t\tprivate readonly _diffs: IObservable<DetailedLineRangeMapping[] | undefined>,\n\t\tprivate readonly _models: IAccessibleDiffViewerModel,\n\t\tprivate readonly _setVisible: (visible: boolean, tx: ITransaction | undefined) => void,\n\t\tpublic readonly canClose: IObservable<boolean>,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update groups */\n\t\t\tconst diffs = this._diffs.read(reader);\n\t\t\tif (!diffs) {\n\t\t\t\tthis._groups.set([], undefined);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst groups = computeViewElementGroups(\n\t\t\t\tdiffs,\n\t\t\t\tthis._models.getOriginalModel().getLineCount(),\n\t\t\t\tthis._models.getModifiedModel().getLineCount()\n\t\t\t);\n\n\t\t\ttransaction(tx => {\n\t\t\t\tconst p = this._models.getModifiedPosition();\n\t\t\t\tif (p) {\n\t\t\t\t\tconst nextGroup = groups.findIndex(g => p?.lineNumber < g.range.modified.endLineNumberExclusive);\n\t\t\t\t\tif (nextGroup !== -1) {\n\t\t\t\t\t\tthis._currentGroupIdx.set(nextGroup, tx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._groups.set(groups, tx);\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description play audio-cue for diff */\n\t\t\tconst currentViewItem = this.currentElement.read(reader);\n\t\t\tif (currentViewItem?.type === LineType.Deleted) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'accessibleDiffViewer.currentElementChanged' });\n\t\t\t} else if (currentViewItem?.type === LineType.Added) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'accessibleDiffViewer.currentElementChanged' });\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description select lines in editor */\n\t\t\t// This ensures editor commands (like revert/stage) work\n\t\t\tconst currentViewItem = this.currentElement.read(reader);\n\t\t\tif (currentViewItem && currentViewItem.type !== LineType.Header) {\n\t\t\t\tconst lineNumber = currentViewItem.modifiedLineNumber ?? currentViewItem.diff.modified.startLineNumber;\n\t\t\t\tthis._models.modifiedSetSelection(Range.fromPositions(new Position(lineNumber, 1)));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _goToGroupDelta(delta: number, tx?: ITransaction): void {\n\t\tconst groups = this.groups.get();\n\t\tif (!groups || groups.length <= 1) { return; }\n\t\tsubtransaction(tx, tx => {\n\t\t\tthis._currentGroupIdx.set(OffsetRange.ofLength(groups.length).clipCyclic(this._currentGroupIdx.get() + delta), tx);\n\t\t\tthis._currentElementIdx.set(0, tx);\n\t\t});\n\t}\n\n\tnextGroup(tx?: ITransaction): void { this._goToGroupDelta(1, tx); }\n\tpreviousGroup(tx?: ITransaction): void { this._goToGroupDelta(-1, tx); }\n\n\tprivate _goToLineDelta(delta: number): void {\n\t\tconst group = this.currentGroup.get();\n\t\tif (!group || group.lines.length <= 1) { return; }\n\t\ttransaction(tx => {\n\t\t\tthis._currentElementIdx.set(OffsetRange.ofLength(group.lines.length).clip(this._currentElementIdx.get() + delta), tx);\n\t\t});\n\t}\n\n\tgoToNextLine(): void { this._goToLineDelta(1); }\n\tgoToPreviousLine(): void { this._goToLineDelta(-1); }\n\n\tgoToLine(line: ViewElement): void {\n\t\tconst group = this.currentGroup.get();\n\t\tif (!group) { return; }\n\t\tconst idx = group.lines.indexOf(line);\n\t\tif (idx === -1) { return; }\n\t\ttransaction(tx => {\n\t\t\tthis._currentElementIdx.set(idx, tx);\n\t\t});\n\t}\n\n\trevealCurrentElementInEditor(): void {\n\t\tif (!this.canClose.get()) { return; }\n\t\tthis._setVisible(false, undefined);\n\n\t\tconst curElem = this.currentElement.get();\n\t\tif (curElem) {\n\t\t\tif (curElem.type === LineType.Deleted) {\n\t\t\t\tthis._models.originalReveal(Range.fromPositions(new Position(curElem.originalLineNumber, 1)));\n\t\t\t} else {\n\t\t\t\tthis._models.modifiedReveal(\n\t\t\t\t\tcurElem.type !== LineType.Header\n\t\t\t\t\t\t? Range.fromPositions(new Position(curElem.modifiedLineNumber, 1))\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tclose(): void {\n\t\tif (!this.canClose.get()) { return; }\n\t\tthis._setVisible(false, undefined);\n\t\tthis._models.modifiedFocus();\n\t}\n}\n\n\nconst viewElementGroupLineMargin = 3;\n\nfunction computeViewElementGroups(diffs: DetailedLineRangeMapping[], originalLineCount: number, modifiedLineCount: number): ViewElementGroup[] {\n\tconst result: ViewElementGroup[] = [];\n\n\tfor (const g of groupAdjacentBy(diffs, (a, b) => (b.modified.startLineNumber - a.modified.endLineNumberExclusive < 2 * viewElementGroupLineMargin))) {\n\t\tconst viewElements: ViewElement[] = [];\n\t\tviewElements.push(new HeaderViewElement());\n\n\t\tconst origFullRange = new LineRange(\n\t\t\tMath.max(1, g[0].original.startLineNumber - viewElementGroupLineMargin),\n\t\t\tMath.min(g[g.length - 1].original.endLineNumberExclusive + viewElementGroupLineMargin, originalLineCount + 1)\n\t\t);\n\t\tconst modifiedFullRange = new LineRange(\n\t\t\tMath.max(1, g[0].modified.startLineNumber - viewElementGroupLineMargin),\n\t\t\tMath.min(g[g.length - 1].modified.endLineNumberExclusive + viewElementGroupLineMargin, modifiedLineCount + 1)\n\t\t);\n\n\t\tforEachAdjacent(g, (a, b) => {\n\t\t\tconst origRange = new LineRange(a ? a.original.endLineNumberExclusive : origFullRange.startLineNumber, b ? b.original.startLineNumber : origFullRange.endLineNumberExclusive);\n\t\t\tconst modifiedRange = new LineRange(a ? a.modified.endLineNumberExclusive : modifiedFullRange.startLineNumber, b ? b.modified.startLineNumber : modifiedFullRange.endLineNumberExclusive);\n\n\t\t\torigRange.forEach(origLineNumber => {\n\t\t\t\tviewElements.push(new UnchangedLineViewElement(origLineNumber, modifiedRange.startLineNumber + (origLineNumber - origRange.startLineNumber)));\n\t\t\t});\n\n\t\t\tif (b) {\n\t\t\t\tb.original.forEach(origLineNumber => {\n\t\t\t\t\tviewElements.push(new DeletedLineViewElement(b, origLineNumber));\n\t\t\t\t});\n\t\t\t\tb.modified.forEach(modifiedLineNumber => {\n\t\t\t\t\tviewElements.push(new AddedLineViewElement(b, modifiedLineNumber));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tconst modifiedRange = g[0].modified.join(g[g.length - 1].modified);\n\t\tconst originalRange = g[0].original.join(g[g.length - 1].original);\n\n\t\tresult.push(new ViewElementGroup(new LineRangeMapping(modifiedRange, originalRange), viewElements));\n\t}\n\treturn result;\n}\n\nenum LineType {\n\tHeader,\n\tUnchanged,\n\tDeleted,\n\tAdded,\n}\n\nclass ViewElementGroup {\n\tconstructor(\n\t\tpublic readonly range: LineRangeMapping,\n\t\tpublic readonly lines: readonly ViewElement[],\n\t) { }\n}\n\ntype ViewElement = HeaderViewElement | UnchangedLineViewElement | DeletedLineViewElement | AddedLineViewElement;\n\nclass HeaderViewElement {\n\tpublic readonly type = LineType.Header;\n}\n\nclass DeletedLineViewElement {\n\tpublic readonly type = LineType.Deleted;\n\n\tpublic readonly modifiedLineNumber = undefined;\n\n\tconstructor(\n\t\tpublic readonly diff: DetailedLineRangeMapping,\n\t\tpublic readonly originalLineNumber: number,\n\t) {\n\t}\n}\n\nclass AddedLineViewElement {\n\tpublic readonly type = LineType.Added;\n\n\tpublic readonly originalLineNumber = undefined;\n\n\tconstructor(\n\t\tpublic readonly diff: DetailedLineRangeMapping,\n\t\tpublic readonly modifiedLineNumber: number,\n\t) {\n\t}\n}\n\nclass UnchangedLineViewElement {\n\tpublic readonly type = LineType.Unchanged;\n\tconstructor(\n\t\tpublic readonly originalLineNumber: number,\n\t\tpublic readonly modifiedLineNumber: number,\n\t) {\n\t}\n}\n\nclass View extends Disposable {\n\tpublic readonly domNode: HTMLElement;\n\tprivate readonly _content: HTMLElement;\n\tprivate readonly _scrollbar: DomScrollableElement;\n\tprivate readonly _actionBar: ActionBar;\n\n\tconstructor(\n\t\tprivate readonly _element: HTMLElement,\n\t\tprivate readonly _model: ViewModel,\n\t\tprivate readonly _width: IObservable<number>,\n\t\tprivate readonly _height: IObservable<number>,\n\t\tprivate readonly _models: IAccessibleDiffViewerModel,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\n\t\tthis.domNode = this._element;\n\t\tthis.domNode.className = 'monaco-component diff-review monaco-editor-background';\n\n\t\tconst actionBarContainer = document.createElement('div');\n\t\tactionBarContainer.className = 'diff-review-actions';\n\t\tthis._actionBar = this._register(new ActionBar(\n\t\t\tactionBarContainer\n\t\t));\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update actions */\n\t\t\tthis._actionBar.clear();\n\t\t\tif (this._model.canClose.read(reader)) {\n\t\t\t\tthis._actionBar.push(new Action(\n\t\t\t\t\t'diffreview.close',\n\t\t\t\t\tlocalize('label.close', \"Close\"),\n\t\t\t\t\t'close-diff-review ' + ThemeIcon.asClassName(accessibleDiffViewerCloseIcon),\n\t\t\t\t\ttrue,\n\t\t\t\t\tasync () => _model.close()\n\t\t\t\t), { label: false, icon: true });\n\t\t\t}\n\t\t}));\n\n\t\tthis._content = document.createElement('div');\n\t\tthis._content.className = 'diff-review-content';\n\t\tthis._content.setAttribute('role', 'code');\n\t\tthis._scrollbar = this._register(new DomScrollableElement(this._content, {}));\n\t\treset(this.domNode, this._scrollbar.getDomNode(), actionBarContainer);\n\n\t\tthis._register(autorun(r => {\n\t\t\tthis._height.read(r);\n\t\t\tthis._width.read(r);\n\t\t\tthis._scrollbar.scanDomNode();\n\t\t}));\n\n\t\tthis._register(toDisposable(() => { reset(this.domNode); }));\n\n\t\tthis._register(applyStyle(this.domNode, { width: this._width, height: this._height }));\n\t\tthis._register(applyStyle(this._content, { width: this._width, height: this._height }));\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description render */\n\t\t\tthis._model.currentGroup.read(reader);\n\t\t\tthis._render(store);\n\t\t}));\n\n\t\t// TODO@hediet use commands\n\t\tthis._register(addStandardDisposableListener(this.domNode, 'keydown', (e) => {\n\t\t\tif (\n\t\t\t\te.equals(KeyCode.DownArrow)\n\t\t\t\t|| e.equals(KeyMod.CtrlCmd | KeyCode.DownArrow)\n\t\t\t\t|| e.equals(KeyMod.Alt | KeyCode.DownArrow)\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis._model.goToNextLine();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\te.equals(KeyCode.UpArrow)\n\t\t\t\t|| e.equals(KeyMod.CtrlCmd | KeyCode.UpArrow)\n\t\t\t\t|| e.equals(KeyMod.Alt | KeyCode.UpArrow)\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis._model.goToPreviousLine();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\te.equals(KeyCode.Escape)\n\t\t\t\t|| e.equals(KeyMod.CtrlCmd | KeyCode.Escape)\n\t\t\t\t|| e.equals(KeyMod.Alt | KeyCode.Escape)\n\t\t\t\t|| e.equals(KeyMod.Shift | KeyCode.Escape)\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis._model.close();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\te.equals(KeyCode.Space)\n\t\t\t\t|| e.equals(KeyCode.Enter)\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis._model.revealCurrentElementInEditor();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _render(store: DisposableStore): void {\n\t\tconst originalOptions = this._models.getOriginalOptions();\n\t\tconst modifiedOptions = this._models.getModifiedOptions();\n\n\t\tconst container = document.createElement('div');\n\t\tcontainer.className = 'diff-review-table';\n\t\tcontainer.setAttribute('role', 'list');\n\t\tcontainer.setAttribute('aria-label', localize('ariaLabel', 'Accessible Diff Viewer. Use arrow up and down to navigate.'));\n\t\tapplyFontInfo(container, modifiedOptions.get(EditorOption.fontInfo));\n\n\t\treset(this._content, container);\n\n\t\tconst originalModel = this._models.getOriginalModel();\n\t\tconst modifiedModel = this._models.getModifiedModel();\n\t\tif (!originalModel || !modifiedModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalModelOpts = originalModel.getOptions();\n\t\tconst modifiedModelOpts = modifiedModel.getOptions();\n\n\t\tconst lineHeight = modifiedOptions.get(EditorOption.lineHeight);\n\t\tconst group = this._model.currentGroup.get();\n\t\tfor (const viewItem of group?.lines || []) {\n\t\t\tif (!group) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet row: HTMLDivElement;\n\n\t\t\tif (viewItem.type === LineType.Header) {\n\n\t\t\t\tconst header = document.createElement('div');\n\t\t\t\theader.className = 'diff-review-row';\n\t\t\t\theader.setAttribute('role', 'listitem');\n\n\t\t\t\tconst r = group.range;\n\t\t\t\tconst diffIndex = this._model.currentGroupIndex.get();\n\t\t\t\tconst diffsLength = this._model.groups.get().length;\n\t\t\t\tconst getAriaLines = (lines: number) =>\n\t\t\t\t\tlines === 0 ? localize('no_lines_changed', \"no lines changed\")\n\t\t\t\t\t\t: lines === 1 ? localize('one_line_changed', \"1 line changed\")\n\t\t\t\t\t\t\t: localize('more_lines_changed', \"{0} lines changed\", lines);\n\n\t\t\t\tconst originalChangedLinesCntAria = getAriaLines(r.original.length);\n\t\t\t\tconst modifiedChangedLinesCntAria = getAriaLines(r.modified.length);\n\t\t\t\theader.setAttribute('aria-label', localize({\n\t\t\t\t\tkey: 'header',\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'This is the ARIA label for a git diff header.',\n\t\t\t\t\t\t'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n\t\t\t\t\t\t'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n\t\t\t\t\t\t'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n\t\t\t\t\t\t'Variables 2 and 4 will be numbers (a line number).',\n\t\t\t\t\t\t'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n\t\t\t\t\t]\n\t\t\t\t}, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\",\n\t\t\t\t\t(diffIndex + 1),\n\t\t\t\t\tdiffsLength,\n\t\t\t\t\tr.original.startLineNumber,\n\t\t\t\t\toriginalChangedLinesCntAria,\n\t\t\t\t\tr.modified.startLineNumber,\n\t\t\t\t\tmodifiedChangedLinesCntAria\n\t\t\t\t));\n\n\t\t\t\tconst cell = document.createElement('div');\n\t\t\t\tcell.className = 'diff-review-cell diff-review-summary';\n\t\t\t\t// e.g.: `1/10: @@ -504,7 +517,7 @@`\n\t\t\t\tcell.appendChild(document.createTextNode(`${diffIndex + 1}/${diffsLength}: @@ -${r.original.startLineNumber},${r.original.length} +${r.modified.startLineNumber},${r.modified.length} @@`));\n\t\t\t\theader.appendChild(cell);\n\n\t\t\t\trow = header;\n\t\t\t} else {\n\t\t\t\trow = this._createRow(viewItem, lineHeight,\n\t\t\t\t\tthis._width.get(), originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tcontainer.appendChild(row);\n\n\t\t\tconst isSelectedObs = derived(reader => /** @description isSelected */ this._model.currentElement.read(reader) === viewItem);\n\n\t\t\tstore.add(autorun(reader => {\n\t\t\t\t/** @description update tab index */\n\t\t\t\tconst isSelected = isSelectedObs.read(reader);\n\t\t\t\trow.tabIndex = isSelected ? 0 : -1;\n\t\t\t\tif (isSelected) {\n\t\t\t\t\trow.focus();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tstore.add(addDisposableListener(row, 'focus', () => {\n\t\t\t\tthis._model.goToLine(viewItem);\n\t\t\t}));\n\t\t}\n\n\t\tthis._scrollbar.scanDomNode();\n\t}\n\n\tprivate _createRow(\n\t\titem: DeletedLineViewElement | AddedLineViewElement | UnchangedLineViewElement,\n\t\tlineHeight: number,\n\t\twidth: number,\n\t\toriginalOptions: IComputedEditorOptions, originalModel: ITextModel, originalModelOpts: TextModelResolvedOptions,\n\t\tmodifiedOptions: IComputedEditorOptions, modifiedModel: ITextModel, modifiedModelOpts: TextModelResolvedOptions,\n\t): HTMLDivElement {\n\t\tconst originalLayoutInfo = originalOptions.get(EditorOption.layoutInfo);\n\t\tconst originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n\n\t\tconst modifiedLayoutInfo = modifiedOptions.get(EditorOption.layoutInfo);\n\t\tconst modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n\n\t\tlet rowClassName: string = 'diff-review-row';\n\t\tlet lineNumbersExtraClassName: string = '';\n\t\tconst spacerClassName: string = 'diff-review-spacer';\n\t\tlet spacerIcon: ThemeIcon | null = null;\n\t\tswitch (item.type) {\n\t\t\tcase LineType.Added:\n\t\t\t\trowClassName = 'diff-review-row line-insert';\n\t\t\t\tlineNumbersExtraClassName = ' char-insert';\n\t\t\t\tspacerIcon = accessibleDiffViewerInsertIcon;\n\t\t\t\tbreak;\n\t\t\tcase LineType.Deleted:\n\t\t\t\trowClassName = 'diff-review-row line-delete';\n\t\t\t\tlineNumbersExtraClassName = ' char-delete';\n\t\t\t\tspacerIcon = accessibleDiffViewerRemoveIcon;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst row = document.createElement('div');\n\t\trow.style.minWidth = width + 'px';\n\t\trow.className = rowClassName;\n\t\trow.setAttribute('role', 'listitem');\n\t\trow.ariaLevel = '';\n\n\t\tconst cell = document.createElement('div');\n\t\tcell.className = 'diff-review-cell';\n\t\tcell.style.height = `${lineHeight}px`;\n\t\trow.appendChild(cell);\n\n\t\tconst originalLineNumber = document.createElement('span');\n\t\toriginalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n\t\toriginalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n\t\toriginalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n\t\tif (item.originalLineNumber !== undefined) {\n\t\t\toriginalLineNumber.appendChild(document.createTextNode(String(item.originalLineNumber)));\n\t\t} else {\n\t\t\toriginalLineNumber.innerText = '\\u00a0';\n\t\t}\n\t\tcell.appendChild(originalLineNumber);\n\n\t\tconst modifiedLineNumber = document.createElement('span');\n\t\tmodifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n\t\tmodifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n\t\tmodifiedLineNumber.style.paddingRight = '10px';\n\t\tmodifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n\t\tif (item.modifiedLineNumber !== undefined) {\n\t\t\tmodifiedLineNumber.appendChild(document.createTextNode(String(item.modifiedLineNumber)));\n\t\t} else {\n\t\t\tmodifiedLineNumber.innerText = '\\u00a0';\n\t\t}\n\t\tcell.appendChild(modifiedLineNumber);\n\n\t\tconst spacer = document.createElement('span');\n\t\tspacer.className = spacerClassName;\n\n\t\tif (spacerIcon) {\n\t\t\tconst spacerCodicon = document.createElement('span');\n\t\t\tspacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n\t\t\tspacerCodicon.innerText = '\\u00a0\\u00a0';\n\t\t\tspacer.appendChild(spacerCodicon);\n\t\t} else {\n\t\t\tspacer.innerText = '\\u00a0\\u00a0';\n\t\t}\n\t\tcell.appendChild(spacer);\n\n\t\tlet lineContent: string;\n\t\tif (item.modifiedLineNumber !== undefined) {\n\t\t\tlet html: string | TrustedHTML = this._getLineHtml(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, item.modifiedLineNumber, this._languageService.languageIdCodec);\n\t\t\tif (AccessibleDiffViewer._ttPolicy) {\n\t\t\t\thtml = AccessibleDiffViewer._ttPolicy.createHTML(html as string);\n\t\t\t}\n\t\t\tcell.insertAdjacentHTML('beforeend', html as string);\n\t\t\tlineContent = modifiedModel.getLineContent(item.modifiedLineNumber);\n\t\t} else {\n\t\t\tlet html: string | TrustedHTML = this._getLineHtml(originalModel, originalOptions, originalModelOpts.tabSize, item.originalLineNumber, this._languageService.languageIdCodec);\n\t\t\tif (AccessibleDiffViewer._ttPolicy) {\n\t\t\t\thtml = AccessibleDiffViewer._ttPolicy.createHTML(html as string);\n\t\t\t}\n\t\t\tcell.insertAdjacentHTML('beforeend', html as string);\n\t\t\tlineContent = originalModel.getLineContent(item.originalLineNumber);\n\t\t}\n\n\t\tif (lineContent.length === 0) {\n\t\t\tlineContent = localize('blankLine', \"blank\");\n\t\t}\n\n\t\tlet ariaLabel: string = '';\n\t\tswitch (item.type) {\n\t\t\tcase LineType.Unchanged:\n\t\t\t\tif (item.originalLineNumber === item.modifiedLineNumber) {\n\t\t\t\t\tariaLabel = localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, item.originalLineNumber);\n\t\t\t\t} else {\n\t\t\t\t\tariaLabel = localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, item.originalLineNumber, item.modifiedLineNumber);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LineType.Added:\n\t\t\t\tariaLabel = localize('insertLine', \"+ {0} modified line {1}\", lineContent, item.modifiedLineNumber);\n\t\t\t\tbreak;\n\t\t\tcase LineType.Deleted:\n\t\t\t\tariaLabel = localize('deleteLine', \"- {0} original line {1}\", lineContent, item.originalLineNumber);\n\t\t\t\tbreak;\n\t\t}\n\t\trow.setAttribute('aria-label', ariaLabel);\n\n\t\treturn row;\n\t}\n\n\tprivate _getLineHtml(model: ITextModel, options: IComputedEditorOptions, tabSize: number, lineNumber: number, languageIdCodec: ILanguageIdCodec): string {\n\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n\t\tconst isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n\t\tconst containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n\t\tconst r = renderViewLine2(new RenderLineInput(\n\t\t\t(fontInfo.isMonospace && !options.get(EditorOption.disableMonospaceOptimizations)),\n\t\t\tfontInfo.canUseHalfwidthRightwardsArrow,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\tisBasicASCII,\n\t\t\tcontainsRTL,\n\t\t\t0,\n\t\t\tlineTokens,\n\t\t\t[],\n\t\t\ttabSize,\n\t\t\t0,\n\t\t\tfontInfo.spaceWidth,\n\t\t\tfontInfo.middotWidth,\n\t\t\tfontInfo.wsmiddotWidth,\n\t\t\toptions.get(EditorOption.stopRenderingLineAfter),\n\t\t\toptions.get(EditorOption.renderWhitespace),\n\t\t\toptions.get(EditorOption.renderControlCharacters),\n\t\t\toptions.get(EditorOption.fontLigatures) !== EditorFontLigatures.OFF,\n\t\t\tnull\n\t\t));\n\n\t\treturn r.html;\n\t}\n}\n\nexport class AccessibleDiffViewerModelFromEditors implements IAccessibleDiffViewerModel {\n\tconstructor(private readonly editors: DiffEditorEditors) { }\n\n\tgetOriginalModel(): ITextModel {\n\t\treturn this.editors.original.getModel()!;\n\t}\n\n\tgetOriginalOptions(): IComputedEditorOptions {\n\t\treturn this.editors.original.getOptions();\n\t}\n\n\toriginalReveal(range: Range): void {\n\t\tthis.editors.original.revealRange(range);\n\t\tthis.editors.original.setSelection(range);\n\t\tthis.editors.original.focus();\n\t}\n\n\tgetModifiedModel(): ITextModel {\n\t\treturn this.editors.modified.getModel()!;\n\t}\n\n\tgetModifiedOptions(): IComputedEditorOptions {\n\t\treturn this.editors.modified.getOptions();\n\t}\n\n\tmodifiedReveal(range?: Range | undefined): void {\n\t\tif (range) {\n\t\t\tthis.editors.modified.revealRange(range);\n\t\t\tthis.editors.modified.setSelection(range);\n\t\t}\n\t\tthis.editors.modified.focus();\n\t}\n\n\tmodifiedSetSelection(range: Range): void {\n\t\tthis.editors.modified.setSelection(range);\n\t}\n\n\tmodifiedFocus(): void {\n\t\tthis.editors.modified.focus();\n\t}\n\n\tgetModifiedPosition(): Position | undefined {\n\t\treturn this.editors.modified.getPosition() ?? undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["tx", "modifiedRange", "LineType"]
}
