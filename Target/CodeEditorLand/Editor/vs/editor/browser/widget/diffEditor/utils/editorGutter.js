import{h as _,reset as L}from"../../../../../../vs/base/browser/dom.js";import{Disposable as y,toDisposable as S}from"../../../../../../vs/base/common/lifecycle.js";import{autorun as c,observableFromEvent as u,observableSignal as D,observableSignalFromEvent as p,observableValue as R,transaction as v}from"../../../../../../vs/base/common/observable.js";import"../../../../../../vs/editor/browser/widget/codeEditor/codeEditorWidget.js";import{LineRange as T}from"../../../../../../vs/editor/common/core/lineRange.js";import{OffsetRange as I}from"../../../../../../vs/editor/common/core/offsetRange.js";class W extends y{constructor(e,r,l){super();this._editor=e;this._domNode=r;this.itemProvider=l;this._domNode.className="gutter monaco-editor";const a=this._domNode.appendChild(_("div.scroll-decoration",{role:"presentation",ariaHidden:"true",style:{width:"100%"}}).root),n=new ResizeObserver(()=>{v(i=>{this.domNodeSizeChanged.trigger(i)})});n.observe(this._domNode),this._register(S(()=>n.disconnect())),this._register(c(i=>{a.className=this.isScrollTopZero.read(i)?"":"scroll-decoration"})),this._register(c(i=>this.render(i)))}scrollTop=u(this,this._editor.onDidScrollChange,e=>this._editor.getScrollTop());isScrollTopZero=this.scrollTop.map(e=>e===0);modelAttached=u(this,this._editor.onDidChangeModel,e=>this._editor.hasModel());editorOnDidChangeViewZones=p("onDidChangeViewZones",this._editor.onDidChangeViewZones);editorOnDidContentSizeChange=p("onDidContentSizeChange",this._editor.onDidContentSizeChange);domNodeSizeChanged=D("domNodeSizeChanged");dispose(){super.dispose(),L(this._domNode)}views=new Map;render(e){if(!this.modelAttached.read(e))return;this.domNodeSizeChanged.read(e),this.editorOnDidChangeViewZones.read(e),this.editorOnDidContentSizeChange.read(e);const r=this.scrollTop.read(e),l=this._editor.getVisibleRanges(),a=new Set(this.views.keys()),n=I.ofStartAndLength(0,this._domNode.clientHeight);if(!n.isEmpty)for(const i of l){const s=new T(i.startLineNumber,i.endLineNumber+1),w=this.itemProvider.getIntersectingGutterItems(s,e);v(N=>{for(const t of w){if(!t.range.intersect(s))continue;a.delete(t.id);let o=this.views.get(t.id);if(o)o.item.set(t,N);else{const m=document.createElement("div");this._domNode.appendChild(m);const h=R("item",t),C=this.itemProvider.createView(h,m);o=new V(h,C,m),this.views.set(t.id,o)}const d=t.range.startLineNumber<=this._editor.getModel().getLineCount()?this._editor.getTopForLineNumber(t.range.startLineNumber,!0)-r:this._editor.getBottomForLineNumber(t.range.startLineNumber-1,!1)-r,g=(t.range.endLineNumberExclusive===1?Math.max(d,this._editor.getTopForLineNumber(t.range.startLineNumber,!1)-r):Math.max(d,this._editor.getBottomForLineNumber(t.range.endLineNumberExclusive-1,!0)-r))-d;o.domNode.style.top=`${d}px`,o.domNode.style.height=`${g}px`,o.gutterItemView.layout(I.ofStartAndLength(d,g),n)}})}for(const i of a){const s=this.views.get(i);s.gutterItemView.dispose(),s.domNode.remove(),this.views.delete(i)}}}class V{constructor(f,e,r){this.item=f;this.gutterItemView=e;this.domNode=r}}export{W as EditorGutter};
