{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/diffEditor.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { AccessibleDiffViewerNext, AccessibleDiffViewerPrev, CollapseAllUnchangedRegions, ExitCompareMove, RevertHunkOrSelection, ShowAllUnchangedRegions, SwitchSide, ToggleCollapseUnchangedRegions, ToggleShowMovedCodeBlocks, ToggleUseInlineViewWhenSpaceIsLimited } from './commands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyEqualsExpr, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport './registrations.contribution.js';\n\nregisterAction2(ToggleCollapseUnchangedRegions);\nregisterAction2(ToggleShowMovedCodeBlocks);\nregisterAction2(ToggleUseInlineViewWhenSpaceIsLimited);\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: new ToggleUseInlineViewWhenSpaceIsLimited().desc.id,\n\t\ttitle: localize('useInlineViewWhenSpaceIsLimited', \"Use Inline View When Space Is Limited\"),\n\t\ttoggled: ContextKeyExpr.has('config.diffEditor.useInlineViewWhenSpaceIsLimited'),\n\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t},\n\torder: 11,\n\tgroup: '1_diff',\n\twhen: ContextKeyExpr.and(\n\t\tEditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached,\n\t\tContextKeyExpr.has('isInDiffEditor'),\n\t),\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: new ToggleShowMovedCodeBlocks().desc.id,\n\t\ttitle: localize('showMoves', \"Show Moved Code Blocks\"),\n\t\ticon: Codicon.move,\n\t\ttoggled: ContextKeyEqualsExpr.create('config.diffEditor.experimental.showMoves', true),\n\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t},\n\torder: 10,\n\tgroup: '1_diff',\n\twhen: ContextKeyExpr.has('isInDiffEditor'),\n});\n\nregisterAction2(RevertHunkOrSelection);\n\nfor (const ctx of [\n\t{ icon: Codicon.arrowRight, key: EditorContextKeys.diffEditorInlineMode.toNegated() },\n\t{ icon: Codicon.discard, key: EditorContextKeys.diffEditorInlineMode }\n]) {\n\tMenuRegistry.appendMenuItem(MenuId.DiffEditorHunkToolbar, {\n\t\tcommand: {\n\t\t\tid: new RevertHunkOrSelection().desc.id,\n\t\t\ttitle: localize('revertHunk', \"Revert Block\"),\n\t\t\ticon: ctx.icon,\n\t\t},\n\t\twhen: ContextKeyExpr.and(EditorContextKeys.diffEditorModifiedWritable, ctx.key),\n\t\torder: 5,\n\t\tgroup: 'primary',\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.DiffEditorSelectionToolbar, {\n\t\tcommand: {\n\t\t\tid: new RevertHunkOrSelection().desc.id,\n\t\t\ttitle: localize('revertSelection', \"Revert Selection\"),\n\t\t\ticon: ctx.icon,\n\t\t},\n\t\twhen: ContextKeyExpr.and(EditorContextKeys.diffEditorModifiedWritable, ctx.key),\n\t\torder: 5,\n\t\tgroup: 'primary',\n\t});\n\n}\n\nregisterAction2(SwitchSide);\nregisterAction2(ExitCompareMove);\nregisterAction2(CollapseAllUnchangedRegions);\nregisterAction2(ShowAllUnchangedRegions);\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: AccessibleDiffViewerNext.id,\n\t\ttitle: localize('Open Accessible Diff Viewer', \"Open Accessible Diff Viewer\"),\n\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t},\n\torder: 10,\n\tgroup: '2_diff',\n\twhen: ContextKeyExpr.and(\n\t\tEditorContextKeys.accessibleDiffViewerVisible.negate(),\n\t\tContextKeyExpr.has('isInDiffEditor'),\n\t),\n});\n\n\nCommandsRegistry.registerCommandAlias('editor.action.diffReview.next', AccessibleDiffViewerNext.id);\nregisterAction2(AccessibleDiffViewerNext);\n\nCommandsRegistry.registerCommandAlias('editor.action.diffReview.prev', AccessibleDiffViewerPrev.id);\nregisterAction2(AccessibleDiffViewerPrev);\n"],
  "mappings": "AAKA,SAAS,eAAe;AACxB,SAAS,0BAA0B,0BAA0B,6BAA6B,iBAAiB,uBAAuB,yBAAyB,YAAY,gCAAgC,2BAA2B,6CAA6C;AAC/Q,SAAS,yBAAyB;AAClC,SAAS,gBAAgB;AACzB,SAAS,QAAQ,cAAc,uBAAuB;AACtD,SAAS,wBAAwB;AACjC,SAAS,sBAAsB,sBAAsB;AACrD,OAAO;AAEP,gBAAgB,8BAA8B;AAC9C,gBAAgB,yBAAyB;AACzC,gBAAgB,qCAAqC;AAErD,aAAa,eAAe,OAAO,aAAa;AAAA,EAC/C,SAAS;AAAA,IACR,IAAI,IAAI,sCAAsC,EAAE,KAAK;AAAA,IACrD,OAAO,SAAS,mCAAmC,uCAAuC;AAAA,IAC1F,SAAS,eAAe,IAAI,mDAAmD;AAAA,IAC/E,cAAc,eAAe,IAAI,gBAAgB;AAAA,EAClD;AAAA,EACA,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM,eAAe;AAAA,IACpB,kBAAkB;AAAA,IAClB,eAAe,IAAI,gBAAgB;AAAA,EACpC;AACD,CAAC;AAED,aAAa,eAAe,OAAO,aAAa;AAAA,EAC/C,SAAS;AAAA,IACR,IAAI,IAAI,0BAA0B,EAAE,KAAK;AAAA,IACzC,OAAO,SAAS,aAAa,wBAAwB;AAAA,IACrD,MAAM,QAAQ;AAAA,IACd,SAAS,qBAAqB,OAAO,4CAA4C,IAAI;AAAA,IACrF,cAAc,eAAe,IAAI,gBAAgB;AAAA,EAClD;AAAA,EACA,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM,eAAe,IAAI,gBAAgB;AAC1C,CAAC;AAED,gBAAgB,qBAAqB;AAErC,WAAW,OAAO;AAAA,EACjB,EAAE,MAAM,QAAQ,YAAY,KAAK,kBAAkB,qBAAqB,UAAU,EAAE;AAAA,EACpF,EAAE,MAAM,QAAQ,SAAS,KAAK,kBAAkB,qBAAqB;AACtE,GAAG;AACF,eAAa,eAAe,OAAO,uBAAuB;AAAA,IACzD,SAAS;AAAA,MACR,IAAI,IAAI,sBAAsB,EAAE,KAAK;AAAA,MACrC,OAAO,SAAS,cAAc,cAAc;AAAA,MAC5C,MAAM,IAAI;AAAA,IACX;AAAA,IACA,MAAM,eAAe,IAAI,kBAAkB,4BAA4B,IAAI,GAAG;AAAA,IAC9E,OAAO;AAAA,IACP,OAAO;AAAA,EACR,CAAC;AAED,eAAa,eAAe,OAAO,4BAA4B;AAAA,IAC9D,SAAS;AAAA,MACR,IAAI,IAAI,sBAAsB,EAAE,KAAK;AAAA,MACrC,OAAO,SAAS,mBAAmB,kBAAkB;AAAA,MACrD,MAAM,IAAI;AAAA,IACX;AAAA,IACA,MAAM,eAAe,IAAI,kBAAkB,4BAA4B,IAAI,GAAG;AAAA,IAC9E,OAAO;AAAA,IACP,OAAO;AAAA,EACR,CAAC;AAEF;AAEA,gBAAgB,UAAU;AAC1B,gBAAgB,eAAe;AAC/B,gBAAgB,2BAA2B;AAC3C,gBAAgB,uBAAuB;AAEvC,aAAa,eAAe,OAAO,aAAa;AAAA,EAC/C,SAAS;AAAA,IACR,IAAI,yBAAyB;AAAA,IAC7B,OAAO,SAAS,+BAA+B,6BAA6B;AAAA,IAC5E,cAAc,eAAe,IAAI,gBAAgB;AAAA,EAClD;AAAA,EACA,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM,eAAe;AAAA,IACpB,kBAAkB,4BAA4B,OAAO;AAAA,IACrD,eAAe,IAAI,gBAAgB;AAAA,EACpC;AACD,CAAC;AAGD,iBAAiB,qBAAqB,iCAAiC,yBAAyB,EAAE;AAClG,gBAAgB,wBAAwB;AAExC,iBAAiB,qBAAqB,iCAAiC,yBAAyB,EAAE;AAClG,gBAAgB,wBAAwB;",
  "names": []
}
