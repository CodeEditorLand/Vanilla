{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/utils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDimension } from \"../../../../base/browser/dom.js\";\nimport { findLast } from \"../../../../base/common/arraysFind.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttype IReference,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\ttype ISettableObservable,\n\tautorun,\n\tautorunHandleChanges,\n\tautorunOpts,\n\tautorunWithStore,\n\tobservableValue,\n\ttransaction,\n} from \"../../../../base/common/observable.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { TextLength } from \"../../../common/core/textLength.js\";\nimport type { DetailedLineRangeMapping } from \"../../../common/diff/rangeMapping.js\";\nimport type { IModelDeltaDecoration } from \"../../../common/model.js\";\nimport { ElementSizeObserver } from \"../../config/elementSizeObserver.js\";\nimport type {\n\tICodeEditor,\n\tIOverlayWidget,\n\tIViewZone,\n} from \"../../editorBrowser.js\";\n\nexport function joinCombine<T>(\n\tarr1: readonly T[],\n\tarr2: readonly T[],\n\tkeySelector: (val: T) => number,\n\tcombine: (v1: T, v2: T) => T,\n): readonly T[] {\n\tif (arr1.length === 0) {\n\t\treturn arr2;\n\t}\n\tif (arr2.length === 0) {\n\t\treturn arr1;\n\t}\n\n\tconst result: T[] = [];\n\tlet i = 0;\n\tlet j = 0;\n\twhile (i < arr1.length && j < arr2.length) {\n\t\tconst val1 = arr1[i];\n\t\tconst val2 = arr2[j];\n\t\tconst key1 = keySelector(val1);\n\t\tconst key2 = keySelector(val2);\n\n\t\tif (key1 < key2) {\n\t\t\tresult.push(val1);\n\t\t\ti++;\n\t\t} else if (key1 > key2) {\n\t\t\tresult.push(val2);\n\t\t\tj++;\n\t\t} else {\n\t\t\tresult.push(combine(val1, val2));\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < arr1.length) {\n\t\tresult.push(arr1[i]);\n\t\ti++;\n\t}\n\twhile (j < arr2.length) {\n\t\tresult.push(arr2[j]);\n\t\tj++;\n\t}\n\treturn result;\n}\n\n// TODO make utility\nexport function applyObservableDecorations(\n\teditor: ICodeEditor,\n\tdecorations: IObservable<IModelDeltaDecoration[]>,\n): IDisposable {\n\tconst d = new DisposableStore();\n\tconst decorationsCollection = editor.createDecorationsCollection();\n\td.add(\n\t\tautorunOpts(\n\t\t\t{\n\t\t\t\tdebugName: () =>\n\t\t\t\t\t`Apply decorations from ${decorations.debugName}`,\n\t\t\t},\n\t\t\t(reader) => {\n\t\t\t\tconst d = decorations.read(reader);\n\t\t\t\tdecorationsCollection.set(d);\n\t\t\t},\n\t\t),\n\t);\n\td.add({\n\t\tdispose: () => {\n\t\t\tdecorationsCollection.clear();\n\t\t},\n\t});\n\treturn d;\n}\n\nexport function appendRemoveOnDispose(parent: HTMLElement, child: HTMLElement) {\n\tparent.appendChild(child);\n\treturn toDisposable(() => {\n\t\tchild.remove();\n\t});\n}\n\nexport function prependRemoveOnDispose(\n\tparent: HTMLElement,\n\tchild: HTMLElement,\n) {\n\tparent.prepend(child);\n\treturn toDisposable(() => {\n\t\tchild.remove();\n\t});\n}\n\nexport class ObservableElementSizeObserver extends Disposable {\n\tprivate readonly elementSizeObserver: ElementSizeObserver;\n\n\tprivate readonly _width: ISettableObservable<number>;\n\tpublic get width(): IObservable<number> {\n\t\treturn this._width;\n\t}\n\n\tprivate readonly _height: ISettableObservable<number>;\n\tpublic get height(): IObservable<number> {\n\t\treturn this._height;\n\t}\n\n\tprivate _automaticLayout = false;\n\tpublic get automaticLayout(): boolean {\n\t\treturn this._automaticLayout;\n\t}\n\n\tconstructor(\n\t\telement: HTMLElement | null,\n\t\tdimension: IDimension | undefined,\n\t) {\n\t\tsuper();\n\n\t\tthis.elementSizeObserver = this._register(\n\t\t\tnew ElementSizeObserver(element, dimension),\n\t\t);\n\t\tthis._width = observableValue(\n\t\t\tthis,\n\t\t\tthis.elementSizeObserver.getWidth(),\n\t\t);\n\t\tthis._height = observableValue(\n\t\t\tthis,\n\t\t\tthis.elementSizeObserver.getHeight(),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.elementSizeObserver.onDidChange((e) =>\n\t\t\t\ttransaction((tx) => {\n\t\t\t\t\t/** @description Set width/height from elementSizeObserver */\n\t\t\t\t\tthis._width.set(this.elementSizeObserver.getWidth(), tx);\n\t\t\t\t\tthis._height.set(this.elementSizeObserver.getHeight(), tx);\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic observe(dimension?: IDimension): void {\n\t\tthis.elementSizeObserver.observe(dimension);\n\t}\n\n\tpublic setAutomaticLayout(automaticLayout: boolean): void {\n\t\tthis._automaticLayout = automaticLayout;\n\t\tif (automaticLayout) {\n\t\t\tthis.elementSizeObserver.startObserving();\n\t\t} else {\n\t\t\tthis.elementSizeObserver.stopObserving();\n\t\t}\n\t}\n}\n\nexport function animatedObservable(\n\ttargetWindow: Window,\n\tbase: IObservable<number, boolean>,\n\tstore: DisposableStore,\n): IObservable<number> {\n\tlet targetVal = base.get();\n\tlet startVal = targetVal;\n\tlet curVal = targetVal;\n\tconst result = observableValue(\"animatedValue\", targetVal);\n\n\tlet animationStartMs = -1;\n\tconst durationMs = 300;\n\tlet animationFrame: number | undefined;\n\n\tstore.add(\n\t\tautorunHandleChanges(\n\t\t\t{\n\t\t\t\tcreateEmptyChangeSummary: () => ({ animate: false }),\n\t\t\t\thandleChange: (ctx, s) => {\n\t\t\t\t\tif (ctx.didChange(base)) {\n\t\t\t\t\t\ts.animate = s.animate || ctx.change;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t},\n\t\t\t(reader, s) => {\n\t\t\t\t/** @description update value */\n\t\t\t\tif (animationFrame !== undefined) {\n\t\t\t\t\ttargetWindow.cancelAnimationFrame(animationFrame);\n\t\t\t\t\tanimationFrame = undefined;\n\t\t\t\t}\n\n\t\t\t\tstartVal = curVal;\n\t\t\t\ttargetVal = base.read(reader);\n\t\t\t\tanimationStartMs = Date.now() - (s.animate ? 0 : durationMs);\n\n\t\t\t\tupdate();\n\t\t\t},\n\t\t),\n\t);\n\n\tfunction update() {\n\t\tconst passedMs = Date.now() - animationStartMs;\n\t\tcurVal = Math.floor(\n\t\t\teaseOutExpo(passedMs, startVal, targetVal - startVal, durationMs),\n\t\t);\n\n\t\tif (passedMs < durationMs) {\n\t\t\tanimationFrame = targetWindow.requestAnimationFrame(update);\n\t\t} else {\n\t\t\tcurVal = targetVal;\n\t\t}\n\n\t\tresult.set(curVal, undefined);\n\t}\n\n\treturn result;\n}\n\nfunction easeOutExpo(t: number, b: number, c: number, d: number): number {\n\treturn t === d ? b + c : c * (-Math.pow(2, (-10 * t) / d) + 1) + b;\n}\n\nexport function deepMerge<T extends {}>(source1: T, source2: Partial<T>): T {\n\tconst result = {} as T;\n\tfor (const key in source1) {\n\t\tresult[key] = source1[key];\n\t}\n\tfor (const key in source2) {\n\t\tconst source2Value = source2[key];\n\t\tif (\n\t\t\ttypeof result[key] === \"object\" &&\n\t\t\tsource2Value &&\n\t\t\ttypeof source2Value === \"object\"\n\t\t) {\n\t\t\tresult[key] = deepMerge<any>(result[key], source2Value);\n\t\t} else {\n\t\t\tresult[key] = source2Value as any;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport abstract class ViewZoneOverlayWidget extends Disposable {\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tviewZone: PlaceholderViewZone,\n\t\thtmlElement: HTMLElement,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(new ManagedOverlayWidget(editor, htmlElement));\n\t\tthis._register(\n\t\t\tapplyStyle(htmlElement, {\n\t\t\t\theight: viewZone.actualHeight,\n\t\t\t\ttop: viewZone.actualTop,\n\t\t\t}),\n\t\t);\n\t}\n}\n\nexport interface IObservableViewZone extends IViewZone {\n\t// Causes the view zone to relayout.\n\tonChange?: IObservable<unknown>;\n\n\t// Tells a view zone its id.\n\tsetZoneId?(zoneId: string): void;\n}\n\nexport class PlaceholderViewZone implements IObservableViewZone {\n\tpublic readonly domNode = document.createElement(\"div\");\n\n\tprivate readonly _actualTop = observableValue<number | undefined>(\n\t\tthis,\n\t\tundefined,\n\t);\n\tprivate readonly _actualHeight = observableValue<number | undefined>(\n\t\tthis,\n\t\tundefined,\n\t);\n\n\tpublic readonly actualTop: IObservable<number | undefined> =\n\t\tthis._actualTop;\n\tpublic readonly actualHeight: IObservable<number | undefined> =\n\t\tthis._actualHeight;\n\n\tpublic readonly showInHiddenAreas = true;\n\n\tpublic get afterLineNumber(): number {\n\t\treturn this._afterLineNumber.get();\n\t}\n\n\tpublic readonly onChange?: IObservable<unknown> = this._afterLineNumber;\n\n\tconstructor(\n\t\tprivate readonly _afterLineNumber: IObservable<number>,\n\t\tpublic readonly heightInPx: number,\n\t) {}\n\n\tonDomNodeTop = (top: number) => {\n\t\tthis._actualTop.set(top, undefined);\n\t};\n\n\tonComputedHeight = (height: number) => {\n\t\tthis._actualHeight.set(height, undefined);\n\t};\n}\n\nexport class ManagedOverlayWidget implements IDisposable {\n\tprivate static _counter = 0;\n\tprivate readonly _overlayWidgetId =\n\t\t`managedOverlayWidget-${ManagedOverlayWidget._counter++}`;\n\n\tprivate readonly _overlayWidget: IOverlayWidget = {\n\t\tgetId: () => this._overlayWidgetId,\n\t\tgetDomNode: () => this._domElement,\n\t\tgetPosition: () => null,\n\t};\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _domElement: HTMLElement,\n\t) {\n\t\tthis._editor.addOverlayWidget(this._overlayWidget);\n\t}\n\n\tdispose(): void {\n\t\tthis._editor.removeOverlayWidget(this._overlayWidget);\n\t}\n}\n\nexport interface CSSStyle {\n\theight: number | string;\n\twidth: number | string;\n\ttop: number | string;\n\tvisibility: \"visible\" | \"hidden\" | \"collapse\";\n\tdisplay: \"block\" | \"inline\" | \"inline-block\" | \"flex\" | \"none\";\n\tpaddingLeft: number | string;\n\tpaddingRight: number | string;\n}\n\nexport function applyStyle(\n\tdomNode: HTMLElement,\n\tstyle: Partial<{\n\t\t[TKey in keyof CSSStyle]:\n\t\t\t| CSSStyle[TKey]\n\t\t\t| IObservable<CSSStyle[TKey] | undefined>\n\t\t\t| undefined;\n\t}>,\n) {\n\treturn autorun((reader) => {\n\t\t/** @description applyStyle */\n\t\tfor (let [key, val] of Object.entries(style)) {\n\t\t\tif (val && typeof val === \"object\" && \"read\" in val) {\n\t\t\t\tval = val.read(reader) as any;\n\t\t\t}\n\t\t\tif (typeof val === \"number\") {\n\t\t\t\tval = `${val}px`;\n\t\t\t}\n\t\t\tkey = key.replace(/[A-Z]/g, (m) => \"-\" + m.toLowerCase());\n\t\t\tdomNode.style[key as any] = val as any;\n\t\t}\n\t});\n}\n\nexport function applyViewZones(\n\teditor: ICodeEditor,\n\tviewZones: IObservable<IObservableViewZone[]>,\n\tsetIsUpdating?: (isUpdatingViewZones: boolean) => void,\n\tzoneIds?: Set<string>,\n): IDisposable {\n\tconst store = new DisposableStore();\n\tconst lastViewZoneIds: string[] = [];\n\n\tstore.add(\n\t\tautorunWithStore((reader, store) => {\n\t\t\t/** @description applyViewZones */\n\t\t\tconst curViewZones = viewZones.read(reader);\n\n\t\t\tconst viewZonIdsPerViewZone = new Map<\n\t\t\t\tIObservableViewZone,\n\t\t\t\tstring\n\t\t\t>();\n\t\t\tconst viewZoneIdPerOnChangeObservable = new Map<\n\t\t\t\tIObservable<unknown>,\n\t\t\t\tstring\n\t\t\t>();\n\n\t\t\t// Add/remove view zones\n\t\t\tif (setIsUpdating) {\n\t\t\t\tsetIsUpdating(true);\n\t\t\t}\n\t\t\teditor.changeViewZones((a) => {\n\t\t\t\tfor (const id of lastViewZoneIds) {\n\t\t\t\t\ta.removeZone(id);\n\t\t\t\t\tzoneIds?.delete(id);\n\t\t\t\t}\n\t\t\t\tlastViewZoneIds.length = 0;\n\n\t\t\t\tfor (const z of curViewZones) {\n\t\t\t\t\tconst id = a.addZone(z);\n\t\t\t\t\tif (z.setZoneId) {\n\t\t\t\t\t\tz.setZoneId(id);\n\t\t\t\t\t}\n\t\t\t\t\tlastViewZoneIds.push(id);\n\t\t\t\t\tzoneIds?.add(id);\n\t\t\t\t\tviewZonIdsPerViewZone.set(z, id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (setIsUpdating) {\n\t\t\t\tsetIsUpdating(false);\n\t\t\t}\n\n\t\t\t// Layout zone on change\n\t\t\tstore.add(\n\t\t\t\tautorunHandleChanges(\n\t\t\t\t\t{\n\t\t\t\t\t\tcreateEmptyChangeSummary() {\n\t\t\t\t\t\t\treturn { zoneIds: [] as string[] };\n\t\t\t\t\t\t},\n\t\t\t\t\t\thandleChange(context, changeSummary) {\n\t\t\t\t\t\t\tconst id = viewZoneIdPerOnChangeObservable.get(\n\t\t\t\t\t\t\t\tcontext.changedObservable,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (id !== undefined) {\n\t\t\t\t\t\t\t\tchangeSummary.zoneIds.push(id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t(reader, changeSummary) => {\n\t\t\t\t\t\t/** @description layoutZone on change */\n\t\t\t\t\t\tfor (const vz of curViewZones) {\n\t\t\t\t\t\t\tif (vz.onChange) {\n\t\t\t\t\t\t\t\tviewZoneIdPerOnChangeObservable.set(\n\t\t\t\t\t\t\t\t\tvz.onChange,\n\t\t\t\t\t\t\t\t\tviewZonIdsPerViewZone.get(vz)!,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tvz.onChange.read(reader);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (setIsUpdating) {\n\t\t\t\t\t\t\tsetIsUpdating(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\teditor.changeViewZones((a) => {\n\t\t\t\t\t\t\tfor (const id of changeSummary.zoneIds) {\n\t\t\t\t\t\t\t\ta.layoutZone(id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (setIsUpdating) {\n\t\t\t\t\t\t\tsetIsUpdating(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}),\n\t);\n\n\tstore.add({\n\t\tdispose() {\n\t\t\tif (setIsUpdating) {\n\t\t\t\tsetIsUpdating(true);\n\t\t\t}\n\t\t\teditor.changeViewZones((a) => {\n\t\t\t\tfor (const id of lastViewZoneIds) {\n\t\t\t\t\ta.removeZone(id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tzoneIds?.clear();\n\t\t\tif (setIsUpdating) {\n\t\t\t\tsetIsUpdating(false);\n\t\t\t}\n\t\t},\n\t});\n\n\treturn store;\n}\n\nexport class DisposableCancellationTokenSource extends CancellationTokenSource {\n\tpublic override dispose() {\n\t\tsuper.dispose(true);\n\t}\n}\n\nexport function translatePosition(\n\tposInOriginal: Position,\n\tmappings: DetailedLineRangeMapping[],\n): Range {\n\tconst mapping = findLast(\n\t\tmappings,\n\t\t(m) => m.original.startLineNumber <= posInOriginal.lineNumber,\n\t);\n\tif (!mapping) {\n\t\t// No changes before the position\n\t\treturn Range.fromPositions(posInOriginal);\n\t}\n\n\tif (mapping.original.endLineNumberExclusive <= posInOriginal.lineNumber) {\n\t\tconst newLineNumber =\n\t\t\tposInOriginal.lineNumber -\n\t\t\tmapping.original.endLineNumberExclusive +\n\t\t\tmapping.modified.endLineNumberExclusive;\n\t\treturn Range.fromPositions(\n\t\t\tnew Position(newLineNumber, posInOriginal.column),\n\t\t);\n\t}\n\n\tif (!mapping.innerChanges) {\n\t\t// Only for legacy algorithm\n\t\treturn Range.fromPositions(\n\t\t\tnew Position(mapping.modified.startLineNumber, 1),\n\t\t);\n\t}\n\n\tconst innerMapping = findLast(mapping.innerChanges, (m) =>\n\t\tm.originalRange.getStartPosition().isBeforeOrEqual(posInOriginal),\n\t);\n\tif (!innerMapping) {\n\t\tconst newLineNumber =\n\t\t\tposInOriginal.lineNumber -\n\t\t\tmapping.original.startLineNumber +\n\t\t\tmapping.modified.startLineNumber;\n\t\treturn Range.fromPositions(\n\t\t\tnew Position(newLineNumber, posInOriginal.column),\n\t\t);\n\t}\n\n\tif (innerMapping.originalRange.containsPosition(posInOriginal)) {\n\t\treturn innerMapping.modifiedRange;\n\t} else {\n\t\tconst l = lengthBetweenPositions(\n\t\t\tinnerMapping.originalRange.getEndPosition(),\n\t\t\tposInOriginal,\n\t\t);\n\t\treturn Range.fromPositions(\n\t\t\tl.addToPosition(innerMapping.modifiedRange.getEndPosition()),\n\t\t);\n\t}\n}\n\nfunction lengthBetweenPositions(\n\tposition1: Position,\n\tposition2: Position,\n): TextLength {\n\tif (position1.lineNumber === position2.lineNumber) {\n\t\treturn new TextLength(0, position2.column - position1.column);\n\t} else {\n\t\treturn new TextLength(\n\t\t\tposition2.lineNumber - position1.lineNumber,\n\t\t\tposition2.column - 1,\n\t\t);\n\t}\n}\n\nexport function filterWithPrevious<T>(\n\tarr: T[],\n\tfilter: (cur: T, prev: T | undefined) => boolean,\n): T[] {\n\tlet prev: T | undefined;\n\treturn arr.filter((cur) => {\n\t\tconst result = filter(cur, prev);\n\t\tprev = cur;\n\t\treturn result;\n\t});\n}\n\nexport interface IRefCounted extends IDisposable {\n\tcreateNewRef(): this;\n}\n\nexport abstract class RefCounted<T> implements IDisposable, IReference<T> {\n\tpublic static create<T extends IDisposable>(\n\t\tvalue: T,\n\t\tdebugOwner: object | undefined = undefined,\n\t): RefCounted<T> {\n\t\treturn new BaseRefCounted(value, value, debugOwner);\n\t}\n\n\tpublic static createWithDisposable<T extends IDisposable>(\n\t\tvalue: T,\n\t\tdisposable: IDisposable,\n\t\tdebugOwner: object | undefined = undefined,\n\t): RefCounted<T> {\n\t\tconst store = new DisposableStore();\n\t\tstore.add(disposable);\n\t\tstore.add(value);\n\t\treturn new BaseRefCounted(value, store, debugOwner);\n\t}\n\n\tpublic static createOfNonDisposable<T>(\n\t\tvalue: T,\n\t\tdisposable: IDisposable,\n\t\tdebugOwner: object | undefined = undefined,\n\t): RefCounted<T> {\n\t\treturn new BaseRefCounted(value, disposable, debugOwner);\n\t}\n\n\tpublic abstract createNewRef(\n\t\tdebugOwner?: object | undefined,\n\t): RefCounted<T>;\n\n\tpublic abstract dispose(): void;\n\n\tpublic abstract get object(): T;\n}\n\nclass BaseRefCounted<T> extends RefCounted<T> {\n\tprivate _refCount = 1;\n\tprivate _isDisposed = false;\n\tprivate readonly _owners: object[] = [];\n\n\tconstructor(\n\t\tpublic override readonly object: T,\n\t\tprivate readonly _disposable: IDisposable,\n\t\tprivate readonly _debugOwner: object | undefined,\n\t) {\n\t\tsuper();\n\n\t\tif (_debugOwner) {\n\t\t\tthis._addOwner(_debugOwner);\n\t\t}\n\t}\n\n\tprivate _addOwner(debugOwner: object | undefined) {\n\t\tif (debugOwner) {\n\t\t\tthis._owners.push(debugOwner);\n\t\t}\n\t}\n\n\tpublic createNewRef(debugOwner?: object | undefined): RefCounted<T> {\n\t\tthis._refCount++;\n\t\tif (debugOwner) {\n\t\t\tthis._addOwner(debugOwner);\n\t\t}\n\t\treturn new ClonedRefCounted(this, debugOwner);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDisposed = true;\n\t\tthis._decreaseRefCount(this._debugOwner);\n\t}\n\n\tpublic _decreaseRefCount(debugOwner?: object | undefined): void {\n\t\tthis._refCount--;\n\t\tif (this._refCount === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\n\t\tif (debugOwner) {\n\t\t\tconst idx = this._owners.indexOf(debugOwner);\n\t\t\tif (idx !== -1) {\n\t\t\t\tthis._owners.splice(idx, 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ClonedRefCounted<T> extends RefCounted<T> {\n\tprivate _isDisposed = false;\n\tconstructor(\n\t\tprivate readonly _base: BaseRefCounted<T>,\n\t\tprivate readonly _debugOwner: object | undefined,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic get object(): T {\n\t\treturn this._base.object;\n\t}\n\n\tpublic createNewRef(debugOwner?: object | undefined): RefCounted<T> {\n\t\treturn this._base.createNewRef(debugOwner);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDisposed = true;\n\t\tthis._base._decreaseRefCount(this._debugOwner);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["d", "store", "reader"]
}
