{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/utils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDimension } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, IDisposable, IReference, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, ISettableObservable, autorun, autorunHandleChanges, autorunOpts, autorunWithStore, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { ElementSizeObserver } from '../../config/elementSizeObserver.js';\nimport { ICodeEditor, IOverlayWidget, IViewZone } from '../../editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { DetailedLineRangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { IModelDeltaDecoration } from '../../../common/model.js';\nimport { TextLength } from '../../../common/core/textLength.js';\n\nexport function joinCombine<T>(arr1: readonly T[], arr2: readonly T[], keySelector: (val: T) => number, combine: (v1: T, v2: T) => T): readonly T[] {\n\tif (arr1.length === 0) {\n\t\treturn arr2;\n\t}\n\tif (arr2.length === 0) {\n\t\treturn arr1;\n\t}\n\n\tconst result: T[] = [];\n\tlet i = 0;\n\tlet j = 0;\n\twhile (i < arr1.length && j < arr2.length) {\n\t\tconst val1 = arr1[i];\n\t\tconst val2 = arr2[j];\n\t\tconst key1 = keySelector(val1);\n\t\tconst key2 = keySelector(val2);\n\n\t\tif (key1 < key2) {\n\t\t\tresult.push(val1);\n\t\t\ti++;\n\t\t} else if (key1 > key2) {\n\t\t\tresult.push(val2);\n\t\t\tj++;\n\t\t} else {\n\t\t\tresult.push(combine(val1, val2));\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < arr1.length) {\n\t\tresult.push(arr1[i]);\n\t\ti++;\n\t}\n\twhile (j < arr2.length) {\n\t\tresult.push(arr2[j]);\n\t\tj++;\n\t}\n\treturn result;\n}\n\n// TODO make utility\nexport function applyObservableDecorations(editor: ICodeEditor, decorations: IObservable<IModelDeltaDecoration[]>): IDisposable {\n\tconst d = new DisposableStore();\n\tconst decorationsCollection = editor.createDecorationsCollection();\n\td.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n\t\tconst d = decorations.read(reader);\n\t\tdecorationsCollection.set(d);\n\t}));\n\td.add({\n\t\tdispose: () => {\n\t\t\tdecorationsCollection.clear();\n\t\t}\n\t});\n\treturn d;\n}\n\nexport function appendRemoveOnDispose(parent: HTMLElement, child: HTMLElement) {\n\tparent.appendChild(child);\n\treturn toDisposable(() => {\n\t\tchild.remove();\n\t});\n}\n\nexport function prependRemoveOnDispose(parent: HTMLElement, child: HTMLElement) {\n\tparent.prepend(child);\n\treturn toDisposable(() => {\n\t\tchild.remove();\n\t});\n}\n\nexport class ObservableElementSizeObserver extends Disposable {\n\tprivate readonly elementSizeObserver: ElementSizeObserver;\n\n\tprivate readonly _width: ISettableObservable<number>;\n\tpublic get width(): IObservable<number> { return this._width; }\n\n\tprivate readonly _height: ISettableObservable<number>;\n\tpublic get height(): IObservable<number> { return this._height; }\n\n\tprivate _automaticLayout: boolean = false;\n\tpublic get automaticLayout(): boolean { return this._automaticLayout; }\n\n\tconstructor(element: HTMLElement | null, dimension: IDimension | undefined) {\n\t\tsuper();\n\n\t\tthis.elementSizeObserver = this._register(new ElementSizeObserver(element, dimension));\n\t\tthis._width = observableValue(this, this.elementSizeObserver.getWidth());\n\t\tthis._height = observableValue(this, this.elementSizeObserver.getHeight());\n\n\t\tthis._register(this.elementSizeObserver.onDidChange(e => transaction(tx => {\n\t\t\t/** @description Set width/height from elementSizeObserver */\n\t\t\tthis._width.set(this.elementSizeObserver.getWidth(), tx);\n\t\t\tthis._height.set(this.elementSizeObserver.getHeight(), tx);\n\t\t})));\n\t}\n\n\tpublic observe(dimension?: IDimension): void {\n\t\tthis.elementSizeObserver.observe(dimension);\n\t}\n\n\tpublic setAutomaticLayout(automaticLayout: boolean): void {\n\t\tthis._automaticLayout = automaticLayout;\n\t\tif (automaticLayout) {\n\t\t\tthis.elementSizeObserver.startObserving();\n\t\t} else {\n\t\t\tthis.elementSizeObserver.stopObserving();\n\t\t}\n\t}\n}\n\nexport function animatedObservable(targetWindow: Window, base: IObservable<number, boolean>, store: DisposableStore): IObservable<number> {\n\tlet targetVal = base.get();\n\tlet startVal = targetVal;\n\tlet curVal = targetVal;\n\tconst result = observableValue('animatedValue', targetVal);\n\n\tlet animationStartMs: number = -1;\n\tconst durationMs = 300;\n\tlet animationFrame: number | undefined = undefined;\n\n\tstore.add(autorunHandleChanges({\n\t\tcreateEmptyChangeSummary: () => ({ animate: false }),\n\t\thandleChange: (ctx, s) => {\n\t\t\tif (ctx.didChange(base)) {\n\t\t\t\ts.animate = s.animate || ctx.change;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}, (reader, s) => {\n\t\t/** @description update value */\n\t\tif (animationFrame !== undefined) {\n\t\t\ttargetWindow.cancelAnimationFrame(animationFrame);\n\t\t\tanimationFrame = undefined;\n\t\t}\n\n\t\tstartVal = curVal;\n\t\ttargetVal = base.read(reader);\n\t\tanimationStartMs = Date.now() - (s.animate ? 0 : durationMs);\n\n\t\tupdate();\n\t}));\n\n\tfunction update() {\n\t\tconst passedMs = Date.now() - animationStartMs;\n\t\tcurVal = Math.floor(easeOutExpo(passedMs, startVal, targetVal - startVal, durationMs));\n\n\t\tif (passedMs < durationMs) {\n\t\t\tanimationFrame = targetWindow.requestAnimationFrame(update);\n\t\t} else {\n\t\t\tcurVal = targetVal;\n\t\t}\n\n\t\tresult.set(curVal, undefined);\n\t}\n\n\treturn result;\n}\n\nfunction easeOutExpo(t: number, b: number, c: number, d: number): number {\n\treturn t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\n\nexport function deepMerge<T extends {}>(source1: T, source2: Partial<T>): T {\n\tconst result = {} as T;\n\tfor (const key in source1) {\n\t\tresult[key] = source1[key];\n\t}\n\tfor (const key in source2) {\n\t\tconst source2Value = source2[key];\n\t\tif (typeof result[key] === 'object' && source2Value && typeof source2Value === 'object') {\n\t\t\tresult[key] = deepMerge<any>(result[key], source2Value);\n\t\t} else {\n\t\t\tresult[key] = source2Value as any;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport abstract class ViewZoneOverlayWidget extends Disposable {\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tviewZone: PlaceholderViewZone,\n\t\thtmlElement: HTMLElement,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(new ManagedOverlayWidget(editor, htmlElement));\n\t\tthis._register(applyStyle(htmlElement, {\n\t\t\theight: viewZone.actualHeight,\n\t\t\ttop: viewZone.actualTop,\n\t\t}));\n\t}\n}\n\nexport interface IObservableViewZone extends IViewZone {\n\t// Causes the view zone to relayout.\n\tonChange?: IObservable<unknown>;\n\n\t// Tells a view zone its id.\n\tsetZoneId?(zoneId: string): void;\n}\n\nexport class PlaceholderViewZone implements IObservableViewZone {\n\tpublic readonly domNode = document.createElement('div');\n\n\tprivate readonly _actualTop = observableValue<number | undefined>(this, undefined);\n\tprivate readonly _actualHeight = observableValue<number | undefined>(this, undefined);\n\n\tpublic readonly actualTop: IObservable<number | undefined> = this._actualTop;\n\tpublic readonly actualHeight: IObservable<number | undefined> = this._actualHeight;\n\n\tpublic readonly showInHiddenAreas = true;\n\n\tpublic get afterLineNumber(): number { return this._afterLineNumber.get(); }\n\n\tpublic readonly onChange?: IObservable<unknown> = this._afterLineNumber;\n\n\tconstructor(\n\t\tprivate readonly _afterLineNumber: IObservable<number>,\n\t\tpublic readonly heightInPx: number,\n\t) {\n\t}\n\n\tonDomNodeTop = (top: number) => {\n\t\tthis._actualTop.set(top, undefined);\n\t};\n\n\tonComputedHeight = (height: number) => {\n\t\tthis._actualHeight.set(height, undefined);\n\t};\n}\n\n\nexport class ManagedOverlayWidget implements IDisposable {\n\tprivate static _counter = 0;\n\tprivate readonly _overlayWidgetId = `managedOverlayWidget-${ManagedOverlayWidget._counter++}`;\n\n\tprivate readonly _overlayWidget: IOverlayWidget = {\n\t\tgetId: () => this._overlayWidgetId,\n\t\tgetDomNode: () => this._domElement,\n\t\tgetPosition: () => null\n\t};\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _domElement: HTMLElement,\n\t) {\n\t\tthis._editor.addOverlayWidget(this._overlayWidget);\n\t}\n\n\tdispose(): void {\n\t\tthis._editor.removeOverlayWidget(this._overlayWidget);\n\t}\n}\n\nexport interface CSSStyle {\n\theight: number | string;\n\twidth: number | string;\n\ttop: number | string;\n\tvisibility: 'visible' | 'hidden' | 'collapse';\n\tdisplay: 'block' | 'inline' | 'inline-block' | 'flex' | 'none';\n\tpaddingLeft: number | string;\n\tpaddingRight: number | string;\n}\n\nexport function applyStyle(domNode: HTMLElement, style: Partial<{ [TKey in keyof CSSStyle]: CSSStyle[TKey] | IObservable<CSSStyle[TKey] | undefined> | undefined }>) {\n\treturn autorun(reader => {\n\t\t/** @description applyStyle */\n\t\tfor (let [key, val] of Object.entries(style)) {\n\t\t\tif (val && typeof val === 'object' && 'read' in val) {\n\t\t\t\tval = val.read(reader) as any;\n\t\t\t}\n\t\t\tif (typeof val === 'number') {\n\t\t\t\tval = `${val}px`;\n\t\t\t}\n\t\t\tkey = key.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n\t\t\tdomNode.style[key as any] = val as any;\n\t\t}\n\t});\n}\n\nexport function applyViewZones(editor: ICodeEditor, viewZones: IObservable<IObservableViewZone[]>, setIsUpdating?: (isUpdatingViewZones: boolean) => void, zoneIds?: Set<string>): IDisposable {\n\tconst store = new DisposableStore();\n\tconst lastViewZoneIds: string[] = [];\n\n\tstore.add(autorunWithStore((reader, store) => {\n\t\t/** @description applyViewZones */\n\t\tconst curViewZones = viewZones.read(reader);\n\n\t\tconst viewZonIdsPerViewZone = new Map<IObservableViewZone, string>();\n\t\tconst viewZoneIdPerOnChangeObservable = new Map<IObservable<unknown>, string>();\n\n\t\t// Add/remove view zones\n\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\teditor.changeViewZones(a => {\n\t\t\tfor (const id of lastViewZoneIds) { a.removeZone(id); zoneIds?.delete(id); }\n\t\t\tlastViewZoneIds.length = 0;\n\n\t\t\tfor (const z of curViewZones) {\n\t\t\t\tconst id = a.addZone(z);\n\t\t\t\tif (z.setZoneId) {\n\t\t\t\t\tz.setZoneId(id);\n\t\t\t\t}\n\t\t\t\tlastViewZoneIds.push(id);\n\t\t\t\tzoneIds?.add(id);\n\t\t\t\tviewZonIdsPerViewZone.set(z, id);\n\t\t\t}\n\t\t});\n\t\tif (setIsUpdating) { setIsUpdating(false); }\n\n\t\t// Layout zone on change\n\t\tstore.add(autorunHandleChanges({\n\t\t\tcreateEmptyChangeSummary() {\n\t\t\t\treturn { zoneIds: [] as string[] };\n\t\t\t},\n\t\t\thandleChange(context, changeSummary) {\n\t\t\t\tconst id = viewZoneIdPerOnChangeObservable.get(context.changedObservable);\n\t\t\t\tif (id !== undefined) { changeSummary.zoneIds.push(id); }\n\t\t\t\treturn true;\n\t\t\t},\n\t\t}, (reader, changeSummary) => {\n\t\t\t/** @description layoutZone on change */\n\t\t\tfor (const vz of curViewZones) {\n\t\t\t\tif (vz.onChange) {\n\t\t\t\t\tviewZoneIdPerOnChangeObservable.set(vz.onChange, viewZonIdsPerViewZone.get(vz)!);\n\t\t\t\t\tvz.onChange.read(reader);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of changeSummary.zoneIds) { a.layoutZone(id); } });\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}));\n\t}));\n\n\tstore.add({\n\t\tdispose() {\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of lastViewZoneIds) { a.removeZone(id); } });\n\t\t\tzoneIds?.clear();\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}\n\t});\n\n\treturn store;\n}\n\nexport class DisposableCancellationTokenSource extends CancellationTokenSource {\n\tpublic override dispose() {\n\t\tsuper.dispose(true);\n\t}\n}\n\nexport function translatePosition(posInOriginal: Position, mappings: DetailedLineRangeMapping[]): Range {\n\tconst mapping = findLast(mappings, m => m.original.startLineNumber <= posInOriginal.lineNumber);\n\tif (!mapping) {\n\t\t// No changes before the position\n\t\treturn Range.fromPositions(posInOriginal);\n\t}\n\n\tif (mapping.original.endLineNumberExclusive <= posInOriginal.lineNumber) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.endLineNumberExclusive + mapping.modified.endLineNumberExclusive;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (!mapping.innerChanges) {\n\t\t// Only for legacy algorithm\n\t\treturn Range.fromPositions(new Position(mapping.modified.startLineNumber, 1));\n\t}\n\n\tconst innerMapping = findLast(mapping.innerChanges, m => m.originalRange.getStartPosition().isBeforeOrEqual(posInOriginal));\n\tif (!innerMapping) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.startLineNumber + mapping.modified.startLineNumber;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (innerMapping.originalRange.containsPosition(posInOriginal)) {\n\t\treturn innerMapping.modifiedRange;\n\t} else {\n\t\tconst l = lengthBetweenPositions(innerMapping.originalRange.getEndPosition(), posInOriginal);\n\t\treturn Range.fromPositions(l.addToPosition(innerMapping.modifiedRange.getEndPosition()));\n\t}\n}\n\nfunction lengthBetweenPositions(position1: Position, position2: Position): TextLength {\n\tif (position1.lineNumber === position2.lineNumber) {\n\t\treturn new TextLength(0, position2.column - position1.column);\n\t} else {\n\t\treturn new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1);\n\t}\n}\n\nexport function filterWithPrevious<T>(arr: T[], filter: (cur: T, prev: T | undefined) => boolean): T[] {\n\tlet prev: T | undefined;\n\treturn arr.filter(cur => {\n\t\tconst result = filter(cur, prev);\n\t\tprev = cur;\n\t\treturn result;\n\t});\n}\n\nexport interface IRefCounted extends IDisposable {\n\tcreateNewRef(): this;\n}\n\nexport abstract class RefCounted<T> implements IDisposable, IReference<T> {\n\tpublic static create<T extends IDisposable>(value: T, debugOwner: object | undefined = undefined): RefCounted<T> {\n\t\treturn new BaseRefCounted(value, value, debugOwner);\n\t}\n\n\tpublic static createWithDisposable<T extends IDisposable>(value: T, disposable: IDisposable, debugOwner: object | undefined = undefined): RefCounted<T> {\n\t\tconst store = new DisposableStore();\n\t\tstore.add(disposable);\n\t\tstore.add(value);\n\t\treturn new BaseRefCounted(value, store, debugOwner);\n\t}\n\n\tpublic static createOfNonDisposable<T>(value: T, disposable: IDisposable, debugOwner: object | undefined = undefined): RefCounted<T> {\n\t\treturn new BaseRefCounted(value, disposable, debugOwner);\n\t}\n\n\tpublic abstract createNewRef(debugOwner?: object | undefined): RefCounted<T>;\n\n\tpublic abstract dispose(): void;\n\n\tpublic abstract get object(): T;\n}\n\nclass BaseRefCounted<T> extends RefCounted<T> {\n\tprivate _refCount = 1;\n\tprivate _isDisposed = false;\n\tprivate readonly _owners: object[] = [];\n\n\tconstructor(\n\t\tpublic override readonly object: T,\n\t\tprivate readonly _disposable: IDisposable,\n\t\tprivate readonly _debugOwner: object | undefined,\n\t) {\n\t\tsuper();\n\n\t\tif (_debugOwner) {\n\t\t\tthis._addOwner(_debugOwner);\n\t\t}\n\t}\n\n\tprivate _addOwner(debugOwner: object | undefined) {\n\t\tif (debugOwner) {\n\t\t\tthis._owners.push(debugOwner);\n\t\t}\n\t}\n\n\tpublic createNewRef(debugOwner?: object | undefined): RefCounted<T> {\n\t\tthis._refCount++;\n\t\tif (debugOwner) {\n\t\t\tthis._addOwner(debugOwner);\n\t\t}\n\t\treturn new ClonedRefCounted(this, debugOwner);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) { return; }\n\t\tthis._isDisposed = true;\n\t\tthis._decreaseRefCount(this._debugOwner);\n\t}\n\n\tpublic _decreaseRefCount(debugOwner?: object | undefined): void {\n\t\tthis._refCount--;\n\t\tif (this._refCount === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\n\t\tif (debugOwner) {\n\t\t\tconst idx = this._owners.indexOf(debugOwner);\n\t\t\tif (idx !== -1) {\n\t\t\t\tthis._owners.splice(idx, 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ClonedRefCounted<T> extends RefCounted<T> {\n\tprivate _isDisposed = false;\n\tconstructor(\n\t\tprivate readonly _base: BaseRefCounted<T>,\n\t\tprivate readonly _debugOwner: object | undefined,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic get object(): T { return this._base.object; }\n\n\tpublic createNewRef(debugOwner?: object | undefined): RefCounted<T> {\n\t\treturn this._base.createNewRef(debugOwner);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) { return; }\n\t\tthis._isDisposed = true;\n\t\tthis._base._decreaseRefCount(this._debugOwner);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["d", "store", "reader"]
}
