var V=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var w=(p,n,e,i)=>{for(var t=i>1?void 0:i?A(n,e):n,o=p.length-1,l;o>=0;o--)(l=p[o])&&(t=(i?l(n,e,t):l(t))||t);return i&&t&&V(n,e,t),t},B=(p,n)=>(e,i)=>n(e,i,p);import{groupAdjacentBy as k}from"../../../../../vs/base/common/arrays.js";import{softAssert as O}from"../../../../../vs/base/common/assert.js";import{RunOnceScheduler as q}from"../../../../../vs/base/common/async.js";import{CancellationTokenSource as W}from"../../../../../vs/base/common/cancellation.js";import{readHotReloadableExport as H}from"../../../../../vs/base/common/hotReloadHelpers.js";import{Disposable as j,toDisposable as G}from"../../../../../vs/base/common/lifecycle.js";import{autorun as J,autorunWithStore as K,derived as x,observableSignal as Q,observableSignalFromEvent as X,observableValue as C,transaction as M,waitForState as Y}from"../../../../../vs/base/common/observable.js";import{isDefined as P}from"../../../../../vs/base/common/types.js";import{IDiffProviderFactoryService as Z}from"../../../../../vs/editor/browser/widget/diffEditor/diffProviderFactoryService.js";import{filterWithPrevious as $}from"../../../../../vs/editor/browser/widget/diffEditor/utils.js";import{LineRange as R,LineRangeSet as ee}from"../../../../../vs/editor/common/core/lineRange.js";import{DefaultLinesDiffComputer as ie}from"../../../../../vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js";import{optimizeSequenceDiffs as ne}from"../../../../../vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js";import"../../../../../vs/editor/common/diff/documentDiffProvider.js";import"../../../../../vs/editor/common/diff/linesDiffComputer.js";import{DetailedLineRangeMapping as F,LineRangeMapping as E,RangeMapping as te}from"../../../../../vs/editor/common/diff/rangeMapping.js";import"../../../../../vs/editor/common/editorCommon.js";import"../../../../../vs/editor/common/model.js";import{TextEditInfo as S}from"../../../../../vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/beforeEditPositionMapper.js";import{combineTextEditInfos as z}from"../../../../../vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/combineTextEditInfos.js";import"./diffEditorOptions.js";let y=class extends j{constructor(e,i,t){super();this.model=e;this._options=i;this._diffProviderFactoryService=t;this._register(G(()=>this._cancellationTokenSource.cancel()));const o=Q("contentChangedSignal"),l=this._register(new q(()=>o.trigger(void 0),200));this._register(J(d=>{const f=this._unchangedRegions.read(d);if(!f||f.regions.some(a=>a.isDragged.read(d)))return;const u=f.originalDecorationIds.map(a=>e.original.getDecorationRange(a)).map(a=>a?R.fromRangeInclusive(a):void 0),r=f.modifiedDecorationIds.map(a=>e.modified.getDecorationRange(a)).map(a=>a?R.fromRangeInclusive(a):void 0),g=f.regions.map((a,b)=>!u[b]||!r[b]?void 0:new T(u[b].startLineNumber,r[b].startLineNumber,u[b].length,a.visibleLineCountTop.read(d),a.visibleLineCountBottom.read(d))).filter(P),s=[];let h=!1;for(const a of k(g,(b,c)=>b.getHiddenModifiedRange(d).endLineNumberExclusive===c.getHiddenModifiedRange(d).startLineNumber))if(a.length>1){h=!0;const b=a.reduce((D,_)=>D+_.lineCount,0),c=new T(a[0].originalLineNumber,a[0].modifiedLineNumber,b,a[0].visibleLineCountTop.get(),a[a.length-1].visibleLineCountBottom.get());s.push(c)}else s.push(a[0]);if(h){const a=e.original.deltaDecorations(f.originalDecorationIds,s.map(c=>({range:c.originalUnchangedRange.toInclusiveRange(),options:{description:"unchanged"}}))),b=e.modified.deltaDecorations(f.modifiedDecorationIds,s.map(c=>({range:c.modifiedUnchangedRange.toInclusiveRange(),options:{description:"unchanged"}})));M(c=>{this._unchangedRegions.set({regions:s,originalDecorationIds:a,modifiedDecorationIds:b},c)})}}));const v=(d,f,u)=>{const r=T.fromDiffs(d.changes,e.original.getLineCount(),e.modified.getLineCount(),this._options.hideUnchangedRegionsMinimumLineCount.read(u),this._options.hideUnchangedRegionsContextLineCount.read(u));let g;const s=this._unchangedRegions.get();if(s){const c=s.originalDecorationIds.map(m=>e.original.getDecorationRange(m)).map(m=>m?R.fromRangeInclusive(m):void 0),D=s.modifiedDecorationIds.map(m=>e.modified.getDecorationRange(m)).map(m=>m?R.fromRangeInclusive(m):void 0);let U=$(s.regions.map((m,L)=>{if(!c[L]||!D[L])return;const N=c[L].length;return new T(c[L].startLineNumber,D[L].startLineNumber,N,Math.min(m.visibleLineCountTop.get(),N),Math.min(m.visibleLineCountBottom.get(),N-m.visibleLineCountTop.get()))}).filter(P),(m,L)=>!L||m.modifiedLineNumber>=L.modifiedLineNumber+L.lineCount&&m.originalLineNumber>=L.originalLineNumber+L.lineCount).map(m=>new E(m.getHiddenOriginalRange(u),m.getHiddenModifiedRange(u)));U=E.clip(U,R.ofLength(1,e.original.getLineCount()),R.ofLength(1,e.modified.getLineCount())),g=E.inverse(U,e.original.getLineCount(),e.modified.getLineCount())}const h=[];if(g)for(const c of r){const D=g.filter(_=>_.original.intersectsStrict(c.originalUnchangedRange)&&_.modified.intersectsStrict(c.modifiedUnchangedRange));h.push(...c.setVisibleRanges(D,f))}else h.push(...r);const a=e.original.deltaDecorations(s?.originalDecorationIds||[],h.map(c=>({range:c.originalUnchangedRange.toInclusiveRange(),options:{description:"unchanged"}}))),b=e.modified.deltaDecorations(s?.modifiedDecorationIds||[],h.map(c=>({range:c.modifiedUnchangedRange.toInclusiveRange(),options:{description:"unchanged"}})));this._unchangedRegions.set({regions:h,originalDecorationIds:a,modifiedDecorationIds:b},f)};this._register(e.modified.onDidChangeContent(d=>{if(this._diff.get()){const u=S.fromModelContentChanges(d.changes),r=(this._lastDiff,e.original,e.modified,void 0);r&&(this._lastDiff=r,M(g=>{this._diff.set(I.fromDiffResult(this._lastDiff),g),v(r,g);const s=this.movedTextToCompare.get();this.movedTextToCompare.set(s?this._lastDiff.moves.find(h=>h.lineRangeMapping.modified.intersect(s.lineRangeMapping.modified)):void 0,g)}))}this._isDiffUpToDate.set(!1,void 0),l.schedule()})),this._register(e.original.onDidChangeContent(d=>{if(this._diff.get()){const u=S.fromModelContentChanges(d.changes),r=(this._lastDiff,e.original,e.modified,void 0);r&&(this._lastDiff=r,M(g=>{this._diff.set(I.fromDiffResult(this._lastDiff),g),v(r,g);const s=this.movedTextToCompare.get();this.movedTextToCompare.set(s?this._lastDiff.moves.find(h=>h.lineRangeMapping.modified.intersect(s.lineRangeMapping.modified)):void 0,g)}))}this._isDiffUpToDate.set(!1,void 0),l.schedule()})),this._register(K(async(d,f)=>{this._options.hideUnchangedRegionsMinimumLineCount.read(d),this._options.hideUnchangedRegionsContextLineCount.read(d),l.cancel(),o.read(d);const u=this._diffProvider.read(d);u.onChangeSignal.read(d),H(ie,d),H(ne,d),this._isDiffUpToDate.set(!1,void 0);let r=[];f.add(e.original.onDidChangeContent(h=>{const a=S.fromModelContentChanges(h.changes);r=z(r,a)}));let g=[];f.add(e.modified.onDidChangeContent(h=>{const a=S.fromModelContentChanges(h.changes);g=z(g,a)}));let s=await u.diffProvider.computeDiff(e.original,e.modified,{ignoreTrimWhitespace:this._options.ignoreTrimWhitespace.read(d),maxComputationTimeMs:this._options.maxComputationTimeMs.read(d),computeMoves:this._options.showMoves.read(d)},this._cancellationTokenSource.token);this._cancellationTokenSource.token.isCancellationRequested||e.original.isDisposed()||e.modified.isDisposed()||(s=oe(s,e.original,e.modified),s=(e.original,e.modified,void 0)??s,s=(e.original,e.modified,void 0)??s,M(h=>{v(s,h),this._lastDiff=s;const a=I.fromDiffResult(s);this._diff.set(a,h),this._isDiffUpToDate.set(!0,h);const b=this.movedTextToCompare.get();this.movedTextToCompare.set(b?this._lastDiff.moves.find(c=>c.lineRangeMapping.modified.intersect(b.lineRangeMapping.modified)):void 0,h)}))}))}_isDiffUpToDate=C(this,!1);isDiffUpToDate=this._isDiffUpToDate;_lastDiff;_diff=C(this,void 0);diff=this._diff;_unchangedRegions=C(this,void 0);unchangedRegions=x(this,e=>this._options.hideUnchangedRegions.read(e)?this._unchangedRegions.read(e)?.regions??[]:(M(i=>{for(const t of this._unchangedRegions.get()?.regions||[])t.collapseAll(i)}),[]));movedTextToCompare=C(this,void 0);_activeMovedText=C(this,void 0);_hoveredMovedText=C(this,void 0);activeMovedText=x(this,e=>this.movedTextToCompare.read(e)??this._hoveredMovedText.read(e)??this._activeMovedText.read(e));setActiveMovedText(e){this._activeMovedText.set(e,void 0)}setHoveredMovedText(e){this._hoveredMovedText.set(e,void 0)}_cancellationTokenSource=new W;_diffProvider=x(this,e=>{const i=this._diffProviderFactoryService.createDiffProvider({diffAlgorithm:this._options.diffAlgorithm.read(e)}),t=X("onDidChange",i.onDidChange);return{diffProvider:i,onChangeSignal:t}});ensureModifiedLineIsVisible(e,i,t){if(this.diff.get()?.mappings.length===0)return;const o=this._unchangedRegions.get()?.regions||[];for(const l of o)if(l.getHiddenModifiedRange(void 0).contains(e)){l.showModifiedLine(e,i,t);return}}ensureOriginalLineIsVisible(e,i,t){if(this.diff.get()?.mappings.length===0)return;const o=this._unchangedRegions.get()?.regions||[];for(const l of o)if(l.getHiddenOriginalRange(void 0).contains(e)){l.showOriginalLine(e,i,t);return}}async waitForDiff(){await Y(this.isDiffUpToDate,e=>e)}serializeState(){return{collapsedRegions:this._unchangedRegions.get()?.regions.map(i=>({range:i.getHiddenModifiedRange(void 0).serialize()}))}}restoreSerializedState(e){const i=e.collapsedRegions?.map(o=>R.deserialize(o.range)),t=this._unchangedRegions.get();!t||!i||M(o=>{for(const l of t.regions)for(const v of i)if(l.modifiedUnchangedRange.intersect(v)){l.setHiddenModifiedRange(v,o);break}})}};y=w([B(2,Z)],y);function oe(p,n,e){return{changes:p.changes.map(i=>new F(i.original,i.modified,i.innerChanges?i.innerChanges.map(t=>se(t,n,e)):void 0)),moves:p.moves,identical:p.identical,quitEarly:p.quitEarly}}function se(p,n,e){let i=p.originalRange,t=p.modifiedRange;return i.startColumn===1&&t.startColumn===1&&(i.endColumn!==1||t.endColumn!==1)&&i.endColumn===n.getLineMaxColumn(i.endLineNumber)&&t.endColumn===e.getLineMaxColumn(t.endLineNumber)&&i.endLineNumber<n.getLineCount()&&t.endLineNumber<e.getLineCount()&&(i=i.setEndPosition(i.endLineNumber+1,1),t=t.setEndPosition(t.endLineNumber+1,1)),new te(i,t)}class I{constructor(n,e,i,t){this.mappings=n;this.movedTexts=e;this.identical=i;this.quitEarly=t}static fromDiffResult(n){return new I(n.changes.map(e=>new ae(e)),n.moves||[],n.identical,n.quitEarly)}}class ae{constructor(n){this.lineRangeMapping=n}}class T{constructor(n,e,i,t,o){this.originalLineNumber=n;this.modifiedLineNumber=e;this.lineCount=i;const l=Math.max(Math.min(t,this.lineCount),0),v=Math.max(Math.min(o,this.lineCount-t),0);O(t===l),O(o===v),this._visibleLineCountTop.set(l,void 0),this._visibleLineCountBottom.set(v,void 0)}static fromDiffs(n,e,i,t,o){const l=F.inverse(n,e,i),v=[];for(const d of l){let f=d.original.startLineNumber,u=d.modified.startLineNumber,r=d.original.length;const g=f===1&&u===1,s=f+r===e+1&&u+r===i+1;(g||s)&&r>=o+t?(g&&!s&&(r-=o),s&&!g&&(f+=o,u+=o,r-=o),v.push(new T(f,u,r,0,0))):r>=o*2+t&&(f+=o,u+=o,r-=o*2,v.push(new T(f,u,r,0,0)))}return v}get originalUnchangedRange(){return R.ofLength(this.originalLineNumber,this.lineCount)}get modifiedUnchangedRange(){return R.ofLength(this.modifiedLineNumber,this.lineCount)}_visibleLineCountTop=C(this,0);visibleLineCountTop=this._visibleLineCountTop;_visibleLineCountBottom=C(this,0);visibleLineCountBottom=this._visibleLineCountBottom;_shouldHideControls=x(this,n=>this.visibleLineCountTop.read(n)+this.visibleLineCountBottom.read(n)===this.lineCount&&!this.isDragged.read(n));isDragged=C(this,void 0);setVisibleRanges(n,e){const i=[],t=new ee(n.map(d=>d.modified)).subtractFrom(this.modifiedUnchangedRange);let o=this.originalLineNumber,l=this.modifiedLineNumber;const v=this.modifiedLineNumber+this.lineCount;if(t.ranges.length===0)this.showAll(e),i.push(this);else{let d=0;for(const f of t.ranges){const u=d===t.ranges.length-1;d++;const r=(u?v:f.endLineNumberExclusive)-l,g=new T(o,l,r,0,0);g.setHiddenModifiedRange(f,e),i.push(g),o=g.originalUnchangedRange.endLineNumberExclusive,l=g.modifiedUnchangedRange.endLineNumberExclusive}}return i}shouldHideControls(n){return this._shouldHideControls.read(n)}getHiddenOriginalRange(n){return R.ofLength(this.originalLineNumber+this._visibleLineCountTop.read(n),this.lineCount-this._visibleLineCountTop.read(n)-this._visibleLineCountBottom.read(n))}getHiddenModifiedRange(n){return R.ofLength(this.modifiedLineNumber+this._visibleLineCountTop.read(n),this.lineCount-this._visibleLineCountTop.read(n)-this._visibleLineCountBottom.read(n))}setHiddenModifiedRange(n,e){const i=n.startLineNumber-this.modifiedLineNumber,t=this.modifiedLineNumber+this.lineCount-n.endLineNumberExclusive;this.setState(i,t,e)}getMaxVisibleLineCountTop(){return this.lineCount-this._visibleLineCountBottom.get()}getMaxVisibleLineCountBottom(){return this.lineCount-this._visibleLineCountTop.get()}showMoreAbove(n=10,e){const i=this.getMaxVisibleLineCountTop();this._visibleLineCountTop.set(Math.min(this._visibleLineCountTop.get()+n,i),e)}showMoreBelow(n=10,e){const i=this.lineCount-this._visibleLineCountTop.get();this._visibleLineCountBottom.set(Math.min(this._visibleLineCountBottom.get()+n,i),e)}showAll(n){this._visibleLineCountBottom.set(this.lineCount-this._visibleLineCountTop.get(),n)}showModifiedLine(n,e,i){const t=n+1-(this.modifiedLineNumber+this._visibleLineCountTop.get()),o=this.modifiedLineNumber-this._visibleLineCountBottom.get()+this.lineCount-n;e===0&&t<o||e===1?this._visibleLineCountTop.set(this._visibleLineCountTop.get()+t,i):this._visibleLineCountBottom.set(this._visibleLineCountBottom.get()+o,i)}showOriginalLine(n,e,i){const t=n-this.originalLineNumber,o=this.originalLineNumber+this.lineCount-n;e===0&&t<o||e===1?this._visibleLineCountTop.set(Math.min(this._visibleLineCountTop.get()+o-t,this.getMaxVisibleLineCountTop()),i):this._visibleLineCountBottom.set(Math.min(this._visibleLineCountBottom.get()+t-o,this.getMaxVisibleLineCountBottom()),i)}collapseAll(n){this._visibleLineCountTop.set(0,n),this._visibleLineCountBottom.set(0,n)}setState(n,e,i){n=Math.max(Math.min(n,this.lineCount),0),e=Math.max(Math.min(e,this.lineCount-n),0),this._visibleLineCountTop.set(n,i),this._visibleLineCountBottom.set(e,i)}}var de=(i=>(i[i.FromCloserSide=0]="FromCloserSide",i[i.FromTop=1]="FromTop",i[i.FromBottom=2]="FromBottom",i))(de||{});function Ae(p,n,e,i){}function ke(p,n,e,i){}export{y as DiffEditorViewModel,ae as DiffMapping,I as DiffState,de as RevealPreference,T as UnchangedRegion};
