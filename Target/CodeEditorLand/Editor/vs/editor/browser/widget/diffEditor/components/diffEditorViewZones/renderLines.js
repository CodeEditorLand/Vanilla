import{createTrustedTypesPolicy as R}from"../../../../../../../vs/base/browser/trustedTypes.js";import{applyFontInfo as B}from"../../../../../../../vs/editor/browser/config/domFontInfo.js";import"../../../../../../../vs/editor/browser/editorBrowser.js";import{EditorFontLigatures as E,EditorOption as a}from"../../../../../../../vs/editor/common/config/editorOptions.js";import"../../../../../../../vs/editor/common/config/fontInfo.js";import{StringBuilder as M}from"../../../../../../../vs/editor/common/core/stringBuilder.js";import"../../../../../../../vs/editor/common/modelLineProjectionData.js";import"../../../../../../../vs/editor/common/tokens/lineTokens.js";import{LineDecoration as I}from"../../../../../../../vs/editor/common/viewLayout/lineDecorations.js";import{RenderLineInput as W,renderViewLine as k}from"../../../../../../../vs/editor/common/viewLayout/viewLineRenderer.js";import{ViewLineRenderingData as C}from"../../../../../../../vs/editor/common/viewModel.js";const y=R("diffEditorWidget",{createHTML:o=>o});function Q(o,i,n,r){B(r,i.fontInfo);const l=n.length>0,s=new M(1e4);let e=0,t=0;const d=[];for(let f=0;f<o.lineTokens.length;f++){const T=f+1,L=o.lineTokens[f],m=o.lineBreakData[f],b=I.filter(n,T,1,Number.MAX_SAFE_INTEGER);if(m){let h=0;for(const g of m.breakOffsets){const w=L.sliceAndInflate(h,g,0);e=Math.max(e,O(t,w,I.extractWrapped(b,h,g),l,o.mightContainNonBasicASCII,o.mightContainRTL,i,s)),t++,h=g}d.push(m.breakOffsets.length)}else d.push(1),e=Math.max(e,O(t,L,b,l,o.mightContainNonBasicASCII,o.mightContainRTL,i,s)),t++}e+=i.scrollBeyondLastColumn;const c=s.build(),u=y?y.createHTML(c):c;r.innerHTML=u;const p=e*i.typicalHalfwidthCharacterWidth;return{heightInLines:t,minWidthInPx:p,viewLineCounts:d}}class Y{constructor(i,n,r,l){this.lineTokens=i;this.lineBreakData=n;this.mightContainNonBasicASCII=r;this.mightContainRTL=l}}class S{constructor(i,n,r,l,s,e,t,d,c,u,p){this.tabSize=i;this.fontInfo=n;this.disableMonospaceOptimizations=r;this.typicalHalfwidthCharacterWidth=l;this.scrollBeyondLastColumn=s;this.lineHeight=e;this.lineDecorationsWidth=t;this.stopRenderingLineAfter=d;this.renderWhitespace=c;this.renderControlCharacters=u;this.fontLigatures=p}static fromEditor(i){const n=i.getOptions(),r=n.get(a.fontInfo),l=n.get(a.layoutInfo);return new S(i.getModel()?.getOptions().tabSize||0,r,n.get(a.disableMonospaceOptimizations),r.typicalHalfwidthCharacterWidth,n.get(a.scrollBeyondLastColumn),n.get(a.lineHeight),l.decorationsWidth,n.get(a.stopRenderingLineAfter),n.get(a.renderWhitespace),n.get(a.renderControlCharacters),n.get(a.fontLigatures))}}function O(o,i,n,r,l,s,e,t){t.appendString('<div class="view-line'),r||t.appendString(" char-delete"),t.appendString('" style="top:'),t.appendString(String(o*e.lineHeight)),t.appendString('px;width:1000000px;">');const d=i.getLineContent(),c=C.isBasicASCII(d,l),u=C.containsRTL(d,c,s),p=k(new W(e.fontInfo.isMonospace&&!e.disableMonospaceOptimizations,e.fontInfo.canUseHalfwidthRightwardsArrow,d,!1,c,u,0,i,n,e.tabSize,0,e.fontInfo.spaceWidth,e.fontInfo.middotWidth,e.fontInfo.wsmiddotWidth,e.stopRenderingLineAfter,e.renderWhitespace,e.renderControlCharacters,e.fontLigatures!==E.OFF,null),t);return t.appendString("</div>"),p.characterMapping.getHorizontalOffset(p.characterMapping.length)}export{Y as LineSource,S as RenderOptions,Q as renderLines};
