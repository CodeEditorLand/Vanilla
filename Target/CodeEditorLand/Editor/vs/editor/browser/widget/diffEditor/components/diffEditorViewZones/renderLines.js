import{createTrustedTypesPolicy as R}from"../../../../../../base/browser/trustedTypes.js";import{EditorFontLigatures as B,EditorOption as a}from"../../../../../common/config/editorOptions.js";import{StringBuilder as k}from"../../../../../common/core/stringBuilder.js";import{LineDecoration as I}from"../../../../../common/viewLayout/lineDecorations.js";import{RenderLineInput as E,renderViewLine as M}from"../../../../../common/viewLayout/viewLineRenderer.js";import{ViewLineRenderingData as y}from"../../../../../common/viewModel.js";import{applyFontInfo as W}from"../../../../config/domFontInfo.js";const C=R("diffEditorWidget",{createHTML:o=>o});function z(o,i,n,r){W(r,i.fontInfo);const l=n.length>0,s=new k(1e4);let e=0,t=0;const d=[];for(let f=0;f<o.lineTokens.length;f++){const w=f+1,L=o.lineTokens[f],u=o.lineBreakData[f],b=I.filter(n,w,1,Number.MAX_SAFE_INTEGER);if(u){let h=0;for(const g of u.breakOffsets){const S=L.sliceAndInflate(h,g,0);e=Math.max(e,O(t,S,I.extractWrapped(b,h,g),l,o.mightContainNonBasicASCII,o.mightContainRTL,i,s)),t++,h=g}d.push(u.breakOffsets.length)}else d.push(1),e=Math.max(e,O(t,L,b,l,o.mightContainNonBasicASCII,o.mightContainRTL,i,s)),t++}e+=i.scrollBeyondLastColumn;const c=s.build(),m=C?C.createHTML(c):c;r.innerHTML=m;const p=e*i.typicalHalfwidthCharacterWidth;return{heightInLines:t,minWidthInPx:p,viewLineCounts:d}}class V{constructor(i,n,r,l){this.lineTokens=i;this.lineBreakData=n;this.mightContainNonBasicASCII=r;this.mightContainRTL=l}}class T{constructor(i,n,r,l,s,e,t,d,c,m,p){this.tabSize=i;this.fontInfo=n;this.disableMonospaceOptimizations=r;this.typicalHalfwidthCharacterWidth=l;this.scrollBeyondLastColumn=s;this.lineHeight=e;this.lineDecorationsWidth=t;this.stopRenderingLineAfter=d;this.renderWhitespace=c;this.renderControlCharacters=m;this.fontLigatures=p}static fromEditor(i){const n=i.getOptions(),r=n.get(a.fontInfo),l=n.get(a.layoutInfo);return new T(i.getModel()?.getOptions().tabSize||0,r,n.get(a.disableMonospaceOptimizations),r.typicalHalfwidthCharacterWidth,n.get(a.scrollBeyondLastColumn),n.get(a.lineHeight),l.decorationsWidth,n.get(a.stopRenderingLineAfter),n.get(a.renderWhitespace),n.get(a.renderControlCharacters),n.get(a.fontLigatures))}}function O(o,i,n,r,l,s,e,t){t.appendString('<div class="view-line'),r||t.appendString(" char-delete"),t.appendString('" style="top:'),t.appendString(String(o*e.lineHeight)),t.appendString('px;width:1000000px;">');const d=i.getLineContent(),c=y.isBasicASCII(d,l),m=y.containsRTL(d,c,s),p=M(new E(e.fontInfo.isMonospace&&!e.disableMonospaceOptimizations,e.fontInfo.canUseHalfwidthRightwardsArrow,d,!1,c,m,0,i,n,e.tabSize,0,e.fontInfo.spaceWidth,e.fontInfo.middotWidth,e.fontInfo.wsmiddotWidth,e.stopRenderingLineAfter,e.renderWhitespace,e.renderControlCharacters,e.fontLigatures!==B.OFF,null),t);return t.appendString("</div>"),p.characterMapping.getHorizontalOffset(p.characterMapping.length)}export{V as LineSource,T as RenderOptions,z as renderLines};
