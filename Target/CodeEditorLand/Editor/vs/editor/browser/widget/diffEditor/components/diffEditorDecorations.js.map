{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/components/diffEditorDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, derived } from '../../../../../base/common/observable.js';\nimport { DiffEditorEditors } from './diffEditorEditors.js';\nimport { allowsTrueInlineDiffRendering } from './diffEditorViewZones/diffEditorViewZones.js';\nimport { DiffEditorOptions } from '../diffEditorOptions.js';\nimport { DiffEditorViewModel } from '../diffEditorViewModel.js';\nimport { DiffEditorWidget } from '../diffEditorWidget.js';\nimport { MovedBlocksLinesFeature } from '../features/movedBlocksLinesFeature.js';\nimport { diffAddDecoration, diffAddDecorationEmpty, diffDeleteDecoration, diffDeleteDecorationEmpty, diffLineAddDecorationBackground, diffLineAddDecorationBackgroundWithIndicator, diffLineDeleteDecorationBackground, diffLineDeleteDecorationBackgroundWithIndicator, diffWholeLineAddDecoration, diffWholeLineDeleteDecoration } from '../registrations.contribution.js';\nimport { applyObservableDecorations } from '../utils.js';\nimport { IModelDeltaDecoration } from '../../../../common/model.js';\n\nexport class DiffEditorDecorations extends Disposable {\n\tconstructor(\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\twidget: DiffEditorWidget,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(applyObservableDecorations(this._editors.original, this._decorations.map(d => d?.originalDecorations || [])));\n\t\tthis._register(applyObservableDecorations(this._editors.modified, this._decorations.map(d => d?.modifiedDecorations || [])));\n\t}\n\n\tprivate readonly _decorations = derived(this, (reader) => {\n\t\tconst diffModel = this._diffModel.read(reader);\n\t\tconst diff = diffModel?.diff.read(reader);\n\t\tif (!diff) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst movedTextToCompare = this._diffModel.read(reader)!.movedTextToCompare.read(reader);\n\t\tconst renderIndicators = this._options.renderIndicators.read(reader);\n\t\tconst showEmptyDecorations = this._options.showEmptyDecorations.read(reader);\n\n\t\tconst originalDecorations: IModelDeltaDecoration[] = [];\n\t\tconst modifiedDecorations: IModelDeltaDecoration[] = [];\n\t\tif (!movedTextToCompare) {\n\t\t\tfor (const m of diff.mappings) {\n\t\t\t\tif (!m.lineRangeMapping.original.isEmpty) {\n\t\t\t\t\toriginalDecorations.push({ range: m.lineRangeMapping.original.toInclusiveRange()!, options: renderIndicators ? diffLineDeleteDecorationBackgroundWithIndicator : diffLineDeleteDecorationBackground });\n\t\t\t\t}\n\t\t\t\tif (!m.lineRangeMapping.modified.isEmpty) {\n\t\t\t\t\tmodifiedDecorations.push({ range: m.lineRangeMapping.modified.toInclusiveRange()!, options: renderIndicators ? diffLineAddDecorationBackgroundWithIndicator : diffLineAddDecorationBackground });\n\t\t\t\t}\n\n\t\t\t\tif (m.lineRangeMapping.modified.isEmpty || m.lineRangeMapping.original.isEmpty) {\n\t\t\t\t\tif (!m.lineRangeMapping.original.isEmpty) {\n\t\t\t\t\t\toriginalDecorations.push({ range: m.lineRangeMapping.original.toInclusiveRange()!, options: diffWholeLineDeleteDecoration });\n\t\t\t\t\t}\n\t\t\t\t\tif (!m.lineRangeMapping.modified.isEmpty) {\n\t\t\t\t\t\tmodifiedDecorations.push({ range: m.lineRangeMapping.modified.toInclusiveRange()!, options: diffWholeLineAddDecoration });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst useInlineDiff = this._options.useTrueInlineDiffRendering.read(reader) && allowsTrueInlineDiffRendering(m.lineRangeMapping);\n\t\t\t\t\tfor (const i of m.lineRangeMapping.innerChanges || []) {\n\t\t\t\t\t\t// Don't show empty markers outside the line range\n\t\t\t\t\t\tif (m.lineRangeMapping.original.contains(i.originalRange.startLineNumber)) {\n\t\t\t\t\t\t\toriginalDecorations.push({ range: i.originalRange, options: (i.originalRange.isEmpty() && showEmptyDecorations) ? diffDeleteDecorationEmpty : diffDeleteDecoration });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m.lineRangeMapping.modified.contains(i.modifiedRange.startLineNumber)) {\n\t\t\t\t\t\t\tmodifiedDecorations.push({ range: i.modifiedRange, options: (i.modifiedRange.isEmpty() && showEmptyDecorations && !useInlineDiff) ? diffAddDecorationEmpty : diffAddDecoration });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (useInlineDiff) {\n\t\t\t\t\t\t\tconst deletedText = diffModel!.model.original.getValueInRange(i.originalRange);\n\t\t\t\t\t\t\tmodifiedDecorations.push({\n\t\t\t\t\t\t\t\trange: i.modifiedRange,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tdescription: 'deleted-text',\n\t\t\t\t\t\t\t\t\tbefore: {\n\t\t\t\t\t\t\t\t\t\tcontent: deletedText,\n\t\t\t\t\t\t\t\t\t\tinlineClassName: 'inline-deleted-text',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tzIndex: 100000,\n\t\t\t\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (movedTextToCompare) {\n\t\t\tfor (const m of movedTextToCompare.changes) {\n\t\t\t\tconst fullRangeOriginal = m.original.toInclusiveRange();\n\t\t\t\tif (fullRangeOriginal) {\n\t\t\t\t\toriginalDecorations.push({ range: fullRangeOriginal, options: renderIndicators ? diffLineDeleteDecorationBackgroundWithIndicator : diffLineDeleteDecorationBackground });\n\t\t\t\t}\n\t\t\t\tconst fullRangeModified = m.modified.toInclusiveRange();\n\t\t\t\tif (fullRangeModified) {\n\t\t\t\t\tmodifiedDecorations.push({ range: fullRangeModified, options: renderIndicators ? diffLineAddDecorationBackgroundWithIndicator : diffLineAddDecorationBackground });\n\t\t\t\t}\n\n\t\t\t\tfor (const i of m.innerChanges || []) {\n\t\t\t\t\toriginalDecorations.push({ range: i.originalRange, options: diffDeleteDecoration });\n\t\t\t\t\tmodifiedDecorations.push({ range: i.modifiedRange, options: diffAddDecoration });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst activeMovedText = this._diffModel.read(reader)!.activeMovedText.read(reader);\n\n\t\tfor (const m of diff.movedTexts) {\n\t\t\toriginalDecorations.push({\n\t\t\t\trange: m.lineRangeMapping.original.toInclusiveRange()!, options: {\n\t\t\t\t\tdescription: 'moved',\n\t\t\t\t\tblockClassName: 'movedOriginal' + (m === activeMovedText ? ' currentMove' : ''),\n\t\t\t\t\tblockPadding: [MovedBlocksLinesFeature.movedCodeBlockPadding, 0, MovedBlocksLinesFeature.movedCodeBlockPadding, MovedBlocksLinesFeature.movedCodeBlockPadding],\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodifiedDecorations.push({\n\t\t\t\trange: m.lineRangeMapping.modified.toInclusiveRange()!, options: {\n\t\t\t\t\tdescription: 'moved',\n\t\t\t\t\tblockClassName: 'movedModified' + (m === activeMovedText ? ' currentMove' : ''),\n\t\t\t\t\tblockPadding: [4, 0, 4, 4],\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn { originalDecorations, modifiedDecorations };\n\t});\n}\n"],
  "mappings": "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",
  "names": []
}
