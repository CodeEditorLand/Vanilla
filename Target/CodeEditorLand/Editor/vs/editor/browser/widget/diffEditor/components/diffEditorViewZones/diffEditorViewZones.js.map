{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/diffEditorViewZones.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, addDisposableListener } from '../../../../../../base/browser/dom.js';\nimport { ArrayQueue } from '../../../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../../../base/common/async.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { Disposable, DisposableStore } from '../../../../../../base/common/lifecycle.js';\nimport { IObservable, autorun, derived, derivedWithStore, observableFromEvent, observableValue } from '../../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../../base/common/themables.js';\nimport { assertIsDefined } from '../../../../../../base/common/types.js';\nimport { applyFontInfo } from '../../../../config/domFontInfo.js';\nimport { CodeEditorWidget } from '../../../codeEditor/codeEditorWidget.js';\nimport { diffDeleteDecoration, diffRemoveIcon } from '../../registrations.contribution.js';\nimport { DiffEditorEditors } from '../diffEditorEditors.js';\nimport { DiffEditorViewModel, DiffMapping } from '../../diffEditorViewModel.js';\nimport { DiffEditorWidget } from '../../diffEditorWidget.js';\nimport { InlineDiffDeletedCodeMargin } from './inlineDiffDeletedCodeMargin.js';\nimport { LineSource, RenderOptions, renderLines } from './renderLines.js';\nimport { IObservableViewZone, animatedObservable, joinCombine } from '../../utils.js';\nimport { EditorOption } from '../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../common/core/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { DetailedLineRangeMapping } from '../../../../../common/diff/rangeMapping.js';\nimport { ScrollType } from '../../../../../common/editorCommon.js';\nimport { BackgroundTokenizationState } from '../../../../../common/tokenizationTextModelPart.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../../../common/viewModel.js';\nimport { IClipboardService } from '../../../../../../platform/clipboard/common/clipboardService.js';\nimport { IContextMenuService } from '../../../../../../platform/contextview/browser/contextView.js';\nimport { DiffEditorOptions } from '../../diffEditorOptions.js';\nimport { Range } from '../../../../../common/core/range.js';\n\n/**\n * Ensures both editors have the same height by aligning unchanged lines.\n * In inline view mode, inserts viewzones to show deleted code from the original text model in the modified code editor.\n * Synchronizes scrolling.\n *\n * Make sure to add the view zones!\n */\nexport class DiffEditorViewZones extends Disposable {\n\tprivate readonly _originalTopPadding = observableValue(this, 0);\n\tprivate readonly _originalScrollTop: IObservable<number>;\n\tprivate readonly _originalScrollOffset = observableValue<number, boolean>(this, 0);\n\tprivate readonly _originalScrollOffsetAnimated = animatedObservable(this._targetWindow, this._originalScrollOffset, this._store);\n\n\tprivate readonly _modifiedTopPadding = observableValue(this, 0);\n\tprivate readonly _modifiedScrollTop: IObservable<number>;\n\tprivate readonly _modifiedScrollOffset = observableValue<number, boolean>(this, 0);\n\tprivate readonly _modifiedScrollOffsetAnimated = animatedObservable(this._targetWindow, this._modifiedScrollOffset, this._store);\n\n\tpublic readonly viewZones: IObservable<{ orig: IObservableViewZone[]; mod: IObservableViewZone[] }>;\n\n\tconstructor(\n\t\tprivate readonly _targetWindow: Window,\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tprivate readonly _diffEditorWidget: DiffEditorWidget,\n\t\tprivate readonly _canIgnoreViewZoneUpdateEvent: () => boolean,\n\t\tprivate readonly _origViewZonesToIgnore: Set<string>,\n\t\tprivate readonly _modViewZonesToIgnore: Set<string>,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t) {\n\t\tsuper();\n\n\t\tconst state = observableValue('invalidateAlignmentsState', 0);\n\n\t\tconst updateImmediately = this._register(new RunOnceScheduler(() => {\n\t\t\tstate.set(state.get() + 1, undefined);\n\t\t}, 0));\n\n\t\tthis._register(this._editors.original.onDidChangeViewZones((_args) => { if (!this._canIgnoreViewZoneUpdateEvent()) { updateImmediately.schedule(); } }));\n\t\tthis._register(this._editors.modified.onDidChangeViewZones((_args) => { if (!this._canIgnoreViewZoneUpdateEvent()) { updateImmediately.schedule(); } }));\n\t\tthis._register(this._editors.original.onDidChangeConfiguration((args) => {\n\t\t\tif (args.hasChanged(EditorOption.wrappingInfo) || args.hasChanged(EditorOption.lineHeight)) { updateImmediately.schedule(); }\n\t\t}));\n\t\tthis._register(this._editors.modified.onDidChangeConfiguration((args) => {\n\t\t\tif (args.hasChanged(EditorOption.wrappingInfo) || args.hasChanged(EditorOption.lineHeight)) { updateImmediately.schedule(); }\n\t\t}));\n\n\t\tconst originalModelTokenizationCompleted = this._diffModel.map(m =>\n\t\t\tm ? observableFromEvent(this, m.model.original.onDidChangeTokens, () => m.model.original.tokenization.backgroundTokenizationState === BackgroundTokenizationState.Completed) : undefined\n\t\t).map((m, reader) => m?.read(reader));\n\n\t\tconst alignments = derived<ILineRangeAlignment[] | null>((reader) => {\n\t\t\t/** @description alignments */\n\t\t\tconst diffModel = this._diffModel.read(reader);\n\t\t\tconst diff = diffModel?.diff.read(reader);\n\t\t\tif (!diffModel || !diff) { return null; }\n\t\t\tstate.read(reader);\n\t\t\tconst renderSideBySide = this._options.renderSideBySide.read(reader);\n\t\t\tconst innerHunkAlignment = renderSideBySide;\n\t\t\treturn computeRangeAlignment(\n\t\t\t\tthis._editors.original,\n\t\t\t\tthis._editors.modified,\n\t\t\t\tdiff.mappings,\n\t\t\t\tthis._origViewZonesToIgnore,\n\t\t\t\tthis._modViewZonesToIgnore,\n\t\t\t\tinnerHunkAlignment\n\t\t\t);\n\t\t});\n\n\t\tconst alignmentsSyncedMovedText = derived<ILineRangeAlignment[] | null>((reader) => {\n\t\t\t/** @description alignmentsSyncedMovedText */\n\t\t\tconst syncedMovedText = this._diffModel.read(reader)?.movedTextToCompare.read(reader);\n\t\t\tif (!syncedMovedText) { return null; }\n\t\t\tstate.read(reader);\n\t\t\tconst mappings = syncedMovedText.changes.map(c => new DiffMapping(c));\n\t\t\t// TODO dont include alignments outside syncedMovedText\n\t\t\treturn computeRangeAlignment(\n\t\t\t\tthis._editors.original,\n\t\t\t\tthis._editors.modified,\n\t\t\t\tmappings,\n\t\t\t\tthis._origViewZonesToIgnore,\n\t\t\t\tthis._modViewZonesToIgnore,\n\t\t\t\ttrue\n\t\t\t);\n\t\t});\n\n\t\tfunction createFakeLinesDiv(): HTMLElement {\n\t\t\tconst r = document.createElement('div');\n\t\t\tr.className = 'diagonal-fill';\n\t\t\treturn r;\n\t\t}\n\n\t\tconst alignmentViewZonesDisposables = this._register(new DisposableStore());\n\t\tthis.viewZones = derivedWithStore<{ orig: IObservableViewZone[]; mod: IObservableViewZone[] }>(this, (reader, store) => {\n\t\t\talignmentViewZonesDisposables.clear();\n\n\t\t\tconst alignmentsVal = alignments.read(reader) || [];\n\n\t\t\tconst origViewZones: IObservableViewZone[] = [];\n\t\t\tconst modViewZones: IObservableViewZone[] = [];\n\n\t\t\tconst modifiedTopPaddingVal = this._modifiedTopPadding.read(reader);\n\t\t\tif (modifiedTopPaddingVal > 0) {\n\t\t\t\tmodViewZones.push({\n\t\t\t\t\tafterLineNumber: 0,\n\t\t\t\t\tdomNode: document.createElement('div'),\n\t\t\t\t\theightInPx: modifiedTopPaddingVal,\n\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst originalTopPaddingVal = this._originalTopPadding.read(reader);\n\t\t\tif (originalTopPaddingVal > 0) {\n\t\t\t\torigViewZones.push({\n\t\t\t\t\tafterLineNumber: 0,\n\t\t\t\t\tdomNode: document.createElement('div'),\n\t\t\t\t\theightInPx: originalTopPaddingVal,\n\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst renderSideBySide = this._options.renderSideBySide.read(reader);\n\n\t\t\tconst deletedCodeLineBreaksComputer = !renderSideBySide ? this._editors.modified._getViewModel()?.createLineBreaksComputer() : undefined;\n\t\t\tif (deletedCodeLineBreaksComputer) {\n\t\t\t\tconst originalModel = this._editors.original.getModel()!;\n\t\t\t\tfor (const a of alignmentsVal) {\n\t\t\t\t\tif (a.diff) {\n\t\t\t\t\t\tfor (let i = a.originalRange.startLineNumber; i < a.originalRange.endLineNumberExclusive; i++) {\n\t\t\t\t\t\t\t// `i` can be out of bound when the diff has not been updated yet.\n\t\t\t\t\t\t\t// In this case, we do an early return.\n\t\t\t\t\t\t\t// TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n\t\t\t\t\t\t\tif (i > originalModel.getLineCount()) {\n\t\t\t\t\t\t\t\treturn { orig: origViewZones, mod: modViewZones };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdeletedCodeLineBreaksComputer?.addRequest(originalModel.getLineContent(i), null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lineBreakData = deletedCodeLineBreaksComputer?.finalize() ?? [];\n\t\t\tlet lineBreakDataIdx = 0;\n\n\t\t\tconst modLineHeight = this._editors.modified.getOption(EditorOption.lineHeight);\n\n\t\t\tconst syncedMovedText = this._diffModel.read(reader)?.movedTextToCompare.read(reader);\n\n\t\t\tconst mightContainNonBasicASCII = this._editors.original.getModel()?.mightContainNonBasicASCII() ?? false;\n\t\t\tconst mightContainRTL = this._editors.original.getModel()?.mightContainRTL() ?? false;\n\t\t\tconst renderOptions = RenderOptions.fromEditor(this._editors.modified);\n\n\t\t\tfor (const a of alignmentsVal) {\n\t\t\t\tif (a.diff && !renderSideBySide && (!this._options.useTrueInlineDiffRendering.read(reader) || !allowsTrueInlineDiffRendering(a.diff))) {\n\t\t\t\t\tif (!a.originalRange.isEmpty) {\n\t\t\t\t\t\toriginalModelTokenizationCompleted.read(reader); // Update view-zones once tokenization completes\n\n\t\t\t\t\t\tconst deletedCodeDomNode = document.createElement('div');\n\t\t\t\t\t\tdeletedCodeDomNode.classList.add('view-lines', 'line-delete', 'monaco-mouse-cursor-text');\n\t\t\t\t\t\tconst originalModel = this._editors.original.getModel()!;\n\t\t\t\t\t\t// `a.originalRange` can be out of bound when the diff has not been updated yet.\n\t\t\t\t\t\t// In this case, we do an early return.\n\t\t\t\t\t\t// TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n\t\t\t\t\t\tif (a.originalRange.endLineNumberExclusive - 1 > originalModel.getLineCount()) {\n\t\t\t\t\t\t\treturn { orig: origViewZones, mod: modViewZones };\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst source = new LineSource(\n\t\t\t\t\t\t\ta.originalRange.mapToLineArray(l => originalModel.tokenization.getLineTokens(l)),\n\t\t\t\t\t\t\ta.originalRange.mapToLineArray(_ => lineBreakData[lineBreakDataIdx++]),\n\t\t\t\t\t\t\tmightContainNonBasicASCII,\n\t\t\t\t\t\t\tmightContainRTL,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst decorations: InlineDecoration[] = [];\n\t\t\t\t\t\tfor (const i of a.diff.innerChanges || []) {\n\t\t\t\t\t\t\tdecorations.push(new InlineDecoration(\n\t\t\t\t\t\t\t\ti.originalRange.delta(-(a.diff.original.startLineNumber - 1)),\n\t\t\t\t\t\t\t\tdiffDeleteDecoration.className!,\n\t\t\t\t\t\t\t\tInlineDecorationType.Regular\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = renderLines(source, renderOptions, decorations, deletedCodeDomNode);\n\n\t\t\t\t\t\tconst marginDomNode = document.createElement('div');\n\t\t\t\t\t\tmarginDomNode.className = 'inline-deleted-margin-view-zone';\n\t\t\t\t\t\tapplyFontInfo(marginDomNode, renderOptions.fontInfo);\n\n\t\t\t\t\t\tif (this._options.renderIndicators.read(reader)) {\n\t\t\t\t\t\t\tfor (let i = 0; i < result.heightInLines; i++) {\n\t\t\t\t\t\t\t\tconst marginElement = document.createElement('div');\n\t\t\t\t\t\t\t\tmarginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n\t\t\t\t\t\t\t\tmarginElement.setAttribute('style', `position:absolute;top:${i * modLineHeight}px;width:${renderOptions.lineDecorationsWidth}px;height:${modLineHeight}px;right:0;`);\n\t\t\t\t\t\t\t\tmarginDomNode.appendChild(marginElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet zoneId: string | undefined = undefined;\n\t\t\t\t\t\talignmentViewZonesDisposables.add(\n\t\t\t\t\t\t\tnew InlineDiffDeletedCodeMargin(\n\t\t\t\t\t\t\t\t() => assertIsDefined(zoneId),\n\t\t\t\t\t\t\t\tmarginDomNode,\n\t\t\t\t\t\t\t\tthis._editors.modified,\n\t\t\t\t\t\t\t\ta.diff,\n\t\t\t\t\t\t\t\tthis._diffEditorWidget,\n\t\t\t\t\t\t\t\tresult.viewLineCounts,\n\t\t\t\t\t\t\t\tthis._editors.original.getModel()!,\n\t\t\t\t\t\t\t\tthis._contextMenuService,\n\t\t\t\t\t\t\t\tthis._clipboardService,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfor (let i = 0; i < result.viewLineCounts.length; i++) {\n\t\t\t\t\t\t\tconst count = result.viewLineCounts[i];\n\t\t\t\t\t\t\t// Account for wrapped lines in the (collapsed) original editor (which doesn't wrap lines).\n\t\t\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\t\t\torigViewZones.push({\n\t\t\t\t\t\t\t\t\tafterLineNumber: a.originalRange.startLineNumber + i,\n\t\t\t\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\t\t\t\theightInPx: (count - 1) * modLineHeight,\n\t\t\t\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodViewZones.push({\n\t\t\t\t\t\t\tafterLineNumber: a.modifiedRange.startLineNumber - 1,\n\t\t\t\t\t\t\tdomNode: deletedCodeDomNode,\n\t\t\t\t\t\t\theightInPx: result.heightInLines * modLineHeight,\n\t\t\t\t\t\t\tminWidthInPx: result.minWidthInPx,\n\t\t\t\t\t\t\tmarginDomNode,\n\t\t\t\t\t\t\tsetZoneId(id) { zoneId = id; },\n\t\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst marginDomNode = document.createElement('div');\n\t\t\t\t\tmarginDomNode.className = 'gutter-delete';\n\n\t\t\t\t\torigViewZones.push({\n\t\t\t\t\t\tafterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\theightInPx: a.modifiedHeightInPx,\n\t\t\t\t\t\tmarginDomNode,\n\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst delta = a.modifiedHeightInPx - a.originalHeightInPx;\n\t\t\t\t\tif (delta > 0) {\n\t\t\t\t\t\tif (syncedMovedText?.lineRangeMapping.original.delta(-1).deltaLength(2).contains(a.originalRange.endLineNumberExclusive - 1)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\torigViewZones.push({\n\t\t\t\t\t\t\tafterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\t\theightInPx: delta,\n\t\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (syncedMovedText?.lineRangeMapping.modified.delta(-1).deltaLength(2).contains(a.modifiedRange.endLineNumberExclusive - 1)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfunction createViewZoneMarginArrow(): HTMLElement {\n\t\t\t\t\t\t\tconst arrow = document.createElement('div');\n\t\t\t\t\t\t\tarrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n\t\t\t\t\t\t\tstore.add(addDisposableListener(arrow, 'mousedown', e => e.stopPropagation()));\n\t\t\t\t\t\t\tstore.add(addDisposableListener(arrow, 'click', e => {\n\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t_diffEditorWidget.revert(a.diff!);\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\treturn $('div', {}, arrow);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet marginDomNode: HTMLElement | undefined = undefined;\n\t\t\t\t\t\tif (a.diff && a.diff.modified.isEmpty && this._options.shouldRenderOldRevertArrows.read(reader)) {\n\t\t\t\t\t\t\tmarginDomNode = createViewZoneMarginArrow();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodViewZones.push({\n\t\t\t\t\t\t\tafterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\t\theightInPx: -delta,\n\t\t\t\t\t\t\tmarginDomNode,\n\t\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const a of alignmentsSyncedMovedText.read(reader) ?? []) {\n\t\t\t\tif (!syncedMovedText?.lineRangeMapping.original.intersect(a.originalRange)\n\t\t\t\t\t|| !syncedMovedText?.lineRangeMapping.modified.intersect(a.modifiedRange)) {\n\t\t\t\t\t// ignore unrelated alignments outside the synced moved text\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst delta = a.modifiedHeightInPx - a.originalHeightInPx;\n\t\t\t\tif (delta > 0) {\n\t\t\t\t\torigViewZones.push({\n\t\t\t\t\t\tafterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\theightInPx: delta,\n\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmodViewZones.push({\n\t\t\t\t\t\tafterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\theightInPx: -delta,\n\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { orig: origViewZones, mod: modViewZones };\n\t\t});\n\n\t\tlet ignoreChange = false;\n\t\tthis._register(this._editors.original.onDidScrollChange(e => {\n\t\t\tif (e.scrollLeftChanged && !ignoreChange) {\n\t\t\t\tignoreChange = true;\n\t\t\t\tthis._editors.modified.setScrollLeft(e.scrollLeft);\n\t\t\t\tignoreChange = false;\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._editors.modified.onDidScrollChange(e => {\n\t\t\tif (e.scrollLeftChanged && !ignoreChange) {\n\t\t\t\tignoreChange = true;\n\t\t\t\tthis._editors.original.setScrollLeft(e.scrollLeft);\n\t\t\t\tignoreChange = false;\n\t\t\t}\n\t\t}));\n\n\t\tthis._originalScrollTop = observableFromEvent(this._editors.original.onDidScrollChange, () => /** @description original.getScrollTop */ this._editors.original.getScrollTop());\n\t\tthis._modifiedScrollTop = observableFromEvent(this._editors.modified.onDidScrollChange, () => /** @description modified.getScrollTop */ this._editors.modified.getScrollTop());\n\n\t\t// origExtraHeight + origOffset - origScrollTop = modExtraHeight + modOffset - modScrollTop\n\n\t\t// origScrollTop = origExtraHeight + origOffset - modExtraHeight - modOffset + modScrollTop\n\t\t// modScrollTop = modExtraHeight + modOffset - origExtraHeight - origOffset + origScrollTop\n\n\t\t// origOffset - modOffset = heightOfLines(1..Y) - heightOfLines(1..X)\n\t\t// origScrollTop >= 0, modScrollTop >= 0\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update scroll modified */\n\t\t\tconst newScrollTopModified = this._originalScrollTop.read(reader)\n\t\t\t\t- (this._originalScrollOffsetAnimated.get() - this._modifiedScrollOffsetAnimated.read(reader))\n\t\t\t\t- (this._originalTopPadding.get() - this._modifiedTopPadding.read(reader));\n\t\t\tif (newScrollTopModified !== this._editors.modified.getScrollTop()) {\n\t\t\t\tthis._editors.modified.setScrollTop(newScrollTopModified, ScrollType.Immediate);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update scroll original */\n\t\t\tconst newScrollTopOriginal = this._modifiedScrollTop.read(reader)\n\t\t\t\t- (this._modifiedScrollOffsetAnimated.get() - this._originalScrollOffsetAnimated.read(reader))\n\t\t\t\t- (this._modifiedTopPadding.get() - this._originalTopPadding.read(reader));\n\t\t\tif (newScrollTopOriginal !== this._editors.original.getScrollTop()) {\n\t\t\t\tthis._editors.original.setScrollTop(newScrollTopOriginal, ScrollType.Immediate);\n\t\t\t}\n\t\t}));\n\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update editor top offsets */\n\t\t\tconst m = this._diffModel.read(reader)?.movedTextToCompare.read(reader);\n\n\t\t\tlet deltaOrigToMod = 0;\n\t\t\tif (m) {\n\t\t\t\tconst trueTopOriginal = this._editors.original.getTopForLineNumber(m.lineRangeMapping.original.startLineNumber, true) - this._originalTopPadding.get();\n\t\t\t\tconst trueTopModified = this._editors.modified.getTopForLineNumber(m.lineRangeMapping.modified.startLineNumber, true) - this._modifiedTopPadding.get();\n\t\t\t\tdeltaOrigToMod = trueTopModified - trueTopOriginal;\n\t\t\t}\n\n\t\t\tif (deltaOrigToMod > 0) {\n\t\t\t\tthis._modifiedTopPadding.set(0, undefined);\n\t\t\t\tthis._originalTopPadding.set(deltaOrigToMod, undefined);\n\t\t\t} else if (deltaOrigToMod < 0) {\n\t\t\t\tthis._modifiedTopPadding.set(-deltaOrigToMod, undefined);\n\t\t\t\tthis._originalTopPadding.set(0, undefined);\n\t\t\t} else {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._modifiedTopPadding.set(0, undefined);\n\t\t\t\t\tthis._originalTopPadding.set(0, undefined);\n\t\t\t\t}, 400);\n\t\t\t}\n\n\t\t\tif (this._editors.modified.hasTextFocus()) {\n\t\t\t\tthis._originalScrollOffset.set(this._modifiedScrollOffset.get() - deltaOrigToMod, undefined, true);\n\t\t\t} else {\n\t\t\t\tthis._modifiedScrollOffset.set(this._originalScrollOffset.get() + deltaOrigToMod, undefined, true);\n\t\t\t}\n\t\t}));\n\t}\n}\n\ninterface ILineRangeAlignment {\n\toriginalRange: LineRange;\n\tmodifiedRange: LineRange;\n\n\t// accounts for foreign viewzones and line wrapping\n\toriginalHeightInPx: number;\n\tmodifiedHeightInPx: number;\n\n\t/**\n\t * If this range alignment is a direct result of a diff, then this is the diff's line mapping.\n\t * Only used for inline-view.\n\t */\n\tdiff?: DetailedLineRangeMapping;\n}\n\nfunction computeRangeAlignment(\n\toriginalEditor: CodeEditorWidget,\n\tmodifiedEditor: CodeEditorWidget,\n\tdiffs: readonly DiffMapping[],\n\toriginalEditorAlignmentViewZones: ReadonlySet<string>,\n\tmodifiedEditorAlignmentViewZones: ReadonlySet<string>,\n\tinnerHunkAlignment: boolean,\n): ILineRangeAlignment[] {\n\tconst originalLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(originalEditor, originalEditorAlignmentViewZones));\n\tconst modifiedLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(modifiedEditor, modifiedEditorAlignmentViewZones));\n\n\tconst origLineHeight = originalEditor.getOption(EditorOption.lineHeight);\n\tconst modLineHeight = modifiedEditor.getOption(EditorOption.lineHeight);\n\n\tconst result: ILineRangeAlignment[] = [];\n\n\tlet lastOriginalLineNumber = 0;\n\tlet lastModifiedLineNumber = 0;\n\n\tfunction handleAlignmentsOutsideOfDiffs(untilOriginalLineNumberExclusive: number, untilModifiedLineNumberExclusive: number) {\n\t\twhile (true) {\n\t\t\tlet origNext = originalLineHeightOverrides.peek();\n\t\t\tlet modNext = modifiedLineHeightOverrides.peek();\n\t\t\tif (origNext && origNext.lineNumber >= untilOriginalLineNumberExclusive) {\n\t\t\t\torigNext = undefined;\n\t\t\t}\n\t\t\tif (modNext && modNext.lineNumber >= untilModifiedLineNumberExclusive) {\n\t\t\t\tmodNext = undefined;\n\t\t\t}\n\t\t\tif (!origNext && !modNext) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst distOrig = origNext ? origNext.lineNumber - lastOriginalLineNumber : Number.MAX_VALUE;\n\t\t\tconst distNext = modNext ? modNext.lineNumber - lastModifiedLineNumber : Number.MAX_VALUE;\n\n\t\t\tif (distOrig < distNext) {\n\t\t\t\toriginalLineHeightOverrides.dequeue();\n\t\t\t\tmodNext = {\n\t\t\t\t\tlineNumber: origNext!.lineNumber - lastOriginalLineNumber + lastModifiedLineNumber,\n\t\t\t\t\theightInPx: 0,\n\t\t\t\t};\n\t\t\t} else if (distOrig > distNext) {\n\t\t\t\tmodifiedLineHeightOverrides.dequeue();\n\t\t\t\torigNext = {\n\t\t\t\t\tlineNumber: modNext!.lineNumber - lastModifiedLineNumber + lastOriginalLineNumber,\n\t\t\t\t\theightInPx: 0,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\toriginalLineHeightOverrides.dequeue();\n\t\t\t\tmodifiedLineHeightOverrides.dequeue();\n\t\t\t}\n\n\t\t\tresult.push({\n\t\t\t\toriginalRange: LineRange.ofLength(origNext!.lineNumber, 1),\n\t\t\t\tmodifiedRange: LineRange.ofLength(modNext!.lineNumber, 1),\n\t\t\t\toriginalHeightInPx: origLineHeight + origNext!.heightInPx,\n\t\t\t\tmodifiedHeightInPx: modLineHeight + modNext!.heightInPx,\n\t\t\t\tdiff: undefined,\n\t\t\t});\n\t\t}\n\t}\n\n\tfor (const m of diffs) {\n\t\tconst c = m.lineRangeMapping;\n\t\thandleAlignmentsOutsideOfDiffs(c.original.startLineNumber, c.modified.startLineNumber);\n\n\t\tlet first = true;\n\t\tlet lastModLineNumber = c.modified.startLineNumber;\n\t\tlet lastOrigLineNumber = c.original.startLineNumber;\n\n\t\tfunction emitAlignment(origLineNumberExclusive: number, modLineNumberExclusive: number, forceAlignment = false) {\n\t\t\tif (origLineNumberExclusive < lastOrigLineNumber || modLineNumberExclusive < lastModLineNumber) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tfirst = false;\n\t\t\t} else if (!forceAlignment && (origLineNumberExclusive === lastOrigLineNumber || modLineNumberExclusive === lastModLineNumber)) {\n\t\t\t\t// This causes a re-alignment of an already aligned line.\n\t\t\t\t// However, we don't care for the final alignment.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst originalRange = new LineRange(lastOrigLineNumber, origLineNumberExclusive);\n\t\t\tconst modifiedRange = new LineRange(lastModLineNumber, modLineNumberExclusive);\n\t\t\tif (originalRange.isEmpty && modifiedRange.isEmpty) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst originalAdditionalHeight = originalLineHeightOverrides\n\t\t\t\t.takeWhile(v => v.lineNumber < origLineNumberExclusive)\n\t\t\t\t?.reduce((p, c) => p + c.heightInPx, 0) ?? 0;\n\t\t\tconst modifiedAdditionalHeight = modifiedLineHeightOverrides\n\t\t\t\t.takeWhile(v => v.lineNumber < modLineNumberExclusive)\n\t\t\t\t?.reduce((p, c) => p + c.heightInPx, 0) ?? 0;\n\n\t\t\tresult.push({\n\t\t\t\toriginalRange,\n\t\t\t\tmodifiedRange,\n\t\t\t\toriginalHeightInPx: originalRange.length * origLineHeight + originalAdditionalHeight,\n\t\t\t\tmodifiedHeightInPx: modifiedRange.length * modLineHeight + modifiedAdditionalHeight,\n\t\t\t\tdiff: m.lineRangeMapping,\n\t\t\t});\n\n\t\t\tlastOrigLineNumber = origLineNumberExclusive;\n\t\t\tlastModLineNumber = modLineNumberExclusive;\n\t\t}\n\n\t\tif (innerHunkAlignment) {\n\t\t\tfor (const i of c.innerChanges || []) {\n\t\t\t\tif (i.originalRange.startColumn > 1 && i.modifiedRange.startColumn > 1) {\n\t\t\t\t\t// There is some unmodified text on this line before the diff\n\t\t\t\t\temitAlignment(i.originalRange.startLineNumber, i.modifiedRange.startLineNumber);\n\t\t\t\t}\n\t\t\t\tconst originalModel = originalEditor.getModel()!;\n\t\t\t\t// When the diff is invalid, the ranges might be out of bounds (this should be fixed in the diff model by applying edits directly).\n\t\t\t\tconst maxColumn = i.originalRange.endLineNumber <= originalModel.getLineCount() ? originalModel.getLineMaxColumn(i.originalRange.endLineNumber) : Number.MAX_SAFE_INTEGER;\n\t\t\t\tif (i.originalRange.endColumn < maxColumn) {\n\t\t\t\t\t// // There is some unmodified text on this line after the diff\n\t\t\t\t\temitAlignment(i.originalRange.endLineNumber, i.modifiedRange.endLineNumber);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\temitAlignment(c.original.endLineNumberExclusive, c.modified.endLineNumberExclusive, true);\n\n\t\tlastOriginalLineNumber = c.original.endLineNumberExclusive;\n\t\tlastModifiedLineNumber = c.modified.endLineNumberExclusive;\n\t}\n\thandleAlignmentsOutsideOfDiffs(Number.MAX_VALUE, Number.MAX_VALUE);\n\n\treturn result;\n}\n\ninterface AdditionalLineHeightInfo {\n\tlineNumber: number;\n\theightInPx: number;\n}\n\nfunction getAdditionalLineHeights(editor: CodeEditorWidget, viewZonesToIgnore: ReadonlySet<string>): readonly AdditionalLineHeightInfo[] {\n\tconst viewZoneHeights: { lineNumber: number; heightInPx: number }[] = [];\n\tconst wrappingZoneHeights: { lineNumber: number; heightInPx: number }[] = [];\n\n\tconst hasWrapping = editor.getOption(EditorOption.wrappingInfo).wrappingColumn !== -1;\n\tconst coordinatesConverter = editor._getViewModel()!.coordinatesConverter;\n\tconst editorLineHeight = editor.getOption(EditorOption.lineHeight);\n\tif (hasWrapping) {\n\t\tfor (let i = 1; i <= editor.getModel()!.getLineCount(); i++) {\n\t\t\tconst lineCount = coordinatesConverter.getModelLineViewLineCount(i);\n\t\t\tif (lineCount > 1) {\n\t\t\t\twrappingZoneHeights.push({ lineNumber: i, heightInPx: editorLineHeight * (lineCount - 1) });\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const w of editor.getWhitespaces()) {\n\t\tif (viewZonesToIgnore.has(w.id)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst modelLineNumber = w.afterLineNumber === 0 ? 0 : coordinatesConverter.convertViewPositionToModelPosition(\n\t\t\tnew Position(w.afterLineNumber, 1)\n\t\t).lineNumber;\n\t\tviewZoneHeights.push({ lineNumber: modelLineNumber, heightInPx: w.height });\n\t}\n\n\tconst result = joinCombine(\n\t\tviewZoneHeights,\n\t\twrappingZoneHeights,\n\t\tv => v.lineNumber,\n\t\t(v1, v2) => ({ lineNumber: v1.lineNumber, heightInPx: v1.heightInPx + v2.heightInPx })\n\t);\n\n\treturn result;\n}\n\nexport function allowsTrueInlineDiffRendering(mapping: DetailedLineRangeMapping): boolean {\n\tif (!mapping.innerChanges) {\n\t\treturn false;\n\t}\n\treturn mapping.innerChanges.every(c =>\n\t\t(rangeIsSingleLine(c.modifiedRange) && rangeIsSingleLine(c.originalRange))\n\t\t|| c.originalRange.equalsRange(new Range(1, 1, 1, 1))\n\t);\n}\n\nfunction rangeIsSingleLine(range: Range): boolean {\n\treturn range.startLineNumber === range.endLineNumber;\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,GAAG,6BAA6B;AACzC,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AACjC,SAAS,eAAe;AACxB,SAAS,YAAY,uBAAuB;AAC5C,SAAS,aAAa,SAAS,SAAS,kBAAkB,qBAAqB,uBAAuB;AACtG,SAAS,iBAAiB;AAC1B,SAAS,uBAAuB;AAChC,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,sBAAsB,sBAAsB;AACrD,SAAS,yBAAyB;AAClC,SAAS,qBAAqB,mBAAmB;AACjD,SAAS,wBAAwB;AACjC,SAAS,mCAAmC;AAC5C,SAAS,YAAY,eAAe,mBAAmB;AACvD,SAAS,qBAAqB,oBAAoB,mBAAmB;AACrE,SAAS,oBAAoB;AAC7B,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,gCAAgC;AACzC,SAAS,kBAAkB;AAC3B,SAAS,mCAAmC;AAC5C,SAAS,kBAAkB,4BAA4B;AACvD,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC,SAAS,yBAAyB;AAClC,SAAS,aAAa;AASf,IAAM,sBAAN,cAAkC,WAAW;AAAA,EAanD,YACkB,eACA,UACA,YACA,UACA,mBACA,+BACA,wBACA,uBACmB,mBACE,qBACrC;AACD,UAAM;AAXW;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACmB;AACE;AAItC,UAAM,QAAQ,gBAAgB,6BAA6B,CAAC;AAE5D,UAAM,oBAAoB,KAAK,UAAU,IAAI,iBAAiB,MAAM;AACnE,YAAM,IAAI,MAAM,IAAI,IAAI,GAAG,MAAS;AAAA,IACrC,GAAG,CAAC,CAAC;AAEL,SAAK,UAAU,KAAK,SAAS,SAAS,qBAAqB,CAAC,UAAU;AAAE,UAAI,CAAC,KAAK,8BAA8B,GAAG;AAAE,0BAAkB,SAAS;AAAA,MAAG;AAAA,IAAE,CAAC,CAAC;AACvJ,SAAK,UAAU,KAAK,SAAS,SAAS,qBAAqB,CAAC,UAAU;AAAE,UAAI,CAAC,KAAK,8BAA8B,GAAG;AAAE,0BAAkB,SAAS;AAAA,MAAG;AAAA,IAAE,CAAC,CAAC;AACvJ,SAAK,UAAU,KAAK,SAAS,SAAS,yBAAyB,CAAC,SAAS;AACxE,UAAI,KAAK,WAAW,aAAa,YAAY,KAAK,KAAK,WAAW,aAAa,UAAU,GAAG;AAAE,0BAAkB,SAAS;AAAA,MAAG;AAAA,IAC7H,CAAC,CAAC;AACF,SAAK,UAAU,KAAK,SAAS,SAAS,yBAAyB,CAAC,SAAS;AACxE,UAAI,KAAK,WAAW,aAAa,YAAY,KAAK,KAAK,WAAW,aAAa,UAAU,GAAG;AAAE,0BAAkB,SAAS;AAAA,MAAG;AAAA,IAC7H,CAAC,CAAC;AAEF,UAAM,qCAAqC,KAAK,WAAW;AAAA,MAAI,OAC9D,IAAI,oBAAoB,MAAM,EAAE,MAAM,SAAS,mBAAmB,MAAM,EAAE,MAAM,SAAS,aAAa,gCAAgC,4BAA4B,SAAS,IAAI;AAAA,IAChL,EAAE,IAAI,CAAC,GAAG,WAAW,GAAG,KAAK,MAAM,CAAC;AAEpC,UAAM,aAAa,QAAsC,CAAC,WAAW;AAEpE,YAAM,YAAY,KAAK,WAAW,KAAK,MAAM;AAC7C,YAAM,OAAO,WAAW,KAAK,KAAK,MAAM;AACxC,UAAI,CAAC,aAAa,CAAC,MAAM;AAAE,eAAO;AAAA,MAAM;AACxC,YAAM,KAAK,MAAM;AACjB,YAAM,mBAAmB,KAAK,SAAS,iBAAiB,KAAK,MAAM;AACnE,YAAM,qBAAqB;AAC3B,aAAO;AAAA,QACN,KAAK,SAAS;AAAA,QACd,KAAK,SAAS;AAAA,QACd,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL;AAAA,MACD;AAAA,IACD,CAAC;AAED,UAAM,4BAA4B,QAAsC,CAAC,WAAW;AAEnF,YAAM,kBAAkB,KAAK,WAAW,KAAK,MAAM,GAAG,mBAAmB,KAAK,MAAM;AACpF,UAAI,CAAC,iBAAiB;AAAE,eAAO;AAAA,MAAM;AACrC,YAAM,KAAK,MAAM;AACjB,YAAM,WAAW,gBAAgB,QAAQ,IAAI,OAAK,IAAI,YAAY,CAAC,CAAC;AAEpE,aAAO;AAAA,QACN,KAAK,SAAS;AAAA,QACd,KAAK,SAAS;AAAA,QACd;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL;AAAA,MACD;AAAA,IACD,CAAC;AAED,aAAS,qBAAkC;AAC1C,YAAM,IAAI,SAAS,cAAc,KAAK;AACtC,QAAE,YAAY;AACd,aAAO;AAAA,IACR;AAJS;AAMT,UAAM,gCAAgC,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAC1E,SAAK,YAAY,iBAA8E,MAAM,CAAC,QAAQ,UAAU;AACvH,oCAA8B,MAAM;AAEpC,YAAM,gBAAgB,WAAW,KAAK,MAAM,KAAK,CAAC;AAElD,YAAM,gBAAuC,CAAC;AAC9C,YAAM,eAAsC,CAAC;AAE7C,YAAM,wBAAwB,KAAK,oBAAoB,KAAK,MAAM;AAClE,UAAI,wBAAwB,GAAG;AAC9B,qBAAa,KAAK;AAAA,UACjB,iBAAiB;AAAA,UACjB,SAAS,SAAS,cAAc,KAAK;AAAA,UACrC,YAAY;AAAA,UACZ,mBAAmB;AAAA,UACnB,mBAAmB;AAAA,QACpB,CAAC;AAAA,MACF;AACA,YAAM,wBAAwB,KAAK,oBAAoB,KAAK,MAAM;AAClE,UAAI,wBAAwB,GAAG;AAC9B,sBAAc,KAAK;AAAA,UAClB,iBAAiB;AAAA,UACjB,SAAS,SAAS,cAAc,KAAK;AAAA,UACrC,YAAY;AAAA,UACZ,mBAAmB;AAAA,UACnB,mBAAmB;AAAA,QACpB,CAAC;AAAA,MACF;AAEA,YAAM,mBAAmB,KAAK,SAAS,iBAAiB,KAAK,MAAM;AAEnE,YAAM,gCAAgC,CAAC,mBAAmB,KAAK,SAAS,SAAS,cAAc,GAAG,yBAAyB,IAAI;AAC/H,UAAI,+BAA+B;AAClC,cAAM,gBAAgB,KAAK,SAAS,SAAS,SAAS;AACtD,mBAAW,KAAK,eAAe;AAC9B,cAAI,EAAE,MAAM;AACX,qBAAS,IAAI,EAAE,cAAc,iBAAiB,IAAI,EAAE,cAAc,wBAAwB,KAAK;AAI9F,kBAAI,IAAI,cAAc,aAAa,GAAG;AACrC,uBAAO,EAAE,MAAM,eAAe,KAAK,aAAa;AAAA,cACjD;AACA,6CAA+B,WAAW,cAAc,eAAe,CAAC,GAAG,MAAM,IAAI;AAAA,YACtF;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAEA,YAAM,gBAAgB,+BAA+B,SAAS,KAAK,CAAC;AACpE,UAAI,mBAAmB;AAEvB,YAAM,gBAAgB,KAAK,SAAS,SAAS,UAAU,aAAa,UAAU;AAE9E,YAAM,kBAAkB,KAAK,WAAW,KAAK,MAAM,GAAG,mBAAmB,KAAK,MAAM;AAEpF,YAAM,4BAA4B,KAAK,SAAS,SAAS,SAAS,GAAG,0BAA0B,KAAK;AACpG,YAAM,kBAAkB,KAAK,SAAS,SAAS,SAAS,GAAG,gBAAgB,KAAK;AAChF,YAAM,gBAAgB,cAAc,WAAW,KAAK,SAAS,QAAQ;AAErE,iBAAW,KAAK,eAAe;AAC9B,YAAI,EAAE,QAAQ,CAAC,qBAAqB,CAAC,KAAK,SAAS,2BAA2B,KAAK,MAAM,KAAK,CAAC,8BAA8B,EAAE,IAAI,IAAI;AACtI,cAAI,CAAC,EAAE,cAAc,SAAS;AAC7B,+CAAmC,KAAK,MAAM;AAE9C,kBAAM,qBAAqB,SAAS,cAAc,KAAK;AACvD,+BAAmB,UAAU,IAAI,cAAc,eAAe,0BAA0B;AACxF,kBAAM,gBAAgB,KAAK,SAAS,SAAS,SAAS;AAItD,gBAAI,EAAE,cAAc,yBAAyB,IAAI,cAAc,aAAa,GAAG;AAC9E,qBAAO,EAAE,MAAM,eAAe,KAAK,aAAa;AAAA,YACjD;AACA,kBAAM,SAAS,IAAI;AAAA,cAClB,EAAE,cAAc,eAAe,OAAK,cAAc,aAAa,cAAc,CAAC,CAAC;AAAA,cAC/E,EAAE,cAAc,eAAe,OAAK,cAAc,kBAAkB,CAAC;AAAA,cACrE;AAAA,cACA;AAAA,YACD;AACA,kBAAM,cAAkC,CAAC;AACzC,uBAAW,KAAK,EAAE,KAAK,gBAAgB,CAAC,GAAG;AAC1C,0BAAY,KAAK,IAAI;AAAA,gBACpB,EAAE,cAAc,MAAM,EAAE,EAAE,KAAK,SAAS,kBAAkB,EAAE;AAAA,gBAC5D,qBAAqB;AAAA,gBACrB,qBAAqB;AAAA,cACtB,CAAC;AAAA,YACF;AACA,kBAAM,SAAS,YAAY,QAAQ,eAAe,aAAa,kBAAkB;AAEjF,kBAAMA,iBAAgB,SAAS,cAAc,KAAK;AAClD,YAAAA,eAAc,YAAY;AAC1B,0BAAcA,gBAAe,cAAc,QAAQ;AAEnD,gBAAI,KAAK,SAAS,iBAAiB,KAAK,MAAM,GAAG;AAChD,uBAAS,IAAI,GAAG,IAAI,OAAO,eAAe,KAAK;AAC9C,sBAAM,gBAAgB,SAAS,cAAc,KAAK;AAClD,8BAAc,YAAY,eAAe,UAAU,YAAY,cAAc,CAAC;AAC9E,8BAAc,aAAa,SAAS,yBAAyB,IAAI,aAAa,YAAY,cAAc,oBAAoB,aAAa,aAAa,aAAa;AACnK,gBAAAA,eAAc,YAAY,aAAa;AAAA,cACxC;AAAA,YACD;AAEA,gBAAI,SAA6B;AACjC,0CAA8B;AAAA,cAC7B,IAAI;AAAA,gBACH,MAAM,gBAAgB,MAAM;AAAA,gBAC5BA;AAAA,gBACA,KAAK,SAAS;AAAA,gBACd,EAAE;AAAA,gBACF,KAAK;AAAA,gBACL,OAAO;AAAA,gBACP,KAAK,SAAS,SAAS,SAAS;AAAA,gBAChC,KAAK;AAAA,gBACL,KAAK;AAAA,cACN;AAAA,YACD;AAEA,qBAAS,IAAI,GAAG,IAAI,OAAO,eAAe,QAAQ,KAAK;AACtD,oBAAM,QAAQ,OAAO,eAAe,CAAC;AAErC,kBAAI,QAAQ,GAAG;AACd,8BAAc,KAAK;AAAA,kBAClB,iBAAiB,EAAE,cAAc,kBAAkB;AAAA,kBACnD,SAAS,mBAAmB;AAAA,kBAC5B,aAAa,QAAQ,KAAK;AAAA,kBAC1B,mBAAmB;AAAA,kBACnB,mBAAmB;AAAA,gBACpB,CAAC;AAAA,cACF;AAAA,YACD;AAEA,yBAAa,KAAK;AAAA,cACjB,iBAAiB,EAAE,cAAc,kBAAkB;AAAA,cACnD,SAAS;AAAA,cACT,YAAY,OAAO,gBAAgB;AAAA,cACnC,cAAc,OAAO;AAAA,cACrB,eAAAA;AAAA,cACA,UAAU,IAAI;AAAE,yBAAS;AAAA,cAAI;AAAA,cAC7B,mBAAmB;AAAA,cACnB,mBAAmB;AAAA,YACpB,CAAC;AAAA,UACF;AAEA,gBAAM,gBAAgB,SAAS,cAAc,KAAK;AAClD,wBAAc,YAAY;AAE1B,wBAAc,KAAK;AAAA,YAClB,iBAAiB,EAAE,cAAc,yBAAyB;AAAA,YAC1D,SAAS,mBAAmB;AAAA,YAC5B,YAAY,EAAE;AAAA,YACd;AAAA,YACA,mBAAmB;AAAA,YACnB,mBAAmB;AAAA,UACpB,CAAC;AAAA,QACF,OAAO;AACN,gBAAM,QAAQ,EAAE,qBAAqB,EAAE;AACvC,cAAI,QAAQ,GAAG;AACd,gBAAI,iBAAiB,iBAAiB,SAAS,MAAM,EAAE,EAAE,YAAY,CAAC,EAAE,SAAS,EAAE,cAAc,yBAAyB,CAAC,GAAG;AAC7H;AAAA,YACD;AAEA,0BAAc,KAAK;AAAA,cAClB,iBAAiB,EAAE,cAAc,yBAAyB;AAAA,cAC1D,SAAS,mBAAmB;AAAA,cAC5B,YAAY;AAAA,cACZ,mBAAmB;AAAA,cACnB,mBAAmB;AAAA,YACpB,CAAC;AAAA,UACF,OAAO;AAKN,gBAASC,6BAAT,WAAkD;AACjD,oBAAM,QAAQ,SAAS,cAAc,KAAK;AAC1C,oBAAM,YAAY,yBAAyB,UAAU,YAAY,QAAQ,UAAU;AACnF,oBAAM,IAAI,sBAAsB,OAAO,aAAa,OAAK,EAAE,gBAAgB,CAAC,CAAC;AAC7E,oBAAM,IAAI,sBAAsB,OAAO,SAAS,OAAK;AACpD,kBAAE,gBAAgB;AAClB,kCAAkB,OAAO,EAAE,IAAK;AAAA,cACjC,CAAC,CAAC;AACF,qBAAO,EAAE,OAAO,CAAC,GAAG,KAAK;AAAA,YAC1B;AATS,4CAAAA;AAAA,mBAAAA,4BAAA;AAJT,gBAAI,iBAAiB,iBAAiB,SAAS,MAAM,EAAE,EAAE,YAAY,CAAC,EAAE,SAAS,EAAE,cAAc,yBAAyB,CAAC,GAAG;AAC7H;AAAA,YACD;AAaA,gBAAI,gBAAyC;AAC7C,gBAAI,EAAE,QAAQ,EAAE,KAAK,SAAS,WAAW,KAAK,SAAS,4BAA4B,KAAK,MAAM,GAAG;AAChG,8BAAgBA,2BAA0B;AAAA,YAC3C;AAEA,yBAAa,KAAK;AAAA,cACjB,iBAAiB,EAAE,cAAc,yBAAyB;AAAA,cAC1D,SAAS,mBAAmB;AAAA,cAC5B,YAAY,CAAC;AAAA,cACb;AAAA,cACA,mBAAmB;AAAA,cACnB,mBAAmB;AAAA,YACpB,CAAC;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAEA,iBAAW,KAAK,0BAA0B,KAAK,MAAM,KAAK,CAAC,GAAG;AAC7D,YAAI,CAAC,iBAAiB,iBAAiB,SAAS,UAAU,EAAE,aAAa,KACrE,CAAC,iBAAiB,iBAAiB,SAAS,UAAU,EAAE,aAAa,GAAG;AAE3E;AAAA,QACD;AAEA,cAAM,QAAQ,EAAE,qBAAqB,EAAE;AACvC,YAAI,QAAQ,GAAG;AACd,wBAAc,KAAK;AAAA,YAClB,iBAAiB,EAAE,cAAc,yBAAyB;AAAA,YAC1D,SAAS,mBAAmB;AAAA,YAC5B,YAAY;AAAA,YACZ,mBAAmB;AAAA,YACnB,mBAAmB;AAAA,UACpB,CAAC;AAAA,QACF,OAAO;AACN,uBAAa,KAAK;AAAA,YACjB,iBAAiB,EAAE,cAAc,yBAAyB;AAAA,YAC1D,SAAS,mBAAmB;AAAA,YAC5B,YAAY,CAAC;AAAA,YACb,mBAAmB;AAAA,YACnB,mBAAmB;AAAA,UACpB,CAAC;AAAA,QACF;AAAA,MACD;AAEA,aAAO,EAAE,MAAM,eAAe,KAAK,aAAa;AAAA,IACjD,CAAC;AAED,QAAI,eAAe;AACnB,SAAK,UAAU,KAAK,SAAS,SAAS,kBAAkB,OAAK;AAC5D,UAAI,EAAE,qBAAqB,CAAC,cAAc;AACzC,uBAAe;AACf,aAAK,SAAS,SAAS,cAAc,EAAE,UAAU;AACjD,uBAAe;AAAA,MAChB;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,KAAK,SAAS,SAAS,kBAAkB,OAAK;AAC5D,UAAI,EAAE,qBAAqB,CAAC,cAAc;AACzC,uBAAe;AACf,aAAK,SAAS,SAAS,cAAc,EAAE,UAAU;AACjD,uBAAe;AAAA,MAChB;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,qBAAqB,oBAAoB,KAAK,SAAS,SAAS,mBAAmB;AAAA;AAAA,MAAgD,KAAK,SAAS,SAAS,aAAa;AAAA,KAAC;AAC7K,SAAK,qBAAqB,oBAAoB,KAAK,SAAS,SAAS,mBAAmB;AAAA;AAAA,MAAgD,KAAK,SAAS,SAAS,aAAa;AAAA,KAAC;AAU7K,SAAK,UAAU,QAAQ,YAAU;AAEhC,YAAM,uBAAuB,KAAK,mBAAmB,KAAK,MAAM,KAC5D,KAAK,8BAA8B,IAAI,IAAI,KAAK,8BAA8B,KAAK,MAAM,MACzF,KAAK,oBAAoB,IAAI,IAAI,KAAK,oBAAoB,KAAK,MAAM;AACzE,UAAI,yBAAyB,KAAK,SAAS,SAAS,aAAa,GAAG;AACnE,aAAK,SAAS,SAAS,aAAa,sBAAsB,WAAW,SAAS;AAAA,MAC/E;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,QAAQ,YAAU;AAEhC,YAAM,uBAAuB,KAAK,mBAAmB,KAAK,MAAM,KAC5D,KAAK,8BAA8B,IAAI,IAAI,KAAK,8BAA8B,KAAK,MAAM,MACzF,KAAK,oBAAoB,IAAI,IAAI,KAAK,oBAAoB,KAAK,MAAM;AACzE,UAAI,yBAAyB,KAAK,SAAS,SAAS,aAAa,GAAG;AACnE,aAAK,SAAS,SAAS,aAAa,sBAAsB,WAAW,SAAS;AAAA,MAC/E;AAAA,IACD,CAAC,CAAC;AAGF,SAAK,UAAU,QAAQ,YAAU;AAEhC,YAAM,IAAI,KAAK,WAAW,KAAK,MAAM,GAAG,mBAAmB,KAAK,MAAM;AAEtE,UAAI,iBAAiB;AACrB,UAAI,GAAG;AACN,cAAM,kBAAkB,KAAK,SAAS,SAAS,oBAAoB,EAAE,iBAAiB,SAAS,iBAAiB,IAAI,IAAI,KAAK,oBAAoB,IAAI;AACrJ,cAAM,kBAAkB,KAAK,SAAS,SAAS,oBAAoB,EAAE,iBAAiB,SAAS,iBAAiB,IAAI,IAAI,KAAK,oBAAoB,IAAI;AACrJ,yBAAiB,kBAAkB;AAAA,MACpC;AAEA,UAAI,iBAAiB,GAAG;AACvB,aAAK,oBAAoB,IAAI,GAAG,MAAS;AACzC,aAAK,oBAAoB,IAAI,gBAAgB,MAAS;AAAA,MACvD,WAAW,iBAAiB,GAAG;AAC9B,aAAK,oBAAoB,IAAI,CAAC,gBAAgB,MAAS;AACvD,aAAK,oBAAoB,IAAI,GAAG,MAAS;AAAA,MAC1C,OAAO;AACN,mBAAW,MAAM;AAChB,eAAK,oBAAoB,IAAI,GAAG,MAAS;AACzC,eAAK,oBAAoB,IAAI,GAAG,MAAS;AAAA,QAC1C,GAAG,GAAG;AAAA,MACP;AAEA,UAAI,KAAK,SAAS,SAAS,aAAa,GAAG;AAC1C,aAAK,sBAAsB,IAAI,KAAK,sBAAsB,IAAI,IAAI,gBAAgB,QAAW,IAAI;AAAA,MAClG,OAAO;AACN,aAAK,sBAAsB,IAAI,KAAK,sBAAsB,IAAI,IAAI,gBAAgB,QAAW,IAAI;AAAA,MAClG;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAvbD,OAyCoD;AAAA;AAAA;AAAA,EAClC,sBAAsB,gBAAgB,MAAM,CAAC;AAAA,EAC7C;AAAA,EACA,wBAAwB,gBAAiC,MAAM,CAAC;AAAA,EAChE,gCAAgC,mBAAmB,KAAK,eAAe,KAAK,uBAAuB,KAAK,MAAM;AAAA,EAE9G,sBAAsB,gBAAgB,MAAM,CAAC;AAAA,EAC7C;AAAA,EACA,wBAAwB,gBAAiC,MAAM,CAAC;AAAA,EAChE,gCAAgC,mBAAmB,KAAK,eAAe,KAAK,uBAAuB,KAAK,MAAM;AAAA,EAE/G;AAoYjB;AA/Ya,sBAAN;AAAA,EAsBJ;AAAA,EACA;AAAA,GAvBU;AAgab,SAAS,sBACR,gBACA,gBACA,OACA,kCACA,kCACA,oBACwB;AACxB,QAAM,8BAA8B,IAAI,WAAW,yBAAyB,gBAAgB,gCAAgC,CAAC;AAC7H,QAAM,8BAA8B,IAAI,WAAW,yBAAyB,gBAAgB,gCAAgC,CAAC;AAE7H,QAAM,iBAAiB,eAAe,UAAU,aAAa,UAAU;AACvE,QAAM,gBAAgB,eAAe,UAAU,aAAa,UAAU;AAEtE,QAAM,SAAgC,CAAC;AAEvC,MAAI,yBAAyB;AAC7B,MAAI,yBAAyB;AAE7B,WAAS,+BAA+B,kCAA0C,kCAA0C;AAC3H,WAAO,MAAM;AACZ,UAAI,WAAW,4BAA4B,KAAK;AAChD,UAAI,UAAU,4BAA4B,KAAK;AAC/C,UAAI,YAAY,SAAS,cAAc,kCAAkC;AACxE,mBAAW;AAAA,MACZ;AACA,UAAI,WAAW,QAAQ,cAAc,kCAAkC;AACtE,kBAAU;AAAA,MACX;AACA,UAAI,CAAC,YAAY,CAAC,SAAS;AAC1B;AAAA,MACD;AAEA,YAAM,WAAW,WAAW,SAAS,aAAa,yBAAyB,OAAO;AAClF,YAAM,WAAW,UAAU,QAAQ,aAAa,yBAAyB,OAAO;AAEhF,UAAI,WAAW,UAAU;AACxB,oCAA4B,QAAQ;AACpC,kBAAU;AAAA,UACT,YAAY,SAAU,aAAa,yBAAyB;AAAA,UAC5D,YAAY;AAAA,QACb;AAAA,MACD,WAAW,WAAW,UAAU;AAC/B,oCAA4B,QAAQ;AACpC,mBAAW;AAAA,UACV,YAAY,QAAS,aAAa,yBAAyB;AAAA,UAC3D,YAAY;AAAA,QACb;AAAA,MACD,OAAO;AACN,oCAA4B,QAAQ;AACpC,oCAA4B,QAAQ;AAAA,MACrC;AAEA,aAAO,KAAK;AAAA,QACX,eAAe,UAAU,SAAS,SAAU,YAAY,CAAC;AAAA,QACzD,eAAe,UAAU,SAAS,QAAS,YAAY,CAAC;AAAA,QACxD,oBAAoB,iBAAiB,SAAU;AAAA,QAC/C,oBAAoB,gBAAgB,QAAS;AAAA,QAC7C,MAAM;AAAA,MACP,CAAC;AAAA,IACF;AAAA,EACD;AA1CS;AA4CT,aAAW,KAAK,OAAO;AAQtB,QAASC,iBAAT,SAAuB,yBAAiC,wBAAgC,iBAAiB,OAAO;AAC/G,UAAI,0BAA0B,sBAAsB,yBAAyB,mBAAmB;AAC/F;AAAA,MACD;AACA,UAAI,OAAO;AACV,gBAAQ;AAAA,MACT,WAAW,CAAC,mBAAmB,4BAA4B,sBAAsB,2BAA2B,oBAAoB;AAG/H;AAAA,MACD;AACA,YAAM,gBAAgB,IAAI,UAAU,oBAAoB,uBAAuB;AAC/E,YAAM,gBAAgB,IAAI,UAAU,mBAAmB,sBAAsB;AAC7E,UAAI,cAAc,WAAW,cAAc,SAAS;AACnD;AAAA,MACD;AAEA,YAAM,2BAA2B,4BAC/B,UAAU,OAAK,EAAE,aAAa,uBAAuB,GACpD,OAAO,CAAC,GAAGC,OAAM,IAAIA,GAAE,YAAY,CAAC,KAAK;AAC5C,YAAM,2BAA2B,4BAC/B,UAAU,OAAK,EAAE,aAAa,sBAAsB,GACnD,OAAO,CAAC,GAAGA,OAAM,IAAIA,GAAE,YAAY,CAAC,KAAK;AAE5C,aAAO,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA,oBAAoB,cAAc,SAAS,iBAAiB;AAAA,QAC5D,oBAAoB,cAAc,SAAS,gBAAgB;AAAA,QAC3D,MAAM,EAAE;AAAA,MACT,CAAC;AAED,2BAAqB;AACrB,0BAAoB;AAAA,IACrB;AAlCS,wBAAAD;AAAA,WAAAA,gBAAA;AAPT,UAAM,IAAI,EAAE;AACZ,mCAA+B,EAAE,SAAS,iBAAiB,EAAE,SAAS,eAAe;AAErF,QAAI,QAAQ;AACZ,QAAI,oBAAoB,EAAE,SAAS;AACnC,QAAI,qBAAqB,EAAE,SAAS;AAsCpC,QAAI,oBAAoB;AACvB,iBAAW,KAAK,EAAE,gBAAgB,CAAC,GAAG;AACrC,YAAI,EAAE,cAAc,cAAc,KAAK,EAAE,cAAc,cAAc,GAAG;AAEvE,UAAAA,eAAc,EAAE,cAAc,iBAAiB,EAAE,cAAc,eAAe;AAAA,QAC/E;AACA,cAAM,gBAAgB,eAAe,SAAS;AAE9C,cAAM,YAAY,EAAE,cAAc,iBAAiB,cAAc,aAAa,IAAI,cAAc,iBAAiB,EAAE,cAAc,aAAa,IAAI,OAAO;AACzJ,YAAI,EAAE,cAAc,YAAY,WAAW;AAE1C,UAAAA,eAAc,EAAE,cAAc,eAAe,EAAE,cAAc,aAAa;AAAA,QAC3E;AAAA,MACD;AAAA,IACD;AAEA,IAAAA,eAAc,EAAE,SAAS,wBAAwB,EAAE,SAAS,wBAAwB,IAAI;AAExF,6BAAyB,EAAE,SAAS;AACpC,6BAAyB,EAAE,SAAS;AAAA,EACrC;AACA,iCAA+B,OAAO,WAAW,OAAO,SAAS;AAEjE,SAAO;AACR;AAnIS;AA0IT,SAAS,yBAAyB,QAA0B,mBAA6E;AACxI,QAAM,kBAAgE,CAAC;AACvE,QAAM,sBAAoE,CAAC;AAE3E,QAAM,cAAc,OAAO,UAAU,aAAa,YAAY,EAAE,mBAAmB;AACnF,QAAM,uBAAuB,OAAO,cAAc,EAAG;AACrD,QAAM,mBAAmB,OAAO,UAAU,aAAa,UAAU;AACjE,MAAI,aAAa;AAChB,aAAS,IAAI,GAAG,KAAK,OAAO,SAAS,EAAG,aAAa,GAAG,KAAK;AAC5D,YAAM,YAAY,qBAAqB,0BAA0B,CAAC;AAClE,UAAI,YAAY,GAAG;AAClB,4BAAoB,KAAK,EAAE,YAAY,GAAG,YAAY,oBAAoB,YAAY,GAAG,CAAC;AAAA,MAC3F;AAAA,IACD;AAAA,EACD;AAEA,aAAW,KAAK,OAAO,eAAe,GAAG;AACxC,QAAI,kBAAkB,IAAI,EAAE,EAAE,GAAG;AAChC;AAAA,IACD;AACA,UAAM,kBAAkB,EAAE,oBAAoB,IAAI,IAAI,qBAAqB;AAAA,MAC1E,IAAI,SAAS,EAAE,iBAAiB,CAAC;AAAA,IAClC,EAAE;AACF,oBAAgB,KAAK,EAAE,YAAY,iBAAiB,YAAY,EAAE,OAAO,CAAC;AAAA,EAC3E;AAEA,QAAM,SAAS;AAAA,IACd;AAAA,IACA;AAAA,IACA,OAAK,EAAE;AAAA,IACP,CAAC,IAAI,QAAQ,EAAE,YAAY,GAAG,YAAY,YAAY,GAAG,aAAa,GAAG,WAAW;AAAA,EACrF;AAEA,SAAO;AACR;AAlCS;AAoCF,SAAS,8BAA8B,SAA4C;AACzF,MAAI,CAAC,QAAQ,cAAc;AAC1B,WAAO;AAAA,EACR;AACA,SAAO,QAAQ,aAAa;AAAA,IAAM,OAChC,kBAAkB,EAAE,aAAa,KAAK,kBAAkB,EAAE,aAAa,KACrE,EAAE,cAAc,YAAY,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EACrD;AACD;AARgB;AAUhB,SAAS,kBAAkB,OAAuB;AACjD,SAAO,MAAM,oBAAoB,MAAM;AACxC;AAFS;",
  "names": ["marginDomNode", "createViewZoneMarginArrow", "emitAlignment", "c"]
}
