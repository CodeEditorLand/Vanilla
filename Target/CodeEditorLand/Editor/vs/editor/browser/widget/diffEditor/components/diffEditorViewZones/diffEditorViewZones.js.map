{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/diffEditorViewZones.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\t$,\n\taddDisposableListener,\n} from \"../../../../../../base/browser/dom.js\";\nimport { ArrayQueue } from \"../../../../../../base/common/arrays.js\";\nimport { RunOnceScheduler } from \"../../../../../../base/common/async.js\";\nimport { Codicon } from \"../../../../../../base/common/codicons.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\tautorun,\n\tderived,\n\tderivedWithStore,\n\tobservableFromEvent,\n\tobservableValue,\n} from \"../../../../../../base/common/observable.js\";\nimport { ThemeIcon } from \"../../../../../../base/common/themables.js\";\nimport { assertIsDefined } from \"../../../../../../base/common/types.js\";\nimport { IClipboardService } from \"../../../../../../platform/clipboard/common/clipboardService.js\";\nimport { IContextMenuService } from \"../../../../../../platform/contextview/browser/contextView.js\";\nimport { EditorOption } from \"../../../../../common/config/editorOptions.js\";\nimport { LineRange } from \"../../../../../common/core/lineRange.js\";\nimport { Position } from \"../../../../../common/core/position.js\";\nimport { Range } from \"../../../../../common/core/range.js\";\nimport type { DetailedLineRangeMapping } from \"../../../../../common/diff/rangeMapping.js\";\nimport { ScrollType } from \"../../../../../common/editorCommon.js\";\nimport { BackgroundTokenizationState } from \"../../../../../common/tokenizationTextModelPart.js\";\nimport {\n\tInlineDecoration,\n\tInlineDecorationType,\n} from \"../../../../../common/viewModel.js\";\nimport { applyFontInfo } from \"../../../../config/domFontInfo.js\";\nimport type { CodeEditorWidget } from \"../../../codeEditor/codeEditorWidget.js\";\nimport type { DiffEditorOptions } from \"../../diffEditorOptions.js\";\nimport {\n\ttype DiffEditorViewModel,\n\tDiffMapping,\n} from \"../../diffEditorViewModel.js\";\nimport type { DiffEditorWidget } from \"../../diffEditorWidget.js\";\nimport {\n\tdiffDeleteDecoration,\n\tdiffRemoveIcon,\n} from \"../../registrations.contribution.js\";\nimport {\n\ttype IObservableViewZone,\n\tanimatedObservable,\n\tjoinCombine,\n} from \"../../utils.js\";\nimport type { DiffEditorEditors } from \"../diffEditorEditors.js\";\nimport { InlineDiffDeletedCodeMargin } from \"./inlineDiffDeletedCodeMargin.js\";\nimport { LineSource, RenderOptions, renderLines } from \"./renderLines.js\";\n\n/**\n * Ensures both editors have the same height by aligning unchanged lines.\n * In inline view mode, inserts viewzones to show deleted code from the original text model in the modified code editor.\n * Synchronizes scrolling.\n *\n * Make sure to add the view zones!\n */\nexport class DiffEditorViewZones extends Disposable {\n\tprivate readonly _originalTopPadding = observableValue(this, 0);\n\tprivate readonly _originalScrollTop: IObservable<number>;\n\tprivate readonly _originalScrollOffset = observableValue<number, boolean>(\n\t\tthis,\n\t\t0,\n\t);\n\tprivate readonly _originalScrollOffsetAnimated = animatedObservable(\n\t\tthis._targetWindow,\n\t\tthis._originalScrollOffset,\n\t\tthis._store,\n\t);\n\n\tprivate readonly _modifiedTopPadding = observableValue(this, 0);\n\tprivate readonly _modifiedScrollTop: IObservable<number>;\n\tprivate readonly _modifiedScrollOffset = observableValue<number, boolean>(\n\t\tthis,\n\t\t0,\n\t);\n\tprivate readonly _modifiedScrollOffsetAnimated = animatedObservable(\n\t\tthis._targetWindow,\n\t\tthis._modifiedScrollOffset,\n\t\tthis._store,\n\t);\n\n\tpublic readonly viewZones: IObservable<{\n\t\torig: IObservableViewZone[];\n\t\tmod: IObservableViewZone[];\n\t}>;\n\n\tconstructor(\n\t\tprivate readonly _targetWindow: Window,\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _diffModel: IObservable<\n\t\t\tDiffEditorViewModel | undefined\n\t\t>,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tprivate readonly _diffEditorWidget: DiffEditorWidget,\n\t\tprivate readonly _canIgnoreViewZoneUpdateEvent: () => boolean,\n\t\tprivate readonly _origViewZonesToIgnore: Set<string>,\n\t\tprivate readonly _modViewZonesToIgnore: Set<string>,\n\t\t@IClipboardService\n\t\tprivate readonly _clipboardService: IClipboardService,\n\t\t@IContextMenuService\n\t\tprivate readonly _contextMenuService: IContextMenuService,\n\t) {\n\t\tsuper();\n\n\t\tconst state = observableValue(\"invalidateAlignmentsState\", 0);\n\n\t\tconst updateImmediately = this._register(\n\t\t\tnew RunOnceScheduler(() => {\n\t\t\t\tstate.set(state.get() + 1, undefined);\n\t\t\t}, 0),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._editors.original.onDidChangeViewZones((_args) => {\n\t\t\t\tif (!this._canIgnoreViewZoneUpdateEvent()) {\n\t\t\t\t\tupdateImmediately.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._editors.modified.onDidChangeViewZones((_args) => {\n\t\t\t\tif (!this._canIgnoreViewZoneUpdateEvent()) {\n\t\t\t\t\tupdateImmediately.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._editors.original.onDidChangeConfiguration((args) => {\n\t\t\t\tif (\n\t\t\t\t\targs.hasChanged(EditorOption.wrappingInfo) ||\n\t\t\t\t\targs.hasChanged(EditorOption.lineHeight)\n\t\t\t\t) {\n\t\t\t\t\tupdateImmediately.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._editors.modified.onDidChangeConfiguration((args) => {\n\t\t\t\tif (\n\t\t\t\t\targs.hasChanged(EditorOption.wrappingInfo) ||\n\t\t\t\t\targs.hasChanged(EditorOption.lineHeight)\n\t\t\t\t) {\n\t\t\t\t\tupdateImmediately.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst originalModelTokenizationCompleted = this._diffModel\n\t\t\t.map((m) =>\n\t\t\t\tm\n\t\t\t\t\t? observableFromEvent(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tm.model.original.onDidChangeTokens,\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tm.model.original.tokenization\n\t\t\t\t\t\t\t\t\t.backgroundTokenizationState ===\n\t\t\t\t\t\t\t\tBackgroundTokenizationState.Completed,\n\t\t\t\t\t\t)\n\t\t\t\t\t: undefined,\n\t\t\t)\n\t\t\t.map((m, reader) => m?.read(reader));\n\n\t\tconst alignments = derived<ILineRangeAlignment[] | null>((reader) => {\n\t\t\t/** @description alignments */\n\t\t\tconst diffModel = this._diffModel.read(reader);\n\t\t\tconst diff = diffModel?.diff.read(reader);\n\t\t\tif (!diffModel || !diff) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tstate.read(reader);\n\t\t\tconst renderSideBySide =\n\t\t\t\tthis._options.renderSideBySide.read(reader);\n\t\t\tconst innerHunkAlignment = renderSideBySide;\n\t\t\treturn computeRangeAlignment(\n\t\t\t\tthis._editors.original,\n\t\t\t\tthis._editors.modified,\n\t\t\t\tdiff.mappings,\n\t\t\t\tthis._origViewZonesToIgnore,\n\t\t\t\tthis._modViewZonesToIgnore,\n\t\t\t\tinnerHunkAlignment,\n\t\t\t);\n\t\t});\n\n\t\tconst alignmentsSyncedMovedText = derived<ILineRangeAlignment[] | null>(\n\t\t\t(reader) => {\n\t\t\t\t/** @description alignmentsSyncedMovedText */\n\t\t\t\tconst syncedMovedText = this._diffModel\n\t\t\t\t\t.read(reader)\n\t\t\t\t\t?.movedTextToCompare.read(reader);\n\t\t\t\tif (!syncedMovedText) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tstate.read(reader);\n\t\t\t\tconst mappings = syncedMovedText.changes.map(\n\t\t\t\t\t(c) => new DiffMapping(c),\n\t\t\t\t);\n\t\t\t\t// TODO dont include alignments outside syncedMovedText\n\t\t\t\treturn computeRangeAlignment(\n\t\t\t\t\tthis._editors.original,\n\t\t\t\t\tthis._editors.modified,\n\t\t\t\t\tmappings,\n\t\t\t\t\tthis._origViewZonesToIgnore,\n\t\t\t\t\tthis._modViewZonesToIgnore,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\n\t\tfunction createFakeLinesDiv(): HTMLElement {\n\t\t\tconst r = document.createElement(\"div\");\n\t\t\tr.className = \"diagonal-fill\";\n\t\t\treturn r;\n\t\t}\n\n\t\tconst alignmentViewZonesDisposables = this._register(\n\t\t\tnew DisposableStore(),\n\t\t);\n\t\tthis.viewZones = derivedWithStore<{\n\t\t\torig: IObservableViewZone[];\n\t\t\tmod: IObservableViewZone[];\n\t\t}>(this, (reader, store) => {\n\t\t\talignmentViewZonesDisposables.clear();\n\n\t\t\tconst alignmentsVal = alignments.read(reader) || [];\n\n\t\t\tconst origViewZones: IObservableViewZone[] = [];\n\t\t\tconst modViewZones: IObservableViewZone[] = [];\n\n\t\t\tconst modifiedTopPaddingVal = this._modifiedTopPadding.read(reader);\n\t\t\tif (modifiedTopPaddingVal > 0) {\n\t\t\t\tmodViewZones.push({\n\t\t\t\t\tafterLineNumber: 0,\n\t\t\t\t\tdomNode: document.createElement(\"div\"),\n\t\t\t\t\theightInPx: modifiedTopPaddingVal,\n\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst originalTopPaddingVal = this._originalTopPadding.read(reader);\n\t\t\tif (originalTopPaddingVal > 0) {\n\t\t\t\torigViewZones.push({\n\t\t\t\t\tafterLineNumber: 0,\n\t\t\t\t\tdomNode: document.createElement(\"div\"),\n\t\t\t\t\theightInPx: originalTopPaddingVal,\n\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst renderSideBySide =\n\t\t\t\tthis._options.renderSideBySide.read(reader);\n\n\t\t\tconst deletedCodeLineBreaksComputer = renderSideBySide ? undefined : this._editors.modified._getViewModel()?.createLineBreaksComputer();\n\t\t\tif (deletedCodeLineBreaksComputer) {\n\t\t\t\tconst originalModel = this._editors.original.getModel()!;\n\t\t\t\tfor (const a of alignmentsVal) {\n\t\t\t\t\tif (a.diff) {\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tlet i = a.originalRange.startLineNumber;\n\t\t\t\t\t\t\ti < a.originalRange.endLineNumberExclusive;\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// `i` can be out of bound when the diff has not been updated yet.\n\t\t\t\t\t\t\t// In this case, we do an early return.\n\t\t\t\t\t\t\t// TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n\t\t\t\t\t\t\tif (i > originalModel.getLineCount()) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\torig: origViewZones,\n\t\t\t\t\t\t\t\t\tmod: modViewZones,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdeletedCodeLineBreaksComputer?.addRequest(\n\t\t\t\t\t\t\t\toriginalModel.getLineContent(i),\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lineBreakData =\n\t\t\t\tdeletedCodeLineBreaksComputer?.finalize() ?? [];\n\t\t\tlet lineBreakDataIdx = 0;\n\n\t\t\tconst modLineHeight = this._editors.modified.getOption(\n\t\t\t\tEditorOption.lineHeight,\n\t\t\t);\n\n\t\t\tconst syncedMovedText = this._diffModel\n\t\t\t\t.read(reader)\n\t\t\t\t?.movedTextToCompare.read(reader);\n\n\t\t\tconst mightContainNonBasicASCII =\n\t\t\t\tthis._editors.original\n\t\t\t\t\t.getModel()\n\t\t\t\t\t?.mightContainNonBasicASCII() ?? false;\n\t\t\tconst mightContainRTL =\n\t\t\t\tthis._editors.original.getModel()?.mightContainRTL() ?? false;\n\t\t\tconst renderOptions = RenderOptions.fromEditor(\n\t\t\t\tthis._editors.modified,\n\t\t\t);\n\n\t\t\tfor (const a of alignmentsVal) {\n\t\t\t\tif (\n\t\t\t\t\ta.diff &&\n\t\t\t\t\t!renderSideBySide &&\n\t\t\t\t\t(!this._options.useTrueInlineDiffRendering.read(reader) ||\n\t\t\t\t\t\t!allowsTrueInlineDiffRendering(a.diff))\n\t\t\t\t) {\n\t\t\t\t\tif (!a.originalRange.isEmpty) {\n\t\t\t\t\t\toriginalModelTokenizationCompleted.read(reader); // Update view-zones once tokenization completes\n\n\t\t\t\t\t\tconst deletedCodeDomNode =\n\t\t\t\t\t\t\tdocument.createElement(\"div\");\n\t\t\t\t\t\tdeletedCodeDomNode.classList.add(\n\t\t\t\t\t\t\t\"view-lines\",\n\t\t\t\t\t\t\t\"line-delete\",\n\t\t\t\t\t\t\t\"monaco-mouse-cursor-text\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst originalModel =\n\t\t\t\t\t\t\tthis._editors.original.getModel()!;\n\t\t\t\t\t\t// `a.originalRange` can be out of bound when the diff has not been updated yet.\n\t\t\t\t\t\t// In this case, we do an early return.\n\t\t\t\t\t\t// TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ta.originalRange.endLineNumberExclusive - 1 >\n\t\t\t\t\t\t\toriginalModel.getLineCount()\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn { orig: origViewZones, mod: modViewZones };\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst source = new LineSource(\n\t\t\t\t\t\t\ta.originalRange.mapToLineArray((l) =>\n\t\t\t\t\t\t\t\toriginalModel.tokenization.getLineTokens(l),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ta.originalRange.mapToLineArray(\n\t\t\t\t\t\t\t\t(_) => lineBreakData[lineBreakDataIdx++],\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmightContainNonBasicASCII,\n\t\t\t\t\t\t\tmightContainRTL,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst decorations: InlineDecoration[] = [];\n\t\t\t\t\t\tfor (const i of a.diff.innerChanges || []) {\n\t\t\t\t\t\t\tdecorations.push(\n\t\t\t\t\t\t\t\tnew InlineDecoration(\n\t\t\t\t\t\t\t\t\ti.originalRange.delta(\n\t\t\t\t\t\t\t\t\t\t-(a.diff.original.startLineNumber - 1),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tdiffDeleteDecoration.className!,\n\t\t\t\t\t\t\t\t\tInlineDecorationType.Regular,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = renderLines(\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\trenderOptions,\n\t\t\t\t\t\t\tdecorations,\n\t\t\t\t\t\t\tdeletedCodeDomNode,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst marginDomNode = document.createElement(\"div\");\n\t\t\t\t\t\tmarginDomNode.className =\n\t\t\t\t\t\t\t\"inline-deleted-margin-view-zone\";\n\t\t\t\t\t\tapplyFontInfo(marginDomNode, renderOptions.fontInfo);\n\n\t\t\t\t\t\tif (this._options.renderIndicators.read(reader)) {\n\t\t\t\t\t\t\tfor (let i = 0; i < result.heightInLines; i++) {\n\t\t\t\t\t\t\t\tconst marginElement =\n\t\t\t\t\t\t\t\t\tdocument.createElement(\"div\");\n\t\t\t\t\t\t\t\tmarginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n\t\t\t\t\t\t\t\tmarginElement.setAttribute(\n\t\t\t\t\t\t\t\t\t\"style\",\n\t\t\t\t\t\t\t\t\t`position:absolute;top:${i * modLineHeight}px;width:${renderOptions.lineDecorationsWidth}px;height:${modLineHeight}px;right:0;`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tmarginDomNode.appendChild(marginElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet zoneId: string | undefined ;\n\t\t\t\t\t\talignmentViewZonesDisposables.add(\n\t\t\t\t\t\t\tnew InlineDiffDeletedCodeMargin(\n\t\t\t\t\t\t\t\t() => assertIsDefined(zoneId),\n\t\t\t\t\t\t\t\tmarginDomNode,\n\t\t\t\t\t\t\t\tthis._editors.modified,\n\t\t\t\t\t\t\t\ta.diff,\n\t\t\t\t\t\t\t\tthis._diffEditorWidget,\n\t\t\t\t\t\t\t\tresult.viewLineCounts,\n\t\t\t\t\t\t\t\tthis._editors.original.getModel()!,\n\t\t\t\t\t\t\t\tthis._contextMenuService,\n\t\t\t\t\t\t\t\tthis._clipboardService,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfor (let i = 0; i < result.viewLineCounts.length; i++) {\n\t\t\t\t\t\t\tconst count = result.viewLineCounts[i];\n\t\t\t\t\t\t\t// Account for wrapped lines in the (collapsed) original editor (which doesn't wrap lines).\n\t\t\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\t\t\torigViewZones.push({\n\t\t\t\t\t\t\t\t\tafterLineNumber:\n\t\t\t\t\t\t\t\t\t\ta.originalRange.startLineNumber + i,\n\t\t\t\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\t\t\t\theightInPx: (count - 1) * modLineHeight,\n\t\t\t\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodViewZones.push({\n\t\t\t\t\t\t\tafterLineNumber:\n\t\t\t\t\t\t\t\ta.modifiedRange.startLineNumber - 1,\n\t\t\t\t\t\t\tdomNode: deletedCodeDomNode,\n\t\t\t\t\t\t\theightInPx: result.heightInLines * modLineHeight,\n\t\t\t\t\t\t\tminWidthInPx: result.minWidthInPx,\n\t\t\t\t\t\t\tmarginDomNode,\n\t\t\t\t\t\t\tsetZoneId(id) {\n\t\t\t\t\t\t\t\tzoneId = id;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst marginDomNode = document.createElement(\"div\");\n\t\t\t\t\tmarginDomNode.className = \"gutter-delete\";\n\n\t\t\t\t\torigViewZones.push({\n\t\t\t\t\t\tafterLineNumber:\n\t\t\t\t\t\t\ta.originalRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\theightInPx: a.modifiedHeightInPx,\n\t\t\t\t\t\tmarginDomNode,\n\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst delta = a.modifiedHeightInPx - a.originalHeightInPx;\n\t\t\t\t\tif (delta > 0) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsyncedMovedText?.lineRangeMapping.original\n\t\t\t\t\t\t\t\t.delta(-1)\n\t\t\t\t\t\t\t\t.deltaLength(2)\n\t\t\t\t\t\t\t\t.contains(\n\t\t\t\t\t\t\t\t\ta.originalRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\torigViewZones.push({\n\t\t\t\t\t\t\tafterLineNumber:\n\t\t\t\t\t\t\t\ta.originalRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\t\theightInPx: delta,\n\t\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsyncedMovedText?.lineRangeMapping.modified\n\t\t\t\t\t\t\t\t.delta(-1)\n\t\t\t\t\t\t\t\t.deltaLength(2)\n\t\t\t\t\t\t\t\t.contains(\n\t\t\t\t\t\t\t\t\ta.modifiedRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfunction createViewZoneMarginArrow(): HTMLElement {\n\t\t\t\t\t\t\tconst arrow = document.createElement(\"div\");\n\t\t\t\t\t\t\tarrow.className =\n\t\t\t\t\t\t\t\t\"arrow-revert-change \" +\n\t\t\t\t\t\t\t\tThemeIcon.asClassName(Codicon.arrowRight);\n\t\t\t\t\t\t\tstore.add(\n\t\t\t\t\t\t\t\taddDisposableListener(arrow, \"mousedown\", (e) =>\n\t\t\t\t\t\t\t\t\te.stopPropagation(),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tstore.add(\n\t\t\t\t\t\t\t\taddDisposableListener(arrow, \"click\", (e) => {\n\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t_diffEditorWidget.revert(a.diff!);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn $(\"div\", {}, arrow);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet marginDomNode: HTMLElement | undefined ;\n\t\t\t\t\t\tif (a.diff && a.diff.modified.isEmpty && this._options.shouldRenderOldRevertArrows.read(reader)) {\n\t\t\t\t\t\t\tmarginDomNode = createViewZoneMarginArrow();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodViewZones.push({\n\t\t\t\t\t\t\tafterLineNumber:\n\t\t\t\t\t\t\t\ta.modifiedRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\t\theightInPx: -delta,\n\t\t\t\t\t\t\tmarginDomNode,\n\t\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const a of alignmentsSyncedMovedText.read(reader) ?? []) {\n\t\t\t\tif (\n\t\t\t\t\t!syncedMovedText?.lineRangeMapping.original.intersect(\n\t\t\t\t\t\ta.originalRange,\n\t\t\t\t\t) ||\n\t\t\t\t\t!syncedMovedText?.lineRangeMapping.modified.intersect(\n\t\t\t\t\t\ta.modifiedRange,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// ignore unrelated alignments outside the synced moved text\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst delta = a.modifiedHeightInPx - a.originalHeightInPx;\n\t\t\t\tif (delta > 0) {\n\t\t\t\t\torigViewZones.push({\n\t\t\t\t\t\tafterLineNumber:\n\t\t\t\t\t\t\ta.originalRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\theightInPx: delta,\n\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmodViewZones.push({\n\t\t\t\t\t\tafterLineNumber:\n\t\t\t\t\t\t\ta.modifiedRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\tdomNode: createFakeLinesDiv(),\n\t\t\t\t\t\theightInPx: -delta,\n\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\tsuppressMouseDown: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { orig: origViewZones, mod: modViewZones };\n\t\t});\n\n\t\tlet ignoreChange = false;\n\t\tthis._register(\n\t\t\tthis._editors.original.onDidScrollChange((e) => {\n\t\t\t\tif (e.scrollLeftChanged && !ignoreChange) {\n\t\t\t\t\tignoreChange = true;\n\t\t\t\t\tthis._editors.modified.setScrollLeft(e.scrollLeft);\n\t\t\t\t\tignoreChange = false;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._editors.modified.onDidScrollChange((e) => {\n\t\t\t\tif (e.scrollLeftChanged && !ignoreChange) {\n\t\t\t\t\tignoreChange = true;\n\t\t\t\t\tthis._editors.original.setScrollLeft(e.scrollLeft);\n\t\t\t\t\tignoreChange = false;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._originalScrollTop = observableFromEvent(\n\t\t\tthis._editors.original.onDidScrollChange,\n\t\t\t() =>\n\t\t\t\t/** @description original.getScrollTop */ this._editors.original.getScrollTop(),\n\t\t);\n\t\tthis._modifiedScrollTop = observableFromEvent(\n\t\t\tthis._editors.modified.onDidScrollChange,\n\t\t\t() =>\n\t\t\t\t/** @description modified.getScrollTop */ this._editors.modified.getScrollTop(),\n\t\t);\n\n\t\t// origExtraHeight + origOffset - origScrollTop = modExtraHeight + modOffset - modScrollTop\n\n\t\t// origScrollTop = origExtraHeight + origOffset - modExtraHeight - modOffset + modScrollTop\n\t\t// modScrollTop = modExtraHeight + modOffset - origExtraHeight - origOffset + origScrollTop\n\n\t\t// origOffset - modOffset = heightOfLines(1..Y) - heightOfLines(1..X)\n\t\t// origScrollTop >= 0, modScrollTop >= 0\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description update scroll modified */\n\t\t\t\tconst newScrollTopModified =\n\t\t\t\t\tthis._originalScrollTop.read(reader) -\n\t\t\t\t\t(this._originalScrollOffsetAnimated.get() -\n\t\t\t\t\t\tthis._modifiedScrollOffsetAnimated.read(reader)) -\n\t\t\t\t\t(this._originalTopPadding.get() -\n\t\t\t\t\t\tthis._modifiedTopPadding.read(reader));\n\t\t\t\tif (\n\t\t\t\t\tnewScrollTopModified !==\n\t\t\t\t\tthis._editors.modified.getScrollTop()\n\t\t\t\t) {\n\t\t\t\t\tthis._editors.modified.setScrollTop(\n\t\t\t\t\t\tnewScrollTopModified,\n\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description update scroll original */\n\t\t\t\tconst newScrollTopOriginal =\n\t\t\t\t\tthis._modifiedScrollTop.read(reader) -\n\t\t\t\t\t(this._modifiedScrollOffsetAnimated.get() -\n\t\t\t\t\t\tthis._originalScrollOffsetAnimated.read(reader)) -\n\t\t\t\t\t(this._modifiedTopPadding.get() -\n\t\t\t\t\t\tthis._originalTopPadding.read(reader));\n\t\t\t\tif (\n\t\t\t\t\tnewScrollTopOriginal !==\n\t\t\t\t\tthis._editors.original.getScrollTop()\n\t\t\t\t) {\n\t\t\t\t\tthis._editors.original.setScrollTop(\n\t\t\t\t\t\tnewScrollTopOriginal,\n\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description update editor top offsets */\n\t\t\t\tconst m = this._diffModel\n\t\t\t\t\t.read(reader)\n\t\t\t\t\t?.movedTextToCompare.read(reader);\n\n\t\t\t\tlet deltaOrigToMod = 0;\n\t\t\t\tif (m) {\n\t\t\t\t\tconst trueTopOriginal =\n\t\t\t\t\t\tthis._editors.original.getTopForLineNumber(\n\t\t\t\t\t\t\tm.lineRangeMapping.original.startLineNumber,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t) - this._originalTopPadding.get();\n\t\t\t\t\tconst trueTopModified =\n\t\t\t\t\t\tthis._editors.modified.getTopForLineNumber(\n\t\t\t\t\t\t\tm.lineRangeMapping.modified.startLineNumber,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t) - this._modifiedTopPadding.get();\n\t\t\t\t\tdeltaOrigToMod = trueTopModified - trueTopOriginal;\n\t\t\t\t}\n\n\t\t\t\tif (deltaOrigToMod > 0) {\n\t\t\t\t\tthis._modifiedTopPadding.set(0, undefined);\n\t\t\t\t\tthis._originalTopPadding.set(deltaOrigToMod, undefined);\n\t\t\t\t} else if (deltaOrigToMod < 0) {\n\t\t\t\t\tthis._modifiedTopPadding.set(-deltaOrigToMod, undefined);\n\t\t\t\t\tthis._originalTopPadding.set(0, undefined);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis._modifiedTopPadding.set(0, undefined);\n\t\t\t\t\t\tthis._originalTopPadding.set(0, undefined);\n\t\t\t\t\t}, 400);\n\t\t\t\t}\n\n\t\t\t\tif (this._editors.modified.hasTextFocus()) {\n\t\t\t\t\tthis._originalScrollOffset.set(\n\t\t\t\t\t\tthis._modifiedScrollOffset.get() - deltaOrigToMod,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._modifiedScrollOffset.set(\n\t\t\t\t\t\tthis._originalScrollOffset.get() + deltaOrigToMod,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n\ninterface ILineRangeAlignment {\n\toriginalRange: LineRange;\n\tmodifiedRange: LineRange;\n\n\t// accounts for foreign viewzones and line wrapping\n\toriginalHeightInPx: number;\n\tmodifiedHeightInPx: number;\n\n\t/**\n\t * If this range alignment is a direct result of a diff, then this is the diff's line mapping.\n\t * Only used for inline-view.\n\t */\n\tdiff?: DetailedLineRangeMapping;\n}\n\nfunction computeRangeAlignment(\n\toriginalEditor: CodeEditorWidget,\n\tmodifiedEditor: CodeEditorWidget,\n\tdiffs: readonly DiffMapping[],\n\toriginalEditorAlignmentViewZones: ReadonlySet<string>,\n\tmodifiedEditorAlignmentViewZones: ReadonlySet<string>,\n\tinnerHunkAlignment: boolean,\n): ILineRangeAlignment[] {\n\tconst originalLineHeightOverrides = new ArrayQueue(\n\t\tgetAdditionalLineHeights(\n\t\t\toriginalEditor,\n\t\t\toriginalEditorAlignmentViewZones,\n\t\t),\n\t);\n\tconst modifiedLineHeightOverrides = new ArrayQueue(\n\t\tgetAdditionalLineHeights(\n\t\t\tmodifiedEditor,\n\t\t\tmodifiedEditorAlignmentViewZones,\n\t\t),\n\t);\n\n\tconst origLineHeight = originalEditor.getOption(EditorOption.lineHeight);\n\tconst modLineHeight = modifiedEditor.getOption(EditorOption.lineHeight);\n\n\tconst result: ILineRangeAlignment[] = [];\n\n\tlet lastOriginalLineNumber = 0;\n\tlet lastModifiedLineNumber = 0;\n\n\tfunction handleAlignmentsOutsideOfDiffs(\n\t\tuntilOriginalLineNumberExclusive: number,\n\t\tuntilModifiedLineNumberExclusive: number,\n\t) {\n\t\twhile (true) {\n\t\t\tlet origNext = originalLineHeightOverrides.peek();\n\t\t\tlet modNext = modifiedLineHeightOverrides.peek();\n\t\t\tif (\n\t\t\t\torigNext &&\n\t\t\t\torigNext.lineNumber >= untilOriginalLineNumberExclusive\n\t\t\t) {\n\t\t\t\torigNext = undefined;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tmodNext &&\n\t\t\t\tmodNext.lineNumber >= untilModifiedLineNumberExclusive\n\t\t\t) {\n\t\t\t\tmodNext = undefined;\n\t\t\t}\n\t\t\tif (!origNext && !modNext) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst distOrig = origNext\n\t\t\t\t? origNext.lineNumber - lastOriginalLineNumber\n\t\t\t\t: Number.MAX_VALUE;\n\t\t\tconst distNext = modNext\n\t\t\t\t? modNext.lineNumber - lastModifiedLineNumber\n\t\t\t\t: Number.MAX_VALUE;\n\n\t\t\tif (distOrig < distNext) {\n\t\t\t\toriginalLineHeightOverrides.dequeue();\n\t\t\t\tmodNext = {\n\t\t\t\t\tlineNumber:\n\t\t\t\t\t\torigNext!.lineNumber -\n\t\t\t\t\t\tlastOriginalLineNumber +\n\t\t\t\t\t\tlastModifiedLineNumber,\n\t\t\t\t\theightInPx: 0,\n\t\t\t\t};\n\t\t\t} else if (distOrig > distNext) {\n\t\t\t\tmodifiedLineHeightOverrides.dequeue();\n\t\t\t\torigNext = {\n\t\t\t\t\tlineNumber:\n\t\t\t\t\t\tmodNext!.lineNumber -\n\t\t\t\t\t\tlastModifiedLineNumber +\n\t\t\t\t\t\tlastOriginalLineNumber,\n\t\t\t\t\theightInPx: 0,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\toriginalLineHeightOverrides.dequeue();\n\t\t\t\tmodifiedLineHeightOverrides.dequeue();\n\t\t\t}\n\n\t\t\tresult.push({\n\t\t\t\toriginalRange: LineRange.ofLength(origNext!.lineNumber, 1),\n\t\t\t\tmodifiedRange: LineRange.ofLength(modNext!.lineNumber, 1),\n\t\t\t\toriginalHeightInPx: origLineHeight + origNext!.heightInPx,\n\t\t\t\tmodifiedHeightInPx: modLineHeight + modNext!.heightInPx,\n\t\t\t\tdiff: undefined,\n\t\t\t});\n\t\t}\n\t}\n\n\tfor (const m of diffs) {\n\t\tconst c = m.lineRangeMapping;\n\t\thandleAlignmentsOutsideOfDiffs(\n\t\t\tc.original.startLineNumber,\n\t\t\tc.modified.startLineNumber,\n\t\t);\n\n\t\tlet first = true;\n\t\tlet lastModLineNumber = c.modified.startLineNumber;\n\t\tlet lastOrigLineNumber = c.original.startLineNumber;\n\n\t\tfunction emitAlignment(\n\t\t\torigLineNumberExclusive: number,\n\t\t\tmodLineNumberExclusive: number,\n\t\t\tforceAlignment = false,\n\t\t) {\n\t\t\tif (\n\t\t\t\torigLineNumberExclusive < lastOrigLineNumber ||\n\t\t\t\tmodLineNumberExclusive < lastModLineNumber\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tfirst = false;\n\t\t\t} else if (\n\t\t\t\t!forceAlignment &&\n\t\t\t\t(origLineNumberExclusive === lastOrigLineNumber ||\n\t\t\t\t\tmodLineNumberExclusive === lastModLineNumber)\n\t\t\t) {\n\t\t\t\t// This causes a re-alignment of an already aligned line.\n\t\t\t\t// However, we don't care for the final alignment.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst originalRange = new LineRange(\n\t\t\t\tlastOrigLineNumber,\n\t\t\t\torigLineNumberExclusive,\n\t\t\t);\n\t\t\tconst modifiedRange = new LineRange(\n\t\t\t\tlastModLineNumber,\n\t\t\t\tmodLineNumberExclusive,\n\t\t\t);\n\t\t\tif (originalRange.isEmpty && modifiedRange.isEmpty) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst originalAdditionalHeight =\n\t\t\t\toriginalLineHeightOverrides\n\t\t\t\t\t.takeWhile((v) => v.lineNumber < origLineNumberExclusive)\n\t\t\t\t\t?.reduce((p, c) => p + c.heightInPx, 0) ?? 0;\n\t\t\tconst modifiedAdditionalHeight =\n\t\t\t\tmodifiedLineHeightOverrides\n\t\t\t\t\t.takeWhile((v) => v.lineNumber < modLineNumberExclusive)\n\t\t\t\t\t?.reduce((p, c) => p + c.heightInPx, 0) ?? 0;\n\n\t\t\tresult.push({\n\t\t\t\toriginalRange,\n\t\t\t\tmodifiedRange,\n\t\t\t\toriginalHeightInPx:\n\t\t\t\t\toriginalRange.length * origLineHeight +\n\t\t\t\t\toriginalAdditionalHeight,\n\t\t\t\tmodifiedHeightInPx:\n\t\t\t\t\tmodifiedRange.length * modLineHeight +\n\t\t\t\t\tmodifiedAdditionalHeight,\n\t\t\t\tdiff: m.lineRangeMapping,\n\t\t\t});\n\n\t\t\tlastOrigLineNumber = origLineNumberExclusive;\n\t\t\tlastModLineNumber = modLineNumberExclusive;\n\t\t}\n\n\t\tif (innerHunkAlignment) {\n\t\t\tfor (const i of c.innerChanges || []) {\n\t\t\t\tif (\n\t\t\t\t\ti.originalRange.startColumn > 1 &&\n\t\t\t\t\ti.modifiedRange.startColumn > 1\n\t\t\t\t) {\n\t\t\t\t\t// There is some unmodified text on this line before the diff\n\t\t\t\t\temitAlignment(\n\t\t\t\t\t\ti.originalRange.startLineNumber,\n\t\t\t\t\t\ti.modifiedRange.startLineNumber,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst originalModel = originalEditor.getModel()!;\n\t\t\t\t// When the diff is invalid, the ranges might be out of bounds (this should be fixed in the diff model by applying edits directly).\n\t\t\t\tconst maxColumn =\n\t\t\t\t\ti.originalRange.endLineNumber <=\n\t\t\t\t\toriginalModel.getLineCount()\n\t\t\t\t\t\t? originalModel.getLineMaxColumn(\n\t\t\t\t\t\t\t\ti.originalRange.endLineNumber,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: Number.MAX_SAFE_INTEGER;\n\t\t\t\tif (i.originalRange.endColumn < maxColumn) {\n\t\t\t\t\t// // There is some unmodified text on this line after the diff\n\t\t\t\t\temitAlignment(\n\t\t\t\t\t\ti.originalRange.endLineNumber,\n\t\t\t\t\t\ti.modifiedRange.endLineNumber,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\temitAlignment(\n\t\t\tc.original.endLineNumberExclusive,\n\t\t\tc.modified.endLineNumberExclusive,\n\t\t\ttrue,\n\t\t);\n\n\t\tlastOriginalLineNumber = c.original.endLineNumberExclusive;\n\t\tlastModifiedLineNumber = c.modified.endLineNumberExclusive;\n\t}\n\thandleAlignmentsOutsideOfDiffs(Number.MAX_VALUE, Number.MAX_VALUE);\n\n\treturn result;\n}\n\ninterface AdditionalLineHeightInfo {\n\tlineNumber: number;\n\theightInPx: number;\n}\n\nfunction getAdditionalLineHeights(\n\teditor: CodeEditorWidget,\n\tviewZonesToIgnore: ReadonlySet<string>,\n): readonly AdditionalLineHeightInfo[] {\n\tconst viewZoneHeights: { lineNumber: number; heightInPx: number }[] = [];\n\tconst wrappingZoneHeights: { lineNumber: number; heightInPx: number }[] =\n\t\t[];\n\n\tconst hasWrapping =\n\t\teditor.getOption(EditorOption.wrappingInfo).wrappingColumn !== -1;\n\tconst coordinatesConverter = editor._getViewModel()!.coordinatesConverter;\n\tconst editorLineHeight = editor.getOption(EditorOption.lineHeight);\n\tif (hasWrapping) {\n\t\tfor (let i = 1; i <= editor.getModel()!.getLineCount(); i++) {\n\t\t\tconst lineCount = coordinatesConverter.getModelLineViewLineCount(i);\n\t\t\tif (lineCount > 1) {\n\t\t\t\twrappingZoneHeights.push({\n\t\t\t\t\tlineNumber: i,\n\t\t\t\t\theightInPx: editorLineHeight * (lineCount - 1),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const w of editor.getWhitespaces()) {\n\t\tif (viewZonesToIgnore.has(w.id)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst modelLineNumber =\n\t\t\tw.afterLineNumber === 0\n\t\t\t\t? 0\n\t\t\t\t: coordinatesConverter.convertViewPositionToModelPosition(\n\t\t\t\t\t\tnew Position(w.afterLineNumber, 1),\n\t\t\t\t\t).lineNumber;\n\t\tviewZoneHeights.push({\n\t\t\tlineNumber: modelLineNumber,\n\t\t\theightInPx: w.height,\n\t\t});\n\t}\n\n\tconst result = joinCombine(\n\t\tviewZoneHeights,\n\t\twrappingZoneHeights,\n\t\t(v) => v.lineNumber,\n\t\t(v1, v2) => ({\n\t\t\tlineNumber: v1.lineNumber,\n\t\t\theightInPx: v1.heightInPx + v2.heightInPx,\n\t\t}),\n\t);\n\n\treturn result;\n}\n\nexport function allowsTrueInlineDiffRendering(\n\tmapping: DetailedLineRangeMapping,\n): boolean {\n\tif (!mapping.innerChanges) {\n\t\treturn false;\n\t}\n\treturn mapping.innerChanges.every(\n\t\t(c) =>\n\t\t\t(rangeIsSingleLine(c.modifiedRange) &&\n\t\t\t\trangeIsSingleLine(c.originalRange)) ||\n\t\t\tc.originalRange.equalsRange(new Range(1, 1, 1, 1)),\n\t);\n}\n\nfunction rangeIsSingleLine(range: Range): boolean {\n\treturn range.startLineNumber === range.endLineNumber;\n}\n"],
  "mappings": "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",
  "names": ["marginDomNode", "createViewZoneMarginArrow", "emitAlignment", "c"]
}
