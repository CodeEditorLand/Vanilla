{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/features/revertButtonsFeature.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEventType,\n\taddDisposableListener,\n\th,\n} from \"../../../../../base/browser/dom.js\";\nimport { renderIcon } from \"../../../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport {\n\tDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\tautorunWithStore,\n\tderived,\n} from \"../../../../../base/common/observable.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport { LineRange, LineRangeSet } from \"../../../../common/core/lineRange.js\";\nimport { Range } from \"../../../../common/core/range.js\";\nimport {\n\tLineRangeMapping,\n\ttype RangeMapping,\n} from \"../../../../common/diff/rangeMapping.js\";\nimport { GlyphMarginLane } from \"../../../../common/model.js\";\nimport type {\n\tIGlyphMarginWidget,\n\tIGlyphMarginWidgetPosition,\n} from \"../../../editorBrowser.js\";\nimport type { DiffEditorEditors } from \"../components/diffEditorEditors.js\";\nimport type { DiffEditorOptions } from \"../diffEditorOptions.js\";\nimport type { DiffEditorViewModel } from \"../diffEditorViewModel.js\";\nimport type { DiffEditorWidget } from \"../diffEditorWidget.js\";\n\nconst emptyArr: never[] = [];\n\nexport class RevertButtonsFeature extends Disposable {\n\tconstructor(\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _diffModel: IObservable<\n\t\t\tDiffEditorViewModel | undefined\n\t\t>,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tprivate readonly _widget: DiffEditorWidget,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\tif (!this._options.shouldRenderOldRevertArrows.read(reader)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst model = this._diffModel.read(reader);\n\t\t\t\tconst diff = model?.diff.read(reader);\n\t\t\t\tif (!model || !diff) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (model.movedTextToCompare.read(reader)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst glyphWidgetsModified: IGlyphMarginWidget[] = [];\n\n\t\t\t\tconst selectedDiffs = this._selectedDiffs.read(reader);\n\t\t\t\tconst selectedDiffsSet = new Set(\n\t\t\t\t\tselectedDiffs.map((d) => d.mapping),\n\t\t\t\t);\n\n\t\t\t\tif (selectedDiffs.length > 0) {\n\t\t\t\t\t// The button to revert the selection\n\t\t\t\t\tconst selections =\n\t\t\t\t\t\tthis._editors.modifiedSelections.read(reader);\n\n\t\t\t\t\tconst btn = store.add(\n\t\t\t\t\t\tnew RevertButton(\n\t\t\t\t\t\t\tselections[selections.length - 1]\n\t\t\t\t\t\t\t\t.positionLineNumber,\n\t\t\t\t\t\t\tthis._widget,\n\t\t\t\t\t\t\tselectedDiffs.flatMap((d) => d.rangeMappings),\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tthis._editors.modified.addGlyphMarginWidget(btn);\n\t\t\t\t\tglyphWidgetsModified.push(btn);\n\t\t\t\t}\n\n\t\t\t\tfor (const m of diff.mappings) {\n\t\t\t\t\tif (selectedDiffsSet.has(m)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t!m.lineRangeMapping.modified.isEmpty &&\n\t\t\t\t\t\tm.lineRangeMapping.innerChanges\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst btn = store.add(\n\t\t\t\t\t\t\tnew RevertButton(\n\t\t\t\t\t\t\t\tm.lineRangeMapping.modified.startLineNumber,\n\t\t\t\t\t\t\t\tthis._widget,\n\t\t\t\t\t\t\t\tm.lineRangeMapping,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._editors.modified.addGlyphMarginWidget(btn);\n\t\t\t\t\t\tglyphWidgetsModified.push(btn);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstore.add(\n\t\t\t\t\ttoDisposable(() => {\n\t\t\t\t\t\tfor (const w of glyphWidgetsModified) {\n\t\t\t\t\t\t\tthis._editors.modified.removeGlyphMarginWidget(w);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate readonly _selectedDiffs = derived(this, (reader) => {\n\t\t/** @description selectedDiffs */\n\t\tconst model = this._diffModel.read(reader);\n\t\tconst diff = model?.diff.read(reader);\n\t\t// Return `emptyArr` because it is a constant. [] is always a new array and would trigger a change.\n\t\tif (!diff) {\n\t\t\treturn emptyArr;\n\t\t}\n\n\t\tconst selections = this._editors.modifiedSelections.read(reader);\n\t\tif (selections.every((s) => s.isEmpty())) {\n\t\t\treturn emptyArr;\n\t\t}\n\n\t\tconst selectedLineNumbers = new LineRangeSet(\n\t\t\tselections.map((s) => LineRange.fromRangeInclusive(s)),\n\t\t);\n\n\t\tconst selectedMappings = diff.mappings.filter(\n\t\t\t(m) =>\n\t\t\t\tm.lineRangeMapping.innerChanges &&\n\t\t\t\tselectedLineNumbers.intersects(m.lineRangeMapping.modified),\n\t\t);\n\t\tconst result = selectedMappings.map((mapping) => ({\n\t\t\tmapping,\n\t\t\trangeMappings: mapping.lineRangeMapping.innerChanges!.filter((c) =>\n\t\t\t\tselections.some((s) =>\n\t\t\t\t\tRange.areIntersecting(c.modifiedRange, s),\n\t\t\t\t),\n\t\t\t),\n\t\t}));\n\t\tif (\n\t\t\tresult.length === 0 ||\n\t\t\tresult.every((r) => r.rangeMappings.length === 0)\n\t\t) {\n\t\t\treturn emptyArr;\n\t\t}\n\t\treturn result;\n\t});\n}\n\nexport class RevertButton extends Disposable implements IGlyphMarginWidget {\n\tpublic static counter = 0;\n\n\tprivate readonly _id: string = `revertButton${RevertButton.counter++}`;\n\n\tgetId(): string {\n\t\treturn this._id;\n\t}\n\n\tprivate readonly _domNode = h(\n\t\t\"div.revertButton\",\n\t\t{\n\t\t\ttitle: this._revertSelection\n\t\t\t\t? localize(\"revertSelectedChanges\", \"Revert Selected Changes\")\n\t\t\t\t: localize(\"revertChange\", \"Revert Change\"),\n\t\t},\n\t\t[renderIcon(Codicon.arrowRight)],\n\t).root;\n\n\tconstructor(\n\t\tprivate readonly _lineNumber: number,\n\t\tprivate readonly _widget: DiffEditorWidget,\n\t\tprivate readonly _diffs: RangeMapping[] | LineRangeMapping,\n\t\tprivate readonly _revertSelection: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\taddDisposableListener(this._domNode, EventType.MOUSE_DOWN, (e) => {\n\t\t\t\t// don't prevent context menu from showing up\n\t\t\t\tif (e.button !== 2) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\taddDisposableListener(this._domNode, EventType.MOUSE_UP, (e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\taddDisposableListener(this._domNode, EventType.CLICK, (e) => {\n\t\t\t\tif (this._diffs instanceof LineRangeMapping) {\n\t\t\t\t\tthis._widget.revert(this._diffs);\n\t\t\t\t} else {\n\t\t\t\t\tthis._widget.revertRangeMappings(this._diffs);\n\t\t\t\t}\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Get the dom node of the glyph widget.\n\t */\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\t/**\n\t * Get the placement of the glyph widget.\n\t */\n\tgetPosition(): IGlyphMarginWidgetPosition {\n\t\treturn {\n\t\t\tlane: GlyphMarginLane.Right,\n\t\t\trange: {\n\t\t\t\tstartColumn: 1,\n\t\t\t\tstartLineNumber: this._lineNumber,\n\t\t\t\tendColumn: 1,\n\t\t\t\tendLineNumber: this._lineNumber,\n\t\t\t},\n\t\t\tzIndex: 10001,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
