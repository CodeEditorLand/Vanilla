{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/diffEditorOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IObservable, ISettableObservable, derived, derivedConstOnceDefined, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport { Constants } from '../../../../base/common/uint.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { diffEditorDefaultOptions } from '../../../common/config/diffEditor.js';\nimport { IDiffEditorBaseOptions, IDiffEditorOptions, IEditorOptions, ValidDiffEditorBaseOptions, clampedFloat, clampedInt, boolean as validateBooleanOption, stringSet as validateStringSetOption } from '../../../common/config/editorOptions.js';\nimport { LineRangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { allowsTrueInlineDiffRendering } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { DiffEditorViewModel, DiffState } from './diffEditorViewModel.js';\n\nexport class DiffEditorOptions {\n\tprivate readonly _options: ISettableObservable<IEditorOptions & Required<IDiffEditorBaseOptions>, { changedOptions: IDiffEditorOptions }>;\n\n\tpublic get editorOptions(): IObservable<IEditorOptions, { changedOptions: IEditorOptions }> { return this._options; }\n\n\tprivate readonly _diffEditorWidth = observableValue<number>(this, 0);\n\n\tprivate readonly _screenReaderMode = observableFromEvent(this, this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n\n\tconstructor(\n\t\toptions: Readonly<IDiffEditorOptions>,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t) {\n\t\tconst optionsCopy = { ...options, ...validateDiffEditorOptions(options, diffEditorDefaultOptions) };\n\t\tthis._options = observableValue(this, optionsCopy);\n\t}\n\n\tpublic readonly couldShowInlineViewBecauseOfSize = derived(this, reader =>\n\t\tthis._options.read(reader).renderSideBySide && this._diffEditorWidth.read(reader) <= this._options.read(reader).renderSideBySideInlineBreakpoint\n\t);\n\n\tpublic readonly renderOverviewRuler = derived(this, reader => this._options.read(reader).renderOverviewRuler);\n\tpublic readonly renderSideBySide = derived(this, reader => {\n\t\tif (this.compactMode.read(reader)) {\n\t\t\tif (this.shouldRenderInlineViewInSmartMode.read(reader)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn this._options.read(reader).renderSideBySide\n\t\t\t&& !(this._options.read(reader).useInlineViewWhenSpaceIsLimited && this.couldShowInlineViewBecauseOfSize.read(reader) && !this._screenReaderMode.read(reader));\n\t});\n\tpublic readonly readOnly = derived(this, reader => this._options.read(reader).readOnly);\n\n\tpublic readonly shouldRenderOldRevertArrows = derived(this, reader => {\n\t\tif (!this._options.read(reader).renderMarginRevertIcon) { return false; }\n\t\tif (!this.renderSideBySide.read(reader)) { return false; }\n\t\tif (this.readOnly.read(reader)) { return false; }\n\t\tif (this.shouldRenderGutterMenu.read(reader)) { return false; }\n\t\treturn true;\n\t});\n\n\tpublic readonly shouldRenderGutterMenu = derived(this, reader => this._options.read(reader).renderGutterMenu);\n\tpublic readonly renderIndicators = derived(this, reader => this._options.read(reader).renderIndicators);\n\tpublic readonly enableSplitViewResizing = derived(this, reader => this._options.read(reader).enableSplitViewResizing);\n\tpublic readonly splitViewDefaultRatio = derived(this, reader => this._options.read(reader).splitViewDefaultRatio);\n\tpublic readonly ignoreTrimWhitespace = derived(this, reader => this._options.read(reader).ignoreTrimWhitespace);\n\tpublic readonly maxComputationTimeMs = derived(this, reader => this._options.read(reader).maxComputationTime);\n\tpublic readonly showMoves = derived(this, reader => this._options.read(reader).experimental.showMoves! && this.renderSideBySide.read(reader));\n\tpublic readonly isInEmbeddedEditor = derived(this, reader => this._options.read(reader).isInEmbeddedEditor);\n\tpublic readonly diffWordWrap = derived(this, reader => this._options.read(reader).diffWordWrap);\n\tpublic readonly originalEditable = derived(this, reader => this._options.read(reader).originalEditable);\n\tpublic readonly diffCodeLens = derived(this, reader => this._options.read(reader).diffCodeLens);\n\tpublic readonly accessibilityVerbose = derived(this, reader => this._options.read(reader).accessibilityVerbose);\n\tpublic readonly diffAlgorithm = derived(this, reader => this._options.read(reader).diffAlgorithm);\n\tpublic readonly showEmptyDecorations = derived(this, reader => this._options.read(reader).experimental.showEmptyDecorations!);\n\tpublic readonly onlyShowAccessibleDiffViewer = derived(this, reader => this._options.read(reader).onlyShowAccessibleDiffViewer);\n\tpublic readonly compactMode = derived(this, reader => this._options.read(reader).compactMode);\n\tprivate readonly trueInlineDiffRenderingEnabled: IObservable<boolean> = derived(this, reader =>\n\t\tthis._options.read(reader).experimental.useTrueInlineView!\n\t);\n\n\tpublic readonly useTrueInlineDiffRendering: IObservable<boolean> = derived(this, reader =>\n\t\t!this.renderSideBySide.read(reader) && this.trueInlineDiffRenderingEnabled.read(reader)\n\t);\n\n\tpublic readonly hideUnchangedRegions = derived(this, reader => this._options.read(reader).hideUnchangedRegions.enabled!);\n\tpublic readonly hideUnchangedRegionsRevealLineCount = derived(this, reader => this._options.read(reader).hideUnchangedRegions.revealLineCount!);\n\tpublic readonly hideUnchangedRegionsContextLineCount = derived(this, reader => this._options.read(reader).hideUnchangedRegions.contextLineCount!);\n\tpublic readonly hideUnchangedRegionsMinimumLineCount = derived(this, reader => this._options.read(reader).hideUnchangedRegions.minimumLineCount!);\n\n\tpublic updateOptions(changedOptions: IDiffEditorOptions): void {\n\t\tconst newDiffEditorOptions = validateDiffEditorOptions(changedOptions, this._options.get());\n\t\tconst newOptions = { ...this._options.get(), ...changedOptions, ...newDiffEditorOptions };\n\t\tthis._options.set(newOptions, undefined, { changedOptions: changedOptions });\n\t}\n\n\tpublic setWidth(width: number): void {\n\t\tthis._diffEditorWidth.set(width, undefined);\n\t}\n\n\tprivate readonly _model = observableValue<DiffEditorViewModel | undefined>(this, undefined);\n\n\tpublic setModel(model: DiffEditorViewModel | undefined) {\n\t\tthis._model.set(model, undefined);\n\t}\n\n\tprivate readonly shouldRenderInlineViewInSmartMode = this._model\n\t\t.map(this, model => derivedConstOnceDefined(this, reader => {\n\t\t\tconst diffs = model?.diff.read(reader);\n\t\t\treturn diffs ? isSimpleDiff(diffs, this.trueInlineDiffRenderingEnabled.read(reader)) : undefined;\n\t\t}))\n\t\t.flatten()\n\t\t.map(this, v => !!v);\n\n\tpublic readonly inlineViewHideOriginalLineNumbers = this.compactMode;\n}\n\nfunction isSimpleDiff(diff: DiffState, supportsTrueDiffRendering: boolean): boolean {\n\treturn diff.mappings.every(m => isInsertion(m.lineRangeMapping) || isDeletion(m.lineRangeMapping) || (supportsTrueDiffRendering && allowsTrueInlineDiffRendering(m.lineRangeMapping)));\n}\n\nfunction isInsertion(mapping: LineRangeMapping): boolean {\n\treturn mapping.original.length === 0;\n}\n\nfunction isDeletion(mapping: LineRangeMapping): boolean {\n\treturn mapping.modified.length === 0;\n}\n\nfunction validateDiffEditorOptions(options: Readonly<IDiffEditorOptions>, defaults: typeof diffEditorDefaultOptions | ValidDiffEditorBaseOptions): ValidDiffEditorBaseOptions {\n\treturn {\n\t\tenableSplitViewResizing: validateBooleanOption(options.enableSplitViewResizing, defaults.enableSplitViewResizing),\n\t\tsplitViewDefaultRatio: clampedFloat(options.splitViewDefaultRatio, 0.5, 0.1, 0.9),\n\t\trenderSideBySide: validateBooleanOption(options.renderSideBySide, defaults.renderSideBySide),\n\t\trenderMarginRevertIcon: validateBooleanOption(options.renderMarginRevertIcon, defaults.renderMarginRevertIcon),\n\t\tmaxComputationTime: clampedInt(options.maxComputationTime, defaults.maxComputationTime, 0, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\tmaxFileSize: clampedInt(options.maxFileSize, defaults.maxFileSize, 0, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\tignoreTrimWhitespace: validateBooleanOption(options.ignoreTrimWhitespace, defaults.ignoreTrimWhitespace),\n\t\trenderIndicators: validateBooleanOption(options.renderIndicators, defaults.renderIndicators),\n\t\toriginalEditable: validateBooleanOption(options.originalEditable, defaults.originalEditable),\n\t\tdiffCodeLens: validateBooleanOption(options.diffCodeLens, defaults.diffCodeLens),\n\t\trenderOverviewRuler: validateBooleanOption(options.renderOverviewRuler, defaults.renderOverviewRuler),\n\t\tdiffWordWrap: validateStringSetOption<'off' | 'on' | 'inherit'>(options.diffWordWrap, defaults.diffWordWrap, ['off', 'on', 'inherit']),\n\t\tdiffAlgorithm: validateStringSetOption(options.diffAlgorithm, defaults.diffAlgorithm, ['legacy', 'advanced'], { 'smart': 'legacy', 'experimental': 'advanced' }),\n\t\taccessibilityVerbose: validateBooleanOption(options.accessibilityVerbose, defaults.accessibilityVerbose),\n\t\texperimental: {\n\t\t\tshowMoves: validateBooleanOption(options.experimental?.showMoves, defaults.experimental.showMoves!),\n\t\t\tshowEmptyDecorations: validateBooleanOption(options.experimental?.showEmptyDecorations, defaults.experimental.showEmptyDecorations!),\n\t\t\tuseTrueInlineView: validateBooleanOption(options.experimental?.useTrueInlineView, defaults.experimental.useTrueInlineView!),\n\t\t},\n\t\thideUnchangedRegions: {\n\t\t\tenabled: validateBooleanOption(options.hideUnchangedRegions?.enabled ?? (options.experimental as any)?.collapseUnchangedRegions, defaults.hideUnchangedRegions.enabled!),\n\t\t\tcontextLineCount: clampedInt(options.hideUnchangedRegions?.contextLineCount, defaults.hideUnchangedRegions.contextLineCount!, 0, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\tminimumLineCount: clampedInt(options.hideUnchangedRegions?.minimumLineCount, defaults.hideUnchangedRegions.minimumLineCount!, 0, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\trevealLineCount: clampedInt(options.hideUnchangedRegions?.revealLineCount, defaults.hideUnchangedRegions.revealLineCount!, 0, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t},\n\t\tisInEmbeddedEditor: validateBooleanOption(options.isInEmbeddedEditor, defaults.isInEmbeddedEditor),\n\t\tonlyShowAccessibleDiffViewer: validateBooleanOption(options.onlyShowAccessibleDiffViewer, defaults.onlyShowAccessibleDiffViewer),\n\t\trenderSideBySideInlineBreakpoint: clampedInt(options.renderSideBySideInlineBreakpoint, defaults.renderSideBySideInlineBreakpoint, 0, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\tuseInlineViewWhenSpaceIsLimited: validateBooleanOption(options.useInlineViewWhenSpaceIsLimited, defaults.useInlineViewWhenSpaceIsLimited),\n\t\trenderGutterMenu: validateBooleanOption(options.renderGutterMenu, defaults.renderGutterMenu),\n\t\tcompactMode: validateBooleanOption(options.compactMode, defaults.compactMode),\n\t};\n}\n"],
  "mappings": "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",
  "names": []
}
