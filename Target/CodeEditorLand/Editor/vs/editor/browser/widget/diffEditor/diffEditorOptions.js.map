{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/diffEditorOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype IObservable,\n\ttype ISettableObservable,\n\tderived,\n\tderivedConstOnceDefined,\n\tobservableFromEvent,\n\tobservableValue,\n} from \"../../../../base/common/observable.js\";\nimport { Constants } from \"../../../../base/common/uint.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport { diffEditorDefaultOptions } from \"../../../common/config/diffEditor.js\";\nimport {\n\ttype IDiffEditorBaseOptions,\n\ttype IDiffEditorOptions,\n\ttype IEditorOptions,\n\ttype ValidDiffEditorBaseOptions,\n\tclampedFloat,\n\tclampedInt,\n\tboolean as validateBooleanOption,\n\tstringSet as validateStringSetOption,\n} from \"../../../common/config/editorOptions.js\";\nimport type { LineRangeMapping } from \"../../../common/diff/rangeMapping.js\";\nimport { allowsTrueInlineDiffRendering } from \"./components/diffEditorViewZones/diffEditorViewZones.js\";\nimport type { DiffEditorViewModel, DiffState } from \"./diffEditorViewModel.js\";\n\nexport class DiffEditorOptions {\n\tprivate readonly _options: ISettableObservable<\n\t\tIEditorOptions & Required<IDiffEditorBaseOptions>,\n\t\t{ changedOptions: IDiffEditorOptions }\n\t>;\n\n\tpublic get editorOptions(): IObservable<\n\t\tIEditorOptions,\n\t\t{ changedOptions: IEditorOptions }\n\t> {\n\t\treturn this._options;\n\t}\n\n\tprivate readonly _diffEditorWidth = observableValue<number>(this, 0);\n\n\tprivate readonly _screenReaderMode = observableFromEvent(\n\t\tthis,\n\t\tthis._accessibilityService.onDidChangeScreenReaderOptimized,\n\t\t() => this._accessibilityService.isScreenReaderOptimized(),\n\t);\n\n\tconstructor(\n\t\toptions: Readonly<IDiffEditorOptions>,\n\t\t@IAccessibilityService\n\t\tprivate readonly _accessibilityService: IAccessibilityService,\n\t) {\n\t\tconst optionsCopy = {\n\t\t\t...options,\n\t\t\t...validateDiffEditorOptions(options, diffEditorDefaultOptions),\n\t\t};\n\t\tthis._options = observableValue(this, optionsCopy);\n\t}\n\n\tpublic readonly couldShowInlineViewBecauseOfSize = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\tthis._options.read(reader).renderSideBySide &&\n\t\t\tthis._diffEditorWidth.read(reader) <=\n\t\t\t\tthis._options.read(reader).renderSideBySideInlineBreakpoint,\n\t);\n\n\tpublic readonly renderOverviewRuler = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).renderOverviewRuler,\n\t);\n\tpublic readonly renderSideBySide = derived(this, (reader) => {\n\t\tif (this.compactMode.read(reader)) {\n\t\t\tif (this.shouldRenderInlineViewInSmartMode.read(reader)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\tthis._options.read(reader).renderSideBySide &&\n\t\t\t!(\n\t\t\t\tthis._options.read(reader).useInlineViewWhenSpaceIsLimited &&\n\t\t\t\tthis.couldShowInlineViewBecauseOfSize.read(reader) &&\n\t\t\t\t!this._screenReaderMode.read(reader)\n\t\t\t)\n\t\t);\n\t});\n\tpublic readonly readOnly = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).readOnly,\n\t);\n\n\tpublic readonly shouldRenderOldRevertArrows = derived(this, (reader) => {\n\t\tif (!this._options.read(reader).renderMarginRevertIcon) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.renderSideBySide.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.readOnly.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.shouldRenderGutterMenu.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\tpublic readonly shouldRenderGutterMenu = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).renderGutterMenu,\n\t);\n\tpublic readonly renderIndicators = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).renderIndicators,\n\t);\n\tpublic readonly enableSplitViewResizing = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).enableSplitViewResizing,\n\t);\n\tpublic readonly splitViewDefaultRatio = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).splitViewDefaultRatio,\n\t);\n\tpublic readonly ignoreTrimWhitespace = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).ignoreTrimWhitespace,\n\t);\n\tpublic readonly maxComputationTimeMs = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).maxComputationTime,\n\t);\n\tpublic readonly showMoves = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\tthis._options.read(reader).experimental.showMoves! &&\n\t\t\tthis.renderSideBySide.read(reader),\n\t);\n\tpublic readonly isInEmbeddedEditor = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).isInEmbeddedEditor,\n\t);\n\tpublic readonly diffWordWrap = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).diffWordWrap,\n\t);\n\tpublic readonly originalEditable = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).originalEditable,\n\t);\n\tpublic readonly diffCodeLens = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).diffCodeLens,\n\t);\n\tpublic readonly accessibilityVerbose = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).accessibilityVerbose,\n\t);\n\tpublic readonly diffAlgorithm = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).diffAlgorithm,\n\t);\n\tpublic readonly showEmptyDecorations = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\tthis._options.read(reader).experimental.showEmptyDecorations!,\n\t);\n\tpublic readonly onlyShowAccessibleDiffViewer = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).onlyShowAccessibleDiffViewer,\n\t);\n\tpublic readonly compactMode = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).compactMode,\n\t);\n\tprivate readonly trueInlineDiffRenderingEnabled: IObservable<boolean> =\n\t\tderived(\n\t\t\tthis,\n\t\t\t(reader) =>\n\t\t\t\tthis._options.read(reader).experimental.useTrueInlineView!,\n\t\t);\n\n\tpublic readonly useTrueInlineDiffRendering: IObservable<boolean> = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\t!this.renderSideBySide.read(reader) &&\n\t\t\tthis.trueInlineDiffRenderingEnabled.read(reader),\n\t);\n\n\tpublic readonly hideUnchangedRegions = derived(\n\t\tthis,\n\t\t(reader) => this._options.read(reader).hideUnchangedRegions.enabled!,\n\t);\n\tpublic readonly hideUnchangedRegionsRevealLineCount = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\tthis._options.read(reader).hideUnchangedRegions.revealLineCount!,\n\t);\n\tpublic readonly hideUnchangedRegionsContextLineCount = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\tthis._options.read(reader).hideUnchangedRegions.contextLineCount!,\n\t);\n\tpublic readonly hideUnchangedRegionsMinimumLineCount = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\tthis._options.read(reader).hideUnchangedRegions.minimumLineCount!,\n\t);\n\n\tpublic updateOptions(changedOptions: IDiffEditorOptions): void {\n\t\tconst newDiffEditorOptions = validateDiffEditorOptions(\n\t\t\tchangedOptions,\n\t\t\tthis._options.get(),\n\t\t);\n\t\tconst newOptions = {\n\t\t\t...this._options.get(),\n\t\t\t...changedOptions,\n\t\t\t...newDiffEditorOptions,\n\t\t};\n\t\tthis._options.set(newOptions, undefined, {\n\t\t\tchangedOptions: changedOptions,\n\t\t});\n\t}\n\n\tpublic setWidth(width: number): void {\n\t\tthis._diffEditorWidth.set(width, undefined);\n\t}\n\n\tprivate readonly _model = observableValue<DiffEditorViewModel | undefined>(\n\t\tthis,\n\t\tundefined,\n\t);\n\n\tpublic setModel(model: DiffEditorViewModel | undefined) {\n\t\tthis._model.set(model, undefined);\n\t}\n\n\tprivate readonly shouldRenderInlineViewInSmartMode = this._model\n\t\t.map(this, (model) =>\n\t\t\tderivedConstOnceDefined(this, (reader) => {\n\t\t\t\tconst diffs = model?.diff.read(reader);\n\t\t\t\treturn diffs\n\t\t\t\t\t? isSimpleDiff(\n\t\t\t\t\t\t\tdiffs,\n\t\t\t\t\t\t\tthis.trueInlineDiffRenderingEnabled.read(reader),\n\t\t\t\t\t\t)\n\t\t\t\t\t: undefined;\n\t\t\t}),\n\t\t)\n\t\t.flatten()\n\t\t.map(this, (v) => !!v);\n\n\tpublic readonly inlineViewHideOriginalLineNumbers = this.compactMode;\n}\n\nfunction isSimpleDiff(\n\tdiff: DiffState,\n\tsupportsTrueDiffRendering: boolean,\n): boolean {\n\treturn diff.mappings.every(\n\t\t(m) =>\n\t\t\tisInsertion(m.lineRangeMapping) ||\n\t\t\tisDeletion(m.lineRangeMapping) ||\n\t\t\t(supportsTrueDiffRendering &&\n\t\t\t\tallowsTrueInlineDiffRendering(m.lineRangeMapping)),\n\t);\n}\n\nfunction isInsertion(mapping: LineRangeMapping): boolean {\n\treturn mapping.original.length === 0;\n}\n\nfunction isDeletion(mapping: LineRangeMapping): boolean {\n\treturn mapping.modified.length === 0;\n}\n\nfunction validateDiffEditorOptions(\n\toptions: Readonly<IDiffEditorOptions>,\n\tdefaults: typeof diffEditorDefaultOptions | ValidDiffEditorBaseOptions,\n): ValidDiffEditorBaseOptions {\n\treturn {\n\t\tenableSplitViewResizing: validateBooleanOption(\n\t\t\toptions.enableSplitViewResizing,\n\t\t\tdefaults.enableSplitViewResizing,\n\t\t),\n\t\tsplitViewDefaultRatio: clampedFloat(\n\t\t\toptions.splitViewDefaultRatio,\n\t\t\t0.5,\n\t\t\t0.1,\n\t\t\t0.9,\n\t\t),\n\t\trenderSideBySide: validateBooleanOption(\n\t\t\toptions.renderSideBySide,\n\t\t\tdefaults.renderSideBySide,\n\t\t),\n\t\trenderMarginRevertIcon: validateBooleanOption(\n\t\t\toptions.renderMarginRevertIcon,\n\t\t\tdefaults.renderMarginRevertIcon,\n\t\t),\n\t\tmaxComputationTime: clampedInt(\n\t\t\toptions.maxComputationTime,\n\t\t\tdefaults.maxComputationTime,\n\t\t\t0,\n\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t),\n\t\tmaxFileSize: clampedInt(\n\t\t\toptions.maxFileSize,\n\t\t\tdefaults.maxFileSize,\n\t\t\t0,\n\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t),\n\t\tignoreTrimWhitespace: validateBooleanOption(\n\t\t\toptions.ignoreTrimWhitespace,\n\t\t\tdefaults.ignoreTrimWhitespace,\n\t\t),\n\t\trenderIndicators: validateBooleanOption(\n\t\t\toptions.renderIndicators,\n\t\t\tdefaults.renderIndicators,\n\t\t),\n\t\toriginalEditable: validateBooleanOption(\n\t\t\toptions.originalEditable,\n\t\t\tdefaults.originalEditable,\n\t\t),\n\t\tdiffCodeLens: validateBooleanOption(\n\t\t\toptions.diffCodeLens,\n\t\t\tdefaults.diffCodeLens,\n\t\t),\n\t\trenderOverviewRuler: validateBooleanOption(\n\t\t\toptions.renderOverviewRuler,\n\t\t\tdefaults.renderOverviewRuler,\n\t\t),\n\t\tdiffWordWrap: validateStringSetOption<\"off\" | \"on\" | \"inherit\">(\n\t\t\toptions.diffWordWrap,\n\t\t\tdefaults.diffWordWrap,\n\t\t\t[\"off\", \"on\", \"inherit\"],\n\t\t),\n\t\tdiffAlgorithm: validateStringSetOption(\n\t\t\toptions.diffAlgorithm,\n\t\t\tdefaults.diffAlgorithm,\n\t\t\t[\"legacy\", \"advanced\"],\n\t\t\t{ smart: \"legacy\", experimental: \"advanced\" },\n\t\t),\n\t\taccessibilityVerbose: validateBooleanOption(\n\t\t\toptions.accessibilityVerbose,\n\t\t\tdefaults.accessibilityVerbose,\n\t\t),\n\t\texperimental: {\n\t\t\tshowMoves: validateBooleanOption(\n\t\t\t\toptions.experimental?.showMoves,\n\t\t\t\tdefaults.experimental.showMoves!,\n\t\t\t),\n\t\t\tshowEmptyDecorations: validateBooleanOption(\n\t\t\t\toptions.experimental?.showEmptyDecorations,\n\t\t\t\tdefaults.experimental.showEmptyDecorations!,\n\t\t\t),\n\t\t\tuseTrueInlineView: validateBooleanOption(\n\t\t\t\toptions.experimental?.useTrueInlineView,\n\t\t\t\tdefaults.experimental.useTrueInlineView!,\n\t\t\t),\n\t\t},\n\t\thideUnchangedRegions: {\n\t\t\tenabled: validateBooleanOption(\n\t\t\t\toptions.hideUnchangedRegions?.enabled ??\n\t\t\t\t\t(options.experimental as any)?.collapseUnchangedRegions,\n\t\t\t\tdefaults.hideUnchangedRegions.enabled!,\n\t\t\t),\n\t\t\tcontextLineCount: clampedInt(\n\t\t\t\toptions.hideUnchangedRegions?.contextLineCount,\n\t\t\t\tdefaults.hideUnchangedRegions.contextLineCount!,\n\t\t\t\t0,\n\t\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t),\n\t\t\tminimumLineCount: clampedInt(\n\t\t\t\toptions.hideUnchangedRegions?.minimumLineCount,\n\t\t\t\tdefaults.hideUnchangedRegions.minimumLineCount!,\n\t\t\t\t0,\n\t\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t),\n\t\t\trevealLineCount: clampedInt(\n\t\t\t\toptions.hideUnchangedRegions?.revealLineCount,\n\t\t\t\tdefaults.hideUnchangedRegions.revealLineCount!,\n\t\t\t\t0,\n\t\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t),\n\t\t},\n\t\tisInEmbeddedEditor: validateBooleanOption(\n\t\t\toptions.isInEmbeddedEditor,\n\t\t\tdefaults.isInEmbeddedEditor,\n\t\t),\n\t\tonlyShowAccessibleDiffViewer: validateBooleanOption(\n\t\t\toptions.onlyShowAccessibleDiffViewer,\n\t\t\tdefaults.onlyShowAccessibleDiffViewer,\n\t\t),\n\t\trenderSideBySideInlineBreakpoint: clampedInt(\n\t\t\toptions.renderSideBySideInlineBreakpoint,\n\t\t\tdefaults.renderSideBySideInlineBreakpoint,\n\t\t\t0,\n\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t),\n\t\tuseInlineViewWhenSpaceIsLimited: validateBooleanOption(\n\t\t\toptions.useInlineViewWhenSpaceIsLimited,\n\t\t\tdefaults.useInlineViewWhenSpaceIsLimited,\n\t\t),\n\t\trenderGutterMenu: validateBooleanOption(\n\t\t\toptions.renderGutterMenu,\n\t\t\tdefaults.renderGutterMenu,\n\t\t),\n\t\tcompactMode: validateBooleanOption(\n\t\t\toptions.compactMode,\n\t\t\tdefaults.compactMode,\n\t\t),\n\t};\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EAGC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,iBAAiB;AAC1B,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC;AAAA,EAKC;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,aAAa;AAAA,OACP;AAEP,SAAS,qCAAqC;AAGvC,IAAM,oBAAN,MAAwB;AAAA,EAqB9B,YACC,SAEiB,uBAChB;AADgB;AAEjB,UAAM,cAAc;AAAA,MACnB,GAAG;AAAA,MACH,GAAG,0BAA0B,SAAS,wBAAwB;AAAA,IAC/D;AACA,SAAK,WAAW,gBAAgB,MAAM,WAAW;AAAA,EAClD;AAAA,EA7DD,OA8B+B;AAAA;AAAA;AAAA,EACb;AAAA,EAKjB,IAAW,gBAGT;AACD,WAAO,KAAK;AAAA,EACb;AAAA,EAEiB,mBAAmB,gBAAwB,MAAM,CAAC;AAAA,EAElD,oBAAoB;AAAA,IACpC;AAAA,IACA,KAAK,sBAAsB;AAAA,IAC3B,MAAM,KAAK,sBAAsB,wBAAwB;AAAA,EAC1D;AAAA,EAcgB,mCAAmC;AAAA,IAClD;AAAA,IACA,CAAC,WACA,KAAK,SAAS,KAAK,MAAM,EAAE,oBAC3B,KAAK,iBAAiB,KAAK,MAAM,KAChC,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EAC9B;AAAA,EAEgB,sBAAsB;AAAA,IACrC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,mBAAmB,QAAQ,MAAM,CAAC,WAAW;AAC5D,QAAI,KAAK,YAAY,KAAK,MAAM,GAAG;AAClC,UAAI,KAAK,kCAAkC,KAAK,MAAM,GAAG;AACxD,eAAO;AAAA,MACR;AAAA,IACD;AAEA,WACC,KAAK,SAAS,KAAK,MAAM,EAAE,oBAC3B,EACC,KAAK,SAAS,KAAK,MAAM,EAAE,mCAC3B,KAAK,iCAAiC,KAAK,MAAM,KACjD,CAAC,KAAK,kBAAkB,KAAK,MAAM;AAAA,EAGtC,CAAC;AAAA,EACe,WAAW;AAAA,IAC1B;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EAEgB,8BAA8B,QAAQ,MAAM,CAAC,WAAW;AACvE,QAAI,CAAC,KAAK,SAAS,KAAK,MAAM,EAAE,wBAAwB;AACvD,aAAO;AAAA,IACR;AACA,QAAI,CAAC,KAAK,iBAAiB,KAAK,MAAM,GAAG;AACxC,aAAO;AAAA,IACR;AACA,QAAI,KAAK,SAAS,KAAK,MAAM,GAAG;AAC/B,aAAO;AAAA,IACR;AACA,QAAI,KAAK,uBAAuB,KAAK,MAAM,GAAG;AAC7C,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR,CAAC;AAAA,EAEe,yBAAyB;AAAA,IACxC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,mBAAmB;AAAA,IAClC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,0BAA0B;AAAA,IACzC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,wBAAwB;AAAA,IACvC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,uBAAuB;AAAA,IACtC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,uBAAuB;AAAA,IACtC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,YAAY;AAAA,IAC3B;AAAA,IACA,CAAC,WACA,KAAK,SAAS,KAAK,MAAM,EAAE,aAAa,aACxC,KAAK,iBAAiB,KAAK,MAAM;AAAA,EACnC;AAAA,EACgB,qBAAqB;AAAA,IACpC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,eAAe;AAAA,IAC9B;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,mBAAmB;AAAA,IAClC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,eAAe;AAAA,IAC9B;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,uBAAuB;AAAA,IACtC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,gBAAgB;AAAA,IAC/B;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,uBAAuB;AAAA,IACtC;AAAA,IACA,CAAC,WACA,KAAK,SAAS,KAAK,MAAM,EAAE,aAAa;AAAA,EAC1C;AAAA,EACgB,+BAA+B;AAAA,IAC9C;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACgB,cAAc;AAAA,IAC7B;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE;AAAA,EACxC;AAAA,EACiB,iCAChB;AAAA,IACC;AAAA,IACA,CAAC,WACA,KAAK,SAAS,KAAK,MAAM,EAAE,aAAa;AAAA,EAC1C;AAAA,EAEe,6BAAmD;AAAA,IAClE;AAAA,IACA,CAAC,WACA,CAAC,KAAK,iBAAiB,KAAK,MAAM,KAClC,KAAK,+BAA+B,KAAK,MAAM;AAAA,EACjD;AAAA,EAEgB,uBAAuB;AAAA,IACtC;AAAA,IACA,CAAC,WAAW,KAAK,SAAS,KAAK,MAAM,EAAE,qBAAqB;AAAA,EAC7D;AAAA,EACgB,sCAAsC;AAAA,IACrD;AAAA,IACA,CAAC,WACA,KAAK,SAAS,KAAK,MAAM,EAAE,qBAAqB;AAAA,EAClD;AAAA,EACgB,uCAAuC;AAAA,IACtD;AAAA,IACA,CAAC,WACA,KAAK,SAAS,KAAK,MAAM,EAAE,qBAAqB;AAAA,EAClD;AAAA,EACgB,uCAAuC;AAAA,IACtD;AAAA,IACA,CAAC,WACA,KAAK,SAAS,KAAK,MAAM,EAAE,qBAAqB;AAAA,EAClD;AAAA,EAEO,cAAc,gBAA0C;AAC9D,UAAM,uBAAuB;AAAA,MAC5B;AAAA,MACA,KAAK,SAAS,IAAI;AAAA,IACnB;AACA,UAAM,aAAa;AAAA,MAClB,GAAG,KAAK,SAAS,IAAI;AAAA,MACrB,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AACA,SAAK,SAAS,IAAI,YAAY,QAAW;AAAA,MACxC;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEO,SAAS,OAAqB;AACpC,SAAK,iBAAiB,IAAI,OAAO,MAAS;AAAA,EAC3C;AAAA,EAEiB,SAAS;AAAA,IACzB;AAAA,IACA;AAAA,EACD;AAAA,EAEO,SAAS,OAAwC;AACvD,SAAK,OAAO,IAAI,OAAO,MAAS;AAAA,EACjC;AAAA,EAEiB,oCAAoC,KAAK,OACxD;AAAA,IAAI;AAAA,IAAM,CAAC,UACX,wBAAwB,MAAM,CAAC,WAAW;AACzC,YAAM,QAAQ,OAAO,KAAK,KAAK,MAAM;AACrC,aAAO,QACJ;AAAA,QACA;AAAA,QACA,KAAK,+BAA+B,KAAK,MAAM;AAAA,MAChD,IACC;AAAA,IACJ,CAAC;AAAA,EACF,EACC,QAAQ,EACR,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA,EAEN,oCAAoC,KAAK;AAC1D;AAnOa,oBAAN;AAAA,EAuBJ;AAAA,GAvBU;AAqOb,SAAS,aACR,MACA,2BACU;AACV,SAAO,KAAK,SAAS;AAAA,IACpB,CAAC,MACA,YAAY,EAAE,gBAAgB,KAC9B,WAAW,EAAE,gBAAgB,KAC5B,6BACA,8BAA8B,EAAE,gBAAgB;AAAA,EACnD;AACD;AAXS;AAaT,SAAS,YAAY,SAAoC;AACxD,SAAO,QAAQ,SAAS,WAAW;AACpC;AAFS;AAIT,SAAS,WAAW,SAAoC;AACvD,SAAO,QAAQ,SAAS,WAAW;AACpC;AAFS;AAIT,SAAS,0BACR,SACA,UAC6B;AAC7B,SAAO;AAAA,IACN,yBAAyB;AAAA,MACxB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,uBAAuB;AAAA,MACtB,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,IACA,kBAAkB;AAAA,MACjB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,wBAAwB;AAAA,MACvB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,oBAAoB;AAAA,MACnB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT;AAAA,MACA,UAAU;AAAA,IACX;AAAA,IACA,aAAa;AAAA,MACZ,QAAQ;AAAA,MACR,SAAS;AAAA,MACT;AAAA,MACA,UAAU;AAAA,IACX;AAAA,IACA,sBAAsB;AAAA,MACrB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,kBAAkB;AAAA,MACjB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,kBAAkB;AAAA,MACjB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,cAAc;AAAA,MACb,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,qBAAqB;AAAA,MACpB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,cAAc;AAAA,MACb,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,CAAC,OAAO,MAAM,SAAS;AAAA,IACxB;AAAA,IACA,eAAe;AAAA,MACd,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,CAAC,UAAU,UAAU;AAAA,MACrB,EAAE,OAAO,UAAU,cAAc,WAAW;AAAA,IAC7C;AAAA,IACA,sBAAsB;AAAA,MACrB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,cAAc;AAAA,MACb,WAAW;AAAA,QACV,QAAQ,cAAc;AAAA,QACtB,SAAS,aAAa;AAAA,MACvB;AAAA,MACA,sBAAsB;AAAA,QACrB,QAAQ,cAAc;AAAA,QACtB,SAAS,aAAa;AAAA,MACvB;AAAA,MACA,mBAAmB;AAAA,QAClB,QAAQ,cAAc;AAAA,QACtB,SAAS,aAAa;AAAA,MACvB;AAAA,IACD;AAAA,IACA,sBAAsB;AAAA,MACrB,SAAS;AAAA,QACR,QAAQ,sBAAsB,WAC5B,QAAQ,cAAsB;AAAA,QAChC,SAAS,qBAAqB;AAAA,MAC/B;AAAA,MACA,kBAAkB;AAAA,QACjB,QAAQ,sBAAsB;AAAA,QAC9B,SAAS,qBAAqB;AAAA,QAC9B;AAAA,QACA,UAAU;AAAA,MACX;AAAA,MACA,kBAAkB;AAAA,QACjB,QAAQ,sBAAsB;AAAA,QAC9B,SAAS,qBAAqB;AAAA,QAC9B;AAAA,QACA,UAAU;AAAA,MACX;AAAA,MACA,iBAAiB;AAAA,QAChB,QAAQ,sBAAsB;AAAA,QAC9B,SAAS,qBAAqB;AAAA,QAC9B;AAAA,QACA,UAAU;AAAA,MACX;AAAA,IACD;AAAA,IACA,oBAAoB;AAAA,MACnB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,8BAA8B;AAAA,MAC7B,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,kCAAkC;AAAA,MACjC,QAAQ;AAAA,MACR,SAAS;AAAA,MACT;AAAA,MACA,UAAU;AAAA,IACX;AAAA,IACA,iCAAiC;AAAA,MAChC,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,kBAAkB;AAAA,MACjB,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACZ,QAAQ;AAAA,MACR,SAAS;AAAA,IACV;AAAA,EACD;AACD;AAxIS;",
  "names": []
}
