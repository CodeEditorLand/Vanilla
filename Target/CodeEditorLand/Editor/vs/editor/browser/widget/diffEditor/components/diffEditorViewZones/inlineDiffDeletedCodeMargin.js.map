{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/inlineDiffDeletedCodeMargin.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\taddStandardDisposableListener,\n\tgetDomNodePagePosition,\n} from \"../../../../../../base/browser/dom.js\";\nimport { Action } from \"../../../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../../../base/common/codicons.js\";\nimport { Disposable } from \"../../../../../../base/common/lifecycle.js\";\nimport { isIOS } from \"../../../../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../../../../base/common/themables.js\";\nimport { localize } from \"../../../../../../nls.js\";\nimport type { IClipboardService } from \"../../../../../../platform/clipboard/common/clipboardService.js\";\nimport type { IContextMenuService } from \"../../../../../../platform/contextview/browser/contextView.js\";\nimport { EditorOption } from \"../../../../../common/config/editorOptions.js\";\nimport type { DetailedLineRangeMapping } from \"../../../../../common/diff/rangeMapping.js\";\nimport {\n\tEndOfLineSequence,\n\ttype ITextModel,\n} from \"../../../../../common/model.js\";\nimport {\n\ttype IEditorMouseEvent,\n\tMouseTargetType,\n} from \"../../../../editorBrowser.js\";\nimport type { CodeEditorWidget } from \"../../../codeEditor/codeEditorWidget.js\";\nimport type { DiffEditorWidget } from \"../../diffEditorWidget.js\";\n\nexport class InlineDiffDeletedCodeMargin extends Disposable {\n\tprivate readonly _diffActions: HTMLElement;\n\n\tprivate _visibility = false;\n\n\tget visibility(): boolean {\n\t\treturn this._visibility;\n\t}\n\n\tset visibility(_visibility: boolean) {\n\t\tif (this._visibility !== _visibility) {\n\t\t\tthis._visibility = _visibility;\n\t\t\tthis._diffActions.style.visibility = _visibility\n\t\t\t\t? \"visible\"\n\t\t\t\t: \"hidden\";\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate readonly _getViewZoneId: () => string,\n\t\tprivate readonly _marginDomNode: HTMLElement,\n\t\tprivate readonly _modifiedEditor: CodeEditorWidget,\n\t\tprivate readonly _diff: DetailedLineRangeMapping,\n\t\tprivate readonly _editor: DiffEditorWidget,\n\t\tprivate readonly _viewLineCounts: number[],\n\t\tprivate readonly _originalTextModel: ITextModel,\n\t\tprivate readonly _contextMenuService: IContextMenuService,\n\t\tprivate readonly _clipboardService: IClipboardService,\n\t) {\n\t\tsuper();\n\n\t\t// make sure the diff margin shows above overlay.\n\t\tthis._marginDomNode.style.zIndex = \"10\";\n\n\t\tthis._diffActions = document.createElement(\"div\");\n\t\tthis._diffActions.className =\n\t\t\tThemeIcon.asClassName(Codicon.lightBulb) + \" lightbulb-glyph\";\n\t\tthis._diffActions.style.position = \"absolute\";\n\t\tconst lineHeight = this._modifiedEditor.getOption(\n\t\t\tEditorOption.lineHeight,\n\t\t);\n\t\tthis._diffActions.style.right = \"0px\";\n\t\tthis._diffActions.style.visibility = \"hidden\";\n\t\tthis._diffActions.style.height = `${lineHeight}px`;\n\t\tthis._diffActions.style.lineHeight = `${lineHeight}px`;\n\t\tthis._marginDomNode.appendChild(this._diffActions);\n\n\t\tlet currentLineNumberOffset = 0;\n\n\t\tconst useShadowDOM =\n\t\t\t_modifiedEditor.getOption(EditorOption.useShadowDOM) && !isIOS; // Do not use shadow dom on IOS #122035\n\t\tconst showContextMenu = (x: number, y: number) => {\n\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\tdomForShadowRoot: useShadowDOM\n\t\t\t\t\t? (_modifiedEditor.getDomNode() ?? undefined)\n\t\t\t\t\t: undefined,\n\t\t\t\tgetAnchor: () => ({ x, y }),\n\t\t\t\tgetActions: () => {\n\t\t\t\t\tconst actions: Action[] = [];\n\t\t\t\t\tconst isDeletion = _diff.modified.isEmpty;\n\n\t\t\t\t\t// default action\n\t\t\t\t\tactions.push(\n\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\"diff.clipboard.copyDeletedContent\",\n\t\t\t\t\t\t\tisDeletion\n\t\t\t\t\t\t\t\t? _diff.original.length > 1\n\t\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\t\"diff.clipboard.copyDeletedLinesContent.label\",\n\t\t\t\t\t\t\t\t\t\t\t\"Copy deleted lines\",\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"diff.clipboard.copyDeletedLinesContent.single.label\",\n\t\t\t\t\t\t\t\t\t\t\t\"Copy deleted line\",\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: _diff.original.length > 1\n\t\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\t\"diff.clipboard.copyChangedLinesContent.label\",\n\t\t\t\t\t\t\t\t\t\t\t\"Copy changed lines\",\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"diff.clipboard.copyChangedLinesContent.single.label\",\n\t\t\t\t\t\t\t\t\t\t\t\"Copy changed line\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tasync () => {\n\t\t\t\t\t\t\t\tconst originalText =\n\t\t\t\t\t\t\t\t\tthis._originalTextModel.getValueInRange(\n\t\t\t\t\t\t\t\t\t\t_diff.original.toExclusiveRange(),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tawait this._clipboardService.writeText(\n\t\t\t\t\t\t\t\t\toriginalText,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\tif (_diff.original.length > 1) {\n\t\t\t\t\t\tactions.push(\n\t\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\t\"diff.clipboard.copyDeletedLineContent\",\n\t\t\t\t\t\t\t\tisDeletion\n\t\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\t\"diff.clipboard.copyDeletedLineContent.label\",\n\t\t\t\t\t\t\t\t\t\t\t\"Copy deleted line ({0})\",\n\t\t\t\t\t\t\t\t\t\t\t_diff.original.startLineNumber +\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentLineNumberOffset,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"diff.clipboard.copyChangedLineContent.label\",\n\t\t\t\t\t\t\t\t\t\t\t\"Copy changed line ({0})\",\n\t\t\t\t\t\t\t\t\t\t\t_diff.original.startLineNumber +\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentLineNumberOffset,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tasync () => {\n\t\t\t\t\t\t\t\t\tlet lineContent =\n\t\t\t\t\t\t\t\t\t\tthis._originalTextModel.getLineContent(\n\t\t\t\t\t\t\t\t\t\t\t_diff.original.startLineNumber +\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentLineNumberOffset,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (lineContent === \"\") {\n\t\t\t\t\t\t\t\t\t\t// empty line -> new line\n\t\t\t\t\t\t\t\t\t\tconst eof =\n\t\t\t\t\t\t\t\t\t\t\tthis._originalTextModel.getEndOfLineSequence();\n\t\t\t\t\t\t\t\t\t\tlineContent =\n\t\t\t\t\t\t\t\t\t\t\teof === EndOfLineSequence.LF\n\t\t\t\t\t\t\t\t\t\t\t\t? \"\\n\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\\r\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tawait this._clipboardService.writeText(\n\t\t\t\t\t\t\t\t\t\tlineContent,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst readOnly = _modifiedEditor.getOption(\n\t\t\t\t\t\tEditorOption.readOnly,\n\t\t\t\t\t);\n\t\t\t\t\tif (!readOnly) {\n\t\t\t\t\t\tactions.push(\n\t\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\t\"diff.inline.revertChange\",\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\"diff.inline.revertChange.label\",\n\t\t\t\t\t\t\t\t\t\"Revert this change\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tasync () => {\n\t\t\t\t\t\t\t\t\tthis._editor.revert(this._diff);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn actions;\n\t\t\t\t},\n\t\t\t\tautoSelectFirstItem: true,\n\t\t\t});\n\t\t};\n\n\t\tthis._register(\n\t\t\taddStandardDisposableListener(\n\t\t\t\tthis._diffActions,\n\t\t\t\t\"mousedown\",\n\t\t\t\t(e) => {\n\t\t\t\t\tif (!e.leftButton) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { top, height } = getDomNodePagePosition(\n\t\t\t\t\t\tthis._diffActions,\n\t\t\t\t\t);\n\t\t\t\t\tconst pad = Math.floor(lineHeight / 3);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tshowContextMenu(e.posx, top + height + pad);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\t_modifiedEditor.onMouseMove((e: IEditorMouseEvent) => {\n\t\t\t\tif (\n\t\t\t\t\t(e.target.type === MouseTargetType.CONTENT_VIEW_ZONE ||\n\t\t\t\t\t\te.target.type === MouseTargetType.GUTTER_VIEW_ZONE) &&\n\t\t\t\t\te.target.detail.viewZoneId === this._getViewZoneId()\n\t\t\t\t) {\n\t\t\t\t\tcurrentLineNumberOffset = this._updateLightBulbPosition(\n\t\t\t\t\t\tthis._marginDomNode,\n\t\t\t\t\t\te.event.browserEvent.y,\n\t\t\t\t\t\tlineHeight,\n\t\t\t\t\t);\n\t\t\t\t\tthis.visibility = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.visibility = false;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\t_modifiedEditor.onMouseDown((e: IEditorMouseEvent) => {\n\t\t\t\tif (!e.event.leftButton) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\te.target.type === MouseTargetType.CONTENT_VIEW_ZONE ||\n\t\t\t\t\te.target.type === MouseTargetType.GUTTER_VIEW_ZONE\n\t\t\t\t) {\n\t\t\t\t\tconst viewZoneId = e.target.detail.viewZoneId;\n\n\t\t\t\t\tif (viewZoneId === this._getViewZoneId()) {\n\t\t\t\t\t\te.event.preventDefault();\n\t\t\t\t\t\tcurrentLineNumberOffset = this._updateLightBulbPosition(\n\t\t\t\t\t\t\tthis._marginDomNode,\n\t\t\t\t\t\t\te.event.browserEvent.y,\n\t\t\t\t\t\t\tlineHeight,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tshowContextMenu(\n\t\t\t\t\t\t\te.event.posx,\n\t\t\t\t\t\t\te.event.posy + lineHeight,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _updateLightBulbPosition(\n\t\tmarginDomNode: HTMLElement,\n\t\ty: number,\n\t\tlineHeight: number,\n\t): number {\n\t\tconst { top } = getDomNodePagePosition(marginDomNode);\n\t\tconst offset = y - top;\n\t\tconst lineNumberOffset = Math.floor(offset / lineHeight);\n\t\tconst newTop = lineNumberOffset * lineHeight;\n\t\tthis._diffActions.style.top = `${newTop}px`;\n\t\tif (this._viewLineCounts) {\n\t\t\tlet acc = 0;\n\t\t\tfor (let i = 0; i < this._viewLineCounts.length; i++) {\n\t\t\t\tacc += this._viewLineCounts[i];\n\t\t\t\tif (lineNumberOffset < acc) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn lineNumberOffset;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
