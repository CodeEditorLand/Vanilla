{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/diffEditorWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, h } from \"../../../../base/browser/dom.js\";\nimport type { IBoundarySashes } from \"../../../../base/browser/ui/sash/sash.js\";\nimport { findLast } from \"../../../../base/common/arraysFind.js\";\nimport {\n\tBugIndicatingError,\n\tonUnexpectedError,\n} from \"../../../../base/common/errors.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport { readHotReloadableExport } from \"../../../../base/common/hotReloadHelpers.js\";\nimport { toDisposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\ttype ITransaction,\n\tautorun,\n\tautorunWithStore,\n\tderived,\n\tderivedDisposable,\n\tdisposableObservableValue,\n\tobservableFromEvent,\n\tobservableValue,\n\trecomputeInitiallyAndOnChange,\n\tsubtransaction,\n\ttransaction,\n} from \"../../../../base/common/observable.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { bindContextKey } from \"../../../../platform/observable/common/platformObservableUtils.js\";\nimport { IEditorProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport type { IDiffEditorOptions } from \"../../../common/config/editorOptions.js\";\nimport type { IDimension } from \"../../../common/core/dimension.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport {\n\tCursorChangeReason,\n\ttype ICursorPositionChangedEvent,\n} from \"../../../common/cursorEvents.js\";\nimport type {\n\tIDiffComputationResult,\n\tILineChange,\n} from \"../../../common/diff/legacyLinesDiffComputer.js\";\nimport type {\n\tLineRangeMapping,\n\tRangeMapping,\n} from \"../../../common/diff/rangeMapping.js\";\nimport {\n\tEditorType,\n\ttype IDiffEditorModel,\n\ttype IDiffEditorViewModel,\n\ttype IDiffEditorViewState,\n} from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport type { IIdentifiedSingleEditOperation } from \"../../../common/model.js\";\nimport type { IEditorConstructionOptions } from \"../../config/editorConfiguration.js\";\nimport type {\n\tICodeEditor,\n\tIDiffEditor,\n\tIDiffEditorConstructionOptions,\n} from \"../../editorBrowser.js\";\nimport {\n\tEditorExtensionsRegistry,\n\ttype IDiffEditorContributionDescription,\n} from \"../../editorExtensions.js\";\nimport { ICodeEditorService } from \"../../services/codeEditorService.js\";\nimport { StableEditorScrollState } from \"../../stableEditorScroll.js\";\nimport {\n\tCodeEditorWidget,\n\ttype ICodeEditorWidgetOptions,\n} from \"../codeEditor/codeEditorWidget.js\";\nimport {\n\tAccessibleDiffViewer,\n\tAccessibleDiffViewerModelFromEditors,\n} from \"./components/accessibleDiffViewer.js\";\nimport { DiffEditorDecorations } from \"./components/diffEditorDecorations.js\";\nimport { DiffEditorEditors } from \"./components/diffEditorEditors.js\";\nimport { DiffEditorSash, SashLayout } from \"./components/diffEditorSash.js\";\nimport { DiffEditorViewZones } from \"./components/diffEditorViewZones/diffEditorViewZones.js\";\nimport { DelegatingEditor } from \"./delegatingEditorImpl.js\";\nimport { DiffEditorOptions } from \"./diffEditorOptions.js\";\nimport {\n\tDiffEditorViewModel,\n\ttype DiffMapping,\n\ttype DiffState,\n} from \"./diffEditorViewModel.js\";\nimport { DiffEditorGutter } from \"./features/gutterFeature.js\";\nimport { HideUnchangedRegionsFeature } from \"./features/hideUnchangedRegionsFeature.js\";\nimport { MovedBlocksLinesFeature } from \"./features/movedBlocksLinesFeature.js\";\nimport { OverviewRulerFeature } from \"./features/overviewRulerFeature.js\";\nimport { RevertButtonsFeature } from \"./features/revertButtonsFeature.js\";\nimport \"./style.css\";\nimport {\n\ttype CSSStyle,\n\tObservableElementSizeObserver,\n\tRefCounted,\n\tapplyStyle,\n\tapplyViewZones,\n\ttranslatePosition,\n} from \"./utils.js\";\n\nexport interface IDiffCodeEditorWidgetOptions {\n\toriginalEditor?: ICodeEditorWidgetOptions;\n\tmodifiedEditor?: ICodeEditorWidgetOptions;\n}\n\nexport class DiffEditorWidget extends DelegatingEditor implements IDiffEditor {\n\tpublic static ENTIRE_DIFF_OVERVIEW_WIDTH =\n\t\tOverviewRulerFeature.ENTIRE_DIFF_OVERVIEW_WIDTH;\n\n\tprivate readonly elements = h(\n\t\t\"div.monaco-diff-editor.side-by-side\",\n\t\t{ style: { position: \"relative\", height: \"100%\" } },\n\t\t[\n\t\t\th(\"div.editor.original@original\", {\n\t\t\t\tstyle: { position: \"absolute\", height: \"100%\" },\n\t\t\t}),\n\t\t\th(\"div.editor.modified@modified\", {\n\t\t\t\tstyle: { position: \"absolute\", height: \"100%\" },\n\t\t\t}),\n\t\t\th(\"div.accessibleDiffViewer@accessibleDiffViewer\", {\n\t\t\t\tstyle: { position: \"absolute\", height: \"100%\" },\n\t\t\t}),\n\t\t],\n\t);\n\tprivate readonly _diffModelSrc = this._register(\n\t\tdisposableObservableValue<RefCounted<DiffEditorViewModel> | undefined>(\n\t\t\tthis,\n\t\t\tundefined,\n\t\t),\n\t);\n\tprivate readonly _diffModel = derived<DiffEditorViewModel | undefined>(\n\t\tthis,\n\t\t(reader) => this._diffModelSrc.read(reader)?.object,\n\t);\n\tpublic readonly onDidChangeModel = Event.fromObservableLight(\n\t\tthis._diffModel,\n\t);\n\n\tpublic get onDidContentSizeChange() {\n\t\treturn this._editors.onDidContentSizeChange;\n\t}\n\n\tprivate readonly _contextKeyService = this._register(\n\t\tthis._parentContextKeyService.createScoped(this._domElement),\n\t);\n\tprivate readonly _instantiationService = this._register(\n\t\tthis._parentInstantiationService.createChild(\n\t\t\tnew ServiceCollection([\n\t\t\t\tIContextKeyService,\n\t\t\t\tthis._contextKeyService,\n\t\t\t]),\n\t\t),\n\t);\n\tprivate readonly _rootSizeObserver: ObservableElementSizeObserver;\n\n\tprivate readonly _sashLayout: SashLayout;\n\tprivate readonly _sash: IObservable<DiffEditorSash | undefined>;\n\tprivate readonly _boundarySashes = observableValue<\n\t\tIBoundarySashes | undefined\n\t>(this, undefined);\n\n\tprivate _accessibleDiffViewerShouldBeVisible = observableValue(this, false);\n\tprivate _accessibleDiffViewerVisible = derived(this, (reader) =>\n\t\tthis._options.onlyShowAccessibleDiffViewer.read(reader)\n\t\t\t? true\n\t\t\t: this._accessibleDiffViewerShouldBeVisible.read(reader),\n\t);\n\tprivate readonly _accessibleDiffViewer: IObservable<AccessibleDiffViewer>;\n\tprivate readonly _options: DiffEditorOptions;\n\tprivate readonly _editors: DiffEditorEditors;\n\n\tprivate readonly _overviewRulerPart: IObservable<\n\t\tOverviewRulerFeature | undefined\n\t>;\n\tprivate readonly _movedBlocksLinesPart = observableValue<\n\t\tMovedBlocksLinesFeature | undefined\n\t>(this, undefined);\n\n\tprivate readonly _gutter: IObservable<DiffEditorGutter | undefined>;\n\n\tpublic get collapseUnchangedRegions() {\n\t\treturn this._options.hideUnchangedRegions.get();\n\t}\n\n\tconstructor(\n\t\tprivate readonly _domElement: HTMLElement,\n\t\toptions: Readonly<IDiffEditorConstructionOptions>,\n\t\tcodeEditorWidgetOptions: IDiffCodeEditorWidgetOptions,\n\t\t@IContextKeyService\n\t\tprivate readonly _parentContextKeyService: IContextKeyService,\n\t\t@IInstantiationService\n\t\tprivate readonly _parentInstantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IAccessibilitySignalService\n\t\tprivate readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@IEditorProgressService\n\t\tprivate readonly _editorProgressService: IEditorProgressService,\n\t) {\n\t\tsuper();\n\t\tcodeEditorService.willCreateDiffEditor();\n\n\t\tthis._contextKeyService.createKey(\"isInDiffEditor\", true);\n\n\t\tthis._domElement.appendChild(this.elements.root);\n\t\tthis._register(toDisposable(() => this.elements.root.remove()));\n\n\t\tthis._rootSizeObserver = this._register(\n\t\t\tnew ObservableElementSizeObserver(\n\t\t\t\tthis.elements.root,\n\t\t\t\toptions.dimension,\n\t\t\t),\n\t\t);\n\t\tthis._rootSizeObserver.setAutomaticLayout(\n\t\t\toptions.automaticLayout ?? false,\n\t\t);\n\n\t\tthis._options = this._instantiationService.createInstance(\n\t\t\tDiffEditorOptions,\n\t\t\toptions,\n\t\t);\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\tthis._options.setWidth(\n\t\t\t\t\tthis._rootSizeObserver.width.read(reader),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis._contextKeyService.createKey(\n\t\t\tEditorContextKeys.isEmbeddedDiffEditor.key,\n\t\t\tfalse,\n\t\t);\n\t\tthis._register(\n\t\t\tbindContextKey(\n\t\t\t\tEditorContextKeys.isEmbeddedDiffEditor,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\t(reader) => this._options.isInEmbeddedEditor.read(reader),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tbindContextKey(\n\t\t\t\tEditorContextKeys.comparingMovedCode,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\t(reader) =>\n\t\t\t\t\t!!this._diffModel\n\t\t\t\t\t\t.read(reader)\n\t\t\t\t\t\t?.movedTextToCompare.read(reader),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tbindContextKey(\n\t\t\t\tEditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\t(reader) =>\n\t\t\t\t\tthis._options.couldShowInlineViewBecauseOfSize.read(reader),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tbindContextKey(\n\t\t\t\tEditorContextKeys.diffEditorInlineMode,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\t(reader) => !this._options.renderSideBySide.read(reader),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tbindContextKey(\n\t\t\t\tEditorContextKeys.hasChanges,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\t(reader) =>\n\t\t\t\t\t(this._diffModel.read(reader)?.diff.read(reader)?.mappings\n\t\t\t\t\t\t.length ?? 0) > 0,\n\t\t\t),\n\t\t);\n\n\t\tthis._editors = this._register(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tDiffEditorEditors,\n\t\t\t\tthis.elements.original,\n\t\t\t\tthis.elements.modified,\n\t\t\t\tthis._options,\n\t\t\t\tcodeEditorWidgetOptions,\n\t\t\t\t(i, c, o, o2) => this._createInnerEditor(i, c, o, o2),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tbindContextKey(\n\t\t\t\tEditorContextKeys.diffEditorOriginalWritable,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\t(reader) => this._options.originalEditable.read(reader),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tbindContextKey(\n\t\t\t\tEditorContextKeys.diffEditorModifiedWritable,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\t(reader) => !this._options.readOnly.read(reader),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tbindContextKey(\n\t\t\t\tEditorContextKeys.diffEditorOriginalUri,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\t(reader) =>\n\t\t\t\t\tthis._diffModel\n\t\t\t\t\t\t.read(reader)\n\t\t\t\t\t\t?.model.original.uri.toString() ?? \"\",\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tbindContextKey(\n\t\t\t\tEditorContextKeys.diffEditorModifiedUri,\n\t\t\t\tthis._contextKeyService,\n\t\t\t\t(reader) =>\n\t\t\t\t\tthis._diffModel\n\t\t\t\t\t\t.read(reader)\n\t\t\t\t\t\t?.model.modified.uri.toString() ?? \"\",\n\t\t\t),\n\t\t);\n\n\t\tthis._overviewRulerPart = derivedDisposable(this, reader =>\n\t\t\tthis._options.renderOverviewRuler.read(reader)\n\t\t\t\t? this._instantiationService.createInstance(\n\t\t\t\t\treadHotReloadableExport(OverviewRulerFeature, reader),\n\t\t\t\t\tthis._editors,\n\t\t\t\t\tthis.elements.root,\n\t\t\t\t\tthis._diffModel,\n\t\t\t\t\tthis._rootSizeObserver.width,\n\t\t\t\t\tthis._rootSizeObserver.height,\n\t\t\t\t\tthis._layoutInfo.map(i => i.modifiedEditor),\n\t\t\t\t) : undefined\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst dimensions = {\n\t\t\theight: this._rootSizeObserver.height,\n\t\t\twidth: this._rootSizeObserver.width.map(\n\t\t\t\t(w, reader) =>\n\t\t\t\t\tw - (this._overviewRulerPart.read(reader)?.width ?? 0),\n\t\t\t),\n\t\t};\n\n\t\tthis._sashLayout = new SashLayout(this._options, dimensions);\n\n\t\tthis._sash = derivedDisposable(this, (reader) => {\n\t\t\tconst showSash = this._options.renderSideBySide.read(reader);\n\t\t\tthis.elements.root.classList.toggle('side-by-side', showSash);\n\t\t\treturn showSash ? new DiffEditorSash(\n\t\t\t\tthis.elements.root,\n\t\t\t\tdimensions,\n\t\t\t\tthis._options.enableSplitViewResizing,\n\t\t\t\tthis._boundarySashes,\n\t\t\t\tthis._sashLayout.sashLeft,\n\t\t\t\t() => this._sashLayout.resetSash(),\n\t\t\t) : undefined;\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst unchangedRangesFeature = derivedDisposable(\n\t\t\tthis,\n\t\t\t(reader /** @description UnchangedRangesFeature */) =>\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\treadHotReloadableExport(\n\t\t\t\t\t\tHideUnchangedRegionsFeature,\n\t\t\t\t\t\treader,\n\t\t\t\t\t),\n\t\t\t\t\tthis._editors,\n\t\t\t\t\tthis._diffModel,\n\t\t\t\t\tthis._options,\n\t\t\t\t),\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tderivedDisposable(\n\t\t\tthis,\n\t\t\t(reader /** @description DiffEditorDecorations */) =>\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\treadHotReloadableExport(DiffEditorDecorations, reader),\n\t\t\t\t\tthis._editors,\n\t\t\t\t\tthis._diffModel,\n\t\t\t\t\tthis._options,\n\t\t\t\t\tthis,\n\t\t\t\t),\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst origViewZoneIdsToIgnore = new Set<string>();\n\t\tconst modViewZoneIdsToIgnore = new Set<string>();\n\t\tlet isUpdatingViewZones = false;\n\t\tconst viewZoneManager = derivedDisposable(\n\t\t\tthis,\n\t\t\t(reader /** @description ViewZoneManager */) =>\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\treadHotReloadableExport(DiffEditorViewZones, reader),\n\t\t\t\t\tgetWindow(this._domElement),\n\t\t\t\t\tthis._editors,\n\t\t\t\t\tthis._diffModel,\n\t\t\t\t\tthis._options,\n\t\t\t\t\tthis,\n\t\t\t\t\t() =>\n\t\t\t\t\t\tisUpdatingViewZones ||\n\t\t\t\t\t\tunchangedRangesFeature.get().isUpdatingHiddenAreas,\n\t\t\t\t\torigViewZoneIdsToIgnore,\n\t\t\t\t\tmodViewZoneIdsToIgnore,\n\t\t\t\t),\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst originalViewZones = derived(this, (reader) => {\n\t\t\t/** @description originalViewZones */\n\t\t\tconst orig = viewZoneManager\n\t\t\t\t.read(reader)\n\t\t\t\t.viewZones.read(reader).orig;\n\t\t\tconst orig2 = unchangedRangesFeature\n\t\t\t\t.read(reader)\n\t\t\t\t.viewZones.read(reader).origViewZones;\n\t\t\treturn orig.concat(orig2);\n\t\t});\n\t\tconst modifiedViewZones = derived(this, (reader) => {\n\t\t\t/** @description modifiedViewZones */\n\t\t\tconst mod = viewZoneManager.read(reader).viewZones.read(reader).mod;\n\t\t\tconst mod2 = unchangedRangesFeature\n\t\t\t\t.read(reader)\n\t\t\t\t.viewZones.read(reader).modViewZones;\n\t\t\treturn mod.concat(mod2);\n\t\t});\n\t\tthis._register(\n\t\t\tapplyViewZones(\n\t\t\t\tthis._editors.original,\n\t\t\t\toriginalViewZones,\n\t\t\t\t(isUpdatingOrigViewZones) => {\n\t\t\t\t\tisUpdatingViewZones = isUpdatingOrigViewZones;\n\t\t\t\t},\n\t\t\t\torigViewZoneIdsToIgnore,\n\t\t\t),\n\t\t);\n\t\tlet scrollState: StableEditorScrollState | undefined;\n\t\tthis._register(\n\t\t\tapplyViewZones(\n\t\t\t\tthis._editors.modified,\n\t\t\t\tmodifiedViewZones,\n\t\t\t\t(isUpdatingModViewZones) => {\n\t\t\t\t\tisUpdatingViewZones = isUpdatingModViewZones;\n\t\t\t\t\tif (isUpdatingViewZones) {\n\t\t\t\t\t\tscrollState = StableEditorScrollState.capture(\n\t\t\t\t\t\t\tthis._editors.modified,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscrollState?.restore(this._editors.modified);\n\t\t\t\t\t\tscrollState = undefined;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodViewZoneIdsToIgnore,\n\t\t\t),\n\t\t);\n\n\t\tthis._accessibleDiffViewer = derivedDisposable(this, (reader) =>\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\treadHotReloadableExport(AccessibleDiffViewer, reader),\n\t\t\t\tthis.elements.accessibleDiffViewer,\n\t\t\t\tthis._accessibleDiffViewerVisible,\n\t\t\t\t(visible, tx) =>\n\t\t\t\t\tthis._accessibleDiffViewerShouldBeVisible.set(visible, tx),\n\t\t\t\tthis._options.onlyShowAccessibleDiffViewer.map((v) => !v),\n\t\t\t\tthis._rootSizeObserver.width,\n\t\t\t\tthis._rootSizeObserver.height,\n\t\t\t\tthis._diffModel.map((m, r) =>\n\t\t\t\t\tm?.diff.read(r)?.mappings.map((m) => m.lineRangeMapping),\n\t\t\t\t),\n\t\t\t\tnew AccessibleDiffViewerModelFromEditors(this._editors),\n\t\t\t),\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst visibility = this._accessibleDiffViewerVisible.map<\n\t\t\tCSSStyle[\"visibility\"]\n\t\t>((v) => (v ? \"hidden\" : \"visible\"));\n\t\tthis._register(applyStyle(this.elements.modified, { visibility }));\n\t\tthis._register(applyStyle(this.elements.original, { visibility }));\n\n\t\tthis._createDiffEditorContributions();\n\n\t\tcodeEditorService.addDiffEditor(this);\n\n\t\tthis._gutter = derivedDisposable(this, (reader) => {\n\t\t\treturn this._options.shouldRenderGutterMenu.read(reader)\n\t\t\t\t? this._instantiationService.createInstance(\n\t\t\t\t\t\treadHotReloadableExport(DiffEditorGutter, reader),\n\t\t\t\t\t\tthis.elements.root,\n\t\t\t\t\t\tthis._diffModel,\n\t\t\t\t\t\tthis._editors,\n\t\t\t\t\t\tthis._options,\n\t\t\t\t\t\tthis._sashLayout,\n\t\t\t\t\t\tthis._boundarySashes,\n\t\t\t\t\t)\n\t\t\t\t: undefined;\n\t\t});\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._layoutInfo));\n\n\t\tderivedDisposable(\n\t\t\tthis,\n\t\t\t(reader /** @description MovedBlocksLinesPart */) =>\n\t\t\t\tnew (readHotReloadableExport(MovedBlocksLinesFeature, reader))(\n\t\t\t\t\tthis.elements.root,\n\t\t\t\t\tthis._diffModel,\n\t\t\t\t\tthis._layoutInfo.map((i) => i.originalEditor),\n\t\t\t\t\tthis._layoutInfo.map((i) => i.modifiedEditor),\n\t\t\t\t\tthis._editors,\n\t\t\t\t),\n\t\t).recomputeInitiallyAndOnChange(this._store, (value) => {\n\t\t\t// This is to break the layout info <-> moved blocks lines part dependency cycle.\n\t\t\tthis._movedBlocksLinesPart.set(value, undefined);\n\t\t});\n\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tthis._editors.modified.onDidChangeCursorPosition,\n\t\t\t\t(e) => this._handleCursorPositionChange(e, true),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tthis._editors.original.onDidChangeCursorPosition,\n\t\t\t\t(e) => this._handleCursorPositionChange(e, false),\n\t\t\t),\n\t\t);\n\n\t\tconst isInitializingDiff = this._diffModel.map(this, (m, reader) => {\n\t\t\t/** @isInitializingDiff isDiffUpToDate */\n\t\t\tif (!m) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tm.diff.read(reader) === undefined &&\n\t\t\t\t!m.isDiffUpToDate.read(reader)\n\t\t\t);\n\t\t});\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t/** @description DiffEditorWidgetHelper.ShowProgress */\n\t\t\t\tif (isInitializingDiff.read(reader) === true) {\n\t\t\t\t\tconst r = this._editorProgressService.show(true, 1000);\n\t\t\t\t\tstore.add(toDisposable(() => r.done()));\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\tstore.add(\n\t\t\t\t\tnew (readHotReloadableExport(RevertButtonsFeature, reader))(\n\t\t\t\t\t\tthis._editors,\n\t\t\t\t\t\tthis._diffModel,\n\t\t\t\t\t\tthis._options,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\tconst model = this._diffModel.read(reader);\n\t\t\t\tif (!model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const m of [model.model.original, model.model.modified]) {\n\t\t\t\t\tstore.add(\n\t\t\t\t\t\tm.onWillDispose((e) => {\n\t\t\t\t\t\t\tonUnexpectedError(\n\t\t\t\t\t\t\t\tnew BugIndicatingError(\n\t\t\t\t\t\t\t\t\t\"TextModel got disposed before DiffEditorWidget model got reset\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.setModel(null);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\tthis._options.setModel(this._diffModel.read(reader));\n\t\t\t}),\n\t\t);\n\t}\n\n\tpublic getViewWidth(): number {\n\t\treturn this._rootSizeObserver.width.get();\n\t}\n\n\tpublic getContentHeight() {\n\t\treturn this._editors.modified.getContentHeight();\n\t}\n\n\tprotected _createInnerEditor(\n\t\tinstantiationService: IInstantiationService,\n\t\tcontainer: HTMLElement,\n\t\toptions: Readonly<IEditorConstructionOptions>,\n\t\teditorWidgetOptions: ICodeEditorWidgetOptions,\n\t): CodeEditorWidget {\n\t\tconst editor = instantiationService.createInstance(\n\t\t\tCodeEditorWidget,\n\t\t\tcontainer,\n\t\t\toptions,\n\t\t\teditorWidgetOptions,\n\t\t);\n\t\treturn editor;\n\t}\n\n\tprivate readonly _layoutInfo = derived(this, (reader) => {\n\t\tconst fullWidth = this._rootSizeObserver.width.read(reader);\n\t\tconst fullHeight = this._rootSizeObserver.height.read(reader);\n\n\t\tif (this._rootSizeObserver.automaticLayout) {\n\t\t\tthis.elements.root.style.height = \"100%\";\n\t\t} else {\n\t\t\tthis.elements.root.style.height = fullHeight + \"px\";\n\t\t}\n\n\t\tconst sash = this._sash.read(reader);\n\n\t\tconst gutter = this._gutter.read(reader);\n\t\tconst gutterWidth = gutter?.width.read(reader) ?? 0;\n\n\t\tconst overviewRulerPartWidth =\n\t\t\tthis._overviewRulerPart.read(reader)?.width ?? 0;\n\n\t\tlet originalLeft: number,\n\t\t\toriginalWidth: number,\n\t\t\tmodifiedLeft: number,\n\t\t\tmodifiedWidth: number,\n\t\t\tgutterLeft: number;\n\n\t\tconst sideBySide = !!sash;\n\t\tif (sideBySide) {\n\t\t\tconst sashLeft = sash.sashLeft.read(reader);\n\t\t\tconst movedBlocksLinesWidth =\n\t\t\t\tthis._movedBlocksLinesPart.read(reader)?.width.read(reader) ??\n\t\t\t\t0;\n\n\t\t\toriginalLeft = 0;\n\t\t\toriginalWidth = sashLeft - gutterWidth - movedBlocksLinesWidth;\n\n\t\t\tgutterLeft = sashLeft - gutterWidth;\n\n\t\t\tmodifiedLeft = sashLeft;\n\t\t\tmodifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n\t\t} else {\n\t\t\tgutterLeft = 0;\n\n\t\t\tconst shouldHideOriginalLineNumbers =\n\t\t\t\tthis._options.inlineViewHideOriginalLineNumbers.read(reader);\n\t\t\toriginalLeft = gutterWidth;\n\t\t\tif (shouldHideOriginalLineNumbers) {\n\t\t\t\toriginalWidth = 0;\n\t\t\t} else {\n\t\t\t\toriginalWidth = Math.max(\n\t\t\t\t\t5,\n\t\t\t\t\tthis._editors.originalObs.layoutInfoDecorationsLeft.read(\n\t\t\t\t\t\treader,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tmodifiedLeft = gutterWidth + originalWidth;\n\t\t\tmodifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n\t\t}\n\n\t\tthis.elements.original.style.left = originalLeft + \"px\";\n\t\tthis.elements.original.style.width = originalWidth + \"px\";\n\t\tthis._editors.original.layout(\n\t\t\t{ width: originalWidth, height: fullHeight },\n\t\t\ttrue,\n\t\t);\n\n\t\tgutter?.layout(gutterLeft);\n\n\t\tthis.elements.modified.style.left = modifiedLeft + \"px\";\n\t\tthis.elements.modified.style.width = modifiedWidth + \"px\";\n\t\tthis._editors.modified.layout(\n\t\t\t{ width: modifiedWidth, height: fullHeight },\n\t\t\ttrue,\n\t\t);\n\n\t\treturn {\n\t\t\tmodifiedEditor: this._editors.modified.getLayoutInfo(),\n\t\t\toriginalEditor: this._editors.original.getLayoutInfo(),\n\t\t};\n\t});\n\n\tprivate _createDiffEditorContributions() {\n\t\tconst contributions: IDiffEditorContributionDescription[] =\n\t\t\tEditorExtensionsRegistry.getDiffEditorContributions();\n\t\tfor (const desc of contributions) {\n\t\t\ttry {\n\t\t\t\tthis._register(\n\t\t\t\t\tthis._instantiationService.createInstance(desc.ctor, this),\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override get _targetEditor(): CodeEditorWidget {\n\t\treturn this._editors.modified;\n\t}\n\n\toverride getEditorType(): string {\n\t\treturn EditorType.IDiffEditor;\n\t}\n\n\toverride onVisible(): void {\n\t\t// TODO: Only compute diffs when diff editor is visible\n\t\tthis._editors.original.onVisible();\n\t\tthis._editors.modified.onVisible();\n\t}\n\n\toverride onHide(): void {\n\t\tthis._editors.original.onHide();\n\t\tthis._editors.modified.onHide();\n\t}\n\n\toverride layout(dimension?: IDimension | undefined): void {\n\t\tthis._rootSizeObserver.observe(dimension);\n\t}\n\n\toverride hasTextFocus(): boolean {\n\t\treturn (\n\t\t\tthis._editors.original.hasTextFocus() ||\n\t\t\tthis._editors.modified.hasTextFocus()\n\t\t);\n\t}\n\n\tpublic override saveViewState(): IDiffEditorViewState {\n\t\tconst originalViewState = this._editors.original.saveViewState();\n\t\tconst modifiedViewState = this._editors.modified.saveViewState();\n\t\treturn {\n\t\t\toriginal: originalViewState,\n\t\t\tmodified: modifiedViewState,\n\t\t\tmodelState: this._diffModel.get()?.serializeState(),\n\t\t};\n\t}\n\n\tpublic override restoreViewState(s: IDiffEditorViewState): void {\n\t\tif (s && s.original && s.modified) {\n\t\t\tconst diffEditorState = s as IDiffEditorViewState;\n\t\t\tthis._editors.original.restoreViewState(diffEditorState.original);\n\t\t\tthis._editors.modified.restoreViewState(diffEditorState.modified);\n\t\t\tif (diffEditorState.modelState) {\n\t\t\t\tthis._diffModel\n\t\t\t\t\t.get()\n\t\t\t\t\t?.restoreSerializedState(diffEditorState.modelState as any);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleInitialized(): void {\n\t\tthis._editors.original.handleInitialized();\n\t\tthis._editors.modified.handleInitialized();\n\t}\n\n\tpublic createViewModel(model: IDiffEditorModel): IDiffEditorViewModel {\n\t\treturn this._instantiationService.createInstance(\n\t\t\tDiffEditorViewModel,\n\t\t\tmodel,\n\t\t\tthis._options,\n\t\t);\n\t}\n\n\toverride getModel(): IDiffEditorModel | null {\n\t\treturn this._diffModel.get()?.model ?? null;\n\t}\n\n\toverride setModel(\n\t\tmodel: IDiffEditorModel | null | IDiffEditorViewModel,\n\t): void {\n\t\tconst vm = model\n\t\t\t? \"model\" in model\n\t\t\t\t? RefCounted.create(model).createNewRef(this)\n\t\t\t\t: RefCounted.create(this.createViewModel(model), this)\n\t\t\t: null;\n\t\tthis.setDiffModel(vm);\n\t}\n\n\tsetDiffModel(\n\t\tviewModel: RefCounted<IDiffEditorViewModel> | null,\n\t\ttx?: ITransaction,\n\t): void {\n\t\tconst currentModel = this._diffModel.get();\n\n\t\tif (!viewModel && currentModel) {\n\t\t\t// Transitioning from a model to no-model\n\t\t\tthis._accessibleDiffViewer.get().close();\n\t\t}\n\n\t\tif (this._diffModel.get() !== viewModel?.object) {\n\t\t\tsubtransaction(tx, (tx) => {\n\t\t\t\tconst vm = viewModel?.object;\n\t\t\t\t/** @description DiffEditorWidget.setModel */\n\t\t\t\tobservableFromEvent.batchEventsGlobally(tx, () => {\n\t\t\t\t\tthis._editors.original.setModel(\n\t\t\t\t\t\tvm ? vm.model.original : null,\n\t\t\t\t\t);\n\t\t\t\t\tthis._editors.modified.setModel(\n\t\t\t\t\t\tvm ? vm.model.modified : null,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tconst prevValueRef = this._diffModelSrc\n\t\t\t\t\t.get()\n\t\t\t\t\t?.createNewRef(this);\n\t\t\t\tthis._diffModelSrc.set(\n\t\t\t\t\tviewModel?.createNewRef(this) as\n\t\t\t\t\t\t| RefCounted<DiffEditorViewModel>\n\t\t\t\t\t\t| undefined,\n\t\t\t\t\ttx,\n\t\t\t\t);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// async, so that this runs after the transaction finished.\n\t\t\t\t\t// TODO: use the transaction to schedule disposal\n\t\t\t\t\tprevValueRef?.dispose();\n\t\t\t\t}, 0);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @param changedOptions Only has values for top-level options that have actually changed.\n\t */\n\toverride updateOptions(changedOptions: IDiffEditorOptions): void {\n\t\tthis._options.updateOptions(changedOptions);\n\t}\n\n\tgetContainerDomNode(): HTMLElement {\n\t\treturn this._domElement;\n\t}\n\tgetOriginalEditor(): ICodeEditor {\n\t\treturn this._editors.original;\n\t}\n\tgetModifiedEditor(): ICodeEditor {\n\t\treturn this._editors.modified;\n\t}\n\n\tsetBoundarySashes(sashes: IBoundarySashes): void {\n\t\tthis._boundarySashes.set(sashes, undefined);\n\t}\n\n\tprivate readonly _diffValue = this._diffModel.map((m, r) =>\n\t\tm?.diff.read(r),\n\t);\n\treadonly onDidUpdateDiff: Event<void> = Event.fromObservableLight(\n\t\tthis._diffValue,\n\t);\n\n\tget ignoreTrimWhitespace(): boolean {\n\t\treturn this._options.ignoreTrimWhitespace.get();\n\t}\n\n\tget maxComputationTime(): number {\n\t\treturn this._options.maxComputationTimeMs.get();\n\t}\n\n\tget renderSideBySide(): boolean {\n\t\treturn this._options.renderSideBySide.get();\n\t}\n\n\t/**\n\t * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n\t */\n\tgetLineChanges(): ILineChange[] | null {\n\t\tconst diffState = this._diffModel.get()?.diff.get();\n\t\tif (!diffState) {\n\t\t\treturn null;\n\t\t}\n\t\treturn toLineChanges(diffState);\n\t}\n\n\tgetDiffComputationResult(): IDiffComputationResult | null {\n\t\tconst diffState = this._diffModel.get()?.diff.get();\n\t\tif (!diffState) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tchanges: this.getLineChanges()!,\n\t\t\tchanges2: diffState.mappings.map((m) => m.lineRangeMapping),\n\t\t\tidentical: diffState.identical,\n\t\t\tquitEarly: diffState.quitEarly,\n\t\t};\n\t}\n\n\trevert(diff: LineRangeMapping): void {\n\t\tconst model = this._diffModel.get();\n\t\tif (!model || !model.isDiffUpToDate.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editors.modified.executeEdits(\"diffEditor\", [\n\t\t\t{\n\t\t\t\trange: diff.modified.toExclusiveRange(),\n\t\t\t\ttext: model.model.original.getValueInRange(\n\t\t\t\t\tdiff.original.toExclusiveRange(),\n\t\t\t\t),\n\t\t\t},\n\t\t]);\n\t}\n\n\trevertRangeMappings(diffs: RangeMapping[]): void {\n\t\tconst model = this._diffModel.get();\n\t\tif (!model || !model.isDiffUpToDate.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst changes: IIdentifiedSingleEditOperation[] =\n\t\t\tdiffs.map<IIdentifiedSingleEditOperation>((c) => ({\n\t\t\t\trange: c.modifiedRange,\n\t\t\t\ttext: model.model.original.getValueInRange(c.originalRange),\n\t\t\t}));\n\n\t\tthis._editors.modified.executeEdits(\"diffEditor\", changes);\n\t}\n\n\tprivate _goTo(diff: DiffMapping): void {\n\t\tthis._editors.modified.setPosition(\n\t\t\tnew Position(diff.lineRangeMapping.modified.startLineNumber, 1),\n\t\t);\n\t\tthis._editors.modified.revealRangeInCenter(\n\t\t\tdiff.lineRangeMapping.modified.toExclusiveRange(),\n\t\t);\n\t}\n\n\tgoToDiff(target: \"previous\" | \"next\"): void {\n\t\tconst diffs = this._diffModel.get()?.diff.get()?.mappings;\n\t\tif (!diffs || diffs.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst curLineNumber = this._editors.modified.getPosition()!.lineNumber;\n\n\t\tlet diff: DiffMapping | undefined;\n\t\tif (target === \"next\") {\n\t\t\tdiff =\n\t\t\t\tdiffs.find(\n\t\t\t\t\t(d) =>\n\t\t\t\t\t\td.lineRangeMapping.modified.startLineNumber >\n\t\t\t\t\t\tcurLineNumber,\n\t\t\t\t) ?? diffs[0];\n\t\t} else {\n\t\t\tdiff =\n\t\t\t\tfindLast(\n\t\t\t\t\tdiffs,\n\t\t\t\t\t(d) =>\n\t\t\t\t\t\td.lineRangeMapping.modified.startLineNumber <\n\t\t\t\t\t\tcurLineNumber,\n\t\t\t\t) ?? diffs[diffs.length - 1];\n\t\t}\n\t\tthis._goTo(diff);\n\n\t\tif (diff.lineRangeMapping.modified.isEmpty) {\n\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\tAccessibilitySignal.diffLineDeleted,\n\t\t\t\t{ source: \"diffEditor.goToDiff\" },\n\t\t\t);\n\t\t} else if (diff.lineRangeMapping.original.isEmpty) {\n\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\tAccessibilitySignal.diffLineInserted,\n\t\t\t\t{ source: \"diffEditor.goToDiff\" },\n\t\t\t);\n\t\t} else if (diff) {\n\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\tAccessibilitySignal.diffLineModified,\n\t\t\t\t{ source: \"diffEditor.goToDiff\" },\n\t\t\t);\n\t\t}\n\t}\n\n\trevealFirstDiff(): void {\n\t\tconst diffModel = this._diffModel.get();\n\t\tif (!diffModel) {\n\t\t\treturn;\n\t\t}\n\t\t// wait for the diff computation to finish\n\t\tthis.waitForDiff().then(() => {\n\t\t\tconst diffs = diffModel.diff.get()?.mappings;\n\t\t\tif (!diffs || diffs.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._goTo(diffs[0]);\n\t\t});\n\t}\n\n\taccessibleDiffViewerNext(): void {\n\t\tthis._accessibleDiffViewer.get().next();\n\t}\n\n\taccessibleDiffViewerPrev(): void {\n\t\tthis._accessibleDiffViewer.get().prev();\n\t}\n\n\tasync waitForDiff(): Promise<void> {\n\t\tconst diffModel = this._diffModel.get();\n\t\tif (!diffModel) {\n\t\t\treturn;\n\t\t}\n\t\tawait diffModel.waitForDiff();\n\t}\n\n\tmapToOtherSide(): {\n\t\tdestination: CodeEditorWidget;\n\t\tdestinationSelection: Range | undefined;\n\t} {\n\t\tconst isModifiedFocus = this._editors.modified.hasWidgetFocus();\n\t\tconst source = isModifiedFocus\n\t\t\t? this._editors.modified\n\t\t\t: this._editors.original;\n\t\tconst destination = isModifiedFocus\n\t\t\t? this._editors.original\n\t\t\t: this._editors.modified;\n\n\t\tlet destinationSelection: Range | undefined;\n\n\t\tconst sourceSelection = source.getSelection();\n\t\tif (sourceSelection) {\n\t\t\tconst mappings = this._diffModel\n\t\t\t\t.get()\n\t\t\t\t?.diff.get()\n\t\t\t\t?.mappings.map((m) =>\n\t\t\t\t\tisModifiedFocus\n\t\t\t\t\t\t? m.lineRangeMapping.flip()\n\t\t\t\t\t\t: m.lineRangeMapping,\n\t\t\t\t);\n\t\t\tif (mappings) {\n\t\t\t\tconst newRange1 = translatePosition(\n\t\t\t\t\tsourceSelection.getStartPosition(),\n\t\t\t\t\tmappings,\n\t\t\t\t);\n\t\t\t\tconst newRange2 = translatePosition(\n\t\t\t\t\tsourceSelection.getEndPosition(),\n\t\t\t\t\tmappings,\n\t\t\t\t);\n\t\t\t\tdestinationSelection = Range.plusRange(newRange1, newRange2);\n\t\t\t}\n\t\t}\n\t\treturn { destination, destinationSelection };\n\t}\n\n\tswitchSide(): void {\n\t\tconst { destination, destinationSelection } = this.mapToOtherSide();\n\t\tdestination.focus();\n\t\tif (destinationSelection) {\n\t\t\tdestination.setSelection(destinationSelection);\n\t\t}\n\t}\n\n\texitCompareMove(): void {\n\t\tconst model = this._diffModel.get();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tmodel.movedTextToCompare.set(undefined, undefined);\n\t}\n\n\tcollapseAllUnchangedRegions(): void {\n\t\tconst unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n\t\tif (!unchangedRegions) {\n\t\t\treturn;\n\t\t}\n\t\ttransaction((tx) => {\n\t\t\tfor (const region of unchangedRegions) {\n\t\t\t\tregion.collapseAll(tx);\n\t\t\t}\n\t\t});\n\t}\n\n\tshowAllUnchangedRegions(): void {\n\t\tconst unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n\t\tif (!unchangedRegions) {\n\t\t\treturn;\n\t\t}\n\t\ttransaction((tx) => {\n\t\t\tfor (const region of unchangedRegions) {\n\t\t\t\tregion.showAll(tx);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _handleCursorPositionChange(\n\t\te: ICursorPositionChangedEvent | undefined,\n\t\tisModifiedEditor: boolean,\n\t): void {\n\t\tif (e?.reason === CursorChangeReason.Explicit) {\n\t\t\tconst diff = this._diffModel\n\t\t\t\t.get()\n\t\t\t\t?.diff.get()\n\t\t\t\t?.mappings.find((m) =>\n\t\t\t\t\tisModifiedEditor\n\t\t\t\t\t\t? m.lineRangeMapping.modified.contains(\n\t\t\t\t\t\t\t\te.position.lineNumber,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: m.lineRangeMapping.original.contains(\n\t\t\t\t\t\t\t\te.position.lineNumber,\n\t\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\tif (diff?.lineRangeMapping.modified.isEmpty) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\t\tAccessibilitySignal.diffLineDeleted,\n\t\t\t\t\t{ source: \"diffEditor.cursorPositionChanged\" },\n\t\t\t\t);\n\t\t\t} else if (diff?.lineRangeMapping.original.isEmpty) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\t\tAccessibilitySignal.diffLineInserted,\n\t\t\t\t\t{ source: \"diffEditor.cursorPositionChanged\" },\n\t\t\t\t);\n\t\t\t} else if (diff) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\t\tAccessibilitySignal.diffLineModified,\n\t\t\t\t\t{ source: \"diffEditor.cursorPositionChanged\" },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction toLineChanges(state: DiffState): ILineChange[] {\n\treturn state.mappings.map((x) => {\n\t\tconst m = x.lineRangeMapping;\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet innerChanges = m.innerChanges;\n\n\t\tif (m.original.isEmpty) {\n\t\t\t// Insertion\n\t\t\toriginalStartLineNumber = m.original.startLineNumber - 1;\n\t\t\toriginalEndLineNumber = 0;\n\t\t\tinnerChanges = undefined;\n\t\t} else {\n\t\t\toriginalStartLineNumber = m.original.startLineNumber;\n\t\t\toriginalEndLineNumber = m.original.endLineNumberExclusive - 1;\n\t\t}\n\n\t\tif (m.modified.isEmpty) {\n\t\t\t// Deletion\n\t\t\tmodifiedStartLineNumber = m.modified.startLineNumber - 1;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t\tinnerChanges = undefined;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = m.modified.startLineNumber;\n\t\t\tmodifiedEndLineNumber = m.modified.endLineNumberExclusive - 1;\n\t\t}\n\n\t\treturn {\n\t\t\toriginalStartLineNumber,\n\t\t\toriginalEndLineNumber,\n\t\t\tmodifiedStartLineNumber,\n\t\t\tmodifiedEndLineNumber,\n\t\t\tcharChanges: innerChanges?.map((m) => ({\n\t\t\t\toriginalStartLineNumber: m.originalRange.startLineNumber,\n\t\t\t\toriginalStartColumn: m.originalRange.startColumn,\n\t\t\t\toriginalEndLineNumber: m.originalRange.endLineNumber,\n\t\t\t\toriginalEndColumn: m.originalRange.endColumn,\n\t\t\t\tmodifiedStartLineNumber: m.modifiedRange.startLineNumber,\n\t\t\t\tmodifiedStartColumn: m.modifiedRange.startColumn,\n\t\t\t\tmodifiedEndLineNumber: m.modifiedRange.endLineNumber,\n\t\t\t\tmodifiedEndColumn: m.modifiedRange.endColumn,\n\t\t\t})),\n\t\t};\n\t});\n}\n"],
  "mappings": "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",
  "names": ["m", "tx"]
}
