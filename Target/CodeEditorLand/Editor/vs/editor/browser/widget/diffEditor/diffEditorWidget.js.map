{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/diffEditorWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, h } from '../../../../base/browser/dom.js';\nimport { IBoundarySashes } from '../../../../base/browser/ui/sash/sash.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { readHotReloadableExport } from '../../../../base/common/hotReloadHelpers.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, ITransaction, autorun, autorunWithStore, derived, derivedDisposable, disposableObservableValue, observableFromEvent, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { IDiffEditorOptions } from '../../../common/config/editorOptions.js';\nimport { IDimension } from '../../../common/core/dimension.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CursorChangeReason, ICursorPositionChangedEvent } from '../../../common/cursorEvents.js';\nimport { IDiffComputationResult, ILineChange } from '../../../common/diff/legacyLinesDiffComputer.js';\nimport { LineRangeMapping, RangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { EditorType, IDiffEditorModel, IDiffEditorViewModel, IDiffEditorViewState } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IIdentifiedSingleEditOperation } from '../../../common/model.js';\nimport { IEditorConstructionOptions } from '../../config/editorConfiguration.js';\nimport { ICodeEditor, IDiffEditor, IDiffEditorConstructionOptions } from '../../editorBrowser.js';\nimport { EditorExtensionsRegistry, IDiffEditorContributionDescription } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../../stableEditorScroll.js';\nimport { CodeEditorWidget, ICodeEditorWidgetOptions } from '../codeEditor/codeEditorWidget.js';\nimport { AccessibleDiffViewer, AccessibleDiffViewerModelFromEditors } from './components/accessibleDiffViewer.js';\nimport { DiffEditorDecorations } from './components/diffEditorDecorations.js';\nimport { DiffEditorEditors } from './components/diffEditorEditors.js';\nimport { DiffEditorSash, SashLayout } from './components/diffEditorSash.js';\nimport { DiffEditorViewZones } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel, DiffMapping, DiffState } from './diffEditorViewModel.js';\nimport { DiffEditorGutter } from './features/gutterFeature.js';\nimport { HideUnchangedRegionsFeature } from './features/hideUnchangedRegionsFeature.js';\nimport { MovedBlocksLinesFeature } from './features/movedBlocksLinesFeature.js';\nimport { OverviewRulerFeature } from './features/overviewRulerFeature.js';\nimport { RevertButtonsFeature } from './features/revertButtonsFeature.js';\nimport './style.css';\nimport { CSSStyle, ObservableElementSizeObserver, RefCounted, applyStyle, applyViewZones, translatePosition } from './utils.js';\n\nexport interface IDiffCodeEditorWidgetOptions {\n\toriginalEditor?: ICodeEditorWidgetOptions;\n\tmodifiedEditor?: ICodeEditorWidgetOptions;\n}\n\nexport class DiffEditorWidget extends DelegatingEditor implements IDiffEditor {\n\tpublic static ENTIRE_DIFF_OVERVIEW_WIDTH = OverviewRulerFeature.ENTIRE_DIFF_OVERVIEW_WIDTH;\n\n\tprivate readonly elements = h('div.monaco-diff-editor.side-by-side', { style: { position: 'relative', height: '100%' } }, [\n\t\th('div.editor.original@original', { style: { position: 'absolute', height: '100%', } }),\n\t\th('div.editor.modified@modified', { style: { position: 'absolute', height: '100%', } }),\n\t\th('div.accessibleDiffViewer@accessibleDiffViewer', { style: { position: 'absolute', height: '100%' } }),\n\t]);\n\tprivate readonly _diffModelSrc = this._register(disposableObservableValue<RefCounted<DiffEditorViewModel> | undefined>(this, undefined));\n\tprivate readonly _diffModel = derived<DiffEditorViewModel | undefined>(this, reader => this._diffModelSrc.read(reader)?.object);\n\tpublic readonly onDidChangeModel = Event.fromObservableLight(this._diffModel);\n\n\tpublic get onDidContentSizeChange() { return this._editors.onDidContentSizeChange; }\n\n\tprivate readonly _contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n\tprivate readonly _instantiationService = this._register(this._parentInstantiationService.createChild(\n\t\tnew ServiceCollection([IContextKeyService, this._contextKeyService])\n\t));\n\tprivate readonly _rootSizeObserver: ObservableElementSizeObserver;\n\n\n\tprivate readonly _sashLayout: SashLayout;\n\tprivate readonly _sash: IObservable<DiffEditorSash | undefined>;\n\tprivate readonly _boundarySashes = observableValue<IBoundarySashes | undefined>(this, undefined);\n\n\tprivate _accessibleDiffViewerShouldBeVisible = observableValue(this, false);\n\tprivate _accessibleDiffViewerVisible = derived(this, reader =>\n\t\tthis._options.onlyShowAccessibleDiffViewer.read(reader)\n\t\t\t? true\n\t\t\t: this._accessibleDiffViewerShouldBeVisible.read(reader)\n\t);\n\tprivate readonly _accessibleDiffViewer: IObservable<AccessibleDiffViewer>;\n\tprivate readonly _options: DiffEditorOptions;\n\tprivate readonly _editors: DiffEditorEditors;\n\n\tprivate readonly _overviewRulerPart: IObservable<OverviewRulerFeature | undefined>;\n\tprivate readonly _movedBlocksLinesPart = observableValue<MovedBlocksLinesFeature | undefined>(this, undefined);\n\n\tprivate readonly _gutter: IObservable<DiffEditorGutter | undefined>;\n\n\tpublic get collapseUnchangedRegions() { return this._options.hideUnchangedRegions.get(); }\n\n\tconstructor(\n\t\tprivate readonly _domElement: HTMLElement,\n\t\toptions: Readonly<IDiffEditorConstructionOptions>,\n\t\tcodeEditorWidgetOptions: IDiffCodeEditorWidgetOptions,\n\t\t@IContextKeyService private readonly _parentContextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _parentInstantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@IEditorProgressService private readonly _editorProgressService: IEditorProgressService,\n\t) {\n\t\tsuper();\n\t\tcodeEditorService.willCreateDiffEditor();\n\n\t\tthis._contextKeyService.createKey('isInDiffEditor', true);\n\n\t\tthis._domElement.appendChild(this.elements.root);\n\t\tthis._register(toDisposable(() => this.elements.root.remove()));\n\n\t\tthis._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n\t\tthis._rootSizeObserver.setAutomaticLayout(options.automaticLayout ?? false);\n\n\t\tthis._options = this._instantiationService.createInstance(DiffEditorOptions, options);\n\t\tthis._register(autorun(reader => {\n\t\t\tthis._options.setWidth(this._rootSizeObserver.width.read(reader));\n\t\t}));\n\n\t\tthis._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n\t\tthis._register(bindContextKey(EditorContextKeys.isEmbeddedDiffEditor, this._contextKeyService,\n\t\t\treader => this._options.isInEmbeddedEditor.read(reader)\n\t\t));\n\t\tthis._register(bindContextKey(EditorContextKeys.comparingMovedCode, this._contextKeyService,\n\t\t\treader => !!this._diffModel.read(reader)?.movedTextToCompare.read(reader)\n\t\t));\n\t\tthis._register(bindContextKey(EditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached, this._contextKeyService,\n\t\t\treader => this._options.couldShowInlineViewBecauseOfSize.read(reader)\n\t\t));\n\t\tthis._register(bindContextKey(EditorContextKeys.diffEditorInlineMode, this._contextKeyService,\n\t\t\treader => !this._options.renderSideBySide.read(reader)\n\t\t));\n\n\t\tthis._register(bindContextKey(EditorContextKeys.hasChanges, this._contextKeyService,\n\t\t\treader => (this._diffModel.read(reader)?.diff.read(reader)?.mappings.length ?? 0) > 0\n\t\t));\n\n\t\tthis._editors = this._register(this._instantiationService.createInstance(\n\t\t\tDiffEditorEditors,\n\t\t\tthis.elements.original,\n\t\t\tthis.elements.modified,\n\t\t\tthis._options,\n\t\t\tcodeEditorWidgetOptions,\n\t\t\t(i, c, o, o2) => this._createInnerEditor(i, c, o, o2),\n\t\t));\n\n\t\tthis._register(bindContextKey(EditorContextKeys.diffEditorOriginalWritable, this._contextKeyService,\n\t\t\treader => this._options.originalEditable.read(reader)\n\t\t));\n\t\tthis._register(bindContextKey(EditorContextKeys.diffEditorModifiedWritable, this._contextKeyService,\n\t\t\treader => !this._options.readOnly.read(reader)\n\t\t));\n\t\tthis._register(bindContextKey(EditorContextKeys.diffEditorOriginalUri, this._contextKeyService,\n\t\t\treader => this._diffModel.read(reader)?.model.original.uri.toString() ?? ''\n\t\t));\n\t\tthis._register(bindContextKey(EditorContextKeys.diffEditorModifiedUri, this._contextKeyService,\n\t\t\treader => this._diffModel.read(reader)?.model.modified.uri.toString() ?? ''\n\t\t));\n\n\t\tthis._overviewRulerPart = derivedDisposable(this, reader =>\n\t\t\t!this._options.renderOverviewRuler.read(reader)\n\t\t\t\t? undefined\n\t\t\t\t: this._instantiationService.createInstance(\n\t\t\t\t\treadHotReloadableExport(OverviewRulerFeature, reader),\n\t\t\t\t\tthis._editors,\n\t\t\t\t\tthis.elements.root,\n\t\t\t\t\tthis._diffModel,\n\t\t\t\t\tthis._rootSizeObserver.width,\n\t\t\t\t\tthis._rootSizeObserver.height,\n\t\t\t\t\tthis._layoutInfo.map(i => i.modifiedEditor),\n\t\t\t\t)\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst dimensions = {\n\t\t\theight: this._rootSizeObserver.height,\n\t\t\twidth: this._rootSizeObserver.width.map((w, reader) => w - (this._overviewRulerPart.read(reader)?.width ?? 0)),\n\t\t};\n\n\t\tthis._sashLayout = new SashLayout(this._options, dimensions);\n\n\t\tthis._sash = derivedDisposable(this, reader => {\n\t\t\tconst showSash = this._options.renderSideBySide.read(reader);\n\t\t\tthis.elements.root.classList.toggle('side-by-side', showSash);\n\t\t\treturn !showSash ? undefined : new DiffEditorSash(\n\t\t\t\tthis.elements.root,\n\t\t\t\tdimensions,\n\t\t\t\tthis._options.enableSplitViewResizing,\n\t\t\t\tthis._boundarySashes,\n\t\t\t\tthis._sashLayout.sashLeft,\n\t\t\t\t() => this._sashLayout.resetSash(),\n\t\t\t);\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst unchangedRangesFeature = derivedDisposable(this, reader => /** @description UnchangedRangesFeature */\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\treadHotReloadableExport(HideUnchangedRegionsFeature, reader),\n\t\t\t\tthis._editors, this._diffModel, this._options\n\t\t\t)\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tderivedDisposable(this, reader => /** @description DiffEditorDecorations */\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\treadHotReloadableExport(DiffEditorDecorations, reader),\n\t\t\t\tthis._editors, this._diffModel, this._options, this,\n\t\t\t)\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst origViewZoneIdsToIgnore = new Set<string>();\n\t\tconst modViewZoneIdsToIgnore = new Set<string>();\n\t\tlet isUpdatingViewZones = false;\n\t\tconst viewZoneManager = derivedDisposable(this, reader => /** @description ViewZoneManager */\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\treadHotReloadableExport(DiffEditorViewZones, reader),\n\t\t\t\tgetWindow(this._domElement),\n\t\t\t\tthis._editors,\n\t\t\t\tthis._diffModel,\n\t\t\t\tthis._options,\n\t\t\t\tthis,\n\t\t\t\t() => isUpdatingViewZones || unchangedRangesFeature.get().isUpdatingHiddenAreas,\n\t\t\t\torigViewZoneIdsToIgnore,\n\t\t\t\tmodViewZoneIdsToIgnore\n\t\t\t)\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst originalViewZones = derived(this, (reader) => { /** @description originalViewZones */\n\t\t\tconst orig = viewZoneManager.read(reader).viewZones.read(reader).orig;\n\t\t\tconst orig2 = unchangedRangesFeature.read(reader).viewZones.read(reader).origViewZones;\n\t\t\treturn orig.concat(orig2);\n\t\t});\n\t\tconst modifiedViewZones = derived(this, (reader) => { /** @description modifiedViewZones */\n\t\t\tconst mod = viewZoneManager.read(reader).viewZones.read(reader).mod;\n\t\t\tconst mod2 = unchangedRangesFeature.read(reader).viewZones.read(reader).modViewZones;\n\t\t\treturn mod.concat(mod2);\n\t\t});\n\t\tthis._register(applyViewZones(this._editors.original, originalViewZones, isUpdatingOrigViewZones => {\n\t\t\tisUpdatingViewZones = isUpdatingOrigViewZones;\n\t\t}, origViewZoneIdsToIgnore));\n\t\tlet scrollState: StableEditorScrollState | undefined;\n\t\tthis._register(applyViewZones(this._editors.modified, modifiedViewZones, isUpdatingModViewZones => {\n\t\t\tisUpdatingViewZones = isUpdatingModViewZones;\n\t\t\tif (isUpdatingViewZones) {\n\t\t\t\tscrollState = StableEditorScrollState.capture(this._editors.modified);\n\t\t\t} else {\n\t\t\t\tscrollState?.restore(this._editors.modified);\n\t\t\t\tscrollState = undefined;\n\t\t\t}\n\t\t}, modViewZoneIdsToIgnore));\n\n\t\tthis._accessibleDiffViewer = derivedDisposable(this, reader =>\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\treadHotReloadableExport(AccessibleDiffViewer, reader),\n\t\t\t\tthis.elements.accessibleDiffViewer,\n\t\t\t\tthis._accessibleDiffViewerVisible,\n\t\t\t\t(visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx),\n\t\t\t\tthis._options.onlyShowAccessibleDiffViewer.map(v => !v),\n\t\t\t\tthis._rootSizeObserver.width,\n\t\t\t\tthis._rootSizeObserver.height,\n\t\t\t\tthis._diffModel.map((m, r) => m?.diff.read(r)?.mappings.map(m => m.lineRangeMapping)),\n\t\t\t\tnew AccessibleDiffViewerModelFromEditors(this._editors),\n\t\t\t)\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst visibility = this._accessibleDiffViewerVisible.map<CSSStyle['visibility']>(v => v ? 'hidden' : 'visible');\n\t\tthis._register(applyStyle(this.elements.modified, { visibility }));\n\t\tthis._register(applyStyle(this.elements.original, { visibility }));\n\n\t\tthis._createDiffEditorContributions();\n\n\t\tcodeEditorService.addDiffEditor(this);\n\n\t\tthis._gutter = derivedDisposable(this, reader => {\n\t\t\treturn this._options.shouldRenderGutterMenu.read(reader)\n\t\t\t\t? this._instantiationService.createInstance(\n\t\t\t\t\treadHotReloadableExport(DiffEditorGutter, reader),\n\t\t\t\t\tthis.elements.root,\n\t\t\t\t\tthis._diffModel,\n\t\t\t\t\tthis._editors,\n\t\t\t\t\tthis._options,\n\t\t\t\t\tthis._sashLayout,\n\t\t\t\t\tthis._boundarySashes,\n\t\t\t\t)\n\t\t\t\t: undefined;\n\t\t});\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._layoutInfo));\n\n\t\tderivedDisposable(this, reader => /** @description MovedBlocksLinesPart */\n\t\t\tnew (readHotReloadableExport(MovedBlocksLinesFeature, reader))(\n\t\t\t\tthis.elements.root,\n\t\t\t\tthis._diffModel,\n\t\t\t\tthis._layoutInfo.map(i => i.originalEditor),\n\t\t\t\tthis._layoutInfo.map(i => i.modifiedEditor),\n\t\t\t\tthis._editors,\n\t\t\t)\n\t\t).recomputeInitiallyAndOnChange(this._store, value => {\n\t\t\t// This is to break the layout info <-> moved blocks lines part dependency cycle.\n\t\t\tthis._movedBlocksLinesPart.set(value, undefined);\n\t\t});\n\n\t\tthis._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, true)));\n\t\tthis._register(Event.runAndSubscribe(this._editors.original.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, false)));\n\n\t\tconst isInitializingDiff = this._diffModel.map(this, (m, reader) => {\n\t\t\t/** @isInitializingDiff isDiffUpToDate */\n\t\t\tif (!m) { return undefined; }\n\t\t\treturn m.diff.read(reader) === undefined && !m.isDiffUpToDate.read(reader);\n\t\t});\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description DiffEditorWidgetHelper.ShowProgress */\n\t\t\tif (isInitializingDiff.read(reader) === true) {\n\t\t\t\tconst r = this._editorProgressService.show(true, 1000);\n\t\t\t\tstore.add(toDisposable(() => r.done()));\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tstore.add(new (readHotReloadableExport(RevertButtonsFeature, reader))(this._editors, this._diffModel, this._options, this));\n\t\t}));\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tif (!model) { return; }\n\t\t\tfor (const m of [model.model.original, model.model.modified]) {\n\t\t\t\tstore.add(m.onWillDispose(e => {\n\t\t\t\t\tonUnexpectedError(new BugIndicatingError('TextModel got disposed before DiffEditorWidget model got reset'));\n\t\t\t\t\tthis.setModel(null);\n\t\t\t\t}));\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tthis._options.setModel(this._diffModel.read(reader));\n\t\t}));\n\t}\n\n\tpublic getViewWidth(): number {\n\t\treturn this._rootSizeObserver.width.get();\n\t}\n\n\tpublic getContentHeight() {\n\t\treturn this._editors.modified.getContentHeight();\n\t}\n\n\tprotected _createInnerEditor(instantiationService: IInstantiationService, container: HTMLElement, options: Readonly<IEditorConstructionOptions>, editorWidgetOptions: ICodeEditorWidgetOptions): CodeEditorWidget {\n\t\tconst editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n\t\treturn editor;\n\t}\n\n\tprivate readonly _layoutInfo = derived(this, reader => {\n\t\tconst fullWidth = this._rootSizeObserver.width.read(reader);\n\t\tconst fullHeight = this._rootSizeObserver.height.read(reader);\n\n\t\tif (this._rootSizeObserver.automaticLayout) {\n\t\t\tthis.elements.root.style.height = '100%';\n\t\t} else {\n\t\t\tthis.elements.root.style.height = fullHeight + 'px';\n\t\t}\n\n\t\tconst sash = this._sash.read(reader);\n\n\t\tconst gutter = this._gutter.read(reader);\n\t\tconst gutterWidth = gutter?.width.read(reader) ?? 0;\n\n\t\tconst overviewRulerPartWidth = this._overviewRulerPart.read(reader)?.width ?? 0;\n\n\t\tlet originalLeft: number, originalWidth: number, modifiedLeft: number, modifiedWidth: number, gutterLeft: number;\n\n\t\tconst sideBySide = !!sash;\n\t\tif (sideBySide) {\n\t\t\tconst sashLeft = sash.sashLeft.read(reader);\n\t\t\tconst movedBlocksLinesWidth = this._movedBlocksLinesPart.read(reader)?.width.read(reader) ?? 0;\n\n\t\t\toriginalLeft = 0;\n\t\t\toriginalWidth = sashLeft - gutterWidth - movedBlocksLinesWidth;\n\n\t\t\tgutterLeft = sashLeft - gutterWidth;\n\n\t\t\tmodifiedLeft = sashLeft;\n\t\t\tmodifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n\t\t} else {\n\t\t\tgutterLeft = 0;\n\n\t\t\tconst shouldHideOriginalLineNumbers = this._options.inlineViewHideOriginalLineNumbers.read(reader);\n\t\t\toriginalLeft = gutterWidth;\n\t\t\tif (shouldHideOriginalLineNumbers) {\n\t\t\t\toriginalWidth = 0;\n\t\t\t} else {\n\t\t\t\toriginalWidth = Math.max(5, this._editors.originalObs.layoutInfoDecorationsLeft.read(reader));\n\t\t\t}\n\n\t\t\tmodifiedLeft = gutterWidth + originalWidth;\n\t\t\tmodifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n\t\t}\n\n\t\tthis.elements.original.style.left = originalLeft + 'px';\n\t\tthis.elements.original.style.width = originalWidth + 'px';\n\t\tthis._editors.original.layout({ width: originalWidth, height: fullHeight }, true);\n\n\t\tgutter?.layout(gutterLeft);\n\n\t\tthis.elements.modified.style.left = modifiedLeft + 'px';\n\t\tthis.elements.modified.style.width = modifiedWidth + 'px';\n\t\tthis._editors.modified.layout({ width: modifiedWidth, height: fullHeight }, true);\n\n\t\treturn {\n\t\t\tmodifiedEditor: this._editors.modified.getLayoutInfo(),\n\t\t\toriginalEditor: this._editors.original.getLayoutInfo(),\n\t\t};\n\t});\n\n\tprivate _createDiffEditorContributions() {\n\t\tconst contributions: IDiffEditorContributionDescription[] = EditorExtensionsRegistry.getDiffEditorContributions();\n\t\tfor (const desc of contributions) {\n\t\t\ttry {\n\t\t\t\tthis._register(this._instantiationService.createInstance(desc.ctor, this));\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override get _targetEditor(): CodeEditorWidget { return this._editors.modified; }\n\n\toverride getEditorType(): string { return EditorType.IDiffEditor; }\n\n\toverride onVisible(): void {\n\t\t// TODO: Only compute diffs when diff editor is visible\n\t\tthis._editors.original.onVisible();\n\t\tthis._editors.modified.onVisible();\n\t}\n\n\toverride onHide(): void {\n\t\tthis._editors.original.onHide();\n\t\tthis._editors.modified.onHide();\n\t}\n\n\toverride layout(dimension?: IDimension | undefined): void {\n\t\tthis._rootSizeObserver.observe(dimension);\n\t}\n\n\toverride hasTextFocus(): boolean { return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus(); }\n\n\tpublic override saveViewState(): IDiffEditorViewState {\n\t\tconst originalViewState = this._editors.original.saveViewState();\n\t\tconst modifiedViewState = this._editors.modified.saveViewState();\n\t\treturn {\n\t\t\toriginal: originalViewState,\n\t\t\tmodified: modifiedViewState,\n\t\t\tmodelState: this._diffModel.get()?.serializeState(),\n\t\t};\n\t}\n\n\tpublic override restoreViewState(s: IDiffEditorViewState): void {\n\t\tif (s && s.original && s.modified) {\n\t\t\tconst diffEditorState = s as IDiffEditorViewState;\n\t\t\tthis._editors.original.restoreViewState(diffEditorState.original);\n\t\t\tthis._editors.modified.restoreViewState(diffEditorState.modified);\n\t\t\tif (diffEditorState.modelState) {\n\t\t\t\tthis._diffModel.get()?.restoreSerializedState(diffEditorState.modelState as any);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleInitialized(): void {\n\t\tthis._editors.original.handleInitialized();\n\t\tthis._editors.modified.handleInitialized();\n\t}\n\n\tpublic createViewModel(model: IDiffEditorModel): IDiffEditorViewModel {\n\t\treturn this._instantiationService.createInstance(DiffEditorViewModel, model, this._options);\n\t}\n\n\toverride getModel(): IDiffEditorModel | null { return this._diffModel.get()?.model ?? null; }\n\n\toverride setModel(model: IDiffEditorModel | null | IDiffEditorViewModel): void {\n\t\tconst vm = !model ? null\n\t\t\t: ('model' in model) ? RefCounted.create(model).createNewRef(this)\n\t\t\t\t: RefCounted.create(this.createViewModel(model), this);\n\t\tthis.setDiffModel(vm);\n\t}\n\n\tsetDiffModel(viewModel: RefCounted<IDiffEditorViewModel> | null, tx?: ITransaction): void {\n\t\tconst currentModel = this._diffModel.get();\n\n\t\tif (!viewModel && currentModel) {\n\t\t\t// Transitioning from a model to no-model\n\t\t\tthis._accessibleDiffViewer.get().close();\n\t\t}\n\n\t\tif (this._diffModel.get() !== viewModel?.object) {\n\t\t\tsubtransaction(tx, tx => {\n\t\t\t\tconst vm = viewModel?.object;\n\t\t\t\t/** @description DiffEditorWidget.setModel */\n\t\t\t\tobservableFromEvent.batchEventsGlobally(tx, () => {\n\t\t\t\t\tthis._editors.original.setModel(vm ? vm.model.original : null);\n\t\t\t\t\tthis._editors.modified.setModel(vm ? vm.model.modified : null);\n\t\t\t\t});\n\t\t\t\tconst prevValueRef = this._diffModelSrc.get()?.createNewRef(this);\n\t\t\t\tthis._diffModelSrc.set(viewModel?.createNewRef(this) as RefCounted<DiffEditorViewModel> | undefined, tx);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// async, so that this runs after the transaction finished.\n\t\t\t\t\t// TODO: use the transaction to schedule disposal\n\t\t\t\t\tprevValueRef?.dispose();\n\t\t\t\t}, 0);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @param changedOptions Only has values for top-level options that have actually changed.\n\t */\n\toverride updateOptions(changedOptions: IDiffEditorOptions): void {\n\t\tthis._options.updateOptions(changedOptions);\n\t}\n\n\tgetContainerDomNode(): HTMLElement { return this._domElement; }\n\tgetOriginalEditor(): ICodeEditor { return this._editors.original; }\n\tgetModifiedEditor(): ICodeEditor { return this._editors.modified; }\n\n\tsetBoundarySashes(sashes: IBoundarySashes): void {\n\t\tthis._boundarySashes.set(sashes, undefined);\n\t}\n\n\tprivate readonly _diffValue = this._diffModel.map((m, r) => m?.diff.read(r));\n\treadonly onDidUpdateDiff: Event<void> = Event.fromObservableLight(this._diffValue);\n\n\tget ignoreTrimWhitespace(): boolean { return this._options.ignoreTrimWhitespace.get(); }\n\n\tget maxComputationTime(): number { return this._options.maxComputationTimeMs.get(); }\n\n\tget renderSideBySide(): boolean { return this._options.renderSideBySide.get(); }\n\n\t/**\n\t * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n\t */\n\tgetLineChanges(): ILineChange[] | null {\n\t\tconst diffState = this._diffModel.get()?.diff.get();\n\t\tif (!diffState) { return null; }\n\t\treturn toLineChanges(diffState);\n\t}\n\n\tgetDiffComputationResult(): IDiffComputationResult | null {\n\t\tconst diffState = this._diffModel.get()?.diff.get();\n\t\tif (!diffState) { return null; }\n\n\t\treturn {\n\t\t\tchanges: this.getLineChanges()!,\n\t\t\tchanges2: diffState.mappings.map(m => m.lineRangeMapping),\n\t\t\tidentical: diffState.identical,\n\t\t\tquitEarly: diffState.quitEarly,\n\t\t};\n\t}\n\n\trevert(diff: LineRangeMapping): void {\n\t\tconst model = this._diffModel.get();\n\t\tif (!model || !model.isDiffUpToDate.get()) { return; }\n\n\t\tthis._editors.modified.executeEdits('diffEditor', [\n\t\t\t{\n\t\t\t\trange: diff.modified.toExclusiveRange(),\n\t\t\t\ttext: model.model.original.getValueInRange(diff.original.toExclusiveRange())\n\t\t\t}\n\t\t]);\n\t}\n\n\trevertRangeMappings(diffs: RangeMapping[]): void {\n\t\tconst model = this._diffModel.get();\n\t\tif (!model || !model.isDiffUpToDate.get()) { return; }\n\n\t\tconst changes: IIdentifiedSingleEditOperation[] = diffs.map<IIdentifiedSingleEditOperation>(c => ({\n\t\t\trange: c.modifiedRange,\n\t\t\ttext: model.model.original.getValueInRange(c.originalRange)\n\t\t}));\n\n\t\tthis._editors.modified.executeEdits('diffEditor', changes);\n\t}\n\n\tprivate _goTo(diff: DiffMapping): void {\n\t\tthis._editors.modified.setPosition(new Position(diff.lineRangeMapping.modified.startLineNumber, 1));\n\t\tthis._editors.modified.revealRangeInCenter(diff.lineRangeMapping.modified.toExclusiveRange());\n\t}\n\n\tgoToDiff(target: 'previous' | 'next'): void {\n\t\tconst diffs = this._diffModel.get()?.diff.get()?.mappings;\n\t\tif (!diffs || diffs.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst curLineNumber = this._editors.modified.getPosition()!.lineNumber;\n\n\t\tlet diff: DiffMapping | undefined;\n\t\tif (target === 'next') {\n\t\t\tdiff = diffs.find(d => d.lineRangeMapping.modified.startLineNumber > curLineNumber) ?? diffs[0];\n\t\t} else {\n\t\t\tdiff = findLast(diffs, d => d.lineRangeMapping.modified.startLineNumber < curLineNumber) ?? diffs[diffs.length - 1];\n\t\t}\n\t\tthis._goTo(diff);\n\n\t\tif (diff.lineRangeMapping.modified.isEmpty) {\n\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.goToDiff' });\n\t\t} else if (diff.lineRangeMapping.original.isEmpty) {\n\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.goToDiff' });\n\t\t} else if (diff) {\n\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.goToDiff' });\n\t\t}\n\t}\n\n\trevealFirstDiff(): void {\n\t\tconst diffModel = this._diffModel.get();\n\t\tif (!diffModel) {\n\t\t\treturn;\n\t\t}\n\t\t// wait for the diff computation to finish\n\t\tthis.waitForDiff().then(() => {\n\t\t\tconst diffs = diffModel.diff.get()?.mappings;\n\t\t\tif (!diffs || diffs.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._goTo(diffs[0]);\n\t\t});\n\t}\n\n\taccessibleDiffViewerNext(): void { this._accessibleDiffViewer.get().next(); }\n\n\taccessibleDiffViewerPrev(): void { this._accessibleDiffViewer.get().prev(); }\n\n\tasync waitForDiff(): Promise<void> {\n\t\tconst diffModel = this._diffModel.get();\n\t\tif (!diffModel) { return; }\n\t\tawait diffModel.waitForDiff();\n\t}\n\n\tmapToOtherSide(): { destination: CodeEditorWidget; destinationSelection: Range | undefined } {\n\t\tconst isModifiedFocus = this._editors.modified.hasWidgetFocus();\n\t\tconst source = isModifiedFocus ? this._editors.modified : this._editors.original;\n\t\tconst destination = isModifiedFocus ? this._editors.original : this._editors.modified;\n\n\t\tlet destinationSelection: Range | undefined;\n\n\t\tconst sourceSelection = source.getSelection();\n\t\tif (sourceSelection) {\n\t\t\tconst mappings = this._diffModel.get()?.diff.get()?.mappings.map(m => isModifiedFocus ? m.lineRangeMapping.flip() : m.lineRangeMapping);\n\t\t\tif (mappings) {\n\t\t\t\tconst newRange1 = translatePosition(sourceSelection.getStartPosition(), mappings);\n\t\t\t\tconst newRange2 = translatePosition(sourceSelection.getEndPosition(), mappings);\n\t\t\t\tdestinationSelection = Range.plusRange(newRange1, newRange2);\n\t\t\t}\n\t\t}\n\t\treturn { destination, destinationSelection };\n\t}\n\n\tswitchSide(): void {\n\t\tconst { destination, destinationSelection } = this.mapToOtherSide();\n\t\tdestination.focus();\n\t\tif (destinationSelection) {\n\t\t\tdestination.setSelection(destinationSelection);\n\t\t}\n\t}\n\n\texitCompareMove(): void {\n\t\tconst model = this._diffModel.get();\n\t\tif (!model) { return; }\n\t\tmodel.movedTextToCompare.set(undefined, undefined);\n\t}\n\n\tcollapseAllUnchangedRegions(): void {\n\t\tconst unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n\t\tif (!unchangedRegions) { return; }\n\t\ttransaction(tx => {\n\t\t\tfor (const region of unchangedRegions) {\n\t\t\t\tregion.collapseAll(tx);\n\t\t\t}\n\t\t});\n\t}\n\n\tshowAllUnchangedRegions(): void {\n\t\tconst unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n\t\tif (!unchangedRegions) { return; }\n\t\ttransaction(tx => {\n\t\t\tfor (const region of unchangedRegions) {\n\t\t\t\tregion.showAll(tx);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _handleCursorPositionChange(e: ICursorPositionChangedEvent | undefined, isModifiedEditor: boolean): void {\n\t\tif (e?.reason === CursorChangeReason.Explicit) {\n\t\t\tconst diff = this._diffModel.get()?.diff.get()?.mappings.find(m => isModifiedEditor ? m.lineRangeMapping.modified.contains(e.position.lineNumber) : m.lineRangeMapping.original.contains(e.position.lineNumber));\n\t\t\tif (diff?.lineRangeMapping.modified.isEmpty) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.cursorPositionChanged' });\n\t\t\t} else if (diff?.lineRangeMapping.original.isEmpty) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.cursorPositionChanged' });\n\t\t\t} else if (diff) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.cursorPositionChanged' });\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction toLineChanges(state: DiffState): ILineChange[] {\n\treturn state.mappings.map(x => {\n\t\tconst m = x.lineRangeMapping;\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet innerChanges = m.innerChanges;\n\n\t\tif (m.original.isEmpty) {\n\t\t\t// Insertion\n\t\t\toriginalStartLineNumber = m.original.startLineNumber - 1;\n\t\t\toriginalEndLineNumber = 0;\n\t\t\tinnerChanges = undefined;\n\t\t} else {\n\t\t\toriginalStartLineNumber = m.original.startLineNumber;\n\t\t\toriginalEndLineNumber = m.original.endLineNumberExclusive - 1;\n\t\t}\n\n\t\tif (m.modified.isEmpty) {\n\t\t\t// Deletion\n\t\t\tmodifiedStartLineNumber = m.modified.startLineNumber - 1;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t\tinnerChanges = undefined;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = m.modified.startLineNumber;\n\t\t\tmodifiedEndLineNumber = m.modified.endLineNumberExclusive - 1;\n\t\t}\n\n\t\treturn {\n\t\t\toriginalStartLineNumber,\n\t\t\toriginalEndLineNumber,\n\t\t\tmodifiedStartLineNumber,\n\t\t\tmodifiedEndLineNumber,\n\t\t\tcharChanges: innerChanges?.map(m => ({\n\t\t\t\toriginalStartLineNumber: m.originalRange.startLineNumber,\n\t\t\t\toriginalStartColumn: m.originalRange.startColumn,\n\t\t\t\toriginalEndLineNumber: m.originalRange.endLineNumber,\n\t\t\t\toriginalEndColumn: m.originalRange.endColumn,\n\t\t\t\tmodifiedStartLineNumber: m.modifiedRange.startLineNumber,\n\t\t\t\tmodifiedStartColumn: m.modifiedRange.startColumn,\n\t\t\t\tmodifiedEndLineNumber: m.modifiedRange.endLineNumber,\n\t\t\t\tmodifiedEndColumn: m.modifiedRange.endColumn,\n\t\t\t}))\n\t\t};\n\t});\n}\n"],
  "mappings": "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",
  "names": ["m", "tx"]
}
