import { Disposable } from "vs/base/common/lifecycle";
import { CodeEditorWidget, ICodeEditorWidgetOptions } from "vs/editor/browser/widget/codeEditor/codeEditorWidget";
import { IDiffCodeEditorWidgetOptions } from "vs/editor/browser/widget/diffEditor/diffEditorWidget";
import { IEditorOptions } from "vs/editor/common/config/editorOptions";
import { IInstantiationService } from "vs/platform/instantiation/common/instantiation";
import { IKeybindingService } from "vs/platform/keybinding/common/keybinding";
import { DiffEditorOptions } from "../diffEditorOptions";
export declare class DiffEditorEditors extends Disposable {
    private readonly originalEditorElement;
    private readonly modifiedEditorElement;
    private readonly _options;
    private _argCodeEditorWidgetOptions;
    private readonly _createInnerEditor;
    private readonly _instantiationService;
    private readonly _keybindingService;
    readonly original: any;
    readonly modified: any;
    private readonly _onDidContentSizeChange;
    get onDidContentSizeChange(): any;
    readonly modifiedScrollTop: any;
    readonly modifiedScrollHeight: any;
    readonly modifiedObs: any;
    readonly originalObs: any;
    readonly modifiedModel: any;
    readonly modifiedSelections: any;
    readonly modifiedCursor: any;
    readonly originalCursor: any;
    readonly isOriginalFocused: any;
    readonly isModifiedFocused: any;
    readonly isFocused: any;
    constructor(originalEditorElement: HTMLElement, modifiedEditorElement: HTMLElement, _options: DiffEditorOptions, _argCodeEditorWidgetOptions: IDiffCodeEditorWidgetOptions, _createInnerEditor: (instantiationService: IInstantiationService, container: HTMLElement, options: Readonly<IEditorOptions>, editorWidgetOptions: ICodeEditorWidgetOptions) => CodeEditorWidget, _instantiationService: IInstantiationService, _keybindingService: IKeybindingService);
    private _createLeftHandSideEditor;
    private _createRightHandSideEditor;
    private _constructInnerEditor;
    private _adjustOptionsForLeftHandSide;
    private _adjustOptionsForRightHandSide;
    private _adjustOptionsForSubEditor;
    private _updateAriaLabel;
}
