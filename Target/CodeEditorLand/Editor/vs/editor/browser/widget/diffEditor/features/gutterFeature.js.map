{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/features/gutterFeature.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventType, addDisposableListener, h } from '../../../../../base/browser/dom.js';\nimport { IMouseWheelEvent } from '../../../../../base/browser/mouseEvent.js';\nimport { ActionsOrientation } from '../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { HoverPosition } from '../../../../../base/browser/ui/hover/hoverWidget.js';\nimport { IBoundarySashes } from '../../../../../base/browser/ui/sash/sash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, autorun, autorunWithStore, derived, derivedDisposable, derivedWithSetter, observableFromEvent, observableValue } from '../../../../../base/common/observable.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { HiddenItemStrategy, MenuWorkbenchToolBar } from '../../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { WorkbenchHoverDelegate } from '../../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { LineRange, LineRangeSet } from '../../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../../common/core/offsetRange.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextEdit } from '../../../../common/core/textEdit.js';\nimport { DetailedLineRangeMapping } from '../../../../common/diff/rangeMapping.js';\nimport { TextModelText } from '../../../../common/model/textModelText.js';\nimport { ActionRunnerWithContext } from '../../multiDiffEditor/utils.js';\nimport { DiffEditorEditors } from '../components/diffEditorEditors.js';\nimport { DiffEditorSash, SashLayout } from '../components/diffEditorSash.js';\nimport { DiffEditorOptions } from '../diffEditorOptions.js';\nimport { DiffEditorViewModel } from '../diffEditorViewModel.js';\nimport { appendRemoveOnDispose, applyStyle, prependRemoveOnDispose } from '../utils.js';\nimport { EditorGutter, IGutterItemInfo, IGutterItemView } from '../utils/editorGutter.js';\n\nconst emptyArr: never[] = [];\nconst width = 35;\n\nexport class DiffEditorGutter extends Disposable {\n\tprivate readonly _menu = this._register(this._menuService.createMenu(MenuId.DiffEditorHunkToolbar, this._contextKeyService));\n\tprivate readonly _actions = observableFromEvent(this, this._menu.onDidChange, () => this._menu.getActions());\n\tprivate readonly _hasActions = this._actions.map(a => a.length > 0);\n\tprivate readonly _showSash = derived(this, reader => this._options.renderSideBySide.read(reader) && this._hasActions.read(reader));\n\n\tpublic readonly width = derived(this, reader => this._hasActions.read(reader) ? width : 0);\n\n\tprivate readonly elements = h('div.gutter@gutter', { style: { position: 'absolute', height: '100%', width: width + 'px' } }, []);\n\n\tconstructor(\n\t\tdiffEditorRoot: HTMLDivElement,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tprivate readonly _sashLayout: SashLayout,\n\t\tprivate readonly _boundarySashes: IObservable<IBoundarySashes | undefined, void>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(prependRemoveOnDispose(diffEditorRoot, this.elements.root));\n\n\t\tthis._register(addDisposableListener(this.elements.root, 'click', () => {\n\t\t\tthis._editors.modified.focus();\n\t\t}));\n\n\t\tthis._register(applyStyle(this.elements.root, { display: this._hasActions.map(a => a ? 'block' : 'none') }));\n\n\t\tderivedDisposable(this, reader => {\n\t\t\tconst showSash = this._showSash.read(reader);\n\t\t\treturn !showSash ? undefined : new DiffEditorSash(\n\t\t\t\tdiffEditorRoot,\n\t\t\t\tthis._sashLayout.dimensions,\n\t\t\t\tthis._options.enableSplitViewResizing,\n\t\t\t\tthis._boundarySashes,\n\t\t\t\tderivedWithSetter(\n\t\t\t\t\tthis, reader => this._sashLayout.sashLeft.read(reader) - width,\n\t\t\t\t\t(v, tx) => this._sashLayout.sashLeft.set(v + width, tx)\n\t\t\t\t),\n\t\t\t\t() => this._sashLayout.resetSash(),\n\t\t\t);\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst gutterItems = derived(this, reader => {\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst diffs = model.diff.read(reader);\n\t\t\tif (!diffs) { return []; }\n\n\t\t\tconst selection = this._selectedDiffs.read(reader);\n\t\t\tif (selection.length > 0) {\n\t\t\t\tconst m = DetailedLineRangeMapping.fromRangeMappings(selection.flatMap(s => s.rangeMappings));\n\t\t\t\treturn [\n\t\t\t\t\tnew DiffGutterItem(\n\t\t\t\t\t\tm,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tMenuId.DiffEditorSelectionToolbar,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tmodel.model.original.uri,\n\t\t\t\t\t\tmodel.model.modified.uri,\n\t\t\t\t\t)];\n\t\t\t}\n\n\t\t\tconst currentDiff = this._currentDiff.read(reader);\n\n\t\t\treturn diffs.mappings.map(m => new DiffGutterItem(\n\t\t\t\tm.lineRangeMapping.withInnerChangesFromLineRanges(),\n\t\t\t\tm.lineRangeMapping === currentDiff?.lineRangeMapping,\n\t\t\t\tMenuId.DiffEditorHunkToolbar,\n\t\t\t\tundefined,\n\t\t\t\tmodel.model.original.uri,\n\t\t\t\tmodel.model.modified.uri,\n\t\t\t));\n\t\t});\n\n\t\tthis._register(new EditorGutter<DiffGutterItem>(this._editors.modified, this.elements.root, {\n\t\t\tgetIntersectingGutterItems: (range, reader) => gutterItems.read(reader),\n\t\t\tcreateView: (item, target) => {\n\t\t\t\treturn this._instantiationService.createInstance(DiffToolBar, item, target, this);\n\t\t\t},\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.elements.gutter, EventType.MOUSE_WHEEL, (e: IMouseWheelEvent) => {\n\t\t\tif (this._editors.modified.getOption(EditorOption.scrollbar).handleMouseWheel) {\n\t\t\t\tthis._editors.modified.delegateScrollFromMouseWheelEvent(e);\n\t\t\t}\n\t\t}, { passive: false }));\n\t}\n\n\tpublic computeStagedValue(mapping: DetailedLineRangeMapping): string {\n\t\tconst c = mapping.innerChanges ?? [];\n\t\tconst modified = new TextModelText(this._editors.modifiedModel.get()!);\n\t\tconst original = new TextModelText(this._editors.original.getModel()!);\n\n\t\tconst edit = new TextEdit(c.map(c => c.toTextEdit(modified)));\n\t\tconst value = edit.apply(original);\n\t\treturn value;\n\t}\n\n\tprivate readonly _currentDiff = derived(this, (reader) => {\n\t\tconst model = this._diffModel.read(reader);\n\t\tif (!model) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst mappings = model.diff.read(reader)?.mappings;\n\n\t\tconst cursorPosition = this._editors.modifiedCursor.read(reader);\n\t\tif (!cursorPosition) { return undefined; }\n\n\t\treturn mappings?.find(m => m.lineRangeMapping.modified.contains(cursorPosition.lineNumber));\n\t});\n\n\tprivate readonly _selectedDiffs = derived(this, (reader) => {\n\t\t/** @description selectedDiffs */\n\t\tconst model = this._diffModel.read(reader);\n\t\tconst diff = model?.diff.read(reader);\n\t\t// Return `emptyArr` because it is a constant. [] is always a new array and would trigger a change.\n\t\tif (!diff) { return emptyArr; }\n\n\t\tconst selections = this._editors.modifiedSelections.read(reader);\n\t\tif (selections.every(s => s.isEmpty())) { return emptyArr; }\n\n\t\tconst selectedLineNumbers = new LineRangeSet(selections.map(s => LineRange.fromRangeInclusive(s)));\n\n\t\tconst selectedMappings = diff.mappings.filter(m =>\n\t\t\tm.lineRangeMapping.innerChanges && selectedLineNumbers.intersects(m.lineRangeMapping.modified)\n\t\t);\n\t\tconst result = selectedMappings.map(mapping => ({\n\t\t\tmapping,\n\t\t\trangeMappings: mapping.lineRangeMapping.innerChanges!.filter(\n\t\t\t\tc => selections.some(s => Range.areIntersecting(c.modifiedRange, s))\n\t\t\t)\n\t\t}));\n\t\tif (result.length === 0 || result.every(r => r.rangeMappings.length === 0)) { return emptyArr; }\n\t\treturn result;\n\t});\n\n\tlayout(left: number) {\n\t\tthis.elements.gutter.style.left = left + 'px';\n\t}\n}\n\nclass DiffGutterItem implements IGutterItemInfo {\n\tconstructor(\n\t\tpublic readonly mapping: DetailedLineRangeMapping,\n\t\tpublic readonly showAlways: boolean,\n\t\tpublic readonly menuId: MenuId,\n\t\tpublic readonly rangeOverride: LineRange | undefined,\n\t\tpublic readonly originalUri: URI,\n\t\tpublic readonly modifiedUri: URI,\n\t) {\n\t}\n\tget id(): string { return this.mapping.modified.toString(); }\n\tget range(): LineRange { return this.rangeOverride ?? this.mapping.modified; }\n}\n\n\nclass DiffToolBar extends Disposable implements IGutterItemView {\n\tprivate readonly _elements = h('div.gutterItem', { style: { height: '20px', width: '34px' } }, [\n\t\th('div.background@background', {}, []),\n\t\th('div.buttons@buttons', {}, []),\n\t]);\n\n\tprivate readonly _showAlways = this._item.map(this, item => item.showAlways);\n\tprivate readonly _menuId = this._item.map(this, item => item.menuId);\n\n\tprivate readonly _isSmall = observableValue(this, false);\n\n\tconstructor(\n\t\tprivate readonly _item: IObservable<DiffGutterItem>,\n\t\ttarget: HTMLElement,\n\t\tgutter: DiffEditorGutter,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tconst hoverDelegate = this._register(instantiationService.createInstance(\n\t\t\tWorkbenchHoverDelegate,\n\t\t\t'element',\n\t\t\ttrue,\n\t\t\t{ position: { hoverPosition: HoverPosition.RIGHT } }\n\t\t));\n\n\t\tthis._register(appendRemoveOnDispose(target, this._elements.root));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update showAlways */\n\t\t\tconst showAlways = this._showAlways.read(reader);\n\t\t\tthis._elements.root.classList.toggle('noTransition', true);\n\t\t\tthis._elements.root.classList.toggle('showAlways', showAlways);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._elements.root.classList.toggle('noTransition', false);\n\t\t\t}, 0);\n\t\t}));\n\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tthis._elements.buttons.replaceChildren();\n\t\t\tconst i = store.add(instantiationService.createInstance(MenuWorkbenchToolBar, this._elements.buttons, this._menuId.read(reader), {\n\t\t\t\torientation: ActionsOrientation.VERTICAL,\n\t\t\t\thoverDelegate,\n\t\t\t\ttoolbarOptions: {\n\t\t\t\t\tprimaryGroup: g => g.startsWith('primary'),\n\t\t\t\t},\n\t\t\t\toverflowBehavior: { maxItems: this._isSmall.read(reader) ? 1 : 3 },\n\t\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\t\tactionRunner: new ActionRunnerWithContext(() => {\n\t\t\t\t\tconst item = this._item.get();\n\t\t\t\t\tconst mapping = item.mapping;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmapping,\n\t\t\t\t\t\toriginalWithModifiedChanges: gutter.computeStagedValue(mapping),\n\t\t\t\t\t\toriginalUri: item.originalUri,\n\t\t\t\t\t\tmodifiedUri: item.modifiedUri,\n\t\t\t\t\t} satisfies DiffEditorSelectionHunkToolbarContext;\n\t\t\t\t}),\n\t\t\t\tmenuOptions: {\n\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t},\n\t\t\t}));\n\t\t\tstore.add(i.onDidChangeMenuItems(() => {\n\t\t\t\tif (this._lastItemRange) {\n\t\t\t\t\tthis.layout(this._lastItemRange, this._lastViewRange!);\n\t\t\t\t}\n\t\t\t}));\n\t\t}));\n\t}\n\n\tprivate _lastItemRange: OffsetRange | undefined = undefined;\n\tprivate _lastViewRange: OffsetRange | undefined = undefined;\n\n\tlayout(itemRange: OffsetRange, viewRange: OffsetRange): void {\n\t\tthis._lastItemRange = itemRange;\n\t\tthis._lastViewRange = viewRange;\n\n\t\tlet itemHeight = this._elements.buttons.clientHeight;\n\t\tthis._isSmall.set(this._item.get().mapping.original.startLineNumber === 1 && itemRange.length < 30, undefined);\n\t\t// Item might have changed\n\t\titemHeight = this._elements.buttons.clientHeight;\n\n\t\tconst middleHeight = itemRange.length / 2 - itemHeight / 2;\n\n\t\tconst margin = itemHeight;\n\n\t\tlet effectiveCheckboxTop = itemRange.start + middleHeight;\n\n\t\tconst preferredViewPortRange = OffsetRange.tryCreate(\n\t\t\tmargin,\n\t\t\tviewRange.endExclusive - margin - itemHeight\n\t\t);\n\n\t\tconst preferredParentRange = OffsetRange.tryCreate(\n\t\t\titemRange.start + margin,\n\t\t\titemRange.endExclusive - itemHeight - margin\n\t\t);\n\n\t\tif (preferredParentRange && preferredViewPortRange && preferredParentRange.start < preferredParentRange.endExclusive) {\n\t\t\teffectiveCheckboxTop = preferredViewPortRange!.clip(effectiveCheckboxTop);\n\t\t\teffectiveCheckboxTop = preferredParentRange!.clip(effectiveCheckboxTop);\n\t\t}\n\n\t\tthis._elements.buttons.style.top = `${effectiveCheckboxTop - itemRange.start}px`;\n\t}\n}\n\nexport interface DiffEditorSelectionHunkToolbarContext {\n\tmapping: DetailedLineRangeMapping;\n\n\t/**\n\t * The original text with the selected modified changes applied.\n\t*/\n\toriginalWithModifiedChanges: string;\n\n\tmodifiedUri: URI;\n\toriginalUri: URI;\n}\n"],
  "mappings": "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",
  "names": ["reader", "c"]
}
