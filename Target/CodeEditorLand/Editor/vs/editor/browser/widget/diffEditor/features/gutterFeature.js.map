{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/features/gutterFeature.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEventType,\n\taddDisposableListener,\n\th,\n} from \"../../../../../base/browser/dom.js\";\nimport type { IMouseWheelEvent } from \"../../../../../base/browser/mouseEvent.js\";\nimport { ActionsOrientation } from \"../../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { HoverPosition } from \"../../../../../base/browser/ui/hover/hoverWidget.js\";\nimport type { IBoundarySashes } from \"../../../../../base/browser/ui/sash/sash.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\tautorun,\n\tautorunWithStore,\n\tderived,\n\tderivedDisposable,\n\tderivedWithSetter,\n\tobservableFromEvent,\n\tobservableValue,\n} from \"../../../../../base/common/observable.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport {\n\tHiddenItemStrategy,\n\tMenuWorkbenchToolBar,\n} from \"../../../../../platform/actions/browser/toolbar.js\";\nimport {\n\tIMenuService,\n\tMenuId,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { IContextKeyService } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { WorkbenchHoverDelegate } from \"../../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { EditorOption } from \"../../../../common/config/editorOptions.js\";\nimport { LineRange, LineRangeSet } from \"../../../../common/core/lineRange.js\";\nimport { OffsetRange } from \"../../../../common/core/offsetRange.js\";\nimport { Range } from \"../../../../common/core/range.js\";\nimport { TextEdit } from \"../../../../common/core/textEdit.js\";\nimport { DetailedLineRangeMapping } from \"../../../../common/diff/rangeMapping.js\";\nimport { TextModelText } from \"../../../../common/model/textModelText.js\";\nimport { ActionRunnerWithContext } from \"../../multiDiffEditor/utils.js\";\nimport type { DiffEditorEditors } from \"../components/diffEditorEditors.js\";\nimport {\n\tDiffEditorSash,\n\ttype SashLayout,\n} from \"../components/diffEditorSash.js\";\nimport type { DiffEditorOptions } from \"../diffEditorOptions.js\";\nimport type { DiffEditorViewModel } from \"../diffEditorViewModel.js\";\nimport {\n\tappendRemoveOnDispose,\n\tapplyStyle,\n\tprependRemoveOnDispose,\n} from \"../utils.js\";\nimport {\n\tEditorGutter,\n\ttype IGutterItemInfo,\n\ttype IGutterItemView,\n} from \"../utils/editorGutter.js\";\n\nconst emptyArr: never[] = [];\nconst width = 35;\n\nexport class DiffEditorGutter extends Disposable {\n\tprivate readonly _menu = this._register(\n\t\tthis._menuService.createMenu(\n\t\t\tMenuId.DiffEditorHunkToolbar,\n\t\t\tthis._contextKeyService,\n\t\t),\n\t);\n\tprivate readonly _actions = observableFromEvent(\n\t\tthis,\n\t\tthis._menu.onDidChange,\n\t\t() => this._menu.getActions(),\n\t);\n\tprivate readonly _hasActions = this._actions.map((a) => a.length > 0);\n\tprivate readonly _showSash = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\tthis._options.renderSideBySide.read(reader) &&\n\t\t\tthis._hasActions.read(reader),\n\t);\n\n\tpublic readonly width = derived(this, (reader) =>\n\t\tthis._hasActions.read(reader) ? width : 0,\n\t);\n\n\tprivate readonly elements = h(\n\t\t\"div.gutter@gutter\",\n\t\t{\n\t\t\tstyle: {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\theight: \"100%\",\n\t\t\t\twidth: width + \"px\",\n\t\t\t},\n\t\t},\n\t\t[],\n\t);\n\n\tconstructor(\n\t\tdiffEditorRoot: HTMLDivElement,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tprivate readonly _sashLayout: SashLayout,\n\t\tprivate readonly _boundarySashes: IObservable<IBoundarySashes | undefined, void>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(prependRemoveOnDispose(diffEditorRoot, this.elements.root));\n\n\t\tthis._register(addDisposableListener(this.elements.root, 'click', () => {\n\t\t\tthis._editors.modified.focus();\n\t\t}));\n\n\t\tthis._register(applyStyle(this.elements.root, { display: this._hasActions.map(a => a ? 'block' : 'none') }));\n\n\t\tderivedDisposable(this, reader => {\n\t\t\tconst showSash = this._showSash.read(reader);\n\t\t\treturn showSash ? new DiffEditorSash(\n\t\t\t\tdiffEditorRoot,\n\t\t\t\tthis._sashLayout.dimensions,\n\t\t\t\tthis._options.enableSplitViewResizing,\n\t\t\t\tthis._boundarySashes,\n\t\t\t\tderivedWithSetter(\n\t\t\t\t\tthis, reader => this._sashLayout.sashLeft.read(reader) - width,\n\t\t\t\t\t(v, tx) => this._sashLayout.sashLeft.set(v + width, tx)\n\t\t\t\t),\n\t\t\t\t() => this._sashLayout.resetSash(),\n\t\t\t) : undefined;\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst gutterItems = derived(this, reader => {\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst diffs = model.diff.read(reader);\n\t\t\tif (!diffs) { return []; }\n\n\t\t\tconst selection = this._selectedDiffs.read(reader);\n\t\t\tif (selection.length > 0) {\n\t\t\t\tconst m = DetailedLineRangeMapping.fromRangeMappings(selection.flatMap(s => s.rangeMappings));\n\t\t\t\treturn [\n\t\t\t\t\tnew DiffGutterItem(\n\t\t\t\t\t\tm,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tMenuId.DiffEditorSelectionToolbar,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tmodel.model.original.uri,\n\t\t\t\t\t\tmodel.model.modified.uri,\n\t\t\t\t\t)];\n\t\t\t}\n\n\t\t\tconst currentDiff = this._currentDiff.read(reader);\n\n\t\t\treturn diffs.mappings.map(m => new DiffGutterItem(\n\t\t\t\tm.lineRangeMapping.withInnerChangesFromLineRanges(),\n\t\t\t\tm.lineRangeMapping === currentDiff?.lineRangeMapping,\n\t\t\t\tMenuId.DiffEditorHunkToolbar,\n\t\t\t\tundefined,\n\t\t\t\tmodel.model.original.uri,\n\t\t\t\tmodel.model.modified.uri,\n\t\t\t));\n\t\t});\n\n\t\tthis._register(new EditorGutter<DiffGutterItem>(this._editors.modified, this.elements.root, {\n\t\t\tgetIntersectingGutterItems: (range, reader) => gutterItems.read(reader),\n\t\t\tcreateView: (item, target) => {\n\t\t\t\treturn this._instantiationService.createInstance(DiffToolBar, item, target, this);\n\t\t\t},\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.elements.gutter, EventType.MOUSE_WHEEL, (e: IMouseWheelEvent) => {\n\t\t\tif (this._editors.modified.getOption(EditorOption.scrollbar).handleMouseWheel) {\n\t\t\t\tthis._editors.modified.delegateScrollFromMouseWheelEvent(e);\n\t\t\t}\n\t\t}, { passive: false }));\n\t}\n\n\tpublic computeStagedValue(mapping: DetailedLineRangeMapping): string {\n\t\tconst c = mapping.innerChanges ?? [];\n\t\tconst modified = new TextModelText(this._editors.modifiedModel.get()!);\n\t\tconst original = new TextModelText(this._editors.original.getModel()!);\n\n\t\tconst edit = new TextEdit(c.map((c) => c.toTextEdit(modified)));\n\t\tconst value = edit.apply(original);\n\t\treturn value;\n\t}\n\n\tprivate readonly _currentDiff = derived(this, (reader) => {\n\t\tconst model = this._diffModel.read(reader);\n\t\tif (!model) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst mappings = model.diff.read(reader)?.mappings;\n\n\t\tconst cursorPosition = this._editors.modifiedCursor.read(reader);\n\t\tif (!cursorPosition) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn mappings?.find((m) =>\n\t\t\tm.lineRangeMapping.modified.contains(cursorPosition.lineNumber),\n\t\t);\n\t});\n\n\tprivate readonly _selectedDiffs = derived(this, (reader) => {\n\t\t/** @description selectedDiffs */\n\t\tconst model = this._diffModel.read(reader);\n\t\tconst diff = model?.diff.read(reader);\n\t\t// Return `emptyArr` because it is a constant. [] is always a new array and would trigger a change.\n\t\tif (!diff) {\n\t\t\treturn emptyArr;\n\t\t}\n\n\t\tconst selections = this._editors.modifiedSelections.read(reader);\n\t\tif (selections.every((s) => s.isEmpty())) {\n\t\t\treturn emptyArr;\n\t\t}\n\n\t\tconst selectedLineNumbers = new LineRangeSet(\n\t\t\tselections.map((s) => LineRange.fromRangeInclusive(s)),\n\t\t);\n\n\t\tconst selectedMappings = diff.mappings.filter(\n\t\t\t(m) =>\n\t\t\t\tm.lineRangeMapping.innerChanges &&\n\t\t\t\tselectedLineNumbers.intersects(m.lineRangeMapping.modified),\n\t\t);\n\t\tconst result = selectedMappings.map((mapping) => ({\n\t\t\tmapping,\n\t\t\trangeMappings: mapping.lineRangeMapping.innerChanges!.filter((c) =>\n\t\t\t\tselections.some((s) =>\n\t\t\t\t\tRange.areIntersecting(c.modifiedRange, s),\n\t\t\t\t),\n\t\t\t),\n\t\t}));\n\t\tif (\n\t\t\tresult.length === 0 ||\n\t\t\tresult.every((r) => r.rangeMappings.length === 0)\n\t\t) {\n\t\t\treturn emptyArr;\n\t\t}\n\t\treturn result;\n\t});\n\n\tlayout(left: number) {\n\t\tthis.elements.gutter.style.left = left + \"px\";\n\t}\n}\n\nclass DiffGutterItem implements IGutterItemInfo {\n\tconstructor(\n\t\tpublic readonly mapping: DetailedLineRangeMapping,\n\t\tpublic readonly showAlways: boolean,\n\t\tpublic readonly menuId: MenuId,\n\t\tpublic readonly rangeOverride: LineRange | undefined,\n\t\tpublic readonly originalUri: URI,\n\t\tpublic readonly modifiedUri: URI,\n\t) {}\n\tget id(): string {\n\t\treturn this.mapping.modified.toString();\n\t}\n\tget range(): LineRange {\n\t\treturn this.rangeOverride ?? this.mapping.modified;\n\t}\n}\n\nclass DiffToolBar extends Disposable implements IGutterItemView {\n\tprivate readonly _elements = h(\n\t\t\"div.gutterItem\",\n\t\t{ style: { height: \"20px\", width: \"34px\" } },\n\t\t[\n\t\t\th(\"div.background@background\", {}, []),\n\t\t\th(\"div.buttons@buttons\", {}, []),\n\t\t],\n\t);\n\n\tprivate readonly _showAlways = this._item.map(\n\t\tthis,\n\t\t(item) => item.showAlways,\n\t);\n\tprivate readonly _menuId = this._item.map(this, (item) => item.menuId);\n\n\tprivate readonly _isSmall = observableValue(this, false);\n\n\tconstructor(\n\t\tprivate readonly _item: IObservable<DiffGutterItem>,\n\t\ttarget: HTMLElement,\n\t\tgutter: DiffEditorGutter,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst hoverDelegate = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tWorkbenchHoverDelegate,\n\t\t\t\t\"element\",\n\t\t\t\ttrue,\n\t\t\t\t{ position: { hoverPosition: HoverPosition.RIGHT } },\n\t\t\t),\n\t\t);\n\n\t\tthis._register(appendRemoveOnDispose(target, this._elements.root));\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description update showAlways */\n\t\t\t\tconst showAlways = this._showAlways.read(reader);\n\t\t\t\tthis._elements.root.classList.toggle(\"noTransition\", true);\n\t\t\t\tthis._elements.root.classList.toggle(\"showAlways\", showAlways);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._elements.root.classList.toggle(\"noTransition\", false);\n\t\t\t\t}, 0);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\tthis._elements.buttons.replaceChildren();\n\t\t\t\tconst i = store.add(\n\t\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\t\tMenuWorkbenchToolBar,\n\t\t\t\t\t\tthis._elements.buttons,\n\t\t\t\t\t\tthis._menuId.read(reader),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\torientation: ActionsOrientation.VERTICAL,\n\t\t\t\t\t\t\thoverDelegate,\n\t\t\t\t\t\t\ttoolbarOptions: {\n\t\t\t\t\t\t\t\tprimaryGroup: (g) => g.startsWith(\"primary\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toverflowBehavior: {\n\t\t\t\t\t\t\t\tmaxItems: this._isSmall.read(reader) ? 1 : 3,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\t\t\t\t\tactionRunner: new ActionRunnerWithContext(() => {\n\t\t\t\t\t\t\t\tconst item = this._item.get();\n\t\t\t\t\t\t\t\tconst mapping = item.mapping;\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tmapping,\n\t\t\t\t\t\t\t\t\toriginalWithModifiedChanges:\n\t\t\t\t\t\t\t\t\t\tgutter.computeStagedValue(mapping),\n\t\t\t\t\t\t\t\t\toriginalUri: item.originalUri,\n\t\t\t\t\t\t\t\t\tmodifiedUri: item.modifiedUri,\n\t\t\t\t\t\t\t\t} satisfies DiffEditorSelectionHunkToolbarContext;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tmenuOptions: {\n\t\t\t\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tstore.add(\n\t\t\t\t\ti.onDidChangeMenuItems(() => {\n\t\t\t\t\t\tif (this._lastItemRange) {\n\t\t\t\t\t\t\tthis.layout(\n\t\t\t\t\t\t\t\tthis._lastItemRange,\n\t\t\t\t\t\t\t\tthis._lastViewRange!,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _lastItemRange: OffsetRange | undefined = undefined;\n\tprivate _lastViewRange: OffsetRange | undefined = undefined;\n\n\tlayout(itemRange: OffsetRange, viewRange: OffsetRange): void {\n\t\tthis._lastItemRange = itemRange;\n\t\tthis._lastViewRange = viewRange;\n\n\t\tlet itemHeight = this._elements.buttons.clientHeight;\n\t\tthis._isSmall.set(\n\t\t\tthis._item.get().mapping.original.startLineNumber === 1 &&\n\t\t\t\titemRange.length < 30,\n\t\t\tundefined,\n\t\t);\n\t\t// Item might have changed\n\t\titemHeight = this._elements.buttons.clientHeight;\n\n\t\tconst middleHeight = itemRange.length / 2 - itemHeight / 2;\n\n\t\tconst margin = itemHeight;\n\n\t\tlet effectiveCheckboxTop = itemRange.start + middleHeight;\n\n\t\tconst preferredViewPortRange = OffsetRange.tryCreate(\n\t\t\tmargin,\n\t\t\tviewRange.endExclusive - margin - itemHeight,\n\t\t);\n\n\t\tconst preferredParentRange = OffsetRange.tryCreate(\n\t\t\titemRange.start + margin,\n\t\t\titemRange.endExclusive - itemHeight - margin,\n\t\t);\n\n\t\tif (\n\t\t\tpreferredParentRange &&\n\t\t\tpreferredViewPortRange &&\n\t\t\tpreferredParentRange.start < preferredParentRange.endExclusive\n\t\t) {\n\t\t\teffectiveCheckboxTop =\n\t\t\t\tpreferredViewPortRange!.clip(effectiveCheckboxTop);\n\t\t\teffectiveCheckboxTop =\n\t\t\t\tpreferredParentRange!.clip(effectiveCheckboxTop);\n\t\t}\n\n\t\tthis._elements.buttons.style.top = `${effectiveCheckboxTop - itemRange.start}px`;\n\t}\n}\n\nexport interface DiffEditorSelectionHunkToolbarContext {\n\tmapping: DetailedLineRangeMapping;\n\n\t/**\n\t * The original text with the selected modified changes applied.\n\t */\n\toriginalWithModifiedChanges: string;\n\n\tmodifiedUri: URI;\n\toriginalUri: URI;\n}\n"],
  "mappings": "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",
  "names": ["reader", "c"]
}
