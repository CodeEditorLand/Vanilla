{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/features/movedBlocksLinesFeature.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h } from \"../../../../../base/browser/dom.js\";\nimport { ActionBar } from \"../../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { Action } from \"../../../../../base/common/actions.js\";\nimport {\n\tbooleanComparator,\n\tcompareBy,\n\tnumberComparator,\n\ttieBreakComparators,\n} from \"../../../../../base/common/arrays.js\";\nimport { findMaxIdx } from \"../../../../../base/common/arraysFind.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport {\n\tDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\tautorun,\n\tautorunHandleChanges,\n\tautorunWithStore,\n\tconstObservable,\n\tderived,\n\tderivedWithStore,\n\tobservableFromEvent,\n\tobservableSignalFromEvent,\n\tobservableValue,\n\trecomputeInitiallyAndOnChange,\n} from \"../../../../../base/common/observable.js\";\nimport { ThemeIcon } from \"../../../../../base/common/themables.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport type { EditorLayoutInfo } from \"../../../../common/config/editorOptions.js\";\nimport type { LineRange } from \"../../../../common/core/lineRange.js\";\nimport {\n\tOffsetRange,\n\tOffsetRangeSet,\n} from \"../../../../common/core/offsetRange.js\";\nimport type { MovedText } from \"../../../../common/diff/linesDiffComputer.js\";\nimport type { ICodeEditor } from \"../../../editorBrowser.js\";\nimport type { DiffEditorEditors } from \"../components/diffEditorEditors.js\";\nimport type { DiffEditorViewModel } from \"../diffEditorViewModel.js\";\nimport {\n\tPlaceholderViewZone,\n\tViewZoneOverlayWidget,\n\tapplyStyle,\n\tapplyViewZones,\n} from \"../utils.js\";\n\nexport class MovedBlocksLinesFeature extends Disposable {\n\tpublic static readonly movedCodeBlockPadding = 4;\n\n\tprivate readonly _element: SVGElement;\n\tprivate readonly _originalScrollTop = observableFromEvent(\n\t\tthis,\n\t\tthis._editors.original.onDidScrollChange,\n\t\t() => this._editors.original.getScrollTop(),\n\t);\n\tprivate readonly _modifiedScrollTop = observableFromEvent(\n\t\tthis,\n\t\tthis._editors.modified.onDidScrollChange,\n\t\t() => this._editors.modified.getScrollTop(),\n\t);\n\tprivate readonly _viewZonesChanged = observableSignalFromEvent(\n\t\t\"onDidChangeViewZones\",\n\t\tthis._editors.modified.onDidChangeViewZones,\n\t);\n\n\tpublic readonly width = observableValue(this, 0);\n\n\tconstructor(\n\t\tprivate readonly _rootElement: HTMLElement,\n\t\tprivate readonly _diffModel: IObservable<\n\t\t\tDiffEditorViewModel | undefined\n\t\t>,\n\t\tprivate readonly _originalEditorLayoutInfo: IObservable<EditorLayoutInfo | null>,\n\t\tprivate readonly _modifiedEditorLayoutInfo: IObservable<EditorLayoutInfo | null>,\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t) {\n\t\tsuper();\n\n\t\tthis._element = document.createElementNS(\n\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\"svg\",\n\t\t);\n\t\tthis._element.setAttribute(\"class\", \"moved-blocks-lines\");\n\t\tthis._rootElement.appendChild(this._element);\n\t\tthis._register(toDisposable(() => this._element.remove()));\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description update moved blocks lines positioning */\n\t\t\t\tconst info = this._originalEditorLayoutInfo.read(reader);\n\t\t\t\tconst info2 = this._modifiedEditorLayoutInfo.read(reader);\n\t\t\t\tif (!info || !info2) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._element.style.left = `${info.width - info.verticalScrollbarWidth}px`;\n\t\t\t\tthis._element.style.height = `${info.height}px`;\n\t\t\t\tthis._element.style.width = `${info.verticalScrollbarWidth + info.contentLeft - MovedBlocksLinesFeature.movedCodeBlockPadding + this.width.read(reader)}px`;\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._state));\n\n\t\tconst movedBlockViewZones = derived((reader) => {\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tconst d = model?.diff.read(reader);\n\t\t\tif (!d) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn d.movedTexts.map((move) => ({\n\t\t\t\tmove,\n\t\t\t\toriginal: new PlaceholderViewZone(\n\t\t\t\t\tconstObservable(\n\t\t\t\t\t\tmove.lineRangeMapping.original.startLineNumber - 1,\n\t\t\t\t\t),\n\t\t\t\t\t18,\n\t\t\t\t),\n\t\t\t\tmodified: new PlaceholderViewZone(\n\t\t\t\t\tconstObservable(\n\t\t\t\t\t\tmove.lineRangeMapping.modified.startLineNumber - 1,\n\t\t\t\t\t),\n\t\t\t\t\t18,\n\t\t\t\t),\n\t\t\t}));\n\t\t});\n\n\t\tthis._register(\n\t\t\tapplyViewZones(\n\t\t\t\tthis._editors.original,\n\t\t\t\tmovedBlockViewZones.map((zones) =>\n\t\t\t\t\t/** @description movedBlockViewZones.original */ zones.map(\n\t\t\t\t\t\t(z) => z.original,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tapplyViewZones(\n\t\t\t\tthis._editors.modified,\n\t\t\t\tmovedBlockViewZones.map((zones) =>\n\t\t\t\t\t/** @description movedBlockViewZones.modified */ zones.map(\n\t\t\t\t\t\t(z) => z.modified,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\tconst blocks = movedBlockViewZones.read(reader);\n\t\t\t\tfor (const b of blocks) {\n\t\t\t\t\tstore.add(\n\t\t\t\t\t\tnew MovedBlockOverlayWidget(\n\t\t\t\t\t\t\tthis._editors.original,\n\t\t\t\t\t\t\tb.original,\n\t\t\t\t\t\t\tb.move,\n\t\t\t\t\t\t\t\"original\",\n\t\t\t\t\t\t\tthis._diffModel.get()!,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tstore.add(\n\t\t\t\t\t\tnew MovedBlockOverlayWidget(\n\t\t\t\t\t\t\tthis._editors.modified,\n\t\t\t\t\t\t\tb.modified,\n\t\t\t\t\t\t\tb.move,\n\t\t\t\t\t\t\t\"modified\",\n\t\t\t\t\t\t\tthis._diffModel.get()!,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst originalHasFocus = observableSignalFromEvent(\n\t\t\t\"original.onDidFocusEditorWidget\",\n\t\t\t(e) =>\n\t\t\t\tthis._editors.original.onDidFocusEditorWidget(() =>\n\t\t\t\t\tsetTimeout(() => e(undefined), 0),\n\t\t\t\t),\n\t\t);\n\t\tconst modifiedHasFocus = observableSignalFromEvent(\n\t\t\t\"modified.onDidFocusEditorWidget\",\n\t\t\t(e) =>\n\t\t\t\tthis._editors.modified.onDidFocusEditorWidget(() =>\n\t\t\t\t\tsetTimeout(() => e(undefined), 0),\n\t\t\t\t),\n\t\t);\n\n\t\tlet lastChangedEditor: \"original\" | \"modified\" = \"modified\";\n\n\t\tthis._register(\n\t\t\tautorunHandleChanges(\n\t\t\t\t{\n\t\t\t\t\tcreateEmptyChangeSummary: () => undefined,\n\t\t\t\t\thandleChange: (ctx, summary) => {\n\t\t\t\t\t\tif (ctx.didChange(originalHasFocus)) {\n\t\t\t\t\t\t\tlastChangedEditor = \"original\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (ctx.didChange(modifiedHasFocus)) {\n\t\t\t\t\t\t\tlastChangedEditor = \"modified\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t(reader) => {\n\t\t\t\t\t/** @description MovedBlocksLines.setActiveMovedTextFromCursor */\n\t\t\t\t\toriginalHasFocus.read(reader);\n\t\t\t\t\tmodifiedHasFocus.read(reader);\n\n\t\t\t\t\tconst m = this._diffModel.read(reader);\n\t\t\t\t\tif (!m) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst diff = m.diff.read(reader);\n\n\t\t\t\t\tlet movedText: MovedText | undefined;\n\n\t\t\t\t\tif (diff && lastChangedEditor === \"original\") {\n\t\t\t\t\t\tconst originalPos =\n\t\t\t\t\t\t\tthis._editors.originalCursor.read(reader);\n\t\t\t\t\t\tif (originalPos) {\n\t\t\t\t\t\t\tmovedText = diff.movedTexts.find((m) =>\n\t\t\t\t\t\t\t\tm.lineRangeMapping.original.contains(\n\t\t\t\t\t\t\t\t\toriginalPos.lineNumber,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff && lastChangedEditor === \"modified\") {\n\t\t\t\t\t\tconst modifiedPos =\n\t\t\t\t\t\t\tthis._editors.modifiedCursor.read(reader);\n\t\t\t\t\t\tif (modifiedPos) {\n\t\t\t\t\t\t\tmovedText = diff.movedTexts.find((m) =>\n\t\t\t\t\t\t\t\tm.lineRangeMapping.modified.contains(\n\t\t\t\t\t\t\t\t\tmodifiedPos.lineNumber,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (movedText !== m.movedTextToCompare.get()) {\n\t\t\t\t\t\tm.movedTextToCompare.set(undefined, undefined);\n\t\t\t\t\t}\n\t\t\t\t\tm.setActiveMovedText(movedText);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate readonly _modifiedViewZonesChangedSignal =\n\t\tobservableSignalFromEvent(\n\t\t\t\"modified.onDidChangeViewZones\",\n\t\t\tthis._editors.modified.onDidChangeViewZones,\n\t\t);\n\tprivate readonly _originalViewZonesChangedSignal =\n\t\tobservableSignalFromEvent(\n\t\t\t\"original.onDidChangeViewZones\",\n\t\t\tthis._editors.original.onDidChangeViewZones,\n\t\t);\n\n\tprivate readonly _state = derivedWithStore(this, (reader, store) => {\n\t\t/** @description state */\n\n\t\tthis._element.replaceChildren();\n\t\tconst model = this._diffModel.read(reader);\n\t\tconst moves = model?.diff.read(reader)?.movedTexts;\n\t\tif (!moves || moves.length === 0) {\n\t\t\tthis.width.set(0, undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewZonesChanged.read(reader);\n\n\t\tconst infoOrig = this._originalEditorLayoutInfo.read(reader);\n\t\tconst infoMod = this._modifiedEditorLayoutInfo.read(reader);\n\t\tif (!infoOrig || !infoMod) {\n\t\t\tthis.width.set(0, undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._modifiedViewZonesChangedSignal.read(reader);\n\t\tthis._originalViewZonesChangedSignal.read(reader);\n\n\t\tconst lines = moves.map((move) => {\n\t\t\tfunction computeLineStart(range: LineRange, editor: ICodeEditor) {\n\t\t\t\tconst t1 = editor.getTopForLineNumber(\n\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t\tconst t2 = editor.getTopForLineNumber(\n\t\t\t\t\trange.endLineNumberExclusive,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t\treturn (t1 + t2) / 2;\n\t\t\t}\n\n\t\t\tconst start = computeLineStart(\n\t\t\t\tmove.lineRangeMapping.original,\n\t\t\t\tthis._editors.original,\n\t\t\t);\n\t\t\tconst startOffset = this._originalScrollTop.read(reader);\n\t\t\tconst end = computeLineStart(\n\t\t\t\tmove.lineRangeMapping.modified,\n\t\t\t\tthis._editors.modified,\n\t\t\t);\n\t\t\tconst endOffset = this._modifiedScrollTop.read(reader);\n\n\t\t\tconst from = start - startOffset;\n\t\t\tconst to = end - endOffset;\n\n\t\t\tconst top = Math.min(start, end);\n\t\t\tconst bottom = Math.max(start, end);\n\n\t\t\treturn {\n\t\t\t\trange: new OffsetRange(top, bottom),\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\tfromWithoutScroll: start,\n\t\t\t\ttoWithoutScroll: end,\n\t\t\t\tmove,\n\t\t\t};\n\t\t});\n\n\t\tlines.sort(\n\t\t\ttieBreakComparators(\n\t\t\t\tcompareBy(\n\t\t\t\t\t(l) => l.fromWithoutScroll > l.toWithoutScroll,\n\t\t\t\t\tbooleanComparator,\n\t\t\t\t),\n\t\t\t\tcompareBy(\n\t\t\t\t\t(l) =>\n\t\t\t\t\t\tl.fromWithoutScroll > l.toWithoutScroll\n\t\t\t\t\t\t\t? l.fromWithoutScroll\n\t\t\t\t\t\t\t: -l.toWithoutScroll,\n\t\t\t\t\tnumberComparator,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tconst layout = LinesLayout.compute(lines.map((l) => l.range));\n\n\t\tconst padding = 10;\n\t\tconst lineAreaLeft = infoOrig.verticalScrollbarWidth;\n\t\tconst lineAreaWidth = (layout.getTrackCount() - 1) * 10 + padding * 2;\n\t\tconst width =\n\t\t\tlineAreaLeft +\n\t\t\tlineAreaWidth +\n\t\t\t(infoMod.contentLeft -\n\t\t\t\tMovedBlocksLinesFeature.movedCodeBlockPadding);\n\n\t\tlet idx = 0;\n\t\tfor (const line of lines) {\n\t\t\tconst track = layout.getTrack(idx);\n\t\t\tconst verticalY = lineAreaLeft + padding + track * 10;\n\n\t\t\tconst arrowHeight = 15;\n\t\t\tconst arrowWidth = 15;\n\t\t\tconst right = width;\n\n\t\t\tconst rectWidth =\n\t\t\t\tinfoMod.glyphMarginWidth + infoMod.lineNumbersWidth;\n\t\t\tconst rectHeight = 18;\n\t\t\tconst rect = document.createElementNS(\n\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\"rect\",\n\t\t\t);\n\t\t\trect.classList.add(\"arrow-rectangle\");\n\t\t\trect.setAttribute(\"x\", `${right - rectWidth}`);\n\t\t\trect.setAttribute(\"y\", `${line.to - rectHeight / 2}`);\n\t\t\trect.setAttribute(\"width\", `${rectWidth}`);\n\t\t\trect.setAttribute(\"height\", `${rectHeight}`);\n\t\t\tthis._element.appendChild(rect);\n\n\t\t\tconst g = document.createElementNS(\n\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\"g\",\n\t\t\t);\n\n\t\t\tconst path = document.createElementNS(\n\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\"path\",\n\t\t\t);\n\n\t\t\tpath.setAttribute(\n\t\t\t\t\"d\",\n\t\t\t\t`M ${0} ${line.from} L ${verticalY} ${line.from} L ${verticalY} ${line.to} L ${right - arrowWidth} ${line.to}`,\n\t\t\t);\n\t\t\tpath.setAttribute(\"fill\", \"none\");\n\t\t\tg.appendChild(path);\n\n\t\t\tconst arrowRight = document.createElementNS(\n\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\"polygon\",\n\t\t\t);\n\t\t\tarrowRight.classList.add(\"arrow\");\n\n\t\t\tstore.add(\n\t\t\t\tautorun((reader) => {\n\t\t\t\t\tpath.classList.toggle(\n\t\t\t\t\t\t\"currentMove\",\n\t\t\t\t\t\tline.move === model.activeMovedText.read(reader),\n\t\t\t\t\t);\n\t\t\t\t\tarrowRight.classList.toggle(\n\t\t\t\t\t\t\"currentMove\",\n\t\t\t\t\t\tline.move === model.activeMovedText.read(reader),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tarrowRight.setAttribute(\n\t\t\t\t\"points\",\n\t\t\t\t`${right - arrowWidth},${line.to - arrowHeight / 2} ${right},${line.to} ${right - arrowWidth},${line.to + arrowHeight / 2}`,\n\t\t\t);\n\t\t\tg.appendChild(arrowRight);\n\n\t\t\tthis._element.appendChild(g);\n\n\t\t\t/*\n\t\t\tTODO@hediet\n\t\t\tpath.addEventListener('mouseenter', () => {\n\t\t\t\tmodel.setHoveredMovedText(line.move);\n\t\t\t});\n\t\t\tpath.addEventListener('mouseleave', () => {\n\t\t\t\tmodel.setHoveredMovedText(undefined);\n\t\t\t});*/\n\n\t\t\tidx++;\n\t\t}\n\n\t\tthis.width.set(lineAreaWidth, undefined);\n\t});\n}\n\nclass LinesLayout {\n\tpublic static compute(lines: OffsetRange[]): LinesLayout {\n\t\tconst setsPerTrack: OffsetRangeSet[] = [];\n\t\tconst trackPerLineIdx: number[] = [];\n\n\t\tfor (const line of lines) {\n\t\t\tlet trackIdx = setsPerTrack.findIndex(\n\t\t\t\t(set) => !set.intersectsStrict(line),\n\t\t\t);\n\t\t\tif (trackIdx === -1) {\n\t\t\t\tconst maxTrackCount = 6;\n\t\t\t\tif (setsPerTrack.length >= maxTrackCount) {\n\t\t\t\t\ttrackIdx = findMaxIdx(\n\t\t\t\t\t\tsetsPerTrack,\n\t\t\t\t\t\tcompareBy(\n\t\t\t\t\t\t\t(set) => set.intersectWithRangeLength(line),\n\t\t\t\t\t\t\tnumberComparator,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttrackIdx = setsPerTrack.length;\n\t\t\t\t\tsetsPerTrack.push(new OffsetRangeSet());\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetsPerTrack[trackIdx].addRange(line);\n\t\t\ttrackPerLineIdx.push(trackIdx);\n\t\t}\n\n\t\treturn new LinesLayout(setsPerTrack.length, trackPerLineIdx);\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly _trackCount: number,\n\t\tprivate readonly trackPerLineIdx: number[],\n\t) {}\n\n\tgetTrack(lineIdx: number): number {\n\t\treturn this.trackPerLineIdx[lineIdx];\n\t}\n\n\tgetTrackCount(): number {\n\t\treturn this._trackCount;\n\t}\n}\n\nclass MovedBlockOverlayWidget extends ViewZoneOverlayWidget {\n\tprivate readonly _nodes = h(\n\t\t\"div.diff-moved-code-block\",\n\t\t{ style: { marginRight: \"4px\" } },\n\t\t[h(\"div.text-content@textContent\"), h(\"div.action-bar@actionBar\")],\n\t);\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t_viewZone: PlaceholderViewZone,\n\t\tprivate readonly _move: MovedText,\n\t\tprivate readonly _kind: \"original\" | \"modified\",\n\t\tprivate readonly _diffModel: DiffEditorViewModel,\n\t) {\n\t\tconst root = h(\"div.diff-hidden-lines-widget\");\n\t\tsuper(_editor, _viewZone, root.root);\n\t\troot.root.appendChild(this._nodes.root);\n\n\t\tconst editorLayout = observableFromEvent(\n\t\t\tthis._editor.onDidLayoutChange,\n\t\t\t() => this._editor.getLayoutInfo(),\n\t\t);\n\n\t\tthis._register(\n\t\t\tapplyStyle(this._nodes.root, {\n\t\t\t\tpaddingRight: editorLayout.map((l) => l.verticalScrollbarWidth),\n\t\t\t}),\n\t\t);\n\n\t\tlet text: string;\n\n\t\tif (_move.changes.length > 0) {\n\t\t\ttext =\n\t\t\t\tthis._kind === \"original\"\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"codeMovedToWithChanges\",\n\t\t\t\t\t\t\t\"Code moved with changes to line {0}-{1}\",\n\t\t\t\t\t\t\tthis._move.lineRangeMapping.modified\n\t\t\t\t\t\t\t\t.startLineNumber,\n\t\t\t\t\t\t\tthis._move.lineRangeMapping.modified\n\t\t\t\t\t\t\t\t.endLineNumberExclusive - 1,\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"codeMovedFromWithChanges\",\n\t\t\t\t\t\t\t\"Code moved with changes from line {0}-{1}\",\n\t\t\t\t\t\t\tthis._move.lineRangeMapping.original\n\t\t\t\t\t\t\t\t.startLineNumber,\n\t\t\t\t\t\t\tthis._move.lineRangeMapping.original\n\t\t\t\t\t\t\t\t.endLineNumberExclusive - 1,\n\t\t\t\t\t\t);\n\t\t} else {\n\t\t\ttext =\n\t\t\t\tthis._kind === \"original\"\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"codeMovedTo\",\n\t\t\t\t\t\t\t\"Code moved to line {0}-{1}\",\n\t\t\t\t\t\t\tthis._move.lineRangeMapping.modified\n\t\t\t\t\t\t\t\t.startLineNumber,\n\t\t\t\t\t\t\tthis._move.lineRangeMapping.modified\n\t\t\t\t\t\t\t\t.endLineNumberExclusive - 1,\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"codeMovedFrom\",\n\t\t\t\t\t\t\t\"Code moved from line {0}-{1}\",\n\t\t\t\t\t\t\tthis._move.lineRangeMapping.original\n\t\t\t\t\t\t\t\t.startLineNumber,\n\t\t\t\t\t\t\tthis._move.lineRangeMapping.original\n\t\t\t\t\t\t\t\t.endLineNumberExclusive - 1,\n\t\t\t\t\t\t);\n\t\t}\n\n\t\tconst actionBar = this._register(\n\t\t\tnew ActionBar(this._nodes.actionBar, {\n\t\t\t\thighlightToggledItems: true,\n\t\t\t}),\n\t\t);\n\n\t\tconst caption = new Action(\"\", text, \"\", false);\n\t\tactionBar.push(caption, { icon: false, label: true });\n\n\t\tconst actionCompare = new Action(\n\t\t\t\"\",\n\t\t\t\"Compare\",\n\t\t\tThemeIcon.asClassName(Codicon.compareChanges),\n\t\t\ttrue,\n\t\t\t() => {\n\t\t\t\tthis._editor.focus();\n\t\t\t\tthis._diffModel.movedTextToCompare.set(\n\t\t\t\t\tthis._diffModel.movedTextToCompare.get() === _move\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: this._move,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\tconst isActive =\n\t\t\t\t\tthis._diffModel.movedTextToCompare.read(reader) === _move;\n\t\t\t\tactionCompare.checked = isActive;\n\t\t\t}),\n\t\t);\n\n\t\tactionBar.push(actionCompare, { icon: false, label: true });\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,SAAS;AAClB,SAAS,iBAAiB;AAC1B,SAAS,cAAc;AACvB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AAGzB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAKP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEA,MAAM,gCAAgC,WAAW;AAAA,EAqBvD,YACkB,cACA,YAGA,2BACA,2BACA,UAChB;AACD,UAAM;AARW;AACA;AAGA;AACA;AACA;AAIjB,SAAK,WAAW,SAAS;AAAA,MACxB;AAAA,MACA;AAAA,IACD;AACA,SAAK,SAAS,aAAa,SAAS,oBAAoB;AACxD,SAAK,aAAa,YAAY,KAAK,QAAQ;AAC3C,SAAK,UAAU,aAAa,MAAM,KAAK,SAAS,OAAO,CAAC,CAAC;AAEzD,SAAK;AAAA,MACJ,QAAQ,CAAC,WAAW;AAEnB,cAAM,OAAO,KAAK,0BAA0B,KAAK,MAAM;AACvD,cAAM,QAAQ,KAAK,0BAA0B,KAAK,MAAM;AACxD,YAAI,CAAC,QAAQ,CAAC,OAAO;AACpB;AAAA,QACD;AAEA,aAAK,SAAS,MAAM,OAAO,GAAG,KAAK,QAAQ,KAAK,sBAAsB;AACtE,aAAK,SAAS,MAAM,SAAS,GAAG,KAAK,MAAM;AAC3C,aAAK,SAAS,MAAM,QAAQ,GAAG,KAAK,yBAAyB,KAAK,cAAc,wBAAwB,wBAAwB,KAAK,MAAM,KAAK,MAAM,CAAC;AAAA,MACxJ,CAAC;AAAA,IACF;AAEA,SAAK,UAAU,8BAA8B,KAAK,MAAM,CAAC;AAEzD,UAAM,sBAAsB,QAAQ,CAAC,WAAW;AAC/C,YAAM,QAAQ,KAAK,WAAW,KAAK,MAAM;AACzC,YAAM,IAAI,OAAO,KAAK,KAAK,MAAM;AACjC,UAAI,CAAC,GAAG;AACP,eAAO,CAAC;AAAA,MACT;AACA,aAAO,EAAE,WAAW,IAAI,CAAC,UAAU;AAAA,QAClC;AAAA,QACA,UAAU,IAAI;AAAA,UACb;AAAA,YACC,KAAK,iBAAiB,SAAS,kBAAkB;AAAA,UAClD;AAAA,UACA;AAAA,QACD;AAAA,QACA,UAAU,IAAI;AAAA,UACb;AAAA,YACC,KAAK,iBAAiB,SAAS,kBAAkB;AAAA,UAClD;AAAA,UACA;AAAA,QACD;AAAA,MACD,EAAE;AAAA,IACH,CAAC;AAED,SAAK;AAAA,MACJ;AAAA,QACC,KAAK,SAAS;AAAA,QACd,oBAAoB;AAAA,UAAI,CAAC;AAAA;AAAA,YACyB,MAAM;AAAA,cACtD,CAAC,MAAM,EAAE;AAAA,YACV;AAAA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,SAAK;AAAA,MACJ;AAAA,QACC,KAAK,SAAS;AAAA,QACd,oBAAoB;AAAA,UAAI,CAAC;AAAA;AAAA,YACyB,MAAM;AAAA,cACtD,CAAC,MAAM,EAAE;AAAA,YACV;AAAA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,iBAAiB,CAAC,QAAQ,UAAU;AACnC,cAAM,SAAS,oBAAoB,KAAK,MAAM;AAC9C,mBAAW,KAAK,QAAQ;AACvB,gBAAM;AAAA,YACL,IAAI;AAAA,cACH,KAAK,SAAS;AAAA,cACd,EAAE;AAAA,cACF,EAAE;AAAA,cACF;AAAA,cACA,KAAK,WAAW,IAAI;AAAA,YACrB;AAAA,UACD;AACA,gBAAM;AAAA,YACL,IAAI;AAAA,cACH,KAAK,SAAS;AAAA,cACd,EAAE;AAAA,cACF,EAAE;AAAA,cACF;AAAA,cACA,KAAK,WAAW,IAAI;AAAA,YACrB;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,UAAM,mBAAmB;AAAA,MACxB;AAAA,MACA,CAAC,MACA,KAAK,SAAS,SAAS;AAAA,QAAuB,MAC7C,WAAW,MAAM,EAAE,MAAS,GAAG,CAAC;AAAA,MACjC;AAAA,IACF;AACA,UAAM,mBAAmB;AAAA,MACxB;AAAA,MACA,CAAC,MACA,KAAK,SAAS,SAAS;AAAA,QAAuB,MAC7C,WAAW,MAAM,EAAE,MAAS,GAAG,CAAC;AAAA,MACjC;AAAA,IACF;AAEA,QAAI,oBAA6C;AAEjD,SAAK;AAAA,MACJ;AAAA,QACC;AAAA,UACC,0BAA0B,6BAAM,QAAN;AAAA,UAC1B,cAAc,wBAAC,KAAK,YAAY;AAC/B,gBAAI,IAAI,UAAU,gBAAgB,GAAG;AACpC,kCAAoB;AAAA,YACrB;AACA,gBAAI,IAAI,UAAU,gBAAgB,GAAG;AACpC,kCAAoB;AAAA,YACrB;AACA,mBAAO;AAAA,UACR,GARc;AAAA,QASf;AAAA,QACA,CAAC,WAAW;AAEX,2BAAiB,KAAK,MAAM;AAC5B,2BAAiB,KAAK,MAAM;AAE5B,gBAAM,IAAI,KAAK,WAAW,KAAK,MAAM;AACrC,cAAI,CAAC,GAAG;AACP;AAAA,UACD;AACA,gBAAM,OAAO,EAAE,KAAK,KAAK,MAAM;AAE/B,cAAI;AAEJ,cAAI,QAAQ,sBAAsB,YAAY;AAC7C,kBAAM,cACL,KAAK,SAAS,eAAe,KAAK,MAAM;AACzC,gBAAI,aAAa;AAChB,0BAAY,KAAK,WAAW;AAAA,gBAAK,CAACA,OACjCA,GAAE,iBAAiB,SAAS;AAAA,kBAC3B,YAAY;AAAA,gBACb;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,cAAI,QAAQ,sBAAsB,YAAY;AAC7C,kBAAM,cACL,KAAK,SAAS,eAAe,KAAK,MAAM;AACzC,gBAAI,aAAa;AAChB,0BAAY,KAAK,WAAW;AAAA,gBAAK,CAACA,OACjCA,GAAE,iBAAiB,SAAS;AAAA,kBAC3B,YAAY;AAAA,gBACb;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,cAAI,cAAc,EAAE,mBAAmB,IAAI,GAAG;AAC7C,cAAE,mBAAmB,IAAI,QAAW,MAAS;AAAA,UAC9C;AACA,YAAE,mBAAmB,SAAS;AAAA,QAC/B;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EA9PD,OAoDwD;AAAA;AAAA;AAAA,EACvD,OAAuB,wBAAwB;AAAA,EAE9B;AAAA,EACA,qBAAqB;AAAA,IACrC;AAAA,IACA,KAAK,SAAS,SAAS;AAAA,IACvB,MAAM,KAAK,SAAS,SAAS,aAAa;AAAA,EAC3C;AAAA,EACiB,qBAAqB;AAAA,IACrC;AAAA,IACA,KAAK,SAAS,SAAS;AAAA,IACvB,MAAM,KAAK,SAAS,SAAS,aAAa;AAAA,EAC3C;AAAA,EACiB,oBAAoB;AAAA,IACpC;AAAA,IACA,KAAK,SAAS,SAAS;AAAA,EACxB;AAAA,EAEgB,QAAQ,gBAAgB,MAAM,CAAC;AAAA,EAyL9B,kCAChB;AAAA,IACC;AAAA,IACA,KAAK,SAAS,SAAS;AAAA,EACxB;AAAA,EACgB,kCAChB;AAAA,IACC;AAAA,IACA,KAAK,SAAS,SAAS;AAAA,EACxB;AAAA,EAEgB,SAAS,iBAAiB,MAAM,CAAC,QAAQ,UAAU;AAGnE,SAAK,SAAS,gBAAgB;AAC9B,UAAM,QAAQ,KAAK,WAAW,KAAK,MAAM;AACzC,UAAM,QAAQ,OAAO,KAAK,KAAK,MAAM,GAAG;AACxC,QAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AACjC,WAAK,MAAM,IAAI,GAAG,MAAS;AAC3B;AAAA,IACD;AAEA,SAAK,kBAAkB,KAAK,MAAM;AAElC,UAAM,WAAW,KAAK,0BAA0B,KAAK,MAAM;AAC3D,UAAM,UAAU,KAAK,0BAA0B,KAAK,MAAM;AAC1D,QAAI,CAAC,YAAY,CAAC,SAAS;AAC1B,WAAK,MAAM,IAAI,GAAG,MAAS;AAC3B;AAAA,IACD;AAEA,SAAK,gCAAgC,KAAK,MAAM;AAChD,SAAK,gCAAgC,KAAK,MAAM;AAEhD,UAAM,QAAQ,MAAM,IAAI,CAAC,SAAS;AACjC,eAAS,iBAAiB,OAAkB,QAAqB;AAChE,cAAM,KAAK,OAAO;AAAA,UACjB,MAAM;AAAA,UACN;AAAA,QACD;AACA,cAAM,KAAK,OAAO;AAAA,UACjB,MAAM;AAAA,UACN;AAAA,QACD;AACA,gBAAQ,KAAK,MAAM;AAAA,MACpB;AAVS;AAYT,YAAM,QAAQ;AAAA,QACb,KAAK,iBAAiB;AAAA,QACtB,KAAK,SAAS;AAAA,MACf;AACA,YAAM,cAAc,KAAK,mBAAmB,KAAK,MAAM;AACvD,YAAM,MAAM;AAAA,QACX,KAAK,iBAAiB;AAAA,QACtB,KAAK,SAAS;AAAA,MACf;AACA,YAAM,YAAY,KAAK,mBAAmB,KAAK,MAAM;AAErD,YAAM,OAAO,QAAQ;AACrB,YAAM,KAAK,MAAM;AAEjB,YAAM,MAAM,KAAK,IAAI,OAAO,GAAG;AAC/B,YAAM,SAAS,KAAK,IAAI,OAAO,GAAG;AAElC,aAAO;AAAA,QACN,OAAO,IAAI,YAAY,KAAK,MAAM;AAAA,QAClC;AAAA,QACA;AAAA,QACA,mBAAmB;AAAA,QACnB,iBAAiB;AAAA,QACjB;AAAA,MACD;AAAA,IACD,CAAC;AAED,UAAM;AAAA,MACL;AAAA,QACC;AAAA,UACC,CAAC,MAAM,EAAE,oBAAoB,EAAE;AAAA,UAC/B;AAAA,QACD;AAAA,QACA;AAAA,UACC,CAAC,MACA,EAAE,oBAAoB,EAAE,kBACrB,EAAE,oBACF,CAAC,EAAE;AAAA,UACP;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,UAAM,SAAS,YAAY,QAAQ,MAAM,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;AAE5D,UAAM,UAAU;AAChB,UAAM,eAAe,SAAS;AAC9B,UAAM,iBAAiB,OAAO,cAAc,IAAI,KAAK,KAAK,UAAU;AACpE,UAAM,QACL,eACA,iBACC,QAAQ,cACR,wBAAwB;AAE1B,QAAI,MAAM;AACV,eAAW,QAAQ,OAAO;AACzB,YAAM,QAAQ,OAAO,SAAS,GAAG;AACjC,YAAM,YAAY,eAAe,UAAU,QAAQ;AAEnD,YAAM,cAAc;AACpB,YAAM,aAAa;AACnB,YAAM,QAAQ;AAEd,YAAM,YACL,QAAQ,mBAAmB,QAAQ;AACpC,YAAM,aAAa;AACnB,YAAM,OAAO,SAAS;AAAA,QACrB;AAAA,QACA;AAAA,MACD;AACA,WAAK,UAAU,IAAI,iBAAiB;AACpC,WAAK,aAAa,KAAK,GAAG,QAAQ,SAAS,EAAE;AAC7C,WAAK,aAAa,KAAK,GAAG,KAAK,KAAK,aAAa,CAAC,EAAE;AACpD,WAAK,aAAa,SAAS,GAAG,SAAS,EAAE;AACzC,WAAK,aAAa,UAAU,GAAG,UAAU,EAAE;AAC3C,WAAK,SAAS,YAAY,IAAI;AAE9B,YAAM,IAAI,SAAS;AAAA,QAClB;AAAA,QACA;AAAA,MACD;AAEA,YAAM,OAAO,SAAS;AAAA,QACrB;AAAA,QACA;AAAA,MACD;AAEA,WAAK;AAAA,QACJ;AAAA,QACA,KAAK,CAAC,IAAI,KAAK,IAAI,MAAM,SAAS,IAAI,KAAK,IAAI,MAAM,SAAS,IAAI,KAAK,EAAE,MAAM,QAAQ,UAAU,IAAI,KAAK,EAAE;AAAA,MAC7G;AACA,WAAK,aAAa,QAAQ,MAAM;AAChC,QAAE,YAAY,IAAI;AAElB,YAAM,aAAa,SAAS;AAAA,QAC3B;AAAA,QACA;AAAA,MACD;AACA,iBAAW,UAAU,IAAI,OAAO;AAEhC,YAAM;AAAA,QACL,QAAQ,CAACC,YAAW;AACnB,eAAK,UAAU;AAAA,YACd;AAAA,YACA,KAAK,SAAS,MAAM,gBAAgB,KAAKA,OAAM;AAAA,UAChD;AACA,qBAAW,UAAU;AAAA,YACpB;AAAA,YACA,KAAK,SAAS,MAAM,gBAAgB,KAAKA,OAAM;AAAA,UAChD;AAAA,QACD,CAAC;AAAA,MACF;AAEA,iBAAW;AAAA,QACV;AAAA,QACA,GAAG,QAAQ,UAAU,IAAI,KAAK,KAAK,cAAc,CAAC,IAAI,KAAK,IAAI,KAAK,EAAE,IAAI,QAAQ,UAAU,IAAI,KAAK,KAAK,cAAc,CAAC;AAAA,MAC1H;AACA,QAAE,YAAY,UAAU;AAExB,WAAK,SAAS,YAAY,CAAC;AAW3B;AAAA,IACD;AAEA,SAAK,MAAM,IAAI,eAAe,MAAS;AAAA,EACxC,CAAC;AACF;AAEA,MAAM,YAAY;AAAA,EA+BT,YACU,aACA,iBAChB;AAFgB;AACA;AAAA,EACf;AAAA,EA1dJ,OAwbkB;AAAA;AAAA;AAAA,EACjB,OAAc,QAAQ,OAAmC;AACxD,UAAM,eAAiC,CAAC;AACxC,UAAM,kBAA4B,CAAC;AAEnC,eAAW,QAAQ,OAAO;AACzB,UAAI,WAAW,aAAa;AAAA,QAC3B,CAAC,QAAQ,CAAC,IAAI,iBAAiB,IAAI;AAAA,MACpC;AACA,UAAI,aAAa,IAAI;AACpB,cAAM,gBAAgB;AACtB,YAAI,aAAa,UAAU,eAAe;AACzC,qBAAW;AAAA,YACV;AAAA,YACA;AAAA,cACC,CAAC,QAAQ,IAAI,yBAAyB,IAAI;AAAA,cAC1C;AAAA,YACD;AAAA,UACD;AAAA,QACD,OAAO;AACN,qBAAW,aAAa;AACxB,uBAAa,KAAK,IAAI,eAAe,CAAC;AAAA,QACvC;AAAA,MACD;AACA,mBAAa,QAAQ,EAAE,SAAS,IAAI;AACpC,sBAAgB,KAAK,QAAQ;AAAA,IAC9B;AAEA,WAAO,IAAI,YAAY,aAAa,QAAQ,eAAe;AAAA,EAC5D;AAAA,EAOA,SAAS,SAAyB;AACjC,WAAO,KAAK,gBAAgB,OAAO;AAAA,EACpC;AAAA,EAEA,gBAAwB;AACvB,WAAO,KAAK;AAAA,EACb;AACD;AAEA,MAAM,gCAAgC,sBAAsB;AAAA,EAO3D,YACkB,SACjB,WACiB,OACA,OACA,YAChB;AACD,UAAM,OAAO,EAAE,8BAA8B;AAC7C,UAAM,SAAS,WAAW,KAAK,IAAI;AAPlB;AAEA;AACA;AACA;AAIjB,SAAK,KAAK,YAAY,KAAK,OAAO,IAAI;AAEtC,UAAM,eAAe;AAAA,MACpB,KAAK,QAAQ;AAAA,MACb,MAAM,KAAK,QAAQ,cAAc;AAAA,IAClC;AAEA,SAAK;AAAA,MACJ,WAAW,KAAK,OAAO,MAAM;AAAA,QAC5B,cAAc,aAAa,IAAI,CAAC,MAAM,EAAE,sBAAsB;AAAA,MAC/D,CAAC;AAAA,IACF;AAEA,QAAI;AAEJ,QAAI,MAAM,QAAQ,SAAS,GAAG;AAC7B,aACC,KAAK,UAAU,aACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK,MAAM,iBAAiB,SAC1B;AAAA,QACF,KAAK,MAAM,iBAAiB,SAC1B,yBAAyB;AAAA,MAC5B,IACC;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK,MAAM,iBAAiB,SAC1B;AAAA,QACF,KAAK,MAAM,iBAAiB,SAC1B,yBAAyB;AAAA,MAC5B;AAAA,IACJ,OAAO;AACN,aACC,KAAK,UAAU,aACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK,MAAM,iBAAiB,SAC1B;AAAA,QACF,KAAK,MAAM,iBAAiB,SAC1B,yBAAyB;AAAA,MAC5B,IACC;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK,MAAM,iBAAiB,SAC1B;AAAA,QACF,KAAK,MAAM,iBAAiB,SAC1B,yBAAyB;AAAA,MAC5B;AAAA,IACJ;AAEA,UAAM,YAAY,KAAK;AAAA,MACtB,IAAI,UAAU,KAAK,OAAO,WAAW;AAAA,QACpC,uBAAuB;AAAA,MACxB,CAAC;AAAA,IACF;AAEA,UAAM,UAAU,IAAI,OAAO,IAAI,MAAM,IAAI,KAAK;AAC9C,cAAU,KAAK,SAAS,EAAE,MAAM,OAAO,OAAO,KAAK,CAAC;AAEpD,UAAM,gBAAgB,IAAI;AAAA,MACzB;AAAA,MACA;AAAA,MACA,UAAU,YAAY,QAAQ,cAAc;AAAA,MAC5C;AAAA,MACA,MAAM;AACL,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,mBAAmB;AAAA,UAClC,KAAK,WAAW,mBAAmB,IAAI,MAAM,QAC1C,SACA,KAAK;AAAA,UACR;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,SAAK;AAAA,MACJ,QAAQ,CAAC,WAAW;AACnB,cAAM,WACL,KAAK,WAAW,mBAAmB,KAAK,MAAM,MAAM;AACrD,sBAAc,UAAU;AAAA,MACzB,CAAC;AAAA,IACF;AAEA,cAAU,KAAK,eAAe,EAAE,MAAM,OAAO,OAAO,KAAK,CAAC;AAAA,EAC3D;AAAA,EA7kBD,OAqe4D;AAAA;AAAA;AAAA,EAC1C,SAAS;AAAA,IACzB;AAAA,IACA,EAAE,OAAO,EAAE,aAAa,MAAM,EAAE;AAAA,IAChC,CAAC,EAAE,8BAA8B,GAAG,EAAE,0BAA0B,CAAC;AAAA,EAClE;AAoGD;",
  "names": ["m", "reader"]
}
