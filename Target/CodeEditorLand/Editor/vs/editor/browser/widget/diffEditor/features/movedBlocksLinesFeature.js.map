{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/features/movedBlocksLinesFeature.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h } from '../../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../../base/common/actions.js';\nimport { booleanComparator, compareBy, numberComparator, tieBreakComparators } from '../../../../../base/common/arrays.js';\nimport { findMaxIdx } from '../../../../../base/common/arraysFind.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, autorun, autorunHandleChanges, autorunWithStore, constObservable, derived, derivedWithStore, observableFromEvent, observableSignalFromEvent, observableValue, recomputeInitiallyAndOnChange } from '../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { ICodeEditor } from '../../../editorBrowser.js';\nimport { DiffEditorEditors } from '../components/diffEditorEditors.js';\nimport { DiffEditorViewModel } from '../diffEditorViewModel.js';\nimport { PlaceholderViewZone, ViewZoneOverlayWidget, applyStyle, applyViewZones } from '../utils.js';\nimport { EditorLayoutInfo } from '../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../common/core/lineRange.js';\nimport { OffsetRange, OffsetRangeSet } from '../../../../common/core/offsetRange.js';\nimport { MovedText } from '../../../../common/diff/linesDiffComputer.js';\nimport { localize } from '../../../../../nls.js';\n\nexport class MovedBlocksLinesFeature extends Disposable {\n\tpublic static readonly movedCodeBlockPadding = 4;\n\n\tprivate readonly _element: SVGElement;\n\tprivate readonly _originalScrollTop = observableFromEvent(this, this._editors.original.onDidScrollChange, () => this._editors.original.getScrollTop());\n\tprivate readonly _modifiedScrollTop = observableFromEvent(this, this._editors.modified.onDidScrollChange, () => this._editors.modified.getScrollTop());\n\tprivate readonly _viewZonesChanged = observableSignalFromEvent('onDidChangeViewZones', this._editors.modified.onDidChangeViewZones);\n\n\tpublic readonly width = observableValue(this, 0);\n\n\tconstructor(\n\t\tprivate readonly _rootElement: HTMLElement,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _originalEditorLayoutInfo: IObservable<EditorLayoutInfo | null>,\n\t\tprivate readonly _modifiedEditorLayoutInfo: IObservable<EditorLayoutInfo | null>,\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t) {\n\t\tsuper();\n\n\t\tthis._element = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\t\tthis._element.setAttribute('class', 'moved-blocks-lines');\n\t\tthis._rootElement.appendChild(this._element);\n\t\tthis._register(toDisposable(() => this._element.remove()));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update moved blocks lines positioning */\n\t\t\tconst info = this._originalEditorLayoutInfo.read(reader);\n\t\t\tconst info2 = this._modifiedEditorLayoutInfo.read(reader);\n\t\t\tif (!info || !info2) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._element.style.left = `${info.width - info.verticalScrollbarWidth}px`;\n\t\t\tthis._element.style.height = `${info.height}px`;\n\t\t\tthis._element.style.width = `${info.verticalScrollbarWidth + info.contentLeft - MovedBlocksLinesFeature.movedCodeBlockPadding + this.width.read(reader)}px`;\n\t\t}));\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._state));\n\n\t\tconst movedBlockViewZones = derived(reader => {\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tconst d = model?.diff.read(reader);\n\t\t\tif (!d) { return []; }\n\t\t\treturn d.movedTexts.map(move => ({\n\t\t\t\tmove,\n\t\t\t\toriginal: new PlaceholderViewZone(constObservable(move.lineRangeMapping.original.startLineNumber - 1), 18),\n\t\t\t\tmodified: new PlaceholderViewZone(constObservable(move.lineRangeMapping.modified.startLineNumber - 1), 18),\n\t\t\t}));\n\t\t});\n\n\t\tthis._register(applyViewZones(this._editors.original, movedBlockViewZones.map(zones => /** @description movedBlockViewZones.original */ zones.map(z => z.original))));\n\t\tthis._register(applyViewZones(this._editors.modified, movedBlockViewZones.map(zones => /** @description movedBlockViewZones.modified */ zones.map(z => z.modified))));\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tconst blocks = movedBlockViewZones.read(reader);\n\t\t\tfor (const b of blocks) {\n\t\t\t\tstore.add(new MovedBlockOverlayWidget(this._editors.original, b.original, b.move, 'original', this._diffModel.get()!));\n\t\t\t\tstore.add(new MovedBlockOverlayWidget(this._editors.modified, b.modified, b.move, 'modified', this._diffModel.get()!));\n\t\t\t}\n\t\t}));\n\n\t\tconst originalHasFocus = observableSignalFromEvent(\n\t\t\t'original.onDidFocusEditorWidget',\n\t\t\te => this._editors.original.onDidFocusEditorWidget(() => setTimeout(() => e(undefined), 0))\n\t\t);\n\t\tconst modifiedHasFocus = observableSignalFromEvent(\n\t\t\t'modified.onDidFocusEditorWidget',\n\t\t\te => this._editors.modified.onDidFocusEditorWidget(() => setTimeout(() => e(undefined), 0))\n\t\t);\n\n\t\tlet lastChangedEditor: 'original' | 'modified' = 'modified';\n\n\t\tthis._register(autorunHandleChanges({\n\t\t\tcreateEmptyChangeSummary: () => undefined,\n\t\t\thandleChange: (ctx, summary) => {\n\t\t\t\tif (ctx.didChange(originalHasFocus)) { lastChangedEditor = 'original'; }\n\t\t\t\tif (ctx.didChange(modifiedHasFocus)) { lastChangedEditor = 'modified'; }\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, reader => {\n\t\t\t/** @description MovedBlocksLines.setActiveMovedTextFromCursor */\n\t\t\toriginalHasFocus.read(reader);\n\t\t\tmodifiedHasFocus.read(reader);\n\n\t\t\tconst m = this._diffModel.read(reader);\n\t\t\tif (!m) { return; }\n\t\t\tconst diff = m.diff.read(reader);\n\n\t\t\tlet movedText: MovedText | undefined = undefined;\n\n\t\t\tif (diff && lastChangedEditor === 'original') {\n\t\t\t\tconst originalPos = this._editors.originalCursor.read(reader);\n\t\t\t\tif (originalPos) {\n\t\t\t\t\tmovedText = diff.movedTexts.find(m => m.lineRangeMapping.original.contains(originalPos.lineNumber));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (diff && lastChangedEditor === 'modified') {\n\t\t\t\tconst modifiedPos = this._editors.modifiedCursor.read(reader);\n\t\t\t\tif (modifiedPos) {\n\t\t\t\t\tmovedText = diff.movedTexts.find(m => m.lineRangeMapping.modified.contains(modifiedPos.lineNumber));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (movedText !== m.movedTextToCompare.get()) {\n\t\t\t\tm.movedTextToCompare.set(undefined, undefined);\n\t\t\t}\n\t\t\tm.setActiveMovedText(movedText);\n\t\t}));\n\t}\n\n\tprivate readonly _modifiedViewZonesChangedSignal = observableSignalFromEvent('modified.onDidChangeViewZones', this._editors.modified.onDidChangeViewZones);\n\tprivate readonly _originalViewZonesChangedSignal = observableSignalFromEvent('original.onDidChangeViewZones', this._editors.original.onDidChangeViewZones);\n\n\tprivate readonly _state = derivedWithStore(this, (reader, store) => {\n\t\t/** @description state */\n\n\t\tthis._element.replaceChildren();\n\t\tconst model = this._diffModel.read(reader);\n\t\tconst moves = model?.diff.read(reader)?.movedTexts;\n\t\tif (!moves || moves.length === 0) {\n\t\t\tthis.width.set(0, undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewZonesChanged.read(reader);\n\n\t\tconst infoOrig = this._originalEditorLayoutInfo.read(reader);\n\t\tconst infoMod = this._modifiedEditorLayoutInfo.read(reader);\n\t\tif (!infoOrig || !infoMod) {\n\t\t\tthis.width.set(0, undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._modifiedViewZonesChangedSignal.read(reader);\n\t\tthis._originalViewZonesChangedSignal.read(reader);\n\n\t\tconst lines = moves.map((move) => {\n\t\t\tfunction computeLineStart(range: LineRange, editor: ICodeEditor) {\n\t\t\t\tconst t1 = editor.getTopForLineNumber(range.startLineNumber, true);\n\t\t\t\tconst t2 = editor.getTopForLineNumber(range.endLineNumberExclusive, true);\n\t\t\t\treturn (t1 + t2) / 2;\n\t\t\t}\n\n\t\t\tconst start = computeLineStart(move.lineRangeMapping.original, this._editors.original);\n\t\t\tconst startOffset = this._originalScrollTop.read(reader);\n\t\t\tconst end = computeLineStart(move.lineRangeMapping.modified, this._editors.modified);\n\t\t\tconst endOffset = this._modifiedScrollTop.read(reader);\n\n\t\t\tconst from = start - startOffset;\n\t\t\tconst to = end - endOffset;\n\n\t\t\tconst top = Math.min(start, end);\n\t\t\tconst bottom = Math.max(start, end);\n\n\t\t\treturn { range: new OffsetRange(top, bottom), from, to, fromWithoutScroll: start, toWithoutScroll: end, move };\n\t\t});\n\n\t\tlines.sort(tieBreakComparators(\n\t\t\tcompareBy(l => l.fromWithoutScroll > l.toWithoutScroll, booleanComparator),\n\t\t\tcompareBy(l => l.fromWithoutScroll > l.toWithoutScroll ? l.fromWithoutScroll : -l.toWithoutScroll, numberComparator)\n\t\t));\n\n\t\tconst layout = LinesLayout.compute(lines.map(l => l.range));\n\n\t\tconst padding = 10;\n\t\tconst lineAreaLeft = infoOrig.verticalScrollbarWidth;\n\t\tconst lineAreaWidth = (layout.getTrackCount() - 1) * 10 + padding * 2;\n\t\tconst width = lineAreaLeft + lineAreaWidth + (infoMod.contentLeft - MovedBlocksLinesFeature.movedCodeBlockPadding);\n\n\t\tlet idx = 0;\n\t\tfor (const line of lines) {\n\t\t\tconst track = layout.getTrack(idx);\n\t\t\tconst verticalY = lineAreaLeft + padding + track * 10;\n\n\t\t\tconst arrowHeight = 15;\n\t\t\tconst arrowWidth = 15;\n\t\t\tconst right = width;\n\n\t\t\tconst rectWidth = infoMod.glyphMarginWidth + infoMod.lineNumbersWidth;\n\t\t\tconst rectHeight = 18;\n\t\t\tconst rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n\t\t\trect.classList.add('arrow-rectangle');\n\t\t\trect.setAttribute('x', `${right - rectWidth}`);\n\t\t\trect.setAttribute('y', `${line.to - rectHeight / 2}`);\n\t\t\trect.setAttribute('width', `${rectWidth}`);\n\t\t\trect.setAttribute('height', `${rectHeight}`);\n\t\t\tthis._element.appendChild(rect);\n\n\t\t\tconst g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n\n\t\t\tconst path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n\t\t\tpath.setAttribute('d', `M ${0} ${line.from} L ${verticalY} ${line.from} L ${verticalY} ${line.to} L ${right - arrowWidth} ${line.to}`);\n\t\t\tpath.setAttribute('fill', 'none');\n\t\t\tg.appendChild(path);\n\n\t\t\tconst arrowRight = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n\t\t\tarrowRight.classList.add('arrow');\n\n\t\t\tstore.add(autorun(reader => {\n\t\t\t\tpath.classList.toggle('currentMove', line.move === model.activeMovedText.read(reader));\n\t\t\t\tarrowRight.classList.toggle('currentMove', line.move === model.activeMovedText.read(reader));\n\t\t\t}));\n\n\t\t\tarrowRight.setAttribute('points', `${right - arrowWidth},${line.to - arrowHeight / 2} ${right},${line.to} ${right - arrowWidth},${line.to + arrowHeight / 2}`);\n\t\t\tg.appendChild(arrowRight);\n\n\t\t\tthis._element.appendChild(g);\n\n\t\t\t/*\n\t\t\tTODO@hediet\n\t\t\tpath.addEventListener('mouseenter', () => {\n\t\t\t\tmodel.setHoveredMovedText(line.move);\n\t\t\t});\n\t\t\tpath.addEventListener('mouseleave', () => {\n\t\t\t\tmodel.setHoveredMovedText(undefined);\n\t\t\t});*/\n\n\t\t\tidx++;\n\t\t}\n\n\t\tthis.width.set(lineAreaWidth, undefined);\n\t});\n}\n\nclass LinesLayout {\n\tpublic static compute(lines: OffsetRange[]): LinesLayout {\n\t\tconst setsPerTrack: OffsetRangeSet[] = [];\n\t\tconst trackPerLineIdx: number[] = [];\n\n\t\tfor (const line of lines) {\n\t\t\tlet trackIdx = setsPerTrack.findIndex(set => !set.intersectsStrict(line));\n\t\t\tif (trackIdx === -1) {\n\t\t\t\tconst maxTrackCount = 6;\n\t\t\t\tif (setsPerTrack.length >= maxTrackCount) {\n\t\t\t\t\ttrackIdx = findMaxIdx(setsPerTrack, compareBy(set => set.intersectWithRangeLength(line), numberComparator));\n\t\t\t\t} else {\n\t\t\t\t\ttrackIdx = setsPerTrack.length;\n\t\t\t\t\tsetsPerTrack.push(new OffsetRangeSet());\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetsPerTrack[trackIdx].addRange(line);\n\t\t\ttrackPerLineIdx.push(trackIdx);\n\t\t}\n\n\t\treturn new LinesLayout(setsPerTrack.length, trackPerLineIdx);\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly _trackCount: number,\n\t\tprivate readonly trackPerLineIdx: number[]\n\t) { }\n\n\tgetTrack(lineIdx: number): number {\n\t\treturn this.trackPerLineIdx[lineIdx];\n\t}\n\n\tgetTrackCount(): number {\n\t\treturn this._trackCount;\n\t}\n}\n\nclass MovedBlockOverlayWidget extends ViewZoneOverlayWidget {\n\tprivate readonly _nodes = h('div.diff-moved-code-block', { style: { marginRight: '4px' } }, [\n\t\th('div.text-content@textContent'),\n\t\th('div.action-bar@actionBar'),\n\t]);\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t_viewZone: PlaceholderViewZone,\n\t\tprivate readonly _move: MovedText,\n\t\tprivate readonly _kind: 'original' | 'modified',\n\t\tprivate readonly _diffModel: DiffEditorViewModel,\n\t) {\n\t\tconst root = h('div.diff-hidden-lines-widget');\n\t\tsuper(_editor, _viewZone, root.root);\n\t\troot.root.appendChild(this._nodes.root);\n\n\t\tconst editorLayout = observableFromEvent(this._editor.onDidLayoutChange, () => this._editor.getLayoutInfo());\n\n\t\tthis._register(applyStyle(this._nodes.root, {\n\t\t\tpaddingRight: editorLayout.map(l => l.verticalScrollbarWidth)\n\t\t}));\n\n\t\tlet text: string;\n\n\t\tif (_move.changes.length > 0) {\n\t\t\ttext = this._kind === 'original' ? localize(\n\t\t\t\t'codeMovedToWithChanges',\n\t\t\t\t'Code moved with changes to line {0}-{1}',\n\t\t\t\tthis._move.lineRangeMapping.modified.startLineNumber,\n\t\t\t\tthis._move.lineRangeMapping.modified.endLineNumberExclusive - 1,\n\t\t\t) : localize(\n\t\t\t\t'codeMovedFromWithChanges',\n\t\t\t\t'Code moved with changes from line {0}-{1}',\n\t\t\t\tthis._move.lineRangeMapping.original.startLineNumber,\n\t\t\t\tthis._move.lineRangeMapping.original.endLineNumberExclusive - 1,\n\t\t\t);\n\t\t} else {\n\t\t\ttext = this._kind === 'original' ? localize(\n\t\t\t\t'codeMovedTo',\n\t\t\t\t'Code moved to line {0}-{1}',\n\t\t\t\tthis._move.lineRangeMapping.modified.startLineNumber,\n\t\t\t\tthis._move.lineRangeMapping.modified.endLineNumberExclusive - 1,\n\t\t\t) : localize(\n\t\t\t\t'codeMovedFrom',\n\t\t\t\t'Code moved from line {0}-{1}',\n\t\t\t\tthis._move.lineRangeMapping.original.startLineNumber,\n\t\t\t\tthis._move.lineRangeMapping.original.endLineNumberExclusive - 1,\n\t\t\t);\n\t\t}\n\n\t\tconst actionBar = this._register(new ActionBar(this._nodes.actionBar, {\n\t\t\thighlightToggledItems: true,\n\t\t}));\n\n\t\tconst caption = new Action(\n\t\t\t'',\n\t\t\ttext,\n\t\t\t'',\n\t\t\tfalse,\n\t\t);\n\t\tactionBar.push(caption, { icon: false, label: true });\n\n\t\tconst actionCompare = new Action(\n\t\t\t'',\n\t\t\t'Compare',\n\t\t\tThemeIcon.asClassName(Codicon.compareChanges),\n\t\t\ttrue,\n\t\t\t() => {\n\t\t\t\tthis._editor.focus();\n\t\t\t\tthis._diffModel.movedTextToCompare.set(this._diffModel.movedTextToCompare.get() === _move ? undefined : this._move, undefined);\n\t\t\t},\n\t\t);\n\t\tthis._register(autorun(reader => {\n\t\t\tconst isActive = this._diffModel.movedTextToCompare.read(reader) === _move;\n\t\t\tactionCompare.checked = isActive;\n\t\t}));\n\n\t\tactionBar.push(actionCompare, { icon: false, label: true });\n\t}\n}\n"],
  "mappings": "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",
  "names": ["m", "reader"]
}
