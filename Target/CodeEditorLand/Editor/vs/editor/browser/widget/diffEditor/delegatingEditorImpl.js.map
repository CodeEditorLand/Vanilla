{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/delegatingEditorImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport type { IEditorOptions } from \"../../../common/config/editorOptions.js\";\nimport type { IDimension } from \"../../../common/core/dimension.js\";\nimport type { IPosition, Position } from \"../../../common/core/position.js\";\nimport type { IRange, Range } from \"../../../common/core/range.js\";\nimport type { ISelection, Selection } from \"../../../common/core/selection.js\";\nimport {\n\ttype IDiffEditorViewModel,\n\ttype IEditor,\n\ttype IEditorAction,\n\ttype IEditorDecorationsCollection,\n\ttype IEditorModel,\n\ttype IEditorViewState,\n\tScrollType,\n} from \"../../../common/editorCommon.js\";\nimport type {\n\tIModelDecorationsChangeAccessor,\n\tIModelDeltaDecoration,\n} from \"../../../common/model.js\";\nimport type { CodeEditorWidget } from \"../codeEditor/codeEditorWidget.js\";\n\nexport abstract class DelegatingEditor extends Disposable implements IEditor {\n\tprivate static idCounter = 0;\n\tprivate readonly _id = ++DelegatingEditor.idCounter;\n\n\tprivate readonly _onDidDispose = this._register(new Emitter<void>());\n\tpublic readonly onDidDispose = this._onDidDispose.event;\n\n\tprotected abstract get _targetEditor(): CodeEditorWidget;\n\n\tgetId(): string {\n\t\treturn this.getEditorType() + \":v2:\" + this._id;\n\t}\n\n\tabstract getEditorType(): string;\n\tabstract updateOptions(newOptions: IEditorOptions): void;\n\tabstract onVisible(): void;\n\tabstract onHide(): void;\n\tabstract layout(dimension?: IDimension | undefined): void;\n\tabstract hasTextFocus(): boolean;\n\tabstract saveViewState(): IEditorViewState | null;\n\tabstract restoreViewState(state: IEditorViewState | null): void;\n\tabstract getModel(): IEditorModel | null;\n\tabstract setModel(model: IEditorModel | null | IDiffEditorViewModel): void;\n\n\t// #region editorBrowser.IDiffEditor: Delegating to modified Editor\n\n\tpublic getVisibleColumnFromPosition(position: IPosition): number {\n\t\treturn this._targetEditor.getVisibleColumnFromPosition(position);\n\t}\n\n\tpublic getStatusbarColumn(position: IPosition): number {\n\t\treturn this._targetEditor.getStatusbarColumn(position);\n\t}\n\n\tpublic getPosition(): Position | null {\n\t\treturn this._targetEditor.getPosition();\n\t}\n\n\tpublic setPosition(position: IPosition, source = \"api\"): void {\n\t\tthis._targetEditor.setPosition(position, source);\n\t}\n\n\tpublic revealLine(\n\t\tlineNumber: number,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealLine(lineNumber, scrollType);\n\t}\n\n\tpublic revealLineInCenter(\n\t\tlineNumber: number,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealLineInCenter(lineNumber, scrollType);\n\t}\n\n\tpublic revealLineInCenterIfOutsideViewport(\n\t\tlineNumber: number,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealLineInCenterIfOutsideViewport(\n\t\t\tlineNumber,\n\t\t\tscrollType,\n\t\t);\n\t}\n\n\tpublic revealLineNearTop(\n\t\tlineNumber: number,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealLineNearTop(lineNumber, scrollType);\n\t}\n\n\tpublic revealPosition(\n\t\tposition: IPosition,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealPosition(position, scrollType);\n\t}\n\n\tpublic revealPositionInCenter(\n\t\tposition: IPosition,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealPositionInCenter(position, scrollType);\n\t}\n\n\tpublic revealPositionInCenterIfOutsideViewport(\n\t\tposition: IPosition,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealPositionInCenterIfOutsideViewport(\n\t\t\tposition,\n\t\t\tscrollType,\n\t\t);\n\t}\n\n\tpublic revealPositionNearTop(\n\t\tposition: IPosition,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealPositionNearTop(position, scrollType);\n\t}\n\n\tpublic getSelection(): Selection | null {\n\t\treturn this._targetEditor.getSelection();\n\t}\n\n\tpublic getSelections(): Selection[] | null {\n\t\treturn this._targetEditor.getSelections();\n\t}\n\n\tpublic setSelection(range: IRange, source?: string): void;\n\tpublic setSelection(editorRange: Range, source?: string): void;\n\tpublic setSelection(selection: ISelection, source?: string): void;\n\tpublic setSelection(editorSelection: Selection, source?: string): void;\n\tpublic setSelection(something: any, source = \"api\"): void {\n\t\tthis._targetEditor.setSelection(something, source);\n\t}\n\n\tpublic setSelections(ranges: readonly ISelection[], source = \"api\"): void {\n\t\tthis._targetEditor.setSelections(ranges, source);\n\t}\n\n\tpublic revealLines(\n\t\tstartLineNumber: number,\n\t\tendLineNumber: number,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealLines(\n\t\t\tstartLineNumber,\n\t\t\tendLineNumber,\n\t\t\tscrollType,\n\t\t);\n\t}\n\n\tpublic revealLinesInCenter(\n\t\tstartLineNumber: number,\n\t\tendLineNumber: number,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealLinesInCenter(\n\t\t\tstartLineNumber,\n\t\t\tendLineNumber,\n\t\t\tscrollType,\n\t\t);\n\t}\n\n\tpublic revealLinesInCenterIfOutsideViewport(\n\t\tstartLineNumber: number,\n\t\tendLineNumber: number,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealLinesInCenterIfOutsideViewport(\n\t\t\tstartLineNumber,\n\t\t\tendLineNumber,\n\t\t\tscrollType,\n\t\t);\n\t}\n\n\tpublic revealLinesNearTop(\n\t\tstartLineNumber: number,\n\t\tendLineNumber: number,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealLinesNearTop(\n\t\t\tstartLineNumber,\n\t\t\tendLineNumber,\n\t\t\tscrollType,\n\t\t);\n\t}\n\n\tpublic revealRange(\n\t\trange: IRange,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t\trevealVerticalInCenter = false,\n\t\trevealHorizontal = true,\n\t): void {\n\t\tthis._targetEditor.revealRange(\n\t\t\trange,\n\t\t\tscrollType,\n\t\t\trevealVerticalInCenter,\n\t\t\trevealHorizontal,\n\t\t);\n\t}\n\n\tpublic revealRangeInCenter(\n\t\trange: IRange,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealRangeInCenter(range, scrollType);\n\t}\n\n\tpublic revealRangeInCenterIfOutsideViewport(\n\t\trange: IRange,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealRangeInCenterIfOutsideViewport(\n\t\t\trange,\n\t\t\tscrollType,\n\t\t);\n\t}\n\n\tpublic revealRangeNearTop(\n\t\trange: IRange,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealRangeNearTop(range, scrollType);\n\t}\n\n\tpublic revealRangeNearTopIfOutsideViewport(\n\t\trange: IRange,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealRangeNearTopIfOutsideViewport(\n\t\t\trange,\n\t\t\tscrollType,\n\t\t);\n\t}\n\n\tpublic revealRangeAtTop(\n\t\trange: IRange,\n\t\tscrollType: ScrollType = ScrollType.Smooth,\n\t): void {\n\t\tthis._targetEditor.revealRangeAtTop(range, scrollType);\n\t}\n\n\tpublic getSupportedActions(): IEditorAction[] {\n\t\treturn this._targetEditor.getSupportedActions();\n\t}\n\n\tpublic focus(): void {\n\t\tthis._targetEditor.focus();\n\t}\n\n\tpublic trigger(\n\t\tsource: string | null | undefined,\n\t\thandlerId: string,\n\t\tpayload: any,\n\t): void {\n\t\tthis._targetEditor.trigger(source, handlerId, payload);\n\t}\n\n\tpublic createDecorationsCollection(\n\t\tdecorations?: IModelDeltaDecoration[],\n\t): IEditorDecorationsCollection {\n\t\treturn this._targetEditor.createDecorationsCollection(decorations);\n\t}\n\n\tpublic changeDecorations(\n\t\tcallback: (changeAccessor: IModelDecorationsChangeAccessor) => any,\n\t): any {\n\t\treturn this._targetEditor.changeDecorations(callback);\n\t}\n\n\t// #endregion\n}\n"],
  "mappings": "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",
  "names": []
}
