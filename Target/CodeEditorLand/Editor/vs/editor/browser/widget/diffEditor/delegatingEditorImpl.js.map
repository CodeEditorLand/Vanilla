{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/delegatingEditorImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { CodeEditorWidget } from '../codeEditor/codeEditorWidget.js';\nimport { IEditorOptions } from '../../../common/config/editorOptions.js';\nimport { IDimension } from '../../../common/core/dimension.js';\nimport { IPosition, Position } from '../../../common/core/position.js';\nimport { IRange, Range } from '../../../common/core/range.js';\nimport { ISelection, Selection } from '../../../common/core/selection.js';\nimport { IDiffEditorViewModel, IEditor, IEditorAction, IEditorDecorationsCollection, IEditorModel, IEditorViewState, ScrollType } from '../../../common/editorCommon.js';\nimport { IModelDecorationsChangeAccessor, IModelDeltaDecoration } from '../../../common/model.js';\n\nexport abstract class DelegatingEditor extends Disposable implements IEditor {\n\tprivate static idCounter = 0;\n\tprivate readonly _id = ++DelegatingEditor.idCounter;\n\n\tprivate readonly _onDidDispose = this._register(new Emitter<void>());\n\tpublic readonly onDidDispose = this._onDidDispose.event;\n\n\tprotected abstract get _targetEditor(): CodeEditorWidget;\n\n\tgetId(): string { return this.getEditorType() + ':v2:' + this._id; }\n\n\tabstract getEditorType(): string;\n\tabstract updateOptions(newOptions: IEditorOptions): void;\n\tabstract onVisible(): void;\n\tabstract onHide(): void;\n\tabstract layout(dimension?: IDimension | undefined): void;\n\tabstract hasTextFocus(): boolean;\n\tabstract saveViewState(): IEditorViewState | null;\n\tabstract restoreViewState(state: IEditorViewState | null): void;\n\tabstract getModel(): IEditorModel | null;\n\tabstract setModel(model: IEditorModel | null | IDiffEditorViewModel): void;\n\n\t// #region editorBrowser.IDiffEditor: Delegating to modified Editor\n\n\tpublic getVisibleColumnFromPosition(position: IPosition): number {\n\t\treturn this._targetEditor.getVisibleColumnFromPosition(position);\n\t}\n\n\tpublic getStatusbarColumn(position: IPosition): number {\n\t\treturn this._targetEditor.getStatusbarColumn(position);\n\t}\n\n\tpublic getPosition(): Position | null {\n\t\treturn this._targetEditor.getPosition();\n\t}\n\n\tpublic setPosition(position: IPosition, source: string = 'api'): void {\n\t\tthis._targetEditor.setPosition(position, source);\n\t}\n\n\tpublic revealLine(lineNumber: number, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealLine(lineNumber, scrollType);\n\t}\n\n\tpublic revealLineInCenter(lineNumber: number, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealLineInCenter(lineNumber, scrollType);\n\t}\n\n\tpublic revealLineInCenterIfOutsideViewport(lineNumber: number, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n\t}\n\n\tpublic revealLineNearTop(lineNumber: number, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealLineNearTop(lineNumber, scrollType);\n\t}\n\n\tpublic revealPosition(position: IPosition, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealPosition(position, scrollType);\n\t}\n\n\tpublic revealPositionInCenter(position: IPosition, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealPositionInCenter(position, scrollType);\n\t}\n\n\tpublic revealPositionInCenterIfOutsideViewport(position: IPosition, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n\t}\n\n\tpublic revealPositionNearTop(position: IPosition, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealPositionNearTop(position, scrollType);\n\t}\n\n\tpublic getSelection(): Selection | null {\n\t\treturn this._targetEditor.getSelection();\n\t}\n\n\tpublic getSelections(): Selection[] | null {\n\t\treturn this._targetEditor.getSelections();\n\t}\n\n\tpublic setSelection(range: IRange, source?: string): void;\n\tpublic setSelection(editorRange: Range, source?: string): void;\n\tpublic setSelection(selection: ISelection, source?: string): void;\n\tpublic setSelection(editorSelection: Selection, source?: string): void;\n\tpublic setSelection(something: any, source: string = 'api'): void {\n\t\tthis._targetEditor.setSelection(something, source);\n\t}\n\n\tpublic setSelections(ranges: readonly ISelection[], source: string = 'api'): void {\n\t\tthis._targetEditor.setSelections(ranges, source);\n\t}\n\n\tpublic revealLines(startLineNumber: number, endLineNumber: number, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n\t}\n\n\tpublic revealLinesInCenter(startLineNumber: number, endLineNumber: number, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n\t}\n\n\tpublic revealLinesInCenterIfOutsideViewport(startLineNumber: number, endLineNumber: number, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n\t}\n\n\tpublic revealLinesNearTop(startLineNumber: number, endLineNumber: number, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n\t}\n\n\tpublic revealRange(range: IRange, scrollType: ScrollType = ScrollType.Smooth, revealVerticalInCenter: boolean = false, revealHorizontal: boolean = true): void {\n\t\tthis._targetEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n\t}\n\n\tpublic revealRangeInCenter(range: IRange, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealRangeInCenter(range, scrollType);\n\t}\n\n\tpublic revealRangeInCenterIfOutsideViewport(range: IRange, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n\t}\n\n\tpublic revealRangeNearTop(range: IRange, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealRangeNearTop(range, scrollType);\n\t}\n\n\tpublic revealRangeNearTopIfOutsideViewport(range: IRange, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n\t}\n\n\tpublic revealRangeAtTop(range: IRange, scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._targetEditor.revealRangeAtTop(range, scrollType);\n\t}\n\n\tpublic getSupportedActions(): IEditorAction[] {\n\t\treturn this._targetEditor.getSupportedActions();\n\t}\n\n\tpublic focus(): void {\n\t\tthis._targetEditor.focus();\n\t}\n\n\tpublic trigger(source: string | null | undefined, handlerId: string, payload: any): void {\n\t\tthis._targetEditor.trigger(source, handlerId, payload);\n\t}\n\n\tpublic createDecorationsCollection(decorations?: IModelDeltaDecoration[]): IEditorDecorationsCollection {\n\t\treturn this._targetEditor.createDecorationsCollection(decorations);\n\t}\n\n\tpublic changeDecorations(callback: (changeAccessor: IModelDecorationsChangeAccessor) => any): any {\n\t\treturn this._targetEditor.changeDecorations(callback);\n\t}\n\n\t// #endregion\n}\n"],
  "mappings": "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",
  "names": []
}
