import{EventType as l,addDisposableListener as m,h as R}from"../../../../../base/browser/dom.js";import{renderIcon as E}from"../../../../../base/browser/ui/iconLabel/iconLabels.js";import{Codicon as b}from"../../../../../base/common/codicons.js";import{Disposable as u,toDisposable as D}from"../../../../../base/common/lifecycle.js";import{autorunWithStore as w,derived as N}from"../../../../../base/common/observable.js";import{localize as _}from"../../../../../nls.js";import{LineRange as W,LineRangeSet as C}from"../../../../common/core/lineRange.js";import{Range as I}from"../../../../common/core/range.js";import{LineRangeMapping as L}from"../../../../common/diff/rangeMapping.js";import{GlyphMarginLane as S}from"../../../../common/model.js";const h=[];class F extends u{constructor(n,c,p,o){super();this._editors=n;this._diffModel=c;this._options=p;this._widget=o;this._register(w((e,f)=>{if(!this._options.shouldRenderOldRevertArrows.read(e))return;const r=this._diffModel.read(e),i=r?.diff.read(e);if(!r||!i||r.movedTextToCompare.read(e))return;const s=[],d=this._selectedDiffs.read(e),M=new Set(d.map(t=>t.mapping));if(d.length>0){const t=this._editors.modifiedSelections.read(e),a=f.add(new g(t[t.length-1].positionLineNumber,this._widget,d.flatMap(y=>y.rangeMappings),!0));this._editors.modified.addGlyphMarginWidget(a),s.push(a)}for(const t of i.mappings)if(!M.has(t)&&!t.lineRangeMapping.modified.isEmpty&&t.lineRangeMapping.innerChanges){const a=f.add(new g(t.lineRangeMapping.modified.startLineNumber,this._widget,t.lineRangeMapping,!1));this._editors.modified.addGlyphMarginWidget(a),s.push(a)}f.add(D(()=>{for(const t of s)this._editors.modified.removeGlyphMarginWidget(t)}))}))}_selectedDiffs=N(this,n=>{const p=this._diffModel.read(n)?.diff.read(n);if(!p)return h;const o=this._editors.modifiedSelections.read(n);if(o.every(i=>i.isEmpty()))return h;const e=new C(o.map(i=>W.fromRangeInclusive(i))),r=p.mappings.filter(i=>i.lineRangeMapping.innerChanges&&e.intersects(i.lineRangeMapping.modified)).map(i=>({mapping:i,rangeMappings:i.lineRangeMapping.innerChanges.filter(s=>o.some(d=>I.areIntersecting(s.modifiedRange,d)))}));return r.length===0||r.every(i=>i.rangeMappings.length===0)?h:r})}class g extends u{constructor(n,c,p,o){super();this._lineNumber=n;this._widget=c;this._diffs=p;this._revertSelection=o;this._register(m(this._domNode,l.MOUSE_DOWN,e=>{e.button!==2&&(e.stopPropagation(),e.preventDefault())})),this._register(m(this._domNode,l.MOUSE_UP,e=>{e.stopPropagation(),e.preventDefault()})),this._register(m(this._domNode,l.CLICK,e=>{this._diffs instanceof L?this._widget.revert(this._diffs):this._widget.revertRangeMappings(this._diffs),e.stopPropagation(),e.preventDefault()}))}static counter=0;_id=`revertButton${g.counter++}`;getId(){return this._id}_domNode=R("div.revertButton",{title:this._revertSelection?_("revertSelectedChanges","Revert Selected Changes"):_("revertChange","Revert Change")},[E(b.arrowRight)]).root;getDomNode(){return this._domNode}getPosition(){return{lane:S.Right,range:{startColumn:1,startLineNumber:this._lineNumber,endColumn:1,endLineNumber:this._lineNumber},zIndex:10001}}}export{g as RevertButton,F as RevertButtonsFeature};
