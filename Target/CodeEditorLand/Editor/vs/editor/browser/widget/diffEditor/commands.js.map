{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveElement } from '../../../../base/browser/dom.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { ICodeEditor, IDiffEditor } from '../../editorBrowser.js';\nimport { EditorAction2, ServicesAccessor } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { DiffEditorWidget } from './diffEditorWidget.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize2 } from '../../../../nls.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport './registrations.contribution.js';\nimport { DiffEditorSelectionHunkToolbarContext } from './features/gutterFeature.js';\nimport { URI } from '../../../../base/common/uri.js';\n\nexport class ToggleCollapseUnchangedRegions extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.toggleCollapseUnchangedRegions',\n\t\t\ttitle: localize2('toggleCollapseUnchangedRegions', 'Toggle Collapse Unchanged Regions'),\n\t\t\ticon: Codicon.map,\n\t\t\ttoggled: ContextKeyExpr.has('config.diffEditor.hideUnchangedRegions.enabled'),\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\torder: 22,\n\t\t\t\tgroup: 'navigation',\n\t\t\t},\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.hideUnchangedRegions.enabled');\n\t\tconfigurationService.updateValue('diffEditor.hideUnchangedRegions.enabled', newValue);\n\t}\n}\n\nexport class ToggleShowMovedCodeBlocks extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.toggleShowMovedCodeBlocks',\n\t\t\ttitle: localize2('toggleShowMovedCodeBlocks', 'Toggle Show Moved Code Blocks'),\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.experimental.showMoves');\n\t\tconfigurationService.updateValue('diffEditor.experimental.showMoves', newValue);\n\t}\n}\n\nexport class ToggleUseInlineViewWhenSpaceIsLimited extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.toggleUseInlineViewWhenSpaceIsLimited',\n\t\t\ttitle: localize2('toggleUseInlineViewWhenSpaceIsLimited', 'Toggle Use Inline View When Space Is Limited'),\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.useInlineViewWhenSpaceIsLimited');\n\t\tconfigurationService.updateValue('diffEditor.useInlineViewWhenSpaceIsLimited', newValue);\n\t}\n}\n\nconst diffEditorCategory: ILocalizedString = localize2('diffEditor', \"Diff Editor\");\n\nexport class SwitchSide extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.switchSide',\n\t\t\ttitle: localize2('switchSide', 'Switch Side'),\n\t\t\ticon: Codicon.arrowSwap,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, arg?: { dryRun: boolean }): unknown {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tif (arg && arg.dryRun) {\n\t\t\t\treturn { destinationSelection: diffEditor.mapToOtherSide().destinationSelection };\n\t\t\t} else {\n\t\t\t\tdiffEditor.switchSide();\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\nexport class ExitCompareMove extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.exitCompareMove',\n\t\t\ttitle: localize2('exitCompareMove', 'Exit Compare Move'),\n\t\t\ticon: Codicon.close,\n\t\t\tprecondition: EditorContextKeys.comparingMovedCode,\n\t\t\tf1: false,\n\t\t\tcategory: diffEditorCategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: 10000,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.exitCompareMove();\n\t\t}\n\t}\n}\n\nexport class CollapseAllUnchangedRegions extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.collapseAllUnchangedRegions',\n\t\t\ttitle: localize2('collapseAllUnchangedRegions', 'Collapse All Unchanged Regions'),\n\t\t\ticon: Codicon.fold,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.collapseAllUnchangedRegions();\n\t\t}\n\t}\n}\n\nexport class ShowAllUnchangedRegions extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.showAllUnchangedRegions',\n\t\t\ttitle: localize2('showAllUnchangedRegions', 'Show All Unchanged Regions'),\n\t\t\ticon: Codicon.unfold,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.showAllUnchangedRegions();\n\t\t}\n\t}\n}\n\nexport class RevertHunkOrSelection extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.revert',\n\t\t\ttitle: localize2('revert', 'Revert'),\n\t\t\tf1: false,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, arg: DiffEditorSelectionHunkToolbarContext): unknown {\n\t\tconst diffEditor = findDiffEditor(accessor, arg.originalUri, arg.modifiedUri);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.revertRangeMappings(arg.mapping.innerChanges ?? []);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nconst accessibleDiffViewerCategory: ILocalizedString = localize2('accessibleDiffViewer', \"Accessible Diff Viewer\");\n\nexport class AccessibleDiffViewerNext extends Action2 {\n\tpublic static id = 'editor.action.accessibleDiffViewer.next';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibleDiffViewerNext.id,\n\t\t\ttitle: localize2('editor.action.accessibleDiffViewer.next', 'Go to Next Difference'),\n\t\t\tcategory: accessibleDiffViewerCategory,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tdiffEditor?.accessibleDiffViewerNext();\n\t}\n}\n\nexport class AccessibleDiffViewerPrev extends Action2 {\n\tpublic static id = 'editor.action.accessibleDiffViewer.prev';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibleDiffViewerPrev.id,\n\t\t\ttitle: localize2('editor.action.accessibleDiffViewer.prev', 'Go to Previous Difference'),\n\t\t\tcategory: accessibleDiffViewerCategory,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tdiffEditor?.accessibleDiffViewerPrev();\n\t}\n}\n\nexport function findDiffEditor(accessor: ServicesAccessor, originalUri: URI, modifiedUri: URI): IDiffEditor | null {\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\n\treturn diffEditors.find(diffEditor => {\n\t\tconst modified = diffEditor.getModifiedEditor();\n\t\tconst original = diffEditor.getOriginalEditor();\n\n\t\treturn modified && modified.getModel()?.uri.toString() === modifiedUri.toString()\n\t\t\t&& original && original.getModel()?.uri.toString() === originalUri.toString();\n\t}) || null;\n}\n\nexport function findFocusedDiffEditor(accessor: ServicesAccessor): IDiffEditor | null {\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\n\tconst activeElement = getActiveElement();\n\tif (activeElement) {\n\t\tfor (const d of diffEditors) {\n\t\t\tconst container = d.getContainerDomNode();\n\t\t\tif (isElementOrParentOf(container, activeElement)) {\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction isElementOrParentOf(elementOrParent: Element, element: Element): boolean {\n\tlet e: Element | null = element;\n\twhile (e) {\n\t\tif (e === elementOrParent) {\n\t\t\treturn true;\n\t\t}\n\t\te = e.parentElement;\n\t}\n\treturn false;\n}\n"],
  "mappings": "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",
  "names": []
}
