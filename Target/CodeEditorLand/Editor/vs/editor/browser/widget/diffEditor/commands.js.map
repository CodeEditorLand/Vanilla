{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveElement } from \"../../../../base/browser/dom.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { localize2 } from \"../../../../nls.js\";\nimport type { ILocalizedString } from \"../../../../platform/action/common/action.js\";\nimport {\n\tAction2,\n\tMenuId,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport type { ICodeEditor, IDiffEditor } from \"../../editorBrowser.js\";\nimport {\n\tEditorAction2,\n\ttype ServicesAccessor,\n} from \"../../editorExtensions.js\";\nimport { ICodeEditorService } from \"../../services/codeEditorService.js\";\nimport { DiffEditorWidget } from \"./diffEditorWidget.js\";\nimport \"./registrations.contribution.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { DiffEditorSelectionHunkToolbarContext } from \"./features/gutterFeature.js\";\n\nexport class ToggleCollapseUnchangedRegions extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"diffEditor.toggleCollapseUnchangedRegions\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"toggleCollapseUnchangedRegions\",\n\t\t\t\t\"Toggle Collapse Unchanged Regions\",\n\t\t\t),\n\t\t\ticon: Codicon.map,\n\t\t\ttoggled: ContextKeyExpr.has(\n\t\t\t\t\"config.diffEditor.hideUnchangedRegions.enabled\",\n\t\t\t),\n\t\t\tprecondition: ContextKeyExpr.has(\"isInDiffEditor\"),\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.has(\"isInDiffEditor\"),\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\torder: 22,\n\t\t\t\tgroup: \"navigation\",\n\t\t\t},\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>(\n\t\t\t\"diffEditor.hideUnchangedRegions.enabled\",\n\t\t);\n\t\tconfigurationService.updateValue(\n\t\t\t\"diffEditor.hideUnchangedRegions.enabled\",\n\t\t\tnewValue,\n\t\t);\n\t}\n}\n\nexport class ToggleShowMovedCodeBlocks extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"diffEditor.toggleShowMovedCodeBlocks\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"toggleShowMovedCodeBlocks\",\n\t\t\t\t\"Toggle Show Moved Code Blocks\",\n\t\t\t),\n\t\t\tprecondition: ContextKeyExpr.has(\"isInDiffEditor\"),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>(\n\t\t\t\"diffEditor.experimental.showMoves\",\n\t\t);\n\t\tconfigurationService.updateValue(\n\t\t\t\"diffEditor.experimental.showMoves\",\n\t\t\tnewValue,\n\t\t);\n\t}\n}\n\nexport class ToggleUseInlineViewWhenSpaceIsLimited extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"diffEditor.toggleUseInlineViewWhenSpaceIsLimited\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"toggleUseInlineViewWhenSpaceIsLimited\",\n\t\t\t\t\"Toggle Use Inline View When Space Is Limited\",\n\t\t\t),\n\t\t\tprecondition: ContextKeyExpr.has(\"isInDiffEditor\"),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>(\n\t\t\t\"diffEditor.useInlineViewWhenSpaceIsLimited\",\n\t\t);\n\t\tconfigurationService.updateValue(\n\t\t\t\"diffEditor.useInlineViewWhenSpaceIsLimited\",\n\t\t\tnewValue,\n\t\t);\n\t}\n}\n\nconst diffEditorCategory: ILocalizedString = localize2(\n\t\"diffEditor\",\n\t\"Diff Editor\",\n);\n\nexport class SwitchSide extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"diffEditor.switchSide\",\n\t\t\ttitle: localize2(\"switchSide\", \"Switch Side\"),\n\t\t\ticon: Codicon.arrowSwap,\n\t\t\tprecondition: ContextKeyExpr.has(\"isInDiffEditor\"),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targ?: { dryRun: boolean },\n\t): unknown {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tif (arg && arg.dryRun) {\n\t\t\t\treturn {\n\t\t\t\t\tdestinationSelection:\n\t\t\t\t\t\tdiffEditor.mapToOtherSide().destinationSelection,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tdiffEditor.switchSide();\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\nexport class ExitCompareMove extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"diffEditor.exitCompareMove\",\n\t\t\ttitle: localize2(\"exitCompareMove\", \"Exit Compare Move\"),\n\t\t\ticon: Codicon.close,\n\t\t\tprecondition: EditorContextKeys.comparingMovedCode,\n\t\t\tf1: false,\n\t\t\tcategory: diffEditorCategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: 10000,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t},\n\t\t});\n\t}\n\n\trunEditorCommand(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\t...args: unknown[]\n\t): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.exitCompareMove();\n\t\t}\n\t}\n}\n\nexport class CollapseAllUnchangedRegions extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"diffEditor.collapseAllUnchangedRegions\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"collapseAllUnchangedRegions\",\n\t\t\t\t\"Collapse All Unchanged Regions\",\n\t\t\t),\n\t\t\ticon: Codicon.fold,\n\t\t\tprecondition: ContextKeyExpr.has(\"isInDiffEditor\"),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\t...args: unknown[]\n\t): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.collapseAllUnchangedRegions();\n\t\t}\n\t}\n}\n\nexport class ShowAllUnchangedRegions extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"diffEditor.showAllUnchangedRegions\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"showAllUnchangedRegions\",\n\t\t\t\t\"Show All Unchanged Regions\",\n\t\t\t),\n\t\t\ticon: Codicon.unfold,\n\t\t\tprecondition: ContextKeyExpr.has(\"isInDiffEditor\"),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\t...args: unknown[]\n\t): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.showAllUnchangedRegions();\n\t\t}\n\t}\n}\n\nexport class RevertHunkOrSelection extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"diffEditor.revert\",\n\t\t\ttitle: localize2(\"revert\", \"Revert\"),\n\t\t\tf1: false,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trun(\n\t\taccessor: ServicesAccessor,\n\t\targ: DiffEditorSelectionHunkToolbarContext,\n\t): unknown {\n\t\tconst diffEditor = findDiffEditor(\n\t\t\taccessor,\n\t\t\targ.originalUri,\n\t\t\targ.modifiedUri,\n\t\t);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.revertRangeMappings(arg.mapping.innerChanges ?? []);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nconst accessibleDiffViewerCategory: ILocalizedString = localize2(\n\t\"accessibleDiffViewer\",\n\t\"Accessible Diff Viewer\",\n);\n\nexport class AccessibleDiffViewerNext extends Action2 {\n\tpublic static id = \"editor.action.accessibleDiffViewer.next\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibleDiffViewerNext.id,\n\t\t\ttitle: localize2(\n\t\t\t\t\"editor.action.accessibleDiffViewer.next\",\n\t\t\t\t\"Go to Next Difference\",\n\t\t\t),\n\t\t\tcategory: accessibleDiffViewerCategory,\n\t\t\tprecondition: ContextKeyExpr.has(\"isInDiffEditor\"),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tdiffEditor?.accessibleDiffViewerNext();\n\t}\n}\n\nexport class AccessibleDiffViewerPrev extends Action2 {\n\tpublic static id = \"editor.action.accessibleDiffViewer.prev\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibleDiffViewerPrev.id,\n\t\t\ttitle: localize2(\n\t\t\t\t\"editor.action.accessibleDiffViewer.prev\",\n\t\t\t\t\"Go to Previous Difference\",\n\t\t\t),\n\t\t\tcategory: accessibleDiffViewerCategory,\n\t\t\tprecondition: ContextKeyExpr.has(\"isInDiffEditor\"),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tdiffEditor?.accessibleDiffViewerPrev();\n\t}\n}\n\nexport function findDiffEditor(\n\taccessor: ServicesAccessor,\n\toriginalUri: URI,\n\tmodifiedUri: URI,\n): IDiffEditor | null {\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\n\treturn (\n\t\tdiffEditors.find((diffEditor) => {\n\t\t\tconst modified = diffEditor.getModifiedEditor();\n\t\t\tconst original = diffEditor.getOriginalEditor();\n\n\t\t\treturn (\n\t\t\t\tmodified &&\n\t\t\t\tmodified.getModel()?.uri.toString() ===\n\t\t\t\t\tmodifiedUri.toString() &&\n\t\t\t\toriginal &&\n\t\t\t\toriginal.getModel()?.uri.toString() === originalUri.toString()\n\t\t\t);\n\t\t}) || null\n\t);\n}\n\nexport function findFocusedDiffEditor(\n\taccessor: ServicesAccessor,\n): IDiffEditor | null {\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\n\tconst activeElement = getActiveElement();\n\tif (activeElement) {\n\t\tfor (const d of diffEditors) {\n\t\t\tconst container = d.getContainerDomNode();\n\t\t\tif (isElementOrParentOf(container, activeElement)) {\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction isElementOrParentOf(\n\telementOrParent: Element,\n\telement: Element,\n): boolean {\n\tlet e: Element | null = element;\n\twhile (e) {\n\t\tif (e === elementOrParent) {\n\t\t\treturn true;\n\t\t}\n\t\te = e.parentElement;\n\t}\n\treturn false;\n}\n"],
  "mappings": "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",
  "names": []
}
