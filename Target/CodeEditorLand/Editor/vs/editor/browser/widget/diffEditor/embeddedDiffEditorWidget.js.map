{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/widget/diffEditor/embeddedDiffEditorWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from \"../../../../base/common/objects.js\";\nimport { IAccessibilitySignalService } from \"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IEditorProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport type {\n\tConfigurationChangedEvent,\n\tIDiffEditorOptions,\n\tIEditorOptions,\n} from \"../../../common/config/editorOptions.js\";\nimport type {\n\tICodeEditor,\n\tIDiffEditorConstructionOptions,\n} from \"../../editorBrowser.js\";\nimport { ICodeEditorService } from \"../../services/codeEditorService.js\";\nimport {\n\tDiffEditorWidget,\n\ttype IDiffCodeEditorWidgetOptions,\n} from \"./diffEditorWidget.js\";\nexport class EmbeddedDiffEditorWidget extends DiffEditorWidget {\n\tprivate readonly _parentEditor: ICodeEditor;\n\tprivate readonly _overwriteOptions: IDiffEditorOptions;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\toptions: Readonly<IDiffEditorConstructionOptions>,\n\t\tcodeEditorWidgetOptions: IDiffCodeEditorWidgetOptions,\n\t\tparentEditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IAccessibilitySignalService accessibilitySignalService: IAccessibilitySignalService,\n\t\t@IEditorProgressService editorProgressService: IEditorProgressService,\n\t) {\n\t\tsuper(\n\t\t\tdomElement,\n\t\t\tparentEditor.getRawOptions(),\n\t\t\tcodeEditorWidgetOptions,\n\t\t\tcontextKeyService,\n\t\t\tinstantiationService,\n\t\t\tcodeEditorService,\n\t\t\taccessibilitySignalService,\n\t\t\teditorProgressService,\n\t\t);\n\n\t\tthis._parentEditor = parentEditor;\n\t\tthis._overwriteOptions = options;\n\n\t\t// Overwrite parent's options\n\t\tsuper.updateOptions(this._overwriteOptions);\n\n\t\tthis._register(\n\t\t\tparentEditor.onDidChangeConfiguration((e) =>\n\t\t\t\tthis._onParentConfigurationChanged(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tgetParentEditor(): ICodeEditor {\n\t\treturn this._parentEditor;\n\t}\n\n\tprivate _onParentConfigurationChanged(e: ConfigurationChangedEvent): void {\n\t\tsuper.updateOptions(this._parentEditor.getRawOptions());\n\t\tsuper.updateOptions(this._overwriteOptions);\n\t}\n\n\toverride updateOptions(newOptions: IEditorOptions): void {\n\t\tobjects.mixin(this._overwriteOptions, newOptions, true);\n\t\tsuper.updateOptions(this._overwriteOptions);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,aAAa;AACzB,SAAS,mCAAmC;AAC5C,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC,SAAS,8BAA8B;AAUvC,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,OAEM;AACA,IAAM,2BAAN,cAAuC,iBAAiB;AAAA,EAxB/D,OAwB+D;AAAA;AAAA;AAAA,EAC7C;AAAA,EACA;AAAA,EAEjB,YACC,YACA,SACA,yBACA,cACoB,mBACG,sBACH,mBACS,4BACL,uBACvB;AACD;AAAA,MACC;AAAA,MACA,aAAa,cAAc;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,SAAK,gBAAgB;AACrB,SAAK,oBAAoB;AAGzB,UAAM,cAAc,KAAK,iBAAiB;AAE1C,SAAK;AAAA,MACJ,aAAa;AAAA,QAAyB,CAAC,MACtC,KAAK,8BAA8B,CAAC;AAAA,MACrC;AAAA,IACD;AAAA,EACD;AAAA,EAEA,kBAA+B;AAC9B,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,8BAA8B,GAAoC;AACzE,UAAM,cAAc,KAAK,cAAc,cAAc,CAAC;AACtD,UAAM,cAAc,KAAK,iBAAiB;AAAA,EAC3C;AAAA,EAES,cAAc,YAAkC;AACxD,YAAQ,MAAM,KAAK,mBAAmB,YAAY,IAAI;AACtD,UAAM,cAAc,KAAK,iBAAiB;AAAA,EAC3C;AACD;AApDa,2BAAN;AAAA,EASJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAbU;",
  "names": []
}
