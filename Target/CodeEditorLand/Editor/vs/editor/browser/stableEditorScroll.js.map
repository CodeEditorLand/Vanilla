{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/stableEditorScroll.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Position } from \"../common/core/position.js\";\nimport { ScrollType } from \"../common/editorCommon.js\";\nimport type { ICodeEditor } from \"./editorBrowser.js\";\n\nexport class StableEditorScrollState {\n\tpublic static capture(editor: ICodeEditor): StableEditorScrollState {\n\t\tif (editor.getScrollTop() === 0 || editor.hasPendingScrollAnimation()) {\n\t\t\t// Never mess with the scroll top if the editor is at the top of the file or if there is a pending scroll animation\n\t\t\treturn new StableEditorScrollState(\n\t\t\t\teditor.getScrollTop(),\n\t\t\t\teditor.getContentHeight(),\n\t\t\t\tnull,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t);\n\t\t}\n\n\t\tlet visiblePosition: Position | null = null;\n\t\tlet visiblePositionScrollDelta = 0;\n\t\tconst visibleRanges = editor.getVisibleRanges();\n\t\tif (visibleRanges.length > 0) {\n\t\t\tvisiblePosition = visibleRanges[0].getStartPosition();\n\t\t\tconst visiblePositionScrollTop = editor.getTopForPosition(\n\t\t\t\tvisiblePosition.lineNumber,\n\t\t\t\tvisiblePosition.column,\n\t\t\t);\n\t\t\tvisiblePositionScrollDelta =\n\t\t\t\teditor.getScrollTop() - visiblePositionScrollTop;\n\t\t}\n\t\treturn new StableEditorScrollState(\n\t\t\teditor.getScrollTop(),\n\t\t\teditor.getContentHeight(),\n\t\t\tvisiblePosition,\n\t\t\tvisiblePositionScrollDelta,\n\t\t\teditor.getPosition(),\n\t\t);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _initialScrollTop: number,\n\t\tprivate readonly _initialContentHeight: number,\n\t\tprivate readonly _visiblePosition: Position | null,\n\t\tprivate readonly _visiblePositionScrollDelta: number,\n\t\tprivate readonly _cursorPosition: Position | null,\n\t) {}\n\n\tpublic restore(editor: ICodeEditor): void {\n\t\tif (\n\t\t\tthis._initialContentHeight === editor.getContentHeight() &&\n\t\t\tthis._initialScrollTop === editor.getScrollTop()\n\t\t) {\n\t\t\t// The editor's content height and scroll top haven't changed, so we don't need to do anything\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._visiblePosition) {\n\t\t\tconst visiblePositionScrollTop = editor.getTopForPosition(\n\t\t\t\tthis._visiblePosition.lineNumber,\n\t\t\t\tthis._visiblePosition.column,\n\t\t\t);\n\t\t\teditor.setScrollTop(\n\t\t\t\tvisiblePositionScrollTop + this._visiblePositionScrollDelta,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic restoreRelativeVerticalPositionOfCursor(editor: ICodeEditor): void {\n\t\tif (\n\t\t\tthis._initialContentHeight === editor.getContentHeight() &&\n\t\t\tthis._initialScrollTop === editor.getScrollTop()\n\t\t) {\n\t\t\t// The editor's content height and scroll top haven't changed, so we don't need to do anything\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentCursorPosition = editor.getPosition();\n\n\t\tif (!this._cursorPosition || !currentCursorPosition) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst offset =\n\t\t\teditor.getTopForLineNumber(currentCursorPosition.lineNumber) -\n\t\t\teditor.getTopForLineNumber(this._cursorPosition.lineNumber);\n\t\teditor.setScrollTop(\n\t\t\teditor.getScrollTop() + offset,\n\t\t\tScrollType.Immediate,\n\t\t);\n\t}\n}\n\nexport class StableEditorBottomScrollState {\n\tpublic static capture(editor: ICodeEditor): StableEditorBottomScrollState {\n\t\tif (editor.hasPendingScrollAnimation()) {\n\t\t\t// Never mess with the scroll if there is a pending scroll animation\n\t\t\treturn new StableEditorBottomScrollState(\n\t\t\t\teditor.getScrollTop(),\n\t\t\t\teditor.getContentHeight(),\n\t\t\t\tnull,\n\t\t\t\t0,\n\t\t\t);\n\t\t}\n\n\t\tlet visiblePosition: Position | null = null;\n\t\tlet visiblePositionScrollDelta = 0;\n\t\tconst visibleRanges = editor.getVisibleRanges();\n\t\tif (visibleRanges.length > 0) {\n\t\t\tvisiblePosition = visibleRanges.at(-1)!.getEndPosition();\n\t\t\tconst visiblePositionScrollBottom = editor.getBottomForLineNumber(\n\t\t\t\tvisiblePosition.lineNumber,\n\t\t\t);\n\t\t\tvisiblePositionScrollDelta =\n\t\t\t\tvisiblePositionScrollBottom - editor.getScrollTop();\n\t\t}\n\t\treturn new StableEditorBottomScrollState(\n\t\t\teditor.getScrollTop(),\n\t\t\teditor.getContentHeight(),\n\t\t\tvisiblePosition,\n\t\t\tvisiblePositionScrollDelta,\n\t\t);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _initialScrollTop: number,\n\t\tprivate readonly _initialContentHeight: number,\n\t\tprivate readonly _visiblePosition: Position | null,\n\t\tprivate readonly _visiblePositionScrollDelta: number,\n\t) {}\n\n\tpublic restore(editor: ICodeEditor): void {\n\t\tif (\n\t\t\tthis._initialContentHeight === editor.getContentHeight() &&\n\t\t\tthis._initialScrollTop === editor.getScrollTop()\n\t\t) {\n\t\t\t// The editor's content height and scroll top haven't changed, so we don't need to do anything\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._visiblePosition) {\n\t\t\tconst visiblePositionScrollBottom = editor.getBottomForLineNumber(\n\t\t\t\tthis._visiblePosition.lineNumber,\n\t\t\t);\n\t\t\teditor.setScrollTop(\n\t\t\t\tvisiblePositionScrollBottom - this._visiblePositionScrollDelta,\n\t\t\t\tScrollType.Immediate,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
