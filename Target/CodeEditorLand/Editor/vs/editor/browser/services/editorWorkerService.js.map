{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/services/editorWorkerService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createWebWorker } from \"../../../base/browser/defaultWorkerFactory.js\";\nimport { WindowIntervalTimer } from \"../../../base/browser/dom.js\";\nimport { mainWindow } from \"../../../base/browser/window.js\";\nimport { isNonEmptyArray } from \"../../../base/common/arrays.js\";\nimport { timeout } from \"../../../base/common/async.js\";\nimport { canceled, onUnexpectedError } from \"../../../base/common/errors.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { StopWatch } from \"../../../base/common/stopwatch.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport {\n\ttype IWorkerClient,\n\ttype IWorkerDescriptor,\n\ttype Proxied,\n\tlogOnceWebWorkerWarning,\n} from \"../../../base/common/worker/simpleWorker.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport { LineRange } from \"../../common/core/lineRange.js\";\nimport type { Position } from \"../../common/core/position.js\";\nimport { type IRange, Range } from \"../../common/core/range.js\";\nimport type {\n\tIDocumentDiff,\n\tIDocumentDiffProviderOptions,\n} from \"../../common/diff/documentDiffProvider.js\";\nimport type { IChange } from \"../../common/diff/legacyLinesDiffComputer.js\";\nimport {\n\ttype ILinesDiffComputerOptions,\n\tMovedText,\n} from \"../../common/diff/linesDiffComputer.js\";\nimport {\n\tDetailedLineRangeMapping,\n\tLineRangeMapping,\n\tRangeMapping,\n} from \"../../common/diff/rangeMapping.js\";\nimport * as languages from \"../../common/languages.js\";\nimport { ILanguageConfigurationService } from \"../../common/languages/languageConfigurationRegistry.js\";\nimport type { ITextModel } from \"../../common/model.js\";\nimport { EditorSimpleWorker } from \"../../common/services/editorSimpleWorker.js\";\nimport type {\n\tDiffAlgorithmName,\n\tIEditorWorkerService,\n\tILineChange,\n\tIUnicodeHighlightsResult,\n} from \"../../common/services/editorWorker.js\";\nimport { EditorWorkerHost } from \"../../common/services/editorWorkerHost.js\";\nimport type {\n\tFindSectionHeaderOptions,\n\tSectionHeader,\n} from \"../../common/services/findSectionHeaders.js\";\nimport { ILanguageFeaturesService } from \"../../common/services/languageFeatures.js\";\nimport { IModelService } from \"../../common/services/model.js\";\nimport { WorkerTextModelSyncClient } from \"../../common/services/textModelSync/textModelSync.impl.js\";\nimport { ITextResourceConfigurationService } from \"../../common/services/textResourceConfiguration.js\";\nimport type { UnicodeHighlighterOptions } from \"../../common/services/unicodeTextModelHighlighter.js\";\n\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\n\nfunction canSyncModel(modelService: IModelService, resource: URI): boolean {\n\tconst model = modelService.getModel(resource);\n\tif (!model) {\n\t\treturn false;\n\t}\n\tif (model.isTooLargeForSyncing()) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport abstract class EditorWorkerService\n\textends Disposable\n\timplements IEditorWorkerService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _modelService: IModelService;\n\tprivate readonly _workerManager: WorkerManager;\n\tprivate readonly _logService: ILogService;\n\n\tconstructor(\n\t\tworkerDescriptor: IWorkerDescriptor,\n\t\t@IModelService modelService: IModelService,\n\t\t@ITextResourceConfigurationService\n\t\tconfigurationService: ITextResourceConfigurationService,\n\t\t@ILogService logService: ILogService,\n\t\t@ILanguageConfigurationService\n\t\tprivate readonly _languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService\n\t\tlanguageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\t\tthis._modelService = modelService;\n\t\tthis._workerManager = this._register(\n\t\t\tnew WorkerManager(workerDescriptor, this._modelService),\n\t\t);\n\t\tthis._logService = logService;\n\n\t\t// register default link-provider and default completions-provider\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.linkProvider.register(\n\t\t\t\t{ language: \"*\", hasAccessToAllModels: true },\n\t\t\t\t{\n\t\t\t\t\tprovideLinks: async (model, token) => {\n\t\t\t\t\t\tif (!canSyncModel(this._modelService, model.uri)) {\n\t\t\t\t\t\t\treturn Promise.resolve({ links: [] }); // File too large\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst worker = await this._workerWithResources([\n\t\t\t\t\t\t\tmodel.uri,\n\t\t\t\t\t\t]);\n\t\t\t\t\t\tconst links = await worker.$computeLinks(\n\t\t\t\t\t\t\tmodel.uri.toString(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn links && { links };\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.completionProvider.register(\n\t\t\t\t\"*\",\n\t\t\t\tnew WordBasedCompletionItemProvider(\n\t\t\t\t\tthis._workerManager,\n\t\t\t\t\tconfigurationService,\n\t\t\t\t\tthis._modelService,\n\t\t\t\t\tthis._languageConfigurationService,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic canComputeUnicodeHighlights(uri: URI): boolean {\n\t\treturn canSyncModel(this._modelService, uri);\n\t}\n\n\tpublic async computedUnicodeHighlights(\n\t\turi: URI,\n\t\toptions: UnicodeHighlighterOptions,\n\t\trange?: IRange,\n\t): Promise<IUnicodeHighlightsResult> {\n\t\tconst worker = await this._workerWithResources([uri]);\n\t\treturn worker.$computeUnicodeHighlights(uri.toString(), options, range);\n\t}\n\n\tpublic async computeDiff(\n\t\toriginal: URI,\n\t\tmodified: URI,\n\t\toptions: IDocumentDiffProviderOptions,\n\t\talgorithm: DiffAlgorithmName,\n\t): Promise<IDocumentDiff | null> {\n\t\tconst worker = await this._workerWithResources(\n\t\t\t[original, modified],\n\t\t\t/* forceLargeModels */ true,\n\t\t);\n\t\tconst result = await worker.$computeDiff(\n\t\t\toriginal.toString(),\n\t\t\tmodified.toString(),\n\t\t\toptions,\n\t\t\talgorithm,\n\t\t);\n\t\tif (!result) {\n\t\t\treturn null;\n\t\t}\n\t\t// Convert from space efficient JSON data to rich objects.\n\t\tconst diff: IDocumentDiff = {\n\t\t\tidentical: result.identical,\n\t\t\tquitEarly: result.quitEarly,\n\t\t\tchanges: toLineRangeMappings(result.changes),\n\t\t\tmoves: result.moves.map(\n\t\t\t\t(m) =>\n\t\t\t\t\tnew MovedText(\n\t\t\t\t\t\tnew LineRangeMapping(\n\t\t\t\t\t\t\tnew LineRange(m[0], m[1]),\n\t\t\t\t\t\t\tnew LineRange(m[2], m[3]),\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttoLineRangeMappings(m[4]),\n\t\t\t\t\t),\n\t\t\t),\n\t\t};\n\t\treturn diff;\n\n\t\tfunction toLineRangeMappings(\n\t\t\tchanges: readonly ILineChange[],\n\t\t): readonly DetailedLineRangeMapping[] {\n\t\t\treturn changes.map(\n\t\t\t\t(c) =>\n\t\t\t\t\tnew DetailedLineRangeMapping(\n\t\t\t\t\t\tnew LineRange(c[0], c[1]),\n\t\t\t\t\t\tnew LineRange(c[2], c[3]),\n\t\t\t\t\t\tc[4]?.map(\n\t\t\t\t\t\t\t(c) =>\n\t\t\t\t\t\t\t\tnew RangeMapping(\n\t\t\t\t\t\t\t\t\tnew Range(c[0], c[1], c[2], c[3]),\n\t\t\t\t\t\t\t\t\tnew Range(c[4], c[5], c[6], c[7]),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic canComputeDirtyDiff(original: URI, modified: URI): boolean {\n\t\treturn (\n\t\t\tcanSyncModel(this._modelService, original) &&\n\t\t\tcanSyncModel(this._modelService, modified)\n\t\t);\n\t}\n\n\tpublic async computeDirtyDiff(\n\t\toriginal: URI,\n\t\tmodified: URI,\n\t\tignoreTrimWhitespace: boolean,\n\t): Promise<IChange[] | null> {\n\t\tconst worker = await this._workerWithResources([original, modified]);\n\t\treturn worker.$computeDirtyDiff(\n\t\t\toriginal.toString(),\n\t\t\tmodified.toString(),\n\t\t\tignoreTrimWhitespace,\n\t\t);\n\t}\n\n\tpublic async computeMoreMinimalEdits(\n\t\tresource: URI,\n\t\tedits: languages.TextEdit[] | null | undefined,\n\t\tpretty = false,\n\t): Promise<languages.TextEdit[] | undefined> {\n\t\tif (isNonEmptyArray(edits)) {\n\t\t\tif (!canSyncModel(this._modelService, resource)) {\n\t\t\t\treturn Promise.resolve(edits); // File too large\n\t\t\t}\n\t\t\tconst sw = StopWatch.create();\n\t\t\tconst result = this._workerWithResources([resource]).then(\n\t\t\t\t(worker) =>\n\t\t\t\t\tworker.$computeMoreMinimalEdits(\n\t\t\t\t\t\tresource.toString(),\n\t\t\t\t\t\tedits,\n\t\t\t\t\t\tpretty,\n\t\t\t\t\t),\n\t\t\t);\n\t\t\tresult.finally(() =>\n\t\t\t\tthis._logService.trace(\n\t\t\t\t\t\"FORMAT#computeMoreMinimalEdits\",\n\t\t\t\t\tresource.toString(true),\n\t\t\t\t\tsw.elapsed(),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn Promise.race([result, timeout(1000).then(() => edits)]);\n\t\t} else {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t}\n\n\tpublic computeHumanReadableDiff(\n\t\tresource: URI,\n\t\tedits: languages.TextEdit[] | null | undefined,\n\t): Promise<languages.TextEdit[] | undefined> {\n\t\tif (isNonEmptyArray(edits)) {\n\t\t\tif (!canSyncModel(this._modelService, resource)) {\n\t\t\t\treturn Promise.resolve(edits); // File too large\n\t\t\t}\n\t\t\tconst sw = StopWatch.create();\n\t\t\tconst opts: ILinesDiffComputerOptions = {\n\t\t\t\tignoreTrimWhitespace: false,\n\t\t\t\tmaxComputationTimeMs: 1000,\n\t\t\t\tcomputeMoves: false,\n\t\t\t};\n\t\t\tconst result = this._workerWithResources([resource])\n\t\t\t\t.then((worker) =>\n\t\t\t\t\tworker.$computeHumanReadableDiff(\n\t\t\t\t\t\tresource.toString(),\n\t\t\t\t\t\tedits,\n\t\t\t\t\t\topts,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t\t// In case of an exception, fall back to computeMoreMinimalEdits\n\t\t\t\t\treturn this.computeMoreMinimalEdits(resource, edits, true);\n\t\t\t\t});\n\t\t\tresult.finally(() =>\n\t\t\t\tthis._logService.trace(\n\t\t\t\t\t\"FORMAT#computeHumanReadableDiff\",\n\t\t\t\t\tresource.toString(true),\n\t\t\t\t\tsw.elapsed(),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t}\n\n\tpublic canNavigateValueSet(resource: URI): boolean {\n\t\treturn canSyncModel(this._modelService, resource);\n\t}\n\n\tpublic async navigateValueSet(\n\t\tresource: URI,\n\t\trange: IRange,\n\t\tup: boolean,\n\t): Promise<languages.IInplaceReplaceSupportResult | null> {\n\t\tconst model = this._modelService.getModel(resource);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\t\tconst wordDefRegExp = this._languageConfigurationService\n\t\t\t.getLanguageConfiguration(model.getLanguageId())\n\t\t\t.getWordDefinition();\n\t\tconst wordDef = wordDefRegExp.source;\n\t\tconst wordDefFlags = wordDefRegExp.flags;\n\t\tconst worker = await this._workerWithResources([resource]);\n\t\treturn worker.$navigateValueSet(\n\t\t\tresource.toString(),\n\t\t\trange,\n\t\t\tup,\n\t\t\twordDef,\n\t\t\twordDefFlags,\n\t\t);\n\t}\n\n\tpublic canComputeWordRanges(resource: URI): boolean {\n\t\treturn canSyncModel(this._modelService, resource);\n\t}\n\n\tpublic async computeWordRanges(\n\t\tresource: URI,\n\t\trange: IRange,\n\t): Promise<{ [word: string]: IRange[] } | null> {\n\t\tconst model = this._modelService.getModel(resource);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst wordDefRegExp = this._languageConfigurationService\n\t\t\t.getLanguageConfiguration(model.getLanguageId())\n\t\t\t.getWordDefinition();\n\t\tconst wordDef = wordDefRegExp.source;\n\t\tconst wordDefFlags = wordDefRegExp.flags;\n\t\tconst worker = await this._workerWithResources([resource]);\n\t\treturn worker.$computeWordRanges(\n\t\t\tresource.toString(),\n\t\t\trange,\n\t\t\twordDef,\n\t\t\twordDefFlags,\n\t\t);\n\t}\n\n\tpublic async findSectionHeaders(\n\t\turi: URI,\n\t\toptions: FindSectionHeaderOptions,\n\t): Promise<SectionHeader[]> {\n\t\tconst worker = await this._workerWithResources([uri]);\n\t\treturn worker.$findSectionHeaders(uri.toString(), options);\n\t}\n\n\tpublic async computeDefaultDocumentColors(\n\t\turi: URI,\n\t): Promise<languages.IColorInformation[] | null> {\n\t\tconst worker = await this._workerWithResources([uri]);\n\t\treturn worker.$computeDefaultDocumentColors(uri.toString());\n\t}\n\n\tprivate async _workerWithResources(\n\t\tresources: URI[],\n\t\tforceLargeModels = false,\n\t): Promise<Proxied<EditorSimpleWorker>> {\n\t\tconst worker = await this._workerManager.withWorker();\n\t\treturn await worker.workerWithSyncedResources(\n\t\t\tresources,\n\t\t\tforceLargeModels,\n\t\t);\n\t}\n}\n\nclass WordBasedCompletionItemProvider\n\timplements languages.CompletionItemProvider\n{\n\tprivate readonly _workerManager: WorkerManager;\n\tprivate readonly _configurationService: ITextResourceConfigurationService;\n\tprivate readonly _modelService: IModelService;\n\n\treadonly _debugDisplayName = \"wordbasedCompletions\";\n\n\tconstructor(\n\t\tworkerManager: WorkerManager,\n\t\tconfigurationService: ITextResourceConfigurationService,\n\t\tmodelService: IModelService,\n\t\tprivate readonly languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tthis._workerManager = workerManager;\n\t\tthis._configurationService = configurationService;\n\t\tthis._modelService = modelService;\n\t}\n\n\tasync provideCompletionItems(\n\t\tmodel: ITextModel,\n\t\tposition: Position,\n\t): Promise<languages.CompletionList | undefined> {\n\t\ttype WordBasedSuggestionsConfig = {\n\t\t\twordBasedSuggestions?:\n\t\t\t\t| \"off\"\n\t\t\t\t| \"currentDocument\"\n\t\t\t\t| \"matchingDocuments\"\n\t\t\t\t| \"allDocuments\";\n\t\t};\n\t\tconst config =\n\t\t\tthis._configurationService.getValue<WordBasedSuggestionsConfig>(\n\t\t\t\tmodel.uri,\n\t\t\t\tposition,\n\t\t\t\t\"editor\",\n\t\t\t);\n\t\tif (config.wordBasedSuggestions === \"off\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst models: URI[] = [];\n\t\tif (config.wordBasedSuggestions === \"currentDocument\") {\n\t\t\t// only current file and only if not too large\n\t\t\tif (canSyncModel(this._modelService, model.uri)) {\n\t\t\t\tmodels.push(model.uri);\n\t\t\t}\n\t\t} else {\n\t\t\t// either all files or files of same language\n\t\t\tfor (const candidate of this._modelService.getModels()) {\n\t\t\t\tif (!canSyncModel(this._modelService, candidate.uri)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (candidate === model) {\n\t\t\t\t\tmodels.unshift(candidate.uri);\n\t\t\t\t} else if (\n\t\t\t\t\tconfig.wordBasedSuggestions === \"allDocuments\" ||\n\t\t\t\t\tcandidate.getLanguageId() === model.getLanguageId()\n\t\t\t\t) {\n\t\t\t\t\tmodels.push(candidate.uri);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (models.length === 0) {\n\t\t\treturn undefined; // File too large, no other files\n\t\t}\n\n\t\tconst wordDefRegExp = this.languageConfigurationService\n\t\t\t.getLanguageConfiguration(model.getLanguageId())\n\t\t\t.getWordDefinition();\n\t\tconst word = model.getWordAtPosition(position);\n\t\tconst replace = word\n\t\t\t? new Range(\n\t\t\t\t\tposition.lineNumber,\n\t\t\t\t\tword.startColumn,\n\t\t\t\t\tposition.lineNumber,\n\t\t\t\t\tword.endColumn,\n\t\t\t\t)\n\t\t\t: Range.fromPositions(position);\n\t\tconst insert = replace.setEndPosition(\n\t\t\tposition.lineNumber,\n\t\t\tposition.column,\n\t\t);\n\n\t\tconst client = await this._workerManager.withWorker();\n\t\tconst data = await client.textualSuggest(\n\t\t\tmodels,\n\t\t\tword?.word,\n\t\t\twordDefRegExp,\n\t\t);\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tduration: data.duration,\n\t\t\tsuggestions: data.words.map((word): languages.CompletionItem => {\n\t\t\t\treturn {\n\t\t\t\t\tkind: languages.CompletionItemKind.Text,\n\t\t\t\t\tlabel: word,\n\t\t\t\t\tinsertText: word,\n\t\t\t\t\trange: { insert, replace },\n\t\t\t\t};\n\t\t\t}),\n\t\t};\n\t}\n}\n\nclass WorkerManager extends Disposable {\n\tprivate readonly _modelService: IModelService;\n\tprivate _editorWorkerClient: EditorWorkerClient | null;\n\tprivate _lastWorkerUsedTime: number;\n\n\tconstructor(\n\t\tprivate readonly _workerDescriptor: IWorkerDescriptor,\n\t\t@IModelService modelService: IModelService,\n\t) {\n\t\tsuper();\n\t\tthis._modelService = modelService;\n\t\tthis._editorWorkerClient = null;\n\t\tthis._lastWorkerUsedTime = new Date().getTime();\n\n\t\tconst stopWorkerInterval = this._register(new WindowIntervalTimer());\n\t\tstopWorkerInterval.cancelAndSet(\n\t\t\t() => this._checkStopIdleWorker(),\n\t\t\tMath.round(STOP_WORKER_DELTA_TIME_MS / 2),\n\t\t\tmainWindow,\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._modelService.onModelRemoved((_) =>\n\t\t\t\tthis._checkStopEmptyWorker(),\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._editorWorkerClient) {\n\t\t\tthis._editorWorkerClient.dispose();\n\t\t\tthis._editorWorkerClient = null;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Check if the model service has no more models and stop the worker if that is the case.\n\t */\n\tprivate _checkStopEmptyWorker(): void {\n\t\tif (!this._editorWorkerClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst models = this._modelService.getModels();\n\t\tif (models.length === 0) {\n\t\t\t// There are no more models => nothing possible for me to do\n\t\t\tthis._editorWorkerClient.dispose();\n\t\t\tthis._editorWorkerClient = null;\n\t\t}\n\t}\n\n\t/**\n\t * Check if the worker has been idle for a while and then stop it.\n\t */\n\tprivate _checkStopIdleWorker(): void {\n\t\tif (!this._editorWorkerClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastWorkerUsedTime =\n\t\t\tnew Date().getTime() - this._lastWorkerUsedTime;\n\t\tif (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n\t\t\tthis._editorWorkerClient.dispose();\n\t\t\tthis._editorWorkerClient = null;\n\t\t}\n\t}\n\n\tpublic withWorker(): Promise<EditorWorkerClient> {\n\t\tthis._lastWorkerUsedTime = new Date().getTime();\n\t\tif (!this._editorWorkerClient) {\n\t\t\tthis._editorWorkerClient = new EditorWorkerClient(\n\t\t\t\tthis._workerDescriptor,\n\t\t\t\tfalse,\n\t\t\t\tthis._modelService,\n\t\t\t);\n\t\t}\n\t\treturn Promise.resolve(this._editorWorkerClient);\n\t}\n}\n\nclass SynchronousWorkerClient<T extends IDisposable>\n\timplements IWorkerClient<T>\n{\n\tprivate readonly _instance: T;\n\tpublic readonly proxy: Proxied<T>;\n\n\tconstructor(instance: T) {\n\t\tthis._instance = instance;\n\t\tthis.proxy = this._instance as Proxied<T>;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._instance.dispose();\n\t}\n\n\tpublic setChannel<T extends object>(channel: string, handler: T): void {\n\t\tthrow new Error(`Not supported`);\n\t}\n\n\tpublic getChannel<T extends object>(channel: string): Proxied<T> {\n\t\tthrow new Error(`Not supported`);\n\t}\n}\n\nexport interface IEditorWorkerClient {\n\tfhr(method: string, args: any[]): Promise<any>;\n}\n\nexport class EditorWorkerClient\n\textends Disposable\n\timplements IEditorWorkerClient\n{\n\tprivate readonly _modelService: IModelService;\n\tprivate readonly _keepIdleModels: boolean;\n\tprivate _worker: IWorkerClient<EditorSimpleWorker> | null;\n\tprivate _modelManager: WorkerTextModelSyncClient | null;\n\tprivate _disposed = false;\n\n\tconstructor(\n\t\tprivate readonly _workerDescriptor: IWorkerDescriptor,\n\t\tkeepIdleModels: boolean,\n\t\t@IModelService modelService: IModelService,\n\t) {\n\t\tsuper();\n\t\tthis._modelService = modelService;\n\t\tthis._keepIdleModels = keepIdleModels;\n\t\tthis._worker = null;\n\t\tthis._modelManager = null;\n\t}\n\n\t// foreign host request\n\tpublic fhr(method: string, args: any[]): Promise<any> {\n\t\tthrow new Error(`Not implemented!`);\n\t}\n\n\tprivate _getOrCreateWorker(): IWorkerClient<EditorSimpleWorker> {\n\t\tif (!this._worker) {\n\t\t\ttry {\n\t\t\t\tthis._worker = this._register(\n\t\t\t\t\tcreateWebWorker<EditorSimpleWorker>(this._workerDescriptor),\n\t\t\t\t);\n\t\t\t\tEditorWorkerHost.setChannel(\n\t\t\t\t\tthis._worker,\n\t\t\t\t\tthis._createEditorWorkerHost(),\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tlogOnceWebWorkerWarning(err);\n\t\t\t\tthis._worker = this._createFallbackLocalWorker();\n\t\t\t}\n\t\t}\n\t\treturn this._worker;\n\t}\n\n\tprotected async _getProxy(): Promise<Proxied<EditorSimpleWorker>> {\n\t\ttry {\n\t\t\tconst proxy = this._getOrCreateWorker().proxy;\n\t\t\tawait proxy.$ping();\n\t\t\treturn proxy;\n\t\t} catch (err) {\n\t\t\tlogOnceWebWorkerWarning(err);\n\t\t\tthis._worker = this._createFallbackLocalWorker();\n\t\t\treturn this._worker.proxy;\n\t\t}\n\t}\n\n\tprivate _createFallbackLocalWorker(): SynchronousWorkerClient<EditorSimpleWorker> {\n\t\treturn new SynchronousWorkerClient(\n\t\t\tnew EditorSimpleWorker(this._createEditorWorkerHost(), null),\n\t\t);\n\t}\n\n\tprivate _createEditorWorkerHost(): EditorWorkerHost {\n\t\treturn {\n\t\t\t$fhr: (method, args) => this.fhr(method, args),\n\t\t};\n\t}\n\n\tprivate _getOrCreateModelManager(\n\t\tproxy: Proxied<EditorSimpleWorker>,\n\t): WorkerTextModelSyncClient {\n\t\tif (!this._modelManager) {\n\t\t\tthis._modelManager = this._register(\n\t\t\t\tnew WorkerTextModelSyncClient(\n\t\t\t\t\tproxy,\n\t\t\t\t\tthis._modelService,\n\t\t\t\t\tthis._keepIdleModels,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn this._modelManager;\n\t}\n\n\tpublic async workerWithSyncedResources(\n\t\tresources: URI[],\n\t\tforceLargeModels = false,\n\t): Promise<Proxied<EditorSimpleWorker>> {\n\t\tif (this._disposed) {\n\t\t\treturn Promise.reject(canceled());\n\t\t}\n\t\tconst proxy = await this._getProxy();\n\t\tthis._getOrCreateModelManager(proxy).ensureSyncedResources(\n\t\t\tresources,\n\t\t\tforceLargeModels,\n\t\t);\n\t\treturn proxy;\n\t}\n\n\tpublic async textualSuggest(\n\t\tresources: URI[],\n\t\tleadingWord: string | undefined,\n\t\twordDefRegExp: RegExp,\n\t): Promise<{ words: string[]; duration: number } | null> {\n\t\tconst proxy = await this.workerWithSyncedResources(resources);\n\t\tconst wordDef = wordDefRegExp.source;\n\t\tconst wordDefFlags = wordDefRegExp.flags;\n\t\treturn proxy.$textualSuggest(\n\t\t\tresources.map((r) => r.toString()),\n\t\t\tleadingWord,\n\t\t\twordDef,\n\t\t\twordDefFlags,\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._disposed = true;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["c", "word"]
}
