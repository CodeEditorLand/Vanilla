import{isObject as i}from"../../../base/common/types.js";import{URI as p}from"../../../base/common/uri.js";import{createDecorator as c}from"../../../platform/instantiation/common/instantiation.js";const I=c("IWorkspaceEditService");class n{constructor(t){this.metadata=t}static convert(t){return t.edits.map(e=>{if(o.is(e))return o.lift(e);if(r.is(e))return r.lift(e);throw new Error("Unsupported edit")})}}class o extends n{constructor(e,a,d=void 0,s){super(s);this.resource=e;this.textEdit=a;this.versionId=d}static is(e){return e instanceof o?!0:i(e)&&p.isUri(e.resource)&&i(e.textEdit)}static lift(e){return e instanceof o?e:new o(e.resource,e.textEdit,e.versionId,e.metadata)}}class r extends n{constructor(e,a,d={},s){super(s);this.oldResource=e;this.newResource=a;this.options=d}static is(e){return e instanceof r?!0:i(e)&&(!!e.newResource||!!e.oldResource)}static lift(e){return e instanceof r?e:new r(e.oldResource,e.newResource,e.options,e.metadata)}}export{I as IBulkEditService,n as ResourceEdit,r as ResourceFileEdit,o as ResourceTextEdit};
