{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/services/abstractCodeEditorService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../base/browser/dom.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { LinkedList } from \"../../../base/common/linkedList.js\";\nimport * as strings from \"../../../base/common/strings.js\";\nimport type { ThemeColor } from \"../../../base/common/themables.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport type { IResourceEditorInput } from \"../../../platform/editor/common/editor.js\";\nimport {\n\ttype IColorTheme,\n\tIThemeService,\n} from \"../../../platform/theme/common/themeService.js\";\nimport {\n\ttype IContentDecorationRenderOptions,\n\ttype IDecorationRenderOptions,\n\ttype IThemeDecorationRenderOptions,\n\tisThemeColor,\n} from \"../../common/editorCommon.js\";\nimport {\n\ttype IModelDecorationOptions,\n\ttype IModelDecorationOverviewRulerOptions,\n\ttype ITextModel,\n\ttype InjectedTextOptions,\n\tOverviewRulerLane,\n\ttype TrackedRangeStickiness,\n} from \"../../common/model.js\";\nimport type { ICodeEditor, IDiffEditor } from \"../editorBrowser.js\";\nimport type {\n\tICodeEditorOpenHandler,\n\tICodeEditorService,\n} from \"./codeEditorService.js\";\n\nexport abstract class AbstractCodeEditorService\n\textends Disposable\n\timplements ICodeEditorService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onWillCreateCodeEditor = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\tpublic readonly onWillCreateCodeEditor = this._onWillCreateCodeEditor.event;\n\n\tprivate readonly _onCodeEditorAdd: Emitter<ICodeEditor> = this._register(\n\t\tnew Emitter<ICodeEditor>(),\n\t);\n\tpublic readonly onCodeEditorAdd: Event<ICodeEditor> =\n\t\tthis._onCodeEditorAdd.event;\n\n\tprivate readonly _onCodeEditorRemove: Emitter<ICodeEditor> = this._register(\n\t\tnew Emitter<ICodeEditor>(),\n\t);\n\tpublic readonly onCodeEditorRemove: Event<ICodeEditor> =\n\t\tthis._onCodeEditorRemove.event;\n\n\tprivate readonly _onWillCreateDiffEditor = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\tpublic readonly onWillCreateDiffEditor = this._onWillCreateDiffEditor.event;\n\n\tprivate readonly _onDiffEditorAdd: Emitter<IDiffEditor> = this._register(\n\t\tnew Emitter<IDiffEditor>(),\n\t);\n\tpublic readonly onDiffEditorAdd: Event<IDiffEditor> =\n\t\tthis._onDiffEditorAdd.event;\n\n\tprivate readonly _onDiffEditorRemove: Emitter<IDiffEditor> = this._register(\n\t\tnew Emitter<IDiffEditor>(),\n\t);\n\tpublic readonly onDiffEditorRemove: Event<IDiffEditor> =\n\t\tthis._onDiffEditorRemove.event;\n\n\tprivate readonly _onDidChangeTransientModelProperty: Emitter<ITextModel> =\n\t\tthis._register(new Emitter<ITextModel>());\n\tpublic readonly onDidChangeTransientModelProperty: Event<ITextModel> =\n\t\tthis._onDidChangeTransientModelProperty.event;\n\n\tprotected readonly _onDecorationTypeRegistered: Emitter<string> =\n\t\tthis._register(new Emitter<string>());\n\tpublic onDecorationTypeRegistered: Event<string> =\n\t\tthis._onDecorationTypeRegistered.event;\n\n\tprivate readonly _codeEditors: { [editorId: string]: ICodeEditor };\n\tprivate readonly _diffEditors: { [editorId: string]: IDiffEditor };\n\tprotected _globalStyleSheet: GlobalStyleSheet | null;\n\tprivate readonly _decorationOptionProviders = new Map<\n\t\tstring,\n\t\tIModelDecorationOptionsProvider\n\t>();\n\tprivate readonly _editorStyleSheets = new Map<\n\t\tstring,\n\t\tRefCountedStyleSheet\n\t>();\n\tprivate readonly _codeEditorOpenHandlers =\n\t\tnew LinkedList<ICodeEditorOpenHandler>();\n\n\tconstructor(\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis._codeEditors = Object.create(null);\n\t\tthis._diffEditors = Object.create(null);\n\t\tthis._globalStyleSheet = null;\n\t}\n\n\twillCreateCodeEditor(): void {\n\t\tthis._onWillCreateCodeEditor.fire();\n\t}\n\n\taddCodeEditor(editor: ICodeEditor): void {\n\t\tthis._codeEditors[editor.getId()] = editor;\n\t\tthis._onCodeEditorAdd.fire(editor);\n\t}\n\n\tremoveCodeEditor(editor: ICodeEditor): void {\n\t\tif (delete this._codeEditors[editor.getId()]) {\n\t\t\tthis._onCodeEditorRemove.fire(editor);\n\t\t}\n\t}\n\n\tlistCodeEditors(): ICodeEditor[] {\n\t\treturn Object.keys(this._codeEditors).map(\n\t\t\t(id) => this._codeEditors[id],\n\t\t);\n\t}\n\n\twillCreateDiffEditor(): void {\n\t\tthis._onWillCreateDiffEditor.fire();\n\t}\n\n\taddDiffEditor(editor: IDiffEditor): void {\n\t\tthis._diffEditors[editor.getId()] = editor;\n\t\tthis._onDiffEditorAdd.fire(editor);\n\t}\n\n\tremoveDiffEditor(editor: IDiffEditor): void {\n\t\tif (delete this._diffEditors[editor.getId()]) {\n\t\t\tthis._onDiffEditorRemove.fire(editor);\n\t\t}\n\t}\n\n\tlistDiffEditors(): IDiffEditor[] {\n\t\treturn Object.keys(this._diffEditors).map(\n\t\t\t(id) => this._diffEditors[id],\n\t\t);\n\t}\n\n\tgetFocusedCodeEditor(): ICodeEditor | null {\n\t\tlet editorWithWidgetFocus: ICodeEditor | null = null;\n\n\t\tconst editors = this.listCodeEditors();\n\t\tfor (const editor of editors) {\n\t\t\tif (editor.hasTextFocus()) {\n\t\t\t\t// bingo!\n\t\t\t\treturn editor;\n\t\t\t}\n\n\t\t\tif (editor.hasWidgetFocus()) {\n\t\t\t\teditorWithWidgetFocus = editor;\n\t\t\t}\n\t\t}\n\n\t\treturn editorWithWidgetFocus;\n\t}\n\n\tprivate _getOrCreateGlobalStyleSheet(): GlobalStyleSheet {\n\t\tif (!this._globalStyleSheet) {\n\t\t\tthis._globalStyleSheet = this._createGlobalStyleSheet();\n\t\t}\n\t\treturn this._globalStyleSheet;\n\t}\n\n\tprotected _createGlobalStyleSheet(): GlobalStyleSheet {\n\t\treturn new GlobalStyleSheet(dom.createStyleSheet());\n\t}\n\n\tprivate _getOrCreateStyleSheet(\n\t\teditor: ICodeEditor | undefined,\n\t): GlobalStyleSheet | RefCountedStyleSheet {\n\t\tif (!editor) {\n\t\t\treturn this._getOrCreateGlobalStyleSheet();\n\t\t}\n\t\tconst domNode = editor.getContainerDomNode();\n\t\tif (!dom.isInShadowDOM(domNode)) {\n\t\t\treturn this._getOrCreateGlobalStyleSheet();\n\t\t}\n\t\tconst editorId = editor.getId();\n\t\tif (!this._editorStyleSheets.has(editorId)) {\n\t\t\tconst refCountedStyleSheet = new RefCountedStyleSheet(\n\t\t\t\tthis,\n\t\t\t\teditorId,\n\t\t\t\tdom.createStyleSheet(domNode),\n\t\t\t);\n\t\t\tthis._editorStyleSheets.set(editorId, refCountedStyleSheet);\n\t\t}\n\t\treturn this._editorStyleSheets.get(editorId)!;\n\t}\n\n\t_removeEditorStyleSheets(editorId: string): void {\n\t\tthis._editorStyleSheets.delete(editorId);\n\t}\n\n\tpublic registerDecorationType(\n\t\tdescription: string,\n\t\tkey: string,\n\t\toptions: IDecorationRenderOptions,\n\t\tparentTypeKey?: string,\n\t\teditor?: ICodeEditor,\n\t): IDisposable {\n\t\tlet provider = this._decorationOptionProviders.get(key);\n\t\tif (!provider) {\n\t\t\tconst styleSheet = this._getOrCreateStyleSheet(editor);\n\t\t\tconst providerArgs: ProviderArguments = {\n\t\t\t\tstyleSheet: styleSheet,\n\t\t\t\tkey: key,\n\t\t\t\tparentTypeKey: parentTypeKey,\n\t\t\t\toptions: options || Object.create(null),\n\t\t\t};\n\t\t\tif (parentTypeKey) {\n\t\t\t\tprovider = new DecorationSubTypeOptionsProvider(\n\t\t\t\t\tthis._themeService,\n\t\t\t\t\tstyleSheet,\n\t\t\t\t\tproviderArgs,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tprovider = new DecorationTypeOptionsProvider(\n\t\t\t\t\tdescription,\n\t\t\t\t\tthis._themeService,\n\t\t\t\t\tstyleSheet,\n\t\t\t\t\tproviderArgs,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._decorationOptionProviders.set(key, provider);\n\t\t\tthis._onDecorationTypeRegistered.fire(key);\n\t\t}\n\t\tprovider.refCount++;\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.removeDecorationType(key);\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic listDecorationTypes(): string[] {\n\t\treturn Array.from(this._decorationOptionProviders.keys());\n\t}\n\n\tpublic removeDecorationType(key: string): void {\n\t\tconst provider = this._decorationOptionProviders.get(key);\n\t\tif (provider) {\n\t\t\tprovider.refCount--;\n\t\t\tif (provider.refCount <= 0) {\n\t\t\t\tthis._decorationOptionProviders.delete(key);\n\t\t\t\tprovider.dispose();\n\t\t\t\tthis.listCodeEditors().forEach((ed) =>\n\t\t\t\t\ted.removeDecorationsByType(key),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic resolveDecorationOptions(\n\t\tdecorationTypeKey: string,\n\t\twritable: boolean,\n\t): IModelDecorationOptions {\n\t\tconst provider = this._decorationOptionProviders.get(decorationTypeKey);\n\t\tif (!provider) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Unknown decoration type key: \" + decorationTypeKey,\n\t\t\t);\n\t\t}\n\t\treturn provider.getOptions(this, writable);\n\t}\n\n\tpublic resolveDecorationCSSRules(decorationTypeKey: string) {\n\t\tconst provider = this._decorationOptionProviders.get(decorationTypeKey);\n\t\tif (!provider) {\n\t\t\treturn null;\n\t\t}\n\t\treturn provider.resolveDecorationCSSRules();\n\t}\n\n\tprivate readonly _transientWatchers: {\n\t\t[uri: string]: ModelTransientSettingWatcher;\n\t} = {};\n\tprivate readonly _modelProperties = new Map<string, Map<string, any>>();\n\n\tpublic setModelProperty(resource: URI, key: string, value: any): void {\n\t\tconst key1 = resource.toString();\n\t\tlet dest: Map<string, any>;\n\t\tif (this._modelProperties.has(key1)) {\n\t\t\tdest = this._modelProperties.get(key1)!;\n\t\t} else {\n\t\t\tdest = new Map<string, any>();\n\t\t\tthis._modelProperties.set(key1, dest);\n\t\t}\n\n\t\tdest.set(key, value);\n\t}\n\n\tpublic getModelProperty(resource: URI, key: string): any {\n\t\tconst key1 = resource.toString();\n\t\tif (this._modelProperties.has(key1)) {\n\t\t\tconst innerMap = this._modelProperties.get(key1)!;\n\t\t\treturn innerMap.get(key);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic setTransientModelProperty(\n\t\tmodel: ITextModel,\n\t\tkey: string,\n\t\tvalue: any,\n\t): void {\n\t\tconst uri = model.uri.toString();\n\n\t\tlet w: ModelTransientSettingWatcher;\n\t\tif (this._transientWatchers.hasOwnProperty(uri)) {\n\t\t\tw = this._transientWatchers[uri];\n\t\t} else {\n\t\t\tw = new ModelTransientSettingWatcher(uri, model, this);\n\t\t\tthis._transientWatchers[uri] = w;\n\t\t}\n\n\t\tconst previousValue = w.get(key);\n\t\tif (previousValue !== value) {\n\t\t\tw.set(key, value);\n\t\t\tthis._onDidChangeTransientModelProperty.fire(model);\n\t\t}\n\t}\n\n\tpublic getTransientModelProperty(model: ITextModel, key: string): any {\n\t\tconst uri = model.uri.toString();\n\n\t\tif (!this._transientWatchers.hasOwnProperty(uri)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._transientWatchers[uri].get(key);\n\t}\n\n\tpublic getTransientModelProperties(\n\t\tmodel: ITextModel,\n\t): [string, any][] | undefined {\n\t\tconst uri = model.uri.toString();\n\n\t\tif (!this._transientWatchers.hasOwnProperty(uri)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._transientWatchers[uri]\n\t\t\t.keys()\n\t\t\t.map((key) => [key, this._transientWatchers[uri].get(key)]);\n\t}\n\n\t_removeWatcher(w: ModelTransientSettingWatcher): void {\n\t\tdelete this._transientWatchers[w.uri];\n\t}\n\n\tabstract getActiveCodeEditor(): ICodeEditor | null;\n\n\tasync openCodeEditor(\n\t\tinput: IResourceEditorInput,\n\t\tsource: ICodeEditor | null,\n\t\tsideBySide?: boolean,\n\t): Promise<ICodeEditor | null> {\n\t\tfor (const handler of this._codeEditorOpenHandlers) {\n\t\t\tconst candidate = await handler(input, source, sideBySide);\n\t\t\tif (candidate !== null) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tregisterCodeEditorOpenHandler(\n\t\thandler: ICodeEditorOpenHandler,\n\t): IDisposable {\n\t\tconst rm = this._codeEditorOpenHandlers.unshift(handler);\n\t\treturn toDisposable(rm);\n\t}\n}\n\nexport class ModelTransientSettingWatcher {\n\tpublic readonly uri: string;\n\tprivate readonly _values: { [key: string]: any };\n\n\tconstructor(\n\t\turi: string,\n\t\tmodel: ITextModel,\n\t\towner: AbstractCodeEditorService,\n\t) {\n\t\tthis.uri = uri;\n\t\tthis._values = {};\n\t\tmodel.onWillDispose(() => owner._removeWatcher(this));\n\t}\n\n\tpublic set(key: string, value: any): void {\n\t\tthis._values[key] = value;\n\t}\n\n\tpublic get(key: string): any {\n\t\treturn this._values[key];\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn Object.keys(this._values);\n\t}\n}\n\nclass RefCountedStyleSheet {\n\tprivate readonly _parent: AbstractCodeEditorService;\n\tprivate readonly _editorId: string;\n\tprivate readonly _styleSheet: HTMLStyleElement;\n\tprivate _refCount: number;\n\n\tpublic get sheet() {\n\t\treturn this._styleSheet.sheet as CSSStyleSheet;\n\t}\n\n\tconstructor(\n\t\tparent: AbstractCodeEditorService,\n\t\teditorId: string,\n\t\tstyleSheet: HTMLStyleElement,\n\t) {\n\t\tthis._parent = parent;\n\t\tthis._editorId = editorId;\n\t\tthis._styleSheet = styleSheet;\n\t\tthis._refCount = 0;\n\t}\n\n\tpublic ref(): void {\n\t\tthis._refCount++;\n\t}\n\n\tpublic unref(): void {\n\t\tthis._refCount--;\n\t\tif (this._refCount === 0) {\n\t\t\tthis._styleSheet.remove();\n\t\t\tthis._parent._removeEditorStyleSheets(this._editorId);\n\t\t}\n\t}\n\n\tpublic insertRule(selector: string, rule: string): void {\n\t\tdom.createCSSRule(selector, rule, this._styleSheet);\n\t}\n\n\tpublic removeRulesContainingSelector(ruleName: string): void {\n\t\tdom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\n\t}\n}\n\nexport class GlobalStyleSheet {\n\tprivate readonly _styleSheet: HTMLStyleElement;\n\n\tpublic get sheet() {\n\t\treturn this._styleSheet.sheet as CSSStyleSheet;\n\t}\n\n\tconstructor(styleSheet: HTMLStyleElement) {\n\t\tthis._styleSheet = styleSheet;\n\t}\n\n\tpublic ref(): void {}\n\n\tpublic unref(): void {}\n\n\tpublic insertRule(selector: string, rule: string): void {\n\t\tdom.createCSSRule(selector, rule, this._styleSheet);\n\t}\n\n\tpublic removeRulesContainingSelector(ruleName: string): void {\n\t\tdom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\n\t}\n}\n\ninterface IModelDecorationOptionsProvider extends IDisposable {\n\trefCount: number;\n\tgetOptions(\n\t\tcodeEditorService: AbstractCodeEditorService,\n\t\twritable: boolean,\n\t): IModelDecorationOptions;\n\tresolveDecorationCSSRules(): CSSRuleList;\n}\n\nclass DecorationSubTypeOptionsProvider\n\timplements IModelDecorationOptionsProvider\n{\n\tprivate readonly _styleSheet: GlobalStyleSheet | RefCountedStyleSheet;\n\tpublic refCount: number;\n\n\tprivate readonly _parentTypeKey: string;\n\tprivate _beforeContentRules: DecorationCSSRules | null;\n\tprivate _afterContentRules: DecorationCSSRules | null;\n\n\tconstructor(\n\t\tthemeService: IThemeService,\n\t\tstyleSheet: GlobalStyleSheet | RefCountedStyleSheet,\n\t\tproviderArgs: ProviderArguments,\n\t) {\n\t\tthis._styleSheet = styleSheet;\n\t\tthis._styleSheet.ref();\n\t\tthis._parentTypeKey = providerArgs.parentTypeKey!;\n\t\tthis.refCount = 0;\n\n\t\tthis._beforeContentRules = new DecorationCSSRules(\n\t\t\tModelDecorationCSSRuleType.BeforeContentClassName,\n\t\t\tproviderArgs,\n\t\t\tthemeService,\n\t\t);\n\t\tthis._afterContentRules = new DecorationCSSRules(\n\t\t\tModelDecorationCSSRuleType.AfterContentClassName,\n\t\t\tproviderArgs,\n\t\t\tthemeService,\n\t\t);\n\t}\n\n\tpublic getOptions(\n\t\tcodeEditorService: AbstractCodeEditorService,\n\t\twritable: boolean,\n\t): IModelDecorationOptions {\n\t\tconst options = codeEditorService.resolveDecorationOptions(\n\t\t\tthis._parentTypeKey,\n\t\t\ttrue,\n\t\t);\n\t\tif (this._beforeContentRules) {\n\t\t\toptions.beforeContentClassName = this._beforeContentRules.className;\n\t\t}\n\t\tif (this._afterContentRules) {\n\t\t\toptions.afterContentClassName = this._afterContentRules.className;\n\t\t}\n\t\treturn options;\n\t}\n\n\tpublic resolveDecorationCSSRules(): CSSRuleList {\n\t\treturn this._styleSheet.sheet.cssRules;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._beforeContentRules) {\n\t\t\tthis._beforeContentRules.dispose();\n\t\t\tthis._beforeContentRules = null;\n\t\t}\n\t\tif (this._afterContentRules) {\n\t\t\tthis._afterContentRules.dispose();\n\t\t\tthis._afterContentRules = null;\n\t\t}\n\t\tthis._styleSheet.unref();\n\t}\n}\n\ninterface ProviderArguments {\n\tstyleSheet: GlobalStyleSheet | RefCountedStyleSheet;\n\tkey: string;\n\tparentTypeKey?: string;\n\toptions: IDecorationRenderOptions;\n}\n\nclass DecorationTypeOptionsProvider implements IModelDecorationOptionsProvider {\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _styleSheet: GlobalStyleSheet | RefCountedStyleSheet;\n\tpublic refCount: number;\n\n\tpublic description: string;\n\tpublic className: string | undefined;\n\tpublic inlineClassName: string | undefined;\n\tpublic inlineClassNameAffectsLetterSpacing: boolean | undefined;\n\tpublic beforeContentClassName: string | undefined;\n\tpublic afterContentClassName: string | undefined;\n\tpublic glyphMarginClassName: string | undefined;\n\tpublic isWholeLine: boolean;\n\tpublic overviewRuler: IModelDecorationOverviewRulerOptions | undefined;\n\tpublic stickiness: TrackedRangeStickiness | undefined;\n\tpublic beforeInjectedText: InjectedTextOptions | undefined;\n\tpublic afterInjectedText: InjectedTextOptions | undefined;\n\n\tconstructor(\n\t\tdescription: string,\n\t\tthemeService: IThemeService,\n\t\tstyleSheet: GlobalStyleSheet | RefCountedStyleSheet,\n\t\tproviderArgs: ProviderArguments,\n\t) {\n\t\tthis.description = description;\n\n\t\tthis._styleSheet = styleSheet;\n\t\tthis._styleSheet.ref();\n\t\tthis.refCount = 0;\n\n\t\tconst createCSSRules = (type: ModelDecorationCSSRuleType) => {\n\t\t\tconst rules = new DecorationCSSRules(\n\t\t\t\ttype,\n\t\t\t\tproviderArgs,\n\t\t\t\tthemeService,\n\t\t\t);\n\t\t\tthis._disposables.add(rules);\n\t\t\tif (rules.hasContent) {\n\t\t\t\treturn rules.className;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t\tconst createInlineCSSRules = (type: ModelDecorationCSSRuleType) => {\n\t\t\tconst rules = new DecorationCSSRules(\n\t\t\t\ttype,\n\t\t\t\tproviderArgs,\n\t\t\t\tthemeService,\n\t\t\t);\n\t\t\tthis._disposables.add(rules);\n\t\t\tif (rules.hasContent) {\n\t\t\t\treturn {\n\t\t\t\t\tclassName: rules.className,\n\t\t\t\t\thasLetterSpacing: rules.hasLetterSpacing,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tthis.className = createCSSRules(ModelDecorationCSSRuleType.ClassName);\n\t\tconst inlineData = createInlineCSSRules(\n\t\t\tModelDecorationCSSRuleType.InlineClassName,\n\t\t);\n\t\tif (inlineData) {\n\t\t\tthis.inlineClassName = inlineData.className;\n\t\t\tthis.inlineClassNameAffectsLetterSpacing =\n\t\t\t\tinlineData.hasLetterSpacing;\n\t\t}\n\t\tthis.beforeContentClassName = createCSSRules(\n\t\t\tModelDecorationCSSRuleType.BeforeContentClassName,\n\t\t);\n\t\tthis.afterContentClassName = createCSSRules(\n\t\t\tModelDecorationCSSRuleType.AfterContentClassName,\n\t\t);\n\n\t\tif (\n\t\t\tproviderArgs.options.beforeInjectedText &&\n\t\t\tproviderArgs.options.beforeInjectedText.contentText\n\t\t) {\n\t\t\tconst beforeInlineData = createInlineCSSRules(\n\t\t\t\tModelDecorationCSSRuleType.BeforeInjectedTextClassName,\n\t\t\t);\n\t\t\tthis.beforeInjectedText = {\n\t\t\t\tcontent: providerArgs.options.beforeInjectedText.contentText,\n\t\t\t\tinlineClassName: beforeInlineData?.className,\n\t\t\t\tinlineClassNameAffectsLetterSpacing:\n\t\t\t\t\tbeforeInlineData?.hasLetterSpacing ||\n\t\t\t\t\tproviderArgs.options.beforeInjectedText\n\t\t\t\t\t\t.affectsLetterSpacing,\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tproviderArgs.options.afterInjectedText &&\n\t\t\tproviderArgs.options.afterInjectedText.contentText\n\t\t) {\n\t\t\tconst afterInlineData = createInlineCSSRules(\n\t\t\t\tModelDecorationCSSRuleType.AfterInjectedTextClassName,\n\t\t\t);\n\t\t\tthis.afterInjectedText = {\n\t\t\t\tcontent: providerArgs.options.afterInjectedText.contentText,\n\t\t\t\tinlineClassName: afterInlineData?.className,\n\t\t\t\tinlineClassNameAffectsLetterSpacing:\n\t\t\t\t\tafterInlineData?.hasLetterSpacing ||\n\t\t\t\t\tproviderArgs.options.afterInjectedText.affectsLetterSpacing,\n\t\t\t};\n\t\t}\n\n\t\tthis.glyphMarginClassName = createCSSRules(\n\t\t\tModelDecorationCSSRuleType.GlyphMarginClassName,\n\t\t);\n\n\t\tconst options = providerArgs.options;\n\t\tthis.isWholeLine = Boolean(options.isWholeLine);\n\t\tthis.stickiness = options.rangeBehavior;\n\n\t\tconst lightOverviewRulerColor =\n\t\t\t(options.light && options.light.overviewRulerColor) ||\n\t\t\toptions.overviewRulerColor;\n\t\tconst darkOverviewRulerColor =\n\t\t\t(options.dark && options.dark.overviewRulerColor) ||\n\t\t\toptions.overviewRulerColor;\n\t\tif (\n\t\t\ttypeof lightOverviewRulerColor !== \"undefined\" ||\n\t\t\ttypeof darkOverviewRulerColor !== \"undefined\"\n\t\t) {\n\t\t\tthis.overviewRuler = {\n\t\t\t\tcolor: lightOverviewRulerColor || darkOverviewRulerColor,\n\t\t\t\tdarkColor: darkOverviewRulerColor || lightOverviewRulerColor,\n\t\t\t\tposition: options.overviewRulerLane || OverviewRulerLane.Center,\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic getOptions(\n\t\tcodeEditorService: AbstractCodeEditorService,\n\t\twritable: boolean,\n\t): IModelDecorationOptions {\n\t\tif (!writable) {\n\t\t\treturn this;\n\t\t}\n\n\t\treturn {\n\t\t\tdescription: this.description,\n\t\t\tinlineClassName: this.inlineClassName,\n\t\t\tbeforeContentClassName: this.beforeContentClassName,\n\t\t\tafterContentClassName: this.afterContentClassName,\n\t\t\tclassName: this.className,\n\t\t\tglyphMarginClassName: this.glyphMarginClassName,\n\t\t\tisWholeLine: this.isWholeLine,\n\t\t\toverviewRuler: this.overviewRuler,\n\t\t\tstickiness: this.stickiness,\n\t\t\tbefore: this.beforeInjectedText,\n\t\t\tafter: this.afterInjectedText,\n\t\t};\n\t}\n\n\tpublic resolveDecorationCSSRules(): CSSRuleList {\n\t\treturn this._styleSheet.sheet.rules;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._styleSheet.unref();\n\t}\n}\n\nexport const _CSS_MAP: { [prop: string]: string } = {\n\tcolor: \"color:{0} !important;\",\n\topacity: \"opacity:{0};\",\n\tbackgroundColor: \"background-color:{0};\",\n\n\toutline: \"outline:{0};\",\n\toutlineColor: \"outline-color:{0};\",\n\toutlineStyle: \"outline-style:{0};\",\n\toutlineWidth: \"outline-width:{0};\",\n\n\tborder: \"border:{0};\",\n\tborderColor: \"border-color:{0};\",\n\tborderRadius: \"border-radius:{0};\",\n\tborderSpacing: \"border-spacing:{0};\",\n\tborderStyle: \"border-style:{0};\",\n\tborderWidth: \"border-width:{0};\",\n\n\tfontStyle: \"font-style:{0};\",\n\tfontWeight: \"font-weight:{0};\",\n\tfontSize: \"font-size:{0};\",\n\tfontFamily: \"font-family:{0};\",\n\ttextDecoration: \"text-decoration:{0};\",\n\tcursor: \"cursor:{0};\",\n\tletterSpacing: \"letter-spacing:{0};\",\n\n\tgutterIconPath: \"background:{0} center center no-repeat;\",\n\tgutterIconSize: \"background-size:{0};\",\n\n\tcontentText: \"content:'{0}';\",\n\tcontentIconPath: \"content:{0};\",\n\tmargin: \"margin:{0};\",\n\tpadding: \"padding:{0};\",\n\twidth: \"width:{0};\",\n\theight: \"height:{0};\",\n\n\tverticalAlign: \"vertical-align:{0};\",\n};\n\nclass DecorationCSSRules {\n\tprivate _theme: IColorTheme;\n\tprivate readonly _className: string;\n\tprivate readonly _unThemedSelector: string;\n\tprivate _hasContent: boolean;\n\tprivate _hasLetterSpacing: boolean;\n\tprivate readonly _ruleType: ModelDecorationCSSRuleType;\n\tprivate _themeListener: IDisposable | null;\n\tprivate readonly _providerArgs: ProviderArguments;\n\tprivate _usesThemeColors: boolean;\n\n\tconstructor(\n\t\truleType: ModelDecorationCSSRuleType,\n\t\tproviderArgs: ProviderArguments,\n\t\tthemeService: IThemeService,\n\t) {\n\t\tthis._theme = themeService.getColorTheme();\n\t\tthis._ruleType = ruleType;\n\t\tthis._providerArgs = providerArgs;\n\t\tthis._usesThemeColors = false;\n\t\tthis._hasContent = false;\n\t\tthis._hasLetterSpacing = false;\n\n\t\tlet className = CSSNameHelper.getClassName(\n\t\t\tthis._providerArgs.key,\n\t\t\truleType,\n\t\t);\n\t\tif (this._providerArgs.parentTypeKey) {\n\t\t\tclassName =\n\t\t\t\tclassName +\n\t\t\t\t\" \" +\n\t\t\t\tCSSNameHelper.getClassName(\n\t\t\t\t\tthis._providerArgs.parentTypeKey,\n\t\t\t\t\truleType,\n\t\t\t\t);\n\t\t}\n\t\tthis._className = className;\n\n\t\tthis._unThemedSelector = CSSNameHelper.getSelector(\n\t\t\tthis._providerArgs.key,\n\t\t\tthis._providerArgs.parentTypeKey,\n\t\t\truleType,\n\t\t);\n\n\t\tthis._buildCSS();\n\n\t\tif (this._usesThemeColors) {\n\t\t\tthis._themeListener = themeService.onDidColorThemeChange(\n\t\t\t\t(theme) => {\n\t\t\t\t\tthis._theme = themeService.getColorTheme();\n\t\t\t\t\tthis._removeCSS();\n\t\t\t\t\tthis._buildCSS();\n\t\t\t\t},\n\t\t\t);\n\t\t} else {\n\t\t\tthis._themeListener = null;\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tif (this._hasContent) {\n\t\t\tthis._removeCSS();\n\t\t\tthis._hasContent = false;\n\t\t}\n\t\tif (this._themeListener) {\n\t\t\tthis._themeListener.dispose();\n\t\t\tthis._themeListener = null;\n\t\t}\n\t}\n\n\tpublic get hasContent(): boolean {\n\t\treturn this._hasContent;\n\t}\n\n\tpublic get hasLetterSpacing(): boolean {\n\t\treturn this._hasLetterSpacing;\n\t}\n\n\tpublic get className(): string {\n\t\treturn this._className;\n\t}\n\n\tprivate _buildCSS(): void {\n\t\tconst options = this._providerArgs.options;\n\t\tlet unthemedCSS: string, lightCSS: string, darkCSS: string;\n\t\tswitch (this._ruleType) {\n\t\t\tcase ModelDecorationCSSRuleType.ClassName:\n\t\t\t\tunthemedCSS =\n\t\t\t\t\tthis.getCSSTextForModelDecorationClassName(options);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationClassName(\n\t\t\t\t\toptions.light,\n\t\t\t\t);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationClassName(\n\t\t\t\t\toptions.dark,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.InlineClassName:\n\t\t\t\tunthemedCSS =\n\t\t\t\t\tthis.getCSSTextForModelDecorationInlineClassName(options);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationInlineClassName(\n\t\t\t\t\toptions.light,\n\t\t\t\t);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationInlineClassName(\n\t\t\t\t\toptions.dark,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.GlyphMarginClassName:\n\t\t\t\tunthemedCSS =\n\t\t\t\t\tthis.getCSSTextForModelDecorationGlyphMarginClassName(\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\t\t\t\tlightCSS =\n\t\t\t\t\tthis.getCSSTextForModelDecorationGlyphMarginClassName(\n\t\t\t\t\t\toptions.light,\n\t\t\t\t\t);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(\n\t\t\t\t\toptions.dark,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.BeforeContentClassName:\n\t\t\t\tunthemedCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.before,\n\t\t\t\t);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.light && options.light.before,\n\t\t\t\t);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.dark && options.dark.before,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.AfterContentClassName:\n\t\t\t\tunthemedCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.after,\n\t\t\t\t);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.light && options.light.after,\n\t\t\t\t);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.dark && options.dark.after,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.BeforeInjectedTextClassName:\n\t\t\t\tunthemedCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.beforeInjectedText,\n\t\t\t\t);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.light && options.light.beforeInjectedText,\n\t\t\t\t);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.dark && options.dark.beforeInjectedText,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.AfterInjectedTextClassName:\n\t\t\t\tunthemedCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.afterInjectedText,\n\t\t\t\t);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.light && options.light.afterInjectedText,\n\t\t\t\t);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationContentClassName(\n\t\t\t\t\toptions.dark && options.dark.afterInjectedText,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown rule type: \" + this._ruleType);\n\t\t}\n\t\tconst sheet = this._providerArgs.styleSheet;\n\n\t\tlet hasContent = false;\n\t\tif (unthemedCSS.length > 0) {\n\t\t\tsheet.insertRule(this._unThemedSelector, unthemedCSS);\n\t\t\thasContent = true;\n\t\t}\n\t\tif (lightCSS.length > 0) {\n\t\t\tsheet.insertRule(\n\t\t\t\t`.vs${this._unThemedSelector}, .hc-light${this._unThemedSelector}`,\n\t\t\t\tlightCSS,\n\t\t\t);\n\t\t\thasContent = true;\n\t\t}\n\t\tif (darkCSS.length > 0) {\n\t\t\tsheet.insertRule(\n\t\t\t\t`.vs-dark${this._unThemedSelector}, .hc-black${this._unThemedSelector}`,\n\t\t\t\tdarkCSS,\n\t\t\t);\n\t\t\thasContent = true;\n\t\t}\n\t\tthis._hasContent = hasContent;\n\t}\n\n\tprivate _removeCSS(): void {\n\t\tthis._providerArgs.styleSheet.removeRulesContainingSelector(\n\t\t\tthis._unThemedSelector,\n\t\t);\n\t}\n\n\t/**\n\t * Build the CSS for decorations styled via `className`.\n\t */\n\tprivate getCSSTextForModelDecorationClassName(\n\t\topts: IThemeDecorationRenderOptions | undefined,\n\t): string {\n\t\tif (!opts) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst cssTextArr: string[] = [];\n\t\tthis.collectCSSText(opts, [\"backgroundColor\"], cssTextArr);\n\t\tthis.collectCSSText(\n\t\t\topts,\n\t\t\t[\"outline\", \"outlineColor\", \"outlineStyle\", \"outlineWidth\"],\n\t\t\tcssTextArr,\n\t\t);\n\t\tthis.collectBorderSettingsCSSText(opts, cssTextArr);\n\t\treturn cssTextArr.join(\"\");\n\t}\n\n\t/**\n\t * Build the CSS for decorations styled via `inlineClassName`.\n\t */\n\tprivate getCSSTextForModelDecorationInlineClassName(\n\t\topts: IThemeDecorationRenderOptions | undefined,\n\t): string {\n\t\tif (!opts) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst cssTextArr: string[] = [];\n\t\tthis.collectCSSText(\n\t\t\topts,\n\t\t\t[\n\t\t\t\t\"fontStyle\",\n\t\t\t\t\"fontWeight\",\n\t\t\t\t\"textDecoration\",\n\t\t\t\t\"cursor\",\n\t\t\t\t\"color\",\n\t\t\t\t\"opacity\",\n\t\t\t\t\"letterSpacing\",\n\t\t\t],\n\t\t\tcssTextArr,\n\t\t);\n\t\tif (opts.letterSpacing) {\n\t\t\tthis._hasLetterSpacing = true;\n\t\t}\n\t\treturn cssTextArr.join(\"\");\n\t}\n\n\t/**\n\t * Build the CSS for decorations styled before or after content.\n\t */\n\tprivate getCSSTextForModelDecorationContentClassName(\n\t\topts: IContentDecorationRenderOptions | undefined,\n\t): string {\n\t\tif (!opts) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst cssTextArr: string[] = [];\n\n\t\tif (typeof opts !== \"undefined\") {\n\t\t\tthis.collectBorderSettingsCSSText(opts, cssTextArr);\n\t\t\tif (typeof opts.contentIconPath !== \"undefined\") {\n\t\t\t\tcssTextArr.push(\n\t\t\t\t\tstrings.format(\n\t\t\t\t\t\t_CSS_MAP.contentIconPath,\n\t\t\t\t\t\tdom.asCSSUrl(URI.revive(opts.contentIconPath)),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (typeof opts.contentText === \"string\") {\n\t\t\t\tconst truncated = opts.contentText.match(/^.*$/m)![0]; // only take first line\n\t\t\t\tconst escaped = truncated.replace(/['\\\\]/g, \"\\\\$&\");\n\n\t\t\t\tcssTextArr.push(strings.format(_CSS_MAP.contentText, escaped));\n\t\t\t}\n\t\t\tthis.collectCSSText(\n\t\t\t\topts,\n\t\t\t\t[\n\t\t\t\t\t\"verticalAlign\",\n\t\t\t\t\t\"fontStyle\",\n\t\t\t\t\t\"fontWeight\",\n\t\t\t\t\t\"fontSize\",\n\t\t\t\t\t\"fontFamily\",\n\t\t\t\t\t\"textDecoration\",\n\t\t\t\t\t\"color\",\n\t\t\t\t\t\"opacity\",\n\t\t\t\t\t\"backgroundColor\",\n\t\t\t\t\t\"margin\",\n\t\t\t\t\t\"padding\",\n\t\t\t\t],\n\t\t\t\tcssTextArr,\n\t\t\t);\n\t\t\tif (this.collectCSSText(opts, [\"width\", \"height\"], cssTextArr)) {\n\t\t\t\tcssTextArr.push(\"display:inline-block;\");\n\t\t\t}\n\t\t}\n\n\t\treturn cssTextArr.join(\"\");\n\t}\n\n\t/**\n\t * Build the CSS for decorations styled via `glyphMarginClassName`.\n\t */\n\tprivate getCSSTextForModelDecorationGlyphMarginClassName(\n\t\topts: IThemeDecorationRenderOptions | undefined,\n\t): string {\n\t\tif (!opts) {\n\t\t\treturn \"\";\n\t\t}\n\t\tconst cssTextArr: string[] = [];\n\n\t\tif (typeof opts.gutterIconPath !== \"undefined\") {\n\t\t\tcssTextArr.push(\n\t\t\t\tstrings.format(\n\t\t\t\t\t_CSS_MAP.gutterIconPath,\n\t\t\t\t\tdom.asCSSUrl(URI.revive(opts.gutterIconPath)),\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (typeof opts.gutterIconSize !== \"undefined\") {\n\t\t\t\tcssTextArr.push(\n\t\t\t\t\tstrings.format(\n\t\t\t\t\t\t_CSS_MAP.gutterIconSize,\n\t\t\t\t\t\topts.gutterIconSize,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn cssTextArr.join(\"\");\n\t}\n\n\tprivate collectBorderSettingsCSSText(\n\t\topts: any,\n\t\tcssTextArr: string[],\n\t): boolean {\n\t\tif (\n\t\t\tthis.collectCSSText(\n\t\t\t\topts,\n\t\t\t\t[\n\t\t\t\t\t\"border\",\n\t\t\t\t\t\"borderColor\",\n\t\t\t\t\t\"borderRadius\",\n\t\t\t\t\t\"borderSpacing\",\n\t\t\t\t\t\"borderStyle\",\n\t\t\t\t\t\"borderWidth\",\n\t\t\t\t],\n\t\t\t\tcssTextArr,\n\t\t\t)\n\t\t) {\n\t\t\tcssTextArr.push(strings.format(\"box-sizing: border-box;\"));\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate collectCSSText(\n\t\topts: any,\n\t\tproperties: string[],\n\t\tcssTextArr: string[],\n\t): boolean {\n\t\tconst lenBefore = cssTextArr.length;\n\t\tfor (const property of properties) {\n\t\t\tconst value = this.resolveValue(opts[property]);\n\t\t\tif (typeof value === \"string\") {\n\t\t\t\tcssTextArr.push(strings.format(_CSS_MAP[property], value));\n\t\t\t}\n\t\t}\n\t\treturn cssTextArr.length !== lenBefore;\n\t}\n\n\tprivate resolveValue(value: string | ThemeColor): string {\n\t\tif (isThemeColor(value)) {\n\t\t\tthis._usesThemeColors = true;\n\t\t\tconst color = this._theme.getColor(value.id);\n\t\t\tif (color) {\n\t\t\t\treturn color.toString();\n\t\t\t}\n\t\t\treturn \"transparent\";\n\t\t}\n\t\treturn value;\n\t}\n}\n\nenum ModelDecorationCSSRuleType {\n\tClassName = 0,\n\tInlineClassName = 1,\n\tGlyphMarginClassName = 2,\n\tBeforeContentClassName = 3,\n\tAfterContentClassName = 4,\n\tBeforeInjectedTextClassName = 5,\n\tAfterInjectedTextClassName = 6,\n}\n\nclass CSSNameHelper {\n\tpublic static getClassName(\n\t\tkey: string,\n\t\ttype: ModelDecorationCSSRuleType,\n\t): string {\n\t\treturn \"ced-\" + key + \"-\" + type;\n\t}\n\n\tpublic static getSelector(\n\t\tkey: string,\n\t\tparentKey: string | undefined,\n\t\truleType: ModelDecorationCSSRuleType,\n\t): string {\n\t\tlet selector = \".monaco-editor .\" + this.getClassName(key, ruleType);\n\t\tif (parentKey) {\n\t\t\tselector = selector + \".\" + this.getClassName(parentKey, ruleType);\n\t\t}\n\t\tif (ruleType === ModelDecorationCSSRuleType.BeforeContentClassName) {\n\t\t\tselector += \"::before\";\n\t\t} else if (\n\t\t\truleType === ModelDecorationCSSRuleType.AfterContentClassName\n\t\t) {\n\t\t\tselector += \"::after\";\n\t\t}\n\t\treturn selector;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ModelDecorationCSSRuleType"]
}
