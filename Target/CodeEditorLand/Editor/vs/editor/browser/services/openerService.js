var U=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var m=(i,e,t,r)=>{for(var n=r>1?void 0:r?_(e,t):e,o=i.length-1,a;o>=0;o--)(a=i[o])&&(n=(r?a(e,t,n):a(n))||n);return r&&n&&U(e,t,n),n},l=(i,e)=>(t,r)=>e(t,r,i);import*as w from"../../../base/browser/dom.js";import{mainWindow as R}from"../../../base/browser/window.js";import{CancellationToken as v}from"../../../base/common/cancellation.js";import"../../../base/common/lifecycle.js";import{LinkedList as c}from"../../../base/common/linkedList.js";import{ResourceMap as S}from"../../../base/common/map.js";import{parse as h}from"../../../base/common/marshalling.js";import{matchesScheme as C,matchesSomeScheme as I,Schemas as s}from"../../../base/common/network.js";import{normalizePath as b}from"../../../base/common/resources.js";import{URI as u}from"../../../base/common/uri.js";import{ICommandService as O}from"../../../platform/commands/common/commands.js";import{EditorOpenSource as x}from"../../../platform/editor/common/editor.js";import{extractSelection as g}from"../../../platform/opener/common/opener.js";import{ICodeEditorService as y}from"./codeEditorService.js";let p=class{constructor(e){this._commandService=e}async open(e,t){if(!C(e,s.command))return!1;if(!t?.allowCommands||(typeof e=="string"&&(e=u.parse(e)),Array.isArray(t.allowCommands)&&!t.allowCommands.includes(e.path)))return!0;let r=[];try{r=h(decodeURIComponent(e.query))}catch{try{r=h(e.query)}catch{}}return Array.isArray(r)||(r=[r]),await this._commandService.executeCommand(e.path,...r),!0}};p=m([l(0,O)],p);let d=class{constructor(e){this._editorService=e}async open(e,t){typeof e=="string"&&(e=u.parse(e));const{selection:r,uri:n}=g(e);return e=n,e.scheme===s.file&&(e=b(e)),await this._editorService.openCodeEditor({resource:e,options:{selection:r,source:t?.fromUserGesture?x.USER:x.API,...t?.editorOptions}},this._editorService.getFocusedCodeEditor(),t?.openToSide),!0}};d=m([l(0,y)],d);let f=class{_openers=new c;_validators=new c;_resolvers=new c;_resolvedUriTargets=new S(e=>e.with({path:null,fragment:null,query:null}).toString());_defaultExternalOpener;_externalOpeners=new c;constructor(e,t){this._defaultExternalOpener={openExternal:async r=>(I(r,s.http,s.https)?w.windowOpenNoOpener(r):R.location.href=r,!0)},this._openers.push({open:async(r,n)=>n?.openExternal||I(r,s.mailto,s.http,s.https,s.vsls)?(await this._doOpenExternal(r,n),!0):!1}),this._openers.push(new p(t)),this._openers.push(new d(e))}registerOpener(e){return{dispose:this._openers.unshift(e)}}registerValidator(e){return{dispose:this._validators.push(e)}}registerExternalUriResolver(e){return{dispose:this._resolvers.push(e)}}setDefaultExternalOpener(e){this._defaultExternalOpener=e}registerExternalOpener(e){return{dispose:this._externalOpeners.push(e)}}async open(e,t){const r=typeof e=="string"?u.parse(e):e,n=this._resolvedUriTargets.get(r)??e;for(const o of this._validators)if(!await o.shouldOpen(n,t))return!1;for(const o of this._openers)if(await o.open(e,t))return!0;return!1}async resolveExternalUri(e,t){for(const r of this._resolvers)try{const n=await r.resolveExternalUri(e,t);if(n)return this._resolvedUriTargets.has(n.resolved)||this._resolvedUriTargets.set(n.resolved,e),n}catch{}throw new Error("Could not resolve external URI: "+e.toString())}async _doOpenExternal(e,t){const r=typeof e=="string"?u.parse(e):e;let n;try{n=(await this.resolveExternalUri(r,t)).resolved}catch{n=r}let o;if(typeof e=="string"&&r.toString()===n.toString()?o=e:o=encodeURI(n.toString(!0)),t?.allowContributedOpeners){const a=typeof t?.allowContributedOpeners=="string"?t?.allowContributedOpeners:void 0;for(const E of this._externalOpeners)if(await E.openExternal(o,{sourceUri:r,preferredOpenerId:a},v.None))return!0}return this._defaultExternalOpener.openExternal(o,{sourceUri:r},v.None)}dispose(){this._validators.clear()}};f=m([l(0,y),l(1,O)],f);export{f as OpenerService};
