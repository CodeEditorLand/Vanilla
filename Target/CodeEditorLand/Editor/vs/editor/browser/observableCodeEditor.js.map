{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/observableCodeEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equalsIfDefined, itemsEquals } from \"../../base/common/equals.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\ttype ITransaction,\n\tTransactionImpl,\n\tautorun,\n\tautorunOpts,\n\tderived,\n\tderivedOpts,\n\tderivedWithSetter,\n\tobservableFromEvent,\n\tobservableSignal,\n\tobservableValue,\n\tobservableValueOpts,\n} from \"../../base/common/observable.js\";\nimport {\n\tEditorOption,\n\ttype FindComputedEditorOptionValueById,\n} from \"../common/config/editorOptions.js\";\nimport { Position } from \"../common/core/position.js\";\nimport { Selection } from \"../common/core/selection.js\";\nimport type { ICursorSelectionChangedEvent } from \"../common/cursorEvents.js\";\nimport type { IModelDeltaDecoration, ITextModel } from \"../common/model.js\";\nimport type { IModelContentChangedEvent } from \"../common/textModelEvents.js\";\nimport type {\n\tICodeEditor,\n\tIOverlayWidget,\n\tIOverlayWidgetPosition,\n} from \"./editorBrowser.js\";\n\n/**\n * Returns a facade for the code editor that provides observables for various states/events.\n */\nexport function observableCodeEditor(\n\teditor: ICodeEditor,\n): ObservableCodeEditor {\n\treturn ObservableCodeEditor.get(editor);\n}\n\nexport class ObservableCodeEditor extends Disposable {\n\tprivate static readonly _map = new Map<ICodeEditor, ObservableCodeEditor>();\n\n\t/**\n\t * Make sure that editor is not disposed yet!\n\t */\n\tpublic static get(editor: ICodeEditor): ObservableCodeEditor {\n\t\tlet result = ObservableCodeEditor._map.get(editor);\n\t\tif (!result) {\n\t\t\tresult = new ObservableCodeEditor(editor);\n\t\t\tObservableCodeEditor._map.set(editor, result);\n\t\t\tconst d = editor.onDidDispose(() => {\n\t\t\t\tconst item = ObservableCodeEditor._map.get(editor);\n\t\t\t\tif (item) {\n\t\t\t\t\tObservableCodeEditor._map.delete(editor);\n\t\t\t\t\titem.dispose();\n\t\t\t\t\td.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _updateCounter = 0;\n\tprivate _currentTransaction: TransactionImpl | undefined = undefined;\n\n\tprivate _beginUpdate(): void {\n\t\tthis._updateCounter++;\n\t\tif (this._updateCounter === 1) {\n\t\t\tthis._currentTransaction = new TransactionImpl(() => {\n\t\t\t\t/** @description Update editor state */\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _endUpdate(): void {\n\t\tthis._updateCounter--;\n\t\tif (this._updateCounter === 0) {\n\t\t\tconst t = this._currentTransaction!;\n\t\t\tthis._currentTransaction = undefined;\n\t\t\tt.finish();\n\t\t}\n\t}\n\n\tprivate constructor(public readonly editor: ICodeEditor) {\n\t\tsuper();\n\n\t\tthis._register(this.editor.onBeginUpdate(() => this._beginUpdate()));\n\t\tthis._register(this.editor.onEndUpdate(() => this._endUpdate()));\n\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeModel(() => {\n\t\t\t\tthis._beginUpdate();\n\t\t\t\ttry {\n\t\t\t\t\tthis._model.set(\n\t\t\t\t\t\tthis.editor.getModel(),\n\t\t\t\t\t\tthis._currentTransaction,\n\t\t\t\t\t);\n\t\t\t\t\tthis._forceUpdate();\n\t\t\t\t} finally {\n\t\t\t\t\tthis._endUpdate();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.editor.onDidType((e) => {\n\t\t\t\tthis._beginUpdate();\n\t\t\t\ttry {\n\t\t\t\t\tthis._forceUpdate();\n\t\t\t\t\tthis.onDidType.trigger(this._currentTransaction, e);\n\t\t\t\t} finally {\n\t\t\t\t\tthis._endUpdate();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeModelContent((e) => {\n\t\t\t\tthis._beginUpdate();\n\t\t\t\ttry {\n\t\t\t\t\tthis._versionId.set(\n\t\t\t\t\t\tthis.editor.getModel()?.getVersionId() ?? null,\n\t\t\t\t\t\tthis._currentTransaction,\n\t\t\t\t\t\te,\n\t\t\t\t\t);\n\t\t\t\t\tthis._forceUpdate();\n\t\t\t\t} finally {\n\t\t\t\t\tthis._endUpdate();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeCursorSelection((e) => {\n\t\t\t\tthis._beginUpdate();\n\t\t\t\ttry {\n\t\t\t\t\tthis._selections.set(\n\t\t\t\t\t\tthis.editor.getSelections(),\n\t\t\t\t\t\tthis._currentTransaction,\n\t\t\t\t\t\te,\n\t\t\t\t\t);\n\t\t\t\t\tthis._forceUpdate();\n\t\t\t\t} finally {\n\t\t\t\t\tthis._endUpdate();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tpublic forceUpdate(): void;\n\tpublic forceUpdate<T>(cb: (tx: ITransaction) => T): T;\n\tpublic forceUpdate<T>(cb?: (tx: ITransaction) => T): T {\n\t\tthis._beginUpdate();\n\t\ttry {\n\t\t\tthis._forceUpdate();\n\t\t\tif (!cb) {\n\t\t\t\treturn undefined as T;\n\t\t\t}\n\t\t\treturn cb(this._currentTransaction!);\n\t\t} finally {\n\t\t\tthis._endUpdate();\n\t\t}\n\t}\n\n\tprivate _forceUpdate(): void {\n\t\tthis._beginUpdate();\n\t\ttry {\n\t\t\tthis._model.set(this.editor.getModel(), this._currentTransaction);\n\t\t\tthis._versionId.set(\n\t\t\t\tthis.editor.getModel()?.getVersionId() ?? null,\n\t\t\t\tthis._currentTransaction,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t\tthis._selections.set(\n\t\t\t\tthis.editor.getSelections(),\n\t\t\t\tthis._currentTransaction,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t} finally {\n\t\t\tthis._endUpdate();\n\t\t}\n\t}\n\n\tprivate readonly _model = observableValue(this, this.editor.getModel());\n\tpublic readonly model: IObservable<ITextModel | null> = this._model;\n\n\tpublic readonly isReadonly = observableFromEvent(\n\t\tthis,\n\t\tthis.editor.onDidChangeConfiguration,\n\t\t() => this.editor.getOption(EditorOption.readOnly),\n\t);\n\n\tprivate readonly _versionId = observableValueOpts<\n\t\tnumber | null,\n\t\tIModelContentChangedEvent | undefined\n\t>(\n\t\t{ owner: this, lazy: true },\n\t\tthis.editor.getModel()?.getVersionId() ?? null,\n\t);\n\tpublic readonly versionId: IObservable<\n\t\tnumber | null,\n\t\tIModelContentChangedEvent | undefined\n\t> = this._versionId;\n\n\tprivate readonly _selections = observableValueOpts<\n\t\tSelection[] | null,\n\t\tICursorSelectionChangedEvent | undefined\n\t>(\n\t\t{\n\t\t\towner: this,\n\t\t\tequalsFn: equalsIfDefined(itemsEquals(Selection.selectionsEqual)),\n\t\t\tlazy: true,\n\t\t},\n\t\tthis.editor.getSelections() ?? null,\n\t);\n\tpublic readonly selections: IObservable<\n\t\tSelection[] | null,\n\t\tICursorSelectionChangedEvent | undefined\n\t> = this._selections;\n\n\tpublic readonly positions = derivedOpts<readonly Position[] | null>(\n\t\t{\n\t\t\towner: this,\n\t\t\tequalsFn: equalsIfDefined(itemsEquals(Position.equals)),\n\t\t},\n\t\t(reader) =>\n\t\t\tthis.selections.read(reader)?.map((s) => s.getStartPosition()) ??\n\t\t\tnull,\n\t);\n\n\tpublic readonly isFocused = observableFromEvent(\n\t\tthis,\n\t\t(e) => {\n\t\t\tconst d1 = this.editor.onDidFocusEditorWidget(e);\n\t\t\tconst d2 = this.editor.onDidBlurEditorWidget(e);\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\td1.dispose();\n\t\t\t\t\td2.dispose();\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\t() => this.editor.hasWidgetFocus(),\n\t);\n\n\tpublic readonly value = derivedWithSetter(\n\t\tthis,\n\t\t(reader) => {\n\t\t\tthis.versionId.read(reader);\n\t\t\treturn this.model.read(reader)?.getValue() ?? \"\";\n\t\t},\n\t\t(value, tx) => {\n\t\t\tconst model = this.model.get();\n\t\t\tif (model !== null) {\n\t\t\t\tif (value !== model.getValue()) {\n\t\t\t\t\tmodel.setValue(value);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n\tpublic readonly valueIsEmpty = derived(this, (reader) => {\n\t\tthis.versionId.read(reader);\n\t\treturn this.editor.getModel()?.getValueLength() === 0;\n\t});\n\tpublic readonly cursorSelection = derivedOpts(\n\t\t{ owner: this, equalsFn: equalsIfDefined(Selection.selectionsEqual) },\n\t\t(reader) => this.selections.read(reader)?.[0] ?? null,\n\t);\n\tpublic readonly cursorPosition = derivedOpts(\n\t\t{ owner: this, equalsFn: Position.equals },\n\t\t(reader) => this.selections.read(reader)?.[0]?.getPosition() ?? null,\n\t);\n\n\tpublic readonly onDidType = observableSignal<string>(this);\n\n\tpublic readonly scrollTop = observableFromEvent(\n\t\tthis.editor.onDidScrollChange,\n\t\t() => this.editor.getScrollTop(),\n\t);\n\tpublic readonly scrollLeft = observableFromEvent(\n\t\tthis.editor.onDidScrollChange,\n\t\t() => this.editor.getScrollLeft(),\n\t);\n\n\tpublic readonly layoutInfo = observableFromEvent(\n\t\tthis.editor.onDidLayoutChange,\n\t\t() => this.editor.getLayoutInfo(),\n\t);\n\tpublic readonly layoutInfoContentLeft = this.layoutInfo.map(\n\t\t(l) => l.contentLeft,\n\t);\n\tpublic readonly layoutInfoDecorationsLeft = this.layoutInfo.map(\n\t\t(l) => l.decorationsLeft,\n\t);\n\n\tpublic readonly contentWidth = observableFromEvent(\n\t\tthis.editor.onDidContentSizeChange,\n\t\t() => this.editor.getContentWidth(),\n\t);\n\n\tpublic getOption<T extends EditorOption>(\n\t\tid: T,\n\t): IObservable<FindComputedEditorOptionValueById<T>> {\n\t\treturn observableFromEvent(\n\t\t\tthis,\n\t\t\t(cb) =>\n\t\t\t\tthis.editor.onDidChangeConfiguration((e) => {\n\t\t\t\t\tif (e.hasChanged(id)) {\n\t\t\t\t\t\tcb(undefined);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t() => this.editor.getOption(id),\n\t\t);\n\t}\n\n\tpublic setDecorations(\n\t\tdecorations: IObservable<IModelDeltaDecoration[]>,\n\t): IDisposable {\n\t\tconst d = new DisposableStore();\n\t\tconst decorationsCollection = this.editor.createDecorationsCollection();\n\t\td.add(\n\t\t\tautorunOpts(\n\t\t\t\t{\n\t\t\t\t\towner: this,\n\t\t\t\t\tdebugName: () =>\n\t\t\t\t\t\t`Apply decorations from ${decorations.debugName}`,\n\t\t\t\t},\n\t\t\t\t(reader) => {\n\t\t\t\t\tconst d = decorations.read(reader);\n\t\t\t\t\tdecorationsCollection.set(d);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\td.add({\n\t\t\tdispose: () => {\n\t\t\t\tdecorationsCollection.clear();\n\t\t\t},\n\t\t});\n\t\treturn d;\n\t}\n\n\tprivate _overlayWidgetCounter = 0;\n\n\tpublic createOverlayWidget(widget: IObservableOverlayWidget): IDisposable {\n\t\tconst overlayWidgetId =\n\t\t\t\"observableOverlayWidget\" + this._overlayWidgetCounter++;\n\t\tconst w: IOverlayWidget = {\n\t\t\tgetDomNode: () => widget.domNode,\n\t\t\tgetPosition: () => widget.position.get(),\n\t\t\tgetId: () => overlayWidgetId,\n\t\t\tallowEditorOverflow: widget.allowEditorOverflow,\n\t\t\tgetMinContentWidthInPx: () => widget.minContentWidthInPx.get(),\n\t\t};\n\t\tthis.editor.addOverlayWidget(w);\n\t\tconst d = autorun((reader) => {\n\t\t\twidget.position.read(reader);\n\t\t\twidget.minContentWidthInPx.read(reader);\n\t\t\tthis.editor.layoutOverlayWidget(w);\n\t\t});\n\t\treturn toDisposable(() => {\n\t\t\td.dispose();\n\t\t\tthis.editor.removeOverlayWidget(w);\n\t\t});\n\t}\n}\n\ninterface IObservableOverlayWidget {\n\tget domNode(): HTMLElement;\n\treadonly position: IObservable<IOverlayWidgetPosition | null>;\n\treadonly minContentWidthInPx: IObservable<number>;\n\tget allowEditorOverflow(): boolean;\n}\n"],
  "mappings": "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",
  "names": ["d"]
}
