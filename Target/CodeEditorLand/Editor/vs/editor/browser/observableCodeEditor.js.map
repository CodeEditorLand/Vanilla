{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/observableCodeEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equalsIfDefined, itemsEquals } from '../../base/common/equals.js';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from '../../base/common/lifecycle.js';\nimport { IObservable, ITransaction, TransactionImpl, autorun, autorunOpts, derived, derivedOpts, derivedWithSetter, observableFromEvent, observableSignal, observableValue, observableValueOpts } from '../../base/common/observable.js';\nimport { EditorOption, FindComputedEditorOptionValueById } from '../common/config/editorOptions.js';\nimport { Position } from '../common/core/position.js';\nimport { Selection } from '../common/core/selection.js';\nimport { ICursorSelectionChangedEvent } from '../common/cursorEvents.js';\nimport { IModelDeltaDecoration, ITextModel } from '../common/model.js';\nimport { IModelContentChangedEvent } from '../common/textModelEvents.js';\nimport { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition } from './editorBrowser.js';\n\n/**\n * Returns a facade for the code editor that provides observables for various states/events.\n*/\nexport function observableCodeEditor(editor: ICodeEditor): ObservableCodeEditor {\n\treturn ObservableCodeEditor.get(editor);\n}\n\nexport class ObservableCodeEditor extends Disposable {\n\tprivate static readonly _map = new Map<ICodeEditor, ObservableCodeEditor>();\n\n\t/**\n\t * Make sure that editor is not disposed yet!\n\t*/\n\tpublic static get(editor: ICodeEditor): ObservableCodeEditor {\n\t\tlet result = ObservableCodeEditor._map.get(editor);\n\t\tif (!result) {\n\t\t\tresult = new ObservableCodeEditor(editor);\n\t\t\tObservableCodeEditor._map.set(editor, result);\n\t\t\tconst d = editor.onDidDispose(() => {\n\t\t\t\tconst item = ObservableCodeEditor._map.get(editor);\n\t\t\t\tif (item) {\n\t\t\t\t\tObservableCodeEditor._map.delete(editor);\n\t\t\t\t\titem.dispose();\n\t\t\t\t\td.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _updateCounter = 0;\n\tprivate _currentTransaction: TransactionImpl | undefined = undefined;\n\n\tprivate _beginUpdate(): void {\n\t\tthis._updateCounter++;\n\t\tif (this._updateCounter === 1) {\n\t\t\tthis._currentTransaction = new TransactionImpl(() => {\n\t\t\t\t/** @description Update editor state */\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _endUpdate(): void {\n\t\tthis._updateCounter--;\n\t\tif (this._updateCounter === 0) {\n\t\t\tconst t = this._currentTransaction!;\n\t\t\tthis._currentTransaction = undefined;\n\t\t\tt.finish();\n\t\t}\n\t}\n\n\tprivate constructor(public readonly editor: ICodeEditor) {\n\t\tsuper();\n\n\t\tthis._register(this.editor.onBeginUpdate(() => this._beginUpdate()));\n\t\tthis._register(this.editor.onEndUpdate(() => this._endUpdate()));\n\n\t\tthis._register(this.editor.onDidChangeModel(() => {\n\t\t\tthis._beginUpdate();\n\t\t\ttry {\n\t\t\t\tthis._model.set(this.editor.getModel(), this._currentTransaction);\n\t\t\t\tthis._forceUpdate();\n\t\t\t} finally {\n\t\t\t\tthis._endUpdate();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.editor.onDidType((e) => {\n\t\t\tthis._beginUpdate();\n\t\t\ttry {\n\t\t\t\tthis._forceUpdate();\n\t\t\t\tthis.onDidType.trigger(this._currentTransaction, e);\n\t\t\t} finally {\n\t\t\t\tthis._endUpdate();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.editor.onDidChangeModelContent(e => {\n\t\t\tthis._beginUpdate();\n\t\t\ttry {\n\t\t\t\tthis._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, e);\n\t\t\t\tthis._forceUpdate();\n\t\t\t} finally {\n\t\t\t\tthis._endUpdate();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.editor.onDidChangeCursorSelection(e => {\n\t\t\tthis._beginUpdate();\n\t\t\ttry {\n\t\t\t\tthis._selections.set(this.editor.getSelections(), this._currentTransaction, e);\n\t\t\t\tthis._forceUpdate();\n\t\t\t} finally {\n\t\t\t\tthis._endUpdate();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic forceUpdate(): void;\n\tpublic forceUpdate<T>(cb: (tx: ITransaction) => T): T;\n\tpublic forceUpdate<T>(cb?: (tx: ITransaction) => T): T {\n\t\tthis._beginUpdate();\n\t\ttry {\n\t\t\tthis._forceUpdate();\n\t\t\tif (!cb) { return undefined as T; }\n\t\t\treturn cb(this._currentTransaction!);\n\t\t} finally {\n\t\t\tthis._endUpdate();\n\t\t}\n\t}\n\n\tprivate _forceUpdate(): void {\n\t\tthis._beginUpdate();\n\t\ttry {\n\t\t\tthis._model.set(this.editor.getModel(), this._currentTransaction);\n\t\t\tthis._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, undefined);\n\t\t\tthis._selections.set(this.editor.getSelections(), this._currentTransaction, undefined);\n\t\t} finally {\n\t\t\tthis._endUpdate();\n\t\t}\n\t}\n\n\tprivate readonly _model = observableValue(this, this.editor.getModel());\n\tpublic readonly model: IObservable<ITextModel | null> = this._model;\n\n\tpublic readonly isReadonly = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(EditorOption.readOnly));\n\n\tprivate readonly _versionId = observableValueOpts<number | null, IModelContentChangedEvent | undefined>({ owner: this, lazy: true }, this.editor.getModel()?.getVersionId() ?? null);\n\tpublic readonly versionId: IObservable<number | null, IModelContentChangedEvent | undefined> = this._versionId;\n\n\tprivate readonly _selections = observableValueOpts<Selection[] | null, ICursorSelectionChangedEvent | undefined>(\n\t\t{ owner: this, equalsFn: equalsIfDefined(itemsEquals(Selection.selectionsEqual)), lazy: true },\n\t\tthis.editor.getSelections() ?? null\n\t);\n\tpublic readonly selections: IObservable<Selection[] | null, ICursorSelectionChangedEvent | undefined> = this._selections;\n\n\n\tpublic readonly positions = derivedOpts<readonly Position[] | null>(\n\t\t{ owner: this, equalsFn: equalsIfDefined(itemsEquals(Position.equals)) },\n\t\treader => this.selections.read(reader)?.map(s => s.getStartPosition()) ?? null\n\t);\n\n\tpublic readonly isFocused = observableFromEvent(this, e => {\n\t\tconst d1 = this.editor.onDidFocusEditorWidget(e);\n\t\tconst d2 = this.editor.onDidBlurEditorWidget(e);\n\t\treturn {\n\t\t\tdispose() {\n\t\t\t\td1.dispose();\n\t\t\t\td2.dispose();\n\t\t\t}\n\t\t};\n\t}, () => this.editor.hasWidgetFocus());\n\n\tpublic readonly value = derivedWithSetter(this,\n\t\treader => { this.versionId.read(reader); return this.model.read(reader)?.getValue() ?? ''; },\n\t\t(value, tx) => {\n\t\t\tconst model = this.model.get();\n\t\t\tif (model !== null) {\n\t\t\t\tif (value !== model.getValue()) {\n\t\t\t\t\tmodel.setValue(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t);\n\tpublic readonly valueIsEmpty = derived(this, reader => { this.versionId.read(reader); return this.editor.getModel()?.getValueLength() === 0; });\n\tpublic readonly cursorSelection = derivedOpts({ owner: this, equalsFn: equalsIfDefined(Selection.selectionsEqual) }, reader => this.selections.read(reader)?.[0] ?? null);\n\tpublic readonly cursorPosition = derivedOpts({ owner: this, equalsFn: Position.equals }, reader => this.selections.read(reader)?.[0]?.getPosition() ?? null);\n\n\tpublic readonly onDidType = observableSignal<string>(this);\n\n\tpublic readonly scrollTop = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollTop());\n\tpublic readonly scrollLeft = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollLeft());\n\n\tpublic readonly layoutInfo = observableFromEvent(this.editor.onDidLayoutChange, () => this.editor.getLayoutInfo());\n\tpublic readonly layoutInfoContentLeft = this.layoutInfo.map(l => l.contentLeft);\n\tpublic readonly layoutInfoDecorationsLeft = this.layoutInfo.map(l => l.decorationsLeft);\n\n\tpublic readonly contentWidth = observableFromEvent(this.editor.onDidContentSizeChange, () => this.editor.getContentWidth());\n\n\tpublic getOption<T extends EditorOption>(id: T): IObservable<FindComputedEditorOptionValueById<T>> {\n\t\treturn observableFromEvent(this, cb => this.editor.onDidChangeConfiguration(e => {\n\t\t\tif (e.hasChanged(id)) { cb(undefined); }\n\t\t}), () => this.editor.getOption(id));\n\t}\n\n\tpublic setDecorations(decorations: IObservable<IModelDeltaDecoration[]>): IDisposable {\n\t\tconst d = new DisposableStore();\n\t\tconst decorationsCollection = this.editor.createDecorationsCollection();\n\t\td.add(autorunOpts({ owner: this, debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n\t\t\tconst d = decorations.read(reader);\n\t\t\tdecorationsCollection.set(d);\n\t\t}));\n\t\td.add({\n\t\t\tdispose: () => {\n\t\t\t\tdecorationsCollection.clear();\n\t\t\t}\n\t\t});\n\t\treturn d;\n\t}\n\n\tprivate _overlayWidgetCounter = 0;\n\n\tpublic createOverlayWidget(widget: IObservableOverlayWidget): IDisposable {\n\t\tconst overlayWidgetId = 'observableOverlayWidget' + (this._overlayWidgetCounter++);\n\t\tconst w: IOverlayWidget = {\n\t\t\tgetDomNode: () => widget.domNode,\n\t\t\tgetPosition: () => widget.position.get(),\n\t\t\tgetId: () => overlayWidgetId,\n\t\t\tallowEditorOverflow: widget.allowEditorOverflow,\n\t\t\tgetMinContentWidthInPx: () => widget.minContentWidthInPx.get(),\n\t\t};\n\t\tthis.editor.addOverlayWidget(w);\n\t\tconst d = autorun(reader => {\n\t\t\twidget.position.read(reader);\n\t\t\twidget.minContentWidthInPx.read(reader);\n\t\t\tthis.editor.layoutOverlayWidget(w);\n\t\t});\n\t\treturn toDisposable(() => {\n\t\t\td.dispose();\n\t\t\tthis.editor.removeOverlayWidget(w);\n\t\t});\n\t}\n}\n\ninterface IObservableOverlayWidget {\n\tget domNode(): HTMLElement;\n\treadonly position: IObservable<IOverlayWidgetPosition | null>;\n\treadonly minContentWidthInPx: IObservable<number>;\n\tget allowEditorOverflow(): boolean;\n}\n"],
  "mappings": "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",
  "names": ["d"]
}
