{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/view/viewController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IKeyboardEvent } from \"../../../base/browser/keyboardEvent.js\";\nimport type { IMouseWheelEvent } from \"../../../base/browser/mouseEvent.js\";\nimport * as platform from \"../../../base/common/platform.js\";\nimport type { IEditorConfiguration } from \"../../common/config/editorConfiguration.js\";\nimport { EditorOption } from \"../../common/config/editorOptions.js\";\nimport { Position } from \"../../common/core/position.js\";\nimport type { Selection } from \"../../common/core/selection.js\";\nimport type { IViewModel } from \"../../common/viewModel.js\";\nimport {\n\tCoreNavigationCommands,\n\ttype NavigationCommandRevealType,\n} from \"../coreCommands.js\";\nimport type {\n\tIEditorMouseEvent,\n\tIPartialEditorMouseEvent,\n} from \"../editorBrowser.js\";\nimport type { ViewUserInputEvents } from \"./viewUserInputEvents.js\";\n\nexport interface IMouseDispatchData {\n\tposition: Position;\n\t/**\n\t * Desired mouse column (e.g. when position.column gets clamped to text length -- clicking after text on a line).\n\t */\n\tmouseColumn: number;\n\trevealType: NavigationCommandRevealType;\n\tstartedOnLineNumbers: boolean;\n\n\tinSelectionMode: boolean;\n\tmouseDownCount: number;\n\taltKey: boolean;\n\tctrlKey: boolean;\n\tmetaKey: boolean;\n\tshiftKey: boolean;\n\n\tleftButton: boolean;\n\tmiddleButton: boolean;\n\tonInjectedText: boolean;\n}\n\nexport interface ICommandDelegate {\n\tpaste(\n\t\ttext: string,\n\t\tpasteOnNewLine: boolean,\n\t\tmulticursorText: string[] | null,\n\t\tmode: string | null,\n\t): void;\n\ttype(text: string): void;\n\tcompositionType(\n\t\ttext: string,\n\t\treplacePrevCharCnt: number,\n\t\treplaceNextCharCnt: number,\n\t\tpositionDelta: number,\n\t): void;\n\tstartComposition(): void;\n\tendComposition(): void;\n\tcut(): void;\n}\n\nexport class ViewController {\n\tprivate readonly configuration: IEditorConfiguration;\n\tprivate readonly viewModel: IViewModel;\n\tprivate readonly userInputEvents: ViewUserInputEvents;\n\tprivate readonly commandDelegate: ICommandDelegate;\n\n\tconstructor(\n\t\tconfiguration: IEditorConfiguration,\n\t\tviewModel: IViewModel,\n\t\tuserInputEvents: ViewUserInputEvents,\n\t\tcommandDelegate: ICommandDelegate,\n\t) {\n\t\tthis.configuration = configuration;\n\t\tthis.viewModel = viewModel;\n\t\tthis.userInputEvents = userInputEvents;\n\t\tthis.commandDelegate = commandDelegate;\n\t}\n\n\tpublic paste(\n\t\ttext: string,\n\t\tpasteOnNewLine: boolean,\n\t\tmulticursorText: string[] | null,\n\t\tmode: string | null,\n\t): void {\n\t\tthis.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n\t}\n\n\tpublic type(text: string): void {\n\t\tthis.commandDelegate.type(text);\n\t}\n\n\tpublic compositionType(\n\t\ttext: string,\n\t\treplacePrevCharCnt: number,\n\t\treplaceNextCharCnt: number,\n\t\tpositionDelta: number,\n\t): void {\n\t\tthis.commandDelegate.compositionType(\n\t\t\ttext,\n\t\t\treplacePrevCharCnt,\n\t\t\treplaceNextCharCnt,\n\t\t\tpositionDelta,\n\t\t);\n\t}\n\n\tpublic compositionStart(): void {\n\t\tthis.commandDelegate.startComposition();\n\t}\n\n\tpublic compositionEnd(): void {\n\t\tthis.commandDelegate.endComposition();\n\t}\n\n\tpublic cut(): void {\n\t\tthis.commandDelegate.cut();\n\t}\n\n\tpublic setSelection(modelSelection: Selection): void {\n\t\tCoreNavigationCommands.SetSelection.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\t{\n\t\t\t\tsource: \"keyboard\",\n\t\t\t\tselection: modelSelection,\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate _validateViewColumn(viewPosition: Position): Position {\n\t\tconst minColumn = this.viewModel.getLineMinColumn(\n\t\t\tviewPosition.lineNumber,\n\t\t);\n\t\tif (viewPosition.column < minColumn) {\n\t\t\treturn new Position(viewPosition.lineNumber, minColumn);\n\t\t}\n\t\treturn viewPosition;\n\t}\n\n\tprivate _hasMulticursorModifier(data: IMouseDispatchData): boolean {\n\t\tswitch (\n\t\t\tthis.configuration.options.get(EditorOption.multiCursorModifier)\n\t\t) {\n\t\t\tcase \"altKey\":\n\t\t\t\treturn data.altKey;\n\t\t\tcase \"ctrlKey\":\n\t\t\t\treturn data.ctrlKey;\n\t\t\tcase \"metaKey\":\n\t\t\t\treturn data.metaKey;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate _hasNonMulticursorModifier(data: IMouseDispatchData): boolean {\n\t\tswitch (\n\t\t\tthis.configuration.options.get(EditorOption.multiCursorModifier)\n\t\t) {\n\t\t\tcase \"altKey\":\n\t\t\t\treturn data.ctrlKey || data.metaKey;\n\t\t\tcase \"ctrlKey\":\n\t\t\t\treturn data.altKey || data.metaKey;\n\t\t\tcase \"metaKey\":\n\t\t\t\treturn data.ctrlKey || data.altKey;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic dispatchMouse(data: IMouseDispatchData): void {\n\t\tconst options = this.configuration.options;\n\t\tconst selectionClipboardIsOn =\n\t\t\tplatform.isLinux && options.get(EditorOption.selectionClipboard);\n\t\tconst columnSelection = options.get(EditorOption.columnSelection);\n\t\tif (data.middleButton && !selectionClipboardIsOn) {\n\t\t\tthis._columnSelect(\n\t\t\t\tdata.position,\n\t\t\t\tdata.mouseColumn,\n\t\t\t\tdata.inSelectionMode,\n\t\t\t);\n\t\t} else if (data.startedOnLineNumbers) {\n\t\t\t// If the dragging started on the gutter, then have operations work on the entire line\n\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lastCursorLineSelect(data.position, data.revealType);\n\t\t\t\t} else {\n\t\t\t\t\tthis._createCursor(data.position, true);\n\t\t\t\t}\n\t\t\t} else if (data.inSelectionMode) {\n\t\t\t\tthis._lineSelectDrag(data.position, data.revealType);\n\t\t\t} else {\n\t\t\t\tthis._lineSelect(data.position, data.revealType);\n\t\t\t}\n\t\t} else if (data.mouseDownCount >= 4) {\n\t\t\tthis._selectAll();\n\t\t} else if (data.mouseDownCount === 3) {\n\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lastCursorLineSelectDrag(\n\t\t\t\t\t\tdata.position,\n\t\t\t\t\t\tdata.revealType,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._lastCursorLineSelect(data.position, data.revealType);\n\t\t\t\t}\n\t\t\t} else if (data.inSelectionMode) {\n\t\t\t\tthis._lineSelectDrag(data.position, data.revealType);\n\t\t\t} else {\n\t\t\t\tthis._lineSelect(data.position, data.revealType);\n\t\t\t}\n\t\t} else if (data.mouseDownCount === 2) {\n\t\t\tif (!data.onInjectedText) {\n\t\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\t\tthis._lastCursorWordSelect(data.position, data.revealType);\n\t\t\t\t} else if (data.inSelectionMode) {\n\t\t\t\t\tthis._wordSelectDrag(data.position, data.revealType);\n\t\t\t\t} else {\n\t\t\t\t\tthis._wordSelect(data.position, data.revealType);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._hasMulticursorModifier(data)) {\n\t\t\tif (!this._hasNonMulticursorModifier(data)) {\n\t\t\t\tif (data.shiftKey) {\n\t\t\t\t\tthis._columnSelect(data.position, data.mouseColumn, true);\n\t\t\t\t} else {\n\t\t\t\t\t// Do multi-cursor operations only when purely alt is pressed\n\t\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\t\tthis._lastCursorMoveToSelect(\n\t\t\t\t\t\t\tdata.position,\n\t\t\t\t\t\t\tdata.revealType,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._createCursor(data.position, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (data.inSelectionMode) {\n\t\t\tif (data.altKey) {\n\t\t\t\tthis._columnSelect(data.position, data.mouseColumn, true);\n\t\t\t} else if (columnSelection) {\n\t\t\t\tthis._columnSelect(data.position, data.mouseColumn, true);\n\t\t\t} else {\n\t\t\t\tthis._moveToSelect(data.position, data.revealType);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.moveTo(data.position, data.revealType);\n\t\t}\n\t}\n\n\tprivate _usualArgs(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): CoreNavigationCommands.MoveCommandOptions {\n\t\tviewPosition = this._validateViewColumn(viewPosition);\n\t\treturn {\n\t\t\tsource: \"mouse\",\n\t\t\tposition: this._convertViewToModelPosition(viewPosition),\n\t\t\tviewPosition,\n\t\t\trevealType,\n\t\t};\n\t}\n\n\tpublic moveTo(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _moveToSelect(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.MoveToSelect.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _columnSelect(\n\t\tviewPosition: Position,\n\t\tmouseColumn: number,\n\t\tdoColumnSelect: boolean,\n\t): void {\n\t\tviewPosition = this._validateViewColumn(viewPosition);\n\t\tCoreNavigationCommands.ColumnSelect.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\t{\n\t\t\t\tsource: \"mouse\",\n\t\t\t\tposition: this._convertViewToModelPosition(viewPosition),\n\t\t\t\tviewPosition: viewPosition,\n\t\t\t\tmouseColumn: mouseColumn,\n\t\t\t\tdoColumnSelect: doColumnSelect,\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate _createCursor(viewPosition: Position, wholeLine: boolean): void {\n\t\tviewPosition = this._validateViewColumn(viewPosition);\n\t\tCoreNavigationCommands.CreateCursor.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\t{\n\t\t\t\tsource: \"mouse\",\n\t\t\t\tposition: this._convertViewToModelPosition(viewPosition),\n\t\t\t\tviewPosition: viewPosition,\n\t\t\t\twholeLine: wholeLine,\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate _lastCursorMoveToSelect(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _wordSelect(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.WordSelect.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _wordSelectDrag(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _lastCursorWordSelect(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _lineSelect(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.LineSelect.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _lineSelectDrag(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _lastCursorLineSelect(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _lastCursorLineSelectDrag(\n\t\tviewPosition: Position,\n\t\trevealType: NavigationCommandRevealType,\n\t): void {\n\t\tCoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(\n\t\t\tthis.viewModel,\n\t\t\tthis._usualArgs(viewPosition, revealType),\n\t\t);\n\t}\n\n\tprivate _selectAll(): void {\n\t\tCoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, {\n\t\t\tsource: \"mouse\",\n\t\t});\n\t}\n\n\t// ----------------------\n\n\tprivate _convertViewToModelPosition(viewPosition: Position): Position {\n\t\treturn this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(\n\t\t\tviewPosition,\n\t\t);\n\t}\n\n\tpublic emitKeyDown(e: IKeyboardEvent): void {\n\t\tthis.userInputEvents.emitKeyDown(e);\n\t}\n\n\tpublic emitKeyUp(e: IKeyboardEvent): void {\n\t\tthis.userInputEvents.emitKeyUp(e);\n\t}\n\n\tpublic emitContextMenu(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitContextMenu(e);\n\t}\n\n\tpublic emitMouseMove(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseMove(e);\n\t}\n\n\tpublic emitMouseLeave(e: IPartialEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseLeave(e);\n\t}\n\n\tpublic emitMouseUp(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseUp(e);\n\t}\n\n\tpublic emitMouseDown(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseDown(e);\n\t}\n\n\tpublic emitMouseDrag(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseDrag(e);\n\t}\n\n\tpublic emitMouseDrop(e: IPartialEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseDrop(e);\n\t}\n\n\tpublic emitMouseDropCanceled(): void {\n\t\tthis.userInputEvents.emitMouseDropCanceled();\n\t}\n\n\tpublic emitMouseWheel(e: IMouseWheelEvent): void {\n\t\tthis.userInputEvents.emitMouseWheel(e);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
