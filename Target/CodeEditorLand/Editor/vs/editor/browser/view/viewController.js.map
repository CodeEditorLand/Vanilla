{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/view/viewController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { CoreNavigationCommands, NavigationCommandRevealType } from '../coreCommands.js';\nimport { IEditorMouseEvent, IPartialEditorMouseEvent } from '../editorBrowser.js';\nimport { ViewUserInputEvents } from './viewUserInputEvents.js';\nimport { Position } from '../../common/core/position.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { IEditorConfiguration } from '../../common/config/editorConfiguration.js';\nimport { IViewModel } from '../../common/viewModel.js';\nimport { IMouseWheelEvent } from '../../../base/browser/mouseEvent.js';\nimport { EditorOption } from '../../common/config/editorOptions.js';\nimport * as platform from '../../../base/common/platform.js';\n\nexport interface IMouseDispatchData {\n\tposition: Position;\n\t/**\n\t * Desired mouse column (e.g. when position.column gets clamped to text length -- clicking after text on a line).\n\t */\n\tmouseColumn: number;\n\trevealType: NavigationCommandRevealType;\n\tstartedOnLineNumbers: boolean;\n\n\tinSelectionMode: boolean;\n\tmouseDownCount: number;\n\taltKey: boolean;\n\tctrlKey: boolean;\n\tmetaKey: boolean;\n\tshiftKey: boolean;\n\n\tleftButton: boolean;\n\tmiddleButton: boolean;\n\tonInjectedText: boolean;\n}\n\nexport interface ICommandDelegate {\n\tpaste(text: string, pasteOnNewLine: boolean, multicursorText: string[] | null, mode: string | null): void;\n\ttype(text: string): void;\n\tcompositionType(text: string, replacePrevCharCnt: number, replaceNextCharCnt: number, positionDelta: number): void;\n\tstartComposition(): void;\n\tendComposition(): void;\n\tcut(): void;\n}\n\nexport class ViewController {\n\n\tprivate readonly configuration: IEditorConfiguration;\n\tprivate readonly viewModel: IViewModel;\n\tprivate readonly userInputEvents: ViewUserInputEvents;\n\tprivate readonly commandDelegate: ICommandDelegate;\n\n\tconstructor(\n\t\tconfiguration: IEditorConfiguration,\n\t\tviewModel: IViewModel,\n\t\tuserInputEvents: ViewUserInputEvents,\n\t\tcommandDelegate: ICommandDelegate\n\t) {\n\t\tthis.configuration = configuration;\n\t\tthis.viewModel = viewModel;\n\t\tthis.userInputEvents = userInputEvents;\n\t\tthis.commandDelegate = commandDelegate;\n\t}\n\n\tpublic paste(text: string, pasteOnNewLine: boolean, multicursorText: string[] | null, mode: string | null): void {\n\t\tthis.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n\t}\n\n\tpublic type(text: string): void {\n\t\tthis.commandDelegate.type(text);\n\t}\n\n\tpublic compositionType(text: string, replacePrevCharCnt: number, replaceNextCharCnt: number, positionDelta: number): void {\n\t\tthis.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n\t}\n\n\tpublic compositionStart(): void {\n\t\tthis.commandDelegate.startComposition();\n\t}\n\n\tpublic compositionEnd(): void {\n\t\tthis.commandDelegate.endComposition();\n\t}\n\n\tpublic cut(): void {\n\t\tthis.commandDelegate.cut();\n\t}\n\n\tpublic setSelection(modelSelection: Selection): void {\n\t\tCoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n\t\t\tsource: 'keyboard',\n\t\t\tselection: modelSelection\n\t\t});\n\t}\n\n\tprivate _validateViewColumn(viewPosition: Position): Position {\n\t\tconst minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n\t\tif (viewPosition.column < minColumn) {\n\t\t\treturn new Position(viewPosition.lineNumber, minColumn);\n\t\t}\n\t\treturn viewPosition;\n\t}\n\n\tprivate _hasMulticursorModifier(data: IMouseDispatchData): boolean {\n\t\tswitch (this.configuration.options.get(EditorOption.multiCursorModifier)) {\n\t\t\tcase 'altKey':\n\t\t\t\treturn data.altKey;\n\t\t\tcase 'ctrlKey':\n\t\t\t\treturn data.ctrlKey;\n\t\t\tcase 'metaKey':\n\t\t\t\treturn data.metaKey;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate _hasNonMulticursorModifier(data: IMouseDispatchData): boolean {\n\t\tswitch (this.configuration.options.get(EditorOption.multiCursorModifier)) {\n\t\t\tcase 'altKey':\n\t\t\t\treturn data.ctrlKey || data.metaKey;\n\t\t\tcase 'ctrlKey':\n\t\t\t\treturn data.altKey || data.metaKey;\n\t\t\tcase 'metaKey':\n\t\t\t\treturn data.ctrlKey || data.altKey;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic dispatchMouse(data: IMouseDispatchData): void {\n\t\tconst options = this.configuration.options;\n\t\tconst selectionClipboardIsOn = (platform.isLinux && options.get(EditorOption.selectionClipboard));\n\t\tconst columnSelection = options.get(EditorOption.columnSelection);\n\t\tif (data.middleButton && !selectionClipboardIsOn) {\n\t\t\tthis._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n\t\t} else if (data.startedOnLineNumbers) {\n\t\t\t// If the dragging started on the gutter, then have operations work on the entire line\n\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lastCursorLineSelect(data.position, data.revealType);\n\t\t\t\t} else {\n\t\t\t\t\tthis._createCursor(data.position, true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lineSelectDrag(data.position, data.revealType);\n\t\t\t\t} else {\n\t\t\t\t\tthis._lineSelect(data.position, data.revealType);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (data.mouseDownCount >= 4) {\n\t\t\tthis._selectAll();\n\t\t} else if (data.mouseDownCount === 3) {\n\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lastCursorLineSelectDrag(data.position, data.revealType);\n\t\t\t\t} else {\n\t\t\t\t\tthis._lastCursorLineSelect(data.position, data.revealType);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lineSelectDrag(data.position, data.revealType);\n\t\t\t\t} else {\n\t\t\t\t\tthis._lineSelect(data.position, data.revealType);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (data.mouseDownCount === 2) {\n\t\t\tif (!data.onInjectedText) {\n\t\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\t\tthis._lastCursorWordSelect(data.position, data.revealType);\n\t\t\t\t} else {\n\t\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\t\tthis._wordSelectDrag(data.position, data.revealType);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._wordSelect(data.position, data.revealType);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\tif (!this._hasNonMulticursorModifier(data)) {\n\t\t\t\t\tif (data.shiftKey) {\n\t\t\t\t\t\tthis._columnSelect(data.position, data.mouseColumn, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Do multi-cursor operations only when purely alt is pressed\n\t\t\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\t\t\tthis._lastCursorMoveToSelect(data.position, data.revealType);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._createCursor(data.position, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tif (data.altKey) {\n\t\t\t\t\t\tthis._columnSelect(data.position, data.mouseColumn, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (columnSelection) {\n\t\t\t\t\t\t\tthis._columnSelect(data.position, data.mouseColumn, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._moveToSelect(data.position, data.revealType);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveTo(data.position, data.revealType);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _usualArgs(viewPosition: Position, revealType: NavigationCommandRevealType): CoreNavigationCommands.MoveCommandOptions {\n\t\tviewPosition = this._validateViewColumn(viewPosition);\n\t\treturn {\n\t\t\tsource: 'mouse',\n\t\t\tposition: this._convertViewToModelPosition(viewPosition),\n\t\t\tviewPosition,\n\t\t\trevealType\n\t\t};\n\t}\n\n\tpublic moveTo(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _moveToSelect(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _columnSelect(viewPosition: Position, mouseColumn: number, doColumnSelect: boolean): void {\n\t\tviewPosition = this._validateViewColumn(viewPosition);\n\t\tCoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n\t\t\tsource: 'mouse',\n\t\t\tposition: this._convertViewToModelPosition(viewPosition),\n\t\t\tviewPosition: viewPosition,\n\t\t\tmouseColumn: mouseColumn,\n\t\t\tdoColumnSelect: doColumnSelect\n\t\t});\n\t}\n\n\tprivate _createCursor(viewPosition: Position, wholeLine: boolean): void {\n\t\tviewPosition = this._validateViewColumn(viewPosition);\n\t\tCoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n\t\t\tsource: 'mouse',\n\t\t\tposition: this._convertViewToModelPosition(viewPosition),\n\t\t\tviewPosition: viewPosition,\n\t\t\twholeLine: wholeLine\n\t\t});\n\t}\n\n\tprivate _lastCursorMoveToSelect(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _wordSelect(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _wordSelectDrag(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _lastCursorWordSelect(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _lineSelect(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _lineSelectDrag(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _lastCursorLineSelect(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _lastCursorLineSelectDrag(viewPosition: Position, revealType: NavigationCommandRevealType): void {\n\t\tCoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n\t}\n\n\tprivate _selectAll(): void {\n\t\tCoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n\t}\n\n\t// ----------------------\n\n\tprivate _convertViewToModelPosition(viewPosition: Position): Position {\n\t\treturn this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n\t}\n\n\tpublic emitKeyDown(e: IKeyboardEvent): void {\n\t\tthis.userInputEvents.emitKeyDown(e);\n\t}\n\n\tpublic emitKeyUp(e: IKeyboardEvent): void {\n\t\tthis.userInputEvents.emitKeyUp(e);\n\t}\n\n\tpublic emitContextMenu(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitContextMenu(e);\n\t}\n\n\tpublic emitMouseMove(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseMove(e);\n\t}\n\n\tpublic emitMouseLeave(e: IPartialEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseLeave(e);\n\t}\n\n\tpublic emitMouseUp(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseUp(e);\n\t}\n\n\tpublic emitMouseDown(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseDown(e);\n\t}\n\n\tpublic emitMouseDrag(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseDrag(e);\n\t}\n\n\tpublic emitMouseDrop(e: IPartialEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseDrop(e);\n\t}\n\n\tpublic emitMouseDropCanceled(): void {\n\t\tthis.userInputEvents.emitMouseDropCanceled();\n\t}\n\n\tpublic emitMouseWheel(e: IMouseWheelEvent): void {\n\t\tthis.userInputEvents.emitMouseWheel(e);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
