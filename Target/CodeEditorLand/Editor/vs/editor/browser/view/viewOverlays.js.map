{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/view/viewOverlays.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { DynamicViewOverlay } from './dynamicViewOverlay.js';\nimport { IVisibleLine, VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nimport { RenderingContext, RestrictedRenderingContext } from './renderingContext.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../common/viewEvents.js';\nimport { ViewportData } from '../../common/viewLayout/viewLinesViewportData.js';\nimport { EditorOption } from '../../common/config/editorOptions.js';\n\nexport class ViewOverlays extends ViewPart {\n\tprivate readonly _visibleLines: VisibleLinesCollection<ViewOverlayLine>;\n\tprotected readonly domNode: FastDomNode<HTMLElement>;\n\tprivate _dynamicOverlays: DynamicViewOverlay[] = [];\n\tprivate _isFocused: boolean = false;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._visibleLines = new VisibleLinesCollection({\n\t\t\tcreateLine: () => new ViewOverlayLine(this._dynamicOverlays)\n\t\t});\n\t\tthis.domNode = this._visibleLines.domNode;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tapplyFontInfo(this.domNode, fontInfo);\n\n\t\tthis.domNode.setClassName('view-overlays');\n\t}\n\n\tpublic override shouldRender(): boolean {\n\t\tif (super.shouldRender()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n\t\t\tconst dynamicOverlay = this._dynamicOverlays[i];\n\t\t\tif (dynamicOverlay.shouldRender()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n\t\t\tconst dynamicOverlay = this._dynamicOverlays[i];\n\t\t\tdynamicOverlay.dispose();\n\t\t}\n\t\tthis._dynamicOverlays = [];\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this.domNode;\n\t}\n\n\tpublic addDynamicOverlay(overlay: DynamicViewOverlay): void {\n\t\tthis._dynamicOverlays.push(overlay);\n\t}\n\n\t// ----- event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._visibleLines.onConfigurationChanged(e);\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tapplyFontInfo(this.domNode, fontInfo);\n\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn this._visibleLines.onFlushed(e);\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tthis._isFocused = e.isFocused;\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn this._visibleLines.onLinesChanged(e);\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn this._visibleLines.onLinesDeleted(e);\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn this._visibleLines.onLinesInserted(e);\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn this._visibleLines.onScrollChanged(e) || true;\n\t}\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\treturn this._visibleLines.onTokensChanged(e);\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn this._visibleLines.onZonesChanged(e);\n\t}\n\n\t// ----- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n\n\t\tfor (let i = 0, len = toRender.length; i < len; i++) {\n\t\t\tconst dynamicOverlay = toRender[i];\n\t\t\tdynamicOverlay.prepareRender(ctx);\n\t\t\tdynamicOverlay.onDidRender();\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\t// Overwriting to bypass `shouldRender` flag\n\t\tthis._viewOverlaysRender(ctx);\n\n\t\tthis.domNode.toggleClassName('focused', this._isFocused);\n\t}\n\n\t_viewOverlaysRender(ctx: RestrictedRenderingContext): void {\n\t\tthis._visibleLines.renderLines(ctx.viewportData);\n\t}\n}\n\nexport class ViewOverlayLine implements IVisibleLine {\n\n\tprivate readonly _dynamicOverlays: DynamicViewOverlay[];\n\tprivate _domNode: FastDomNode<HTMLElement> | null;\n\tprivate _renderedContent: string | null;\n\n\tconstructor(dynamicOverlays: DynamicViewOverlay[]) {\n\t\tthis._dynamicOverlays = dynamicOverlays;\n\n\t\tthis._domNode = null;\n\t\tthis._renderedContent = null;\n\t}\n\n\tpublic getDomNode(): HTMLElement | null {\n\t\tif (!this._domNode) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._domNode.domNode;\n\t}\n\tpublic setDomNode(domNode: HTMLElement): void {\n\t\tthis._domNode = createFastDomNode(domNode);\n\t}\n\n\tpublic onContentChanged(): void {\n\t\t// Nothing\n\t}\n\tpublic onTokensChanged(): void {\n\t\t// Nothing\n\t}\n\n\tpublic renderLine(lineNumber: number, deltaTop: number, lineHeight: number, viewportData: ViewportData, sb: StringBuilder): boolean {\n\t\tlet result = '';\n\t\tfor (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n\t\t\tconst dynamicOverlay = this._dynamicOverlays[i];\n\t\t\tresult += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n\t\t}\n\n\t\tif (this._renderedContent === result) {\n\t\t\t// No rendering needed\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._renderedContent = result;\n\n\t\tsb.appendString('<div style=\"top:');\n\t\tsb.appendString(String(deltaTop));\n\t\tsb.appendString('px;height:');\n\t\tsb.appendString(String(lineHeight));\n\t\tsb.appendString('px;\">');\n\t\tsb.appendString(result);\n\t\tsb.appendString('</div>');\n\n\t\treturn true;\n\t}\n\n\tpublic layoutLine(lineNumber: number, deltaTop: number, lineHeight: number): void {\n\t\tif (this._domNode) {\n\t\t\tthis._domNode.setTop(deltaTop);\n\t\t\tthis._domNode.setHeight(lineHeight);\n\t\t}\n\t}\n}\n\nexport class ContentViewOverlays extends ViewOverlays {\n\n\tprivate _contentWidth: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\n\t\tthis.domNode.setHeight(0);\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\treturn super.onConfigurationChanged(e) || true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn super.onScrollChanged(e) || e.scrollWidthChanged;\n\t}\n\n\t// --- end event handlers\n\n\toverride _viewOverlaysRender(ctx: RestrictedRenderingContext): void {\n\t\tsuper._viewOverlaysRender(ctx);\n\n\t\tthis.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n\t}\n}\n\nexport class MarginViewOverlays extends ViewOverlays {\n\n\tprivate _contentLeft: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\n\t\tthis.domNode.setClassName('margin-view-overlays');\n\t\tthis.domNode.setWidth(1);\n\n\t\tapplyFontInfo(this.domNode, options.get(EditorOption.fontInfo));\n\t}\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tapplyFontInfo(this.domNode, options.get(EditorOption.fontInfo));\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\treturn super.onConfigurationChanged(e) || true;\n\t}\n\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn super.onScrollChanged(e) || e.scrollHeightChanged;\n\t}\n\n\toverride _viewOverlaysRender(ctx: RestrictedRenderingContext): void {\n\t\tsuper._viewOverlaysRender(ctx);\n\t\tconst height = Math.min(ctx.scrollHeight, 1000000);\n\t\tthis.domNode.setHeight(height);\n\t\tthis.domNode.setWidth(this._contentLeft);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
