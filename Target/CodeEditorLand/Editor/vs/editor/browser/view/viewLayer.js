import{createFastDomNode as L}from"../../../base/browser/fastDomNode.js";import{createTrustedTypesPolicy as f}from"../../../base/browser/trustedTypes.js";import{BugIndicatingError as g}from"../../../base/common/errors.js";import{EditorOption as N}from"../../common/config/editorOptions.js";import{StringBuilder as _}from"../../common/core/stringBuilder.js";import"../../common/viewEvents.js";import"../../common/viewLayout/viewLinesViewportData.js";class v{constructor(e){this._lineFactory=e;this._set(1,[])}_lines;_rendLineNumberStart;flush(){this._set(1,[])}_set(e,t){this._lines=t,this._rendLineNumberStart=e}_get(){return{rendLineNumberStart:this._rendLineNumberStart,lines:this._lines}}getStartLineNumber(){return this._rendLineNumberStart}getEndLineNumber(){return this._rendLineNumberStart+this._lines.length-1}getCount(){return this._lines.length}getLine(e){const t=e-this._rendLineNumberStart;if(t<0||t>=this._lines.length)throw new g("Illegal value for lineNumber");return this._lines[t]}onLinesDeleted(e,t){if(this.getCount()===0)return null;const i=this.getStartLineNumber(),o=this.getEndLineNumber();if(t<i){const l=t-e+1;return this._rendLineNumberStart-=l,null}if(e>o)return null;let n=0,r=0;for(let l=i;l<=o;l++){const a=l-this._rendLineNumberStart;e<=l&&l<=t&&(r===0?(n=a,r=1):r++)}if(e<i){let l=0;t<i?l=t-e+1:l=i-e,this._rendLineNumberStart-=l}return this._lines.splice(n,r)}onLinesChanged(e,t){const i=e+t-1;if(this.getCount()===0)return!1;const o=this.getStartLineNumber(),n=this.getEndLineNumber();let r=!1;for(let s=e;s<=i;s++)s>=o&&s<=n&&(this._lines[s-this._rendLineNumberStart].onContentChanged(),r=!0);return r}onLinesInserted(e,t){if(this.getCount()===0)return null;const i=t-e+1,o=this.getStartLineNumber(),n=this.getEndLineNumber();if(e<=o)return this._rendLineNumberStart+=i,null;if(e>n)return null;if(i+e>n)return this._lines.splice(e-this._rendLineNumberStart,n-e+1);const r=[];for(let d=0;d<i;d++)r[d]=this._lineFactory.createLine();const s=e-this._rendLineNumberStart,l=this._lines.slice(0,s),a=this._lines.slice(s,this._lines.length-i),u=this._lines.slice(this._lines.length-i,this._lines.length);return this._lines=l.concat(r).concat(a),u}onTokensChanged(e){if(this.getCount()===0)return!1;const t=this.getStartLineNumber(),i=this.getEndLineNumber();let o=!1;for(let n=0,r=e.length;n<r;n++){const s=e[n];if(s.toLineNumber<t||s.fromLineNumber>i)continue;const l=Math.max(t,s.fromLineNumber),a=Math.min(i,s.toLineNumber);for(let u=l;u<=a;u++){const d=u-this._rendLineNumberStart;this._lines[d].onTokensChanged(),o=!0}}return o}}class x{constructor(e){this._lineFactory=e}domNode=this._createDomNode();_linesCollection=new v(this._lineFactory);_createDomNode(){const e=L(document.createElement("div"));return e.setClassName("view-layer"),e.setPosition("absolute"),e.domNode.setAttribute("role","presentation"),e.domNode.setAttribute("aria-hidden","true"),e}onConfigurationChanged(e){return!!e.hasChanged(N.layoutInfo)}onFlushed(e){return this._linesCollection.flush(),!0}onLinesChanged(e){return this._linesCollection.onLinesChanged(e.fromLineNumber,e.count)}onLinesDeleted(e){const t=this._linesCollection.onLinesDeleted(e.fromLineNumber,e.toLineNumber);if(t)for(let i=0,o=t.length;i<o;i++)t[i].getDomNode()?.remove();return!0}onLinesInserted(e){const t=this._linesCollection.onLinesInserted(e.fromLineNumber,e.toLineNumber);if(t)for(let i=0,o=t.length;i<o;i++)t[i].getDomNode()?.remove();return!0}onScrollChanged(e){return e.scrollTopChanged}onTokensChanged(e){return this._linesCollection.onTokensChanged(e.ranges)}onZonesChanged(e){return!0}getStartLineNumber(){return this._linesCollection.getStartLineNumber()}getEndLineNumber(){return this._linesCollection.getEndLineNumber()}getVisibleLine(e){return this._linesCollection.getLine(e)}renderLines(e){const t=this._linesCollection._get(),i=new m(this.domNode.domNode,this._lineFactory,e),o={rendLineNumberStart:t.rendLineNumberStart,lines:t.lines,linesLength:t.lines.length},n=i.render(o,e.startLineNumber,e.endLineNumber,e.relativeVerticalOffset);this._linesCollection._set(n.rendLineNumberStart,n.lines)}}class m{constructor(e,t,i){this._domNode=e;this._lineFactory=t;this._viewportData=i}static _ttPolicy=f("editorViewLayer",{createHTML:e=>e});render(e,t,i,o){const n={rendLineNumberStart:e.rendLineNumberStart,lines:e.lines.slice(0),linesLength:e.linesLength};if(n.rendLineNumberStart+n.linesLength-1<t||i<n.rendLineNumberStart){n.rendLineNumberStart=t,n.linesLength=i-t+1,n.lines=[];for(let r=t;r<=i;r++)n.lines[r-t]=this._lineFactory.createLine();return this._finishRendering(n,!0,o),n}if(this._renderUntouchedLines(n,Math.max(t-n.rendLineNumberStart,0),Math.min(i-n.rendLineNumberStart,n.linesLength-1),o,t),n.rendLineNumberStart>t){const r=t,s=Math.min(i,n.rendLineNumberStart-1);r<=s&&(this._insertLinesBefore(n,r,s,o,t),n.linesLength+=s-r+1)}else if(n.rendLineNumberStart<t){const r=Math.min(n.linesLength,t-n.rendLineNumberStart);r>0&&(this._removeLinesBefore(n,r),n.linesLength-=r)}if(n.rendLineNumberStart=t,n.rendLineNumberStart+n.linesLength-1<i){const r=n.rendLineNumberStart+n.linesLength,s=i;r<=s&&(this._insertLinesAfter(n,r,s,o,t),n.linesLength+=s-r+1)}else if(n.rendLineNumberStart+n.linesLength-1>i){const r=Math.max(0,i-n.rendLineNumberStart+1),l=n.linesLength-1-r+1;l>0&&(this._removeLinesAfter(n,l),n.linesLength-=l)}return this._finishRendering(n,!1,o),n}_renderUntouchedLines(e,t,i,o,n){const r=e.rendLineNumberStart,s=e.lines;for(let l=t;l<=i;l++){const a=r+l;s[l].layoutLine(a,o[a-n],this._viewportData.lineHeight)}}_insertLinesBefore(e,t,i,o,n){const r=[];let s=0;for(let l=t;l<=i;l++)r[s++]=this._lineFactory.createLine();e.lines=r.concat(e.lines)}_removeLinesBefore(e,t){for(let i=0;i<t;i++)e.lines[i].getDomNode()?.remove();e.lines.splice(0,t)}_insertLinesAfter(e,t,i,o,n){const r=[];let s=0;for(let l=t;l<=i;l++)r[s++]=this._lineFactory.createLine();e.lines=e.lines.concat(r)}_removeLinesAfter(e,t){const i=e.linesLength-t;for(let o=0;o<t;o++)e.lines[i+o].getDomNode()?.remove();e.lines.splice(i,t)}_finishRenderingNewLines(e,t,i,o){m._ttPolicy&&(i=m._ttPolicy.createHTML(i));const n=this._domNode.lastChild;t||!n?this._domNode.innerHTML=i:n.insertAdjacentHTML("afterend",i);let r=this._domNode.lastChild;for(let s=e.linesLength-1;s>=0;s--){const l=e.lines[s];o[s]&&(l.setDomNode(r),r=r.previousSibling)}}_finishRenderingInvalidLines(e,t,i){const o=document.createElement("div");m._ttPolicy&&(t=m._ttPolicy.createHTML(t)),o.innerHTML=t;for(let n=0;n<e.linesLength;n++){const r=e.lines[n];if(i[n]){const s=o.firstChild,l=r.getDomNode();l.parentNode.replaceChild(s,l),r.setDomNode(s)}}}static _sb=new _(1e5);_finishRendering(e,t,i){const o=m._sb,n=e.linesLength,r=e.lines,s=e.rendLineNumberStart,l=[];{o.reset();let a=!1;for(let u=0;u<n;u++){const d=r[u];l[u]=!1,!(d.getDomNode()||!d.renderLine(u+s,i[u],this._viewportData.lineHeight,this._viewportData,o))&&(l[u]=!0,a=!0)}a&&this._finishRenderingNewLines(e,t,o.build(),l)}{o.reset();let a=!1;const u=[];for(let d=0;d<n;d++){const c=r[d];u[d]=!1,!(l[d]||!c.renderLine(d+s,i[d],this._viewportData.lineHeight,this._viewportData,o))&&(u[d]=!0,a=!0)}a&&this._finishRenderingInvalidLines(e,o.build(),u)}}}export{v as RenderedLinesCollection,x as VisibleLinesCollection};
