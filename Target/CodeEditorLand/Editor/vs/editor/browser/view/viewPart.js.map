{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/view/viewPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { RenderingContext, RestrictedRenderingContext } from './renderingContext.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\n\nexport abstract class ViewPart extends ViewEventHandler {\n\n\t_context: ViewContext;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tsuper.dispose();\n\t}\n\n\tpublic abstract prepareRender(ctx: RenderingContext): void;\n\tpublic abstract render(ctx: RestrictedRenderingContext): void;\n}\n\nexport const enum PartFingerprint {\n\tNone,\n\tContentWidgets,\n\tOverflowingContentWidgets,\n\tOverflowGuard,\n\tOverlayWidgets,\n\tOverflowingOverlayWidgets,\n\tScrollableElement,\n\tTextArea,\n\tViewLines,\n\tMinimap\n}\n\nexport class PartFingerprints {\n\n\tpublic static write(target: Element | FastDomNode<HTMLElement>, partId: PartFingerprint) {\n\t\ttarget.setAttribute('data-mprt', String(partId));\n\t}\n\n\tpublic static read(target: Element): PartFingerprint {\n\t\tconst r = target.getAttribute('data-mprt');\n\t\tif (r === null) {\n\t\t\treturn PartFingerprint.None;\n\t\t}\n\t\treturn parseInt(r, 10);\n\t}\n\n\tpublic static collect(child: Element | null, stopAt: Element): Uint8Array {\n\t\tconst result: PartFingerprint[] = [];\n\t\tlet resultLen = 0;\n\n\t\twhile (child && child !== child.ownerDocument.body) {\n\t\t\tif (child === stopAt) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (child.nodeType === child.ELEMENT_NODE) {\n\t\t\t\tresult[resultLen++] = this.read(child);\n\t\t\t}\n\t\t\tchild = child.parentElement;\n\t\t}\n\n\t\tconst r = new Uint8Array(resultLen);\n\t\tfor (let i = 0; i < resultLen; i++) {\n\t\t\tr[i] = result[resultLen - i - 1];\n\t\t}\n\t\treturn r;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAC5B,SAAS,kBAAkB,kCAAkC;AAC7D,SAAS,mBAAmB;AAC5B,SAAS,wBAAwB;AAE1B,MAAe,iBAAiB,iBAAiB;AAAA,EAVxD,OAUwD;AAAA;AAAA;AAAA,EAEvD;AAAA,EAEA,YAAY,SAAsB;AACjC,UAAM;AACN,SAAK,WAAW;AAChB,SAAK,SAAS,gBAAgB,IAAI;AAAA,EACnC;AAAA,EAEgB,UAAgB;AAC/B,SAAK,SAAS,mBAAmB,IAAI;AACrC,UAAM,QAAQ;AAAA,EACf;AAID;AAEO,IAAW,kBAAX,kBAAWA,qBAAX;AACN,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AAViB,SAAAA;AAAA,GAAA;AAaX,MAAM,iBAAiB;AAAA,EA1C9B,OA0C8B;AAAA;AAAA;AAAA,EAE7B,OAAc,MAAM,QAA4C,QAAyB;AACxF,WAAO,aAAa,aAAa,OAAO,MAAM,CAAC;AAAA,EAChD;AAAA,EAEA,OAAc,KAAK,QAAkC;AACpD,UAAM,IAAI,OAAO,aAAa,WAAW;AACzC,QAAI,MAAM,MAAM;AACf,aAAO;AAAA,IACR;AACA,WAAO,SAAS,GAAG,EAAE;AAAA,EACtB;AAAA,EAEA,OAAc,QAAQ,OAAuB,QAA6B;AACzE,UAAM,SAA4B,CAAC;AACnC,QAAI,YAAY;AAEhB,WAAO,SAAS,UAAU,MAAM,cAAc,MAAM;AACnD,UAAI,UAAU,QAAQ;AACrB;AAAA,MACD;AACA,UAAI,MAAM,aAAa,MAAM,cAAc;AAC1C,eAAO,WAAW,IAAI,KAAK,KAAK,KAAK;AAAA,MACtC;AACA,cAAQ,MAAM;AAAA,IACf;AAEA,UAAM,IAAI,IAAI,WAAW,SAAS;AAClC,aAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AACnC,QAAE,CAAC,IAAI,OAAO,YAAY,IAAI,CAAC;AAAA,IAChC;AACA,WAAO;AAAA,EACR;AACD;",
  "names": ["PartFingerprint"]
}
