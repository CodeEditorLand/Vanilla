{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/gpu/viewGpuContext.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from \"../../../base/browser/dom.js\";\nimport {\n\ttype FastDomNode,\n\tcreateFastDomNode,\n} from \"../../../base/browser/fastDomNode.js\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { GPULifecycle } from \"./gpuDisposable.js\";\nimport { ensureNonNullable, observeDevicePixelDimensions } from \"./gpuUtils.js\";\n\nexport class ViewGpuContext extends Disposable {\n\treadonly canvas: FastDomNode<HTMLCanvasElement>;\n\treadonly ctx: GPUCanvasContext;\n\n\treadonly device: Promise<GPUDevice>;\n\n\tprivate readonly _onDidChangeCanvasDevicePixelDimensions = this._register(\n\t\tnew Emitter<{ width: number; height: number }>(),\n\t);\n\treadonly onDidChangeCanvasDevicePixelDimensions =\n\t\tthis._onDidChangeCanvasDevicePixelDimensions.event;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.canvas = createFastDomNode(document.createElement(\"canvas\"));\n\t\tthis.canvas.setClassName(\"editorCanvas\");\n\n\t\tthis.ctx = ensureNonNullable(this.canvas.domNode.getContext(\"webgpu\"));\n\n\t\tthis.device = GPULifecycle.requestDevice().then(\n\t\t\t(ref) => this._register(ref).object,\n\t\t);\n\n\t\tthis._register(\n\t\t\tobserveDevicePixelDimensions(\n\t\t\t\tthis.canvas.domNode,\n\t\t\t\tgetActiveWindow(),\n\t\t\t\t(width, height) => {\n\t\t\t\t\tthis.canvas.domNode.width = width;\n\t\t\t\t\tthis.canvas.domNode.height = height;\n\t\t\t\t\tthis._onDidChangeCanvasDevicePixelDimensions.fire({\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC;AAAA,EAEC;AAAA,OACM;AACP,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB,oCAAoC;AAEzD,MAAM,uBAAuB,WAAW;AAAA,EAf/C,OAe+C;AAAA;AAAA;AAAA,EACrC;AAAA,EACA;AAAA,EAEA;AAAA,EAEQ,0CAA0C,KAAK;AAAA,IAC/D,IAAI,QAA2C;AAAA,EAChD;AAAA,EACS,yCACR,KAAK,wCAAwC;AAAA,EAE9C,cAAc;AACb,UAAM;AAEN,SAAK,SAAS,kBAAkB,SAAS,cAAc,QAAQ,CAAC;AAChE,SAAK,OAAO,aAAa,cAAc;AAEvC,SAAK,MAAM,kBAAkB,KAAK,OAAO,QAAQ,WAAW,QAAQ,CAAC;AAErE,SAAK,SAAS,aAAa,cAAc,EAAE;AAAA,MAC1C,CAAC,QAAQ,KAAK,UAAU,GAAG,EAAE;AAAA,IAC9B;AAEA,SAAK;AAAA,MACJ;AAAA,QACC,KAAK,OAAO;AAAA,QACZ,gBAAgB;AAAA,QAChB,CAAC,OAAO,WAAW;AAClB,eAAK,OAAO,QAAQ,QAAQ;AAC5B,eAAK,OAAO,QAAQ,SAAS;AAC7B,eAAK,wCAAwC,KAAK;AAAA,YACjD;AAAA,YACA;AAAA,UACD,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
