{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/browser/gpu/gpuDisposable.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IReference } from '../../../base/common/lifecycle.js';\nimport { isFunction } from '../../../base/common/types.js';\n\nexport namespace GPULifecycle {\n\texport async function requestDevice(): Promise<IReference<GPUDevice>> {\n\t\tif (!navigator.gpu) {\n\t\t\tthrow new Error('This browser does not support WebGPU');\n\t\t}\n\t\tconst adapter = (await navigator.gpu.requestAdapter())!;\n\t\tif (!adapter) {\n\t\t\tthrow new Error('This browser supports WebGPU but it appears to be disabled');\n\t\t}\n\t\treturn wrapDestroyableInDisposable(await adapter.requestDevice());\n\t}\n\n\texport function createBuffer(device: GPUDevice, descriptor: GPUBufferDescriptor, initialValues?: Float32Array | (() => Float32Array)): IReference<GPUBuffer> {\n\t\tconst buffer = device.createBuffer(descriptor);\n\t\tif (initialValues) {\n\t\t\tdevice.queue.writeBuffer(buffer, 0, isFunction(initialValues) ? initialValues() : initialValues);\n\t\t}\n\t\treturn wrapDestroyableInDisposable(buffer);\n\t}\n\n\texport function createTexture(device: GPUDevice, descriptor: GPUTextureDescriptor): IReference<GPUTexture> {\n\t\treturn wrapDestroyableInDisposable(device.createTexture(descriptor));\n\t}\n}\n\nfunction wrapDestroyableInDisposable<T extends { destroy(): void }>(value: T): IReference<T> {\n\treturn {\n\t\tobject: value,\n\t\tdispose: () => value.destroy()\n\t};\n}\n"],
  "mappings": ";;AAMA,SAAS,kBAAkB;AAEpB,IAAU;AAAA,CAAV,CAAUA,kBAAV;AACN,iBAAsB,gBAAgD;AACrE,QAAI,CAAC,UAAU,KAAK;AACnB,YAAM,IAAI,MAAM,sCAAsC;AAAA,IACvD;AACA,UAAM,UAAW,MAAM,UAAU,IAAI,eAAe;AACpD,QAAI,CAAC,SAAS;AACb,YAAM,IAAI,MAAM,4DAA4D;AAAA,IAC7E;AACA,WAAO,4BAA4B,MAAM,QAAQ,cAAc,CAAC;AAAA,EACjE;AATA,EAAAA,cAAsB;AAAA;AAWf,WAAS,aAAa,QAAmB,YAAiC,eAA4E;AAC5J,UAAM,SAAS,OAAO,aAAa,UAAU;AAC7C,QAAI,eAAe;AAClB,aAAO,MAAM,YAAY,QAAQ,GAAG,WAAW,aAAa,IAAI,cAAc,IAAI,aAAa;AAAA,IAChG;AACA,WAAO,4BAA4B,MAAM;AAAA,EAC1C;AANO,EAAAA,cAAS;AAAA;AAQT,WAAS,cAAc,QAAmB,YAA0D;AAC1G,WAAO,4BAA4B,OAAO,cAAc,UAAU,CAAC;AAAA,EACpE;AAFO,EAAAA,cAAS;AAAA;AAAA,GApBA;AAyBjB,SAAS,4BAA2D,OAAyB;AAC5F,SAAO;AAAA,IACN,QAAQ;AAAA,IACR,SAAS,6BAAM,MAAM,QAAQ,GAApB;AAAA,EACV;AACD;AALS;",
  "names": ["GPULifecycle"]
}
