var y=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=(l,s,e,r)=>{for(var t=r>1?void 0:r?m(s,e):s,i=l.length-1,p;i>=0;i--)(p=l[i])&&(t=(r?p(s,e,t):p(t))||t);return r&&t&&y(s,e,t),t},n=(l,s)=>(e,r)=>s(e,r,l);import{getActiveWindow as c}from"../../../../base/browser/dom.js";import{CharCode as o}from"../../../../base/common/charCode.js";import{Emitter as d,Event as u}from"../../../../base/common/event.js";import{Disposable as G,dispose as f,MutableDisposable as T,toDisposable as v}from"../../../../base/common/lifecycle.js";import{ThreeKeyMap as S}from"../../../../base/common/map.js";import{IInstantiationService as R}from"../../../../platform/instantiation/common/instantiation.js";import{IThemeService as A}from"../../../../platform/theme/common/themeService.js";import{MetadataConsts as a}from"../../../common/encodedTokenAttributes.js";import{GlyphRasterizer as I}from"../raster/glyphRasterizer.js";import{IdleTaskQueue as P}from"../taskQueue.js";import{TextureAtlasPage as _}from"./textureAtlasPage.js";let h=class extends G{constructor(e,r,t,i){super();this._maxTextureSize=e;this._themeService=t;this._instantiationService=i;this._allocatorType=r?.allocatorType??"slab",this._register(u.runAndSubscribe(this._themeService.onDidColorThemeChange,()=>{this._colorMap=this._themeService.getColorTheme().tokenColorMap}));const p=Math.max(1,Math.floor(c().devicePixelRatio));this.pageSize=Math.min(1024*p,this._maxTextureSize),this._initFirstPage(),this._register(v(()=>f(this._pages)))}_colorMap;_warmUpTask=this._register(new T);_warmedUpRasterizers=new Set;_allocatorType;_pages=[];get pages(){return this._pages}pageSize;_glyphPageIndex=new S;_onDidDeleteGlyphs=this._register(new d);onDidDeleteGlyphs=this._onDidDeleteGlyphs.event;_initFirstPage(){const e=this._instantiationService.createInstance(_,0,this.pageSize,this._allocatorType);this._pages.push(e);const r=new I(1,"");e.getGlyph(r,"",0),r.dispose()}clear(){for(const e of this._pages)e.dispose();this._pages.length=0,this._glyphPageIndex.clear(),this._warmedUpRasterizers.clear(),this._warmUpTask.clear(),this._initFirstPage(),this._onDidDeleteGlyphs.fire()}getGlyph(e,r,t){return t&=~(a.LANGUAGEID_MASK|a.TOKEN_TYPE_MASK|a.BALANCED_BRACKETS_MASK),this._warmedUpRasterizers.has(e.id)||(this._warmUpAtlas(e),this._warmedUpRasterizers.add(e.id)),this._tryGetGlyph(this._glyphPageIndex.get(r,t,e.cacheKey)??0,e,r,t)}_tryGetGlyph(e,r,t,i){return this._glyphPageIndex.set(t,i,r.cacheKey,e),this._pages[e].getGlyph(r,t,i)??(e+1<this._pages.length?this._tryGetGlyph(e+1,r,t,i):void 0)??this._getGlyphFromNewPage(r,t,i)}_getGlyphFromNewPage(e,r,t){return this._pages.push(this._instantiationService.createInstance(_,this._pages.length,this.pageSize,this._allocatorType)),this._glyphPageIndex.set(r,t,e.cacheKey,this._pages.length-1),this._pages[this._pages.length-1].getGlyph(e,r,t)}getUsagePreview(){return Promise.all(this._pages.map(e=>e.getUsagePreview()))}getStats(){return this._pages.map(e=>e.getStats())}_warmUpAtlas(e){this._warmUpTask.value?.clear();const r=this._warmUpTask.value=new P;for(let t=o.A;t<=o.Z;t++)r.enqueue(()=>{for(const i of this._colorMap.keys())this.getGlyph(e,String.fromCharCode(t),i<<a.FOREGROUND_OFFSET&a.FOREGROUND_MASK)});for(let t=o.a;t<=o.z;t++)r.enqueue(()=>{for(const i of this._colorMap.keys())this.getGlyph(e,String.fromCharCode(t),i<<a.FOREGROUND_OFFSET&a.FOREGROUND_MASK)});for(let t=o.ExclamationMark;t<=o.Tilde;t++)r.enqueue(()=>{for(const i of this._colorMap.keys())this.getGlyph(e,String.fromCharCode(t),i<<a.FOREGROUND_OFFSET&a.FOREGROUND_MASK)})}};h=g([n(2,A),n(3,R)],h);export{h as TextureAtlas};
