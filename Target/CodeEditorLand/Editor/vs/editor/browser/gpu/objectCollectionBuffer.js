import{Emitter as p,Event as f}from"../../../base/common/event.js";import{Disposable as l,dispose as c,toDisposable as u}from"../../../base/common/lifecycle.js";import{LinkedList as y}from"../../../base/common/linkedList.js";function v(o,s){return new h(o,s)}class h extends l{constructor(e,t){super();this.propertySpecs=e;this.capacity=t;this.view=new Float32Array(t*2),this.buffer=this.view.buffer,this._entrySize=e.length;for(let i=0;i<e.length;i++){const r={offset:i,...e[i]};this._propertySpecsMap.set(r.name,r)}this._register(u(()=>c(this._entries)))}buffer;view;get bufferUsedSize(){return this.viewUsedSize*Float32Array.BYTES_PER_ELEMENT}get viewUsedSize(){return this._entries.size*this._entrySize}_propertySpecsMap=new Map;_entrySize;_entries=new y;_onDidChange=this._register(new p);onDidChange=this._onDidChange.event;createEntry(e){if(this._entries.size===this.capacity)throw new Error(`Cannot create more entries ObjectCollectionBuffer entries (capacity=${this.capacity})`);const t=new b(this.view,this._propertySpecsMap,this._entries.size,e),i=this._entries.push(t),r=[];return r.push(f.forward(t.onDidChange,this._onDidChange)),r.push(t.onWillDispose(()=>{const n=t.i;i(),this.view.set(this.view.subarray(n*this._entrySize+2,this._entries.size*this._entrySize+2),n*this._entrySize);for(const a of this._entries)a.i>n&&a.i--;c(r)})),t}}class b extends l{constructor(e,t,i,r){super();this._view=e;this._propertySpecsMap=t;this.i=i;for(const n of this._propertySpecsMap.values())this._view[this.i*this._propertySpecsMap.size+n.offset]=r[n.name]}_onDidChange=this._register(new p);onDidChange=this._onDidChange.event;_onWillDispose=this._register(new p);onWillDispose=this._onWillDispose.event;dispose(){this._onWillDispose.fire(),super.dispose()}set(e,t){this._view[this.i*this._propertySpecsMap.size+this._propertySpecsMap.get(e).offset]=t,this._onDidChange.fire()}get(e){return this._view[this.i*this._propertySpecsMap.size+this._propertySpecsMap.get(e).offset]}}export{v as createObjectCollectionBuffer};
