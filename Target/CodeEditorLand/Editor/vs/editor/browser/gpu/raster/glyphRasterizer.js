var g=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var p=(h,l,a,e)=>{for(var i=e>1?void 0:e?x(l,a):l,s=h.length-1,r;s>=0;s--)(r=h[s])&&(i=(e?r(l,a,i):r(i))||i);return e&&i&&g(l,a,i),i};import{getActiveWindow as c}from"../../../../base/browser/dom.js";import{memoize as m}from"../../../../base/common/decorators.js";import{Disposable as b}from"../../../../base/common/lifecycle.js";import{StringBuilder as v}from"../../../common/core/stringBuilder.js";import{FontStyle as _,TokenMetadata as d}from"../../../common/encodedTokenAttributes.js";import{ensureNonNullable as u}from"../gpuUtils.js";let G=0;class w extends b{constructor(a,e){super();this._fontSize=a;this._fontFamily=e;const i=Math.ceil(this._fontSize*c().devicePixelRatio);this._canvas=new OffscreenCanvas(i*3,i*3),this._ctx=u(this._canvas.getContext("2d",{willReadFrequently:!0})),this._ctx.textBaseline="top",this._ctx.fillStyle="#FFFFFF"}id=G++;get cacheKey(){return`${this._fontFamily}_${this._fontSize}px`}_canvas;_ctx;_workGlyph={source:null,boundingBox:{left:0,bottom:0,right:0,top:0},originOffset:{x:0,y:0}};_workGlyphConfig={chars:void 0,metadata:0};rasterizeGlyph(a,e,i){return a===""?{source:this._canvas,boundingBox:{top:0,left:0,bottom:-1,right:-1},originOffset:{x:0,y:0}}:this._workGlyphConfig.chars===a&&this._workGlyphConfig.metadata===e?this._workGlyph:(this._workGlyphConfig.chars=a,this._workGlyphConfig.metadata=e,this._rasterizeGlyph(a,e,i))}_rasterizeGlyph(a,e,i){const s=Math.ceil(this._fontSize*c().devicePixelRatio),r=s*3;this._canvas.width!==r&&(this._canvas.width=r,this._canvas.height=r),this._ctx.clearRect(0,0,this._canvas.width,this._canvas.height);const t=new v(200),n=d.getFontStyle(e);n&_.Italic&&t.appendString("italic "),n&_.Bold&&t.appendString("bold "),t.appendString(`${s}px ${this._fontFamily}`),this._ctx.font=t.build();const o=s,f=s;this._ctx.fillStyle=i[d.getForeground(e)],this._ctx.textBaseline="top",this._ctx.fillText(a,o,f);const y=this._ctx.getImageData(0,0,this._canvas.width,this._canvas.height);return this._findGlyphBoundingBox(y,this._workGlyph.boundingBox),this._workGlyph.source=this._canvas,this._workGlyph.originOffset.x=this._workGlyph.boundingBox.left-o,this._workGlyph.originOffset.y=this._workGlyph.boundingBox.top-f,this._workGlyph}_findGlyphBoundingBox(a,e){const i=this._canvas.height,s=this._canvas.width;let r=!1;for(let t=0;t<i;t++){for(let n=0;n<s;n++){const o=t*s*4+n*4+3;if(a.data[o]!==0){e.top=t,r=!0;break}}if(r)break}e.left=0,r=!1;for(let t=0;t<s;t++){for(let n=0;n<i;n++){const o=n*s*4+t*4+3;if(a.data[o]!==0){e.left=t,r=!0;break}}if(r)break}e.right=s,r=!1;for(let t=s-1;t>=e.left;t--){for(let n=0;n<i;n++){const o=n*s*4+t*4+3;if(a.data[o]!==0){e.right=t,r=!0;break}}if(r)break}e.bottom=e.top,r=!1;for(let t=i-1;t>=0;t--){for(let n=0;n<s;n++){const o=t*s*4+n*4+3;if(a.data[o]!==0){e.bottom=t,r=!0;break}}if(r)break}}}p([m],w.prototype,"cacheKey",1);export{w as GlyphRasterizer};
