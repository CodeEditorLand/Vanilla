{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/viewModel/viewModelDecorations.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { IEditorOptions } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../common/viewModel.js';\nimport { testViewModel } from './testViewModel.js';\n\nsuite('ViewModelDecorations', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('getDecorationsViewportData', () => {\n\t\tconst text = [\n\t\t\t'hello world, this is a buffer that will be wrapped'\n\t\t];\n\t\tconst opts: IEditorOptions = {\n\t\t\twordWrap: 'wordWrapColumn',\n\t\t\twordWrapColumn: 13\n\t\t};\n\t\ttestViewModel(text, opts, (viewModel, model) => {\n\t\t\tassert.strictEqual(viewModel.getLineContent(1), 'hello world, ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(2), 'this is a ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(3), 'buffer that ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(4), 'will be ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(5), 'wrapped');\n\n\t\t\tmodel.changeDecorations((accessor) => {\n\t\t\t\tconst createOpts = (id: string) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdescription: 'test',\n\t\t\t\t\t\tclassName: id,\n\t\t\t\t\t\tinlineClassName: 'i-' + id,\n\t\t\t\t\t\tbeforeContentClassName: 'b-' + id,\n\t\t\t\t\t\tafterContentClassName: 'a-' + id\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// VIEWPORT will be (1,14) -> (1,36)\n\n\t\t\t\t// completely before viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 3), createOpts('dec1'));\n\t\t\t\t// starts before viewport, ends at viewport start\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 14), createOpts('dec2'));\n\t\t\t\t// starts before viewport, ends inside viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 15), createOpts('dec3'));\n\t\t\t\t// starts before viewport, ends at viewport end\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 36), createOpts('dec4'));\n\t\t\t\t// starts before viewport, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 51), createOpts('dec5'));\n\n\t\t\t\t// starts at viewport start, ends at viewport start (will not be visible on view line 2)\n\t\t\t\taccessor.addDecoration(new Range(1, 14, 1, 14), createOpts('dec6'));\n\t\t\t\t// starts at viewport start, ends inside viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 14, 1, 16), createOpts('dec7'));\n\t\t\t\t// starts at viewport start, ends at viewport end\n\t\t\t\taccessor.addDecoration(new Range(1, 14, 1, 36), createOpts('dec8'));\n\t\t\t\t// starts at viewport start, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 14, 1, 51), createOpts('dec9'));\n\n\t\t\t\t// starts inside viewport, ends inside viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 16, 1, 18), createOpts('dec10'));\n\t\t\t\t// starts inside viewport, ends at viewport end\n\t\t\t\taccessor.addDecoration(new Range(1, 16, 1, 36), createOpts('dec11'));\n\t\t\t\t// starts inside viewport, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 16, 1, 51), createOpts('dec12'));\n\n\t\t\t\t// starts at viewport end, ends at viewport end\n\t\t\t\taccessor.addDecoration(new Range(1, 36, 1, 36), createOpts('dec13'));\n\t\t\t\t// starts at viewport end, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 36, 1, 51), createOpts('dec14'));\n\n\t\t\t\t// starts after viewport, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 40, 1, 51), createOpts('dec15'));\n\t\t\t});\n\n\t\t\tconst actualDecorations = viewModel.getDecorationsInViewport(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3))\n\t\t\t).map((dec) => {\n\t\t\t\treturn dec.options.className;\n\t\t\t}).filter(Boolean);\n\n\t\t\tassert.deepStrictEqual(actualDecorations, [\n\t\t\t\t'dec1',\n\t\t\t\t'dec2',\n\t\t\t\t'dec3',\n\t\t\t\t'dec4',\n\t\t\t\t'dec5',\n\t\t\t\t'dec6',\n\t\t\t\t'dec7',\n\t\t\t\t'dec8',\n\t\t\t\t'dec9',\n\t\t\t\t'dec10',\n\t\t\t\t'dec11',\n\t\t\t\t'dec12',\n\t\t\t\t'dec13',\n\t\t\t\t'dec14',\n\t\t\t]);\n\n\t\t\tconst inlineDecorations1 = viewModel.getViewportViewLineRenderingData(\n\t\t\t\tnew Range(1, viewModel.getLineMinColumn(1), 2, viewModel.getLineMaxColumn(2)),\n\t\t\t\t1\n\t\t\t).inlineDecorations;\n\n\t\t\t// view line 1: (1,1 -> 1,14)\n\t\t\tassert.deepStrictEqual(inlineDecorations1, [\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 1, 3), 'i-dec1', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 1, 2), 'b-dec1', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(1, 3, 1, 3), 'a-dec1', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 1, 14), 'i-dec2', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 1, 2), 'b-dec2', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(1, 14, 1, 14), 'a-dec2', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 2, 2), 'i-dec3', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 1, 2), 'b-dec3', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 3, 13), 'i-dec4', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 1, 2), 'b-dec4', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 5, 8), 'i-dec5', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 1, 2), 'b-dec5', InlineDecorationType.Before),\n\t\t\t]);\n\n\t\t\tconst inlineDecorations2 = viewModel.getViewportViewLineRenderingData(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3)),\n\t\t\t\t2\n\t\t\t).inlineDecorations;\n\n\t\t\t// view line 2: (1,14 -> 1,24)\n\t\t\tassert.deepStrictEqual(inlineDecorations2, [\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 2, 2), 'i-dec3', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 2, 2, 2), 'a-dec3', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 3, 13), 'i-dec4', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 5, 8), 'i-dec5', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'i-dec6', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'b-dec6', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'a-dec6', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 3), 'i-dec7', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'b-dec7', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 3), 'a-dec7', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 3, 13), 'i-dec8', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'b-dec8', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 5, 8), 'i-dec9', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'b-dec9', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 5), 'i-dec10', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 3), 'b-dec10', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 5, 2, 5), 'a-dec10', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 3, 13), 'i-dec11', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 3), 'b-dec11', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 5, 8), 'i-dec12', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 3), 'b-dec12', InlineDecorationType.Before),\n\t\t\t]);\n\n\t\t\tconst inlineDecorations3 = viewModel.getViewportViewLineRenderingData(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3)),\n\t\t\t\t3\n\t\t\t).inlineDecorations;\n\n\t\t\t// view line 3 (24 -> 36)\n\t\t\tassert.deepStrictEqual(inlineDecorations3, [\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 3, 13), 'i-dec4', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(3, 13, 3, 13), 'a-dec4', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 5, 8), 'i-dec5', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 3, 13), 'i-dec8', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(3, 13, 3, 13), 'a-dec8', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 5, 8), 'i-dec9', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 3, 13), 'i-dec11', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(3, 13, 3, 13), 'a-dec11', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 5, 8), 'i-dec12', InlineDecorationType.Regular),\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('issue #17208: Problem scrolling in 1.8.0', () => {\n\t\tconst text = [\n\t\t\t'hello world, this is a buffer that will be wrapped'\n\t\t];\n\t\tconst opts: IEditorOptions = {\n\t\t\twordWrap: 'wordWrapColumn',\n\t\t\twordWrapColumn: 13\n\t\t};\n\t\ttestViewModel(text, opts, (viewModel, model) => {\n\t\t\tassert.strictEqual(viewModel.getLineContent(1), 'hello world, ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(2), 'this is a ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(3), 'buffer that ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(4), 'will be ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(5), 'wrapped');\n\n\t\t\tmodel.changeDecorations((accessor) => {\n\t\t\t\taccessor.addDecoration(\n\t\t\t\t\tnew Range(1, 50, 1, 51),\n\t\t\t\t\t{\n\t\t\t\t\t\tdescription: 'test',\n\t\t\t\t\t\tbeforeContentClassName: 'dec1'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tconst decorations = viewModel.getDecorationsInViewport(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3))\n\t\t\t).filter(x => Boolean(x.options.beforeContentClassName));\n\t\t\tassert.deepStrictEqual(decorations, []);\n\n\t\t\tconst inlineDecorations1 = viewModel.getViewportViewLineRenderingData(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3)),\n\t\t\t\t2\n\t\t\t).inlineDecorations;\n\t\t\tassert.deepStrictEqual(inlineDecorations1, []);\n\n\t\t\tconst inlineDecorations2 = viewModel.getViewportViewLineRenderingData(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3)),\n\t\t\t\t3\n\t\t\t).inlineDecorations;\n\t\t\tassert.deepStrictEqual(inlineDecorations2, []);\n\t\t});\n\t});\n\n\ttest('issue #37401: Allow both before and after decorations on empty line', () => {\n\t\tconst text = [\n\t\t\t''\n\t\t];\n\t\ttestViewModel(text, {}, (viewModel, model) => {\n\n\t\t\tmodel.changeDecorations((accessor) => {\n\t\t\t\taccessor.addDecoration(\n\t\t\t\t\tnew Range(1, 1, 1, 1),\n\t\t\t\t\t{\n\t\t\t\t\t\tdescription: 'test',\n\t\t\t\t\t\tbeforeContentClassName: 'before1',\n\t\t\t\t\t\tafterContentClassName: 'after1'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tconst inlineDecorations = viewModel.getViewportViewLineRenderingData(\n\t\t\t\tnew Range(1, 1, 1, 1),\n\t\t\t\t1\n\t\t\t).inlineDecorations;\n\t\t\tassert.deepStrictEqual(inlineDecorations, [\n\t\t\t\tnew InlineDecoration(new Range(1, 1, 1, 1), 'before1', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(1, 1, 1, 1), 'after1', InlineDecorationType.After)\n\t\t\t]);\n\t\t});\n\t});\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,+CAA+C;AACxD,SAAS,sBAAsB;AAC/B,SAAS,aAAa;AACtB,SAAS,kBAAkB,4BAA4B;AACvD,SAAS,qBAAqB;AAE9B,MAAM,wBAAwB,MAAM;AAEnC,0CAAwC;AAExC,OAAK,8BAA8B,MAAM;AACxC,UAAM,OAAO;AAAA,MACZ;AAAA,IACD;AACA,UAAM,OAAuB;AAAA,MAC5B,UAAU;AAAA,MACV,gBAAgB;AAAA,IACjB;AACA,kBAAc,MAAM,MAAM,CAAC,WAAW,UAAU;AAC/C,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,eAAe;AAC/D,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,YAAY;AAC5D,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,cAAc;AAC9D,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,UAAU;AAC1D,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,SAAS;AAEzD,YAAM,kBAAkB,CAAC,aAAa;AACrC,cAAM,aAAa,wBAAC,OAAe;AAClC,iBAAO;AAAA,YACN,aAAa;AAAA,YACb,WAAW;AAAA,YACX,iBAAiB,OAAO;AAAA,YACxB,wBAAwB,OAAO;AAAA,YAC/B,uBAAuB,OAAO;AAAA,UAC/B;AAAA,QACD,GARmB;AAanB,iBAAS,cAAc,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,MAAM,CAAC;AAEhE,iBAAS,cAAc,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,WAAW,MAAM,CAAC;AAEjE,iBAAS,cAAc,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,WAAW,MAAM,CAAC;AAEjE,iBAAS,cAAc,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,WAAW,MAAM,CAAC;AAEjE,iBAAS,cAAc,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,WAAW,MAAM,CAAC;AAGjE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,MAAM,CAAC;AAElE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,MAAM,CAAC;AAElE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,MAAM,CAAC;AAElE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,MAAM,CAAC;AAGlE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,OAAO,CAAC;AAEnE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,OAAO,CAAC;AAEnE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,OAAO,CAAC;AAGnE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,OAAO,CAAC;AAEnE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,OAAO,CAAC;AAGnE,iBAAS,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,OAAO,CAAC;AAAA,MACpE,CAAC;AAED,YAAM,oBAAoB,UAAU;AAAA,QACnC,IAAI,MAAM,GAAG,UAAU,iBAAiB,CAAC,GAAG,GAAG,UAAU,iBAAiB,CAAC,CAAC;AAAA,MAC7E,EAAE,IAAI,CAAC,QAAQ;AACd,eAAO,IAAI,QAAQ;AAAA,MACpB,CAAC,EAAE,OAAO,OAAO;AAEjB,aAAO,gBAAgB,mBAAmB;AAAA,QACzC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC;AAED,YAAM,qBAAqB,UAAU;AAAA,QACpC,IAAI,MAAM,GAAG,UAAU,iBAAiB,CAAC,GAAG,GAAG,UAAU,iBAAiB,CAAC,CAAC;AAAA,QAC5E;AAAA,MACD,EAAE;AAGF,aAAO,gBAAgB,oBAAoB;AAAA,QAC1C,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,MAAM;AAAA,QACjF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,KAAK;AAAA,QAChF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,UAAU,qBAAqB,OAAO;AAAA,QACnF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,MAAM;AAAA,QACjF,IAAI,iBAAiB,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,UAAU,qBAAqB,KAAK;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,MAAM;AAAA,QACjF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,UAAU,qBAAqB,OAAO;AAAA,QACnF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,MAAM;AAAA,QACjF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,MAAM;AAAA,MAClF,CAAC;AAED,YAAM,qBAAqB,UAAU;AAAA,QACpC,IAAI,MAAM,GAAG,UAAU,iBAAiB,CAAC,GAAG,GAAG,UAAU,iBAAiB,CAAC,CAAC;AAAA,QAC5E;AAAA,MACD,EAAE;AAGF,aAAO,gBAAgB,oBAAoB;AAAA,QAC1C,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,KAAK;AAAA,QAChF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,UAAU,qBAAqB,OAAO;AAAA,QACnF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,MAAM;AAAA,QACjF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,KAAK;AAAA,QAChF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,MAAM;AAAA,QACjF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,KAAK;AAAA,QAChF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,UAAU,qBAAqB,OAAO;AAAA,QACnF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,MAAM;AAAA,QACjF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,MAAM;AAAA,QACjF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,qBAAqB,OAAO;AAAA,QACnF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,qBAAqB,MAAM;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,qBAAqB,KAAK;AAAA,QACjF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,WAAW,qBAAqB,OAAO;AAAA,QACpF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,qBAAqB,MAAM;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,qBAAqB,OAAO;AAAA,QACnF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,qBAAqB,MAAM;AAAA,MACnF,CAAC;AAED,YAAM,qBAAqB,UAAU;AAAA,QACpC,IAAI,MAAM,GAAG,UAAU,iBAAiB,CAAC,GAAG,GAAG,UAAU,iBAAiB,CAAC,CAAC;AAAA,QAC5E;AAAA,MACD,EAAE;AAGF,aAAO,gBAAgB,oBAAoB;AAAA,QAC1C,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,UAAU,qBAAqB,OAAO;AAAA,QACnF,IAAI,iBAAiB,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,UAAU,qBAAqB,KAAK;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,UAAU,qBAAqB,OAAO;AAAA,QACnF,IAAI,iBAAiB,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,UAAU,qBAAqB,KAAK;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,OAAO;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,WAAW,qBAAqB,OAAO;AAAA,QACpF,IAAI,iBAAiB,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,WAAW,qBAAqB,KAAK;AAAA,QACnF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,qBAAqB,OAAO;AAAA,MACpF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK,4CAA4C,MAAM;AACtD,UAAM,OAAO;AAAA,MACZ;AAAA,IACD;AACA,UAAM,OAAuB;AAAA,MAC5B,UAAU;AAAA,MACV,gBAAgB;AAAA,IACjB;AACA,kBAAc,MAAM,MAAM,CAAC,WAAW,UAAU;AAC/C,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,eAAe;AAC/D,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,YAAY;AAC5D,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,cAAc;AAC9D,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,UAAU;AAC1D,aAAO,YAAY,UAAU,eAAe,CAAC,GAAG,SAAS;AAEzD,YAAM,kBAAkB,CAAC,aAAa;AACrC,iBAAS;AAAA,UACR,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE;AAAA,UACtB;AAAA,YACC,aAAa;AAAA,YACb,wBAAwB;AAAA,UACzB;AAAA,QACD;AAAA,MACD,CAAC;AAED,YAAM,cAAc,UAAU;AAAA,QAC7B,IAAI,MAAM,GAAG,UAAU,iBAAiB,CAAC,GAAG,GAAG,UAAU,iBAAiB,CAAC,CAAC;AAAA,MAC7E,EAAE,OAAO,OAAK,QAAQ,EAAE,QAAQ,sBAAsB,CAAC;AACvD,aAAO,gBAAgB,aAAa,CAAC,CAAC;AAEtC,YAAM,qBAAqB,UAAU;AAAA,QACpC,IAAI,MAAM,GAAG,UAAU,iBAAiB,CAAC,GAAG,GAAG,UAAU,iBAAiB,CAAC,CAAC;AAAA,QAC5E;AAAA,MACD,EAAE;AACF,aAAO,gBAAgB,oBAAoB,CAAC,CAAC;AAE7C,YAAM,qBAAqB,UAAU;AAAA,QACpC,IAAI,MAAM,GAAG,UAAU,iBAAiB,CAAC,GAAG,GAAG,UAAU,iBAAiB,CAAC,CAAC;AAAA,QAC5E;AAAA,MACD,EAAE;AACF,aAAO,gBAAgB,oBAAoB,CAAC,CAAC;AAAA,IAC9C,CAAC;AAAA,EACF,CAAC;AAED,OAAK,uEAAuE,MAAM;AACjF,UAAM,OAAO;AAAA,MACZ;AAAA,IACD;AACA,kBAAc,MAAM,CAAC,GAAG,CAAC,WAAW,UAAU;AAE7C,YAAM,kBAAkB,CAAC,aAAa;AACrC,iBAAS;AAAA,UACR,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,UACpB;AAAA,YACC,aAAa;AAAA,YACb,wBAAwB;AAAA,YACxB,uBAAuB;AAAA,UACxB;AAAA,QACD;AAAA,MACD,CAAC;AAED,YAAM,oBAAoB,UAAU;AAAA,QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,QACpB;AAAA,MACD,EAAE;AACF,aAAO,gBAAgB,mBAAmB;AAAA,QACzC,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,qBAAqB,MAAM;AAAA,QAClF,IAAI,iBAAiB,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,qBAAqB,KAAK;AAAA,MACjF,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AACF,CAAC;",
  "names": []
}
