{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/viewModel/testViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEditorOptions } from '../../../common/config/editorOptions.js';\nimport { TextModel } from '../../../common/model/textModel.js';\nimport { ViewModel } from '../../../common/viewModel/viewModelImpl.js';\nimport { TestConfiguration } from '../config/testConfiguration.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { createTextModel } from '../../common/testTextModel.js';\nimport { TestLanguageConfigurationService } from '../../common/modes/testLanguageConfigurationService.js';\nimport { TestThemeService } from '../../../../platform/theme/test/common/testThemeService.js';\n\nexport function testViewModel(text: string[], options: IEditorOptions, callback: (viewModel: ViewModel, model: TextModel) => void): void {\n\tconst EDITOR_ID = 1;\n\n\tconst configuration = new TestConfiguration(options);\n\tconst model = createTextModel(text.join('\\n'));\n\tconst monospaceLineBreaksComputerFactory = MonospaceLineBreaksComputerFactory.create(configuration.options);\n\tconst testLanguageConfigurationService = new TestLanguageConfigurationService();\n\tconst viewModel = new ViewModel(EDITOR_ID, configuration, model, monospaceLineBreaksComputerFactory, monospaceLineBreaksComputerFactory, null!, testLanguageConfigurationService, new TestThemeService(), {\n\t\tsetVisibleLines(visibleLines, stabilized) {\n\t\t},\n\t}, {\n\t\tbatchChanges: (cb) => cb(),\n\t});\n\n\tcallback(viewModel, model);\n\n\tviewModel.dispose();\n\tmodel.dispose();\n\tconfiguration.dispose();\n\ttestLanguageConfigurationService.dispose();\n}\n"],
  "mappings": ";;AAKA,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;AAC1B,SAAS,iBAAiB;AAC1B,SAAS,yBAAyB;AAClC,SAAS,0CAA0C;AACnD,SAAS,uBAAuB;AAChC,SAAS,wCAAwC;AACjD,SAAS,wBAAwB;AAE1B,SAAS,cAAc,MAAgB,SAAyB,UAAkE;AACxI,QAAM,YAAY;AAElB,QAAM,gBAAgB,IAAI,kBAAkB,OAAO;AACnD,QAAM,QAAQ,gBAAgB,KAAK,KAAK,IAAI,CAAC;AAC7C,QAAM,qCAAqC,mCAAmC,OAAO,cAAc,OAAO;AAC1G,QAAM,mCAAmC,IAAI,iCAAiC;AAC9E,QAAM,YAAY,IAAI,UAAU,WAAW,eAAe,OAAO,oCAAoC,oCAAoC,MAAO,kCAAkC,IAAI,iBAAiB,GAAG;AAAA,IACzM,gBAAgB,cAAc,YAAY;AAAA,IAC1C;AAAA,EACD,GAAG;AAAA,IACF,cAAc,wBAAC,OAAO,GAAG,GAAX;AAAA,EACf,CAAC;AAED,WAAS,WAAW,KAAK;AAEzB,YAAU,QAAQ;AAClB,QAAM,QAAQ;AACd,gBAAc,QAAQ;AACtB,mCAAiC,QAAQ;AAC1C;AApBgB;",
  "names": []
}
