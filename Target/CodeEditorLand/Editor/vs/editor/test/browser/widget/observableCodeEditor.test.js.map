{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/widget/observableCodeEditor.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from \"assert\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { IObservable, derivedHandleChanges } from \"../../../../base/common/observable.js\";\nimport { ensureNoDisposablesAreLeakedInTestSuite } from \"../../../../base/test/common/utils.js\";\nimport { ICodeEditor } from \"../../../browser/editorBrowser.js\";\nimport { ObservableCodeEditor, observableCodeEditor } from \"../../../browser/observableCodeEditor.js\";\nimport { Position } from \"../../../common/core/position.js\";\nimport { Range } from \"../../../common/core/range.js\";\nimport { ViewModel } from \"../../../common/viewModel/viewModelImpl.js\";\nimport { withTestCodeEditor } from \"../testCodeEditor.js\";\n\nsuite(\"CodeEditorWidget\", () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction withTestFixture(\n\t\tcb: (args: { editor: ICodeEditor; viewModel: ViewModel; log: Log; derived: IObservable<string> }) => void\n\t) {\n\t\twithEditorSetupTestFixture(undefined, cb);\n\t}\n\n\tfunction withEditorSetupTestFixture(\n\t\tpreSetupCallback:\n\t\t\t| ((editor: ICodeEditor, disposables: DisposableStore) => void)\n\t\t\t| undefined,\n\t\tcb: (args: { editor: ICodeEditor; viewModel: ViewModel; log: Log; derived: IObservable<string> }) => void\n\t) {\n\t\twithTestCodeEditor(\"hello world\", {}, (editor, viewModel) => {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tpreSetupCallback?.(editor, disposables);\n\t\t\tconst obsEditor = observableCodeEditor(editor);\n\t\t\tconst log = new Log();\n\n\t\t\tconst derived = derivedHandleChanges(\n\t\t\t\t{\n\t\t\t\t\tcreateEmptyChangeSummary: () => undefined,\n\t\t\t\t\thandleChange: (context) => {\n\t\t\t\t\t\tconst obsName = observableName(context.changedObservable, obsEditor);\n\t\t\t\t\t\tlog.log(`handle change: ${obsName} ${formatChange(context.change)}`);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t(reader) => {\n\t\t\t\t\tconst versionId = obsEditor.versionId.read(reader);\n\t\t\t\t\tconst selection = obsEditor.selections.read(reader)?.map((s) => s.toString()).join(\", \");\n\t\t\t\t\tobsEditor.onDidType.read(reader);\n\n\t\t\t\t\tconst str = `running derived: selection: ${selection}, value: ${versionId}`;\n\t\t\t\t\tlog.log(str);\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tderived.recomputeInitiallyAndOnChange(disposables);\n\t\t\tassert.deepStrictEqual(log.getAndClearEntries(), [\n\t\t\t\t\"running derived: selection: [1,1 -> 1,1], value: 1\",\n\t\t\t]);\n\n\t\t\tcb({ editor, viewModel, log, derived });\n\n\t\t\tdisposables.dispose();\n\t\t});\n\t}\n\n\ttest(\"setPosition\", () =>\n\t\twithTestFixture(({ editor, log }) => {\n\t\t\teditor.setPosition(new Position(1, 2));\n\n\t\t\tassert.deepStrictEqual(log.getAndClearEntries(), [\n\t\t\t\t'handle change: editor.selections {\"selection\":\"[1,2 -> 1,2]\",\"modelVersionId\":1,\"oldSelections\":[\"[1,1 -> 1,1]\"],\"oldModelVersionId\":1,\"source\":\"api\",\"reason\":0}',\n\t\t\t\t\"running derived: selection: [1,2 -> 1,2], value: 1\",\n\t\t\t]);\n\t\t}));\n\n\ttest(\"keyboard.type\", () =>\n\t\twithTestFixture(({ editor, log }) => {\n\t\t\teditor.trigger(\"keyboard\", \"type\", { text: \"abc\" });\n\n\t\t\tassert.deepStrictEqual(log.getAndClearEntries(), [\n\t\t\t\t'handle change: editor.onDidType \"abc\"',\n\t\t\t\t'handle change: editor.versionId {\"changes\":[{\"range\":\"[1,1 -> 1,1]\",\"rangeLength\":0,\"text\":\"a\",\"rangeOffset\":0}],\"eol\":\"\\\\n\",\"versionId\":2}',\n\t\t\t\t'handle change: editor.versionId {\"changes\":[{\"range\":\"[1,2 -> 1,2]\",\"rangeLength\":0,\"text\":\"b\",\"rangeOffset\":1}],\"eol\":\"\\\\n\",\"versionId\":3}',\n\t\t\t\t'handle change: editor.versionId {\"changes\":[{\"range\":\"[1,3 -> 1,3]\",\"rangeLength\":0,\"text\":\"c\",\"rangeOffset\":2}],\"eol\":\"\\\\n\",\"versionId\":4}',\n\t\t\t\t'handle change: editor.selections {\"selection\":\"[1,4 -> 1,4]\",\"modelVersionId\":4,\"oldSelections\":[\"[1,1 -> 1,1]\"],\"oldModelVersionId\":1,\"source\":\"keyboard\",\"reason\":0}',\n\t\t\t\t\"running derived: selection: [1,4 -> 1,4], value: 4\",\n\t\t\t]);\n\t\t}));\n\n\ttest(\"keyboard.type and set position\", () =>\n\t\twithTestFixture(({ editor, log }) => {\n\t\t\teditor.trigger(\"keyboard\", \"type\", { text: \"abc\" });\n\n\t\t\tassert.deepStrictEqual(log.getAndClearEntries(), [\n\t\t\t\t'handle change: editor.onDidType \"abc\"',\n\t\t\t\t'handle change: editor.versionId {\"changes\":[{\"range\":\"[1,1 -> 1,1]\",\"rangeLength\":0,\"text\":\"a\",\"rangeOffset\":0}],\"eol\":\"\\\\n\",\"versionId\":2}',\n\t\t\t\t'handle change: editor.versionId {\"changes\":[{\"range\":\"[1,2 -> 1,2]\",\"rangeLength\":0,\"text\":\"b\",\"rangeOffset\":1}],\"eol\":\"\\\\n\",\"versionId\":3}',\n\t\t\t\t'handle change: editor.versionId {\"changes\":[{\"range\":\"[1,3 -> 1,3]\",\"rangeLength\":0,\"text\":\"c\",\"rangeOffset\":2}],\"eol\":\"\\\\n\",\"versionId\":4}',\n\t\t\t\t'handle change: editor.selections {\"selection\":\"[1,4 -> 1,4]\",\"modelVersionId\":4,\"oldSelections\":[\"[1,1 -> 1,1]\"],\"oldModelVersionId\":1,\"source\":\"keyboard\",\"reason\":0}',\n\t\t\t\t\"running derived: selection: [1,4 -> 1,4], value: 4\",\n\t\t\t]);\n\n\t\t\teditor.setPosition(new Position(1, 5), \"test\");\n\n\t\t\tassert.deepStrictEqual(log.getAndClearEntries(), [\n\t\t\t\t'handle change: editor.selections {\"selection\":\"[1,5 -> 1,5]\",\"modelVersionId\":4,\"oldSelections\":[\"[1,4 -> 1,4]\"],\"oldModelVersionId\":4,\"source\":\"test\",\"reason\":0}',\n\t\t\t\t\"running derived: selection: [1,5 -> 1,5], value: 4\",\n\t\t\t]);\n\t\t}));\n\n\ttest(\"listener interaction (unforced)\", () => {\n\t\tlet derived: IObservable<string, unknown>;\n\t\tlet log: Log;\n\t\twithEditorSetupTestFixture(\n\t\t\t(editor, disposables) => {\n\t\t\t\tdisposables.add(\n\t\t\t\t\teditor.onDidChangeModelContent(() => {\n\t\t\t\t\t\tlog.log(\">>> before get\");\n\t\t\t\t\t\tderived.get();\n\t\t\t\t\t\tlog.log(\"<<< after get\");\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\t(args) => {\n\t\t\t\tconst editor = args.editor;\n\t\t\t\tderived = args.derived;\n\t\t\t\tlog = args.log;\n\n\t\t\t\teditor.trigger(\"keyboard\", \"type\", { text: \"a\" });\n\t\t\t\tassert.deepStrictEqual(log.getAndClearEntries(), [\n\t\t\t\t\t\">>> before get\",\n\t\t\t\t\t\"<<< after get\",\n\t\t\t\t\t'handle change: editor.onDidType \"a\"',\n\t\t\t\t\t'handle change: editor.versionId {\"changes\":[{\"range\":\"[1,1 -> 1,1]\",\"rangeLength\":0,\"text\":\"a\",\"rangeOffset\":0}],\"eol\":\"\\\\n\",\"versionId\":2}',\n\t\t\t\t\t'handle change: editor.selections {\"selection\":\"[1,2 -> 1,2]\",\"modelVersionId\":2,\"oldSelections\":[\"[1,1 -> 1,1]\"],\"oldModelVersionId\":1,\"source\":\"keyboard\",\"reason\":0}',\n\t\t\t\t\t\"running derived: selection: [1,2 -> 1,2], value: 2\",\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest(\"listener interaction ()\", () => {\n\t\tlet derived: IObservable<string, unknown>;\n\t\tlet log: Log;\n\t\twithEditorSetupTestFixture(\n\t\t\t(editor, disposables) => {\n\t\t\t\tdisposables.add(\n\t\t\t\t\teditor.onDidChangeModelContent(() => {\n\t\t\t\t\t\tlog.log(\">>> before forceUpdate\");\n\t\t\t\t\t\tobservableCodeEditor(editor).forceUpdate();\n\n\t\t\t\t\t\tlog.log(\">>> before get\");\n\t\t\t\t\t\tderived.get();\n\t\t\t\t\t\tlog.log(\"<<< after get\");\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\t(args) => {\n\t\t\t\tconst editor = args.editor;\n\t\t\t\tderived = args.derived;\n\t\t\t\tlog = args.log;\n\n\t\t\t\teditor.trigger(\"keyboard\", \"type\", { text: \"a\" });\n\n\t\t\t\tassert.deepStrictEqual(log.getAndClearEntries(), [\n\t\t\t\t\t\">>> before forceUpdate\",\n\t\t\t\t\t\">>> before get\",\n\t\t\t\t\t\"handle change: editor.versionId undefined\",\n\t\t\t\t\t\"running derived: selection: [1,2 -> 1,2], value: 2\",\n\t\t\t\t\t\"<<< after get\",\n\t\t\t\t\t'handle change: editor.onDidType \"a\"',\n\t\t\t\t\t'handle change: editor.versionId {\"changes\":[{\"range\":\"[1,1 -> 1,1]\",\"rangeLength\":0,\"text\":\"a\",\"rangeOffset\":0}],\"eol\":\"\\\\n\",\"versionId\":2}',\n\t\t\t\t\t'handle change: editor.selections {\"selection\":\"[1,2 -> 1,2]\",\"modelVersionId\":2,\"oldSelections\":[\"[1,1 -> 1,1]\"],\"oldModelVersionId\":1,\"source\":\"keyboard\",\"reason\":0}',\n\t\t\t\t\t\"running derived: selection: [1,2 -> 1,2], value: 2\",\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t});\n});\n\nclass Log {\n\tprivate readonly entries: string[] = [];\n\tpublic log(message: string): void {\n\t\tthis.entries.push(message);\n\t}\n\n\tpublic getAndClearEntries(): string[] {\n\t\tconst entries = [...this.entries];\n\t\tthis.entries.length = 0;\n\t\treturn entries;\n\t}\n}\n\nfunction formatChange(change: unknown) {\n\treturn JSON.stringify(\n\t\tchange,\n\t\t(key, value) => {\n\t\t\tif (value instanceof Range) {\n\t\t\t\treturn value.toString();\n\t\t\t}\n\t\t\tif (\n\t\t\t\tvalue === false ||\n\t\t\t\t(Array.isArray(value) && value.length === 0)\n\t\t\t) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t);\n}\n\nfunction observableName(obs: IObservable<any>, obsEditor: ObservableCodeEditor): string {\n\tswitch (obs) {\n\t\tcase obsEditor.selections:\n\t\t\treturn \"editor.selections\";\n\t\tcase obsEditor.versionId:\n\t\t\treturn \"editor.versionId\";\n\t\tcase obsEditor.onDidType:\n\t\t\treturn \"editor.onDidType\";\n\t\tdefault:\n\t\t\treturn \"unknown\";\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
