{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/commands/trimTrailingWhitespaceCommand.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { TrimTrailingWhitespaceCommand, trimTrailingWhitespace } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { ISingleEditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { MetadataConsts, StandardTokenType } from '../../../common/encodedTokenAttributes.js';\nimport { EncodedTokenizationResult, ITokenizationSupport, TokenizationRegistry } from '../../../common/languages.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { NullState } from '../../../common/languages/nullTokenize.js';\nimport { getEditOperation } from '../testCommand.js';\nimport { createModelServices, instantiateTextModel, withEditorModel } from '../../common/testTextModel.js';\n\n/**\n * Create single edit operation\n */\nfunction createInsertDeleteSingleEditOp(text: string | null, positionLineNumber: number, positionColumn: number, selectionLineNumber: number = positionLineNumber, selectionColumn: number = positionColumn): ISingleEditOperation {\n\treturn {\n\t\trange: new Range(selectionLineNumber, selectionColumn, positionLineNumber, positionColumn),\n\t\ttext: text\n\t};\n}\n\n/**\n * Create single edit operation\n */\nfunction createSingleEditOp(text: string | null, positionLineNumber: number, positionColumn: number, selectionLineNumber: number = positionLineNumber, selectionColumn: number = positionColumn): ISingleEditOperation {\n\treturn {\n\t\trange: new Range(selectionLineNumber, selectionColumn, positionLineNumber, positionColumn),\n\t\ttext: text,\n\t\tforceMoveMarkers: false\n\t};\n}\n\nfunction assertTrimTrailingWhitespaceCommand(text: string[], expected: ISingleEditOperation[]): void {\n\treturn withEditorModel(text, (model) => {\n\t\tconst op = new TrimTrailingWhitespaceCommand(new Selection(1, 1, 1, 1), [], true);\n\t\tconst actual = getEditOperation(model, op);\n\t\tassert.deepStrictEqual(actual, expected);\n\t});\n}\n\nfunction assertTrimTrailingWhitespace(text: string[], cursors: Position[], expected: ISingleEditOperation[]): void {\n\treturn withEditorModel(text, (model) => {\n\t\tconst actual = trimTrailingWhitespace(model, cursors, true);\n\t\tassert.deepStrictEqual(actual, expected);\n\t});\n}\n\nsuite('Editor Commands - Trim Trailing Whitespace Command', () => {\n\n\tlet disposables: DisposableStore;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('remove trailing whitespace', function () {\n\t\tassertTrimTrailingWhitespaceCommand([''], []);\n\t\tassertTrimTrailingWhitespaceCommand(['text'], []);\n\t\tassertTrimTrailingWhitespaceCommand(['text   '], [createSingleEditOp(null, 1, 5, 1, 8)]);\n\t\tassertTrimTrailingWhitespaceCommand(['text\\t   '], [createSingleEditOp(null, 1, 5, 1, 9)]);\n\t\tassertTrimTrailingWhitespaceCommand(['\\t   '], [createSingleEditOp(null, 1, 1, 1, 5)]);\n\t\tassertTrimTrailingWhitespaceCommand(['text\\t'], [createSingleEditOp(null, 1, 5, 1, 6)]);\n\t\tassertTrimTrailingWhitespaceCommand([\n\t\t\t'some text\\t',\n\t\t\t'some more text',\n\t\t\t'\\t  ',\n\t\t\t'even more text  ',\n\t\t\t'and some mixed\\t   \\t'\n\t\t], [\n\t\t\tcreateSingleEditOp(null, 1, 10, 1, 11),\n\t\t\tcreateSingleEditOp(null, 3, 1, 3, 4),\n\t\t\tcreateSingleEditOp(null, 4, 15, 4, 17),\n\t\t\tcreateSingleEditOp(null, 5, 15, 5, 20)\n\t\t]);\n\n\n\t\tassertTrimTrailingWhitespace(['text   '], [new Position(1, 1), new Position(1, 2), new Position(1, 3)], [createInsertDeleteSingleEditOp(null, 1, 5, 1, 8)]);\n\t\tassertTrimTrailingWhitespace(['text   '], [new Position(1, 1), new Position(1, 5)], [createInsertDeleteSingleEditOp(null, 1, 5, 1, 8)]);\n\t\tassertTrimTrailingWhitespace(['text   '], [new Position(1, 1), new Position(1, 5), new Position(1, 6)], [createInsertDeleteSingleEditOp(null, 1, 6, 1, 8)]);\n\t\tassertTrimTrailingWhitespace([\n\t\t\t'some text\\t',\n\t\t\t'some more text',\n\t\t\t'\\t  ',\n\t\t\t'even more text  ',\n\t\t\t'and some mixed\\t   \\t'\n\t\t], [], [\n\t\t\tcreateInsertDeleteSingleEditOp(null, 1, 10, 1, 11),\n\t\t\tcreateInsertDeleteSingleEditOp(null, 3, 1, 3, 4),\n\t\t\tcreateInsertDeleteSingleEditOp(null, 4, 15, 4, 17),\n\t\t\tcreateInsertDeleteSingleEditOp(null, 5, 15, 5, 20)\n\t\t]);\n\t\tassertTrimTrailingWhitespace([\n\t\t\t'some text\\t',\n\t\t\t'some more text',\n\t\t\t'\\t  ',\n\t\t\t'even more text  ',\n\t\t\t'and some mixed\\t   \\t'\n\t\t], [new Position(1, 11), new Position(3, 2), new Position(5, 1), new Position(4, 1), new Position(5, 10)], [\n\t\t\tcreateInsertDeleteSingleEditOp(null, 3, 2, 3, 4),\n\t\t\tcreateInsertDeleteSingleEditOp(null, 4, 15, 4, 17),\n\t\t\tcreateInsertDeleteSingleEditOp(null, 5, 15, 5, 20)\n\t\t]);\n\t});\n\n\ttest('skips strings and regex if configured', function () {\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\tconst languageId = 'testLanguageId';\n\t\tconst languageIdCodec = languageService.languageIdCodec;\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tconst encodedLanguageId = languageIdCodec.encodeLanguageId(languageId);\n\n\t\tconst otherMetadata = (\n\t\t\t(encodedLanguageId << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t\t| (StandardTokenType.Other << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t\t| (MetadataConsts.BALANCED_BRACKETS_MASK)\n\t\t) >>> 0;\n\t\tconst stringMetadata = (\n\t\t\t(encodedLanguageId << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t\t| (StandardTokenType.String << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t\t| (MetadataConsts.BALANCED_BRACKETS_MASK)\n\t\t) >>> 0;\n\n\t\tconst tokenizationSupport: ITokenizationSupport = {\n\t\t\tgetInitialState: () => NullState,\n\t\t\ttokenize: undefined!,\n\t\t\ttokenizeEncoded: (line, hasEOL, state) => {\n\t\t\t\tswitch (line) {\n\t\t\t\t\tcase 'const a = `  ': {\n\t\t\t\t\t\tconst tokens = new Uint32Array([\n\t\t\t\t\t\t\t0, otherMetadata,\n\t\t\t\t\t\t\t10, stringMetadata,\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t\t}\n\t\t\t\t\tcase '  a string  ': {\n\t\t\t\t\t\tconst tokens = new Uint32Array([\n\t\t\t\t\t\t\t0, stringMetadata,\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t\t}\n\t\t\t\t\tcase '`;  ': {\n\t\t\t\t\t\tconst tokens = new Uint32Array([\n\t\t\t\t\t\t\t0, stringMetadata,\n\t\t\t\t\t\t\t1, otherMetadata\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error(`Unexpected`);\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(TokenizationRegistry.register(languageId, tokenizationSupport));\n\n\t\tconst model = disposables.add(instantiateTextModel(\n\t\t\tinstantiationService,\n\t\t\t[\n\t\t\t\t'const a = `  ',\n\t\t\t\t'  a string  ',\n\t\t\t\t'`;  ',\n\t\t\t].join('\\n'),\n\t\t\tlanguageId\n\t\t));\n\n\t\tmodel.tokenization.forceTokenization(1);\n\t\tmodel.tokenization.forceTokenization(2);\n\t\tmodel.tokenization.forceTokenization(3);\n\n\t\tconst op = new TrimTrailingWhitespaceCommand(new Selection(1, 1, 1, 1), [], false);\n\t\tconst actual = getEditOperation(model, op);\n\t\tassert.deepStrictEqual(actual, [createSingleEditOp(null, 3, 3, 3, 5)]);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
