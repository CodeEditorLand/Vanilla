{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/view/viewLayer.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { ILine, RenderedLinesCollection } from '../../../browser/view/viewLayer.js';\n\nclass TestLine implements ILine {\n\n\t_pinged = false;\n\tconstructor(public id: string) {\n\t}\n\n\tonContentChanged(): void {\n\t\tthis._pinged = true;\n\t}\n\tonTokensChanged(): void {\n\t\tthis._pinged = true;\n\t}\n}\n\ninterface ILinesCollectionState {\n\tstartLineNumber: number;\n\tlines: string[];\n\tpinged: boolean[];\n}\n\nfunction assertState(col: RenderedLinesCollection<TestLine>, state: ILinesCollectionState): void {\n\tconst actualState: ILinesCollectionState = {\n\t\tstartLineNumber: col.getStartLineNumber(),\n\t\tlines: [],\n\t\tpinged: []\n\t};\n\tfor (let lineNumber = col.getStartLineNumber(); lineNumber <= col.getEndLineNumber(); lineNumber++) {\n\t\tactualState.lines.push(col.getLine(lineNumber).id);\n\t\tactualState.pinged.push(col.getLine(lineNumber)._pinged);\n\t}\n\tassert.deepStrictEqual(actualState, state);\n}\n\nsuite('RenderedLinesCollection onLinesDeleted', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction testOnModelLinesDeleted(deleteFromLineNumber: number, deleteToLineNumber: number, expectedDeleted: string[], expectedState: ILinesCollectionState): void {\n\t\tconst col = new RenderedLinesCollection<TestLine>({ createLine: () => new TestLine('new') });\n\t\tcol._set(6, [\n\t\t\tnew TestLine('old6'),\n\t\t\tnew TestLine('old7'),\n\t\t\tnew TestLine('old8'),\n\t\t\tnew TestLine('old9')\n\t\t]);\n\t\tconst actualDeleted1 = col.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n\t\tlet actualDeleted: string[] = [];\n\t\tif (actualDeleted1) {\n\t\t\tactualDeleted = actualDeleted1.map(line => line.id);\n\t\t}\n\t\tassert.deepStrictEqual(actualDeleted, expectedDeleted);\n\t\tassertState(col, expectedState);\n\t}\n\n\ttest('A1', () => {\n\t\ttestOnModelLinesDeleted(3, 3, [], {\n\t\t\tstartLineNumber: 5,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A2', () => {\n\t\ttestOnModelLinesDeleted(3, 4, [], {\n\t\t\tstartLineNumber: 4,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A3', () => {\n\t\ttestOnModelLinesDeleted(3, 5, [], {\n\t\t\tstartLineNumber: 3,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A4', () => {\n\t\ttestOnModelLinesDeleted(3, 6, ['old6'], {\n\t\t\tstartLineNumber: 3,\n\t\t\tlines: ['old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false]\n\t\t});\n\t});\n\n\ttest('A5', () => {\n\t\ttestOnModelLinesDeleted(3, 7, ['old6', 'old7'], {\n\t\t\tstartLineNumber: 3,\n\t\t\tlines: ['old8', 'old9'],\n\t\t\tpinged: [false, false]\n\t\t});\n\t});\n\n\ttest('A6', () => {\n\t\ttestOnModelLinesDeleted(3, 8, ['old6', 'old7', 'old8'], {\n\t\t\tstartLineNumber: 3,\n\t\t\tlines: ['old9'],\n\t\t\tpinged: [false]\n\t\t});\n\t});\n\n\ttest('A7', () => {\n\t\ttestOnModelLinesDeleted(3, 9, ['old6', 'old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 3,\n\t\t\tlines: [],\n\t\t\tpinged: []\n\t\t});\n\t});\n\n\ttest('A8', () => {\n\t\ttestOnModelLinesDeleted(3, 10, ['old6', 'old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 3,\n\t\t\tlines: [],\n\t\t\tpinged: []\n\t\t});\n\t});\n\n\n\ttest('B1', () => {\n\t\ttestOnModelLinesDeleted(5, 5, [], {\n\t\t\tstartLineNumber: 5,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('B2', () => {\n\t\ttestOnModelLinesDeleted(5, 6, ['old6'], {\n\t\t\tstartLineNumber: 5,\n\t\t\tlines: ['old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false]\n\t\t});\n\t});\n\n\ttest('B3', () => {\n\t\ttestOnModelLinesDeleted(5, 7, ['old6', 'old7'], {\n\t\t\tstartLineNumber: 5,\n\t\t\tlines: ['old8', 'old9'],\n\t\t\tpinged: [false, false]\n\t\t});\n\t});\n\n\ttest('B4', () => {\n\t\ttestOnModelLinesDeleted(5, 8, ['old6', 'old7', 'old8'], {\n\t\t\tstartLineNumber: 5,\n\t\t\tlines: ['old9'],\n\t\t\tpinged: [false]\n\t\t});\n\t});\n\n\ttest('B5', () => {\n\t\ttestOnModelLinesDeleted(5, 9, ['old6', 'old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 5,\n\t\t\tlines: [],\n\t\t\tpinged: []\n\t\t});\n\t});\n\n\ttest('B6', () => {\n\t\ttestOnModelLinesDeleted(5, 10, ['old6', 'old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 5,\n\t\t\tlines: [],\n\t\t\tpinged: []\n\t\t});\n\t});\n\n\n\ttest('C1', () => {\n\t\ttestOnModelLinesDeleted(6, 6, ['old6'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false]\n\t\t});\n\t});\n\n\ttest('C2', () => {\n\t\ttestOnModelLinesDeleted(6, 7, ['old6', 'old7'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old8', 'old9'],\n\t\t\tpinged: [false, false]\n\t\t});\n\t});\n\n\ttest('C3', () => {\n\t\ttestOnModelLinesDeleted(6, 8, ['old6', 'old7', 'old8'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old9'],\n\t\t\tpinged: [false]\n\t\t});\n\t});\n\n\ttest('C4', () => {\n\t\ttestOnModelLinesDeleted(6, 9, ['old6', 'old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: [],\n\t\t\tpinged: []\n\t\t});\n\t});\n\n\ttest('C5', () => {\n\t\ttestOnModelLinesDeleted(6, 10, ['old6', 'old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: [],\n\t\t\tpinged: []\n\t\t});\n\t});\n\n\n\ttest('D1', () => {\n\t\ttestOnModelLinesDeleted(7, 7, ['old7'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false]\n\t\t});\n\t});\n\n\ttest('D2', () => {\n\t\ttestOnModelLinesDeleted(7, 8, ['old7', 'old8'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old9'],\n\t\t\tpinged: [false, false]\n\t\t});\n\t});\n\n\ttest('D3', () => {\n\t\ttestOnModelLinesDeleted(7, 9, ['old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6'],\n\t\t\tpinged: [false]\n\t\t});\n\t});\n\n\ttest('D4', () => {\n\t\ttestOnModelLinesDeleted(7, 10, ['old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6'],\n\t\t\tpinged: [false]\n\t\t});\n\t});\n\n\n\ttest('E1', () => {\n\t\ttestOnModelLinesDeleted(8, 8, ['old8'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old9'],\n\t\t\tpinged: [false, false, false]\n\t\t});\n\t});\n\n\ttest('E2', () => {\n\t\ttestOnModelLinesDeleted(8, 9, ['old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7'],\n\t\t\tpinged: [false, false]\n\t\t});\n\t});\n\n\ttest('E3', () => {\n\t\ttestOnModelLinesDeleted(8, 10, ['old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7'],\n\t\t\tpinged: [false, false]\n\t\t});\n\t});\n\n\n\ttest('F1', () => {\n\t\ttestOnModelLinesDeleted(9, 9, ['old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8'],\n\t\t\tpinged: [false, false, false]\n\t\t});\n\t});\n\n\ttest('F2', () => {\n\t\ttestOnModelLinesDeleted(9, 10, ['old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8'],\n\t\t\tpinged: [false, false, false]\n\t\t});\n\t});\n\n\n\ttest('G1', () => {\n\t\ttestOnModelLinesDeleted(10, 10, [], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('G2', () => {\n\t\ttestOnModelLinesDeleted(10, 11, [], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\n\ttest('H1', () => {\n\t\ttestOnModelLinesDeleted(11, 13, [], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n});\n\nsuite('RenderedLinesCollection onLineChanged', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction testOnModelLineChanged(changedLineNumber: number, expectedPinged: boolean, expectedState: ILinesCollectionState): void {\n\t\tconst col = new RenderedLinesCollection<TestLine>({ createLine: () => new TestLine('new') });\n\t\tcol._set(6, [\n\t\t\tnew TestLine('old6'),\n\t\t\tnew TestLine('old7'),\n\t\t\tnew TestLine('old8'),\n\t\t\tnew TestLine('old9')\n\t\t]);\n\t\tconst actualPinged = col.onLinesChanged(changedLineNumber, 1);\n\t\tassert.deepStrictEqual(actualPinged, expectedPinged);\n\t\tassertState(col, expectedState);\n\t}\n\n\ttest('3', () => {\n\t\ttestOnModelLineChanged(3, false, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\ttest('4', () => {\n\t\ttestOnModelLineChanged(4, false, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\ttest('5', () => {\n\t\ttestOnModelLineChanged(5, false, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\ttest('6', () => {\n\t\ttestOnModelLineChanged(6, true, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [true, false, false, false]\n\t\t});\n\t});\n\ttest('7', () => {\n\t\ttestOnModelLineChanged(7, true, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, true, false, false]\n\t\t});\n\t});\n\ttest('8', () => {\n\t\ttestOnModelLineChanged(8, true, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, true, false]\n\t\t});\n\t});\n\ttest('9', () => {\n\t\ttestOnModelLineChanged(9, true, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, true]\n\t\t});\n\t});\n\ttest('10', () => {\n\t\ttestOnModelLineChanged(10, false, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\ttest('11', () => {\n\t\ttestOnModelLineChanged(11, false, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n});\n\nsuite('RenderedLinesCollection onLinesInserted', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction testOnModelLinesInserted(insertFromLineNumber: number, insertToLineNumber: number, expectedDeleted: string[], expectedState: ILinesCollectionState): void {\n\t\tconst col = new RenderedLinesCollection<TestLine>({ createLine: () => new TestLine('new') });\n\t\tcol._set(6, [\n\t\t\tnew TestLine('old6'),\n\t\t\tnew TestLine('old7'),\n\t\t\tnew TestLine('old8'),\n\t\t\tnew TestLine('old9')\n\t\t]);\n\t\tconst actualDeleted1 = col.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n\t\tlet actualDeleted: string[] = [];\n\t\tif (actualDeleted1) {\n\t\t\tactualDeleted = actualDeleted1.map(line => line.id);\n\t\t}\n\t\tassert.deepStrictEqual(actualDeleted, expectedDeleted);\n\t\tassertState(col, expectedState);\n\t}\n\n\ttest('A1', () => {\n\t\ttestOnModelLinesInserted(3, 3, [], {\n\t\t\tstartLineNumber: 7,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A2', () => {\n\t\ttestOnModelLinesInserted(3, 4, [], {\n\t\t\tstartLineNumber: 8,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A3', () => {\n\t\ttestOnModelLinesInserted(3, 5, [], {\n\t\t\tstartLineNumber: 9,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A4', () => {\n\t\ttestOnModelLinesInserted(3, 6, [], {\n\t\t\tstartLineNumber: 10,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A5', () => {\n\t\ttestOnModelLinesInserted(3, 7, [], {\n\t\t\tstartLineNumber: 11,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A6', () => {\n\t\ttestOnModelLinesInserted(3, 8, [], {\n\t\t\tstartLineNumber: 12,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A7', () => {\n\t\ttestOnModelLinesInserted(3, 9, [], {\n\t\t\tstartLineNumber: 13,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('A8', () => {\n\t\ttestOnModelLinesInserted(3, 10, [], {\n\t\t\tstartLineNumber: 14,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\n\ttest('B1', () => {\n\t\ttestOnModelLinesInserted(5, 5, [], {\n\t\t\tstartLineNumber: 7,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('B2', () => {\n\t\ttestOnModelLinesInserted(5, 6, [], {\n\t\t\tstartLineNumber: 8,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('B3', () => {\n\t\ttestOnModelLinesInserted(5, 7, [], {\n\t\t\tstartLineNumber: 9,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('B4', () => {\n\t\ttestOnModelLinesInserted(5, 8, [], {\n\t\t\tstartLineNumber: 10,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('B5', () => {\n\t\ttestOnModelLinesInserted(5, 9, [], {\n\t\t\tstartLineNumber: 11,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('B6', () => {\n\t\ttestOnModelLinesInserted(5, 10, [], {\n\t\t\tstartLineNumber: 12,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\n\ttest('C1', () => {\n\t\ttestOnModelLinesInserted(6, 6, [], {\n\t\t\tstartLineNumber: 7,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('C2', () => {\n\t\ttestOnModelLinesInserted(6, 7, [], {\n\t\t\tstartLineNumber: 8,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('C3', () => {\n\t\ttestOnModelLinesInserted(6, 8, [], {\n\t\t\tstartLineNumber: 9,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('C4', () => {\n\t\ttestOnModelLinesInserted(6, 9, [], {\n\t\t\tstartLineNumber: 10,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('C5', () => {\n\t\ttestOnModelLinesInserted(6, 10, [], {\n\t\t\tstartLineNumber: 11,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\n\ttest('D1', () => {\n\t\ttestOnModelLinesInserted(7, 7, ['old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'new', 'old7', 'old8'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('D2', () => {\n\t\ttestOnModelLinesInserted(7, 8, ['old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'new', 'new', 'old7'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('D3', () => {\n\t\ttestOnModelLinesInserted(7, 9, ['old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6'],\n\t\t\tpinged: [false]\n\t\t});\n\t});\n\n\ttest('D4', () => {\n\t\ttestOnModelLinesInserted(7, 10, ['old7', 'old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6'],\n\t\t\tpinged: [false]\n\t\t});\n\t});\n\n\n\ttest('E1', () => {\n\t\ttestOnModelLinesInserted(8, 8, ['old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'new', 'old8'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('E2', () => {\n\t\ttestOnModelLinesInserted(8, 9, ['old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7'],\n\t\t\tpinged: [false, false]\n\t\t});\n\t});\n\n\ttest('E3', () => {\n\t\ttestOnModelLinesInserted(8, 10, ['old8', 'old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7'],\n\t\t\tpinged: [false, false]\n\t\t});\n\t});\n\n\n\ttest('F1', () => {\n\t\ttestOnModelLinesInserted(9, 9, ['old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8'],\n\t\t\tpinged: [false, false, false]\n\t\t});\n\t});\n\n\ttest('F2', () => {\n\t\ttestOnModelLinesInserted(9, 10, ['old9'], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8'],\n\t\t\tpinged: [false, false, false]\n\t\t});\n\t});\n\n\n\ttest('G1', () => {\n\t\ttestOnModelLinesInserted(10, 10, [], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\ttest('G2', () => {\n\t\ttestOnModelLinesInserted(10, 11, [], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\n\n\ttest('H1', () => {\n\t\ttestOnModelLinesInserted(11, 13, [], {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n});\n\n\nsuite('RenderedLinesCollection onTokensChanged', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction testOnModelTokensChanged(changedFromLineNumber: number, changedToLineNumber: number, expectedPinged: boolean, expectedState: ILinesCollectionState): void {\n\t\tconst col = new RenderedLinesCollection<TestLine>({ createLine: () => new TestLine('new') });\n\t\tcol._set(6, [\n\t\t\tnew TestLine('old6'),\n\t\t\tnew TestLine('old7'),\n\t\t\tnew TestLine('old8'),\n\t\t\tnew TestLine('old9')\n\t\t]);\n\t\tconst actualPinged = col.onTokensChanged([{ fromLineNumber: changedFromLineNumber, toLineNumber: changedToLineNumber }]);\n\t\tassert.deepStrictEqual(actualPinged, expectedPinged);\n\t\tassertState(col, expectedState);\n\t}\n\n\ttest('A', () => {\n\t\ttestOnModelTokensChanged(3, 3, false, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\ttest('B', () => {\n\t\ttestOnModelTokensChanged(3, 5, false, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\ttest('C', () => {\n\t\ttestOnModelTokensChanged(3, 6, true, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [true, false, false, false]\n\t\t});\n\t});\n\ttest('D', () => {\n\t\ttestOnModelTokensChanged(6, 6, true, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [true, false, false, false]\n\t\t});\n\t});\n\ttest('E', () => {\n\t\ttestOnModelTokensChanged(5, 10, true, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [true, true, true, true]\n\t\t});\n\t});\n\ttest('F', () => {\n\t\ttestOnModelTokensChanged(8, 9, true, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, true, true]\n\t\t});\n\t});\n\ttest('G', () => {\n\t\ttestOnModelTokensChanged(8, 11, true, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, true, true]\n\t\t});\n\t});\n\ttest('H', () => {\n\t\ttestOnModelTokensChanged(10, 10, false, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n\ttest('I', () => {\n\t\ttestOnModelTokensChanged(10, 11, false, {\n\t\t\tstartLineNumber: 6,\n\t\t\tlines: ['old6', 'old7', 'old8', 'old9'],\n\t\t\tpinged: [false, false, false, false]\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
