{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/view/gpu/objectCollectionBuffer.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual, strictEqual, throws } from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { createObjectCollectionBuffer, type IObjectCollectionBuffer } from '../../../../browser/gpu/objectCollectionBuffer.js';\n\nsuite('ObjectCollectionBuffer', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction assertUsedData(buffer: IObjectCollectionBuffer<any>, expected: number[]) {\n\t\tdeepStrictEqual(Array.from(buffer.view.subarray(0, buffer.viewUsedSize)), expected);\n\t}\n\n\ttest('createEntry', () => {\n\t\tconst buffer = store.add(createObjectCollectionBuffer([\n\t\t\t{ name: 'a' },\n\t\t\t{ name: 'b' },\n\t\t] as const, 5));\n\t\tassertUsedData(buffer, []);\n\n\t\tstore.add(buffer.createEntry({ a: 1, b: 2 }));\n\t\tstore.add(buffer.createEntry({ a: 3, b: 4 }));\n\t\tstore.add(buffer.createEntry({ a: 5, b: 6 }));\n\t\tstore.add(buffer.createEntry({ a: 7, b: 8 }));\n\t\tstore.add(buffer.createEntry({ a: 9, b: 10 }));\n\t\tassertUsedData(buffer, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n\t});\n\n\ttest('createEntry beyond capacity', () => {\n\t\tconst buffer = store.add(createObjectCollectionBuffer([\n\t\t\t{ name: 'a' },\n\t\t\t{ name: 'b' },\n\t\t] as const, 1));\n\t\tstore.add(buffer.createEntry({ a: 1, b: 2 }));\n\t\tthrows(() => buffer.createEntry({ a: 3, b: 4 }));\n\t});\n\n\ttest('dispose entry', () => {\n\t\tconst buffer = store.add(createObjectCollectionBuffer([\n\t\t\t{ name: 'a' },\n\t\t\t{ name: 'b' },\n\t\t] as const, 5));\n\t\tstore.add(buffer.createEntry({ a: 1, b: 2 }));\n\t\tconst entry1 = buffer.createEntry({ a: 3, b: 4 });\n\t\tstore.add(buffer.createEntry({ a: 5, b: 6 }));\n\t\tconst entry2 = buffer.createEntry({ a: 7, b: 8 });\n\t\tstore.add(buffer.createEntry({ a: 9, b: 10 }));\n\t\tentry1.dispose();\n\t\tentry2.dispose();\n\t\t// Data from disposed entries is stale and doesn't need to be validated\n\t\tassertUsedData(buffer, [1, 2, 5, 6, 9, 10]);\n\t});\n\n\ttest('entry.get', () => {\n\t\tconst buffer = store.add(createObjectCollectionBuffer([\n\t\t\t{ name: 'foo' },\n\t\t\t{ name: 'bar' },\n\t\t] as const, 5));\n\t\tconst entry = store.add(buffer.createEntry({ foo: 1, bar: 2 }));\n\t\tstrictEqual(entry.get('foo'), 1);\n\t\tstrictEqual(entry.get('bar'), 2);\n\t});\n\n\ttest('entry.set', () => {\n\t\tconst buffer = store.add(createObjectCollectionBuffer([\n\t\t\t{ name: 'foo' },\n\t\t\t{ name: 'bar' },\n\t\t] as const, 5));\n\t\tconst entry = store.add(buffer.createEntry({ foo: 1, bar: 2 }));\n\t\tlet changeCount = 0;\n\t\tstore.add(buffer.onDidChange(() => changeCount++));\n\t\tentry.set('foo', 3);\n\t\tstrictEqual(changeCount, 1);\n\t\tstrictEqual(entry.get('foo'), 3);\n\t\tentry.set('bar', 4);\n\t\tstrictEqual(changeCount, 2);\n\t\tstrictEqual(entry.get('bar'), 4);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
