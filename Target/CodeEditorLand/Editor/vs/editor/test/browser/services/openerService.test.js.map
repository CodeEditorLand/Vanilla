{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/services/openerService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { OpenerService } from '../../../browser/services/openerService.js';\nimport { TestCodeEditorService } from '../editorTestServices.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { NullCommandService } from '../../../../platform/commands/test/common/nullCommandService.js';\nimport { ITextEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { matchesScheme, matchesSomeScheme } from '../../../../base/common/network.js';\nimport { TestThemeService } from '../../../../platform/theme/test/common/testThemeService.js';\n\nsuite('OpenerService', function () {\n\tconst themeService = new TestThemeService();\n\tconst editorService = new TestCodeEditorService(themeService);\n\n\tlet lastCommand: { id: string; args: any[] } | undefined;\n\n\tconst commandService = new (class implements ICommandService {\n\t\tdeclare readonly _serviceBrand: undefined;\n\t\tonWillExecuteCommand = () => Disposable.None;\n\t\tonDidExecuteCommand = () => Disposable.None;\n\t\texecuteCommand(id: string, ...args: any[]): Promise<any> {\n\t\t\tlastCommand = { id, args };\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t})();\n\n\tsetup(function () {\n\t\tlastCommand = undefined;\n\t});\n\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('delegate to editorService, scheme:///fff', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\t\tawait openerService.open(URI.parse('another:///somepath'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection, undefined);\n\t});\n\n\ttest('delegate to editorService, scheme:///fff#L123', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\n\t\tawait openerService.open(URI.parse('file:///somepath#L23'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 1);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endLineNumber, undefined);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endColumn, undefined);\n\t\tassert.strictEqual(editorService.lastInput!.resource.fragment, '');\n\n\t\tawait openerService.open(URI.parse('another:///somepath#L23'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 1);\n\n\t\tawait openerService.open(URI.parse('another:///somepath#L23,45'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 45);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endLineNumber, undefined);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endColumn, undefined);\n\t\tassert.strictEqual(editorService.lastInput!.resource.fragment, '');\n\t});\n\n\ttest('delegate to editorService, scheme:///fff#123,123', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\n\t\tawait openerService.open(URI.parse('file:///somepath#23'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 1);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endLineNumber, undefined);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endColumn, undefined);\n\t\tassert.strictEqual(editorService.lastInput!.resource.fragment, '');\n\n\t\tawait openerService.open(URI.parse('file:///somepath#23,45'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 45);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endLineNumber, undefined);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endColumn, undefined);\n\t\tassert.strictEqual(editorService.lastInput!.resource.fragment, '');\n\t});\n\n\ttest('delegate to commandsService, command:someid', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tconst id = `aCommand${Math.random()}`;\n\t\tstore.add(CommandsRegistry.registerCommand(id, function () { }));\n\n\t\tassert.strictEqual(lastCommand, undefined);\n\t\tawait openerService.open(URI.parse('command:' + id));\n\t\tassert.strictEqual(lastCommand, undefined);\n\t});\n\n\n\ttest('delegate to commandsService, command:someid, 2', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tconst id = `aCommand${Math.random()}`;\n\t\tstore.add(CommandsRegistry.registerCommand(id, function () { }));\n\n\t\tawait openerService.open(URI.parse('command:' + id).with({ query: '\\\"123\\\"' }), { allowCommands: true });\n\t\tassert.strictEqual(lastCommand!.id, id);\n\t\tassert.strictEqual(lastCommand!.args.length, 1);\n\t\tassert.strictEqual(lastCommand!.args[0], '123');\n\n\t\tawait openerService.open(URI.parse('command:' + id), { allowCommands: true });\n\t\tassert.strictEqual(lastCommand!.id, id);\n\t\tassert.strictEqual(lastCommand!.args.length, 0);\n\n\t\tawait openerService.open(URI.parse('command:' + id).with({ query: '123' }), { allowCommands: true });\n\t\tassert.strictEqual(lastCommand!.id, id);\n\t\tassert.strictEqual(lastCommand!.args.length, 1);\n\t\tassert.strictEqual(lastCommand!.args[0], 123);\n\n\t\tawait openerService.open(URI.parse('command:' + id).with({ query: JSON.stringify([12, true]) }), { allowCommands: true });\n\t\tassert.strictEqual(lastCommand!.id, id);\n\t\tassert.strictEqual(lastCommand!.args.length, 2);\n\t\tassert.strictEqual(lastCommand!.args[0], 12);\n\t\tassert.strictEqual(lastCommand!.args[1], true);\n\t});\n\n\ttest('links are protected by validators', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tstore.add(openerService.registerValidator({ shouldOpen: () => Promise.resolve(false) }));\n\n\t\tconst httpResult = await openerService.open(URI.parse('https://www.microsoft.com'));\n\t\tconst httpsResult = await openerService.open(URI.parse('https://www.microsoft.com'));\n\t\tassert.strictEqual(httpResult, false);\n\t\tassert.strictEqual(httpsResult, false);\n\t});\n\n\ttest('links validated by validators go to openers', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tstore.add(openerService.registerValidator({ shouldOpen: () => Promise.resolve(true) }));\n\n\t\tlet openCount = 0;\n\t\tstore.add(openerService.registerOpener({\n\t\t\topen: (resource: URI) => {\n\t\t\t\topenCount++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t}));\n\n\t\tawait openerService.open(URI.parse('http://microsoft.com'));\n\t\tassert.strictEqual(openCount, 1);\n\t\tawait openerService.open(URI.parse('https://microsoft.com'));\n\t\tassert.strictEqual(openCount, 2);\n\t});\n\n\ttest('links aren\\'t manipulated before being passed to validator: PR #118226', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tstore.add(openerService.registerValidator({\n\t\t\tshouldOpen: (resource) => {\n\t\t\t\t// We don't want it to convert strings into URIs\n\t\t\t\tassert.strictEqual(resource instanceof URI, false);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t}));\n\t\tawait openerService.open('https://wwww.microsoft.com');\n\t\tawait openerService.open('https://www.microsoft.com??params=CountryCode%3DUSA%26Name%3Dvscode\"');\n\t});\n\n\ttest('links validated by multiple validators', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tlet v1 = 0;\n\t\topenerService.registerValidator({\n\t\t\tshouldOpen: () => {\n\t\t\t\tv1++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tlet v2 = 0;\n\t\topenerService.registerValidator({\n\t\t\tshouldOpen: () => {\n\t\t\t\tv2++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tlet openCount = 0;\n\t\topenerService.registerOpener({\n\t\t\topen: (resource: URI) => {\n\t\t\t\topenCount++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tawait openerService.open(URI.parse('http://microsoft.com'));\n\t\tassert.strictEqual(openCount, 1);\n\t\tassert.strictEqual(v1, 1);\n\t\tassert.strictEqual(v2, 1);\n\t\tawait openerService.open(URI.parse('https://microsoft.com'));\n\t\tassert.strictEqual(openCount, 2);\n\t\tassert.strictEqual(v1, 2);\n\t\tassert.strictEqual(v2, 2);\n\t});\n\n\ttest('links invalidated by first validator do not continue validating', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tlet v1 = 0;\n\t\topenerService.registerValidator({\n\t\t\tshouldOpen: () => {\n\t\t\t\tv1++;\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t});\n\n\t\tlet v2 = 0;\n\t\topenerService.registerValidator({\n\t\t\tshouldOpen: () => {\n\t\t\t\tv2++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tlet openCount = 0;\n\t\topenerService.registerOpener({\n\t\t\topen: (resource: URI) => {\n\t\t\t\topenCount++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tawait openerService.open(URI.parse('http://microsoft.com'));\n\t\tassert.strictEqual(openCount, 0);\n\t\tassert.strictEqual(v1, 1);\n\t\tassert.strictEqual(v2, 0);\n\t\tawait openerService.open(URI.parse('https://microsoft.com'));\n\t\tassert.strictEqual(openCount, 0);\n\t\tassert.strictEqual(v1, 2);\n\t\tassert.strictEqual(v2, 0);\n\t});\n\n\ttest('matchesScheme', function () {\n\t\tassert.ok(matchesScheme('https://microsoft.com', 'https'));\n\t\tassert.ok(matchesScheme('http://microsoft.com', 'http'));\n\t\tassert.ok(matchesScheme('hTTPs://microsoft.com', 'https'));\n\t\tassert.ok(matchesScheme('httP://microsoft.com', 'http'));\n\t\tassert.ok(matchesScheme(URI.parse('https://microsoft.com'), 'https'));\n\t\tassert.ok(matchesScheme(URI.parse('http://microsoft.com'), 'http'));\n\t\tassert.ok(matchesScheme(URI.parse('hTTPs://microsoft.com'), 'https'));\n\t\tassert.ok(matchesScheme(URI.parse('httP://microsoft.com'), 'http'));\n\t\tassert.ok(!matchesScheme(URI.parse('https://microsoft.com'), 'http'));\n\t\tassert.ok(!matchesScheme(URI.parse('htt://microsoft.com'), 'http'));\n\t\tassert.ok(!matchesScheme(URI.parse('z://microsoft.com'), 'http'));\n\t});\n\n\ttest('matchesSomeScheme', function () {\n\t\tassert.ok(matchesSomeScheme('https://microsoft.com', 'http', 'https'));\n\t\tassert.ok(matchesSomeScheme('http://microsoft.com', 'http', 'https'));\n\t\tassert.ok(!matchesSomeScheme('x://microsoft.com', 'http', 'https'));\n\t});\n\n\ttest('resolveExternalUri', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\n\t\ttry {\n\t\t\tawait openerService.resolveExternalUri(URI.parse('file:///Users/user/folder'));\n\t\t\tassert.fail('Should not reach here');\n\t\t} catch {\n\t\t\t// OK\n\t\t}\n\n\t\tconst disposable = openerService.registerExternalUriResolver({\n\t\t\tasync resolveExternalUri(uri) {\n\t\t\t\treturn { resolved: uri, dispose() { } };\n\t\t\t}\n\t\t});\n\n\t\tconst result = await openerService.resolveExternalUri(URI.parse('file:///Users/user/folder'));\n\t\tassert.deepStrictEqual(result.resolved.toString(), 'file:///Users/user/folder');\n\t\tdisposable.dispose();\n\t});\n\n\ttest('vscode.open command can\\'t open HTTP URL with hash (#) in it [extension development] #140907', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\n\t\tconst actual: string[] = [];\n\n\t\topenerService.setDefaultExternalOpener({\n\t\t\tasync openExternal(href) {\n\t\t\t\tactual.push(href);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tconst href = 'https://gitlab.com/viktomas/test-project/merge_requests/new?merge_request%5Bsource_branch%5D=test-%23-hash';\n\t\tconst uri = URI.parse(href);\n\n\t\tassert.ok(await openerService.open(uri));\n\t\tassert.ok(await openerService.open(href));\n\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tencodeURI(uri.toString(true)), // BAD, the encoded # (%23) is double encoded to %2523 (% is double encoded)\n\t\t\thref // good\n\t\t]);\n\t});\n});\n"],
  "mappings": "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",
  "names": ["href"]
}
