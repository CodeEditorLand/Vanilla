import t from"assert";import{Disposable as h}from"../../../../base/common/lifecycle.js";import{URI as r}from"../../../../base/common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as w}from"../../../../base/test/common/utils.js";import{OpenerService as c}from"../../../browser/services/openerService.js";import{TestCodeEditorService as q}from"../editorTestServices.js";import{CommandsRegistry as E}from"../../../../platform/commands/common/commands.js";import{NullCommandService as m}from"../../../../platform/commands/test/common/nullCommandService.js";import"../../../../platform/editor/common/editor.js";import{matchesScheme as l,matchesSomeScheme as f}from"../../../../base/common/network.js";import{TestThemeService as I}from"../../../../platform/theme/test/common/testThemeService.js";suite("OpenerService",function(){const v=new I,o=new q(v);let n;const p=new class{onWillExecuteCommand=()=>h.None;onDidExecuteCommand=()=>h.None;executeCommand(e,...s){return n={id:e,args:s},Promise.resolve(void 0)}};setup(function(){n=void 0});const u=w();test("delegate to editorService, scheme:///fff",async function(){await new c(o,m).open(r.parse("another:///somepath")),t.strictEqual(o.lastInput.options.selection,void 0)}),test("delegate to editorService, scheme:///fff#L123",async function(){const e=new c(o,m);await e.open(r.parse("file:///somepath#L23")),t.strictEqual(o.lastInput.options.selection.startLineNumber,23),t.strictEqual(o.lastInput.options.selection.startColumn,1),t.strictEqual(o.lastInput.options.selection.endLineNumber,void 0),t.strictEqual(o.lastInput.options.selection.endColumn,void 0),t.strictEqual(o.lastInput.resource.fragment,""),await e.open(r.parse("another:///somepath#L23")),t.strictEqual(o.lastInput.options.selection.startLineNumber,23),t.strictEqual(o.lastInput.options.selection.startColumn,1),await e.open(r.parse("another:///somepath#L23,45")),t.strictEqual(o.lastInput.options.selection.startLineNumber,23),t.strictEqual(o.lastInput.options.selection.startColumn,45),t.strictEqual(o.lastInput.options.selection.endLineNumber,void 0),t.strictEqual(o.lastInput.options.selection.endColumn,void 0),t.strictEqual(o.lastInput.resource.fragment,"")}),test("delegate to editorService, scheme:///fff#123,123",async function(){const e=new c(o,m);await e.open(r.parse("file:///somepath#23")),t.strictEqual(o.lastInput.options.selection.startLineNumber,23),t.strictEqual(o.lastInput.options.selection.startColumn,1),t.strictEqual(o.lastInput.options.selection.endLineNumber,void 0),t.strictEqual(o.lastInput.options.selection.endColumn,void 0),t.strictEqual(o.lastInput.resource.fragment,""),await e.open(r.parse("file:///somepath#23,45")),t.strictEqual(o.lastInput.options.selection.startLineNumber,23),t.strictEqual(o.lastInput.options.selection.startColumn,45),t.strictEqual(o.lastInput.options.selection.endLineNumber,void 0),t.strictEqual(o.lastInput.options.selection.endColumn,void 0),t.strictEqual(o.lastInput.resource.fragment,"")}),test("delegate to commandsService, command:someid",async function(){const e=new c(o,p),s=`aCommand${Math.random()}`;u.add(E.registerCommand(s,function(){})),t.strictEqual(n,void 0),await e.open(r.parse("command:"+s)),t.strictEqual(n,void 0)}),test("delegate to commandsService, command:someid, 2",async function(){const e=new c(o,p),s=`aCommand${Math.random()}`;u.add(E.registerCommand(s,function(){})),await e.open(r.parse("command:"+s).with({query:'"123"'}),{allowCommands:!0}),t.strictEqual(n.id,s),t.strictEqual(n.args.length,1),t.strictEqual(n.args[0],"123"),await e.open(r.parse("command:"+s),{allowCommands:!0}),t.strictEqual(n.id,s),t.strictEqual(n.args.length,0),await e.open(r.parse("command:"+s).with({query:"123"}),{allowCommands:!0}),t.strictEqual(n.id,s),t.strictEqual(n.args.length,1),t.strictEqual(n.args[0],123),await e.open(r.parse("command:"+s).with({query:JSON.stringify([12,!0])}),{allowCommands:!0}),t.strictEqual(n.id,s),t.strictEqual(n.args.length,2),t.strictEqual(n.args[0],12),t.strictEqual(n.args[1],!0)}),test("links are protected by validators",async function(){const e=new c(o,p);u.add(e.registerValidator({shouldOpen:()=>Promise.resolve(!1)}));const s=await e.open(r.parse("https://www.microsoft.com")),i=await e.open(r.parse("https://www.microsoft.com"));t.strictEqual(s,!1),t.strictEqual(i,!1)}),test("links validated by validators go to openers",async function(){const e=new c(o,p);u.add(e.registerValidator({shouldOpen:()=>Promise.resolve(!0)}));let s=0;u.add(e.registerOpener({open:i=>(s++,Promise.resolve(!0))})),await e.open(r.parse("http://microsoft.com")),t.strictEqual(s,1),await e.open(r.parse("https://microsoft.com")),t.strictEqual(s,2)}),test("links aren't manipulated before being passed to validator: PR #118226",async function(){const e=new c(o,p);u.add(e.registerValidator({shouldOpen:s=>(t.strictEqual(s instanceof r,!1),Promise.resolve(!1))})),await e.open("https://wwww.microsoft.com"),await e.open('https://www.microsoft.com??params=CountryCode%3DUSA%26Name%3Dvscode"')}),test("links validated by multiple validators",async function(){const e=new c(o,p);let s=0;e.registerValidator({shouldOpen:()=>(s++,Promise.resolve(!0))});let i=0;e.registerValidator({shouldOpen:()=>(i++,Promise.resolve(!0))});let a=0;e.registerOpener({open:d=>(a++,Promise.resolve(!0))}),await e.open(r.parse("http://microsoft.com")),t.strictEqual(a,1),t.strictEqual(s,1),t.strictEqual(i,1),await e.open(r.parse("https://microsoft.com")),t.strictEqual(a,2),t.strictEqual(s,2),t.strictEqual(i,2)}),test("links invalidated by first validator do not continue validating",async function(){const e=new c(o,p);let s=0;e.registerValidator({shouldOpen:()=>(s++,Promise.resolve(!1))});let i=0;e.registerValidator({shouldOpen:()=>(i++,Promise.resolve(!0))});let a=0;e.registerOpener({open:d=>(a++,Promise.resolve(!0))}),await e.open(r.parse("http://microsoft.com")),t.strictEqual(a,0),t.strictEqual(s,1),t.strictEqual(i,0),await e.open(r.parse("https://microsoft.com")),t.strictEqual(a,0),t.strictEqual(s,2),t.strictEqual(i,0)}),test("matchesScheme",function(){t.ok(l("https://microsoft.com","https")),t.ok(l("http://microsoft.com","http")),t.ok(l("hTTPs://microsoft.com","https")),t.ok(l("httP://microsoft.com","http")),t.ok(l(r.parse("https://microsoft.com"),"https")),t.ok(l(r.parse("http://microsoft.com"),"http")),t.ok(l(r.parse("hTTPs://microsoft.com"),"https")),t.ok(l(r.parse("httP://microsoft.com"),"http")),t.ok(!l(r.parse("https://microsoft.com"),"http")),t.ok(!l(r.parse("htt://microsoft.com"),"http")),t.ok(!l(r.parse("z://microsoft.com"),"http"))}),test("matchesSomeScheme",function(){t.ok(f("https://microsoft.com","http","https")),t.ok(f("http://microsoft.com","http","https")),t.ok(!f("x://microsoft.com","http","https"))}),test("resolveExternalUri",async function(){const e=new c(o,m);try{await e.resolveExternalUri(r.parse("file:///Users/user/folder")),t.fail("Should not reach here")}catch{}const s=e.registerExternalUriResolver({async resolveExternalUri(a){return{resolved:a,dispose(){}}}}),i=await e.resolveExternalUri(r.parse("file:///Users/user/folder"));t.deepStrictEqual(i.resolved.toString(),"file:///Users/user/folder"),s.dispose()}),test("vscode.open command can't open HTTP URL with hash (#) in it [extension development] #140907",async function(){const e=new c(o,m),s=[];e.setDefaultExternalOpener({async openExternal(d){return s.push(d),!0}});const i="https://gitlab.com/viktomas/test-project/merge_requests/new?merge_request%5Bsource_branch%5D=test-%23-hash",a=r.parse(i);t.ok(await e.open(a)),t.ok(await e.open(i)),t.deepStrictEqual(s,[encodeURI(a.toString(!0)),i])})});
