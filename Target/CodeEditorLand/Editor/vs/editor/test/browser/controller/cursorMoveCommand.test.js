import S from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as k}from"../../../../base/test/common/utils.js";import{CoreNavigationCommands as f}from"../../../browser/coreCommands.js";import{Position as R}from"../../../common/core/position.js";import{Range as m}from"../../../common/core/range.js";import"../../../common/core/selection.js";import{CursorMove as s}from"../../../common/cursor/cursorMoveCommands.js";import"../../../common/viewModel/viewModelImpl.js";import{withTestCodeEditor as W}from"../testCodeEditor.js";suite("Cursor move command test",()=>{k();const r=["    	My First Line	 ","	My Second Line","    Third Line\u{1F436}","","1"].join(`
`);function e(o){W(r,{},(t,u)=>{o(t,u)})}test("move left should move to left character",()=>{e((o,t)=>{i(t,1,8),h(t),n(t,1,7)})}),test("move left should move to left by n characters",()=>{e((o,t)=>{i(t,1,8),h(t,3),n(t,1,5)})}),test("move left should move to left by half line",()=>{e((o,t)=>{i(t,1,8),h(t,1,s.RawUnit.HalfLine),n(t,1,1)})}),test("move left moves to previous line",()=>{e((o,t)=>{i(t,2,3),h(t,10),n(t,1,21)})}),test("move right should move to right character",()=>{e((o,t)=>{i(t,1,5),C(t),n(t,1,6)})}),test("move right should move to right by n characters",()=>{e((o,t)=>{i(t,1,2),C(t,6),n(t,1,8)})}),test("move right should move to right by half line",()=>{e((o,t)=>{i(t,1,4),C(t,1,s.RawUnit.HalfLine),n(t,1,14)})}),test("move right moves to next line",()=>{e((o,t)=>{i(t,1,8),C(t,100),n(t,2,1)})}),test("move to first character of line from middle",()=>{e((o,t)=>{i(t,1,8),l(t),n(t,1,1)})}),test("move to first character of line from first non white space character",()=>{e((o,t)=>{i(t,1,6),l(t),n(t,1,1)})}),test("move to first character of line from first character",()=>{e((o,t)=>{i(t,1,1),l(t),n(t,1,1)})}),test("move to first non white space character of line from middle",()=>{e((o,t)=>{i(t,1,8),T(t),n(t,1,6)})}),test("move to first non white space character of line from first non white space character",()=>{e((o,t)=>{i(t,1,6),T(t),n(t,1,6)})}),test("move to first non white space character of line from first character",()=>{e((o,t)=>{i(t,1,1),T(t),n(t,1,6)})}),test("move to end of line from middle",()=>{e((o,t)=>{i(t,1,8),b(t),n(t,1,21)})}),test("move to end of line from last non white space character",()=>{e((o,t)=>{i(t,1,19),b(t),n(t,1,21)})}),test("move to end of line from line end",()=>{e((o,t)=>{i(t,1,21),b(t),n(t,1,21)})}),test("move to last non white space character from middle",()=>{e((o,t)=>{i(t,1,8),D(t),n(t,1,19)})}),test("move to last non white space character from last non white space character",()=>{e((o,t)=>{i(t,1,19),D(t),n(t,1,19)})}),test("move to last non white space character from line end",()=>{e((o,t)=>{i(t,1,21),D(t),n(t,1,19)})}),test("move to center of line not from center",()=>{e((o,t)=>{i(t,1,8),p(t),n(t,1,11)})}),test("move to center of line from center",()=>{e((o,t)=>{i(t,1,11),p(t),n(t,1,11)})}),test("move to center of line from start",()=>{e((o,t)=>{l(t),p(t),n(t,1,11)})}),test("move to center of line from end",()=>{e((o,t)=>{b(t),p(t),n(t,1,11)})}),test("move up by cursor move command",()=>{e((o,t)=>{i(t,3,5),n(t,3,5),c(t,2),n(t,1,5),c(t,1),n(t,1,1)})}),test("move up by model line cursor move command",()=>{e((o,t)=>{i(t,3,5),n(t,3,5),U(t,2),n(t,1,5),U(t,1),n(t,1,1)})}),test("move down by model line cursor move command",()=>{e((o,t)=>{i(t,3,5),n(t,3,5),B(t,2),n(t,5,2),B(t,1),n(t,5,2)})}),test("move up with selection by cursor move command",()=>{e((o,t)=>{i(t,3,5),n(t,3,5),c(t,1,!0),n(t,2,2,3,5),c(t,1,!0),n(t,1,5,3,5)})}),test("move up and down with tabs by cursor move command",()=>{e((o,t)=>{i(t,1,5),n(t,1,5),g(t,4),n(t,5,2),c(t,1),n(t,4,1),c(t,1),n(t,3,5),c(t,1),n(t,2,2),c(t,1),n(t,1,5)})}),test("move up and down with end of lines starting from a long one by cursor move command",()=>{e((o,t)=>{N(t),n(t,1,21),N(t),n(t,1,21),g(t,2),n(t,3,17),g(t,1),n(t,4,1),g(t,1),n(t,5,2),c(t,4),n(t,1,21)})}),test("move to view top line moves to first visible line if it is first line",()=>{e((o,t)=>{t.getCompletelyVisibleViewRange=()=>new m(1,1,10,1),i(t,2,2),L(t),n(t,1,6)})}),test("move to view top line moves to top visible line when first line is not visible",()=>{e((o,t)=>{t.getCompletelyVisibleViewRange=()=>new m(2,1,10,1),i(t,4,1),L(t),n(t,2,2)})}),test("move to view top line moves to nth line from top",()=>{e((o,t)=>{t.getCompletelyVisibleViewRange=()=>new m(1,1,10,1),i(t,4,1),L(t,3),n(t,3,5)})}),test("move to view top line moves to last line if n is greater than last visible line number",()=>{e((o,t)=>{t.getCompletelyVisibleViewRange=()=>new m(1,1,3,1),i(t,2,2),L(t,4),n(t,3,5)})}),test("move to view center line moves to the center line",()=>{e((o,t)=>{t.getCompletelyVisibleViewRange=()=>new m(3,1,3,1),i(t,2,2),q(t),n(t,3,5)})}),test("move to view bottom line moves to last visible line if it is last line",()=>{e((o,t)=>{t.getCompletelyVisibleViewRange=()=>new m(1,1,5,1),i(t,2,2),d(t),n(t,5,1)})}),test("move to view bottom line moves to last visible line when last line is not visible",()=>{e((o,t)=>{t.getCompletelyVisibleViewRange=()=>new m(2,1,3,1),i(t,2,2),d(t),n(t,3,5)})}),test("move to view bottom line moves to nth line from bottom",()=>{e((o,t)=>{t.getCompletelyVisibleViewRange=()=>new m(1,1,5,1),i(t,4,1),d(t,3),n(t,3,5)})}),test("move to view bottom line moves to first line if n is lesser than first visible line number",()=>{e((o,t)=>{t.getCompletelyVisibleViewRange=()=>new m(2,1,5,1),i(t,4,1),d(t,5),n(t,2,2)})})}),suite("Cursor move by blankline test",()=>{k();const r=["    	My First Line	 ","	My Second Line","    Third Line\u{1F436}","","1","2","3","","         ","a","b"].join(`
`);function e(o){W(r,{},(t,u)=>{o(t,u)})}test("move down should move to start of next blank line",()=>{e((o,t)=>{y(t,!1),n(t,4,1)})}),test("move up should move to start of previous blank line",()=>{e((o,t)=>{i(t,7,1),V(t,!1),n(t,4,1)})}),test("move down should skip over whitespace if already on blank line",()=>{e((o,t)=>{i(t,8,1),y(t,!1),n(t,11,1)})}),test("move up should skip over whitespace if already on blank line",()=>{e((o,t)=>{i(t,9,1),V(t,!1),n(t,4,1)})}),test("move up should go to first column of first line if not empty",()=>{e((o,t)=>{i(t,2,1),V(t,!1),n(t,1,1)})}),test("move down should go to first column of last line if not empty",()=>{e((o,t)=>{i(t,10,1),y(t,!1),n(t,11,1)})}),test("select down should select to start of next blank line",()=>{e((o,t)=>{y(t,!0),E(t.getSelection(),4,1,1,1)})}),test("select up should select to start of previous blank line",()=>{e((o,t)=>{i(t,7,1),V(t,!0),E(t.getSelection(),4,1,7,1)})})});function a(r,e){f.CursorMove.runCoreEditorCommand(r,e)}function l(r){a(r,{to:s.RawDirection.WrappedLineStart})}function T(r){a(r,{to:s.RawDirection.WrappedLineFirstNonWhitespaceCharacter})}function p(r){a(r,{to:s.RawDirection.WrappedLineColumnCenter})}function b(r){a(r,{to:s.RawDirection.WrappedLineEnd})}function D(r){a(r,{to:s.RawDirection.WrappedLineLastNonWhitespaceCharacter})}function h(r,e,o,t){a(r,{to:s.RawDirection.Left,by:o,value:e,select:t})}function C(r,e,o,t){a(r,{to:s.RawDirection.Right,by:o,value:e,select:t})}function c(r,e=1,o){a(r,{to:s.RawDirection.Up,by:s.RawUnit.WrappedLine,value:e,select:o})}function V(r,e){a(r,{to:s.RawDirection.PrevBlankLine,by:s.RawUnit.WrappedLine,select:e})}function U(r,e=1,o){a(r,{to:s.RawDirection.Up,value:e,select:o})}function g(r,e=1,o){a(r,{to:s.RawDirection.Down,by:s.RawUnit.WrappedLine,value:e,select:o})}function y(r,e){a(r,{to:s.RawDirection.NextBlankLine,by:s.RawUnit.WrappedLine,select:e})}function B(r,e=1,o){a(r,{to:s.RawDirection.Down,value:e,select:o})}function L(r,e=1,o){a(r,{to:s.RawDirection.ViewPortTop,value:e,select:o})}function q(r,e){a(r,{to:s.RawDirection.ViewPortCenter,select:e})}function d(r,e=1,o){a(r,{to:s.RawDirection.ViewPortBottom,value:e,select:o})}function n(r,e,o,t=e,u=o){P(r.getPosition(),e,o),E(r.getSelection(),e,o,t,u)}function P(r,e,o){S.deepStrictEqual(r,new R(e,o),"position equal")}function E(r,e,o,t,u){S.deepStrictEqual({selectionStartLineNumber:r.selectionStartLineNumber,selectionStartColumn:r.selectionStartColumn,positionLineNumber:r.positionLineNumber,positionColumn:r.positionColumn},{selectionStartLineNumber:t,selectionStartColumn:u,positionLineNumber:e,positionColumn:o},"selection equal")}function i(r,e,o,t=!1){t?f.MoveToSelect.runCoreEditorCommand(r,{position:new R(e,o)}):f.MoveTo.runCoreEditorCommand(r,{position:new R(e,o)})}function N(r,e=!1){e?f.CursorEndSelect.runCoreEditorCommand(r,{}):f.CursorEnd.runCoreEditorCommand(r,{})}
