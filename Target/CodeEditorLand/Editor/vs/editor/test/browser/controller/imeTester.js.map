{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/controller/imeTester.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Position } from '../../../common/core/position.js';\nimport { IRange, Range } from '../../../common/core/range.js';\nimport { EndOfLinePreference } from '../../../common/model.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport * as browser from '../../../../base/browser/browser.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { TestAccessibilityService } from '../../../../platform/accessibility/test/common/testAccessibilityService.js';\nimport { NullLogService } from '../../../../platform/log/common/log.js';\nimport { ISimpleModel, PagedScreenReaderStrategy } from '../../../browser/controller/editContext/screenReaderUtils.js';\nimport { TextAreaState } from '../../../browser/controller/editContext/textArea/textAreaEditContextState.js';\nimport { ITextAreaInputHost, TextAreaInput, TextAreaWrapper } from '../../../browser/controller/editContext/textArea/textAreaEditContextInput.js';\n\n// To run this test, open imeTester.html\n\nclass SingleLineTestModel implements ISimpleModel {\n\n\tprivate _line: string;\n\n\tconstructor(line: string) {\n\t\tthis._line = line;\n\t}\n\n\t_setText(text: string) {\n\t\tthis._line = text;\n\t}\n\n\tgetLineMaxColumn(lineNumber: number): number {\n\t\treturn this._line.length + 1;\n\t}\n\n\tgetValueInRange(range: IRange, eol: EndOfLinePreference): string {\n\t\treturn this._line.substring(range.startColumn - 1, range.endColumn - 1);\n\t}\n\n\tgetValueLengthInRange(range: Range, eol: EndOfLinePreference): number {\n\t\treturn this.getValueInRange(range, eol).length;\n\t}\n\n\tmodifyPosition(position: Position, offset: number): Position {\n\t\tconst column = Math.min(this.getLineMaxColumn(position.lineNumber), Math.max(1, position.column + offset));\n\t\treturn new Position(position.lineNumber, column);\n\t}\n\n\tgetModelLineContent(lineNumber: number): string {\n\t\treturn this._line;\n\t}\n\n\tgetLineCount(): number {\n\t\treturn 1;\n\t}\n}\n\nclass TestView {\n\n\tprivate readonly _model: SingleLineTestModel;\n\n\tconstructor(model: SingleLineTestModel) {\n\t\tthis._model = model;\n\t}\n\n\tpublic paint(output: HTMLElement) {\n\t\tdom.clearNode(output);\n\t\tfor (let i = 1; i <= this._model.getLineCount(); i++) {\n\t\t\tconst textNode = document.createTextNode(this._model.getModelLineContent(i));\n\t\t\toutput.appendChild(textNode);\n\t\t\tconst br = document.createElement('br');\n\t\t\toutput.appendChild(br);\n\t\t}\n\t}\n}\n\nfunction doCreateTest(description: string, inputStr: string, expectedStr: string): HTMLElement {\n\tlet cursorOffset: number = 0;\n\tlet cursorLength: number = 0;\n\n\tconst container = document.createElement('div');\n\tcontainer.className = 'container';\n\n\tconst title = document.createElement('div');\n\ttitle.className = 'title';\n\n\tconst inputStrStrong = document.createElement('strong');\n\tinputStrStrong.innerText = inputStr;\n\n\ttitle.innerText = description + '. Type ';\n\ttitle.appendChild(inputStrStrong);\n\n\tcontainer.appendChild(title);\n\n\tconst startBtn = document.createElement('button');\n\tstartBtn.innerText = 'Start';\n\tcontainer.appendChild(startBtn);\n\n\n\tconst input = document.createElement('textarea');\n\tinput.setAttribute('rows', '10');\n\tinput.setAttribute('cols', '40');\n\tcontainer.appendChild(input);\n\n\tconst model = new SingleLineTestModel('some  text');\n\n\tconst textAreaInputHost: ITextAreaInputHost = {\n\t\tgetDataToCopy: () => {\n\t\t\treturn {\n\t\t\t\tisFromEmptySelection: false,\n\t\t\t\tmulticursorText: null,\n\t\t\t\ttext: '',\n\t\t\t\thtml: undefined,\n\t\t\t\tmode: null\n\t\t\t};\n\t\t},\n\t\tgetScreenReaderContent: (): TextAreaState => {\n\t\t\tconst selection = new Range(1, 1 + cursorOffset, 1, 1 + cursorOffset + cursorLength);\n\n\t\t\tconst screenReaderContentState = PagedScreenReaderStrategy.fromEditorSelection(model, selection, 10, true);\n\t\t\treturn TextAreaState.fromScreenReaderContentState(screenReaderContentState);\n\t\t},\n\t\tdeduceModelPosition: (viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position => {\n\t\t\treturn null!;\n\t\t}\n\t};\n\n\tconst handler = new TextAreaInput(textAreaInputHost, new TextAreaWrapper(input), platform.OS, {\n\t\tisAndroid: browser.isAndroid,\n\t\tisFirefox: browser.isFirefox,\n\t\tisChrome: browser.isChrome,\n\t\tisSafari: browser.isSafari,\n\t}, new TestAccessibilityService(), new NullLogService());\n\n\tconst output = document.createElement('pre');\n\toutput.className = 'output';\n\tcontainer.appendChild(output);\n\n\tconst check = document.createElement('pre');\n\tcheck.className = 'check';\n\tcontainer.appendChild(check);\n\n\tconst br = document.createElement('br');\n\tbr.style.clear = 'both';\n\tcontainer.appendChild(br);\n\n\tconst view = new TestView(model);\n\n\tconst updatePosition = (off: number, len: number) => {\n\t\tcursorOffset = off;\n\t\tcursorLength = len;\n\t\thandler.writeNativeTextAreaContent('selection changed');\n\t\thandler.focusTextArea();\n\t};\n\n\tconst updateModelAndPosition = (text: string, off: number, len: number) => {\n\t\tmodel._setText(text);\n\t\tupdatePosition(off, len);\n\t\tview.paint(output);\n\n\t\tconst expected = 'some ' + expectedStr + ' text';\n\t\tif (text === expected) {\n\t\t\tcheck.innerText = '[GOOD]';\n\t\t\tcheck.className = 'check good';\n\t\t} else {\n\t\t\tcheck.innerText = '[BAD]';\n\t\t\tcheck.className = 'check bad';\n\t\t}\n\t\tcheck.appendChild(document.createTextNode(expected));\n\t};\n\n\thandler.onType((e) => {\n\t\tconsole.log('type text: ' + e.text + ', replaceCharCnt: ' + e.replacePrevCharCnt);\n\t\tconst text = model.getModelLineContent(1);\n\t\tconst preText = text.substring(0, cursorOffset - e.replacePrevCharCnt);\n\t\tconst postText = text.substring(cursorOffset + cursorLength);\n\t\tconst midText = e.text;\n\n\t\tupdateModelAndPosition(preText + midText + postText, (preText + midText).length, 0);\n\t});\n\n\tview.paint(output);\n\n\tstartBtn.onclick = function () {\n\t\tupdateModelAndPosition('some  text', 5, 0);\n\t\tinput.focus();\n\t};\n\n\treturn container;\n}\n\nconst TESTS = [\n\t{ description: 'Japanese IME 1', in: 'sennsei [Enter]', out: '\u305B\u3093\u305B\u3044' },\n\t{ description: 'Japanese IME 2', in: 'konnichiha [Enter]', out: '\u3053\u3093\u3044\u3061\u306F' },\n\t{ description: 'Japanese IME 3', in: 'mikann [Enter]', out: '\u307F\u304B\u3093' },\n\t{ description: 'Korean IME 1', in: 'gksrmf [Space]', out: '\uD55C\uAE00 ' },\n\t{ description: 'Chinese IME 1', in: '.,', out: '\u3002\uFF0C' },\n\t{ description: 'Chinese IME 2', in: 'ni [Space] hao [Space]', out: '\u4F60\u597D' },\n\t{ description: 'Chinese IME 3', in: 'hazni [Space]', out: '\u54C8\u795D\u4F60' },\n\t{ description: 'Mac dead key 1', in: '`.', out: '`.' },\n\t{ description: 'Mac hold key 1', in: 'e long press and 1', out: '\u00E9' }\n];\n\nTESTS.forEach((t) => {\n\tmainWindow.document.body.appendChild(doCreateTest(t.description, t.in, t.out));\n});\n"],
  "mappings": "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",
  "names": []
}
