{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/controller/cursorMoveCommand.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { CoreNavigationCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { CursorMove } from '../../../common/cursor/cursorMoveCommands.js';\nimport { ViewModel } from '../../../common/viewModel/viewModelImpl.js';\nimport { ITestCodeEditor, withTestCodeEditor } from '../testCodeEditor.js';\n\nsuite('Cursor move command test', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst TEXT = [\n\t\t'    \\tMy First Line\\t ',\n\t\t'\\tMy Second Line',\n\t\t'    Third Line\uD83D\uDC36',\n\t\t'',\n\t\t'1'\n\t].join('\\n');\n\n\tfunction executeTest(callback: (editor: ITestCodeEditor, viewModel: ViewModel) => void): void {\n\t\twithTestCodeEditor(TEXT, {}, (editor, viewModel) => {\n\t\t\tcallback(editor, viewModel);\n\t\t});\n\t}\n\n\ttest('move left should move to left character', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 8);\n\t\t\tmoveLeft(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 7);\n\t\t});\n\t});\n\n\ttest('move left should move to left by n characters', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 8);\n\t\t\tmoveLeft(viewModel, 3);\n\t\t\tcursorEqual(viewModel, 1, 5);\n\t\t});\n\t});\n\n\ttest('move left should move to left by half line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 8);\n\t\t\tmoveLeft(viewModel, 1, CursorMove.RawUnit.HalfLine);\n\t\t\tcursorEqual(viewModel, 1, 1);\n\t\t});\n\t});\n\n\ttest('move left moves to previous line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 2, 3);\n\t\t\tmoveLeft(viewModel, 10);\n\t\t\tcursorEqual(viewModel, 1, 21);\n\t\t});\n\t});\n\n\ttest('move right should move to right character', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 5);\n\t\t\tmoveRight(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 6);\n\t\t});\n\t});\n\n\ttest('move right should move to right by n characters', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 2);\n\t\t\tmoveRight(viewModel, 6);\n\t\t\tcursorEqual(viewModel, 1, 8);\n\t\t});\n\t});\n\n\ttest('move right should move to right by half line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 4);\n\t\t\tmoveRight(viewModel, 1, CursorMove.RawUnit.HalfLine);\n\t\t\tcursorEqual(viewModel, 1, 14);\n\t\t});\n\t});\n\n\ttest('move right moves to next line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 8);\n\t\t\tmoveRight(viewModel, 100);\n\t\t\tcursorEqual(viewModel, 2, 1);\n\t\t});\n\t});\n\n\ttest('move to first character of line from middle', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 8);\n\t\t\tmoveToLineStart(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 1);\n\t\t});\n\t});\n\n\ttest('move to first character of line from first non white space character', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 6);\n\t\t\tmoveToLineStart(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 1);\n\t\t});\n\t});\n\n\ttest('move to first character of line from first character', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 1);\n\t\t\tmoveToLineStart(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 1);\n\t\t});\n\t});\n\n\ttest('move to first non white space character of line from middle', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 8);\n\t\t\tmoveToLineFirstNonWhitespaceCharacter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 6);\n\t\t});\n\t});\n\n\ttest('move to first non white space character of line from first non white space character', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 6);\n\t\t\tmoveToLineFirstNonWhitespaceCharacter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 6);\n\t\t});\n\t});\n\n\ttest('move to first non white space character of line from first character', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 1);\n\t\t\tmoveToLineFirstNonWhitespaceCharacter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 6);\n\t\t});\n\t});\n\n\ttest('move to end of line from middle', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 8);\n\t\t\tmoveToLineEnd(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 21);\n\t\t});\n\t});\n\n\ttest('move to end of line from last non white space character', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 19);\n\t\t\tmoveToLineEnd(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 21);\n\t\t});\n\t});\n\n\ttest('move to end of line from line end', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 21);\n\t\t\tmoveToLineEnd(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 21);\n\t\t});\n\t});\n\n\ttest('move to last non white space character from middle', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 8);\n\t\t\tmoveToLineLastNonWhitespaceCharacter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 19);\n\t\t});\n\t});\n\n\ttest('move to last non white space character from last non white space character', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 19);\n\t\t\tmoveToLineLastNonWhitespaceCharacter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 19);\n\t\t});\n\t});\n\n\ttest('move to last non white space character from line end', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 21);\n\t\t\tmoveToLineLastNonWhitespaceCharacter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 19);\n\t\t});\n\t});\n\n\ttest('move to center of line not from center', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 8);\n\t\t\tmoveToLineCenter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 11);\n\t\t});\n\t});\n\n\ttest('move to center of line from center', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 11);\n\t\t\tmoveToLineCenter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 11);\n\t\t});\n\t});\n\n\ttest('move to center of line from start', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveToLineStart(viewModel);\n\t\t\tmoveToLineCenter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 11);\n\t\t});\n\t});\n\n\ttest('move to center of line from end', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveToLineEnd(viewModel);\n\t\t\tmoveToLineCenter(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 11);\n\t\t});\n\t});\n\n\ttest('move up by cursor move command', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 3, 5);\n\t\t\tcursorEqual(viewModel, 3, 5);\n\n\t\t\tmoveUp(viewModel, 2);\n\t\t\tcursorEqual(viewModel, 1, 5);\n\n\t\t\tmoveUp(viewModel, 1);\n\t\t\tcursorEqual(viewModel, 1, 1);\n\t\t});\n\t});\n\n\ttest('move up by model line cursor move command', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 3, 5);\n\t\t\tcursorEqual(viewModel, 3, 5);\n\n\t\t\tmoveUpByModelLine(viewModel, 2);\n\t\t\tcursorEqual(viewModel, 1, 5);\n\n\t\t\tmoveUpByModelLine(viewModel, 1);\n\t\t\tcursorEqual(viewModel, 1, 1);\n\t\t});\n\t});\n\n\ttest('move down by model line cursor move command', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 3, 5);\n\t\t\tcursorEqual(viewModel, 3, 5);\n\n\t\t\tmoveDownByModelLine(viewModel, 2);\n\t\t\tcursorEqual(viewModel, 5, 2);\n\n\t\t\tmoveDownByModelLine(viewModel, 1);\n\t\t\tcursorEqual(viewModel, 5, 2);\n\t\t});\n\t});\n\n\ttest('move up with selection by cursor move command', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 3, 5);\n\t\t\tcursorEqual(viewModel, 3, 5);\n\n\t\t\tmoveUp(viewModel, 1, true);\n\t\t\tcursorEqual(viewModel, 2, 2, 3, 5);\n\n\t\t\tmoveUp(viewModel, 1, true);\n\t\t\tcursorEqual(viewModel, 1, 5, 3, 5);\n\t\t});\n\t});\n\n\ttest('move up and down with tabs by cursor move command', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 1, 5);\n\t\t\tcursorEqual(viewModel, 1, 5);\n\n\t\t\tmoveDown(viewModel, 4);\n\t\t\tcursorEqual(viewModel, 5, 2);\n\n\t\t\tmoveUp(viewModel, 1);\n\t\t\tcursorEqual(viewModel, 4, 1);\n\n\t\t\tmoveUp(viewModel, 1);\n\t\t\tcursorEqual(viewModel, 3, 5);\n\n\t\t\tmoveUp(viewModel, 1);\n\t\t\tcursorEqual(viewModel, 2, 2);\n\n\t\t\tmoveUp(viewModel, 1);\n\t\t\tcursorEqual(viewModel, 1, 5);\n\t\t});\n\t});\n\n\ttest('move up and down with end of lines starting from a long one by cursor move command', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveToEndOfLine(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 21);\n\n\t\t\tmoveToEndOfLine(viewModel);\n\t\t\tcursorEqual(viewModel, 1, 21);\n\n\t\t\tmoveDown(viewModel, 2);\n\t\t\tcursorEqual(viewModel, 3, 17);\n\n\t\t\tmoveDown(viewModel, 1);\n\t\t\tcursorEqual(viewModel, 4, 1);\n\n\t\t\tmoveDown(viewModel, 1);\n\t\t\tcursorEqual(viewModel, 5, 2);\n\n\t\t\tmoveUp(viewModel, 4);\n\t\t\tcursorEqual(viewModel, 1, 21);\n\t\t});\n\t});\n\n\ttest('move to view top line moves to first visible line if it is first line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tviewModel.getCompletelyVisibleViewRange = () => new Range(1, 1, 10, 1);\n\n\t\t\tmoveTo(viewModel, 2, 2);\n\t\t\tmoveToTop(viewModel);\n\n\t\t\tcursorEqual(viewModel, 1, 6);\n\t\t});\n\t});\n\n\ttest('move to view top line moves to top visible line when first line is not visible', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tviewModel.getCompletelyVisibleViewRange = () => new Range(2, 1, 10, 1);\n\n\t\t\tmoveTo(viewModel, 4, 1);\n\t\t\tmoveToTop(viewModel);\n\n\t\t\tcursorEqual(viewModel, 2, 2);\n\t\t});\n\t});\n\n\ttest('move to view top line moves to nth line from top', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tviewModel.getCompletelyVisibleViewRange = () => new Range(1, 1, 10, 1);\n\n\t\t\tmoveTo(viewModel, 4, 1);\n\t\t\tmoveToTop(viewModel, 3);\n\n\t\t\tcursorEqual(viewModel, 3, 5);\n\t\t});\n\t});\n\n\ttest('move to view top line moves to last line if n is greater than last visible line number', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tviewModel.getCompletelyVisibleViewRange = () => new Range(1, 1, 3, 1);\n\n\t\t\tmoveTo(viewModel, 2, 2);\n\t\t\tmoveToTop(viewModel, 4);\n\n\t\t\tcursorEqual(viewModel, 3, 5);\n\t\t});\n\t});\n\n\ttest('move to view center line moves to the center line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tviewModel.getCompletelyVisibleViewRange = () => new Range(3, 1, 3, 1);\n\n\t\t\tmoveTo(viewModel, 2, 2);\n\t\t\tmoveToCenter(viewModel);\n\n\t\t\tcursorEqual(viewModel, 3, 5);\n\t\t});\n\t});\n\n\ttest('move to view bottom line moves to last visible line if it is last line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tviewModel.getCompletelyVisibleViewRange = () => new Range(1, 1, 5, 1);\n\n\t\t\tmoveTo(viewModel, 2, 2);\n\t\t\tmoveToBottom(viewModel);\n\n\t\t\tcursorEqual(viewModel, 5, 1);\n\t\t});\n\t});\n\n\ttest('move to view bottom line moves to last visible line when last line is not visible', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tviewModel.getCompletelyVisibleViewRange = () => new Range(2, 1, 3, 1);\n\n\t\t\tmoveTo(viewModel, 2, 2);\n\t\t\tmoveToBottom(viewModel);\n\n\t\t\tcursorEqual(viewModel, 3, 5);\n\t\t});\n\t});\n\n\ttest('move to view bottom line moves to nth line from bottom', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tviewModel.getCompletelyVisibleViewRange = () => new Range(1, 1, 5, 1);\n\n\t\t\tmoveTo(viewModel, 4, 1);\n\t\t\tmoveToBottom(viewModel, 3);\n\n\t\t\tcursorEqual(viewModel, 3, 5);\n\t\t});\n\t});\n\n\ttest('move to view bottom line moves to first line if n is lesser than first visible line number', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tviewModel.getCompletelyVisibleViewRange = () => new Range(2, 1, 5, 1);\n\n\t\t\tmoveTo(viewModel, 4, 1);\n\t\t\tmoveToBottom(viewModel, 5);\n\n\t\t\tcursorEqual(viewModel, 2, 2);\n\t\t});\n\t});\n});\n\nsuite('Cursor move by blankline test', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst TEXT = [\n\t\t'    \\tMy First Line\\t ',\n\t\t'\\tMy Second Line',\n\t\t'    Third Line\uD83D\uDC36',\n\t\t'',\n\t\t'1',\n\t\t'2',\n\t\t'3',\n\t\t'',\n\t\t'         ',\n\t\t'a',\n\t\t'b',\n\t].join('\\n');\n\n\tfunction executeTest(callback: (editor: ITestCodeEditor, viewModel: ViewModel) => void): void {\n\t\twithTestCodeEditor(TEXT, {}, (editor, viewModel) => {\n\t\t\tcallback(editor, viewModel);\n\t\t});\n\t}\n\n\ttest('move down should move to start of next blank line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveDownByBlankLine(viewModel, false);\n\t\t\tcursorEqual(viewModel, 4, 1);\n\t\t});\n\t});\n\n\ttest('move up should move to start of previous blank line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 7, 1);\n\t\t\tmoveUpByBlankLine(viewModel, false);\n\t\t\tcursorEqual(viewModel, 4, 1);\n\t\t});\n\t});\n\n\ttest('move down should skip over whitespace if already on blank line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 8, 1);\n\t\t\tmoveDownByBlankLine(viewModel, false);\n\t\t\tcursorEqual(viewModel, 11, 1);\n\t\t});\n\t});\n\n\ttest('move up should skip over whitespace if already on blank line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 9, 1);\n\t\t\tmoveUpByBlankLine(viewModel, false);\n\t\t\tcursorEqual(viewModel, 4, 1);\n\t\t});\n\t});\n\n\ttest('move up should go to first column of first line if not empty', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 2, 1);\n\t\t\tmoveUpByBlankLine(viewModel, false);\n\t\t\tcursorEqual(viewModel, 1, 1);\n\t\t});\n\t});\n\n\ttest('move down should go to first column of last line if not empty', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 10, 1);\n\t\t\tmoveDownByBlankLine(viewModel, false);\n\t\t\tcursorEqual(viewModel, 11, 1);\n\t\t});\n\t});\n\n\ttest('select down should select to start of next blank line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveDownByBlankLine(viewModel, true);\n\t\t\tselectionEqual(viewModel.getSelection(), 4, 1, 1, 1);\n\t\t});\n\t});\n\n\ttest('select up should select to start of previous blank line', () => {\n\t\texecuteTest((editor, viewModel) => {\n\t\t\tmoveTo(viewModel, 7, 1);\n\t\t\tmoveUpByBlankLine(viewModel, true);\n\t\t\tselectionEqual(viewModel.getSelection(), 4, 1, 7, 1);\n\t\t});\n\t});\n});\n\n// Move command\n\nfunction move(viewModel: ViewModel, args: any) {\n\tCoreNavigationCommands.CursorMove.runCoreEditorCommand(viewModel, args);\n}\n\nfunction moveToLineStart(viewModel: ViewModel) {\n\tmove(viewModel, { to: CursorMove.RawDirection.WrappedLineStart });\n}\n\nfunction moveToLineFirstNonWhitespaceCharacter(viewModel: ViewModel) {\n\tmove(viewModel, { to: CursorMove.RawDirection.WrappedLineFirstNonWhitespaceCharacter });\n}\n\nfunction moveToLineCenter(viewModel: ViewModel) {\n\tmove(viewModel, { to: CursorMove.RawDirection.WrappedLineColumnCenter });\n}\n\nfunction moveToLineEnd(viewModel: ViewModel) {\n\tmove(viewModel, { to: CursorMove.RawDirection.WrappedLineEnd });\n}\n\nfunction moveToLineLastNonWhitespaceCharacter(viewModel: ViewModel) {\n\tmove(viewModel, { to: CursorMove.RawDirection.WrappedLineLastNonWhitespaceCharacter });\n}\n\nfunction moveLeft(viewModel: ViewModel, value?: number, by?: string, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.Left, by: by, value: value, select: select });\n}\n\nfunction moveRight(viewModel: ViewModel, value?: number, by?: string, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.Right, by: by, value: value, select: select });\n}\n\nfunction moveUp(viewModel: ViewModel, noOfLines: number = 1, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.Up, by: CursorMove.RawUnit.WrappedLine, value: noOfLines, select: select });\n}\n\nfunction moveUpByBlankLine(viewModel: ViewModel, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.PrevBlankLine, by: CursorMove.RawUnit.WrappedLine, select: select });\n}\n\nfunction moveUpByModelLine(viewModel: ViewModel, noOfLines: number = 1, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.Up, value: noOfLines, select: select });\n}\n\nfunction moveDown(viewModel: ViewModel, noOfLines: number = 1, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.Down, by: CursorMove.RawUnit.WrappedLine, value: noOfLines, select: select });\n}\n\nfunction moveDownByBlankLine(viewModel: ViewModel, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.NextBlankLine, by: CursorMove.RawUnit.WrappedLine, select: select });\n}\n\nfunction moveDownByModelLine(viewModel: ViewModel, noOfLines: number = 1, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.Down, value: noOfLines, select: select });\n}\n\nfunction moveToTop(viewModel: ViewModel, noOfLines: number = 1, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.ViewPortTop, value: noOfLines, select: select });\n}\n\nfunction moveToCenter(viewModel: ViewModel, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.ViewPortCenter, select: select });\n}\n\nfunction moveToBottom(viewModel: ViewModel, noOfLines: number = 1, select?: boolean) {\n\tmove(viewModel, { to: CursorMove.RawDirection.ViewPortBottom, value: noOfLines, select: select });\n}\n\nfunction cursorEqual(viewModel: ViewModel, posLineNumber: number, posColumn: number, selLineNumber: number = posLineNumber, selColumn: number = posColumn) {\n\tpositionEqual(viewModel.getPosition(), posLineNumber, posColumn);\n\tselectionEqual(viewModel.getSelection(), posLineNumber, posColumn, selLineNumber, selColumn);\n}\n\nfunction positionEqual(position: Position, lineNumber: number, column: number) {\n\tassert.deepStrictEqual(position, new Position(lineNumber, column), 'position equal');\n}\n\nfunction selectionEqual(selection: Selection, posLineNumber: number, posColumn: number, selLineNumber: number, selColumn: number) {\n\tassert.deepStrictEqual({\n\t\tselectionStartLineNumber: selection.selectionStartLineNumber,\n\t\tselectionStartColumn: selection.selectionStartColumn,\n\t\tpositionLineNumber: selection.positionLineNumber,\n\t\tpositionColumn: selection.positionColumn\n\t}, {\n\t\tselectionStartLineNumber: selLineNumber,\n\t\tselectionStartColumn: selColumn,\n\t\tpositionLineNumber: posLineNumber,\n\t\tpositionColumn: posColumn\n\t}, 'selection equal');\n}\n\nfunction moveTo(viewModel: ViewModel, lineNumber: number, column: number, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.MoveToSelect.runCoreEditorCommand(viewModel, {\n\t\t\tposition: new Position(lineNumber, column)\n\t\t});\n\t} else {\n\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, {\n\t\t\tposition: new Position(lineNumber, column)\n\t\t});\n\t}\n}\n\nfunction moveToEndOfLine(viewModel: ViewModel, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.CursorEndSelect.runCoreEditorCommand(viewModel, {});\n\t} else {\n\t\tCoreNavigationCommands.CursorEnd.runCoreEditorCommand(viewModel, {});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
