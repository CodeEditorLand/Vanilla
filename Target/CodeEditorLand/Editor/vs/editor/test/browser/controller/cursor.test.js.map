{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/controller/cursor.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { CoreEditingCommands, CoreNavigationCommands } from '../../../browser/coreCommands.js';\nimport { IEditorOptions } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ICursorPositionChangedEvent } from '../../../common/cursorEvents.js';\nimport { ICommand, ICursorStateComputerData, IEditOperationBuilder } from '../../../common/editorCommon.js';\nimport { MetadataConsts, StandardTokenType } from '../../../common/encodedTokenAttributes.js';\nimport { EncodedTokenizationResult, IState, ITokenizationSupport, TokenizationRegistry } from '../../../common/languages.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { IndentAction, IndentationRule } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { NullState } from '../../../common/languages/nullTokenize.js';\nimport { EndOfLinePreference, EndOfLineSequence, ITextModel } from '../../../common/model.js';\nimport { TextModel } from '../../../common/model/textModel.js';\nimport { ViewModel } from '../../../common/viewModel/viewModelImpl.js';\nimport { OutgoingViewModelEventKind } from '../../../common/viewModelEventDispatcher.js';\nimport { ITestCodeEditor, TestCodeEditorInstantiationOptions, createCodeEditorServices, instantiateTestCodeEditor, withTestCodeEditor } from '../testCodeEditor.js';\nimport { IRelaxedTextModelCreationOptions, createTextModel, instantiateTextModel } from '../../common/testTextModel.js';\nimport { TestInstantiationService } from '../../../../platform/instantiation/test/common/instantiationServiceMock.js';\n\n// --------- utils\n\nfunction moveTo(editor: ITestCodeEditor, viewModel: ViewModel, lineNumber: number, column: number, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.MoveToSelect.runCoreEditorCommand(viewModel, {\n\t\t\tposition: new Position(lineNumber, column)\n\t\t});\n\t} else {\n\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, {\n\t\t\tposition: new Position(lineNumber, column)\n\t\t});\n\t}\n}\n\nfunction moveLeft(editor: ITestCodeEditor, viewModel: ViewModel, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.CursorLeftSelect.runCoreEditorCommand(viewModel, {});\n\t} else {\n\t\tCoreNavigationCommands.CursorLeft.runCoreEditorCommand(viewModel, {});\n\t}\n}\n\nfunction moveRight(editor: ITestCodeEditor, viewModel: ViewModel, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.CursorRightSelect.runCoreEditorCommand(viewModel, {});\n\t} else {\n\t\tCoreNavigationCommands.CursorRight.runCoreEditorCommand(viewModel, {});\n\t}\n}\n\nfunction moveDown(editor: ITestCodeEditor, viewModel: ViewModel, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.CursorDownSelect.runCoreEditorCommand(viewModel, {});\n\t} else {\n\t\tCoreNavigationCommands.CursorDown.runCoreEditorCommand(viewModel, {});\n\t}\n}\n\nfunction moveUp(editor: ITestCodeEditor, viewModel: ViewModel, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.CursorUpSelect.runCoreEditorCommand(viewModel, {});\n\t} else {\n\t\tCoreNavigationCommands.CursorUp.runCoreEditorCommand(viewModel, {});\n\t}\n}\n\nfunction moveToBeginningOfLine(editor: ITestCodeEditor, viewModel: ViewModel, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.CursorHomeSelect.runCoreEditorCommand(viewModel, {});\n\t} else {\n\t\tCoreNavigationCommands.CursorHome.runCoreEditorCommand(viewModel, {});\n\t}\n}\n\nfunction moveToEndOfLine(editor: ITestCodeEditor, viewModel: ViewModel, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.CursorEndSelect.runCoreEditorCommand(viewModel, {});\n\t} else {\n\t\tCoreNavigationCommands.CursorEnd.runCoreEditorCommand(viewModel, {});\n\t}\n}\n\nfunction moveToBeginningOfBuffer(editor: ITestCodeEditor, viewModel: ViewModel, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.CursorTopSelect.runCoreEditorCommand(viewModel, {});\n\t} else {\n\t\tCoreNavigationCommands.CursorTop.runCoreEditorCommand(viewModel, {});\n\t}\n}\n\nfunction moveToEndOfBuffer(editor: ITestCodeEditor, viewModel: ViewModel, inSelectionMode: boolean = false) {\n\tif (inSelectionMode) {\n\t\tCoreNavigationCommands.CursorBottomSelect.runCoreEditorCommand(viewModel, {});\n\t} else {\n\t\tCoreNavigationCommands.CursorBottom.runCoreEditorCommand(viewModel, {});\n\t}\n}\n\nfunction assertCursor(viewModel: ViewModel, what: Position | Selection | Selection[]): void {\n\tlet selections: Selection[];\n\tif (what instanceof Position) {\n\t\tselections = [new Selection(what.lineNumber, what.column, what.lineNumber, what.column)];\n\t} else if (what instanceof Selection) {\n\t\tselections = [what];\n\t} else {\n\t\tselections = what;\n\t}\n\tconst actual = viewModel.getSelections().map(s => s.toString());\n\tconst expected = selections.map(s => s.toString());\n\n\tassert.deepStrictEqual(actual, expected);\n}\n\nsuite('Editor Controller - Cursor', () => {\n\tconst LINE1 = '    \\tMy First Line\\t ';\n\tconst LINE2 = '\\tMy Second Line';\n\tconst LINE3 = '    Third Line\uD83D\uDC36';\n\tconst LINE4 = '';\n\tconst LINE5 = '1';\n\n\tconst TEXT =\n\t\tLINE1 + '\\r\\n' +\n\t\tLINE2 + '\\n' +\n\t\tLINE3 + '\\n' +\n\t\tLINE4 + '\\r\\n' +\n\t\tLINE5;\n\n\tfunction runTest(callback: (editor: ITestCodeEditor, viewModel: ViewModel) => void): void {\n\t\twithTestCodeEditor(TEXT, {}, (editor, viewModel) => {\n\t\t\tcallback(editor, viewModel);\n\t\t});\n\t}\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('cursor initialized', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\t// --------- absolute move\n\n\ttest('no move', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 1);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('move', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 2);\n\t\t\tassertCursor(viewModel, new Position(1, 2));\n\t\t});\n\t});\n\n\ttest('move in selection mode', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 2, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 1, 2));\n\t\t});\n\t});\n\n\ttest('move beyond line end', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 25);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t});\n\t});\n\n\ttest('move empty line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 20);\n\t\t\tassertCursor(viewModel, new Position(4, 1));\n\t\t});\n\t});\n\n\ttest('move one char line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 5, 20);\n\t\t\tassertCursor(viewModel, new Position(5, 2));\n\t\t});\n\t});\n\n\ttest('selection down', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 1, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 2, 1));\n\t\t});\n\t});\n\n\ttest('move and then select', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 3);\n\t\t\tassertCursor(viewModel, new Position(2, 3));\n\n\t\t\tmoveTo(editor, viewModel, 2, 15, true);\n\t\t\tassertCursor(viewModel, new Selection(2, 3, 2, 15));\n\n\t\t\tmoveTo(editor, viewModel, 1, 2, true);\n\t\t\tassertCursor(viewModel, new Selection(2, 3, 1, 2));\n\t\t});\n\t});\n\n\t// --------- move left\n\n\ttest('move left on top left position', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('move left', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 3);\n\t\t\tassertCursor(viewModel, new Position(1, 3));\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 2));\n\t\t});\n\t});\n\n\ttest('move left with surrogate pair', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 17);\n\t\t\tassertCursor(viewModel, new Position(3, 17));\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(3, 15));\n\t\t});\n\t});\n\n\ttest('move left goes to previous row', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 1);\n\t\t\tassertCursor(viewModel, new Position(2, 1));\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 21));\n\t\t});\n\t});\n\n\ttest('move left selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 1);\n\t\t\tassertCursor(viewModel, new Position(2, 1));\n\t\t\tmoveLeft(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(2, 1, 1, 21));\n\t\t});\n\t});\n\n\t// --------- move right\n\n\ttest('move right on bottom right position', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 5, 2);\n\t\t\tassertCursor(viewModel, new Position(5, 2));\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(5, 2));\n\t\t});\n\t});\n\n\ttest('move right', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 3);\n\t\t\tassertCursor(viewModel, new Position(1, 3));\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 4));\n\t\t});\n\t});\n\n\ttest('move right with surrogate pair', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 15);\n\t\t\tassertCursor(viewModel, new Position(3, 15));\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(3, 17));\n\t\t});\n\t});\n\n\ttest('move right goes to next row', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 21);\n\t\t\tassertCursor(viewModel, new Position(1, 21));\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 1));\n\t\t});\n\t});\n\n\ttest('move right selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 21);\n\t\t\tassertCursor(viewModel, new Position(1, 21));\n\t\t\tmoveRight(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 21, 2, 1));\n\t\t});\n\t});\n\n\t// --------- move down\n\n\ttest('move down', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(3, 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(4, 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(5, 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(5, 2));\n\t\t});\n\t});\n\n\ttest('move down with selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveDown(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 2, 1));\n\t\t\tmoveDown(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 3, 1));\n\t\t\tmoveDown(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 4, 1));\n\t\t\tmoveDown(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 5, 1));\n\t\t\tmoveDown(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 5, 2));\n\t\t});\n\t});\n\n\ttest('move down with tabs', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 5);\n\t\t\tassertCursor(viewModel, new Position(1, 5));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 2));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(3, 5));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(4, 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(5, 2));\n\t\t});\n\t});\n\n\t// --------- move up\n\n\ttest('move up', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 5);\n\t\t\tassertCursor(viewModel, new Position(3, 5));\n\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 2));\n\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 5));\n\t\t});\n\t});\n\n\ttest('move up with selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 5);\n\t\t\tassertCursor(viewModel, new Position(3, 5));\n\n\t\t\tmoveUp(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(3, 5, 2, 2));\n\n\t\t\tmoveUp(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(3, 5, 1, 5));\n\t\t});\n\t});\n\n\ttest('move up and down with tabs', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 5);\n\t\t\tassertCursor(viewModel, new Position(1, 5));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(5, 2));\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(4, 1));\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(3, 5));\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 2));\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 5));\n\t\t});\n\t});\n\n\ttest('move up and down with end of lines starting from a long one', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveToEndOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t\tmoveToEndOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, LINE2.length + 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(3, LINE3.length + 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(4, LINE4.length + 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(5, LINE5.length + 1));\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t});\n\t});\n\n\ttest('issue #44465: cursor position not correct when move', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 5, 1, 5)]);\n\t\t\t// going once up on the first line remembers the offset visual columns\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 2));\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 5));\n\n\t\t\t// going twice up on the first line discards the offset visual columns\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 1));\n\t\t});\n\t});\n\n\ttest('issue #144041: Cursor up/down works', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'Word1 Word2 Word3 Word4',\n\t\t\t\t'Word5 Word6 Word7 Word8',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { wrappingIndent: 'indent', wordWrap: 'wordWrapColumn', wordWrapColumn: 20 }, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1, 1, 1)]);\n\n\t\t\tconst cursorPositions: any[] = [];\n\t\t\tfunction reportCursorPosition() {\n\t\t\t\tcursorPositions.push(viewModel.getCursorStates()[0].viewState.position.toString());\n\t\t\t}\n\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, editor, null);\n\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\n\t\t\tassert.deepStrictEqual(cursorPositions, [\n\t\t\t\t'(1,1)',\n\t\t\t\t'(2,5)',\n\t\t\t\t'(3,1)',\n\t\t\t\t'(4,5)',\n\t\t\t\t'(4,10)',\n\t\t\t\t'(3,1)',\n\t\t\t\t'(2,5)',\n\t\t\t\t'(1,1)',\n\t\t\t\t'(1,1)',\n\t\t\t]);\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('issue #140195: Cursor up/down makes progress', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'Word1 Word2 Word3 Word4',\n\t\t\t\t'Word5 Word6 Word7 Word8',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { wrappingIndent: 'indent', wordWrap: 'wordWrapColumn', wordWrapColumn: 20 }, (editor, viewModel) => {\n\t\t\teditor.changeDecorations((changeAccessor) => {\n\t\t\t\tchangeAccessor.deltaDecorations([], [\n\t\t\t\t\t{\n\t\t\t\t\t\trange: new Range(1, 22, 1, 22),\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\t\tdescription: 'test',\n\t\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\t\tcontent: 'some very very very very very very very very long text',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t});\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1, 1, 1)]);\n\n\t\t\tconst cursorPositions: any[] = [];\n\t\t\tfunction reportCursorPosition() {\n\t\t\t\tcursorPositions.push(viewModel.getCursorStates()[0].viewState.position.toString());\n\t\t\t}\n\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, editor, null);\n\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\t\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, editor, null);\n\t\t\treportCursorPosition();\n\n\t\t\tassert.deepStrictEqual(cursorPositions, [\n\t\t\t\t'(1,1)',\n\t\t\t\t'(2,5)',\n\t\t\t\t'(5,19)',\n\t\t\t\t'(6,1)',\n\t\t\t\t'(7,5)',\n\t\t\t\t'(6,1)',\n\t\t\t\t'(2,8)',\n\t\t\t\t'(1,1)',\n\t\t\t\t'(1,1)',\n\t\t\t]);\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\t// --------- move to beginning of line\n\n\ttest('move to beginning of line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveToBeginningOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 6));\n\t\t\tmoveToBeginningOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('move to beginning of line from within line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 8);\n\t\t\tmoveToBeginningOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 6));\n\t\t\tmoveToBeginningOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('move to beginning of line from whitespace at beginning of line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 2);\n\t\t\tmoveToBeginningOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 6));\n\t\t\tmoveToBeginningOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('move to beginning of line from within line selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 8);\n\t\t\tmoveToBeginningOfLine(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 6));\n\t\t\tmoveToBeginningOfLine(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 1));\n\t\t});\n\t});\n\n\ttest('move to beginning of line with selection multiline forward', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 8);\n\t\t\tmoveTo(editor, viewModel, 3, 9, true);\n\t\t\tmoveToBeginningOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 5, 3, 5));\n\t\t});\n\t});\n\n\ttest('move to beginning of line with selection multiline backward', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 9);\n\t\t\tmoveTo(editor, viewModel, 1, 8, true);\n\t\t\tmoveToBeginningOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 6, 1, 6));\n\t\t});\n\t});\n\n\ttest('move to beginning of line with selection single line forward', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 2);\n\t\t\tmoveTo(editor, viewModel, 3, 9, true);\n\t\t\tmoveToBeginningOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 5, 3, 5));\n\t\t});\n\t});\n\n\ttest('move to beginning of line with selection single line backward', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 9);\n\t\t\tmoveTo(editor, viewModel, 3, 2, true);\n\t\t\tmoveToBeginningOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 5, 3, 5));\n\t\t});\n\t});\n\n\ttest('issue #15401: \"End\" key is behaving weird when text is selected part 1', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 8);\n\t\t\tmoveTo(editor, viewModel, 3, 9, true);\n\t\t\tmoveToBeginningOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 5, 3, 5));\n\t\t});\n\t});\n\n\ttest('issue #17011: Shift+home/end now go to the end of the selection start\\'s line, not the selection\\'s end', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 8);\n\t\t\tmoveTo(editor, viewModel, 3, 9, true);\n\t\t\tmoveToBeginningOfLine(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 3, 5));\n\t\t});\n\t});\n\n\t// --------- move to end of line\n\n\ttest('move to end of line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveToEndOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t\tmoveToEndOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t});\n\t});\n\n\ttest('move to end of line from within line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 6);\n\t\t\tmoveToEndOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t\tmoveToEndOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t});\n\t});\n\n\ttest('move to end of line from whitespace at end of line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 20);\n\t\t\tmoveToEndOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t\tmoveToEndOfLine(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, LINE1.length + 1));\n\t\t});\n\t});\n\n\ttest('move to end of line from within line selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 6);\n\t\t\tmoveToEndOfLine(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 6, 1, LINE1.length + 1));\n\t\t\tmoveToEndOfLine(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 6, 1, LINE1.length + 1));\n\t\t});\n\t});\n\n\ttest('move to end of line with selection multiline forward', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 1);\n\t\t\tmoveTo(editor, viewModel, 3, 9, true);\n\t\t\tmoveToEndOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 17, 3, 17));\n\t\t});\n\t});\n\n\ttest('move to end of line with selection multiline backward', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 9);\n\t\t\tmoveTo(editor, viewModel, 1, 1, true);\n\t\t\tmoveToEndOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 21, 1, 21));\n\t\t});\n\t});\n\n\ttest('move to end of line with selection single line forward', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 1);\n\t\t\tmoveTo(editor, viewModel, 3, 9, true);\n\t\t\tmoveToEndOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 17, 3, 17));\n\t\t});\n\t});\n\n\ttest('move to end of line with selection single line backward', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 9);\n\t\t\tmoveTo(editor, viewModel, 3, 1, true);\n\t\t\tmoveToEndOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 17, 3, 17));\n\t\t});\n\t});\n\n\ttest('issue #15401: \"End\" key is behaving weird when text is selected part 2', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 1);\n\t\t\tmoveTo(editor, viewModel, 3, 9, true);\n\t\t\tmoveToEndOfLine(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 17, 3, 17));\n\t\t});\n\t});\n\n\t// --------- move to beginning of buffer\n\n\ttest('move to beginning of buffer', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveToBeginningOfBuffer(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('move to beginning of buffer from within first line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 3);\n\t\t\tmoveToBeginningOfBuffer(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('move to beginning of buffer from within another line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 3);\n\t\t\tmoveToBeginningOfBuffer(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('move to beginning of buffer from within first line selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 3);\n\t\t\tmoveToBeginningOfBuffer(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 3, 1, 1));\n\t\t});\n\t});\n\n\ttest('move to beginning of buffer from within another line selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 3);\n\t\t\tmoveToBeginningOfBuffer(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(3, 3, 1, 1));\n\t\t});\n\t});\n\n\t// --------- move to end of buffer\n\n\ttest('move to end of buffer', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveToEndOfBuffer(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(5, LINE5.length + 1));\n\t\t});\n\t});\n\n\ttest('move to end of buffer from within last line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 5, 1);\n\t\t\tmoveToEndOfBuffer(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(5, LINE5.length + 1));\n\t\t});\n\t});\n\n\ttest('move to end of buffer from within another line', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 3);\n\t\t\tmoveToEndOfBuffer(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(5, LINE5.length + 1));\n\t\t});\n\t});\n\n\ttest('move to end of buffer from within last line selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 5, 1);\n\t\t\tmoveToEndOfBuffer(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(5, 1, 5, LINE5.length + 1));\n\t\t});\n\t});\n\n\ttest('move to end of buffer from within another line selection', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 3);\n\t\t\tmoveToEndOfBuffer(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, new Selection(3, 3, 5, LINE5.length + 1));\n\t\t});\n\t});\n\n\t// --------- misc\n\n\ttest('select all', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tCoreNavigationCommands.SelectAll.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 5, LINE5.length + 1));\n\t\t});\n\t});\n\n\t// --------- eventing\n\n\ttest('no move doesn\\'t trigger event', () => {\n\n\t\trunTest((editor, viewModel) => {\n\t\t\tconst disposable = viewModel.onEvent((e) => {\n\t\t\t\tassert.ok(false, 'was not expecting event');\n\t\t\t});\n\t\t\tmoveTo(editor, viewModel, 1, 1);\n\t\t\tdisposable.dispose();\n\t\t});\n\t});\n\n\ttest('move eventing', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tlet events = 0;\n\t\t\tconst disposable = viewModel.onEvent((e) => {\n\t\t\t\tif (e.kind === OutgoingViewModelEventKind.CursorStateChanged) {\n\t\t\t\t\tevents++;\n\t\t\t\t\tassert.deepStrictEqual(e.selections, [new Selection(1, 2, 1, 2)]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tmoveTo(editor, viewModel, 1, 2);\n\t\t\tassert.strictEqual(events, 1, 'receives 1 event');\n\t\t\tdisposable.dispose();\n\t\t});\n\t});\n\n\ttest('move in selection mode eventing', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tlet events = 0;\n\t\t\tconst disposable = viewModel.onEvent((e) => {\n\t\t\t\tif (e.kind === OutgoingViewModelEventKind.CursorStateChanged) {\n\t\t\t\t\tevents++;\n\t\t\t\t\tassert.deepStrictEqual(e.selections, [new Selection(1, 1, 1, 2)]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tmoveTo(editor, viewModel, 1, 2, true);\n\t\t\tassert.strictEqual(events, 1, 'receives 1 event');\n\t\t\tdisposable.dispose();\n\t\t});\n\t});\n\n\t// --------- state save & restore\n\n\ttest('saveState & restoreState', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 1, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 2, 1));\n\n\t\t\tconst savedState = JSON.stringify(viewModel.saveCursorState());\n\n\t\t\tmoveTo(editor, viewModel, 1, 1, false);\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\tviewModel.restoreCursorState(JSON.parse(savedState));\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 2, 1));\n\t\t});\n\t});\n\n\t// --------- updating cursor\n\n\ttest('Independent model edit 1', () => {\n\t\trunTest((editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 16, true);\n\n\t\t\teditor.getModel().applyEdits([EditOperation.delete(new Range(2, 1, 2, 2))]);\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 2, 15));\n\t\t});\n\t});\n\n\ttest('column select 1', () => {\n\t\twithTestCodeEditor([\n\t\t\t'\\tprivate compute(a:number): boolean {',\n\t\t\t'\\t\\tif (a + 3 === 0 || a + 5 === 0) {',\n\t\t\t'\\t\\t\\treturn false;',\n\t\t\t'\\t\\t}',\n\t\t\t'\\t}'\n\t\t], {}, (editor, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 1, 7, false);\n\t\t\tassertCursor(viewModel, new Position(1, 7));\n\n\t\t\tCoreNavigationCommands.ColumnSelect.runCoreEditorCommand(viewModel, {\n\t\t\t\tposition: new Position(4, 4),\n\t\t\t\tviewPosition: new Position(4, 4),\n\t\t\t\tmouseColumn: 15,\n\t\t\t\tdoColumnSelect: true\n\t\t\t});\n\n\t\t\tconst expectedSelections = [\n\t\t\t\tnew Selection(1, 7, 1, 12),\n\t\t\t\tnew Selection(2, 4, 2, 9),\n\t\t\t\tnew Selection(3, 3, 3, 6),\n\t\t\t\tnew Selection(4, 4, 4, 4),\n\t\t\t];\n\n\t\t\tassertCursor(viewModel, expectedSelections);\n\n\t\t});\n\t});\n\n\ttest('grapheme breaking', () => {\n\t\twithTestCodeEditor([\n\t\t\t'abcabc',\n\t\t\t'a\u0303a\u0303a\u0303a\u0303a\u0303a\u0303',\n\t\t\t'\u8FBB\uDB40\uDD00\u8FBB\uDB40\uDD00\u8FBB\uDB40\uDD00',\n\t\t\t'\u0BAA\u0BC1',\n\t\t], {}, (editor, viewModel) => {\n\n\t\t\tviewModel.setSelections('test', [new Selection(2, 1, 2, 1)]);\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 3));\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 1));\n\n\t\t\tviewModel.setSelections('test', [new Selection(3, 1, 3, 1)]);\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(3, 4));\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(3, 1));\n\n\t\t\tviewModel.setSelections('test', [new Selection(4, 1, 4, 1)]);\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(4, 3));\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(4, 1));\n\n\t\t\tviewModel.setSelections('test', [new Selection(1, 3, 1, 3)]);\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 5));\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(3, 4));\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(2, 5));\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Position(1, 3));\n\n\t\t});\n\t});\n\n\ttest('issue #4905 - column select is biased to the right', () => {\n\t\twithTestCodeEditor([\n\t\t\t'var gulp = require(\"gulp\");',\n\t\t\t'var path = require(\"path\");',\n\t\t\t'var rimraf = require(\"rimraf\");',\n\t\t\t'var isarray = require(\"isarray\");',\n\t\t\t'var merge = require(\"merge-stream\");',\n\t\t\t'var concat = require(\"gulp-concat\");',\n\t\t\t'var newer = require(\"gulp-newer\");',\n\t\t].join('\\n'), {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 4, false);\n\t\t\tassertCursor(viewModel, new Position(1, 4));\n\n\t\t\tCoreNavigationCommands.ColumnSelect.runCoreEditorCommand(viewModel, {\n\t\t\t\tposition: new Position(4, 1),\n\t\t\t\tviewPosition: new Position(4, 1),\n\t\t\t\tmouseColumn: 1,\n\t\t\t\tdoColumnSelect: true\n\t\t\t});\n\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 1),\n\t\t\t\tnew Selection(2, 4, 2, 1),\n\t\t\t\tnew Selection(3, 4, 3, 1),\n\t\t\t\tnew Selection(4, 4, 4, 1),\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('issue #20087: column select with mouse', () => {\n\t\twithTestCodeEditor([\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" Key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SoMEKEy\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" valuE=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"00X\"/>',\n\t\t].join('\\n'), {}, (editor, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 10, 10, false);\n\t\t\tassertCursor(viewModel, new Position(10, 10));\n\n\t\t\tCoreNavigationCommands.ColumnSelect.runCoreEditorCommand(viewModel, {\n\t\t\t\tposition: new Position(1, 1),\n\t\t\t\tviewPosition: new Position(1, 1),\n\t\t\t\tmouseColumn: 1,\n\t\t\t\tdoColumnSelect: true\n\t\t\t});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(10, 10, 10, 1),\n\t\t\t\tnew Selection(9, 10, 9, 1),\n\t\t\t\tnew Selection(8, 10, 8, 1),\n\t\t\t\tnew Selection(7, 10, 7, 1),\n\t\t\t\tnew Selection(6, 10, 6, 1),\n\t\t\t\tnew Selection(5, 10, 5, 1),\n\t\t\t\tnew Selection(4, 10, 4, 1),\n\t\t\t\tnew Selection(3, 10, 3, 1),\n\t\t\t\tnew Selection(2, 10, 2, 1),\n\t\t\t\tnew Selection(1, 10, 1, 1),\n\t\t\t]);\n\n\t\t\tCoreNavigationCommands.ColumnSelect.runCoreEditorCommand(viewModel, {\n\t\t\t\tposition: new Position(1, 1),\n\t\t\t\tviewPosition: new Position(1, 1),\n\t\t\t\tmouseColumn: 1,\n\t\t\t\tdoColumnSelect: true\n\t\t\t});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(10, 10, 10, 1),\n\t\t\t\tnew Selection(9, 10, 9, 1),\n\t\t\t\tnew Selection(8, 10, 8, 1),\n\t\t\t\tnew Selection(7, 10, 7, 1),\n\t\t\t\tnew Selection(6, 10, 6, 1),\n\t\t\t\tnew Selection(5, 10, 5, 1),\n\t\t\t\tnew Selection(4, 10, 4, 1),\n\t\t\t\tnew Selection(3, 10, 3, 1),\n\t\t\t\tnew Selection(2, 10, 2, 1),\n\t\t\t\tnew Selection(1, 10, 1, 1),\n\t\t\t]);\n\n\t\t});\n\t});\n\n\ttest('issue #20087: column select with keyboard', () => {\n\t\twithTestCodeEditor([\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" Key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SoMEKEy\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" valuE=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"000\"/>',\n\t\t\t'<property id=\"SomeThing\" key=\"SomeKey\" value=\"00X\"/>',\n\t\t].join('\\n'), {}, (editor, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 10, 10, false);\n\t\t\tassertCursor(viewModel, new Position(10, 10));\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectLeft.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(10, 10, 10, 9)\n\t\t\t]);\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectLeft.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(10, 10, 10, 8)\n\t\t\t]);\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(10, 10, 10, 9)\n\t\t\t]);\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectUp.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(10, 10, 10, 9),\n\t\t\t\tnew Selection(9, 10, 9, 9),\n\t\t\t]);\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectDown.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(10, 10, 10, 9)\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('issue #118062: Column selection cannot select first position of a line', () => {\n\t\twithTestCodeEditor([\n\t\t\t'hello world',\n\t\t].join('\\n'), {}, (editor, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 1, 2, false);\n\t\t\tassertCursor(viewModel, new Position(1, 2));\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectLeft.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 2, 1, 1)\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('column select with keyboard', () => {\n\t\twithTestCodeEditor([\n\t\t\t'var gulp = require(\"gulp\");',\n\t\t\t'var path = require(\"path\");',\n\t\t\t'var rimraf = require(\"rimraf\");',\n\t\t\t'var isarray = require(\"isarray\");',\n\t\t\t'var merge = require(\"merge-stream\");',\n\t\t\t'var concat = require(\"gulp-concat\");',\n\t\t\t'var newer = require(\"gulp-newer\");',\n\t\t].join('\\n'), {}, (editor, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 1, 4, false);\n\t\t\tassertCursor(viewModel, new Position(1, 4));\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 5)\n\t\t\t]);\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectDown.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 5),\n\t\t\t\tnew Selection(2, 4, 2, 5)\n\t\t\t]);\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectDown.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 5),\n\t\t\t\tnew Selection(2, 4, 2, 5),\n\t\t\t\tnew Selection(3, 4, 3, 5),\n\t\t\t]);\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectDown.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectDown.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectDown.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectDown.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 5),\n\t\t\t\tnew Selection(2, 4, 2, 5),\n\t\t\t\tnew Selection(3, 4, 3, 5),\n\t\t\t\tnew Selection(4, 4, 4, 5),\n\t\t\t\tnew Selection(5, 4, 5, 5),\n\t\t\t\tnew Selection(6, 4, 6, 5),\n\t\t\t\tnew Selection(7, 4, 7, 5),\n\t\t\t]);\n\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 6),\n\t\t\t\tnew Selection(2, 4, 2, 6),\n\t\t\t\tnew Selection(3, 4, 3, 6),\n\t\t\t\tnew Selection(4, 4, 4, 6),\n\t\t\t\tnew Selection(5, 4, 5, 6),\n\t\t\t\tnew Selection(6, 4, 6, 6),\n\t\t\t\tnew Selection(7, 4, 7, 6),\n\t\t\t]);\n\n\t\t\t// 10 times\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 16),\n\t\t\t\tnew Selection(2, 4, 2, 16),\n\t\t\t\tnew Selection(3, 4, 3, 16),\n\t\t\t\tnew Selection(4, 4, 4, 16),\n\t\t\t\tnew Selection(5, 4, 5, 16),\n\t\t\t\tnew Selection(6, 4, 6, 16),\n\t\t\t\tnew Selection(7, 4, 7, 16),\n\t\t\t]);\n\n\t\t\t// 10 times\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 26),\n\t\t\t\tnew Selection(2, 4, 2, 26),\n\t\t\t\tnew Selection(3, 4, 3, 26),\n\t\t\t\tnew Selection(4, 4, 4, 26),\n\t\t\t\tnew Selection(5, 4, 5, 26),\n\t\t\t\tnew Selection(6, 4, 6, 26),\n\t\t\t\tnew Selection(7, 4, 7, 26),\n\t\t\t]);\n\n\t\t\t// 2 times => reaching the ending of lines 1 and 2\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\t\tnew Selection(3, 4, 3, 28),\n\t\t\t\tnew Selection(4, 4, 4, 28),\n\t\t\t\tnew Selection(5, 4, 5, 28),\n\t\t\t\tnew Selection(6, 4, 6, 28),\n\t\t\t\tnew Selection(7, 4, 7, 28),\n\t\t\t]);\n\n\t\t\t// 4 times => reaching the ending of line 3\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\t\tnew Selection(4, 4, 4, 32),\n\t\t\t\tnew Selection(5, 4, 5, 32),\n\t\t\t\tnew Selection(6, 4, 6, 32),\n\t\t\t\tnew Selection(7, 4, 7, 32),\n\t\t\t]);\n\n\t\t\t// 2 times => reaching the ending of line 4\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\t\tnew Selection(5, 4, 5, 34),\n\t\t\t\tnew Selection(6, 4, 6, 34),\n\t\t\t\tnew Selection(7, 4, 7, 34),\n\t\t\t]);\n\n\t\t\t// 1 time => reaching the ending of line 7\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\t\tnew Selection(5, 4, 5, 35),\n\t\t\t\tnew Selection(6, 4, 6, 35),\n\t\t\t\tnew Selection(7, 4, 7, 35),\n\t\t\t]);\n\n\t\t\t// 3 times => reaching the ending of lines 5 & 6\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\t\tnew Selection(5, 4, 5, 37),\n\t\t\t\tnew Selection(6, 4, 6, 37),\n\t\t\t\tnew Selection(7, 4, 7, 35),\n\t\t\t]);\n\n\t\t\t// cannot go anywhere anymore\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\t\tnew Selection(5, 4, 5, 37),\n\t\t\t\tnew Selection(6, 4, 6, 37),\n\t\t\t\tnew Selection(7, 4, 7, 35),\n\t\t\t]);\n\n\t\t\t// cannot go anywhere anymore even if we insist\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tCoreNavigationCommands.CursorColumnSelectRight.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\t\tnew Selection(5, 4, 5, 37),\n\t\t\t\tnew Selection(6, 4, 6, 37),\n\t\t\t\tnew Selection(7, 4, 7, 35),\n\t\t\t]);\n\n\t\t\t// can easily go back\n\t\t\tCoreNavigationCommands.CursorColumnSelectLeft.runCoreEditorCommand(viewModel, {});\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\t\tnew Selection(5, 4, 5, 36),\n\t\t\t\tnew Selection(6, 4, 6, 36),\n\t\t\t\tnew Selection(7, 4, 7, 35),\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('setSelection / setPosition with source', () => {\n\n\t\tconst tokenizationSupport: ITokenizationSupport = {\n\t\t\tgetInitialState: () => NullState,\n\t\t\ttokenize: undefined!,\n\t\t\ttokenizeEncoded: (line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult => {\n\t\t\t\treturn new EncodedTokenizationResult(new Uint32Array(0), state);\n\t\t\t}\n\t\t};\n\n\t\tconst LANGUAGE_ID = 'modelModeTest1';\n\t\tconst languageRegistration = TokenizationRegistry.register(LANGUAGE_ID, tokenizationSupport);\n\t\tconst model = createTextModel('Just text', LANGUAGE_ID);\n\n\t\twithTestCodeEditor(model, {}, (editor1, cursor1) => {\n\t\t\tlet event: ICursorPositionChangedEvent | undefined = undefined;\n\t\t\tconst disposable = editor1.onDidChangeCursorPosition(e => {\n\t\t\t\tevent = e;\n\t\t\t});\n\n\t\t\teditor1.setSelection(new Range(1, 2, 1, 3), 'navigation');\n\t\t\tassert.strictEqual(event!.source, 'navigation');\n\n\t\t\tevent = undefined;\n\t\t\teditor1.setPosition(new Position(1, 2), 'navigation');\n\t\t\tassert.strictEqual(event!.source, 'navigation');\n\t\t\tdisposable.dispose();\n\t\t});\n\n\t\tlanguageRegistration.dispose();\n\t\tmodel.dispose();\n\t});\n});\n\nsuite('Editor Controller', () => {\n\n\tconst surroundingLanguageId = 'surroundingLanguage';\n\tconst indentRulesLanguageId = 'indentRulesLanguage';\n\tconst electricCharLanguageId = 'electricCharLanguage';\n\tconst autoClosingLanguageId = 'autoClosingLanguage';\n\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\tlet languageConfigurationService: ILanguageConfigurationService;\n\tlet languageService: ILanguageService;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = createCodeEditorServices(disposables);\n\t\tlanguageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tlanguageService = instantiationService.get(ILanguageService);\n\n\t\tdisposables.add(languageService.registerLanguage({ id: surroundingLanguageId }));\n\t\tdisposables.add(languageConfigurationService.register(surroundingLanguageId, {\n\t\t\tautoClosingPairs: [{ open: '(', close: ')' }]\n\t\t}));\n\n\t\tsetupIndentRulesLanguage(indentRulesLanguageId, {\n\t\t\tdecreaseIndentPattern: /^\\s*((?!\\S.*\\/[*]).*[*]\\/\\s*)?[})\\]]|^\\s*(case\\b.*|default):\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$/,\n\t\t\tincreaseIndentPattern: /^((?!\\/\\/).)*(\\{[^}\"'`]*|\\([^)\"']*|\\[[^\\]\"']*|^\\s*(\\{\\}|\\(\\)|\\[\\]|(case\\b.*|default):))\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$/,\n\t\t\tindentNextLinePattern: /^\\s*(for|while|if|else)\\b(?!.*[;{}]\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$)/,\n\t\t\tunIndentedLinePattern: /^(?!.*([;{}]|\\S:)\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$)(?!.*(\\{[^}\"']*|\\([^)\"']*|\\[[^\\]\"']*|^\\s*(\\{\\}|\\(\\)|\\[\\]|(case\\b.*|default):))\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$)(?!^\\s*((?!\\S.*\\/[*]).*[*]\\/\\s*)?[})\\]]|^\\s*(case\\b.*|default):\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$)(?!^\\s*(for|while|if|else)\\b(?!.*[;{}]\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$))/\n\t\t});\n\n\t\tdisposables.add(languageService.registerLanguage({ id: electricCharLanguageId }));\n\t\tdisposables.add(languageConfigurationService.register(electricCharLanguageId, {\n\t\t\t__electricCharacterSupport: {\n\t\t\t\tdocComment: { open: '/**', close: ' */' }\n\t\t\t},\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')']\n\t\t\t]\n\t\t}));\n\n\t\tsetupAutoClosingLanguage();\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction setupOnEnterLanguage(indentAction: IndentAction): string {\n\t\tconst onEnterLanguageId = 'onEnterMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: onEnterLanguageId }));\n\t\tdisposables.add(languageConfigurationService.register(onEnterLanguageId, {\n\t\t\tonEnterRules: [{\n\t\t\t\tbeforeText: /.*/,\n\t\t\t\taction: {\n\t\t\t\t\tindentAction: indentAction\n\t\t\t\t}\n\t\t\t}]\n\t\t}));\n\t\treturn onEnterLanguageId;\n\t}\n\n\tfunction setupIndentRulesLanguage(languageId: string, indentationRules: IndentationRule): string {\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tindentationRules: indentationRules\n\t\t}));\n\t\treturn languageId;\n\t}\n\n\tfunction setupAutoClosingLanguage() {\n\t\tdisposables.add(languageService.registerLanguage({ id: autoClosingLanguageId }));\n\t\tdisposables.add(languageConfigurationService.register(autoClosingLanguageId, {\n\t\t\tcomments: {\n\t\t\t\tblockComment: ['/*', '*/']\n\t\t\t},\n\t\t\tautoClosingPairs: [\n\t\t\t\t{ open: '{', close: '}' },\n\t\t\t\t{ open: '[', close: ']' },\n\t\t\t\t{ open: '(', close: ')' },\n\t\t\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: '\\\"', close: '\\\"', notIn: ['string'] },\n\t\t\t\t{ open: '`', close: '`', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: '/**', close: ' */', notIn: ['string'] },\n\t\t\t\t{ open: 'begin', close: 'end', notIn: ['string'] }\n\t\t\t],\n\t\t\t__electricCharacterSupport: {\n\t\t\t\tdocComment: { open: '/**', close: ' */' }\n\t\t\t}\n\t\t}));\n\t}\n\n\tfunction setupAutoClosingLanguageTokenization() {\n\t\tclass BaseState implements IState {\n\t\t\tconstructor(\n\t\t\t\tpublic readonly parent: State | null = null\n\t\t\t) { }\n\t\t\tclone(): IState { return this; }\n\t\t\tequals(other: IState): boolean {\n\t\t\t\tif (!(other instanceof BaseState)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!this.parent && !other.parent) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (!this.parent || !other.parent) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn this.parent.equals(other.parent);\n\t\t\t}\n\t\t}\n\t\tclass StringState implements IState {\n\t\t\tconstructor(\n\t\t\t\tpublic readonly char: string,\n\t\t\t\tpublic readonly parentState: State\n\t\t\t) { }\n\t\t\tclone(): IState { return this; }\n\t\t\tequals(other: IState): boolean { return other instanceof StringState && this.char === other.char && this.parentState.equals(other.parentState); }\n\t\t}\n\t\tclass BlockCommentState implements IState {\n\t\t\tconstructor(\n\t\t\t\tpublic readonly parentState: State\n\t\t\t) { }\n\t\t\tclone(): IState { return this; }\n\t\t\tequals(other: IState): boolean { return other instanceof StringState && this.parentState.equals(other.parentState); }\n\t\t}\n\t\ttype State = BaseState | StringState | BlockCommentState;\n\n\t\tconst encodedLanguageId = languageService.languageIdCodec.encodeLanguageId(autoClosingLanguageId);\n\t\tdisposables.add(TokenizationRegistry.register(autoClosingLanguageId, {\n\t\t\tgetInitialState: () => new BaseState(),\n\t\t\ttokenize: undefined!,\n\t\t\ttokenizeEncoded: function (line: string, hasEOL: boolean, _state: IState): EncodedTokenizationResult {\n\t\t\t\tlet state = <State>_state;\n\t\t\t\tconst tokens: { length: number; type: StandardTokenType }[] = [];\n\t\t\t\tconst generateToken = (length: number, type: StandardTokenType, newState?: State) => {\n\t\t\t\t\tif (tokens.length > 0 && tokens[tokens.length - 1].type === type) {\n\t\t\t\t\t\t// grow last tokens\n\t\t\t\t\t\ttokens[tokens.length - 1].length += length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttokens.push({ length, type });\n\t\t\t\t\t}\n\t\t\t\t\tline = line.substring(length);\n\t\t\t\t\tif (newState) {\n\t\t\t\t\t\tstate = newState;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\twhile (line.length > 0) {\n\t\t\t\t\tadvance();\n\t\t\t\t}\n\t\t\t\tconst result = new Uint32Array(tokens.length * 2);\n\t\t\t\tlet startIndex = 0;\n\t\t\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\t\t\tresult[2 * i] = startIndex;\n\t\t\t\t\tresult[2 * i + 1] = (\n\t\t\t\t\t\t(encodedLanguageId << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t\t\t\t\t| (tokens[i].type << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t\t\t\t);\n\t\t\t\t\tstartIndex += tokens[i].length;\n\t\t\t\t}\n\t\t\t\treturn new EncodedTokenizationResult(result, state);\n\n\t\t\t\tfunction advance(): void {\n\t\t\t\t\tif (state instanceof BaseState) {\n\t\t\t\t\t\tconst m1 = line.match(/^[^'\"`{}/]+/g);\n\t\t\t\t\t\tif (m1) {\n\t\t\t\t\t\t\treturn generateToken(m1[0].length, StandardTokenType.Other);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^['\"`]/.test(line)) {\n\t\t\t\t\t\t\treturn generateToken(1, StandardTokenType.String, new StringState(line.charAt(0), state));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^{/.test(line)) {\n\t\t\t\t\t\t\treturn generateToken(1, StandardTokenType.Other, new BaseState(state));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^}/.test(line)) {\n\t\t\t\t\t\t\treturn generateToken(1, StandardTokenType.Other, state.parent || new BaseState());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^\\/\\//.test(line)) {\n\t\t\t\t\t\t\treturn generateToken(line.length, StandardTokenType.Comment, state);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^\\/\\*/.test(line)) {\n\t\t\t\t\t\t\treturn generateToken(2, StandardTokenType.Comment, new BlockCommentState(state));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn generateToken(1, StandardTokenType.Other, state);\n\t\t\t\t\t} else if (state instanceof StringState) {\n\t\t\t\t\t\tconst m1 = line.match(/^[^\\\\'\"`\\$]+/g);\n\t\t\t\t\t\tif (m1) {\n\t\t\t\t\t\t\treturn generateToken(m1[0].length, StandardTokenType.String);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^\\\\/.test(line)) {\n\t\t\t\t\t\t\treturn generateToken(2, StandardTokenType.String);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (line.charAt(0) === state.char) {\n\t\t\t\t\t\t\treturn generateToken(1, StandardTokenType.String, state.parentState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^\\$\\{/.test(line)) {\n\t\t\t\t\t\t\treturn generateToken(2, StandardTokenType.Other, new BaseState(state));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn generateToken(1, StandardTokenType.Other, state);\n\t\t\t\t\t} else if (state instanceof BlockCommentState) {\n\t\t\t\t\t\tconst m1 = line.match(/^[^*]+/g);\n\t\t\t\t\t\tif (m1) {\n\t\t\t\t\t\t\treturn generateToken(m1[0].length, StandardTokenType.String);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^\\*\\//.test(line)) {\n\t\t\t\t\t\t\treturn generateToken(2, StandardTokenType.Comment, state.parentState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn generateToken(1, StandardTokenType.Other, state);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`unknown state`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tfunction setAutoClosingLanguageEnabledSet(chars: string): void {\n\t\tdisposables.add(languageConfigurationService.register(autoClosingLanguageId, {\n\t\t\tautoCloseBefore: chars,\n\t\t\tautoClosingPairs: [\n\t\t\t\t{ open: '{', close: '}' },\n\t\t\t\t{ open: '[', close: ']' },\n\t\t\t\t{ open: '(', close: ')' },\n\t\t\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: '\\\"', close: '\\\"', notIn: ['string'] },\n\t\t\t\t{ open: '`', close: '`', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: '/**', close: ' */', notIn: ['string'] }\n\t\t\t],\n\t\t}));\n\t}\n\n\tfunction createTextModel(text: string, languageId: string | null = null, options: IRelaxedTextModelCreationOptions = TextModel.DEFAULT_CREATION_OPTIONS, uri: URI | null = null): TextModel {\n\t\treturn disposables.add(instantiateTextModel(instantiationService, text, languageId, options, uri));\n\t}\n\n\tfunction withTestCodeEditor(text: ITextModel | string | string[], options: TestCodeEditorInstantiationOptions, callback: (editor: ITestCodeEditor, viewModel: ViewModel) => void): void {\n\t\tlet model: ITextModel;\n\t\tif (typeof text === 'string') {\n\t\t\tmodel = createTextModel(text);\n\t\t} else if (Array.isArray(text)) {\n\t\t\tmodel = createTextModel(text.join('\\n'));\n\t\t} else {\n\t\t\tmodel = text;\n\t\t}\n\t\tconst editor = disposables.add(instantiateTestCodeEditor(instantiationService, model, options));\n\t\tconst viewModel = editor.getViewModel()!;\n\t\tviewModel.setHasFocus(true);\n\t\tcallback(editor, viewModel);\n\t}\n\n\tinterface ICursorOpts {\n\t\ttext: string[];\n\t\tlanguageId?: string | null;\n\t\tmodelOpts?: IRelaxedTextModelCreationOptions;\n\t\teditorOpts?: IEditorOptions;\n\t}\n\n\tfunction usingCursor(opts: ICursorOpts, callback: (editor: ITestCodeEditor, model: TextModel, viewModel: ViewModel) => void): void {\n\t\tconst model = createTextModel(opts.text.join('\\n'), opts.languageId, opts.modelOpts);\n\t\tconst editorOptions: TestCodeEditorInstantiationOptions = opts.editorOpts || {};\n\t\twithTestCodeEditor(model, editorOptions, (editor, viewModel) => {\n\t\t\tcallback(editor, model, viewModel);\n\t\t});\n\t}\n\n\tconst enum AutoClosingColumnType {\n\t\tNormal = 0,\n\t\tSpecial1 = 1,\n\t\tSpecial2 = 2\n\t}\n\n\tfunction extractAutoClosingSpecialColumns(maxColumn: number, annotatedLine: string): AutoClosingColumnType[] {\n\t\tconst result: AutoClosingColumnType[] = [];\n\t\tfor (let j = 1; j <= maxColumn; j++) {\n\t\t\tresult[j] = AutoClosingColumnType.Normal;\n\t\t}\n\t\tlet column = 1;\n\t\tfor (let j = 0; j < annotatedLine.length; j++) {\n\t\t\tif (annotatedLine.charAt(j) === '|') {\n\t\t\t\tresult[column] = AutoClosingColumnType.Special1;\n\t\t\t} else if (annotatedLine.charAt(j) === '!') {\n\t\t\t\tresult[column] = AutoClosingColumnType.Special2;\n\t\t\t} else {\n\t\t\t\tcolumn++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction assertType(editor: ITestCodeEditor, model: ITextModel, viewModel: ViewModel, lineNumber: number, column: number, chr: string, expectedInsert: string, message: string): void {\n\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\tconst expected = lineContent.substr(0, column - 1) + expectedInsert + lineContent.substr(column - 1);\n\t\tmoveTo(editor, viewModel, lineNumber, column);\n\t\tviewModel.type(chr, 'keyboard');\n\t\tassert.deepStrictEqual(model.getLineContent(lineNumber), expected, message);\n\t\tmodel.undo();\n\t}\n\n\ttest('issue microsoft/monaco-editor#443: Indentation of a single row deletes selected text in some cases', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'Hello world!',\n\t\t\t\t'another line'\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tinsertSpaces: false\n\t\t\t},\n\t\t);\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1, 1, 13)]);\n\n\t\t\t// Check that indenting maintains the selection start at column 1\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.deepStrictEqual(viewModel.getSelection(), new Selection(1, 1, 1, 14));\n\t\t});\n\t});\n\n\ttest('Bug 9121: Auto indent + undo + redo is funky', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t''\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t\ttrimAutoWhitespace: false\n\t\t\t},\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n', 'assert1');\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\t', 'assert2');\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\t\\n\\t', 'assert3');\n\n\t\t\tviewModel.type('x');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\t\\n\\tx', 'assert4');\n\n\t\t\tCoreNavigationCommands.CursorLeft.runCoreEditorCommand(viewModel, {});\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\t\\n\\tx', 'assert5');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\t\\nx', 'assert6');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\tx', 'assert7');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\nx', 'assert8');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'x', 'assert9');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\nx', 'assert10');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\t\\nx', 'assert11');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\t\\n\\tx', 'assert12');\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\t\\nx', 'assert13');\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\nx', 'assert14');\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'x', 'assert15');\n\t\t});\n\t});\n\n\ttest('issue #23539: Setting model EOL isn\\'t undoable', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Hello',\n\t\t\t'world'\n\t\t], {}, (editor, viewModel) => {\n\t\t\tconst model = editor.getModel()!;\n\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t\tmodel.setEOL(EndOfLineSequence.LF);\n\t\t\tassert.strictEqual(model.getValue(), 'Hello\\nworld');\n\n\t\t\tmodel.pushEOL(EndOfLineSequence.CRLF);\n\t\t\tassert.strictEqual(model.getValue(), 'Hello\\r\\nworld');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(), 'Hello\\nworld');\n\t\t});\n\t});\n\n\ttest('issue #47733: Undo mangles unicode characters', () => {\n\t\tconst languageId = 'myMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tsurroundingPairs: [{ open: '%', close: '%' }]\n\t\t}));\n\n\t\tconst model = createTextModel('\\'\uD83D\uDC41\\'', languageId);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\teditor.setSelection(new Selection(1, 1, 1, 2));\n\n\t\t\tviewModel.type('%', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '%\\'%\uD83D\uDC41\\'', 'assert1');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\'\uD83D\uDC41\\'', 'assert2');\n\t\t});\n\t});\n\n\ttest('issue #46208: Allow empty selections in the undo/redo stack', () => {\n\t\tconst model = createTextModel('');\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.type('Hello', 'keyboard');\n\t\t\tviewModel.type(' ', 'keyboard');\n\t\t\tviewModel.type('world', 'keyboard');\n\t\t\tviewModel.type(' ', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello world ');\n\t\t\tassertCursor(viewModel, new Position(1, 13));\n\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tmoveRight(editor, viewModel);\n\n\t\t\tmodel.pushEditOperations([], [EditOperation.replaceMove(new Range(1, 12, 1, 13), '')], () => []);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello world');\n\t\t\tassertCursor(viewModel, new Position(1, 12));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello world ');\n\t\t\tassertCursor(viewModel, new Selection(1, 13, 1, 13));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello world');\n\t\t\tassertCursor(viewModel, new Position(1, 12));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello');\n\t\t\tassertCursor(viewModel, new Position(1, 6));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), '');\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello');\n\t\t\tassertCursor(viewModel, new Position(1, 6));\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello world');\n\t\t\tassertCursor(viewModel, new Position(1, 12));\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello world ');\n\t\t\tassertCursor(viewModel, new Position(1, 13));\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello world');\n\t\t\tassertCursor(viewModel, new Position(1, 12));\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'Hello world');\n\t\t\tassertCursor(viewModel, new Position(1, 12));\n\t\t});\n\t});\n\n\ttest('bug #16815:Shift+Tab doesn\\'t go back to tabstop', () => {\n\t\tconst languageId = setupOnEnterLanguage(IndentAction.IndentOutdent);\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'     function baz() {'\n\t\t\t].join('\\n'),\n\t\t\tlanguageId\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 6, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 6, 1, 6));\n\n\t\t\tCoreEditingCommands.Outdent.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    function baz() {');\n\t\t\tassertCursor(viewModel, new Selection(1, 5, 1, 5));\n\t\t});\n\t});\n\n\ttest('Bug #18293:[regression][editor] Can\\'t outdent whitespace line', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'      '\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 7, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 7, 1, 7));\n\n\t\t\tCoreEditingCommands.Outdent.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    ');\n\t\t\tassertCursor(viewModel, new Selection(1, 5, 1, 5));\n\t\t});\n\t});\n\n\ttest('issue #95591: Unindenting moves cursor to beginning of line', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'        '\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { useTabStops: false }, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 9, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 9, 1, 9));\n\n\t\t\tCoreEditingCommands.Outdent.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    ');\n\t\t\tassertCursor(viewModel, new Selection(1, 5, 1, 5));\n\t\t});\n\t});\n\n\ttest('Bug #16657: [editor] Tab on empty line of zero indentation moves cursor to position (1,1)', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'function baz() {',\n\t\t\t\t'\\tfunction hello() { // something here',\n\t\t\t\t'\\t',\n\t\t\t\t'',\n\t\t\t\t'\\t}',\n\t\t\t\t'}',\n\t\t\t\t''\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t},\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 7, 1, false);\n\t\t\tassertCursor(viewModel, new Selection(7, 1, 7, 1));\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(7), '\\t');\n\t\t\tassertCursor(viewModel, new Selection(7, 2, 7, 2));\n\t\t});\n\t});\n\n\ttest('bug #16740: [editor] Cut line doesn\\'t quite cut the last line', () => {\n\n\t\t// Part 1 => there is text on the last line\n\t\twithTestCodeEditor([\n\t\t\t'asdasd',\n\t\t\t'qwerty'\n\t\t], {}, (editor, viewModel) => {\n\t\t\tconst model = editor.getModel()!;\n\n\t\t\tmoveTo(editor, viewModel, 2, 1, false);\n\t\t\tassertCursor(viewModel, new Selection(2, 1, 2, 1));\n\n\t\t\tviewModel.cut('keyboard');\n\t\t\tassert.strictEqual(model.getLineCount(), 1);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'asdasd');\n\n\t\t});\n\n\t\t// Part 2 => there is no text on the last line\n\t\twithTestCodeEditor([\n\t\t\t'asdasd',\n\t\t\t''\n\t\t], {}, (editor, viewModel) => {\n\t\t\tconst model = editor.getModel()!;\n\n\t\t\tmoveTo(editor, viewModel, 2, 1, false);\n\t\t\tassertCursor(viewModel, new Selection(2, 1, 2, 1));\n\n\t\t\tviewModel.cut('keyboard');\n\t\t\tassert.strictEqual(model.getLineCount(), 1);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'asdasd');\n\n\t\t\tviewModel.cut('keyboard');\n\t\t\tassert.strictEqual(model.getLineCount(), 1);\n\t\t\tassert.strictEqual(model.getLineContent(1), '');\n\t\t});\n\t});\n\n\ttest('issue #128602: When cutting multiple lines (ctrl x), the last line will not be erased', () => {\n\t\twithTestCodeEditor([\n\t\t\t'a1',\n\t\t\t'a2',\n\t\t\t'a3'\n\t\t], {}, (editor, viewModel) => {\n\t\t\tconst model = editor.getModel()!;\n\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew Selection(2, 1, 2, 1),\n\t\t\t\tnew Selection(3, 1, 3, 1),\n\t\t\t]);\n\n\t\t\tviewModel.cut('keyboard');\n\t\t\tassert.strictEqual(model.getLineCount(), 1);\n\t\t\tassert.strictEqual(model.getLineContent(1), '');\n\t\t});\n\t});\n\n\ttest('Bug #11476: Double bracket surrounding + undo is broken', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'hello'\n\t\t\t],\n\t\t\tlanguageId: surroundingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 3, false);\n\t\t\tmoveTo(editor, viewModel, 1, 5, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 3, 1, 5));\n\n\t\t\tviewModel.type('(', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(1, 4, 1, 6));\n\n\t\t\tviewModel.type('(', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(1, 5, 1, 7));\n\t\t});\n\t});\n\n\ttest('issue #1140: Backspace stops prematurely', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'function baz() {',\n\t\t\t\t'  return 1;',\n\t\t\t\t'};'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 2, false);\n\t\t\tmoveTo(editor, viewModel, 1, 14, true);\n\t\t\tassertCursor(viewModel, new Selection(3, 2, 1, 14));\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassertCursor(viewModel, new Selection(1, 14, 1, 14));\n\t\t\tassert.strictEqual(model.getLineCount(), 1);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'function baz(;');\n\t\t});\n\t});\n\n\ttest('issue #10212: Pasting entire line does not replace selection', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'line1',\n\t\t\t\t'line2'\n\t\t\t],\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 1, false);\n\t\t\tmoveTo(editor, viewModel, 2, 6, true);\n\n\t\t\tviewModel.paste('line1\\n', true);\n\n\t\t\tassert.strictEqual(model.getLineContent(1), 'line1');\n\t\t\tassert.strictEqual(model.getLineContent(2), 'line1');\n\t\t\tassert.strictEqual(model.getLineContent(3), '');\n\t\t});\n\t});\n\n\ttest('issue #74722: Pasting whole line does not replace selection', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'line1',\n\t\t\t\t'line sel 2',\n\t\t\t\t'line3'\n\t\t\t],\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(2, 6, 2, 9)]);\n\n\t\t\tviewModel.paste('line1\\n', true);\n\n\t\t\tassert.strictEqual(model.getLineContent(1), 'line1');\n\t\t\tassert.strictEqual(model.getLineContent(2), 'line line1');\n\t\t\tassert.strictEqual(model.getLineContent(3), ' 2');\n\t\t\tassert.strictEqual(model.getLineContent(4), 'line3');\n\t\t});\n\t});\n\n\ttest('issue #4996: Multiple cursor paste pastes contents of all cursors', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'line1',\n\t\t\t\t'line2',\n\t\t\t\t'line3'\n\t\t\t],\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1, 1, 1), new Selection(2, 1, 2, 1)]);\n\n\t\t\tviewModel.paste(\n\t\t\t\t'a\\nb\\nc\\nd',\n\t\t\t\tfalse,\n\t\t\t\t[\n\t\t\t\t\t'a\\nb',\n\t\t\t\t\t'c\\nd'\n\t\t\t\t]\n\t\t\t);\n\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'a',\n\t\t\t\t'bline1',\n\t\t\t\t'c',\n\t\t\t\t'dline2',\n\t\t\t\t'line3'\n\t\t\t].join('\\n'));\n\t\t});\n\t});\n\n\ttest('issue #16155: Paste into multiple cursors has edge case when number of lines equals number of cursors - 1', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'test',\n\t\t\t\t'test',\n\t\t\t\t'test',\n\t\t\t\t'test'\n\t\t\t],\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 1, 1, 5),\n\t\t\t\tnew Selection(2, 1, 2, 5),\n\t\t\t\tnew Selection(3, 1, 3, 5),\n\t\t\t\tnew Selection(4, 1, 4, 5),\n\t\t\t]);\n\n\t\t\tviewModel.paste(\n\t\t\t\t'aaa\\nbbb\\nccc\\n',\n\t\t\t\tfalse,\n\t\t\t\tnull\n\t\t\t);\n\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'aaa',\n\t\t\t\t'bbb',\n\t\t\t\t'ccc',\n\t\t\t\t'',\n\t\t\t\t'aaa',\n\t\t\t\t'bbb',\n\t\t\t\t'ccc',\n\t\t\t\t'',\n\t\t\t\t'aaa',\n\t\t\t\t'bbb',\n\t\t\t\t'ccc',\n\t\t\t\t'',\n\t\t\t\t'aaa',\n\t\t\t\t'bbb',\n\t\t\t\t'ccc',\n\t\t\t\t'',\n\t\t\t].join('\\n'));\n\t\t});\n\t});\n\n\ttest('issue #43722: Multiline paste doesn\\'t work anymore', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'test',\n\t\t\t\t'test',\n\t\t\t\t'test',\n\t\t\t\t'test'\n\t\t\t],\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 1, 1, 5),\n\t\t\t\tnew Selection(2, 1, 2, 5),\n\t\t\t\tnew Selection(3, 1, 3, 5),\n\t\t\t\tnew Selection(4, 1, 4, 5),\n\t\t\t]);\n\n\t\t\tviewModel.paste(\n\t\t\t\t'aaa\\r\\nbbb\\r\\nccc\\r\\nddd\\r\\n',\n\t\t\t\tfalse,\n\t\t\t\tnull\n\t\t\t);\n\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'aaa',\n\t\t\t\t'bbb',\n\t\t\t\t'ccc',\n\t\t\t\t'ddd',\n\t\t\t].join('\\n'));\n\t\t});\n\t});\n\n\ttest('issue #46440: (1) Pasting a multi-line selection pastes entire selection into every insertion point', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'line1',\n\t\t\t\t'line2',\n\t\t\t\t'line3'\n\t\t\t],\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1, 1, 1), new Selection(2, 1, 2, 1), new Selection(3, 1, 3, 1)]);\n\n\t\t\tviewModel.paste(\n\t\t\t\t'a\\nb\\nc',\n\t\t\t\tfalse,\n\t\t\t\tnull\n\t\t\t);\n\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'aline1',\n\t\t\t\t'bline2',\n\t\t\t\t'cline3'\n\t\t\t].join('\\n'));\n\t\t});\n\t});\n\n\ttest('issue #46440: (2) Pasting a multi-line selection pastes entire selection into every insertion point', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'line1',\n\t\t\t\t'line2',\n\t\t\t\t'line3'\n\t\t\t],\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1, 1, 1), new Selection(2, 1, 2, 1), new Selection(3, 1, 3, 1)]);\n\n\t\t\tviewModel.paste(\n\t\t\t\t'a\\nb\\nc\\n',\n\t\t\t\tfalse,\n\t\t\t\tnull\n\t\t\t);\n\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'aline1',\n\t\t\t\t'bline2',\n\t\t\t\t'cline3'\n\t\t\t].join('\\n'));\n\t\t});\n\t});\n\n\ttest('issue #3071: Investigate why undo stack gets corrupted', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'some lines',\n\t\t\t\t'and more lines',\n\t\t\t\t'just some text',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 1, false);\n\t\t\tmoveTo(editor, viewModel, 3, 4, true);\n\n\t\t\tlet isFirst = true;\n\t\t\tconst disposable = model.onDidChangeContent(() => {\n\t\t\t\tif (isFirst) {\n\t\t\t\t\tisFirst = false;\n\t\t\t\t\tviewModel.type('\\t', 'keyboard');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'\\t just some text'\n\t\t\t].join('\\n'), '001');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'    some lines',\n\t\t\t\t'    and more lines',\n\t\t\t\t'    just some text',\n\t\t\t].join('\\n'), '002');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'some lines',\n\t\t\t\t'and more lines',\n\t\t\t\t'just some text',\n\t\t\t].join('\\n'), '003');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'some lines',\n\t\t\t\t'and more lines',\n\t\t\t\t'just some text',\n\t\t\t].join('\\n'), '004');\n\n\t\t\tdisposable.dispose();\n\t\t});\n\t});\n\n\ttest('issue #12950: Cannot Double Click To Insert Emoji Using OSX Emoji Panel', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'some lines',\n\t\t\t\t'and more lines',\n\t\t\t\t'just some text',\n\t\t\t],\n\t\t\tlanguageId: null\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 1, false);\n\n\t\t\tviewModel.type('\uD83D\uDE0D', 'keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'some lines',\n\t\t\t\t'and more lines',\n\t\t\t\t'\uD83D\uDE0Djust some text',\n\t\t\t].join('\\n'));\n\t\t});\n\t});\n\n\ttest('issue #3463: pressing tab adds spaces, but not as many as for a tab', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'function a() {',\n\t\t\t\t'\\tvar a = {',\n\t\t\t\t'\\t\\tx: 3',\n\t\t\t\t'\\t};',\n\t\t\t\t'}',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 2, false);\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(3), '\\t    \\tx: 3');\n\t\t});\n\t});\n\n\ttest('issue #4312: trying to type a tab character over a sequence of spaces results in unexpected behaviour', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'var foo = 123;       // this is a comment',\n\t\t\t\t'var bar = 4;       // another comment'\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 15, false);\n\t\t\tmoveTo(editor, viewModel, 1, 22, true);\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'var foo = 123;\\t// this is a comment');\n\t\t});\n\t});\n\n\ttest('issue #832: word right', () => {\n\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some   more   text a+= 3 +5-3 + 7 */  '\n\t\t\t],\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 1, false);\n\n\t\t\tfunction assertWordRight(col: number, expectedCol: number) {\n\t\t\t\tconst args = {\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tlineNumber: 1,\n\t\t\t\t\t\tcolumn: col\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (col === 1) {\n\t\t\t\t\tCoreNavigationCommands.WordSelect.runCoreEditorCommand(viewModel, args);\n\t\t\t\t} else {\n\t\t\t\t\tCoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(viewModel, args);\n\t\t\t\t}\n\n\t\t\t\tassert.strictEqual(viewModel.getSelection().startColumn, 1, 'TEST FOR ' + col);\n\t\t\t\tassert.strictEqual(viewModel.getSelection().endColumn, expectedCol, 'TEST FOR ' + col);\n\t\t\t}\n\n\t\t\tassertWordRight(1, '   '.length + 1);\n\t\t\tassertWordRight(2, '   '.length + 1);\n\t\t\tassertWordRight(3, '   '.length + 1);\n\t\t\tassertWordRight(4, '   '.length + 1);\n\t\t\tassertWordRight(5, '   /'.length + 1);\n\t\t\tassertWordRight(6, '   /*'.length + 1);\n\t\t\tassertWordRight(7, '   /* '.length + 1);\n\t\t\tassertWordRight(8, '   /* Just'.length + 1);\n\t\t\tassertWordRight(9, '   /* Just'.length + 1);\n\t\t\tassertWordRight(10, '   /* Just'.length + 1);\n\t\t\tassertWordRight(11, '   /* Just'.length + 1);\n\t\t\tassertWordRight(12, '   /* Just '.length + 1);\n\t\t\tassertWordRight(13, '   /* Just some'.length + 1);\n\t\t\tassertWordRight(14, '   /* Just some'.length + 1);\n\t\t\tassertWordRight(15, '   /* Just some'.length + 1);\n\t\t\tassertWordRight(16, '   /* Just some'.length + 1);\n\t\t\tassertWordRight(17, '   /* Just some '.length + 1);\n\t\t\tassertWordRight(18, '   /* Just some  '.length + 1);\n\t\t\tassertWordRight(19, '   /* Just some   '.length + 1);\n\t\t\tassertWordRight(20, '   /* Just some   more'.length + 1);\n\t\t\tassertWordRight(21, '   /* Just some   more'.length + 1);\n\t\t\tassertWordRight(22, '   /* Just some   more'.length + 1);\n\t\t\tassertWordRight(23, '   /* Just some   more'.length + 1);\n\t\t\tassertWordRight(24, '   /* Just some   more '.length + 1);\n\t\t\tassertWordRight(25, '   /* Just some   more  '.length + 1);\n\t\t\tassertWordRight(26, '   /* Just some   more   '.length + 1);\n\t\t\tassertWordRight(27, '   /* Just some   more   text'.length + 1);\n\t\t\tassertWordRight(28, '   /* Just some   more   text'.length + 1);\n\t\t\tassertWordRight(29, '   /* Just some   more   text'.length + 1);\n\t\t\tassertWordRight(30, '   /* Just some   more   text'.length + 1);\n\t\t\tassertWordRight(31, '   /* Just some   more   text '.length + 1);\n\t\t\tassertWordRight(32, '   /* Just some   more   text a'.length + 1);\n\t\t\tassertWordRight(33, '   /* Just some   more   text a+'.length + 1);\n\t\t\tassertWordRight(34, '   /* Just some   more   text a+='.length + 1);\n\t\t\tassertWordRight(35, '   /* Just some   more   text a+= '.length + 1);\n\t\t\tassertWordRight(36, '   /* Just some   more   text a+= 3'.length + 1);\n\t\t\tassertWordRight(37, '   /* Just some   more   text a+= 3 '.length + 1);\n\t\t\tassertWordRight(38, '   /* Just some   more   text a+= 3 +'.length + 1);\n\t\t\tassertWordRight(39, '   /* Just some   more   text a+= 3 +5'.length + 1);\n\t\t\tassertWordRight(40, '   /* Just some   more   text a+= 3 +5-'.length + 1);\n\t\t\tassertWordRight(41, '   /* Just some   more   text a+= 3 +5-3'.length + 1);\n\t\t\tassertWordRight(42, '   /* Just some   more   text a+= 3 +5-3 '.length + 1);\n\t\t\tassertWordRight(43, '   /* Just some   more   text a+= 3 +5-3 +'.length + 1);\n\t\t\tassertWordRight(44, '   /* Just some   more   text a+= 3 +5-3 + '.length + 1);\n\t\t\tassertWordRight(45, '   /* Just some   more   text a+= 3 +5-3 + 7'.length + 1);\n\t\t\tassertWordRight(46, '   /* Just some   more   text a+= 3 +5-3 + 7 '.length + 1);\n\t\t\tassertWordRight(47, '   /* Just some   more   text a+= 3 +5-3 + 7 *'.length + 1);\n\t\t\tassertWordRight(48, '   /* Just some   more   text a+= 3 +5-3 + 7 */'.length + 1);\n\t\t\tassertWordRight(49, '   /* Just some   more   text a+= 3 +5-3 + 7 */ '.length + 1);\n\t\t\tassertWordRight(50, '   /* Just some   more   text a+= 3 +5-3 + 7 */  '.length + 1);\n\t\t});\n\t});\n\n\ttest('issue #33788: Wrong cursor position when double click to select a word', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'Just some text'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tCoreNavigationCommands.WordSelect.runCoreEditorCommand(viewModel, { position: new Position(1, 8) });\n\t\t\tassert.deepStrictEqual(viewModel.getSelection(), new Selection(1, 6, 1, 10));\n\n\t\t\tCoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(viewModel, { position: new Position(1, 8) });\n\t\t\tassert.deepStrictEqual(viewModel.getSelection(), new Selection(1, 6, 1, 10));\n\t\t});\n\t});\n\n\ttest('issue #12887: Double-click highlighting separating white space', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'abc def'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tCoreNavigationCommands.WordSelect.runCoreEditorCommand(viewModel, { position: new Position(1, 5) });\n\t\t\tassert.deepStrictEqual(viewModel.getSelection(), new Selection(1, 5, 1, 8));\n\t\t});\n\t});\n\n\ttest('issue #9675: Undo/Redo adds a stop in between CHN Characters', () => {\n\t\twithTestCodeEditor([], {}, (editor, viewModel) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\t// Typing sennsei in Japanese - Hiragana\n\t\t\tviewModel.type('\uFF53', 'keyboard');\n\t\t\tviewModel.compositionType('\u305B', 1, 0, 0);\n\t\t\tviewModel.compositionType('\u305B\uFF4E', 1, 0, 0);\n\t\t\tviewModel.compositionType('\u305B\u3093', 2, 0, 0);\n\t\t\tviewModel.compositionType('\u305B\u3093\uFF53', 2, 0, 0);\n\t\t\tviewModel.compositionType('\u305B\u3093\u305B', 3, 0, 0);\n\t\t\tviewModel.compositionType('\u305B\u3093\u305B', 3, 0, 0);\n\t\t\tviewModel.compositionType('\u305B\u3093\u305B\u3044', 3, 0, 0);\n\t\t\tviewModel.compositionType('\u305B\u3093\u305B\u3044', 4, 0, 0);\n\t\t\tviewModel.compositionType('\u305B\u3093\u305B\u3044', 4, 0, 0);\n\t\t\tviewModel.compositionType('\u305B\u3093\u305B\u3044', 4, 0, 0);\n\n\t\t\tassert.strictEqual(model.getLineContent(1), '\u305B\u3093\u305B\u3044');\n\t\t\tassertCursor(viewModel, new Position(1, 5));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), '');\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('issue #23983: Calling model.setEOL does not reset cursor position', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'first line',\n\t\t\t\t'second line'\n\t\t\t]\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmodel.setEOL(EndOfLineSequence.CRLF);\n\n\t\t\tviewModel.setSelections('test', [new Selection(2, 2, 2, 2)]);\n\t\t\tmodel.setEOL(EndOfLineSequence.LF);\n\n\t\t\tassertCursor(viewModel, new Selection(2, 2, 2, 2));\n\t\t});\n\t});\n\n\ttest('issue #23983: Calling model.setValue() resets cursor position', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'first line',\n\t\t\t\t'second line'\n\t\t\t]\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmodel.setEOL(EndOfLineSequence.CRLF);\n\n\t\t\tviewModel.setSelections('test', [new Selection(2, 2, 2, 2)]);\n\t\t\tmodel.setValue([\n\t\t\t\t'different first line',\n\t\t\t\t'different second line',\n\t\t\t\t'new third line'\n\t\t\t].join('\\n'));\n\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 1, 1));\n\t\t});\n\t});\n\n\ttest('issue #36740: wordwrap creates an extra step / character at the wrapping point', () => {\n\t\t// a single model line => 4 view lines\n\t\twithTestCodeEditor([\n\t\t\t[\n\t\t\t\t'Lorem ipsum ',\n\t\t\t\t'dolor sit amet ',\n\t\t\t\t'consectetur ',\n\t\t\t\t'adipiscing elit',\n\t\t\t].join('')\n\t\t], { wordWrap: 'wordWrapColumn', wordWrapColumn: 16 }, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 7, 1, 7)]);\n\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 8));\n\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 9, 1, 9));\n\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 10, 1, 10));\n\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 11, 1, 11));\n\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 12, 1, 12));\n\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 13, 1, 13));\n\n\t\t\t// moving to view line 2\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 14, 1, 14));\n\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 13, 1, 13));\n\n\t\t\t// moving back to view line 1\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 12, 1, 12));\n\t\t});\n\t});\n\n\ttest('issue #110376: multiple selections with wordwrap behave differently', () => {\n\t\t// a single model line => 4 view lines\n\t\twithTestCodeEditor([\n\t\t\t[\n\t\t\t\t'just a sentence. just a ',\n\t\t\t\t'sentence. just a sentence.',\n\t\t\t].join('')\n\t\t], { wordWrap: 'wordWrapColumn', wordWrapColumn: 25 }, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 1, 1, 16),\n\t\t\t\tnew Selection(1, 18, 1, 33),\n\t\t\t\tnew Selection(1, 35, 1, 50),\n\t\t\t]);\n\n\t\t\tmoveLeft(editor, viewModel);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew Selection(1, 18, 1, 18),\n\t\t\t\tnew Selection(1, 35, 1, 35),\n\t\t\t]);\n\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 1, 1, 16),\n\t\t\t\tnew Selection(1, 18, 1, 33),\n\t\t\t\tnew Selection(1, 35, 1, 50),\n\t\t\t]);\n\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 16, 1, 16),\n\t\t\t\tnew Selection(1, 33, 1, 33),\n\t\t\t\tnew Selection(1, 50, 1, 50),\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('issue #98320: Multi-Cursor, Wrap lines and cursorSelectRight ==> cursors out of sync', () => {\n\t\t// a single model line => 4 view lines\n\t\twithTestCodeEditor([\n\t\t\t[\n\t\t\t\t'lorem_ipsum-1993x11x13',\n\t\t\t\t'dolor_sit_amet-1998x04x27',\n\t\t\t\t'consectetur-2007x10x08',\n\t\t\t\t'adipiscing-2012x07x27',\n\t\t\t\t'elit-2015x02x27',\n\t\t\t].join('\\n')\n\t\t], { wordWrap: 'wordWrapColumn', wordWrapColumn: 16 }, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 13, 1, 13),\n\t\t\t\tnew Selection(2, 16, 2, 16),\n\t\t\t\tnew Selection(3, 13, 3, 13),\n\t\t\t\tnew Selection(4, 12, 4, 12),\n\t\t\t\tnew Selection(5, 6, 5, 6),\n\t\t\t]);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 13, 1, 13),\n\t\t\t\tnew Selection(2, 16, 2, 16),\n\t\t\t\tnew Selection(3, 13, 3, 13),\n\t\t\t\tnew Selection(4, 12, 4, 12),\n\t\t\t\tnew Selection(5, 6, 5, 6),\n\t\t\t]);\n\n\t\t\tmoveRight(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 13, 1, 14),\n\t\t\t\tnew Selection(2, 16, 2, 17),\n\t\t\t\tnew Selection(3, 13, 3, 14),\n\t\t\t\tnew Selection(4, 12, 4, 13),\n\t\t\t\tnew Selection(5, 6, 5, 7),\n\t\t\t]);\n\n\t\t\tmoveRight(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 13, 1, 15),\n\t\t\t\tnew Selection(2, 16, 2, 18),\n\t\t\t\tnew Selection(3, 13, 3, 15),\n\t\t\t\tnew Selection(4, 12, 4, 14),\n\t\t\t\tnew Selection(5, 6, 5, 8),\n\t\t\t]);\n\n\t\t\tmoveRight(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 13, 1, 16),\n\t\t\t\tnew Selection(2, 16, 2, 19),\n\t\t\t\tnew Selection(3, 13, 3, 16),\n\t\t\t\tnew Selection(4, 12, 4, 15),\n\t\t\t\tnew Selection(5, 6, 5, 9),\n\t\t\t]);\n\n\t\t\tmoveRight(editor, viewModel, true);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 13, 1, 17),\n\t\t\t\tnew Selection(2, 16, 2, 20),\n\t\t\t\tnew Selection(3, 13, 3, 17),\n\t\t\t\tnew Selection(4, 12, 4, 16),\n\t\t\t\tnew Selection(5, 6, 5, 10),\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('issue #41573 - delete across multiple lines does not shrink the selection when word wraps', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Authorization: \\'Bearer pHKRfCTFSnGxs6akKlb9ddIXcca0sIUSZJutPHYqz7vEeHdMTMh0SGN0IGU3a0n59DXjTLRsj5EJ2u33qLNIFi9fk5XF8pK39PndLYUZhPt4QvHGLScgSkK0L4gwzkzMloTQPpKhqiikiIOvyNNSpd2o8j29NnOmdTUOKi9DVt74PD2ohKxyOrWZ6oZprTkb3eKajcpnS0LABKfaw2rmv4\\','\n\t\t].join('\\n'), { wordWrap: 'wordWrapColumn', wordWrapColumn: 100 }, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 43, false);\n\t\t\tmoveTo(editor, viewModel, 1, 147, true);\n\t\t\tassertCursor(viewModel, new Selection(1, 43, 1, 147));\n\n\t\t\teditor.getModel().applyEdits([{\n\t\t\t\trange: new Range(1, 1, 1, 43),\n\t\t\t\ttext: ''\n\t\t\t}]);\n\n\t\t\tassertCursor(viewModel, new Selection(1, 1, 1, 105));\n\t\t});\n\t});\n\n\ttest('issue #22717: Moving text cursor cause an incorrect position in Chinese', () => {\n\t\t// a single model line => 4 view lines\n\t\twithTestCodeEditor([\n\t\t\t[\n\t\t\t\t'\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u5341',\n\t\t\t\t'12345678901234567890',\n\t\t\t].join('\\n')\n\t\t], {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 5, 1, 5)]);\n\n\t\t\tmoveDown(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(2, 9, 2, 9));\n\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(2, 10, 2, 10));\n\n\t\t\tmoveRight(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(2, 11, 2, 11));\n\n\t\t\tmoveUp(editor, viewModel);\n\t\t\tassertCursor(viewModel, new Selection(1, 6, 1, 6));\n\t\t});\n\t});\n\n\ttest('issue #112301: new stickyTabStops feature interferes with word wrap', () => {\n\t\twithTestCodeEditor([\n\t\t\t[\n\t\t\t\t'function hello() {',\n\t\t\t\t'        console.log(`this is a long console message`)',\n\t\t\t\t'}',\n\t\t\t].join('\\n')\n\t\t], { wordWrap: 'wordWrapColumn', wordWrapColumn: 32, stickyTabStops: true }, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(2, 31, 2, 31)\n\t\t\t]);\n\t\t\tmoveRight(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Position(2, 32));\n\n\t\t\tmoveRight(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Position(2, 33));\n\n\t\t\tmoveRight(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Position(2, 34));\n\n\t\t\tmoveLeft(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Position(2, 33));\n\n\t\t\tmoveLeft(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Position(2, 32));\n\n\t\t\tmoveLeft(editor, viewModel, false);\n\t\t\tassertCursor(viewModel, new Position(2, 31));\n\t\t});\n\t});\n\n\ttest('issue #44805: Should not be able to undo in readonly editor', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t''\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { readOnly: true }, (editor, viewModel) => {\n\t\t\tmodel.pushEditOperations([new Selection(1, 1, 1, 1)], [{\n\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\ttext: 'Hello world!'\n\t\t\t}], () => [new Selection(1, 1, 1, 1)]);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'Hello world!');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'Hello world!');\n\t\t});\n\t});\n\n\ttest('issue #46314: ViewModel is out of sync with Model!', () => {\n\n\t\tconst tokenizationSupport: ITokenizationSupport = {\n\t\t\tgetInitialState: () => NullState,\n\t\t\ttokenize: undefined!,\n\t\t\ttokenizeEncoded: (line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult => {\n\t\t\t\treturn new EncodedTokenizationResult(new Uint32Array(0), state);\n\t\t\t}\n\t\t};\n\n\t\tconst LANGUAGE_ID = 'modelModeTest1';\n\t\tconst languageRegistration = TokenizationRegistry.register(LANGUAGE_ID, tokenizationSupport);\n\t\tconst model = createTextModel('Just text', LANGUAGE_ID);\n\n\t\twithTestCodeEditor(model, {}, (editor1, cursor1) => {\n\t\t\twithTestCodeEditor(model, {}, (editor2, cursor2) => {\n\n\t\t\t\tconst disposable = editor1.onDidChangeCursorPosition(() => {\n\t\t\t\t\tmodel.tokenization.tokenizeIfCheap(1);\n\t\t\t\t});\n\n\t\t\t\tmodel.applyEdits([{ range: new Range(1, 1, 1, 1), text: '-' }]);\n\n\t\t\t\tdisposable.dispose();\n\t\t\t});\n\t\t});\n\n\t\tlanguageRegistration.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('issue #37967: problem replacing consecutive characters', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'const a = \"foo\";',\n\t\t\t\t'const b = \"\"'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { multiCursorMergeOverlapping: false }, (editor, viewModel) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 12, 1, 12),\n\t\t\t\tnew Selection(1, 16, 1, 16),\n\t\t\t\tnew Selection(2, 12, 2, 12),\n\t\t\t\tnew Selection(2, 13, 2, 13),\n\t\t\t]);\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 11, 1, 11),\n\t\t\t\tnew Selection(1, 14, 1, 14),\n\t\t\t\tnew Selection(2, 11, 2, 11),\n\t\t\t\tnew Selection(2, 11, 2, 11),\n\t\t\t]);\n\n\t\t\tviewModel.type('\\'', 'keyboard');\n\n\t\t\tassert.strictEqual(model.getLineContent(1), 'const a = \\'foo\\';');\n\t\t\tassert.strictEqual(model.getLineContent(2), 'const b = \\'\\'');\n\t\t});\n\t});\n\n\ttest('issue #15761: Cursor doesn\\'t move in a redo operation', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'hello'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 4, 1, 4)\n\t\t\t]);\n\n\t\t\teditor.executeEdits('test', [{\n\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\ttext: '*',\n\t\t\t\tforceMoveMarkers: true\n\t\t\t}]);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t]);\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 4, 1, 4),\n\t\t\t]);\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('issue #42783: API Calls with Undo Leave Cursor in Wrong Position', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'ab'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1, 1, 1)\n\t\t\t]);\n\n\t\t\teditor.executeEdits('test', [{\n\t\t\t\trange: new Range(1, 1, 1, 3),\n\t\t\t\ttext: ''\n\t\t\t}]);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t]);\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t]);\n\n\t\t\teditor.executeEdits('test', [{\n\t\t\t\trange: new Range(1, 1, 1, 2),\n\t\t\t\ttext: ''\n\t\t\t}]);\n\t\t\tassertCursor(viewModel, [\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('issue #85712: Paste line moves cursor to start of current line rather than start of next line', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'abc123',\n\t\t\t\t''\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(2, 1, 2, 1)\n\t\t\t]);\n\t\t\tviewModel.paste('something\\n', true);\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'abc123',\n\t\t\t\t'something',\n\t\t\t\t''\n\t\t\t].join('\\n'));\n\t\t\tassertCursor(viewModel, new Position(3, 1));\n\t\t});\n\t});\n\n\ttest('issue #84897: Left delete behavior in some languages is changed', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'\u0E2A\u0E27\u0E31\u0E2A\u0E14\u0E35'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 7, 1, 7)\n\t\t\t]);\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A\u0E27\u0E31\u0E2A\u0E14');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A\u0E27\u0E31\u0E2A');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A\u0E27\u0E31');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A\u0E27');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '');\n\t\t});\n\t});\n\n\ttest('issue #122914: Left delete behavior in some languages is changed (useTabStops: false)', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'\u0E2A\u0E27\u0E31\u0E2A\u0E14\u0E35'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { useTabStops: false }, (editor, viewModel) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 7, 1, 7)\n\t\t\t]);\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A\u0E27\u0E31\u0E2A\u0E14');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A\u0E27\u0E31\u0E2A');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A\u0E27\u0E31');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A\u0E27');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\u0E2A');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '');\n\t\t});\n\t});\n\n\ttest('issue #99629: Emoji modifiers in text treated separately when using backspace', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'\uD83D\uDC76\uD83C\uDFFE'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { useTabStops: false }, (editor, viewModel) => {\n\t\t\tconst len = model.getValueLength();\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1 + len, 1, 1 + len)\n\t\t\t]);\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '');\n\t\t});\n\t});\n\n\ttest('issue #99629: Emoji modifiers in text treated separately when using backspace (ZWJ sequence)', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'\uD83D\uDC68\u200D\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDC67\u200D\uD83D\uDC66'\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { useTabStops: false }, (editor, viewModel) => {\n\t\t\tconst len = model.getValueLength();\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1 + len, 1, 1 + len)\n\t\t\t]);\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\uD83D\uDC68\u200D\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDC67');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\uD83D\uDC68\u200D\uD83D\uDC69\uD83C\uDFFD');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\uD83D\uDC68');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '');\n\t\t});\n\t});\n\n\ttest('issue #105730: move left behaves differently for multiple cursors', () => {\n\t\tconst model = createTextModel('asdfghjkl, asdfghjkl, asdfghjkl, ');\n\n\t\twithTestCodeEditor(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\twordWrap: 'wordWrapColumn',\n\t\t\t\twordWrapColumn: 24\n\t\t\t},\n\t\t\t(editor, viewModel) => {\n\t\t\t\tviewModel.setSelections('test', [\n\t\t\t\t\tnew Selection(1, 10, 1, 12),\n\t\t\t\t\tnew Selection(1, 21, 1, 23),\n\t\t\t\t\tnew Selection(1, 32, 1, 34)\n\t\t\t\t]);\n\t\t\t\tmoveLeft(editor, viewModel, false);\n\t\t\t\tassertCursor(viewModel, [\n\t\t\t\t\tnew Selection(1, 10, 1, 10),\n\t\t\t\t\tnew Selection(1, 21, 1, 21),\n\t\t\t\t\tnew Selection(1, 32, 1, 32)\n\t\t\t\t]);\n\n\t\t\t\tviewModel.setSelections('test', [\n\t\t\t\t\tnew Selection(1, 10, 1, 12),\n\t\t\t\t\tnew Selection(1, 21, 1, 23),\n\t\t\t\t\tnew Selection(1, 32, 1, 34)\n\t\t\t\t]);\n\t\t\t\tmoveLeft(editor, viewModel, true);\n\t\t\t\tassertCursor(viewModel, [\n\t\t\t\t\tnew Selection(1, 10, 1, 11),\n\t\t\t\t\tnew Selection(1, 21, 1, 22),\n\t\t\t\t\tnew Selection(1, 32, 1, 33)\n\t\t\t\t]);\n\t\t\t});\n\t});\n\n\ttest('issue #105730: move right should always skip wrap point', () => {\n\t\tconst model = createTextModel('asdfghjkl, asdfghjkl, asdfghjkl, \\nasdfghjkl,');\n\n\t\twithTestCodeEditor(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\twordWrap: 'wordWrapColumn',\n\t\t\t\twordWrapColumn: 24\n\t\t\t},\n\t\t\t(editor, viewModel) => {\n\t\t\t\tviewModel.setSelections('test', [\n\t\t\t\t\tnew Selection(1, 22, 1, 22)\n\t\t\t\t]);\n\t\t\t\tmoveRight(editor, viewModel, false);\n\t\t\t\tmoveRight(editor, viewModel, false);\n\t\t\t\tassertCursor(viewModel, [\n\t\t\t\t\tnew Selection(1, 24, 1, 24),\n\t\t\t\t]);\n\n\t\t\t\tviewModel.setSelections('test', [\n\t\t\t\t\tnew Selection(1, 22, 1, 22)\n\t\t\t\t]);\n\t\t\t\tmoveRight(editor, viewModel, true);\n\t\t\t\tmoveRight(editor, viewModel, true);\n\t\t\t\tassertCursor(viewModel, [\n\t\t\t\t\tnew Selection(1, 22, 1, 24),\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('issue #123178: sticky tab in consecutive wrapped lines', () => {\n\t\tconst model = createTextModel('    aaaa        aaaa', undefined, { tabSize: 4 });\n\n\t\twithTestCodeEditor(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\twordWrap: 'wordWrapColumn',\n\t\t\t\twordWrapColumn: 8,\n\t\t\t\tstickyTabStops: true,\n\t\t\t},\n\t\t\t(editor, viewModel) => {\n\t\t\t\tviewModel.setSelections('test', [\n\t\t\t\t\tnew Selection(1, 9, 1, 9)\n\t\t\t\t]);\n\t\t\t\tmoveRight(editor, viewModel, false);\n\t\t\t\tassertCursor(viewModel, [\n\t\t\t\t\tnew Selection(1, 10, 1, 10),\n\t\t\t\t]);\n\n\t\t\t\tmoveLeft(editor, viewModel, false);\n\t\t\t\tassertCursor(viewModel, [\n\t\t\t\t\tnew Selection(1, 9, 1, 9),\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Cursor honors insertSpaces configuration on new line', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'    \\tMy First Line\\t ',\n\t\t\t\t'\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'1'\n\t\t\t]\n\t\t}, (editor, model, viewModel) => {\n\t\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, { position: new Position(1, 21), source: 'keyboard' });\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    \\tMy First Line\\t ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '        ');\n\t\t});\n\t});\n\n\ttest('Cursor honors insertSpaces configuration on tab', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'    \\tMy First Line\\t ',\n\t\t\t\t'My Second Line123',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'1'\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\ttabSize: 13,\n\t\t\t\tindentSize: 13,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\t// Tab on column 1\n\t\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, { position: new Position(2, 1) });\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), '             My Second Line123');\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\n\t\t\t// Tab on column 2\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My Second Line123');\n\t\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, { position: new Position(2, 2) });\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'M            y Second Line123');\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\n\t\t\t// Tab on column 3\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My Second Line123');\n\t\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, { position: new Position(2, 3) });\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My            Second Line123');\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\n\t\t\t// Tab on column 4\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My Second Line123');\n\t\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, { position: new Position(2, 4) });\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My           Second Line123');\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\n\t\t\t// Tab on column 5\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My Second Line123');\n\t\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, { position: new Position(2, 5) });\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My S         econd Line123');\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\n\t\t\t// Tab on column 5\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My Second Line123');\n\t\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, { position: new Position(2, 5) });\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My S         econd Line123');\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\n\t\t\t// Tab on column 13\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My Second Line123');\n\t\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, { position: new Position(2, 13) });\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My Second Li ne123');\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\n\t\t\t// Tab on column 14\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My Second Line123');\n\t\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(viewModel, { position: new Position(2, 14) });\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'My Second Lin             e123');\n\t\t});\n\t});\n\n\ttest('Enter auto-indents with insertSpaces setting 1', () => {\n\t\tconst languageId = setupOnEnterLanguage(IndentAction.Indent);\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\thello'\n\t\t\t],\n\t\t\tlanguageId: languageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 7, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 7, 1, 7));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.CRLF), '\\thello\\r\\n        ');\n\t\t});\n\t});\n\n\ttest('Enter auto-indents with insertSpaces setting 2', () => {\n\t\tconst languageId = setupOnEnterLanguage(IndentAction.None);\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\thello'\n\t\t\t],\n\t\t\tlanguageId: languageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 7, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 7, 1, 7));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.CRLF), '\\thello\\r\\n    ');\n\t\t});\n\t});\n\n\ttest('Enter auto-indents with insertSpaces setting 3', () => {\n\t\tconst languageId = setupOnEnterLanguage(IndentAction.IndentOutdent);\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\thell()'\n\t\t\t],\n\t\t\tlanguageId: languageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 7, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 7, 1, 7));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.CRLF), '\\thell(\\r\\n        \\r\\n    )');\n\t\t});\n\t});\n\n\ttest('issue #148256: Pressing Enter creates line with bad indent with insertSpaces: true', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  \\t'\n\t\t\t],\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 4, false);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '  \\t\\n    ');\n\t\t});\n\t});\n\n\ttest('issue #148256: Pressing Enter creates line with bad indent with insertSpaces: false', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  \\t'\n\t\t\t]\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmodel.updateOptions({\n\t\t\t\tinsertSpaces: false\n\t\t\t});\n\t\t\tmoveTo(editor, viewModel, 1, 4, false);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '  \\t\\n\\t');\n\t\t});\n\t});\n\n\ttest('removeAutoWhitespace off', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'    some  line abc  '\n\t\t\t],\n\t\t\tmodelOpts: {\n\t\t\t\ttrimAutoWhitespace: false\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\t// Move cursor to the end, verify that we do not trim whitespaces if line has values\n\t\t\tmoveTo(editor, viewModel, 1, model.getLineContent(1).length + 1);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    some  line abc  ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '    ');\n\n\t\t\t// Try to enter again, we should trimmed previous line\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    some  line abc  ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(3), '    ');\n\t\t});\n\t});\n\n\ttest('removeAutoWhitespace on: removes only whitespace the cursor added 1', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'    '\n\t\t\t]\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, model.getLineContent(1).length + 1);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '    ');\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '');\n\t\t\tassert.strictEqual(model.getLineContent(3), '    ');\n\t\t});\n\t});\n\n\ttest('issue #115033: indent and appendText', () => {\n\t\tconst languageId = 'onEnterMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tonEnterRules: [{\n\t\t\t\tbeforeText: /.*/,\n\t\t\t\taction: {\n\t\t\t\t\tindentAction: IndentAction.Indent,\n\t\t\t\t\tappendText: 'x'\n\t\t\t\t}\n\t\t\t}]\n\t\t}));\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'text'\n\t\t\t],\n\t\t\tlanguageId: languageId,\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 1, 5);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'text');\n\t\t\tassert.strictEqual(model.getLineContent(2), '    x');\n\t\t\tassertCursor(viewModel, new Position(2, 6));\n\t\t});\n\t});\n\n\ttest('issue #6862: Editor removes auto inserted indentation when formatting on type', () => {\n\t\tconst languageId = setupOnEnterLanguage(IndentAction.IndentOutdent);\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'function foo (params: string) {}'\n\t\t\t],\n\t\t\tlanguageId: languageId,\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 1, 32);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'function foo (params: string) {');\n\t\t\tassert.strictEqual(model.getLineContent(2), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(3), '}');\n\n\t\t\tclass TestCommand implements ICommand {\n\n\t\t\t\tprivate _selectionId: string | null = null;\n\n\t\t\t\tpublic getEditOperations(model: ITextModel, builder: IEditOperationBuilder): void {\n\t\t\t\t\tbuilder.addEditOperation(new Range(1, 13, 1, 14), '');\n\t\t\t\t\tthis._selectionId = builder.trackSelection(viewModel.getSelection());\n\t\t\t\t}\n\n\t\t\t\tpublic computeCursorState(model: ITextModel, helper: ICursorStateComputerData): Selection {\n\t\t\t\t\treturn helper.getTrackedSelection(this._selectionId!);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tviewModel.executeCommand(new TestCommand(), 'autoFormat');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'function foo(params: string) {');\n\t\t\tassert.strictEqual(model.getLineContent(2), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(3), '}');\n\t\t});\n\t});\n\n\ttest('removeAutoWhitespace on: removes only whitespace the cursor added 2', () => {\n\t\tconst languageId = 'testLang';\n\t\tconst registration = languageService.registerLanguage({ id: languageId });\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'    if (a) {',\n\t\t\t\t'        ',\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\t'    }'\n\t\t\t].join('\\n'),\n\t\t\tlanguageId\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 3, 1);\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    if (a) {');\n\t\t\tassert.strictEqual(model.getLineContent(2), '        ');\n\t\t\tassert.strictEqual(model.getLineContent(3), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(4), '');\n\t\t\tassert.strictEqual(model.getLineContent(5), '    }');\n\n\t\t\tmoveTo(editor, viewModel, 4, 1);\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    if (a) {');\n\t\t\tassert.strictEqual(model.getLineContent(2), '        ');\n\t\t\tassert.strictEqual(model.getLineContent(3), '');\n\t\t\tassert.strictEqual(model.getLineContent(4), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(5), '    }');\n\n\t\t\tmoveTo(editor, viewModel, 5, model.getLineMaxColumn(5));\n\t\t\tviewModel.type('something', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    if (a) {');\n\t\t\tassert.strictEqual(model.getLineContent(2), '        ');\n\t\t\tassert.strictEqual(model.getLineContent(3), '');\n\t\t\tassert.strictEqual(model.getLineContent(4), '');\n\t\t\tassert.strictEqual(model.getLineContent(5), '    }something');\n\t\t});\n\n\t\tregistration.dispose();\n\t});\n\n\ttest('removeAutoWhitespace on: test 1', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'    some  line abc  '\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\n\t\t\t// Move cursor to the end, verify that we do not trim whitespaces if line has values\n\t\t\tmoveTo(editor, viewModel, 1, model.getLineContent(1).length + 1);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    some  line abc  ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '    ');\n\n\t\t\t// Try to enter again, we should trimmed previous line\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    some  line abc  ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '');\n\t\t\tassert.strictEqual(model.getLineContent(3), '    ');\n\n\t\t\t// More whitespaces\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    some  line abc  ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '');\n\t\t\tassert.strictEqual(model.getLineContent(3), '        ');\n\n\t\t\t// Enter and verify that trimmed again\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    some  line abc  ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '');\n\t\t\tassert.strictEqual(model.getLineContent(3), '');\n\t\t\tassert.strictEqual(model.getLineContent(4), '        ');\n\n\t\t\t// Trimmed if we will keep only text\n\t\t\tmoveTo(editor, viewModel, 1, 5);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '    some  line abc  ');\n\t\t\tassert.strictEqual(model.getLineContent(3), '');\n\t\t\tassert.strictEqual(model.getLineContent(4), '');\n\t\t\tassert.strictEqual(model.getLineContent(5), '');\n\n\t\t\t// Trimmed if we will keep only text by selection\n\t\t\tmoveTo(editor, viewModel, 2, 5);\n\t\t\tmoveTo(editor, viewModel, 3, 1, true);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(2), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(3), '    ');\n\t\t\tassert.strictEqual(model.getLineContent(4), '');\n\t\t\tassert.strictEqual(model.getLineContent(5), '');\n\t\t});\n\t});\n\n\ttest('issue #15118: remove auto whitespace when pasting entire line', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'    function f() {',\n\t\t\t\t'        // I\\'m gonna copy this line',\n\t\t\t\t'        return 3;',\n\t\t\t\t'    }',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 3, model.getLineMaxColumn(3));\n\t\t\tviewModel.type('\\n', 'keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'    function f() {',\n\t\t\t\t'        // I\\'m gonna copy this line',\n\t\t\t\t'        return 3;',\n\t\t\t\t'        ',\n\t\t\t\t'    }',\n\t\t\t].join('\\n'));\n\t\t\tassertCursor(viewModel, new Position(4, model.getLineMaxColumn(4)));\n\n\t\t\tviewModel.paste('        // I\\'m gonna copy this line\\n', true);\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'    function f() {',\n\t\t\t\t'        // I\\'m gonna copy this line',\n\t\t\t\t'        return 3;',\n\t\t\t\t'        // I\\'m gonna copy this line',\n\t\t\t\t'',\n\t\t\t\t'    }',\n\t\t\t].join('\\n'));\n\t\t\tassertCursor(viewModel, new Position(5, 1));\n\t\t});\n\t});\n\n\ttest('issue #40695: maintain cursor position when copying lines using ctrl+c, ctrl+v', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'    function f() {',\n\t\t\t\t'        // I\\'m gonna copy this line',\n\t\t\t\t'        // Another line',\n\t\t\t\t'        return 3;',\n\t\t\t\t'    }',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\n\t\t\teditor.setSelections([new Selection(4, 10, 4, 10)]);\n\t\t\tviewModel.paste('        // I\\'m gonna copy this line\\n', true);\n\n\t\t\tassert.strictEqual(model.getValue(), [\n\t\t\t\t'    function f() {',\n\t\t\t\t'        // I\\'m gonna copy this line',\n\t\t\t\t'        // Another line',\n\t\t\t\t'        // I\\'m gonna copy this line',\n\t\t\t\t'        return 3;',\n\t\t\t\t'    }',\n\t\t\t].join('\\n'));\n\t\t\tassertCursor(viewModel, new Position(5, 10));\n\t\t});\n\t});\n\n\ttest('UseTabStops is off', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'    x',\n\t\t\t\t'        a    ',\n\t\t\t\t'    '\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { useTabStops: false }, (editor, viewModel) => {\n\t\t\t// DeleteLeft removes just one whitespace\n\t\t\tmoveTo(editor, viewModel, 2, 9);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), '       a    ');\n\t\t});\n\t});\n\n\ttest('Backspace removes whitespaces with tab size', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t' \\t \\t     x',\n\t\t\t\t'        a    ',\n\t\t\t\t'    '\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, { useTabStops: true }, (editor, viewModel) => {\n\t\t\t// DeleteLeft does not remove tab size, because some text exists before\n\t\t\tmoveTo(editor, viewModel, 2, model.getLineContent(2).length + 1);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), '        a   ');\n\n\t\t\t// DeleteLeft removes tab size = 4\n\t\t\tmoveTo(editor, viewModel, 2, 9);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), '    a   ');\n\n\t\t\t// DeleteLeft removes tab size = 4\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'a   ');\n\n\t\t\t// Undo DeleteLeft - get us back to original indentation\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), '        a   ');\n\n\t\t\t// Nothing is broken when cursor is in (1,1)\n\t\t\tmoveTo(editor, viewModel, 1, 1);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), ' \\t \\t     x');\n\n\t\t\t// DeleteLeft stops at tab stops even in mixed whitespace case\n\t\t\tmoveTo(editor, viewModel, 1, 10);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), ' \\t \\t    x');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), ' \\t \\tx');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), ' \\tx');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x');\n\n\t\t\t// DeleteLeft on last line\n\t\t\tmoveTo(editor, viewModel, 3, model.getLineContent(3).length + 1);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(3), '');\n\n\t\t\t// DeleteLeft with removing new line symbol\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'x\\n        a   ');\n\n\t\t\t// In case of selection DeleteLeft only deletes selected text\n\t\t\tmoveTo(editor, viewModel, 2, 3);\n\t\t\tmoveTo(editor, viewModel, 2, 4, true);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), '       a   ');\n\t\t});\n\t});\n\n\ttest('PR #5423: Auto indent + undo + redo is funky', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t''\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n', 'assert1');\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\t', 'assert2');\n\n\t\t\tviewModel.type('y', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\ty', 'assert2');\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\ty\\n\\t', 'assert3');\n\n\t\t\tviewModel.type('x');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\ty\\n\\tx', 'assert4');\n\n\t\t\tCoreNavigationCommands.CursorLeft.runCoreEditorCommand(viewModel, {});\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\ty\\n\\tx', 'assert5');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\ty\\nx', 'assert6');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\tyx', 'assert7');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\tx', 'assert8');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\nx', 'assert9');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'x', 'assert10');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\nx', 'assert11');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\ty\\nx', 'assert12');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\ty\\n\\tx', 'assert13');\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\n\\ty\\nx', 'assert14');\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '\\nx', 'assert15');\n\n\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'x', 'assert16');\n\t\t});\n\t});\n\n\ttest('issue #90973: Undo brings back model alternative version', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t''\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tconst beforeVersion = model.getVersionId();\n\t\t\tconst beforeAltVersion = model.getAlternativeVersionId();\n\t\t\tviewModel.type('Hello', 'keyboard');\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tconst afterVersion = model.getVersionId();\n\t\t\tconst afterAltVersion = model.getAlternativeVersionId();\n\n\t\t\tassert.notStrictEqual(beforeVersion, afterVersion);\n\t\t\tassert.strictEqual(beforeAltVersion, afterAltVersion);\n\t\t});\n\t});\n\n\ttest('Enter honors increaseIndentPattern', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\tif (true) {'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false },\n\t\t\teditorOpts: { autoIndent: 'full' }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 12, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 12, 1, 12));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertCursor(viewModel, new Selection(2, 2, 2, 2));\n\n\t\t\tmoveTo(editor, viewModel, 3, 13, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 13, 3, 13));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 3, 4, 3));\n\t\t});\n\t});\n\n\ttest('Type honors decreaseIndentPattern', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\t'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\teditorOpts: { autoIndent: 'full' }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 2, false);\n\t\t\tassertCursor(viewModel, new Selection(2, 2, 2, 2));\n\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(2, 2, 2, 2));\n\t\t\tassert.strictEqual(model.getLineContent(2), '}', '001');\n\t\t});\n\t});\n\n\ttest('Enter honors unIndentedLinePattern', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\t\\t\\treturn true'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false },\n\t\t\teditorOpts: { autoIndent: 'full' }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 15, false);\n\t\t\tassertCursor(viewModel, new Selection(2, 15, 2, 15));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(3, 2, 3, 2));\n\t\t});\n\t});\n\n\ttest('Enter honors indentNextLinePattern', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true)',\n\t\t\t\t'\\treturn true;',\n\t\t\t\t'if (true)',\n\t\t\t\t'\\t\\t\\t\\treturn true'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false },\n\t\t\teditorOpts: { autoIndent: 'full' }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 14, false);\n\t\t\tassertCursor(viewModel, new Selection(2, 14, 2, 14));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertCursor(viewModel, new Selection(3, 1, 3, 1));\n\n\t\t\tmoveTo(editor, viewModel, 5, 16, false);\n\t\t\tassertCursor(viewModel, new Selection(5, 16, 5, 16));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(6, 2, 6, 2));\n\t\t});\n\t});\n\n\ttest('Enter honors indentNextLinePattern 2', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'if (true)',\n\t\t\t\t'\\tif (true)'\n\t\t\t].join('\\n'),\n\t\t\tindentRulesLanguageId,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, { autoIndent: 'full' }, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 11, false);\n\t\t\tassertCursor(viewModel, new Selection(2, 11, 2, 11));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertCursor(viewModel, new Selection(3, 3, 3, 3));\n\n\t\t\tviewModel.type('console.log();', 'keyboard');\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 1, 4, 1));\n\t\t});\n\t});\n\n\ttest('Enter honors intential indent', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\tif (true) {',\n\t\t\t\t'return true;',\n\t\t\t\t'}}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\teditorOpts: { autoIndent: 'full' }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 13, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 13, 3, 13));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 1, 4, 1));\n\t\t\tassert.strictEqual(model.getLineContent(3), 'return true;', '001');\n\t\t});\n\t});\n\n\ttest('Enter supports selection 1', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\tif (true) {',\n\t\t\t\t'\\t\\treturn true;',\n\t\t\t\t'\\t}a}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 3, false);\n\t\t\tmoveTo(editor, viewModel, 4, 4, true);\n\t\t\tassertCursor(viewModel, new Selection(4, 3, 4, 4));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(5, 1, 5, 1));\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t}', '001');\n\t\t});\n\t});\n\n\ttest('Enter supports selection 2', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\tif (true) {'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 12, false);\n\t\t\tmoveTo(editor, viewModel, 2, 13, true);\n\t\t\tassertCursor(viewModel, new Selection(2, 12, 2, 13));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(3, 3, 3, 3));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 3, 4, 3));\n\t\t});\n\t});\n\n\ttest('Enter honors tabSize and insertSpaces 1', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\tif (true) {'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 12, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 12, 1, 12));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(2, 5, 2, 5));\n\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\n\t\t\tmoveTo(editor, viewModel, 3, 13, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 13, 3, 13));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 9, 4, 9));\n\t\t});\n\t});\n\n\ttest('Enter honors tabSize and insertSpaces 2', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'    if (true) {'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 12, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 12, 1, 12));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertCursor(viewModel, new Selection(2, 5, 2, 5));\n\n\t\t\tmoveTo(editor, viewModel, 3, 16, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 16, 3, 16));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(3), '    if (true) {');\n\t\t\tassertCursor(viewModel, new Selection(4, 9, 4, 9));\n\t\t});\n\t});\n\n\ttest('Enter honors tabSize and insertSpaces 3', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'    if (true) {'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 12, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 12, 1, 12));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertCursor(viewModel, new Selection(2, 2, 2, 2));\n\n\t\t\tmoveTo(editor, viewModel, 3, 16, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 16, 3, 16));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(3), '    if (true) {');\n\t\t\tassertCursor(viewModel, new Selection(4, 3, 4, 3));\n\t\t});\n\t});\n\n\ttest('Enter supports intentional indentation', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\tif (true) {',\n\t\t\t\t'\\t\\tswitch(true) {',\n\t\t\t\t'\\t\\t\\tcase true:',\n\t\t\t\t'\\t\\t\\t\\tbreak;',\n\t\t\t\t'\\t\\t}',\n\t\t\t\t'\\t}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false },\n\t\t\teditorOpts: { autoIndent: 'full' }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 5, 4, false);\n\t\t\tassertCursor(viewModel, new Selection(5, 4, 5, 4));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(5), '\\t\\t}');\n\t\t\tassertCursor(viewModel, new Selection(6, 3, 6, 3));\n\t\t});\n\t});\n\n\ttest('Enter should not adjust cursor position when press enter in the middle of a line 1', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\tif (true) {',\n\t\t\t\t'\\t\\treturn true;',\n\t\t\t\t'\\t}a}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 9, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 9, 3, 9));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 3, 4, 3));\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t\\t true;', '001');\n\t\t});\n\t});\n\n\ttest('Enter should not adjust cursor position when press enter in the middle of a line 2', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\tif (true) {',\n\t\t\t\t'\\t\\treturn true;',\n\t\t\t\t'\\t}a}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 3, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 3, 3, 3));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 3, 4, 3));\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t\\treturn true;', '001');\n\t\t});\n\t});\n\n\ttest('Enter should not adjust cursor position when press enter in the middle of a line 3', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'  if (true) {',\n\t\t\t\t'    return true;',\n\t\t\t\t'  }a}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 11, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 11, 3, 11));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 5, 4, 5));\n\t\t\tassert.strictEqual(model.getLineContent(4), '     true;', '001');\n\t\t});\n\t});\n\n\ttest('Enter should adjust cursor position when press enter in the middle of leading whitespaces 1', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\tif (true) {',\n\t\t\t\t'\\t\\treturn true;',\n\t\t\t\t'\\t}a}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 2, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 2, 3, 2));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 2, 4, 2));\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t\\treturn true;', '001');\n\n\t\t\tmoveTo(editor, viewModel, 4, 1, false);\n\t\t\tassertCursor(viewModel, new Selection(4, 1, 4, 1));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(5, 1, 5, 1));\n\t\t\tassert.strictEqual(model.getLineContent(5), '\\t\\treturn true;', '002');\n\t\t});\n\t});\n\n\ttest('Enter should adjust cursor position when press enter in the middle of leading whitespaces 2', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\tif (true) {',\n\t\t\t\t'\\t\\tif (true) {',\n\t\t\t\t'\\t    \\treturn true;',\n\t\t\t\t'\\t\\t}a}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { insertSpaces: false }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 4, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 4, 3, 4));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 3, 4, 3));\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t\\t\\treturn true;', '001');\n\n\t\t\tmoveTo(editor, viewModel, 4, 1, false);\n\t\t\tassertCursor(viewModel, new Selection(4, 1, 4, 1));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(5, 1, 5, 1));\n\t\t\tassert.strictEqual(model.getLineContent(5), '\\t\\t\\treturn true;', '002');\n\t\t});\n\t});\n\n\ttest('Enter should adjust cursor position when press enter in the middle of leading whitespaces 3', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'  if (true) {',\n\t\t\t\t'    return true;',\n\t\t\t\t'}a}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 2, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 2, 3, 2));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 2, 4, 2));\n\t\t\tassert.strictEqual(model.getLineContent(4), '    return true;', '001');\n\n\t\t\tmoveTo(editor, viewModel, 4, 3, false);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(5, 3, 5, 3));\n\t\t\tassert.strictEqual(model.getLineContent(5), '    return true;', '002');\n\t\t});\n\t});\n\n\ttest('Enter should adjust cursor position when press enter in the middle of leading whitespaces 4', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'  if (true) {',\n\t\t\t\t'\\t  return true;',\n\t\t\t\t'}a}',\n\t\t\t\t'',\n\t\t\t\t'if (true) {',\n\t\t\t\t'  if (true) {',\n\t\t\t\t'\\t  return true;',\n\t\t\t\t'}a}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: {\n\t\t\t\ttabSize: 2,\n\t\t\t\tindentSize: 2\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 3, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 3, 3, 3));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 4, 4, 4));\n\t\t\tassert.strictEqual(model.getLineContent(4), '    return true;', '001');\n\n\t\t\tmoveTo(editor, viewModel, 9, 4, false);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(10, 5, 10, 5));\n\t\t\tassert.strictEqual(model.getLineContent(10), '    return true;', '001');\n\t\t});\n\t});\n\n\ttest('Enter should adjust cursor position when press enter in the middle of leading whitespaces 5', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'  if (true) {',\n\t\t\t\t'    return true;',\n\t\t\t\t'    return true;',\n\t\t\t\t''\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\tmodelOpts: { tabSize: 2 }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 5, false);\n\t\t\tmoveTo(editor, viewModel, 4, 3, true);\n\t\t\tassertCursor(viewModel, new Selection(3, 5, 4, 3));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 3, 4, 3));\n\t\t\tassert.strictEqual(model.getLineContent(4), '    return true;', '001');\n\t\t});\n\t});\n\n\ttest('issue microsoft/monaco-editor#108 part 1/2: Auto indentation on Enter with selection is half broken', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'function baz() {',\n\t\t\t\t'\\tvar x = 1;',\n\t\t\t\t'\\t\\t\\t\\t\\t\\t\\treturn x;',\n\t\t\t\t'}'\n\t\t\t],\n\t\t\tmodelOpts: {\n\t\t\t\tinsertSpaces: false,\n\t\t\t},\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 8, false);\n\t\t\tmoveTo(editor, viewModel, 2, 12, true);\n\t\t\tassertCursor(viewModel, new Selection(3, 8, 2, 12));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(3), '\\treturn x;');\n\t\t\tassertCursor(viewModel, new Position(3, 2));\n\t\t});\n\t});\n\n\ttest('issue microsoft/monaco-editor#108 part 2/2: Auto indentation on Enter with selection is half broken', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'function baz() {',\n\t\t\t\t'\\tvar x = 1;',\n\t\t\t\t'\\t\\t\\t\\t\\t\\t\\treturn x;',\n\t\t\t\t'}'\n\t\t\t],\n\t\t\tmodelOpts: {\n\t\t\t\tinsertSpaces: false,\n\t\t\t},\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 12, false);\n\t\t\tmoveTo(editor, viewModel, 3, 8, true);\n\t\t\tassertCursor(viewModel, new Selection(2, 12, 3, 8));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(3), '\\treturn x;');\n\t\t\tassertCursor(viewModel, new Position(3, 2));\n\t\t});\n\t});\n\n\ttest('onEnter works if there are no indentation rules', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'<?',\n\t\t\t\t'\\tif (true) {',\n\t\t\t\t'\\t\\techo $hi;',\n\t\t\t\t'\\t\\techo $bye;',\n\t\t\t\t'\\t}',\n\t\t\t\t'?>'\n\t\t\t],\n\t\t\tmodelOpts: { insertSpaces: false }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 5, 3, false);\n\t\t\tassertCursor(viewModel, new Selection(5, 3, 5, 3));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(6), '\\t');\n\t\t\tassertCursor(viewModel, new Selection(6, 2, 6, 2));\n\t\t\tassert.strictEqual(model.getLineContent(5), '\\t}');\n\t\t});\n\t});\n\n\ttest('onEnter works if there are no indentation rules 2', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\tif (5)',\n\t\t\t\t'\t\treturn 5;',\n\t\t\t\t'\t'\n\t\t\t],\n\t\t\tmodelOpts: { insertSpaces: false }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 2, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 2, 3, 2));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(4, 2, 4, 2));\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t');\n\t\t});\n\t});\n\n\ttest('bug #16543: Tab should indent to correct indentation spot immediately', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'function baz() {',\n\t\t\t\t'\\tfunction hello() { // something here',\n\t\t\t\t'\\t',\n\t\t\t\t'',\n\t\t\t\t'\\t}',\n\t\t\t\t'}'\n\t\t\t].join('\\n'),\n\t\t\tindentRulesLanguageId,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 1, false);\n\t\t\tassertCursor(viewModel, new Selection(4, 1, 4, 1));\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t\\t');\n\t\t});\n\t});\n\n\n\ttest('bug #2938 (1): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'\\tfunction baz() {',\n\t\t\t\t'\\t\\tfunction hello() { // something here',\n\t\t\t\t'\\t\\t',\n\t\t\t\t'\\t',\n\t\t\t\t'\\t\\t}',\n\t\t\t\t'\\t}'\n\t\t\t].join('\\n'),\n\t\t\tindentRulesLanguageId,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 2, false);\n\t\t\tassertCursor(viewModel, new Selection(4, 2, 4, 2));\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t\\t\\t');\n\t\t});\n\t});\n\n\n\ttest('bug #2938 (2): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'\\tfunction baz() {',\n\t\t\t\t'\\t\\tfunction hello() { // something here',\n\t\t\t\t'\\t\\t',\n\t\t\t\t'    ',\n\t\t\t\t'\\t\\t}',\n\t\t\t\t'\\t}'\n\t\t\t].join('\\n'),\n\t\t\tindentRulesLanguageId,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 1, false);\n\t\t\tassertCursor(viewModel, new Selection(4, 1, 4, 1));\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t\\t\\t');\n\t\t});\n\t});\n\n\ttest('bug #2938 (3): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'\\tfunction baz() {',\n\t\t\t\t'\\t\\tfunction hello() { // something here',\n\t\t\t\t'\\t\\t',\n\t\t\t\t'\\t\\t\\t',\n\t\t\t\t'\\t\\t}',\n\t\t\t\t'\\t}'\n\t\t\t].join('\\n'),\n\t\t\tindentRulesLanguageId,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 3, false);\n\t\t\tassertCursor(viewModel, new Selection(4, 3, 4, 3));\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t\\t\\t\\t');\n\t\t});\n\t});\n\n\ttest('bug #2938 (4): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'\\tfunction baz() {',\n\t\t\t\t'\\t\\tfunction hello() { // something here',\n\t\t\t\t'\\t\\t',\n\t\t\t\t'\\t\\t\\t\\t',\n\t\t\t\t'\\t\\t}',\n\t\t\t\t'\\t}'\n\t\t\t].join('\\n'),\n\t\t\tindentRulesLanguageId,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 4, false);\n\t\t\tassertCursor(viewModel, new Selection(4, 4, 4, 4));\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(4), '\\t\\t\\t\\t\\t');\n\t\t});\n\t});\n\n\ttest('bug #31015: When pressing Tab on lines and Enter rules are avail, indent straight to the right spotTab', () => {\n\t\tconst onEnterLanguageId = setupOnEnterLanguage(IndentAction.Indent);\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'    if (a) {',\n\t\t\t\t'        ',\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\t'    }'\n\t\t\t].join('\\n'),\n\t\t\tonEnterLanguageId\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\n\t\t\tmoveTo(editor, viewModel, 3, 1);\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    if (a) {');\n\t\t\tassert.strictEqual(model.getLineContent(2), '        ');\n\t\t\tassert.strictEqual(model.getLineContent(3), '        ');\n\t\t\tassert.strictEqual(model.getLineContent(4), '');\n\t\t\tassert.strictEqual(model.getLineContent(5), '    }');\n\t\t});\n\t});\n\n\ttest('type honors indentation rules: ruby keywords', () => {\n\t\tconst rubyLanguageId = setupIndentRulesLanguage('ruby', {\n\t\t\tincreaseIndentPattern: /^\\s*((begin|class|def|else|elsif|ensure|for|if|module|rescue|unless|until|when|while)|(.*\\sdo\\b))\\b[^\\{;]*$/,\n\t\t\tdecreaseIndentPattern: /^\\s*([}\\]]([,)]?\\s*(#|$)|\\.[a-zA-Z_]\\w*\\b)|(end|rescue|ensure|else|elsif|when)\\b)/\n\t\t});\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'class Greeter',\n\t\t\t\t'  def initialize(name)',\n\t\t\t\t'    @name = name',\n\t\t\t\t'    en'\n\t\t\t].join('\\n'),\n\t\t\trubyLanguageId\n\t\t);\n\n\t\twithTestCodeEditor(model, { autoIndent: 'full' }, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 7, false);\n\t\t\tassertCursor(viewModel, new Selection(4, 7, 4, 7));\n\n\t\t\tviewModel.type('d', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(4), '  end');\n\t\t});\n\t});\n\n\ttest('Auto indent on type: increaseIndentPattern has higher priority than decreaseIndent when inheriting', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\tif (true) {',\n\t\t\t\t'\\t\\tconsole.log();',\n\t\t\t\t'\\t} else if {',\n\t\t\t\t'\\t\\tconsole.log()',\n\t\t\t\t'\\t}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 5, 3, false);\n\t\t\tassertCursor(viewModel, new Selection(5, 3, 5, 3));\n\n\t\t\tviewModel.type('e', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(5, 4, 5, 4));\n\t\t\tassert.strictEqual(model.getLineContent(5), '\\t}e', 'This line should not decrease indent');\n\t\t});\n\t});\n\n\ttest('type honors users indentation adjustment', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\tif (true ||',\n\t\t\t\t'\\t ) {',\n\t\t\t\t'\\t}',\n\t\t\t\t'if (true ||',\n\t\t\t\t') {',\n\t\t\t\t'}'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 3, false);\n\t\t\tassertCursor(viewModel, new Selection(2, 3, 2, 3));\n\n\t\t\tviewModel.type(' ', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(2, 4, 2, 4));\n\t\t\tassert.strictEqual(model.getLineContent(2), '\\t  ) {', 'This line should not decrease indent');\n\t\t});\n\t});\n\n\ttest('bug 29972: if a line is line comment, open bracket should not indent next line', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'if (true) {',\n\t\t\t\t'\\t// {',\n\t\t\t\t'\\t\\t'\n\t\t\t],\n\t\t\tlanguageId: indentRulesLanguageId,\n\t\t\teditorOpts: { autoIndent: 'full' }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 3, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 3, 3, 3));\n\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassertCursor(viewModel, new Selection(3, 2, 3, 2));\n\t\t\tassert.strictEqual(model.getLineContent(3), '}');\n\t\t});\n\t});\n\n\n\ttest('issue #38261: TAB key results in bizarre indentation in C++ mode ', () => {\n\t\tconst languageId = 'indentRulesMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')']\n\t\t\t],\n\t\t\tindentationRules: {\n\t\t\t\tincreaseIndentPattern: new RegExp(\"(^.*\\\\{[^}]*$)\"),\n\t\t\t\tdecreaseIndentPattern: new RegExp(\"^\\\\s*\\\\}\")\n\t\t\t}\n\t\t}));\n\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'int main() {',\n\t\t\t\t'  return 0;',\n\t\t\t\t'}',\n\t\t\t\t'',\n\t\t\t\t'bool Foo::bar(const string &a,',\n\t\t\t\t'              const string &b) {',\n\t\t\t\t'  foo();',\n\t\t\t\t'',\n\t\t\t\t')',\n\t\t\t].join('\\n'),\n\t\t\tlanguageId,\n\t\t\t{\n\t\t\t\ttabSize: 2,\n\t\t\t\tindentSize: 2\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, { autoIndent: 'advanced' }, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 8, 1, false);\n\t\t\tassertCursor(viewModel, new Selection(8, 1, 8, 1));\n\n\t\t\tCoreEditingCommands.Tab.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(),\n\t\t\t\t[\n\t\t\t\t\t'int main() {',\n\t\t\t\t\t'  return 0;',\n\t\t\t\t\t'}',\n\t\t\t\t\t'',\n\t\t\t\t\t'bool Foo::bar(const string &a,',\n\t\t\t\t\t'              const string &b) {',\n\t\t\t\t\t'  foo();',\n\t\t\t\t\t'  ',\n\t\t\t\t\t')',\n\t\t\t\t].join('\\n')\n\t\t\t);\n\t\t\tassert.deepStrictEqual(viewModel.getSelection(), new Selection(8, 3, 8, 3));\n\t\t});\n\t});\n\n\ttest('issue #57197: indent rules regex should be stateless', () => {\n\t\tconst languageId = setupIndentRulesLanguage('lang', {\n\t\t\tdecreaseIndentPattern: /^\\s*}$/gm,\n\t\t\tincreaseIndentPattern: /^(?![^\\S\\n]*(?!--|\u2013\u2013|\u2014\u2014)(?:[-\u274D\u2751\u25A0\u2B1C\u25A1\u2610\u25AA\u25AB\u2013\u2014\u2261\u2192\u203A\u2718xX\u2714\u2713\u2611+]|\\[[ xX+-]?\\])\\s[^\\n]*)[^\\S\\n]*(.+:)[^\\S\\n]*(?:(?=@[^\\s*~(]+(?::\\/\\/[^\\s*~(:]+)?(?:\\([^)]*\\))?)|$)/gm,\n\t\t});\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'Project:',\n\t\t\t],\n\t\t\tlanguageId: languageId,\n\t\t\tmodelOpts: { insertSpaces: false },\n\t\t\teditorOpts: { autoIndent: 'full' }\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 9, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 9, 1, 9));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertCursor(viewModel, new Selection(2, 2, 2, 2));\n\n\t\t\tmoveTo(editor, viewModel, 1, 9, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 9, 1, 9));\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertCursor(viewModel, new Selection(2, 2, 2, 2));\n\t\t});\n\t});\n\n\ttest('typing in json', () => {\n\t\tconst languageId = 'indentRulesMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')']\n\t\t\t],\n\t\t\tindentationRules: {\n\t\t\t\tincreaseIndentPattern: new RegExp(\"({+(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"}]*$))|(\\\\[+(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"\\\\]]*$))\"),\n\t\t\t\tdecreaseIndentPattern: new RegExp(\"^\\\\s*[}\\\\]],?\\\\s*$\")\n\t\t\t}\n\t\t}));\n\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'{',\n\t\t\t\t'  \"scripts: {\"',\n\t\t\t\t'    \"watch\": \"a {\"',\n\t\t\t\t'    \"build{\": \"b\"',\n\t\t\t\t'    \"tasks\": []',\n\t\t\t\t'    \"tasks\": [\"a\"]',\n\t\t\t\t'  \"}\"',\n\t\t\t\t'\"}\"'\n\t\t\t].join('\\n'),\n\t\t\tlanguageId,\n\t\t\t{\n\t\t\t\ttabSize: 2,\n\t\t\t\tindentSize: 2\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, { autoIndent: 'full' }, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 19, false);\n\t\t\tassertCursor(viewModel, new Selection(3, 19, 3, 19));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(4), '    ');\n\n\t\t\tmoveTo(editor, viewModel, 5, 18, false);\n\t\t\tassertCursor(viewModel, new Selection(5, 18, 5, 18));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(6), '    ');\n\n\t\t\tmoveTo(editor, viewModel, 7, 15, false);\n\t\t\tassertCursor(viewModel, new Selection(7, 15, 7, 15));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(8), '      ');\n\t\t\tassert.deepStrictEqual(model.getLineContent(9), '    ]');\n\n\t\t\tmoveTo(editor, viewModel, 10, 18, false);\n\t\t\tassertCursor(viewModel, new Selection(10, 18, 10, 18));\n\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(11), '    ]');\n\t\t});\n\t});\n\n\ttest('issue #111128: Multicursor `Enter` issue with indentation', () => {\n\t\tconst model = createTextModel('    let a, b, c;', indentRulesLanguageId, { detectIndentation: false, insertSpaces: false, tabSize: 4 });\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 11, 1, 11),\n\t\t\t\tnew Selection(1, 14, 1, 14),\n\t\t\t]);\n\t\t\tviewModel.type('\\n', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '    let a,\\n\\t b,\\n\\t c;');\n\t\t});\n\t});\n\n\ttest('issue #122714: tabSize=1 prevent typing a string matching decreaseIndentPattern in an empty file', () => {\n\t\tconst latextLanguageId = setupIndentRulesLanguage('latex', {\n\t\t\tincreaseIndentPattern: new RegExp('\\\\\\\\begin{(?!document)([^}]*)}(?!.*\\\\\\\\end{\\\\1})'),\n\t\t\tdecreaseIndentPattern: new RegExp('^\\\\s*\\\\\\\\end{(?!document)')\n\t\t});\n\t\tconst model = createTextModel(\n\t\t\t'\\\\end',\n\t\t\tlatextLanguageId,\n\t\t\t{ tabSize: 1 }\n\t\t);\n\n\t\twithTestCodeEditor(model, { autoIndent: 'full' }, (editor, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 5, false);\n\t\t\tassertCursor(viewModel, new Selection(1, 5, 1, 5));\n\n\t\t\tviewModel.type('{', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '\\\\end{}');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - does nothing if no electric char', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t''\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 1);\n\t\t\tviewModel.type('*', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), '*');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - indents in order to match bracket', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t''\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 1);\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), '  }');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - unindents in order to match bracket', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t'    '\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 5);\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), '  }');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - matches with correct bracket', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t'    if (b) {',\n\t\t\t\t'    }',\n\t\t\t\t'    '\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 1);\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(4), '  }    ');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - does nothing if bracket does not match', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t'    if (b) {',\n\t\t\t\t'    }',\n\t\t\t\t'  }  '\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 4, 6);\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(4), '  }  }');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - matches bracket even in line with content', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t'// hello'\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 1);\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), '  }// hello');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - is no-op if bracket is lined up', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t'  '\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 3);\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), '  }');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - is no-op if there is non-whitespace text before', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t'a'\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 2);\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), 'a}');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - is no-op if pairs are all matched before', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'foo(() => {',\n\t\t\t\t'  ( 1 + 2 ) ',\n\t\t\t\t'})'\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 13);\n\t\t\tviewModel.type('*', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), '  ( 1 + 2 ) *');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - is no-op if matching bracket is on the same line', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'(div',\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 1, 5);\n\t\t\tlet changeText: string | null = null;\n\t\t\tconst disposable = model.onDidChangeContent(e => {\n\t\t\t\tchangeText = e.changes[0].text;\n\t\t\t});\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(1), '(div)');\n\t\t\tassert.deepStrictEqual(changeText, ')');\n\t\t\tdisposable.dispose();\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - is no-op if the line has other content', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'Math.max(',\n\t\t\t\t'\\t2',\n\t\t\t\t'\\t3'\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 3, 3);\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(3), '\\t3)');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - appends text', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t'/*'\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 3);\n\t\t\tviewModel.type('*', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), '/** */');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - appends text 2', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'  if (a) {',\n\t\t\t\t'  /*'\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 5);\n\t\t\tviewModel.type('*', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), '  /** */');\n\t\t});\n\t});\n\n\ttest('ElectricCharacter - issue #23711: Replacing selected text with )]} fails to delete old text with backwards-dragged selection', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'{',\n\t\t\t\t'word'\n\t\t\t],\n\t\t\tlanguageId: electricCharLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmoveTo(editor, viewModel, 2, 5);\n\t\t\tmoveTo(editor, viewModel, 2, 1, true);\n\t\t\tviewModel.type('}', 'keyboard');\n\t\t\tassert.deepStrictEqual(model.getLineContent(2), '}');\n\t\t});\n\t});\n\n\ttest('issue #61070: backtick (`) should auto-close after a word character', () => {\n\t\tusingCursor({\n\t\t\ttext: ['const markup = highlight'],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmodel.tokenization.forceTokenization(1);\n\t\t\tassertType(editor, model, viewModel, 1, 25, '`', '``', `auto closes \\` @ (1, 25)`);\n\t\t});\n\t});\n\n\ttest('issue #132912: quotes should not auto-close if they are closing a string', () => {\n\t\tsetupAutoClosingLanguageTokenization();\n\t\tconst model = createTextModel('const t2 = `something ${t1}', autoClosingLanguageId);\n\t\twithTestCodeEditor(\n\t\t\tmodel,\n\t\t\t{},\n\t\t\t(editor, viewModel) => {\n\t\t\t\tconst model = viewModel.model;\n\t\t\t\tmodel.tokenization.forceTokenization(1);\n\t\t\t\tassertType(editor, model, viewModel, 1, 28, '`', '`', `does not auto close \\` @ (1, 28)`);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('autoClosingPairs - open parens: default', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = [];',\n\t\t\t\t'var b = `asd`;',\n\t\t\t\t'var c = \\'asd\\';',\n\t\t\t\t'var d = \"asd\";',\n\t\t\t\t'var e = /*3*/\t3;',\n\t\t\t\t'var f = /** 3 */3;',\n\t\t\t\t'var g = (3+5);',\n\t\t\t\t'var h = { a: \\'value\\' };',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tconst autoClosePositions = [\n\t\t\t\t'var| a| |=| [|]|;|',\n\t\t\t\t'var| b| |=| |`asd|`|;|',\n\t\t\t\t'var| c| |=| |\\'asd|\\'|;|',\n\t\t\t\t'var| d| |=| |\"asd|\"|;|',\n\t\t\t\t'var| e| |=| /*3*/|\t3|;|',\n\t\t\t\t'var| f| |=| /**| 3| */3|;|',\n\t\t\t\t'var| g| |=| (3+5|)|;|',\n\t\t\t\t'var| h| |=| {| a|:| |\\'value|\\'| |}|;|',\n\t\t\t];\n\t\t\tfor (let i = 0, len = autoClosePositions.length; i < len; i++) {\n\t\t\t\tconst lineNumber = i + 1;\n\t\t\t\tconst autoCloseColumns = extractAutoClosingSpecialColumns(model.getLineMaxColumn(lineNumber), autoClosePositions[i]);\n\n\t\t\t\tfor (let column = 1; column < autoCloseColumns.length; column++) {\n\t\t\t\t\tmodel.tokenization.forceTokenization(lineNumber);\n\t\t\t\t\tif (autoCloseColumns[column] === AutoClosingColumnType.Special1) {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '()', `auto closes @ (${lineNumber}, ${column})`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '(', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('autoClosingPairs - open parens: whitespace', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = [];',\n\t\t\t\t'var b = `asd`;',\n\t\t\t\t'var c = \\'asd\\';',\n\t\t\t\t'var d = \"asd\";',\n\t\t\t\t'var e = /*3*/\t3;',\n\t\t\t\t'var f = /** 3 */3;',\n\t\t\t\t'var g = (3+5);',\n\t\t\t\t'var h = { a: \\'value\\' };',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoClosingBrackets: 'beforeWhitespace'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tconst autoClosePositions = [\n\t\t\t\t'var| a| =| [|];|',\n\t\t\t\t'var| b| =| `asd`;|',\n\t\t\t\t'var| c| =| \\'asd\\';|',\n\t\t\t\t'var| d| =| \"asd\";|',\n\t\t\t\t'var| e| =| /*3*/|\t3;|',\n\t\t\t\t'var| f| =| /**| 3| */3;|',\n\t\t\t\t'var| g| =| (3+5|);|',\n\t\t\t\t'var| h| =| {| a:| \\'value\\'| |};|',\n\t\t\t];\n\t\t\tfor (let i = 0, len = autoClosePositions.length; i < len; i++) {\n\t\t\t\tconst lineNumber = i + 1;\n\t\t\t\tconst autoCloseColumns = extractAutoClosingSpecialColumns(model.getLineMaxColumn(lineNumber), autoClosePositions[i]);\n\n\t\t\t\tfor (let column = 1; column < autoCloseColumns.length; column++) {\n\t\t\t\t\tmodel.tokenization.forceTokenization(lineNumber);\n\t\t\t\t\tif (autoCloseColumns[column] === AutoClosingColumnType.Special1) {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '()', `auto closes @ (${lineNumber}, ${column})`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '(', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('autoClosingPairs - open parens disabled/enabled open quotes enabled/disabled', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = [];',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoClosingBrackets: 'beforeWhitespace',\n\t\t\t\tautoClosingQuotes: 'never'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tconst autoClosePositions = [\n\t\t\t\t'var| a| =| [|];|',\n\t\t\t];\n\t\t\tfor (let i = 0, len = autoClosePositions.length; i < len; i++) {\n\t\t\t\tconst lineNumber = i + 1;\n\t\t\t\tconst autoCloseColumns = extractAutoClosingSpecialColumns(model.getLineMaxColumn(lineNumber), autoClosePositions[i]);\n\n\t\t\t\tfor (let column = 1; column < autoCloseColumns.length; column++) {\n\t\t\t\t\tmodel.tokenization.forceTokenization(lineNumber);\n\t\t\t\t\tif (autoCloseColumns[column] === AutoClosingColumnType.Special1) {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '()', `auto closes @ (${lineNumber}, ${column})`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '(', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t\t}\n\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '\\'', '\\'', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var b = [];',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoClosingBrackets: 'never',\n\t\t\t\tautoClosingQuotes: 'beforeWhitespace'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tconst autoClosePositions = [\n\t\t\t\t'var b =| [|];|',\n\t\t\t];\n\t\t\tfor (let i = 0, len = autoClosePositions.length; i < len; i++) {\n\t\t\t\tconst lineNumber = i + 1;\n\t\t\t\tconst autoCloseColumns = extractAutoClosingSpecialColumns(model.getLineMaxColumn(lineNumber), autoClosePositions[i]);\n\n\t\t\t\tfor (let column = 1; column < autoCloseColumns.length; column++) {\n\t\t\t\t\tmodel.tokenization.forceTokenization(lineNumber);\n\t\t\t\t\tif (autoCloseColumns[column] === AutoClosingColumnType.Special1) {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '\\'', '\\'\\'', `auto closes @ (${lineNumber}, ${column})`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '\\'', '\\'', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t\t}\n\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '(', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('autoClosingPairs - configurable open parens', () => {\n\t\tsetAutoClosingLanguageEnabledSet('abc');\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = [];',\n\t\t\t\t'var b = `asd`;',\n\t\t\t\t'var c = \\'asd\\';',\n\t\t\t\t'var d = \"asd\";',\n\t\t\t\t'var e = /*3*/\t3;',\n\t\t\t\t'var f = /** 3 */3;',\n\t\t\t\t'var g = (3+5);',\n\t\t\t\t'var h = { a: \\'value\\' };',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoClosingBrackets: 'languageDefined'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tconst autoClosePositions = [\n\t\t\t\t'v|ar |a = [|];|',\n\t\t\t\t'v|ar |b = `|asd`;|',\n\t\t\t\t'v|ar |c = \\'|asd\\';|',\n\t\t\t\t'v|ar d = \"|asd\";|',\n\t\t\t\t'v|ar e = /*3*/\t3;|',\n\t\t\t\t'v|ar f = /** 3| */3;|',\n\t\t\t\t'v|ar g = (3+5|);|',\n\t\t\t\t'v|ar h = { |a: \\'v|alue\\' |};|',\n\t\t\t];\n\t\t\tfor (let i = 0, len = autoClosePositions.length; i < len; i++) {\n\t\t\t\tconst lineNumber = i + 1;\n\t\t\t\tconst autoCloseColumns = extractAutoClosingSpecialColumns(model.getLineMaxColumn(lineNumber), autoClosePositions[i]);\n\n\t\t\t\tfor (let column = 1; column < autoCloseColumns.length; column++) {\n\t\t\t\t\tmodel.tokenization.forceTokenization(lineNumber);\n\t\t\t\t\tif (autoCloseColumns[column] === AutoClosingColumnType.Special1) {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '()', `auto closes @ (${lineNumber}, ${column})`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '(', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('autoClosingPairs - auto-pairing can be disabled', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = [];',\n\t\t\t\t'var b = `asd`;',\n\t\t\t\t'var c = \\'asd\\';',\n\t\t\t\t'var d = \"asd\";',\n\t\t\t\t'var e = /*3*/\t3;',\n\t\t\t\t'var f = /** 3 */3;',\n\t\t\t\t'var g = (3+5);',\n\t\t\t\t'var h = { a: \\'value\\' };',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoClosingBrackets: 'never',\n\t\t\t\tautoClosingQuotes: 'never'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tconst autoClosePositions = [\n\t\t\t\t'var a = [];',\n\t\t\t\t'var b = `asd`;',\n\t\t\t\t'var c = \\'asd\\';',\n\t\t\t\t'var d = \"asd\";',\n\t\t\t\t'var e = /*3*/\t3;',\n\t\t\t\t'var f = /** 3 */3;',\n\t\t\t\t'var g = (3+5);',\n\t\t\t\t'var h = { a: \\'value\\' };',\n\t\t\t];\n\t\t\tfor (let i = 0, len = autoClosePositions.length; i < len; i++) {\n\t\t\t\tconst lineNumber = i + 1;\n\t\t\t\tconst autoCloseColumns = extractAutoClosingSpecialColumns(model.getLineMaxColumn(lineNumber), autoClosePositions[i]);\n\n\t\t\t\tfor (let column = 1; column < autoCloseColumns.length; column++) {\n\t\t\t\t\tmodel.tokenization.forceTokenization(lineNumber);\n\t\t\t\t\tif (autoCloseColumns[column] === AutoClosingColumnType.Special1) {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '()', `auto closes @ (${lineNumber}, ${column})`);\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '\"', '\"\"', `auto closes @ (${lineNumber}, ${column})`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '(', '(', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '\"', '\"', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('autoClosingPairs - auto wrapping is configurable', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = asd'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 1, 1, 4),\n\t\t\t\tnew Selection(1, 9, 1, 12),\n\t\t\t]);\n\n\t\t\t// type a `\n\t\t\tviewModel.type('`', 'keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), '`var` a = `asd`');\n\n\t\t\t// type a (\n\t\t\tviewModel.type('(', 'keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), '`(var)` a = `(asd)`');\n\t\t});\n\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = asd'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoSurround: 'never'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 1, 1, 4),\n\t\t\t]);\n\n\t\t\t// type a `\n\t\t\tviewModel.type('`', 'keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), '` a = asd');\n\t\t});\n\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = asd'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoSurround: 'quotes'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 1, 1, 4),\n\t\t\t]);\n\n\t\t\t// type a `\n\t\t\tviewModel.type('`', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '`var` a = asd');\n\n\t\t\t// type a (\n\t\t\tviewModel.type('(', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '`(` a = asd');\n\t\t});\n\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = asd'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoSurround: 'brackets'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 1, 1, 4),\n\t\t\t]);\n\n\t\t\t// type a (\n\t\t\tviewModel.type('(', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '(var) a = asd');\n\n\t\t\t// type a `\n\t\t\tviewModel.type('`', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '(`) a = asd');\n\t\t});\n\t});\n\n\ttest('autoClosingPairs - quote', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = [];',\n\t\t\t\t'var b = `asd`;',\n\t\t\t\t'var c = \\'asd\\';',\n\t\t\t\t'var d = \"asd\";',\n\t\t\t\t'var e = /*3*/\t3;',\n\t\t\t\t'var f = /** 3 */3;',\n\t\t\t\t'var g = (3+5);',\n\t\t\t\t'var h = { a: \\'value\\' };',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tconst autoClosePositions = [\n\t\t\t\t'var a |=| [|]|;|',\n\t\t\t\t'var b |=| `asd`|;|',\n\t\t\t\t'var c |=| \\'asd\\'|;|',\n\t\t\t\t'var d |=| \"asd\"|;|',\n\t\t\t\t'var e |=| /*3*/|\t3;|',\n\t\t\t\t'var f |=| /**| 3 */3;|',\n\t\t\t\t'var g |=| (3+5)|;|',\n\t\t\t\t'var h |=| {| a:| \\'value\\'| |}|;|',\n\t\t\t];\n\t\t\tfor (let i = 0, len = autoClosePositions.length; i < len; i++) {\n\t\t\t\tconst lineNumber = i + 1;\n\t\t\t\tconst autoCloseColumns = extractAutoClosingSpecialColumns(model.getLineMaxColumn(lineNumber), autoClosePositions[i]);\n\n\t\t\t\tfor (let column = 1; column < autoCloseColumns.length; column++) {\n\t\t\t\t\tmodel.tokenization.forceTokenization(lineNumber);\n\t\t\t\t\tif (autoCloseColumns[column] === AutoClosingColumnType.Special1) {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '\\'', '\\'\\'', `auto closes @ (${lineNumber}, ${column})`);\n\t\t\t\t\t} else if (autoCloseColumns[column] === AutoClosingColumnType.Special2) {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '\\'', '', `over types @ (${lineNumber}, ${column})`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassertType(editor, model, viewModel, lineNumber, column, '\\'', '\\'', `does not auto close @ (${lineNumber}, ${column})`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('autoClosingPairs - multi-character autoclose', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tmodel.setValue('begi');\n\t\t\tviewModel.setSelections('test', [new Selection(1, 5, 1, 5)]);\n\t\t\tviewModel.type('n', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'beginend');\n\n\t\t\tmodel.setValue('/*');\n\t\t\tviewModel.setSelections('test', [new Selection(1, 3, 1, 3)]);\n\t\t\tviewModel.type('*', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '/** */');\n\t\t});\n\t});\n\n\ttest('autoClosingPairs - doc comments can be turned off', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoClosingComments: 'never'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tmodel.setValue('/*');\n\t\t\tviewModel.setSelections('test', [new Selection(1, 3, 1, 3)]);\n\t\t\tviewModel.type('*', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '/**');\n\t\t});\n\t});\n\n\ttest('issue #72177: multi-character autoclose with conflicting patterns', () => {\n\t\tconst languageId = 'autoClosingModeMultiChar';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tautoClosingPairs: [\n\t\t\t\t{ open: '(', close: ')' },\n\t\t\t\t{ open: '(*', close: '*)' },\n\t\t\t\t{ open: '<@', close: '@>' },\n\t\t\t\t{ open: '<@@', close: '@@>' },\n\t\t\t],\n\t\t}));\n\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t],\n\t\t\tlanguageId: languageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.type('(', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '()');\n\t\t\tviewModel.type('*', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '(**)', `doesn't add entire close when already closed substring is there`);\n\n\t\t\tmodel.setValue('(');\n\t\t\tviewModel.setSelections('test', [new Selection(1, 2, 1, 2)]);\n\t\t\tviewModel.type('*', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '(**)', `does add entire close if not already there`);\n\n\t\t\tmodel.setValue('');\n\t\t\tviewModel.type('<@', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '<@@>');\n\t\t\tviewModel.type('@', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '<@@@@>', `autocloses when before multi-character closing brace`);\n\t\t\tviewModel.type('(', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '<@@()@@>', `autocloses when before multi-character closing brace`);\n\t\t});\n\t});\n\n\ttest('issue #55314: Do not auto-close when ending with open', () => {\n\t\tconst languageId = 'myElectricMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tautoClosingPairs: [\n\t\t\t\t{ open: '{', close: '}' },\n\t\t\t\t{ open: '[', close: ']' },\n\t\t\t\t{ open: '(', close: ')' },\n\t\t\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: '\\\"', close: '\\\"', notIn: ['string'] },\n\t\t\t\t{ open: 'B\\\"', close: '\\\"', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: '`', close: '`', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: '/**', close: ' */', notIn: ['string'] }\n\t\t\t],\n\t\t}));\n\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'little goat',\n\t\t\t\t'little LAMB',\n\t\t\t\t'little sheep',\n\t\t\t\t'Big LAMB'\n\t\t\t],\n\t\t\tlanguageId: languageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertType(editor, model, viewModel, 1, 4, '\"', '\"', `does not double quote when ending with open`);\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertType(editor, model, viewModel, 2, 4, '\"', '\"', `does not double quote when ending with open`);\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertType(editor, model, viewModel, 3, 4, '\"', '\"', `does not double quote when ending with open`);\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertType(editor, model, viewModel, 4, 2, '\"', '\"', `does not double quote when ending with open`);\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\tassertType(editor, model, viewModel, 4, 3, '\"', '\"', `does not double quote when ending with open`);\n\t\t});\n\t});\n\n\ttest('issue #27937: Trying to add an item to the front of a list is cumbersome', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var arr = [\"b\", \"c\"];'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertType(editor, model, viewModel, 1, 12, '\"', '\"', `does not over type and will not auto close`);\n\t\t});\n\t});\n\n\ttest('issue #25658 - Do not auto-close single/double quotes after word characters', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tfunction typeCharacters(viewModel: ViewModel, chars: string): void {\n\t\t\t\tfor (let i = 0, len = chars.length; i < len; i++) {\n\t\t\t\t\tviewModel.type(chars[i], 'keyboard');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// First gif\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\ttypeCharacters(viewModel, 'teste1 = teste\\' ok');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'teste1 = teste\\' ok');\n\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1000, 1, 1000)]);\n\t\t\ttypeCharacters(viewModel, '\\n');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\ttypeCharacters(viewModel, 'teste2 = teste \\'ok');\n\t\t\tassert.strictEqual(model.getLineContent(2), 'teste2 = teste \\'ok\\'');\n\n\t\t\tviewModel.setSelections('test', [new Selection(2, 1000, 2, 1000)]);\n\t\t\ttypeCharacters(viewModel, '\\n');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\ttypeCharacters(viewModel, 'teste3 = teste\" ok');\n\t\t\tassert.strictEqual(model.getLineContent(3), 'teste3 = teste\" ok');\n\n\t\t\tviewModel.setSelections('test', [new Selection(3, 1000, 3, 1000)]);\n\t\t\ttypeCharacters(viewModel, '\\n');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\ttypeCharacters(viewModel, 'teste4 = teste \"ok');\n\t\t\tassert.strictEqual(model.getLineContent(4), 'teste4 = teste \"ok\"');\n\n\t\t\t// Second gif\n\t\t\tviewModel.setSelections('test', [new Selection(4, 1000, 4, 1000)]);\n\t\t\ttypeCharacters(viewModel, '\\n');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\ttypeCharacters(viewModel, 'teste \\'');\n\t\t\tassert.strictEqual(model.getLineContent(5), 'teste \\'\\'');\n\n\t\t\tviewModel.setSelections('test', [new Selection(5, 1000, 5, 1000)]);\n\t\t\ttypeCharacters(viewModel, '\\n');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\ttypeCharacters(viewModel, 'teste \"');\n\t\t\tassert.strictEqual(model.getLineContent(6), 'teste \"\"');\n\n\t\t\tviewModel.setSelections('test', [new Selection(6, 1000, 6, 1000)]);\n\t\t\ttypeCharacters(viewModel, '\\n');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\ttypeCharacters(viewModel, 'teste\\'');\n\t\t\tassert.strictEqual(model.getLineContent(7), 'teste\\'');\n\n\t\t\tviewModel.setSelections('test', [new Selection(7, 1000, 7, 1000)]);\n\t\t\ttypeCharacters(viewModel, '\\n');\n\t\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\t\ttypeCharacters(viewModel, 'teste\"');\n\t\t\tassert.strictEqual(model.getLineContent(8), 'teste\"');\n\t\t});\n\t});\n\n\ttest('issue #37315 - overtypes only those characters that it inserted', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t\t'y=();'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\tviewModel.type('x=(', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\tviewModel.type('asd', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=(asd)');\n\n\t\t\t// overtype!\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=(asd)');\n\n\t\t\t// do not overtype!\n\t\t\tviewModel.setSelections('test', [new Selection(2, 4, 2, 4)]);\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(2), 'y=());');\n\n\t\t});\n\t});\n\n\ttest('issue #37315 - stops overtyping once cursor leaves area', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t\t'y=();'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\tviewModel.type('x=(', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\tviewModel.setSelections('test', [new Selection(1, 5, 1, 5)]);\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=())');\n\t\t});\n\t});\n\n\ttest('issue #37315 - it overtypes only once', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t\t'y=();'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\tviewModel.type('x=(', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\tviewModel.setSelections('test', [new Selection(1, 4, 1, 4)]);\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=())');\n\t\t});\n\t});\n\n\ttest('issue #37315 - it can remember multiple auto-closed instances', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t\t'y=();'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\tviewModel.type('x=(', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\tviewModel.type('(', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=(())');\n\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=(())');\n\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=(())');\n\t\t});\n\t});\n\n\ttest('issue #118270 - auto closing deletes only those characters that it inserted', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t\t'y=();'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\tviewModel.type('x=(', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\tviewModel.type('asd', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=(asd)');\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\t// delete closing char!\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=');\n\n\t\t\t// do not delete closing char!\n\t\t\tviewModel.setSelections('test', [new Selection(2, 4, 2, 4)]);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'y=);');\n\n\t\t});\n\t});\n\n\ttest('issue #78527 - does not close quote on odd count', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'std::cout << \\'\"\\' << entryMap'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 29, 1, 29)]);\n\n\t\t\tviewModel.type('[', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'std::cout << \\'\"\\' << entryMap[]');\n\n\t\t\tviewModel.type('\"', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'std::cout << \\'\"\\' << entryMap[\"\"]');\n\n\t\t\tviewModel.type('a', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'std::cout << \\'\"\\' << entryMap[\"a\"]');\n\n\t\t\tviewModel.type('\"', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'std::cout << \\'\"\\' << entryMap[\"a\"]');\n\n\t\t\tviewModel.type(']', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'std::cout << \\'\"\\' << entryMap[\"a\"]');\n\t\t});\n\t});\n\n\ttest('issue #85983 - editor.autoClosingBrackets: beforeWhitespace is incorrect for Python', () => {\n\t\tconst languageId = 'pythonMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tautoClosingPairs: [\n\t\t\t\t{ open: '{', close: '}' },\n\t\t\t\t{ open: '[', close: ']' },\n\t\t\t\t{ open: '(', close: ')' },\n\t\t\t\t{ open: '\\\"', close: '\\\"', notIn: ['string'] },\n\t\t\t\t{ open: 'r\\\"', close: '\\\"', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'R\\\"', close: '\\\"', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'u\\\"', close: '\\\"', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'U\\\"', close: '\\\"', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'f\\\"', close: '\\\"', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'F\\\"', close: '\\\"', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'b\\\"', close: '\\\"', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'B\\\"', close: '\\\"', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'r\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'R\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'u\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'U\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'f\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'F\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'b\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: 'B\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t\t{ open: '`', close: '`', notIn: ['string'] }\n\t\t\t],\n\t\t}));\n\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'foo\\'hello\\''\n\t\t\t],\n\t\t\teditorOpts: {\n\t\t\t\tautoClosingBrackets: 'beforeWhitespace'\n\t\t\t},\n\t\t\tlanguageId: languageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertType(editor, model, viewModel, 1, 4, '(', '(', `does not auto close @ (1, 4)`);\n\t\t});\n\t});\n\n\ttest('issue #78975 - Parentheses swallowing does not work when parentheses are inserted by autocomplete', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'<div id'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 8, 1, 8)]);\n\n\t\t\tviewModel.executeEdits('snippet', [{ range: new Range(1, 6, 1, 8), text: 'id=\"\"' }], () => [new Selection(1, 10, 1, 10)]);\n\t\t\tassert.strictEqual(model.getLineContent(1), '<div id=\"\"');\n\n\t\t\tviewModel.type('a', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '<div id=\"a\"');\n\n\t\t\tviewModel.type('\"', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), '<div id=\"a\"');\n\t\t});\n\t});\n\n\ttest('issue #78833 - Add config to use old brackets/quotes overtyping', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'',\n\t\t\t\t'y=();'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId,\n\t\t\teditorOpts: {\n\t\t\t\tautoClosingOvertype: 'always'\n\t\t\t}\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\tviewModel.type('x=(', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\tviewModel.setSelections('test', [new Selection(1, 4, 1, 4)]);\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'x=()');\n\n\t\t\tviewModel.setSelections('test', [new Selection(2, 4, 2, 4)]);\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(2), 'y=();');\n\t\t});\n\t});\n\n\ttest('issue #15825: accents on mac US intl keyboard', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\t// Typing ` + e on the mac US intl kb layout\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('`', 'keyboard');\n\t\t\tviewModel.compositionType('\u00E8', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), '\u00E8');\n\t\t});\n\t});\n\n\ttest('issue #90016: allow accents on mac US intl keyboard to surround selection', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'test'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1, 1, 5)]);\n\n\t\t\t// Typing ` + e on the mac US intl kb layout\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tviewModel.compositionType('\\'', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.compositionType('\\'', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), '\\'test\\'');\n\t\t});\n\t});\n\n\ttest('issue #53357: Over typing ignores characters after backslash', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'console.log();'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tviewModel.setSelections('test', [new Selection(1, 13, 1, 13)]);\n\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), 'console.log(\\'\\');');\n\n\t\t\tviewModel.type('it', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), 'console.log(\\'it\\');');\n\n\t\t\tviewModel.type('\\\\', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), 'console.log(\\'it\\\\\\');');\n\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), 'console.log(\\'it\\\\\\'\\');');\n\t\t});\n\t});\n\n\ttest('issue #84998: Overtyping Brackets doesn\\'t work after backslash', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t''\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1, 1, 1)]);\n\n\t\t\tviewModel.type('\\\\', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '\\\\');\n\n\t\t\tviewModel.type('(', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '\\\\()');\n\n\t\t\tviewModel.type('abc', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '\\\\(abc)');\n\n\t\t\tviewModel.type('\\\\', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '\\\\(abc\\\\)');\n\n\t\t\tviewModel.type(')', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '\\\\(abc\\\\)');\n\t\t});\n\t});\n\n\ttest('issue #2773: Accents (\u00B4`\u00A8^, others?) are inserted in the wrong position (Mac)', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'hello',\n\t\t\t\t'world'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\t// Typing ` and pressing shift+down on the mac US intl kb layout\n\t\t\t// Here we're just replaying what the cursor gets\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('`', 'keyboard');\n\t\t\tmoveDown(editor, viewModel, true);\n\t\t\tviewModel.compositionType('`', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.compositionType('`', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), '`hello\\nworld');\n\t\t\tassertCursor(viewModel, new Selection(1, 2, 2, 2));\n\t\t});\n\t});\n\n\ttest('issue #26820: auto close quotes when not used as accents', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t''\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\t// on the mac US intl kb layout\n\n\t\t\t// Typing ' + space\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tviewModel.compositionType('\\'', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '\\'\\'');\n\n\t\t\t// Typing one more ' + space\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tviewModel.compositionType('\\'', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '\\'\\'');\n\n\t\t\t// Typing ' as a closing tag\n\t\t\tmodel.setValue('\\'abc');\n\t\t\tviewModel.setSelections('test', [new Selection(1, 5, 1, 5)]);\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tviewModel.compositionType('\\'', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), '\\'abc\\'');\n\n\t\t\t// quotes before the newly added character are all paired.\n\t\t\tmodel.setValue('\\'abc\\'def ');\n\t\t\tviewModel.setSelections('test', [new Selection(1, 10, 1, 10)]);\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tviewModel.compositionType('\\'', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), '\\'abc\\'def \\'\\'');\n\n\t\t\t// No auto closing if there is non-whitespace character after the cursor\n\t\t\tmodel.setValue('abc');\n\t\t\tviewModel.setSelections('test', [new Selection(1, 1, 1, 1)]);\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tviewModel.compositionType('\\'', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\n\t\t\t// No auto closing if it's after a word.\n\t\t\tmodel.setValue('abc');\n\t\t\tviewModel.setSelections('test', [new Selection(1, 4, 1, 4)]);\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tviewModel.compositionType('\\'', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), 'abc\\'');\n\t\t});\n\t});\n\n\ttest('issue #144690: Quotes do not overtype when using US Intl PC keyboard layout', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t''\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tassertCursor(viewModel, new Position(1, 1));\n\n\t\t\t// Pressing ' + ' + ;\n\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type(`'`, 'keyboard');\n\t\t\tviewModel.compositionType(`'`, 1, 0, 0, 'keyboard');\n\t\t\tviewModel.compositionType(`'`, 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type(`'`, 'keyboard');\n\t\t\tviewModel.compositionType(`';`, 1, 0, 0, 'keyboard');\n\t\t\tviewModel.compositionType(`';`, 2, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), `'';`);\n\t\t});\n\t});\n\n\ttest('issue #144693: Typing a quote using US Intl PC keyboard layout always surrounds words', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'const hello = 3;'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 7, 1, 12)]);\n\n\t\t\t// Pressing ' + e\n\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type(`'`, 'keyboard');\n\t\t\tviewModel.compositionType(`\u00E9`, 1, 0, 0, 'keyboard');\n\t\t\tviewModel.compositionType(`\u00E9`, 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), `const \u00E9 = 3;`);\n\t\t});\n\t});\n\n\ttest('issue #82701: auto close does not execute when IME is canceled via backspace', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'{}'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 2, 1, 2)]);\n\n\t\t\t// Typing a + backspace\n\t\t\tviewModel.startComposition();\n\t\t\tviewModel.type('a', 'keyboard');\n\t\t\tviewModel.compositionType('', 1, 0, 0, 'keyboard');\n\t\t\tviewModel.endComposition('keyboard');\n\t\t\tassert.strictEqual(model.getValue(), '{}');\n\t\t});\n\t});\n\n\ttest('issue #20891: All cursors should do the same thing', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var a = asd'\n\t\t\t],\n\t\t\tlanguageId: autoClosingLanguageId\n\t\t}, (editor, model, viewModel) => {\n\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 9, 1, 9),\n\t\t\t\tnew Selection(1, 12, 1, 12),\n\t\t\t]);\n\n\t\t\t// type a `\n\t\t\tviewModel.type('`', 'keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(), 'var a = `asd`');\n\t\t});\n\t});\n\n\ttest('issue #41825: Special handling of quotes in surrounding pairs', () => {\n\t\tconst languageId = 'myMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tsurroundingPairs: [\n\t\t\t\t{ open: '\"', close: '\"' },\n\t\t\t\t{ open: '\\'', close: '\\'' },\n\t\t\t]\n\t\t}));\n\n\t\tconst model = createTextModel('var x = \\'hi\\';', languageId);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 9, 1, 10),\n\t\t\t\tnew Selection(1, 12, 1, 13)\n\t\t\t]);\n\t\t\tviewModel.type('\"', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'var x = \"hi\";', 'assert1');\n\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 9, 1, 10),\n\t\t\t\tnew Selection(1, 12, 1, 13)\n\t\t\t]);\n\t\t\tviewModel.type('\\'', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'var x = \\'hi\\';', 'assert2');\n\t\t});\n\t});\n\n\ttest('All cursors should do the same thing when deleting left', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'var a = ()'\n\t\t\t].join('\\n'),\n\t\t\tautoClosingLanguageId\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(1, 4, 1, 4),\n\t\t\t\tnew Selection(1, 10, 1, 10),\n\t\t\t]);\n\n\t\t\t// delete left\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\n\t\t\tassert.strictEqual(model.getValue(), 'va a = )');\n\t\t});\n\t});\n\n\ttest('issue #7100: Mouse word selection is strange when non-word character is at the end of line', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'before.a',\n\t\t\t\t'before',\n\t\t\t\t'hello:',\n\t\t\t\t'there:',\n\t\t\t\t'this is strange:',\n\t\t\t\t'here',\n\t\t\t\t'it',\n\t\t\t\t'is',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tCoreNavigationCommands.WordSelect.runEditorCommand(null, editor, {\n\t\t\t\tposition: new Position(3, 7)\n\t\t\t});\n\t\t\tassertCursor(viewModel, new Selection(3, 7, 3, 7));\n\n\t\t\tCoreNavigationCommands.WordSelectDrag.runEditorCommand(null, editor, {\n\t\t\t\tposition: new Position(4, 7)\n\t\t\t});\n\t\t\tassertCursor(viewModel, new Selection(3, 7, 4, 7));\n\t\t});\n\t});\n\n\ttest('issue #112039: shift-continuing a double/triple-click and drag selection does not remember its starting mode', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'just some text',\n\t\t\t\t'and another line',\n\t\t\t\t'and another one',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tCoreNavigationCommands.WordSelect.runEditorCommand(null, editor, {\n\t\t\t\tposition: new Position(2, 6)\n\t\t\t});\n\t\t\tCoreNavigationCommands.MoveToSelect.runEditorCommand(null, editor, {\n\t\t\t\tposition: new Position(1, 8),\n\t\t\t});\n\t\t\tassertCursor(viewModel, new Selection(2, 12, 1, 6));\n\t\t});\n\t});\n\n\ttest('issue #158236: Shift click selection does not work on line number indicator', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'just some text',\n\t\t\t\t'and another line',\n\t\t\t\t'and another one',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tCoreNavigationCommands.MoveTo.runEditorCommand(null, editor, {\n\t\t\t\tposition: new Position(3, 5)\n\t\t\t});\n\t\t\tCoreNavigationCommands.LineSelectDrag.runEditorCommand(null, editor, {\n\t\t\t\tposition: new Position(2, 1)\n\t\t\t});\n\t\t\tassertCursor(viewModel, new Selection(3, 5, 2, 1));\n\t\t});\n\t});\n\n\ttest('issue #111513: Text gets automatically selected when typing at the same location in another editor', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'just',\n\t\t\t\t'',\n\t\t\t\t'some text',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor1, viewModel1) => {\n\t\t\teditor1.setSelections([\n\t\t\t\tnew Selection(2, 1, 2, 1)\n\t\t\t]);\n\t\t\twithTestCodeEditor(model, {}, (editor2, viewModel2) => {\n\t\t\t\teditor2.setSelections([\n\t\t\t\t\tnew Selection(2, 1, 2, 1)\n\t\t\t\t]);\n\t\t\t\tviewModel2.type('e', 'keyboard');\n\t\t\t\tassertCursor(viewModel2, new Position(2, 2));\n\t\t\t\tassertCursor(viewModel1, new Position(2, 2));\n\t\t\t});\n\t\t});\n\t});\n});\n\nsuite('Undo stops', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('there is an undo stop between typing and deleting left', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'A  line',\n\t\t\t\t'Another line',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 3, 1, 3)]);\n\t\t\tviewModel.type('first', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A first line');\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 8));\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A fir line');\n\t\t\tassertCursor(viewModel, new Selection(1, 6, 1, 6));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A first line');\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 8));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A  line');\n\t\t\tassertCursor(viewModel, new Selection(1, 3, 1, 3));\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('there is an undo stop between typing and deleting right', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'A  line',\n\t\t\t\t'Another line',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 3, 1, 3)]);\n\t\t\tviewModel.type('first', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A first line');\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 8));\n\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A firstine');\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 8));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A first line');\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 8));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A  line');\n\t\t\tassertCursor(viewModel, new Selection(1, 3, 1, 3));\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('there is an undo stop between deleting left and typing', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'A  line',\n\t\t\t\t'Another line',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(2, 8, 2, 8)]);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), ' line');\n\t\t\tassertCursor(viewModel, new Selection(2, 1, 2, 1));\n\n\t\t\tviewModel.type('Second', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Second line');\n\t\t\tassertCursor(viewModel, new Selection(2, 7, 2, 7));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), ' line');\n\t\t\tassertCursor(viewModel, new Selection(2, 1, 2, 1));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Another line');\n\t\t\tassertCursor(viewModel, new Selection(2, 8, 2, 8));\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('there is an undo stop between deleting left and deleting right', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'A  line',\n\t\t\t\t'Another line',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(2, 8, 2, 8)]);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), ' line');\n\t\t\tassertCursor(viewModel, new Selection(2, 1, 2, 1));\n\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), '');\n\t\t\tassertCursor(viewModel, new Selection(2, 1, 2, 1));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), ' line');\n\t\t\tassertCursor(viewModel, new Selection(2, 1, 2, 1));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Another line');\n\t\t\tassertCursor(viewModel, new Selection(2, 8, 2, 8));\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('there is an undo stop between deleting right and typing', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'A  line',\n\t\t\t\t'Another line',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(2, 9, 2, 9)]);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Another ');\n\t\t\tassertCursor(viewModel, new Selection(2, 9, 2, 9));\n\n\t\t\tviewModel.type('text', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Another text');\n\t\t\tassertCursor(viewModel, new Selection(2, 13, 2, 13));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Another ');\n\t\t\tassertCursor(viewModel, new Selection(2, 9, 2, 9));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Another line');\n\t\t\tassertCursor(viewModel, new Selection(2, 9, 2, 9));\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('there is an undo stop between deleting right and deleting left', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'A  line',\n\t\t\t\t'Another line',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(2, 9, 2, 9)]);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteRight.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Another ');\n\t\t\tassertCursor(viewModel, new Selection(2, 9, 2, 9));\n\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'An');\n\t\t\tassertCursor(viewModel, new Selection(2, 3, 2, 3));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Another ');\n\t\t\tassertCursor(viewModel, new Selection(2, 9, 2, 9));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(2), 'Another line');\n\t\t\tassertCursor(viewModel, new Selection(2, 9, 2, 9));\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('inserts undo stop when typing space', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'A  line',\n\t\t\t\t'Another line',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 3, 1, 3)]);\n\t\t\tviewModel.type('first and interesting', 'keyboard');\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A first and interesting line');\n\t\t\tassertCursor(viewModel, new Selection(1, 24, 1, 24));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A first and line');\n\t\t\tassertCursor(viewModel, new Selection(1, 12, 1, 12));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A first line');\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 8));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getLineContent(1), 'A  line');\n\t\t\tassertCursor(viewModel, new Selection(1, 3, 1, 3));\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('can undo typing and EOL change in one undo stop', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'A  line',\n\t\t\t\t'Another line',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [new Selection(1, 3, 1, 3)]);\n\t\t\tviewModel.type('first', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), 'A first line\\nAnother line');\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 8));\n\n\t\t\tmodel.pushEOL(EndOfLineSequence.CRLF);\n\t\t\tassert.strictEqual(model.getValue(), 'A first line\\r\\nAnother line');\n\t\t\tassertCursor(viewModel, new Selection(1, 8, 1, 8));\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(), 'A  line\\nAnother line');\n\t\t\tassertCursor(viewModel, new Selection(1, 3, 1, 3));\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('issue #93585: Undo multi cursor edit corrupts document', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t'hello world',\n\t\t\t\t'hello world',\n\t\t\t].join('\\n')\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.setSelections('test', [\n\t\t\t\tnew Selection(2, 7, 2, 12),\n\t\t\t\tnew Selection(1, 7, 1, 12),\n\t\t\t]);\n\t\t\tviewModel.type('no', 'keyboard');\n\t\t\tassert.strictEqual(model.getValue(), 'hello no\\nhello no');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(), 'hello world\\nhello world');\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('there is a single undo stop for consecutive whitespaces', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t''\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.type('a', 'keyboard');\n\t\t\tviewModel.type('b', 'keyboard');\n\t\t\tviewModel.type(' ', 'keyboard');\n\t\t\tviewModel.type(' ', 'keyboard');\n\t\t\tviewModel.type('c', 'keyboard');\n\t\t\tviewModel.type('d', 'keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'ab  cd', 'assert1');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'ab  ', 'assert2');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'ab', 'assert3');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '', 'assert4');\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('there is no undo stop after a single whitespace', () => {\n\t\tconst model = createTextModel(\n\t\t\t[\n\t\t\t\t''\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tinsertSpaces: false,\n\t\t\t}\n\t\t);\n\n\t\twithTestCodeEditor(model, {}, (editor, viewModel) => {\n\t\t\tviewModel.type('a', 'keyboard');\n\t\t\tviewModel.type('b', 'keyboard');\n\t\t\tviewModel.type(' ', 'keyboard');\n\t\t\tviewModel.type('c', 'keyboard');\n\t\t\tviewModel.type('d', 'keyboard');\n\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'ab cd', 'assert1');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), 'ab', 'assert3');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(model.getValue(EndOfLinePreference.LF), '', 'assert4');\n\t\t});\n\n\t\tmodel.dispose();\n\t});\n});\n"],
  "mappings": "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",
  "names": ["createTextModel", "withTestCodeEditor", "AutoClosingColumnType", "model", "viewModel"]
}
