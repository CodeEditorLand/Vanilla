{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/controller/imeRecordedTypes.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from '../../../../base/common/platform.js';\nimport { IBrowser } from '../../../browser/controller/editContext/textArea/textAreaEditContextInput.js';\n\nexport interface IRecordedTextareaState {\n\tselectionDirection: 'forward' | 'backward' | 'none';\n\tselectionEnd: number;\n\tselectionStart: number;\n\tvalue: string;\n}\n\nexport interface IRecordedKeyboardEvent {\n\ttimeStamp: number;\n\tstate: IRecordedTextareaState;\n\ttype: 'keydown' | 'keypress' | 'keyup';\n\taltKey: boolean;\n\tcharCode: number;\n\tcode: string;\n\tctrlKey: boolean;\n\tisComposing: boolean;\n\tkey: string;\n\tkeyCode: number;\n\tlocation: number;\n\tmetaKey: boolean;\n\trepeat: boolean;\n\tshiftKey: boolean;\n}\n\nexport interface IRecordedCompositionEvent {\n\ttimeStamp: number;\n\tstate: IRecordedTextareaState;\n\ttype: 'compositionstart' | 'compositionupdate' | 'compositionend';\n\tdata: string;\n}\n\nexport interface IRecordedInputEvent {\n\ttimeStamp: number;\n\tstate: IRecordedTextareaState;\n\ttype: 'beforeinput' | 'input';\n\tdata: string | null;\n\tinputType: string;\n\tisComposing: boolean | undefined;\n}\n\nexport type IRecordedEvent = IRecordedKeyboardEvent | IRecordedCompositionEvent | IRecordedInputEvent;\n\nexport interface IRecorded {\n\tenv: {\n\t\tOS: OperatingSystem;\n\t\tbrowser: IBrowser;\n\t};\n\tinitial: IRecordedTextareaState;\n\tevents: IRecordedEvent[];\n\tfinal: IRecordedTextareaState;\n}\n"],
  "mappings": "AAKA,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;",
  "names": []
}
