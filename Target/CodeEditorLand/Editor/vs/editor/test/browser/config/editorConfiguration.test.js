import t from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as d}from"../../../../base/test/common/utils.js";import"../../../browser/config/editorConfiguration.js";import{migrateOptions as p}from"../../../browser/config/migrateOptions.js";import{EditorOption as r}from"../../../common/config/editorOptions.js";import{EditorZoom as c}from"../../../common/config/editorZoom.js";import{TestConfiguration as i}from"./testConfiguration.js";import{AccessibilitySupport as f}from"../../../../platform/accessibility/common/accessibility.js";suite("Common Editor Config",()=>{d(),test("Zoom Level",()=>{const e=c;e.setZoomLevel(0),t.strictEqual(e.getZoomLevel(),0),e.setZoomLevel(-0),t.strictEqual(e.getZoomLevel(),0),e.setZoomLevel(5),t.strictEqual(e.getZoomLevel(),5),e.setZoomLevel(-1),t.strictEqual(e.getZoomLevel(),-1),e.setZoomLevel(9),t.strictEqual(e.getZoomLevel(),9),e.setZoomLevel(-9),t.strictEqual(e.getZoomLevel(),-5),e.setZoomLevel(20),t.strictEqual(e.getZoomLevel(),20),e.setZoomLevel(-10),t.strictEqual(e.getZoomLevel(),-5),e.setZoomLevel(9.1),t.strictEqual(e.getZoomLevel(),9.1),e.setZoomLevel(-9.1),t.strictEqual(e.getZoomLevel(),-5),e.setZoomLevel(1/0),t.strictEqual(e.getZoomLevel(),20),e.setZoomLevel(Number.NEGATIVE_INFINITY),t.strictEqual(e.getZoomLevel(),-5)});class o extends i{_readEnvConfiguration(){return{extraEditorClassName:"",outerWidth:1e3,outerHeight:100,emptySelectionClipboard:!0,pixelRatio:1,accessibilitySupport:f.Unknown}}}function s(e,n,a){const u=e.options.get(r.wrappingInfo);t.strictEqual(u.isViewportWrapping,n),t.strictEqual(u.wrappingColumn,a)}test("wordWrap default",()=>{const e=new o({});s(e,!1,-1),e.dispose()}),test("wordWrap compat false",()=>{const e=new o({wordWrap:!1});s(e,!1,-1),e.dispose()}),test("wordWrap compat true",()=>{const e=new o({wordWrap:!0});s(e,!0,80),e.dispose()}),test("wordWrap on",()=>{const e=new o({wordWrap:"on"});s(e,!0,80),e.dispose()}),test("wordWrap on without minimap",()=>{const e=new o({wordWrap:"on",minimap:{enabled:!1}});s(e,!0,88),e.dispose()}),test("wordWrap on does not use wordWrapColumn",()=>{const e=new o({wordWrap:"on",wordWrapColumn:10});s(e,!0,80),e.dispose()}),test("wordWrap off",()=>{const e=new o({wordWrap:"off"});s(e,!1,-1),e.dispose()}),test("wordWrap off does not use wordWrapColumn",()=>{const e=new o({wordWrap:"off",wordWrapColumn:10});s(e,!1,-1),e.dispose()}),test("wordWrap wordWrapColumn uses default wordWrapColumn",()=>{const e=new o({wordWrap:"wordWrapColumn"});s(e,!1,80),e.dispose()}),test("wordWrap wordWrapColumn uses wordWrapColumn",()=>{const e=new o({wordWrap:"wordWrapColumn",wordWrapColumn:100});s(e,!1,100),e.dispose()}),test("wordWrap wordWrapColumn validates wordWrapColumn",()=>{const e=new o({wordWrap:"wordWrapColumn",wordWrapColumn:-1});s(e,!1,1),e.dispose()}),test("wordWrap bounded uses default wordWrapColumn",()=>{const e=new o({wordWrap:"bounded"});s(e,!0,80),e.dispose()}),test("wordWrap bounded uses wordWrapColumn",()=>{const e=new o({wordWrap:"bounded",wordWrapColumn:40});s(e,!0,40),e.dispose()}),test("wordWrap bounded validates wordWrapColumn",()=>{const e=new o({wordWrap:"bounded",wordWrapColumn:-1});s(e,!0,1),e.dispose()}),test("issue #53152: Cannot assign to read only property 'enabled' of object",()=>{const e={};Object.defineProperty(e,"enabled",{writable:!1,value:!0});const n=new i({hover:e});t.strictEqual(n.options.get(r.hover).enabled,!0),n.updateOptions({hover:{enabled:!1}}),t.strictEqual(n.options.get(r.hover).enabled,!1),n.dispose()}),test("does not emit event when nothing changes",()=>{const e=new i({glyphMargin:!0,roundedSelection:!1});let n=null;const a=e.onDidChange(l=>n=l);t.strictEqual(e.options.get(r.glyphMargin),!0),e.updateOptions({glyphMargin:!0}),e.updateOptions({roundedSelection:!1}),t.strictEqual(n,null),e.dispose(),a.dispose()}),test("issue #94931: Unable to open source file",()=>{const e=new i({quickSuggestions:null}),n=e.options.get(r.quickSuggestions);t.deepStrictEqual(n,{other:"on",comments:"off",strings:"off"}),e.dispose()}),test("issue #102920: Can't snap or split view with JSON files",()=>{const e=new i({quickSuggestions:null});e.updateOptions({quickSuggestions:{strings:!0}});const n=e.options.get(r.quickSuggestions);t.deepStrictEqual(n,{other:"on",comments:"off",strings:"on"}),e.dispose()}),test("issue #151926: Untyped editor options apply",()=>{const e=new i({});e.updateOptions({unicodeHighlight:{allowedCharacters:{x:!0}}});const n=e.options.get(r.unicodeHighlighting);t.deepStrictEqual(n,{nonBasicASCII:"inUntrustedWorkspace",invisibleCharacters:!0,ambiguousCharacters:!0,includeComments:"inUntrustedWorkspace",includeStrings:"inUntrustedWorkspace",allowedCharacters:{x:!0},allowedLocales:{_os:!0,_vscode:!0}}),e.dispose()})}),suite("migrateOptions",()=>{d();function o(s){return p(s),s}test("wordWrap",()=>{t.deepStrictEqual(o({wordWrap:!0}),{wordWrap:"on"}),t.deepStrictEqual(o({wordWrap:!1}),{wordWrap:"off"})}),test("lineNumbers",()=>{t.deepStrictEqual(o({lineNumbers:!0}),{lineNumbers:"on"}),t.deepStrictEqual(o({lineNumbers:!1}),{lineNumbers:"off"})}),test("autoClosingBrackets",()=>{t.deepStrictEqual(o({autoClosingBrackets:!1}),{autoClosingBrackets:"never",autoClosingQuotes:"never",autoSurround:"never"})}),test("cursorBlinking",()=>{t.deepStrictEqual(o({cursorBlinking:"visible"}),{cursorBlinking:"solid"})}),test("renderWhitespace",()=>{t.deepStrictEqual(o({renderWhitespace:!0}),{renderWhitespace:"boundary"}),t.deepStrictEqual(o({renderWhitespace:!1}),{renderWhitespace:"none"})}),test("renderLineHighlight",()=>{t.deepStrictEqual(o({renderLineHighlight:!0}),{renderLineHighlight:"line"}),t.deepStrictEqual(o({renderLineHighlight:!1}),{renderLineHighlight:"none"})}),test("acceptSuggestionOnEnter",()=>{t.deepStrictEqual(o({acceptSuggestionOnEnter:!0}),{acceptSuggestionOnEnter:"on"}),t.deepStrictEqual(o({acceptSuggestionOnEnter:!1}),{acceptSuggestionOnEnter:"off"})}),test("tabCompletion",()=>{t.deepStrictEqual(o({tabCompletion:!0}),{tabCompletion:"onlySnippets"}),t.deepStrictEqual(o({tabCompletion:!1}),{tabCompletion:"off"})}),test("suggest.filteredTypes",()=>{t.deepStrictEqual(o({suggest:{filteredTypes:{method:!1,function:!1,constructor:!1,deprecated:!1,field:!1,variable:!1,class:!1,struct:!1,interface:!1,module:!1,property:!1,event:!1,operator:!1,unit:!1,value:!1,constant:!1,enum:!1,enumMember:!1,keyword:!1,text:!1,color:!1,file:!1,reference:!1,folder:!1,typeParameter:!1,snippet:!1}}}),{suggest:{filteredTypes:void 0,showMethods:!1,showFunctions:!1,showConstructors:!1,showDeprecated:!1,showFields:!1,showVariables:!1,showClasses:!1,showStructs:!1,showInterfaces:!1,showModules:!1,showProperties:!1,showEvents:!1,showOperators:!1,showUnits:!1,showValues:!1,showConstants:!1,showEnums:!1,showEnumMembers:!1,showKeywords:!1,showWords:!1,showColors:!1,showFiles:!1,showReferences:!1,showFolders:!1,showTypeParameters:!1,showSnippets:!1}})}),test("quickSuggestions",()=>{t.deepStrictEqual(o({quickSuggestions:!0}),{quickSuggestions:{comments:"on",strings:"on",other:"on"}}),t.deepStrictEqual(o({quickSuggestions:!1}),{quickSuggestions:{comments:"off",strings:"off",other:"off"}}),t.deepStrictEqual(o({quickSuggestions:{comments:"on",strings:"off"}}),{quickSuggestions:{comments:"on",strings:"off"}})}),test("hover",()=>{t.deepStrictEqual(o({hover:!0}),{hover:{enabled:!0}}),t.deepStrictEqual(o({hover:!1}),{hover:{enabled:!1}})}),test("parameterHints",()=>{t.deepStrictEqual(o({parameterHints:!0}),{parameterHints:{enabled:!0}}),t.deepStrictEqual(o({parameterHints:!1}),{parameterHints:{enabled:!1}})}),test("autoIndent",()=>{t.deepStrictEqual(o({autoIndent:!0}),{autoIndent:"full"}),t.deepStrictEqual(o({autoIndent:!1}),{autoIndent:"advanced"})}),test("matchBrackets",()=>{t.deepStrictEqual(o({matchBrackets:!0}),{matchBrackets:"always"}),t.deepStrictEqual(o({matchBrackets:!1}),{matchBrackets:"never"})}),test("renderIndentGuides, highlightActiveIndentGuide",()=>{t.deepStrictEqual(o({renderIndentGuides:!0}),{renderIndentGuides:void 0,guides:{indentation:!0}}),t.deepStrictEqual(o({renderIndentGuides:!1}),{renderIndentGuides:void 0,guides:{indentation:!1}}),t.deepStrictEqual(o({highlightActiveIndentGuide:!0}),{highlightActiveIndentGuide:void 0,guides:{highlightActiveIndentation:!0}}),t.deepStrictEqual(o({highlightActiveIndentGuide:!1}),{highlightActiveIndentGuide:void 0,guides:{highlightActiveIndentation:!1}})}),test("migration does not overwrite new setting",()=>{t.deepStrictEqual(o({renderIndentGuides:!0,guides:{indentation:!1}}),{renderIndentGuides:void 0,guides:{indentation:!1}}),t.deepStrictEqual(o({highlightActiveIndentGuide:!0,guides:{highlightActiveIndentation:!1}}),{highlightActiveIndentGuide:void 0,guides:{highlightActiveIndentation:!1}})})});
