{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/config/testConfiguration.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorConfiguration, IEnvConfiguration } from '../../../browser/config/editorConfiguration.js';\nimport { EditorFontLigatures, EditorFontVariations } from '../../../common/config/editorOptions.js';\nimport { BareFontInfo, FontInfo } from '../../../common/config/fontInfo.js';\nimport { TestCodeEditorCreationOptions } from '../testCodeEditor.js';\nimport { AccessibilitySupport } from '../../../../platform/accessibility/common/accessibility.js';\nimport { TestAccessibilityService } from '../../../../platform/accessibility/test/common/testAccessibilityService.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\n\nexport class TestConfiguration extends EditorConfiguration {\n\n\tconstructor(opts: Readonly<TestCodeEditorCreationOptions>) {\n\t\tsuper(false, MenuId.EditorContext, opts, null, new TestAccessibilityService());\n\t}\n\n\tprotected override _readEnvConfiguration(): IEnvConfiguration {\n\t\tconst envConfig = (this.getRawOptions() as TestCodeEditorCreationOptions).envConfig;\n\t\treturn {\n\t\t\textraEditorClassName: envConfig?.extraEditorClassName ?? '',\n\t\t\touterWidth: envConfig?.outerWidth ?? 100,\n\t\t\touterHeight: envConfig?.outerHeight ?? 100,\n\t\t\temptySelectionClipboard: envConfig?.emptySelectionClipboard ?? true,\n\t\t\tpixelRatio: envConfig?.pixelRatio ?? 1,\n\t\t\taccessibilitySupport: envConfig?.accessibilitySupport ?? AccessibilitySupport.Unknown\n\t\t};\n\t}\n\n\tprotected override _readFontInfo(styling: BareFontInfo): FontInfo {\n\t\treturn new FontInfo({\n\t\t\tpixelRatio: 1,\n\t\t\tfontFamily: 'mockFont',\n\t\t\tfontWeight: 'normal',\n\t\t\tfontSize: 14,\n\t\t\tfontFeatureSettings: EditorFontLigatures.OFF,\n\t\t\tfontVariationSettings: EditorFontVariations.OFF,\n\t\t\tlineHeight: 19,\n\t\t\tletterSpacing: 1.5,\n\t\t\tisMonospace: true,\n\t\t\ttypicalHalfwidthCharacterWidth: 10,\n\t\t\ttypicalFullwidthCharacterWidth: 20,\n\t\t\tcanUseHalfwidthRightwardsArrow: true,\n\t\t\tspaceWidth: 10,\n\t\t\tmiddotWidth: 10,\n\t\t\twsmiddotWidth: 10,\n\t\t\tmaxDigitWidth: 10,\n\t\t}, true);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,qBAAqB,yBAAyB;AACvD,SAAS,qBAAqB,4BAA4B;AAC1D,SAAS,cAAc,gBAAgB;AACvC,SAAS,qCAAqC;AAC9C,SAAS,4BAA4B;AACrC,SAAS,gCAAgC;AACzC,SAAS,cAAc;AAEhB,MAAM,0BAA0B,oBAAoB;AAAA,EAb3D,OAa2D;AAAA;AAAA;AAAA,EAE1D,YAAY,MAA+C;AAC1D,UAAM,OAAO,OAAO,eAAe,MAAM,MAAM,IAAI,yBAAyB,CAAC;AAAA,EAC9E;AAAA,EAEmB,wBAA2C;AAC7D,UAAM,YAAa,KAAK,cAAc,EAAoC;AAC1E,WAAO;AAAA,MACN,sBAAsB,WAAW,wBAAwB;AAAA,MACzD,YAAY,WAAW,cAAc;AAAA,MACrC,aAAa,WAAW,eAAe;AAAA,MACvC,yBAAyB,WAAW,2BAA2B;AAAA,MAC/D,YAAY,WAAW,cAAc;AAAA,MACrC,sBAAsB,WAAW,wBAAwB,qBAAqB;AAAA,IAC/E;AAAA,EACD;AAAA,EAEmB,cAAc,SAAiC;AACjE,WAAO,IAAI,SAAS;AAAA,MACnB,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,qBAAqB,oBAAoB;AAAA,MACzC,uBAAuB,qBAAqB;AAAA,MAC5C,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,aAAa;AAAA,MACb,gCAAgC;AAAA,MAChC,gCAAgC;AAAA,MAChC,gCAAgC;AAAA,MAChC,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,eAAe;AAAA,MACf,eAAe;AAAA,IAChB,GAAG,IAAI;AAAA,EACR;AACD;",
  "names": []
}
