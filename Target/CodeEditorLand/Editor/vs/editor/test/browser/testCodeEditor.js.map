{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/browser/testCodeEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { mock } from '../../../base/test/common/mock.js';\nimport { EditorConfiguration } from '../../browser/config/editorConfiguration.js';\nimport { IActiveCodeEditor, ICodeEditor } from '../../browser/editorBrowser.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { View } from '../../browser/view.js';\nimport { CodeEditorWidget, ICodeEditorWidgetOptions } from '../../browser/widget/codeEditor/codeEditorWidget.js';\nimport * as editorOptions from '../../common/config/editorOptions.js';\nimport { IEditorContribution } from '../../common/editorCommon.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ITextBufferFactory, ITextModel } from '../../common/model.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { ILanguageFeatureDebounceService, LanguageFeatureDebounceService } from '../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { LanguageFeaturesService } from '../../common/services/languageFeaturesService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { ITreeSitterParserService } from '../../common/services/treeSitterParserService.js';\nimport { ViewModel } from '../../common/viewModel/viewModelImpl.js';\nimport { TestConfiguration } from './config/testConfiguration.js';\nimport { TestCodeEditorService, TestCommandService } from './editorTestServices.js';\nimport { TestTreeSitterParserService } from '../common/services/testTreeSitterService.js';\nimport { TestLanguageConfigurationService } from '../common/modes/testLanguageConfigurationService.js';\nimport { TestEditorWorkerService } from '../common/services/testEditorWorkerService.js';\nimport { TestTextResourcePropertiesService } from '../common/services/testTextResourcePropertiesService.js';\nimport { instantiateTextModel } from '../common/testTextModel.js';\nimport { AccessibilitySupport, IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { TestAccessibilityService } from '../../../platform/accessibility/test/common/testAccessibilityService.js';\nimport { MenuId } from '../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { TestClipboardService } from '../../../platform/clipboard/test/common/testClipboardService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IContextKeyService, IContextKeyServiceTarget } from '../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { TestDialogService } from '../../../platform/dialogs/test/common/testDialogService.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { BrandedService, IInstantiationService, ServiceIdentifier } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { TestInstantiationService } from '../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { MockContextKeyService, MockKeybindingService } from '../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { ILogService, NullLogService } from '../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { TestNotificationService } from '../../../platform/notification/test/common/testNotificationService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { NullOpenerService } from '../../../platform/opener/test/common/nullOpenerService.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryServiceShape } from '../../../platform/telemetry/common/telemetryUtils.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { TestThemeService } from '../../../platform/theme/test/common/testThemeService.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { UndoRedoService } from '../../../platform/undoRedo/common/undoRedoService.js';\n\nexport interface ITestCodeEditor extends IActiveCodeEditor {\n\tgetViewModel(): ViewModel | undefined;\n\tregisterAndInstantiateContribution<T extends IEditorContribution, Services extends BrandedService[]>(id: string, ctor: new (editor: ICodeEditor, ...services: Services) => T): T;\n\tregisterDisposable(disposable: IDisposable): void;\n}\n\nexport class TestCodeEditor extends CodeEditorWidget implements ICodeEditor {\n\n\t//#region testing overrides\n\tprotected override _createConfiguration(isSimpleWidget: boolean, contextMenuId: MenuId, options: Readonly<TestCodeEditorCreationOptions>): EditorConfiguration {\n\t\treturn new TestConfiguration(options);\n\t}\n\tprotected override _createView(viewModel: ViewModel): [View, boolean] {\n\t\t// Never create a view\n\t\treturn [null! as View, false];\n\t}\n\tprivate _hasTextFocus = false;\n\tpublic setHasTextFocus(hasTextFocus: boolean): void {\n\t\tthis._hasTextFocus = hasTextFocus;\n\t}\n\tpublic override hasTextFocus(): boolean {\n\t\treturn this._hasTextFocus;\n\t}\n\t//#endregion\n\n\t//#region Testing utils\n\tpublic getViewModel(): ViewModel | undefined {\n\t\treturn this._modelData ? this._modelData.viewModel : undefined;\n\t}\n\tpublic registerAndInstantiateContribution<T extends IEditorContribution>(id: string, ctor: new (editor: ICodeEditor, ...services: BrandedService[]) => T): T {\n\t\tconst r: T = this._instantiationService.createInstance(ctor, this);\n\t\tthis._contributions.set(id, r);\n\t\treturn r;\n\t}\n\tpublic registerDisposable(disposable: IDisposable): void {\n\t\tthis._register(disposable);\n\t}\n}\n\nclass TestEditorDomElement {\n\tparentElement: IContextKeyServiceTarget | null = null;\n\townerDocument = document;\n\tdocument = document;\n\tsetAttribute(attr: string, value: string): void { }\n\tremoveAttribute(attr: string): void { }\n\thasAttribute(attr: string): boolean { return false; }\n\tgetAttribute(attr: string): string | undefined { return undefined; }\n\taddEventListener(event: string): void { }\n\tremoveEventListener(event: string): void { }\n}\n\nexport interface TestCodeEditorCreationOptions extends editorOptions.IEditorOptions {\n\t/**\n\t * If the editor has text focus.\n\t * Defaults to true.\n\t */\n\thasTextFocus?: boolean;\n\t/**\n\t * Env configuration\n\t */\n\tenvConfig?: ITestEnvConfiguration;\n}\n\nexport interface TestCodeEditorInstantiationOptions extends TestCodeEditorCreationOptions {\n\t/**\n\t * Services to use.\n\t */\n\tserviceCollection?: ServiceCollection;\n}\n\nexport interface ITestEnvConfiguration {\n\textraEditorClassName?: string;\n\touterWidth?: number;\n\touterHeight?: number;\n\temptySelectionClipboard?: boolean;\n\tpixelRatio?: number;\n\taccessibilitySupport?: AccessibilitySupport;\n}\n\nexport function withTestCodeEditor(text: ITextModel | string | string[] | ITextBufferFactory, options: TestCodeEditorInstantiationOptions, callback: (editor: ITestCodeEditor, viewModel: ViewModel, instantiationService: TestInstantiationService) => void): void {\n\treturn _withTestCodeEditor(text, options, callback);\n}\n\nexport async function withAsyncTestCodeEditor(text: ITextModel | string | string[] | ITextBufferFactory, options: TestCodeEditorInstantiationOptions, callback: (editor: ITestCodeEditor, viewModel: ViewModel, instantiationService: TestInstantiationService) => Promise<void>): Promise<void> {\n\treturn _withTestCodeEditor(text, options, callback);\n}\n\nfunction isTextModel(arg: ITextModel | string | string[] | ITextBufferFactory): arg is ITextModel {\n\treturn Boolean(arg && (arg as ITextModel).uri);\n}\n\nfunction _withTestCodeEditor(arg: ITextModel | string | string[] | ITextBufferFactory, options: TestCodeEditorInstantiationOptions, callback: (editor: ITestCodeEditor, viewModel: ViewModel, instantiationService: TestInstantiationService) => void): void;\nfunction _withTestCodeEditor(arg: ITextModel | string | string[] | ITextBufferFactory, options: TestCodeEditorInstantiationOptions, callback: (editor: ITestCodeEditor, viewModel: ViewModel, instantiationService: TestInstantiationService) => Promise<void>): Promise<void>;\nfunction _withTestCodeEditor(arg: ITextModel | string | string[] | ITextBufferFactory, options: TestCodeEditorInstantiationOptions, callback: (editor: ITestCodeEditor, viewModel: ViewModel, instantiationService: TestInstantiationService) => Promise<void> | void): Promise<void> | void {\n\tconst disposables = new DisposableStore();\n\tconst instantiationService = createCodeEditorServices(disposables, options.serviceCollection);\n\tdelete options.serviceCollection;\n\n\t// create a model if necessary\n\tlet model: ITextModel;\n\tif (isTextModel(arg)) {\n\t\tmodel = arg;\n\t} else {\n\t\tmodel = disposables.add(instantiateTextModel(instantiationService, Array.isArray(arg) ? arg.join('\\n') : arg));\n\t}\n\n\tconst editor = disposables.add(instantiateTestCodeEditor(instantiationService, model, options));\n\tconst viewModel = editor.getViewModel()!;\n\tviewModel.setHasFocus(true);\n\tconst result = callback(<ITestCodeEditor>editor, editor.getViewModel()!, instantiationService);\n\tif (result) {\n\t\treturn result.then(() => disposables.dispose());\n\t}\n\n\tdisposables.dispose();\n}\n\nexport function createCodeEditorServices(disposables: Pick<DisposableStore, 'add'>, services: ServiceCollection = new ServiceCollection()): TestInstantiationService {\n\tconst serviceIdentifiers: ServiceIdentifier<any>[] = [];\n\tconst define = <T>(id: ServiceIdentifier<T>, ctor: new (...args: any[]) => T) => {\n\t\tif (!services.has(id)) {\n\t\t\tservices.set(id, new SyncDescriptor(ctor));\n\t\t}\n\t\tserviceIdentifiers.push(id);\n\t};\n\tconst defineInstance = <T>(id: ServiceIdentifier<T>, instance: T) => {\n\t\tif (!services.has(id)) {\n\t\t\tservices.set(id, instance);\n\t\t}\n\t\tserviceIdentifiers.push(id);\n\t};\n\n\tdefine(IAccessibilityService, TestAccessibilityService);\n\tdefine(IKeybindingService, MockKeybindingService);\n\tdefine(IClipboardService, TestClipboardService);\n\tdefine(IEditorWorkerService, TestEditorWorkerService);\n\tdefineInstance(IOpenerService, NullOpenerService);\n\tdefine(INotificationService, TestNotificationService);\n\tdefine(IDialogService, TestDialogService);\n\tdefine(IUndoRedoService, UndoRedoService);\n\tdefine(ILanguageService, LanguageService);\n\tdefine(ILanguageConfigurationService, TestLanguageConfigurationService);\n\tdefine(IConfigurationService, TestConfigurationService);\n\tdefine(ITextResourcePropertiesService, TestTextResourcePropertiesService);\n\tdefine(IThemeService, TestThemeService);\n\tdefine(ILogService, NullLogService);\n\tdefine(IModelService, ModelService);\n\tdefine(ICodeEditorService, TestCodeEditorService);\n\tdefine(IContextKeyService, MockContextKeyService);\n\tdefine(ICommandService, TestCommandService);\n\tdefine(ITelemetryService, NullTelemetryServiceShape);\n\tdefine(IEnvironmentService, class extends mock<IEnvironmentService>() {\n\t\tdeclare readonly _serviceBrand: undefined;\n\t\toverride isBuilt: boolean = true;\n\t\toverride isExtensionDevelopment: boolean = false;\n\t});\n\tdefine(ILanguageFeatureDebounceService, LanguageFeatureDebounceService);\n\tdefine(ILanguageFeaturesService, LanguageFeaturesService);\n\tdefine(ITreeSitterParserService, TestTreeSitterParserService);\n\n\tconst instantiationService = disposables.add(new TestInstantiationService(services, true));\n\tdisposables.add(toDisposable(() => {\n\t\tfor (const id of serviceIdentifiers) {\n\t\t\tconst instanceOrDescriptor = services.get(id);\n\t\t\tif (typeof instanceOrDescriptor.dispose === 'function') {\n\t\t\t\tinstanceOrDescriptor.dispose();\n\t\t\t}\n\t\t}\n\t}));\n\treturn instantiationService;\n}\n\nexport function createTestCodeEditor(model: ITextModel | undefined, options: TestCodeEditorInstantiationOptions = {}): ITestCodeEditor {\n\tconst disposables = new DisposableStore();\n\tconst instantiationService = createCodeEditorServices(disposables, options.serviceCollection);\n\tdelete options.serviceCollection;\n\n\tconst editor = instantiateTestCodeEditor(instantiationService, model || null, options);\n\teditor.registerDisposable(disposables);\n\treturn editor;\n}\n\nexport function instantiateTestCodeEditor(instantiationService: IInstantiationService, model: ITextModel | null, options: TestCodeEditorCreationOptions = {}): ITestCodeEditor {\n\tconst codeEditorWidgetOptions: ICodeEditorWidgetOptions = {\n\t\tcontributions: []\n\t};\n\tconst editor = instantiationService.createInstance(\n\t\tTestCodeEditor,\n\t\t<HTMLElement><any>new TestEditorDomElement(),\n\t\toptions,\n\t\tcodeEditorWidgetOptions\n\t);\n\tif (typeof options.hasTextFocus === 'undefined') {\n\t\toptions.hasTextFocus = true;\n\t}\n\teditor.setHasTextFocus(options.hasTextFocus);\n\teditor.setModel(model);\n\tconst viewModel = editor.getViewModel();\n\tviewModel?.setHasFocus(options.hasTextFocus);\n\treturn <ITestCodeEditor>editor;\n}\n"],
  "mappings": "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",
  "names": []
}
