{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/services/textResourceConfigurationService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { TestConfigurationService } from '../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { TestInstantiationService } from '../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { IConfigurationValue, IConfigurationService, ConfigurationTarget } from '../../../../platform/configuration/common/configuration.js';\nimport { TextResourceConfigurationService } from '../../../common/services/textResourceConfigurationService.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\n\nsuite('TextResourceConfigurationService - Update', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet instantiationService: TestInstantiationService;\n\tlet configurationValue: IConfigurationValue<any> = {};\n\tlet updateArgs: any[];\n\tconst configurationService = new class extends TestConfigurationService {\n\t\toverride inspect() {\n\t\t\treturn configurationValue;\n\t\t}\n\t\toverride updateValue() {\n\t\t\tupdateArgs = [...arguments];\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}();\n\tlet language: string | null = null;\n\tlet testObject: TextResourceConfigurationService;\n\n\tsetup(() => {\n\t\tinstantiationService = disposables.add(new TestInstantiationService());\n\t\tinstantiationService.stub(IModelService, { getModel() { return null; } });\n\t\tinstantiationService.stub(ILanguageService, { guessLanguageIdByFilepathOrFirstLine() { return language; } });\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\ttestObject = disposables.add(instantiationService.createInstance(TextResourceConfigurationService));\n\t});\n\n\ttest('updateValue writes without target and overrides when no language is defined', async () => {\n\t\tconst resource = URI.file('someFile');\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes with target and without overrides when no language is defined', async () => {\n\t\tconst resource = URI.file('someFile');\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.USER_LOCAL);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into given memory target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '1' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.MEMORY);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.MEMORY]);\n\t});\n\n\ttest('updateValue writes into given workspace target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.WORKSPACE);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.WORKSPACE]);\n\t});\n\n\ttest('updateValue writes into given user target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.USER);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.USER]);\n\t});\n\n\ttest('updateValue writes into given workspace folder target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '2', override: '1' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.WORKSPACE_FOLDER);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.WORKSPACE_FOLDER]);\n\t});\n\n\ttest('updateValue writes into derived workspace folder target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.WORKSPACE_FOLDER]);\n\t});\n\n\ttest('updateValue writes into derived workspace folder target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspace: { value: '2', override: '1' },\n\t\t\tworkspaceFolder: { value: '2', override: '2' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.WORKSPACE_FOLDER]);\n\t});\n\n\ttest('updateValue writes into derived workspace target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspace: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.WORKSPACE]);\n\t});\n\n\ttest('updateValue writes into derived workspace target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspace: { value: '2', override: '2' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.WORKSPACE]);\n\t});\n\n\ttest('updateValue writes into derived workspace target with overrides and value defined in folder', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1', override: '3' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspace: { value: '2', override: '2' },\n\t\t\tworkspaceFolder: { value: '2' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.WORKSPACE]);\n\t});\n\n\ttest('updateValue writes into derived user remote target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tuserRemote: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.USER_REMOTE]);\n\t});\n\n\ttest('updateValue writes into derived user remote target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tuserRemote: { value: '2', override: '3' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_REMOTE]);\n\t});\n\n\ttest('updateValue writes into derived user remote target with overrides and value defined in workspace', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tuserRemote: { value: '2', override: '3' },\n\t\t\tworkspace: { value: '3' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_REMOTE]);\n\t});\n\n\ttest('updateValue writes into derived user remote target with overrides and value defined in workspace folder', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2', override: '1' },\n\t\t\tuserRemote: { value: '2', override: '3' },\n\t\t\tworkspace: { value: '3' },\n\t\t\tworkspaceFolder: { value: '3' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_REMOTE]);\n\t});\n\n\ttest('updateValue writes into derived user target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into derived user target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2', override: '3' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', '2');\n\t\tassert.deepStrictEqual(updateArgs, ['a', '2', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into derived user target with overrides and value is defined in remote', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2', override: '3' },\n\t\t\tuserRemote: { value: '3' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', '2');\n\t\tassert.deepStrictEqual(updateArgs, ['a', '2', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into derived user target with overrides and value is defined in workspace', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2', override: '3' },\n\t\t\tworkspaceValue: { value: '3' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', '2');\n\t\tassert.deepStrictEqual(updateArgs, ['a', '2', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into derived user target with overrides and value is defined in workspace folder', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1', override: '3' },\n\t\t\tuserLocal: { value: '2', override: '3' },\n\t\t\tuserRemote: { value: '3' },\n\t\t\tworkspaceFolderValue: { value: '3' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', '2');\n\t\tassert.deepStrictEqual(updateArgs, ['a', '2', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into derived user target when overridden in default and not in user', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1', override: '3' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\toverrideIdentifiers: [language]\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', '2');\n\t\tassert.deepStrictEqual(updateArgs, ['a', '2', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue when not changed', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: undefined }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n});\n"],
  "mappings": "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",
  "names": []
}
