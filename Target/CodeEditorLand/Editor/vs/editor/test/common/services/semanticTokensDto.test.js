import d from"assert";import{encodeSemanticTokensDto as y,decodeSemanticTokensDto as i}from"../../../common/services/semanticTokensDto.js";import{VSBuffer as S}from"../../../../base/common/buffer.js";import{ensureNoDisposablesAreLeakedInTestSuite as p}from"../../../../base/test/common/utils.js";suite("SemanticTokensDto",()=>{p();function c(t){const e=[];for(let n=0,r=t.length;n<r;n++)e[n]=t[n];return e}function s(t,e){const n=r=>({id:r.id,type:r.type,data:c(r.data)});d.deepStrictEqual(n(t),n(e))}function f(t,e){const n=a=>a.data?{start:a.start,deleteCount:a.deleteCount,data:c(a.data)}:a,r=a=>({id:a.id,type:a.type,deltas:a.deltas.map(n)});d.deepStrictEqual(r(t),r(e))}function u(t){const e=i(y(t));t.type==="full"&&e.type==="full"?s(e,t):t.type==="delta"&&e.type==="delta"?f(e,t):d.fail("wrong type")}test("full encoding",()=>{u({id:12,type:"full",data:new Uint32Array([(1<<24)+(2<<16)+768+4])})}),test("delta encoding",()=>{u({id:12,type:"delta",deltas:[{start:0,deleteCount:4,data:void 0},{start:15,deleteCount:0,data:new Uint32Array([(1<<24)+(2<<16)+768+4])},{start:27,deleteCount:5,data:new Uint32Array([(1<<24)+(2<<16)+768+4,1,2,3,4,5,6,7,8,9])}]})}),test("partial array buffer",()=>{const t=new Uint32Array([16909060,1,2,3,4,5,16909060]);u({id:12,type:"delta",deltas:[{start:0,deleteCount:4,data:t.subarray(0,1)},{start:15,deleteCount:0,data:t.subarray(1,t.length)}]})}),test("issue #94521: unusual backing array buffer",()=>{function t(a,o,l){const m=new Uint8Array(o+a.byteLength+l);return m.set(a,o),m.subarray(o,o+a.byteLength)}function e(a,o,l){return S.wrap(t(a.buffer,o,l))}const n={id:5,type:"full",data:new Uint32Array([1,2,3,4,5])},r=y(n);s(i(e(r,1,1)),n),s(i(e(r,1,4)),n),s(i(e(r,4,1)),n),s(i(e(r,4,4)),n)})});
