{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/services/testTextResourcePropertiesService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from '../../../../base/common/platform.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextResourcePropertiesService } from '../../../common/services/textResourceConfiguration.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\n\nexport class TestTextResourcePropertiesService implements ITextResourcePropertiesService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\n\tgetEOL(resource: URI, language?: string): string {\n\t\tconst eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n\t\tif (eol && typeof eol === 'string' && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn (platform.isLinux || platform.isMacintosh) ? '\\n' : '\\r\\n';\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,cAAc;AAC1B,SAAS,WAAW;AACpB,SAAS,sCAAsC;AAC/C,SAAS,6BAA6B;AAE/B,IAAM,oCAAN,MAAkF;AAAA,EAIxF,YACyC,sBACvC;AADuC;AAAA,EAEzC;AAAA,EAjBD,OAUyF;AAAA;AAAA;AAAA,EASxF,OAAO,UAAe,UAA2B;AAChD,UAAM,MAAM,KAAK,qBAAqB,SAAS,aAAa,EAAE,oBAAoB,UAAU,SAAS,CAAC;AACtG,QAAI,OAAO,OAAO,QAAQ,YAAY,QAAQ,QAAQ;AACrD,aAAO;AAAA,IACR;AACA,WAAQ,SAAS,WAAW,SAAS,cAAe,OAAO;AAAA,EAC5D;AACD;AAhBa,oCAAN;AAAA,EAKJ;AAAA,GALU;",
  "names": []
}
