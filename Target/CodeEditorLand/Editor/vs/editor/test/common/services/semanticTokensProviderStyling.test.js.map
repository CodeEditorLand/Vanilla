{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/services/semanticTokensProviderStyling.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { SparseMultilineTokens } from '../../../common/tokens/sparseMultilineTokens.js';\nimport { MetadataConsts } from '../../../common/encodedTokenAttributes.js';\nimport { SemanticTokensProviderStyling, toMultilineTokens2 } from '../../../common/services/semanticTokensProviderStyling.js';\nimport { createModelServices } from '../testTextModel.js';\nimport { TestInstantiationService } from '../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IColorTheme, IThemeService, ITokenStyle } from '../../../../platform/theme/common/themeService.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\nsuite('ModelService', () => {\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\tlet languageService: ILanguageService;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = createModelServices(disposables);\n\t\tlanguageService = instantiationService.get(ILanguageService);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('issue #134973: invalid semantic tokens should be handled better', () => {\n\t\tconst languageId = 'java';\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tconst legend = {\n\t\t\ttokenTypes: ['st0', 'st1', 'st2', 'st3', 'st4', 'st5', 'st6', 'st7', 'st8', 'st9', 'st10'],\n\t\t\ttokenModifiers: []\n\t\t};\n\t\tinstantiationService.stub(IThemeService, {\n\t\t\tgetColorTheme() {\n\t\t\t\treturn <IColorTheme>{\n\t\t\t\t\tgetTokenStyleMetadata: (tokenType, tokenModifiers, languageId): ITokenStyle => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tforeground: parseInt(tokenType.substr(2), 10),\n\t\t\t\t\t\t\tbold: undefined,\n\t\t\t\t\t\t\tunderline: undefined,\n\t\t\t\t\t\t\tstrikethrough: undefined,\n\t\t\t\t\t\t\titalic: undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tconst styling = instantiationService.createInstance(SemanticTokensProviderStyling, legend);\n\t\tconst badTokens = {\n\t\t\tdata: new Uint32Array([\n\t\t\t\t0, 13, 16, 1, 0,\n\t\t\t\t1, 2, 6, 2, 0,\n\t\t\t\t0, 7, 6, 3, 0,\n\t\t\t\t0, 15, 8, 4, 0,\n\t\t\t\t0, 17, 1, 5, 0,\n\t\t\t\t0, 7, 5, 6, 0,\n\t\t\t\t1, 12, 8, 7, 0,\n\t\t\t\t0, 19, 5, 8, 0,\n\t\t\t\t0, 7, 1, 9, 0,\n\t\t\t\t0, 4294967294, 5, 10, 0\n\t\t\t])\n\t\t};\n\t\tconst result = toMultilineTokens2(badTokens, styling, languageId);\n\t\tconst expected = SparseMultilineTokens.create(1, new Uint32Array([\n\t\t\t0, 13, 29, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (1 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t1, 2, 8, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (2 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t1, 9, 15, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (3 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t1, 24, 32, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (4 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t1, 41, 42, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (5 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t1, 48, 53, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (6 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t2, 12, 20, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (7 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t2, 31, 36, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (8 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t2, 38, 39, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (9 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t]));\n\t\tassert.deepStrictEqual(result.toString(), expected.toString());\n\t});\n\n\ttest('issue #148651: VSCode UI process can hang if a semantic token with negative values is returned by language service', () => {\n\t\tconst languageId = 'dockerfile';\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tconst legend = {\n\t\t\ttokenTypes: ['st0', 'st1', 'st2', 'st3', 'st4', 'st5', 'st6', 'st7', 'st8', 'st9'],\n\t\t\ttokenModifiers: ['stm0', 'stm1', 'stm2']\n\t\t};\n\t\tinstantiationService.stub(IThemeService, {\n\t\t\tgetColorTheme() {\n\t\t\t\treturn <IColorTheme>{\n\t\t\t\t\tgetTokenStyleMetadata: (tokenType, tokenModifiers, languageId): ITokenStyle => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tforeground: parseInt(tokenType.substr(2), 10),\n\t\t\t\t\t\t\tbold: undefined,\n\t\t\t\t\t\t\tunderline: undefined,\n\t\t\t\t\t\t\tstrikethrough: undefined,\n\t\t\t\t\t\t\titalic: undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tconst styling = instantiationService.createInstance(SemanticTokensProviderStyling, legend);\n\t\tconst badTokens = {\n\t\t\tdata: new Uint32Array([\n\t\t\t\t0, 0, 3, 0, 0,\n\t\t\t\t0, 4, 2, 2, 0,\n\t\t\t\t0, 2, 3, 8, 0,\n\t\t\t\t0, 3, 1, 9, 0,\n\t\t\t\t0, 1, 1, 10, 0,\n\t\t\t\t0, 1, 4, 8, 0,\n\t\t\t\t0, 4, 4294967292, 2, 0,\n\t\t\t\t0, 4294967292, 4294967294, 8, 0,\n\t\t\t\t0, 4294967294, 1, 9, 0,\n\t\t\t\t0, 1, 1, 10, 0,\n\t\t\t\t0, 1, 3, 8, 0,\n\t\t\t\t0, 3, 4294967291, 8, 0,\n\t\t\t\t0, 4294967291, 1, 9, 0,\n\t\t\t\t0, 1, 1, 10, 0,\n\t\t\t\t0, 1, 4, 8, 0\n\t\t\t])\n\t\t};\n\t\tconst result = toMultilineTokens2(badTokens, styling, languageId);\n\t\tconst expected = SparseMultilineTokens.create(1, new Uint32Array([\n\t\t\t0, 4, 6, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (1 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t0, 6, 9, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (2 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t0, 9, 10, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (3 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t0, 11, 15, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (4 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t]));\n\t\tassert.deepStrictEqual(result.toString(), expected.toString());\n\t});\n\n\ttest('issue #149130: vscode freezes because of Bracket Pair Colorization', () => {\n\t\tconst languageId = 'q';\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tconst legend = {\n\t\t\ttokenTypes: ['st0', 'st1', 'st2', 'st3', 'st4', 'st5'],\n\t\t\ttokenModifiers: ['stm0', 'stm1', 'stm2']\n\t\t};\n\t\tinstantiationService.stub(IThemeService, {\n\t\t\tgetColorTheme() {\n\t\t\t\treturn <IColorTheme>{\n\t\t\t\t\tgetTokenStyleMetadata: (tokenType, tokenModifiers, languageId): ITokenStyle => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tforeground: parseInt(tokenType.substr(2), 10),\n\t\t\t\t\t\t\tbold: undefined,\n\t\t\t\t\t\t\tunderline: undefined,\n\t\t\t\t\t\t\tstrikethrough: undefined,\n\t\t\t\t\t\t\titalic: undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tconst styling = instantiationService.createInstance(SemanticTokensProviderStyling, legend);\n\t\tconst badTokens = {\n\t\t\tdata: new Uint32Array([\n\t\t\t\t0, 11, 1, 1, 0,\n\t\t\t\t0, 4, 1, 1, 0,\n\t\t\t\t0, 4294967289, 1, 1, 0\n\t\t\t])\n\t\t};\n\t\tconst result = toMultilineTokens2(badTokens, styling, languageId);\n\t\tconst expected = SparseMultilineTokens.create(1, new Uint32Array([\n\t\t\t0, 11, 12, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (1 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t\t0, 15, 16, (MetadataConsts.SEMANTIC_USE_FOREGROUND | (1 << MetadataConsts.FOREGROUND_OFFSET)),\n\t\t]));\n\t\tassert.deepStrictEqual(result.toString(), expected.toString());\n\t});\n});\n"],
  "mappings": "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",
  "names": ["languageId"]
}
