{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/services/modelService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { DefaultEndOfLine, ITextBuffer, ITextBufferFactory, ITextSnapshot } from '../../../common/model.js';\nimport { createTextBuffer } from '../../../common/model/textModel.js';\nimport { ModelService } from '../../../common/services/modelService.js';\nimport { TestConfigurationService } from '../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { createModelServices, createTextModel } from '../testTextModel.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { TestInstantiationService } from '../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\nconst GENERATE_TESTS = false;\n\nsuite('ModelService', () => {\n\tlet disposables: DisposableStore;\n\tlet modelService: IModelService;\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\n\t\tconst configService = new TestConfigurationService();\n\t\tconfigService.setUserConfiguration('files', { 'eol': '\\n' });\n\t\tconfigService.setUserConfiguration('files', { 'eol': '\\r\\n' }, URI.file(platform.isWindows ? 'c:\\\\myroot' : '/myroot'));\n\n\t\tinstantiationService = createModelServices(disposables, [\n\t\t\t[IConfigurationService, configService]\n\t\t]);\n\t\tmodelService = instantiationService.get(IModelService);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('EOL setting respected depending on root', () => {\n\t\tconst model1 = modelService.createModel('farboo', null);\n\t\tconst model2 = modelService.createModel('farboo', null, URI.file(platform.isWindows ? 'c:\\\\myroot\\\\myfile.txt' : '/myroot/myfile.txt'));\n\t\tconst model3 = modelService.createModel('farboo', null, URI.file(platform.isWindows ? 'c:\\\\other\\\\myfile.txt' : '/other/myfile.txt'));\n\n\t\tassert.strictEqual(model1.getOptions().defaultEOL, DefaultEndOfLine.LF);\n\t\tassert.strictEqual(model2.getOptions().defaultEOL, DefaultEndOfLine.CRLF);\n\t\tassert.strictEqual(model3.getOptions().defaultEOL, DefaultEndOfLine.LF);\n\n\t\tmodel1.dispose();\n\t\tmodel2.dispose();\n\t\tmodel3.dispose();\n\t});\n\n\ttest('_computeEdits no change', function () {\n\n\t\tconst model = disposables.add(createTextModel(\n\t\t\t[\n\t\t\t\t'This is line one', //16\n\t\t\t\t'and this is line number two', //27\n\t\t\t\t'it is followed by #3', //20\n\t\t\t\t'and finished with the fourth.', //29\n\t\t\t].join('\\n')\n\t\t));\n\n\t\tconst textBuffer = createAndRegisterTextBuffer(\n\t\t\tdisposables,\n\t\t\t[\n\t\t\t\t'This is line one', //16\n\t\t\t\t'and this is line number two', //27\n\t\t\t\t'it is followed by #3', //20\n\t\t\t\t'and finished with the fourth.', //29\n\t\t\t].join('\\n'),\n\t\t\tDefaultEndOfLine.LF\n\t\t);\n\n\t\tconst actual = ModelService._computeEdits(model, textBuffer);\n\n\t\tassert.deepStrictEqual(actual, []);\n\t});\n\n\ttest('_computeEdits first line changed', function () {\n\n\t\tconst model = disposables.add(createTextModel(\n\t\t\t[\n\t\t\t\t'This is line one', //16\n\t\t\t\t'and this is line number two', //27\n\t\t\t\t'it is followed by #3', //20\n\t\t\t\t'and finished with the fourth.', //29\n\t\t\t].join('\\n')\n\t\t));\n\n\t\tconst textBuffer = createAndRegisterTextBuffer(\n\t\t\tdisposables,\n\t\t\t[\n\t\t\t\t'This is line One', //16\n\t\t\t\t'and this is line number two', //27\n\t\t\t\t'it is followed by #3', //20\n\t\t\t\t'and finished with the fourth.', //29\n\t\t\t].join('\\n'),\n\t\t\tDefaultEndOfLine.LF\n\t\t);\n\n\t\tconst actual = ModelService._computeEdits(model, textBuffer);\n\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tEditOperation.replaceMove(new Range(1, 1, 2, 1), 'This is line One\\n')\n\t\t]);\n\t});\n\n\ttest('_computeEdits EOL changed', function () {\n\n\t\tconst model = disposables.add(createTextModel(\n\t\t\t[\n\t\t\t\t'This is line one', //16\n\t\t\t\t'and this is line number two', //27\n\t\t\t\t'it is followed by #3', //20\n\t\t\t\t'and finished with the fourth.', //29\n\t\t\t].join('\\n')\n\t\t));\n\n\t\tconst textBuffer = createAndRegisterTextBuffer(\n\t\t\tdisposables,\n\t\t\t[\n\t\t\t\t'This is line one', //16\n\t\t\t\t'and this is line number two', //27\n\t\t\t\t'it is followed by #3', //20\n\t\t\t\t'and finished with the fourth.', //29\n\t\t\t].join('\\r\\n'),\n\t\t\tDefaultEndOfLine.LF\n\t\t);\n\n\t\tconst actual = ModelService._computeEdits(model, textBuffer);\n\n\t\tassert.deepStrictEqual(actual, []);\n\t});\n\n\ttest('_computeEdits EOL and other change 1', function () {\n\n\t\tconst model = disposables.add(createTextModel(\n\t\t\t[\n\t\t\t\t'This is line one', //16\n\t\t\t\t'and this is line number two', //27\n\t\t\t\t'it is followed by #3', //20\n\t\t\t\t'and finished with the fourth.', //29\n\t\t\t].join('\\n')\n\t\t));\n\n\t\tconst textBuffer = createAndRegisterTextBuffer(\n\t\t\tdisposables,\n\t\t\t[\n\t\t\t\t'This is line One', //16\n\t\t\t\t'and this is line number two', //27\n\t\t\t\t'It is followed by #3', //20\n\t\t\t\t'and finished with the fourth.', //29\n\t\t\t].join('\\r\\n'),\n\t\t\tDefaultEndOfLine.LF\n\t\t);\n\n\t\tconst actual = ModelService._computeEdits(model, textBuffer);\n\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tEditOperation.replaceMove(\n\t\t\t\tnew Range(1, 1, 4, 1),\n\t\t\t\t[\n\t\t\t\t\t'This is line One',\n\t\t\t\t\t'and this is line number two',\n\t\t\t\t\t'It is followed by #3',\n\t\t\t\t\t''\n\t\t\t\t].join('\\r\\n')\n\t\t\t)\n\t\t]);\n\t});\n\n\ttest('_computeEdits EOL and other change 2', function () {\n\n\t\tconst model = disposables.add(createTextModel(\n\t\t\t[\n\t\t\t\t'package main',\t// 1\n\t\t\t\t'func foo() {',\t// 2\n\t\t\t\t'}'\t\t\t\t// 3\n\t\t\t].join('\\n')\n\t\t));\n\n\t\tconst textBuffer = createAndRegisterTextBuffer(\n\t\t\tdisposables,\n\t\t\t[\n\t\t\t\t'package main',\t// 1\n\t\t\t\t'func foo() {',\t// 2\n\t\t\t\t'}',\t\t\t// 3\n\t\t\t\t''\n\t\t\t].join('\\r\\n'),\n\t\t\tDefaultEndOfLine.LF\n\t\t);\n\n\t\tconst actual = ModelService._computeEdits(model, textBuffer);\n\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tEditOperation.replaceMove(new Range(3, 2, 3, 2), '\\r\\n')\n\t\t]);\n\t});\n\n\ttest('generated1', () => {\n\t\tconst file1 = ['pram', 'okctibad', 'pjuwtemued', 'knnnm', 'u', ''];\n\t\tconst file2 = ['tcnr', 'rxwlicro', 'vnzy', '', '', 'pjzcogzur', 'ptmxyp', 'dfyshia', 'pee', 'ygg'];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('generated2', () => {\n\t\tconst file1 = ['', 'itls', 'hrilyhesv', ''];\n\t\tconst file2 = ['vdl', '', 'tchgz', 'bhx', 'nyl'];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('generated3', () => {\n\t\tconst file1 = ['ubrbrcv', 'wv', 'xodspybszt', 's', 'wednjxm', 'fklajt', 'fyfc', 'lvejgge', 'rtpjlodmmk', 'arivtgmjdm'];\n\t\tconst file2 = ['s', 'qj', 'tu', 'ur', 'qerhjjhyvx', 't'];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('generated4', () => {\n\t\tconst file1 = ['ig', 'kh', 'hxegci', 'smvker', 'pkdmjjdqnv', 'vgkkqqx', '', 'jrzeb'];\n\t\tconst file2 = ['yk', ''];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('does insertions in the middle of the document', () => {\n\t\tconst file1 = [\n\t\t\t'line 1',\n\t\t\t'line 2',\n\t\t\t'line 3'\n\t\t];\n\t\tconst file2 = [\n\t\t\t'line 1',\n\t\t\t'line 2',\n\t\t\t'line 5',\n\t\t\t'line 3'\n\t\t];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('does insertions at the end of the document', () => {\n\t\tconst file1 = [\n\t\t\t'line 1',\n\t\t\t'line 2',\n\t\t\t'line 3'\n\t\t];\n\t\tconst file2 = [\n\t\t\t'line 1',\n\t\t\t'line 2',\n\t\t\t'line 3',\n\t\t\t'line 4'\n\t\t];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('does insertions at the beginning of the document', () => {\n\t\tconst file1 = [\n\t\t\t'line 1',\n\t\t\t'line 2',\n\t\t\t'line 3'\n\t\t];\n\t\tconst file2 = [\n\t\t\t'line 0',\n\t\t\t'line 1',\n\t\t\t'line 2',\n\t\t\t'line 3'\n\t\t];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('does replacements', () => {\n\t\tconst file1 = [\n\t\t\t'line 1',\n\t\t\t'line 2',\n\t\t\t'line 3'\n\t\t];\n\t\tconst file2 = [\n\t\t\t'line 1',\n\t\t\t'line 7',\n\t\t\t'line 3'\n\t\t];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('does deletions', () => {\n\t\tconst file1 = [\n\t\t\t'line 1',\n\t\t\t'line 2',\n\t\t\t'line 3'\n\t\t];\n\t\tconst file2 = [\n\t\t\t'line 1',\n\t\t\t'line 3'\n\t\t];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('does insert, replace, and delete', () => {\n\t\tconst file1 = [\n\t\t\t'line 1',\n\t\t\t'line 2',\n\t\t\t'line 3',\n\t\t\t'line 4',\n\t\t\t'line 5',\n\t\t];\n\t\tconst file2 = [\n\t\t\t'line 0', // insert line 0\n\t\t\t'line 1',\n\t\t\t'replace line 2', // replace line 2\n\t\t\t'line 3',\n\t\t\t// delete line 4\n\t\t\t'line 5',\n\t\t];\n\t\tassertComputeEdits(file1, file2);\n\t});\n\n\ttest('maintains undo for same resource and same content', () => {\n\t\tconst resource = URI.parse('file://test.txt');\n\n\t\t// create a model\n\t\tconst model1 = modelService.createModel('text', null, resource);\n\t\t// make an edit\n\t\tmodel1.pushEditOperations(null, [{ range: new Range(1, 5, 1, 5), text: '1' }], () => [new Selection(1, 5, 1, 5)]);\n\t\tassert.strictEqual(model1.getValue(), 'text1');\n\t\t// dispose it\n\t\tmodelService.destroyModel(resource);\n\n\t\t// create a new model with the same content\n\t\tconst model2 = modelService.createModel('text1', null, resource);\n\t\t// undo\n\t\tmodel2.undo();\n\t\tassert.strictEqual(model2.getValue(), 'text');\n\t\t// dispose it\n\t\tmodelService.destroyModel(resource);\n\t});\n\n\ttest('maintains version id and alternative version id for same resource and same content', () => {\n\t\tconst resource = URI.parse('file://test.txt');\n\n\t\t// create a model\n\t\tconst model1 = modelService.createModel('text', null, resource);\n\t\t// make an edit\n\t\tmodel1.pushEditOperations(null, [{ range: new Range(1, 5, 1, 5), text: '1' }], () => [new Selection(1, 5, 1, 5)]);\n\t\tassert.strictEqual(model1.getValue(), 'text1');\n\t\tconst versionId = model1.getVersionId();\n\t\tconst alternativeVersionId = model1.getAlternativeVersionId();\n\t\t// dispose it\n\t\tmodelService.destroyModel(resource);\n\n\t\t// create a new model with the same content\n\t\tconst model2 = modelService.createModel('text1', null, resource);\n\t\tassert.strictEqual(model2.getVersionId(), versionId);\n\t\tassert.strictEqual(model2.getAlternativeVersionId(), alternativeVersionId);\n\t\t// dispose it\n\t\tmodelService.destroyModel(resource);\n\t});\n\n\ttest('does not maintain undo for same resource and different content', () => {\n\t\tconst resource = URI.parse('file://test.txt');\n\n\t\t// create a model\n\t\tconst model1 = modelService.createModel('text', null, resource);\n\t\t// make an edit\n\t\tmodel1.pushEditOperations(null, [{ range: new Range(1, 5, 1, 5), text: '1' }], () => [new Selection(1, 5, 1, 5)]);\n\t\tassert.strictEqual(model1.getValue(), 'text1');\n\t\t// dispose it\n\t\tmodelService.destroyModel(resource);\n\n\t\t// create a new model with the same content\n\t\tconst model2 = modelService.createModel('text2', null, resource);\n\t\t// undo\n\t\tmodel2.undo();\n\t\tassert.strictEqual(model2.getValue(), 'text2');\n\t\t// dispose it\n\t\tmodelService.destroyModel(resource);\n\t});\n\n\ttest('setValue should clear undo stack', () => {\n\t\tconst resource = URI.parse('file://test.txt');\n\n\t\tconst model = modelService.createModel('text', null, resource);\n\t\tmodel.pushEditOperations(null, [{ range: new Range(1, 5, 1, 5), text: '1' }], () => [new Selection(1, 5, 1, 5)]);\n\t\tassert.strictEqual(model.getValue(), 'text1');\n\n\t\tmodel.setValue('text2');\n\t\tmodel.undo();\n\t\tassert.strictEqual(model.getValue(), 'text2');\n\t\t// dispose it\n\t\tmodelService.destroyModel(resource);\n\t});\n});\n\nfunction assertComputeEdits(lines1: string[], lines2: string[]): void {\n\tconst model = createTextModel(lines1.join('\\n'));\n\tconst { disposable, textBuffer } = createTextBuffer(lines2.join('\\n'), DefaultEndOfLine.LF);\n\n\t// compute required edits\n\t// let start = Date.now();\n\tconst edits = ModelService._computeEdits(model, textBuffer);\n\t// console.log(`took ${Date.now() - start} ms.`);\n\n\t// apply edits\n\tmodel.pushEditOperations([], edits, null);\n\n\tassert.strictEqual(model.getValue(), lines2.join('\\n'));\n\tdisposable.dispose();\n\tmodel.dispose();\n}\n\nfunction getRandomInt(min: number, max: number): number {\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomString(minLength: number, maxLength: number): string {\n\tconst length = getRandomInt(minLength, maxLength);\n\tconst t = new StringBuilder(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tt.appendASCIICharCode(getRandomInt(CharCode.a, CharCode.z));\n\t}\n\treturn t.build();\n}\n\nfunction generateFile(small: boolean): string[] {\n\tconst lineCount = getRandomInt(1, small ? 3 : 10000);\n\tconst lines: string[] = [];\n\tfor (let i = 0; i < lineCount; i++) {\n\t\tlines.push(getRandomString(0, small ? 3 : 10000));\n\t}\n\treturn lines;\n}\n\nif (GENERATE_TESTS) {\n\tlet number = 1;\n\twhile (true) {\n\n\t\tconsole.log('------TEST: ' + number++);\n\n\t\tconst file1 = generateFile(true);\n\t\tconst file2 = generateFile(true);\n\n\t\tconsole.log('------TEST GENERATED');\n\n\t\ttry {\n\t\t\tassertComputeEdits(file1, file2);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tconsole.log(`\nconst file1 = ${JSON.stringify(file1).replace(/\"/g, '\\'')};\nconst file2 = ${JSON.stringify(file2).replace(/\"/g, '\\'')};\nassertComputeEdits(file1, file2);\n`);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction createAndRegisterTextBuffer(store: DisposableStore, value: string | ITextBufferFactory | ITextSnapshot, defaultEOL: DefaultEndOfLine): ITextBuffer {\n\tconst { disposable, textBuffer } = createTextBuffer(value, defaultEOL);\n\tstore.add(disposable);\n\treturn textBuffer;\n}\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,gBAAgB;AACzB,YAAY,cAAc;AAC1B,SAAS,WAAW;AACpB,SAAS,qBAAqB;AAC9B,SAAS,aAAa;AACtB,SAAS,iBAAiB;AAC1B,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB,aAAa,oBAAoB,qBAAqB;AACjF,SAAS,wBAAwB;AACjC,SAAS,oBAAoB;AAC7B,SAAS,gCAAgC;AACzC,SAAS,qBAAqB,uBAAuB;AACrD,SAAS,uBAAuB;AAChC,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC,SAAS,+CAA+C;AAExD,MAAM,iBAAiB;AAEvB,MAAM,gBAAgB,MAAM;AAC3B,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,QAAM,MAAM;AACX,kBAAc,IAAI,gBAAgB;AAElC,UAAM,gBAAgB,IAAI,yBAAyB;AACnD,kBAAc,qBAAqB,SAAS,EAAE,OAAO,KAAK,CAAC;AAC3D,kBAAc,qBAAqB,SAAS,EAAE,OAAO,OAAO,GAAG,IAAI,KAAK,SAAS,YAAY,eAAe,SAAS,CAAC;AAEtH,2BAAuB,oBAAoB,aAAa;AAAA,MACvD,CAAC,uBAAuB,aAAa;AAAA,IACtC,CAAC;AACD,mBAAe,qBAAqB,IAAI,aAAa;AAAA,EACtD,CAAC;AAED,WAAS,MAAM;AACd,gBAAY,QAAQ;AAAA,EACrB,CAAC;AAED,0CAAwC;AAExC,OAAK,2CAA2C,MAAM;AACrD,UAAM,SAAS,aAAa,YAAY,UAAU,IAAI;AACtD,UAAM,SAAS,aAAa,YAAY,UAAU,MAAM,IAAI,KAAK,SAAS,YAAY,2BAA2B,oBAAoB,CAAC;AACtI,UAAM,SAAS,aAAa,YAAY,UAAU,MAAM,IAAI,KAAK,SAAS,YAAY,0BAA0B,mBAAmB,CAAC;AAEpI,WAAO,YAAY,OAAO,WAAW,EAAE,YAAY,iBAAiB,EAAE;AACtE,WAAO,YAAY,OAAO,WAAW,EAAE,YAAY,iBAAiB,IAAI;AACxE,WAAO,YAAY,OAAO,WAAW,EAAE,YAAY,iBAAiB,EAAE;AAEtE,WAAO,QAAQ;AACf,WAAO,QAAQ;AACf,WAAO,QAAQ;AAAA,EAChB,CAAC;AAED,OAAK,2BAA2B,WAAY;AAE3C,UAAM,QAAQ,YAAY,IAAI;AAAA,MAC7B;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACD,EAAE,KAAK,IAAI;AAAA,IACZ,CAAC;AAED,UAAM,aAAa;AAAA,MAClB;AAAA,MACA;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACD,EAAE,KAAK,IAAI;AAAA,MACX,iBAAiB;AAAA,IAClB;AAEA,UAAM,SAAS,aAAa,cAAc,OAAO,UAAU;AAE3D,WAAO,gBAAgB,QAAQ,CAAC,CAAC;AAAA,EAClC,CAAC;AAED,OAAK,oCAAoC,WAAY;AAEpD,UAAM,QAAQ,YAAY,IAAI;AAAA,MAC7B;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACD,EAAE,KAAK,IAAI;AAAA,IACZ,CAAC;AAED,UAAM,aAAa;AAAA,MAClB;AAAA,MACA;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACD,EAAE,KAAK,IAAI;AAAA,MACX,iBAAiB;AAAA,IAClB;AAEA,UAAM,SAAS,aAAa,cAAc,OAAO,UAAU;AAE3D,WAAO,gBAAgB,QAAQ;AAAA,MAC9B,cAAc,YAAY,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,oBAAoB;AAAA,IACtE,CAAC;AAAA,EACF,CAAC;AAED,OAAK,6BAA6B,WAAY;AAE7C,UAAM,QAAQ,YAAY,IAAI;AAAA,MAC7B;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACD,EAAE,KAAK,IAAI;AAAA,IACZ,CAAC;AAED,UAAM,aAAa;AAAA,MAClB;AAAA,MACA;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACD,EAAE,KAAK,MAAM;AAAA,MACb,iBAAiB;AAAA,IAClB;AAEA,UAAM,SAAS,aAAa,cAAc,OAAO,UAAU;AAE3D,WAAO,gBAAgB,QAAQ,CAAC,CAAC;AAAA,EAClC,CAAC;AAED,OAAK,wCAAwC,WAAY;AAExD,UAAM,QAAQ,YAAY,IAAI;AAAA,MAC7B;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACD,EAAE,KAAK,IAAI;AAAA,IACZ,CAAC;AAED,UAAM,aAAa;AAAA,MAClB;AAAA,MACA;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACD,EAAE,KAAK,MAAM;AAAA,MACb,iBAAiB;AAAA,IAClB;AAEA,UAAM,SAAS,aAAa,cAAc,OAAO,UAAU;AAE3D,WAAO,gBAAgB,QAAQ;AAAA,MAC9B,cAAc;AAAA,QACb,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,QACpB;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD,EAAE,KAAK,MAAM;AAAA,MACd;AAAA,IACD,CAAC;AAAA,EACF,CAAC;AAED,OAAK,wCAAwC,WAAY;AAExD,UAAM,QAAQ,YAAY,IAAI;AAAA,MAC7B;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACD,EAAE,KAAK,IAAI;AAAA,IACZ,CAAC;AAED,UAAM,aAAa;AAAA,MAClB;AAAA,MACA;AAAA,QACC;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,QACA;AAAA,MACD,EAAE,KAAK,MAAM;AAAA,MACb,iBAAiB;AAAA,IAClB;AAEA,UAAM,SAAS,aAAa,cAAc,OAAO,UAAU;AAE3D,WAAO,gBAAgB,QAAQ;AAAA,MAC9B,cAAc,YAAY,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM;AAAA,IACxD,CAAC;AAAA,EACF,CAAC;AAED,OAAK,cAAc,MAAM;AACxB,UAAM,QAAQ,CAAC,QAAQ,YAAY,cAAc,SAAS,KAAK,EAAE;AACjE,UAAM,QAAQ,CAAC,QAAQ,YAAY,QAAQ,IAAI,IAAI,aAAa,UAAU,WAAW,OAAO,KAAK;AACjG,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,cAAc,MAAM;AACxB,UAAM,QAAQ,CAAC,IAAI,QAAQ,aAAa,EAAE;AAC1C,UAAM,QAAQ,CAAC,OAAO,IAAI,SAAS,OAAO,KAAK;AAC/C,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,cAAc,MAAM;AACxB,UAAM,QAAQ,CAAC,WAAW,MAAM,cAAc,KAAK,WAAW,UAAU,QAAQ,WAAW,cAAc,YAAY;AACrH,UAAM,QAAQ,CAAC,KAAK,MAAM,MAAM,MAAM,cAAc,GAAG;AACvD,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,cAAc,MAAM;AACxB,UAAM,QAAQ,CAAC,MAAM,MAAM,UAAU,UAAU,cAAc,WAAW,IAAI,OAAO;AACnF,UAAM,QAAQ,CAAC,MAAM,EAAE;AACvB,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,iDAAiD,MAAM;AAC3D,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,8CAA8C,MAAM;AACxD,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,oDAAoD,MAAM;AAC9D,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,qBAAqB,MAAM;AAC/B,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,kBAAkB,MAAM;AAC5B,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,IACD;AACA,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,oCAAoC,MAAM;AAC9C,UAAM,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,QAAQ;AAAA,MACb;AAAA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA,IACD;AACA,uBAAmB,OAAO,KAAK;AAAA,EAChC,CAAC;AAED,OAAK,qDAAqD,MAAM;AAC/D,UAAM,WAAW,IAAI,MAAM,iBAAiB;AAG5C,UAAM,SAAS,aAAa,YAAY,QAAQ,MAAM,QAAQ;AAE9D,WAAO,mBAAmB,MAAM,CAAC,EAAE,OAAO,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAChH,WAAO,YAAY,OAAO,SAAS,GAAG,OAAO;AAE7C,iBAAa,aAAa,QAAQ;AAGlC,UAAM,SAAS,aAAa,YAAY,SAAS,MAAM,QAAQ;AAE/D,WAAO,KAAK;AACZ,WAAO,YAAY,OAAO,SAAS,GAAG,MAAM;AAE5C,iBAAa,aAAa,QAAQ;AAAA,EACnC,CAAC;AAED,OAAK,sFAAsF,MAAM;AAChG,UAAM,WAAW,IAAI,MAAM,iBAAiB;AAG5C,UAAM,SAAS,aAAa,YAAY,QAAQ,MAAM,QAAQ;AAE9D,WAAO,mBAAmB,MAAM,CAAC,EAAE,OAAO,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAChH,WAAO,YAAY,OAAO,SAAS,GAAG,OAAO;AAC7C,UAAM,YAAY,OAAO,aAAa;AACtC,UAAM,uBAAuB,OAAO,wBAAwB;AAE5D,iBAAa,aAAa,QAAQ;AAGlC,UAAM,SAAS,aAAa,YAAY,SAAS,MAAM,QAAQ;AAC/D,WAAO,YAAY,OAAO,aAAa,GAAG,SAAS;AACnD,WAAO,YAAY,OAAO,wBAAwB,GAAG,oBAAoB;AAEzE,iBAAa,aAAa,QAAQ;AAAA,EACnC,CAAC;AAED,OAAK,kEAAkE,MAAM;AAC5E,UAAM,WAAW,IAAI,MAAM,iBAAiB;AAG5C,UAAM,SAAS,aAAa,YAAY,QAAQ,MAAM,QAAQ;AAE9D,WAAO,mBAAmB,MAAM,CAAC,EAAE,OAAO,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAChH,WAAO,YAAY,OAAO,SAAS,GAAG,OAAO;AAE7C,iBAAa,aAAa,QAAQ;AAGlC,UAAM,SAAS,aAAa,YAAY,SAAS,MAAM,QAAQ;AAE/D,WAAO,KAAK;AACZ,WAAO,YAAY,OAAO,SAAS,GAAG,OAAO;AAE7C,iBAAa,aAAa,QAAQ;AAAA,EACnC,CAAC;AAED,OAAK,oCAAoC,MAAM;AAC9C,UAAM,WAAW,IAAI,MAAM,iBAAiB;AAE5C,UAAM,QAAQ,aAAa,YAAY,QAAQ,MAAM,QAAQ;AAC7D,UAAM,mBAAmB,MAAM,CAAC,EAAE,OAAO,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAC/G,WAAO,YAAY,MAAM,SAAS,GAAG,OAAO;AAE5C,UAAM,SAAS,OAAO;AACtB,UAAM,KAAK;AACX,WAAO,YAAY,MAAM,SAAS,GAAG,OAAO;AAE5C,iBAAa,aAAa,QAAQ;AAAA,EACnC,CAAC;AACF,CAAC;AAED,SAAS,mBAAmB,QAAkB,QAAwB;AACrE,QAAM,QAAQ,gBAAgB,OAAO,KAAK,IAAI,CAAC;AAC/C,QAAM,EAAE,YAAY,WAAW,IAAI,iBAAiB,OAAO,KAAK,IAAI,GAAG,iBAAiB,EAAE;AAI1F,QAAM,QAAQ,aAAa,cAAc,OAAO,UAAU;AAI1D,QAAM,mBAAmB,CAAC,GAAG,OAAO,IAAI;AAExC,SAAO,YAAY,MAAM,SAAS,GAAG,OAAO,KAAK,IAAI,CAAC;AACtD,aAAW,QAAQ;AACnB,QAAM,QAAQ;AACf;AAfS;AAiBT,SAAS,aAAa,KAAa,KAAqB;AACvD,SAAO,KAAK,MAAM,KAAK,OAAO,KAAK,MAAM,MAAM,EAAE,IAAI;AACtD;AAFS;AAIT,SAAS,gBAAgB,WAAmB,WAA2B;AACtE,QAAM,SAAS,aAAa,WAAW,SAAS;AAChD,QAAM,IAAI,IAAI,cAAc,MAAM;AAClC,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,MAAE,oBAAoB,aAAa,SAAS,GAAG,SAAS,CAAC,CAAC;AAAA,EAC3D;AACA,SAAO,EAAE,MAAM;AAChB;AAPS;AAST,SAAS,aAAa,OAA0B;AAC/C,QAAM,YAAY,aAAa,GAAG,QAAQ,IAAI,GAAK;AACnD,QAAM,QAAkB,CAAC;AACzB,WAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AACnC,UAAM,KAAK,gBAAgB,GAAG,QAAQ,IAAI,GAAK,CAAC;AAAA,EACjD;AACA,SAAO;AACR;AAPS;AAST,IAAI,gBAAgB;AACnB,MAAI,SAAS;AACb,SAAO,MAAM;AAEZ,YAAQ,IAAI,iBAAiB,QAAQ;AAErC,UAAM,QAAQ,aAAa,IAAI;AAC/B,UAAM,QAAQ,aAAa,IAAI;AAE/B,YAAQ,IAAI,sBAAsB;AAElC,QAAI;AACH,yBAAmB,OAAO,KAAK;AAAA,IAChC,SAAS,KAAK;AACb,cAAQ,IAAI,GAAG;AACf,cAAQ,IAAI;AAAA,gBACC,KAAK,UAAU,KAAK,EAAE,QAAQ,MAAM,GAAI,CAAC;AAAA,gBACzC,KAAK,UAAU,KAAK,EAAE,QAAQ,MAAM,GAAI,CAAC;AAAA;AAAA,CAExD;AACE;AAAA,IACD;AAAA,EACD;AACD;AAEA,SAAS,4BAA4B,OAAwB,OAAoD,YAA2C;AAC3J,QAAM,EAAE,YAAY,WAAW,IAAI,iBAAiB,OAAO,UAAU;AACrE,QAAM,IAAI,UAAU;AACpB,SAAO;AACR;AAJS;",
  "names": []
}
