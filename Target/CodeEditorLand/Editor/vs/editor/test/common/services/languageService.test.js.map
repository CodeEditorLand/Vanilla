{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/services/languageService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../common/languages/modesRegistry.js';\nimport { LanguageService } from '../../../common/services/languageService.js';\n\nsuite('LanguageService', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('LanguageSelection does not leak a disposable', () => {\n\t\tconst languageService = new LanguageService();\n\t\tconst languageSelection1 = languageService.createById(PLAINTEXT_LANGUAGE_ID);\n\t\tassert.strictEqual(languageSelection1.languageId, PLAINTEXT_LANGUAGE_ID);\n\t\tconst languageSelection2 = languageService.createById(PLAINTEXT_LANGUAGE_ID);\n\t\tconst listener = languageSelection2.onDidChange(() => { });\n\t\tassert.strictEqual(languageSelection2.languageId, PLAINTEXT_LANGUAGE_ID);\n\t\tlistener.dispose();\n\t\tlanguageService.dispose();\n\t});\n\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,+CAA+C;AACxD,SAAS,6BAA6B;AACtC,SAAS,uBAAuB;AAEhC,MAAM,mBAAmB,MAAM;AAE9B,0CAAwC;AAExC,OAAK,gDAAgD,MAAM;AAC1D,UAAM,kBAAkB,IAAI,gBAAgB;AAC5C,UAAM,qBAAqB,gBAAgB,WAAW,qBAAqB;AAC3E,WAAO,YAAY,mBAAmB,YAAY,qBAAqB;AACvE,UAAM,qBAAqB,gBAAgB,WAAW,qBAAqB;AAC3E,UAAM,WAAW,mBAAmB,YAAY,MAAM;AAAA,IAAE,CAAC;AACzD,WAAO,YAAY,mBAAmB,YAAY,qBAAqB;AACvE,aAAS,QAAQ;AACjB,oBAAgB,QAAQ;AAAA,EACzB,CAAC;AAEF,CAAC;",
  "names": []
}
