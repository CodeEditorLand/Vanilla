{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/services/testTreeSitterService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Parser } from '@vscode/tree-sitter-wasm';\nimport { Event } from '../../../../base/common/event.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ITreeSitterParserService, ITreeSitterParseResult } from '../../../common/services/treeSitterParserService.js';\n\nexport class TestTreeSitterParserService implements ITreeSitterParserService {\n\tonDidAddLanguage: Event<{ id: string; language: Parser.Language }> = Event.None;\n\t_serviceBrand: undefined;\n\tgetOrInitLanguage(languageId: string): Parser.Language | undefined {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\twaitForLanguage(languageId: string): Promise<Parser.Language | undefined> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tgetParseResult(textModel: ITextModel): ITreeSitterParseResult | undefined {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n}\n"],
  "mappings": ";;AAMA,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B,8BAA8B;AAE1D,MAAM,4BAAgE;AAAA,EAV7E,OAU6E;AAAA;AAAA;AAAA,EAC5E,mBAAqE,MAAM;AAAA,EAC3E;AAAA,EACA,kBAAkB,YAAiD;AAClE,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,gBAAgB,YAA0D;AACzE,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,eAAe,WAA2D;AACzE,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAED;",
  "names": []
}
