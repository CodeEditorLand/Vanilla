import n from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as c}from"../../../../base/test/common/utils.js";import{PositionAffinity as s}from"../../../common/model.js";import{ModelDecorationInjectedTextOptions as l}from"../../../common/model/textModel.js";import{ModelLineProjectionData as u}from"../../../common/modelLineProjectionData.js";suite("Editor ViewModel - LineBreakData",()=>{c(),test("Basic",()=>{const t=new u([],[],[100],[0],10);n.strictEqual(t.translateToInputOffset(0,50),50),n.strictEqual(t.translateToInputOffset(1,60),150)});function r(t,e=0){const o=new Array;for(let O=0;O<t;O++)o.push(O+e);return o}function f(t){for(let e=0;e<100;e++){const o=t.translateToOutputPosition(e);n.deepStrictEqual(t.translateToInputOffset(o.outputLineIndex,o.outputOffset),e)}}function i(t,e){return r(20).map(o=>t.translateToInputOffset(e,o))}function a(t,e){return r(25).map(o=>t.translateToOutputPosition(o,e).toString())}function p(t){return t.map(e=>l.from({content:e}))}suite("Injected Text 1",()=>{const t=new u([2,3,10],p(["1","22","333"]),[10,100],[],10);test("getInputOffsetOfOutputPosition",()=>{n.deepStrictEqual(i(t,0),[0,1,2,2,3,3,3,4,5,6,7,8,9,10,10,10,10,11,12,13]),n.deepStrictEqual(i(t,1),[7,7,7,7,7,7,7,7,7,7,7,8,9,10,10,10,10,11,12,13])}),test("getOutputPositionOfInputOffset",()=>{t.translateToOutputPosition(20),n.deepStrictEqual(a(t,s.None),["0:0","0:1","0:2","0:4","0:7","0:8","0:9","1:10","1:11","1:12","1:13","1:17","1:18","1:19","1:20","1:21","1:22","1:23","1:24","1:25","1:26","1:27","1:28","1:29","1:30"]),n.deepStrictEqual(a(t,s.Left),["0:0","0:1","0:2","0:4","0:7","0:8","0:9","0:10","1:11","1:12","1:13","1:17","1:18","1:19","1:20","1:21","1:22","1:23","1:24","1:25","1:26","1:27","1:28","1:29","1:30"]),n.deepStrictEqual(a(t,s.Right),["0:0","0:1","0:3","0:6","0:7","0:8","0:9","1:10","1:11","1:12","1:16","1:17","1:18","1:19","1:20","1:21","1:22","1:23","1:24","1:25","1:26","1:27","1:28","1:29","1:30"])}),test("getInputOffsetOfOutputPosition is inverse of getOutputPositionOfInputOffset",()=>{f(t)}),test("normalization",()=>{n.deepStrictEqual(r(25).map(e=>t.normalizeOutputPosition(1,e,s.Right)).map(e=>e.toString()),["1:0","1:1","1:2","1:3","1:4","1:5","1:6","1:7","1:8","1:9","1:10","1:11","1:12","1:16","1:16","1:16","1:16","1:17","1:18","1:19","1:20","1:21","1:22","1:23","1:24"])})}),suite("Injected Text 2",()=>{const t=new u([2,2,6],p(["1","22","333"]),[10,100],[],0);test("getInputOffsetOfOutputPosition",()=>{n.deepStrictEqual(i(t,0),[0,1,2,2,2,2,3,4,5,6,6,6,6,7,8,9,10,11,12,13]),n.deepStrictEqual(i(t,1),[6,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])}),test("getInputOffsetOfOutputPosition is inverse of getOutputPositionOfInputOffset",()=>{f(t)})}),suite("Injected Text 3",()=>{const t=new u([2,2,7],p(["1","22","333"]),[10,100],[],0);test("getInputOffsetOfOutputPosition",()=>{n.deepStrictEqual(i(t,0),[0,1,2,2,2,2,3,4,5,6,7,7,7,7,8,9,10,11,12,13]),n.deepStrictEqual(i(t,1),[7,7,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])}),test("getInputOffsetOfOutputPosition is inverse of getOutputPositionOfInputOffset",()=>{f(t)})})});
