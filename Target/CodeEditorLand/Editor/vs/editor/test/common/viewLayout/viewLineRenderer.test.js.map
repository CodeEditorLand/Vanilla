{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/viewLayout/viewLineRenderer.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { MetadataConsts } from '../../../common/encodedTokenAttributes.js';\nimport { IViewLineTokens } from '../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { CharacterMapping, DomPosition, LineRange, RenderLineInput, RenderLineOutput2, renderViewLine2 as renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecorationType } from '../../../common/viewModel.js';\nimport { TestLineToken, TestLineTokens } from '../core/testLineToken.js';\n\nfunction createViewLineTokens(viewLineTokens: TestLineToken[]): IViewLineTokens {\n\treturn new TestLineTokens(viewLineTokens);\n}\n\nfunction createPart(endIndex: number, foreground: number): TestLineToken {\n\treturn new TestLineToken(endIndex, (\n\t\tforeground << MetadataConsts.FOREGROUND_OFFSET\n\t) >>> 0);\n}\n\nfunction inflateRenderLineOutput(renderLineOutput: RenderLineOutput2) {\n\t// remove encompassing <span> to simplify test writing.\n\tlet html = renderLineOutput.html;\n\tif (html.startsWith('<span>')) {\n\t\thtml = html.replace(/^<span>/, '');\n\t}\n\thtml = html.replace(/<\\/span>$/, '');\n\tconst spans: string[] = [];\n\tlet lastIndex = 0;\n\tdo {\n\t\tconst newIndex = html.indexOf('<span', lastIndex + 1);\n\t\tif (newIndex === -1) {\n\t\t\tbreak;\n\t\t}\n\t\tspans.push(html.substring(lastIndex, newIndex));\n\t\tlastIndex = newIndex;\n\t} while (true);\n\tspans.push(html.substring(lastIndex));\n\n\treturn {\n\t\thtml: spans,\n\t\tmapping: renderLineOutput.characterMapping.inflate(),\n\t};\n}\n\nsuite('viewLineRenderer.renderLine', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction assertCharacterReplacement(lineContent: string, tabSize: number, expected: string, expectedCharOffsetInPart: number[]): void {\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\tstrings.isBasicASCII(lineContent),\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([new TestLineToken(lineContent.length, 0)]),\n\t\t\t[],\n\t\t\ttabSize,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(_actual.html, '<span><span class=\"mtk0\">' + expected + '</span></span>');\n\t\tconst info = expectedCharOffsetInPart.map<CharacterMappingInfo>((absoluteOffset) => [absoluteOffset, [0, absoluteOffset]]);\n\t\tassertCharacterMapping3(_actual.characterMapping, info);\n\t}\n\n\ttest('replaces spaces', () => {\n\t\tassertCharacterReplacement(' ', 4, '\\u00a0', [0, 1]);\n\t\tassertCharacterReplacement('  ', 4, '\\u00a0\\u00a0', [0, 1, 2]);\n\t\tassertCharacterReplacement('a  b', 4, 'a\\u00a0\\u00a0b', [0, 1, 2, 3, 4]);\n\t});\n\n\ttest('escapes HTML markup', () => {\n\t\tassertCharacterReplacement('a<b', 4, 'a&lt;b', [0, 1, 2, 3]);\n\t\tassertCharacterReplacement('a>b', 4, 'a&gt;b', [0, 1, 2, 3]);\n\t\tassertCharacterReplacement('a&b', 4, 'a&amp;b', [0, 1, 2, 3]);\n\t});\n\n\ttest('replaces some bad characters', () => {\n\t\tassertCharacterReplacement('a\\0b', 4, 'a&#00;b', [0, 1, 2, 3]);\n\t\tassertCharacterReplacement('a' + String.fromCharCode(CharCode.UTF8_BOM) + 'b', 4, 'a\\ufffdb', [0, 1, 2, 3]);\n\t\tassertCharacterReplacement('a\\u2028b', 4, 'a\\ufffdb', [0, 1, 2, 3]);\n\t});\n\n\ttest('handles tabs', () => {\n\t\tassertCharacterReplacement('\\t', 4, '\\u00a0\\u00a0\\u00a0\\u00a0', [0, 4]);\n\t\tassertCharacterReplacement('x\\t', 4, 'x\\u00a0\\u00a0\\u00a0', [0, 1, 4]);\n\t\tassertCharacterReplacement('xx\\t', 4, 'xx\\u00a0\\u00a0', [0, 1, 2, 4]);\n\t\tassertCharacterReplacement('xxx\\t', 4, 'xxx\\u00a0', [0, 1, 2, 3, 4]);\n\t\tassertCharacterReplacement('xxxx\\t', 4, 'xxxx\\u00a0\\u00a0\\u00a0\\u00a0', [0, 1, 2, 3, 4, 8]);\n\t});\n\n\tfunction assertParts(lineContent: string, tabSize: number, parts: TestLineToken[], expected: string, info: CharacterMappingInfo[]): void {\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens(parts),\n\t\t\t[],\n\t\t\ttabSize,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(_actual.html, '<span>' + expected + '</span>');\n\t\tassertCharacterMapping3(_actual.characterMapping, info);\n\t}\n\n\ttest('empty line', () => {\n\t\tassertParts('', 4, [], '<span></span>', []);\n\t});\n\n\ttest('uses part type', () => {\n\t\tassertParts('x', 4, [createPart(1, 10)], '<span class=\"mtk10\">x</span>', [[0, [0, 0]], [1, [0, 1]]]);\n\t\tassertParts('x', 4, [createPart(1, 20)], '<span class=\"mtk20\">x</span>', [[0, [0, 0]], [1, [0, 1]]]);\n\t\tassertParts('x', 4, [createPart(1, 30)], '<span class=\"mtk30\">x</span>', [[0, [0, 0]], [1, [0, 1]]]);\n\t});\n\n\ttest('two parts', () => {\n\t\tassertParts('xy', 4, [createPart(1, 1), createPart(2, 2)], '<span class=\"mtk1\">x</span><span class=\"mtk2\">y</span>', [[0, [0, 0]], [1, [1, 0]], [2, [1, 1]]]);\n\t\tassertParts('xyz', 4, [createPart(1, 1), createPart(3, 2)], '<span class=\"mtk1\">x</span><span class=\"mtk2\">yz</span>', [[0, [0, 0]], [1, [1, 0]], [2, [1, 1]], [3, [1, 2]]]);\n\t\tassertParts('xyz', 4, [createPart(2, 1), createPart(3, 2)], '<span class=\"mtk1\">xy</span><span class=\"mtk2\">z</span>', [[0, [0, 0]], [1, [0, 1]], [2, [1, 0]], [3, [1, 1]]]);\n\t});\n\n\ttest('overflow', () => {\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t'Hello world!',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([\n\t\t\t\tcreatePart(1, 0),\n\t\t\t\tcreatePart(2, 1),\n\t\t\t\tcreatePart(3, 2),\n\t\t\t\tcreatePart(4, 3),\n\t\t\t\tcreatePart(5, 4),\n\t\t\t\tcreatePart(6, 5),\n\t\t\t\tcreatePart(7, 6),\n\t\t\t\tcreatePart(8, 7),\n\t\t\t\tcreatePart(9, 8),\n\t\t\t\tcreatePart(10, 9),\n\t\t\t\tcreatePart(11, 10),\n\t\t\t\tcreatePart(12, 11),\n\t\t\t]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t6,\n\t\t\t'boundary',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(_actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk0\">H</span>',\n\t\t\t\t'<span class=\"mtk1\">e</span>',\n\t\t\t\t'<span class=\"mtk2\">l</span>',\n\t\t\t\t'<span class=\"mtk3\">l</span>',\n\t\t\t\t'<span class=\"mtk4\">o</span>',\n\t\t\t\t'<span class=\"mtk5\">\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkoverflow\">Show more (6 chars)</span>'\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0],\n\t\t\t\t[1, 0, 1],\n\t\t\t\t[2, 0, 2],\n\t\t\t\t[3, 0, 3],\n\t\t\t\t[4, 0, 4],\n\t\t\t\t[5, 0, 5],\n\t\t\t\t[5, 1, 6],\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('typical line', () => {\n\t\tconst lineText = '\\t    export class Game { // http://test.com     ';\n\t\tconst lineParts = createViewLineTokens([\n\t\t\tcreatePart(5, 1),\n\t\t\tcreatePart(11, 2),\n\t\t\tcreatePart(12, 3),\n\t\t\tcreatePart(17, 4),\n\t\t\tcreatePart(18, 5),\n\t\t\tcreatePart(22, 6),\n\t\t\tcreatePart(23, 7),\n\t\t\tcreatePart(24, 8),\n\t\t\tcreatePart(25, 9),\n\t\t\tcreatePart(28, 10),\n\t\t\tcreatePart(43, 11),\n\t\t\tcreatePart(48, 12),\n\t\t]);\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'boundary',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(_actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk2\">export</span>',\n\t\t\t\t'<span class=\"mtk3\">\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk4\">class</span>',\n\t\t\t\t'<span class=\"mtk5\">\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk6\">Game</span>',\n\t\t\t\t'<span class=\"mtk7\">\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk8\">{</span>',\n\t\t\t\t'<span class=\"mtk9\">\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk10\">//\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk11\">http://test.com</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>'\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0],\n\t\t\t\t[1, 0, 4], [1, 2, 5], [1, 4, 6], [1, 6, 7],\n\t\t\t\t[2, 0, 8], [2, 1, 9], [2, 2, 10], [2, 3, 11], [2, 4, 12], [2, 5, 13],\n\t\t\t\t[3, 0, 14],\n\t\t\t\t[4, 0, 15], [4, 1, 16], [4, 2, 17], [4, 3, 18], [4, 4, 19],\n\t\t\t\t[5, 0, 20],\n\t\t\t\t[6, 0, 21], [6, 1, 22], [6, 2, 23], [6, 3, 24],\n\t\t\t\t[7, 0, 25],\n\t\t\t\t[8, 0, 26],\n\t\t\t\t[9, 0, 27],\n\t\t\t\t[10, 0, 28], [10, 1, 29], [10, 2, 30],\n\t\t\t\t[11, 0, 31], [11, 1, 32], [11, 2, 33], [11, 3, 34], [11, 4, 35], [11, 5, 36], [11, 6, 37], [11, 7, 38], [11, 8, 39], [11, 9, 40], [11, 10, 41], [11, 11, 42], [11, 12, 43], [11, 13, 44], [11, 14, 45],\n\t\t\t\t[12, 0, 46], [12, 2, 47],\n\t\t\t\t[13, 0, 48], [13, 2, 49], [13, 4, 50], [13, 6, 51],\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #2255: Weird line rendering part 1', () => {\n\t\tconst lineText = '\\t\\t\\tcursorStyle:\\t\\t\\t\\t\\t\\t(prevOpts.cursorStyle !== newOpts.cursorStyle),';\n\t\tconst lineParts = createViewLineTokens([\n\t\t\tcreatePart(3, 1), // 3 chars\n\t\t\tcreatePart(15, 2), // 12 chars\n\t\t\tcreatePart(21, 3), // 6 chars\n\t\t\tcreatePart(22, 4), // 1 char\n\t\t\tcreatePart(43, 5), // 21 chars\n\t\t\tcreatePart(45, 6), // 2 chars\n\t\t\tcreatePart(46, 7), // 1 char\n\t\t\tcreatePart(66, 8), // 20 chars\n\t\t\tcreatePart(67, 9), // 1 char\n\t\t\tcreatePart(68, 10), // 2 chars\n\t\t]);\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(_actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk1\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk2\">cursorStyle:</span>',\n\t\t\t\t'<span class=\"mtk3\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk4\">(</span>',\n\t\t\t\t'<span class=\"mtk5\">prevOpts.cursorStyle\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk6\">!=</span>',\n\t\t\t\t'<span class=\"mtk7\">=</span>',\n\t\t\t\t'<span class=\"mtk8\">\\u00a0newOpts.cursorStyle</span>',\n\t\t\t\t'<span class=\"mtk9\">)</span>',\n\t\t\t\t'<span class=\"mtk10\">,</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 4, 4], [0, 8, 8],\n\t\t\t\t[1, 0, 12], [1, 1, 13], [1, 2, 14], [1, 3, 15], [1, 4, 16], [1, 5, 17], [1, 6, 18], [1, 7, 19], [1, 8, 20], [1, 9, 21], [1, 10, 22], [1, 11, 23],\n\t\t\t\t[2, 0, 24], [2, 4, 28], [2, 8, 32], [2, 12, 36], [2, 16, 40], [2, 20, 44],\n\t\t\t\t[3, 0, 48],\n\t\t\t\t[4, 0, 49], [4, 1, 50], [4, 2, 51], [4, 3, 52], [4, 4, 53], [4, 5, 54], [4, 6, 55], [4, 7, 56], [4, 8, 57], [4, 9, 58], [4, 10, 59], [4, 11, 60], [4, 12, 61], [4, 13, 62], [4, 14, 63], [4, 15, 64], [4, 16, 65], [4, 17, 66], [4, 18, 67], [4, 19, 68], [4, 20, 69],\n\t\t\t\t[5, 0, 70], [5, 1, 71],\n\t\t\t\t[6, 0, 72],\n\t\t\t\t[7, 0, 73], [7, 1, 74], [7, 2, 75], [7, 3, 76], [7, 4, 77], [7, 5, 78], [7, 6, 79], [7, 7, 80], [7, 8, 81], [7, 9, 82], [7, 10, 83], [7, 11, 84], [7, 12, 85], [7, 13, 86], [7, 14, 87], [7, 15, 88], [7, 16, 89], [7, 17, 90], [7, 18, 91], [7, 19, 92],\n\t\t\t\t[8, 0, 93],\n\t\t\t\t[9, 0, 94], [9, 1, 95],\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #2255: Weird line rendering part 2', () => {\n\t\tconst lineText = ' \\t\\t\\tcursorStyle:\\t\\t\\t\\t\\t\\t(prevOpts.cursorStyle !== newOpts.cursorStyle),';\n\n\t\tconst lineParts = createViewLineTokens([\n\t\t\tcreatePart(4, 1), // 4 chars\n\t\t\tcreatePart(16, 2), // 12 chars\n\t\t\tcreatePart(22, 3), // 6 chars\n\t\t\tcreatePart(23, 4), // 1 char\n\t\t\tcreatePart(44, 5), // 21 chars\n\t\t\tcreatePart(46, 6), // 2 chars\n\t\t\tcreatePart(47, 7), // 1 char\n\t\t\tcreatePart(67, 8), // 20 chars\n\t\t\tcreatePart(68, 9), // 1 char\n\t\t\tcreatePart(69, 10), // 2 chars\n\t\t]);\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(_actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk1\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk2\">cursorStyle:</span>',\n\t\t\t\t'<span class=\"mtk3\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk4\">(</span>',\n\t\t\t\t'<span class=\"mtk5\">prevOpts.cursorStyle\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk6\">!=</span>',\n\t\t\t\t'<span class=\"mtk7\">=</span>',\n\t\t\t\t'<span class=\"mtk8\">\\u00a0newOpts.cursorStyle</span>',\n\t\t\t\t'<span class=\"mtk9\">)</span>',\n\t\t\t\t'<span class=\"mtk10\">,</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 4, 4], [0, 8, 8],\n\t\t\t\t[1, 0, 12], [1, 1, 13], [1, 2, 14], [1, 3, 15], [1, 4, 16], [1, 5, 17], [1, 6, 18], [1, 7, 19], [1, 8, 20], [1, 9, 21], [1, 10, 22], [1, 11, 23],\n\t\t\t\t[2, 0, 24], [2, 4, 28], [2, 8, 32], [2, 12, 36], [2, 16, 40], [2, 20, 44],\n\t\t\t\t[3, 0, 48], [4, 0, 49], [4, 1, 50], [4, 2, 51], [4, 3, 52], [4, 4, 53], [4, 5, 54], [4, 6, 55], [4, 7, 56], [4, 8, 57], [4, 9, 58], [4, 10, 59], [4, 11, 60], [4, 12, 61], [4, 13, 62], [4, 14, 63], [4, 15, 64], [4, 16, 65], [4, 17, 66], [4, 18, 67], [4, 19, 68], [4, 20, 69],\n\t\t\t\t[5, 0, 70], [5, 1, 71],\n\t\t\t\t[6, 0, 72],\n\t\t\t\t[7, 0, 73], [7, 1, 74], [7, 2, 75], [7, 3, 76], [7, 4, 77], [7, 5, 78], [7, 6, 79], [7, 7, 80], [7, 8, 81], [7, 9, 82], [7, 10, 83], [7, 11, 84], [7, 12, 85], [7, 13, 86], [7, 14, 87], [7, 15, 88], [7, 16, 89], [7, 17, 90], [7, 18, 91], [7, 19, 92],\n\t\t\t\t[8, 0, 93],\n\t\t\t\t[9, 0, 94], [9, 1, 95],\n\t\t\t],\n\t\t});\n\t});\n\n\ttest('issue #91178: after decoration type shown before cursor', () => {\n\t\tconst lineText = '//just a comment';\n\t\tconst lineParts = createViewLineTokens([\n\t\t\tcreatePart(16, 1)\n\t\t]);\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[\n\t\t\t\tnew LineDecoration(13, 13, 'dec1', InlineDecorationType.After),\n\t\t\t\tnew LineDecoration(13, 13, 'dec2', InlineDecorationType.Before),\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), ({\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk1\">//just\\u00a0a\\u00a0com</span>',\n\t\t\t\t'<span class=\"mtk1 dec2\"></span>',\n\t\t\t\t'<span class=\"mtk1 dec1\"></span>',\n\t\t\t\t'<span class=\"mtk1\">ment</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7], [0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11],\n\t\t\t\t[2, 0, 12],\n\t\t\t\t[3, 1, 13], [3, 2, 14], [3, 3, 15], [3, 4, 16]\n\t\t\t]\n\t\t}));\n\t});\n\n\ttest('issue microsoft/monaco-editor#280: Improved source code rendering for RTL languages', () => {\n\t\tconst lineText = 'var \u05E7\u05D5\u05D3\u05DE\u05D5\u05EA = \\\"\u05DE\u05D9\u05D5\u05EA\u05E8 \u05E7\u05D5\u05D3\u05DE\u05D5\u05EA \u05E6\\'\u05D8 \u05E9\u05DC, \u05D0\u05DD \u05DC\u05E9\u05D5\u05DF \u05D4\u05E2\u05D1\u05E8\u05D9\u05EA \u05E9\u05D9\u05E0\u05D5\u05D9\u05D9\u05DD \u05D5\u05D9\u05E9, \u05D0\u05DD\\\";';\n\t\tconst lineParts = createViewLineTokens([\n\t\t\tcreatePart(3, 6),\n\t\t\tcreatePart(13, 1),\n\t\t\tcreatePart(66, 20),\n\t\t\tcreatePart(67, 1),\n\t\t]);\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(_actual), ({\n\t\t\thtml: [\n\t\t\t\t'<span dir=\"ltr\">',\n\t\t\t\t'<span class=\"mtk6\">var</span>',\n\t\t\t\t'<span style=\"unicode-bidi:isolate\" class=\"mtk1\">\\u00a0\u05E7\u05D5\u05D3\u05DE\u05D5\u05EA\\u00a0=\\u00a0</span>',\n\t\t\t\t'<span style=\"unicode-bidi:isolate\" class=\"mtk20\">\"\u05DE\u05D9\u05D5\u05EA\u05E8\\u00a0\u05E7\u05D5\u05D3\u05DE\u05D5\u05EA\\u00a0\u05E6\\'\u05D8\\u00a0\u05E9\u05DC,\\u00a0\u05D0\u05DD\\u00a0\u05DC\u05E9\u05D5\u05DF\\u00a0\u05D4\u05E2\u05D1\u05E8\u05D9\u05EA\\u00a0\u05E9\u05D9\u05E0\u05D5\u05D9\u05D9\u05DD\\u00a0\u05D5\u05D9\u05E9,\\u00a0\u05D0\u05DD\"</span>',\n\t\t\t\t'<span class=\"mtk1\">;</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2],\n\t\t\t\t[1, 0, 3], [1, 1, 4], [1, 2, 5], [1, 3, 6], [1, 4, 7], [1, 5, 8], [1, 6, 9], [1, 7, 10], [1, 8, 11], [1, 9, 12],\n\t\t\t\t[2, 0, 13], [2, 1, 14], [2, 2, 15], [2, 3, 16], [2, 4, 17], [2, 5, 18], [2, 6, 19], [2, 7, 20], [2, 8, 21], [2, 9, 22], [2, 10, 23], [2, 11, 24], [2, 12, 25], [2, 13, 26], [2, 14, 27], [2, 15, 28], [2, 16, 29], [2, 17, 30], [2, 18, 31], [2, 19, 32], [2, 20, 33], [2, 21, 34], [2, 22, 35], [2, 23, 36], [2, 24, 37], [2, 25, 38], [2, 26, 39], [2, 27, 40], [2, 28, 41], [2, 29, 42], [2, 30, 43], [2, 31, 44], [2, 32, 45], [2, 33, 46], [2, 34, 47], [2, 35, 48], [2, 36, 49], [2, 37, 50], [2, 38, 51], [2, 39, 52], [2, 40, 53], [2, 41, 54], [2, 42, 55], [2, 43, 56], [2, 44, 57], [2, 45, 58], [2, 46, 59], [2, 47, 60], [2, 48, 61], [2, 49, 62], [2, 50, 63], [2, 51, 64], [2, 52, 65],\n\t\t\t\t[3, 0, 66], [3, 1, 67]\n\t\t\t]\n\t\t}));\n\t\tassert.strictEqual(_actual.containsRTL, true);\n\t});\n\n\ttest('issue #137036: Issue in RTL languages in recent versions', () => {\n\t\tconst lineText = '<option value=\\\"\u0627\u0644\u0639\u0631\u0628\u064A\u0629\\\">\u0627\u0644\u0639\u0631\u0628\u064A\u0629</option>';\n\t\tconst lineParts = createViewLineTokens([\n\t\t\tcreatePart(1, 2),\n\t\t\tcreatePart(7, 3),\n\t\t\tcreatePart(8, 4),\n\t\t\tcreatePart(13, 5),\n\t\t\tcreatePart(14, 4),\n\t\t\tcreatePart(23, 6),\n\t\t\tcreatePart(24, 2),\n\t\t\tcreatePart(31, 4),\n\t\t\tcreatePart(33, 2),\n\t\t\tcreatePart(39, 3),\n\t\t\tcreatePart(40, 2),\n\t\t]);\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(_actual), ({\n\t\t\thtml: [\n\t\t\t\t'<span dir=\"ltr\">',\n\t\t\t\t'<span class=\"mtk2\">&lt;</span>',\n\t\t\t\t'<span class=\"mtk3\">option</span>',\n\t\t\t\t'<span class=\"mtk4\">\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk5\">value</span>',\n\t\t\t\t'<span class=\"mtk4\">=</span>',\n\t\t\t\t'<span style=\"unicode-bidi:isolate\" class=\"mtk6\">\"\u0627\u0644\u0639\u0631\u0628\u064A\u0629\"</span>',\n\t\t\t\t'<span class=\"mtk2\">&gt;</span>',\n\t\t\t\t'<span style=\"unicode-bidi:isolate\" class=\"mtk4\">\u0627\u0644\u0639\u0631\u0628\u064A\u0629</span>',\n\t\t\t\t'<span class=\"mtk2\">&lt;/</span>',\n\t\t\t\t'<span class=\"mtk3\">option</span>',\n\t\t\t\t'<span class=\"mtk2\">&gt;</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0],\n\t\t\t\t[1, 0, 1], [1, 1, 2], [1, 2, 3], [1, 3, 4], [1, 4, 5], [1, 5, 6],\n\t\t\t\t[2, 0, 7],\n\t\t\t\t[3, 0, 8], [3, 1, 9], [3, 2, 10], [3, 3, 11], [3, 4, 12],\n\t\t\t\t[4, 0, 13],\n\t\t\t\t[5, 0, 14], [5, 1, 15], [5, 2, 16], [5, 3, 17], [5, 4, 18], [5, 5, 19], [5, 6, 20], [5, 7, 21], [5, 8, 22],\n\t\t\t\t[6, 0, 23],\n\t\t\t\t[7, 0, 24], [7, 1, 25], [7, 2, 26], [7, 3, 27], [7, 4, 28], [7, 5, 29], [7, 6, 30],\n\t\t\t\t[8, 0, 31], [8, 1, 32],\n\t\t\t\t[9, 0, 33], [9, 1, 34], [9, 2, 35], [9, 3, 36], [9, 4, 37], [9, 5, 38],\n\t\t\t\t[10, 0, 39], [10, 1, 40]\n\t\t\t]\n\t\t}));\n\t\tassert.strictEqual(_actual.containsRTL, true);\n\t});\n\n\ttest('issue #99589: Rendering whitespace influences bidi layout', () => {\n\t\tconst lineText = '    [\\\"\uD83D\uDDA8\uFE0F \u0686\u0627\u067E \u0641\u0627\u06A9\u062A\u0648\u0631\\\",\\\"\uD83C\uDFA8 \u062A\u0646\u0638\u06CC\u0645\u0627\u062A\\\"]';\n\t\tconst lineParts = createViewLineTokens([\n\t\t\tcreatePart(5, 2),\n\t\t\tcreatePart(21, 3),\n\t\t\tcreatePart(22, 2),\n\t\t\tcreatePart(34, 3),\n\t\t\tcreatePart(35, 2),\n\t\t]);\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(_actual), ({\n\t\t\thtml: [\n\t\t\t\t'<span dir=\"ltr\">',\n\t\t\t\t'<span class=\"mtkw\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk2\">[</span>',\n\t\t\t\t'<span style=\"unicode-bidi:isolate\" class=\"mtk3\">\"\uD83D\uDDA8\uFE0F\\u00a0\u0686\u0627\u067E\\u00a0\u0641\u0627\u06A9\u062A\u0648\u0631\"</span>',\n\t\t\t\t'<span class=\"mtk2\">,</span>',\n\t\t\t\t'<span style=\"unicode-bidi:isolate\" class=\"mtk3\">\"\uD83C\uDFA8\\u00a0\u062A\u0646\u0638\u06CC\u0645\u0627\u062A\"</span>',\n\t\t\t\t'<span class=\"mtk2\">]</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 2, 1], [0, 4, 2], [0, 6, 3],\n\t\t\t\t[1, 0, 4],\n\t\t\t\t[2, 0, 5], [2, 1, 6], [2, 2, 7], [2, 3, 8], [2, 4, 9], [2, 5, 10], [2, 6, 11], [2, 7, 12], [2, 8, 13], [2, 9, 14], [2, 10, 15], [2, 11, 16], [2, 12, 17], [2, 13, 18], [2, 14, 19], [2, 15, 20],\n\t\t\t\t[3, 0, 21],\n\t\t\t\t[4, 0, 22], [4, 1, 23], [4, 2, 24], [4, 3, 25], [4, 4, 26], [4, 5, 27], [4, 6, 28], [4, 7, 29], [4, 8, 30], [4, 9, 31], [4, 10, 32], [4, 11, 33],\n\t\t\t\t[5, 0, 34], [5, 1, 35]\n\t\t\t]\n\t\t}));\n\t\tassert.strictEqual(_actual.containsRTL, true);\n\t});\n\n\ttest('issue #6885: Splits large tokens', () => {\n\t\t//                                                                                                                  1         1         1\n\t\t//                        1         2         3         4         5         6         7         8         9         0         1         2\n\t\t//               1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234\n\t\tconst _lineText = 'This is just a long line that contains very interesting text. This is just a long line that contains very interesting text.';\n\n\t\tfunction assertSplitsTokens(message: string, lineText: string, expectedOutput: string[]): void {\n\t\t\tconst lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tlineText,\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\t0,\n\t\t\t\tlineParts,\n\t\t\t\t[],\n\t\t\t\t4,\n\t\t\t\t0,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t-1,\n\t\t\t\t'none',\n\t\t\t\tfalse,\n\t\t\t\tfalse,\n\t\t\t\tnull\n\t\t\t));\n\t\t\tassert.strictEqual(actual.html, '<span>' + expectedOutput.join('') + '</span>', message);\n\t\t}\n\n\t\t// A token with 49 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'49 chars',\n\t\t\t\t_lineText.substr(0, 49),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0inter</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 50 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'50 chars',\n\t\t\t\t_lineText.substr(0, 50),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 51 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'51 chars',\n\t\t\t\t_lineText.substr(0, 51),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t\t'<span class=\"mtk1\">s</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 99 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'99 chars',\n\t\t\t\t_lineText.substr(0, 99),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t\t'<span class=\"mtk1\">sting\\u00a0text.\\u00a0This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contain</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 100 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'100 chars',\n\t\t\t\t_lineText.substr(0, 100),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t\t'<span class=\"mtk1\">sting\\u00a0text.\\u00a0This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 101 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'101 chars',\n\t\t\t\t_lineText.substr(0, 101),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t\t'<span class=\"mtk1\">sting\\u00a0text.\\u00a0This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains</span>',\n\t\t\t\t\t'<span class=\"mtk1\">\\u00a0</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t});\n\n\ttest('issue #21476: Does not split large tokens when ligatures are on', () => {\n\t\t//                                                                                                                  1         1         1\n\t\t//                        1         2         3         4         5         6         7         8         9         0         1         2\n\t\t//               1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234\n\t\tconst _lineText = 'This is just a long line that contains very interesting text. This is just a long line that contains very interesting text.';\n\n\t\tfunction assertSplitsTokens(message: string, lineText: string, expectedOutput: string[]): void {\n\t\t\tconst lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tlineText,\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\t0,\n\t\t\t\tlineParts,\n\t\t\t\t[],\n\t\t\t\t4,\n\t\t\t\t0,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t-1,\n\t\t\t\t'none',\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tnull\n\t\t\t));\n\t\t\tassert.strictEqual(actual.html, '<span>' + expectedOutput.join('') + '</span>', message);\n\t\t}\n\n\t\t// A token with 101 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'101 chars',\n\t\t\t\t_lineText.substr(0, 101),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtk1\">interesting\\u00a0text.\\u00a0This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtk1\">contains\\u00a0</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t});\n\n\ttest('issue #20624: Unaligned surrogate pairs are corrupted at multiples of 50 columns', () => {\n\t\tconst lineText = 'a\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7';\n\t\tconst lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual).html, [\n\t\t\t'<span class=\"mtk1\">a\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7\uD842\uDFB7</span>',\n\t\t]);\n\t});\n\n\ttest('issue #6885: Does not split large tokens in RTL text', () => {\n\t\tconst lineText = '\u05D0\u05EA \u05D2\u05E8\u05DE\u05E0\u05D9\u05EA \u05D1\u05D4\u05EA\u05D9\u05D9\u05D7\u05E1\u05D5\u05EA \u05E9\u05DE\u05D5, \u05E9\u05E0\u05EA\u05D9 \u05D4\u05DE\u05E9\u05E4\u05D8 \u05D0\u05DC \u05D7\u05E4\u05E9, \u05D0\u05DD \u05DB\u05EA\u05D1 \u05D0\u05D7\u05E8\u05D9\u05DD \u05D5\u05DC\u05D7\u05D1\u05E8. \u05E9\u05DC \u05D4\u05EA\u05D5\u05DB\u05DF \u05D0\u05D5\u05D3\u05D5\u05EA \u05D1\u05D5\u05D9\u05E7\u05D9\u05E4\u05D3\u05D9\u05D4 \u05DB\u05DC\u05DC, \u05E9\u05DC \u05E2\u05D6\u05E8\u05D4 \u05DB\u05D9\u05DE\u05D9\u05D4 \u05D4\u05D9\u05D0. \u05E2\u05DC \u05E2\u05DE\u05D5\u05D3 \u05D9\u05D5\u05E6\u05E8\u05D9\u05DD \u05DE\u05D9\u05EA\u05D5\u05DC\u05D5\u05D2\u05D9\u05D4 \u05E1\u05D3\u05E8, \u05D0\u05DD \u05E9\u05DB\u05DC \u05E9\u05EA\u05E4\u05D5 \u05DC\u05E2\u05D1\u05E8\u05D9\u05EA \u05E9\u05D9\u05E0\u05D5\u05D9\u05D9\u05DD, \u05D0\u05DD \u05E9\u05D0\u05DC\u05D5\u05EA \u05D0\u05E0\u05D2\u05DC\u05D9\u05EA \u05E2\u05D6\u05D4. \u05E9\u05DE\u05D5\u05EA \u05D1\u05E7\u05DC\u05D5\u05EA \u05DE\u05D4 \u05E1\u05D3\u05E8.';\n\t\tconst lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(actual.html, [\n\t\t\t'<span dir=\"ltr\">',\n\t\t\t'<span style=\"unicode-bidi:isolate\" class=\"mtk1\">\u05D0\u05EA\\u00a0\u05D2\u05E8\u05DE\u05E0\u05D9\u05EA\\u00a0\u05D1\u05D4\u05EA\u05D9\u05D9\u05D7\u05E1\u05D5\u05EA\\u00a0\u05E9\u05DE\u05D5,\\u00a0\u05E9\u05E0\u05EA\u05D9\\u00a0\u05D4\u05DE\u05E9\u05E4\u05D8\\u00a0\u05D0\u05DC\\u00a0\u05D7\u05E4\u05E9,\\u00a0\u05D0\u05DD\\u00a0\u05DB\u05EA\u05D1\\u00a0\u05D0\u05D7\u05E8\u05D9\u05DD\\u00a0\u05D5\u05DC\u05D7\u05D1\u05E8.\\u00a0\u05E9\u05DC\\u00a0\u05D4\u05EA\u05D5\u05DB\u05DF\\u00a0\u05D0\u05D5\u05D3\u05D5\u05EA\\u00a0\u05D1\u05D5\u05D9\u05E7\u05D9\u05E4\u05D3\u05D9\u05D4\\u00a0\u05DB\u05DC\u05DC,\\u00a0\u05E9\u05DC\\u00a0\u05E2\u05D6\u05E8\u05D4\\u00a0\u05DB\u05D9\u05DE\u05D9\u05D4\\u00a0\u05D4\u05D9\u05D0.\\u00a0\u05E2\u05DC\\u00a0\u05E2\u05DE\u05D5\u05D3\\u00a0\u05D9\u05D5\u05E6\u05E8\u05D9\u05DD\\u00a0\u05DE\u05D9\u05EA\u05D5\u05DC\u05D5\u05D2\u05D9\u05D4\\u00a0\u05E1\u05D3\u05E8,\\u00a0\u05D0\u05DD\\u00a0\u05E9\u05DB\u05DC\\u00a0\u05E9\u05EA\u05E4\u05D5\\u00a0\u05DC\u05E2\u05D1\u05E8\u05D9\u05EA\\u00a0\u05E9\u05D9\u05E0\u05D5\u05D9\u05D9\u05DD,\\u00a0\u05D0\u05DD\\u00a0\u05E9\u05D0\u05DC\u05D5\u05EA\\u00a0\u05D0\u05E0\u05D2\u05DC\u05D9\u05EA\\u00a0\u05E2\u05D6\u05D4.\\u00a0\u05E9\u05DE\u05D5\u05EA\\u00a0\u05D1\u05E7\u05DC\u05D5\u05EA\\u00a0\u05DE\u05D4\\u00a0\u05E1\u05D3\u05E8.</span>',\n\t\t\t'</span>'\n\t\t].join(''));\n\t\tassert.strictEqual(actual.containsRTL, true);\n\t});\n\n\ttest('issue #95685: Uses unicode replacement character for Paragraph Separator', () => {\n\t\tconst lineText = 'var ftext = [\\u2029\"Und\", \"dann\", \"eines\"];';\n\t\tconst lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), ({\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk1\">var\\u00a0ftext\\u00a0=\\u00a0[\\uFFFD\"Und\",\\u00a0\"dann\",\\u00a0\"eines\"];</span>'\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t[0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12], [0, 13, 13], [0, 14, 14],\n\t\t\t\t[0, 15, 15], [0, 16, 16], [0, 17, 17], [0, 18, 18], [0, 19, 19], [0, 20, 20], [0, 21, 21],\n\t\t\t\t[0, 22, 22], [0, 23, 23], [0, 24, 24], [0, 25, 25], [0, 26, 26], [0, 27, 27], [0, 28, 28],\n\t\t\t\t[0, 29, 29], [0, 30, 30], [0, 31, 31], [0, 32, 32], [0, 33, 33], [0, 34, 34], [0, 35, 35],\n\t\t\t\t[0, 36, 36], [0, 37, 37], [0, 38, 38]\n\t\t\t]\n\t\t}));\n\t});\n\n\ttest('issue #19673: Monokai Theme bad-highlighting in line wrap', () => {\n\t\tconst lineText = '    MongoCallback<string>): void {';\n\t\tconst lineParts = createViewLineTokens([\n\t\t\tcreatePart(17, 1),\n\t\t\tcreatePart(18, 2),\n\t\t\tcreatePart(24, 3),\n\t\t\tcreatePart(26, 4),\n\t\t\tcreatePart(27, 5),\n\t\t\tcreatePart(28, 6),\n\t\t\tcreatePart(32, 7),\n\t\t\tcreatePart(34, 8),\n\t\t]);\n\t\tconst _actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t4,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(_actual), ({\n\t\t\thtml: [\n\t\t\t\t'<span class=\"\">\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk1\">MongoCallback</span>',\n\t\t\t\t'<span class=\"mtk2\">&lt;</span>',\n\t\t\t\t'<span class=\"mtk3\">string</span>',\n\t\t\t\t'<span class=\"mtk4\">&gt;)</span>',\n\t\t\t\t'<span class=\"mtk5\">:</span>',\n\t\t\t\t'<span class=\"mtk6\">\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk7\">void</span>',\n\t\t\t\t'<span class=\"mtk8\">\\u00a0{</span>'\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3],\n\t\t\t\t[1, 0, 4], [1, 1, 5], [1, 2, 6], [1, 3, 7], [1, 4, 8], [1, 5, 9], [1, 6, 10], [1, 7, 11], [1, 8, 12], [1, 9, 13], [1, 10, 14], [1, 11, 15], [1, 12, 16],\n\t\t\t\t[2, 0, 17],\n\t\t\t\t[3, 0, 18], [3, 1, 19], [3, 2, 20], [3, 3, 21], [3, 4, 22], [3, 5, 23],\n\t\t\t\t[4, 0, 24], [4, 1, 25],\n\t\t\t\t[5, 0, 26],\n\t\t\t\t[6, 0, 27],\n\t\t\t\t[7, 0, 28], [7, 1, 29], [7, 2, 30], [7, 3, 31],\n\t\t\t\t[8, 0, 32], [8, 1, 33], [8, 2, 34]\n\t\t\t]\n\t\t}));\n\t});\n});\n\ntype CharacterMappingInfo = [number, [number, number]];\n\nfunction assertCharacterMapping3(actual: CharacterMapping, expectedInfo: CharacterMappingInfo[]): void {\n\tfor (let i = 0; i < expectedInfo.length; i++) {\n\t\tconst [horizontalOffset, [partIndex, charIndex]] = expectedInfo[i];\n\n\t\tconst actualDomPosition = actual.getDomPosition(i + 1);\n\t\tassert.deepStrictEqual(actualDomPosition, new DomPosition(partIndex, charIndex), `getDomPosition(${i + 1})`);\n\n\t\tlet partLength = charIndex + 1;\n\t\tfor (let j = i + 1; j < expectedInfo.length; j++) {\n\t\t\tconst [, [nextPartIndex, nextCharIndex]] = expectedInfo[j];\n\t\t\tif (nextPartIndex === partIndex) {\n\t\t\t\tpartLength = nextCharIndex + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst actualColumn = actual.getColumn(new DomPosition(partIndex, charIndex), partLength);\n\t\tassert.strictEqual(actualColumn, i + 1, `actual.getColumn(${partIndex}, ${charIndex})`);\n\n\t\tconst actualHorizontalOffset = actual.getHorizontalOffset(i + 1);\n\t\tassert.strictEqual(actualHorizontalOffset, horizontalOffset, `actual.getHorizontalOffset(${i + 1})`);\n\t}\n\n\tassert.strictEqual(actual.length, expectedInfo.length, `length mismatch`);\n}\n\nsuite('viewLineRenderer.renderLine 2', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction testCreateLineParts(fontIsMonospace: boolean, lineContent: string, tokens: TestLineToken[], fauxIndentLength: number, renderWhitespace: 'none' | 'boundary' | 'selection' | 'trailing' | 'all', selections: LineRange[] | null) {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfontIsMonospace,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tfauxIndentLength,\n\t\t\tcreateViewLineTokens(tokens),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\trenderWhitespace,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tselections\n\t\t));\n\t\treturn inflateRenderLineOutput(actual);\n\t}\n\n\ttest('issue #18616: Inline decorations ending at the text length are no longer rendered', () => {\n\t\tconst lineContent = 'https://microsoft.com';\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(21, 3)]),\n\t\t\t[new LineDecoration(1, 22, 'link', InlineDecorationType.Regular)],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), ({\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3 link\">https://microsoft.com</span>'\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t[0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12], [0, 13, 13], [0, 14, 14],\n\t\t\t\t[0, 15, 15], [0, 16, 16], [0, 17, 17], [0, 18, 18], [0, 19, 19], [0, 20, 20], [0, 21, 21]\n\t\t\t]\n\t\t}));\n\t});\n\n\ttest('issue #19207: Link in Monokai is not rendered correctly', () => {\n\t\tconst lineContent = '\\'let url = `http://***/_api/web/lists/GetByTitle(\\\\\\'Teambuildingaanvragen\\\\\\')/items`;\\'';\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([\n\t\t\t\tcreatePart(49, 6),\n\t\t\t\tcreatePart(51, 4),\n\t\t\t\tcreatePart(72, 6),\n\t\t\t\tcreatePart(74, 4),\n\t\t\t\tcreatePart(84, 6),\n\t\t\t]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(13, 51, 'detected-link', InlineDecorationType.Regular)\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), ({\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk6\">\\'let\\u00a0url\\u00a0=\\u00a0`</span>',\n\t\t\t\t'<span class=\"mtk6 detected-link\">http://***/_api/web/lists/GetByTitle(</span>',\n\t\t\t\t'<span class=\"mtk4 detected-link\">\\\\</span>',\n\t\t\t\t'<span class=\"mtk4\">\\'</span>',\n\t\t\t\t'<span class=\"mtk6\">Teambuildingaanvragen</span>',\n\t\t\t\t'<span class=\"mtk4\">\\\\\\'</span>',\n\t\t\t\t'<span class=\"mtk6\">)/items`;\\'</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7], [0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11],\n\t\t\t\t[1, 0, 12], [1, 1, 13], [1, 2, 14], [1, 3, 15], [1, 4, 16], [1, 5, 17], [1, 6, 18], [1, 7, 19], [1, 8, 20], [1, 9, 21], [1, 10, 22], [1, 11, 23], [1, 12, 24], [1, 13, 25], [1, 14, 26], [1, 15, 27], [1, 16, 28], [1, 17, 29], [1, 18, 30], [1, 19, 31], [1, 20, 32], [1, 21, 33], [1, 22, 34], [1, 23, 35], [1, 24, 36], [1, 25, 37], [1, 26, 38], [1, 27, 39], [1, 28, 40], [1, 29, 41], [1, 30, 42], [1, 31, 43], [1, 32, 44], [1, 33, 45], [1, 34, 46], [1, 35, 47], [1, 36, 48],\n\t\t\t\t[2, 0, 49],\n\t\t\t\t[3, 0, 50],\n\t\t\t\t[4, 0, 51], [4, 1, 52], [4, 2, 53], [4, 3, 54], [4, 4, 55], [4, 5, 56], [4, 6, 57], [4, 7, 58], [4, 8, 59], [4, 9, 60], [4, 10, 61], [4, 11, 62], [4, 12, 63], [4, 13, 64], [4, 14, 65], [4, 15, 66], [4, 16, 67], [4, 17, 68], [4, 18, 69], [4, 19, 70], [4, 20, 71],\n\t\t\t\t[5, 0, 72], [5, 1, 73],\n\t\t\t\t[6, 0, 74], [6, 1, 75], [6, 2, 76], [6, 3, 77], [6, 4, 78], [6, 5, 79], [6, 6, 80], [6, 7, 81], [6, 8, 82], [6, 9, 83], [6, 10, 84]\n\t\t\t]\n\t\t}));\n\t});\n\n\ttest('createLineParts simple', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t'Hello world!',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(12, 1)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'none',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtk1\">Hello\\u00a0world!</span>'\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7], [0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts simple two tokens', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t'Hello world!',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(12, 2)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'none',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtk1\">Hello\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtk2\">world!</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5],\n\t\t\t\t\t[1, 0, 6], [1, 1, 7], [1, 2, 8], [1, 3, 9], [1, 4, 10], [1, 5, 11], [1, 6, 12]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace - 4 leading spaces', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t'    Hello world!    ',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 1),\n\t\t\t\t\tcreatePart(6, 2),\n\t\t\t\t\tcreatePart(20, 3)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'boundary',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 2, 1], [0, 4, 2], [0, 6, 3],\n\t\t\t\t\t[1, 0, 4], [1, 1, 5],\n\t\t\t\t\t[2, 0, 6], [2, 1, 7], [2, 2, 8], [2, 3, 9], [2, 4, 10], [2, 5, 11], [2, 6, 12], [2, 7, 13], [2, 8, 14], [2, 9, 15],\n\t\t\t\t\t[3, 0, 16], [3, 2, 17], [3, 4, 18], [3, 6, 19], [3, 8, 20]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace - 8 leading spaces', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t'        Hello world!        ',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(8, 1),\n\t\t\t\t\tcreatePart(10, 2),\n\t\t\t\t\tcreatePart(28, 3)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'boundary',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 2, 1], [0, 4, 2], [0, 6, 3],\n\t\t\t\t\t[1, 0, 4], [1, 2, 5], [1, 4, 6], [1, 6, 7],\n\t\t\t\t\t[2, 0, 8], [2, 1, 9],\n\t\t\t\t\t[3, 0, 10], [3, 1, 11], [3, 2, 12], [3, 3, 13], [3, 4, 14], [3, 5, 15], [3, 6, 16], [3, 7, 17], [3, 8, 18], [3, 9, 19],\n\t\t\t\t\t[4, 0, 20], [4, 2, 21], [4, 4, 22], [4, 6, 23],\n\t\t\t\t\t[5, 0, 24], [5, 2, 25], [5, 4, 26], [5, 6, 27], [5, 8, 28]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace - 2 leading tabs', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t'\\t\\tHello world!\\t',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(2, 1),\n\t\t\t\t\tcreatePart(4, 2),\n\t\t\t\t\tcreatePart(15, 3)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'boundary',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0],\n\t\t\t\t\t[1, 0, 4],\n\t\t\t\t\t[2, 0, 8], [2, 1, 9],\n\t\t\t\t\t[3, 0, 10], [3, 1, 11], [3, 2, 12], [3, 3, 13], [3, 4, 14], [3, 5, 15], [3, 6, 16], [3, 7, 17], [3, 8, 18], [3, 9, 19],\n\t\t\t\t\t[4, 0, 20], [4, 4, 24]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace - mixed leading spaces and tabs', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t'  \\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(8, 2),\n\t\t\t\t\tcreatePart(31, 3)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'boundary',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u2192\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u200c\\uffeb</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u2192\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\uffeb</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 2, 1], [0, 4, 2],\n\t\t\t\t\t[1, 0, 4],\n\t\t\t\t\t[2, 0, 8], [2, 2, 9],\n\t\t\t\t\t[3, 0, 10], [3, 1, 11],\n\t\t\t\t\t[4, 0, 12], [4, 1, 13], [4, 2, 14], [4, 3, 15], [4, 4, 16], [4, 5, 17], [4, 6, 18], [4, 7, 19], [4, 8, 20], [4, 9, 21],\n\t\t\t\t\t[5, 0, 22], [5, 2, 23],\n\t\t\t\t\t[6, 0, 24], [6, 2, 25], [6, 4, 26],\n\t\t\t\t\t[7, 0, 28], [7, 2, 29], [7, 4, 30], [7, 6, 31],\n\t\t\t\t\t[8, 0, 32], [8, 2, 33], [8, 4, 34], [8, 6, 35], [8, 8, 36]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace skips faux indent', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t'\\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 1),\n\t\t\t\t\tcreatePart(6, 2),\n\t\t\t\t\tcreatePart(29, 3)\n\t\t\t\t],\n\t\t\t\t2,\n\t\t\t\t'boundary',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u200c\\uffeb</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u2192\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\uffeb</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 4, 4],\n\t\t\t\t\t[1, 0, 8], [1, 2, 9],\n\t\t\t\t\t[2, 0, 10], [2, 1, 11],\n\t\t\t\t\t[3, 0, 12], [3, 1, 13], [3, 2, 14], [3, 3, 15], [3, 4, 16], [3, 5, 17], [3, 6, 18], [3, 7, 19], [3, 8, 20], [3, 9, 21],\n\t\t\t\t\t[4, 0, 22], [4, 2, 23],\n\t\t\t\t\t[5, 0, 24], [5, 2, 25], [5, 4, 26],\n\t\t\t\t\t[6, 0, 28], [6, 2, 29], [6, 4, 30], [6, 6, 31],\n\t\t\t\t\t[7, 0, 32], [7, 2, 33], [7, 4, 34], [7, 6, 35], [7, 8, 36]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts does not emit width for monospace fonts', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\ttrue,\n\t\t\t\t'\\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 1),\n\t\t\t\t\tcreatePart(6, 2),\n\t\t\t\t\tcreatePart(29, 3)\n\t\t\t\t],\n\t\t\t\t2,\n\t\t\t\t'boundary',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtkw\">\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkw\">\\u00b7\\u200c\\uffeb\\u00b7\\u200c\\u00b7\\u200c\\u2192\\u00a0\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\uffeb\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 4, 4],\n\t\t\t\t\t[1, 0, 8], [1, 2, 9],\n\t\t\t\t\t[2, 0, 10], [2, 1, 11],\n\t\t\t\t\t[3, 0, 12], [3, 1, 13], [3, 2, 14], [3, 3, 15], [3, 4, 16], [3, 5, 17], [3, 6, 18], [3, 7, 19], [3, 8, 20], [3, 9, 21],\n\t\t\t\t\t[4, 0, 22], [4, 2, 23], [4, 3, 24], [4, 5, 25], [4, 7, 26], [4, 9, 28], [4, 11, 29], [4, 13, 30], [4, 15, 31], [4, 16, 32], [4, 18, 33], [4, 20, 34], [4, 22, 35], [4, 24, 36]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace in middle but not for one space', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t'it  it it  it',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(7, 2),\n\t\t\t\t\tcreatePart(13, 3)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'boundary',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtk1\">it</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk1\">it</span>',\n\t\t\t\t\t'<span class=\"mtk2\">\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtk3\">it</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk3\">it</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 1, 1],\n\t\t\t\t\t[1, 0, 2], [1, 2, 3],\n\t\t\t\t\t[2, 0, 4], [2, 1, 5],\n\t\t\t\t\t[3, 0, 6],\n\t\t\t\t\t[4, 0, 7], [4, 1, 8],\n\t\t\t\t\t[5, 0, 9], [5, 2, 10],\n\t\t\t\t\t[6, 0, 11], [6, 1, 12], [6, 2, 13]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for all in middle', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' Hello world!\\t',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 0),\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(14, 2)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'all',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk2\">world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0],\n\t\t\t\t\t[1, 0, 1], [1, 1, 2], [1, 2, 3],\n\t\t\t\t\t[2, 0, 4], [2, 1, 5],\n\t\t\t\t\t[3, 0, 6],\n\t\t\t\t\t[4, 0, 7], [4, 1, 8], [4, 2, 9], [4, 3, 10], [4, 4, 11], [4, 5, 12],\n\t\t\t\t\t[5, 0, 13], [5, 3, 16]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with no selections', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' Hello world!\\t',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 0),\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(14, 2)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'selection',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtk0\">\\u00a0Hel</span>',\n\t\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t\t'<span class=\"mtk2\">\\u00a0world!\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3],\n\t\t\t\t\t[1, 0, 4], [1, 1, 5],\n\t\t\t\t\t[2, 0, 6], [2, 1, 7], [2, 2, 8], [2, 3, 9], [2, 4, 10], [2, 5, 11], [2, 6, 12], [2, 7, 13], [2, 10, 16]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with whole line selection', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' Hello world!\\t',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 0),\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(14, 2)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'selection',\n\t\t\t\t[new LineRange(0, 14)]\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk2\">world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0],\n\t\t\t\t\t[1, 0, 1], [1, 1, 2], [1, 2, 3],\n\t\t\t\t\t[2, 0, 4], [2, 1, 5],\n\t\t\t\t\t[3, 0, 6],\n\t\t\t\t\t[4, 0, 7], [4, 1, 8], [4, 2, 9], [4, 3, 10], [4, 4, 11], [4, 5, 12],\n\t\t\t\t\t[5, 0, 13], [5, 3, 16]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with selection spanning part of whitespace', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' Hello world!\\t',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 0),\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(14, 2)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'selection',\n\t\t\t\t[new LineRange(0, 5)]\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t\t'<span class=\"mtk2\">\\u00a0world!\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0],\n\t\t\t\t\t[1, 0, 1], [1, 1, 2], [1, 2, 3],\n\t\t\t\t\t[2, 0, 4], [2, 1, 5],\n\t\t\t\t\t[3, 0, 6], [3, 1, 7], [3, 2, 8], [3, 3, 9], [3, 4, 10], [3, 5, 11], [3, 6, 12], [3, 7, 13], [3, 10, 16]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with multiple selections', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' Hello world!\\t',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 0),\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(14, 2)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'selection',\n\t\t\t\t[new LineRange(0, 5), new LineRange(9, 14)]\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t\t'<span class=\"mtk2\">\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0],\n\t\t\t\t\t[1, 0, 1], [1, 1, 2], [1, 2, 3],\n\t\t\t\t\t[2, 0, 4], [2, 1, 5],\n\t\t\t\t\t[3, 0, 6], [3, 1, 7], [3, 2, 8], [3, 3, 9], [3, 4, 10], [3, 5, 11], [3, 6, 12],\n\t\t\t\t\t[4, 0, 13], [4, 3, 16]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with multiple, initially unsorted selections', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' Hello world!\\t',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 0),\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(14, 2)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'selection',\n\t\t\t\t[new LineRange(9, 14), new LineRange(0, 5)]\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t\t'<span class=\"mtk2\">\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0],\n\t\t\t\t\t[1, 0, 1], [1, 1, 2], [1, 2, 3],\n\t\t\t\t\t[2, 0, 4], [2, 1, 5],\n\t\t\t\t\t[3, 0, 6], [3, 1, 7], [3, 2, 8], [3, 3, 9], [3, 4, 10], [3, 5, 11], [3, 6, 12],\n\t\t\t\t\t[4, 0, 13], [4, 3, 16]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with selections next to each other', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' * S',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 0)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'selection',\n\t\t\t\t[new LineRange(0, 1), new LineRange(1, 2), new LineRange(2, 3)]\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk0\">*</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtk0\">S</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0],\n\t\t\t\t\t[1, 0, 1],\n\t\t\t\t\t[2, 0, 2],\n\t\t\t\t\t[3, 0, 3], [3, 1, 4]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for trailing with leading, inner, and without trailing whitespace', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' Hello world!',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 0),\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(14, 2)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'trailing',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtk0\">\\u00a0Hel</span>',\n\t\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t\t'<span class=\"mtk2\">\\u00a0world!</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3],\n\t\t\t\t\t[1, 0, 4], [1, 1, 5],\n\t\t\t\t\t[2, 0, 6], [2, 1, 7], [2, 2, 8], [2, 3, 9], [2, 4, 10], [2, 5, 11], [2, 6, 12], [2, 7, 13]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for trailing with leading, inner, and trailing whitespace', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' Hello world! \\t',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(4, 0),\n\t\t\t\t\tcreatePart(6, 1),\n\t\t\t\t\tcreatePart(15, 2)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'trailing',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtk0\">\\u00a0Hel</span>',\n\t\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t\t'<span class=\"mtk2\">\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u00b7\\u200c\\u2192\\u00a0</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3],\n\t\t\t\t\t[1, 0, 4], [1, 1, 5],\n\t\t\t\t\t[2, 0, 6], [2, 1, 7], [2, 2, 8], [2, 3, 9], [2, 4, 10], [2, 5, 11], [2, 6, 12],\n\t\t\t\t\t[3, 0, 13], [3, 2, 14], [3, 4, 16]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for trailing with 8 leading and 8 trailing whitespaces', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t'        Hello world!        ',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(8, 1),\n\t\t\t\t\tcreatePart(10, 2),\n\t\t\t\t\tcreatePart(28, 3)\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'trailing',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtk1\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t\t[1, 0, 8], [1, 1, 9],\n\t\t\t\t\t[2, 0, 10], [2, 1, 11], [2, 2, 12], [2, 3, 13], [2, 4, 14], [2, 5, 15], [2, 6, 16], [2, 7, 17], [2, 8, 18], [2, 9, 19],\n\t\t\t\t\t[3, 0, 20], [3, 2, 21], [3, 4, 22], [3, 6, 23],\n\t\t\t\t\t[4, 0, 24], [4, 2, 25], [4, 4, 26], [4, 6, 27], [4, 8, 28]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for trailing with line containing only whitespaces', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttestCreateLineParts(\n\t\t\t\tfalse,\n\t\t\t\t' \\t ',\n\t\t\t\t[\n\t\t\t\t\tcreatePart(2, 0),\n\t\t\t\t\tcreatePart(3, 1),\n\t\t\t\t],\n\t\t\t\t0,\n\t\t\t\t'trailing',\n\t\t\t\tnull\n\t\t\t),\n\t\t\t{\n\t\t\t\thtml: [\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u200c\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t],\n\t\t\t\tmapping: [\n\t\t\t\t\t[0, 0, 0], [0, 2, 1],\n\t\t\t\t\t[1, 0, 4], [1, 2, 5]\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('createLineParts can handle unsorted inline decorations', () => {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t'Hello world',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(11, 0)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(5, 7, 'a', InlineDecorationType.Regular),\n\t\t\t\tnew LineDecoration(1, 3, 'b', InlineDecorationType.Regular),\n\t\t\t\tnew LineDecoration(2, 8, 'c', InlineDecorationType.Regular),\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\t// 01234567890\n\t\t// Hello world\n\t\t// ----aa-----\n\t\t// bb---------\n\t\t// -cccccc----\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk0 b\">H</span>',\n\t\t\t\t'<span class=\"mtk0 b c\">e</span>',\n\t\t\t\t'<span class=\"mtk0 c\">ll</span>',\n\t\t\t\t'<span class=\"mtk0 a c\">o\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk0 c\">w</span>',\n\t\t\t\t'<span class=\"mtk0\">orld</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0],\n\t\t\t\t[1, 0, 1],\n\t\t\t\t[2, 0, 2], [2, 1, 3],\n\t\t\t\t[3, 0, 4], [3, 1, 5],\n\t\t\t\t[4, 0, 6],\n\t\t\t\t[5, 0, 7], [5, 1, 8], [5, 2, 9], [5, 3, 10], [5, 4, 11]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #11485: Visible whitespace conflicts with before decorator attachment', () => {\n\n\t\tconst lineContent = '\\tbla';\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(4, 3)]),\n\t\t\t[new LineDecoration(1, 2, 'before', InlineDecorationType.Before)],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtkw before\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">bla</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0],\n\t\t\t\t[1, 0, 4], [1, 1, 5], [1, 2, 6], [1, 3, 7]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #32436: Non-monospace font + visible whitespace + After decorator causes line to \"jump\"', () => {\n\n\t\tconst lineContent = '\\tbla';\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(4, 3)]),\n\t\t\t[new LineDecoration(2, 3, 'before', InlineDecorationType.Before)],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3 before\">b</span>',\n\t\t\t\t'<span class=\"mtk3\">la</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0],\n\t\t\t\t[1, 0, 4],\n\t\t\t\t[2, 0, 5], [2, 1, 6], [2, 2, 7]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #30133: Empty lines don\\'t render inline decorations', () => {\n\n\t\tconst lineContent = '';\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(0, 3)]),\n\t\t\t[new LineDecoration(1, 2, 'before', InlineDecorationType.Before)],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"before\"></span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[1, 0, 0]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #37208: Collapsing bullet point containing emoji in Markdown document results in [??] character', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'  1. \uD83D\uDE4F',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(7, 3)]),\n\t\t\t[new LineDecoration(7, 8, 'inline-folded', InlineDecorationType.After)],\n\t\t\t2,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">\\u00a0\\u00a01.\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3 inline-folded\">\uD83D\uDE4F</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4],\n\t\t\t\t[1, 0, 5], [1, 1, 6], [1, 2, 7]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #37401 #40127: Allow both before and after decorations on empty line', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(0, 3)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(1, 1, 'before', InlineDecorationType.Before),\n\t\t\t\tnew LineDecoration(1, 1, 'after', InlineDecorationType.After),\n\t\t\t],\n\t\t\t2,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"before\"></span>',\n\t\t\t\t'<span class=\"after\"></span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[1, 0, 0]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #118759: enable multiple text editor decorations in empty lines', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(0, 3)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(1, 1, 'after1', InlineDecorationType.After),\n\t\t\t\tnew LineDecoration(1, 1, 'after2', InlineDecorationType.After),\n\t\t\t\tnew LineDecoration(1, 1, 'before1', InlineDecorationType.Before),\n\t\t\t\tnew LineDecoration(1, 1, 'before2', InlineDecorationType.Before),\n\t\t\t],\n\t\t\t2,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"before1\"></span>',\n\t\t\t\t'<span class=\"before2\"></span>',\n\t\t\t\t'<span class=\"after1\"></span>',\n\t\t\t\t'<span class=\"after2\"></span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[2, 0, 0]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #38935: GitLens end-of-line blame no longer rendering', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'\\t}',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(2, 3)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(3, 3, 'ced-TextEditorDecorationType2-5e9b9b3f-3 ced-TextEditorDecorationType2-3', InlineDecorationType.Before),\n\t\t\t\tnew LineDecoration(3, 3, 'ced-TextEditorDecorationType2-5e9b9b3f-4 ced-TextEditorDecorationType2-4', InlineDecorationType.After),\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">\\u00a0\\u00a0\\u00a0\\u00a0}</span>',\n\t\t\t\t'<span class=\"ced-TextEditorDecorationType2-5e9b9b3f-3 ced-TextEditorDecorationType2-3\"></span>',\n\t\t\t\t'<span class=\"ced-TextEditorDecorationType2-5e9b9b3f-4 ced-TextEditorDecorationType2-4\"></span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 4, 4],\n\t\t\t\t[2, 0, 5]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #136622: Inline decorations are not rendering on non-ASCII lines when renderControlCharacters is on', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'some text \u00A3',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(11, 3)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(5, 5, 'inlineDec1', InlineDecorationType.After),\n\t\t\t\tnew LineDecoration(6, 6, 'inlineDec2', InlineDecorationType.Before),\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">some</span>',\n\t\t\t\t'<span class=\"mtk3 inlineDec1\"></span>',\n\t\t\t\t'<span class=\"mtk3\">\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3 inlineDec2\"></span>',\n\t\t\t\t'<span class=\"mtk3\">text\\u00a0\u00A3</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3],\n\t\t\t\t[1, 0, 4],\n\t\t\t\t[4, 0, 5], [4, 1, 6], [4, 2, 7], [4, 3, 8], [4, 4, 9], [4, 5, 10], [4, 6, 11]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #22832: Consider fullwidth characters when rendering tabs', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'asd = \"\u64E6\"\\t\\t#asd',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(15, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">asd\\u00a0=\\u00a0\"\u64E6\"\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0#asd</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7], [0, 8, 9],\n\t\t\t\t[0, 9, 10], [0, 11, 12], [0, 15, 16], [0, 16, 17], [0, 17, 18], [0, 18, 19], [0, 19, 20]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #22832: Consider fullwidth characters when rendering tabs (render whitespace)', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'asd = \"\u64E6\"\\t\\t#asd',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(15, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">asd</span>',\n\t\t\t\t'<span class=\"mtkw\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk3\">=</span>',\n\t\t\t\t'<span class=\"mtkw\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk3\">\"\u64E6\"</span>',\n\t\t\t\t'<span class=\"mtkw\">\\u2192\\u00a0\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">#asd</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2],\n\t\t\t\t[1, 0, 3],\n\t\t\t\t[2, 0, 4],\n\t\t\t\t[3, 0, 5],\n\t\t\t\t[4, 0, 6], [4, 1, 7], [4, 2, 9],\n\t\t\t\t[5, 0, 10], [5, 2, 12],\n\t\t\t\t[6, 0, 16], [6, 1, 17], [6, 2, 18], [6, 3, 19], [6, 4, 20]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #22352: COMBINING ACUTE ACCENT (U+0301)', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'12345689012345678901234568901234567890123456890aba\u0301ba',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(53, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">12345689012345678901234568901234567890123456890aba\u0301ba</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t[0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12], [0, 13, 13], [0, 14, 14],\n\t\t\t\t[0, 15, 15], [0, 16, 16], [0, 17, 17], [0, 18, 18], [0, 19, 19], [0, 20, 20], [0, 21, 21],\n\t\t\t\t[0, 22, 22], [0, 23, 23], [0, 24, 24], [0, 25, 25], [0, 26, 26], [0, 27, 27], [0, 28, 28],\n\t\t\t\t[0, 29, 29], [0, 30, 30], [0, 31, 31], [0, 32, 32], [0, 33, 33], [0, 34, 34], [0, 35, 35],\n\t\t\t\t[0, 36, 36], [0, 37, 37], [0, 38, 38], [0, 39, 39], [0, 40, 40], [0, 41, 41], [0, 42, 42],\n\t\t\t\t[0, 43, 43], [0, 44, 44], [0, 45, 45], [0, 46, 46], [0, 47, 47], [0, 48, 48], [0, 49, 49],\n\t\t\t\t[0, 50, 50], [0, 51, 51], [0, 52, 52], [0, 53, 53]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #22352: Partially Broken Complex Script Rendering of Tamil', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t' JoyShare\u0BB2\u0BCD \u0BAA\u0BBF\u0BA9\u0BCD\u0BA4\u0BCA\u0B9F\u0BB0\u0BCD\u0BA8\u0BCD\u0BA4\u0BC1, \u0BB5\u0BBF\u0B9F\u0BC0\u0BAF\u0BCB, \u0B9C\u0BCB\u0B95\u0BCD\u0B95\u0BC1\u0B95\u0BB3\u0BCD, \u0B85\u0BA9\u0BBF\u0BAE\u0BC7\u0B9A\u0BA9\u0BCD, \u0BA8\u0B95\u0BC8\u0B9A\u0BCD\u0B9A\u0BC1\u0BB5\u0BC8 \u0BAA\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BCD \u0BAE\u0BB1\u0BCD\u0BB1\u0BC1\u0BAE\u0BCD \u0B9A\u0BC6\u0BAF\u0BCD\u0BA4\u0BBF\u0B95\u0BB3\u0BC8 \u0BAA\u0BC6\u0BB1\u0BC1\u0BB5\u0BC0\u0BB0\u0BCD',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(100, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">\\u00a0JoyShare\u0BB2\u0BCD\\u00a0\u0BAA\u0BBF\u0BA9\u0BCD\u0BA4\u0BCA\u0B9F\u0BB0\u0BCD\u0BA8\u0BCD\u0BA4\u0BC1,\\u00a0\u0BB5\u0BBF\u0B9F\u0BC0\u0BAF\u0BCB,\\u00a0\u0B9C\u0BCB\u0B95\u0BCD\u0B95\u0BC1\u0B95\u0BB3\u0BCD,\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">\u0B85\u0BA9\u0BBF\u0BAE\u0BC7\u0B9A\u0BA9\u0BCD,\\u00a0\u0BA8\u0B95\u0BC8\u0B9A\u0BCD\u0B9A\u0BC1\u0BB5\u0BC8\\u00a0\u0BAA\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BCD\\u00a0\u0BAE\u0BB1\u0BCD\u0BB1\u0BC1\u0BAE\u0BCD\\u00a0\u0B9A\u0BC6\u0BAF\u0BCD\u0BA4\u0BBF\u0B95\u0BB3\u0BC8\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">\u0BAA\u0BC6\u0BB1\u0BC1\u0BB5\u0BC0\u0BB0\u0BCD</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t[0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12], [0, 13, 13], [0, 14, 14],\n\t\t\t\t[0, 15, 15], [0, 16, 16], [0, 17, 17], [0, 18, 18], [0, 19, 19], [0, 20, 20], [0, 21, 21],\n\t\t\t\t[0, 22, 22], [0, 23, 23], [0, 24, 24], [0, 25, 25], [0, 26, 26], [0, 27, 27], [0, 28, 28],\n\t\t\t\t[0, 29, 29], [0, 30, 30], [0, 31, 31], [0, 32, 32], [0, 33, 33], [0, 34, 34], [0, 35, 35],\n\t\t\t\t[0, 36, 36], [0, 37, 37], [0, 38, 38], [0, 39, 39], [0, 40, 40], [0, 41, 41], [0, 42, 42],\n\t\t\t\t[0, 43, 43], [0, 44, 44], [0, 45, 45],\n\t\t\t\t[1, 0, 46], [1, 1, 47], [1, 2, 48], [1, 3, 49], [1, 4, 50], [1, 5, 51], [1, 6, 52], [1, 7, 53],\n\t\t\t\t[1, 8, 54], [1, 9, 55], [1, 10, 56], [1, 11, 57], [1, 12, 58], [1, 13, 59], [1, 14, 60], [1, 15, 61],\n\t\t\t\t[1, 16, 62], [1, 17, 63], [1, 18, 64], [1, 19, 65], [1, 20, 66], [1, 21, 67], [1, 22, 68], [1, 23, 69],\n\t\t\t\t[1, 24, 70], [1, 25, 71], [1, 26, 72], [1, 27, 73], [1, 28, 74], [1, 29, 75], [1, 30, 76], [1, 31, 77],\n\t\t\t\t[1, 32, 78], [1, 33, 79], [1, 34, 80], [1, 35, 81], [1, 36, 82], [1, 37, 83], [1, 38, 84], [1, 39, 85],\n\t\t\t\t[1, 40, 86], [1, 41, 87], [1, 42, 88], [1, 43, 89], [1, 44, 90], [1, 45, 91],\n\t\t\t\t[2, 0, 92], [2, 1, 93], [2, 2, 94], [2, 3, 95], [2, 4, 96], [2, 5, 97], [2, 6, 98], [2, 7, 99], [2, 8, 100]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #42700: Hindi characters are not being rendered properly', () => {\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t' \u0935\u094B \u0910\u0938\u093E \u0915\u094D\u092F\u093E \u0939\u0948 \u091C\u094B \u0939\u092E\u093E\u0930\u0947 \u0905\u0902\u0926\u0930 \u092D\u0940 \u0939\u0948 \u0914\u0930 \u092C\u093E\u0939\u0930 \u092D\u0940 \u0939\u0948\u0964 \u091C\u093F\u0938\u0915\u0940 \u0935\u091C\u0939 \u0938\u0947 \u0939\u092E \u0938\u092C \u0939\u0948\u0902\u0964 \u091C\u093F\u0938\u0928\u0947 \u0907\u0938 \u0938\u0943\u0937\u094D\u091F\u093F \u0915\u0940 \u0930\u091A\u0928\u093E \u0915\u0940 \u0939\u0948\u0964',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(105, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">\\u00a0\u0935\u094B\\u00a0\u0910\u0938\u093E\\u00a0\u0915\u094D\u092F\u093E\\u00a0\u0939\u0948\\u00a0\u091C\u094B\\u00a0\u0939\u092E\u093E\u0930\u0947\\u00a0\u0905\u0902\u0926\u0930\\u00a0\u092D\u0940\\u00a0\u0939\u0948\\u00a0\u0914\u0930\\u00a0\u092C\u093E\u0939\u0930\\u00a0\u092D\u0940\\u00a0\u0939\u0948\u0964\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">\u091C\u093F\u0938\u0915\u0940\\u00a0\u0935\u091C\u0939\\u00a0\u0938\u0947\\u00a0\u0939\u092E\\u00a0\u0938\u092C\\u00a0\u0939\u0948\u0902\u0964\\u00a0\u091C\u093F\u0938\u0928\u0947\\u00a0\u0907\u0938\\u00a0\u0938\u0943\u0937\u094D\u091F\u093F\\u00a0\u0915\u0940\\u00a0\u0930\u091A\u0928\u093E\\u00a0\u0915\u0940\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">\u0939\u0948\u0964</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t[0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12], [0, 13, 13], [0, 14, 14],\n\t\t\t\t[0, 15, 15], [0, 16, 16], [0, 17, 17], [0, 18, 18], [0, 19, 19], [0, 20, 20], [0, 21, 21],\n\t\t\t\t[0, 22, 22], [0, 23, 23], [0, 24, 24], [0, 25, 25], [0, 26, 26], [0, 27, 27], [0, 28, 28],\n\t\t\t\t[0, 29, 29], [0, 30, 30], [0, 31, 31], [0, 32, 32], [0, 33, 33], [0, 34, 34], [0, 35, 35],\n\t\t\t\t[0, 36, 36], [0, 37, 37], [0, 38, 38], [0, 39, 39], [0, 40, 40], [0, 41, 41], [0, 42, 42],\n\t\t\t\t[0, 43, 43], [0, 44, 44], [0, 45, 45], [0, 46, 46], [0, 47, 47], [0, 48, 48], [0, 49, 49],\n\t\t\t\t[0, 50, 50],\n\t\t\t\t[1, 0, 51], [1, 1, 52], [1, 2, 53], [1, 3, 54], [1, 4, 55], [1, 5, 56], [1, 6, 57], [1, 7, 58],\n\t\t\t\t[1, 8, 59], [1, 9, 60], [1, 10, 61], [1, 11, 62], [1, 12, 63], [1, 13, 64], [1, 14, 65],\n\t\t\t\t[1, 15, 66], [1, 16, 67], [1, 17, 68], [1, 18, 69], [1, 19, 70], [1, 20, 71], [1, 21, 72],\n\t\t\t\t[1, 22, 73], [1, 23, 74], [1, 24, 75], [1, 25, 76], [1, 26, 77], [1, 27, 78], [1, 28, 79],\n\t\t\t\t[1, 29, 80], [1, 30, 81], [1, 31, 82], [1, 32, 83], [1, 33, 84], [1, 34, 85], [1, 35, 86],\n\t\t\t\t[1, 36, 87], [1, 37, 88], [1, 38, 89], [1, 39, 90], [1, 40, 91], [1, 41, 92], [1, 42, 93],\n\t\t\t\t[1, 43, 94], [1, 44, 95], [1, 45, 96], [1, 46, 97], [1, 47, 98], [1, 48, 99], [1, 49, 100],\n\t\t\t\t[1, 50, 101], [2, 0, 102], [2, 1, 103], [2, 2, 104], [2, 3, 105]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #38123: editor.renderWhitespace: \"boundary\" renders whitespace at line wrap point when line is wrapped', () => {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'This is a long line which never uses more than two spaces. ',\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(59, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'boundary',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">This\\u00a0is\\u00a0a\\u00a0long\\u00a0line\\u00a0which\\u00a0never\\u00a0uses\\u00a0more\\u00a0than\\u00a0two</span>',\n\t\t\t\t'<span class=\"mtk3\">\\u00a0spaces.</span>',\n\t\t\t\t'<span class=\"mtk3\">\\u00a0</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t[0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12], [0, 13, 13], [0, 14, 14],\n\t\t\t\t[0, 15, 15], [0, 16, 16], [0, 17, 17], [0, 18, 18], [0, 19, 19], [0, 20, 20], [0, 21, 21],\n\t\t\t\t[0, 22, 22], [0, 23, 23], [0, 24, 24], [0, 25, 25], [0, 26, 26], [0, 27, 27], [0, 28, 28],\n\t\t\t\t[0, 29, 29], [0, 30, 30], [0, 31, 31], [0, 32, 32], [0, 33, 33], [0, 34, 34], [0, 35, 35],\n\t\t\t\t[0, 36, 36], [0, 37, 37], [0, 38, 38], [0, 39, 39], [0, 40, 40], [0, 41, 41], [0, 42, 42],\n\t\t\t\t[0, 43, 43], [0, 44, 44], [0, 45, 45], [0, 46, 46], [0, 47, 47], [0, 48, 48], [0, 49, 49],\n\t\t\t\t[1, 0, 50], [1, 1, 51], [1, 2, 52], [1, 3, 53], [1, 4, 54], [1, 5, 55], [1, 6, 56], [1, 7, 57],\n\t\t\t\t[2, 0, 58], [2, 1, 59]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #33525: Long line with ligatures takes a long time to paint decorations', () => {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t'append data to append data to append data to append data to append data to append data to append data to append data to append data to append data to append data to append data to append data to',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(194, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t[0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12], [0, 13, 13], [0, 14, 14],\n\t\t\t\t[0, 15, 15], [0, 16, 16], [0, 17, 17], [0, 18, 18], [0, 19, 19], [0, 20, 20], [0, 21, 21],\n\t\t\t\t[0, 22, 22], [0, 23, 23], [0, 24, 24], [0, 25, 25], [0, 26, 26], [0, 27, 27], [0, 28, 28],\n\t\t\t\t[0, 29, 29], [0, 30, 30], [0, 31, 31], [0, 32, 32], [0, 33, 33], [0, 34, 34], [0, 35, 35],\n\t\t\t\t[0, 36, 36], [0, 37, 37], [0, 38, 38], [0, 39, 39], [0, 40, 40], [0, 41, 41], [0, 42, 42],\n\t\t\t\t[0, 43, 43], [0, 44, 44],\n\t\t\t\t[1, 0, 45], [1, 1, 46], [1, 2, 47], [1, 3, 48], [1, 4, 49], [1, 5, 50], [1, 6, 51],\n\t\t\t\t[1, 7, 52], [1, 8, 53], [1, 9, 54], [1, 10, 55], [1, 11, 56], [1, 12, 57], [1, 13, 58],\n\t\t\t\t[1, 14, 59], [1, 15, 60], [1, 16, 61], [1, 17, 62], [1, 18, 63], [1, 19, 64], [1, 20, 65],\n\t\t\t\t[1, 21, 66], [1, 22, 67], [1, 23, 68], [1, 24, 69], [1, 25, 70], [1, 26, 71], [1, 27, 72],\n\t\t\t\t[1, 28, 73], [1, 29, 74], [1, 30, 75], [1, 31, 76], [1, 32, 77], [1, 33, 78], [1, 34, 79],\n\t\t\t\t[1, 35, 80], [1, 36, 81], [1, 37, 82], [1, 38, 83], [1, 39, 84], [1, 40, 85], [1, 41, 86],\n\t\t\t\t[1, 42, 87], [1, 43, 88], [1, 44, 89],\n\t\t\t\t[2, 0, 90], [2, 1, 91], [2, 2, 92], [2, 3, 93], [2, 4, 94], [2, 5, 95], [2, 6, 96],\n\t\t\t\t[2, 7, 97], [2, 8, 98], [2, 9, 99], [2, 10, 100], [2, 11, 101], [2, 12, 102],\n\t\t\t\t[2, 13, 103], [2, 14, 104], [2, 15, 105], [2, 16, 106], [2, 17, 107], [2, 18, 108],\n\t\t\t\t[2, 19, 109], [2, 20, 110], [2, 21, 111], [2, 22, 112], [2, 23, 113], [2, 24, 114],\n\t\t\t\t[2, 25, 115], [2, 26, 116], [2, 27, 117], [2, 28, 118], [2, 29, 119], [2, 30, 120],\n\t\t\t\t[2, 31, 121], [2, 32, 122], [2, 33, 123], [2, 34, 124], [2, 35, 125], [2, 36, 126],\n\t\t\t\t[2, 37, 127], [2, 38, 128], [2, 39, 129], [2, 40, 130], [2, 41, 131], [2, 42, 132],\n\t\t\t\t[2, 43, 133], [2, 44, 134],\n\t\t\t\t[3, 0, 135], [3, 1, 136], [3, 2, 137], [3, 3, 138], [3, 4, 139], [3, 5, 140], [3, 6, 141],\n\t\t\t\t[3, 7, 142], [3, 8, 143], [3, 9, 144], [3, 10, 145], [3, 11, 146], [3, 12, 147], [3, 13, 148],\n\t\t\t\t[3, 14, 149], [3, 15, 150], [3, 16, 151], [3, 17, 152], [3, 18, 153], [3, 19, 154], [3, 20, 155],\n\t\t\t\t[3, 21, 156], [3, 22, 157], [3, 23, 158], [3, 24, 159], [3, 25, 160], [3, 26, 161], [3, 27, 162],\n\t\t\t\t[3, 28, 163], [3, 29, 164], [3, 30, 165], [3, 31, 166], [3, 32, 167], [3, 33, 168], [3, 34, 169],\n\t\t\t\t[3, 35, 170], [3, 36, 171], [3, 37, 172], [3, 38, 173], [3, 39, 174], [3, 40, 175], [3, 41, 176],\n\t\t\t\t[3, 42, 177], [3, 43, 178], [3, 44, 179],\n\t\t\t\t[4, 0, 180], [4, 1, 181], [4, 2, 182], [4, 3, 183], [4, 4, 184], [4, 5, 185], [4, 6, 186],\n\t\t\t\t[4, 7, 187], [4, 8, 188], [4, 9, 189], [4, 10, 190], [4, 11, 191], [4, 12, 192], [4, 13, 193],\n\t\t\t\t[4, 14, 194]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #33525: Long line with ligatures takes a long time to paint decorations - not possible', () => {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t'appenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatato',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(194, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">appenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatato</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t[0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12], [0, 13, 13], [0, 14, 14],\n\t\t\t\t[0, 15, 15], [0, 16, 16], [0, 17, 17], [0, 18, 18], [0, 19, 19], [0, 20, 20], [0, 21, 21],\n\t\t\t\t[0, 22, 22], [0, 23, 23], [0, 24, 24], [0, 25, 25], [0, 26, 26], [0, 27, 27], [0, 28, 28],\n\t\t\t\t[0, 29, 29], [0, 30, 30], [0, 31, 31], [0, 32, 32], [0, 33, 33], [0, 34, 34], [0, 35, 35],\n\t\t\t\t[0, 36, 36], [0, 37, 37], [0, 38, 38], [0, 39, 39], [0, 40, 40], [0, 41, 41], [0, 42, 42],\n\t\t\t\t[0, 43, 43], [0, 44, 44], [0, 45, 45], [0, 46, 46], [0, 47, 47], [0, 48, 48], [0, 49, 49],\n\t\t\t\t[0, 50, 50], [0, 51, 51], [0, 52, 52], [0, 53, 53], [0, 54, 54], [0, 55, 55], [0, 56, 56],\n\t\t\t\t[0, 57, 57], [0, 58, 58], [0, 59, 59], [0, 60, 60], [0, 61, 61], [0, 62, 62], [0, 63, 63],\n\t\t\t\t[0, 64, 64], [0, 65, 65], [0, 66, 66], [0, 67, 67], [0, 68, 68], [0, 69, 69], [0, 70, 70],\n\t\t\t\t[0, 71, 71], [0, 72, 72], [0, 73, 73], [0, 74, 74], [0, 75, 75], [0, 76, 76], [0, 77, 77],\n\t\t\t\t[0, 78, 78], [0, 79, 79], [0, 80, 80], [0, 81, 81], [0, 82, 82], [0, 83, 83], [0, 84, 84],\n\t\t\t\t[0, 85, 85], [0, 86, 86], [0, 87, 87], [0, 88, 88], [0, 89, 89], [0, 90, 90], [0, 91, 91],\n\t\t\t\t[0, 92, 92], [0, 93, 93], [0, 94, 94], [0, 95, 95], [0, 96, 96], [0, 97, 97], [0, 98, 98],\n\t\t\t\t[0, 99, 99], [0, 100, 100], [0, 101, 101], [0, 102, 102], [0, 103, 103], [0, 104, 104],\n\t\t\t\t[0, 105, 105], [0, 106, 106], [0, 107, 107], [0, 108, 108], [0, 109, 109], [0, 110, 110],\n\t\t\t\t[0, 111, 111], [0, 112, 112], [0, 113, 113], [0, 114, 114], [0, 115, 115], [0, 116, 116],\n\t\t\t\t[0, 117, 117], [0, 118, 118], [0, 119, 119], [0, 120, 120], [0, 121, 121], [0, 122, 122],\n\t\t\t\t[0, 123, 123], [0, 124, 124], [0, 125, 125], [0, 126, 126], [0, 127, 127], [0, 128, 128],\n\t\t\t\t[0, 129, 129], [0, 130, 130], [0, 131, 131], [0, 132, 132], [0, 133, 133], [0, 134, 134],\n\t\t\t\t[0, 135, 135], [0, 136, 136], [0, 137, 137], [0, 138, 138], [0, 139, 139], [0, 140, 140],\n\t\t\t\t[0, 141, 141], [0, 142, 142], [0, 143, 143], [0, 144, 144], [0, 145, 145], [0, 146, 146],\n\t\t\t\t[0, 147, 147], [0, 148, 148], [0, 149, 149], [0, 150, 150], [0, 151, 151], [0, 152, 152],\n\t\t\t\t[0, 153, 153], [0, 154, 154], [0, 155, 155], [0, 156, 156]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #91936: Semantic token color highlighting fails on line with selected text', () => {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t'                    else if ($s = 08) then \\'\\\\b\\'',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([\n\t\t\t\tcreatePart(20, 1),\n\t\t\t\tcreatePart(24, 15),\n\t\t\t\tcreatePart(25, 1),\n\t\t\t\tcreatePart(27, 15),\n\t\t\t\tcreatePart(28, 1),\n\t\t\t\tcreatePart(29, 1),\n\t\t\t\tcreatePart(29, 1),\n\t\t\t\tcreatePart(31, 16),\n\t\t\t\tcreatePart(32, 1),\n\t\t\t\tcreatePart(33, 1),\n\t\t\t\tcreatePart(34, 1),\n\t\t\t\tcreatePart(36, 6),\n\t\t\t\tcreatePart(36, 1),\n\t\t\t\tcreatePart(37, 1),\n\t\t\t\tcreatePart(38, 1),\n\t\t\t\tcreatePart(42, 15),\n\t\t\t\tcreatePart(43, 1),\n\t\t\t\tcreatePart(47, 11)\n\t\t\t]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t11,\n\t\t\t11,\n\t\t\t10000,\n\t\t\t'selection',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t[new LineRange(0, 47)]\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk15\">else</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk15\">if</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk1\">(</span>',\n\t\t\t\t'<span class=\"mtk16\">$s</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk1\">=</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk6\">08</span>',\n\t\t\t\t'<span class=\"mtk1\">)</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk15\">then</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk11\">\\'\\\\b\\'</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0],\n\t\t\t\t[1, 0, 1],\n\t\t\t\t[2, 0, 2],\n\t\t\t\t[3, 0, 3],\n\t\t\t\t[4, 0, 4],\n\t\t\t\t[5, 0, 5],\n\t\t\t\t[6, 0, 6],\n\t\t\t\t[7, 0, 7],\n\t\t\t\t[8, 0, 8],\n\t\t\t\t[9, 0, 9],\n\t\t\t\t[10, 0, 10],\n\t\t\t\t[11, 0, 11],\n\t\t\t\t[12, 0, 12],\n\t\t\t\t[13, 0, 13],\n\t\t\t\t[14, 0, 14],\n\t\t\t\t[15, 0, 15],\n\t\t\t\t[16, 0, 16],\n\t\t\t\t[17, 0, 17],\n\t\t\t\t[18, 0, 18],\n\t\t\t\t[19, 0, 19],\n\t\t\t\t[20, 0, 20], [20, 1, 21], [20, 2, 22], [20, 3, 23],\n\t\t\t\t[21, 0, 24],\n\t\t\t\t[22, 0, 25], [22, 1, 26],\n\t\t\t\t[23, 0, 27],\n\t\t\t\t[24, 0, 28],\n\t\t\t\t[25, 0, 29], [25, 1, 30],\n\t\t\t\t[26, 0, 31],\n\t\t\t\t[27, 0, 32],\n\t\t\t\t[28, 0, 33],\n\t\t\t\t[29, 0, 34], [29, 1, 35],\n\t\t\t\t[30, 0, 36],\n\t\t\t\t[31, 0, 37],\n\t\t\t\t[32, 0, 38], [32, 1, 39], [32, 2, 40], [32, 3, 41],\n\t\t\t\t[33, 0, 42],\n\t\t\t\t[34, 0, 43], [34, 1, 44], [34, 2, 45], [34, 3, 46], [34, 4, 47]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #119416: Delete Control Character (U+007F / &#127;) displayed as space', () => {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t'[' + String.fromCharCode(127) + '] [' + String.fromCharCode(0) + ']',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(7, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">[\\u2421]\\u00a0[\\u2400]</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #116939: Important control characters aren\\'t rendered', () => {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t`transferBalance(5678,${String.fromCharCode(0x202E)}6776,4321${String.fromCharCode(0x202C)},\"USD\");`,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(42, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtk3\">transferBalance(5678,</span>',\n\t\t\t\t'<span class=\"mtkcontrol\">[U+202E]</span>',\n\t\t\t\t'<span class=\"mtk3\">6776,4321</span>',\n\t\t\t\t'<span class=\"mtkcontrol\">[U+202C]</span>',\n\t\t\t\t'<span class=\"mtk3\">,\"USD\");</span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [0, 5, 5], [0, 6, 6], [0, 7, 7],\n\t\t\t\t[0, 8, 8], [0, 9, 9], [0, 10, 10], [0, 11, 11], [0, 12, 12], [0, 13, 13], [0, 14, 14],\n\t\t\t\t[0, 15, 15], [0, 16, 16], [0, 17, 17], [0, 18, 18], [0, 19, 19], [0, 20, 20],\n\t\t\t\t[1, 0, 21],\n\t\t\t\t[2, 0, 29], [2, 1, 30], [2, 2, 31], [2, 3, 32], [2, 4, 33], [2, 5, 34], [2, 6, 35],\n\t\t\t\t[2, 7, 36], [2, 8, 37],\n\t\t\t\t[3, 0, 38],\n\t\t\t\t[4, 0, 46], [4, 1, 47], [4, 2, 48], [4, 3, 49], [4, 4, 50], [4, 5, 51], [4, 6, 52], [4, 7, 53], [4, 8, 54]\n\t\t\t]\n\t\t});\n\t});\n\n\ttest('issue #124038: Multiple end-of-line text decorations get merged', () => {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t'    if',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(4, 1), createPart(6, 2)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(7, 7, 'ced-1-TextEditorDecorationType2-17c14d98-3 ced-1-TextEditorDecorationType2-3', InlineDecorationType.Before),\n\t\t\t\tnew LineDecoration(7, 7, 'ced-1-TextEditorDecorationType2-17c14d98-4 ced-1-TextEditorDecorationType2-4', InlineDecorationType.After),\n\t\t\t\tnew LineDecoration(7, 7, 'ced-ghost-text-1-4', InlineDecorationType.After),\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.deepStrictEqual(inflateRenderLineOutput(actual), {\n\t\t\thtml: [\n\t\t\t\t'<span class=\"mtkw\">\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c\\u00b7\\u200c</span>',\n\t\t\t\t'<span class=\"mtk2\">if</span>',\n\t\t\t\t'<span class=\"ced-1-TextEditorDecorationType2-17c14d98-3 ced-1-TextEditorDecorationType2-3\"></span>',\n\t\t\t\t'<span class=\"ced-1-TextEditorDecorationType2-17c14d98-4 ced-1-TextEditorDecorationType2-4\"></span>',\n\t\t\t\t'<span class=\"ced-ghost-text-1-4\"></span>',\n\t\t\t],\n\t\t\tmapping: [\n\t\t\t\t[0, 0, 0], [0, 2, 1], [0, 4, 2], [0, 6, 3],\n\t\t\t\t[1, 0, 4], [1, 1, 5],\n\t\t\t\t[3, 0, 6]\n\t\t\t]\n\t\t});\n\t});\n\n\tfunction createTestGetColumnOfLinePartOffset(lineContent: string, tabSize: number, parts: TestLineToken[], expectedPartLengths: number[]): (partIndex: number, partLength: number, offset: number, expected: number) => void {\n\t\tconst renderLineOutput = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens(parts),\n\t\t\t[],\n\t\t\ttabSize,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\treturn (partIndex: number, partLength: number, offset: number, expected: number) => {\n\t\t\tconst actualColumn = renderLineOutput.characterMapping.getColumn(new DomPosition(partIndex, offset), partLength);\n\t\t\tassert.strictEqual(actualColumn, expected, 'getColumn for ' + partIndex + ', ' + offset);\n\t\t};\n\t}\n\n\ttest('getColumnOfLinePartOffset 1 - simple text', () => {\n\t\tconst testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'hello world',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tcreatePart(11, 1)\n\t\t\t],\n\t\t\t[11]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 1, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 2, 3);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 3, 4);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 4, 5);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 5, 6);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 6, 7);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 7, 8);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 8, 9);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 9, 10);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 10, 11);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 11, 12);\n\t});\n\n\ttest('getColumnOfLinePartOffset 2 - regular JS', () => {\n\t\tconst testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'var x = 3;',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tcreatePart(3, 1),\n\t\t\t\tcreatePart(4, 2),\n\t\t\t\tcreatePart(5, 3),\n\t\t\t\tcreatePart(8, 4),\n\t\t\t\tcreatePart(9, 5),\n\t\t\t\tcreatePart(10, 6),\n\t\t\t],\n\t\t\t[3, 1, 1, 3, 1, 1]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 1, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 2, 3);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 3, 4);\n\t\ttestGetColumnOfLinePartOffset(1, 1, 0, 4);\n\t\ttestGetColumnOfLinePartOffset(1, 1, 1, 5);\n\t\ttestGetColumnOfLinePartOffset(2, 1, 0, 5);\n\t\ttestGetColumnOfLinePartOffset(2, 1, 1, 6);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 0, 6);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 1, 7);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 2, 8);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 3, 9);\n\t\ttestGetColumnOfLinePartOffset(4, 1, 0, 9);\n\t\ttestGetColumnOfLinePartOffset(4, 1, 1, 10);\n\t\ttestGetColumnOfLinePartOffset(5, 1, 0, 10);\n\t\ttestGetColumnOfLinePartOffset(5, 1, 1, 11);\n\t});\n\n\ttest('getColumnOfLinePartOffset 3 - tab with tab size 6', () => {\n\t\tconst testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'\\t',\n\t\t\t6,\n\t\t\t[\n\t\t\t\tcreatePart(1, 1)\n\t\t\t],\n\t\t\t[6]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 1, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 2, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 3, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 4, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 5, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 6, 2);\n\t});\n\n\ttest('getColumnOfLinePartOffset 4 - once indented line, tab size 4', () => {\n\t\tconst testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'\\tfunction',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tcreatePart(1, 1),\n\t\t\t\tcreatePart(9, 2),\n\t\t\t],\n\t\t\t[4, 8]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 1, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 2, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 3, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 4, 2);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 0, 2);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 1, 3);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 2, 4);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 3, 5);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 4, 6);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 5, 7);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 6, 8);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 7, 9);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 8, 10);\n\t});\n\n\ttest('getColumnOfLinePartOffset 5 - twice indented line, tab size 4', () => {\n\t\tconst testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'\\t\\tfunction',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tcreatePart(2, 1),\n\t\t\t\tcreatePart(10, 2),\n\t\t\t],\n\t\t\t[8, 8]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 1, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 2, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 3, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 4, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 5, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 6, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 7, 3);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 8, 3);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 0, 3);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 1, 4);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 2, 5);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 3, 6);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 4, 7);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 5, 8);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 6, 9);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 7, 10);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 8, 11);\n\t});\n});\n"],
  "mappings": "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AAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAC9G,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,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AAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACpd,CAAC,GAAG,GAAG,EAAE;AAAA,QACT,CAAC,GAAG,GAAG,EAAE;AAAA,QACT,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACpQ,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG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C,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACpF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,MAClD;AAAA,IACD,CAAC;AAAA,EACF,CAAC;AAED,OAAK,oEAAoE,MAAM;AAE9E,UAAM,SAAS,eAAe,IAAI;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,qBAAqB,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC;AAAA,MACzC,CAAC;AAAA,MACD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAED,WAAO,gBAAgB,wBAAwB,MAAM,GAAG;AAAA,MACvD,MAAM;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA,SAAS;AAAA,QACR,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QACrF,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACpF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACpC,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAC7F,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACnG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACrG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACrG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACrG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAC3E,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,MAC3G;AAAA,IACD,CAAC;AAAA,EACF,CAAC;AAED,OAAK,kEAAkE,MAAM;AAE5E,UAAM,SAAS,eAAe,IAAI;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,qBAAqB,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC;AAAA,MACzC,CAAC;AAAA,MACD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAED,WAAO,gBAAgB,wBAAwB,MAAM,GAAG;AAAA,MACvD,MAAM;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA,SAAS;AAAA,QACR,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QACrF,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACpF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QACV,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAC7F,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,GAAG,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACtF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QACzF,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG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,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QACjF,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QACjF,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QACjF,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QACjF,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QACjF,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QACzB,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QACxF,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAC5F,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAC/F,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAC/F,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAC/F,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAC/F,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QACvC,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QACxF,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,GAAG,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAAG,CAAC,GAAG,IAAI,GAAG;AAAA,QAC5F,CAAC,GAAG,IAAI,GAAG;AAAA,MACZ;AAAA,IACD,CAAC;AAAA,EACF,CAAC;AAED,OAAK,gGAAgG,MAAM;AAC1G,UAAM,SAAS,eAAe,IAAI;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,qBAAqB,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC;AAAA,MACzC,CAAC;AAAA,MACD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAED,WAAO,gBAAgB,wBAAwB,MAAM,GAAG;AAAA,MACvD,MAAM;AAAA,QACL;AAAA,MACD;AAAA,MACA,SAAS;AAAA,QACR,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QACrF,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,GAAG,CAAC;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACpF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QACxF,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI,EAAE;AAAA,QAAG,CAAC,GAAG,IAAI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",
  "names": []
}
