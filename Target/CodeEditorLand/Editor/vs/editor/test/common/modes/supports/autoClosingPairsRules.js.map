{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/modes/supports/autoClosingPairsRules.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAutoClosingPair, IAutoClosingPairConditional } from '../../../../common/languages/languageConfiguration.js';\n\nexport const javascriptAutoClosingPairsRules: IAutoClosingPairConditional[] = [\n\t{ open: '{', close: '}' },\n\t{ open: '[', close: ']' },\n\t{ open: '(', close: ')' },\n\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t{ open: '\"', close: '\"', notIn: ['string'] },\n\t{ open: '`', close: '`', notIn: ['string', 'comment'] },\n\t{ open: '/**', close: ' */', notIn: ['string'] }\n];\n\nexport const latexAutoClosingPairsRules: IAutoClosingPair[] = [\n\t{ open: '\\\\left(', close: '\\\\right)' },\n\t{ open: '\\\\left[', close: '\\\\right]' },\n\t{ open: '\\\\left\\\\{', close: '\\\\right\\\\}' },\n\t{ open: '\\\\bigl(', close: '\\\\bigr)' },\n\t{ open: '\\\\bigl[', close: '\\\\bigr]' },\n\t{ open: '\\\\bigl\\\\{', close: '\\\\bigr\\\\}' },\n\t{ open: '\\\\Bigl(', close: '\\\\Bigr)' },\n\t{ open: '\\\\Bigl[', close: '\\\\Bigr]' },\n\t{ open: '\\\\Bigl\\\\{', close: '\\\\Bigr\\\\}' },\n\t{ open: '\\\\biggl(', close: '\\\\biggr)' },\n\t{ open: '\\\\biggl[', close: '\\\\biggr]' },\n\t{ open: '\\\\biggl\\\\{', close: '\\\\biggr\\\\}' },\n\t{ open: '\\\\Biggl(', close: '\\\\Biggr)' },\n\t{ open: '\\\\Biggl[', close: '\\\\Biggr]' },\n\t{ open: '\\\\Biggl\\\\{', close: '\\\\Biggr\\\\}' },\n\t{ open: '\\\\(', close: '\\\\)' },\n\t{ open: '\\\\[', close: '\\\\]' },\n\t{ open: '\\\\{', close: '\\\\}' },\n\t{ open: '{', close: '}' },\n\t{ open: '[', close: ']' },\n\t{ open: '(', close: ')' },\n\t{ open: '`', close: '\\'' },\n];\n"],
  "mappings": "AAKA,SAAS,kBAAkB,mCAAmC;AAEvD,MAAM,kCAAiE;AAAA,EAC7E,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EACxB,EAAE,MAAM,KAAM,OAAO,KAAM,OAAO,CAAC,UAAU,SAAS,EAAE;AAAA,EACxD,EAAE,MAAM,KAAK,OAAO,KAAK,OAAO,CAAC,QAAQ,EAAE;AAAA,EAC3C,EAAE,MAAM,KAAK,OAAO,KAAK,OAAO,CAAC,UAAU,SAAS,EAAE;AAAA,EACtD,EAAE,MAAM,OAAO,OAAO,OAAO,OAAO,CAAC,QAAQ,EAAE;AAChD;AAEO,MAAM,6BAAiD;AAAA,EAC7D,EAAE,MAAM,WAAW,OAAO,WAAW;AAAA,EACrC,EAAE,MAAM,WAAW,OAAO,WAAW;AAAA,EACrC,EAAE,MAAM,aAAa,OAAO,aAAa;AAAA,EACzC,EAAE,MAAM,WAAW,OAAO,UAAU;AAAA,EACpC,EAAE,MAAM,WAAW,OAAO,UAAU;AAAA,EACpC,EAAE,MAAM,aAAa,OAAO,YAAY;AAAA,EACxC,EAAE,MAAM,WAAW,OAAO,UAAU;AAAA,EACpC,EAAE,MAAM,WAAW,OAAO,UAAU;AAAA,EACpC,EAAE,MAAM,aAAa,OAAO,YAAY;AAAA,EACxC,EAAE,MAAM,YAAY,OAAO,WAAW;AAAA,EACtC,EAAE,MAAM,YAAY,OAAO,WAAW;AAAA,EACtC,EAAE,MAAM,cAAc,OAAO,aAAa;AAAA,EAC1C,EAAE,MAAM,YAAY,OAAO,WAAW;AAAA,EACtC,EAAE,MAAM,YAAY,OAAO,WAAW;AAAA,EACtC,EAAE,MAAM,cAAc,OAAO,aAAa;AAAA,EAC1C,EAAE,MAAM,OAAO,OAAO,MAAM;AAAA,EAC5B,EAAE,MAAM,OAAO,OAAO,MAAM;AAAA,EAC5B,EAAE,MAAM,OAAO,OAAO,MAAM;AAAA,EAC5B,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EACxB,EAAE,MAAM,KAAK,OAAO,IAAK;AAC1B;",
  "names": []
}
