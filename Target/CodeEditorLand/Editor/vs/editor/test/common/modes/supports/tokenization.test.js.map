{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/modes/supports/tokenization.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { FontStyle } from '../../../../common/encodedTokenAttributes.js';\nimport { ColorMap, ExternalThemeTrieElement, ParsedTokenThemeRule, ThemeTrieElementRule, TokenTheme, parseTokenTheme, strcmp } from '../../../../common/languages/supports/tokenization.js';\n\nsuite('Token theme matching', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('gives higher priority to deeper matches', () => {\n\t\tconst theme = TokenTheme.createFromRawTokenTheme([\n\t\t\t{ token: '', foreground: '100000', background: '200000' },\n\t\t\t{ token: 'punctuation.definition.string.begin.html', foreground: '300000' },\n\t\t\t{ token: 'punctuation.definition.string', foreground: '400000' },\n\t\t], []);\n\n\t\tconst colorMap = new ColorMap();\n\t\tcolorMap.getId('100000');\n\t\tconst _B = colorMap.getId('200000');\n\t\tcolorMap.getId('400000');\n\t\tconst _D = colorMap.getId('300000');\n\n\t\tconst actual = theme._match('punctuation.definition.string.begin.html');\n\n\t\tassert.deepStrictEqual(actual, new ThemeTrieElementRule(FontStyle.None, _D, _B));\n\t});\n\n\ttest('can match', () => {\n\t\tconst theme = TokenTheme.createFromRawTokenTheme([\n\t\t\t{ token: '', foreground: 'F8F8F2', background: '272822' },\n\t\t\t{ token: 'source', background: '100000' },\n\t\t\t{ token: 'something', background: '100000' },\n\t\t\t{ token: 'bar', background: '200000' },\n\t\t\t{ token: 'baz', background: '200000' },\n\t\t\t{ token: 'bar', fontStyle: 'bold' },\n\t\t\t{ token: 'constant', fontStyle: 'italic', foreground: '300000' },\n\t\t\t{ token: 'constant.numeric', foreground: '400000' },\n\t\t\t{ token: 'constant.numeric.hex', fontStyle: 'bold' },\n\t\t\t{ token: 'constant.numeric.oct', fontStyle: 'bold italic underline' },\n\t\t\t{ token: 'constant.numeric.bin', fontStyle: 'bold strikethrough' },\n\t\t\t{ token: 'constant.numeric.dec', fontStyle: '', foreground: '500000' },\n\t\t\t{ token: 'storage.object.bar', fontStyle: '', foreground: '600000' },\n\t\t], []);\n\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('200000');\n\t\tconst _D = colorMap.getId('300000');\n\t\tconst _E = colorMap.getId('400000');\n\t\tconst _F = colorMap.getId('500000');\n\t\tconst _G = colorMap.getId('100000');\n\t\tconst _H = colorMap.getId('600000');\n\n\t\tfunction assertMatch(scopeName: string, expected: ThemeTrieElementRule): void {\n\t\t\tconst actual = theme._match(scopeName);\n\t\t\tassert.deepStrictEqual(actual, expected, 'when matching <<' + scopeName + '>>');\n\t\t}\n\n\t\tfunction assertSimpleMatch(scopeName: string, fontStyle: FontStyle, foreground: number, background: number): void {\n\t\t\tassertMatch(scopeName, new ThemeTrieElementRule(fontStyle, foreground, background));\n\t\t}\n\n\t\tfunction assertNoMatch(scopeName: string): void {\n\t\t\tassertMatch(scopeName, new ThemeTrieElementRule(FontStyle.None, _A, _B));\n\t\t}\n\n\t\t// matches defaults\n\t\tassertNoMatch('');\n\t\tassertNoMatch('bazz');\n\t\tassertNoMatch('asdfg');\n\n\t\t// matches source\n\t\tassertSimpleMatch('source', FontStyle.None, _A, _G);\n\t\tassertSimpleMatch('source.ts', FontStyle.None, _A, _G);\n\t\tassertSimpleMatch('source.tss', FontStyle.None, _A, _G);\n\n\t\t// matches something\n\t\tassertSimpleMatch('something', FontStyle.None, _A, _G);\n\t\tassertSimpleMatch('something.ts', FontStyle.None, _A, _G);\n\t\tassertSimpleMatch('something.tss', FontStyle.None, _A, _G);\n\n\t\t// matches baz\n\t\tassertSimpleMatch('baz', FontStyle.None, _A, _C);\n\t\tassertSimpleMatch('baz.ts', FontStyle.None, _A, _C);\n\t\tassertSimpleMatch('baz.tss', FontStyle.None, _A, _C);\n\n\t\t// matches constant\n\t\tassertSimpleMatch('constant', FontStyle.Italic, _D, _B);\n\t\tassertSimpleMatch('constant.string', FontStyle.Italic, _D, _B);\n\t\tassertSimpleMatch('constant.hex', FontStyle.Italic, _D, _B);\n\n\t\t// matches constant.numeric\n\t\tassertSimpleMatch('constant.numeric', FontStyle.Italic, _E, _B);\n\t\tassertSimpleMatch('constant.numeric.baz', FontStyle.Italic, _E, _B);\n\n\t\t// matches constant.numeric.hex\n\t\tassertSimpleMatch('constant.numeric.hex', FontStyle.Bold, _E, _B);\n\t\tassertSimpleMatch('constant.numeric.hex.baz', FontStyle.Bold, _E, _B);\n\n\t\t// matches constant.numeric.oct\n\t\tassertSimpleMatch('constant.numeric.oct', FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, _E, _B);\n\t\tassertSimpleMatch('constant.numeric.oct.baz', FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, _E, _B);\n\n\t\t// matches constant.numeric.bin\n\t\tassertSimpleMatch('constant.numeric.bin', FontStyle.Bold | FontStyle.Strikethrough, _E, _B);\n\t\tassertSimpleMatch('constant.numeric.bin.baz', FontStyle.Bold | FontStyle.Strikethrough, _E, _B);\n\n\t\t// matches constant.numeric.dec\n\t\tassertSimpleMatch('constant.numeric.dec', FontStyle.None, _F, _B);\n\t\tassertSimpleMatch('constant.numeric.dec.baz', FontStyle.None, _F, _B);\n\n\t\t// matches storage.object.bar\n\t\tassertSimpleMatch('storage.object.bar', FontStyle.None, _H, _B);\n\t\tassertSimpleMatch('storage.object.bar.baz', FontStyle.None, _H, _B);\n\n\t\t// does not match storage.object.bar\n\t\tassertSimpleMatch('storage.object.bart', FontStyle.None, _A, _B);\n\t\tassertSimpleMatch('storage.object', FontStyle.None, _A, _B);\n\t\tassertSimpleMatch('storage', FontStyle.None, _A, _B);\n\n\t\tassertSimpleMatch('bar', FontStyle.Bold, _A, _C);\n\t});\n});\n\nsuite('Token theme parsing', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('can parse', () => {\n\n\t\tconst actual = parseTokenTheme([\n\t\t\t{ token: '', foreground: 'F8F8F2', background: '272822' },\n\t\t\t{ token: 'source', background: '100000' },\n\t\t\t{ token: 'something', background: '100000' },\n\t\t\t{ token: 'bar', background: '010000' },\n\t\t\t{ token: 'baz', background: '010000' },\n\t\t\t{ token: 'bar', fontStyle: 'bold' },\n\t\t\t{ token: 'constant', fontStyle: 'italic', foreground: 'ff0000' },\n\t\t\t{ token: 'constant.numeric', foreground: '00ff00' },\n\t\t\t{ token: 'constant.numeric.hex', fontStyle: 'bold' },\n\t\t\t{ token: 'constant.numeric.oct', fontStyle: 'bold italic underline' },\n\t\t\t{ token: 'constant.numeric.dec', fontStyle: '', foreground: '0000ff' },\n\t\t]);\n\n\t\tconst expected = [\n\t\t\tnew ParsedTokenThemeRule('', 0, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('source', 1, FontStyle.NotSet, null, '100000'),\n\t\t\tnew ParsedTokenThemeRule('something', 2, FontStyle.NotSet, null, '100000'),\n\t\t\tnew ParsedTokenThemeRule('bar', 3, FontStyle.NotSet, null, '010000'),\n\t\t\tnew ParsedTokenThemeRule('baz', 4, FontStyle.NotSet, null, '010000'),\n\t\t\tnew ParsedTokenThemeRule('bar', 5, FontStyle.Bold, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant', 6, FontStyle.Italic, 'ff0000', null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric', 7, FontStyle.NotSet, '00ff00', null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.hex', 8, FontStyle.Bold, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.oct', 9, FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.dec', 10, FontStyle.None, '0000ff', null),\n\t\t];\n\n\t\tassert.deepStrictEqual(actual, expected);\n\t});\n});\n\nsuite('Token theme resolving', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('strcmp works', () => {\n\t\tconst actual = ['bar', 'z', 'zu', 'a', 'ab', ''].sort(strcmp);\n\n\t\tconst expected = ['', 'a', 'ab', 'bar', 'z', 'zu'];\n\t\tassert.deepStrictEqual(actual, expected);\n\t});\n\n\ttest('always has defaults', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 1', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, null, null)\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 2', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.None, null, null)\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 3', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.Bold, null, null)\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 4', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'ff0000', null)\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('ff0000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 5', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, null, 'ff0000')\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ff0000');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('can merge incoming defaults', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, null, 'ff0000'),\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, '00ff00', null),\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.Bold, null, null),\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('00ff00');\n\t\tconst _B = colorMap.getId('ff0000');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _A, _B)));\n\t});\n\n\ttest('defaults are inherited', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('var', -1, FontStyle.NotSet, 'ff0000', null)\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('ff0000');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tconst root = new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B), {\n\t\t\t'var': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _C, _B))\n\t\t});\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), root);\n\t});\n\n\ttest('same rules get merged', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('var', 1, FontStyle.Bold, null, null),\n\t\t\tnew ParsedTokenThemeRule('var', 0, FontStyle.NotSet, 'ff0000', null),\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('ff0000');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tconst root = new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B), {\n\t\t\t'var': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _C, _B))\n\t\t});\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), root);\n\t});\n\n\ttest('rules are inherited 1', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('var', -1, FontStyle.Bold, 'ff0000', null),\n\t\t\tnew ParsedTokenThemeRule('var.identifier', -1, FontStyle.NotSet, '00ff00', null),\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('ff0000');\n\t\tconst _D = colorMap.getId('00ff00');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tconst root = new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B), {\n\t\t\t'var': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _C, _B), {\n\t\t\t\t'identifier': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _D, _B))\n\t\t\t})\n\t\t});\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), root);\n\t});\n\n\ttest('rules are inherited 2', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('var', -1, FontStyle.Bold, 'ff0000', null),\n\t\t\tnew ParsedTokenThemeRule('var.identifier', -1, FontStyle.NotSet, '00ff00', null),\n\t\t\tnew ParsedTokenThemeRule('constant', 4, FontStyle.Italic, '100000', null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric', 5, FontStyle.NotSet, '200000', null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.hex', 6, FontStyle.Bold, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.oct', 7, FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.dec', 8, FontStyle.None, '300000', null),\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('100000');\n\t\tconst _D = colorMap.getId('200000');\n\t\tconst _E = colorMap.getId('300000');\n\t\tconst _F = colorMap.getId('ff0000');\n\t\tconst _G = colorMap.getId('00ff00');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tconst root = new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B), {\n\t\t\t'var': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _F, _B), {\n\t\t\t\t'identifier': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _G, _B))\n\t\t\t}),\n\t\t\t'constant': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Italic, _C, _B), {\n\t\t\t\t'numeric': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Italic, _D, _B), {\n\t\t\t\t\t'hex': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _D, _B)),\n\t\t\t\t\t'oct': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, _D, _B)),\n\t\t\t\t\t'dec': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _E, _B)),\n\t\t\t\t})\n\t\t\t})\n\t\t});\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), root);\n\t});\n\n\ttest('custom colors are first in color map', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('var', -1, FontStyle.NotSet, 'F8F8F2', null)\n\t\t], [\n\t\t\t'000000', 'FFFFFF', '0F0F0F'\n\t\t]);\n\t\tconst colorMap = new ColorMap();\n\t\tcolorMap.getId('000000');\n\t\tcolorMap.getId('FFFFFF');\n\t\tcolorMap.getId('0F0F0F');\n\t\tcolorMap.getId('F8F8F2');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
