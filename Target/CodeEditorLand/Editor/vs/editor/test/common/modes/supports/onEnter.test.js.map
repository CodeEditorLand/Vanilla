{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/modes/supports/onEnter.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { CharacterPair, IndentAction } from '../../../../common/languages/languageConfiguration.js';\nimport { OnEnterSupport } from '../../../../common/languages/supports/onEnter.js';\nimport { javascriptOnEnterRules } from './onEnterRules.js';\nimport { EditorAutoIndentStrategy } from '../../../../common/config/editorOptions.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('OnEnter', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('uses brackets', () => {\n\t\tconst brackets: CharacterPair[] = [\n\t\t\t['(', ')'],\n\t\t\t['begin', 'end']\n\t\t];\n\t\tconst support = new OnEnterSupport({\n\t\t\tbrackets: brackets\n\t\t});\n\t\tconst testIndentAction = (beforeText: string, afterText: string, expected: IndentAction) => {\n\t\t\tconst actual = support.onEnter(EditorAutoIndentStrategy.Advanced, '', beforeText, afterText);\n\t\t\tif (expected === IndentAction.None) {\n\t\t\t\tassert.strictEqual(actual, null);\n\t\t\t} else {\n\t\t\t\tassert.strictEqual(actual!.indentAction, expected);\n\t\t\t}\n\t\t};\n\n\t\ttestIndentAction('a', '', IndentAction.None);\n\t\ttestIndentAction('', 'b', IndentAction.None);\n\t\ttestIndentAction('(', 'b', IndentAction.Indent);\n\t\ttestIndentAction('a', ')', IndentAction.None);\n\t\ttestIndentAction('begin', 'ending', IndentAction.Indent);\n\t\ttestIndentAction('abegin', 'end', IndentAction.None);\n\t\ttestIndentAction('begin', ')', IndentAction.Indent);\n\t\ttestIndentAction('begin', 'end', IndentAction.IndentOutdent);\n\t\ttestIndentAction('begin ', ' end', IndentAction.IndentOutdent);\n\t\ttestIndentAction(' begin', 'end//as', IndentAction.IndentOutdent);\n\t\ttestIndentAction('(', ')', IndentAction.IndentOutdent);\n\t\ttestIndentAction('( ', ')', IndentAction.IndentOutdent);\n\t\ttestIndentAction('a(', ')b', IndentAction.IndentOutdent);\n\n\t\ttestIndentAction('(', '', IndentAction.Indent);\n\t\ttestIndentAction('(', 'foo', IndentAction.Indent);\n\t\ttestIndentAction('begin', 'foo', IndentAction.Indent);\n\t\ttestIndentAction('begin', '', IndentAction.Indent);\n\t});\n\n\n\ttest('Issue #121125: onEnterRules with global modifier', () => {\n\t\tconst support = new OnEnterSupport({\n\t\t\tonEnterRules: [\n\t\t\t\t{\n\t\t\t\t\taction: {\n\t\t\t\t\t\tappendText: '/// ',\n\t\t\t\t\t\tindentAction: IndentAction.Outdent\n\t\t\t\t\t},\n\t\t\t\t\tbeforeText: /^\\s*\\/{3}.*$/gm\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tconst testIndentAction = (previousLineText: string, beforeText: string, afterText: string, expectedIndentAction: IndentAction | null, expectedAppendText: string | null, removeText: number = 0) => {\n\t\t\tconst actual = support.onEnter(EditorAutoIndentStrategy.Advanced, previousLineText, beforeText, afterText);\n\t\t\tif (expectedIndentAction === null) {\n\t\t\t\tassert.strictEqual(actual, null, 'isNull:' + beforeText);\n\t\t\t} else {\n\t\t\t\tassert.strictEqual(actual !== null, true, 'isNotNull:' + beforeText);\n\t\t\t\tassert.strictEqual(actual!.indentAction, expectedIndentAction, 'indentAction:' + beforeText);\n\t\t\t\tif (expectedAppendText !== null) {\n\t\t\t\t\tassert.strictEqual(actual!.appendText, expectedAppendText, 'appendText:' + beforeText);\n\t\t\t\t}\n\t\t\t\tif (removeText !== 0) {\n\t\t\t\t\tassert.strictEqual(actual!.removeText, removeText, 'removeText:' + beforeText);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\ttestIndentAction('/// line', '/// line', '', IndentAction.Outdent, '/// ');\n\t\ttestIndentAction('/// line', '/// line', '', IndentAction.Outdent, '/// ');\n\t});\n\n\ttest('uses regExpRules', () => {\n\t\tconst support = new OnEnterSupport({\n\t\t\tonEnterRules: javascriptOnEnterRules\n\t\t});\n\t\tconst testIndentAction = (previousLineText: string, beforeText: string, afterText: string, expectedIndentAction: IndentAction | null, expectedAppendText: string | null, removeText: number = 0) => {\n\t\t\tconst actual = support.onEnter(EditorAutoIndentStrategy.Advanced, previousLineText, beforeText, afterText);\n\t\t\tif (expectedIndentAction === null) {\n\t\t\t\tassert.strictEqual(actual, null, 'isNull:' + beforeText);\n\t\t\t} else {\n\t\t\t\tassert.strictEqual(actual !== null, true, 'isNotNull:' + beforeText);\n\t\t\t\tassert.strictEqual(actual!.indentAction, expectedIndentAction, 'indentAction:' + beforeText);\n\t\t\t\tif (expectedAppendText !== null) {\n\t\t\t\t\tassert.strictEqual(actual!.appendText, expectedAppendText, 'appendText:' + beforeText);\n\t\t\t\t}\n\t\t\t\tif (removeText !== 0) {\n\t\t\t\t\tassert.strictEqual(actual!.removeText, removeText, 'removeText:' + beforeText);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\ttestIndentAction('', '\\t/**', ' */', IndentAction.IndentOutdent, ' * ');\n\t\ttestIndentAction('', '\\t/**', '', IndentAction.None, ' * ');\n\t\ttestIndentAction('', '\\t/** * / * / * /', '', IndentAction.None, ' * ');\n\t\ttestIndentAction('', '\\t/** /*', '', IndentAction.None, ' * ');\n\t\ttestIndentAction('', '/**', '', IndentAction.None, ' * ');\n\t\ttestIndentAction('', '\\t/**/', '', null, null);\n\t\ttestIndentAction('', '\\t/***/', '', null, null);\n\t\ttestIndentAction('', '\\t/*******/', '', null, null);\n\t\ttestIndentAction('', '\\t/** * * * * */', '', null, null);\n\t\ttestIndentAction('', '\\t/** */', '', null, null);\n\t\ttestIndentAction('', '\\t/** asdfg */', '', null, null);\n\t\ttestIndentAction('', '\\t/* asdfg */', '', null, null);\n\t\ttestIndentAction('', '\\t/* asdfg */', '', null, null);\n\t\ttestIndentAction('', '\\t/** asdfg */', '', null, null);\n\t\ttestIndentAction('', '*/', '', null, null);\n\t\ttestIndentAction('', '\\t/*', '', null, null);\n\t\ttestIndentAction('', '\\t*', '', null, null);\n\n\t\ttestIndentAction('\\t/**', '\\t *', '', IndentAction.None, '* ');\n\t\ttestIndentAction('\\t * something', '\\t *', '', IndentAction.None, '* ');\n\t\ttestIndentAction('\\t *', '\\t *', '', IndentAction.None, '* ');\n\n\t\ttestIndentAction('', '\\t */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('', '\\t * */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('', '\\t * * / * / * / */', '', null, null);\n\n\t\ttestIndentAction('\\t/**', '\\t * ', '', IndentAction.None, '* ');\n\t\ttestIndentAction('\\t * something', '\\t * ', '', IndentAction.None, '* ');\n\t\ttestIndentAction('\\t *', '\\t * ', '', IndentAction.None, '* ');\n\n\t\ttestIndentAction('/**', ' * ', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * something', ' * ', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' *', ' * asdfsfagadfg', '', IndentAction.None, '* ');\n\n\t\ttestIndentAction('/**', ' * asdfsfagadfg * * * ', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * something', ' * asdfsfagadfg * * * ', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' *', ' * asdfsfagadfg * * * ', '', IndentAction.None, '* ');\n\n\t\ttestIndentAction('/**', ' * /*', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * something', ' * /*', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' *', ' * /*', '', IndentAction.None, '* ');\n\n\t\ttestIndentAction('/**', ' * asdfsfagadfg * / * / * /', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * something', ' * asdfsfagadfg * / * / * /', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' *', ' * asdfsfagadfg * / * / * /', '', IndentAction.None, '* ');\n\n\t\ttestIndentAction('/**', ' * asdfsfagadfg * / * / * /*', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * something', ' * asdfsfagadfg * / * / * /*', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' *', ' * asdfsfagadfg * / * / * /*', '', IndentAction.None, '* ');\n\n\t\ttestIndentAction('', ' */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction(' */', ' * test() {', '', IndentAction.Indent, null, 0);\n\t\ttestIndentAction('', '\\t */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('', '\\t\\t */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('', '   */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('', '     */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('', '\\t     */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('', ' *--------------------------------------------------------------------------------------------*/', '', IndentAction.None, null, 1);\n\n\t\t// issue #43469\n\t\ttestIndentAction('class A {', '    * test() {', '', IndentAction.Indent, null, 0);\n\t\ttestIndentAction('', '    * test() {', '', IndentAction.Indent, null, 0);\n\t\ttestIndentAction('    ', '    * test() {', '', IndentAction.Indent, null, 0);\n\t\ttestIndentAction('class A {', '  * test() {', '', IndentAction.Indent, null, 0);\n\t\ttestIndentAction('', '  * test() {', '', IndentAction.Indent, null, 0);\n\t\ttestIndentAction('  ', '  * test() {', '', IndentAction.Indent, null, 0);\n\t});\n\n\ttest('issue #141816', () => {\n\t\tconst support = new OnEnterSupport({\n\t\t\tonEnterRules: javascriptOnEnterRules\n\t\t});\n\t\tconst testIndentAction = (beforeText: string, afterText: string, expected: IndentAction) => {\n\t\t\tconst actual = support.onEnter(EditorAutoIndentStrategy.Advanced, '', beforeText, afterText);\n\t\t\tif (expected === IndentAction.None) {\n\t\t\t\tassert.strictEqual(actual, null);\n\t\t\t} else {\n\t\t\t\tassert.strictEqual(actual!.indentAction, expected);\n\t\t\t}\n\t\t};\n\n\t\ttestIndentAction('const r = /{/;', '', IndentAction.None);\n\t\ttestIndentAction('const r = /{[0-9]/;', '', IndentAction.None);\n\t\ttestIndentAction('const r = /[a-zA-Z]{/;', '', IndentAction.None);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
