{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/modes/supports/indentationRules.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const javascriptIndentationRules = {\n\tdecreaseIndentPattern: /^((?!.*?\\/\\*).*\\*\\/)?\\s*[\\}\\]\\)].*$/,\n\tincreaseIndentPattern: /^((?!\\/\\/).)*(\\{([^}\"'`]*|(\\t|[ ])*\\/\\/.*)|\\([^)\"'`]*|\\[[^\\]\"'`]*)$/,\n\t// e.g.  * ...| or */| or *-----*/|\n\tunIndentedLinePattern: /^(\\t|[ ])*[ ]\\*[^/]*\\*\\/\\s*$|^(\\t|[ ])*[ ]\\*\\/\\s*$|^(\\t|[ ])*[ ]\\*([ ]([^\\*]|\\*(?!\\/))*)?$/,\n\tindentNextLinePattern: /^((.*=>\\s*)|((.*[^\\w]+|\\s*)(if|while|for)\\s*\\(.*\\)\\s*))$/,\n};\n\nexport const rubyIndentationRules = {\n\tdecreaseIndentPattern: /^\\s*([}\\]]([,)]?\\s*(#|$)|\\.[a-zA-Z_]\\w*\\b)|(end|rescue|ensure|else|elsif)\\b|(in|when)\\s)/,\n\tincreaseIndentPattern: /^\\s*((begin|class|(private|protected)\\s+def|def|else|elsif|ensure|for|if|module|rescue|unless|until|when|in|while|case)|([^#]*\\sdo\\b)|([^#]*=\\s*(case|if|unless)))\\b([^#\\{;]|(\\\"|'|\\/).*\\4)*(#.*)?$/,\n};\n\nexport const phpIndentationRules = {\n\tincreaseIndentPattern: /({(?!.*}).*|\\(|\\[|((else(\\s)?)?if|else|for(each)?|while|switch|case).*:)\\s*((\\/[/*].*|)?$|\\?>)/,\n\tdecreaseIndentPattern: /^(.*\\*\\/)?\\s*((\\})|(\\)+[;,])|(\\]\\)*[;,])|\\b(else:)|\\b((end(if|for(each)?|while|switch));))/,\n};\n\nexport const goIndentationRules = {\n\tdecreaseIndentPattern: /^\\s*(\\bcase\\b.*:|\\bdefault\\b:|}[)}]*[),]?|\\)[,]?)$/,\n\tincreaseIndentPattern: /^.*(\\bcase\\b.*:|\\bdefault\\b:|(\\b(func|if|else|switch|select|for|struct)\\b.*)?{[^}\"'`]*|\\([^)\"'`]*)$/,\n};\n\nexport const htmlIndentationRules = {\n\tdecreaseIndentPattern: /^\\s*(<\\/(?!html)[-_\\.A-Za-z0-9]+\\b[^>]*>|-->|\\})/,\n\tincreaseIndentPattern: /<(?!\\?|(?:area|base|br|col|frame|hr|html|img|input|keygen|link|menuitem|meta|param|source|track|wbr)\\b|[^>]*\\/>)([-_\\.A-Za-z0-9]+)(?=\\s|>)\\b[^>]*>(?!.*<\\/\\1>)|<!--(?!.*-->)|\\{[^}\"']*$/,\n};\n\nexport const latexIndentationRules = {\n\tdecreaseIndentPattern: /^\\s*\\\\end{(?!document)/,\n\tincreaseIndentPattern: /\\\\begin{(?!document)([^}]*)}(?!.*\\\\end{\\1})/,\n};\n\nexport const luaIndentationRules = {\n\tdecreaseIndentPattern: /^\\s*((\\b(elseif|else|end|until)\\b)|(\\})|(\\)))/,\n\tincreaseIndentPattern: /^((?!(\\-\\-)).)*((\\b(else|function|then|do|repeat)\\b((?!\\b(end|until)\\b).)*)|(\\{\\s*))$/,\n};\n"],
  "mappings": "AAKO,MAAM,6BAA6B;AAAA,EACzC,uBAAuB;AAAA,EACvB,uBAAuB;AAAA;AAAA,EAEvB,uBAAuB;AAAA,EACvB,uBAAuB;AACxB;AAEO,MAAM,uBAAuB;AAAA,EACnC,uBAAuB;AAAA,EACvB,uBAAuB;AACxB;AAEO,MAAM,sBAAsB;AAAA,EAClC,uBAAuB;AAAA,EACvB,uBAAuB;AACxB;AAEO,MAAM,qBAAqB;AAAA,EACjC,uBAAuB;AAAA,EACvB,uBAAuB;AACxB;AAEO,MAAM,uBAAuB;AAAA,EACnC,uBAAuB;AAAA,EACvB,uBAAuB;AACxB;AAEO,MAAM,wBAAwB;AAAA,EACpC,uBAAuB;AAAA,EACvB,uBAAuB;AACxB;AAEO,MAAM,sBAAsB;AAAA,EAClC,uBAAuB;AAAA,EACvB,uBAAuB;AACxB;",
  "names": []
}
