{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/core/cursorColumns.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\n\nsuite('CursorColumns', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('visibleColumnFromColumn', () => {\n\n\t\tfunction testVisibleColumnFromColumn(text: string, tabSize: number, column: number, expected: number): void {\n\t\t\tassert.strictEqual(CursorColumns.visibleColumnFromColumn(text, column, tabSize), expected);\n\t\t}\n\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 1, 0);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 2, 4);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 3, 8);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 4, 9);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 5, 10);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 6, 11);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 7, 12);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 8, 13);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 9, 14);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 10, 15);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 11, 16);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 12, 17);\n\t\ttestVisibleColumnFromColumn('\\t\\tvar x = 3;', 4, 13, 18);\n\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 1, 0);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 2, 4);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 3, 5);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 4, 8);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 5, 9);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 6, 10);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 7, 11);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 8, 12);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 9, 13);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 10, 14);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 11, 15);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 12, 16);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 13, 17);\n\t\ttestVisibleColumnFromColumn('\\t \\tvar x = 3;', 4, 14, 18);\n\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, -1, 0);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 0, 0);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 1, 0);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 2, 4);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 3, 5);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 4, 6);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 5, 8);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 6, 9);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 7, 12);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 8, 12);\n\t\ttestVisibleColumnFromColumn('\\t  \\tx\\t', 4, 9, 12);\n\n\t\ttestVisibleColumnFromColumn('baz', 4, 1, 0);\n\t\ttestVisibleColumnFromColumn('baz', 4, 2, 1);\n\t\ttestVisibleColumnFromColumn('baz', 4, 3, 2);\n\t\ttestVisibleColumnFromColumn('baz', 4, 4, 3);\n\n\t\ttestVisibleColumnFromColumn('\uD83D\uDCDAaz', 4, 1, 0);\n\t\ttestVisibleColumnFromColumn('\uD83D\uDCDAaz', 4, 2, 1);\n\t\ttestVisibleColumnFromColumn('\uD83D\uDCDAaz', 4, 3, 2);\n\t\ttestVisibleColumnFromColumn('\uD83D\uDCDAaz', 4, 4, 3);\n\t\ttestVisibleColumnFromColumn('\uD83D\uDCDAaz', 4, 5, 4);\n\t});\n\n\ttest('toStatusbarColumn', () => {\n\n\t\tfunction t(text: string, tabSize: number, column: number, expected: number): void {\n\t\t\tassert.strictEqual(CursorColumns.toStatusbarColumn(text, column, tabSize), expected, `<<t('${text}', ${tabSize}, ${column}, ${expected})>>`);\n\t\t}\n\n\t\tt('    spaces', 4, 1, 1);\n\t\tt('    spaces', 4, 2, 2);\n\t\tt('    spaces', 4, 3, 3);\n\t\tt('    spaces', 4, 4, 4);\n\t\tt('    spaces', 4, 5, 5);\n\t\tt('    spaces', 4, 6, 6);\n\t\tt('    spaces', 4, 7, 7);\n\t\tt('    spaces', 4, 8, 8);\n\t\tt('    spaces', 4, 9, 9);\n\t\tt('    spaces', 4, 10, 10);\n\t\tt('    spaces', 4, 11, 11);\n\n\t\tt('\\ttab', 4, 1, 1);\n\t\tt('\\ttab', 4, 2, 5);\n\t\tt('\\ttab', 4, 3, 6);\n\t\tt('\\ttab', 4, 4, 7);\n\t\tt('\\ttab', 4, 5, 8);\n\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 1, 1);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 2, 2);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 3, 2);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 4, 3);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 5, 3);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 6, 4);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 7, 4);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 8, 5);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 9, 5);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 10, 6);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 11, 6);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 12, 7);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 13, 7);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 14, 8);\n\t\tt('\uD800\uDF00\uD800\uDF01\uD800\uDF02\uD800\uDF03\uD800\uDF04\uD800\uDF05\uD800\uDF06', 4, 15, 8);\n\n\t\tt('\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88', 4, 1, 1);\n\t\tt('\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88', 4, 2, 2);\n\t\tt('\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88', 4, 3, 2);\n\t\tt('\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88', 4, 4, 3);\n\t\tt('\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88', 4, 5, 3);\n\t\tt('\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88', 4, 6, 4);\n\t\tt('\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88', 4, 7, 4);\n\t\tt('\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88', 4, 8, 5);\n\t\tt('\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88\uD83C\uDF88', 4, 9, 5);\n\n\t\tt('\u4F55\u4F55\u4F55\u4F55', 4, 1, 1);\n\t\tt('\u4F55\u4F55\u4F55\u4F55', 4, 2, 2);\n\t\tt('\u4F55\u4F55\u4F55\u4F55', 4, 3, 3);\n\t\tt('\u4F55\u4F55\u4F55\u4F55', 4, 4, 4);\n\t});\n\n\ttest('columnFromVisibleColumn', () => {\n\n\t\tfunction testColumnFromVisibleColumn(text: string, tabSize: number, visibleColumn: number, expected: number): void {\n\t\t\tassert.strictEqual(CursorColumns.columnFromVisibleColumn(text, visibleColumn, tabSize), expected);\n\t\t}\n\n\t\t// testColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 0, 1);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 1, 1);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 2, 1);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 3, 2);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 4, 2);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 5, 2);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 6, 2);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 7, 3);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 8, 3);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 9, 4);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 10, 5);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 11, 6);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 12, 7);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 13, 8);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 14, 9);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 15, 10);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 16, 11);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 17, 12);\n\t\ttestColumnFromVisibleColumn('\\t\\tvar x = 3;', 4, 18, 13);\n\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 0, 1);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 1, 1);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 2, 1);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 3, 2);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 4, 2);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 5, 3);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 6, 3);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 7, 4);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 8, 4);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 9, 5);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 10, 6);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 11, 7);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 12, 8);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 13, 9);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 14, 10);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 15, 11);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 16, 12);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 17, 13);\n\t\ttestColumnFromVisibleColumn('\\t \\tvar x = 3;', 4, 18, 14);\n\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, -2, 1);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, -1, 1);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 0, 1);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 1, 1);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 2, 1);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 3, 2);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 4, 2);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 5, 3);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 6, 4);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 7, 4);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 8, 5);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 9, 6);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 10, 6);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 11, 7);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 12, 7);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 13, 7);\n\t\ttestColumnFromVisibleColumn('\\t  \\tx\\t', 4, 14, 7);\n\n\t\ttestColumnFromVisibleColumn('baz', 4, 0, 1);\n\t\ttestColumnFromVisibleColumn('baz', 4, 1, 2);\n\t\ttestColumnFromVisibleColumn('baz', 4, 2, 3);\n\t\ttestColumnFromVisibleColumn('baz', 4, 3, 4);\n\n\t\ttestColumnFromVisibleColumn('\uD83D\uDCDAaz', 4, 0, 1);\n\t\ttestColumnFromVisibleColumn('\uD83D\uDCDAaz', 4, 1, 1);\n\t\ttestColumnFromVisibleColumn('\uD83D\uDCDAaz', 4, 2, 3);\n\t\ttestColumnFromVisibleColumn('\uD83D\uDCDAaz', 4, 3, 4);\n\t\ttestColumnFromVisibleColumn('\uD83D\uDCDAaz', 4, 4, 5);\n\t});\n\n\tfor (const [name, fn] of [\n\t\t['nextRenderTabStop', CursorColumns.nextRenderTabStop],\n\t\t['nextIndentTabStop', CursorColumns.nextIndentTabStop],\n\t] as const) {\n\t\ttest(name, () => {\n\t\t\tassert.strictEqual(fn(0, 4), 4);\n\t\t\tassert.strictEqual(fn(1, 4), 4);\n\t\t\tassert.strictEqual(fn(2, 4), 4);\n\t\t\tassert.strictEqual(fn(3, 4), 4);\n\t\t\tassert.strictEqual(fn(4, 4), 8);\n\t\t\tassert.strictEqual(fn(5, 4), 8);\n\t\t\tassert.strictEqual(fn(6, 4), 8);\n\t\t\tassert.strictEqual(fn(7, 4), 8);\n\t\t\tassert.strictEqual(fn(8, 4), 12);\n\n\t\t\tassert.strictEqual(fn(0, 2), 2);\n\t\t\tassert.strictEqual(fn(1, 2), 2);\n\t\t\tassert.strictEqual(fn(2, 2), 4);\n\t\t\tassert.strictEqual(fn(3, 2), 4);\n\t\t\tassert.strictEqual(fn(4, 2), 6);\n\t\t\tassert.strictEqual(fn(5, 2), 6);\n\t\t\tassert.strictEqual(fn(6, 2), 8);\n\t\t\tassert.strictEqual(fn(7, 2), 8);\n\t\t\tassert.strictEqual(fn(8, 2), 10);\n\n\t\t\tassert.strictEqual(fn(0, 1), 1);\n\t\t\tassert.strictEqual(fn(1, 1), 2);\n\t\t\tassert.strictEqual(fn(2, 1), 3);\n\t\t\tassert.strictEqual(fn(3, 1), 4);\n\t\t\tassert.strictEqual(fn(4, 1), 5);\n\t\t\tassert.strictEqual(fn(5, 1), 6);\n\t\t\tassert.strictEqual(fn(6, 1), 7);\n\t\t\tassert.strictEqual(fn(7, 1), 8);\n\t\t\tassert.strictEqual(fn(8, 1), 9);\n\t\t});\n\t}\n\n\tfor (const [name, fn] of [\n\t\t['prevRenderTabStop', CursorColumns.prevRenderTabStop],\n\t\t['prevIndentTabStop', CursorColumns.prevIndentTabStop],\n\t] as const) {\n\t\ttest(name, () => {\n\t\t\tassert.strictEqual(fn(0, 4), 0);\n\t\t\tassert.strictEqual(fn(1, 4), 0);\n\t\t\tassert.strictEqual(fn(2, 4), 0);\n\t\t\tassert.strictEqual(fn(3, 4), 0);\n\t\t\tassert.strictEqual(fn(4, 4), 0);\n\t\t\tassert.strictEqual(fn(5, 4), 4);\n\t\t\tassert.strictEqual(fn(6, 4), 4);\n\t\t\tassert.strictEqual(fn(7, 4), 4);\n\t\t\tassert.strictEqual(fn(8, 4), 4);\n\t\t\tassert.strictEqual(fn(9, 4), 8);\n\n\t\t\tassert.strictEqual(fn(0, 2), 0);\n\t\t\tassert.strictEqual(fn(1, 2), 0);\n\t\t\tassert.strictEqual(fn(2, 2), 0);\n\t\t\tassert.strictEqual(fn(3, 2), 2);\n\t\t\tassert.strictEqual(fn(4, 2), 2);\n\t\t\tassert.strictEqual(fn(5, 2), 4);\n\t\t\tassert.strictEqual(fn(6, 2), 4);\n\t\t\tassert.strictEqual(fn(7, 2), 6);\n\t\t\tassert.strictEqual(fn(8, 2), 6);\n\t\t\tassert.strictEqual(fn(9, 2), 8);\n\n\t\t\tassert.strictEqual(fn(0, 1), 0);\n\t\t\tassert.strictEqual(fn(1, 1), 0);\n\t\t\tassert.strictEqual(fn(2, 1), 1);\n\t\t\tassert.strictEqual(fn(3, 1), 2);\n\t\t\tassert.strictEqual(fn(4, 1), 3);\n\t\t\tassert.strictEqual(fn(5, 1), 4);\n\t\t\tassert.strictEqual(fn(6, 1), 5);\n\t\t\tassert.strictEqual(fn(7, 1), 6);\n\t\t\tassert.strictEqual(fn(8, 1), 7);\n\t\t\tassert.strictEqual(fn(9, 1), 8);\n\t\t});\n\t}\n\n});\n"],
  "mappings": ";;AAIA,OAAO,YAAY;AACnB,SAAS,+CAA+C;AACxD,SAAS,qBAAqB;AAE9B,MAAM,iBAAiB,MAAM;AAE5B,0CAAwC;AAExC,OAAK,2BAA2B,MAAM;AAErC,aAAS,4BAA4B,MAAc,SAAiB,QAAgB,UAAwB;AAC3G,aAAO,YAAY,cAAc,wBAAwB,MAAM,QAAQ,OAAO,GAAG,QAAQ;AAAA,IAC1F;AAFS;AAIT,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,EAAE;AACtD,gCAA4B,gBAAkB,GAAG,GAAG,EAAE;AACtD,gCAA4B,gBAAkB,GAAG,GAAG,EAAE;AACtD,gCAA4B,gBAAkB,GAAG,GAAG,EAAE;AACtD,gCAA4B,gBAAkB,GAAG,GAAG,EAAE;AACtD,gCAA4B,gBAAkB,GAAG,IAAI,EAAE;AACvD,gCAA4B,gBAAkB,GAAG,IAAI,EAAE;AACvD,gCAA4B,gBAAkB,GAAG,IAAI,EAAE;AACvD,gCAA4B,gBAAkB,GAAG,IAAI,EAAE;AAEvD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,EAAE;AACvD,gCAA4B,iBAAmB,GAAG,GAAG,EAAE;AACvD,gCAA4B,iBAAmB,GAAG,GAAG,EAAE;AACvD,gCAA4B,iBAAmB,GAAG,GAAG,EAAE;AACvD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AACxD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AACxD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AACxD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AACxD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AAExD,gCAA4B,UAAa,GAAG,IAAI,CAAC;AACjD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,EAAE;AACjD,gCAA4B,UAAa,GAAG,GAAG,EAAE;AACjD,gCAA4B,UAAa,GAAG,GAAG,EAAE;AAEjD,gCAA4B,OAAO,GAAG,GAAG,CAAC;AAC1C,gCAA4B,OAAO,GAAG,GAAG,CAAC;AAC1C,gCAA4B,OAAO,GAAG,GAAG,CAAC;AAC1C,gCAA4B,OAAO,GAAG,GAAG,CAAC;AAE1C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAC3C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAC3C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAC3C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAC3C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAAA,EAC5C,CAAC;AAED,OAAK,qBAAqB,MAAM;AAE/B,aAAS,EAAE,MAAc,SAAiB,QAAgB,UAAwB;AACjF,aAAO,YAAY,cAAc,kBAAkB,MAAM,QAAQ,OAAO,GAAG,UAAU,QAAQ,IAAI,MAAM,OAAO,KAAK,MAAM,KAAK,QAAQ,KAAK;AAAA,IAC5I;AAFS;AAIT,MAAE,cAAc,GAAG,GAAG,CAAC;AACvB,MAAE,cAAc,GAAG,GAAG,CAAC;AACvB,MAAE,cAAc,GAAG,GAAG,CAAC;AACvB,MAAE,cAAc,GAAG,GAAG,CAAC;AACvB,MAAE,cAAc,GAAG,GAAG,CAAC;AACvB,MAAE,cAAc,GAAG,GAAG,CAAC;AACvB,MAAE,cAAc,GAAG,GAAG,CAAC;AACvB,MAAE,cAAc,GAAG,GAAG,CAAC;AACvB,MAAE,cAAc,GAAG,GAAG,CAAC;AACvB,MAAE,cAAc,GAAG,IAAI,EAAE;AACzB,MAAE,cAAc,GAAG,IAAI,EAAE;AAEzB,MAAE,QAAS,GAAG,GAAG,CAAC;AAClB,MAAE,QAAS,GAAG,GAAG,CAAC;AAClB,MAAE,QAAS,GAAG,GAAG,CAAC;AAClB,MAAE,QAAS,GAAG,GAAG,CAAC;AAClB,MAAE,QAAS,GAAG,GAAG,CAAC;AAElB,MAAE,mEAAkB,GAAG,GAAG,CAAC;AAC3B,MAAE,mEAAkB,GAAG,GAAG,CAAC;AAC3B,MAAE,mEAAkB,GAAG,GAAG,CAAC;AAC3B,MAAE,mEAAkB,GAAG,GAAG,CAAC;AAC3B,MAAE,mEAAkB,GAAG,GAAG,CAAC;AAC3B,MAAE,mEAAkB,GAAG,GAAG,CAAC;AAC3B,MAAE,mEAAkB,GAAG,GAAG,CAAC;AAC3B,MAAE,mEAAkB,GAAG,GAAG,CAAC;AAC3B,MAAE,mEAAkB,GAAG,GAAG,CAAC;AAC3B,MAAE,mEAAkB,GAAG,IAAI,CAAC;AAC5B,MAAE,mEAAkB,GAAG,IAAI,CAAC;AAC5B,MAAE,mEAAkB,GAAG,IAAI,CAAC;AAC5B,MAAE,mEAAkB,GAAG,IAAI,CAAC;AAC5B,MAAE,mEAAkB,GAAG,IAAI,CAAC;AAC5B,MAAE,mEAAkB,GAAG,IAAI,CAAC;AAE5B,MAAE,wCAAY,GAAG,GAAG,CAAC;AACrB,MAAE,wCAAY,GAAG,GAAG,CAAC;AACrB,MAAE,wCAAY,GAAG,GAAG,CAAC;AACrB,MAAE,wCAAY,GAAG,GAAG,CAAC;AACrB,MAAE,wCAAY,GAAG,GAAG,CAAC;AACrB,MAAE,wCAAY,GAAG,GAAG,CAAC;AACrB,MAAE,wCAAY,GAAG,GAAG,CAAC;AACrB,MAAE,wCAAY,GAAG,GAAG,CAAC;AACrB,MAAE,wCAAY,GAAG,GAAG,CAAC;AAErB,MAAE,4BAAQ,GAAG,GAAG,CAAC;AACjB,MAAE,4BAAQ,GAAG,GAAG,CAAC;AACjB,MAAE,4BAAQ,GAAG,GAAG,CAAC;AACjB,MAAE,4BAAQ,GAAG,GAAG,CAAC;AAAA,EAClB,CAAC;AAED,OAAK,2BAA2B,MAAM;AAErC,aAAS,4BAA4B,MAAc,SAAiB,eAAuB,UAAwB;AAClH,aAAO,YAAY,cAAc,wBAAwB,MAAM,eAAe,OAAO,GAAG,QAAQ;AAAA,IACjG;AAFS;AAKT,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,GAAG,CAAC;AACrD,gCAA4B,gBAAkB,GAAG,IAAI,CAAC;AACtD,gCAA4B,gBAAkB,GAAG,IAAI,CAAC;AACtD,gCAA4B,gBAAkB,GAAG,IAAI,CAAC;AACtD,gCAA4B,gBAAkB,GAAG,IAAI,CAAC;AACtD,gCAA4B,gBAAkB,GAAG,IAAI,CAAC;AACtD,gCAA4B,gBAAkB,GAAG,IAAI,EAAE;AACvD,gCAA4B,gBAAkB,GAAG,IAAI,EAAE;AACvD,gCAA4B,gBAAkB,GAAG,IAAI,EAAE;AACvD,gCAA4B,gBAAkB,GAAG,IAAI,EAAE;AAEvD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,GAAG,CAAC;AACtD,gCAA4B,iBAAmB,GAAG,IAAI,CAAC;AACvD,gCAA4B,iBAAmB,GAAG,IAAI,CAAC;AACvD,gCAA4B,iBAAmB,GAAG,IAAI,CAAC;AACvD,gCAA4B,iBAAmB,GAAG,IAAI,CAAC;AACvD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AACxD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AACxD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AACxD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AACxD,gCAA4B,iBAAmB,GAAG,IAAI,EAAE;AAExD,gCAA4B,UAAa,GAAG,IAAI,CAAC;AACjD,gCAA4B,UAAa,GAAG,IAAI,CAAC;AACjD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,GAAG,CAAC;AAChD,gCAA4B,UAAa,GAAG,IAAI,CAAC;AACjD,gCAA4B,UAAa,GAAG,IAAI,CAAC;AACjD,gCAA4B,UAAa,GAAG,IAAI,CAAC;AACjD,gCAA4B,UAAa,GAAG,IAAI,CAAC;AACjD,gCAA4B,UAAa,GAAG,IAAI,CAAC;AAEjD,gCAA4B,OAAO,GAAG,GAAG,CAAC;AAC1C,gCAA4B,OAAO,GAAG,GAAG,CAAC;AAC1C,gCAA4B,OAAO,GAAG,GAAG,CAAC;AAC1C,gCAA4B,OAAO,GAAG,GAAG,CAAC;AAE1C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAC3C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAC3C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAC3C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAC3C,gCAA4B,eAAQ,GAAG,GAAG,CAAC;AAAA,EAC5C,CAAC;AAED,aAAW,CAAC,MAAM,EAAE,KAAK;AAAA,IACxB,CAAC,qBAAqB,cAAc,iBAAiB;AAAA,IACrD,CAAC,qBAAqB,cAAc,iBAAiB;AAAA,EACtD,GAAY;AACX,SAAK,MAAM,MAAM;AAChB,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,EAAE;AAE/B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,EAAE;AAE/B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAAA,IAC/B,CAAC;AAAA,EACF;AAEA,aAAW,CAAC,MAAM,EAAE,KAAK;AAAA,IACxB,CAAC,qBAAqB,cAAc,iBAAiB;AAAA,IACrD,CAAC,qBAAqB,cAAc,iBAAiB;AAAA,EACtD,GAAY;AACX,SAAK,MAAM,MAAM;AAChB,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAE9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAE9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAC9B,aAAO,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;AAAA,IAC/B,CAAC;AAAA,EACF;AAED,CAAC;",
  "names": []
}
