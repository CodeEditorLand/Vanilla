import n from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as a}from"../../../../base/test/common/utils.js";import{LineRange as t,LineRangeSet as s}from"../../../common/core/lineRange.js";suite("LineRange",()=>{a(),test("contains",()=>{const e=new t(2,3);n.deepStrictEqual(e.contains(1),!1),n.deepStrictEqual(e.contains(2),!0),n.deepStrictEqual(e.contains(3),!1),n.deepStrictEqual(e.contains(4),!1)})}),suite("LineRangeSet",()=>{a(),test("addRange",()=>{const e=new s;e.addRange(new t(2,3)),e.addRange(new t(3,4)),e.addRange(new t(10,20)),n.deepStrictEqual(e.toString(),"[2,4), [10,20)"),e.addRange(new t(3,21)),n.deepStrictEqual(e.toString(),"[2,21)")}),test("getUnion",()=>{const e=new s([new t(2,3),new t(5,7),new t(10,20)]),i=new s([new t(3,4),new t(6,8),new t(9,11)]),r=e.getUnion(i);n.deepStrictEqual(r.toString(),"[2,4), [5,8), [9,20)")}),test("intersects",()=>{const e=new s([new t(2,3),new t(5,7),new t(10,20)]);n.deepStrictEqual(e.intersects(new t(1,2)),!1),n.deepStrictEqual(e.intersects(new t(1,3)),!0),n.deepStrictEqual(e.intersects(new t(3,5)),!1)})});
