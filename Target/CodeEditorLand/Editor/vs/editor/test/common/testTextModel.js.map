{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/testTextModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, IDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { BracketPairColorizationOptions, DefaultEndOfLine, ITextBufferFactory, ITextModelCreationOptions } from '../../common/model.js';\nimport { TextModel } from '../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { TestLanguageConfigurationService } from './modes/testLanguageConfigurationService.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { TestDialogService } from '../../../platform/dialogs/test/common/testDialogService.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILogService, NullLogService } from '../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { TestNotificationService } from '../../../platform/notification/test/common/testNotificationService.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { TestThemeService } from '../../../platform/theme/test/common/testThemeService.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { UndoRedoService } from '../../../platform/undoRedo/common/undoRedoService.js';\nimport { TestTextResourcePropertiesService } from './services/testTextResourcePropertiesService.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { createServices, ServiceIdCtorPair, TestInstantiationService } from '../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../common/languages/modesRegistry.js';\nimport { ILanguageFeatureDebounceService, LanguageFeatureDebounceService } from '../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { LanguageFeaturesService } from '../../common/services/languageFeaturesService.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { mock } from '../../../base/test/common/mock.js';\nimport { ITreeSitterParserService } from '../../common/services/treeSitterParserService.js';\nimport { TestTreeSitterParserService } from './services/testTreeSitterService.js';\n\nclass TestTextModel extends TextModel {\n\tpublic registerDisposable(disposable: IDisposable): void {\n\t\tthis._register(disposable);\n\t}\n}\n\nexport function withEditorModel(text: string[], callback: (model: TextModel) => void): void {\n\tconst model = createTextModel(text.join('\\n'));\n\tcallback(model);\n\tmodel.dispose();\n}\n\nexport interface IRelaxedTextModelCreationOptions {\n\ttabSize?: number;\n\tindentSize?: number | 'tabSize';\n\tinsertSpaces?: boolean;\n\tdetectIndentation?: boolean;\n\ttrimAutoWhitespace?: boolean;\n\tdefaultEOL?: DefaultEndOfLine;\n\tisForSimpleWidget?: boolean;\n\tlargeFileOptimizations?: boolean;\n\tbracketColorizationOptions?: BracketPairColorizationOptions;\n}\n\nfunction resolveOptions(_options: IRelaxedTextModelCreationOptions): ITextModelCreationOptions {\n\tconst defaultOptions = TextModel.DEFAULT_CREATION_OPTIONS;\n\treturn {\n\t\ttabSize: (typeof _options.tabSize === 'undefined' ? defaultOptions.tabSize : _options.tabSize),\n\t\tindentSize: (typeof _options.indentSize === 'undefined' ? defaultOptions.indentSize : _options.indentSize),\n\t\tinsertSpaces: (typeof _options.insertSpaces === 'undefined' ? defaultOptions.insertSpaces : _options.insertSpaces),\n\t\tdetectIndentation: (typeof _options.detectIndentation === 'undefined' ? defaultOptions.detectIndentation : _options.detectIndentation),\n\t\ttrimAutoWhitespace: (typeof _options.trimAutoWhitespace === 'undefined' ? defaultOptions.trimAutoWhitespace : _options.trimAutoWhitespace),\n\t\tdefaultEOL: (typeof _options.defaultEOL === 'undefined' ? defaultOptions.defaultEOL : _options.defaultEOL),\n\t\tisForSimpleWidget: (typeof _options.isForSimpleWidget === 'undefined' ? defaultOptions.isForSimpleWidget : _options.isForSimpleWidget),\n\t\tlargeFileOptimizations: (typeof _options.largeFileOptimizations === 'undefined' ? defaultOptions.largeFileOptimizations : _options.largeFileOptimizations),\n\t\tbracketPairColorizationOptions: (typeof _options.bracketColorizationOptions === 'undefined' ? defaultOptions.bracketPairColorizationOptions : _options.bracketColorizationOptions),\n\t};\n}\n\nexport function createTextModel(text: string | ITextBufferFactory, languageId: string | null = null, options: IRelaxedTextModelCreationOptions = TextModel.DEFAULT_CREATION_OPTIONS, uri: URI | null = null): TextModel {\n\tconst disposables = new DisposableStore();\n\tconst instantiationService = createModelServices(disposables);\n\tconst model = instantiateTextModel(instantiationService, text, languageId, options, uri);\n\tmodel.registerDisposable(disposables);\n\treturn model;\n}\n\nexport function instantiateTextModel(instantiationService: IInstantiationService, text: string | ITextBufferFactory, languageId: string | null = null, _options: IRelaxedTextModelCreationOptions = TextModel.DEFAULT_CREATION_OPTIONS, uri: URI | null = null): TestTextModel {\n\tconst options = resolveOptions(_options);\n\treturn instantiationService.createInstance(TestTextModel, text, languageId || PLAINTEXT_LANGUAGE_ID, options, uri);\n}\n\nexport function createModelServices(disposables: DisposableStore, services: ServiceIdCtorPair<any>[] = []): TestInstantiationService {\n\treturn createServices(disposables, services.concat([\n\t\t[INotificationService, TestNotificationService],\n\t\t[IDialogService, TestDialogService],\n\t\t[IUndoRedoService, UndoRedoService],\n\t\t[ILanguageService, LanguageService],\n\t\t[ILanguageConfigurationService, TestLanguageConfigurationService],\n\t\t[IConfigurationService, TestConfigurationService],\n\t\t[ITextResourcePropertiesService, TestTextResourcePropertiesService],\n\t\t[IThemeService, TestThemeService],\n\t\t[ILogService, NullLogService],\n\t\t[IEnvironmentService, new class extends mock<IEnvironmentService>() {\n\t\t\toverride isBuilt: boolean = true;\n\t\t\toverride isExtensionDevelopment: boolean = false;\n\t\t}],\n\t\t[ILanguageFeatureDebounceService, LanguageFeatureDebounceService],\n\t\t[ILanguageFeaturesService, LanguageFeaturesService],\n\t\t[IModelService, ModelService],\n\t\t[ITreeSitterParserService, TestTreeSitterParserService]\n\t]));\n}\n"],
  "mappings": "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",
  "names": []
}
