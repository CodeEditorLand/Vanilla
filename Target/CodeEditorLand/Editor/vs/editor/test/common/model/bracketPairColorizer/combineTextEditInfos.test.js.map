{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/model/bracketPairColorizer/combineTextEditInfos.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { SingleTextEdit } from '../../../../common/core/textEdit.js';\nimport { TextEditInfo } from '../../../../common/model/bracketPairsTextModelPart/bracketPairsTree/beforeEditPositionMapper.js';\nimport { combineTextEditInfos } from '../../../../common/model/bracketPairsTextModelPart/bracketPairsTree/combineTextEditInfos.js';\nimport { lengthAdd, lengthToObj, lengthToPosition, positionToLength, toLength } from '../../../../common/model/bracketPairsTextModelPart/bracketPairsTree/length.js';\nimport { TextModel } from '../../../../common/model/textModel.js';\nimport { Random } from '../../core/random.js';\nimport { createTextModel } from '../../testTextModel.js';\n\nsuite('combineTextEditInfos', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfor (let seed = 0; seed < 50; seed++) {\n\t\ttest('test' + seed, () => {\n\t\t\trunTest(seed);\n\t\t});\n\t}\n});\n\nfunction runTest(seed: number) {\n\tconst rng = Random.create(seed);\n\n\tconst str = 'abcde\\nfghij\\nklmno\\npqrst\\n';\n\tconst textModelS0 = createTextModel(str);\n\n\tconst edits1 = getRandomEditInfos(textModelS0, rng.nextIntRange(1, 4), rng);\n\tconst textModelS1 = createTextModel(textModelS0.getValue());\n\ttextModelS1.applyEdits(edits1.map(e => toEdit(e)));\n\n\tconst edits2 = getRandomEditInfos(textModelS1, rng.nextIntRange(1, 4), rng);\n\tconst textModelS2 = createTextModel(textModelS1.getValue());\n\ttextModelS2.applyEdits(edits2.map(e => toEdit(e)));\n\n\tconst combinedEdits = combineTextEditInfos(edits1, edits2);\n\tfor (const edit of combinedEdits) {\n\t\tconst range = Range.fromPositions(lengthToPosition(edit.startOffset), lengthToPosition(lengthAdd(edit.startOffset, edit.newLength)));\n\t\tconst value = textModelS2.getValueInRange(range);\n\t\tif (!value.match(/^(L|C|\\n)*$/)) {\n\t\t\tthrow new Error('Invalid edit: ' + value);\n\t\t}\n\t\ttextModelS2.applyEdits([{\n\t\t\trange,\n\t\t\ttext: textModelS0.getValueInRange(Range.fromPositions(lengthToPosition(edit.startOffset), lengthToPosition(edit.endOffset))),\n\t\t}]);\n\t}\n\n\tassert.deepStrictEqual(textModelS2.getValue(), textModelS0.getValue());\n\n\ttextModelS0.dispose();\n\ttextModelS1.dispose();\n\ttextModelS2.dispose();\n}\n\nexport function getRandomEditInfos(textModel: TextModel, count: number, rng: Random, disjoint: boolean = false): TextEditInfo[] {\n\tconst edits: TextEditInfo[] = [];\n\tlet i = 0;\n\tfor (let j = 0; j < count; j++) {\n\t\tedits.push(getRandomEdit(textModel, i, rng));\n\t\ti = textModel.getOffsetAt(lengthToPosition(edits[j].endOffset)) + (disjoint ? 1 : 0);\n\t}\n\treturn edits;\n}\n\nfunction getRandomEdit(textModel: TextModel, rangeOffsetStart: number, rng: Random): TextEditInfo {\n\tconst textModelLength = textModel.getValueLength();\n\tconst offsetStart = rng.nextIntRange(rangeOffsetStart, textModelLength);\n\tconst offsetEnd = rng.nextIntRange(offsetStart, textModelLength);\n\n\tconst lineCount = rng.nextIntRange(0, 3);\n\tconst columnCount = rng.nextIntRange(0, 5);\n\n\treturn new TextEditInfo(positionToLength(textModel.getPositionAt(offsetStart)), positionToLength(textModel.getPositionAt(offsetEnd)), toLength(lineCount, columnCount));\n}\n\nfunction toEdit(editInfo: TextEditInfo): SingleTextEdit {\n\tconst l = lengthToObj(editInfo.newLength);\n\tlet text = '';\n\n\tfor (let i = 0; i < l.lineCount; i++) {\n\t\ttext += 'LLL\\n';\n\t}\n\tfor (let i = 0; i < l.columnCount; i++) {\n\t\ttext += 'C';\n\t}\n\n\treturn new SingleTextEdit(\n\t\tRange.fromPositions(\n\t\t\tlengthToPosition(editInfo.startOffset),\n\t\t\tlengthToPosition(editInfo.endOffset)\n\t\t),\n\t\ttext\n\t);\n}\n"],
  "mappings": "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",
  "names": []
}
