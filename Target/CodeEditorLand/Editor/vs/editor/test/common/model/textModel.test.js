import t from"assert";import{DisposableStore as L}from"../../../../base/common/lifecycle.js";import{UTF8_BOM_CHARACTER as p}from"../../../../base/common/strings.js";import{ensureNoDisposablesAreLeakedInTestSuite as g}from"../../../../base/test/common/utils.js";import{Position as n}from"../../../common/core/position.js";import{Range as i}from"../../../common/core/range.js";import{PLAINTEXT_LANGUAGE_ID as S}from"../../../common/languages/modesRegistry.js";import{EndOfLinePreference as u}from"../../../common/model.js";import{TextModel as q,createTextBuffer as m}from"../../../common/model/textModel.js";import{createModelServices as h,createTextModel as s}from"../testTextModel.js";import"../../../../platform/instantiation/common/instantiation.js";function d(e,l,r,o,c,x){const E=s(c.join(`
`),void 0,{tabSize:l,insertSpaces:e,detectIndentation:!0}),w=E.getOptions();E.dispose(),t.strictEqual(w.insertSpaces,r,x),t.strictEqual(w.tabSize,o,x)}function a(e,l,r,o){typeof e>"u"?typeof l>"u"?(d(!0,13370,!0,13370,r,o),d(!1,13371,!1,13371,r,o)):typeof l=="number"?(d(!0,13370,!0,l,r,o),d(!1,13371,!1,l,r,o)):(d(!0,13370,!0,l[0],r,o),d(!1,13371,!1,13371,r,o)):typeof l>"u"?(d(!0,13370,e,13370,r,o),d(!1,13371,e,13371,r,o)):typeof l=="number"?(d(!0,13370,e,l,r,o),d(!1,13371,e,l,r,o)):e===!0?(d(!0,13370,e,l[0],r,o),d(!1,13371,e,l[0],r,o)):(d(!0,13370,e,13370,r,o),d(!1,13371,e,13371,r,o))}suite("TextModelData.fromString",()=>{g();function e(l,r){const{textBuffer:o,disposable:c}=m(l,q.DEFAULT_CREATION_OPTIONS.defaultEOL),x={EOL:o.getEOL(),lines:o.getLinesContent(),containsRTL:o.mightContainRTL(),isBasicASCII:!o.mightContainNonBasicASCII()};t.deepStrictEqual(x,r),c.dispose()}test("one line text",()=>{e("Hello world!",{EOL:`
`,lines:["Hello world!"],containsRTL:!1,isBasicASCII:!0})}),test("multiline text",()=>{e(`Hello,\r
dear friend
How\rare\r
you?`,{EOL:`\r
`,lines:["Hello,","dear friend","How","are","you?"],containsRTL:!1,isBasicASCII:!0})}),test("Non Basic ASCII 1",()=>{e(`Hello,
Z\xFCrich`,{EOL:`
`,lines:["Hello,","Z\xFCrich"],containsRTL:!1,isBasicASCII:!1})}),test("containsRTL 1",()=>{e(`Hello,
\u05D6\u05D5\u05D4\u05D9 \u05E2\u05D5\u05D1\u05D3\u05D4 \u05DE\u05D1\u05D5\u05E1\u05E1\u05EA \u05E9\u05D3\u05E2\u05EA\u05D5`,{EOL:`
`,lines:["Hello,","\u05D6\u05D5\u05D4\u05D9 \u05E2\u05D5\u05D1\u05D3\u05D4 \u05DE\u05D1\u05D5\u05E1\u05E1\u05EA \u05E9\u05D3\u05E2\u05EA\u05D5"],containsRTL:!0,isBasicASCII:!1})}),test("containsRTL 2",()=>{e(`Hello,
\u0647\u0646\u0627\u0643 \u062D\u0642\u064A\u0642\u0629 \u0645\u062B\u0628\u062A\u0629 \u0645\u0646\u0630 \u0632\u0645\u0646 \u0637\u0648\u064A\u0644`,{EOL:`
`,lines:["Hello,","\u0647\u0646\u0627\u0643 \u062D\u0642\u064A\u0642\u0629 \u0645\u062B\u0628\u062A\u0629 \u0645\u0646\u0630 \u0632\u0645\u0646 \u0637\u0648\u064A\u0644"],containsRTL:!0,isBasicASCII:!1})})}),suite("Editor Model - TextModel",()=>{g(),test("TextModel does not use events internally",()=>{const e=new L,l=h(e),r=e.add(l.createInstance(q,"",S,q.DEFAULT_CREATION_OPTIONS,null));t.strictEqual(r._hasListeners(),!1),e.dispose()}),test("getValueLengthInRange",()=>{let e=s(`My First Line\r
My Second Line\r
My Third Line`);t.strictEqual(e.getValueLengthInRange(new i(1,1,1,1)),0),t.strictEqual(e.getValueLengthInRange(new i(1,1,1,2)),1),t.strictEqual(e.getValueLengthInRange(new i(1,2,1,3)),1),t.strictEqual(e.getValueLengthInRange(new i(1,1,1,14)),13),t.strictEqual(e.getValueLengthInRange(new i(1,1,2,1)),15),t.strictEqual(e.getValueLengthInRange(new i(1,2,2,1)),14),t.strictEqual(e.getValueLengthInRange(new i(1,2,2,2)),15),t.strictEqual(e.getValueLengthInRange(new i(1,2,2,1e3)),28),t.strictEqual(e.getValueLengthInRange(new i(1,2,3,1)),30),t.strictEqual(e.getValueLengthInRange(new i(1,2,3,1e3)),43),t.strictEqual(e.getValueLengthInRange(new i(1,1,1e3,1e3)),44),e.dispose(),e=s(`My First Line
My Second Line
My Third Line`),t.strictEqual(e.getValueLengthInRange(new i(1,1,1,1)),0),t.strictEqual(e.getValueLengthInRange(new i(1,1,1,2)),1),t.strictEqual(e.getValueLengthInRange(new i(1,2,1,3)),1),t.strictEqual(e.getValueLengthInRange(new i(1,1,1,14)),13),t.strictEqual(e.getValueLengthInRange(new i(1,1,2,1)),14),t.strictEqual(e.getValueLengthInRange(new i(1,2,2,1)),13),t.strictEqual(e.getValueLengthInRange(new i(1,2,2,2)),14),t.strictEqual(e.getValueLengthInRange(new i(1,2,2,1e3)),27),t.strictEqual(e.getValueLengthInRange(new i(1,2,3,1)),28),t.strictEqual(e.getValueLengthInRange(new i(1,2,3,1e3)),41),t.strictEqual(e.getValueLengthInRange(new i(1,1,1e3,1e3)),42),e.dispose()}),test("getValueLengthInRange different EOL",()=>{let e=s(`My First Line\r
My Second Line\r
My Third Line`);t.strictEqual(e.getValueLengthInRange(new i(1,1,2,1),u.TextDefined),15),t.strictEqual(e.getValueLengthInRange(new i(1,1,2,1),u.CRLF),15),t.strictEqual(e.getValueLengthInRange(new i(1,1,2,1),u.LF),14),t.strictEqual(e.getValueLengthInRange(new i(1,1,1e3,1e3),u.TextDefined),44),t.strictEqual(e.getValueLengthInRange(new i(1,1,1e3,1e3),u.CRLF),44),t.strictEqual(e.getValueLengthInRange(new i(1,1,1e3,1e3),u.LF),42),e.dispose(),e=s(`My First Line
My Second Line
My Third Line`),t.strictEqual(e.getValueLengthInRange(new i(1,1,2,1),u.TextDefined),14),t.strictEqual(e.getValueLengthInRange(new i(1,1,2,1),u.LF),14),t.strictEqual(e.getValueLengthInRange(new i(1,1,2,1),u.CRLF),15),t.strictEqual(e.getValueLengthInRange(new i(1,1,1e3,1e3),u.TextDefined),42),t.strictEqual(e.getValueLengthInRange(new i(1,1,1e3,1e3),u.LF),42),t.strictEqual(e.getValueLengthInRange(new i(1,1,1e3,1e3),u.CRLF),44),e.dispose()}),test("guess indentation 1",()=>{a(void 0,void 0,["x","x","x","x","x","x","x"],"no clues"),a(!1,void 0,["	x","x","x","x","x","x","x"],"no spaces, 1xTAB"),a(!0,2,["  x","x","x","x","x","x","x"],"1x2"),a(!1,void 0,["	x","	x","	x","	x","	x","	x","	x"],"7xTAB"),a(void 0,[2],["	x","  x","	x","  x","	x","  x","	x","  x"],"4x2, 4xTAB"),a(!1,void 0,["	x"," x","	x"," x","	x"," x","	x"," x"],"4x1, 4xTAB"),a(!1,void 0,["	x","	x","  x","	x","  x","	x","  x","	x","  x"],"4x2, 5xTAB"),a(!1,void 0,["	x","	x","x","	x","x","	x","x","	x","  x"],"1x2, 5xTAB"),a(!1,void 0,["	x","	x","x","	x","x","	x","x","	x","    x"],"1x4, 5xTAB"),a(!1,void 0,["	x","	x","x","	x","x","	x","  x","	x","    x"],"1x2, 1x4, 5xTAB"),a(void 0,void 0,["x"," x"," x"," x"," x"," x"," x"," x"],"7x1 - 1 space is never guessed as an indentation"),a(!0,void 0,["x","          x"," x"," x"," x"," x"," x"," x"],"1x10, 6x1"),a(void 0,void 0,["","  ","    ","      ","        ","          ","            ","              "],"whitespace lines don't count"),a(!0,3,["x","   x","   x","    x","x","   x","   x","    x","x","   x","   x","    x"],"6x3, 3x4"),a(!0,5,["x","     x","     x","    x","x","     x","     x","    x","x","     x","     x","    x"],"6x5, 3x4"),a(!0,7,["x","       x","       x","     x","x","       x","       x","    x","x","       x","       x","    x"],"6x7, 1x5, 2x4"),a(!0,2,["x","  x","  x","  x","  x","x","  x","  x","  x","  x"],"8x2"),a(!0,2,["x","  x","  x","x","  x","  x","x","  x","  x","x","  x","  x"],"8x2"),a(!0,2,["x","  x","    x","x","  x","    x","x","  x","    x","x","  x","    x"],"4x2, 4x4"),a(!0,2,["x","  x","  x","    x","x","  x","  x","    x","x","  x","  x","    x"],"6x2, 3x4"),a(!0,2,["x","  x","  x","    x","    x","x","  x","  x","    x","    x"],"4x2, 4x4"),a(!0,2,["x","  x","    x","    x","x","  x","    x","    x"],"2x2, 4x4"),a(!0,4,["x","    x","    x","x","    x","    x","x","    x","    x","x","    x","    x"],"8x4"),a(!0,2,["x","  x","    x","    x","      x","x","  x","    x","    x","      x"],"2x2, 4x4, 2x6"),a(!0,2,["x","  x","    x","    x","      x","      x","        x"],"1x2, 2x4, 2x6, 1x8"),a(!0,4,["x","    x","    x","    x","     x","        x","x","    x","    x","    x","     x","        x"],"6x4, 2x5, 2x8"),a(!0,4,["x","    x","    x","    x","     x","        x","        x"],"3x4, 1x5, 2x8"),a(!0,4,["x","x","    x","    x","     x","        x","        x","x","x","    x","    x","     x","        x","        x"],"6x4, 2x5, 4x8"),a(!0,3,["x"," x"," x"," x"," x"," x","x","   x","    x","    x"],"5x1, 2x0, 1x3, 2x4"),a(!1,void 0,["	 x"," 	 x","	x"],"mixed whitespace 1"),a(!1,void 0,["	x","	    x"],"mixed whitespace 2")}),test("issue #44991: Wrong indentation size auto-detection",()=>{a(!0,4,["a = 10             # 0 space indent","b = 5              # 0 space indent","if a > 10:         # 0 space indent","    a += 1         # 4 space indent      delta 4 spaces","    if b > 5:      # 4 space indent","        b += 1     # 8 space indent      delta 4 spaces","        b += 1     # 8 space indent","        b += 1     # 8 space indent","# comment line 1   # 0 space indent      delta 8 spaces","# comment line 2   # 0 space indent","# comment line 3   # 0 space indent","        b += 1     # 8 space indent      delta 8 spaces","        b += 1     # 8 space indent","        b += 1     # 8 space indent"])}),test("issue #55818: Broken indentation detection",()=>{a(!0,2,["","/* REQUIRE */","","const foo = require ( 'foo' ),","      bar = require ( 'bar' );","","/* MY FN */","","function myFn () {","","  const asd = 1,","        dsa = 2;","","  return bar ( foo ( asd ) );","","}","","/* EXPORT */","","module.exports = myFn;",""])}),test("issue #70832: Broken indentation detection",()=>{a(!1,void 0,["x","x","x","x","	x","		x","    x","		x","	x","		x","	x","	x","	x","	x","x"])}),test("issue #62143: Broken indentation detection",()=>{a(!0,2,["x","x","  x","  x"]),a(!0,2,["x","  - item2","  - item3"]),d(!0,2,!0,2,["x x","  x","  x"]),d(!0,2,!0,2,["x x","  x","  x","    x"]),d(!0,2,!0,2,["<!--test1.md -->","- item1","  - item2","    - item3"])}),test("issue #84217: Broken indentation detection",()=>{a(!0,4,["def main():","    print('hello')"]),a(!0,4,["def main():","    with open('foo') as fp:","        print(fp.read())"])}),test("validatePosition",()=>{const e=s(`line one
line two`);t.deepStrictEqual(e.validatePosition(new n(0,0)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(0,1)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(1,1)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(1,2)),new n(1,2)),t.deepStrictEqual(e.validatePosition(new n(1,30)),new n(1,9)),t.deepStrictEqual(e.validatePosition(new n(2,0)),new n(2,1)),t.deepStrictEqual(e.validatePosition(new n(2,1)),new n(2,1)),t.deepStrictEqual(e.validatePosition(new n(2,2)),new n(2,2)),t.deepStrictEqual(e.validatePosition(new n(2,30)),new n(2,9)),t.deepStrictEqual(e.validatePosition(new n(3,0)),new n(2,9)),t.deepStrictEqual(e.validatePosition(new n(3,1)),new n(2,9)),t.deepStrictEqual(e.validatePosition(new n(3,30)),new n(2,9)),t.deepStrictEqual(e.validatePosition(new n(30,30)),new n(2,9)),t.deepStrictEqual(e.validatePosition(new n(-123.123,-.5)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(Number.MIN_VALUE,Number.MIN_VALUE)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(Number.MAX_VALUE,Number.MAX_VALUE)),new n(2,9)),t.deepStrictEqual(e.validatePosition(new n(123.23,47.5)),new n(2,9)),e.dispose()}),test("validatePosition around high-low surrogate pairs 1",()=>{const e=s("a\u{1F4DA}b");t.deepStrictEqual(e.validatePosition(new n(0,0)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(0,1)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(0,7)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(1,1)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(1,2)),new n(1,2)),t.deepStrictEqual(e.validatePosition(new n(1,3)),new n(1,2)),t.deepStrictEqual(e.validatePosition(new n(1,4)),new n(1,4)),t.deepStrictEqual(e.validatePosition(new n(1,5)),new n(1,5)),t.deepStrictEqual(e.validatePosition(new n(1,30)),new n(1,5)),t.deepStrictEqual(e.validatePosition(new n(2,0)),new n(1,5)),t.deepStrictEqual(e.validatePosition(new n(2,1)),new n(1,5)),t.deepStrictEqual(e.validatePosition(new n(2,2)),new n(1,5)),t.deepStrictEqual(e.validatePosition(new n(2,30)),new n(1,5)),t.deepStrictEqual(e.validatePosition(new n(-123.123,-.5)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(Number.MIN_VALUE,Number.MIN_VALUE)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(Number.MAX_VALUE,Number.MAX_VALUE)),new n(1,5)),t.deepStrictEqual(e.validatePosition(new n(123.23,47.5)),new n(1,5)),e.dispose()}),test("validatePosition around high-low surrogate pairs 2",()=>{const e=s("a\u{1F4DA}\u{1F4DA}b");t.deepStrictEqual(e.validatePosition(new n(1,1)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(1,2)),new n(1,2)),t.deepStrictEqual(e.validatePosition(new n(1,3)),new n(1,2)),t.deepStrictEqual(e.validatePosition(new n(1,4)),new n(1,4)),t.deepStrictEqual(e.validatePosition(new n(1,5)),new n(1,4)),t.deepStrictEqual(e.validatePosition(new n(1,6)),new n(1,6)),t.deepStrictEqual(e.validatePosition(new n(1,7)),new n(1,7)),e.dispose()}),test("validatePosition handle NaN.",()=>{const e=s(`line one
line two`);t.deepStrictEqual(e.validatePosition(new n(NaN,1)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(1,NaN)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(NaN,NaN)),new n(1,1)),t.deepStrictEqual(e.validatePosition(new n(2,NaN)),new n(2,1)),t.deepStrictEqual(e.validatePosition(new n(NaN,3)),new n(1,3)),e.dispose()}),test("issue #71480: validatePosition handle floats",()=>{const e=s(`line one
line two`);t.deepStrictEqual(e.validatePosition(new n(.2,1)),new n(1,1),"a"),t.deepStrictEqual(e.validatePosition(new n(1.2,1)),new n(1,1),"b"),t.deepStrictEqual(e.validatePosition(new n(1.5,2)),new n(1,2),"c"),t.deepStrictEqual(e.validatePosition(new n(1.8,3)),new n(1,3),"d"),t.deepStrictEqual(e.validatePosition(new n(1,.3)),new n(1,1),"e"),t.deepStrictEqual(e.validatePosition(new n(2,.8)),new n(2,1),"f"),t.deepStrictEqual(e.validatePosition(new n(1,1.2)),new n(1,1),"g"),t.deepStrictEqual(e.validatePosition(new n(2,1.5)),new n(2,1),"h"),e.dispose()}),test("issue #71480: validateRange handle floats",()=>{const e=s(`line one
line two`);t.deepStrictEqual(e.validateRange(new i(.2,1.5,.8,2.5)),new i(1,1,1,1)),t.deepStrictEqual(e.validateRange(new i(1.2,1.7,1.8,2.2)),new i(1,1,1,2)),e.dispose()}),test("validateRange around high-low surrogate pairs 1",()=>{const e=s("a\u{1F4DA}b");t.deepStrictEqual(e.validateRange(new i(0,0,0,1)),new i(1,1,1,1)),t.deepStrictEqual(e.validateRange(new i(0,0,0,7)),new i(1,1,1,1)),t.deepStrictEqual(e.validateRange(new i(1,1,1,1)),new i(1,1,1,1)),t.deepStrictEqual(e.validateRange(new i(1,1,1,2)),new i(1,1,1,2)),t.deepStrictEqual(e.validateRange(new i(1,1,1,3)),new i(1,1,1,4)),t.deepStrictEqual(e.validateRange(new i(1,1,1,4)),new i(1,1,1,4)),t.deepStrictEqual(e.validateRange(new i(1,1,1,5)),new i(1,1,1,5)),t.deepStrictEqual(e.validateRange(new i(1,2,1,2)),new i(1,2,1,2)),t.deepStrictEqual(e.validateRange(new i(1,2,1,3)),new i(1,2,1,4)),t.deepStrictEqual(e.validateRange(new i(1,2,1,4)),new i(1,2,1,4)),t.deepStrictEqual(e.validateRange(new i(1,2,1,5)),new i(1,2,1,5)),t.deepStrictEqual(e.validateRange(new i(1,3,1,3)),new i(1,2,1,2)),t.deepStrictEqual(e.validateRange(new i(1,3,1,4)),new i(1,2,1,4)),t.deepStrictEqual(e.validateRange(new i(1,3,1,5)),new i(1,2,1,5)),t.deepStrictEqual(e.validateRange(new i(1,4,1,4)),new i(1,4,1,4)),t.deepStrictEqual(e.validateRange(new i(1,4,1,5)),new i(1,4,1,5)),t.deepStrictEqual(e.validateRange(new i(1,5,1,5)),new i(1,5,1,5)),e.dispose()}),test("validateRange around high-low surrogate pairs 2",()=>{const e=s("a\u{1F4DA}\u{1F4DA}b");t.deepStrictEqual(e.validateRange(new i(0,0,0,1)),new i(1,1,1,1)),t.deepStrictEqual(e.validateRange(new i(0,0,0,7)),new i(1,1,1,1)),t.deepStrictEqual(e.validateRange(new i(1,1,1,1)),new i(1,1,1,1)),t.deepStrictEqual(e.validateRange(new i(1,1,1,2)),new i(1,1,1,2)),t.deepStrictEqual(e.validateRange(new i(1,1,1,3)),new i(1,1,1,4)),t.deepStrictEqual(e.validateRange(new i(1,1,1,4)),new i(1,1,1,4)),t.deepStrictEqual(e.validateRange(new i(1,1,1,5)),new i(1,1,1,6)),t.deepStrictEqual(e.validateRange(new i(1,1,1,6)),new i(1,1,1,6)),t.deepStrictEqual(e.validateRange(new i(1,1,1,7)),new i(1,1,1,7)),t.deepStrictEqual(e.validateRange(new i(1,2,1,2)),new i(1,2,1,2)),t.deepStrictEqual(e.validateRange(new i(1,2,1,3)),new i(1,2,1,4)),t.deepStrictEqual(e.validateRange(new i(1,2,1,4)),new i(1,2,1,4)),t.deepStrictEqual(e.validateRange(new i(1,2,1,5)),new i(1,2,1,6)),t.deepStrictEqual(e.validateRange(new i(1,2,1,6)),new i(1,2,1,6)),t.deepStrictEqual(e.validateRange(new i(1,2,1,7)),new i(1,2,1,7)),t.deepStrictEqual(e.validateRange(new i(1,3,1,3)),new i(1,2,1,2)),t.deepStrictEqual(e.validateRange(new i(1,3,1,4)),new i(1,2,1,4)),t.deepStrictEqual(e.validateRange(new i(1,3,1,5)),new i(1,2,1,6)),t.deepStrictEqual(e.validateRange(new i(1,3,1,6)),new i(1,2,1,6)),t.deepStrictEqual(e.validateRange(new i(1,3,1,7)),new i(1,2,1,7)),t.deepStrictEqual(e.validateRange(new i(1,4,1,4)),new i(1,4,1,4)),t.deepStrictEqual(e.validateRange(new i(1,4,1,5)),new i(1,4,1,6)),t.deepStrictEqual(e.validateRange(new i(1,4,1,6)),new i(1,4,1,6)),t.deepStrictEqual(e.validateRange(new i(1,4,1,7)),new i(1,4,1,7)),t.deepStrictEqual(e.validateRange(new i(1,5,1,5)),new i(1,4,1,4)),t.deepStrictEqual(e.validateRange(new i(1,5,1,6)),new i(1,4,1,6)),t.deepStrictEqual(e.validateRange(new i(1,5,1,7)),new i(1,4,1,7)),t.deepStrictEqual(e.validateRange(new i(1,6,1,6)),new i(1,6,1,6)),t.deepStrictEqual(e.validateRange(new i(1,6,1,7)),new i(1,6,1,7)),t.deepStrictEqual(e.validateRange(new i(1,7,1,7)),new i(1,7,1,7)),e.dispose()}),test("modifyPosition",()=>{const e=s(`line one
line two`);t.deepStrictEqual(e.modifyPosition(new n(1,1),0),new n(1,1)),t.deepStrictEqual(e.modifyPosition(new n(0,0),0),new n(1,1)),t.deepStrictEqual(e.modifyPosition(new n(30,1),0),new n(2,9)),t.deepStrictEqual(e.modifyPosition(new n(1,1),17),new n(2,9)),t.deepStrictEqual(e.modifyPosition(new n(1,1),1),new n(1,2)),t.deepStrictEqual(e.modifyPosition(new n(1,1),3),new n(1,4)),t.deepStrictEqual(e.modifyPosition(new n(1,2),10),new n(2,3)),t.deepStrictEqual(e.modifyPosition(new n(1,5),13),new n(2,9)),t.deepStrictEqual(e.modifyPosition(new n(1,2),16),new n(2,9)),t.deepStrictEqual(e.modifyPosition(new n(2,9),-17),new n(1,1)),t.deepStrictEqual(e.modifyPosition(new n(1,2),-1),new n(1,1)),t.deepStrictEqual(e.modifyPosition(new n(1,4),-3),new n(1,1)),t.deepStrictEqual(e.modifyPosition(new n(2,3),-10),new n(1,2)),t.deepStrictEqual(e.modifyPosition(new n(2,9),-13),new n(1,5)),t.deepStrictEqual(e.modifyPosition(new n(2,9),-16),new n(1,2)),t.deepStrictEqual(e.modifyPosition(new n(1,2),17),new n(2,9)),t.deepStrictEqual(e.modifyPosition(new n(1,2),100),new n(2,9)),t.deepStrictEqual(e.modifyPosition(new n(1,2),-2),new n(1,1)),t.deepStrictEqual(e.modifyPosition(new n(1,2),-100),new n(1,1)),t.deepStrictEqual(e.modifyPosition(new n(2,2),-100),new n(1,1)),t.deepStrictEqual(e.modifyPosition(new n(2,9),-18),new n(1,1)),e.dispose()}),test("normalizeIndentation 1",()=>{const e=s("",void 0,{insertSpaces:!1});t.strictEqual(e.normalizeIndentation("	"),"	"),t.strictEqual(e.normalizeIndentation("    "),"	"),t.strictEqual(e.normalizeIndentation("   "),"   "),t.strictEqual(e.normalizeIndentation("  "),"  "),t.strictEqual(e.normalizeIndentation(" ")," "),t.strictEqual(e.normalizeIndentation(""),""),t.strictEqual(e.normalizeIndentation(" 	    "),"		"),t.strictEqual(e.normalizeIndentation(" 	   "),"	   "),t.strictEqual(e.normalizeIndentation(" 	  "),"	  "),t.strictEqual(e.normalizeIndentation(" 	 "),"	 "),t.strictEqual(e.normalizeIndentation(" 	"),"	"),t.strictEqual(e.normalizeIndentation("	a"),"	a"),t.strictEqual(e.normalizeIndentation("    a"),"	a"),t.strictEqual(e.normalizeIndentation("   a"),"   a"),t.strictEqual(e.normalizeIndentation("  a"),"  a"),t.strictEqual(e.normalizeIndentation(" a")," a"),t.strictEqual(e.normalizeIndentation("a"),"a"),t.strictEqual(e.normalizeIndentation(" 	    a"),"		a"),t.strictEqual(e.normalizeIndentation(" 	   a"),"	   a"),t.strictEqual(e.normalizeIndentation(" 	  a"),"	  a"),t.strictEqual(e.normalizeIndentation(" 	 a"),"	 a"),t.strictEqual(e.normalizeIndentation(" 	a"),"	a"),e.dispose()}),test("normalizeIndentation 2",()=>{const e=s("");t.strictEqual(e.normalizeIndentation("	a"),"    a"),t.strictEqual(e.normalizeIndentation("    a"),"    a"),t.strictEqual(e.normalizeIndentation("   a"),"   a"),t.strictEqual(e.normalizeIndentation("  a"),"  a"),t.strictEqual(e.normalizeIndentation(" a")," a"),t.strictEqual(e.normalizeIndentation("a"),"a"),t.strictEqual(e.normalizeIndentation(" 	    a"),"        a"),t.strictEqual(e.normalizeIndentation(" 	   a"),"       a"),t.strictEqual(e.normalizeIndentation(" 	  a"),"      a"),t.strictEqual(e.normalizeIndentation(" 	 a"),"     a"),t.strictEqual(e.normalizeIndentation(" 	a"),"    a"),e.dispose()}),test("getLineFirstNonWhitespaceColumn",()=>{const e=s(["asd"," asd","	asd","  asd","		asd"," ","  ","	","		","  	asd","",""].join(`
`));t.strictEqual(e.getLineFirstNonWhitespaceColumn(1),1,"1"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(2),2,"2"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(3),2,"3"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(4),3,"4"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(5),3,"5"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(6),0,"6"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(7),0,"7"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(8),0,"8"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(9),0,"9"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(10),4,"10"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(11),0,"11"),t.strictEqual(e.getLineFirstNonWhitespaceColumn(12),0,"12"),e.dispose()}),test("getLineLastNonWhitespaceColumn",()=>{const e=s(["asd","asd ","asd	","asd  ","asd		"," ","  ","	","		","asd  	","",""].join(`
`));t.strictEqual(e.getLineLastNonWhitespaceColumn(1),4,"1"),t.strictEqual(e.getLineLastNonWhitespaceColumn(2),4,"2"),t.strictEqual(e.getLineLastNonWhitespaceColumn(3),4,"3"),t.strictEqual(e.getLineLastNonWhitespaceColumn(4),4,"4"),t.strictEqual(e.getLineLastNonWhitespaceColumn(5),4,"5"),t.strictEqual(e.getLineLastNonWhitespaceColumn(6),0,"6"),t.strictEqual(e.getLineLastNonWhitespaceColumn(7),0,"7"),t.strictEqual(e.getLineLastNonWhitespaceColumn(8),0,"8"),t.strictEqual(e.getLineLastNonWhitespaceColumn(9),0,"9"),t.strictEqual(e.getLineLastNonWhitespaceColumn(10),4,"10"),t.strictEqual(e.getLineLastNonWhitespaceColumn(11),0,"11"),t.strictEqual(e.getLineLastNonWhitespaceColumn(12),0,"12"),e.dispose()}),test("#50471. getValueInRange with invalid range",()=>{const e=s(`My First Line\r
My Second Line\r
My Third Line`);t.strictEqual(e.getValueInRange(new i(1,NaN,1,3)),"My"),t.strictEqual(e.getValueInRange(new i(NaN,NaN,NaN,NaN)),""),e.dispose()}),test('issue #168836: updating tabSize should also update indentSize when indentSize is set to "tabSize"',()=>{const e=s("some text",null,{tabSize:2,indentSize:"tabSize"});t.strictEqual(e.getOptions().tabSize,2),t.strictEqual(e.getOptions().indentSize,2),t.strictEqual(e.getOptions().originalIndentSize,"tabSize"),e.updateOptions({tabSize:4}),t.strictEqual(e.getOptions().tabSize,4),t.strictEqual(e.getOptions().indentSize,4),t.strictEqual(e.getOptions().originalIndentSize,"tabSize"),e.dispose()})}),suite("TextModel.mightContainRTL",()=>{g(),test("nope",()=>{const e=s("hello world!");t.strictEqual(e.mightContainRTL(),!1),e.dispose()}),test("yes",()=>{const e=s(`Hello,
\u05D6\u05D5\u05D4\u05D9 \u05E2\u05D5\u05D1\u05D3\u05D4 \u05DE\u05D1\u05D5\u05E1\u05E1\u05EA \u05E9\u05D3\u05E2\u05EA\u05D5`);t.strictEqual(e.mightContainRTL(),!0),e.dispose()}),test("setValue resets 1",()=>{const e=s("hello world!");t.strictEqual(e.mightContainRTL(),!1),e.setValue(`Hello,
\u05D6\u05D5\u05D4\u05D9 \u05E2\u05D5\u05D1\u05D3\u05D4 \u05DE\u05D1\u05D5\u05E1\u05E1\u05EA \u05E9\u05D3\u05E2\u05EA\u05D5`),t.strictEqual(e.mightContainRTL(),!0),e.dispose()}),test("setValue resets 2",()=>{const e=s(`Hello,
\u0647\u0646\u0627\u0643 \u062D\u0642\u064A\u0642\u0629 \u0645\u062B\u0628\u062A\u0629 \u0645\u0646\u0630 \u0632\u0645\u0646 \u0637\u0648\u064A\u0644`);t.strictEqual(e.mightContainRTL(),!0),e.setValue("hello world!"),t.strictEqual(e.mightContainRTL(),!1),e.dispose()})}),suite("TextModel.createSnapshot",()=>{g(),test("empty file",()=>{const e=s(""),l=e.createSnapshot();t.strictEqual(l.read(),null),e.dispose()}),test("file with BOM",()=>{const e=s(p+"Hello");t.strictEqual(e.getLineContent(1),"Hello");const l=e.createSnapshot(!0);t.strictEqual(l.read(),p+"Hello"),t.strictEqual(l.read(),null),e.dispose()}),test("regular file",()=>{const e=s(`My First Line
		My Second Line
    Third Line

1`),l=e.createSnapshot();t.strictEqual(l.read(),`My First Line
		My Second Line
    Third Line

1`),t.strictEqual(l.read(),null),e.dispose()}),test("large file",()=>{const e=[];for(let w=0;w<1e3;w++)e[w]="Just some text that is a bit long such that it can consume some memory";const l=e.join(`
`),r=s(l),o=r.createSnapshot();let c="";const x=o.read();t.ok(x),c+=x;const E=o.read();E===null||(c+=E,t.strictEqual(o.read(),null)),t.strictEqual(c,l),r.dispose()}),test("issue #119632: invalid range",()=>{const e=s("hello world!"),l=e._validateRangeRelaxedNoAllocations(new i(void 0,0,void 0,1));t.deepStrictEqual(l,new i(1,1,1,1)),e.dispose()})});
