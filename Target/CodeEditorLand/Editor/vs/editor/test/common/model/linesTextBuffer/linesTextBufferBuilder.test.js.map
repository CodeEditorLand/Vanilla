{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/model/linesTextBuffer/linesTextBufferBuilder.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport * as strings from '../../../../../base/common/strings.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { DefaultEndOfLine } from '../../../../common/model.js';\nimport { createTextBufferFactory } from '../../../../common/model/textModel.js';\n\nfunction testTextBufferFactory(text: string, eol: string, mightContainNonBasicASCII: boolean, mightContainRTL: boolean): void {\n\tconst { disposable, textBuffer } = createTextBufferFactory(text).create(DefaultEndOfLine.LF);\n\n\tassert.strictEqual(textBuffer.mightContainNonBasicASCII(), mightContainNonBasicASCII);\n\tassert.strictEqual(textBuffer.mightContainRTL(), mightContainRTL);\n\tassert.strictEqual(textBuffer.getEOL(), eol);\n\tdisposable.dispose();\n}\n\nsuite('ModelBuilder', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('t1', () => {\n\t\ttestTextBufferFactory('', '\\n', false, false);\n\t});\n\n\ttest('t2', () => {\n\t\ttestTextBufferFactory('Hello world', '\\n', false, false);\n\t});\n\n\ttest('t3', () => {\n\t\ttestTextBufferFactory('Hello world\\nHow are you?', '\\n', false, false);\n\t});\n\n\ttest('t4', () => {\n\t\ttestTextBufferFactory('Hello world\\nHow are you?\\nIs everything good today?\\nDo you enjoy the weather?', '\\n', false, false);\n\t});\n\n\ttest('carriage return detection (1 \\\\r\\\\n 2 \\\\n)', () => {\n\t\ttestTextBufferFactory('Hello world\\r\\nHow are you?\\nIs everything good today?\\nDo you enjoy the weather?', '\\n', false, false);\n\t});\n\n\ttest('carriage return detection (2 \\\\r\\\\n 1 \\\\n)', () => {\n\t\ttestTextBufferFactory('Hello world\\r\\nHow are you?\\r\\nIs everything good today?\\nDo you enjoy the weather?', '\\r\\n', false, false);\n\t});\n\n\ttest('carriage return detection (3 \\\\r\\\\n 0 \\\\n)', () => {\n\t\ttestTextBufferFactory('Hello world\\r\\nHow are you?\\r\\nIs everything good today?\\r\\nDo you enjoy the weather?', '\\r\\n', false, false);\n\t});\n\n\ttest('BOM handling', () => {\n\t\ttestTextBufferFactory(strings.UTF8_BOM_CHARACTER + 'Hello world!', '\\n', false, false);\n\t});\n\n\ttest('RTL handling 2', () => {\n\t\ttestTextBufferFactory('Hello world!\u05D6\u05D5\u05D4\u05D9 \u05E2\u05D5\u05D1\u05D3\u05D4 \u05DE\u05D1\u05D5\u05E1\u05E1\u05EA \u05E9\u05D3\u05E2\u05EA\u05D5', '\\n', true, true);\n\t});\n\n\ttest('RTL handling 3', () => {\n\t\ttestTextBufferFactory('Hello world!\u05D6\u05D5\u05D4\u05D9 \\n\u05E2\u05D5\u05D1\u05D3\u05D4 \u05DE\u05D1\u05D5\u05E1\u05E1\u05EA \u05E9\u05D3\u05E2\u05EA\u05D5', '\\n', true, true);\n\t});\n\n\ttest('ASCII handling 1', () => {\n\t\ttestTextBufferFactory('Hello world!!\\nHow do you do?', '\\n', false, false);\n\t});\n\ttest('ASCII handling 2', () => {\n\t\ttestTextBufferFactory('Hello world!!\\nHow do you do?Z\u00FCricha\uD83D\uDCDA\uD83D\uDCDAb', '\\n', true, false);\n\t});\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,YAAY,aAAa;AACzB,SAAS,+CAA+C;AACxD,SAAS,wBAAwB;AACjC,SAAS,+BAA+B;AAExC,SAAS,sBAAsB,MAAc,KAAa,2BAAoC,iBAAgC;AAC7H,QAAM,EAAE,YAAY,WAAW,IAAI,wBAAwB,IAAI,EAAE,OAAO,iBAAiB,EAAE;AAE3F,SAAO,YAAY,WAAW,0BAA0B,GAAG,yBAAyB;AACpF,SAAO,YAAY,WAAW,gBAAgB,GAAG,eAAe;AAChE,SAAO,YAAY,WAAW,OAAO,GAAG,GAAG;AAC3C,aAAW,QAAQ;AACpB;AAPS;AAST,MAAM,gBAAgB,MAAM;AAE3B,0CAAwC;AAExC,OAAK,MAAM,MAAM;AAChB,0BAAsB,IAAI,MAAM,OAAO,KAAK;AAAA,EAC7C,CAAC;AAED,OAAK,MAAM,MAAM;AAChB,0BAAsB,eAAe,MAAM,OAAO,KAAK;AAAA,EACxD,CAAC;AAED,OAAK,MAAM,MAAM;AAChB,0BAAsB,6BAA6B,MAAM,OAAO,KAAK;AAAA,EACtE,CAAC;AAED,OAAK,MAAM,MAAM;AAChB,0BAAsB,mFAAmF,MAAM,OAAO,KAAK;AAAA,EAC5H,CAAC;AAED,OAAK,8CAA8C,MAAM;AACxD,0BAAsB,qFAAqF,MAAM,OAAO,KAAK;AAAA,EAC9H,CAAC;AAED,OAAK,8CAA8C,MAAM;AACxD,0BAAsB,uFAAuF,QAAQ,OAAO,KAAK;AAAA,EAClI,CAAC;AAED,OAAK,8CAA8C,MAAM;AACxD,0BAAsB,yFAAyF,QAAQ,OAAO,KAAK;AAAA,EACpI,CAAC;AAED,OAAK,gBAAgB,MAAM;AAC1B,0BAAsB,QAAQ,qBAAqB,gBAAgB,MAAM,OAAO,KAAK;AAAA,EACtF,CAAC;AAED,OAAK,kBAAkB,MAAM;AAC5B,0BAAsB,2IAAuC,MAAM,MAAM,IAAI;AAAA,EAC9E,CAAC;AAED,OAAK,kBAAkB,MAAM;AAC5B,0BAAsB,6IAAyC,MAAM,MAAM,IAAI;AAAA,EAChF,CAAC;AAED,OAAK,oBAAoB,MAAM;AAC9B,0BAAsB,iCAAiC,MAAM,OAAO,KAAK;AAAA,EAC1E,CAAC;AACD,OAAK,oBAAoB,MAAM;AAC9B,0BAAsB,8DAA6C,MAAM,MAAM,KAAK;AAAA,EACrF,CAAC;AACF,CAAC;",
  "names": []
}
