{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/model/modelDecorations.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EndOfLineSequence, IModelDeltaDecoration, TrackedRangeStickiness } from '../../../common/model.js';\nimport { TextModel } from '../../../common/model/textModel.js';\nimport { createTextModel } from '../testTextModel.js';\n\n// --------- utils\n\ninterface ILightWeightDecoration2 {\n\trange: Range;\n\tclassName: string | null | undefined;\n}\n\nfunction modelHasDecorations(model: TextModel, decorations: ILightWeightDecoration2[]) {\n\tconst modelDecorations: ILightWeightDecoration2[] = [];\n\tconst actualDecorations = model.getAllDecorations();\n\tfor (let i = 0, len = actualDecorations.length; i < len; i++) {\n\t\tmodelDecorations.push({\n\t\t\trange: actualDecorations[i].range,\n\t\t\tclassName: actualDecorations[i].options.className\n\t\t});\n\t}\n\tmodelDecorations.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n\tassert.deepStrictEqual(modelDecorations, decorations);\n}\n\nfunction modelHasDecoration(model: TextModel, startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, className: string) {\n\tmodelHasDecorations(model, [{\n\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n\t\tclassName: className\n\t}]);\n}\n\nfunction modelHasNoDecorations(model: TextModel) {\n\tassert.strictEqual(model.getAllDecorations().length, 0, 'Model has no decoration');\n}\n\nfunction addDecoration(model: TextModel, startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, className: string): string {\n\treturn model.changeDecorations((changeAccessor) => {\n\t\treturn changeAccessor.addDecoration(new Range(startLineNumber, startColumn, endLineNumber, endColumn), {\n\t\t\tdescription: 'test',\n\t\t\tclassName: className\n\t\t});\n\t})!;\n}\n\nfunction lineHasDecorations(model: TextModel, lineNumber: number, decorations: { start: number; end: number; className: string }[]) {\n\tconst lineDecorations: Array<{ start: number; end: number; className: string | null | undefined }> = [];\n\tconst decs = model.getLineDecorations(lineNumber);\n\tfor (let i = 0, len = decs.length; i < len; i++) {\n\t\tlineDecorations.push({\n\t\t\tstart: decs[i].range.startColumn,\n\t\t\tend: decs[i].range.endColumn,\n\t\t\tclassName: decs[i].options.className\n\t\t});\n\t}\n\tassert.deepStrictEqual(lineDecorations, decorations, 'Line decorations');\n}\n\nfunction lineHasNoDecorations(model: TextModel, lineNumber: number) {\n\tlineHasDecorations(model, lineNumber, []);\n}\n\nfunction lineHasDecoration(model: TextModel, lineNumber: number, start: number, end: number, className: string) {\n\tlineHasDecorations(model, lineNumber, [{\n\t\tstart: start,\n\t\tend: end,\n\t\tclassName: className\n\t}]);\n}\n\nsuite('Editor Model - Model Decorations', () => {\n\tconst LINE1 = 'My First Line';\n\tconst LINE2 = '\\t\\tMy Second Line';\n\tconst LINE3 = '    Third Line';\n\tconst LINE4 = '';\n\tconst LINE5 = '1';\n\n\t// --------- Model Decorations\n\n\tlet thisModel: TextModel;\n\n\tsetup(() => {\n\t\tconst text =\n\t\t\tLINE1 + '\\r\\n' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\n' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\t\tthisModel = createTextModel(text);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('single character decoration', () => {\n\t\taddDecoration(thisModel, 1, 1, 1, 2, 'myType');\n\t\tlineHasDecoration(thisModel, 1, 1, 2, 'myType');\n\t\tlineHasNoDecorations(thisModel, 2);\n\t\tlineHasNoDecorations(thisModel, 3);\n\t\tlineHasNoDecorations(thisModel, 4);\n\t\tlineHasNoDecorations(thisModel, 5);\n\t});\n\n\ttest('line decoration', () => {\n\t\taddDecoration(thisModel, 1, 1, 1, 14, 'myType');\n\t\tlineHasDecoration(thisModel, 1, 1, 14, 'myType');\n\t\tlineHasNoDecorations(thisModel, 2);\n\t\tlineHasNoDecorations(thisModel, 3);\n\t\tlineHasNoDecorations(thisModel, 4);\n\t\tlineHasNoDecorations(thisModel, 5);\n\t});\n\n\ttest('full line decoration', () => {\n\t\taddDecoration(thisModel, 1, 1, 2, 1, 'myType');\n\n\t\tconst line1Decorations = thisModel.getLineDecorations(1);\n\t\tassert.strictEqual(line1Decorations.length, 1);\n\t\tassert.strictEqual(line1Decorations[0].options.className, 'myType');\n\n\t\tconst line2Decorations = thisModel.getLineDecorations(1);\n\t\tassert.strictEqual(line2Decorations.length, 1);\n\t\tassert.strictEqual(line2Decorations[0].options.className, 'myType');\n\n\t\tlineHasNoDecorations(thisModel, 3);\n\t\tlineHasNoDecorations(thisModel, 4);\n\t\tlineHasNoDecorations(thisModel, 5);\n\t});\n\n\ttest('multiple line decoration', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\n\t\tconst line1Decorations = thisModel.getLineDecorations(1);\n\t\tassert.strictEqual(line1Decorations.length, 1);\n\t\tassert.strictEqual(line1Decorations[0].options.className, 'myType');\n\n\t\tconst line2Decorations = thisModel.getLineDecorations(1);\n\t\tassert.strictEqual(line2Decorations.length, 1);\n\t\tassert.strictEqual(line2Decorations[0].options.className, 'myType');\n\n\t\tconst line3Decorations = thisModel.getLineDecorations(1);\n\t\tassert.strictEqual(line3Decorations.length, 1);\n\t\tassert.strictEqual(line3Decorations[0].options.className, 'myType');\n\n\t\tlineHasNoDecorations(thisModel, 4);\n\t\tlineHasNoDecorations(thisModel, 5);\n\t});\n\n\t// --------- removing, changing decorations\n\n\ttest('decoration gets removed', () => {\n\t\tconst decId = addDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.removeDecoration(decId);\n\t\t});\n\t\tmodelHasNoDecorations(thisModel);\n\t});\n\n\ttest('decorations get removed', () => {\n\t\tconst decId1 = addDecoration(thisModel, 1, 2, 3, 2, 'myType1');\n\t\tconst decId2 = addDecoration(thisModel, 1, 2, 3, 1, 'myType2');\n\t\tmodelHasDecorations(thisModel, [\n\t\t\t{\n\t\t\t\trange: new Range(1, 2, 3, 1),\n\t\t\t\tclassName: 'myType2'\n\t\t\t},\n\t\t\t{\n\t\t\t\trange: new Range(1, 2, 3, 2),\n\t\t\t\tclassName: 'myType1'\n\t\t\t}\n\t\t]);\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.removeDecoration(decId1);\n\t\t});\n\t\tmodelHasDecorations(thisModel, [\n\t\t\t{\n\t\t\t\trange: new Range(1, 2, 3, 1),\n\t\t\t\tclassName: 'myType2'\n\t\t\t}\n\t\t]);\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.removeDecoration(decId2);\n\t\t});\n\t\tmodelHasNoDecorations(thisModel);\n\t});\n\n\ttest('decoration range can be changed', () => {\n\t\tconst decId = addDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.changeDecoration(decId, new Range(1, 1, 1, 2));\n\t\t});\n\t\tmodelHasDecoration(thisModel, 1, 1, 1, 2, 'myType');\n\t});\n\n\t// --------- eventing\n\n\ttest('decorations emit event on add', () => {\n\t\tlet listenerCalled = 0;\n\t\tconst disposable = thisModel.onDidChangeDecorations((e) => {\n\t\t\tlistenerCalled++;\n\t\t});\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tassert.strictEqual(listenerCalled, 1, 'listener called');\n\t\tdisposable.dispose();\n\t});\n\n\ttest('decorations emit event on change', () => {\n\t\tlet listenerCalled = 0;\n\t\tconst decId = addDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tconst disposable = thisModel.onDidChangeDecorations((e) => {\n\t\t\tlistenerCalled++;\n\t\t});\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.changeDecoration(decId, new Range(1, 1, 1, 2));\n\t\t});\n\t\tassert.strictEqual(listenerCalled, 1, 'listener called');\n\t\tdisposable.dispose();\n\t});\n\n\ttest('decorations emit event on remove', () => {\n\t\tlet listenerCalled = 0;\n\t\tconst decId = addDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tconst disposable = thisModel.onDidChangeDecorations((e) => {\n\t\t\tlistenerCalled++;\n\t\t});\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.removeDecoration(decId);\n\t\t});\n\t\tassert.strictEqual(listenerCalled, 1, 'listener called');\n\t\tdisposable.dispose();\n\t});\n\n\ttest('decorations emit event when inserting one line text before it', () => {\n\t\tlet listenerCalled = 0;\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\n\t\tconst disposable = thisModel.onDidChangeDecorations((e) => {\n\t\t\tlistenerCalled++;\n\t\t});\n\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'Hallo ')]);\n\t\tassert.strictEqual(listenerCalled, 1, 'listener called');\n\t\tdisposable.dispose();\n\t});\n\n\ttest('decorations do not emit event on no-op deltaDecorations', () => {\n\t\tlet listenerCalled = 0;\n\n\t\tconst disposable = thisModel.onDidChangeDecorations((e) => {\n\t\t\tlistenerCalled++;\n\t\t});\n\n\t\tthisModel.deltaDecorations([], []);\n\t\tthisModel.changeDecorations((accessor) => {\n\t\t\taccessor.deltaDecorations([], []);\n\t\t});\n\n\t\tassert.strictEqual(listenerCalled, 0, 'listener not called');\n\t\tdisposable.dispose();\n\t});\n\n\t// --------- editing text & effects on decorations\n\n\ttest('decorations are updated when inserting one line text before it', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'Hallo ')]);\n\t\tmodelHasDecoration(thisModel, 1, 8, 3, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting one line text before it 2', () => {\n\t\taddDecoration(thisModel, 1, 1, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 1, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.replace(new Range(1, 1, 1, 1), 'Hallo ')]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 3, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting multiple lines text before it', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'Hallo\\nI\\'m inserting multiple\\nlines')]);\n\t\tmodelHasDecoration(thisModel, 3, 7, 5, 2, 'myType');\n\t});\n\n\ttest('decorations change when inserting text after them', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(3, 2), 'Hallo')]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 7, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting text inside', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), 'Hallo ')]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting text inside 2', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(3, 1), 'Hallo ')]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 8, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting text inside 3', () => {\n\t\taddDecoration(thisModel, 1, 1, 2, 16, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 1, 2, 16, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(2, 2), '\\n')]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 3, 15, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting multiple lines text inside', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), 'Hallo\\nI\\'m inserting multiple\\nlines')]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 5, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting one line text before it', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 2))]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 3, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting multiple lines text before it', () => {\n\t\taddDecoration(thisModel, 2, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 2, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 2, 1))]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 2, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting multiple lines text before it 2', () => {\n\t\taddDecoration(thisModel, 2, 3, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 2, 3, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 2, 2))]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 2, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting text inside', () => {\n\t\taddDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 3, 2, 1))]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 1, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting text inside 2', () => {\n\t\taddDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tthisModel.applyEdits([\n\t\t\tEditOperation.delete(new Range(1, 1, 1, 2)),\n\t\t\tEditOperation.delete(new Range(4, 1, 4, 1))\n\t\t]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 4, 1, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting multiple lines text', () => {\n\t\taddDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 3, 1))]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 2, 1, 'myType');\n\t});\n\n\ttest('decorations are updated when changing EOL', () => {\n\t\taddDecoration(thisModel, 1, 2, 4, 1, 'myType1');\n\t\taddDecoration(thisModel, 1, 3, 4, 1, 'myType2');\n\t\taddDecoration(thisModel, 1, 4, 4, 1, 'myType3');\n\t\taddDecoration(thisModel, 1, 5, 4, 1, 'myType4');\n\t\taddDecoration(thisModel, 1, 6, 4, 1, 'myType5');\n\t\taddDecoration(thisModel, 1, 7, 4, 1, 'myType6');\n\t\taddDecoration(thisModel, 1, 8, 4, 1, 'myType7');\n\t\taddDecoration(thisModel, 1, 9, 4, 1, 'myType8');\n\t\taddDecoration(thisModel, 1, 10, 4, 1, 'myType9');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'x')]);\n\t\tthisModel.setEOL(EndOfLineSequence.CRLF);\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'x')]);\n\t\tmodelHasDecorations(thisModel, [\n\t\t\t{ range: new Range(1, 4, 4, 1), className: 'myType1' },\n\t\t\t{ range: new Range(1, 5, 4, 1), className: 'myType2' },\n\t\t\t{ range: new Range(1, 6, 4, 1), className: 'myType3' },\n\t\t\t{ range: new Range(1, 7, 4, 1), className: 'myType4' },\n\t\t\t{ range: new Range(1, 8, 4, 1), className: 'myType5' },\n\t\t\t{ range: new Range(1, 9, 4, 1), className: 'myType6' },\n\t\t\t{ range: new Range(1, 10, 4, 1), className: 'myType7' },\n\t\t\t{ range: new Range(1, 11, 4, 1), className: 'myType8' },\n\t\t\t{ range: new Range(1, 12, 4, 1), className: 'myType9' },\n\t\t]);\n\t});\n\n\ttest('an apparently simple edit', () => {\n\t\taddDecoration(thisModel, 1, 2, 4, 1, 'myType1');\n\t\tthisModel.applyEdits([EditOperation.replace(new Range(1, 14, 2, 1), 'x')]);\n\t\tmodelHasDecorations(thisModel, [\n\t\t\t{ range: new Range(1, 2, 3, 1), className: 'myType1' },\n\t\t]);\n\t});\n\n\ttest('removeAllDecorationsWithOwnerId can be called after model dispose', () => {\n\t\tconst model = createTextModel('asd');\n\t\tmodel.dispose();\n\t\tmodel.removeAllDecorationsWithOwnerId(1);\n\t});\n\n\ttest('removeAllDecorationsWithOwnerId works', () => {\n\t\tthisModel.deltaDecorations([], [{ range: new Range(1, 2, 4, 1), options: { description: 'test', className: 'myType1' } }], 1);\n\t\tthisModel.removeAllDecorationsWithOwnerId(1);\n\t\tmodelHasNoDecorations(thisModel);\n\t});\n});\n\nsuite('Decorations and editing', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction _runTest(decRange: Range, stickiness: TrackedRangeStickiness, editRange: Range, editText: string, editForceMoveMarkers: boolean, expectedDecRange: Range, msg: string): void {\n\t\tconst model = createTextModel([\n\t\t\t'My First Line',\n\t\t\t'My Second Line',\n\t\t\t'Third Line'\n\t\t].join('\\n'));\n\n\t\tconst id = model.deltaDecorations([], [{ range: decRange, options: { description: 'test', stickiness: stickiness } }])[0];\n\t\tmodel.applyEdits([{\n\t\t\trange: editRange,\n\t\t\ttext: editText,\n\t\t\tforceMoveMarkers: editForceMoveMarkers\n\t\t}]);\n\t\tconst actual = model.getDecorationRange(id);\n\t\tassert.deepStrictEqual(actual, expectedDecRange, msg);\n\n\t\tmodel.dispose();\n\t}\n\n\tfunction runTest(decRange: Range, editRange: Range, editText: string, expectedDecRange: Range[][]): void {\n\t\t_runTest(decRange, 0, editRange, editText, false, expectedDecRange[0][0], 'no-0-AlwaysGrowsWhenTypingAtEdges');\n\t\t_runTest(decRange, 1, editRange, editText, false, expectedDecRange[0][1], 'no-1-NeverGrowsWhenTypingAtEdges');\n\t\t_runTest(decRange, 2, editRange, editText, false, expectedDecRange[0][2], 'no-2-GrowsOnlyWhenTypingBefore');\n\t\t_runTest(decRange, 3, editRange, editText, false, expectedDecRange[0][3], 'no-3-GrowsOnlyWhenTypingAfter');\n\n\t\t_runTest(decRange, 0, editRange, editText, true, expectedDecRange[1][0], 'force-0-AlwaysGrowsWhenTypingAtEdges');\n\t\t_runTest(decRange, 1, editRange, editText, true, expectedDecRange[1][1], 'force-1-NeverGrowsWhenTypingAtEdges');\n\t\t_runTest(decRange, 2, editRange, editText, true, expectedDecRange[1][2], 'force-2-GrowsOnlyWhenTypingBefore');\n\t\t_runTest(decRange, 3, editRange, editText, true, expectedDecRange[1][3], 'force-3-GrowsOnlyWhenTypingAfter');\n\t}\n\n\tsuite('insert', () => {\n\t\tsuite('collapsed dec', () => {\n\t\t\ttest('before', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 3, 1, 3), 'xx',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6)],\n\t\t\t\t\t\t[new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('equal', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 4, 1, 4), 'xx',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 6), new Range(1, 6, 1, 6), new Range(1, 4, 1, 4), new Range(1, 6, 1, 6)],\n\t\t\t\t\t\t[new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('after', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 5, 1, 5), 'xx',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tsuite('non-collapsed dec', () => {\n\t\t\ttest('before', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 3), 'xx',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11)],\n\t\t\t\t\t\t[new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 4), 'xx',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 6, 1, 11), new Range(1, 4, 1, 11), new Range(1, 6, 1, 11)],\n\t\t\t\t\t\t[new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('inside', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 5), 'xx',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 9, 1, 9), 'xx',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 11)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('after', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 10, 1, 10), 'xx',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t});\n\n\tsuite('delete', () => {\n\t\tsuite('collapsed dec', () => {\n\t\t\ttest('edit.end < range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 1, 1, 3), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 2, 1, 2), new Range(1, 2, 1, 2), new Range(1, 2, 1, 2), new Range(1, 2, 1, 2)],\n\t\t\t\t\t\t[new Range(1, 2, 1, 2), new Range(1, 2, 1, 2), new Range(1, 2, 1, 2), new Range(1, 2, 1, 2)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.end <= range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 2, 1, 4), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 2, 1, 2), new Range(1, 2, 1, 2), new Range(1, 2, 1, 2), new Range(1, 2, 1, 2)],\n\t\t\t\t\t\t[new Range(1, 2, 1, 2), new Range(1, 2, 1, 2), new Range(1, 2, 1, 2), new Range(1, 2, 1, 2)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 3, 1, 5), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start >= range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 4, 1, 6), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 5, 1, 7), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tsuite('non-collapsed dec', () => {\n\t\t\ttest('edit.end < range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 1, 1, 3), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 2, 1, 7), new Range(1, 2, 1, 7), new Range(1, 2, 1, 7), new Range(1, 2, 1, 7)],\n\t\t\t\t\t\t[new Range(1, 2, 1, 7), new Range(1, 2, 1, 7), new Range(1, 2, 1, 7), new Range(1, 2, 1, 7)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.end <= range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 2, 1, 4), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 2, 1, 7), new Range(1, 2, 1, 7), new Range(1, 2, 1, 7), new Range(1, 2, 1, 7)],\n\t\t\t\t\t\t[new Range(1, 2, 1, 7), new Range(1, 2, 1, 7), new Range(1, 2, 1, 7), new Range(1, 2, 1, 7)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end < range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 5), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 3, 1, 7), new Range(1, 3, 1, 7), new Range(1, 3, 1, 7), new Range(1, 3, 1, 7)],\n\t\t\t\t\t\t[new Range(1, 3, 1, 7), new Range(1, 3, 1, 7), new Range(1, 3, 1, 7), new Range(1, 3, 1, 7)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start < range.start && edit.end == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 9), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start < range.start && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 10), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start == range.start && edit.end < range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 6), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start == range.start && edit.end == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 9), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start == range.start && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 10), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start > range.start && edit.start < range.end && edit.end < range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 7), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start > range.start && edit.start < range.end && edit.end == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 9), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start > range.start && edit.start < range.end && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 10), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 9, 1, 11), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttest('edit.start > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 10, 1, 11), '',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t});\n\n\tsuite('replace short', () => {\n\t\tsuite('collapsed dec', () => {\n\t\t\ttest('edit.end < range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 1, 1, 3), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.end <= range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 2, 1, 4), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t\t[new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3), new Range(1, 3, 1, 3)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 3, 1, 5), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start >= range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 4, 1, 6), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 5, 1, 5), new Range(1, 5, 1, 5), new Range(1, 5, 1, 5), new Range(1, 5, 1, 5)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 5, 1, 7), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tsuite('non-collapsed dec', () => {\n\t\t\ttest('edit.end < range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 1, 1, 3), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 3, 1, 8), new Range(1, 3, 1, 8), new Range(1, 3, 1, 8), new Range(1, 3, 1, 8)],\n\t\t\t\t\t\t[new Range(1, 3, 1, 8), new Range(1, 3, 1, 8), new Range(1, 3, 1, 8), new Range(1, 3, 1, 8)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.end <= range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 2, 1, 4), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 3, 1, 8), new Range(1, 3, 1, 8), new Range(1, 3, 1, 8), new Range(1, 3, 1, 8)],\n\t\t\t\t\t\t[new Range(1, 3, 1, 8), new Range(1, 3, 1, 8), new Range(1, 3, 1, 8), new Range(1, 3, 1, 8)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end < range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 5), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 9), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 10), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start == range.start && edit.end < range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 6), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8)],\n\t\t\t\t\t\t[new Range(1, 5, 1, 8), new Range(1, 5, 1, 8), new Range(1, 5, 1, 8), new Range(1, 5, 1, 8)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start == range.start && edit.end == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 9), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5)],\n\t\t\t\t\t\t[new Range(1, 5, 1, 5), new Range(1, 5, 1, 5), new Range(1, 5, 1, 5), new Range(1, 5, 1, 5)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start == range.start && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 10), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5), new Range(1, 4, 1, 5)],\n\t\t\t\t\t\t[new Range(1, 5, 1, 5), new Range(1, 5, 1, 5), new Range(1, 5, 1, 5), new Range(1, 5, 1, 5)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.start && edit.start < range.end && edit.end < range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 7), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.start && edit.start < range.end && edit.end == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 9), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 6), new Range(1, 4, 1, 6), new Range(1, 4, 1, 6), new Range(1, 4, 1, 6)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 6), new Range(1, 4, 1, 6), new Range(1, 4, 1, 6), new Range(1, 4, 1, 6)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.start && edit.start < range.end && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 10), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 6), new Range(1, 4, 1, 6), new Range(1, 4, 1, 6), new Range(1, 4, 1, 6)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 6), new Range(1, 4, 1, 6), new Range(1, 4, 1, 6), new Range(1, 4, 1, 6)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 9, 1, 11), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 10), new Range(1, 4, 1, 10), new Range(1, 4, 1, 10), new Range(1, 4, 1, 10)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 10, 1, 11), 'c',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t});\n\n\tsuite('replace long', () => {\n\t\tsuite('collapsed dec', () => {\n\t\t\ttest('edit.end < range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 1, 1, 3), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6)],\n\t\t\t\t\t\t[new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.end <= range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 2, 1, 4), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 6), new Range(1, 6, 1, 6), new Range(1, 4, 1, 4), new Range(1, 6, 1, 6)],\n\t\t\t\t\t\t[new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6), new Range(1, 6, 1, 6)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 3, 1, 5), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 7, 1, 7), new Range(1, 7, 1, 7), new Range(1, 7, 1, 7), new Range(1, 7, 1, 7)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start >= range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 4, 1, 6), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 8, 1, 8), new Range(1, 8, 1, 8), new Range(1, 8, 1, 8), new Range(1, 8, 1, 8)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 4),\n\t\t\t\t\tnew Range(1, 5, 1, 7), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4), new Range(1, 4, 1, 4)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tsuite('non-collapsed dec', () => {\n\t\t\ttest('edit.end < range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 1, 1, 3), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11)],\n\t\t\t\t\t\t[new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.end <= range.start', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 2, 1, 4), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 6, 1, 11), new Range(1, 4, 1, 11), new Range(1, 6, 1, 11)],\n\t\t\t\t\t\t[new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11), new Range(1, 6, 1, 11)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end < range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 5), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11)],\n\t\t\t\t\t\t[new Range(1, 7, 1, 11), new Range(1, 7, 1, 11), new Range(1, 7, 1, 11), new Range(1, 7, 1, 11)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 9), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7)],\n\t\t\t\t\t\t[new Range(1, 7, 1, 7), new Range(1, 7, 1, 7), new Range(1, 7, 1, 7), new Range(1, 7, 1, 7)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start < range.start && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 3, 1, 10), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7), new Range(1, 4, 1, 7)],\n\t\t\t\t\t\t[new Range(1, 7, 1, 7), new Range(1, 7, 1, 7), new Range(1, 7, 1, 7), new Range(1, 7, 1, 7)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start == range.start && edit.end < range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 6), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11)],\n\t\t\t\t\t\t[new Range(1, 8, 1, 11), new Range(1, 8, 1, 11), new Range(1, 8, 1, 11), new Range(1, 8, 1, 11)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start == range.start && edit.end == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 9), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8)],\n\t\t\t\t\t\t[new Range(1, 8, 1, 8), new Range(1, 8, 1, 8), new Range(1, 8, 1, 8), new Range(1, 8, 1, 8)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start == range.start && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 4, 1, 10), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8), new Range(1, 4, 1, 8)],\n\t\t\t\t\t\t[new Range(1, 8, 1, 8), new Range(1, 8, 1, 8), new Range(1, 8, 1, 8), new Range(1, 8, 1, 8)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.start && edit.start < range.end && edit.end < range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 7), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11), new Range(1, 4, 1, 11)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.start && edit.start < range.end && edit.end == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 9), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.start && edit.start < range.end && edit.end > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 5, 1, 10), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start == range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 9, 1, 11), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 13), new Range(1, 4, 1, 13), new Range(1, 4, 1, 13), new Range(1, 4, 1, 13)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttest('edit.start > range.end', () => {\n\t\t\t\trunTest(\n\t\t\t\t\tnew Range(1, 4, 1, 9),\n\t\t\t\t\tnew Range(1, 10, 1, 11), 'cccc',\n\t\t\t\t\t[\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t\t[new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9), new Range(1, 4, 1, 9)],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t});\n});\n\ninterface ILightWeightDecoration {\n\tid: string;\n\trange: Range;\n}\n\nsuite('deltaDecorations', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction decoration(id: string, startLineNumber: number, startColumn: number, endLineNumber: number, endColum: number): ILightWeightDecoration {\n\t\treturn {\n\t\t\tid: id,\n\t\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColum)\n\t\t};\n\t}\n\n\tfunction toModelDeltaDecoration(dec: ILightWeightDecoration): IModelDeltaDecoration {\n\t\treturn {\n\t\t\trange: dec.range,\n\t\t\toptions: {\n\t\t\t\tdescription: 'test',\n\t\t\t\tclassName: dec.id\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction strcmp(a: string, b: string): number {\n\t\tif (a === b) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (a < b) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 1;\n\t}\n\n\tfunction readModelDecorations(model: TextModel, ids: string[]): ILightWeightDecoration[] {\n\t\treturn ids.map((id) => {\n\t\t\treturn {\n\t\t\t\trange: model.getDecorationRange(id)!,\n\t\t\t\tid: model.getDecorationOptions(id)!.className!\n\t\t\t};\n\t\t});\n\t}\n\n\tfunction testDeltaDecorations(text: string[], decorations: ILightWeightDecoration[], newDecorations: ILightWeightDecoration[]): void {\n\n\t\tconst model = createTextModel(text.join('\\n'));\n\n\t\t// Add initial decorations & assert they are added\n\t\tconst initialIds = model.deltaDecorations([], decorations.map(toModelDeltaDecoration));\n\t\tconst actualDecorations = readModelDecorations(model, initialIds);\n\n\t\tassert.strictEqual(initialIds.length, decorations.length, 'returns expected cnt of ids');\n\t\tassert.strictEqual(initialIds.length, model.getAllDecorations().length, 'does not leak decorations');\n\t\tactualDecorations.sort((a, b) => strcmp(a.id, b.id));\n\t\tdecorations.sort((a, b) => strcmp(a.id, b.id));\n\t\tassert.deepStrictEqual(actualDecorations, decorations);\n\n\t\tconst newIds = model.deltaDecorations(initialIds, newDecorations.map(toModelDeltaDecoration));\n\t\tconst actualNewDecorations = readModelDecorations(model, newIds);\n\n\t\tassert.strictEqual(newIds.length, newDecorations.length, 'returns expected cnt of ids');\n\t\tassert.strictEqual(newIds.length, model.getAllDecorations().length, 'does not leak decorations');\n\t\tactualNewDecorations.sort((a, b) => strcmp(a.id, b.id));\n\t\tnewDecorations.sort((a, b) => strcmp(a.id, b.id));\n\t\tassert.deepStrictEqual(actualDecorations, decorations);\n\n\t\tmodel.dispose();\n\t}\n\n\tfunction range(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\ttest('result respects input', () => {\n\t\tconst model = createTextModel([\n\t\t\t'Hello world,',\n\t\t\t'How are you?'\n\t\t].join('\\n'));\n\n\t\tconst ids = model.deltaDecorations([], [\n\t\t\ttoModelDeltaDecoration(decoration('a', 1, 1, 1, 12)),\n\t\t\ttoModelDeltaDecoration(decoration('b', 2, 1, 2, 13))\n\t\t]);\n\n\t\tassert.deepStrictEqual(model.getDecorationRange(ids[0]), range(1, 1, 1, 12));\n\t\tassert.deepStrictEqual(model.getDecorationRange(ids[1]), range(2, 1, 2, 13));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('deltaDecorations 1', () => {\n\t\ttestDeltaDecorations(\n\t\t\t[\n\t\t\t\t'This is a text',\n\t\t\t\t'That has multiple lines',\n\t\t\t\t'And is very friendly',\n\t\t\t\t'Towards testing'\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('a', 1, 1, 1, 2),\n\t\t\t\tdecoration('b', 1, 1, 1, 15),\n\t\t\t\tdecoration('c', 1, 1, 2, 1),\n\t\t\t\tdecoration('d', 1, 1, 2, 24),\n\t\t\t\tdecoration('e', 2, 1, 2, 24),\n\t\t\t\tdecoration('f', 2, 1, 4, 16)\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('x', 1, 1, 1, 2),\n\t\t\t\tdecoration('b', 1, 1, 1, 15),\n\t\t\t\tdecoration('c', 1, 1, 2, 1),\n\t\t\t\tdecoration('d', 1, 1, 2, 24),\n\t\t\t\tdecoration('e', 2, 1, 2, 21),\n\t\t\t\tdecoration('f', 2, 17, 4, 16)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('deltaDecorations 2', () => {\n\t\ttestDeltaDecorations(\n\t\t\t[\n\t\t\t\t'This is a text',\n\t\t\t\t'That has multiple lines',\n\t\t\t\t'And is very friendly',\n\t\t\t\t'Towards testing'\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('a', 1, 1, 1, 2),\n\t\t\t\tdecoration('b', 1, 2, 1, 3),\n\t\t\t\tdecoration('c', 1, 3, 1, 4),\n\t\t\t\tdecoration('d', 1, 4, 1, 5),\n\t\t\t\tdecoration('e', 1, 5, 1, 6)\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('a', 1, 2, 1, 3),\n\t\t\t\tdecoration('b', 1, 3, 1, 4),\n\t\t\t\tdecoration('c', 1, 4, 1, 5),\n\t\t\t\tdecoration('d', 1, 5, 1, 6)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('deltaDecorations 3', () => {\n\t\ttestDeltaDecorations(\n\t\t\t[\n\t\t\t\t'This is a text',\n\t\t\t\t'That has multiple lines',\n\t\t\t\t'And is very friendly',\n\t\t\t\t'Towards testing'\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('a', 1, 1, 1, 2),\n\t\t\t\tdecoration('b', 1, 2, 1, 3),\n\t\t\t\tdecoration('c', 1, 3, 1, 4),\n\t\t\t\tdecoration('d', 1, 4, 1, 5),\n\t\t\t\tdecoration('e', 1, 5, 1, 6)\n\t\t\t],\n\t\t\t[]\n\t\t);\n\t});\n\n\ttest('issue #4317: editor.setDecorations doesn\\'t update the hover message', () => {\n\n\t\tconst model = createTextModel('Hello world!');\n\n\t\tlet ids = model.deltaDecorations([], [{\n\t\t\trange: {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: 100,\n\t\t\t\tendColumn: 1\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tdescription: 'test',\n\t\t\t\thoverMessage: { value: 'hello1' }\n\t\t\t}\n\t\t}]);\n\n\t\tids = model.deltaDecorations(ids, [{\n\t\t\trange: {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: 100,\n\t\t\t\tendColumn: 1\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tdescription: 'test',\n\t\t\t\thoverMessage: { value: 'hello2' }\n\t\t\t}\n\t\t}]);\n\n\t\tconst actualDecoration = model.getDecorationOptions(ids[0]);\n\n\t\tassert.deepStrictEqual(actualDecoration!.hoverMessage, { value: 'hello2' });\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('model doesn\\'t get confused with individual tracked ranges', () => {\n\t\tconst model = createTextModel([\n\t\t\t'Hello world,',\n\t\t\t'How are you?'\n\t\t].join('\\n'));\n\n\t\tconst trackedRangeId = model.changeDecorations((changeAcessor) => {\n\t\t\treturn changeAcessor.addDecoration(\n\t\t\t\t{\n\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\tendColumn: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdescription: 'test',\n\t\t\t\t\tstickiness: TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t\tmodel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.removeDecoration(trackedRangeId!);\n\t\t});\n\n\t\tlet ids = model.deltaDecorations([], [\n\t\t\ttoModelDeltaDecoration(decoration('a', 1, 1, 1, 12)),\n\t\t\ttoModelDeltaDecoration(decoration('b', 2, 1, 2, 13))\n\t\t]);\n\n\t\tassert.deepStrictEqual(model.getDecorationRange(ids[0]), range(1, 1, 1, 12));\n\t\tassert.deepStrictEqual(model.getDecorationRange(ids[1]), range(2, 1, 2, 13));\n\n\t\tids = model.deltaDecorations(ids, [\n\t\t\ttoModelDeltaDecoration(decoration('a', 1, 1, 1, 12)),\n\t\t\ttoModelDeltaDecoration(decoration('b', 2, 1, 2, 13))\n\t\t]);\n\n\t\tassert.deepStrictEqual(model.getDecorationRange(ids[0]), range(1, 1, 1, 12));\n\t\tassert.deepStrictEqual(model.getDecorationRange(ids[1]), range(2, 1, 2, 13));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('issue #16922: Clicking on link doesn\\'t seem to do anything', () => {\n\t\tconst model = createTextModel([\n\t\t\t'Hello world,',\n\t\t\t'How are you?',\n\t\t\t'Fine.',\n\t\t\t'Good.',\n\t\t].join('\\n'));\n\n\t\tmodel.deltaDecorations([], [\n\t\t\t{ range: new Range(1, 1, 1, 1), options: { description: 'test', className: '1' } },\n\t\t\t{ range: new Range(1, 13, 1, 13), options: { description: 'test', className: '2' } },\n\t\t\t{ range: new Range(2, 1, 2, 1), options: { description: 'test', className: '3' } },\n\t\t\t{ range: new Range(2, 1, 2, 4), options: { description: 'test', className: '4' } },\n\t\t\t{ range: new Range(2, 8, 2, 13), options: { description: 'test', className: '5' } },\n\t\t\t{ range: new Range(3, 1, 4, 6), options: { description: 'test', className: '6' } },\n\t\t\t{ range: new Range(1, 1, 3, 6), options: { description: 'test', className: 'x1' } },\n\t\t\t{ range: new Range(2, 5, 2, 8), options: { description: 'test', className: 'x2' } },\n\t\t\t{ range: new Range(1, 1, 2, 8), options: { description: 'test', className: 'x3' } },\n\t\t\t{ range: new Range(2, 5, 3, 1), options: { description: 'test', className: 'x4' } },\n\t\t]);\n\n\t\tconst inRange = model.getDecorationsInRange(new Range(2, 6, 2, 6));\n\n\t\tconst inRangeClassNames = inRange.map(d => d.options.className);\n\t\tinRangeClassNames.sort();\n\t\tassert.deepStrictEqual(inRangeClassNames, ['x1', 'x2', 'x3', 'x4']);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('issue #41492: URL highlighting persists after pasting over url', () => {\n\n\t\tconst model = createTextModel([\n\t\t\t'My First Line'\n\t\t].join('\\n'));\n\n\t\tconst id = model.deltaDecorations([], [{ range: new Range(1, 2, 1, 14), options: { description: 'test', stickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, collapseOnReplaceEdit: true } }])[0];\n\t\tmodel.applyEdits([{\n\t\t\trange: new Range(1, 1, 1, 14),\n\t\t\ttext: 'Some new text that is longer than the previous one',\n\t\t\tforceMoveMarkers: false\n\t\t}]);\n\t\tconst actual = model.getDecorationRange(id);\n\t\tassert.deepStrictEqual(actual, new Range(1, 1, 1, 1));\n\n\t\tmodel.dispose();\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
