{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { WordCharacterClassifier } from '../../../../common/core/wordCharacterClassifier.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { DefaultEndOfLine, ITextSnapshot, SearchData } from '../../../../common/model.js';\nimport { PieceTreeBase } from '../../../../common/model/pieceTreeTextBuffer/pieceTreeBase.js';\nimport { PieceTreeTextBuffer } from '../../../../common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.js';\nimport { PieceTreeTextBufferBuilder } from '../../../../common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js';\nimport { NodeColor, SENTINEL, TreeNode } from '../../../../common/model/pieceTreeTextBuffer/rbTreeBase.js';\nimport { createTextModel } from '../../testTextModel.js';\nimport { splitLines } from '../../../../../base/common/strings.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\r\\n';\n\nfunction randomChar() {\n\treturn alphabet[randomInt(alphabet.length)];\n}\n\nfunction randomInt(bound: number) {\n\treturn Math.floor(Math.random() * bound);\n}\n\nfunction randomStr(len: number) {\n\tif (len === null) {\n\t\tlen = 10;\n\t}\n\treturn (function () {\n\t\tlet j, ref;\n\t\tconst results = [];\n\t\tfor (\n\t\t\tj = 1, ref = len;\n\t\t\t1 <= ref ? j < ref : j > ref;\n\t\t\t1 <= ref ? j++ : j--\n\t\t) {\n\t\t\tresults.push(randomChar());\n\t\t}\n\t\treturn results;\n\t})().join('');\n}\n\nfunction trimLineFeed(text: string): string {\n\tif (text.length === 0) {\n\t\treturn text;\n\t}\n\n\tif (text.length === 1) {\n\t\tif (\n\t\t\ttext.charCodeAt(text.length - 1) === 10 ||\n\t\t\ttext.charCodeAt(text.length - 1) === 13\n\t\t) {\n\t\t\treturn '';\n\t\t}\n\t\treturn text;\n\t}\n\n\tif (text.charCodeAt(text.length - 1) === 10) {\n\t\tif (text.charCodeAt(text.length - 2) === 13) {\n\t\t\treturn text.slice(0, -2);\n\t\t}\n\t\treturn text.slice(0, -1);\n\t}\n\n\tif (text.charCodeAt(text.length - 1) === 13) {\n\t\treturn text.slice(0, -1);\n\t}\n\n\treturn text;\n}\n\n//#region Assertion\n\nfunction testLinesContent(str: string, pieceTable: PieceTreeBase) {\n\tconst lines = splitLines(str);\n\tassert.strictEqual(pieceTable.getLineCount(), lines.length);\n\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tassert.strictEqual(pieceTable.getLineContent(i + 1), lines[i]);\n\t\tassert.strictEqual(\n\t\t\ttrimLineFeed(\n\t\t\t\tpieceTable.getValueInRange(\n\t\t\t\t\tnew Range(\n\t\t\t\t\t\ti + 1,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\ti + 1,\n\t\t\t\t\t\tlines[i].length + (i === lines.length - 1 ? 1 : 2)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\tlines[i]\n\t\t);\n\t}\n}\n\nfunction testLineStarts(str: string, pieceTable: PieceTreeBase) {\n\tconst lineStarts = [0];\n\n\t// Reset regex to search from the beginning\n\tconst _regex = new RegExp(/\\r\\n|\\r|\\n/g);\n\t_regex.lastIndex = 0;\n\tlet prevMatchStartIndex = -1;\n\tlet prevMatchLength = 0;\n\n\tlet m: RegExpExecArray | null;\n\tdo {\n\t\tif (prevMatchStartIndex + prevMatchLength === str.length) {\n\t\t\t// Reached the end of the line\n\t\t\tbreak;\n\t\t}\n\n\t\tm = _regex.exec(str);\n\t\tif (!m) {\n\t\t\tbreak;\n\t\t}\n\n\t\tconst matchStartIndex = m.index;\n\t\tconst matchLength = m[0].length;\n\n\t\tif (\n\t\t\tmatchStartIndex === prevMatchStartIndex &&\n\t\t\tmatchLength === prevMatchLength\n\t\t) {\n\t\t\t// Exit early if the regex matches the same range twice\n\t\t\tbreak;\n\t\t}\n\n\t\tprevMatchStartIndex = matchStartIndex;\n\t\tprevMatchLength = matchLength;\n\n\t\tlineStarts.push(matchStartIndex + matchLength);\n\t} while (m);\n\n\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\tassert.deepStrictEqual(\n\t\t\tpieceTable.getPositionAt(lineStarts[i]),\n\t\t\tnew Position(i + 1, 1)\n\t\t);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(i + 1, 1), lineStarts[i]);\n\t}\n\n\tfor (let i = 1; i < lineStarts.length; i++) {\n\t\tconst pos = pieceTable.getPositionAt(lineStarts[i] - 1);\n\t\tassert.strictEqual(\n\t\t\tpieceTable.getOffsetAt(pos.lineNumber, pos.column),\n\t\t\tlineStarts[i] - 1\n\t\t);\n\t}\n}\n\nfunction createTextBuffer(val: string[], normalizeEOL: boolean = true): PieceTreeTextBuffer {\n\tconst bufferBuilder = new PieceTreeTextBufferBuilder();\n\tfor (const chunk of val) {\n\t\tbufferBuilder.acceptChunk(chunk);\n\t}\n\tconst factory = bufferBuilder.finish(normalizeEOL);\n\treturn (<PieceTreeTextBuffer>factory.create(DefaultEndOfLine.LF).textBuffer);\n}\n\nfunction assertTreeInvariants(T: PieceTreeBase): void {\n\tassert(SENTINEL.color === NodeColor.Black);\n\tassert(SENTINEL.parent === SENTINEL);\n\tassert(SENTINEL.left === SENTINEL);\n\tassert(SENTINEL.right === SENTINEL);\n\tassert(SENTINEL.size_left === 0);\n\tassert(SENTINEL.lf_left === 0);\n\tassertValidTree(T);\n}\n\nfunction depth(n: TreeNode): number {\n\tif (n === SENTINEL) {\n\t\t// The leafs are black\n\t\treturn 1;\n\t}\n\tassert(depth(n.left) === depth(n.right));\n\treturn (n.color === NodeColor.Black ? 1 : 0) + depth(n.left);\n}\n\nfunction assertValidNode(n: TreeNode): { size: number; lf_cnt: number } {\n\tif (n === SENTINEL) {\n\t\treturn { size: 0, lf_cnt: 0 };\n\t}\n\n\tconst l = n.left;\n\tconst r = n.right;\n\n\tif (n.color === NodeColor.Red) {\n\t\tassert(l.color === NodeColor.Black);\n\t\tassert(r.color === NodeColor.Black);\n\t}\n\n\tconst actualLeft = assertValidNode(l);\n\tassert(actualLeft.lf_cnt === n.lf_left);\n\tassert(actualLeft.size === n.size_left);\n\tconst actualRight = assertValidNode(r);\n\n\treturn { size: n.size_left + n.piece.length + actualRight.size, lf_cnt: n.lf_left + n.piece.lineFeedCnt + actualRight.lf_cnt };\n}\n\nfunction assertValidTree(T: PieceTreeBase): void {\n\tif (T.root === SENTINEL) {\n\t\treturn;\n\t}\n\tassert(T.root.color === NodeColor.Black);\n\tassert(depth(T.root.left) === depth(T.root.right));\n\tassertValidNode(T.root);\n}\n\n//#endregion\n\nsuite('inserts and deletes', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('basic insert/delete', () => {\n\t\tconst pieceTree = createTextBuffer([\n\t\t\t'This is a document with some text.'\n\t\t]);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(34, 'This is some more text to insert at offset 34.');\n\t\tassert.strictEqual(\n\t\t\tpieceTable.getLinesRawContent(),\n\t\t\t'This is a document with some text.This is some more text to insert at offset 34.'\n\t\t);\n\t\tpieceTable.delete(42, 5);\n\t\tassert.strictEqual(\n\t\t\tpieceTable.getLinesRawContent(),\n\t\t\t'This is a document with some text.This is more text to insert at offset 34.'\n\t\t);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('more inserts', () => {\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pt = pieceTree.getPieceTree();\n\t\tpt.insert(0, 'AAA');\n\t\tassert.strictEqual(pt.getLinesRawContent(), 'AAA');\n\t\tpt.insert(0, 'BBB');\n\t\tassert.strictEqual(pt.getLinesRawContent(), 'BBBAAA');\n\t\tpt.insert(6, 'CCC');\n\t\tassert.strictEqual(pt.getLinesRawContent(), 'BBBAAACCC');\n\t\tpt.insert(5, 'DDD');\n\t\tassert.strictEqual(pt.getLinesRawContent(), 'BBBAADDDACCC');\n\t\tassertTreeInvariants(pt);\n\t});\n\n\ttest('more deletes', () => {\n\t\tconst pieceTree = createTextBuffer(['012345678']);\n\t\tds.add(pieceTree);\n\t\tconst pt = pieceTree.getPieceTree();\n\n\t\tpt.delete(8, 1);\n\t\tassert.strictEqual(pt.getLinesRawContent(), '01234567');\n\t\tpt.delete(0, 1);\n\t\tassert.strictEqual(pt.getLinesRawContent(), '1234567');\n\t\tpt.delete(5, 1);\n\t\tassert.strictEqual(pt.getLinesRawContent(), '123457');\n\t\tpt.delete(5, 1);\n\t\tassert.strictEqual(pt.getLinesRawContent(), '12345');\n\t\tpt.delete(0, 5);\n\t\tassert.strictEqual(pt.getLinesRawContent(), '');\n\t\tassertTreeInvariants(pt);\n\t});\n\n\ttest('random test 1', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, 'ceLPHmFzvCtFeHkCBej ');\n\t\tstr = str.substring(0, 0) + 'ceLPHmFzvCtFeHkCBej ' + str.substring(0);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tpieceTable.insert(8, 'gDCEfNYiBUNkSwtvB K ');\n\t\tstr = str.substring(0, 8) + 'gDCEfNYiBUNkSwtvB K ' + str.substring(8);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tpieceTable.insert(38, 'cyNcHxjNPPoehBJldLS ');\n\t\tstr = str.substring(0, 38) + 'cyNcHxjNPPoehBJldLS ' + str.substring(38);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tpieceTable.insert(59, 'ejMx\\nOTgWlbpeDExjOk ');\n\t\tstr = str.substring(0, 59) + 'ejMx\\nOTgWlbpeDExjOk ' + str.substring(59);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random test 2', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'VgPG ');\n\t\tstr = str.substring(0, 0) + 'VgPG ' + str.substring(0);\n\t\tpieceTable.insert(2, 'DdWF ');\n\t\tstr = str.substring(0, 2) + 'DdWF ' + str.substring(2);\n\t\tpieceTable.insert(0, 'hUJc ');\n\t\tstr = str.substring(0, 0) + 'hUJc ' + str.substring(0);\n\t\tpieceTable.insert(8, 'lQEq ');\n\t\tstr = str.substring(0, 8) + 'lQEq ' + str.substring(8);\n\t\tpieceTable.insert(10, 'Gbtp ');\n\t\tstr = str.substring(0, 10) + 'Gbtp ' + str.substring(10);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random test 3', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'gYSz');\n\t\tstr = str.substring(0, 0) + 'gYSz' + str.substring(0);\n\t\tpieceTable.insert(1, 'mDQe');\n\t\tstr = str.substring(0, 1) + 'mDQe' + str.substring(1);\n\t\tpieceTable.insert(1, 'DTMQ');\n\t\tstr = str.substring(0, 1) + 'DTMQ' + str.substring(1);\n\t\tpieceTable.insert(2, 'GGZB');\n\t\tstr = str.substring(0, 2) + 'GGZB' + str.substring(2);\n\t\tpieceTable.insert(12, 'wXpq');\n\t\tstr = str.substring(0, 12) + 'wXpq' + str.substring(12);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t});\n\n\ttest('random delete 1', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, 'vfb');\n\t\tstr = str.substring(0, 0) + 'vfb' + str.substring(0);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tpieceTable.insert(0, 'zRq');\n\t\tstr = str.substring(0, 0) + 'zRq' + str.substring(0);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\n\t\tpieceTable.delete(5, 1);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 1);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\n\t\tpieceTable.insert(1, 'UNw');\n\t\tstr = str.substring(0, 1) + 'UNw' + str.substring(1);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\n\t\tpieceTable.delete(4, 3);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 3);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\n\t\tpieceTable.delete(1, 4);\n\t\tstr = str.substring(0, 1) + str.substring(1 + 4);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\n\t\tpieceTable.delete(0, 1);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 1);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random delete 2', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, 'IDT');\n\t\tstr = str.substring(0, 0) + 'IDT' + str.substring(0);\n\t\tpieceTable.insert(3, 'wwA');\n\t\tstr = str.substring(0, 3) + 'wwA' + str.substring(3);\n\t\tpieceTable.insert(3, 'Gnr');\n\t\tstr = str.substring(0, 3) + 'Gnr' + str.substring(3);\n\t\tpieceTable.delete(6, 3);\n\t\tstr = str.substring(0, 6) + str.substring(6 + 3);\n\t\tpieceTable.insert(4, 'eHp');\n\t\tstr = str.substring(0, 4) + 'eHp' + str.substring(4);\n\t\tpieceTable.insert(1, 'UAi');\n\t\tstr = str.substring(0, 1) + 'UAi' + str.substring(1);\n\t\tpieceTable.insert(2, 'FrR');\n\t\tstr = str.substring(0, 2) + 'FrR' + str.substring(2);\n\t\tpieceTable.delete(6, 7);\n\t\tstr = str.substring(0, 6) + str.substring(6 + 7);\n\t\tpieceTable.delete(3, 5);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 5);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random delete 3', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'PqM');\n\t\tstr = str.substring(0, 0) + 'PqM' + str.substring(0);\n\t\tpieceTable.delete(1, 2);\n\t\tstr = str.substring(0, 1) + str.substring(1 + 2);\n\t\tpieceTable.insert(1, 'zLc');\n\t\tstr = str.substring(0, 1) + 'zLc' + str.substring(1);\n\t\tpieceTable.insert(0, 'MEX');\n\t\tstr = str.substring(0, 0) + 'MEX' + str.substring(0);\n\t\tpieceTable.insert(0, 'jZh');\n\t\tstr = str.substring(0, 0) + 'jZh' + str.substring(0);\n\t\tpieceTable.insert(8, 'GwQ');\n\t\tstr = str.substring(0, 8) + 'GwQ' + str.substring(8);\n\t\tpieceTable.delete(5, 6);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 6);\n\t\tpieceTable.insert(4, 'ktw');\n\t\tstr = str.substring(0, 4) + 'ktw' + str.substring(4);\n\t\tpieceTable.insert(5, 'GVu');\n\t\tstr = str.substring(0, 5) + 'GVu' + str.substring(5);\n\t\tpieceTable.insert(9, 'jdm');\n\t\tstr = str.substring(0, 9) + 'jdm' + str.substring(9);\n\t\tpieceTable.insert(15, 'na\\n');\n\t\tstr = str.substring(0, 15) + 'na\\n' + str.substring(15);\n\t\tpieceTable.delete(5, 8);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 8);\n\t\tpieceTable.delete(3, 4);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 4);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random insert/delete \\\\r bug 1', () => {\n\t\tlet str = 'a';\n\t\tconst pieceTree = createTextBuffer(['a']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.delete(0, 1);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 1);\n\t\tpieceTable.insert(0, '\\r\\r\\n\\n');\n\t\tstr = str.substring(0, 0) + '\\r\\r\\n\\n' + str.substring(0);\n\t\tpieceTable.delete(3, 1);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 1);\n\t\tpieceTable.insert(2, '\\n\\n\\ra');\n\t\tstr = str.substring(0, 2) + '\\n\\n\\ra' + str.substring(2);\n\t\tpieceTable.delete(4, 3);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 3);\n\t\tpieceTable.insert(2, '\\na\\r\\r');\n\t\tstr = str.substring(0, 2) + '\\na\\r\\r' + str.substring(2);\n\t\tpieceTable.insert(6, '\\ra\\n\\n');\n\t\tstr = str.substring(0, 6) + '\\ra\\n\\n' + str.substring(6);\n\t\tpieceTable.insert(0, 'aa\\n\\n');\n\t\tstr = str.substring(0, 0) + 'aa\\n\\n' + str.substring(0);\n\t\tpieceTable.insert(5, '\\n\\na\\r');\n\t\tstr = str.substring(0, 5) + '\\n\\na\\r' + str.substring(5);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random insert/delete \\\\r bug 2', () => {\n\t\tlet str = 'a';\n\t\tconst pieceTree = createTextBuffer(['a']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(1, '\\naa\\r');\n\t\tstr = str.substring(0, 1) + '\\naa\\r' + str.substring(1);\n\t\tpieceTable.delete(0, 4);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 4);\n\t\tpieceTable.insert(1, '\\r\\r\\na');\n\t\tstr = str.substring(0, 1) + '\\r\\r\\na' + str.substring(1);\n\t\tpieceTable.insert(2, '\\n\\r\\ra');\n\t\tstr = str.substring(0, 2) + '\\n\\r\\ra' + str.substring(2);\n\t\tpieceTable.delete(4, 1);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 1);\n\t\tpieceTable.insert(8, '\\r\\n\\r\\r');\n\t\tstr = str.substring(0, 8) + '\\r\\n\\r\\r' + str.substring(8);\n\t\tpieceTable.insert(7, '\\n\\n\\na');\n\t\tstr = str.substring(0, 7) + '\\n\\n\\na' + str.substring(7);\n\t\tpieceTable.insert(13, 'a\\n\\na');\n\t\tstr = str.substring(0, 13) + 'a\\n\\na' + str.substring(13);\n\t\tpieceTable.delete(17, 3);\n\t\tstr = str.substring(0, 17) + str.substring(17 + 3);\n\t\tpieceTable.insert(2, 'a\\ra\\n');\n\t\tstr = str.substring(0, 2) + 'a\\ra\\n' + str.substring(2);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random insert/delete \\\\r bug 3', () => {\n\t\tlet str = 'a';\n\t\tconst pieceTree = createTextBuffer(['a']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, '\\r\\na\\r');\n\t\tstr = str.substring(0, 0) + '\\r\\na\\r' + str.substring(0);\n\t\tpieceTable.delete(2, 3);\n\t\tstr = str.substring(0, 2) + str.substring(2 + 3);\n\t\tpieceTable.insert(2, 'a\\r\\n\\r');\n\t\tstr = str.substring(0, 2) + 'a\\r\\n\\r' + str.substring(2);\n\t\tpieceTable.delete(4, 2);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 2);\n\t\tpieceTable.insert(4, 'a\\n\\r\\n');\n\t\tstr = str.substring(0, 4) + 'a\\n\\r\\n' + str.substring(4);\n\t\tpieceTable.insert(1, 'aa\\n\\r');\n\t\tstr = str.substring(0, 1) + 'aa\\n\\r' + str.substring(1);\n\t\tpieceTable.insert(7, '\\na\\r\\n');\n\t\tstr = str.substring(0, 7) + '\\na\\r\\n' + str.substring(7);\n\t\tpieceTable.insert(5, '\\n\\na\\r');\n\t\tstr = str.substring(0, 5) + '\\n\\na\\r' + str.substring(5);\n\t\tpieceTable.insert(10, '\\r\\r\\n\\r');\n\t\tstr = str.substring(0, 10) + '\\r\\r\\n\\r' + str.substring(10);\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tpieceTable.delete(21, 3);\n\t\tstr = str.substring(0, 21) + str.substring(21 + 3);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random insert/delete \\\\r bug 4s', () => {\n\t\tlet str = 'a';\n\t\tconst pieceTree = createTextBuffer(['a']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.delete(0, 1);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 1);\n\t\tpieceTable.insert(0, '\\naaa');\n\t\tstr = str.substring(0, 0) + '\\naaa' + str.substring(0);\n\t\tpieceTable.insert(2, '\\n\\naa');\n\t\tstr = str.substring(0, 2) + '\\n\\naa' + str.substring(2);\n\t\tpieceTable.delete(1, 4);\n\t\tstr = str.substring(0, 1) + str.substring(1 + 4);\n\t\tpieceTable.delete(3, 1);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 1);\n\t\tpieceTable.delete(1, 2);\n\t\tstr = str.substring(0, 1) + str.substring(1 + 2);\n\t\tpieceTable.delete(0, 1);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 1);\n\t\tpieceTable.insert(0, 'a\\n\\n\\r');\n\t\tstr = str.substring(0, 0) + 'a\\n\\n\\r' + str.substring(0);\n\t\tpieceTable.insert(2, 'aa\\r\\n');\n\t\tstr = str.substring(0, 2) + 'aa\\r\\n' + str.substring(2);\n\t\tpieceTable.insert(3, 'a\\naa');\n\t\tstr = str.substring(0, 3) + 'a\\naa' + str.substring(3);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random insert/delete \\\\r bug 5', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, '\\n\\n\\n\\r');\n\t\tstr = str.substring(0, 0) + '\\n\\n\\n\\r' + str.substring(0);\n\t\tpieceTable.insert(1, '\\n\\n\\n\\r');\n\t\tstr = str.substring(0, 1) + '\\n\\n\\n\\r' + str.substring(1);\n\t\tpieceTable.insert(2, '\\n\\r\\r\\r');\n\t\tstr = str.substring(0, 2) + '\\n\\r\\r\\r' + str.substring(2);\n\t\tpieceTable.insert(8, '\\n\\r\\n\\r');\n\t\tstr = str.substring(0, 8) + '\\n\\r\\n\\r' + str.substring(8);\n\t\tpieceTable.delete(5, 2);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 2);\n\t\tpieceTable.insert(4, '\\n\\r\\r\\r');\n\t\tstr = str.substring(0, 4) + '\\n\\r\\r\\r' + str.substring(4);\n\t\tpieceTable.insert(8, '\\n\\n\\n\\r');\n\t\tstr = str.substring(0, 8) + '\\n\\n\\n\\r' + str.substring(8);\n\t\tpieceTable.delete(0, 7);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 7);\n\t\tpieceTable.insert(1, '\\r\\n\\r\\r');\n\t\tstr = str.substring(0, 1) + '\\r\\n\\r\\r' + str.substring(1);\n\t\tpieceTable.insert(15, '\\n\\r\\r\\r');\n\t\tstr = str.substring(0, 15) + '\\n\\r\\r\\r' + str.substring(15);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n});\n\nsuite('prefix sum for line feed', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('basic', () => {\n\t\tconst pieceTree = createTextBuffer(['1\\n2\\n3\\n4']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tassert.strictEqual(pieceTable.getLineCount(), 4);\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(0), new Position(1, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(1), new Position(1, 2));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(2), new Position(2, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(3), new Position(2, 2));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(4), new Position(3, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(5), new Position(3, 2));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(6), new Position(4, 1));\n\n\t\tassert.strictEqual(pieceTable.getOffsetAt(1, 1), 0);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(1, 2), 1);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(2, 1), 2);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(2, 2), 3);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(3, 1), 4);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(3, 2), 5);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 1), 6);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('append', () => {\n\t\tconst pieceTree = createTextBuffer(['a\\nb\\nc\\nde']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(8, 'fh\\ni\\njk');\n\n\t\tassert.strictEqual(pieceTable.getLineCount(), 6);\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(9), new Position(4, 4));\n\t\tassert.strictEqual(pieceTable.getOffsetAt(1, 1), 0);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('insert', () => {\n\t\tconst pieceTree = createTextBuffer(['a\\nb\\nc\\nde']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(7, 'fh\\ni\\njk');\n\n\t\tassert.strictEqual(pieceTable.getLineCount(), 6);\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(6), new Position(4, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(7), new Position(4, 2));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(8), new Position(4, 3));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(9), new Position(4, 4));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(12), new Position(6, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(13), new Position(6, 2));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(14), new Position(6, 3));\n\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 1), 6);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 2), 7);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 3), 8);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 4), 9);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(6, 1), 12);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(6, 2), 13);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(6, 3), 14);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('delete', () => {\n\t\tconst pieceTree = createTextBuffer(['a\\nb\\nc\\ndefh\\ni\\njk']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.delete(7, 2);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), 'a\\nb\\nc\\ndh\\ni\\njk');\n\t\tassert.strictEqual(pieceTable.getLineCount(), 6);\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(6), new Position(4, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(7), new Position(4, 2));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(8), new Position(4, 3));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(9), new Position(5, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(11), new Position(6, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(12), new Position(6, 2));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(13), new Position(6, 3));\n\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 1), 6);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 2), 7);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 3), 8);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(5, 1), 9);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(6, 1), 11);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(6, 2), 12);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(6, 3), 13);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('add+delete 1', () => {\n\t\tconst pieceTree = createTextBuffer(['a\\nb\\nc\\nde']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(8, 'fh\\ni\\njk');\n\t\tpieceTable.delete(7, 2);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), 'a\\nb\\nc\\ndh\\ni\\njk');\n\t\tassert.strictEqual(pieceTable.getLineCount(), 6);\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(6), new Position(4, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(7), new Position(4, 2));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(8), new Position(4, 3));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(9), new Position(5, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(11), new Position(6, 1));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(12), new Position(6, 2));\n\t\tassert.deepStrictEqual(pieceTable.getPositionAt(13), new Position(6, 3));\n\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 1), 6);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 2), 7);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(4, 3), 8);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(5, 1), 9);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(6, 1), 11);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(6, 2), 12);\n\t\tassert.strictEqual(pieceTable.getOffsetAt(6, 3), 13);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('insert random bug 1: prefixSumComputer.removeValues(start, cnt) cnt is 1 based.', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, ' ZX \\n Z\\nZ\\n YZ\\nY\\nZXX ');\n\t\tstr =\n\t\t\tstr.substring(0, 0) +\n\t\t\t' ZX \\n Z\\nZ\\n YZ\\nY\\nZXX ' +\n\t\t\tstr.substring(0);\n\t\tpieceTable.insert(14, 'X ZZ\\nYZZYZXXY Y XY\\n ');\n\t\tstr =\n\t\t\tstr.substring(0, 14) + 'X ZZ\\nYZZYZXXY Y XY\\n ' + str.substring(14);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('insert random bug 2: prefixSumComputer initialize does not do deep copy of UInt32Array.', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'ZYZ\\nYY XY\\nX \\nZ Y \\nZ ');\n\t\tstr =\n\t\t\tstr.substring(0, 0) + 'ZYZ\\nYY XY\\nX \\nZ Y \\nZ ' + str.substring(0);\n\t\tpieceTable.insert(3, 'XXY \\n\\nY Y YYY  ZYXY ');\n\t\tstr = str.substring(0, 3) + 'XXY \\n\\nY Y YYY  ZYXY ' + str.substring(3);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('delete random bug 1: I forgot to update the lineFeedCnt when deletion is on one single piece.', () => {\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'ba\\na\\nca\\nba\\ncbab\\ncaa ');\n\t\tpieceTable.insert(13, 'cca\\naabb\\ncac\\nccc\\nab ');\n\t\tpieceTable.delete(5, 8);\n\t\tpieceTable.delete(30, 2);\n\t\tpieceTable.insert(24, 'cbbacccbac\\nbaaab\\n\\nc ');\n\t\tpieceTable.delete(29, 3);\n\t\tpieceTable.delete(23, 9);\n\t\tpieceTable.delete(21, 5);\n\t\tpieceTable.delete(30, 3);\n\t\tpieceTable.insert(3, 'cb\\nac\\nc\\n\\nacc\\nbb\\nb\\nc ');\n\t\tpieceTable.delete(19, 5);\n\t\tpieceTable.insert(18, '\\nbb\\n\\nacbc\\ncbb\\nc\\nbb\\n ');\n\t\tpieceTable.insert(65, 'cbccbac\\nbc\\n\\nccabba\\n ');\n\t\tpieceTable.insert(77, 'a\\ncacb\\n\\nac\\n\\n\\n\\n\\nabab ');\n\t\tpieceTable.delete(30, 9);\n\t\tpieceTable.insert(45, 'b\\n\\nc\\nba\\n\\nbbbba\\n\\naa\\n ');\n\t\tpieceTable.insert(82, 'ab\\nbb\\ncabacab\\ncbc\\na ');\n\t\tpieceTable.delete(123, 9);\n\t\tpieceTable.delete(71, 2);\n\t\tpieceTable.insert(33, 'acaa\\nacb\\n\\naa\\n\\nc\\n\\n\\n\\n ');\n\n\t\tconst str = pieceTable.getLinesRawContent();\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('delete random bug rb tree 1', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([str]);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'YXXZ\\n\\nYY\\n');\n\t\tstr = str.substring(0, 0) + 'YXXZ\\n\\nYY\\n' + str.substring(0);\n\t\tpieceTable.delete(0, 5);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 5);\n\t\tpieceTable.insert(0, 'ZXYY\\nX\\nZ\\n');\n\t\tstr = str.substring(0, 0) + 'ZXYY\\nX\\nZ\\n' + str.substring(0);\n\t\tpieceTable.insert(10, '\\nXY\\nYXYXY');\n\t\tstr = str.substring(0, 10) + '\\nXY\\nYXYXY' + str.substring(10);\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('delete random bug rb tree 2', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([str]);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'YXXZ\\n\\nYY\\n');\n\t\tstr = str.substring(0, 0) + 'YXXZ\\n\\nYY\\n' + str.substring(0);\n\t\tpieceTable.insert(0, 'ZXYY\\nX\\nZ\\n');\n\t\tstr = str.substring(0, 0) + 'ZXYY\\nX\\nZ\\n' + str.substring(0);\n\t\tpieceTable.insert(10, '\\nXY\\nYXYXY');\n\t\tstr = str.substring(0, 10) + '\\nXY\\nYXYXY' + str.substring(10);\n\t\tpieceTable.insert(8, 'YZXY\\nZ\\nYX');\n\t\tstr = str.substring(0, 8) + 'YZXY\\nZ\\nYX' + str.substring(8);\n\t\tpieceTable.insert(12, 'XX\\nXXYXYZ');\n\t\tstr = str.substring(0, 12) + 'XX\\nXXYXYZ' + str.substring(12);\n\t\tpieceTable.delete(0, 4);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 4);\n\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('delete random bug rb tree 3', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([str]);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'YXXZ\\n\\nYY\\n');\n\t\tstr = str.substring(0, 0) + 'YXXZ\\n\\nYY\\n' + str.substring(0);\n\t\tpieceTable.delete(7, 2);\n\t\tstr = str.substring(0, 7) + str.substring(7 + 2);\n\t\tpieceTable.delete(6, 1);\n\t\tstr = str.substring(0, 6) + str.substring(6 + 1);\n\t\tpieceTable.delete(0, 5);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 5);\n\t\tpieceTable.insert(0, 'ZXYY\\nX\\nZ\\n');\n\t\tstr = str.substring(0, 0) + 'ZXYY\\nX\\nZ\\n' + str.substring(0);\n\t\tpieceTable.insert(10, '\\nXY\\nYXYXY');\n\t\tstr = str.substring(0, 10) + '\\nXY\\nYXYXY' + str.substring(10);\n\t\tpieceTable.insert(8, 'YZXY\\nZ\\nYX');\n\t\tstr = str.substring(0, 8) + 'YZXY\\nZ\\nYX' + str.substring(8);\n\t\tpieceTable.insert(12, 'XX\\nXXYXYZ');\n\t\tstr = str.substring(0, 12) + 'XX\\nXXYXYZ' + str.substring(12);\n\t\tpieceTable.delete(0, 4);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 4);\n\t\tpieceTable.delete(30, 3);\n\t\tstr = str.substring(0, 30) + str.substring(30 + 3);\n\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n});\n\nsuite('offset 2 position', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('random tests bug 1', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'huuyYzUfKOENwGgZLqn ');\n\t\tstr = str.substring(0, 0) + 'huuyYzUfKOENwGgZLqn ' + str.substring(0);\n\t\tpieceTable.delete(18, 2);\n\t\tstr = str.substring(0, 18) + str.substring(18 + 2);\n\t\tpieceTable.delete(3, 1);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 1);\n\t\tpieceTable.delete(12, 4);\n\t\tstr = str.substring(0, 12) + str.substring(12 + 4);\n\t\tpieceTable.insert(3, 'hMbnVEdTSdhLlPevXKF ');\n\t\tstr = str.substring(0, 3) + 'hMbnVEdTSdhLlPevXKF ' + str.substring(3);\n\t\tpieceTable.delete(22, 8);\n\t\tstr = str.substring(0, 22) + str.substring(22 + 8);\n\t\tpieceTable.insert(4, 'S umSnYrqOmOAV\\nEbZJ ');\n\t\tstr = str.substring(0, 4) + 'S umSnYrqOmOAV\\nEbZJ ' + str.substring(4);\n\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n});\n\nsuite('get text in range', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('getContentInRange', () => {\n\t\tconst pieceTree = createTextBuffer(['a\\nb\\nc\\nde']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(8, 'fh\\ni\\njk');\n\t\tpieceTable.delete(7, 2);\n\t\t// 'a\\nb\\nc\\ndh\\ni\\njk'\n\n\t\tassert.strictEqual(pieceTable.getValueInRange(new Range(1, 1, 1, 3)), 'a\\n');\n\t\tassert.strictEqual(pieceTable.getValueInRange(new Range(2, 1, 2, 3)), 'b\\n');\n\t\tassert.strictEqual(pieceTable.getValueInRange(new Range(3, 1, 3, 3)), 'c\\n');\n\t\tassert.strictEqual(pieceTable.getValueInRange(new Range(4, 1, 4, 4)), 'dh\\n');\n\t\tassert.strictEqual(pieceTable.getValueInRange(new Range(5, 1, 5, 3)), 'i\\n');\n\t\tassert.strictEqual(pieceTable.getValueInRange(new Range(6, 1, 6, 3)), 'jk');\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random test value in range', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([str]);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, 'ZXXY');\n\t\tstr = str.substring(0, 0) + 'ZXXY' + str.substring(0);\n\t\tpieceTable.insert(1, 'XZZY');\n\t\tstr = str.substring(0, 1) + 'XZZY' + str.substring(1);\n\t\tpieceTable.insert(5, '\\nX\\n\\n');\n\t\tstr = str.substring(0, 5) + '\\nX\\n\\n' + str.substring(5);\n\t\tpieceTable.insert(3, '\\nXX\\n');\n\t\tstr = str.substring(0, 3) + '\\nXX\\n' + str.substring(3);\n\t\tpieceTable.insert(12, 'YYYX');\n\t\tstr = str.substring(0, 12) + 'YYYX' + str.substring(12);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random test value in range exception', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([str]);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, 'XZ\\nZ');\n\t\tstr = str.substring(0, 0) + 'XZ\\nZ' + str.substring(0);\n\t\tpieceTable.delete(0, 3);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 3);\n\t\tpieceTable.delete(0, 1);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 1);\n\t\tpieceTable.insert(0, 'ZYX\\n');\n\t\tstr = str.substring(0, 0) + 'ZYX\\n' + str.substring(0);\n\t\tpieceTable.delete(0, 4);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 4);\n\n\t\tpieceTable.getValueInRange(new Range(1, 1, 1, 1));\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random tests bug 1', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'huuyYzUfKOENwGgZLqn ');\n\t\tstr = str.substring(0, 0) + 'huuyYzUfKOENwGgZLqn ' + str.substring(0);\n\t\tpieceTable.delete(18, 2);\n\t\tstr = str.substring(0, 18) + str.substring(18 + 2);\n\t\tpieceTable.delete(3, 1);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 1);\n\t\tpieceTable.delete(12, 4);\n\t\tstr = str.substring(0, 12) + str.substring(12 + 4);\n\t\tpieceTable.insert(3, 'hMbnVEdTSdhLlPevXKF ');\n\t\tstr = str.substring(0, 3) + 'hMbnVEdTSdhLlPevXKF ' + str.substring(3);\n\t\tpieceTable.delete(22, 8);\n\t\tstr = str.substring(0, 22) + str.substring(22 + 8);\n\t\tpieceTable.insert(4, 'S umSnYrqOmOAV\\nEbZJ ');\n\t\tstr = str.substring(0, 4) + 'S umSnYrqOmOAV\\nEbZJ ' + str.substring(4);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random tests bug 2', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'xfouRDZwdAHjVXJAMV\\n ');\n\t\tstr = str.substring(0, 0) + 'xfouRDZwdAHjVXJAMV\\n ' + str.substring(0);\n\t\tpieceTable.insert(16, 'dBGndxpFZBEAIKykYYx ');\n\t\tstr = str.substring(0, 16) + 'dBGndxpFZBEAIKykYYx ' + str.substring(16);\n\t\tpieceTable.delete(7, 6);\n\t\tstr = str.substring(0, 7) + str.substring(7 + 6);\n\t\tpieceTable.delete(9, 7);\n\t\tstr = str.substring(0, 9) + str.substring(9 + 7);\n\t\tpieceTable.delete(17, 6);\n\t\tstr = str.substring(0, 17) + str.substring(17 + 6);\n\t\tpieceTable.delete(0, 4);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 4);\n\t\tpieceTable.insert(9, 'qvEFXCNvVkWgvykahYt ');\n\t\tstr = str.substring(0, 9) + 'qvEFXCNvVkWgvykahYt ' + str.substring(9);\n\t\tpieceTable.delete(4, 6);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 6);\n\t\tpieceTable.insert(11, 'OcSChUYT\\nzPEBOpsGmR ');\n\t\tstr =\n\t\t\tstr.substring(0, 11) + 'OcSChUYT\\nzPEBOpsGmR ' + str.substring(11);\n\t\tpieceTable.insert(15, 'KJCozaXTvkE\\nxnqAeTz ');\n\t\tstr =\n\t\t\tstr.substring(0, 15) + 'KJCozaXTvkE\\nxnqAeTz ' + str.substring(15);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('get line content', () => {\n\t\tconst pieceTree = createTextBuffer(['1']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tassert.strictEqual(pieceTable.getLineRawContent(1), '1');\n\t\tpieceTable.insert(1, '2');\n\t\tassert.strictEqual(pieceTable.getLineRawContent(1), '12');\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('get line content basic', () => {\n\t\tconst pieceTree = createTextBuffer(['1\\n2\\n3\\n4']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tassert.strictEqual(pieceTable.getLineRawContent(1), '1\\n');\n\t\tassert.strictEqual(pieceTable.getLineRawContent(2), '2\\n');\n\t\tassert.strictEqual(pieceTable.getLineRawContent(3), '3\\n');\n\t\tassert.strictEqual(pieceTable.getLineRawContent(4), '4');\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('get line content after inserts/deletes', () => {\n\t\tconst pieceTree = createTextBuffer(['a\\nb\\nc\\nde']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(8, 'fh\\ni\\njk');\n\t\tpieceTable.delete(7, 2);\n\t\t// 'a\\nb\\nc\\ndh\\ni\\njk'\n\n\t\tassert.strictEqual(pieceTable.getLineRawContent(1), 'a\\n');\n\t\tassert.strictEqual(pieceTable.getLineRawContent(2), 'b\\n');\n\t\tassert.strictEqual(pieceTable.getLineRawContent(3), 'c\\n');\n\t\tassert.strictEqual(pieceTable.getLineRawContent(4), 'dh\\n');\n\t\tassert.strictEqual(pieceTable.getLineRawContent(5), 'i\\n');\n\t\tassert.strictEqual(pieceTable.getLineRawContent(6), 'jk');\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random 1', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, 'J eNnDzQpnlWyjmUu\\ny ');\n\t\tstr = str.substring(0, 0) + 'J eNnDzQpnlWyjmUu\\ny ' + str.substring(0);\n\t\tpieceTable.insert(0, 'QPEeRAQmRwlJqtZSWhQ ');\n\t\tstr = str.substring(0, 0) + 'QPEeRAQmRwlJqtZSWhQ ' + str.substring(0);\n\t\tpieceTable.delete(5, 1);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 1);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random 2', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'DZoQ tglPCRHMltejRI ');\n\t\tstr = str.substring(0, 0) + 'DZoQ tglPCRHMltejRI ' + str.substring(0);\n\t\tpieceTable.insert(10, 'JRXiyYqJ qqdcmbfkKX ');\n\t\tstr = str.substring(0, 10) + 'JRXiyYqJ qqdcmbfkKX ' + str.substring(10);\n\t\tpieceTable.delete(16, 3);\n\t\tstr = str.substring(0, 16) + str.substring(16 + 3);\n\t\tpieceTable.delete(25, 1);\n\t\tstr = str.substring(0, 25) + str.substring(25 + 1);\n\t\tpieceTable.insert(18, 'vH\\nNlvfqQJPm\\nSFkhMc ');\n\t\tstr =\n\t\t\tstr.substring(0, 18) + 'vH\\nNlvfqQJPm\\nSFkhMc ' + str.substring(18);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n});\n\nsuite('CRLF', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('delete CR in CRLF 1', () => {\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'a\\r\\nb');\n\t\tpieceTable.delete(0, 2);\n\n\t\tassert.strictEqual(pieceTable.getLineCount(), 2);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('delete CR in CRLF 2', () => {\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, 'a\\r\\nb');\n\t\tpieceTable.delete(2, 2);\n\n\t\tassert.strictEqual(pieceTable.getLineCount(), 2);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 1', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.insert(0, '\\n\\n\\r\\r');\n\t\tstr = str.substring(0, 0) + '\\n\\n\\r\\r' + str.substring(0);\n\t\tpieceTable.insert(1, '\\r\\n\\r\\n');\n\t\tstr = str.substring(0, 1) + '\\r\\n\\r\\n' + str.substring(1);\n\t\tpieceTable.delete(5, 3);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 3);\n\t\tpieceTable.delete(2, 3);\n\t\tstr = str.substring(0, 2) + str.substring(2 + 3);\n\n\t\tconst lines = splitLines(str);\n\t\tassert.strictEqual(pieceTable.getLineCount(), lines.length);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random bug 2', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, '\\n\\r\\n\\r');\n\t\tstr = str.substring(0, 0) + '\\n\\r\\n\\r' + str.substring(0);\n\t\tpieceTable.insert(2, '\\n\\r\\r\\r');\n\t\tstr = str.substring(0, 2) + '\\n\\r\\r\\r' + str.substring(2);\n\t\tpieceTable.delete(4, 1);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 1);\n\n\t\tconst lines = splitLines(str);\n\t\tassert.strictEqual(pieceTable.getLineCount(), lines.length);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random bug 3', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, '\\n\\n\\n\\r');\n\t\tstr = str.substring(0, 0) + '\\n\\n\\n\\r' + str.substring(0);\n\t\tpieceTable.delete(2, 2);\n\t\tstr = str.substring(0, 2) + str.substring(2 + 2);\n\t\tpieceTable.delete(0, 2);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 2);\n\t\tpieceTable.insert(0, '\\r\\r\\r\\r');\n\t\tstr = str.substring(0, 0) + '\\r\\r\\r\\r' + str.substring(0);\n\t\tpieceTable.insert(2, '\\r\\n\\r\\r');\n\t\tstr = str.substring(0, 2) + '\\r\\n\\r\\r' + str.substring(2);\n\t\tpieceTable.insert(3, '\\r\\r\\r\\n');\n\t\tstr = str.substring(0, 3) + '\\r\\r\\r\\n' + str.substring(3);\n\n\t\tconst lines = splitLines(str);\n\t\tassert.strictEqual(pieceTable.getLineCount(), lines.length);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random bug 4', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, '\\n\\n\\n\\n');\n\t\tstr = str.substring(0, 0) + '\\n\\n\\n\\n' + str.substring(0);\n\t\tpieceTable.delete(3, 1);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 1);\n\t\tpieceTable.insert(1, '\\r\\r\\r\\r');\n\t\tstr = str.substring(0, 1) + '\\r\\r\\r\\r' + str.substring(1);\n\t\tpieceTable.insert(6, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 6) + '\\r\\n\\n\\r' + str.substring(6);\n\t\tpieceTable.delete(5, 3);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 3);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random bug 5', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, '\\n\\n\\n\\n');\n\t\tstr = str.substring(0, 0) + '\\n\\n\\n\\n' + str.substring(0);\n\t\tpieceTable.delete(3, 1);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 1);\n\t\tpieceTable.insert(0, '\\n\\r\\r\\n');\n\t\tstr = str.substring(0, 0) + '\\n\\r\\r\\n' + str.substring(0);\n\t\tpieceTable.insert(4, '\\n\\r\\r\\n');\n\t\tstr = str.substring(0, 4) + '\\n\\r\\r\\n' + str.substring(4);\n\t\tpieceTable.delete(4, 3);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 3);\n\t\tpieceTable.insert(5, '\\r\\r\\n\\r');\n\t\tstr = str.substring(0, 5) + '\\r\\r\\n\\r' + str.substring(5);\n\t\tpieceTable.insert(12, '\\n\\n\\n\\r');\n\t\tstr = str.substring(0, 12) + '\\n\\n\\n\\r' + str.substring(12);\n\t\tpieceTable.insert(5, '\\r\\r\\r\\n');\n\t\tstr = str.substring(0, 5) + '\\r\\r\\r\\n' + str.substring(5);\n\t\tpieceTable.insert(20, '\\n\\n\\r\\n');\n\t\tstr = str.substring(0, 20) + '\\n\\n\\r\\n' + str.substring(20);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random bug 6', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, '\\n\\r\\r\\n');\n\t\tstr = str.substring(0, 0) + '\\n\\r\\r\\n' + str.substring(0);\n\t\tpieceTable.insert(4, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 4) + '\\r\\n\\n\\r' + str.substring(4);\n\t\tpieceTable.insert(3, '\\r\\n\\n\\n');\n\t\tstr = str.substring(0, 3) + '\\r\\n\\n\\n' + str.substring(3);\n\t\tpieceTable.delete(4, 8);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 8);\n\t\tpieceTable.insert(4, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 4) + '\\r\\n\\n\\r' + str.substring(4);\n\t\tpieceTable.insert(0, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 0) + '\\r\\n\\n\\r' + str.substring(0);\n\t\tpieceTable.delete(4, 0);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 0);\n\t\tpieceTable.delete(8, 4);\n\t\tstr = str.substring(0, 8) + str.substring(8 + 4);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random bug 8', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 0) + '\\r\\n\\n\\r' + str.substring(0);\n\t\tpieceTable.delete(1, 0);\n\t\tstr = str.substring(0, 1) + str.substring(1 + 0);\n\t\tpieceTable.insert(3, '\\n\\n\\n\\r');\n\t\tstr = str.substring(0, 3) + '\\n\\n\\n\\r' + str.substring(3);\n\t\tpieceTable.insert(7, '\\n\\n\\r\\n');\n\t\tstr = str.substring(0, 7) + '\\n\\n\\r\\n' + str.substring(7);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random bug 7', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, '\\r\\r\\n\\n');\n\t\tstr = str.substring(0, 0) + '\\r\\r\\n\\n' + str.substring(0);\n\t\tpieceTable.insert(4, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 4) + '\\r\\n\\n\\r' + str.substring(4);\n\t\tpieceTable.insert(7, '\\n\\r\\r\\r');\n\t\tstr = str.substring(0, 7) + '\\n\\r\\r\\r' + str.substring(7);\n\t\tpieceTable.insert(11, '\\n\\n\\r\\n');\n\t\tstr = str.substring(0, 11) + '\\n\\n\\r\\n' + str.substring(11);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 10', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, 'qneW');\n\t\tstr = str.substring(0, 0) + 'qneW' + str.substring(0);\n\t\tpieceTable.insert(0, 'YhIl');\n\t\tstr = str.substring(0, 0) + 'YhIl' + str.substring(0);\n\t\tpieceTable.insert(0, 'qdsm');\n\t\tstr = str.substring(0, 0) + 'qdsm' + str.substring(0);\n\t\tpieceTable.delete(7, 0);\n\t\tstr = str.substring(0, 7) + str.substring(7 + 0);\n\t\tpieceTable.insert(12, 'iiPv');\n\t\tstr = str.substring(0, 12) + 'iiPv' + str.substring(12);\n\t\tpieceTable.insert(9, 'V\\rSA');\n\t\tstr = str.substring(0, 9) + 'V\\rSA' + str.substring(9);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 9', () => {\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, '\\n\\n\\n\\n');\n\t\tstr = str.substring(0, 0) + '\\n\\n\\n\\n' + str.substring(0);\n\t\tpieceTable.insert(3, '\\n\\r\\n\\r');\n\t\tstr = str.substring(0, 3) + '\\n\\r\\n\\r' + str.substring(3);\n\t\tpieceTable.insert(2, '\\n\\r\\n\\n');\n\t\tstr = str.substring(0, 2) + '\\n\\r\\n\\n' + str.substring(2);\n\t\tpieceTable.insert(0, '\\n\\n\\r\\r');\n\t\tstr = str.substring(0, 0) + '\\n\\n\\r\\r' + str.substring(0);\n\t\tpieceTable.insert(3, '\\r\\r\\r\\r');\n\t\tstr = str.substring(0, 3) + '\\r\\r\\r\\r' + str.substring(3);\n\t\tpieceTable.insert(3, '\\n\\n\\r\\r');\n\t\tstr = str.substring(0, 3) + '\\n\\n\\r\\r' + str.substring(3);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n});\n\nsuite('centralized lineStarts with CRLF', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('delete CR in CRLF 1', () => {\n\t\tconst pieceTree = createTextBuffer(['a\\r\\nb'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.delete(2, 2);\n\t\tassert.strictEqual(pieceTable.getLineCount(), 2);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('delete CR in CRLF 2', () => {\n\t\tconst pieceTree = createTextBuffer(['a\\r\\nb']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.delete(0, 2);\n\n\t\tassert.strictEqual(pieceTable.getLineCount(), 2);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 1', () => {\n\t\tlet str = '\\n\\n\\r\\r';\n\t\tconst pieceTree = createTextBuffer(['\\n\\n\\r\\r'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(1, '\\r\\n\\r\\n');\n\t\tstr = str.substring(0, 1) + '\\r\\n\\r\\n' + str.substring(1);\n\t\tpieceTable.delete(5, 3);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 3);\n\t\tpieceTable.delete(2, 3);\n\t\tstr = str.substring(0, 2) + str.substring(2 + 3);\n\n\t\tconst lines = splitLines(str);\n\t\tassert.strictEqual(pieceTable.getLineCount(), lines.length);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\ttest('random bug 2', () => {\n\t\tlet str = '\\n\\r\\n\\r';\n\t\tconst pieceTree = createTextBuffer(['\\n\\r\\n\\r'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(2, '\\n\\r\\r\\r');\n\t\tstr = str.substring(0, 2) + '\\n\\r\\r\\r' + str.substring(2);\n\t\tpieceTable.delete(4, 1);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 1);\n\n\t\tconst lines = splitLines(str);\n\t\tassert.strictEqual(pieceTable.getLineCount(), lines.length);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 3', () => {\n\t\tlet str = '\\n\\n\\n\\r';\n\t\tconst pieceTree = createTextBuffer(['\\n\\n\\n\\r'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.delete(2, 2);\n\t\tstr = str.substring(0, 2) + str.substring(2 + 2);\n\t\tpieceTable.delete(0, 2);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 2);\n\t\tpieceTable.insert(0, '\\r\\r\\r\\r');\n\t\tstr = str.substring(0, 0) + '\\r\\r\\r\\r' + str.substring(0);\n\t\tpieceTable.insert(2, '\\r\\n\\r\\r');\n\t\tstr = str.substring(0, 2) + '\\r\\n\\r\\r' + str.substring(2);\n\t\tpieceTable.insert(3, '\\r\\r\\r\\n');\n\t\tstr = str.substring(0, 3) + '\\r\\r\\r\\n' + str.substring(3);\n\n\t\tconst lines = splitLines(str);\n\t\tassert.strictEqual(pieceTable.getLineCount(), lines.length);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 4', () => {\n\t\tlet str = '\\n\\n\\n\\n';\n\t\tconst pieceTree = createTextBuffer(['\\n\\n\\n\\n'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.delete(3, 1);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 1);\n\t\tpieceTable.insert(1, '\\r\\r\\r\\r');\n\t\tstr = str.substring(0, 1) + '\\r\\r\\r\\r' + str.substring(1);\n\t\tpieceTable.insert(6, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 6) + '\\r\\n\\n\\r' + str.substring(6);\n\t\tpieceTable.delete(5, 3);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 3);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 5', () => {\n\t\tlet str = '\\n\\n\\n\\n';\n\t\tconst pieceTree = createTextBuffer(['\\n\\n\\n\\n'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.delete(3, 1);\n\t\tstr = str.substring(0, 3) + str.substring(3 + 1);\n\t\tpieceTable.insert(0, '\\n\\r\\r\\n');\n\t\tstr = str.substring(0, 0) + '\\n\\r\\r\\n' + str.substring(0);\n\t\tpieceTable.insert(4, '\\n\\r\\r\\n');\n\t\tstr = str.substring(0, 4) + '\\n\\r\\r\\n' + str.substring(4);\n\t\tpieceTable.delete(4, 3);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 3);\n\t\tpieceTable.insert(5, '\\r\\r\\n\\r');\n\t\tstr = str.substring(0, 5) + '\\r\\r\\n\\r' + str.substring(5);\n\t\tpieceTable.insert(12, '\\n\\n\\n\\r');\n\t\tstr = str.substring(0, 12) + '\\n\\n\\n\\r' + str.substring(12);\n\t\tpieceTable.insert(5, '\\r\\r\\r\\n');\n\t\tstr = str.substring(0, 5) + '\\r\\r\\r\\n' + str.substring(5);\n\t\tpieceTable.insert(20, '\\n\\n\\r\\n');\n\t\tstr = str.substring(0, 20) + '\\n\\n\\r\\n' + str.substring(20);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 6', () => {\n\t\tlet str = '\\n\\r\\r\\n';\n\t\tconst pieceTree = createTextBuffer(['\\n\\r\\r\\n'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(4, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 4) + '\\r\\n\\n\\r' + str.substring(4);\n\t\tpieceTable.insert(3, '\\r\\n\\n\\n');\n\t\tstr = str.substring(0, 3) + '\\r\\n\\n\\n' + str.substring(3);\n\t\tpieceTable.delete(4, 8);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 8);\n\t\tpieceTable.insert(4, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 4) + '\\r\\n\\n\\r' + str.substring(4);\n\t\tpieceTable.insert(0, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 0) + '\\r\\n\\n\\r' + str.substring(0);\n\t\tpieceTable.delete(4, 0);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 0);\n\t\tpieceTable.delete(8, 4);\n\t\tstr = str.substring(0, 8) + str.substring(8 + 4);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 7', () => {\n\t\tlet str = '\\r\\n\\n\\r';\n\t\tconst pieceTree = createTextBuffer(['\\r\\n\\n\\r'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.delete(1, 0);\n\t\tstr = str.substring(0, 1) + str.substring(1 + 0);\n\t\tpieceTable.insert(3, '\\n\\n\\n\\r');\n\t\tstr = str.substring(0, 3) + '\\n\\n\\n\\r' + str.substring(3);\n\t\tpieceTable.insert(7, '\\n\\n\\r\\n');\n\t\tstr = str.substring(0, 7) + '\\n\\n\\r\\n' + str.substring(7);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 8', () => {\n\t\tlet str = '\\r\\r\\n\\n';\n\t\tconst pieceTree = createTextBuffer(['\\r\\r\\n\\n'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(4, '\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 4) + '\\r\\n\\n\\r' + str.substring(4);\n\t\tpieceTable.insert(7, '\\n\\r\\r\\r');\n\t\tstr = str.substring(0, 7) + '\\n\\r\\r\\r' + str.substring(7);\n\t\tpieceTable.insert(11, '\\n\\n\\r\\n');\n\t\tstr = str.substring(0, 11) + '\\n\\n\\r\\n' + str.substring(11);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 9', () => {\n\t\tlet str = 'qneW';\n\t\tconst pieceTree = createTextBuffer(['qneW'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(0, 'YhIl');\n\t\tstr = str.substring(0, 0) + 'YhIl' + str.substring(0);\n\t\tpieceTable.insert(0, 'qdsm');\n\t\tstr = str.substring(0, 0) + 'qdsm' + str.substring(0);\n\t\tpieceTable.delete(7, 0);\n\t\tstr = str.substring(0, 7) + str.substring(7 + 0);\n\t\tpieceTable.insert(12, 'iiPv');\n\t\tstr = str.substring(0, 12) + 'iiPv' + str.substring(12);\n\t\tpieceTable.insert(9, 'V\\rSA');\n\t\tstr = str.substring(0, 9) + 'V\\rSA' + str.substring(9);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random bug 10', () => {\n\t\tlet str = '\\n\\n\\n\\n';\n\t\tconst pieceTree = createTextBuffer(['\\n\\n\\n\\n'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.insert(3, '\\n\\r\\n\\r');\n\t\tstr = str.substring(0, 3) + '\\n\\r\\n\\r' + str.substring(3);\n\t\tpieceTable.insert(2, '\\n\\r\\n\\n');\n\t\tstr = str.substring(0, 2) + '\\n\\r\\n\\n' + str.substring(2);\n\t\tpieceTable.insert(0, '\\n\\n\\r\\r');\n\t\tstr = str.substring(0, 0) + '\\n\\n\\r\\r' + str.substring(0);\n\t\tpieceTable.insert(3, '\\r\\r\\r\\r');\n\t\tstr = str.substring(0, 3) + '\\r\\r\\r\\r' + str.substring(3);\n\t\tpieceTable.insert(3, '\\n\\n\\r\\r');\n\t\tstr = str.substring(0, 3) + '\\n\\n\\r\\r' + str.substring(3);\n\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random chunk bug 1', () => {\n\t\tconst pieceTree = createTextBuffer(['\\n\\r\\r\\n\\n\\n\\r\\n\\r'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tlet str = '\\n\\r\\r\\n\\n\\n\\r\\n\\r';\n\t\tpieceTable.delete(0, 2);\n\t\tstr = str.substring(0, 0) + str.substring(0 + 2);\n\t\tpieceTable.insert(1, '\\r\\r\\n\\n');\n\t\tstr = str.substring(0, 1) + '\\r\\r\\n\\n' + str.substring(1);\n\t\tpieceTable.insert(7, '\\r\\r\\r\\r');\n\t\tstr = str.substring(0, 7) + '\\r\\r\\r\\r' + str.substring(7);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random chunk bug 2', () => {\n\t\tconst pieceTree = createTextBuffer([\n\t\t\t'\\n\\r\\n\\n\\n\\r\\n\\r\\n\\r\\r\\n\\n\\n\\r\\r\\n\\r\\n'\n\t\t], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = '\\n\\r\\n\\n\\n\\r\\n\\r\\n\\r\\r\\n\\n\\n\\r\\r\\n\\r\\n';\n\t\tpieceTable.insert(16, '\\r\\n\\r\\r');\n\t\tstr = str.substring(0, 16) + '\\r\\n\\r\\r' + str.substring(16);\n\t\tpieceTable.insert(13, '\\n\\n\\r\\r');\n\t\tstr = str.substring(0, 13) + '\\n\\n\\r\\r' + str.substring(13);\n\t\tpieceTable.insert(19, '\\n\\n\\r\\n');\n\t\tstr = str.substring(0, 19) + '\\n\\n\\r\\n' + str.substring(19);\n\t\tpieceTable.delete(5, 0);\n\t\tstr = str.substring(0, 5) + str.substring(5 + 0);\n\t\tpieceTable.delete(11, 2);\n\t\tstr = str.substring(0, 11) + str.substring(11 + 2);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random chunk bug 3', () => {\n\t\tconst pieceTree = createTextBuffer(['\\r\\n\\n\\n\\n\\n\\n\\r\\n'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = '\\r\\n\\n\\n\\n\\n\\n\\r\\n';\n\t\tpieceTable.insert(4, '\\n\\n\\r\\n\\r\\r\\n\\n\\r');\n\t\tstr = str.substring(0, 4) + '\\n\\n\\r\\n\\r\\r\\n\\n\\r' + str.substring(4);\n\t\tpieceTable.delete(4, 4);\n\t\tstr = str.substring(0, 4) + str.substring(4 + 4);\n\t\tpieceTable.insert(11, '\\r\\n\\r\\n\\n\\r\\r\\n\\n');\n\t\tstr = str.substring(0, 11) + '\\r\\n\\r\\n\\n\\r\\r\\n\\n' + str.substring(11);\n\t\tpieceTable.delete(1, 2);\n\t\tstr = str.substring(0, 1) + str.substring(1 + 2);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random chunk bug 4', () => {\n\t\tconst pieceTree = createTextBuffer(['\\n\\r\\n\\r'], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = '\\n\\r\\n\\r';\n\t\tpieceTable.insert(4, '\\n\\n\\r\\n');\n\t\tstr = str.substring(0, 4) + '\\n\\n\\r\\n' + str.substring(4);\n\t\tpieceTable.insert(3, '\\r\\n\\n\\n');\n\t\tstr = str.substring(0, 3) + '\\r\\n\\n\\n' + str.substring(3);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\ttestLineStarts(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n});\n\nsuite('random is unsupervised', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('splitting large change buffer', function () {\n\t\tconst pieceTree = createTextBuffer([''], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = '';\n\n\t\tpieceTable.insert(0, 'WUZ\\nXVZY\\n');\n\t\tstr = str.substring(0, 0) + 'WUZ\\nXVZY\\n' + str.substring(0);\n\t\tpieceTable.insert(8, '\\r\\r\\nZXUWVW');\n\t\tstr = str.substring(0, 8) + '\\r\\r\\nZXUWVW' + str.substring(8);\n\t\tpieceTable.delete(10, 7);\n\t\tstr = str.substring(0, 10) + str.substring(10 + 7);\n\t\tpieceTable.delete(10, 1);\n\t\tstr = str.substring(0, 10) + str.substring(10 + 1);\n\t\tpieceTable.insert(4, 'VX\\r\\r\\nWZVZ');\n\t\tstr = str.substring(0, 4) + 'VX\\r\\r\\nWZVZ' + str.substring(4);\n\t\tpieceTable.delete(11, 3);\n\t\tstr = str.substring(0, 11) + str.substring(11 + 3);\n\t\tpieceTable.delete(12, 4);\n\t\tstr = str.substring(0, 12) + str.substring(12 + 4);\n\t\tpieceTable.delete(8, 0);\n\t\tstr = str.substring(0, 8) + str.substring(8 + 0);\n\t\tpieceTable.delete(10, 2);\n\t\tstr = str.substring(0, 10) + str.substring(10 + 2);\n\t\tpieceTable.insert(0, 'VZXXZYZX\\r');\n\t\tstr = str.substring(0, 0) + 'VZXXZYZX\\r' + str.substring(0);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\n\t\ttestLineStarts(str, pieceTable);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random insert delete', function () {\n\t\tthis.timeout(500000);\n\t\tlet str = '';\n\t\tconst pieceTree = createTextBuffer([str], false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\t// let output = '';\n\t\tfor (let i = 0; i < 1000; i++) {\n\t\t\tif (Math.random() < 0.6) {\n\t\t\t\t// insert\n\t\t\t\tconst text = randomStr(100);\n\t\t\t\tconst pos = randomInt(str.length + 1);\n\t\t\t\tpieceTable.insert(pos, text);\n\t\t\t\tstr = str.substring(0, pos) + text + str.substring(pos);\n\t\t\t\t// output += `pieceTable.insert(${pos}, '${text.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r')}');\\n`;\n\t\t\t\t// output += `str = str.substring(0, ${pos}) + '${text.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r')}' + str.substring(${pos});\\n`;\n\t\t\t} else {\n\t\t\t\t// delete\n\t\t\t\tconst pos = randomInt(str.length);\n\t\t\t\tconst length = Math.min(\n\t\t\t\t\tstr.length - pos,\n\t\t\t\t\tMath.floor(Math.random() * 10)\n\t\t\t\t);\n\t\t\t\tpieceTable.delete(pos, length);\n\t\t\t\tstr = str.substring(0, pos) + str.substring(pos + length);\n\t\t\t\t// output += `pieceTable.delete(${pos}, ${length});\\n`;\n\t\t\t\t// output += `str = str.substring(0, ${pos}) + str.substring(${pos} + ${length});\\n`\n\n\t\t\t}\n\t\t}\n\t\t// console.log(output);\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\n\t\ttestLineStarts(str, pieceTable);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random chunks', function () {\n\t\tthis.timeout(500000);\n\t\tconst chunks: string[] = [];\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tchunks.push(randomStr(1000));\n\t\t}\n\n\t\tconst pieceTree = createTextBuffer(chunks, false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = chunks.join('');\n\n\t\tfor (let i = 0; i < 1000; i++) {\n\t\t\tif (Math.random() < 0.6) {\n\t\t\t\t// insert\n\t\t\t\tconst text = randomStr(100);\n\t\t\t\tconst pos = randomInt(str.length + 1);\n\t\t\t\tpieceTable.insert(pos, text);\n\t\t\t\tstr = str.substring(0, pos) + text + str.substring(pos);\n\t\t\t} else {\n\t\t\t\t// delete\n\t\t\t\tconst pos = randomInt(str.length);\n\t\t\t\tconst length = Math.min(\n\t\t\t\t\tstr.length - pos,\n\t\t\t\t\tMath.floor(Math.random() * 10)\n\t\t\t\t);\n\t\t\t\tpieceTable.delete(pos, length);\n\t\t\t\tstr = str.substring(0, pos) + str.substring(pos + length);\n\t\t\t}\n\t\t}\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\ttestLineStarts(str, pieceTable);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('random chunks 2', function () {\n\t\tthis.timeout(500000);\n\t\tconst chunks: string[] = [];\n\t\tchunks.push(randomStr(1000));\n\n\t\tconst pieceTree = createTextBuffer(chunks, false);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = chunks.join('');\n\n\t\tfor (let i = 0; i < 50; i++) {\n\t\t\tif (Math.random() < 0.6) {\n\t\t\t\t// insert\n\t\t\t\tconst text = randomStr(30);\n\t\t\t\tconst pos = randomInt(str.length + 1);\n\t\t\t\tpieceTable.insert(pos, text);\n\t\t\t\tstr = str.substring(0, pos) + text + str.substring(pos);\n\t\t\t} else {\n\t\t\t\t// delete\n\t\t\t\tconst pos = randomInt(str.length);\n\t\t\t\tconst length = Math.min(\n\t\t\t\t\tstr.length - pos,\n\t\t\t\t\tMath.floor(Math.random() * 10)\n\t\t\t\t);\n\t\t\t\tpieceTable.delete(pos, length);\n\t\t\t\tstr = str.substring(0, pos) + str.substring(pos + length);\n\t\t\t}\n\t\t\ttestLinesContent(str, pieceTable);\n\t\t}\n\n\t\tassert.strictEqual(pieceTable.getLinesRawContent(), str);\n\t\ttestLineStarts(str, pieceTable);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n});\n\nsuite('buffer api', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('equal', () => {\n\t\tconst a = createTextBuffer(['abc']);\n\t\tconst b = createTextBuffer(['ab', 'c']);\n\t\tconst c = createTextBuffer(['abd']);\n\t\tconst d = createTextBuffer(['abcd']);\n\t\tds.add(a);\n\t\tds.add(b);\n\t\tds.add(c);\n\t\tds.add(d);\n\n\t\tassert(a.getPieceTree().equal(b.getPieceTree()));\n\t\tassert(!a.getPieceTree().equal(c.getPieceTree()));\n\t\tassert(!a.getPieceTree().equal(d.getPieceTree()));\n\t});\n\n\ttest('equal with more chunks', () => {\n\t\tconst a = createTextBuffer(['ab', 'cd', 'e']);\n\t\tconst b = createTextBuffer(['ab', 'c', 'de']);\n\t\tds.add(a);\n\t\tds.add(b);\n\t\tassert(a.getPieceTree().equal(b.getPieceTree()));\n\t});\n\n\ttest('equal 2, empty buffer', () => {\n\t\tconst a = createTextBuffer(['']);\n\t\tconst b = createTextBuffer(['']);\n\t\tds.add(a);\n\t\tds.add(b);\n\n\t\tassert(a.getPieceTree().equal(b.getPieceTree()));\n\t});\n\n\ttest('equal 3, empty buffer', () => {\n\t\tconst a = createTextBuffer(['a']);\n\t\tconst b = createTextBuffer(['']);\n\t\tds.add(a);\n\t\tds.add(b);\n\n\t\tassert(!a.getPieceTree().equal(b.getPieceTree()));\n\t});\n\n\ttest('getLineCharCode - issue #45735', () => {\n\t\tconst pieceTree = createTextBuffer(['LINE1\\nline2']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 0), 'L'.charCodeAt(0), 'L');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 1), 'I'.charCodeAt(0), 'I');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 2), 'N'.charCodeAt(0), 'N');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 3), 'E'.charCodeAt(0), 'E');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 4), '1'.charCodeAt(0), '1');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 5), '\\n'.charCodeAt(0), '\\\\n');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 0), 'l'.charCodeAt(0), 'l');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 1), 'i'.charCodeAt(0), 'i');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 2), 'n'.charCodeAt(0), 'n');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 3), 'e'.charCodeAt(0), 'e');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 4), '2'.charCodeAt(0), '2');\n\t});\n\n\n\ttest('getLineCharCode - issue #47733', () => {\n\t\tconst pieceTree = createTextBuffer(['', 'LINE1\\n', 'line2']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 0), 'L'.charCodeAt(0), 'L');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 1), 'I'.charCodeAt(0), 'I');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 2), 'N'.charCodeAt(0), 'N');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 3), 'E'.charCodeAt(0), 'E');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 4), '1'.charCodeAt(0), '1');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(1, 5), '\\n'.charCodeAt(0), '\\\\n');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 0), 'l'.charCodeAt(0), 'l');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 1), 'i'.charCodeAt(0), 'i');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 2), 'n'.charCodeAt(0), 'n');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 3), 'e'.charCodeAt(0), 'e');\n\t\tassert.strictEqual(pieceTable.getLineCharCode(2, 4), '2'.charCodeAt(0), '2');\n\t});\n\n\ttest('getNearestChunk', () => {\n\t\tconst pieceTree = createTextBuffer(['012345678']);\n\t\tds.add(pieceTree);\n\t\tconst pt = pieceTree.getPieceTree();\n\n\t\tpt.insert(3, 'ABC');\n\t\tassert.equal(pt.getLineContent(1), '012ABC345678');\n\t\tassert.equal(pt.getNearestChunk(3), 'ABC');\n\t\tassert.equal(pt.getNearestChunk(6), '345678');\n\n\t\tpt.delete(9, 1);\n\t\tassert.equal(pt.getLineContent(1), '012ABC34578');\n\t\tassert.equal(pt.getNearestChunk(6), '345');\n\t\tassert.equal(pt.getNearestChunk(9), '78');\n\t});\n});\n\nsuite('search offset cache', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('render white space exception', () => {\n\t\tconst pieceTree = createTextBuffer(['class Name{\\n\\t\\n\\t\\t\\tget() {\\n\\n\\t\\t\\t}\\n\\t\\t}']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = 'class Name{\\n\\t\\n\\t\\t\\tget() {\\n\\n\\t\\t\\t}\\n\\t\\t}';\n\n\t\tpieceTable.insert(12, 's');\n\t\tstr = str.substring(0, 12) + 's' + str.substring(12);\n\n\t\tpieceTable.insert(13, 'e');\n\t\tstr = str.substring(0, 13) + 'e' + str.substring(13);\n\n\t\tpieceTable.insert(14, 't');\n\t\tstr = str.substring(0, 14) + 't' + str.substring(14);\n\n\t\tpieceTable.insert(15, '()');\n\t\tstr = str.substring(0, 15) + '()' + str.substring(15);\n\n\t\tpieceTable.delete(16, 1);\n\t\tstr = str.substring(0, 16) + str.substring(16 + 1);\n\n\t\tpieceTable.insert(17, '()');\n\t\tstr = str.substring(0, 17) + '()' + str.substring(17);\n\n\t\tpieceTable.delete(18, 1);\n\t\tstr = str.substring(0, 18) + str.substring(18 + 1);\n\n\t\tpieceTable.insert(18, '}');\n\t\tstr = str.substring(0, 18) + '}' + str.substring(18);\n\n\t\tpieceTable.insert(12, '\\n');\n\t\tstr = str.substring(0, 12) + '\\n' + str.substring(12);\n\n\t\tpieceTable.delete(12, 1);\n\t\tstr = str.substring(0, 12) + str.substring(12 + 1);\n\n\t\tpieceTable.delete(18, 1);\n\t\tstr = str.substring(0, 18) + str.substring(18 + 1);\n\n\t\tpieceTable.insert(18, '}');\n\t\tstr = str.substring(0, 18) + '}' + str.substring(18);\n\n\t\tpieceTable.delete(17, 2);\n\t\tstr = str.substring(0, 17) + str.substring(17 + 2);\n\n\t\tpieceTable.delete(16, 1);\n\t\tstr = str.substring(0, 16) + str.substring(16 + 1);\n\n\t\tpieceTable.insert(16, ')');\n\t\tstr = str.substring(0, 16) + ')' + str.substring(16);\n\n\t\tpieceTable.delete(15, 2);\n\t\tstr = str.substring(0, 15) + str.substring(15 + 2);\n\n\t\tconst content = pieceTable.getLinesRawContent();\n\t\tassert(content === str);\n\t});\n\n\ttest('Line breaks replacement is not necessary when EOL is normalized', () => {\n\t\tconst pieceTree = createTextBuffer(['abc']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = 'abc';\n\n\t\tpieceTable.insert(3, 'def\\nabc');\n\t\tstr = str + 'def\\nabc';\n\n\t\ttestLineStarts(str, pieceTable);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('Line breaks replacement is not necessary when EOL is normalized 2', () => {\n\t\tconst pieceTree = createTextBuffer(['abc\\n']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = 'abc\\n';\n\n\t\tpieceTable.insert(4, 'def\\nabc');\n\t\tstr = str + 'def\\nabc';\n\n\t\ttestLineStarts(str, pieceTable);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('Line breaks replacement is not necessary when EOL is normalized 3', () => {\n\t\tconst pieceTree = createTextBuffer(['abc\\n']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = 'abc\\n';\n\n\t\tpieceTable.insert(2, 'def\\nabc');\n\t\tstr = str.substring(0, 2) + 'def\\nabc' + str.substring(2);\n\n\t\ttestLineStarts(str, pieceTable);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n\ttest('Line breaks replacement is not necessary when EOL is normalized 4', () => {\n\t\tconst pieceTree = createTextBuffer(['abc\\n']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tlet str = 'abc\\n';\n\n\t\tpieceTable.insert(3, 'def\\nabc');\n\t\tstr = str.substring(0, 3) + 'def\\nabc' + str.substring(3);\n\n\t\ttestLineStarts(str, pieceTable);\n\t\ttestLinesContent(str, pieceTable);\n\t\tassertTreeInvariants(pieceTable);\n\t});\n\n});\n\nfunction getValueInSnapshot(snapshot: ITextSnapshot) {\n\tlet ret = '';\n\tlet tmp = snapshot.read();\n\n\twhile (tmp !== null) {\n\t\tret += tmp;\n\t\ttmp = snapshot.read();\n\t}\n\n\treturn ret;\n}\nsuite('snapshot', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('bug #45564, piece tree pieces should be immutable', () => {\n\t\tconst model = createTextModel('\\n');\n\t\tmodel.applyEdits([\n\t\t\t{\n\t\t\t\trange: new Range(2, 1, 2, 1),\n\t\t\t\ttext: '!'\n\t\t\t}\n\t\t]);\n\t\tconst snapshot = model.createSnapshot();\n\t\tconst snapshot1 = model.createSnapshot();\n\t\tassert.strictEqual(model.getLinesContent().join('\\n'), getValueInSnapshot(snapshot));\n\n\t\tmodel.applyEdits([\n\t\t\t{\n\t\t\t\trange: new Range(2, 1, 2, 2),\n\t\t\t\ttext: ''\n\t\t\t}\n\t\t]);\n\t\tmodel.applyEdits([\n\t\t\t{\n\t\t\t\trange: new Range(2, 1, 2, 1),\n\t\t\t\ttext: '!'\n\t\t\t}\n\t\t]);\n\n\t\tassert.strictEqual(model.getLinesContent().join('\\n'), getValueInSnapshot(snapshot1));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('immutable snapshot 1', () => {\n\t\tconst model = createTextModel('abc\\ndef');\n\t\tconst snapshot = model.createSnapshot();\n\t\tmodel.applyEdits([\n\t\t\t{\n\t\t\t\trange: new Range(2, 1, 2, 4),\n\t\t\t\ttext: ''\n\t\t\t}\n\t\t]);\n\n\t\tmodel.applyEdits([\n\t\t\t{\n\t\t\t\trange: new Range(1, 1, 2, 1),\n\t\t\t\ttext: 'abc\\ndef'\n\t\t\t}\n\t\t]);\n\n\t\tassert.strictEqual(model.getLinesContent().join('\\n'), getValueInSnapshot(snapshot));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('immutable snapshot 2', () => {\n\t\tconst model = createTextModel('abc\\ndef');\n\t\tconst snapshot = model.createSnapshot();\n\t\tmodel.applyEdits([\n\t\t\t{\n\t\t\t\trange: new Range(2, 1, 2, 1),\n\t\t\t\ttext: '!'\n\t\t\t}\n\t\t]);\n\n\t\tmodel.applyEdits([\n\t\t\t{\n\t\t\t\trange: new Range(2, 1, 2, 2),\n\t\t\t\ttext: ''\n\t\t\t}\n\t\t]);\n\n\t\tassert.strictEqual(model.getLinesContent().join('\\n'), getValueInSnapshot(snapshot));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('immutable snapshot 3', () => {\n\t\tconst model = createTextModel('abc\\ndef');\n\t\tmodel.applyEdits([\n\t\t\t{\n\t\t\t\trange: new Range(2, 4, 2, 4),\n\t\t\t\ttext: '!'\n\t\t\t}\n\t\t]);\n\t\tconst snapshot = model.createSnapshot();\n\t\tmodel.applyEdits([\n\t\t\t{\n\t\t\t\trange: new Range(2, 5, 2, 5),\n\t\t\t\ttext: '!'\n\t\t\t}\n\t\t]);\n\n\t\tassert.notStrictEqual(model.getLinesContent().join('\\n'), getValueInSnapshot(snapshot));\n\n\t\tmodel.dispose();\n\t});\n});\n\nsuite('chunk based search', () => {\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('#45892. For some cases, the buffer is empty but we still try to search', () => {\n\t\tconst pieceTree = createTextBuffer(['']);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\t\tpieceTable.delete(0, 1);\n\t\tconst ret = pieceTree.findMatchesLineByLine(new Range(1, 1, 1, 1), new SearchData(/abc/, new WordCharacterClassifier(',./', []), 'abc'), true, 1000);\n\t\tassert.strictEqual(ret.length, 0);\n\t});\n\n\ttest('#45770. FindInNode should not cross node boundary.', () => {\n\t\tconst pieceTree = createTextBuffer([\n\t\t\t[\n\t\t\t\t'balabalababalabalababalabalaba',\n\t\t\t\t'balabalababalabalababalabalaba',\n\t\t\t\t'',\n\t\t\t\t'* [ ] task1',\n\t\t\t\t'* [x] task2 balabalaba',\n\t\t\t\t'* [ ] task 3'\n\t\t\t].join('\\n')\n\t\t]);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.delete(0, 62);\n\t\tpieceTable.delete(16, 1);\n\n\t\tpieceTable.insert(16, ' ');\n\t\tconst ret = pieceTable.findMatchesLineByLine(new Range(1, 1, 4, 13), new SearchData(/\\[/gi, new WordCharacterClassifier(',./', []), '['), true, 1000);\n\t\tassert.strictEqual(ret.length, 3);\n\n\t\tassert.deepStrictEqual(ret[0].range, new Range(2, 3, 2, 4));\n\t\tassert.deepStrictEqual(ret[1].range, new Range(3, 3, 3, 4));\n\t\tassert.deepStrictEqual(ret[2].range, new Range(4, 3, 4, 4));\n\t});\n\n\ttest('search searching from the middle', () => {\n\t\tconst pieceTree = createTextBuffer([\n\t\t\t[\n\t\t\t\t'def',\n\t\t\t\t'dbcabc'\n\t\t\t].join('\\n')\n\t\t]);\n\t\tds.add(pieceTree);\n\t\tconst pieceTable = pieceTree.getPieceTree();\n\n\t\tpieceTable.delete(4, 1);\n\t\tlet ret = pieceTable.findMatchesLineByLine(new Range(2, 3, 2, 6), new SearchData(/a/gi, null, 'a'), true, 1000);\n\t\tassert.strictEqual(ret.length, 1);\n\t\tassert.deepStrictEqual(ret[0].range, new Range(2, 3, 2, 4));\n\n\t\tpieceTable.delete(4, 1);\n\t\tret = pieceTable.findMatchesLineByLine(new Range(2, 2, 2, 5), new SearchData(/a/gi, null, 'a'), true, 1000);\n\t\tassert.strictEqual(ret.length, 1);\n\t\tassert.deepStrictEqual(ret[0].range, new Range(2, 2, 2, 3));\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
