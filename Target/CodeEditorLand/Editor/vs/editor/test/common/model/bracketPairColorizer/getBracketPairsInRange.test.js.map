{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/model/bracketPairColorizer/getBracketPairsInRange.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore, disposeOnReturn } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { StandardTokenType } from '../../../../common/encodedTokenAttributes.js';\nimport { TokenizationRegistry } from '../../../../common/languages.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { TextModel } from '../../../../common/model/textModel.js';\nimport { BracketPairInfo } from '../../../../common/textModelBracketPairs.js';\nimport { TokenInfo, TokenizedDocument } from './tokenizer.test.js';\nimport { createModelServices, instantiateTextModel } from '../../testTextModel.js';\n\nsuite('Bracket Pair Colorizer - getBracketPairsInRange', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction createTextModelWithColorizedBracketPairs(store: DisposableStore, text: string): TextModel {\n\t\tconst languageId = 'testLanguage';\n\t\tconst instantiationService = createModelServices(store);\n\t\tconst languageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\tstore.add(languageService.registerLanguage({\n\t\t\tid: languageId,\n\t\t}));\n\n\t\tconst encodedMode1 = languageService.languageIdCodec.encodeLanguageId(languageId);\n\t\tconst document = new TokenizedDocument([\n\t\t\tnew TokenInfo(text, encodedMode1, StandardTokenType.Other, true)\n\t\t]);\n\t\tstore.add(TokenizationRegistry.register(languageId, document.getTokenizationSupport()));\n\n\t\tstore.add(languageConfigurationService.register(languageId, {\n\t\t\tbrackets: [\n\t\t\t\t['<', '>']\n\t\t\t],\n\t\t\tcolorizedBracketPairs: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')'],\n\t\t\t]\n\t\t}));\n\t\tconst textModel = store.add(instantiateTextModel(instantiationService, text, languageId));\n\t\treturn textModel;\n\t}\n\n\ttest('Basic 1', () => {\n\t\tdisposeOnReturn(store => {\n\t\t\tconst doc = new AnnotatedDocument(`{ ( [] \u00B9 ) [ \u00B2 { } ] () } []`);\n\t\t\tconst model = createTextModelWithColorizedBracketPairs(store, doc.text);\n\t\t\tmodel.tokenization.getLineTokens(1).getLanguageId(0);\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tmodel.bracketPairs\n\t\t\t\t\t.getBracketPairsInRange(doc.range(1, 2))\n\t\t\t\t\t.map(bracketPairToJSON)\n\t\t\t\t\t.toArray(),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\trange: '[1,1 -> 1,2]',\n\t\t\t\t\t\topenRange: '[1,1 -> 1,2]',\n\t\t\t\t\t\tcloseRange: '[1,23 -> 1,24]',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\trange: '[1,3 -> 1,4]',\n\t\t\t\t\t\topenRange: '[1,3 -> 1,4]',\n\t\t\t\t\t\tcloseRange: '[1,9 -> 1,10]',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\trange: '[1,11 -> 1,12]',\n\t\t\t\t\t\topenRange: '[1,11 -> 1,12]',\n\t\t\t\t\t\tcloseRange: '[1,18 -> 1,19]',\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\t});\n\n\ttest('Basic 2', () => {\n\t\tdisposeOnReturn(store => {\n\t\t\tconst doc = new AnnotatedDocument(`{ ( [] \u00B9 \u00B2) [  { } ] () } []`);\n\t\t\tconst model = createTextModelWithColorizedBracketPairs(store, doc.text);\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tmodel.bracketPairs\n\t\t\t\t\t.getBracketPairsInRange(doc.range(1, 2))\n\t\t\t\t\t.map(bracketPairToJSON)\n\t\t\t\t\t.toArray(),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\trange: '[1,1 -> 1,2]',\n\t\t\t\t\t\topenRange: '[1,1 -> 1,2]',\n\t\t\t\t\t\tcloseRange: '[1,23 -> 1,24]',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\trange: '[1,3 -> 1,4]',\n\t\t\t\t\t\topenRange: '[1,3 -> 1,4]',\n\t\t\t\t\t\tcloseRange: '[1,9 -> 1,10]',\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\t});\n\n\ttest('Basic Empty', () => {\n\t\tdisposeOnReturn(store => {\n\t\t\tconst doc = new AnnotatedDocument(`\u00B9 \u00B2 { ( [] ) [  { } ] () } []`);\n\t\t\tconst model = createTextModelWithColorizedBracketPairs(store, doc.text);\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tmodel.bracketPairs\n\t\t\t\t\t.getBracketPairsInRange(doc.range(1, 2))\n\t\t\t\t\t.map(bracketPairToJSON)\n\t\t\t\t\t.toArray(),\n\t\t\t\t[]\n\t\t\t);\n\t\t});\n\t});\n\n\ttest('Basic All', () => {\n\t\tdisposeOnReturn(store => {\n\t\t\tconst doc = new AnnotatedDocument(`\u00B9 { ( [] ) [  { } ] () } [] \u00B2`);\n\t\t\tconst model = createTextModelWithColorizedBracketPairs(store, doc.text);\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tmodel.bracketPairs\n\t\t\t\t\t.getBracketPairsInRange(doc.range(1, 2))\n\t\t\t\t\t.map(bracketPairToJSON)\n\t\t\t\t\t.toArray(),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\trange: '[1,2 -> 1,3]',\n\t\t\t\t\t\topenRange: '[1,2 -> 1,3]',\n\t\t\t\t\t\tcloseRange: '[1,23 -> 1,24]',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\trange: '[1,4 -> 1,5]',\n\t\t\t\t\t\topenRange: '[1,4 -> 1,5]',\n\t\t\t\t\t\tcloseRange: '[1,9 -> 1,10]',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 2,\n\t\t\t\t\t\trange: '[1,6 -> 1,7]',\n\t\t\t\t\t\topenRange: '[1,6 -> 1,7]',\n\t\t\t\t\t\tcloseRange: '[1,7 -> 1,8]',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\trange: '[1,11 -> 1,12]',\n\t\t\t\t\t\topenRange: '[1,11 -> 1,12]',\n\t\t\t\t\t\tcloseRange: '[1,18 -> 1,19]',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 2,\n\t\t\t\t\t\trange: '[1,14 -> 1,15]',\n\t\t\t\t\t\topenRange: '[1,14 -> 1,15]',\n\t\t\t\t\t\tcloseRange: '[1,16 -> 1,17]',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\trange: '[1,20 -> 1,21]',\n\t\t\t\t\t\topenRange: '[1,20 -> 1,21]',\n\t\t\t\t\t\tcloseRange: '[1,21 -> 1,22]',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\trange: '[1,25 -> 1,26]',\n\t\t\t\t\t\topenRange: '[1,25 -> 1,26]',\n\t\t\t\t\t\tcloseRange: '[1,26 -> 1,27]',\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\t});\n\n\ttest('getBracketsInRange', () => {\n\t\tdisposeOnReturn(store => {\n\t\t\tconst doc = new AnnotatedDocument(`\u00B9 { [ ( [ [ (  ) ] ] ) ] } { } \u00B2`);\n\t\t\tconst model = createTextModelWithColorizedBracketPairs(store, doc.text);\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tmodel.bracketPairs\n\t\t\t\t\t.getBracketsInRange(doc.range(1, 2))\n\t\t\t\t\t.map(b => ({ level: b.nestingLevel, levelEqualBracketType: b.nestingLevelOfEqualBracketType, range: b.range.toString() }))\n\t\t\t\t\t.toArray(),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,2 -> 1,3]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,4 -> 1,5]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 2,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,6 -> 1,7]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 3,\n\t\t\t\t\t\tlevelEqualBracketType: 1,\n\t\t\t\t\t\trange: \"[1,8 -> 1,9]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 4,\n\t\t\t\t\t\tlevelEqualBracketType: 2,\n\t\t\t\t\t\trange: \"[1,10 -> 1,11]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 5,\n\t\t\t\t\t\tlevelEqualBracketType: 1,\n\t\t\t\t\t\trange: \"[1,12 -> 1,13]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 5,\n\t\t\t\t\t\tlevelEqualBracketType: 1,\n\t\t\t\t\t\trange: \"[1,15 -> 1,16]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 4,\n\t\t\t\t\t\tlevelEqualBracketType: 2,\n\t\t\t\t\t\trange: \"[1,17 -> 1,18]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 3,\n\t\t\t\t\t\tlevelEqualBracketType: 1,\n\t\t\t\t\t\trange: \"[1,19 -> 1,20]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 2,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,21 -> 1,22]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,23 -> 1,24]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,25 -> 1,26]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,27 -> 1,28]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,29 -> 1,30]\"\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\t});\n\n\ttest('Test Error Brackets', () => {\n\t\tdisposeOnReturn(store => {\n\t\t\tconst doc = new AnnotatedDocument(`\u00B9 { () ] \u00B2 `);\n\t\t\tconst model = createTextModelWithColorizedBracketPairs(store, doc.text);\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tmodel.bracketPairs\n\t\t\t\t\t.getBracketsInRange(doc.range(1, 2))\n\t\t\t\t\t.map(b => ({ level: b.nestingLevel, range: b.range.toString(), isInvalid: b.isInvalid }))\n\t\t\t\t\t.toArray(),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tisInvalid: true,\n\t\t\t\t\t\trange: \"[1,2 -> 1,3]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\tisInvalid: false,\n\t\t\t\t\t\trange: \"[1,4 -> 1,5]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\tisInvalid: false,\n\t\t\t\t\t\trange: \"[1,5 -> 1,6]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tisInvalid: true,\n\t\t\t\t\t\trange: \"[1,7 -> 1,8]\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\t});\n\n\n\ttest('colorizedBracketsVSBrackets', () => {\n\t\tdisposeOnReturn(store => {\n\t\t\tconst doc = new AnnotatedDocument(`\u00B9 {} [<()>] <{>} \u00B2`);\n\t\t\tconst model = createTextModelWithColorizedBracketPairs(store, doc.text);\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tmodel.bracketPairs\n\t\t\t\t\t.getBracketsInRange(doc.range(1, 2), true)\n\t\t\t\t\t.map(b => ({ level: b.nestingLevel, levelEqualBracketType: b.nestingLevelOfEqualBracketType, range: b.range.toString() }))\n\t\t\t\t\t.toArray(),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,2 -> 1,3]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,3 -> 1,4]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,5 -> 1,6]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,7 -> 1,8]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,8 -> 1,9]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,10 -> 1,11]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,13 -> 1,14]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: -1,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,15 -> 1,16]\",\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t);\n\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tmodel.bracketPairs\n\t\t\t\t\t.getBracketsInRange(doc.range(1, 2), false)\n\t\t\t\t\t.map(b => ({ level: b.nestingLevel, levelEqualBracketType: b.nestingLevelOfEqualBracketType, range: b.range.toString() }))\n\t\t\t\t\t.toArray(),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,2 -> 1,3]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,3 -> 1,4]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,5 -> 1,6]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,6 -> 1,7]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 2,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,7 -> 1,8]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 2,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,8 -> 1,9]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,9 -> 1,10]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,10 -> 1,11]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,12 -> 1,13]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 1,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,13 -> 1,14]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: 0,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,14 -> 1,15]\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: -1,\n\t\t\t\t\t\tlevelEqualBracketType: 0,\n\t\t\t\t\t\trange: \"[1,15 -> 1,16]\",\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\t});\n});\n\nfunction bracketPairToJSON(pair: BracketPairInfo): unknown {\n\treturn {\n\t\tlevel: pair.nestingLevel,\n\t\trange: pair.openingBracketRange.toString(),\n\t\topenRange: pair.openingBracketRange.toString(),\n\t\tcloseRange: pair.closingBracketRange?.toString() || null,\n\t};\n}\n\nclass PositionOffsetTransformer {\n\tprivate readonly lineStartOffsetByLineIdx: number[];\n\n\tconstructor(text: string) {\n\t\tthis.lineStartOffsetByLineIdx = [];\n\t\tthis.lineStartOffsetByLineIdx.push(0);\n\t\tfor (let i = 0; i < text.length; i++) {\n\t\t\tif (text.charAt(i) === '\\n') {\n\t\t\t\tthis.lineStartOffsetByLineIdx.push(i + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetOffset(position: Position): number {\n\t\treturn this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n\t}\n\n\tgetPosition(offset: number): Position {\n\t\tconst lineNumber = this.lineStartOffsetByLineIdx.findIndex(lineStartOffset => lineStartOffset <= offset);\n\t\treturn new Position(lineNumber + 1, offset - this.lineStartOffsetByLineIdx[lineNumber] + 1);\n\t}\n}\n\nclass AnnotatedDocument {\n\tpublic readonly text: string;\n\tprivate readonly positions: ReadonlyMap<number, Position>;\n\n\tconstructor(src: string) {\n\t\tconst numbers = ['\u2070', '\u00B9', '\u00B2', '\u00B3', '\u2074', '\u2075', '\u2076', '\u2077', '\u2078', '\u2079'];\n\n\t\tlet text = '';\n\t\tconst offsetPositions = new Map<number, number>();\n\n\t\tlet offset = 0;\n\t\tfor (let i = 0; i < src.length; i++) {\n\t\t\tconst idx = numbers.indexOf(src[i]);\n\t\t\tif (idx >= 0) {\n\t\t\t\toffsetPositions.set(idx, offset);\n\t\t\t} else {\n\t\t\t\ttext += src[i];\n\t\t\t\toffset++;\n\t\t\t}\n\t\t}\n\n\t\tthis.text = text;\n\n\t\tconst mapper = new PositionOffsetTransformer(this.text);\n\t\tconst positions = new Map<number, Position>();\n\t\tfor (const [idx, offset] of offsetPositions.entries()) {\n\t\t\tpositions.set(idx, mapper.getPosition(offset));\n\t\t}\n\t\tthis.positions = positions;\n\t}\n\n\trange(start: number, end: number): Range {\n\t\treturn Range.fromPositions(this.positions.get(start)!, this.positions.get(end)!);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["offset"]
}
