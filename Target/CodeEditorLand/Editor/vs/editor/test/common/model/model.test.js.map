{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/model/model.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Disposable, DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MetadataConsts } from '../../../common/encodedTokenAttributes.js';\nimport { EncodedTokenizationResult, IState, TokenizationRegistry } from '../../../common/languages.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { NullState } from '../../../common/languages/nullTokenize.js';\nimport { TextModel } from '../../../common/model/textModel.js';\nimport { InternalModelContentChangeEvent, ModelRawContentChangedEvent, ModelRawFlush, ModelRawLineChanged, ModelRawLinesDeleted, ModelRawLinesInserted } from '../../../common/textModelEvents.js';\nimport { createModelServices, createTextModel, instantiateTextModel } from '../testTextModel.js';\n\n// --------- utils\n\nconst LINE1 = 'My First Line';\nconst LINE2 = '\\t\\tMy Second Line';\nconst LINE3 = '    Third Line';\nconst LINE4 = '';\nconst LINE5 = '1';\n\nsuite('Editor Model - Model', () => {\n\n\tlet thisModel: TextModel;\n\n\tsetup(() => {\n\t\tconst text =\n\t\t\tLINE1 + '\\r\\n' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\n' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\t\tthisModel = createTextModel(text);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\t// --------- insert text\n\n\ttest('model getValue', () => {\n\t\tassert.strictEqual(thisModel.getValue(), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n\\n1');\n\t});\n\n\ttest('model insert empty text', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), '')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My First Line');\n\t});\n\n\ttest('model insert text without newline 1', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'foo ')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'foo My First Line');\n\t});\n\n\ttest('model insert text without newline 2', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' foo')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My foo First Line');\n\t});\n\n\ttest('model insert text with one newline', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' new line\\nNo longer')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 6);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My new line');\n\t\tassert.strictEqual(thisModel.getLineContent(2), 'No longer First Line');\n\t});\n\n\ttest('model insert text with two newlines', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' new line\\nOne more line in the middle\\nNo longer')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 7);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My new line');\n\t\tassert.strictEqual(thisModel.getLineContent(2), 'One more line in the middle');\n\t\tassert.strictEqual(thisModel.getLineContent(3), 'No longer First Line');\n\t});\n\n\ttest('model insert text with many newlines', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), '\\n\\n\\n\\n')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 9);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My');\n\t\tassert.strictEqual(thisModel.getLineContent(2), '');\n\t\tassert.strictEqual(thisModel.getLineContent(3), '');\n\t\tassert.strictEqual(thisModel.getLineContent(4), '');\n\t\tassert.strictEqual(thisModel.getLineContent(5), ' First Line');\n\t});\n\n\n\t// --------- insert text eventing\n\n\ttest('model insert empty text does not trigger eventing', () => {\n\t\tconst disposable = thisModel.onDidChangeContentOrInjectedText((e) => {\n\t\t\tassert.ok(false, 'was not expecting event');\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), '')]);\n\t\tdisposable.dispose();\n\t});\n\n\ttest('model insert text without newline eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tconst disposable = thisModel.onDidChangeContentOrInjectedText((_e) => {\n\t\t\tif (e !== null || !(_e instanceof InternalModelContentChangeEvent)) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e.rawContentChangedEvent;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'foo ')]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'foo My First Line', null)\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t\tdisposable.dispose();\n\t});\n\n\ttest('model insert text with one newline eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tconst disposable = thisModel.onDidChangeContentOrInjectedText((_e) => {\n\t\t\tif (e !== null || !(_e instanceof InternalModelContentChangeEvent)) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e.rawContentChangedEvent;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' new line\\nNo longer')]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'My new line', null),\n\t\t\t\tnew ModelRawLinesInserted(2, 2, ['No longer First Line'], [null]),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t\tdisposable.dispose();\n\t});\n\n\n\t// --------- delete text\n\n\ttest('model delete empty text', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 1))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My First Line');\n\t});\n\n\ttest('model delete text from one line', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 2))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'y First Line');\n\t});\n\n\ttest('model delete text from one line 2', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'a')]);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'aMy First Line');\n\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 2, 1, 4))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'a First Line');\n\t});\n\n\ttest('model delete all text from a line', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 14))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), '');\n\t});\n\n\ttest('model delete text from two lines', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 2, 6))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 4);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My Second Line');\n\t});\n\n\ttest('model delete text from many lines', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 3, 5))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 3);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My Third Line');\n\t});\n\n\ttest('model delete everything', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 5, 2))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 1);\n\t\tassert.strictEqual(thisModel.getLineContent(1), '');\n\t});\n\n\t// --------- delete text eventing\n\n\ttest('model delete empty text does not trigger eventing', () => {\n\t\tconst disposable = thisModel.onDidChangeContentOrInjectedText((e) => {\n\t\t\tassert.ok(false, 'was not expecting event');\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 1))]);\n\t\tdisposable.dispose();\n\t});\n\n\ttest('model delete text from one line eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tconst disposable = thisModel.onDidChangeContentOrInjectedText((_e) => {\n\t\t\tif (e !== null || !(_e instanceof InternalModelContentChangeEvent)) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e.rawContentChangedEvent;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 2))]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'y First Line', null),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t\tdisposable.dispose();\n\t});\n\n\ttest('model delete all text from a line eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tconst disposable = thisModel.onDidChangeContentOrInjectedText((_e) => {\n\t\t\tif (e !== null || !(_e instanceof InternalModelContentChangeEvent)) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e.rawContentChangedEvent;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 14))]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, '', null),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t\tdisposable.dispose();\n\t});\n\n\ttest('model delete text from two lines eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tconst disposable = thisModel.onDidChangeContentOrInjectedText((_e) => {\n\t\t\tif (e !== null || !(_e instanceof InternalModelContentChangeEvent)) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e.rawContentChangedEvent;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 2, 6))]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'My Second Line', null),\n\t\t\t\tnew ModelRawLinesDeleted(2, 2),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t\tdisposable.dispose();\n\t});\n\n\ttest('model delete text from many lines eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tconst disposable = thisModel.onDidChangeContentOrInjectedText((_e) => {\n\t\t\tif (e !== null || !(_e instanceof InternalModelContentChangeEvent)) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e.rawContentChangedEvent;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 3, 5))]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'My Third Line', null),\n\t\t\t\tnew ModelRawLinesDeleted(2, 3),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t\tdisposable.dispose();\n\t});\n\n\t// --------- getValueInRange\n\n\ttest('getValueInRange', () => {\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 1, 1)), '');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 1, 2)), 'M');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 2, 1, 3)), 'y');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 1, 14)), 'My First Line');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 2, 1)), 'My First Line\\n');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 2, 2)), 'My First Line\\n\\t');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 2, 3)), 'My First Line\\n\\t\\t');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 2, 17)), 'My First Line\\n\\t\\tMy Second Line');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 3, 1)), 'My First Line\\n\\t\\tMy Second Line\\n');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 4, 1)), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n');\n\t});\n\n\t// --------- getValueLengthInRange\n\n\ttest('getValueLengthInRange', () => {\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 1, 1)), ''.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 1, 2)), 'M'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 2, 1, 3)), 'y'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 1, 14)), 'My First Line'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 2, 1)), 'My First Line\\n'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 2, 2)), 'My First Line\\n\\t'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 2, 3)), 'My First Line\\n\\t\\t'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 2, 17)), 'My First Line\\n\\t\\tMy Second Line'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 3, 1)), 'My First Line\\n\\t\\tMy Second Line\\n'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 4, 1)), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n'.length);\n\t});\n\n\t// --------- setValue\n\ttest('setValue eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tconst disposable = thisModel.onDidChangeContentOrInjectedText((_e) => {\n\t\t\tif (e !== null || !(_e instanceof InternalModelContentChangeEvent)) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e.rawContentChangedEvent;\n\t\t});\n\t\tthisModel.setValue('new value');\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawFlush()\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t\tdisposable.dispose();\n\t});\n\n\ttest('issue #46342: Maintain edit operation order in applyEdits', () => {\n\t\tconst res = thisModel.applyEdits([\n\t\t\t{ range: new Range(2, 1, 2, 1), text: 'a' },\n\t\t\t{ range: new Range(1, 1, 1, 1), text: 'b' },\n\t\t], true);\n\n\t\tassert.deepStrictEqual(res[0].range, new Range(2, 1, 2, 2));\n\t\tassert.deepStrictEqual(res[1].range, new Range(1, 1, 1, 2));\n\t});\n});\n\n\n// --------- Special Unicode LINE SEPARATOR character\nsuite('Editor Model - Model Line Separators', () => {\n\n\tlet thisModel: TextModel;\n\n\tsetup(() => {\n\t\tconst text =\n\t\t\tLINE1 + '\\u2028' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\u2028' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\t\tthisModel = createTextModel(text);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('model getValue', () => {\n\t\tassert.strictEqual(thisModel.getValue(), 'My First Line\\u2028\\t\\tMy Second Line\\n    Third Line\\u2028\\n1');\n\t});\n\n\ttest('model lines', () => {\n\t\tassert.strictEqual(thisModel.getLineCount(), 3);\n\t});\n\n\ttest('Bug 13333:Model should line break on lonely CR too', () => {\n\t\tconst model = createTextModel('Hello\\rWorld!\\r\\nAnother line');\n\t\tassert.strictEqual(model.getLineCount(), 3);\n\t\tassert.strictEqual(model.getValue(), 'Hello\\r\\nWorld!\\r\\nAnother line');\n\t\tmodel.dispose();\n\t});\n});\n\n\n// --------- Words\n\nsuite('Editor Model - Words', () => {\n\n\tconst OUTER_LANGUAGE_ID = 'outerMode';\n\tconst INNER_LANGUAGE_ID = 'innerMode';\n\n\tclass OuterMode extends Disposable {\n\n\t\tpublic readonly languageId = OUTER_LANGUAGE_ID;\n\n\t\tconstructor(\n\t\t\t@ILanguageService languageService: ILanguageService,\n\t\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService\n\t\t) {\n\t\t\tsuper();\n\t\t\tthis._register(languageService.registerLanguage({ id: this.languageId }));\n\t\t\tthis._register(languageConfigurationService.register(this.languageId, {}));\n\n\t\t\tconst languageIdCodec = languageService.languageIdCodec;\n\t\t\tthis._register(TokenizationRegistry.register(this.languageId, {\n\t\t\t\tgetInitialState: (): IState => NullState,\n\t\t\t\ttokenize: undefined!,\n\t\t\t\ttokenizeEncoded: (line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult => {\n\t\t\t\t\tconst tokensArr: number[] = [];\n\t\t\t\t\tlet prevLanguageId: string | undefined = undefined;\n\t\t\t\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\t\t\t\tconst languageId = (line.charAt(i) === 'x' ? INNER_LANGUAGE_ID : OUTER_LANGUAGE_ID);\n\t\t\t\t\t\tconst encodedLanguageId = languageIdCodec.encodeLanguageId(languageId);\n\t\t\t\t\t\tif (prevLanguageId !== languageId) {\n\t\t\t\t\t\t\ttokensArr.push(i);\n\t\t\t\t\t\t\ttokensArr.push((encodedLanguageId << MetadataConsts.LANGUAGEID_OFFSET));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevLanguageId = languageId;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tokens = new Uint32Array(tokensArr.length);\n\t\t\t\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\ttokens[i] = tokensArr[i];\n\t\t\t\t\t}\n\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tclass InnerMode extends Disposable {\n\n\t\tpublic readonly languageId = INNER_LANGUAGE_ID;\n\n\t\tconstructor(\n\t\t\t@ILanguageService languageService: ILanguageService,\n\t\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService\n\t\t) {\n\t\t\tsuper();\n\t\t\tthis._register(languageService.registerLanguage({ id: this.languageId }));\n\t\t\tthis._register(languageConfigurationService.register(this.languageId, {}));\n\t\t}\n\t}\n\n\tlet disposables: Disposable[] = [];\n\n\tsetup(() => {\n\t\tdisposables = [];\n\t});\n\n\tteardown(() => {\n\t\tdispose(disposables);\n\t\tdisposables = [];\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Get word at position', () => {\n\t\tconst text = ['This text has some  words. '];\n\t\tconst thisModel = createTextModel(text.join('\\n'));\n\t\tdisposables.push(thisModel);\n\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 1)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 2)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 4)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 5)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 6)), { word: 'text', startColumn: 6, endColumn: 10 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 19)), { word: 'some', startColumn: 15, endColumn: 19 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 20)), null);\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 21)), { word: 'words', startColumn: 21, endColumn: 26 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 26)), { word: 'words', startColumn: 21, endColumn: 26 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 27)), null);\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 28)), null);\n\t});\n\n\ttest('getWordAtPosition at embedded language boundaries', () => {\n\t\tconst disposables = new DisposableStore();\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tconst outerMode = disposables.add(instantiationService.createInstance(OuterMode));\n\t\tdisposables.add(instantiationService.createInstance(InnerMode));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'ab<xx>ab<x>', outerMode.languageId));\n\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 1)), { word: 'ab', startColumn: 1, endColumn: 3 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 2)), { word: 'ab', startColumn: 1, endColumn: 3 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 3)), { word: 'ab', startColumn: 1, endColumn: 3 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 4)), { word: 'xx', startColumn: 4, endColumn: 6 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 5)), { word: 'xx', startColumn: 4, endColumn: 6 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 6)), { word: 'xx', startColumn: 4, endColumn: 6 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 7)), { word: 'ab', startColumn: 7, endColumn: 9 });\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('issue #61296: VS code freezes when editing CSS file with emoji', () => {\n\t\tconst MODE_ID = 'testMode';\n\t\tconst disposables = new DisposableStore();\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tconst languageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\n\t\tdisposables.add(languageService.registerLanguage({ id: MODE_ID }));\n\t\tdisposables.add(languageConfigurationService.register(MODE_ID, {\n\t\t\twordPattern: /(#?-?\\d*\\.\\d\\w*%?)|(::?[\\w-]*(?=[^,{;]*[,{]))|(([@#.!])?[\\w-?]+%?|[@#!.])/g\n\t\t}));\n\n\t\tconst thisModel = disposables.add(instantiateTextModel(instantiationService, '.\uD83D\uDC37-a-b', MODE_ID));\n\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 1)), { word: '.', startColumn: 1, endColumn: 2 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 2)), { word: '.', startColumn: 1, endColumn: 2 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 3)), null);\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 4)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 5)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 6)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 7)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 8)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\n\t\tdisposables.dispose();\n\t});\n});\n"],
  "mappings": "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",
  "names": ["disposables"]
}
