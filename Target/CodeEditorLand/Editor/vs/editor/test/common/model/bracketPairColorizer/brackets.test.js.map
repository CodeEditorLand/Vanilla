{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/test/common/model/bracketPairColorizer/brackets.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { LanguageAgnosticBracketTokens } from '../../../../common/model/bracketPairsTextModelPart/bracketPairsTree/brackets.js';\nimport { SmallImmutableSet, DenseKeyProvider } from '../../../../common/model/bracketPairsTextModelPart/bracketPairsTree/smallImmutableSet.js';\nimport { Token, TokenKind } from '../../../../common/model/bracketPairsTextModelPart/bracketPairsTree/tokenizer.js';\nimport { TestLanguageConfigurationService } from '../../modes/testLanguageConfigurationService.js';\n\nsuite('Bracket Pair Colorizer - Brackets', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Basic', () => {\n\t\tconst languageId = 'testMode1';\n\t\tconst denseKeyProvider = new DenseKeyProvider<string>();\n\t\tconst getImmutableSet = (elements: string[]) => {\n\t\t\tlet newSet = SmallImmutableSet.getEmpty();\n\t\t\telements.forEach(x => newSet = newSet.add(`${languageId}:::${x}`, denseKeyProvider));\n\t\t\treturn newSet;\n\t\t};\n\t\tconst getKey = (value: string) => {\n\t\t\treturn denseKeyProvider.getKey(`${languageId}:::${value}`);\n\t\t};\n\n\t\tconst disposableStore = new DisposableStore();\n\t\tconst languageConfigService = disposableStore.add(new TestLanguageConfigurationService());\n\t\tdisposableStore.add(languageConfigService.register(languageId, {\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'], ['[', ']'], ['(', ')'],\n\t\t\t\t['begin', 'end'], ['case', 'endcase'], ['casez', 'endcase'],\t\t\t\t\t// Verilog\n\t\t\t\t['\\\\left(', '\\\\right)'], ['\\\\left(', '\\\\right.'], ['\\\\left.', '\\\\right)'],\t\t// LaTeX Parentheses\n\t\t\t\t['\\\\left[', '\\\\right]'], ['\\\\left[', '\\\\right.'], ['\\\\left.', '\\\\right]']\t\t// LaTeX Brackets\n\t\t\t]\n\t\t}));\n\n\t\tconst brackets = new LanguageAgnosticBracketTokens(denseKeyProvider, l => languageConfigService.getLanguageConfiguration(l));\n\t\tconst bracketsExpected = [\n\t\t\t{ text: '{', length: 1, kind: 'OpeningBracket', bracketId: getKey('{'), bracketIds: getImmutableSet(['{']) },\n\t\t\t{ text: '[', length: 1, kind: 'OpeningBracket', bracketId: getKey('['), bracketIds: getImmutableSet(['[']) },\n\t\t\t{ text: '(', length: 1, kind: 'OpeningBracket', bracketId: getKey('('), bracketIds: getImmutableSet(['(']) },\n\t\t\t{ text: 'begin', length: 5, kind: 'OpeningBracket', bracketId: getKey('begin'), bracketIds: getImmutableSet(['begin']) },\n\t\t\t{ text: 'case', length: 4, kind: 'OpeningBracket', bracketId: getKey('case'), bracketIds: getImmutableSet(['case']) },\n\t\t\t{ text: 'casez', length: 5, kind: 'OpeningBracket', bracketId: getKey('casez'), bracketIds: getImmutableSet(['casez']) },\n\t\t\t{ text: '\\\\left(', length: 6, kind: 'OpeningBracket', bracketId: getKey('\\\\left('), bracketIds: getImmutableSet(['\\\\left(']) },\n\t\t\t{ text: '\\\\left.', length: 6, kind: 'OpeningBracket', bracketId: getKey('\\\\left.'), bracketIds: getImmutableSet(['\\\\left.']) },\n\t\t\t{ text: '\\\\left[', length: 6, kind: 'OpeningBracket', bracketId: getKey('\\\\left['), bracketIds: getImmutableSet(['\\\\left[']) },\n\n\t\t\t{ text: '}', length: 1, kind: 'ClosingBracket', bracketId: getKey('{'), bracketIds: getImmutableSet(['{']) },\n\t\t\t{ text: ']', length: 1, kind: 'ClosingBracket', bracketId: getKey('['), bracketIds: getImmutableSet(['[']) },\n\t\t\t{ text: ')', length: 1, kind: 'ClosingBracket', bracketId: getKey('('), bracketIds: getImmutableSet(['(']) },\n\t\t\t{ text: 'end', length: 3, kind: 'ClosingBracket', bracketId: getKey('begin'), bracketIds: getImmutableSet(['begin']) },\n\t\t\t{ text: 'endcase', length: 7, kind: 'ClosingBracket', bracketId: getKey('case'), bracketIds: getImmutableSet(['case', 'casez']) },\n\t\t\t{ text: '\\\\right)', length: 7, kind: 'ClosingBracket', bracketId: getKey('\\\\left('), bracketIds: getImmutableSet(['\\\\left(', '\\\\left.']) },\n\t\t\t{ text: '\\\\right.', length: 7, kind: 'ClosingBracket', bracketId: getKey('\\\\left('), bracketIds: getImmutableSet(['\\\\left(', '\\\\left[']) },\n\t\t\t{ text: '\\\\right]', length: 7, kind: 'ClosingBracket', bracketId: getKey('\\\\left['), bracketIds: getImmutableSet(['\\\\left[', '\\\\left.']) }\n\t\t];\n\t\tconst bracketsActual = bracketsExpected.map(x => tokenToObject(brackets.getToken(x.text, languageId), x.text));\n\n\t\tassert.deepStrictEqual(bracketsActual, bracketsExpected);\n\n\t\tdisposableStore.dispose();\n\t});\n});\n\nfunction tokenToObject(token: Token | undefined, text: string): any {\n\tif (token === undefined) {\n\t\treturn undefined;\n\t}\n\treturn {\n\t\ttext: text,\n\t\tlength: token.length,\n\t\tbracketId: token.bracketId,\n\t\tbracketIds: token.bracketIds,\n\t\tkind: {\n\t\t\t[TokenKind.ClosingBracket]: 'ClosingBracket',\n\t\t\t[TokenKind.OpeningBracket]: 'OpeningBracket',\n\t\t\t[TokenKind.Text]: 'Text',\n\t\t}[token.kind],\n\t};\n}\n"],
  "mappings": "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",
  "names": []
}
