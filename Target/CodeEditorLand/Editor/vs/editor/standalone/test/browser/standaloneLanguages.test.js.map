{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/test/browser/standaloneLanguages.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { LanguageId, MetadataConsts } from '../../../common/encodedTokenAttributes.js';\nimport { IState, Token } from '../../../common/languages.js';\nimport { TokenTheme } from '../../../common/languages/supports/tokenization.js';\nimport { LanguageService } from '../../../common/services/languageService.js';\nimport { ILineTokens, IToken, TokenizationSupportAdapter, TokensProvider } from '../../browser/standaloneLanguages.js';\nimport { IStandaloneTheme, IStandaloneThemeData, IStandaloneThemeService } from '../../common/standaloneTheme.js';\nimport { UnthemedProductIconTheme } from '../../../../platform/theme/browser/iconsStyleSheet.js';\nimport { ColorIdentifier } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\nimport { IColorTheme, IFileIconTheme, IProductIconTheme, ITokenStyle } from '../../../../platform/theme/common/themeService.js';\n\nsuite('TokenizationSupport2Adapter', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst languageId = 'tttt';\n\t// const tokenMetadata = (LanguageId.PlainText << MetadataConsts.LANGUAGEID_OFFSET);\n\n\tclass MockTokenTheme extends TokenTheme {\n\t\tprivate counter = 0;\n\t\tconstructor() {\n\t\t\tsuper(null!, null!);\n\t\t}\n\t\tpublic override match(languageId: LanguageId, token: string): number {\n\t\t\treturn (\n\t\t\t\t((this.counter++) << MetadataConsts.FOREGROUND_OFFSET)\n\t\t\t\t| (languageId << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t\t) >>> 0;\n\t\t}\n\t}\n\n\tclass MockThemeService implements IStandaloneThemeService {\n\t\tdeclare readonly _serviceBrand: undefined;\n\t\tpublic setTheme(themeName: string): string {\n\t\t\tthrow new Error('Not implemented');\n\t\t}\n\t\tpublic setAutoDetectHighContrast(autoDetectHighContrast: boolean): void {\n\t\t\tthrow new Error('Not implemented');\n\t\t}\n\t\tpublic defineTheme(themeName: string, themeData: IStandaloneThemeData): void {\n\t\t\tthrow new Error('Not implemented');\n\t\t}\n\t\tpublic getColorTheme(): IStandaloneTheme {\n\t\t\treturn {\n\t\t\t\tlabel: 'mock',\n\n\t\t\t\ttokenTheme: new MockTokenTheme(),\n\n\t\t\t\tthemeName: ColorScheme.LIGHT,\n\n\t\t\t\ttype: ColorScheme.LIGHT,\n\n\t\t\t\tgetColor: (color: ColorIdentifier, useDefault?: boolean): Color => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t},\n\n\t\t\t\tdefines: (color: ColorIdentifier): boolean => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t},\n\n\t\t\t\tgetTokenStyleMetadata: (type: string, modifiers: string[], modelLanguage: string): ITokenStyle | undefined => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\n\t\t\t\tsemanticHighlighting: false,\n\n\t\t\t\ttokenColorMap: []\n\t\t\t};\n\t\t}\n\t\tsetColorMapOverride(colorMapOverride: Color[] | null): void {\n\t\t}\n\t\tpublic getFileIconTheme(): IFileIconTheme {\n\t\t\treturn {\n\t\t\t\thasFileIcons: false,\n\t\t\t\thasFolderIcons: false,\n\t\t\t\thidesExplorerArrows: false\n\t\t\t};\n\t\t}\n\n\t\tprivate _builtInProductIconTheme = new UnthemedProductIconTheme();\n\n\t\tpublic getProductIconTheme(): IProductIconTheme {\n\t\t\treturn this._builtInProductIconTheme;\n\t\t}\n\t\tpublic readonly onDidColorThemeChange = new Emitter<IColorTheme>().event;\n\t\tpublic readonly onDidFileIconThemeChange = new Emitter<IFileIconTheme>().event;\n\t\tpublic readonly onDidProductIconThemeChange = new Emitter<IProductIconTheme>().event;\n\t}\n\n\tclass MockState implements IState {\n\t\tpublic static readonly INSTANCE = new MockState();\n\t\tprivate constructor() { }\n\t\tpublic clone(): IState {\n\t\t\treturn this;\n\t\t}\n\t\tpublic equals(other: IState): boolean {\n\t\t\treturn this === other;\n\t\t}\n\t}\n\n\tfunction testBadTokensProvider(providerTokens: IToken[], expectedClassicTokens: Token[], expectedModernTokens: number[]): void {\n\n\t\tclass BadTokensProvider implements TokensProvider {\n\t\t\tpublic getInitialState(): IState {\n\t\t\t\treturn MockState.INSTANCE;\n\t\t\t}\n\t\t\tpublic tokenize(line: string, state: IState): ILineTokens {\n\t\t\t\treturn {\n\t\t\t\t\ttokens: providerTokens,\n\t\t\t\t\tendState: MockState.INSTANCE\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst languageService = disposables.add(new LanguageService());\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tconst adapter = new TokenizationSupportAdapter(\n\t\t\tlanguageId,\n\t\t\tnew BadTokensProvider(),\n\t\t\tlanguageService,\n\t\t\tnew MockThemeService()\n\t\t);\n\n\t\tconst actualClassicTokens = adapter.tokenize('whatever', true, MockState.INSTANCE);\n\t\tassert.deepStrictEqual(actualClassicTokens.tokens, expectedClassicTokens);\n\n\t\tconst actualModernTokens = adapter.tokenizeEncoded('whatever', true, MockState.INSTANCE);\n\t\tconst modernTokens: number[] = [];\n\t\tfor (let i = 0; i < actualModernTokens.tokens.length; i++) {\n\t\t\tmodernTokens[i] = actualModernTokens.tokens[i];\n\t\t}\n\n\t\t// Add the encoded language id to the expected tokens\n\t\tconst encodedLanguageId = languageService.languageIdCodec.encodeLanguageId(languageId);\n\t\tconst tokenLanguageMetadata = (encodedLanguageId << MetadataConsts.LANGUAGEID_OFFSET);\n\t\tfor (let i = 1; i < expectedModernTokens.length; i += 2) {\n\t\t\texpectedModernTokens[i] |= tokenLanguageMetadata;\n\t\t}\n\t\tassert.deepStrictEqual(modernTokens, expectedModernTokens);\n\n\t\tdisposables.dispose();\n\t}\n\n\ttest('tokens always start at index 0', () => {\n\t\ttestBadTokensProvider(\n\t\t\t[\n\t\t\t\t{ startIndex: 7, scopes: 'foo' },\n\t\t\t\t{ startIndex: 0, scopes: 'bar' }\n\t\t\t],\n\t\t\t[\n\t\t\t\tnew Token(0, 'foo', languageId),\n\t\t\t\tnew Token(0, 'bar', languageId),\n\t\t\t],\n\t\t\t[\n\t\t\t\t0, (0 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK,\n\t\t\t\t0, (1 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('tokens always start after each other', () => {\n\t\ttestBadTokensProvider(\n\t\t\t[\n\t\t\t\t{ startIndex: 0, scopes: 'foo' },\n\t\t\t\t{ startIndex: 5, scopes: 'bar' },\n\t\t\t\t{ startIndex: 3, scopes: 'foo' },\n\t\t\t],\n\t\t\t[\n\t\t\t\tnew Token(0, 'foo', languageId),\n\t\t\t\tnew Token(5, 'bar', languageId),\n\t\t\t\tnew Token(5, 'foo', languageId),\n\t\t\t],\n\t\t\t[\n\t\t\t\t0, (0 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK,\n\t\t\t\t5, (1 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK,\n\t\t\t\t5, (2 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK\n\t\t\t]\n\t\t);\n\t});\n});\n"],
  "mappings": "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",
  "names": ["languageId"]
}
