{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/standaloneEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mainWindow } from \"../../../base/browser/window.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { splitLines } from \"../../../base/common/strings.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport \"./standalone-tokens.css\";\nimport {\n\ttype IMenuItem,\n\tMenuId,\n\tMenuRegistry,\n} from \"../../../platform/actions/common/actions.js\";\nimport {\n\tCommandsRegistry,\n\ttype ICommandHandler,\n} from \"../../../platform/commands/common/commands.js\";\nimport { ContextKeyExpr } from \"../../../platform/contextkey/common/contextkey.js\";\nimport type { ITextResourceEditorInput } from \"../../../platform/editor/common/editor.js\";\nimport { IKeybindingService } from \"../../../platform/keybinding/common/keybinding.js\";\nimport {\n\ttype IMarker,\n\ttype IMarkerData,\n\tIMarkerService,\n} from \"../../../platform/markers/common/markers.js\";\nimport { IOpenerService } from \"../../../platform/opener/common/opener.js\";\nimport { FontMeasurements } from \"../../browser/config/fontMeasurements.js\";\nimport type { ICodeEditor } from \"../../browser/editorBrowser.js\";\nimport {\n\tEditorCommand,\n\ttype ServicesAccessor,\n} from \"../../browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../browser/services/codeEditorService.js\";\nimport { MultiDiffEditorWidget } from \"../../browser/widget/multiDiffEditor/multiDiffEditorWidget.js\";\nimport {\n\tApplyUpdateResult,\n\tConfigurationChangedEvent,\n\tEditorOptions,\n} from \"../../common/config/editorOptions.js\";\nimport { EditorZoom } from \"../../common/config/editorZoom.js\";\nimport { BareFontInfo, FontInfo } from \"../../common/config/fontInfo.js\";\nimport type { IPosition } from \"../../common/core/position.js\";\nimport type { IRange } from \"../../common/core/range.js\";\nimport { EditorType, type IDiffEditor } from \"../../common/editorCommon.js\";\nimport * as languages from \"../../common/languages.js\";\nimport { ILanguageService } from \"../../common/languages/language.js\";\nimport { PLAINTEXT_LANGUAGE_ID } from \"../../common/languages/modesRegistry.js\";\nimport {\n\tNullState,\n\tnullTokenize,\n} from \"../../common/languages/nullTokenize.js\";\nimport {\n\tFindMatch,\n\ttype ITextModel,\n\tTextModelResolvedOptions,\n} from \"../../common/model.js\";\nimport { IModelService } from \"../../common/services/model.js\";\nimport * as standaloneEnums from \"../../common/standalone/standaloneEnums.js\";\nimport {\n\ttype IStandaloneThemeData,\n\tIStandaloneThemeService,\n} from \"../common/standaloneTheme.js\";\nimport {\n\tColorizer,\n\ttype IColorizerElementOptions,\n\ttype IColorizerOptions,\n} from \"./colorizer.js\";\nimport {\n\ttype IActionDescriptor,\n\ttype IStandaloneCodeEditor,\n\ttype IStandaloneDiffEditor,\n\ttype IStandaloneDiffEditorConstructionOptions,\n\ttype IStandaloneEditorConstructionOptions,\n\tStandaloneDiffEditor2,\n\tStandaloneEditor,\n\tcreateTextModel,\n} from \"./standaloneCodeEditor.js\";\nimport {\n\ttype IEditorOverrideServices,\n\tStandaloneKeybindingService,\n\tStandaloneServices,\n} from \"./standaloneServices.js\";\nimport type { StandaloneThemeService } from \"./standaloneThemeService.js\";\nimport {\n\ttype IWebWorkerOptions,\n\ttype MonacoWebWorker,\n\tcreateWebWorker as actualCreateWebWorker,\n} from \"./standaloneWebWorker.js\";\n\n/**\n * Create a new editor under `domElement`.\n * `domElement` should be empty (not contain other dom nodes).\n * The editor will read the size of `domElement`.\n */\nexport function create(\n\tdomElement: HTMLElement,\n\toptions?: IStandaloneEditorConstructionOptions,\n\toverride?: IEditorOverrideServices,\n): IStandaloneCodeEditor {\n\tconst instantiationService = StandaloneServices.initialize(override || {});\n\treturn instantiationService.createInstance(\n\t\tStandaloneEditor,\n\t\tdomElement,\n\t\toptions,\n\t);\n}\n\n/**\n * Emitted when an editor is created.\n * Creating a diff editor might cause this listener to be invoked with the two editors.\n * @event\n */\nexport function onDidCreateEditor(\n\tlistener: (codeEditor: ICodeEditor) => void,\n): IDisposable {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.onCodeEditorAdd((editor) => {\n\t\tlistener(<ICodeEditor>editor);\n\t});\n}\n\n/**\n * Emitted when an diff editor is created.\n * @event\n */\nexport function onDidCreateDiffEditor(\n\tlistener: (diffEditor: IDiffEditor) => void,\n): IDisposable {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.onDiffEditorAdd((editor) => {\n\t\tlistener(<IDiffEditor>editor);\n\t});\n}\n\n/**\n * Get all the created editors.\n */\nexport function getEditors(): readonly ICodeEditor[] {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.listCodeEditors();\n}\n\n/**\n * Get all the created diff editors.\n */\nexport function getDiffEditors(): readonly IDiffEditor[] {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.listDiffEditors();\n}\n\n/**\n * Create a new diff editor under `domElement`.\n * `domElement` should be empty (not contain other dom nodes).\n * The editor will read the size of `domElement`.\n */\nexport function createDiffEditor(\n\tdomElement: HTMLElement,\n\toptions?: IStandaloneDiffEditorConstructionOptions,\n\toverride?: IEditorOverrideServices,\n): IStandaloneDiffEditor {\n\tconst instantiationService = StandaloneServices.initialize(override || {});\n\treturn instantiationService.createInstance(\n\t\tStandaloneDiffEditor2,\n\t\tdomElement,\n\t\toptions,\n\t);\n}\n\nexport function createMultiFileDiffEditor(\n\tdomElement: HTMLElement,\n\toverride?: IEditorOverrideServices,\n) {\n\tconst instantiationService = StandaloneServices.initialize(override || {});\n\treturn new MultiDiffEditorWidget(domElement, {}, instantiationService);\n}\n\n/**\n * Description of a command contribution\n */\nexport interface ICommandDescriptor {\n\t/**\n\t * An unique identifier of the contributed command.\n\t */\n\tid: string;\n\t/**\n\t * Callback that will be executed when the command is triggered.\n\t */\n\trun: ICommandHandler;\n}\n\n/**\n * Add a command.\n */\nexport function addCommand(descriptor: ICommandDescriptor): IDisposable {\n\tif (\n\t\ttypeof descriptor.id !== \"string\" ||\n\t\ttypeof descriptor.run !== \"function\"\n\t) {\n\t\tthrow new Error(\n\t\t\t\"Invalid command descriptor, `id` and `run` are required properties!\",\n\t\t);\n\t}\n\treturn CommandsRegistry.registerCommand(descriptor.id, descriptor.run);\n}\n\n/**\n * Add an action to all editors.\n */\nexport function addEditorAction(descriptor: IActionDescriptor): IDisposable {\n\tif (\n\t\ttypeof descriptor.id !== \"string\" ||\n\t\ttypeof descriptor.label !== \"string\" ||\n\t\ttypeof descriptor.run !== \"function\"\n\t) {\n\t\tthrow new Error(\n\t\t\t\"Invalid action descriptor, `id`, `label` and `run` are required properties!\",\n\t\t);\n\t}\n\n\tconst precondition = ContextKeyExpr.deserialize(descriptor.precondition);\n\tconst run = (\n\t\taccessor: ServicesAccessor,\n\t\t...args: any[]\n\t): void | Promise<void> => {\n\t\treturn EditorCommand.runEditorCommand(\n\t\t\taccessor,\n\t\t\targs,\n\t\t\tprecondition,\n\t\t\t(accessor, editor, args) =>\n\t\t\t\tPromise.resolve(descriptor.run(editor, ...args)),\n\t\t);\n\t};\n\n\tconst toDispose = new DisposableStore();\n\n\t// Register the command\n\ttoDispose.add(CommandsRegistry.registerCommand(descriptor.id, run));\n\n\t// Register the context menu item\n\tif (descriptor.contextMenuGroupId) {\n\t\tconst menuItem: IMenuItem = {\n\t\t\tcommand: {\n\t\t\t\tid: descriptor.id,\n\t\t\t\ttitle: descriptor.label,\n\t\t\t},\n\t\t\twhen: precondition,\n\t\t\tgroup: descriptor.contextMenuGroupId,\n\t\t\torder: descriptor.contextMenuOrder || 0,\n\t\t};\n\t\ttoDispose.add(\n\t\t\tMenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem),\n\t\t);\n\t}\n\n\t// Register the keybindings\n\tif (Array.isArray(descriptor.keybindings)) {\n\t\tconst keybindingService = StandaloneServices.get(IKeybindingService);\n\t\tif (keybindingService instanceof StandaloneKeybindingService) {\n\t\t\tconst keybindingsWhen = ContextKeyExpr.and(\n\t\t\t\tprecondition,\n\t\t\t\tContextKeyExpr.deserialize(descriptor.keybindingContext),\n\t\t\t);\n\t\t\ttoDispose.add(\n\t\t\t\tkeybindingService.addDynamicKeybindings(\n\t\t\t\t\tdescriptor.keybindings.map((keybinding) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkeybinding,\n\t\t\t\t\t\t\tcommand: descriptor.id,\n\t\t\t\t\t\t\twhen: keybindingsWhen,\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t\"Cannot add keybinding because the editor is configured with an unrecognized KeybindingService\",\n\t\t\t);\n\t\t}\n\t}\n\n\treturn toDispose;\n}\n\n/**\n * A keybinding rule.\n */\nexport interface IKeybindingRule {\n\tkeybinding: number;\n\tcommand?: string | null;\n\tcommandArgs?: any;\n\twhen?: string | null;\n}\n\n/**\n * Add a keybinding rule.\n */\nexport function addKeybindingRule(rule: IKeybindingRule): IDisposable {\n\treturn addKeybindingRules([rule]);\n}\n\n/**\n * Add keybinding rules.\n */\nexport function addKeybindingRules(rules: IKeybindingRule[]): IDisposable {\n\tconst keybindingService = StandaloneServices.get(IKeybindingService);\n\tif (!(keybindingService instanceof StandaloneKeybindingService)) {\n\t\tconsole.warn(\n\t\t\t\"Cannot add keybinding because the editor is configured with an unrecognized KeybindingService\",\n\t\t);\n\t\treturn Disposable.None;\n\t}\n\n\treturn keybindingService.addDynamicKeybindings(\n\t\trules.map((rule) => {\n\t\t\treturn {\n\t\t\t\tkeybinding: rule.keybinding,\n\t\t\t\tcommand: rule.command,\n\t\t\t\tcommandArgs: rule.commandArgs,\n\t\t\t\twhen: ContextKeyExpr.deserialize(rule.when),\n\t\t\t};\n\t\t}),\n\t);\n}\n\n/**\n * Create a new editor model.\n * You can specify the language that should be set for this model or let the language be inferred from the `uri`.\n */\nexport function createModel(\n\tvalue: string,\n\tlanguage?: string,\n\turi?: URI,\n): ITextModel {\n\tconst languageService = StandaloneServices.get(ILanguageService);\n\tconst languageId =\n\t\tlanguageService.getLanguageIdByMimeType(language) || language;\n\treturn createTextModel(\n\t\tStandaloneServices.get(IModelService),\n\t\tlanguageService,\n\t\tvalue,\n\t\tlanguageId,\n\t\turi,\n\t);\n}\n\n/**\n * Change the language for a model.\n */\nexport function setModelLanguage(\n\tmodel: ITextModel,\n\tmimeTypeOrLanguageId: string,\n): void {\n\tconst languageService = StandaloneServices.get(ILanguageService);\n\tconst languageId =\n\t\tlanguageService.getLanguageIdByMimeType(mimeTypeOrLanguageId) ||\n\t\tmimeTypeOrLanguageId ||\n\t\tPLAINTEXT_LANGUAGE_ID;\n\tmodel.setLanguage(languageService.createById(languageId));\n}\n\n/**\n * Set the markers for a model.\n */\nexport function setModelMarkers(\n\tmodel: ITextModel,\n\towner: string,\n\tmarkers: IMarkerData[],\n): void {\n\tif (model) {\n\t\tconst markerService = StandaloneServices.get(IMarkerService);\n\t\tmarkerService.changeOne(owner, model.uri, markers);\n\t}\n}\n\n/**\n * Remove all markers of an owner.\n */\nexport function removeAllMarkers(owner: string) {\n\tconst markerService = StandaloneServices.get(IMarkerService);\n\tmarkerService.changeAll(owner, []);\n}\n\n/**\n * Get markers for owner and/or resource\n *\n * @returns list of markers\n */\nexport function getModelMarkers(filter: {\n\towner?: string;\n\tresource?: URI;\n\ttake?: number;\n}): IMarker[] {\n\tconst markerService = StandaloneServices.get(IMarkerService);\n\treturn markerService.read(filter);\n}\n\n/**\n * Emitted when markers change for a model.\n * @event\n */\nexport function onDidChangeMarkers(\n\tlistener: (e: readonly URI[]) => void,\n): IDisposable {\n\tconst markerService = StandaloneServices.get(IMarkerService);\n\treturn markerService.onMarkerChanged(listener);\n}\n\n/**\n * Get the model that has `uri` if it exists.\n */\nexport function getModel(uri: URI): ITextModel | null {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.getModel(uri);\n}\n\n/**\n * Get all the created models.\n */\nexport function getModels(): ITextModel[] {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.getModels();\n}\n\n/**\n * Emitted when a model is created.\n * @event\n */\nexport function onDidCreateModel(\n\tlistener: (model: ITextModel) => void,\n): IDisposable {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.onModelAdded(listener);\n}\n\n/**\n * Emitted right before a model is disposed.\n * @event\n */\nexport function onWillDisposeModel(\n\tlistener: (model: ITextModel) => void,\n): IDisposable {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.onModelRemoved(listener);\n}\n\n/**\n * Emitted when a different language is set to a model.\n * @event\n */\nexport function onDidChangeModelLanguage(\n\tlistener: (e: {\n\t\treadonly model: ITextModel;\n\t\treadonly oldLanguage: string;\n\t}) => void,\n): IDisposable {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.onModelLanguageChanged((e) => {\n\t\tlistener({\n\t\t\tmodel: e.model,\n\t\t\toldLanguage: e.oldLanguageId,\n\t\t});\n\t});\n}\n\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker<T extends object>(\n\topts: IWebWorkerOptions,\n): MonacoWebWorker<T> {\n\treturn actualCreateWebWorker<T>(\n\t\tStandaloneServices.get(IModelService),\n\t\topts,\n\t);\n}\n\n/**\n * Colorize the contents of `domNode` using attribute `data-lang`.\n */\nexport function colorizeElement(\n\tdomNode: HTMLElement,\n\toptions: IColorizerElementOptions,\n): Promise<void> {\n\tconst languageService = StandaloneServices.get(ILanguageService);\n\tconst themeService = <StandaloneThemeService>(\n\t\tStandaloneServices.get(IStandaloneThemeService)\n\t);\n\treturn Colorizer.colorizeElement(\n\t\tthemeService,\n\t\tlanguageService,\n\t\tdomNode,\n\t\toptions,\n\t).then(() => {\n\t\tthemeService.registerEditorContainer(domNode);\n\t});\n}\n\n/**\n * Colorize `text` using language `languageId`.\n */\nexport function colorize(\n\ttext: string,\n\tlanguageId: string,\n\toptions: IColorizerOptions,\n): Promise<string> {\n\tconst languageService = StandaloneServices.get(ILanguageService);\n\tconst themeService = <StandaloneThemeService>(\n\t\tStandaloneServices.get(IStandaloneThemeService)\n\t);\n\tthemeService.registerEditorContainer(mainWindow.document.body);\n\treturn Colorizer.colorize(languageService, text, languageId, options);\n}\n\n/**\n * Colorize a line in a model.\n */\nexport function colorizeModelLine(\n\tmodel: ITextModel,\n\tlineNumber: number,\n\ttabSize = 4,\n): string {\n\tconst themeService = <StandaloneThemeService>(\n\t\tStandaloneServices.get(IStandaloneThemeService)\n\t);\n\tthemeService.registerEditorContainer(mainWindow.document.body);\n\treturn Colorizer.colorizeModelLine(model, lineNumber, tabSize);\n}\n\n/**\n * @internal\n */\nfunction getSafeTokenizationSupport(\n\tlanguage: string,\n): Omit<languages.ITokenizationSupport, \"tokenizeEncoded\"> {\n\tconst tokenizationSupport = languages.TokenizationRegistry.get(language);\n\tif (tokenizationSupport) {\n\t\treturn tokenizationSupport;\n\t}\n\treturn {\n\t\tgetInitialState: () => NullState,\n\t\ttokenize: (line: string, hasEOL: boolean, state: languages.IState) =>\n\t\t\tnullTokenize(language, state),\n\t};\n}\n\n/**\n * Tokenize `text` using language `languageId`\n */\nexport function tokenize(\n\ttext: string,\n\tlanguageId: string,\n): languages.Token[][] {\n\t// Needed in order to get the mode registered for subsequent look-ups\n\tlanguages.TokenizationRegistry.getOrCreate(languageId);\n\n\tconst tokenizationSupport = getSafeTokenizationSupport(languageId);\n\tconst lines = splitLines(text);\n\tconst result: languages.Token[][] = [];\n\tlet state = tokenizationSupport.getInitialState();\n\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\tconst line = lines[i];\n\t\tconst tokenizationResult = tokenizationSupport.tokenize(\n\t\t\tline,\n\t\t\ttrue,\n\t\t\tstate,\n\t\t);\n\n\t\tresult[i] = tokenizationResult.tokens;\n\t\tstate = tokenizationResult.endState;\n\t}\n\treturn result;\n}\n\n/**\n * Define a new theme or update an existing theme.\n */\nexport function defineTheme(\n\tthemeName: string,\n\tthemeData: IStandaloneThemeData,\n): void {\n\tconst standaloneThemeService = StandaloneServices.get(\n\t\tIStandaloneThemeService,\n\t);\n\tstandaloneThemeService.defineTheme(themeName, themeData);\n}\n\n/**\n * Switches to a theme.\n */\nexport function setTheme(themeName: string): void {\n\tconst standaloneThemeService = StandaloneServices.get(\n\t\tIStandaloneThemeService,\n\t);\n\tstandaloneThemeService.setTheme(themeName);\n}\n\n/**\n * Clears all cached font measurements and triggers re-measurement.\n */\nexport function remeasureFonts(): void {\n\tFontMeasurements.clearAllFontInfos();\n}\n\n/**\n * Register a command.\n */\nexport function registerCommand(\n\tid: string,\n\thandler: (accessor: any, ...args: any[]) => void,\n): IDisposable {\n\treturn CommandsRegistry.registerCommand({ id, handler });\n}\n\nexport interface ILinkOpener {\n\topen(resource: URI): boolean | Promise<boolean>;\n}\n\n/**\n * Registers a handler that is called when a link is opened in any editor. The handler callback should return `true` if the link was handled and `false` otherwise.\n * The handler that was registered last will be called first when a link is opened.\n *\n * Returns a disposable that can unregister the opener again.\n */\nexport function registerLinkOpener(opener: ILinkOpener): IDisposable {\n\tconst openerService = StandaloneServices.get(IOpenerService);\n\treturn openerService.registerOpener({\n\t\tasync open(resource: string | URI) {\n\t\t\tif (typeof resource === \"string\") {\n\t\t\t\tresource = URI.parse(resource);\n\t\t\t}\n\t\t\treturn opener.open(resource);\n\t\t},\n\t});\n}\n\n/**\n * Represents an object that can handle editor open operations (e.g. when \"go to definition\" is called\n * with a resource other than the current model).\n */\nexport interface ICodeEditorOpener {\n\t/**\n\t * Callback that is invoked when a resource other than the current model should be opened (e.g. when \"go to definition\" is called).\n\t * The callback should return `true` if the request was handled and `false` otherwise.\n\t * @param source The code editor instance that initiated the request.\n\t * @param resource The URI of the resource that should be opened.\n\t * @param selectionOrPosition An optional position or selection inside the model corresponding to `resource` that can be used to set the cursor.\n\t */\n\topenCodeEditor(\n\t\tsource: ICodeEditor,\n\t\tresource: URI,\n\t\tselectionOrPosition?: IRange | IPosition,\n\t): boolean | Promise<boolean>;\n}\n\n/**\n * Registers a handler that is called when a resource other than the current model should be opened in the editor (e.g. \"go to definition\").\n * The handler callback should return `true` if the request was handled and `false` otherwise.\n *\n * Returns a disposable that can unregister the opener again.\n *\n * If no handler is registered the default behavior is to do nothing for models other than the currently attached one.\n */\nexport function registerEditorOpener(opener: ICodeEditorOpener): IDisposable {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.registerCodeEditorOpenHandler(\n\t\tasync (\n\t\t\tinput: ITextResourceEditorInput,\n\t\t\tsource: ICodeEditor | null,\n\t\t\tsideBySide?: boolean,\n\t\t) => {\n\t\t\tif (!source) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst selection = input.options?.selection;\n\t\t\tlet selectionOrPosition: IRange | IPosition | undefined;\n\t\t\tif (\n\t\t\t\tselection &&\n\t\t\t\ttypeof selection.endLineNumber === \"number\" &&\n\t\t\t\ttypeof selection.endColumn === \"number\"\n\t\t\t) {\n\t\t\t\tselectionOrPosition = <IRange>selection;\n\t\t\t} else if (selection) {\n\t\t\t\tselectionOrPosition = {\n\t\t\t\t\tlineNumber: selection.startLineNumber,\n\t\t\t\t\tcolumn: selection.startColumn,\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (\n\t\t\t\tawait opener.openCodeEditor(\n\t\t\t\t\tsource,\n\t\t\t\t\tinput.resource,\n\t\t\t\t\tselectionOrPosition,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn source; // return source editor to indicate that this handler has successfully handled the opening\n\t\t\t}\n\t\t\treturn null; // fallback to other registered handlers\n\t\t},\n\t);\n}\n\n/**\n * @internal\n */\nexport function createMonacoEditorAPI(): typeof monaco.editor {\n\treturn {\n\t\t// methods\n\t\tcreate: <any>create,\n\t\tgetEditors: <any>getEditors,\n\t\tgetDiffEditors: <any>getDiffEditors,\n\t\tonDidCreateEditor: <any>onDidCreateEditor,\n\t\tonDidCreateDiffEditor: <any>onDidCreateDiffEditor,\n\t\tcreateDiffEditor: <any>createDiffEditor,\n\n\t\taddCommand: <any>addCommand,\n\t\taddEditorAction: <any>addEditorAction,\n\t\taddKeybindingRule: <any>addKeybindingRule,\n\t\taddKeybindingRules: <any>addKeybindingRules,\n\n\t\tcreateModel: <any>createModel,\n\t\tsetModelLanguage: <any>setModelLanguage,\n\t\tsetModelMarkers: <any>setModelMarkers,\n\t\tgetModelMarkers: <any>getModelMarkers,\n\t\tremoveAllMarkers: removeAllMarkers,\n\t\tonDidChangeMarkers: <any>onDidChangeMarkers,\n\t\tgetModels: <any>getModels,\n\t\tgetModel: <any>getModel,\n\t\tonDidCreateModel: <any>onDidCreateModel,\n\t\tonWillDisposeModel: <any>onWillDisposeModel,\n\t\tonDidChangeModelLanguage: <any>onDidChangeModelLanguage,\n\n\t\tcreateWebWorker: <any>createWebWorker,\n\t\tcolorizeElement: <any>colorizeElement,\n\t\tcolorize: <any>colorize,\n\t\tcolorizeModelLine: <any>colorizeModelLine,\n\t\ttokenize: <any>tokenize,\n\t\tdefineTheme: <any>defineTheme,\n\t\tsetTheme: <any>setTheme,\n\t\tremeasureFonts: remeasureFonts,\n\t\tregisterCommand: registerCommand,\n\n\t\tregisterLinkOpener: registerLinkOpener,\n\t\tregisterEditorOpener: <any>registerEditorOpener,\n\n\t\t// enums\n\t\tAccessibilitySupport: standaloneEnums.AccessibilitySupport,\n\t\tContentWidgetPositionPreference:\n\t\t\tstandaloneEnums.ContentWidgetPositionPreference,\n\t\tCursorChangeReason: standaloneEnums.CursorChangeReason,\n\t\tDefaultEndOfLine: standaloneEnums.DefaultEndOfLine,\n\t\tEditorAutoIndentStrategy: standaloneEnums.EditorAutoIndentStrategy,\n\t\tEditorOption: standaloneEnums.EditorOption,\n\t\tEndOfLinePreference: standaloneEnums.EndOfLinePreference,\n\t\tEndOfLineSequence: standaloneEnums.EndOfLineSequence,\n\t\tMinimapPosition: standaloneEnums.MinimapPosition,\n\t\tMinimapSectionHeaderStyle: standaloneEnums.MinimapSectionHeaderStyle,\n\t\tMouseTargetType: standaloneEnums.MouseTargetType,\n\t\tOverlayWidgetPositionPreference:\n\t\t\tstandaloneEnums.OverlayWidgetPositionPreference,\n\t\tOverviewRulerLane: standaloneEnums.OverviewRulerLane,\n\t\tGlyphMarginLane: standaloneEnums.GlyphMarginLane,\n\t\tRenderLineNumbersType: standaloneEnums.RenderLineNumbersType,\n\t\tRenderMinimap: standaloneEnums.RenderMinimap,\n\t\tScrollbarVisibility: standaloneEnums.ScrollbarVisibility,\n\t\tScrollType: standaloneEnums.ScrollType,\n\t\tTextEditorCursorBlinkingStyle:\n\t\t\tstandaloneEnums.TextEditorCursorBlinkingStyle,\n\t\tTextEditorCursorStyle: standaloneEnums.TextEditorCursorStyle,\n\t\tTrackedRangeStickiness: standaloneEnums.TrackedRangeStickiness,\n\t\tWrappingIndent: standaloneEnums.WrappingIndent,\n\t\tInjectedTextCursorStops: standaloneEnums.InjectedTextCursorStops,\n\t\tPositionAffinity: standaloneEnums.PositionAffinity,\n\t\tShowLightbulbIconMode: standaloneEnums.ShowLightbulbIconMode,\n\n\t\t// classes\n\t\tConfigurationChangedEvent: <any>ConfigurationChangedEvent,\n\t\tBareFontInfo: <any>BareFontInfo,\n\t\tFontInfo: <any>FontInfo,\n\t\tTextModelResolvedOptions: <any>TextModelResolvedOptions,\n\t\tFindMatch: <any>FindMatch,\n\t\tApplyUpdateResult: <any>ApplyUpdateResult,\n\t\tEditorZoom: <any>EditorZoom,\n\n\t\tcreateMultiFileDiffEditor: <any>createMultiFileDiffEditor,\n\n\t\t// vars\n\t\tEditorType: EditorType,\n\t\tEditorOptions: <any>EditorOptions,\n\t};\n}\n"],
  "mappings": "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",
  "names": ["accessor", "args"]
}
