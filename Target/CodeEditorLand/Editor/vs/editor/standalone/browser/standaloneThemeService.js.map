{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/standaloneThemeService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { addMatchMediaChangeListener } from '../../../base/browser/browser.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { FontStyle, TokenMetadata } from '../../common/encodedTokenAttributes.js';\nimport { ITokenThemeRule, TokenTheme, generateTokensCSSForColorMap } from '../../common/languages/supports/tokenization.js';\nimport { BuiltinTheme, IStandaloneTheme, IStandaloneThemeData, IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { hc_black, hc_light, vs, vs_dark } from '../common/themes.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { asCssVariableName, ColorIdentifier, Extensions, IColorRegistry } from '../../../platform/theme/common/colorRegistry.js';\nimport { Extensions as ThemingExtensions, ICssStyleCollector, IFileIconTheme, IProductIconTheme, IThemingRegistry, ITokenStyle } from '../../../platform/theme/common/themeService.js';\nimport { IDisposable, Disposable } from '../../../base/common/lifecycle.js';\nimport { ColorScheme, isDark, isHighContrast } from '../../../platform/theme/common/theme.js';\nimport { getIconsStyleSheet, UnthemedProductIconTheme } from '../../../platform/theme/browser/iconsStyleSheet.js';\nimport { mainWindow } from '../../../base/browser/window.js';\n\nexport const VS_LIGHT_THEME_NAME = 'vs';\nexport const VS_DARK_THEME_NAME = 'vs-dark';\nexport const HC_BLACK_THEME_NAME = 'hc-black';\nexport const HC_LIGHT_THEME_NAME = 'hc-light';\n\nconst colorRegistry = Registry.as<IColorRegistry>(Extensions.ColorContribution);\nconst themingRegistry = Registry.as<IThemingRegistry>(ThemingExtensions.ThemingContribution);\n\nclass StandaloneTheme implements IStandaloneTheme {\n\n\tpublic readonly id: string;\n\tpublic readonly themeName: string;\n\n\tprivate readonly themeData: IStandaloneThemeData;\n\tprivate colors: Map<string, Color> | null;\n\tprivate readonly defaultColors: { [colorId: string]: Color | undefined };\n\tprivate _tokenTheme: TokenTheme | null;\n\n\tconstructor(name: string, standaloneThemeData: IStandaloneThemeData) {\n\t\tthis.themeData = standaloneThemeData;\n\t\tconst base = standaloneThemeData.base;\n\t\tif (name.length > 0) {\n\t\t\tif (isBuiltinTheme(name)) {\n\t\t\t\tthis.id = name;\n\t\t\t} else {\n\t\t\t\tthis.id = base + ' ' + name;\n\t\t\t}\n\t\t\tthis.themeName = name;\n\t\t} else {\n\t\t\tthis.id = base;\n\t\t\tthis.themeName = base;\n\t\t}\n\t\tthis.colors = null;\n\t\tthis.defaultColors = Object.create(null);\n\t\tthis._tokenTheme = null;\n\t}\n\n\tpublic get label(): string {\n\t\treturn this.themeName;\n\t}\n\n\tpublic get base(): string {\n\t\treturn this.themeData.base;\n\t}\n\n\tpublic notifyBaseUpdated() {\n\t\tif (this.themeData.inherit) {\n\t\t\tthis.colors = null;\n\t\t\tthis._tokenTheme = null;\n\t\t}\n\t}\n\n\tprivate getColors(): Map<string, Color> {\n\t\tif (!this.colors) {\n\t\t\tconst colors = new Map<string, Color>();\n\t\t\tfor (const id in this.themeData.colors) {\n\t\t\t\tcolors.set(id, Color.fromHex(this.themeData.colors[id]));\n\t\t\t}\n\t\t\tif (this.themeData.inherit) {\n\t\t\t\tconst baseData = getBuiltinRules(this.themeData.base);\n\t\t\t\tfor (const id in baseData.colors) {\n\t\t\t\t\tif (!colors.has(id)) {\n\t\t\t\t\t\tcolors.set(id, Color.fromHex(baseData.colors[id]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.colors = colors;\n\t\t}\n\t\treturn this.colors;\n\t}\n\n\tpublic getColor(colorId: ColorIdentifier, useDefault?: boolean): Color | undefined {\n\t\tconst color = this.getColors().get(colorId);\n\t\tif (color) {\n\t\t\treturn color;\n\t\t}\n\t\tif (useDefault !== false) {\n\t\t\treturn this.getDefault(colorId);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getDefault(colorId: ColorIdentifier): Color | undefined {\n\t\tlet color = this.defaultColors[colorId];\n\t\tif (color) {\n\t\t\treturn color;\n\t\t}\n\t\tcolor = colorRegistry.resolveDefaultColor(colorId, this);\n\t\tthis.defaultColors[colorId] = color;\n\t\treturn color;\n\t}\n\n\tpublic defines(colorId: ColorIdentifier): boolean {\n\t\treturn this.getColors().has(colorId);\n\t}\n\n\tpublic get type(): ColorScheme {\n\t\tswitch (this.base) {\n\t\t\tcase VS_LIGHT_THEME_NAME: return ColorScheme.LIGHT;\n\t\t\tcase HC_BLACK_THEME_NAME: return ColorScheme.HIGH_CONTRAST_DARK;\n\t\t\tcase HC_LIGHT_THEME_NAME: return ColorScheme.HIGH_CONTRAST_LIGHT;\n\t\t\tdefault: return ColorScheme.DARK;\n\t\t}\n\t}\n\n\tpublic get tokenTheme(): TokenTheme {\n\t\tif (!this._tokenTheme) {\n\t\t\tlet rules: ITokenThemeRule[] = [];\n\t\t\tlet encodedTokensColors: string[] = [];\n\t\t\tif (this.themeData.inherit) {\n\t\t\t\tconst baseData = getBuiltinRules(this.themeData.base);\n\t\t\t\trules = baseData.rules;\n\t\t\t\tif (baseData.encodedTokensColors) {\n\t\t\t\t\tencodedTokensColors = baseData.encodedTokensColors;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Pick up default colors from `editor.foreground` and `editor.background` if available\n\t\t\tconst editorForeground = this.themeData.colors['editor.foreground'];\n\t\t\tconst editorBackground = this.themeData.colors['editor.background'];\n\t\t\tif (editorForeground || editorBackground) {\n\t\t\t\tconst rule: ITokenThemeRule = { token: '' };\n\t\t\t\tif (editorForeground) {\n\t\t\t\t\trule.foreground = editorForeground;\n\t\t\t\t}\n\t\t\t\tif (editorBackground) {\n\t\t\t\t\trule.background = editorBackground;\n\t\t\t\t}\n\t\t\t\trules.push(rule);\n\t\t\t}\n\t\t\trules = rules.concat(this.themeData.rules);\n\t\t\tif (this.themeData.encodedTokensColors) {\n\t\t\t\tencodedTokensColors = this.themeData.encodedTokensColors;\n\t\t\t}\n\t\t\tthis._tokenTheme = TokenTheme.createFromRawTokenTheme(rules, encodedTokensColors);\n\t\t}\n\t\treturn this._tokenTheme;\n\t}\n\n\tpublic getTokenStyleMetadata(type: string, modifiers: string[], modelLanguage: string): ITokenStyle | undefined {\n\t\t// use theme rules match\n\t\tconst style = this.tokenTheme._match([type].concat(modifiers).join('.'));\n\t\tconst metadata = style.metadata;\n\t\tconst foreground = TokenMetadata.getForeground(metadata);\n\t\tconst fontStyle = TokenMetadata.getFontStyle(metadata);\n\t\treturn {\n\t\t\tforeground: foreground,\n\t\t\titalic: Boolean(fontStyle & FontStyle.Italic),\n\t\t\tbold: Boolean(fontStyle & FontStyle.Bold),\n\t\t\tunderline: Boolean(fontStyle & FontStyle.Underline),\n\t\t\tstrikethrough: Boolean(fontStyle & FontStyle.Strikethrough)\n\t\t};\n\t}\n\n\tpublic get tokenColorMap(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic readonly semanticHighlighting = false;\n}\n\nfunction isBuiltinTheme(themeName: string): themeName is BuiltinTheme {\n\treturn (\n\t\tthemeName === VS_LIGHT_THEME_NAME\n\t\t|| themeName === VS_DARK_THEME_NAME\n\t\t|| themeName === HC_BLACK_THEME_NAME\n\t\t|| themeName === HC_LIGHT_THEME_NAME\n\t);\n}\n\nfunction getBuiltinRules(builtinTheme: BuiltinTheme): IStandaloneThemeData {\n\tswitch (builtinTheme) {\n\t\tcase VS_LIGHT_THEME_NAME:\n\t\t\treturn vs;\n\t\tcase VS_DARK_THEME_NAME:\n\t\t\treturn vs_dark;\n\t\tcase HC_BLACK_THEME_NAME:\n\t\t\treturn hc_black;\n\t\tcase HC_LIGHT_THEME_NAME:\n\t\t\treturn hc_light;\n\t}\n}\n\nfunction newBuiltInTheme(builtinTheme: BuiltinTheme): StandaloneTheme {\n\tconst themeData = getBuiltinRules(builtinTheme);\n\treturn new StandaloneTheme(builtinTheme, themeData);\n}\n\nexport class StandaloneThemeService extends Disposable implements IStandaloneThemeService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onColorThemeChange = this._register(new Emitter<IStandaloneTheme>());\n\tpublic readonly onDidColorThemeChange = this._onColorThemeChange.event;\n\n\tprivate readonly _onFileIconThemeChange = this._register(new Emitter<IFileIconTheme>());\n\tpublic readonly onDidFileIconThemeChange = this._onFileIconThemeChange.event;\n\n\tprivate readonly _onProductIconThemeChange = this._register(new Emitter<IProductIconTheme>());\n\tpublic readonly onDidProductIconThemeChange = this._onProductIconThemeChange.event;\n\n\tprivate readonly _environment: IEnvironmentService = Object.create(null);\n\tprivate readonly _knownThemes: Map<string, StandaloneTheme>;\n\tprivate _autoDetectHighContrast: boolean;\n\tprivate _codiconCSS: string;\n\tprivate _themeCSS: string;\n\tprivate _allCSS: string;\n\tprivate _globalStyleElement: HTMLStyleElement | null;\n\tprivate _styleElements: HTMLStyleElement[];\n\tprivate _colorMapOverride: Color[] | null;\n\tprivate _theme!: IStandaloneTheme;\n\n\tprivate _builtInProductIconTheme = new UnthemedProductIconTheme();\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._autoDetectHighContrast = true;\n\n\t\tthis._knownThemes = new Map<string, StandaloneTheme>();\n\t\tthis._knownThemes.set(VS_LIGHT_THEME_NAME, newBuiltInTheme(VS_LIGHT_THEME_NAME));\n\t\tthis._knownThemes.set(VS_DARK_THEME_NAME, newBuiltInTheme(VS_DARK_THEME_NAME));\n\t\tthis._knownThemes.set(HC_BLACK_THEME_NAME, newBuiltInTheme(HC_BLACK_THEME_NAME));\n\t\tthis._knownThemes.set(HC_LIGHT_THEME_NAME, newBuiltInTheme(HC_LIGHT_THEME_NAME));\n\n\t\tconst iconsStyleSheet = this._register(getIconsStyleSheet(this));\n\n\t\tthis._codiconCSS = iconsStyleSheet.getCSS();\n\t\tthis._themeCSS = '';\n\t\tthis._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n\t\tthis._globalStyleElement = null;\n\t\tthis._styleElements = [];\n\t\tthis._colorMapOverride = null;\n\t\tthis.setTheme(VS_LIGHT_THEME_NAME);\n\t\tthis._onOSSchemeChanged();\n\n\t\tthis._register(iconsStyleSheet.onDidChange(() => {\n\t\t\tthis._codiconCSS = iconsStyleSheet.getCSS();\n\t\t\tthis._updateCSS();\n\t\t}));\n\n\t\taddMatchMediaChangeListener(mainWindow, '(forced-colors: active)', () => {\n\t\t\tthis._onOSSchemeChanged();\n\t\t});\n\t}\n\n\tpublic registerEditorContainer(domNode: HTMLElement): IDisposable {\n\t\tif (dom.isInShadowDOM(domNode)) {\n\t\t\treturn this._registerShadowDomContainer(domNode);\n\t\t}\n\t\treturn this._registerRegularEditorContainer();\n\t}\n\n\tprivate _registerRegularEditorContainer(): IDisposable {\n\t\tif (!this._globalStyleElement) {\n\t\t\tthis._globalStyleElement = dom.createStyleSheet(undefined, style => {\n\t\t\t\tstyle.className = 'monaco-colors';\n\t\t\t\tstyle.textContent = this._allCSS;\n\t\t\t});\n\t\t\tthis._styleElements.push(this._globalStyleElement);\n\t\t}\n\t\treturn Disposable.None;\n\t}\n\n\tprivate _registerShadowDomContainer(domNode: HTMLElement): IDisposable {\n\t\tconst styleElement = dom.createStyleSheet(domNode, style => {\n\t\t\tstyle.className = 'monaco-colors';\n\t\t\tstyle.textContent = this._allCSS;\n\t\t});\n\t\tthis._styleElements.push(styleElement);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (let i = 0; i < this._styleElements.length; i++) {\n\t\t\t\t\tif (this._styleElements[i] === styleElement) {\n\t\t\t\t\t\tthis._styleElements.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic defineTheme(themeName: string, themeData: IStandaloneThemeData): void {\n\t\tif (!/^[a-z0-9\\-]+$/i.test(themeName)) {\n\t\t\tthrow new Error('Illegal theme name!');\n\t\t}\n\t\tif (!isBuiltinTheme(themeData.base) && !isBuiltinTheme(themeName)) {\n\t\t\tthrow new Error('Illegal theme base!');\n\t\t}\n\t\t// set or replace theme\n\t\tthis._knownThemes.set(themeName, new StandaloneTheme(themeName, themeData));\n\n\t\tif (isBuiltinTheme(themeName)) {\n\t\t\tthis._knownThemes.forEach(theme => {\n\t\t\t\tif (theme.base === themeName) {\n\t\t\t\t\ttheme.notifyBaseUpdated();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (this._theme.themeName === themeName) {\n\t\t\tthis.setTheme(themeName); // refresh theme\n\t\t}\n\t}\n\n\tpublic getColorTheme(): IStandaloneTheme {\n\t\treturn this._theme;\n\t}\n\n\tpublic setColorMapOverride(colorMapOverride: Color[] | null): void {\n\t\tthis._colorMapOverride = colorMapOverride;\n\t\tthis._updateThemeOrColorMap();\n\t}\n\n\tpublic setTheme(themeName: string): void {\n\t\tlet theme: StandaloneTheme | undefined;\n\t\tif (this._knownThemes.has(themeName)) {\n\t\t\ttheme = this._knownThemes.get(themeName);\n\t\t} else {\n\t\t\ttheme = this._knownThemes.get(VS_LIGHT_THEME_NAME);\n\t\t}\n\t\tthis._updateActualTheme(theme);\n\t}\n\n\tprivate _updateActualTheme(desiredTheme: IStandaloneTheme | undefined): void {\n\t\tif (!desiredTheme || this._theme === desiredTheme) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._theme = desiredTheme;\n\t\tthis._updateThemeOrColorMap();\n\t}\n\n\tprivate _onOSSchemeChanged() {\n\t\tif (this._autoDetectHighContrast) {\n\t\t\tconst wantsHighContrast = mainWindow.matchMedia(`(forced-colors: active)`).matches;\n\t\t\tif (wantsHighContrast !== isHighContrast(this._theme.type)) {\n\t\t\t\t// switch to high contrast or non-high contrast but stick to dark or light\n\t\t\t\tlet newThemeName;\n\t\t\t\tif (isDark(this._theme.type)) {\n\t\t\t\t\tnewThemeName = wantsHighContrast ? HC_BLACK_THEME_NAME : VS_DARK_THEME_NAME;\n\t\t\t\t} else {\n\t\t\t\t\tnewThemeName = wantsHighContrast ? HC_LIGHT_THEME_NAME : VS_LIGHT_THEME_NAME;\n\t\t\t\t}\n\t\t\t\tthis._updateActualTheme(this._knownThemes.get(newThemeName));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setAutoDetectHighContrast(autoDetectHighContrast: boolean): void {\n\t\tthis._autoDetectHighContrast = autoDetectHighContrast;\n\t\tthis._onOSSchemeChanged();\n\t}\n\n\tprivate _updateThemeOrColorMap(): void {\n\t\tconst cssRules: string[] = [];\n\t\tconst hasRule: { [rule: string]: boolean } = {};\n\t\tconst ruleCollector: ICssStyleCollector = {\n\t\t\taddRule: (rule: string) => {\n\t\t\t\tif (!hasRule[rule]) {\n\t\t\t\t\tcssRules.push(rule);\n\t\t\t\t\thasRule[rule] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthemingRegistry.getThemingParticipants().forEach(p => p(this._theme, ruleCollector, this._environment));\n\n\t\tconst colorVariables: string[] = [];\n\t\tfor (const item of colorRegistry.getColors()) {\n\t\t\tconst color = this._theme.getColor(item.id, true);\n\t\t\tif (color) {\n\t\t\t\tcolorVariables.push(`${asCssVariableName(item.id)}: ${color.toString()};`);\n\t\t\t}\n\t\t}\n\t\truleCollector.addRule(`.monaco-editor, .monaco-diff-editor, .monaco-component { ${colorVariables.join('\\n')} }`);\n\n\t\tconst colorMap = this._colorMapOverride || this._theme.tokenTheme.getColorMap();\n\t\truleCollector.addRule(generateTokensCSSForColorMap(colorMap));\n\n\t\tthis._themeCSS = cssRules.join('\\n');\n\t\tthis._updateCSS();\n\n\t\tTokenizationRegistry.setColorMap(colorMap);\n\t\tthis._onColorThemeChange.fire(this._theme);\n\t}\n\n\tprivate _updateCSS(): void {\n\t\tthis._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n\t\tthis._styleElements.forEach(styleElement => styleElement.textContent = this._allCSS);\n\t}\n\n\tpublic getFileIconTheme(): IFileIconTheme {\n\t\treturn {\n\t\t\thasFileIcons: false,\n\t\t\thasFolderIcons: false,\n\t\t\thidesExplorerArrows: false\n\t\t};\n\t}\n\n\tpublic getProductIconTheme(): IProductIconTheme {\n\t\treturn this._builtInProductIconTheme;\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
