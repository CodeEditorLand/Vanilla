{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/quickInput/standaloneQuickInputService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './standaloneQuickInput.css';\nimport { Event } from '../../../../base/common/event.js';\nimport { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition, OverlayWidgetPositionPreference } from '../../../browser/editorBrowser.js';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IQuickInputService, IQuickPickItem, IQuickPick, IInputBox, IQuickNavigateConfiguration, IPickOptions, QuickPickInput, IInputOptions, IQuickWidget } from '../../../../platform/quickinput/common/quickInput.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorScopedLayoutService } from '../standaloneLayoutService.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { QuickInputController, IQuickInputControllerHost } from '../../../../platform/quickinput/browser/quickInputController.js';\nimport { QuickInputService } from '../../../../platform/quickinput/browser/quickInputService.js';\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\n\nclass EditorScopedQuickInputService extends QuickInputService {\n\n\tprivate host: IQuickInputControllerHost | undefined = undefined;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(\n\t\t\tinstantiationService,\n\t\t\tcontextKeyService,\n\t\t\tthemeService,\n\t\t\tnew EditorScopedLayoutService(editor.getContainerDomNode(), codeEditorService),\n\t\t\tconfigurationService,\n\t\t);\n\n\t\t// Use the passed in code editor as host for the quick input widget\n\t\tconst contribution = QuickInputEditorContribution.get(editor);\n\t\tif (contribution) {\n\t\t\tconst widget = contribution.widget;\n\t\t\tthis.host = {\n\t\t\t\t_serviceBrand: undefined,\n\t\t\t\tget mainContainer() { return widget.getDomNode(); },\n\t\t\t\tgetContainer() { return widget.getDomNode(); },\n\t\t\t\twhenContainerStylesLoaded() { return undefined; },\n\t\t\t\tget containers() { return [widget.getDomNode()]; },\n\t\t\t\tget activeContainer() { return widget.getDomNode(); },\n\t\t\t\tget mainContainerDimension() { return editor.getLayoutInfo(); },\n\t\t\t\tget activeContainerDimension() { return editor.getLayoutInfo(); },\n\t\t\t\tget onDidLayoutMainContainer() { return editor.onDidLayoutChange; },\n\t\t\t\tget onDidLayoutActiveContainer() { return editor.onDidLayoutChange; },\n\t\t\t\tget onDidLayoutContainer() { return Event.map(editor.onDidLayoutChange, dimension => ({ container: widget.getDomNode(), dimension })); },\n\t\t\t\tget onDidChangeActiveContainer() { return Event.None; },\n\t\t\t\tget onDidAddContainer() { return Event.None; },\n\t\t\t\tget mainContainerOffset() { return { top: 0, quickPickTop: 0 }; },\n\t\t\t\tget activeContainerOffset() { return { top: 0, quickPickTop: 0 }; },\n\t\t\t\tfocus: () => editor.focus()\n\t\t\t};\n\t\t} else {\n\t\t\tthis.host = undefined;\n\t\t}\n\t}\n\n\tprotected override createController(): QuickInputController {\n\t\treturn super.createController(this.host);\n\t}\n}\n\nexport class StandaloneQuickInputService implements IQuickInputService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate mapEditorToService = new Map<ICodeEditor, EditorScopedQuickInputService>();\n\tprivate get activeService(): IQuickInputService {\n\t\tconst editor = this.codeEditorService.getFocusedCodeEditor();\n\t\tif (!editor) {\n\t\t\tthrow new Error('Quick input service needs a focused editor to work.');\n\t\t}\n\n\t\t// Find the quick input implementation for the focused\n\t\t// editor or create it lazily if not yet created\n\t\tlet quickInputService = this.mapEditorToService.get(editor);\n\t\tif (!quickInputService) {\n\t\t\tconst newQuickInputService = quickInputService = this.instantiationService.createInstance(EditorScopedQuickInputService, editor);\n\t\t\tthis.mapEditorToService.set(editor, quickInputService);\n\n\t\t\tcreateSingleCallFunction(editor.onDidDispose)(() => {\n\t\t\t\tnewQuickInputService.dispose();\n\t\t\t\tthis.mapEditorToService.delete(editor);\n\t\t\t});\n\t\t}\n\n\t\treturn quickInputService;\n\t}\n\n\tget currentQuickInput() { return this.activeService.currentQuickInput; }\n\tget quickAccess() { return this.activeService.quickAccess; }\n\tget backButton() { return this.activeService.backButton; }\n\tget onShow() { return this.activeService.onShow; }\n\tget onHide() { return this.activeService.onHide; }\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService\n\t) {\n\t}\n\n\tpick<T extends IQuickPickItem, O extends IPickOptions<T>>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: O, token: CancellationToken = CancellationToken.None): Promise<(O extends { canPickMany: true } ? T[] : T) | undefined> {\n\t\treturn (this.activeService as unknown as QuickInputController /* TS fail */).pick(picks, options, token);\n\t}\n\n\tinput(options?: IInputOptions | undefined, token?: CancellationToken | undefined): Promise<string | undefined> {\n\t\treturn this.activeService.input(options, token);\n\t}\n\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: true }): IQuickPick<T, { useSeparators: true }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options?: { useSeparators: boolean }): IQuickPick<T, { useSeparators: false }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: boolean } = { useSeparators: false }): IQuickPick<T, { useSeparators: boolean }> {\n\t\treturn this.activeService.createQuickPick(options);\n\t}\n\n\tcreateInputBox(): IInputBox {\n\t\treturn this.activeService.createInputBox();\n\t}\n\n\tcreateQuickWidget(): IQuickWidget {\n\t\treturn this.activeService.createQuickWidget();\n\t}\n\n\tfocus(): void {\n\t\treturn this.activeService.focus();\n\t}\n\n\ttoggle(): void {\n\t\treturn this.activeService.toggle();\n\t}\n\n\tnavigate(next: boolean, quickNavigate?: IQuickNavigateConfiguration | undefined): void {\n\t\treturn this.activeService.navigate(next, quickNavigate);\n\t}\n\n\taccept(): Promise<void> {\n\t\treturn this.activeService.accept();\n\t}\n\n\tback(): Promise<void> {\n\t\treturn this.activeService.back();\n\t}\n\n\tcancel(): Promise<void> {\n\t\treturn this.activeService.cancel();\n\t}\n}\n\nexport class QuickInputEditorContribution implements IEditorContribution {\n\n\tstatic readonly ID = 'editor.controller.quickInput';\n\n\tstatic get(editor: ICodeEditor): QuickInputEditorContribution | null {\n\t\treturn editor.getContribution<QuickInputEditorContribution>(QuickInputEditorContribution.ID);\n\t}\n\n\treadonly widget = new QuickInputEditorWidget(this.editor);\n\n\tconstructor(private editor: ICodeEditor) { }\n\n\tdispose(): void {\n\t\tthis.widget.dispose();\n\t}\n}\n\nexport class QuickInputEditorWidget implements IOverlayWidget {\n\n\tprivate static readonly ID = 'editor.contrib.quickInputWidget';\n\n\tprivate domNode: HTMLElement;\n\n\tconstructor(private codeEditor: ICodeEditor) {\n\t\tthis.domNode = document.createElement('div');\n\n\t\tthis.codeEditor.addOverlayWidget(this);\n\t}\n\n\tgetId(): string {\n\t\treturn QuickInputEditorWidget.ID;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\t\treturn { preference: OverlayWidgetPositionPreference.TOP_CENTER };\n\t}\n\n\tdispose(): void {\n\t\tthis.codeEditor.removeOverlayWidget(this);\n\t}\n}\n\nregisterEditorContribution(QuickInputEditorContribution.ID, QuickInputEditorContribution, EditorContributionInstantiation.Lazy);\n"],
  "mappings": "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",
  "names": []
}
