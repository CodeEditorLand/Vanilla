{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/quickInput/standaloneQuickInputService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./standaloneQuickInput.css\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport { createSingleCallFunction } from \"../../../../base/common/functional.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tIQuickInputControllerHost,\n\tQuickInputController,\n} from \"../../../../platform/quickinput/browser/quickInputController.js\";\nimport { QuickInputService } from \"../../../../platform/quickinput/browser/quickInputService.js\";\nimport type {\n\tIInputBox,\n\tIInputOptions,\n\tIPickOptions,\n\tIQuickInputService,\n\tIQuickNavigateConfiguration,\n\tIQuickPick,\n\tIQuickPickItem,\n\tIQuickWidget,\n\tQuickPickInput,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IOverlayWidget,\n\ttype IOverlayWidgetPosition,\n\tOverlayWidgetPositionPreference,\n} from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorContributionInstantiation,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../browser/services/codeEditorService.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport { EditorScopedLayoutService } from \"../standaloneLayoutService.js\";\n\nclass EditorScopedQuickInputService extends QuickInputService {\n\tprivate host: IQuickInputControllerHost | undefined = undefined;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(\n\t\t\tinstantiationService,\n\t\t\tcontextKeyService,\n\t\t\tthemeService,\n\t\t\tnew EditorScopedLayoutService(\n\t\t\t\teditor.getContainerDomNode(),\n\t\t\t\tcodeEditorService,\n\t\t\t),\n\t\t\tconfigurationService,\n\t\t);\n\n\t\t// Use the passed in code editor as host for the quick input widget\n\t\tconst contribution = QuickInputEditorContribution.get(editor);\n\t\tif (contribution) {\n\t\t\tconst widget = contribution.widget;\n\t\t\tthis.host = {\n\t\t\t\t_serviceBrand: undefined,\n\t\t\t\tget mainContainer() {\n\t\t\t\t\treturn widget.getDomNode();\n\t\t\t\t},\n\t\t\t\tgetContainer() {\n\t\t\t\t\treturn widget.getDomNode();\n\t\t\t\t},\n\t\t\t\twhenContainerStylesLoaded() {\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tget containers() {\n\t\t\t\t\treturn [widget.getDomNode()];\n\t\t\t\t},\n\t\t\t\tget activeContainer() {\n\t\t\t\t\treturn widget.getDomNode();\n\t\t\t\t},\n\t\t\t\tget mainContainerDimension() {\n\t\t\t\t\treturn editor.getLayoutInfo();\n\t\t\t\t},\n\t\t\t\tget activeContainerDimension() {\n\t\t\t\t\treturn editor.getLayoutInfo();\n\t\t\t\t},\n\t\t\t\tget onDidLayoutMainContainer() {\n\t\t\t\t\treturn editor.onDidLayoutChange;\n\t\t\t\t},\n\t\t\t\tget onDidLayoutActiveContainer() {\n\t\t\t\t\treturn editor.onDidLayoutChange;\n\t\t\t\t},\n\t\t\t\tget onDidLayoutContainer() {\n\t\t\t\t\treturn Event.map(editor.onDidLayoutChange, (dimension) => ({\n\t\t\t\t\t\tcontainer: widget.getDomNode(),\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t}));\n\t\t\t\t},\n\t\t\t\tget onDidChangeActiveContainer() {\n\t\t\t\t\treturn Event.None;\n\t\t\t\t},\n\t\t\t\tget onDidAddContainer() {\n\t\t\t\t\treturn Event.None;\n\t\t\t\t},\n\t\t\t\tget mainContainerOffset() {\n\t\t\t\t\treturn { top: 0, quickPickTop: 0 };\n\t\t\t\t},\n\t\t\t\tget activeContainerOffset() {\n\t\t\t\t\treturn { top: 0, quickPickTop: 0 };\n\t\t\t\t},\n\t\t\t\tfocus: () => editor.focus(),\n\t\t\t};\n\t\t} else {\n\t\t\tthis.host = undefined;\n\t\t}\n\t}\n\n\tprotected override createController(): QuickInputController {\n\t\treturn super.createController(this.host);\n\t}\n}\n\nexport class StandaloneQuickInputService implements IQuickInputService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate mapEditorToService = new Map<\n\t\tICodeEditor,\n\t\tEditorScopedQuickInputService\n\t>();\n\tprivate get activeService(): IQuickInputService {\n\t\tconst editor = this.codeEditorService.getFocusedCodeEditor();\n\t\tif (!editor) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Quick input service needs a focused editor to work.\",\n\t\t\t);\n\t\t}\n\n\t\t// Find the quick input implementation for the focused\n\t\t// editor or create it lazily if not yet created\n\t\tlet quickInputService = this.mapEditorToService.get(editor);\n\t\tif (!quickInputService) {\n\t\t\tconst newQuickInputService = (quickInputService =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tEditorScopedQuickInputService,\n\t\t\t\t\teditor,\n\t\t\t\t));\n\t\t\tthis.mapEditorToService.set(editor, quickInputService);\n\n\t\t\tcreateSingleCallFunction(editor.onDidDispose)(() => {\n\t\t\t\tnewQuickInputService.dispose();\n\t\t\t\tthis.mapEditorToService.delete(editor);\n\t\t\t});\n\t\t}\n\n\t\treturn quickInputService;\n\t}\n\n\tget currentQuickInput() {\n\t\treturn this.activeService.currentQuickInput;\n\t}\n\tget quickAccess() {\n\t\treturn this.activeService.quickAccess;\n\t}\n\tget backButton() {\n\t\treturn this.activeService.backButton;\n\t}\n\tget onShow() {\n\t\treturn this.activeService.onShow;\n\t}\n\tget onHide() {\n\t\treturn this.activeService.onHide;\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService\n\t) {\n\t}\n\n\tpick<T extends IQuickPickItem, O extends IPickOptions<T>>(\n\t\tpicks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[],\n\t\toptions?: O,\n\t\ttoken: CancellationToken = CancellationToken.None,\n\t): Promise<(O extends { canPickMany: true } ? T[] : T) | undefined> {\n\t\treturn (\n\t\t\tthis.activeService as unknown as QuickInputController\n\t\t) /* TS fail */\n\t\t\t.pick(picks, options, token);\n\t}\n\n\tinput(\n\t\toptions?: IInputOptions | undefined,\n\t\ttoken?: CancellationToken | undefined,\n\t): Promise<string | undefined> {\n\t\treturn this.activeService.input(options, token);\n\t}\n\n\tcreateQuickPick<T extends IQuickPickItem>(options: {\n\t\tuseSeparators: true;\n\t}): IQuickPick<T, { useSeparators: true }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options?: {\n\t\tuseSeparators: boolean;\n\t}): IQuickPick<T, { useSeparators: false }>;\n\tcreateQuickPick<T extends IQuickPickItem>(\n\t\toptions: { useSeparators: boolean } = { useSeparators: false },\n\t): IQuickPick<T, { useSeparators: boolean }> {\n\t\treturn this.activeService.createQuickPick(options);\n\t}\n\n\tcreateInputBox(): IInputBox {\n\t\treturn this.activeService.createInputBox();\n\t}\n\n\tcreateQuickWidget(): IQuickWidget {\n\t\treturn this.activeService.createQuickWidget();\n\t}\n\n\tfocus(): void {\n\t\treturn this.activeService.focus();\n\t}\n\n\ttoggle(): void {\n\t\treturn this.activeService.toggle();\n\t}\n\n\tnavigate(\n\t\tnext: boolean,\n\t\tquickNavigate?: IQuickNavigateConfiguration | undefined,\n\t): void {\n\t\treturn this.activeService.navigate(next, quickNavigate);\n\t}\n\n\taccept(): Promise<void> {\n\t\treturn this.activeService.accept();\n\t}\n\n\tback(): Promise<void> {\n\t\treturn this.activeService.back();\n\t}\n\n\tcancel(): Promise<void> {\n\t\treturn this.activeService.cancel();\n\t}\n}\n\nexport class QuickInputEditorContribution implements IEditorContribution {\n\tstatic readonly ID = \"editor.controller.quickInput\";\n\n\tstatic get(editor: ICodeEditor): QuickInputEditorContribution | null {\n\t\treturn editor.getContribution<QuickInputEditorContribution>(\n\t\t\tQuickInputEditorContribution.ID,\n\t\t);\n\t}\n\n\treadonly widget = new QuickInputEditorWidget(this.editor);\n\n\tconstructor(private editor: ICodeEditor) {}\n\n\tdispose(): void {\n\t\tthis.widget.dispose();\n\t}\n}\n\nexport class QuickInputEditorWidget implements IOverlayWidget {\n\tprivate static readonly ID = \"editor.contrib.quickInputWidget\";\n\n\tprivate domNode: HTMLElement;\n\n\tconstructor(private codeEditor: ICodeEditor) {\n\t\tthis.domNode = document.createElement(\"div\");\n\n\t\tthis.codeEditor.addOverlayWidget(this);\n\t}\n\n\tgetId(): string {\n\t\treturn QuickInputEditorWidget.ID;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\t\treturn { preference: OverlayWidgetPositionPreference.TOP_CENTER };\n\t}\n\n\tdispose(): void {\n\t\tthis.codeEditor.removeOverlayWidget(this);\n\t}\n}\n\nregisterEditorContribution(\n\tQuickInputEditorContribution.ID,\n\tQuickInputEditorContribution,\n\tEditorContributionInstantiation.Lazy,\n);\n"],
  "mappings": "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",
  "names": []
}
