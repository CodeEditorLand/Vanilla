{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/standaloneCodeEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as aria from '../../../base/browser/ui/aria/aria.js';\nimport { Disposable, IDisposable, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ICodeEditor, IDiffEditor, IDiffEditorConstructionOptions } from '../../browser/editorBrowser.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { CodeEditorWidget } from '../../browser/widget/codeEditor/codeEditorWidget.js';\nimport { IDiffEditorOptions, IEditorOptions } from '../../common/config/editorOptions.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport { IModelChangedEvent } from '../../common/editorCommon.js';\nimport { ITextModel } from '../../common/model.js';\nimport { StandaloneKeybindingService, updateConfigurationService } from './standaloneServices.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { IMenuItem, MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandHandler, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, ContextKeyValue, IContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { StandaloneCodeEditorNLS } from '../../common/standaloneStrings.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ILanguageSelection, ILanguageService } from '../../common/languages/language.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { StandaloneCodeEditorService } from './standaloneCodeEditorService.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../common/languages/modesRegistry.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { IEditorConstructionOptions } from '../../browser/config/editorConfiguration.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { DiffEditorWidget } from '../../browser/widget/diffEditor/diffEditorWidget.js';\nimport { IAccessibilitySignalService } from '../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { setHoverDelegateFactory } from '../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IHoverService, WorkbenchHoverDelegate } from '../../../platform/hover/browser/hover.js';\nimport { setBaseLayerHoverDelegate } from '../../../base/browser/ui/hover/hoverDelegate2.js';\n\n/**\n * Description of an action contribution\n */\nexport interface IActionDescriptor {\n\t/**\n\t * An unique identifier of the contributed action.\n\t */\n\tid: string;\n\t/**\n\t * A label of the action that will be presented to the user.\n\t */\n\tlabel: string;\n\t/**\n\t * Precondition rule. The value should be a [context key expression](https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts).\n\t */\n\tprecondition?: string;\n\t/**\n\t * An array of keybindings for the action.\n\t */\n\tkeybindings?: number[];\n\t/**\n\t * The keybinding rule (condition on top of precondition).\n\t */\n\tkeybindingContext?: string;\n\t/**\n\t * Control if the action should show up in the context menu and where.\n\t * The context menu of the editor has these default:\n\t *   navigation - The navigation group comes first in all cases.\n\t *   1_modification - This group comes next and contains commands that modify your code.\n\t *   9_cutcopypaste - The last default group with the basic editing commands.\n\t * You can also create your own group.\n\t * Defaults to null (don't show in context menu).\n\t */\n\tcontextMenuGroupId?: string;\n\t/**\n\t * Control the order in the context menu group.\n\t */\n\tcontextMenuOrder?: number;\n\t/**\n\t * Method that will be executed when the action is triggered.\n\t * @param editor The editor instance is passed in as a convenience\n\t */\n\trun(editor: ICodeEditor, ...args: any[]): void | Promise<void>;\n}\n\n/**\n * Options which apply for all editors.\n */\nexport interface IGlobalEditorOptions {\n\t/**\n\t * The number of spaces a tab is equal to.\n\t * This setting is overridden based on the file contents when `detectIndentation` is on.\n\t * Defaults to 4.\n\t */\n\ttabSize?: number;\n\t/**\n\t * Insert spaces when pressing `Tab`.\n\t * This setting is overridden based on the file contents when `detectIndentation` is on.\n\t * Defaults to true.\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * Controls whether `tabSize` and `insertSpaces` will be automatically detected when a file is opened based on the file contents.\n\t * Defaults to true.\n\t */\n\tdetectIndentation?: boolean;\n\t/**\n\t * Remove trailing auto inserted whitespace.\n\t * Defaults to true.\n\t */\n\ttrimAutoWhitespace?: boolean;\n\t/**\n\t * Special handling for large files to disable certain memory intensive features.\n\t * Defaults to true.\n\t */\n\tlargeFileOptimizations?: boolean;\n\t/**\n\t * Controls whether completions should be computed based on words in the document.\n\t * Defaults to true.\n\t */\n\twordBasedSuggestions?: 'off' | 'currentDocument' | 'matchingDocuments' | 'allDocuments';\n\t/**\n\t * Controls whether word based completions should be included from opened documents of the same language or any language.\n\t */\n\twordBasedSuggestionsOnlySameLanguage?: boolean;\n\t/**\n\t * Controls whether the semanticHighlighting is shown for the languages that support it.\n\t * true: semanticHighlighting is enabled for all themes\n\t * false: semanticHighlighting is disabled for all themes\n\t * 'configuredByTheme': semanticHighlighting is controlled by the current color theme's semanticHighlighting setting.\n\t * Defaults to 'byTheme'.\n\t */\n\t'semanticHighlighting.enabled'?: true | false | 'configuredByTheme';\n\t/**\n\t * Keep peek editors open even when double-clicking their content or when hitting `Escape`.\n\t * Defaults to false.\n\t */\n\tstablePeek?: boolean;\n\t/**\n\t * Lines above this length will not be tokenized for performance reasons.\n\t * Defaults to 20000.\n\t */\n\tmaxTokenizationLineLength?: number;\n\t/**\n\t * Theme to be used for rendering.\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light'.\n\t * You can create custom themes via `monaco.editor.defineTheme`.\n\t * To switch a theme, use `monaco.editor.setTheme`.\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\n\t */\n\ttheme?: string;\n\t/**\n\t * If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme.\n\t * Defaults to true.\n\t */\n\tautoDetectHighContrast?: boolean;\n}\n\n/**\n * The options to create an editor.\n */\nexport interface IStandaloneEditorConstructionOptions extends IEditorConstructionOptions, IGlobalEditorOptions {\n\t/**\n\t * The initial model associated with this code editor.\n\t */\n\tmodel?: ITextModel | null;\n\t/**\n\t * The initial value of the auto created model in the editor.\n\t * To not automatically create a model, use `model: null`.\n\t */\n\tvalue?: string;\n\t/**\n\t * The initial language of the auto created model in the editor.\n\t * To not automatically create a model, use `model: null`.\n\t */\n\tlanguage?: string;\n\t/**\n\t * Initial theme to be used for rendering.\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light.\n\t * You can create custom themes via `monaco.editor.defineTheme`.\n\t * To switch a theme, use `monaco.editor.setTheme`.\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\n\t */\n\ttheme?: string;\n\t/**\n\t * If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme.\n\t * Defaults to true.\n\t */\n\tautoDetectHighContrast?: boolean;\n\t/**\n\t * An URL to open when Ctrl+H (Windows and Linux) or Cmd+H (OSX) is pressed in\n\t * the accessibility help dialog in the editor.\n\t *\n\t * Defaults to \"https://go.microsoft.com/fwlink/?linkid=852450\"\n\t */\n\taccessibilityHelpUrl?: string;\n\t/**\n\t * Container element to use for ARIA messages.\n\t * Defaults to document.body.\n\t */\n\tariaContainerElement?: HTMLElement;\n}\n\n/**\n * The options to create a diff editor.\n */\nexport interface IStandaloneDiffEditorConstructionOptions extends IDiffEditorConstructionOptions {\n\t/**\n\t * Initial theme to be used for rendering.\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light.\n\t * You can create custom themes via `monaco.editor.defineTheme`.\n\t * To switch a theme, use `monaco.editor.setTheme`.\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\n\t */\n\ttheme?: string;\n\t/**\n\t * If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme.\n\t * Defaults to true.\n\t */\n\tautoDetectHighContrast?: boolean;\n}\n\nexport interface IStandaloneCodeEditor extends ICodeEditor {\n\tupdateOptions(newOptions: IEditorOptions & IGlobalEditorOptions): void;\n\taddCommand(keybinding: number, handler: ICommandHandler, context?: string): string | null;\n\tcreateContextKey<T extends ContextKeyValue = ContextKeyValue>(key: string, defaultValue: T): IContextKey<T>;\n\taddAction(descriptor: IActionDescriptor): IDisposable;\n}\n\nexport interface IStandaloneDiffEditor extends IDiffEditor {\n\taddCommand(keybinding: number, handler: ICommandHandler, context?: string): string | null;\n\tcreateContextKey<T extends ContextKeyValue = ContextKeyValue>(key: string, defaultValue: T): IContextKey<T>;\n\taddAction(descriptor: IActionDescriptor): IDisposable;\n\n\tgetOriginalEditor(): IStandaloneCodeEditor;\n\tgetModifiedEditor(): IStandaloneCodeEditor;\n}\n\nlet LAST_GENERATED_COMMAND_ID = 0;\n\nlet ariaDomNodeCreated = false;\n/**\n * Create ARIA dom node inside parent,\n * or only for the first editor instantiation inside document.body.\n * @param parent container element for ARIA dom node\n */\nfunction createAriaDomNode(parent: HTMLElement | undefined) {\n\tif (!parent) {\n\t\tif (ariaDomNodeCreated) {\n\t\t\treturn;\n\t\t}\n\t\tariaDomNodeCreated = true;\n\t}\n\taria.setARIAContainer(parent || mainWindow.document.body);\n}\n\n/**\n * A code editor to be used both by the standalone editor and the standalone diff editor.\n */\nexport class StandaloneCodeEditor extends CodeEditorWidget implements IStandaloneCodeEditor {\n\n\tprivate readonly _standaloneKeybindingService: StandaloneKeybindingService | null;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\t_options: Readonly<IStandaloneEditorConstructionOptions>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tconst options = { ..._options };\n\t\toptions.ariaLabel = options.ariaLabel || StandaloneCodeEditorNLS.editorViewAccessibleLabel;\n\t\tsuper(domElement, options, {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n\n\t\tif (keybindingService instanceof StandaloneKeybindingService) {\n\t\t\tthis._standaloneKeybindingService = keybindingService;\n\t\t} else {\n\t\t\tthis._standaloneKeybindingService = null;\n\t\t}\n\n\t\tcreateAriaDomNode(options.ariaContainerElement);\n\n\t\tsetHoverDelegateFactory((placement, enableInstantHover) => instantiationService.createInstance(WorkbenchHoverDelegate, placement, enableInstantHover, {}));\n\t\tsetBaseLayerHoverDelegate(hoverService);\n\t}\n\n\tpublic addCommand(keybinding: number, handler: ICommandHandler, context?: string): string | null {\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot add command because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn null;\n\t\t}\n\t\tconst commandId = 'DYNAMIC_' + (++LAST_GENERATED_COMMAND_ID);\n\t\tconst whenExpression = ContextKeyExpr.deserialize(context);\n\t\tthis._standaloneKeybindingService.addDynamicKeybinding(commandId, keybinding, handler, whenExpression);\n\t\treturn commandId;\n\t}\n\n\tpublic createContextKey<T extends ContextKeyValue = ContextKeyValue>(key: string, defaultValue: T): IContextKey<T> {\n\t\treturn this._contextKeyService.createKey(key, defaultValue);\n\t}\n\n\tpublic addAction(_descriptor: IActionDescriptor): IDisposable {\n\t\tif ((typeof _descriptor.id !== 'string') || (typeof _descriptor.label !== 'string') || (typeof _descriptor.run !== 'function')) {\n\t\t\tthrow new Error('Invalid action descriptor, `id`, `label` and `run` are required properties!');\n\t\t}\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\t// Read descriptor options\n\t\tconst id = _descriptor.id;\n\t\tconst label = _descriptor.label;\n\t\tconst precondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals('editorId', this.getId()),\n\t\t\tContextKeyExpr.deserialize(_descriptor.precondition)\n\t\t);\n\t\tconst keybindings = _descriptor.keybindings;\n\t\tconst keybindingsWhen = ContextKeyExpr.and(\n\t\t\tprecondition,\n\t\t\tContextKeyExpr.deserialize(_descriptor.keybindingContext)\n\t\t);\n\t\tconst contextMenuGroupId = _descriptor.contextMenuGroupId || null;\n\t\tconst contextMenuOrder = _descriptor.contextMenuOrder || 0;\n\t\tconst run = (_accessor?: ServicesAccessor, ...args: any[]): Promise<void> => {\n\t\t\treturn Promise.resolve(_descriptor.run(this, ...args));\n\t\t};\n\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\t// Generate a unique id to allow the same descriptor.id across multiple editor instances\n\t\tconst uniqueId = this.getId() + ':' + id;\n\n\t\t// Register the command\n\t\ttoDispose.add(CommandsRegistry.registerCommand(uniqueId, run));\n\n\t\t// Register the context menu item\n\t\tif (contextMenuGroupId) {\n\t\t\tconst menuItem: IMenuItem = {\n\t\t\t\tcommand: {\n\t\t\t\t\tid: uniqueId,\n\t\t\t\t\ttitle: label\n\t\t\t\t},\n\t\t\t\twhen: precondition,\n\t\t\t\tgroup: contextMenuGroupId,\n\t\t\t\torder: contextMenuOrder\n\t\t\t};\n\t\t\ttoDispose.add(MenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem));\n\t\t}\n\n\t\t// Register the keybindings\n\t\tif (Array.isArray(keybindings)) {\n\t\t\tfor (const kb of keybindings) {\n\t\t\t\ttoDispose.add(this._standaloneKeybindingService.addDynamicKeybinding(uniqueId, kb, run, keybindingsWhen));\n\t\t\t}\n\t\t}\n\n\t\t// Finally, register an internal editor action\n\t\tconst internalAction = new InternalEditorAction(\n\t\t\tuniqueId,\n\t\t\tlabel,\n\t\t\tlabel,\n\t\t\tundefined,\n\t\t\tprecondition,\n\t\t\t(...args: unknown[]) => Promise.resolve(_descriptor.run(this, ...args)),\n\t\t\tthis._contextKeyService\n\t\t);\n\n\t\t// Store it under the original id, such that trigger with the original id will work\n\t\tthis._actions.set(id, internalAction);\n\t\ttoDispose.add(toDisposable(() => {\n\t\t\tthis._actions.delete(id);\n\t\t}));\n\n\t\treturn toDispose;\n\t}\n\n\tprotected override _triggerCommand(handlerId: string, payload: any): void {\n\t\tif (this._codeEditorService instanceof StandaloneCodeEditorService) {\n\t\t\t// Help commands find this editor as the active editor\n\t\t\ttry {\n\t\t\t\tthis._codeEditorService.setActiveCodeEditor(this);\n\t\t\t\tsuper._triggerCommand(handlerId, payload);\n\t\t\t} finally {\n\t\t\t\tthis._codeEditorService.setActiveCodeEditor(null);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper._triggerCommand(handlerId, payload);\n\t\t}\n\t}\n}\n\nexport class StandaloneEditor extends StandaloneCodeEditor implements IStandaloneCodeEditor {\n\n\tprivate readonly _configurationService: IConfigurationService;\n\tprivate readonly _standaloneThemeService: IStandaloneThemeService;\n\tprivate _ownsModel: boolean;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\t_options: Readonly<IStandaloneEditorConstructionOptions> | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IStandaloneThemeService themeService: IStandaloneThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@IModelService modelService: IModelService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tconst options = { ..._options };\n\t\tupdateConfigurationService(configurationService, options, false);\n\t\tconst themeDomRegistration = (<StandaloneThemeService>themeService).registerEditorContainer(domElement);\n\t\tif (typeof options.theme === 'string') {\n\t\t\tthemeService.setTheme(options.theme);\n\t\t}\n\t\tif (typeof options.autoDetectHighContrast !== 'undefined') {\n\t\t\tthemeService.setAutoDetectHighContrast(Boolean(options.autoDetectHighContrast));\n\t\t}\n\t\tconst _model: ITextModel | null | undefined = options.model;\n\t\tdelete options.model;\n\t\tsuper(domElement, options, instantiationService, codeEditorService, commandService, contextKeyService, hoverService, keybindingService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n\n\t\tthis._configurationService = configurationService;\n\t\tthis._standaloneThemeService = themeService;\n\t\tthis._register(themeDomRegistration);\n\n\t\tlet model: ITextModel | null;\n\t\tif (typeof _model === 'undefined') {\n\t\t\tconst languageId = languageService.getLanguageIdByMimeType(options.language) || options.language || PLAINTEXT_LANGUAGE_ID;\n\t\t\tmodel = createTextModel(modelService, languageService, options.value || '', languageId, undefined);\n\t\t\tthis._ownsModel = true;\n\t\t} else {\n\t\t\tmodel = _model;\n\t\t\tthis._ownsModel = false;\n\t\t}\n\n\t\tthis._attachModel(model);\n\t\tif (model) {\n\t\t\tconst e: IModelChangedEvent = {\n\t\t\t\toldModelUrl: null,\n\t\t\t\tnewModelUrl: model.uri\n\t\t\t};\n\t\t\tthis._onDidChangeModel.fire(e);\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic override updateOptions(newOptions: Readonly<IEditorOptions & IGlobalEditorOptions>): void {\n\t\tupdateConfigurationService(this._configurationService, newOptions, false);\n\t\tif (typeof newOptions.theme === 'string') {\n\t\t\tthis._standaloneThemeService.setTheme(newOptions.theme);\n\t\t}\n\t\tif (typeof newOptions.autoDetectHighContrast !== 'undefined') {\n\t\t\tthis._standaloneThemeService.setAutoDetectHighContrast(Boolean(newOptions.autoDetectHighContrast));\n\t\t}\n\t\tsuper.updateOptions(newOptions);\n\t}\n\n\tprotected override _postDetachModelCleanup(detachedModel: ITextModel): void {\n\t\tsuper._postDetachModelCleanup(detachedModel);\n\t\tif (detachedModel && this._ownsModel) {\n\t\t\tdetachedModel.dispose();\n\t\t\tthis._ownsModel = false;\n\t\t}\n\t}\n}\n\nexport class StandaloneDiffEditor2 extends DiffEditorWidget implements IStandaloneDiffEditor {\n\n\tprivate readonly _configurationService: IConfigurationService;\n\tprivate readonly _standaloneThemeService: IStandaloneThemeService;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\t_options: Readonly<IStandaloneDiffEditorConstructionOptions> | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IStandaloneThemeService themeService: IStandaloneThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IEditorProgressService editorProgressService: IEditorProgressService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@IAccessibilitySignalService accessibilitySignalService: IAccessibilitySignalService,\n\t) {\n\t\tconst options = { ..._options };\n\t\tupdateConfigurationService(configurationService, options, true);\n\t\tconst themeDomRegistration = (<StandaloneThemeService>themeService).registerEditorContainer(domElement);\n\t\tif (typeof options.theme === 'string') {\n\t\t\tthemeService.setTheme(options.theme);\n\t\t}\n\t\tif (typeof options.autoDetectHighContrast !== 'undefined') {\n\t\t\tthemeService.setAutoDetectHighContrast(Boolean(options.autoDetectHighContrast));\n\t\t}\n\n\t\tsuper(\n\t\t\tdomElement,\n\t\t\toptions,\n\t\t\t{},\n\t\t\tcontextKeyService,\n\t\t\tinstantiationService,\n\t\t\tcodeEditorService,\n\t\t\taccessibilitySignalService,\n\t\t\teditorProgressService,\n\t\t);\n\n\t\tthis._configurationService = configurationService;\n\t\tthis._standaloneThemeService = themeService;\n\n\t\tthis._register(themeDomRegistration);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic override updateOptions(newOptions: Readonly<IDiffEditorOptions & IGlobalEditorOptions>): void {\n\t\tupdateConfigurationService(this._configurationService, newOptions, true);\n\t\tif (typeof newOptions.theme === 'string') {\n\t\t\tthis._standaloneThemeService.setTheme(newOptions.theme);\n\t\t}\n\t\tif (typeof newOptions.autoDetectHighContrast !== 'undefined') {\n\t\t\tthis._standaloneThemeService.setAutoDetectHighContrast(Boolean(newOptions.autoDetectHighContrast));\n\t\t}\n\t\tsuper.updateOptions(newOptions);\n\t}\n\n\tprotected override _createInnerEditor(instantiationService: IInstantiationService, container: HTMLElement, options: Readonly<IEditorOptions>): CodeEditorWidget {\n\t\treturn instantiationService.createInstance(StandaloneCodeEditor, container, options);\n\t}\n\n\tpublic override getOriginalEditor(): IStandaloneCodeEditor {\n\t\treturn <StandaloneCodeEditor>super.getOriginalEditor();\n\t}\n\n\tpublic override getModifiedEditor(): IStandaloneCodeEditor {\n\t\treturn <StandaloneCodeEditor>super.getModifiedEditor();\n\t}\n\n\tpublic addCommand(keybinding: number, handler: ICommandHandler, context?: string): string | null {\n\t\treturn this.getModifiedEditor().addCommand(keybinding, handler, context);\n\t}\n\n\tpublic createContextKey<T extends ContextKeyValue = ContextKeyValue>(key: string, defaultValue: T): IContextKey<T> {\n\t\treturn this.getModifiedEditor().createContextKey(key, defaultValue);\n\t}\n\n\tpublic addAction(descriptor: IActionDescriptor): IDisposable {\n\t\treturn this.getModifiedEditor().addAction(descriptor);\n\t}\n}\n\n/**\n * @internal\n */\nexport function createTextModel(modelService: IModelService, languageService: ILanguageService, value: string, languageId: string | undefined, uri: URI | undefined): ITextModel {\n\tvalue = value || '';\n\tif (!languageId) {\n\t\tconst firstLF = value.indexOf('\\n');\n\t\tlet firstLine = value;\n\t\tif (firstLF !== -1) {\n\t\t\tfirstLine = value.substring(0, firstLF);\n\t\t}\n\t\treturn doCreateModel(modelService, value, languageService.createByFilepathOrFirstLine(uri || null, firstLine), uri);\n\t}\n\treturn doCreateModel(modelService, value, languageService.createById(languageId), uri);\n}\n\n/**\n * @internal\n */\nfunction doCreateModel(modelService: IModelService, value: string, languageSelection: ILanguageSelection, uri: URI | undefined): ITextModel {\n\treturn modelService.createModel(value, languageSelection, uri);\n}\n"],
  "mappings": "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",
  "names": []
}
