{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/standaloneCodeEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as aria from \"../../../base/browser/ui/aria/aria.js\";\nimport { setBaseLayerHoverDelegate } from \"../../../base/browser/ui/hover/hoverDelegate2.js\";\nimport { setHoverDelegateFactory } from \"../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { mainWindow } from \"../../../base/browser/window.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { IAccessibilityService } from \"../../../platform/accessibility/common/accessibility.js\";\nimport { IAccessibilitySignalService } from \"../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport {\n\ttype IMenuItem,\n\tMenuId,\n\tMenuRegistry,\n} from \"../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../platform/clipboard/common/clipboardService.js\";\nimport {\n\tCommandsRegistry,\n\ttype ICommandHandler,\n\tICommandService,\n} from \"../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyValue,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../platform/contextview/browser/contextView.js\";\nimport {\n\tIHoverService,\n\tWorkbenchHoverDelegate,\n} from \"../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../platform/keybinding/common/keybinding.js\";\nimport { INotificationService } from \"../../../platform/notification/common/notification.js\";\nimport { IEditorProgressService } from \"../../../platform/progress/common/progress.js\";\nimport { IThemeService } from \"../../../platform/theme/common/themeService.js\";\nimport type { IEditorConstructionOptions } from \"../../browser/config/editorConfiguration.js\";\nimport type {\n\tICodeEditor,\n\tIDiffEditor,\n\tIDiffEditorConstructionOptions,\n} from \"../../browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../browser/services/codeEditorService.js\";\nimport { CodeEditorWidget } from \"../../browser/widget/codeEditor/codeEditorWidget.js\";\nimport { DiffEditorWidget } from \"../../browser/widget/diffEditor/diffEditorWidget.js\";\nimport type {\n\tIDiffEditorOptions,\n\tIEditorOptions,\n} from \"../../common/config/editorOptions.js\";\nimport { InternalEditorAction } from \"../../common/editorAction.js\";\nimport type { IModelChangedEvent } from \"../../common/editorCommon.js\";\nimport {\n\ttype ILanguageSelection,\n\tILanguageService,\n} from \"../../common/languages/language.js\";\nimport { ILanguageConfigurationService } from \"../../common/languages/languageConfigurationRegistry.js\";\nimport { PLAINTEXT_LANGUAGE_ID } from \"../../common/languages/modesRegistry.js\";\nimport type { ITextModel } from \"../../common/model.js\";\nimport { ILanguageFeaturesService } from \"../../common/services/languageFeatures.js\";\nimport { IModelService } from \"../../common/services/model.js\";\nimport { StandaloneCodeEditorNLS } from \"../../common/standaloneStrings.js\";\nimport { IStandaloneThemeService } from \"../common/standaloneTheme.js\";\nimport { StandaloneCodeEditorService } from \"./standaloneCodeEditorService.js\";\nimport {\n\tStandaloneKeybindingService,\n\tupdateConfigurationService,\n} from \"./standaloneServices.js\";\nimport type { StandaloneThemeService } from \"./standaloneThemeService.js\";\n\n/**\n * Description of an action contribution\n */\nexport interface IActionDescriptor {\n\t/**\n\t * An unique identifier of the contributed action.\n\t */\n\tid: string;\n\t/**\n\t * A label of the action that will be presented to the user.\n\t */\n\tlabel: string;\n\t/**\n\t * Precondition rule. The value should be a [context key expression](https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts).\n\t */\n\tprecondition?: string;\n\t/**\n\t * An array of keybindings for the action.\n\t */\n\tkeybindings?: number[];\n\t/**\n\t * The keybinding rule (condition on top of precondition).\n\t */\n\tkeybindingContext?: string;\n\t/**\n\t * Control if the action should show up in the context menu and where.\n\t * The context menu of the editor has these default:\n\t *   navigation - The navigation group comes first in all cases.\n\t *   1_modification - This group comes next and contains commands that modify your code.\n\t *   9_cutcopypaste - The last default group with the basic editing commands.\n\t * You can also create your own group.\n\t * Defaults to null (don't show in context menu).\n\t */\n\tcontextMenuGroupId?: string;\n\t/**\n\t * Control the order in the context menu group.\n\t */\n\tcontextMenuOrder?: number;\n\t/**\n\t * Method that will be executed when the action is triggered.\n\t * @param editor The editor instance is passed in as a convenience\n\t */\n\trun(editor: ICodeEditor, ...args: any[]): void | Promise<void>;\n}\n\n/**\n * Options which apply for all editors.\n */\nexport interface IGlobalEditorOptions {\n\t/**\n\t * The number of spaces a tab is equal to.\n\t * This setting is overridden based on the file contents when `detectIndentation` is on.\n\t * Defaults to 4.\n\t */\n\ttabSize?: number;\n\t/**\n\t * Insert spaces when pressing `Tab`.\n\t * This setting is overridden based on the file contents when `detectIndentation` is on.\n\t * Defaults to true.\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * Controls whether `tabSize` and `insertSpaces` will be automatically detected when a file is opened based on the file contents.\n\t * Defaults to true.\n\t */\n\tdetectIndentation?: boolean;\n\t/**\n\t * Remove trailing auto inserted whitespace.\n\t * Defaults to true.\n\t */\n\ttrimAutoWhitespace?: boolean;\n\t/**\n\t * Special handling for large files to disable certain memory intensive features.\n\t * Defaults to true.\n\t */\n\tlargeFileOptimizations?: boolean;\n\t/**\n\t * Controls whether completions should be computed based on words in the document.\n\t * Defaults to true.\n\t */\n\twordBasedSuggestions?:\n\t\t| \"off\"\n\t\t| \"currentDocument\"\n\t\t| \"matchingDocuments\"\n\t\t| \"allDocuments\";\n\t/**\n\t * Controls whether word based completions should be included from opened documents of the same language or any language.\n\t */\n\twordBasedSuggestionsOnlySameLanguage?: boolean;\n\t/**\n\t * Controls whether the semanticHighlighting is shown for the languages that support it.\n\t * true: semanticHighlighting is enabled for all themes\n\t * false: semanticHighlighting is disabled for all themes\n\t * 'configuredByTheme': semanticHighlighting is controlled by the current color theme's semanticHighlighting setting.\n\t * Defaults to 'byTheme'.\n\t */\n\t\"semanticHighlighting.enabled\"?: true | false | \"configuredByTheme\";\n\t/**\n\t * Keep peek editors open even when double-clicking their content or when hitting `Escape`.\n\t * Defaults to false.\n\t */\n\tstablePeek?: boolean;\n\t/**\n\t * Lines above this length will not be tokenized for performance reasons.\n\t * Defaults to 20000.\n\t */\n\tmaxTokenizationLineLength?: number;\n\t/**\n\t * Theme to be used for rendering.\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light'.\n\t * You can create custom themes via `monaco.editor.defineTheme`.\n\t * To switch a theme, use `monaco.editor.setTheme`.\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\n\t */\n\ttheme?: string;\n\t/**\n\t * If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme.\n\t * Defaults to true.\n\t */\n\tautoDetectHighContrast?: boolean;\n}\n\n/**\n * The options to create an editor.\n */\nexport interface IStandaloneEditorConstructionOptions\n\textends IEditorConstructionOptions,\n\t\tIGlobalEditorOptions {\n\t/**\n\t * The initial model associated with this code editor.\n\t */\n\tmodel?: ITextModel | null;\n\t/**\n\t * The initial value of the auto created model in the editor.\n\t * To not automatically create a model, use `model: null`.\n\t */\n\tvalue?: string;\n\t/**\n\t * The initial language of the auto created model in the editor.\n\t * To not automatically create a model, use `model: null`.\n\t */\n\tlanguage?: string;\n\t/**\n\t * Initial theme to be used for rendering.\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light.\n\t * You can create custom themes via `monaco.editor.defineTheme`.\n\t * To switch a theme, use `monaco.editor.setTheme`.\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\n\t */\n\ttheme?: string;\n\t/**\n\t * If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme.\n\t * Defaults to true.\n\t */\n\tautoDetectHighContrast?: boolean;\n\t/**\n\t * An URL to open when Ctrl+H (Windows and Linux) or Cmd+H (OSX) is pressed in\n\t * the accessibility help dialog in the editor.\n\t *\n\t * Defaults to \"https://go.microsoft.com/fwlink/?linkid=852450\"\n\t */\n\taccessibilityHelpUrl?: string;\n\t/**\n\t * Container element to use for ARIA messages.\n\t * Defaults to document.body.\n\t */\n\tariaContainerElement?: HTMLElement;\n}\n\n/**\n * The options to create a diff editor.\n */\nexport interface IStandaloneDiffEditorConstructionOptions\n\textends IDiffEditorConstructionOptions {\n\t/**\n\t * Initial theme to be used for rendering.\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light.\n\t * You can create custom themes via `monaco.editor.defineTheme`.\n\t * To switch a theme, use `monaco.editor.setTheme`.\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\n\t */\n\ttheme?: string;\n\t/**\n\t * If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme.\n\t * Defaults to true.\n\t */\n\tautoDetectHighContrast?: boolean;\n}\n\nexport interface IStandaloneCodeEditor extends ICodeEditor {\n\tupdateOptions(newOptions: IEditorOptions & IGlobalEditorOptions): void;\n\taddCommand(\n\t\tkeybinding: number,\n\t\thandler: ICommandHandler,\n\t\tcontext?: string,\n\t): string | null;\n\tcreateContextKey<T extends ContextKeyValue = ContextKeyValue>(\n\t\tkey: string,\n\t\tdefaultValue: T,\n\t): IContextKey<T>;\n\taddAction(descriptor: IActionDescriptor): IDisposable;\n}\n\nexport interface IStandaloneDiffEditor extends IDiffEditor {\n\taddCommand(\n\t\tkeybinding: number,\n\t\thandler: ICommandHandler,\n\t\tcontext?: string,\n\t): string | null;\n\tcreateContextKey<T extends ContextKeyValue = ContextKeyValue>(\n\t\tkey: string,\n\t\tdefaultValue: T,\n\t): IContextKey<T>;\n\taddAction(descriptor: IActionDescriptor): IDisposable;\n\n\tgetOriginalEditor(): IStandaloneCodeEditor;\n\tgetModifiedEditor(): IStandaloneCodeEditor;\n}\n\nlet LAST_GENERATED_COMMAND_ID = 0;\n\nlet ariaDomNodeCreated = false;\n/**\n * Create ARIA dom node inside parent,\n * or only for the first editor instantiation inside document.body.\n * @param parent container element for ARIA dom node\n */\nfunction createAriaDomNode(parent: HTMLElement | undefined) {\n\tif (!parent) {\n\t\tif (ariaDomNodeCreated) {\n\t\t\treturn;\n\t\t}\n\t\tariaDomNodeCreated = true;\n\t}\n\taria.setARIAContainer(parent || mainWindow.document.body);\n}\n\n/**\n * A code editor to be used both by the standalone editor and the standalone diff editor.\n */\nexport class StandaloneCodeEditor\n\textends CodeEditorWidget\n\timplements IStandaloneCodeEditor\n{\n\tprivate readonly _standaloneKeybindingService: StandaloneKeybindingService | null;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\t_options: Readonly<IStandaloneEditorConstructionOptions>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tconst options = { ..._options };\n\t\toptions.ariaLabel =\n\t\t\toptions.ariaLabel ||\n\t\t\tStandaloneCodeEditorNLS.editorViewAccessibleLabel;\n\t\tsuper(\n\t\t\tdomElement,\n\t\t\toptions,\n\t\t\t{},\n\t\t\tinstantiationService,\n\t\t\tcodeEditorService,\n\t\t\tcommandService,\n\t\t\tcontextKeyService,\n\t\t\tthemeService,\n\t\t\tnotificationService,\n\t\t\taccessibilityService,\n\t\t\tlanguageConfigurationService,\n\t\t\tlanguageFeaturesService,\n\t\t);\n\n\t\tif (keybindingService instanceof StandaloneKeybindingService) {\n\t\t\tthis._standaloneKeybindingService = keybindingService;\n\t\t} else {\n\t\t\tthis._standaloneKeybindingService = null;\n\t\t}\n\n\t\tcreateAriaDomNode(options.ariaContainerElement);\n\n\t\tsetHoverDelegateFactory((placement, enableInstantHover) =>\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tWorkbenchHoverDelegate,\n\t\t\t\tplacement,\n\t\t\t\tenableInstantHover,\n\t\t\t\t{},\n\t\t\t),\n\t\t);\n\t\tsetBaseLayerHoverDelegate(hoverService);\n\t}\n\n\tpublic addCommand(\n\t\tkeybinding: number,\n\t\thandler: ICommandHandler,\n\t\tcontext?: string,\n\t): string | null {\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn(\n\t\t\t\t\"Cannot add command because the editor is configured with an unrecognized KeybindingService\",\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\t\tconst commandId = \"DYNAMIC_\" + ++LAST_GENERATED_COMMAND_ID;\n\t\tconst whenExpression = ContextKeyExpr.deserialize(context);\n\t\tthis._standaloneKeybindingService.addDynamicKeybinding(\n\t\t\tcommandId,\n\t\t\tkeybinding,\n\t\t\thandler,\n\t\t\twhenExpression,\n\t\t);\n\t\treturn commandId;\n\t}\n\n\tpublic createContextKey<T extends ContextKeyValue = ContextKeyValue>(\n\t\tkey: string,\n\t\tdefaultValue: T,\n\t): IContextKey<T> {\n\t\treturn this._contextKeyService.createKey(key, defaultValue);\n\t}\n\n\tpublic addAction(_descriptor: IActionDescriptor): IDisposable {\n\t\tif (\n\t\t\ttypeof _descriptor.id !== \"string\" ||\n\t\t\ttypeof _descriptor.label !== \"string\" ||\n\t\t\ttypeof _descriptor.run !== \"function\"\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Invalid action descriptor, `id`, `label` and `run` are required properties!\",\n\t\t\t);\n\t\t}\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn(\n\t\t\t\t\"Cannot add keybinding because the editor is configured with an unrecognized KeybindingService\",\n\t\t\t);\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\t// Read descriptor options\n\t\tconst id = _descriptor.id;\n\t\tconst label = _descriptor.label;\n\t\tconst precondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals(\"editorId\", this.getId()),\n\t\t\tContextKeyExpr.deserialize(_descriptor.precondition),\n\t\t);\n\t\tconst keybindings = _descriptor.keybindings;\n\t\tconst keybindingsWhen = ContextKeyExpr.and(\n\t\t\tprecondition,\n\t\t\tContextKeyExpr.deserialize(_descriptor.keybindingContext),\n\t\t);\n\t\tconst contextMenuGroupId = _descriptor.contextMenuGroupId || null;\n\t\tconst contextMenuOrder = _descriptor.contextMenuOrder || 0;\n\t\tconst run = (\n\t\t\t_accessor?: ServicesAccessor,\n\t\t\t...args: any[]\n\t\t): Promise<void> => {\n\t\t\treturn Promise.resolve(_descriptor.run(this, ...args));\n\t\t};\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\t// Generate a unique id to allow the same descriptor.id across multiple editor instances\n\t\tconst uniqueId = this.getId() + \":\" + id;\n\n\t\t// Register the command\n\t\ttoDispose.add(CommandsRegistry.registerCommand(uniqueId, run));\n\n\t\t// Register the context menu item\n\t\tif (contextMenuGroupId) {\n\t\t\tconst menuItem: IMenuItem = {\n\t\t\t\tcommand: {\n\t\t\t\t\tid: uniqueId,\n\t\t\t\t\ttitle: label,\n\t\t\t\t},\n\t\t\t\twhen: precondition,\n\t\t\t\tgroup: contextMenuGroupId,\n\t\t\t\torder: contextMenuOrder,\n\t\t\t};\n\t\t\ttoDispose.add(\n\t\t\t\tMenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem),\n\t\t\t);\n\t\t}\n\n\t\t// Register the keybindings\n\t\tif (Array.isArray(keybindings)) {\n\t\t\tfor (const kb of keybindings) {\n\t\t\t\ttoDispose.add(\n\t\t\t\t\tthis._standaloneKeybindingService.addDynamicKeybinding(\n\t\t\t\t\t\tuniqueId,\n\t\t\t\t\t\tkb,\n\t\t\t\t\t\trun,\n\t\t\t\t\t\tkeybindingsWhen,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Finally, register an internal editor action\n\t\tconst internalAction = new InternalEditorAction(\n\t\t\tuniqueId,\n\t\t\tlabel,\n\t\t\tlabel,\n\t\t\tundefined,\n\t\t\tprecondition,\n\t\t\t(...args: unknown[]) =>\n\t\t\t\tPromise.resolve(_descriptor.run(this, ...args)),\n\t\t\tthis._contextKeyService,\n\t\t);\n\n\t\t// Store it under the original id, such that trigger with the original id will work\n\t\tthis._actions.set(id, internalAction);\n\t\ttoDispose.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis._actions.delete(id);\n\t\t\t}),\n\t\t);\n\n\t\treturn toDispose;\n\t}\n\n\tprotected override _triggerCommand(handlerId: string, payload: any): void {\n\t\tif (this._codeEditorService instanceof StandaloneCodeEditorService) {\n\t\t\t// Help commands find this editor as the active editor\n\t\t\ttry {\n\t\t\t\tthis._codeEditorService.setActiveCodeEditor(this);\n\t\t\t\tsuper._triggerCommand(handlerId, payload);\n\t\t\t} finally {\n\t\t\t\tthis._codeEditorService.setActiveCodeEditor(null);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper._triggerCommand(handlerId, payload);\n\t\t}\n\t}\n}\n\nexport class StandaloneEditor\n\textends StandaloneCodeEditor\n\timplements IStandaloneCodeEditor\n{\n\tprivate readonly _configurationService: IConfigurationService;\n\tprivate readonly _standaloneThemeService: IStandaloneThemeService;\n\tprivate _ownsModel: boolean;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\t_options: Readonly<IStandaloneEditorConstructionOptions> | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IStandaloneThemeService themeService: IStandaloneThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@IModelService modelService: IModelService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tconst options = { ..._options };\n\t\tupdateConfigurationService(configurationService, options, false);\n\t\tconst themeDomRegistration = (<StandaloneThemeService>(\n\t\t\tthemeService\n\t\t)).registerEditorContainer(domElement);\n\t\tif (typeof options.theme === \"string\") {\n\t\t\tthemeService.setTheme(options.theme);\n\t\t}\n\t\tif (typeof options.autoDetectHighContrast !== \"undefined\") {\n\t\t\tthemeService.setAutoDetectHighContrast(\n\t\t\t\tBoolean(options.autoDetectHighContrast),\n\t\t\t);\n\t\t}\n\t\tconst _model: ITextModel | null | undefined = options.model;\n\t\tdelete options.model;\n\t\tsuper(\n\t\t\tdomElement,\n\t\t\toptions,\n\t\t\tinstantiationService,\n\t\t\tcodeEditorService,\n\t\t\tcommandService,\n\t\t\tcontextKeyService,\n\t\t\thoverService,\n\t\t\tkeybindingService,\n\t\t\tthemeService,\n\t\t\tnotificationService,\n\t\t\taccessibilityService,\n\t\t\tlanguageConfigurationService,\n\t\t\tlanguageFeaturesService,\n\t\t);\n\n\t\tthis._configurationService = configurationService;\n\t\tthis._standaloneThemeService = themeService;\n\t\tthis._register(themeDomRegistration);\n\n\t\tlet model: ITextModel | null;\n\t\tif (typeof _model === \"undefined\") {\n\t\t\tconst languageId =\n\t\t\t\tlanguageService.getLanguageIdByMimeType(options.language) ||\n\t\t\t\toptions.language ||\n\t\t\t\tPLAINTEXT_LANGUAGE_ID;\n\t\t\tmodel = createTextModel(\n\t\t\t\tmodelService,\n\t\t\t\tlanguageService,\n\t\t\t\toptions.value || \"\",\n\t\t\t\tlanguageId,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t\tthis._ownsModel = true;\n\t\t} else {\n\t\t\tmodel = _model;\n\t\t\tthis._ownsModel = false;\n\t\t}\n\n\t\tthis._attachModel(model);\n\t\tif (model) {\n\t\t\tconst e: IModelChangedEvent = {\n\t\t\t\toldModelUrl: null,\n\t\t\t\tnewModelUrl: model.uri,\n\t\t\t};\n\t\t\tthis._onDidChangeModel.fire(e);\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic override updateOptions(\n\t\tnewOptions: Readonly<IEditorOptions & IGlobalEditorOptions>,\n\t): void {\n\t\tupdateConfigurationService(\n\t\t\tthis._configurationService,\n\t\t\tnewOptions,\n\t\t\tfalse,\n\t\t);\n\t\tif (typeof newOptions.theme === \"string\") {\n\t\t\tthis._standaloneThemeService.setTheme(newOptions.theme);\n\t\t}\n\t\tif (typeof newOptions.autoDetectHighContrast !== \"undefined\") {\n\t\t\tthis._standaloneThemeService.setAutoDetectHighContrast(\n\t\t\t\tBoolean(newOptions.autoDetectHighContrast),\n\t\t\t);\n\t\t}\n\t\tsuper.updateOptions(newOptions);\n\t}\n\n\tprotected override _postDetachModelCleanup(\n\t\tdetachedModel: ITextModel,\n\t): void {\n\t\tsuper._postDetachModelCleanup(detachedModel);\n\t\tif (detachedModel && this._ownsModel) {\n\t\t\tdetachedModel.dispose();\n\t\t\tthis._ownsModel = false;\n\t\t}\n\t}\n}\n\nexport class StandaloneDiffEditor2\n\textends DiffEditorWidget\n\timplements IStandaloneDiffEditor\n{\n\tprivate readonly _configurationService: IConfigurationService;\n\tprivate readonly _standaloneThemeService: IStandaloneThemeService;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\t_options:\n\t\t\t| Readonly<IStandaloneDiffEditorConstructionOptions>\n\t\t\t| undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IStandaloneThemeService themeService: IStandaloneThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IEditorProgressService editorProgressService: IEditorProgressService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@IAccessibilitySignalService accessibilitySignalService: IAccessibilitySignalService,\n\t) {\n\t\tconst options = { ..._options };\n\t\tupdateConfigurationService(configurationService, options, true);\n\t\tconst themeDomRegistration = (<StandaloneThemeService>(\n\t\t\tthemeService\n\t\t)).registerEditorContainer(domElement);\n\t\tif (typeof options.theme === \"string\") {\n\t\t\tthemeService.setTheme(options.theme);\n\t\t}\n\t\tif (typeof options.autoDetectHighContrast !== \"undefined\") {\n\t\t\tthemeService.setAutoDetectHighContrast(\n\t\t\t\tBoolean(options.autoDetectHighContrast),\n\t\t\t);\n\t\t}\n\n\t\tsuper(\n\t\t\tdomElement,\n\t\t\toptions,\n\t\t\t{},\n\t\t\tcontextKeyService,\n\t\t\tinstantiationService,\n\t\t\tcodeEditorService,\n\t\t\taccessibilitySignalService,\n\t\t\teditorProgressService,\n\t\t);\n\n\t\tthis._configurationService = configurationService;\n\t\tthis._standaloneThemeService = themeService;\n\n\t\tthis._register(themeDomRegistration);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic override updateOptions(\n\t\tnewOptions: Readonly<IDiffEditorOptions & IGlobalEditorOptions>,\n\t): void {\n\t\tupdateConfigurationService(\n\t\t\tthis._configurationService,\n\t\t\tnewOptions,\n\t\t\ttrue,\n\t\t);\n\t\tif (typeof newOptions.theme === \"string\") {\n\t\t\tthis._standaloneThemeService.setTheme(newOptions.theme);\n\t\t}\n\t\tif (typeof newOptions.autoDetectHighContrast !== \"undefined\") {\n\t\t\tthis._standaloneThemeService.setAutoDetectHighContrast(\n\t\t\t\tBoolean(newOptions.autoDetectHighContrast),\n\t\t\t);\n\t\t}\n\t\tsuper.updateOptions(newOptions);\n\t}\n\n\tprotected override _createInnerEditor(\n\t\tinstantiationService: IInstantiationService,\n\t\tcontainer: HTMLElement,\n\t\toptions: Readonly<IEditorOptions>,\n\t): CodeEditorWidget {\n\t\treturn instantiationService.createInstance(\n\t\t\tStandaloneCodeEditor,\n\t\t\tcontainer,\n\t\t\toptions,\n\t\t);\n\t}\n\n\tpublic override getOriginalEditor(): IStandaloneCodeEditor {\n\t\treturn <StandaloneCodeEditor>super.getOriginalEditor();\n\t}\n\n\tpublic override getModifiedEditor(): IStandaloneCodeEditor {\n\t\treturn <StandaloneCodeEditor>super.getModifiedEditor();\n\t}\n\n\tpublic addCommand(\n\t\tkeybinding: number,\n\t\thandler: ICommandHandler,\n\t\tcontext?: string,\n\t): string | null {\n\t\treturn this.getModifiedEditor().addCommand(\n\t\t\tkeybinding,\n\t\t\thandler,\n\t\t\tcontext,\n\t\t);\n\t}\n\n\tpublic createContextKey<T extends ContextKeyValue = ContextKeyValue>(\n\t\tkey: string,\n\t\tdefaultValue: T,\n\t): IContextKey<T> {\n\t\treturn this.getModifiedEditor().createContextKey(key, defaultValue);\n\t}\n\n\tpublic addAction(descriptor: IActionDescriptor): IDisposable {\n\t\treturn this.getModifiedEditor().addAction(descriptor);\n\t}\n}\n\n/**\n * @internal\n */\nexport function createTextModel(\n\tmodelService: IModelService,\n\tlanguageService: ILanguageService,\n\tvalue: string,\n\tlanguageId: string | undefined,\n\turi: URI | undefined,\n): ITextModel {\n\tvalue = value || \"\";\n\tif (!languageId) {\n\t\tconst firstLF = value.indexOf(\"\\n\");\n\t\tlet firstLine = value;\n\t\tif (firstLF !== -1) {\n\t\t\tfirstLine = value.substring(0, firstLF);\n\t\t}\n\t\treturn doCreateModel(\n\t\t\tmodelService,\n\t\t\tvalue,\n\t\t\tlanguageService.createByFilepathOrFirstLine(uri || null, firstLine),\n\t\t\turi,\n\t\t);\n\t}\n\treturn doCreateModel(\n\t\tmodelService,\n\t\tvalue,\n\t\tlanguageService.createById(languageId),\n\t\turi,\n\t);\n}\n\n/**\n * @internal\n */\nfunction doCreateModel(\n\tmodelService: IModelService,\n\tvalue: string,\n\tlanguageSelection: ILanguageSelection,\n\turi: URI | undefined,\n): ITextModel {\n\treturn modelService.createModel(value, languageSelection, uri);\n}\n"],
  "mappings": "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",
  "names": []
}
