{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/standaloneCodeEditorService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { windowOpenNoOpener } from \"../../../base/browser/dom.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../platform/contextkey/common/contextkey.js\";\nimport type { ITextResourceEditorInput } from \"../../../platform/editor/common/editor.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../platform/instantiation/common/extensions.js\";\nimport { IThemeService } from \"../../../platform/theme/common/themeService.js\";\nimport type { ICodeEditor } from \"../../browser/editorBrowser.js\";\nimport { AbstractCodeEditorService } from \"../../browser/services/abstractCodeEditorService.js\";\nimport { ICodeEditorService } from \"../../browser/services/codeEditorService.js\";\nimport type { IRange } from \"../../common/core/range.js\";\nimport { ScrollType } from \"../../common/editorCommon.js\";\nimport type { ITextModel } from \"../../common/model.js\";\n\nexport class StandaloneCodeEditorService extends AbstractCodeEditorService {\n\tprivate readonly _editorIsOpen: IContextKey<boolean>;\n\tprivate _activeCodeEditor: ICodeEditor | null;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper(themeService);\n\t\tthis._register(this.onCodeEditorAdd(() => this._checkContextKey()));\n\t\tthis._register(this.onCodeEditorRemove(() => this._checkContextKey()));\n\t\tthis._editorIsOpen = contextKeyService.createKey(\"editorIsOpen\", false);\n\t\tthis._activeCodeEditor = null;\n\n\t\tthis._register(\n\t\t\tthis.registerCodeEditorOpenHandler(\n\t\t\t\tasync (input, source, sideBySide) => {\n\t\t\t\t\tif (!source) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.doOpenEditor(source, input);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _checkContextKey(): void {\n\t\tlet hasCodeEditor = false;\n\t\tfor (const editor of this.listCodeEditors()) {\n\t\t\tif (!editor.isSimpleWidget) {\n\t\t\t\thasCodeEditor = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._editorIsOpen.set(hasCodeEditor);\n\t}\n\n\tpublic setActiveCodeEditor(activeCodeEditor: ICodeEditor | null): void {\n\t\tthis._activeCodeEditor = activeCodeEditor;\n\t}\n\n\tpublic getActiveCodeEditor(): ICodeEditor | null {\n\t\treturn this._activeCodeEditor;\n\t}\n\n\tprivate doOpenEditor(\n\t\teditor: ICodeEditor,\n\t\tinput: ITextResourceEditorInput,\n\t): ICodeEditor | null {\n\t\tconst model = this.findModel(editor, input.resource);\n\t\tif (!model) {\n\t\t\tif (input.resource) {\n\t\t\t\tconst schema = input.resource.scheme;\n\t\t\t\tif (schema === Schemas.http || schema === Schemas.https) {\n\t\t\t\t\t// This is a fully qualified http or https URL\n\t\t\t\t\twindowOpenNoOpener(input.resource.toString());\n\t\t\t\t\treturn editor;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst selection = <IRange>(\n\t\t\t(input.options ? input.options.selection : null)\n\t\t);\n\t\tif (selection) {\n\t\t\tif (\n\t\t\t\ttypeof selection.endLineNumber === \"number\" &&\n\t\t\t\ttypeof selection.endColumn === \"number\"\n\t\t\t) {\n\t\t\t\teditor.setSelection(selection);\n\t\t\t\teditor.revealRangeInCenter(selection, ScrollType.Immediate);\n\t\t\t} else {\n\t\t\t\tconst pos = {\n\t\t\t\t\tlineNumber: selection.startLineNumber,\n\t\t\t\t\tcolumn: selection.startColumn,\n\t\t\t\t};\n\t\t\t\teditor.setPosition(pos);\n\t\t\t\teditor.revealPositionInCenter(pos, ScrollType.Immediate);\n\t\t\t}\n\t\t}\n\n\t\treturn editor;\n\t}\n\n\tprivate findModel(editor: ICodeEditor, resource: URI): ITextModel | null {\n\t\tconst model = editor.getModel();\n\t\tif (model && model.uri.toString() !== resource.toString()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn model;\n\t}\n}\n\nregisterSingleton(\n\tICodeEditorService,\n\tStandaloneCodeEditorService,\n\tInstantiationType.Eager,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,0BAA0B;AACnC,SAAS,eAAe;AAExB;AAAA,EAEC;AAAA,OACM;AAEP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,qBAAqB;AAE9B,SAAS,iCAAiC;AAC1C,SAAS,0BAA0B;AAEnC,SAAS,kBAAkB;AAGpB,IAAM,8BAAN,cAA0C,0BAA0B;AAAA,EAzB3E,OAyB2E;AAAA;AAAA;AAAA,EACzD;AAAA,EACT;AAAA,EAER,YACqB,mBACL,cACd;AACD,UAAM,YAAY;AAClB,SAAK,UAAU,KAAK,gBAAgB,MAAM,KAAK,iBAAiB,CAAC,CAAC;AAClE,SAAK,UAAU,KAAK,mBAAmB,MAAM,KAAK,iBAAiB,CAAC,CAAC;AACrE,SAAK,gBAAgB,kBAAkB,UAAU,gBAAgB,KAAK;AACtE,SAAK,oBAAoB;AAEzB,SAAK;AAAA,MACJ,KAAK;AAAA,QACJ,OAAO,OAAO,QAAQ,eAAe;AACpC,cAAI,CAAC,QAAQ;AACZ,mBAAO;AAAA,UACR;AACA,iBAAO,KAAK,aAAa,QAAQ,KAAK;AAAA,QACvC;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,mBAAyB;AAChC,QAAI,gBAAgB;AACpB,eAAW,UAAU,KAAK,gBAAgB,GAAG;AAC5C,UAAI,CAAC,OAAO,gBAAgB;AAC3B,wBAAgB;AAChB;AAAA,MACD;AAAA,IACD;AACA,SAAK,cAAc,IAAI,aAAa;AAAA,EACrC;AAAA,EAEO,oBAAoB,kBAA4C;AACtE,SAAK,oBAAoB;AAAA,EAC1B;AAAA,EAEO,sBAA0C;AAChD,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,aACP,QACA,OACqB;AACrB,UAAM,QAAQ,KAAK,UAAU,QAAQ,MAAM,QAAQ;AACnD,QAAI,CAAC,OAAO;AACX,UAAI,MAAM,UAAU;AACnB,cAAM,SAAS,MAAM,SAAS;AAC9B,YAAI,WAAW,QAAQ,QAAQ,WAAW,QAAQ,OAAO;AAExD,6BAAmB,MAAM,SAAS,SAAS,CAAC;AAC5C,iBAAO;AAAA,QACR;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAEA,UAAM,YACJ,MAAM,UAAU,MAAM,QAAQ,YAAY;AAE5C,QAAI,WAAW;AACd,UACC,OAAO,UAAU,kBAAkB,YACnC,OAAO,UAAU,cAAc,UAC9B;AACD,eAAO,aAAa,SAAS;AAC7B,eAAO,oBAAoB,WAAW,WAAW,SAAS;AAAA,MAC3D,OAAO;AACN,cAAM,MAAM;AAAA,UACX,YAAY,UAAU;AAAA,UACtB,QAAQ,UAAU;AAAA,QACnB;AACA,eAAO,YAAY,GAAG;AACtB,eAAO,uBAAuB,KAAK,WAAW,SAAS;AAAA,MACxD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,UAAU,QAAqB,UAAkC;AACxE,UAAM,QAAQ,OAAO,SAAS;AAC9B,QAAI,SAAS,MAAM,IAAI,SAAS,MAAM,SAAS,SAAS,GAAG;AAC1D,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AACD;AA7Fa,8BAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;AA+Fb;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
