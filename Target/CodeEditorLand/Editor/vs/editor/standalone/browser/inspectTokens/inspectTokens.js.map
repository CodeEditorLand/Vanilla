{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/inspectTokens/inspectTokens.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./inspectTokens.css\";\nimport { $, append, reset } from \"../../../../base/browser/dom.js\";\nimport { CharCode } from \"../../../../base/common/charCode.js\";\nimport { Color } from \"../../../../base/common/color.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\tContentWidgetPositionPreference,\n\ttype IActiveCodeEditor,\n\ttype ICodeEditor,\n\ttype IContentWidget,\n\ttype IContentWidgetPosition,\n} from \"../../../browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tEditorContributionInstantiation,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n\tregisterEditorContribution,\n} from \"../../../browser/editorExtensions.js\";\nimport type { Position } from \"../../../common/core/position.js\";\nimport type { IEditorContribution } from \"../../../common/editorCommon.js\";\nimport {\n\tFontStyle,\n\tStandardTokenType,\n\tTokenMetadata,\n} from \"../../../common/encodedTokenAttributes.js\";\nimport {\n\ttype ILanguageIdCodec,\n\ttype IState,\n\ttype ITokenizationSupport,\n\ttype Token,\n\tTokenizationRegistry,\n} from \"../../../common/languages.js\";\nimport { ILanguageService } from \"../../../common/languages/language.js\";\nimport {\n\tNullState,\n\tnullTokenize,\n\tnullTokenizeEncoded,\n} from \"../../../common/languages/nullTokenize.js\";\nimport type { ITextModel } from \"../../../common/model.js\";\nimport { InspectTokensNLS } from \"../../../common/standaloneStrings.js\";\nimport { IStandaloneThemeService } from \"../../common/standaloneTheme.js\";\n\nclass InspectTokensController\n\textends Disposable\n\timplements IEditorContribution\n{\n\tpublic static readonly ID = \"editor.contrib.inspectTokens\";\n\n\tpublic static get(editor: ICodeEditor): InspectTokensController | null {\n\t\treturn editor.getContribution<InspectTokensController>(\n\t\t\tInspectTokensController.ID,\n\t\t);\n\t}\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate readonly _languageService: ILanguageService;\n\tprivate _widget: InspectTokensWidget | null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IStandaloneThemeService standaloneColorService: IStandaloneThemeService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._languageService = languageService;\n\t\tthis._widget = null;\n\n\t\tthis._register(this._editor.onDidChangeModel((e) => this.stop()));\n\t\tthis._register(\n\t\t\tthis._editor.onDidChangeModelLanguage((e) => this.stop()),\n\t\t);\n\t\tthis._register(TokenizationRegistry.onDidChange((e) => this.stop()));\n\t\tthis._register(\n\t\t\tthis._editor.onKeyUp(\n\t\t\t\t(e) => e.keyCode === KeyCode.Escape && this.stop(),\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.stop();\n\t\tsuper.dispose();\n\t}\n\n\tpublic launch(): void {\n\t\tif (this._widget) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tthis._widget = new InspectTokensWidget(\n\t\t\tthis._editor,\n\t\t\tthis._languageService,\n\t\t);\n\t}\n\n\tpublic stop(): void {\n\t\tif (this._widget) {\n\t\t\tthis._widget.dispose();\n\t\t\tthis._widget = null;\n\t\t}\n\t}\n}\n\nclass InspectTokens extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.action.inspectTokens\",\n\t\t\tlabel: InspectTokensNLS.inspectTokensAction,\n\t\t\talias: \"Developer: Inspect Tokens\",\n\t\t\tprecondition: undefined,\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = InspectTokensController.get(editor);\n\t\tcontroller?.launch();\n\t}\n}\n\ninterface ICompleteLineTokenization {\n\tstartState: IState;\n\ttokens1: Token[];\n\ttokens2: Uint32Array;\n\tendState: IState;\n}\n\ninterface IDecodedMetadata {\n\tlanguageId: string;\n\ttokenType: StandardTokenType;\n\tfontStyle: FontStyle;\n\tforeground: Color;\n\tbackground: Color;\n}\n\nfunction renderTokenText(tokenText: string): string {\n\tlet result = \"\";\n\tfor (\n\t\tlet charIndex = 0, len = tokenText.length;\n\t\tcharIndex < len;\n\t\tcharIndex++\n\t) {\n\t\tconst charCode = tokenText.charCodeAt(charIndex);\n\t\tswitch (charCode) {\n\t\t\tcase CharCode.Tab:\n\t\t\t\tresult += \"\\u2192\"; // &rarr;\n\t\t\t\tbreak;\n\n\t\t\tcase CharCode.Space:\n\t\t\t\tresult += \"\\u00B7\"; // &middot;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tresult += String.fromCharCode(charCode);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction getSafeTokenizationSupport(\n\tlanguageIdCodec: ILanguageIdCodec,\n\tlanguageId: string,\n): ITokenizationSupport {\n\tconst tokenizationSupport = TokenizationRegistry.get(languageId);\n\tif (tokenizationSupport) {\n\t\treturn tokenizationSupport;\n\t}\n\tconst encodedLanguageId = languageIdCodec.encodeLanguageId(languageId);\n\treturn {\n\t\tgetInitialState: () => NullState,\n\t\ttokenize: (line: string, hasEOL: boolean, state: IState) =>\n\t\t\tnullTokenize(languageId, state),\n\t\ttokenizeEncoded: (line: string, hasEOL: boolean, state: IState) =>\n\t\t\tnullTokenizeEncoded(encodedLanguageId, state),\n\t};\n}\n\nclass InspectTokensWidget extends Disposable implements IContentWidget {\n\tprivate static readonly _ID = \"editor.contrib.inspectTokensWidget\";\n\n\t// Editor.IContentWidget.allowEditorOverflow\n\tpublic allowEditorOverflow = true;\n\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate readonly _languageService: ILanguageService;\n\tprivate readonly _tokenizationSupport: ITokenizationSupport;\n\tprivate readonly _model: ITextModel;\n\tprivate readonly _domNode: HTMLElement;\n\n\tconstructor(editor: IActiveCodeEditor, languageService: ILanguageService) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._languageService = languageService;\n\t\tthis._model = this._editor.getModel();\n\t\tthis._domNode = document.createElement(\"div\");\n\t\tthis._domNode.className = \"tokens-inspect-widget\";\n\t\tthis._tokenizationSupport = getSafeTokenizationSupport(\n\t\t\tthis._languageService.languageIdCodec,\n\t\t\tthis._model.getLanguageId(),\n\t\t);\n\t\tthis._compute(this._editor.getPosition());\n\t\tthis._register(\n\t\t\tthis._editor.onDidChangeCursorPosition((e) =>\n\t\t\t\tthis._compute(this._editor.getPosition()),\n\t\t\t),\n\t\t);\n\t\tthis._editor.addContentWidget(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._editor.removeContentWidget(this);\n\t\tsuper.dispose();\n\t}\n\n\tpublic getId(): string {\n\t\treturn InspectTokensWidget._ID;\n\t}\n\n\tprivate _compute(position: Position): void {\n\t\tconst data = this._getTokensAtLine(position.lineNumber);\n\n\t\tlet token1Index = 0;\n\t\tfor (let i = data.tokens1.length - 1; i >= 0; i--) {\n\t\t\tconst t = data.tokens1[i];\n\t\t\tif (position.column - 1 >= t.offset) {\n\t\t\t\ttoken1Index = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet token2Index = 0;\n\t\tfor (let i = data.tokens2.length >>> 1; i >= 0; i--) {\n\t\t\tif (position.column - 1 >= data.tokens2[i << 1]) {\n\t\t\t\ttoken2Index = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst lineContent = this._model.getLineContent(position.lineNumber);\n\t\tlet tokenText = \"\";\n\t\tif (token1Index < data.tokens1.length) {\n\t\t\tconst tokenStartIndex = data.tokens1[token1Index].offset;\n\t\t\tconst tokenEndIndex =\n\t\t\t\ttoken1Index + 1 < data.tokens1.length\n\t\t\t\t\t? data.tokens1[token1Index + 1].offset\n\t\t\t\t\t: lineContent.length;\n\t\t\ttokenText = lineContent.substring(tokenStartIndex, tokenEndIndex);\n\t\t}\n\t\treset(\n\t\t\tthis._domNode,\n\t\t\t$(\n\t\t\t\t\"h2.tm-token\",\n\t\t\t\tundefined,\n\t\t\t\trenderTokenText(tokenText),\n\t\t\t\t$(\n\t\t\t\t\t\"span.tm-token-length\",\n\t\t\t\t\tundefined,\n\t\t\t\t\t`${tokenText.length} ${tokenText.length === 1 ? \"char\" : \"chars\"}`,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tappend(\n\t\t\tthis._domNode,\n\t\t\t$(\"hr.tokens-inspect-separator\", { style: \"clear:both\" }),\n\t\t);\n\n\t\tconst metadata =\n\t\t\t(token2Index << 1) + 1 < data.tokens2.length\n\t\t\t\t? this._decodeMetadata(data.tokens2[(token2Index << 1) + 1])\n\t\t\t\t: null;\n\t\tappend(\n\t\t\tthis._domNode,\n\t\t\t$(\n\t\t\t\t\"table.tm-metadata-table\",\n\t\t\t\tundefined,\n\t\t\t\t$(\n\t\t\t\t\t\"tbody\",\n\t\t\t\t\tundefined,\n\t\t\t\t\t$(\n\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t$(\"td.tm-metadata-key\", undefined, \"language\"),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"td.tm-metadata-value\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t`${metadata ? metadata.languageId : \"-?-\"}`,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t$(\n\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"td.tm-metadata-key\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\"token type\" as string,\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"td.tm-metadata-value\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t`${metadata ? this._tokenTypeToString(metadata.tokenType) : \"-?-\"}`,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t$(\n\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"td.tm-metadata-key\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\"font style\" as string,\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"td.tm-metadata-value\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t`${metadata ? this._fontStyleToString(metadata.fontStyle) : \"-?-\"}`,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t$(\n\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t$(\"td.tm-metadata-key\", undefined, \"foreground\"),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"td.tm-metadata-value\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t`${metadata ? Color.Format.CSS.formatHex(metadata.foreground) : \"-?-\"}`,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t$(\n\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t$(\"td.tm-metadata-key\", undefined, \"background\"),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"td.tm-metadata-value\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t`${metadata ? Color.Format.CSS.formatHex(metadata.background) : \"-?-\"}`,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tappend(this._domNode, $(\"hr.tokens-inspect-separator\"));\n\n\t\tif (token1Index < data.tokens1.length) {\n\t\t\tappend(\n\t\t\t\tthis._domNode,\n\t\t\t\t$(\n\t\t\t\t\t\"span.tm-token-type\",\n\t\t\t\t\tundefined,\n\t\t\t\t\tdata.tokens1[token1Index].type,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n\n\tprivate _decodeMetadata(metadata: number): IDecodedMetadata {\n\t\tconst colorMap = TokenizationRegistry.getColorMap()!;\n\t\tconst languageId = TokenMetadata.getLanguageId(metadata);\n\t\tconst tokenType = TokenMetadata.getTokenType(metadata);\n\t\tconst fontStyle = TokenMetadata.getFontStyle(metadata);\n\t\tconst foreground = TokenMetadata.getForeground(metadata);\n\t\tconst background = TokenMetadata.getBackground(metadata);\n\t\treturn {\n\t\t\tlanguageId:\n\t\t\t\tthis._languageService.languageIdCodec.decodeLanguageId(\n\t\t\t\t\tlanguageId,\n\t\t\t\t),\n\t\t\ttokenType: tokenType,\n\t\t\tfontStyle: fontStyle,\n\t\t\tforeground: colorMap[foreground],\n\t\t\tbackground: colorMap[background],\n\t\t};\n\t}\n\n\tprivate _tokenTypeToString(tokenType: StandardTokenType): string {\n\t\tswitch (tokenType) {\n\t\t\tcase StandardTokenType.Other:\n\t\t\t\treturn \"Other\";\n\t\t\tcase StandardTokenType.Comment:\n\t\t\t\treturn \"Comment\";\n\t\t\tcase StandardTokenType.String:\n\t\t\t\treturn \"String\";\n\t\t\tcase StandardTokenType.RegEx:\n\t\t\t\treturn \"RegEx\";\n\t\t\tdefault:\n\t\t\t\treturn \"??\";\n\t\t}\n\t}\n\n\tprivate _fontStyleToString(fontStyle: FontStyle): string {\n\t\tlet r = \"\";\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tr += \"italic \";\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tr += \"bold \";\n\t\t}\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\tr += \"underline \";\n\t\t}\n\t\tif (fontStyle & FontStyle.Strikethrough) {\n\t\t\tr += \"strikethrough \";\n\t\t}\n\t\tif (r.length === 0) {\n\t\t\tr = \"---\";\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate _getTokensAtLine(lineNumber: number): ICompleteLineTokenization {\n\t\tconst stateBeforeLine = this._getStateBeforeLine(lineNumber);\n\n\t\tconst tokenizationResult1 = this._tokenizationSupport.tokenize(\n\t\t\tthis._model.getLineContent(lineNumber),\n\t\t\ttrue,\n\t\t\tstateBeforeLine,\n\t\t);\n\t\tconst tokenizationResult2 = this._tokenizationSupport.tokenizeEncoded(\n\t\t\tthis._model.getLineContent(lineNumber),\n\t\t\ttrue,\n\t\t\tstateBeforeLine,\n\t\t);\n\n\t\treturn {\n\t\t\tstartState: stateBeforeLine,\n\t\t\ttokens1: tokenizationResult1.tokens,\n\t\t\ttokens2: tokenizationResult2.tokens,\n\t\t\tendState: tokenizationResult1.endState,\n\t\t};\n\t}\n\n\tprivate _getStateBeforeLine(lineNumber: number): IState {\n\t\tlet state: IState = this._tokenizationSupport.getInitialState();\n\n\t\tfor (let i = 1; i < lineNumber; i++) {\n\t\t\tconst tokenizationResult = this._tokenizationSupport.tokenize(\n\t\t\t\tthis._model.getLineContent(i),\n\t\t\t\ttrue,\n\t\t\t\tstate,\n\t\t\t);\n\t\t\tstate = tokenizationResult.endState;\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tpublic getPosition(): IContentWidgetPosition {\n\t\treturn {\n\t\t\tposition: this._editor.getPosition(),\n\t\t\tpreference: [\n\t\t\t\tContentWidgetPositionPreference.BELOW,\n\t\t\t\tContentWidgetPositionPreference.ABOVE,\n\t\t\t],\n\t\t};\n\t}\n}\n\nregisterEditorContribution(\n\tInspectTokensController.ID,\n\tInspectTokensController,\n\tEditorContributionInstantiation.Lazy,\n);\nregisterEditorAction(InspectTokens);\n"],
  "mappings": "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",
  "names": []
}
