var g=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var m=(c,e,t,i)=>{for(var r=i>1?void 0:i?E(e,t):e,n=c.length-1,d;n>=0;n--)(d=c[n])&&(r=(i?d(e,t,r):d(r))||r);return i&&r&&g(e,t,r),r},p=(c,e)=>(t,i)=>e(t,i,c);import{Event as y}from"../../../../base/common/event.js";import{KeyCode as a,KeyMod as u}from"../../../../base/common/keyCodes.js";import{KeybindingWeight as l}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{Extensions as C}from"../../../../platform/quickinput/common/quickAccess.js";import{IQuickInputService as I}from"../../../../platform/quickinput/common/quickInput.js";import{Registry as v}from"../../../../platform/registry/common/platform.js";import{EditorAction as x,registerEditorAction as A}from"../../../browser/editorExtensions.js";import{ICodeEditorService as b}from"../../../browser/services/codeEditorService.js";import{EditorContextKeys as h}from"../../../common/editorContextKeys.js";import{GoToLineNLS as f}from"../../../common/standaloneStrings.js";import{AbstractGotoLineQuickAccessProvider as k}from"../../../contrib/quickAccess/browser/gotoLineQuickAccess.js";let o=class extends k{constructor(t){super();this.editorService=t}onDidActiveTextEditorControlChange=y.None;get activeTextEditorControl(){return this.editorService.getFocusedCodeEditor()??void 0}};o=m([p(0,b)],o);class s extends x{static ID="editor.action.gotoLine";constructor(){super({id:s.ID,label:f.gotoLineActionLabel,alias:"Go to Line/Column...",precondition:void 0,kbOpts:{kbExpr:h.focus,primary:u.CtrlCmd|a.KeyG,mac:{primary:u.WinCtrl|a.KeyG},weight:l.EditorContrib}})}run(e){e.get(I).quickAccess.show(o.PREFIX)}}A(s),v.as(C.Quickaccess).registerQuickAccessProvider({ctor:o,prefix:o.PREFIX,helpEntries:[{description:f.gotoLineActionLabel,commandId:s.ID}]});export{s as GotoLineAction,o as StandaloneGotoLineQuickAccessProvider};
