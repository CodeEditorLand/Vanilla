{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/quickAccess/standaloneCommandsQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ICommandQuickPick } from \"../../../../platform/quickinput/browser/commandsQuickAccess.js\";\nimport {\n\tExtensions,\n\ttype IQuickAccessRegistry,\n} from \"../../../../platform/quickinput/common/quickAccess.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tEditorAction,\n\tregisterEditorAction,\n} from \"../../../browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../browser/services/codeEditorService.js\";\nimport type { IEditor } from \"../../../common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../common/editorContextKeys.js\";\nimport { QuickCommandNLS } from \"../../../common/standaloneStrings.js\";\nimport { AbstractEditorCommandsQuickAccessProvider } from \"../../../contrib/quickAccess/browser/commandsQuickAccess.js\";\n\nexport class StandaloneCommandsQuickAccessProvider extends AbstractEditorCommandsQuickAccessProvider {\n\tprotected get activeTextEditorControl(): IEditor | undefined {\n\t\treturn this.codeEditorService.getFocusedCodeEditor() ?? undefined;\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IDialogService dialogService: IDialogService\n\t) {\n\t\tsuper({ showAlias: false }, instantiationService, keybindingService, commandService, telemetryService, dialogService);\n\t}\n\n\tprotected async getCommandPicks(): Promise<Array<ICommandQuickPick>> {\n\t\treturn this.getCodeEditorCommandPicks();\n\t}\n\n\tprotected hasAdditionalCommandPicks(): boolean {\n\t\treturn false;\n\t}\n\n\tprotected async getAdditionalCommandPicks(): Promise<ICommandQuickPick[]> {\n\t\treturn [];\n\t}\n}\n\nexport class GotoLineAction extends EditorAction {\n\tstatic readonly ID = \"editor.action.quickCommand\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoLineAction.ID,\n\t\t\tlabel: QuickCommandNLS.quickCommandActionLabel,\n\t\t\talias: \"Command Palette\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyCode.F1,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: \"z_commands\",\n\t\t\t\torder: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor\n\t\t\t.get(IQuickInputService)\n\t\t\t.quickAccess.show(StandaloneCommandsQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterEditorAction(GotoLineAction);\n\nRegistry.as<IQuickAccessRegistry>(\n\tExtensions.Quickaccess,\n).registerQuickAccessProvider({\n\tctor: StandaloneCommandsQuickAccessProvider,\n\tprefix: StandaloneCommandsQuickAccessProvider.PREFIX,\n\thelpEntries: [\n\t\t{\n\t\t\tdescription: QuickCommandNLS.quickCommandHelp,\n\t\t\tcommandId: GotoLineAction.ID,\n\t\t},\n\t],\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,uBAAuB;AAChC,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,OAEM;AACP,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AAEjC;AAAA,EACC;AAAA,OAEM;AACP,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,0BAA0B;AAEnC,SAAS,yBAAyB;AAClC,SAAS,uBAAuB;AAChC,SAAS,iDAAiD;AAEnD,IAAM,wCAAN,cAAoD,0CAA0C;AAAA,EAKpG,YACwB,sBACc,mBACjB,mBACH,gBACE,kBACH,eACf;AACD,UAAM,EAAE,WAAW,MAAM,GAAG,sBAAsB,mBAAmB,gBAAgB,kBAAkB,aAAa;AAN/E;AAAA,EAOtC;AAAA,EA9CD,OAgCqG;AAAA;AAAA;AAAA,EACpG,IAAc,0BAA+C;AAC5D,WAAO,KAAK,kBAAkB,qBAAqB,KAAK;AAAA,EACzD;AAAA,EAaA,MAAgB,kBAAqD;AACpE,WAAO,KAAK,0BAA0B;AAAA,EACvC;AAAA,EAEU,4BAAqC;AAC9C,WAAO;AAAA,EACR;AAAA,EAEA,MAAgB,4BAA0D;AACzE,WAAO,CAAC;AAAA,EACT;AACD;AA3Ba,wCAAN;AAAA,EAMJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAXU;AA6BN,MAAM,uBAAuB,aAAa;AAAA,EA7DjD,OA6DiD;AAAA;AAAA;AAAA,EAChD,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,eAAe;AAAA,MACnB,OAAO,gBAAgB;AAAA,MACvB,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QACP,QAAQ,kBAAkB;AAAA,QAC1B,SAAS,QAAQ;AAAA,QACjB,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,MACA,iBAAiB;AAAA,QAChB,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAAkC;AACrC,aACE,IAAI,kBAAkB,EACtB,YAAY,KAAK,sCAAsC,MAAM;AAAA,EAChE;AACD;AAEA,qBAAqB,cAAc;AAEnC,SAAS;AAAA,EACR,WAAW;AACZ,EAAE,4BAA4B;AAAA,EAC7B,MAAM;AAAA,EACN,QAAQ,sCAAsC;AAAA,EAC9C,aAAa;AAAA,IACZ;AAAA,MACC,aAAa,gBAAgB;AAAA,MAC7B,WAAW,eAAe;AAAA,IAC3B;AAAA,EACD;AACD,CAAC;",
  "names": []
}
