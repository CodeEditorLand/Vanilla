{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AbstractGotoLineQuickAccessProvider } from '../../../contrib/quickAccess/browser/gotoLineQuickAccess.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IQuickAccessRegistry, Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { EditorAction, registerEditorAction, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { KeyMod, KeyCode } from '../../../../base/common/keyCodes.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\n\nexport class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = Event.None;\n\n\tconstructor(@ICodeEditorService private readonly editorService: ICodeEditorService) {\n\t\tsuper();\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn this.editorService.getFocusedCodeEditor() ?? undefined;\n\t}\n}\n\nexport class GotoLineAction extends EditorAction {\n\n\tstatic readonly ID = 'editor.action.gotoLine';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoLineAction.ID,\n\t\t\tlabel: GoToLineNLS.gotoLineActionLabel,\n\t\t\talias: 'Go to Line/Column...',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyG,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyG },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterEditorAction(GotoLineAction);\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneGotoLineQuickAccessProvider,\n\tprefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\n\thelpEntries: [{ description: GoToLineNLS.gotoLineActionLabel, commandId: GotoLineAction.ID }]\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,2CAA2C;AACpD,SAAS,gBAAgB;AACzB,SAAS,sBAAsB,kBAAkB;AACjD,SAAS,0BAA0B;AACnC,SAAS,mBAAmB;AAC5B,SAAS,aAAa;AACtB,SAAS,cAAc,sBAAsB,wBAAwB;AACrE,SAAS,yBAAyB;AAClC,SAAS,QAAQ,eAAe;AAChC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AAE5B,IAAM,wCAAN,cAAoD,oCAAoC;AAAA,EAI9F,YAAiD,eAAmC;AACnF,UAAM;AAD0C;AAAA,EAEjD;AAAA,EAvBD,OAiB+F;AAAA;AAAA;AAAA,EAE3E,qCAAqC,MAAM;AAAA,EAM9D,IAAc,0BAA0B;AACvC,WAAO,KAAK,cAAc,qBAAqB,KAAK;AAAA,EACrD;AACD;AAXa,wCAAN;AAAA,EAIO;AAAA,GAJD;AAaN,MAAM,uBAAuB,aAAa;AAAA,EA9BjD,OA8BiD;AAAA;AAAA;AAAA,EAEhD,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,eAAe;AAAA,MACnB,OAAO,YAAY;AAAA,MACnB,OAAO;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,QACP,QAAQ,kBAAkB;AAAA,QAC1B,SAAS,OAAO,UAAU,QAAQ;AAAA,QAClC,KAAK,EAAE,SAAS,OAAO,UAAU,QAAQ,KAAK;AAAA,QAC9C,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAAkC;AACrC,aAAS,IAAI,kBAAkB,EAAE,YAAY,KAAK,sCAAsC,MAAM;AAAA,EAC/F;AACD;AAEA,qBAAqB,cAAc;AAEnC,SAAS,GAAyB,WAAW,WAAW,EAAE,4BAA4B;AAAA,EACrF,MAAM;AAAA,EACN,QAAQ,sCAAsC;AAAA,EAC9C,aAAa,CAAC,EAAE,aAAa,YAAY,qBAAqB,WAAW,eAAe,GAAG,CAAC;AAC7F,CAAC;",
  "names": []
}
