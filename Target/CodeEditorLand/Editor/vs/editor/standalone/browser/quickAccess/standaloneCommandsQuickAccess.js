var u=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var a=(m,e,i,o)=>{for(var r=o>1?void 0:o?f(e,i):e,d=m.length-1,n;d>=0;d--)(n=m[d])&&(r=(o?n(e,i,r):n(r))||r);return o&&r&&u(e,i,r),r},t=(m,e)=>(i,o)=>e(i,o,m);import{KeyCode as k}from"../../../../base/common/keyCodes.js";import{ICommandService as C}from"../../../../platform/commands/common/commands.js";import{IDialogService as g}from"../../../../platform/dialogs/common/dialogs.js";import{IInstantiationService as l}from"../../../../platform/instantiation/common/instantiation.js";import{IKeybindingService as v}from"../../../../platform/keybinding/common/keybinding.js";import{KeybindingWeight as E}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import"../../../../platform/quickinput/browser/commandsQuickAccess.js";import{Extensions as y}from"../../../../platform/quickinput/common/quickAccess.js";import{IQuickInputService as S}from"../../../../platform/quickinput/common/quickInput.js";import{Registry as A}from"../../../../platform/registry/common/platform.js";import{ITelemetryService as P}from"../../../../platform/telemetry/common/telemetry.js";import{EditorAction as b,registerEditorAction as x}from"../../../browser/editorExtensions.js";import{ICodeEditorService as h}from"../../../browser/services/codeEditorService.js";import"../../../common/editorCommon.js";import{EditorContextKeys as Q}from"../../../common/editorContextKeys.js";import{QuickCommandNLS as p}from"../../../common/standaloneStrings.js";import{AbstractEditorCommandsQuickAccessProvider as D}from"../../../contrib/quickAccess/browser/commandsQuickAccess.js";let c=class extends D{constructor(i,o,r,d,n,I){super({showAlias:!1},i,r,d,n,I);this.codeEditorService=o}get activeTextEditorControl(){return this.codeEditorService.getFocusedCodeEditor()??void 0}async getCommandPicks(){return this.getCodeEditorCommandPicks()}hasAdditionalCommandPicks(){return!1}async getAdditionalCommandPicks(){return[]}};c=a([t(0,l),t(1,h),t(2,v),t(3,C),t(4,P),t(5,g)],c);class s extends b{static ID="editor.action.quickCommand";constructor(){super({id:s.ID,label:p.quickCommandActionLabel,alias:"Command Palette",precondition:void 0,kbOpts:{kbExpr:Q.focus,primary:k.F1,weight:E.EditorContrib},contextMenuOpts:{group:"z_commands",order:1}})}run(e){e.get(S).quickAccess.show(c.PREFIX)}}x(s),A.as(y.Quickaccess).registerQuickAccessProvider({ctor:c,prefix:c.PREFIX,helpEntries:[{description:p.quickCommandHelp,commandId:s.ID}]});export{s as GotoLineAction,c as StandaloneCommandsQuickAccessProvider};
