var u=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var a=(m,e,i,o)=>{for(var r=o>1?void 0:o?f(e,i):e,d=m.length-1,n;d>=0;d--)(n=m[d])&&(r=(o?n(e,i,r):n(r))||r);return o&&r&&u(e,i,r),r},t=(m,e)=>(i,o)=>e(i,o,m);import{Registry as k}from"../../../../platform/registry/common/platform.js";import{Extensions as C}from"../../../../platform/quickinput/common/quickAccess.js";import{QuickCommandNLS as p}from"../../../common/standaloneStrings.js";import"../../../../platform/quickinput/browser/commandsQuickAccess.js";import{ICodeEditorService as g}from"../../../browser/services/codeEditorService.js";import{AbstractEditorCommandsQuickAccessProvider as l}from"../../../contrib/quickAccess/browser/commandsQuickAccess.js";import"../../../common/editorCommon.js";import{IInstantiationService as v}from"../../../../platform/instantiation/common/instantiation.js";import{IKeybindingService as E}from"../../../../platform/keybinding/common/keybinding.js";import{ICommandService as y}from"../../../../platform/commands/common/commands.js";import{ITelemetryService as S}from"../../../../platform/telemetry/common/telemetry.js";import{IDialogService as A}from"../../../../platform/dialogs/common/dialogs.js";import{EditorAction as P,registerEditorAction as b}from"../../../browser/editorExtensions.js";import{EditorContextKeys as x}from"../../../common/editorContextKeys.js";import{KeyCode as h}from"../../../../base/common/keyCodes.js";import{KeybindingWeight as Q}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{IQuickInputService as D}from"../../../../platform/quickinput/common/quickInput.js";let c=class extends l{constructor(i,o,r,d,n,I){super({showAlias:!1},i,r,d,n,I);this.codeEditorService=o}get activeTextEditorControl(){return this.codeEditorService.getFocusedCodeEditor()??void 0}async getCommandPicks(){return this.getCodeEditorCommandPicks()}hasAdditionalCommandPicks(){return!1}async getAdditionalCommandPicks(){return[]}};c=a([t(0,v),t(1,g),t(2,E),t(3,y),t(4,S),t(5,A)],c);class s extends P{static ID="editor.action.quickCommand";constructor(){super({id:s.ID,label:p.quickCommandActionLabel,alias:"Command Palette",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:h.F1,weight:Q.EditorContrib},contextMenuOpts:{group:"z_commands",order:1}})}run(e){e.get(D).quickAccess.show(c.PREFIX)}}b(s),k.as(C.Quickaccess).registerQuickAccessProvider({ctor:c,prefix:c.PREFIX,helpEntries:[{description:p.quickCommandHelp,commandId:s.ID}]});export{s as GotoLineAction,c as StandaloneCommandsQuickAccessProvider};
