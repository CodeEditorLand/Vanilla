var u=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var a=(m,e,i,o)=>{for(var r=o>1?void 0:o?f(e,i):e,d=m.length-1,n;d>=0;d--)(n=m[d])&&(r=(o?n(e,i,r):n(r))||r);return o&&r&&u(e,i,r),r},t=(m,e)=>(i,o)=>e(i,o,m);import{KeyCode as k}from"../../../../../vs/base/common/keyCodes.js";import{EditorAction as C,registerEditorAction as g}from"../../../../../vs/editor/browser/editorExtensions.js";import{ICodeEditorService as l}from"../../../../../vs/editor/browser/services/codeEditorService.js";import"../../../../../vs/editor/common/editorCommon.js";import{EditorContextKeys as v}from"../../../../../vs/editor/common/editorContextKeys.js";import{QuickCommandNLS as p}from"../../../../../vs/editor/common/standaloneStrings.js";import{AbstractEditorCommandsQuickAccessProvider as E}from"../../../../../vs/editor/contrib/quickAccess/browser/commandsQuickAccess.js";import{ICommandService as y}from"../../../../../vs/platform/commands/common/commands.js";import{IDialogService as S}from"../../../../../vs/platform/dialogs/common/dialogs.js";import{IInstantiationService as A}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{IKeybindingService as P}from"../../../../../vs/platform/keybinding/common/keybinding.js";import{KeybindingWeight as b}from"../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import"../../../../../vs/platform/quickinput/browser/commandsQuickAccess.js";import{Extensions as x}from"../../../../../vs/platform/quickinput/common/quickAccess.js";import{IQuickInputService as h}from"../../../../../vs/platform/quickinput/common/quickInput.js";import{Registry as Q}from"../../../../../vs/platform/registry/common/platform.js";import{ITelemetryService as D}from"../../../../../vs/platform/telemetry/common/telemetry.js";let c=class extends E{constructor(i,o,r,d,n,I){super({showAlias:!1},i,r,d,n,I);this.codeEditorService=o}get activeTextEditorControl(){return this.codeEditorService.getFocusedCodeEditor()??void 0}async getCommandPicks(){return this.getCodeEditorCommandPicks()}hasAdditionalCommandPicks(){return!1}async getAdditionalCommandPicks(){return[]}};c=a([t(0,A),t(1,l),t(2,P),t(3,y),t(4,D),t(5,S)],c);class s extends C{static ID="editor.action.quickCommand";constructor(){super({id:s.ID,label:p.quickCommandActionLabel,alias:"Command Palette",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:k.F1,weight:b.EditorContrib},contextMenuOpts:{group:"z_commands",order:1}})}run(e){e.get(h).quickAccess.show(c.PREFIX)}}g(s),Q.as(x.Quickaccess).registerQuickAccessProvider({ctor:c,prefix:c.PREFIX,helpEntries:[{description:p.quickCommandHelp,commandId:s.ID}]});export{s as GotoLineAction,c as StandaloneCommandsQuickAccessProvider};
