import{getAllMethodNames as c}from"../../../base/common/objects.js";import"../../../base/common/uri.js";import"../../../base/common/worker/simpleWorker.js";import{EditorWorkerClient as g}from"../../browser/services/editorWorkerService.js";import"../../common/services/model.js";import{standaloneEditorWorkerDescriptor as l}from"./standaloneServices.js";function x(n,e){return new f(n,e)}class f extends g{_foreignModuleId;_foreignModuleHost;_foreignModuleCreateData;_foreignProxy;constructor(e,r){const t={amdModuleId:l.amdModuleId,esmModuleLocation:l.esmModuleLocation,label:r.label};super(t,r.keepIdleModels||!1,e),this._foreignModuleId=r.moduleId,this._foreignModuleCreateData=r.createData||null,this._foreignModuleHost=r.host||null,this._foreignProxy=null}fhr(e,r){if(!this._foreignModuleHost||typeof this._foreignModuleHost[e]!="function")return Promise.reject(new Error("Missing method "+e+" or missing main thread foreign host."));try{return Promise.resolve(this._foreignModuleHost[e].apply(this._foreignModuleHost,r))}catch(t){return Promise.reject(t)}}_getForeignProxy(){return this._foreignProxy||(this._foreignProxy=this._getProxy().then(e=>{const r=this._foreignModuleHost?c(this._foreignModuleHost):[];return e.$loadForeignModule(this._foreignModuleId,this._foreignModuleCreateData,r).then(t=>{this._foreignModuleCreateData=null;const a=(o,i)=>e.$fmr(o,i),d=(o,i)=>function(){const u=Array.prototype.slice.call(arguments,0);return i(o,u)},s={};for(const o of t)s[o]=d(o,a);return s})})),this._foreignProxy}getProxy(){return this._getForeignProxy()}withSyncedResources(e){return this.workerWithSyncedResources(e).then(r=>this.getProxy())}}export{x as createWebWorker};
