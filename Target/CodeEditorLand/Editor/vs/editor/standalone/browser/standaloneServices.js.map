{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/standalone/browser/standaloneServices.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './standaloneCodeEditorService.js';\nimport './standaloneLayoutService.js';\nimport '../../../platform/undoRedo/common/undoRedoService.js';\nimport '../../common/services/languageFeatureDebounce.js';\nimport '../../common/services/semanticTokensStylingService.js';\nimport '../../common/services/languageFeaturesService.js';\nimport '../../browser/services/hoverService/hoverService.js';\n\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter, Event, IValueWithChangeEvent, ValueWithChangeEvent } from '../../../base/common/event.js';\nimport { ResolvedKeybinding, KeyCodeChord, Keybinding, decodeKeybinding } from '../../../base/common/keybindings.js';\nimport { IDisposable, IReference, ImmortalReference, toDisposable, DisposableStore, Disposable, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IBulkEditOptions, IBulkEditResult, IBulkEditService, ResourceEdit, ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema.js';\nimport { EditOperation, ISingleEditOperation } from '../../common/core/editOperation.js';\nimport { IPosition, Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { ITextModel, ITextSnapshot } from '../../common/model.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { IResolvedTextEditorModel, ITextModelContentProvider, ITextModelService } from '../../common/services/resolverService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService, ITextResourceConfigurationChangeEvent } from '../../common/services/textResourceConfiguration.js';\nimport { CommandsRegistry, ICommandEvent, ICommandHandler, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationChangeEvent, IConfigurationData, IConfigurationOverrides, IConfigurationService, IConfigurationModel, IConfigurationValue, ConfigurationTarget } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { IContextKeyService, ContextKeyExpression } from '../../../platform/contextkey/common/contextkey.js';\nimport { IConfirmation, IConfirmationResult, IDialogService, IInputResult, IPrompt, IPromptResult, IPromptWithCustomCancel, IPromptResultWithCancel, IPromptWithDefaultCancel, IPromptBaseButton } from '../../../platform/dialogs/common/dialogs.js';\nimport { createDecorator, IInstantiationService, ServiceIdentifier } from '../../../platform/instantiation/common/instantiation.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { IKeybindingService, IKeyboardEvent, KeybindingsSchemaContribution } from '../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { IKeybindingItem, KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { ILabelService, ResourceLabelFormatter, IFormatterChangeEvent, Verbosity } from '../../../platform/label/common/label.js';\nimport { INotification, INotificationHandle, INotificationService, IPromptChoice, IPromptOptions, NoOpNotification, IStatusMessageOptions, INotificationSource, INotificationSourceFilter, NotificationsFilter } from '../../../platform/notification/common/notification.js';\nimport { IProgressRunner, IEditorProgressService, IProgressService, IProgress, IProgressCompositeOptions, IProgressDialogOptions, IProgressNotificationOptions, IProgressOptions, IProgressStep, IProgressWindowOptions } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService, TelemetryLevel } from '../../../platform/telemetry/common/telemetry.js';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier, IWorkspace, IWorkspaceContextService, IWorkspaceFolder, IWorkspaceFoldersChangeEvent, IWorkspaceFoldersWillChangeEvent, WorkbenchState, WorkspaceFolder, STANDALONE_EDITOR_WORKSPACE_ID } from '../../../platform/workspace/common/workspace.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings.js';\nimport { basename } from '../../../base/common/resources.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { ConsoleLogger, ILogService } from '../../../platform/log/common/log.js';\nimport { IWorkspaceTrustManagementService, IWorkspaceTrustTransitionParticipant, IWorkspaceTrustUriInfo } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { EditorOption } from '../../common/config/editorOptions.js';\nimport { ICodeEditor, IDiffEditor } from '../../browser/editorBrowser.js';\nimport { IContextMenuService, IContextViewDelegate, IContextViewService, IOpenContextView } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { getSingletonServiceDescriptors, InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { OpenerService } from '../../browser/services/openerService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport { DefaultConfiguration } from '../../../platform/configuration/common/configurations.js';\nimport { WorkspaceEdit } from '../../common/languages.js';\nimport { AccessibilitySignal, AccessibilityModality, IAccessibilitySignalService, Sound } from '../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { LogService } from '../../../platform/log/common/logService.js';\nimport { getEditorFeatures } from '../../common/editorFeatures.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { ExtensionKind, IEnvironmentService, IExtensionHostDebugParams } from '../../../platform/environment/common/environment.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { ITreeSitterParserService } from '../../common/services/treeSitterParserService.js';\nimport { StandaloneTreeSitterParserService } from './standaloneTreeSitterService.js';\nimport { IWorkerDescriptor } from '../../../base/common/worker/simpleWorker.js';\n\nclass SimpleModel implements IResolvedTextEditorModel {\n\n\tprivate readonly model: ITextModel;\n\tprivate readonly _onWillDispose: Emitter<void>;\n\n\tconstructor(model: ITextModel) {\n\t\tthis.model = model;\n\t\tthis._onWillDispose = new Emitter<void>();\n\t}\n\n\tpublic get onWillDispose(): Event<void> {\n\t\treturn this._onWillDispose.event;\n\t}\n\n\tpublic resolve(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic get textEditorModel(): ITextModel {\n\t\treturn this.model;\n\t}\n\n\tpublic createSnapshot(): ITextSnapshot {\n\t\treturn this.model.createSnapshot();\n\t}\n\n\tpublic isReadonly(): boolean {\n\t\treturn false;\n\t}\n\n\tprivate disposed = false;\n\tpublic dispose(): void {\n\t\tthis.disposed = true;\n\n\t\tthis._onWillDispose.fire();\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\tpublic isResolved(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getLanguageId(): string | undefined {\n\t\treturn this.model.getLanguageId();\n\t}\n}\n\nclass StandaloneTextModelService implements ITextModelService {\n\tpublic _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IModelService private readonly modelService: IModelService\n\t) { }\n\n\tpublic createModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>> {\n\t\tconst model = this.modelService.getModel(resource);\n\n\t\tif (!model) {\n\t\t\treturn Promise.reject(new Error(`Model not found`));\n\t\t}\n\n\t\treturn Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n\t}\n\n\tpublic registerTextModelContentProvider(scheme: string, provider: ITextModelContentProvider): IDisposable {\n\t\treturn {\n\t\t\tdispose: function () { /* no op */ }\n\t\t};\n\t}\n\n\tpublic canHandleResource(resource: URI): boolean {\n\t\treturn false;\n\t}\n}\n\nclass StandaloneEditorProgressService implements IEditorProgressService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static NULL_PROGRESS_RUNNER: IProgressRunner = {\n\t\tdone: () => { },\n\t\ttotal: () => { },\n\t\tworked: () => { }\n\t};\n\n\tshow(infinite: true, delay?: number): IProgressRunner;\n\tshow(total: number, delay?: number): IProgressRunner;\n\tshow(): IProgressRunner {\n\t\treturn StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n\t}\n\n\tasync showWhile(promise: Promise<any>, delay?: number): Promise<void> {\n\t\tawait promise;\n\t}\n}\n\nclass StandaloneProgressService implements IProgressService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\twithProgress<R>(_options: IProgressOptions | IProgressDialogOptions | IProgressNotificationOptions | IProgressWindowOptions | IProgressCompositeOptions, task: (progress: IProgress<IProgressStep>) => Promise<R>, onDidCancel?: ((choice?: number | undefined) => void) | undefined): Promise<R> {\n\t\treturn task({\n\t\t\treport: () => { },\n\t\t});\n\t}\n}\n\nclass StandaloneEnvironmentService implements IEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly stateResource: URI = URI.from({ scheme: 'monaco', authority: 'stateResource' });\n\treadonly userRoamingDataHome: URI = URI.from({ scheme: 'monaco', authority: 'userRoamingDataHome' });\n\treadonly keyboardLayoutResource: URI = URI.from({ scheme: 'monaco', authority: 'keyboardLayoutResource' });\n\treadonly argvResource: URI = URI.from({ scheme: 'monaco', authority: 'argvResource' });\n\treadonly untitledWorkspacesHome: URI = URI.from({ scheme: 'monaco', authority: 'untitledWorkspacesHome' });\n\treadonly workspaceStorageHome: URI = URI.from({ scheme: 'monaco', authority: 'workspaceStorageHome' });\n\treadonly localHistoryHome: URI = URI.from({ scheme: 'monaco', authority: 'localHistoryHome' });\n\treadonly cacheHome: URI = URI.from({ scheme: 'monaco', authority: 'cacheHome' });\n\treadonly userDataSyncHome: URI = URI.from({ scheme: 'monaco', authority: 'userDataSyncHome' });\n\treadonly sync: 'on' | 'off' | undefined = undefined;\n\treadonly continueOn?: string | undefined = undefined;\n\treadonly editSessionId?: string | undefined = undefined;\n\treadonly debugExtensionHost: IExtensionHostDebugParams = { port: null, break: false };\n\treadonly isExtensionDevelopment: boolean = false;\n\treadonly disableExtensions: boolean | string[] = false;\n\treadonly enableExtensions?: readonly string[] | undefined = undefined;\n\treadonly extensionDevelopmentLocationURI?: URI[] | undefined = undefined;\n\treadonly extensionDevelopmentKind?: ExtensionKind[] | undefined = undefined;\n\treadonly extensionTestsLocationURI?: URI | undefined = undefined;\n\treadonly logsHome: URI = URI.from({ scheme: 'monaco', authority: 'logsHome' });\n\treadonly logLevel?: string | undefined = undefined;\n\treadonly extensionLogLevel?: [string, string][] | undefined = undefined;\n\treadonly verbose: boolean = false;\n\treadonly isBuilt: boolean = false;\n\treadonly disableTelemetry: boolean = false;\n\treadonly serviceMachineIdResource: URI = URI.from({ scheme: 'monaco', authority: 'serviceMachineIdResource' });\n\treadonly policyFile?: URI | undefined = undefined;\n}\n\nclass StandaloneDialogService implements IDialogService {\n\n\t_serviceBrand: undefined;\n\n\treadonly onWillShowDialog = Event.None;\n\treadonly onDidShowDialog = Event.None;\n\n\tasync confirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\tconst confirmed = this.doConfirm(confirmation.message, confirmation.detail);\n\n\t\treturn {\n\t\t\tconfirmed,\n\t\t\tcheckboxChecked: false // unsupported\n\t\t};\n\t}\n\n\tprivate doConfirm(message: string, detail?: string): boolean {\n\t\tlet messageText = message;\n\t\tif (detail) {\n\t\t\tmessageText = messageText + '\\n\\n' + detail;\n\t\t}\n\n\t\treturn mainWindow.confirm(messageText);\n\t}\n\n\tprompt<T>(prompt: IPromptWithCustomCancel<T>): Promise<IPromptResultWithCancel<T>>;\n\tprompt<T>(prompt: IPrompt<T>): Promise<IPromptResult<T>>;\n\tprompt<T>(prompt: IPromptWithDefaultCancel<T>): Promise<IPromptResult<T>>;\n\tasync prompt<T>(prompt: IPrompt<T> | IPromptWithCustomCancel<T>): Promise<IPromptResult<T> | IPromptResultWithCancel<T>> {\n\t\tlet result: T | undefined = undefined;\n\t\tconst confirmed = this.doConfirm(prompt.message, prompt.detail);\n\t\tif (confirmed) {\n\t\t\tconst promptButtons: IPromptBaseButton<T>[] = [...(prompt.buttons ?? [])];\n\t\t\tif (prompt.cancelButton && typeof prompt.cancelButton !== 'string' && typeof prompt.cancelButton !== 'boolean') {\n\t\t\t\tpromptButtons.push(prompt.cancelButton);\n\t\t\t}\n\n\t\t\tresult = await promptButtons[0]?.run({ checkboxChecked: false });\n\t\t}\n\n\t\treturn { result };\n\t}\n\n\tasync info(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Info, message, detail });\n\t}\n\n\tasync warn(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Warning, message, detail });\n\t}\n\n\tasync error(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Error, message, detail });\n\t}\n\n\tinput(): Promise<IInputResult> {\n\t\treturn Promise.resolve({ confirmed: false }); // unsupported\n\t}\n\n\tabout(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nexport class StandaloneNotificationService implements INotificationService {\n\n\treadonly onDidAddNotification: Event<INotification> = Event.None;\n\n\treadonly onDidRemoveNotification: Event<INotification> = Event.None;\n\n\treadonly onDidChangeFilter: Event<void> = Event.None;\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate static readonly NO_OP: INotificationHandle = new NoOpNotification();\n\n\tpublic info(message: string): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Info, message });\n\t}\n\n\tpublic warn(message: string): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Warning, message });\n\t}\n\n\tpublic error(error: string | Error): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Error, message: error });\n\t}\n\n\tpublic notify(notification: INotification): INotificationHandle {\n\t\tswitch (notification.severity) {\n\t\t\tcase Severity.Error:\n\t\t\t\tconsole.error(notification.message);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\tconsole.warn(notification.message);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(notification.message);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn StandaloneNotificationService.NO_OP;\n\t}\n\n\tpublic prompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle {\n\t\treturn StandaloneNotificationService.NO_OP;\n\t}\n\n\tpublic status(message: string | Error, options?: IStatusMessageOptions): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\n\tpublic setFilter(filter: NotificationsFilter | INotificationSourceFilter): void { }\n\n\tpublic getFilter(source?: INotificationSource): NotificationsFilter {\n\t\treturn NotificationsFilter.OFF;\n\t}\n\n\tpublic getFilters(): INotificationSourceFilter[] {\n\t\treturn [];\n\t}\n\n\tpublic removeFilter(sourceId: string): void { }\n}\n\nexport class StandaloneCommandService implements ICommandService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _instantiationService: IInstantiationService;\n\n\tprivate readonly _onWillExecuteCommand = new Emitter<ICommandEvent>();\n\tprivate readonly _onDidExecuteCommand = new Emitter<ICommandEvent>();\n\tpublic readonly onWillExecuteCommand: Event<ICommandEvent> = this._onWillExecuteCommand.event;\n\tpublic readonly onDidExecuteCommand: Event<ICommandEvent> = this._onDidExecuteCommand.event;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tthis._instantiationService = instantiationService;\n\t}\n\n\tpublic executeCommand<T>(id: string, ...args: any[]): Promise<T> {\n\t\tconst command = CommandsRegistry.getCommand(id);\n\t\tif (!command) {\n\t\t\treturn Promise.reject(new Error(`command '${id}' not found`));\n\t\t}\n\n\t\ttry {\n\t\t\tthis._onWillExecuteCommand.fire({ commandId: id, args });\n\t\t\tconst result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]) as T;\n\n\t\t\tthis._onDidExecuteCommand.fire({ commandId: id, args });\n\t\t\treturn Promise.resolve(result);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n}\n\nexport interface IKeybindingRule {\n\tkeybinding: number;\n\tcommand?: string | null;\n\tcommandArgs?: any;\n\twhen?: ContextKeyExpression | null;\n}\n\nexport class StandaloneKeybindingService extends AbstractKeybindingService {\n\tprivate _cachedResolver: KeybindingResolver | null;\n\tprivate _dynamicKeybindings: IKeybindingItem[];\n\tprivate readonly _domNodeListeners: DomNodeListeners[];\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@ILogService logService: ILogService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService\n\t) {\n\t\tsuper(contextKeyService, commandService, telemetryService, notificationService, logService);\n\n\t\tthis._cachedResolver = null;\n\t\tthis._dynamicKeybindings = [];\n\t\tthis._domNodeListeners = [];\n\n\t\tconst addContainer = (domNode: HTMLElement) => {\n\t\t\tconst disposables = new DisposableStore();\n\n\t\t\t// for standard keybindings\n\t\t\tdisposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\t\tconst shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n\t\t\t\tif (shouldPreventDefault) {\n\t\t\t\t\tkeyEvent.preventDefault();\n\t\t\t\t\tkeyEvent.stopPropagation();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\t// for single modifier chord keybindings (e.g. shift shift)\n\t\t\tdisposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e: KeyboardEvent) => {\n\t\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\t\tconst shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n\t\t\t\tif (shouldPreventDefault) {\n\t\t\t\t\tkeyEvent.preventDefault();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n\t\t};\n\t\tconst removeContainer = (domNode: HTMLElement) => {\n\t\t\tfor (let i = 0; i < this._domNodeListeners.length; i++) {\n\t\t\t\tconst domNodeListeners = this._domNodeListeners[i];\n\t\t\t\tif (domNodeListeners.domNode === domNode) {\n\t\t\t\t\tthis._domNodeListeners.splice(i, 1);\n\t\t\t\t\tdomNodeListeners.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst addCodeEditor = (codeEditor: ICodeEditor) => {\n\t\t\tif (codeEditor.getOption(EditorOption.inDiffEditor)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\taddContainer(codeEditor.getContainerDomNode());\n\t\t};\n\t\tconst removeCodeEditor = (codeEditor: ICodeEditor) => {\n\t\t\tif (codeEditor.getOption(EditorOption.inDiffEditor)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tremoveContainer(codeEditor.getContainerDomNode());\n\t\t};\n\t\tthis._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n\t\tthis._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n\t\tcodeEditorService.listCodeEditors().forEach(addCodeEditor);\n\n\t\tconst addDiffEditor = (diffEditor: IDiffEditor) => {\n\t\t\taddContainer(diffEditor.getContainerDomNode());\n\t\t};\n\t\tconst removeDiffEditor = (diffEditor: IDiffEditor) => {\n\t\t\tremoveContainer(diffEditor.getContainerDomNode());\n\t\t};\n\t\tthis._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n\t\tthis._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n\t\tcodeEditorService.listDiffEditors().forEach(addDiffEditor);\n\t}\n\n\tpublic addDynamicKeybinding(command: string, keybinding: number, handler: ICommandHandler, when: ContextKeyExpression | undefined): IDisposable {\n\t\treturn combinedDisposable(\n\t\t\tCommandsRegistry.registerCommand(command, handler),\n\t\t\tthis.addDynamicKeybindings([{\n\t\t\t\tkeybinding,\n\t\t\t\tcommand,\n\t\t\t\twhen\n\t\t\t}])\n\t\t);\n\t}\n\n\tpublic addDynamicKeybindings(rules: IKeybindingRule[]): IDisposable {\n\t\tconst entries: IKeybindingItem[] = rules.map((rule) => {\n\t\t\tconst keybinding = decodeKeybinding(rule.keybinding, OS);\n\t\t\treturn {\n\t\t\t\tkeybinding,\n\t\t\t\tcommand: rule.command ?? null,\n\t\t\t\tcommandArgs: rule.commandArgs,\n\t\t\t\twhen: rule.when,\n\t\t\t\tweight1: 1000,\n\t\t\t\tweight2: 0,\n\t\t\t\textensionId: null,\n\t\t\t\tisBuiltinExtension: false\n\t\t\t};\n\t\t});\n\t\tthis._dynamicKeybindings = this._dynamicKeybindings.concat(entries);\n\n\t\tthis.updateResolver();\n\n\t\treturn toDisposable(() => {\n\t\t\t// Search the first entry and remove them all since they will be contiguous\n\t\t\tfor (let i = 0; i < this._dynamicKeybindings.length; i++) {\n\t\t\t\tif (this._dynamicKeybindings[i] === entries[0]) {\n\t\t\t\t\tthis._dynamicKeybindings.splice(i, entries.length);\n\t\t\t\t\tthis.updateResolver();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateResolver(): void {\n\t\tthis._cachedResolver = null;\n\t\tthis._onDidUpdateKeybindings.fire();\n\t}\n\n\tprotected _getResolver(): KeybindingResolver {\n\t\tif (!this._cachedResolver) {\n\t\t\tconst defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n\t\t\tconst overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n\t\t\tthis._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n\t\t}\n\t\treturn this._cachedResolver;\n\t}\n\n\tprotected _documentHasFocus(): boolean {\n\t\treturn mainWindow.document.hasFocus();\n\t}\n\n\tprivate _toNormalizedKeybindingItems(items: IKeybindingItem[], isDefault: boolean): ResolvedKeybindingItem[] {\n\t\tconst result: ResolvedKeybindingItem[] = [];\n\t\tlet resultLen = 0;\n\t\tfor (const item of items) {\n\t\t\tconst when = item.when || undefined;\n\t\t\tconst keybinding = item.keybinding;\n\n\t\t\tif (!keybinding) {\n\t\t\t\t// This might be a removal keybinding item in user settings => accept it\n\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t} else {\n\t\t\t\tconst resolvedKeybindings = USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS);\n\t\t\t\tfor (const resolvedKeybinding of resolvedKeybindings) {\n\t\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic resolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[] {\n\t\treturn USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS);\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\tconst chord = new KeyCodeChord(\n\t\t\tkeyboardEvent.ctrlKey,\n\t\t\tkeyboardEvent.shiftKey,\n\t\t\tkeyboardEvent.altKey,\n\t\t\tkeyboardEvent.metaKey,\n\t\t\tkeyboardEvent.keyCode\n\t\t);\n\t\treturn new USLayoutResolvedKeybinding([chord], OS);\n\t}\n\n\tpublic resolveUserBinding(userBinding: string): ResolvedKeybinding[] {\n\t\treturn [];\n\t}\n\n\tpublic _dumpDebugInfo(): string {\n\t\treturn '';\n\t}\n\n\tpublic _dumpDebugInfoJSON(): string {\n\t\treturn '';\n\t}\n\n\tpublic registerSchemaContribution(contribution: KeybindingsSchemaContribution): void {\n\t\t// noop\n\t}\n\n\t/**\n\t * not yet supported\n\t */\n\tpublic override enableKeybindingHoldMode(commandId: string): Promise<void> | undefined {\n\t\treturn undefined;\n\t}\n}\n\nclass DomNodeListeners extends Disposable {\n\tconstructor(\n\t\tpublic readonly domNode: HTMLElement,\n\t\tdisposables: DisposableStore\n\t) {\n\t\tsuper();\n\t\tthis._register(disposables);\n\t}\n}\n\nfunction isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport class StandaloneConfigurationService implements IConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<IConfigurationChangeEvent>();\n\tpublic readonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tprivate readonly _configuration: Configuration;\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tconst defaultConfiguration = new DefaultConfiguration(logService);\n\t\tthis._configuration = new Configuration(\n\t\t\tdefaultConfiguration.reload(),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tnew ResourceMap<ConfigurationModel>(),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tnew ResourceMap<ConfigurationModel>(),\n\t\t\tlogService\n\t\t);\n\t\tdefaultConfiguration.dispose();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this._configuration.getValue(section, overrides, undefined);\n\t}\n\n\tpublic updateValues(values: [string, any][]): Promise<void> {\n\t\tconst previous = { data: this._configuration.toData() };\n\n\t\tconst changedKeys: string[] = [];\n\n\t\tfor (const entry of values) {\n\t\t\tconst [key, value] = entry;\n\t\t\tif (this.getValue(key) === value) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._configuration.updateValue(key, value);\n\t\t\tchangedKeys.push(key);\n\t\t}\n\n\t\tif (changedKeys.length > 0) {\n\t\t\tconst configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration, undefined, this.logService);\n\t\t\tconfigurationChangeEvent.source = ConfigurationTarget.MEMORY;\n\t\t\tthis._onDidChangeConfiguration.fire(configurationChangeEvent);\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic updateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn this.updateValues([[key, value]]);\n\t}\n\n\tpublic inspect<C>(key: string, options: IConfigurationOverrides = {}): IConfigurationValue<C> {\n\t\treturn this._configuration.inspect<C>(key, options, undefined);\n\t}\n\n\tpublic keys() {\n\t\treturn this._configuration.keys(undefined);\n\t}\n\n\tpublic reloadConfiguration(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic getConfigurationData(): IConfigurationData | null {\n\t\tconst emptyModel: IConfigurationModel = {\n\t\t\tcontents: {},\n\t\t\tkeys: [],\n\t\t\toverrides: []\n\t\t};\n\t\treturn {\n\t\t\tdefaults: emptyModel,\n\t\t\tpolicy: emptyModel,\n\t\t\tapplication: emptyModel,\n\t\t\tuser: emptyModel,\n\t\t\tworkspace: emptyModel,\n\t\t\tfolders: []\n\t\t};\n\t}\n}\n\nclass StandaloneResourceConfigurationService implements ITextResourceConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<ITextResourceConfigurationChangeEvent>();\n\tpublic readonly onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: StandaloneConfigurationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService\n\t) {\n\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\tthis._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource: URI, configuration: string) => e.affectsConfiguration(configuration) });\n\t\t});\n\t}\n\n\tgetValue<T>(resource: URI, section?: string): T;\n\tgetValue<T>(resource: URI, position?: IPosition, section?: string): T;\n\tgetValue<T>(resource: URI | undefined, arg2?: any, arg3?: any) {\n\t\tconst position: IPosition | null = Pos.isIPosition(arg2) ? arg2 : null;\n\t\tconst section: string | undefined = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n\t\tconst language = resource ? this.getLanguage(resource, position) : undefined;\n\t\tif (typeof section === 'undefined') {\n\t\t\treturn this.configurationService.getValue<T>({\n\t\t\t\tresource,\n\t\t\t\toverrideIdentifier: language\n\t\t\t});\n\t\t}\n\t\treturn this.configurationService.getValue<T>(section, {\n\t\t\tresource,\n\t\t\toverrideIdentifier: language\n\t\t});\n\t}\n\n\tinspect<T>(resource: URI | undefined, position: IPosition | null, section: string): IConfigurationValue<Readonly<T>> {\n\t\tconst language = resource ? this.getLanguage(resource, position) : undefined;\n\t\treturn this.configurationService.inspect<T>(section, { resource, overrideIdentifier: language });\n\t}\n\n\tprivate getLanguage(resource: URI, position: IPosition | null): string | null {\n\t\tconst model = this.modelService.getModel(resource);\n\t\tif (model) {\n\t\t\treturn position ? model.getLanguageIdAtPosition(position.lineNumber, position.column) : model.getLanguageId();\n\t\t}\n\t\treturn this.languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n\t}\n\n\tupdateValue(resource: URI, key: string, value: any, configurationTarget?: ConfigurationTarget): Promise<void> {\n\t\treturn this.configurationService.updateValue(key, value, { resource }, configurationTarget);\n\t}\n}\n\nclass StandaloneResourcePropertiesService implements ITextResourcePropertiesService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\n\tgetEOL(resource: URI, language?: string): string {\n\t\tconst eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n\t\tif (eol && typeof eol === 'string' && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n\t}\n}\n\nclass StandaloneTelemetryService implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly telemetryLevel = TelemetryLevel.NONE;\n\treadonly sessionId = 'someValue.sessionId';\n\treadonly machineId = 'someValue.machineId';\n\treadonly sqmId = 'someValue.sqmId';\n\treadonly devDeviceId = 'someValue.devDeviceId';\n\treadonly firstSessionDate = 'someValue.firstSessionDate';\n\treadonly sendErrorTelemetry = false;\n\tsetEnabled(): void { }\n\tsetExperimentProperty(): void { }\n\tpublicLog() { }\n\tpublicLog2() { }\n\tpublicLogError() { }\n\tpublicLogError2() { }\n}\n\nclass StandaloneWorkspaceContextService implements IWorkspaceContextService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate static readonly SCHEME = 'inmemory';\n\n\tprivate readonly _onDidChangeWorkspaceName = new Emitter<void>();\n\tpublic readonly onDidChangeWorkspaceName: Event<void> = this._onDidChangeWorkspaceName.event;\n\n\tprivate readonly _onWillChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersWillChangeEvent>();\n\tpublic readonly onWillChangeWorkspaceFolders: Event<IWorkspaceFoldersWillChangeEvent> = this._onWillChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersChangeEvent>();\n\tpublic readonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent> = this._onDidChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkbenchState = new Emitter<WorkbenchState>();\n\tpublic readonly onDidChangeWorkbenchState: Event<WorkbenchState> = this._onDidChangeWorkbenchState.event;\n\n\tprivate readonly workspace: IWorkspace;\n\n\tconstructor() {\n\t\tconst resource = URI.from({ scheme: StandaloneWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n\t\tthis.workspace = { id: STANDALONE_EDITOR_WORKSPACE_ID, folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n\t}\n\n\tgetCompleteWorkspace(): Promise<IWorkspace> {\n\t\treturn Promise.resolve(this.getWorkspace());\n\t}\n\n\tpublic getWorkspace(): IWorkspace {\n\t\treturn this.workspace;\n\t}\n\n\tpublic getWorkbenchState(): WorkbenchState {\n\t\tif (this.workspace) {\n\t\t\tif (this.workspace.configuration) {\n\t\t\t\treturn WorkbenchState.WORKSPACE;\n\t\t\t}\n\t\t\treturn WorkbenchState.FOLDER;\n\t\t}\n\t\treturn WorkbenchState.EMPTY;\n\t}\n\n\tpublic getWorkspaceFolder(resource: URI): IWorkspaceFolder | null {\n\t\treturn resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n\t}\n\n\tpublic isInsideWorkspace(resource: URI): boolean {\n\t\treturn resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME;\n\t}\n\n\tpublic isCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean {\n\t\treturn true;\n\t}\n}\n\nexport function updateConfigurationService(configurationService: IConfigurationService, source: any, isDiffEditor: boolean): void {\n\tif (!source) {\n\t\treturn;\n\t}\n\tif (!(configurationService instanceof StandaloneConfigurationService)) {\n\t\treturn;\n\t}\n\tconst toUpdate: [string, any][] = [];\n\tObject.keys(source).forEach((key) => {\n\t\tif (isEditorConfigurationKey(key)) {\n\t\t\ttoUpdate.push([`editor.${key}`, source[key]]);\n\t\t}\n\t\tif (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n\t\t\ttoUpdate.push([`diffEditor.${key}`, source[key]]);\n\t\t}\n\t});\n\tif (toUpdate.length > 0) {\n\t\tconfigurationService.updateValues(toUpdate);\n\t}\n}\n\nclass StandaloneBulkEditService implements IBulkEditService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IModelService private readonly _modelService: IModelService\n\t) {\n\t\t//\n\t}\n\n\thasPreviewHandler(): false {\n\t\treturn false;\n\t}\n\n\tsetPreviewHandler(): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tasync apply(editsIn: ResourceEdit[] | WorkspaceEdit, _options?: IBulkEditOptions): Promise<IBulkEditResult> {\n\t\tconst edits = Array.isArray(editsIn) ? editsIn : ResourceEdit.convert(editsIn);\n\t\tconst textEdits = new Map<ITextModel, ISingleEditOperation[]>();\n\n\t\tfor (const edit of edits) {\n\t\t\tif (!(edit instanceof ResourceTextEdit)) {\n\t\t\t\tthrow new Error('bad edit - only text edits are supported');\n\t\t\t}\n\t\t\tconst model = this._modelService.getModel(edit.resource);\n\t\t\tif (!model) {\n\t\t\t\tthrow new Error('bad edit - model not found');\n\t\t\t}\n\t\t\tif (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n\t\t\t\tthrow new Error('bad state - model changed in the meantime');\n\t\t\t}\n\t\t\tlet array = textEdits.get(model);\n\t\t\tif (!array) {\n\t\t\t\tarray = [];\n\t\t\t\ttextEdits.set(model, array);\n\t\t\t}\n\t\t\tarray.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n\t\t}\n\n\n\t\tlet totalEdits = 0;\n\t\tlet totalFiles = 0;\n\t\tfor (const [model, edits] of textEdits) {\n\t\t\tmodel.pushStackElement();\n\t\t\tmodel.pushEditOperations([], edits, () => []);\n\t\t\tmodel.pushStackElement();\n\t\t\ttotalFiles += 1;\n\t\t\ttotalEdits += edits.length;\n\t\t}\n\n\t\treturn {\n\t\t\tariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles),\n\t\t\tisApplied: totalEdits > 0\n\t\t};\n\t}\n}\n\nclass StandaloneUriLabelService implements ILabelService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tpublic readonly onDidChangeFormatters: Event<IFormatterChangeEvent> = Event.None;\n\n\tpublic getUriLabel(resource: URI, options?: { relative?: boolean; forceNoTildify?: boolean }): string {\n\t\tif (resource.scheme === 'file') {\n\t\t\treturn resource.fsPath;\n\t\t}\n\t\treturn resource.path;\n\t}\n\n\tgetUriBasenameLabel(resource: URI): string {\n\t\treturn basename(resource);\n\t}\n\n\tpublic getWorkspaceLabel(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI | IWorkspace, options?: { verbose: Verbosity }): string {\n\t\treturn '';\n\t}\n\n\tpublic getSeparator(scheme: string, authority?: string): '/' | '\\\\' {\n\t\treturn '/';\n\t}\n\n\tpublic registerFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic registerCachedFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\treturn this.registerFormatter(formatter);\n\t}\n\n\tpublic getHostLabel(): string {\n\t\treturn '';\n\t}\n\n\tpublic getHostTooltip(): string | undefined {\n\t\treturn undefined;\n\t}\n}\n\n\nclass StandaloneContextViewService extends ContextViewService {\n\n\tconstructor(\n\t\t@ILayoutService layoutService: ILayoutService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper(layoutService);\n\t}\n\n\toverride showContextView(delegate: IContextViewDelegate, container?: HTMLElement, shadowRoot?: boolean): IOpenContextView {\n\t\tif (!container) {\n\t\t\tconst codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n\t\t\tif (codeEditor) {\n\t\t\t\tcontainer = codeEditor.getContainerDomNode();\n\t\t\t}\n\t\t}\n\t\treturn super.showContextView(delegate, container, shadowRoot);\n\t}\n}\n\nclass StandaloneWorkspaceTrustManagementService implements IWorkspaceTrustManagementService {\n\t_serviceBrand: undefined;\n\n\tprivate _neverEmitter = new Emitter<never>();\n\tpublic readonly onDidChangeTrust: Event<boolean> = this._neverEmitter.event;\n\tonDidChangeTrustedFolders: Event<void> = this._neverEmitter.event;\n\tpublic readonly workspaceResolved = Promise.resolve();\n\tpublic readonly workspaceTrustInitialized = Promise.resolve();\n\tpublic readonly acceptsOutOfWorkspaceFiles = true;\n\n\tisWorkspaceTrusted(): boolean {\n\t\treturn true;\n\t}\n\tisWorkspaceTrustForced(): boolean {\n\t\treturn false;\n\t}\n\tcanSetParentFolderTrust(): boolean {\n\t\treturn false;\n\t}\n\tasync setParentFolderTrust(trusted: boolean): Promise<void> {\n\t\t// noop\n\t}\n\tcanSetWorkspaceTrust(): boolean {\n\t\treturn false;\n\t}\n\tasync setWorkspaceTrust(trusted: boolean): Promise<void> {\n\t\t// noop\n\t}\n\tgetUriTrustInfo(uri: URI): Promise<IWorkspaceTrustUriInfo> {\n\t\tthrow new Error('Method not supported.');\n\t}\n\tasync setUrisTrust(uri: URI[], trusted: boolean): Promise<void> {\n\t\t// noop\n\t}\n\tgetTrustedUris(): URI[] {\n\t\treturn [];\n\t}\n\tasync setTrustedUris(uris: URI[]): Promise<void> {\n\t\t// noop\n\t}\n\taddWorkspaceTrustTransitionParticipant(participant: IWorkspaceTrustTransitionParticipant): IDisposable {\n\t\tthrow new Error('Method not supported.');\n\t}\n}\n\nclass StandaloneLanguageService extends LanguageService {\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nclass StandaloneLogService extends LogService {\n\tconstructor() {\n\t\tsuper(new ConsoleLogger());\n\t}\n}\n\nclass StandaloneContextMenuService extends ContextMenuService {\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService);\n\t\tthis.configure({ blockMouse: false }); // we do not want that in the standalone editor\n\t}\n}\n\nexport const standaloneEditorWorkerDescriptor: IWorkerDescriptor = {\n\tamdModuleId: 'vs/editor/common/services/editorSimpleWorker',\n\tesmModuleLocation: undefined,\n\tlabel: 'editorWorkerService'\n};\n\nclass StandaloneEditorWorkerService extends EditorWorkerService {\n\tconstructor(\n\t\t@IModelService modelService: IModelService,\n\t\t@ITextResourceConfigurationService configurationService: ITextResourceConfigurationService,\n\t\t@ILogService logService: ILogService,\n\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper(standaloneEditorWorkerDescriptor, modelService, configurationService, logService, languageConfigurationService, languageFeaturesService);\n\t}\n}\n\nclass StandaloneAccessbilitySignalService implements IAccessibilitySignalService {\n\t_serviceBrand: undefined;\n\tasync playSignal(cue: AccessibilitySignal, options: {}): Promise<void> {\n\t}\n\n\tasync playSignals(cues: AccessibilitySignal[]): Promise<void> {\n\t}\n\n\tgetEnabledState(signal: AccessibilitySignal, userGesture: boolean, modality?: AccessibilityModality | undefined): IValueWithChangeEvent<boolean> {\n\t\treturn ValueWithChangeEvent.const(false);\n\t}\n\n\tgetDelayMs(signal: AccessibilitySignal, modality: AccessibilityModality): number {\n\t\treturn 0;\n\t}\n\n\tisSoundEnabled(cue: AccessibilitySignal): boolean {\n\t\treturn false;\n\t}\n\n\tisAnnouncementEnabled(cue: AccessibilitySignal): boolean {\n\t\treturn false;\n\t}\n\n\tonSoundEnabledChanged(cue: AccessibilitySignal): Event<void> {\n\t\treturn Event.None;\n\t}\n\n\tasync playSound(cue: Sound, allowManyInParallel?: boolean | undefined): Promise<void> {\n\t}\n\tplaySignalLoop(cue: AccessibilitySignal): IDisposable {\n\t\treturn toDisposable(() => { });\n\t}\n}\n\nexport interface IEditorOverrideServices {\n\t[index: string]: any;\n}\n\nregisterSingleton(ILogService, StandaloneLogService, InstantiationType.Eager);\nregisterSingleton(IConfigurationService, StandaloneConfigurationService, InstantiationType.Eager);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService, InstantiationType.Eager);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService, InstantiationType.Eager);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService, InstantiationType.Eager);\nregisterSingleton(ILabelService, StandaloneUriLabelService, InstantiationType.Eager);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService, InstantiationType.Eager);\nregisterSingleton(IDialogService, StandaloneDialogService, InstantiationType.Eager);\nregisterSingleton(IEnvironmentService, StandaloneEnvironmentService, InstantiationType.Eager);\nregisterSingleton(INotificationService, StandaloneNotificationService, InstantiationType.Eager);\nregisterSingleton(IMarkerService, MarkerService, InstantiationType.Eager);\nregisterSingleton(ILanguageService, StandaloneLanguageService, InstantiationType.Eager);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService, InstantiationType.Eager);\nregisterSingleton(IModelService, ModelService, InstantiationType.Eager);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService, InstantiationType.Eager);\nregisterSingleton(IContextKeyService, ContextKeyService, InstantiationType.Eager);\nregisterSingleton(IProgressService, StandaloneProgressService, InstantiationType.Eager);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService, InstantiationType.Eager);\nregisterSingleton(IStorageService, InMemoryStorageService, InstantiationType.Eager);\nregisterSingleton(IEditorWorkerService, StandaloneEditorWorkerService, InstantiationType.Eager);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService, InstantiationType.Eager);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService, InstantiationType.Eager);\nregisterSingleton(ITextModelService, StandaloneTextModelService, InstantiationType.Eager);\nregisterSingleton(IAccessibilityService, AccessibilityService, InstantiationType.Eager);\nregisterSingleton(IListService, ListService, InstantiationType.Eager);\nregisterSingleton(ICommandService, StandaloneCommandService, InstantiationType.Eager);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService, InstantiationType.Eager);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService, InstantiationType.Eager);\nregisterSingleton(IContextViewService, StandaloneContextViewService, InstantiationType.Eager);\nregisterSingleton(IOpenerService, OpenerService, InstantiationType.Eager);\nregisterSingleton(IClipboardService, BrowserClipboardService, InstantiationType.Eager);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService, InstantiationType.Eager);\nregisterSingleton(IMenuService, MenuService, InstantiationType.Eager);\nregisterSingleton(IAccessibilitySignalService, StandaloneAccessbilitySignalService, InstantiationType.Eager);\nregisterSingleton(ITreeSitterParserService, StandaloneTreeSitterParserService, InstantiationType.Eager);\n\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport module StandaloneServices {\n\n\tconst serviceCollection = new ServiceCollection();\n\tfor (const [id, descriptor] of getSingletonServiceDescriptors()) {\n\t\tserviceCollection.set(id, descriptor);\n\t}\n\n\tconst instantiationService = new InstantiationService(serviceCollection, true);\n\tserviceCollection.set(IInstantiationService, instantiationService);\n\n\texport function get<T>(serviceId: ServiceIdentifier<T>): T {\n\t\tif (!initialized) {\n\t\t\tinitialize({});\n\t\t}\n\t\tconst r = serviceCollection.get(serviceId);\n\t\tif (!r) {\n\t\t\tthrow new Error('Missing service ' + serviceId);\n\t\t}\n\t\tif (r instanceof SyncDescriptor) {\n\t\t\treturn instantiationService.invokeFunction((accessor) => accessor.get(serviceId));\n\t\t} else {\n\t\t\treturn r;\n\t\t}\n\t}\n\n\tlet initialized = false;\n\tconst onDidInitialize = new Emitter<void>();\n\texport function initialize(overrides: IEditorOverrideServices): IInstantiationService {\n\t\tif (initialized) {\n\t\t\treturn instantiationService;\n\t\t}\n\t\tinitialized = true;\n\n\t\t// Add singletons that were registered after this module loaded\n\t\tfor (const [id, descriptor] of getSingletonServiceDescriptors()) {\n\t\t\tif (!serviceCollection.get(id)) {\n\t\t\t\tserviceCollection.set(id, descriptor);\n\t\t\t}\n\t\t}\n\n\t\t// Initialize the service collection with the overrides, but only if the\n\t\t// service was not instantiated in the meantime.\n\t\tfor (const serviceId in overrides) {\n\t\t\tif (overrides.hasOwnProperty(serviceId)) {\n\t\t\t\tconst serviceIdentifier = createDecorator(serviceId);\n\t\t\t\tconst r = serviceCollection.get(serviceIdentifier);\n\t\t\t\tif (r instanceof SyncDescriptor) {\n\t\t\t\t\tserviceCollection.set(serviceIdentifier, overrides[serviceId]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Instantiate all editor features\n\t\tconst editorFeatures = getEditorFeatures();\n\t\tfor (const feature of editorFeatures) {\n\t\t\ttry {\n\t\t\t\tinstantiationService.createInstance(feature);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\n\t\tonDidInitialize.fire();\n\n\t\treturn instantiationService;\n\t}\n\n\t/**\n\t * Executes callback once services are initialized.\n\t */\n\texport function withServices(callback: () => IDisposable): IDisposable {\n\t\tif (initialized) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tconst disposable = new DisposableStore();\n\n\t\tconst listener = disposable.add(onDidInitialize.event(() => {\n\t\t\tlistener.dispose();\n\t\t\tdisposable.add(callback());\n\t\t}));\n\n\t\treturn disposable;\n\t}\n\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AAEP,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,SAAS,6BAA6B;AACtC,SAAS,SAAS,OAAO,uBAAuB,4BAA4B;AAC5E,SAAS,oBAAoB,cAAc,YAAY,wBAAwB;AAC/E,SAAS,aAAa,YAAY,mBAAmB,cAAc,iBAAiB,YAAY,0BAA0B;AAC1H,SAAS,IAAI,SAAS,mBAAmB;AACzC,OAAO,cAAc;AACrB,SAAS,WAAW;AACpB,SAAS,kBAAkB,iBAAiB,kBAAkB,cAAc,wBAAwB;AACpG,SAAS,8BAA8B,gCAAgC;AACvE,SAAS,eAAe,4BAA4B;AACpD,SAAS,WAAW,YAAY,WAAW;AAC3C,SAAS,aAAa;AACtB,SAAS,YAAY,qBAAqB;AAC1C,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B,2BAA2B,yBAAyB;AACvF,SAAS,mCAAmC,gCAAgC,6CAA6C;AACzH,SAAS,kBAAkB,eAAe,iBAAiB,uBAAuB;AAClF,SAAS,2BAA2B,oBAAoB,yBAAyB,uBAAuB,qBAAqB,qBAAqB,2BAA2B;AAC7K,SAAS,eAAe,oBAAoB,gCAAgC;AAC5E,SAAS,oBAAoB,4BAA4B;AACzD,SAAS,eAAe,qBAAqB,gBAAgB,cAAc,SAAS,eAAe,yBAAyB,yBAAyB,0BAA0B,yBAAyB;AACxM,SAAS,iBAAiB,uBAAuB,yBAAyB;AAC1E,SAAS,iCAAiC;AAC1C,SAAS,oBAAoB,gBAAgB,qCAAqC;AAClF,SAAS,0BAA0B;AACnC,SAAS,iBAAiB,2BAA2B;AACrD,SAAS,8BAA8B;AACvC,SAAS,kCAAkC;AAC3C,SAAS,eAAe,wBAAwB,uBAAuB,iBAAiB;AACxF,SAAS,eAAe,qBAAqB,sBAAsB,eAAe,gBAAgB,kBAAkB,uBAAuB,qBAAqB,2BAA2B,2BAA2B;AACtN,SAAS,iBAAiB,wBAAwB,kBAAkB,WAAW,2BAA2B,wBAAwB,8BAA8B,kBAAkB,eAAe,8BAA8B;AAC/N,SAAS,mBAAmB,sBAAsB;AAClD,SAAS,kCAAkC,sBAAsB,YAAY,0BAA0B,kBAAkB,8BAA8B,kCAAkC,gBAAgB,iBAAiB,sCAAsC;AAChQ,SAAS,sBAAsB;AAC/B,SAAS,6BAA6B;AACtC,SAAS,gBAAgB;AACzB,SAAS,0BAA0B;AACnC,SAAS,eAAe,mBAAmB;AAC3C,SAAS,kCAAkC,sCAAsC,8BAA8B;AAC/G,SAAS,oBAAoB;AAC7B,SAAS,aAAa,mBAAmB;AACzC,SAAS,qBAAqB,sBAAsB,qBAAqB,wBAAwB;AACjG,SAAS,0BAA0B;AACnC,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AACnC,SAAS,gCAAgC,mBAAmB,yBAAyB;AACrF,SAAS,qBAAqB;AAC9B,SAAS,4BAA4B;AACrC,SAAS,2BAA2B;AACpC,SAAS,wBAAwB;AACjC,SAAS,gCAAgC;AACzC,SAAS,iCAAiC;AAC1C,SAAS,oBAAoB;AAC7B,SAAS,mCAAmC;AAC5C,SAAS,8BAA8B;AACvC,SAAS,+BAA+B;AACxC,SAAS,4BAA4B;AACrC,SAAS,6BAA6B;AACtC,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAC5B,SAAS,+BAA+B;AACxC,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B,SAAS,4BAA4B;AACrC,SAAS,yBAAyB;AAClC,SAAS,cAAc,mBAAmB;AAC1C,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;AACnC,SAAS,iBAAiB,8BAA8B;AACxD,SAAS,4BAA4B;AACrC,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB,uBAAuB,6BAA6B,aAAa;AAC/F,SAAS,gCAAgC;AACzC,SAAS,qCAAqC;AAC9C,SAAS,kBAAkB;AAC3B,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,eAAe,qBAAqB,iCAAiC;AAC9E,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,gCAAgC;AACzC,SAAS,yCAAyC;AAClD,SAAS,yBAAyB;AAElC,MAAM,YAAgD;AAAA,EAtGtD,OAsGsD;AAAA;AAAA;AAAA,EAEpC;AAAA,EACA;AAAA,EAEjB,YAAY,OAAmB;AAC9B,SAAK,QAAQ;AACb,SAAK,iBAAiB,IAAI,QAAc;AAAA,EACzC;AAAA,EAEA,IAAW,gBAA6B;AACvC,WAAO,KAAK,eAAe;AAAA,EAC5B;AAAA,EAEO,UAAyB;AAC/B,WAAO,QAAQ,QAAQ;AAAA,EACxB;AAAA,EAEA,IAAW,kBAA8B;AACxC,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,iBAAgC;AACtC,WAAO,KAAK,MAAM,eAAe;AAAA,EAClC;AAAA,EAEO,aAAsB;AAC5B,WAAO;AAAA,EACR;AAAA,EAEQ,WAAW;AAAA,EACZ,UAAgB;AACtB,SAAK,WAAW;AAEhB,SAAK,eAAe,KAAK;AAAA,EAC1B;AAAA,EAEO,aAAsB;AAC5B,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,aAAsB;AAC5B,WAAO;AAAA,EACR;AAAA,EAEO,gBAAoC;AAC1C,WAAO,KAAK,MAAM,cAAc;AAAA,EACjC;AACD;AAEA,IAAM,6BAAN,MAA8D;AAAA,EAG7D,YACiC,cAC/B;AAD+B;AAAA,EAC7B;AAAA,EA7JL,OAwJ8D;AAAA;AAAA;AAAA,EACtD;AAAA,EAMA,qBAAqB,UAA8D;AACzF,UAAM,QAAQ,KAAK,aAAa,SAAS,QAAQ;AAEjD,QAAI,CAAC,OAAO;AACX,aAAO,QAAQ,OAAO,IAAI,MAAM,iBAAiB,CAAC;AAAA,IACnD;AAEA,WAAO,QAAQ,QAAQ,IAAI,kBAAkB,IAAI,YAAY,KAAK,CAAC,CAAC;AAAA,EACrE;AAAA,EAEO,iCAAiC,QAAgB,UAAkD;AACzG,WAAO;AAAA,MACN,SAAS,kCAAY;AAAA,MAAc,GAA1B;AAAA,IACV;AAAA,EACD;AAAA,EAEO,kBAAkB,UAAwB;AAChD,WAAO;AAAA,EACR;AACD;AA1BM,6BAAN;AAAA,EAIG;AAAA,GAJG;AA4BN,MAAM,gCAAkE;AAAA,EApLxE,OAoLwE;AAAA;AAAA;AAAA,EAGvE,OAAe,uBAAwC;AAAA,IACtD,MAAM,6BAAM;AAAA,IAAE,GAAR;AAAA,IACN,OAAO,6BAAM;AAAA,IAAE,GAAR;AAAA,IACP,QAAQ,6BAAM;AAAA,IAAE,GAAR;AAAA,EACT;AAAA,EAIA,OAAwB;AACvB,WAAO,gCAAgC;AAAA,EACxC;AAAA,EAEA,MAAM,UAAU,SAAuB,OAA+B;AACrE,UAAM;AAAA,EACP;AACD;AAEA,MAAM,0BAAsD;AAAA,EAxM5D,OAwM4D;AAAA;AAAA;AAAA,EAI3D,aAAgB,UAAyI,MAA0D,aAA+E;AACjS,WAAO,KAAK;AAAA,MACX,QAAQ,6BAAM;AAAA,MAAE,GAAR;AAAA,IACT,CAAC;AAAA,EACF;AACD;AAEA,MAAM,6BAA4D;AAAA,EAnNlE,OAmNkE;AAAA;AAAA;AAAA,EAIxD,gBAAqB,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,gBAAgB,CAAC;AAAA,EAC9E,sBAA2B,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,sBAAsB,CAAC;AAAA,EAC1F,yBAA8B,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,yBAAyB,CAAC;AAAA,EAChG,eAAoB,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,eAAe,CAAC;AAAA,EAC5E,yBAA8B,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,yBAAyB,CAAC;AAAA,EAChG,uBAA4B,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,uBAAuB,CAAC;AAAA,EAC5F,mBAAwB,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,mBAAmB,CAAC;AAAA,EACpF,YAAiB,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,YAAY,CAAC;AAAA,EACtE,mBAAwB,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,mBAAmB,CAAC;AAAA,EACpF,OAAiC;AAAA,EACjC,aAAkC;AAAA,EAClC,gBAAqC;AAAA,EACrC,qBAAgD,EAAE,MAAM,MAAM,OAAO,MAAM;AAAA,EAC3E,yBAAkC;AAAA,EAClC,oBAAwC;AAAA,EACxC,mBAAmD;AAAA,EACnD,kCAAsD;AAAA,EACtD,2BAAyD;AAAA,EACzD,4BAA8C;AAAA,EAC9C,WAAgB,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,WAAW,CAAC;AAAA,EACpE,WAAgC;AAAA,EAChC,oBAAqD;AAAA,EACrD,UAAmB;AAAA,EACnB,UAAmB;AAAA,EACnB,mBAA4B;AAAA,EAC5B,2BAAgC,IAAI,KAAK,EAAE,QAAQ,UAAU,WAAW,2BAA2B,CAAC;AAAA,EACpG,aAA+B;AACzC;AAEA,MAAM,wBAAkD;AAAA,EApPxD,OAoPwD;AAAA;AAAA;AAAA,EAEvD;AAAA,EAES,mBAAmB,MAAM;AAAA,EACzB,kBAAkB,MAAM;AAAA,EAEjC,MAAM,QAAQ,cAA2D;AACxE,UAAM,YAAY,KAAK,UAAU,aAAa,SAAS,aAAa,MAAM;AAE1E,WAAO;AAAA,MACN;AAAA,MACA,iBAAiB;AAAA;AAAA,IAClB;AAAA,EACD;AAAA,EAEQ,UAAU,SAAiB,QAA0B;AAC5D,QAAI,cAAc;AAClB,QAAI,QAAQ;AACX,oBAAc,cAAc,SAAS;AAAA,IACtC;AAEA,WAAO,WAAW,QAAQ,WAAW;AAAA,EACtC;AAAA,EAKA,MAAM,OAAU,QAAyG;AACxH,QAAI,SAAwB;AAC5B,UAAM,YAAY,KAAK,UAAU,OAAO,SAAS,OAAO,MAAM;AAC9D,QAAI,WAAW;AACd,YAAM,gBAAwC,CAAC,GAAI,OAAO,WAAW,CAAC,CAAE;AACxE,UAAI,OAAO,gBAAgB,OAAO,OAAO,iBAAiB,YAAY,OAAO,OAAO,iBAAiB,WAAW;AAC/G,sBAAc,KAAK,OAAO,YAAY;AAAA,MACvC;AAEA,eAAS,MAAM,cAAc,CAAC,GAAG,IAAI,EAAE,iBAAiB,MAAM,CAAC;AAAA,IAChE;AAEA,WAAO,EAAE,OAAO;AAAA,EACjB;AAAA,EAEA,MAAM,KAAK,SAAiB,QAAgC;AAC3D,UAAM,KAAK,OAAO,EAAE,MAAM,SAAS,MAAM,SAAS,OAAO,CAAC;AAAA,EAC3D;AAAA,EAEA,MAAM,KAAK,SAAiB,QAAgC;AAC3D,UAAM,KAAK,OAAO,EAAE,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC;AAAA,EAC9D;AAAA,EAEA,MAAM,MAAM,SAAiB,QAAgC;AAC5D,UAAM,KAAK,OAAO,EAAE,MAAM,SAAS,OAAO,SAAS,OAAO,CAAC;AAAA,EAC5D;AAAA,EAEA,QAA+B;AAC9B,WAAO,QAAQ,QAAQ,EAAE,WAAW,MAAM,CAAC;AAAA,EAC5C;AAAA,EAEA,QAAuB;AACtB,WAAO,QAAQ,QAAQ,MAAS;AAAA,EACjC;AACD;AAEO,MAAM,8BAA8D;AAAA,EApT3E,OAoT2E;AAAA;AAAA;AAAA,EAEjE,uBAA6C,MAAM;AAAA,EAEnD,0BAAgD,MAAM;AAAA,EAEtD,oBAAiC,MAAM;AAAA,EAEzC;AAAA,EAEP,OAAwB,QAA6B,IAAI,iBAAiB;AAAA,EAEnE,KAAK,SAAsC;AACjD,WAAO,KAAK,OAAO,EAAE,UAAU,SAAS,MAAM,QAAQ,CAAC;AAAA,EACxD;AAAA,EAEO,KAAK,SAAsC;AACjD,WAAO,KAAK,OAAO,EAAE,UAAU,SAAS,SAAS,QAAQ,CAAC;AAAA,EAC3D;AAAA,EAEO,MAAM,OAA4C;AACxD,WAAO,KAAK,OAAO,EAAE,UAAU,SAAS,OAAO,SAAS,MAAM,CAAC;AAAA,EAChE;AAAA,EAEO,OAAO,cAAkD;AAC/D,YAAQ,aAAa,UAAU;AAAA,MAC9B,KAAK,SAAS;AACb,gBAAQ,MAAM,aAAa,OAAO;AAClC;AAAA,MACD,KAAK,SAAS;AACb,gBAAQ,KAAK,aAAa,OAAO;AACjC;AAAA,MACD;AACC,gBAAQ,IAAI,aAAa,OAAO;AAChC;AAAA,IACF;AAEA,WAAO,8BAA8B;AAAA,EACtC;AAAA,EAEO,OAAO,UAAoB,SAAiB,SAA0B,SAA+C;AAC3H,WAAO,8BAA8B;AAAA,EACtC;AAAA,EAEO,OAAO,SAAyB,SAA8C;AACpF,WAAO,WAAW;AAAA,EACnB;AAAA,EAGO,UAAU,QAA+D;AAAA,EAAE;AAAA,EAE3E,UAAU,QAAmD;AACnE,WAAO,oBAAoB;AAAA,EAC5B;AAAA,EAEO,aAA0C;AAChD,WAAO,CAAC;AAAA,EACT;AAAA,EAEO,aAAa,UAAwB;AAAA,EAAE;AAC/C;AAEO,IAAM,2BAAN,MAA0D;AAAA,EAlXjE,OAkXiE;AAAA;AAAA;AAAA,EAG/C;AAAA,EAEA,wBAAwB,IAAI,QAAuB;AAAA,EACnD,uBAAuB,IAAI,QAAuB;AAAA,EACnD,uBAA6C,KAAK,sBAAsB;AAAA,EACxE,sBAA4C,KAAK,qBAAqB;AAAA,EAEtF,YACwB,sBACtB;AACD,SAAK,wBAAwB;AAAA,EAC9B;AAAA,EAEO,eAAkB,OAAe,MAAyB;AAChE,UAAM,UAAU,iBAAiB,WAAW,EAAE;AAC9C,QAAI,CAAC,SAAS;AACb,aAAO,QAAQ,OAAO,IAAI,MAAM,YAAY,EAAE,aAAa,CAAC;AAAA,IAC7D;AAEA,QAAI;AACH,WAAK,sBAAsB,KAAK,EAAE,WAAW,IAAI,KAAK,CAAC;AACvD,YAAM,SAAS,KAAK,sBAAsB,eAAe,MAAM,KAAK,uBAAuB,CAAC,QAAQ,SAAS,GAAG,IAAI,CAAC;AAErH,WAAK,qBAAqB,KAAK,EAAE,WAAW,IAAI,KAAK,CAAC;AACtD,aAAO,QAAQ,QAAQ,MAAM;AAAA,IAC9B,SAAS,KAAK;AACb,aAAO,QAAQ,OAAO,GAAG;AAAA,IAC1B;AAAA,EACD;AACD;AAhCa,2BAAN;AAAA,EAWJ;AAAA,GAXU;AAyCN,IAAM,8BAAN,cAA0C,0BAA0B;AAAA,EA3Z3E,OA2Z2E;AAAA;AAAA;AAAA,EAClE;AAAA,EACA;AAAA,EACS;AAAA,EAEjB,YACqB,mBACH,gBACE,kBACG,qBACT,YACO,mBACnB;AACD,UAAM,mBAAmB,gBAAgB,kBAAkB,qBAAqB,UAAU;AAE1F,SAAK,kBAAkB;AACvB,SAAK,sBAAsB,CAAC;AAC5B,SAAK,oBAAoB,CAAC;AAE1B,UAAM,eAAe,wBAAC,YAAyB;AAC9C,YAAM,cAAc,IAAI,gBAAgB;AAGxC,kBAAY,IAAI,IAAI,sBAAsB,SAAS,IAAI,UAAU,UAAU,CAAC,MAAqB;AAChG,cAAM,WAAW,IAAI,sBAAsB,CAAC;AAC5C,cAAM,uBAAuB,KAAK,UAAU,UAAU,SAAS,MAAM;AACrE,YAAI,sBAAsB;AACzB,mBAAS,eAAe;AACxB,mBAAS,gBAAgB;AAAA,QAC1B;AAAA,MACD,CAAC,CAAC;AAGF,kBAAY,IAAI,IAAI,sBAAsB,SAAS,IAAI,UAAU,QAAQ,CAAC,MAAqB;AAC9F,cAAM,WAAW,IAAI,sBAAsB,CAAC;AAC5C,cAAM,uBAAuB,KAAK,wBAAwB,UAAU,SAAS,MAAM;AACnF,YAAI,sBAAsB;AACzB,mBAAS,eAAe;AAAA,QACzB;AAAA,MACD,CAAC,CAAC;AAEF,WAAK,kBAAkB,KAAK,IAAI,iBAAiB,SAAS,WAAW,CAAC;AAAA,IACvE,GAvBqB;AAwBrB,UAAM,kBAAkB,wBAAC,YAAyB;AACjD,eAAS,IAAI,GAAG,IAAI,KAAK,kBAAkB,QAAQ,KAAK;AACvD,cAAM,mBAAmB,KAAK,kBAAkB,CAAC;AACjD,YAAI,iBAAiB,YAAY,SAAS;AACzC,eAAK,kBAAkB,OAAO,GAAG,CAAC;AAClC,2BAAiB,QAAQ;AAAA,QAC1B;AAAA,MACD;AAAA,IACD,GARwB;AAUxB,UAAM,gBAAgB,wBAAC,eAA4B;AAClD,UAAI,WAAW,UAAU,aAAa,YAAY,GAAG;AACpD;AAAA,MACD;AACA,mBAAa,WAAW,oBAAoB,CAAC;AAAA,IAC9C,GALsB;AAMtB,UAAM,mBAAmB,wBAAC,eAA4B;AACrD,UAAI,WAAW,UAAU,aAAa,YAAY,GAAG;AACpD;AAAA,MACD;AACA,sBAAgB,WAAW,oBAAoB,CAAC;AAAA,IACjD,GALyB;AAMzB,SAAK,UAAU,kBAAkB,gBAAgB,aAAa,CAAC;AAC/D,SAAK,UAAU,kBAAkB,mBAAmB,gBAAgB,CAAC;AACrE,sBAAkB,gBAAgB,EAAE,QAAQ,aAAa;AAEzD,UAAM,gBAAgB,wBAAC,eAA4B;AAClD,mBAAa,WAAW,oBAAoB,CAAC;AAAA,IAC9C,GAFsB;AAGtB,UAAM,mBAAmB,wBAAC,eAA4B;AACrD,sBAAgB,WAAW,oBAAoB,CAAC;AAAA,IACjD,GAFyB;AAGzB,SAAK,UAAU,kBAAkB,gBAAgB,aAAa,CAAC;AAC/D,SAAK,UAAU,kBAAkB,mBAAmB,gBAAgB,CAAC;AACrE,sBAAkB,gBAAgB,EAAE,QAAQ,aAAa;AAAA,EAC1D;AAAA,EAEO,qBAAqB,SAAiB,YAAoB,SAA0B,MAAqD;AAC/I,WAAO;AAAA,MACN,iBAAiB,gBAAgB,SAAS,OAAO;AAAA,MACjD,KAAK,sBAAsB,CAAC;AAAA,QAC3B;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC,CAAC;AAAA,IACH;AAAA,EACD;AAAA,EAEO,sBAAsB,OAAuC;AACnE,UAAM,UAA6B,MAAM,IAAI,CAAC,SAAS;AACtD,YAAM,aAAa,iBAAiB,KAAK,YAAY,EAAE;AACvD,aAAO;AAAA,QACN;AAAA,QACA,SAAS,KAAK,WAAW;AAAA,QACzB,aAAa,KAAK;AAAA,QAClB,MAAM,KAAK;AAAA,QACX,SAAS;AAAA,QACT,SAAS;AAAA,QACT,aAAa;AAAA,QACb,oBAAoB;AAAA,MACrB;AAAA,IACD,CAAC;AACD,SAAK,sBAAsB,KAAK,oBAAoB,OAAO,OAAO;AAElE,SAAK,eAAe;AAEpB,WAAO,aAAa,MAAM;AAEzB,eAAS,IAAI,GAAG,IAAI,KAAK,oBAAoB,QAAQ,KAAK;AACzD,YAAI,KAAK,oBAAoB,CAAC,MAAM,QAAQ,CAAC,GAAG;AAC/C,eAAK,oBAAoB,OAAO,GAAG,QAAQ,MAAM;AACjD,eAAK,eAAe;AACpB;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEQ,iBAAuB;AAC9B,SAAK,kBAAkB;AACvB,SAAK,wBAAwB,KAAK;AAAA,EACnC;AAAA,EAEU,eAAmC;AAC5C,QAAI,CAAC,KAAK,iBAAiB;AAC1B,YAAM,WAAW,KAAK,6BAA6B,oBAAoB,sBAAsB,GAAG,IAAI;AACpG,YAAM,YAAY,KAAK,6BAA6B,KAAK,qBAAqB,KAAK;AACnF,WAAK,kBAAkB,IAAI,mBAAmB,UAAU,WAAW,CAAC,QAAQ,KAAK,KAAK,GAAG,CAAC;AAAA,IAC3F;AACA,WAAO,KAAK;AAAA,EACb;AAAA,EAEU,oBAA6B;AACtC,WAAO,WAAW,SAAS,SAAS;AAAA,EACrC;AAAA,EAEQ,6BAA6B,OAA0B,WAA8C;AAC5G,UAAM,SAAmC,CAAC;AAC1C,QAAI,YAAY;AAChB,eAAW,QAAQ,OAAO;AACzB,YAAM,OAAO,KAAK,QAAQ;AAC1B,YAAM,aAAa,KAAK;AAExB,UAAI,CAAC,YAAY;AAEhB,eAAO,WAAW,IAAI,IAAI,uBAAuB,QAAW,KAAK,SAAS,KAAK,aAAa,MAAM,WAAW,MAAM,KAAK;AAAA,MACzH,OAAO;AACN,cAAM,sBAAsB,2BAA2B,kBAAkB,YAAY,EAAE;AACvF,mBAAW,sBAAsB,qBAAqB;AACrD,iBAAO,WAAW,IAAI,IAAI,uBAAuB,oBAAoB,KAAK,SAAS,KAAK,aAAa,MAAM,WAAW,MAAM,KAAK;AAAA,QAClI;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEO,kBAAkB,YAA8C;AACtE,WAAO,2BAA2B,kBAAkB,YAAY,EAAE;AAAA,EACnE;AAAA,EAEO,qBAAqB,eAAmD;AAC9E,UAAM,QAAQ,IAAI;AAAA,MACjB,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,IACf;AACA,WAAO,IAAI,2BAA2B,CAAC,KAAK,GAAG,EAAE;AAAA,EAClD;AAAA,EAEO,mBAAmB,aAA2C;AACpE,WAAO,CAAC;AAAA,EACT;AAAA,EAEO,iBAAyB;AAC/B,WAAO;AAAA,EACR;AAAA,EAEO,qBAA6B;AACnC,WAAO;AAAA,EACR;AAAA,EAEO,2BAA2B,cAAmD;AAAA,EAErF;AAAA;AAAA;AAAA;AAAA,EAKgB,yBAAyB,WAA8C;AACtF,WAAO;AAAA,EACR;AACD;AArMa,8BAAN;AAAA,EAMJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAXU;AAuMb,MAAM,yBAAyB,WAAW;AAAA,EACzC,YACiB,SAChB,aACC;AACD,UAAM;AAHU;AAIhB,SAAK,UAAU,WAAW;AAAA,EAC3B;AAAA,EAzmBD,OAkmB0C;AAAA;AAAA;AAQ1C;AAEA,SAAS,yBAAyB,OAA8C;AAC/E,SAAO,SACH,OAAO,UAAU,aAChB,CAAC,MAAM,sBAAsB,OAAO,MAAM,uBAAuB,cACjE,CAAC,MAAM,YAAY,MAAM,oBAAoB;AACnD;AALS;AAOF,IAAM,iCAAN,MAAsE;AAAA,EAS5E,YAC+B,YAC7B;AAD6B;AAE9B,UAAM,uBAAuB,IAAI,qBAAqB,UAAU;AAChE,SAAK,iBAAiB,IAAI;AAAA,MACzB,qBAAqB,OAAO;AAAA,MAC5B,mBAAmB,iBAAiB,UAAU;AAAA,MAC9C,mBAAmB,iBAAiB,UAAU;AAAA,MAC9C,mBAAmB,iBAAiB,UAAU;AAAA,MAC9C,mBAAmB,iBAAiB,UAAU;AAAA,MAC9C,mBAAmB,iBAAiB,UAAU;AAAA,MAC9C,IAAI,YAAgC;AAAA,MACpC,mBAAmB,iBAAiB,UAAU;AAAA,MAC9C,IAAI,YAAgC;AAAA,MACpC;AAAA,IACD;AACA,yBAAqB,QAAQ;AAAA,EAC9B;AAAA,EA7oBD,OAmnB6E;AAAA;AAAA;AAAA,EAI3D,4BAA4B,IAAI,QAAmC;AAAA,EACpE,2BAA6D,KAAK,0BAA0B;AAAA,EAE3F;AAAA,EAyBjB,SAAS,MAAY,MAAiB;AACrC,UAAM,UAAU,OAAO,SAAS,WAAW,OAAO;AAClD,UAAM,YAAY,yBAAyB,IAAI,IAAI,OAAO,yBAAyB,IAAI,IAAI,OAAO,CAAC;AACnG,WAAO,KAAK,eAAe,SAAS,SAAS,WAAW,MAAS;AAAA,EAClE;AAAA,EAEO,aAAa,QAAwC;AAC3D,UAAM,WAAW,EAAE,MAAM,KAAK,eAAe,OAAO,EAAE;AAEtD,UAAM,cAAwB,CAAC;AAE/B,eAAW,SAAS,QAAQ;AAC3B,YAAM,CAAC,KAAK,KAAK,IAAI;AACrB,UAAI,KAAK,SAAS,GAAG,MAAM,OAAO;AACjC;AAAA,MACD;AACA,WAAK,eAAe,YAAY,KAAK,KAAK;AAC1C,kBAAY,KAAK,GAAG;AAAA,IACrB;AAEA,QAAI,YAAY,SAAS,GAAG;AAC3B,YAAM,2BAA2B,IAAI,yBAAyB,EAAE,MAAM,aAAa,WAAW,CAAC,EAAE,GAAG,UAAU,KAAK,gBAAgB,QAAW,KAAK,UAAU;AAC7J,+BAAyB,SAAS,oBAAoB;AACtD,WAAK,0BAA0B,KAAK,wBAAwB;AAAA,IAC7D;AAEA,WAAO,QAAQ,QAAQ;AAAA,EACxB;AAAA,EAEO,YAAY,KAAa,OAAY,MAAY,MAA2B;AAClF,WAAO,KAAK,aAAa,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;AAAA,EACxC;AAAA,EAEO,QAAW,KAAa,UAAmC,CAAC,GAA2B;AAC7F,WAAO,KAAK,eAAe,QAAW,KAAK,SAAS,MAAS;AAAA,EAC9D;AAAA,EAEO,OAAO;AACb,WAAO,KAAK,eAAe,KAAK,MAAS;AAAA,EAC1C;AAAA,EAEO,sBAAqC;AAC3C,WAAO,QAAQ,QAAQ,MAAS;AAAA,EACjC;AAAA,EAEO,uBAAkD;AACxD,UAAM,aAAkC;AAAA,MACvC,UAAU,CAAC;AAAA,MACX,MAAM,CAAC;AAAA,MACP,WAAW,CAAC;AAAA,IACb;AACA,WAAO;AAAA,MACN,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,MAAM;AAAA,MACN,WAAW;AAAA,MACX,SAAS,CAAC;AAAA,IACX;AAAA,EACD;AACD;AA5Fa,iCAAN;AAAA,EAUJ;AAAA,GAVU;AA8Fb,IAAM,yCAAN,MAA0F;AAAA,EAOzF,YACyC,sBACR,cACG,iBAClC;AAHuC;AACR;AACG;AAEnC,SAAK,qBAAqB,yBAAyB,CAAC,MAAM;AACzD,WAAK,0BAA0B,KAAK,EAAE,cAAc,EAAE,cAAc,sBAAsB,wBAAC,UAAe,kBAA0B,EAAE,qBAAqB,aAAa,GAA9E,wBAAgF,CAAC;AAAA,IAC5K,CAAC;AAAA,EACF;AAAA,EAhuBD,OAitB0F;AAAA;AAAA;AAAA,EAIxE,4BAA4B,IAAI,QAA+C;AAAA,EAChF,2BAA2B,KAAK,0BAA0B;AAAA,EAc1E,SAAY,UAA2B,MAAY,MAAY;AAC9D,UAAM,WAA6B,IAAI,YAAY,IAAI,IAAI,OAAO;AAClE,UAAM,UAA8B,WAAY,OAAO,SAAS,WAAW,OAAO,SAAc,OAAO,SAAS,WAAW,OAAO;AAClI,UAAM,WAAW,WAAW,KAAK,YAAY,UAAU,QAAQ,IAAI;AACnE,QAAI,OAAO,YAAY,aAAa;AACnC,aAAO,KAAK,qBAAqB,SAAY;AAAA,QAC5C;AAAA,QACA,oBAAoB;AAAA,MACrB,CAAC;AAAA,IACF;AACA,WAAO,KAAK,qBAAqB,SAAY,SAAS;AAAA,MACrD;AAAA,MACA,oBAAoB;AAAA,IACrB,CAAC;AAAA,EACF;AAAA,EAEA,QAAW,UAA2B,UAA4B,SAAmD;AACpH,UAAM,WAAW,WAAW,KAAK,YAAY,UAAU,QAAQ,IAAI;AACnE,WAAO,KAAK,qBAAqB,QAAW,SAAS,EAAE,UAAU,oBAAoB,SAAS,CAAC;AAAA,EAChG;AAAA,EAEQ,YAAY,UAAe,UAA2C;AAC7E,UAAM,QAAQ,KAAK,aAAa,SAAS,QAAQ;AACjD,QAAI,OAAO;AACV,aAAO,WAAW,MAAM,wBAAwB,SAAS,YAAY,SAAS,MAAM,IAAI,MAAM,cAAc;AAAA,IAC7G;AACA,WAAO,KAAK,gBAAgB,qCAAqC,QAAQ;AAAA,EAC1E;AAAA,EAEA,YAAY,UAAe,KAAa,OAAY,qBAA0D;AAC7G,WAAO,KAAK,qBAAqB,YAAY,KAAK,OAAO,EAAE,SAAS,GAAG,mBAAmB;AAAA,EAC3F;AACD;AAnDM,yCAAN;AAAA,EAQG;AAAA,EACA;AAAA,EACA;AAAA,GAVG;AAqDN,IAAM,sCAAN,MAAoF;AAAA,EAInF,YACyC,sBACvC;AADuC;AAAA,EAEzC;AAAA,EA7wBD,OAswBoF;AAAA;AAAA;AAAA,EASnF,OAAO,UAAe,UAA2B;AAChD,UAAM,MAAM,KAAK,qBAAqB,SAAS,aAAa,EAAE,oBAAoB,UAAU,SAAS,CAAC;AACtG,QAAI,OAAO,OAAO,QAAQ,YAAY,QAAQ,QAAQ;AACrD,aAAO;AAAA,IACR;AACA,WAAQ,WAAW,cAAe,OAAO;AAAA,EAC1C;AACD;AAhBM,sCAAN;AAAA,EAKG;AAAA,GALG;AAkBN,MAAM,2BAAwD;AAAA,EAxxB9D,OAwxB8D;AAAA;AAAA;AAAA,EAEpD,iBAAiB,eAAe;AAAA,EAChC,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,cAAc;AAAA,EACd,mBAAmB;AAAA,EACnB,qBAAqB;AAAA,EAC9B,aAAmB;AAAA,EAAE;AAAA,EACrB,wBAA8B;AAAA,EAAE;AAAA,EAChC,YAAY;AAAA,EAAE;AAAA,EACd,aAAa;AAAA,EAAE;AAAA,EACf,iBAAiB;AAAA,EAAE;AAAA,EACnB,kBAAkB;AAAA,EAAE;AACrB;AAEA,MAAM,kCAAsE;AAAA,EAzyB5E,OAyyB4E;AAAA;AAAA;AAAA,EAEpE;AAAA,EAEP,OAAwB,SAAS;AAAA,EAEhB,4BAA4B,IAAI,QAAc;AAAA,EAC/C,2BAAwC,KAAK,0BAA0B;AAAA,EAEtE,gCAAgC,IAAI,QAA0C;AAAA,EAC/E,+BAAwE,KAAK,8BAA8B;AAAA,EAE1G,+BAA+B,IAAI,QAAsC;AAAA,EAC1E,8BAAmE,KAAK,6BAA6B;AAAA,EAEpG,6BAA6B,IAAI,QAAwB;AAAA,EAC1D,4BAAmD,KAAK,2BAA2B;AAAA,EAElF;AAAA,EAEjB,cAAc;AACb,UAAM,WAAW,IAAI,KAAK,EAAE,QAAQ,kCAAkC,QAAQ,WAAW,SAAS,MAAM,IAAI,CAAC;AAC7G,SAAK,YAAY,EAAE,IAAI,gCAAgC,SAAS,CAAC,IAAI,gBAAgB,EAAE,KAAK,UAAU,MAAM,IAAI,OAAO,EAAE,CAAC,CAAC,EAAE;AAAA,EAC9H;AAAA,EAEA,uBAA4C;AAC3C,WAAO,QAAQ,QAAQ,KAAK,aAAa,CAAC;AAAA,EAC3C;AAAA,EAEO,eAA2B;AACjC,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,oBAAoC;AAC1C,QAAI,KAAK,WAAW;AACnB,UAAI,KAAK,UAAU,eAAe;AACjC,eAAO,eAAe;AAAA,MACvB;AACA,aAAO,eAAe;AAAA,IACvB;AACA,WAAO,eAAe;AAAA,EACvB;AAAA,EAEO,mBAAmB,UAAwC;AACjE,WAAO,YAAY,SAAS,WAAW,kCAAkC,SAAS,KAAK,UAAU,QAAQ,CAAC,IAAI;AAAA,EAC/G;AAAA,EAEO,kBAAkB,UAAwB;AAChD,WAAO,YAAY,SAAS,WAAW,kCAAkC;AAAA,EAC1E;AAAA,EAEO,mBAAmB,qBAA6F;AACtH,WAAO;AAAA,EACR;AACD;AAEO,SAAS,2BAA2B,sBAA6C,QAAa,cAA6B;AACjI,MAAI,CAAC,QAAQ;AACZ;AAAA,EACD;AACA,MAAI,EAAE,gCAAgC,iCAAiC;AACtE;AAAA,EACD;AACA,QAAM,WAA4B,CAAC;AACnC,SAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,QAAQ;AACpC,QAAI,yBAAyB,GAAG,GAAG;AAClC,eAAS,KAAK,CAAC,UAAU,GAAG,IAAI,OAAO,GAAG,CAAC,CAAC;AAAA,IAC7C;AACA,QAAI,gBAAgB,6BAA6B,GAAG,GAAG;AACtD,eAAS,KAAK,CAAC,cAAc,GAAG,IAAI,OAAO,GAAG,CAAC,CAAC;AAAA,IACjD;AAAA,EACD,CAAC;AACD,MAAI,SAAS,SAAS,GAAG;AACxB,yBAAqB,aAAa,QAAQ;AAAA,EAC3C;AACD;AAnBgB;AAqBhB,IAAM,4BAAN,MAA4D;AAAA,EAG3D,YACiC,eAC/B;AAD+B;AAAA,EAGjC;AAAA,EA73BD,OAs3B4D;AAAA;AAAA;AAAA,EAS3D,oBAA2B;AAC1B,WAAO;AAAA,EACR;AAAA,EAEA,oBAAiC;AAChC,WAAO,WAAW;AAAA,EACnB;AAAA,EAEA,MAAM,MAAM,SAAyC,UAAuD;AAC3G,UAAM,QAAQ,MAAM,QAAQ,OAAO,IAAI,UAAU,aAAa,QAAQ,OAAO;AAC7E,UAAM,YAAY,oBAAI,IAAwC;AAE9D,eAAW,QAAQ,OAAO;AACzB,UAAI,EAAE,gBAAgB,mBAAmB;AACxC,cAAM,IAAI,MAAM,0CAA0C;AAAA,MAC3D;AACA,YAAM,QAAQ,KAAK,cAAc,SAAS,KAAK,QAAQ;AACvD,UAAI,CAAC,OAAO;AACX,cAAM,IAAI,MAAM,4BAA4B;AAAA,MAC7C;AACA,UAAI,OAAO,KAAK,cAAc,YAAY,MAAM,aAAa,MAAM,KAAK,WAAW;AAClF,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC5D;AACA,UAAI,QAAQ,UAAU,IAAI,KAAK;AAC/B,UAAI,CAAC,OAAO;AACX,gBAAQ,CAAC;AACT,kBAAU,IAAI,OAAO,KAAK;AAAA,MAC3B;AACA,YAAM,KAAK,cAAc,YAAY,MAAM,KAAK,KAAK,SAAS,KAAK,GAAG,KAAK,SAAS,IAAI,CAAC;AAAA,IAC1F;AAGA,QAAI,aAAa;AACjB,QAAI,aAAa;AACjB,eAAW,CAAC,OAAOA,MAAK,KAAK,WAAW;AACvC,YAAM,iBAAiB;AACvB,YAAM,mBAAmB,CAAC,GAAGA,QAAO,MAAM,CAAC,CAAC;AAC5C,YAAM,iBAAiB;AACvB,oBAAc;AACd,oBAAcA,OAAM;AAAA,IACrB;AAEA,WAAO;AAAA,MACN,aAAa,QAAQ,OAAO,sBAAsB,wBAAwB,YAAY,UAAU;AAAA,MAChG,WAAW,aAAa;AAAA,IACzB;AAAA,EACD;AACD;AAxDM,4BAAN;AAAA,EAIG;AAAA,GAJG;AA0DN,MAAM,0BAAmD;AAAA,EAh7BzD,OAg7ByD;AAAA;AAAA;AAAA,EAIxC,wBAAsD,MAAM;AAAA,EAErE,YAAY,UAAe,SAAoE;AACrG,QAAI,SAAS,WAAW,QAAQ;AAC/B,aAAO,SAAS;AAAA,IACjB;AACA,WAAO,SAAS;AAAA,EACjB;AAAA,EAEA,oBAAoB,UAAuB;AAC1C,WAAO,SAAS,QAAQ;AAAA,EACzB;AAAA,EAEO,kBAAkB,WAAuF,SAA0C;AACzJ,WAAO;AAAA,EACR;AAAA,EAEO,aAAa,QAAgB,WAAgC;AACnE,WAAO;AAAA,EACR;AAAA,EAEO,kBAAkB,WAAgD;AACxE,UAAM,IAAI,MAAM,iBAAiB;AAAA,EAClC;AAAA,EAEO,wBAAwB,WAAgD;AAC9E,WAAO,KAAK,kBAAkB,SAAS;AAAA,EACxC;AAAA,EAEO,eAAuB;AAC7B,WAAO;AAAA,EACR;AAAA,EAEO,iBAAqC;AAC3C,WAAO;AAAA,EACR;AACD;AAGA,IAAM,+BAAN,cAA2C,mBAAmB;AAAA,EAE7D,YACiB,eACqB,oBACpC;AACD,UAAM,aAAa;AAFkB;AAAA,EAGtC;AAAA,EAl+BD,OA29B8D;AAAA;AAAA;AAAA,EASpD,gBAAgB,UAAgC,WAAyB,YAAwC;AACzH,QAAI,CAAC,WAAW;AACf,YAAM,aAAa,KAAK,mBAAmB,qBAAqB,KAAK,KAAK,mBAAmB,oBAAoB;AACjH,UAAI,YAAY;AACf,oBAAY,WAAW,oBAAoB;AAAA,MAC5C;AAAA,IACD;AACA,WAAO,MAAM,gBAAgB,UAAU,WAAW,UAAU;AAAA,EAC7D;AACD;AAlBM,+BAAN;AAAA,EAGG;AAAA,EACA;AAAA,GAJG;AAoBN,MAAM,0CAAsF;AAAA,EA/+B5F,OA++B4F;AAAA;AAAA;AAAA,EAC3F;AAAA,EAEQ,gBAAgB,IAAI,QAAe;AAAA,EAC3B,mBAAmC,KAAK,cAAc;AAAA,EACtE,4BAAyC,KAAK,cAAc;AAAA,EAC5C,oBAAoB,QAAQ,QAAQ;AAAA,EACpC,4BAA4B,QAAQ,QAAQ;AAAA,EAC5C,6BAA6B;AAAA,EAE7C,qBAA8B;AAC7B,WAAO;AAAA,EACR;AAAA,EACA,yBAAkC;AACjC,WAAO;AAAA,EACR;AAAA,EACA,0BAAmC;AAClC,WAAO;AAAA,EACR;AAAA,EACA,MAAM,qBAAqB,SAAiC;AAAA,EAE5D;AAAA,EACA,uBAAgC;AAC/B,WAAO;AAAA,EACR;AAAA,EACA,MAAM,kBAAkB,SAAiC;AAAA,EAEzD;AAAA,EACA,gBAAgB,KAA2C;AAC1D,UAAM,IAAI,MAAM,uBAAuB;AAAA,EACxC;AAAA,EACA,MAAM,aAAa,KAAY,SAAiC;AAAA,EAEhE;AAAA,EACA,iBAAwB;AACvB,WAAO,CAAC;AAAA,EACT;AAAA,EACA,MAAM,eAAe,MAA4B;AAAA,EAEjD;AAAA,EACA,uCAAuC,aAAgE;AACtG,UAAM,IAAI,MAAM,uBAAuB;AAAA,EACxC;AACD;AAEA,MAAM,kCAAkC,gBAAgB;AAAA,EA5hCxD,OA4hCwD;AAAA;AAAA;AAAA,EACvD,cAAc;AACb,UAAM;AAAA,EACP;AACD;AAEA,MAAM,6BAA6B,WAAW;AAAA,EAliC9C,OAkiC8C;AAAA;AAAA;AAAA,EAC7C,cAAc;AACb,UAAM,IAAI,cAAc,CAAC;AAAA,EAC1B;AACD;AAEA,IAAM,+BAAN,cAA2C,mBAAmB;AAAA,EAxiC9D,OAwiC8D;AAAA;AAAA;AAAA,EAC7D,YACoB,kBACG,qBACD,oBACD,mBACN,aACM,mBACnB;AACD,UAAM,kBAAkB,qBAAqB,oBAAoB,mBAAmB,aAAa,iBAAiB;AAClH,SAAK,UAAU,EAAE,YAAY,MAAM,CAAC;AAAA,EACrC;AACD;AAZM,+BAAN;AAAA,EAEG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPG;AAcC,MAAM,mCAAsD;AAAA,EAClE,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB,OAAO;AACR;AAEA,IAAM,gCAAN,cAA4C,oBAAoB;AAAA,EA5jChE,OA4jCgE;AAAA;AAAA;AAAA,EAC/D,YACgB,cACoB,sBACtB,YACkB,8BACL,yBACzB;AACD,UAAM,kCAAkC,cAAc,sBAAsB,YAAY,8BAA8B,uBAAuB;AAAA,EAC9I;AACD;AAVM,gCAAN;AAAA,EAEG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GANG;AAYN,MAAM,oCAA2E;AAAA,EAxkCjF,OAwkCiF;AAAA;AAAA;AAAA,EAChF;AAAA,EACA,MAAM,WAAW,KAA0B,SAA4B;AAAA,EACvE;AAAA,EAEA,MAAM,YAAY,MAA4C;AAAA,EAC9D;AAAA,EAEA,gBAAgB,QAA6B,aAAsB,UAA8E;AAChJ,WAAO,qBAAqB,MAAM,KAAK;AAAA,EACxC;AAAA,EAEA,WAAW,QAA6B,UAAyC;AAChF,WAAO;AAAA,EACR;AAAA,EAEA,eAAe,KAAmC;AACjD,WAAO;AAAA,EACR;AAAA,EAEA,sBAAsB,KAAmC;AACxD,WAAO;AAAA,EACR;AAAA,EAEA,sBAAsB,KAAuC;AAC5D,WAAO,MAAM;AAAA,EACd;AAAA,EAEA,MAAM,UAAU,KAAY,qBAA0D;AAAA,EACtF;AAAA,EACA,eAAe,KAAuC;AACrD,WAAO,aAAa,MAAM;AAAA,IAAE,CAAC;AAAA,EAC9B;AACD;AAMA,kBAAkB,aAAa,sBAAsB,kBAAkB,KAAK;AAC5E,kBAAkB,uBAAuB,gCAAgC,kBAAkB,KAAK;AAChG,kBAAkB,mCAAmC,wCAAwC,kBAAkB,KAAK;AACpH,kBAAkB,gCAAgC,qCAAqC,kBAAkB,KAAK;AAC9G,kBAAkB,0BAA0B,mCAAmC,kBAAkB,KAAK;AACtG,kBAAkB,eAAe,2BAA2B,kBAAkB,KAAK;AACnF,kBAAkB,mBAAmB,4BAA4B,kBAAkB,KAAK;AACxF,kBAAkB,gBAAgB,yBAAyB,kBAAkB,KAAK;AAClF,kBAAkB,qBAAqB,8BAA8B,kBAAkB,KAAK;AAC5F,kBAAkB,sBAAsB,+BAA+B,kBAAkB,KAAK;AAC9F,kBAAkB,gBAAgB,eAAe,kBAAkB,KAAK;AACxE,kBAAkB,kBAAkB,2BAA2B,kBAAkB,KAAK;AACtF,kBAAkB,yBAAyB,wBAAwB,kBAAkB,KAAK;AAC1F,kBAAkB,eAAe,cAAc,kBAAkB,KAAK;AACtE,kBAAkB,2BAA2B,0BAA0B,kBAAkB,KAAK;AAC9F,kBAAkB,oBAAoB,mBAAmB,kBAAkB,KAAK;AAChF,kBAAkB,kBAAkB,2BAA2B,kBAAkB,KAAK;AACtF,kBAAkB,wBAAwB,iCAAiC,kBAAkB,KAAK;AAClG,kBAAkB,iBAAiB,wBAAwB,kBAAkB,KAAK;AAClF,kBAAkB,sBAAsB,+BAA+B,kBAAkB,KAAK;AAC9F,kBAAkB,kBAAkB,2BAA2B,kBAAkB,KAAK;AACtF,kBAAkB,kCAAkC,2CAA2C,kBAAkB,KAAK;AACtH,kBAAkB,mBAAmB,4BAA4B,kBAAkB,KAAK;AACxF,kBAAkB,uBAAuB,sBAAsB,kBAAkB,KAAK;AACtF,kBAAkB,cAAc,aAAa,kBAAkB,KAAK;AACpE,kBAAkB,iBAAiB,0BAA0B,kBAAkB,KAAK;AACpF,kBAAkB,oBAAoB,6BAA6B,kBAAkB,KAAK;AAC1F,kBAAkB,oBAAoB,6BAA6B,kBAAkB,KAAK;AAC1F,kBAAkB,qBAAqB,8BAA8B,kBAAkB,KAAK;AAC5F,kBAAkB,gBAAgB,eAAe,kBAAkB,KAAK;AACxE,kBAAkB,mBAAmB,yBAAyB,kBAAkB,KAAK;AACrF,kBAAkB,qBAAqB,8BAA8B,kBAAkB,KAAK;AAC5F,kBAAkB,cAAc,aAAa,kBAAkB,KAAK;AACpE,kBAAkB,6BAA6B,qCAAqC,kBAAkB,KAAK;AAC3G,kBAAkB,0BAA0B,mCAAmC,kBAAkB,KAAK;AAM/F,IAAO;AAAA,CAAP,CAAOC,wBAAP;AAEN,QAAM,oBAAoB,IAAI,kBAAkB;AAChD,aAAW,CAAC,IAAI,UAAU,KAAK,+BAA+B,GAAG;AAChE,sBAAkB,IAAI,IAAI,UAAU;AAAA,EACrC;AAEA,QAAM,uBAAuB,IAAI,qBAAqB,mBAAmB,IAAI;AAC7E,oBAAkB,IAAI,uBAAuB,oBAAoB;AAE1D,WAAS,IAAO,WAAoC;AAC1D,QAAI,CAAC,aAAa;AACjB,iBAAW,CAAC,CAAC;AAAA,IACd;AACA,UAAM,IAAI,kBAAkB,IAAI,SAAS;AACzC,QAAI,CAAC,GAAG;AACP,YAAM,IAAI,MAAM,qBAAqB,SAAS;AAAA,IAC/C;AACA,QAAI,aAAa,gBAAgB;AAChC,aAAO,qBAAqB,eAAe,CAAC,aAAa,SAAS,IAAI,SAAS,CAAC;AAAA,IACjF,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AAbO,EAAAA,oBAAS;AAAA;AAehB,MAAI,cAAc;AAClB,QAAM,kBAAkB,IAAI,QAAc;AACnC,WAAS,WAAW,WAA2D;AACrF,QAAI,aAAa;AAChB,aAAO;AAAA,IACR;AACA,kBAAc;AAGd,eAAW,CAAC,IAAI,UAAU,KAAK,+BAA+B,GAAG;AAChE,UAAI,CAAC,kBAAkB,IAAI,EAAE,GAAG;AAC/B,0BAAkB,IAAI,IAAI,UAAU;AAAA,MACrC;AAAA,IACD;AAIA,eAAW,aAAa,WAAW;AAClC,UAAI,UAAU,eAAe,SAAS,GAAG;AACxC,cAAM,oBAAoB,gBAAgB,SAAS;AACnD,cAAM,IAAI,kBAAkB,IAAI,iBAAiB;AACjD,YAAI,aAAa,gBAAgB;AAChC,4BAAkB,IAAI,mBAAmB,UAAU,SAAS,CAAC;AAAA,QAC9D;AAAA,MACD;AAAA,IACD;AAGA,UAAM,iBAAiB,kBAAkB;AACzC,eAAW,WAAW,gBAAgB;AACrC,UAAI;AACH,6BAAqB,eAAe,OAAO;AAAA,MAC5C,SAAS,KAAK;AACb,0BAAkB,GAAG;AAAA,MACtB;AAAA,IACD;AAEA,oBAAgB,KAAK;AAErB,WAAO;AAAA,EACR;AAtCO,EAAAA,oBAAS;AAAA;AA2CT,WAAS,aAAa,UAA0C;AACtE,QAAI,aAAa;AAChB,aAAO,SAAS;AAAA,IACjB;AAEA,UAAM,aAAa,IAAI,gBAAgB;AAEvC,UAAM,WAAW,WAAW,IAAI,gBAAgB,MAAM,MAAM;AAC3D,eAAS,QAAQ;AACjB,iBAAW,IAAI,SAAS,CAAC;AAAA,IAC1B,CAAC,CAAC;AAEF,WAAO;AAAA,EACR;AAbO,EAAAA,oBAAS;AAAA;AAAA,GAtEH;",
  "names": ["edits", "StandaloneServices"]
}
