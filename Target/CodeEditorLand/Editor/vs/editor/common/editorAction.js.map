{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/editorAction.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ICommandMetadata } from \"../../platform/commands/common/commands.js\";\nimport type {\n\tContextKeyExpression,\n\tIContextKeyService,\n} from \"../../platform/contextkey/common/contextkey.js\";\nimport type { IEditorAction } from \"./editorCommon.js\";\n\nexport class InternalEditorAction implements IEditorAction {\n\tconstructor(\n\t\tpublic readonly id: string,\n\t\tpublic readonly label: string,\n\t\tpublic readonly alias: string,\n\t\tpublic readonly metadata: ICommandMetadata | undefined,\n\t\tprivate readonly _precondition: ContextKeyExpression | undefined,\n\t\tprivate readonly _run: (args: unknown) => Promise<void>,\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t) {}\n\n\tpublic isSupported(): boolean {\n\t\treturn this._contextKeyService.contextMatchesRules(this._precondition);\n\t}\n\n\tpublic run(args: unknown): Promise<void> {\n\t\tif (!this.isSupported()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._run(args);\n\t}\n}\n"],
  "mappings": ";;AAYO,MAAM,qBAA8C;AAAA,EAC1D,YACiB,IACA,OACA,OACA,UACC,eACA,MACA,oBAChB;AAPe;AACA;AACA;AACA;AACC;AACA;AACA;AAAA,EACf;AAAA,EArBJ,OAY2D;AAAA;AAAA;AAAA,EAWnD,cAAuB;AAC7B,WAAO,KAAK,mBAAmB,oBAAoB,KAAK,aAAa;AAAA,EACtE;AAAA,EAEO,IAAI,MAA8B;AACxC,QAAI,CAAC,KAAK,YAAY,GAAG;AACxB,aAAO,QAAQ,QAAQ,MAAS;AAAA,IACjC;AAEA,WAAO,KAAK,KAAK,IAAI;AAAA,EACtB;AACD;",
  "names": []
}
