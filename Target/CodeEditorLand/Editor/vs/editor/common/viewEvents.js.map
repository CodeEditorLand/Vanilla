{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/viewEvents.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ScrollEvent } from \"../../base/common/scrollable.js\";\nimport type { IColorTheme } from \"../../platform/theme/common/themeService.js\";\nimport type {\n\tConfigurationChangedEvent,\n\tEditorOption,\n} from \"./config/editorOptions.js\";\nimport type { Range } from \"./core/range.js\";\nimport type { Selection } from \"./core/selection.js\";\nimport type { CursorChangeReason } from \"./cursorEvents.js\";\nimport type { ScrollType } from \"./editorCommon.js\";\nimport type { IModelDecorationsChangedEvent } from \"./textModelEvents.js\";\n\nexport enum ViewEventType {\n\tViewCompositionStart = 0,\n\tViewCompositionEnd = 1,\n\tViewConfigurationChanged = 2,\n\tViewCursorStateChanged = 3,\n\tViewDecorationsChanged = 4,\n\tViewFlushed = 5,\n\tViewFocusChanged = 6,\n\tViewLanguageConfigurationChanged = 7,\n\tViewLineMappingChanged = 8,\n\tViewLinesChanged = 9,\n\tViewLinesDeleted = 10,\n\tViewLinesInserted = 11,\n\tViewRevealRangeRequest = 12,\n\tViewScrollChanged = 13,\n\tViewThemeChanged = 14,\n\tViewTokensChanged = 15,\n\tViewTokensColorsChanged = 16,\n\tViewZonesChanged = 17,\n}\n\nexport class ViewCompositionStartEvent {\n\tpublic readonly type = ViewEventType.ViewCompositionStart;\n\tconstructor() {}\n}\n\nexport class ViewCompositionEndEvent {\n\tpublic readonly type = ViewEventType.ViewCompositionEnd;\n\tconstructor() {}\n}\n\nexport class ViewConfigurationChangedEvent {\n\tpublic readonly type = ViewEventType.ViewConfigurationChanged;\n\n\tpublic readonly _source: ConfigurationChangedEvent;\n\n\tconstructor(source: ConfigurationChangedEvent) {\n\t\tthis._source = source;\n\t}\n\n\tpublic hasChanged(id: EditorOption): boolean {\n\t\treturn this._source.hasChanged(id);\n\t}\n}\n\nexport class ViewCursorStateChangedEvent {\n\tpublic readonly type = ViewEventType.ViewCursorStateChanged;\n\n\tconstructor(\n\t\tpublic readonly selections: Selection[],\n\t\tpublic readonly modelSelections: Selection[],\n\t\tpublic readonly reason: CursorChangeReason,\n\t) {}\n}\n\nexport class ViewDecorationsChangedEvent {\n\tpublic readonly type = ViewEventType.ViewDecorationsChanged;\n\n\treadonly affectsMinimap: boolean;\n\treadonly affectsOverviewRuler: boolean;\n\treadonly affectsGlyphMargin: boolean;\n\treadonly affectsLineNumber: boolean;\n\n\tconstructor(source: IModelDecorationsChangedEvent | null) {\n\t\tif (source) {\n\t\t\tthis.affectsMinimap = source.affectsMinimap;\n\t\t\tthis.affectsOverviewRuler = source.affectsOverviewRuler;\n\t\t\tthis.affectsGlyphMargin = source.affectsGlyphMargin;\n\t\t\tthis.affectsLineNumber = source.affectsLineNumber;\n\t\t} else {\n\t\t\tthis.affectsMinimap = true;\n\t\t\tthis.affectsOverviewRuler = true;\n\t\t\tthis.affectsGlyphMargin = true;\n\t\t\tthis.affectsLineNumber = true;\n\t\t}\n\t}\n}\n\nexport class ViewFlushedEvent {\n\tpublic readonly type = ViewEventType.ViewFlushed;\n\n\tconstructor() {\n\t\t// Nothing to do\n\t}\n}\n\nexport class ViewFocusChangedEvent {\n\tpublic readonly type = ViewEventType.ViewFocusChanged;\n\n\tpublic readonly isFocused: boolean;\n\n\tconstructor(isFocused: boolean) {\n\t\tthis.isFocused = isFocused;\n\t}\n}\n\nexport class ViewLanguageConfigurationEvent {\n\tpublic readonly type = ViewEventType.ViewLanguageConfigurationChanged;\n}\n\nexport class ViewLineMappingChangedEvent {\n\tpublic readonly type = ViewEventType.ViewLineMappingChanged;\n\n\tconstructor() {\n\t\t// Nothing to do\n\t}\n}\n\nexport class ViewLinesChangedEvent {\n\tpublic readonly type = ViewEventType.ViewLinesChanged;\n\n\tconstructor(\n\t\t/**\n\t\t * The first line that has changed.\n\t\t */\n\t\tpublic readonly fromLineNumber: number,\n\t\t/**\n\t\t * The number of lines that have changed.\n\t\t */\n\t\tpublic readonly count: number,\n\t) {}\n}\n\nexport class ViewLinesDeletedEvent {\n\tpublic readonly type = ViewEventType.ViewLinesDeleted;\n\n\t/**\n\t * At what line the deletion began (inclusive).\n\t */\n\tpublic readonly fromLineNumber: number;\n\t/**\n\t * At what line the deletion stopped (inclusive).\n\t */\n\tpublic readonly toLineNumber: number;\n\n\tconstructor(fromLineNumber: number, toLineNumber: number) {\n\t\tthis.fromLineNumber = fromLineNumber;\n\t\tthis.toLineNumber = toLineNumber;\n\t}\n}\n\nexport class ViewLinesInsertedEvent {\n\tpublic readonly type = ViewEventType.ViewLinesInserted;\n\n\t/**\n\t * Before what line did the insertion begin\n\t */\n\tpublic readonly fromLineNumber: number;\n\t/**\n\t * `toLineNumber` - `fromLineNumber` + 1 denotes the number of lines that were inserted\n\t */\n\tpublic readonly toLineNumber: number;\n\n\tconstructor(fromLineNumber: number, toLineNumber: number) {\n\t\tthis.fromLineNumber = fromLineNumber;\n\t\tthis.toLineNumber = toLineNumber;\n\t}\n}\n\nexport enum VerticalRevealType {\n\tSimple = 0,\n\tCenter = 1,\n\tCenterIfOutsideViewport = 2,\n\tTop = 3,\n\tBottom = 4,\n\tNearTop = 5,\n\tNearTopIfOutsideViewport = 6,\n}\n\nexport class ViewRevealRangeRequestEvent {\n\tpublic readonly type = ViewEventType.ViewRevealRangeRequest;\n\n\tconstructor(\n\t\t/**\n\t\t * Source of the call that caused the event.\n\t\t */\n\t\tpublic readonly source: string | null | undefined,\n\t\t/**\n\t\t * Reduce the revealing to a minimum (e.g. avoid scrolling if the bounding box is visible and near the viewport edge).\n\t\t */\n\t\tpublic readonly minimalReveal: boolean,\n\t\t/**\n\t\t * Range to be reavealed.\n\t\t */\n\t\tpublic readonly range: Range | null,\n\t\t/**\n\t\t * Selections to be revealed.\n\t\t */\n\t\tpublic readonly selections: Selection[] | null,\n\t\t/**\n\t\t * The vertical reveal strategy.\n\t\t */\n\t\tpublic readonly verticalType: VerticalRevealType,\n\t\t/**\n\t\t * If true: there should be a horizontal & vertical revealing.\n\t\t * If false: there should be just a vertical revealing.\n\t\t */\n\t\tpublic readonly revealHorizontal: boolean,\n\t\t/**\n\t\t * The scroll type.\n\t\t */\n\t\tpublic readonly scrollType: ScrollType,\n\t) {}\n}\n\nexport class ViewScrollChangedEvent {\n\tpublic readonly type = ViewEventType.ViewScrollChanged;\n\n\tpublic readonly scrollWidth: number;\n\tpublic readonly scrollLeft: number;\n\tpublic readonly scrollHeight: number;\n\tpublic readonly scrollTop: number;\n\n\tpublic readonly scrollWidthChanged: boolean;\n\tpublic readonly scrollLeftChanged: boolean;\n\tpublic readonly scrollHeightChanged: boolean;\n\tpublic readonly scrollTopChanged: boolean;\n\n\tconstructor(source: ScrollEvent) {\n\t\tthis.scrollWidth = source.scrollWidth;\n\t\tthis.scrollLeft = source.scrollLeft;\n\t\tthis.scrollHeight = source.scrollHeight;\n\t\tthis.scrollTop = source.scrollTop;\n\n\t\tthis.scrollWidthChanged = source.scrollWidthChanged;\n\t\tthis.scrollLeftChanged = source.scrollLeftChanged;\n\t\tthis.scrollHeightChanged = source.scrollHeightChanged;\n\t\tthis.scrollTopChanged = source.scrollTopChanged;\n\t}\n}\n\nexport class ViewThemeChangedEvent {\n\tpublic readonly type = ViewEventType.ViewThemeChanged;\n\n\tconstructor(public readonly theme: IColorTheme) {}\n}\n\nexport class ViewTokensChangedEvent {\n\tpublic readonly type = ViewEventType.ViewTokensChanged;\n\n\tpublic readonly ranges: {\n\t\t/**\n\t\t * Start line number of range\n\t\t */\n\t\treadonly fromLineNumber: number;\n\t\t/**\n\t\t * End line number of range\n\t\t */\n\t\treadonly toLineNumber: number;\n\t}[];\n\n\tconstructor(ranges: { fromLineNumber: number; toLineNumber: number }[]) {\n\t\tthis.ranges = ranges;\n\t}\n}\n\nexport class ViewTokensColorsChangedEvent {\n\tpublic readonly type = ViewEventType.ViewTokensColorsChanged;\n\n\tconstructor() {\n\t\t// Nothing to do\n\t}\n}\n\nexport class ViewZonesChangedEvent {\n\tpublic readonly type = ViewEventType.ViewZonesChanged;\n\n\tconstructor() {\n\t\t// Nothing to do\n\t}\n}\n\nexport type ViewEvent =\n\t| ViewCompositionStartEvent\n\t| ViewCompositionEndEvent\n\t| ViewConfigurationChangedEvent\n\t| ViewCursorStateChangedEvent\n\t| ViewDecorationsChangedEvent\n\t| ViewFlushedEvent\n\t| ViewFocusChangedEvent\n\t| ViewLanguageConfigurationEvent\n\t| ViewLineMappingChangedEvent\n\t| ViewLinesChangedEvent\n\t| ViewLinesDeletedEvent\n\t| ViewLinesInsertedEvent\n\t| ViewRevealRangeRequestEvent\n\t| ViewScrollChangedEvent\n\t| ViewThemeChangedEvent\n\t| ViewTokensChangedEvent\n\t| ViewTokensColorsChangedEvent\n\t| ViewZonesChangedEvent;\n"],
  "mappings": "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",
  "names": ["ViewEventType", "VerticalRevealType"]
}
