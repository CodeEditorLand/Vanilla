{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/editorContextKeys.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../nls.js\";\nimport { RawContextKey } from \"../../platform/contextkey/common/contextkey.js\";\n\nexport namespace EditorContextKeys {\n\texport const editorSimpleInput = new RawContextKey<boolean>(\n\t\t\"editorSimpleInput\",\n\t\tfalse,\n\t\ttrue,\n\t);\n\t/**\n\t * A context key that is set when the editor's text has focus (cursor is blinking).\n\t * Is false when focus is in simple editor widgets (repl input, scm commit input).\n\t */\n\texport const editorTextFocus = new RawContextKey<boolean>(\n\t\t\"editorTextFocus\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorTextFocus\",\n\t\t\t\"Whether the editor text has focus (cursor is blinking)\",\n\t\t),\n\t);\n\t/**\n\t * A context key that is set when the editor's text or an editor's widget has focus.\n\t */\n\texport const focus = new RawContextKey<boolean>(\n\t\t\"editorFocus\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorFocus\",\n\t\t\t\"Whether the editor or an editor widget has focus (e.g. focus is in the find widget)\",\n\t\t),\n\t);\n\n\t/**\n\t * A context key that is set when any editor input has focus (regular editor, repl input...).\n\t */\n\texport const textInputFocus = new RawContextKey<boolean>(\n\t\t\"textInputFocus\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"textInputFocus\",\n\t\t\t\"Whether an editor or a rich text input has focus (cursor is blinking)\",\n\t\t),\n\t);\n\n\texport const readOnly = new RawContextKey<boolean>(\n\t\t\"editorReadonly\",\n\t\tfalse,\n\t\tnls.localize(\"editorReadonly\", \"Whether the editor is read-only\"),\n\t);\n\texport const inDiffEditor = new RawContextKey<boolean>(\n\t\t\"inDiffEditor\",\n\t\tfalse,\n\t\tnls.localize(\"inDiffEditor\", \"Whether the context is a diff editor\"),\n\t);\n\texport const isEmbeddedDiffEditor = new RawContextKey<boolean>(\n\t\t\"isEmbeddedDiffEditor\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"isEmbeddedDiffEditor\",\n\t\t\t\"Whether the context is an embedded diff editor\",\n\t\t),\n\t);\n\texport const multiDiffEditorAllCollapsed = new RawContextKey<boolean>(\n\t\t\"multiDiffEditorAllCollapsed\",\n\t\tundefined,\n\t\tnls.localize(\n\t\t\t\"multiDiffEditorAllCollapsed\",\n\t\t\t\"Whether all files in multi diff editor are collapsed\",\n\t\t),\n\t);\n\texport const hasChanges = new RawContextKey<boolean>(\n\t\t\"diffEditorHasChanges\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"diffEditorHasChanges\",\n\t\t\t\"Whether the diff editor has changes\",\n\t\t),\n\t);\n\texport const comparingMovedCode = new RawContextKey<boolean>(\n\t\t\"comparingMovedCode\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"comparingMovedCode\",\n\t\t\t\"Whether a moved code block is selected for comparison\",\n\t\t),\n\t);\n\texport const accessibleDiffViewerVisible = new RawContextKey<boolean>(\n\t\t\"accessibleDiffViewerVisible\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"accessibleDiffViewerVisible\",\n\t\t\t\"Whether the accessible diff viewer is visible\",\n\t\t),\n\t);\n\texport const diffEditorRenderSideBySideInlineBreakpointReached =\n\t\tnew RawContextKey<boolean>(\n\t\t\t\"diffEditorRenderSideBySideInlineBreakpointReached\",\n\t\t\tfalse,\n\t\t\tnls.localize(\n\t\t\t\t\"diffEditorRenderSideBySideInlineBreakpointReached\",\n\t\t\t\t\"Whether the diff editor render side by side inline breakpoint is reached\",\n\t\t\t),\n\t\t);\n\texport const diffEditorInlineMode = new RawContextKey<boolean>(\n\t\t\"diffEditorInlineMode\",\n\t\tfalse,\n\t\tnls.localize(\"diffEditorInlineMode\", \"Whether inline mode is active\"),\n\t);\n\n\texport const diffEditorOriginalWritable = new RawContextKey<boolean>(\n\t\t\"diffEditorOriginalWritable\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"diffEditorOriginalWritable\",\n\t\t\t\"Whether modified is writable in the diff editor\",\n\t\t),\n\t);\n\texport const diffEditorModifiedWritable = new RawContextKey<boolean>(\n\t\t\"diffEditorModifiedWritable\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"diffEditorModifiedWritable\",\n\t\t\t\"Whether modified is writable in the diff editor\",\n\t\t),\n\t);\n\texport const diffEditorOriginalUri = new RawContextKey<string>(\n\t\t\"diffEditorOriginalUri\",\n\t\t\"\",\n\t\tnls.localize(\n\t\t\t\"diffEditorOriginalUri\",\n\t\t\t\"The uri of the original document\",\n\t\t),\n\t);\n\texport const diffEditorModifiedUri = new RawContextKey<string>(\n\t\t\"diffEditorModifiedUri\",\n\t\t\"\",\n\t\tnls.localize(\n\t\t\t\"diffEditorModifiedUri\",\n\t\t\t\"The uri of the modified document\",\n\t\t),\n\t);\n\n\texport const columnSelection = new RawContextKey<boolean>(\n\t\t\"editorColumnSelection\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorColumnSelection\",\n\t\t\t\"Whether `editor.columnSelection` is enabled\",\n\t\t),\n\t);\n\texport const writable = readOnly.toNegated();\n\texport const hasNonEmptySelection = new RawContextKey<boolean>(\n\t\t\"editorHasSelection\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasSelection\",\n\t\t\t\"Whether the editor has text selected\",\n\t\t),\n\t);\n\texport const hasOnlyEmptySelection = hasNonEmptySelection.toNegated();\n\texport const hasMultipleSelections = new RawContextKey<boolean>(\n\t\t\"editorHasMultipleSelections\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasMultipleSelections\",\n\t\t\t\"Whether the editor has multiple selections\",\n\t\t),\n\t);\n\texport const hasSingleSelection = hasMultipleSelections.toNegated();\n\texport const tabMovesFocus = new RawContextKey<boolean>(\n\t\t\"editorTabMovesFocus\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorTabMovesFocus\",\n\t\t\t\"Whether `Tab` will move focus out of the editor\",\n\t\t),\n\t);\n\texport const tabDoesNotMoveFocus = tabMovesFocus.toNegated();\n\texport const isInEmbeddedEditor = new RawContextKey<boolean>(\n\t\t\"isInEmbeddedEditor\",\n\t\tfalse,\n\t\ttrue,\n\t);\n\texport const canUndo = new RawContextKey<boolean>(\"canUndo\", false, true);\n\texport const canRedo = new RawContextKey<boolean>(\"canRedo\", false, true);\n\n\texport const hoverVisible = new RawContextKey<boolean>(\n\t\t\"editorHoverVisible\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHoverVisible\",\n\t\t\t\"Whether the editor hover is visible\",\n\t\t),\n\t);\n\texport const hoverFocused = new RawContextKey<boolean>(\n\t\t\"editorHoverFocused\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHoverFocused\",\n\t\t\t\"Whether the editor hover is focused\",\n\t\t),\n\t);\n\n\texport const stickyScrollFocused = new RawContextKey<boolean>(\n\t\t\"stickyScrollFocused\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"stickyScrollFocused\",\n\t\t\t\"Whether the sticky scroll is focused\",\n\t\t),\n\t);\n\texport const stickyScrollVisible = new RawContextKey<boolean>(\n\t\t\"stickyScrollVisible\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"stickyScrollVisible\",\n\t\t\t\"Whether the sticky scroll is visible\",\n\t\t),\n\t);\n\n\texport const standaloneColorPickerVisible = new RawContextKey<boolean>(\n\t\t\"standaloneColorPickerVisible\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"standaloneColorPickerVisible\",\n\t\t\t\"Whether the standalone color picker is visible\",\n\t\t),\n\t);\n\texport const standaloneColorPickerFocused = new RawContextKey<boolean>(\n\t\t\"standaloneColorPickerFocused\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"standaloneColorPickerFocused\",\n\t\t\t\"Whether the standalone color picker is focused\",\n\t\t),\n\t);\n\t/**\n\t * A context key that is set when an editor is part of a larger editor, like notebooks or\n\t * (future) a diff editor\n\t */\n\texport const inCompositeEditor = new RawContextKey<boolean>(\n\t\t\"inCompositeEditor\",\n\t\tundefined,\n\t\tnls.localize(\n\t\t\t\"inCompositeEditor\",\n\t\t\t\"Whether the editor is part of a larger editor (e.g. notebooks)\",\n\t\t),\n\t);\n\texport const notInCompositeEditor = inCompositeEditor.toNegated();\n\n\t// -- mode context keys\n\texport const languageId = new RawContextKey<string>(\n\t\t\"editorLangId\",\n\t\t\"\",\n\t\tnls.localize(\"editorLangId\", \"The language identifier of the editor\"),\n\t);\n\texport const hasCompletionItemProvider = new RawContextKey<boolean>(\n\t\t\"editorHasCompletionItemProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasCompletionItemProvider\",\n\t\t\t\"Whether the editor has a completion item provider\",\n\t\t),\n\t);\n\texport const hasCodeActionsProvider = new RawContextKey<boolean>(\n\t\t\"editorHasCodeActionsProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasCodeActionsProvider\",\n\t\t\t\"Whether the editor has a code actions provider\",\n\t\t),\n\t);\n\texport const hasCodeLensProvider = new RawContextKey<boolean>(\n\t\t\"editorHasCodeLensProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasCodeLensProvider\",\n\t\t\t\"Whether the editor has a code lens provider\",\n\t\t),\n\t);\n\texport const hasDefinitionProvider = new RawContextKey<boolean>(\n\t\t\"editorHasDefinitionProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasDefinitionProvider\",\n\t\t\t\"Whether the editor has a definition provider\",\n\t\t),\n\t);\n\texport const hasDeclarationProvider = new RawContextKey<boolean>(\n\t\t\"editorHasDeclarationProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasDeclarationProvider\",\n\t\t\t\"Whether the editor has a declaration provider\",\n\t\t),\n\t);\n\texport const hasImplementationProvider = new RawContextKey<boolean>(\n\t\t\"editorHasImplementationProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasImplementationProvider\",\n\t\t\t\"Whether the editor has an implementation provider\",\n\t\t),\n\t);\n\texport const hasTypeDefinitionProvider = new RawContextKey<boolean>(\n\t\t\"editorHasTypeDefinitionProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasTypeDefinitionProvider\",\n\t\t\t\"Whether the editor has a type definition provider\",\n\t\t),\n\t);\n\texport const hasHoverProvider = new RawContextKey<boolean>(\n\t\t\"editorHasHoverProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasHoverProvider\",\n\t\t\t\"Whether the editor has a hover provider\",\n\t\t),\n\t);\n\texport const hasDocumentHighlightProvider = new RawContextKey<boolean>(\n\t\t\"editorHasDocumentHighlightProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasDocumentHighlightProvider\",\n\t\t\t\"Whether the editor has a document highlight provider\",\n\t\t),\n\t);\n\texport const hasDocumentSymbolProvider = new RawContextKey<boolean>(\n\t\t\"editorHasDocumentSymbolProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasDocumentSymbolProvider\",\n\t\t\t\"Whether the editor has a document symbol provider\",\n\t\t),\n\t);\n\texport const hasReferenceProvider = new RawContextKey<boolean>(\n\t\t\"editorHasReferenceProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasReferenceProvider\",\n\t\t\t\"Whether the editor has a reference provider\",\n\t\t),\n\t);\n\texport const hasRenameProvider = new RawContextKey<boolean>(\n\t\t\"editorHasRenameProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasRenameProvider\",\n\t\t\t\"Whether the editor has a rename provider\",\n\t\t),\n\t);\n\texport const hasSignatureHelpProvider = new RawContextKey<boolean>(\n\t\t\"editorHasSignatureHelpProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasSignatureHelpProvider\",\n\t\t\t\"Whether the editor has a signature help provider\",\n\t\t),\n\t);\n\texport const hasInlayHintsProvider = new RawContextKey<boolean>(\n\t\t\"editorHasInlayHintsProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasInlayHintsProvider\",\n\t\t\t\"Whether the editor has an inline hints provider\",\n\t\t),\n\t);\n\n\t// -- mode context keys: formatting\n\texport const hasDocumentFormattingProvider = new RawContextKey<boolean>(\n\t\t\"editorHasDocumentFormattingProvider\",\n\t\tfalse,\n\t\tnls.localize(\n\t\t\t\"editorHasDocumentFormattingProvider\",\n\t\t\t\"Whether the editor has a document formatting provider\",\n\t\t),\n\t);\n\texport const hasDocumentSelectionFormattingProvider =\n\t\tnew RawContextKey<boolean>(\n\t\t\t\"editorHasDocumentSelectionFormattingProvider\",\n\t\t\tfalse,\n\t\t\tnls.localize(\n\t\t\t\t\"editorHasDocumentSelectionFormattingProvider\",\n\t\t\t\t\"Whether the editor has a document selection formatting provider\",\n\t\t\t),\n\t\t);\n\texport const hasMultipleDocumentFormattingProvider =\n\t\tnew RawContextKey<boolean>(\n\t\t\t\"editorHasMultipleDocumentFormattingProvider\",\n\t\t\tfalse,\n\t\t\tnls.localize(\n\t\t\t\t\"editorHasMultipleDocumentFormattingProvider\",\n\t\t\t\t\"Whether the editor has multiple document formatting providers\",\n\t\t\t),\n\t\t);\n\texport const hasMultipleDocumentSelectionFormattingProvider =\n\t\tnew RawContextKey<boolean>(\n\t\t\t\"editorHasMultipleDocumentSelectionFormattingProvider\",\n\t\t\tfalse,\n\t\t\tnls.localize(\n\t\t\t\t\"editorHasMultipleDocumentSelectionFormattingProvider\",\n\t\t\t\t\"Whether the editor has multiple document selection formatting providers\",\n\t\t\t),\n\t\t);\n}\n"],
  "mappings": "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",
  "names": ["EditorContextKeys"]
}
