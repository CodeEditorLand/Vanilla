{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/diff/linesDiffComputer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tDetailedLineRangeMapping,\n\tLineRangeMapping,\n} from \"./rangeMapping.js\";\n\nexport interface ILinesDiffComputer {\n\tcomputeDiff(\n\t\toriginalLines: string[],\n\t\tmodifiedLines: string[],\n\t\toptions: ILinesDiffComputerOptions,\n\t): LinesDiff;\n}\n\nexport interface ILinesDiffComputerOptions {\n\treadonly ignoreTrimWhitespace: boolean;\n\treadonly maxComputationTimeMs: number;\n\treadonly computeMoves: boolean;\n}\n\nexport class LinesDiff {\n\tconstructor(\n\t\treadonly changes: readonly DetailedLineRangeMapping[],\n\n\t\t/**\n\t\t * Sorted by original line ranges.\n\t\t * The original line ranges and the modified line ranges must be disjoint (but can be touching).\n\t\t */\n\t\treadonly moves: readonly MovedText[],\n\n\t\t/**\n\t\t * Indicates if the time out was reached.\n\t\t * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n\t\t */\n\t\treadonly hitTimeout: boolean,\n\t) {}\n}\n\nexport class MovedText {\n\tpublic readonly lineRangeMapping: LineRangeMapping;\n\n\t/**\n\t * The diff from the original text to the moved text.\n\t * Must be contained in the original/modified line range.\n\t * Can be empty if the text didn't change (only moved).\n\t */\n\tpublic readonly changes: readonly DetailedLineRangeMapping[];\n\n\tconstructor(\n\t\tlineRangeMapping: LineRangeMapping,\n\t\tchanges: readonly DetailedLineRangeMapping[],\n\t) {\n\t\tthis.lineRangeMapping = lineRangeMapping;\n\t\tthis.changes = changes;\n\t}\n\n\tpublic flip(): MovedText {\n\t\treturn new MovedText(\n\t\t\tthis.lineRangeMapping.flip(),\n\t\t\tthis.changes.map((c) => c.flip()),\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAwBO,MAAM,UAAU;AAAA,EACtB,YACU,SAMA,OAMA,YACR;AAbQ;AAMA;AAMA;AAAA,EACP;AAAA,EAvCJ,OAwBuB;AAAA;AAAA;AAgBvB;AAEO,MAAM,UAAU;AAAA,EA1CvB,OA0CuB;AAAA;AAAA;AAAA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAAA,EAEhB,YACC,kBACA,SACC;AACD,SAAK,mBAAmB;AACxB,SAAK,UAAU;AAAA,EAChB;AAAA,EAEO,OAAkB;AACxB,WAAO,IAAI;AAAA,MACV,KAAK,iBAAiB,KAAK;AAAA,MAC3B,KAAK,QAAQ,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;AAAA,IACjC;AAAA,EACD;AACD;",
  "names": []
}
