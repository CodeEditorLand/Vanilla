import{CharCode as m}from"../../../../base/common/charCode.js";class p{constructor(t,e){this.width=t;this.height=e;this.array=new Array(t*e)}array=[];get(t,e){return this.array[t+e*this.width]}set(t,e,i){this.array[t+e*this.width]=i}}function y(n){return n===m.Space||n===m.Tab}class o{constructor(t,e,i){this.range=t;this.lines=e;this.source=i;let r=0;for(let a=t.startLineNumber-1;a<t.endLineNumberExclusive-1;a++){const u=e[a];for(let s=0;s<u.length;s++){r++;const c=u[s],h=o.getKey(c);this.histogram[h]=(this.histogram[h]||0)+1}r++;const l=o.getKey(`
`);this.histogram[l]=(this.histogram[l]||0)+1}this.totalCount=r}static chrKeys=new Map;static getKey(t){let e=this.chrKeys.get(t);return e===void 0&&(e=this.chrKeys.size,this.chrKeys.set(t,e)),e}totalCount;histogram=[];computeSimilarity(t){let e=0;const i=Math.max(this.histogram.length,t.histogram.length);for(let r=0;r<i;r++)e+=Math.abs((this.histogram[r]??0)-(t.histogram[r]??0));return 1-e/(this.totalCount+t.totalCount)}}export{p as Array2D,o as LineRangeFragment,y as isSpace};
