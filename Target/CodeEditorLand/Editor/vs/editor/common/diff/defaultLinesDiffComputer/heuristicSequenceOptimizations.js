import{forEachWithNeighbors as j}from"../../../../base/common/arrays.js";import{OffsetRange as d}from"../../core/offsetRange.js";import{OffsetPair as L,SequenceDiff as E}from"./algorithms/diffAlgorithm.js";import"./lineSequence.js";import"./linesSliceCharSequence.js";function H(t,r,a){let e=a;return e=C(t,r,e),e=C(t,r,e),e=P(t,r,e),e}function C(t,r,a){if(a.length===0)return a;const e=[];e.push(a[0]);for(let l=1;l<a.length;l++){const o=e[e.length-1];let n=a[l];if(n.seq1Range.isEmpty||n.seq2Range.isEmpty){const s=n.seq1Range.start-o.seq1Range.endExclusive;let i;for(i=1;i<=s&&!(t.getElement(n.seq1Range.start-i)!==t.getElement(n.seq1Range.endExclusive-i)||r.getElement(n.seq2Range.start-i)!==r.getElement(n.seq2Range.endExclusive-i));i++);if(i--,i===s){e[e.length-1]=new E(new d(o.seq1Range.start,n.seq1Range.endExclusive-s),new d(o.seq2Range.start,n.seq2Range.endExclusive-s));continue}n=n.delta(-i)}e.push(n)}const g=[];for(let l=0;l<e.length-1;l++){const o=e[l+1];let n=e[l];if(n.seq1Range.isEmpty||n.seq2Range.isEmpty){const s=o.seq1Range.start-n.seq1Range.endExclusive;let i;for(i=0;i<s&&!(!t.isStronglyEqual(n.seq1Range.start+i,n.seq1Range.endExclusive+i)||!r.isStronglyEqual(n.seq2Range.start+i,n.seq2Range.endExclusive+i));i++);if(i===s){e[l+1]=new E(new d(n.seq1Range.start+s,o.seq1Range.endExclusive),new d(n.seq2Range.start+s,o.seq2Range.endExclusive));continue}i>0&&(n=n.delta(i))}g.push(n)}return e.length>0&&g.push(e[e.length-1]),g}function P(t,r,a){if(!t.getBoundaryScore||!r.getBoundaryScore)return a;for(let e=0;e<a.length;e++){const g=e>0?a[e-1]:void 0,l=a[e],o=e+1<a.length?a[e+1]:void 0,n=new d(g?g.seq1Range.endExclusive+1:0,o?o.seq1Range.start-1:t.length),s=new d(g?g.seq2Range.endExclusive+1:0,o?o.seq2Range.start-1:r.length);l.seq1Range.isEmpty?a[e]=I(l,t,r,n,s):l.seq2Range.isEmpty&&(a[e]=I(l.swap(),r,t,s,n).swap())}return a}function I(t,r,a,e,g){let o=1;for(;t.seq1Range.start-o>=e.start&&t.seq2Range.start-o>=g.start&&a.isStronglyEqual(t.seq2Range.start-o,t.seq2Range.endExclusive-o)&&o<100;)o++;o--;let n=0;for(;t.seq1Range.start+n<e.endExclusive&&t.seq2Range.endExclusive+n<g.endExclusive&&a.isStronglyEqual(t.seq2Range.start+n,t.seq2Range.endExclusive+n)&&n<100;)n++;if(o===0&&n===0)return t;let s=0,i=-1;for(let c=-o;c<=n;c++){const f=t.seq2Range.start+c,u=t.seq2Range.endExclusive+c,S=t.seq1Range.start+c,h=r.getBoundaryScore(S)+a.getBoundaryScore(f)+a.getBoundaryScore(u);h>i&&(i=h,s=c)}return t.delta(s)}function K(t,r,a){const e=[];for(const g of a){const l=e[e.length-1];if(!l){e.push(g);continue}g.seq1Range.start-l.seq1Range.endExclusive<=2||g.seq2Range.start-l.seq2Range.endExclusive<=2?e[e.length-1]=new E(l.seq1Range.join(g.seq1Range),l.seq2Range.join(g.seq2Range)):e.push(g)}return e}function Q(t,r,a){const e=E.invert(a,t.length),g=[];let l=new L(0,0);function o(s,i){if(s.offset1<l.offset1||s.offset2<l.offset2)return;const c=t.findWordContaining(s.offset1),f=r.findWordContaining(s.offset2);if(!c||!f)return;let u=new E(c,f);const S=u.intersect(i);let h=S.seq1Range.length,R=S.seq2Range.length;for(;e.length>0;){const q=e[0];if(!(q.seq1Range.intersects(u.seq1Range)||q.seq2Range.intersects(u.seq2Range)))break;const x=t.findWordContaining(q.seq1Range.start),D=r.findWordContaining(q.seq2Range.start),m=new E(x,D),v=m.intersect(q);if(h+=v.seq1Range.length,R+=v.seq2Range.length,u=u.join(m),u.seq1Range.endExclusive>=q.seq1Range.endExclusive)e.shift();else break}h+R<(u.seq1Range.length+u.seq2Range.length)*2/3&&g.push(u),l=u.getEndExclusives()}for(;e.length>0;){const s=e.shift();s.seq1Range.isEmpty||(o(s.getStarts(),s),o(s.getEndExclusives().delta(-1),s))}return k(a,g)}function k(t,r){const a=[];for(;t.length>0||r.length>0;){const e=t[0],g=r[0];let l;e&&(!g||e.seq1Range.start<g.seq1Range.start)?l=t.shift():l=r.shift(),a.length>0&&a[a.length-1].seq1Range.endExclusive>=l.seq1Range.start?a[a.length-1]=a[a.length-1].join(l):a.push(l)}return a}function U(t,r,a){let e=a;if(e.length===0)return e;let g=0,l;do{l=!1;const n=[e[0]];for(let s=1;s<e.length;s++){let f=function(S,h){const R=new d(c.seq1Range.endExclusive,i.seq1Range.start);return t.getText(R).replace(/\s/g,"").length<=4&&(S.seq1Range.length+S.seq2Range.length>5||h.seq1Range.length+h.seq2Range.length>5)};var o=f;const i=e[s],c=n[n.length-1];f(c,i)?(l=!0,n[n.length-1]=n[n.length-1].join(i)):n.push(i)}e=n}while(g++<10&&l);return e}function X(t,r,a){let e=a;if(e.length===0)return e;let g=0,l;do{l=!1;const s=[e[0]];for(let i=1;i<e.length;i++){let u=function(h,R){const q=new d(f.seq1Range.endExclusive,c.seq1Range.start);if(t.countLinesIn(q)>5||q.length>500)return!1;const x=t.getText(q).trim();if(x.length>20||x.split(/\r\n|\r|\n/).length>1)return!1;const D=t.countLinesIn(h.seq1Range),m=h.seq1Range.length,v=r.countLinesIn(h.seq2Range),b=h.seq2Range.length,T=t.countLinesIn(R.seq1Range),M=R.seq1Range.length,W=r.countLinesIn(R.seq2Range),B=R.seq2Range.length,y=2*40+50;function w(O){return Math.min(O,y)}return Math.pow(Math.pow(w(D*40+m),1.5)+Math.pow(w(v*40+b),1.5),1.5)+Math.pow(Math.pow(w(T*40+M),1.5)+Math.pow(w(W*40+B),1.5),1.5)>(y**1.5)**1.5*1.3};var n=u;const c=e[i],f=s[s.length-1];u(f,c)?(l=!0,s[s.length-1]=s[s.length-1].join(c)):s.push(c)}e=s}while(g++<10&&l);const o=[];return j(e,(s,i,c)=>{let f=i;function u(x){return x.length>0&&x.trim().length<=3&&i.seq1Range.length+i.seq2Range.length>100}const S=t.extendToFullLines(i.seq1Range),h=t.getText(new d(S.start,i.seq1Range.start));u(h)&&(f=f.deltaStart(-h.length));const R=t.getText(new d(i.seq1Range.endExclusive,S.endExclusive));u(R)&&(f=f.deltaEnd(R.length));const q=E.fromOffsetPairs(s?s.getEndExclusives():L.zero,c?c.getStarts():L.max),p=f.intersect(q);o.length>0&&p.getStarts().equals(o[o.length-1].getEndExclusives())?o[o.length-1]=o[o.length-1].join(p):o.push(p)}),o}export{Q as extendDiffsToEntireWordIfAppropriate,H as optimizeSequenceDiffs,K as removeShortMatches,U as removeVeryShortMatchingLinesBetweenDiffs,X as removeVeryShortMatchingTextBetweenLongDiffs};
