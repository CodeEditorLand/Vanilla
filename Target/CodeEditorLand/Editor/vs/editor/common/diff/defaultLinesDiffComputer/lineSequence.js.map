{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { ISequence } from './algorithms/diffAlgorithm.js';\n\nexport class LineSequence implements ISequence {\n\tconstructor(\n\t\tprivate readonly trimmedHash: number[],\n\t\tprivate readonly lines: string[]\n\t) { }\n\n\tgetElement(offset: number): number {\n\t\treturn this.trimmedHash[offset];\n\t}\n\n\tget length(): number {\n\t\treturn this.trimmedHash.length;\n\t}\n\n\tgetBoundaryScore(length: number): number {\n\t\tconst indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n\t\tconst indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n\t\treturn 1000 - (indentationBefore + indentationAfter);\n\t}\n\n\tgetText(range: OffsetRange): string {\n\t\treturn this.lines.slice(range.start, range.endExclusive).join('\\n');\n\t}\n\n\tisStronglyEqual(offset1: number, offset2: number): boolean {\n\t\treturn this.lines[offset1] === this.lines[offset2];\n\t}\n}\n\nfunction getIndentation(str: string): number {\n\tlet i = 0;\n\twhile (i < str.length && (str.charCodeAt(i) === CharCode.Space || str.charCodeAt(i) === CharCode.Tab)) {\n\t\ti++;\n\t}\n\treturn i;\n}\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,SAAS,iBAAiB;AAEnB,MAAM,aAAkC;AAAA,EAC9C,YACkB,aACA,OAChB;AAFgB;AACA;AAAA,EACd;AAAA,EAbL,OAS+C;AAAA;AAAA;AAAA,EAM9C,WAAW,QAAwB;AAClC,WAAO,KAAK,YAAY,MAAM;AAAA,EAC/B;AAAA,EAEA,IAAI,SAAiB;AACpB,WAAO,KAAK,YAAY;AAAA,EACzB;AAAA,EAEA,iBAAiB,QAAwB;AACxC,UAAM,oBAAoB,WAAW,IAAI,IAAI,eAAe,KAAK,MAAM,SAAS,CAAC,CAAC;AAClF,UAAM,mBAAmB,WAAW,KAAK,MAAM,SAAS,IAAI,eAAe,KAAK,MAAM,MAAM,CAAC;AAC7F,WAAO,OAAQ,oBAAoB;AAAA,EACpC;AAAA,EAEA,QAAQ,OAA4B;AACnC,WAAO,KAAK,MAAM,MAAM,MAAM,OAAO,MAAM,YAAY,EAAE,KAAK,IAAI;AAAA,EACnE;AAAA,EAEA,gBAAgB,SAAiB,SAA0B;AAC1D,WAAO,KAAK,MAAM,OAAO,MAAM,KAAK,MAAM,OAAO;AAAA,EAClD;AACD;AAEA,SAAS,eAAe,KAAqB;AAC5C,MAAI,IAAI;AACR,SAAO,IAAI,IAAI,WAAW,IAAI,WAAW,CAAC,MAAM,SAAS,SAAS,IAAI,WAAW,CAAC,MAAM,SAAS,MAAM;AACtG;AAAA,EACD;AACA,SAAO;AACR;AANS;",
  "names": []
}
