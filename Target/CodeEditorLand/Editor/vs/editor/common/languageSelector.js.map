{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/languageSelector.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype IRelativePattern,\n\tmatch as matchGlobPattern,\n} from \"../../base/common/glob.js\";\nimport { normalize } from \"../../base/common/path.js\";\nimport type { URI } from \"../../base/common/uri.js\";\n\nexport interface LanguageFilter {\n\treadonly language?: string;\n\treadonly scheme?: string;\n\treadonly pattern?: string | IRelativePattern;\n\treadonly notebookType?: string;\n\t/**\n\t * This provider is implemented in the UI thread.\n\t */\n\treadonly hasAccessToAllModels?: boolean;\n\treadonly exclusive?: boolean;\n\n\t/**\n\t * This provider comes from a builtin extension.\n\t */\n\treadonly isBuiltin?: boolean;\n}\n\nexport type LanguageSelector =\n\t| string\n\t| LanguageFilter\n\t| ReadonlyArray<string | LanguageFilter>;\n\nexport function score(\n\tselector: LanguageSelector | undefined,\n\tcandidateUri: URI,\n\tcandidateLanguage: string,\n\tcandidateIsSynchronized: boolean,\n\tcandidateNotebookUri: URI | undefined,\n\tcandidateNotebookType: string | undefined,\n): number {\n\tif (Array.isArray(selector)) {\n\t\t// array -> take max individual value\n\t\tlet ret = 0;\n\t\tfor (const filter of selector) {\n\t\t\tconst value = score(\n\t\t\t\tfilter,\n\t\t\t\tcandidateUri,\n\t\t\t\tcandidateLanguage,\n\t\t\t\tcandidateIsSynchronized,\n\t\t\t\tcandidateNotebookUri,\n\t\t\t\tcandidateNotebookType,\n\t\t\t);\n\t\t\tif (value === 10) {\n\t\t\t\treturn value; // already at the highest\n\t\t\t}\n\t\t\tif (value > ret) {\n\t\t\t\tret = value;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t} else if (typeof selector === \"string\") {\n\t\tif (!candidateIsSynchronized) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// short-hand notion, desugars to\n\t\t// 'fooLang' -> { language: 'fooLang'}\n\t\t// '*' -> { language: '*' }\n\t\tif (selector === \"*\") {\n\t\t\treturn 5;\n\t\t} else if (selector === candidateLanguage) {\n\t\t\treturn 10;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} else if (selector) {\n\t\t// filter -> select accordingly, use defaults for scheme\n\t\tconst {\n\t\t\tlanguage,\n\t\t\tpattern,\n\t\t\tscheme,\n\t\t\thasAccessToAllModels,\n\t\t\tnotebookType,\n\t\t} = selector as LanguageFilter; // TODO: microsoft/TypeScript#42768\n\n\t\tif (!candidateIsSynchronized && !hasAccessToAllModels) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// selector targets a notebook -> use the notebook uri instead\n\t\t// of the \"normal\" document uri.\n\t\tif (notebookType && candidateNotebookUri) {\n\t\t\tcandidateUri = candidateNotebookUri;\n\t\t}\n\n\t\tlet ret = 0;\n\n\t\tif (scheme) {\n\t\t\tif (scheme === candidateUri.scheme) {\n\t\t\t\tret = 10;\n\t\t\t} else if (scheme === \"*\") {\n\t\t\t\tret = 5;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (language) {\n\t\t\tif (language === candidateLanguage) {\n\t\t\t\tret = 10;\n\t\t\t} else if (language === \"*\") {\n\t\t\t\tret = Math.max(ret, 5);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (notebookType) {\n\t\t\tif (notebookType === candidateNotebookType) {\n\t\t\t\tret = 10;\n\t\t\t} else if (\n\t\t\t\tnotebookType === \"*\" &&\n\t\t\t\tcandidateNotebookType !== undefined\n\t\t\t) {\n\t\t\t\tret = Math.max(ret, 5);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (pattern) {\n\t\t\tlet normalizedPattern: string | IRelativePattern;\n\t\t\tif (typeof pattern === \"string\") {\n\t\t\t\tnormalizedPattern = pattern;\n\t\t\t} else {\n\t\t\t\t// Since this pattern has a `base` property, we need\n\t\t\t\t// to normalize this path first before passing it on\n\t\t\t\t// because we will compare it against `Uri.fsPath`\n\t\t\t\t// which uses platform specific separators.\n\t\t\t\t// Refs: https://github.com/microsoft/vscode/issues/99938\n\t\t\t\tnormalizedPattern = {\n\t\t\t\t\t...pattern,\n\t\t\t\t\tbase: normalize(pattern.base),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tnormalizedPattern === candidateUri.fsPath ||\n\t\t\t\tmatchGlobPattern(normalizedPattern, candidateUri.fsPath)\n\t\t\t) {\n\t\t\t\tret = 10;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function targetsNotebooks(selector: LanguageSelector): boolean {\n\tif (typeof selector === \"string\") {\n\t\treturn false;\n\t} else if (Array.isArray(selector)) {\n\t\treturn selector.some(targetsNotebooks);\n\t} else {\n\t\treturn !!(<LanguageFilter>selector).notebookType;\n\t}\n}\n"],
  "mappings": ";;AAKA;AAAA,EAEC,SAAS;AAAA,OACH;AACP,SAAS,iBAAiB;AAyBnB,SAAS,MACf,UACA,cACA,mBACA,yBACA,sBACA,uBACS;AACT,MAAI,MAAM,QAAQ,QAAQ,GAAG;AAE5B,QAAI,MAAM;AACV,eAAW,UAAU,UAAU;AAC9B,YAAM,QAAQ;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AACA,UAAI,UAAU,IAAI;AACjB,eAAO;AAAA,MACR;AACA,UAAI,QAAQ,KAAK;AAChB,cAAM;AAAA,MACP;AAAA,IACD;AACA,WAAO;AAAA,EACR,WAAW,OAAO,aAAa,UAAU;AACxC,QAAI,CAAC,yBAAyB;AAC7B,aAAO;AAAA,IACR;AAKA,QAAI,aAAa,KAAK;AACrB,aAAO;AAAA,IACR,WAAW,aAAa,mBAAmB;AAC1C,aAAO;AAAA,IACR,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD,WAAW,UAAU;AAEpB,UAAM;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,IAAI;AAEJ,QAAI,CAAC,2BAA2B,CAAC,sBAAsB;AACtD,aAAO;AAAA,IACR;AAIA,QAAI,gBAAgB,sBAAsB;AACzC,qBAAe;AAAA,IAChB;AAEA,QAAI,MAAM;AAEV,QAAI,QAAQ;AACX,UAAI,WAAW,aAAa,QAAQ;AACnC,cAAM;AAAA,MACP,WAAW,WAAW,KAAK;AAC1B,cAAM;AAAA,MACP,OAAO;AACN,eAAO;AAAA,MACR;AAAA,IACD;AAEA,QAAI,UAAU;AACb,UAAI,aAAa,mBAAmB;AACnC,cAAM;AAAA,MACP,WAAW,aAAa,KAAK;AAC5B,cAAM,KAAK,IAAI,KAAK,CAAC;AAAA,MACtB,OAAO;AACN,eAAO;AAAA,MACR;AAAA,IACD;AAEA,QAAI,cAAc;AACjB,UAAI,iBAAiB,uBAAuB;AAC3C,cAAM;AAAA,MACP,WACC,iBAAiB,OACjB,0BAA0B,QACzB;AACD,cAAM,KAAK,IAAI,KAAK,CAAC;AAAA,MACtB,OAAO;AACN,eAAO;AAAA,MACR;AAAA,IACD;AAEA,QAAI,SAAS;AACZ,UAAI;AACJ,UAAI,OAAO,YAAY,UAAU;AAChC,4BAAoB;AAAA,MACrB,OAAO;AAMN,4BAAoB;AAAA,UACnB,GAAG;AAAA,UACH,MAAM,UAAU,QAAQ,IAAI;AAAA,QAC7B;AAAA,MACD;AAEA,UACC,sBAAsB,aAAa,UACnC,iBAAiB,mBAAmB,aAAa,MAAM,GACtD;AACD,cAAM;AAAA,MACP,OAAO;AACN,eAAO;AAAA,MACR;AAAA,IACD;AAEA,WAAO;AAAA,EACR,OAAO;AACN,WAAO;AAAA,EACR;AACD;AAhIgB;AAkIT,SAAS,iBAAiB,UAAqC;AACrE,MAAI,OAAO,aAAa,UAAU;AACjC,WAAO;AAAA,EACR,WAAW,MAAM,QAAQ,QAAQ,GAAG;AACnC,WAAO,SAAS,KAAK,gBAAgB;AAAA,EACtC,OAAO;AACN,WAAO,CAAC,CAAkB,SAAU;AAAA,EACrC;AACD;AARgB;",
  "names": []
}
