import"../core/position.js";import{Range as i}from"../core/range.js";import{Selection as a}from"../core/selection.js";import"../editorCommon.js";import"../model.js";class S{_range;_charBeforeSelection;_charAfterSelection;constructor(r,e,n){this._range=r,this._charBeforeSelection=e,this._charAfterSelection=n}getEditOperations(r,e){e.addTrackedEditOperation(new i(this._range.startLineNumber,this._range.startColumn,this._range.startLineNumber,this._range.startColumn),this._charBeforeSelection),e.addTrackedEditOperation(new i(this._range.endLineNumber,this._range.endColumn,this._range.endLineNumber,this._range.endColumn),this._charAfterSelection)}computeCursorState(r,e){const n=e.getInverseEditOperations(),t=n[0].range,o=n[1].range;return new a(t.endLineNumber,t.endColumn,o.endLineNumber,o.endColumn-this._charAfterSelection.length)}}class f{constructor(r,e,n){this._position=r;this._text=e;this._charAfter=n}getEditOperations(r,e){e.addTrackedEditOperation(new i(this._position.lineNumber,this._position.column,this._position.lineNumber,this._position.column),this._text+this._charAfter)}computeCursorState(r,e){const t=e.getInverseEditOperations()[0].range;return new a(t.endLineNumber,t.startColumn,t.endLineNumber,t.endColumn-this._charAfter.length)}}export{f as CompositionSurroundSelectionCommand,S as SurroundSelectionCommand};
