var y=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var L=(p,n,i,t)=>{for(var e=t>1?void 0:t?N(n,i):n,u=p.length-1,l;u>=0;u--)(l=p[u])&&(e=(t?l(n,i,e):l(e))||e);return t&&e&&y(n,i,e),e},x=(p,n)=>(i,t)=>n(i,t,p);import{CharCode as I}from"../../../../vs/base/common/charCode.js";import*as v from"../../../../vs/base/common/strings.js";import"../../../../vs/editor/common/config/editorOptions.js";import{CursorColumns as m}from"../../../../vs/editor/common/core/cursorColumns.js";import{Range as _}from"../../../../vs/editor/common/core/range.js";import{Selection as E,SelectionDirection as R}from"../../../../vs/editor/common/core/selection.js";import"../../../../vs/editor/common/editorCommon.js";import{getEnterAction as P}from"../../../../vs/editor/common/languages/enterAction.js";import{ILanguageConfigurationService as U}from"../../../../vs/editor/common/languages/languageConfigurationRegistry.js";import"../../../../vs/editor/common/model.js";const T=Object.create(null);function h(p,n){if(n<=0)return"";T[p]||(T[p]=["",p]);const i=T[p];for(let t=i.length;t<=n;t++)i[t]=i[t-1]+p;return i[n]}let f=class{constructor(n,i,t){this._languageConfigurationService=t;this._opts=i,this._selection=n,this._selectionId=null,this._useLastEditRangeForCursorEndPosition=!1,this._selectionStartColumnStaysPut=!1}static unshiftIndent(n,i,t,e,u){const l=m.visibleColumnFromColumn(n,i,t);if(u){const c=h(" ",e),d=m.prevIndentTabStop(l,e)/e;return h(c,d)}else{const c="	",d=m.prevRenderTabStop(l,t)/t;return h(c,d)}}static shiftIndent(n,i,t,e,u){const l=m.visibleColumnFromColumn(n,i,t);if(u){const c=h(" ",e),d=m.nextIndentTabStop(l,e)/e;return h(c,d)}else{const c="	",d=m.nextRenderTabStop(l,t)/t;return h(c,d)}}_opts;_selection;_selectionId;_useLastEditRangeForCursorEndPosition;_selectionStartColumnStaysPut;_addEditOperation(n,i,t){this._useLastEditRangeForCursorEndPosition?n.addTrackedEditOperation(i,t):n.addEditOperation(i,t)}getEditOperations(n,i){const t=this._selection.startLineNumber;let e=this._selection.endLineNumber;this._selection.endColumn===1&&t!==e&&(e=e-1);const{tabSize:u,indentSize:l,insertSpaces:c}=this._opts,C=t===e;if(this._opts.useTabStops){this._selection.isEmpty()&&/^\s*$/.test(n.getLineContent(t))&&(this._useLastEditRangeForCursorEndPosition=!0);let d=0,r=0;for(let o=t;o<=e;o++,d=r){r=0;const s=n.getLineContent(o);let a=v.firstNonWhitespaceIndex(s);if(this._opts.isUnshift&&(s.length===0||a===0)||!C&&!this._opts.isUnshift&&s.length===0)continue;if(a===-1&&(a=s.length),o>1&&m.visibleColumnFromColumn(s,a+1,u)%l!==0&&n.tokenization.isCheapToTokenize(o-1)){const g=P(this._opts.autoIndent,n,new _(o-1,n.getLineMaxColumn(o-1),o-1,n.getLineMaxColumn(o-1)),this._languageConfigurationService);if(g){if(r=d,g.appendText)for(let b=0,O=g.appendText.length;b<O&&r<l&&g.appendText.charCodeAt(b)===I.Space;b++)r++;g.removeText&&(r=Math.max(0,r-g.removeText));for(let b=0;b<r&&!(a===0||s.charCodeAt(a-1)!==I.Space);b++)a--}}if(this._opts.isUnshift&&a===0)continue;let S;this._opts.isUnshift?S=f.unshiftIndent(s,a+1,u,l,c):S=f.shiftIndent(s,a+1,u,l,c),this._addEditOperation(i,new _(o,1,o,a+1),S),o===t&&!this._selection.isEmpty()&&(this._selectionStartColumnStaysPut=this._selection.startColumn<=a+1)}}else{!this._opts.isUnshift&&this._selection.isEmpty()&&n.getLineLength(t)===0&&(this._useLastEditRangeForCursorEndPosition=!0);const d=c?h(" ",l):"	";for(let r=t;r<=e;r++){const o=n.getLineContent(r);let s=v.firstNonWhitespaceIndex(o);if(!(this._opts.isUnshift&&(o.length===0||s===0))&&!(!C&&!this._opts.isUnshift&&o.length===0)&&(s===-1&&(s=o.length),!(this._opts.isUnshift&&s===0)))if(this._opts.isUnshift){s=Math.min(s,l);for(let a=0;a<s;a++)if(o.charCodeAt(a)===I.Tab){s=a+1;break}this._addEditOperation(i,new _(r,1,r,s+1),"")}else this._addEditOperation(i,new _(r,1,r,1),d),r===t&&!this._selection.isEmpty()&&(this._selectionStartColumnStaysPut=this._selection.startColumn===1)}}this._selectionId=i.trackSelection(this._selection)}computeCursorState(n,i){if(this._useLastEditRangeForCursorEndPosition){const e=i.getInverseEditOperations()[0];return new E(e.range.endLineNumber,e.range.endColumn,e.range.endLineNumber,e.range.endColumn)}const t=i.getTrackedSelection(this._selectionId);if(this._selectionStartColumnStaysPut){const e=this._selection.startColumn;return t.startColumn<=e?t:t.getDirection()===R.LTR?new E(t.startLineNumber,e,t.endLineNumber,t.endColumn):new E(t.endLineNumber,t.endColumn,t.startLineNumber,e)}return t}};f=L([x(2,U)],f);export{f as ShiftCommand};
