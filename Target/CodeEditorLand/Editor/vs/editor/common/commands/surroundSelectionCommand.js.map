{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/commands/surroundSelectionCommand.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Position } from \"../core/position.js\";\nimport { Range } from \"../core/range.js\";\nimport { Selection } from \"../core/selection.js\";\nimport type {\n\tICommand,\n\tICursorStateComputerData,\n\tIEditOperationBuilder,\n} from \"../editorCommon.js\";\nimport type { ITextModel } from \"../model.js\";\n\nexport class SurroundSelectionCommand implements ICommand {\n\tprivate readonly _range: Selection;\n\tprivate readonly _charBeforeSelection: string;\n\tprivate readonly _charAfterSelection: string;\n\n\tconstructor(\n\t\trange: Selection,\n\t\tcharBeforeSelection: string,\n\t\tcharAfterSelection: string,\n\t) {\n\t\tthis._range = range;\n\t\tthis._charBeforeSelection = charBeforeSelection;\n\t\tthis._charAfterSelection = charAfterSelection;\n\t}\n\n\tpublic getEditOperations(\n\t\tmodel: ITextModel,\n\t\tbuilder: IEditOperationBuilder,\n\t): void {\n\t\tbuilder.addTrackedEditOperation(\n\t\t\tnew Range(\n\t\t\t\tthis._range.startLineNumber,\n\t\t\t\tthis._range.startColumn,\n\t\t\t\tthis._range.startLineNumber,\n\t\t\t\tthis._range.startColumn,\n\t\t\t),\n\t\t\tthis._charBeforeSelection,\n\t\t);\n\n\t\tbuilder.addTrackedEditOperation(\n\t\t\tnew Range(\n\t\t\t\tthis._range.endLineNumber,\n\t\t\t\tthis._range.endColumn,\n\t\t\t\tthis._range.endLineNumber,\n\t\t\t\tthis._range.endColumn,\n\t\t\t),\n\t\t\tthis._charAfterSelection,\n\t\t);\n\t}\n\n\tpublic computeCursorState(\n\t\tmodel: ITextModel,\n\t\thelper: ICursorStateComputerData,\n\t): Selection {\n\t\tconst inverseEditOperations = helper.getInverseEditOperations();\n\t\tconst firstOperationRange = inverseEditOperations[0].range;\n\t\tconst secondOperationRange = inverseEditOperations[1].range;\n\n\t\treturn new Selection(\n\t\t\tfirstOperationRange.endLineNumber,\n\t\t\tfirstOperationRange.endColumn,\n\t\t\tsecondOperationRange.endLineNumber,\n\t\t\tsecondOperationRange.endColumn - this._charAfterSelection.length,\n\t\t);\n\t}\n}\n\n/**\n * A surround selection command that runs after composition finished.\n */\nexport class CompositionSurroundSelectionCommand implements ICommand {\n\tconstructor(\n\t\tprivate readonly _position: Position,\n\t\tprivate readonly _text: string,\n\t\tprivate readonly _charAfter: string,\n\t) {}\n\n\tpublic getEditOperations(\n\t\tmodel: ITextModel,\n\t\tbuilder: IEditOperationBuilder,\n\t): void {\n\t\tbuilder.addTrackedEditOperation(\n\t\t\tnew Range(\n\t\t\t\tthis._position.lineNumber,\n\t\t\t\tthis._position.column,\n\t\t\t\tthis._position.lineNumber,\n\t\t\t\tthis._position.column,\n\t\t\t),\n\t\t\tthis._text + this._charAfter,\n\t\t);\n\t}\n\n\tpublic computeCursorState(\n\t\tmodel: ITextModel,\n\t\thelper: ICursorStateComputerData,\n\t): Selection {\n\t\tconst inverseEditOperations = helper.getInverseEditOperations();\n\t\tconst opRange = inverseEditOperations[0].range;\n\n\t\treturn new Selection(\n\t\t\topRange.endLineNumber,\n\t\t\topRange.startColumn,\n\t\t\topRange.endLineNumber,\n\t\t\topRange.endColumn - this._charAfter.length,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,aAAa;AACtB,SAAS,iBAAiB;AAQnB,MAAM,yBAA6C;AAAA,EAf1D,OAe0D;AAAA;AAAA;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EAEjB,YACC,OACA,qBACA,oBACC;AACD,SAAK,SAAS;AACd,SAAK,uBAAuB;AAC5B,SAAK,sBAAsB;AAAA,EAC5B;AAAA,EAEO,kBACN,OACA,SACO;AACP,YAAQ;AAAA,MACP,IAAI;AAAA,QACH,KAAK,OAAO;AAAA,QACZ,KAAK,OAAO;AAAA,QACZ,KAAK,OAAO;AAAA,QACZ,KAAK,OAAO;AAAA,MACb;AAAA,MACA,KAAK;AAAA,IACN;AAEA,YAAQ;AAAA,MACP,IAAI;AAAA,QACH,KAAK,OAAO;AAAA,QACZ,KAAK,OAAO;AAAA,QACZ,KAAK,OAAO;AAAA,QACZ,KAAK,OAAO;AAAA,MACb;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACD;AAAA,EAEO,mBACN,OACA,QACY;AACZ,UAAM,wBAAwB,OAAO,yBAAyB;AAC9D,UAAM,sBAAsB,sBAAsB,CAAC,EAAE;AACrD,UAAM,uBAAuB,sBAAsB,CAAC,EAAE;AAEtD,WAAO,IAAI;AAAA,MACV,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,qBAAqB,YAAY,KAAK,oBAAoB;AAAA,IAC3D;AAAA,EACD;AACD;AAKO,MAAM,oCAAwD;AAAA,EACpE,YACkB,WACA,OACA,YAChB;AAHgB;AACA;AACA;AAAA,EACf;AAAA,EAhFJ,OA2EqE;AAAA;AAAA;AAAA,EAO7D,kBACN,OACA,SACO;AACP,YAAQ;AAAA,MACP,IAAI;AAAA,QACH,KAAK,UAAU;AAAA,QACf,KAAK,UAAU;AAAA,QACf,KAAK,UAAU;AAAA,QACf,KAAK,UAAU;AAAA,MAChB;AAAA,MACA,KAAK,QAAQ,KAAK;AAAA,IACnB;AAAA,EACD;AAAA,EAEO,mBACN,OACA,QACY;AACZ,UAAM,wBAAwB,OAAO,yBAAyB;AAC9D,UAAM,UAAU,sBAAsB,CAAC,EAAE;AAEzC,WAAO,IAAI;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ,YAAY,KAAK,WAAW;AAAA,IACrC;AAAA,EACD;AACD;",
  "names": []
}
