{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/standaloneStrings.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../nls.js';\n\nexport namespace AccessibilityHelpNLS {\n\texport const accessibilityHelpTitle = nls.localize('accessibilityHelpTitle', \"Accessibility Help\");\n\texport const openingDocs = nls.localize(\"openingDocs\", \"Opening the Accessibility documentation page.\");\n\texport const readonlyDiffEditor = nls.localize(\"readonlyDiffEditor\", \"You are in a read-only pane of a diff editor.\");\n\texport const editableDiffEditor = nls.localize(\"editableDiffEditor\", \"You are in a pane of a diff editor.\");\n\texport const readonlyEditor = nls.localize(\"readonlyEditor\", \"You are in a read-only code editor.\");\n\texport const editableEditor = nls.localize(\"editableEditor\", \"You are in a code editor.\");\n\texport const changeConfigToOnMac = nls.localize(\"changeConfigToOnMac\", \"Configure the application to be optimized for usage with a Screen Reader (Command+E).\");\n\texport const changeConfigToOnWinLinux = nls.localize(\"changeConfigToOnWinLinux\", \"Configure the application to be optimized for usage with a Screen Reader (Control+E).\");\n\texport const auto_on = nls.localize(\"auto_on\", \"The application is configured to be optimized for usage with a Screen Reader.\");\n\texport const auto_off = nls.localize(\"auto_off\", \"The application is configured to never be optimized for usage with a Screen Reader.\");\n\texport const screenReaderModeEnabled = nls.localize(\"screenReaderModeEnabled\", \"Screen Reader Optimized Mode enabled.\");\n\texport const screenReaderModeDisabled = nls.localize(\"screenReaderModeDisabled\", \"Screen Reader Optimized Mode disabled.\");\n\texport const tabFocusModeOnMsg = nls.localize(\"tabFocusModeOnMsg\", \"Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior{0}.\", '<keybinding:editor.action.toggleTabFocusMode>');\n\texport const tabFocusModeOffMsg = nls.localize(\"tabFocusModeOffMsg\", \"Pressing Tab in the current editor will insert the tab character. Toggle this behavior{0}.\", '<keybinding:editor.action.toggleTabFocusMode>');\n\texport const stickScroll = nls.localize(\"stickScrollKb\", \"Focus Sticky Scroll{0} to focus the currently nested scopes.\", '<keybinding:editor.action.focusStickyDebugConsole>');\n\texport const codeFolding = nls.localize(\"codeFolding\", \"Use code folding to collapse blocks of code and focus on the code you're interested in via the Toggle Folding Command{0}.\", '<keybinding:editor.toggleFold>');\n\texport const intellisense = nls.localize(\"intellisense\", \"Use Intellisense to improve coding efficiency and reduce errors. Trigger suggestions{0}.\", '<keybinding:editor.action.triggerSuggest>');\n\texport const showOrFocusHover = nls.localize(\"showOrFocusHover\", \"Show or focus the hover{0} to read information about the current symbol.\", '<keybinding:editor.action.showHover>');\n\texport const goToSymbol = nls.localize(\"goToSymbol\", \"Go to Symbol{0} to quickly navigate between symbols in the current file.\", '<keybinding:workbench.action.gotoSymbol>');\n\texport const showAccessibilityHelpAction = nls.localize(\"showAccessibilityHelpAction\", \"Show Accessibility Help\");\n\texport const listSignalSounds = nls.localize(\"listSignalSoundsCommand\", \"Run the command: List Signal Sounds for an overview of all sounds and their current status.\");\n\texport const listAlerts = nls.localize(\"listAnnouncementsCommand\", \"Run the command: List Signal Announcements for an overview of announcements and their current status.\");\n\texport const quickChat = nls.localize(\"quickChatCommand\", \"Toggle quick chat{0} to open or close a chat session.\", '<keybinding:workbench.action.quickchat.toggle>');\n\texport const startInlineChat = nls.localize(\"startInlineChatCommand\", \"Start inline chat{0} to create an in editor chat session.\", '<keybinding:inlineChat.start>');\n\texport const startDebugging = nls.localize('debug.startDebugging', \"The Debug: Start Debugging command{0} will start a debug session.\", '<keybinding:workbench.action.debug.start>');\n\texport const setBreakpoint = nls.localize('debugConsole.setBreakpoint', \"The Debug: Inline Breakpoint command{0} will set or unset a breakpoint at the current cursor position in the active editor.\", '<keybinding:editor.debug.action.toggleInlineBreakpoint>');\n\texport const addToWatch = nls.localize('debugConsole.addToWatch', \"The Debug: Add to Watch command{0} will add the selected text to the watch view.\", '<keybinding:editor.debug.action.selectionToWatch>');\n\texport const debugExecuteSelection = nls.localize('debugConsole.executeSelection', \"The Debug: Execute Selection command{0} will execute the selected text in the debug console.\", '<keybinding:editor.debug.action.selectionToRepl>');\n}\n\nexport namespace InspectTokensNLS {\n\texport const inspectTokensAction = nls.localize('inspectTokens', \"Developer: Inspect Tokens\");\n}\n\nexport namespace GoToLineNLS {\n\texport const gotoLineActionLabel = nls.localize('gotoLineActionLabel', \"Go to Line/Column...\");\n}\n\nexport namespace QuickHelpNLS {\n\texport const helpQuickAccessActionLabel = nls.localize('helpQuickAccess', \"Show all Quick Access Providers\");\n}\n\nexport namespace QuickCommandNLS {\n\texport const quickCommandActionLabel = nls.localize('quickCommandActionLabel', \"Command Palette\");\n\texport const quickCommandHelp = nls.localize('quickCommandActionHelp', \"Show And Run Commands\");\n}\n\nexport namespace QuickOutlineNLS {\n\texport const quickOutlineActionLabel = nls.localize('quickOutlineActionLabel', \"Go to Symbol...\");\n\texport const quickOutlineByCategoryActionLabel = nls.localize('quickOutlineByCategoryActionLabel', \"Go to Symbol by Category...\");\n}\n\nexport namespace StandaloneCodeEditorNLS {\n\texport const editorViewAccessibleLabel = nls.localize('editorViewAccessibleLabel', \"Editor content\");\n}\n\nexport namespace ToggleHighContrastNLS {\n\texport const toggleHighContrast = nls.localize('toggleHighContrast', \"Toggle High Contrast Theme\");\n}\n\nexport namespace StandaloneServicesNLS {\n\texport const bulkEditServiceSummary = nls.localize('bulkEditServiceSummary', \"Made {0} edits in {1} files\");\n}\n"],
  "mappings": "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",
  "names": ["AccessibilityHelpNLS", "InspectTokensNLS", "GoToLineNLS", "QuickHelpNLS", "QuickCommandNLS", "QuickOutlineNLS", "StandaloneCodeEditorNLS", "ToggleHighContrastNLS", "StandaloneServicesNLS"]
}
