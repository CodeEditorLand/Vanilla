{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/config/editorConfigurationSchema.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { diffEditorDefaultOptions } from './diffEditor.js';\nimport { editorOptionsRegistry } from './editorOptions.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\nimport * as nls from '../../../nls.js';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationPropertySchema, IConfigurationRegistry } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\n\nexport const editorConfigurationBaseNode = Object.freeze<IConfigurationNode>({\n\tid: 'editor',\n\torder: 5,\n\ttype: 'object',\n\ttitle: nls.localize('editorConfigurationTitle', \"Editor\"),\n\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n});\n\nconst editorConfiguration: IConfigurationNode = {\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t'editor.tabSize': {\n\t\t\ttype: 'number',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.tabSize,\n\t\t\tminimum: 1,\n\t\t\tmarkdownDescription: nls.localize('tabSize', \"The number of spaces a tab is equal to. This setting is overridden based on the file contents when {0} is on.\", '`#editor.detectIndentation#`')\n\t\t},\n\t\t'editor.indentSize': {\n\t\t\t'anyOf': [\n\t\t\t\t{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['tabSize']\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tminimum: 1\n\t\t\t\t}\n\t\t\t],\n\t\t\tdefault: 'tabSize',\n\t\t\tmarkdownDescription: nls.localize('indentSize', \"The number of spaces used for indentation or `\\\"tabSize\\\"` to use the value from `#editor.tabSize#`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.\")\n\t\t},\n\t\t'editor.insertSpaces': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.insertSpaces,\n\t\t\tmarkdownDescription: nls.localize('insertSpaces', \"Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when {0} is on.\", '`#editor.detectIndentation#`')\n\t\t},\n\t\t'editor.detectIndentation': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.detectIndentation,\n\t\t\tmarkdownDescription: nls.localize('detectIndentation', \"Controls whether {0} and {1} will be automatically detected when a file is opened based on the file contents.\", '`#editor.tabSize#`', '`#editor.insertSpaces#`')\n\t\t},\n\t\t'editor.trimAutoWhitespace': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,\n\t\t\tdescription: nls.localize('trimAutoWhitespace', \"Remove trailing auto inserted whitespace.\")\n\t\t},\n\t\t'editor.largeFileOptimizations': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.largeFileOptimizations,\n\t\t\tdescription: nls.localize('largeFileOptimizations', \"Special handling for large files to disable certain memory intensive features.\")\n\t\t},\n\t\t'editor.wordBasedSuggestions': {\n\t\t\tenum: ['off', 'currentDocument', 'matchingDocuments', 'allDocuments'],\n\t\t\tdefault: 'matchingDocuments',\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('wordBasedSuggestions.off', 'Turn off Word Based Suggestions.'),\n\t\t\t\tnls.localize('wordBasedSuggestions.currentDocument', 'Only suggest words from the active document.'),\n\t\t\t\tnls.localize('wordBasedSuggestions.matchingDocuments', 'Suggest words from all open documents of the same language.'),\n\t\t\t\tnls.localize('wordBasedSuggestions.allDocuments', 'Suggest words from all open documents.')\n\t\t\t],\n\t\t\tdescription: nls.localize('wordBasedSuggestions', \"Controls whether completions should be computed based on words in the document and from which documents they are computed.\")\n\t\t},\n\t\t'editor.semanticHighlighting.enabled': {\n\t\t\tenum: [true, false, 'configuredByTheme'],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('semanticHighlighting.true', 'Semantic highlighting enabled for all color themes.'),\n\t\t\t\tnls.localize('semanticHighlighting.false', 'Semantic highlighting disabled for all color themes.'),\n\t\t\t\tnls.localize('semanticHighlighting.configuredByTheme', 'Semantic highlighting is configured by the current color theme\\'s `semanticHighlighting` setting.')\n\t\t\t],\n\t\t\tdefault: 'configuredByTheme',\n\t\t\tdescription: nls.localize('semanticHighlighting.enabled', \"Controls whether the semanticHighlighting is shown for the languages that support it.\")\n\t\t},\n\t\t'editor.stablePeek': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: nls.localize('stablePeek', \"Keep peek editors open even when double-clicking their content or when hitting `Escape`.\")\n\t\t},\n\t\t'editor.maxTokenizationLineLength': {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 20_000,\n\t\t\tdescription: nls.localize('maxTokenizationLineLength', \"Lines above this length will not be tokenized for performance reasons\")\n\t\t},\n\t\t'editor.experimental.asyncTokenization': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: nls.localize('editor.experimental.asyncTokenization', \"Controls whether the tokenization should happen asynchronously on a web worker.\"),\n\t\t\ttags: ['experimental'],\n\t\t},\n\t\t'editor.experimental.asyncTokenizationLogging': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('editor.experimental.asyncTokenizationLogging', \"Controls whether async tokenization should be logged. For debugging only.\"),\n\t\t},\n\t\t'editor.experimental.asyncTokenizationVerification': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('editor.experimental.asyncTokenizationVerification', \"Controls whether async tokenization should be verified against legacy background tokenization. Might slow down tokenization. For debugging only.\"),\n\t\t\ttags: ['experimental'],\n\t\t},\n\t\t'editor.experimental.treeSitterTelemetry': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: nls.localize('editor.experimental.treeSitterTelemetry', \"Controls whether tree sitter parsing should be turned on and telemetry collected. Setting `editor.experimental.preferTreeSitter` for specific languages will take precedence.\"),\n\t\t\ttags: ['experimental']\n\t\t},\n\t\t'editor.language.brackets': {\n\t\t\ttype: ['array', 'null'],\n\t\t\tdefault: null, // We want to distinguish the empty array from not configured.\n\t\t\tdescription: nls.localize('schema.brackets', 'Defines the bracket symbols that increase or decrease the indentation.'),\n\t\t\titems: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.openBracket', 'The opening bracket character or string sequence.')\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.closeBracket', 'The closing bracket character or string sequence.')\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t'editor.language.colorizedBracketPairs': {\n\t\t\ttype: ['array', 'null'],\n\t\t\tdefault: null, // We want to distinguish the empty array from not configured.\n\t\t\tdescription: nls.localize('schema.colorizedBracketPairs', 'Defines the bracket pairs that are colorized by their nesting level if bracket pair colorization is enabled.'),\n\t\t\titems: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.openBracket', 'The opening bracket character or string sequence.')\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.closeBracket', 'The closing bracket character or string sequence.')\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t'diffEditor.maxComputationTime': {\n\t\t\ttype: 'number',\n\t\t\tdefault: diffEditorDefaultOptions.maxComputationTime,\n\t\t\tdescription: nls.localize('maxComputationTime', \"Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.\")\n\t\t},\n\t\t'diffEditor.maxFileSize': {\n\t\t\ttype: 'number',\n\t\t\tdefault: diffEditorDefaultOptions.maxFileSize,\n\t\t\tdescription: nls.localize('maxFileSize', \"Maximum file size in MB for which to compute diffs. Use 0 for no limit.\")\n\t\t},\n\t\t'diffEditor.renderSideBySide': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.renderSideBySide,\n\t\t\tdescription: nls.localize('sideBySide', \"Controls whether the diff editor shows the diff side by side or inline.\")\n\t\t},\n\t\t'diffEditor.renderSideBySideInlineBreakpoint': {\n\t\t\ttype: 'number',\n\t\t\tdefault: diffEditorDefaultOptions.renderSideBySideInlineBreakpoint,\n\t\t\tdescription: nls.localize('renderSideBySideInlineBreakpoint', \"If the diff editor width is smaller than this value, the inline view is used.\")\n\t\t},\n\t\t'diffEditor.useInlineViewWhenSpaceIsLimited': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.useInlineViewWhenSpaceIsLimited,\n\t\t\tdescription: nls.localize('useInlineViewWhenSpaceIsLimited', \"If enabled and the editor width is too small, the inline view is used.\")\n\t\t},\n\t\t'diffEditor.renderMarginRevertIcon': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.renderMarginRevertIcon,\n\t\t\tdescription: nls.localize('renderMarginRevertIcon', \"When enabled, the diff editor shows arrows in its glyph margin to revert changes.\")\n\t\t},\n\t\t'diffEditor.renderGutterMenu': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.renderGutterMenu,\n\t\t\tdescription: nls.localize('renderGutterMenu', \"When enabled, the diff editor shows a special gutter for revert and stage actions.\")\n\t\t},\n\t\t'diffEditor.ignoreTrimWhitespace': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.ignoreTrimWhitespace,\n\t\t\tdescription: nls.localize('ignoreTrimWhitespace', \"When enabled, the diff editor ignores changes in leading or trailing whitespace.\")\n\t\t},\n\t\t'diffEditor.renderIndicators': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.renderIndicators,\n\t\t\tdescription: nls.localize('renderIndicators', \"Controls whether the diff editor shows +/- indicators for added/removed changes.\")\n\t\t},\n\t\t'diffEditor.codeLens': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.diffCodeLens,\n\t\t\tdescription: nls.localize('codeLens', \"Controls whether the editor shows CodeLens.\")\n\t\t},\n\t\t'diffEditor.wordWrap': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['off', 'on', 'inherit'],\n\t\t\tdefault: diffEditorDefaultOptions.diffWordWrap,\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('wordWrap.off', \"Lines will never wrap.\"),\n\t\t\t\tnls.localize('wordWrap.on', \"Lines will wrap at the viewport width.\"),\n\t\t\t\tnls.localize('wordWrap.inherit', \"Lines will wrap according to the {0} setting.\", '`#editor.wordWrap#`'),\n\t\t\t]\n\t\t},\n\t\t'diffEditor.diffAlgorithm': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['legacy', 'advanced'],\n\t\t\tdefault: diffEditorDefaultOptions.diffAlgorithm,\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('diffAlgorithm.legacy', \"Uses the legacy diffing algorithm.\"),\n\t\t\t\tnls.localize('diffAlgorithm.advanced', \"Uses the advanced diffing algorithm.\"),\n\t\t\t],\n\t\t\ttags: ['experimental'],\n\t\t},\n\t\t'diffEditor.hideUnchangedRegions.enabled': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.hideUnchangedRegions.enabled,\n\t\t\tmarkdownDescription: nls.localize('hideUnchangedRegions.enabled', \"Controls whether the diff editor shows unchanged regions.\"),\n\t\t},\n\t\t'diffEditor.hideUnchangedRegions.revealLineCount': {\n\t\t\ttype: 'integer',\n\t\t\tdefault: diffEditorDefaultOptions.hideUnchangedRegions.revealLineCount,\n\t\t\tmarkdownDescription: nls.localize('hideUnchangedRegions.revealLineCount', \"Controls how many lines are used for unchanged regions.\"),\n\t\t\tminimum: 1,\n\t\t},\n\t\t'diffEditor.hideUnchangedRegions.minimumLineCount': {\n\t\t\ttype: 'integer',\n\t\t\tdefault: diffEditorDefaultOptions.hideUnchangedRegions.minimumLineCount,\n\t\t\tmarkdownDescription: nls.localize('hideUnchangedRegions.minimumLineCount', \"Controls how many lines are used as a minimum for unchanged regions.\"),\n\t\t\tminimum: 1,\n\t\t},\n\t\t'diffEditor.hideUnchangedRegions.contextLineCount': {\n\t\t\ttype: 'integer',\n\t\t\tdefault: diffEditorDefaultOptions.hideUnchangedRegions.contextLineCount,\n\t\t\tmarkdownDescription: nls.localize('hideUnchangedRegions.contextLineCount', \"Controls how many lines are used as context when comparing unchanged regions.\"),\n\t\t\tminimum: 1,\n\t\t},\n\t\t'diffEditor.experimental.showMoves': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.experimental.showMoves,\n\t\t\tmarkdownDescription: nls.localize('showMoves', \"Controls whether the diff editor should show detected code moves.\")\n\t\t},\n\t\t'diffEditor.experimental.showEmptyDecorations': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.experimental.showEmptyDecorations,\n\t\t\tdescription: nls.localize('showEmptyDecorations', \"Controls whether the diff editor shows empty decorations to see where characters got inserted or deleted.\"),\n\t\t},\n\t\t'diffEditor.experimental.useTrueInlineView': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.experimental.useTrueInlineView,\n\t\t\tdescription: nls.localize('useTrueInlineView', \"If enabled and the editor uses the inline view, word changes are rendered inline.\"),\n\t\t},\n\t}\n};\n\nfunction isConfigurationPropertySchema(x: IConfigurationPropertySchema | { [path: string]: IConfigurationPropertySchema }): x is IConfigurationPropertySchema {\n\treturn (typeof x.type !== 'undefined' || typeof x.anyOf !== 'undefined');\n}\n\n// Add properties from the Editor Option Registry\nfor (const editorOption of editorOptionsRegistry) {\n\tconst schema = editorOption.schema;\n\tif (typeof schema !== 'undefined') {\n\t\tif (isConfigurationPropertySchema(schema)) {\n\t\t\t// This is a single schema contribution\n\t\t\teditorConfiguration.properties![`editor.${editorOption.name}`] = schema;\n\t\t} else {\n\t\t\tfor (const key in schema) {\n\t\t\t\tif (Object.hasOwnProperty.call(schema, key)) {\n\t\t\t\t\teditorConfiguration.properties![key] = schema[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nlet cachedEditorConfigurationKeys: { [key: string]: boolean } | null = null;\nfunction getEditorConfigurationKeys(): { [key: string]: boolean } {\n\tif (cachedEditorConfigurationKeys === null) {\n\t\tcachedEditorConfigurationKeys = <{ [key: string]: boolean }>Object.create(null);\n\t\tObject.keys(editorConfiguration.properties!).forEach((prop) => {\n\t\t\tcachedEditorConfigurationKeys![prop] = true;\n\t\t});\n\t}\n\treturn cachedEditorConfigurationKeys;\n}\n\nexport function isEditorConfigurationKey(key: string): boolean {\n\tconst editorConfigurationKeys = getEditorConfigurationKeys();\n\treturn (editorConfigurationKeys[`editor.${key}`] || false);\n}\n\nexport function isDiffEditorConfigurationKey(key: string): boolean {\n\tconst editorConfigurationKeys = getEditorConfigurationKeys();\n\treturn (editorConfigurationKeys[`diffEditor.${key}`] || false);\n}\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\nconfigurationRegistry.registerConfiguration(editorConfiguration);\n"],
  "mappings": "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",
  "names": []
}
