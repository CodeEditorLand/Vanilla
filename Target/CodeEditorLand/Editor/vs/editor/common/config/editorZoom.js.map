{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/config/editorZoom.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\n\nexport interface IEditorZoom {\n\tonDidChangeZoomLevel: Event<number>;\n\tgetZoomLevel(): number;\n\tsetZoomLevel(zoomLevel: number): void;\n}\n\nexport const EditorZoom: IEditorZoom = new (class implements IEditorZoom {\n\tprivate _zoomLevel = 0;\n\n\tprivate readonly _onDidChangeZoomLevel = new Emitter<number>();\n\tpublic readonly onDidChangeZoomLevel: Event<number> =\n\t\tthis._onDidChangeZoomLevel.event;\n\n\tpublic getZoomLevel(): number {\n\t\treturn this._zoomLevel;\n\t}\n\n\tpublic setZoomLevel(zoomLevel: number): void {\n\t\tzoomLevel = Math.min(Math.max(-5, zoomLevel), 20);\n\t\tif (this._zoomLevel === zoomLevel) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._zoomLevel = zoomLevel;\n\t\tthis._onDidChangeZoomLevel.fire(this._zoomLevel);\n\t}\n})();\n"],
  "mappings": "AAKA,SAAS,eAA2B;AAQ7B,MAAM,aAA0B,IAAK,MAA6B;AAAA,EAChE,aAAa;AAAA,EAEJ,wBAAwB,IAAI,QAAgB;AAAA,EAC7C,uBACf,KAAK,sBAAsB;AAAA,EAErB,eAAuB;AAC7B,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,aAAa,WAAyB;AAC5C,gBAAY,KAAK,IAAI,KAAK,IAAI,IAAI,SAAS,GAAG,EAAE;AAChD,QAAI,KAAK,eAAe,WAAW;AAClC;AAAA,IACD;AAEA,SAAK,aAAa;AAClB,SAAK,sBAAsB,KAAK,KAAK,UAAU;AAAA,EAChD;AACD,EAAG;",
  "names": []
}
