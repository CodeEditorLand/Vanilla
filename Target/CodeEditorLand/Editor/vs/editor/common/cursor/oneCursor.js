import{CursorState as v,SelectionStartKind as d,SingleCursorState as l}from"../cursorCommon.js";import{Position as a}from"../core/position.js";import{Range as c}from"../core/range.js";import{Selection as C}from"../core/selection.js";import{PositionAffinity as S,TrackedRangeStickiness as g}from"../model.js";class p{modelState;viewState;_selTrackedRange;_trackSelection;constructor(t){this._selTrackedRange=null,this._trackSelection=!0,this._setState(t,new l(new c(1,1,1,1),d.Simple,0,new a(1,1),0),new l(new c(1,1,1,1),d.Simple,0,new a(1,1),0))}dispose(t){this._removeTrackedRange(t)}startTrackingSelection(t){this._trackSelection=!0,this._updateTrackedRange(t)}stopTrackingSelection(t){this._trackSelection=!1,this._removeTrackedRange(t)}_updateTrackedRange(t){this._trackSelection&&(this._selTrackedRange=t.model._setTrackedRange(this._selTrackedRange,this.modelState.selection,g.AlwaysGrowsWhenTypingAtEdges))}_removeTrackedRange(t){this._selTrackedRange=t.model._setTrackedRange(this._selTrackedRange,null,g.AlwaysGrowsWhenTypingAtEdges)}asCursorState(){return new v(this.modelState,this.viewState)}readSelectionFromMarkers(t){const e=t.model._getTrackedRange(this._selTrackedRange);return this.modelState.selection.isEmpty()&&!e.isEmpty()?C.fromRange(e.collapseToEnd(),this.modelState.selection.getDirection()):C.fromRange(e,this.modelState.selection.getDirection())}ensureValidState(t){this._setState(t,this.modelState,this.viewState)}setState(t,e,i){this._setState(t,e,i)}static _validatePositionWithCache(t,e,i,o){return e.equals(i)?o:t.normalizePosition(e,S.None)}static _validateViewState(t,e){const i=e.position,o=e.selectionStart.getStartPosition(),n=e.selectionStart.getEndPosition(),s=t.normalizePosition(i,S.None),r=this._validatePositionWithCache(t,o,i,s),u=this._validatePositionWithCache(t,n,o,r);return i.equals(s)&&o.equals(r)&&n.equals(u)?e:new l(c.fromPositions(r,u),e.selectionStartKind,e.selectionStartLeftoverVisibleColumns+o.column-r.column,s,e.leftoverVisibleColumns+i.column-s.column)}_setState(t,e,i){if(i&&(i=p._validateViewState(t.viewModel,i)),e){const o=t.model.validateRange(e.selectionStart),n=e.selectionStart.equalsRange(o)?e.selectionStartLeftoverVisibleColumns:0,s=t.model.validatePosition(e.position),r=e.position.equals(s)?e.leftoverVisibleColumns:0;e=new l(o,e.selectionStartKind,n,s,r)}else{if(!i)return;const o=t.model.validateRange(t.coordinatesConverter.convertViewRangeToModelRange(i.selectionStart)),n=t.model.validatePosition(t.coordinatesConverter.convertViewPositionToModelPosition(i.position));e=new l(o,i.selectionStartKind,i.selectionStartLeftoverVisibleColumns,n,i.leftoverVisibleColumns)}if(i){const o=t.coordinatesConverter.validateViewRange(i.selectionStart,e.selectionStart),n=t.coordinatesConverter.validateViewPosition(i.position,e.position);i=new l(o,e.selectionStartKind,e.selectionStartLeftoverVisibleColumns,n,e.leftoverVisibleColumns)}else{const o=t.coordinatesConverter.convertModelPositionToViewPosition(new a(e.selectionStart.startLineNumber,e.selectionStart.startColumn)),n=t.coordinatesConverter.convertModelPositionToViewPosition(new a(e.selectionStart.endLineNumber,e.selectionStart.endColumn)),s=new c(o.lineNumber,o.column,n.lineNumber,n.column),r=t.coordinatesConverter.convertModelPositionToViewPosition(e.position);i=new l(s,e.selectionStartKind,e.selectionStartLeftoverVisibleColumns,r,e.leftoverVisibleColumns)}this.modelState=e,this.viewState=i,this._updateTrackedRange(t)}}export{p as Cursor};
