import{Position as C}from"../core/position.js";import{Range as L}from"../core/range.js";import{SelectionStartKind as I,SingleCursorState as N}from"../cursorCommon.js";class M{static columnSelect(o,i,e,n,l,u){const c=Math.abs(l-e)+1,m=e>l,a=n>u,V=n<u,w=[];for(let r=0;r<c;r++){const t=e+(m?-r:r),s=o.columnFromVisibleColumn(i,t,n),b=o.columnFromVisibleColumn(i,t,u),S=o.visibleColumnFromColumn(i,new C(t,s)),f=o.visibleColumnFromColumn(i,new C(t,b));V&&(S>u||f<n)||a&&(f>n||S<u)||w.push(new N(new L(t,s,t,s),I.Simple,0,new C(t,b),0))}if(w.length===0)for(let r=0;r<c;r++){const t=e+(m?-r:r),s=i.getLineMaxColumn(t);w.push(new N(new L(t,s,t,s),I.Simple,0,new C(t,s),0))}return{viewStates:w,reversed:m,fromLineNumber:e,fromVisualColumn:n,toLineNumber:l,toVisualColumn:u}}static columnSelectLeft(o,i,e){let n=e.toViewVisualColumn;return n>0&&n--,M.columnSelect(o,i,e.fromViewLineNumber,e.fromViewVisualColumn,e.toViewLineNumber,n)}static columnSelectRight(o,i,e){let n=0;const l=Math.min(e.fromViewLineNumber,e.toViewLineNumber),u=Math.max(e.fromViewLineNumber,e.toViewLineNumber);for(let m=l;m<=u;m++){const a=i.getLineMaxColumn(m),V=o.visibleColumnFromColumn(i,new C(m,a));n=Math.max(n,V)}let c=e.toViewVisualColumn;return c<n&&c++,this.columnSelect(o,i,e.fromViewLineNumber,e.fromViewVisualColumn,e.toViewLineNumber,c)}static columnSelectUp(o,i,e,n){const l=n?o.pageSize:1,u=Math.max(1,e.toViewLineNumber-l);return this.columnSelect(o,i,e.fromViewLineNumber,e.fromViewVisualColumn,u,e.toViewVisualColumn)}static columnSelectDown(o,i,e,n){const l=n?o.pageSize:1,u=Math.min(i.getLineCount(),e.toViewLineNumber+l);return this.columnSelect(o,i,e.fromViewLineNumber,e.fromViewVisualColumn,u,e.toViewVisualColumn)}}export{M as ColumnSelection};
