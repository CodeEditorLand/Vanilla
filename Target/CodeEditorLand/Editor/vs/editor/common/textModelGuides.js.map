{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/textModelGuides.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition } from './core/position.js';\n\nexport interface IGuidesTextModelPart {\n\t/**\n\t * @internal\n\t */\n\tgetActiveIndentGuide(lineNumber: number, minLineNumber: number, maxLineNumber: number): IActiveIndentGuideInfo;\n\n\t/**\n\t * @internal\n\t */\n\tgetLinesIndentGuides(startLineNumber: number, endLineNumber: number): number[];\n\n\t/**\n\t * Requests the the indent guides for the given range of lines.\n\t * `result[i]` will contain the indent guides of the `startLineNumber + i`th line.\n\t * @internal\n\t */\n\tgetLinesBracketGuides(startLineNumber: number, endLineNumber: number, activePosition: IPosition | null, options: BracketGuideOptions): IndentGuide[][];\n}\n\nexport interface IActiveIndentGuideInfo {\n\tstartLineNumber: number;\n\tendLineNumber: number;\n\tindent: number;\n}\n\nexport enum HorizontalGuidesState {\n\tDisabled,\n\tEnabledForActive,\n\tEnabled\n}\n\nexport interface BracketGuideOptions {\n\tincludeInactive: boolean;\n\thorizontalGuides: HorizontalGuidesState;\n\thighlightActive: boolean;\n}\n\nexport class IndentGuide {\n\tconstructor(\n\t\tpublic readonly visibleColumn: number | -1,\n\t\tpublic readonly column: number | -1,\n\t\tpublic readonly className: string,\n\t\t/**\n\t\t * If set, this indent guide is a horizontal guide (no vertical part).\n\t\t * It starts at visibleColumn and continues until endColumn.\n\t\t*/\n\t\tpublic readonly horizontalLine: IndentGuideHorizontalLine | null,\n\t\t/**\n\t\t * If set (!= -1), only show this guide for wrapped lines that don't contain this model column, but are after it.\n\t\t*/\n\t\tpublic readonly forWrappedLinesAfterColumn: number | -1,\n\t\tpublic readonly forWrappedLinesBeforeOrAtColumn: number | -1\n\t) {\n\t\tif ((visibleColumn !== -1) === (column !== -1)) {\n\t\t\tthrow new Error();\n\t\t}\n\t}\n}\n\nexport class IndentGuideHorizontalLine {\n\tconstructor(\n\t\tpublic readonly top: boolean,\n\t\tpublic readonly endColumn: number,\n\t) { }\n}\n"],
  "mappings": ";;AAKA,SAAS,iBAAiB;AA2BnB,IAAK,wBAAL,kBAAKA,2BAAL;AACN,EAAAA,8CAAA;AACA,EAAAA,8CAAA;AACA,EAAAA,8CAAA;AAHW,SAAAA;AAAA,GAAA;AAYL,MAAM,YAAY;AAAA,EACxB,YACiB,eACA,QACA,WAKA,gBAIA,4BACA,iCACf;AAbe;AACA;AACA;AAKA;AAIA;AACA;AAEhB,QAAK,kBAAkB,QAAS,WAAW,KAAK;AAC/C,YAAM,IAAI,MAAM;AAAA,IACjB;AAAA,EACD;AAAA,EA/DD,OA4CyB;AAAA;AAAA;AAoBzB;AAEO,MAAM,0BAA0B;AAAA,EACtC,YACiB,KACA,WACf;AAFe;AACA;AAAA,EACb;AAAA,EAtEL,OAkEuC;AAAA;AAAA;AAKvC;",
  "names": ["HorizontalGuidesState"]
}
