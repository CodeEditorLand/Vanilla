{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/viewModelEventDispatcher.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../base/common/event.js\";\nimport { Disposable } from \"../../base/common/lifecycle.js\";\nimport type { Selection } from \"./core/selection.js\";\nimport type { CursorChangeReason } from \"./cursorEvents.js\";\nimport type { IContentSizeChangedEvent } from \"./editorCommon.js\";\nimport type {\n\tIModelContentChangedEvent,\n\tIModelDecorationsChangedEvent,\n\tIModelLanguageChangedEvent,\n\tIModelLanguageConfigurationChangedEvent,\n\tIModelOptionsChangedEvent,\n\tIModelTokensChangedEvent,\n} from \"./textModelEvents.js\";\nimport type { ViewEventHandler } from \"./viewEventHandler.js\";\nimport type { ViewEvent } from \"./viewEvents.js\";\n\nexport class ViewModelEventDispatcher extends Disposable {\n\tprivate readonly _onEvent = this._register(\n\t\tnew Emitter<OutgoingViewModelEvent>(),\n\t);\n\tpublic readonly onEvent = this._onEvent.event;\n\n\tprivate readonly _eventHandlers: ViewEventHandler[];\n\tprivate _viewEventQueue: ViewEvent[] | null;\n\tprivate _isConsumingViewEventQueue: boolean;\n\tprivate _collector: ViewModelEventsCollector | null;\n\tprivate _collectorCnt: number;\n\tprivate _outgoingEvents: OutgoingViewModelEvent[];\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._eventHandlers = [];\n\t\tthis._viewEventQueue = null;\n\t\tthis._isConsumingViewEventQueue = false;\n\t\tthis._collector = null;\n\t\tthis._collectorCnt = 0;\n\t\tthis._outgoingEvents = [];\n\t}\n\n\tpublic emitOutgoingEvent(e: OutgoingViewModelEvent): void {\n\t\tthis._addOutgoingEvent(e);\n\t\tthis._emitOutgoingEvents();\n\t}\n\n\tprivate _addOutgoingEvent(e: OutgoingViewModelEvent): void {\n\t\tfor (let i = 0, len = this._outgoingEvents.length; i < len; i++) {\n\t\t\tconst mergeResult =\n\t\t\t\tthis._outgoingEvents[i].kind === e.kind\n\t\t\t\t\t? this._outgoingEvents[i].attemptToMerge(e)\n\t\t\t\t\t: null;\n\t\t\tif (mergeResult) {\n\t\t\t\tthis._outgoingEvents[i] = mergeResult;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// not merged\n\t\tthis._outgoingEvents.push(e);\n\t}\n\n\tprivate _emitOutgoingEvents(): void {\n\t\twhile (this._outgoingEvents.length > 0) {\n\t\t\tif (this._collector || this._isConsumingViewEventQueue) {\n\t\t\t\t// right now collecting or emitting view events, so let's postpone emitting\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst event = this._outgoingEvents.shift()!;\n\t\t\tif (event.isNoOp()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._onEvent.fire(event);\n\t\t}\n\t}\n\n\tpublic addViewEventHandler(eventHandler: ViewEventHandler): void {\n\t\tfor (let i = 0, len = this._eventHandlers.length; i < len; i++) {\n\t\t\tif (this._eventHandlers[i] === eventHandler) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"Detected duplicate listener in ViewEventDispatcher\",\n\t\t\t\t\teventHandler,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis._eventHandlers.push(eventHandler);\n\t}\n\n\tpublic removeViewEventHandler(eventHandler: ViewEventHandler): void {\n\t\tfor (let i = 0; i < this._eventHandlers.length; i++) {\n\t\t\tif (this._eventHandlers[i] === eventHandler) {\n\t\t\t\tthis._eventHandlers.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic beginEmitViewEvents(): ViewModelEventsCollector {\n\t\tthis._collectorCnt++;\n\t\tif (this._collectorCnt === 1) {\n\t\t\tthis._collector = new ViewModelEventsCollector();\n\t\t}\n\t\treturn this._collector!;\n\t}\n\n\tpublic endEmitViewEvents(): void {\n\t\tthis._collectorCnt--;\n\t\tif (this._collectorCnt === 0) {\n\t\t\tconst outgoingEvents = this._collector!.outgoingEvents;\n\t\t\tconst viewEvents = this._collector!.viewEvents;\n\t\t\tthis._collector = null;\n\n\t\t\tfor (const outgoingEvent of outgoingEvents) {\n\t\t\t\tthis._addOutgoingEvent(outgoingEvent);\n\t\t\t}\n\n\t\t\tif (viewEvents.length > 0) {\n\t\t\t\tthis._emitMany(viewEvents);\n\t\t\t}\n\t\t}\n\t\tthis._emitOutgoingEvents();\n\t}\n\n\tpublic emitSingleViewEvent(event: ViewEvent): void {\n\t\ttry {\n\t\t\tconst eventsCollector = this.beginEmitViewEvents();\n\t\t\teventsCollector.emitViewEvent(event);\n\t\t} finally {\n\t\t\tthis.endEmitViewEvents();\n\t\t}\n\t}\n\n\tprivate _emitMany(events: ViewEvent[]): void {\n\t\tif (this._viewEventQueue) {\n\t\t\tthis._viewEventQueue = this._viewEventQueue.concat(events);\n\t\t} else {\n\t\t\tthis._viewEventQueue = events;\n\t\t}\n\n\t\tif (!this._isConsumingViewEventQueue) {\n\t\t\tthis._consumeViewEventQueue();\n\t\t}\n\t}\n\n\tprivate _consumeViewEventQueue(): void {\n\t\ttry {\n\t\t\tthis._isConsumingViewEventQueue = true;\n\t\t\tthis._doConsumeQueue();\n\t\t} finally {\n\t\t\tthis._isConsumingViewEventQueue = false;\n\t\t}\n\t}\n\n\tprivate _doConsumeQueue(): void {\n\t\twhile (this._viewEventQueue) {\n\t\t\t// Empty event queue, as events might come in while sending these off\n\t\t\tconst events = this._viewEventQueue;\n\t\t\tthis._viewEventQueue = null;\n\n\t\t\t// Use a clone of the event handlers list, as they might remove themselves\n\t\t\tconst eventHandlers = this._eventHandlers.slice(0);\n\t\t\tfor (const eventHandler of eventHandlers) {\n\t\t\t\teventHandler.handleEvents(events);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class ViewModelEventsCollector {\n\tpublic readonly viewEvents: ViewEvent[];\n\tpublic readonly outgoingEvents: OutgoingViewModelEvent[];\n\n\tconstructor() {\n\t\tthis.viewEvents = [];\n\t\tthis.outgoingEvents = [];\n\t}\n\n\tpublic emitViewEvent(event: ViewEvent) {\n\t\tthis.viewEvents.push(event);\n\t}\n\n\tpublic emitOutgoingEvent(e: OutgoingViewModelEvent): void {\n\t\tthis.outgoingEvents.push(e);\n\t}\n}\n\nexport type OutgoingViewModelEvent =\n\t| ContentSizeChangedEvent\n\t| FocusChangedEvent\n\t| ScrollChangedEvent\n\t| ViewZonesChangedEvent\n\t| HiddenAreasChangedEvent\n\t| ReadOnlyEditAttemptEvent\n\t| CursorStateChangedEvent\n\t| ModelDecorationsChangedEvent\n\t| ModelLanguageChangedEvent\n\t| ModelLanguageConfigurationChangedEvent\n\t| ModelContentChangedEvent\n\t| ModelOptionsChangedEvent\n\t| ModelTokensChangedEvent;\n\nexport enum OutgoingViewModelEventKind {\n\tContentSizeChanged = 0,\n\tFocusChanged = 1,\n\tScrollChanged = 2,\n\tViewZonesChanged = 3,\n\tHiddenAreasChanged = 4,\n\tReadOnlyEditAttempt = 5,\n\tCursorStateChanged = 6,\n\tModelDecorationsChanged = 7,\n\tModelLanguageChanged = 8,\n\tModelLanguageConfigurationChanged = 9,\n\tModelContentChanged = 10,\n\tModelOptionsChanged = 11,\n\tModelTokensChanged = 12,\n}\n\nexport class ContentSizeChangedEvent implements IContentSizeChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.ContentSizeChanged;\n\n\tprivate readonly _oldContentWidth: number;\n\tprivate readonly _oldContentHeight: number;\n\n\treadonly contentWidth: number;\n\treadonly contentHeight: number;\n\treadonly contentWidthChanged: boolean;\n\treadonly contentHeightChanged: boolean;\n\n\tconstructor(\n\t\toldContentWidth: number,\n\t\toldContentHeight: number,\n\t\tcontentWidth: number,\n\t\tcontentHeight: number,\n\t) {\n\t\tthis._oldContentWidth = oldContentWidth;\n\t\tthis._oldContentHeight = oldContentHeight;\n\t\tthis.contentWidth = contentWidth;\n\t\tthis.contentHeight = contentHeight;\n\t\tthis.contentWidthChanged = this._oldContentWidth !== this.contentWidth;\n\t\tthis.contentHeightChanged =\n\t\t\tthis._oldContentHeight !== this.contentHeight;\n\t}\n\n\tpublic isNoOp(): boolean {\n\t\treturn !this.contentWidthChanged && !this.contentHeightChanged;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\tif (other.kind !== this.kind) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new ContentSizeChangedEvent(\n\t\t\tthis._oldContentWidth,\n\t\t\tthis._oldContentHeight,\n\t\t\tother.contentWidth,\n\t\t\tother.contentHeight,\n\t\t);\n\t}\n}\n\nexport class FocusChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.FocusChanged;\n\n\treadonly oldHasFocus: boolean;\n\treadonly hasFocus: boolean;\n\n\tconstructor(oldHasFocus: boolean, hasFocus: boolean) {\n\t\tthis.oldHasFocus = oldHasFocus;\n\t\tthis.hasFocus = hasFocus;\n\t}\n\n\tpublic isNoOp(): boolean {\n\t\treturn this.oldHasFocus === this.hasFocus;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\tif (other.kind !== this.kind) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new FocusChangedEvent(this.oldHasFocus, other.hasFocus);\n\t}\n}\n\nexport class ScrollChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.ScrollChanged;\n\n\tprivate readonly _oldScrollWidth: number;\n\tprivate readonly _oldScrollLeft: number;\n\tprivate readonly _oldScrollHeight: number;\n\tprivate readonly _oldScrollTop: number;\n\n\tpublic readonly scrollWidth: number;\n\tpublic readonly scrollLeft: number;\n\tpublic readonly scrollHeight: number;\n\tpublic readonly scrollTop: number;\n\n\tpublic readonly scrollWidthChanged: boolean;\n\tpublic readonly scrollLeftChanged: boolean;\n\tpublic readonly scrollHeightChanged: boolean;\n\tpublic readonly scrollTopChanged: boolean;\n\n\tconstructor(\n\t\toldScrollWidth: number,\n\t\toldScrollLeft: number,\n\t\toldScrollHeight: number,\n\t\toldScrollTop: number,\n\t\tscrollWidth: number,\n\t\tscrollLeft: number,\n\t\tscrollHeight: number,\n\t\tscrollTop: number,\n\t) {\n\t\tthis._oldScrollWidth = oldScrollWidth;\n\t\tthis._oldScrollLeft = oldScrollLeft;\n\t\tthis._oldScrollHeight = oldScrollHeight;\n\t\tthis._oldScrollTop = oldScrollTop;\n\n\t\tthis.scrollWidth = scrollWidth;\n\t\tthis.scrollLeft = scrollLeft;\n\t\tthis.scrollHeight = scrollHeight;\n\t\tthis.scrollTop = scrollTop;\n\n\t\tthis.scrollWidthChanged = this._oldScrollWidth !== this.scrollWidth;\n\t\tthis.scrollLeftChanged = this._oldScrollLeft !== this.scrollLeft;\n\t\tthis.scrollHeightChanged = this._oldScrollHeight !== this.scrollHeight;\n\t\tthis.scrollTopChanged = this._oldScrollTop !== this.scrollTop;\n\t}\n\n\tpublic isNoOp(): boolean {\n\t\treturn (\n\t\t\t!this.scrollWidthChanged &&\n\t\t\t!this.scrollLeftChanged &&\n\t\t\t!this.scrollHeightChanged &&\n\t\t\t!this.scrollTopChanged\n\t\t);\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\tif (other.kind !== this.kind) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new ScrollChangedEvent(\n\t\t\tthis._oldScrollWidth,\n\t\t\tthis._oldScrollLeft,\n\t\t\tthis._oldScrollHeight,\n\t\t\tthis._oldScrollTop,\n\t\t\tother.scrollWidth,\n\t\t\tother.scrollLeft,\n\t\t\tother.scrollHeight,\n\t\t\tother.scrollTop,\n\t\t);\n\t}\n}\n\nexport class ViewZonesChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.ViewZonesChanged;\n\n\tconstructor() {}\n\n\tpublic isNoOp(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\tif (other.kind !== this.kind) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport class HiddenAreasChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.HiddenAreasChanged;\n\n\tconstructor() {}\n\n\tpublic isNoOp(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\tif (other.kind !== this.kind) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport class CursorStateChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.CursorStateChanged;\n\n\tpublic readonly oldSelections: Selection[] | null;\n\tpublic readonly selections: Selection[];\n\tpublic readonly oldModelVersionId: number;\n\tpublic readonly modelVersionId: number;\n\tpublic readonly source: string;\n\tpublic readonly reason: CursorChangeReason;\n\tpublic readonly reachedMaxCursorCount: boolean;\n\n\tconstructor(\n\t\toldSelections: Selection[] | null,\n\t\tselections: Selection[],\n\t\toldModelVersionId: number,\n\t\tmodelVersionId: number,\n\t\tsource: string,\n\t\treason: CursorChangeReason,\n\t\treachedMaxCursorCount: boolean,\n\t) {\n\t\tthis.oldSelections = oldSelections;\n\t\tthis.selections = selections;\n\t\tthis.oldModelVersionId = oldModelVersionId;\n\t\tthis.modelVersionId = modelVersionId;\n\t\tthis.source = source;\n\t\tthis.reason = reason;\n\t\tthis.reachedMaxCursorCount = reachedMaxCursorCount;\n\t}\n\n\tprivate static _selectionsAreEqual(\n\t\ta: Selection[] | null,\n\t\tb: Selection[] | null,\n\t): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\tconst aLen = a.length;\n\t\tconst bLen = b.length;\n\t\tif (aLen !== bLen) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < aLen; i++) {\n\t\t\tif (!a[i].equalsSelection(b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic isNoOp(): boolean {\n\t\treturn (\n\t\t\tCursorStateChangedEvent._selectionsAreEqual(\n\t\t\t\tthis.oldSelections,\n\t\t\t\tthis.selections,\n\t\t\t) && this.oldModelVersionId === this.modelVersionId\n\t\t);\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\tif (other.kind !== this.kind) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new CursorStateChangedEvent(\n\t\t\tthis.oldSelections,\n\t\t\tother.selections,\n\t\t\tthis.oldModelVersionId,\n\t\t\tother.modelVersionId,\n\t\t\tother.source,\n\t\t\tother.reason,\n\t\t\tthis.reachedMaxCursorCount || other.reachedMaxCursorCount,\n\t\t);\n\t}\n}\n\nexport class ReadOnlyEditAttemptEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.ReadOnlyEditAttempt;\n\n\tconstructor() {}\n\n\tpublic isNoOp(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\tif (other.kind !== this.kind) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport class ModelDecorationsChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.ModelDecorationsChanged;\n\n\tconstructor(public readonly event: IModelDecorationsChangedEvent) {}\n\n\tpublic isNoOp(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\treturn null;\n\t}\n}\n\nexport class ModelLanguageChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.ModelLanguageChanged;\n\n\tconstructor(public readonly event: IModelLanguageChangedEvent) {}\n\n\tpublic isNoOp(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\treturn null;\n\t}\n}\n\nexport class ModelLanguageConfigurationChangedEvent {\n\tpublic readonly kind =\n\t\tOutgoingViewModelEventKind.ModelLanguageConfigurationChanged;\n\n\tconstructor(\n\t\tpublic readonly event: IModelLanguageConfigurationChangedEvent,\n\t) {}\n\n\tpublic isNoOp(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\treturn null;\n\t}\n}\n\nexport class ModelContentChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.ModelContentChanged;\n\n\tconstructor(public readonly event: IModelContentChangedEvent) {}\n\n\tpublic isNoOp(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\treturn null;\n\t}\n}\n\nexport class ModelOptionsChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.ModelOptionsChanged;\n\n\tconstructor(public readonly event: IModelOptionsChangedEvent) {}\n\n\tpublic isNoOp(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\treturn null;\n\t}\n}\n\nexport class ModelTokensChangedEvent {\n\tpublic readonly kind = OutgoingViewModelEventKind.ModelTokensChanged;\n\n\tconstructor(public readonly event: IModelTokensChangedEvent) {}\n\n\tpublic isNoOp(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic attemptToMerge(\n\t\tother: OutgoingViewModelEvent,\n\t): OutgoingViewModelEvent | null {\n\t\treturn null;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["OutgoingViewModelEventKind"]
}
