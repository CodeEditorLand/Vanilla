{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/viewLayout/viewLinesViewportData.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Range } from \"../core/range.js\";\nimport type { Selection } from \"../core/selection.js\";\nimport type {\n\tIPartialViewLinesViewportData,\n\tIViewModel,\n\tIViewWhitespaceViewportData,\n\tViewLineRenderingData,\n\tViewModelDecoration,\n} from \"../viewModel.js\";\n\n/**\n * Contains all data needed to render at a specific viewport.\n */\nexport class ViewportData {\n\tpublic readonly selections: Selection[];\n\n\t/**\n\t * The line number at which to start rendering (inclusive).\n\t */\n\tpublic readonly startLineNumber: number;\n\n\t/**\n\t * The line number at which to end rendering (inclusive).\n\t */\n\tpublic readonly endLineNumber: number;\n\n\t/**\n\t * relativeVerticalOffset[i] is the `top` position for line at `i` + `startLineNumber`.\n\t */\n\tpublic readonly relativeVerticalOffset: number[];\n\n\t/**\n\t * The viewport as a range (startLineNumber,1) -> (endLineNumber,maxColumn(endLineNumber)).\n\t */\n\tpublic readonly visibleRange: Range;\n\n\t/**\n\t * Value to be substracted from `scrollTop` (in order to vertical offset numbers < 1MM)\n\t */\n\tpublic readonly bigNumbersDelta: number;\n\n\t/**\n\t * Positioning information about gaps whitespace.\n\t */\n\tpublic readonly whitespaceViewportData: IViewWhitespaceViewportData[];\n\n\tprivate readonly _model: IViewModel;\n\n\tpublic readonly lineHeight: number;\n\n\tconstructor(\n\t\tselections: Selection[],\n\t\tpartialData: IPartialViewLinesViewportData,\n\t\twhitespaceViewportData: IViewWhitespaceViewportData[],\n\t\tmodel: IViewModel,\n\t) {\n\t\tthis.selections = selections;\n\t\tthis.startLineNumber = partialData.startLineNumber | 0;\n\t\tthis.endLineNumber = partialData.endLineNumber | 0;\n\t\tthis.relativeVerticalOffset = partialData.relativeVerticalOffset;\n\t\tthis.bigNumbersDelta = partialData.bigNumbersDelta | 0;\n\t\tthis.lineHeight = partialData.lineHeight | 0;\n\t\tthis.whitespaceViewportData = whitespaceViewportData;\n\n\t\tthis._model = model;\n\n\t\tthis.visibleRange = new Range(\n\t\t\tpartialData.startLineNumber,\n\t\t\tthis._model.getLineMinColumn(partialData.startLineNumber),\n\t\t\tpartialData.endLineNumber,\n\t\t\tthis._model.getLineMaxColumn(partialData.endLineNumber),\n\t\t);\n\t}\n\n\tpublic getViewLineRenderingData(lineNumber: number): ViewLineRenderingData {\n\t\treturn this._model.getViewportViewLineRenderingData(\n\t\t\tthis.visibleRange,\n\t\t\tlineNumber,\n\t\t);\n\t}\n\n\tpublic getDecorationsInViewport(): ViewModelDecoration[] {\n\t\treturn this._model.getDecorationsInViewport(this.visibleRange);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AAaf,MAAM,aAAa;AAAA,EAlB1B,OAkB0B;AAAA;AAAA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EAEC;AAAA,EAED;AAAA,EAEhB,YACC,YACA,aACA,wBACA,OACC;AACD,SAAK,aAAa;AAClB,SAAK,kBAAkB,YAAY,kBAAkB;AACrD,SAAK,gBAAgB,YAAY,gBAAgB;AACjD,SAAK,yBAAyB,YAAY;AAC1C,SAAK,kBAAkB,YAAY,kBAAkB;AACrD,SAAK,aAAa,YAAY,aAAa;AAC3C,SAAK,yBAAyB;AAE9B,SAAK,SAAS;AAEd,SAAK,eAAe,IAAI;AAAA,MACvB,YAAY;AAAA,MACZ,KAAK,OAAO,iBAAiB,YAAY,eAAe;AAAA,MACxD,YAAY;AAAA,MACZ,KAAK,OAAO,iBAAiB,YAAY,aAAa;AAAA,IACvD;AAAA,EACD;AAAA,EAEO,yBAAyB,YAA2C;AAC1E,WAAO,KAAK,OAAO;AAAA,MAClB,KAAK;AAAA,MACL;AAAA,IACD;AAAA,EACD;AAAA,EAEO,2BAAkD;AACxD,WAAO,KAAK,OAAO,yBAAyB,KAAK,YAAY;AAAA,EAC9D;AACD;",
  "names": []
}
