{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/services/markerDecorationsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMarkerService, IMarker, MarkerSeverity, MarkerTag } from '../../../platform/markers/common/markers.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IModelDeltaDecoration, ITextModel, IModelDecorationOptions, TrackedRangeStickiness, OverviewRulerLane, IModelDecoration, MinimapPosition, IModelDecorationMinimapOptions } from '../model.js';\nimport { ClassName } from '../model/intervalTree.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { ThemeColor } from '../../../base/common/themables.js';\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../core/editorColorRegistry.js';\nimport { IModelService } from './model.js';\nimport { Range } from '../core/range.js';\nimport { IMarkerDecorationsService } from './markerDecorations.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { minimapInfo, minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\nimport { BidirectionalMap, ResourceMap } from '../../../base/common/map.js';\nimport { diffSets } from '../../../base/common/collections.js';\n\nexport class MarkerDecorationsService extends Disposable implements IMarkerDecorationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeMarker = this._register(new Emitter<ITextModel>());\n\treadonly onDidChangeMarker: Event<ITextModel> = this._onDidChangeMarker.event;\n\n\tprivate readonly _markerDecorations = new ResourceMap<MarkerDecorations>();\n\n\tconstructor(\n\t\t@IModelService modelService: IModelService,\n\t\t@IMarkerService private readonly _markerService: IMarkerService\n\t) {\n\t\tsuper();\n\t\tmodelService.getModels().forEach(model => this._onModelAdded(model));\n\t\tthis._register(modelService.onModelAdded(this._onModelAdded, this));\n\t\tthis._register(modelService.onModelRemoved(this._onModelRemoved, this));\n\t\tthis._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._markerDecorations.forEach(value => value.dispose());\n\t\tthis._markerDecorations.clear();\n\t}\n\n\tgetMarker(uri: URI, decoration: IModelDecoration): IMarker | null {\n\t\tconst markerDecorations = this._markerDecorations.get(uri);\n\t\treturn markerDecorations ? (markerDecorations.getMarker(decoration) || null) : null;\n\t}\n\n\tgetLiveMarkers(uri: URI): [Range, IMarker][] {\n\t\tconst markerDecorations = this._markerDecorations.get(uri);\n\t\treturn markerDecorations ? markerDecorations.getMarkers() : [];\n\t}\n\n\tprivate _handleMarkerChange(changedResources: readonly URI[]): void {\n\t\tchangedResources.forEach((resource) => {\n\t\t\tconst markerDecorations = this._markerDecorations.get(resource);\n\t\t\tif (markerDecorations) {\n\t\t\t\tthis._updateDecorations(markerDecorations);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onModelAdded(model: ITextModel): void {\n\t\tconst markerDecorations = new MarkerDecorations(model);\n\t\tthis._markerDecorations.set(model.uri, markerDecorations);\n\t\tthis._updateDecorations(markerDecorations);\n\t}\n\n\tprivate _onModelRemoved(model: ITextModel): void {\n\t\tconst markerDecorations = this._markerDecorations.get(model.uri);\n\t\tif (markerDecorations) {\n\t\t\tmarkerDecorations.dispose();\n\t\t\tthis._markerDecorations.delete(model.uri);\n\t\t}\n\n\t\t// clean up markers for internal, transient models\n\t\tif (model.uri.scheme === Schemas.inMemory\n\t\t\t|| model.uri.scheme === Schemas.internal\n\t\t\t|| model.uri.scheme === Schemas.vscode) {\n\t\t\tthis._markerService?.read({ resource: model.uri }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\n\t\t}\n\t}\n\n\tprivate _updateDecorations(markerDecorations: MarkerDecorations): void {\n\t\t// Limit to the first 500 errors/warnings\n\t\tconst markers = this._markerService.read({ resource: markerDecorations.model.uri, take: 500 });\n\t\tif (markerDecorations.update(markers)) {\n\t\t\tthis._onDidChangeMarker.fire(markerDecorations.model);\n\t\t}\n\t}\n}\n\nclass MarkerDecorations extends Disposable {\n\n\tprivate readonly _map = new BidirectionalMap<IMarker, /*decoration id*/string>();\n\n\tconstructor(\n\t\treadonly model: ITextModel\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.model.deltaDecorations([...this._map.values()], []);\n\t\t\tthis._map.clear();\n\t\t}));\n\t}\n\n\tpublic update(markers: IMarker[]): boolean {\n\n\t\t// We use the fact that marker instances are not recreated when different owners\n\t\t// update. So we can compare references to find out what changed since the last update.\n\n\t\tconst { added, removed } = diffSets(new Set(this._map.keys()), new Set(markers));\n\n\t\tif (added.length === 0 && removed.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst oldIds: string[] = removed.map(marker => this._map.get(marker)!);\n\t\tconst newDecorations: IModelDeltaDecoration[] = added.map(marker => {\n\t\t\treturn {\n\t\t\t\trange: this._createDecorationRange(this.model, marker),\n\t\t\t\toptions: this._createDecorationOption(marker)\n\t\t\t};\n\t\t});\n\n\t\tconst ids = this.model.deltaDecorations(oldIds, newDecorations);\n\t\tfor (const removedMarker of removed) {\n\t\t\tthis._map.delete(removedMarker);\n\t\t}\n\t\tfor (let index = 0; index < ids.length; index++) {\n\t\t\tthis._map.set(added[index], ids[index]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tgetMarker(decoration: IModelDecoration): IMarker | undefined {\n\t\treturn this._map.getKey(decoration.id);\n\t}\n\n\tgetMarkers(): [Range, IMarker][] {\n\t\tconst res: [Range, IMarker][] = [];\n\t\tthis._map.forEach((id, marker) => {\n\t\t\tconst range = this.model.getDecorationRange(id);\n\t\t\tif (range) {\n\t\t\t\tres.push([range, marker]);\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n\n\tprivate _createDecorationRange(model: ITextModel, rawMarker: IMarker): Range {\n\n\t\tlet ret = Range.lift(rawMarker);\n\n\t\tif (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, MarkerTag.Unnecessary) && !this._hasMarkerTag(rawMarker, MarkerTag.Deprecated)) {\n\t\t\t// * never render hints on multiple lines\n\t\t\t// * make enough space for three dots\n\t\t\tret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\n\t\t}\n\n\t\tret = model.validateRange(ret);\n\n\t\tif (ret.isEmpty()) {\n\t\t\tconst maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) ||\n\t\t\t\tmodel.getLineMaxColumn(ret.startLineNumber);\n\n\t\t\tif (maxColumn === 1 || ret.endColumn >= maxColumn) {\n\t\t\t\t// empty line or behind eol\n\t\t\t\t// keep the range as is, it will be rendered 1ch wide\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tconst word = model.getWordAtPosition(ret.getStartPosition());\n\t\t\tif (word) {\n\t\t\t\tret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\n\t\t\t}\n\t\t} else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n\t\t\tconst minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n\t\t\tif (minColumn < ret.endColumn) {\n\t\t\t\tret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\n\t\t\t\trawMarker.startColumn = minColumn;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tprivate _createDecorationOption(marker: IMarker): IModelDecorationOptions {\n\n\t\tlet className: string | undefined;\n\t\tlet color: ThemeColor | undefined = undefined;\n\t\tlet zIndex: number;\n\t\tlet inlineClassName: string | undefined = undefined;\n\t\tlet minimap: IModelDecorationMinimapOptions | undefined;\n\n\t\tswitch (marker.severity) {\n\t\t\tcase MarkerSeverity.Hint:\n\t\t\t\tif (this._hasMarkerTag(marker, MarkerTag.Deprecated)) {\n\t\t\t\t\tclassName = undefined;\n\t\t\t\t} else if (this._hasMarkerTag(marker, MarkerTag.Unnecessary)) {\n\t\t\t\t\tclassName = ClassName.EditorUnnecessaryDecoration;\n\t\t\t\t} else {\n\t\t\t\t\tclassName = ClassName.EditorHintDecoration;\n\t\t\t\t}\n\t\t\t\tzIndex = 0;\n\t\t\t\tbreak;\n\t\t\tcase MarkerSeverity.Info:\n\t\t\t\tclassName = ClassName.EditorInfoDecoration;\n\t\t\t\tcolor = themeColorFromId(overviewRulerInfo);\n\t\t\t\tzIndex = 10;\n\t\t\t\tminimap = {\n\t\t\t\t\tcolor: themeColorFromId(minimapInfo),\n\t\t\t\t\tposition: MinimapPosition.Inline\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase MarkerSeverity.Warning:\n\t\t\t\tclassName = ClassName.EditorWarningDecoration;\n\t\t\t\tcolor = themeColorFromId(overviewRulerWarning);\n\t\t\t\tzIndex = 20;\n\t\t\t\tminimap = {\n\t\t\t\t\tcolor: themeColorFromId(minimapWarning),\n\t\t\t\t\tposition: MinimapPosition.Inline\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase MarkerSeverity.Error:\n\t\t\tdefault:\n\t\t\t\tclassName = ClassName.EditorErrorDecoration;\n\t\t\t\tcolor = themeColorFromId(overviewRulerError);\n\t\t\t\tzIndex = 30;\n\t\t\t\tminimap = {\n\t\t\t\t\tcolor: themeColorFromId(minimapError),\n\t\t\t\t\tposition: MinimapPosition.Inline\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (marker.tags) {\n\t\t\tif (marker.tags.indexOf(MarkerTag.Unnecessary) !== -1) {\n\t\t\t\tinlineClassName = ClassName.EditorUnnecessaryInlineDecoration;\n\t\t\t}\n\t\t\tif (marker.tags.indexOf(MarkerTag.Deprecated) !== -1) {\n\t\t\t\tinlineClassName = ClassName.EditorDeprecatedInlineDecoration;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdescription: 'marker-decoration',\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tclassName,\n\t\t\tshowIfCollapsed: true,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor,\n\t\t\t\tposition: OverviewRulerLane.Right\n\t\t\t},\n\t\t\tminimap,\n\t\t\tzIndex,\n\t\t\tinlineClassName,\n\t\t};\n\t}\n\n\tprivate _hasMarkerTag(marker: IMarker, tag: MarkerTag): boolean {\n\t\tif (marker.tags) {\n\t\t\treturn marker.tags.indexOf(tag) >= 0;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
