{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/services/semanticTokensStylingService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../platform/instantiation/common/extensions.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport { IThemeService } from \"../../../platform/theme/common/themeService.js\";\nimport { ILanguageService } from \"../languages/language.js\";\nimport type { DocumentTokensProvider } from \"./model.js\";\nimport { SemanticTokensProviderStyling } from \"./semanticTokensProviderStyling.js\";\nimport { ISemanticTokensStylingService } from \"./semanticTokensStyling.js\";\n\nexport class SemanticTokensStylingService\n\textends Disposable\n\timplements ISemanticTokensStylingService\n{\n\tpublic _serviceBrand: undefined;\n\n\tprivate _caches: WeakMap<\n\t\tDocumentTokensProvider,\n\t\tSemanticTokensProviderStyling\n\t>;\n\n\tconstructor(\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._caches = new WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>();\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\tthis._caches = new WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>();\n\t\t}));\n\t}\n\n\tpublic getStyling(\n\t\tprovider: DocumentTokensProvider,\n\t): SemanticTokensProviderStyling {\n\t\tif (!this._caches.has(provider)) {\n\t\t\tthis._caches.set(\n\t\t\t\tprovider,\n\t\t\t\tnew SemanticTokensProviderStyling(\n\t\t\t\t\tprovider.getLegend(),\n\t\t\t\t\tthis._themeService,\n\t\t\t\t\tthis._languageService,\n\t\t\t\t\tthis._logService,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn this._caches.get(provider)!;\n\t}\n}\n\nregisterSingleton(\n\tISemanticTokensStylingService,\n\tSemanticTokensStylingService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AAEjC,SAAS,qCAAqC;AAC9C,SAAS,qCAAqC;AAEvC,IAAM,+BAAN,cACE,WAET;AAAA,EAQC,YACiC,eACF,aACK,kBAClC;AACD,UAAM;AAJ0B;AACF;AACK;AAGnC,SAAK,UAAU,oBAAI,QAA+D;AAClF,SAAK,UAAU,KAAK,cAAc,sBAAsB,MAAM;AAC7D,WAAK,UAAU,oBAAI,QAA+D;AAAA,IACnF,CAAC,CAAC;AAAA,EACH;AAAA,EAtCD,OAoBA;AAAA;AAAA;AAAA,EACQ;AAAA,EAEC;AAAA,EAiBD,WACN,UACgC;AAChC,QAAI,CAAC,KAAK,QAAQ,IAAI,QAAQ,GAAG;AAChC,WAAK,QAAQ;AAAA,QACZ;AAAA,QACA,IAAI;AAAA,UACH,SAAS,UAAU;AAAA,UACnB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,QACN;AAAA,MACD;AAAA,IACD;AACA,WAAO,KAAK,QAAQ,IAAI,QAAQ;AAAA,EACjC;AACD;AAvCa,+BAAN;AAAA,EAYJ;AAAA,EACA;AAAA,EACA;AAAA,GAdU;AAyCb;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
