{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/services/semanticTokensStylingService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { DocumentTokensProvider } from './model.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { SemanticTokensProviderStyling } from './semanticTokensProviderStyling.js';\nimport { ISemanticTokensStylingService } from './semanticTokensStyling.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\n\nexport class SemanticTokensStylingService extends Disposable implements ISemanticTokensStylingService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate _caches: WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>;\n\n\tconstructor(\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._caches = new WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>();\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\tthis._caches = new WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>();\n\t\t}));\n\t}\n\n\tpublic getStyling(provider: DocumentTokensProvider): SemanticTokensProviderStyling {\n\t\tif (!this._caches.has(provider)) {\n\t\t\tthis._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._languageService, this._logService));\n\t\t}\n\t\treturn this._caches.get(provider)!;\n\t}\n}\n\nregisterSingleton(ISemanticTokensStylingService, SemanticTokensStylingService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AACjC,SAAS,8BAA8B;AACvC,SAAS,qBAAqB;AAC9B,SAAS,mBAAmB;AAC5B,SAAS,qCAAqC;AAC9C,SAAS,qCAAqC;AAC9C,SAAS,mBAAmB,yBAAyB;AAE9C,IAAM,+BAAN,cAA2C,WAAoD;AAAA,EAMrG,YACiC,eACF,aACK,kBAClC;AACD,UAAM;AAJ0B;AACF;AACK;AAGnC,SAAK,UAAU,oBAAI,QAA+D;AAClF,SAAK,UAAU,KAAK,cAAc,sBAAsB,MAAM;AAC7D,WAAK,UAAU,oBAAI,QAA+D;AAAA,IACnF,CAAC,CAAC;AAAA,EACH;AAAA,EA9BD,OAcsG;AAAA;AAAA;AAAA,EAE9F;AAAA,EAEC;AAAA,EAcD,WAAW,UAAiE;AAClF,QAAI,CAAC,KAAK,QAAQ,IAAI,QAAQ,GAAG;AAChC,WAAK,QAAQ,IAAI,UAAU,IAAI,8BAA8B,SAAS,UAAU,GAAG,KAAK,eAAe,KAAK,kBAAkB,KAAK,WAAW,CAAC;AAAA,IAChJ;AACA,WAAO,KAAK,QAAQ,IAAI,QAAQ;AAAA,EACjC;AACD;AAxBa,+BAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,GATU;AA0Bb,kBAAkB,+BAA+B,8BAA8B,kBAAkB,OAAO;",
  "names": []
}
