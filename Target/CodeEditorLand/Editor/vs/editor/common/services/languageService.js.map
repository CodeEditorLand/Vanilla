{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/services/languageService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, IDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { LanguagesRegistry } from './languagesRegistry.js';\nimport { ILanguageNameIdPair, ILanguageSelection, ILanguageService, ILanguageIcon, ILanguageExtensionPoint } from '../languages/language.js';\nimport { ILanguageIdCodec, TokenizationRegistry } from '../languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { IObservable, observableFromEvent } from '../../../base/common/observable.js';\n\nexport class LanguageService extends Disposable implements ILanguageService {\n\tpublic _serviceBrand: undefined;\n\n\tstatic instanceCount = 0;\n\n\tprivate readonly _onDidRequestBasicLanguageFeatures = this._register(new Emitter<string>());\n\tpublic readonly onDidRequestBasicLanguageFeatures = this._onDidRequestBasicLanguageFeatures.event;\n\n\tprivate readonly _onDidRequestRichLanguageFeatures = this._register(new Emitter<string>());\n\tpublic readonly onDidRequestRichLanguageFeatures = this._onDidRequestRichLanguageFeatures.event;\n\n\tprotected readonly _onDidChange = this._register(new Emitter<void>({ leakWarningThreshold: 200 /* https://github.com/microsoft/vscode/issues/119968 */ }));\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _requestedBasicLanguages = new Set<string>();\n\tprivate readonly _requestedRichLanguages = new Set<string>();\n\n\tprotected readonly _registry: LanguagesRegistry;\n\tpublic readonly languageIdCodec: ILanguageIdCodec;\n\n\tconstructor(warnOnOverwrite = false) {\n\t\tsuper();\n\t\tLanguageService.instanceCount++;\n\t\tthis._registry = this._register(new LanguagesRegistry(true, warnOnOverwrite));\n\t\tthis.languageIdCodec = this._registry.languageIdCodec;\n\t\tthis._register(this._registry.onDidChange(() => this._onDidChange.fire()));\n\t}\n\n\tpublic override dispose(): void {\n\t\tLanguageService.instanceCount--;\n\t\tsuper.dispose();\n\t}\n\n\tpublic registerLanguage(def: ILanguageExtensionPoint): IDisposable {\n\t\treturn this._registry.registerLanguage(def);\n\t}\n\n\tpublic isRegisteredLanguageId(languageId: string | null | undefined): boolean {\n\t\treturn this._registry.isRegisteredLanguageId(languageId);\n\t}\n\n\tpublic getRegisteredLanguageIds(): string[] {\n\t\treturn this._registry.getRegisteredLanguageIds();\n\t}\n\n\tpublic getSortedRegisteredLanguageNames(): ILanguageNameIdPair[] {\n\t\treturn this._registry.getSortedRegisteredLanguageNames();\n\t}\n\n\tpublic getLanguageName(languageId: string): string | null {\n\t\treturn this._registry.getLanguageName(languageId);\n\t}\n\n\tpublic getMimeType(languageId: string): string | null {\n\t\treturn this._registry.getMimeType(languageId);\n\t}\n\n\tpublic getIcon(languageId: string): ILanguageIcon | null {\n\t\treturn this._registry.getIcon(languageId);\n\t}\n\n\tpublic getExtensions(languageId: string): ReadonlyArray<string> {\n\t\treturn this._registry.getExtensions(languageId);\n\t}\n\n\tpublic getFilenames(languageId: string): ReadonlyArray<string> {\n\t\treturn this._registry.getFilenames(languageId);\n\t}\n\n\tpublic getConfigurationFiles(languageId: string): ReadonlyArray<URI> {\n\t\treturn this._registry.getConfigurationFiles(languageId);\n\t}\n\n\tpublic getLanguageIdByLanguageName(languageName: string): string | null {\n\t\treturn this._registry.getLanguageIdByLanguageName(languageName);\n\t}\n\n\tpublic getLanguageIdByMimeType(mimeType: string | null | undefined): string | null {\n\t\treturn this._registry.getLanguageIdByMimeType(mimeType);\n\t}\n\n\tpublic guessLanguageIdByFilepathOrFirstLine(resource: URI | null, firstLine?: string): string | null {\n\t\tconst languageIds = this._registry.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n\t\treturn languageIds.at(0) ?? null;\n\t}\n\n\tpublic createById(languageId: string | null | undefined): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tpublic createByMimeType(mimeType: string | null | undefined): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\tconst languageId = this.getLanguageIdByMimeType(mimeType);\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tpublic createByFilepathOrFirstLine(resource: URI | null, firstLine?: string): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\tconst languageId = this.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tprivate _createAndGetLanguageIdentifier(languageId: string | null | undefined): string {\n\t\tif (!languageId || !this.isRegisteredLanguageId(languageId)) {\n\t\t\t// Fall back to plain text if language is unknown\n\t\t\tlanguageId = PLAINTEXT_LANGUAGE_ID;\n\t\t}\n\n\t\treturn languageId;\n\t}\n\n\tpublic requestBasicLanguageFeatures(languageId: string): void {\n\t\tif (!this._requestedBasicLanguages.has(languageId)) {\n\t\t\tthis._requestedBasicLanguages.add(languageId);\n\t\t\tthis._onDidRequestBasicLanguageFeatures.fire(languageId);\n\t\t}\n\t}\n\n\tpublic requestRichLanguageFeatures(languageId: string): void {\n\t\tif (!this._requestedRichLanguages.has(languageId)) {\n\t\t\tthis._requestedRichLanguages.add(languageId);\n\n\t\t\t// Ensure basic features are requested\n\t\t\tthis.requestBasicLanguageFeatures(languageId);\n\n\t\t\t// Ensure tokenizers are created\n\t\t\tTokenizationRegistry.getOrCreate(languageId);\n\n\t\t\tthis._onDidRequestRichLanguageFeatures.fire(languageId);\n\t\t}\n\t}\n}\n\nclass LanguageSelection implements ILanguageSelection {\n\tprivate readonly _value: IObservable<string>;\n\tpublic readonly onDidChange: Event<string>;\n\n\tconstructor(onDidChangeLanguages: Event<void>, selector: () => string) {\n\t\tthis._value = observableFromEvent(this, onDidChangeLanguages, () => selector());\n\t\tthis.onDidChange = Event.fromObservable(this._value);\n\t}\n\n\tpublic get languageId(): string {\n\t\treturn this._value.get();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
