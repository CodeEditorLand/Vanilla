{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/services/treeViewsDnd.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ITreeViewsDnDService<T> {\n\treadonly _serviceBrand: undefined;\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined;\n\taddDragOperationTransfer(uuid: string, transferPromise: Promise<T | undefined>): void;\n}\n\nexport class TreeViewsDnDService<T> implements ITreeViewsDnDService<T> {\n\t_serviceBrand: undefined;\n\tprivate _dragOperations: Map<string, Promise<T | undefined>> = new Map();\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined {\n\t\tif ((uuid && this._dragOperations.has(uuid))) {\n\t\t\tconst operation = this._dragOperations.get(uuid);\n\t\t\tthis._dragOperations.delete(uuid);\n\t\t\treturn operation;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\taddDragOperationTransfer(uuid: string, transferPromise: Promise<T | undefined>): void {\n\t\tthis._dragOperations.set(uuid, transferPromise);\n\t}\n}\n\n\nexport class DraggedTreeItemsIdentifier {\n\n\tconstructor(readonly identifier: string) { }\n}\n"],
  "mappings": ";;AAYO,MAAM,oBAA0D;AAAA,EAZvE,OAYuE;AAAA;AAAA;AAAA,EACtE;AAAA,EACQ,kBAAuD,oBAAI,IAAI;AAAA,EAEvE,4BAA4B,MAA8D;AACzF,QAAK,QAAQ,KAAK,gBAAgB,IAAI,IAAI,GAAI;AAC7C,YAAM,YAAY,KAAK,gBAAgB,IAAI,IAAI;AAC/C,WAAK,gBAAgB,OAAO,IAAI;AAChC,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEA,yBAAyB,MAAc,iBAA+C;AACrF,SAAK,gBAAgB,IAAI,MAAM,eAAe;AAAA,EAC/C;AACD;AAGO,MAAM,2BAA2B;AAAA,EAEvC,YAAqB,YAAoB;AAApB;AAAA,EAAsB;AAAA,EAjC5C,OA+BwC;AAAA;AAAA;AAGxC;",
  "names": []
}
