var v=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var s=(a,u,e,n)=>{for(var i=n>1?void 0:n?C(u,e):u,t=a.length-1,o;t>=0;t--)(o=a[t])&&(i=(n?o(u,e,i):o(i))||i);return n&&i&&v(u,e,i),i},d=(a,u)=>(e,n)=>u(e,n,a);import{Emitter as I}from"../../../../vs/base/common/event.js";import{Disposable as c}from"../../../../vs/base/common/lifecycle.js";import"../../../../vs/base/common/uri.js";import{Position as h}from"../../../../vs/editor/common/core/position.js";import{ILanguageService as p}from"../../../../vs/editor/common/languages/language.js";import{IModelService as m}from"../../../../vs/editor/common/services/model.js";import"../../../../vs/editor/common/services/textResourceConfiguration.js";import{ConfigurationTarget as r,IConfigurationService as R}from"../../../../vs/platform/configuration/common/configuration.js";let g=class extends c{constructor(e,n,i){super();this.configurationService=e;this.modelService=n;this.languageService=i;this._register(this.configurationService.onDidChangeConfiguration(t=>this._onDidChangeConfiguration.fire(this.toResourceConfigurationChangeEvent(t))))}_serviceBrand;_onDidChangeConfiguration=this._register(new I);onDidChangeConfiguration=this._onDidChangeConfiguration.event;getValue(e,n,i){return typeof i=="string"?this._getValue(e,h.isIPosition(n)?n:null,i):this._getValue(e,null,typeof n=="string"?n:void 0)}updateValue(e,n,i,t){const o=this.getLanguage(e,null),f=this.configurationService.inspect(n,{resource:e,overrideIdentifier:o});t===void 0&&(t=this.deriveConfigurationTarget(f,o));const l=o&&f.overrideIdentifiers?.includes(o)?o:void 0;return this.configurationService.updateValue(n,i,{resource:e,overrideIdentifier:l},t)}deriveConfigurationTarget(e,n){if(n){if(e.memory?.override!==void 0)return r.MEMORY;if(e.workspaceFolder?.override!==void 0)return r.WORKSPACE_FOLDER;if(e.workspace?.override!==void 0)return r.WORKSPACE;if(e.userRemote?.override!==void 0)return r.USER_REMOTE;if(e.userLocal?.override!==void 0)return r.USER_LOCAL}return e.memory?.value!==void 0?r.MEMORY:e.workspaceFolder?.value!==void 0?r.WORKSPACE_FOLDER:e.workspace?.value!==void 0?r.WORKSPACE:e.userRemote?.value!==void 0?r.USER_REMOTE:r.USER_LOCAL}_getValue(e,n,i){const t=e?this.getLanguage(e,n):void 0;return typeof i>"u"?this.configurationService.getValue({resource:e,overrideIdentifier:t}):this.configurationService.getValue(i,{resource:e,overrideIdentifier:t})}inspect(e,n,i){const t=e?this.getLanguage(e,n):void 0;return this.configurationService.inspect(i,{resource:e,overrideIdentifier:t})}getLanguage(e,n){const i=this.modelService.getModel(e);return i?n?i.getLanguageIdAtPosition(n.lineNumber,n.column):i.getLanguageId():this.languageService.guessLanguageIdByFilepathOrFirstLine(e)}toResourceConfigurationChangeEvent(e){return{affectedKeys:e.affectedKeys,affectsConfiguration:(n,i)=>{const t=n?this.getLanguage(n,null):void 0;return e.affectsConfiguration(i,{resource:n,overrideIdentifier:t})}}}};g=s([d(0,R),d(1,m),d(2,p)],g);export{g as TextResourceConfigurationService};
