{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/services/languageFeatureDebounce.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { doHash } from '../../../base/common/hash.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { clamp, MovingAverage, SlidingWindowAverage } from '../../../base/common/numbers.js';\nimport { LanguageFeatureRegistry } from '../languageFeatureRegistry.js';\nimport { ITextModel } from '../model.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { matchesScheme } from '../../../base/common/network.js';\n\n\nexport const ILanguageFeatureDebounceService = createDecorator<ILanguageFeatureDebounceService>('ILanguageFeatureDebounceService');\n\nexport interface ILanguageFeatureDebounceService {\n\n\treadonly _serviceBrand: undefined;\n\n\tfor(feature: LanguageFeatureRegistry<object>, debugName: string, config?: { min?: number; max?: number; salt?: string }): IFeatureDebounceInformation;\n}\n\nexport interface IFeatureDebounceInformation {\n\tget(model: ITextModel): number;\n\tupdate(model: ITextModel, value: number): number;\n\tdefault(): number;\n}\n\nnamespace IdentityHash {\n\tconst _hashes = new WeakMap<object, number>();\n\tlet pool = 0;\n\texport function of(obj: object): number {\n\t\tlet value = _hashes.get(obj);\n\t\tif (value === undefined) {\n\t\t\tvalue = ++pool;\n\t\t\t_hashes.set(obj, value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\nclass NullDebounceInformation implements IFeatureDebounceInformation {\n\n\tconstructor(private readonly _default: number) { }\n\n\tget(_model: ITextModel): number {\n\t\treturn this._default;\n\t}\n\tupdate(_model: ITextModel, _value: number): number {\n\t\treturn this._default;\n\t}\n\tdefault(): number {\n\t\treturn this._default;\n\t}\n}\n\nclass FeatureDebounceInformation implements IFeatureDebounceInformation {\n\n\tprivate readonly _cache = new LRUCache<string, SlidingWindowAverage>(50, 0.7);\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _name: string,\n\t\tprivate readonly _registry: LanguageFeatureRegistry<object>,\n\t\tprivate readonly _default: number,\n\t\tprivate readonly _min: number,\n\t\tprivate readonly _max: number,\n\t) { }\n\n\tprivate _key(model: ITextModel): string {\n\t\treturn model.id + this._registry.all(model).reduce((hashVal, obj) => doHash(IdentityHash.of(obj), hashVal), 0);\n\t}\n\n\tget(model: ITextModel): number {\n\t\tconst key = this._key(model);\n\t\tconst avg = this._cache.get(key);\n\t\treturn avg\n\t\t\t? clamp(avg.value, this._min, this._max)\n\t\t\t: this.default();\n\t}\n\n\tupdate(model: ITextModel, value: number): number {\n\t\tconst key = this._key(model);\n\t\tlet avg = this._cache.get(key);\n\t\tif (!avg) {\n\t\t\tavg = new SlidingWindowAverage(6);\n\t\t\tthis._cache.set(key, avg);\n\t\t}\n\t\tconst newValue = clamp(avg.update(value), this._min, this._max);\n\t\tif (!matchesScheme(model.uri, 'output')) {\n\t\t\tthis._logService.trace(`[DEBOUNCE: ${this._name}] for ${model.uri.toString()} is ${newValue}ms`);\n\t\t}\n\t\treturn newValue;\n\t}\n\n\tprivate _overall(): number {\n\t\tconst result = new MovingAverage();\n\t\tfor (const [, avg] of this._cache) {\n\t\t\tresult.update(avg.value);\n\t\t}\n\t\treturn result.value;\n\t}\n\n\tdefault() {\n\t\tconst value = (this._overall() | 0) || this._default;\n\t\treturn clamp(value, this._min, this._max);\n\t}\n}\n\n\nexport class LanguageFeatureDebounceService implements ILanguageFeatureDebounceService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _data = new Map<string, IFeatureDebounceInformation>();\n\tprivate readonly _isDev: boolean;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEnvironmentService envService: IEnvironmentService,\n\t) {\n\n\t\tthis._isDev = envService.isExtensionDevelopment || !envService.isBuilt;\n\t}\n\n\tfor(feature: LanguageFeatureRegistry<object>, name: string, config?: { min?: number; max?: number; key?: string }): IFeatureDebounceInformation {\n\t\tconst min = config?.min ?? 50;\n\t\tconst max = config?.max ?? min ** 2;\n\t\tconst extra = config?.key ?? undefined;\n\t\tconst key = `${IdentityHash.of(feature)},${min}${extra ? ',' + extra : ''}`;\n\t\tlet info = this._data.get(key);\n\t\tif (!info) {\n\t\t\tif (this._isDev) {\n\t\t\t\tthis._logService.debug(`[DEBOUNCE: ${name}] is disabled in developed mode`);\n\t\t\t\tinfo = new NullDebounceInformation(min * 1.5);\n\t\t\t} else {\n\t\t\t\tinfo = new FeatureDebounceInformation(\n\t\t\t\t\tthis._logService,\n\t\t\t\t\tname,\n\t\t\t\t\tfeature,\n\t\t\t\t\t(this._overallAverage() | 0) || (min * 1.5), // default is overall default or derived from min-value\n\t\t\t\t\tmin,\n\t\t\t\t\tmax\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._data.set(key, info);\n\t\t}\n\t\treturn info;\n\t}\n\n\tprivate _overallAverage(): number {\n\t\t// Average of all language features. Not a great value but an approximation\n\t\tconst result = new MovingAverage();\n\t\tfor (const info of this._data.values()) {\n\t\t\tresult.update(info.default());\n\t\t}\n\t\treturn result.value;\n\t}\n}\n\nregisterSingleton(ILanguageFeatureDebounceService, LanguageFeatureDebounceService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": ["IdentityHash"]
}
