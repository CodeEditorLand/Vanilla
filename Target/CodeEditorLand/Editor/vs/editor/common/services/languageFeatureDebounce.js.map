{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/services/languageFeatureDebounce.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { doHash } from \"../../../base/common/hash.js\";\nimport { LRUCache } from \"../../../base/common/map.js\";\nimport { matchesScheme } from \"../../../base/common/network.js\";\nimport {\n\tMovingAverage,\n\tSlidingWindowAverage,\n\tclamp,\n} from \"../../../base/common/numbers.js\";\nimport { IEnvironmentService } from \"../../../platform/environment/common/environment.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../platform/instantiation/common/extensions.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport type { LanguageFeatureRegistry } from \"../languageFeatureRegistry.js\";\nimport type { ITextModel } from \"../model.js\";\n\nexport const ILanguageFeatureDebounceService =\n\tcreateDecorator<ILanguageFeatureDebounceService>(\n\t\t\"ILanguageFeatureDebounceService\",\n\t);\n\nexport interface ILanguageFeatureDebounceService {\n\treadonly _serviceBrand: undefined;\n\n\tfor(\n\t\tfeature: LanguageFeatureRegistry<object>,\n\t\tdebugName: string,\n\t\tconfig?: { min?: number; max?: number; salt?: string },\n\t): IFeatureDebounceInformation;\n}\n\nexport interface IFeatureDebounceInformation {\n\tget(model: ITextModel): number;\n\tupdate(model: ITextModel, value: number): number;\n\tdefault(): number;\n}\n\nnamespace IdentityHash {\n\tconst _hashes = new WeakMap<object, number>();\n\tlet pool = 0;\n\texport function of(obj: object): number {\n\t\tlet value = _hashes.get(obj);\n\t\tif (value === undefined) {\n\t\t\tvalue = ++pool;\n\t\t\t_hashes.set(obj, value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\nclass NullDebounceInformation implements IFeatureDebounceInformation {\n\tconstructor(private readonly _default: number) {}\n\n\tget(_model: ITextModel): number {\n\t\treturn this._default;\n\t}\n\tupdate(_model: ITextModel, _value: number): number {\n\t\treturn this._default;\n\t}\n\tdefault(): number {\n\t\treturn this._default;\n\t}\n}\n\nclass FeatureDebounceInformation implements IFeatureDebounceInformation {\n\tprivate readonly _cache = new LRUCache<string, SlidingWindowAverage>(\n\t\t50,\n\t\t0.7,\n\t);\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _name: string,\n\t\tprivate readonly _registry: LanguageFeatureRegistry<object>,\n\t\tprivate readonly _default: number,\n\t\tprivate readonly _min: number,\n\t\tprivate readonly _max: number,\n\t) {}\n\n\tprivate _key(model: ITextModel): string {\n\t\treturn (\n\t\t\tmodel.id +\n\t\t\tthis._registry\n\t\t\t\t.all(model)\n\t\t\t\t.reduce(\n\t\t\t\t\t(hashVal, obj) => doHash(IdentityHash.of(obj), hashVal),\n\t\t\t\t\t0,\n\t\t\t\t)\n\t\t);\n\t}\n\n\tget(model: ITextModel): number {\n\t\tconst key = this._key(model);\n\t\tconst avg = this._cache.get(key);\n\t\treturn avg ? clamp(avg.value, this._min, this._max) : this.default();\n\t}\n\n\tupdate(model: ITextModel, value: number): number {\n\t\tconst key = this._key(model);\n\t\tlet avg = this._cache.get(key);\n\t\tif (!avg) {\n\t\t\tavg = new SlidingWindowAverage(6);\n\t\t\tthis._cache.set(key, avg);\n\t\t}\n\t\tconst newValue = clamp(avg.update(value), this._min, this._max);\n\t\tif (!matchesScheme(model.uri, \"output\")) {\n\t\t\tthis._logService.trace(\n\t\t\t\t`[DEBOUNCE: ${this._name}] for ${model.uri.toString()} is ${newValue}ms`,\n\t\t\t);\n\t\t}\n\t\treturn newValue;\n\t}\n\n\tprivate _overall(): number {\n\t\tconst result = new MovingAverage();\n\t\tfor (const [, avg] of this._cache) {\n\t\t\tresult.update(avg.value);\n\t\t}\n\t\treturn result.value;\n\t}\n\n\tdefault() {\n\t\tconst value = this._overall() | 0 || this._default;\n\t\treturn clamp(value, this._min, this._max);\n\t}\n}\n\nexport class LanguageFeatureDebounceService\n\timplements ILanguageFeatureDebounceService\n{\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _data = new Map<string, IFeatureDebounceInformation>();\n\tprivate readonly _isDev: boolean;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEnvironmentService envService: IEnvironmentService,\n\t) {\n\n\t\tthis._isDev = envService.isExtensionDevelopment || !envService.isBuilt;\n\t}\n\n\tfor(\n\t\tfeature: LanguageFeatureRegistry<object>,\n\t\tname: string,\n\t\tconfig?: { min?: number; max?: number; key?: string },\n\t): IFeatureDebounceInformation {\n\t\tconst min = config?.min ?? 50;\n\t\tconst max = config?.max ?? min ** 2;\n\t\tconst extra = config?.key ?? undefined;\n\t\tconst key = `${IdentityHash.of(feature)},${min}${extra ? \",\" + extra : \"\"}`;\n\t\tlet info = this._data.get(key);\n\t\tif (!info) {\n\t\t\tif (this._isDev) {\n\t\t\t\tthis._logService.debug(\n\t\t\t\t\t`[DEBOUNCE: ${name}] is disabled in developed mode`,\n\t\t\t\t);\n\t\t\t\tinfo = new NullDebounceInformation(min * 1.5);\n\t\t\t} else {\n\t\t\t\tinfo = new FeatureDebounceInformation(\n\t\t\t\t\tthis._logService,\n\t\t\t\t\tname,\n\t\t\t\t\tfeature,\n\t\t\t\t\tthis._overallAverage() | 0 || min * 1.5, // default is overall default or derived from min-value\n\t\t\t\t\tmin,\n\t\t\t\t\tmax,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._data.set(key, info);\n\t\t}\n\t\treturn info;\n\t}\n\n\tprivate _overallAverage(): number {\n\t\t// Average of all language features. Not a great value but an approximation\n\t\tconst result = new MovingAverage();\n\t\tfor (const info of this._data.values()) {\n\t\t\tresult.update(info.default());\n\t\t}\n\t\treturn result.value;\n\t}\n}\n\nregisterSingleton(\n\tILanguageFeatureDebounceService,\n\tLanguageFeatureDebounceService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": ["IdentityHash"]
}
