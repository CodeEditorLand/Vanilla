import{parse as x}from"../../../base/common/glob.js";import{Mimes as g}from"../../../base/common/mime.js";import{Schemas as l}from"../../../base/common/network.js";import{basename as w,posix as h}from"../../../base/common/path.js";import{DataUri as c}from"../../../base/common/resources.js";import{startsWithUTF8BOM as y}from"../../../base/common/strings.js";import"../../../base/common/uri.js";import{PLAINTEXT_LANGUAGE_ID as m}from"../languages/modesRegistry.js";let s=[],u=[],d=[];function _(e,i=!1){p(e,!1,i)}function B(e){p(e,!0,!1)}function p(e,i,t){const n=C(e,i);s.push(n),n.userConfigured?d.push(n):u.push(n),t&&!n.userConfigured&&s.forEach(o=>{o.mime===n.mime||o.userConfigured||(n.extension&&o.extension===n.extension&&console.warn(`Overwriting extension <<${n.extension}>> to now point to mime <<${n.mime}>>`),n.filename&&o.filename===n.filename&&console.warn(`Overwriting filename <<${n.filename}>> to now point to mime <<${n.mime}>>`),n.filepattern&&o.filepattern===n.filepattern&&console.warn(`Overwriting filepattern <<${n.filepattern}>> to now point to mime <<${n.mime}>>`),n.firstline&&o.firstline===n.firstline&&console.warn(`Overwriting firstline <<${n.firstline}>> to now point to mime <<${n.mime}>>`))})}function C(e,i){return{id:e.id,mime:e.mime,filename:e.filename,extension:e.extension,filepattern:e.filepattern,firstline:e.firstline,userConfigured:i,filenameLowercase:e.filename?e.filename.toLowerCase():void 0,extensionLowercase:e.extension?e.extension.toLowerCase():void 0,filepatternLowercase:e.filepattern?x(e.filepattern.toLowerCase()):void 0,filepatternOnPath:e.filepattern?e.filepattern.indexOf(h.sep)>=0:!1}}function D(){s=s.filter(e=>e.userConfigured),u=[]}function N(){s=s.filter(e=>!e.userConfigured),d=[]}function F(e,i){return I(e,i).map(t=>t.mime)}function G(e,i){return I(e,i).map(t=>t.id)}function I(e,i){let t;if(e)switch(e.scheme){case l.file:t=e.fsPath;break;case l.data:{t=c.parseMetaData(e).get(c.META_DATA_LABEL);break}case l.vscodeNotebookCell:t=void 0;break;default:t=e.path}if(!t)return[{id:"unknown",mime:g.unknown}];t=t.toLowerCase();const n=w(t),o=L(t,n,d);if(o)return[o,{id:m,mime:g.text}];const a=L(t,n,u);if(a)return[a,{id:m,mime:g.text}];if(i){const f=b(i);if(f)return[f,{id:m,mime:g.text}]}return[{id:"unknown",mime:g.unknown}]}function L(e,i,t){let n,o,a;for(let f=t.length-1;f>=0;f--){const r=t[f];if(i===r.filenameLowercase){n=r;break}if(r.filepattern&&(!o||r.filepattern.length>o.filepattern.length)){const A=r.filepatternOnPath?e:i;r.filepatternLowercase?.(A)&&(o=r)}r.extension&&(!a||r.extension.length>a.extension.length)&&i.endsWith(r.extensionLowercase)&&(a=r)}if(n)return n;if(o)return o;if(a)return a}function b(e){if(y(e)&&(e=e.substr(1)),e.length>0)for(let i=s.length-1;i>=0;i--){const t=s[i];if(!t.firstline)continue;const n=e.match(t.firstline);if(n&&n.length>0)return t}}export{N as clearConfiguredLanguageAssociations,D as clearPlatformLanguageAssociations,G as getLanguageIds,F as getMimeTypes,B as registerConfiguredLanguageAssociation,_ as registerPlatformLanguageAssociation};
