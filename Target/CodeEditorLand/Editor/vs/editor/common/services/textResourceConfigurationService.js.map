{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/services/textResourceConfigurationService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport {\n\tConfigurationTarget,\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n\ttype IConfigurationValue,\n} from \"../../../platform/configuration/common/configuration.js\";\nimport { type IPosition, Position } from \"../core/position.js\";\nimport { ILanguageService } from \"../languages/language.js\";\nimport { IModelService } from \"./model.js\";\nimport type {\n\tITextResourceConfigurationChangeEvent,\n\tITextResourceConfigurationService,\n} from \"./textResourceConfiguration.js\";\n\nexport class TextResourceConfigurationService\n\textends Disposable\n\timplements ITextResourceConfigurationService\n{\n\tpublic _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<ITextResourceConfigurationChangeEvent> =\n\t\tthis._register(new Emitter<ITextResourceConfigurationChangeEvent>());\n\tpublic readonly onDidChangeConfiguration: Event<ITextResourceConfigurationChangeEvent> =\n\t\tthis._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this._onDidChangeConfiguration.fire(this.toResourceConfigurationChangeEvent(e))));\n\t}\n\n\tgetValue<T>(resource: URI | undefined, section?: string): T;\n\tgetValue<T>(resource: URI | undefined, at?: IPosition, section?: string): T;\n\tgetValue<T>(resource: URI | undefined, arg2?: any, arg3?: any): T {\n\t\tif (typeof arg3 === \"string\") {\n\t\t\treturn this._getValue(\n\t\t\t\tresource,\n\t\t\t\tPosition.isIPosition(arg2) ? arg2 : null,\n\t\t\t\targ3,\n\t\t\t);\n\t\t}\n\t\treturn this._getValue(\n\t\t\tresource,\n\t\t\tnull,\n\t\t\ttypeof arg2 === \"string\" ? arg2 : undefined,\n\t\t);\n\t}\n\n\tupdateValue(\n\t\tresource: URI,\n\t\tkey: string,\n\t\tvalue: any,\n\t\tconfigurationTarget?: ConfigurationTarget,\n\t): Promise<void> {\n\t\tconst language = this.getLanguage(resource, null);\n\t\tconst configurationValue = this.configurationService.inspect(key, {\n\t\t\tresource,\n\t\t\toverrideIdentifier: language,\n\t\t});\n\t\tif (configurationTarget === undefined) {\n\t\t\tconfigurationTarget = this.deriveConfigurationTarget(\n\t\t\t\tconfigurationValue,\n\t\t\t\tlanguage,\n\t\t\t);\n\t\t}\n\t\tconst overrideIdentifier =\n\t\t\tlanguage &&\n\t\t\tconfigurationValue.overrideIdentifiers?.includes(language)\n\t\t\t\t? language\n\t\t\t\t: undefined;\n\t\treturn this.configurationService.updateValue(\n\t\t\tkey,\n\t\t\tvalue,\n\t\t\t{ resource, overrideIdentifier },\n\t\t\tconfigurationTarget,\n\t\t);\n\t}\n\n\tprivate deriveConfigurationTarget(\n\t\tconfigurationValue: IConfigurationValue<any>,\n\t\tlanguage: string | null,\n\t): ConfigurationTarget {\n\t\tif (language) {\n\t\t\tif (configurationValue.memory?.override !== undefined) {\n\t\t\t\treturn ConfigurationTarget.MEMORY;\n\t\t\t}\n\t\t\tif (configurationValue.workspaceFolder?.override !== undefined) {\n\t\t\t\treturn ConfigurationTarget.WORKSPACE_FOLDER;\n\t\t\t}\n\t\t\tif (configurationValue.workspace?.override !== undefined) {\n\t\t\t\treturn ConfigurationTarget.WORKSPACE;\n\t\t\t}\n\t\t\tif (configurationValue.userRemote?.override !== undefined) {\n\t\t\t\treturn ConfigurationTarget.USER_REMOTE;\n\t\t\t}\n\t\t\tif (configurationValue.userLocal?.override !== undefined) {\n\t\t\t\treturn ConfigurationTarget.USER_LOCAL;\n\t\t\t}\n\t\t}\n\t\tif (configurationValue.memory?.value !== undefined) {\n\t\t\treturn ConfigurationTarget.MEMORY;\n\t\t}\n\t\tif (configurationValue.workspaceFolder?.value !== undefined) {\n\t\t\treturn ConfigurationTarget.WORKSPACE_FOLDER;\n\t\t}\n\t\tif (configurationValue.workspace?.value !== undefined) {\n\t\t\treturn ConfigurationTarget.WORKSPACE;\n\t\t}\n\t\tif (configurationValue.userRemote?.value !== undefined) {\n\t\t\treturn ConfigurationTarget.USER_REMOTE;\n\t\t}\n\t\treturn ConfigurationTarget.USER_LOCAL;\n\t}\n\n\tprivate _getValue<T>(\n\t\tresource: URI | undefined,\n\t\tposition: IPosition | null,\n\t\tsection: string | undefined,\n\t): T {\n\t\tconst language = resource\n\t\t\t? this.getLanguage(resource, position)\n\t\t\t: undefined;\n\t\tif (typeof section === \"undefined\") {\n\t\t\treturn this.configurationService.getValue<T>({\n\t\t\t\tresource,\n\t\t\t\toverrideIdentifier: language,\n\t\t\t});\n\t\t}\n\t\treturn this.configurationService.getValue<T>(section, {\n\t\t\tresource,\n\t\t\toverrideIdentifier: language,\n\t\t});\n\t}\n\n\tinspect<T>(\n\t\tresource: URI | undefined,\n\t\tposition: IPosition | null,\n\t\tsection: string,\n\t): IConfigurationValue<Readonly<T>> {\n\t\tconst language = resource\n\t\t\t? this.getLanguage(resource, position)\n\t\t\t: undefined;\n\t\treturn this.configurationService.inspect<T>(section, {\n\t\t\tresource,\n\t\t\toverrideIdentifier: language,\n\t\t});\n\t}\n\n\tprivate getLanguage(\n\t\tresource: URI,\n\t\tposition: IPosition | null,\n\t): string | null {\n\t\tconst model = this.modelService.getModel(resource);\n\t\tif (model) {\n\t\t\treturn position\n\t\t\t\t? model.getLanguageIdAtPosition(\n\t\t\t\t\t\tposition.lineNumber,\n\t\t\t\t\t\tposition.column,\n\t\t\t\t\t)\n\t\t\t\t: model.getLanguageId();\n\t\t}\n\t\treturn this.languageService.guessLanguageIdByFilepathOrFirstLine(\n\t\t\tresource,\n\t\t);\n\t}\n\n\tprivate toResourceConfigurationChangeEvent(\n\t\tconfigurationChangeEvent: IConfigurationChangeEvent,\n\t): ITextResourceConfigurationChangeEvent {\n\t\treturn {\n\t\t\taffectedKeys: configurationChangeEvent.affectedKeys,\n\t\t\taffectsConfiguration: (\n\t\t\t\tresource: URI | undefined,\n\t\t\t\tconfiguration: string,\n\t\t\t) => {\n\t\t\t\tconst overrideIdentifier = resource\n\t\t\t\t\t? this.getLanguage(resource, null)\n\t\t\t\t\t: undefined;\n\t\t\t\treturn configurationChangeEvent.affectsConfiguration(\n\t\t\t\t\tconfiguration,\n\t\t\t\t\t{ resource, overrideIdentifier },\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
