{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/core/indentation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from \"../../../base/common/strings.js\";\nimport { CursorColumns } from \"./cursorColumns.js\";\n\nfunction _normalizeIndentationFromWhitespace(\n\tstr: string,\n\tindentSize: number,\n\tinsertSpaces: boolean,\n): string {\n\tlet spacesCnt = 0;\n\tfor (let i = 0; i < str.length; i++) {\n\t\tif (str.charAt(i) === \"\\t\") {\n\t\t\tspacesCnt = CursorColumns.nextIndentTabStop(spacesCnt, indentSize);\n\t\t} else {\n\t\t\tspacesCnt++;\n\t\t}\n\t}\n\n\tlet result = \"\";\n\tif (!insertSpaces) {\n\t\tconst tabsCnt = Math.floor(spacesCnt / indentSize);\n\t\tspacesCnt = spacesCnt % indentSize;\n\t\tfor (let i = 0; i < tabsCnt; i++) {\n\t\t\tresult += \"\\t\";\n\t\t}\n\t}\n\n\tfor (let i = 0; i < spacesCnt; i++) {\n\t\tresult += \" \";\n\t}\n\n\treturn result;\n}\n\nexport function normalizeIndentation(\n\tstr: string,\n\tindentSize: number,\n\tinsertSpaces: boolean,\n): string {\n\tlet firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(str);\n\tif (firstNonWhitespaceIndex === -1) {\n\t\tfirstNonWhitespaceIndex = str.length;\n\t}\n\treturn (\n\t\t_normalizeIndentationFromWhitespace(\n\t\t\tstr.substring(0, firstNonWhitespaceIndex),\n\t\t\tindentSize,\n\t\t\tinsertSpaces,\n\t\t) + str.substring(firstNonWhitespaceIndex)\n\t);\n}\n"],
  "mappings": ";;AAKA,YAAY,aAAa;AACzB,SAAS,qBAAqB;AAE9B,SAAS,oCACR,KACA,YACA,cACS;AACT,MAAI,YAAY;AAChB,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACpC,QAAI,IAAI,OAAO,CAAC,MAAM,KAAM;AAC3B,kBAAY,cAAc,kBAAkB,WAAW,UAAU;AAAA,IAClE,OAAO;AACN;AAAA,IACD;AAAA,EACD;AAEA,MAAI,SAAS;AACb,MAAI,CAAC,cAAc;AAClB,UAAM,UAAU,KAAK,MAAM,YAAY,UAAU;AACjD,gBAAY,YAAY;AACxB,aAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AACjC,gBAAU;AAAA,IACX;AAAA,EACD;AAEA,WAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AACnC,cAAU;AAAA,EACX;AAEA,SAAO;AACR;AA5BS;AA8BF,SAAS,qBACf,KACA,YACA,cACS;AACT,MAAI,0BAA0B,QAAQ,wBAAwB,GAAG;AACjE,MAAI,4BAA4B,IAAI;AACnC,8BAA0B,IAAI;AAAA,EAC/B;AACA,SACC;AAAA,IACC,IAAI,UAAU,GAAG,uBAAuB;AAAA,IACxC;AAAA,IACA;AAAA,EACD,IAAI,IAAI,UAAU,uBAAuB;AAE3C;AAhBgB;",
  "names": []
}
