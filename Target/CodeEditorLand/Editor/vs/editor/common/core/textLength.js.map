{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/core/textLength.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n\n/**\n * Represents a non-negative length of text in terms of line and column count.\n*/\nexport class TextLength {\n\tpublic static zero = new TextLength(0, 0);\n\n\tpublic static lengthDiffNonNegative(start: TextLength, end: TextLength): TextLength {\n\t\tif (end.isLessThan(start)) {\n\t\t\treturn TextLength.zero;\n\t\t}\n\t\tif (start.lineCount === end.lineCount) {\n\t\t\treturn new TextLength(0, end.columnCount - start.columnCount);\n\t\t} else {\n\t\t\treturn new TextLength(end.lineCount - start.lineCount, end.columnCount);\n\t\t}\n\t}\n\n\tpublic static betweenPositions(position1: Position, position2: Position): TextLength {\n\t\tif (position1.lineNumber === position2.lineNumber) {\n\t\t\treturn new TextLength(0, position2.column - position1.column);\n\t\t} else {\n\t\t\treturn new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1);\n\t\t}\n\t}\n\n\tpublic static ofRange(range: Range) {\n\t\treturn TextLength.betweenPositions(range.getStartPosition(), range.getEndPosition());\n\t}\n\n\tpublic static ofText(text: string): TextLength {\n\t\tlet line = 0;\n\t\tlet column = 0;\n\t\tfor (const c of text) {\n\t\t\tif (c === '\\n') {\n\t\t\t\tline++;\n\t\t\t\tcolumn = 0;\n\t\t\t} else {\n\t\t\t\tcolumn++;\n\t\t\t}\n\t\t}\n\t\treturn new TextLength(line, column);\n\t}\n\n\tconstructor(\n\t\tpublic readonly lineCount: number,\n\t\tpublic readonly columnCount: number\n\t) { }\n\n\tpublic isZero() {\n\t\treturn this.lineCount === 0 && this.columnCount === 0;\n\t}\n\n\tpublic isLessThan(other: TextLength): boolean {\n\t\tif (this.lineCount !== other.lineCount) {\n\t\t\treturn this.lineCount < other.lineCount;\n\t\t}\n\t\treturn this.columnCount < other.columnCount;\n\t}\n\n\tpublic isGreaterThan(other: TextLength): boolean {\n\t\tif (this.lineCount !== other.lineCount) {\n\t\t\treturn this.lineCount > other.lineCount;\n\t\t}\n\t\treturn this.columnCount > other.columnCount;\n\t}\n\n\tpublic isGreaterThanOrEqualTo(other: TextLength): boolean {\n\t\tif (this.lineCount !== other.lineCount) {\n\t\t\treturn this.lineCount > other.lineCount;\n\t\t}\n\t\treturn this.columnCount >= other.columnCount;\n\t}\n\n\tpublic equals(other: TextLength): boolean {\n\t\treturn this.lineCount === other.lineCount && this.columnCount === other.columnCount;\n\t}\n\n\tpublic compare(other: TextLength): number {\n\t\tif (this.lineCount !== other.lineCount) {\n\t\t\treturn this.lineCount - other.lineCount;\n\t\t}\n\t\treturn this.columnCount - other.columnCount;\n\t}\n\n\tpublic add(other: TextLength): TextLength {\n\t\tif (other.lineCount === 0) {\n\t\t\treturn new TextLength(this.lineCount, this.columnCount + other.columnCount);\n\t\t} else {\n\t\t\treturn new TextLength(this.lineCount + other.lineCount, other.columnCount);\n\t\t}\n\t}\n\n\tpublic createRange(startPosition: Position): Range {\n\t\tif (this.lineCount === 0) {\n\t\t\treturn new Range(startPosition.lineNumber, startPosition.column, startPosition.lineNumber, startPosition.column + this.columnCount);\n\t\t} else {\n\t\t\treturn new Range(startPosition.lineNumber, startPosition.column, startPosition.lineNumber + this.lineCount, this.columnCount + 1);\n\t\t}\n\t}\n\n\tpublic toRange(): Range {\n\t\treturn new Range(1, 1, this.lineCount + 1, this.columnCount + 1);\n\t}\n\n\tpublic addToPosition(position: Position): Position {\n\t\tif (this.lineCount === 0) {\n\t\t\treturn new Position(position.lineNumber, position.column + this.columnCount);\n\t\t} else {\n\t\t\treturn new Position(position.lineNumber + this.lineCount, this.columnCount + 1);\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn `${this.lineCount},${this.columnCount}`;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
