import{toUint8 as r}from"../../../../vs/base/common/uint.js";class a{_asciiMap;_map;_defaultValue;constructor(e){const t=r(e);this._defaultValue=t,this._asciiMap=a._createAsciiMap(t),this._map=new Map}static _createAsciiMap(e){const t=new Uint8Array(256);return t.fill(e),t}set(e,t){const i=r(t);e>=0&&e<256?this._asciiMap[e]=i:this._map.set(e,i)}get(e){return e>=0&&e<256?this._asciiMap[e]:this._map.get(e)||this._defaultValue}clear(){this._asciiMap.fill(this._defaultValue),this._map.clear()}}var s=(t=>(t[t.False=0]="False",t[t.True=1]="True",t))(s||{});class n{_actual;constructor(){this._actual=new a(0)}add(e){this._actual.set(e,1)}has(e){return this._actual.get(e)===1}clear(){return this._actual.clear()}}export{a as CharacterClassifier,n as CharacterSet};
