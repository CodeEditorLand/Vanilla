{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/core/rangeMapping.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { findLastMonotonous } from '../../../base/common/arraysFind.js';\nimport { Position } from './position.js';\nimport { Range } from './range.js';\nimport { TextLength } from './textLength.js';\n\n/**\n * Represents a list of mappings of ranges from one document to another.\n */\nexport class RangeMapping {\n\tconstructor(public readonly mappings: readonly SingleRangeMapping[]) {\n\t}\n\n\tmapPosition(position: Position): PositionOrRange {\n\t\tconst mapping = findLastMonotonous(this.mappings, m => m.original.getStartPosition().isBeforeOrEqual(position));\n\t\tif (!mapping) {\n\t\t\treturn PositionOrRange.position(position);\n\t\t}\n\t\tif (mapping.original.containsPosition(position)) {\n\t\t\treturn PositionOrRange.range(mapping.modified);\n\t\t}\n\t\tconst l = TextLength.betweenPositions(mapping.original.getEndPosition(), position);\n\t\treturn PositionOrRange.position(l.addToPosition(mapping.modified.getEndPosition()));\n\t}\n\n\tmapRange(range: Range): Range {\n\t\tconst start = this.mapPosition(range.getStartPosition());\n\t\tconst end = this.mapPosition(range.getEndPosition());\n\t\treturn Range.fromPositions(\n\t\t\tstart.range?.getStartPosition() ?? start.position!,\n\t\t\tend.range?.getEndPosition() ?? end.position!,\n\t\t);\n\t}\n\n\treverse(): RangeMapping {\n\t\treturn new RangeMapping(this.mappings.map(mapping => mapping.reverse()));\n\t}\n}\n\nexport class SingleRangeMapping {\n\tconstructor(\n\t\tpublic readonly original: Range,\n\t\tpublic readonly modified: Range,\n\t) {\n\t}\n\n\treverse(): SingleRangeMapping {\n\t\treturn new SingleRangeMapping(this.modified, this.original);\n\t}\n\n\ttoString() {\n\t\treturn `${this.original.toString()} -> ${this.modified.toString()}`;\n\t}\n}\n\nexport class PositionOrRange {\n\tpublic static position(position: Position): PositionOrRange {\n\t\treturn new PositionOrRange(position, undefined);\n\t}\n\n\tpublic static range(range: Range): PositionOrRange {\n\t\treturn new PositionOrRange(undefined, range);\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly position: Position | undefined,\n\t\tpublic readonly range: Range | undefined,\n\t) { }\n}\n"],
  "mappings": ";;AAKA,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AACzB,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAKpB,MAAM,aAAa;AAAA,EACzB,YAA4B,UAAyC;AAAzC;AAAA,EAC5B;AAAA,EAfD,OAa0B;AAAA;AAAA;AAAA,EAIzB,YAAY,UAAqC;AAChD,UAAM,UAAU,mBAAmB,KAAK,UAAU,OAAK,EAAE,SAAS,iBAAiB,EAAE,gBAAgB,QAAQ,CAAC;AAC9G,QAAI,CAAC,SAAS;AACb,aAAO,gBAAgB,SAAS,QAAQ;AAAA,IACzC;AACA,QAAI,QAAQ,SAAS,iBAAiB,QAAQ,GAAG;AAChD,aAAO,gBAAgB,MAAM,QAAQ,QAAQ;AAAA,IAC9C;AACA,UAAM,IAAI,WAAW,iBAAiB,QAAQ,SAAS,eAAe,GAAG,QAAQ;AACjF,WAAO,gBAAgB,SAAS,EAAE,cAAc,QAAQ,SAAS,eAAe,CAAC,CAAC;AAAA,EACnF;AAAA,EAEA,SAAS,OAAqB;AAC7B,UAAM,QAAQ,KAAK,YAAY,MAAM,iBAAiB,CAAC;AACvD,UAAM,MAAM,KAAK,YAAY,MAAM,eAAe,CAAC;AACnD,WAAO,MAAM;AAAA,MACZ,MAAM,OAAO,iBAAiB,KAAK,MAAM;AAAA,MACzC,IAAI,OAAO,eAAe,KAAK,IAAI;AAAA,IACpC;AAAA,EACD;AAAA,EAEA,UAAwB;AACvB,WAAO,IAAI,aAAa,KAAK,SAAS,IAAI,aAAW,QAAQ,QAAQ,CAAC,CAAC;AAAA,EACxE;AACD;AAEO,MAAM,mBAAmB;AAAA,EAC/B,YACiB,UACA,UACf;AAFe;AACA;AAAA,EAEjB;AAAA,EAhDD,OA2CgC;AAAA;AAAA;AAAA,EAO/B,UAA8B;AAC7B,WAAO,IAAI,mBAAmB,KAAK,UAAU,KAAK,QAAQ;AAAA,EAC3D;AAAA,EAEA,WAAW;AACV,WAAO,GAAG,KAAK,SAAS,SAAS,CAAC,OAAO,KAAK,SAAS,SAAS,CAAC;AAAA,EAClE;AACD;AAEO,MAAM,gBAAgB;AAAA,EASpB,YACS,UACA,OACf;AAFe;AACA;AAAA,EACb;AAAA,EAvEL,OA2D6B;AAAA;AAAA;AAAA,EAC5B,OAAc,SAAS,UAAqC;AAC3D,WAAO,IAAI,gBAAgB,UAAU,MAAS;AAAA,EAC/C;AAAA,EAEA,OAAc,MAAM,OAA+B;AAClD,WAAO,IAAI,gBAAgB,QAAW,KAAK;AAAA,EAC5C;AAMD;",
  "names": []
}
