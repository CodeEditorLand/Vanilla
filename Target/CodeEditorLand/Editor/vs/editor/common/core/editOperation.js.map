{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/core/editOperation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Position } from \"./position.js\";\nimport { type IRange, Range } from \"./range.js\";\n\n/**\n * A single edit operation, that acts as a simple replace.\n * i.e. Replace text at `range` with `text` in model.\n */\nexport interface ISingleEditOperation {\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string | null;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n}\n\nexport class EditOperation {\n\tpublic static insert(\n\t\tposition: Position,\n\t\ttext: string,\n\t): ISingleEditOperation {\n\t\treturn {\n\t\t\trange: new Range(\n\t\t\t\tposition.lineNumber,\n\t\t\t\tposition.column,\n\t\t\t\tposition.lineNumber,\n\t\t\t\tposition.column,\n\t\t\t),\n\t\t\ttext: text,\n\t\t\tforceMoveMarkers: true,\n\t\t};\n\t}\n\n\tpublic static delete(range: Range): ISingleEditOperation {\n\t\treturn {\n\t\t\trange: range,\n\t\t\ttext: null,\n\t\t};\n\t}\n\n\tpublic static replace(\n\t\trange: Range,\n\t\ttext: string | null,\n\t): ISingleEditOperation {\n\t\treturn {\n\t\t\trange: range,\n\t\t\ttext: text,\n\t\t};\n\t}\n\n\tpublic static replaceMove(\n\t\trange: Range,\n\t\ttext: string | null,\n\t): ISingleEditOperation {\n\t\treturn {\n\t\t\trange: range,\n\t\t\ttext: text,\n\t\t\tforceMoveMarkers: true,\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAsB,aAAa;AAsB5B,MAAM,cAAc;AAAA,EA5B3B,OA4B2B;AAAA;AAAA;AAAA,EAC1B,OAAc,OACb,UACA,MACuB;AACvB,WAAO;AAAA,MACN,OAAO,IAAI;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,MACV;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,IACnB;AAAA,EACD;AAAA,EAEA,OAAc,OAAO,OAAoC;AACxD,WAAO;AAAA,MACN;AAAA,MACA,MAAM;AAAA,IACP;AAAA,EACD;AAAA,EAEA,OAAc,QACb,OACA,MACuB;AACvB,WAAO;AAAA,MACN;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEA,OAAc,YACb,OACA,MACuB;AACvB,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,IACnB;AAAA,EACD;AACD;",
  "names": []
}
