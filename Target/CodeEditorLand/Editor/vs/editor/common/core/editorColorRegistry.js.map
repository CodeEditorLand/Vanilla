{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/core/editorColorRegistry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight, editorWarningBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', null, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hcDark: '#f38518', hcLight: contrastBorder }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hcDark: null, hcLight: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'));\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'));\n\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorPrimaryForeground = registerColor('editorMultiCursor.primary.foreground', editorCursorForeground, nls.localize('editorMultiCursorPrimaryForeground', 'Color of the primary editor cursor when multiple cursors are present.'));\nexport const editorMultiCursorPrimaryBackground = registerColor('editorMultiCursor.primary.background', editorCursorBackground, nls.localize('editorMultiCursorPrimaryBackground', 'The background color of the primary editor cursor when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorSecondaryForeground = registerColor('editorMultiCursor.secondary.foreground', editorCursorForeground, nls.localize('editorMultiCursorSecondaryForeground', 'Color of secondary editor cursors when multiple cursors are present.'));\nexport const editorMultiCursorSecondaryBackground = registerColor('editorMultiCursor.secondary.background', editorCursorBackground, nls.localize('editorMultiCursorSecondaryBackground', 'The background color of secondary editor cursors when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hcDark: '#e3e4e229', hcLight: '#CCCCCC' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\n\nexport const deprecatedEditorIndentGuides = registerColor('editorIndentGuide.background', editorWhitespaces, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'), false, nls.localize('deprecatedEditorIndentGuides', '\\'editorIndentGuide.background\\' is deprecated. Use \\'editorIndentGuide.background1\\' instead.'));\nexport const deprecatedEditorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', editorWhitespaces, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'), false, nls.localize('deprecatedEditorActiveIndentGuide', '\\'editorIndentGuide.activeBackground\\' is deprecated. Use \\'editorIndentGuide.activeBackground1\\' instead.'));\n\nexport const editorIndentGuide1 = registerColor('editorIndentGuide.background1', deprecatedEditorIndentGuides, nls.localize('editorIndentGuides1', 'Color of the editor indentation guides (1).'));\nexport const editorIndentGuide2 = registerColor('editorIndentGuide.background2', '#00000000', nls.localize('editorIndentGuides2', 'Color of the editor indentation guides (2).'));\nexport const editorIndentGuide3 = registerColor('editorIndentGuide.background3', '#00000000', nls.localize('editorIndentGuides3', 'Color of the editor indentation guides (3).'));\nexport const editorIndentGuide4 = registerColor('editorIndentGuide.background4', '#00000000', nls.localize('editorIndentGuides4', 'Color of the editor indentation guides (4).'));\nexport const editorIndentGuide5 = registerColor('editorIndentGuide.background5', '#00000000', nls.localize('editorIndentGuides5', 'Color of the editor indentation guides (5).'));\nexport const editorIndentGuide6 = registerColor('editorIndentGuide.background6', '#00000000', nls.localize('editorIndentGuides6', 'Color of the editor indentation guides (6).'));\n\nexport const editorActiveIndentGuide1 = registerColor('editorIndentGuide.activeBackground1', deprecatedEditorActiveIndentGuides, nls.localize('editorActiveIndentGuide1', 'Color of the active editor indentation guides (1).'));\nexport const editorActiveIndentGuide2 = registerColor('editorIndentGuide.activeBackground2', '#00000000', nls.localize('editorActiveIndentGuide2', 'Color of the active editor indentation guides (2).'));\nexport const editorActiveIndentGuide3 = registerColor('editorIndentGuide.activeBackground3', '#00000000', nls.localize('editorActiveIndentGuide3', 'Color of the active editor indentation guides (3).'));\nexport const editorActiveIndentGuide4 = registerColor('editorIndentGuide.activeBackground4', '#00000000', nls.localize('editorActiveIndentGuide4', 'Color of the active editor indentation guides (4).'));\nexport const editorActiveIndentGuide5 = registerColor('editorIndentGuide.activeBackground5', '#00000000', nls.localize('editorActiveIndentGuide5', 'Color of the active editor indentation guides (5).'));\nexport const editorActiveIndentGuide6 = registerColor('editorIndentGuide.activeBackground6', '#00000000', nls.localize('editorActiveIndentGuide6', 'Color of the active editor indentation guides (6).'));\n\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', deprecatedEditorActiveLineNumber, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorDimmedLineNumber = registerColor('editorLineNumber.dimmedForeground', null, nls.localize('editorDimmedLineNumber', 'Color of the final editor line when editor.renderFinalNewline is set to dimmed.'));\n\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorRuler', 'Color of the editor rulers.'));\n\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#919191', hcDark: '#999999', hcLight: '#292929' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\n\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hcDark: '#0064001a', hcLight: '#0000' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\n\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hcDark: '#7f7f7f4d', hcLight: '#666666' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler.'));\n\nexport const editorGutter = registerColor('editorGutter.background', editorBackground, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\n\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: contrastBorder }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\n\nexport const ghostTextBorder = registerColor('editorGhostText.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: Color.fromHex('#292929').transparent(0.8) }, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', { dark: Color.fromHex('#ffffff56'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', null, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\n\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', rulerRangeDefault, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\n\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', { dark: '#FFD700', light: '#0431FAFF', hcDark: '#FFD700', hcLight: '#0431FAFF' }, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', { dark: '#DA70D6', light: '#319331FF', hcDark: '#DA70D6', hcLight: '#319331FF' }, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', { dark: '#179FFF', light: '#7B3814FF', hcDark: '#87CEFA', hcLight: '#7B3814FF' }, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', '#00000000', nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', '#00000000', nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', '#00000000', nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\n\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', { dark: new Color(new RGBA(255, 18, 18, 0.8)), light: new Color(new RGBA(255, 18, 18, 0.8)), hcDark: 'new Color(new RGBA(255, 50, 50, 1))', hcLight: '#B5200D' }, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\n\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', '#00000000', nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', '#00000000', nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', '#00000000', nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', '#00000000', nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', '#00000000', nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', '#00000000', nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\n\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', '#00000000', nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', '#00000000', nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', '#00000000', nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', '#00000000', nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', '#00000000', nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', '#00000000', nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\n\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', editorWarningForeground, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\nexport const editorUnicodeHighlightBackground = registerColor('editorUnicodeHighlight.background', editorWarningBackground, nls.localize('editorUnicodeHighlight.background', 'Background color used to highlight unicode characters.'));\n\n\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n\tconst background = theme.getColor(editorBackground);\n\tconst lineHighlight = theme.getColor(editorLineHighlight);\n\tconst imeBackground = (lineHighlight && !lineHighlight.isTransparent() ? lineHighlight : background);\n\tif (imeBackground) {\n\t\tcollector.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${imeBackground}; }`);\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
