var h=(r=>(r[r.Flush=1]="Flush",r[r.LineChanged=2]="LineChanged",r[r.LinesDeleted=3]="LinesDeleted",r[r.LinesInserted=4]="LinesInserted",r[r.EOLChanged=5]="EOLChanged",r))(h||{});class b{changeType=1}class l{constructor(o,n,e,t,r){this.ownerId=o;this.lineNumber=n;this.column=e;this.options=t;this.order=r}static applyInjectedText(o,n){if(!n||n.length===0)return o;let e="",t=0;for(const r of n)e+=o.substring(t,r.column-1),t=r.column-1,e+=r.options.content;return e+=o.substring(t),e}static fromDecorations(o){const n=[];for(const e of o)e.options.before&&e.options.before.content.length>0&&n.push(new l(e.ownerId,e.range.startLineNumber,e.range.startColumn,e.options.before,0)),e.options.after&&e.options.after.content.length>0&&n.push(new l(e.ownerId,e.range.endLineNumber,e.range.endColumn,e.options.after,1));return n.sort((e,t)=>e.lineNumber===t.lineNumber?e.column===t.column?e.order-t.order:e.column-t.column:e.lineNumber-t.lineNumber),n}withText(o){return new l(this.ownerId,this.lineNumber,this.column,{...this.options,content:o},this.order)}}class p{changeType=2;lineNumber;detail;injectedText;constructor(o,n,e){this.lineNumber=o,this.detail=n,this.injectedText=e}}class m{changeType=3;fromLineNumber;toLineNumber;constructor(o,n){this.fromLineNumber=o,this.toLineNumber=n}}class y{changeType=4;fromLineNumber;toLineNumber;detail;injectedTexts;constructor(o,n,e,t){this.injectedTexts=t,this.fromLineNumber=o,this.toLineNumber=n,this.detail=e}}class C{changeType=5}class d{changes;versionId;isUndoing;isRedoing;resultingSelection;constructor(o,n,e,t){this.changes=o,this.versionId=n,this.isUndoing=e,this.isRedoing=t,this.resultingSelection=null}containsEvent(o){for(let n=0,e=this.changes.length;n<e;n++)if(this.changes[n].changeType===o)return!0;return!1}static merge(o,n){const e=[].concat(o.changes).concat(n.changes),t=n.versionId,r=o.isUndoing||n.isUndoing,a=o.isRedoing||n.isRedoing;return new d(e,t,r,a)}}class f{changes;constructor(o){this.changes=o}}class s{constructor(o,n){this.rawContentChangedEvent=o;this.contentChangedEvent=n}merge(o){const n=d.merge(this.rawContentChangedEvent,o.rawContentChangedEvent),e=s._mergeChangeEvents(this.contentChangedEvent,o.contentChangedEvent);return new s(n,e)}static _mergeChangeEvents(o,n){const e=[].concat(o.changes).concat(n.changes),t=n.eol,r=n.versionId,a=o.isUndoing||n.isUndoing,c=o.isRedoing||n.isRedoing,u=o.isFlush||n.isFlush,g=o.isEolChange&&n.isEolChange;return{changes:e,eol:t,isEolChange:g,versionId:r,isUndoing:a,isRedoing:c,isFlush:u}}}export{s as InternalModelContentChangeEvent,l as LineInjectedText,f as ModelInjectedTextChangedEvent,d as ModelRawContentChangedEvent,C as ModelRawEOLChanged,b as ModelRawFlush,p as ModelRawLineChanged,m as ModelRawLinesDeleted,y as ModelRawLinesInserted,h as RawContentChangedType};
