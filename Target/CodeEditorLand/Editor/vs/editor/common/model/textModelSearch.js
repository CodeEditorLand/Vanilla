import{CharCode as d}from"../../../base/common/charCode.js";import*as F from"../../../base/common/strings.js";import{Position as m}from"../core/position.js";import{Range as g}from"../core/range.js";import{WordCharacterClass as p,getMapForWordSeparators as I}from"../core/wordCharacterClassifier.js";import{EndOfLinePreference as _,FindMatch as C,SearchData as N}from"../model.js";const y=999;class q{searchString;isRegex;matchCase;wordSeparators;constructor(e,n,t,i){this.searchString=e,this.isRegex=n,this.matchCase=t,this.wordSeparators=i}parseSearchRequest(){if(this.searchString==="")return null;let e;this.isRegex?e=P(this.searchString):e=this.searchString.indexOf(`
`)>=0;let n=null;try{n=F.createRegExp(this.searchString,this.isRegex,{matchCase:this.matchCase,wholeWord:!1,multiline:e,global:!0,unicode:!0})}catch{return null}if(!n)return null;let t=!this.isRegex&&!e;return t&&this.searchString.toLowerCase()!==this.searchString.toUpperCase()&&(t=this.matchCase),new N(n,this.wordSeparators?I(this.wordSeparators,[]):null,t?this.searchString:null)}}function P(u){if(!u||u.length===0)return!1;for(let e=0,n=u.length;e<n;e++){const t=u.charCodeAt(e);if(t===d.LineFeed)return!0;if(t===d.Backslash){if(e++,e>=n)break;const i=u.charCodeAt(e);if(i===d.n||i===d.r||i===d.W)return!0}}return!1}function M(u,e,n){if(!n)return new C(u,null);const t=[];for(let i=0,r=e.length;i<r;i++)t[i]=e[i];return new C(u,t)}class S{_lineFeedsOffsets;constructor(e){const n=[];let t=0;for(let i=0,r=e.length;i<r;i++)e.charCodeAt(i)===d.LineFeed&&(n[t++]=i);this._lineFeedsOffsets=n}findLineFeedCountBeforeOffset(e){const n=this._lineFeedsOffsets;let t=0,i=n.length-1;if(i===-1||e<=n[0])return 0;for(;t<i;){const r=t+((i-t)/2>>0);n[r]>=e?i=r-1:n[r+1]>=e?(t=r,i=r):t=r+1}return t+1}}class U{static findMatches(e,n,t,i,r){const o=n.parseSearchRequest();return o?o.regex.multiline?this._doFindMatchesMultiline(e,t,new L(o.wordSeparators,o.regex),i,r):this._doFindMatchesLineByLine(e,t,o,i,r):[]}static _getMultilineMatchRange(e,n,t,i,r,o){let s,a=0;i?(a=i.findLineFeedCountBeforeOffset(r),s=n+r+a):s=n+r;let l;if(i){const x=i.findLineFeedCountBeforeOffset(r+o.length)-a;l=s+o.length+x}else l=s+o.length;const c=e.getPositionAt(s),h=e.getPositionAt(l);return new g(c.lineNumber,c.column,h.lineNumber,h.column)}static _doFindMatchesMultiline(e,n,t,i,r){const o=e.getOffsetAt(n.getStartPosition()),s=e.getValueInRange(n,_.LF),a=e.getEOL()===`\r
`?new S(s):null,l=[];let c=0,h;for(t.reset(0);h=t.next(s);)if(l[c++]=M(this._getMultilineMatchRange(e,o,s,a,h.index,h[0]),h,i),c>=r)return l;return l}static _doFindMatchesLineByLine(e,n,t,i,r){const o=[];let s=0;if(n.startLineNumber===n.endLineNumber){const l=e.getLineContent(n.startLineNumber).substring(n.startColumn-1,n.endColumn-1);return s=this._findMatchesInLine(t,l,n.startLineNumber,n.startColumn-1,s,o,i,r),o}const a=e.getLineContent(n.startLineNumber).substring(n.startColumn-1);s=this._findMatchesInLine(t,a,n.startLineNumber,n.startColumn-1,s,o,i,r);for(let l=n.startLineNumber+1;l<n.endLineNumber&&s<r;l++)s=this._findMatchesInLine(t,e.getLineContent(l),l,0,s,o,i,r);if(s<r){const l=e.getLineContent(n.endLineNumber).substring(0,n.endColumn-1);s=this._findMatchesInLine(t,l,n.endLineNumber,0,s,o,i,r)}return o}static _findMatchesInLine(e,n,t,i,r,o,s,a){const l=e.wordSeparators;if(!s&&e.simpleSearch){const f=e.simpleSearch,x=f.length,v=n.length;let b=-x;for(;(b=n.indexOf(f,b+x))!==-1;)if((!l||w(l,n,v,b,x))&&(o[r++]=new C(new g(t,b+1+i,t,b+1+x+i),null),r>=a))return r;return r}const c=new L(e.wordSeparators,e.regex);let h;c.reset(0);do if(h=c.next(n),h&&(o[r++]=M(new g(t,h.index+1+i,t,h.index+1+h[0].length+i),h,s),r>=a))return r;while(h);return r}static findNextMatch(e,n,t,i){const r=n.parseSearchRequest();if(!r)return null;const o=new L(r.wordSeparators,r.regex);return r.regex.multiline?this._doFindNextMatchMultiline(e,t,o,i):this._doFindNextMatchLineByLine(e,t,o,i)}static _doFindNextMatchMultiline(e,n,t,i){const r=new m(n.lineNumber,1),o=e.getOffsetAt(r),s=e.getLineCount(),a=e.getValueInRange(new g(r.lineNumber,r.column,s,e.getLineMaxColumn(s)),_.LF),l=e.getEOL()===`\r
`?new S(a):null;t.reset(n.column-1);const c=t.next(a);return c?M(this._getMultilineMatchRange(e,o,a,l,c.index,c[0]),c,i):n.lineNumber!==1||n.column!==1?this._doFindNextMatchMultiline(e,new m(1,1),t,i):null}static _doFindNextMatchLineByLine(e,n,t,i){const r=e.getLineCount(),o=n.lineNumber,s=e.getLineContent(o),a=this._findFirstMatchInLine(t,s,o,n.column,i);if(a)return a;for(let l=1;l<=r;l++){const c=(o+l-1)%r,h=e.getLineContent(c+1),f=this._findFirstMatchInLine(t,h,c+1,1,i);if(f)return f}return null}static _findFirstMatchInLine(e,n,t,i,r){e.reset(i-1);const o=e.next(n);return o?M(new g(t,o.index+1,t,o.index+1+o[0].length),o,r):null}static findPreviousMatch(e,n,t,i){const r=n.parseSearchRequest();if(!r)return null;const o=new L(r.wordSeparators,r.regex);return r.regex.multiline?this._doFindPreviousMatchMultiline(e,t,o,i):this._doFindPreviousMatchLineByLine(e,t,o,i)}static _doFindPreviousMatchMultiline(e,n,t,i){const r=this._doFindMatchesMultiline(e,new g(1,1,n.lineNumber,n.column),t,i,10*y);if(r.length>0)return r[r.length-1];const o=e.getLineCount();return n.lineNumber!==o||n.column!==e.getLineMaxColumn(o)?this._doFindPreviousMatchMultiline(e,new m(o,e.getLineMaxColumn(o)),t,i):null}static _doFindPreviousMatchLineByLine(e,n,t,i){const r=e.getLineCount(),o=n.lineNumber,s=e.getLineContent(o).substring(0,n.column-1),a=this._findLastMatchInLine(t,s,o,i);if(a)return a;for(let l=1;l<=r;l++){const c=(r+o-l-1)%r,h=e.getLineContent(c+1),f=this._findLastMatchInLine(t,h,c+1,i);if(f)return f}return null}static _findLastMatchInLine(e,n,t,i){let r=null,o;for(e.reset(0);o=e.next(n);)r=M(new g(t,o.index+1,t,o.index+1+o[0].length),o,i);return r}}function E(u,e,n,t,i){if(t===0)return!0;const r=e.charCodeAt(t-1);if(u.get(r)!==p.Regular||r===d.CarriageReturn||r===d.LineFeed)return!0;if(i>0){const o=e.charCodeAt(t);if(u.get(o)!==p.Regular)return!0}return!1}function R(u,e,n,t,i){if(t+i===n)return!0;const r=e.charCodeAt(t+i);if(u.get(r)!==p.Regular||r===d.CarriageReturn||r===d.LineFeed)return!0;if(i>0){const o=e.charCodeAt(t+i-1);if(u.get(o)!==p.Regular)return!0}return!1}function w(u,e,n,t,i){return E(u,e,n,t,i)&&R(u,e,n,t,i)}class L{_wordSeparators;_searchRegex;_prevMatchStartIndex;_prevMatchLength;constructor(e,n){this._wordSeparators=e,this._searchRegex=n,this._prevMatchStartIndex=-1,this._prevMatchLength=0}reset(e){this._searchRegex.lastIndex=e,this._prevMatchStartIndex=-1,this._prevMatchLength=0}next(e){const n=e.length;let t;do{if(this._prevMatchStartIndex+this._prevMatchLength===n||(t=this._searchRegex.exec(e),!t))return null;const i=t.index,r=t[0].length;if(i===this._prevMatchStartIndex&&r===this._prevMatchLength){if(r===0){F.getNextCodePoint(e,n,this._searchRegex.lastIndex)>65535?this._searchRegex.lastIndex+=2:this._searchRegex.lastIndex+=1;continue}return null}if(this._prevMatchStartIndex=i,this._prevMatchLength=r,!this._wordSeparators||w(this._wordSeparators,e,n,i,r))return t}while(t);return null}}export{q as SearchParams,L as Searcher,U as TextModelSearch,M as createFindMatch,P as isMultilineRegexSource,w as isValidMatch};
