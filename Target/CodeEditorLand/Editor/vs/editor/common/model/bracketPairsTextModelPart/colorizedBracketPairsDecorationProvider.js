import{Emitter as d}from"../../../../base/common/event.js";import{Disposable as g}from"../../../../base/common/lifecycle.js";import{registerThemingParticipant as c}from"../../../../platform/theme/common/themeService.js";import{editorBracketHighlightingForeground1 as p,editorBracketHighlightingForeground2 as m,editorBracketHighlightingForeground3 as h,editorBracketHighlightingForeground4 as u,editorBracketHighlightingForeground5 as C,editorBracketHighlightingForeground6 as f,editorBracketHighlightingUnexpectedBracketForeground as v}from"../../core/editorColorRegistry.js";import{Range as k}from"../../core/range.js";class b extends g{constructor(e){super();this.textModel=e;this.colorizationOptions=e.getOptions().bracketPairColorizationOptions,this._register(e.bracketPairs.onDidChange(r=>{this.onDidChangeEmitter.fire()}))}colorizationOptions;colorProvider=new s;onDidChangeEmitter=new d;onDidChange=this.onDidChangeEmitter.event;handleDidChangeOptions(e){this.colorizationOptions=this.textModel.getOptions().bracketPairColorizationOptions}getDecorationsInRange(e,r,a,o){return o?[]:r===void 0?[]:this.colorizationOptions.enabled?this.textModel.bracketPairs.getBracketsInRange(e,!0).map(n=>({id:`bracket${n.range.toString()}-${n.nestingLevel}`,options:{description:"BracketPairColorization",inlineClassName:this.colorProvider.getInlineClassName(n,this.colorizationOptions.independentColorPoolPerBracketType)},ownerId:0,range:n.range})).toArray():[]}getAllDecorations(e,r){return e===void 0?[]:this.colorizationOptions.enabled?this.getDecorationsInRange(new k(1,1,this.textModel.getLineCount(),1),e,r):[]}}class s{unexpectedClosingBracketClassName="unexpected-closing-bracket";getInlineClassName(t,e){return t.isInvalid?this.unexpectedClosingBracketClassName:this.getInlineClassNameOfLevel(e?t.nestingLevelOfEqualBracketType:t.nestingLevel)}getInlineClassNameOfLevel(t){return`bracket-highlighting-${t%30}`}}c((i,t)=>{const e=[p,m,h,u,C,f],r=new s;t.addRule(`.monaco-editor .${r.unexpectedClosingBracketClassName} { color: ${i.getColor(v)}; }`);const a=e.map(o=>i.getColor(o)).filter(o=>!!o).filter(o=>!o.isTransparent());for(let o=0;o<30;o++){const l=a[o%a.length];t.addRule(`.monaco-editor .${r.getInlineClassNameOfLevel(o)} { color: ${l}; }`)}});export{b as ColorizedBracketPairsDecorationProvider};
