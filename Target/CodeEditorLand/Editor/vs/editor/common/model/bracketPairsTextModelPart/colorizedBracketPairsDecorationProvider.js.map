{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/model/bracketPairsTextModelPart/colorizedBracketPairsDecorationProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Color } from \"../../../../base/common/color.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { registerThemingParticipant } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\teditorBracketHighlightingForeground1,\n\teditorBracketHighlightingForeground2,\n\teditorBracketHighlightingForeground3,\n\teditorBracketHighlightingForeground4,\n\teditorBracketHighlightingForeground5,\n\teditorBracketHighlightingForeground6,\n\teditorBracketHighlightingUnexpectedBracketForeground,\n} from \"../../core/editorColorRegistry.js\";\nimport { Range } from \"../../core/range.js\";\nimport type {\n\tBracketPairColorizationOptions,\n\tIModelDecoration,\n} from \"../../model.js\";\nimport type { BracketInfo } from \"../../textModelBracketPairs.js\";\nimport type { IModelOptionsChangedEvent } from \"../../textModelEvents.js\";\nimport type { DecorationProvider } from \"../decorationProvider.js\";\nimport type { TextModel } from \"../textModel.js\";\n\nexport class ColorizedBracketPairsDecorationProvider\n\textends Disposable\n\timplements DecorationProvider\n{\n\tprivate colorizationOptions: BracketPairColorizationOptions;\n\tprivate readonly colorProvider = new ColorProvider();\n\n\tprivate readonly onDidChangeEmitter = new Emitter<void>();\n\tpublic readonly onDidChange = this.onDidChangeEmitter.event;\n\n\tconstructor(private readonly textModel: TextModel) {\n\t\tsuper();\n\n\t\tthis.colorizationOptions =\n\t\t\ttextModel.getOptions().bracketPairColorizationOptions;\n\n\t\tthis._register(\n\t\t\ttextModel.bracketPairs.onDidChange((e) => {\n\t\t\t\tthis.onDidChangeEmitter.fire();\n\t\t\t}),\n\t\t);\n\t}\n\n\t//#region TextModel events\n\n\tpublic handleDidChangeOptions(e: IModelOptionsChangedEvent): void {\n\t\tthis.colorizationOptions =\n\t\t\tthis.textModel.getOptions().bracketPairColorizationOptions;\n\t}\n\n\t//#endregion\n\n\tgetDecorationsInRange(\n\t\trange: Range,\n\t\townerId?: number,\n\t\tfilterOutValidation?: boolean,\n\t\tonlyMinimapDecorations?: boolean,\n\t): IModelDecoration[] {\n\t\tif (onlyMinimapDecorations) {\n\t\t\t// Bracket pair colorization decorations are not rendered in the minimap\n\t\t\treturn [];\n\t\t}\n\t\tif (ownerId === undefined) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this.colorizationOptions.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result = this.textModel.bracketPairs\n\t\t\t.getBracketsInRange(range, true)\n\t\t\t.map<IModelDecoration>((bracket) => ({\n\t\t\t\tid: `bracket${bracket.range.toString()}-${bracket.nestingLevel}`,\n\t\t\t\toptions: {\n\t\t\t\t\tdescription: \"BracketPairColorization\",\n\t\t\t\t\tinlineClassName: this.colorProvider.getInlineClassName(\n\t\t\t\t\t\tbracket,\n\t\t\t\t\t\tthis.colorizationOptions\n\t\t\t\t\t\t\t.independentColorPoolPerBracketType,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\townerId: 0,\n\t\t\t\trange: bracket.range,\n\t\t\t}))\n\t\t\t.toArray();\n\n\t\treturn result;\n\t}\n\n\tgetAllDecorations(\n\t\townerId?: number,\n\t\tfilterOutValidation?: boolean,\n\t): IModelDecoration[] {\n\t\tif (ownerId === undefined) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this.colorizationOptions.enabled) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.getDecorationsInRange(\n\t\t\tnew Range(1, 1, this.textModel.getLineCount(), 1),\n\t\t\townerId,\n\t\t\tfilterOutValidation,\n\t\t);\n\t}\n}\n\nclass ColorProvider {\n\tpublic readonly unexpectedClosingBracketClassName =\n\t\t\"unexpected-closing-bracket\";\n\n\tgetInlineClassName(\n\t\tbracket: BracketInfo,\n\t\tindependentColorPoolPerBracketType: boolean,\n\t): string {\n\t\tif (bracket.isInvalid) {\n\t\t\treturn this.unexpectedClosingBracketClassName;\n\t\t}\n\t\treturn this.getInlineClassNameOfLevel(\n\t\t\tindependentColorPoolPerBracketType\n\t\t\t\t? bracket.nestingLevelOfEqualBracketType\n\t\t\t\t: bracket.nestingLevel,\n\t\t);\n\t}\n\n\tgetInlineClassNameOfLevel(level: number): string {\n\t\t// To support a dynamic amount of colors up to 6 colors,\n\t\t// we use a number that is a lcm of all numbers from 1 to 6.\n\t\treturn `bracket-highlighting-${level % 30}`;\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst colors = [\n\t\teditorBracketHighlightingForeground1,\n\t\teditorBracketHighlightingForeground2,\n\t\teditorBracketHighlightingForeground3,\n\t\teditorBracketHighlightingForeground4,\n\t\teditorBracketHighlightingForeground5,\n\t\teditorBracketHighlightingForeground6,\n\t];\n\tconst colorProvider = new ColorProvider();\n\n\tcollector.addRule(\n\t\t`.monaco-editor .${colorProvider.unexpectedClosingBracketClassName} { color: ${theme.getColor(editorBracketHighlightingUnexpectedBracketForeground)}; }`,\n\t);\n\n\tconst colorValues = colors\n\t\t.map((c) => theme.getColor(c))\n\t\t.filter((c): c is Color => !!c)\n\t\t.filter((c) => !c.isTransparent());\n\n\tfor (let level = 0; level < 30; level++) {\n\t\tconst color = colorValues[level % colorValues.length];\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level)} { color: ${color}; }`,\n\t\t);\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
