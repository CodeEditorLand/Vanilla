{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/model/mirrorTextModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { splitLines } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { IRange } from '../core/range.js';\nimport { IModelContentChange } from '../textModelEvents.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\treadonly isUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\treadonly isRedoing: boolean;\n}\n\nexport interface IMirrorTextModel {\n\treadonly version: number;\n}\n\nexport class MirrorTextModel implements IMirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\tprivate _cachedTextValue: string | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\tif (this._cachedTextValue === null) {\n\t\t\tthis._cachedTextValue = this._lines.join(this._eol);\n\t\t}\n\t\treturn this._cachedTextValue;\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tconst insertLines = splitLines(insertText);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tconst newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
