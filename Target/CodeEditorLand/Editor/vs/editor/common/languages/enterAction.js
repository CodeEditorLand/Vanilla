import"../../../../vs/editor/common/config/editorOptions.js";import"../../../../vs/editor/common/core/range.js";import{IndentAction as c}from"../../../../vs/editor/common/languages/languageConfiguration.js";import{getIndentationAtPosition as T}from"../../../../vs/editor/common/languages/languageConfigurationRegistry.js";import{IndentationContextProcessor as l}from"../../../../vs/editor/common/languages/supports/indentationLineProcessor.js";import"../../../../vs/editor/common/model.js";function h(g,n,t,d){n.tokenization.forceTokenization(t.startLineNumber);const f=n.getLanguageIdAtPosition(t.startLineNumber,t.startColumn),u=d.getLanguageConfiguration(f);if(!u)return null;const s=new l(n,d).getProcessedTokenContextAroundRange(t),p=s.previousLineProcessedTokens.getLineContent(),m=s.beforeRangeProcessedTokens.getLineContent(),x=s.afterRangeProcessedTokens.getLineContent(),o=u.onEnter(g,p,m,x);if(!o)return null;const i=o.indentAction;let e=o.appendText;const a=o.removeText||0;e?i===c.Indent&&(e="	"+e):i===c.Indent||i===c.IndentOutdent?e="	":e="";let r=T(n,t.startLineNumber,t.startColumn);return a&&(r=r.substring(0,r.length-a)),{indentAction:i,appendText:e,removeText:a,indentation:r}}export{h as getEnterAction};
