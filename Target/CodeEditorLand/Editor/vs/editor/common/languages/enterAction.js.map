{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/languages/enterAction.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { EditorAutoIndentStrategy } from \"../config/editorOptions.js\";\nimport type { Range } from \"../core/range.js\";\nimport type { ITextModel } from \"../model.js\";\nimport {\n\ttype CompleteEnterAction,\n\tIndentAction,\n} from \"./languageConfiguration.js\";\nimport {\n\ttype ILanguageConfigurationService,\n\tgetIndentationAtPosition,\n} from \"./languageConfigurationRegistry.js\";\nimport { IndentationContextProcessor } from \"./supports/indentationLineProcessor.js\";\n\nexport function getEnterAction(\n\tautoIndent: EditorAutoIndentStrategy,\n\tmodel: ITextModel,\n\trange: Range,\n\tlanguageConfigurationService: ILanguageConfigurationService,\n): CompleteEnterAction | null {\n\tmodel.tokenization.forceTokenization(range.startLineNumber);\n\tconst languageId = model.getLanguageIdAtPosition(\n\t\trange.startLineNumber,\n\t\trange.startColumn,\n\t);\n\tconst richEditSupport =\n\t\tlanguageConfigurationService.getLanguageConfiguration(languageId);\n\tif (!richEditSupport) {\n\t\treturn null;\n\t}\n\tconst indentationContextProcessor = new IndentationContextProcessor(\n\t\tmodel,\n\t\tlanguageConfigurationService,\n\t);\n\tconst processedContextTokens =\n\t\tindentationContextProcessor.getProcessedTokenContextAroundRange(range);\n\tconst previousLineText =\n\t\tprocessedContextTokens.previousLineProcessedTokens.getLineContent();\n\tconst beforeEnterText =\n\t\tprocessedContextTokens.beforeRangeProcessedTokens.getLineContent();\n\tconst afterEnterText =\n\t\tprocessedContextTokens.afterRangeProcessedTokens.getLineContent();\n\n\tconst enterResult = richEditSupport.onEnter(\n\t\tautoIndent,\n\t\tpreviousLineText,\n\t\tbeforeEnterText,\n\t\tafterEnterText,\n\t);\n\tif (!enterResult) {\n\t\treturn null;\n\t}\n\n\tconst indentAction = enterResult.indentAction;\n\tlet appendText = enterResult.appendText;\n\tconst removeText = enterResult.removeText || 0;\n\n\t// Here we add `\\t` to appendText first because enterAction is leveraging appendText and removeText to change indentation.\n\tif (!appendText) {\n\t\tif (\n\t\t\tindentAction === IndentAction.Indent ||\n\t\t\tindentAction === IndentAction.IndentOutdent\n\t\t) {\n\t\t\tappendText = \"\\t\";\n\t\t} else {\n\t\t\tappendText = \"\";\n\t\t}\n\t} else if (indentAction === IndentAction.Indent) {\n\t\tappendText = \"\\t\" + appendText;\n\t}\n\n\tlet indentation = getIndentationAtPosition(\n\t\tmodel,\n\t\trange.startLineNumber,\n\t\trange.startColumn,\n\t);\n\tif (removeText) {\n\t\tindentation = indentation.substring(0, indentation.length - removeText);\n\t}\n\n\treturn {\n\t\tindentAction: indentAction,\n\t\tappendText: appendText,\n\t\tremoveText: removeText,\n\t\tindentation: indentation,\n\t};\n}\n"],
  "mappings": ";;AAQA;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EAEC;AAAA,OACM;AACP,SAAS,mCAAmC;AAErC,SAAS,eACf,YACA,OACA,OACA,8BAC6B;AAC7B,QAAM,aAAa,kBAAkB,MAAM,eAAe;AAC1D,QAAM,aAAa,MAAM;AAAA,IACxB,MAAM;AAAA,IACN,MAAM;AAAA,EACP;AACA,QAAM,kBACL,6BAA6B,yBAAyB,UAAU;AACjE,MAAI,CAAC,iBAAiB;AACrB,WAAO;AAAA,EACR;AACA,QAAM,8BAA8B,IAAI;AAAA,IACvC;AAAA,IACA;AAAA,EACD;AACA,QAAM,yBACL,4BAA4B,oCAAoC,KAAK;AACtE,QAAM,mBACL,uBAAuB,4BAA4B,eAAe;AACnE,QAAM,kBACL,uBAAuB,2BAA2B,eAAe;AAClE,QAAM,iBACL,uBAAuB,0BAA0B,eAAe;AAEjE,QAAM,cAAc,gBAAgB;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACA,MAAI,CAAC,aAAa;AACjB,WAAO;AAAA,EACR;AAEA,QAAM,eAAe,YAAY;AACjC,MAAI,aAAa,YAAY;AAC7B,QAAM,aAAa,YAAY,cAAc;AAG7C,MAAI,CAAC,YAAY;AAChB,QACC,iBAAiB,aAAa,UAC9B,iBAAiB,aAAa,eAC7B;AACD,mBAAa;AAAA,IACd,OAAO;AACN,mBAAa;AAAA,IACd;AAAA,EACD,WAAW,iBAAiB,aAAa,QAAQ;AAChD,iBAAa,MAAO;AAAA,EACrB;AAEA,MAAI,cAAc;AAAA,IACjB;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACP;AACA,MAAI,YAAY;AACf,kBAAc,YAAY,UAAU,GAAG,YAAY,SAAS,UAAU;AAAA,EACvE;AAEA,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;AAxEgB;",
  "names": []
}
