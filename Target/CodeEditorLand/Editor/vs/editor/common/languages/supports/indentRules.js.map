{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/languages/supports/indentRules.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IndentationRule } from '../languageConfiguration.js';\n\nexport const enum IndentConsts {\n\tINCREASE_MASK = 0b00000001,\n\tDECREASE_MASK = 0b00000010,\n\tINDENT_NEXTLINE_MASK = 0b00000100,\n\tUNINDENT_MASK = 0b00001000,\n}\n\nfunction resetGlobalRegex(reg: RegExp) {\n\tif (reg.global) {\n\t\treg.lastIndex = 0;\n\t}\n\n\treturn true;\n}\n\nexport class IndentRulesSupport {\n\n\tprivate readonly _indentationRules: IndentationRule;\n\n\tconstructor(indentationRules: IndentationRule) {\n\t\tthis._indentationRules = indentationRules;\n\t}\n\n\tpublic shouldIncrease(text: string): boolean {\n\t\tif (this._indentationRules) {\n\t\t\tif (this._indentationRules.increaseIndentPattern && resetGlobalRegex(this._indentationRules.increaseIndentPattern) && this._indentationRules.increaseIndentPattern.test(text)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n\t\t\t// \treturn true;\n\t\t\t// }\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic shouldDecrease(text: string): boolean {\n\t\tif (this._indentationRules && this._indentationRules.decreaseIndentPattern && resetGlobalRegex(this._indentationRules.decreaseIndentPattern) && this._indentationRules.decreaseIndentPattern.test(text)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic shouldIndentNextLine(text: string): boolean {\n\t\tif (this._indentationRules && this._indentationRules.indentNextLinePattern && resetGlobalRegex(this._indentationRules.indentNextLinePattern) && this._indentationRules.indentNextLinePattern.test(text)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic shouldIgnore(text: string): boolean {\n\t\t// the text matches `unIndentedLinePattern`\n\t\tif (this._indentationRules && this._indentationRules.unIndentedLinePattern && resetGlobalRegex(this._indentationRules.unIndentedLinePattern) && this._indentationRules.unIndentedLinePattern.test(text)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getIndentMetadata(text: string): number {\n\t\tlet ret = 0;\n\t\tif (this.shouldIncrease(text)) {\n\t\t\tret += IndentConsts.INCREASE_MASK;\n\t\t}\n\t\tif (this.shouldDecrease(text)) {\n\t\t\tret += IndentConsts.DECREASE_MASK;\n\t\t}\n\t\tif (this.shouldIndentNextLine(text)) {\n\t\t\tret += IndentConsts.INDENT_NEXTLINE_MASK;\n\t\t}\n\t\tif (this.shouldIgnore(text)) {\n\t\t\tret += IndentConsts.UNINDENT_MASK;\n\t\t}\n\t\treturn ret;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAEzB,IAAW,eAAX,kBAAWA,kBAAX;AACN,EAAAA,4BAAA,mBAAgB,KAAhB;AACA,EAAAA,4BAAA,mBAAgB,KAAhB;AACA,EAAAA,4BAAA,0BAAuB,KAAvB;AACA,EAAAA,4BAAA,mBAAgB,KAAhB;AAJiB,SAAAA;AAAA,GAAA;AAOlB,SAAS,iBAAiB,KAAa;AACtC,MAAI,IAAI,QAAQ;AACf,QAAI,YAAY;AAAA,EACjB;AAEA,SAAO;AACR;AANS;AAQF,MAAM,mBAAmB;AAAA,EAtBhC,OAsBgC;AAAA;AAAA;AAAA,EAEd;AAAA,EAEjB,YAAY,kBAAmC;AAC9C,SAAK,oBAAoB;AAAA,EAC1B;AAAA,EAEO,eAAe,MAAuB;AAC5C,QAAI,KAAK,mBAAmB;AAC3B,UAAI,KAAK,kBAAkB,yBAAyB,iBAAiB,KAAK,kBAAkB,qBAAqB,KAAK,KAAK,kBAAkB,sBAAsB,KAAK,IAAI,GAAG;AAC9K,eAAO;AAAA,MACR;AAAA,IAID;AACA,WAAO;AAAA,EACR;AAAA,EAEO,eAAe,MAAuB;AAC5C,QAAI,KAAK,qBAAqB,KAAK,kBAAkB,yBAAyB,iBAAiB,KAAK,kBAAkB,qBAAqB,KAAK,KAAK,kBAAkB,sBAAsB,KAAK,IAAI,GAAG;AACxM,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEO,qBAAqB,MAAuB;AAClD,QAAI,KAAK,qBAAqB,KAAK,kBAAkB,yBAAyB,iBAAiB,KAAK,kBAAkB,qBAAqB,KAAK,KAAK,kBAAkB,sBAAsB,KAAK,IAAI,GAAG;AACxM,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA,EAEO,aAAa,MAAuB;AAE1C,QAAI,KAAK,qBAAqB,KAAK,kBAAkB,yBAAyB,iBAAiB,KAAK,kBAAkB,qBAAqB,KAAK,KAAK,kBAAkB,sBAAsB,KAAK,IAAI,GAAG;AACxM,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA,EAEO,kBAAkB,MAAsB;AAC9C,QAAI,MAAM;AACV,QAAI,KAAK,eAAe,IAAI,GAAG;AAC9B,aAAO;AAAA,IACR;AACA,QAAI,KAAK,eAAe,IAAI,GAAG;AAC9B,aAAO;AAAA,IACR;AACA,QAAI,KAAK,qBAAqB,IAAI,GAAG;AACpC,aAAO;AAAA,IACR;AACA,QAAI,KAAK,aAAa,IAAI,GAAG;AAC5B,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AACD;",
  "names": ["IndentConsts"]
}
