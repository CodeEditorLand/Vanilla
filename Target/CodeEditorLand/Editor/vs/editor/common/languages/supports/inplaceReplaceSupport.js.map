{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/languages/supports/inplaceReplaceSupport.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IRange } from \"../../core/range.js\";\nimport type { IInplaceReplaceSupportResult } from \"../../languages.js\";\n\nexport class BasicInplaceReplace {\n\tpublic static readonly INSTANCE = new BasicInplaceReplace();\n\n\tpublic navigateValueSet(\n\t\trange1: IRange,\n\t\ttext1: string,\n\t\trange2: IRange,\n\t\ttext2: string | null,\n\t\tup: boolean,\n\t): IInplaceReplaceSupportResult | null {\n\t\tif (range1 && text1) {\n\t\t\tconst result = this.doNavigateValueSet(text1, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range1,\n\t\t\t\t\tvalue: result,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (range2 && text2) {\n\t\t\tconst result = this.doNavigateValueSet(text2, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range2,\n\t\t\t\t\tvalue: result,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doNavigateValueSet(text: string, up: boolean): string | null {\n\t\tconst numberResult = this.numberReplace(text, up);\n\t\tif (numberResult !== null) {\n\t\t\treturn numberResult;\n\t\t}\n\t\treturn this.textReplace(text, up);\n\t}\n\n\tprivate numberReplace(value: string, up: boolean): string | null {\n\t\tconst precision = Math.pow(\n\t\t\t10,\n\t\t\tvalue.length - (value.lastIndexOf(\".\") + 1),\n\t\t);\n\t\tlet n1 = Number(value);\n\t\tconst n2 = Number.parseFloat(value);\n\n\t\tif (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n\t\t\tif (n1 === 0 && !up) {\n\t\t\t\treturn null; // don't do negative\n\t\t\t\t//\t\t\t} else if(n1 === 9 && up) {\n\t\t\t\t//\t\t\t\treturn null; // don't insert 10 into a number\n\t\t\t} else {\n\t\t\t\tn1 = Math.floor(n1 * precision);\n\t\t\t\tn1 += up ? precision : -precision;\n\t\t\t\treturn String(n1 / precision);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate readonly _defaultValueSet: string[][] = [\n\t\t[\"true\", \"false\"],\n\t\t[\"True\", \"False\"],\n\t\t[\n\t\t\t\"Private\",\n\t\t\t\"Public\",\n\t\t\t\"Friend\",\n\t\t\t\"ReadOnly\",\n\t\t\t\"Partial\",\n\t\t\t\"Protected\",\n\t\t\t\"WriteOnly\",\n\t\t],\n\t\t[\"public\", \"protected\", \"private\"],\n\t];\n\n\tprivate textReplace(value: string, up: boolean): string | null {\n\t\treturn this.valueSetsReplace(this._defaultValueSet, value, up);\n\t}\n\n\tprivate valueSetsReplace(\n\t\tvalueSets: string[][],\n\t\tvalue: string,\n\t\tup: boolean,\n\t): string | null {\n\t\tlet result: string | null = null;\n\t\tfor (\n\t\t\tlet i = 0, len = valueSets.length;\n\t\t\tresult === null && i < len;\n\t\t\ti++\n\t\t) {\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate valueSetReplace(\n\t\tvalueSet: string[],\n\t\tvalue: string,\n\t\tup: boolean,\n\t): string | null {\n\t\tlet idx = valueSet.indexOf(value);\n\t\tif (idx >= 0) {\n\t\t\tidx += up ? +1 : -1;\n\t\t\tif (idx < 0) {\n\t\t\t\tidx = valueSet.length - 1;\n\t\t\t} else {\n\t\t\t\tidx %= valueSet.length;\n\t\t\t}\n\t\t\treturn valueSet[idx];\n\t\t}\n\t\treturn null;\n\t}\n}\n"],
  "mappings": ";;AAQO,MAAM,oBAAoB;AAAA,EARjC,OAQiC;AAAA;AAAA;AAAA,EAChC,OAAuB,WAAW,IAAI,oBAAoB;AAAA,EAEnD,iBACN,QACA,OACA,QACA,OACA,IACsC;AACtC,QAAI,UAAU,OAAO;AACpB,YAAM,SAAS,KAAK,mBAAmB,OAAO,EAAE;AAChD,UAAI,QAAQ;AACX,eAAO;AAAA,UACN,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAEA,QAAI,UAAU,OAAO;AACpB,YAAM,SAAS,KAAK,mBAAmB,OAAO,EAAE;AAChD,UAAI,QAAQ;AACX,eAAO;AAAA,UACN,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,mBAAmB,MAAc,IAA4B;AACpE,UAAM,eAAe,KAAK,cAAc,MAAM,EAAE;AAChD,QAAI,iBAAiB,MAAM;AAC1B,aAAO;AAAA,IACR;AACA,WAAO,KAAK,YAAY,MAAM,EAAE;AAAA,EACjC;AAAA,EAEQ,cAAc,OAAe,IAA4B;AAChE,UAAM,YAAY,KAAK;AAAA,MACtB;AAAA,MACA,MAAM,UAAU,MAAM,YAAY,GAAG,IAAI;AAAA,IAC1C;AACA,QAAI,KAAK,OAAO,KAAK;AACrB,UAAM,KAAK,OAAO,WAAW,KAAK;AAElC,QAAI,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,OAAO,IAAI;AAC1C,UAAI,OAAO,KAAK,CAAC,IAAI;AACpB,eAAO;AAAA,MAGR,OAAO;AACN,aAAK,KAAK,MAAM,KAAK,SAAS;AAC9B,cAAM,KAAK,YAAY,CAAC;AACxB,eAAO,OAAO,KAAK,SAAS;AAAA,MAC7B;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEiB,mBAA+B;AAAA,IAC/C,CAAC,QAAQ,OAAO;AAAA,IAChB,CAAC,QAAQ,OAAO;AAAA,IAChB;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,IACA,CAAC,UAAU,aAAa,SAAS;AAAA,EAClC;AAAA,EAEQ,YAAY,OAAe,IAA4B;AAC9D,WAAO,KAAK,iBAAiB,KAAK,kBAAkB,OAAO,EAAE;AAAA,EAC9D;AAAA,EAEQ,iBACP,WACA,OACA,IACgB;AAChB,QAAI,SAAwB;AAC5B,aACK,IAAI,GAAG,MAAM,UAAU,QAC3B,WAAW,QAAQ,IAAI,KACvB,KACC;AACD,eAAS,KAAK,gBAAgB,UAAU,CAAC,GAAG,OAAO,EAAE;AAAA,IACtD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,gBACP,UACA,OACA,IACgB;AAChB,QAAI,MAAM,SAAS,QAAQ,KAAK;AAChC,QAAI,OAAO,GAAG;AACb,aAAO,KAAK,IAAK;AACjB,UAAI,MAAM,GAAG;AACZ,cAAM,SAAS,SAAS;AAAA,MACzB,OAAO;AACN,eAAO,SAAS;AAAA,MACjB;AACA,aAAO,SAAS,GAAG;AAAA,IACpB;AACA,WAAO;AAAA,EACR;AACD;",
  "names": []
}
