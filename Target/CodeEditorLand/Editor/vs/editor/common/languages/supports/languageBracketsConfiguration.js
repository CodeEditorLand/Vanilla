import{CachedFunction as l}from"../../../../base/common/cache.js";import"../../../../base/common/strings.js";import"../languageConfiguration.js";import{createBracketOrRegExp as u}from"./richEditBrackets.js";class x{constructor(e,n){this.languageId=e;const o=n.brackets?p(n.brackets):[],c=new l(i=>{const t=new Set;return{info:new B(this,i,t),closing:t}}),g=new l(i=>{const t=new Set,r=new Set;return{info:new f(this,i,t,r),opening:t,openingColorized:r}});for(const[i,t]of o){const r=c.get(i),a=g.get(t);r.closing.add(a.info),a.opening.add(r.info)}const k=n.colorizedBracketPairs?p(n.colorizedBracketPairs):o.filter(i=>!(i[0]==="<"&&i[1]===">"));for(const[i,t]of k){const r=c.get(i),a=g.get(t);r.closing.add(a.info),a.openingColorized.add(r.info),a.opening.add(r.info)}this._openingBrackets=new Map([...c.cachedValues].map(([i,t])=>[i,t.info])),this._closingBrackets=new Map([...g.cachedValues].map(([i,t])=>[i,t.info]))}_openingBrackets;_closingBrackets;get openingBrackets(){return[...this._openingBrackets.values()]}get closingBrackets(){return[...this._closingBrackets.values()]}getOpeningBracketInfo(e){return this._openingBrackets.get(e)}getClosingBracketInfo(e){return this._closingBrackets.get(e)}getBracketInfo(e){return this.getOpeningBracketInfo(e)||this.getClosingBracketInfo(e)}getBracketRegExp(e){const n=Array.from([...this._openingBrackets.keys(),...this._closingBrackets.keys()]);return u(n,e)}}function p(s){return s.filter(([e,n])=>e!==""&&n!=="")}class d{constructor(e,n){this.config=e;this.bracketText=n}get languageId(){return this.config.languageId}}class B extends d{constructor(n,o,c){super(n,o);this.openedBrackets=c}isOpeningBracket=!0}class f extends d{constructor(n,o,c,g){super(n,o);this.openingBrackets=c;this.openingColorizedBrackets=g}isOpeningBracket=!1;closes(n){return n.config!==this.config?!1:this.openingBrackets.has(n)}closesColorized(n){return n.config!==this.config?!1:this.openingColorizedBrackets.has(n)}getOpeningBrackets(){return[...this.openingBrackets]}}export{d as BracketKindBase,f as ClosingBracketKind,x as LanguageBracketsConfiguration,B as OpeningBracketKind};
