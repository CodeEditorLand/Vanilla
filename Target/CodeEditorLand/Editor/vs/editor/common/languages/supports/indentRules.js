var r=(n=>(n[n.INCREASE_MASK=1]="INCREASE_MASK",n[n.DECREASE_MASK=2]="DECREASE_MASK",n[n.INDENT_NEXTLINE_MASK=4]="INDENT_NEXTLINE_MASK",n[n.UNINDENT_MASK=8]="UNINDENT_MASK",n))(r||{});function i(s){return s.global&&(s.lastIndex=0),!0}class l{_indentationRules;constructor(e){this._indentationRules=e}shouldIncrease(e){return!!(this._indentationRules&&this._indentationRules.increaseIndentPattern&&i(this._indentationRules.increaseIndentPattern)&&this._indentationRules.increaseIndentPattern.test(e))}shouldDecrease(e){return!!(this._indentationRules&&this._indentationRules.decreaseIndentPattern&&i(this._indentationRules.decreaseIndentPattern)&&this._indentationRules.decreaseIndentPattern.test(e))}shouldIndentNextLine(e){return!!(this._indentationRules&&this._indentationRules.indentNextLinePattern&&i(this._indentationRules.indentNextLinePattern)&&this._indentationRules.indentNextLinePattern.test(e))}shouldIgnore(e){return!!(this._indentationRules&&this._indentationRules.unIndentedLinePattern&&i(this._indentationRules.unIndentedLinePattern)&&this._indentationRules.unIndentedLinePattern.test(e))}getIndentMetadata(e){let t=0;return this.shouldIncrease(e)&&(t+=1),this.shouldDecrease(e)&&(t+=2),this.shouldIndentNextLine(e)&&(t+=4),this.shouldIgnore(e)&&(t+=8),t}}export{r as IndentConsts,l as IndentRulesSupport};
