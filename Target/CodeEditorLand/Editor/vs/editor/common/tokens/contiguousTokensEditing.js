import{LineTokens as g}from"./lineTokens.js";const i=new Uint32Array(0).buffer;class b{static deleteBeginning(r,n){return r===null||r===i?r:b.delete(r,0,n)}static deleteEnding(r,n){if(r===null||r===i)return r;const u=c(r),t=u[u.length-2];return b.delete(r,n,t)}static delete(r,n,u){if(r===null||r===i||n===u)return r;const t=c(r),y=t.length>>>1;if(n===0&&t[t.length-2]===u)return i;const e=g.findIndexInTokensArray(t,n),l=e>0?t[e-1<<1]:0,U=t[e<<1];if(u<U){const A=u-n;for(let a=e;a<y;a++)t[a<<1]-=A;return r}let f,s;l!==n?(t[e<<1]=n,f=e+1<<1,s=n):(f=e<<1,s=l);const p=u-n;for(let A=e+1;A<y;A++){const a=t[A<<1]-p;a>s&&(t[f++]=a,t[f++]=t[(A<<1)+1],s=a)}if(f===t.length)return r;const B=new Uint32Array(f);return B.set(t.subarray(0,f),0),B.buffer}static append(r,n){if(n===i)return r;if(r===i)return n;if(r===null)return r;if(n===null)return null;const u=c(r),t=c(n),y=t.length>>>1,e=new Uint32Array(u.length+t.length);e.set(u,0);let l=u.length;const U=u[u.length-2];for(let f=0;f<y;f++)e[l++]=t[f<<1]+U,e[l++]=t[(f<<1)+1];return e.buffer}static insert(r,n,u){if(r===null||r===i)return r;const t=c(r),y=t.length>>>1;let e=g.findIndexInTokensArray(t,n);e>0&&t[e-1<<1]===n&&e--;for(let l=e;l<y;l++)t[l<<1]+=u;return r}}function c(o){return o instanceof Uint32Array?o:new Uint32Array(o)}export{b as ContiguousTokensEditing,i as EMPTY_LINE_TOKENS,c as toUint32Array};
