{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/viewModel/viewModelDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDisposable } from \"../../../base/common/lifecycle.js\";\nimport type { IEditorConfiguration } from \"../config/editorConfiguration.js\";\nimport { filterValidationDecorations } from \"../config/editorOptions.js\";\nimport { Position } from \"../core/position.js\";\nimport { Range } from \"../core/range.js\";\nimport { StandardTokenType } from \"../encodedTokenAttributes.js\";\nimport {\n\ttype IModelDecoration,\n\ttype ITextModel,\n\tPositionAffinity,\n} from \"../model.js\";\nimport {\n\ttype ICoordinatesConverter,\n\tInlineDecoration,\n\tInlineDecorationType,\n\tViewModelDecoration,\n} from \"../viewModel.js\";\nimport type { IViewModelLines } from \"./viewModelLines.js\";\n\nexport interface IDecorationsViewportData {\n\t/**\n\t * decorations in the viewport.\n\t */\n\treadonly decorations: ViewModelDecoration[];\n\t/**\n\t * inline decorations grouped by each line in the viewport.\n\t */\n\treadonly inlineDecorations: InlineDecoration[][];\n}\n\nexport class ViewModelDecorations implements IDisposable {\n\tprivate readonly editorId: number;\n\tprivate readonly model: ITextModel;\n\tprivate readonly configuration: IEditorConfiguration;\n\tprivate readonly _linesCollection: IViewModelLines;\n\tprivate readonly _coordinatesConverter: ICoordinatesConverter;\n\n\tprivate _decorationsCache: { [decorationId: string]: ViewModelDecoration };\n\n\tprivate _cachedModelDecorationsResolver: IDecorationsViewportData | null;\n\tprivate _cachedModelDecorationsResolverViewRange: Range | null;\n\n\tconstructor(\n\t\teditorId: number,\n\t\tmodel: ITextModel,\n\t\tconfiguration: IEditorConfiguration,\n\t\tlinesCollection: IViewModelLines,\n\t\tcoordinatesConverter: ICoordinatesConverter,\n\t) {\n\t\tthis.editorId = editorId;\n\t\tthis.model = model;\n\t\tthis.configuration = configuration;\n\t\tthis._linesCollection = linesCollection;\n\t\tthis._coordinatesConverter = coordinatesConverter;\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._cachedModelDecorationsResolver = null;\n\t\tthis._cachedModelDecorationsResolverViewRange = null;\n\t}\n\n\tprivate _clearCachedModelDecorationsResolver(): void {\n\t\tthis._cachedModelDecorationsResolver = null;\n\t\tthis._cachedModelDecorationsResolverViewRange = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tpublic reset(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tpublic onModelDecorationsChanged(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tpublic onLineMappingChanged(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tprivate _getOrCreateViewModelDecoration(\n\t\tmodelDecoration: IModelDecoration,\n\t): ViewModelDecoration {\n\t\tconst id = modelDecoration.id;\n\t\tlet r = this._decorationsCache[id];\n\t\tif (!r) {\n\t\t\tconst modelRange = modelDecoration.range;\n\t\t\tconst options = modelDecoration.options;\n\t\t\tlet viewRange: Range;\n\t\t\tif (options.isWholeLine) {\n\t\t\t\tconst start =\n\t\t\t\t\tthis._coordinatesConverter.convertModelPositionToViewPosition(\n\t\t\t\t\t\tnew Position(modelRange.startLineNumber, 1),\n\t\t\t\t\t\tPositionAffinity.Left,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\tconst end =\n\t\t\t\t\tthis._coordinatesConverter.convertModelPositionToViewPosition(\n\t\t\t\t\t\tnew Position(\n\t\t\t\t\t\t\tmodelRange.endLineNumber,\n\t\t\t\t\t\t\tthis.model.getLineMaxColumn(\n\t\t\t\t\t\t\t\tmodelRange.endLineNumber,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tPositionAffinity.Right,\n\t\t\t\t\t);\n\t\t\t\tviewRange = new Range(\n\t\t\t\t\tstart.lineNumber,\n\t\t\t\t\tstart.column,\n\t\t\t\t\tend.lineNumber,\n\t\t\t\t\tend.column,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// For backwards compatibility reasons, we want injected text before any decoration.\n\t\t\t\t// Thus, move decorations to the right.\n\t\t\t\tviewRange =\n\t\t\t\t\tthis._coordinatesConverter.convertModelRangeToViewRange(\n\t\t\t\t\t\tmodelRange,\n\t\t\t\t\t\tPositionAffinity.Right,\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tr = new ViewModelDecoration(viewRange, options);\n\t\t\tthis._decorationsCache[id] = r;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic getMinimapDecorationsInRange(range: Range): ViewModelDecoration[] {\n\t\treturn this._getDecorationsInRange(range, true, false).decorations;\n\t}\n\n\tpublic getDecorationsViewportData(\n\t\tviewRange: Range,\n\t): IDecorationsViewportData {\n\t\tlet cacheIsValid = this._cachedModelDecorationsResolver !== null;\n\t\tcacheIsValid =\n\t\t\tcacheIsValid &&\n\t\t\tviewRange.equalsRange(\n\t\t\t\tthis._cachedModelDecorationsResolverViewRange,\n\t\t\t);\n\t\tif (!cacheIsValid) {\n\t\t\tthis._cachedModelDecorationsResolver = this._getDecorationsInRange(\n\t\t\t\tviewRange,\n\t\t\t\tfalse,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\tthis._cachedModelDecorationsResolverViewRange = viewRange;\n\t\t}\n\t\treturn this._cachedModelDecorationsResolver!;\n\t}\n\n\tpublic getInlineDecorationsOnLine(\n\t\tlineNumber: number,\n\t\tonlyMinimapDecorations = false,\n\t\tonlyMarginDecorations = false,\n\t): InlineDecoration[] {\n\t\tconst range = new Range(\n\t\t\tlineNumber,\n\t\t\tthis._linesCollection.getViewLineMinColumn(lineNumber),\n\t\t\tlineNumber,\n\t\t\tthis._linesCollection.getViewLineMaxColumn(lineNumber),\n\t\t);\n\t\treturn this._getDecorationsInRange(\n\t\t\trange,\n\t\t\tonlyMinimapDecorations,\n\t\t\tonlyMarginDecorations,\n\t\t).inlineDecorations[0];\n\t}\n\n\tprivate _getDecorationsInRange(\n\t\tviewRange: Range,\n\t\tonlyMinimapDecorations: boolean,\n\t\tonlyMarginDecorations: boolean,\n\t): IDecorationsViewportData {\n\t\tconst modelDecorations = this._linesCollection.getDecorationsInRange(\n\t\t\tviewRange,\n\t\t\tthis.editorId,\n\t\t\tfilterValidationDecorations(this.configuration.options),\n\t\t\tonlyMinimapDecorations,\n\t\t\tonlyMarginDecorations,\n\t\t);\n\t\tconst startLineNumber = viewRange.startLineNumber;\n\t\tconst endLineNumber = viewRange.endLineNumber;\n\n\t\tconst decorationsInViewport: ViewModelDecoration[] = [];\n\t\tlet decorationsInViewportLen = 0;\n\t\tconst inlineDecorations: InlineDecoration[][] = [];\n\t\tfor (let j = startLineNumber; j <= endLineNumber; j++) {\n\t\t\tinlineDecorations[j - startLineNumber] = [];\n\t\t}\n\n\t\tfor (let i = 0, len = modelDecorations.length; i < len; i++) {\n\t\t\tconst modelDecoration = modelDecorations[i];\n\t\t\tconst decorationOptions = modelDecoration.options;\n\n\t\t\tif (!isModelDecorationVisible(this.model, modelDecoration)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst viewModelDecoration =\n\t\t\t\tthis._getOrCreateViewModelDecoration(modelDecoration);\n\t\t\tconst viewRange = viewModelDecoration.range;\n\n\t\t\tdecorationsInViewport[decorationsInViewportLen++] =\n\t\t\t\tviewModelDecoration;\n\n\t\t\tif (decorationOptions.inlineClassName) {\n\t\t\t\tconst inlineDecoration = new InlineDecoration(\n\t\t\t\t\tviewRange,\n\t\t\t\t\tdecorationOptions.inlineClassName,\n\t\t\t\t\tdecorationOptions.inlineClassNameAffectsLetterSpacing\n\t\t\t\t\t\t? InlineDecorationType.RegularAffectingLetterSpacing\n\t\t\t\t\t\t: InlineDecorationType.Regular,\n\t\t\t\t);\n\t\t\t\tconst intersectedStartLineNumber = Math.max(\n\t\t\t\t\tstartLineNumber,\n\t\t\t\t\tviewRange.startLineNumber,\n\t\t\t\t);\n\t\t\t\tconst intersectedEndLineNumber = Math.min(\n\t\t\t\t\tendLineNumber,\n\t\t\t\t\tviewRange.endLineNumber,\n\t\t\t\t);\n\t\t\t\tfor (\n\t\t\t\t\tlet j = intersectedStartLineNumber;\n\t\t\t\t\tj <= intersectedEndLineNumber;\n\t\t\t\t\tj++\n\t\t\t\t) {\n\t\t\t\t\tinlineDecorations[j - startLineNumber].push(\n\t\t\t\t\t\tinlineDecoration,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (decorationOptions.beforeContentClassName) {\n\t\t\t\tif (\n\t\t\t\t\tstartLineNumber <= viewRange.startLineNumber &&\n\t\t\t\t\tviewRange.startLineNumber <= endLineNumber\n\t\t\t\t) {\n\t\t\t\t\tconst inlineDecoration = new InlineDecoration(\n\t\t\t\t\t\tnew Range(\n\t\t\t\t\t\t\tviewRange.startLineNumber,\n\t\t\t\t\t\t\tviewRange.startColumn,\n\t\t\t\t\t\t\tviewRange.startLineNumber,\n\t\t\t\t\t\t\tviewRange.startColumn,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdecorationOptions.beforeContentClassName,\n\t\t\t\t\t\tInlineDecorationType.Before,\n\t\t\t\t\t);\n\t\t\t\t\tinlineDecorations[\n\t\t\t\t\t\tviewRange.startLineNumber - startLineNumber\n\t\t\t\t\t].push(inlineDecoration);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (decorationOptions.afterContentClassName) {\n\t\t\t\tif (\n\t\t\t\t\tstartLineNumber <= viewRange.endLineNumber &&\n\t\t\t\t\tviewRange.endLineNumber <= endLineNumber\n\t\t\t\t) {\n\t\t\t\t\tconst inlineDecoration = new InlineDecoration(\n\t\t\t\t\t\tnew Range(\n\t\t\t\t\t\t\tviewRange.endLineNumber,\n\t\t\t\t\t\t\tviewRange.endColumn,\n\t\t\t\t\t\t\tviewRange.endLineNumber,\n\t\t\t\t\t\t\tviewRange.endColumn,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdecorationOptions.afterContentClassName,\n\t\t\t\t\t\tInlineDecorationType.After,\n\t\t\t\t\t);\n\t\t\t\t\tinlineDecorations[\n\t\t\t\t\t\tviewRange.endLineNumber - startLineNumber\n\t\t\t\t\t].push(inlineDecoration);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdecorations: decorationsInViewport,\n\t\t\tinlineDecorations: inlineDecorations,\n\t\t};\n\t}\n}\n\nexport function isModelDecorationVisible(\n\tmodel: ITextModel,\n\tdecoration: IModelDecoration,\n): boolean {\n\tif (\n\t\tdecoration.options.hideInCommentTokens &&\n\t\tisModelDecorationInComment(model, decoration)\n\t) {\n\t\treturn false;\n\t}\n\n\tif (\n\t\tdecoration.options.hideInStringTokens &&\n\t\tisModelDecorationInString(model, decoration)\n\t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function isModelDecorationInComment(\n\tmodel: ITextModel,\n\tdecoration: IModelDecoration,\n): boolean {\n\treturn testTokensInRange(\n\t\tmodel,\n\t\tdecoration.range,\n\t\t(tokenType) => tokenType === StandardTokenType.Comment,\n\t);\n}\n\nexport function isModelDecorationInString(\n\tmodel: ITextModel,\n\tdecoration: IModelDecoration,\n): boolean {\n\treturn testTokensInRange(\n\t\tmodel,\n\t\tdecoration.range,\n\t\t(tokenType) => tokenType === StandardTokenType.String,\n\t);\n}\n\n/**\n * Calls the callback for every token that intersects the range.\n * If the callback returns `false`, iteration stops and `false` is returned.\n * Otherwise, `true` is returned.\n */\nfunction testTokensInRange(\n\tmodel: ITextModel,\n\trange: Range,\n\tcallback: (tokenType: StandardTokenType) => boolean,\n): boolean {\n\tfor (\n\t\tlet lineNumber = range.startLineNumber;\n\t\tlineNumber <= range.endLineNumber;\n\t\tlineNumber++\n\t) {\n\t\tconst lineTokens = model.tokenization.getLineTokens(lineNumber);\n\t\tconst isFirstLine = lineNumber === range.startLineNumber;\n\t\tconst isEndLine = lineNumber === range.endLineNumber;\n\n\t\tlet tokenIdx = isFirstLine\n\t\t\t? lineTokens.findTokenIndexAtOffset(range.startColumn - 1)\n\t\t\t: 0;\n\t\twhile (tokenIdx < lineTokens.getCount()) {\n\t\t\tif (isEndLine) {\n\t\t\t\tconst startOffset = lineTokens.getStartOffset(tokenIdx);\n\t\t\t\tif (startOffset > range.endColumn - 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst callbackResult = callback(\n\t\t\t\tlineTokens.getStandardTokenType(tokenIdx),\n\t\t\t);\n\t\t\tif (!callbackResult) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttokenIdx++;\n\t\t}\n\t}\n\treturn true;\n}\n"],
  "mappings": "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",
  "names": ["viewRange"]
}
