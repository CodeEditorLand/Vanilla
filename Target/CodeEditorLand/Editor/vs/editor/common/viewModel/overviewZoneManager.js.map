{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/editor/common/viewModel/overviewZoneManager.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nenum Constants {\n\tMINIMUM_HEIGHT = 4,\n}\n\nexport class ColorZone {\n\t_colorZoneBrand: void = undefined;\n\n\tpublic readonly from: number;\n\tpublic readonly to: number;\n\tpublic readonly colorId: number;\n\n\tconstructor(from: number, to: number, colorId: number) {\n\t\tthis.from = from | 0;\n\t\tthis.to = to | 0;\n\t\tthis.colorId = colorId | 0;\n\t}\n\n\tpublic static compare(a: ColorZone, b: ColorZone): number {\n\t\tif (a.colorId === b.colorId) {\n\t\t\tif (a.from === b.from) {\n\t\t\t\treturn a.to - b.to;\n\t\t\t}\n\t\t\treturn a.from - b.from;\n\t\t}\n\t\treturn a.colorId - b.colorId;\n\t}\n}\n\n/**\n * A zone in the overview ruler\n */\nexport class OverviewRulerZone {\n\t_overviewRulerZoneBrand: void = undefined;\n\n\tpublic readonly startLineNumber: number;\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * If set to 0, the height in lines will be determined based on `endLineNumber`.\n\t */\n\tpublic readonly heightInLines: number;\n\tpublic readonly color: string;\n\n\tprivate _colorZone: ColorZone | null;\n\n\tconstructor(\n\t\tstartLineNumber: number,\n\t\tendLineNumber: number,\n\t\theightInLines: number,\n\t\tcolor: string,\n\t) {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.endLineNumber = endLineNumber;\n\t\tthis.heightInLines = heightInLines;\n\t\tthis.color = color;\n\t\tthis._colorZone = null;\n\t}\n\n\tpublic static compare(a: OverviewRulerZone, b: OverviewRulerZone): number {\n\t\tif (a.color === b.color) {\n\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\tif (a.heightInLines === b.heightInLines) {\n\t\t\t\t\treturn a.endLineNumber - b.endLineNumber;\n\t\t\t\t}\n\t\t\t\treturn a.heightInLines - b.heightInLines;\n\t\t\t}\n\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t}\n\t\treturn a.color < b.color ? -1 : 1;\n\t}\n\n\tpublic setColorZone(colorZone: ColorZone): void {\n\t\tthis._colorZone = colorZone;\n\t}\n\n\tpublic getColorZones(): ColorZone | null {\n\t\treturn this._colorZone;\n\t}\n}\n\nexport class OverviewZoneManager {\n\tprivate readonly _getVerticalOffsetForLine: (lineNumber: number) => number;\n\tprivate _zones: OverviewRulerZone[];\n\tprivate _colorZonesInvalid: boolean;\n\tprivate _lineHeight: number;\n\tprivate _domWidth: number;\n\tprivate _domHeight: number;\n\tprivate _outerHeight: number;\n\tprivate _pixelRatio: number;\n\n\tprivate _lastAssignedId: number;\n\tprivate readonly _color2Id: { [color: string]: number };\n\tprivate readonly _id2Color: string[];\n\n\tconstructor(getVerticalOffsetForLine: (lineNumber: number) => number) {\n\t\tthis._getVerticalOffsetForLine = getVerticalOffsetForLine;\n\t\tthis._zones = [];\n\t\tthis._colorZonesInvalid = false;\n\t\tthis._lineHeight = 0;\n\t\tthis._domWidth = 0;\n\t\tthis._domHeight = 0;\n\t\tthis._outerHeight = 0;\n\t\tthis._pixelRatio = 1;\n\n\t\tthis._lastAssignedId = 0;\n\t\tthis._color2Id = Object.create(null);\n\t\tthis._id2Color = [];\n\t}\n\n\tpublic getId2Color(): string[] {\n\t\treturn this._id2Color;\n\t}\n\n\tpublic setZones(newZones: OverviewRulerZone[]): void {\n\t\tthis._zones = newZones;\n\t\tthis._zones.sort(OverviewRulerZone.compare);\n\t}\n\n\tpublic setLineHeight(lineHeight: number): boolean {\n\t\tif (this._lineHeight === lineHeight) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._lineHeight = lineHeight;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic setPixelRatio(pixelRatio: number): void {\n\t\tthis._pixelRatio = pixelRatio;\n\t\tthis._colorZonesInvalid = true;\n\t}\n\n\tpublic getDOMWidth(): number {\n\t\treturn this._domWidth;\n\t}\n\n\tpublic getCanvasWidth(): number {\n\t\treturn this._domWidth * this._pixelRatio;\n\t}\n\n\tpublic setDOMWidth(width: number): boolean {\n\t\tif (this._domWidth === width) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._domWidth = width;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic getDOMHeight(): number {\n\t\treturn this._domHeight;\n\t}\n\n\tpublic getCanvasHeight(): number {\n\t\treturn this._domHeight * this._pixelRatio;\n\t}\n\n\tpublic setDOMHeight(height: number): boolean {\n\t\tif (this._domHeight === height) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._domHeight = height;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic getOuterHeight(): number {\n\t\treturn this._outerHeight;\n\t}\n\n\tpublic setOuterHeight(outerHeight: number): boolean {\n\t\tif (this._outerHeight === outerHeight) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._outerHeight = outerHeight;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic resolveColorZones(): ColorZone[] {\n\t\tconst colorZonesInvalid = this._colorZonesInvalid;\n\t\tconst lineHeight = Math.floor(this._lineHeight);\n\t\tconst totalHeight = Math.floor(this.getCanvasHeight());\n\t\tconst outerHeight = Math.floor(this._outerHeight);\n\t\tconst heightRatio = totalHeight / outerHeight;\n\t\tconst halfMinimumHeight = Math.floor(\n\t\t\t(Constants.MINIMUM_HEIGHT * this._pixelRatio) / 2,\n\t\t);\n\n\t\tconst allColorZones: ColorZone[] = [];\n\t\tfor (let i = 0, len = this._zones.length; i < len; i++) {\n\t\t\tconst zone = this._zones[i];\n\n\t\t\tif (!colorZonesInvalid) {\n\t\t\t\tconst colorZone = zone.getColorZones();\n\t\t\t\tif (colorZone) {\n\t\t\t\t\tallColorZones.push(colorZone);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst offset1 = this._getVerticalOffsetForLine(\n\t\t\t\tzone.startLineNumber,\n\t\t\t);\n\t\t\tconst offset2 =\n\t\t\t\tzone.heightInLines === 0\n\t\t\t\t\t? this._getVerticalOffsetForLine(zone.endLineNumber) +\n\t\t\t\t\t\tlineHeight\n\t\t\t\t\t: offset1 + zone.heightInLines * lineHeight;\n\n\t\t\tconst y1 = Math.floor(heightRatio * offset1);\n\t\t\tconst y2 = Math.floor(heightRatio * offset2);\n\n\t\t\tlet ycenter = Math.floor((y1 + y2) / 2);\n\t\t\tlet halfHeight = y2 - ycenter;\n\n\t\t\tif (halfHeight < halfMinimumHeight) {\n\t\t\t\thalfHeight = halfMinimumHeight;\n\t\t\t}\n\n\t\t\tif (ycenter - halfHeight < 0) {\n\t\t\t\tycenter = halfHeight;\n\t\t\t}\n\t\t\tif (ycenter + halfHeight > totalHeight) {\n\t\t\t\tycenter = totalHeight - halfHeight;\n\t\t\t}\n\n\t\t\tconst color = zone.color;\n\t\t\tlet colorId = this._color2Id[color];\n\t\t\tif (!colorId) {\n\t\t\t\tcolorId = ++this._lastAssignedId;\n\t\t\t\tthis._color2Id[color] = colorId;\n\t\t\t\tthis._id2Color[colorId] = color;\n\t\t\t}\n\t\t\tconst colorZone = new ColorZone(\n\t\t\t\tycenter - halfHeight,\n\t\t\t\tycenter + halfHeight,\n\t\t\t\tcolorId,\n\t\t\t);\n\n\t\t\tzone.setColorZone(colorZone);\n\t\t\tallColorZones.push(colorZone);\n\t\t}\n\n\t\tthis._colorZonesInvalid = false;\n\n\t\tallColorZones.sort(ColorZone.compare);\n\t\treturn allColorZones;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["Constants", "colorZone"]
}
