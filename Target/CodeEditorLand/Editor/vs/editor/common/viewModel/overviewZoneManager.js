var u=class{_colorZoneBrand=void 0;from;to;colorId;constructor(e,t,r){this.from=e|0,this.to=t|0,this.colorId=r|0}static compare(e,t){return e.colorId===t.colorId?e.from===t.from?e.to-t.to:e.from-t.from:e.colorId-t.colorId}},d=class{_overviewRulerZoneBrand=void 0;startLineNumber;endLineNumber;heightInLines;color;_colorZone;constructor(e,t,r,h){this.startLineNumber=e,this.endLineNumber=t,this.heightInLines=r,this.color=h,this._colorZone=null}static compare(e,t){return e.color===t.color?e.startLineNumber===t.startLineNumber?e.heightInLines===t.heightInLines?e.endLineNumber-t.endLineNumber:e.heightInLines-t.heightInLines:e.startLineNumber-t.startLineNumber:e.color<t.color?-1:1}setColorZone(e){this._colorZone=e}getColorZones(){return this._colorZone}},v=class{_getVerticalOffsetForLine;_zones;_colorZonesInvalid;_lineHeight;_domWidth;_domHeight;_outerHeight;_pixelRatio;_lastAssignedId;_color2Id;_id2Color;constructor(e){this._getVerticalOffsetForLine=e,this._zones=[],this._colorZonesInvalid=!1,this._lineHeight=0,this._domWidth=0,this._domHeight=0,this._outerHeight=0,this._pixelRatio=1,this._lastAssignedId=0,this._color2Id=Object.create(null),this._id2Color=[]}getId2Color(){return this._id2Color}setZones(e){this._zones=e,this._zones.sort(d.compare)}setLineHeight(e){return this._lineHeight===e?!1:(this._lineHeight=e,this._colorZonesInvalid=!0,!0)}setPixelRatio(e){this._pixelRatio=e,this._colorZonesInvalid=!0}getDOMWidth(){return this._domWidth}getCanvasWidth(){return this._domWidth*this._pixelRatio}setDOMWidth(e){return this._domWidth===e?!1:(this._domWidth=e,this._colorZonesInvalid=!0,!0)}getDOMHeight(){return this._domHeight}getCanvasHeight(){return this._domHeight*this._pixelRatio}setDOMHeight(e){return this._domHeight===e?!1:(this._domHeight=e,this._colorZonesInvalid=!0,!0)}getOuterHeight(){return this._outerHeight}setOuterHeight(e){return this._outerHeight===e?!1:(this._outerHeight=e,this._colorZonesInvalid=!0,!0)}resolveColorZones(){let e=this._colorZonesInvalid,t=Math.floor(this._lineHeight),r=Math.floor(this.getCanvasHeight()),h=Math.floor(this._outerHeight),b=r/h,_=Math.floor(4*this._pixelRatio/2),s=[];for(let c=0,Z=this._zones.length;c<Z;c++){let i=this._zones[c];if(!e){let I=i.getColorZones();if(I){s.push(I);continue}}let g=this._getVerticalOffsetForLine(i.startLineNumber),H=i.heightInLines===0?this._getVerticalOffsetForLine(i.endLineNumber)+t:g+i.heightInLines*t,L=Math.floor(b*g),f=Math.floor(b*H),n=Math.floor((L+f)/2),o=f-n;o<_&&(o=_),n-o<0&&(n=o),n+o>r&&(n=r-o);let a=i.color,l=this._color2Id[a];l||(l=++this._lastAssignedId,this._color2Id[a]=l,this._id2Color[l]=a);let p=new u(n-o,n+o,l);i.setColorZone(p),s.push(p)}return this._colorZonesInvalid=!1,s.sort(u.compare),s}};export{u as ColorZone,d as OverviewRulerZone,v as OverviewZoneManager};
