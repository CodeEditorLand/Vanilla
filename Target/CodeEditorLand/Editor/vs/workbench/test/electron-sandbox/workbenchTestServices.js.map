{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/electron-sandbox/workbenchTestServices.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { workbenchInstantiationService as browserWorkbenchInstantiationService, ITestInstantiationService, TestEncodingOracle, TestEnvironmentService, TestFileDialogService, TestFilesConfigurationService, TestFileService, TestLifecycleService, TestTextFileService } from '../browser/workbenchTestServices.js';\nimport { ISharedProcessService } from '../../../platform/ipc/electron-sandbox/services.js';\nimport { INativeHostService, INativeHostOptions, IOSProperties, IOSStatistics } from '../../../platform/native/common/native.js';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from '../../../base/common/buffer.js';\nimport { DisposableStore, IDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IFileDialogService, INativeOpenDialogOptions } from '../../../platform/dialogs/common/dialogs.js';\nimport { IPartsSplash } from '../../../platform/theme/common/themeService.js';\nimport { IOpenedMainWindow, IOpenEmptyWindowOptions, IWindowOpenable, IOpenWindowOptions, IColorScheme, IRectangle, IPoint } from '../../../platform/window/common/window.js';\nimport { TestConfigurationService } from '../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IEnvironmentService, INativeEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { IFileService } from '../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nimport { IPathService } from '../../services/path/common/pathService.js';\nimport { ITextEditorService } from '../../services/textfile/common/textEditorService.js';\nimport { ITextFileService } from '../../services/textfile/common/textfiles.js';\nimport { AbstractNativeExtensionTipsService } from '../../../platform/extensionManagement/common/extensionTipsService.js';\nimport { IExtensionManagementService } from '../../../platform/extensionManagement/common/extensionManagement.js';\nimport { IExtensionRecommendationNotificationService } from '../../../platform/extensionRecommendations/common/extensionRecommendations.js';\nimport { IProductService } from '../../../platform/product/common/productService.js';\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IModelService } from '../../../editor/common/services/model.js';\nimport { ModelService } from '../../../editor/common/services/modelService.js';\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\nimport { IFilesConfigurationService } from '../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { ILifecycleService } from '../../services/lifecycle/common/lifecycle.js';\nimport { IWorkingCopyBackupService } from '../../services/workingCopy/common/workingCopyBackup.js';\nimport { IWorkingCopyService } from '../../services/workingCopy/common/workingCopyService.js';\nimport { TestContextService } from '../common/workbenchTestServices.js';\nimport { NativeTextFileService } from '../../services/textfile/electron-sandbox/nativeTextFileService.js';\nimport { insert } from '../../../base/common/arrays.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { FileService } from '../../../platform/files/common/fileService.js';\nimport { InMemoryFileSystemProvider } from '../../../platform/files/common/inMemoryFilesystemProvider.js';\nimport { NullLogService } from '../../../platform/log/common/log.js';\nimport { FileUserDataProvider } from '../../../platform/userData/common/fileUserDataProvider.js';\nimport { IWorkingCopyIdentifier } from '../../services/workingCopy/common/workingCopy.js';\nimport { NativeWorkingCopyBackupService } from '../../services/workingCopy/electron-sandbox/workingCopyBackupService.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { UriIdentityService } from '../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { UserDataProfilesService } from '../../../platform/userDataProfile/common/userDataProfile.js';\nimport { AuthInfo, Credentials } from '../../../platform/request/common/request.js';\n\nexport class TestSharedProcessService implements ISharedProcessService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tcreateRawConnection(): never { throw new Error('Not Implemented'); }\n\tgetChannel(channelName: string): any { return undefined; }\n\tregisterChannel(channelName: string, channel: any): void { }\n\tnotifyRestored(): void { }\n}\n\nexport class TestNativeHostService implements INativeHostService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly windowId = -1;\n\n\tonDidOpenMainWindow: Event<number> = Event.None;\n\tonDidMaximizeWindow: Event<number> = Event.None;\n\tonDidUnmaximizeWindow: Event<number> = Event.None;\n\tonDidFocusMainWindow: Event<number> = Event.None;\n\tonDidBlurMainWindow: Event<number> = Event.None;\n\tonDidFocusMainOrAuxiliaryWindow: Event<number> = Event.None;\n\tonDidBlurMainOrAuxiliaryWindow: Event<number> = Event.None;\n\tonDidResumeOS: Event<unknown> = Event.None;\n\tonDidChangeColorScheme = Event.None;\n\tonDidChangePassword = Event.None;\n\tonDidTriggerWindowSystemContextMenu: Event<{ windowId: number; x: number; y: number }> = Event.None;\n\tonDidChangeWindowFullScreen = Event.None;\n\tonDidChangeDisplay = Event.None;\n\n\twindowCount = Promise.resolve(1);\n\tgetWindowCount(): Promise<number> { return this.windowCount; }\n\n\tasync getWindows(): Promise<IOpenedMainWindow[]> { return []; }\n\tasync getActiveWindowId(): Promise<number | undefined> { return undefined; }\n\tasync getActiveWindowPosition(): Promise<IRectangle | undefined> { return undefined; }\n\n\topenWindow(options?: IOpenEmptyWindowOptions): Promise<void>;\n\topenWindow(toOpen: IWindowOpenable[], options?: IOpenWindowOptions): Promise<void>;\n\topenWindow(arg1?: IOpenEmptyWindowOptions | IWindowOpenable[], arg2?: IOpenWindowOptions): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync toggleFullScreen(): Promise<void> { }\n\tasync handleTitleDoubleClick(): Promise<void> { }\n\tasync isMaximized(): Promise<boolean> { return true; }\n\tasync isFullScreen(): Promise<boolean> { return true; }\n\tasync maximizeWindow(): Promise<void> { }\n\tasync unmaximizeWindow(): Promise<void> { }\n\tasync minimizeWindow(): Promise<void> { }\n\tasync moveWindowTop(options?: INativeHostOptions): Promise<void> { }\n\tgetCursorScreenPoint(): Promise<{ readonly point: IPoint; readonly display: IRectangle }> { throw new Error('Method not implemented.'); }\n\tasync positionWindow(position: IRectangle, options?: INativeHostOptions): Promise<void> { }\n\tasync updateWindowControls(options: { height?: number; backgroundColor?: string; foregroundColor?: string }): Promise<void> { }\n\tasync setMinimumSize(width: number | undefined, height: number | undefined): Promise<void> { }\n\tasync saveWindowSplash(value: IPartsSplash): Promise<void> { }\n\tasync focusWindow(options?: INativeHostOptions): Promise<void> { }\n\tasync showMessageBox(options: Electron.MessageBoxOptions): Promise<Electron.MessageBoxReturnValue> { throw new Error('Method not implemented.'); }\n\tasync showSaveDialog(options: Electron.SaveDialogOptions): Promise<Electron.SaveDialogReturnValue> { throw new Error('Method not implemented.'); }\n\tasync showOpenDialog(options: Electron.OpenDialogOptions): Promise<Electron.OpenDialogReturnValue> { throw new Error('Method not implemented.'); }\n\tasync pickFileFolderAndOpen(options: INativeOpenDialogOptions): Promise<void> { }\n\tasync pickFileAndOpen(options: INativeOpenDialogOptions): Promise<void> { }\n\tasync pickFolderAndOpen(options: INativeOpenDialogOptions): Promise<void> { }\n\tasync pickWorkspaceAndOpen(options: INativeOpenDialogOptions): Promise<void> { }\n\tasync showItemInFolder(path: string): Promise<void> { }\n\tasync setRepresentedFilename(path: string): Promise<void> { }\n\tasync isAdmin(): Promise<boolean> { return false; }\n\tasync writeElevated(source: URI, target: URI): Promise<void> { }\n\tasync isRunningUnderARM64Translation(): Promise<boolean> { return false; }\n\tasync getOSProperties(): Promise<IOSProperties> { return Object.create(null); }\n\tasync getOSStatistics(): Promise<IOSStatistics> { return Object.create(null); }\n\tasync getOSVirtualMachineHint(): Promise<number> { return 0; }\n\tasync getOSColorScheme(): Promise<IColorScheme> { return { dark: true, highContrast: false }; }\n\tasync hasWSLFeatureInstalled(): Promise<boolean> { return false; }\n\tasync getProcessId(): Promise<number> { throw new Error('Method not implemented.'); }\n\tasync killProcess(): Promise<void> { }\n\tasync setDocumentEdited(edited: boolean): Promise<void> { }\n\tasync openExternal(url: string, defaultApplication?: string): Promise<boolean> { return false; }\n\tasync updateTouchBar(): Promise<void> { }\n\tasync moveItemToTrash(): Promise<void> { }\n\tasync newWindowTab(): Promise<void> { }\n\tasync showPreviousWindowTab(): Promise<void> { }\n\tasync showNextWindowTab(): Promise<void> { }\n\tasync moveWindowTabToNewWindow(): Promise<void> { }\n\tasync mergeAllWindowTabs(): Promise<void> { }\n\tasync toggleWindowTabsBar(): Promise<void> { }\n\tasync installShellCommand(): Promise<void> { }\n\tasync uninstallShellCommand(): Promise<void> { }\n\tasync notifyReady(): Promise<void> { }\n\tasync relaunch(options?: { addArgs?: string[] | undefined; removeArgs?: string[] | undefined } | undefined): Promise<void> { }\n\tasync reload(): Promise<void> { }\n\tasync closeWindow(): Promise<void> { }\n\tasync quit(): Promise<void> { }\n\tasync exit(code: number): Promise<void> { }\n\tasync openDevTools(): Promise<void> { }\n\tasync toggleDevTools(): Promise<void> { }\n\tasync resolveProxy(url: string): Promise<string | undefined> { return undefined; }\n\tasync lookupAuthorization(authInfo: AuthInfo): Promise<Credentials | undefined> { return undefined; }\n\tasync lookupKerberosAuthorization(url: string): Promise<string | undefined> { return undefined; }\n\tasync loadCertificates(): Promise<string[]> { return []; }\n\tasync findFreePort(startPort: number, giveUpAfter: number, timeout: number, stride?: number): Promise<number> { return -1; }\n\tasync readClipboardText(type?: 'selection' | 'clipboard' | undefined): Promise<string> { return ''; }\n\tasync writeClipboardText(text: string, type?: 'selection' | 'clipboard' | undefined): Promise<void> { }\n\tasync readClipboardFindText(): Promise<string> { return ''; }\n\tasync writeClipboardFindText(text: string): Promise<void> { }\n\tasync writeClipboardBuffer(format: string, buffer: VSBuffer, type?: 'selection' | 'clipboard' | undefined): Promise<void> { }\n\tasync readClipboardBuffer(format: string): Promise<VSBuffer> { return VSBuffer.wrap(Uint8Array.from([])); }\n\tasync hasClipboard(format: string, type?: 'selection' | 'clipboard' | undefined): Promise<boolean> { return false; }\n\tasync windowsGetStringRegKey(hive: 'HKEY_CURRENT_USER' | 'HKEY_LOCAL_MACHINE' | 'HKEY_CLASSES_ROOT' | 'HKEY_USERS' | 'HKEY_CURRENT_CONFIG', path: string, name: string): Promise<string | undefined> { return undefined; }\n\tasync profileRenderer(): Promise<any> { throw new Error(); }\n}\n\nexport class TestExtensionTipsService extends AbstractNativeExtensionTipsService {\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t@IExtensionRecommendationNotificationService extensionRecommendationNotificationService: IExtensionRecommendationNotificationService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t) {\n\t\tsuper(environmentService.userHome, nativeHostService, telemetryService, extensionManagementService, storageService, extensionRecommendationNotificationService, fileService, productService);\n\t}\n}\n\nexport function workbenchInstantiationService(overrides?: {\n\tenvironmentService?: (instantiationService: IInstantiationService) => IEnvironmentService;\n\tfileService?: (instantiationService: IInstantiationService) => IFileService;\n\tconfigurationService?: (instantiationService: IInstantiationService) => TestConfigurationService;\n\ttextFileService?: (instantiationService: IInstantiationService) => ITextFileService;\n\tpathService?: (instantiationService: IInstantiationService) => IPathService;\n\teditorService?: (instantiationService: IInstantiationService) => IEditorService;\n\tcontextKeyService?: (instantiationService: IInstantiationService) => IContextKeyService;\n\ttextEditorService?: (instantiationService: IInstantiationService) => ITextEditorService;\n}, disposables = new DisposableStore()): ITestInstantiationService {\n\tconst instantiationService = browserWorkbenchInstantiationService({\n\t\tworkingCopyBackupService: () => disposables.add(new TestNativeWorkingCopyBackupService()),\n\t\t...overrides\n\t}, disposables);\n\n\tinstantiationService.stub(INativeHostService, new TestNativeHostService());\n\n\treturn instantiationService;\n}\n\nexport class TestServiceAccessor {\n\tconstructor(\n\t\t@ILifecycleService public lifecycleService: TestLifecycleService,\n\t\t@ITextFileService public textFileService: TestTextFileService,\n\t\t@IFilesConfigurationService public filesConfigurationService: TestFilesConfigurationService,\n\t\t@IWorkspaceContextService public contextService: TestContextService,\n\t\t@IModelService public modelService: ModelService,\n\t\t@IFileService public fileService: TestFileService,\n\t\t@INativeHostService public nativeHostService: TestNativeHostService,\n\t\t@IFileDialogService public fileDialogService: TestFileDialogService,\n\t\t@IWorkingCopyBackupService public workingCopyBackupService: TestNativeWorkingCopyBackupService,\n\t\t@IWorkingCopyService public workingCopyService: IWorkingCopyService,\n\t\t@IEditorService public editorService: IEditorService\n\t) {\n\t}\n}\n\nexport class TestNativeTextFileServiceWithEncodingOverrides extends NativeTextFileService {\n\n\tprivate _testEncoding: TestEncodingOracle | undefined;\n\toverride get encoding(): TestEncodingOracle {\n\t\tif (!this._testEncoding) {\n\t\t\tthis._testEncoding = this._register(this.instantiationService.createInstance(TestEncodingOracle));\n\t\t}\n\n\t\treturn this._testEncoding;\n\t}\n}\n\nexport class TestNativeWorkingCopyBackupService extends NativeWorkingCopyBackupService implements IDisposable {\n\n\tprivate backupResourceJoiners: Function[];\n\tprivate discardBackupJoiners: Function[];\n\tdiscardedBackups: IWorkingCopyIdentifier[];\n\tdiscardedAllBackups: boolean;\n\tprivate pendingBackupsArr: Promise<void>[];\n\n\tconstructor() {\n\t\tconst environmentService = TestEnvironmentService;\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = new FileService(logService);\n\t\tconst lifecycleService = new TestLifecycleService();\n\t\tsuper(environmentService as any, fileService, logService, lifecycleService);\n\n\t\tconst inMemoryFileSystemProvider = this._register(new InMemoryFileSystemProvider());\n\t\tthis._register(fileService.registerProvider(Schemas.inMemory, inMemoryFileSystemProvider));\n\t\tconst uriIdentityService = this._register(new UriIdentityService(fileService));\n\t\tconst userDataProfilesService = this._register(new UserDataProfilesService(environmentService, fileService, uriIdentityService, logService));\n\t\tthis._register(fileService.registerProvider(Schemas.vscodeUserData, this._register(new FileUserDataProvider(Schemas.file, inMemoryFileSystemProvider, Schemas.vscodeUserData, userDataProfilesService, uriIdentityService, logService))));\n\n\t\tthis.backupResourceJoiners = [];\n\t\tthis.discardBackupJoiners = [];\n\t\tthis.discardedBackups = [];\n\t\tthis.pendingBackupsArr = [];\n\t\tthis.discardedAllBackups = false;\n\n\t\tthis._register(fileService);\n\t\tthis._register(lifecycleService);\n\t}\n\n\ttestGetFileService(): IFileService {\n\t\treturn this.fileService;\n\t}\n\n\tasync waitForAllBackups(): Promise<void> {\n\t\tawait Promise.all(this.pendingBackupsArr);\n\t}\n\n\tjoinBackupResource(): Promise<void> {\n\t\treturn new Promise(resolve => this.backupResourceJoiners.push(resolve));\n\t}\n\n\toverride async backup(identifier: IWorkingCopyIdentifier, content?: VSBufferReadableStream | VSBufferReadable, versionId?: number, meta?: any, token?: CancellationToken): Promise<void> {\n\t\tconst p = super.backup(identifier, content, versionId, meta, token);\n\t\tconst removeFromPendingBackups = insert(this.pendingBackupsArr, p.then(undefined, undefined));\n\n\t\ttry {\n\t\t\tawait p;\n\t\t} finally {\n\t\t\tremoveFromPendingBackups();\n\t\t}\n\n\t\twhile (this.backupResourceJoiners.length) {\n\t\t\tthis.backupResourceJoiners.pop()!();\n\t\t}\n\t}\n\n\tjoinDiscardBackup(): Promise<void> {\n\t\treturn new Promise(resolve => this.discardBackupJoiners.push(resolve));\n\t}\n\n\toverride async discardBackup(identifier: IWorkingCopyIdentifier): Promise<void> {\n\t\tawait super.discardBackup(identifier);\n\t\tthis.discardedBackups.push(identifier);\n\n\t\twhile (this.discardBackupJoiners.length) {\n\t\t\tthis.discardBackupJoiners.pop()!();\n\t\t}\n\t}\n\n\toverride async discardBackups(filter?: { except: IWorkingCopyIdentifier[] }): Promise<void> {\n\t\tthis.discardedAllBackups = true;\n\n\t\treturn super.discardBackups(filter);\n\t}\n\n\tasync getBackupContents(identifier: IWorkingCopyIdentifier): Promise<string> {\n\t\tconst backupResource = this.toBackupResource(identifier);\n\n\t\tconst fileContents = await this.fileService.readFile(backupResource);\n\n\t\treturn fileContents.value.toString();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
