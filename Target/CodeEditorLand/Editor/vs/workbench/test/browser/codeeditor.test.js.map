{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/codeeditor.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { TestInstantiationService } from '../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { workbenchInstantiationService, TestEditorService } from './workbenchTestServices.js';\nimport { IModelService } from '../../../editor/common/services/model.js';\nimport { ILanguageService } from '../../../editor/common/languages/language.js';\nimport { LanguageService } from '../../../editor/common/services/languageService.js';\nimport { RangeHighlightDecorations } from '../../browser/codeeditor.js';\nimport { TextModel } from '../../../editor/common/model/textModel.js';\nimport { createTestCodeEditor } from '../../../editor/test/browser/testCodeEditor.js';\nimport { Range, IRange } from '../../../editor/common/core/range.js';\nimport { Position } from '../../../editor/common/core/position.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../platform/configuration/test/common/testConfigurationService.js';\nimport { ModelService } from '../../../editor/common/services/modelService.js';\nimport { CoreNavigationCommands } from '../../../editor/browser/coreCommands.js';\nimport { ICodeEditor } from '../../../editor/browser/editorBrowser.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nimport { createTextModel } from '../../../editor/test/common/testTextModel.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { TestThemeService } from '../../../platform/theme/test/common/testThemeService.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../base/test/common/utils.js';\n\nsuite('Editor - Range decorations', () => {\n\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\tlet codeEditor: ICodeEditor;\n\tlet model: TextModel;\n\tlet text: string;\n\tlet testObject: RangeHighlightDecorations;\n\tconst modelsToDispose: TextModel[] = [];\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tinstantiationService.stub(IEditorService, new TestEditorService());\n\t\tinstantiationService.stub(ILanguageService, LanguageService);\n\t\tinstantiationService.stub(IModelService, stubModelService(instantiationService));\n\t\ttext = 'LINE1' + '\\n' + 'LINE2' + '\\n' + 'LINE3' + '\\n' + 'LINE4' + '\\r\\n' + 'LINE5';\n\t\tmodel = disposables.add(aModel(URI.file('some_file')));\n\t\tcodeEditor = disposables.add(createTestCodeEditor(model));\n\n\t\tinstantiationService.stub(IEditorService, 'activeEditor', { get resource() { return codeEditor.getModel()!.uri; } });\n\t\tinstantiationService.stub(IEditorService, 'activeTextEditorControl', codeEditor);\n\n\t\ttestObject = disposables.add(instantiationService.createInstance(RangeHighlightDecorations));\n\t});\n\n\tteardown(() => {\n\t\tcodeEditor.dispose();\n\t\tmodelsToDispose.forEach(model => model.dispose());\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('highlight range for the resource if it is an active editor', function () {\n\t\tconst range: IRange = new Range(1, 1, 1, 1);\n\t\ttestObject.highlightRange({ resource: model.uri, range });\n\n\t\tconst actuals = rangeHighlightDecorations(model);\n\n\t\tassert.deepStrictEqual(actuals, [range]);\n\t});\n\n\ttest('remove highlight range', function () {\n\t\ttestObject.highlightRange({ resource: model.uri, range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 } });\n\t\ttestObject.removeHighlightRange();\n\n\t\tconst actuals = rangeHighlightDecorations(model);\n\n\t\tassert.deepStrictEqual(actuals, []);\n\t});\n\n\ttest('highlight range for the resource removes previous highlight', function () {\n\t\ttestObject.highlightRange({ resource: model.uri, range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 } });\n\t\tconst range: IRange = new Range(2, 2, 4, 3);\n\t\ttestObject.highlightRange({ resource: model.uri, range });\n\n\t\tconst actuals = rangeHighlightDecorations(model);\n\n\t\tassert.deepStrictEqual(actuals, [range]);\n\t});\n\n\ttest('highlight range for a new resource removes highlight of previous resource', function () {\n\t\ttestObject.highlightRange({ resource: model.uri, range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 } });\n\n\t\tconst anotherModel = prepareActiveEditor('anotherModel');\n\t\tconst range: IRange = new Range(2, 2, 4, 3);\n\t\ttestObject.highlightRange({ resource: anotherModel.uri, range });\n\n\t\tlet actuals = rangeHighlightDecorations(model);\n\t\tassert.deepStrictEqual(actuals, []);\n\t\tactuals = rangeHighlightDecorations(anotherModel);\n\t\tassert.deepStrictEqual(actuals, [range]);\n\t});\n\n\ttest('highlight is removed on model change', function () {\n\t\ttestObject.highlightRange({ resource: model.uri, range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 } });\n\t\tprepareActiveEditor('anotherModel');\n\n\t\tconst actuals = rangeHighlightDecorations(model);\n\t\tassert.deepStrictEqual(actuals, []);\n\t});\n\n\ttest('highlight is removed on cursor position change', function () {\n\t\ttestObject.highlightRange({ resource: model.uri, range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 } });\n\t\tcodeEditor.trigger('mouse', CoreNavigationCommands.MoveTo.id, {\n\t\t\tposition: new Position(2, 1)\n\t\t});\n\n\t\tconst actuals = rangeHighlightDecorations(model);\n\t\tassert.deepStrictEqual(actuals, []);\n\t});\n\n\ttest('range is not highlight if not active editor', function () {\n\t\tconst model = aModel(URI.file('some model'));\n\t\ttestObject.highlightRange({ resource: model.uri, range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 } });\n\n\t\tconst actuals = rangeHighlightDecorations(model);\n\t\tassert.deepStrictEqual(actuals, []);\n\t});\n\n\ttest('previous highlight is not removed if not active editor', function () {\n\t\tconst range = new Range(1, 1, 1, 1);\n\t\ttestObject.highlightRange({ resource: model.uri, range });\n\n\t\tconst model1 = aModel(URI.file('some model'));\n\t\ttestObject.highlightRange({ resource: model1.uri, range: { startLineNumber: 2, startColumn: 1, endLineNumber: 2, endColumn: 1 } });\n\n\t\tconst actuals = rangeHighlightDecorations(model);\n\t\tassert.deepStrictEqual(actuals, [range]);\n\t});\n\n\tfunction prepareActiveEditor(resource: string): TextModel {\n\t\tconst model = aModel(URI.file(resource));\n\t\tcodeEditor.setModel(model);\n\t\treturn model;\n\t}\n\n\tfunction aModel(resource: URI, content: string = text): TextModel {\n\t\tconst model = createTextModel(content, undefined, undefined, resource);\n\t\tmodelsToDispose.push(model);\n\t\treturn model;\n\t}\n\n\tfunction rangeHighlightDecorations(m: TextModel): IRange[] {\n\t\tconst rangeHighlights: IRange[] = [];\n\n\t\tfor (const dec of m.getAllDecorations()) {\n\t\t\tif (dec.options.className === 'rangeHighlight') {\n\t\t\t\trangeHighlights.push(dec.range);\n\t\t\t}\n\t\t}\n\n\t\trangeHighlights.sort(Range.compareRangesUsingStarts);\n\t\treturn rangeHighlights;\n\t}\n\n\tfunction stubModelService(instantiationService: TestInstantiationService): IModelService {\n\t\tinstantiationService.stub(IConfigurationService, new TestConfigurationService());\n\t\tinstantiationService.stub(IThemeService, new TestThemeService());\n\t\treturn instantiationService.createInstance(ModelService);\n\t}\n});\n"],
  "mappings": "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",
  "names": ["model", "instantiationService"]
}
