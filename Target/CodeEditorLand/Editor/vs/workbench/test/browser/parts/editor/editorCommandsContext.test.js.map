{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/parts/editor/editorCommandsContext.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { workbenchInstantiationService, TestServiceAccessor, registerTestEditor, registerTestFileEditor, registerTestResourceEditor, TestFileEditorInput, createEditorPart, registerTestSideBySideEditor, TestEditorInput } from '../../workbenchTestServices.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { SyncDescriptor } from '../../../../../platform/instantiation/common/descriptors.js';\nimport { GroupDirection, IEditorGroupsService } from '../../../../services/editor/common/editorGroupsService.js';\nimport { EditorService } from '../../../../services/editor/browser/editorService.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { resolveCommandsContext } from '../../../../browser/parts/editor/editorCommandsContext.js';\nimport { IEditorCommandsContext } from '../../../../common/editor.js';\nimport { IListService, WorkbenchListWidget } from '../../../../../platform/list/browser/listService.js';\n\nclass TestListService implements IListService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly lastFocusedList: WorkbenchListWidget | undefined = undefined;\n}\n\nsuite('Resolving Editor Commands Context', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tconst TEST_EDITOR_ID = 'MyTestEditorForEditors';\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tconst testListService = new TestListService();\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tdisposables.add(accessor.untitledTextEditorService);\n\t\tdisposables.add(registerTestFileEditor());\n\t\tdisposables.add(registerTestSideBySideEditor());\n\t\tdisposables.add(registerTestResourceEditor());\n\t\tdisposables.add(registerTestEditor(TEST_EDITOR_ID, [new SyncDescriptor(TestFileEditorInput)]));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tlet index = 0;\n\tfunction input(id = String(index++)): EditorInput {\n\t\treturn disposables.add(new TestEditorInput(URI.parse(`file://${id}`), 'testInput'));\n\t}\n\n\tasync function createServices(): Promise<TestServiceAccessor> {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\n\t\tconst editorService = disposables.add(instantiationService.createInstance(EditorService, undefined));\n\t\tinstantiationService.stub(IEditorService, editorService);\n\n\t\treturn instantiationService.createInstance(TestServiceAccessor);\n\t}\n\n\ttest('use editor group selection', async () => {\n\t\tconst accessor = await createServices();\n\t\tconst activeGroup = accessor.editorGroupService.activeGroup;\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tactiveGroup.openEditor(input1, { pinned: true });\n\t\tactiveGroup.openEditor(input2, { pinned: true });\n\t\tactiveGroup.openEditor(input3, { pinned: true });\n\n\t\tactiveGroup.setSelection(input1, [input2]);\n\n\t\t// use editor commands context\n\t\tconst editorCommandContext: IEditorCommandsContext = { groupId: activeGroup.id, editorIndex: activeGroup.getIndexOfEditor(input1), preserveFocus: true };\n\t\tconst resolvedContext1 = resolveCommandsContext([editorCommandContext], accessor.editorService, accessor.editorGroupService, testListService);\n\n\t\tassert.strictEqual(resolvedContext1.groupedEditors.length, 1);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].group.id, activeGroup.id);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].editors.length, 2);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].editors[0], input1);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].editors[1], input2);\n\t\tassert.strictEqual(resolvedContext1.preserveFocus, true);\n\n\t\t// use URI\n\t\tconst resolvedContext2 = resolveCommandsContext([input2.resource], accessor.editorService, accessor.editorGroupService, testListService);\n\n\t\tassert.strictEqual(resolvedContext2.groupedEditors.length, 1);\n\t\tassert.strictEqual(resolvedContext2.groupedEditors[0].group.id, activeGroup.id);\n\t\tassert.strictEqual(resolvedContext2.groupedEditors[0].editors.length, 2);\n\t\tassert.strictEqual(resolvedContext2.groupedEditors[0].editors[0], input2);\n\t\tassert.strictEqual(resolvedContext2.groupedEditors[0].editors[1], input1);\n\t\tassert.strictEqual(resolvedContext2.preserveFocus, false);\n\n\t\t// use URI and commandContext\n\t\tconst editor1CommandContext: IEditorCommandsContext = { groupId: activeGroup.id, editorIndex: activeGroup.getIndexOfEditor(input1), preserveFocus: true };\n\t\tconst resolvedContext3 = resolveCommandsContext([editor1CommandContext], accessor.editorService, accessor.editorGroupService, testListService);\n\n\t\tassert.strictEqual(resolvedContext3.groupedEditors.length, 1);\n\t\tassert.strictEqual(resolvedContext3.groupedEditors[0].group.id, activeGroup.id);\n\t\tassert.strictEqual(resolvedContext3.groupedEditors[0].editors.length, 2);\n\t\tassert.strictEqual(resolvedContext3.groupedEditors[0].editors[0], input1);\n\t\tassert.strictEqual(resolvedContext3.groupedEditors[0].editors[1], input2);\n\t\tassert.strictEqual(resolvedContext3.preserveFocus, true);\n\t});\n\n\ttest('don\\'t use editor group selection', async () => {\n\t\tconst accessor = await createServices();\n\t\tconst activeGroup = accessor.editorGroupService.activeGroup;\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tactiveGroup.openEditor(input1, { pinned: true });\n\t\tactiveGroup.openEditor(input2, { pinned: true });\n\t\tactiveGroup.openEditor(input3, { pinned: true });\n\n\t\tactiveGroup.setSelection(input1, [input2]);\n\n\t\t// use editor commands context\n\t\tconst editorCommandContext: IEditorCommandsContext = { groupId: activeGroup.id, editorIndex: activeGroup.getIndexOfEditor(input3), preserveFocus: true };\n\t\tconst resolvedContext1 = resolveCommandsContext([editorCommandContext], accessor.editorService, accessor.editorGroupService, testListService);\n\n\t\tassert.strictEqual(resolvedContext1.groupedEditors.length, 1);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].group.id, activeGroup.id);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].editors.length, 1);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].editors[0], input3);\n\t\tassert.strictEqual(resolvedContext1.preserveFocus, true);\n\n\t\t// use URI\n\t\tconst resolvedContext2 = resolveCommandsContext([input3.resource], accessor.editorService, accessor.editorGroupService, testListService);\n\n\t\tassert.strictEqual(resolvedContext2.groupedEditors.length, 1);\n\t\tassert.strictEqual(resolvedContext2.groupedEditors[0].group.id, activeGroup.id);\n\t\tassert.strictEqual(resolvedContext2.groupedEditors[0].editors.length, 1);\n\t\tassert.strictEqual(resolvedContext2.groupedEditors[0].editors[0], input3);\n\t\tassert.strictEqual(resolvedContext2.preserveFocus, false);\n\t});\n\n\ttest('inactive edior group command context', async () => {\n\t\tconst accessor = await createServices();\n\t\tconst editorGroupService = accessor.editorGroupService;\n\n\t\tconst group1 = editorGroupService.activeGroup;\n\t\tconst group2 = editorGroupService.addGroup(group1, GroupDirection.RIGHT);\n\n\t\tconst input11 = input();\n\t\tconst input12 = input();\n\t\tgroup1.openEditor(input11, { pinned: true });\n\t\tgroup1.openEditor(input12, { pinned: true });\n\n\t\tconst input21 = input();\n\t\tgroup2.openEditor(input21, { pinned: true });\n\n\t\teditorGroupService.activateGroup(group1);\n\t\tgroup1.setSelection(input11, [input12]);\n\n\t\t// use editor commands context of inactive group with editor index\n\t\tconst editorCommandContext1: IEditorCommandsContext = { groupId: group2.id, editorIndex: group2.getIndexOfEditor(input21), preserveFocus: true };\n\t\tconst resolvedContext1 = resolveCommandsContext([editorCommandContext1], accessor.editorService, accessor.editorGroupService, testListService);\n\n\t\tassert.strictEqual(resolvedContext1.groupedEditors.length, 1);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].group.id, group2.id);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].editors.length, 1);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].editors[0], input21);\n\t\tassert.strictEqual(resolvedContext1.preserveFocus, true);\n\n\t\t// use editor commands context of inactive group without editor index\n\t\tconst editorCommandContext2: IEditorCommandsContext = { groupId: group2.id, preserveFocus: true };\n\t\tconst resolvedContext2 = resolveCommandsContext([editorCommandContext2], accessor.editorService, accessor.editorGroupService, testListService);\n\n\t\tassert.strictEqual(resolvedContext2.groupedEditors.length, 1);\n\t\tassert.strictEqual(resolvedContext2.groupedEditors[0].group.id, group2.id);\n\t\tassert.strictEqual(resolvedContext2.groupedEditors[0].editors.length, 1);\n\t\tassert.strictEqual(resolvedContext1.groupedEditors[0].editors[0], input21);\n\t\tassert.strictEqual(resolvedContext2.preserveFocus, true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": ["instantiationService", "accessor"]
}
