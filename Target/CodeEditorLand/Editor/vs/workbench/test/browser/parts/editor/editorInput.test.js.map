{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/parts/editor/editorInput.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IResourceEditorInput, ITextResourceEditorInput } from '../../../../../platform/editor/common/editor.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { DEFAULT_EDITOR_ASSOCIATION, IResourceDiffEditorInput, IResourceMergeEditorInput, IResourceSideBySideEditorInput, isEditorInput, isResourceDiffEditorInput, isResourceEditorInput, isResourceMergeEditorInput, isResourceSideBySideEditorInput, isUntitledResourceEditorInput, IUntitledTextResourceEditorInput } from '../../../../common/editor.js';\nimport { DiffEditorInput } from '../../../../common/editor/diffEditorInput.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { TextResourceEditorInput } from '../../../../common/editor/textResourceEditorInput.js';\nimport { FileEditorInput } from '../../../../contrib/files/browser/editors/fileEditorInput.js';\nimport { MergeEditorInput, MergeEditorInputData } from '../../../../contrib/mergeEditor/browser/mergeEditorInput.js';\nimport { UntitledTextEditorInput } from '../../../../services/untitled/common/untitledTextEditorInput.js';\nimport { TestEditorInput, TestServiceAccessor, workbenchInstantiationService } from '../../workbenchTestServices.js';\n\nsuite('EditorInput', () => {\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\tconst disposables = new DisposableStore();\n\n\tconst testResource: URI = URI.from({ scheme: 'random', path: '/path' });\n\tconst untypedResourceEditorInput: IResourceEditorInput = { resource: testResource, options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\tconst untypedTextResourceEditorInput: ITextResourceEditorInput = { resource: testResource, options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\tconst untypedResourceSideBySideEditorInput: IResourceSideBySideEditorInput = { primary: untypedResourceEditorInput, secondary: untypedResourceEditorInput, options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\tconst untypedUntitledResourceEditorinput: IUntitledTextResourceEditorInput = { resource: URI.from({ scheme: Schemas.untitled, path: '/path' }), options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\tconst untypedResourceDiffEditorInput: IResourceDiffEditorInput = { original: untypedResourceEditorInput, modified: untypedResourceEditorInput, options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\tconst untypedResourceMergeEditorInput: IResourceMergeEditorInput = { base: untypedResourceEditorInput, input1: untypedResourceEditorInput, input2: untypedResourceEditorInput, result: untypedResourceEditorInput, options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\n\t// Function to easily remove the overrides from the untyped inputs\n\tconst stripOverrides = () => {\n\t\tif (\n\t\t\t!untypedResourceEditorInput.options ||\n\t\t\t!untypedTextResourceEditorInput.options ||\n\t\t\t!untypedUntitledResourceEditorinput.options ||\n\t\t\t!untypedResourceDiffEditorInput.options ||\n\t\t\t!untypedResourceMergeEditorInput.options\n\t\t) {\n\t\t\tthrow new Error('Malformed options on untyped inputs');\n\t\t}\n\t\t// Some of the tests mutate the overrides so we want to reset them on each test\n\t\tuntypedResourceEditorInput.options.override = undefined;\n\t\tuntypedTextResourceEditorInput.options.override = undefined;\n\t\tuntypedUntitledResourceEditorinput.options.override = undefined;\n\t\tuntypedResourceDiffEditorInput.options.override = undefined;\n\t\tuntypedResourceMergeEditorInput.options.override = undefined;\n\t};\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tif (\n\t\t\t!untypedResourceEditorInput.options ||\n\t\t\t!untypedTextResourceEditorInput.options ||\n\t\t\t!untypedUntitledResourceEditorinput.options ||\n\t\t\t!untypedResourceDiffEditorInput.options ||\n\t\t\t!untypedResourceMergeEditorInput.options\n\t\t) {\n\t\t\tthrow new Error('Malformed options on untyped inputs');\n\t\t}\n\t\t// Some of the tests mutate the overrides so we want to reset them on each test\n\t\tuntypedResourceEditorInput.options.override = DEFAULT_EDITOR_ASSOCIATION.id;\n\t\tuntypedTextResourceEditorInput.options.override = DEFAULT_EDITOR_ASSOCIATION.id;\n\t\tuntypedUntitledResourceEditorinput.options.override = DEFAULT_EDITOR_ASSOCIATION.id;\n\t\tuntypedResourceDiffEditorInput.options.override = DEFAULT_EDITOR_ASSOCIATION.id;\n\t\tuntypedResourceMergeEditorInput.options.override = DEFAULT_EDITOR_ASSOCIATION.id;\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tclass MyEditorInput extends EditorInput {\n\t\treadonly resource = undefined;\n\n\t\toverride get typeId(): string { return 'myEditorInput'; }\n\t\toverride resolve(): any { return null; }\n\t}\n\n\ttest('basics', () => {\n\t\tlet counter = 0;\n\t\tconst input = disposables.add(new MyEditorInput());\n\t\tconst otherInput = disposables.add(new MyEditorInput());\n\n\t\tassert.ok(isEditorInput(input));\n\t\tassert.ok(!isEditorInput(undefined));\n\t\tassert.ok(!isEditorInput({ resource: URI.file('/') }));\n\t\tassert.ok(!isEditorInput({}));\n\n\t\tassert.ok(!isResourceEditorInput(input));\n\t\tassert.ok(!isUntitledResourceEditorInput(input as any));\n\t\tassert.ok(!isResourceDiffEditorInput(input));\n\t\tassert.ok(!isResourceMergeEditorInput(input));\n\t\tassert.ok(!isResourceSideBySideEditorInput(input));\n\n\t\tassert(input.matches(input));\n\t\tassert(!input.matches(otherInput));\n\t\tassert(input.getName());\n\n\t\tdisposables.add(input.onWillDispose(() => {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t}));\n\n\t\tinput.dispose();\n\t\tassert.strictEqual(counter, 1);\n\t});\n\n\ttest('untyped matches', () => {\n\t\tconst testInputID = 'untypedMatches';\n\t\tconst testInputResource = URI.file('/fake');\n\t\tconst testInput = disposables.add(new TestEditorInput(testInputResource, testInputID));\n\t\tconst testUntypedInput = { resource: testInputResource, options: { override: testInputID } };\n\t\tconst tetUntypedInputWrongResource = { resource: URI.file('/incorrectFake'), options: { override: testInputID } };\n\t\tconst testUntypedInputWrongId = { resource: testInputResource, options: { override: 'wrongId' } };\n\t\tconst testUntypedInputWrong = { resource: URI.file('/incorrectFake'), options: { override: 'wrongId' } };\n\n\t\tassert(testInput.matches(testUntypedInput));\n\t\tassert.ok(!testInput.matches(tetUntypedInputWrongResource));\n\t\tassert.ok(!testInput.matches(testUntypedInputWrongId));\n\t\tassert.ok(!testInput.matches(testUntypedInputWrong));\n\t});\n\n\ttest('Untpyed inputs properly match TextResourceEditorInput', () => {\n\t\tconst textResourceEditorInput = instantiationService.createInstance(TextResourceEditorInput, testResource, undefined, undefined, undefined, undefined);\n\n\t\tassert.ok(textResourceEditorInput.matches(untypedResourceEditorInput));\n\t\tassert.ok(textResourceEditorInput.matches(untypedTextResourceEditorInput));\n\t\tassert.ok(!textResourceEditorInput.matches(untypedResourceSideBySideEditorInput));\n\t\tassert.ok(!textResourceEditorInput.matches(untypedUntitledResourceEditorinput));\n\t\tassert.ok(!textResourceEditorInput.matches(untypedResourceDiffEditorInput));\n\t\tassert.ok(!textResourceEditorInput.matches(untypedResourceMergeEditorInput));\n\n\t\ttextResourceEditorInput.dispose();\n\t});\n\n\ttest('Untyped inputs properly match FileEditorInput', () => {\n\t\tconst fileEditorInput = instantiationService.createInstance(FileEditorInput, testResource, undefined, undefined, undefined, undefined, undefined, undefined);\n\n\t\tassert.ok(fileEditorInput.matches(untypedResourceEditorInput));\n\t\tassert.ok(fileEditorInput.matches(untypedTextResourceEditorInput));\n\t\tassert.ok(!fileEditorInput.matches(untypedResourceSideBySideEditorInput));\n\t\tassert.ok(!fileEditorInput.matches(untypedUntitledResourceEditorinput));\n\t\tassert.ok(!fileEditorInput.matches(untypedResourceDiffEditorInput));\n\t\tassert.ok(!fileEditorInput.matches(untypedResourceMergeEditorInput));\n\n\t\t// Now we remove the override on the untyped to ensure that FileEditorInput supports lightweight resource matching\n\t\tstripOverrides();\n\n\t\tassert.ok(fileEditorInput.matches(untypedResourceEditorInput));\n\t\tassert.ok(fileEditorInput.matches(untypedTextResourceEditorInput));\n\t\tassert.ok(!fileEditorInput.matches(untypedResourceSideBySideEditorInput));\n\t\tassert.ok(!fileEditorInput.matches(untypedUntitledResourceEditorinput));\n\t\tassert.ok(!fileEditorInput.matches(untypedResourceDiffEditorInput));\n\t\tassert.ok(!fileEditorInput.matches(untypedResourceMergeEditorInput));\n\n\t\tfileEditorInput.dispose();\n\t});\n\n\ttest('Untyped inputs properly match MergeEditorInput', () => {\n\t\tconst mergeData: MergeEditorInputData = { uri: testResource, description: undefined, detail: undefined, title: undefined };\n\t\tconst mergeEditorInput = instantiationService.createInstance(MergeEditorInput, testResource, mergeData, mergeData, testResource);\n\n\t\tassert.ok(!mergeEditorInput.matches(untypedResourceEditorInput));\n\t\tassert.ok(!mergeEditorInput.matches(untypedTextResourceEditorInput));\n\t\tassert.ok(!mergeEditorInput.matches(untypedResourceSideBySideEditorInput));\n\t\tassert.ok(!mergeEditorInput.matches(untypedUntitledResourceEditorinput));\n\t\tassert.ok(!mergeEditorInput.matches(untypedResourceDiffEditorInput));\n\t\tassert.ok(mergeEditorInput.matches(untypedResourceMergeEditorInput));\n\n\t\tstripOverrides();\n\n\t\tassert.ok(!mergeEditorInput.matches(untypedResourceEditorInput));\n\t\tassert.ok(!mergeEditorInput.matches(untypedTextResourceEditorInput));\n\t\tassert.ok(!mergeEditorInput.matches(untypedResourceSideBySideEditorInput));\n\t\tassert.ok(!mergeEditorInput.matches(untypedUntitledResourceEditorinput));\n\t\tassert.ok(!mergeEditorInput.matches(untypedResourceDiffEditorInput));\n\t\tassert.ok(mergeEditorInput.matches(untypedResourceMergeEditorInput));\n\n\t\tmergeEditorInput.dispose();\n\t});\n\n\ttest('Untyped inputs properly match UntitledTextEditorInput', () => {\n\t\tconst untitledModel = accessor.untitledTextEditorService.create({ associatedResource: { authority: '', path: '/path', fragment: '', query: '' } });\n\t\tconst untitledTextEditorInput: UntitledTextEditorInput = instantiationService.createInstance(UntitledTextEditorInput, untitledModel);\n\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedResourceEditorInput));\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedTextResourceEditorInput));\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedResourceSideBySideEditorInput));\n\t\tassert.ok(untitledTextEditorInput.matches(untypedUntitledResourceEditorinput));\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedResourceDiffEditorInput));\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedResourceMergeEditorInput));\n\n\t\tstripOverrides();\n\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedResourceEditorInput));\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedTextResourceEditorInput));\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedResourceSideBySideEditorInput));\n\t\tassert.ok(untitledTextEditorInput.matches(untypedUntitledResourceEditorinput));\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedResourceDiffEditorInput));\n\t\tassert.ok(!untitledTextEditorInput.matches(untypedResourceMergeEditorInput));\n\n\t\tuntitledTextEditorInput.dispose();\n\t});\n\n\ttest('Untyped inputs properly match DiffEditorInput', () => {\n\t\tconst fileEditorInput1 = instantiationService.createInstance(FileEditorInput, testResource, undefined, undefined, undefined, undefined, undefined, undefined);\n\t\tconst fileEditorInput2 = instantiationService.createInstance(FileEditorInput, testResource, undefined, undefined, undefined, undefined, undefined, undefined);\n\t\tconst diffEditorInput: DiffEditorInput = instantiationService.createInstance(DiffEditorInput, undefined, undefined, fileEditorInput1, fileEditorInput2, false);\n\n\t\tassert.ok(!diffEditorInput.matches(untypedResourceEditorInput));\n\t\tassert.ok(!diffEditorInput.matches(untypedTextResourceEditorInput));\n\t\tassert.ok(!diffEditorInput.matches(untypedResourceSideBySideEditorInput));\n\t\tassert.ok(!diffEditorInput.matches(untypedUntitledResourceEditorinput));\n\t\tassert.ok(diffEditorInput.matches(untypedResourceDiffEditorInput));\n\t\tassert.ok(!diffEditorInput.matches(untypedResourceMergeEditorInput));\n\n\t\tstripOverrides();\n\n\t\tassert.ok(!diffEditorInput.matches(untypedResourceEditorInput));\n\t\tassert.ok(!diffEditorInput.matches(untypedTextResourceEditorInput));\n\t\tassert.ok(!diffEditorInput.matches(untypedResourceSideBySideEditorInput));\n\t\tassert.ok(!diffEditorInput.matches(untypedUntitledResourceEditorinput));\n\t\tassert.ok(diffEditorInput.matches(untypedResourceDiffEditorInput));\n\t\tassert.ok(!diffEditorInput.matches(untypedResourceMergeEditorInput));\n\n\t\tdiffEditorInput.dispose();\n\t\tfileEditorInput1.dispose();\n\t\tfileEditorInput2.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
