{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/parts/editor/editorGroupModel.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { EditorGroupModel, IGroupEditorChangeEvent, IGroupEditorCloseEvent, IGroupEditorMoveEvent, IGroupEditorOpenEvent, ISerializedEditorGroupModel, isGroupEditorChangeEvent, isGroupEditorCloseEvent, isGroupEditorMoveEvent, isGroupEditorOpenEvent } from '../../../../common/editor/editorGroupModel.js';\nimport { EditorExtensions, IEditorFactoryRegistry, IFileEditorInput, IEditorSerializer, CloseDirection, EditorsOrder, IResourceDiffEditorInput, IResourceSideBySideEditorInput, SideBySideEditor, EditorCloseContext, GroupModelChangeKind } from '../../../../common/editor.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { TestLifecycleService, workbenchInstantiationService } from '../../workbenchTestServices.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ILifecycleService } from '../../../../services/lifecycle/common/lifecycle.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../../../platform/telemetry/common/telemetryUtils.js';\nimport { DiffEditorInput } from '../../../../common/editor/diffEditorInput.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { DisposableStore, IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { TestContextService, TestStorageService } from '../../../common/workbenchTestServices.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { SideBySideEditorInput } from '../../../../common/editor/sideBySideEditorInput.js';\nimport { isEqual } from '../../../../../base/common/resources.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('EditorGroupModel', () => {\n\n\tlet testInstService: TestInstantiationService | undefined;\n\n\tsuiteTeardown(() => {\n\t\ttestInstService?.dispose();\n\t\ttestInstService = undefined;\n\t});\n\n\tfunction inst(): IInstantiationService {\n\t\tif (!testInstService) {\n\t\t\ttestInstService = new TestInstantiationService();\n\t\t}\n\t\tconst inst = testInstService;\n\t\tinst.stub(IStorageService, disposables.add(new TestStorageService()));\n\t\tinst.stub(ILifecycleService, disposables.add(new TestLifecycleService()));\n\t\tinst.stub(IWorkspaceContextService, new TestContextService());\n\t\tinst.stub(ITelemetryService, NullTelemetryService);\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('workbench', { editor: { openPositioning: 'right', focusRecentEditorAfterClose: true } });\n\t\tinst.stub(IConfigurationService, config);\n\n\t\treturn inst;\n\t}\n\n\tfunction createEditorGroupModel(serialized?: ISerializedEditorGroupModel): EditorGroupModel {\n\t\tconst group = disposables.add(inst().createInstance(EditorGroupModel, serialized));\n\n\t\tdisposables.add(toDisposable(() => {\n\t\t\tfor (const editor of group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\t\tgroup.closeEditor(editor);\n\t\t\t}\n\t\t}));\n\n\t\treturn group;\n\t}\n\n\tfunction closeAllEditors(group: EditorGroupModel): void {\n\t\tfor (const editor of group.getEditors(EditorsOrder.SEQUENTIAL)) {\n\t\t\tgroup.closeEditor(editor, undefined, false);\n\t\t}\n\t}\n\n\tfunction closeEditors(group: EditorGroupModel, except: EditorInput, direction?: CloseDirection): void {\n\t\tconst index = group.indexOf(except);\n\t\tif (index === -1) {\n\t\t\treturn; // not found\n\t\t}\n\n\t\t// Close to the left\n\t\tif (direction === CloseDirection.LEFT) {\n\t\t\tfor (let i = index - 1; i >= 0; i--) {\n\t\t\t\tgroup.closeEditor(group.getEditorByIndex(i)!);\n\t\t\t}\n\t\t}\n\n\t\t// Close to the right\n\t\telse if (direction === CloseDirection.RIGHT) {\n\t\t\tfor (let i = group.getEditors(EditorsOrder.SEQUENTIAL).length - 1; i > index; i--) {\n\t\t\t\tgroup.closeEditor(group.getEditorByIndex(i)!);\n\t\t\t}\n\t\t}\n\n\t\t// Both directions\n\t\telse {\n\t\t\tgroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).filter(editor => !editor.matches(except)).forEach(editor => group.closeEditor(editor));\n\t\t}\n\t}\n\n\tinterface GroupEvents {\n\t\tlocked: number[];\n\t\tactive: number[];\n\t\tindex: number[];\n\t\tlabel: number[];\n\t\topened: IGroupEditorOpenEvent[];\n\t\tactivated: IGroupEditorChangeEvent[];\n\t\tclosed: IGroupEditorCloseEvent[];\n\t\tpinned: IGroupEditorChangeEvent[];\n\t\tunpinned: IGroupEditorChangeEvent[];\n\t\tsticky: IGroupEditorChangeEvent[];\n\t\tunsticky: IGroupEditorChangeEvent[];\n\t\ttransient: IGroupEditorChangeEvent[];\n\t\tmoved: IGroupEditorMoveEvent[];\n\t\tdisposed: IGroupEditorChangeEvent[];\n\t}\n\n\tfunction groupListener(group: EditorGroupModel): GroupEvents {\n\t\tconst groupEvents: GroupEvents = {\n\t\t\tactive: [],\n\t\t\tindex: [],\n\t\t\tlabel: [],\n\t\t\tlocked: [],\n\t\t\topened: [],\n\t\t\tclosed: [],\n\t\t\tactivated: [],\n\t\t\tpinned: [],\n\t\t\tunpinned: [],\n\t\t\tsticky: [],\n\t\t\tunsticky: [],\n\t\t\ttransient: [],\n\t\t\tmoved: [],\n\t\t\tdisposed: []\n\t\t};\n\n\t\tdisposables.add(group.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.GROUP_LOCKED) {\n\t\t\t\tgroupEvents.locked.push(group.id);\n\t\t\t\treturn;\n\t\t\t} else if (e.kind === GroupModelChangeKind.GROUP_ACTIVE) {\n\t\t\t\tgroupEvents.active.push(group.id);\n\t\t\t\treturn;\n\t\t\t} else if (e.kind === GroupModelChangeKind.GROUP_INDEX) {\n\t\t\t\tgroupEvents.index.push(group.id);\n\t\t\t\treturn;\n\t\t\t} else if (e.kind === GroupModelChangeKind.GROUP_LABEL) {\n\t\t\t\tgroupEvents.label.push(group.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!e.editor) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (e.kind) {\n\t\t\t\tcase GroupModelChangeKind.EDITOR_OPEN:\n\t\t\t\t\tif (isGroupEditorOpenEvent(e)) {\n\t\t\t\t\t\tgroupEvents.opened.push(e);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupModelChangeKind.EDITOR_CLOSE:\n\t\t\t\t\tif (isGroupEditorCloseEvent(e)) {\n\t\t\t\t\t\tgroupEvents.closed.push(e);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupModelChangeKind.EDITOR_ACTIVE:\n\t\t\t\t\tif (isGroupEditorChangeEvent(e)) {\n\t\t\t\t\t\tgroupEvents.activated.push(e);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupModelChangeKind.EDITOR_PIN:\n\t\t\t\t\tif (isGroupEditorChangeEvent(e)) {\n\t\t\t\t\t\tgroup.isPinned(e.editor) ? groupEvents.pinned.push(e) : groupEvents.unpinned.push(e);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupModelChangeKind.EDITOR_STICKY:\n\t\t\t\t\tif (isGroupEditorChangeEvent(e)) {\n\t\t\t\t\t\tgroup.isSticky(e.editor) ? groupEvents.sticky.push(e) : groupEvents.unsticky.push(e);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupModelChangeKind.EDITOR_TRANSIENT:\n\t\t\t\t\tif (isGroupEditorChangeEvent(e)) {\n\t\t\t\t\t\tgroupEvents.transient.push(e);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupModelChangeKind.EDITOR_MOVE:\n\t\t\t\t\tif (isGroupEditorMoveEvent(e)) {\n\t\t\t\t\t\tgroupEvents.moved.push(e);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupModelChangeKind.EDITOR_WILL_DISPOSE:\n\t\t\t\t\tif (isGroupEditorChangeEvent(e)) {\n\t\t\t\t\t\tgroupEvents.disposed.push(e);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}));\n\n\t\treturn groupEvents;\n\t}\n\n\tlet index = 0;\n\tclass TestEditorInput extends EditorInput {\n\n\t\treadonly resource = undefined;\n\n\t\tconstructor(public id: string) {\n\t\t\tsuper();\n\t\t}\n\t\toverride get typeId() { return 'testEditorInputForGroups'; }\n\t\toverride async resolve(): Promise<IDisposable> { return null!; }\n\n\t\toverride matches(other: TestEditorInput): boolean {\n\t\t\treturn other && this.id === other.id && other instanceof TestEditorInput;\n\t\t}\n\n\t\tsetDirty(): void {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\n\t\tsetLabel(): void {\n\t\t\tthis._onDidChangeLabel.fire();\n\t\t}\n\t}\n\n\tclass NonSerializableTestEditorInput extends EditorInput {\n\n\t\treadonly resource = undefined;\n\n\t\tconstructor(public id: string) {\n\t\t\tsuper();\n\t\t}\n\t\toverride get typeId() { return 'testEditorInputForGroups-nonSerializable'; }\n\t\toverride async resolve(): Promise<IDisposable | null> { return null; }\n\n\t\toverride matches(other: NonSerializableTestEditorInput): boolean {\n\t\t\treturn other && this.id === other.id && other instanceof NonSerializableTestEditorInput;\n\t\t}\n\t}\n\n\tclass TestFileEditorInput extends EditorInput implements IFileEditorInput {\n\n\t\treadonly preferredResource = this.resource;\n\n\t\tconstructor(public id: string, public resource: URI) {\n\t\t\tsuper();\n\t\t}\n\t\toverride get typeId() { return 'testFileEditorInputForGroups'; }\n\t\toverride get editorId() { return this.id; }\n\t\toverride async resolve(): Promise<IDisposable | null> { return null; }\n\t\tsetPreferredName(name: string): void { }\n\t\tsetPreferredDescription(description: string): void { }\n\t\tsetPreferredResource(resource: URI): void { }\n\t\tasync setEncoding(encoding: string) { }\n\t\tgetEncoding() { return undefined; }\n\t\tsetPreferredEncoding(encoding: string) { }\n\t\tsetForceOpenAsBinary(): void { }\n\t\tsetPreferredContents(contents: string): void { }\n\t\tsetLanguageId(languageId: string) { }\n\t\tsetPreferredLanguageId(languageId: string) { }\n\t\tisResolved(): boolean { return false; }\n\n\t\toverride matches(other: TestFileEditorInput): boolean {\n\t\t\tif (super.matches(other)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (other instanceof TestFileEditorInput) {\n\t\t\t\treturn isEqual(other.resource, this.resource);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction input(id = String(index++), nonSerializable?: boolean, resource?: URI): EditorInput {\n\t\tif (resource) {\n\t\t\treturn disposables.add(new TestFileEditorInput(id, resource));\n\t\t}\n\n\t\treturn nonSerializable ? disposables.add(new NonSerializableTestEditorInput(id)) : disposables.add(new TestEditorInput(id));\n\t}\n\n\tinterface ISerializedTestInput {\n\t\tid: string;\n\t}\n\n\tclass TestEditorInputSerializer implements IEditorSerializer {\n\n\t\tstatic disableSerialize = false;\n\t\tstatic disableDeserialize = false;\n\n\t\tcanSerialize(editorInput: EditorInput): boolean {\n\t\t\treturn true;\n\t\t}\n\n\t\tserialize(editorInput: EditorInput): string | undefined {\n\t\t\tif (TestEditorInputSerializer.disableSerialize) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst testEditorInput = <TestEditorInput>editorInput;\n\t\t\tconst testInput: ISerializedTestInput = {\n\t\t\t\tid: testEditorInput.id\n\t\t\t};\n\n\t\t\treturn JSON.stringify(testInput);\n\t\t}\n\n\t\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput | undefined {\n\t\t\tif (TestEditorInputSerializer.disableDeserialize) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst testInput: ISerializedTestInput = JSON.parse(serializedEditorInput);\n\n\t\t\treturn disposables.add(new TestEditorInput(testInput.id));\n\t\t}\n\t}\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tTestEditorInputSerializer.disableSerialize = false;\n\t\tTestEditorInputSerializer.disableDeserialize = false;\n\n\t\tdisposables.add(Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer('testEditorInputForGroups', TestEditorInputSerializer));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\n\t\tindex = 1;\n\t});\n\n\ttest('Clone Group', function () {\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input() as TestEditorInput;\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\t// Pinned and Active\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: false, active: true });\n\n\t\t// Sticky\n\t\tgroup.stick(input2);\n\t\tassert.ok(group.isSticky(input2));\n\n\t\t// Locked\n\t\tassert.strictEqual(group.isLocked, false);\n\t\tgroup.lock(true);\n\t\tassert.strictEqual(group.isLocked, true);\n\n\t\tconst clone = disposables.add(group.clone());\n\t\tassert.notStrictEqual(group.id, clone.id);\n\t\tassert.strictEqual(clone.count, 3);\n\t\tassert.strictEqual(clone.isLocked, false); // locking does not clone over\n\n\t\tlet didEditorLabelChange = false;\n\t\tconst toDispose = clone.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_LABEL) {\n\t\t\t\tdidEditorLabelChange = true;\n\t\t\t}\n\t\t});\n\t\tinput1.setLabel();\n\t\tassert.ok(didEditorLabelChange);\n\n\t\tassert.strictEqual(clone.isPinned(input1), true);\n\t\tassert.strictEqual(clone.isActive(input1), false);\n\t\tassert.strictEqual(clone.isSticky(input1), false);\n\n\t\tassert.strictEqual(clone.isPinned(input2), true);\n\t\tassert.strictEqual(clone.isActive(input2), false);\n\t\tassert.strictEqual(clone.isSticky(input2), true);\n\n\t\tassert.strictEqual(clone.isPinned(input3), false);\n\t\tassert.strictEqual(clone.isActive(input3), true);\n\t\tassert.strictEqual(clone.isSticky(input3), false);\n\n\t\ttoDispose.dispose();\n\t});\n\n\ttest('isActive - untyped', () => {\n\t\tconst group = createEditorGroupModel();\n\t\tconst input = disposables.add(new TestFileEditorInput('testInput', URI.file('fake')));\n\t\tconst input2 = disposables.add(new TestFileEditorInput('testInput2', URI.file('fake2')));\n\t\tconst untypedInput = { resource: URI.file('/fake'), options: { override: 'testInput' } };\n\t\tconst untypedNonActiveInput = { resource: URI.file('/fake2'), options: { override: 'testInput2' } };\n\n\t\tgroup.openEditor(input, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { active: false });\n\n\t\tassert.ok(group.isActive(input));\n\t\tassert.ok(group.isActive(untypedInput));\n\t\tassert.ok(!group.isActive(untypedNonActiveInput));\n\t});\n\n\ttest('openEditor - prefers existing side by side editor if same', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst group = createEditorGroupModel();\n\t\tconst input1 = disposables.add(new TestFileEditorInput('testInput', URI.file('fake1')));\n\t\tconst input2 = disposables.add(new TestFileEditorInput('testInput', URI.file('fake2')));\n\n\t\tconst sideBySideInputSame = instantiationService.createInstance(SideBySideEditorInput, undefined, undefined, input1, input1);\n\t\tconst sideBySideInputDifferent = instantiationService.createInstance(SideBySideEditorInput, undefined, undefined, input1, input2);\n\n\t\tlet res = group.openEditor(sideBySideInputSame, { pinned: true, active: true });\n\t\tassert.strictEqual(res.editor, sideBySideInputSame);\n\t\tassert.strictEqual(res.isNew, true);\n\n\t\tres = group.openEditor(input1, { pinned: true, active: true, supportSideBySide: SideBySideEditor.BOTH });\n\t\tassert.strictEqual(res.editor, sideBySideInputSame);\n\t\tassert.strictEqual(res.isNew, false);\n\n\t\tgroup.closeEditor(sideBySideInputSame);\n\t\tres = group.openEditor(sideBySideInputDifferent, { pinned: true, active: true });\n\t\tassert.strictEqual(res.editor, sideBySideInputDifferent);\n\t\tassert.strictEqual(res.isNew, true);\n\n\t\tres = group.openEditor(input1, { pinned: true, active: true });\n\t\tassert.strictEqual(res.editor, input1);\n\t\tassert.strictEqual(res.isNew, true);\n\t});\n\n\ttest('indexOf() - prefers direct matching editor over side by side matching one', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst group = createEditorGroupModel();\n\t\tconst input1 = disposables.add(new TestFileEditorInput('testInput', URI.file('fake1')));\n\n\t\tconst sideBySideInput = instantiationService.createInstance(SideBySideEditorInput, undefined, undefined, input1, input1);\n\n\t\tgroup.openEditor(sideBySideInput, { pinned: true, active: true });\n\t\tassert.strictEqual(group.indexOf(sideBySideInput), 0);\n\t\tassert.strictEqual(group.indexOf(input1), -1);\n\t\tassert.strictEqual(group.indexOf(input1, undefined, { supportSideBySide: SideBySideEditor.BOTH }), 0);\n\t\tassert.strictEqual(group.indexOf(input1, undefined, { supportSideBySide: SideBySideEditor.ANY }), 0);\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tassert.strictEqual(group.indexOf(input1), 1);\n\t\tassert.strictEqual(group.indexOf(input1, undefined, { supportSideBySide: SideBySideEditor.BOTH }), 1);\n\t\tassert.strictEqual(group.indexOf(input1, undefined, { supportSideBySide: SideBySideEditor.ANY }), 1);\n\t});\n\n\ttest('contains() - untyped', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst input1 = input('input1', false, URI.file('/input1'));\n\t\tconst input2 = input('input2', false, URI.file('/input2'));\n\n\t\tconst untypedInput1 = { resource: URI.file('/input1'), options: { override: 'input1' } };\n\t\tconst untypedInput2 = { resource: URI.file('/input2'), options: { override: 'input2' } };\n\n\t\tconst diffInput1 = instantiationService.createInstance(DiffEditorInput, 'name', 'description', input1, input2, undefined);\n\t\tconst diffInput2 = instantiationService.createInstance(DiffEditorInput, 'name', 'description', input2, input1, undefined);\n\n\t\tconst untypedDiffInput1: IResourceDiffEditorInput = {\n\t\t\toriginal: untypedInput1,\n\t\t\tmodified: untypedInput2\n\t\t};\n\t\tconst untypedDiffInput2: IResourceDiffEditorInput = {\n\t\t\toriginal: untypedInput2,\n\t\t\tmodified: untypedInput1\n\t\t};\n\n\t\tconst sideBySideInputSame = instantiationService.createInstance(SideBySideEditorInput, 'name', undefined, input1, input1);\n\t\tconst sideBySideInputDifferent = instantiationService.createInstance(SideBySideEditorInput, 'name', undefined, input1, input2);\n\n\t\tconst untypedSideBySideInputSame: IResourceSideBySideEditorInput = {\n\t\t\tprimary: untypedInput1,\n\t\t\tsecondary: untypedInput1\n\t\t};\n\t\tconst untypedSideBySideInputDifferent: IResourceSideBySideEditorInput = {\n\t\t\tprimary: untypedInput2,\n\t\t\tsecondary: untypedInput1\n\t\t};\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.contains(untypedInput1), true);\n\t\tassert.strictEqual(group.contains(untypedInput1, { strictEquals: true }), false);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.BOTH }), true);\n\t\tassert.strictEqual(group.contains(untypedInput2), false);\n\t\tassert.strictEqual(group.contains(untypedInput2, { strictEquals: true }), false);\n\t\tassert.strictEqual(group.contains(untypedInput2, { supportSideBySide: SideBySideEditor.ANY }), false);\n\t\tassert.strictEqual(group.contains(untypedInput2, { supportSideBySide: SideBySideEditor.BOTH }), false);\n\t\tassert.strictEqual(group.contains(untypedDiffInput1), false);\n\t\tassert.strictEqual(group.contains(untypedDiffInput2), false);\n\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.contains(untypedInput1), true);\n\t\tassert.strictEqual(group.contains(untypedInput2), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput1), false);\n\t\tassert.strictEqual(group.contains(untypedDiffInput2), false);\n\n\t\tgroup.openEditor(diffInput1, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.contains(untypedInput1), true);\n\t\tassert.strictEqual(group.contains(untypedInput2), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput1), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput2), false);\n\n\t\tgroup.openEditor(diffInput2, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.contains(untypedInput1), true);\n\t\tassert.strictEqual(group.contains(untypedInput2), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput1), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput2), true);\n\n\t\tgroup.closeEditor(input1);\n\n\t\tassert.strictEqual(group.contains(untypedInput1), false);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.BOTH }), false);\n\t\tassert.strictEqual(group.contains(untypedInput2), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput1), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput2), true);\n\n\t\tgroup.closeEditor(input2);\n\n\t\tassert.strictEqual(group.contains(untypedInput1), false);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(untypedInput2), false);\n\t\tassert.strictEqual(group.contains(untypedInput2, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput1), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput2), true);\n\n\t\tgroup.closeEditor(diffInput1);\n\n\t\tassert.strictEqual(group.contains(untypedInput1), false);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(untypedInput2), false);\n\t\tassert.strictEqual(group.contains(untypedInput2, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(untypedDiffInput1), false);\n\t\tassert.strictEqual(group.contains(untypedDiffInput2), true);\n\n\t\tgroup.closeEditor(diffInput2);\n\n\t\tassert.strictEqual(group.contains(untypedInput1), false);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.ANY }), false);\n\t\tassert.strictEqual(group.contains(untypedInput2), false);\n\t\tassert.strictEqual(group.contains(untypedInput2, { supportSideBySide: SideBySideEditor.ANY }), false);\n\t\tassert.strictEqual(group.contains(untypedDiffInput1), false);\n\t\tassert.strictEqual(group.contains(untypedDiffInput2), false);\n\n\t\tassert.strictEqual(group.count, 0);\n\t\tgroup.openEditor(sideBySideInputSame, { pinned: true, active: true });\n\t\tassert.strictEqual(group.contains(untypedSideBySideInputSame), true);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.BOTH }), true);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.ANY, strictEquals: true }), false);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.BOTH, strictEquals: true }), false);\n\n\t\tgroup.closeEditor(sideBySideInputSame);\n\n\t\tassert.strictEqual(group.count, 0);\n\t\tgroup.openEditor(sideBySideInputDifferent, { pinned: true, active: true });\n\t\tassert.strictEqual(group.contains(untypedSideBySideInputDifferent), true);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(untypedInput1, { supportSideBySide: SideBySideEditor.BOTH }), false);\n\t});\n\n\ttest('contains()', () => {\n\t\tconst group = createEditorGroupModel();\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tconst diffInput1 = instantiationService.createInstance(DiffEditorInput, 'name', 'description', input1, input2, undefined);\n\t\tconst diffInput2 = instantiationService.createInstance(DiffEditorInput, 'name', 'description', input2, input1, undefined);\n\n\t\tconst sideBySideInputSame = instantiationService.createInstance(SideBySideEditorInput, 'name', undefined, input1, input1);\n\t\tconst sideBySideInputDifferent = instantiationService.createInstance(SideBySideEditorInput, 'name', undefined, input1, input2);\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.contains(input1), true);\n\t\tassert.strictEqual(group.contains(input1, { strictEquals: true }), true);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(input2), false);\n\t\tassert.strictEqual(group.contains(input2, { strictEquals: true }), false);\n\t\tassert.strictEqual(group.contains(input2, { supportSideBySide: SideBySideEditor.ANY }), false);\n\t\tassert.strictEqual(group.contains(diffInput1), false);\n\t\tassert.strictEqual(group.contains(diffInput2), false);\n\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.contains(input1), true);\n\t\tassert.strictEqual(group.contains(input2), true);\n\t\tassert.strictEqual(group.contains(diffInput1), false);\n\t\tassert.strictEqual(group.contains(diffInput2), false);\n\n\t\tgroup.openEditor(diffInput1, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.contains(input1), true);\n\t\tassert.strictEqual(group.contains(input2), true);\n\t\tassert.strictEqual(group.contains(diffInput1), true);\n\t\tassert.strictEqual(group.contains(diffInput2), false);\n\n\t\tgroup.openEditor(diffInput2, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.contains(input1), true);\n\t\tassert.strictEqual(group.contains(input2), true);\n\t\tassert.strictEqual(group.contains(diffInput1), true);\n\t\tassert.strictEqual(group.contains(diffInput2), true);\n\n\t\tgroup.closeEditor(input1);\n\n\t\tassert.strictEqual(group.contains(input1), false);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(input2), true);\n\t\tassert.strictEqual(group.contains(diffInput1), true);\n\t\tassert.strictEqual(group.contains(diffInput2), true);\n\n\t\tgroup.closeEditor(input2);\n\n\t\tassert.strictEqual(group.contains(input1), false);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(input2), false);\n\t\tassert.strictEqual(group.contains(input2, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(diffInput1), true);\n\t\tassert.strictEqual(group.contains(diffInput2), true);\n\n\t\tgroup.closeEditor(diffInput1);\n\n\t\tassert.strictEqual(group.contains(input1), false);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(input2), false);\n\t\tassert.strictEqual(group.contains(input2, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(diffInput1), false);\n\t\tassert.strictEqual(group.contains(diffInput2), true);\n\n\t\tgroup.closeEditor(diffInput2);\n\n\t\tassert.strictEqual(group.contains(input1), false);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.ANY }), false);\n\t\tassert.strictEqual(group.contains(input2), false);\n\t\tassert.strictEqual(group.contains(input2, { supportSideBySide: SideBySideEditor.ANY }), false);\n\t\tassert.strictEqual(group.contains(diffInput1), false);\n\t\tassert.strictEqual(group.contains(diffInput2), false);\n\n\t\tconst input3 = input(undefined, true, URI.parse('foo://bar'));\n\n\t\tconst input4 = input(undefined, true, URI.parse('foo://barsomething'));\n\n\t\tgroup.openEditor(input3, { pinned: true, active: true });\n\t\tassert.strictEqual(group.contains(input4), false);\n\t\tassert.strictEqual(group.contains(input3), true);\n\n\t\tgroup.closeEditor(input3);\n\n\t\tassert.strictEqual(group.contains(input3), false);\n\n\t\tassert.strictEqual(group.count, 0);\n\t\tgroup.openEditor(sideBySideInputSame, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.contains(sideBySideInputSame), true);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.BOTH }), true);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.ANY, strictEquals: true }), true);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.BOTH, strictEquals: true }), true);\n\n\t\tgroup.closeEditor(sideBySideInputSame);\n\n\t\tassert.strictEqual(group.count, 0);\n\t\tgroup.openEditor(sideBySideInputDifferent, { pinned: true, active: true });\n\t\tassert.strictEqual(group.contains(sideBySideInputDifferent), true);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.ANY }), true);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.ANY, strictEquals: true }), true);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.BOTH }), false);\n\t\tassert.strictEqual(group.contains(input1, { supportSideBySide: SideBySideEditor.BOTH, strictEquals: true }), false);\n\t});\n\n\ttest('group serialization', function () {\n\t\tinst().invokeFunction(accessor => Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor));\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\t// Case 1: inputs can be serialized and deserialized\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: false, active: true });\n\n\t\tlet deserialized = createEditorGroupModel(group.serialize());\n\t\tassert.strictEqual(group.id, deserialized.id);\n\t\tassert.strictEqual(deserialized.count, 3);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.SEQUENTIAL).length, 3);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 3);\n\t\tassert.strictEqual(deserialized.isPinned(input1), true);\n\t\tassert.strictEqual(deserialized.isPinned(input2), true);\n\t\tassert.strictEqual(deserialized.isPinned(input3), false);\n\t\tassert.strictEqual(deserialized.isActive(input3), true);\n\n\t\t// Case 2: inputs cannot be serialized\n\t\tTestEditorInputSerializer.disableSerialize = true;\n\n\t\tdeserialized = createEditorGroupModel(group.serialize());\n\t\tassert.strictEqual(group.id, deserialized.id);\n\t\tassert.strictEqual(deserialized.count, 0);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.SEQUENTIAL).length, 0);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\n\t\t// Case 3: inputs cannot be deserialized\n\t\tTestEditorInputSerializer.disableSerialize = false;\n\t\tTestEditorInputSerializer.disableDeserialize = true;\n\n\t\tdeserialized = createEditorGroupModel(group.serialize());\n\t\tassert.strictEqual(group.id, deserialized.id);\n\t\tassert.strictEqual(deserialized.count, 0);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.SEQUENTIAL).length, 0);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\t});\n\n\ttest('group serialization (sticky editor)', function () {\n\t\tinst().invokeFunction(accessor => Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor));\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\t// Case 1: inputs can be serialized and deserialized\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: false, active: true });\n\n\t\tgroup.stick(input2);\n\t\tassert.ok(group.isSticky(input2));\n\n\t\tlet deserialized = createEditorGroupModel(group.serialize());\n\t\tassert.strictEqual(group.id, deserialized.id);\n\t\tassert.strictEqual(deserialized.count, 3);\n\n\t\tassert.strictEqual(deserialized.isPinned(input1), true);\n\t\tassert.strictEqual(deserialized.isActive(input1), false);\n\t\tassert.strictEqual(deserialized.isSticky(input1), false);\n\n\t\tassert.strictEqual(deserialized.isPinned(input2), true);\n\t\tassert.strictEqual(deserialized.isActive(input2), false);\n\t\tassert.strictEqual(deserialized.isSticky(input2), true);\n\n\t\tassert.strictEqual(deserialized.isPinned(input3), false);\n\t\tassert.strictEqual(deserialized.isActive(input3), true);\n\t\tassert.strictEqual(deserialized.isSticky(input3), false);\n\n\t\t// Case 2: inputs cannot be serialized\n\t\tTestEditorInputSerializer.disableSerialize = true;\n\n\t\tdeserialized = createEditorGroupModel(group.serialize());\n\t\tassert.strictEqual(group.id, deserialized.id);\n\t\tassert.strictEqual(deserialized.count, 0);\n\t\tassert.strictEqual(deserialized.stickyCount, 0);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.SEQUENTIAL).length, 0);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\n\t\t// Case 3: inputs cannot be deserialized\n\t\tTestEditorInputSerializer.disableSerialize = false;\n\t\tTestEditorInputSerializer.disableDeserialize = true;\n\n\t\tdeserialized = createEditorGroupModel(group.serialize());\n\t\tassert.strictEqual(group.id, deserialized.id);\n\t\tassert.strictEqual(deserialized.count, 0);\n\t\tassert.strictEqual(deserialized.stickyCount, 0);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.SEQUENTIAL).length, 0);\n\t\tassert.strictEqual(deserialized.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\t});\n\n\ttest('group serialization (locked group)', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tassert.strictEqual(events.locked.length, 0);\n\n\t\tgroup.lock(true);\n\t\tgroup.lock(true);\n\n\t\tassert.strictEqual(events.locked.length, 1);\n\n\t\tgroup.lock(false);\n\t\tgroup.lock(false);\n\n\t\tassert.strictEqual(events.locked.length, 2);\n\t});\n\n\ttest('locked group', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tgroup.lock(true);\n\n\t\tlet deserialized = createEditorGroupModel(group.serialize());\n\t\tassert.strictEqual(group.id, deserialized.id);\n\t\tassert.strictEqual(deserialized.count, 0);\n\t\tassert.strictEqual(deserialized.isLocked, true);\n\n\t\tgroup.lock(false);\n\t\tdeserialized = createEditorGroupModel(group.serialize());\n\t\tassert.strictEqual(group.id, deserialized.id);\n\t\tassert.strictEqual(deserialized.count, 0);\n\t\tassert.strictEqual(deserialized.isLocked, false);\n\t});\n\n\ttest('index', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tassert.strictEqual(events.index.length, 0);\n\n\t\tgroup.setIndex(4);\n\n\t\tassert.strictEqual(events.index.length, 1);\n\t});\n\n\ttest('label', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tassert.strictEqual(events.label.length, 0);\n\n\t\tgroup.setLabel('Window 1');\n\n\t\tassert.strictEqual(events.label.length, 1);\n\t});\n\n\ttest('active', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tassert.strictEqual(events.active.length, 0);\n\n\t\tgroup.setActive(undefined);\n\n\t\tassert.strictEqual(events.active.length, 1);\n\t});\n\n\ttest('One Editor', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tassert.strictEqual(group.count, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\n\t\t// Active && Pinned\n\t\tconst input1 = input();\n\t\tconst { editor: openedEditor, isNew } = group.openEditor(input1, { active: true, pinned: true });\n\t\tassert.strictEqual(openedEditor, input1);\n\t\tassert.strictEqual(isNew, true);\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 1);\n\t\tassert.strictEqual(group.findEditor(input1)![0], input1);\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.strictEqual(group.isActive(input1), true);\n\t\tassert.strictEqual(group.isPinned(input1), true);\n\t\tassert.strictEqual(group.isPinned(0), true);\n\t\tassert.strictEqual(group.isFirst(input1), true);\n\t\tassert.strictEqual(group.isLast(input1), true);\n\n\t\tassert.strictEqual(events.opened[0].editor, input1);\n\t\tassert.strictEqual(events.opened[0].editorIndex, 0);\n\t\tassert.strictEqual(events.activated[0].editor, input1);\n\t\tassert.strictEqual(events.activated[0].editorIndex, 0);\n\n\t\tconst index = group.indexOf(input1);\n\t\tassert.strictEqual(group.findEditor(input1)![1], index);\n\t\tlet event = group.closeEditor(input1, EditorCloseContext.UNPIN);\n\t\tassert.strictEqual(event?.editor, input1);\n\t\tassert.strictEqual(event?.editorIndex, index);\n\t\tassert.strictEqual(group.count, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\t\tassert.strictEqual(group.activeEditor, null);\n\t\tassert.strictEqual(group.isFirst(input1), false);\n\t\tassert.strictEqual(group.isLast(input1), false);\n\t\tassert.strictEqual(events.closed[0].editor, input1);\n\t\tassert.strictEqual(events.closed[0].editorIndex, 0);\n\t\tassert.strictEqual(events.closed[0].context === EditorCloseContext.UNPIN, true);\n\n\t\t// Active && Preview\n\t\tconst input2 = input();\n\t\tgroup.openEditor(input2, { active: true, pinned: false });\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 1);\n\t\tassert.strictEqual(group.activeEditor, input2);\n\t\tassert.strictEqual(group.isActive(input2), true);\n\t\tassert.strictEqual(group.isPinned(input2), false);\n\t\tassert.strictEqual(group.isPinned(0), false);\n\n\t\tassert.strictEqual(events.opened[1].editor, input2);\n\t\tassert.strictEqual(events.opened[1].editorIndex, 0);\n\t\tassert.strictEqual(events.activated[1].editor, input2);\n\t\tassert.strictEqual(events.activated[1].editorIndex, 0);\n\n\t\tgroup.closeEditor(input2);\n\t\tassert.strictEqual(group.count, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\t\tassert.strictEqual(group.activeEditor, null);\n\t\tassert.strictEqual(events.closed[1].editor, input2);\n\t\tassert.strictEqual(events.closed[1].editorIndex, 0);\n\t\tassert.strictEqual(events.closed[1].context === EditorCloseContext.REPLACE, false);\n\n\t\tevent = group.closeEditor(input2);\n\t\tassert.ok(!event);\n\t\tassert.strictEqual(group.count, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\t\tassert.strictEqual(group.activeEditor, null);\n\t\tassert.strictEqual(events.closed[1].editor, input2);\n\n\t\t// Nonactive && Pinned => gets active because its first editor\n\t\tconst input3 = input();\n\t\tgroup.openEditor(input3, { active: false, pinned: true });\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 1);\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.isActive(input3), true);\n\t\tassert.strictEqual(group.isPinned(input3), true);\n\t\tassert.strictEqual(group.isPinned(0), true);\n\n\t\tassert.strictEqual(events.opened[2].editor, input3);\n\t\tassert.strictEqual(events.activated[2].editor, input3);\n\n\t\tgroup.closeEditor(input3);\n\t\tassert.strictEqual(group.count, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\t\tassert.strictEqual(group.activeEditor, null);\n\t\tassert.strictEqual(events.closed[2].editor, input3);\n\n\t\tassert.strictEqual(events.opened[2].editor, input3);\n\t\tassert.strictEqual(events.activated[2].editor, input3);\n\n\t\tgroup.closeEditor(input3);\n\t\tassert.strictEqual(group.count, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\t\tassert.strictEqual(group.activeEditor, null);\n\t\tassert.strictEqual(events.closed[2].editor, input3);\n\n\t\t// Nonactive && Preview => gets active because its first editor\n\t\tconst input4 = input();\n\t\tgroup.openEditor(input4);\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 1);\n\t\tassert.strictEqual(group.activeEditor, input4);\n\t\tassert.strictEqual(group.isActive(input4), true);\n\t\tassert.strictEqual(group.isPinned(input4), false);\n\t\tassert.strictEqual(group.isPinned(0), false);\n\n\t\tassert.strictEqual(events.opened[3].editor, input4);\n\t\tassert.strictEqual(events.activated[3].editor, input4);\n\n\t\tgroup.closeEditor(input4);\n\t\tassert.strictEqual(group.count, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\t\tassert.strictEqual(group.activeEditor, null);\n\t\tassert.strictEqual(events.closed[3].editor, input4);\n\t});\n\n\ttest('Multiple Editors - Pinned and Active', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tconst input1 = input('1');\n\t\tconst input1Copy = input('1');\n\t\tconst input2 = input('2');\n\t\tconst input3 = input('3');\n\n\t\t// Pinned and Active\n\t\tlet openedEditorResult = group.openEditor(input1, { pinned: true, active: true });\n\t\tassert.strictEqual(openedEditorResult.editor, input1);\n\t\tassert.strictEqual(openedEditorResult.isNew, true);\n\n\t\topenedEditorResult = group.openEditor(input1Copy, { pinned: true, active: true }); // opening copy of editor should still return existing one\n\t\tassert.strictEqual(openedEditorResult.editor, input1);\n\t\tassert.strictEqual(openedEditorResult.isNew, false);\n\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 3);\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.isActive(input1), false);\n\t\tassert.strictEqual(group.isPinned(input1), true);\n\t\tassert.strictEqual(group.isActive(input2), false);\n\t\tassert.strictEqual(group.isPinned(input2), true);\n\t\tassert.strictEqual(group.isActive(input3), true);\n\t\tassert.strictEqual(group.isPinned(input3), true);\n\t\tassert.strictEqual(group.isFirst(input1), true);\n\t\tassert.strictEqual(group.isFirst(input2), false);\n\t\tassert.strictEqual(group.isFirst(input3), false);\n\t\tassert.strictEqual(group.isLast(input1), false);\n\t\tassert.strictEqual(group.isLast(input2), false);\n\t\tassert.strictEqual(group.isLast(input3), true);\n\n\t\tassert.strictEqual(events.opened[0].editor, input1);\n\t\tassert.strictEqual(events.opened[1].editor, input2);\n\t\tassert.strictEqual(events.opened[2].editor, input3);\n\n\t\tassert.strictEqual(events.activated[0].editor, input1);\n\t\tassert.strictEqual(events.activated[0].editorIndex, 0);\n\t\tassert.strictEqual(events.activated[1].editor, input2);\n\t\tassert.strictEqual(events.activated[1].editorIndex, 1);\n\t\tassert.strictEqual(events.activated[2].editor, input3);\n\t\tassert.strictEqual(events.activated[2].editorIndex, 2);\n\n\t\tconst mru = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru[0], input3);\n\t\tassert.strictEqual(mru[1], input2);\n\t\tassert.strictEqual(mru[2], input1);\n\n\t\t// Add some tests where a matching input is used\n\t\t// and verify that events carry the original input\n\t\tconst sameInput1 = input('1');\n\t\tgroup.openEditor(sameInput1, { pinned: true, active: true });\n\t\tassert.strictEqual(events.activated[3].editor, input1);\n\t\tassert.strictEqual(events.activated[3].editorIndex, 0);\n\n\t\tgroup.unpin(sameInput1);\n\t\tassert.strictEqual(events.unpinned[0].editor, input1);\n\t\tassert.strictEqual(events.unpinned[0].editorIndex, 0);\n\n\t\tgroup.pin(sameInput1);\n\t\tassert.strictEqual(events.pinned[0].editor, input1);\n\t\tassert.strictEqual(events.pinned[0].editorIndex, 0);\n\n\t\tgroup.stick(sameInput1);\n\t\tassert.strictEqual(events.sticky[0].editor, input1);\n\t\tassert.strictEqual(events.sticky[0].editorIndex, 0);\n\n\t\tgroup.unstick(sameInput1);\n\t\tassert.strictEqual(events.unsticky[0].editor, input1);\n\t\tassert.strictEqual(events.unsticky[0].editorIndex, 0);\n\n\t\tgroup.moveEditor(sameInput1, 1);\n\t\tassert.strictEqual(events.moved[0].editor, input1);\n\t\tassert.strictEqual(events.moved[0].oldEditorIndex, 0);\n\t\tassert.strictEqual(events.moved[0].editorIndex, 1);\n\n\t\tgroup.closeEditor(sameInput1);\n\t\tassert.strictEqual(events.closed[0].editor, input1);\n\t\tassert.strictEqual(events.closed[0].editorIndex, 1);\n\n\t\tcloseAllEditors(group);\n\n\t\tassert.strictEqual(events.closed.length, 3);\n\t\tassert.strictEqual(group.count, 0);\n\t});\n\n\ttest('Multiple Editors - Preview editor moves to the side of the active one', function () {\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\tgroup.openEditor(input1, { pinned: false, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: true, active: true });\n\n\t\tassert.strictEqual(input3, group.getEditors(EditorsOrder.SEQUENTIAL)[2]);\n\n\t\tconst input4 = input();\n\t\tgroup.openEditor(input4, { pinned: false, active: true }); // this should cause the preview editor to move after input3\n\n\t\tassert.strictEqual(input4, group.getEditors(EditorsOrder.SEQUENTIAL)[2]);\n\t});\n\n\ttest('Multiple Editors - Pinned and Active (DEFAULT_OPEN_EDITOR_DIRECTION = Direction.LEFT)', function () {\n\t\tconst inst = new TestInstantiationService();\n\t\tinst.stub(IStorageService, disposables.add(new TestStorageService()));\n\t\tinst.stub(ILifecycleService, disposables.add(new TestLifecycleService()));\n\t\tinst.stub(IWorkspaceContextService, new TestContextService());\n\t\tinst.stub(ITelemetryService, NullTelemetryService);\n\n\t\tconst config = new TestConfigurationService();\n\t\tinst.stub(IConfigurationService, config);\n\t\tconfig.setUserConfiguration('workbench', { editor: { openPositioning: 'left' } });\n\n\t\tconst group: EditorGroupModel = disposables.add(inst.createInstance(EditorGroupModel, undefined));\n\n\t\tconst events = groupListener(group);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\t// Pinned and Active\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], input2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[2], input1);\n\n\t\tcloseAllEditors(group);\n\n\t\tassert.strictEqual(events.closed.length, 3);\n\t\tassert.strictEqual(group.count, 0);\n\t\tinst.dispose();\n\t});\n\n\ttest('Multiple Editors - Pinned and Not Active', function () {\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\t// Pinned and Active\n\t\tgroup.openEditor(input1, { pinned: true });\n\t\tgroup.openEditor(input2, { pinned: true });\n\t\tgroup.openEditor(input3, { pinned: true });\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 3);\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.strictEqual(group.isActive(input1), true);\n\t\tassert.strictEqual(group.isPinned(input1), true);\n\t\tassert.strictEqual(group.isPinned(0), true);\n\t\tassert.strictEqual(group.isActive(input2), false);\n\t\tassert.strictEqual(group.isPinned(input2), true);\n\t\tassert.strictEqual(group.isPinned(1), true);\n\t\tassert.strictEqual(group.isActive(input3), false);\n\t\tassert.strictEqual(group.isPinned(input3), true);\n\t\tassert.strictEqual(group.isPinned(2), true);\n\t\tassert.strictEqual(group.isPinned(input3), true);\n\n\t\tconst mru = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru[0], input1);\n\t\tassert.strictEqual(mru[1], input3);\n\t\tassert.strictEqual(mru[2], input2);\n\t});\n\n\ttest('Multiple Editors - Preview gets overwritten', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\t// Non active, preview\n\t\tgroup.openEditor(input1); // becomes active, preview\n\t\tgroup.openEditor(input2); // overwrites preview\n\t\tgroup.openEditor(input3); // overwrites preview\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 1);\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.isActive(input3), true);\n\t\tassert.strictEqual(group.isPinned(input3), false);\n\t\tassert.strictEqual(!group.isPinned(input3), true);\n\n\t\tassert.strictEqual(events.opened[0].editor, input1);\n\t\tassert.strictEqual(events.opened[1].editor, input2);\n\t\tassert.strictEqual(events.opened[2].editor, input3);\n\t\tassert.strictEqual(events.closed[0].editor, input1);\n\t\tassert.strictEqual(events.closed[1].editor, input2);\n\t\tassert.strictEqual(events.closed[0].context === EditorCloseContext.REPLACE, true);\n\t\tassert.strictEqual(events.closed[1].context === EditorCloseContext.REPLACE, true);\n\n\t\tconst mru = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru[0], input3);\n\t\tassert.strictEqual(mru.length, 1);\n\t});\n\n\ttest('Multiple Editors - set active', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: false, active: true });\n\n\t\tassert.strictEqual(group.activeEditor, input3);\n\n\t\tlet mru = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru[0], input3);\n\t\tassert.strictEqual(mru[1], input2);\n\t\tassert.strictEqual(mru[2], input1);\n\n\t\tgroup.setActive(input3);\n\t\tassert.strictEqual(events.activated.length, 3);\n\n\t\tgroup.setActive(input1);\n\t\tassert.strictEqual(events.activated[3].editor, input1);\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.strictEqual(group.isActive(input1), true);\n\t\tassert.strictEqual(group.isActive(input2), false);\n\t\tassert.strictEqual(group.isActive(input3), false);\n\n\t\tmru = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru[0], input1);\n\t\tassert.strictEqual(mru[1], input3);\n\t\tassert.strictEqual(mru[2], input2);\n\t});\n\n\ttest('Multiple Editors - pin and unpin', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: false, active: true });\n\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.count, 3);\n\n\t\tgroup.pin(input3);\n\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.isPinned(input3), true);\n\t\tassert.strictEqual(group.isActive(input3), true);\n\t\tassert.strictEqual(events.pinned[0].editor, input3);\n\t\tassert.strictEqual(group.count, 3);\n\n\t\tgroup.unpin(input1);\n\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.isPinned(input1), false);\n\t\tassert.strictEqual(group.isActive(input1), false);\n\t\tassert.strictEqual(events.unpinned[0].editor, input1);\n\t\tassert.strictEqual(group.count, 3);\n\n\t\tgroup.unpin(input2);\n\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.count, 2); // 2 previews got merged into one\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], input3);\n\t\tassert.strictEqual(events.closed[0].editor, input1);\n\t\tassert.strictEqual(group.count, 2);\n\n\t\tgroup.unpin(input3);\n\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.count, 1); // pinning replaced the preview\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input3);\n\t\tassert.strictEqual(events.closed[1].editor, input2);\n\t\tassert.strictEqual(group.count, 1);\n\t});\n\n\ttest('Multiple Editors - closing picks next from MRU list', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tconst input4 = input();\n\t\tconst input5 = input();\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: true, active: true });\n\t\tgroup.openEditor(input4, { pinned: true, active: true });\n\t\tgroup.openEditor(input5, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.activeEditor, input5);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0], input5);\n\t\tassert.strictEqual(group.count, 5);\n\n\t\tgroup.closeEditor(input5);\n\t\tassert.strictEqual(group.activeEditor, input4);\n\t\tassert.strictEqual(events.activated[5].editor, input4);\n\t\tassert.strictEqual(group.count, 4);\n\n\t\tgroup.setActive(input1);\n\t\tgroup.setActive(input4);\n\t\tgroup.closeEditor(input4);\n\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.strictEqual(group.count, 3);\n\n\t\tgroup.closeEditor(input1);\n\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.count, 2);\n\n\t\tgroup.setActive(input2);\n\t\tgroup.closeEditor(input2);\n\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.count, 1);\n\n\t\tgroup.closeEditor(input3);\n\n\t\tassert.ok(!group.activeEditor);\n\t\tassert.strictEqual(group.count, 0);\n\t});\n\n\ttest('Multiple Editors - closing picks next to the right', function () {\n\t\tconst inst = new TestInstantiationService();\n\t\tinst.stub(IStorageService, disposables.add(new TestStorageService()));\n\t\tinst.stub(ILifecycleService, disposables.add(new TestLifecycleService()));\n\t\tinst.stub(IWorkspaceContextService, new TestContextService());\n\t\tinst.stub(ITelemetryService, NullTelemetryService);\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('workbench', { editor: { focusRecentEditorAfterClose: false } });\n\t\tinst.stub(IConfigurationService, config);\n\n\t\tconst group = disposables.add(inst.createInstance(EditorGroupModel, undefined));\n\t\tconst events = groupListener(group);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tconst input4 = input();\n\t\tconst input5 = input();\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: true, active: true });\n\t\tgroup.openEditor(input4, { pinned: true, active: true });\n\t\tgroup.openEditor(input5, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.activeEditor, input5);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0], input5);\n\t\tassert.strictEqual(group.count, 5);\n\n\t\tgroup.closeEditor(input5);\n\t\tassert.strictEqual(group.activeEditor, input4);\n\t\tassert.strictEqual(events.activated[5].editor, input4);\n\t\tassert.strictEqual(group.count, 4);\n\n\t\tgroup.setActive(input1);\n\t\tgroup.closeEditor(input1);\n\n\t\tassert.strictEqual(group.activeEditor, input2);\n\t\tassert.strictEqual(group.count, 3);\n\n\t\tgroup.setActive(input3);\n\t\tgroup.closeEditor(input3);\n\n\t\tassert.strictEqual(group.activeEditor, input4);\n\t\tassert.strictEqual(group.count, 2);\n\n\t\tgroup.closeEditor(input4);\n\n\t\tassert.strictEqual(group.activeEditor, input2);\n\t\tassert.strictEqual(group.count, 1);\n\n\t\tgroup.closeEditor(input2);\n\n\t\tassert.ok(!group.activeEditor);\n\t\tassert.strictEqual(group.count, 0);\n\t\tinst.dispose();\n\t});\n\n\ttest('Multiple Editors - move editor', function () {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tconst input4 = input();\n\t\tconst input5 = input();\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\n\t\tgroup.moveEditor(input1, 1);\n\n\t\tassert.strictEqual(events.moved[0].editor, input1);\n\t\tassert.strictEqual(events.moved[0].oldEditorIndex, 0);\n\t\tassert.strictEqual(events.moved[0].editorIndex, 1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], input1);\n\n\t\tgroup.setActive(input1);\n\t\tgroup.openEditor(input3, { pinned: true, active: true });\n\t\tgroup.openEditor(input4, { pinned: true, active: true });\n\t\tgroup.openEditor(input5, { pinned: true, active: true });\n\n\t\tgroup.moveEditor(input4, 0);\n\n\t\tassert.strictEqual(events.moved[1].editor, input4);\n\t\tassert.strictEqual(events.moved[1].oldEditorIndex, 3);\n\t\tassert.strictEqual(events.moved[1].editorIndex, 0);\n\t\tassert.strictEqual(events.moved[1].editor, input4);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input4);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], input2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[2], input1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[3], input3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[4], input5);\n\n\t\tgroup.moveEditor(input4, 3);\n\t\tgroup.moveEditor(input2, 1);\n\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], input2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[2], input3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[3], input4);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[4], input5);\n\n\t\tassert.strictEqual(events.moved.length, 4);\n\t\tgroup.moveEditor(input1, 0);\n\t\tassert.strictEqual(events.moved.length, 4);\n\t\tgroup.moveEditor(input1, -1);\n\t\tassert.strictEqual(events.moved.length, 4);\n\n\t\tgroup.moveEditor(input5, 4);\n\t\tassert.strictEqual(events.moved.length, 4);\n\t\tgroup.moveEditor(input5, 100);\n\t\tassert.strictEqual(events.moved.length, 4);\n\n\t\tgroup.moveEditor(input5, -1);\n\t\tassert.strictEqual(events.moved.length, 5);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input5);\n\n\t\tgroup.moveEditor(input1, 100);\n\t\tassert.strictEqual(events.moved.length, 6);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[4], input1);\n\t});\n\n\ttest('Multiple Editors - move editor across groups', function () {\n\t\tconst group1 = createEditorGroupModel();\n\t\tconst group2 = createEditorGroupModel();\n\n\t\tconst g1_input1 = input();\n\t\tconst g1_input2 = input();\n\t\tconst g2_input1 = input();\n\n\t\tgroup1.openEditor(g1_input1, { active: true, pinned: true });\n\t\tgroup1.openEditor(g1_input2, { active: true, pinned: true });\n\t\tgroup2.openEditor(g2_input1, { active: true, pinned: true });\n\n\t\t// A move across groups is a close in the one group and an open in the other group at a specific index\n\t\tgroup2.closeEditor(g2_input1);\n\t\tgroup1.openEditor(g2_input1, { active: true, pinned: true, index: 1 });\n\n\t\tassert.strictEqual(group1.count, 3);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.SEQUENTIAL)[0], g1_input1);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.SEQUENTIAL)[1], g2_input1);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.SEQUENTIAL)[2], g1_input2);\n\t});\n\n\ttest('Multiple Editors - move editor across groups (input already exists in group 1)', function () {\n\t\tconst group1 = createEditorGroupModel();\n\t\tconst group2 = createEditorGroupModel();\n\n\t\tconst g1_input1 = input();\n\t\tconst g1_input2 = input();\n\t\tconst g1_input3 = input();\n\t\tconst g2_input1 = g1_input2;\n\n\t\tgroup1.openEditor(g1_input1, { active: true, pinned: true });\n\t\tgroup1.openEditor(g1_input2, { active: true, pinned: true });\n\t\tgroup1.openEditor(g1_input3, { active: true, pinned: true });\n\t\tgroup2.openEditor(g2_input1, { active: true, pinned: true });\n\n\t\t// A move across groups is a close in the one group and an open in the other group at a specific index\n\t\tgroup2.closeEditor(g2_input1);\n\t\tgroup1.openEditor(g2_input1, { active: true, pinned: true, index: 0 });\n\n\t\tassert.strictEqual(group1.count, 3);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.SEQUENTIAL)[0], g1_input2);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.SEQUENTIAL)[1], g1_input1);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.SEQUENTIAL)[2], g1_input3);\n\t});\n\n\ttest('Multiple Editors - Pinned & Non Active', function () {\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tgroup.openEditor(input1);\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.strictEqual(group.previewEditor, input1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input1);\n\t\tassert.strictEqual(group.count, 1);\n\n\t\tconst input2 = input();\n\t\tgroup.openEditor(input2, { pinned: true, active: false });\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.strictEqual(group.previewEditor, input1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], input2);\n\t\tassert.strictEqual(group.count, 2);\n\n\t\tconst input3 = input();\n\t\tgroup.openEditor(input3, { pinned: true, active: false });\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.strictEqual(group.previewEditor, input1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], input3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[2], input2);\n\t\tassert.strictEqual(group.isPinned(input1), false);\n\t\tassert.strictEqual(group.isPinned(input2), true);\n\t\tassert.strictEqual(group.isPinned(input3), true);\n\t\tassert.strictEqual(group.count, 3);\n\t});\n\n\ttest('Multiple Editors - Close Others, Close Left, Close Right', function () {\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tconst input4 = input();\n\t\tconst input5 = input();\n\n\t\tgroup.openEditor(input1, { active: true, pinned: true });\n\t\tgroup.openEditor(input2, { active: true, pinned: true });\n\t\tgroup.openEditor(input3, { active: true, pinned: true });\n\t\tgroup.openEditor(input4, { active: true, pinned: true });\n\t\tgroup.openEditor(input5, { active: true, pinned: true });\n\n\t\t// Close Others\n\t\tcloseEditors(group, group.activeEditor!);\n\t\tassert.strictEqual(group.activeEditor, input5);\n\t\tassert.strictEqual(group.count, 1);\n\n\t\tcloseAllEditors(group);\n\t\tgroup.openEditor(input1, { active: true, pinned: true });\n\t\tgroup.openEditor(input2, { active: true, pinned: true });\n\t\tgroup.openEditor(input3, { active: true, pinned: true });\n\t\tgroup.openEditor(input4, { active: true, pinned: true });\n\t\tgroup.openEditor(input5, { active: true, pinned: true });\n\t\tgroup.setActive(input3);\n\n\t\t// Close Left\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tcloseEditors(group, group.activeEditor, CloseDirection.LEFT);\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], input4);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[2], input5);\n\n\t\tcloseAllEditors(group);\n\t\tgroup.openEditor(input1, { active: true, pinned: true });\n\t\tgroup.openEditor(input2, { active: true, pinned: true });\n\t\tgroup.openEditor(input3, { active: true, pinned: true });\n\t\tgroup.openEditor(input4, { active: true, pinned: true });\n\t\tgroup.openEditor(input5, { active: true, pinned: true });\n\t\tgroup.setActive(input3);\n\n\t\t// Close Right\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tcloseEditors(group, group.activeEditor, CloseDirection.RIGHT);\n\t\tassert.strictEqual(group.activeEditor, input3);\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], input1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], input2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[2], input3);\n\t});\n\n\ttest('Multiple Editors - real user example', function () {\n\t\tconst group = createEditorGroupModel();\n\n\t\t// [] -> /index.html/\n\t\tconst indexHtml = input('index.html');\n\t\tlet openedEditor = group.openEditor(indexHtml).editor;\n\t\tassert.strictEqual(openedEditor, indexHtml);\n\t\tassert.strictEqual(group.activeEditor, indexHtml);\n\t\tassert.strictEqual(group.previewEditor, indexHtml);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], indexHtml);\n\t\tassert.strictEqual(group.count, 1);\n\n\t\t// /index.html/ -> /index.html/\n\t\tconst sameIndexHtml = input('index.html');\n\t\topenedEditor = group.openEditor(sameIndexHtml).editor;\n\t\tassert.strictEqual(openedEditor, indexHtml);\n\t\tassert.strictEqual(group.activeEditor, indexHtml);\n\t\tassert.strictEqual(group.previewEditor, indexHtml);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], indexHtml);\n\t\tassert.strictEqual(group.count, 1);\n\n\t\t// /index.html/ -> /style.css/\n\t\tconst styleCss = input('style.css');\n\t\topenedEditor = group.openEditor(styleCss).editor;\n\t\tassert.strictEqual(openedEditor, styleCss);\n\t\tassert.strictEqual(group.activeEditor, styleCss);\n\t\tassert.strictEqual(group.previewEditor, styleCss);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], styleCss);\n\t\tassert.strictEqual(group.count, 1);\n\n\t\t// /style.css/ -> [/style.css/, test.js]\n\t\tconst testJs = input('test.js');\n\t\topenedEditor = group.openEditor(testJs, { active: true, pinned: true }).editor;\n\t\tassert.strictEqual(openedEditor, testJs);\n\t\tassert.strictEqual(group.previewEditor, styleCss);\n\t\tassert.strictEqual(group.activeEditor, testJs);\n\t\tassert.strictEqual(group.isPinned(styleCss), false);\n\t\tassert.strictEqual(group.isPinned(testJs), true);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], styleCss);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], testJs);\n\t\tassert.strictEqual(group.count, 2);\n\n\t\t// [/style.css/, test.js] -> [test.js, /index.html/]\n\t\tconst indexHtml2 = input('index.html');\n\t\tgroup.openEditor(indexHtml2, { active: true });\n\t\tassert.strictEqual(group.activeEditor, indexHtml2);\n\t\tassert.strictEqual(group.previewEditor, indexHtml2);\n\t\tassert.strictEqual(group.isPinned(indexHtml2), false);\n\t\tassert.strictEqual(group.isPinned(testJs), true);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[0], testJs);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], indexHtml2);\n\t\tassert.strictEqual(group.count, 2);\n\n\t\t// make test.js active\n\t\tconst testJs2 = input('test.js');\n\t\tgroup.setActive(testJs2);\n\t\tassert.strictEqual(group.activeEditor, testJs);\n\t\tassert.strictEqual(group.isActive(testJs2), true);\n\t\tassert.strictEqual(group.count, 2);\n\n\t\t// [test.js, /indexHtml/] -> [test.js, index.html]\n\t\tconst indexHtml3 = input('index.html');\n\t\tgroup.pin(indexHtml3);\n\t\tassert.strictEqual(group.isPinned(indexHtml3), true);\n\t\tassert.strictEqual(group.activeEditor, testJs);\n\n\t\t// [test.js, index.html] -> [test.js, file.ts, index.html]\n\t\tconst fileTs = input('file.ts');\n\t\tgroup.openEditor(fileTs, { active: true, pinned: true });\n\t\tassert.strictEqual(group.isPinned(fileTs), true);\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.activeEditor, fileTs);\n\n\t\t// [test.js, index.html, file.ts] -> [test.js, /file.ts/, index.html]\n\t\tgroup.unpin(fileTs);\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.isPinned(fileTs), false);\n\t\tassert.strictEqual(group.activeEditor, fileTs);\n\n\t\t// [test.js, /file.ts/, index.html] -> [test.js, /other.ts/, index.html]\n\t\tconst otherTs = input('other.ts');\n\t\tgroup.openEditor(otherTs, { active: true });\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.activeEditor, otherTs);\n\t\tassert.ok(group.getEditors(EditorsOrder.SEQUENTIAL)[0].matches(testJs));\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], otherTs);\n\t\tassert.ok(group.getEditors(EditorsOrder.SEQUENTIAL)[2].matches(indexHtml));\n\n\t\t// make index.html active\n\t\tconst indexHtml4 = input('index.html');\n\t\tgroup.setActive(indexHtml4);\n\t\tassert.strictEqual(group.activeEditor, indexHtml2);\n\n\t\t// [test.js, /other.ts/, index.html] -> [test.js, /other.ts/]\n\t\tgroup.closeEditor(indexHtml);\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.activeEditor, otherTs);\n\t\tassert.ok(group.getEditors(EditorsOrder.SEQUENTIAL)[0].matches(testJs));\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL)[1], otherTs);\n\n\t\t// [test.js, /other.ts/] -> [test.js]\n\t\tgroup.closeEditor(otherTs);\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.activeEditor, testJs);\n\t\tassert.ok(group.getEditors(EditorsOrder.SEQUENTIAL)[0].matches(testJs));\n\n\t\t// [test.js] -> /test.js/\n\t\tgroup.unpin(testJs);\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.activeEditor, testJs);\n\t\tassert.ok(group.getEditors(EditorsOrder.SEQUENTIAL)[0].matches(testJs));\n\t\tassert.strictEqual(group.isPinned(testJs), false);\n\n\t\t// /test.js/ -> []\n\t\tgroup.closeEditor(testJs);\n\t\tassert.strictEqual(group.count, 0);\n\t\tassert.strictEqual(group.activeEditor, null);\n\t\tassert.strictEqual(group.previewEditor, null);\n\t});\n\n\ttest('Single Group, Single Editor - persist', function () {\n\t\tconst inst = new TestInstantiationService();\n\n\t\tinst.stub(IStorageService, disposables.add(new TestStorageService()));\n\t\tinst.stub(IWorkspaceContextService, new TestContextService());\n\t\tconst lifecycle = disposables.add(new TestLifecycleService());\n\t\tinst.stub(ILifecycleService, lifecycle);\n\t\tinst.stub(ITelemetryService, NullTelemetryService);\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('workbench', { editor: { openPositioning: 'right' } });\n\t\tinst.stub(IConfigurationService, config);\n\n\t\tinst.invokeFunction(accessor => Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor));\n\n\t\tlet group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tgroup.openEditor(input1);\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.activeEditor!.matches(input1), true);\n\t\tassert.strictEqual(group.previewEditor!.matches(input1), true);\n\t\tassert.strictEqual(group.isActive(input1), true);\n\n\t\t// Create model again - should load from storage\n\t\tgroup = disposables.add(inst.createInstance(EditorGroupModel, group.serialize()));\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.activeEditor!.matches(input1), true);\n\t\tassert.strictEqual(group.previewEditor!.matches(input1), true);\n\t\tassert.strictEqual(group.isActive(input1), true);\n\t\tinst.dispose();\n\t});\n\n\ttest('Multiple Groups, Multiple editors - persist', function () {\n\t\tconst inst = new TestInstantiationService();\n\n\t\tinst.stub(IStorageService, disposables.add(new TestStorageService()));\n\t\tinst.stub(IWorkspaceContextService, new TestContextService());\n\t\tconst lifecycle = disposables.add(new TestLifecycleService());\n\t\tinst.stub(ILifecycleService, lifecycle);\n\t\tinst.stub(ITelemetryService, NullTelemetryService);\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('workbench', { editor: { openPositioning: 'right' } });\n\t\tinst.stub(IConfigurationService, config);\n\n\t\tinst.invokeFunction(accessor => Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor));\n\n\t\tlet group1 = createEditorGroupModel();\n\n\t\tconst g1_input1 = input();\n\t\tconst g1_input2 = input();\n\t\tconst g1_input3 = input();\n\n\t\tgroup1.openEditor(g1_input1, { active: true, pinned: true });\n\t\tgroup1.openEditor(g1_input2, { active: true, pinned: false });\n\t\tgroup1.openEditor(g1_input3, { active: false, pinned: true });\n\n\t\tlet group2 = createEditorGroupModel();\n\n\t\tconst g2_input1 = input();\n\t\tconst g2_input2 = input();\n\t\tconst g2_input3 = input();\n\n\t\tgroup2.openEditor(g2_input1, { active: true, pinned: true });\n\t\tgroup2.openEditor(g2_input2, { active: false, pinned: false });\n\t\tgroup2.openEditor(g2_input3, { active: false, pinned: true });\n\n\t\tassert.strictEqual(group1.count, 3);\n\t\tassert.strictEqual(group2.count, 3);\n\t\tassert.strictEqual(group1.activeEditor!.matches(g1_input2), true);\n\t\tassert.strictEqual(group2.activeEditor!.matches(g2_input1), true);\n\t\tassert.strictEqual(group1.previewEditor!.matches(g1_input2), true);\n\t\tassert.strictEqual(group2.previewEditor!.matches(g2_input2), true);\n\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0].matches(g1_input2), true);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[1].matches(g1_input3), true);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[2].matches(g1_input1), true);\n\n\t\tassert.strictEqual(group2.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0].matches(g2_input1), true);\n\t\tassert.strictEqual(group2.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[1].matches(g2_input3), true);\n\t\tassert.strictEqual(group2.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[2].matches(g2_input2), true);\n\n\t\t// Create model again - should load from storage\n\t\tgroup1 = disposables.add(inst.createInstance(EditorGroupModel, group1.serialize()));\n\t\tgroup2 = disposables.add(inst.createInstance(EditorGroupModel, group2.serialize()));\n\n\t\tassert.strictEqual(group1.count, 3);\n\t\tassert.strictEqual(group2.count, 3);\n\t\tassert.strictEqual(group1.activeEditor!.matches(g1_input2), true);\n\t\tassert.strictEqual(group2.activeEditor!.matches(g2_input1), true);\n\t\tassert.strictEqual(group1.previewEditor!.matches(g1_input2), true);\n\t\tassert.strictEqual(group2.previewEditor!.matches(g2_input2), true);\n\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0].matches(g1_input2), true);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[1].matches(g1_input3), true);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[2].matches(g1_input1), true);\n\n\t\tassert.strictEqual(group2.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0].matches(g2_input1), true);\n\t\tassert.strictEqual(group2.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[1].matches(g2_input3), true);\n\t\tassert.strictEqual(group2.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[2].matches(g2_input2), true);\n\t\tinst.dispose();\n\t});\n\n\ttest('Single group, multiple editors - persist (some not persistable)', function () {\n\t\tconst inst = new TestInstantiationService();\n\n\t\tinst.stub(IStorageService, disposables.add(new TestStorageService()));\n\t\tinst.stub(IWorkspaceContextService, new TestContextService());\n\t\tconst lifecycle = disposables.add(new TestLifecycleService());\n\t\tinst.stub(ILifecycleService, lifecycle);\n\t\tinst.stub(ITelemetryService, NullTelemetryService);\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('workbench', { editor: { openPositioning: 'right' } });\n\t\tinst.stub(IConfigurationService, config);\n\n\t\tinst.invokeFunction(accessor => Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor));\n\n\t\tlet group = createEditorGroupModel();\n\n\t\tconst serializableInput1 = input();\n\t\tconst nonSerializableInput2 = input('3', true);\n\t\tconst serializableInput2 = input();\n\n\t\tgroup.openEditor(serializableInput1, { active: true, pinned: true });\n\t\tgroup.openEditor(nonSerializableInput2, { active: true, pinned: false });\n\t\tgroup.openEditor(serializableInput2, { active: false, pinned: true });\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.activeEditor!.matches(nonSerializableInput2), true);\n\t\tassert.strictEqual(group.previewEditor!.matches(nonSerializableInput2), true);\n\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0].matches(nonSerializableInput2), true);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[1].matches(serializableInput2), true);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[2].matches(serializableInput1), true);\n\n\t\t// Create model again - should load from storage\n\t\tgroup = disposables.add(inst.createInstance(EditorGroupModel, group.serialize()));\n\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.activeEditor!.matches(serializableInput2), true);\n\t\tassert.strictEqual(group.previewEditor, null);\n\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0].matches(serializableInput2), true);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[1].matches(serializableInput1), true);\n\t\tinst.dispose();\n\t});\n\n\ttest('Single group, multiple editors - persist (some not persistable, sticky editors)', function () {\n\t\tconst inst = new TestInstantiationService();\n\n\t\tinst.stub(IStorageService, disposables.add(new TestStorageService()));\n\t\tinst.stub(IWorkspaceContextService, new TestContextService());\n\t\tconst lifecycle = disposables.add(new TestLifecycleService());\n\t\tinst.stub(ILifecycleService, lifecycle);\n\t\tinst.stub(ITelemetryService, NullTelemetryService);\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('workbench', { editor: { openPositioning: 'right' } });\n\t\tinst.stub(IConfigurationService, config);\n\n\t\tinst.invokeFunction(accessor => Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor));\n\n\t\tlet group = createEditorGroupModel();\n\n\t\tconst serializableInput1 = input();\n\t\tconst nonSerializableInput2 = input('3', true);\n\t\tconst serializableInput2 = input();\n\n\t\tgroup.openEditor(serializableInput1, { active: true, pinned: true });\n\t\tgroup.openEditor(nonSerializableInput2, { active: true, pinned: true, sticky: true });\n\t\tgroup.openEditor(serializableInput2, { active: false, pinned: true });\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\n\t\t// Create model again - should load from storage\n\t\tgroup = disposables.add(inst.createInstance(EditorGroupModel, group.serialize()));\n\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.stickyCount, 0);\n\t\tinst.dispose();\n\t});\n\n\ttest('Multiple groups, multiple editors - persist (some not persistable, causes empty group)', function () {\n\t\tconst inst = new TestInstantiationService();\n\n\t\tinst.stub(IStorageService, disposables.add(new TestStorageService()));\n\t\tinst.stub(IWorkspaceContextService, new TestContextService());\n\t\tconst lifecycle = disposables.add(new TestLifecycleService());\n\t\tinst.stub(ILifecycleService, lifecycle);\n\t\tinst.stub(ITelemetryService, NullTelemetryService);\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('workbench', { editor: { openPositioning: 'right' } });\n\t\tinst.stub(IConfigurationService, config);\n\n\t\tinst.invokeFunction(accessor => Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor));\n\n\t\tlet group1 = createEditorGroupModel();\n\t\tlet group2 = createEditorGroupModel();\n\n\t\tconst serializableInput1 = input();\n\t\tconst serializableInput2 = input();\n\t\tconst nonSerializableInput = input('2', true);\n\n\t\tgroup1.openEditor(serializableInput1, { pinned: true });\n\t\tgroup1.openEditor(serializableInput2);\n\n\t\tgroup2.openEditor(nonSerializableInput);\n\n\t\t// Create model again - should load from storage\n\t\tgroup1 = disposables.add(inst.createInstance(EditorGroupModel, group1.serialize()));\n\t\tgroup2 = disposables.add(inst.createInstance(EditorGroupModel, group2.serialize()));\n\n\t\tassert.strictEqual(group1.count, 2);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.SEQUENTIAL)[0].matches(serializableInput1), true);\n\t\tassert.strictEqual(group1.getEditors(EditorsOrder.SEQUENTIAL)[1].matches(serializableInput2), true);\n\t\tinst.dispose();\n\t});\n\n\ttest('Multiple Editors - Editor Dispose', function () {\n\t\tconst group1 = createEditorGroupModel();\n\t\tconst group2 = createEditorGroupModel();\n\n\t\tconst group1Listener = groupListener(group1);\n\t\tconst group2Listener = groupListener(group2);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\tgroup1.openEditor(input1, { pinned: true, active: true });\n\t\tgroup1.openEditor(input2, { pinned: true, active: true });\n\t\tgroup1.openEditor(input3, { pinned: true, active: true });\n\n\t\tgroup2.openEditor(input1, { pinned: true, active: true });\n\t\tgroup2.openEditor(input2, { pinned: true, active: true });\n\n\t\tinput1.dispose();\n\n\t\tassert.strictEqual(group1Listener.disposed.length, 1);\n\t\tassert.strictEqual(group1Listener.disposed[0].editorIndex, 0);\n\t\tassert.strictEqual(group2Listener.disposed.length, 1);\n\t\tassert.strictEqual(group2Listener.disposed[0].editorIndex, 0);\n\t\tassert.ok(group1Listener.disposed[0].editor.matches(input1));\n\t\tassert.ok(group2Listener.disposed[0].editor.matches(input1));\n\n\t\tinput3.dispose();\n\t\tassert.strictEqual(group1Listener.disposed.length, 2);\n\t\tassert.strictEqual(group1Listener.disposed[1].editorIndex, 2);\n\t\tassert.strictEqual(group2Listener.disposed.length, 1);\n\t\tassert.ok(group1Listener.disposed[1].editor.matches(input3));\n\t});\n\n\ttest('Preview tab does not have a stable position (https://github.com/microsoft/vscode/issues/8245)', function () {\n\t\tconst group1 = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\tgroup1.openEditor(input1, { pinned: true, active: true });\n\t\tgroup1.openEditor(input2, { active: true });\n\t\tgroup1.setActive(input1);\n\n\t\tgroup1.openEditor(input3, { active: true });\n\t\tassert.strictEqual(group1.indexOf(input3), 1);\n\t});\n\n\ttest('Multiple Editors - Editor Emits Dirty and Label Changed', function () {\n\t\tconst group1 = createEditorGroupModel();\n\t\tconst group2 = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tgroup1.openEditor(input1, { pinned: true, active: true });\n\t\tgroup2.openEditor(input2, { pinned: true, active: true });\n\n\t\tlet dirty1Counter = 0;\n\t\tdisposables.add(group1.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_DIRTY) {\n\t\t\t\tdirty1Counter++;\n\t\t\t}\n\t\t}));\n\n\t\tlet dirty2Counter = 0;\n\t\tdisposables.add(group2.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_DIRTY) {\n\t\t\t\tdirty2Counter++;\n\t\t\t}\n\t\t}));\n\n\t\tlet label1ChangeCounter = 0;\n\t\tdisposables.add(group1.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_LABEL) {\n\t\t\t\tlabel1ChangeCounter++;\n\t\t\t}\n\t\t}));\n\n\t\tlet label2ChangeCounter = 0;\n\t\tdisposables.add(group2.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_LABEL) {\n\t\t\t\tlabel2ChangeCounter++;\n\t\t\t}\n\t\t}));\n\n\t\t(<TestEditorInput>input1).setDirty();\n\t\t(<TestEditorInput>input1).setLabel();\n\n\t\tassert.strictEqual(dirty1Counter, 1);\n\t\tassert.strictEqual(label1ChangeCounter, 1);\n\n\t\t(<TestEditorInput>input2).setDirty();\n\t\t(<TestEditorInput>input2).setLabel();\n\n\t\tassert.strictEqual(dirty2Counter, 1);\n\t\tassert.strictEqual(label2ChangeCounter, 1);\n\n\t\tcloseAllEditors(group2);\n\n\t\t(<TestEditorInput>input2).setDirty();\n\t\t(<TestEditorInput>input2).setLabel();\n\n\t\tassert.strictEqual(dirty2Counter, 1);\n\t\tassert.strictEqual(label2ChangeCounter, 1);\n\t\tassert.strictEqual(dirty1Counter, 1);\n\t\tassert.strictEqual(label1ChangeCounter, 1);\n\t});\n\n\ttest('Sticky Editors', function () {\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tconst input4 = input();\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: false, active: true });\n\n\t\tassert.strictEqual(group.stickyCount, 0);\n\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL).length, 3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).length, 3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 3);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true }).length, 3);\n\n\t\t// Stick last editor should move it first and pin\n\t\tgroup.stick(input3);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true }).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: false }).length, 3);\n\t\tassert.strictEqual(group.isSticky(input1), false);\n\t\tassert.strictEqual(group.isSticky(input2), false);\n\t\tassert.strictEqual(group.isSticky(input3), true);\n\t\tassert.strictEqual(group.isPinned(input3), true);\n\t\tassert.strictEqual(group.indexOf(input1), 1);\n\t\tassert.strictEqual(group.indexOf(input2), 2);\n\t\tassert.strictEqual(group.indexOf(input3), 0);\n\n\t\tlet sequentialAllEditors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tassert.strictEqual(sequentialAllEditors.length, 3);\n\t\tlet sequentialEditorsExcludingSticky = group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true });\n\t\tassert.strictEqual(sequentialEditorsExcludingSticky.length, 2);\n\t\tassert.ok(sequentialEditorsExcludingSticky.indexOf(input1) >= 0);\n\t\tassert.ok(sequentialEditorsExcludingSticky.indexOf(input2) >= 0);\n\t\tlet mruAllEditors = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mruAllEditors.length, 3);\n\t\tlet mruEditorsExcludingSticky = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true });\n\t\tassert.strictEqual(mruEditorsExcludingSticky.length, 2);\n\t\tassert.ok(mruEditorsExcludingSticky.indexOf(input1) >= 0);\n\t\tassert.ok(mruEditorsExcludingSticky.indexOf(input2) >= 0);\n\n\t\t// Sticking same editor again is a no-op\n\t\tgroup.stick(input3);\n\t\tassert.strictEqual(group.isSticky(input3), true);\n\n\t\t// Sticking last editor now should move it after sticky one\n\t\tgroup.stick(input2);\n\t\tassert.strictEqual(group.stickyCount, 2);\n\t\tassert.strictEqual(group.isSticky(input1), false);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.isSticky(input3), true);\n\t\tassert.strictEqual(group.indexOf(input1), 2);\n\t\tassert.strictEqual(group.indexOf(input2), 1);\n\t\tassert.strictEqual(group.indexOf(input3), 0);\n\n\t\tsequentialAllEditors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tassert.strictEqual(sequentialAllEditors.length, 3);\n\t\tsequentialEditorsExcludingSticky = group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true });\n\t\tassert.strictEqual(sequentialEditorsExcludingSticky.length, 1);\n\t\tassert.ok(sequentialEditorsExcludingSticky.indexOf(input1) >= 0);\n\t\tmruAllEditors = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mruAllEditors.length, 3);\n\t\tmruEditorsExcludingSticky = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true });\n\t\tassert.strictEqual(mruEditorsExcludingSticky.length, 1);\n\t\tassert.ok(mruEditorsExcludingSticky.indexOf(input1) >= 0);\n\n\t\t// Sticking remaining editor also works\n\t\tgroup.stick(input1);\n\t\tassert.strictEqual(group.stickyCount, 3);\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.isSticky(input3), true);\n\t\tassert.strictEqual(group.indexOf(input1), 2);\n\t\tassert.strictEqual(group.indexOf(input2), 1);\n\t\tassert.strictEqual(group.indexOf(input3), 0);\n\n\t\tsequentialAllEditors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tassert.strictEqual(sequentialAllEditors.length, 3);\n\t\tsequentialEditorsExcludingSticky = group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true });\n\t\tassert.strictEqual(sequentialEditorsExcludingSticky.length, 0);\n\t\tmruAllEditors = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mruAllEditors.length, 3);\n\t\tmruEditorsExcludingSticky = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true });\n\t\tassert.strictEqual(mruEditorsExcludingSticky.length, 0);\n\n\t\t// Unsticking moves editor after sticky ones\n\t\tgroup.unstick(input3);\n\t\tassert.strictEqual(group.stickyCount, 2);\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.indexOf(input1), 1);\n\t\tassert.strictEqual(group.indexOf(input2), 0);\n\t\tassert.strictEqual(group.indexOf(input3), 2);\n\n\t\t// Unsticking all works\n\t\tgroup.unstick(input1);\n\t\tgroup.unstick(input2);\n\t\tassert.strictEqual(group.stickyCount, 0);\n\t\tassert.strictEqual(group.isSticky(input1), false);\n\t\tassert.strictEqual(group.isSticky(input2), false);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\n\t\tgroup.moveEditor(input1, 0);\n\t\tgroup.moveEditor(input2, 1);\n\t\tgroup.moveEditor(input3, 2);\n\n\t\t// Opening a new editor always opens after sticky editors\n\t\tgroup.stick(input1);\n\t\tgroup.stick(input2);\n\t\tgroup.setActive(input1);\n\n\t\tconst events = groupListener(group);\n\n\t\tgroup.openEditor(input4, { pinned: true, active: true });\n\t\tassert.strictEqual(group.indexOf(input4), 2);\n\t\tgroup.closeEditor(input4);\n\n\t\tassert.strictEqual(events.closed[0].sticky, false);\n\n\t\tgroup.setActive(input2);\n\n\t\tgroup.openEditor(input4, { pinned: true, active: true });\n\t\tassert.strictEqual(group.indexOf(input4), 2);\n\t\tgroup.closeEditor(input4);\n\n\t\tassert.strictEqual(events.closed[1].sticky, false);\n\n\t\t// Reset\n\t\tassert.strictEqual(group.stickyCount, 2);\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.indexOf(input1), 0);\n\t\tassert.strictEqual(group.indexOf(input2), 1);\n\t\tassert.strictEqual(group.indexOf(input3), 2);\n\n\t\t// Moving a sticky editor works\n\t\tgroup.moveEditor(input1, 1); // still moved within sticky range\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.indexOf(input1), 1);\n\t\tassert.strictEqual(group.indexOf(input2), 0);\n\t\tassert.strictEqual(group.indexOf(input3), 2);\n\n\t\tgroup.moveEditor(input1, 0); // still moved within sticky range\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.indexOf(input1), 0);\n\t\tassert.strictEqual(group.indexOf(input2), 1);\n\t\tassert.strictEqual(group.indexOf(input3), 2);\n\n\t\tgroup.moveEditor(input1, 2); // moved out of sticky range//\n\t\tassert.strictEqual(group.isSticky(input1), false);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.indexOf(input1), 2);\n\t\tassert.strictEqual(group.indexOf(input2), 0);\n\t\tassert.strictEqual(group.indexOf(input3), 1);\n\n\t\tgroup.moveEditor(input2, 2); // moved out of sticky range\n\t\tassert.strictEqual(group.isSticky(input1), false);\n\t\tassert.strictEqual(group.isSticky(input2), false);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.indexOf(input1), 1);\n\t\tassert.strictEqual(group.indexOf(input2), 2);\n\t\tassert.strictEqual(group.indexOf(input3), 0);\n\n\t\t// Reset\n\t\tgroup.moveEditor(input1, 0);\n\t\tgroup.moveEditor(input2, 1);\n\t\tgroup.moveEditor(input3, 2);\n\t\tgroup.stick(input1);\n\t\tgroup.unstick(input2);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), false);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.indexOf(input1), 0);\n\t\tassert.strictEqual(group.indexOf(input2), 1);\n\t\tassert.strictEqual(group.indexOf(input3), 2);\n\n\t\t// Moving a unsticky editor in works\n\t\tgroup.moveEditor(input3, 1); // still moved within unsticked range\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), false);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.indexOf(input1), 0);\n\t\tassert.strictEqual(group.indexOf(input2), 2);\n\t\tassert.strictEqual(group.indexOf(input3), 1);\n\n\t\tgroup.moveEditor(input3, 2); // still moved within unsticked range\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), false);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.indexOf(input1), 0);\n\t\tassert.strictEqual(group.indexOf(input2), 1);\n\t\tassert.strictEqual(group.indexOf(input3), 2);\n\n\t\tgroup.moveEditor(input3, 0); // moved into sticky range//\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), false);\n\t\tassert.strictEqual(group.isSticky(input3), true);\n\t\tassert.strictEqual(group.indexOf(input1), 1);\n\t\tassert.strictEqual(group.indexOf(input2), 2);\n\t\tassert.strictEqual(group.indexOf(input3), 0);\n\n\t\tgroup.moveEditor(input2, 0); // moved into sticky range\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.isSticky(input3), true);\n\t\tassert.strictEqual(group.indexOf(input1), 2);\n\t\tassert.strictEqual(group.indexOf(input2), 0);\n\t\tassert.strictEqual(group.indexOf(input3), 1);\n\n\t\t// Closing a sticky editor updates state properly\n\t\tgroup.stick(input1);\n\t\tgroup.stick(input2);\n\t\tgroup.unstick(input3);\n\t\tassert.strictEqual(group.stickyCount, 2);\n\t\tgroup.closeEditor(input1);\n\t\tassert.strictEqual(events.closed[2].sticky, true);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tgroup.closeEditor(input2);\n\t\tassert.strictEqual(events.closed[3].sticky, true);\n\t\tassert.strictEqual(group.stickyCount, 0);\n\n\t\tcloseAllEditors(group);\n\t\tassert.strictEqual(group.stickyCount, 0);\n\n\t\t// Open sticky\n\t\tgroup.openEditor(input1, { sticky: true });\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), false);\n\n\t\tgroup.openEditor(input2, { sticky: true });\n\t\tassert.strictEqual(group.stickyCount, 2);\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\n\t\tgroup.openEditor(input3, { pinned: true, active: true });\n\t\tgroup.openEditor(input4, { pinned: false, active: true, sticky: true });\n\t\tassert.strictEqual(group.stickyCount, 3);\n\t\tassert.strictEqual(group.isSticky(input1), true);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.isSticky(input4), true);\n\t\tassert.strictEqual(group.isPinned(input4), true);\n\n\t\tassert.strictEqual(group.indexOf(input1), 0);\n\t\tassert.strictEqual(group.indexOf(input2), 1);\n\t\tassert.strictEqual(group.indexOf(input3), 3);\n\t\tassert.strictEqual(group.indexOf(input4), 2);\n\t});\n\n\ttest('Sticky/Unsticky Editors sends correct editor index', function () {\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\t\tgroup.openEditor(input2, { pinned: true, active: true });\n\t\tgroup.openEditor(input3, { pinned: false, active: true });\n\n\t\tassert.strictEqual(group.stickyCount, 0);\n\n\t\tconst events = groupListener(group);\n\n\t\tgroup.stick(input3);\n\n\t\tassert.strictEqual(events.sticky[0].editorIndex, 0);\n\t\tassert.strictEqual(group.isSticky(input3), true);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\n\t\tgroup.stick(input2);\n\n\t\tassert.strictEqual(events.sticky[1].editorIndex, 1);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.stickyCount, 2);\n\n\t\tgroup.unstick(input3);\n\t\tassert.strictEqual(events.unsticky[0].editorIndex, 1);\n\t\tassert.strictEqual(group.isSticky(input3), false);\n\t\tassert.strictEqual(group.isSticky(input2), true);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t});\n\n\ttest('onDidMoveEditor Event', () => {\n\t\tconst group1 = createEditorGroupModel();\n\t\tconst group2 = createEditorGroupModel();\n\n\t\tconst input1group1 = input();\n\t\tconst input2group1 = input();\n\t\tconst input1group2 = input();\n\t\tconst input2group2 = input();\n\n\t\t// Open all the editors\n\t\tgroup1.openEditor(input1group1, { pinned: true, active: true, index: 0 });\n\t\tgroup1.openEditor(input2group1, { pinned: true, active: false, index: 1 });\n\t\tgroup2.openEditor(input1group2, { pinned: true, active: true, index: 0 });\n\t\tgroup2.openEditor(input2group2, { pinned: true, active: false, index: 1 });\n\n\t\tconst group1Events = groupListener(group1);\n\t\tconst group2Events = groupListener(group2);\n\n\t\tgroup1.moveEditor(input1group1, 1);\n\t\tassert.strictEqual(group1Events.moved[0].editor, input1group1);\n\t\tassert.strictEqual(group1Events.moved[0].oldEditorIndex, 0);\n\t\tassert.strictEqual(group1Events.moved[0].editorIndex, 1);\n\n\t\tgroup2.moveEditor(input1group2, 1);\n\t\tassert.strictEqual(group2Events.moved[0].editor, input1group2);\n\t\tassert.strictEqual(group2Events.moved[0].oldEditorIndex, 0);\n\t\tassert.strictEqual(group2Events.moved[0].editorIndex, 1);\n\t});\n\n\ttest('onDidOpeneditor Event', () => {\n\t\tconst group1 = createEditorGroupModel();\n\t\tconst group2 = createEditorGroupModel();\n\n\t\tconst group1Events = groupListener(group1);\n\t\tconst group2Events = groupListener(group2);\n\n\t\tconst input1group1 = input();\n\t\tconst input2group1 = input();\n\t\tconst input1group2 = input();\n\t\tconst input2group2 = input();\n\n\t\t// Open all the editors\n\t\tgroup1.openEditor(input1group1, { pinned: true, active: true, index: 0 });\n\t\tgroup1.openEditor(input2group1, { pinned: true, active: false, index: 1 });\n\t\tgroup2.openEditor(input1group2, { pinned: true, active: true, index: 0 });\n\t\tgroup2.openEditor(input2group2, { pinned: true, active: false, index: 1 });\n\n\t\tassert.strictEqual(group1Events.opened.length, 2);\n\t\tassert.strictEqual(group1Events.opened[0].editor, input1group1);\n\t\tassert.strictEqual(group1Events.opened[0].editorIndex, 0);\n\t\tassert.strictEqual(group1Events.opened[1].editor, input2group1);\n\t\tassert.strictEqual(group1Events.opened[1].editorIndex, 1);\n\n\t\tassert.strictEqual(group2Events.opened.length, 2);\n\t\tassert.strictEqual(group2Events.opened[0].editor, input1group2);\n\t\tassert.strictEqual(group2Events.opened[0].editorIndex, 0);\n\t\tassert.strictEqual(group2Events.opened[1].editor, input2group2);\n\t\tassert.strictEqual(group2Events.opened[1].editorIndex, 1);\n\t});\n\n\ttest('moving editor sends sticky event when sticky changes', () => {\n\t\tconst group1 = createEditorGroupModel();\n\n\t\tconst input1group1 = input();\n\t\tconst input2group1 = input();\n\t\tconst input3group1 = input();\n\n\t\t// Open all the editors\n\t\tgroup1.openEditor(input1group1, { pinned: true, active: true, index: 0, sticky: true });\n\t\tgroup1.openEditor(input2group1, { pinned: true, active: false, index: 1 });\n\t\tgroup1.openEditor(input3group1, { pinned: true, active: false, index: 2 });\n\n\t\tconst group1Events = groupListener(group1);\n\n\t\tgroup1.moveEditor(input2group1, 0);\n\t\tassert.strictEqual(group1Events.sticky[0].editor, input2group1);\n\t\tassert.strictEqual(group1Events.sticky[0].editorIndex, 0);\n\n\t\tconst group2 = createEditorGroupModel();\n\n\t\tconst input1group2 = input();\n\t\tconst input2group2 = input();\n\t\tconst input3group2 = input();\n\n\t\t// Open all the editors\n\t\tgroup2.openEditor(input1group2, { pinned: true, active: true, index: 0, sticky: true });\n\t\tgroup2.openEditor(input2group2, { pinned: true, active: false, index: 1 });\n\t\tgroup2.openEditor(input3group2, { pinned: true, active: false, index: 2 });\n\n\t\tconst group2Events = groupListener(group2);\n\n\t\tgroup2.moveEditor(input1group2, 1);\n\t\tassert.strictEqual(group2Events.unsticky[0].editor, input1group2);\n\t\tassert.strictEqual(group2Events.unsticky[0].editorIndex, 1);\n\t});\n\n\tfunction assertSelection(group: EditorGroupModel, activeEditor: EditorInput, selectedEditors: EditorInput[]): void {\n\t\tassert.strictEqual(group.activeEditor, activeEditor);\n\t\tassert.strictEqual(group.selectedEditors.length, selectedEditors.length);\n\t\tfor (let i = 0; i < selectedEditors.length; i++) {\n\t\t\tassert.strictEqual(group.selectedEditors[i], selectedEditors[i]);\n\t\t}\n\t}\n\n\ttest('editor selection: selectedEditors', () => {\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst activeEditor = group.activeEditor;\n\t\tconst selectedEditors = group.selectedEditors;\n\t\tassert.strictEqual(activeEditor, null);\n\t\tassert.strictEqual(selectedEditors.length, 0);\n\n\t\t// active editor: input1, selection: [input1]\n\t\tconst input1 = input();\n\t\tgroup.openEditor(input1, { pinned: true, active: true, index: 0 });\n\t\tassertSelection(group, input1, [input1]);\n\n\t\t// active editor: input3, selection: [input3]\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tgroup.openEditor(input2, { pinned: true, active: true, index: 1 });\n\t\tgroup.openEditor(input3, { pinned: true, active: true, index: 2 });\n\t\tassertSelection(group, input3, [input3]);\n\n\t\t// active editor: input2, selection: [input1, input2] (in sequential order)\n\t\tgroup.setSelection(input2, [input1]);\n\t\tassertSelection(group, input2, [input1, input2]);\n\t});\n\n\ttest('editor selection: openEditor with inactive selection', () => {\n\t\tconst group = createEditorGroupModel();\n\n\t\t// active editor: input3, selection: [input3]\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tgroup.openEditor(input1, { pinned: true, active: true, index: 0 });\n\t\tgroup.openEditor(input2, { pinned: true, active: true, index: 1 });\n\t\tgroup.openEditor(input3, { pinned: true, active: true, index: 2 });\n\n\t\t// active editor: input2, selection: [input1, input2, input3] (in sequential order)\n\t\tgroup.openEditor(input2, { active: true, inactiveSelection: [input3, input1] });\n\t\tassertSelection(group, input2, [input1, input2, input3]);\n\n\t\t// active editor: input1, selection: [input1, input3] (in sequential order)\n\t\t// test duplicate entries\n\t\tgroup.openEditor(input1, { active: true, inactiveSelection: [input3, input1, input3] });\n\t\tassertSelection(group, input1, [input1, input3]);\n\n\t\t// active editor: input1, selection: [input1, input2] (in sequential order)\n\t\t// open new Editor as inactive with selection\n\t\tconst input4 = input();\n\t\tgroup.openEditor(input4, { pinned: true, active: false, inactiveSelection: [input2], index: 3 });\n\t\tassertSelection(group, input1, [input1, input2]);\n\n\t\t// active editor: input5, selection: [input4, input5] (in sequential order)\n\t\t// open new Editor as active with selection\n\t\tconst input5 = input();\n\t\tgroup.openEditor(input5, { pinned: true, active: true, inactiveSelection: [input4], index: 4 });\n\t\tassertSelection(group, input5, [input4, input5]);\n\t});\n\n\ttest('editor selection: closeEditor keeps selection', () => {\n\t\tconst group = createEditorGroupModel();\n\n\t\t// active editor: input3, selection: [input3]\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tgroup.openEditor(input1, { pinned: true, active: true, index: 0 });\n\t\tgroup.openEditor(input2, { pinned: true, active: true, index: 1 });\n\t\tgroup.openEditor(input3, { pinned: true, active: true, index: 2 });\n\n\t\tgroup.setSelection(input2, [input3, input1]);\n\t\tgroup.closeEditor(input3);\n\t\tassertSelection(group, input2, [input1, input2]);\n\t});\n\n\ttest('editor selection: setSeletion', () => {\n\t\tconst group = createEditorGroupModel();\n\n\t\t// active editor: input3, selection: [input3]\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tgroup.openEditor(input1, { pinned: true, active: true, index: 0 });\n\t\tgroup.openEditor(input2, { pinned: true, active: true, index: 1 });\n\t\tgroup.openEditor(input3, { pinned: true, active: true, index: 2 });\n\n\t\t// active editor: input2, selection: [input1, input2, input3] (in sequential order)\n\t\tgroup.setSelection(input2, [input3, input1]);\n\t\tassertSelection(group, input2, [input1, input2, input3]);\n\n\t\t// active editor: input3, selection: [input3]\n\t\tgroup.setSelection(input3, []);\n\t\tassertSelection(group, input3, [input3]);\n\n\t\t// active editor: input2, selection: [input1, input2]\n\t\t// test duplicate entries\n\t\tgroup.setSelection(input2, [input1, input2, input1]);\n\t\tassertSelection(group, input2, [input1, input2]);\n\t});\n\n\ttest('editor selection: isSelected', () => {\n\t\tconst group = createEditorGroupModel();\n\n\t\t// active editor: input3, selection: [input3]\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tgroup.openEditor(input1, { pinned: true, active: true, index: 0 });\n\t\tgroup.openEditor(input2, { pinned: true, active: true, index: 1 });\n\t\tgroup.openEditor(input3, { pinned: true, active: true, index: 2 });\n\n\t\t// active editor: input2, selection: [input1, input2, input3] (in sequential order)\n\t\tgroup.setSelection(input2, [input3, input1]);\n\n\t\tassert.strictEqual(group.isSelected(input1), true);\n\t\tassert.strictEqual(group.isSelected(input2), true);\n\t\tassert.strictEqual(group.isSelected(input3), true);\n\n\t\t// active editor: input3, selection: [input3]\n\t\tgroup.setSelection(input3, []);\n\n\t\tassert.strictEqual(group.isSelected(input1), false);\n\t\tassert.strictEqual(group.isSelected(input2), false);\n\t\tassert.strictEqual(group.isSelected(input3), true);\n\n\t\t// use index\n\t\tassert.strictEqual(group.isSelected(0), false);\n\t\tassert.strictEqual(group.isSelected(1), false);\n\t\tassert.strictEqual(group.isSelected(2), true);\n\t});\n\n\ttest('editor selection: select invalid editor', () => {\n\t\tconst group = createEditorGroupModel();\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tgroup.openEditor(input1, { pinned: true, active: true, index: 0 });\n\n\t\tgroup.setSelection(input2, [input1]);\n\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.strictEqual(group.selectedEditors.length, 1);\n\t\tassert.strictEqual(group.isSelected(input1), true);\n\t\tassert.strictEqual(group.isSelected(input1), true);\n\t\tassert.strictEqual(group.isSelected(input2), false);\n\n\t\tgroup.setSelection(input1, [input2]);\n\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.strictEqual(group.selectedEditors.length, 1);\n\t\tassert.strictEqual(group.isSelected(input1), true);\n\t\tassert.strictEqual(group.isSelected(input1), true);\n\t\tassert.strictEqual(group.isSelected(input2), false);\n\t});\n\n\ttest('editor transient: basics', () => {\n\t\tconst group = createEditorGroupModel();\n\t\tconst events = groupListener(group);\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tgroup.openEditor(input1, { pinned: true, active: true });\n\n\t\tassert.strictEqual(group.isTransient(input1), false);\n\t\tassert.strictEqual(events.transient.length, 0);\n\n\t\tgroup.openEditor(input2, { pinned: true, active: true, transient: true });\n\t\tassert.strictEqual(events.transient[0].editor, input2);\n\n\t\tassert.strictEqual(group.isTransient(input2), true);\n\n\t\tgroup.setTransient(input1, true);\n\t\tassert.strictEqual(group.isTransient(input1), true);\n\t\tassert.strictEqual(events.transient[1].editor, input1);\n\n\t\tgroup.setTransient(input2, false);\n\t\tassert.strictEqual(group.isTransient(input2), false);\n\t\tassert.strictEqual(events.transient[2].editor, input2);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": ["inst", "index", "input", "input2"]
}
