{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/parts/editor/editorModel.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { BaseTextEditorModel } from '../../../../common/editor/textEditorModel.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { LanguageService } from '../../../../../editor/common/services/languageService.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { ModelService } from '../../../../../editor/common/services/modelService.js';\nimport { ITextBufferFactory } from '../../../../../editor/common/model.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { createTextBufferFactory } from '../../../../../editor/common/model/textModel.js';\nimport { ITextResourcePropertiesService } from '../../../../../editor/common/services/textResourceConfiguration.js';\nimport { IUndoRedoService } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { UndoRedoService } from '../../../../../platform/undoRedo/common/undoRedoService.js';\nimport { TestDialogService } from '../../../../../platform/dialogs/test/common/testDialogService.js';\nimport { IDialogService } from '../../../../../platform/dialogs/common/dialogs.js';\nimport { TestNotificationService } from '../../../../../platform/notification/test/common/testNotificationService.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { TestStorageService, TestTextResourcePropertiesService } from '../../../common/workbenchTestServices.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { TestThemeService } from '../../../../../platform/theme/test/common/testThemeService.js';\nimport { EditorModel } from '../../../../common/editor/editorModel.js';\nimport { Mimes } from '../../../../../base/common/mime.js';\nimport { LanguageDetectionService } from '../../../../services/languageDetection/browser/languageDetectionWorkerServiceImpl.js';\nimport { IWorkbenchEnvironmentService } from '../../../../services/environment/common/environmentService.js';\nimport { TestEditorService, TestEnvironmentService } from '../../workbenchTestServices.js';\nimport { TestLanguageConfigurationService } from '../../../../../editor/test/common/modes/testLanguageConfigurationService.js';\nimport { ILanguageConfigurationService } from '../../../../../editor/common/languages/languageConfigurationRegistry.js';\nimport { TestAccessibilityService } from '../../../../../platform/accessibility/test/common/testAccessibilityService.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('EditorModel', () => {\n\n\tclass MyEditorModel extends EditorModel { }\n\tclass MyTextEditorModel extends BaseTextEditorModel {\n\t\ttestCreateTextEditorModel(value: ITextBufferFactory, resource?: URI, preferredLanguageId?: string) {\n\t\t\treturn super.createTextEditorModel(value, resource, preferredLanguageId);\n\t\t}\n\n\t\toverride isReadonly(): boolean {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction stubModelService(instantiationService: TestInstantiationService): IModelService {\n\t\tconst dialogService = new TestDialogService();\n\t\tconst notificationService = new TestNotificationService();\n\t\tconst undoRedoService = new UndoRedoService(dialogService, notificationService);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, TestEnvironmentService);\n\t\tinstantiationService.stub(IConfigurationService, new TestConfigurationService());\n\t\tinstantiationService.stub(ITextResourcePropertiesService, new TestTextResourcePropertiesService(instantiationService.get(IConfigurationService)));\n\t\tinstantiationService.stub(IDialogService, dialogService);\n\t\tinstantiationService.stub(INotificationService, notificationService);\n\t\tinstantiationService.stub(IUndoRedoService, undoRedoService);\n\t\tinstantiationService.stub(IEditorService, disposables.add(new TestEditorService()));\n\t\tinstantiationService.stub(IThemeService, new TestThemeService());\n\t\tinstantiationService.stub(ILanguageConfigurationService, disposables.add(new TestLanguageConfigurationService()));\n\t\tinstantiationService.stub(IStorageService, disposables.add(new TestStorageService()));\n\n\t\treturn disposables.add(instantiationService.createInstance(ModelService));\n\t}\n\n\tlet instantiationService: TestInstantiationService;\n\tlet languageService: ILanguageService;\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tinstantiationService = disposables.add(new TestInstantiationService());\n\t\tlanguageService = instantiationService.stub(ILanguageService, LanguageService);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('basics', async () => {\n\t\tlet counter = 0;\n\n\t\tconst model = disposables.add(new MyEditorModel());\n\n\t\tdisposables.add(model.onWillDispose(() => {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t}));\n\n\t\tawait model.resolve();\n\t\tassert.strictEqual(model.isDisposed(), false);\n\t\tassert.strictEqual(model.isResolved(), true);\n\t\tmodel.dispose();\n\t\tassert.strictEqual(counter, 1);\n\t\tassert.strictEqual(model.isDisposed(), true);\n\t});\n\n\ttest('BaseTextEditorModel', async () => {\n\t\tconst modelService = stubModelService(instantiationService);\n\n\t\tconst model = disposables.add(new MyTextEditorModel(modelService, languageService, disposables.add(instantiationService.createInstance(LanguageDetectionService)), instantiationService.createInstance(TestAccessibilityService)));\n\t\tawait model.resolve();\n\n\t\tdisposables.add(model.testCreateTextEditorModel(createTextBufferFactory('foo'), null!, Mimes.text));\n\t\tassert.strictEqual(model.isResolved(), true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": ["instantiationService"]
}
