{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/parts/editor/editor.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { EditorResourceAccessor, SideBySideEditor, EditorInputWithPreferredResource, EditorInputCapabilities, isEditorIdentifier, IResourceDiffEditorInput, IUntitledTextResourceEditorInput, isResourceEditorInput, isUntitledResourceEditorInput, isResourceDiffEditorInput, isEditorInputWithOptionsAndGroup, EditorInputWithOptions, isEditorInputWithOptions, isEditorInput, EditorInputWithOptionsAndGroup, isResourceSideBySideEditorInput, IResourceSideBySideEditorInput, isTextEditorViewState, isResourceMergeEditorInput, IResourceMergeEditorInput } from '../../../../common/editor.js';\nimport { DiffEditorInput } from '../../../../common/editor/diffEditorInput.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { workbenchInstantiationService, TestServiceAccessor, TestEditorInput, registerTestEditor, registerTestFileEditor, registerTestResourceEditor, TestFileEditorInput, createEditorPart, registerTestSideBySideEditor } from '../../workbenchTestServices.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { UntitledTextEditorInput } from '../../../../services/untitled/common/untitledTextEditorInput.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite, toResource } from '../../../../../base/test/common/utils.js';\nimport { SyncDescriptor } from '../../../../../platform/instantiation/common/descriptors.js';\nimport { whenEditorClosed } from '../../../../browser/editor.js';\nimport { IEditorGroupsService } from '../../../../services/editor/common/editorGroupsService.js';\nimport { EditorService } from '../../../../services/editor/browser/editorService.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { SideBySideEditorInput } from '../../../../common/editor/sideBySideEditorInput.js';\nimport { EditorResolution, IResourceEditorInput } from '../../../../../platform/editor/common/editor.js';\nimport { ICodeEditorViewState, IDiffEditorViewState } from '../../../../../editor/common/editorCommon.js';\nimport { Position } from '../../../../../editor/common/core/position.js';\n\nsuite('Workbench editor utils', () => {\n\n\tclass TestEditorInputWithPreferredResource extends TestEditorInput implements EditorInputWithPreferredResource {\n\n\t\tconstructor(resource: URI, public preferredResource: URI, typeId: string) {\n\t\t\tsuper(resource, typeId);\n\t\t}\n\t}\n\n\tconst disposables = new DisposableStore();\n\n\tconst TEST_EDITOR_ID = 'MyTestEditorForEditors';\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tdisposables.add(accessor.untitledTextEditorService);\n\t\tdisposables.add(registerTestFileEditor());\n\t\tdisposables.add(registerTestSideBySideEditor());\n\t\tdisposables.add(registerTestResourceEditor());\n\t\tdisposables.add(registerTestEditor(TEST_EDITOR_ID, [new SyncDescriptor(TestFileEditorInput)]));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('untyped check functions', () => {\n\t\tassert.ok(!isResourceEditorInput(undefined));\n\t\tassert.ok(!isResourceEditorInput({}));\n\t\tassert.ok(!isResourceEditorInput({ original: { resource: URI.file('/') }, modified: { resource: URI.file('/') } }));\n\t\tassert.ok(isResourceEditorInput({ resource: URI.file('/') }));\n\n\t\tassert.ok(!isUntitledResourceEditorInput(undefined));\n\t\tassert.ok(isUntitledResourceEditorInput({}));\n\t\tassert.ok(isUntitledResourceEditorInput({ resource: URI.file('/').with({ scheme: Schemas.untitled }) }));\n\t\tassert.ok(isUntitledResourceEditorInput({ resource: URI.file('/'), forceUntitled: true }));\n\n\t\tassert.ok(!isResourceDiffEditorInput(undefined));\n\t\tassert.ok(!isResourceDiffEditorInput({}));\n\t\tassert.ok(!isResourceDiffEditorInput({ resource: URI.file('/') }));\n\t\tassert.ok(isResourceDiffEditorInput({ original: { resource: URI.file('/') }, modified: { resource: URI.file('/') } }));\n\t\tassert.ok(isResourceDiffEditorInput({ original: { resource: URI.file('/') }, modified: { resource: URI.file('/') }, primary: { resource: URI.file('/') }, secondary: { resource: URI.file('/') } }));\n\t\tassert.ok(!isResourceDiffEditorInput({ primary: { resource: URI.file('/') }, secondary: { resource: URI.file('/') } }));\n\n\t\tassert.ok(!isResourceSideBySideEditorInput(undefined));\n\t\tassert.ok(!isResourceSideBySideEditorInput({}));\n\t\tassert.ok(!isResourceSideBySideEditorInput({ resource: URI.file('/') }));\n\t\tassert.ok(isResourceSideBySideEditorInput({ primary: { resource: URI.file('/') }, secondary: { resource: URI.file('/') } }));\n\t\tassert.ok(!isResourceSideBySideEditorInput({ original: { resource: URI.file('/') }, modified: { resource: URI.file('/') } }));\n\t\tassert.ok(!isResourceSideBySideEditorInput({ primary: { resource: URI.file('/') }, secondary: { resource: URI.file('/') }, original: { resource: URI.file('/') }, modified: { resource: URI.file('/') } }));\n\n\t\tassert.ok(!isResourceMergeEditorInput(undefined));\n\t\tassert.ok(!isResourceMergeEditorInput({}));\n\t\tassert.ok(!isResourceMergeEditorInput({ resource: URI.file('/') }));\n\t\tassert.ok(isResourceMergeEditorInput({ input1: { resource: URI.file('/') }, input2: { resource: URI.file('/') }, base: { resource: URI.file('/') }, result: { resource: URI.file('/') } }));\n\t});\n\n\ttest('EditorInputCapabilities', () => {\n\t\tconst testInput1 = disposables.add(new TestFileEditorInput(URI.file('resource1'), 'testTypeId'));\n\t\tconst testInput2 = disposables.add(new TestFileEditorInput(URI.file('resource2'), 'testTypeId'));\n\n\t\ttestInput1.capabilities = EditorInputCapabilities.None;\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.None), true);\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.Readonly), false);\n\t\tassert.strictEqual(testInput1.isReadonly(), false);\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.Untitled), false);\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.RequiresTrust), false);\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.Singleton), false);\n\n\t\ttestInput1.capabilities |= EditorInputCapabilities.Readonly;\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.Readonly), true);\n\t\tassert.strictEqual(!!testInput1.isReadonly(), true);\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.None), false);\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.Untitled), false);\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.RequiresTrust), false);\n\t\tassert.strictEqual(testInput1.hasCapability(EditorInputCapabilities.Singleton), false);\n\n\t\ttestInput1.capabilities = EditorInputCapabilities.None;\n\t\ttestInput2.capabilities = EditorInputCapabilities.None;\n\n\t\tconst sideBySideInput = instantiationService.createInstance(SideBySideEditorInput, 'name', undefined, testInput1, testInput2);\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.MultipleEditors), true);\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.Readonly), false);\n\t\tassert.strictEqual(sideBySideInput.isReadonly(), false);\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.Untitled), false);\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.RequiresTrust), false);\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.Singleton), false);\n\n\t\ttestInput1.capabilities |= EditorInputCapabilities.Readonly;\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.Readonly), false);\n\t\tassert.strictEqual(sideBySideInput.isReadonly(), false);\n\n\t\ttestInput2.capabilities |= EditorInputCapabilities.Readonly;\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.Readonly), true);\n\t\tassert.strictEqual(!!sideBySideInput.isReadonly(), true);\n\n\t\ttestInput1.capabilities |= EditorInputCapabilities.Untitled;\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.Untitled), false);\n\n\t\ttestInput2.capabilities |= EditorInputCapabilities.Untitled;\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.Untitled), true);\n\n\t\ttestInput1.capabilities |= EditorInputCapabilities.RequiresTrust;\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.RequiresTrust), true);\n\n\t\ttestInput2.capabilities |= EditorInputCapabilities.RequiresTrust;\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.RequiresTrust), true);\n\n\t\ttestInput1.capabilities |= EditorInputCapabilities.Singleton;\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.Singleton), true);\n\n\t\ttestInput2.capabilities |= EditorInputCapabilities.Singleton;\n\t\tassert.strictEqual(sideBySideInput.hasCapability(EditorInputCapabilities.Singleton), true);\n\t});\n\n\ttest('EditorResourceAccessor - typed inputs', () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\n\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(null));\n\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(null));\n\n\t\tconst untitled = disposables.add(instantiationService.createInstance(UntitledTextEditorInput, service.create()));\n\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled)?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { supportSideBySide: SideBySideEditor.ANY })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { supportSideBySide: SideBySideEditor.BOTH })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { filterByScheme: Schemas.untitled })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), untitled.resource.toString());\n\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(untitled, { filterByScheme: Schemas.file }));\n\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled)?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { supportSideBySide: SideBySideEditor.ANY })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { supportSideBySide: SideBySideEditor.BOTH })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { filterByScheme: Schemas.untitled })?.toString(), untitled.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), untitled.resource.toString());\n\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(untitled, { filterByScheme: Schemas.file }));\n\n\t\tconst file = disposables.add(new TestEditorInput(URI.file('/some/path.txt'), 'editorResourceFileTest'));\n\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file)?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { supportSideBySide: SideBySideEditor.ANY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { supportSideBySide: SideBySideEditor.BOTH })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { filterByScheme: Schemas.file })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), file.resource.toString());\n\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(file, { filterByScheme: Schemas.untitled }));\n\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file)?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { supportSideBySide: SideBySideEditor.ANY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { supportSideBySide: SideBySideEditor.BOTH })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { filterByScheme: Schemas.file })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), file.resource.toString());\n\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(file, { filterByScheme: Schemas.untitled }));\n\n\t\tconst diffInput = instantiationService.createInstance(DiffEditorInput, 'name', 'description', untitled, file, undefined);\n\t\tconst sideBySideInput = instantiationService.createInstance(SideBySideEditorInput, 'name', 'description', untitled, file);\n\t\tfor (const input of [diffInput, sideBySideInput]) {\n\t\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(input));\n\t\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(input, { filterByScheme: Schemas.file }));\n\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), file.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: Schemas.file })?.toString(), file.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), file.resource.toString());\n\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), untitled.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: Schemas.untitled })?.toString(), untitled.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), untitled.resource.toString());\n\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.BOTH }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: Schemas.file }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: [Schemas.file, Schemas.untitled] }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.BOTH }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: Schemas.untitled }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: [Schemas.file, Schemas.untitled] }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource.toString());\n\n\t\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(input));\n\t\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(input, { filterByScheme: Schemas.file }));\n\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), file.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: Schemas.file })?.toString(), file.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), file.resource.toString());\n\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), untitled.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: Schemas.untitled })?.toString(), untitled.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), untitled.resource.toString());\n\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.BOTH }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: Schemas.file }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: [Schemas.file, Schemas.untitled] }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.BOTH }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: Schemas.untitled }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: [Schemas.file, Schemas.untitled] }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource.toString());\n\t\t}\n\n\t\tconst resource = URI.file('/some/path.txt');\n\t\tconst preferredResource = URI.file('/some/PATH.txt');\n\t\tconst fileWithPreferredResource = disposables.add(new TestEditorInputWithPreferredResource(URI.file('/some/path.txt'), URI.file('/some/PATH.txt'), 'editorResourceFileTest'));\n\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(fileWithPreferredResource)?.toString(), resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(fileWithPreferredResource)?.toString(), preferredResource.toString());\n\t});\n\n\ttest('EditorResourceAccessor - untyped inputs', () => {\n\n\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(null));\n\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(null));\n\n\t\tconst untitledURI = URI.from({\n\t\t\tscheme: Schemas.untitled,\n\t\t\tauthority: 'foo',\n\t\t\tpath: '/bar'\n\t\t});\n\t\tconst untitled: IUntitledTextResourceEditorInput = {\n\t\t\tresource: untitledURI\n\t\t};\n\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled)?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { supportSideBySide: SideBySideEditor.ANY })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { supportSideBySide: SideBySideEditor.BOTH })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { filterByScheme: Schemas.untitled })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untitled, { filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), untitled.resource?.toString());\n\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(untitled, { filterByScheme: Schemas.file }));\n\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled)?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { supportSideBySide: SideBySideEditor.ANY })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { supportSideBySide: SideBySideEditor.BOTH })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { filterByScheme: Schemas.untitled })?.toString(), untitled.resource?.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untitled, { filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), untitled.resource?.toString());\n\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(untitled, { filterByScheme: Schemas.file }));\n\n\t\tconst file: IResourceEditorInput = {\n\t\t\tresource: URI.file('/some/path.txt')\n\t\t};\n\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file)?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { supportSideBySide: SideBySideEditor.ANY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { supportSideBySide: SideBySideEditor.BOTH })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { filterByScheme: Schemas.file })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(file, { filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), file.resource.toString());\n\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(file, { filterByScheme: Schemas.untitled }));\n\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file)?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { supportSideBySide: SideBySideEditor.ANY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { supportSideBySide: SideBySideEditor.BOTH })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { filterByScheme: Schemas.file })?.toString(), file.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(file, { filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), file.resource.toString());\n\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(file, { filterByScheme: Schemas.untitled }));\n\n\t\tconst diffInput: IResourceDiffEditorInput = { original: untitled, modified: file };\n\t\tconst sideBySideInput: IResourceSideBySideEditorInput = { primary: file, secondary: untitled };\n\t\tfor (const untypedInput of [diffInput, sideBySideInput]) {\n\t\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(untypedInput));\n\t\t\tassert.ok(!EditorResourceAccessor.getCanonicalUri(untypedInput, { filterByScheme: Schemas.file }));\n\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), file.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: Schemas.file })?.toString(), file.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), file.resource.toString());\n\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), untitled.resource?.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: Schemas.untitled })?.toString(), untitled.resource?.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), untitled.resource?.toString());\n\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: Schemas.file }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: [Schemas.file, Schemas.untitled] }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource?.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: Schemas.untitled }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource?.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getCanonicalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: [Schemas.file, Schemas.untitled] }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource?.toString());\n\n\t\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(untypedInput));\n\t\t\tassert.ok(!EditorResourceAccessor.getOriginalUri(untypedInput, { filterByScheme: Schemas.file }));\n\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.PRIMARY })?.toString(), file.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: Schemas.file })?.toString(), file.resource.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), file.resource.toString());\n\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.SECONDARY })?.toString(), untitled.resource?.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: Schemas.untitled })?.toString(), untitled.resource?.toString());\n\t\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: [Schemas.file, Schemas.untitled] })?.toString(), untitled.resource?.toString());\n\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: Schemas.file }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: [Schemas.file, Schemas.untitled] }) as { primary: URI; secondary: URI }).primary.toString(), file.resource.toString());\n\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource?.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: Schemas.untitled }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource?.toString());\n\t\t\tassert.strictEqual((EditorResourceAccessor.getOriginalUri(untypedInput, { supportSideBySide: SideBySideEditor.BOTH, filterByScheme: [Schemas.file, Schemas.untitled] }) as { primary: URI; secondary: URI }).secondary.toString(), untitled.resource?.toString());\n\t\t}\n\n\t\tconst fileMerge: IResourceMergeEditorInput = {\n\t\t\tinput1: { resource: URI.file('/some/remote.txt') },\n\t\t\tinput2: { resource: URI.file('/some/local.txt') },\n\t\t\tbase: { resource: URI.file('/some/base.txt') },\n\t\t\tresult: { resource: URI.file('/some/merged.txt') }\n\t\t};\n\n\t\tassert.strictEqual(EditorResourceAccessor.getCanonicalUri(fileMerge)?.toString(), fileMerge.result.resource.toString());\n\t\tassert.strictEqual(EditorResourceAccessor.getOriginalUri(fileMerge)?.toString(), fileMerge.result.resource.toString());\n\t});\n\n\ttest('isEditorIdentifier', () => {\n\t\tassert.strictEqual(isEditorIdentifier(undefined), false);\n\t\tassert.strictEqual(isEditorIdentifier('undefined'), false);\n\n\t\tconst testInput1 = disposables.add(new TestFileEditorInput(URI.file('resource1'), 'testTypeId'));\n\t\tassert.strictEqual(isEditorIdentifier(testInput1), false);\n\t\tassert.strictEqual(isEditorIdentifier({ editor: testInput1, groupId: 3 }), true);\n\t});\n\n\ttest('isEditorInputWithOptionsAndGroup', () => {\n\t\tconst editorInput = disposables.add(new TestFileEditorInput(URI.file('resource1'), 'testTypeId'));\n\t\tassert.strictEqual(isEditorInput(editorInput), true);\n\t\tassert.strictEqual(isEditorInputWithOptions(editorInput), false);\n\t\tassert.strictEqual(isEditorInputWithOptionsAndGroup(editorInput), false);\n\n\t\tconst editorInputWithOptions: EditorInputWithOptions = { editor: editorInput, options: { override: EditorResolution.PICK } };\n\t\tassert.strictEqual(isEditorInput(editorInputWithOptions), false);\n\t\tassert.strictEqual(isEditorInputWithOptions(editorInputWithOptions), true);\n\t\tassert.strictEqual(isEditorInputWithOptionsAndGroup(editorInputWithOptions), false);\n\n\t\tconst service = accessor.editorGroupService;\n\t\tconst editorInputWithOptionsAndGroup: EditorInputWithOptionsAndGroup = { editor: editorInput, options: { override: EditorResolution.PICK }, group: service.activeGroup };\n\t\tassert.strictEqual(isEditorInput(editorInputWithOptionsAndGroup), false);\n\t\tassert.strictEqual(isEditorInputWithOptions(editorInputWithOptionsAndGroup), true);\n\t\tassert.strictEqual(isEditorInputWithOptionsAndGroup(editorInputWithOptionsAndGroup), true);\n\t});\n\n\ttest('isTextEditorViewState', () => {\n\t\tassert.strictEqual(isTextEditorViewState(undefined), false);\n\t\tassert.strictEqual(isTextEditorViewState({}), false);\n\n\t\tconst codeEditorViewState: ICodeEditorViewState = {\n\t\t\tcontributionsState: {},\n\t\t\tcursorState: [],\n\t\t\tviewState: {\n\t\t\t\tscrollLeft: 0,\n\t\t\t\tfirstPosition: new Position(1, 1),\n\t\t\t\tfirstPositionDeltaTop: 1\n\t\t\t}\n\t\t};\n\n\t\tassert.strictEqual(isTextEditorViewState(codeEditorViewState), true);\n\n\t\tconst diffEditorViewState: IDiffEditorViewState = {\n\t\t\toriginal: codeEditorViewState,\n\t\t\tmodified: codeEditorViewState\n\t\t};\n\n\t\tassert.strictEqual(isTextEditorViewState(diffEditorViewState), true);\n\t});\n\n\ttest('whenEditorClosed (single editor)', async function () {\n\t\treturn testWhenEditorClosed(false, false, toResource.call(this, '/path/index.txt'));\n\t});\n\n\ttest('whenEditorClosed (multiple editor)', async function () {\n\t\treturn testWhenEditorClosed(false, false, toResource.call(this, '/path/index.txt'), toResource.call(this, '/test.html'));\n\t});\n\n\ttest('whenEditorClosed (single editor, diff editor)', async function () {\n\t\treturn testWhenEditorClosed(true, false, toResource.call(this, '/path/index.txt'));\n\t});\n\n\ttest('whenEditorClosed (multiple editor, diff editor)', async function () {\n\t\treturn testWhenEditorClosed(true, false, toResource.call(this, '/path/index.txt'), toResource.call(this, '/test.html'));\n\t});\n\n\ttest('whenEditorClosed (single custom editor)', async function () {\n\t\treturn testWhenEditorClosed(false, true, toResource.call(this, '/path/index.txt'));\n\t});\n\n\ttest('whenEditorClosed (multiple custom editor)', async function () {\n\t\treturn testWhenEditorClosed(false, true, toResource.call(this, '/path/index.txt'), toResource.call(this, '/test.html'));\n\t});\n\n\tasync function createServices(): Promise<TestServiceAccessor> {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\n\t\tconst editorService = disposables.add(instantiationService.createInstance(EditorService, undefined));\n\t\tinstantiationService.stub(IEditorService, editorService);\n\n\t\treturn instantiationService.createInstance(TestServiceAccessor);\n\t}\n\n\tasync function testWhenEditorClosed(sideBySide: boolean, custom: boolean, ...resources: URI[]): Promise<void> {\n\t\tconst accessor = await createServices();\n\n\t\tfor (const resource of resources) {\n\t\t\tif (custom) {\n\t\t\t\tawait accessor.editorService.openEditor(new TestFileEditorInput(resource, 'testTypeId'), { pinned: true });\n\t\t\t} else if (sideBySide) {\n\t\t\t\tawait accessor.editorService.openEditor(instantiationService.createInstance(SideBySideEditorInput, 'testSideBySideEditor', undefined, new TestFileEditorInput(resource, 'testTypeId'), new TestFileEditorInput(resource, 'testTypeId')), { pinned: true });\n\t\t\t} else {\n\t\t\t\tawait accessor.editorService.openEditor({ resource, options: { pinned: true } });\n\t\t\t}\n\t\t}\n\n\t\tconst closedPromise = accessor.instantitionService.invokeFunction(accessor => whenEditorClosed(accessor, resources));\n\n\t\taccessor.editorGroupService.activeGroup.closeAllEditors();\n\n\t\tawait closedPromise;\n\t}\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": ["instantiationService", "accessor"]
}
