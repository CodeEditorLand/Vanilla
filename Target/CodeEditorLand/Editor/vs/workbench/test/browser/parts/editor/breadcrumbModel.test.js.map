{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/parts/editor/breadcrumbModel.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { WorkspaceFolder } from '../../../../../platform/workspace/common/workspace.js';\nimport { BreadcrumbsModel, FileElement } from '../../../../browser/parts/editor/breadcrumbsModel.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { FileKind } from '../../../../../platform/files/common/files.js';\nimport { TestContextService } from '../../../common/workbenchTestServices.js';\nimport { Workspace } from '../../../../../platform/workspace/test/common/testWorkspace.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { IOutlineService } from '../../../../services/outline/browser/outline.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('Breadcrumb Model', function () {\n\n\tlet model: BreadcrumbsModel;\n\tconst workspaceService = new TestContextService(new Workspace('ffff', [new WorkspaceFolder({ uri: URI.parse('foo:/bar/baz/ws'), name: 'ws', index: 0 })]));\n\tconst configService = new class extends TestConfigurationService {\n\t\toverride getValue(...args: any[]) {\n\t\t\tif (args[0] === 'breadcrumbs.filePath') {\n\t\t\t\treturn 'on';\n\t\t\t}\n\t\t\tif (args[0] === 'breadcrumbs.symbolPath') {\n\t\t\t\treturn 'on';\n\t\t\t}\n\t\t\treturn super.getValue(...args);\n\t\t}\n\t\toverride updateValue() {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t};\n\n\tteardown(function () {\n\t\tmodel.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('only uri, inside workspace', function () {\n\n\t\tmodel = new BreadcrumbsModel(URI.parse('foo:/bar/baz/ws/some/path/file.ts'), undefined, configService, workspaceService, new class extends mock<IOutlineService>() { });\n\t\tconst elements = model.getElements();\n\n\t\tassert.strictEqual(elements.length, 3);\n\t\tconst [one, two, three] = elements as FileElement[];\n\t\tassert.strictEqual(one.kind, FileKind.FOLDER);\n\t\tassert.strictEqual(two.kind, FileKind.FOLDER);\n\t\tassert.strictEqual(three.kind, FileKind.FILE);\n\t\tassert.strictEqual(one.uri.toString(), 'foo:/bar/baz/ws/some');\n\t\tassert.strictEqual(two.uri.toString(), 'foo:/bar/baz/ws/some/path');\n\t\tassert.strictEqual(three.uri.toString(), 'foo:/bar/baz/ws/some/path/file.ts');\n\t});\n\n\ttest('display uri matters for FileElement', function () {\n\n\t\tmodel = new BreadcrumbsModel(URI.parse('foo:/bar/baz/ws/some/PATH/file.ts'), undefined, configService, workspaceService, new class extends mock<IOutlineService>() { });\n\t\tconst elements = model.getElements();\n\n\t\tassert.strictEqual(elements.length, 3);\n\t\tconst [one, two, three] = elements as FileElement[];\n\t\tassert.strictEqual(one.kind, FileKind.FOLDER);\n\t\tassert.strictEqual(two.kind, FileKind.FOLDER);\n\t\tassert.strictEqual(three.kind, FileKind.FILE);\n\t\tassert.strictEqual(one.uri.toString(), 'foo:/bar/baz/ws/some');\n\t\tassert.strictEqual(two.uri.toString(), 'foo:/bar/baz/ws/some/PATH');\n\t\tassert.strictEqual(three.uri.toString(), 'foo:/bar/baz/ws/some/PATH/file.ts');\n\t});\n\n\ttest('only uri, outside workspace', function () {\n\n\t\tmodel = new BreadcrumbsModel(URI.parse('foo:/outside/file.ts'), undefined, configService, workspaceService, new class extends mock<IOutlineService>() { });\n\t\tconst elements = model.getElements();\n\n\t\tassert.strictEqual(elements.length, 2);\n\t\tconst [one, two] = elements as FileElement[];\n\t\tassert.strictEqual(one.kind, FileKind.FOLDER);\n\t\tassert.strictEqual(two.kind, FileKind.FILE);\n\t\tassert.strictEqual(one.uri.toString(), 'foo:/outside');\n\t\tassert.strictEqual(two.uri.toString(), 'foo:/outside/file.ts');\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
