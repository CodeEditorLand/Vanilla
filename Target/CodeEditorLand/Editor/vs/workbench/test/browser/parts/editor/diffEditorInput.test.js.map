{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/parts/editor/diffEditorInput.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { DiffEditorInput } from '../../../../common/editor/diffEditorInput.js';\nimport { workbenchInstantiationService } from '../../workbenchTestServices.js';\nimport { EditorResourceAccessor, isDiffEditorInput, isResourceDiffEditorInput, isResourceSideBySideEditorInput, IUntypedEditorInput } from '../../../../common/editor.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('Diff editor input', () => {\n\n\tclass MyEditorInput extends EditorInput {\n\n\t\tconstructor(public resource: URI | undefined = undefined) {\n\t\t\tsuper();\n\t\t}\n\n\t\toverride get typeId(): string { return 'myEditorInput'; }\n\t\toverride resolve(): any { return null; }\n\n\t\toverride toUntyped() {\n\t\t\treturn { resource: this.resource, options: { override: this.typeId } };\n\t\t}\n\n\t\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\t\tif (super.matches(otherInput)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst resource = EditorResourceAccessor.getCanonicalUri(otherInput);\n\t\t\treturn resource?.toString() === this.resource?.toString();\n\t\t}\n\t}\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('basics', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tlet counter = 0;\n\t\tconst input = disposables.add(new MyEditorInput());\n\t\tdisposables.add(input.onWillDispose(() => {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t}));\n\n\t\tconst otherInput = disposables.add(new MyEditorInput());\n\t\tdisposables.add(otherInput.onWillDispose(() => {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t}));\n\n\t\tconst diffInput = instantiationService.createInstance(DiffEditorInput, 'name', 'description', input, otherInput, undefined);\n\n\t\tassert.ok(isDiffEditorInput(diffInput));\n\t\tassert.ok(!isDiffEditorInput(input));\n\n\t\tassert.strictEqual(diffInput.original, input);\n\t\tassert.strictEqual(diffInput.modified, otherInput);\n\t\tassert(diffInput.matches(diffInput));\n\t\tassert(!diffInput.matches(otherInput));\n\n\t\tdiffInput.dispose();\n\t\tassert.strictEqual(counter, 0);\n\t});\n\n\ttest('toUntyped', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst input = disposables.add(new MyEditorInput(URI.file('foo/bar1')));\n\t\tconst otherInput = disposables.add(new MyEditorInput(URI.file('foo/bar2')));\n\n\t\tconst diffInput = instantiationService.createInstance(DiffEditorInput, 'name', 'description', input, otherInput, undefined);\n\n\t\tconst untypedDiffInput = diffInput.toUntyped();\n\t\tassert.ok(isResourceDiffEditorInput(untypedDiffInput));\n\t\tassert.ok(!isResourceSideBySideEditorInput(untypedDiffInput));\n\t\tassert.ok(diffInput.matches(untypedDiffInput));\n\t});\n\n\ttest('disposes when input inside disposes', function () {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tlet counter = 0;\n\t\tlet input = disposables.add(new MyEditorInput());\n\t\tlet otherInput = disposables.add(new MyEditorInput());\n\n\t\tconst diffInput = disposables.add(instantiationService.createInstance(DiffEditorInput, 'name', 'description', input, otherInput, undefined));\n\t\tdisposables.add(diffInput.onWillDispose(() => {\n\t\t\tcounter++;\n\t\t\tassert(true);\n\t\t}));\n\n\t\tinput.dispose();\n\n\t\tinput = disposables.add(new MyEditorInput());\n\t\totherInput = disposables.add(new MyEditorInput());\n\n\t\tconst diffInput2 = disposables.add(instantiationService.createInstance(DiffEditorInput, 'name', 'description', input, otherInput, undefined));\n\t\tdisposables.add(diffInput2.onWillDispose(() => {\n\t\t\tcounter++;\n\t\t\tassert(true);\n\t\t}));\n\n\t\totherInput.dispose();\n\t\tassert.strictEqual(counter, 2);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
