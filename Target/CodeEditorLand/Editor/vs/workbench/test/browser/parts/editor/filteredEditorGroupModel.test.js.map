{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/parts/editor/filteredEditorGroupModel.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { EditorGroupModel, ISerializedEditorGroupModel } from '../../../../common/editor/editorGroupModel.js';\nimport { EditorExtensions, IEditorFactoryRegistry, IFileEditorInput, IEditorSerializer, EditorsOrder, GroupModelChangeKind } from '../../../../common/editor.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { TestLifecycleService } from '../../workbenchTestServices.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ILifecycleService } from '../../../../services/lifecycle/common/lifecycle.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { DisposableStore, IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { TestContextService, TestStorageService } from '../../../common/workbenchTestServices.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { isEqual } from '../../../../../base/common/resources.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { StickyEditorGroupModel, UnstickyEditorGroupModel } from '../../../../common/editor/filteredEditorGroupModel.js';\n\nsuite('FilteredEditorGroupModel', () => {\n\n\tlet testInstService: TestInstantiationService | undefined;\n\n\tsuiteTeardown(() => {\n\t\ttestInstService?.dispose();\n\t\ttestInstService = undefined;\n\t});\n\n\tfunction inst(): IInstantiationService {\n\t\tif (!testInstService) {\n\t\t\ttestInstService = new TestInstantiationService();\n\t\t}\n\t\tconst inst = testInstService;\n\t\tinst.stub(IStorageService, disposables.add(new TestStorageService()));\n\t\tinst.stub(ILifecycleService, disposables.add(new TestLifecycleService()));\n\t\tinst.stub(IWorkspaceContextService, new TestContextService());\n\t\tinst.stub(ITelemetryService, NullTelemetryService);\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('workbench', { editor: { openPositioning: 'right', focusRecentEditorAfterClose: true } });\n\t\tinst.stub(IConfigurationService, config);\n\n\t\treturn inst;\n\t}\n\n\tfunction createEditorGroupModel(serialized?: ISerializedEditorGroupModel): EditorGroupModel {\n\t\tconst group = disposables.add(inst().createInstance(EditorGroupModel, serialized));\n\n\t\tdisposables.add(toDisposable(() => {\n\t\t\tfor (const editor of group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\t\tgroup.closeEditor(editor);\n\t\t\t}\n\t\t}));\n\n\t\treturn group;\n\t}\n\n\tlet index = 0;\n\tclass TestEditorInput extends EditorInput {\n\n\t\treadonly resource = undefined;\n\n\t\tconstructor(public id: string) {\n\t\t\tsuper();\n\t\t}\n\t\toverride get typeId() { return 'testEditorInputForGroups'; }\n\t\toverride async resolve(): Promise<IDisposable> { return null!; }\n\n\t\toverride matches(other: TestEditorInput): boolean {\n\t\t\treturn other && this.id === other.id && other instanceof TestEditorInput;\n\t\t}\n\n\t\tsetDirty(): void {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\n\t\tsetLabel(): void {\n\t\t\tthis._onDidChangeLabel.fire();\n\t\t}\n\t}\n\n\tclass NonSerializableTestEditorInput extends EditorInput {\n\n\t\treadonly resource = undefined;\n\n\t\tconstructor(public id: string) {\n\t\t\tsuper();\n\t\t}\n\t\toverride get typeId() { return 'testEditorInputForGroups-nonSerializable'; }\n\t\toverride async resolve(): Promise<IDisposable | null> { return null; }\n\n\t\toverride matches(other: NonSerializableTestEditorInput): boolean {\n\t\t\treturn other && this.id === other.id && other instanceof NonSerializableTestEditorInput;\n\t\t}\n\t}\n\n\tclass TestFileEditorInput extends EditorInput implements IFileEditorInput {\n\n\t\treadonly preferredResource = this.resource;\n\n\t\tconstructor(public id: string, public resource: URI) {\n\t\t\tsuper();\n\t\t}\n\t\toverride get typeId() { return 'testFileEditorInputForGroups'; }\n\t\toverride get editorId() { return this.id; }\n\t\toverride async resolve(): Promise<IDisposable | null> { return null; }\n\t\tsetPreferredName(name: string): void { }\n\t\tsetPreferredDescription(description: string): void { }\n\t\tsetPreferredResource(resource: URI): void { }\n\t\tasync setEncoding(encoding: string) { }\n\t\tgetEncoding() { return undefined; }\n\t\tsetPreferredEncoding(encoding: string) { }\n\t\tsetForceOpenAsBinary(): void { }\n\t\tsetPreferredContents(contents: string): void { }\n\t\tsetLanguageId(languageId: string) { }\n\t\tsetPreferredLanguageId(languageId: string) { }\n\t\tisResolved(): boolean { return false; }\n\n\t\toverride matches(other: TestFileEditorInput): boolean {\n\t\t\tif (super.matches(other)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (other instanceof TestFileEditorInput) {\n\t\t\t\treturn isEqual(other.resource, this.resource);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction input(id = String(index++), nonSerializable?: boolean, resource?: URI): EditorInput {\n\t\tif (resource) {\n\t\t\treturn disposables.add(new TestFileEditorInput(id, resource));\n\t\t}\n\n\t\treturn nonSerializable ? disposables.add(new NonSerializableTestEditorInput(id)) : disposables.add(new TestEditorInput(id));\n\t}\n\n\tfunction closeAllEditors(group: EditorGroupModel): void {\n\t\tfor (const editor of group.getEditors(EditorsOrder.SEQUENTIAL)) {\n\t\t\tgroup.closeEditor(editor, undefined, false);\n\t\t}\n\t}\n\n\tinterface ISerializedTestInput {\n\t\tid: string;\n\t}\n\n\tclass TestEditorInputSerializer implements IEditorSerializer {\n\n\t\tstatic disableSerialize = false;\n\t\tstatic disableDeserialize = false;\n\n\t\tcanSerialize(editorInput: EditorInput): boolean {\n\t\t\treturn true;\n\t\t}\n\n\t\tserialize(editorInput: EditorInput): string | undefined {\n\t\t\tif (TestEditorInputSerializer.disableSerialize) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst testEditorInput = <TestEditorInput>editorInput;\n\t\t\tconst testInput: ISerializedTestInput = {\n\t\t\t\tid: testEditorInput.id\n\t\t\t};\n\n\t\t\treturn JSON.stringify(testInput);\n\t\t}\n\n\t\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput | undefined {\n\t\t\tif (TestEditorInputSerializer.disableDeserialize) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst testInput: ISerializedTestInput = JSON.parse(serializedEditorInput);\n\n\t\t\treturn disposables.add(new TestEditorInput(testInput.id));\n\t\t}\n\t}\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tTestEditorInputSerializer.disableSerialize = false;\n\t\tTestEditorInputSerializer.disableDeserialize = false;\n\n\t\tdisposables.add(Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer('testEditorInputForGroups', TestEditorInputSerializer));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\n\t\tindex = 1;\n\t});\n\n\ttest('Sticky/Unsticky count', async () => {\n\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.count, 2);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.count, 0);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.count, 1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.count, 1);\n\n\t\tmodel.unstick(input2);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.count, 0);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.count, 2);\n\t});\n\n\ttest('Sticky/Unsticky stickyCount', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.stickyCount, 2);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.stickyCount, 0);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.stickyCount, 1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.stickyCount, 0);\n\n\t\tmodel.unstick(input2);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.stickyCount, 0);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.stickyCount, 0);\n\t});\n\n\ttest('Sticky/Unsticky isEmpty', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: false });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: false });\n\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.count === 0, true);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.count === 0, false);\n\n\t\tmodel.stick(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.count === 0, false);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.count === 0, false);\n\n\t\tmodel.stick(input2);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.count === 0, false);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.count === 0, true);\n\t});\n\n\ttest('Sticky/Unsticky editors', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 2);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 0);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL)[0], input2);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL)[0], input1);\n\n\t\tmodel.unstick(input2);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 0);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 2);\n\t});\n\n\ttest('Sticky/Unsticky activeEditor', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true, active: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.activeEditor, input1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.activeEditor, null);\n\n\t\tmodel.openEditor(input2, { pinned: true, sticky: false, active: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.activeEditor, null);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.activeEditor, input2);\n\n\t\tmodel.closeEditor(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.activeEditor, null);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.activeEditor, input2);\n\n\t\tmodel.closeEditor(input2);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.activeEditor, null);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.activeEditor, null);\n\t});\n\n\ttest('Sticky/Unsticky previewEditor', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.previewEditor, null);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.previewEditor, input1);\n\n\t\tmodel.openEditor(input2, { sticky: true });\n\t\tassert.strictEqual(stickyFilteredEditorGroup.previewEditor, null);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.previewEditor, input1);\n\t});\n\n\ttest('Sticky/Unsticky isSticky()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isSticky(input1), true);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isSticky(input2), true);\n\n\t\tmodel.unstick(input1);\n\t\tmodel.closeEditor(input1);\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isSticky(input1), false);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isSticky(input2), false);\n\t});\n\n\ttest('Sticky/Unsticky isPinned()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tconst input4 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: false });\n\t\tmodel.openEditor(input3, { pinned: false, sticky: true });\n\t\tmodel.openEditor(input4, { pinned: false, sticky: false });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isPinned(input1), true);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isPinned(input2), true);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isPinned(input3), true);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isPinned(input4), false);\n\t});\n\n\ttest('Sticky/Unsticky isActive()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true, active: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isActive(input1), true);\n\n\t\tmodel.openEditor(input2, { pinned: true, sticky: false, active: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isActive(input1), false);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isActive(input2), true);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isActive(input1), false);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isActive(input2), true);\n\t});\n\n\ttest('Sticky/Unsticky getEditors()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true, active: true });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true, active: true });\n\n\t\t// all sticky editors\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 2);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 2);\n\n\t\t// no unsticky editors\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 0);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\n\t\t// options: excludeSticky\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).length, 0);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: false }).length, 2);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).length, 0);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: false }).length, 0);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0], input2);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[1], input1);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0], input2);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL)[0], input1);\n\n\t\tmodel.unstick(input2);\n\n\t\t// all unsticky editors\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL).length, 0);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 2);\n\n\t\t// order: MOST_RECENTLY_ACTIVE\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0], input2);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[1], input1);\n\n\t\t// order: SEQUENTIAL\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL)[0], input2);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditors(EditorsOrder.SEQUENTIAL)[1], input1);\n\t});\n\n\ttest('Sticky/Unsticky getEditorByIndex()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditorByIndex(2), undefined);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditorByIndex(0), undefined);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditorByIndex(1), undefined);\n\n\t\tmodel.openEditor(input3, { pinned: true, sticky: false });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditorByIndex(2), undefined);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditorByIndex(0), input3);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditorByIndex(1), undefined);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditorByIndex(0), input2);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.getEditorByIndex(1), undefined);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditorByIndex(1), input3);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.getEditorByIndex(2), undefined);\n\t});\n\n\ttest('Sticky/Unsticky indexOf()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.indexOf(input1), 0);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.indexOf(input2), 1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.indexOf(input1), -1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.indexOf(input2), -1);\n\n\t\tmodel.openEditor(input3, { pinned: true, sticky: false });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.indexOf(input1), 0);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.indexOf(input2), 1);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.indexOf(input3), -1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.indexOf(input1), -1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.indexOf(input2), -1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.indexOf(input3), 0);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.indexOf(input1), -1);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.indexOf(input2), 0);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.indexOf(input3), -1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.indexOf(input1), 0);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.indexOf(input2), -1);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.indexOf(input3), 1);\n\t});\n\n\ttest('Sticky/Unsticky isFirst()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isFirst(input1), true);\n\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isFirst(input1), true);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isFirst(input2), false);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isFirst(input1), true);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isFirst(input2), true);\n\n\t\tmodel.unstick(input2);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isFirst(input1), false);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isFirst(input2), true);\n\n\t\tmodel.moveEditor(input2, 1);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isFirst(input1), true);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isFirst(input2), false);\n\t});\n\n\ttest('Sticky/Unsticky isLast()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isLast(input1), true);\n\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isLast(input1), false);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isLast(input2), true);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isLast(input1), true);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isLast(input2), true);\n\n\t\tmodel.unstick(input2);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isLast(input1), true);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isLast(input2), false);\n\n\t\tmodel.moveEditor(input2, 1);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isLast(input1), false);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isLast(input2), true);\n\t});\n\n\ttest('Sticky/Unsticky contains()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, sticky: true });\n\t\tmodel.openEditor(input2, { pinned: true, sticky: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.contains(input1), true);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.contains(input2), true);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.contains(input1), false);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.contains(input2), false);\n\n\t\tmodel.unstick(input1);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.contains(input1), false);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.contains(input2), true);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.contains(input1), true);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.contains(input2), false);\n\n\t\tmodel.unstick(input2);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.contains(input1), false);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.contains(input2), false);\n\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.contains(input1), true);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.contains(input2), true);\n\t});\n\n\ttest('Sticky/Unsticky group information', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\t// same id\n\t\tassert.strictEqual(stickyFilteredEditorGroup.id, model.id);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.id, model.id);\n\n\t\t// group locking same behaviour\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isLocked, model.isLocked);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isLocked, model.isLocked);\n\n\t\tmodel.lock(true);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isLocked, model.isLocked);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isLocked, model.isLocked);\n\n\t\tmodel.lock(false);\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isLocked, model.isLocked);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isLocked, model.isLocked);\n\t});\n\n\ttest('Multiple Editors - Editor Emits Dirty and Label Changed', function () {\n\t\tconst model1 = createEditorGroupModel();\n\t\tconst model2 = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup1 = disposables.add(new StickyEditorGroupModel(model1));\n\t\tconst unstickyFilteredEditorGroup1 = disposables.add(new UnstickyEditorGroupModel(model1));\n\t\tconst stickyFilteredEditorGroup2 = disposables.add(new StickyEditorGroupModel(model2));\n\t\tconst unstickyFilteredEditorGroup2 = disposables.add(new UnstickyEditorGroupModel(model2));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\n\t\tmodel1.openEditor(input1, { pinned: true, active: true });\n\t\tmodel2.openEditor(input2, { pinned: true, active: true, sticky: true });\n\n\t\t// DIRTY\n\t\tlet dirty1CounterSticky = 0;\n\t\tdisposables.add(stickyFilteredEditorGroup1.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_DIRTY) {\n\t\t\t\tdirty1CounterSticky++;\n\t\t\t}\n\t\t}));\n\n\t\tlet dirty1CounterUnsticky = 0;\n\t\tdisposables.add(unstickyFilteredEditorGroup1.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_DIRTY) {\n\t\t\t\tdirty1CounterUnsticky++;\n\t\t\t}\n\t\t}));\n\n\t\tlet dirty2CounterSticky = 0;\n\t\tdisposables.add(stickyFilteredEditorGroup2.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_DIRTY) {\n\t\t\t\tdirty2CounterSticky++;\n\t\t\t}\n\t\t}));\n\n\t\tlet dirty2CounterUnsticky = 0;\n\t\tdisposables.add(unstickyFilteredEditorGroup2.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_DIRTY) {\n\t\t\t\tdirty2CounterUnsticky++;\n\t\t\t}\n\t\t}));\n\n\t\t// LABEL\n\t\tlet label1ChangeCounterSticky = 0;\n\t\tdisposables.add(stickyFilteredEditorGroup1.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_LABEL) {\n\t\t\t\tlabel1ChangeCounterSticky++;\n\t\t\t}\n\t\t}));\n\n\t\tlet label1ChangeCounterUnsticky = 0;\n\t\tdisposables.add(unstickyFilteredEditorGroup1.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_LABEL) {\n\t\t\t\tlabel1ChangeCounterUnsticky++;\n\t\t\t}\n\t\t}));\n\n\t\tlet label2ChangeCounterSticky = 0;\n\t\tdisposables.add(stickyFilteredEditorGroup2.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_LABEL) {\n\t\t\t\tlabel2ChangeCounterSticky++;\n\t\t\t}\n\t\t}));\n\n\t\tlet label2ChangeCounterUnsticky = 0;\n\t\tdisposables.add(unstickyFilteredEditorGroup2.onDidModelChange((e) => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_LABEL) {\n\t\t\t\tlabel2ChangeCounterUnsticky++;\n\t\t\t}\n\t\t}));\n\n\t\t(<TestEditorInput>input1).setDirty();\n\t\t(<TestEditorInput>input1).setLabel();\n\n\t\tassert.strictEqual(dirty1CounterSticky, 0);\n\t\tassert.strictEqual(dirty1CounterUnsticky, 1);\n\t\tassert.strictEqual(label1ChangeCounterSticky, 0);\n\t\tassert.strictEqual(label1ChangeCounterUnsticky, 1);\n\n\t\t(<TestEditorInput>input2).setDirty();\n\t\t(<TestEditorInput>input2).setLabel();\n\n\t\tassert.strictEqual(dirty2CounterSticky, 1);\n\t\tassert.strictEqual(dirty2CounterUnsticky, 0);\n\t\tassert.strictEqual(label2ChangeCounterSticky, 1);\n\t\tassert.strictEqual(label2ChangeCounterUnsticky, 0);\n\n\t\tcloseAllEditors(model2);\n\n\t\t(<TestEditorInput>input2).setDirty();\n\t\t(<TestEditorInput>input2).setLabel();\n\n\t\tassert.strictEqual(dirty2CounterSticky, 1);\n\t\tassert.strictEqual(dirty2CounterUnsticky, 0);\n\t\tassert.strictEqual(label2ChangeCounterSticky, 1);\n\t\tassert.strictEqual(label2ChangeCounterUnsticky, 0);\n\t\tassert.strictEqual(dirty1CounterSticky, 0);\n\t\tassert.strictEqual(dirty1CounterUnsticky, 1);\n\t\tassert.strictEqual(label1ChangeCounterSticky, 0);\n\t\tassert.strictEqual(label1ChangeCounterUnsticky, 1);\n\t});\n\n\ttest('Sticky/Unsticky isTransient()', async () => {\n\t\tconst model = createEditorGroupModel();\n\n\t\tconst stickyFilteredEditorGroup = disposables.add(new StickyEditorGroupModel(model));\n\t\tconst unstickyFilteredEditorGroup = disposables.add(new UnstickyEditorGroupModel(model));\n\n\t\tconst input1 = input();\n\t\tconst input2 = input();\n\t\tconst input3 = input();\n\t\tconst input4 = input();\n\n\t\tmodel.openEditor(input1, { pinned: true, transient: false });\n\t\tmodel.openEditor(input2, { pinned: true });\n\t\tmodel.openEditor(input3, { pinned: true, transient: true });\n\t\tmodel.openEditor(input4, { pinned: false, transient: true });\n\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isTransient(input1), false);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isTransient(input2), false);\n\t\tassert.strictEqual(stickyFilteredEditorGroup.isTransient(input3), true);\n\t\tassert.strictEqual(unstickyFilteredEditorGroup.isTransient(input4), true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": ["inst"]
}
