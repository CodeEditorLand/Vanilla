{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/parts/editor/sideBySideEditorInput.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { EditorResourceAccessor, IResourceSideBySideEditorInput, isResourceSideBySideEditorInput, isSideBySideEditorInput, IUntypedEditorInput } from '../../../../common/editor.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { SideBySideEditorInput } from '../../../../common/editor/sideBySideEditorInput.js';\nimport { TestFileEditorInput, workbenchInstantiationService } from '../../workbenchTestServices.js';\n\nsuite('SideBySideEditorInput', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tclass MyEditorInput extends EditorInput {\n\n\t\tconstructor(public resource: URI | undefined = undefined) {\n\t\t\tsuper();\n\t\t}\n\n\t\tfireCapabilitiesChangeEvent(): void {\n\t\t\tthis._onDidChangeCapabilities.fire();\n\t\t}\n\n\t\tfireDirtyChangeEvent(): void {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\n\t\tfireLabelChangeEvent(): void {\n\t\t\tthis._onDidChangeLabel.fire();\n\t\t}\n\n\t\toverride get typeId(): string { return 'myEditorInput'; }\n\t\toverride resolve(): any { return null; }\n\n\t\toverride toUntyped() {\n\t\t\treturn { resource: this.resource, options: { override: this.typeId } };\n\t\t}\n\n\t\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\t\tif (super.matches(otherInput)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst resource = EditorResourceAccessor.getCanonicalUri(otherInput);\n\t\t\treturn resource?.toString() === this.resource?.toString();\n\t\t}\n\t}\n\n\ttest('basics', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tlet counter = 0;\n\t\tconst input = disposables.add(new MyEditorInput(URI.file('/fake')));\n\t\tdisposables.add(input.onWillDispose(() => {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t}));\n\n\t\tconst otherInput = disposables.add(new MyEditorInput(URI.file('/fake2')));\n\t\tdisposables.add(otherInput.onWillDispose(() => {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t}));\n\n\t\tconst sideBySideInput = disposables.add(instantiationService.createInstance(SideBySideEditorInput, 'name', 'description', input, otherInput));\n\t\tassert.strictEqual(sideBySideInput.getName(), 'name');\n\t\tassert.strictEqual(sideBySideInput.getDescription(), 'description');\n\n\t\tassert.ok(isSideBySideEditorInput(sideBySideInput));\n\t\tassert.ok(!isSideBySideEditorInput(input));\n\n\t\tassert.strictEqual(sideBySideInput.secondary, input);\n\t\tassert.strictEqual(sideBySideInput.primary, otherInput);\n\t\tassert(sideBySideInput.matches(sideBySideInput));\n\t\tassert(!sideBySideInput.matches(otherInput));\n\n\t\tsideBySideInput.dispose();\n\t\tassert.strictEqual(counter, 0);\n\n\t\tconst sideBySideInputSame = disposables.add(instantiationService.createInstance(SideBySideEditorInput, undefined, undefined, input, input));\n\t\tassert.strictEqual(sideBySideInputSame.getName(), input.getName());\n\t\tassert.strictEqual(sideBySideInputSame.getDescription(), input.getDescription());\n\t\tassert.strictEqual(sideBySideInputSame.getTitle(), input.getTitle());\n\t\tassert.strictEqual(sideBySideInputSame.resource?.toString(), input.resource?.toString());\n\t});\n\n\ttest('events dispatching', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst input = disposables.add(new MyEditorInput());\n\t\tconst otherInput = disposables.add(new MyEditorInput());\n\n\t\tconst sideBySideInut = disposables.add(instantiationService.createInstance(SideBySideEditorInput, 'name', 'description', otherInput, input));\n\n\t\tassert.ok(isSideBySideEditorInput(sideBySideInut));\n\n\t\tlet capabilitiesChangeCounter = 0;\n\t\tdisposables.add(sideBySideInut.onDidChangeCapabilities(() => capabilitiesChangeCounter++));\n\n\t\tlet dirtyChangeCounter = 0;\n\t\tdisposables.add(sideBySideInut.onDidChangeDirty(() => dirtyChangeCounter++));\n\n\t\tlet labelChangeCounter = 0;\n\t\tdisposables.add(sideBySideInut.onDidChangeLabel(() => labelChangeCounter++));\n\n\t\tinput.fireCapabilitiesChangeEvent();\n\t\tassert.strictEqual(capabilitiesChangeCounter, 1);\n\n\t\totherInput.fireCapabilitiesChangeEvent();\n\t\tassert.strictEqual(capabilitiesChangeCounter, 2);\n\n\t\tinput.fireDirtyChangeEvent();\n\t\totherInput.fireDirtyChangeEvent();\n\t\tassert.strictEqual(dirtyChangeCounter, 1);\n\n\t\tinput.fireLabelChangeEvent();\n\t\totherInput.fireLabelChangeEvent();\n\t\tassert.strictEqual(labelChangeCounter, 2);\n\t});\n\n\ttest('toUntyped', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst primaryInput = disposables.add(new MyEditorInput(URI.file('/fake')));\n\t\tconst secondaryInput = disposables.add(new MyEditorInput(URI.file('/fake2')));\n\n\t\tconst sideBySideInput = disposables.add(instantiationService.createInstance(SideBySideEditorInput, 'Side By Side Test', undefined, secondaryInput, primaryInput));\n\n\t\tconst untypedSideBySideInput = sideBySideInput.toUntyped();\n\t\tassert.ok(isResourceSideBySideEditorInput(untypedSideBySideInput));\n\t});\n\n\ttest('untyped matches', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst primaryInput = disposables.add(new TestFileEditorInput(URI.file('/fake'), 'primaryId'));\n\t\tconst secondaryInput = disposables.add(new TestFileEditorInput(URI.file('/fake2'), 'secondaryId'));\n\t\tconst sideBySideInput = disposables.add(instantiationService.createInstance(SideBySideEditorInput, 'Side By Side Test', undefined, secondaryInput, primaryInput));\n\n\t\tconst primaryUntypedInput = { resource: URI.file('/fake'), options: { override: 'primaryId' } };\n\t\tconst secondaryUntypedInput = { resource: URI.file('/fake2'), options: { override: 'secondaryId' } };\n\t\tconst sideBySideUntyped: IResourceSideBySideEditorInput = { primary: primaryUntypedInput, secondary: secondaryUntypedInput };\n\n\t\tassert.ok(sideBySideInput.matches(sideBySideUntyped));\n\n\t\tconst primaryUntypedInput2 = { resource: URI.file('/fake'), options: { override: 'primaryIdWrong' } };\n\t\tconst secondaryUntypedInput2 = { resource: URI.file('/fake2'), options: { override: 'secondaryId' } };\n\t\tconst sideBySideUntyped2: IResourceSideBySideEditorInput = { primary: primaryUntypedInput2, secondary: secondaryUntypedInput2 };\n\n\t\tassert.ok(!sideBySideInput.matches(sideBySideUntyped2));\n\n\t\tconst primaryUntypedInput3 = { resource: URI.file('/fake'), options: { override: 'primaryId' } };\n\t\tconst secondaryUntypedInput3 = { resource: URI.file('/fake2Wrong'), options: { override: 'secondaryId' } };\n\t\tconst sideBySideUntyped3: IResourceSideBySideEditorInput = { primary: primaryUntypedInput3, secondary: secondaryUntypedInput3 };\n\n\t\tassert.ok(!sideBySideInput.matches(sideBySideUntyped3));\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,uBAAuB;AAChC,SAAS,WAAW;AACpB,SAAS,+CAA+C;AACxD,SAAS,wBAAwB,gCAAgC,iCAAiC,yBAAyB,2BAA2B;AACtJ,SAAS,mBAAmB;AAC5B,SAAS,6BAA6B;AACtC,SAAS,qBAAqB,qCAAqC;AAEnE,MAAM,yBAAyB,MAAM;AAEpC,QAAM,cAAc,IAAI,gBAAgB;AAExC,WAAS,MAAM;AACd,gBAAY,MAAM;AAAA,EACnB,CAAC;AAAA,EAED,MAAM,sBAAsB,YAAY;AAAA,IAEvC,YAAmB,WAA4B,QAAW;AACzD,YAAM;AADY;AAAA,IAEnB;AAAA,IA1BF,OAsByC;AAAA;AAAA;AAAA,IAMvC,8BAAoC;AACnC,WAAK,yBAAyB,KAAK;AAAA,IACpC;AAAA,IAEA,uBAA6B;AAC5B,WAAK,kBAAkB,KAAK;AAAA,IAC7B;AAAA,IAEA,uBAA6B;AAC5B,WAAK,kBAAkB,KAAK;AAAA,IAC7B;AAAA,IAEA,IAAa,SAAiB;AAAE,aAAO;AAAA,IAAiB;AAAA,IAC/C,UAAe;AAAE,aAAO;AAAA,IAAM;AAAA,IAE9B,YAAY;AACpB,aAAO,EAAE,UAAU,KAAK,UAAU,SAAS,EAAE,UAAU,KAAK,OAAO,EAAE;AAAA,IACtE;AAAA,IAES,QAAQ,YAAwD;AACxE,UAAI,MAAM,QAAQ,UAAU,GAAG;AAC9B,eAAO;AAAA,MACR;AAEA,YAAM,WAAW,uBAAuB,gBAAgB,UAAU;AAClE,aAAO,UAAU,SAAS,MAAM,KAAK,UAAU,SAAS;AAAA,IACzD;AAAA,EACD;AAEA,OAAK,UAAU,MAAM;AACpB,UAAM,uBAAuB,8BAA8B,QAAW,WAAW;AAEjF,QAAI,UAAU;AACd,UAAM,QAAQ,YAAY,IAAI,IAAI,cAAc,IAAI,KAAK,OAAO,CAAC,CAAC;AAClE,gBAAY,IAAI,MAAM,cAAc,MAAM;AACzC,aAAO,IAAI;AACX;AAAA,IACD,CAAC,CAAC;AAEF,UAAM,aAAa,YAAY,IAAI,IAAI,cAAc,IAAI,KAAK,QAAQ,CAAC,CAAC;AACxE,gBAAY,IAAI,WAAW,cAAc,MAAM;AAC9C,aAAO,IAAI;AACX;AAAA,IACD,CAAC,CAAC;AAEF,UAAM,kBAAkB,YAAY,IAAI,qBAAqB,eAAe,uBAAuB,QAAQ,eAAe,OAAO,UAAU,CAAC;AAC5I,WAAO,YAAY,gBAAgB,QAAQ,GAAG,MAAM;AACpD,WAAO,YAAY,gBAAgB,eAAe,GAAG,aAAa;AAElE,WAAO,GAAG,wBAAwB,eAAe,CAAC;AAClD,WAAO,GAAG,CAAC,wBAAwB,KAAK,CAAC;AAEzC,WAAO,YAAY,gBAAgB,WAAW,KAAK;AACnD,WAAO,YAAY,gBAAgB,SAAS,UAAU;AACtD,WAAO,gBAAgB,QAAQ,eAAe,CAAC;AAC/C,WAAO,CAAC,gBAAgB,QAAQ,UAAU,CAAC;AAE3C,oBAAgB,QAAQ;AACxB,WAAO,YAAY,SAAS,CAAC;AAE7B,UAAM,sBAAsB,YAAY,IAAI,qBAAqB,eAAe,uBAAuB,QAAW,QAAW,OAAO,KAAK,CAAC;AAC1I,WAAO,YAAY,oBAAoB,QAAQ,GAAG,MAAM,QAAQ,CAAC;AACjE,WAAO,YAAY,oBAAoB,eAAe,GAAG,MAAM,eAAe,CAAC;AAC/E,WAAO,YAAY,oBAAoB,SAAS,GAAG,MAAM,SAAS,CAAC;AACnE,WAAO,YAAY,oBAAoB,UAAU,SAAS,GAAG,MAAM,UAAU,SAAS,CAAC;AAAA,EACxF,CAAC;AAED,OAAK,sBAAsB,MAAM;AAChC,UAAM,uBAAuB,8BAA8B,QAAW,WAAW;AAEjF,UAAM,QAAQ,YAAY,IAAI,IAAI,cAAc,CAAC;AACjD,UAAM,aAAa,YAAY,IAAI,IAAI,cAAc,CAAC;AAEtD,UAAM,iBAAiB,YAAY,IAAI,qBAAqB,eAAe,uBAAuB,QAAQ,eAAe,YAAY,KAAK,CAAC;AAE3I,WAAO,GAAG,wBAAwB,cAAc,CAAC;AAEjD,QAAI,4BAA4B;AAChC,gBAAY,IAAI,eAAe,wBAAwB,MAAM,2BAA2B,CAAC;AAEzF,QAAI,qBAAqB;AACzB,gBAAY,IAAI,eAAe,iBAAiB,MAAM,oBAAoB,CAAC;AAE3E,QAAI,qBAAqB;AACzB,gBAAY,IAAI,eAAe,iBAAiB,MAAM,oBAAoB,CAAC;AAE3E,UAAM,4BAA4B;AAClC,WAAO,YAAY,2BAA2B,CAAC;AAE/C,eAAW,4BAA4B;AACvC,WAAO,YAAY,2BAA2B,CAAC;AAE/C,UAAM,qBAAqB;AAC3B,eAAW,qBAAqB;AAChC,WAAO,YAAY,oBAAoB,CAAC;AAExC,UAAM,qBAAqB;AAC3B,eAAW,qBAAqB;AAChC,WAAO,YAAY,oBAAoB,CAAC;AAAA,EACzC,CAAC;AAED,OAAK,aAAa,MAAM;AACvB,UAAM,uBAAuB,8BAA8B,QAAW,WAAW;AAEjF,UAAM,eAAe,YAAY,IAAI,IAAI,cAAc,IAAI,KAAK,OAAO,CAAC,CAAC;AACzE,UAAM,iBAAiB,YAAY,IAAI,IAAI,cAAc,IAAI,KAAK,QAAQ,CAAC,CAAC;AAE5E,UAAM,kBAAkB,YAAY,IAAI,qBAAqB,eAAe,uBAAuB,qBAAqB,QAAW,gBAAgB,YAAY,CAAC;AAEhK,UAAM,yBAAyB,gBAAgB,UAAU;AACzD,WAAO,GAAG,gCAAgC,sBAAsB,CAAC;AAAA,EAClE,CAAC;AAED,OAAK,mBAAmB,MAAM;AAC7B,UAAM,uBAAuB,8BAA8B,QAAW,WAAW;AAEjF,UAAM,eAAe,YAAY,IAAI,IAAI,oBAAoB,IAAI,KAAK,OAAO,GAAG,WAAW,CAAC;AAC5F,UAAM,iBAAiB,YAAY,IAAI,IAAI,oBAAoB,IAAI,KAAK,QAAQ,GAAG,aAAa,CAAC;AACjG,UAAM,kBAAkB,YAAY,IAAI,qBAAqB,eAAe,uBAAuB,qBAAqB,QAAW,gBAAgB,YAAY,CAAC;AAEhK,UAAM,sBAAsB,EAAE,UAAU,IAAI,KAAK,OAAO,GAAG,SAAS,EAAE,UAAU,YAAY,EAAE;AAC9F,UAAM,wBAAwB,EAAE,UAAU,IAAI,KAAK,QAAQ,GAAG,SAAS,EAAE,UAAU,cAAc,EAAE;AACnG,UAAM,oBAAoD,EAAE,SAAS,qBAAqB,WAAW,sBAAsB;AAE3H,WAAO,GAAG,gBAAgB,QAAQ,iBAAiB,CAAC;AAEpD,UAAM,uBAAuB,EAAE,UAAU,IAAI,KAAK,OAAO,GAAG,SAAS,EAAE,UAAU,iBAAiB,EAAE;AACpG,UAAM,yBAAyB,EAAE,UAAU,IAAI,KAAK,QAAQ,GAAG,SAAS,EAAE,UAAU,cAAc,EAAE;AACpG,UAAM,qBAAqD,EAAE,SAAS,sBAAsB,WAAW,uBAAuB;AAE9H,WAAO,GAAG,CAAC,gBAAgB,QAAQ,kBAAkB,CAAC;AAEtD,UAAM,uBAAuB,EAAE,UAAU,IAAI,KAAK,OAAO,GAAG,SAAS,EAAE,UAAU,YAAY,EAAE;AAC/F,UAAM,yBAAyB,EAAE,UAAU,IAAI,KAAK,aAAa,GAAG,SAAS,EAAE,UAAU,cAAc,EAAE;AACzG,UAAM,qBAAqD,EAAE,SAAS,sBAAsB,WAAW,uBAAuB;AAE9H,WAAO,GAAG,CAAC,gBAAgB,QAAQ,kBAAkB,CAAC;AAAA,EACvD,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": []
}
