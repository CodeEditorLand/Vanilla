{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/contributions.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isCI } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../base/test/common/utils.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { EditorPart } from '../../browser/parts/editor/editorPart.js';\nimport { WorkbenchPhase, WorkbenchContributionsRegistry } from '../../common/contributions.js';\nimport { EditorService } from '../../services/editor/browser/editorService.js';\nimport { IEditorGroupsService } from '../../services/editor/common/editorGroupsService.js';\nimport { IEditorService, SIDE_GROUP } from '../../services/editor/common/editorService.js';\nimport { LifecyclePhase } from '../../services/lifecycle/common/lifecycle.js';\nimport { ITestInstantiationService, TestFileEditorInput, TestServiceAccessor, TestSingletonFileEditorInput, createEditorPart, registerTestEditor, workbenchInstantiationService } from './workbenchTestServices.js';\n\nsuite('Contributions', () => {\n\tconst disposables = new DisposableStore();\n\n\tlet aCreated: boolean;\n\tlet aCreatedPromise: DeferredPromise<void>;\n\n\tlet bCreated: boolean;\n\tlet bCreatedPromise: DeferredPromise<void>;\n\n\tconst TEST_EDITOR_ID = 'MyTestEditorForContributions';\n\tconst TEST_EDITOR_INPUT_ID = 'testEditorInputForContributions';\n\n\tasync function createEditorService(instantiationService: ITestInstantiationService = workbenchInstantiationService(undefined, disposables)): Promise<[EditorPart, EditorService]> {\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\n\t\tconst editorService = disposables.add(instantiationService.createInstance(EditorService, undefined));\n\t\tinstantiationService.stub(IEditorService, editorService);\n\n\t\treturn [part, editorService];\n\t}\n\n\tsetup(() => {\n\t\taCreated = false;\n\t\taCreatedPromise = new DeferredPromise<void>();\n\n\t\tbCreated = false;\n\t\tbCreatedPromise = new DeferredPromise<void>();\n\n\t\tdisposables.add(registerTestEditor(TEST_EDITOR_ID, [new SyncDescriptor(TestFileEditorInput), new SyncDescriptor(TestSingletonFileEditorInput)], TEST_EDITOR_INPUT_ID));\n\t});\n\n\tteardown(async () => {\n\t\tdisposables.clear();\n\t});\n\n\tclass TestContributionA {\n\t\tconstructor() {\n\t\t\taCreated = true;\n\t\t\taCreatedPromise.complete();\n\t\t}\n\t}\n\tclass TestContributionB {\n\t\tconstructor() {\n\t\t\tbCreated = true;\n\t\t\tbCreatedPromise.complete();\n\t\t}\n\t}\n\tclass TestContributionError {\n\t\tconstructor() {\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\ttest('getWorkbenchContribution() - with lazy contributions', () => {\n\t\tconst registry = disposables.add(new WorkbenchContributionsRegistry());\n\n\t\tassert.throws(() => registry.getWorkbenchContribution('a'));\n\n\t\tregistry.registerWorkbenchContribution2('a', TestContributionA, { lazy: true });\n\t\tassert.throws(() => registry.getWorkbenchContribution('a'));\n\n\t\tregistry.registerWorkbenchContribution2('b', TestContributionB, { lazy: true });\n\t\tregistry.registerWorkbenchContribution2('c', TestContributionError, { lazy: true });\n\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tregistry.start(instantiationService);\n\n\t\tconst instanceA = registry.getWorkbenchContribution('a');\n\t\tassert.ok(instanceA instanceof TestContributionA);\n\t\tassert.ok(aCreated);\n\t\tassert.strictEqual(instanceA, registry.getWorkbenchContribution('a'));\n\n\t\tconst instanceB = registry.getWorkbenchContribution('b');\n\t\tassert.ok(instanceB instanceof TestContributionB);\n\n\t\tassert.throws(() => registry.getWorkbenchContribution('c'));\n\t});\n\n\ttest('getWorkbenchContribution() - with non-lazy contributions', async () => {\n\t\tconst registry = disposables.add(new WorkbenchContributionsRegistry());\n\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\taccessor.lifecycleService.usePhases = true;\n\t\tregistry.start(instantiationService);\n\n\t\tassert.throws(() => registry.getWorkbenchContribution('a'));\n\n\t\tregistry.registerWorkbenchContribution2('a', TestContributionA, WorkbenchPhase.BlockRestore);\n\n\t\tconst instanceA = registry.getWorkbenchContribution('a');\n\t\tassert.ok(instanceA instanceof TestContributionA);\n\t\tassert.ok(aCreated);\n\n\t\taccessor.lifecycleService.phase = LifecyclePhase.Ready;\n\t\tawait aCreatedPromise.p;\n\n\t\tassert.strictEqual(instanceA, registry.getWorkbenchContribution('a'));\n\t});\n\n\ttest('lifecycle phase instantiation works when phase changes', async () => {\n\t\tconst registry = disposables.add(new WorkbenchContributionsRegistry());\n\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\tregistry.start(instantiationService);\n\n\t\tregistry.registerWorkbenchContribution2('a', TestContributionA, WorkbenchPhase.BlockRestore);\n\t\tassert.ok(!aCreated);\n\n\t\taccessor.lifecycleService.phase = LifecyclePhase.Ready;\n\t\tawait aCreatedPromise.p;\n\t\tassert.ok(aCreated);\n\t});\n\n\ttest('lifecycle phase instantiation works when phase was already met', async () => {\n\t\tconst registry = disposables.add(new WorkbenchContributionsRegistry());\n\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\taccessor.lifecycleService.usePhases = true;\n\t\taccessor.lifecycleService.phase = LifecyclePhase.Restored;\n\n\t\tregistry.registerWorkbenchContribution2('a', TestContributionA, WorkbenchPhase.BlockRestore);\n\t\tregistry.start(instantiationService);\n\n\t\tawait aCreatedPromise.p;\n\t\tassert.ok(aCreated);\n\t});\n\n\t(isCI ? test.skip /* runWhenIdle seems flaky in CI on Windows */ : test)('lifecycle phase instantiation works for late phases', async () => {\n\t\tconst registry = disposables.add(new WorkbenchContributionsRegistry());\n\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\taccessor.lifecycleService.usePhases = true;\n\t\tregistry.start(instantiationService);\n\n\t\tregistry.registerWorkbenchContribution2('a', TestContributionA, WorkbenchPhase.AfterRestored);\n\t\tregistry.registerWorkbenchContribution2('b', TestContributionB, WorkbenchPhase.Eventually);\n\t\tassert.ok(!aCreated);\n\t\tassert.ok(!bCreated);\n\n\t\taccessor.lifecycleService.phase = LifecyclePhase.Starting;\n\t\taccessor.lifecycleService.phase = LifecyclePhase.Ready;\n\t\taccessor.lifecycleService.phase = LifecyclePhase.Restored;\n\t\tawait aCreatedPromise.p;\n\t\tassert.ok(aCreated);\n\n\t\taccessor.lifecycleService.phase = LifecyclePhase.Eventually;\n\t\tawait bCreatedPromise.p;\n\t\tassert.ok(bCreated);\n\t});\n\n\ttest('contribution on editor - editor exists before start', async function () {\n\t\tconst registry = disposables.add(new WorkbenchContributionsRegistry());\n\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst [, editorService] = await createEditorService(instantiationService);\n\n\t\tconst input = disposables.add(new TestFileEditorInput(URI.parse('my://resource-basics'), TEST_EDITOR_INPUT_ID));\n\t\tawait editorService.openEditor(input, { pinned: true });\n\n\t\tregistry.registerWorkbenchContribution2('a', TestContributionA, { editorTypeId: TEST_EDITOR_ID });\n\t\tregistry.start(instantiationService.createChild(new ServiceCollection([IEditorService, editorService])));\n\n\t\tawait aCreatedPromise.p;\n\t\tassert.ok(aCreated);\n\n\t\tregistry.registerWorkbenchContribution2('b', TestContributionB, { editorTypeId: TEST_EDITOR_ID });\n\n\t\tconst input2 = disposables.add(new TestFileEditorInput(URI.parse('my://resource-basics2'), TEST_EDITOR_INPUT_ID));\n\t\tawait editorService.openEditor(input2, { pinned: true }, SIDE_GROUP);\n\n\t\tawait bCreatedPromise.p;\n\t\tassert.ok(bCreated);\n\t});\n\n\ttest('contribution on editor - editor does not exist before start', async function () {\n\t\tconst registry = disposables.add(new WorkbenchContributionsRegistry());\n\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst [, editorService] = await createEditorService(instantiationService);\n\n\t\tconst input = disposables.add(new TestFileEditorInput(URI.parse('my://resource-basics'), TEST_EDITOR_INPUT_ID));\n\n\t\tregistry.registerWorkbenchContribution2('a', TestContributionA, { editorTypeId: TEST_EDITOR_ID });\n\t\tregistry.start(instantiationService.createChild(new ServiceCollection([IEditorService, editorService])));\n\n\t\tawait editorService.openEditor(input, { pinned: true });\n\n\t\tawait aCreatedPromise.p;\n\t\tassert.ok(aCreated);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
