{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/workbenchTestServices.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileEditorInput } from '../../contrib/files/browser/editors/fileEditorInput.js';\nimport { TestInstantiationService } from '../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { basename, isEqual } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ITelemetryData, ITelemetryService, TelemetryLevel } from '../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../platform/telemetry/common/telemetryUtils.js';\nimport { EditorInput } from '../../common/editor/editorInput.js';\nimport { EditorInputWithOptions, IEditorIdentifier, IUntitledTextResourceEditorInput, IResourceDiffEditorInput, IEditorPane, IEditorCloseEvent, IEditorPartOptions, IRevertOptions, GroupIdentifier, EditorsOrder, IFileEditorInput, IEditorFactoryRegistry, IEditorSerializer, EditorExtensions, ISaveOptions, IMoveResult, ITextDiffEditorPane, IVisibleEditorPane, IEditorOpenContext, EditorExtensions as Extensions, EditorInputCapabilities, IUntypedEditorInput, IEditorWillMoveEvent, IEditorWillOpenEvent, IActiveEditorChangeEvent, EditorPaneSelectionChangeReason, IEditorPaneSelection, IToolbarActions } from '../../common/editor.js';\nimport { EditorServiceImpl, IEditorGroupView, IEditorGroupsView, IEditorGroupTitleHeight, DEFAULT_EDITOR_PART_OPTIONS } from '../../browser/parts/editor/editor.js';\nimport { Event, Emitter } from '../../../base/common/event.js';\nimport { IResolvedWorkingCopyBackup, IWorkingCopyBackupService } from '../../services/workingCopy/common/workingCopyBackup.js';\nimport { IConfigurationService, ConfigurationTarget, IConfigurationValue } from '../../../platform/configuration/common/configuration.js';\nimport { IWorkbenchLayoutService, PanelAlignment, Parts, Position as PartPosition } from '../../services/layout/browser/layoutService.js';\nimport { TextModelResolverService } from '../../services/textmodelResolver/common/textModelResolverService.js';\nimport { ITextModelService } from '../../../editor/common/services/resolverService.js';\nimport { IEditorOptions, IResourceEditorInput, IResourceEditorInputIdentifier, ITextResourceEditorInput, ITextEditorOptions } from '../../../platform/editor/common/editor.js';\nimport { IUntitledTextEditorService, UntitledTextEditorService } from '../../services/untitled/common/untitledTextEditorService.js';\nimport { IWorkspaceContextService, IWorkspaceIdentifier } from '../../../platform/workspace/common/workspace.js';\nimport { ILifecycleService, ShutdownReason, StartupKind, LifecyclePhase, WillShutdownEvent, BeforeShutdownErrorEvent, InternalBeforeShutdownEvent, IWillShutdownEventJoiner } from '../../services/lifecycle/common/lifecycle.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { FileOperationEvent, IFileService, IFileStat, IFileStatResult, FileChangesEvent, IResolveFileOptions, ICreateFileOptions, IFileSystemProvider, FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, IFileDeleteOptions, IFileOverwriteOptions, IFileWriteOptions, IFileOpenOptions, IFileStatWithMetadata, IResolveMetadataFileOptions, IWriteFileOptions, IReadFileOptions, IFileContent, IFileStreamContent, FileOperationError, IFileSystemProviderWithFileReadStreamCapability, IFileReadStreamOptions, IReadFileStreamOptions, IFileSystemProviderCapabilitiesChangeEvent, IFileStatWithPartialMetadata, IFileSystemWatcher, IWatchOptionsWithCorrelation, IFileSystemProviderActivationEvent } from '../../../platform/files/common/files.js';\nimport { IModelService } from '../../../editor/common/services/model.js';\nimport { LanguageService } from '../../../editor/common/services/languageService.js';\nimport { ModelService } from '../../../editor/common/services/modelService.js';\nimport { IResourceEncoding, ITextFileService, IReadTextFileOptions, ITextFileStreamContent, IWriteTextFileOptions, ITextFileEditorModel, ITextFileEditorModelManager } from '../../services/textfile/common/textfiles.js';\nimport { ILanguageService } from '../../../editor/common/languages/language.js';\nimport { IHistoryService } from '../../services/history/common/history.js';\nimport { IInstantiationService, ServiceIdentifier } from '../../../platform/instantiation/common/instantiation.js';\nimport { TestConfigurationService } from '../../../platform/configuration/test/common/testConfigurationService.js';\nimport { MenuBarVisibility, IWindowOpenable, IOpenWindowOptions, IOpenEmptyWindowOptions } from '../../../platform/window/common/window.js';\nimport { TestWorkspace } from '../../../platform/workspace/test/common/testWorkspace.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { TestThemeService } from '../../../platform/theme/test/common/testThemeService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../../editor/common/services/textResourceConfiguration.js';\nimport { IPosition, Position as EditorPosition } from '../../../editor/common/core/position.js';\nimport { IMenuService, MenuId, IMenu, IMenuChangeEvent, IMenuActionOptions, MenuItemAction, SubmenuItemAction } from '../../../platform/actions/common/actions.js';\nimport { ContextKeyValue, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { MockContextKeyService, MockKeybindingService } from '../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { ITextBufferFactory, DefaultEndOfLine, EndOfLinePreference, ITextSnapshot } from '../../../editor/common/model.js';\nimport { Range } from '../../../editor/common/core/range.js';\nimport { IDialogService, IPickAndOpenOptions, ISaveDialogOptions, IOpenDialogOptions, IFileDialogService, ConfirmResult } from '../../../platform/dialogs/common/dialogs.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { TestNotificationService } from '../../../platform/notification/test/common/testNotificationService.js';\nimport { IExtensionService } from '../../services/extensions/common/extensions.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { IDecorationsService, IResourceDecorationChangeEvent, IDecoration, IDecorationData, IDecorationsProvider } from '../../services/decorations/common/decorations.js';\nimport { IDisposable, toDisposable, Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IEditorGroupsService, IEditorGroup, GroupsOrder, GroupsArrangement, GroupDirection, IMergeGroupOptions, IEditorReplacement, IFindGroupScope, EditorGroupLayout, ICloseEditorOptions, GroupOrientation, ICloseAllEditorsOptions, ICloseEditorsFilter, IEditorDropTargetDelegate, IEditorPart, IAuxiliaryEditorPart, IEditorGroupsContainer, IEditorWorkingSet, IEditorGroupContextKeyProvider, IEditorWorkingSetOptions } from '../../services/editor/common/editorGroupsService.js';\nimport { IEditorService, ISaveEditorsOptions, IRevertAllEditorsOptions, PreferredGroup, IEditorsChangeEvent, ISaveEditorsResult } from '../../services/editor/common/editorService.js';\nimport { ICodeEditorService } from '../../../editor/browser/services/codeEditorService.js';\nimport { IEditorPaneRegistry, EditorPaneDescriptor } from '../../browser/editor.js';\nimport { IDimension } from '../../../base/browser/dom.js';\nimport { ILoggerService, ILogService, NullLogService } from '../../../platform/log/common/log.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { DeferredPromise, timeout } from '../../../base/common/async.js';\nimport { PaneComposite, PaneCompositeDescriptor } from '../../browser/panecomposite.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../platform/storage/common/storage.js';\nimport { IProcessEnvironment, isLinux, isWindows, OperatingSystem } from '../../../base/common/platform.js';\nimport { LabelService } from '../../services/label/common/labelService.js';\nimport { Part } from '../../browser/part.js';\nimport { bufferToStream, VSBuffer, VSBufferReadable, VSBufferReadableStream } from '../../../base/common/buffer.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { IProductService } from '../../../platform/product/common/productService.js';\nimport product from '../../../platform/product/common/product.js';\nimport { IHostService } from '../../services/host/browser/host.js';\nimport { IWorkingCopyService, WorkingCopyService } from '../../services/workingCopy/common/workingCopyService.js';\nimport { IWorkingCopy, IWorkingCopyBackupMeta, IWorkingCopyIdentifier } from '../../services/workingCopy/common/workingCopy.js';\nimport { IFilesConfigurationService, FilesConfigurationService } from '../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { BrowserWorkbenchEnvironmentService } from '../../services/environment/browser/environmentService.js';\nimport { BrowserTextFileService } from '../../services/textfile/browser/browserTextFileService.js';\nimport { IWorkbenchEnvironmentService } from '../../services/environment/common/environmentService.js';\nimport { createTextBufferFactoryFromStream } from '../../../editor/common/model/textModel.js';\nimport { IPathService } from '../../services/path/common/pathService.js';\nimport { Direction } from '../../../base/browser/ui/grid/grid.js';\nimport { IProgressService, IProgressOptions, IProgressWindowOptions, IProgressNotificationOptions, IProgressCompositeOptions, IProgress, IProgressStep, Progress, IProgressDialogOptions, IProgressIndicator } from '../../../platform/progress/common/progress.js';\nimport { IWorkingCopyFileService, WorkingCopyFileService } from '../../services/workingCopy/common/workingCopyFileService.js';\nimport { UndoRedoService } from '../../../platform/undoRedo/common/undoRedoService.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { TextFileEditorModel } from '../../services/textfile/common/textFileEditorModel.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { EditorPane } from '../../browser/parts/editor/editorPane.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { TestDialogService } from '../../../platform/dialogs/test/common/testDialogService.js';\nimport { CodeEditorService } from '../../services/editor/browser/codeEditorService.js';\nimport { MainEditorPart } from '../../browser/parts/editor/editorPart.js';\nimport { ICodeEditor } from '../../../editor/browser/editorBrowser.js';\nimport { IDiffEditor } from '../../../editor/common/editorCommon.js';\nimport { IInputBox, IInputOptions, IPickOptions, IQuickInputButton, IQuickInputService, IQuickNavigateConfiguration, IQuickPick, IQuickPickItem, IQuickWidget, QuickPickInput } from '../../../platform/quickinput/common/quickInput.js';\nimport { QuickInputService } from '../../services/quickinput/browser/quickInputService.js';\nimport { IListService } from '../../../platform/list/browser/listService.js';\nimport { win32, posix } from '../../../base/common/path.js';\nimport { TestContextService, TestStorageService, TestTextResourcePropertiesService, TestExtensionService, TestProductService, createFileStat, TestLoggerService, TestWorkspaceTrustManagementService, TestWorkspaceTrustRequestService, TestMarkerService, TestHistoryService } from '../common/workbenchTestServices.js';\nimport { IView, ViewContainer, ViewContainerLocation } from '../../common/views.js';\nimport { IViewsService } from '../../services/views/common/viewsService.js';\nimport { IPaneComposite } from '../../common/panecomposite.js';\nimport { IUriIdentityService } from '../../../platform/uriIdentity/common/uriIdentity.js';\nimport { UriIdentityService } from '../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { InMemoryFileSystemProvider } from '../../../platform/files/common/inMemoryFilesystemProvider.js';\nimport { newWriteableStream, ReadableStreamEvents } from '../../../base/common/stream.js';\nimport { EncodingOracle, IEncodingOverride } from '../../services/textfile/browser/textFileService.js';\nimport { UTF16le, UTF16be, UTF8_with_bom } from '../../services/textfile/common/encoding.js';\nimport { ColorScheme } from '../../../platform/theme/common/theme.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { InMemoryWorkingCopyBackupService } from '../../services/workingCopy/common/workingCopyBackupService.js';\nimport { BrowserWorkingCopyBackupService } from '../../services/workingCopy/browser/workingCopyBackupService.js';\nimport { FileService } from '../../../platform/files/common/fileService.js';\nimport { TextResourceEditor } from '../../browser/parts/editor/textResourceEditor.js';\nimport { TestCodeEditor } from '../../../editor/test/browser/testCodeEditor.js';\nimport { TextFileEditor } from '../../contrib/files/browser/editors/textFileEditor.js';\nimport { TextResourceEditorInput } from '../../common/editor/textResourceEditorInput.js';\nimport { UntitledTextEditorInput } from '../../services/untitled/common/untitledTextEditorInput.js';\nimport { SideBySideEditor } from '../../browser/parts/editor/sideBySideEditor.js';\nimport { IEnterWorkspaceResult, IRecent, IRecentlyOpened, IWorkspaceFolderCreationData, IWorkspacesService } from '../../../platform/workspaces/common/workspaces.js';\nimport { IWorkspaceTrustManagementService, IWorkspaceTrustRequestService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IExtensionTerminalProfile, IShellLaunchConfig, ITerminalBackend, ITerminalLogService, ITerminalProfile, TerminalIcon, TerminalLocation, TerminalShellType } from '../../../platform/terminal/common/terminal.js';\nimport { ICreateTerminalOptions, IDeserializedTerminalEditorInput, ITerminalConfigurationService, ITerminalEditorService, ITerminalGroup, ITerminalGroupService, ITerminalInstance, ITerminalInstanceService, TerminalEditorLocation } from '../../contrib/terminal/browser/terminal.js';\nimport { assertIsDefined, upcast } from '../../../base/common/types.js';\nimport { IRegisterContributedProfileArgs, IShellLaunchConfigResolveOptions, ITerminalProfileProvider, ITerminalProfileResolverService, ITerminalProfileService, type ITerminalConfiguration } from '../../contrib/terminal/common/terminal.js';\nimport { EditorResolverService } from '../../services/editor/browser/editorResolverService.js';\nimport { FILE_EDITOR_INPUT_ID } from '../../contrib/files/common/files.js';\nimport { IEditorResolverService } from '../../services/editor/common/editorResolverService.js';\nimport { IWorkingCopyEditorService, WorkingCopyEditorService } from '../../services/workingCopy/common/workingCopyEditorService.js';\nimport { IElevatedFileService } from '../../services/files/common/elevatedFileService.js';\nimport { BrowserElevatedFileService } from '../../services/files/browser/elevatedFileService.js';\nimport { IEditorWorkerService } from '../../../editor/common/services/editorWorker.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { SideBySideEditorInput } from '../../common/editor/sideBySideEditorInput.js';\nimport { ITextEditorService, TextEditorService } from '../../services/textfile/common/textEditorService.js';\nimport { IPaneCompositePartService } from '../../services/panecomposite/browser/panecomposite.js';\nimport { IPaneCompositePart } from '../../browser/parts/paneCompositePart.js';\nimport { ILanguageConfigurationService } from '../../../editor/common/languages/languageConfigurationRegistry.js';\nimport { TestLanguageConfigurationService } from '../../../editor/test/common/modes/testLanguageConfigurationService.js';\nimport { TerminalEditorInput } from '../../contrib/terminal/browser/terminalEditorInput.js';\nimport { IGroupModelChangeEvent } from '../../common/editor/editorGroupModel.js';\nimport { env } from '../../../base/common/process.js';\nimport { isValidBasename } from '../../../base/common/extpath.js';\nimport { TestAccessibilityService } from '../../../platform/accessibility/test/common/testAccessibilityService.js';\nimport { ILanguageFeatureDebounceService, LanguageFeatureDebounceService } from '../../../editor/common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../editor/common/services/languageFeatures.js';\nimport { LanguageFeaturesService } from '../../../editor/common/services/languageFeaturesService.js';\nimport { TextEditorPaneSelection } from '../../browser/parts/editor/textEditor.js';\nimport { Selection } from '../../../editor/common/core/selection.js';\nimport { IFolderBackupInfo, IWorkspaceBackupInfo } from '../../../platform/backup/common/backup.js';\nimport { TestEditorWorkerService } from '../../../editor/test/common/services/testEditorWorkerService.js';\nimport { IExtensionHostExitInfo, IRemoteAgentConnection, IRemoteAgentService } from '../../services/remote/common/remoteAgentService.js';\nimport { ILanguageDetectionService } from '../../services/languageDetection/common/languageDetectionWorkerService.js';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from '../../../platform/diagnostics/common/diagnostics.js';\nimport { ExtensionType, IExtension, IExtensionDescription, IRelaxedExtensionManifest, TargetPlatform } from '../../../platform/extensions/common/extensions.js';\nimport { IRemoteAgentEnvironment } from '../../../platform/remote/common/remoteAgentEnvironment.js';\nimport { ILayoutOffsetInfo } from '../../../platform/layout/browser/layoutService.js';\nimport { IUserDataProfile, IUserDataProfilesService, toUserDataProfile, UserDataProfilesService } from '../../../platform/userDataProfile/common/userDataProfile.js';\nimport { UserDataProfileService } from '../../services/userDataProfile/common/userDataProfileService.js';\nimport { IUserDataProfileService } from '../../services/userDataProfile/common/userDataProfile.js';\nimport { EnablementState, IResourceExtension, IScannedExtension, IWebExtensionsScannerService, IWorkbenchExtensionEnablementService, IWorkbenchExtensionManagementService } from '../../services/extensionManagement/common/extensionManagement.js';\nimport { ILocalExtension, IGalleryExtension, InstallOptions, UninstallOptions, IExtensionsControlManifest, IGalleryMetadata, IExtensionManagementParticipant, Metadata, InstallExtensionResult, InstallExtensionInfo, UninstallExtensionInfo } from '../../../platform/extensionManagement/common/extensionManagement.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { IRemoteExtensionsScannerService } from '../../../platform/remote/common/remoteExtensionsScanner.js';\nimport { IRemoteSocketFactoryService, RemoteSocketFactoryService } from '../../../platform/remote/common/remoteSocketFactoryService.js';\nimport { EditorParts } from '../../browser/parts/editor/editorParts.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { IAccessibilitySignalService } from '../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IEditorPaneService } from '../../services/editor/common/editorPaneService.js';\nimport { EditorPaneService } from '../../services/editor/browser/editorPaneService.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { CustomEditorLabelService, ICustomEditorLabelService } from '../../services/editor/common/customEditorLabelService.js';\nimport { TerminalConfigurationService } from '../../contrib/terminal/browser/terminalConfigurationService.js';\nimport { TerminalLogService } from '../../../platform/terminal/common/terminalLogService.js';\nimport { IEnvironmentVariableService } from '../../contrib/terminal/common/environmentVariable.js';\nimport { EnvironmentVariableService } from '../../contrib/terminal/common/environmentVariableService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IHoverService } from '../../../platform/hover/browser/hover.js';\nimport { NullHoverService } from '../../../platform/hover/test/browser/nullHoverService.js';\n\nexport function createFileEditorInput(instantiationService: IInstantiationService, resource: URI): FileEditorInput {\n\treturn instantiationService.createInstance(FileEditorInput, resource, undefined, undefined, undefined, undefined, undefined, undefined);\n}\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerFileEditorFactory({\n\n\ttypeId: FILE_EDITOR_INPUT_ID,\n\n\tcreateFileEditor: (resource, preferredResource, preferredName, preferredDescription, preferredEncoding, preferredLanguageId, preferredContents, instantiationService): IFileEditorInput => {\n\t\treturn instantiationService.createInstance(FileEditorInput, resource, preferredResource, preferredName, preferredDescription, preferredEncoding, preferredLanguageId, preferredContents);\n\t},\n\n\tisFileEditor: (obj): obj is IFileEditorInput => {\n\t\treturn obj instanceof FileEditorInput;\n\t}\n});\n\nexport class TestTextResourceEditor extends TextResourceEditor {\n\n\tprotected override createEditorControl(parent: HTMLElement, configuration: any): void {\n\t\tthis.editorControl = this._register(this.instantiationService.createInstance(TestCodeEditor, parent, configuration, {}));\n\t}\n}\n\nexport class TestTextFileEditor extends TextFileEditor {\n\n\tprotected override createEditorControl(parent: HTMLElement, configuration: any): void {\n\t\tthis.editorControl = this._register(this.instantiationService.createInstance(TestCodeEditor, parent, configuration, { contributions: [] }));\n\t}\n\n\tsetSelection(selection: Selection | undefined, reason: EditorPaneSelectionChangeReason): void {\n\t\tthis._options = selection ? upcast<IEditorOptions, ITextEditorOptions>({ selection }) : undefined;\n\n\t\tthis._onDidChangeSelection.fire({ reason });\n\t}\n\n\toverride getSelection(): IEditorPaneSelection | undefined {\n\t\tconst options = this.options;\n\t\tif (!options) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst textSelection = (options as ITextEditorOptions).selection;\n\t\tif (!textSelection) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new TextEditorPaneSelection(new Selection(textSelection.startLineNumber, textSelection.startColumn, textSelection.endLineNumber ?? textSelection.startLineNumber, textSelection.endColumn ?? textSelection.startColumn));\n\t}\n}\n\nexport interface ITestInstantiationService extends IInstantiationService {\n\tstub<T>(service: ServiceIdentifier<T>, ctor: any): T;\n}\n\nexport class TestWorkingCopyService extends WorkingCopyService {\n\ttestUnregisterWorkingCopy(workingCopy: IWorkingCopy): void {\n\t\treturn super.unregisterWorkingCopy(workingCopy);\n\t}\n}\n\nexport function workbenchInstantiationService(\n\toverrides?: {\n\t\tenvironmentService?: (instantiationService: IInstantiationService) => IEnvironmentService;\n\t\tfileService?: (instantiationService: IInstantiationService) => IFileService;\n\t\tworkingCopyBackupService?: (instantiationService: IInstantiationService) => IWorkingCopyBackupService;\n\t\tconfigurationService?: (instantiationService: IInstantiationService) => TestConfigurationService;\n\t\ttextFileService?: (instantiationService: IInstantiationService) => ITextFileService;\n\t\tpathService?: (instantiationService: IInstantiationService) => IPathService;\n\t\teditorService?: (instantiationService: IInstantiationService) => IEditorService;\n\t\tcontextKeyService?: (instantiationService: IInstantiationService) => IContextKeyService;\n\t\ttextEditorService?: (instantiationService: IInstantiationService) => ITextEditorService;\n\t},\n\tdisposables: Pick<DisposableStore, 'add'> = new DisposableStore()\n): TestInstantiationService {\n\tconst instantiationService = disposables.add(new TestInstantiationService(new ServiceCollection([ILifecycleService, disposables.add(new TestLifecycleService())])));\n\n\tinstantiationService.stub(IProductService, TestProductService);\n\tinstantiationService.stub(IEditorWorkerService, new TestEditorWorkerService());\n\tinstantiationService.stub(IWorkingCopyService, disposables.add(new TestWorkingCopyService()));\n\tconst environmentService = overrides?.environmentService ? overrides.environmentService(instantiationService) : TestEnvironmentService;\n\tinstantiationService.stub(IEnvironmentService, environmentService);\n\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\tinstantiationService.stub(ILogService, new NullLogService());\n\tconst contextKeyService = overrides?.contextKeyService ? overrides.contextKeyService(instantiationService) : instantiationService.createInstance(MockContextKeyService);\n\tinstantiationService.stub(IContextKeyService, contextKeyService);\n\tinstantiationService.stub(IProgressService, new TestProgressService());\n\tconst workspaceContextService = new TestContextService(TestWorkspace);\n\tinstantiationService.stub(IWorkspaceContextService, workspaceContextService);\n\tconst configService = overrides?.configurationService ? overrides.configurationService(instantiationService) : new TestConfigurationService({\n\t\tfiles: {\n\t\t\tparticipants: {\n\t\t\t\ttimeout: 60000\n\t\t\t}\n\t\t}\n\t});\n\tinstantiationService.stub(IConfigurationService, configService);\n\tconst textResourceConfigurationService = new TestTextResourceConfigurationService(configService);\n\tinstantiationService.stub(ITextResourceConfigurationService, textResourceConfigurationService);\n\tinstantiationService.stub(IUntitledTextEditorService, disposables.add(instantiationService.createInstance(UntitledTextEditorService)));\n\tinstantiationService.stub(IStorageService, disposables.add(new TestStorageService()));\n\tinstantiationService.stub(IRemoteAgentService, new TestRemoteAgentService());\n\tinstantiationService.stub(ILanguageDetectionService, new TestLanguageDetectionService());\n\tinstantiationService.stub(IPathService, overrides?.pathService ? overrides.pathService(instantiationService) : new TestPathService());\n\tconst layoutService = new TestLayoutService();\n\tinstantiationService.stub(IWorkbenchLayoutService, layoutService);\n\tinstantiationService.stub(IDialogService, new TestDialogService());\n\tconst accessibilityService = new TestAccessibilityService();\n\tinstantiationService.stub(IAccessibilityService, accessibilityService);\n\tinstantiationService.stub(IAccessibilitySignalService, {\n\t\tplaySignal: async () => { },\n\t\tisSoundEnabled(signal: unknown) { return false; },\n\t} as any);\n\tinstantiationService.stub(IFileDialogService, instantiationService.createInstance(TestFileDialogService));\n\tinstantiationService.stub(ILanguageService, disposables.add(instantiationService.createInstance(LanguageService)));\n\tinstantiationService.stub(ILanguageFeaturesService, new LanguageFeaturesService());\n\tinstantiationService.stub(ILanguageFeatureDebounceService, instantiationService.createInstance(LanguageFeatureDebounceService));\n\tinstantiationService.stub(IHistoryService, new TestHistoryService());\n\tinstantiationService.stub(ITextResourcePropertiesService, new TestTextResourcePropertiesService(configService));\n\tinstantiationService.stub(IUndoRedoService, instantiationService.createInstance(UndoRedoService));\n\tconst themeService = new TestThemeService();\n\tinstantiationService.stub(IThemeService, themeService);\n\tinstantiationService.stub(ILanguageConfigurationService, disposables.add(new TestLanguageConfigurationService()));\n\tinstantiationService.stub(IModelService, disposables.add(instantiationService.createInstance(ModelService)));\n\tconst fileService = overrides?.fileService ? overrides.fileService(instantiationService) : disposables.add(new TestFileService());\n\tinstantiationService.stub(IFileService, fileService);\n\tinstantiationService.stub(IUriIdentityService, disposables.add(new UriIdentityService(fileService)));\n\tconst markerService = new TestMarkerService();\n\tinstantiationService.stub(IMarkerService, markerService);\n\tinstantiationService.stub(IFilesConfigurationService, disposables.add(instantiationService.createInstance(TestFilesConfigurationService)));\n\tconst userDataProfilesService = instantiationService.stub(IUserDataProfilesService, disposables.add(instantiationService.createInstance(UserDataProfilesService)));\n\tinstantiationService.stub(IUserDataProfileService, disposables.add(new UserDataProfileService(userDataProfilesService.defaultProfile)));\n\tinstantiationService.stub(IWorkingCopyBackupService, overrides?.workingCopyBackupService ? overrides?.workingCopyBackupService(instantiationService) : disposables.add(new TestWorkingCopyBackupService()));\n\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\tinstantiationService.stub(INotificationService, new TestNotificationService());\n\tinstantiationService.stub(IUntitledTextEditorService, disposables.add(instantiationService.createInstance(UntitledTextEditorService)));\n\tinstantiationService.stub(IMenuService, new TestMenuService());\n\tconst keybindingService = new MockKeybindingService();\n\tinstantiationService.stub(IKeybindingService, keybindingService);\n\tinstantiationService.stub(IDecorationsService, new TestDecorationsService());\n\tinstantiationService.stub(IExtensionService, new TestExtensionService());\n\tinstantiationService.stub(IWorkingCopyFileService, disposables.add(instantiationService.createInstance(WorkingCopyFileService)));\n\tinstantiationService.stub(ITextFileService, overrides?.textFileService ? overrides.textFileService(instantiationService) : disposables.add(<ITextFileService>instantiationService.createInstance(TestTextFileService)));\n\tinstantiationService.stub(IHostService, <IHostService>instantiationService.createInstance(TestHostService));\n\tinstantiationService.stub(ITextModelService, <ITextModelService>disposables.add(instantiationService.createInstance(TextModelResolverService)));\n\tinstantiationService.stub(ILoggerService, disposables.add(new TestLoggerService(TestEnvironmentService.logsHome)));\n\tconst editorGroupService = new TestEditorGroupsService([new TestEditorGroupView(0)]);\n\tinstantiationService.stub(IEditorGroupsService, editorGroupService);\n\tinstantiationService.stub(ILabelService, <ILabelService>disposables.add(instantiationService.createInstance(LabelService)));\n\tconst editorService = overrides?.editorService ? overrides.editorService(instantiationService) : disposables.add(new TestEditorService(editorGroupService));\n\tinstantiationService.stub(IEditorService, editorService);\n\tinstantiationService.stub(IEditorPaneService, new EditorPaneService());\n\tinstantiationService.stub(IWorkingCopyEditorService, disposables.add(instantiationService.createInstance(WorkingCopyEditorService)));\n\tinstantiationService.stub(IEditorResolverService, disposables.add(instantiationService.createInstance(EditorResolverService)));\n\tconst textEditorService = overrides?.textEditorService ? overrides.textEditorService(instantiationService) : disposables.add(instantiationService.createInstance(TextEditorService));\n\tinstantiationService.stub(ITextEditorService, textEditorService);\n\tinstantiationService.stub(ICodeEditorService, disposables.add(new CodeEditorService(editorService, themeService, configService)));\n\tinstantiationService.stub(IPaneCompositePartService, disposables.add(new TestPaneCompositeService()));\n\tinstantiationService.stub(IListService, new TestListService());\n\tinstantiationService.stub(IContextViewService, disposables.add(instantiationService.createInstance(ContextViewService)));\n\tinstantiationService.stub(IContextMenuService, disposables.add(instantiationService.createInstance(ContextMenuService)));\n\tinstantiationService.stub(IQuickInputService, disposables.add(new QuickInputService(configService, instantiationService, keybindingService, contextKeyService, themeService, layoutService)));\n\tinstantiationService.stub(IWorkspacesService, new TestWorkspacesService());\n\tinstantiationService.stub(IWorkspaceTrustManagementService, disposables.add(new TestWorkspaceTrustManagementService()));\n\tinstantiationService.stub(IWorkspaceTrustRequestService, disposables.add(new TestWorkspaceTrustRequestService(false)));\n\tinstantiationService.stub(ITerminalInstanceService, new TestTerminalInstanceService());\n\tinstantiationService.stub(ITerminalEditorService, new TestTerminalEditorService());\n\tinstantiationService.stub(ITerminalGroupService, new TestTerminalGroupService());\n\tinstantiationService.stub(ITerminalProfileService, new TestTerminalProfileService());\n\tinstantiationService.stub(ITerminalProfileResolverService, new TestTerminalProfileResolverService());\n\tinstantiationService.stub(ITerminalConfigurationService, disposables.add(instantiationService.createInstance(TestTerminalConfigurationService)));\n\tinstantiationService.stub(ITerminalLogService, disposables.add(instantiationService.createInstance(TerminalLogService)));\n\tinstantiationService.stub(IEnvironmentVariableService, disposables.add(instantiationService.createInstance(EnvironmentVariableService)));\n\tinstantiationService.stub(IElevatedFileService, new BrowserElevatedFileService());\n\tinstantiationService.stub(IRemoteSocketFactoryService, new RemoteSocketFactoryService());\n\tinstantiationService.stub(ICustomEditorLabelService, disposables.add(new CustomEditorLabelService(configService, workspaceContextService)));\n\tinstantiationService.stub(IHoverService, NullHoverService);\n\n\treturn instantiationService;\n}\n\nexport class TestServiceAccessor {\n\tconstructor(\n\t\t@ILifecycleService public lifecycleService: TestLifecycleService,\n\t\t@ITextFileService public textFileService: TestTextFileService,\n\t\t@ITextEditorService public textEditorService: ITextEditorService,\n\t\t@IWorkingCopyFileService public workingCopyFileService: IWorkingCopyFileService,\n\t\t@IFilesConfigurationService public filesConfigurationService: TestFilesConfigurationService,\n\t\t@IWorkspaceContextService public contextService: TestContextService,\n\t\t@IModelService public modelService: ModelService,\n\t\t@IFileService public fileService: TestFileService,\n\t\t@IFileDialogService public fileDialogService: TestFileDialogService,\n\t\t@IDialogService public dialogService: TestDialogService,\n\t\t@IWorkingCopyService public workingCopyService: TestWorkingCopyService,\n\t\t@IEditorService public editorService: TestEditorService,\n\t\t@IEditorPaneService public editorPaneService: IEditorPaneService,\n\t\t@IWorkbenchEnvironmentService public environmentService: IWorkbenchEnvironmentService,\n\t\t@IPathService public pathService: IPathService,\n\t\t@IEditorGroupsService public editorGroupService: IEditorGroupsService,\n\t\t@IEditorResolverService public editorResolverService: IEditorResolverService,\n\t\t@ILanguageService public languageService: ILanguageService,\n\t\t@ITextModelService public textModelResolverService: ITextModelService,\n\t\t@IUntitledTextEditorService public untitledTextEditorService: UntitledTextEditorService,\n\t\t@IConfigurationService public testConfigurationService: TestConfigurationService,\n\t\t@IWorkingCopyBackupService public workingCopyBackupService: TestWorkingCopyBackupService,\n\t\t@IHostService public hostService: TestHostService,\n\t\t@IQuickInputService public quickInputService: IQuickInputService,\n\t\t@ILabelService public labelService: ILabelService,\n\t\t@ILogService public logService: ILogService,\n\t\t@IUriIdentityService public uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService public instantitionService: IInstantiationService,\n\t\t@INotificationService public notificationService: INotificationService,\n\t\t@IWorkingCopyEditorService public workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IInstantiationService public instantiationService: IInstantiationService,\n\t\t@IElevatedFileService public elevatedFileService: IElevatedFileService,\n\t\t@IWorkspaceTrustRequestService public workspaceTrustRequestService: TestWorkspaceTrustRequestService,\n\t\t@IDecorationsService public decorationsService: IDecorationsService,\n\t\t@IProgressService public progressService: IProgressService,\n\t) { }\n}\n\nexport class TestTextFileService extends BrowserTextFileService {\n\tprivate readStreamError: FileOperationError | undefined = undefined;\n\tprivate writeError: FileOperationError | undefined = undefined;\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUntitledTextEditorService untitledTextEditorService: IUntitledTextEditorService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IFileDialogService fileDialogService: IFileDialogService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IPathService pathService: IPathService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@ILogService logService: ILogService,\n\t\t@IElevatedFileService elevatedFileService: IElevatedFileService,\n\t\t@IDecorationsService decorationsService: IDecorationsService\n\t) {\n\t\tsuper(\n\t\t\tfileService,\n\t\t\tuntitledTextEditorService,\n\t\t\tlifecycleService,\n\t\t\tinstantiationService,\n\t\t\tmodelService,\n\t\t\tenvironmentService,\n\t\t\tdialogService,\n\t\t\tfileDialogService,\n\t\t\ttextResourceConfigurationService,\n\t\t\tfilesConfigurationService,\n\t\t\tcodeEditorService,\n\t\t\tpathService,\n\t\t\tworkingCopyFileService,\n\t\t\turiIdentityService,\n\t\t\tlanguageService,\n\t\t\televatedFileService,\n\t\t\tlogService,\n\t\t\tdecorationsService\n\t\t);\n\t}\n\n\tsetReadStreamErrorOnce(error: FileOperationError): void {\n\t\tthis.readStreamError = error;\n\t}\n\n\toverride async readStream(resource: URI, options?: IReadTextFileOptions): Promise<ITextFileStreamContent> {\n\t\tif (this.readStreamError) {\n\t\t\tconst error = this.readStreamError;\n\t\t\tthis.readStreamError = undefined;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst content = await this.fileService.readFileStream(resource, options);\n\t\treturn {\n\t\t\tresource: content.resource,\n\t\t\tname: content.name,\n\t\t\tmtime: content.mtime,\n\t\t\tctime: content.ctime,\n\t\t\tetag: content.etag,\n\t\t\tencoding: 'utf8',\n\t\t\tvalue: await createTextBufferFactoryFromStream(content.value),\n\t\t\tsize: 10,\n\t\t\treadonly: false,\n\t\t\tlocked: false\n\t\t};\n\t}\n\n\tsetWriteErrorOnce(error: FileOperationError): void {\n\t\tthis.writeError = error;\n\t}\n\n\toverride async write(resource: URI, value: string | ITextSnapshot, options?: IWriteTextFileOptions): Promise<IFileStatWithMetadata> {\n\t\tif (this.writeError) {\n\t\t\tconst error = this.writeError;\n\t\t\tthis.writeError = undefined;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn super.write(resource, value, options);\n\t}\n}\n\nexport class TestBrowserTextFileServiceWithEncodingOverrides extends BrowserTextFileService {\n\n\tprivate _testEncoding: TestEncodingOracle | undefined;\n\toverride get encoding(): TestEncodingOracle {\n\t\tif (!this._testEncoding) {\n\t\t\tthis._testEncoding = this._register(this.instantiationService.createInstance(TestEncodingOracle));\n\t\t}\n\n\t\treturn this._testEncoding;\n\t}\n}\n\nexport class TestEncodingOracle extends EncodingOracle {\n\n\tprotected override get encodingOverrides(): IEncodingOverride[] {\n\t\treturn [\n\t\t\t{ extension: 'utf16le', encoding: UTF16le },\n\t\t\t{ extension: 'utf16be', encoding: UTF16be },\n\t\t\t{ extension: 'utf8bom', encoding: UTF8_with_bom }\n\t\t];\n\t}\n\n\tprotected override set encodingOverrides(overrides: IEncodingOverride[]) { }\n}\n\nclass TestEnvironmentServiceWithArgs extends BrowserWorkbenchEnvironmentService {\n\targs = [];\n}\n\nexport const TestEnvironmentService = new TestEnvironmentServiceWithArgs('', URI.file('tests').with({ scheme: 'vscode-tests' }), Object.create(null), TestProductService);\n\nexport class TestProgressService implements IProgressService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\twithProgress(\n\t\toptions: IProgressOptions | IProgressDialogOptions | IProgressWindowOptions | IProgressNotificationOptions | IProgressCompositeOptions,\n\t\ttask: (progress: IProgress<IProgressStep>) => Promise<any>,\n\t\tonDidCancel?: ((choice?: number | undefined) => void) | undefined\n\t): Promise<any> {\n\t\treturn task(Progress.None);\n\t}\n}\n\nexport class TestDecorationsService implements IDecorationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidChangeDecorations: Event<IResourceDecorationChangeEvent> = Event.None;\n\n\tregisterDecorationsProvider(_provider: IDecorationsProvider): IDisposable { return Disposable.None; }\n\tgetDecoration(_uri: URI, _includeChildren: boolean, _overwrite?: IDecorationData): IDecoration | undefined { return undefined; }\n}\n\nexport class TestMenuService implements IMenuService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tcreateMenu(_id: MenuId, _scopedKeybindingService: IContextKeyService): IMenu {\n\t\treturn {\n\t\t\tonDidChange: Event.None,\n\t\t\tdispose: () => undefined,\n\t\t\tgetActions: () => []\n\t\t};\n\t}\n\n\tgetMenuActions(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][] {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetMenuContexts(id: MenuId): ReadonlySet<string> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tresetHiddenStates(): void {\n\t\t// nothing\n\t}\n}\n\nexport class TestFileDialogService implements IFileDialogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate confirmResult!: ConfirmResult;\n\n\tconstructor(\n\t\t@IPathService private readonly pathService: IPathService\n\t) { }\n\tasync defaultFilePath(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tasync defaultFolderPath(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tasync defaultWorkspacePath(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tasync preferredHome(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tpickFileFolderAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\tpickFileAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\tpickFolderAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\tpickWorkspaceAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\n\tprivate fileToSave!: URI;\n\tsetPickFileToSave(path: URI): void { this.fileToSave = path; }\n\tpickFileToSave(defaultUri: URI, availableFileSystems?: string[]): Promise<URI | undefined> { return Promise.resolve(this.fileToSave); }\n\n\tshowSaveDialog(_options: ISaveDialogOptions): Promise<URI | undefined> { return Promise.resolve(undefined); }\n\tshowOpenDialog(_options: IOpenDialogOptions): Promise<URI[] | undefined> { return Promise.resolve(undefined); }\n\n\tsetConfirmResult(result: ConfirmResult): void { this.confirmResult = result; }\n\tshowSaveConfirm(fileNamesOrResources: (string | URI)[]): Promise<ConfirmResult> { return Promise.resolve(this.confirmResult); }\n}\n\nexport class TestLayoutService implements IWorkbenchLayoutService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\topenedDefaultEditors = false;\n\n\tmainContainerDimension: IDimension = { width: 800, height: 600 };\n\tactiveContainerDimension: IDimension = { width: 800, height: 600 };\n\tmainContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\tactiveContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\n\tmainContainer: HTMLElement = mainWindow.document.body;\n\tcontainers = [mainWindow.document.body];\n\tactiveContainer: HTMLElement = mainWindow.document.body;\n\n\tonDidChangeZenMode: Event<boolean> = Event.None;\n\tonDidChangeMainEditorCenteredLayout: Event<boolean> = Event.None;\n\tonDidChangeWindowMaximized: Event<{ windowId: number; maximized: boolean }> = Event.None;\n\tonDidChangePanelPosition: Event<string> = Event.None;\n\tonDidChangePanelAlignment: Event<PanelAlignment> = Event.None;\n\tonDidChangePartVisibility: Event<void> = Event.None;\n\tonDidLayoutMainContainer = Event.None;\n\tonDidLayoutActiveContainer = Event.None;\n\tonDidLayoutContainer = Event.None;\n\tonDidChangeNotificationsVisibility = Event.None;\n\tonDidAddContainer = Event.None;\n\tonDidChangeActiveContainer = Event.None;\n\n\tlayout(): void { }\n\tisRestored(): boolean { return true; }\n\twhenReady: Promise<void> = Promise.resolve(undefined);\n\twhenRestored: Promise<void> = Promise.resolve(undefined);\n\thasFocus(_part: Parts): boolean { return false; }\n\tfocusPart(_part: Parts): void { }\n\thasMainWindowBorder(): boolean { return false; }\n\tgetMainWindowBorderRadius(): string | undefined { return undefined; }\n\tisVisible(_part: Parts): boolean { return true; }\n\tgetContainer(): HTMLElement { return null!; }\n\twhenContainerStylesLoaded() { return undefined; }\n\tisTitleBarHidden(): boolean { return false; }\n\tisStatusBarHidden(): boolean { return false; }\n\tisActivityBarHidden(): boolean { return false; }\n\tsetActivityBarHidden(_hidden: boolean): void { }\n\tsetBannerHidden(_hidden: boolean): void { }\n\tisSideBarHidden(): boolean { return false; }\n\tasync setEditorHidden(_hidden: boolean): Promise<void> { }\n\tasync setSideBarHidden(_hidden: boolean): Promise<void> { }\n\tasync setAuxiliaryBarHidden(_hidden: boolean): Promise<void> { }\n\tasync setPartHidden(_hidden: boolean, part: Parts): Promise<void> { }\n\tisPanelHidden(): boolean { return false; }\n\tasync setPanelHidden(_hidden: boolean): Promise<void> { }\n\ttoggleMaximizedPanel(): void { }\n\tisPanelMaximized(): boolean { return false; }\n\tgetMenubarVisibility(): MenuBarVisibility { throw new Error('not implemented'); }\n\ttoggleMenuBar(): void { }\n\tgetSideBarPosition() { return 0; }\n\tgetPanelPosition() { return 0; }\n\tgetPanelAlignment(): PanelAlignment { return 'center'; }\n\tasync setPanelPosition(_position: PartPosition): Promise<void> { }\n\tasync setPanelAlignment(_alignment: PanelAlignment): Promise<void> { }\n\taddClass(_clazz: string): void { }\n\tremoveClass(_clazz: string): void { }\n\tgetMaximumEditorDimensions(): IDimension { throw new Error('not implemented'); }\n\ttoggleZenMode(): void { }\n\tisMainEditorLayoutCentered(): boolean { return false; }\n\tcenterMainEditorLayout(_active: boolean): void { }\n\tresizePart(_part: Parts, _sizeChangeWidth: number, _sizeChangeHeight: number): void { }\n\tregisterPart(part: Part): IDisposable { return Disposable.None; }\n\tisWindowMaximized(targetWindow: Window) { return false; }\n\tupdateWindowMaximizedState(targetWindow: Window, maximized: boolean): void { }\n\tgetVisibleNeighborPart(part: Parts, direction: Direction): Parts | undefined { return undefined; }\n\tfocus() { }\n}\n\nconst activeViewlet: PaneComposite = {} as any;\n\nexport class TestPaneCompositeService extends Disposable implements IPaneCompositePartService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidPaneCompositeOpen: Event<{ composite: IPaneComposite; viewContainerLocation: ViewContainerLocation }>;\n\tonDidPaneCompositeClose: Event<{ composite: IPaneComposite; viewContainerLocation: ViewContainerLocation }>;\n\n\tprivate parts = new Map<ViewContainerLocation, IPaneCompositePart>();\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.parts.set(ViewContainerLocation.Panel, new TestPanelPart());\n\t\tthis.parts.set(ViewContainerLocation.Sidebar, new TestSideBarPart());\n\n\t\tthis.onDidPaneCompositeOpen = Event.any(...([ViewContainerLocation.Panel, ViewContainerLocation.Sidebar].map(loc => Event.map(this.parts.get(loc)!.onDidPaneCompositeOpen, composite => { return { composite, viewContainerLocation: loc }; }))));\n\t\tthis.onDidPaneCompositeClose = Event.any(...([ViewContainerLocation.Panel, ViewContainerLocation.Sidebar].map(loc => Event.map(this.parts.get(loc)!.onDidPaneCompositeClose, composite => { return { composite, viewContainerLocation: loc }; }))));\n\t}\n\n\topenPaneComposite(id: string | undefined, viewContainerLocation: ViewContainerLocation, focus?: boolean): Promise<IPaneComposite | undefined> {\n\t\treturn this.getPartByLocation(viewContainerLocation).openPaneComposite(id, focus);\n\t}\n\tgetActivePaneComposite(viewContainerLocation: ViewContainerLocation): IPaneComposite | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getActivePaneComposite();\n\t}\n\tgetPaneComposite(id: string, viewContainerLocation: ViewContainerLocation): PaneCompositeDescriptor | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getPaneComposite(id);\n\t}\n\tgetPaneComposites(viewContainerLocation: ViewContainerLocation): PaneCompositeDescriptor[] {\n\t\treturn this.getPartByLocation(viewContainerLocation).getPaneComposites();\n\t}\n\tgetProgressIndicator(id: string, viewContainerLocation: ViewContainerLocation): IProgressIndicator | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getProgressIndicator(id);\n\t}\n\thideActivePaneComposite(viewContainerLocation: ViewContainerLocation): void {\n\t\tthis.getPartByLocation(viewContainerLocation).hideActivePaneComposite();\n\t}\n\tgetLastActivePaneCompositeId(viewContainerLocation: ViewContainerLocation): string {\n\t\treturn this.getPartByLocation(viewContainerLocation).getLastActivePaneCompositeId();\n\t}\n\n\tgetPinnedPaneCompositeIds(viewContainerLocation: ViewContainerLocation): string[] {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetVisiblePaneCompositeIds(viewContainerLocation: ViewContainerLocation): string[] {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetPartByLocation(viewContainerLocation: ViewContainerLocation): IPaneCompositePart {\n\t\treturn assertIsDefined(this.parts.get(viewContainerLocation));\n\t}\n}\n\nexport class TestSideBarPart implements IPaneCompositePart {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidViewletRegisterEmitter = new Emitter<PaneCompositeDescriptor>();\n\tonDidViewletDeregisterEmitter = new Emitter<PaneCompositeDescriptor>();\n\tonDidViewletOpenEmitter = new Emitter<IPaneComposite>();\n\tonDidViewletCloseEmitter = new Emitter<IPaneComposite>();\n\n\treadonly partId = Parts.SIDEBAR_PART;\n\telement: HTMLElement = undefined!;\n\tminimumWidth = 0;\n\tmaximumWidth = 0;\n\tminimumHeight = 0;\n\tmaximumHeight = 0;\n\tonDidChange = Event.None;\n\tonDidPaneCompositeOpen = this.onDidViewletOpenEmitter.event;\n\tonDidPaneCompositeClose = this.onDidViewletCloseEmitter.event;\n\n\topenPaneComposite(id: string, focus?: boolean): Promise<IPaneComposite | undefined> { return Promise.resolve(undefined); }\n\tgetPaneComposites(): PaneCompositeDescriptor[] { return []; }\n\tgetAllViewlets(): PaneCompositeDescriptor[] { return []; }\n\tgetActivePaneComposite(): IPaneComposite { return activeViewlet; }\n\tgetDefaultViewletId(): string { return 'workbench.view.explorer'; }\n\tgetPaneComposite(id: string): PaneCompositeDescriptor | undefined { return undefined; }\n\tgetProgressIndicator(id: string) { return undefined; }\n\thideActivePaneComposite(): void { }\n\tgetLastActivePaneCompositeId(): string { return undefined!; }\n\tdispose() { }\n\tgetPinnedPaneCompositeIds() { return []; }\n\tgetVisiblePaneCompositeIds() { return []; }\n\tlayout(width: number, height: number, top: number, left: number): void { }\n}\n\nexport class TestPanelPart implements IPaneCompositePart {\n\tdeclare readonly _serviceBrand: undefined;\n\n\telement: HTMLElement = undefined!;\n\tminimumWidth = 0;\n\tmaximumWidth = 0;\n\tminimumHeight = 0;\n\tmaximumHeight = 0;\n\tonDidChange = Event.None;\n\tonDidPaneCompositeOpen = new Emitter<IPaneComposite>().event;\n\tonDidPaneCompositeClose = new Emitter<IPaneComposite>().event;\n\treadonly partId = Parts.AUXILIARYBAR_PART;\n\n\tasync openPaneComposite(id?: string, focus?: boolean): Promise<undefined> { return undefined; }\n\tgetPaneComposite(id: string): any { return activeViewlet; }\n\tgetPaneComposites() { return []; }\n\tgetPinnedPaneCompositeIds() { return []; }\n\tgetVisiblePaneCompositeIds() { return []; }\n\tgetActivePaneComposite(): IPaneComposite { return activeViewlet; }\n\tsetPanelEnablement(id: string, enabled: boolean): void { }\n\tdispose() { }\n\tgetProgressIndicator(id: string) { return null!; }\n\thideActivePaneComposite(): void { }\n\tgetLastActivePaneCompositeId(): string { return undefined!; }\n\tlayout(width: number, height: number, top: number, left: number): void { }\n}\n\nexport class TestViewsService implements IViewsService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\n\tonDidChangeViewContainerVisibility = new Emitter<{ id: string; visible: boolean; location: ViewContainerLocation }>().event;\n\tisViewContainerVisible(id: string): boolean { return true; }\n\tisViewContainerActive(id: string): boolean { return true; }\n\tgetVisibleViewContainer(): ViewContainer | null { return null; }\n\topenViewContainer(id: string, focus?: boolean): Promise<IPaneComposite | null> { return Promise.resolve(null); }\n\tcloseViewContainer(id: string): void { }\n\n\tonDidChangeViewVisibilityEmitter = new Emitter<{ id: string; visible: boolean }>();\n\tonDidChangeViewVisibility = this.onDidChangeViewVisibilityEmitter.event;\n\tonDidChangeFocusedViewEmitter = new Emitter<void>();\n\tonDidChangeFocusedView = this.onDidChangeFocusedViewEmitter.event;\n\tisViewVisible(id: string): boolean { return true; }\n\tgetActiveViewWithId<T extends IView>(id: string): T | null { return null; }\n\tgetViewWithId<T extends IView>(id: string): T | null { return null; }\n\topenView<T extends IView>(id: string, focus?: boolean | undefined): Promise<T | null> { return Promise.resolve(null); }\n\tcloseView(id: string): void { }\n\tgetViewProgressIndicator(id: string) { return null!; }\n\tgetActiveViewPaneContainerWithId(id: string) { return null; }\n\tgetFocusedViewName(): string { return ''; }\n}\n\nexport class TestEditorGroupsService implements IEditorGroupsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(public groups: TestEditorGroupView[] = []) { }\n\n\treadonly parts: readonly IEditorPart[] = [this];\n\n\twindowId = mainWindow.vscodeWindowId;\n\n\tonDidCreateAuxiliaryEditorPart: Event<IAuxiliaryEditorPart> = Event.None;\n\tonDidChangeActiveGroup: Event<IEditorGroup> = Event.None;\n\tonDidActivateGroup: Event<IEditorGroup> = Event.None;\n\tonDidAddGroup: Event<IEditorGroup> = Event.None;\n\tonDidRemoveGroup: Event<IEditorGroup> = Event.None;\n\tonDidMoveGroup: Event<IEditorGroup> = Event.None;\n\tonDidChangeGroupIndex: Event<IEditorGroup> = Event.None;\n\tonDidChangeGroupLabel: Event<IEditorGroup> = Event.None;\n\tonDidChangeGroupLocked: Event<IEditorGroup> = Event.None;\n\tonDidChangeGroupMaximized: Event<boolean> = Event.None;\n\tonDidLayout: Event<IDimension> = Event.None;\n\tonDidChangeEditorPartOptions = Event.None;\n\tonDidScroll = Event.None;\n\tonWillDispose = Event.None;\n\n\torientation = GroupOrientation.HORIZONTAL;\n\tisReady = true;\n\twhenReady: Promise<void> = Promise.resolve(undefined);\n\twhenRestored: Promise<void> = Promise.resolve(undefined);\n\thasRestorableState = false;\n\n\tcontentDimension = { width: 800, height: 600 };\n\n\tget activeGroup(): IEditorGroup { return this.groups[0]; }\n\tget sideGroup(): IEditorGroup { return this.groups[0]; }\n\tget count(): number { return this.groups.length; }\n\n\tgetPart(group: number | IEditorGroup): IEditorPart { return this; }\n\tsaveWorkingSet(name: string): IEditorWorkingSet { throw new Error('Method not implemented.'); }\n\tgetWorkingSets(): IEditorWorkingSet[] { throw new Error('Method not implemented.'); }\n\tapplyWorkingSet(workingSet: IEditorWorkingSet | 'empty', options?: IEditorWorkingSetOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n\tdeleteWorkingSet(workingSet: IEditorWorkingSet): Promise<boolean> { throw new Error('Method not implemented.'); }\n\tgetGroups(_order?: GroupsOrder): readonly IEditorGroup[] { return this.groups; }\n\tgetGroup(identifier: number): IEditorGroup | undefined { return this.groups.find(group => group.id === identifier); }\n\tgetLabel(_identifier: number): string { return 'Group 1'; }\n\tfindGroup(_scope: IFindGroupScope, _source?: number | IEditorGroup, _wrap?: boolean): IEditorGroup { throw new Error('not implemented'); }\n\tactivateGroup(_group: number | IEditorGroup): IEditorGroup { throw new Error('not implemented'); }\n\trestoreGroup(_group: number | IEditorGroup): IEditorGroup { throw new Error('not implemented'); }\n\tgetSize(_group: number | IEditorGroup): { width: number; height: number } { return { width: 100, height: 100 }; }\n\tsetSize(_group: number | IEditorGroup, _size: { width: number; height: number }): void { }\n\tarrangeGroups(_arrangement: GroupsArrangement): void { }\n\ttoggleMaximizeGroup(): void { }\n\thasMaximizedGroup(): boolean { throw new Error('not implemented'); }\n\ttoggleExpandGroup(): void { }\n\tapplyLayout(_layout: EditorGroupLayout): void { }\n\tgetLayout(): EditorGroupLayout { throw new Error('not implemented'); }\n\tsetGroupOrientation(_orientation: GroupOrientation): void { }\n\taddGroup(_location: number | IEditorGroup, _direction: GroupDirection): IEditorGroup { throw new Error('not implemented'); }\n\tremoveGroup(_group: number | IEditorGroup): void { }\n\tmoveGroup(_group: number | IEditorGroup, _location: number | IEditorGroup, _direction: GroupDirection): IEditorGroup { throw new Error('not implemented'); }\n\tmergeGroup(_group: number | IEditorGroup, _target: number | IEditorGroup, _options?: IMergeGroupOptions): boolean { throw new Error('not implemented'); }\n\tmergeAllGroups(_group: number | IEditorGroup): boolean { throw new Error('not implemented'); }\n\tcopyGroup(_group: number | IEditorGroup, _location: number | IEditorGroup, _direction: GroupDirection): IEditorGroup { throw new Error('not implemented'); }\n\tcenterLayout(active: boolean): void { }\n\tisLayoutCentered(): boolean { return false; }\n\tcreateEditorDropTarget(container: HTMLElement, delegate: IEditorDropTargetDelegate): IDisposable { return Disposable.None; }\n\tregisterContextKeyProvider<T extends ContextKeyValue>(_provider: IEditorGroupContextKeyProvider<T>): IDisposable { throw new Error('not implemented'); }\n\tgetScopedInstantiationService(part: IEditorPart): IInstantiationService { throw new Error('Method not implemented.'); }\n\n\tpartOptions!: IEditorPartOptions;\n\tenforcePartOptions(options: IEditorPartOptions): IDisposable { return Disposable.None; }\n\n\treadonly mainPart = this;\n\tregisterEditorPart(part: any): IDisposable { return Disposable.None; }\n\tcreateAuxiliaryEditorPart(): Promise<IAuxiliaryEditorPart> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestEditorGroupView implements IEditorGroupView {\n\n\tconstructor(public id: number) { }\n\n\twindowId = mainWindow.vscodeWindowId;\n\tgroupsView: IEditorGroupsView = undefined!;\n\tactiveEditorPane!: IVisibleEditorPane;\n\tactiveEditor!: EditorInput;\n\tselectedEditors: EditorInput[] = [];\n\tpreviewEditor!: EditorInput;\n\tcount!: number;\n\tstickyCount!: number;\n\tdisposed!: boolean;\n\teditors: readonly EditorInput[] = [];\n\tlabel!: string;\n\tisLocked!: boolean;\n\tariaLabel!: string;\n\tindex!: number;\n\twhenRestored: Promise<void> = Promise.resolve(undefined);\n\telement!: HTMLElement;\n\tminimumWidth!: number;\n\tmaximumWidth!: number;\n\tminimumHeight!: number;\n\tmaximumHeight!: number;\n\n\ttitleHeight!: IEditorGroupTitleHeight;\n\n\tisEmpty = true;\n\n\tonWillDispose: Event<void> = Event.None;\n\tonDidModelChange: Event<IGroupModelChangeEvent> = Event.None;\n\tonWillCloseEditor: Event<IEditorCloseEvent> = Event.None;\n\tonDidCloseEditor: Event<IEditorCloseEvent> = Event.None;\n\tonDidOpenEditorFail: Event<EditorInput> = Event.None;\n\tonDidFocus: Event<void> = Event.None;\n\tonDidChange: Event<{ width: number; height: number }> = Event.None;\n\tonWillMoveEditor: Event<IEditorWillMoveEvent> = Event.None;\n\tonWillOpenEditor: Event<IEditorWillOpenEvent> = Event.None;\n\tonDidActiveEditorChange: Event<IActiveEditorChangeEvent> = Event.None;\n\n\tgetEditors(_order?: EditorsOrder): readonly EditorInput[] { return []; }\n\tfindEditors(_resource: URI): readonly EditorInput[] { return []; }\n\tgetEditorByIndex(_index: number): EditorInput { throw new Error('not implemented'); }\n\tgetIndexOfEditor(_editor: EditorInput): number { return -1; }\n\tisFirst(editor: EditorInput): boolean { return false; }\n\tisLast(editor: EditorInput): boolean { return false; }\n\topenEditor(_editor: EditorInput, _options?: IEditorOptions): Promise<IEditorPane> { throw new Error('not implemented'); }\n\topenEditors(_editors: EditorInputWithOptions[]): Promise<IEditorPane> { throw new Error('not implemented'); }\n\tisPinned(_editor: EditorInput): boolean { return false; }\n\tisSticky(_editor: EditorInput): boolean { return false; }\n\tisTransient(_editor: EditorInput): boolean { return false; }\n\tisActive(_editor: EditorInput | IUntypedEditorInput): boolean { return false; }\n\tsetSelection(_activeSelectedEditor: EditorInput, _inactiveSelectedEditors: EditorInput[]): Promise<void> { throw new Error('not implemented'); }\n\tisSelected(_editor: EditorInput): boolean { return false; }\n\tcontains(candidate: EditorInput | IUntypedEditorInput): boolean { return false; }\n\tmoveEditor(_editor: EditorInput, _target: IEditorGroup, _options?: IEditorOptions): boolean { return true; }\n\tmoveEditors(_editors: EditorInputWithOptions[], _target: IEditorGroup): boolean { return true; }\n\tcopyEditor(_editor: EditorInput, _target: IEditorGroup, _options?: IEditorOptions): void { }\n\tcopyEditors(_editors: EditorInputWithOptions[], _target: IEditorGroup): void { }\n\tasync closeEditor(_editor?: EditorInput, options?: ICloseEditorOptions): Promise<boolean> { return true; }\n\tasync closeEditors(_editors: EditorInput[] | ICloseEditorsFilter, options?: ICloseEditorOptions): Promise<boolean> { return true; }\n\tasync closeAllEditors(options?: ICloseAllEditorsOptions): Promise<boolean> { return true; }\n\tasync replaceEditors(_editors: IEditorReplacement[]): Promise<void> { }\n\tpinEditor(_editor?: EditorInput): void { }\n\tstickEditor(editor?: EditorInput | undefined): void { }\n\tunstickEditor(editor?: EditorInput | undefined): void { }\n\tlock(locked: boolean): void { }\n\tfocus(): void { }\n\tget scopedContextKeyService(): IContextKeyService { throw new Error('not implemented'); }\n\tsetActive(_isActive: boolean): void { }\n\tnotifyIndexChanged(_index: number): void { }\n\tnotifyLabelChanged(_label: string): void { }\n\tdispose(): void { }\n\ttoJSON(): object { return Object.create(null); }\n\tlayout(_width: number, _height: number): void { }\n\trelayout() { }\n\tcreateEditorActions(_menuDisposable: IDisposable): { actions: IToolbarActions; onDidChange: Event<IMenuChangeEvent> } { throw new Error('not implemented'); }\n}\n\nexport class TestEditorGroupAccessor implements IEditorGroupsView {\n\n\tlabel: string = '';\n\twindowId = mainWindow.vscodeWindowId;\n\n\tgroups: IEditorGroupView[] = [];\n\tactiveGroup!: IEditorGroupView;\n\n\tpartOptions: IEditorPartOptions = { ...DEFAULT_EDITOR_PART_OPTIONS };\n\n\tonDidChangeEditorPartOptions = Event.None;\n\tonDidVisibilityChange = Event.None;\n\n\tgetGroup(identifier: number): IEditorGroupView | undefined { throw new Error('Method not implemented.'); }\n\tgetGroups(order: GroupsOrder): IEditorGroupView[] { throw new Error('Method not implemented.'); }\n\tactivateGroup(identifier: number | IEditorGroupView): IEditorGroupView { throw new Error('Method not implemented.'); }\n\trestoreGroup(identifier: number | IEditorGroupView): IEditorGroupView { throw new Error('Method not implemented.'); }\n\taddGroup(location: number | IEditorGroupView, direction: GroupDirection): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tmergeGroup(group: number | IEditorGroupView, target: number | IEditorGroupView, options?: IMergeGroupOptions | undefined): boolean { throw new Error('Method not implemented.'); }\n\tmoveGroup(group: number | IEditorGroupView, location: number | IEditorGroupView, direction: GroupDirection): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tcopyGroup(group: number | IEditorGroupView, location: number | IEditorGroupView, direction: GroupDirection): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tremoveGroup(group: number | IEditorGroupView): void { throw new Error('Method not implemented.'); }\n\tarrangeGroups(arrangement: GroupsArrangement, target?: number | IEditorGroupView | undefined): void { throw new Error('Method not implemented.'); }\n\ttoggleMaximizeGroup(group: number | IEditorGroupView): void { throw new Error('Method not implemented.'); }\n\ttoggleExpandGroup(group: number | IEditorGroupView): void { throw new Error('Method not implemented.'); }\n}\n\nexport class TestEditorService extends Disposable implements EditorServiceImpl {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidActiveEditorChange: Event<void> = Event.None;\n\tonDidVisibleEditorsChange: Event<void> = Event.None;\n\tonDidEditorsChange: Event<IEditorsChangeEvent> = Event.None;\n\tonWillOpenEditor: Event<IEditorWillOpenEvent> = Event.None;\n\tonDidCloseEditor: Event<IEditorCloseEvent> = Event.None;\n\tonDidOpenEditorFail: Event<IEditorIdentifier> = Event.None;\n\tonDidMostRecentlyActiveEditorsChange: Event<void> = Event.None;\n\n\tprivate _activeTextEditorControl: ICodeEditor | IDiffEditor | undefined;\n\tpublic get activeTextEditorControl(): ICodeEditor | IDiffEditor | undefined { return this._activeTextEditorControl; }\n\tpublic set activeTextEditorControl(value: ICodeEditor | IDiffEditor | undefined) { this._activeTextEditorControl = value; }\n\n\tactiveEditorPane: IVisibleEditorPane | undefined;\n\tactiveTextEditorLanguageId: string | undefined;\n\n\tprivate _activeEditor: EditorInput | undefined;\n\tpublic get activeEditor(): EditorInput | undefined { return this._activeEditor; }\n\tpublic set activeEditor(value: EditorInput | undefined) { this._activeEditor = value; }\n\n\teditors: readonly EditorInput[] = [];\n\tmostRecentlyActiveEditors: readonly IEditorIdentifier[] = [];\n\tvisibleEditorPanes: readonly IVisibleEditorPane[] = [];\n\tvisibleTextEditorControls = [];\n\tvisibleEditors: readonly EditorInput[] = [];\n\tcount = this.editors.length;\n\n\tconstructor(private editorGroupService?: IEditorGroupsService) {\n\t\tsuper();\n\t}\n\tcreateScoped(editorGroupsContainer: IEditorGroupsContainer): IEditorService { return this; }\n\tgetEditors() { return []; }\n\tfindEditors() { return [] as any; }\n\topenEditor(editor: EditorInput, options?: IEditorOptions, group?: PreferredGroup): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceEditorInput | IUntitledTextResourceEditorInput, group?: PreferredGroup): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceDiffEditorInput, group?: PreferredGroup): Promise<ITextDiffEditorPane | undefined>;\n\tasync openEditor(editor: EditorInput | IUntypedEditorInput, optionsOrGroup?: IEditorOptions | PreferredGroup, group?: PreferredGroup): Promise<IEditorPane | undefined> {\n\t\t// openEditor takes ownership of the input, register it to the TestEditorService\n\t\t// so it's not marked as leaked during tests.\n\t\tif ('dispose' in editor) {\n\t\t\tthis._register(editor);\n\t\t}\n\t\treturn undefined;\n\t}\n\tasync closeEditor(editor: IEditorIdentifier, options?: ICloseEditorOptions): Promise<void> { }\n\tasync closeEditors(editors: IEditorIdentifier[], options?: ICloseEditorOptions): Promise<void> { }\n\tdoResolveEditorOpenRequest(editor: EditorInput | IUntypedEditorInput): [IEditorGroup, EditorInput, IEditorOptions | undefined] | undefined {\n\t\tif (!this.editorGroupService) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn [this.editorGroupService.activeGroup, editor as EditorInput, undefined];\n\t}\n\topenEditors(_editors: any, _group?: any): Promise<IEditorPane[]> { throw new Error('not implemented'); }\n\tisOpened(_editor: IResourceEditorInputIdentifier): boolean { return false; }\n\tisVisible(_editor: EditorInput): boolean { return false; }\n\treplaceEditors(_editors: any, _group: any) { return Promise.resolve(undefined); }\n\tsave(editors: IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<ISaveEditorsResult> { throw new Error('Method not implemented.'); }\n\tsaveAll(options?: ISaveEditorsOptions): Promise<ISaveEditorsResult> { throw new Error('Method not implemented.'); }\n\trevert(editors: IEditorIdentifier[], options?: IRevertOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n\trevertAll(options?: IRevertAllEditorsOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestFileService implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidFilesChange = new Emitter<FileChangesEvent>();\n\tget onDidFilesChange(): Event<FileChangesEvent> { return this._onDidFilesChange.event; }\n\tfireFileChanges(event: FileChangesEvent): void { this._onDidFilesChange.fire(event); }\n\n\tprivate readonly _onDidRunOperation = new Emitter<FileOperationEvent>();\n\tget onDidRunOperation(): Event<FileOperationEvent> { return this._onDidRunOperation.event; }\n\tfireAfterOperation(event: FileOperationEvent): void { this._onDidRunOperation.fire(event); }\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = new Emitter<IFileSystemProviderCapabilitiesChangeEvent>();\n\tget onDidChangeFileSystemProviderCapabilities(): Event<IFileSystemProviderCapabilitiesChangeEvent> { return this._onDidChangeFileSystemProviderCapabilities.event; }\n\tfireFileSystemProviderCapabilitiesChangeEvent(event: IFileSystemProviderCapabilitiesChangeEvent): void { this._onDidChangeFileSystemProviderCapabilities.fire(event); }\n\n\tprivate _onWillActivateFileSystemProvider = new Emitter<IFileSystemProviderActivationEvent>();\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\treadonly onDidWatchError = Event.None;\n\n\tprivate content = 'Hello Html';\n\tprivate lastReadFileUri!: URI;\n\n\treadonly = false;\n\n\tsetContent(content: string): void { this.content = content; }\n\tgetContent(): string { return this.content; }\n\tgetLastReadFileUri(): URI { return this.lastReadFileUri; }\n\n\tresolve(resource: URI, _options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, _options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, _options?: IResolveFileOptions): Promise<IFileStat> {\n\t\treturn createFileStat(resource, this.readonly);\n\t}\n\n\tstat(resource: URI): Promise<IFileStatWithPartialMetadata> {\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions }[]): Promise<IFileStatResult[]> {\n\t\tconst stats = await Promise.all(toResolve.map(resourceAndOption => this.resolve(resourceAndOption.resource, resourceAndOption.options)));\n\n\t\treturn stats.map(stat => ({ stat, success: true }));\n\t}\n\n\treadonly notExistsSet = new ResourceMap<boolean>();\n\n\tasync exists(_resource: URI): Promise<boolean> { return !this.notExistsSet.has(_resource); }\n\n\treadShouldThrowError: Error | undefined = undefined;\n\n\tasync readFile(resource: URI, options?: IReadFileOptions | undefined): Promise<IFileContent> {\n\t\tif (this.readShouldThrowError) {\n\t\t\tthrow this.readShouldThrowError;\n\t\t}\n\n\t\tthis.lastReadFileUri = resource;\n\n\t\treturn {\n\t\t\t...createFileStat(resource, this.readonly),\n\t\t\tvalue: VSBuffer.fromString(this.content)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileStreamOptions | undefined): Promise<IFileStreamContent> {\n\t\tif (this.readShouldThrowError) {\n\t\t\tthrow this.readShouldThrowError;\n\t\t}\n\n\t\tthis.lastReadFileUri = resource;\n\n\t\treturn {\n\t\t\t...createFileStat(resource, this.readonly),\n\t\t\tvalue: bufferToStream(VSBuffer.fromString(this.content))\n\t\t};\n\t}\n\n\twriteShouldThrowError: Error | undefined = undefined;\n\n\tasync writeFile(resource: URI, bufferOrReadable: VSBuffer | VSBufferReadable, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tawait timeout(0);\n\n\t\tif (this.writeShouldThrowError) {\n\t\t\tthrow this.writeShouldThrowError;\n\t\t}\n\n\t\treturn createFileStat(resource, this.readonly);\n\t}\n\n\tmove(_source: URI, _target: URI, _overwrite?: boolean): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\tcopy(_source: URI, _target: URI, _overwrite?: boolean): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\tasync cloneFile(_source: URI, _target: URI): Promise<void> { }\n\tcreateFile(_resource: URI, _content?: VSBuffer | VSBufferReadable, _options?: ICreateFileOptions): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\tcreateFolder(_resource: URI): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\n\tonDidChangeFileSystemProviderRegistrations = Event.None;\n\n\tprivate providers = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider) {\n\t\tthis.providers.set(scheme, provider);\n\n\t\treturn toDisposable(() => this.providers.delete(scheme));\n\t}\n\n\tgetProvider(scheme: string) {\n\t\treturn this.providers.get(scheme);\n\t}\n\n\tasync activateProvider(_scheme: string): Promise<void> {\n\t\tthis._onWillActivateFileSystemProvider.fire({ scheme: _scheme, join: () => { } });\n\t}\n\tasync canHandleResource(resource: URI): Promise<boolean> { return this.hasProvider(resource); }\n\thasProvider(resource: URI): boolean { return resource.scheme === Schemas.file || this.providers.has(resource.scheme); }\n\tlistCapabilities() {\n\t\treturn [\n\t\t\t{ scheme: Schemas.file, capabilities: FileSystemProviderCapabilities.FileOpenReadWriteClose },\n\t\t\t...Iterable.map(this.providers, ([scheme, p]) => { return { scheme, capabilities: p.capabilities }; })\n\t\t];\n\t}\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tif (capability === FileSystemProviderCapabilities.PathCaseSensitive && isLinux) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst provider = this.getProvider(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tasync del(_resource: URI, _options?: { useTrash?: boolean; recursive?: boolean }): Promise<void> { }\n\n\tcreateWatcher(resource: URI, options: IWatchOptions): IFileSystemWatcher {\n\t\treturn {\n\t\t\tonDidChange: Event.None,\n\t\t\tdispose: () => { }\n\t\t};\n\t}\n\n\n\treadonly watches: URI[] = [];\n\twatch(_resource: URI, options: IWatchOptionsWithCorrelation): IFileSystemWatcher;\n\twatch(_resource: URI): IDisposable;\n\twatch(_resource: URI): IDisposable {\n\t\tthis.watches.push(_resource);\n\n\t\treturn toDisposable(() => this.watches.splice(this.watches.indexOf(_resource), 1));\n\t}\n\n\tgetWriteEncoding(_resource: URI): IResourceEncoding { return { encoding: 'utf8', hasBOM: false }; }\n\tdispose(): void { }\n\n\tasync canCreateFile(source: URI, options?: ICreateFileOptions): Promise<Error | true> { return true; }\n\tasync canMove(source: URI, target: URI, overwrite?: boolean | undefined): Promise<Error | true> { return true; }\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean | undefined): Promise<Error | true> { return true; }\n\tasync canDelete(resource: URI, options?: { useTrash?: boolean | undefined; recursive?: boolean | undefined } | undefined): Promise<Error | true> { return true; }\n}\n\nexport class TestWorkingCopyBackupService extends InMemoryWorkingCopyBackupService {\n\n\treadonly resolved: Set<IWorkingCopyIdentifier> = new Set();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tparseBackupContent(textBufferFactory: ITextBufferFactory): string {\n\t\tconst textBuffer = textBufferFactory.create(DefaultEndOfLine.LF).textBuffer;\n\t\tconst lineCount = textBuffer.getLineCount();\n\t\tconst range = new Range(1, 1, lineCount, textBuffer.getLineLength(lineCount) + 1);\n\n\t\treturn textBuffer.getValueInRange(range, EndOfLinePreference.TextDefined);\n\t}\n\n\toverride async resolve<T extends IWorkingCopyBackupMeta>(identifier: IWorkingCopyIdentifier): Promise<IResolvedWorkingCopyBackup<T> | undefined> {\n\t\tthis.resolved.add(identifier);\n\n\t\treturn super.resolve(identifier);\n\t}\n}\n\nexport function toUntypedWorkingCopyId(resource: URI): IWorkingCopyIdentifier {\n\treturn toTypedWorkingCopyId(resource, '');\n}\n\nexport function toTypedWorkingCopyId(resource: URI, typeId = 'testBackupTypeId'): IWorkingCopyIdentifier {\n\treturn { typeId, resource };\n}\n\nexport class InMemoryTestWorkingCopyBackupService extends BrowserWorkingCopyBackupService {\n\n\tprivate backupResourceJoiners: Function[];\n\tprivate discardBackupJoiners: Function[];\n\n\tdiscardedBackups: IWorkingCopyIdentifier[];\n\n\tconstructor() {\n\t\tconst disposables = new DisposableStore();\n\t\tconst environmentService = TestEnvironmentService;\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = disposables.add(new FileService(logService));\n\t\tdisposables.add(fileService.registerProvider(Schemas.file, disposables.add(new InMemoryFileSystemProvider())));\n\t\tdisposables.add(fileService.registerProvider(Schemas.vscodeUserData, disposables.add(new InMemoryFileSystemProvider())));\n\n\t\tsuper(new TestContextService(TestWorkspace), environmentService, fileService, logService);\n\n\t\tthis.backupResourceJoiners = [];\n\t\tthis.discardBackupJoiners = [];\n\t\tthis.discardedBackups = [];\n\n\t\tthis._register(disposables);\n\t}\n\n\ttestGetFileService(): IFileService {\n\t\treturn this.fileService;\n\t}\n\n\tjoinBackupResource(): Promise<void> {\n\t\treturn new Promise(resolve => this.backupResourceJoiners.push(resolve));\n\t}\n\n\tjoinDiscardBackup(): Promise<void> {\n\t\treturn new Promise(resolve => this.discardBackupJoiners.push(resolve));\n\t}\n\n\toverride async backup(identifier: IWorkingCopyIdentifier, content?: VSBufferReadableStream | VSBufferReadable, versionId?: number, meta?: any, token?: CancellationToken): Promise<void> {\n\t\tawait super.backup(identifier, content, versionId, meta, token);\n\n\t\twhile (this.backupResourceJoiners.length) {\n\t\t\tthis.backupResourceJoiners.pop()!();\n\t\t}\n\t}\n\n\toverride async discardBackup(identifier: IWorkingCopyIdentifier): Promise<void> {\n\t\tawait super.discardBackup(identifier);\n\t\tthis.discardedBackups.push(identifier);\n\n\t\twhile (this.discardBackupJoiners.length) {\n\t\t\tthis.discardBackupJoiners.pop()!();\n\t\t}\n\t}\n\n\tasync getBackupContents(identifier: IWorkingCopyIdentifier): Promise<string> {\n\t\tconst backupResource = this.toBackupResource(identifier);\n\n\t\tconst fileContents = await this.fileService.readFile(backupResource);\n\n\t\treturn fileContents.value.toString();\n\t}\n}\n\nexport class TestLifecycleService extends Disposable implements ILifecycleService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tusePhases = false;\n\t_phase!: LifecyclePhase;\n\tget phase(): LifecyclePhase { return this._phase; }\n\tset phase(value: LifecyclePhase) {\n\t\tthis._phase = value;\n\t\tif (value === LifecyclePhase.Starting) {\n\t\t\tthis.whenStarted.complete();\n\t\t} else if (value === LifecyclePhase.Ready) {\n\t\t\tthis.whenReady.complete();\n\t\t} else if (value === LifecyclePhase.Restored) {\n\t\t\tthis.whenRestored.complete();\n\t\t} else if (value === LifecyclePhase.Eventually) {\n\t\t\tthis.whenEventually.complete();\n\t\t}\n\t}\n\n\tprivate readonly whenStarted = new DeferredPromise<void>();\n\tprivate readonly whenReady = new DeferredPromise<void>();\n\tprivate readonly whenRestored = new DeferredPromise<void>();\n\tprivate readonly whenEventually = new DeferredPromise<void>();\n\tasync when(phase: LifecyclePhase): Promise<void> {\n\t\tif (!this.usePhases) {\n\t\t\treturn;\n\t\t}\n\t\tif (phase === LifecyclePhase.Starting) {\n\t\t\tawait this.whenStarted.p;\n\t\t} else if (phase === LifecyclePhase.Ready) {\n\t\t\tawait this.whenReady.p;\n\t\t} else if (phase === LifecyclePhase.Restored) {\n\t\t\tawait this.whenRestored.p;\n\t\t} else if (phase === LifecyclePhase.Eventually) {\n\t\t\tawait this.whenEventually.p;\n\t\t}\n\t}\n\n\tstartupKind!: StartupKind;\n\n\tprivate readonly _onBeforeShutdown = this._register(new Emitter<InternalBeforeShutdownEvent>());\n\tget onBeforeShutdown(): Event<InternalBeforeShutdownEvent> { return this._onBeforeShutdown.event; }\n\n\tprivate readonly _onBeforeShutdownError = this._register(new Emitter<BeforeShutdownErrorEvent>());\n\tget onBeforeShutdownError(): Event<BeforeShutdownErrorEvent> { return this._onBeforeShutdownError.event; }\n\n\tprivate readonly _onShutdownVeto = this._register(new Emitter<void>());\n\tget onShutdownVeto(): Event<void> { return this._onShutdownVeto.event; }\n\n\tprivate readonly _onWillShutdown = this._register(new Emitter<WillShutdownEvent>());\n\tget onWillShutdown(): Event<WillShutdownEvent> { return this._onWillShutdown.event; }\n\n\tprivate readonly _onDidShutdown = this._register(new Emitter<void>());\n\tget onDidShutdown(): Event<void> { return this._onDidShutdown.event; }\n\n\tshutdownJoiners: Promise<void>[] = [];\n\n\tfireShutdown(reason = ShutdownReason.QUIT): void {\n\t\tthis.shutdownJoiners = [];\n\n\t\tthis._onWillShutdown.fire({\n\t\t\tjoin: p => {\n\t\t\t\tthis.shutdownJoiners.push(typeof p === 'function' ? p() : p);\n\t\t\t},\n\t\t\tjoiners: () => [],\n\t\t\tforce: () => { /* No-Op in tests */ },\n\t\t\ttoken: CancellationToken.None,\n\t\t\treason\n\t\t});\n\t}\n\n\tfireBeforeShutdown(event: InternalBeforeShutdownEvent): void { this._onBeforeShutdown.fire(event); }\n\n\tfireWillShutdown(event: WillShutdownEvent): void { this._onWillShutdown.fire(event); }\n\n\tasync shutdown(): Promise<void> {\n\t\tthis.fireShutdown();\n\t}\n}\n\nexport class TestBeforeShutdownEvent implements InternalBeforeShutdownEvent {\n\n\tvalue: boolean | Promise<boolean> | undefined;\n\tfinalValue: (() => boolean | Promise<boolean>) | undefined;\n\treason = ShutdownReason.CLOSE;\n\n\tveto(value: boolean | Promise<boolean>): void {\n\t\tthis.value = value;\n\t}\n\n\tfinalVeto(vetoFn: () => boolean | Promise<boolean>): void {\n\t\tthis.value = vetoFn();\n\t\tthis.finalValue = vetoFn;\n\t}\n}\n\nexport class TestWillShutdownEvent implements WillShutdownEvent {\n\n\tvalue: Promise<void>[] = [];\n\tjoiners = () => [];\n\treason = ShutdownReason.CLOSE;\n\ttoken = CancellationToken.None;\n\n\tjoin(promise: Promise<void> | (() => Promise<void>), joiner: IWillShutdownEventJoiner): void {\n\t\tthis.value.push(typeof promise === 'function' ? promise() : promise);\n\t}\n\n\tforce() { /* No-Op in tests */ }\n}\n\nexport class TestTextResourceConfigurationService implements ITextResourceConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private configurationService = new TestConfigurationService()) { }\n\n\tonDidChangeConfiguration() {\n\t\treturn { dispose() { } };\n\t}\n\n\tgetValue<T>(resource: URI, arg2?: any, arg3?: any): T {\n\t\tconst position: IPosition | null = EditorPosition.isIPosition(arg2) ? arg2 : null;\n\t\tconst section: string | undefined = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n\t\treturn this.configurationService.getValue(section, { resource });\n\t}\n\n\tinspect<T>(resource: URI | undefined, position: IPosition | null, section: string): IConfigurationValue<Readonly<T>> {\n\t\treturn this.configurationService.inspect<T>(section, { resource });\n\t}\n\n\tupdateValue(resource: URI, key: string, value: any, configurationTarget?: ConfigurationTarget): Promise<void> {\n\t\treturn this.configurationService.updateValue(key, value);\n\t}\n}\n\nexport class RemoteFileSystemProvider implements IFileSystemProvider {\n\n\tconstructor(private readonly wrappedFsp: IFileSystemProvider, private readonly remoteAuthority: string) { }\n\n\treadonly capabilities: FileSystemProviderCapabilities = this.wrappedFsp.capabilities;\n\treadonly onDidChangeCapabilities: Event<void> = this.wrappedFsp.onDidChangeCapabilities;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> = Event.map(this.wrappedFsp.onDidChangeFile, changes => changes.map(c => {\n\t\treturn {\n\t\t\ttype: c.type,\n\t\t\tresource: c.resource.with({ scheme: Schemas.vscodeRemote, authority: this.remoteAuthority }),\n\t\t};\n\t}));\n\twatch(resource: URI, opts: IWatchOptions): IDisposable { return this.wrappedFsp.watch(this.toFileResource(resource), opts); }\n\n\tstat(resource: URI): Promise<IStat> { return this.wrappedFsp.stat(this.toFileResource(resource)); }\n\tmkdir(resource: URI): Promise<void> { return this.wrappedFsp.mkdir(this.toFileResource(resource)); }\n\treaddir(resource: URI): Promise<[string, FileType][]> { return this.wrappedFsp.readdir(this.toFileResource(resource)); }\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void> { return this.wrappedFsp.delete(this.toFileResource(resource), opts); }\n\n\trename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> { return this.wrappedFsp.rename(this.toFileResource(from), this.toFileResource(to), opts); }\n\tcopy(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> { return this.wrappedFsp.copy!(this.toFileResource(from), this.toFileResource(to), opts); }\n\n\treadFile(resource: URI): Promise<Uint8Array> { return this.wrappedFsp.readFile!(this.toFileResource(resource)); }\n\twriteFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void> { return this.wrappedFsp.writeFile!(this.toFileResource(resource), content, opts); }\n\n\topen(resource: URI, opts: IFileOpenOptions): Promise<number> { return this.wrappedFsp.open!(this.toFileResource(resource), opts); }\n\tclose(fd: number): Promise<void> { return this.wrappedFsp.close!(fd); }\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> { return this.wrappedFsp.read!(fd, pos, data, offset, length); }\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> { return this.wrappedFsp.write!(fd, pos, data, offset, length); }\n\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> { return this.wrappedFsp.readFileStream!(this.toFileResource(resource), opts, token); }\n\n\tprivate toFileResource(resource: URI): URI { return resource.with({ scheme: Schemas.file, authority: '' }); }\n}\n\nexport class TestInMemoryFileSystemProvider extends InMemoryFileSystemProvider implements IFileSystemProviderWithFileReadStreamCapability {\n\toverride get capabilities(): FileSystemProviderCapabilities {\n\t\treturn FileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.PathCaseSensitive\n\t\t\t| FileSystemProviderCapabilities.FileReadStream;\n\t}\n\n\toverride readFileStream(resource: URI): ReadableStreamEvents<Uint8Array> {\n\t\tconst BUFFER_SIZE = 64 * 1024;\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await this.readFile(resource);\n\n\t\t\t\tlet offset = 0;\n\t\t\t\twhile (offset < data.length) {\n\t\t\t\t\tawait timeout(0);\n\t\t\t\t\tawait stream.write(data.subarray(offset, offset + BUFFER_SIZE));\n\t\t\t\t\toffset += BUFFER_SIZE;\n\t\t\t\t}\n\n\t\t\t\tawait timeout(0);\n\t\t\t\tstream.end();\n\t\t\t} catch (error) {\n\t\t\t\tstream.end(error);\n\t\t\t}\n\t\t})();\n\n\t\treturn stream;\n\t}\n}\n\nexport const productService: IProductService = { _serviceBrand: undefined, ...product };\n\nexport class TestHostService implements IHostService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _hasFocus = true;\n\tget hasFocus() { return this._hasFocus; }\n\tasync hadLastFocus(): Promise<boolean> { return this._hasFocus; }\n\n\tprivate _onDidChangeFocus = new Emitter<boolean>();\n\treadonly onDidChangeFocus = this._onDidChangeFocus.event;\n\n\tprivate _onDidChangeWindow = new Emitter<number>();\n\treadonly onDidChangeActiveWindow = this._onDidChangeWindow.event;\n\n\treadonly onDidChangeFullScreen: Event<{ windowId: number; fullscreen: boolean }> = Event.None;\n\n\tsetFocus(focus: boolean) {\n\t\tthis._hasFocus = focus;\n\t\tthis._onDidChangeFocus.fire(this._hasFocus);\n\t}\n\n\tasync restart(): Promise<void> { }\n\tasync reload(): Promise<void> { }\n\tasync close(): Promise<void> { }\n\tasync withExpectedShutdown<T>(expectedShutdownTask: () => Promise<T>): Promise<T> {\n\t\treturn await expectedShutdownTask();\n\t}\n\n\tasync focus(): Promise<void> { }\n\tasync moveTop(): Promise<void> { }\n\tasync getCursorScreenPoint(): Promise<undefined> { return undefined; }\n\n\tasync openWindow(arg1?: IOpenEmptyWindowOptions | IWindowOpenable[], arg2?: IOpenWindowOptions): Promise<void> { }\n\n\tasync toggleFullScreen(): Promise<void> { }\n\n\treadonly colorScheme = ColorScheme.DARK;\n\tonDidChangeColorScheme = Event.None;\n\n\tgetPathForFile(file: File): string | undefined {\n\t\treturn undefined;\n\t}\n}\n\nexport class TestFilesConfigurationService extends FilesConfigurationService {\n\n\ttestOnFilesConfigurationChange(configuration: any): void {\n\t\tsuper.onFilesConfigurationChange(configuration, true);\n\t}\n}\n\nexport class TestReadonlyTextFileEditorModel extends TextFileEditorModel {\n\n\toverride isReadonly(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport class TestEditorInput extends EditorInput {\n\n\tconstructor(public resource: URI, private readonly _typeId: string) {\n\t\tsuper();\n\t}\n\n\toverride get typeId(): string {\n\t\treturn this._typeId;\n\t}\n\n\toverride get editorId(): string {\n\t\treturn this._typeId;\n\t}\n\n\toverride resolve(): Promise<IDisposable | null> {\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport function registerTestEditor(id: string, inputs: SyncDescriptor<EditorInput>[], serializerInputId?: string): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tclass TestEditor extends EditorPane {\n\n\t\tprivate _scopedContextKeyService: IContextKeyService;\n\n\t\tconstructor(group: IEditorGroup) {\n\t\t\tsuper(id, group, NullTelemetryService, new TestThemeService(), disposables.add(new TestStorageService()));\n\t\t\tthis._scopedContextKeyService = new MockContextKeyService();\n\t\t}\n\n\t\toverride async setInput(input: EditorInput, options: IEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\t\tsuper.setInput(input, options, context, token);\n\n\t\t\tawait input.resolve();\n\t\t}\n\n\t\toverride getId(): string { return id; }\n\t\tlayout(): void { }\n\t\tprotected createEditor(): void { }\n\n\t\toverride get scopedContextKeyService() {\n\t\t\treturn this._scopedContextKeyService;\n\t\t}\n\t}\n\n\tdisposables.add(Registry.as<IEditorPaneRegistry>(Extensions.EditorPane).registerEditorPane(EditorPaneDescriptor.create(TestEditor, id, 'Test Editor Control'), inputs));\n\n\tif (serializerInputId) {\n\n\t\tinterface ISerializedTestInput {\n\t\t\tresource: string;\n\t\t}\n\n\t\tclass EditorsObserverTestEditorInputSerializer implements IEditorSerializer {\n\n\t\t\tcanSerialize(editorInput: EditorInput): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tserialize(editorInput: EditorInput): string {\n\t\t\t\tconst testEditorInput = <TestFileEditorInput>editorInput;\n\t\t\t\tconst testInput: ISerializedTestInput = {\n\t\t\t\t\tresource: testEditorInput.resource.toString()\n\t\t\t\t};\n\n\t\t\t\treturn JSON.stringify(testInput);\n\t\t\t}\n\n\t\t\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput {\n\t\t\t\tconst testInput: ISerializedTestInput = JSON.parse(serializedEditorInput);\n\n\t\t\t\treturn new TestFileEditorInput(URI.parse(testInput.resource), serializerInputId!);\n\t\t\t}\n\t\t}\n\n\t\tdisposables.add(Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(serializerInputId, EditorsObserverTestEditorInputSerializer));\n\t}\n\n\treturn disposables;\n}\n\nexport function registerTestFileEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorPaneRegistry>(Extensions.EditorPane).registerEditorPane(\n\t\tEditorPaneDescriptor.create(\n\t\t\tTestTextFileEditor,\n\t\t\tTestTextFileEditor.ID,\n\t\t\t'Text File Editor'\n\t\t),\n\t\t[new SyncDescriptor(FileEditorInput)]\n\t));\n\n\treturn disposables;\n}\n\nexport function registerTestResourceEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorPaneRegistry>(Extensions.EditorPane).registerEditorPane(\n\t\tEditorPaneDescriptor.create(\n\t\t\tTestTextResourceEditor,\n\t\t\tTestTextResourceEditor.ID,\n\t\t\t'Text Editor'\n\t\t),\n\t\t[\n\t\t\tnew SyncDescriptor(UntitledTextEditorInput),\n\t\t\tnew SyncDescriptor(TextResourceEditorInput)\n\t\t]\n\t));\n\n\treturn disposables;\n}\n\nexport function registerTestSideBySideEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorPaneRegistry>(Extensions.EditorPane).registerEditorPane(\n\t\tEditorPaneDescriptor.create(\n\t\t\tSideBySideEditor,\n\t\t\tSideBySideEditor.ID,\n\t\t\t'Text Editor'\n\t\t),\n\t\t[\n\t\t\tnew SyncDescriptor(SideBySideEditorInput)\n\t\t]\n\t));\n\n\treturn disposables;\n}\n\nexport class TestFileEditorInput extends EditorInput implements IFileEditorInput {\n\n\treadonly preferredResource = this.resource;\n\n\tgotDisposed = false;\n\tgotSaved = false;\n\tgotSavedAs = false;\n\tgotReverted = false;\n\tdirty = false;\n\tmodified: boolean | undefined;\n\tprivate fails = false;\n\n\tdisableToUntyped = false;\n\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate _typeId: string\n\t) {\n\t\tsuper();\n\t}\n\n\toverride get typeId() { return this._typeId; }\n\toverride get editorId() { return this._typeId; }\n\n\tprivate _capabilities: EditorInputCapabilities = EditorInputCapabilities.None;\n\toverride get capabilities(): EditorInputCapabilities { return this._capabilities; }\n\toverride set capabilities(capabilities: EditorInputCapabilities) {\n\t\tif (this._capabilities !== capabilities) {\n\t\t\tthis._capabilities = capabilities;\n\t\t\tthis._onDidChangeCapabilities.fire();\n\t\t}\n\t}\n\n\toverride resolve(): Promise<IDisposable | null> { return !this.fails ? Promise.resolve(null) : Promise.reject(new Error('fails')); }\n\toverride matches(other: EditorInput | IResourceEditorInput | ITextResourceEditorInput | IUntitledTextResourceEditorInput): boolean {\n\t\tif (super.matches(other)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other instanceof EditorInput) {\n\t\t\treturn !!(other?.resource && this.resource.toString() === other.resource.toString() && other instanceof TestFileEditorInput && other.typeId === this.typeId);\n\t\t}\n\t\treturn isEqual(this.resource, other.resource) && (this.editorId === other.options?.override || other.options?.override === undefined);\n\t}\n\tsetPreferredResource(resource: URI): void { }\n\tasync setEncoding(encoding: string) { }\n\tgetEncoding() { return undefined; }\n\tsetPreferredName(name: string): void { }\n\tsetPreferredDescription(description: string): void { }\n\tsetPreferredEncoding(encoding: string) { }\n\tsetPreferredContents(contents: string): void { }\n\tsetLanguageId(languageId: string, source?: string) { }\n\tsetPreferredLanguageId(languageId: string) { }\n\tsetForceOpenAsBinary(): void { }\n\tsetFailToOpen(): void {\n\t\tthis.fails = true;\n\t}\n\toverride async save(groupId: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | undefined> {\n\t\tthis.gotSaved = true;\n\t\tthis.dirty = false;\n\t\treturn this;\n\t}\n\toverride async saveAs(groupId: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | undefined> {\n\t\tthis.gotSavedAs = true;\n\t\treturn this;\n\t}\n\toverride async revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\tthis.gotReverted = true;\n\t\tthis.gotSaved = false;\n\t\tthis.gotSavedAs = false;\n\t\tthis.dirty = false;\n\t}\n\toverride toUntyped(): IUntypedEditorInput | undefined {\n\t\tif (this.disableToUntyped) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn { resource: this.resource };\n\t}\n\tsetModified(): void { this.modified = true; }\n\toverride isModified(): boolean {\n\t\treturn this.modified === undefined ? this.dirty : this.modified;\n\t}\n\tsetDirty(): void { this.dirty = true; }\n\toverride isDirty(): boolean {\n\t\treturn this.dirty;\n\t}\n\tisResolved(): boolean { return false; }\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.gotDisposed = true;\n\t}\n\tmovedEditor: IMoveResult | undefined = undefined;\n\toverride async rename(): Promise<IMoveResult | undefined> { return this.movedEditor; }\n\n\tprivate moveDisabledReason: string | undefined = undefined;\n\tsetMoveDisabled(reason: string): void {\n\t\tthis.moveDisabledReason = reason;\n\t}\n\n\toverride canMove(sourceGroup: GroupIdentifier, targetGroup: GroupIdentifier): string | true {\n\t\tif (typeof this.moveDisabledReason === 'string') {\n\t\t\treturn this.moveDisabledReason;\n\t\t}\n\t\treturn super.canMove(sourceGroup, targetGroup);\n\t}\n}\n\nexport class TestSingletonFileEditorInput extends TestFileEditorInput {\n\n\toverride get capabilities(): EditorInputCapabilities { return EditorInputCapabilities.Singleton; }\n}\n\nexport class TestEditorPart extends MainEditorPart implements IEditorGroupsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly mainPart = this;\n\treadonly parts: readonly IEditorPart[] = [this];\n\n\treadonly onDidCreateAuxiliaryEditorPart: Event<IAuxiliaryEditorPart> = Event.None;\n\n\ttestSaveState(): void {\n\t\treturn super.saveState();\n\t}\n\n\tclearState(): void {\n\t\tconst workspaceMemento = this.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tfor (const key of Object.keys(workspaceMemento)) {\n\t\t\tdelete workspaceMemento[key];\n\t\t}\n\n\t\tconst profileMemento = this.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tfor (const key of Object.keys(profileMemento)) {\n\t\t\tdelete profileMemento[key];\n\t\t}\n\t}\n\n\tregisterEditorPart(part: IEditorPart): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tcreateAuxiliaryEditorPart(): Promise<IAuxiliaryEditorPart> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetScopedInstantiationService(part: IEditorPart): IInstantiationService {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetPart(group: number | IEditorGroup): IEditorPart { return this; }\n\n\tsaveWorkingSet(name: string): IEditorWorkingSet { throw new Error('Method not implemented.'); }\n\tgetWorkingSets(): IEditorWorkingSet[] { throw new Error('Method not implemented.'); }\n\tapplyWorkingSet(workingSet: IEditorWorkingSet | 'empty', options?: IEditorWorkingSetOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n\tdeleteWorkingSet(workingSet: IEditorWorkingSet): Promise<boolean> { throw new Error('Method not implemented.'); }\n\n\tregisterContextKeyProvider<T extends ContextKeyValue>(provider: IEditorGroupContextKeyProvider<T>): IDisposable { throw new Error('Method not implemented.'); }\n}\n\nexport class TestEditorParts extends EditorParts {\n\ttestMainPart!: TestEditorPart;\n\n\tprotected override createMainEditorPart(): MainEditorPart {\n\t\tthis.testMainPart = this.instantiationService.createInstance(TestEditorPart, this);\n\n\t\treturn this.testMainPart;\n\t}\n}\n\nexport async function createEditorParts(instantiationService: IInstantiationService, disposables: DisposableStore): Promise<TestEditorParts> {\n\tconst parts = instantiationService.createInstance(TestEditorParts);\n\tconst part = disposables.add(parts).testMainPart;\n\tpart.create(document.createElement('div'));\n\tpart.layout(1080, 800, 0, 0);\n\n\tawait parts.whenReady;\n\n\treturn parts;\n}\n\nexport async function createEditorPart(instantiationService: IInstantiationService, disposables: DisposableStore): Promise<TestEditorPart> {\n\treturn (await createEditorParts(instantiationService, disposables)).testMainPart;\n}\n\nexport class TestListService implements IListService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tlastFocusedList: any | undefined = undefined;\n\n\tregister(): IDisposable {\n\t\treturn Disposable.None;\n\t}\n}\n\nexport class TestPathService implements IPathService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly fallbackUserHome: URI = URI.from({ scheme: Schemas.file, path: '/' }), public defaultUriScheme = Schemas.file) { }\n\n\thasValidBasename(resource: URI, basename?: string): Promise<boolean>;\n\thasValidBasename(resource: URI, os: OperatingSystem, basename?: string): boolean;\n\thasValidBasename(resource: URI, arg2?: string | OperatingSystem, name?: string): boolean | Promise<boolean> {\n\t\tif (typeof arg2 === 'string' || typeof arg2 === 'undefined') {\n\t\t\treturn isValidBasename(arg2 ?? basename(resource));\n\t\t}\n\n\t\treturn isValidBasename(name ?? basename(resource));\n\t}\n\n\tget path() { return Promise.resolve(isWindows ? win32 : posix); }\n\n\tuserHome(options?: { preferLocal: boolean }): Promise<URI>;\n\tuserHome(options: { preferLocal: true }): URI;\n\tuserHome(options?: { preferLocal: boolean }): Promise<URI> | URI {\n\t\treturn options?.preferLocal ? this.fallbackUserHome : Promise.resolve(this.fallbackUserHome);\n\t}\n\n\tget resolvedUserHome() { return this.fallbackUserHome; }\n\n\tasync fileURI(path: string): Promise<URI> {\n\t\treturn URI.file(path);\n\t}\n}\n\nexport interface ITestTextFileEditorModelManager extends ITextFileEditorModelManager, IDisposable {\n\tadd(resource: URI, model: TextFileEditorModel): void;\n\tremove(resource: URI): void;\n}\n\ninterface ITestTextFileEditorModel extends ITextFileEditorModel {\n\treadonly lastResolvedFileStat: IFileStatWithMetadata | undefined;\n}\n\nexport function getLastResolvedFileStat(model: unknown): IFileStatWithMetadata | undefined {\n\tconst candidate = model as ITestTextFileEditorModel | undefined;\n\n\treturn candidate?.lastResolvedFileStat;\n}\n\nexport class TestWorkspacesService implements IWorkspacesService {\n\t_serviceBrand: undefined;\n\n\tonDidChangeRecentlyOpened = Event.None;\n\n\tasync createUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier> { throw new Error('Method not implemented.'); }\n\tasync deleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void> { }\n\tasync addRecentlyOpened(recents: IRecent[]): Promise<void> { }\n\tasync removeRecentlyOpened(workspaces: URI[]): Promise<void> { }\n\tasync clearRecentlyOpened(): Promise<void> { }\n\tasync getRecentlyOpened(): Promise<IRecentlyOpened> { return { files: [], workspaces: [] }; }\n\tasync getDirtyWorkspaces(): Promise<(IFolderBackupInfo | IWorkspaceBackupInfo)[]> { return []; }\n\tasync enterWorkspace(path: URI): Promise<IEnterWorkspaceResult | undefined> { throw new Error('Method not implemented.'); }\n\tasync getWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalInstanceService implements ITerminalInstanceService {\n\tonDidCreateInstance = Event.None;\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconvertProfileToShellLaunchConfig(shellLaunchConfigOrProfile?: IShellLaunchConfig | ITerminalProfile, cwd?: string | URI): IShellLaunchConfig { throw new Error('Method not implemented.'); }\n\tpreparePathForTerminalAsync(path: string, executable: string | undefined, title: string, shellType: TerminalShellType, remoteAuthority: string | undefined): Promise<string> { throw new Error('Method not implemented.'); }\n\tcreateInstance(options: ICreateTerminalOptions, target: TerminalLocation): ITerminalInstance { throw new Error('Method not implemented.'); }\n\tasync getBackend(remoteAuthority?: string): Promise<ITerminalBackend | undefined> { throw new Error('Method not implemented.'); }\n\tdidRegisterBackend(remoteAuthority?: string): void { throw new Error('Method not implemented.'); }\n\tgetRegisteredBackends(): IterableIterator<ITerminalBackend> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalEditorService implements ITerminalEditorService {\n\t_serviceBrand: undefined;\n\tactiveInstance: ITerminalInstance | undefined;\n\tinstances: readonly ITerminalInstance[] = [];\n\tonDidDisposeInstance = Event.None;\n\tonDidFocusInstance = Event.None;\n\tonDidChangeInstanceCapability = Event.None;\n\tonDidChangeActiveInstance = Event.None;\n\tonDidChangeInstances = Event.None;\n\topenEditor(instance: ITerminalInstance, editorOptions?: TerminalEditorLocation): Promise<void> { throw new Error('Method not implemented.'); }\n\tdetachInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tsplitInstance(instanceToSplit: ITerminalInstance, shellLaunchConfig?: IShellLaunchConfig): ITerminalInstance { throw new Error('Method not implemented.'); }\n\trevealActiveEditor(preserveFocus?: boolean): Promise<void> { throw new Error('Method not implemented.'); }\n\tresolveResource(instance: ITerminalInstance): URI { throw new Error('Method not implemented.'); }\n\treviveInput(deserializedInput: IDeserializedTerminalEditorInput): TerminalEditorInput { throw new Error('Method not implemented.'); }\n\tgetInputFromResource(resource: URI): TerminalEditorInput { throw new Error('Method not implemented.'); }\n\tsetActiveInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tfocusActiveInstance(): Promise<void> { throw new Error('Method not implemented.'); }\n\tfocusInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tgetInstanceFromResource(resource: URI | undefined): ITerminalInstance | undefined { throw new Error('Method not implemented.'); }\n\tfocusFindWidget(): void { throw new Error('Method not implemented.'); }\n\thideFindWidget(): void { throw new Error('Method not implemented.'); }\n\tfindNext(): void { throw new Error('Method not implemented.'); }\n\tfindPrevious(): void { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalGroupService implements ITerminalGroupService {\n\t_serviceBrand: undefined;\n\tactiveInstance: ITerminalInstance | undefined;\n\tinstances: readonly ITerminalInstance[] = [];\n\tgroups: readonly ITerminalGroup[] = [];\n\tactiveGroup: ITerminalGroup | undefined;\n\tactiveGroupIndex: number = 0;\n\tlastAccessedMenu: 'inline-tab' | 'tab-list' = 'inline-tab';\n\tonDidChangeActiveGroup = Event.None;\n\tonDidDisposeGroup = Event.None;\n\tonDidShow = Event.None;\n\tonDidChangeGroups = Event.None;\n\tonDidChangePanelOrientation = Event.None;\n\tonDidDisposeInstance = Event.None;\n\tonDidFocusInstance = Event.None;\n\tonDidChangeInstanceCapability = Event.None;\n\tonDidChangeActiveInstance = Event.None;\n\tonDidChangeInstances = Event.None;\n\tcreateGroup(instance?: any): ITerminalGroup { throw new Error('Method not implemented.'); }\n\tgetGroupForInstance(instance: ITerminalInstance): ITerminalGroup | undefined { throw new Error('Method not implemented.'); }\n\tmoveGroup(source: ITerminalInstance | ITerminalInstance[], target: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tmoveGroupToEnd(source: ITerminalInstance | ITerminalInstance[]): void { throw new Error('Method not implemented.'); }\n\tmoveInstance(source: ITerminalInstance, target: ITerminalInstance, side: 'before' | 'after'): void { throw new Error('Method not implemented.'); }\n\tunsplitInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tjoinInstances(instances: ITerminalInstance[]): void { throw new Error('Method not implemented.'); }\n\tinstanceIsSplit(instance: ITerminalInstance): boolean { throw new Error('Method not implemented.'); }\n\tgetGroupLabels(): string[] { throw new Error('Method not implemented.'); }\n\tsetActiveGroupByIndex(index: number): void { throw new Error('Method not implemented.'); }\n\tsetActiveGroupToNext(): void { throw new Error('Method not implemented.'); }\n\tsetActiveGroupToPrevious(): void { throw new Error('Method not implemented.'); }\n\tsetActiveInstanceByIndex(terminalIndex: number): void { throw new Error('Method not implemented.'); }\n\tsetContainer(container: HTMLElement): void { throw new Error('Method not implemented.'); }\n\tshowPanel(focus?: boolean): Promise<void> { throw new Error('Method not implemented.'); }\n\thidePanel(): void { throw new Error('Method not implemented.'); }\n\tfocusTabs(): void { throw new Error('Method not implemented.'); }\n\tfocusHover(): void { throw new Error('Method not implemented.'); }\n\tsetActiveInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tfocusActiveInstance(): Promise<void> { throw new Error('Method not implemented.'); }\n\tfocusInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tgetInstanceFromResource(resource: URI | undefined): ITerminalInstance | undefined { throw new Error('Method not implemented.'); }\n\tfocusFindWidget(): void { throw new Error('Method not implemented.'); }\n\thideFindWidget(): void { throw new Error('Method not implemented.'); }\n\tfindNext(): void { throw new Error('Method not implemented.'); }\n\tfindPrevious(): void { throw new Error('Method not implemented.'); }\n\tupdateVisibility(): void { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalProfileService implements ITerminalProfileService {\n\t_serviceBrand: undefined;\n\tavailableProfiles: ITerminalProfile[] = [];\n\tcontributedProfiles: IExtensionTerminalProfile[] = [];\n\tprofilesReady: Promise<void> = Promise.resolve();\n\tonDidChangeAvailableProfiles = Event.None;\n\tgetPlatformKey(): Promise<string> { throw new Error('Method not implemented.'); }\n\trefreshAvailableProfiles(): void { throw new Error('Method not implemented.'); }\n\tgetDefaultProfileName(): string | undefined { throw new Error('Method not implemented.'); }\n\tgetDefaultProfile(): ITerminalProfile | undefined { throw new Error('Method not implemented.'); }\n\tgetContributedDefaultProfile(shellLaunchConfig: IShellLaunchConfig): Promise<IExtensionTerminalProfile | undefined> { throw new Error('Method not implemented.'); }\n\tregisterContributedProfile(args: IRegisterContributedProfileArgs): Promise<void> { throw new Error('Method not implemented.'); }\n\tgetContributedProfileProvider(extensionIdentifier: string, id: string): ITerminalProfileProvider | undefined { throw new Error('Method not implemented.'); }\n\tregisterTerminalProfileProvider(extensionIdentifier: string, id: string, profileProvider: ITerminalProfileProvider): IDisposable { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalProfileResolverService implements ITerminalProfileResolverService {\n\t_serviceBrand: undefined;\n\tdefaultProfileName = '';\n\tresolveIcon(shellLaunchConfig: IShellLaunchConfig): void { }\n\tasync resolveShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig, options: IShellLaunchConfigResolveOptions): Promise<void> { }\n\tasync getDefaultProfile(options: IShellLaunchConfigResolveOptions): Promise<ITerminalProfile> { return { path: '/default', profileName: 'Default', isDefault: true }; }\n\tasync getDefaultShell(options: IShellLaunchConfigResolveOptions): Promise<string> { return '/default'; }\n\tasync getDefaultShellArgs(options: IShellLaunchConfigResolveOptions): Promise<string | string[]> { return []; }\n\tgetDefaultIcon(): TerminalIcon & ThemeIcon { return Codicon.terminal; }\n\tasync getEnvironment(): Promise<IProcessEnvironment> { return env; }\n\tgetSafeConfigValue(key: string, os: OperatingSystem): unknown | undefined { return undefined; }\n\tgetSafeConfigValueFullKey(key: string): unknown | undefined { return undefined; }\n\tcreateProfileFromShellAndShellArgs(shell?: unknown, shellArgs?: unknown): Promise<string | ITerminalProfile> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalConfigurationService extends TerminalConfigurationService {\n\tget fontMetrics() { return this._fontMetrics; }\n\tsetConfig(config: Partial<ITerminalConfiguration>) { this._config = config as any; }\n}\n\nexport class TestQuickInputService implements IQuickInputService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onShow = Event.None;\n\treadonly onHide = Event.None;\n\n\treadonly currentQuickInput = undefined;\n\treadonly quickAccess = undefined!;\n\tbackButton!: IQuickInputButton;\n\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: true }, token?: CancellationToken): Promise<T[]>;\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: false }, token?: CancellationToken): Promise<T>;\n\tasync pick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: Omit<IPickOptions<T>, 'canPickMany'>, token?: CancellationToken): Promise<T | undefined> {\n\t\tif (Array.isArray(picks)) {\n\t\t\treturn <any>{ label: 'selectedPick', description: 'pick description', value: 'selectedPick' };\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tasync input(options?: IInputOptions, token?: CancellationToken): Promise<string> { return options ? 'resolved' + options.prompt : 'resolved'; }\n\n\tcreateQuickPick<T extends IQuickPickItem>(): IQuickPick<T, { useSeparators: boolean }> { throw new Error('not implemented.'); }\n\tcreateInputBox(): IInputBox { throw new Error('not implemented.'); }\n\tcreateQuickWidget(): IQuickWidget { throw new Error('Method not implemented.'); }\n\tfocus(): void { throw new Error('not implemented.'); }\n\ttoggle(): void { throw new Error('not implemented.'); }\n\tnavigate(next: boolean, quickNavigate?: IQuickNavigateConfiguration): void { throw new Error('not implemented.'); }\n\taccept(): Promise<void> { throw new Error('not implemented.'); }\n\tback(): Promise<void> { throw new Error('not implemented.'); }\n\tcancel(): Promise<void> { throw new Error('not implemented.'); }\n}\n\nclass TestLanguageDetectionService implements ILanguageDetectionService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tisEnabledForLanguage(languageId: string): boolean { return false; }\n\tasync detectLanguage(resource: URI, supportedLangs?: string[] | undefined): Promise<string | undefined> { return undefined; }\n}\n\nexport class TestRemoteAgentService implements IRemoteAgentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tgetConnection(): IRemoteAgentConnection | null { return null; }\n\tasync getEnvironment(): Promise<IRemoteAgentEnvironment | null> { return null; }\n\tasync getRawEnvironment(): Promise<IRemoteAgentEnvironment | null> { return null; }\n\tasync getExtensionHostExitInfo(reconnectionToken: string): Promise<IExtensionHostExitInfo | null> { return null; }\n\tasync getDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined> { return undefined; }\n\tasync updateTelemetryLevel(telemetryLevel: TelemetryLevel): Promise<void> { }\n\tasync logTelemetry(eventName: string, data?: ITelemetryData): Promise<void> { }\n\tasync flushTelemetry(): Promise<void> { }\n\tasync getRoundTripTime(): Promise<number | undefined> { return undefined; }\n\tasync endConnection(): Promise<void> { }\n}\n\nexport class TestRemoteExtensionsScannerService implements IRemoteExtensionsScannerService {\n\tdeclare readonly _serviceBrand: undefined;\n\tasync whenExtensionsReady(): Promise<void> { }\n\tscanExtensions(): Promise<IExtensionDescription[]> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestWorkbenchExtensionEnablementService implements IWorkbenchExtensionEnablementService {\n\t_serviceBrand: undefined;\n\tonEnablementChanged = Event.None;\n\tgetEnablementState(extension: IExtension): EnablementState { return EnablementState.EnabledGlobally; }\n\tgetEnablementStates(extensions: IExtension[], workspaceTypeOverrides?: { trusted?: boolean | undefined } | undefined): EnablementState[] { return []; }\n\tgetDependenciesEnablementStates(extension: IExtension): [IExtension, EnablementState][] { return []; }\n\tcanChangeEnablement(extension: IExtension): boolean { return true; }\n\tcanChangeWorkspaceEnablement(extension: IExtension): boolean { return true; }\n\tisEnabled(extension: IExtension): boolean { return true; }\n\tisEnabledEnablementState(enablementState: EnablementState): boolean { return true; }\n\tisDisabledGlobally(extension: IExtension): boolean { return false; }\n\tasync setEnablement(extensions: IExtension[], state: EnablementState): Promise<boolean[]> { return []; }\n\tasync updateExtensionsEnablementsWhenWorkspaceTrustChanges(): Promise<void> { }\n}\n\nexport class TestWorkbenchExtensionManagementService implements IWorkbenchExtensionManagementService {\n\t_serviceBrand: undefined;\n\tonInstallExtension = Event.None;\n\tonDidInstallExtensions = Event.None;\n\tonUninstallExtension = Event.None;\n\tonDidUninstallExtension = Event.None;\n\tonDidUpdateExtensionMetadata = Event.None;\n\tonProfileAwareInstallExtension = Event.None;\n\tonProfileAwareDidInstallExtensions = Event.None;\n\tonProfileAwareUninstallExtension = Event.None;\n\tonProfileAwareDidUninstallExtension = Event.None;\n\tonDidChangeProfile = Event.None;\n\tonDidEnableExtensions = Event.None;\n\tinstallVSIX(location: URI, manifest: Readonly<IRelaxedExtensionManifest>, installOptions?: InstallOptions | undefined): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tinstallFromLocation(location: URI): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tinstallGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<InstallExtensionResult[]> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync updateFromGallery(gallery: IGalleryExtension, extension: ILocalExtension, installOptions?: InstallOptions | undefined): Promise<ILocalExtension> { return extension; }\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tgetManifest(vsix: URI): Promise<Readonly<IRelaxedExtensionManifest>> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tinstall(vsix: URI, options?: InstallOptions | undefined): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> { return false; }\n\tinstallFromGallery(extension: IGalleryExtension, options?: InstallOptions | undefined): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions | undefined): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tuninstallExtensions(extensions: UninstallExtensionInfo[]): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync getInstalled(type?: ExtensionType | undefined): Promise<ILocalExtension[]> { return []; }\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync updateMetadata(local: ILocalExtension, metadata: Partial<Metadata>): Promise<ILocalExtension> { return local; }\n\tregisterParticipant(pariticipant: IExtensionManagementParticipant): void { }\n\tasync getTargetPlatform(): Promise<TargetPlatform> { return TargetPlatform.UNDEFINED; }\n\tasync cleanUp(): Promise<void> { }\n\tdownload(): Promise<URI> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tcopyExtensions(): Promise<void> { throw new Error('Not Supported'); }\n\ttoggleAppliationScope(): Promise<ILocalExtension> { throw new Error('Not Supported'); }\n\tinstallExtensionsFromProfile(): Promise<ILocalExtension[]> { throw new Error('Not Supported'); }\n\twhenProfileChanged(from: IUserDataProfile, to: IUserDataProfile): Promise<void> { throw new Error('Not Supported'); }\n\tgetInstalledWorkspaceExtensionLocations(): URI[] { throw new Error('Method not implemented.'); }\n\tgetInstalledWorkspaceExtensions(): Promise<ILocalExtension[]> { throw new Error('Method not implemented.'); }\n\tinstallResourceExtension(): Promise<ILocalExtension> { throw new Error('Method not implemented.'); }\n\tgetExtensions(): Promise<IResourceExtension[]> { throw new Error('Method not implemented.'); }\n\tresetPinnedStateForAllUserExtensions(pinned: boolean): Promise<void> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestUserDataProfileService implements IUserDataProfileService {\n\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeCurrentProfile = Event.None;\n\treadonly currentProfile = toUserDataProfile('test', 'test', URI.file('tests').with({ scheme: 'vscode-tests' }), URI.file('tests').with({ scheme: 'vscode-tests' }));\n\tasync updateCurrentProfile(): Promise<void> { }\n\tgetShortName(profile: IUserDataProfile): string { return profile.shortName ?? profile.name; }\n}\n\nexport class TestWebExtensionsScannerService implements IWebExtensionsScannerService {\n\t_serviceBrand: undefined;\n\tonDidChangeProfile = Event.None;\n\tasync scanSystemExtensions(): Promise<IExtension[]> { return []; }\n\tasync scanUserExtensions(): Promise<IScannedExtension[]> { return []; }\n\tasync scanExtensionsUnderDevelopment(): Promise<IExtension[]> { return []; }\n\tasync copyExtensions(): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tscanExistingExtension(extensionLocation: URI, extensionType: ExtensionType): Promise<IScannedExtension | null> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\taddExtension(location: URI, metadata?: Partial<IGalleryMetadata & { isApplicationScoped: boolean; isMachineScoped: boolean; isBuiltin: boolean; isSystem: boolean; updated: boolean; preRelease: boolean; installedTimestamp: number }> | undefined): Promise<IExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\taddExtensionFromGallery(galleryExtension: IGalleryExtension, metadata?: Partial<IGalleryMetadata & { isApplicationScoped: boolean; isMachineScoped: boolean; isBuiltin: boolean; isSystem: boolean; updated: boolean; preRelease: boolean; installedTimestamp: number }> | undefined): Promise<IExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tremoveExtension(): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tupdateMetadata(extension: IScannedExtension, metaData: Partial<Metadata>, profileLocation: URI): Promise<IScannedExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tscanExtensionManifest(extensionLocation: URI): Promise<Readonly<IRelaxedExtensionManifest> | null> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport async function workbenchTeardown(instantiationService: IInstantiationService): Promise<void> {\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst workingCopyService = accessor.get(IWorkingCopyService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tfor (const workingCopy of workingCopyService.workingCopies) {\n\t\t\tawait workingCopy.revert();\n\t\t}\n\n\t\tfor (const group of editorGroupService.groups) {\n\t\t\tawait group.closeAllEditors();\n\t\t}\n\n\t\tfor (const group of editorGroupService.groups) {\n\t\t\teditorGroupService.removeGroup(group);\n\t\t}\n\t});\n}\n"],
  "mappings": "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",
  "names": ["data"]
}
