{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/viewlet.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { PaneCompositeDescriptor, Extensions, PaneCompositeRegistry, PaneComposite } from '../../browser/panecomposite.js';\nimport { isFunction } from '../../../base/common/types.js';\nimport { IBoundarySashes } from '../../../base/browser/ui/sash/sash.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../base/test/common/utils.js';\n\nsuite('Viewlets', () => {\n\n\tclass TestViewlet extends PaneComposite {\n\n\t\tconstructor() {\n\t\t\tsuper('id', null!, null!, null!, null!, null!, null!, null!);\n\t\t}\n\n\t\toverride layout(dimension: any): void {\n\t\t\tthrow new Error('Method not implemented.');\n\t\t}\n\n\t\toverride setBoundarySashes(sashes: IBoundarySashes): void {\n\t\t\tthrow new Error('Method not implemented.');\n\t\t}\n\n\t\tprotected override createViewPaneContainer() { return null!; }\n\t}\n\n\ttest('ViewletDescriptor API', function () {\n\t\tconst d = PaneCompositeDescriptor.create(TestViewlet, 'id', 'name', 'class', 5);\n\t\tassert.strictEqual(d.id, 'id');\n\t\tassert.strictEqual(d.name, 'name');\n\t\tassert.strictEqual(d.cssClass, 'class');\n\t\tassert.strictEqual(d.order, 5);\n\t});\n\n\ttest('Editor Aware ViewletDescriptor API', function () {\n\t\tlet d = PaneCompositeDescriptor.create(TestViewlet, 'id', 'name', 'class', 5);\n\t\tassert.strictEqual(d.id, 'id');\n\t\tassert.strictEqual(d.name, 'name');\n\n\t\td = PaneCompositeDescriptor.create(TestViewlet, 'id', 'name', 'class', 5);\n\t\tassert.strictEqual(d.id, 'id');\n\t\tassert.strictEqual(d.name, 'name');\n\t});\n\n\ttest('Viewlet extension point and registration', function () {\n\t\tassert(isFunction(Registry.as<PaneCompositeRegistry>(Extensions.Viewlets).registerPaneComposite));\n\t\tassert(isFunction(Registry.as<PaneCompositeRegistry>(Extensions.Viewlets).getPaneComposite));\n\t\tassert(isFunction(Registry.as<PaneCompositeRegistry>(Extensions.Viewlets).getPaneComposites));\n\n\t\tconst oldCount = Registry.as<PaneCompositeRegistry>(Extensions.Viewlets).getPaneComposites().length;\n\t\tconst d = PaneCompositeDescriptor.create(TestViewlet, 'reg-test-id', 'name');\n\t\tRegistry.as<PaneCompositeRegistry>(Extensions.Viewlets).registerPaneComposite(d);\n\n\t\tassert(d === Registry.as<PaneCompositeRegistry>(Extensions.Viewlets).getPaneComposite('reg-test-id'));\n\t\tassert.strictEqual(oldCount + 1, Registry.as<PaneCompositeRegistry>(Extensions.Viewlets).getPaneComposites().length);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,gBAAgB;AACzB,SAAS,yBAAyB,YAAY,uBAAuB,qBAAqB;AAC1F,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAChC,SAAS,+CAA+C;AAExD,MAAM,YAAY,MAAM;AAAA,EAEvB,MAAM,oBAAoB,cAAc;AAAA,IAdzC,OAcyC;AAAA;AAAA;AAAA,IAEvC,cAAc;AACb,YAAM,MAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,IAAK;AAAA,IAC5D;AAAA,IAES,OAAO,WAAsB;AACrC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC1C;AAAA,IAES,kBAAkB,QAA+B;AACzD,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC1C;AAAA,IAEmB,0BAA0B;AAAE,aAAO;AAAA,IAAO;AAAA,EAC9D;AAEA,OAAK,yBAAyB,WAAY;AACzC,UAAM,IAAI,wBAAwB,OAAO,aAAa,MAAM,QAAQ,SAAS,CAAC;AAC9E,WAAO,YAAY,EAAE,IAAI,IAAI;AAC7B,WAAO,YAAY,EAAE,MAAM,MAAM;AACjC,WAAO,YAAY,EAAE,UAAU,OAAO;AACtC,WAAO,YAAY,EAAE,OAAO,CAAC;AAAA,EAC9B,CAAC;AAED,OAAK,sCAAsC,WAAY;AACtD,QAAI,IAAI,wBAAwB,OAAO,aAAa,MAAM,QAAQ,SAAS,CAAC;AAC5E,WAAO,YAAY,EAAE,IAAI,IAAI;AAC7B,WAAO,YAAY,EAAE,MAAM,MAAM;AAEjC,QAAI,wBAAwB,OAAO,aAAa,MAAM,QAAQ,SAAS,CAAC;AACxE,WAAO,YAAY,EAAE,IAAI,IAAI;AAC7B,WAAO,YAAY,EAAE,MAAM,MAAM;AAAA,EAClC,CAAC;AAED,OAAK,4CAA4C,WAAY;AAC5D,WAAO,WAAW,SAAS,GAA0B,WAAW,QAAQ,EAAE,qBAAqB,CAAC;AAChG,WAAO,WAAW,SAAS,GAA0B,WAAW,QAAQ,EAAE,gBAAgB,CAAC;AAC3F,WAAO,WAAW,SAAS,GAA0B,WAAW,QAAQ,EAAE,iBAAiB,CAAC;AAE5F,UAAM,WAAW,SAAS,GAA0B,WAAW,QAAQ,EAAE,kBAAkB,EAAE;AAC7F,UAAM,IAAI,wBAAwB,OAAO,aAAa,eAAe,MAAM;AAC3E,aAAS,GAA0B,WAAW,QAAQ,EAAE,sBAAsB,CAAC;AAE/E,WAAO,MAAM,SAAS,GAA0B,WAAW,QAAQ,EAAE,iBAAiB,aAAa,CAAC;AACpG,WAAO,YAAY,WAAW,GAAG,SAAS,GAA0B,WAAW,QAAQ,EAAE,kBAAkB,EAAE,MAAM;AAAA,EACpH,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": []
}
