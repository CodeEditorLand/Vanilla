import s from"assert";import"../../../platform/instantiation/test/common/instantiationServiceMock.js";import{URI as m}from"../../../base/common/uri.js";import{workbenchInstantiationService as b,TestEditorService as I}from"./workbenchTestServices.js";import{IModelService as S}from"../../../editor/common/services/model.js";import{ILanguageService as E}from"../../../editor/common/languages/language.js";import{LanguageService as R}from"../../../editor/common/services/languageService.js";import{RangeHighlightDecorations as C}from"../../browser/codeeditor.js";import"../../../editor/common/model/textModel.js";import{createTestCodeEditor as L}from"../../../editor/test/browser/testCodeEditor.js";import{Range as c}from"../../../editor/common/core/range.js";import{Position as N}from"../../../editor/common/core/position.js";import{IConfigurationService as T}from"../../../platform/configuration/common/configuration.js";import{TestConfigurationService as M}from"../../../platform/configuration/test/common/testConfigurationService.js";import{ModelService as w}from"../../../editor/common/services/modelService.js";import{CoreNavigationCommands as q}from"../../../editor/browser/coreCommands.js";import"../../../editor/browser/editorBrowser.js";import{IEditorService as d}from"../../services/editor/common/editorService.js";import{createTextModel as x}from"../../../editor/test/common/testTextModel.js";import{IThemeService as D}from"../../../platform/theme/common/themeService.js";import{TestThemeService as H}from"../../../platform/theme/test/common/testThemeService.js";import{DisposableStore as A}from"../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as U}from"../../../base/test/common/utils.js";suite("Editor - Range decorations",()=>{let u,a,g,r,h,o;const f=[];setup(()=>{u=new A,a=b(void 0,u),a.stub(d,new I),a.stub(E,R),a.stub(S,v(a)),h=`LINE1
LINE2
LINE3
LINE4\r
LINE5`,r=u.add(l(m.file("some_file"))),g=u.add(L(r)),a.stub(d,"activeEditor",{get resource(){return g.getModel().uri}}),a.stub(d,"activeTextEditorControl",g),o=u.add(a.createInstance(C))}),teardown(()=>{g.dispose(),f.forEach(e=>e.dispose()),u.dispose()}),U(),test("highlight range for the resource if it is an active editor",function(){const e=new c(1,1,1,1);o.highlightRange({resource:r.uri,range:e});const t=n(r);s.deepStrictEqual(t,[e])}),test("remove highlight range",function(){o.highlightRange({resource:r.uri,range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1}}),o.removeHighlightRange();const e=n(r);s.deepStrictEqual(e,[])}),test("highlight range for the resource removes previous highlight",function(){o.highlightRange({resource:r.uri,range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1}});const e=new c(2,2,4,3);o.highlightRange({resource:r.uri,range:e});const t=n(r);s.deepStrictEqual(t,[e])}),test("highlight range for a new resource removes highlight of previous resource",function(){o.highlightRange({resource:r.uri,range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1}});const e=p("anotherModel"),t=new c(2,2,4,3);o.highlightRange({resource:e.uri,range:t});let i=n(r);s.deepStrictEqual(i,[]),i=n(e),s.deepStrictEqual(i,[t])}),test("highlight is removed on model change",function(){o.highlightRange({resource:r.uri,range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1}}),p("anotherModel");const e=n(r);s.deepStrictEqual(e,[])}),test("highlight is removed on cursor position change",function(){o.highlightRange({resource:r.uri,range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1}}),g.trigger("mouse",q.MoveTo.id,{position:new N(2,1)});const e=n(r);s.deepStrictEqual(e,[])}),test("range is not highlight if not active editor",function(){const e=l(m.file("some model"));o.highlightRange({resource:e.uri,range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1}});const t=n(e);s.deepStrictEqual(t,[])}),test("previous highlight is not removed if not active editor",function(){const e=new c(1,1,1,1);o.highlightRange({resource:r.uri,range:e});const t=l(m.file("some model"));o.highlightRange({resource:t.uri,range:{startLineNumber:2,startColumn:1,endLineNumber:2,endColumn:1}});const i=n(r);s.deepStrictEqual(i,[e])});function p(e){const t=l(m.file(e));return g.setModel(t),t}function l(e,t=h){const i=x(t,void 0,void 0,e);return f.push(i),i}function n(e){const t=[];for(const i of e.getAllDecorations())i.options.className==="rangeHighlight"&&t.push(i.range);return t.sort(c.compareRangesUsingStarts),t}function v(e){return e.stub(T,new M),e.stub(D,new H),e.createInstance(w)}});
