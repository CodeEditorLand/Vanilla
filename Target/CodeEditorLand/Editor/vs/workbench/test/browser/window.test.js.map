{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/browser/window.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { IRegisteredCodeWindow } from '../../../base/browser/dom.js';\nimport { CodeWindow, mainWindow } from '../../../base/browser/window.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { runWithFakedTimers } from '../../../base/test/common/timeTravelScheduler.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../base/test/common/utils.js';\nimport { BaseWindow } from '../../browser/window.js';\nimport { TestEnvironmentService, TestHostService } from './workbenchTestServices.js';\n\nsuite('Window', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tclass TestWindow extends BaseWindow {\n\n\t\tconstructor(window: CodeWindow, dom: { getWindowsCount: () => number; getWindows: () => Iterable<IRegisteredCodeWindow> }) {\n\t\t\tsuper(window, dom, new TestHostService(), TestEnvironmentService);\n\t\t}\n\n\t\tprotected override enableWindowFocusOnElementFocus(): void { }\n\t}\n\n\ttest('multi window aware setTimeout()', async function () {\n\t\treturn runWithFakedTimers({ useFakeTimers: true }, async () => {\n\t\t\tconst disposables = new DisposableStore();\n\n\t\t\tlet windows: IRegisteredCodeWindow[] = [];\n\t\t\tconst dom = {\n\t\t\t\tgetWindowsCount: () => windows.length,\n\t\t\t\tgetWindows: () => windows\n\t\t\t};\n\n\t\t\tconst setTimeoutCalls: number[] = [];\n\t\t\tconst clearTimeoutCalls: number[] = [];\n\n\t\t\tfunction createWindow(id: number, slow?: boolean) {\n\t\t\t\tconst res = {\n\t\t\t\t\tsetTimeout: function (callback: Function, delay: number, ...args: any[]): number {\n\t\t\t\t\t\tsetTimeoutCalls.push(id);\n\n\t\t\t\t\t\treturn mainWindow.setTimeout(() => callback(id), slow ? delay * 2 : delay, ...args);\n\t\t\t\t\t},\n\t\t\t\t\tclearTimeout: function (timeoutId: number): void {\n\t\t\t\t\t\tclearTimeoutCalls.push(id);\n\n\t\t\t\t\t\treturn mainWindow.clearTimeout(timeoutId);\n\t\t\t\t\t}\n\t\t\t\t} as any;\n\n\t\t\t\tdisposables.add(new TestWindow(res, dom));\n\n\t\t\t\treturn res;\n\t\t\t}\n\n\t\t\tconst window1 = createWindow(1);\n\t\t\twindows = [{ window: window1, disposables }];\n\n\t\t\t// Window Count: 1\n\n\t\t\tlet called = false;\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\twindow1.setTimeout(() => {\n\t\t\t\t\tif (!called) {\n\t\t\t\t\t\tcalled = true;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error('timeout called twice'));\n\t\t\t\t\t}\n\t\t\t\t}, 1);\n\t\t\t});\n\n\t\t\tassert.strictEqual(called, true);\n\t\t\tassert.deepStrictEqual(setTimeoutCalls, [1]);\n\t\t\tassert.deepStrictEqual(clearTimeoutCalls, []);\n\t\t\tcalled = false;\n\t\t\tsetTimeoutCalls.length = 0;\n\t\t\tclearTimeoutCalls.length = 0;\n\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\twindow1.setTimeout(() => {\n\t\t\t\t\tif (!called) {\n\t\t\t\t\t\tcalled = true;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error('timeout called twice'));\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t});\n\n\t\t\tassert.strictEqual(called, true);\n\t\t\tassert.deepStrictEqual(setTimeoutCalls, [1]);\n\t\t\tassert.deepStrictEqual(clearTimeoutCalls, []);\n\t\t\tcalled = false;\n\t\t\tsetTimeoutCalls.length = 0;\n\t\t\tclearTimeoutCalls.length = 0;\n\n\t\t\t// Window Count: 3\n\n\t\t\tlet window2 = createWindow(2);\n\t\t\tconst window3 = createWindow(3);\n\t\t\twindows = [\n\t\t\t\t{ window: window2, disposables },\n\t\t\t\t{ window: window1, disposables },\n\t\t\t\t{ window: window3, disposables }\n\t\t\t];\n\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\twindow1.setTimeout(() => {\n\t\t\t\t\tif (!called) {\n\t\t\t\t\t\tcalled = true;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error('timeout called twice'));\n\t\t\t\t\t}\n\t\t\t\t}, 1);\n\t\t\t});\n\n\t\t\tassert.strictEqual(called, true);\n\t\t\tassert.deepStrictEqual(setTimeoutCalls, [2, 1, 3]);\n\t\t\tassert.deepStrictEqual(clearTimeoutCalls, [2, 1, 3]);\n\t\t\tcalled = false;\n\t\t\tsetTimeoutCalls.length = 0;\n\t\t\tclearTimeoutCalls.length = 0;\n\n\t\t\t// Window Count: 2 (1 fast, 1 slow)\n\n\t\t\twindow2 = createWindow(2, true);\n\t\t\twindows = [\n\t\t\t\t{ window: window2, disposables },\n\t\t\t\t{ window: window1, disposables },\n\t\t\t];\n\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\twindow1.setTimeout((windowId: number) => {\n\t\t\t\t\tif (!called && windowId === 1) {\n\t\t\t\t\t\tcalled = true;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t} else if (called) {\n\t\t\t\t\t\treject(new Error('timeout called twice'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error('timeout called for wrong window'));\n\t\t\t\t\t}\n\t\t\t\t}, 1);\n\t\t\t});\n\n\t\t\tassert.strictEqual(called, true);\n\t\t\tassert.deepStrictEqual(setTimeoutCalls, [2, 1]);\n\t\t\tassert.deepStrictEqual(clearTimeoutCalls, [2, 1]);\n\t\t\tcalled = false;\n\t\t\tsetTimeoutCalls.length = 0;\n\t\t\tclearTimeoutCalls.length = 0;\n\n\t\t\tdisposables.dispose();\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
