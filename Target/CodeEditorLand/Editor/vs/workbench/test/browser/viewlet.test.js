import t from"assert";import{Registry as s}from"../../../platform/registry/common/platform.js";import{PaneCompositeDescriptor as n,Extensions as i,PaneComposite as l}from"../../browser/panecomposite.js";import{isFunction as a}from"../../../base/common/types.js";import"../../../base/browser/ui/sash/sash.js";import{ensureNoDisposablesAreLeakedInTestSuite as m}from"../../../base/test/common/utils.js";suite("Viewlets",()=>{class o extends l{constructor(){super("id",null,null,null,null,null,null,null)}layout(r){throw new Error("Method not implemented.")}setBoundarySashes(r){throw new Error("Method not implemented.")}createViewPaneContainer(){return null}}test("ViewletDescriptor API",function(){const e=n.create(o,"id","name","class",5);t.strictEqual(e.id,"id"),t.strictEqual(e.name,"name"),t.strictEqual(e.cssClass,"class"),t.strictEqual(e.order,5)}),test("Editor Aware ViewletDescriptor API",function(){let e=n.create(o,"id","name","class",5);t.strictEqual(e.id,"id"),t.strictEqual(e.name,"name"),e=n.create(o,"id","name","class",5),t.strictEqual(e.id,"id"),t.strictEqual(e.name,"name")}),test("Viewlet extension point and registration",function(){t(a(s.as(i.Viewlets).registerPaneComposite)),t(a(s.as(i.Viewlets).getPaneComposite)),t(a(s.as(i.Viewlets).getPaneComposites));const e=s.as(i.Viewlets).getPaneComposites().length,r=n.create(o,"reg-test-id","name");s.as(i.Viewlets).registerPaneComposite(r),t(r===s.as(i.Viewlets).getPaneComposite("reg-test-id")),t.strictEqual(e+1,s.as(i.Viewlets).getPaneComposites().length)}),m()});
