{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/common/resources.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../base/test/common/utils.js';\nimport { TestConfigurationService } from '../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\nimport { ResourceGlobMatcher } from '../../common/resources.js';\nimport { TestContextService } from './workbenchTestServices.js';\n\nsuite('ResourceGlobMatcher', () => {\n\n\tconst SETTING = 'test.matcher';\n\n\tlet contextService: IWorkspaceContextService;\n\tlet configurationService: TestConfigurationService;\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tcontextService = new TestContextService();\n\t\tconfigurationService = new TestConfigurationService({\n\t\t\t[SETTING]: {\n\t\t\t\t'**/*.md': true,\n\t\t\t\t'**/*.txt': false\n\t\t\t}\n\t\t});\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('Basics', async () => {\n\t\tconst matcher = disposables.add(new ResourceGlobMatcher(() => configurationService.getValue(SETTING), e => e.affectsConfiguration(SETTING), contextService, configurationService));\n\n\t\t// Matching\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar')), false);\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.md')), true);\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.txt')), false);\n\n\t\t// Events\n\t\tlet eventCounter = 0;\n\t\tdisposables.add(matcher.onExpressionChange(() => eventCounter++));\n\n\t\tawait configurationService.setUserConfiguration(SETTING, { '**/*.foo': true });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: (key: string) => key === SETTING } as any);\n\t\tassert.equal(eventCounter, 1);\n\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.md')), false);\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.foo')), true);\n\n\t\tawait configurationService.setUserConfiguration(SETTING, undefined);\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: (key: string) => key === SETTING } as any);\n\t\tassert.equal(eventCounter, 2);\n\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.md')), false);\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.foo')), false);\n\n\t\tawait configurationService.setUserConfiguration(SETTING, {\n\t\t\t'**/*.md': true,\n\t\t\t'**/*.txt': false,\n\t\t\t'C:/bar/**': true,\n\t\t\t'/bar/**': true\n\t\t});\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: (key: string) => key === SETTING } as any);\n\n\t\tassert.equal(matcher.matches(URI.file('/bar/foo.1')), true);\n\t\tassert.equal(matcher.matches(URI.file('C:/bar/foo.1')), true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,uBAAuB;AAChC,SAAS,WAAW;AACpB,SAAS,+CAA+C;AACxD,SAAS,gCAAgC;AACzC,SAAS,gCAAgC;AACzC,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AAEnC,MAAM,uBAAuB,MAAM;AAElC,QAAM,UAAU;AAEhB,MAAI;AACJ,MAAI;AAEJ,QAAM,cAAc,IAAI,gBAAgB;AAExC,QAAM,MAAM;AACX,qBAAiB,IAAI,mBAAmB;AACxC,2BAAuB,IAAI,yBAAyB;AAAA,MACnD,CAAC,OAAO,GAAG;AAAA,QACV,WAAW;AAAA,QACX,YAAY;AAAA,MACb;AAAA,IACD,CAAC;AAAA,EACF,CAAC;AAED,WAAS,MAAM;AACd,gBAAY,MAAM;AAAA,EACnB,CAAC;AAED,OAAK,UAAU,YAAY;AAC1B,UAAM,UAAU,YAAY,IAAI,IAAI,oBAAoB,MAAM,qBAAqB,SAAS,OAAO,GAAG,OAAK,EAAE,qBAAqB,OAAO,GAAG,gBAAgB,oBAAoB,CAAC;AAGjL,WAAO,MAAM,QAAQ,QAAQ,IAAI,KAAK,UAAU,CAAC,GAAG,KAAK;AACzD,WAAO,MAAM,QAAQ,QAAQ,IAAI,KAAK,aAAa,CAAC,GAAG,IAAI;AAC3D,WAAO,MAAM,QAAQ,QAAQ,IAAI,KAAK,cAAc,CAAC,GAAG,KAAK;AAG7D,QAAI,eAAe;AACnB,gBAAY,IAAI,QAAQ,mBAAmB,MAAM,cAAc,CAAC;AAEhE,UAAM,qBAAqB,qBAAqB,SAAS,EAAE,YAAY,KAAK,CAAC;AAC7E,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,wBAAC,QAAgB,QAAQ,SAAzB,wBAAiC,CAAQ;AAC3H,WAAO,MAAM,cAAc,CAAC;AAE5B,WAAO,MAAM,QAAQ,QAAQ,IAAI,KAAK,aAAa,CAAC,GAAG,KAAK;AAC5D,WAAO,MAAM,QAAQ,QAAQ,IAAI,KAAK,cAAc,CAAC,GAAG,IAAI;AAE5D,UAAM,qBAAqB,qBAAqB,SAAS,MAAS;AAClE,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,wBAAC,QAAgB,QAAQ,SAAzB,wBAAiC,CAAQ;AAC3H,WAAO,MAAM,cAAc,CAAC;AAE5B,WAAO,MAAM,QAAQ,QAAQ,IAAI,KAAK,aAAa,CAAC,GAAG,KAAK;AAC5D,WAAO,MAAM,QAAQ,QAAQ,IAAI,KAAK,cAAc,CAAC,GAAG,KAAK;AAE7D,UAAM,qBAAqB,qBAAqB,SAAS;AAAA,MACxD,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,WAAW;AAAA,IACZ,CAAC;AACD,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,wBAAC,QAAgB,QAAQ,SAAzB,wBAAiC,CAAQ;AAE3H,WAAO,MAAM,QAAQ,QAAQ,IAAI,KAAK,YAAY,CAAC,GAAG,IAAI;AAC1D,WAAO,MAAM,QAAQ,QAAQ,IAAI,KAAK,cAAc,CAAC,GAAG,IAAI;AAAA,EAC7D,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": []
}
