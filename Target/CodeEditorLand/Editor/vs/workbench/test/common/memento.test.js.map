{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/common/memento.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../base/test/common/utils.js';\nimport { StorageScope, IStorageService, StorageTarget } from '../../../platform/storage/common/storage.js';\nimport { Memento } from '../../common/memento.js';\nimport { TestStorageService } from './workbenchTestServices.js';\n\nsuite('Memento', () => {\n\tconst disposables = new DisposableStore();\n\tlet storage: IStorageService;\n\n\tsetup(() => {\n\t\tstorage = disposables.add(new TestStorageService());\n\t\tMemento.clear(StorageScope.APPLICATION);\n\t\tMemento.clear(StorageScope.PROFILE);\n\t\tMemento.clear(StorageScope.WORKSPACE);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('Loading and Saving Memento with Scopes', () => {\n\t\tconst myMemento = new Memento('memento.test', storage);\n\n\t\t// Application\n\t\tlet memento = myMemento.getMemento(StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tmemento.foo = [1, 2, 3];\n\t\tlet applicationMemento = myMemento.getMemento(StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(applicationMemento, memento);\n\n\t\t// Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tmemento.foo = [4, 5, 6];\n\t\tlet profileMemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(profileMemento, memento);\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert(memento);\n\t\tmemento.foo = 'Hello World';\n\n\t\tmyMemento.saveMemento();\n\n\t\t// Application\n\t\tmemento = myMemento.getMemento(StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: [1, 2, 3] });\n\t\tapplicationMemento = myMemento.getMemento(StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(applicationMemento, memento);\n\n\t\t// Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: [4, 5, 6] });\n\t\tprofileMemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(profileMemento, memento);\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: 'Hello World' });\n\n\t\t// Assert the Mementos are stored properly in storage\n\t\tassert.deepStrictEqual(JSON.parse(storage.get('memento/memento.test', StorageScope.APPLICATION)!), { foo: [1, 2, 3] });\n\t\tassert.deepStrictEqual(JSON.parse(storage.get('memento/memento.test', StorageScope.PROFILE)!), { foo: [4, 5, 6] });\n\t\tassert.deepStrictEqual(JSON.parse(storage.get('memento/memento.test', StorageScope.WORKSPACE)!), { foo: 'Hello World' });\n\n\t\t// Delete Application\n\t\tmemento = myMemento.getMemento(StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tdelete memento.foo;\n\n\t\t// Delete Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tdelete memento.foo;\n\n\t\t// Delete Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tdelete memento.foo;\n\n\t\tmyMemento.saveMemento();\n\n\t\t// Application\n\t\tmemento = myMemento.getMemento(StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, {});\n\n\t\t// Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, {});\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, {});\n\n\t\t// Assert the Mementos are also removed from storage\n\t\tassert.strictEqual(storage.get('memento/memento.test', StorageScope.APPLICATION, null!), null);\n\t\tassert.strictEqual(storage.get('memento/memento.test', StorageScope.PROFILE, null!), null);\n\t\tassert.strictEqual(storage.get('memento/memento.test', StorageScope.WORKSPACE, null!), null);\n\t});\n\n\ttest('Save and Load', () => {\n\t\tconst myMemento = new Memento('memento.test', storage);\n\n\t\t// Profile\n\t\tlet memento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tmemento.foo = [1, 2, 3];\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert(memento);\n\t\tmemento.foo = 'Hello World';\n\n\t\tmyMemento.saveMemento();\n\n\t\t// Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: [1, 2, 3] });\n\t\tlet profileMemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(profileMemento, memento);\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: 'Hello World' });\n\n\t\t// Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tmemento.foo = [4, 5, 6];\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert(memento);\n\t\tmemento.foo = 'World Hello';\n\n\t\tmyMemento.saveMemento();\n\n\t\t// Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: [4, 5, 6] });\n\t\tprofileMemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(profileMemento, memento);\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: 'World Hello' });\n\n\t\t// Delete Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tdelete memento.foo;\n\n\t\t// Delete Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tdelete memento.foo;\n\n\t\tmyMemento.saveMemento();\n\n\t\t// Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, {});\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, {});\n\t});\n\n\ttest('Save and Load - 2 Components with same id', () => {\n\t\tconst myMemento = new Memento('memento.test', storage);\n\t\tconst myMemento2 = new Memento('memento.test', storage);\n\n\t\t// Profile\n\t\tlet memento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tmemento.foo = [1, 2, 3];\n\n\t\tmemento = myMemento2.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tmemento.bar = [1, 2, 3];\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert(memento);\n\t\tmemento.foo = 'Hello World';\n\n\t\tmemento = myMemento2.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert(memento);\n\t\tmemento.bar = 'Hello World';\n\n\t\tmyMemento.saveMemento();\n\t\tmyMemento2.saveMemento();\n\n\t\t// Profile\n\t\tmemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: [1, 2, 3], bar: [1, 2, 3] });\n\t\tlet profileMemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(profileMemento, memento);\n\n\t\tmemento = myMemento2.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: [1, 2, 3], bar: [1, 2, 3] });\n\t\tprofileMemento = myMemento2.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(profileMemento, memento);\n\n\t\t// Workspace\n\t\tmemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: 'Hello World', bar: 'Hello World' });\n\n\t\tmemento = myMemento2.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tassert.deepStrictEqual(memento, { foo: 'Hello World', bar: 'Hello World' });\n\t});\n\n\ttest('Clear Memento', () => {\n\t\tlet myMemento = new Memento('memento.test', storage);\n\n\t\t// Profile\n\t\tlet profileMemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tprofileMemento.foo = 'Hello World';\n\n\t\t// Workspace\n\t\tlet workspaceMemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tworkspaceMemento.bar = 'Hello World';\n\n\t\tmyMemento.saveMemento();\n\n\t\t// Clear\n\t\tstorage = disposables.add(new TestStorageService());\n\t\tMemento.clear(StorageScope.PROFILE);\n\t\tMemento.clear(StorageScope.WORKSPACE);\n\n\t\tmyMemento = new Memento('memento.test', storage);\n\t\tprofileMemento = myMemento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tworkspaceMemento = myMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\n\t\tassert.deepStrictEqual(profileMemento, {});\n\t\tassert.deepStrictEqual(workspaceMemento, {});\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,uBAAuB;AAChC,SAAS,+CAA+C;AACxD,SAAS,cAAc,iBAAiB,qBAAqB;AAC7D,SAAS,eAAe;AACxB,SAAS,0BAA0B;AAEnC,MAAM,WAAW,MAAM;AACtB,QAAM,cAAc,IAAI,gBAAgB;AACxC,MAAI;AAEJ,QAAM,MAAM;AACX,cAAU,YAAY,IAAI,IAAI,mBAAmB,CAAC;AAClD,YAAQ,MAAM,aAAa,WAAW;AACtC,YAAQ,MAAM,aAAa,OAAO;AAClC,YAAQ,MAAM,aAAa,SAAS;AAAA,EACrC,CAAC;AAED,WAAS,MAAM;AACd,gBAAY,MAAM;AAAA,EACnB,CAAC;AAED,OAAK,0CAA0C,MAAM;AACpD,UAAM,YAAY,IAAI,QAAQ,gBAAgB,OAAO;AAGrD,QAAI,UAAU,UAAU,WAAW,aAAa,aAAa,cAAc,OAAO;AAClF,YAAQ,MAAM,CAAC,GAAG,GAAG,CAAC;AACtB,QAAI,qBAAqB,UAAU,WAAW,aAAa,aAAa,cAAc,OAAO;AAC7F,WAAO,gBAAgB,oBAAoB,OAAO;AAGlD,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,YAAQ,MAAM,CAAC,GAAG,GAAG,CAAC;AACtB,QAAI,iBAAiB,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AACrF,WAAO,gBAAgB,gBAAgB,OAAO;AAG9C,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,OAAO;AACd,YAAQ,MAAM;AAEd,cAAU,YAAY;AAGtB,cAAU,UAAU,WAAW,aAAa,aAAa,cAAc,OAAO;AAC9E,WAAO,gBAAgB,SAAS,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;AAClD,yBAAqB,UAAU,WAAW,aAAa,aAAa,cAAc,OAAO;AACzF,WAAO,gBAAgB,oBAAoB,OAAO;AAGlD,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,WAAO,gBAAgB,SAAS,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;AAClD,qBAAiB,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AACjF,WAAO,gBAAgB,gBAAgB,OAAO;AAG9C,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,gBAAgB,SAAS,EAAE,KAAK,cAAc,CAAC;AAGtD,WAAO,gBAAgB,KAAK,MAAM,QAAQ,IAAI,wBAAwB,aAAa,WAAW,CAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;AACrH,WAAO,gBAAgB,KAAK,MAAM,QAAQ,IAAI,wBAAwB,aAAa,OAAO,CAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;AACjH,WAAO,gBAAgB,KAAK,MAAM,QAAQ,IAAI,wBAAwB,aAAa,SAAS,CAAE,GAAG,EAAE,KAAK,cAAc,CAAC;AAGvH,cAAU,UAAU,WAAW,aAAa,aAAa,cAAc,OAAO;AAC9E,WAAO,QAAQ;AAGf,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,WAAO,QAAQ;AAGf,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,QAAQ;AAEf,cAAU,YAAY;AAGtB,cAAU,UAAU,WAAW,aAAa,aAAa,cAAc,OAAO;AAC9E,WAAO,gBAAgB,SAAS,CAAC,CAAC;AAGlC,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,WAAO,gBAAgB,SAAS,CAAC,CAAC;AAGlC,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,gBAAgB,SAAS,CAAC,CAAC;AAGlC,WAAO,YAAY,QAAQ,IAAI,wBAAwB,aAAa,aAAa,IAAK,GAAG,IAAI;AAC7F,WAAO,YAAY,QAAQ,IAAI,wBAAwB,aAAa,SAAS,IAAK,GAAG,IAAI;AACzF,WAAO,YAAY,QAAQ,IAAI,wBAAwB,aAAa,WAAW,IAAK,GAAG,IAAI;AAAA,EAC5F,CAAC;AAED,OAAK,iBAAiB,MAAM;AAC3B,UAAM,YAAY,IAAI,QAAQ,gBAAgB,OAAO;AAGrD,QAAI,UAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC9E,YAAQ,MAAM,CAAC,GAAG,GAAG,CAAC;AAGtB,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,OAAO;AACd,YAAQ,MAAM;AAEd,cAAU,YAAY;AAGtB,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,WAAO,gBAAgB,SAAS,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;AAClD,QAAI,iBAAiB,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AACrF,WAAO,gBAAgB,gBAAgB,OAAO;AAG9C,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,gBAAgB,SAAS,EAAE,KAAK,cAAc,CAAC;AAGtD,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,YAAQ,MAAM,CAAC,GAAG,GAAG,CAAC;AAGtB,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,OAAO;AACd,YAAQ,MAAM;AAEd,cAAU,YAAY;AAGtB,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,WAAO,gBAAgB,SAAS,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;AAClD,qBAAiB,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AACjF,WAAO,gBAAgB,gBAAgB,OAAO;AAG9C,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,gBAAgB,SAAS,EAAE,KAAK,cAAc,CAAC;AAGtD,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,WAAO,QAAQ;AAGf,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,QAAQ;AAEf,cAAU,YAAY;AAGtB,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,WAAO,gBAAgB,SAAS,CAAC,CAAC;AAGlC,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,gBAAgB,SAAS,CAAC,CAAC;AAAA,EACnC,CAAC;AAED,OAAK,6CAA6C,MAAM;AACvD,UAAM,YAAY,IAAI,QAAQ,gBAAgB,OAAO;AACrD,UAAM,aAAa,IAAI,QAAQ,gBAAgB,OAAO;AAGtD,QAAI,UAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC9E,YAAQ,MAAM,CAAC,GAAG,GAAG,CAAC;AAEtB,cAAU,WAAW,WAAW,aAAa,SAAS,cAAc,OAAO;AAC3E,YAAQ,MAAM,CAAC,GAAG,GAAG,CAAC;AAGtB,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,OAAO;AACd,YAAQ,MAAM;AAEd,cAAU,WAAW,WAAW,aAAa,WAAW,cAAc,OAAO;AAC7E,WAAO,OAAO;AACd,YAAQ,MAAM;AAEd,cAAU,YAAY;AACtB,eAAW,YAAY;AAGvB,cAAU,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AAC1E,WAAO,gBAAgB,SAAS,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;AAClE,QAAI,iBAAiB,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AACrF,WAAO,gBAAgB,gBAAgB,OAAO;AAE9C,cAAU,WAAW,WAAW,aAAa,SAAS,cAAc,OAAO;AAC3E,WAAO,gBAAgB,SAAS,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;AAClE,qBAAiB,WAAW,WAAW,aAAa,SAAS,cAAc,OAAO;AAClF,WAAO,gBAAgB,gBAAgB,OAAO;AAG9C,cAAU,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAC5E,WAAO,gBAAgB,SAAS,EAAE,KAAK,eAAe,KAAK,cAAc,CAAC;AAE1E,cAAU,WAAW,WAAW,aAAa,WAAW,cAAc,OAAO;AAC7E,WAAO,gBAAgB,SAAS,EAAE,KAAK,eAAe,KAAK,cAAc,CAAC;AAAA,EAC3E,CAAC;AAED,OAAK,iBAAiB,MAAM;AAC3B,QAAI,YAAY,IAAI,QAAQ,gBAAgB,OAAO;AAGnD,QAAI,iBAAiB,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AACrF,mBAAe,MAAM;AAGrB,QAAI,mBAAmB,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AACzF,qBAAiB,MAAM;AAEvB,cAAU,YAAY;AAGtB,cAAU,YAAY,IAAI,IAAI,mBAAmB,CAAC;AAClD,YAAQ,MAAM,aAAa,OAAO;AAClC,YAAQ,MAAM,aAAa,SAAS;AAEpC,gBAAY,IAAI,QAAQ,gBAAgB,OAAO;AAC/C,qBAAiB,UAAU,WAAW,aAAa,SAAS,cAAc,OAAO;AACjF,uBAAmB,UAAU,WAAW,aAAa,WAAW,cAAc,OAAO;AAErF,WAAO,gBAAgB,gBAAgB,CAAC,CAAC;AACzC,WAAO,gBAAgB,kBAAkB,CAAC,CAAC;AAAA,EAC5C,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": []
}
