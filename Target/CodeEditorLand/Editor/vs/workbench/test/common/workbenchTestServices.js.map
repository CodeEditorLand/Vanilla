{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/test/common/workbenchTestServices.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from '../../../base/common/path.js';\nimport { basename, isEqual, isEqualOrParent } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Event, Emitter } from '../../../base/common/event.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { IWorkspaceContextService, IWorkspace, WorkbenchState, IWorkspaceFolder, IWorkspaceFoldersChangeEvent, Workspace, IWorkspaceFoldersWillChangeEvent, ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from '../../../platform/workspace/common/workspace.js';\nimport { TestWorkspace } from '../../../platform/workspace/test/common/testWorkspace.js';\nimport { ITextResourcePropertiesService } from '../../../editor/common/services/textResourceConfiguration.js';\nimport { isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport { InMemoryStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\nimport { IWorkingCopy, IWorkingCopyBackup, WorkingCopyCapabilities } from '../../services/workingCopy/common/workingCopy.js';\nimport { NullExtensionService } from '../../services/extensions/common/extensions.js';\nimport { IWorkingCopyFileService, IWorkingCopyFileOperationParticipant, WorkingCopyFileEvent, IDeleteOperation, ICopyOperation, IMoveOperation, IFileOperationUndoRedoInfo, ICreateFileOperation, ICreateOperation, IStoredFileWorkingCopySaveParticipant, IStoredFileWorkingCopySaveParticipantContext } from '../../services/workingCopy/common/workingCopyFileService.js';\nimport { IDisposable, Disposable } from '../../../base/common/lifecycle.js';\nimport { IBaseFileStat, IFileStatWithMetadata } from '../../../platform/files/common/files.js';\nimport { ISaveOptions, IRevertOptions, SaveReason, GroupIdentifier } from '../../common/editor.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport product from '../../../platform/product/common/product.js';\nimport { IActivity, IActivityService } from '../../services/activity/common/activity.js';\nimport { IStoredFileWorkingCopySaveEvent } from '../../services/workingCopy/common/storedFileWorkingCopy.js';\nimport { AbstractLoggerService, ILogger, LogLevel, NullLogger } from '../../../platform/log/common/log.js';\nimport { IResourceEditorInput } from '../../../platform/editor/common/editor.js';\nimport { EditorInput } from '../../common/editor/editorInput.js';\nimport { IHistoryService } from '../../services/history/common/history.js';\nimport { IAutoSaveConfiguration, IAutoSaveMode, IFilesConfigurationService } from '../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { IWorkspaceTrustEnablementService, IWorkspaceTrustManagementService, IWorkspaceTrustRequestService, IWorkspaceTrustTransitionParticipant, IWorkspaceTrustUriInfo, WorkspaceTrustRequestOptions, WorkspaceTrustUriResponse } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IMarker, IMarkerData, IMarkerService, IResourceMarker, MarkerStatistics } from '../../../platform/markers/common/markers.js';\nimport { IProgress, IProgressStep } from '../../../platform/progress/common/progress.js';\n\nexport class TestLoggerService extends AbstractLoggerService {\n\tconstructor(logsHome?: URI) {\n\t\tsuper(LogLevel.Info, logsHome ?? URI.file('tests').with({ scheme: 'vscode-tests' }));\n\t}\n\tprotected doCreateLogger(): ILogger { return new NullLogger(); }\n}\n\nexport class TestTextResourcePropertiesService implements ITextResourcePropertiesService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\n\tgetEOL(resource: URI, language?: string): string {\n\t\tconst eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n\t\tif (eol && typeof eol === 'string' && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n\t}\n}\n\nexport class TestContextService implements IWorkspaceContextService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate workspace: Workspace;\n\tprivate options: object;\n\n\tprivate readonly _onDidChangeWorkspaceName: Emitter<void>;\n\tget onDidChangeWorkspaceName(): Event<void> { return this._onDidChangeWorkspaceName.event; }\n\n\tprivate readonly _onWillChangeWorkspaceFolders: Emitter<IWorkspaceFoldersWillChangeEvent>;\n\tget onWillChangeWorkspaceFolders(): Event<IWorkspaceFoldersWillChangeEvent> { return this._onWillChangeWorkspaceFolders.event; }\n\n\tprivate readonly _onDidChangeWorkspaceFolders: Emitter<IWorkspaceFoldersChangeEvent>;\n\tget onDidChangeWorkspaceFolders(): Event<IWorkspaceFoldersChangeEvent> { return this._onDidChangeWorkspaceFolders.event; }\n\n\tprivate readonly _onDidChangeWorkbenchState: Emitter<WorkbenchState>;\n\tget onDidChangeWorkbenchState(): Event<WorkbenchState> { return this._onDidChangeWorkbenchState.event; }\n\n\tconstructor(workspace = TestWorkspace, options = null) {\n\t\tthis.workspace = workspace;\n\t\tthis.options = options || Object.create(null);\n\t\tthis._onDidChangeWorkspaceName = new Emitter<void>();\n\t\tthis._onWillChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersWillChangeEvent>();\n\t\tthis._onDidChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersChangeEvent>();\n\t\tthis._onDidChangeWorkbenchState = new Emitter<WorkbenchState>();\n\t}\n\n\tgetFolders(): IWorkspaceFolder[] {\n\t\treturn this.workspace ? this.workspace.folders : [];\n\t}\n\n\tgetWorkbenchState(): WorkbenchState {\n\t\tif (this.workspace.configuration) {\n\t\t\treturn WorkbenchState.WORKSPACE;\n\t\t}\n\n\t\tif (this.workspace.folders.length) {\n\t\t\treturn WorkbenchState.FOLDER;\n\t\t}\n\n\t\treturn WorkbenchState.EMPTY;\n\t}\n\n\tgetCompleteWorkspace(): Promise<IWorkspace> {\n\t\treturn Promise.resolve(this.getWorkspace());\n\t}\n\n\tgetWorkspace(): IWorkspace {\n\t\treturn this.workspace;\n\t}\n\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null {\n\t\treturn this.workspace.getFolder(resource);\n\t}\n\n\tsetWorkspace(workspace: any): void {\n\t\tthis.workspace = workspace;\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\tupdateOptions() { }\n\n\tisInsideWorkspace(resource: URI): boolean {\n\t\tif (resource && this.workspace) {\n\t\t\treturn isEqualOrParent(resource, this.workspace.folders[0].uri);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\ttoResource(workspaceRelativePath: string): URI {\n\t\treturn URI.file(join('C:\\\\', workspaceRelativePath));\n\t}\n\n\tisCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean {\n\t\treturn URI.isUri(workspaceIdOrFolder) && isEqual(this.workspace.folders[0].uri, workspaceIdOrFolder);\n\t}\n}\n\nexport class TestStorageService extends InMemoryStorageService {\n\n\ttestEmitWillSaveState(reason: WillSaveStateReason): void {\n\t\tsuper.emitWillSaveState(reason);\n\t}\n}\n\nexport class TestHistoryService implements IHistoryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private root?: URI) { }\n\n\tasync reopenLastClosedEditor(): Promise<void> { }\n\tasync goForward(): Promise<void> { }\n\tasync goBack(): Promise<void> { }\n\tasync goPrevious(): Promise<void> { }\n\tasync goLast(): Promise<void> { }\n\tremoveFromHistory(_input: EditorInput | IResourceEditorInput): void { }\n\tclear(): void { }\n\tclearRecentlyOpened(): void { }\n\tgetHistory(): readonly (EditorInput | IResourceEditorInput)[] { return []; }\n\tasync openNextRecentlyUsedEditor(group?: GroupIdentifier): Promise<void> { }\n\tasync openPreviouslyUsedEditor(group?: GroupIdentifier): Promise<void> { }\n\tgetLastActiveWorkspaceRoot(_schemeFilter: string): URI | undefined { return this.root; }\n\tgetLastActiveFile(_schemeFilter: string): URI | undefined { return undefined; }\n}\n\nexport class TestWorkingCopy extends Disposable implements IWorkingCopy {\n\n\tprivate readonly _onDidChangeDirty = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty = this._onDidChangeDirty.event;\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<void>());\n\treadonly onDidChangeContent = this._onDidChangeContent.event;\n\n\tprivate readonly _onDidSave = this._register(new Emitter<IStoredFileWorkingCopySaveEvent>());\n\treadonly onDidSave = this._onDidSave.event;\n\n\treadonly capabilities = WorkingCopyCapabilities.None;\n\n\treadonly name = basename(this.resource);\n\n\tprivate dirty = false;\n\n\tconstructor(readonly resource: URI, isDirty = false, readonly typeId = 'testWorkingCopyType') {\n\t\tsuper();\n\n\t\tthis.dirty = isDirty;\n\t}\n\n\tsetDirty(dirty: boolean): void {\n\t\tif (this.dirty !== dirty) {\n\t\t\tthis.dirty = dirty;\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\tsetContent(content: string): void {\n\t\tthis._onDidChangeContent.fire();\n\t}\n\n\tisDirty(): boolean {\n\t\treturn this.dirty;\n\t}\n\n\tisModified(): boolean {\n\t\treturn this.isDirty();\n\t}\n\n\tasync save(options?: ISaveOptions, stat?: IFileStatWithMetadata): Promise<boolean> {\n\t\tthis._onDidSave.fire({ reason: options?.reason ?? SaveReason.EXPLICIT, stat: stat ?? createFileStat(this.resource), source: options?.source });\n\n\t\treturn true;\n\t}\n\n\tasync revert(options?: IRevertOptions): Promise<void> {\n\t\tthis.setDirty(false);\n\t}\n\n\tasync backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\t\treturn {};\n\t}\n}\n\nexport function createFileStat(resource: URI, readonly = false): IFileStatWithMetadata {\n\treturn {\n\t\tresource,\n\t\tetag: Date.now().toString(),\n\t\tmtime: Date.now(),\n\t\tctime: Date.now(),\n\t\tsize: 42,\n\t\tisFile: true,\n\t\tisDirectory: false,\n\t\tisSymbolicLink: false,\n\t\treadonly,\n\t\tlocked: false,\n\t\tname: basename(resource),\n\t\tchildren: undefined\n\t};\n}\n\nexport class TestWorkingCopyFileService implements IWorkingCopyFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonWillRunWorkingCopyFileOperation: Event<WorkingCopyFileEvent> = Event.None;\n\tonDidFailWorkingCopyFileOperation: Event<WorkingCopyFileEvent> = Event.None;\n\tonDidRunWorkingCopyFileOperation: Event<WorkingCopyFileEvent> = Event.None;\n\n\taddFileOperationParticipant(participant: IWorkingCopyFileOperationParticipant): IDisposable { return Disposable.None; }\n\n\treadonly hasSaveParticipants = false;\n\taddSaveParticipant(participant: IStoredFileWorkingCopySaveParticipant): IDisposable { return Disposable.None; }\n\tasync runSaveParticipants(workingCopy: IWorkingCopy, context: IStoredFileWorkingCopySaveParticipantContext, progress: IProgress<IProgressStep>, token: CancellationToken): Promise<void> { }\n\n\tasync delete(operations: IDeleteOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<void> { }\n\n\tregisterWorkingCopyProvider(provider: (resourceOrFolder: URI) => IWorkingCopy[]): IDisposable { return Disposable.None; }\n\n\tgetDirty(resource: URI): IWorkingCopy[] { return []; }\n\n\tcreate(operations: ICreateFileOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<IFileStatWithMetadata[]> { throw new Error('Method not implemented.'); }\n\tcreateFolder(operations: ICreateOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<IFileStatWithMetadata[]> { throw new Error('Method not implemented.'); }\n\n\tmove(operations: IMoveOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<IFileStatWithMetadata[]> { throw new Error('Method not implemented.'); }\n\n\tcopy(operations: ICopyOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<IFileStatWithMetadata[]> { throw new Error('Method not implemented.'); }\n}\n\nexport function mock<T>(): Ctor<T> {\n\treturn function () { } as any;\n}\n\nexport interface Ctor<T> {\n\tnew(): T;\n}\n\nexport class TestExtensionService extends NullExtensionService { }\n\nexport const TestProductService = { _serviceBrand: undefined, ...product };\n\nexport class TestActivityService implements IActivityService {\n\t_serviceBrand: undefined;\n\tonDidChangeActivity = Event.None;\n\tgetViewContainerActivities(viewContainerId: string): IActivity[] {\n\t\treturn [];\n\t}\n\tgetActivity(id: string): IActivity[] {\n\t\treturn [];\n\t}\n\tshowViewContainerActivity(viewContainerId: string, badge: IActivity): IDisposable {\n\t\treturn this;\n\t}\n\tshowViewActivity(viewId: string, badge: IActivity): IDisposable {\n\t\treturn this;\n\t}\n\tshowAccountsActivity(activity: IActivity): IDisposable {\n\t\treturn this;\n\t}\n\tshowGlobalActivity(activity: IActivity): IDisposable {\n\t\treturn this;\n\t}\n\n\tdispose() { }\n}\n\nexport const NullFilesConfigurationService = new class implements IFilesConfigurationService {\n\n\t_serviceBrand: undefined;\n\n\treadonly onDidChangeAutoSaveConfiguration = Event.None;\n\treadonly onDidChangeAutoSaveDisabled = Event.None;\n\treadonly onDidChangeReadonly = Event.None;\n\treadonly onDidChangeFilesAssociation = Event.None;\n\n\treadonly isHotExitEnabled = false;\n\treadonly hotExitConfiguration = undefined;\n\n\tgetAutoSaveConfiguration(): IAutoSaveConfiguration { throw new Error('Method not implemented.'); }\n\tgetAutoSaveMode(): IAutoSaveMode { throw new Error('Method not implemented.'); }\n\thasShortAutoSaveDelay(): boolean { throw new Error('Method not implemented.'); }\n\ttoggleAutoSave(): Promise<void> { throw new Error('Method not implemented.'); }\n\tdisableAutoSave(resourceOrEditor: URI | EditorInput): IDisposable { throw new Error('Method not implemented.'); }\n\tisReadonly(resource: URI, stat?: IBaseFileStat | undefined): boolean { return false; }\n\tasync updateReadonly(resource: URI, readonly: boolean | 'toggle' | 'reset'): Promise<void> { }\n\tpreventSaveConflicts(resource: URI, language?: string | undefined): boolean { throw new Error('Method not implemented.'); }\n};\n\nexport class TestWorkspaceTrustEnablementService implements IWorkspaceTrustEnablementService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private isEnabled: boolean = true) { }\n\n\tisWorkspaceTrustEnabled(): boolean {\n\t\treturn this.isEnabled;\n\t}\n}\n\nexport class TestWorkspaceTrustManagementService extends Disposable implements IWorkspaceTrustManagementService {\n\t_serviceBrand: undefined;\n\n\tprivate _onDidChangeTrust = this._register(new Emitter<boolean>());\n\tonDidChangeTrust = this._onDidChangeTrust.event;\n\n\tprivate _onDidChangeTrustedFolders = this._register(new Emitter<void>());\n\tonDidChangeTrustedFolders = this._onDidChangeTrustedFolders.event;\n\n\tprivate _onDidInitiateWorkspaceTrustRequestOnStartup = this._register(new Emitter<void>());\n\tonDidInitiateWorkspaceTrustRequestOnStartup = this._onDidInitiateWorkspaceTrustRequestOnStartup.event;\n\n\n\tconstructor(\n\t\tprivate trusted: boolean = true\n\t) {\n\t\tsuper();\n\t}\n\n\tget acceptsOutOfWorkspaceFiles(): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tset acceptsOutOfWorkspaceFiles(value: boolean) {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\taddWorkspaceTrustTransitionParticipant(participant: IWorkspaceTrustTransitionParticipant): IDisposable {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetTrustedUris(): URI[] {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tsetParentFolderTrust(trusted: boolean): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetUriTrustInfo(uri: URI): Promise<IWorkspaceTrustUriInfo> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync setTrustedUris(folders: URI[]): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync setUrisTrust(uris: URI[], trusted: boolean): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tcanSetParentFolderTrust(): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tcanSetWorkspaceTrust(): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tisWorkspaceTrusted(): boolean {\n\t\treturn this.trusted;\n\t}\n\n\tisWorkspaceTrustForced(): boolean {\n\t\treturn false;\n\t}\n\n\tget workspaceTrustInitialized(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tget workspaceResolved(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync setWorkspaceTrust(trusted: boolean): Promise<void> {\n\t\tif (this.trusted !== trusted) {\n\t\t\tthis.trusted = trusted;\n\t\t\tthis._onDidChangeTrust.fire(this.trusted);\n\t\t}\n\t}\n}\n\nexport class TestWorkspaceTrustRequestService extends Disposable implements IWorkspaceTrustRequestService {\n\t_serviceBrand: any;\n\n\tprivate readonly _onDidInitiateOpenFilesTrustRequest = this._register(new Emitter<void>());\n\treadonly onDidInitiateOpenFilesTrustRequest = this._onDidInitiateOpenFilesTrustRequest.event;\n\n\tprivate readonly _onDidInitiateWorkspaceTrustRequest = this._register(new Emitter<WorkspaceTrustRequestOptions>());\n\treadonly onDidInitiateWorkspaceTrustRequest = this._onDidInitiateWorkspaceTrustRequest.event;\n\n\tprivate readonly _onDidInitiateWorkspaceTrustRequestOnStartup = this._register(new Emitter<void>());\n\treadonly onDidInitiateWorkspaceTrustRequestOnStartup = this._onDidInitiateWorkspaceTrustRequestOnStartup.event;\n\n\tconstructor(private readonly _trusted: boolean) {\n\t\tsuper();\n\t}\n\n\trequestOpenUrisHandler = async (uris: URI[]) => {\n\t\treturn WorkspaceTrustUriResponse.Open;\n\t};\n\n\trequestOpenFilesTrust(uris: URI[]): Promise<WorkspaceTrustUriResponse> {\n\t\treturn this.requestOpenUrisHandler(uris);\n\t}\n\n\tasync completeOpenFilesTrustRequest(result: WorkspaceTrustUriResponse, saveResponse: boolean): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tcancelWorkspaceTrustRequest(): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync completeWorkspaceTrustRequest(trusted?: boolean): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync requestWorkspaceTrust(options?: WorkspaceTrustRequestOptions): Promise<boolean> {\n\t\treturn this._trusted;\n\t}\n\n\trequestWorkspaceTrustOnStartup(): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class TestMarkerService implements IMarkerService {\n\n\t_serviceBrand: undefined;\n\n\tonMarkerChanged = Event.None;\n\n\tgetStatistics(): MarkerStatistics { throw new Error('Method not implemented.'); }\n\tchangeOne(owner: string, resource: URI, markers: IMarkerData[]): void { }\n\tchangeAll(owner: string, data: IResourceMarker[]): void { }\n\tremove(owner: string, resources: URI[]): void { }\n\tread(filter?: { owner?: string | undefined; resource?: URI | undefined; severities?: number | undefined; take?: number | undefined } | undefined): IMarker[] { return []; }\n}\n"],
  "mappings": "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",
  "names": []
}
