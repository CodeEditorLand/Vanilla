import S from"../../../../../base/common/severity.js";import{localize as o}from"../../../../../nls.js";import{Action2 as l}from"../../../../../platform/actions/common/actions.js";import{IDialogService as p}from"../../../../../platform/dialogs/common/dialogs.js";import{IAuthenticationAccessService as v}from"../../../../services/authentication/browser/authenticationAccessService.js";import{IAuthenticationUsageService as A}from"../../../../services/authentication/browser/authenticationUsageService.js";import{IAuthenticationService as h}from"../../../../services/authentication/common/authentication.js";class j extends l{constructor(){super({id:"_signOutOfAccount",title:o("signOutOfAccount","Sign out of account"),f1:!1})}async run(i,{providerId:t,accountLabel:e}){const s=i.get(h),r=i.get(A),a=i.get(v),m=i.get(p);if(!t||!e)throw new Error("Invalid arguments. Expected: { providerId: string; accountLabel: string }");const g=(await s.getSessions(t)).filter(n=>n.account.label===e),c=r.readAccountUsages(t,e),{confirmed:u}=await m.confirm({type:S.Info,message:c.length?o("signOutMessage",`The account '{0}' has been used by: 

{1}

 Sign out from these extensions?`,e,c.map(n=>n.extensionName).join(`
`)):o("signOutMessageSimple","Sign out of '{0}'?",e),primaryButton:o({key:"signOut",comment:["&& denotes a mnemonic"]},"&&Sign Out")});if(u){const n=g.map(f=>s.removeSession(t,f.id));await Promise.all(n),r.removeAccountUsage(t,e),a.removeAllowedExtensions(t,e)}}}export{j as SignOutOfAccountAction};
