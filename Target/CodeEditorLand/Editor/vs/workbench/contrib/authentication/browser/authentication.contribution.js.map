{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/authentication/browser/authentication.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isFalsyOrWhitespace } from \"../../../../base/common/strings.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { IExtensionManifest } from \"../../../../platform/extensions/common/extensions.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\ttype AuthenticationProviderInformation,\n\tIAuthenticationService,\n} from \"../../../services/authentication/common/authentication.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../../services/environment/browser/environmentService.js\";\nimport {\n\tExtensions,\n\ttype IExtensionFeatureTableRenderer,\n\ttype IExtensionFeaturesRegistry,\n\ttype IRenderedData,\n\ttype IRowData,\n\ttype ITableData,\n} from \"../../../services/extensionManagement/common/extensionFeatures.js\";\nimport { ExtensionsRegistry } from \"../../../services/extensions/common/extensionsRegistry.js\";\nimport { ManageTrustedExtensionsForAccountAction } from \"./actions/manageTrustedExtensionsForAccountAction.js\";\nimport { SignOutOfAccountAction } from \"./actions/signOutOfAccountAction.js\";\n\nconst codeExchangeProxyCommand = CommandsRegistry.registerCommand(\n\t\"workbench.getCodeExchangeProxyEndpoints\",\n\t(accessor, _) => {\n\t\tconst environmentService = accessor.get(\n\t\t\tIBrowserWorkbenchEnvironmentService,\n\t\t);\n\t\treturn environmentService.options?.codeExchangeProxyEndpoints;\n\t},\n);\n\nconst authenticationDefinitionSchema: IJSONSchema = {\n\ttype: \"object\",\n\tadditionalProperties: false,\n\tproperties: {\n\t\tid: {\n\t\t\ttype: \"string\",\n\t\t\tdescription: localize(\n\t\t\t\t\"authentication.id\",\n\t\t\t\t\"The id of the authentication provider.\",\n\t\t\t),\n\t\t},\n\t\tlabel: {\n\t\t\ttype: \"string\",\n\t\t\tdescription: localize(\n\t\t\t\t\"authentication.label\",\n\t\t\t\t\"The human readable name of the authentication provider.\",\n\t\t\t),\n\t\t},\n\t},\n};\n\nconst authenticationExtPoint = ExtensionsRegistry.registerExtensionPoint<\n\tAuthenticationProviderInformation[]\n>({\n\textensionPoint: \"authentication\",\n\tjsonSchema: {\n\t\tdescription: localize(\n\t\t\t{\n\t\t\t\tkey: \"authenticationExtensionPoint\",\n\t\t\t\tcomment: [`'Contributes' means adds here`],\n\t\t\t},\n\t\t\t\"Contributes authentication\",\n\t\t),\n\t\ttype: \"array\",\n\t\titems: authenticationDefinitionSchema,\n\t},\n\tactivationEventsGenerator: (authenticationProviders, result) => {\n\t\tfor (const authenticationProvider of authenticationProviders) {\n\t\t\tif (authenticationProvider.id) {\n\t\t\t\tresult.push(\n\t\t\t\t\t`onAuthenticationRequest:${authenticationProvider.id}`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n});\n\nclass AuthenticationDataRenderer\n\textends Disposable\n\timplements IExtensionFeatureTableRenderer\n{\n\treadonly type = \"table\";\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.contributes?.authentication;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<ITableData> {\n\t\tconst authentication = manifest.contributes?.authentication || [];\n\t\tif (!authentication.length) {\n\t\t\treturn { data: { headers: [], rows: [] }, dispose: () => {} };\n\t\t}\n\n\t\tconst headers = [\n\t\t\tlocalize(\"authenticationlabel\", \"Label\"),\n\t\t\tlocalize(\"authenticationid\", \"ID\"),\n\t\t];\n\n\t\tconst rows: IRowData[][] = authentication\n\t\t\t.sort((a, b) => a.label.localeCompare(b.label))\n\t\t\t.map((auth) => {\n\t\t\t\treturn [auth.label, auth.id];\n\t\t\t});\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\theaders,\n\t\t\t\trows,\n\t\t\t},\n\t\t\tdispose: () => {},\n\t\t};\n\t}\n}\n\nconst extensionFeature = Registry.as<IExtensionFeaturesRegistry>(\n\tExtensions.ExtensionFeaturesRegistry,\n).registerExtensionFeature({\n\tid: \"authentication\",\n\tlabel: localize(\"authentication\", \"Authentication\"),\n\taccess: {\n\t\tcanToggle: false,\n\t},\n\trenderer: new SyncDescriptor(AuthenticationDataRenderer),\n});\n\nexport class AuthenticationContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic ID = \"workbench.contrib.authentication\";\n\n\tprivate _placeholderMenuItem: IDisposable | undefined =\n\t\tMenuRegistry.appendMenuItem(MenuId.AccountsContext, {\n\t\t\tcommand: {\n\t\t\t\tid: \"noAuthenticationProviders\",\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"authentication.Placeholder\",\n\t\t\t\t\t\"No accounts requested yet...\",\n\t\t\t\t),\n\t\t\t\tprecondition: ContextKeyExpr.false(),\n\t\t\t},\n\t\t});\n\n\tconstructor(\n\t\t@IAuthenticationService\n\t\tprivate readonly _authenticationService: IAuthenticationService,\n\t\t@IBrowserWorkbenchEnvironmentService\n\t\tprivate readonly _environmentService: IBrowserWorkbenchEnvironmentService,\n\t) {\n\t\tsuper();\n\t\tthis._register(codeExchangeProxyCommand);\n\t\tthis._register(extensionFeature);\n\n\t\t// Clear the placeholder menu item if there are already providers registered.\n\t\tif (_authenticationService.getProviderIds().length) {\n\t\t\tthis._clearPlaceholderMenuItem();\n\t\t}\n\t\tthis._registerHandlers();\n\t\tthis._registerAuthenticationExtentionPointHandler();\n\t\tthis._registerEnvContributedAuthenticationProviders();\n\t\tthis._registerActions();\n\t}\n\n\tprivate _registerAuthenticationExtentionPointHandler(): void {\n\t\tauthenticationExtPoint.setHandler((extensions, { added, removed }) => {\n\t\t\tadded.forEach((point) => {\n\t\t\t\tfor (const provider of point.value) {\n\t\t\t\t\tif (isFalsyOrWhitespace(provider.id)) {\n\t\t\t\t\t\tpoint.collector.error(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"authentication.missingId\",\n\t\t\t\t\t\t\t\t\"An authentication contribution must specify an id.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isFalsyOrWhitespace(provider.label)) {\n\t\t\t\t\t\tpoint.collector.error(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"authentication.missingLabel\",\n\t\t\t\t\t\t\t\t\"An authentication contribution must specify a label.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._authenticationService.declaredProviders.some(\n\t\t\t\t\t\t\t(p) => p.id === provider.id,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tpoint.collector.error(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"authentication.idConflict\",\n\t\t\t\t\t\t\t\t\"This authentication id '{0}' has already been registered\",\n\t\t\t\t\t\t\t\tprovider.id,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._authenticationService.registerDeclaredAuthenticationProvider(\n\t\t\t\t\t\t\tprovider,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst removedExtPoints = removed.flatMap((r) => r.value);\n\t\t\tremovedExtPoints.forEach((point) => {\n\t\t\t\tconst provider =\n\t\t\t\t\tthis._authenticationService.declaredProviders.find(\n\t\t\t\t\t\t(provider) => provider.id === point.id,\n\t\t\t\t\t);\n\t\t\t\tif (provider) {\n\t\t\t\t\tthis._authenticationService.unregisterDeclaredAuthenticationProvider(\n\t\t\t\t\t\tprovider.id,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _registerEnvContributedAuthenticationProviders(): void {\n\t\tif (\n\t\t\t!this._environmentService.options?.authenticationProviders?.length\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const provider of this._environmentService.options\n\t\t\t.authenticationProviders) {\n\t\t\tthis._authenticationService.registerAuthenticationProvider(\n\t\t\t\tprovider.id,\n\t\t\t\tprovider,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _registerHandlers(): void {\n\t\tthis._register(\n\t\t\tthis._authenticationService.onDidRegisterAuthenticationProvider(\n\t\t\t\t(_e) => {\n\t\t\t\t\tthis._clearPlaceholderMenuItem();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._authenticationService.onDidUnregisterAuthenticationProvider(\n\t\t\t\t(_e) => {\n\t\t\t\t\tif (!this._authenticationService.getProviderIds().length) {\n\t\t\t\t\t\tthis._placeholderMenuItem = MenuRegistry.appendMenuItem(\n\t\t\t\t\t\t\tMenuId.AccountsContext,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\t\tid: \"noAuthenticationProviders\",\n\t\t\t\t\t\t\t\t\ttitle: localize(\"loading\", \"Loading...\"),\n\t\t\t\t\t\t\t\t\tprecondition: ContextKeyExpr.false(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _registerActions(): void {\n\t\tthis._register(registerAction2(SignOutOfAccountAction));\n\t\tthis._register(\n\t\t\tregisterAction2(ManageTrustedExtensionsForAccountAction),\n\t\t);\n\t}\n\n\tprivate _clearPlaceholderMenuItem(): void {\n\t\tthis._placeholderMenuItem?.dispose();\n\t\tthis._placeholderMenuItem = undefined;\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tAuthenticationContribution.ID,\n\tAuthenticationContribution,\n\tWorkbenchPhase.AfterRestored,\n);\n"],
  "mappings": "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",
  "names": ["provider"]
}
