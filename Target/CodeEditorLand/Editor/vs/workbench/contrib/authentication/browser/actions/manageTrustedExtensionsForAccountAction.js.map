{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/authentication/browser/actions/manageTrustedExtensionsForAccountAction.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { fromNow } from \"../../../../../base/common/date.js\";\nimport { DisposableStore } from \"../../../../../base/common/lifecycle.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport { Action2 } from \"../../../../../platform/actions/common/actions.js\";\nimport { IDialogService } from \"../../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { IProductService } from \"../../../../../platform/product/common/productService.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../../../platform/quickinput/common/quickInput.js\";\nimport { IAuthenticationAccessService } from \"../../../../services/authentication/browser/authenticationAccessService.js\";\nimport { IAuthenticationUsageService } from \"../../../../services/authentication/browser/authenticationUsageService.js\";\nimport {\n\ttype AllowedExtension,\n\tIAuthenticationService,\n} from \"../../../../services/authentication/common/authentication.js\";\nimport { IExtensionService } from \"../../../../services/extensions/common/extensions.js\";\n\nexport class ManageTrustedExtensionsForAccountAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"_manageTrustedExtensionsForAccount\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"manageTrustedExtensionsForAccount\",\n\t\t\t\t\"Manage Trusted Extensions For Account\",\n\t\t\t),\n\t\t\tcategory: localize2(\"accounts\", \"Accounts\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride run(\n\t\taccessor: ServicesAccessor,\n\t\toptions?: { providerId: string; accountLabel: string },\n\t): Promise<void> {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\treturn instantiationService\n\t\t\t.createInstance(ManageTrustedExtensionsForAccountActionImpl)\n\t\t\t.run(options);\n\t}\n}\n\ninterface TrustedExtensionsQuickPickItem extends IQuickPickItem {\n\textension: AllowedExtension;\n\tlastUsed?: number;\n}\n\nclass ManageTrustedExtensionsForAccountActionImpl {\n\tconstructor(\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IExtensionService\n\t\tprivate readonly _extensionService: IExtensionService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IQuickInputService\n\t\tprivate readonly _quickInputService: IQuickInputService,\n\t\t@IAuthenticationService\n\t\tprivate readonly _authenticationService: IAuthenticationService,\n\t\t@IAuthenticationUsageService\n\t\tprivate readonly _authenticationUsageService: IAuthenticationUsageService,\n\t\t@IAuthenticationAccessService\n\t\tprivate readonly _authenticationAccessService: IAuthenticationAccessService,\n\t) {}\n\n\tasync run(options?: { providerId: string; accountLabel: string }) {\n\t\tconst { providerId, accountLabel } =\n\t\t\tawait this._resolveProviderAndAccountLabel(\n\t\t\t\toptions?.providerId,\n\t\t\t\toptions?.accountLabel,\n\t\t\t);\n\t\tif (!providerId || !accountLabel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = await this._getItems(providerId, accountLabel);\n\t\tif (!items.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst disposables = new DisposableStore();\n\t\tconst picker = this._createQuickPick(\n\t\t\tdisposables,\n\t\t\tproviderId,\n\t\t\taccountLabel,\n\t\t);\n\t\tpicker.items = items;\n\t\tpicker.selectedItems = items.filter(\n\t\t\t(i): i is TrustedExtensionsQuickPickItem =>\n\t\t\t\ti.type !== \"separator\" && !!i.picked,\n\t\t);\n\t\tpicker.show();\n\t}\n\n\tprivate async _resolveProviderAndAccountLabel(\n\t\tproviderId: string | undefined,\n\t\taccountLabel: string | undefined,\n\t) {\n\t\tif (!providerId || !accountLabel) {\n\t\t\tconst accounts = new Array<{\n\t\t\t\tproviderId: string;\n\t\t\t\tproviderLabel: string;\n\t\t\t\taccountLabel: string;\n\t\t\t}>();\n\t\t\tfor (const id of this._authenticationService.getProviderIds()) {\n\t\t\t\tconst providerLabel =\n\t\t\t\t\tthis._authenticationService.getProvider(id).label;\n\t\t\t\tconst sessions =\n\t\t\t\t\tawait this._authenticationService.getSessions(id);\n\t\t\t\tconst uniqueAccountLabels = new Set<string>();\n\t\t\t\tfor (const session of sessions) {\n\t\t\t\t\tif (!uniqueAccountLabels.has(session.account.label)) {\n\t\t\t\t\t\tuniqueAccountLabels.add(session.account.label);\n\t\t\t\t\t\taccounts.push({\n\t\t\t\t\t\t\tproviderId: id,\n\t\t\t\t\t\t\tproviderLabel,\n\t\t\t\t\t\t\taccountLabel: session.account.label,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst pick = await this._quickInputService.pick(\n\t\t\t\taccounts.map((account) => ({\n\t\t\t\t\tproviderId: account.providerId,\n\t\t\t\t\tlabel: account.accountLabel,\n\t\t\t\t\tdescription: account.providerLabel,\n\t\t\t\t})),\n\t\t\t\t{\n\t\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\t\"pickAccount\",\n\t\t\t\t\t\t\"Pick an account to manage trusted extensions for\",\n\t\t\t\t\t),\n\t\t\t\t\tmatchOnDescription: true,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (pick) {\n\t\t\t\tproviderId = pick.providerId;\n\t\t\t\taccountLabel = pick.label;\n\t\t\t} else {\n\t\t\t\treturn { providerId: undefined, accountLabel: undefined };\n\t\t\t}\n\t\t}\n\t\treturn { providerId, accountLabel };\n\t}\n\n\tprivate async _getItems(providerId: string, accountLabel: string) {\n\t\tconst allowedExtensions =\n\t\t\tthis._authenticationAccessService.readAllowedExtensions(\n\t\t\t\tproviderId,\n\t\t\t\taccountLabel,\n\t\t\t);\n\t\tconst trustedExtensionAuthAccess =\n\t\t\tthis._productService.trustedExtensionAuthAccess;\n\t\tconst trustedExtensionIds =\n\t\t\t// Case 1: trustedExtensionAuthAccess is an array\n\t\t\tArray.isArray(trustedExtensionAuthAccess)\n\t\t\t\t? trustedExtensionAuthAccess\n\t\t\t\t: // Case 2: trustedExtensionAuthAccess is an object\n\t\t\t\t\ttypeof trustedExtensionAuthAccess === \"object\"\n\t\t\t\t\t? (trustedExtensionAuthAccess[providerId] ?? [])\n\t\t\t\t\t: [];\n\t\tfor (const extensionId of trustedExtensionIds) {\n\t\t\tconst allowedExtension = allowedExtensions.find(\n\t\t\t\t(ext) => ext.id === extensionId,\n\t\t\t);\n\t\t\tif (allowedExtension) {\n\t\t\t\t// Update the extension to be allowed\n\t\t\t\tallowedExtension.allowed = true;\n\t\t\t\tallowedExtension.trusted = true;\n\t\t\t} else {\n\t\t\t\t// Add the extension to the allowedExtensions list\n\t\t\t\tconst extension =\n\t\t\t\t\tawait this._extensionService.getExtension(extensionId);\n\t\t\t\tif (extension) {\n\t\t\t\t\tallowedExtensions.push({\n\t\t\t\t\t\tid: extensionId,\n\t\t\t\t\t\tname: extension.displayName || extension.name,\n\t\t\t\t\t\tallowed: true,\n\t\t\t\t\t\ttrusted: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!allowedExtensions.length) {\n\t\t\tthis._dialogService.info(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"noTrustedExtensions\",\n\t\t\t\t\t\"This account has not been used by any extensions.\",\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn [];\n\t\t}\n\n\t\tconst usages = this._authenticationUsageService.readAccountUsages(\n\t\t\tproviderId,\n\t\t\taccountLabel,\n\t\t);\n\t\tconst trustedExtensions = [];\n\t\tconst otherExtensions = [];\n\t\tfor (const extension of allowedExtensions) {\n\t\t\tconst usage = usages.find(\n\t\t\t\t(usage) => extension.id === usage.extensionId,\n\t\t\t);\n\t\t\textension.lastUsed = usage?.lastUsed;\n\t\t\tif (extension.trusted) {\n\t\t\t\ttrustedExtensions.push(extension);\n\t\t\t} else {\n\t\t\t\totherExtensions.push(extension);\n\t\t\t}\n\t\t}\n\n\t\tconst sortByLastUsed = (a: AllowedExtension, b: AllowedExtension) =>\n\t\t\t(b.lastUsed || 0) - (a.lastUsed || 0);\n\n\t\tconst items = [\n\t\t\t...otherExtensions.sort(sortByLastUsed).map(this._toQuickPickItem),\n\t\t\t{\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: localize(\"trustedExtensions\", \"Trusted by Microsoft\"),\n\t\t\t} satisfies IQuickPickSeparator,\n\t\t\t...trustedExtensions\n\t\t\t\t.sort(sortByLastUsed)\n\t\t\t\t.map(this._toQuickPickItem),\n\t\t];\n\n\t\treturn items;\n\t}\n\n\tprivate _toQuickPickItem(\n\t\textension: AllowedExtension,\n\t): TrustedExtensionsQuickPickItem {\n\t\tconst lastUsed = extension.lastUsed;\n\t\tconst description = lastUsed\n\t\t\t? localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"accountLastUsedDate\",\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'The placeholder {0} is a string with time information, such as \"3 days ago\"',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t\"Last used this account {0}\",\n\t\t\t\t\tfromNow(lastUsed, true),\n\t\t\t\t)\n\t\t\t: localize(\"notUsed\", \"Has not used this account\");\n\t\tlet tooltip: string | undefined;\n\t\tlet disabled: boolean | undefined;\n\t\tif (extension.trusted) {\n\t\t\ttooltip = localize(\n\t\t\t\t\"trustedExtensionTooltip\",\n\t\t\t\t\"This extension is trusted by Microsoft and\\nalways has access to this account\",\n\t\t\t);\n\t\t\tdisabled = true;\n\t\t}\n\t\treturn {\n\t\t\tlabel: extension.name,\n\t\t\textension,\n\t\t\tdescription,\n\t\t\ttooltip,\n\t\t\tdisabled,\n\t\t\tpicked: extension.allowed === undefined || extension.allowed,\n\t\t};\n\t}\n\n\tprivate _createQuickPick(\n\t\tdisposableStore: DisposableStore,\n\t\tproviderId: string,\n\t\taccountLabel: string,\n\t) {\n\t\tconst quickPick = disposableStore.add(\n\t\t\tthis._quickInputService.createQuickPick<TrustedExtensionsQuickPickItem>(\n\t\t\t\t{ useSeparators: true },\n\t\t\t),\n\t\t);\n\t\tquickPick.canSelectMany = true;\n\t\tquickPick.customButton = true;\n\t\tquickPick.customLabel = localize(\n\t\t\t\"manageTrustedExtensions.cancel\",\n\t\t\t\"Cancel\",\n\t\t);\n\n\t\tquickPick.title = localize(\n\t\t\t\"manageTrustedExtensions\",\n\t\t\t\"Manage Trusted Extensions\",\n\t\t);\n\t\tquickPick.placeholder = localize(\n\t\t\t\"manageExtensions\",\n\t\t\t\"Choose which extensions can access this account\",\n\t\t);\n\n\t\tdisposableStore.add(\n\t\t\tquickPick.onDidAccept(() => {\n\t\t\t\tconst updatedAllowedList = quickPick.items\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(item): item is TrustedExtensionsQuickPickItem =>\n\t\t\t\t\t\t\titem.type !== \"separator\",\n\t\t\t\t\t)\n\t\t\t\t\t.map((i) => i.extension);\n\n\t\t\t\tconst allowedExtensionsSet = new Set(\n\t\t\t\t\tquickPick.selectedItems.map((i) => i.extension),\n\t\t\t\t);\n\t\t\t\tupdatedAllowedList.forEach((extension) => {\n\t\t\t\t\textension.allowed = allowedExtensionsSet.has(extension);\n\t\t\t\t});\n\t\t\t\tthis._authenticationAccessService.updateAllowedExtensions(\n\t\t\t\t\tproviderId,\n\t\t\t\t\taccountLabel,\n\t\t\t\t\tupdatedAllowedList,\n\t\t\t\t);\n\t\t\t\tquickPick.hide();\n\t\t\t}),\n\t\t);\n\n\t\tdisposableStore.add(\n\t\t\tquickPick.onDidHide(() => {\n\t\t\t\tdisposableStore.dispose();\n\t\t\t}),\n\t\t);\n\n\t\tdisposableStore.add(\n\t\t\tquickPick.onDidCustom(() => {\n\t\t\t\tquickPick.hide();\n\t\t\t}),\n\t\t);\n\t\treturn quickPick;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["usage"]
}
