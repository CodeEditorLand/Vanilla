{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/authentication/browser/actions/signOutOfAccountAction.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport Severity from \"../../../../../base/common/severity.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport { Action2 } from \"../../../../../platform/actions/common/actions.js\";\nimport { IDialogService } from \"../../../../../platform/dialogs/common/dialogs.js\";\nimport type { ServicesAccessor } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { IAuthenticationAccessService } from \"../../../../services/authentication/browser/authenticationAccessService.js\";\nimport { IAuthenticationUsageService } from \"../../../../services/authentication/browser/authenticationUsageService.js\";\nimport { IAuthenticationService } from \"../../../../services/authentication/common/authentication.js\";\n\nexport class SignOutOfAccountAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"_signOutOfAccount\",\n\t\t\ttitle: localize(\"signOutOfAccount\", \"Sign out of account\"),\n\t\t\tf1: false,\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\t{\n\t\t\tproviderId,\n\t\t\taccountLabel,\n\t\t}: { providerId: string; accountLabel: string },\n\t): Promise<void> {\n\t\tconst authenticationService = accessor.get(IAuthenticationService);\n\t\tconst authenticationUsageService = accessor.get(\n\t\t\tIAuthenticationUsageService,\n\t\t);\n\t\tconst authenticationAccessService = accessor.get(\n\t\t\tIAuthenticationAccessService,\n\t\t);\n\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\tif (!providerId || !accountLabel) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Invalid arguments. Expected: { providerId: string; accountLabel: string }\",\n\t\t\t);\n\t\t}\n\n\t\tconst allSessions = await authenticationService.getSessions(providerId);\n\t\tconst sessions = allSessions.filter(\n\t\t\t(s) => s.account.label === accountLabel,\n\t\t);\n\n\t\tconst accountUsages = authenticationUsageService.readAccountUsages(\n\t\t\tproviderId,\n\t\t\taccountLabel,\n\t\t);\n\n\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\ttype: Severity.Info,\n\t\t\tmessage: accountUsages.length\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"signOutMessage\",\n\t\t\t\t\t\t\"The account '{0}' has been used by: \\n\\n{1}\\n\\n Sign out from these extensions?\",\n\t\t\t\t\t\taccountLabel,\n\t\t\t\t\t\taccountUsages\n\t\t\t\t\t\t\t.map((usage) => usage.extensionName)\n\t\t\t\t\t\t\t.join(\"\\n\"),\n\t\t\t\t\t)\n\t\t\t\t: localize(\n\t\t\t\t\t\t\"signOutMessageSimple\",\n\t\t\t\t\t\t\"Sign out of '{0}'?\",\n\t\t\t\t\t\taccountLabel,\n\t\t\t\t\t),\n\t\t\tprimaryButton: localize(\n\t\t\t\t{ key: \"signOut\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Sign Out\",\n\t\t\t),\n\t\t});\n\n\t\tif (confirmed) {\n\t\t\tconst removeSessionPromises = sessions.map((session) =>\n\t\t\t\tauthenticationService.removeSession(providerId, session.id),\n\t\t\t);\n\t\t\tawait Promise.all(removeSessionPromises);\n\t\t\tauthenticationUsageService.removeAccountUsage(\n\t\t\t\tproviderId,\n\t\t\t\taccountLabel,\n\t\t\t);\n\t\t\tauthenticationAccessService.removeAllowedExtensions(\n\t\t\t\tproviderId,\n\t\t\t\taccountLabel,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,OAAO,cAAc;AACrB,SAAS,gBAAgB;AACzB,SAAS,eAAe;AACxB,SAAS,sBAAsB;AAE/B,SAAS,oCAAoC;AAC7C,SAAS,mCAAmC;AAC5C,SAAS,8BAA8B;AAEhC,MAAM,+BAA+B,QAAQ;AAAA,EAdpD,OAcoD;AAAA;AAAA;AAAA,EACnD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,SAAS,oBAAoB,qBAAqB;AAAA,MACzD,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IACd,UACA;AAAA,IACC;AAAA,IACA;AAAA,EACD,GACgB;AAChB,UAAM,wBAAwB,SAAS,IAAI,sBAAsB;AACjE,UAAM,6BAA6B,SAAS;AAAA,MAC3C;AAAA,IACD;AACA,UAAM,8BAA8B,SAAS;AAAA,MAC5C;AAAA,IACD;AACA,UAAM,gBAAgB,SAAS,IAAI,cAAc;AAEjD,QAAI,CAAC,cAAc,CAAC,cAAc;AACjC,YAAM,IAAI;AAAA,QACT;AAAA,MACD;AAAA,IACD;AAEA,UAAM,cAAc,MAAM,sBAAsB,YAAY,UAAU;AACtE,UAAM,WAAW,YAAY;AAAA,MAC5B,CAAC,MAAM,EAAE,QAAQ,UAAU;AAAA,IAC5B;AAEA,UAAM,gBAAgB,2BAA2B;AAAA,MAChD;AAAA,MACA;AAAA,IACD;AAEA,UAAM,EAAE,UAAU,IAAI,MAAM,cAAc,QAAQ;AAAA,MACjD,MAAM,SAAS;AAAA,MACf,SAAS,cAAc,SACpB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,cACE,IAAI,CAAC,UAAU,MAAM,aAAa,EAClC,KAAK,IAAI;AAAA,MACZ,IACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACF,eAAe;AAAA,QACd,EAAE,KAAK,WAAW,SAAS,CAAC,uBAAuB,EAAE;AAAA,QACrD;AAAA,MACD;AAAA,IACD,CAAC;AAED,QAAI,WAAW;AACd,YAAM,wBAAwB,SAAS;AAAA,QAAI,CAAC,YAC3C,sBAAsB,cAAc,YAAY,QAAQ,EAAE;AAAA,MAC3D;AACA,YAAM,QAAQ,IAAI,qBAAqB;AACvC,iCAA2B;AAAA,QAC1B;AAAA,QACA;AAAA,MACD;AACA,kCAA4B;AAAA,QAC3B;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
