{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/tags/electron-sandbox/workspaceTags.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { sha1Hex } from \"../../../../base/browser/hash.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { isWindows } from \"../../../../base/common/platform.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport {\n\tIDiagnosticsService,\n\ttype IWorkspaceInformation,\n} from \"../../../../platform/diagnostics/common/diagnostics.js\";\nimport {\n\tAllowedSecondLevelDomains,\n\tgetDomainsOfRemotes,\n} from \"../../../../platform/extensionManagement/common/configRemotes.js\";\nimport {\n\tIFileService,\n\ttype IFileStat,\n} from \"../../../../platform/files/common/files.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { IRequestService } from \"../../../../platform/request/common/request.js\";\nimport {\n\tITelemetryService,\n\tTelemetryLevel,\n} from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { ITextFileService } from \"../../../services/textfile/common/textfiles.js\";\nimport {\n\tIWorkspaceTagsService,\n\ttype Tags,\n\tgetHashedRemotesFromConfig as baseGetHashedRemotesFromConfig,\n} from \"../common/workspaceTags.js\";\n\nexport async function getHashedRemotesFromConfig(\n\ttext: string,\n\tstripEndingDotGit = false,\n): Promise<string[]> {\n\treturn baseGetHashedRemotesFromConfig(text, stripEndingDotGit, (remote) =>\n\t\tsha1Hex(remote),\n\t);\n}\n\nexport class WorkspaceTags implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IWorkspaceTagsService\n\t\tprivate readonly workspaceTagsService: IWorkspaceTagsService,\n\t\t@IDiagnosticsService\n\t\tprivate readonly diagnosticsService: IDiagnosticsService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@INativeHostService\n\t\tprivate readonly nativeHostService: INativeHostService,\n\t) {\n\t\tif (this.telemetryService.telemetryLevel === TelemetryLevel.USAGE) {\n\t\t\tthis.report();\n\t\t}\n\t}\n\n\tprivate async report(): Promise<void> {\n\t\t// Windows-only Edition Event\n\t\tthis.reportWindowsEdition();\n\n\t\t// Workspace Tags\n\t\tthis.workspaceTagsService.getTags().then(\n\t\t\t(tags) => this.reportWorkspaceTags(tags),\n\t\t\t(error) => onUnexpectedError(error),\n\t\t);\n\n\t\t// Cloud Stats\n\t\tthis.reportCloudStats();\n\n\t\tthis.reportProxyStats();\n\n\t\tthis.getWorkspaceInformation().then((stats) =>\n\t\t\tthis.diagnosticsService.reportWorkspaceStats(stats),\n\t\t);\n\t}\n\n\tprivate async reportWindowsEdition(): Promise<void> {\n\t\tif (!isWindows) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet value = await this.nativeHostService.windowsGetStringRegKey(\n\t\t\t\"HKEY_LOCAL_MACHINE\",\n\t\t\t\"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\",\n\t\t\t\"EditionID\",\n\t\t);\n\t\tif (value === undefined) {\n\t\t\tvalue = \"Unknown\";\n\t\t}\n\n\t\tthis.telemetryService.publicLog2<\n\t\t\t{ edition: string },\n\t\t\t{\n\t\t\t\towner: \"sbatten\";\n\t\t\t\tcomment: \"Information about the Windows edition.\";\n\t\t\t\tedition: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"BusinessInsight\";\n\t\t\t\t\tcomment: \"The Windows edition.\";\n\t\t\t\t};\n\t\t\t}\n\t\t>(\"windowsEdition\", { edition: value });\n\t}\n\n\tprivate async getWorkspaceInformation(): Promise<IWorkspaceInformation> {\n\t\tconst workspace = this.contextService.getWorkspace();\n\t\tconst state = this.contextService.getWorkbenchState();\n\t\tconst telemetryId =\n\t\t\tawait this.workspaceTagsService.getTelemetryWorkspaceId(\n\t\t\t\tworkspace,\n\t\t\t\tstate,\n\t\t\t);\n\n\t\treturn {\n\t\t\tid: workspace.id,\n\t\t\ttelemetryId,\n\t\t\trendererSessionId: this.telemetryService.sessionId,\n\t\t\tfolders: workspace.folders,\n\t\t\ttransient: workspace.transient,\n\t\t\tconfiguration: workspace.configuration,\n\t\t};\n\t}\n\n\tprivate reportWorkspaceTags(tags: Tags): void {\n\t\t/* __GDPR__\n\t\t\t\"workspce.tags\" : {\n\t\t\t\t\"owner\": \"lramos15\",\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${WorkspaceTags}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog(\"workspce.tags\", tags);\n\t}\n\n\tprivate reportRemoteDomains(workspaceUris: URI[]): void {\n\t\tPromise.all<string[]>(\n\t\t\tworkspaceUris.map((workspaceUri) => {\n\t\t\t\tconst path = workspaceUri.path;\n\t\t\t\tconst uri = workspaceUri.with({\n\t\t\t\t\tpath: `${path !== \"/\" ? path : \"\"}/.git/config`,\n\t\t\t\t});\n\t\t\t\treturn this.fileService.exists(uri).then((exists) => {\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn this.textFileService\n\t\t\t\t\t\t.read(uri, { acceptTextOnly: true })\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t(content) =>\n\t\t\t\t\t\t\t\tgetDomainsOfRemotes(\n\t\t\t\t\t\t\t\t\tcontent.value,\n\t\t\t\t\t\t\t\t\tAllowedSecondLevelDomains,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t(err) => [], // ignore missing or binary file\n\t\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}),\n\t\t).then((domains) => {\n\t\t\tconst set = domains.reduce(\n\t\t\t\t(set, list) => list.reduce((set, item) => set.add(item), set),\n\t\t\t\tnew Set<string>(),\n\t\t\t);\n\t\t\tconst list: string[] = [];\n\t\t\tset.forEach((item) => list.push(item));\n\t\t\t/* __GDPR__\n\t\t\t\t\"workspace.remotes\" : {\n\t\t\t\t\t\"owner\": \"lramos15\",\n\t\t\t\t\t\"domains\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryService.publicLog(\"workspace.remotes\", {\n\t\t\t\tdomains: list.sort(),\n\t\t\t});\n\t\t}, onUnexpectedError);\n\t}\n\n\tprivate reportRemotes(workspaceUris: URI[]): void {\n\t\tPromise.all<string[]>(\n\t\t\tworkspaceUris.map((workspaceUri) => {\n\t\t\t\treturn this.workspaceTagsService.getHashedRemotesFromUri(\n\t\t\t\t\tworkspaceUri,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}),\n\t\t).then(() => {}, onUnexpectedError);\n\t}\n\n\t/* __GDPR__FRAGMENT__\n\t\t\"AzureTags\" : {\n\t\t\t\"node\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t}\n\t*/\n\tprivate reportAzureNode(workspaceUris: URI[], tags: Tags): Promise<Tags> {\n\t\t// TODO: should also work for `node_modules` folders several levels down\n\t\tconst uris = workspaceUris.map((workspaceUri) => {\n\t\t\tconst path = workspaceUri.path;\n\t\t\treturn workspaceUri.with({\n\t\t\t\tpath: `${path !== \"/\" ? path : \"\"}/node_modules`,\n\t\t\t});\n\t\t});\n\t\treturn this.fileService\n\t\t\t.resolveAll(uris.map((resource) => ({ resource })))\n\t\t\t.then(\n\t\t\t\t(results) => {\n\t\t\t\t\tconst names = (<IFileStat[]>[])\n\t\t\t\t\t\t.concat(\n\t\t\t\t\t\t\t...results.map((result) =>\n\t\t\t\t\t\t\t\tresult.success\n\t\t\t\t\t\t\t\t\t? result.stat!.children || []\n\t\t\t\t\t\t\t\t\t: [],\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.map((c) => c.name);\n\t\t\t\t\tconst referencesAzure = WorkspaceTags.searchArray(\n\t\t\t\t\t\tnames,\n\t\t\t\t\t\t/azure/i,\n\t\t\t\t\t);\n\t\t\t\t\tif (referencesAzure) {\n\t\t\t\t\t\ttags[\"node\"] = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn tags;\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\treturn tags;\n\t\t\t\t},\n\t\t\t);\n\t}\n\n\tprivate static searchArray(\n\t\tarr: string[],\n\t\tregEx: RegExp,\n\t): boolean | undefined {\n\t\treturn arr.some((v) => v.search(regEx) > -1) || undefined;\n\t}\n\n\t/* __GDPR__FRAGMENT__\n\t\t\"AzureTags\" : {\n\t\t\t\"java\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t}\n\t*/\n\tprivate reportAzureJava(workspaceUris: URI[], tags: Tags): Promise<Tags> {\n\t\treturn Promise.all(\n\t\t\tworkspaceUris.map((workspaceUri) => {\n\t\t\t\tconst path = workspaceUri.path;\n\t\t\t\tconst uri = workspaceUri.with({\n\t\t\t\t\tpath: `${path !== \"/\" ? path : \"\"}/pom.xml`,\n\t\t\t\t});\n\t\t\t\treturn this.fileService.exists(uri).then((exists) => {\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.textFileService\n\t\t\t\t\t\t.read(uri, { acceptTextOnly: true })\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t(content) => !!content.value.match(/azure/i),\n\t\t\t\t\t\t\t(err) => false,\n\t\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}),\n\t\t).then((javas) => {\n\t\t\tif (javas.indexOf(true) !== -1) {\n\t\t\t\ttags[\"java\"] = true;\n\t\t\t}\n\t\t\treturn tags;\n\t\t});\n\t}\n\n\tprivate reportAzure(uris: URI[]) {\n\t\tconst tags: Tags = Object.create(null);\n\t\tthis.reportAzureNode(uris, tags)\n\t\t\t.then((tags) => {\n\t\t\t\treturn this.reportAzureJava(uris, tags);\n\t\t\t})\n\t\t\t.then((tags) => {\n\t\t\t\tif (Object.keys(tags).length) {\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"workspace.azure\" : {\n\t\t\t\t\t\t\"owner\": \"lramos15\",\n\t\t\t\t\t\t\"${include}\": [\n\t\t\t\t\t\t\t\"${AzureTags}\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog(\"workspace.azure\", tags);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(undefined, onUnexpectedError);\n\t}\n\n\tprivate reportCloudStats(): void {\n\t\tconst uris = this.contextService\n\t\t\t.getWorkspace()\n\t\t\t.folders.map((folder) => folder.uri);\n\t\tif (uris.length && this.fileService) {\n\t\t\tthis.reportRemoteDomains(uris);\n\t\t\tthis.reportRemotes(uris);\n\t\t\tthis.reportAzure(uris);\n\t\t}\n\t}\n\n\tprivate reportProxyStats() {\n\t\tconst downloadUrl = this.productService.downloadUrl;\n\t\tif (!downloadUrl) {\n\t\t\treturn;\n\t\t}\n\t\tthis.requestService\n\t\t\t.resolveProxy(downloadUrl)\n\t\t\t.then((proxy) => {\n\t\t\t\tlet type = proxy\n\t\t\t\t\t? String(proxy).trim().split(/\\s+/, 1)[0]\n\t\t\t\t\t: \"EMPTY\";\n\t\t\t\tif (\n\t\t\t\t\t[\"DIRECT\", \"PROXY\", \"HTTPS\", \"SOCKS\", \"EMPTY\"].indexOf(\n\t\t\t\t\t\ttype,\n\t\t\t\t\t) === -1\n\t\t\t\t) {\n\t\t\t\t\ttype = \"UNKNOWN\";\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(undefined, onUnexpectedError);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["set", "list", "tags"]
}
