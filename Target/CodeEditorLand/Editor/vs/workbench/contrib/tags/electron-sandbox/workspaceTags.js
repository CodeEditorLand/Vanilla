var d=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var l=(c,e,t,r)=>{for(var i=r>1?void 0:r?h(e,t):e,o=c.length-1,s;o>=0;o--)(s=c[o])&&(i=(r?s(e,t,i):s(i))||i);return r&&i&&d(e,t,i),i},a=(c,e)=>(t,r)=>e(t,r,c);import{sha1Hex as u}from"../../../../../vs/base/browser/hash.js";import{onUnexpectedError as m}from"../../../../../vs/base/common/errors.js";import{isWindows as S}from"../../../../../vs/base/common/platform.js";import"../../../../../vs/base/common/uri.js";import{IDiagnosticsService as f}from"../../../../../vs/platform/diagnostics/common/diagnostics.js";import{AllowedSecondLevelDomains as g,getDomainsOfRemotes as I}from"../../../../../vs/platform/extensionManagement/common/configRemotes.js";import{IFileService as y}from"../../../../../vs/platform/files/common/files.js";import{INativeHostService as T}from"../../../../../vs/platform/native/common/native.js";import{IProductService as w}from"../../../../../vs/platform/product/common/productService.js";import{IRequestService as x}from"../../../../../vs/platform/request/common/request.js";import{ITelemetryService as R,TelemetryLevel as W}from"../../../../../vs/platform/telemetry/common/telemetry.js";import{IWorkspaceContextService as k}from"../../../../../vs/platform/workspace/common/workspace.js";import"../../../../../vs/workbench/common/contributions.js";import{getHashedRemotesFromConfig as P,IWorkspaceTagsService as b}from"../../../../../vs/workbench/contrib/tags/common/workspaceTags.js";import{ITextFileService as A}from"../../../../../vs/workbench/services/textfile/common/textfiles.js";async function Q(c,e=!1){return P(c,e,t=>u(t))}let p=class{constructor(e,t,r,i,o,s,n,v,C){this.fileService=e;this.contextService=t;this.telemetryService=r;this.requestService=i;this.textFileService=o;this.workspaceTagsService=s;this.diagnosticsService=n;this.productService=v;this.nativeHostService=C;this.telemetryService.telemetryLevel===W.USAGE&&this.report()}async report(){this.reportWindowsEdition(),this.workspaceTagsService.getTags().then(e=>this.reportWorkspaceTags(e),e=>m(e)),this.reportCloudStats(),this.reportProxyStats(),this.getWorkspaceInformation().then(e=>this.diagnosticsService.reportWorkspaceStats(e))}async reportWindowsEdition(){if(!S)return;let e=await this.nativeHostService.windowsGetStringRegKey("HKEY_LOCAL_MACHINE","SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion","EditionID");e===void 0&&(e="Unknown"),this.telemetryService.publicLog2("windowsEdition",{edition:e})}async getWorkspaceInformation(){const e=this.contextService.getWorkspace(),t=this.contextService.getWorkbenchState(),r=await this.workspaceTagsService.getTelemetryWorkspaceId(e,t);return{id:e.id,telemetryId:r,rendererSessionId:this.telemetryService.sessionId,folders:e.folders,transient:e.transient,configuration:e.configuration}}reportWorkspaceTags(e){this.telemetryService.publicLog("workspce.tags",e)}reportRemoteDomains(e){Promise.all(e.map(t=>{const r=t.path,i=t.with({path:`${r!=="/"?r:""}/.git/config`});return this.fileService.exists(i).then(o=>o?this.textFileService.read(i,{acceptTextOnly:!0}).then(s=>I(s.value,g),s=>[]):[])})).then(t=>{const r=t.reduce((o,s)=>s.reduce((n,v)=>n.add(v),o),new Set),i=[];r.forEach(o=>i.push(o)),this.telemetryService.publicLog("workspace.remotes",{domains:i.sort()})},m)}reportRemotes(e){Promise.all(e.map(t=>this.workspaceTagsService.getHashedRemotesFromUri(t,!0))).then(()=>{},m)}reportAzureNode(e,t){const r=e.map(i=>{const o=i.path;return i.with({path:`${o!=="/"?o:""}/node_modules`})});return this.fileService.resolveAll(r.map(i=>({resource:i}))).then(i=>{const o=[].concat(...i.map(n=>n.success?n.stat.children||[]:[])).map(n=>n.name);return p.searchArray(o,/azure/i)&&(t.node=!0),t},i=>t)}static searchArray(e,t){return e.some(r=>r.search(t)>-1)||void 0}reportAzureJava(e,t){return Promise.all(e.map(r=>{const i=r.path,o=r.with({path:`${i!=="/"?i:""}/pom.xml`});return this.fileService.exists(o).then(s=>s?this.textFileService.read(o,{acceptTextOnly:!0}).then(n=>!!n.value.match(/azure/i),n=>!1):!1)})).then(r=>(r.indexOf(!0)!==-1&&(t.java=!0),t))}reportAzure(e){const t=Object.create(null);this.reportAzureNode(e,t).then(r=>this.reportAzureJava(e,r)).then(r=>{Object.keys(r).length&&this.telemetryService.publicLog("workspace.azure",r)}).then(void 0,m)}reportCloudStats(){const e=this.contextService.getWorkspace().folders.map(t=>t.uri);e.length&&this.fileService&&(this.reportRemoteDomains(e),this.reportRemotes(e),this.reportAzure(e))}reportProxyStats(){const e=this.productService.downloadUrl;e&&this.requestService.resolveProxy(e).then(t=>{let r=t?String(t).trim().split(/\s+/,1)[0]:"EMPTY";["DIRECT","PROXY","HTTPS","SOCKS","EMPTY"].indexOf(r)===-1&&(r="UNKNOWN")}).then(void 0,m)}};p=l([a(0,y),a(1,k),a(2,R),a(3,x),a(4,A),a(5,b),a(6,f),a(7,w),a(8,T)],p);export{p as WorkspaceTags,Q as getHashedRemotesFromConfig};
