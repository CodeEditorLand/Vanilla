{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/tags/common/javaWorkspaceTags.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const GradleDependencyLooseRegex = /group\\s*:\\s*[\\'\\\"](.*?)[\\'\\\"]\\s*,\\s*name\\s*:\\s*[\\'\\\"](.*?)[\\'\\\"]\\s*,\\s*version\\s*:\\s*[\\'\\\"](.*?)[\\'\\\"]/g;\nexport const GradleDependencyCompactRegex = /[\\'\\\"]([^\\'\\\"\\s]*?)\\:([^\\'\\\"\\s]*?)\\:([^\\'\\\"\\s]*?)[\\'\\\"]/g;\n\nexport const MavenDependenciesRegex = /<dependencies>([\\s\\S]*?)<\\/dependencies>/g;\nexport const MavenDependencyRegex = /<dependency>([\\s\\S]*?)<\\/dependency>/g;\nexport const MavenGroupIdRegex = /<groupId>([\\s\\S]*?)<\\/groupId>/;\nexport const MavenArtifactIdRegex = /<artifactId>([\\s\\S]*?)<\\/artifactId>/;\n\nexport const JavaLibrariesToLookFor: { predicate: (groupId: string, artifactId: string) => boolean; tag: string }[] = [\n\t// azure mgmt sdk\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.microsoft.azure' && artifactId === 'azure', 'tag': 'azure' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.microsoft.azure' && artifactId.startsWith('azure-mgmt-'), 'tag': 'azure' },\n\t{ 'predicate': (groupId, artifactId) => groupId.startsWith('com.microsoft.azure') && artifactId.startsWith('azure-mgmt-'), 'tag': 'azure' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure.resourcemanager' && artifactId.startsWith('azure-resourcemanager'), 'tag': 'azure' }, // azure track2 sdk\n\t// java ee\n\t{ 'predicate': (groupId, artifactId) => groupId === 'javax' && artifactId === 'javaee-api', 'tag': 'javaee' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'javax.xml.bind' && artifactId === 'jaxb-api', 'tag': 'javaee' },\n\t// jdbc\n\t{ 'predicate': (groupId, artifactId) => groupId === 'mysql' && artifactId === 'mysql-connector-java', 'tag': 'jdbc' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.microsoft.sqlserver' && artifactId === 'mssql-jdbc', 'tag': 'jdbc' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.oracle.database.jdbc' && artifactId.startsWith('ojdbc'), 'tag': 'jdbc' },\n\t// jpa\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.hibernate', 'tag': 'jpa' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.eclipse.persistence' && artifactId === 'eclipselink', 'tag': 'jpa' },\n\t// lombok\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.projectlombok', 'tag': 'lombok' },\n\t// redis\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.springframework.data' && artifactId === 'spring-data-redis', 'tag': 'redis' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'redis.clients' && artifactId === 'jedis', 'tag': 'redis' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.redisson', 'tag': 'redis' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'io.lettuce' && artifactId === 'lettuce-core', 'tag': 'redis' },\n\t// spring boot\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.springframework.boot', 'tag': 'springboot' },\n\t// sql\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.jooq', 'tag': 'sql' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.mybatis', 'tag': 'sql' },\n\t// unit test\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.junit.jupiter' && artifactId === 'junit-jupiter-api', 'tag': 'unitTest' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'junit' && artifactId === 'junit', 'tag': 'unitTest' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'org.testng' && artifactId === 'testng', 'tag': 'unitTest' },\n\t// cosmos\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId.includes('cosmos'), 'tag': 'azure-cosmos' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure.spring' && artifactId.includes('cosmos'), 'tag': 'azure-cosmos' },\n\t// storage account\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId.includes('azure-storage'), 'tag': 'azure-storage' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure.spring' && artifactId.includes('storage'), 'tag': 'azure-storage' },\n\t// service bus\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-messaging-servicebus', 'tag': 'azure-servicebus' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure.spring' && artifactId.includes('servicebus'), 'tag': 'azure-servicebus' },\n\t// event hubs\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId.startsWith('azure-messaging-eventhubs'), 'tag': 'azure-eventhubs' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure.spring' && artifactId.includes('eventhubs'), 'tag': 'azure-eventhubs' },\n\t// ai related libraries\n\t{ 'predicate': (groupId, artifactId) => groupId === 'dev.langchain4j', 'tag': 'langchain4j' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'io.springboot.ai', 'tag': 'springboot-ai' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.microsoft.semantic-kernel', 'tag': 'semantic-kernel' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-anomalydetector', 'tag': 'azure-ai-anomalydetector' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-formrecognizer', 'tag': 'azure-ai-formrecognizer' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-documentintelligence', 'tag': 'azure-ai-documentintelligence' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-translation-document', 'tag': 'azure-ai-translation-document' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-personalizer', 'tag': 'azure-ai-personalizer' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-translation-text', 'tag': 'azure-ai-translation-text' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-contentsafety', 'tag': 'azure-ai-contentsafety' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-vision-imageanalysis', 'tag': 'azure-ai-vision-imageanalysis' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-textanalytics', 'tag': 'azure-ai-textanalytics' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-search-documents', 'tag': 'azure-search-documents' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-documenttranslator', 'tag': 'azure-ai-documenttranslator' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-vision-face', 'tag': 'azure-ai-vision-face' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-openai-assistants', 'tag': 'azure-ai-openai-assistants' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.microsoft.azure.cognitiveservices', 'tag': 'azure-cognitiveservices' },\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.microsoft.cognitiveservices.speech', 'tag': 'azure-cognitiveservices-speech' },\n\t// open ai\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.theokanning.openai-gpt3-java', 'tag': 'openai' },\n\t// azure open ai\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.azure' && artifactId === 'azure-ai-openai', 'tag': 'azure-openai' },\n\t// Azure Functions\n\t{ 'predicate': (groupId, artifactId) => groupId === 'com.microsoft.azure.functions' && artifactId === 'azure-functions-java-library', 'tag': 'azure-functions' },\n\t// quarkus\n\t{ 'predicate': (groupId, artifactId) => groupId === 'io.quarkus', 'tag': 'quarkus' },\n\t// microprofile\n\t{ 'predicate': (groupId, artifactId) => groupId.startsWith('org.eclipse.microprofile'), 'tag': 'microprofile' },\n\t// micronaut\n\t{ 'predicate': (groupId, artifactId) => groupId === 'io.micronaut', 'tag': 'micronaut' },\n\t// GraalVM\n\t{ 'predicate': (groupId, artifactId) => groupId.startsWith('org.graalvm'), 'tag': 'graalvm' }\n];\n"],
  "mappings": "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",
  "names": []
}
