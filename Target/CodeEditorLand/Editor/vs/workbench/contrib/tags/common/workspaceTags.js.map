{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/tags/common/workspaceTags.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { getRemotes } from \"../../../../platform/extensionManagement/common/configRemotes.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tIWorkspace,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\n\nexport type Tags = { [index: string]: boolean | number | string | undefined };\n\nexport const IWorkspaceTagsService = createDecorator<IWorkspaceTagsService>(\n\t\"workspaceTagsService\",\n);\n\nexport interface IWorkspaceTagsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetTags(): Promise<Tags>;\n\n\t/**\n\t * Returns an id for the workspace, different from the id returned by the context service. A hash based\n\t * on the folder uri or workspace configuration, not time-based, and undefined for empty workspaces.\n\t */\n\tgetTelemetryWorkspaceId(\n\t\tworkspace: IWorkspace,\n\t\tstate: WorkbenchState,\n\t): Promise<string | undefined>;\n\n\tgetHashedRemotesFromUri(\n\t\tworkspaceUri: URI,\n\t\tstripEndingDotGit?: boolean,\n\t): Promise<string[]>;\n}\n\nexport async function getHashedRemotesFromConfig(\n\ttext: string,\n\tstripEndingDotGit = false,\n\tsha1Hex: (str: string) => Promise<string>,\n): Promise<string[]> {\n\treturn Promise.all(\n\t\tgetRemotes(text, stripEndingDotGit).map((remote) => sha1Hex(remote)),\n\t);\n}\n"],
  "mappings": ";;AAMA,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAQzB,MAAM,wBAAwB;AAAA,EACpC;AACD;AAsBA,eAAsB,2BACrB,MACA,oBAAoB,OACpB,SACoB;AACpB,SAAO,QAAQ;AAAA,IACd,WAAW,MAAM,iBAAiB,EAAE,IAAI,CAAC,WAAW,QAAQ,MAAM,CAAC;AAAA,EACpE;AACD;AARsB;",
  "names": []
}
