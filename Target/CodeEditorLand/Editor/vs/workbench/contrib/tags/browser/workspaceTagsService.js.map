{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/tags/browser/workspaceTagsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WorkbenchState, IWorkspace } from '../../../../platform/workspace/common/workspace.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IWorkspaceTagsService, Tags } from '../common/workspaceTags.js';\n\nexport class NoOpWorkspaceTagsService implements IWorkspaceTagsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tgetTags(): Promise<Tags> {\n\t\treturn Promise.resolve({});\n\t}\n\n\tasync getTelemetryWorkspaceId(workspace: IWorkspace, state: WorkbenchState): Promise<string | undefined> {\n\t\treturn undefined;\n\t}\n\n\tgetHashedRemotesFromUri(workspaceUri: URI, stripEndingDotGit?: boolean): Promise<string[]> {\n\t\treturn Promise.resolve([]);\n\t}\n}\n\nregisterSingleton(IWorkspaceTagsService, NoOpWorkspaceTagsService, InstantiationType.Delayed);\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB,kBAAkB;AAC3C,SAAS,WAAW;AACpB,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,uBAAuB,YAAY;AAErC,MAAM,yBAA0D;AAAA,EAVvE,OAUuE;AAAA;AAAA;AAAA,EAItE,UAAyB;AACxB,WAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,EAC1B;AAAA,EAEA,MAAM,wBAAwB,WAAuB,OAAoD;AACxG,WAAO;AAAA,EACR;AAAA,EAEA,wBAAwB,cAAmB,mBAAgD;AAC1F,WAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,EAC1B;AACD;AAEA,kBAAkB,uBAAuB,0BAA0B,kBAAkB,OAAO;",
  "names": []
}
