var p=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var s=(l,n,t,e)=>{for(var r=e>1?void 0:e?d(n,t):n,a=l.length-1,i;a>=0;a--)(i=l[a])&&(r=(e?i(n,t,r):i(r))||r);return e&&r&&p(n,t,r),r},c=(l,n)=>(t,e)=>n(t,e,l);import"../../../../base/browser/ui/table/tableWidget.js";import{Disposable as I}from"../../../../base/common/lifecycle.js";import"../../../../base/common/severity.js";import{localize as o}from"../../../../nls.js";import{IQuickInputService as v}from"../../../../platform/quickinput/common/quickInput.js";let u=class extends I{constructor(t,e){super();this._table=t;this._quickInputService=e}async show(){const t=[];this._table.getColumnLabels().forEach((i,m)=>{i&&t.push({label:i,index:m})});const e=await this._quickInputService.pick(t,{placeHolder:o("table.column.selection","Select the column to resize, type to filter.")});if(!e)return;const r=await this._quickInputService.input({placeHolder:o("table.column.resizeValue.placeHolder","i.e. 20, 60, 100..."),prompt:o("table.column.resizeValue.prompt","Please enter a width in percentage for the '{0}' column.",e.label),validateInput:i=>this._validateColumnResizeValue(i)}),a=r?Number.parseInt(r):void 0;a&&this._table.resizeColumn(e.index,a)}async _validateColumnResizeValue(t){const e=Number.parseInt(t);return t&&!Number.isInteger(e)?o("table.column.resizeValue.invalidType","Please enter an integer."):e<0||e>100?o("table.column.resizeValue.invalidRange","Please enter a number greater than 0 and less than or equal to 100."):null}};u=s([c(1,v)],u);export{u as TableColumnResizeQuickPick};
