{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/list/browser/tableColumnResizeQuickPick.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Table } from \"../../../../base/browser/ui/table/tableWidget.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport type Severity from \"../../../../base/common/severity.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\n\ninterface IColumnResizeQuickPickItem extends IQuickPickItem {\n\tindex: number;\n}\n\nexport class TableColumnResizeQuickPick extends Disposable {\n\tconstructor(\n\t\tprivate readonly _table: Table<any>,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync show(): Promise<void> {\n\t\tconst items: IColumnResizeQuickPickItem[] = [];\n\t\tthis._table.getColumnLabels().forEach((label, index) => {\n\t\t\tif (label) {\n\t\t\t\titems.push({ label, index });\n\t\t\t}\n\t\t});\n\t\tconst column =\n\t\t\tawait this._quickInputService.pick<IColumnResizeQuickPickItem>(\n\t\t\t\titems,\n\t\t\t\t{\n\t\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\t\"table.column.selection\",\n\t\t\t\t\t\t\"Select the column to resize, type to filter.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t);\n\t\tif (!column) {\n\t\t\treturn;\n\t\t}\n\t\tconst value = await this._quickInputService.input({\n\t\t\tplaceHolder: localize(\n\t\t\t\t\"table.column.resizeValue.placeHolder\",\n\t\t\t\t\"i.e. 20, 60, 100...\",\n\t\t\t),\n\t\t\tprompt: localize(\n\t\t\t\t\"table.column.resizeValue.prompt\",\n\t\t\t\t\"Please enter a width in percentage for the '{0}' column.\",\n\t\t\t\tcolumn.label,\n\t\t\t),\n\t\t\tvalidateInput: (input: string) =>\n\t\t\t\tthis._validateColumnResizeValue(input),\n\t\t});\n\t\tconst percentageValue = value ? Number.parseInt(value) : undefined;\n\t\tif (!percentageValue) {\n\t\t\treturn;\n\t\t}\n\t\tthis._table.resizeColumn(column.index, percentageValue);\n\t}\n\n\tprivate async _validateColumnResizeValue(\n\t\tinput: string,\n\t): Promise<\n\t\tstring | { content: string; severity: Severity } | null | undefined\n\t> {\n\t\tconst percentage = Number.parseInt(input);\n\t\tif (input && !Number.isInteger(percentage)) {\n\t\t\treturn localize(\n\t\t\t\t\"table.column.resizeValue.invalidType\",\n\t\t\t\t\"Please enter an integer.\",\n\t\t\t);\n\t\t} else if (percentage < 0 || percentage > 100) {\n\t\t\treturn localize(\n\t\t\t\t\"table.column.resizeValue.invalidRange\",\n\t\t\t\t\"Please enter a number greater than 0 and less than or equal to 100.\",\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMA,SAAS,kBAAkB;AAE3B,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,OAEM;AAMA,IAAM,6BAAN,cAAyC,WAAW;AAAA,EAC1D,YACkB,QACoB,oBACpC;AACD,UAAM;AAHW;AACoB;AAAA,EAGtC;AAAA,EAxBD,OAkB2D;AAAA;AAAA;AAAA,EAQ1D,MAAM,OAAsB;AAC3B,UAAM,QAAsC,CAAC;AAC7C,SAAK,OAAO,gBAAgB,EAAE,QAAQ,CAAC,OAAO,UAAU;AACvD,UAAI,OAAO;AACV,cAAM,KAAK,EAAE,OAAO,MAAM,CAAC;AAAA,MAC5B;AAAA,IACD,CAAC;AACD,UAAM,SACL,MAAM,KAAK,mBAAmB;AAAA,MAC7B;AAAA,MACA;AAAA,QACC,aAAa;AAAA,UACZ;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACD,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AACA,UAAM,QAAQ,MAAM,KAAK,mBAAmB,MAAM;AAAA,MACjD,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,MACA,QAAQ;AAAA,QACP;AAAA,QACA;AAAA,QACA,OAAO;AAAA,MACR;AAAA,MACA,eAAe,wBAAC,UACf,KAAK,2BAA2B,KAAK,GADvB;AAAA,IAEhB,CAAC;AACD,UAAM,kBAAkB,QAAQ,OAAO,SAAS,KAAK,IAAI;AACzD,QAAI,CAAC,iBAAiB;AACrB;AAAA,IACD;AACA,SAAK,OAAO,aAAa,OAAO,OAAO,eAAe;AAAA,EACvD;AAAA,EAEA,MAAc,2BACb,OAGC;AACD,UAAM,aAAa,OAAO,SAAS,KAAK;AACxC,QAAI,SAAS,CAAC,OAAO,UAAU,UAAU,GAAG;AAC3C,aAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD,WAAW,aAAa,KAAK,aAAa,KAAK;AAC9C,aAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AACD;AAnEa,6BAAN;AAAA,EAGJ;AAAA,GAHU;",
  "names": []
}
