var S=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var l=(s,o,t,r)=>{for(var i=r>1?void 0:r?b(o,t):o,n=s.length-1,c;n>=0;n--)(c=s[n])&&(i=(r?c(o,t,i):c(i))||i);return r&&i&&S(o,t,i),i},e=(s,o)=>(t,r)=>o(t,r,s);import{RunOnceScheduler as w}from"../../../../../vs/base/common/async.js";import{Disposable as y}from"../../../../../vs/base/common/lifecycle.js";import{ICodeEditorService as E}from"../../../../../vs/editor/browser/services/codeEditorService.js";import{localize as x}from"../../../../../vs/nls.js";import{ICommandService as R}from"../../../../../vs/platform/commands/common/commands.js";import{IConfigurationService as k}from"../../../../../vs/platform/configuration/common/configuration.js";import{Extensions as W,ConfigurationScope as A}from"../../../../../vs/platform/configuration/common/configurationRegistry.js";import{ContextKeyExpr as p,IContextKeyService as T}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as O}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{IOpenerService as P}from"../../../../../vs/platform/opener/common/opener.js";import{Registry as g}from"../../../../../vs/platform/registry/common/platform.js";import{IStorageService as K,StorageScope as M}from"../../../../../vs/platform/storage/common/storage.js";import{ITelemetryService as N}from"../../../../../vs/platform/telemetry/common/telemetry.js";import{applicationConfigurationNodeBase as z}from"../../../../../vs/workbench/common/configuration.js";import{Extensions as B}from"../../../../../vs/workbench/common/contributions.js";import{WelcomeWidget as L}from"../../../../../vs/workbench/contrib/welcomeDialog/browser/welcomeWidget.js";import{IEditorService as V}from"../../../../../vs/workbench/services/editor/common/editorService.js";import{IBrowserWorkbenchEnvironmentService as D}from"../../../../../vs/workbench/services/environment/browser/environmentService.js";import{LifecyclePhase as _}from"../../../../../vs/workbench/services/lifecycle/common/lifecycle.js";const j="workbench.welcome.experimental.dialog";let m=class extends y{isRendered=!1;constructor(o,t,r,i,n,c,I,u,h,C){if(super(),!o.isNew(M.APPLICATION)||!r.inspect(j).value)return;const a=t.options?.welcomeDialog;a&&this._register(C.onDidActiveEditorChange(()=>{if(!this.isRendered){const d=n.getActiveCodeEditor();if(d?.hasModel()){const v=new w(()=>{const f=i.contextMatchesRules(p.deserialize("notificationCenterVisible"))||i.contextMatchesRules(p.deserialize("notificationToastsVisible"));d===n.getActiveCodeEditor()&&!f&&(this.isRendered=!0,new L(d,c,I,u,h).render(a.title,a.message,a.buttonText,a.buttonCommand))},3e3);this._register(d.onDidChangeModelContent(f=>{this.isRendered||v.schedule()}))}}}))}};m=l([e(0,K),e(1,D),e(2,k),e(3,T),e(4,E),e(5,O),e(6,R),e(7,N),e(8,P),e(9,V)],m),g.as(B.Workbench).registerWorkbenchContribution(m,_.Eventually);const q=g.as(W.Configuration);q.registerConfiguration({...z,properties:{"workbench.welcome.experimental.dialog":{scope:A.APPLICATION,type:"boolean",default:!1,tags:["experimental"],description:x("workbench.welcome.dialog","When enabled, a welcome widget is shown in the editor")}}});
