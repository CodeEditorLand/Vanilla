{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeDialog/browser/welcomeWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/welcomeWidget.css';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition, OverlayWidgetPositionPreference } from '../../../../editor/browser/editorBrowser.js';\nimport { $, append, hide } from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { MarkdownRenderer } from '../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ButtonBar } from '../../../../base/browser/ui/button/button.js';\nimport { mnemonicButtonLabel } from '../../../../base/common/labels.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { defaultButtonStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { Action, WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../../../base/common/actions.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { localize } from '../../../../nls.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { LinkedText, parseLinkedText } from '../../../../base/common/linkedText.js';\nimport { Link } from '../../../../platform/opener/browser/link.js';\nimport { renderLabelWithIcons } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { renderFormattedText } from '../../../../base/browser/formattedTextRenderer.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { contrastBorder, editorWidgetBackground, editorWidgetForeground, widgetBorder, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\n\nexport class WelcomeWidget extends Disposable implements IOverlayWidget {\n\n\tprivate readonly _rootDomNode: HTMLElement;\n\tprivate readonly element: HTMLElement;\n\tprivate readonly messageContainer: HTMLElement;\n\tprivate readonly markdownRenderer = this.instantiationService.createInstance(MarkdownRenderer, {});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\tprivate readonly commandService: ICommandService,\n\t\tprivate readonly telemetryService: ITelemetryService,\n\t\tprivate readonly openerService: IOpenerService\n\t) {\n\t\tsuper();\n\t\tthis._rootDomNode = document.createElement('div');\n\t\tthis._rootDomNode.className = 'welcome-widget';\n\n\t\tthis.element = this._rootDomNode.appendChild($('.monaco-dialog-box'));\n\t\tthis.element.setAttribute('role', 'dialog');\n\n\t\thide(this._rootDomNode);\n\n\t\tthis.messageContainer = this.element.appendChild($('.dialog-message-container'));\n\t}\n\n\tasync executeCommand(commandId: string, ...args: string[]) {\n\t\ttry {\n\t\t\tawait this.commandService.executeCommand(commandId, ...args);\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\t\tid: commandId,\n\t\t\t\tfrom: 'welcomeWidget'\n\t\t\t});\n\t\t}\n\t\tcatch (ex) {\n\t\t}\n\t}\n\n\tpublic async render(title: string, message: string, buttonText: string, buttonAction: string) {\n\t\tif (!this._editor._getViewModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.buildWidgetContent(title, message, buttonText, buttonAction);\n\t\tthis._editor.addOverlayWidget(this);\n\t\tthis._show();\n\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\tid: 'welcomeWidgetRendered',\n\t\t\tfrom: 'welcomeWidget'\n\t\t});\n\t}\n\n\tprivate async buildWidgetContent(title: string, message: string, buttonText: string, buttonAction: string) {\n\n\t\tconst actionBar = this._register(new ActionBar(this.element, {}));\n\n\t\tconst action = this._register(new Action('dialog.close', localize('dialogClose', \"Close Dialog\"), ThemeIcon.asClassName(Codicon.dialogClose), true, async () => {\n\t\t\tthis._hide();\n\t\t}));\n\t\tactionBar.push(action, { icon: true, label: false });\n\n\t\tconst renderBody = (message: string, icon: string): MarkdownString => {\n\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: true, supportHtml: true });\n\t\t\tmds.appendMarkdown(`<a class=\"copilot\">$(${icon})</a>`);\n\t\t\tmds.appendMarkdown(message);\n\t\t\treturn mds;\n\t\t};\n\n\t\tconst titleElement = this.messageContainer.appendChild($('#monaco-dialog-message-detail.dialog-message-detail-title'));\n\t\tconst titleElementMdt = this.markdownRenderer.render(renderBody(title, 'zap'));\n\t\ttitleElement.appendChild(titleElementMdt.element);\n\n\t\tthis.buildStepMarkdownDescription(this.messageContainer, message.split('\\n').filter(x => x).map(text => parseLinkedText(text)));\n\n\t\tconst buttonsRowElement = this.messageContainer.appendChild($('.dialog-buttons-row'));\n\t\tconst buttonContainer = buttonsRowElement.appendChild($('.dialog-buttons'));\n\n\t\tconst buttonBar = this._register(new ButtonBar(buttonContainer));\n\t\tconst primaryButton = this._register(buttonBar.addButtonWithDescription({ title: true, secondary: false, ...defaultButtonStyles }));\n\t\tprimaryButton.label = mnemonicButtonLabel(buttonText, true);\n\n\t\tthis._register(primaryButton.onDidClick(async () => {\n\t\t\tawait this.executeCommand(buttonAction);\n\t\t}));\n\n\t\tbuttonBar.buttons[0].focus();\n\t}\n\n\tprivate buildStepMarkdownDescription(container: HTMLElement, text: LinkedText[]) {\n\t\tfor (const linkedText of text) {\n\t\t\tconst p = append(container, $('p'));\n\t\t\tfor (const node of linkedText.nodes) {\n\t\t\t\tif (typeof node === 'string') {\n\t\t\t\t\tconst labelWithIcon = renderLabelWithIcons(node);\n\t\t\t\t\tfor (const element of labelWithIcon) {\n\t\t\t\t\t\tif (typeof element === 'string') {\n\t\t\t\t\t\t\tp.appendChild(renderFormattedText(element, { inline: true, renderCodeSegments: true }));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tp.appendChild(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst link = this.instantiationService.createInstance(Link, p, node, {\n\t\t\t\t\t\topener: (href: string) => {\n\t\t\t\t\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\t\t\t\t\t\tid: 'welcomeWidetLinkAction',\n\t\t\t\t\t\t\t\tfrom: 'welcomeWidget'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.openerService.open(href, { allowCommands: true });\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis._register(link);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn container;\n\t}\n\n\tgetId(): string {\n\t\treturn 'editor.contrib.welcomeWidget';\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._rootDomNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\t\treturn {\n\t\t\tpreference: OverlayWidgetPositionPreference.TOP_RIGHT_CORNER\n\t\t};\n\t}\n\n\tprivate _isVisible: boolean = false;\n\n\tprivate _show(): void {\n\t\tif (this._isVisible) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isVisible = true;\n\t\tthis._rootDomNode.style.display = 'block';\n\t}\n\n\tprivate _hide(): void {\n\t\tif (!this._isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isVisible = true;\n\t\tthis._rootDomNode.style.display = 'none';\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\tid: 'welcomeWidgetDismissed',\n\t\t\tfrom: 'welcomeWidget'\n\t\t});\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst addBackgroundColorRule = (selector: string, color: Color | undefined): void => {\n\t\tif (color) {\n\t\t\tcollector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n\t\t}\n\t};\n\n\tconst widgetBackground = theme.getColor(editorWidgetBackground);\n\taddBackgroundColorRule('.welcome-widget', widgetBackground);\n\n\tconst widgetShadowColor = theme.getColor(widgetShadow);\n\tif (widgetShadowColor) {\n\t\tcollector.addRule(`.welcome-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n\t}\n\n\tconst widgetBorderColor = theme.getColor(widgetBorder);\n\tif (widgetBorderColor) {\n\t\tcollector.addRule(`.welcome-widget { border-left: 1px solid ${widgetBorderColor}; border-right: 1px solid ${widgetBorderColor}; border-bottom: 1px solid ${widgetBorderColor}; }`);\n\t}\n\n\tconst hcBorder = theme.getColor(contrastBorder);\n\tif (hcBorder) {\n\t\tcollector.addRule(`.welcome-widget { border: 1px solid ${hcBorder}; }`);\n\t}\n\n\tconst foreground = theme.getColor(editorWidgetForeground);\n\tif (foreground) {\n\t\tcollector.addRule(`.welcome-widget { color: ${foreground}; }`);\n\t}\n});\n"],
  "mappings": "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",
  "names": ["message"]
}
