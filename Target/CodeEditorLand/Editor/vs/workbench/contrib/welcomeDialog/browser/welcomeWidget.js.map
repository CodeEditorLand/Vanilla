{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeDialog/browser/welcomeWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/welcomeWidget.css\";\nimport { $, append, hide } from \"../../../../base/browser/dom.js\";\nimport { renderFormattedText } from \"../../../../base/browser/formattedTextRenderer.js\";\nimport { ActionBar } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { ButtonBar } from \"../../../../base/browser/ui/button/button.js\";\nimport { renderLabelWithIcons } from \"../../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport {\n\tAction,\n\ttype WorkbenchActionExecutedClassification,\n\ttype WorkbenchActionExecutedEvent,\n} from \"../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport type { Color } from \"../../../../base/common/color.js\";\nimport { MarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { mnemonicButtonLabel } from \"../../../../base/common/labels.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype LinkedText,\n\tparseLinkedText,\n} from \"../../../../base/common/linkedText.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IOverlayWidget,\n\ttype IOverlayWidgetPosition,\n\tOverlayWidgetPositionPreference,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { MarkdownRenderer } from \"../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport type { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { Link } from \"../../../../platform/opener/browser/link.js\";\nimport type { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport type { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { defaultButtonStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tcontrastBorder,\n\teditorWidgetBackground,\n\teditorWidgetForeground,\n\twidgetBorder,\n\twidgetShadow,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { registerThemingParticipant } from \"../../../../platform/theme/common/themeService.js\";\n\nexport class WelcomeWidget extends Disposable implements IOverlayWidget {\n\tprivate readonly _rootDomNode: HTMLElement;\n\tprivate readonly element: HTMLElement;\n\tprivate readonly messageContainer: HTMLElement;\n\tprivate readonly markdownRenderer =\n\t\tthis.instantiationService.createInstance(MarkdownRenderer, {});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\tprivate readonly commandService: ICommandService,\n\t\tprivate readonly telemetryService: ITelemetryService,\n\t\tprivate readonly openerService: IOpenerService,\n\t) {\n\t\tsuper();\n\t\tthis._rootDomNode = document.createElement(\"div\");\n\t\tthis._rootDomNode.className = \"welcome-widget\";\n\n\t\tthis.element = this._rootDomNode.appendChild($(\".monaco-dialog-box\"));\n\t\tthis.element.setAttribute(\"role\", \"dialog\");\n\n\t\thide(this._rootDomNode);\n\n\t\tthis.messageContainer = this.element.appendChild(\n\t\t\t$(\".dialog-message-container\"),\n\t\t);\n\t}\n\n\tasync executeCommand(commandId: string, ...args: string[]) {\n\t\ttry {\n\t\t\tawait this.commandService.executeCommand(commandId, ...args);\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tWorkbenchActionExecutedEvent,\n\t\t\t\tWorkbenchActionExecutedClassification\n\t\t\t>(\"workbenchActionExecuted\", {\n\t\t\t\tid: commandId,\n\t\t\t\tfrom: \"welcomeWidget\",\n\t\t\t});\n\t\t} catch (ex) {}\n\t}\n\n\tpublic async render(\n\t\ttitle: string,\n\t\tmessage: string,\n\t\tbuttonText: string,\n\t\tbuttonAction: string,\n\t) {\n\t\tif (!this._editor._getViewModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.buildWidgetContent(title, message, buttonText, buttonAction);\n\t\tthis._editor.addOverlayWidget(this);\n\t\tthis._show();\n\t\tthis.telemetryService.publicLog2<\n\t\t\tWorkbenchActionExecutedEvent,\n\t\t\tWorkbenchActionExecutedClassification\n\t\t>(\"workbenchActionExecuted\", {\n\t\t\tid: \"welcomeWidgetRendered\",\n\t\t\tfrom: \"welcomeWidget\",\n\t\t});\n\t}\n\n\tprivate async buildWidgetContent(\n\t\ttitle: string,\n\t\tmessage: string,\n\t\tbuttonText: string,\n\t\tbuttonAction: string,\n\t) {\n\t\tconst actionBar = this._register(new ActionBar(this.element, {}));\n\n\t\tconst action = this._register(\n\t\t\tnew Action(\n\t\t\t\t\"dialog.close\",\n\t\t\t\tlocalize(\"dialogClose\", \"Close Dialog\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.dialogClose),\n\t\t\t\ttrue,\n\t\t\t\tasync () => {\n\t\t\t\t\tthis._hide();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tactionBar.push(action, { icon: true, label: false });\n\n\t\tconst renderBody = (message: string, icon: string): MarkdownString => {\n\t\t\tconst mds = new MarkdownString(undefined, {\n\t\t\t\tsupportThemeIcons: true,\n\t\t\t\tsupportHtml: true,\n\t\t\t});\n\t\t\tmds.appendMarkdown(`<a class=\"copilot\">$(${icon})</a>`);\n\t\t\tmds.appendMarkdown(message);\n\t\t\treturn mds;\n\t\t};\n\n\t\tconst titleElement = this.messageContainer.appendChild(\n\t\t\t$(\"#monaco-dialog-message-detail.dialog-message-detail-title\"),\n\t\t);\n\t\tconst titleElementMdt = this.markdownRenderer.render(\n\t\t\trenderBody(title, \"zap\"),\n\t\t);\n\t\ttitleElement.appendChild(titleElementMdt.element);\n\n\t\tthis.buildStepMarkdownDescription(\n\t\t\tthis.messageContainer,\n\t\t\tmessage\n\t\t\t\t.split(\"\\n\")\n\t\t\t\t.filter((x) => x)\n\t\t\t\t.map((text) => parseLinkedText(text)),\n\t\t);\n\n\t\tconst buttonsRowElement = this.messageContainer.appendChild(\n\t\t\t$(\".dialog-buttons-row\"),\n\t\t);\n\t\tconst buttonContainer = buttonsRowElement.appendChild(\n\t\t\t$(\".dialog-buttons\"),\n\t\t);\n\n\t\tconst buttonBar = this._register(new ButtonBar(buttonContainer));\n\t\tconst primaryButton = this._register(\n\t\t\tbuttonBar.addButtonWithDescription({\n\t\t\t\ttitle: true,\n\t\t\t\tsecondary: false,\n\t\t\t\t...defaultButtonStyles,\n\t\t\t}),\n\t\t);\n\t\tprimaryButton.label = mnemonicButtonLabel(buttonText, true);\n\n\t\tthis._register(\n\t\t\tprimaryButton.onDidClick(async () => {\n\t\t\t\tawait this.executeCommand(buttonAction);\n\t\t\t}),\n\t\t);\n\n\t\tbuttonBar.buttons[0].focus();\n\t}\n\n\tprivate buildStepMarkdownDescription(\n\t\tcontainer: HTMLElement,\n\t\ttext: LinkedText[],\n\t) {\n\t\tfor (const linkedText of text) {\n\t\t\tconst p = append(container, $(\"p\"));\n\t\t\tfor (const node of linkedText.nodes) {\n\t\t\t\tif (typeof node === \"string\") {\n\t\t\t\t\tconst labelWithIcon = renderLabelWithIcons(node);\n\t\t\t\t\tfor (const element of labelWithIcon) {\n\t\t\t\t\t\tif (typeof element === \"string\") {\n\t\t\t\t\t\t\tp.appendChild(\n\t\t\t\t\t\t\t\trenderFormattedText(element, {\n\t\t\t\t\t\t\t\t\tinline: true,\n\t\t\t\t\t\t\t\t\trenderCodeSegments: true,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tp.appendChild(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst link = this.instantiationService.createInstance(\n\t\t\t\t\t\tLink,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\topener: (href: string) => {\n\t\t\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\t\tWorkbenchActionExecutedEvent,\n\t\t\t\t\t\t\t\t\tWorkbenchActionExecutedClassification\n\t\t\t\t\t\t\t\t>(\"workbenchActionExecuted\", {\n\t\t\t\t\t\t\t\t\tid: \"welcomeWidetLinkAction\",\n\t\t\t\t\t\t\t\t\tfrom: \"welcomeWidget\",\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.openerService.open(href, {\n\t\t\t\t\t\t\t\t\tallowCommands: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tthis._register(link);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn container;\n\t}\n\n\tgetId(): string {\n\t\treturn \"editor.contrib.welcomeWidget\";\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._rootDomNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\t\treturn {\n\t\t\tpreference: OverlayWidgetPositionPreference.TOP_RIGHT_CORNER,\n\t\t};\n\t}\n\n\tprivate _isVisible = false;\n\n\tprivate _show(): void {\n\t\tif (this._isVisible) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isVisible = true;\n\t\tthis._rootDomNode.style.display = \"block\";\n\t}\n\n\tprivate _hide(): void {\n\t\tif (!this._isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isVisible = true;\n\t\tthis._rootDomNode.style.display = \"none\";\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tthis.telemetryService.publicLog2<\n\t\t\tWorkbenchActionExecutedEvent,\n\t\t\tWorkbenchActionExecutedClassification\n\t\t>(\"workbenchActionExecuted\", {\n\t\t\tid: \"welcomeWidgetDismissed\",\n\t\t\tfrom: \"welcomeWidget\",\n\t\t});\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst addBackgroundColorRule = (\n\t\tselector: string,\n\t\tcolor: Color | undefined,\n\t): void => {\n\t\tif (color) {\n\t\t\tcollector.addRule(\n\t\t\t\t`.monaco-editor ${selector} { background-color: ${color}; }`,\n\t\t\t);\n\t\t}\n\t};\n\n\tconst widgetBackground = theme.getColor(editorWidgetBackground);\n\taddBackgroundColorRule(\".welcome-widget\", widgetBackground);\n\n\tconst widgetShadowColor = theme.getColor(widgetShadow);\n\tif (widgetShadowColor) {\n\t\tcollector.addRule(\n\t\t\t`.welcome-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`,\n\t\t);\n\t}\n\n\tconst widgetBorderColor = theme.getColor(widgetBorder);\n\tif (widgetBorderColor) {\n\t\tcollector.addRule(\n\t\t\t`.welcome-widget { border-left: 1px solid ${widgetBorderColor}; border-right: 1px solid ${widgetBorderColor}; border-bottom: 1px solid ${widgetBorderColor}; }`,\n\t\t);\n\t}\n\n\tconst hcBorder = theme.getColor(contrastBorder);\n\tif (hcBorder) {\n\t\tcollector.addRule(`.welcome-widget { border: 1px solid ${hcBorder}; }`);\n\t}\n\n\tconst foreground = theme.getColor(editorWidgetForeground);\n\tif (foreground) {\n\t\tcollector.addRule(`.welcome-widget { color: ${foreground}; }`);\n\t}\n});\n"],
  "mappings": "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",
  "names": ["message"]
}
