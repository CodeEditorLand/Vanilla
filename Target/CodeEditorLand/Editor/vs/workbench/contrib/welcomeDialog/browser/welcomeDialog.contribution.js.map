{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeDialog/browser/welcomeDialog.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { applicationConfigurationNodeBase } from \"../../../common/configuration.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../../services/environment/browser/environmentService.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { WelcomeWidget } from \"./welcomeWidget.js\";\n\nconst configurationKey = \"workbench.welcome.experimental.dialog\";\n\nclass WelcomeDialogContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate isRendered = false;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IBrowserWorkbenchEnvironmentService\n\t\tenvironmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextService: IContextKeyService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IEditorService editorService: IEditorService,\n\t) {\n\t\tsuper();\n\n\t\tif (!storageService.isNew(StorageScope.APPLICATION)) {\n\t\t\treturn; // do not show if this is not the first session\n\t\t}\n\n\t\tconst setting = configurationService.inspect<boolean>(configurationKey);\n\t\tif (!setting.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst welcomeDialog = environmentService.options?.welcomeDialog;\n\t\tif (!welcomeDialog) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._register(\n\t\t\teditorService.onDidActiveEditorChange(() => {\n\t\t\t\tif (!this.isRendered) {\n\t\t\t\t\tconst codeEditor = codeEditorService.getActiveCodeEditor();\n\t\t\t\t\tif (codeEditor?.hasModel()) {\n\t\t\t\t\t\tconst scheduler = new RunOnceScheduler(() => {\n\t\t\t\t\t\t\tconst notificationsVisible =\n\t\t\t\t\t\t\t\tcontextService.contextMatchesRules(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.deserialize(\n\t\t\t\t\t\t\t\t\t\t\"notificationCenterVisible\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\tcontextService.contextMatchesRules(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.deserialize(\n\t\t\t\t\t\t\t\t\t\t\"notificationToastsVisible\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcodeEditor ===\n\t\t\t\t\t\t\t\t\tcodeEditorService.getActiveCodeEditor() &&\n\t\t\t\t\t\t\t\t!notificationsVisible\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthis.isRendered = true;\n\n\t\t\t\t\t\t\t\tconst welcomeWidget = new WelcomeWidget(\n\t\t\t\t\t\t\t\t\tcodeEditor,\n\t\t\t\t\t\t\t\t\tinstantiationService,\n\t\t\t\t\t\t\t\t\tcommandService,\n\t\t\t\t\t\t\t\t\ttelemetryService,\n\t\t\t\t\t\t\t\t\topenerService,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\twelcomeWidget.render(\n\t\t\t\t\t\t\t\t\twelcomeDialog.title,\n\t\t\t\t\t\t\t\t\twelcomeDialog.message,\n\t\t\t\t\t\t\t\t\twelcomeDialog.buttonText,\n\t\t\t\t\t\t\t\t\twelcomeDialog.buttonCommand,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 3000);\n\n\t\t\t\t\t\tthis._register(\n\t\t\t\t\t\t\tcodeEditor.onDidChangeModelContent((e) => {\n\t\t\t\t\t\t\t\tif (!this.isRendered) {\n\t\t\t\t\t\t\t\t\tscheduler.schedule();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tWelcomeDialogContribution,\n\tLifecyclePhase.Eventually,\n);\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n);\nconfigurationRegistry.registerConfiguration({\n\t...applicationConfigurationNodeBase,\n\tproperties: {\n\t\t\"workbench.welcome.experimental.dialog\": {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t\ttags: [\"experimental\"],\n\t\t\tdescription: localize(\n\t\t\t\t\"workbench.welcome.dialog\",\n\t\t\t\t\"When enabled, a welcome widget is shown in the editor\",\n\t\t\t),\n\t\t},\n\t},\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,wBAAwB;AACjC,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC;AAAA,EACC,cAAc;AAAA,EACd;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAC/B,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAClC,SAAS,wCAAwC;AACjD;AAAA,EAGC,cAAc;AAAA,OACR;AACP,SAAS,sBAAsB;AAC/B,SAAS,2CAA2C;AACpD,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAE9B,MAAM,mBAAmB;AAEzB,IAAM,4BAAN,cACS,WAET;AAAA,EA5CA,OA4CA;AAAA;AAAA;AAAA,EACS,aAAa;AAAA,EAErB,YACkB,gBAEjB,oBACuB,sBACH,gBACA,mBACG,sBACN,gBACE,kBACH,eACA,eACf;AACD,UAAM;AAEN,QAAI,CAAC,eAAe,MAAM,aAAa,WAAW,GAAG;AACpD;AAAA,IACD;AAEA,UAAM,UAAU,qBAAqB,QAAiB,gBAAgB;AACtE,QAAI,CAAC,QAAQ,OAAO;AACnB;AAAA,IACD;AAEA,UAAM,gBAAgB,mBAAmB,SAAS;AAClD,QAAI,CAAC,eAAe;AACnB;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,cAAc,wBAAwB,MAAM;AAC3C,YAAI,CAAC,KAAK,YAAY;AACrB,gBAAM,aAAa,kBAAkB,oBAAoB;AACzD,cAAI,YAAY,SAAS,GAAG;AAC3B,kBAAM,YAAY,IAAI,iBAAiB,MAAM;AAC5C,oBAAM,uBACL,eAAe;AAAA,gBACd,eAAe;AAAA,kBACd;AAAA,gBACD;AAAA,cACD,KACA,eAAe;AAAA,gBACd,eAAe;AAAA,kBACd;AAAA,gBACD;AAAA,cACD;AACD,kBACC,eACC,kBAAkB,oBAAoB,KACvC,CAAC,sBACA;AACD,qBAAK,aAAa;AAElB,sBAAM,gBAAgB,IAAI;AAAA,kBACzB;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,gBACD;AAEA,8BAAc;AAAA,kBACb,cAAc;AAAA,kBACd,cAAc;AAAA,kBACd,cAAc;AAAA,kBACd,cAAc;AAAA,gBACf;AAAA,cACD;AAAA,YACD,GAAG,GAAI;AAEP,iBAAK;AAAA,cACJ,WAAW,wBAAwB,CAAC,MAAM;AACzC,oBAAI,CAAC,KAAK,YAAY;AACrB,4BAAU,SAAS;AAAA,gBACpB;AAAA,cACD,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AACD;AAxFM,4BAAN;AAAA,EAOG;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAjBG;AA0FN,SAAS;AAAA,EACR,oBAAoB;AACrB,EAAE;AAAA,EACD;AAAA,EACA,eAAe;AAChB;AAEA,MAAM,wBAAwB,SAAS;AAAA,EACtC,wBAAwB;AACzB;AACA,sBAAsB,sBAAsB;AAAA,EAC3C,GAAG;AAAA,EACH,YAAY;AAAA,IACX,yCAAyC;AAAA,MACxC,OAAO,mBAAmB;AAAA,MAC1B,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM,CAAC,cAAc;AAAA,MACrB,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD,CAAC;",
  "names": []
}
