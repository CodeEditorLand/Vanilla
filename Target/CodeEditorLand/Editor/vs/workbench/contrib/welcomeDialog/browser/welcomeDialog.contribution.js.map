{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeDialog/browser/welcomeDialog.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IStorageService, StorageScope } from '../../../../platform/storage/common/storage.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../../../services/environment/browser/environmentService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { WelcomeWidget } from './welcomeWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { localize } from '../../../../nls.js';\nimport { applicationConfigurationNodeBase } from '../../../common/configuration.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\n\nconst configurationKey = 'workbench.welcome.experimental.dialog';\n\nclass WelcomeDialogContribution extends Disposable implements IWorkbenchContribution {\n\n\tprivate isRendered = false;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IBrowserWorkbenchEnvironmentService environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextService: IContextKeyService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper();\n\n\t\tif (!storageService.isNew(StorageScope.APPLICATION)) {\n\t\t\treturn; // do not show if this is not the first session\n\t\t}\n\n\t\tconst setting = configurationService.inspect<boolean>(configurationKey);\n\t\tif (!setting.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst welcomeDialog = environmentService.options?.welcomeDialog;\n\t\tif (!welcomeDialog) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._register(editorService.onDidActiveEditorChange(() => {\n\t\t\tif (!this.isRendered) {\n\n\t\t\t\tconst codeEditor = codeEditorService.getActiveCodeEditor();\n\t\t\t\tif (codeEditor?.hasModel()) {\n\t\t\t\t\tconst scheduler = new RunOnceScheduler(() => {\n\t\t\t\t\t\tconst notificationsVisible = contextService.contextMatchesRules(ContextKeyExpr.deserialize('notificationCenterVisible')) ||\n\t\t\t\t\t\t\tcontextService.contextMatchesRules(ContextKeyExpr.deserialize('notificationToastsVisible'));\n\t\t\t\t\t\tif (codeEditor === codeEditorService.getActiveCodeEditor() && !notificationsVisible) {\n\t\t\t\t\t\t\tthis.isRendered = true;\n\n\t\t\t\t\t\t\tconst welcomeWidget = new WelcomeWidget(\n\t\t\t\t\t\t\t\tcodeEditor,\n\t\t\t\t\t\t\t\tinstantiationService,\n\t\t\t\t\t\t\t\tcommandService,\n\t\t\t\t\t\t\t\ttelemetryService,\n\t\t\t\t\t\t\t\topenerService);\n\n\t\t\t\t\t\t\twelcomeWidget.render(welcomeDialog.title,\n\t\t\t\t\t\t\t\twelcomeDialog.message,\n\t\t\t\t\t\t\t\twelcomeDialog.buttonText,\n\t\t\t\t\t\t\t\twelcomeDialog.buttonCommand);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 3000);\n\n\t\t\t\t\tthis._register(codeEditor.onDidChangeModelContent((e) => {\n\t\t\t\t\t\tif (!this.isRendered) {\n\t\t\t\t\t\t\tscheduler.schedule();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(WelcomeDialogContribution, LifecyclePhase.Eventually);\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\t...applicationConfigurationNodeBase,\n\tproperties: {\n\t\t'workbench.welcome.experimental.dialog': {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\ttags: ['experimental'],\n\t\t\tdescription: localize('workbench.welcome.dialog', \"When enabled, a welcome widget is shown in the editor\")\n\t\t}\n\t}\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,sBAAsB;AAC/B,SAAS,gBAAgB;AACzB,SAAS,cAAc,qBAAqB,iCAAiC,8BAA8B;AAC3G,SAAS,iBAAiB,oBAAoB;AAC9C,SAAS,2CAA2C;AACpD,SAAS,6BAA6B;AACtC,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB,0BAA0B;AACnD,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC,SAAS,uBAAuB;AAChC,SAAS,qBAAqB;AAC9B,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB,cAAc,yBAAyB,0BAA0B;AAClG,SAAS,gBAAgB;AACzB,SAAS,wCAAwC;AACjD,SAAS,wBAAwB;AACjC,SAAS,sBAAsB;AAE/B,MAAM,mBAAmB;AAEzB,IAAM,4BAAN,cAAwC,WAA6C;AAAA,EA3BrF,OA2BqF;AAAA;AAAA;AAAA,EAE5E,aAAa;AAAA,EAErB,YACkB,gBACoB,oBACd,sBACH,gBACA,mBACG,sBACN,gBACE,kBACH,eACA,eACf;AACD,UAAM;AAEN,QAAI,CAAC,eAAe,MAAM,aAAa,WAAW,GAAG;AACpD;AAAA,IACD;AAEA,UAAM,UAAU,qBAAqB,QAAiB,gBAAgB;AACtE,QAAI,CAAC,QAAQ,OAAO;AACnB;AAAA,IACD;AAEA,UAAM,gBAAgB,mBAAmB,SAAS;AAClD,QAAI,CAAC,eAAe;AACnB;AAAA,IACD;AAEA,SAAK,UAAU,cAAc,wBAAwB,MAAM;AAC1D,UAAI,CAAC,KAAK,YAAY;AAErB,cAAM,aAAa,kBAAkB,oBAAoB;AACzD,YAAI,YAAY,SAAS,GAAG;AAC3B,gBAAM,YAAY,IAAI,iBAAiB,MAAM;AAC5C,kBAAM,uBAAuB,eAAe,oBAAoB,eAAe,YAAY,2BAA2B,CAAC,KACtH,eAAe,oBAAoB,eAAe,YAAY,2BAA2B,CAAC;AAC3F,gBAAI,eAAe,kBAAkB,oBAAoB,KAAK,CAAC,sBAAsB;AACpF,mBAAK,aAAa;AAElB,oBAAM,gBAAgB,IAAI;AAAA,gBACzB;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cAAa;AAEd,4BAAc;AAAA,gBAAO,cAAc;AAAA,gBAClC,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,cAAa;AAAA,YAC7B;AAAA,UACD,GAAG,GAAI;AAEP,eAAK,UAAU,WAAW,wBAAwB,CAAC,MAAM;AACxD,gBAAI,CAAC,KAAK,YAAY;AACrB,wBAAU,SAAS;AAAA,YACpB;AAAA,UACD,CAAC,CAAC;AAAA,QACH;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AACD;AAlEM,4BAAN;AAAA,EAKG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAdG;AAoEN,SAAS,GAAoC,oBAAoB,SAAS,EACxE,8BAA8B,2BAA2B,eAAe,UAAU;AAEpF,MAAM,wBAAwB,SAAS,GAA2B,wBAAwB,aAAa;AACvG,sBAAsB,sBAAsB;AAAA,EAC3C,GAAG;AAAA,EACH,YAAY;AAAA,IACX,yCAAyC;AAAA,MACxC,OAAO,mBAAmB;AAAA,MAC1B,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM,CAAC,cAAc;AAAA,MACrB,aAAa,SAAS,4BAA4B,uDAAuD;AAAA,IAC1G;AAAA,EACD;AACD,CAAC;",
  "names": []
}
