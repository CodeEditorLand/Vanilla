{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/quickFix/browser/terminal.quickFix.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/terminalQuickFix.css\";\nimport type { Terminal as RawXtermTerminal } from \"@xterm/xterm\";\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../../base/common/lifecycle.js\";\nimport { localize2 } from \"../../../../../nls.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type {\n\tITerminalContribution,\n\tITerminalInstance,\n\tIXtermTerminal,\n} from \"../../../terminal/browser/terminal.js\";\nimport { registerActiveInstanceAction } from \"../../../terminal/browser/terminalActions.js\";\nimport { registerTerminalContribution } from \"../../../terminal/browser/terminalExtensions.js\";\nimport type { TerminalWidgetManager } from \"../../../terminal/browser/widgets/widgetManager.js\";\nimport type { ITerminalProcessManager } from \"../../../terminal/common/terminal.js\";\nimport { TerminalContextKeys } from \"../../../terminal/common/terminalContextKey.js\";\nimport { ITerminalQuickFixService } from \"./quickFix.js\";\nimport { TerminalQuickFixAddon } from \"./quickFixAddon.js\";\nimport {\n\tfreePort,\n\tgitCreatePr,\n\tgitPull,\n\tgitPushSetUpstream,\n\tgitSimilar,\n\tgitTwoDashes,\n\tpwshGeneralError,\n\tpwshUnixCommandNotFoundError,\n} from \"./terminalQuickFixBuiltinActions.js\";\nimport { TerminalQuickFixService } from \"./terminalQuickFixService.js\";\n\n// #region Services\n\nregisterSingleton(\n\tITerminalQuickFixService,\n\tTerminalQuickFixService,\n\tInstantiationType.Delayed,\n);\n\n// #endregion\n\n// #region Contributions\n\nclass TerminalQuickFixContribution\n\textends DisposableStore\n\timplements ITerminalContribution\n{\n\tstatic readonly ID = \"quickFix\";\n\n\tstatic get(\n\t\tinstance: ITerminalInstance,\n\t): TerminalQuickFixContribution | null {\n\t\treturn instance.getContribution<TerminalQuickFixContribution>(\n\t\t\tTerminalQuickFixContribution.ID,\n\t\t);\n\t}\n\n\tprivate _addon?: TerminalQuickFixAddon;\n\tget addon(): TerminalQuickFixAddon | undefined {\n\t\treturn this._addon;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\t// Create addon\n\t\tthis._addon = this._instantiationService.createInstance(\n\t\t\tTerminalQuickFixAddon,\n\t\t\tundefined,\n\t\t\tthis._instance.capabilities,\n\t\t);\n\t\txterm.raw.loadAddon(this._addon);\n\n\t\t// Hook up listeners\n\t\tthis.add(\n\t\t\tthis._addon.onDidRequestRerunCommand((e) =>\n\t\t\t\tthis._instance.runCommand(e.command, e.shouldExecute || false),\n\t\t\t),\n\t\t);\n\n\t\t// Register quick fixes\n\t\tfor (const actionOption of [\n\t\t\tgitTwoDashes(),\n\t\t\tgitPull(),\n\t\t\tfreePort((port: string, command: string) =>\n\t\t\t\tthis._instance.freePortKillProcess(port, command),\n\t\t\t),\n\t\t\tgitSimilar(),\n\t\t\tgitPushSetUpstream(),\n\t\t\tgitCreatePr(),\n\t\t\tpwshUnixCommandNotFoundError(),\n\t\t\tpwshGeneralError(),\n\t\t]) {\n\t\t\tthis._addon.registerCommandFinishedListener(actionOption);\n\t\t}\n\t}\n}\nregisterTerminalContribution(\n\tTerminalQuickFixContribution.ID,\n\tTerminalQuickFixContribution,\n);\n\n// #endregion\n\n// #region Actions\n\nenum TerminalQuickFixCommandId {\n\tShowQuickFixes = \"workbench.action.terminal.showQuickFixes\",\n}\n\nregisterActiveInstanceAction({\n\tid: TerminalQuickFixCommandId.ShowQuickFixes,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.showQuickFixes\",\n\t\t\"Show Terminal Quick Fixes\",\n\t),\n\tprecondition: TerminalContextKeys.focus,\n\tkeybinding: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t},\n\trun: (activeInstance) =>\n\t\tTerminalQuickFixContribution.get(activeInstance)?.addon?.showMenu(),\n});\n\n// #endregion\n"],
  "mappings": ";;;;;;;;;;;;AAKA,OAAO;AAEP,SAAS,SAAS,cAAc;AAChC,SAAS,uBAAuB;AAChC,SAAS,iBAAiB;AAC1B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,wBAAwB;AAMjC,SAAS,oCAAoC;AAC7C,SAAS,oCAAoC;AAG7C,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,+BAA+B;AAIxC;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;AAMA,IAAM,+BAAN,cACS,gBAET;AAAA,EAgBC,YACkB,WACjB,gBACA,eAEiB,uBAChB;AACD,UAAM;AANW;AAIA;AAAA,EAGlB;AAAA,EA/ED,OAuDA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAErB,OAAO,IACN,UACsC;AACtC,WAAO,SAAS;AAAA,MACf,6BAA6B;AAAA,IAC9B;AAAA,EACD;AAAA,EAEQ;AAAA,EACR,IAAI,QAA2C;AAC9C,WAAO,KAAK;AAAA,EACb;AAAA,EAYA,WAAW,OAAyD;AAEnE,SAAK,SAAS,KAAK,sBAAsB;AAAA,MACxC;AAAA,MACA;AAAA,MACA,KAAK,UAAU;AAAA,IAChB;AACA,UAAM,IAAI,UAAU,KAAK,MAAM;AAG/B,SAAK;AAAA,MACJ,KAAK,OAAO;AAAA,QAAyB,CAAC,MACrC,KAAK,UAAU,WAAW,EAAE,SAAS,EAAE,iBAAiB,KAAK;AAAA,MAC9D;AAAA,IACD;AAGA,eAAW,gBAAgB;AAAA,MAC1B,aAAa;AAAA,MACb,QAAQ;AAAA,MACR;AAAA,QAAS,CAAC,MAAc,YACvB,KAAK,UAAU,oBAAoB,MAAM,OAAO;AAAA,MACjD;AAAA,MACA,WAAW;AAAA,MACX,mBAAmB;AAAA,MACnB,YAAY;AAAA,MACZ,6BAA6B;AAAA,MAC7B,iBAAiB;AAAA,IAClB,GAAG;AACF,WAAK,OAAO,gCAAgC,YAAY;AAAA,IACzD;AAAA,EACD;AACD;AA7DM,+BAAN;AAAA,EAuBG;AAAA,GAvBG;AA8DN;AAAA,EACC,6BAA6B;AAAA,EAC7B;AACD;AAMA,IAAK,4BAAL,kBAAKA,+BAAL;AACC,EAAAA,2BAAA,oBAAiB;AADb,SAAAA;AAAA,GAAA;AAIL,6BAA6B;AAAA,EAC5B,IAAI;AAAA,EACJ,OAAO;AAAA,IACN;AAAA,IACA;AAAA,EACD;AAAA,EACA,cAAc,oBAAoB;AAAA,EAClC,YAAY;AAAA,IACX,SAAS,OAAO,UAAU,QAAQ;AAAA,IAClC,QAAQ,iBAAiB;AAAA,EAC1B;AAAA,EACA,KAAK,wBAAC,mBACL,6BAA6B,IAAI,cAAc,GAAG,OAAO,SAAS,GAD9D;AAEN,CAAC;",
  "names": ["TerminalQuickFixCommandId"]
}
