{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/quickFix/browser/quickFixAddon.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ITerminalAddon } from \"@xterm/headless\";\nimport type { IDecoration, Terminal } from \"@xterm/xterm\";\nimport * as dom from \"../../../../../base/browser/dom.js\";\nimport type { IAnchor } from \"../../../../../base/browser/ui/contextview/contextview.js\";\nimport type { IAction } from \"../../../../../base/common/actions.js\";\nimport { asArray } from \"../../../../../base/common/arrays.js\";\nimport { CancellationTokenSource } from \"../../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport { Emitter, type Event } from \"../../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../../base/common/network.js\";\nimport { ThemeIcon } from \"../../../../../base/common/themables.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport { CodeActionKind } from \"../../../../../editor/contrib/codeAction/common/types.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport {\n\tActionListItemKind,\n\ttype IActionListItem,\n} from \"../../../../../platform/actionWidget/browser/actionList.js\";\nimport { IActionWidgetService } from \"../../../../../platform/actionWidget/browser/actionWidget.js\";\nimport type { ActionSet } from \"../../../../../platform/actionWidget/common/actionWidget.js\";\nimport { ICommandService } from \"../../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { ILabelService } from \"../../../../../platform/label/common/label.js\";\nimport { IOpenerService } from \"../../../../../platform/opener/common/opener.js\";\nimport { ITelemetryService } from \"../../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype ITerminalCapabilityStore,\n\ttype ITerminalCommand,\n\tTerminalCapability,\n} from \"../../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport { getLinesForCommand } from \"../../../../../platform/terminal/common/capabilities/commandDetectionCapability.js\";\nimport type { ITerminalCommandSelector } from \"../../../../../platform/terminal/common/terminal.js\";\nimport { IExtensionService } from \"../../../../services/extensions/common/extensions.js\";\nimport {\n\tDecorationSelector,\n\tupdateLayout,\n} from \"../../../terminal/browser/xterm/decorationStyles.js\";\nimport {\n\ttype ITerminalQuickFix,\n\ttype ITerminalQuickFixCommandAction,\n\ttype ITerminalQuickFixInternalOptions,\n\ttype ITerminalQuickFixOpenerAction,\n\ttype ITerminalQuickFixOptions,\n\ttype ITerminalQuickFixProviderSelector,\n\ttype ITerminalQuickFixResolvedExtensionOptions,\n\tITerminalQuickFixService,\n\ttype ITerminalQuickFixTerminalCommandAction,\n\ttype ITerminalQuickFixUnresolvedExtensionOptions,\n\tTerminalQuickFixType,\n} from \"./quickFix.js\";\n\nenum QuickFixDecorationSelector {\n\tQuickFix = \"quick-fix\",\n}\n\nconst quickFixClasses = [\n\tQuickFixDecorationSelector.QuickFix,\n\tDecorationSelector.Codicon,\n\tDecorationSelector.CommandDecoration,\n\tDecorationSelector.XtermDecoration,\n];\n\nexport interface ITerminalQuickFixAddon {\n\tshowMenu(): void;\n\tonDidRequestRerunCommand: Event<{\n\t\tcommand: string;\n\t\tshouldExecute?: boolean;\n\t}>;\n\t/**\n\t * Registers a listener on onCommandFinished scoped to a particular command or regular\n\t * expression and provides a callback to be executed for commands that match.\n\t */\n\tregisterCommandFinishedListener(options: ITerminalQuickFixOptions): void;\n}\n\nexport class TerminalQuickFixAddon\n\textends Disposable\n\timplements ITerminalAddon, ITerminalQuickFixAddon\n{\n\tprivate readonly _onDidRequestRerunCommand = new Emitter<{\n\t\tcommand: string;\n\t\tshouldExecute?: boolean;\n\t}>();\n\treadonly onDidRequestRerunCommand = this._onDidRequestRerunCommand.event;\n\n\tprivate _terminal: Terminal | undefined;\n\n\tprivate _commandListeners: Map<\n\t\tstring,\n\t\t(\n\t\t\t| ITerminalQuickFixOptions\n\t\t\t| ITerminalQuickFixResolvedExtensionOptions\n\t\t\t| ITerminalQuickFixUnresolvedExtensionOptions\n\t\t)[]\n\t> = new Map();\n\n\tprivate _quickFixes: ITerminalAction[] | undefined;\n\n\tprivate _decoration: IDecoration | undefined;\n\n\tprivate _currentRenderContext:\n\t\t| {\n\t\t\t\tquickFixes: ITerminalAction[];\n\t\t\t\tanchor: IAnchor;\n\t\t\t\tparentElement: HTMLElement;\n\t\t  }\n\t\t| undefined;\n\n\tprivate _lastQuickFixId: string | undefined;\n\n\tprivate _registeredSelectors: Set<string> = new Set();\n\n\tconstructor(\n\t\tprivate readonly _aliases: string[][] | undefined,\n\t\tprivate readonly _capabilities: ITerminalCapabilityStore,\n\t\t@ITerminalQuickFixService private readonly _quickFixService: ITerminalQuickFixService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IActionWidgetService private readonly _actionWidgetService: IActionWidgetService,\n\t\t@ILabelService private readonly _labelService: ILabelService\n\t) {\n\t\tsuper();\n\t\tconst commandDetectionCapability = this._capabilities.get(TerminalCapability.CommandDetection);\n\t\tif (commandDetectionCapability) {\n\t\t\tthis._registerCommandHandlers();\n\t\t} else {\n\t\t\tthis._register(this._capabilities.onDidAddCapabilityType(c => {\n\t\t\t\tif (c === TerminalCapability.CommandDetection) {\n\t\t\t\t\tthis._registerCommandHandlers();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\tthis._register(this._quickFixService.onDidRegisterProvider(result => this.registerCommandFinishedListener(convertToQuickFixOptions(result))));\n\t\tthis._quickFixService.extensionQuickFixes.then(quickFixSelectors => {\n\t\t\tfor (const selector of quickFixSelectors) {\n\t\t\t\tthis.registerCommandSelector(selector);\n\t\t\t}\n\t\t});\n\t\tthis._register(this._quickFixService.onDidRegisterCommandSelector(selector => this.registerCommandSelector(selector)));\n\t\tthis._register(this._quickFixService.onDidUnregisterProvider(id => this._commandListeners.delete(id)));\n\t}\n\n\tactivate(terminal: Terminal): void {\n\t\tthis._terminal = terminal;\n\t}\n\n\tshowMenu(): void {\n\t\tif (!this._currentRenderContext) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst actions = this._currentRenderContext.quickFixes.map(\n\t\t\t(f) =>\n\t\t\t\tnew TerminalQuickFixItem(f, f.type, f.source, f.label, f.kind),\n\t\t);\n\t\tconst actionSet = {\n\t\t\tallActions: actions,\n\t\t\thasAutoFix: false,\n\t\t\thasAIFix: false,\n\t\t\tallAIFixes: false,\n\t\t\tvalidActions: actions,\n\t\t\tdispose: () => {},\n\t\t} satisfies ActionSet<TerminalQuickFixItem>;\n\t\tconst delegate = {\n\t\t\tonSelect: async (fix: TerminalQuickFixItem) => {\n\t\t\t\tfix.action?.run();\n\t\t\t\tthis._actionWidgetService.hide();\n\t\t\t\tthis._disposeQuickFix(fix.action.id, true);\n\t\t\t},\n\t\t\tonHide: () => {\n\t\t\t\tthis._terminal?.focus();\n\t\t\t},\n\t\t};\n\t\tthis._actionWidgetService.show(\n\t\t\t\"quickFixWidget\",\n\t\t\tfalse,\n\t\t\ttoActionWidgetItems(actionSet.validActions, true),\n\t\t\tdelegate,\n\t\t\tthis._currentRenderContext.anchor,\n\t\t\tthis._currentRenderContext.parentElement,\n\t\t);\n\t}\n\n\tregisterCommandSelector(selector: ITerminalCommandSelector): void {\n\t\tif (this._registeredSelectors.has(selector.id)) {\n\t\t\treturn;\n\t\t}\n\t\tconst matcherKey = selector.commandLineMatcher.toString();\n\t\tconst currentOptions = this._commandListeners.get(matcherKey) || [];\n\t\tcurrentOptions.push({\n\t\t\tid: selector.id,\n\t\t\ttype: \"unresolved\",\n\t\t\tcommandLineMatcher: selector.commandLineMatcher,\n\t\t\toutputMatcher: selector.outputMatcher,\n\t\t\tcommandExitResult: selector.commandExitResult,\n\t\t\tkind: selector.kind,\n\t\t});\n\t\tthis._registeredSelectors.add(selector.id);\n\t\tthis._commandListeners.set(matcherKey, currentOptions);\n\t}\n\n\tregisterCommandFinishedListener(\n\t\toptions:\n\t\t\t| ITerminalQuickFixOptions\n\t\t\t| ITerminalQuickFixResolvedExtensionOptions,\n\t): void {\n\t\tconst matcherKey = options.commandLineMatcher.toString();\n\t\tlet currentOptions = this._commandListeners.get(matcherKey) || [];\n\t\t// removes the unresolved options\n\t\tcurrentOptions = currentOptions.filter((o) => o.id !== options.id);\n\t\tcurrentOptions.push(options);\n\t\tthis._commandListeners.set(matcherKey, currentOptions);\n\t}\n\n\tprivate _registerCommandHandlers(): void {\n\t\tconst terminal = this._terminal;\n\t\tconst commandDetection = this._capabilities.get(\n\t\t\tTerminalCapability.CommandDetection,\n\t\t);\n\t\tif (!terminal || !commandDetection) {\n\t\t\treturn;\n\t\t}\n\t\tthis._register(\n\t\t\tcommandDetection.onCommandFinished(\n\t\t\t\tasync (command) =>\n\t\t\t\t\tawait this._resolveQuickFixes(command, this._aliases),\n\t\t\t),\n\t\t);\n\t}\n\n\t/**\n\t * Resolves quick fixes, if any, based on the\n\t * @param command & its output\n\t */\n\tprivate async _resolveQuickFixes(\n\t\tcommand: ITerminalCommand,\n\t\taliases?: string[][],\n\t): Promise<void> {\n\t\tconst terminal = this._terminal;\n\t\tif (!terminal || command.wasReplayed) {\n\t\t\treturn;\n\t\t}\n\t\tif (command.command !== \"\" && this._lastQuickFixId) {\n\t\t\tthis._disposeQuickFix(this._lastQuickFixId, false);\n\t\t}\n\n\t\tconst resolver = async (\n\t\t\tselector: ITerminalQuickFixOptions,\n\t\t\tlines?: string[],\n\t\t) => {\n\t\t\tif (lines === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst id = selector.id;\n\t\t\tawait this._extensionService.activateByEvent(\n\t\t\t\t`onTerminalQuickFixRequest:${id}`,\n\t\t\t);\n\t\t\treturn this._quickFixService.providers\n\t\t\t\t.get(id)\n\t\t\t\t?.provideTerminalQuickFixes(\n\t\t\t\t\tcommand,\n\t\t\t\t\tlines,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"resolved\",\n\t\t\t\t\t\tcommandLineMatcher: selector.commandLineMatcher,\n\t\t\t\t\t\toutputMatcher: selector.outputMatcher,\n\t\t\t\t\t\tcommandExitResult: selector.commandExitResult,\n\t\t\t\t\t\tkind: selector.kind,\n\t\t\t\t\t\tid: selector.id,\n\t\t\t\t\t},\n\t\t\t\t\tnew CancellationTokenSource().token,\n\t\t\t\t);\n\t\t};\n\t\tconst result = await getQuickFixesForCommand(\n\t\t\taliases,\n\t\t\tterminal,\n\t\t\tcommand,\n\t\t\tthis._commandListeners,\n\t\t\tthis._commandService,\n\t\t\tthis._openerService,\n\t\t\tthis._labelService,\n\t\t\tthis._onDidRequestRerunCommand,\n\t\t\tresolver,\n\t\t);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._quickFixes = result;\n\t\tthis._lastQuickFixId = this._quickFixes[0].id;\n\t\tthis._registerQuickFixDecoration();\n\t}\n\n\tprivate _disposeQuickFix(id: string, ranQuickFix: boolean): void {\n\t\ttype QuickFixResultTelemetryEvent = {\n\t\t\tquickFixId: string;\n\t\t\tranQuickFix: boolean;\n\t\t};\n\t\ttype QuickFixClassification = {\n\t\t\towner: \"meganrogge\";\n\t\t\tquickFixId: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The quick fix ID\";\n\t\t\t};\n\t\t\tranQuickFix: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether the quick fix was run\";\n\t\t\t};\n\t\t\tcomment: \"Terminal quick fixes\";\n\t\t};\n\t\tthis._telemetryService?.publicLog2<\n\t\t\tQuickFixResultTelemetryEvent,\n\t\t\tQuickFixClassification\n\t\t>(\"terminal/quick-fix\", {\n\t\t\tquickFixId: id,\n\t\t\tranQuickFix,\n\t\t});\n\t\tthis._decoration?.dispose();\n\t\tthis._decoration = undefined;\n\t\tthis._quickFixes = undefined;\n\t\tthis._lastQuickFixId = undefined;\n\t}\n\n\t/**\n\t * Registers a decoration with the quick fixes\n\t */\n\tprivate _registerQuickFixDecoration(): void {\n\t\tif (!this._terminal) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._quickFixes) {\n\t\t\treturn;\n\t\t}\n\t\tconst marker = this._terminal.registerMarker();\n\t\tif (!marker) {\n\t\t\treturn;\n\t\t}\n\t\tconst decoration = this._terminal.registerDecoration({\n\t\t\tmarker,\n\t\t\tlayer: \"top\",\n\t\t});\n\t\tif (!decoration) {\n\t\t\treturn;\n\t\t}\n\t\tthis._decoration = decoration;\n\t\tconst fixes = this._quickFixes;\n\t\tif (!fixes) {\n\t\t\tdecoration.dispose();\n\t\t\treturn;\n\t\t}\n\t\tdecoration?.onRender((e: HTMLElement) => {\n\t\t\tconst rect = e.getBoundingClientRect();\n\t\t\tconst anchor = {\n\t\t\t\tx: rect.x,\n\t\t\t\ty: rect.y,\n\t\t\t\twidth: rect.width,\n\t\t\t\theight: rect.height,\n\t\t\t};\n\n\t\t\tif (e.classList.contains(QuickFixDecorationSelector.QuickFix)) {\n\t\t\t\tif (this._currentRenderContext) {\n\t\t\t\t\tthis._currentRenderContext.anchor = anchor;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.classList.add(...quickFixClasses);\n\t\t\tconst isExplainOnly = fixes.every((e) => e.kind === \"explain\");\n\t\t\tif (isExplainOnly) {\n\t\t\t\te.classList.add(\"explainOnly\");\n\t\t\t}\n\t\t\te.classList.add(\n\t\t\t\t...ThemeIcon.asClassNameArray(\n\t\t\t\t\tisExplainOnly ? Codicon.sparkle : Codicon.lightBulb,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tupdateLayout(this._configurationService, e);\n\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\tAccessibilitySignal.terminalQuickFix,\n\t\t\t);\n\n\t\t\tconst parentElement = (e.closest(\".xterm\") as HTMLElement)\n\t\t\t\t.parentElement;\n\t\t\tif (!parentElement) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._currentRenderContext = {\n\t\t\t\tquickFixes: fixes,\n\t\t\t\tanchor,\n\t\t\t\tparentElement,\n\t\t\t};\n\t\t\tthis._register(\n\t\t\t\tdom.addDisposableListener(e, dom.EventType.CLICK, () =>\n\t\t\t\t\tthis.showMenu(),\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\t\tdecoration.onDispose(() => (this._currentRenderContext = undefined));\n\t\tthis._quickFixes = undefined;\n\t}\n}\n\nexport interface ITerminalAction extends IAction {\n\ttype: TerminalQuickFixType;\n\tkind?: \"fix\" | \"explain\";\n\tsource: string;\n\turi?: URI;\n\tcommand?: string;\n\tshouldExecute?: boolean;\n}\n\nexport async function getQuickFixesForCommand(\n\taliases: string[][] | undefined,\n\tterminal: Terminal,\n\tterminalCommand: ITerminalCommand,\n\tquickFixOptions: Map<string, ITerminalQuickFixOptions[]>,\n\tcommandService: ICommandService,\n\topenerService: IOpenerService,\n\tlabelService: ILabelService,\n\tonDidRequestRerunCommand?: Emitter<{\n\t\tcommand: string;\n\t\tshouldExecute?: boolean;\n\t}>,\n\tgetResolvedFixes?: (\n\t\tselector: ITerminalQuickFixOptions,\n\t\tlines?: string[],\n\t) => Promise<ITerminalQuickFix | ITerminalQuickFix[] | undefined>,\n): Promise<ITerminalAction[] | undefined> {\n\t// Prevent duplicates by tracking added entries\n\tconst commandQuickFixSet: Set<string> = new Set();\n\tconst openQuickFixSet: Set<string> = new Set();\n\n\tconst fixes: ITerminalAction[] = [];\n\tconst newCommand = terminalCommand.command;\n\tfor (const options of quickFixOptions.values()) {\n\t\tfor (const option of options) {\n\t\t\tif (\n\t\t\t\t(option.commandExitResult === \"success\" &&\n\t\t\t\t\tterminalCommand.exitCode !== 0) ||\n\t\t\t\t(option.commandExitResult === \"error\" &&\n\t\t\t\t\tterminalCommand.exitCode === 0)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet quickFixes;\n\t\t\tif (option.type === \"resolved\") {\n\t\t\t\tquickFixes = await (\n\t\t\t\t\toption as ITerminalQuickFixResolvedExtensionOptions\n\t\t\t\t).getQuickFixes(\n\t\t\t\t\tterminalCommand,\n\t\t\t\t\tgetLinesForCommand(\n\t\t\t\t\t\tterminal.buffer.active,\n\t\t\t\t\t\tterminalCommand,\n\t\t\t\t\t\tterminal.cols,\n\t\t\t\t\t\toption.outputMatcher,\n\t\t\t\t\t),\n\t\t\t\t\toption,\n\t\t\t\t\tnew CancellationTokenSource().token,\n\t\t\t\t);\n\t\t\t} else if (option.type === \"unresolved\") {\n\t\t\t\tif (!getResolvedFixes) {\n\t\t\t\t\tthrow new Error(\"No resolved fix provider\");\n\t\t\t\t}\n\t\t\t\tquickFixes = await getResolvedFixes(\n\t\t\t\t\toption,\n\t\t\t\t\toption.outputMatcher\n\t\t\t\t\t\t? getLinesForCommand(\n\t\t\t\t\t\t\t\tterminal.buffer.active,\n\t\t\t\t\t\t\t\tterminalCommand,\n\t\t\t\t\t\t\t\tterminal.cols,\n\t\t\t\t\t\t\t\toption.outputMatcher,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: undefined,\n\t\t\t\t);\n\t\t\t} else if (option.type === \"internal\") {\n\t\t\t\tconst commandLineMatch = newCommand.match(\n\t\t\t\t\toption.commandLineMatcher,\n\t\t\t\t);\n\t\t\t\tif (!commandLineMatch) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst outputMatcher = option.outputMatcher;\n\t\t\t\tlet outputMatch;\n\t\t\t\tif (outputMatcher) {\n\t\t\t\t\toutputMatch = terminalCommand.getOutputMatch(outputMatcher);\n\t\t\t\t}\n\t\t\t\tif (!outputMatch) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst matchResult = {\n\t\t\t\t\tcommandLineMatch,\n\t\t\t\t\toutputMatch,\n\t\t\t\t\tcommandLine: terminalCommand.command,\n\t\t\t\t};\n\t\t\t\tquickFixes = (\n\t\t\t\t\toption as ITerminalQuickFixInternalOptions\n\t\t\t\t).getQuickFixes(matchResult);\n\t\t\t}\n\n\t\t\tif (quickFixes) {\n\t\t\t\tfor (const quickFix of asArray(quickFixes)) {\n\t\t\t\t\tlet action: ITerminalAction | undefined;\n\t\t\t\t\tif (\"type\" in quickFix) {\n\t\t\t\t\t\tswitch (quickFix.type) {\n\t\t\t\t\t\t\tcase TerminalQuickFixType.TerminalCommand: {\n\t\t\t\t\t\t\t\tconst fix =\n\t\t\t\t\t\t\t\t\tquickFix as ITerminalQuickFixTerminalCommandAction;\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tcommandQuickFixSet.has(fix.terminalCommand)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcommandQuickFixSet.add(fix.terminalCommand);\n\t\t\t\t\t\t\t\tconst label = localize(\n\t\t\t\t\t\t\t\t\t\"quickFix.command\",\n\t\t\t\t\t\t\t\t\t\"Run: {0}\",\n\t\t\t\t\t\t\t\t\tfix.terminalCommand,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\taction = {\n\t\t\t\t\t\t\t\t\ttype: TerminalQuickFixType.TerminalCommand,\n\t\t\t\t\t\t\t\t\tkind: option.kind,\n\t\t\t\t\t\t\t\t\tclass: undefined,\n\t\t\t\t\t\t\t\t\tsource: quickFix.source,\n\t\t\t\t\t\t\t\t\tid: quickFix.id,\n\t\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\t\tonDidRequestRerunCommand?.fire({\n\t\t\t\t\t\t\t\t\t\t\tcommand: fix.terminalCommand,\n\t\t\t\t\t\t\t\t\t\t\tshouldExecute:\n\t\t\t\t\t\t\t\t\t\t\t\tfix.shouldExecute ?? true,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttooltip: label,\n\t\t\t\t\t\t\t\t\tcommand: fix.terminalCommand,\n\t\t\t\t\t\t\t\t\tshouldExecute: fix.shouldExecute,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase TerminalQuickFixType.Opener: {\n\t\t\t\t\t\t\t\tconst fix =\n\t\t\t\t\t\t\t\t\tquickFix as ITerminalQuickFixOpenerAction;\n\t\t\t\t\t\t\t\tif (!fix.uri) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (openQuickFixSet.has(fix.uri.toString())) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\topenQuickFixSet.add(fix.uri.toString());\n\t\t\t\t\t\t\t\tconst isUrl =\n\t\t\t\t\t\t\t\t\tfix.uri.scheme === Schemas.http ||\n\t\t\t\t\t\t\t\t\tfix.uri.scheme === Schemas.https;\n\t\t\t\t\t\t\t\tconst uriLabel = isUrl\n\t\t\t\t\t\t\t\t\t? encodeURI(fix.uri.toString(true))\n\t\t\t\t\t\t\t\t\t: labelService.getUriLabel(fix.uri);\n\t\t\t\t\t\t\t\tconst label = localize(\n\t\t\t\t\t\t\t\t\t\"quickFix.opener\",\n\t\t\t\t\t\t\t\t\t\"Open: {0}\",\n\t\t\t\t\t\t\t\t\turiLabel,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\taction = {\n\t\t\t\t\t\t\t\t\tsource: quickFix.source,\n\t\t\t\t\t\t\t\t\tid: quickFix.id,\n\t\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\t\ttype: TerminalQuickFixType.Opener,\n\t\t\t\t\t\t\t\t\tkind: option.kind,\n\t\t\t\t\t\t\t\t\tclass: undefined,\n\t\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\t\trun: () => openerService.open(fix.uri),\n\t\t\t\t\t\t\t\t\ttooltip: label,\n\t\t\t\t\t\t\t\t\turi: fix.uri,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase TerminalQuickFixType.Port: {\n\t\t\t\t\t\t\t\tconst fix = quickFix as ITerminalAction;\n\t\t\t\t\t\t\t\taction = {\n\t\t\t\t\t\t\t\t\tsource: \"builtin\",\n\t\t\t\t\t\t\t\t\ttype: fix.type,\n\t\t\t\t\t\t\t\t\tkind: option.kind,\n\t\t\t\t\t\t\t\t\tid: fix.id,\n\t\t\t\t\t\t\t\t\tlabel: fix.label,\n\t\t\t\t\t\t\t\t\tclass: fix.class,\n\t\t\t\t\t\t\t\t\tenabled: fix.enabled,\n\t\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\t\tfix.run();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttooltip: fix.tooltip,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase TerminalQuickFixType.VscodeCommand: {\n\t\t\t\t\t\t\t\tconst fix =\n\t\t\t\t\t\t\t\t\tquickFix as ITerminalQuickFixCommandAction;\n\t\t\t\t\t\t\t\taction = {\n\t\t\t\t\t\t\t\t\tsource: quickFix.source,\n\t\t\t\t\t\t\t\t\ttype: fix.type,\n\t\t\t\t\t\t\t\t\tkind: option.kind,\n\t\t\t\t\t\t\t\t\tid: fix.id,\n\t\t\t\t\t\t\t\t\tlabel: fix.title,\n\t\t\t\t\t\t\t\t\tclass: undefined,\n\t\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\t\t\tcommandService.executeCommand(fix.id),\n\t\t\t\t\t\t\t\t\ttooltip: fix.title,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (action) {\n\t\t\t\t\t\t\tfixes.push(action);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn fixes.length > 0 ? fixes : undefined;\n}\n\nfunction convertToQuickFixOptions(\n\tselectorProvider: ITerminalQuickFixProviderSelector,\n): ITerminalQuickFixResolvedExtensionOptions {\n\treturn {\n\t\tid: selectorProvider.selector.id,\n\t\ttype: \"resolved\",\n\t\tcommandLineMatcher: selectorProvider.selector.commandLineMatcher,\n\t\toutputMatcher: selectorProvider.selector.outputMatcher,\n\t\tcommandExitResult: selectorProvider.selector.commandExitResult,\n\t\tkind: selectorProvider.selector.kind,\n\t\tgetQuickFixes: selectorProvider.provider.provideTerminalQuickFixes,\n\t};\n}\n\nclass TerminalQuickFixItem {\n\treadonly disabled = false;\n\tconstructor(\n\t\treadonly action: ITerminalAction,\n\t\treadonly type: TerminalQuickFixType,\n\t\treadonly source: string,\n\t\treadonly title: string | undefined,\n\t\treadonly kind: \"fix\" | \"explain\" = \"fix\",\n\t) {}\n}\n\nfunction toActionWidgetItems(\n\tinputQuickFixes: readonly TerminalQuickFixItem[],\n\tshowHeaders: boolean,\n): IActionListItem<TerminalQuickFixItem>[] {\n\tconst menuItems: IActionListItem<TerminalQuickFixItem>[] = [];\n\tmenuItems.push({\n\t\tkind: ActionListItemKind.Header,\n\t\tgroup: {\n\t\t\tkind: CodeActionKind.QuickFix,\n\t\t\ttitle: localize(\"codeAction.widget.id.quickfix\", \"Quick Fix\"),\n\t\t},\n\t});\n\tfor (const quickFix of showHeaders\n\t\t? inputQuickFixes\n\t\t: inputQuickFixes.filter((i) => !!i.action)) {\n\t\tif (!quickFix.disabled && quickFix.action) {\n\t\t\tmenuItems.push({\n\t\t\t\tkind: ActionListItemKind.Action,\n\t\t\t\titem: quickFix,\n\t\t\t\tgroup: {\n\t\t\t\t\tkind: CodeActionKind.QuickFix,\n\t\t\t\t\ticon: getQuickFixIcon(quickFix),\n\t\t\t\t\ttitle: quickFix.action.label,\n\t\t\t\t},\n\t\t\t\tdisabled: false,\n\t\t\t\tlabel: quickFix.title,\n\t\t\t});\n\t\t}\n\t}\n\treturn menuItems;\n}\n\nfunction getQuickFixIcon(quickFix: TerminalQuickFixItem): ThemeIcon {\n\tif (quickFix.kind === \"explain\") {\n\t\treturn Codicon.sparkle;\n\t}\n\tswitch (quickFix.type) {\n\t\tcase TerminalQuickFixType.Opener:\n\t\t\tif (\"uri\" in quickFix.action && quickFix.action.uri) {\n\t\t\t\tconst isUrl =\n\t\t\t\t\tquickFix.action.uri.scheme === Schemas.http ||\n\t\t\t\t\tquickFix.action.uri.scheme === Schemas.https;\n\t\t\t\treturn isUrl ? Codicon.linkExternal : Codicon.goToFile;\n\t\t\t}\n\t\tcase TerminalQuickFixType.TerminalCommand:\n\t\t\treturn Codicon.run;\n\t\tcase TerminalQuickFixType.Port:\n\t\t\treturn Codicon.debugDisconnect;\n\t\tcase TerminalQuickFixType.VscodeCommand:\n\t\t\treturn Codicon.lightbulb;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["QuickFixDecorationSelector", "e"]
}
