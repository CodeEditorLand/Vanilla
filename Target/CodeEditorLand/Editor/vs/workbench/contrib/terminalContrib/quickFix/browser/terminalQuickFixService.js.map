{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/quickFix/browser/terminalQuickFixService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../../base/common/event.js\";\nimport {\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport { ILogService } from \"../../../../../platform/log/common/log.js\";\nimport type { ITerminalCommandSelector } from \"../../../../../platform/terminal/common/terminal.js\";\nimport { isProposedApiEnabled } from \"../../../../services/extensions/common/extensions.js\";\nimport { ExtensionsRegistry } from \"../../../../services/extensions/common/extensionsRegistry.js\";\nimport type {\n\tITerminalQuickFixProvider,\n\tITerminalQuickFixProviderSelector,\n\tITerminalQuickFixService,\n} from \"./quickFix.js\";\n\nexport class TerminalQuickFixService implements ITerminalQuickFixService {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _selectors: Map<string, ITerminalCommandSelector> = new Map();\n\n\tprivate _providers: Map<string, ITerminalQuickFixProvider> = new Map();\n\tget providers(): Map<string, ITerminalQuickFixProvider> {\n\t\treturn this._providers;\n\t}\n\n\tprivate readonly _onDidRegisterProvider =\n\t\tnew Emitter<ITerminalQuickFixProviderSelector>();\n\treadonly onDidRegisterProvider = this._onDidRegisterProvider.event;\n\tprivate readonly _onDidRegisterCommandSelector =\n\t\tnew Emitter<ITerminalCommandSelector>();\n\treadonly onDidRegisterCommandSelector =\n\t\tthis._onDidRegisterCommandSelector.event;\n\tprivate readonly _onDidUnregisterProvider = new Emitter<string>();\n\treadonly onDidUnregisterProvider = this._onDidUnregisterProvider.event;\n\n\treadonly extensionQuickFixes: Promise<Array<ITerminalCommandSelector>>;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis.extensionQuickFixes = new Promise((r) => quickFixExtensionPoint.setHandler(fixes => {\n\t\t\tr(fixes.filter(c => isProposedApiEnabled(c.description, 'terminalQuickFixProvider')).flatMap(c => {\n\t\t\t\tif (!c.value) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\treturn c.value.map(fix => { return { ...fix, extensionIdentifier: c.description.identifier.value }; });\n\t\t\t}));\n\t\t}));\n\t\tthis.extensionQuickFixes.then(selectors => {\n\t\t\tfor (const selector of selectors) {\n\t\t\t\tthis.registerCommandSelector(selector);\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterCommandSelector(selector: ITerminalCommandSelector): void {\n\t\tthis._selectors.set(selector.id, selector);\n\t\tthis._onDidRegisterCommandSelector.fire(selector);\n\t}\n\n\tregisterQuickFixProvider(\n\t\tid: string,\n\t\tprovider: ITerminalQuickFixProvider,\n\t): IDisposable {\n\t\t// This is more complicated than it looks like it should be because we need to return an\n\t\t// IDisposable synchronously but we must await ITerminalContributionService.quickFixes\n\t\t// asynchronously before actually registering the provider.\n\t\tlet disposed = false;\n\t\tthis.extensionQuickFixes.then(() => {\n\t\t\tif (disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._providers.set(id, provider);\n\t\t\tconst selector = this._selectors.get(id);\n\t\t\tif (!selector) {\n\t\t\t\tthis._logService.error(`No registered selector for ID: ${id}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._onDidRegisterProvider.fire({ selector, provider });\n\t\t});\n\t\treturn toDisposable(() => {\n\t\t\tdisposed = true;\n\t\t\tthis._providers.delete(id);\n\t\t\tconst selector = this._selectors.get(id);\n\t\t\tif (selector) {\n\t\t\t\tthis._selectors.delete(id);\n\t\t\t\tthis._onDidUnregisterProvider.fire(selector.id);\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst quickFixExtensionPoint = ExtensionsRegistry.registerExtensionPoint<\n\tITerminalCommandSelector[]\n>({\n\textensionPoint: \"terminalQuickFixes\",\n\tdefaultExtensionKind: [\"workspace\"],\n\tactivationEventsGenerator: (\n\t\tterminalQuickFixes: ITerminalCommandSelector[],\n\t\tresult: { push(item: string): void },\n\t) => {\n\t\tfor (const quickFixContrib of terminalQuickFixes ?? []) {\n\t\t\tresult.push(`onTerminalQuickFixRequest:${quickFixContrib.id}`);\n\t\t}\n\t},\n\tjsonSchema: {\n\t\tdescription: localize(\n\t\t\t\"vscode.extension.contributes.terminalQuickFixes\",\n\t\t\t\"Contributes terminal quick fixes.\",\n\t\t),\n\t\ttype: \"array\",\n\t\titems: {\n\t\t\ttype: \"object\",\n\t\t\tadditionalProperties: false,\n\t\t\trequired: [\n\t\t\t\t\"id\",\n\t\t\t\t\"commandLineMatcher\",\n\t\t\t\t\"outputMatcher\",\n\t\t\t\t\"commandExitResult\",\n\t\t\t],\n\t\t\tdefaultSnippets: [\n\t\t\t\t{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tid: \"$1\",\n\t\t\t\t\t\tcommandLineMatcher: \"$2\",\n\t\t\t\t\t\toutputMatcher: \"$3\",\n\t\t\t\t\t\texitStatus: \"$4\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tproperties: {\n\t\t\t\tid: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"vscode.extension.contributes.terminalQuickFixes.id\",\n\t\t\t\t\t\t\"The ID of the quick fix provider\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t\tcommandLineMatcher: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"vscode.extension.contributes.terminalQuickFixes.commandLineMatcher\",\n\t\t\t\t\t\t\"A regular expression or string to test the command line against\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t\toutputMatcher: {\n\t\t\t\t\tmarkdownDescription: localize(\n\t\t\t\t\t\t\"vscode.extension.contributes.terminalQuickFixes.outputMatcher\",\n\t\t\t\t\t\t\"A regular expression or string to match a single line of the output against, which provides groups to be referenced in terminalCommand and uri.\\n\\nFor example:\\n\\n `lineMatcher: /git push --set-upstream origin (?<branchName>[^s]+)/;`\\n\\n`terminalCommand: 'git push --set-upstream origin ${group:branchName}';`\\n\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\trequired: [\"lineMatcher\", \"anchor\", \"offset\", \"length\"],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlineMatcher: {\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\"A regular expression or string to test the command line against\",\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tanchor: {\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\"Where the search should begin in the buffer\",\n\t\t\t\t\t\t\tenum: [\"top\", \"bottom\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\toffset: {\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\"The number of lines vertically from the anchor in the buffer to start matching against\",\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlength: {\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\"The number of rows to match against, this should be as small as possible for performance reasons\",\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcommandExitResult: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"vscode.extension.contributes.terminalQuickFixes.commandExitResult\",\n\t\t\t\t\t\t\"The command exit result to match on\",\n\t\t\t\t\t),\n\t\t\t\t\tenum: [\"success\", \"error\"],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\"The command exited with an exit code of zero.\",\n\t\t\t\t\t\t\"The command exited with a non-zero exit code.\",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tkind: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"vscode.extension.contributes.terminalQuickFixes.kind\",\n\t\t\t\t\t\t\"The kind of the resulting quick fix. This changes how the quick fix is presented. Defaults to {0}.\",\n\t\t\t\t\t\t'`\"fix\"`',\n\t\t\t\t\t),\n\t\t\t\t\tenum: [\"default\", \"explain\"],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\"A high confidence quick fix.\",\n\t\t\t\t\t\t\"An explanation of the problem.\",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
