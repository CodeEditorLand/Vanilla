{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/quickFix/browser/terminalQuickFixService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../../nls.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\nimport { ITerminalCommandSelector } from '../../../../../platform/terminal/common/terminal.js';\nimport { ITerminalQuickFixService, ITerminalQuickFixProvider, ITerminalQuickFixProviderSelector } from './quickFix.js';\nimport { isProposedApiEnabled } from '../../../../services/extensions/common/extensions.js';\nimport { ExtensionsRegistry } from '../../../../services/extensions/common/extensionsRegistry.js';\n\nexport class TerminalQuickFixService implements ITerminalQuickFixService {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _selectors: Map<string, ITerminalCommandSelector> = new Map();\n\n\tprivate _providers: Map<string, ITerminalQuickFixProvider> = new Map();\n\tget providers(): Map<string, ITerminalQuickFixProvider> { return this._providers; }\n\n\tprivate readonly _onDidRegisterProvider = new Emitter<ITerminalQuickFixProviderSelector>();\n\treadonly onDidRegisterProvider = this._onDidRegisterProvider.event;\n\tprivate readonly _onDidRegisterCommandSelector = new Emitter<ITerminalCommandSelector>();\n\treadonly onDidRegisterCommandSelector = this._onDidRegisterCommandSelector.event;\n\tprivate readonly _onDidUnregisterProvider = new Emitter<string>();\n\treadonly onDidUnregisterProvider = this._onDidUnregisterProvider.event;\n\n\treadonly extensionQuickFixes: Promise<Array<ITerminalCommandSelector>>;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis.extensionQuickFixes = new Promise((r) => quickFixExtensionPoint.setHandler(fixes => {\n\t\t\tr(fixes.filter(c => isProposedApiEnabled(c.description, 'terminalQuickFixProvider')).map(c => {\n\t\t\t\tif (!c.value) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\treturn c.value.map(fix => { return { ...fix, extensionIdentifier: c.description.identifier.value }; });\n\t\t\t}).flat());\n\t\t}));\n\t\tthis.extensionQuickFixes.then(selectors => {\n\t\t\tfor (const selector of selectors) {\n\t\t\t\tthis.registerCommandSelector(selector);\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterCommandSelector(selector: ITerminalCommandSelector): void {\n\t\tthis._selectors.set(selector.id, selector);\n\t\tthis._onDidRegisterCommandSelector.fire(selector);\n\t}\n\n\tregisterQuickFixProvider(id: string, provider: ITerminalQuickFixProvider): IDisposable {\n\t\t// This is more complicated than it looks like it should be because we need to return an\n\t\t// IDisposable synchronously but we must await ITerminalContributionService.quickFixes\n\t\t// asynchronously before actually registering the provider.\n\t\tlet disposed = false;\n\t\tthis.extensionQuickFixes.then(() => {\n\t\t\tif (disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._providers.set(id, provider);\n\t\t\tconst selector = this._selectors.get(id);\n\t\t\tif (!selector) {\n\t\t\t\tthis._logService.error(`No registered selector for ID: ${id}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._onDidRegisterProvider.fire({ selector, provider });\n\t\t});\n\t\treturn toDisposable(() => {\n\t\t\tdisposed = true;\n\t\t\tthis._providers.delete(id);\n\t\t\tconst selector = this._selectors.get(id);\n\t\t\tif (selector) {\n\t\t\t\tthis._selectors.delete(id);\n\t\t\t\tthis._onDidUnregisterProvider.fire(selector.id);\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst quickFixExtensionPoint = ExtensionsRegistry.registerExtensionPoint<ITerminalCommandSelector[]>({\n\textensionPoint: 'terminalQuickFixes',\n\tdefaultExtensionKind: ['workspace'],\n\tactivationEventsGenerator: (terminalQuickFixes: ITerminalCommandSelector[], result: { push(item: string): void }) => {\n\t\tfor (const quickFixContrib of terminalQuickFixes ?? []) {\n\t\t\tresult.push(`onTerminalQuickFixRequest:${quickFixContrib.id}`);\n\t\t}\n\t},\n\tjsonSchema: {\n\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes', 'Contributes terminal quick fixes.'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tadditionalProperties: false,\n\t\t\trequired: ['id', 'commandLineMatcher', 'outputMatcher', 'commandExitResult'],\n\t\t\tdefaultSnippets: [{\n\t\t\t\tbody: {\n\t\t\t\t\tid: '$1',\n\t\t\t\t\tcommandLineMatcher: '$2',\n\t\t\t\t\toutputMatcher: '$3',\n\t\t\t\t\texitStatus: '$4'\n\t\t\t\t}\n\t\t\t}],\n\t\t\tproperties: {\n\t\t\t\tid: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes.id', \"The ID of the quick fix provider\"),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t},\n\t\t\t\tcommandLineMatcher: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes.commandLineMatcher', \"A regular expression or string to test the command line against\"),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t},\n\t\t\t\toutputMatcher: {\n\t\t\t\t\tmarkdownDescription: localize('vscode.extension.contributes.terminalQuickFixes.outputMatcher', \"A regular expression or string to match a single line of the output against, which provides groups to be referenced in terminalCommand and uri.\\n\\nFor example:\\n\\n `lineMatcher: /git push --set-upstream origin (?<branchName>[^\\s]+)/;`\\n\\n`terminalCommand: 'git push --set-upstream origin ${group:branchName}';`\\n\"),\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\trequired: ['lineMatcher', 'anchor', 'offset', 'length'],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlineMatcher: {\n\t\t\t\t\t\t\tdescription: 'A regular expression or string to test the command line against',\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tanchor: {\n\t\t\t\t\t\t\tdescription: 'Where the search should begin in the buffer',\n\t\t\t\t\t\t\tenum: ['top', 'bottom']\n\t\t\t\t\t\t},\n\t\t\t\t\t\toffset: {\n\t\t\t\t\t\t\tdescription: 'The number of lines vertically from the anchor in the buffer to start matching against',\n\t\t\t\t\t\t\ttype: 'number'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlength: {\n\t\t\t\t\t\t\tdescription: 'The number of rows to match against, this should be as small as possible for performance reasons',\n\t\t\t\t\t\t\ttype: 'number'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcommandExitResult: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes.commandExitResult', \"The command exit result to match on\"),\n\t\t\t\t\tenum: ['success', 'error'],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t'The command exited with an exit code of zero.',\n\t\t\t\t\t\t'The command exited with a non-zero exit code.'\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tkind: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes.kind', \"The kind of the resulting quick fix. This changes how the quick fix is presented. Defaults to {0}.\", '`\"fix\"`'),\n\t\t\t\t\tenum: ['default', 'explain'],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t'A high confidence quick fix.',\n\t\t\t\t\t\t'An explanation of the problem.'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
