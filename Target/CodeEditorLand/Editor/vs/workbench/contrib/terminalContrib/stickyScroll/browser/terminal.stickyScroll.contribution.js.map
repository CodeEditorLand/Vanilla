{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminal.stickyScroll.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/stickyScroll.css';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { registerTerminalAction } from '../../../terminal/browser/terminalActions.js';\nimport { registerTerminalContribution } from '../../../terminal/browser/terminalExtensions.js';\nimport { TerminalStickyScrollContribution } from './terminalStickyScrollContribution.js';\nimport { TerminalStickyScrollSettingId } from '../common/terminalStickyScrollConfiguration.js';\n\n// #region Terminal Contributions\n\nregisterTerminalContribution(TerminalStickyScrollContribution.ID, TerminalStickyScrollContribution, true);\n\n// #endregion\n\n// #region Actions\n\nconst enum TerminalStickyScrollCommandId {\n\tToggleStickyScroll = 'workbench.action.terminal.toggleStickyScroll',\n}\n\nregisterTerminalAction({\n\tid: TerminalStickyScrollCommandId.ToggleStickyScroll,\n\ttitle: localize2('workbench.action.terminal.toggleStickyScroll', 'Toggle Sticky Scroll'),\n\ttoggled: {\n\t\tcondition: ContextKeyExpr.equals(`config.${TerminalStickyScrollSettingId.Enabled}`, true),\n\t\ttitle: localize('stickyScroll', \"Sticky Scroll\"),\n\t\tmnemonicTitle: localize({ key: 'miStickyScroll', comment: ['&& denotes a mnemonic'] }, \"&&Sticky Scroll\"),\n\t},\n\trun: (c, accessor) => {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue(TerminalStickyScrollSettingId.Enabled);\n\t\treturn configurationService.updateValue(TerminalStickyScrollSettingId.Enabled, newValue);\n\t},\n\tmenu: [\n\t\t{ id: MenuId.TerminalStickyScrollContext }\n\t]\n});\n\n// #endregion\n\n// #region Colors\n\nimport './terminalStickyScrollColorRegistry.js';\n\n// #endregion\n"],
  "mappings": ";;AAKA,OAAO;AACP,SAAS,UAAU,iBAAiB;AACpC,SAAS,cAAc;AACvB,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B;AACvC,SAAS,oCAAoC;AAC7C,SAAS,wCAAwC;AACjD,SAAS,qCAAqC;AAI9C,6BAA6B,iCAAiC,IAAI,kCAAkC,IAAI;AAMxG,IAAW,gCAAX,kBAAWA,mCAAX;AACC,EAAAA,+BAAA,wBAAqB;AADX,SAAAA;AAAA,GAAA;AAIX,uBAAuB;AAAA,EACtB,IAAI;AAAA,EACJ,OAAO,UAAU,gDAAgD,sBAAsB;AAAA,EACvF,SAAS;AAAA,IACR,WAAW,eAAe,OAAO,UAAU,8BAA8B,OAAO,IAAI,IAAI;AAAA,IACxF,OAAO,SAAS,gBAAgB,eAAe;AAAA,IAC/C,eAAe,SAAS,EAAE,KAAK,kBAAkB,SAAS,CAAC,uBAAuB,EAAE,GAAG,iBAAiB;AAAA,EACzG;AAAA,EACA,KAAK,wBAAC,GAAG,aAAa;AACrB,UAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAC/D,UAAM,WAAW,CAAC,qBAAqB,SAAS,8BAA8B,OAAO;AACrF,WAAO,qBAAqB,YAAY,8BAA8B,SAAS,QAAQ;AAAA,EACxF,GAJK;AAAA,EAKL,MAAM;AAAA,IACL,EAAE,IAAI,OAAO,4BAA4B;AAAA,EAC1C;AACD,CAAC;AAMD,OAAO;",
  "names": ["TerminalStickyScrollCommandId"]
}
