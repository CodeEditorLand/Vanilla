{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminalStickyScrollOverlay.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { SerializeAddon as SerializeAddonType } from '@xterm/addon-serialize';\nimport type { WebglAddon as WebglAddonType } from '@xterm/addon-webgl';\nimport type { IBufferLine, IMarker, ITerminalOptions, ITheme, Terminal as RawXtermTerminal, Terminal as XTermTerminal } from '@xterm/xterm';\nimport { importAMDNodeModule } from '../../../../../amdX.js';\nimport { $, addDisposableListener, addStandardDisposableListener, getWindow } from '../../../../../base/browser/dom.js';\nimport { memoize, throttle } from '../../../../../base/common/decorators.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, combinedDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { removeAnsiEscapeCodes } from '../../../../../base/common/strings.js';\nimport './media/stickyScroll.css';\nimport { localize } from '../../../../../nls.js';\nimport { IMenu, IMenuService, MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { ICommandDetectionCapability, ITerminalCommand } from '../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { ICurrentPartialCommand } from '../../../../../platform/terminal/common/capabilities/commandDetection/terminalCommand.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { ITerminalConfigurationService, ITerminalInstance, IXtermColorProvider, IXtermTerminal } from '../../../terminal/browser/terminal.js';\nimport { openContextMenu } from '../../../terminal/browser/terminalContextMenu.js';\nimport { IXtermCore } from '../../../terminal/browser/xterm-private.js';\nimport { TERMINAL_CONFIG_SECTION, TerminalCommandId } from '../../../terminal/common/terminal.js';\nimport { terminalStrings } from '../../../terminal/common/terminalStrings.js';\nimport { TerminalStickyScrollSettingId } from '../common/terminalStickyScrollConfiguration.js';\nimport { terminalStickyScrollBackground, terminalStickyScrollHoverBackground } from './terminalStickyScrollColorRegistry.js';\n\nconst enum OverlayState {\n\t/** Initial state/disabled by the alt buffer. */\n\tOff = 0,\n\tOn = 1\n}\n\nconst enum CssClasses {\n\tVisible = 'visible'\n}\n\nconst enum Constants {\n\tStickyScrollPercentageCap = 0.4\n}\n\nexport class TerminalStickyScrollOverlay extends Disposable {\n\tprivate _stickyScrollOverlay?: RawXtermTerminal;\n\tprivate _serializeAddon?: SerializeAddonType;\n\tprivate _webglAddon?: WebglAddonType;\n\n\tprivate _element?: HTMLElement;\n\tprivate _currentStickyCommand?: ITerminalCommand | ICurrentPartialCommand;\n\tprivate _currentContent?: string;\n\tprivate _contextMenu: IMenu;\n\n\tprivate readonly _refreshListeners = this._register(new MutableDisposable());\n\n\tprivate _state: OverlayState = OverlayState.Off;\n\tprivate _isRefreshQueued = false;\n\tprivate _rawMaxLineCount: number = 5;\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprivate readonly _xterm: IXtermTerminal & { raw: RawXtermTerminal },\n\t\tprivate readonly _xtermColorProvider: IXtermColorProvider,\n\t\tprivate readonly _commandDetection: ICommandDetectionCapability,\n\t\txtermCtor: Promise<typeof XTermTerminal>,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@ITerminalConfigurationService private readonly _terminalConfigurationService: ITerminalConfigurationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\n\t\tthis._contextMenu = this._register(menuService.createMenu(MenuId.TerminalStickyScrollContext, contextKeyService));\n\n\t\t// Only show sticky scroll in the normal buffer\n\t\tthis._register(Event.runAndSubscribe(this._xterm.raw.buffer.onBufferChange, buffer => {\n\t\t\tthis._setState((buffer ?? this._xterm.raw.buffer.active).type === 'normal' ? OverlayState.On : OverlayState.Off);\n\t\t}));\n\n\t\t// React to configuration changes\n\t\tthis._register(Event.runAndSubscribe(configurationService.onDidChangeConfiguration, e => {\n\t\t\tif (!e || e.affectsConfiguration(TerminalStickyScrollSettingId.MaxLineCount)) {\n\t\t\t\tthis._rawMaxLineCount = configurationService.getValue(TerminalStickyScrollSettingId.MaxLineCount);\n\t\t\t}\n\t\t}));\n\n\t\t// React to terminal location changes\n\t\tthis._register(this._instance.onDidChangeTarget(() => this._syncOptions()));\n\n\t\t// Eagerly create the overlay\n\t\txtermCtor.then(ctor => {\n\t\t\tif (this._store.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._stickyScrollOverlay = this._register(new ctor({\n\t\t\t\trows: 1,\n\t\t\t\tcols: this._xterm.raw.cols,\n\t\t\t\tallowProposedApi: true,\n\t\t\t\t...this._getOptions()\n\t\t\t}));\n\t\t\tthis._refreshGpuAcceleration();\n\t\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\t\tif (e.affectsConfiguration(TERMINAL_CONFIG_SECTION)) {\n\t\t\t\t\tthis._syncOptions();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\t\tthis._syncOptions();\n\t\t\t}));\n\t\t\tthis._register(this._xterm.raw.onResize(() => {\n\t\t\t\tthis._syncOptions();\n\t\t\t\tthis._refresh();\n\t\t\t}));\n\t\t\tthis._register(this._instance.onDidChangeVisibility(isVisible => {\n\t\t\t\tif (isVisible) {\n\t\t\t\t\tthis._refresh();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._getSerializeAddonConstructor().then(SerializeAddon => {\n\t\t\t\tif (this._store.isDisposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._serializeAddon = this._register(new SerializeAddon());\n\t\t\t\tthis._xterm.raw.loadAddon(this._serializeAddon);\n\t\t\t\t// Trigger a render as the serialize addon is required to render\n\t\t\t\tthis._refresh();\n\t\t\t});\n\t\t});\n\t}\n\n\tlockHide() {\n\t\tthis._element?.classList.add('lock-hide');\n\t}\n\n\tunlockHide() {\n\t\tthis._element?.classList.remove('lock-hide');\n\t}\n\n\tprivate _setState(state: OverlayState) {\n\t\tif (this._state === state) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (state) {\n\t\t\tcase OverlayState.Off: {\n\t\t\t\tthis._setVisible(false);\n\t\t\t\tthis._uninstallRefreshListeners();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase OverlayState.On: {\n\t\t\t\tthis._refresh();\n\t\t\t\tthis._installRefreshListeners();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _installRefreshListeners() {\n\t\tif (!this._refreshListeners.value) {\n\t\t\tthis._refreshListeners.value = combinedDisposable(\n\t\t\t\tEvent.any(\n\t\t\t\t\tthis._xterm.raw.onScroll,\n\t\t\t\t\tthis._xterm.raw.onLineFeed,\n\t\t\t\t\t// Rarely an update may be required after just a cursor move, like when\n\t\t\t\t\t// scrolling horizontally in a pager\n\t\t\t\t\tthis._xterm.raw.onCursorMove,\n\t\t\t\t)(() => this._refresh()),\n\t\t\t\taddStandardDisposableListener(this._xterm.raw.element!.querySelector('.xterm-viewport')!, 'scroll', () => this._refresh()),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _uninstallRefreshListeners() {\n\t\tthis._refreshListeners.clear();\n\t}\n\n\tprivate _setVisible(isVisible: boolean) {\n\t\tif (isVisible) {\n\t\t\tthis._ensureElement();\n\t\t}\n\t\tthis._element?.classList.toggle(CssClasses.Visible, isVisible);\n\t}\n\n\tprivate _refresh(): void {\n\t\tif (this._isRefreshQueued) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isRefreshQueued = true;\n\t\tqueueMicrotask(() => {\n\t\t\tthis._refreshNow();\n\t\t\tthis._isRefreshQueued = false;\n\t\t});\n\t}\n\n\tprivate _refreshNow(): void {\n\t\tconst command = this._commandDetection.getCommandForLine(this._xterm.raw.buffer.active.viewportY);\n\n\t\t// The command from viewportY + 1 is used because this one will not be obscured by sticky\n\t\t// scroll.\n\t\tthis._currentStickyCommand = undefined;\n\n\t\t// No command\n\t\tif (!command) {\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Partial command\n\t\tif (!('marker' in command)) {\n\t\t\tconst partialCommand = this._commandDetection.currentCommand;\n\t\t\tif (partialCommand?.commandStartMarker && partialCommand.commandExecutedMarker) {\n\t\t\t\tthis._updateContent(partialCommand, partialCommand.commandStartMarker);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// If the marker doesn't exist or it was trimmed from scrollback\n\t\tconst marker = command.marker;\n\t\tif (!marker || marker.line === -1) {\n\t\t\t// TODO: It would be nice if we kept the cached command around even if it was trimmed\n\t\t\t// from scrollback\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateContent(command, marker);\n\t}\n\n\tprivate _updateContent(command: ITerminalCommand | ICurrentPartialCommand, startMarker: IMarker) {\n\t\tconst xterm = this._xterm.raw;\n\t\tif (!xterm.element?.parentElement || !this._stickyScrollOverlay || !this._serializeAddon) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Hide sticky scroll if the prompt has been trimmed from the buffer\n\t\tif (command.promptStartMarker?.line === -1) {\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine sticky scroll line count\n\t\tconst buffer = xterm.buffer.active;\n\t\tconst promptRowCount = command.getPromptRowCount();\n\t\tconst commandRowCount = command.getCommandRowCount();\n\t\tconst stickyScrollLineStart = startMarker.line - (promptRowCount - 1);\n\n\t\t// Calculate the row offset, this is the number of rows that will be clipped from the top\n\t\t// of the sticky overlay because we do not want to show any content above the bounds of the\n\t\t// original terminal. This is done because it seems like scrolling flickers more when a\n\t\t// partial line can be drawn on the top.\n\t\tconst isPartialCommand = !('getOutput' in command);\n\t\tconst rowOffset = !isPartialCommand && command.endMarker ? Math.max(buffer.viewportY - command.endMarker.line + 1, 0) : 0;\n\t\tconst maxLineCount = Math.min(this._rawMaxLineCount, Math.floor(xterm.rows * Constants.StickyScrollPercentageCap));\n\t\tconst stickyScrollLineCount = Math.min(promptRowCount + commandRowCount - 1, maxLineCount) - rowOffset;\n\n\t\t// Hide sticky scroll if it's currently on a line that contains it\n\t\tif (buffer.viewportY <= stickyScrollLineStart) {\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Hide sticky scroll for the partial command if it looks like there is a pager like `less`\n\t\t// or `git log` active. This is done by checking if the bottom left cell contains the :\n\t\t// character and the cursor is immediately to its right. This improves the behavior of a\n\t\t// common case where the top of the text being viewport would otherwise be obscured.\n\t\tif (isPartialCommand && buffer.viewportY === buffer.baseY && buffer.cursorY === xterm.rows - 1) {\n\t\t\tconst line = buffer.getLine(buffer.baseY + xterm.rows - 1);\n\t\t\tif (\n\t\t\t\t(buffer.cursorX === 1 && lineStartsWith(line, ':')) ||\n\t\t\t\t(buffer.cursorX === 5 && lineStartsWith(line, '(END)'))\n\t\t\t) {\n\t\t\t\tthis._setVisible(false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Get the line content of the command from the terminal\n\t\tconst content = this._serializeAddon.serialize({\n\t\t\trange: {\n\t\t\t\tstart: stickyScrollLineStart + rowOffset,\n\t\t\t\tend: stickyScrollLineStart + rowOffset + Math.max(stickyScrollLineCount - 1, 0)\n\t\t\t}\n\t\t});\n\n\t\t// If a partial command's sticky scroll would show nothing, just hide it. This is another\n\t\t// edge case when using a pager or interactive editor.\n\t\tif (isPartialCommand && removeAnsiEscapeCodes(content).length === 0) {\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Write content if it differs\n\t\tif (\n\t\t\tcontent && this._currentContent !== content ||\n\t\t\tthis._stickyScrollOverlay.cols !== xterm.cols ||\n\t\t\tthis._stickyScrollOverlay.rows !== stickyScrollLineCount\n\t\t) {\n\t\t\tthis._stickyScrollOverlay.resize(this._stickyScrollOverlay.cols, stickyScrollLineCount);\n\t\t\t// Clear attrs, reset cursor position, clear right\n\t\t\tthis._stickyScrollOverlay.write('\\x1b[0m\\x1b[H\\x1b[2J');\n\t\t\tthis._stickyScrollOverlay.write(content);\n\t\t\tthis._currentContent = content;\n\t\t\t// DEBUG: Log to show the command line we know\n\t\t\t// this._stickyScrollOverlay.write(` [${command?.command}]`);\n\t\t}\n\n\t\tif (content) {\n\t\t\tthis._currentStickyCommand = command;\n\t\t\tthis._setVisible(true);\n\n\t\t\t// Position the sticky scroll such that it never overlaps the prompt/output of the\n\t\t\t// following command. This must happen after setVisible to ensure the element is\n\t\t\t// initialized.\n\t\t\tif (this._element) {\n\t\t\t\tconst termBox = xterm.element.getBoundingClientRect();\n\t\t\t\t// Only try reposition if the element is visible, if not a refresh will occur when\n\t\t\t\t// it becomes visible\n\t\t\t\tif (termBox.height > 0) {\n\t\t\t\t\tconst rowHeight = termBox.height / xterm.rows;\n\t\t\t\t\tconst overlayHeight = stickyScrollLineCount * rowHeight;\n\n\t\t\t\t\t// Adjust sticky scroll content if it would below the end of the command, obscuring the\n\t\t\t\t\t// following command.\n\t\t\t\t\tlet endMarkerOffset = 0;\n\t\t\t\t\tif (!isPartialCommand && command.endMarker && command.endMarker.line !== -1) {\n\t\t\t\t\t\tif (buffer.viewportY + stickyScrollLineCount > command.endMarker.line) {\n\t\t\t\t\t\t\tconst diff = buffer.viewportY + stickyScrollLineCount - command.endMarker.line;\n\t\t\t\t\t\t\tendMarkerOffset = diff * rowHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._element.style.bottom = `${termBox.height - overlayHeight + 1 + endMarkerOffset}px`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setVisible(false);\n\t\t}\n\t}\n\n\tprivate _ensureElement() {\n\t\tif (\n\t\t\t// The element is already created\n\t\t\tthis._element ||\n\t\t\t// If the overlay is yet to be created, the terminal cannot be opened so defer to next call\n\t\t\t!this._stickyScrollOverlay ||\n\t\t\t// The xterm.js instance isn't opened yet\n\t\t\t!this._xterm?.raw.element?.parentElement\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst overlay = this._stickyScrollOverlay;\n\n\t\tconst hoverOverlay = $('.hover-overlay');\n\t\tthis._element = $('.terminal-sticky-scroll', undefined, hoverOverlay);\n\t\tthis._xterm.raw.element.parentElement.append(this._element);\n\t\tthis._register(toDisposable(() => this._element?.remove()));\n\n\t\t// Fill tooltip\n\t\tlet hoverTitle = localize('stickyScrollHoverTitle', 'Navigate to Command');\n\t\tconst scrollToPreviousCommandKeybinding = this._keybindingService.lookupKeybinding(TerminalCommandId.ScrollToPreviousCommand);\n\t\tif (scrollToPreviousCommandKeybinding) {\n\t\t\tconst label = scrollToPreviousCommandKeybinding.getLabel();\n\t\t\tif (label) {\n\t\t\t\thoverTitle += '\\n' + localize('labelWithKeybinding', \"{0} ({1})\", terminalStrings.scrollToPreviousCommand.value, label);\n\t\t\t}\n\t\t}\n\t\tconst scrollToNextCommandKeybinding = this._keybindingService.lookupKeybinding(TerminalCommandId.ScrollToNextCommand);\n\t\tif (scrollToNextCommandKeybinding) {\n\t\t\tconst label = scrollToNextCommandKeybinding.getLabel();\n\t\t\tif (label) {\n\t\t\t\thoverTitle += '\\n' + localize('labelWithKeybinding', \"{0} ({1})\", terminalStrings.scrollToNextCommand.value, label);\n\t\t\t}\n\t\t}\n\t\thoverOverlay.title = hoverTitle;\n\n\t\tconst scrollBarWidth = (this._xterm.raw as any as { _core: IXtermCore })._core.viewport?.scrollBarWidth;\n\t\tif (scrollBarWidth !== undefined) {\n\t\t\tthis._element.style.right = `${scrollBarWidth}px`;\n\t\t}\n\n\t\tthis._stickyScrollOverlay.open(this._element);\n\n\t\t// Scroll to the command on click\n\t\tthis._register(addStandardDisposableListener(hoverOverlay, 'click', () => {\n\t\t\tif (this._xterm && this._currentStickyCommand) {\n\t\t\t\tthis._xterm.markTracker.revealCommand(this._currentStickyCommand);\n\t\t\t\tthis._instance.focus();\n\t\t\t}\n\t\t}));\n\n\t\t// Forward mouse events to the terminal\n\t\tthis._register(addStandardDisposableListener(hoverOverlay, 'wheel', e => this._xterm?.raw.element?.dispatchEvent(new WheelEvent(e.type, e))));\n\n\t\t// Context menu - stop propagation on mousedown because rightClickBehavior listens on\n\t\t// mousedown, not contextmenu\n\t\tthis._register(addDisposableListener(hoverOverlay, 'mousedown', e => {\n\t\t\te.stopImmediatePropagation();\n\t\t\te.preventDefault();\n\t\t}));\n\t\tthis._register(addDisposableListener(hoverOverlay, 'contextmenu', e => {\n\t\t\te.stopImmediatePropagation();\n\t\t\te.preventDefault();\n\t\t\topenContextMenu(getWindow(hoverOverlay), e, this._instance, this._contextMenu, this._contextMenuService);\n\t\t}));\n\n\t\t// Instead of juggling decorations for hover styles, swap out the theme to indicate the\n\t\t// hover state. This comes with the benefit over other methods of working well with special\n\t\t// decorative characters like powerline symbols.\n\t\tthis._register(addStandardDisposableListener(hoverOverlay, 'mouseover', () => overlay.options.theme = this._getTheme(true)));\n\t\tthis._register(addStandardDisposableListener(hoverOverlay, 'mouseleave', () => overlay.options.theme = this._getTheme(false)));\n\t}\n\n\t@throttle(0)\n\tprivate _syncOptions() {\n\t\tif (!this._stickyScrollOverlay) {\n\t\t\treturn;\n\t\t}\n\t\tthis._stickyScrollOverlay.resize(this._xterm.raw.cols, this._stickyScrollOverlay.rows);\n\t\tthis._stickyScrollOverlay.options = this._getOptions();\n\t\tthis._refreshGpuAcceleration();\n\t}\n\n\tprivate _getOptions(): ITerminalOptions {\n\t\tconst o = this._xterm.raw.options;\n\t\treturn {\n\t\t\tcursorInactiveStyle: 'none',\n\t\t\tscrollback: 0,\n\t\t\tlogLevel: 'off',\n\n\t\t\ttheme: this._getTheme(false),\n\t\t\tdocumentOverride: o.documentOverride,\n\t\t\tfontFamily: o.fontFamily,\n\t\t\tfontWeight: o.fontWeight,\n\t\t\tfontWeightBold: o.fontWeightBold,\n\t\t\tfontSize: o.fontSize,\n\t\t\tletterSpacing: o.letterSpacing,\n\t\t\tlineHeight: o.lineHeight,\n\t\t\tdrawBoldTextInBrightColors: o.drawBoldTextInBrightColors,\n\t\t\tminimumContrastRatio: o.minimumContrastRatio,\n\t\t\ttabStopWidth: o.tabStopWidth,\n\t\t\tcustomGlyphs: o.customGlyphs,\n\t\t};\n\t}\n\n\t@throttle(0)\n\tprivate async _refreshGpuAcceleration() {\n\t\tif (this._shouldLoadWebgl() && !this._webglAddon) {\n\t\t\tconst WebglAddon = await this._getWebglAddonConstructor();\n\t\t\tif (this._store.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._webglAddon = this._register(new WebglAddon());\n\t\t\tthis._stickyScrollOverlay?.loadAddon(this._webglAddon);\n\t\t} else if (!this._shouldLoadWebgl() && this._webglAddon) {\n\t\t\tthis._webglAddon.dispose();\n\t\t\tthis._webglAddon = undefined;\n\t\t}\n\t}\n\n\tprivate _shouldLoadWebgl(): boolean {\n\t\treturn this._terminalConfigurationService.config.gpuAcceleration === 'auto' || this._terminalConfigurationService.config.gpuAcceleration === 'on';\n\t}\n\n\tprivate _getTheme(isHovering: boolean): ITheme {\n\t\tconst theme = this._themeService.getColorTheme();\n\t\treturn {\n\t\t\t...this._xterm.getXtermTheme(),\n\t\t\tbackground: isHovering\n\t\t\t\t? theme.getColor(terminalStickyScrollHoverBackground)?.toString() ?? this._xtermColorProvider.getBackgroundColor(theme)?.toString()\n\t\t\t\t: theme.getColor(terminalStickyScrollBackground)?.toString() ?? this._xtermColorProvider.getBackgroundColor(theme)?.toString(),\n\t\t\tselectionBackground: undefined,\n\t\t\tselectionInactiveBackground: undefined\n\t\t};\n\t}\n\n\t@memoize\n\tprivate async _getSerializeAddonConstructor(): Promise<typeof SerializeAddonType> {\n\t\treturn (await importAMDNodeModule<typeof import('@xterm/addon-serialize')>('@xterm/addon-serialize', 'lib/addon-serialize.js')).SerializeAddon;\n\t}\n\n\t@memoize\n\tprivate async _getWebglAddonConstructor(): Promise<typeof WebglAddonType> {\n\t\treturn (await importAMDNodeModule<typeof import('@xterm/addon-webgl')>('@xterm/addon-webgl', 'lib/addon-webgl.js')).WebglAddon;\n\t}\n}\n\nfunction lineStartsWith(line: IBufferLine | undefined, text: string): boolean {\n\tif (!line) {\n\t\treturn false;\n\t}\n\tfor (let i = 0; i < text.length; i++) {\n\t\tif (line.getCell(i)?.getChars() !== text[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n"],
  "mappings": ";;;;;;;;;;;;AAQA,SAAS,2BAA2B;AACpC,SAAS,GAAG,uBAAuB,+BAA+B,iBAAiB;AACnF,SAAS,SAAS,gBAAgB;AAClC,SAAS,aAAa;AACtB,SAAS,YAAY,mBAAmB,oBAAoB,oBAAoB;AAChF,SAAS,6BAA6B;AACtC,OAAO;AACP,SAAS,gBAAgB;AACzB,SAAS,OAAO,cAAc,cAAc;AAC5C,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,6BAA6B,wBAAwB;AAC9D,SAAS,8BAA8B;AACvC,SAAS,qBAAqB;AAC9B,SAAS,+BAA+B,mBAAmB,qBAAqB,sBAAsB;AACtG,SAAS,uBAAuB;AAChC,SAAS,kBAAkB;AAC3B,SAAS,yBAAyB,yBAAyB;AAC3D,SAAS,uBAAuB;AAChC,SAAS,qCAAqC;AAC9C,SAAS,gCAAgC,2CAA2C;AAEpF,IAAW,eAAX,kBAAWA,kBAAX;AAEC,EAAAA,4BAAA,SAAM,KAAN;AACA,EAAAA,4BAAA,QAAK,KAAL;AAHU,SAAAA;AAAA,GAAA;AAMX,IAAW,aAAX,kBAAWC,gBAAX;AACC,EAAAA,YAAA,aAAU;AADA,SAAAA;AAAA,GAAA;AAIX,IAAW,YAAX,kBAAWC,eAAX;AACC,EAAAA,sBAAA,+BAA4B,OAA5B;AADU,SAAAA;AAAA,GAAA;AAIJ,IAAM,8BAAN,cAA0C,WAAW;AAAA,EAgB3D,YACkB,WACA,QACA,qBACA,mBACjB,WACuB,sBACH,mBACkB,qBACD,oBACvB,aACkC,+BAChB,eAC/B;AACD,UAAM;AAbW;AACA;AACA;AACA;AAIqB;AACD;AAEW;AAChB;AAIhC,SAAK,eAAe,KAAK,UAAU,YAAY,WAAW,OAAO,6BAA6B,iBAAiB,CAAC;AAGhH,SAAK,UAAU,MAAM,gBAAgB,KAAK,OAAO,IAAI,OAAO,gBAAgB,YAAU;AACrF,WAAK,WAAW,UAAU,KAAK,OAAO,IAAI,OAAO,QAAQ,SAAS,WAAW,aAAkB,WAAgB;AAAA,IAChH,CAAC,CAAC;AAGF,SAAK,UAAU,MAAM,gBAAgB,qBAAqB,0BAA0B,OAAK;AACxF,UAAI,CAAC,KAAK,EAAE,qBAAqB,8BAA8B,YAAY,GAAG;AAC7E,aAAK,mBAAmB,qBAAqB,SAAS,8BAA8B,YAAY;AAAA,MACjG;AAAA,IACD,CAAC,CAAC;AAGF,SAAK,UAAU,KAAK,UAAU,kBAAkB,MAAM,KAAK,aAAa,CAAC,CAAC;AAG1E,cAAU,KAAK,UAAQ;AACtB,UAAI,KAAK,OAAO,YAAY;AAC3B;AAAA,MACD;AACA,WAAK,uBAAuB,KAAK,UAAU,IAAI,KAAK;AAAA,QACnD,MAAM;AAAA,QACN,MAAM,KAAK,OAAO,IAAI;AAAA,QACtB,kBAAkB;AAAA,QAClB,GAAG,KAAK,YAAY;AAAA,MACrB,CAAC,CAAC;AACF,WAAK,wBAAwB;AAC7B,WAAK,UAAU,qBAAqB,yBAAyB,OAAK;AACjE,YAAI,EAAE,qBAAqB,uBAAuB,GAAG;AACpD,eAAK,aAAa;AAAA,QACnB;AAAA,MACD,CAAC,CAAC;AACF,WAAK,UAAU,KAAK,cAAc,sBAAsB,MAAM;AAC7D,aAAK,aAAa;AAAA,MACnB,CAAC,CAAC;AACF,WAAK,UAAU,KAAK,OAAO,IAAI,SAAS,MAAM;AAC7C,aAAK,aAAa;AAClB,aAAK,SAAS;AAAA,MACf,CAAC,CAAC;AACF,WAAK,UAAU,KAAK,UAAU,sBAAsB,eAAa;AAChE,YAAI,WAAW;AACd,eAAK,SAAS;AAAA,QACf;AAAA,MACD,CAAC,CAAC;AAEF,WAAK,8BAA8B,EAAE,KAAK,oBAAkB;AAC3D,YAAI,KAAK,OAAO,YAAY;AAC3B;AAAA,QACD;AACA,aAAK,kBAAkB,KAAK,UAAU,IAAI,eAAe,CAAC;AAC1D,aAAK,OAAO,IAAI,UAAU,KAAK,eAAe;AAE9C,aAAK,SAAS;AAAA,MACf,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AAAA,EAvID,OA8C4D;AAAA;AAAA;AAAA,EACnD;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAES,oBAAoB,KAAK,UAAU,IAAI,kBAAkB,CAAC;AAAA,EAEnE,SAAuB;AAAA,EACvB,mBAAmB;AAAA,EACnB,mBAA2B;AAAA,EA6EnC,WAAW;AACV,SAAK,UAAU,UAAU,IAAI,WAAW;AAAA,EACzC;AAAA,EAEA,aAAa;AACZ,SAAK,UAAU,UAAU,OAAO,WAAW;AAAA,EAC5C;AAAA,EAEQ,UAAU,OAAqB;AACtC,QAAI,KAAK,WAAW,OAAO;AAC1B;AAAA,IACD;AACA,YAAQ,OAAO;AAAA,MACd,KAAK,aAAkB;AACtB,aAAK,YAAY,KAAK;AACtB,aAAK,2BAA2B;AAChC;AAAA,MACD;AAAA,MACA,KAAK,YAAiB;AACrB,aAAK,SAAS;AACd,aAAK,yBAAyB;AAC9B;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,2BAA2B;AAClC,QAAI,CAAC,KAAK,kBAAkB,OAAO;AAClC,WAAK,kBAAkB,QAAQ;AAAA,QAC9B,MAAM;AAAA,UACL,KAAK,OAAO,IAAI;AAAA,UAChB,KAAK,OAAO,IAAI;AAAA;AAAA;AAAA,UAGhB,KAAK,OAAO,IAAI;AAAA,QACjB,EAAE,MAAM,KAAK,SAAS,CAAC;AAAA,QACvB,8BAA8B,KAAK,OAAO,IAAI,QAAS,cAAc,iBAAiB,GAAI,UAAU,MAAM,KAAK,SAAS,CAAC;AAAA,MAC1H;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,6BAA6B;AACpC,SAAK,kBAAkB,MAAM;AAAA,EAC9B;AAAA,EAEQ,YAAY,WAAoB;AACvC,QAAI,WAAW;AACd,WAAK,eAAe;AAAA,IACrB;AACA,SAAK,UAAU,UAAU,OAAO,yBAAoB,SAAS;AAAA,EAC9D;AAAA,EAEQ,WAAiB;AACxB,QAAI,KAAK,kBAAkB;AAC1B;AAAA,IACD;AACA,SAAK,mBAAmB;AACxB,mBAAe,MAAM;AACpB,WAAK,YAAY;AACjB,WAAK,mBAAmB;AAAA,IACzB,CAAC;AAAA,EACF;AAAA,EAEQ,cAAoB;AAC3B,UAAM,UAAU,KAAK,kBAAkB,kBAAkB,KAAK,OAAO,IAAI,OAAO,OAAO,SAAS;AAIhG,SAAK,wBAAwB;AAG7B,QAAI,CAAC,SAAS;AACb,WAAK,YAAY,KAAK;AACtB;AAAA,IACD;AAGA,QAAI,EAAE,YAAY,UAAU;AAC3B,YAAM,iBAAiB,KAAK,kBAAkB;AAC9C,UAAI,gBAAgB,sBAAsB,eAAe,uBAAuB;AAC/E,aAAK,eAAe,gBAAgB,eAAe,kBAAkB;AACrE;AAAA,MACD;AACA,WAAK,YAAY,KAAK;AACtB;AAAA,IACD;AAGA,UAAM,SAAS,QAAQ;AACvB,QAAI,CAAC,UAAU,OAAO,SAAS,IAAI;AAGlC,WAAK,YAAY,KAAK;AACtB;AAAA,IACD;AAEA,SAAK,eAAe,SAAS,MAAM;AAAA,EACpC;AAAA,EAEQ,eAAe,SAAoD,aAAsB;AAChG,UAAM,QAAQ,KAAK,OAAO;AAC1B,QAAI,CAAC,MAAM,SAAS,iBAAiB,CAAC,KAAK,wBAAwB,CAAC,KAAK,iBAAiB;AACzF;AAAA,IACD;AAGA,QAAI,QAAQ,mBAAmB,SAAS,IAAI;AAC3C,WAAK,YAAY,KAAK;AACtB;AAAA,IACD;AAGA,UAAM,SAAS,MAAM,OAAO;AAC5B,UAAM,iBAAiB,QAAQ,kBAAkB;AACjD,UAAM,kBAAkB,QAAQ,mBAAmB;AACnD,UAAM,wBAAwB,YAAY,QAAQ,iBAAiB;AAMnE,UAAM,mBAAmB,EAAE,eAAe;AAC1C,UAAM,YAAY,CAAC,oBAAoB,QAAQ,YAAY,KAAK,IAAI,OAAO,YAAY,QAAQ,UAAU,OAAO,GAAG,CAAC,IAAI;AACxH,UAAM,eAAe,KAAK,IAAI,KAAK,kBAAkB,KAAK,MAAM,MAAM,OAAO,mCAAmC,CAAC;AACjH,UAAM,wBAAwB,KAAK,IAAI,iBAAiB,kBAAkB,GAAG,YAAY,IAAI;AAG7F,QAAI,OAAO,aAAa,uBAAuB;AAC9C,WAAK,YAAY,KAAK;AACtB;AAAA,IACD;AAMA,QAAI,oBAAoB,OAAO,cAAc,OAAO,SAAS,OAAO,YAAY,MAAM,OAAO,GAAG;AAC/F,YAAM,OAAO,OAAO,QAAQ,OAAO,QAAQ,MAAM,OAAO,CAAC;AACzD,UACE,OAAO,YAAY,KAAK,eAAe,MAAM,GAAG,KAChD,OAAO,YAAY,KAAK,eAAe,MAAM,OAAO,GACpD;AACD,aAAK,YAAY,KAAK;AACtB;AAAA,MACD;AAAA,IACD;AAGA,UAAM,UAAU,KAAK,gBAAgB,UAAU;AAAA,MAC9C,OAAO;AAAA,QACN,OAAO,wBAAwB;AAAA,QAC/B,KAAK,wBAAwB,YAAY,KAAK,IAAI,wBAAwB,GAAG,CAAC;AAAA,MAC/E;AAAA,IACD,CAAC;AAID,QAAI,oBAAoB,sBAAsB,OAAO,EAAE,WAAW,GAAG;AACpE,WAAK,YAAY,KAAK;AACtB;AAAA,IACD;AAGA,QACC,WAAW,KAAK,oBAAoB,WACpC,KAAK,qBAAqB,SAAS,MAAM,QACzC,KAAK,qBAAqB,SAAS,uBAClC;AACD,WAAK,qBAAqB,OAAO,KAAK,qBAAqB,MAAM,qBAAqB;AAEtF,WAAK,qBAAqB,MAAM,sBAAsB;AACtD,WAAK,qBAAqB,MAAM,OAAO;AACvC,WAAK,kBAAkB;AAAA,IAGxB;AAEA,QAAI,SAAS;AACZ,WAAK,wBAAwB;AAC7B,WAAK,YAAY,IAAI;AAKrB,UAAI,KAAK,UAAU;AAClB,cAAM,UAAU,MAAM,QAAQ,sBAAsB;AAGpD,YAAI,QAAQ,SAAS,GAAG;AACvB,gBAAM,YAAY,QAAQ,SAAS,MAAM;AACzC,gBAAM,gBAAgB,wBAAwB;AAI9C,cAAI,kBAAkB;AACtB,cAAI,CAAC,oBAAoB,QAAQ,aAAa,QAAQ,UAAU,SAAS,IAAI;AAC5E,gBAAI,OAAO,YAAY,wBAAwB,QAAQ,UAAU,MAAM;AACtE,oBAAM,OAAO,OAAO,YAAY,wBAAwB,QAAQ,UAAU;AAC1E,gCAAkB,OAAO;AAAA,YAC1B;AAAA,UACD;AAEA,eAAK,SAAS,MAAM,SAAS,GAAG,QAAQ,SAAS,gBAAgB,IAAI,eAAe;AAAA,QACrF;AAAA,MACD;AAAA,IACD,OAAO;AACN,WAAK,YAAY,KAAK;AAAA,IACvB;AAAA,EACD;AAAA,EAEQ,iBAAiB;AACxB;AAAA;AAAA,MAEC,KAAK;AAAA,MAEL,CAAC,KAAK;AAAA,MAEN,CAAC,KAAK,QAAQ,IAAI,SAAS;AAAA,MAC1B;AACD;AAAA,IACD;AAEA,UAAM,UAAU,KAAK;AAErB,UAAM,eAAe,EAAE,gBAAgB;AACvC,SAAK,WAAW,EAAE,2BAA2B,QAAW,YAAY;AACpE,SAAK,OAAO,IAAI,QAAQ,cAAc,OAAO,KAAK,QAAQ;AAC1D,SAAK,UAAU,aAAa,MAAM,KAAK,UAAU,OAAO,CAAC,CAAC;AAG1D,QAAI,aAAa,SAAS,0BAA0B,qBAAqB;AACzE,UAAM,oCAAoC,KAAK,mBAAmB,iBAAiB,kBAAkB,uBAAuB;AAC5H,QAAI,mCAAmC;AACtC,YAAM,QAAQ,kCAAkC,SAAS;AACzD,UAAI,OAAO;AACV,sBAAc,OAAO,SAAS,uBAAuB,aAAa,gBAAgB,wBAAwB,OAAO,KAAK;AAAA,MACvH;AAAA,IACD;AACA,UAAM,gCAAgC,KAAK,mBAAmB,iBAAiB,kBAAkB,mBAAmB;AACpH,QAAI,+BAA+B;AAClC,YAAM,QAAQ,8BAA8B,SAAS;AACrD,UAAI,OAAO;AACV,sBAAc,OAAO,SAAS,uBAAuB,aAAa,gBAAgB,oBAAoB,OAAO,KAAK;AAAA,MACnH;AAAA,IACD;AACA,iBAAa,QAAQ;AAErB,UAAM,iBAAkB,KAAK,OAAO,IAAqC,MAAM,UAAU;AACzF,QAAI,mBAAmB,QAAW;AACjC,WAAK,SAAS,MAAM,QAAQ,GAAG,cAAc;AAAA,IAC9C;AAEA,SAAK,qBAAqB,KAAK,KAAK,QAAQ;AAG5C,SAAK,UAAU,8BAA8B,cAAc,SAAS,MAAM;AACzE,UAAI,KAAK,UAAU,KAAK,uBAAuB;AAC9C,aAAK,OAAO,YAAY,cAAc,KAAK,qBAAqB;AAChE,aAAK,UAAU,MAAM;AAAA,MACtB;AAAA,IACD,CAAC,CAAC;AAGF,SAAK,UAAU,8BAA8B,cAAc,SAAS,OAAK,KAAK,QAAQ,IAAI,SAAS,cAAc,IAAI,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AAI5I,SAAK,UAAU,sBAAsB,cAAc,aAAa,OAAK;AACpE,QAAE,yBAAyB;AAC3B,QAAE,eAAe;AAAA,IAClB,CAAC,CAAC;AACF,SAAK,UAAU,sBAAsB,cAAc,eAAe,OAAK;AACtE,QAAE,yBAAyB;AAC3B,QAAE,eAAe;AACjB,sBAAgB,UAAU,YAAY,GAAG,GAAG,KAAK,WAAW,KAAK,cAAc,KAAK,mBAAmB;AAAA,IACxG,CAAC,CAAC;AAKF,SAAK,UAAU,8BAA8B,cAAc,aAAa,MAAM,QAAQ,QAAQ,QAAQ,KAAK,UAAU,IAAI,CAAC,CAAC;AAC3H,SAAK,UAAU,8BAA8B,cAAc,cAAc,MAAM,QAAQ,QAAQ,QAAQ,KAAK,UAAU,KAAK,CAAC,CAAC;AAAA,EAC9H;AAAA,EAGQ,eAAe;AACtB,QAAI,CAAC,KAAK,sBAAsB;AAC/B;AAAA,IACD;AACA,SAAK,qBAAqB,OAAO,KAAK,OAAO,IAAI,MAAM,KAAK,qBAAqB,IAAI;AACrF,SAAK,qBAAqB,UAAU,KAAK,YAAY;AACrD,SAAK,wBAAwB;AAAA,EAC9B;AAAA,EAEQ,cAAgC;AACvC,UAAM,IAAI,KAAK,OAAO,IAAI;AAC1B,WAAO;AAAA,MACN,qBAAqB;AAAA,MACrB,YAAY;AAAA,MACZ,UAAU;AAAA,MAEV,OAAO,KAAK,UAAU,KAAK;AAAA,MAC3B,kBAAkB,EAAE;AAAA,MACpB,YAAY,EAAE;AAAA,MACd,YAAY,EAAE;AAAA,MACd,gBAAgB,EAAE;AAAA,MAClB,UAAU,EAAE;AAAA,MACZ,eAAe,EAAE;AAAA,MACjB,YAAY,EAAE;AAAA,MACd,4BAA4B,EAAE;AAAA,MAC9B,sBAAsB,EAAE;AAAA,MACxB,cAAc,EAAE;AAAA,MAChB,cAAc,EAAE;AAAA,IACjB;AAAA,EACD;AAAA,EAGA,MAAc,0BAA0B;AACvC,QAAI,KAAK,iBAAiB,KAAK,CAAC,KAAK,aAAa;AACjD,YAAM,aAAa,MAAM,KAAK,0BAA0B;AACxD,UAAI,KAAK,OAAO,YAAY;AAC3B;AAAA,MACD;AACA,WAAK,cAAc,KAAK,UAAU,IAAI,WAAW,CAAC;AAClD,WAAK,sBAAsB,UAAU,KAAK,WAAW;AAAA,IACtD,WAAW,CAAC,KAAK,iBAAiB,KAAK,KAAK,aAAa;AACxD,WAAK,YAAY,QAAQ;AACzB,WAAK,cAAc;AAAA,IACpB;AAAA,EACD;AAAA,EAEQ,mBAA4B;AACnC,WAAO,KAAK,8BAA8B,OAAO,oBAAoB,UAAU,KAAK,8BAA8B,OAAO,oBAAoB;AAAA,EAC9I;AAAA,EAEQ,UAAU,YAA6B;AAC9C,UAAM,QAAQ,KAAK,cAAc,cAAc;AAC/C,WAAO;AAAA,MACN,GAAG,KAAK,OAAO,cAAc;AAAA,MAC7B,YAAY,aACT,MAAM,SAAS,mCAAmC,GAAG,SAAS,KAAK,KAAK,oBAAoB,mBAAmB,KAAK,GAAG,SAAS,IAChI,MAAM,SAAS,8BAA8B,GAAG,SAAS,KAAK,KAAK,oBAAoB,mBAAmB,KAAK,GAAG,SAAS;AAAA,MAC9H,qBAAqB;AAAA,MACrB,6BAA6B;AAAA,IAC9B;AAAA,EACD;AAAA,EAGA,MAAc,gCAAoE;AACjF,YAAQ,MAAM,oBAA6D,0BAA0B,wBAAwB,GAAG;AAAA,EACjI;AAAA,EAGA,MAAc,4BAA4D;AACzE,YAAQ,MAAM,oBAAyD,sBAAsB,oBAAoB,GAAG;AAAA,EACrH;AACD;AAvES;AAAA,EADP,SAAS,CAAC;AAAA,GAvXC,4BAwXJ;AAgCM;AAAA,EADb,SAAS,CAAC;AAAA,GAvZC,4BAwZE;AA+BA;AAAA,EADb;AAAA,GAtbW,4BAubE;AAKA;AAAA,EADb;AAAA,GA3bW,4BA4bE;AA5bF,8BAAN;AAAA,EAsBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA5BU;AAicb,SAAS,eAAe,MAA+B,MAAuB;AAC7E,MAAI,CAAC,MAAM;AACV,WAAO;AAAA,EACR;AACA,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACrC,QAAI,KAAK,QAAQ,CAAC,GAAG,SAAS,MAAM,KAAK,CAAC,GAAG;AAC5C,aAAO;AAAA,IACR;AAAA,EACD;AACA,SAAO;AACR;AAVS;",
  "names": ["OverlayState", "CssClasses", "Constants"]
}
