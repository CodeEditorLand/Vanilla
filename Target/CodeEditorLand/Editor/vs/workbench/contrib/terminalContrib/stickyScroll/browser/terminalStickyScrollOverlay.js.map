{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminalStickyScrollOverlay.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { SerializeAddon as SerializeAddonType } from \"@xterm/addon-serialize\";\nimport type { WebglAddon as WebglAddonType } from \"@xterm/addon-webgl\";\nimport type {\n\tIBufferLine,\n\tIMarker,\n\tITerminalOptions,\n\tITheme,\n\tTerminal as RawXtermTerminal,\n\tTerminal as XTermTerminal,\n} from \"@xterm/xterm\";\nimport { importAMDNodeModule } from \"../../../../../amdX.js\";\nimport {\n\t$,\n\taddDisposableListener,\n\taddStandardDisposableListener,\n\tgetWindow,\n} from \"../../../../../base/browser/dom.js\";\nimport { memoize, throttle } from \"../../../../../base/common/decorators.js\";\nimport { Event } from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tMutableDisposable,\n\tcombinedDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { removeAnsiEscapeCodes } from \"../../../../../base/common/strings.js\";\nimport \"./media/stickyScroll.css\";\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../../platform/contextview/browser/contextView.js\";\nimport { IKeybindingService } from \"../../../../../platform/keybinding/common/keybinding.js\";\nimport type {\n\tICommandDetectionCapability,\n\tITerminalCommand,\n} from \"../../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport type { ICurrentPartialCommand } from \"../../../../../platform/terminal/common/capabilities/commandDetection/terminalCommand.js\";\nimport { IThemeService } from \"../../../../../platform/theme/common/themeService.js\";\nimport {\n\tITerminalConfigurationService,\n\ttype ITerminalInstance,\n\ttype IXtermColorProvider,\n\ttype IXtermTerminal,\n} from \"../../../terminal/browser/terminal.js\";\nimport { openContextMenu } from \"../../../terminal/browser/terminalContextMenu.js\";\nimport type { IXtermCore } from \"../../../terminal/browser/xterm-private.js\";\nimport {\n\tTERMINAL_CONFIG_SECTION,\n\tTerminalCommandId,\n} from \"../../../terminal/common/terminal.js\";\nimport { terminalStrings } from \"../../../terminal/common/terminalStrings.js\";\nimport { TerminalStickyScrollSettingId } from \"../common/terminalStickyScrollConfiguration.js\";\nimport {\n\tterminalStickyScrollBackground,\n\tterminalStickyScrollHoverBackground,\n} from \"./terminalStickyScrollColorRegistry.js\";\n\nenum OverlayState {\n\t/** Initial state/disabled by the alt buffer. */\n\tOff = 0,\n\tOn = 1,\n}\n\nenum CssClasses {\n\tVisible = \"visible\",\n}\n\nenum Constants {\n\tStickyScrollPercentageCap = 0.4,\n}\n\nexport class TerminalStickyScrollOverlay extends Disposable {\n\tprivate _stickyScrollOverlay?: RawXtermTerminal;\n\tprivate _serializeAddon?: SerializeAddonType;\n\tprivate _webglAddon?: WebglAddonType;\n\n\tprivate _element?: HTMLElement;\n\tprivate _currentStickyCommand?: ITerminalCommand | ICurrentPartialCommand;\n\tprivate _currentContent?: string;\n\tprivate _contextMenu: IMenu;\n\n\tprivate readonly _refreshListeners = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\n\tprivate _state: OverlayState = OverlayState.Off;\n\tprivate _isRefreshQueued = false;\n\tprivate _rawMaxLineCount = 5;\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprivate readonly _xterm: IXtermTerminal & { raw: RawXtermTerminal },\n\t\tprivate readonly _xtermColorProvider: IXtermColorProvider,\n\t\tprivate readonly _commandDetection: ICommandDetectionCapability,\n\t\txtermCtor: Promise<typeof XTermTerminal>,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService\n\t\tprivate readonly _contextMenuService: IContextMenuService,\n\t\t@IKeybindingService\n\t\tprivate readonly _keybindingService: IKeybindingService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@ITerminalConfigurationService\n\t\tprivate readonly _terminalConfigurationService: ITerminalConfigurationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\n\t\tthis._contextMenu = this._register(\n\t\t\tmenuService.createMenu(\n\t\t\t\tMenuId.TerminalStickyScrollContext,\n\t\t\t\tcontextKeyService,\n\t\t\t),\n\t\t);\n\n\t\t// Only show sticky scroll in the normal buffer\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tthis._xterm.raw.buffer.onBufferChange,\n\t\t\t\t(buffer) => {\n\t\t\t\t\tthis._setState(\n\t\t\t\t\t\t(buffer ?? this._xterm.raw.buffer.active).type ===\n\t\t\t\t\t\t\t\"normal\"\n\t\t\t\t\t\t\t? OverlayState.On\n\t\t\t\t\t\t\t: OverlayState.Off,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// React to configuration changes\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tconfigurationService.onDidChangeConfiguration,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!e ||\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tTerminalStickyScrollSettingId.MaxLineCount,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._rawMaxLineCount = configurationService.getValue(\n\t\t\t\t\t\t\tTerminalStickyScrollSettingId.MaxLineCount,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// React to terminal location changes\n\t\tthis._register(\n\t\t\tthis._instance.onDidChangeTarget(() => this._syncOptions()),\n\t\t);\n\n\t\t// Eagerly create the overlay\n\t\txtermCtor.then((ctor) => {\n\t\t\tif (this._store.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._stickyScrollOverlay = this._register(\n\t\t\t\tnew ctor({\n\t\t\t\t\trows: 1,\n\t\t\t\t\tcols: this._xterm.raw.cols,\n\t\t\t\t\tallowProposedApi: true,\n\t\t\t\t\t...this._getOptions(),\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._refreshGpuAcceleration();\n\t\t\tthis._register(\n\t\t\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\t\t\tif (e.affectsConfiguration(TERMINAL_CONFIG_SECTION)) {\n\t\t\t\t\t\tthis._syncOptions();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis._themeService.onDidColorThemeChange(() => {\n\t\t\t\t\tthis._syncOptions();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis._xterm.raw.onResize(() => {\n\t\t\t\t\tthis._syncOptions();\n\t\t\t\t\tthis._refresh();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis._instance.onDidChangeVisibility((isVisible) => {\n\t\t\t\t\tif (isVisible) {\n\t\t\t\t\t\tthis._refresh();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis._getSerializeAddonConstructor().then((SerializeAddon) => {\n\t\t\t\tif (this._store.isDisposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._serializeAddon = this._register(new SerializeAddon());\n\t\t\t\tthis._xterm.raw.loadAddon(this._serializeAddon);\n\t\t\t\t// Trigger a render as the serialize addon is required to render\n\t\t\t\tthis._refresh();\n\t\t\t});\n\t\t});\n\t}\n\n\tlockHide() {\n\t\tthis._element?.classList.add(\"lock-hide\");\n\t}\n\n\tunlockHide() {\n\t\tthis._element?.classList.remove(\"lock-hide\");\n\t}\n\n\tprivate _setState(state: OverlayState) {\n\t\tif (this._state === state) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (state) {\n\t\t\tcase OverlayState.Off: {\n\t\t\t\tthis._setVisible(false);\n\t\t\t\tthis._uninstallRefreshListeners();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase OverlayState.On: {\n\t\t\t\tthis._refresh();\n\t\t\t\tthis._installRefreshListeners();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _installRefreshListeners() {\n\t\tif (!this._refreshListeners.value) {\n\t\t\tthis._refreshListeners.value = combinedDisposable(\n\t\t\t\tEvent.any(\n\t\t\t\t\tthis._xterm.raw.onScroll,\n\t\t\t\t\tthis._xterm.raw.onLineFeed,\n\t\t\t\t\t// Rarely an update may be required after just a cursor move, like when\n\t\t\t\t\t// scrolling horizontally in a pager\n\t\t\t\t\tthis._xterm.raw.onCursorMove,\n\t\t\t\t)(() => this._refresh()),\n\t\t\t\taddStandardDisposableListener(\n\t\t\t\t\tthis._xterm.raw.element!.querySelector(\".xterm-viewport\")!,\n\t\t\t\t\t\"scroll\",\n\t\t\t\t\t() => this._refresh(),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _uninstallRefreshListeners() {\n\t\tthis._refreshListeners.clear();\n\t}\n\n\tprivate _setVisible(isVisible: boolean) {\n\t\tif (isVisible) {\n\t\t\tthis._ensureElement();\n\t\t}\n\t\tthis._element?.classList.toggle(CssClasses.Visible, isVisible);\n\t}\n\n\tprivate _refresh(): void {\n\t\tif (this._isRefreshQueued) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isRefreshQueued = true;\n\t\tqueueMicrotask(() => {\n\t\t\tthis._refreshNow();\n\t\t\tthis._isRefreshQueued = false;\n\t\t});\n\t}\n\n\tprivate _refreshNow(): void {\n\t\tconst command = this._commandDetection.getCommandForLine(\n\t\t\tthis._xterm.raw.buffer.active.viewportY,\n\t\t);\n\n\t\t// The command from viewportY + 1 is used because this one will not be obscured by sticky\n\t\t// scroll.\n\t\tthis._currentStickyCommand = undefined;\n\n\t\t// No command\n\t\tif (!command) {\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Partial command\n\t\tif (!(\"marker\" in command)) {\n\t\t\tconst partialCommand = this._commandDetection.currentCommand;\n\t\t\tif (\n\t\t\t\tpartialCommand?.commandStartMarker &&\n\t\t\t\tpartialCommand.commandExecutedMarker\n\t\t\t) {\n\t\t\t\tthis._updateContent(\n\t\t\t\t\tpartialCommand,\n\t\t\t\t\tpartialCommand.commandStartMarker,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// If the marker doesn't exist or it was trimmed from scrollback\n\t\tconst marker = command.marker;\n\t\tif (!marker || marker.line === -1) {\n\t\t\t// TODO: It would be nice if we kept the cached command around even if it was trimmed\n\t\t\t// from scrollback\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateContent(command, marker);\n\t}\n\n\tprivate _updateContent(\n\t\tcommand: ITerminalCommand | ICurrentPartialCommand,\n\t\tstartMarker: IMarker,\n\t) {\n\t\tconst xterm = this._xterm.raw;\n\t\tif (\n\t\t\t!xterm.element?.parentElement ||\n\t\t\t!this._stickyScrollOverlay ||\n\t\t\t!this._serializeAddon\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Hide sticky scroll if the prompt has been trimmed from the buffer\n\t\tif (command.promptStartMarker?.line === -1) {\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine sticky scroll line count\n\t\tconst buffer = xterm.buffer.active;\n\t\tconst promptRowCount = command.getPromptRowCount();\n\t\tconst commandRowCount = command.getCommandRowCount();\n\t\tconst stickyScrollLineStart = startMarker.line - (promptRowCount - 1);\n\n\t\t// Calculate the row offset, this is the number of rows that will be clipped from the top\n\t\t// of the sticky overlay because we do not want to show any content above the bounds of the\n\t\t// original terminal. This is done because it seems like scrolling flickers more when a\n\t\t// partial line can be drawn on the top.\n\t\tconst isPartialCommand = !(\"getOutput\" in command);\n\t\tconst rowOffset =\n\t\t\t!isPartialCommand && command.endMarker\n\t\t\t\t? Math.max(buffer.viewportY - command.endMarker.line + 1, 0)\n\t\t\t\t: 0;\n\t\tconst maxLineCount = Math.min(\n\t\t\tthis._rawMaxLineCount,\n\t\t\tMath.floor(xterm.rows * Constants.StickyScrollPercentageCap),\n\t\t);\n\t\tconst stickyScrollLineCount =\n\t\t\tMath.min(promptRowCount + commandRowCount - 1, maxLineCount) -\n\t\t\trowOffset;\n\n\t\t// Hide sticky scroll if it's currently on a line that contains it\n\t\tif (buffer.viewportY <= stickyScrollLineStart) {\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Hide sticky scroll for the partial command if it looks like there is a pager like `less`\n\t\t// or `git log` active. This is done by checking if the bottom left cell contains the :\n\t\t// character and the cursor is immediately to its right. This improves the behavior of a\n\t\t// common case where the top of the text being viewport would otherwise be obscured.\n\t\tif (\n\t\t\tisPartialCommand &&\n\t\t\tbuffer.viewportY === buffer.baseY &&\n\t\t\tbuffer.cursorY === xterm.rows - 1\n\t\t) {\n\t\t\tconst line = buffer.getLine(buffer.baseY + xterm.rows - 1);\n\t\t\tif (\n\t\t\t\t(buffer.cursorX === 1 && lineStartsWith(line, \":\")) ||\n\t\t\t\t(buffer.cursorX === 5 && lineStartsWith(line, \"(END)\"))\n\t\t\t) {\n\t\t\t\tthis._setVisible(false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Get the line content of the command from the terminal\n\t\tconst content = this._serializeAddon.serialize({\n\t\t\trange: {\n\t\t\t\tstart: stickyScrollLineStart + rowOffset,\n\t\t\t\tend:\n\t\t\t\t\tstickyScrollLineStart +\n\t\t\t\t\trowOffset +\n\t\t\t\t\tMath.max(stickyScrollLineCount - 1, 0),\n\t\t\t},\n\t\t});\n\n\t\t// If a partial command's sticky scroll would show nothing, just hide it. This is another\n\t\t// edge case when using a pager or interactive editor.\n\t\tif (isPartialCommand && removeAnsiEscapeCodes(content).length === 0) {\n\t\t\tthis._setVisible(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Write content if it differs\n\t\tif (\n\t\t\t(content && this._currentContent !== content) ||\n\t\t\tthis._stickyScrollOverlay.cols !== xterm.cols ||\n\t\t\tthis._stickyScrollOverlay.rows !== stickyScrollLineCount\n\t\t) {\n\t\t\tthis._stickyScrollOverlay.resize(\n\t\t\t\tthis._stickyScrollOverlay.cols,\n\t\t\t\tstickyScrollLineCount,\n\t\t\t);\n\t\t\t// Clear attrs, reset cursor position, clear right\n\t\t\tthis._stickyScrollOverlay.write(\"\\x1b[0m\\x1b[H\\x1b[2J\");\n\t\t\tthis._stickyScrollOverlay.write(content);\n\t\t\tthis._currentContent = content;\n\t\t\t// DEBUG: Log to show the command line we know\n\t\t\t// this._stickyScrollOverlay.write(` [${command?.command}]`);\n\t\t}\n\n\t\tif (content) {\n\t\t\tthis._currentStickyCommand = command;\n\t\t\tthis._setVisible(true);\n\n\t\t\t// Position the sticky scroll such that it never overlaps the prompt/output of the\n\t\t\t// following command. This must happen after setVisible to ensure the element is\n\t\t\t// initialized.\n\t\t\tif (this._element) {\n\t\t\t\tconst termBox = xterm.element.getBoundingClientRect();\n\t\t\t\t// Only try reposition if the element is visible, if not a refresh will occur when\n\t\t\t\t// it becomes visible\n\t\t\t\tif (termBox.height > 0) {\n\t\t\t\t\tconst rowHeight = termBox.height / xterm.rows;\n\t\t\t\t\tconst overlayHeight = stickyScrollLineCount * rowHeight;\n\n\t\t\t\t\t// Adjust sticky scroll content if it would below the end of the command, obscuring the\n\t\t\t\t\t// following command.\n\t\t\t\t\tlet endMarkerOffset = 0;\n\t\t\t\t\tif (\n\t\t\t\t\t\t!isPartialCommand &&\n\t\t\t\t\t\tcommand.endMarker &&\n\t\t\t\t\t\tcommand.endMarker.line !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tbuffer.viewportY + stickyScrollLineCount >\n\t\t\t\t\t\t\tcommand.endMarker.line\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst diff =\n\t\t\t\t\t\t\t\tbuffer.viewportY +\n\t\t\t\t\t\t\t\tstickyScrollLineCount -\n\t\t\t\t\t\t\t\tcommand.endMarker.line;\n\t\t\t\t\t\t\tendMarkerOffset = diff * rowHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._element.style.bottom = `${termBox.height - overlayHeight + 1 + endMarkerOffset}px`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setVisible(false);\n\t\t}\n\t}\n\n\tprivate _ensureElement() {\n\t\tif (\n\t\t\t// The element is already created\n\t\t\tthis._element ||\n\t\t\t// If the overlay is yet to be created, the terminal cannot be opened so defer to next call\n\t\t\t!this._stickyScrollOverlay ||\n\t\t\t// The xterm.js instance isn't opened yet\n\t\t\t!this._xterm?.raw.element?.parentElement\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst overlay = this._stickyScrollOverlay;\n\n\t\tconst hoverOverlay = $(\".hover-overlay\");\n\t\tthis._element = $(\".terminal-sticky-scroll\", undefined, hoverOverlay);\n\t\tthis._xterm.raw.element.parentElement.append(this._element);\n\t\tthis._register(toDisposable(() => this._element?.remove()));\n\n\t\t// Fill tooltip\n\t\tlet hoverTitle = localize(\n\t\t\t\"stickyScrollHoverTitle\",\n\t\t\t\"Navigate to Command\",\n\t\t);\n\t\tconst scrollToPreviousCommandKeybinding =\n\t\t\tthis._keybindingService.lookupKeybinding(\n\t\t\t\tTerminalCommandId.ScrollToPreviousCommand,\n\t\t\t);\n\t\tif (scrollToPreviousCommandKeybinding) {\n\t\t\tconst label = scrollToPreviousCommandKeybinding.getLabel();\n\t\t\tif (label) {\n\t\t\t\thoverTitle +=\n\t\t\t\t\t\"\\n\" +\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"labelWithKeybinding\",\n\t\t\t\t\t\t\"{0} ({1})\",\n\t\t\t\t\t\tterminalStrings.scrollToPreviousCommand.value,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tconst scrollToNextCommandKeybinding =\n\t\t\tthis._keybindingService.lookupKeybinding(\n\t\t\t\tTerminalCommandId.ScrollToNextCommand,\n\t\t\t);\n\t\tif (scrollToNextCommandKeybinding) {\n\t\t\tconst label = scrollToNextCommandKeybinding.getLabel();\n\t\t\tif (label) {\n\t\t\t\thoverTitle +=\n\t\t\t\t\t\"\\n\" +\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"labelWithKeybinding\",\n\t\t\t\t\t\t\"{0} ({1})\",\n\t\t\t\t\t\tterminalStrings.scrollToNextCommand.value,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\thoverOverlay.title = hoverTitle;\n\n\t\tconst scrollBarWidth = (this._xterm.raw as any as { _core: IXtermCore })\n\t\t\t._core.viewport?.scrollBarWidth;\n\t\tif (scrollBarWidth !== undefined) {\n\t\t\tthis._element.style.right = `${scrollBarWidth}px`;\n\t\t}\n\n\t\tthis._stickyScrollOverlay.open(this._element);\n\n\t\t// Scroll to the command on click\n\t\tthis._register(\n\t\t\taddStandardDisposableListener(hoverOverlay, \"click\", () => {\n\t\t\t\tif (this._xterm && this._currentStickyCommand) {\n\t\t\t\t\tthis._xterm.markTracker.revealCommand(\n\t\t\t\t\t\tthis._currentStickyCommand,\n\t\t\t\t\t);\n\t\t\t\t\tthis._instance.focus();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Forward mouse events to the terminal\n\t\tthis._register(\n\t\t\taddStandardDisposableListener(hoverOverlay, \"wheel\", (e) =>\n\t\t\t\tthis._xterm?.raw.element?.dispatchEvent(\n\t\t\t\t\tnew WheelEvent(e.type, e),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\t// Context menu - stop propagation on mousedown because rightClickBehavior listens on\n\t\t// mousedown, not contextmenu\n\t\tthis._register(\n\t\t\taddDisposableListener(hoverOverlay, \"mousedown\", (e) => {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\te.preventDefault();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\taddDisposableListener(hoverOverlay, \"contextmenu\", (e) => {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\topenContextMenu(\n\t\t\t\t\tgetWindow(hoverOverlay),\n\t\t\t\t\te,\n\t\t\t\t\tthis._instance,\n\t\t\t\t\tthis._contextMenu,\n\t\t\t\t\tthis._contextMenuService,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\t// Instead of juggling decorations for hover styles, swap out the theme to indicate the\n\t\t// hover state. This comes with the benefit over other methods of working well with special\n\t\t// decorative characters like powerline symbols.\n\t\tthis._register(\n\t\t\taddStandardDisposableListener(\n\t\t\t\thoverOverlay,\n\t\t\t\t\"mouseover\",\n\t\t\t\t() => (overlay.options.theme = this._getTheme(true)),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\taddStandardDisposableListener(\n\t\t\t\thoverOverlay,\n\t\t\t\t\"mouseleave\",\n\t\t\t\t() => (overlay.options.theme = this._getTheme(false)),\n\t\t\t),\n\t\t);\n\t}\n\n\t@throttle(0)\n\tprivate _syncOptions() {\n\t\tif (!this._stickyScrollOverlay) {\n\t\t\treturn;\n\t\t}\n\t\tthis._stickyScrollOverlay.resize(\n\t\t\tthis._xterm.raw.cols,\n\t\t\tthis._stickyScrollOverlay.rows,\n\t\t);\n\t\tthis._stickyScrollOverlay.options = this._getOptions();\n\t\tthis._refreshGpuAcceleration();\n\t}\n\n\tprivate _getOptions(): ITerminalOptions {\n\t\tconst o = this._xterm.raw.options;\n\t\treturn {\n\t\t\tcursorInactiveStyle: \"none\",\n\t\t\tscrollback: 0,\n\t\t\tlogLevel: \"off\",\n\n\t\t\ttheme: this._getTheme(false),\n\t\t\tdocumentOverride: o.documentOverride,\n\t\t\tfontFamily: o.fontFamily,\n\t\t\tfontWeight: o.fontWeight,\n\t\t\tfontWeightBold: o.fontWeightBold,\n\t\t\tfontSize: o.fontSize,\n\t\t\tletterSpacing: o.letterSpacing,\n\t\t\tlineHeight: o.lineHeight,\n\t\t\tdrawBoldTextInBrightColors: o.drawBoldTextInBrightColors,\n\t\t\tminimumContrastRatio: o.minimumContrastRatio,\n\t\t\ttabStopWidth: o.tabStopWidth,\n\t\t\tcustomGlyphs: o.customGlyphs,\n\t\t};\n\t}\n\n\t@throttle(0)\n\tprivate async _refreshGpuAcceleration() {\n\t\tif (this._shouldLoadWebgl() && !this._webglAddon) {\n\t\t\tconst WebglAddon = await this._getWebglAddonConstructor();\n\t\t\tif (this._store.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._webglAddon = this._register(new WebglAddon());\n\t\t\tthis._stickyScrollOverlay?.loadAddon(this._webglAddon);\n\t\t} else if (!this._shouldLoadWebgl() && this._webglAddon) {\n\t\t\tthis._webglAddon.dispose();\n\t\t\tthis._webglAddon = undefined;\n\t\t}\n\t}\n\n\tprivate _shouldLoadWebgl(): boolean {\n\t\treturn (\n\t\t\tthis._terminalConfigurationService.config.gpuAcceleration ===\n\t\t\t\t\"auto\" ||\n\t\t\tthis._terminalConfigurationService.config.gpuAcceleration === \"on\"\n\t\t);\n\t}\n\n\tprivate _getTheme(isHovering: boolean): ITheme {\n\t\tconst theme = this._themeService.getColorTheme();\n\t\treturn {\n\t\t\t...this._xterm.getXtermTheme(),\n\t\t\tbackground: isHovering\n\t\t\t\t? (theme\n\t\t\t\t\t\t.getColor(terminalStickyScrollHoverBackground)\n\t\t\t\t\t\t?.toString() ??\n\t\t\t\t\tthis._xtermColorProvider\n\t\t\t\t\t\t.getBackgroundColor(theme)\n\t\t\t\t\t\t?.toString())\n\t\t\t\t: (theme.getColor(terminalStickyScrollBackground)?.toString() ??\n\t\t\t\t\tthis._xtermColorProvider\n\t\t\t\t\t\t.getBackgroundColor(theme)\n\t\t\t\t\t\t?.toString()),\n\t\t\tselectionBackground: undefined,\n\t\t\tselectionInactiveBackground: undefined,\n\t\t};\n\t}\n\n\t@memoize\n\tprivate async _getSerializeAddonConstructor(): Promise<\n\t\ttypeof SerializeAddonType\n\t> {\n\t\treturn (\n\t\t\tawait importAMDNodeModule<typeof import(\"@xterm/addon-serialize\")>(\n\t\t\t\t\"@xterm/addon-serialize\",\n\t\t\t\t\"lib/addon-serialize.js\",\n\t\t\t)\n\t\t).SerializeAddon;\n\t}\n\n\t@memoize\n\tprivate async _getWebglAddonConstructor(): Promise<typeof WebglAddonType> {\n\t\treturn (\n\t\t\tawait importAMDNodeModule<typeof import(\"@xterm/addon-webgl\")>(\n\t\t\t\t\"@xterm/addon-webgl\",\n\t\t\t\t\"lib/addon-webgl.js\",\n\t\t\t)\n\t\t).WebglAddon;\n\t}\n}\n\nfunction lineStartsWith(line: IBufferLine | undefined, text: string): boolean {\n\tif (!line) {\n\t\treturn false;\n\t}\n\tfor (let i = 0; i < text.length; i++) {\n\t\tif (line.getCell(i)?.getChars() !== text[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n"],
  "mappings": "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",
  "names": ["OverlayState", "CssClasses", "Constants"]
}
