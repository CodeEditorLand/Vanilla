{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminalStickyScrollContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from \"@xterm/xterm\";\nimport { Event } from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tMutableDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport \"./media/stickyScroll.css\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../../platform/keybinding/common/keybinding.js\";\nimport { TerminalCapability } from \"../../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport type {\n\tITerminalContribution,\n\tITerminalInstance,\n\tIXtermTerminal,\n} from \"../../../terminal/browser/terminal.js\";\nimport {\n\tTerminalInstance,\n\tTerminalInstanceColorProvider,\n} from \"../../../terminal/browser/terminalInstance.js\";\nimport type { TerminalWidgetManager } from \"../../../terminal/browser/widgets/widgetManager.js\";\nimport type {\n\tITerminalProcessInfo,\n\tITerminalProcessManager,\n} from \"../../../terminal/common/terminal.js\";\nimport { TerminalStickyScrollSettingId } from \"../common/terminalStickyScrollConfiguration.js\";\nimport { TerminalStickyScrollOverlay } from \"./terminalStickyScrollOverlay.js\";\n\nexport class TerminalStickyScrollContribution\n\textends Disposable\n\timplements ITerminalContribution\n{\n\tstatic readonly ID = \"terminal.stickyScroll\";\n\n\tstatic get(\n\t\tinstance: ITerminalInstance,\n\t): TerminalStickyScrollContribution | null {\n\t\treturn instance.getContribution<TerminalStickyScrollContribution>(\n\t\t\tTerminalStickyScrollContribution.ID,\n\t\t);\n\t}\n\n\tprivate _xterm?: IXtermTerminal & { raw: RawXtermTerminal };\n\n\tprivate readonly _overlay = this._register(\n\t\tnew MutableDisposable<TerminalStickyScrollOverlay>(),\n\t);\n\n\tprivate readonly _enableListeners = this._register(new MutableDisposable());\n\tprivate readonly _disableListeners = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager | ITerminalProcessInfo,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@IContextKeyService\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IKeybindingService\n\t\tprivate readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tthis._configurationService.onDidChangeConfiguration,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!e ||\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tTerminalStickyScrollSettingId.Enabled,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._refreshState();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._xterm = xterm;\n\t\tthis._refreshState();\n\t}\n\n\txtermOpen(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._refreshState();\n\t}\n\n\thideLock() {\n\t\tthis._overlay.value?.lockHide();\n\t}\n\n\thideUnlock() {\n\t\tthis._overlay.value?.unlockHide();\n\t}\n\n\tprivate _refreshState(): void {\n\t\tif (this._overlay.value) {\n\t\t\tthis._tryDisable();\n\t\t} else {\n\t\t\tthis._tryEnable();\n\t\t}\n\n\t\tif (this._overlay.value) {\n\t\t\tthis._enableListeners.clear();\n\t\t\tif (!this._disableListeners.value) {\n\t\t\t\tthis._disableListeners.value =\n\t\t\t\t\tthis._instance.capabilities.onDidRemoveCapability((e) => {\n\t\t\t\t\t\tif (e.id === TerminalCapability.CommandDetection) {\n\t\t\t\t\t\t\tthis._refreshState();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis._disableListeners.clear();\n\t\t\tif (!this._enableListeners.value) {\n\t\t\t\tthis._enableListeners.value =\n\t\t\t\t\tthis._instance.capabilities.onDidAddCapability((e) => {\n\t\t\t\t\t\tif (e.id === TerminalCapability.CommandDetection) {\n\t\t\t\t\t\t\tthis._refreshState();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _tryEnable(): void {\n\t\tif (this._shouldBeEnabled()) {\n\t\t\tconst xtermCtorEventually = TerminalInstance.getXtermConstructor(\n\t\t\t\tthis._keybindingService,\n\t\t\t\tthis._contextKeyService,\n\t\t\t);\n\t\t\tthis._overlay.value = this._instantiationService.createInstance(\n\t\t\t\tTerminalStickyScrollOverlay,\n\t\t\t\tthis._instance,\n\t\t\t\tthis._xterm!,\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tTerminalInstanceColorProvider,\n\t\t\t\t\tthis._instance,\n\t\t\t\t),\n\t\t\t\tthis._instance.capabilities.get(\n\t\t\t\t\tTerminalCapability.CommandDetection,\n\t\t\t\t)!,\n\t\t\t\txtermCtorEventually,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _tryDisable(): void {\n\t\tif (!this._shouldBeEnabled()) {\n\t\t\tthis._overlay.clear();\n\t\t}\n\t}\n\n\tprivate _shouldBeEnabled(): boolean {\n\t\tconst capability = this._instance.capabilities.get(\n\t\t\tTerminalCapability.CommandDetection,\n\t\t);\n\t\treturn !!(\n\t\t\tthis._configurationService.getValue(\n\t\t\t\tTerminalStickyScrollSettingId.Enabled,\n\t\t\t) &&\n\t\t\tcapability &&\n\t\t\tthis._xterm?.raw?.element\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
