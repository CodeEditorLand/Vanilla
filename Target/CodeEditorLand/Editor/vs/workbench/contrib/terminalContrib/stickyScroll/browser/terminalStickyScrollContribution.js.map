{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminalStickyScrollContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from '@xterm/xterm';\nimport { Event } from '../../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport './media/stickyScroll.css';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { TerminalCapability } from '../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { ITerminalContribution, ITerminalInstance, IXtermTerminal } from '../../../terminal/browser/terminal.js';\nimport { TerminalInstance, TerminalInstanceColorProvider } from '../../../terminal/browser/terminalInstance.js';\nimport { TerminalWidgetManager } from '../../../terminal/browser/widgets/widgetManager.js';\nimport { ITerminalProcessInfo, ITerminalProcessManager } from '../../../terminal/common/terminal.js';\nimport { TerminalStickyScrollSettingId } from '../common/terminalStickyScrollConfiguration.js';\nimport { TerminalStickyScrollOverlay } from './terminalStickyScrollOverlay.js';\n\nexport class TerminalStickyScrollContribution extends Disposable implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.stickyScroll';\n\n\tstatic get(instance: ITerminalInstance): TerminalStickyScrollContribution | null {\n\t\treturn instance.getContribution<TerminalStickyScrollContribution>(TerminalStickyScrollContribution.ID);\n\t}\n\n\tprivate _xterm?: IXtermTerminal & { raw: RawXtermTerminal };\n\n\tprivate readonly _overlay = this._register(new MutableDisposable<TerminalStickyScrollOverlay>());\n\n\tprivate readonly _enableListeners = this._register(new MutableDisposable());\n\tprivate readonly _disableListeners = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager | ITerminalProcessInfo,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(Event.runAndSubscribe(this._configurationService.onDidChangeConfiguration, e => {\n\t\t\tif (!e || e.affectsConfiguration(TerminalStickyScrollSettingId.Enabled)) {\n\t\t\t\tthis._refreshState();\n\t\t\t}\n\t\t}));\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._xterm = xterm;\n\t\tthis._refreshState();\n\t}\n\n\txtermOpen(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._refreshState();\n\t}\n\n\thideLock() {\n\t\tthis._overlay.value?.lockHide();\n\t}\n\n\thideUnlock() {\n\t\tthis._overlay.value?.unlockHide();\n\t}\n\n\tprivate _refreshState(): void {\n\t\tif (this._overlay.value) {\n\t\t\tthis._tryDisable();\n\t\t} else {\n\t\t\tthis._tryEnable();\n\t\t}\n\n\t\tif (this._overlay.value) {\n\t\t\tthis._enableListeners.clear();\n\t\t\tif (!this._disableListeners.value) {\n\t\t\t\tthis._disableListeners.value = this._instance.capabilities.onDidRemoveCapability(e => {\n\t\t\t\t\tif (e.id === TerminalCapability.CommandDetection) {\n\t\t\t\t\t\tthis._refreshState();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis._disableListeners.clear();\n\t\t\tif (!this._enableListeners.value) {\n\t\t\t\tthis._enableListeners.value = this._instance.capabilities.onDidAddCapability(e => {\n\t\t\t\t\tif (e.id === TerminalCapability.CommandDetection) {\n\t\t\t\t\t\tthis._refreshState();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _tryEnable(): void {\n\t\tif (this._shouldBeEnabled()) {\n\t\t\tconst xtermCtorEventually = TerminalInstance.getXtermConstructor(this._keybindingService, this._contextKeyService);\n\t\t\tthis._overlay.value = this._instantiationService.createInstance(\n\t\t\t\tTerminalStickyScrollOverlay,\n\t\t\t\tthis._instance,\n\t\t\t\tthis._xterm!,\n\t\t\t\tthis._instantiationService.createInstance(TerminalInstanceColorProvider, this._instance),\n\t\t\t\tthis._instance.capabilities.get(TerminalCapability.CommandDetection)!,\n\t\t\t\txtermCtorEventually\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _tryDisable(): void {\n\t\tif (!this._shouldBeEnabled()) {\n\t\t\tthis._overlay.clear();\n\t\t}\n\t}\n\n\tprivate _shouldBeEnabled(): boolean {\n\t\tconst capability = this._instance.capabilities.get(TerminalCapability.CommandDetection);\n\t\treturn !!(this._configurationService.getValue(TerminalStickyScrollSettingId.Enabled) && capability && this._xterm?.raw?.element);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
