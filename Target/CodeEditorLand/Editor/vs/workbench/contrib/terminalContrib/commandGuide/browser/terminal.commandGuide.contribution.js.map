{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/commandGuide/browser/terminal.commandGuide.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from '@xterm/xterm';\nimport { addDisposableListener } from '../../../../../base/browser/dom.js';\nimport { combinedDisposable, Disposable, MutableDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../../nls.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TerminalCapability } from '../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { listInactiveSelectionBackground } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { registerColor, transparent } from '../../../../../platform/theme/common/colorUtils.js';\nimport { PANEL_BORDER } from '../../../../common/theme.js';\nimport { IDetachedTerminalInstance, ITerminalContribution, ITerminalInstance, IXtermTerminal } from '../../../terminal/browser/terminal.js';\nimport { registerTerminalContribution } from '../../../terminal/browser/terminalExtensions.js';\nimport { TerminalWidgetManager } from '../../../terminal/browser/widgets/widgetManager.js';\nimport { ITerminalProcessInfo, ITerminalProcessManager } from '../../../terminal/common/terminal.js';\nimport { terminalCommandGuideConfigSection, TerminalCommandGuideSettingId, type ITerminalCommandGuideConfiguration } from '../common/terminalCommandGuideConfiguration.js';\n\n// #region Terminal Contributions\n\nclass TerminalCommandGuideContribution extends Disposable implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.highlight';\n\n\tstatic get(instance: ITerminalInstance | IDetachedTerminalInstance): TerminalCommandGuideContribution | null {\n\t\treturn instance.getContribution<TerminalCommandGuideContribution>(TerminalCommandGuideContribution.ID);\n\t}\n\n\tprivate _xterm: IXtermTerminal & { raw: RawXtermTerminal } | undefined;\n\tprivate readonly _activeCommandGuide = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance | IDetachedTerminalInstance,\n\t\tprocessManager: ITerminalProcessManager | ITerminalProcessInfo,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t}\n\n\txtermOpen(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._xterm = xterm;\n\t\tthis._refreshActivatedState();\n\t\tthis._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TerminalCommandGuideSettingId.ShowCommandGuide)) {\n\t\t\t\tthis._refreshActivatedState();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _refreshActivatedState() {\n\t\tconst xterm = this._xterm;\n\t\tif (!xterm) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst showCommandGuide = this._configurationService.getValue<ITerminalCommandGuideConfiguration>(terminalCommandGuideConfigSection).showCommandGuide;\n\t\tif (!!this._activeCommandGuide.value === showCommandGuide) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showCommandGuide) {\n\t\t\tthis._activeCommandGuide.clear();\n\t\t} else {\n\t\t\tconst screenElement = xterm.raw.element!.querySelector('.xterm-screen')!;\n\t\t\tconst viewportElement = xterm.raw.element!.querySelector('.xterm-viewport')!;\n\t\t\tthis._activeCommandGuide.value = combinedDisposable(\n\t\t\t\taddDisposableListener(screenElement, 'mousemove', (e: MouseEvent) => this._tryShowHighlight(screenElement, xterm, e)),\n\t\t\t\taddDisposableListener(viewportElement, 'mousemove', (e: MouseEvent) => this._tryShowHighlight(screenElement, xterm, e)),\n\t\t\t\taddDisposableListener(xterm.raw.element!, 'mouseout', () => xterm.markTracker.showCommandGuide(undefined)),\n\t\t\t\txterm.raw.onData(() => xterm.markTracker.showCommandGuide(undefined)),\n\t\t\t\ttoDisposable(() => xterm.markTracker.showCommandGuide(undefined)),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _tryShowHighlight(element: Element, xterm: IXtermTerminal & { raw: RawXtermTerminal }, e: MouseEvent) {\n\t\tconst rect = element.getBoundingClientRect();\n\t\tif (!rect) {\n\t\t\treturn;\n\t\t}\n\t\tconst mouseCursorY = Math.floor(e.offsetY / (rect.height / xterm.raw.rows));\n\t\tconst command = this._instance.capabilities.get(TerminalCapability.CommandDetection)?.getCommandForLine(xterm.raw.buffer.active.viewportY + mouseCursorY);\n\t\tif (command && 'getOutput' in command) {\n\t\t\txterm.markTracker.showCommandGuide(command);\n\t\t} else {\n\t\t\txterm.markTracker.showCommandGuide(undefined);\n\t\t}\n\t}\n}\n\nregisterTerminalContribution(TerminalCommandGuideContribution.ID, TerminalCommandGuideContribution, false);\n\nexport const TERMINAL_COMMAND_GUIDE_COLOR = registerColor('terminalCommandGuide.foreground', {\n\tdark: transparent(listInactiveSelectionBackground, 1),\n\tlight: transparent(listInactiveSelectionBackground, 1),\n\thcDark: PANEL_BORDER,\n\thcLight: PANEL_BORDER\n}, localize('terminalCommandGuide.foreground', 'The foreground color of the terminal command guide that appears to the left of a command and its output on hover.'));\n\n// #endregion\n"],
  "mappings": "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",
  "names": []
}
