{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/developer/browser/terminal.developer.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal } from '@xterm/xterm';\nimport { Delayer } from '../../../../../base/common/async.js';\nimport { VSBuffer } from '../../../../../base/common/buffer.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable, combinedDisposable, dispose } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport './media/developer.css';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { Categories } from '../../../../../platform/action/common/actionCommonCategories.js';\nimport { IClipboardService } from '../../../../../platform/clipboard/common/clipboardService.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IFileService } from '../../../../../platform/files/common/files.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { ITerminalCommand, TerminalCapability, type ICommandDetectionCapability } from '../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { ITerminalLogService, TerminalSettingId } from '../../../../../platform/terminal/common/terminal.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { IInternalXtermTerminal, ITerminalContribution, ITerminalInstance, IXtermTerminal } from '../../../terminal/browser/terminal.js';\nimport { registerTerminalAction } from '../../../terminal/browser/terminalActions.js';\nimport { registerTerminalContribution } from '../../../terminal/browser/terminalExtensions.js';\nimport { TerminalWidgetManager } from '../../../terminal/browser/widgets/widgetManager.js';\nimport { ITerminalProcessManager } from '../../../terminal/common/terminal.js';\nimport { TerminalContextKeys } from '../../../terminal/common/terminalContextKey.js';\nimport { TerminalDeveloperCommandId } from '../common/terminal.developer.js';\nimport { IStatusbarService, StatusbarAlignment, type IStatusbarEntry, type IStatusbarEntryAccessor } from '../../../../services/statusbar/browser/statusbar.js';\n\nregisterTerminalAction({\n\tid: TerminalDeveloperCommandId.ShowTextureAtlas,\n\ttitle: localize2('workbench.action.terminal.showTextureAtlas', 'Show Terminal Texture Atlas'),\n\tcategory: Categories.Developer,\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.isOpen),\n\trun: async (c, accessor) => {\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst openerService = accessor.get(IOpenerService);\n\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\tconst bitmap = await c.service.activeInstance?.xterm?.textureAtlas;\n\t\tif (!bitmap) {\n\t\t\treturn;\n\t\t}\n\t\tconst cwdUri = workspaceContextService.getWorkspace().folders[0].uri;\n\t\tconst fileUri = URI.joinPath(cwdUri, 'textureAtlas.png');\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = bitmap.width;\n\t\tcanvas.height = bitmap.height;\n\t\tconst ctx = canvas.getContext('bitmaprenderer');\n\t\tif (!ctx) {\n\t\t\treturn;\n\t\t}\n\t\tctx.transferFromImageBitmap(bitmap);\n\t\tconst blob = await new Promise<Blob | null>((res) => canvas.toBlob(res));\n\t\tif (!blob) {\n\t\t\treturn;\n\t\t}\n\t\tawait fileService.writeFile(fileUri, VSBuffer.wrap(new Uint8Array(await blob.arrayBuffer())));\n\t\topenerService.open(fileUri);\n\t}\n});\n\nregisterTerminalAction({\n\tid: TerminalDeveloperCommandId.WriteDataToTerminal,\n\ttitle: localize2('workbench.action.terminal.writeDataToTerminal', 'Write Data to Terminal'),\n\tcategory: Categories.Developer,\n\trun: async (c, accessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst instance = await c.service.getActiveOrCreateInstance();\n\t\tawait c.service.revealActiveTerminal();\n\t\tawait instance.processReady;\n\t\tif (!instance.xterm) {\n\t\t\tthrow new Error('Cannot write data to terminal if xterm isn\\'t initialized');\n\t\t}\n\t\tconst data = await quickInputService.input({\n\t\t\tvalue: '',\n\t\t\tplaceHolder: 'Enter data, use \\\\x to escape',\n\t\t\tprompt: localize('workbench.action.terminal.writeDataToTerminal.prompt', \"Enter data to write directly to the terminal, bypassing the pty\"),\n\t\t});\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tlet escapedData = data\n\t\t\t.replace(/\\\\n/g, '\\n')\n\t\t\t.replace(/\\\\r/g, '\\r');\n\t\twhile (true) {\n\t\t\tconst match = escapedData.match(/\\\\x([0-9a-fA-F]{2})/);\n\t\t\tif (match === null || match.index === undefined || match.length < 2) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tescapedData = escapedData.slice(0, match.index) + String.fromCharCode(parseInt(match[1], 16)) + escapedData.slice(match.index + 4);\n\t\t}\n\t\tconst xterm = instance.xterm as any as IInternalXtermTerminal;\n\t\txterm._writeText(escapedData);\n\t}\n});\n\nregisterTerminalAction({\n\tid: TerminalDeveloperCommandId.RecordSession,\n\ttitle: localize2('workbench.action.terminal.recordSession', 'Record Terminal Session'),\n\tcategory: Categories.Developer,\n\trun: async (c, accessor) => {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst statusbarService = accessor.get(IStatusbarService);\n\t\tconst store = new DisposableStore();\n\n\t\t// Set up status bar entry\n\t\tconst text = localize('workbench.action.terminal.recordSession.recording', \"Recording terminal session...\");\n\t\tconst statusbarEntry: IStatusbarEntry = {\n\t\t\ttext,\n\t\t\tname: text,\n\t\t\tariaLabel: text,\n\t\t\tshowProgress: true\n\t\t};\n\t\tconst statusbarHandle = statusbarService.addEntry(statusbarEntry, 'recordSession', StatusbarAlignment.LEFT);\n\t\tstore.add(statusbarHandle);\n\n\t\t// Create, reveal and focus instance\n\t\tconst instance = await c.service.createTerminal();\n\t\tc.service.setActiveInstance(instance);\n\t\tawait c.service.revealActiveTerminal();\n\t\tawait Promise.all([\n\t\t\tinstance.processReady,\n\t\t\tinstance.focusWhenReady(true)\n\t\t]);\n\n\t\t// Record session\n\t\treturn new Promise<void>(resolve => {\n\t\t\tconst events: unknown[] = [];\n\t\t\tconst endRecording = () => {\n\t\t\t\tconst session = JSON.stringify(events, null, 2);\n\t\t\t\tclipboardService.writeText(session);\n\t\t\t\tstore.dispose();\n\t\t\t\tresolve();\n\t\t\t};\n\n\n\t\t\tconst timer = store.add(new Delayer(5000));\n\t\t\tstore.add(Event.runAndSubscribe(instance.onDimensionsChanged, () => {\n\t\t\t\tevents.push({\n\t\t\t\t\ttype: 'resize',\n\t\t\t\t\tcols: instance.cols,\n\t\t\t\t\trows: instance.rows\n\t\t\t\t});\n\t\t\t\ttimer.trigger(endRecording);\n\t\t\t}));\n\t\t\tstore.add(commandService.onWillExecuteCommand(e => {\n\t\t\t\tevents.push({\n\t\t\t\t\ttype: 'command',\n\t\t\t\t\tid: e.commandId,\n\t\t\t\t});\n\t\t\t\ttimer.trigger(endRecording);\n\t\t\t}));\n\t\t\tstore.add(instance.onWillData(data => {\n\t\t\t\tevents.push({\n\t\t\t\t\ttype: 'output',\n\t\t\t\t\tdata,\n\t\t\t\t});\n\t\t\t\ttimer.trigger(endRecording);\n\t\t\t}));\n\t\t\tstore.add(instance.onDidSendText(data => {\n\t\t\t\tevents.push({\n\t\t\t\t\ttype: 'sendText',\n\t\t\t\t\tdata,\n\t\t\t\t});\n\t\t\t\ttimer.trigger(endRecording);\n\t\t\t}));\n\t\t\tstore.add(instance.xterm!.raw.onData(data => {\n\t\t\t\tevents.push({\n\t\t\t\t\ttype: 'input',\n\t\t\t\t\tdata,\n\t\t\t\t});\n\t\t\t\ttimer.trigger(endRecording);\n\t\t\t}));\n\t\t\tlet commandDetectedRegistered = false;\n\t\t\tstore.add(Event.runAndSubscribe(instance.capabilities.onDidAddCapability, e => {\n\t\t\t\tif (commandDetectedRegistered) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst commandDetection = instance.capabilities.get(TerminalCapability.CommandDetection);\n\t\t\t\tif (!commandDetection) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tstore.add(commandDetection.promptInputModel.onDidChangeInput(e => {\n\t\t\t\t\tevents.push({\n\t\t\t\t\t\ttype: 'promptInputChange',\n\t\t\t\t\t\tdata: commandDetection.promptInputModel.getCombinedString(),\n\t\t\t\t\t});\n\t\t\t\t\ttimer.trigger(endRecording);\n\t\t\t\t}));\n\t\t\t\tcommandDetectedRegistered = true;\n\t\t\t}));\n\t\t});\n\n\t}\n});\n\nregisterTerminalAction({\n\tid: TerminalDeveloperCommandId.RestartPtyHost,\n\ttitle: localize2('workbench.action.terminal.restartPtyHost', 'Restart Pty Host'),\n\tcategory: Categories.Developer,\n\trun: async (c, accessor) => {\n\t\tconst logService = accessor.get(ITerminalLogService);\n\t\tconst backends = Array.from(c.instanceService.getRegisteredBackends());\n\t\tconst unresponsiveBackends = backends.filter(e => !e.isResponsive);\n\t\t// Restart only unresponsive backends if there are any\n\t\tconst restartCandidates = unresponsiveBackends.length > 0 ? unresponsiveBackends : backends;\n\t\tfor (const backend of restartCandidates) {\n\t\t\tlogService.warn(`Restarting pty host for authority \"${backend.remoteAuthority}\"`);\n\t\t\tbackend.restartPtyHost();\n\t\t}\n\t}\n});\n\nclass DevModeContribution extends Disposable implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.devMode';\n\tstatic get(instance: ITerminalInstance): DevModeContribution | null {\n\t\treturn instance.getContribution<DevModeContribution>(DevModeContribution.ID);\n\t}\n\n\tprivate _xterm: IXtermTerminal & { raw: Terminal } | undefined;\n\tprivate readonly _activeDevModeDisposables = new MutableDisposable();\n\tprivate _currentColor = 0;\n\n\tprivate _statusbarEntry: IStatusbarEntry | undefined;\n\tprivate readonly _statusbarEntryAccessor: MutableDisposable<IStatusbarEntryAccessor> = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IStatusbarService private readonly _statusbarService: IStatusbarService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TerminalSettingId.DevMode)) {\n\t\t\t\tthis._updateDevMode();\n\t\t\t}\n\t\t}));\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: Terminal }): void {\n\t\tthis._xterm = xterm;\n\t\tthis._updateDevMode();\n\t}\n\n\tprivate _updateDevMode() {\n\t\tconst devMode: boolean = this._isEnabled();\n\t\tthis._xterm?.raw.element?.classList.toggle('dev-mode', devMode);\n\n\t\tconst commandDetection = this._instance.capabilities.get(TerminalCapability.CommandDetection);\n\t\tif (devMode) {\n\t\t\tif (commandDetection) {\n\t\t\t\tconst commandDecorations = new Map<ITerminalCommand, IDisposable[]>();\n\t\t\t\tthis._activeDevModeDisposables.value = combinedDisposable(\n\t\t\t\t\t// Prompt input\n\t\t\t\t\tthis._instance.onDidBlur(() => this._updateDevMode()),\n\t\t\t\t\tthis._instance.onDidFocus(() => this._updateDevMode()),\n\t\t\t\t\tcommandDetection.promptInputModel.onDidChangeInput(() => this._updateDevMode()),\n\t\t\t\t\t// Sequence markers\n\t\t\t\t\tcommandDetection.onCommandFinished(command => {\n\t\t\t\t\t\tconst colorClass = `color-${this._currentColor}`;\n\t\t\t\t\t\tconst decorations: IDisposable[] = [];\n\t\t\t\t\t\tcommandDecorations.set(command, decorations);\n\t\t\t\t\t\tif (command.promptStartMarker) {\n\t\t\t\t\t\t\tconst d = this._instance.xterm!.raw?.registerDecoration({\n\t\t\t\t\t\t\t\tmarker: command.promptStartMarker\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (d) {\n\t\t\t\t\t\t\t\tdecorations.push(d);\n\t\t\t\t\t\t\t\td.onRender(e => {\n\t\t\t\t\t\t\t\t\te.textContent = 'A';\n\t\t\t\t\t\t\t\t\te.classList.add('xterm-sequence-decoration', 'top', 'left', colorClass);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (command.marker) {\n\t\t\t\t\t\t\tconst d = this._instance.xterm!.raw?.registerDecoration({\n\t\t\t\t\t\t\t\tmarker: command.marker,\n\t\t\t\t\t\t\t\tx: command.startX\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (d) {\n\t\t\t\t\t\t\t\tdecorations.push(d);\n\t\t\t\t\t\t\t\td.onRender(e => {\n\t\t\t\t\t\t\t\t\te.textContent = 'B';\n\t\t\t\t\t\t\t\t\te.classList.add('xterm-sequence-decoration', 'top', 'right', colorClass);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (command.executedMarker) {\n\t\t\t\t\t\t\tconst d = this._instance.xterm!.raw?.registerDecoration({\n\t\t\t\t\t\t\t\tmarker: command.executedMarker,\n\t\t\t\t\t\t\t\tx: command.executedX\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (d) {\n\t\t\t\t\t\t\t\tdecorations.push(d);\n\t\t\t\t\t\t\t\td.onRender(e => {\n\t\t\t\t\t\t\t\t\te.textContent = 'C';\n\t\t\t\t\t\t\t\t\te.classList.add('xterm-sequence-decoration', 'bottom', 'left', colorClass);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (command.endMarker) {\n\t\t\t\t\t\t\tconst d = this._instance.xterm!.raw?.registerDecoration({\n\t\t\t\t\t\t\t\tmarker: command.endMarker\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (d) {\n\t\t\t\t\t\t\t\tdecorations.push(d);\n\t\t\t\t\t\t\t\td.onRender(e => {\n\t\t\t\t\t\t\t\t\te.textContent = 'D';\n\t\t\t\t\t\t\t\t\te.classList.add('xterm-sequence-decoration', 'bottom', 'right', colorClass);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._currentColor = (this._currentColor + 1) % 2;\n\t\t\t\t\t}),\n\t\t\t\t\tcommandDetection.onCommandInvalidated(commands => {\n\t\t\t\t\t\tfor (const c of commands) {\n\t\t\t\t\t\t\tconst decorations = commandDecorations.get(c);\n\t\t\t\t\t\t\tif (decorations) {\n\t\t\t\t\t\t\t\tdispose(decorations);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcommandDecorations.delete(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tthis._updatePromptInputStatusBar(commandDetection);\n\t\t\t} else {\n\t\t\t\tthis._activeDevModeDisposables.value = this._instance.capabilities.onDidAddCapabilityType(e => {\n\t\t\t\t\tif (e === TerminalCapability.CommandDetection) {\n\t\t\t\t\t\tthis._updateDevMode();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis._activeDevModeDisposables.clear();\n\t\t}\n\t}\n\n\tprivate _isEnabled(): boolean {\n\t\treturn this._configurationService.getValue(TerminalSettingId.DevMode) || false;\n\t}\n\n\tprivate _updatePromptInputStatusBar(commandDetection: ICommandDetectionCapability) {\n\t\tconst promptInputModel = commandDetection.promptInputModel;\n\t\tif (promptInputModel) {\n\t\t\tconst name = localize('terminalDevMode', 'Terminal Dev Mode');\n\t\t\tconst isExecuting = promptInputModel.cursorIndex === -1;\n\t\t\tthis._statusbarEntry = {\n\t\t\t\tname,\n\t\t\t\ttext: `$(${isExecuting ? 'loading~spin' : 'terminal'}) ${promptInputModel.getCombinedString()}`,\n\t\t\t\tariaLabel: name,\n\t\t\t\ttooltip: 'The detected terminal prompt input',\n\t\t\t\tkind: 'prominent'\n\t\t\t};\n\t\t\tif (!this._statusbarEntryAccessor.value) {\n\t\t\t\tthis._statusbarEntryAccessor.value = this._statusbarService.addEntry(this._statusbarEntry, `terminal.promptInput.${this._instance.instanceId}`, StatusbarAlignment.LEFT);\n\t\t\t} else {\n\t\t\t\tthis._statusbarEntryAccessor.value.update(this._statusbarEntry);\n\t\t\t}\n\t\t\tthis._statusbarService.updateEntryVisibility(`terminal.promptInput.${this._instance.instanceId}`, this._instance.hasFocus);\n\t\t}\n\t}\n}\n\nregisterTerminalContribution(DevModeContribution.ID, DevModeContribution);\n"],
  "mappings": "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",
  "names": ["e"]
}
