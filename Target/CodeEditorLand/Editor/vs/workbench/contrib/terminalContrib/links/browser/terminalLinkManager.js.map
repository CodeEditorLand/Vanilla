{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/links/browser/terminalLinkManager.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tILink,\n\tILinkProvider,\n\tIViewportRange,\n\tTerminal,\n} from \"@xterm/xterm\";\nimport { EventType } from \"../../../../../base/browser/dom.js\";\nimport type { IHoverAction } from \"../../../../../base/browser/ui/hover/hover.js\";\nimport { RunOnceScheduler } from \"../../../../../base/common/async.js\";\nimport {\n\ttype IMarkdownString,\n\tMarkdownString,\n} from \"../../../../../base/common/htmlContent.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { OS, isMacintosh } from \"../../../../../base/common/platform.js\";\nimport { URI } from \"../../../../../base/common/uri.js\";\nimport * as nls from \"../../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../../platform/notification/common/notification.js\";\nimport type { ITerminalCapabilityStore } from \"../../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport { ITerminalLogService } from \"../../../../../platform/terminal/common/terminal.js\";\nimport { ITunnelService } from \"../../../../../platform/tunnel/common/tunnel.js\";\nimport {\n\tITerminalConfigurationService,\n\ttype ITerminalExternalLinkProvider,\n\tTerminalLinkQuickPickEvent,\n} from \"../../../terminal/browser/terminal.js\";\nimport {\n\ttype ILinkHoverTargetOptions,\n\tTerminalHover,\n} from \"../../../terminal/browser/widgets/terminalHoverWidget.js\";\nimport type { TerminalWidgetManager } from \"../../../terminal/browser/widgets/widgetManager.js\";\nimport type { IXtermCore } from \"../../../terminal/browser/xterm-private.js\";\nimport {\n\ttype ITerminalConfiguration,\n\ttype ITerminalProcessInfo,\n\tTERMINAL_CONFIG_SECTION,\n} from \"../../../terminal/common/terminal.js\";\nimport {\n\ttype ITerminalLinkDetector,\n\ttype ITerminalLinkOpener,\n\ttype ITerminalLinkResolver,\n\ttype ITerminalSimpleLink,\n\ttype OmitFirstArg,\n\tTerminalBuiltinLinkType,\n\ttype TerminalLinkType,\n} from \"./links.js\";\nimport { TerminalExternalLinkDetector } from \"./terminalExternalLinkDetector.js\";\nimport type { TerminalLink } from \"./terminalLink.js\";\nimport { TerminalLinkDetectorAdapter } from \"./terminalLinkDetectorAdapter.js\";\nimport { convertBufferRangeToViewport } from \"./terminalLinkHelpers.js\";\nimport {\n\tTerminalLocalFileLinkOpener,\n\tTerminalLocalFolderInWorkspaceLinkOpener,\n\tTerminalLocalFolderOutsideWorkspaceLinkOpener,\n\tTerminalSearchLinkOpener,\n\tTerminalUrlLinkOpener,\n} from \"./terminalLinkOpeners.js\";\nimport { TerminalLocalLinkDetector } from \"./terminalLocalLinkDetector.js\";\nimport { TerminalMultiLineLinkDetector } from \"./terminalMultiLineLinkDetector.js\";\nimport { TerminalUriLinkDetector } from \"./terminalUriLinkDetector.js\";\nimport { TerminalWordLinkDetector } from \"./terminalWordLinkDetector.js\";\n\nexport type XtermLinkMatcherHandler = (\n\tevent: MouseEvent | undefined,\n\tlink: string,\n) => Promise<void>;\n\n/**\n * An object responsible for managing registration of link matchers and link providers.\n */\nexport class TerminalLinkManager extends DisposableStore {\n\tprivate _widgetManager: TerminalWidgetManager | undefined;\n\tprivate readonly _standardLinkProviders: Map<string, ILinkProvider> =\n\t\tnew Map();\n\tprivate readonly _linkProvidersDisposables: IDisposable[] = [];\n\tprivate readonly _externalLinkProviders: IDisposable[] = [];\n\tprivate readonly _openers: Map<TerminalLinkType, ITerminalLinkOpener> =\n\t\tnew Map();\n\n\texternalProvideLinksCb?: OmitFirstArg<\n\t\tITerminalExternalLinkProvider[\"provideLinks\"]\n\t>;\n\n\tconstructor(\n\t\tprivate readonly _xterm: Terminal,\n\t\tprivate readonly _processInfo: ITerminalProcessInfo,\n\t\tcapabilities: ITerminalCapabilityStore,\n\t\tprivate readonly _linkResolver: ITerminalLinkResolver,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ITerminalConfigurationService private readonly _terminalConfigurationService: ITerminalConfigurationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService,\n\t\t@ITunnelService private readonly _tunnelService: ITunnelService\n\t) {\n\t\tsuper();\n\n\t\tlet enableFileLinks = true;\n\t\tconst enableFileLinksConfig = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION).enableFileLinks as ITerminalConfiguration['enableFileLinks'] | boolean;\n\t\tswitch (enableFileLinksConfig) {\n\t\t\tcase 'off':\n\t\t\tcase false: // legacy from v1.75\n\t\t\t\tenableFileLinks = false;\n\t\t\t\tbreak;\n\t\t\tcase 'notRemote':\n\t\t\t\tenableFileLinks = !this._processInfo.remoteAuthority;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Setup link detectors in their order of priority\n\t\tif (enableFileLinks) {\n\t\t\tthis._setupLinkDetector(TerminalMultiLineLinkDetector.id, this._instantiationService.createInstance(TerminalMultiLineLinkDetector, this._xterm, this._processInfo, this._linkResolver));\n\t\t\tthis._setupLinkDetector(TerminalLocalLinkDetector.id, this._instantiationService.createInstance(TerminalLocalLinkDetector, this._xterm, capabilities, this._processInfo, this._linkResolver));\n\t\t}\n\t\tthis._setupLinkDetector(TerminalUriLinkDetector.id, this._instantiationService.createInstance(TerminalUriLinkDetector, this._xterm, this._processInfo, this._linkResolver));\n\t\tthis._setupLinkDetector(TerminalWordLinkDetector.id, this.add(this._instantiationService.createInstance(TerminalWordLinkDetector, this._xterm)));\n\n\t\t// Setup link openers\n\t\tconst localFileOpener = this._instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\tconst localFolderInWorkspaceOpener = this._instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\tthis._openers.set(TerminalBuiltinLinkType.LocalFile, localFileOpener);\n\t\tthis._openers.set(TerminalBuiltinLinkType.LocalFolderInWorkspace, localFolderInWorkspaceOpener);\n\t\tthis._openers.set(TerminalBuiltinLinkType.LocalFolderOutsideWorkspace, this._instantiationService.createInstance(TerminalLocalFolderOutsideWorkspaceLinkOpener));\n\t\tthis._openers.set(TerminalBuiltinLinkType.Search, this._instantiationService.createInstance(TerminalSearchLinkOpener, capabilities, this._processInfo.initialCwd, localFileOpener, localFolderInWorkspaceOpener, () => this._processInfo.os || OS));\n\t\tthis._openers.set(TerminalBuiltinLinkType.Url, this._instantiationService.createInstance(TerminalUrlLinkOpener, !!this._processInfo.remoteAuthority));\n\n\t\tthis._registerStandardLinkProviders();\n\n\t\tlet activeHoverDisposable: IDisposable | undefined;\n\t\tlet activeTooltipScheduler: RunOnceScheduler | undefined;\n\t\tthis.add(toDisposable(() => {\n\t\t\tthis._clearLinkProviders();\n\t\t\tdispose(this._externalLinkProviders);\n\t\t\tactiveHoverDisposable?.dispose();\n\t\t\tactiveTooltipScheduler?.dispose();\n\t\t}));\n\t\tthis._xterm.options.linkHandler = {\n\t\t\tallowNonHttpProtocols: true,\n\t\t\tactivate: (event, text) => {\n\t\t\t\tif (!this._isLinkActivationModifierDown(event)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst colonIndex = text.indexOf(':');\n\t\t\t\tif (colonIndex === -1) {\n\t\t\t\t\tthrow new Error(`Could not find scheme in link \"${text}\"`);\n\t\t\t\t}\n\t\t\t\tconst scheme = text.substring(0, colonIndex);\n\t\t\t\tif (this._terminalConfigurationService.config.allowedLinkSchemes.indexOf(scheme) === -1) {\n\t\t\t\t\tthis._notificationService.prompt(Severity.Warning, nls.localize('scheme', 'Opening URIs can be insecure, do you want to allow opening links with the scheme {0}?', scheme), [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: nls.localize('allow', 'Allow {0}', scheme),\n\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\tconst allowedLinkSchemes = [\n\t\t\t\t\t\t\t\t\t...this._terminalConfigurationService.config.allowedLinkSchemes,\n\t\t\t\t\t\t\t\t\tscheme\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\tthis._configurationService.updateValue(`terminal.integrated.allowedLinkSchemes`, allowedLinkSchemes);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\tthis._openers.get(TerminalBuiltinLinkType.Url)?.open({\n\t\t\t\t\ttype: TerminalBuiltinLinkType.Url,\n\t\t\t\t\ttext,\n\t\t\t\t\tbufferRange: null!,\n\t\t\t\t\turi: URI.parse(text)\n\t\t\t\t});\n\t\t\t},\n\t\t\thover: (e, text, range) => {\n\t\t\t\tactiveHoverDisposable?.dispose();\n\t\t\t\tactiveHoverDisposable = undefined;\n\t\t\t\tactiveTooltipScheduler?.dispose();\n\t\t\t\tactiveTooltipScheduler = new RunOnceScheduler(() => {\n\t\t\t\t\tconst core = (this._xterm as any)._core as IXtermCore;\n\t\t\t\t\tconst cellDimensions = {\n\t\t\t\t\t\twidth: core._renderService.dimensions.css.cell.width,\n\t\t\t\t\t\theight: core._renderService.dimensions.css.cell.height\n\t\t\t\t\t};\n\t\t\t\t\tconst terminalDimensions = {\n\t\t\t\t\t\twidth: this._xterm.cols,\n\t\t\t\t\t\theight: this._xterm.rows\n\t\t\t\t\t};\n\t\t\t\t\tactiveHoverDisposable = this._showHover({\n\t\t\t\t\t\tviewportRange: convertBufferRangeToViewport(range, this._xterm.buffer.active.viewportY),\n\t\t\t\t\t\tcellDimensions,\n\t\t\t\t\t\tterminalDimensions\n\t\t\t\t\t}, this._getLinkHoverString(text, text), undefined, (text) => this._xterm.options.linkHandler?.activate(e, text, range));\n\t\t\t\t\t// Clear out scheduler until next hover event\n\t\t\t\t\tactiveTooltipScheduler?.dispose();\n\t\t\t\t\tactiveTooltipScheduler = undefined;\n\t\t\t\t}, this._configurationService.getValue('workbench.hover.delay'));\n\t\t\t\tactiveTooltipScheduler.schedule();\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate _setupLinkDetector(\n\t\tid: string,\n\t\tdetector: ITerminalLinkDetector,\n\t\tisExternal = false,\n\t): ILinkProvider {\n\t\tconst detectorAdapter = this.add(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tTerminalLinkDetectorAdapter,\n\t\t\t\tdetector,\n\t\t\t),\n\t\t);\n\t\tthis.add(\n\t\t\tdetectorAdapter.onDidActivateLink((e) => {\n\t\t\t\t// Prevent default electron link handling so Alt+Click mode works normally\n\t\t\t\te.event?.preventDefault();\n\t\t\t\t// Require correct modifier on click unless event is coming from linkQuickPick selection\n\t\t\t\tif (\n\t\t\t\t\te.event &&\n\t\t\t\t\t!(e.event instanceof TerminalLinkQuickPickEvent) &&\n\t\t\t\t\t!this._isLinkActivationModifierDown(e.event)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Just call the handler if there is no before listener\n\t\t\t\tif (e.link.activate) {\n\t\t\t\t\t// Custom activate call (external links only)\n\t\t\t\t\te.link.activate(e.link.text);\n\t\t\t\t} else {\n\t\t\t\t\tthis._openLink(e.link);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.add(\n\t\t\tdetectorAdapter.onDidShowHover((e) =>\n\t\t\t\tthis._tooltipCallback(\n\t\t\t\t\te.link,\n\t\t\t\t\te.viewportRange,\n\t\t\t\t\te.modifierDownCallback,\n\t\t\t\t\te.modifierUpCallback,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tif (!isExternal) {\n\t\t\tthis._standardLinkProviders.set(id, detectorAdapter);\n\t\t}\n\t\treturn detectorAdapter;\n\t}\n\n\tprivate async _openLink(link: ITerminalSimpleLink): Promise<void> {\n\t\tthis._logService.debug(\"Opening link\", link);\n\t\tconst opener = this._openers.get(link.type);\n\t\tif (!opener) {\n\t\t\tthrow new Error(`No matching opener for link type \"${link.type}\"`);\n\t\t}\n\t\tawait opener.open(link);\n\t}\n\n\tasync openRecentLink(\n\t\ttype: \"localFile\" | \"url\",\n\t): Promise<ILink | undefined> {\n\t\tlet links;\n\t\tlet i = this._xterm.buffer.active.length;\n\t\twhile (\n\t\t\t(!links || links.length === 0) &&\n\t\t\ti >= this._xterm.buffer.active.viewportY\n\t\t) {\n\t\t\tlinks = await this._getLinksForType(i, type);\n\t\t\ti--;\n\t\t}\n\n\t\tif (!links || links.length < 1) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst event = new TerminalLinkQuickPickEvent(EventType.CLICK);\n\t\tlinks[0].activate(event, links[0].text);\n\t\treturn links[0];\n\t}\n\n\tasync getLinks(): Promise<{\n\t\tviewport: IDetectedLinks;\n\t\tall: Promise<IDetectedLinks>;\n\t}> {\n\t\t// Fetch and await the viewport results\n\t\tconst viewportLinksByLinePromises: Promise<\n\t\t\tIDetectedLinks | undefined\n\t\t>[] = [];\n\t\tfor (\n\t\t\tlet i = this._xterm.buffer.active.viewportY + this._xterm.rows - 1;\n\t\t\ti >= this._xterm.buffer.active.viewportY;\n\t\t\ti--\n\t\t) {\n\t\t\tviewportLinksByLinePromises.push(this._getLinksForLine(i));\n\t\t}\n\t\tconst viewportLinksByLine = await Promise.all(\n\t\t\tviewportLinksByLinePromises,\n\t\t);\n\n\t\t// Assemble viewport links\n\t\tconst viewportLinks: Required<\n\t\t\tPick<\n\t\t\t\tIDetectedLinks,\n\t\t\t\t\"wordLinks\" | \"webLinks\" | \"fileLinks\" | \"folderLinks\"\n\t\t\t>\n\t\t> = {\n\t\t\twordLinks: [],\n\t\t\twebLinks: [],\n\t\t\tfileLinks: [],\n\t\t\tfolderLinks: [],\n\t\t};\n\t\tfor (const links of viewportLinksByLine) {\n\t\t\tif (links) {\n\t\t\t\tconst { wordLinks, webLinks, fileLinks, folderLinks } = links;\n\t\t\t\tif (wordLinks?.length) {\n\t\t\t\t\tviewportLinks.wordLinks.push(...wordLinks.reverse());\n\t\t\t\t}\n\t\t\t\tif (webLinks?.length) {\n\t\t\t\t\tviewportLinks.webLinks.push(...webLinks.reverse());\n\t\t\t\t}\n\t\t\t\tif (fileLinks?.length) {\n\t\t\t\t\tviewportLinks.fileLinks.push(...fileLinks.reverse());\n\t\t\t\t}\n\t\t\t\tif (folderLinks?.length) {\n\t\t\t\t\tviewportLinks.folderLinks.push(...folderLinks.reverse());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Fetch the remaining results async\n\t\tconst aboveViewportLinksPromises: Promise<\n\t\t\tIDetectedLinks | undefined\n\t\t>[] = [];\n\t\tfor (let i = this._xterm.buffer.active.viewportY - 1; i >= 0; i--) {\n\t\t\taboveViewportLinksPromises.push(this._getLinksForLine(i));\n\t\t}\n\t\tconst belowViewportLinksPromises: Promise<\n\t\t\tIDetectedLinks | undefined\n\t\t>[] = [];\n\t\tfor (\n\t\t\tlet i = this._xterm.buffer.active.length - 1;\n\t\t\ti >= this._xterm.buffer.active.viewportY + this._xterm.rows;\n\t\t\ti--\n\t\t) {\n\t\t\tbelowViewportLinksPromises.push(this._getLinksForLine(i));\n\t\t}\n\n\t\t// Assemble all links in results\n\t\tconst allLinks: Promise<\n\t\t\tRequired<\n\t\t\t\tPick<\n\t\t\t\t\tIDetectedLinks,\n\t\t\t\t\t\"wordLinks\" | \"webLinks\" | \"fileLinks\" | \"folderLinks\"\n\t\t\t\t>\n\t\t\t>\n\t\t> = Promise.all(aboveViewportLinksPromises).then(\n\t\t\tasync (aboveViewportLinks) => {\n\t\t\t\tconst belowViewportLinks = await Promise.all(\n\t\t\t\t\tbelowViewportLinksPromises,\n\t\t\t\t);\n\t\t\t\tconst allResults: Required<\n\t\t\t\t\tPick<\n\t\t\t\t\t\tIDetectedLinks,\n\t\t\t\t\t\t\"wordLinks\" | \"webLinks\" | \"fileLinks\" | \"folderLinks\"\n\t\t\t\t\t>\n\t\t\t\t> = {\n\t\t\t\t\twordLinks: [...viewportLinks.wordLinks],\n\t\t\t\t\twebLinks: [...viewportLinks.webLinks],\n\t\t\t\t\tfileLinks: [...viewportLinks.fileLinks],\n\t\t\t\t\tfolderLinks: [...viewportLinks.folderLinks],\n\t\t\t\t};\n\t\t\t\tfor (const links of [\n\t\t\t\t\t...belowViewportLinks,\n\t\t\t\t\t...aboveViewportLinks,\n\t\t\t\t]) {\n\t\t\t\t\tif (links) {\n\t\t\t\t\t\tconst { wordLinks, webLinks, fileLinks, folderLinks } =\n\t\t\t\t\t\t\tlinks;\n\t\t\t\t\t\tif (wordLinks?.length) {\n\t\t\t\t\t\t\tallResults.wordLinks.push(...wordLinks.reverse());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (webLinks?.length) {\n\t\t\t\t\t\t\tallResults.webLinks.push(...webLinks.reverse());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (fileLinks?.length) {\n\t\t\t\t\t\t\tallResults.fileLinks.push(...fileLinks.reverse());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (folderLinks?.length) {\n\t\t\t\t\t\t\tallResults.folderLinks.push(\n\t\t\t\t\t\t\t\t...folderLinks.reverse(),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn allResults;\n\t\t\t},\n\t\t);\n\n\t\treturn {\n\t\t\tviewport: viewportLinks,\n\t\t\tall: allLinks,\n\t\t};\n\t}\n\n\tprivate async _getLinksForLine(\n\t\ty: number,\n\t): Promise<IDetectedLinks | undefined> {\n\t\tconst unfilteredWordLinks = await this._getLinksForType(y, \"word\");\n\t\tconst webLinks = await this._getLinksForType(y, \"url\");\n\t\tconst fileLinks = await this._getLinksForType(y, \"localFile\");\n\t\tconst folderLinks = await this._getLinksForType(y, \"localFolder\");\n\t\tconst words = new Set();\n\t\tlet wordLinks;\n\t\tif (unfilteredWordLinks) {\n\t\t\twordLinks = [];\n\t\t\tfor (const link of unfilteredWordLinks) {\n\t\t\t\tif (!words.has(link.text) && link.text.length > 1) {\n\t\t\t\t\twordLinks.push(link);\n\t\t\t\t\twords.add(link.text);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { wordLinks, webLinks, fileLinks, folderLinks };\n\t}\n\n\tprotected async _getLinksForType(\n\t\ty: number,\n\t\ttype: \"word\" | \"url\" | \"localFile\" | \"localFolder\",\n\t): Promise<ILink[] | undefined> {\n\t\tswitch (type) {\n\t\t\tcase \"word\":\n\t\t\t\treturn await new Promise<ILink[] | undefined>((r) =>\n\t\t\t\t\tthis._standardLinkProviders\n\t\t\t\t\t\t.get(TerminalWordLinkDetector.id)\n\t\t\t\t\t\t?.provideLinks(y, r),\n\t\t\t\t);\n\t\t\tcase \"url\":\n\t\t\t\treturn await new Promise<ILink[] | undefined>((r) =>\n\t\t\t\t\tthis._standardLinkProviders\n\t\t\t\t\t\t.get(TerminalUriLinkDetector.id)\n\t\t\t\t\t\t?.provideLinks(y, r),\n\t\t\t\t);\n\t\t\tcase \"localFile\": {\n\t\t\t\tconst links = await new Promise<ILink[] | undefined>((r) =>\n\t\t\t\t\tthis._standardLinkProviders\n\t\t\t\t\t\t.get(TerminalLocalLinkDetector.id)\n\t\t\t\t\t\t?.provideLinks(y, r),\n\t\t\t\t);\n\t\t\t\treturn links?.filter(\n\t\t\t\t\t(link) =>\n\t\t\t\t\t\t(link as TerminalLink).type ===\n\t\t\t\t\t\tTerminalBuiltinLinkType.LocalFile,\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase \"localFolder\": {\n\t\t\t\tconst links = await new Promise<ILink[] | undefined>((r) =>\n\t\t\t\t\tthis._standardLinkProviders\n\t\t\t\t\t\t.get(TerminalLocalLinkDetector.id)\n\t\t\t\t\t\t?.provideLinks(y, r),\n\t\t\t\t);\n\t\t\t\treturn links?.filter(\n\t\t\t\t\t(link) =>\n\t\t\t\t\t\t(link as TerminalLink).type ===\n\t\t\t\t\t\tTerminalBuiltinLinkType.LocalFolderInWorkspace,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _tooltipCallback(\n\t\tlink: TerminalLink,\n\t\tviewportRange: IViewportRange,\n\t\tmodifierDownCallback?: () => void,\n\t\tmodifierUpCallback?: () => void,\n\t) {\n\t\tif (!this._widgetManager) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst core = (this._xterm as any)._core as IXtermCore;\n\t\tconst cellDimensions = {\n\t\t\twidth: core._renderService.dimensions.css.cell.width,\n\t\t\theight: core._renderService.dimensions.css.cell.height,\n\t\t};\n\t\tconst terminalDimensions = {\n\t\t\twidth: this._xterm.cols,\n\t\t\theight: this._xterm.rows,\n\t\t};\n\n\t\t// Don't pass the mouse event as this avoids the modifier check\n\t\tthis._showHover(\n\t\t\t{\n\t\t\t\tviewportRange,\n\t\t\t\tcellDimensions,\n\t\t\t\tterminalDimensions,\n\t\t\t\tmodifierDownCallback,\n\t\t\t\tmodifierUpCallback,\n\t\t\t},\n\t\t\tthis._getLinkHoverString(link.text, link.label),\n\t\t\tlink.actions,\n\t\t\t(text) => link.activate(undefined, text),\n\t\t\tlink,\n\t\t);\n\t}\n\n\tprivate _showHover(\n\t\ttargetOptions: ILinkHoverTargetOptions,\n\t\ttext: IMarkdownString,\n\t\tactions: IHoverAction[] | undefined,\n\t\tlinkHandler: (url: string) => void,\n\t\tlink?: TerminalLink,\n\t): IDisposable | undefined {\n\t\tif (this._widgetManager) {\n\t\t\tconst widget = this._instantiationService.createInstance(\n\t\t\t\tTerminalHover,\n\t\t\t\ttargetOptions,\n\t\t\t\ttext,\n\t\t\t\tactions,\n\t\t\t\tlinkHandler,\n\t\t\t);\n\t\t\tconst attached = this._widgetManager.attachWidget(widget);\n\t\t\tif (attached) {\n\t\t\t\tlink?.onInvalidated(() => attached.dispose());\n\t\t\t}\n\t\t\treturn attached;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetWidgetManager(widgetManager: TerminalWidgetManager): void {\n\t\tthis._widgetManager = widgetManager;\n\t}\n\n\tprivate _clearLinkProviders(): void {\n\t\tdispose(this._linkProvidersDisposables);\n\t\tthis._linkProvidersDisposables.length = 0;\n\t}\n\n\tprivate _registerStandardLinkProviders(): void {\n\t\t// Forward any external link provider requests to the registered provider if it exists. This\n\t\t// helps maintain the relative priority of the link providers as it's defined by the order\n\t\t// in which they're registered in xterm.js.\n\t\t//\n\t\t/**\n\t\t * There's a bit going on here but here's another view:\n\t\t * - {@link externalProvideLinksCb} The external callback that gives the links (eg. from\n\t\t *   exthost)\n\t\t * - {@link proxyLinkProvider} A proxy that forwards the call over to\n\t\t *   {@link externalProvideLinksCb}\n\t\t * - {@link wrappedLinkProvider} Wraps the above in an `TerminalLinkDetectorAdapter`\n\t\t */\n\t\tconst proxyLinkProvider: OmitFirstArg<\n\t\t\tITerminalExternalLinkProvider[\"provideLinks\"]\n\t\t> = async (bufferLineNumber) => {\n\t\t\treturn this.externalProvideLinksCb?.(bufferLineNumber);\n\t\t};\n\t\tconst detectorId = `extension-${this._externalLinkProviders.length}`;\n\t\tconst wrappedLinkProvider = this._setupLinkDetector(\n\t\t\tdetectorId,\n\t\t\tnew TerminalExternalLinkDetector(\n\t\t\t\tdetectorId,\n\t\t\t\tthis._xterm,\n\t\t\t\tproxyLinkProvider,\n\t\t\t),\n\t\t\ttrue,\n\t\t);\n\t\tthis._linkProvidersDisposables.push(\n\t\t\tthis._xterm.registerLinkProvider(wrappedLinkProvider),\n\t\t);\n\n\t\tfor (const p of this._standardLinkProviders.values()) {\n\t\t\tthis._linkProvidersDisposables.push(\n\t\t\t\tthis._xterm.registerLinkProvider(p),\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected _isLinkActivationModifierDown(event: MouseEvent): boolean {\n\t\tconst editorConf = this._configurationService.getValue<{\n\t\t\tmultiCursorModifier: \"ctrlCmd\" | \"alt\";\n\t\t}>(\"editor\");\n\t\tif (editorConf.multiCursorModifier === \"ctrlCmd\") {\n\t\t\treturn !!event.altKey;\n\t\t}\n\t\treturn isMacintosh ? event.metaKey : event.ctrlKey;\n\t}\n\n\tprivate _getLinkHoverString(\n\t\turi: string,\n\t\tlabel: string | undefined,\n\t): IMarkdownString {\n\t\tconst editorConf = this._configurationService.getValue<{\n\t\t\tmultiCursorModifier: \"ctrlCmd\" | \"alt\";\n\t\t}>(\"editor\");\n\n\t\tlet clickLabel = \"\";\n\t\tif (editorConf.multiCursorModifier === \"ctrlCmd\") {\n\t\t\tif (isMacintosh) {\n\t\t\t\tclickLabel = nls.localize(\n\t\t\t\t\t\"terminalLinkHandler.followLinkAlt.mac\",\n\t\t\t\t\t\"option + click\",\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tclickLabel = nls.localize(\n\t\t\t\t\t\"terminalLinkHandler.followLinkAlt\",\n\t\t\t\t\t\"alt + click\",\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (isMacintosh) {\n\t\t\tclickLabel = nls.localize(\n\t\t\t\t\"terminalLinkHandler.followLinkCmd\",\n\t\t\t\t\"cmd + click\",\n\t\t\t);\n\t\t} else {\n\t\t\tclickLabel = nls.localize(\n\t\t\t\t\"terminalLinkHandler.followLinkCtrl\",\n\t\t\t\t\"ctrl + click\",\n\t\t\t);\n\t\t}\n\n\t\tlet fallbackLabel = nls.localize(\"followLink\", \"Follow link\");\n\t\ttry {\n\t\t\tif (this._tunnelService.canTunnel(URI.parse(uri))) {\n\t\t\t\tfallbackLabel = nls.localize(\n\t\t\t\t\t\"followForwardedLink\",\n\t\t\t\t\t\"Follow link using forwarded port\",\n\t\t\t\t);\n\t\t\t}\n\t\t} catch {\n\t\t\t// No-op, already set to fallback\n\t\t}\n\n\t\tconst markdown = new MarkdownString(\"\", true);\n\t\t// Escapes markdown in label & uri\n\t\tif (label) {\n\t\t\tlabel = markdown.appendText(label).value;\n\t\t\tmarkdown.value = \"\";\n\t\t}\n\t\tif (uri) {\n\t\t\turi = markdown.appendText(uri).value;\n\t\t\tmarkdown.value = \"\";\n\t\t}\n\n\t\tlabel = label || fallbackLabel;\n\t\t// Use the label when uri is '' so the link displays correctly\n\t\turi = uri || label;\n\t\t// Although if there is a space in the uri, just replace it completely\n\t\tif (/(\\s|&nbsp;)/.test(uri)) {\n\t\t\turi = nls.localize(\"followLinkUrl\", \"Link\");\n\t\t}\n\n\t\treturn markdown\n\t\t\t.appendLink(uri, label)\n\t\t\t.appendMarkdown(` (${clickLabel})`);\n\t}\n}\n\nexport interface ILineColumnInfo {\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport interface IDetectedLinks {\n\twordLinks?: ILink[];\n\twebLinks?: ILink[];\n\tfileLinks?: (ILink | TerminalLink)[];\n\tfolderLinks?: ILink[];\n}\n"],
  "mappings": "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",
  "names": ["text"]
}
