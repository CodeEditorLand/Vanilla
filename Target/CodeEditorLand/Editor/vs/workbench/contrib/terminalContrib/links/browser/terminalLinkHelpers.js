import"../../../../../editor/common/core/range.js";import{OperatingSystem as x}from"../../../../../base/common/platform.js";import{posix as C,win32 as B}from"../../../../../base/common/path.js";import{TerminalCapability as L}from"../../../../../platform/terminal/common/capabilities/capabilities.js";import"../../../../../platform/terminal/common/terminal.js";function O(s,e,t,c){const i={start:{x:t.startColumn,y:t.startLineNumber+c},end:{x:t.endColumn-1,y:t.endLineNumber+c}};let n=0;const l=Math.ceil(t.startColumn/e);for(let r=0;r<Math.min(l);r++){const m=Math.min(e,t.startColumn-1-r*e);let o=0;const f=s[r];if(!f)break;for(let p=0;p<Math.min(e,m+o);p++){const g=f.getCell(p);if(!g)break;g.getWidth()===2&&o++;const h=g.getChars();h.length>1&&(o-=h.length-1)}n+=o}let a=0;const u=Math.ceil(t.endColumn/e);for(let r=Math.max(0,l-1);r<u;r++){const m=r===l-1?(t.startColumn-1+n)%e:0,o=Math.min(e,t.endColumn+n-r*e);let f=0;const p=s[r];if(!p)break;for(let g=m;g<Math.min(e,o+f);g++){const d=p.getCell(g);if(!d)break;const h=d.getWidth(),I=d.getChars();h===2&&f++,g===e-1&&I===""&&f++,I.length>1&&(f-=I.length-1)}a+=f}for(i.start.x+=n,i.end.x+=n+a;i.start.x>e;)i.start.x-=e,i.start.y++;for(;i.end.x>e;)i.end.x-=e,i.end.y++;return i}function P(s,e){return{start:{x:s.start.x-1,y:s.start.y-e-1},end:{x:s.end.x-1,y:s.end.y-e-1}}}function A(s,e,t,c){const i=Math.max(2048,c*2);t=Math.min(t,e+i);let n="";for(let l=e;l<=t;l++){const a=s.getLine(l);a&&(n+=a.translateToString(!0,0,c))}return n}function D(s,e,t,c){let i,n=-1,l=-1;const a=[];for(let u=e;u<=t;u++){const r=s.getLine(u);if(r)for(let m=0;m<c;m++){const o=r.getCell(m);if(!o)break;const f=o.isBold()|o.isInverse()|o.isStrikethrough()|o.isUnderline(),p=o.isDim()|o.isItalic();if(n===-1||l===-1)i={x:m,y:u};else if(n!==f||l!==p){const g={x:m,y:u};a.push({start:i,end:g}),i={x:m,y:u}}n=f,l=p}}return a}function F(s,e,t,c,i){const n=s.get(L.CommandDetection)?.getCwdForLine(e);if(i.trace("terminalLinkHelpers#updateLinkWithRelativeCwd cwd",n),!n)return;const l=[],a=c.sep;if(!t.includes(a))l.push(c.resolve(n+a+t));else{let u=0,r=0;const m=n.split(a).reverse(),o=t.split(a);for(;r<m.length&&(l.push(c.resolve(n+a+o.slice(u).join(a))),m[r]===o[r]);){u++;r++}}return l}function V(s){return s===x.Windows?B:C}export{P as convertBufferRangeToViewport,O as convertLinkRangeToBuffer,A as getXtermLineContent,D as getXtermRangesByAttr,V as osPathModule,F as updateLinkWithRelativeCwd};
