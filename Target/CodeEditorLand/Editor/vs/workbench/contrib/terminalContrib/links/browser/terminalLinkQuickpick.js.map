{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/links/browser/terminalLinkQuickpick.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ILink } from \"@xterm/xterm\";\nimport { EventType } from \"../../../../../base/browser/dom.js\";\nimport { Sequencer, timeout } from \"../../../../../base/common/async.js\";\nimport { Emitter, Event } from \"../../../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../../../base/common/lifecycle.js\";\nimport {\n\tbasenameOrAuthority,\n\tdirname,\n} from \"../../../../../base/common/resources.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\tAccessibleViewProviderId,\n\tIAccessibleViewService,\n} from \"../../../../../platform/accessibility/browser/accessibleView.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../../platform/label/common/label.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\tQuickInputHideReason,\n\ttype QuickPickItem,\n} from \"../../../../../platform/quickinput/common/quickInput.js\";\nimport { PickerEditorState } from \"../../../../browser/quickaccess.js\";\nimport {\n\ttype IDetachedTerminalInstance,\n\ttype ITerminalInstance,\n\tTerminalLinkQuickPickEvent,\n} from \"../../../terminal/browser/terminal.js\";\nimport { TerminalBuiltinLinkType } from \"./links.js\";\nimport type { TerminalLink } from \"./terminalLink.js\";\nimport type { IDetectedLinks } from \"./terminalLinkManager.js\";\nimport { getLinkSuffix } from \"./terminalLinkParsing.js\";\n\nexport class TerminalLinkQuickpick extends DisposableStore {\n\tprivate readonly _editorSequencer = new Sequencer();\n\tprivate readonly _editorViewState: PickerEditorState;\n\n\tprivate _instance:\n\t\t| ITerminalInstance\n\t\t| IDetachedTerminalInstance\n\t\t| undefined;\n\n\tprivate readonly _onDidRequestMoreLinks = this.add(new Emitter<void>());\n\treadonly onDidRequestMoreLinks = this._onDidRequestMoreLinks.event;\n\n\tconstructor(\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IQuickInputService\n\t\tprivate readonly _quickInputService: IQuickInputService,\n\t\t@IAccessibleViewService\n\t\tprivate readonly _accessibleViewService: IAccessibleViewService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._editorViewState = this.add(\n\t\t\tinstantiationService.createInstance(PickerEditorState),\n\t\t);\n\t}\n\n\tasync show(\n\t\tinstance: ITerminalInstance | IDetachedTerminalInstance,\n\t\tlinks: { viewport: IDetectedLinks; all: Promise<IDetectedLinks> },\n\t): Promise<void> {\n\t\tthis._instance = instance;\n\n\t\t// Allow all links a small amount of time to elapse to finish, if this is not done in this\n\t\t// time they will be loaded upon the first filter.\n\t\tconst result = await Promise.race([links.all, timeout(500)]);\n\t\tconst usingAllLinks = typeof result === \"object\";\n\t\tconst resolvedLinks = usingAllLinks ? result : links.viewport;\n\n\t\t// Get raw link picks\n\t\tconst wordPicks = resolvedLinks.wordLinks\n\t\t\t? await this._generatePicks(resolvedLinks.wordLinks)\n\t\t\t: undefined;\n\t\tconst filePicks = resolvedLinks.fileLinks\n\t\t\t? await this._generatePicks(resolvedLinks.fileLinks)\n\t\t\t: undefined;\n\t\tconst folderPicks = resolvedLinks.folderLinks\n\t\t\t? await this._generatePicks(resolvedLinks.folderLinks)\n\t\t\t: undefined;\n\t\tconst webPicks = resolvedLinks.webLinks\n\t\t\t? await this._generatePicks(resolvedLinks.webLinks)\n\t\t\t: undefined;\n\n\t\tconst picks: LinkQuickPickItem[] = [];\n\t\tif (webPicks) {\n\t\t\tpicks.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: localize(\"terminal.integrated.urlLinks\", \"Url\"),\n\t\t\t});\n\t\t\tpicks.push(...webPicks);\n\t\t}\n\t\tif (filePicks) {\n\t\t\tpicks.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: localize(\"terminal.integrated.localFileLinks\", \"File\"),\n\t\t\t});\n\t\t\tpicks.push(...filePicks);\n\t\t}\n\t\tif (folderPicks) {\n\t\t\tpicks.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"terminal.integrated.localFolderLinks\",\n\t\t\t\t\t\"Folder\",\n\t\t\t\t),\n\t\t\t});\n\t\t\tpicks.push(...folderPicks);\n\t\t}\n\t\tif (wordPicks) {\n\t\t\tpicks.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"terminal.integrated.searchLinks\",\n\t\t\t\t\t\"Workspace Search\",\n\t\t\t\t),\n\t\t\t});\n\t\t\tpicks.push(...wordPicks);\n\t\t}\n\n\t\t// Create and show quick pick\n\t\tconst pick = this._quickInputService.createQuickPick<\n\t\t\tIQuickPickItem | ITerminalLinkQuickPickItem\n\t\t>({ useSeparators: true });\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(pick);\n\t\tpick.items = picks;\n\t\tpick.placeholder = localize(\n\t\t\t\"terminal.integrated.openDetectedLink\",\n\t\t\t\"Select the link to open, type to filter all links\",\n\t\t);\n\t\tpick.sortByLabel = false;\n\t\tpick.show();\n\t\tif (pick.activeItems.length > 0) {\n\t\t\tthis._previewItem(pick.activeItems[0]);\n\t\t}\n\n\t\t// Show all results only when filtering begins, this is done so the quick pick will show up\n\t\t// ASAP with only the viewport entries.\n\t\tlet accepted = false;\n\t\tif (!usingAllLinks) {\n\t\t\tdisposables.add(\n\t\t\t\tEvent.once(pick.onDidChangeValue)(async () => {\n\t\t\t\t\tconst allLinks = await links.all;\n\t\t\t\t\tif (accepted) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst wordIgnoreLinks = [\n\t\t\t\t\t\t...(allLinks.fileLinks ?? []),\n\t\t\t\t\t\t...(allLinks.folderLinks ?? []),\n\t\t\t\t\t\t...(allLinks.webLinks ?? []),\n\t\t\t\t\t];\n\n\t\t\t\t\tconst wordPicks = allLinks.wordLinks\n\t\t\t\t\t\t? await this._generatePicks(\n\t\t\t\t\t\t\t\tallLinks.wordLinks,\n\t\t\t\t\t\t\t\twordIgnoreLinks,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst filePicks = allLinks.fileLinks\n\t\t\t\t\t\t? await this._generatePicks(allLinks.fileLinks)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst folderPicks = allLinks.folderLinks\n\t\t\t\t\t\t? await this._generatePicks(allLinks.folderLinks)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst webPicks = allLinks.webLinks\n\t\t\t\t\t\t? await this._generatePicks(allLinks.webLinks)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst picks: LinkQuickPickItem[] = [];\n\t\t\t\t\tif (webPicks) {\n\t\t\t\t\t\tpicks.push({\n\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"terminal.integrated.urlLinks\",\n\t\t\t\t\t\t\t\t\"Url\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpicks.push(...webPicks);\n\t\t\t\t\t}\n\t\t\t\t\tif (filePicks) {\n\t\t\t\t\t\tpicks.push({\n\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"terminal.integrated.localFileLinks\",\n\t\t\t\t\t\t\t\t\"File\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpicks.push(...filePicks);\n\t\t\t\t\t}\n\t\t\t\t\tif (folderPicks) {\n\t\t\t\t\t\tpicks.push({\n\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"terminal.integrated.localFolderLinks\",\n\t\t\t\t\t\t\t\t\"Folder\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpicks.push(...folderPicks);\n\t\t\t\t\t}\n\t\t\t\t\tif (wordPicks) {\n\t\t\t\t\t\tpicks.push({\n\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"terminal.integrated.searchLinks\",\n\t\t\t\t\t\t\t\t\"Workspace Search\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpicks.push(...wordPicks);\n\t\t\t\t\t}\n\t\t\t\t\tpick.items = picks;\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tdisposables.add(\n\t\t\tpick.onDidChangeActive(async () => {\n\t\t\t\tconst [item] = pick.activeItems;\n\t\t\t\tthis._previewItem(item);\n\t\t\t}),\n\t\t);\n\n\t\treturn new Promise((r) => {\n\t\t\tdisposables.add(\n\t\t\t\tpick.onDidHide(({ reason }) => {\n\t\t\t\t\t// Restore terminal scroll state\n\t\t\t\t\tif (this._terminalScrollStateSaved) {\n\t\t\t\t\t\tconst markTracker = this._instance?.xterm?.markTracker;\n\t\t\t\t\t\tif (markTracker) {\n\t\t\t\t\t\t\tmarkTracker.restoreScrollState();\n\t\t\t\t\t\t\tmarkTracker.clear();\n\t\t\t\t\t\t\tthis._terminalScrollStateSaved = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Restore view state upon cancellation if we changed it\n\t\t\t\t\t// but only when the picker was closed via explicit user\n\t\t\t\t\t// gesture and not e.g. when focus was lost because that\n\t\t\t\t\t// could mean the user clicked into the editor directly.\n\t\t\t\t\tif (reason === QuickInputHideReason.Gesture) {\n\t\t\t\t\t\tthis._editorViewState.restore();\n\t\t\t\t\t}\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\tif (pick.selectedItems.length === 0) {\n\t\t\t\t\t\tthis._accessibleViewService.showLastProvider(\n\t\t\t\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tr();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tEvent.once(pick.onDidAccept)(() => {\n\t\t\t\t\t// Restore terminal scroll state\n\t\t\t\t\tif (this._terminalScrollStateSaved) {\n\t\t\t\t\t\tconst markTracker = this._instance?.xterm?.markTracker;\n\t\t\t\t\t\tif (markTracker) {\n\t\t\t\t\t\t\tmarkTracker.restoreScrollState();\n\t\t\t\t\t\t\tmarkTracker.clear();\n\t\t\t\t\t\t\tthis._terminalScrollStateSaved = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\taccepted = true;\n\t\t\t\t\tconst event = new TerminalLinkQuickPickEvent(\n\t\t\t\t\t\tEventType.CLICK,\n\t\t\t\t\t);\n\t\t\t\t\tconst activeItem = pick.activeItems?.[0];\n\t\t\t\t\tif (activeItem && \"link\" in activeItem) {\n\t\t\t\t\t\tactiveItem.link.activate(event, activeItem.label);\n\t\t\t\t\t}\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\tr();\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * @param ignoreLinks Links with labels to not include in the picks.\n\t */\n\tprivate async _generatePicks(\n\t\tlinks: (ILink | TerminalLink)[],\n\t\tignoreLinks?: ILink[],\n\t): Promise<ITerminalLinkQuickPickItem[] | undefined> {\n\t\tif (!links) {\n\t\t\treturn;\n\t\t}\n\t\tconst linkTextKeys: Set<string> = new Set();\n\t\tconst linkUriKeys: Set<string> = new Set();\n\t\tconst picks: ITerminalLinkQuickPickItem[] = [];\n\t\tfor (const link of links) {\n\t\t\tlet label = link.text;\n\t\t\tif (\n\t\t\t\t!linkTextKeys.has(label) &&\n\t\t\t\t(!ignoreLinks || !ignoreLinks.some((e) => e.text === label))\n\t\t\t) {\n\t\t\t\tlinkTextKeys.add(label);\n\n\t\t\t\t// Add a consistently formatted resolved URI label to the description if applicable\n\t\t\t\tlet description: string | undefined;\n\t\t\t\tif (\"uri\" in link && link.uri) {\n\t\t\t\t\t// For local files and folders, mimic the presentation of go to file\n\t\t\t\t\tif (\n\t\t\t\t\t\tlink.type === TerminalBuiltinLinkType.LocalFile ||\n\t\t\t\t\t\tlink.type ===\n\t\t\t\t\t\t\tTerminalBuiltinLinkType.LocalFolderInWorkspace ||\n\t\t\t\t\t\tlink.type ===\n\t\t\t\t\t\t\tTerminalBuiltinLinkType.LocalFolderOutsideWorkspace\n\t\t\t\t\t) {\n\t\t\t\t\t\tlabel = basenameOrAuthority(link.uri);\n\t\t\t\t\t\tdescription = this._labelService.getUriLabel(\n\t\t\t\t\t\t\tdirname(link.uri),\n\t\t\t\t\t\t\t{ relative: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add line and column numbers to the label if applicable\n\t\t\t\t\tif (link.type === TerminalBuiltinLinkType.LocalFile) {\n\t\t\t\t\t\tif (link.parsedLink?.suffix?.row !== undefined) {\n\t\t\t\t\t\t\tlabel += `:${link.parsedLink.suffix.row}`;\n\t\t\t\t\t\t\tif (link.parsedLink?.suffix?.rowEnd !== undefined) {\n\t\t\t\t\t\t\t\tlabel += `-${link.parsedLink.suffix.rowEnd}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (link.parsedLink?.suffix?.col !== undefined) {\n\t\t\t\t\t\t\t\tlabel += `:${link.parsedLink.suffix.col}`;\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tlink.parsedLink?.suffix?.colEnd !==\n\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlabel += `-${link.parsedLink.suffix.colEnd}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Skip the link if it's a duplicate URI + line/col\n\t\t\t\t\tif (linkUriKeys.has(label + \"|\" + (description ?? \"\"))) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlinkUriKeys.add(label + \"|\" + (description ?? \"\"));\n\t\t\t\t}\n\n\t\t\t\tpicks.push({ label, link, description });\n\t\t\t}\n\t\t}\n\t\treturn picks.length > 0 ? picks : undefined;\n\t}\n\n\tprivate _previewItem(item: ITerminalLinkQuickPickItem | IQuickPickItem) {\n\t\tif (!item || !(\"link\" in item) || !item.link) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Any link can be previewed in the termninal\n\t\tconst link = item.link;\n\t\tthis._previewItemInTerminal(link);\n\n\t\tif (!(\"uri\" in link) || !link.uri) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (link.type !== TerminalBuiltinLinkType.LocalFile) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._previewItemInEditor(link);\n\t}\n\n\tprivate _previewItemInEditor(link: TerminalLink) {\n\t\tconst linkSuffix = link.parsedLink\n\t\t\t? link.parsedLink.suffix\n\t\t\t: getLinkSuffix(link.text);\n\t\tconst selection =\n\t\t\tlinkSuffix?.row === undefined\n\t\t\t\t? undefined\n\t\t\t\t: {\n\t\t\t\t\t\tstartLineNumber: linkSuffix.row ?? 1,\n\t\t\t\t\t\tstartColumn: linkSuffix.col ?? 1,\n\t\t\t\t\t\tendLineNumber: linkSuffix.rowEnd,\n\t\t\t\t\t\tendColumn: linkSuffix.colEnd,\n\t\t\t\t\t};\n\n\t\tthis._editorViewState.set();\n\t\tthis._editorSequencer.queue(async () => {\n\t\t\tawait this._editorViewState.openTransientEditor({\n\t\t\t\tresource: link.uri,\n\t\t\t\toptions: {\n\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\trevealIfOpened: true,\n\t\t\t\t\tignoreError: true,\n\t\t\t\t\tselection,\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _terminalScrollStateSaved = false;\n\tprivate _previewItemInTerminal(link: ILink) {\n\t\tconst xterm = this._instance?.xterm;\n\t\tif (!xterm) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._terminalScrollStateSaved) {\n\t\t\txterm.markTracker.saveScrollState();\n\t\t\tthis._terminalScrollStateSaved = true;\n\t\t}\n\t\txterm.markTracker.revealRange(link.range);\n\t}\n}\n\nexport interface ITerminalLinkQuickPickItem extends IQuickPickItem {\n\tlink: ILink | TerminalLink;\n}\n\ntype LinkQuickPickItem = ITerminalLinkQuickPickItem | QuickPickItem;\n"],
  "mappings": "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",
  "names": ["wordPicks", "filePicks", "folderPicks", "webPicks", "picks"]
}
