{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/links/browser/terminalLinkQuickpick.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventType } from '../../../../../base/browser/dom.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { localize } from '../../../../../nls.js';\nimport { QuickPickItem, IQuickInputService, IQuickPickItem, QuickInputHideReason } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { IDetectedLinks } from './terminalLinkManager.js';\nimport { TerminalLinkQuickPickEvent, type IDetachedTerminalInstance, type ITerminalInstance } from '../../../terminal/browser/terminal.js';\nimport type { ILink } from '@xterm/xterm';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport type { TerminalLink } from './terminalLink.js';\nimport { Sequencer, timeout } from '../../../../../base/common/async.js';\nimport { PickerEditorState } from '../../../../browser/quickaccess.js';\nimport { getLinkSuffix } from './terminalLinkParsing.js';\nimport { TerminalBuiltinLinkType } from './links.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { basenameOrAuthority, dirname } from '../../../../../base/common/resources.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { AccessibleViewProviderId, IAccessibleViewService } from '../../../../../platform/accessibility/browser/accessibleView.js';\n\nexport class TerminalLinkQuickpick extends DisposableStore {\n\n\tprivate readonly _editorSequencer = new Sequencer();\n\tprivate readonly _editorViewState: PickerEditorState;\n\n\tprivate _instance: ITerminalInstance | IDetachedTerminalInstance | undefined;\n\n\tprivate readonly _onDidRequestMoreLinks = this.add(new Emitter<void>());\n\treadonly onDidRequestMoreLinks = this._onDidRequestMoreLinks.event;\n\n\tconstructor(\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@IAccessibleViewService private readonly _accessibleViewService: IAccessibleViewService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._editorViewState = this.add(instantiationService.createInstance(PickerEditorState));\n\t}\n\n\tasync show(instance: ITerminalInstance | IDetachedTerminalInstance, links: { viewport: IDetectedLinks; all: Promise<IDetectedLinks> }): Promise<void> {\n\t\tthis._instance = instance;\n\n\t\t// Allow all links a small amount of time to elapse to finish, if this is not done in this\n\t\t// time they will be loaded upon the first filter.\n\t\tconst result = await Promise.race([links.all, timeout(500)]);\n\t\tconst usingAllLinks = typeof result === 'object';\n\t\tconst resolvedLinks = usingAllLinks ? result : links.viewport;\n\n\t\t// Get raw link picks\n\t\tconst wordPicks = resolvedLinks.wordLinks ? await this._generatePicks(resolvedLinks.wordLinks) : undefined;\n\t\tconst filePicks = resolvedLinks.fileLinks ? await this._generatePicks(resolvedLinks.fileLinks) : undefined;\n\t\tconst folderPicks = resolvedLinks.folderLinks ? await this._generatePicks(resolvedLinks.folderLinks) : undefined;\n\t\tconst webPicks = resolvedLinks.webLinks ? await this._generatePicks(resolvedLinks.webLinks) : undefined;\n\n\t\tconst picks: LinkQuickPickItem[] = [];\n\t\tif (webPicks) {\n\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.urlLinks', \"Url\") });\n\t\t\tpicks.push(...webPicks);\n\t\t}\n\t\tif (filePicks) {\n\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.localFileLinks', \"File\") });\n\t\t\tpicks.push(...filePicks);\n\t\t}\n\t\tif (folderPicks) {\n\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.localFolderLinks', \"Folder\") });\n\t\t\tpicks.push(...folderPicks);\n\t\t}\n\t\tif (wordPicks) {\n\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.searchLinks', \"Workspace Search\") });\n\t\t\tpicks.push(...wordPicks);\n\t\t}\n\n\t\t// Create and show quick pick\n\t\tconst pick = this._quickInputService.createQuickPick<IQuickPickItem | ITerminalLinkQuickPickItem>({ useSeparators: true });\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(pick);\n\t\tpick.items = picks;\n\t\tpick.placeholder = localize('terminal.integrated.openDetectedLink', \"Select the link to open, type to filter all links\");\n\t\tpick.sortByLabel = false;\n\t\tpick.show();\n\t\tif (pick.activeItems.length > 0) {\n\t\t\tthis._previewItem(pick.activeItems[0]);\n\t\t}\n\n\t\t// Show all results only when filtering begins, this is done so the quick pick will show up\n\t\t// ASAP with only the viewport entries.\n\t\tlet accepted = false;\n\t\tif (!usingAllLinks) {\n\t\t\tdisposables.add(Event.once(pick.onDidChangeValue)(async () => {\n\t\t\t\tconst allLinks = await links.all;\n\t\t\t\tif (accepted) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst wordIgnoreLinks = [...(allLinks.fileLinks ?? []), ...(allLinks.folderLinks ?? []), ...(allLinks.webLinks ?? [])];\n\n\t\t\t\tconst wordPicks = allLinks.wordLinks ? await this._generatePicks(allLinks.wordLinks, wordIgnoreLinks) : undefined;\n\t\t\t\tconst filePicks = allLinks.fileLinks ? await this._generatePicks(allLinks.fileLinks) : undefined;\n\t\t\t\tconst folderPicks = allLinks.folderLinks ? await this._generatePicks(allLinks.folderLinks) : undefined;\n\t\t\t\tconst webPicks = allLinks.webLinks ? await this._generatePicks(allLinks.webLinks) : undefined;\n\t\t\t\tconst picks: LinkQuickPickItem[] = [];\n\t\t\t\tif (webPicks) {\n\t\t\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.urlLinks', \"Url\") });\n\t\t\t\t\tpicks.push(...webPicks);\n\t\t\t\t}\n\t\t\t\tif (filePicks) {\n\t\t\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.localFileLinks', \"File\") });\n\t\t\t\t\tpicks.push(...filePicks);\n\t\t\t\t}\n\t\t\t\tif (folderPicks) {\n\t\t\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.localFolderLinks', \"Folder\") });\n\t\t\t\t\tpicks.push(...folderPicks);\n\t\t\t\t}\n\t\t\t\tif (wordPicks) {\n\t\t\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.searchLinks', \"Workspace Search\") });\n\t\t\t\t\tpicks.push(...wordPicks);\n\t\t\t\t}\n\t\t\t\tpick.items = picks;\n\t\t\t}));\n\t\t}\n\n\t\tdisposables.add(pick.onDidChangeActive(async () => {\n\t\t\tconst [item] = pick.activeItems;\n\t\t\tthis._previewItem(item);\n\t\t}));\n\n\t\treturn new Promise(r => {\n\t\t\tdisposables.add(pick.onDidHide(({ reason }) => {\n\n\t\t\t\t// Restore terminal scroll state\n\t\t\t\tif (this._terminalScrollStateSaved) {\n\t\t\t\t\tconst markTracker = this._instance?.xterm?.markTracker;\n\t\t\t\t\tif (markTracker) {\n\t\t\t\t\t\tmarkTracker.restoreScrollState();\n\t\t\t\t\t\tmarkTracker.clear();\n\t\t\t\t\t\tthis._terminalScrollStateSaved = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Restore view state upon cancellation if we changed it\n\t\t\t\t// but only when the picker was closed via explicit user\n\t\t\t\t// gesture and not e.g. when focus was lost because that\n\t\t\t\t// could mean the user clicked into the editor directly.\n\t\t\t\tif (reason === QuickInputHideReason.Gesture) {\n\t\t\t\t\tthis._editorViewState.restore();\n\t\t\t\t}\n\t\t\t\tdisposables.dispose();\n\t\t\t\tif (pick.selectedItems.length === 0) {\n\t\t\t\t\tthis._accessibleViewService.showLastProvider(AccessibleViewProviderId.Terminal);\n\t\t\t\t}\n\t\t\t\tr();\n\t\t\t}));\n\t\t\tdisposables.add(Event.once(pick.onDidAccept)(() => {\n\t\t\t\t// Restore terminal scroll state\n\t\t\t\tif (this._terminalScrollStateSaved) {\n\t\t\t\t\tconst markTracker = this._instance?.xterm?.markTracker;\n\t\t\t\t\tif (markTracker) {\n\t\t\t\t\t\tmarkTracker.restoreScrollState();\n\t\t\t\t\t\tmarkTracker.clear();\n\t\t\t\t\t\tthis._terminalScrollStateSaved = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\taccepted = true;\n\t\t\t\tconst event = new TerminalLinkQuickPickEvent(EventType.CLICK);\n\t\t\t\tconst activeItem = pick.activeItems?.[0];\n\t\t\t\tif (activeItem && 'link' in activeItem) {\n\t\t\t\t\tactiveItem.link.activate(event, activeItem.label);\n\t\t\t\t}\n\t\t\t\tdisposables.dispose();\n\t\t\t\tr();\n\t\t\t}));\n\t\t});\n\t}\n\n\t/**\n\t * @param ignoreLinks Links with labels to not include in the picks.\n\t */\n\tprivate async _generatePicks(links: (ILink | TerminalLink)[], ignoreLinks?: ILink[]): Promise<ITerminalLinkQuickPickItem[] | undefined> {\n\t\tif (!links) {\n\t\t\treturn;\n\t\t}\n\t\tconst linkTextKeys: Set<string> = new Set();\n\t\tconst linkUriKeys: Set<string> = new Set();\n\t\tconst picks: ITerminalLinkQuickPickItem[] = [];\n\t\tfor (const link of links) {\n\t\t\tlet label = link.text;\n\t\t\tif (!linkTextKeys.has(label) && (!ignoreLinks || !ignoreLinks.some(e => e.text === label))) {\n\t\t\t\tlinkTextKeys.add(label);\n\n\t\t\t\t// Add a consistently formatted resolved URI label to the description if applicable\n\t\t\t\tlet description: string | undefined;\n\t\t\t\tif ('uri' in link && link.uri) {\n\t\t\t\t\t// For local files and folders, mimic the presentation of go to file\n\t\t\t\t\tif (\n\t\t\t\t\t\tlink.type === TerminalBuiltinLinkType.LocalFile ||\n\t\t\t\t\t\tlink.type === TerminalBuiltinLinkType.LocalFolderInWorkspace ||\n\t\t\t\t\t\tlink.type === TerminalBuiltinLinkType.LocalFolderOutsideWorkspace\n\t\t\t\t\t) {\n\t\t\t\t\t\tlabel = basenameOrAuthority(link.uri);\n\t\t\t\t\t\tdescription = this._labelService.getUriLabel(dirname(link.uri), { relative: true });\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add line and column numbers to the label if applicable\n\t\t\t\t\tif (link.type === TerminalBuiltinLinkType.LocalFile) {\n\t\t\t\t\t\tif (link.parsedLink?.suffix?.row !== undefined) {\n\t\t\t\t\t\t\tlabel += `:${link.parsedLink.suffix.row}`;\n\t\t\t\t\t\t\tif (link.parsedLink?.suffix?.rowEnd !== undefined) {\n\t\t\t\t\t\t\t\tlabel += `-${link.parsedLink.suffix.rowEnd}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (link.parsedLink?.suffix?.col !== undefined) {\n\t\t\t\t\t\t\t\tlabel += `:${link.parsedLink.suffix.col}`;\n\t\t\t\t\t\t\t\tif (link.parsedLink?.suffix?.colEnd !== undefined) {\n\t\t\t\t\t\t\t\t\tlabel += `-${link.parsedLink.suffix.colEnd}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Skip the link if it's a duplicate URI + line/col\n\t\t\t\t\tif (linkUriKeys.has(label + '|' + (description ?? ''))) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlinkUriKeys.add(label + '|' + (description ?? ''));\n\t\t\t\t}\n\n\t\t\t\tpicks.push({ label, link, description });\n\t\t\t}\n\t\t}\n\t\treturn picks.length > 0 ? picks : undefined;\n\t}\n\n\tprivate _previewItem(item: ITerminalLinkQuickPickItem | IQuickPickItem) {\n\t\tif (!item || !('link' in item) || !item.link) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Any link can be previewed in the termninal\n\t\tconst link = item.link;\n\t\tthis._previewItemInTerminal(link);\n\n\t\tif (!('uri' in link) || !link.uri) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (link.type !== TerminalBuiltinLinkType.LocalFile) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._previewItemInEditor(link);\n\t}\n\n\tprivate _previewItemInEditor(link: TerminalLink) {\n\t\tconst linkSuffix = link.parsedLink ? link.parsedLink.suffix : getLinkSuffix(link.text);\n\t\tconst selection = linkSuffix?.row === undefined ? undefined : {\n\t\t\tstartLineNumber: linkSuffix.row ?? 1,\n\t\t\tstartColumn: linkSuffix.col ?? 1,\n\t\t\tendLineNumber: linkSuffix.rowEnd,\n\t\t\tendColumn: linkSuffix.colEnd\n\t\t};\n\n\t\tthis._editorViewState.set();\n\t\tthis._editorSequencer.queue(async () => {\n\t\t\tawait this._editorViewState.openTransientEditor({\n\t\t\t\tresource: link.uri,\n\t\t\t\toptions: { preserveFocus: true, revealIfOpened: true, ignoreError: true, selection, }\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _terminalScrollStateSaved: boolean = false;\n\tprivate _previewItemInTerminal(link: ILink) {\n\t\tconst xterm = this._instance?.xterm;\n\t\tif (!xterm) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._terminalScrollStateSaved) {\n\t\t\txterm.markTracker.saveScrollState();\n\t\t\tthis._terminalScrollStateSaved = true;\n\t\t}\n\t\txterm.markTracker.revealRange(link.range);\n\t}\n}\n\nexport interface ITerminalLinkQuickPickItem extends IQuickPickItem {\n\tlink: ILink | TerminalLink;\n}\n\ntype LinkQuickPickItem = ITerminalLinkQuickPickItem | QuickPickItem;\n"],
  "mappings": "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",
  "names": ["wordPicks", "filePicks", "folderPicks", "webPicks", "picks"]
}
