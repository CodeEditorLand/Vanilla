var T=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var R=(L,s,i,t)=>{for(var n=t>1?void 0:t?M(s,i):s,r=L.length-1,l;r>=0;r--)(l=L[r])&&(n=(t?l(s,i,n):l(n))||n);return t&&n&&T(s,i,n),n},g=(L,s)=>(i,t)=>s(i,t,L);import{OS as P}from"../../../../../base/common/platform.js";import{URI as W}from"../../../../../base/common/uri.js";import{TerminalCapability as w}from"../../../../../platform/terminal/common/capabilities/capabilities.js";import{ITerminalLogService as B}from"../../../../../platform/terminal/common/terminal.js";import{IUriIdentityService as A}from"../../../../../platform/uriIdentity/common/uriIdentity.js";import{IWorkspaceContextService as D}from"../../../../../platform/workspace/common/workspace.js";import{TerminalBuiltinLinkType as I}from"./links.js";import{convertLinkRangeToBuffer as C,getXtermLineContent as U,getXtermRangesByAttr as E,osPathModule as $,updateLinkWithRelativeCwd as F}from"./terminalLinkHelpers.js";import{detectLinks as G}from"./terminalLinkParsing.js";var N=(t=>(t[t.MaxLineLength=2e3]="MaxLineLength",t[t.MaxResolvedLinksInLine=10]="MaxResolvedLinksInLine",t[t.MaxResolvedLinkLength=1024]="MaxResolvedLinkLength",t))(N||{});const O=[/^ *File (?<link>"(?<path>.+)"(, line (?<line>\d+))?)/,/^ +FILE +(?<link>(?<path>.+)(?::(?<line>\d+)(?::(?<col>\d+))?)?)/,/^(?<link>(?<path>.+)\((?<line>\d+)(?:, ?(?<col>\d+))?\)) ?:/,/^(?<link>(?<path>.+):(?<line>\d+)(?::(?<col>\d+))?) ?:/,/^(?<link>(?<path>.+))>/,/^ *(?<link>(?<path>.+))/];let v=class{constructor(s,i,t,n,r,l,u){this.xterm=s;this._capabilities=i;this._processManager=t;this._linkResolver=n;this._logService=r;this._uriIdentityService=l;this._workspaceContextService=u}static id="local";maxLinkLength=500;async detect(s,i,t){const n=[],r=U(this.xterm.buffer.active,i,t,this.xterm.cols);if(r===""||r.length>2e3)return[];let l=-1,u=0;const S=this._processManager.os||P,_=G(r,S);this._logService.trace("terminalLocalLinkDetector#detect text",r),this._logService.trace("terminalLocalLinkDetector#detect parsedLinks",_);for(const e of _){if(e.path.text.length>1024)continue;const o=C(s,this.xterm.cols,{startColumn:(e.prefix?.index??e.path.index)+1,startLineNumber:1,endColumn:e.path.index+e.path.text.length+(e.suffix?.suffix.text.length??0)+1,endLineNumber:1},i),a=[],d=$(S),c=e.path.text.startsWith("file://");if(d.isAbsolute(e.path.text)||e.path.text.startsWith("~")||c)a.push(e.path.text);else{if(this._capabilities.has(w.CommandDetection)){const h=F(this._capabilities,o.start.y,e.path.text,d,this._logService);h&&a.push(...h)}a.length===0&&(a.push(e.path.text),e.path.text.match(/^(\.\.[/\\])+/)&&a.push(e.path.text.replace(/^(\.\.[/\\])+/,"")))}const p=/[[\]"'.]$/,m=new Map,k=[];for(const h of a){let y=h,x=y.replace(p,""),b=0;for(;x!==y;)e.suffix||b++,k.push(x),m.set(x,b),y=x,x=x.replace(p,"")}a.push(...k),this._logService.trace("terminalLocalLinkDetector#detect linkCandidates",a);const f=await this._validateAndGetLink(void 0,o,a,m);if(f&&(f.parsedLink=e,f.text=r.substring(e.prefix?.index??e.path.index,e.suffix?e.suffix.suffix.index+e.suffix.suffix.text.length:e.path.index+e.path.text.length),this._logService.trace("terminalLocalLinkDetector#detect verified link",f),n.push(f)),++u>=10)break}if(n.length===0)for(const e of O){const a=r.match(e)?.groups;if(!a)continue;const d=a?.link,c=a?.path,p=a?.line,m=a?.col;if(!d||!c||d.length>1024)continue;l=r.indexOf(d);const k=C(s,this.xterm.cols,{startColumn:l+1,startLineNumber:1,endColumn:l+d.length+1,endLineNumber:1},i),f=p?`:${p}${m?`:${m}`:""}`:"",h=await this._validateAndGetLink(`${c}${f}`,k,[c]);h&&n.push(h);break}if(n.length===0){const e=E(this.xterm.buffer.active,i,t,this.xterm.cols);for(const o of e){let a="";for(let c=o.start.y;c<=o.end.y;c++){const p=this.xterm.buffer.active.getLine(c);if(!p)break;const m=c===o.start.y?o.start.x:0,k=c===o.end.y?o.end.x:this.xterm.cols-1;a+=p.translateToString(!1,m,k)}o.start.x++,o.start.y++,o.end.y++;const d=await this._validateAndGetLink(a,o,[a]);if(d&&n.push(d),++u>=10)break}}return n}_isDirectoryInsideWorkspace(s){const i=this._workspaceContextService.getWorkspace().folders;for(let t=0;t<i.length;t++)if(this._uriIdentityService.extUri.isEqualOrParent(s,i[t].uri))return!0;return!1}async _validateLinkCandidates(s){for(const i of s){let t;i.startsWith("file://")&&(t=W.parse(i));const n=await this._linkResolver.resolveLink(this._processManager,i,t);if(n)return n}}async _validateAndGetLink(s,i,t,n){const r=await this._validateLinkCandidates(t);if(r){let l;r.isDirectory?this._isDirectoryInsideWorkspace(r.uri)?l=I.LocalFolderInWorkspace:l=I.LocalFolderOutsideWorkspace:l=I.LocalFile;const u=n?.get(r.link);return u&&(i.end.x-=u,i.end.x<0&&(i.end.y--,i.end.x+=this.xterm.cols)),{text:s??r.link,uri:r.uri,bufferRange:i,type:l}}}};v=R([g(4,B),g(5,A),g(6,D)],v);export{v as TerminalLocalLinkDetector};
