{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/links/test/browser/terminalLocalLinkDetector.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, OperatingSystem } from '../../../../../../base/common/platform.js';\nimport { format } from '../../../../../../base/common/strings.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { TestInstantiationService } from '../../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { TerminalBuiltinLinkType } from '../../browser/links.js';\nimport { TerminalLocalLinkDetector } from '../../browser/terminalLocalLinkDetector.js';\nimport { TerminalCapabilityStore } from '../../../../../../platform/terminal/common/capabilities/terminalCapabilityStore.js';\nimport { assertLinkHelper } from './linkTestUtils.js';\nimport type { Terminal } from '@xterm/xterm';\nimport { timeout } from '../../../../../../base/common/async.js';\nimport { strictEqual } from 'assert';\nimport { TerminalLinkResolver } from '../../browser/terminalLinkResolver.js';\nimport { IFileService } from '../../../../../../platform/files/common/files.js';\nimport { createFileStat } from '../../../../../test/common/workbenchTestServices.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport { NullLogService } from '../../../../../../platform/log/common/log.js';\nimport { ITerminalLogService } from '../../../../../../platform/terminal/common/terminal.js';\nimport { importAMDNodeModule } from '../../../../../../amdX.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../../base/test/common/utils.js';\n\nconst unixLinks: (string | { link: string; resource: URI })[] = [\n\t// Absolute\n\t'/foo',\n\t'/foo/bar',\n\t'/foo/[bar]',\n\t'/foo/[bar].baz',\n\t'/foo/[bar]/baz',\n\t'/foo/bar+more',\n\t// URI file://\n\t{ link: 'file:///foo', resource: URI.file('/foo') },\n\t{ link: 'file:///foo/bar', resource: URI.file('/foo/bar') },\n\t{ link: 'file:///foo/bar%20baz', resource: URI.file('/foo/bar baz') },\n\t// User home\n\t{ link: '~/foo', resource: URI.file('/home/foo') },\n\t// Relative\n\t{ link: './foo', resource: URI.file('/parent/cwd/foo') },\n\t{ link: './$foo', resource: URI.file('/parent/cwd/$foo') },\n\t{ link: '../foo', resource: URI.file('/parent/foo') },\n\t{ link: 'foo/bar', resource: URI.file('/parent/cwd/foo/bar') },\n\t{ link: 'foo/bar+more', resource: URI.file('/parent/cwd/foo/bar+more') },\n];\n\nconst windowsLinks: (string | { link: string; resource: URI })[] = [\n\t// Absolute\n\t'c:\\\\foo',\n\t{ link: '\\\\\\\\?\\\\C:\\\\foo', resource: URI.file('C:\\\\foo') },\n\t'c:/foo',\n\t'c:/foo/bar',\n\t'c:\\\\foo\\\\bar',\n\t'c:\\\\foo\\\\bar+more',\n\t'c:\\\\foo/bar\\\\baz',\n\t// URI file://\n\t{ link: 'file:///c:/foo', resource: URI.file('c:\\\\foo') },\n\t{ link: 'file:///c:/foo/bar', resource: URI.file('c:\\\\foo\\\\bar') },\n\t{ link: 'file:///c:/foo/bar%20baz', resource: URI.file('c:\\\\foo\\\\bar baz') },\n\t// User home\n\t{ link: '~\\\\foo', resource: URI.file('C:\\\\Home\\\\foo') },\n\t{ link: '~/foo', resource: URI.file('C:\\\\Home\\\\foo') },\n\t// Relative\n\t{ link: '.\\\\foo', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo') },\n\t{ link: './foo', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo') },\n\t{ link: './$foo', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\$foo') },\n\t{ link: '..\\\\foo', resource: URI.file('C:\\\\Parent\\\\foo') },\n\t{ link: 'foo/bar', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar') },\n\t{ link: 'foo/bar', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar') },\n\t{ link: 'foo/[bar]', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar]') },\n\t{ link: 'foo/[bar].baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar].baz') },\n\t{ link: 'foo/[bar]/baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar]/baz') },\n\t{ link: 'foo\\\\bar', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar') },\n\t{ link: 'foo\\\\[bar].baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar].baz') },\n\t{ link: 'foo\\\\[bar]\\\\baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar]\\\\baz') },\n\t{ link: 'foo\\\\bar+more', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar+more') },\n];\n\ninterface LinkFormatInfo {\n\turlFormat: string;\n\t/**\n\t * The start offset to the buffer range that is not in the actual link (but is in the matched\n\t * area.\n\t */\n\tlinkCellStartOffset?: number;\n\t/**\n\t * The end offset to the buffer range that is not in the actual link (but is in the matched\n\t * area.\n\t */\n\tlinkCellEndOffset?: number;\n\tline?: string;\n\tcolumn?: string;\n}\n\nconst supportedLinkFormats: LinkFormatInfo[] = [\n\t{ urlFormat: '{0}' },\n\t{ urlFormat: '{0}\" on line {1}', line: '5' },\n\t{ urlFormat: '{0}\" on line {1}, column {2}', line: '5', column: '3' },\n\t{ urlFormat: '{0}\":line {1}', line: '5' },\n\t{ urlFormat: '{0}\":line {1}, column {2}', line: '5', column: '3' },\n\t{ urlFormat: '{0}\": line {1}', line: '5' },\n\t{ urlFormat: '{0}\": line {1}, col {2}', line: '5', column: '3' },\n\t{ urlFormat: '{0}({1})', line: '5' },\n\t{ urlFormat: '{0} ({1})', line: '5' },\n\t{ urlFormat: '{0}({1},{2})', line: '5', column: '3' },\n\t{ urlFormat: '{0} ({1},{2})', line: '5', column: '3' },\n\t{ urlFormat: '{0}: ({1},{2})', line: '5', column: '3' },\n\t{ urlFormat: '{0}({1}, {2})', line: '5', column: '3' },\n\t{ urlFormat: '{0} ({1}, {2})', line: '5', column: '3' },\n\t{ urlFormat: '{0}: ({1}, {2})', line: '5', column: '3' },\n\t{ urlFormat: '{0}:{1}', line: '5' },\n\t{ urlFormat: '{0}:{1}:{2}', line: '5', column: '3' },\n\t{ urlFormat: '{0} {1}:{2}', line: '5', column: '3' },\n\t{ urlFormat: '{0}[{1}]', line: '5' },\n\t{ urlFormat: '{0} [{1}]', line: '5' },\n\t{ urlFormat: '{0}[{1},{2}]', line: '5', column: '3' },\n\t{ urlFormat: '{0} [{1},{2}]', line: '5', column: '3' },\n\t{ urlFormat: '{0}: [{1},{2}]', line: '5', column: '3' },\n\t{ urlFormat: '{0}[{1}, {2}]', line: '5', column: '3' },\n\t{ urlFormat: '{0} [{1}, {2}]', line: '5', column: '3' },\n\t{ urlFormat: '{0}: [{1}, {2}]', line: '5', column: '3' },\n\t{ urlFormat: '{0}\",{1}', line: '5' },\n\t{ urlFormat: '{0}\\',{1}', line: '5' },\n\t{ urlFormat: '{0}#{1}', line: '5' },\n\t{ urlFormat: '{0}#{1}:{2}', line: '5', column: '5' }\n];\n\nconst windowsFallbackLinks: (string | { link: string; resource: URI })[] = [\n\t'C:\\\\foo bar',\n\t'C:\\\\foo bar\\\\baz',\n\t'C:\\\\foo\\\\bar baz',\n\t'C:\\\\foo/bar baz'\n];\n\nconst supportedFallbackLinkFormats: LinkFormatInfo[] = [\n\t// Python style error: File \"<path>\", line <line>\n\t{ urlFormat: 'File \"{0}\"', linkCellStartOffset: 5 },\n\t{ urlFormat: 'File \"{0}\", line {1}', line: '5', linkCellStartOffset: 5 },\n\t// Unknown tool #200166: FILE  <path>:<line>:<col>\n\t{ urlFormat: ' FILE  {0}', linkCellStartOffset: 7 },\n\t{ urlFormat: ' FILE  {0}:{1}', line: '5', linkCellStartOffset: 7 },\n\t{ urlFormat: ' FILE  {0}:{1}:{2}', line: '5', column: '3', linkCellStartOffset: 7 },\n\t// Some C++ compile error formats\n\t{ urlFormat: '{0}({1}) :', line: '5', linkCellEndOffset: -2 },\n\t{ urlFormat: '{0}({1},{2}) :', line: '5', column: '3', linkCellEndOffset: -2 },\n\t{ urlFormat: '{0}({1}, {2}) :', line: '5', column: '3', linkCellEndOffset: -2 },\n\t{ urlFormat: '{0}({1}):', line: '5', linkCellEndOffset: -1 },\n\t{ urlFormat: '{0}({1},{2}):', line: '5', column: '3', linkCellEndOffset: -1 },\n\t{ urlFormat: '{0}({1}, {2}):', line: '5', column: '3', linkCellEndOffset: -1 },\n\t{ urlFormat: '{0}:{1} :', line: '5', linkCellEndOffset: -2 },\n\t{ urlFormat: '{0}:{1}:{2} :', line: '5', column: '3', linkCellEndOffset: -2 },\n\t{ urlFormat: '{0}:{1}:', line: '5', linkCellEndOffset: -1 },\n\t{ urlFormat: '{0}:{1}:{2}:', line: '5', column: '3', linkCellEndOffset: -1 },\n\t// Cmd prompt\n\t{ urlFormat: '{0}>', linkCellEndOffset: -1 },\n\t// The whole line is the path\n\t{ urlFormat: '{0}' },\n];\n\nsuite('Workbench - TerminalLocalLinkDetector', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet instantiationService: TestInstantiationService;\n\tlet configurationService: TestConfigurationService;\n\tlet detector: TerminalLocalLinkDetector;\n\tlet resolver: TerminalLinkResolver;\n\tlet xterm: Terminal;\n\tlet validResources: URI[];\n\n\tasync function assertLinks(\n\t\ttype: TerminalBuiltinLinkType,\n\t\ttext: string,\n\t\texpected: ({ uri: URI; range: [number, number][] })[]\n\t) {\n\t\tlet to;\n\t\tconst race = await Promise.race([\n\t\t\tassertLinkHelper(text, expected, detector, type).then(() => 'success'),\n\t\t\t(to = timeout(2)).then(() => 'timeout')\n\t\t]);\n\t\tstrictEqual(race, 'success', `Awaiting link assertion for \"${text}\" timed out`);\n\t\tto.cancel();\n\t}\n\n\tasync function assertLinksWithWrapped(link: string, resource?: URI) {\n\t\tconst uri = resource ?? URI.file(link);\n\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, link, [{ uri, range: [[1, 1], [link.length, 1]] }]);\n\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, ` ${link} `, [{ uri, range: [[2, 1], [link.length + 1, 1]] }]);\n\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, `(${link})`, [{ uri, range: [[2, 1], [link.length + 1, 1]] }]);\n\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, `[${link}]`, [{ uri, range: [[2, 1], [link.length + 1, 1]] }]);\n\t}\n\n\tsetup(async () => {\n\t\tinstantiationService = store.add(new TestInstantiationService());\n\t\tconfigurationService = new TestConfigurationService();\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tinstantiationService.stub(IFileService, {\n\t\t\tasync stat(resource) {\n\t\t\t\tif (!validResources.map(e => e.path).includes(resource.path)) {\n\t\t\t\t\tthrow new Error('Doesn\\'t exist');\n\t\t\t\t}\n\t\t\t\treturn createFileStat(resource);\n\t\t\t}\n\t\t});\n\t\tinstantiationService.stub(ITerminalLogService, new NullLogService());\n\t\tresolver = instantiationService.createInstance(TerminalLinkResolver);\n\t\tvalidResources = [];\n\n\t\tconst TerminalCtor = (await importAMDNodeModule<typeof import('@xterm/xterm')>('@xterm/xterm', 'lib/xterm.js')).Terminal;\n\t\txterm = new TerminalCtor({ allowProposedApi: true, cols: 80, rows: 30 });\n\t});\n\n\tsuite('platform independent', () => {\n\t\tsetup(() => {\n\t\t\tdetector = instantiationService.createInstance(TerminalLocalLinkDetector, xterm, store.add(new TerminalCapabilityStore()), {\n\t\t\t\tinitialCwd: '/parent/cwd',\n\t\t\t\tos: OperatingSystem.Linux,\n\t\t\t\tremoteAuthority: undefined,\n\t\t\t\tuserHome: '/home',\n\t\t\t\tbackend: undefined\n\t\t\t}, resolver);\n\t\t});\n\n\t\ttest('should support multiple link results', async () => {\n\t\t\tvalidResources = [\n\t\t\t\tURI.file('/parent/cwd/foo'),\n\t\t\t\tURI.file('/parent/cwd/bar')\n\t\t\t];\n\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, './foo ./bar', [\n\t\t\t\t{ range: [[1, 1], [5, 1]], uri: URI.file('/parent/cwd/foo') },\n\t\t\t\t{ range: [[7, 1], [11, 1]], uri: URI.file('/parent/cwd/bar') }\n\t\t\t]);\n\t\t});\n\n\t\ttest('should support trimming extra quotes', async () => {\n\t\t\tvalidResources = [URI.file('/parent/cwd/foo')];\n\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, '\"foo\"\" on line 5', [\n\t\t\t\t{ range: [[1, 1], [16, 1]], uri: URI.file('/parent/cwd/foo') }\n\t\t\t]);\n\t\t});\n\n\t\ttest('should support trimming extra square brackets', async () => {\n\t\t\tvalidResources = [URI.file('/parent/cwd/foo')];\n\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, '\"foo]\" on line 5', [\n\t\t\t\t{ range: [[1, 1], [16, 1]], uri: URI.file('/parent/cwd/foo') }\n\t\t\t]);\n\t\t});\n\t});\n\n\tsuite('macOS/Linux', () => {\n\t\tsetup(() => {\n\t\t\tdetector = instantiationService.createInstance(TerminalLocalLinkDetector, xterm, store.add(new TerminalCapabilityStore()), {\n\t\t\t\tinitialCwd: '/parent/cwd',\n\t\t\t\tos: OperatingSystem.Linux,\n\t\t\t\tremoteAuthority: undefined,\n\t\t\t\tuserHome: '/home',\n\t\t\t\tbackend: undefined\n\t\t\t}, resolver);\n\t\t});\n\n\t\tfor (const l of unixLinks) {\n\t\t\tconst baseLink = typeof l === 'string' ? l : l.link;\n\t\t\tconst resource = typeof l === 'string' ? URI.file(l) : l.resource;\n\t\t\tsuite(`Link: ${baseLink}`, () => {\n\t\t\t\tfor (let i = 0; i < supportedLinkFormats.length; i++) {\n\t\t\t\t\tconst linkFormat = supportedLinkFormats[i];\n\t\t\t\t\tconst formattedLink = format(linkFormat.urlFormat, baseLink, linkFormat.line, linkFormat.column);\n\t\t\t\t\ttest(`should detect in \"${formattedLink}\"`, async () => {\n\t\t\t\t\t\tvalidResources = [resource];\n\t\t\t\t\t\tawait assertLinksWithWrapped(formattedLink, resource);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\ttest('Git diff links', async () => {\n\t\t\tvalidResources = [URI.file('/parent/cwd/foo/bar')];\n\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, `diff --git a/foo/bar b/foo/bar`, [\n\t\t\t\t{ uri: validResources[0], range: [[14, 1], [20, 1]] },\n\t\t\t\t{ uri: validResources[0], range: [[24, 1], [30, 1]] }\n\t\t\t]);\n\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, `--- a/foo/bar`, [{ uri: validResources[0], range: [[7, 1], [13, 1]] }]);\n\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, `+++ b/foo/bar`, [{ uri: validResources[0], range: [[7, 1], [13, 1]] }]);\n\t\t});\n\t});\n\n\t// Only test these when on Windows because there is special behavior around replacing separators\n\t// in URI that cannot be changed\n\tif (isWindows) {\n\t\tsuite('Windows', () => {\n\t\t\tconst wslUnixToWindowsPathMap: Map<string, string> = new Map();\n\n\t\t\tsetup(() => {\n\t\t\t\tdetector = instantiationService.createInstance(TerminalLocalLinkDetector, xterm, store.add(new TerminalCapabilityStore()), {\n\t\t\t\t\tinitialCwd: 'C:\\\\Parent\\\\Cwd',\n\t\t\t\t\tos: OperatingSystem.Windows,\n\t\t\t\t\tremoteAuthority: undefined,\n\t\t\t\t\tuserHome: 'C:\\\\Home',\n\t\t\t\t\tbackend: {\n\t\t\t\t\t\tasync getWslPath(original: string, direction: 'unix-to-win' | 'win-to-unix') {\n\t\t\t\t\t\t\tif (direction === 'unix-to-win') {\n\t\t\t\t\t\t\t\treturn wslUnixToWindowsPathMap.get(original) ?? original;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn original;\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}, resolver);\n\t\t\t\twslUnixToWindowsPathMap.clear();\n\t\t\t});\n\n\t\t\tfor (const l of windowsLinks) {\n\t\t\t\tconst baseLink = typeof l === 'string' ? l : l.link;\n\t\t\t\tconst resource = typeof l === 'string' ? URI.file(l) : l.resource;\n\t\t\t\tsuite(`Link \"${baseLink}\"`, () => {\n\t\t\t\t\tfor (let i = 0; i < supportedLinkFormats.length; i++) {\n\t\t\t\t\t\tconst linkFormat = supportedLinkFormats[i];\n\t\t\t\t\t\tconst formattedLink = format(linkFormat.urlFormat, baseLink, linkFormat.line, linkFormat.column);\n\t\t\t\t\t\ttest(`should detect in \"${formattedLink}\"`, async () => {\n\t\t\t\t\t\t\tvalidResources = [resource];\n\t\t\t\t\t\t\tawait assertLinksWithWrapped(formattedLink, resource);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const l of windowsFallbackLinks) {\n\t\t\t\tconst baseLink = typeof l === 'string' ? l : l.link;\n\t\t\t\tconst resource = typeof l === 'string' ? URI.file(l) : l.resource;\n\t\t\t\tsuite(`Fallback link \"${baseLink}\"`, () => {\n\t\t\t\t\tfor (let i = 0; i < supportedFallbackLinkFormats.length; i++) {\n\t\t\t\t\t\tconst linkFormat = supportedFallbackLinkFormats[i];\n\t\t\t\t\t\tconst formattedLink = format(linkFormat.urlFormat, baseLink, linkFormat.line, linkFormat.column);\n\t\t\t\t\t\tconst linkCellStartOffset = linkFormat.linkCellStartOffset ?? 0;\n\t\t\t\t\t\tconst linkCellEndOffset = linkFormat.linkCellEndOffset ?? 0;\n\t\t\t\t\t\ttest(`should detect in \"${formattedLink}\"`, async () => {\n\t\t\t\t\t\t\tvalidResources = [resource];\n\t\t\t\t\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, formattedLink, [{ uri: resource, range: [[1 + linkCellStartOffset, 1], [formattedLink.length + linkCellEndOffset, 1]] }]);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttest('Git diff links', async () => {\n\t\t\t\tconst resource = URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar');\n\t\t\t\tvalidResources = [resource];\n\t\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, `diff --git a/foo/bar b/foo/bar`, [\n\t\t\t\t\t{ uri: resource, range: [[14, 1], [20, 1]] },\n\t\t\t\t\t{ uri: resource, range: [[24, 1], [30, 1]] }\n\t\t\t\t]);\n\t\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, `--- a/foo/bar`, [{ uri: resource, range: [[7, 1], [13, 1]] }]);\n\t\t\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, `+++ b/foo/bar`, [{ uri: resource, range: [[7, 1], [13, 1]] }]);\n\t\t\t});\n\n\t\t\tsuite('WSL', () => {\n\t\t\t\ttest('Unix -> Windows /mnt/ style links', async () => {\n\t\t\t\t\twslUnixToWindowsPathMap.set('/mnt/c/foo/bar', 'C:\\\\foo\\\\bar');\n\t\t\t\t\tvalidResources = [URI.file('C:\\\\foo\\\\bar')];\n\t\t\t\t\tawait assertLinksWithWrapped('/mnt/c/foo/bar', validResources[0]);\n\t\t\t\t});\n\n\t\t\t\ttest('Windows -> Unix \\\\\\\\wsl$\\\\ style links', async () => {\n\t\t\t\t\tvalidResources = [URI.file('\\\\\\\\wsl$\\\\Debian\\\\home\\\\foo\\\\bar')];\n\t\t\t\t\tawait assertLinksWithWrapped('\\\\\\\\wsl$\\\\Debian\\\\home\\\\foo\\\\bar');\n\t\t\t\t});\n\n\t\t\t\ttest('Windows -> Unix \\\\\\\\wsl.localhost\\\\ style links', async () => {\n\t\t\t\t\tvalidResources = [URI.file('\\\\\\\\wsl.localhost\\\\Debian\\\\home\\\\foo\\\\bar')];\n\t\t\t\t\tawait assertLinksWithWrapped('\\\\\\\\wsl.localhost\\\\Debian\\\\home\\\\foo\\\\bar');\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
