{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/links/browser/terminal.links.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from \"@xterm/xterm\";\nimport { Event } from \"../../../../../base/common/event.js\";\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../../base/common/lifecycle.js\";\nimport { localize2 } from \"../../../../../nls.js\";\nimport { AccessibleViewProviderId } from \"../../../../../platform/accessibility/browser/accessibleView.js\";\nimport { ContextKeyExpr } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\taccessibleViewCurrentProviderId,\n\taccessibleViewIsShown,\n} from \"../../../accessibility/browser/accessibilityConfiguration.js\";\nimport {\n\ttype IDetachedTerminalInstance,\n\ttype ITerminalContribution,\n\ttype ITerminalInstance,\n\ttype IXtermTerminal,\n\tisDetachedTerminalInstance,\n} from \"../../../terminal/browser/terminal.js\";\nimport { registerActiveInstanceAction } from \"../../../terminal/browser/terminalActions.js\";\nimport { registerTerminalContribution } from \"../../../terminal/browser/terminalExtensions.js\";\nimport type { TerminalWidgetManager } from \"../../../terminal/browser/widgets/widgetManager.js\";\nimport {\n\ttype ITerminalProcessInfo,\n\ttype ITerminalProcessManager,\n\tisTerminalProcessManager,\n} from \"../../../terminal/common/terminal.js\";\nimport { TerminalContextKeys } from \"../../../terminal/common/terminalContextKey.js\";\nimport { terminalStrings } from \"../../../terminal/common/terminalStrings.js\";\nimport { TerminalLinksCommandId } from \"../common/terminal.links.js\";\nimport { ITerminalLinkProviderService } from \"./links.js\";\nimport {\n\ttype IDetectedLinks,\n\tTerminalLinkManager,\n} from \"./terminalLinkManager.js\";\nimport { TerminalLinkProviderService } from \"./terminalLinkProviderService.js\";\nimport { TerminalLinkQuickpick } from \"./terminalLinkQuickpick.js\";\nimport { TerminalLinkResolver } from \"./terminalLinkResolver.js\";\n\n// #region Services\n\nregisterSingleton(\n\tITerminalLinkProviderService,\n\tTerminalLinkProviderService,\n\tInstantiationType.Delayed,\n);\n\n// #endregion\n\n// #region Terminal Contributions\n\nclass TerminalLinkContribution\n\textends DisposableStore\n\timplements ITerminalContribution\n{\n\tstatic readonly ID = \"terminal.link\";\n\n\tstatic get(instance: ITerminalInstance): TerminalLinkContribution | null {\n\t\treturn instance.getContribution<TerminalLinkContribution>(\n\t\t\tTerminalLinkContribution.ID,\n\t\t);\n\t}\n\n\tprivate _linkManager: TerminalLinkManager | undefined;\n\tprivate _terminalLinkQuickpick: TerminalLinkQuickpick | undefined;\n\tprivate _linkResolver: TerminalLinkResolver;\n\n\tconstructor(\n\t\tprivate readonly _instance:\n\t\t\t| ITerminalInstance\n\t\t\t| IDetachedTerminalInstance,\n\t\tprivate readonly _processManager:\n\t\t\t| ITerminalProcessManager\n\t\t\t| ITerminalProcessInfo,\n\t\tprivate readonly _widgetManager: TerminalWidgetManager,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@ITerminalLinkProviderService\n\t\tprivate readonly _terminalLinkProviderService: ITerminalLinkProviderService,\n\t) {\n\t\tsuper();\n\t\tthis._linkResolver =\n\t\t\tthis._instantiationService.createInstance(TerminalLinkResolver);\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tconst linkManager = (this._linkManager = this.add(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tTerminalLinkManager,\n\t\t\t\txterm.raw,\n\t\t\t\tthis._processManager,\n\t\t\t\tthis._instance.capabilities,\n\t\t\t\tthis._linkResolver,\n\t\t\t),\n\t\t));\n\n\t\t// Set widget manager\n\t\tif (isTerminalProcessManager(this._processManager)) {\n\t\t\tconst disposable = linkManager.add(\n\t\t\t\tEvent.once(this._processManager.onProcessReady)(() => {\n\t\t\t\t\tlinkManager.setWidgetManager(this._widgetManager);\n\t\t\t\t\tthis.delete(disposable);\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tlinkManager.setWidgetManager(this._widgetManager);\n\t\t}\n\n\t\t// Attach the external link provider to the instance and listen for changes\n\t\tif (!isDetachedTerminalInstance(this._instance)) {\n\t\t\tfor (const linkProvider of this._terminalLinkProviderService\n\t\t\t\t.linkProviders) {\n\t\t\t\tlinkManager.externalProvideLinksCb =\n\t\t\t\t\tlinkProvider.provideLinks.bind(\n\t\t\t\t\t\tlinkProvider,\n\t\t\t\t\t\tthis._instance,\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tlinkManager.add(\n\t\t\t\tthis._terminalLinkProviderService.onDidAddLinkProvider((e) => {\n\t\t\t\t\tlinkManager.externalProvideLinksCb = e.provideLinks.bind(\n\t\t\t\t\t\te,\n\t\t\t\t\t\tthis._instance as ITerminalInstance,\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\tlinkManager.add(\n\t\t\tthis._terminalLinkProviderService.onDidRemoveLinkProvider(\n\t\t\t\t() => (linkManager.externalProvideLinksCb = undefined),\n\t\t\t),\n\t\t);\n\t}\n\n\tasync showLinkQuickpick(extended?: boolean): Promise<void> {\n\t\tif (!this._terminalLinkQuickpick) {\n\t\t\tthis._terminalLinkQuickpick = this.add(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tTerminalLinkQuickpick,\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._terminalLinkQuickpick.onDidRequestMoreLinks(() => {\n\t\t\t\tthis.showLinkQuickpick(true);\n\t\t\t});\n\t\t}\n\t\tconst links = await this._getLinks();\n\t\treturn await this._terminalLinkQuickpick.show(this._instance, links);\n\t}\n\n\tprivate async _getLinks(): Promise<{\n\t\tviewport: IDetectedLinks;\n\t\tall: Promise<IDetectedLinks>;\n\t}> {\n\t\tif (!this._linkManager) {\n\t\t\tthrow new Error(\n\t\t\t\t\"terminal links are not ready, cannot generate link quick pick\",\n\t\t\t);\n\t\t}\n\t\treturn this._linkManager.getLinks();\n\t}\n\n\tasync openRecentLink(type: \"localFile\" | \"url\"): Promise<void> {\n\t\tif (!this._linkManager) {\n\t\t\tthrow new Error(\"terminal links are not ready, cannot open a link\");\n\t\t}\n\t\tthis._linkManager.openRecentLink(type);\n\t}\n}\n\nregisterTerminalContribution(\n\tTerminalLinkContribution.ID,\n\tTerminalLinkContribution,\n\ttrue,\n);\n\n// #endregion\n\n// #region Actions\n\nconst category = terminalStrings.actionCategory;\n\nregisterActiveInstanceAction({\n\tid: TerminalLinksCommandId.OpenDetectedLink,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.openDetectedLink\",\n\t\t\"Open Detected Link...\",\n\t),\n\tf1: true,\n\tcategory,\n\tprecondition: TerminalContextKeys.terminalHasBeenCreated,\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyO,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t},\n\t\t{\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\taccessibleViewIsShown,\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\taccessibleViewCurrentProviderId.key,\n\t\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t\t),\n\t\t\t),\n\t\t},\n\t],\n\trun: (activeInstance) =>\n\t\tTerminalLinkContribution.get(activeInstance)?.showLinkQuickpick(),\n});\nregisterActiveInstanceAction({\n\tid: TerminalLinksCommandId.OpenWebLink,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.openLastUrlLink\",\n\t\t\"Open Last URL Link\",\n\t),\n\tmetadata: {\n\t\tdescription: localize2(\n\t\t\t\"workbench.action.terminal.openLastUrlLink.description\",\n\t\t\t\"Opens the last detected URL/URI link in the terminal\",\n\t\t),\n\t},\n\tf1: true,\n\tcategory,\n\tprecondition: TerminalContextKeys.terminalHasBeenCreated,\n\trun: (activeInstance) =>\n\t\tTerminalLinkContribution.get(activeInstance)?.openRecentLink(\"url\"),\n});\nregisterActiveInstanceAction({\n\tid: TerminalLinksCommandId.OpenFileLink,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.openLastLocalFileLink\",\n\t\t\"Open Last Local File Link\",\n\t),\n\tf1: true,\n\tcategory,\n\tprecondition: TerminalContextKeys.terminalHasBeenCreated,\n\trun: (activeInstance) =>\n\t\tTerminalLinkContribution.get(activeInstance)?.openRecentLink(\n\t\t\t\"localFile\",\n\t\t),\n});\n\n// #endregion\n"],
  "mappings": "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",
  "names": []
}
