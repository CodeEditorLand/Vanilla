{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/links/browser/terminal.links.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../../../base/common/event.js';\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { localize2 } from '../../../../../nls.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { InstantiationType, registerSingleton } from '../../../../../platform/instantiation/common/extensions.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { accessibleViewCurrentProviderId, accessibleViewIsShown } from '../../../accessibility/browser/accessibilityConfiguration.js';\nimport { IDetachedTerminalInstance, ITerminalContribution, ITerminalInstance, IXtermTerminal, isDetachedTerminalInstance } from '../../../terminal/browser/terminal.js';\nimport { registerActiveInstanceAction } from '../../../terminal/browser/terminalActions.js';\nimport { registerTerminalContribution } from '../../../terminal/browser/terminalExtensions.js';\nimport { TerminalWidgetManager } from '../../../terminal/browser/widgets/widgetManager.js';\nimport { ITerminalProcessInfo, ITerminalProcessManager, isTerminalProcessManager } from '../../../terminal/common/terminal.js';\nimport { TerminalContextKeys } from '../../../terminal/common/terminalContextKey.js';\nimport { terminalStrings } from '../../../terminal/common/terminalStrings.js';\nimport { ITerminalLinkProviderService } from './links.js';\nimport { IDetectedLinks, TerminalLinkManager } from './terminalLinkManager.js';\nimport { TerminalLinkProviderService } from './terminalLinkProviderService.js';\nimport { TerminalLinkQuickpick } from './terminalLinkQuickpick.js';\nimport { TerminalLinkResolver } from './terminalLinkResolver.js';\nimport type { Terminal as RawXtermTerminal } from '@xterm/xterm';\nimport { TerminalLinksCommandId } from '../common/terminal.links.js';\nimport { AccessibleViewProviderId } from '../../../../../platform/accessibility/browser/accessibleView.js';\n\n// #region Services\n\nregisterSingleton(ITerminalLinkProviderService, TerminalLinkProviderService, InstantiationType.Delayed);\n\n// #endregion\n\n// #region Terminal Contributions\n\nclass TerminalLinkContribution extends DisposableStore implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.link';\n\n\tstatic get(instance: ITerminalInstance): TerminalLinkContribution | null {\n\t\treturn instance.getContribution<TerminalLinkContribution>(TerminalLinkContribution.ID);\n\t}\n\n\tprivate _linkManager: TerminalLinkManager | undefined;\n\tprivate _terminalLinkQuickpick: TerminalLinkQuickpick | undefined;\n\tprivate _linkResolver: TerminalLinkResolver;\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance | IDetachedTerminalInstance,\n\t\tprivate readonly _processManager: ITerminalProcessManager | ITerminalProcessInfo,\n\t\tprivate readonly _widgetManager: TerminalWidgetManager,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITerminalLinkProviderService private readonly _terminalLinkProviderService: ITerminalLinkProviderService\n\t) {\n\t\tsuper();\n\t\tthis._linkResolver = this._instantiationService.createInstance(TerminalLinkResolver);\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tconst linkManager = this._linkManager = this.add(this._instantiationService.createInstance(TerminalLinkManager, xterm.raw, this._processManager, this._instance.capabilities, this._linkResolver));\n\n\t\t// Set widget manager\n\t\tif (isTerminalProcessManager(this._processManager)) {\n\t\t\tconst disposable = linkManager.add(Event.once(this._processManager.onProcessReady)(() => {\n\t\t\t\tlinkManager.setWidgetManager(this._widgetManager);\n\t\t\t\tthis.delete(disposable);\n\t\t\t}));\n\t\t} else {\n\t\t\tlinkManager.setWidgetManager(this._widgetManager);\n\t\t}\n\n\t\t// Attach the external link provider to the instance and listen for changes\n\t\tif (!isDetachedTerminalInstance(this._instance)) {\n\t\t\tfor (const linkProvider of this._terminalLinkProviderService.linkProviders) {\n\t\t\t\tlinkManager.externalProvideLinksCb = linkProvider.provideLinks.bind(linkProvider, this._instance);\n\t\t\t}\n\t\t\tlinkManager.add(this._terminalLinkProviderService.onDidAddLinkProvider(e => {\n\t\t\t\tlinkManager.externalProvideLinksCb = e.provideLinks.bind(e, this._instance as ITerminalInstance);\n\t\t\t}));\n\t\t}\n\t\tlinkManager.add(this._terminalLinkProviderService.onDidRemoveLinkProvider(() => linkManager.externalProvideLinksCb = undefined));\n\t}\n\n\tasync showLinkQuickpick(extended?: boolean): Promise<void> {\n\t\tif (!this._terminalLinkQuickpick) {\n\t\t\tthis._terminalLinkQuickpick = this.add(this._instantiationService.createInstance(TerminalLinkQuickpick));\n\t\t\tthis._terminalLinkQuickpick.onDidRequestMoreLinks(() => {\n\t\t\t\tthis.showLinkQuickpick(true);\n\t\t\t});\n\t\t}\n\t\tconst links = await this._getLinks();\n\t\treturn await this._terminalLinkQuickpick.show(this._instance, links);\n\t}\n\n\tprivate async _getLinks(): Promise<{ viewport: IDetectedLinks; all: Promise<IDetectedLinks> }> {\n\t\tif (!this._linkManager) {\n\t\t\tthrow new Error('terminal links are not ready, cannot generate link quick pick');\n\t\t}\n\t\treturn this._linkManager.getLinks();\n\t}\n\n\tasync openRecentLink(type: 'localFile' | 'url'): Promise<void> {\n\t\tif (!this._linkManager) {\n\t\t\tthrow new Error('terminal links are not ready, cannot open a link');\n\t\t}\n\t\tthis._linkManager.openRecentLink(type);\n\t}\n}\n\nregisterTerminalContribution(TerminalLinkContribution.ID, TerminalLinkContribution, true);\n\n// #endregion\n\n// #region Actions\n\nconst category = terminalStrings.actionCategory;\n\nregisterActiveInstanceAction({\n\tid: TerminalLinksCommandId.OpenDetectedLink,\n\ttitle: localize2('workbench.action.terminal.openDetectedLink', 'Open Detected Link...'),\n\tf1: true,\n\tcategory,\n\tprecondition: TerminalContextKeys.terminalHasBeenCreated,\n\tkeybinding: [{\n\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyO,\n\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\twhen: TerminalContextKeys.focus\n\t}, {\n\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG,\n\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\twhen: ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Terminal))\n\t},\n\t],\n\trun: (activeInstance) => TerminalLinkContribution.get(activeInstance)?.showLinkQuickpick()\n});\nregisterActiveInstanceAction({\n\tid: TerminalLinksCommandId.OpenWebLink,\n\ttitle: localize2('workbench.action.terminal.openLastUrlLink', 'Open Last URL Link'),\n\tmetadata: {\n\t\tdescription: localize2('workbench.action.terminal.openLastUrlLink.description', 'Opens the last detected URL/URI link in the terminal')\n\t},\n\tf1: true,\n\tcategory,\n\tprecondition: TerminalContextKeys.terminalHasBeenCreated,\n\trun: (activeInstance) => TerminalLinkContribution.get(activeInstance)?.openRecentLink('url')\n});\nregisterActiveInstanceAction({\n\tid: TerminalLinksCommandId.OpenFileLink,\n\ttitle: localize2('workbench.action.terminal.openLastLocalFileLink', 'Open Last Local File Link'),\n\tf1: true,\n\tcategory,\n\tprecondition: TerminalContextKeys.terminalHasBeenCreated,\n\trun: (activeInstance) => TerminalLinkContribution.get(activeInstance)?.openRecentLink('localFile')\n});\n\n// #endregion\n"],
  "mappings": "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",
  "names": []
}
