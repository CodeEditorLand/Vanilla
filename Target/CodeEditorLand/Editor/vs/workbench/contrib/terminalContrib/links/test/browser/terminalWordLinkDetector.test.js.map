{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/links/test/browser/terminalWordLinkDetector.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { importAMDNodeModule } from '../../../../../../amdX.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../../base/test/common/utils.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { TestInstantiationService } from '../../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IProductService } from '../../../../../../platform/product/common/productService.js';\nimport { ITerminalSimpleLink, TerminalBuiltinLinkType } from '../../browser/links.js';\nimport { TerminalWordLinkDetector } from '../../browser/terminalWordLinkDetector.js';\nimport { assertLinkHelper } from './linkTestUtils.js';\nimport { TestProductService } from '../../../../../test/common/workbenchTestServices.js';\nimport type { Terminal } from '@xterm/xterm';\n\nsuite('Workbench - TerminalWordLinkDetector', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet configurationService: TestConfigurationService;\n\tlet detector: TerminalWordLinkDetector;\n\tlet xterm: Terminal;\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(async () => {\n\t\tinstantiationService = store.add(new TestInstantiationService());\n\t\tconfigurationService = new TestConfigurationService();\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: '' } });\n\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tinstantiationService.set(IProductService, TestProductService);\n\n\t\tconst TerminalCtor = (await importAMDNodeModule<typeof import('@xterm/xterm')>('@xterm/xterm', 'lib/xterm.js')).Terminal;\n\t\txterm = store.add(new TerminalCtor({ allowProposedApi: true, cols: 80, rows: 30 }));\n\t\tdetector = store.add(instantiationService.createInstance(TerminalWordLinkDetector, xterm));\n\t});\n\n\tasync function assertLink(\n\t\ttext: string,\n\t\texpected: (Pick<ITerminalSimpleLink, 'text'> & { range: [number, number][] })[]\n\t) {\n\t\tawait assertLinkHelper(text, expected, detector, TerminalBuiltinLinkType.Search);\n\t}\n\n\tsuite('should link words as defined by wordSeparators', () => {\n\t\ttest('\" ()[]\"', async () => {\n\t\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ()[]' } });\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\t\tawait assertLink('foo', [{ range: [[1, 1], [3, 1]], text: 'foo' }]);\n\t\t\tawait assertLink(' foo ', [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\tawait assertLink('(foo)', [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\tawait assertLink('[foo]', [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\tawait assertLink('{foo}', [{ range: [[1, 1], [5, 1]], text: '{foo}' }]);\n\t\t});\n\t\ttest('\" \"', async () => {\n\t\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\t\tawait assertLink('foo', [{ range: [[1, 1], [3, 1]], text: 'foo' }]);\n\t\t\tawait assertLink(' foo ', [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\tawait assertLink('(foo)', [{ range: [[1, 1], [5, 1]], text: '(foo)' }]);\n\t\t\tawait assertLink('[foo]', [{ range: [[1, 1], [5, 1]], text: '[foo]' }]);\n\t\t\tawait assertLink('{foo}', [{ range: [[1, 1], [5, 1]], text: '{foo}' }]);\n\t\t});\n\t\ttest('\" []\"', async () => {\n\t\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' []' } });\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\t\tawait assertLink('aabbccdd.txt ', [{ range: [[1, 1], [12, 1]], text: 'aabbccdd.txt' }]);\n\t\t\tawait assertLink(' aabbccdd.txt ', [{ range: [[2, 1], [13, 1]], text: 'aabbccdd.txt' }]);\n\t\t\tawait assertLink(' [aabbccdd.txt] ', [{ range: [[3, 1], [14, 1]], text: 'aabbccdd.txt' }]);\n\t\t});\n\t});\n\n\tsuite('should ignore powerline symbols', () => {\n\t\tfor (let i = 0xe0b0; i <= 0xe0bf; i++) {\n\t\t\ttest(`\\\\u${i.toString(16)}`, async () => {\n\t\t\t\tawait assertLink(`${String.fromCharCode(i)}foo${String.fromCharCode(i)}`, [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\t});\n\t\t}\n\t});\n\n\t// These are failing - the link's start x is 1 px too far to the right bc it starts\n\t// with a wide character, which the terminalLinkHelper currently doesn't account for\n\ttest.skip('should support wide characters', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' []' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('\u6211\u662F\u5B66\u751F.txt ', [{ range: [[1, 1], [12, 1]], text: '\u6211\u662F\u5B66\u751F.txt' }]);\n\t\tawait assertLink(' \u6211\u662F\u5B66\u751F.txt ', [{ range: [[2, 1], [13, 1]], text: '\u6211\u662F\u5B66\u751F.txt' }]);\n\t\tawait assertLink(' [\u6211\u662F\u5B66\u751F.txt] ', [{ range: [[3, 1], [14, 1]], text: '\u6211\u662F\u5B66\u751F.txt' }]);\n\t});\n\n\ttest('should support multiple link results', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('foo bar', [\n\t\t\t{ range: [[1, 1], [3, 1]], text: 'foo' },\n\t\t\t{ range: [[5, 1], [7, 1]], text: 'bar' }\n\t\t]);\n\t});\n\n\ttest('should remove trailing colon in the link results', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('foo:5:6: bar:0:32:', [\n\t\t\t{ range: [[1, 1], [7, 1]], text: 'foo:5:6' },\n\t\t\t{ range: [[10, 1], [17, 1]], text: 'bar:0:32' }\n\t\t]);\n\t});\n\n\ttest('should support wrapping', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('fsdjfsdkfjslkdfjskdfjsldkfjsdlkfjslkdjfskldjflskdfjskldjflskdfjsdklfjsdklfjsldkfjsdlkfjsdlkfjsdlkfjsldkfjslkdfjsdlkfjsldkfjsdlkfjskdfjsldkfjsdlkfjslkdfjsdlkfjsldkfjsldkfjsldkfjslkdfjsdlkfjslkdfjsdklfsd', [\n\t\t\t{ range: [[1, 1], [41, 3]], text: 'fsdjfsdkfjslkdfjskdfjsldkfjsdlkfjslkdjfskldjflskdfjskldjflskdfjsdklfjsdklfjsldkfjsdlkfjsdlkfjsdlkfjsldkfjslkdfjsdlkfjsldkfjsdlkfjskdfjsldkfjsdlkfjslkdfjsdlkfjsldkfjsldkfjsldkfjslkdfjsdlkfjslkdfjsdklfsd' },\n\t\t]);\n\t});\n\ttest('should support wrapping with multiple links', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('fsdjfsdkfjslkdfjskdfjsldkfj sdlkfjslkdjfskldjflskdfjskldjflskdfj sdklfjsdklfjsldkfjsdlkfjsdlkfjsdlkfjsldkfjslkdfjsdlkfjsldkfjsdlkfjskdfjsldkfjsdlkfjslkdfjsdlkfjsldkfjsldkfjsldkfjslkdfjsdlkfjslkdfjsdklfsd', [\n\t\t\t{ range: [[1, 1], [27, 1]], text: 'fsdjfsdkfjslkdfjskdfjsldkfj' },\n\t\t\t{ range: [[29, 1], [64, 1]], text: 'sdlkfjslkdjfskldjflskdfjskldjflskdfj' },\n\t\t\t{ range: [[66, 1], [43, 3]], text: 'sdklfjsdklfjsldkfjsdlkfjsdlkfjsdlkfjsldkfjslkdfjsdlkfjsldkfjsdlkfjskdfjsldkfjsdlkfjslkdfjsdlkfjsldkfjsldkfjsldkfjslkdfjsdlkfjslkdfjsdklfsd' }\n\t\t]);\n\t});\n\ttest('does not return any links for empty text', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('', []);\n\t});\n\ttest('should support file scheme links', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('file:///C:/users/test/file.txt ', [{ range: [[1, 1], [30, 1]], text: 'file:///C:/users/test/file.txt' }]);\n\t\tawait assertLink('file:///C:/users/test/file.txt:1:10 ', [{ range: [[1, 1], [35, 1]], text: 'file:///C:/users/test/file.txt:1:10' }]);\n\t});\n});\n"],
  "mappings": ";;AAKA,SAAS,2BAA2B;AACpC,SAAS,+CAA+C;AACxD,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC,SAAS,gCAAgC;AACzC,SAAS,uBAAuB;AAChC,SAAS,qBAAqB,+BAA+B;AAC7D,SAAS,gCAAgC;AACzC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AAGnC,MAAM,wCAAwC,MAAM;AACnD,QAAM,QAAQ,wCAAwC;AAEtD,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,QAAM,YAAY;AACjB,2BAAuB,MAAM,IAAI,IAAI,yBAAyB,CAAC;AAC/D,2BAAuB,IAAI,yBAAyB;AACpD,UAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,GAAG,EAAE,CAAC;AAElG,yBAAqB,KAAK,uBAAuB,oBAAoB;AACrE,yBAAqB,IAAI,iBAAiB,kBAAkB;AAE5D,UAAM,gBAAgB,MAAM,oBAAmD,gBAAgB,cAAc,GAAG;AAChH,YAAQ,MAAM,IAAI,IAAI,aAAa,EAAE,kBAAkB,MAAM,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC;AAClF,eAAW,MAAM,IAAI,qBAAqB,eAAe,0BAA0B,KAAK,CAAC;AAAA,EAC1F,CAAC;AAED,iBAAe,WACd,MACA,UACC;AACD,UAAM,iBAAiB,MAAM,UAAU,UAAU,wBAAwB,MAAM;AAAA,EAChF;AALe;AAOf,QAAM,kDAAkD,MAAM;AAC7D,SAAK,WAAW,YAAY;AAC3B,YAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,QAAQ,EAAE,CAAC;AACvG,2BAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,YAAM,WAAW,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AAClE,YAAM,WAAW,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AACpE,YAAM,WAAW,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AACpE,YAAM,WAAW,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AACpE,YAAM,WAAW,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC;AAAA,IACvE,CAAC;AACD,SAAK,OAAO,YAAY;AACvB,YAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,IAAI,EAAE,CAAC;AACnG,2BAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,YAAM,WAAW,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AAClE,YAAM,WAAW,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AACpE,YAAM,WAAW,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC;AACtE,YAAM,WAAW,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC;AACtE,YAAM,WAAW,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC;AAAA,IACvE,CAAC;AACD,SAAK,SAAS,YAAY;AACzB,YAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,MAAM,EAAE,CAAC;AACrG,2BAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,YAAM,WAAW,iBAAiB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,eAAe,CAAC,CAAC;AACtF,YAAM,WAAW,kBAAkB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,eAAe,CAAC,CAAC;AACvF,YAAM,WAAW,oBAAoB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,eAAe,CAAC,CAAC;AAAA,IAC1F,CAAC;AAAA,EACF,CAAC;AAED,QAAM,mCAAmC,MAAM;AAC9C,aAAS,IAAI,OAAQ,KAAK,OAAQ,KAAK;AACtC,WAAK,MAAM,EAAE,SAAS,EAAE,CAAC,IAAI,YAAY;AACxC,cAAM,WAAW,GAAG,OAAO,aAAa,CAAC,CAAC,MAAM,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AAAA,MACrH,CAAC;AAAA,IACF;AAAA,EACD,CAAC;AAID,OAAK,KAAK,kCAAkC,YAAY;AACvD,UAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,MAAM,EAAE,CAAC;AACrG,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,UAAM,WAAW,iCAAa,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,+BAAW,CAAC,CAAC;AAC9E,UAAM,WAAW,kCAAc,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,+BAAW,CAAC,CAAC;AAC/E,UAAM,WAAW,oCAAgB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,+BAAW,CAAC,CAAC;AAAA,EAClF,CAAC;AAED,OAAK,wCAAwC,YAAY;AACxD,UAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,IAAI,EAAE,CAAC;AACnG,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,UAAM,WAAW,WAAW;AAAA,MAC3B,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM;AAAA,MACvC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM;AAAA,IACxC,CAAC;AAAA,EACF,CAAC;AAED,OAAK,oDAAoD,YAAY;AACpE,UAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,IAAI,EAAE,CAAC;AACnG,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,UAAM,WAAW,sBAAsB;AAAA,MACtC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,UAAU;AAAA,MAC3C,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,WAAW;AAAA,IAC/C,CAAC;AAAA,EACF,CAAC;AAED,OAAK,2BAA2B,YAAY;AAC3C,UAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,IAAI,EAAE,CAAC;AACnG,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,UAAM,WAAW,6MAA6M;AAAA,MAC7N,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,4MAA4M;AAAA,IAC/O,CAAC;AAAA,EACF,CAAC;AACD,OAAK,+CAA+C,YAAY;AAC/D,UAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,IAAI,EAAE,CAAC;AACnG,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,UAAM,WAAW,+MAA+M;AAAA,MAC/N,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,8BAA8B;AAAA,MAChE,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,uCAAuC;AAAA,MAC1E,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,6IAA6I;AAAA,IACjL,CAAC;AAAA,EACF,CAAC;AACD,OAAK,4CAA4C,YAAY;AAC5D,UAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,IAAI,EAAE,CAAC;AACnG,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,UAAM,WAAW,IAAI,CAAC,CAAC;AAAA,EACxB,CAAC;AACD,OAAK,oCAAoC,YAAY;AACpD,UAAM,qBAAqB,qBAAqB,YAAY,EAAE,YAAY,EAAE,gBAAgB,IAAI,EAAE,CAAC;AACnG,yBAAqB,gCAAgC,KAAK,EAAE,sBAAsB,6BAAM,MAAN,wBAAW,CAAQ;AACrG,UAAM,WAAW,mCAAmC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,iCAAiC,CAAC,CAAC;AAC1H,UAAM,WAAW,wCAAwC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,sCAAsC,CAAC,CAAC;AAAA,EACrI,CAAC;AACF,CAAC;",
  "names": []
}
