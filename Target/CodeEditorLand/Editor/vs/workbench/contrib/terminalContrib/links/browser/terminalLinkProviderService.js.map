{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/links/browser/terminalLinkProviderService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITerminalExternalLinkProvider } from '../../../terminal/browser/terminal.js';\nimport { ITerminalLinkProviderService } from './links.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { IDisposable } from '../../../../../base/common/lifecycle.js';\n\nexport class TerminalLinkProviderService implements ITerminalLinkProviderService {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _linkProviders = new Set<ITerminalExternalLinkProvider>();\n\tget linkProviders(): ReadonlySet<ITerminalExternalLinkProvider> { return this._linkProviders; }\n\n\tprivate readonly _onDidAddLinkProvider = new Emitter<ITerminalExternalLinkProvider>();\n\tget onDidAddLinkProvider(): Event<ITerminalExternalLinkProvider> { return this._onDidAddLinkProvider.event; }\n\tprivate readonly _onDidRemoveLinkProvider = new Emitter<ITerminalExternalLinkProvider>();\n\tget onDidRemoveLinkProvider(): Event<ITerminalExternalLinkProvider> { return this._onDidRemoveLinkProvider.event; }\n\n\tregisterLinkProvider(linkProvider: ITerminalExternalLinkProvider): IDisposable {\n\t\tconst disposables: IDisposable[] = [];\n\t\tthis._linkProviders.add(linkProvider);\n\t\tthis._onDidAddLinkProvider.fire(linkProvider);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (const disposable of disposables) {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t}\n\t\t\t\tthis._linkProviders.delete(linkProvider);\n\t\t\t\tthis._onDidRemoveLinkProvider.fire(linkProvider);\n\t\t\t}\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,qCAAqC;AAC9C,SAAS,oCAAoC;AAC7C,SAAS,SAAS,aAAa;AAC/B,SAAS,mBAAmB;AAErB,MAAM,4BAAoE;AAAA,EAVjF,OAUiF;AAAA;AAAA;AAAA,EAGxE,iBAAiB,oBAAI,IAAmC;AAAA,EAChE,IAAI,gBAA4D;AAAE,WAAO,KAAK;AAAA,EAAgB;AAAA,EAE7E,wBAAwB,IAAI,QAAuC;AAAA,EACpF,IAAI,uBAA6D;AAAE,WAAO,KAAK,sBAAsB;AAAA,EAAO;AAAA,EAC3F,2BAA2B,IAAI,QAAuC;AAAA,EACvF,IAAI,0BAAgE;AAAE,WAAO,KAAK,yBAAyB;AAAA,EAAO;AAAA,EAElH,qBAAqB,cAA0D;AAC9E,UAAM,cAA6B,CAAC;AACpC,SAAK,eAAe,IAAI,YAAY;AACpC,SAAK,sBAAsB,KAAK,YAAY;AAC5C,WAAO;AAAA,MACN,SAAS,6BAAM;AACd,mBAAW,cAAc,aAAa;AACrC,qBAAW,QAAQ;AAAA,QACpB;AACA,aAAK,eAAe,OAAO,YAAY;AACvC,aAAK,yBAAyB,KAAK,YAAY;AAAA,MAChD,GANS;AAAA,IAOV;AAAA,EACD;AACD;",
  "names": []
}
