{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/links/test/browser/terminalMultiLineLinkDetector.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, OperatingSystem } from '../../../../../../base/common/platform.js';\nimport { format } from '../../../../../../base/common/strings.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { TestInstantiationService } from '../../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { TerminalBuiltinLinkType } from '../../browser/links.js';\nimport { assertLinkHelper } from './linkTestUtils.js';\nimport type { Terminal } from '@xterm/xterm';\nimport { timeout } from '../../../../../../base/common/async.js';\nimport { strictEqual } from 'assert';\nimport { TerminalLinkResolver } from '../../browser/terminalLinkResolver.js';\nimport { IFileService } from '../../../../../../platform/files/common/files.js';\nimport { createFileStat } from '../../../../../test/common/workbenchTestServices.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport { NullLogService } from '../../../../../../platform/log/common/log.js';\nimport { ITerminalLogService } from '../../../../../../platform/terminal/common/terminal.js';\nimport { TerminalMultiLineLinkDetector } from '../../browser/terminalMultiLineLinkDetector.js';\nimport { importAMDNodeModule } from '../../../../../../amdX.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../../base/test/common/utils.js';\n\nconst unixLinks: (string | { link: string; resource: URI })[] = [\n\t// Absolute\n\t'/foo',\n\t'/foo/bar',\n\t'/foo/[bar]',\n\t'/foo/[bar].baz',\n\t'/foo/[bar]/baz',\n\t'/foo/bar+more',\n\t// User home\n\t{ link: '~/foo', resource: URI.file('/home/foo') },\n\t// Relative\n\t{ link: './foo', resource: URI.file('/parent/cwd/foo') },\n\t{ link: './$foo', resource: URI.file('/parent/cwd/$foo') },\n\t{ link: '../foo', resource: URI.file('/parent/foo') },\n\t{ link: 'foo/bar', resource: URI.file('/parent/cwd/foo/bar') },\n\t{ link: 'foo/bar+more', resource: URI.file('/parent/cwd/foo/bar+more') },\n];\n\nconst windowsLinks: (string | { link: string; resource: URI })[] = [\n\t// Absolute\n\t'c:\\\\foo',\n\t{ link: '\\\\\\\\?\\\\C:\\\\foo', resource: URI.file('C:\\\\foo') },\n\t'c:/foo',\n\t'c:/foo/bar',\n\t'c:\\\\foo\\\\bar',\n\t'c:\\\\foo\\\\bar+more',\n\t'c:\\\\foo/bar\\\\baz',\n\t// User home\n\t{ link: '~\\\\foo', resource: URI.file('C:\\\\Home\\\\foo') },\n\t{ link: '~/foo', resource: URI.file('C:\\\\Home\\\\foo') },\n\t// Relative\n\t{ link: '.\\\\foo', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo') },\n\t{ link: './foo', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo') },\n\t{ link: './$foo', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\$foo') },\n\t{ link: '..\\\\foo', resource: URI.file('C:\\\\Parent\\\\foo') },\n\t{ link: 'foo/bar', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar') },\n\t{ link: 'foo/bar', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar') },\n\t{ link: 'foo/[bar]', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar]') },\n\t{ link: 'foo/[bar].baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar].baz') },\n\t{ link: 'foo/[bar]/baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar]/baz') },\n\t{ link: 'foo\\\\bar', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar') },\n\t{ link: 'foo\\\\[bar].baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar].baz') },\n\t{ link: 'foo\\\\[bar]\\\\baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar]\\\\baz') },\n\t{ link: 'foo\\\\bar+more', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar+more') },\n];\n\ninterface LinkFormatInfo {\n\turlFormat: string;\n\t/**\n\t * The start offset to the buffer range that is not in the actual link (but is in the matched\n\t * area.\n\t */\n\tlinkCellStartOffset?: number;\n\t/**\n\t * The end offset to the buffer range that is not in the actual link (but is in the matched\n\t * area.\n\t */\n\tlinkCellEndOffset?: number;\n\tline?: string;\n\tcolumn?: string;\n}\n\nconst supportedLinkFormats: LinkFormatInfo[] = [\n\t// 5: file content...                         [#181837]\n\t//   5:3  error                               [#181837]\n\t{ urlFormat: '{0}\\r\\n{1}:foo', line: '5' },\n\t{ urlFormat: '{0}\\r\\n{1}: foo', line: '5' },\n\t{ urlFormat: '{0}\\r\\n5:another link\\r\\n{1}:{2} foo', line: '5', column: '3' },\n\t{ urlFormat: '{0}\\r\\n  {1}:{2} foo', line: '5', column: '3' },\n\t{ urlFormat: '{0}\\r\\n  5:6  error  another one\\r\\n  {1}:{2}  error', line: '5', column: '3' },\n\t{ urlFormat: `{0}\\r\\n  5:6  error  ${'a'.repeat(80)}\\r\\n  {1}:{2}  error`, line: '5', column: '3' },\n\n\t// @@ ... <to-file-range> @@ content...       [#182878]   (tests check the entire line, so they don't include the line content at the end of the last @@)\n\t{ urlFormat: '+++ b/{0}\\r\\n@@ -7,6 +{1},7 @@', line: '5' },\n\t{ urlFormat: '+++ b/{0}\\r\\n@@ -1,1 +1,1 @@\\r\\nfoo\\r\\nbar\\r\\n@@ -7,6 +{1},7 @@', line: '5' },\n];\n\nsuite('Workbench - TerminalMultiLineLinkDetector', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet instantiationService: TestInstantiationService;\n\tlet configurationService: TestConfigurationService;\n\tlet detector: TerminalMultiLineLinkDetector;\n\tlet resolver: TerminalLinkResolver;\n\tlet xterm: Terminal;\n\tlet validResources: URI[];\n\n\tasync function assertLinks(\n\t\ttype: TerminalBuiltinLinkType,\n\t\ttext: string,\n\t\texpected: ({ uri: URI; range: [number, number][] })[]\n\t) {\n\t\tlet to;\n\t\tconst race = await Promise.race([\n\t\t\tassertLinkHelper(text, expected, detector, type).then(() => 'success'),\n\t\t\t(to = timeout(2)).then(() => 'timeout')\n\t\t]);\n\t\tstrictEqual(race, 'success', `Awaiting link assertion for \"${text}\" timed out`);\n\t\tto.cancel();\n\t}\n\n\tasync function assertLinksMain(link: string, resource?: URI) {\n\t\tconst uri = resource ?? URI.file(link);\n\t\tconst lines = link.split('\\r\\n');\n\t\tconst lastLine = lines.at(-1)!;\n\t\t// Count lines, accounting for wrapping\n\t\tlet lineCount = 0;\n\t\tfor (const line of lines) {\n\t\t\tlineCount += Math.max(Math.ceil(line.length / 80), 1);\n\t\t}\n\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, link, [{ uri, range: [[1, lineCount], [lastLine.length, lineCount]] }]);\n\t}\n\n\tsetup(async () => {\n\t\tinstantiationService = store.add(new TestInstantiationService());\n\t\tconfigurationService = new TestConfigurationService();\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tinstantiationService.stub(IFileService, {\n\t\t\tasync stat(resource) {\n\t\t\t\tif (!validResources.map(e => e.path).includes(resource.path)) {\n\t\t\t\t\tthrow new Error('Doesn\\'t exist');\n\t\t\t\t}\n\t\t\t\treturn createFileStat(resource);\n\t\t\t}\n\t\t});\n\t\tinstantiationService.stub(ITerminalLogService, new NullLogService());\n\t\tresolver = instantiationService.createInstance(TerminalLinkResolver);\n\t\tvalidResources = [];\n\n\t\tconst TerminalCtor = (await importAMDNodeModule<typeof import('@xterm/xterm')>('@xterm/xterm', 'lib/xterm.js')).Terminal;\n\t\txterm = new TerminalCtor({ allowProposedApi: true, cols: 80, rows: 30 });\n\t});\n\n\tsuite('macOS/Linux', () => {\n\t\tsetup(() => {\n\t\t\tdetector = instantiationService.createInstance(TerminalMultiLineLinkDetector, xterm, {\n\t\t\t\tinitialCwd: '/parent/cwd',\n\t\t\t\tos: OperatingSystem.Linux,\n\t\t\t\tremoteAuthority: undefined,\n\t\t\t\tuserHome: '/home',\n\t\t\t\tbackend: undefined\n\t\t\t}, resolver);\n\t\t});\n\n\t\tfor (const l of unixLinks) {\n\t\t\tconst baseLink = typeof l === 'string' ? l : l.link;\n\t\t\tconst resource = typeof l === 'string' ? URI.file(l) : l.resource;\n\t\t\tsuite(`Link: ${baseLink}`, () => {\n\t\t\t\tfor (let i = 0; i < supportedLinkFormats.length; i++) {\n\t\t\t\t\tconst linkFormat = supportedLinkFormats[i];\n\t\t\t\t\tconst formattedLink = format(linkFormat.urlFormat, baseLink, linkFormat.line, linkFormat.column);\n\t\t\t\t\ttest(`should detect in \"${escapeMultilineTestName(formattedLink)}\"`, async () => {\n\t\t\t\t\t\tvalidResources = [resource];\n\t\t\t\t\t\tawait assertLinksMain(formattedLink, resource);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t// Only test these when on Windows because there is special behavior around replacing separators\n\t// in URI that cannot be changed\n\tif (isWindows) {\n\t\tsuite('Windows', () => {\n\t\t\tsetup(() => {\n\t\t\t\tdetector = instantiationService.createInstance(TerminalMultiLineLinkDetector, xterm, {\n\t\t\t\t\tinitialCwd: 'C:\\\\Parent\\\\Cwd',\n\t\t\t\t\tos: OperatingSystem.Windows,\n\t\t\t\t\tremoteAuthority: undefined,\n\t\t\t\t\tuserHome: 'C:\\\\Home',\n\t\t\t\t}, resolver);\n\t\t\t});\n\n\t\t\tfor (const l of windowsLinks) {\n\t\t\t\tconst baseLink = typeof l === 'string' ? l : l.link;\n\t\t\t\tconst resource = typeof l === 'string' ? URI.file(l) : l.resource;\n\t\t\t\tsuite(`Link \"${baseLink}\"`, () => {\n\t\t\t\t\tfor (let i = 0; i < supportedLinkFormats.length; i++) {\n\t\t\t\t\t\tconst linkFormat = supportedLinkFormats[i];\n\t\t\t\t\t\tconst formattedLink = format(linkFormat.urlFormat, baseLink, linkFormat.line, linkFormat.column);\n\t\t\t\t\t\ttest(`should detect in \"${escapeMultilineTestName(formattedLink)}\"`, async () => {\n\t\t\t\t\t\t\tvalidResources = [resource];\n\t\t\t\t\t\t\tawait assertLinksMain(formattedLink, resource);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n});\n\nfunction escapeMultilineTestName(text: string): string {\n\treturn text.replaceAll('\\r\\n', '\\\\r\\\\n');\n}\n"],
  "mappings": "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",
  "names": []
}
