{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/accessibility/browser/bufferContentTracker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ITerminalLogService, TerminalSettingId } from '../../../../../platform/terminal/common/terminal.js';\nimport { IXtermTerminal } from '../../../terminal/browser/terminal.js';\nimport type { IMarker, Terminal } from '@xterm/xterm';\n\nexport class BufferContentTracker extends Disposable {\n\t/**\n\t * Marks the last part of the buffer that was cached\n\t */\n\tprivate _lastCachedMarker: IMarker | undefined;\n\t/**\n\t * The number of wrapped lines in the viewport when the last cached marker was set\n\t */\n\tprivate _priorEditorViewportLineCount: number = 0;\n\n\tprivate _lines: string[] = [];\n\tget lines(): string[] { return this._lines; }\n\n\tbufferToEditorLineMapping: Map<number, number> = new Map();\n\n\tconstructor(\n\t\tprivate readonly _xterm: Pick<IXtermTerminal, 'getFont'> & { raw: Terminal },\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService) {\n\t\tsuper();\n\t}\n\n\treset(): void {\n\t\tthis._lines = [];\n\t\tthis._lastCachedMarker = undefined;\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tif (this._lastCachedMarker?.isDisposed) {\n\t\t\t// the terminal was cleared, reset the cache\n\t\t\tthis._lines = [];\n\t\t\tthis._lastCachedMarker = undefined;\n\t\t}\n\t\tthis._removeViewportContent();\n\t\tthis._updateCachedContent();\n\t\tthis._updateViewportContent();\n\t\tthis._lastCachedMarker = this._register(this._xterm.raw.registerMarker());\n\t\tthis._logService.debug('Buffer content tracker: set ', this._lines.length, ' lines');\n\t}\n\n\tprivate _updateCachedContent(): void {\n\t\tconst buffer = this._xterm.raw.buffer.active;\n\t\tconst start = this._lastCachedMarker?.line ? this._lastCachedMarker.line - this._xterm.raw.rows + 1 : 0;\n\t\tconst end = buffer.baseY;\n\t\tif (start < 0 || start > end) {\n\t\t\t// in the viewport, no need to cache\n\t\t\treturn;\n\t\t}\n\n\t\t// to keep the cache size down, remove any lines that are no longer in the scrollback\n\t\tconst scrollback: number = this._configurationService.getValue(TerminalSettingId.Scrollback);\n\t\tconst maxBufferSize = scrollback + this._xterm.raw.rows - 1;\n\t\tconst linesToAdd = end - start;\n\t\tif (linesToAdd + this._lines.length > maxBufferSize) {\n\t\t\tconst numToRemove = linesToAdd + this._lines.length - maxBufferSize;\n\t\t\tfor (let i = 0; i < numToRemove; i++) {\n\t\t\t\tthis._lines.shift();\n\t\t\t}\n\t\t\tthis._logService.debug('Buffer content tracker: removed ', numToRemove, ' lines from top of cached lines, now ', this._lines.length, ' lines');\n\t\t}\n\n\t\t// iterate through the buffer lines and add them to the editor line cache\n\t\tconst cachedLines = [];\n\t\tlet currentLine: string = '';\n\t\tfor (let i = start; i < end; i++) {\n\t\t\tconst line = buffer.getLine(i);\n\t\t\tif (!line) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.bufferToEditorLineMapping.set(i, this._lines.length + cachedLines.length);\n\t\t\tconst isWrapped = buffer.getLine(i + 1)?.isWrapped;\n\t\t\tcurrentLine += line.translateToString(!isWrapped);\n\t\t\tif (currentLine && !isWrapped || i === (buffer.baseY + this._xterm.raw.rows - 1)) {\n\t\t\t\tif (line.length) {\n\t\t\t\t\tcachedLines.push(currentLine);\n\t\t\t\t\tcurrentLine = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._logService.debug('Buffer content tracker:', cachedLines.length, ' lines cached');\n\t\tthis._lines.push(...cachedLines);\n\t}\n\n\tprivate _removeViewportContent(): void {\n\t\tif (!this._lines.length) {\n\t\t\treturn;\n\t\t}\n\t\t// remove previous viewport content in case it has changed\n\t\tlet linesToRemove = this._priorEditorViewportLineCount;\n\t\tlet index = 1;\n\t\twhile (linesToRemove) {\n\t\t\tthis.bufferToEditorLineMapping.forEach((value, key) => { if (value === this._lines.length - index) { this.bufferToEditorLineMapping.delete(key); } });\n\t\t\tthis._lines.pop();\n\t\t\tindex++;\n\t\t\tlinesToRemove--;\n\t\t}\n\t\tthis._logService.debug('Buffer content tracker: removed lines from viewport, now ', this._lines.length, ' lines cached');\n\t}\n\n\tprivate _updateViewportContent(): void {\n\t\tconst buffer = this._xterm.raw.buffer.active;\n\t\tthis._priorEditorViewportLineCount = 0;\n\t\tlet currentLine: string = '';\n\t\tfor (let i = buffer.baseY; i < buffer.baseY + this._xterm.raw.rows; i++) {\n\t\t\tconst line = buffer.getLine(i);\n\t\t\tif (!line) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.bufferToEditorLineMapping.set(i, this._lines.length);\n\t\t\tconst isWrapped = buffer.getLine(i + 1)?.isWrapped;\n\t\t\tcurrentLine += line.translateToString(!isWrapped);\n\t\t\tif (currentLine && !isWrapped || i === (buffer.baseY + this._xterm.raw.rows - 1)) {\n\t\t\t\tif (currentLine.length) {\n\t\t\t\t\tthis._priorEditorViewportLineCount++;\n\t\t\t\t\tthis._lines.push(currentLine);\n\t\t\t\t\tcurrentLine = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._logService.debug('Viewport content update complete, ', this._lines.length, ' lines in the viewport');\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
