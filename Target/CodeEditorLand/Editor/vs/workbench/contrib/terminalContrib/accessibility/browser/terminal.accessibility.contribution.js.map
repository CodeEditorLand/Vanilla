{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/accessibility/browser/terminal.accessibility.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal } from \"@xterm/xterm\";\nimport { Event } from \"../../../../../base/common/event.js\";\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { isWindows } from \"../../../../../base/common/platform.js\";\nimport { Position } from \"../../../../../editor/common/core/position.js\";\nimport { localize2 } from \"../../../../../nls.js\";\nimport {\n\tAccessibleViewProviderId,\n\tIAccessibleViewService,\n\tNavigationType,\n} from \"../../../../../platform/accessibility/browser/accessibleView.js\";\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from \"../../../../../platform/accessibility/common/accessibility.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\ttype ITerminalCommand,\n\tTerminalCapability,\n} from \"../../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport type { ICurrentPartialCommand } from \"../../../../../platform/terminal/common/capabilities/commandDetection/terminalCommand.js\";\nimport { TerminalSettingId } from \"../../../../../platform/terminal/common/terminal.js\";\nimport {\n\taccessibleViewCurrentProviderId,\n\taccessibleViewIsShown,\n} from \"../../../accessibility/browser/accessibilityConfiguration.js\";\nimport {\n\tAccessibilityHelpAction,\n\tAccessibleViewAction,\n} from \"../../../accessibility/browser/accessibleViewActions.js\";\nimport {\n\ttype ITerminalContribution,\n\ttype ITerminalInstance,\n\tITerminalService,\n\ttype IXtermTerminal,\n} from \"../../../terminal/browser/terminal.js\";\nimport { registerTerminalAction } from \"../../../terminal/browser/terminalActions.js\";\nimport { registerTerminalContribution } from \"../../../terminal/browser/terminalExtensions.js\";\nimport type { TerminalWidgetManager } from \"../../../terminal/browser/widgets/widgetManager.js\";\nimport type { ITerminalProcessManager } from \"../../../terminal/common/terminal.js\";\nimport { TerminalContextKeys } from \"../../../terminal/common/terminalContextKey.js\";\nimport { TerminalAccessibilityCommandId } from \"../common/terminal.accessibility.js\";\nimport { TerminalAccessibilitySettingId } from \"../common/terminalAccessibilityConfiguration.js\";\nimport { BufferContentTracker } from \"./bufferContentTracker.js\";\nimport { TerminalAccessibilityHelpProvider } from \"./terminalAccessibilityHelp.js\";\nimport {\n\ttype ICommandWithEditorLine,\n\tTerminalAccessibleBufferProvider,\n} from \"./terminalAccessibleBufferProvider.js\";\nimport { TextAreaSyncAddon } from \"./textAreaSyncAddon.js\";\n\n// #region Terminal Contributions\n\nclass TextAreaSyncContribution\n\textends DisposableStore\n\timplements ITerminalContribution\n{\n\tstatic readonly ID = \"terminal.textAreaSync\";\n\tstatic get(instance: ITerminalInstance): TextAreaSyncContribution | null {\n\t\treturn instance.getContribution<TextAreaSyncContribution>(\n\t\t\tTextAreaSyncContribution.ID,\n\t\t);\n\t}\n\tprivate _addon: TextAreaSyncAddon | undefined;\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\tlayout(xterm: IXtermTerminal & { raw: Terminal }): void {\n\t\tif (this._addon) {\n\t\t\treturn;\n\t\t}\n\t\tthis._addon = this.add(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tTextAreaSyncAddon,\n\t\t\t\tthis._instance.capabilities,\n\t\t\t),\n\t\t);\n\t\txterm.raw.loadAddon(this._addon);\n\t\tthis._addon.activate(xterm.raw);\n\t}\n}\nregisterTerminalContribution(\n\tTextAreaSyncContribution.ID,\n\tTextAreaSyncContribution,\n);\n\nexport class TerminalAccessibleViewContribution\n\textends Disposable\n\timplements ITerminalContribution\n{\n\tstatic readonly ID = \"terminal.accessibleBufferProvider\";\n\tstatic get(\n\t\tinstance: ITerminalInstance,\n\t): TerminalAccessibleViewContribution | null {\n\t\treturn instance.getContribution<TerminalAccessibleViewContribution>(\n\t\t\tTerminalAccessibleViewContribution.ID,\n\t\t);\n\t}\n\tprivate _bufferTracker: BufferContentTracker | undefined;\n\tprivate _bufferProvider: TerminalAccessibleBufferProvider | undefined;\n\tprivate _xterm:\n\t\t| (Pick<IXtermTerminal, \"shellIntegration\" | \"getFont\"> & {\n\t\t\t\traw: Terminal;\n\t\t  })\n\t\t| undefined;\n\tprivate readonly _onDidRunCommand: MutableDisposable<IDisposable> =\n\t\tnew MutableDisposable();\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IAccessibleViewService\n\t\tprivate readonly _accessibleViewService: IAccessibleViewService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@IContextKeyService\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t\t@IAccessibilitySignalService\n\t\tprivate readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tAccessibleViewAction.addImplementation(\n\t\t\t\t90,\n\t\t\t\t\"terminal\",\n\t\t\t\t() => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._terminalService.activeInstance !== this._instance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tthis.show();\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tTerminalContextKeys.focus,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\t_instance.onDidExecuteText(() => {\n\t\t\t\tconst focusAfterRun = _configurationService.getValue(\n\t\t\t\t\tTerminalSettingId.FocusAfterRun,\n\t\t\t\t);\n\t\t\t\tif (focusAfterRun === \"terminal\") {\n\t\t\t\t\t_instance.focus(true);\n\t\t\t\t} else if (focusAfterRun === \"accessible-buffer\") {\n\t\t\t\t\tthis.show();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tTerminalAccessibilitySettingId.AccessibleViewFocusOnCommandExecution,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis._updateCommandExecutedListener();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._instance.capabilities.onDidAddCapability((e) => {\n\t\t\t\tif (e.capability.type === TerminalCapability.CommandDetection) {\n\t\t\t\t\tthis._updateCommandExecutedListener();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: Terminal }): void {\n\t\tconst addon = this._instantiationService.createInstance(\n\t\t\tTextAreaSyncAddon,\n\t\t\tthis._instance.capabilities,\n\t\t);\n\t\txterm.raw.loadAddon(addon);\n\t\taddon.activate(xterm.raw);\n\t\tthis._xterm = xterm;\n\t\tthis._register(\n\t\t\tthis._xterm.raw.onWriteParsed(async () => {\n\t\t\t\tif (this._terminalService.activeInstance !== this._instance) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis._isTerminalAccessibleViewOpen() &&\n\t\t\t\t\tthis._xterm!.raw.buffer.active.baseY === 0\n\t\t\t\t) {\n\t\t\t\t\tthis.show();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst onRequestUpdateEditor = Event.latch(this._xterm.raw.onScroll);\n\t\tthis._register(\n\t\t\tonRequestUpdateEditor(() => {\n\t\t\t\tif (this._terminalService.activeInstance !== this._instance) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this._isTerminalAccessibleViewOpen()) {\n\t\t\t\t\tthis.show();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _updateCommandExecutedListener(): void {\n\t\tif (\n\t\t\t!this._instance.capabilities.has(\n\t\t\t\tTerminalCapability.CommandDetection,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\t!this._configurationService.getValue(\n\t\t\t\tTerminalAccessibilitySettingId.AccessibleViewFocusOnCommandExecution,\n\t\t\t)\n\t\t) {\n\t\t\tthis._onDidRunCommand.clear();\n\t\t\treturn;\n\t\t} else if (this._onDidRunCommand.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst capability = this._instance.capabilities.get(\n\t\t\tTerminalCapability.CommandDetection,\n\t\t)!;\n\t\tthis._onDidRunCommand.value = this._register(\n\t\t\tcapability.onCommandExecuted(() => {\n\t\t\t\tif (this._instance.hasFocus) {\n\t\t\t\t\tthis.show();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _isTerminalAccessibleViewOpen(): boolean {\n\t\treturn (\n\t\t\taccessibleViewCurrentProviderId.getValue(\n\t\t\t\tthis._contextKeyService,\n\t\t\t) === AccessibleViewProviderId.Terminal\n\t\t);\n\t}\n\n\tshow(): void {\n\t\tif (!this._xterm) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._bufferTracker) {\n\t\t\tthis._bufferTracker = this._register(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tBufferContentTracker,\n\t\t\t\t\tthis._xterm,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (!this._bufferProvider) {\n\t\t\tthis._bufferProvider = this._register(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tTerminalAccessibleBufferProvider,\n\t\t\t\t\tthis._instance,\n\t\t\t\t\tthis._bufferTracker,\n\t\t\t\t\t() => {\n\t\t\t\t\t\treturn this._register(\n\t\t\t\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\t\t\t\tTerminalAccessibilityHelpProvider,\n\t\t\t\t\t\t\t\tthis._instance,\n\t\t\t\t\t\t\t\tthis._xterm!,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t).provideContent();\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tconst position = this._configurationService.getValue(\n\t\t\tTerminalAccessibilitySettingId.AccessibleViewPreserveCursorPosition,\n\t\t)\n\t\t\t? this._accessibleViewService.getPosition(\n\t\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tthis._accessibleViewService.show(this._bufferProvider, position);\n\t}\n\tnavigateToCommand(type: NavigationType): void {\n\t\tconst currentLine = this._accessibleViewService.getPosition(\n\t\t\tAccessibleViewProviderId.Terminal,\n\t\t)?.lineNumber;\n\t\tconst commands = this._getCommandsWithEditorLine();\n\t\tif (!commands?.length || !currentLine) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filteredCommands =\n\t\t\ttype === NavigationType.Previous\n\t\t\t\t? commands\n\t\t\t\t\t\t.filter((c) => c.lineNumber < currentLine)\n\t\t\t\t\t\t.sort((a, b) => b.lineNumber - a.lineNumber)\n\t\t\t\t: commands\n\t\t\t\t\t\t.filter((c) => c.lineNumber > currentLine)\n\t\t\t\t\t\t.sort((a, b) => a.lineNumber - b.lineNumber);\n\t\tif (!filteredCommands.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst command = filteredCommands[0];\n\t\tconst commandLine = command.command.command;\n\t\tif (!isWindows && commandLine) {\n\t\t\tthis._accessibleViewService.setPosition(\n\t\t\t\tnew Position(command.lineNumber, 1),\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\talert(commandLine);\n\t\t} else {\n\t\t\tthis._accessibleViewService.setPosition(\n\t\t\t\tnew Position(command.lineNumber, 1),\n\t\t\t\ttrue,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\n\t\tif (command.exitCode) {\n\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\tAccessibilitySignal.terminalCommandFailed,\n\t\t\t);\n\t\t} else {\n\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\tAccessibilitySignal.terminalCommandSucceeded,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _getCommandsWithEditorLine(): ICommandWithEditorLine[] | undefined {\n\t\tconst capability = this._instance.capabilities.get(\n\t\t\tTerminalCapability.CommandDetection,\n\t\t);\n\t\tconst commands = capability?.commands;\n\t\tconst currentCommand = capability?.currentCommand;\n\t\tif (!commands?.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst result: ICommandWithEditorLine[] = [];\n\t\tfor (const command of commands) {\n\t\t\tconst lineNumber = this._getEditorLineForCommand(command);\n\t\t\tif (!lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult.push({ command, lineNumber, exitCode: command.exitCode });\n\t\t}\n\t\tif (currentCommand) {\n\t\t\tconst lineNumber = this._getEditorLineForCommand(currentCommand);\n\t\t\tif (!!lineNumber) {\n\t\t\t\tresult.push({ command: currentCommand, lineNumber });\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _getEditorLineForCommand(\n\t\tcommand: ITerminalCommand | ICurrentPartialCommand,\n\t): number | undefined {\n\t\tif (!this._bufferTracker) {\n\t\t\treturn;\n\t\t}\n\t\tlet line: number | undefined;\n\t\tif (\"marker\" in command) {\n\t\t\tline = command.marker?.line;\n\t\t} else if (\"commandStartMarker\" in command) {\n\t\t\tline = command.commandStartMarker?.line;\n\t\t}\n\t\tif (line === undefined || line < 0) {\n\t\t\treturn;\n\t\t}\n\t\tline = this._bufferTracker.bufferToEditorLineMapping.get(line);\n\t\tif (line === undefined) {\n\t\t\treturn;\n\t\t}\n\t\treturn line + 1;\n\t}\n}\nregisterTerminalContribution(\n\tTerminalAccessibleViewContribution.ID,\n\tTerminalAccessibleViewContribution,\n);\n\nexport class TerminalAccessibilityHelpContribution extends Disposable {\n\tstatic ID: \"terminalAccessibilityHelpContribution\";\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tAccessibilityHelpAction.addImplementation(\n\t\t\t\t105,\n\t\t\t\t\"terminal\",\n\t\t\t\tasync (accessor) => {\n\t\t\t\t\tconst instantiationService = accessor.get(\n\t\t\t\t\t\tIInstantiationService,\n\t\t\t\t\t);\n\t\t\t\t\tconst terminalService = accessor.get(ITerminalService);\n\t\t\t\t\tconst accessibleViewService = accessor.get(\n\t\t\t\t\t\tIAccessibleViewService,\n\t\t\t\t\t);\n\t\t\t\t\tconst instance =\n\t\t\t\t\t\tawait terminalService.getActiveOrCreateInstance();\n\t\t\t\t\tawait terminalService.revealActiveTerminal();\n\t\t\t\t\tconst terminal = instance?.xterm;\n\t\t\t\t\tif (!terminal) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\taccessibleViewService.show(\n\t\t\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\t\t\tTerminalAccessibilityHelpProvider,\n\t\t\t\t\t\t\tinstance,\n\t\t\t\t\t\t\tterminal,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\tTerminalContextKeys.focus,\n\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\taccessibleViewIsShown,\n\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\taccessibleViewCurrentProviderId.key,\n\t\t\t\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n}\nregisterTerminalContribution(\n\tTerminalAccessibilityHelpContribution.ID,\n\tTerminalAccessibilityHelpContribution,\n);\n\n// #endregion\n\n// #region Actions\n\nclass FocusAccessibleBufferAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TerminalAccessibilityCommandId.FocusAccessibleBuffer,\n\t\t\ttitle: localize2(\n\t\t\t\t\"workbench.action.terminal.focusAccessibleBuffer\",\n\t\t\t\t\"Focus Accessible Terminal View\",\n\t\t\t),\n\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\tTerminalContextKeys.processSupported,\n\t\t\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t\t\t),\n\t\t\tkeybinding: [\n\t\t\t\t{\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.F2,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.UpArrow],\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.F2 | KeyMod.Shift,\n\t\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.UpArrow],\n\t\t\t\t\t},\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED,\n\t\t\t\t\t\tTerminalContextKeys.focus,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\t...args: any[]\n\t): Promise<void> {\n\t\tconst terminalService = accessor.get(ITerminalService);\n\t\tconst terminal = await terminalService.getActiveOrCreateInstance();\n\t\tif (!terminal?.xterm) {\n\t\t\treturn;\n\t\t}\n\t\tTerminalAccessibleViewContribution.get(terminal)?.show();\n\t}\n}\nregisterAction2(FocusAccessibleBufferAction);\n\nregisterTerminalAction({\n\tid: TerminalAccessibilityCommandId.AccessibleBufferGoToNextCommand,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.accessibleBufferGoToNextCommand\",\n\t\t\"Accessible Buffer Go to Next Command\",\n\t),\n\tprecondition: ContextKeyExpr.or(\n\t\tTerminalContextKeys.processSupported,\n\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t\tContextKeyExpr.and(\n\t\t\taccessibleViewIsShown,\n\t\t\tContextKeyExpr.equals(\n\t\t\t\taccessibleViewCurrentProviderId.key,\n\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t),\n\t\t),\n\t),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.Alt | KeyCode.DownArrow,\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\taccessibleViewIsShown,\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\taccessibleViewCurrentProviderId.key,\n\t\t\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 2,\n\t\t},\n\t],\n\trun: async (c) => {\n\t\tconst instance = await c.service.activeInstance;\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\t\tawait TerminalAccessibleViewContribution.get(\n\t\t\tinstance,\n\t\t)?.navigateToCommand(NavigationType.Next);\n\t},\n});\n\nregisterTerminalAction({\n\tid: TerminalAccessibilityCommandId.AccessibleBufferGoToPreviousCommand,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.accessibleBufferGoToPreviousCommand\",\n\t\t\"Accessible Buffer Go to Previous Command\",\n\t),\n\tprecondition: ContextKeyExpr.and(\n\t\tContextKeyExpr.or(\n\t\t\tTerminalContextKeys.processSupported,\n\t\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t\t),\n\t\tContextKeyExpr.and(\n\t\t\taccessibleViewIsShown,\n\t\t\tContextKeyExpr.equals(\n\t\t\t\taccessibleViewCurrentProviderId.key,\n\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t),\n\t\t),\n\t),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.Alt | KeyCode.UpArrow,\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\taccessibleViewIsShown,\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\taccessibleViewCurrentProviderId.key,\n\t\t\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 2,\n\t\t},\n\t],\n\trun: async (c) => {\n\t\tconst instance = await c.service.activeInstance;\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\t\tawait TerminalAccessibleViewContribution.get(\n\t\t\tinstance,\n\t\t)?.navigateToCommand(NavigationType.Previous);\n\t},\n});\n\nregisterTerminalAction({\n\tid: TerminalAccessibilityCommandId.ScrollToBottomAccessibleView,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.scrollToBottomAccessibleView\",\n\t\t\"Scroll to Accessible View Bottom\",\n\t),\n\tprecondition: ContextKeyExpr.and(\n\t\tContextKeyExpr.or(\n\t\t\tTerminalContextKeys.processSupported,\n\t\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t\t),\n\t\tContextKeyExpr.and(\n\t\t\taccessibleViewIsShown,\n\t\t\tContextKeyExpr.equals(\n\t\t\t\taccessibleViewCurrentProviderId.key,\n\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t),\n\t\t),\n\t),\n\tkeybinding: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.End,\n\t\tlinux: { primary: KeyMod.Shift | KeyCode.End },\n\t\twhen: accessibleViewCurrentProviderId.isEqualTo(\n\t\t\tAccessibleViewProviderId.Terminal,\n\t\t),\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t},\n\trun: (c, accessor) => {\n\t\tconst accessibleViewService = accessor.get(IAccessibleViewService);\n\t\tconst lastPosition = accessibleViewService.getLastPosition();\n\t\tif (!lastPosition) {\n\t\t\treturn;\n\t\t}\n\t\taccessibleViewService.setPosition(lastPosition, true);\n\t},\n});\n\nregisterTerminalAction({\n\tid: TerminalAccessibilityCommandId.ScrollToTopAccessibleView,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.scrollToTopAccessibleView\",\n\t\t\"Scroll to Accessible View Top\",\n\t),\n\tprecondition: ContextKeyExpr.and(\n\t\tContextKeyExpr.or(\n\t\t\tTerminalContextKeys.processSupported,\n\t\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t\t),\n\t\tContextKeyExpr.and(\n\t\t\taccessibleViewIsShown,\n\t\t\tContextKeyExpr.equals(\n\t\t\t\taccessibleViewCurrentProviderId.key,\n\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t),\n\t\t),\n\t),\n\tkeybinding: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Home,\n\t\tlinux: { primary: KeyMod.Shift | KeyCode.Home },\n\t\twhen: accessibleViewCurrentProviderId.isEqualTo(\n\t\t\tAccessibleViewProviderId.Terminal,\n\t\t),\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t},\n\trun: (c, accessor) => {\n\t\tconst accessibleViewService = accessor.get(IAccessibleViewService);\n\t\taccessibleViewService.setPosition(new Position(1, 1), true);\n\t},\n});\n\n// #endregion\n"],
  "mappings": "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",
  "names": []
}
