{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/accessibility/browser/terminal.accessibility.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { localize2 } from '../../../../../nls.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { Action2, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ITerminalCommand, TerminalCapability } from '../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { AccessibilityHelpAction, AccessibleViewAction } from '../../../accessibility/browser/accessibleViewActions.js';\nimport { ITerminalContribution, ITerminalInstance, ITerminalService, IXtermTerminal } from '../../../terminal/browser/terminal.js';\nimport { registerTerminalAction } from '../../../terminal/browser/terminalActions.js';\nimport { registerTerminalContribution } from '../../../terminal/browser/terminalExtensions.js';\nimport { TerminalWidgetManager } from '../../../terminal/browser/widgets/widgetManager.js';\nimport { ITerminalProcessManager } from '../../../terminal/common/terminal.js';\nimport { TerminalContextKeys } from '../../../terminal/common/terminalContextKey.js';\nimport { BufferContentTracker } from './bufferContentTracker.js';\nimport { TerminalAccessibilityHelpProvider } from './terminalAccessibilityHelp.js';\nimport { TextAreaSyncAddon } from './textAreaSyncAddon.js';\nimport type { Terminal } from '@xterm/xterm';\nimport { Position } from '../../../../../editor/common/core/position.js';\nimport { ICommandWithEditorLine, TerminalAccessibleBufferProvider } from './terminalAccessibleBufferProvider.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TerminalSettingId } from '../../../../../platform/terminal/common/terminal.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { ICurrentPartialCommand } from '../../../../../platform/terminal/common/capabilities/commandDetection/terminalCommand.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { TerminalAccessibilitySettingId } from '../common/terminalAccessibilityConfiguration.js';\nimport { TerminalAccessibilityCommandId } from '../common/terminal.accessibility.js';\nimport { IAccessibleViewService, AccessibleViewProviderId, NavigationType } from '../../../../../platform/accessibility/browser/accessibleView.js';\nimport { accessibleViewCurrentProviderId, accessibleViewIsShown } from '../../../accessibility/browser/accessibilityConfiguration.js';\nimport { isWindows } from '../../../../../base/common/platform.js';\n\n// #region Terminal Contributions\n\nclass TextAreaSyncContribution extends DisposableStore implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.textAreaSync';\n\tstatic get(instance: ITerminalInstance): TextAreaSyncContribution | null {\n\t\treturn instance.getContribution<TextAreaSyncContribution>(TextAreaSyncContribution.ID);\n\t}\n\tprivate _addon: TextAreaSyncAddon | undefined;\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t}\n\tlayout(xterm: IXtermTerminal & { raw: Terminal }): void {\n\t\tif (this._addon) {\n\t\t\treturn;\n\t\t}\n\t\tthis._addon = this.add(this._instantiationService.createInstance(TextAreaSyncAddon, this._instance.capabilities));\n\t\txterm.raw.loadAddon(this._addon);\n\t\tthis._addon.activate(xterm.raw);\n\t}\n}\nregisterTerminalContribution(TextAreaSyncContribution.ID, TextAreaSyncContribution);\n\nexport class TerminalAccessibleViewContribution extends Disposable implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.accessibleBufferProvider';\n\tstatic get(instance: ITerminalInstance): TerminalAccessibleViewContribution | null {\n\t\treturn instance.getContribution<TerminalAccessibleViewContribution>(TerminalAccessibleViewContribution.ID);\n\t}\n\tprivate _bufferTracker: BufferContentTracker | undefined;\n\tprivate _bufferProvider: TerminalAccessibleBufferProvider | undefined;\n\tprivate _xterm: Pick<IXtermTerminal, 'shellIntegration' | 'getFont'> & { raw: Terminal } | undefined;\n\tprivate readonly _onDidRunCommand: MutableDisposable<IDisposable> = new MutableDisposable();\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IAccessibleViewService private readonly _accessibleViewService: IAccessibleViewService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService) {\n\t\tsuper();\n\t\tthis._register(AccessibleViewAction.addImplementation(90, 'terminal', () => {\n\t\t\tif (this._terminalService.activeInstance !== this._instance) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.show();\n\t\t\treturn true;\n\t\t}, TerminalContextKeys.focus));\n\t\tthis._register(_instance.onDidExecuteText(() => {\n\t\t\tconst focusAfterRun = _configurationService.getValue(TerminalSettingId.FocusAfterRun);\n\t\t\tif (focusAfterRun === 'terminal') {\n\t\t\t\t_instance.focus(true);\n\t\t\t} else if (focusAfterRun === 'accessible-buffer') {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TerminalAccessibilitySettingId.AccessibleViewFocusOnCommandExecution)) {\n\t\t\t\tthis._updateCommandExecutedListener();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._instance.capabilities.onDidAddCapability(e => {\n\t\t\tif (e.capability.type === TerminalCapability.CommandDetection) {\n\t\t\t\tthis._updateCommandExecutedListener();\n\t\t\t}\n\t\t}));\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: Terminal }): void {\n\t\tconst addon = this._instantiationService.createInstance(TextAreaSyncAddon, this._instance.capabilities);\n\t\txterm.raw.loadAddon(addon);\n\t\taddon.activate(xterm.raw);\n\t\tthis._xterm = xterm;\n\t\tthis._register(this._xterm.raw.onWriteParsed(async () => {\n\t\t\tif (this._terminalService.activeInstance !== this._instance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._isTerminalAccessibleViewOpen() && this._xterm!.raw.buffer.active.baseY === 0) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t}));\n\n\t\tconst onRequestUpdateEditor = Event.latch(this._xterm.raw.onScroll);\n\t\tthis._register(onRequestUpdateEditor(() => {\n\t\t\tif (this._terminalService.activeInstance !== this._instance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._isTerminalAccessibleViewOpen()) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _updateCommandExecutedListener(): void {\n\t\tif (!this._instance.capabilities.has(TerminalCapability.CommandDetection)) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._configurationService.getValue(TerminalAccessibilitySettingId.AccessibleViewFocusOnCommandExecution)) {\n\t\t\tthis._onDidRunCommand.clear();\n\t\t\treturn;\n\t\t} else if (this._onDidRunCommand.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst capability = this._instance.capabilities.get(TerminalCapability.CommandDetection)!;\n\t\tthis._onDidRunCommand.value = this._register(capability.onCommandExecuted(() => {\n\t\t\tif (this._instance.hasFocus) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _isTerminalAccessibleViewOpen(): boolean {\n\t\treturn accessibleViewCurrentProviderId.getValue(this._contextKeyService) === AccessibleViewProviderId.Terminal;\n\t}\n\n\tshow(): void {\n\t\tif (!this._xterm) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._bufferTracker) {\n\t\t\tthis._bufferTracker = this._register(this._instantiationService.createInstance(BufferContentTracker, this._xterm));\n\t\t}\n\t\tif (!this._bufferProvider) {\n\t\t\tthis._bufferProvider = this._register(this._instantiationService.createInstance(TerminalAccessibleBufferProvider, this._instance, this._bufferTracker, () => {\n\t\t\t\treturn this._register(this._instantiationService.createInstance(TerminalAccessibilityHelpProvider, this._instance, this._xterm!)).provideContent();\n\t\t\t}));\n\t\t}\n\t\tconst position = this._configurationService.getValue(TerminalAccessibilitySettingId.AccessibleViewPreserveCursorPosition) ? this._accessibleViewService.getPosition(AccessibleViewProviderId.Terminal) : undefined;\n\t\tthis._accessibleViewService.show(this._bufferProvider, position);\n\t}\n\tnavigateToCommand(type: NavigationType): void {\n\t\tconst currentLine = this._accessibleViewService.getPosition(AccessibleViewProviderId.Terminal)?.lineNumber;\n\t\tconst commands = this._getCommandsWithEditorLine();\n\t\tif (!commands?.length || !currentLine) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filteredCommands = type === NavigationType.Previous ? commands.filter(c => c.lineNumber < currentLine).sort((a, b) => b.lineNumber - a.lineNumber) : commands.filter(c => c.lineNumber > currentLine).sort((a, b) => a.lineNumber - b.lineNumber);\n\t\tif (!filteredCommands.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst command = filteredCommands[0];\n\t\tconst commandLine = command.command.command;\n\t\tif (!isWindows && commandLine) {\n\t\t\tthis._accessibleViewService.setPosition(new Position(command.lineNumber, 1), true);\n\t\t\talert(commandLine);\n\t\t} else {\n\t\t\tthis._accessibleViewService.setPosition(new Position(command.lineNumber, 1), true, true);\n\t\t}\n\n\t\tif (command.exitCode) {\n\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.terminalCommandFailed);\n\t\t} else {\n\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.terminalCommandSucceeded);\n\t\t}\n\t}\n\n\tprivate _getCommandsWithEditorLine(): ICommandWithEditorLine[] | undefined {\n\t\tconst capability = this._instance.capabilities.get(TerminalCapability.CommandDetection);\n\t\tconst commands = capability?.commands;\n\t\tconst currentCommand = capability?.currentCommand;\n\t\tif (!commands?.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst result: ICommandWithEditorLine[] = [];\n\t\tfor (const command of commands) {\n\t\t\tconst lineNumber = this._getEditorLineForCommand(command);\n\t\t\tif (!lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult.push({ command, lineNumber, exitCode: command.exitCode });\n\t\t}\n\t\tif (currentCommand) {\n\t\t\tconst lineNumber = this._getEditorLineForCommand(currentCommand);\n\t\t\tif (!!lineNumber) {\n\t\t\t\tresult.push({ command: currentCommand, lineNumber });\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _getEditorLineForCommand(command: ITerminalCommand | ICurrentPartialCommand): number | undefined {\n\t\tif (!this._bufferTracker) {\n\t\t\treturn;\n\t\t}\n\t\tlet line: number | undefined;\n\t\tif ('marker' in command) {\n\t\t\tline = command.marker?.line;\n\t\t} else if ('commandStartMarker' in command) {\n\t\t\tline = command.commandStartMarker?.line;\n\t\t}\n\t\tif (line === undefined || line < 0) {\n\t\t\treturn;\n\t\t}\n\t\tline = this._bufferTracker.bufferToEditorLineMapping.get(line);\n\t\tif (line === undefined) {\n\t\t\treturn;\n\t\t}\n\t\treturn line + 1;\n\t}\n\n}\nregisterTerminalContribution(TerminalAccessibleViewContribution.ID, TerminalAccessibleViewContribution);\n\nexport class TerminalAccessibilityHelpContribution extends Disposable {\n\tstatic ID: 'terminalAccessibilityHelpContribution';\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(AccessibilityHelpAction.addImplementation(105, 'terminal', async accessor => {\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst terminalService = accessor.get(ITerminalService);\n\t\t\tconst accessibleViewService = accessor.get(IAccessibleViewService);\n\t\t\tconst instance = await terminalService.getActiveOrCreateInstance();\n\t\t\tawait terminalService.revealActiveTerminal();\n\t\t\tconst terminal = instance?.xterm;\n\t\t\tif (!terminal) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\taccessibleViewService.show(instantiationService.createInstance(TerminalAccessibilityHelpProvider, instance, terminal));\n\t\t}, ContextKeyExpr.or(TerminalContextKeys.focus, ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Terminal)))));\n\t}\n}\nregisterTerminalContribution(TerminalAccessibilityHelpContribution.ID, TerminalAccessibilityHelpContribution);\n\n// #endregion\n\n// #region Actions\n\nclass FocusAccessibleBufferAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TerminalAccessibilityCommandId.FocusAccessibleBuffer,\n\t\t\ttitle: localize2('workbench.action.terminal.focusAccessibleBuffer', \"Focus Accessible Terminal View\"),\n\t\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\t\tkeybinding: [\n\t\t\t\t{\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.F2,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.UpArrow],\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.F2 | KeyMod.Shift,\n\t\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.UpArrow]\n\t\t\t\t\t},\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, TerminalContextKeys.focus)\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\toverride async run(accessor: ServicesAccessor, ...args: any[]): Promise<void> {\n\t\tconst terminalService = accessor.get(ITerminalService);\n\t\tconst terminal = await terminalService.getActiveOrCreateInstance();\n\t\tif (!terminal?.xterm) {\n\t\t\treturn;\n\t\t}\n\t\tTerminalAccessibleViewContribution.get(terminal)?.show();\n\t}\n}\nregisterAction2(FocusAccessibleBufferAction);\n\nregisterTerminalAction({\n\tid: TerminalAccessibilityCommandId.AccessibleBufferGoToNextCommand,\n\ttitle: localize2('workbench.action.terminal.accessibleBufferGoToNextCommand', \"Accessible Buffer Go to Next Command\"),\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated, ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Terminal))),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.Alt | KeyCode.DownArrow,\n\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Terminal))),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 2\n\t\t}\n\t],\n\trun: async (c) => {\n\t\tconst instance = await c.service.activeInstance;\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\t\tawait TerminalAccessibleViewContribution.get(instance)?.navigateToCommand(NavigationType.Next);\n\t}\n});\n\nregisterTerminalAction({\n\tid: TerminalAccessibilityCommandId.AccessibleBufferGoToPreviousCommand,\n\ttitle: localize2('workbench.action.terminal.accessibleBufferGoToPreviousCommand', \"Accessible Buffer Go to Previous Command\"),\n\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Terminal))),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.Alt | KeyCode.UpArrow,\n\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Terminal))),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 2\n\t\t}\n\t],\n\trun: async (c) => {\n\t\tconst instance = await c.service.activeInstance;\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\t\tawait TerminalAccessibleViewContribution.get(instance)?.navigateToCommand(NavigationType.Previous);\n\t}\n});\n\nregisterTerminalAction({\n\tid: TerminalAccessibilityCommandId.ScrollToBottomAccessibleView,\n\ttitle: localize2('workbench.action.terminal.scrollToBottomAccessibleView', 'Scroll to Accessible View Bottom'),\n\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Terminal))),\n\tkeybinding: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.End,\n\t\tlinux: { primary: KeyMod.Shift | KeyCode.End },\n\t\twhen: accessibleViewCurrentProviderId.isEqualTo(AccessibleViewProviderId.Terminal),\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\trun: (c, accessor) => {\n\t\tconst accessibleViewService = accessor.get(IAccessibleViewService);\n\t\tconst lastPosition = accessibleViewService.getLastPosition();\n\t\tif (!lastPosition) {\n\t\t\treturn;\n\t\t}\n\t\taccessibleViewService.setPosition(lastPosition, true);\n\t}\n});\n\nregisterTerminalAction({\n\tid: TerminalAccessibilityCommandId.ScrollToTopAccessibleView,\n\ttitle: localize2('workbench.action.terminal.scrollToTopAccessibleView', 'Scroll to Accessible View Top'),\n\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Terminal))),\n\tkeybinding: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Home,\n\t\tlinux: { primary: KeyMod.Shift | KeyCode.Home },\n\t\twhen: accessibleViewCurrentProviderId.isEqualTo(AccessibleViewProviderId.Terminal),\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\trun: (c, accessor) => {\n\t\tconst accessibleViewService = accessor.get(IAccessibleViewService);\n\t\taccessibleViewService.setPosition(new Position(1, 1), true);\n\t}\n});\n\n// #endregion\n"],
  "mappings": "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",
  "names": []
}
