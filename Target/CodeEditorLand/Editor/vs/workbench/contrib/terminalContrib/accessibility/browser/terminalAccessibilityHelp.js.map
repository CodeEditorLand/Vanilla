{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/accessibility/browser/terminalAccessibilityHelp.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal } from \"@xterm/xterm\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\tAccessibleViewProviderId,\n\tAccessibleViewType,\n\ttype IAccessibleViewContentProvider,\n\ttype IAccessibleViewOptions,\n} from \"../../../../../platform/accessibility/browser/accessibleView.js\";\nimport { ICommandService } from \"../../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tShellIntegrationStatus,\n\tTerminalSettingId,\n\tWindowsShellType,\n} from \"../../../../../platform/terminal/common/terminal.js\";\nimport {\n\tAccessibilityVerbositySettingId,\n\taccessibleViewCurrentProviderId,\n\taccessibleViewIsShown,\n} from \"../../../accessibility/browser/accessibilityConfiguration.js\";\nimport { AccessibilityCommandId } from \"../../../accessibility/common/accessibilityCommands.js\";\nimport type {\n\tITerminalInstance,\n\tIXtermTerminal,\n} from \"../../../terminal/browser/terminal.js\";\nimport { TerminalCommandId } from \"../../../terminal/common/terminal.js\";\nimport { TerminalLinksCommandId } from \"../../links/common/terminal.links.js\";\nimport { TerminalAccessibilityCommandId } from \"../common/terminal.accessibility.js\";\nimport { TerminalAccessibilitySettingId } from \"../common/terminalAccessibilityConfiguration.js\";\n\nexport enum ClassName {\n\tActive = \"active\",\n\tEditorTextArea = \"textarea\",\n}\n\nexport class TerminalAccessibilityHelpProvider\n\textends Disposable\n\timplements IAccessibleViewContentProvider\n{\n\tid = AccessibleViewProviderId.TerminalHelp;\n\tprivate readonly _hasShellIntegration: boolean = false;\n\tonClose() {\n\t\tconst expr = ContextKeyExpr.and(\n\t\t\taccessibleViewIsShown,\n\t\t\tContextKeyExpr.equals(\n\t\t\t\taccessibleViewCurrentProviderId.key,\n\t\t\t\tAccessibleViewProviderId.TerminalHelp,\n\t\t\t),\n\t\t);\n\t\tif (expr?.evaluate(this._contextKeyService.getContext(null))) {\n\t\t\tthis._commandService.executeCommand(\n\t\t\t\tTerminalAccessibilityCommandId.FocusAccessibleBuffer,\n\t\t\t);\n\t\t} else {\n\t\t\tthis._instance.focus();\n\t\t}\n\t\tthis.dispose();\n\t}\n\toptions: IAccessibleViewOptions = {\n\t\ttype: AccessibleViewType.Help,\n\t\treadMoreUrl:\n\t\t\t\"https://code.visualstudio.com/docs/editor/accessibility#_terminal-accessibility\",\n\t};\n\tverbositySettingKey = AccessibilityVerbositySettingId.Terminal;\n\n\tconstructor(\n\t\tprivate readonly _instance: Pick<\n\t\t\tITerminalInstance,\n\t\t\t| \"shellType\"\n\t\t\t| \"capabilities\"\n\t\t\t| \"onDidRequestFocus\"\n\t\t\t| \"resource\"\n\t\t\t| \"focus\"\n\t\t>,\n\t\t_xterm: Pick<IXtermTerminal, \"getFont\" | \"shellIntegration\"> & {\n\t\t\traw: Terminal;\n\t\t},\n\t\t@IInstantiationService _instantiationService: IInstantiationService,\n\t\t@IContextKeyService\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._hasShellIntegration =\n\t\t\t_xterm.shellIntegration.status === ShellIntegrationStatus.VSCode;\n\t}\n\tprovideContent(): string {\n\t\tconst content = [\n\t\t\tlocalize(\n\t\t\t\t\"focusAccessibleTerminalView\",\n\t\t\t\t\"The Focus Accessible Terminal View command<keybinding:{0}> enables screen readers to read terminal contents.\",\n\t\t\t\tTerminalAccessibilityCommandId.FocusAccessibleBuffer,\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"preserveCursor\",\n\t\t\t\t\"Customize the behavior of the cursor when toggling between the terminal and accessible view with `terminal.integrated.accessibleViewPreserveCursorPosition.`\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"openDetectedLink\",\n\t\t\t\t\"The Open Detected Link command<keybinding:{0}> enables screen readers to easily open links found in the terminal.\",\n\t\t\t\tTerminalLinksCommandId.OpenDetectedLink,\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"newWithProfile\",\n\t\t\t\t\"The Create New Terminal (With Profile) command<keybinding:{0}> allows for easy terminal creation using a specific profile.\",\n\t\t\t\tTerminalCommandId.NewWithProfile,\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"focusAfterRun\",\n\t\t\t\t\"Configure what gets focused after running selected text in the terminal with `{0}`.\",\n\t\t\t\tTerminalSettingId.FocusAfterRun,\n\t\t\t),\n\t\t];\n\n\t\tif (\n\t\t\t!this._configurationService.getValue(\n\t\t\t\tTerminalAccessibilitySettingId.AccessibleViewFocusOnCommandExecution,\n\t\t\t)\n\t\t) {\n\t\t\tcontent.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"focusViewOnExecution\",\n\t\t\t\t\t\"Enable `terminal.integrated.accessibleViewFocusOnCommandExecution` to automatically focus the terminal accessible view when a command is executed in the terminal.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (this._instance.shellType === WindowsShellType.CommandPrompt) {\n\t\t\tcontent.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"commandPromptMigration\",\n\t\t\t\t\t\"Consider using powershell instead of command prompt for an improved experience\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (this._hasShellIntegration) {\n\t\t\tcontent.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"shellIntegration\",\n\t\t\t\t\t\"The terminal has a feature called shell integration that offers an enhanced experience and provides useful commands for screen readers such as:\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t\"- \" +\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"goToNextCommand\",\n\t\t\t\t\t\t\"Go to Next Command<keybinding:{0}> in the accessible view\",\n\t\t\t\t\t\tTerminalAccessibilityCommandId.AccessibleBufferGoToNextCommand,\n\t\t\t\t\t),\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t\"- \" +\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"goToPreviousCommand\",\n\t\t\t\t\t\t\"Go to Previous Command<keybinding:{0}> in the accessible view\",\n\t\t\t\t\t\tTerminalAccessibilityCommandId.AccessibleBufferGoToPreviousCommand,\n\t\t\t\t\t),\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t\"- \" +\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"goToSymbol\",\n\t\t\t\t\t\t\"Go to Symbol<keybinding:{0}>\",\n\t\t\t\t\t\tAccessibilityCommandId.GoToSymbol,\n\t\t\t\t\t),\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t\"- \" +\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"runRecentCommand\",\n\t\t\t\t\t\t\"Run Recent Command<keybinding:{0}>\",\n\t\t\t\t\t\tTerminalCommandId.RunRecentCommand,\n\t\t\t\t\t),\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t\"- \" +\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"goToRecentDirectory\",\n\t\t\t\t\t\t\"Go to Recent Directory<keybinding:{0}>\",\n\t\t\t\t\t\tTerminalCommandId.GoToRecentDirectory,\n\t\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tcontent.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"noShellIntegration\",\n\t\t\t\t\t\"Shell integration is not enabled. Some accessibility features may not be available.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn content.join(\"\\n\");\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ClassName"]
}
