{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/accessibility/browser/terminalAccessibilityHelp.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../../nls.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ShellIntegrationStatus, TerminalSettingId, WindowsShellType } from '../../../../../platform/terminal/common/terminal.js';\nimport { AccessibilityCommandId } from '../../../accessibility/common/accessibilityCommands.js';\nimport { ITerminalInstance, IXtermTerminal } from '../../../terminal/browser/terminal.js';\nimport { TerminalCommandId } from '../../../terminal/common/terminal.js';\nimport type { Terminal } from '@xterm/xterm';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TerminalAccessibilitySettingId } from '../common/terminalAccessibilityConfiguration.js';\nimport { TerminalAccessibilityCommandId } from '../common/terminal.accessibility.js';\nimport { TerminalLinksCommandId } from '../../links/common/terminal.links.js';\nimport { IAccessibleViewContentProvider, AccessibleViewProviderId, IAccessibleViewOptions, AccessibleViewType } from '../../../../../platform/accessibility/browser/accessibleView.js';\nimport { accessibleViewIsShown, accessibleViewCurrentProviderId, AccessibilityVerbositySettingId } from '../../../accessibility/browser/accessibilityConfiguration.js';\n\nexport const enum ClassName {\n\tActive = 'active',\n\tEditorTextArea = 'textarea'\n}\n\nexport class TerminalAccessibilityHelpProvider extends Disposable implements IAccessibleViewContentProvider {\n\tid = AccessibleViewProviderId.TerminalHelp;\n\tprivate readonly _hasShellIntegration: boolean = false;\n\tonClose() {\n\t\tconst expr = ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.TerminalHelp));\n\t\tif (expr?.evaluate(this._contextKeyService.getContext(null))) {\n\t\t\tthis._commandService.executeCommand(TerminalAccessibilityCommandId.FocusAccessibleBuffer);\n\t\t} else {\n\t\t\tthis._instance.focus();\n\t\t}\n\t\tthis.dispose();\n\t}\n\toptions: IAccessibleViewOptions = {\n\t\ttype: AccessibleViewType.Help,\n\t\treadMoreUrl: 'https://code.visualstudio.com/docs/editor/accessibility#_terminal-accessibility'\n\t};\n\tverbositySettingKey = AccessibilityVerbositySettingId.Terminal;\n\n\tconstructor(\n\t\tprivate readonly _instance: Pick<ITerminalInstance, 'shellType' | 'capabilities' | 'onDidRequestFocus' | 'resource' | 'focus'>,\n\t\t_xterm: Pick<IXtermTerminal, 'getFont' | 'shellIntegration'> & { raw: Terminal },\n\t\t@IInstantiationService _instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis._hasShellIntegration = _xterm.shellIntegration.status === ShellIntegrationStatus.VSCode;\n\t}\n\tprovideContent(): string {\n\t\tconst content = [\n\t\t\tlocalize('focusAccessibleTerminalView', 'The Focus Accessible Terminal View command<keybinding:{0}> enables screen readers to read terminal contents.', TerminalAccessibilityCommandId.FocusAccessibleBuffer),\n\t\t\tlocalize('preserveCursor', 'Customize the behavior of the cursor when toggling between the terminal and accessible view with `terminal.integrated.accessibleViewPreserveCursorPosition.`'),\n\t\t\tlocalize('openDetectedLink', 'The Open Detected Link command<keybinding:{0}> enables screen readers to easily open links found in the terminal.', TerminalLinksCommandId.OpenDetectedLink),\n\t\t\tlocalize('newWithProfile', 'The Create New Terminal (With Profile) command<keybinding:{0}> allows for easy terminal creation using a specific profile.', TerminalCommandId.NewWithProfile),\n\t\t\tlocalize('focusAfterRun', 'Configure what gets focused after running selected text in the terminal with `{0}`.', TerminalSettingId.FocusAfterRun)\n\t\t];\n\n\t\tif (!this._configurationService.getValue(TerminalAccessibilitySettingId.AccessibleViewFocusOnCommandExecution)) {\n\t\t\tcontent.push(localize('focusViewOnExecution', 'Enable `terminal.integrated.accessibleViewFocusOnCommandExecution` to automatically focus the terminal accessible view when a command is executed in the terminal.'));\n\t\t}\n\n\t\tif (this._instance.shellType === WindowsShellType.CommandPrompt) {\n\t\t\tcontent.push(localize('commandPromptMigration', \"Consider using powershell instead of command prompt for an improved experience\"));\n\t\t}\n\n\t\tif (this._hasShellIntegration) {\n\t\t\tcontent.push(localize('shellIntegration', \"The terminal has a feature called shell integration that offers an enhanced experience and provides useful commands for screen readers such as:\"));\n\t\t\tcontent.push('- ' + localize('goToNextCommand', 'Go to Next Command<keybinding:{0}> in the accessible view', TerminalAccessibilityCommandId.AccessibleBufferGoToNextCommand));\n\t\t\tcontent.push('- ' + localize('goToPreviousCommand', 'Go to Previous Command<keybinding:{0}> in the accessible view', TerminalAccessibilityCommandId.AccessibleBufferGoToPreviousCommand));\n\t\t\tcontent.push('- ' + localize('goToSymbol', 'Go to Symbol<keybinding:{0}>', AccessibilityCommandId.GoToSymbol));\n\t\t\tcontent.push('- ' + localize('runRecentCommand', 'Run Recent Command<keybinding:{0}>', TerminalCommandId.RunRecentCommand));\n\t\t\tcontent.push('- ' + localize('goToRecentDirectory', 'Go to Recent Directory<keybinding:{0}>', TerminalCommandId.GoToRecentDirectory));\n\t\t} else {\n\t\t\tcontent.push(localize('noShellIntegration', 'Shell integration is not enabled. Some accessibility features may not be available.'));\n\t\t}\n\n\t\treturn content.join('\\n');\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,gBAAgB,0BAA0B;AACnD,SAAS,6BAA6B;AACtC,SAAS,wBAAwB,mBAAmB,wBAAwB;AAC5E,SAAS,8BAA8B;AACvC,SAAS,mBAAmB,sBAAsB;AAClD,SAAS,yBAAyB;AAElC,SAAS,6BAA6B;AACtC,SAAS,sCAAsC;AAC/C,SAAS,sCAAsC;AAC/C,SAAS,8BAA8B;AACvC,SAAS,gCAAgC,0BAA0B,wBAAwB,0BAA0B;AACrH,SAAS,uBAAuB,iCAAiC,uCAAuC;AAEjG,IAAW,YAAX,kBAAWA,eAAX;AACN,EAAAA,WAAA,YAAS;AACT,EAAAA,WAAA,oBAAiB;AAFA,SAAAA;AAAA,GAAA;AAKX,IAAM,oCAAN,cAAgD,WAAqD;AAAA,EAkB3G,YACkB,WACjB,QACuB,uBACc,oBACH,iBACM,uBACvC;AACD,UAAM;AAPW;AAGoB;AACH;AACM;AAGxC,SAAK,uBAAuB,OAAO,iBAAiB,WAAW,uBAAuB;AAAA,EACvF;AAAA,EAvDD,OA2B4G;AAAA;AAAA;AAAA,EAC3G,KAAK,yBAAyB;AAAA,EACb,uBAAgC;AAAA,EACjD,UAAU;AACT,UAAM,OAAO,eAAe,IAAI,uBAAuB,eAAe,OAAO,gCAAgC,KAAK,yBAAyB,YAAY,CAAC;AACxJ,QAAI,MAAM,SAAS,KAAK,mBAAmB,WAAW,IAAI,CAAC,GAAG;AAC7D,WAAK,gBAAgB,eAAe,+BAA+B,qBAAqB;AAAA,IACzF,OAAO;AACN,WAAK,UAAU,MAAM;AAAA,IACtB;AACA,SAAK,QAAQ;AAAA,EACd;AAAA,EACA,UAAkC;AAAA,IACjC,MAAM,mBAAmB;AAAA,IACzB,aAAa;AAAA,EACd;AAAA,EACA,sBAAsB,gCAAgC;AAAA,EAatD,iBAAyB;AACxB,UAAM,UAAU;AAAA,MACf,SAAS,+BAA+B,gHAAgH,+BAA+B,qBAAqB;AAAA,MAC5M,SAAS,kBAAkB,8JAA8J;AAAA,MACzL,SAAS,oBAAoB,qHAAqH,uBAAuB,gBAAgB;AAAA,MACzL,SAAS,kBAAkB,8HAA8H,kBAAkB,cAAc;AAAA,MACzL,SAAS,iBAAiB,uFAAuF,kBAAkB,aAAa;AAAA,IACjJ;AAEA,QAAI,CAAC,KAAK,sBAAsB,SAAS,+BAA+B,qCAAqC,GAAG;AAC/G,cAAQ,KAAK,SAAS,wBAAwB,oKAAoK,CAAC;AAAA,IACpN;AAEA,QAAI,KAAK,UAAU,cAAc,iBAAiB,eAAe;AAChE,cAAQ,KAAK,SAAS,0BAA0B,gFAAgF,CAAC;AAAA,IAClI;AAEA,QAAI,KAAK,sBAAsB;AAC9B,cAAQ,KAAK,SAAS,oBAAoB,iJAAiJ,CAAC;AAC5L,cAAQ,KAAK,OAAO,SAAS,mBAAmB,6DAA6D,+BAA+B,+BAA+B,CAAC;AAC5K,cAAQ,KAAK,OAAO,SAAS,uBAAuB,iEAAiE,+BAA+B,mCAAmC,CAAC;AACxL,cAAQ,KAAK,OAAO,SAAS,cAAc,gCAAgC,uBAAuB,UAAU,CAAC;AAC7G,cAAQ,KAAK,OAAO,SAAS,oBAAoB,sCAAsC,kBAAkB,gBAAgB,CAAC;AAC1H,cAAQ,KAAK,OAAO,SAAS,uBAAuB,0CAA0C,kBAAkB,mBAAmB,CAAC;AAAA,IACrI,OAAO;AACN,cAAQ,KAAK,SAAS,sBAAsB,qFAAqF,CAAC;AAAA,IACnI;AAEA,WAAO,QAAQ,KAAK,IAAI;AAAA,EACzB;AACD;AA3Da,oCAAN;AAAA,EAqBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAxBU;",
  "names": ["ClassName"]
}
