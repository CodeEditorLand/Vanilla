import{ensureNoDisposablesAreLeakedInTestSuite as p}from"../../../../../../base/test/common/utils.js";import{ShellIntegrationAddon as w}from"../../../../../../platform/terminal/common/xterm/shellIntegrationAddon.js";import{workbenchInstantiationService as g}from"../../../../../test/browser/workbenchTestServices.js";import{NullLogService as A}from"../../../../../../platform/log/common/log.js";import{InitialHintAddon as I}from"../../browser/terminal.initialHint.contribution.js";import{getActiveDocument as x}from"../../../../../../base/browser/dom.js";import{Emitter as C}from"../../../../../../base/common/event.js";import{strictEqual as i}from"assert";import{ExtensionIdentifier as h}from"../../../../../../platform/extensions/common/extensions.js";import{ChatAgentLocation as l}from"../../../../chat/common/chatAgents.js";import{importAMDNodeModule as v}from"../../../../../../amdX.js";suite("Terminal Initial Hint Addon",()=>{const o=p();let t=0,e,a;const n=new C,c=n.event,r={id:"termminal",name:"terminal",extensionId:new h("test"),extensionPublisherId:"test",extensionDisplayName:"test",metadata:{},slashCommands:[{name:"test",description:"test"}],disambiguation:[],locations:[l.fromRaw("terminal")],invoke:async()=>({})},s={id:"editor",name:"editor",extensionId:new h("test-editor"),extensionPublisherId:"test-editor",extensionDisplayName:"test-editor",metadata:{},slashCommands:[{name:"test",description:"test"}],locations:[l.fromRaw("editor")],disambiguation:[],invoke:async()=>({})};setup(async()=>{const u=g({},o),f=(await v("@xterm/xterm","lib/xterm.js")).Terminal;e=o.add(new f);const d=o.add(new w("",!0,void 0,new A));a=o.add(u.createInstance(I,d.capabilities,c)),o.add(a.onDidRequestCreateHint(()=>t++));const m=document.createElement("div");x().body.append(m),e.open(m),e.loadAddon(d),e.loadAddon(a)}),suite("Chat providers",()=>{test("hint is not shown when there are no chat providers",()=>{t=0,e.focus(),i(t,0)}),test("hint is not shown when there is just an editor agent",()=>{t=0,n.fire(s),e.focus(),i(t,0)}),test("hint is shown when there is a terminal chat agent",()=>{t=0,n.fire(s),e.focus(),i(t,0),n.fire(r),i(t,1)}),test("hint is not shown again when another terminal chat agent is added if it has already shown",()=>{t=0,n.fire(r),e.focus(),i(t,1),n.fire(r),i(t,1)})}),suite("Input",()=>{test("hint is not shown when there has been input",()=>{n.fire(r),e.writeln("data"),setTimeout(()=>{e.focus(),i(t,0)},50)})})});
