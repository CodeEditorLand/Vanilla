var v=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var u=(a,o,e,t)=>{for(var i=t>1?void 0:t?y(o,e):o,n=a.length-1,s;n>=0;n--)(s=a[n])&&(i=(t?s(o,e,i):s(i))||i);return t&&i&&v(o,e,i),i},d=(a,o)=>(e,t)=>o(e,t,a);import{Dimension as T,getActiveWindow as b,trackFocus as I}from"../../../../../base/browser/dom.js";import{Emitter as W,Event as p}from"../../../../../base/common/event.js";import{Disposable as x,toDisposable as H}from"../../../../../base/common/lifecycle.js";import{MicrotaskDelay as E}from"../../../../../base/common/symbols.js";import"./media/terminalChatWidget.css";import{localize as g}from"../../../../../nls.js";import{IContextKeyService as M}from"../../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as S}from"../../../../../platform/instantiation/common/instantiation.js";import{ChatAgentLocation as w}from"../../../chat/common/chatAgents.js";import{InlineChatWidget as D}from"../../../inlineChat/browser/inlineChatWidget.js";import{TerminalStickyScrollContribution as f}from"../../stickyScroll/browser/terminalStickyScrollContribution.js";import{MENU_TERMINAL_CHAT_INPUT as K,MENU_TERMINAL_CHAT_WIDGET as L,MENU_TERMINAL_CHAT_WIDGET_STATUS as k,TerminalChatCommandId as c,TerminalChatContextKeys as C}from"./terminalChat.js";var A=(e=>(e[e.HorizontalMargin=10]="HorizontalMargin",e[e.VerticalMargin=30]="VerticalMargin",e))(A||{});let l=class extends x{constructor(e,t,i,n,s){super();this._terminalElement=e;this._instance=t;this._xterm=i;this._instantiationService=n;this._contextKeyService=s;this._focusedContextKey=C.focused.bindTo(this._contextKeyService),this._visibleContextKey=C.visible.bindTo(this._contextKeyService),this._container=document.createElement("div"),this._container.classList.add("terminal-inline-chat"),e.appendChild(this._container),this._inlineChatWidget=this._instantiationService.createInstance(D,{location:w.Terminal,resolveData:()=>{}},{statusMenuId:{menu:k,options:{buttonConfigProvider:r=>r.id===c.ViewInChat||r.id===c.RunCommand||r.id===c.RunFirstCommand?{isSecondary:!1}:{isSecondary:!0}}},chatWidgetViewOptions:{rendererOptions:{editableCodeBlock:!0},menus:{telemetrySource:"terminal-inline-chat",executeToolbar:K,inputSideToolbar:L}}}),this._register(p.any(this._inlineChatWidget.onDidChangeHeight,this._instance.onDimensionsChanged,this._inlineChatWidget.chatWidget.onDidChangeContentHeight,p.debounce(this._xterm.raw.onCursorMove,()=>{},E))(()=>this._relayout()));const h=new ResizeObserver(()=>this._relayout());h.observe(this._terminalElement),this._register(H(()=>h.disconnect())),this._reset(),this._container.appendChild(this._inlineChatWidget.domNode),this._focusTracker=this._register(I(this._container)),this._register(this._focusTracker.onDidFocus(()=>this._focusedContextKey.set(!0))),this._register(this._focusTracker.onDidBlur(()=>{this._focusedContextKey.set(!1),this.inlineChatWidget.responseContent||this.hide()})),this.hide()}_container;_onDidHide=this._register(new W);onDidHide=this._onDidHide.event;_inlineChatWidget;get inlineChatWidget(){return this._inlineChatWidget}_focusTracker;_focusedContextKey;_visibleContextKey;_dimension;_relayout(){this._dimension&&this._doLayout(this._inlineChatWidget.contentHeight)}_doLayout(e){const t=this._xterm.raw.element;if(!t)return;const i=b().getComputedStyle(t),n=Number.parseInt(i.paddingLeft)+Number.parseInt(i.paddingRight),s=Math.min(640,t.clientWidth-12-2-10-n),h=this._getTerminalWrapperHeight()??Number.MAX_SAFE_INTEGER;let r=Math.min(480,e,h);const m=this._getTop()??0;if(s===0||r===0)return;let _;r<this._inlineChatWidget.contentHeight&&(r-m>0?r=r-m-30:(r=r-30,_=r)),this._container.style.paddingLeft=i.paddingLeft,this._dimension=new T(s,r),this._inlineChatWidget.layout(this._dimension),this._updateVerticalPosition(_)}_reset(){this._inlineChatWidget.placeholder=g("default.placeholder","Ask how to do something in the terminal"),this._inlineChatWidget.updateInfo(g("welcome.1","AI-generated commands may be incorrect"))}reveal(){this._doLayout(this._inlineChatWidget.contentHeight),this._container.classList.remove("hide"),this._visibleContextKey.set(!0),this._inlineChatWidget.focus(),this._instance.scrollToBottom()}_getTop(){const e=this._instance.xterm?.getFont();if(!e?.charHeight)return;const t=this._getTerminalWrapperHeight()??0,i=e.charHeight*e.lineHeight,n=t-this._instance.rows*i,s=(this._instance.xterm?.raw.buffer.active.cursorY??0)+1;return n+s*i}_updateVerticalPosition(e){const t=this._getTop();if(!t)return;this._container.style.top=`${t}px`;const i=this._inlineChatWidget.contentHeight,n=this._getTerminalWrapperHeight();n&&(t>n-i&&n-i>0?this._setTerminalOffset(t-(n-i)):e?this._setTerminalOffset(e):this._setTerminalOffset(void 0))}_getTerminalWrapperHeight(){return this._terminalElement.clientHeight}hide(){this._container.classList.add("hide"),this._inlineChatWidget.reset(),this._reset(),this._inlineChatWidget.updateToolbar(!1),this._visibleContextKey.set(!1),this._inlineChatWidget.value="",this._instance.focus(),this._setTerminalOffset(void 0),this._onDidHide.fire()}_setTerminalOffset(e){e===void 0||this._container.classList.contains("hide")?(this._terminalElement.style.position="",this._terminalElement.style.bottom="",f.get(this._instance)?.hideUnlock()):(this._terminalElement.style.position="relative",this._terminalElement.style.bottom=`${e}px`,f.get(this._instance)?.hideLock())}focus(){this._inlineChatWidget.focus()}hasFocus(){return this._inlineChatWidget.hasFocus()}input(){return this._inlineChatWidget.value}setValue(e){this._inlineChatWidget.value=e??""}acceptCommand(e,t){this._instance.runCommand(e,t),this.hide()}get focusTracker(){return this._focusTracker}};l=u([d(3,S),d(4,M)],l);export{l as TerminalChatWidget};
