{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/chat/test/browser/terminalInitialHint.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal } from '@xterm/xterm';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../../base/test/common/utils.js';\nimport { ShellIntegrationAddon } from '../../../../../../platform/terminal/common/xterm/shellIntegrationAddon.js';\nimport { workbenchInstantiationService } from '../../../../../test/browser/workbenchTestServices.js';\nimport { NullLogService } from '../../../../../../platform/log/common/log.js';\nimport { InitialHintAddon } from '../../browser/terminal.initialHint.contribution.js';\nimport { getActiveDocument } from '../../../../../../base/browser/dom.js';\nimport { Emitter } from '../../../../../../base/common/event.js';\nimport { strictEqual } from 'assert';\nimport { ExtensionIdentifier } from '../../../../../../platform/extensions/common/extensions.js';\nimport { ChatAgentLocation, IChatAgent } from '../../../../chat/common/chatAgents.js';\nimport { importAMDNodeModule } from '../../../../../../amdX.js';\n\n// Test TerminalInitialHintAddon\n\nsuite('Terminal Initial Hint Addon', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\tlet eventCount = 0;\n\tlet xterm: Terminal;\n\tlet initialHintAddon: InitialHintAddon;\n\tconst _onDidChangeAgents: Emitter<IChatAgent | undefined> = new Emitter();\n\tconst onDidChangeAgents = _onDidChangeAgents.event;\n\tconst agent: IChatAgent = {\n\t\tid: 'termminal',\n\t\tname: 'terminal',\n\t\textensionId: new ExtensionIdentifier('test'),\n\t\textensionPublisherId: 'test',\n\t\textensionDisplayName: 'test',\n\t\tmetadata: {},\n\t\tslashCommands: [{ name: 'test', description: 'test' }],\n\t\tdisambiguation: [],\n\t\tlocations: [ChatAgentLocation.fromRaw('terminal')],\n\t\tinvoke: async () => { return {}; }\n\t};\n\tconst editorAgent: IChatAgent = {\n\t\tid: 'editor',\n\t\tname: 'editor',\n\t\textensionId: new ExtensionIdentifier('test-editor'),\n\t\textensionPublisherId: 'test-editor',\n\t\textensionDisplayName: 'test-editor',\n\t\tmetadata: {},\n\t\tslashCommands: [{ name: 'test', description: 'test' }],\n\t\tlocations: [ChatAgentLocation.fromRaw('editor')],\n\t\tdisambiguation: [],\n\t\tinvoke: async () => { return {}; }\n\t};\n\tsetup(async () => {\n\t\tconst instantiationService = workbenchInstantiationService({}, store);\n\t\tconst TerminalCtor = (await importAMDNodeModule<typeof import('@xterm/xterm')>('@xterm/xterm', 'lib/xterm.js')).Terminal;\n\t\txterm = store.add(new TerminalCtor());\n\t\tconst shellIntegrationAddon = store.add(new ShellIntegrationAddon('', true, undefined, new NullLogService));\n\t\tinitialHintAddon = store.add(instantiationService.createInstance(InitialHintAddon, shellIntegrationAddon.capabilities, onDidChangeAgents));\n\t\tstore.add(initialHintAddon.onDidRequestCreateHint(() => eventCount++));\n\t\tconst testContainer = document.createElement('div');\n\t\tgetActiveDocument().body.append(testContainer);\n\t\txterm.open(testContainer);\n\n\t\txterm.loadAddon(shellIntegrationAddon);\n\t\txterm.loadAddon(initialHintAddon);\n\t});\n\n\tsuite('Chat providers', () => {\n\t\ttest('hint is not shown when there are no chat providers', () => {\n\t\t\teventCount = 0;\n\t\t\txterm.focus();\n\t\t\tstrictEqual(eventCount, 0);\n\t\t});\n\t\ttest('hint is not shown when there is just an editor agent', () => {\n\t\t\teventCount = 0;\n\t\t\t_onDidChangeAgents.fire(editorAgent);\n\t\t\txterm.focus();\n\t\t\tstrictEqual(eventCount, 0);\n\t\t});\n\t\ttest('hint is shown when there is a terminal chat agent', () => {\n\t\t\teventCount = 0;\n\t\t\t_onDidChangeAgents.fire(editorAgent);\n\t\t\txterm.focus();\n\t\t\tstrictEqual(eventCount, 0);\n\t\t\t_onDidChangeAgents.fire(agent);\n\t\t\tstrictEqual(eventCount, 1);\n\t\t});\n\t\ttest('hint is not shown again when another terminal chat agent is added if it has already shown', () => {\n\t\t\teventCount = 0;\n\t\t\t_onDidChangeAgents.fire(agent);\n\t\t\txterm.focus();\n\t\t\tstrictEqual(eventCount, 1);\n\t\t\t_onDidChangeAgents.fire(agent);\n\t\t\tstrictEqual(eventCount, 1);\n\t\t});\n\t});\n\tsuite('Input', () => {\n\t\ttest('hint is not shown when there has been input', () => {\n\t\t\t_onDidChangeAgents.fire(agent);\n\t\t\txterm.writeln('data');\n\t\t\tsetTimeout(() => {\n\t\t\t\txterm.focus();\n\t\t\t\tstrictEqual(eventCount, 0);\n\t\t\t}, 50);\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
