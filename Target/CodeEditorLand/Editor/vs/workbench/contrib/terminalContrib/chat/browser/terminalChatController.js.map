{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/chat/browser/terminalChatController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from \"@xterm/xterm\";\nimport { CancellationTokenSource } from \"../../../../../base/common/cancellation.js\";\nimport { Emitter, Event } from \"../../../../../base/common/event.js\";\nimport { Lazy } from \"../../../../../base/common/lazy.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIChatCodeBlockContextProviderService,\n\tshowChatView,\n} from \"../../../chat/browser/chat.js\";\nimport {\n\ttype IChatProgress,\n\tIChatService,\n} from \"../../../chat/common/chatService.js\";\nimport {\n\ttype ITerminalContribution,\n\ttype ITerminalInstance,\n\tITerminalService,\n\ttype IXtermTerminal,\n\tisDetachedTerminalInstance,\n} from \"../../../terminal/browser/terminal.js\";\nimport type { TerminalWidgetManager } from \"../../../terminal/browser/widgets/widgetManager.js\";\nimport type { ITerminalProcessManager } from \"../../../terminal/common/terminal.js\";\nimport { TerminalChatWidget } from \"./terminalChatWidget.js\";\n\nimport {\n\ttype CancelablePromise,\n\tDeferredPromise,\n\tcreateCancelablePromise,\n} from \"../../../../../base/common/async.js\";\nimport { MarkdownString } from \"../../../../../base/common/htmlContent.js\";\nimport { assertType } from \"../../../../../base/common/types.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../../platform/storage/common/storage.js\";\nimport { IViewsService } from \"../../../../services/views/common/viewsService.js\";\nimport { ChatAgentLocation } from \"../../../chat/common/chatAgents.js\";\nimport type {\n\tChatModel,\n\tIChatResponseModel,\n} from \"../../../chat/common/chatModel.js\";\nimport { TerminalChatContextKeys } from \"./terminalChat.js\";\n\nenum Message {\n\tNONE = 0,\n\tACCEPT_SESSION = 1 << 0,\n\tCANCEL_SESSION = 1 << 1,\n\tPAUSE_SESSION = 1 << 2,\n\tCANCEL_REQUEST = 1 << 3,\n\tCANCEL_INPUT = 1 << 4,\n\tACCEPT_INPUT = 1 << 5,\n\tRERUN_INPUT = 1 << 6,\n}\n\nexport class TerminalChatController\n\textends Disposable\n\timplements ITerminalContribution\n{\n\tstatic readonly ID = \"terminal.chat\";\n\n\tstatic get(instance: ITerminalInstance): TerminalChatController | null {\n\t\treturn instance.getContribution<TerminalChatController>(\n\t\t\tTerminalChatController.ID,\n\t\t);\n\t}\n\t/**\n\t * Currently focused chat widget. This is used to track action context since 'active terminals'\n\t * are only tracked for non-detached terminal instanecs.\n\t */\n\tstatic activeChatWidget?: TerminalChatController;\n\n\tprivate static _storageKey = \"terminal-inline-chat-history\";\n\tprivate static _promptHistory: string[] = [];\n\n\t/**\n\t * The chat widget for the controller, this is lazy as we don't want to instantiate it until\n\t * both it's required and xterm is ready.\n\t */\n\tprivate _chatWidget: Lazy<TerminalChatWidget> | undefined;\n\n\t/**\n\t * The chat widget for the controller, this will be undefined if xterm is not ready yet (ie. the\n\t * terminal is still initializing).\n\t */\n\tget chatWidget(): TerminalChatWidget | undefined {\n\t\treturn this._chatWidget?.value;\n\t}\n\n\tprivate readonly _requestActiveContextKey: IContextKey<boolean>;\n\tprivate readonly _responseContainsCodeBlockContextKey: IContextKey<boolean>;\n\tprivate readonly _responseContainsMulitpleCodeBlocksContextKey: IContextKey<boolean>;\n\n\tprivate _messages = this._store.add(new Emitter<Message>());\n\n\tprivate _lastResponseContent: string | undefined;\n\tget lastResponseContent(): string | undefined {\n\t\treturn this._lastResponseContent;\n\t}\n\n\treadonly onDidAcceptInput = Event.filter(\n\t\tthis._messages.event,\n\t\t(m) => m === Message.ACCEPT_INPUT,\n\t\tthis._store,\n\t);\n\tget onDidHide() {\n\t\treturn this.chatWidget?.onDidHide ?? Event.None;\n\t}\n\n\tprivate _terminalAgentName = \"terminal\";\n\n\tprivate readonly _model: MutableDisposable<ChatModel> = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\n\tget scopedContextKeyService(): IContextKeyService {\n\t\treturn (\n\t\t\tthis._chatWidget?.value.inlineChatWidget.scopedContextKeyService ??\n\t\t\tthis._contextKeyService\n\t\t);\n\t}\n\n\tprivate _sessionCtor: CancelablePromise<void> | undefined;\n\tprivate _historyOffset = -1;\n\tprivate _historyCandidate = \"\";\n\tprivate _historyUpdate: (prompt: string) => void;\n\n\tprivate _currentRequestId: string | undefined;\n\tprivate _activeRequestCts?: CancellationTokenSource;\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IContextKeyService\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t\t@IChatService private readonly _chatService: IChatService,\n\t\t@IChatCodeBlockContextProviderService\n\t\tprivate readonly _chatCodeBlockContextProviderService: IChatCodeBlockContextProviderService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\t\tsuper();\n\n\t\tthis._requestActiveContextKey =\n\t\t\tTerminalChatContextKeys.requestActive.bindTo(\n\t\t\t\tthis._contextKeyService,\n\t\t\t);\n\t\tthis._responseContainsCodeBlockContextKey =\n\t\t\tTerminalChatContextKeys.responseContainsCodeBlock.bindTo(\n\t\t\t\tthis._contextKeyService,\n\t\t\t);\n\t\tthis._responseContainsMulitpleCodeBlocksContextKey =\n\t\t\tTerminalChatContextKeys.responseContainsMultipleCodeBlocks.bindTo(\n\t\t\t\tthis._contextKeyService,\n\t\t\t);\n\n\t\tthis._register(\n\t\t\tthis._chatCodeBlockContextProviderService.registerProvider(\n\t\t\t\t{\n\t\t\t\t\tgetCodeBlockContext: (editor) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!editor ||\n\t\t\t\t\t\t\t!this._chatWidget?.hasValue ||\n\t\t\t\t\t\t\t!this.hasFocus()\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\telement: editor,\n\t\t\t\t\t\t\tcode: editor.getValue(),\n\t\t\t\t\t\t\tcodeBlockIndex: 0,\n\t\t\t\t\t\t\tlanguageId: editor.getModel()!.getLanguageId(),\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"terminal\",\n\t\t\t),\n\t\t);\n\n\t\tTerminalChatController._promptHistory = JSON.parse(\n\t\t\tthis._storageService.get(\n\t\t\t\tTerminalChatController._storageKey,\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\"[]\",\n\t\t\t),\n\t\t);\n\t\tthis._historyUpdate = (prompt: string) => {\n\t\t\tconst idx = TerminalChatController._promptHistory.indexOf(prompt);\n\t\t\tif (idx >= 0) {\n\t\t\t\tTerminalChatController._promptHistory.splice(idx, 1);\n\t\t\t}\n\t\t\tTerminalChatController._promptHistory.unshift(prompt);\n\t\t\tthis._historyOffset = -1;\n\t\t\tthis._historyCandidate = \"\";\n\t\t\tthis._storageService.store(\n\t\t\t\tTerminalChatController._storageKey,\n\t\t\t\tJSON.stringify(TerminalChatController._promptHistory),\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t};\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._chatWidget = new Lazy(() => {\n\t\t\tconst chatWidget = this._register(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tTerminalChatWidget,\n\t\t\t\t\tthis._instance.domElement!,\n\t\t\t\t\tthis._instance,\n\t\t\t\t\txterm,\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tchatWidget.focusTracker.onDidFocus(() => {\n\t\t\t\t\tTerminalChatController.activeChatWidget = this;\n\t\t\t\t\tif (!isDetachedTerminalInstance(this._instance)) {\n\t\t\t\t\t\tthis._terminalService.setActiveInstance(this._instance);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tchatWidget.focusTracker.onDidBlur(() => {\n\t\t\t\t\tTerminalChatController.activeChatWidget = undefined;\n\t\t\t\t\tthis._instance.resetScrollbarVisibility();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tif (!this._instance.domElement) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"FindWidget expected terminal DOM to be initialized\",\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn chatWidget;\n\t\t});\n\t}\n\n\tprivate async _createSession(): Promise<void> {\n\t\tthis._sessionCtor = createCancelablePromise<void>(async (token) => {\n\t\t\tif (!this._model.value) {\n\t\t\t\tthis._model.value = this._chatService.startSession(\n\t\t\t\t\tChatAgentLocation.Terminal,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\n\t\t\t\tif (!this._model.value) {\n\t\t\t\t\tthrow new Error(\"Failed to start chat session\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._register(toDisposable(() => this._sessionCtor?.cancel()));\n\t}\n\n\tprivate _forcedPlaceholder: string | undefined = undefined;\n\n\tprivate _updatePlaceholder(): void {\n\t\tconst inlineChatWidget = this._chatWidget?.value.inlineChatWidget;\n\t\tif (inlineChatWidget) {\n\t\t\tinlineChatWidget.placeholder = this._getPlaceholderText();\n\t\t}\n\t}\n\n\tprivate _getPlaceholderText(): string {\n\t\treturn this._forcedPlaceholder ?? \"\";\n\t}\n\n\tsetPlaceholder(text: string): void {\n\t\tthis._forcedPlaceholder = text;\n\t\tthis._updatePlaceholder();\n\t}\n\n\tresetPlaceholder(): void {\n\t\tthis._forcedPlaceholder = undefined;\n\t\tthis._updatePlaceholder();\n\t}\n\n\tclear(): void {\n\t\tthis.cancel();\n\t\tthis._model.clear();\n\t\tthis._responseContainsCodeBlockContextKey.reset();\n\t\tthis._requestActiveContextKey.reset();\n\t\tthis._chatWidget?.value.hide();\n\t\tthis._chatWidget?.value.setValue(undefined);\n\t}\n\n\tasync acceptInput(\n\t\tisVoiceInput?: boolean,\n\t): Promise<IChatResponseModel | undefined> {\n\t\tassertType(this._chatWidget);\n\t\tif (!this._model.value) {\n\t\t\tawait this.reveal();\n\t\t}\n\t\tassertType(this._model.value);\n\t\tconst lastInput = this._chatWidget.value.inlineChatWidget.value;\n\t\tif (!lastInput) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._model.value;\n\t\tthis._chatWidget.value.inlineChatWidget.setChatModel(model);\n\t\tthis._historyUpdate(lastInput);\n\t\tthis._activeRequestCts?.cancel();\n\t\tthis._activeRequestCts = new CancellationTokenSource();\n\t\tconst store = new DisposableStore();\n\t\tthis._requestActiveContextKey.set(true);\n\t\tlet responseContent = \"\";\n\t\tconst response =\n\t\t\tawait this._chatWidget.value.inlineChatWidget.chatWidget.acceptInput(\n\t\t\t\tlastInput,\n\t\t\t\tisVoiceInput,\n\t\t\t);\n\t\tthis._currentRequestId = response?.requestId;\n\t\tconst responsePromise = new DeferredPromise<\n\t\t\tIChatResponseModel | undefined\n\t\t>();\n\t\ttry {\n\t\t\tthis._requestActiveContextKey.set(true);\n\t\t\tif (response) {\n\t\t\t\tstore.add(\n\t\t\t\t\tresponse.onDidChange(async () => {\n\t\t\t\t\t\tresponseContent += response.response.value;\n\t\t\t\t\t\tif (response.isCanceled) {\n\t\t\t\t\t\t\tthis._requestActiveContextKey.set(false);\n\t\t\t\t\t\t\tresponsePromise.complete(undefined);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (response.isComplete) {\n\t\t\t\t\t\t\tthis._requestActiveContextKey.set(false);\n\t\t\t\t\t\t\tthis._requestActiveContextKey.set(false);\n\t\t\t\t\t\t\tconst containsCode =\n\t\t\t\t\t\t\t\tresponseContent.includes(\"```\");\n\t\t\t\t\t\t\tthis._chatWidget!.value.inlineChatWidget.updateChatMessage(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmessage: new MarkdownString(\n\t\t\t\t\t\t\t\t\t\tresponseContent,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\trequestId: response!.requestId,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tcontainsCode,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst firstCodeBlock =\n\t\t\t\t\t\t\t\tawait this.chatWidget?.inlineChatWidget.getCodeBlockInfo(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst secondCodeBlock =\n\t\t\t\t\t\t\t\tawait this.chatWidget?.inlineChatWidget.getCodeBlockInfo(\n\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._responseContainsCodeBlockContextKey.set(\n\t\t\t\t\t\t\t\t!!firstCodeBlock,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._responseContainsMulitpleCodeBlocksContextKey.set(\n\t\t\t\t\t\t\t\t!!secondCodeBlock,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._chatWidget?.value.inlineChatWidget.updateToolbar(\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponsePromise.complete(response);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t\tawait responsePromise.p;\n\t\t\treturn response;\n\t\t} catch {\n\t\t\treturn;\n\t\t} finally {\n\t\t\tstore.dispose();\n\t\t}\n\t}\n\n\tupdateInput(text: string, selectAll = true): void {\n\t\tconst widget = this._chatWidget?.value.inlineChatWidget;\n\t\tif (widget) {\n\t\t\twidget.value = text;\n\t\t\tif (selectAll) {\n\t\t\t\twidget.selectAll();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetInput(): string {\n\t\treturn this._chatWidget?.value.input() ?? \"\";\n\t}\n\n\tfocus(): void {\n\t\tthis._chatWidget?.value.focus();\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this._chatWidget?.rawValue?.hasFocus() ?? false;\n\t}\n\n\tpopulateHistory(up: boolean) {\n\t\tif (!this._chatWidget?.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst len = TerminalChatController._promptHistory.length;\n\t\tif (len === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._historyOffset === -1) {\n\t\t\t// remember the current value\n\t\t\tthis._historyCandidate =\n\t\t\t\tthis._chatWidget.value.inlineChatWidget.value;\n\t\t}\n\n\t\tconst newIdx = this._historyOffset + (up ? 1 : -1);\n\t\tif (newIdx >= len) {\n\t\t\t// reached the end\n\t\t\treturn;\n\t\t}\n\n\t\tlet entry: string;\n\t\tif (newIdx < 0) {\n\t\t\tentry = this._historyCandidate;\n\t\t\tthis._historyOffset = -1;\n\t\t} else {\n\t\t\tentry = TerminalChatController._promptHistory[newIdx];\n\t\t\tthis._historyOffset = newIdx;\n\t\t}\n\n\t\tthis._chatWidget.value.inlineChatWidget.value = entry;\n\t\tthis._chatWidget.value.inlineChatWidget.selectAll();\n\t}\n\n\tcancel(): void {\n\t\tthis._sessionCtor?.cancel();\n\t\tthis._sessionCtor = undefined;\n\t\tthis._activeRequestCts?.cancel();\n\t\tthis._requestActiveContextKey.set(false);\n\t\tconst model = this._chatWidget?.value.inlineChatWidget.getChatModel();\n\t\tif (!model?.sessionId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._chatService.cancelCurrentRequestForSession(model?.sessionId);\n\t}\n\n\tasync acceptCommand(shouldExecute: boolean): Promise<void> {\n\t\tconst code =\n\t\t\tawait this.chatWidget?.inlineChatWidget.getCodeBlockInfo(0);\n\t\tif (!code) {\n\t\t\treturn;\n\t\t}\n\t\tthis._chatWidget?.value.acceptCommand(\n\t\t\tcode.textEditorModel.getValue(),\n\t\t\tshouldExecute,\n\t\t);\n\t}\n\n\tasync reveal(): Promise<void> {\n\t\tawait this._createSession();\n\t\tthis._chatWidget?.value.reveal();\n\t\tthis._chatWidget?.value.focus();\n\t}\n\n\tasync viewInChat(): Promise<void> {\n\t\t//TODO: is this necessary? better way?\n\t\tconst widget = await showChatView(this._viewsService);\n\t\tconst currentRequest =\n\t\t\tthis.chatWidget?.inlineChatWidget.chatWidget.viewModel?.model\n\t\t\t\t.getRequests()\n\t\t\t\t.find((r) => r.id === this._currentRequestId);\n\t\tif (!widget || !currentRequest?.response) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message: IChatProgress[] = [];\n\t\tfor (const item of currentRequest.response.response.value) {\n\t\t\tif (item.kind === \"textEditGroup\") {\n\t\t\t\tfor (const group of item.edits) {\n\t\t\t\t\tmessage.push({\n\t\t\t\t\t\tkind: \"textEdit\",\n\t\t\t\t\t\tedits: group,\n\t\t\t\t\t\turi: item.uri,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmessage.push(item);\n\t\t\t}\n\t\t}\n\n\t\tthis._chatService.addCompleteRequest(\n\t\t\twidget!.viewModel!.sessionId,\n\t\t\t// DEBT: Add hardcoded agent name until its removed\n\t\t\t`@${this._terminalAgentName} ${currentRequest.message.text}`,\n\t\t\tcurrentRequest.variableData,\n\t\t\tcurrentRequest.attempt,\n\t\t\t{\n\t\t\t\tmessage,\n\t\t\t\tresult: currentRequest.response!.result,\n\t\t\t\tfollowups: currentRequest.response!.followups,\n\t\t\t},\n\t\t);\n\t\twidget.focusLastMessage();\n\t\tthis._chatWidget?.rawValue?.hide();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["Message"]
}
