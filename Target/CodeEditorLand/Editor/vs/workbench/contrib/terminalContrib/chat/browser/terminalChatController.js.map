{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/chat/browser/terminalChatController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from '@xterm/xterm';\nimport { CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Lazy } from '../../../../../base/common/lazy.js';\nimport { Disposable, DisposableStore, MutableDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { IContextKey, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IChatCodeBlockContextProviderService, showChatView } from '../../../chat/browser/chat.js';\nimport { IChatProgress, IChatService } from '../../../chat/common/chatService.js';\nimport { ITerminalContribution, ITerminalInstance, ITerminalService, IXtermTerminal, isDetachedTerminalInstance } from '../../../terminal/browser/terminal.js';\nimport { TerminalWidgetManager } from '../../../terminal/browser/widgets/widgetManager.js';\nimport { ITerminalProcessManager } from '../../../terminal/common/terminal.js';\nimport { TerminalChatWidget } from './terminalChatWidget.js';\n\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { ChatModel, IChatResponseModel } from '../../../chat/common/chatModel.js';\nimport { TerminalChatContextKeys } from './terminalChat.js';\nimport { IViewsService } from '../../../../services/views/common/viewsService.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../platform/storage/common/storage.js';\nimport { assertType } from '../../../../../base/common/types.js';\nimport { CancelablePromise, createCancelablePromise, DeferredPromise } from '../../../../../base/common/async.js';\nimport { ChatAgentLocation } from '../../../chat/common/chatAgents.js';\n\nconst enum Message {\n\tNONE = 0,\n\tACCEPT_SESSION = 1 << 0,\n\tCANCEL_SESSION = 1 << 1,\n\tPAUSE_SESSION = 1 << 2,\n\tCANCEL_REQUEST = 1 << 3,\n\tCANCEL_INPUT = 1 << 4,\n\tACCEPT_INPUT = 1 << 5,\n\tRERUN_INPUT = 1 << 6,\n}\n\nexport class TerminalChatController extends Disposable implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.chat';\n\n\tstatic get(instance: ITerminalInstance): TerminalChatController | null {\n\t\treturn instance.getContribution<TerminalChatController>(TerminalChatController.ID);\n\t}\n\t/**\n\t * Currently focused chat widget. This is used to track action context since 'active terminals'\n\t * are only tracked for non-detached terminal instanecs.\n\t */\n\tstatic activeChatWidget?: TerminalChatController;\n\n\tprivate static _storageKey = 'terminal-inline-chat-history';\n\tprivate static _promptHistory: string[] = [];\n\n\t/**\n\t * The chat widget for the controller, this is lazy as we don't want to instantiate it until\n\t * both it's required and xterm is ready.\n\t */\n\tprivate _chatWidget: Lazy<TerminalChatWidget> | undefined;\n\n\t/**\n\t * The chat widget for the controller, this will be undefined if xterm is not ready yet (ie. the\n\t * terminal is still initializing).\n\t */\n\tget chatWidget(): TerminalChatWidget | undefined { return this._chatWidget?.value; }\n\n\tprivate readonly _requestActiveContextKey: IContextKey<boolean>;\n\tprivate readonly _responseContainsCodeBlockContextKey: IContextKey<boolean>;\n\tprivate readonly _responseContainsMulitpleCodeBlocksContextKey: IContextKey<boolean>;\n\n\tprivate _messages = this._store.add(new Emitter<Message>());\n\n\tprivate _lastResponseContent: string | undefined;\n\tget lastResponseContent(): string | undefined {\n\t\treturn this._lastResponseContent;\n\t}\n\n\treadonly onDidAcceptInput = Event.filter(this._messages.event, m => m === Message.ACCEPT_INPUT, this._store);\n\tget onDidHide() { return this.chatWidget?.onDidHide ?? Event.None; }\n\n\tprivate _terminalAgentName = 'terminal';\n\n\tprivate readonly _model: MutableDisposable<ChatModel> = this._register(new MutableDisposable());\n\n\tget scopedContextKeyService(): IContextKeyService {\n\t\treturn this._chatWidget?.value.inlineChatWidget.scopedContextKeyService ?? this._contextKeyService;\n\t}\n\n\tprivate _sessionCtor: CancelablePromise<void> | undefined;\n\tprivate _historyOffset: number = -1;\n\tprivate _historyCandidate: string = '';\n\tprivate _historyUpdate: (prompt: string) => void;\n\n\tprivate _currentRequestId: string | undefined;\n\tprivate _activeRequestCts?: CancellationTokenSource;\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IChatService private readonly _chatService: IChatService,\n\t\t@IChatCodeBlockContextProviderService private readonly _chatCodeBlockContextProviderService: IChatCodeBlockContextProviderService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\t\tsuper();\n\n\t\tthis._requestActiveContextKey = TerminalChatContextKeys.requestActive.bindTo(this._contextKeyService);\n\t\tthis._responseContainsCodeBlockContextKey = TerminalChatContextKeys.responseContainsCodeBlock.bindTo(this._contextKeyService);\n\t\tthis._responseContainsMulitpleCodeBlocksContextKey = TerminalChatContextKeys.responseContainsMultipleCodeBlocks.bindTo(this._contextKeyService);\n\n\t\tthis._register(this._chatCodeBlockContextProviderService.registerProvider({\n\t\t\tgetCodeBlockContext: (editor) => {\n\t\t\t\tif (!editor || !this._chatWidget?.hasValue || !this.hasFocus()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\telement: editor,\n\t\t\t\t\tcode: editor.getValue(),\n\t\t\t\t\tcodeBlockIndex: 0,\n\t\t\t\t\tlanguageId: editor.getModel()!.getLanguageId()\n\t\t\t\t};\n\t\t\t}\n\t\t}, 'terminal'));\n\n\t\tTerminalChatController._promptHistory = JSON.parse(this._storageService.get(TerminalChatController._storageKey, StorageScope.PROFILE, '[]'));\n\t\tthis._historyUpdate = (prompt: string) => {\n\t\t\tconst idx = TerminalChatController._promptHistory.indexOf(prompt);\n\t\t\tif (idx >= 0) {\n\t\t\t\tTerminalChatController._promptHistory.splice(idx, 1);\n\t\t\t}\n\t\t\tTerminalChatController._promptHistory.unshift(prompt);\n\t\t\tthis._historyOffset = -1;\n\t\t\tthis._historyCandidate = '';\n\t\t\tthis._storageService.store(TerminalChatController._storageKey, JSON.stringify(TerminalChatController._promptHistory), StorageScope.PROFILE, StorageTarget.USER);\n\t\t};\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._chatWidget = new Lazy(() => {\n\t\t\tconst chatWidget = this._register(this._instantiationService.createInstance(TerminalChatWidget, this._instance.domElement!, this._instance, xterm));\n\t\t\tthis._register(chatWidget.focusTracker.onDidFocus(() => {\n\t\t\t\tTerminalChatController.activeChatWidget = this;\n\t\t\t\tif (!isDetachedTerminalInstance(this._instance)) {\n\t\t\t\t\tthis._terminalService.setActiveInstance(this._instance);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._register(chatWidget.focusTracker.onDidBlur(() => {\n\t\t\t\tTerminalChatController.activeChatWidget = undefined;\n\t\t\t\tthis._instance.resetScrollbarVisibility();\n\t\t\t}));\n\t\t\tif (!this._instance.domElement) {\n\t\t\t\tthrow new Error('FindWidget expected terminal DOM to be initialized');\n\t\t\t}\n\t\t\treturn chatWidget;\n\t\t});\n\t}\n\n\tprivate async _createSession(): Promise<void> {\n\t\tthis._sessionCtor = createCancelablePromise<void>(async token => {\n\t\t\tif (!this._model.value) {\n\t\t\t\tthis._model.value = this._chatService.startSession(ChatAgentLocation.Terminal, token);\n\n\t\t\t\tif (!this._model.value) {\n\t\t\t\t\tthrow new Error('Failed to start chat session');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._register(toDisposable(() => this._sessionCtor?.cancel()));\n\t}\n\n\tprivate _forcedPlaceholder: string | undefined = undefined;\n\n\tprivate _updatePlaceholder(): void {\n\t\tconst inlineChatWidget = this._chatWidget?.value.inlineChatWidget;\n\t\tif (inlineChatWidget) {\n\t\t\tinlineChatWidget.placeholder = this._getPlaceholderText();\n\t\t}\n\t}\n\n\tprivate _getPlaceholderText(): string {\n\t\treturn this._forcedPlaceholder ?? '';\n\t}\n\n\tsetPlaceholder(text: string): void {\n\t\tthis._forcedPlaceholder = text;\n\t\tthis._updatePlaceholder();\n\t}\n\n\tresetPlaceholder(): void {\n\t\tthis._forcedPlaceholder = undefined;\n\t\tthis._updatePlaceholder();\n\t}\n\n\tclear(): void {\n\t\tthis.cancel();\n\t\tthis._model.clear();\n\t\tthis._responseContainsCodeBlockContextKey.reset();\n\t\tthis._requestActiveContextKey.reset();\n\t\tthis._chatWidget?.value.hide();\n\t\tthis._chatWidget?.value.setValue(undefined);\n\t}\n\n\tasync acceptInput(isVoiceInput?: boolean): Promise<IChatResponseModel | undefined> {\n\t\tassertType(this._chatWidget);\n\t\tif (!this._model.value) {\n\t\t\tawait this.reveal();\n\t\t}\n\t\tassertType(this._model.value);\n\t\tconst lastInput = this._chatWidget.value.inlineChatWidget.value;\n\t\tif (!lastInput) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._model.value;\n\t\tthis._chatWidget.value.inlineChatWidget.setChatModel(model);\n\t\tthis._historyUpdate(lastInput);\n\t\tthis._activeRequestCts?.cancel();\n\t\tthis._activeRequestCts = new CancellationTokenSource();\n\t\tconst store = new DisposableStore();\n\t\tthis._requestActiveContextKey.set(true);\n\t\tlet responseContent = '';\n\t\tconst response = await this._chatWidget.value.inlineChatWidget.chatWidget.acceptInput(lastInput, isVoiceInput);\n\t\tthis._currentRequestId = response?.requestId;\n\t\tconst responsePromise = new DeferredPromise<IChatResponseModel | undefined>();\n\t\ttry {\n\t\t\tthis._requestActiveContextKey.set(true);\n\t\t\tif (response) {\n\t\t\t\tstore.add(response.onDidChange(async () => {\n\t\t\t\t\tresponseContent += response.response.value;\n\t\t\t\t\tif (response.isCanceled) {\n\t\t\t\t\t\tthis._requestActiveContextKey.set(false);\n\t\t\t\t\t\tresponsePromise.complete(undefined);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (response.isComplete) {\n\t\t\t\t\t\tthis._requestActiveContextKey.set(false);\n\t\t\t\t\t\tthis._requestActiveContextKey.set(false);\n\t\t\t\t\t\tconst containsCode = responseContent.includes('```');\n\t\t\t\t\t\tthis._chatWidget!.value.inlineChatWidget.updateChatMessage({ message: new MarkdownString(responseContent), requestId: response!.requestId }, false, containsCode);\n\t\t\t\t\t\tconst firstCodeBlock = await this.chatWidget?.inlineChatWidget.getCodeBlockInfo(0);\n\t\t\t\t\t\tconst secondCodeBlock = await this.chatWidget?.inlineChatWidget.getCodeBlockInfo(1);\n\t\t\t\t\t\tthis._responseContainsCodeBlockContextKey.set(!!firstCodeBlock);\n\t\t\t\t\t\tthis._responseContainsMulitpleCodeBlocksContextKey.set(!!secondCodeBlock);\n\t\t\t\t\t\tthis._chatWidget?.value.inlineChatWidget.updateToolbar(true);\n\t\t\t\t\t\tresponsePromise.complete(response);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\tawait responsePromise.p;\n\t\t\treturn response;\n\t\t} catch {\n\t\t\treturn;\n\t\t} finally {\n\t\t\tstore.dispose();\n\t\t}\n\t}\n\n\tupdateInput(text: string, selectAll = true): void {\n\t\tconst widget = this._chatWidget?.value.inlineChatWidget;\n\t\tif (widget) {\n\t\t\twidget.value = text;\n\t\t\tif (selectAll) {\n\t\t\t\twidget.selectAll();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetInput(): string {\n\t\treturn this._chatWidget?.value.input() ?? '';\n\t}\n\n\tfocus(): void {\n\t\tthis._chatWidget?.value.focus();\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this._chatWidget?.rawValue?.hasFocus() ?? false;\n\t}\n\n\tpopulateHistory(up: boolean) {\n\t\tif (!this._chatWidget?.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst len = TerminalChatController._promptHistory.length;\n\t\tif (len === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._historyOffset === -1) {\n\t\t\t// remember the current value\n\t\t\tthis._historyCandidate = this._chatWidget.value.inlineChatWidget.value;\n\t\t}\n\n\t\tconst newIdx = this._historyOffset + (up ? 1 : -1);\n\t\tif (newIdx >= len) {\n\t\t\t// reached the end\n\t\t\treturn;\n\t\t}\n\n\t\tlet entry: string;\n\t\tif (newIdx < 0) {\n\t\t\tentry = this._historyCandidate;\n\t\t\tthis._historyOffset = -1;\n\t\t} else {\n\t\t\tentry = TerminalChatController._promptHistory[newIdx];\n\t\t\tthis._historyOffset = newIdx;\n\t\t}\n\n\t\tthis._chatWidget.value.inlineChatWidget.value = entry;\n\t\tthis._chatWidget.value.inlineChatWidget.selectAll();\n\t}\n\n\tcancel(): void {\n\t\tthis._sessionCtor?.cancel();\n\t\tthis._sessionCtor = undefined;\n\t\tthis._activeRequestCts?.cancel();\n\t\tthis._requestActiveContextKey.set(false);\n\t\tconst model = this._chatWidget?.value.inlineChatWidget.getChatModel();\n\t\tif (!model?.sessionId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._chatService.cancelCurrentRequestForSession(model?.sessionId);\n\t}\n\n\tasync acceptCommand(shouldExecute: boolean): Promise<void> {\n\t\tconst code = await this.chatWidget?.inlineChatWidget.getCodeBlockInfo(0);\n\t\tif (!code) {\n\t\t\treturn;\n\t\t}\n\t\tthis._chatWidget?.value.acceptCommand(code.textEditorModel.getValue(), shouldExecute);\n\t}\n\n\tasync reveal(): Promise<void> {\n\t\tawait this._createSession();\n\t\tthis._chatWidget?.value.reveal();\n\t\tthis._chatWidget?.value.focus();\n\t}\n\n\tasync viewInChat(): Promise<void> {\n\t\t//TODO: is this necessary? better way?\n\t\tconst widget = await showChatView(this._viewsService);\n\t\tconst currentRequest = this.chatWidget?.inlineChatWidget.chatWidget.viewModel?.model.getRequests().find(r => r.id === this._currentRequestId);\n\t\tif (!widget || !currentRequest?.response) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message: IChatProgress[] = [];\n\t\tfor (const item of currentRequest.response.response.value) {\n\t\t\tif (item.kind === 'textEditGroup') {\n\t\t\t\tfor (const group of item.edits) {\n\t\t\t\t\tmessage.push({\n\t\t\t\t\t\tkind: 'textEdit',\n\t\t\t\t\t\tedits: group,\n\t\t\t\t\t\turi: item.uri\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmessage.push(item);\n\t\t\t}\n\t\t}\n\n\t\tthis._chatService.addCompleteRequest(widget!.viewModel!.sessionId,\n\t\t\t// DEBT: Add hardcoded agent name until its removed\n\t\t\t`@${this._terminalAgentName} ${currentRequest.message.text}`,\n\t\t\tcurrentRequest.variableData,\n\t\t\tcurrentRequest.attempt,\n\t\t\t{\n\t\t\t\tmessage,\n\t\t\t\tresult: currentRequest.response!.result,\n\t\t\t\tfollowups: currentRequest.response!.followups\n\t\t\t});\n\t\twidget.focusLastMessage();\n\t\tthis._chatWidget?.rawValue?.hide();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["Message"]
}
