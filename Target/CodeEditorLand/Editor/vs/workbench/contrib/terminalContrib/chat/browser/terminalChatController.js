var y=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var g=(l,c,e,t)=>{for(var i=t>1?void 0:t?I(c,e):c,s=l.length-1,n;s>=0;s--)(n=l[s])&&(i=(t?n(c,e,i):n(i))||i);return t&&i&&y(c,e,i),i},a=(l,c)=>(e,t)=>c(e,t,l);import{CancellationTokenSource as S}from"../../../../../base/common/cancellation.js";import{Emitter as W,Event as m}from"../../../../../base/common/event.js";import{Lazy as x}from"../../../../../base/common/lazy.js";import{Disposable as w,DisposableStore as P,MutableDisposable as K,toDisposable as T}from"../../../../../base/common/lifecycle.js";import{IContextKeyService as b}from"../../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as k}from"../../../../../platform/instantiation/common/instantiation.js";import{IChatCodeBlockContextProviderService as E,showChatView as R}from"../../../chat/browser/chat.js";import{IChatService as q}from"../../../chat/common/chatService.js";import{ITerminalService as A,isDetachedTerminalInstance as B}from"../../../terminal/browser/terminal.js";import"../../../terminal/browser/widgets/widgetManager.js";import"../../../terminal/common/terminal.js";import{TerminalChatWidget as N}from"./terminalChatWidget.js";import{MarkdownString as D}from"../../../../../base/common/htmlContent.js";import"../../../chat/common/chatModel.js";import{TerminalChatContextKeys as u}from"./terminalChat.js";import{IViewsService as O}from"../../../../services/views/common/viewsService.js";import{IStorageService as M,StorageScope as C,StorageTarget as H}from"../../../../../platform/storage/common/storage.js";import{assertType as f}from"../../../../../base/common/types.js";import{createCancelablePromise as U,DeferredPromise as L}from"../../../../../base/common/async.js";import{ChatAgentLocation as V}from"../../../chat/common/chatAgents.js";var F=(o=>(o[o.NONE=0]="NONE",o[o.ACCEPT_SESSION=1]="ACCEPT_SESSION",o[o.CANCEL_SESSION=2]="CANCEL_SESSION",o[o.PAUSE_SESSION=4]="PAUSE_SESSION",o[o.CANCEL_REQUEST=8]="CANCEL_REQUEST",o[o.CANCEL_INPUT=16]="CANCEL_INPUT",o[o.ACCEPT_INPUT=32]="ACCEPT_INPUT",o[o.RERUN_INPUT=64]="RERUN_INPUT",o))(F||{});let r=class extends w{constructor(e,t,i,s,n,h,o,p,v,X){super();this._instance=e;this._terminalService=s;this._instantiationService=n;this._contextKeyService=h;this._chatService=o;this._chatCodeBlockContextProviderService=p;this._viewsService=v;this._storageService=X;this._requestActiveContextKey=u.requestActive.bindTo(this._contextKeyService),this._responseContainsCodeBlockContextKey=u.responseContainsCodeBlock.bindTo(this._contextKeyService),this._responseContainsMulitpleCodeBlocksContextKey=u.responseContainsMultipleCodeBlocks.bindTo(this._contextKeyService),this._register(this._chatCodeBlockContextProviderService.registerProvider({getCodeBlockContext:d=>{if(!(!d||!this._chatWidget?.hasValue||!this.hasFocus()))return{element:d,code:d.getValue(),codeBlockIndex:0,languageId:d.getModel().getLanguageId()}}},"terminal")),r._promptHistory=JSON.parse(this._storageService.get(r._storageKey,C.PROFILE,"[]")),this._historyUpdate=d=>{const _=r._promptHistory.indexOf(d);_>=0&&r._promptHistory.splice(_,1),r._promptHistory.unshift(d),this._historyOffset=-1,this._historyCandidate="",this._storageService.store(r._storageKey,JSON.stringify(r._promptHistory),C.PROFILE,H.USER)}}static ID="terminal.chat";static get(e){return e.getContribution(r.ID)}static activeChatWidget;static _storageKey="terminal-inline-chat-history";static _promptHistory=[];_chatWidget;get chatWidget(){return this._chatWidget?.value}_requestActiveContextKey;_responseContainsCodeBlockContextKey;_responseContainsMulitpleCodeBlocksContextKey;_messages=this._store.add(new W);_lastResponseContent;get lastResponseContent(){return this._lastResponseContent}onDidAcceptInput=m.filter(this._messages.event,e=>e===32,this._store);get onDidHide(){return this.chatWidget?.onDidHide??m.None}_terminalAgentName="terminal";_model=this._register(new K);get scopedContextKeyService(){return this._chatWidget?.value.inlineChatWidget.scopedContextKeyService??this._contextKeyService}_sessionCtor;_historyOffset=-1;_historyCandidate="";_historyUpdate;_currentRequestId;_activeRequestCts;xtermReady(e){this._chatWidget=new x(()=>{const t=this._register(this._instantiationService.createInstance(N,this._instance.domElement,this._instance,e));if(this._register(t.focusTracker.onDidFocus(()=>{r.activeChatWidget=this,B(this._instance)||this._terminalService.setActiveInstance(this._instance)})),this._register(t.focusTracker.onDidBlur(()=>{r.activeChatWidget=void 0,this._instance.resetScrollbarVisibility()})),!this._instance.domElement)throw new Error("FindWidget expected terminal DOM to be initialized");return t})}async _createSession(){this._sessionCtor=U(async e=>{if(!this._model.value&&(this._model.value=this._chatService.startSession(V.Terminal,e),!this._model.value))throw new Error("Failed to start chat session")}),this._register(T(()=>this._sessionCtor?.cancel()))}_forcedPlaceholder=void 0;_updatePlaceholder(){const e=this._chatWidget?.value.inlineChatWidget;e&&(e.placeholder=this._getPlaceholderText())}_getPlaceholderText(){return this._forcedPlaceholder??""}setPlaceholder(e){this._forcedPlaceholder=e,this._updatePlaceholder()}resetPlaceholder(){this._forcedPlaceholder=void 0,this._updatePlaceholder()}clear(){this.cancel(),this._model.clear(),this._responseContainsCodeBlockContextKey.reset(),this._requestActiveContextKey.reset(),this._chatWidget?.value.hide(),this._chatWidget?.value.setValue(void 0)}async acceptInput(){f(this._chatWidget),this._model.value||await this.reveal(),f(this._model.value);const e=this._chatWidget.value.inlineChatWidget.value;if(!e)return;const t=this._model.value;this._chatWidget.value.inlineChatWidget.setChatModel(t),this._historyUpdate(e),this._activeRequestCts?.cancel(),this._activeRequestCts=new S;const i=new P;this._requestActiveContextKey.set(!0);let s="";const n=await this._chatWidget.value.inlineChatWidget.chatWidget.acceptInput(e);this._currentRequestId=n?.requestId;const h=new L;try{return this._requestActiveContextKey.set(!0),n&&i.add(n.onDidChange(async()=>{if(s+=n.response.value,n.isCanceled){this._requestActiveContextKey.set(!1),h.complete(void 0);return}if(n.isComplete){this._requestActiveContextKey.set(!1),this._requestActiveContextKey.set(!1);const o=s.includes("```");this._chatWidget.value.inlineChatWidget.updateChatMessage({message:new D(s),requestId:n.requestId},!1,o);const p=await this.chatWidget?.inlineChatWidget.getCodeBlockInfo(0),v=await this.chatWidget?.inlineChatWidget.getCodeBlockInfo(1);this._responseContainsCodeBlockContextKey.set(!!p),this._responseContainsMulitpleCodeBlocksContextKey.set(!!v),this._chatWidget?.value.inlineChatWidget.updateToolbar(!0),h.complete(n)}})),await h.p,n}catch{return}finally{i.dispose()}}updateInput(e,t=!0){const i=this._chatWidget?.value.inlineChatWidget;i&&(i.value=e,t&&i.selectAll())}getInput(){return this._chatWidget?.value.input()??""}focus(){this._chatWidget?.value.focus()}hasFocus(){return this._chatWidget?.rawValue?.hasFocus()??!1}populateHistory(e){if(!this._chatWidget?.value)return;const t=r._promptHistory.length;if(t===0)return;this._historyOffset===-1&&(this._historyCandidate=this._chatWidget.value.inlineChatWidget.value);const i=this._historyOffset+(e?1:-1);if(i>=t)return;let s;i<0?(s=this._historyCandidate,this._historyOffset=-1):(s=r._promptHistory[i],this._historyOffset=i),this._chatWidget.value.inlineChatWidget.value=s,this._chatWidget.value.inlineChatWidget.selectAll()}cancel(){this._sessionCtor?.cancel(),this._sessionCtor=void 0,this._activeRequestCts?.cancel(),this._requestActiveContextKey.set(!1);const e=this._chatWidget?.value.inlineChatWidget.getChatModel();e?.sessionId&&this._chatService.cancelCurrentRequestForSession(e?.sessionId)}async acceptCommand(e){const t=await this.chatWidget?.inlineChatWidget.getCodeBlockInfo(0);t&&this._chatWidget?.value.acceptCommand(t.textEditorModel.getValue(),e)}async reveal(){await this._createSession(),this._chatWidget?.value.reveal(),this._chatWidget?.value.focus()}async viewInChat(){const e=await R(this._viewsService),t=this.chatWidget?.inlineChatWidget.chatWidget.viewModel?.model.getRequests().find(s=>s.id===this._currentRequestId);if(!e||!t?.response)return;const i=[];for(const s of t.response.response.value)if(s.kind==="textEditGroup")for(const n of s.edits)i.push({kind:"textEdit",edits:n,uri:s.uri});else i.push(s);this._chatService.addCompleteRequest(e.viewModel.sessionId,`@${this._terminalAgentName} ${t.message.text}`,t.variableData,t.attempt,{message:i,result:t.response.result,followups:t.response.followups}),e.focusLastMessage(),this._chatWidget?.rawValue?.hide()}};r=g([a(3,A),a(4,k),a(5,b),a(6,q),a(7,E),a(8,O),a(9,M)],r);export{r as TerminalChatController};
