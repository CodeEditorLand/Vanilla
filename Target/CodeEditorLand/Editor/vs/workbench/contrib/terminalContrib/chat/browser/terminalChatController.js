var I=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var m=(h,d,e,t)=>{for(var i=t>1?void 0:t?S(d,e):d,o=h.length-1,n;o>=0;o--)(n=h[o])&&(i=(t?n(d,e,i):n(i))||i);return t&&i&&I(d,e,i),i},c=(h,d)=>(e,t)=>d(e,t,h);import{CancellationTokenSource as W}from"../../../../../base/common/cancellation.js";import{Emitter as x,Event as C}from"../../../../../base/common/event.js";import{Lazy as w}from"../../../../../base/common/lazy.js";import{Disposable as P,DisposableStore as K,MutableDisposable as T,toDisposable as b}from"../../../../../base/common/lifecycle.js";import{IContextKeyService as k}from"../../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as E}from"../../../../../platform/instantiation/common/instantiation.js";import{IChatCodeBlockContextProviderService as R,showChatView as q}from"../../../chat/browser/chat.js";import{IChatService as A}from"../../../chat/common/chatService.js";import{ITerminalService as B,isDetachedTerminalInstance as N}from"../../../terminal/browser/terminal.js";import{TerminalChatWidget as D}from"./terminalChatWidget.js";import{DeferredPromise as O,createCancelablePromise as M}from"../../../../../base/common/async.js";import{MarkdownString as H}from"../../../../../base/common/htmlContent.js";import{assertType as f}from"../../../../../base/common/types.js";import{IStorageService as U,StorageScope as y,StorageTarget as L}from"../../../../../platform/storage/common/storage.js";import{IViewsService as V}from"../../../../services/views/common/viewsService.js";import{ChatAgentLocation as F}from"../../../chat/common/chatAgents.js";import{TerminalChatContextKeys as u}from"./terminalChat.js";var X=(s=>(s[s.NONE=0]="NONE",s[s.ACCEPT_SESSION=1]="ACCEPT_SESSION",s[s.CANCEL_SESSION=2]="CANCEL_SESSION",s[s.PAUSE_SESSION=4]="PAUSE_SESSION",s[s.CANCEL_REQUEST=8]="CANCEL_REQUEST",s[s.CANCEL_INPUT=16]="CANCEL_INPUT",s[s.ACCEPT_INPUT=32]="ACCEPT_INPUT",s[s.RERUN_INPUT=64]="RERUN_INPUT",s))(X||{});let r=class extends P{constructor(e,t,i,o,n,a,s,p,v,_){super();this._instance=e;this._terminalService=o;this._instantiationService=n;this._contextKeyService=a;this._chatService=s;this._chatCodeBlockContextProviderService=p;this._viewsService=v;this._storageService=_;this._requestActiveContextKey=u.requestActive.bindTo(this._contextKeyService),this._responseContainsCodeBlockContextKey=u.responseContainsCodeBlock.bindTo(this._contextKeyService),this._responseContainsMulitpleCodeBlocksContextKey=u.responseContainsMultipleCodeBlocks.bindTo(this._contextKeyService),this._register(this._chatCodeBlockContextProviderService.registerProvider({getCodeBlockContext:l=>{if(!(!l||!this._chatWidget?.hasValue||!this.hasFocus()))return{element:l,code:l.getValue(),codeBlockIndex:0,languageId:l.getModel().getLanguageId()}}},"terminal")),r._promptHistory=JSON.parse(this._storageService.get(r._storageKey,y.PROFILE,"[]")),this._historyUpdate=l=>{const g=r._promptHistory.indexOf(l);g>=0&&r._promptHistory.splice(g,1),r._promptHistory.unshift(l),this._historyOffset=-1,this._historyCandidate="",this._storageService.store(r._storageKey,JSON.stringify(r._promptHistory),y.PROFILE,L.USER)}}static ID="terminal.chat";static get(e){return e.getContribution(r.ID)}static activeChatWidget;static _storageKey="terminal-inline-chat-history";static _promptHistory=[];_chatWidget;get chatWidget(){return this._chatWidget?.value}_requestActiveContextKey;_responseContainsCodeBlockContextKey;_responseContainsMulitpleCodeBlocksContextKey;_messages=this._store.add(new x);_lastResponseContent;get lastResponseContent(){return this._lastResponseContent}onDidAcceptInput=C.filter(this._messages.event,e=>e===32,this._store);get onDidHide(){return this.chatWidget?.onDidHide??C.None}_terminalAgentName="terminal";_model=this._register(new T);get scopedContextKeyService(){return this._chatWidget?.value.inlineChatWidget.scopedContextKeyService??this._contextKeyService}_sessionCtor;_historyOffset=-1;_historyCandidate="";_historyUpdate;_currentRequestId;_activeRequestCts;xtermReady(e){this._chatWidget=new w(()=>{const t=this._register(this._instantiationService.createInstance(D,this._instance.domElement,this._instance,e));if(this._register(t.focusTracker.onDidFocus(()=>{r.activeChatWidget=this,N(this._instance)||this._terminalService.setActiveInstance(this._instance)})),this._register(t.focusTracker.onDidBlur(()=>{r.activeChatWidget=void 0,this._instance.resetScrollbarVisibility()})),!this._instance.domElement)throw new Error("FindWidget expected terminal DOM to be initialized");return t})}async _createSession(){this._sessionCtor=M(async e=>{if(!this._model.value&&(this._model.value=this._chatService.startSession(F.Terminal,e),!this._model.value))throw new Error("Failed to start chat session")}),this._register(b(()=>this._sessionCtor?.cancel()))}_forcedPlaceholder=void 0;_updatePlaceholder(){const e=this._chatWidget?.value.inlineChatWidget;e&&(e.placeholder=this._getPlaceholderText())}_getPlaceholderText(){return this._forcedPlaceholder??""}setPlaceholder(e){this._forcedPlaceholder=e,this._updatePlaceholder()}resetPlaceholder(){this._forcedPlaceholder=void 0,this._updatePlaceholder()}clear(){this.cancel(),this._model.clear(),this._responseContainsCodeBlockContextKey.reset(),this._requestActiveContextKey.reset(),this._chatWidget?.value.hide(),this._chatWidget?.value.setValue(void 0)}async acceptInput(e){f(this._chatWidget),this._model.value||await this.reveal(),f(this._model.value);const t=this._chatWidget.value.inlineChatWidget.value;if(!t)return;const i=this._model.value;this._chatWidget.value.inlineChatWidget.setChatModel(i),this._historyUpdate(t),this._activeRequestCts?.cancel(),this._activeRequestCts=new W;const o=new K;this._requestActiveContextKey.set(!0);let n="";const a=await this._chatWidget.value.inlineChatWidget.chatWidget.acceptInput(t,e);this._currentRequestId=a?.requestId;const s=new O;try{return this._requestActiveContextKey.set(!0),a&&o.add(a.onDidChange(async()=>{if(n+=a.response.value,a.isCanceled){this._requestActiveContextKey.set(!1),s.complete(void 0);return}if(a.isComplete){this._requestActiveContextKey.set(!1),this._requestActiveContextKey.set(!1);const p=n.includes("```");this._chatWidget.value.inlineChatWidget.updateChatMessage({message:new H(n),requestId:a.requestId},!1,p);const v=await this.chatWidget?.inlineChatWidget.getCodeBlockInfo(0),_=await this.chatWidget?.inlineChatWidget.getCodeBlockInfo(1);this._responseContainsCodeBlockContextKey.set(!!v),this._responseContainsMulitpleCodeBlocksContextKey.set(!!_),this._chatWidget?.value.inlineChatWidget.updateToolbar(!0),s.complete(a)}})),await s.p,a}catch{return}finally{o.dispose()}}updateInput(e,t=!0){const i=this._chatWidget?.value.inlineChatWidget;i&&(i.value=e,t&&i.selectAll())}getInput(){return this._chatWidget?.value.input()??""}focus(){this._chatWidget?.value.focus()}hasFocus(){return this._chatWidget?.rawValue?.hasFocus()??!1}populateHistory(e){if(!this._chatWidget?.value)return;const t=r._promptHistory.length;if(t===0)return;this._historyOffset===-1&&(this._historyCandidate=this._chatWidget.value.inlineChatWidget.value);const i=this._historyOffset+(e?1:-1);if(i>=t)return;let o;i<0?(o=this._historyCandidate,this._historyOffset=-1):(o=r._promptHistory[i],this._historyOffset=i),this._chatWidget.value.inlineChatWidget.value=o,this._chatWidget.value.inlineChatWidget.selectAll()}cancel(){this._sessionCtor?.cancel(),this._sessionCtor=void 0,this._activeRequestCts?.cancel(),this._requestActiveContextKey.set(!1);const e=this._chatWidget?.value.inlineChatWidget.getChatModel();e?.sessionId&&this._chatService.cancelCurrentRequestForSession(e?.sessionId)}async acceptCommand(e){const t=await this.chatWidget?.inlineChatWidget.getCodeBlockInfo(0);t&&this._chatWidget?.value.acceptCommand(t.textEditorModel.getValue(),e)}async reveal(){await this._createSession(),this._chatWidget?.value.reveal(),this._chatWidget?.value.focus()}async viewInChat(){const e=await q(this._viewsService),t=this.chatWidget?.inlineChatWidget.chatWidget.viewModel?.model.getRequests().find(o=>o.id===this._currentRequestId);if(!e||!t?.response)return;const i=[];for(const o of t.response.response.value)if(o.kind==="textEditGroup")for(const n of o.edits)i.push({kind:"textEdit",edits:n,uri:o.uri});else i.push(o);this._chatService.addCompleteRequest(e.viewModel.sessionId,`@${this._terminalAgentName} ${t.message.text}`,t.variableData,t.attempt,{message:i,result:t.response.result,followups:t.response.followups}),e.focusLastMessage(),this._chatWidget?.rawValue?.hide()}};r=m([c(3,B),c(4,E),c(5,k),c(6,A),c(7,R),c(8,V),c(9,U)],r);export{r as TerminalChatController};
