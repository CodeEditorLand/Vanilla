var _=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var w=(o,d,t,s)=>{for(var i=s>1?void 0:s?T(d,t):d,r=o.length-1,g;r>=0;r--)(g=o[r])&&(i=(s?g(d,t,i):g(i))||i);return s&&i&&_(d,t,i),i},h=(o,d)=>(t,s)=>d(t,s,o);import*as x from"../../../../../../vs/base/browser/dom.js";import{AutoOpenBarrier as W}from"../../../../../../vs/base/common/async.js";import{Event as A}from"../../../../../../vs/base/common/event.js";import{KeyCode as u}from"../../../../../../vs/base/common/keyCodes.js";import{DisposableStore as K,MutableDisposable as k,toDisposable as O}from"../../../../../../vs/base/common/lifecycle.js";import{localize2 as l}from"../../../../../../vs/nls.js";import{IConfigurationService as V}from"../../../../../../vs/platform/configuration/common/configuration.js";import{ContextKeyExpr as a,IContextKeyService as N}from"../../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as D}from"../../../../../../vs/platform/instantiation/common/instantiation.js";import{KeybindingWeight as S}from"../../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import{IStorageService as E,StorageScope as C,StorageTarget as R}from"../../../../../../vs/platform/storage/common/storage.js";import{TerminalSettingId as H}from"../../../../../../vs/platform/terminal/common/terminal.js";import{ShellIntegrationOscPs as B}from"../../../../../../vs/platform/terminal/common/xterm/shellIntegrationAddon.js";import"../../../../../../vs/workbench/contrib/terminal/browser/terminal.js";import{registerActiveInstanceAction as m}from"../../../../../../vs/workbench/contrib/terminal/browser/terminalActions.js";import{registerTerminalContribution as M}from"../../../../../../vs/workbench/contrib/terminal/browser/terminalExtensions.js";import"../../../../../../vs/workbench/contrib/terminal/browser/widgets/widgetManager.js";import{TERMINAL_CONFIG_SECTION as X}from"../../../../../../vs/workbench/contrib/terminal/common/terminal.js";import{TerminalContextKeys as e}from"../../../../../../vs/workbench/contrib/terminal/common/terminalContextKey.js";import{parseCompletionsFromShell as q,SuggestAddon as L,VSCodeSuggestOscPt as J}from"../../../../../../vs/workbench/contrib/terminalContrib/suggest/browser/terminalSuggestAddon.js";import{TerminalSuggestCommandId as p}from"../../../../../../vs/workbench/contrib/terminalContrib/suggest/common/terminal.suggest.js";import{terminalSuggestConfigSection as v,TerminalSuggestSettingId as I}from"../../../../../../vs/workbench/contrib/terminalContrib/suggest/common/terminalSuggestConfiguration.js";import"../../../../../../vs/workbench/services/suggest/browser/simpleCompletionItem.js";var z=(d=>(d.CachedPwshCommandsStorageKey="terminal.suggest.pwshCommands",d))(z||{});let n=class extends K{constructor(t,s,i,r,g,b,y){super();this._instance=t;this._contextKeyService=r;this._configurationService=g;this._instantiationService=b;this._storageService=y;if(this.add(O(()=>this._addon?.dispose())),this._terminalSuggestWidgetVisibleContextKey=e.suggestWidgetVisible.bindTo(this._contextKeyService),n._cachedPwshCommands.size===0){const c=this._storageService.get("terminal.suggest.pwshCommands",C.APPLICATION,void 0);if(c!==void 0){const f=JSON.parse(c);for(const P of f)n._cachedPwshCommands.add(P)}}this.add(this._configurationService.onDidChangeConfiguration(c=>{c.affectsConfiguration(I.Enabled)&&this.clearSuggestCache()}))}static ID="terminal.suggest";static get(t){return t.getContribution(n.ID)}_xterm;_addon=new k;_terminalSuggestWidgetContextKeys=new Set(e.suggestWidgetVisible.key);_terminalSuggestWidgetVisibleContextKey;get addon(){return this._addon.value}static _cachedPwshCommands=new Set;xtermReady(t){this._xterm=t.raw,this._configurationService.getValue(v).enabled&&this.add(t.raw.parser.registerOscHandler(B.VSCode,r=>this._handleVSCodeSequence(r)))}_handleVSCodeSequence(t){if(!this._xterm)return!1;const[s,...i]=t.split(";");switch(s){case J.CompletionsPwshCommands:return this._handleCompletionsPwshCommandsSequence(this._xterm,t,s,i)}return!1}async _handleCompletionsPwshCommandsSequence(t,s,i,r){const g=r[0],b=JSON.parse(s.slice(i.length+g.length+2)),y=q(b),c=n._cachedPwshCommands;c.clear();for(const f of y)c.add(f);return this._storageService.store("terminal.suggest.pwshCommands",JSON.stringify(Array.from(c.values())),C.APPLICATION,R.MACHINE),!0}clearSuggestCache(){n._cachedPwshCommands.clear(),this._storageService.remove("terminal.suggest.pwshCommands",C.APPLICATION)}xtermOpen(t){this._configurationService.getValue(v).enabled&&(this.add(A.runAndSubscribe(this._instance.onDidChangeShellType,async()=>{this._loadSuggestAddon(t.raw)})),this.add(this._contextKeyService.onDidChangeContext(r=>{r.affectsSome(this._terminalSuggestWidgetContextKeys)&&this._loadSuggestAddon(t.raw)})),this.add(this._configurationService.onDidChangeConfiguration(r=>{r.affectsConfiguration(H.SendKeybindingsToShell)&&this._loadSuggestAddon(t.raw)})))}_loadSuggestAddon(t){if(this._configurationService.getValue(X).sendKeybindingsToShell||this._instance.shellType!=="pwsh"){this._addon.clear();return}if(this._terminalSuggestWidgetVisibleContextKey){const i=this._addon.value=this._instantiationService.createInstance(L,n._cachedPwshCommands,this._instance.capabilities,this._terminalSuggestWidgetVisibleContextKey);t.loadAddon(i),i.setPanel(x.findParentWithClass(t.element,"panel")),i.setScreen(t.element.querySelector(".xterm-screen")),this.add(this._instance.onDidBlur(()=>i.hideSuggestWidget())),this.add(i.onAcceptedCompletion(async g=>{this._instance.focus(),this._instance.sendText(g,!1)}));let r;this.add(i.onDidRequestCompletions(()=>{r=new W(2e3),this._instance.pauseInputEvents(r)})),this.add(i.onDidReceiveCompletions(()=>{r?.open(),r=void 0}))}}};n=w([h(3,N),h(4,V),h(5,D),h(6,E)],n),M(n.ID,n),m({id:p.SelectPrevSuggestion,title:l("workbench.action.terminal.selectPrevSuggestion","Select the Previous Suggestion"),f1:!1,precondition:a.and(a.or(e.processSupported,e.terminalHasBeenCreated),e.focus,e.isOpen,e.suggestWidgetVisible),keybinding:{primary:u.UpArrow,weight:S.WorkbenchContrib+1},run:o=>n.get(o)?.addon?.selectPreviousSuggestion()}),m({id:p.SelectPrevPageSuggestion,title:l("workbench.action.terminal.selectPrevPageSuggestion","Select the Previous Page Suggestion"),f1:!1,precondition:a.and(a.or(e.processSupported,e.terminalHasBeenCreated),e.focus,e.isOpen,e.suggestWidgetVisible),keybinding:{primary:u.PageUp,weight:S.WorkbenchContrib+1},run:o=>n.get(o)?.addon?.selectPreviousPageSuggestion()}),m({id:p.SelectNextSuggestion,title:l("workbench.action.terminal.selectNextSuggestion","Select the Next Suggestion"),f1:!1,precondition:a.and(a.or(e.processSupported,e.terminalHasBeenCreated),e.focus,e.isOpen,e.suggestWidgetVisible),keybinding:{primary:u.DownArrow,weight:S.WorkbenchContrib+1},run:o=>n.get(o)?.addon?.selectNextSuggestion()}),m({id:p.SelectNextPageSuggestion,title:l("workbench.action.terminal.selectNextPageSuggestion","Select the Next Page Suggestion"),f1:!1,precondition:a.and(a.or(e.processSupported,e.terminalHasBeenCreated),e.focus,e.isOpen,e.suggestWidgetVisible),keybinding:{primary:u.PageDown,weight:S.WorkbenchContrib+1},run:o=>n.get(o)?.addon?.selectNextPageSuggestion()}),m({id:p.AcceptSelectedSuggestion,title:l("workbench.action.terminal.acceptSelectedSuggestion","Accept Selected Suggestion"),f1:!1,precondition:a.and(a.or(e.processSupported,e.terminalHasBeenCreated),e.focus,e.isOpen,e.suggestWidgetVisible),keybinding:{primary:u.Tab,weight:S.WorkbenchContrib+1},run:o=>n.get(o)?.addon?.acceptSelectedSuggestion()}),m({id:p.AcceptSelectedSuggestionEnter,title:l("workbench.action.terminal.acceptSelectedSuggestionEnter","Accept Selected Suggestion (Enter)"),f1:!1,precondition:a.and(a.or(e.processSupported,e.terminalHasBeenCreated),e.focus,e.isOpen,e.suggestWidgetVisible),keybinding:{primary:u.Enter,weight:S.WorkbenchContrib+1,when:a.notEquals(`config.${I.RunOnEnter}`,"ignore")},run:o=>n.get(o)?.addon?.acceptSelectedSuggestion(void 0,!0)}),m({id:p.HideSuggestWidget,title:l("workbench.action.terminal.hideSuggestWidget","Hide Suggest Widget"),f1:!1,precondition:a.and(a.or(e.processSupported,e.terminalHasBeenCreated),e.focus,e.isOpen,e.suggestWidgetVisible),keybinding:{primary:u.Escape,weight:S.WorkbenchContrib+1},run:o=>n.get(o)?.addon?.hideSuggestWidget()}),m({id:p.ClearSuggestCache,title:l("workbench.action.terminal.clearSuggestCache","Clear Suggest Cache"),f1:!0,run:o=>n.get(o)?.clearSuggestCache()});
