{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/zoom/browser/terminal.zoom.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from '@xterm/xterm';\nimport { Event } from '../../../../../base/common/event.js';\nimport { IMouseWheelEvent } from '../../../../../base/browser/mouseEvent.js';\nimport { MouseWheelClassifier } from '../../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../../base/common/platform.js';\nimport { TerminalSettingId } from '../../../../../platform/terminal/common/terminal.js';\nimport { IDetachedTerminalInstance, ITerminalContribution, ITerminalInstance, IXtermTerminal } from '../../../terminal/browser/terminal.js';\nimport { registerTerminalContribution } from '../../../terminal/browser/terminalExtensions.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ITerminalProcessInfo, ITerminalProcessManager } from '../../../terminal/common/terminal.js';\nimport { TerminalWidgetManager } from '../../../terminal/browser/widgets/widgetManager.js';\nimport { registerTerminalAction } from '../../../terminal/browser/terminalActions.js';\nimport { localize2 } from '../../../../../nls.js';\nimport { isNumber } from '../../../../../base/common/types.js';\nimport { defaultTerminalFontSize } from '../../../terminal/common/terminalConfiguration.js';\nimport { TerminalZoomCommandId, TerminalZoomSettingId } from '../common/terminal.zoom.js';\n\nclass TerminalMouseWheelZoomContribution extends Disposable implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.mouseWheelZoom';\n\n\t/**\n\t * Currently focused find widget. This is used to track action context since\n\t * 'active terminals' are only tracked for non-detached terminal instanecs.\n\t */\n\tstatic activeFindWidget?: TerminalMouseWheelZoomContribution;\n\n\tstatic get(instance: ITerminalInstance | IDetachedTerminalInstance): TerminalMouseWheelZoomContribution | null {\n\t\treturn instance.getContribution<TerminalMouseWheelZoomContribution>(TerminalMouseWheelZoomContribution.ID);\n\t}\n\n\tprivate readonly _listener = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tinstance: ITerminalInstance | IDetachedTerminalInstance,\n\t\tprocessManager: ITerminalProcessManager | ITerminalProcessInfo,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t}\n\n\txtermOpen(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._register(Event.runAndSubscribe(this._configurationService.onDidChangeConfiguration, e => {\n\t\t\tif (!e || e.affectsConfiguration(TerminalZoomSettingId.MouseWheelZoom)) {\n\t\t\t\tif (!!this._configurationService.getValue(TerminalZoomSettingId.MouseWheelZoom)) {\n\t\t\t\t\tthis._setupMouseWheelZoomListener(xterm.raw);\n\t\t\t\t} else {\n\t\t\t\t\tthis._listener.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _getConfigFontSize(): number {\n\t\treturn this._configurationService.getValue(TerminalSettingId.FontSize);\n\t}\n\n\tprivate _setupMouseWheelZoomListener(raw: RawXtermTerminal) {\n\t\t// This is essentially a copy of what we do in the editor, just we modify font size directly\n\t\t// as there is no separate zoom level concept in the terminal\n\t\tconst classifier = MouseWheelClassifier.INSTANCE;\n\n\t\tlet prevMouseWheelTime = 0;\n\t\tlet gestureStartFontSize = this._getConfigFontSize();\n\t\tlet gestureHasZoomModifiers = false;\n\t\tlet gestureAccumulatedDelta = 0;\n\n\t\traw.attachCustomWheelEventHandler((e: WheelEvent) => {\n\t\t\tconst browserEvent = e as any as IMouseWheelEvent;\n\t\t\tif (classifier.isPhysicalMouseWheel()) {\n\t\t\t\tif (this._hasMouseWheelZoomModifiers(browserEvent)) {\n\t\t\t\t\tconst delta = browserEvent.deltaY > 0 ? -1 : 1;\n\t\t\t\t\tthis._configurationService.updateValue(TerminalSettingId.FontSize, this._getConfigFontSize() + delta);\n\t\t\t\t\t// EditorZoom.setZoomLevel(zoomLevel + delta);\n\t\t\t\t\tbrowserEvent.preventDefault();\n\t\t\t\t\tbrowserEvent.stopPropagation();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// we consider mousewheel events that occur within 50ms of each other to be part of the same gesture\n\t\t\t\t// we don't want to consider mouse wheel events where ctrl/cmd is pressed during the inertia phase\n\t\t\t\t// we also want to accumulate deltaY values from the same gesture and use that to set the zoom level\n\t\t\t\tif (Date.now() - prevMouseWheelTime > 50) {\n\t\t\t\t\t// reset if more than 50ms have passed\n\t\t\t\t\tgestureStartFontSize = this._getConfigFontSize();\n\t\t\t\t\tgestureHasZoomModifiers = this._hasMouseWheelZoomModifiers(browserEvent);\n\t\t\t\t\tgestureAccumulatedDelta = 0;\n\t\t\t\t}\n\n\t\t\t\tprevMouseWheelTime = Date.now();\n\t\t\t\tgestureAccumulatedDelta += browserEvent.deltaY;\n\n\t\t\t\tif (gestureHasZoomModifiers) {\n\t\t\t\t\tconst deltaAbs = Math.ceil(Math.abs(gestureAccumulatedDelta / 5));\n\t\t\t\t\tconst deltaDirection = gestureAccumulatedDelta > 0 ? -1 : 1;\n\t\t\t\t\tconst delta = deltaAbs * deltaDirection;\n\t\t\t\t\tthis._configurationService.updateValue(TerminalSettingId.FontSize, gestureStartFontSize + delta);\n\t\t\t\t\tgestureAccumulatedDelta += browserEvent.deltaY;\n\t\t\t\t\tbrowserEvent.preventDefault();\n\t\t\t\t\tbrowserEvent.stopPropagation();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tthis._listener.value = toDisposable(() => raw.attachCustomWheelEventHandler(() => true));\n\t}\n\n\tprivate _hasMouseWheelZoomModifiers(browserEvent: IMouseWheelEvent): boolean {\n\t\treturn (\n\t\t\tisMacintosh\n\t\t\t\t// on macOS we support cmd + two fingers scroll (`metaKey` set)\n\t\t\t\t// and also the two fingers pinch gesture (`ctrKey` set)\n\t\t\t\t? ((browserEvent.metaKey || browserEvent.ctrlKey) && !browserEvent.shiftKey && !browserEvent.altKey)\n\t\t\t\t: (browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey)\n\t\t);\n\t}\n}\n\nregisterTerminalContribution(TerminalMouseWheelZoomContribution.ID, TerminalMouseWheelZoomContribution, true);\n\nregisterTerminalAction({\n\tid: TerminalZoomCommandId.FontZoomIn,\n\ttitle: localize2('fontZoomIn', 'Increase Font Size'),\n\trun: async (c, accessor) => {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst value = configurationService.getValue(TerminalSettingId.FontSize);\n\t\tif (isNumber(value)) {\n\t\t\tawait configurationService.updateValue(TerminalSettingId.FontSize, value + 1);\n\t\t}\n\t}\n});\n\nregisterTerminalAction({\n\tid: TerminalZoomCommandId.FontZoomOut,\n\ttitle: localize2('fontZoomOut', 'Decrease Font Size'),\n\trun: async (c, accessor) => {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst value = configurationService.getValue(TerminalSettingId.FontSize);\n\t\tif (isNumber(value)) {\n\t\t\tawait configurationService.updateValue(TerminalSettingId.FontSize, value - 1);\n\t\t}\n\t}\n});\n\nregisterTerminalAction({\n\tid: TerminalZoomCommandId.FontZoomReset,\n\ttitle: localize2('fontZoomReset', 'Reset Font Size'),\n\trun: async (c, accessor) => {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tawait configurationService.updateValue(TerminalSettingId.FontSize, defaultTerminalFontSize);\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
