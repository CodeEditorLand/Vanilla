var I=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var u=(t,n,e,i)=>{for(var o=i>1?void 0:i?E(n,e):n,r=t.length-1,c;r>=0;r--)(c=t[r])&&(o=(i?c(n,e,o):c(o))||o);return i&&o&&I(n,e,o),o},p=(t,n)=>(e,i)=>n(e,i,t);import{URI as S}from"../../../../../base/common/uri.js";import{Event as M}from"../../../../../base/common/event.js";import{IModelService as $}from"../../../../../editor/common/services/model.js";import{ITextModelService as w}from"../../../../../editor/common/services/resolverService.js";import{localize as d,localize2 as b}from"../../../../../nls.js";import{IInstantiationService as h}from"../../../../../platform/instantiation/common/instantiation.js";import{EnvironmentVariableMutatorType as v}from"../../../../../platform/terminal/common/environmentVariable.js";import{registerActiveInstanceAction as x}from"../../../terminal/browser/terminalActions.js";import{TerminalCommandId as C}from"../../../terminal/common/terminal.js";import{IEditorService as T}from"../../../../services/editor/common/editorService.js";x({id:C.ShowEnvironmentContributions,title:b("workbench.action.terminal.showEnvironmentContributions","Show Environment Contributions"),run:async(t,n,e,i)=>{const o=t.extEnvironmentVariableCollection;if(o){const r=i,m=e.get(h).createInstance(a),l=e.get(T),s=new Date().getTime(),g=r?.workspaceFolder?` - ${r.workspaceFolder.name}`:"",f=await m.provideTextContent(S.from({scheme:a.scheme,path:`Environment changes${g}`,fragment:k(o,r),query:`environment-collection-${s}`}));f&&await l.openEditor({resource:f.uri})}}});function k(t,n){let e=`# ${d("envChanges","Terminal Environment Changes")}`;const i=t.getDescriptionMap(void 0),o=t.getDescriptionMap(n);for(const[r,c]of t.collections){e+=`

## ${d("extension","Extension: {0}",r)}`,e+=`
`;const m=i.get(r);m&&(e+=`
${m}
`);const l=o.get(r);if(l){const s=m?` (${d("ScopedEnvironmentContributionInfo","workspace")})`:"";e+=`
${l}${s}
`}for(const s of c.map.values())V(s,n)!==!1&&(e+=`
- \`${D(s.type,s.value,s.variable)}\``)}return e}function V(t,n){return!!(!t.scope||t.scope.workspaceFolder&&n?.workspaceFolder&&t.scope.workspaceFolder.index===n.workspaceFolder.index)}function D(t,n,e){switch(t){case v.Prepend:return`${e}=${n}\${env:${e}}`;case v.Append:return`${e}=\${env:${e}}${n}`;default:return`${e}=${n}`}}let a=class{constructor(n,e){this._modelService=e;n.registerTextModelContentProvider(a.scheme,this)}static scheme="ENVIRONMENT_CHANGES_COLLECTION";async provideTextContent(n){const e=this._modelService.getModel(n);return e&&!e.isDisposed()?e:this._modelService.createModel(n.fragment,{languageId:"markdown",onDidChange:M.None},n,!1)}};a=u([p(0,w),p(1,$)],a);
