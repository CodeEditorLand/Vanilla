{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/environmentChanges/browser/terminal.environmentChanges.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from \"../../../../../base/common/event.js\";\nimport { URI } from \"../../../../../base/common/uri.js\";\nimport type { ITextModel } from \"../../../../../editor/common/model.js\";\nimport { IModelService } from \"../../../../../editor/common/services/model.js\";\nimport {\n\ttype ITextModelContentProvider,\n\tITextModelService,\n} from \"../../../../../editor/common/services/resolverService.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tEnvironmentVariableMutatorType,\n\ttype EnvironmentVariableScope,\n\ttype IEnvironmentVariableMutator,\n\ttype IMergedEnvironmentVariableCollection,\n} from \"../../../../../platform/terminal/common/environmentVariable.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\nimport { registerActiveInstanceAction } from \"../../../terminal/browser/terminalActions.js\";\nimport { TerminalCommandId } from \"../../../terminal/common/terminal.js\";\n\n// TODO: The rest of the terminal environment changes feature should move here https://github.com/microsoft/vscode/issues/177241\n\n// #region Actions\n\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.ShowEnvironmentContributions,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.showEnvironmentContributions\",\n\t\t\"Show Environment Contributions\",\n\t),\n\trun: async (activeInstance, c, accessor, arg) => {\n\t\tconst collection = activeInstance.extEnvironmentVariableCollection;\n\t\tif (collection) {\n\t\t\tconst scope = arg as EnvironmentVariableScope | undefined;\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst outputProvider = instantiationService.createInstance(\n\t\t\t\tEnvironmentCollectionProvider,\n\t\t\t);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst timestamp = new Date().getTime();\n\t\t\tconst scopeDesc = scope?.workspaceFolder\n\t\t\t\t? ` - ${scope.workspaceFolder.name}`\n\t\t\t\t: \"\";\n\t\t\tconst textContent = await outputProvider.provideTextContent(\n\t\t\t\tURI.from({\n\t\t\t\t\tscheme: EnvironmentCollectionProvider.scheme,\n\t\t\t\t\tpath: `Environment changes${scopeDesc}`,\n\t\t\t\t\tfragment: describeEnvironmentChanges(collection, scope),\n\t\t\t\t\tquery: `environment-collection-${timestamp}`,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tif (textContent) {\n\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\tresource: textContent.uri,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n});\n\n// #endregion\n\nfunction describeEnvironmentChanges(\n\tcollection: IMergedEnvironmentVariableCollection,\n\tscope: EnvironmentVariableScope | undefined,\n): string {\n\tlet content = `# ${localize(\"envChanges\", \"Terminal Environment Changes\")}`;\n\tconst globalDescriptions = collection.getDescriptionMap(undefined);\n\tconst workspaceDescriptions = collection.getDescriptionMap(scope);\n\tfor (const [ext, coll] of collection.collections) {\n\t\tcontent += `\\n\\n## ${localize(\"extension\", \"Extension: {0}\", ext)}`;\n\t\tcontent += \"\\n\";\n\t\tconst globalDescription = globalDescriptions.get(ext);\n\t\tif (globalDescription) {\n\t\t\tcontent += `\\n${globalDescription}\\n`;\n\t\t}\n\t\tconst workspaceDescription = workspaceDescriptions.get(ext);\n\t\tif (workspaceDescription) {\n\t\t\t// Only show '(workspace)' suffix if there is already a description for the extension.\n\t\t\tconst workspaceSuffix = globalDescription\n\t\t\t\t? ` (${localize(\"ScopedEnvironmentContributionInfo\", \"workspace\")})`\n\t\t\t\t: \"\";\n\t\t\tcontent += `\\n${workspaceDescription}${workspaceSuffix}\\n`;\n\t\t}\n\n\t\tfor (const mutator of coll.map.values()) {\n\t\t\tif (filterScope(mutator, scope) === false) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcontent += `\\n- \\`${mutatorTypeLabel(mutator.type, mutator.value, mutator.variable)}\\``;\n\t\t}\n\t}\n\treturn content;\n}\n\nfunction filterScope(\n\tmutator: IEnvironmentVariableMutator,\n\tscope: EnvironmentVariableScope | undefined,\n): boolean {\n\tif (!mutator.scope) {\n\t\treturn true;\n\t}\n\t// Only mutators which are applicable on the relevant workspace should be shown.\n\tif (\n\t\tmutator.scope.workspaceFolder &&\n\t\tscope?.workspaceFolder &&\n\t\tmutator.scope.workspaceFolder.index === scope.workspaceFolder.index\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction mutatorTypeLabel(\n\ttype: EnvironmentVariableMutatorType,\n\tvalue: string,\n\tvariable: string,\n): string {\n\tswitch (type) {\n\t\tcase EnvironmentVariableMutatorType.Prepend:\n\t\t\treturn `${variable}=${value}\\${env:${variable}}`;\n\t\tcase EnvironmentVariableMutatorType.Append:\n\t\t\treturn `${variable}=\\${env:${variable}}${value}`;\n\t\tdefault:\n\t\t\treturn `${variable}=${value}`;\n\t}\n}\n\nclass EnvironmentCollectionProvider implements ITextModelContentProvider {\n\tstatic scheme = \"ENVIRONMENT_CHANGES_COLLECTION\";\n\n\tconstructor(\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@IModelService private readonly _modelService: IModelService\n\t) {\n\t\ttextModelResolverService.registerTextModelContentProvider(EnvironmentCollectionProvider.scheme, this);\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this._modelService.getModel(resource);\n\t\tif (existing && !existing.isDisposed()) {\n\t\t\treturn existing;\n\t\t}\n\n\t\treturn this._modelService.createModel(\n\t\t\tresource.fragment,\n\t\t\t{ languageId: \"markdown\", onDidChange: Event.None },\n\t\t\tresource,\n\t\t\tfalse,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
