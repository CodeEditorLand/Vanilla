{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/environmentChanges/browser/terminal.environmentChanges.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../../base/common/uri.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { ITextModelContentProvider, ITextModelService } from '../../../../../editor/common/services/resolverService.js';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { EnvironmentVariableMutatorType, EnvironmentVariableScope, IEnvironmentVariableMutator, IMergedEnvironmentVariableCollection } from '../../../../../platform/terminal/common/environmentVariable.js';\nimport { registerActiveInstanceAction } from '../../../terminal/browser/terminalActions.js';\nimport { TerminalCommandId } from '../../../terminal/common/terminal.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\n\n// TODO: The rest of the terminal environment changes feature should move here https://github.com/microsoft/vscode/issues/177241\n\n// #region Actions\n\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.ShowEnvironmentContributions,\n\ttitle: localize2('workbench.action.terminal.showEnvironmentContributions', 'Show Environment Contributions'),\n\trun: async (activeInstance, c, accessor, arg) => {\n\t\tconst collection = activeInstance.extEnvironmentVariableCollection;\n\t\tif (collection) {\n\t\t\tconst scope = arg as EnvironmentVariableScope | undefined;\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst outputProvider = instantiationService.createInstance(EnvironmentCollectionProvider);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst timestamp = new Date().getTime();\n\t\t\tconst scopeDesc = scope?.workspaceFolder ? ` - ${scope.workspaceFolder.name}` : '';\n\t\t\tconst textContent = await outputProvider.provideTextContent(URI.from(\n\t\t\t\t{\n\t\t\t\t\tscheme: EnvironmentCollectionProvider.scheme,\n\t\t\t\t\tpath: `Environment changes${scopeDesc}`,\n\t\t\t\t\tfragment: describeEnvironmentChanges(collection, scope),\n\t\t\t\t\tquery: `environment-collection-${timestamp}`\n\t\t\t\t}));\n\t\t\tif (textContent) {\n\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\tresource: textContent.uri\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n\n// #endregion\n\nfunction describeEnvironmentChanges(collection: IMergedEnvironmentVariableCollection, scope: EnvironmentVariableScope | undefined): string {\n\tlet content = `# ${localize('envChanges', 'Terminal Environment Changes')}`;\n\tconst globalDescriptions = collection.getDescriptionMap(undefined);\n\tconst workspaceDescriptions = collection.getDescriptionMap(scope);\n\tfor (const [ext, coll] of collection.collections) {\n\t\tcontent += `\\n\\n## ${localize('extension', 'Extension: {0}', ext)}`;\n\t\tcontent += '\\n';\n\t\tconst globalDescription = globalDescriptions.get(ext);\n\t\tif (globalDescription) {\n\t\t\tcontent += `\\n${globalDescription}\\n`;\n\t\t}\n\t\tconst workspaceDescription = workspaceDescriptions.get(ext);\n\t\tif (workspaceDescription) {\n\t\t\t// Only show '(workspace)' suffix if there is already a description for the extension.\n\t\t\tconst workspaceSuffix = globalDescription ? ` (${localize('ScopedEnvironmentContributionInfo', 'workspace')})` : '';\n\t\t\tcontent += `\\n${workspaceDescription}${workspaceSuffix}\\n`;\n\t\t}\n\n\t\tfor (const mutator of coll.map.values()) {\n\t\t\tif (filterScope(mutator, scope) === false) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcontent += `\\n- \\`${mutatorTypeLabel(mutator.type, mutator.value, mutator.variable)}\\``;\n\t\t}\n\t}\n\treturn content;\n}\n\nfunction filterScope(\n\tmutator: IEnvironmentVariableMutator,\n\tscope: EnvironmentVariableScope | undefined\n): boolean {\n\tif (!mutator.scope) {\n\t\treturn true;\n\t}\n\t// Only mutators which are applicable on the relevant workspace should be shown.\n\tif (mutator.scope.workspaceFolder && scope?.workspaceFolder && mutator.scope.workspaceFolder.index === scope.workspaceFolder.index) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction mutatorTypeLabel(type: EnvironmentVariableMutatorType, value: string, variable: string): string {\n\tswitch (type) {\n\t\tcase EnvironmentVariableMutatorType.Prepend: return `${variable}=${value}\\${env:${variable}}`;\n\t\tcase EnvironmentVariableMutatorType.Append: return `${variable}=\\${env:${variable}}${value}`;\n\t\tdefault: return `${variable}=${value}`;\n\t}\n}\n\nclass EnvironmentCollectionProvider implements ITextModelContentProvider {\n\tstatic scheme = 'ENVIRONMENT_CHANGES_COLLECTION';\n\n\tconstructor(\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@IModelService private readonly _modelService: IModelService\n\t) {\n\t\ttextModelResolverService.registerTextModelContentProvider(EnvironmentCollectionProvider.scheme, this);\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this._modelService.getModel(resource);\n\t\tif (existing && !existing.isDisposed()) {\n\t\t\treturn existing;\n\t\t}\n\n\t\treturn this._modelService.createModel(resource.fragment, { languageId: 'markdown', onDidChange: Event.None }, resource, false);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW;AACpB,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,qBAAqB;AAC9B,SAAS,2BAA2B,yBAAyB;AAC7D,SAAS,UAAU,iBAAiB;AACpC,SAAS,6BAA6B;AACtC,SAAS,gCAAgC,0BAA0B,6BAA6B,4CAA4C;AAC5I,SAAS,oCAAoC;AAC7C,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAM/B,6BAA6B;AAAA,EAC5B,IAAI,kBAAkB;AAAA,EACtB,OAAO,UAAU,0DAA0D,gCAAgC;AAAA,EAC3G,KAAK,8BAAO,gBAAgB,GAAG,UAAU,QAAQ;AAChD,UAAM,aAAa,eAAe;AAClC,QAAI,YAAY;AACf,YAAM,QAAQ;AACd,YAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAC/D,YAAM,iBAAiB,qBAAqB,eAAe,6BAA6B;AACxF,YAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,YAAM,aAAY,oBAAI,KAAK,GAAE,QAAQ;AACrC,YAAM,YAAY,OAAO,kBAAkB,MAAM,MAAM,gBAAgB,IAAI,KAAK;AAChF,YAAM,cAAc,MAAM,eAAe,mBAAmB,IAAI;AAAA,QAC/D;AAAA,UACC,QAAQ,8BAA8B;AAAA,UACtC,MAAM,sBAAsB,SAAS;AAAA,UACrC,UAAU,2BAA2B,YAAY,KAAK;AAAA,UACtD,OAAO,0BAA0B,SAAS;AAAA,QAC3C;AAAA,MAAC,CAAC;AACH,UAAI,aAAa;AAChB,cAAM,cAAc,WAAW;AAAA,UAC9B,UAAU,YAAY;AAAA,QACvB,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD,GAtBK;AAuBN,CAAC;AAID,SAAS,2BAA2B,YAAkD,OAAqD;AAC1I,MAAI,UAAU,KAAK,SAAS,cAAc,8BAA8B,CAAC;AACzE,QAAM,qBAAqB,WAAW,kBAAkB,MAAS;AACjE,QAAM,wBAAwB,WAAW,kBAAkB,KAAK;AAChE,aAAW,CAAC,KAAK,IAAI,KAAK,WAAW,aAAa;AACjD,eAAW;AAAA;AAAA,KAAU,SAAS,aAAa,kBAAkB,GAAG,CAAC;AACjE,eAAW;AACX,UAAM,oBAAoB,mBAAmB,IAAI,GAAG;AACpD,QAAI,mBAAmB;AACtB,iBAAW;AAAA,EAAK,iBAAiB;AAAA;AAAA,IAClC;AACA,UAAM,uBAAuB,sBAAsB,IAAI,GAAG;AAC1D,QAAI,sBAAsB;AAEzB,YAAM,kBAAkB,oBAAoB,KAAK,SAAS,qCAAqC,WAAW,CAAC,MAAM;AACjH,iBAAW;AAAA,EAAK,oBAAoB,GAAG,eAAe;AAAA;AAAA,IACvD;AAEA,eAAW,WAAW,KAAK,IAAI,OAAO,GAAG;AACxC,UAAI,YAAY,SAAS,KAAK,MAAM,OAAO;AAC1C;AAAA,MACD;AACA,iBAAW;AAAA,MAAS,iBAAiB,QAAQ,MAAM,QAAQ,OAAO,QAAQ,QAAQ,CAAC;AAAA,IACpF;AAAA,EACD;AACA,SAAO;AACR;AA1BS;AA4BT,SAAS,YACR,SACA,OACU;AACV,MAAI,CAAC,QAAQ,OAAO;AACnB,WAAO;AAAA,EACR;AAEA,MAAI,QAAQ,MAAM,mBAAmB,OAAO,mBAAmB,QAAQ,MAAM,gBAAgB,UAAU,MAAM,gBAAgB,OAAO;AACnI,WAAO;AAAA,EACR;AACA,SAAO;AACR;AAZS;AAcT,SAAS,iBAAiB,MAAsC,OAAe,UAA0B;AACxG,UAAQ,MAAM;AAAA,IACb,KAAK,+BAA+B;AAAS,aAAO,GAAG,QAAQ,IAAI,KAAK,UAAU,QAAQ;AAAA,IAC1F,KAAK,+BAA+B;AAAQ,aAAO,GAAG,QAAQ,WAAW,QAAQ,IAAI,KAAK;AAAA,IAC1F;AAAS,aAAO,GAAG,QAAQ,IAAI,KAAK;AAAA,EACrC;AACD;AANS;AAQT,IAAM,gCAAN,MAAyE;AAAA,EAGxE,YACoB,0BACa,eAC/B;AAD+B;AAEhC,6BAAyB,iCAAiC,8BAA8B,QAAQ,IAAI;AAAA,EACrG;AAAA,EA7GD,OAqGyE;AAAA;AAAA;AAAA,EACxE,OAAO,SAAS;AAAA,EAShB,MAAM,mBAAmB,UAA2C;AACnE,UAAM,WAAW,KAAK,cAAc,SAAS,QAAQ;AACrD,QAAI,YAAY,CAAC,SAAS,WAAW,GAAG;AACvC,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,cAAc,YAAY,SAAS,UAAU,EAAE,YAAY,YAAY,aAAa,MAAM,KAAK,GAAG,UAAU,KAAK;AAAA,EAC9H;AACD;AAlBM,gCAAN;AAAA,EAIG;AAAA,EACA;AAAA,GALG;",
  "names": []
}
