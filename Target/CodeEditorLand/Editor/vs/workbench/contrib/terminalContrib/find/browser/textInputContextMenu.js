import{getActiveWindow as t,isHTMLInputElement as C,isHTMLTextAreaElement as f}from"../../../../../../vs/base/browser/dom.js";import{StandardMouseEvent as x}from"../../../../../../vs/base/browser/mouseEvent.js";import{Action as o,Separator as a}from"../../../../../../vs/base/common/actions.js";import{isNative as A}from"../../../../../../vs/base/common/platform.js";import{localize as n}from"../../../../../../vs/nls.js";import"../../../../../../vs/platform/clipboard/common/clipboardService.js";import"../../../../../../vs/platform/contextview/browser/contextView.js";function T(s,c,u,l){const m=new x(s,c),i=[];i.push(new o("undo",n("undo","Undo"),void 0,!0,async()=>t().document.execCommand("undo")),new o("redo",n("redo","Redo"),void 0,!0,async()=>t().document.execCommand("redo")),new a,new o("editor.action.clipboardCutAction",n("cut","Cut"),void 0,!0,async()=>t().document.execCommand("cut")),new o("editor.action.clipboardCopyAction",n("copy","Copy"),void 0,!0,async()=>t().document.execCommand("copy")),new o("editor.action.clipboardPasteAction",n("paste","Paste"),void 0,!0,async e=>{if(A)t().document.execCommand("paste");else{const d=await u.readText();if(f(e)||C(e)){const r=e.selectionStart||0,p=e.selectionEnd||0;e.value=`${e.value.substring(0,r)}${d}${e.value.substring(p,e.value.length)}`,e.selectionStart=r+d.length,e.selectionEnd=e.selectionStart}}}),new a,new o("editor.action.selectAll",n("selectAll","Select All"),void 0,!0,async()=>t().document.execCommand("selectAll"))),l.showContextMenu({getAnchor:()=>m,getActions:()=>i,getActionsContext:()=>c.target})}export{T as openContextMenu};
