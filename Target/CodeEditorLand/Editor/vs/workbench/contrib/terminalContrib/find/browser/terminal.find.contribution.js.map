{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/find/browser/terminal.find.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from \"@xterm/xterm\";\nimport type { IDimension } from \"../../../../../base/browser/dom.js\";\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport { Lazy } from \"../../../../../base/common/lazy.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport { localize2 } from \"../../../../../nls.js\";\nimport { ContextKeyExpr } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { findInFilesCommand } from \"../../../search/browser/searchActionsFind.js\";\nimport {\n\ttype IDetachedTerminalInstance,\n\ttype ITerminalContribution,\n\ttype ITerminalInstance,\n\tITerminalService,\n\ttype IXtermTerminal,\n\tisDetachedTerminalInstance,\n} from \"../../../terminal/browser/terminal.js\";\nimport {\n\tregisterActiveInstanceAction,\n\tregisterActiveXtermAction,\n} from \"../../../terminal/browser/terminalActions.js\";\nimport { registerTerminalContribution } from \"../../../terminal/browser/terminalExtensions.js\";\nimport type { TerminalWidgetManager } from \"../../../terminal/browser/widgets/widgetManager.js\";\nimport type {\n\tITerminalProcessInfo,\n\tITerminalProcessManager,\n} from \"../../../terminal/common/terminal.js\";\nimport { TerminalContextKeys } from \"../../../terminal/common/terminalContextKey.js\";\nimport { TerminalFindCommandId } from \"../common/terminal.find.js\";\nimport { TerminalFindWidget } from \"./terminalFindWidget.js\";\nimport \"./media/terminalFind.css\";\n\n// #region Terminal Contributions\n\nclass TerminalFindContribution\n\textends Disposable\n\timplements ITerminalContribution\n{\n\tstatic readonly ID = \"terminal.find\";\n\n\t/**\n\t * Currently focused find widget. This is used to track action context since\n\t * 'active terminals' are only tracked for non-detached terminal instanecs.\n\t */\n\tstatic activeFindWidget?: TerminalFindContribution;\n\n\tstatic get(\n\t\tinstance: ITerminalInstance | IDetachedTerminalInstance,\n\t): TerminalFindContribution | null {\n\t\treturn instance.getContribution<TerminalFindContribution>(\n\t\t\tTerminalFindContribution.ID,\n\t\t);\n\t}\n\n\tprivate _findWidget: Lazy<TerminalFindWidget>;\n\tprivate _lastLayoutDimensions: IDimension | undefined;\n\n\tget findWidget(): TerminalFindWidget {\n\t\treturn this._findWidget.value;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _instance:\n\t\t\t| ITerminalInstance\n\t\t\t| IDetachedTerminalInstance,\n\t\tprocessManager: ITerminalProcessManager | ITerminalProcessInfo,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITerminalService terminalService: ITerminalService,\n\t) {\n\t\tsuper();\n\n\t\tthis._findWidget = new Lazy(() => {\n\t\t\tconst findWidget = instantiationService.createInstance(\n\t\t\t\tTerminalFindWidget,\n\t\t\t\tthis._instance,\n\t\t\t);\n\n\t\t\t// Track focus and set state so we can force the scroll bar to be visible\n\t\t\tfindWidget.focusTracker.onDidFocus(() => {\n\t\t\t\tTerminalFindContribution.activeFindWidget = this;\n\t\t\t\tthis._instance.forceScrollbarVisibility();\n\t\t\t\tif (!isDetachedTerminalInstance(this._instance)) {\n\t\t\t\t\tterminalService.setActiveInstance(this._instance);\n\t\t\t\t}\n\t\t\t});\n\t\t\tfindWidget.focusTracker.onDidBlur(() => {\n\t\t\t\tTerminalFindContribution.activeFindWidget = undefined;\n\t\t\t\tthis._instance.resetScrollbarVisibility();\n\t\t\t});\n\n\t\t\tif (!this._instance.domElement) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"FindWidget expected terminal DOM to be initialized\",\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._instance.domElement?.appendChild(findWidget.getDomNode());\n\t\t\tif (this._lastLayoutDimensions) {\n\t\t\t\tfindWidget.layout(this._lastLayoutDimensions.width);\n\t\t\t}\n\n\t\t\treturn findWidget;\n\t\t});\n\t}\n\n\tlayout(\n\t\t_xterm: IXtermTerminal & { raw: RawXtermTerminal },\n\t\tdimension: IDimension,\n\t): void {\n\t\tthis._lastLayoutDimensions = dimension;\n\t\tthis._findWidget.rawValue?.layout(dimension.width);\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._register(\n\t\t\txterm.onDidChangeFindResults(() =>\n\t\t\t\tthis._findWidget.rawValue?.updateResultCount(),\n\t\t\t),\n\t\t);\n\t}\n\n\toverride dispose() {\n\t\tif (TerminalFindContribution.activeFindWidget === this) {\n\t\t\tTerminalFindContribution.activeFindWidget = undefined;\n\t\t}\n\t\tsuper.dispose();\n\t\tthis._findWidget.rawValue?.dispose();\n\t}\n}\nregisterTerminalContribution(\n\tTerminalFindContribution.ID,\n\tTerminalFindContribution,\n\ttrue,\n);\n\n// #endregion\n\n// #region Actions\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.FindFocus,\n\ttitle: localize2(\"workbench.action.terminal.focusFind\", \"Focus Find\"),\n\tkeybinding: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\twhen: ContextKeyExpr.or(\n\t\t\tTerminalContextKeys.findFocus,\n\t\t\tTerminalContextKeys.focusInAny,\n\t\t),\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t},\n\tprecondition: ContextKeyExpr.or(\n\t\tTerminalContextKeys.processSupported,\n\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr =\n\t\t\tTerminalFindContribution.activeFindWidget ||\n\t\t\tTerminalFindContribution.get(activeInstance);\n\t\tcontr?.findWidget.reveal();\n\t},\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.FindHide,\n\ttitle: localize2(\"workbench.action.terminal.hideFind\", \"Hide Find\"),\n\tkeybinding: {\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\twhen: ContextKeyExpr.and(\n\t\t\tTerminalContextKeys.focusInAny,\n\t\t\tTerminalContextKeys.findVisible,\n\t\t),\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t},\n\tprecondition: ContextKeyExpr.or(\n\t\tTerminalContextKeys.processSupported,\n\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr =\n\t\t\tTerminalFindContribution.activeFindWidget ||\n\t\t\tTerminalFindContribution.get(activeInstance);\n\t\tcontr?.findWidget.hide();\n\t},\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.ToggleFindRegex,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.toggleFindRegex\",\n\t\t\"Toggle Find Using Regex\",\n\t),\n\tkeybinding: {\n\t\tprimary: KeyMod.Alt | KeyCode.KeyR,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyR },\n\t\twhen: TerminalContextKeys.findVisible,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t},\n\tprecondition: ContextKeyExpr.or(\n\t\tTerminalContextKeys.processSupported,\n\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr =\n\t\t\tTerminalFindContribution.activeFindWidget ||\n\t\t\tTerminalFindContribution.get(activeInstance);\n\t\tconst state = contr?.findWidget.state;\n\t\tstate?.change({ isRegex: !state.isRegex }, false);\n\t},\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.ToggleFindWholeWord,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.toggleFindWholeWord\",\n\t\t\"Toggle Find Using Whole Word\",\n\t),\n\tkeybinding: {\n\t\tprimary: KeyMod.Alt | KeyCode.KeyW,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyW },\n\t\twhen: TerminalContextKeys.findVisible,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t},\n\tprecondition: ContextKeyExpr.or(\n\t\tTerminalContextKeys.processSupported,\n\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr =\n\t\t\tTerminalFindContribution.activeFindWidget ||\n\t\t\tTerminalFindContribution.get(activeInstance);\n\t\tconst state = contr?.findWidget.state;\n\t\tstate?.change({ wholeWord: !state.wholeWord }, false);\n\t},\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.ToggleFindCaseSensitive,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.toggleFindCaseSensitive\",\n\t\t\"Toggle Find Using Case Sensitive\",\n\t),\n\tkeybinding: {\n\t\tprimary: KeyMod.Alt | KeyCode.KeyC,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC },\n\t\twhen: TerminalContextKeys.findVisible,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t},\n\tprecondition: ContextKeyExpr.or(\n\t\tTerminalContextKeys.processSupported,\n\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr =\n\t\t\tTerminalFindContribution.activeFindWidget ||\n\t\t\tTerminalFindContribution.get(activeInstance);\n\t\tconst state = contr?.findWidget.state;\n\t\tstate?.change({ matchCase: !state.matchCase }, false);\n\t},\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.FindNext,\n\ttitle: localize2(\"workbench.action.terminal.findNext\", \"Find Next\"),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyCode.F3,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyG,\n\t\t\t\tsecondary: [KeyCode.F3],\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\tTerminalContextKeys.focusInAny,\n\t\t\t\tTerminalContextKeys.findFocus,\n\t\t\t),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t},\n\t\t{\n\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\twhen: TerminalContextKeys.findInputFocus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t},\n\t],\n\tprecondition: ContextKeyExpr.or(\n\t\tTerminalContextKeys.processSupported,\n\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr =\n\t\t\tTerminalFindContribution.activeFindWidget ||\n\t\t\tTerminalFindContribution.get(activeInstance);\n\t\tconst widget = contr?.findWidget;\n\t\tif (widget) {\n\t\t\twidget.show();\n\t\t\twidget.find(false);\n\t\t}\n\t},\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.FindPrevious,\n\ttitle: localize2(\"workbench.action.terminal.findPrevious\", \"Find Previous\"),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.Shift | KeyCode.F3,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG,\n\t\t\t\tsecondary: [KeyMod.Shift | KeyCode.F3],\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\tTerminalContextKeys.focusInAny,\n\t\t\t\tTerminalContextKeys.findFocus,\n\t\t\t),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t},\n\t\t{\n\t\t\tprimary: KeyCode.Enter,\n\t\t\twhen: TerminalContextKeys.findInputFocus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t},\n\t],\n\tprecondition: ContextKeyExpr.or(\n\t\tTerminalContextKeys.processSupported,\n\t\tTerminalContextKeys.terminalHasBeenCreated,\n\t),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr =\n\t\t\tTerminalFindContribution.activeFindWidget ||\n\t\t\tTerminalFindContribution.get(activeInstance);\n\t\tconst widget = contr?.findWidget;\n\t\tif (widget) {\n\t\t\twidget.show();\n\t\t\twidget.find(true);\n\t\t}\n\t},\n});\n\n// Global workspace file search\nregisterActiveInstanceAction({\n\tid: TerminalFindCommandId.SearchWorkspace,\n\ttitle: localize2(\n\t\t\"workbench.action.terminal.searchWorkspace\",\n\t\t\"Search Workspace\",\n\t),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyF,\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tTerminalContextKeys.processSupported,\n\t\t\t\tTerminalContextKeys.focus,\n\t\t\t\tTerminalContextKeys.textSelected,\n\t\t\t),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t},\n\t],\n\trun: (activeInstance, c, accessor) =>\n\t\tfindInFilesCommand(accessor, { query: activeInstance.selection }),\n});\n\n// #endregion\n"],
  "mappings": "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",
  "names": []
}
