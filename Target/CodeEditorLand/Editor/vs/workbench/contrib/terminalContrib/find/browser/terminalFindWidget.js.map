{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/find/browser/terminalFindWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ISearchOptions } from \"@xterm/addon-search\";\nimport * as dom from \"../../../../../base/browser/dom.js\";\nimport { Event } from \"../../../../../base/common/event.js\";\nimport type { IDisposable } from \"../../../../../base/common/lifecycle.js\";\nimport { IClipboardService } from \"../../../../../platform/clipboard/common/clipboardService.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n} from \"../../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../../platform/hover/browser/hover.js\";\nimport { IKeybindingService } from \"../../../../../platform/keybinding/common/keybinding.js\";\nimport { IThemeService } from \"../../../../../platform/theme/common/themeService.js\";\nimport { SimpleFindWidget } from \"../../../codeEditor/browser/find/simpleFindWidget.js\";\nimport {\n\ttype IDetachedTerminalInstance,\n\ttype ITerminalInstance,\n\ttype IXtermTerminal,\n\tXtermTerminalConstants,\n} from \"../../../terminal/browser/terminal.js\";\nimport { TerminalContextKeys } from \"../../../terminal/common/terminalContextKey.js\";\nimport { TerminalFindCommandId } from \"../common/terminal.find.js\";\nimport { openContextMenu } from \"./textInputContextMenu.js\";\n\nconst TERMINAL_FIND_WIDGET_INITIAL_WIDTH = 419;\n\nexport class TerminalFindWidget extends SimpleFindWidget {\n\tprivate _findInputFocused: IContextKey<boolean>;\n\tprivate _findWidgetFocused: IContextKey<boolean>;\n\tprivate _findWidgetVisible: IContextKey<boolean>;\n\n\tprivate _overrideCopyOnSelectionDisposable: IDisposable | undefined;\n\n\tconstructor(\n\t\tprivate _instance: ITerminalInstance | IDetachedTerminalInstance,\n\t\t@IContextViewService _contextViewService: IContextViewService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IContextMenuService _contextMenuService: IContextMenuService,\n\t\t@IClipboardService _clipboardService: IClipboardService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper({\n\t\t\tshowCommonFindToggles: true,\n\t\t\tcheckImeCompletionState: true,\n\t\t\tshowResultCount: true,\n\t\t\tinitialWidth: TERMINAL_FIND_WIDGET_INITIAL_WIDTH,\n\t\t\tenableSash: true,\n\t\t\tappendCaseSensitiveActionId: TerminalFindCommandId.ToggleFindCaseSensitive,\n\t\t\tappendRegexActionId: TerminalFindCommandId.ToggleFindRegex,\n\t\t\tappendWholeWordsActionId: TerminalFindCommandId.ToggleFindWholeWord,\n\t\t\tpreviousMatchActionId: TerminalFindCommandId.FindPrevious,\n\t\t\tnextMatchActionId: TerminalFindCommandId.FindNext,\n\t\t\tcloseWidgetActionId: TerminalFindCommandId.FindHide,\n\t\t\ttype: 'Terminal',\n\t\t\tmatchesLimit: XtermTerminalConstants.SearchHighlightLimit\n\t\t}, _contextViewService, _contextKeyService, hoverService, keybindingService);\n\n\t\tthis._register(this.state.onFindReplaceStateChange(() => {\n\t\t\tthis.show();\n\t\t}));\n\t\tthis._findInputFocused = TerminalContextKeys.findInputFocus.bindTo(this._contextKeyService);\n\t\tthis._findWidgetFocused = TerminalContextKeys.findFocus.bindTo(this._contextKeyService);\n\t\tthis._findWidgetVisible = TerminalContextKeys.findVisible.bindTo(this._contextKeyService);\n\t\tconst innerDom = this.getDomNode().firstChild;\n\t\tif (innerDom) {\n\t\t\tthis._register(dom.addDisposableListener(innerDom, 'mousedown', (event) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}));\n\t\t\tthis._register(dom.addDisposableListener(innerDom, 'contextmenu', (event) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}));\n\t\t}\n\t\tconst findInputDomNode = this.getFindInputDomNode();\n\t\tthis._register(dom.addDisposableListener(findInputDomNode, 'contextmenu', (event) => {\n\t\t\topenContextMenu(dom.getWindow(findInputDomNode), event, _clipboardService, _contextMenuService);\n\t\t\tevent.stopPropagation();\n\t\t}));\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\tif (this.isVisible()) {\n\t\t\t\tthis.find(true, true);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._configurationService.onDidChangeConfiguration((e) => {\n\t\t\tif (e.affectsConfiguration('workbench.colorCustomizations') && this.isVisible()) {\n\t\t\t\tthis.find(true, true);\n\t\t\t}\n\t\t}));\n\n\t\tthis.updateResultCount();\n\t}\n\n\tfind(previous: boolean, update?: boolean) {\n\t\tconst xterm = this._instance.xterm;\n\t\tif (!xterm) {\n\t\t\treturn;\n\t\t}\n\t\tif (previous) {\n\t\t\tthis._findPreviousWithEvent(xterm, this.inputValue, {\n\t\t\t\tregex: this._getRegexValue(),\n\t\t\t\twholeWord: this._getWholeWordValue(),\n\t\t\t\tcaseSensitive: this._getCaseSensitiveValue(),\n\t\t\t\tincremental: update,\n\t\t\t});\n\t\t} else {\n\t\t\tthis._findNextWithEvent(xterm, this.inputValue, {\n\t\t\t\tregex: this._getRegexValue(),\n\t\t\t\twholeWord: this._getWholeWordValue(),\n\t\t\t\tcaseSensitive: this._getCaseSensitiveValue(),\n\t\t\t});\n\t\t}\n\t}\n\n\toverride reveal(): void {\n\t\tconst initialInput =\n\t\t\tthis._instance.hasSelection() &&\n\t\t\t!this._instance.selection!.includes(\"\\n\")\n\t\t\t\t? this._instance.selection\n\t\t\t\t: undefined;\n\t\tconst inputValue = initialInput ?? this.inputValue;\n\t\tconst xterm = this._instance.xterm;\n\t\tif (xterm && inputValue && inputValue !== \"\") {\n\t\t\t// trigger highlight all matches\n\t\t\tthis._findPreviousWithEvent(xterm, inputValue, {\n\t\t\t\tincremental: true,\n\t\t\t\tregex: this._getRegexValue(),\n\t\t\t\twholeWord: this._getWholeWordValue(),\n\t\t\t\tcaseSensitive: this._getCaseSensitiveValue(),\n\t\t\t}).then((foundMatch) => {\n\t\t\t\tthis.updateButtons(foundMatch);\n\t\t\t\tthis._register(\n\t\t\t\t\tEvent.once(xterm.onDidChangeSelection)(() =>\n\t\t\t\t\t\txterm.clearActiveSearchDecoration(),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\tthis.updateButtons(false);\n\n\t\tsuper.reveal(inputValue);\n\t\tthis._findWidgetVisible.set(true);\n\t}\n\n\toverride show() {\n\t\tconst initialInput =\n\t\t\tthis._instance.hasSelection() &&\n\t\t\t!this._instance.selection!.includes(\"\\n\")\n\t\t\t\t? this._instance.selection\n\t\t\t\t: undefined;\n\t\tsuper.show(initialInput);\n\t\tthis._findWidgetVisible.set(true);\n\t}\n\n\toverride hide() {\n\t\tsuper.hide();\n\t\tthis._findWidgetVisible.reset();\n\t\tthis._instance.focus(true);\n\t\tthis._instance.xterm?.clearSearchDecorations();\n\t}\n\n\tprotected async _getResultCount(): Promise<\n\t\t{ resultIndex: number; resultCount: number } | undefined\n\t> {\n\t\treturn this._instance.xterm?.findResult;\n\t}\n\n\tprotected _onInputChanged() {\n\t\t// Ignore input changes for now\n\t\tconst xterm = this._instance.xterm;\n\t\tif (xterm) {\n\t\t\tthis._findPreviousWithEvent(xterm, this.inputValue, {\n\t\t\t\tregex: this._getRegexValue(),\n\t\t\t\twholeWord: this._getWholeWordValue(),\n\t\t\t\tcaseSensitive: this._getCaseSensitiveValue(),\n\t\t\t\tincremental: true,\n\t\t\t}).then((foundMatch) => {\n\t\t\t\tthis.updateButtons(foundMatch);\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _onFocusTrackerFocus() {\n\t\tif (\"overrideCopyOnSelection\" in this._instance) {\n\t\t\tthis._overrideCopyOnSelectionDisposable =\n\t\t\t\tthis._instance.overrideCopyOnSelection(false);\n\t\t}\n\t\tthis._findWidgetFocused.set(true);\n\t}\n\n\tprotected _onFocusTrackerBlur() {\n\t\tthis._overrideCopyOnSelectionDisposable?.dispose();\n\t\tthis._instance.xterm?.clearActiveSearchDecoration();\n\t\tthis._findWidgetFocused.reset();\n\t}\n\n\tprotected _onFindInputFocusTrackerFocus() {\n\t\tthis._findInputFocused.set(true);\n\t}\n\n\tprotected _onFindInputFocusTrackerBlur() {\n\t\tthis._findInputFocused.reset();\n\t}\n\n\tfindFirst() {\n\t\tconst instance = this._instance;\n\t\tif (instance.hasSelection()) {\n\t\t\tinstance.clearSelection();\n\t\t}\n\t\tconst xterm = instance.xterm;\n\t\tif (xterm) {\n\t\t\tthis._findPreviousWithEvent(xterm, this.inputValue, {\n\t\t\t\tregex: this._getRegexValue(),\n\t\t\t\twholeWord: this._getWholeWordValue(),\n\t\t\t\tcaseSensitive: this._getCaseSensitiveValue(),\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async _findNextWithEvent(\n\t\txterm: IXtermTerminal,\n\t\tterm: string,\n\t\toptions: ISearchOptions,\n\t): Promise<boolean> {\n\t\treturn xterm.findNext(term, options).then((foundMatch) => {\n\t\t\tthis._register(\n\t\t\t\tEvent.once(xterm.onDidChangeSelection)(() =>\n\t\t\t\t\txterm.clearActiveSearchDecoration(),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn foundMatch;\n\t\t});\n\t}\n\n\tprivate async _findPreviousWithEvent(\n\t\txterm: IXtermTerminal,\n\t\tterm: string,\n\t\toptions: ISearchOptions,\n\t): Promise<boolean> {\n\t\treturn xterm.findPrevious(term, options).then((foundMatch) => {\n\t\t\tthis._register(\n\t\t\t\tEvent.once(xterm.onDidChangeSelection)(() =>\n\t\t\t\t\txterm.clearActiveSearchDecoration(),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn foundMatch;\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
