{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminalContrib/typeAhead/browser/terminal.typeAhead.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from \"@xterm/xterm\";\nimport {\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tITerminalContribution,\n\tITerminalInstance,\n\tIXtermTerminal,\n} from \"../../../terminal/browser/terminal.js\";\nimport { registerTerminalContribution } from \"../../../terminal/browser/terminalExtensions.js\";\nimport type { TerminalWidgetManager } from \"../../../terminal/browser/widgets/widgetManager.js\";\nimport {\n\ttype ITerminalProcessManager,\n\tTERMINAL_CONFIG_SECTION,\n} from \"../../../terminal/common/terminal.js\";\nimport {\n\ttype ITerminalTypeAheadConfiguration,\n\tTerminalTypeAheadSettingId,\n} from \"../common/terminalTypeAheadConfiguration.js\";\nimport { TypeAheadAddon } from \"./terminalTypeAheadAddon.js\";\n\nclass TerminalTypeAheadContribution\n\textends DisposableStore\n\timplements ITerminalContribution\n{\n\tstatic readonly ID = \"terminal.typeAhead\";\n\n\tstatic get(\n\t\tinstance: ITerminalInstance,\n\t): TerminalTypeAheadContribution | null {\n\t\treturn instance.getContribution<TerminalTypeAheadContribution>(\n\t\t\tTerminalTypeAheadContribution.ID,\n\t\t);\n\t}\n\n\tprivate _addon: TypeAheadAddon | undefined;\n\n\tconstructor(\n\t\tinstance: ITerminalInstance,\n\t\tprivate readonly _processManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis.add(toDisposable(() => this._addon?.dispose()));\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._loadTypeAheadAddon(xterm.raw);\n\t\tthis.add(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tTerminalTypeAheadSettingId.LocalEchoEnabled,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis._loadTypeAheadAddon(xterm.raw);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Reset the addon when the terminal launches or relaunches\n\t\tthis.add(\n\t\t\tthis._processManager.onProcessReady(() => {\n\t\t\t\tthis._addon?.reset();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _loadTypeAheadAddon(xterm: RawXtermTerminal): void {\n\t\tconst enabled =\n\t\t\tthis._configurationService.getValue<ITerminalTypeAheadConfiguration>(\n\t\t\t\tTERMINAL_CONFIG_SECTION,\n\t\t\t).localEchoEnabled;\n\t\tconst isRemote = !!this._processManager.remoteAuthority;\n\t\tif (enabled === \"off\" || (enabled === \"auto\" && !isRemote)) {\n\t\t\tthis._addon?.dispose();\n\t\t\tthis._addon = undefined;\n\t\t\treturn;\n\t\t}\n\t\tif (this._addon) {\n\t\t\treturn;\n\t\t}\n\t\tif (enabled === \"on\" || (enabled === \"auto\" && isRemote)) {\n\t\t\tthis._addon = this._instantiationService.createInstance(\n\t\t\t\tTypeAheadAddon,\n\t\t\t\tthis._processManager,\n\t\t\t);\n\t\t\txterm.loadAddon(this._addon);\n\t\t}\n\t}\n}\n\nregisterTerminalContribution(\n\tTerminalTypeAheadContribution.ID,\n\tTerminalTypeAheadContribution,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAMA;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AAMtC,SAAS,oCAAoC;AAE7C;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EAEC;AAAA,OACM;AACP,SAAS,sBAAsB;AAE/B,IAAM,gCAAN,cACS,gBAET;AAAA,EAaC,YACC,UACiB,iBACjB,eACwC,uBACA,uBACvC;AACD,UAAM;AALW;AAEuB;AACA;AAGxC,SAAK,IAAI,aAAa,MAAM,KAAK,QAAQ,QAAQ,CAAC,CAAC;AAAA,EACpD;AAAA,EAtDD,OAgCA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAErB,OAAO,IACN,UACuC;AACvC,WAAO,SAAS;AAAA,MACf,8BAA8B;AAAA,IAC/B;AAAA,EACD;AAAA,EAEQ;AAAA,EAaR,WAAW,OAAyD;AACnE,SAAK,oBAAoB,MAAM,GAAG;AAClC,SAAK;AAAA,MACJ,KAAK,sBAAsB,yBAAyB,CAAC,MAAM;AAC1D,YACC,EAAE;AAAA,UACD,2BAA2B;AAAA,QAC5B,GACC;AACD,eAAK,oBAAoB,MAAM,GAAG;AAAA,QACnC;AAAA,MACD,CAAC;AAAA,IACF;AAGA,SAAK;AAAA,MACJ,KAAK,gBAAgB,eAAe,MAAM;AACzC,aAAK,QAAQ,MAAM;AAAA,MACpB,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,oBAAoB,OAA+B;AAC1D,UAAM,UACL,KAAK,sBAAsB;AAAA,MAC1B;AAAA,IACD,EAAE;AACH,UAAM,WAAW,CAAC,CAAC,KAAK,gBAAgB;AACxC,QAAI,YAAY,SAAU,YAAY,UAAU,CAAC,UAAW;AAC3D,WAAK,QAAQ,QAAQ;AACrB,WAAK,SAAS;AACd;AAAA,IACD;AACA,QAAI,KAAK,QAAQ;AAChB;AAAA,IACD;AACA,QAAI,YAAY,QAAS,YAAY,UAAU,UAAW;AACzD,WAAK,SAAS,KAAK,sBAAsB;AAAA,QACxC;AAAA,QACA,KAAK;AAAA,MACN;AACA,YAAM,UAAU,KAAK,MAAM;AAAA,IAC5B;AAAA,EACD;AACD;AAvEM,gCAAN;AAAA,EAoBG;AAAA,EACA;AAAA,GArBG;AAyEN;AAAA,EACC,8BAA8B;AAAA,EAC9B;AACD;",
  "names": []
}
