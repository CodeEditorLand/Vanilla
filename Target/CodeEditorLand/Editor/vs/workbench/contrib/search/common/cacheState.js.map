{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/common/cacheState.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { defaultGenerator } from \"../../../../base/common/idGenerator.js\";\nimport { equals } from \"../../../../base/common/objects.js\";\nimport type { IFileQuery } from \"../../../services/search/common/search.js\";\n\nenum LoadingPhase {\n\tCreated = 1,\n\tLoading = 2,\n\tLoaded = 3,\n\tErrored = 4,\n\tDisposed = 5,\n}\n\nexport class FileQueryCacheState {\n\tprivate readonly _cacheKey = defaultGenerator.nextId();\n\tget cacheKey(): string {\n\t\tif (\n\t\t\tthis.loadingPhase === LoadingPhase.Loaded ||\n\t\t\t!this.previousCacheState\n\t\t) {\n\t\t\treturn this._cacheKey;\n\t\t}\n\n\t\treturn this.previousCacheState.cacheKey;\n\t}\n\n\tget isLoaded(): boolean {\n\t\tconst isLoaded = this.loadingPhase === LoadingPhase.Loaded;\n\n\t\treturn isLoaded || !this.previousCacheState\n\t\t\t? isLoaded\n\t\t\t: this.previousCacheState.isLoaded;\n\t}\n\n\tget isUpdating(): boolean {\n\t\tconst isUpdating = this.loadingPhase === LoadingPhase.Loading;\n\n\t\treturn isUpdating || !this.previousCacheState\n\t\t\t? isUpdating\n\t\t\t: this.previousCacheState.isUpdating;\n\t}\n\n\tprivate readonly query = this.cacheQuery(this._cacheKey);\n\n\tprivate loadingPhase = LoadingPhase.Created;\n\tprivate loadPromise: Promise<void> | undefined;\n\n\tconstructor(\n\t\tprivate cacheQuery: (cacheKey: string) => IFileQuery,\n\t\tprivate loadFn: (query: IFileQuery) => Promise<any>,\n\t\tprivate disposeFn: (cacheKey: string) => Promise<void>,\n\t\tprivate previousCacheState: FileQueryCacheState | undefined,\n\t) {\n\t\tif (this.previousCacheState) {\n\t\t\tconst current = Object.assign({}, this.query, { cacheKey: null });\n\t\t\tconst previous = Object.assign({}, this.previousCacheState.query, {\n\t\t\t\tcacheKey: null,\n\t\t\t});\n\t\t\tif (!equals(current, previous)) {\n\t\t\t\tthis.previousCacheState.dispose();\n\t\t\t\tthis.previousCacheState = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tload(): FileQueryCacheState {\n\t\tif (this.isUpdating) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.loadingPhase = LoadingPhase.Loading;\n\n\t\tthis.loadPromise = (async () => {\n\t\t\ttry {\n\t\t\t\tawait this.loadFn(this.query);\n\n\t\t\t\tthis.loadingPhase = LoadingPhase.Loaded;\n\n\t\t\t\tif (this.previousCacheState) {\n\t\t\t\t\tthis.previousCacheState.dispose();\n\t\t\t\t\tthis.previousCacheState = undefined;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.loadingPhase = LoadingPhase.Errored;\n\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t})();\n\n\t\treturn this;\n\t}\n\n\tdispose(): void {\n\t\tif (this.loadPromise) {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.loadPromise;\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\n\t\t\t\tthis.loadingPhase = LoadingPhase.Disposed;\n\t\t\t\tthis.disposeFn(this._cacheKey);\n\t\t\t})();\n\t\t} else {\n\t\t\tthis.loadingPhase = LoadingPhase.Disposed;\n\t\t}\n\n\t\tif (this.previousCacheState) {\n\t\t\tthis.previousCacheState.dispose();\n\t\t\tthis.previousCacheState = undefined;\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,wBAAwB;AACjC,SAAS,cAAc;AAGvB,IAAK,eAAL,kBAAKA,kBAAL;AACC,EAAAA,4BAAA,aAAU,KAAV;AACA,EAAAA,4BAAA,aAAU,KAAV;AACA,EAAAA,4BAAA,YAAS,KAAT;AACA,EAAAA,4BAAA,aAAU,KAAV;AACA,EAAAA,4BAAA,cAAW,KAAX;AALI,SAAAA;AAAA,GAAA;AAQE,MAAM,oBAAoB;AAAA,EAkChC,YACS,YACA,QACA,WACA,oBACP;AAJO;AACA;AACA;AACA;AAER,QAAI,KAAK,oBAAoB;AAC5B,YAAM,UAAU,OAAO,OAAO,CAAC,GAAG,KAAK,OAAO,EAAE,UAAU,KAAK,CAAC;AAChE,YAAM,WAAW,OAAO,OAAO,CAAC,GAAG,KAAK,mBAAmB,OAAO;AAAA,QACjE,UAAU;AAAA,MACX,CAAC;AACD,UAAI,CAAC,OAAO,SAAS,QAAQ,GAAG;AAC/B,aAAK,mBAAmB,QAAQ;AAChC,aAAK,qBAAqB;AAAA,MAC3B;AAAA,IACD;AAAA,EACD;AAAA,EAnED,OAiBiC;AAAA;AAAA;AAAA,EACf,YAAY,iBAAiB,OAAO;AAAA,EACrD,IAAI,WAAmB;AACtB,QACC,KAAK,iBAAiB,kBACtB,CAAC,KAAK,oBACL;AACD,aAAO,KAAK;AAAA,IACb;AAEA,WAAO,KAAK,mBAAmB;AAAA,EAChC;AAAA,EAEA,IAAI,WAAoB;AACvB,UAAM,WAAW,KAAK,iBAAiB;AAEvC,WAAO,YAAY,CAAC,KAAK,qBACtB,WACA,KAAK,mBAAmB;AAAA,EAC5B;AAAA,EAEA,IAAI,aAAsB;AACzB,UAAM,aAAa,KAAK,iBAAiB;AAEzC,WAAO,cAAc,CAAC,KAAK,qBACxB,aACA,KAAK,mBAAmB;AAAA,EAC5B;AAAA,EAEiB,QAAQ,KAAK,WAAW,KAAK,SAAS;AAAA,EAE/C,eAAe;AAAA,EACf;AAAA,EAoBR,OAA4B;AAC3B,QAAI,KAAK,YAAY;AACpB,aAAO;AAAA,IACR;AAEA,SAAK,eAAe;AAEpB,SAAK,eAAe,YAAY;AAC/B,UAAI;AACH,cAAM,KAAK,OAAO,KAAK,KAAK;AAE5B,aAAK,eAAe;AAEpB,YAAI,KAAK,oBAAoB;AAC5B,eAAK,mBAAmB,QAAQ;AAChC,eAAK,qBAAqB;AAAA,QAC3B;AAAA,MACD,SAAS,OAAO;AACf,aAAK,eAAe;AAEpB,cAAM;AAAA,MACP;AAAA,IACD,GAAG;AAEH,WAAO;AAAA,EACR;AAAA,EAEA,UAAgB;AACf,QAAI,KAAK,aAAa;AACrB,OAAC,YAAY;AACZ,YAAI;AACH,gBAAM,KAAK;AAAA,QACZ,SAAS,OAAO;AAAA,QAEhB;AAEA,aAAK,eAAe;AACpB,aAAK,UAAU,KAAK,SAAS;AAAA,MAC9B,GAAG;AAAA,IACJ,OAAO;AACN,WAAK,eAAe;AAAA,IACrB;AAEA,QAAI,KAAK,oBAAoB;AAC5B,WAAK,mBAAmB,QAAQ;AAChC,WAAK,qBAAqB;AAAA,IAC3B;AAAA,EACD;AACD;",
  "names": ["LoadingPhase"]
}
