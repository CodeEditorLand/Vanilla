var S=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var d=(a,e,t,o)=>{for(var i=o>1?void 0:o?v(e,t):e,n=a.length-1,c;n>=0;n--)(c=a[n])&&(i=(o?c(e,t,i):c(i))||i);return o&&i&&S(e,t,i),i},l=(a,e)=>(t,o)=>e(t,o,a);import{Emitter as y}from"../../../../base/common/event.js";import{isEmptyObject as H}from"../../../../base/common/types.js";import{createDecorator as E}from"../../../../platform/instantiation/common/instantiation.js";import{IStorageService as I,StorageScope as s,StorageTarget as g}from"../../../../platform/storage/common/storage.js";const f=E("searchHistoryService");let r=class{constructor(e){this.storageService=e}static SEARCH_HISTORY_KEY="workbench.search.history";_onDidClearHistory=new y;onDidClearHistory=this._onDidClearHistory.event;clearHistory(){this.storageService.remove(r.SEARCH_HISTORY_KEY,s.WORKSPACE),this._onDidClearHistory.fire()}load(){let e;const t=this.storageService.get(r.SEARCH_HISTORY_KEY,s.WORKSPACE);if(t)try{e=JSON.parse(t)}catch{}return e||{}}save(e){H(e)?this.storageService.remove(r.SEARCH_HISTORY_KEY,s.WORKSPACE):this.storageService.store(r.SEARCH_HISTORY_KEY,JSON.stringify(e),s.WORKSPACE,g.USER)}};r=d([l(0,I)],r);export{f as ISearchHistoryService,r as SearchHistoryService};
