{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/common/search.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { groupBy } from \"../../../../base/common/arrays.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { onUnexpectedExternalError } from \"../../../../base/common/errors.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { compare } from \"../../../../base/common/strings.js\";\nimport { isNumber } from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { type IRange, Range } from \"../../../../editor/common/core/range.js\";\nimport type {\n\tLocation,\n\tProviderResult,\n\tSymbolKind,\n\tSymbolTag,\n} from \"../../../../editor/common/languages.js\";\nimport { RawContextKey } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tEditorResourceAccessor,\n\tSideBySideEditor,\n} from \"../../../common/editor.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport type {\n\tISearchConfiguration,\n\tISearchConfigurationProperties,\n} from \"../../../services/search/common/search.js\";\n\nexport interface IWorkspaceSymbol {\n\tname: string;\n\tcontainerName?: string;\n\tkind: SymbolKind;\n\ttags?: SymbolTag[];\n\tlocation: Location;\n}\n\nexport interface IWorkspaceSymbolProvider {\n\tprovideWorkspaceSymbols(\n\t\tsearch: string,\n\t\ttoken: CancellationToken,\n\t): ProviderResult<IWorkspaceSymbol[]>;\n\tresolveWorkspaceSymbol?(\n\t\titem: IWorkspaceSymbol,\n\t\ttoken: CancellationToken,\n\t): ProviderResult<IWorkspaceSymbol>;\n}\n\nexport namespace WorkspaceSymbolProviderRegistry {\n\tconst _supports: IWorkspaceSymbolProvider[] = [];\n\n\texport function register(provider: IWorkspaceSymbolProvider): IDisposable {\n\t\tlet support: IWorkspaceSymbolProvider | undefined = provider;\n\t\tif (support) {\n\t\t\t_supports.push(support);\n\t\t}\n\n\t\treturn {\n\t\t\tdispose() {\n\t\t\t\tif (support) {\n\t\t\t\t\tconst idx = _supports.indexOf(support);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t_supports.splice(idx, 1);\n\t\t\t\t\t\tsupport = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\texport function all(): IWorkspaceSymbolProvider[] {\n\t\treturn _supports.slice(0);\n\t}\n}\n\nexport class WorkspaceSymbolItem {\n\tconstructor(\n\t\treadonly symbol: IWorkspaceSymbol,\n\t\treadonly provider: IWorkspaceSymbolProvider,\n\t) {}\n}\n\nexport async function getWorkspaceSymbols(\n\tquery: string,\n\ttoken: CancellationToken = CancellationToken.None,\n): Promise<WorkspaceSymbolItem[]> {\n\tconst all: WorkspaceSymbolItem[] = [];\n\n\tconst promises = WorkspaceSymbolProviderRegistry.all().map(\n\t\tasync (provider) => {\n\t\t\ttry {\n\t\t\t\tconst value = await provider.provideWorkspaceSymbols(\n\t\t\t\t\tquery,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const symbol of value) {\n\t\t\t\t\tall.push(new WorkspaceSymbolItem(symbol, provider));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t}\n\t\t},\n\t);\n\n\tawait Promise.all(promises);\n\n\tif (token.isCancellationRequested) {\n\t\treturn [];\n\t}\n\n\t// de-duplicate entries\n\n\tfunction compareItems(\n\t\ta: WorkspaceSymbolItem,\n\t\tb: WorkspaceSymbolItem,\n\t): number {\n\t\tlet res = compare(a.symbol.name, b.symbol.name);\n\t\tif (res === 0) {\n\t\t\tres = a.symbol.kind - b.symbol.kind;\n\t\t}\n\t\tif (res === 0) {\n\t\t\tres = compare(\n\t\t\t\ta.symbol.location.uri.toString(),\n\t\t\t\tb.symbol.location.uri.toString(),\n\t\t\t);\n\t\t}\n\t\tif (res === 0) {\n\t\t\tif (a.symbol.location.range && b.symbol.location.range) {\n\t\t\t\tif (\n\t\t\t\t\t!Range.areIntersecting(\n\t\t\t\t\t\ta.symbol.location.range,\n\t\t\t\t\t\tb.symbol.location.range,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tres = Range.compareRangesUsingStarts(\n\t\t\t\t\t\ta.symbol.location.range,\n\t\t\t\t\t\tb.symbol.location.range,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\ta.provider.resolveWorkspaceSymbol &&\n\t\t\t\t!b.provider.resolveWorkspaceSymbol\n\t\t\t) {\n\t\t\t\tres = -1;\n\t\t\t} else if (\n\t\t\t\t!a.provider.resolveWorkspaceSymbol &&\n\t\t\t\tb.provider.resolveWorkspaceSymbol\n\t\t\t) {\n\t\t\t\tres = 1;\n\t\t\t}\n\t\t}\n\t\tif (res === 0) {\n\t\t\tres = compare(\n\t\t\t\ta.symbol.containerName ?? \"\",\n\t\t\t\tb.symbol.containerName ?? \"\",\n\t\t\t);\n\t\t}\n\t\treturn res;\n\t}\n\n\treturn groupBy(all, compareItems).flatMap((group) => group[0]);\n}\n\nexport interface IWorkbenchSearchConfigurationProperties\n\textends ISearchConfigurationProperties {\n\tquickOpen: {\n\t\tincludeSymbols: boolean;\n\t\tincludeHistory: boolean;\n\t\thistory: {\n\t\t\tfilterSortOrder: \"default\" | \"recency\";\n\t\t};\n\t};\n}\n\nexport interface IWorkbenchSearchConfiguration extends ISearchConfiguration {\n\tsearch: IWorkbenchSearchConfigurationProperties;\n}\n\n/**\n * Helper to return all opened editors with resources not belonging to the currently opened workspace.\n */\nexport function getOutOfWorkspaceEditorResources(\n\taccessor: ServicesAccessor,\n): URI[] {\n\tconst editorService = accessor.get(IEditorService);\n\tconst contextService = accessor.get(IWorkspaceContextService);\n\tconst fileService = accessor.get(IFileService);\n\n\tconst resources = editorService.editors\n\t\t.map((editor) =>\n\t\t\tEditorResourceAccessor.getOriginalUri(editor, {\n\t\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\t}),\n\t\t)\n\t\t.filter(\n\t\t\t(resource) =>\n\t\t\t\t!!resource &&\n\t\t\t\t!contextService.isInsideWorkspace(resource) &&\n\t\t\t\tfileService.hasProvider(resource),\n\t\t);\n\n\treturn resources as URI[];\n}\n\n// Supports patterns of <path><#|:|(><line><#|:|,><col?><:?>\nconst LINE_COLON_PATTERN = /\\s?[#:(](?:line )?(\\d*)(?:[#:,](\\d*))?\\)?:?\\s*$/;\n\nexport interface IFilterAndRange {\n\tfilter: string;\n\trange: IRange;\n}\n\nexport function extractRangeFromFilter(\n\tfilter: string,\n\tunless?: string[],\n): IFilterAndRange | undefined {\n\t// Ignore when the unless character not the first character or is before the line colon pattern\n\tif (\n\t\t!filter ||\n\t\tunless?.some((value) => {\n\t\t\tconst unlessCharPos = filter.indexOf(value);\n\t\t\treturn (\n\t\t\t\tunlessCharPos === 0 ||\n\t\t\t\t(unlessCharPos > 0 &&\n\t\t\t\t\t!LINE_COLON_PATTERN.test(\n\t\t\t\t\t\tfilter.substring(unlessCharPos + 1),\n\t\t\t\t\t))\n\t\t\t);\n\t\t})\n\t) {\n\t\treturn undefined;\n\t}\n\n\tlet range: IRange | undefined;\n\n\t// Find Line/Column number from search value using RegExp\n\tconst patternMatch = LINE_COLON_PATTERN.exec(filter);\n\n\tif (patternMatch) {\n\t\tconst startLineNumber = Number.parseInt(patternMatch[1] ?? \"\", 10);\n\n\t\t// Line Number\n\t\tif (isNumber(startLineNumber)) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: startLineNumber,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: startLineNumber,\n\t\t\t\tendColumn: 1,\n\t\t\t};\n\n\t\t\t// Column Number\n\t\t\tconst startColumn = Number.parseInt(patternMatch[2] ?? \"\", 10);\n\t\t\tif (isNumber(startColumn)) {\n\t\t\t\trange = {\n\t\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\t\tstartColumn: startColumn,\n\t\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\t\tendColumn: startColumn,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// User has typed \"something:\" or \"something#\" without a line number, in this case treat as start of file\n\t\telse if (patternMatch[1] === \"\") {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: 1,\n\t\t\t\tendColumn: 1,\n\t\t\t};\n\t\t}\n\t}\n\n\tif (patternMatch && range) {\n\t\treturn {\n\t\t\tfilter: filter.substr(0, patternMatch.index), // clear range suffix from search value\n\t\t\trange,\n\t\t};\n\t}\n\n\treturn undefined;\n}\n\nexport enum SearchUIState {\n\tIdle = 0,\n\tSearching = 1,\n\tSlowSearch = 2,\n}\n\nexport const SearchStateKey = new RawContextKey<SearchUIState>(\n\t\"searchState\",\n\tSearchUIState.Idle,\n);\n\nexport interface NotebookPriorityInfo {\n\tisFromSettings: boolean;\n\tfilenamePatterns: string[];\n}\n"],
  "mappings": "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",
  "names": ["WorkspaceSymbolProviderRegistry", "SearchUIState"]
}
