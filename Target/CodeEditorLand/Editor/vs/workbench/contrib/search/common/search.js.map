{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/common/search.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ISearchConfiguration, ISearchConfigurationProperties } from '../../../services/search/common/search.js';\nimport { SymbolKind, Location, ProviderResult, SymbolTag } from '../../../../editor/common/languages.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IRange, Range } from '../../../../editor/common/core/range.js';\nimport { isNumber } from '../../../../base/common/types.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { compare } from '../../../../base/common/strings.js';\nimport { groupBy } from '../../../../base/common/arrays.js';\n\nexport interface IWorkspaceSymbol {\n\tname: string;\n\tcontainerName?: string;\n\tkind: SymbolKind;\n\ttags?: SymbolTag[];\n\tlocation: Location;\n}\n\nexport interface IWorkspaceSymbolProvider {\n\tprovideWorkspaceSymbols(search: string, token: CancellationToken): ProviderResult<IWorkspaceSymbol[]>;\n\tresolveWorkspaceSymbol?(item: IWorkspaceSymbol, token: CancellationToken): ProviderResult<IWorkspaceSymbol>;\n}\n\nexport namespace WorkspaceSymbolProviderRegistry {\n\n\tconst _supports: IWorkspaceSymbolProvider[] = [];\n\n\texport function register(provider: IWorkspaceSymbolProvider): IDisposable {\n\t\tlet support: IWorkspaceSymbolProvider | undefined = provider;\n\t\tif (support) {\n\t\t\t_supports.push(support);\n\t\t}\n\n\t\treturn {\n\t\t\tdispose() {\n\t\t\t\tif (support) {\n\t\t\t\t\tconst idx = _supports.indexOf(support);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t_supports.splice(idx, 1);\n\t\t\t\t\t\tsupport = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function all(): IWorkspaceSymbolProvider[] {\n\t\treturn _supports.slice(0);\n\t}\n}\n\nexport class WorkspaceSymbolItem {\n\tconstructor(readonly symbol: IWorkspaceSymbol, readonly provider: IWorkspaceSymbolProvider) { }\n}\n\nexport async function getWorkspaceSymbols(query: string, token: CancellationToken = CancellationToken.None): Promise<WorkspaceSymbolItem[]> {\n\n\tconst all: WorkspaceSymbolItem[] = [];\n\n\tconst promises = WorkspaceSymbolProviderRegistry.all().map(async provider => {\n\t\ttry {\n\t\t\tconst value = await provider.provideWorkspaceSymbols(query, token);\n\t\t\tif (!value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (const symbol of value) {\n\t\t\t\tall.push(new WorkspaceSymbolItem(symbol, provider));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tonUnexpectedExternalError(err);\n\t\t}\n\t});\n\n\tawait Promise.all(promises);\n\n\tif (token.isCancellationRequested) {\n\t\treturn [];\n\t}\n\n\t// de-duplicate entries\n\n\tfunction compareItems(a: WorkspaceSymbolItem, b: WorkspaceSymbolItem): number {\n\t\tlet res = compare(a.symbol.name, b.symbol.name);\n\t\tif (res === 0) {\n\t\t\tres = a.symbol.kind - b.symbol.kind;\n\t\t}\n\t\tif (res === 0) {\n\t\t\tres = compare(a.symbol.location.uri.toString(), b.symbol.location.uri.toString());\n\t\t}\n\t\tif (res === 0) {\n\t\t\tif (a.symbol.location.range && b.symbol.location.range) {\n\t\t\t\tif (!Range.areIntersecting(a.symbol.location.range, b.symbol.location.range)) {\n\t\t\t\t\tres = Range.compareRangesUsingStarts(a.symbol.location.range, b.symbol.location.range);\n\t\t\t\t}\n\t\t\t} else if (a.provider.resolveWorkspaceSymbol && !b.provider.resolveWorkspaceSymbol) {\n\t\t\t\tres = -1;\n\t\t\t} else if (!a.provider.resolveWorkspaceSymbol && b.provider.resolveWorkspaceSymbol) {\n\t\t\t\tres = 1;\n\t\t\t}\n\t\t}\n\t\tif (res === 0) {\n\t\t\tres = compare(a.symbol.containerName ?? '', b.symbol.containerName ?? '');\n\t\t}\n\t\treturn res;\n\t}\n\n\treturn groupBy(all, compareItems).map(group => group[0]).flat();\n}\n\nexport interface IWorkbenchSearchConfigurationProperties extends ISearchConfigurationProperties {\n\tquickOpen: {\n\t\tincludeSymbols: boolean;\n\t\tincludeHistory: boolean;\n\t\thistory: {\n\t\t\tfilterSortOrder: 'default' | 'recency';\n\t\t};\n\t};\n}\n\nexport interface IWorkbenchSearchConfiguration extends ISearchConfiguration {\n\tsearch: IWorkbenchSearchConfigurationProperties;\n}\n\n/**\n * Helper to return all opened editors with resources not belonging to the currently opened workspace.\n */\nexport function getOutOfWorkspaceEditorResources(accessor: ServicesAccessor): URI[] {\n\tconst editorService = accessor.get(IEditorService);\n\tconst contextService = accessor.get(IWorkspaceContextService);\n\tconst fileService = accessor.get(IFileService);\n\n\tconst resources = editorService.editors\n\t\t.map(editor => EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY }))\n\t\t.filter(resource => !!resource && !contextService.isInsideWorkspace(resource) && fileService.hasProvider(resource));\n\n\treturn resources as URI[];\n}\n\n// Supports patterns of <path><#|:|(><line><#|:|,><col?><:?>\nconst LINE_COLON_PATTERN = /\\s?[#:\\(](?:line )?(\\d*)(?:[#:,](\\d*))?\\)?:?\\s*$/;\n\nexport interface IFilterAndRange {\n\tfilter: string;\n\trange: IRange;\n}\n\nexport function extractRangeFromFilter(filter: string, unless?: string[]): IFilterAndRange | undefined {\n\t// Ignore when the unless character not the first character or is before the line colon pattern\n\tif (!filter || unless?.some(value => {\n\t\tconst unlessCharPos = filter.indexOf(value);\n\t\treturn unlessCharPos === 0 || unlessCharPos > 0 && !LINE_COLON_PATTERN.test(filter.substring(unlessCharPos + 1));\n\t})) {\n\t\treturn undefined;\n\t}\n\n\tlet range: IRange | undefined = undefined;\n\n\t// Find Line/Column number from search value using RegExp\n\tconst patternMatch = LINE_COLON_PATTERN.exec(filter);\n\n\tif (patternMatch) {\n\t\tconst startLineNumber = parseInt(patternMatch[1] ?? '', 10);\n\n\t\t// Line Number\n\t\tif (isNumber(startLineNumber)) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: startLineNumber,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: startLineNumber,\n\t\t\t\tendColumn: 1\n\t\t\t};\n\n\t\t\t// Column Number\n\t\t\tconst startColumn = parseInt(patternMatch[2] ?? '', 10);\n\t\t\tif (isNumber(startColumn)) {\n\t\t\t\trange = {\n\t\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\t\tstartColumn: startColumn,\n\t\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\t\tendColumn: startColumn\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// User has typed \"something:\" or \"something#\" without a line number, in this case treat as start of file\n\t\telse if (patternMatch[1] === '') {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: 1,\n\t\t\t\tendColumn: 1\n\t\t\t};\n\t\t}\n\t}\n\n\tif (patternMatch && range) {\n\t\treturn {\n\t\t\tfilter: filter.substr(0, patternMatch.index), // clear range suffix from search value\n\t\t\trange\n\t\t};\n\t}\n\n\treturn undefined;\n}\n\nexport enum SearchUIState {\n\tIdle,\n\tSearching,\n\tSlowSearch\n}\n\nexport const SearchStateKey = new RawContextKey<SearchUIState>('searchState', SearchUIState.Idle);\n\nexport interface NotebookPriorityInfo {\n\tisFromSettings: boolean;\n\tfilenamePatterns: string[];\n}\n"],
  "mappings": "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",
  "names": ["WorkspaceSymbolProviderRegistry", "SearchUIState"]
}
