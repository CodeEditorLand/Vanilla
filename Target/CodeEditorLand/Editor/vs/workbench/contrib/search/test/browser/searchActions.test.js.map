{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/test/browser/searchActions.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Keybinding } from '../../../../../base/common/keybindings.js';\nimport { OS } from '../../../../../base/common/platform.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { USLayoutResolvedKeybinding } from '../../../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { IFileMatch, QueryType } from '../../../../services/search/common/search.js';\nimport { getElementToFocusAfterRemoved, getLastNodeFromSameType } from '../../browser/searchActionsRemoveReplace.js';\nimport { FileMatch, FileMatchOrMatch, FolderMatch, Match, SearchModel } from '../../browser/searchModel.js';\nimport { MockObjectTree } from './mockSearchTree.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { INotebookEditorService } from '../../../notebook/browser/services/notebookEditorService.js';\nimport { createFileUriFromPathFromRoot, stubModelService, stubNotebookEditorService } from './searchTestCommon.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('Search Actions', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tlet counter: number;\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(IModelService, stubModelService(instantiationService, (e) => store.add(e)));\n\t\tinstantiationService.stub(INotebookEditorService, stubNotebookEditorService(instantiationService, (e) => store.add(e)));\n\t\tinstantiationService.stub(IKeybindingService, {});\n\t\tinstantiationService.stub(ILabelService, { getUriBasenameLabel: (uri: URI) => '' });\n\t\tinstantiationService.stub(IKeybindingService, 'resolveKeybinding', (keybinding: Keybinding) => USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS));\n\t\tinstantiationService.stub(IKeybindingService, 'lookupKeybinding', (id: string) => null);\n\t\tinstantiationService.stub(IKeybindingService, 'lookupKeybinding', (id: string) => null);\n\t\tcounter = 0;\n\t});\n\n\tteardown(() => {\n\t\tinstantiationService.dispose();\n\t});\n\n\ttest('get next element to focus after removing a match when it has next sibling file', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst fileMatch2 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1), aMatch(fileMatch1), fileMatch2, aMatch(fileMatch2), aMatch(fileMatch2)];\n\t\tconst tree = aTree(data);\n\t\tconst target = data[2];\n\n\t\tconst actual = getElementToFocusAfterRemoved(tree, target, [target]);\n\t\tassert.strictEqual(data[4], actual);\n\t});\n\n\ttest('get next element to focus after removing a match when it is the only match', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1)];\n\t\tconst tree = aTree(data);\n\t\tconst target = data[1];\n\n\t\tconst actual = getElementToFocusAfterRemoved(tree, target, [target]);\n\t\tassert.strictEqual(undefined, actual);\n\t});\n\n\ttest('get next element to focus after removing a file match when it has next sibling', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst fileMatch2 = aFileMatch();\n\t\tconst fileMatch3 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1), fileMatch2, aMatch(fileMatch2), fileMatch3, aMatch(fileMatch3)];\n\t\tconst tree = aTree(data);\n\t\tconst target = data[2];\n\n\t\tconst actual = getElementToFocusAfterRemoved(tree, target, []);\n\t\tassert.strictEqual(data[4], actual);\n\t});\n\n\ttest('Find last FileMatch in Tree', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst fileMatch2 = aFileMatch();\n\t\tconst fileMatch3 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1), fileMatch2, aMatch(fileMatch2), fileMatch3, aMatch(fileMatch3)];\n\t\tconst tree = aTree(data);\n\n\t\tconst actual = getLastNodeFromSameType(tree, fileMatch1);\n\t\tassert.strictEqual(fileMatch3, actual);\n\t});\n\n\ttest('Find last Match in Tree', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst fileMatch2 = aFileMatch();\n\t\tconst fileMatch3 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1), fileMatch2, aMatch(fileMatch2), fileMatch3, aMatch(fileMatch3)];\n\t\tconst tree = aTree(data);\n\n\t\tconst actual = getLastNodeFromSameType(tree, aMatch(fileMatch1));\n\t\tassert.strictEqual(data[5], actual);\n\t});\n\n\ttest('get next element to focus after removing a file match when it is only match', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1)];\n\t\tconst tree = aTree(data);\n\t\tconst target = data[0];\n\t\t// const testObject: ReplaceAction = instantiationService.createInstance(ReplaceAction, tree, target, null);\n\n\t\tconst actual = getElementToFocusAfterRemoved(tree, target, []);\n\t\tassert.strictEqual(undefined, actual);\n\t});\n\n\tfunction aFileMatch(): FileMatch {\n\t\tconst rawMatch: IFileMatch = {\n\t\t\tresource: URI.file('somepath' + ++counter),\n\t\t\tresults: []\n\t\t};\n\n\t\tconst searchModel = instantiationService.createInstance(SearchModel);\n\t\tstore.add(searchModel);\n\t\tconst folderMatch = instantiationService.createInstance(FolderMatch, URI.file('somepath'), '', 0, {\n\t\t\ttype: QueryType.Text, folderQueries: [{ folder: createFileUriFromPathFromRoot() }], contentPattern: {\n\t\t\t\tpattern: ''\n\t\t\t}\n\t\t}, searchModel.searchResult, searchModel.searchResult, null);\n\t\tstore.add(folderMatch);\n\t\tconst fileMatch = instantiationService.createInstance(FileMatch, {\n\t\t\tpattern: ''\n\t\t}, undefined, undefined, folderMatch, rawMatch, null, '');\n\t\tfileMatch.createMatches(false);\n\t\tstore.add(fileMatch);\n\t\treturn fileMatch;\n\t}\n\n\tfunction aMatch(fileMatch: FileMatch): Match {\n\t\tconst line = ++counter;\n\t\tconst match = new Match(\n\t\t\tfileMatch,\n\t\t\t['some match'],\n\t\t\t{\n\t\t\t\tstartLineNumber: 0,\n\t\t\t\tstartColumn: 0,\n\t\t\t\tendLineNumber: 0,\n\t\t\t\tendColumn: 2\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartLineNumber: line,\n\t\t\t\tstartColumn: 0,\n\t\t\t\tendLineNumber: line,\n\t\t\t\tendColumn: 2\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t\tfileMatch.add(match);\n\t\treturn match;\n\t}\n\n\tfunction aTree(elements: FileMatchOrMatch[]): any {\n\t\treturn new MockObjectTree(elements);\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
