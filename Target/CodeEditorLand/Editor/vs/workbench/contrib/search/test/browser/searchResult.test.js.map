{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/test/browser/searchResult.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport * as sinon from 'sinon';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { Match, FileMatch, SearchResult, SearchModel, FolderMatch, CellMatch } from '../../browser/searchModel.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IFileMatch, TextSearchMatch, OneLineRange, ITextSearchMatch, QueryType } from '../../../../services/search/common/search.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../../../platform/telemetry/common/telemetryUtils.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { ModelService } from '../../../../../editor/common/services/modelService.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { IReplaceService } from '../../browser/replace.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { TestThemeService } from '../../../../../platform/theme/test/common/testThemeService.js';\nimport { IUriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { UriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { FileService } from '../../../../../platform/files/common/fileService.js';\nimport { ILogService, NullLogService } from '../../../../../platform/log/common/log.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { MockLabelService } from '../../../../services/label/test/common/mockLabelService.js';\nimport { INotebookEditorService } from '../../../notebook/browser/services/notebookEditorService.js';\nimport { IEditorGroupsService } from '../../../../services/editor/common/editorGroupsService.js';\nimport { TestEditorGroupsService, TestEditorService } from '../../../../test/browser/workbenchTestServices.js';\nimport { NotebookEditorWidgetService } from '../../../notebook/browser/services/notebookEditorServiceImpl.js';\nimport { ICellViewModel } from '../../../notebook/browser/notebookBrowser.js';\nimport { CellKind } from '../../../notebook/common/notebookCommon.js';\nimport { addToSearchResult, createFileUriFromPathFromRoot, getRootName } from './searchTestCommon.js';\nimport { INotebookCellMatchWithModel, INotebookFileMatchWithModel } from '../../browser/notebookSearch/searchNotebookHelpers.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { MockContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nconst lineOneRange = new OneLineRange(1, 0, 1);\n\nsuite('SearchResult', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tinstantiationService.stub(IModelService, stubModelService(instantiationService));\n\t\tinstantiationService.stub(INotebookEditorService, stubNotebookEditorService(instantiationService));\n\t\tconst fileService = new FileService(new NullLogService());\n\t\tstore.add(fileService);\n\t\tconst uriIdentityService = new UriIdentityService(fileService);\n\t\tstore.add(uriIdentityService);\n\t\tinstantiationService.stub(IUriIdentityService, uriIdentityService);\n\t\tinstantiationService.stubPromise(IReplaceService, {});\n\t\tinstantiationService.stub(IReplaceService, 'replace', () => Promise.resolve(null));\n\t\tinstantiationService.stub(ILabelService, new MockLabelService());\n\t\tinstantiationService.stub(ILogService, new NullLogService());\n\t});\n\n\tteardown(() => {\n\t\tinstantiationService.dispose();\n\t});\n\n\ttest('Line Match', function () {\n\t\tconst fileMatch = aFileMatch('folder/file.txt', null!);\n\t\tconst lineMatch = new Match(fileMatch, ['0 foo bar'], new OneLineRange(0, 2, 5), new OneLineRange(1, 0, 5), false);\n\t\tassert.strictEqual(lineMatch.text(), '0 foo bar');\n\t\tassert.strictEqual(lineMatch.range().startLineNumber, 2);\n\t\tassert.strictEqual(lineMatch.range().endLineNumber, 2);\n\t\tassert.strictEqual(lineMatch.range().startColumn, 1);\n\t\tassert.strictEqual(lineMatch.range().endColumn, 6);\n\t\tassert.strictEqual(lineMatch.id(), 'file:///folder/file.txt>[2,1 -> 2,6]foo');\n\n\t\tassert.strictEqual(lineMatch.fullMatchText(), 'foo');\n\t\tassert.strictEqual(lineMatch.fullMatchText(true), '0 foo bar');\n\t});\n\n\ttest('Line Match - Remove', function () {\n\t\tconst fileMatch = aFileMatch('folder/file.txt', aSearchResult(), new TextSearchMatch('foo bar', new OneLineRange(1, 0, 3)));\n\t\tconst lineMatch = fileMatch.matches()[0];\n\t\tfileMatch.remove(lineMatch);\n\t\tassert.strictEqual(fileMatch.matches().length, 0);\n\t});\n\n\ttest('File Match', function () {\n\t\tlet fileMatch = aFileMatch('folder/file.txt', aSearchResult());\n\t\tassert.strictEqual(fileMatch.matches().length, 0);\n\t\tassert.strictEqual(fileMatch.resource.toString(), 'file:///folder/file.txt');\n\t\tassert.strictEqual(fileMatch.name(), 'file.txt');\n\n\t\tfileMatch = aFileMatch('file.txt', aSearchResult());\n\t\tassert.strictEqual(fileMatch.matches().length, 0);\n\t\tassert.strictEqual(fileMatch.resource.toString(), 'file:///file.txt');\n\t\tassert.strictEqual(fileMatch.name(), 'file.txt');\n\t});\n\n\ttest('File Match: Select an existing match', function () {\n\t\tconst testObject = aFileMatch(\n\t\t\t'folder/file.txt',\n\t\t\taSearchResult(),\n\t\t\tnew TextSearchMatch('foo', new OneLineRange(1, 0, 3)),\n\t\t\tnew TextSearchMatch('bar', new OneLineRange(1, 5, 3)));\n\n\t\ttestObject.setSelectedMatch(testObject.matches()[0]);\n\n\t\tassert.strictEqual(testObject.matches()[0], testObject.getSelectedMatch());\n\t});\n\n\ttest('File Match: Select non existing match', function () {\n\t\tconst testObject = aFileMatch(\n\t\t\t'folder/file.txt',\n\t\t\taSearchResult(),\n\t\t\tnew TextSearchMatch('foo', new OneLineRange(1, 0, 3)),\n\t\t\tnew TextSearchMatch('bar', new OneLineRange(1, 5, 3)));\n\t\tconst target = testObject.matches()[0];\n\t\ttestObject.remove(target);\n\n\t\ttestObject.setSelectedMatch(target);\n\n\t\tassert.strictEqual(testObject.getSelectedMatch(), null);\n\t});\n\n\ttest('File Match: isSelected return true for selected match', function () {\n\t\tconst testObject = aFileMatch(\n\t\t\t'folder/file.txt',\n\t\t\taSearchResult(),\n\t\t\tnew TextSearchMatch('foo', new OneLineRange(1, 0, 3)),\n\t\t\tnew TextSearchMatch('bar', new OneLineRange(1, 5, 3)));\n\t\tconst target = testObject.matches()[0];\n\t\ttestObject.setSelectedMatch(target);\n\n\t\tassert.ok(testObject.isMatchSelected(target));\n\t});\n\n\ttest('File Match: isSelected return false for un-selected match', function () {\n\t\tconst testObject = aFileMatch('folder/file.txt',\n\t\t\taSearchResult(),\n\t\t\tnew TextSearchMatch('foo', new OneLineRange(1, 0, 3)),\n\t\t\tnew TextSearchMatch('bar', new OneLineRange(1, 5, 3)));\n\t\ttestObject.setSelectedMatch(testObject.matches()[0]);\n\t\tassert.ok(!testObject.isMatchSelected(testObject.matches()[1]));\n\t});\n\n\ttest('File Match: unselect', function () {\n\t\tconst testObject = aFileMatch(\n\t\t\t'folder/file.txt',\n\t\t\taSearchResult(),\n\t\t\tnew TextSearchMatch('foo', new OneLineRange(1, 0, 3)),\n\t\t\tnew TextSearchMatch('bar', new OneLineRange(1, 5, 3)));\n\t\ttestObject.setSelectedMatch(testObject.matches()[0]);\n\t\ttestObject.setSelectedMatch(null);\n\n\t\tassert.strictEqual(null, testObject.getSelectedMatch());\n\t});\n\n\ttest('File Match: unselect when not selected', function () {\n\t\tconst testObject = aFileMatch(\n\t\t\t'folder/file.txt',\n\t\t\taSearchResult(),\n\t\t\tnew TextSearchMatch('foo', new OneLineRange(1, 0, 3)),\n\t\t\tnew TextSearchMatch('bar', new OneLineRange(1, 5, 3)));\n\t\ttestObject.setSelectedMatch(null);\n\n\t\tassert.strictEqual(null, testObject.getSelectedMatch());\n\t});\n\n\ttest('Match -> FileMatch -> SearchResult hierarchy exists', function () {\n\n\t\tconst searchModel = instantiationService.createInstance(SearchModel);\n\t\tstore.add(searchModel);\n\t\tconst searchResult = instantiationService.createInstance(SearchResult, searchModel);\n\t\tstore.add(searchResult);\n\t\tconst fileMatch = aFileMatch('far/boo', searchResult);\n\t\tconst lineMatch = new Match(fileMatch, ['foo bar'], new OneLineRange(0, 0, 3), new OneLineRange(1, 0, 3), false);\n\n\t\tassert(lineMatch.parent() === fileMatch);\n\t\tassert(fileMatch.parent() === searchResult.folderMatches()[0]);\n\t});\n\n\ttest('Adding a raw match will add a file match with line matches', function () {\n\t\tconst testObject = aSearchResult();\n\t\tconst target = [aRawMatch('/1',\n\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11)),\n\t\t\tnew TextSearchMatch('preview 2', lineOneRange))];\n\n\t\taddToSearchResult(testObject, target);\n\n\t\tassert.strictEqual(3, testObject.count());\n\n\t\tconst actual = testObject.matches();\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.strictEqual(URI.file(`${getRootName()}/1`).toString(), actual[0].resource.toString());\n\n\t\tconst actuaMatches = actual[0].matches();\n\t\tassert.strictEqual(3, actuaMatches.length);\n\n\t\tassert.strictEqual('preview 1', actuaMatches[0].text());\n\t\tassert.ok(new Range(2, 2, 2, 5).equalsRange(actuaMatches[0].range()));\n\n\t\tassert.strictEqual('preview 1', actuaMatches[1].text());\n\t\tassert.ok(new Range(2, 5, 2, 12).equalsRange(actuaMatches[1].range()));\n\n\t\tassert.strictEqual('preview 2', actuaMatches[2].text());\n\t\tassert.ok(new Range(2, 1, 2, 2).equalsRange(actuaMatches[2].range()));\n\t});\n\n\ttest('Adding multiple raw matches', function () {\n\t\tconst testObject = aSearchResult();\n\t\tconst target = [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11))),\n\t\t\taRawMatch('/2',\n\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange))];\n\n\t\taddToSearchResult(testObject, target);\n\n\t\tassert.strictEqual(3, testObject.count());\n\n\t\tconst actual = testObject.matches();\n\t\tassert.strictEqual(2, actual.length);\n\t\tassert.strictEqual(URI.file(`${getRootName()}/1`).toString(), actual[0].resource.toString());\n\n\t\tlet actuaMatches = actual[0].matches();\n\t\tassert.strictEqual(2, actuaMatches.length);\n\t\tassert.strictEqual('preview 1', actuaMatches[0].text());\n\t\tassert.ok(new Range(2, 2, 2, 5).equalsRange(actuaMatches[0].range()));\n\t\tassert.strictEqual('preview 1', actuaMatches[1].text());\n\t\tassert.ok(new Range(2, 5, 2, 12).equalsRange(actuaMatches[1].range()));\n\n\t\tactuaMatches = actual[1].matches();\n\t\tassert.strictEqual(1, actuaMatches.length);\n\t\tassert.strictEqual('preview 2', actuaMatches[0].text());\n\t\tassert.ok(new Range(2, 1, 2, 2).equalsRange(actuaMatches[0].range()));\n\t});\n\n\ttest('Test that notebook matches get added correctly', function () {\n\t\tconst testObject = aSearchResult();\n\t\tconst cell1 = { cellKind: CellKind.Code } as ICellViewModel;\n\t\tconst cell2 = { cellKind: CellKind.Code } as ICellViewModel;\n\n\t\tsinon.stub(CellMatch.prototype, 'addContext');\n\n\t\tconst addFileMatch = sinon.spy(FolderMatch.prototype, \"addFileMatch\");\n\t\tconst fileMatch1 = aRawFileMatchWithCells('/1',\n\t\t\t{\n\t\t\t\tcell: cell1,\n\t\t\t\tindex: 0,\n\t\t\t\tcontentResults: [\n\t\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\t],\n\t\t\t\twebviewResults: [\n\t\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11)),\n\t\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange)\n\t\t\t\t]\n\t\t\t},);\n\t\tconst fileMatch2 = aRawFileMatchWithCells('/2',\n\t\t\t{\n\t\t\t\tcell: cell2,\n\t\t\t\tindex: 0,\n\t\t\t\tcontentResults: [\n\t\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\t],\n\t\t\t\twebviewResults: [\n\t\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11)),\n\t\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange)\n\t\t\t\t]\n\t\t\t});\n\t\tconst target = [fileMatch1, fileMatch2];\n\n\t\taddToSearchResult(testObject, target);\n\t\tassert.strictEqual(6, testObject.count());\n\t\tassert.deepStrictEqual(fileMatch1.cellResults[0].contentResults, (addFileMatch.getCall(0).args[0][0] as INotebookFileMatchWithModel).cellResults[0].contentResults);\n\t\tassert.deepStrictEqual(fileMatch1.cellResults[0].webviewResults, (addFileMatch.getCall(0).args[0][0] as INotebookFileMatchWithModel).cellResults[0].webviewResults);\n\t\tassert.deepStrictEqual(fileMatch2.cellResults[0].contentResults, (addFileMatch.getCall(0).args[0][1] as INotebookFileMatchWithModel).cellResults[0].contentResults);\n\t\tassert.deepStrictEqual(fileMatch2.cellResults[0].webviewResults, (addFileMatch.getCall(0).args[0][1] as INotebookFileMatchWithModel).cellResults[0].webviewResults);\n\t});\n\n\ttest('Dispose disposes matches', function () {\n\t\tconst target1 = sinon.spy();\n\t\tconst target2 = sinon.spy();\n\n\t\tconst testObject = aSearchResult();\n\t\taddToSearchResult(testObject, [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange)),\n\t\t\taRawMatch('/2',\n\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange))]);\n\n\t\tstore.add(testObject.matches()[0].onDispose(target1));\n\t\tstore.add(testObject.matches()[1].onDispose(target2));\n\n\t\ttestObject.dispose();\n\n\t\tassert.ok(testObject.isEmpty());\n\t\tassert.ok(target1.calledOnce);\n\t\tassert.ok(target2.calledOnce);\n\t});\n\n\ttest('remove triggers change event', function () {\n\t\tconst target = sinon.spy();\n\t\tconst testObject = aSearchResult();\n\t\taddToSearchResult(testObject, [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange))]);\n\t\tconst objectToRemove = testObject.matches()[0];\n\t\tstore.add(testObject.onChange(target));\n\n\t\ttestObject.remove(objectToRemove);\n\n\t\tassert.ok(target.calledOnce);\n\t\tassert.deepStrictEqual([{ elements: [objectToRemove], removed: true }], target.args[0]);\n\t});\n\n\ttest('remove array triggers change event', function () {\n\t\tconst target = sinon.spy();\n\t\tconst testObject = aSearchResult();\n\t\taddToSearchResult(testObject, [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange)),\n\t\t\taRawMatch('/2',\n\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange))]);\n\t\tconst arrayToRemove = testObject.matches();\n\t\tstore.add(testObject.onChange(target));\n\n\t\ttestObject.remove(arrayToRemove);\n\n\t\tassert.ok(target.calledOnce);\n\t\tassert.deepStrictEqual([{ elements: arrayToRemove, removed: true }], target.args[0]);\n\t});\n\n\ttest('Removing all line matches and adding back will add file back to result', function () {\n\t\tconst testObject = aSearchResult();\n\t\taddToSearchResult(testObject, [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange))]);\n\t\tconst target = testObject.matches()[0];\n\t\tconst matchToRemove = target.matches()[0];\n\t\ttarget.remove(matchToRemove);\n\n\t\tassert.ok(testObject.isEmpty());\n\t\ttarget.add(matchToRemove, true);\n\n\t\tassert.strictEqual(1, testObject.fileCount());\n\t\tassert.strictEqual(target, testObject.matches()[0]);\n\t});\n\n\ttest('replace should remove the file match', function () {\n\t\tconst voidPromise = Promise.resolve(null);\n\t\tinstantiationService.stub(IReplaceService, 'replace', voidPromise);\n\t\tconst testObject = aSearchResult();\n\t\taddToSearchResult(testObject, [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange))]);\n\n\t\ttestObject.replace(testObject.matches()[0]);\n\n\t\treturn voidPromise.then(() => assert.ok(testObject.isEmpty()));\n\t});\n\n\ttest('replace should trigger the change event', function () {\n\t\tconst target = sinon.spy();\n\t\tconst voidPromise = Promise.resolve(null);\n\t\tinstantiationService.stub(IReplaceService, 'replace', voidPromise);\n\t\tconst testObject = aSearchResult();\n\t\taddToSearchResult(testObject, [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange))]);\n\n\t\tstore.add(testObject.onChange(target));\n\t\tconst objectToRemove = testObject.matches()[0];\n\n\t\ttestObject.replace(objectToRemove);\n\n\t\treturn voidPromise.then(() => {\n\t\t\tassert.ok(target.calledOnce);\n\t\t\tassert.deepStrictEqual([{ elements: [objectToRemove], removed: true }], target.args[0]);\n\t\t});\n\t});\n\n\ttest('replaceAll should remove all file matches', function () {\n\t\tconst voidPromise = Promise.resolve(null);\n\t\tinstantiationService.stubPromise(IReplaceService, 'replace', voidPromise);\n\t\tconst testObject = aSearchResult();\n\t\taddToSearchResult(testObject, [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange)),\n\t\t\taRawMatch('/2',\n\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange))]);\n\n\t\ttestObject.replaceAll(null!);\n\n\t\treturn voidPromise.then(() => assert.ok(testObject.isEmpty()));\n\t});\n\n\ttest('batchRemove should trigger the onChange event correctly', function () {\n\t\tconst target = sinon.spy();\n\t\tconst testObject = getPopulatedSearchResult();\n\n\t\tconst folderMatch = testObject.folderMatches()[0];\n\t\tconst fileMatch = testObject.folderMatches()[1].allDownstreamFileMatches()[0];\n\t\tconst match = testObject.folderMatches()[1].allDownstreamFileMatches()[1].matches()[0];\n\n\t\tconst arrayToRemove = [folderMatch, fileMatch, match];\n\t\tconst expectedArrayResult = folderMatch.allDownstreamFileMatches().concat([fileMatch, match.parent()]);\n\n\t\tstore.add(testObject.onChange(target));\n\t\ttestObject.batchRemove(arrayToRemove);\n\n\t\tassert.ok(target.calledOnce);\n\t\tassert.deepStrictEqual([{ elements: expectedArrayResult, removed: true, added: false }], target.args[0]);\n\t});\n\n\ttest('batchReplace should trigger the onChange event correctly', async function () {\n\t\tconst replaceSpy = sinon.spy();\n\t\tinstantiationService.stub(IReplaceService, 'replace', (arg: any) => {\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\treplaceSpy(arg[0]);\n\t\t\t} else {\n\t\t\t\treplaceSpy(arg);\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t});\n\n\t\tconst target = sinon.spy();\n\t\tconst testObject = getPopulatedSearchResult();\n\n\t\tconst folderMatch = testObject.folderMatches()[0];\n\t\tconst fileMatch = testObject.folderMatches()[1].allDownstreamFileMatches()[0];\n\t\tconst match = testObject.folderMatches()[1].allDownstreamFileMatches()[1].matches()[0];\n\n\t\tconst firstExpectedMatch = folderMatch.allDownstreamFileMatches()[0];\n\n\t\tconst arrayToRemove = [folderMatch, fileMatch, match];\n\n\t\tstore.add(testObject.onChange(target));\n\t\tawait testObject.batchReplace(arrayToRemove);\n\n\t\tassert.ok(target.calledOnce);\n\t\tsinon.assert.calledThrice(replaceSpy);\n\t\tsinon.assert.calledWith(replaceSpy.firstCall, firstExpectedMatch);\n\t\tsinon.assert.calledWith(replaceSpy.secondCall, fileMatch);\n\t\tsinon.assert.calledWith(replaceSpy.thirdCall, match);\n\t});\n\n\ttest('Creating a model with nested folders should create the correct structure', function () {\n\t\tconst testObject = getPopulatedSearchResultForTreeTesting();\n\n\t\tconst root0 = testObject.folderMatches()[0];\n\t\tconst root1 = testObject.folderMatches()[1];\n\t\tconst root2 = testObject.folderMatches()[2];\n\t\tconst root3 = testObject.folderMatches()[3];\n\n\t\tconst root0DownstreamFiles = root0.allDownstreamFileMatches();\n\t\tassert.deepStrictEqual(root0DownstreamFiles, [...root0.fileMatchesIterator(), ...getFolderMatchAtIndex(root0, 0).fileMatchesIterator()]);\n\t\tassert.deepStrictEqual(getFolderMatchAtIndex(root0, 0).allDownstreamFileMatches(), Array.from(getFolderMatchAtIndex(root0, 0).fileMatchesIterator()));\n\t\tassert.deepStrictEqual(getFileMatchAtIndex(getFolderMatchAtIndex(root0, 0), 0).parent(), getFolderMatchAtIndex(root0, 0));\n\t\tassert.deepStrictEqual(getFolderMatchAtIndex(root0, 0).parent(), root0);\n\t\tassert.deepStrictEqual(getFolderMatchAtIndex(root0, 0).closestRoot, root0);\n\t\troot0DownstreamFiles.forEach((e) => {\n\t\t\tassert.deepStrictEqual(e.closestRoot, root0);\n\t\t});\n\n\t\tconst root1DownstreamFiles = root1.allDownstreamFileMatches();\n\t\tassert.deepStrictEqual(root1.allDownstreamFileMatches(), [...root1.fileMatchesIterator(), ...getFolderMatchAtIndex(root1, 0).fileMatchesIterator()]); // excludes the matches from nested root\n\t\tassert.deepStrictEqual(getFileMatchAtIndex(getFolderMatchAtIndex(root1, 0), 0).parent(), getFolderMatchAtIndex(root1, 0));\n\t\troot1DownstreamFiles.forEach((e) => {\n\t\t\tassert.deepStrictEqual(e.closestRoot, root1);\n\t\t});\n\n\t\tconst root2DownstreamFiles = root2.allDownstreamFileMatches();\n\t\tassert.deepStrictEqual(root2DownstreamFiles, Array.from(root2.fileMatchesIterator()));\n\t\tassert.deepStrictEqual(getFileMatchAtIndex(root2, 0).parent(), root2);\n\t\tassert.deepStrictEqual(getFileMatchAtIndex(root2, 0).closestRoot, root2);\n\n\n\t\tconst root3DownstreamFiles = root3.allDownstreamFileMatches();\n\t\tconst root3Level3Folder = getFolderMatchAtIndex(getFolderMatchAtIndex(root3, 0), 0);\n\t\tassert.deepStrictEqual(root3DownstreamFiles, [...root3.fileMatchesIterator(), ...getFolderMatchAtIndex(root3Level3Folder, 0).fileMatchesIterator(), ...getFolderMatchAtIndex(root3Level3Folder, 1).fileMatchesIterator()].flat());\n\t\tassert.deepStrictEqual(root3Level3Folder.allDownstreamFileMatches(), getFolderMatchAtIndex(root3, 0).allDownstreamFileMatches());\n\n\t\tassert.deepStrictEqual(getFileMatchAtIndex(getFolderMatchAtIndex(root3Level3Folder, 1), 0).parent(), getFolderMatchAtIndex(root3Level3Folder, 1));\n\t\tassert.deepStrictEqual(getFolderMatchAtIndex(root3Level3Folder, 1).parent(), root3Level3Folder);\n\t\tassert.deepStrictEqual(root3Level3Folder.parent(), getFolderMatchAtIndex(root3, 0));\n\n\t\troot3DownstreamFiles.forEach((e) => {\n\t\t\tassert.deepStrictEqual(e.closestRoot, root3);\n\t\t});\n\t});\n\n\ttest('Removing an intermediate folder should call OnChange() on all downstream file matches', function () {\n\t\tconst target = sinon.spy();\n\t\tconst testObject = getPopulatedSearchResultForTreeTesting();\n\n\t\tconst folderMatch = getFolderMatchAtIndex(getFolderMatchAtIndex(getFolderMatchAtIndex(testObject.folderMatches()[3], 0), 0), 0);\n\n\t\tconst expectedArrayResult = folderMatch.allDownstreamFileMatches();\n\n\t\tstore.add(testObject.onChange(target));\n\t\ttestObject.remove(folderMatch);\n\t\tassert.ok(target.calledOnce);\n\t\tassert.deepStrictEqual([{ elements: expectedArrayResult, removed: true, added: false, clearingAll: false }], target.args[0]);\n\t});\n\n\ttest('Replacing an intermediate folder should remove all downstream folders and file matches', async function () {\n\t\tconst target = sinon.spy();\n\t\tconst testObject = getPopulatedSearchResultForTreeTesting();\n\n\t\tconst folderMatch = getFolderMatchAtIndex(testObject.folderMatches()[3], 0);\n\n\t\tconst expectedArrayResult = folderMatch.allDownstreamFileMatches();\n\n\t\tstore.add(testObject.onChange(target));\n\t\tawait testObject.batchReplace([folderMatch]);\n\t\tassert.deepStrictEqual([{ elements: expectedArrayResult, removed: true, added: false }], target.args[0]);\n\n\t});\n\n\tfunction aFileMatch(path: string, searchResult: SearchResult | undefined, ...lineMatches: ITextSearchMatch[]): FileMatch {\n\t\tif (!searchResult) {\n\t\t\tsearchResult = aSearchResult();\n\t\t}\n\t\tconst rawMatch: IFileMatch = {\n\t\t\tresource: URI.file('/' + path),\n\t\t\tresults: lineMatches\n\t\t};\n\t\tconst root = searchResult?.folderMatches()[0];\n\t\tconst fileMatch = instantiationService.createInstance(FileMatch, {\n\t\t\tpattern: ''\n\t\t}, undefined, undefined, root, rawMatch, null, '');\n\t\tfileMatch.createMatches(false);\n\n\t\tstore.add(fileMatch);\n\t\treturn fileMatch;\n\t}\n\n\tfunction aSearchResult(): SearchResult {\n\t\tconst searchModel = instantiationService.createInstance(SearchModel);\n\t\tstore.add(searchModel);\n\t\tsearchModel.searchResult.query = {\n\t\t\ttype: QueryType.Text, folderQueries: [{ folder: createFileUriFromPathFromRoot() }], contentPattern: {\n\t\t\t\tpattern: ''\n\t\t\t}\n\t\t};\n\t\treturn searchModel.searchResult;\n\t}\n\n\tfunction aRawMatch(resource: string, ...results: ITextSearchMatch[]): IFileMatch {\n\t\treturn { resource: createFileUriFromPathFromRoot(resource), results };\n\t}\n\n\tfunction aRawFileMatchWithCells(resource: string, ...cellMatches: INotebookCellMatchWithModel[]): INotebookFileMatchWithModel {\n\t\treturn {\n\t\t\tresource: createFileUriFromPathFromRoot(resource),\n\t\t\tcellResults: cellMatches\n\t\t};\n\t}\n\n\tfunction stubModelService(instantiationService: TestInstantiationService): IModelService {\n\t\tinstantiationService.stub(IThemeService, new TestThemeService());\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('search', { searchOnType: true });\n\t\tinstantiationService.stub(IConfigurationService, config);\n\t\tconst modelService = instantiationService.createInstance(ModelService);\n\t\tstore.add(modelService);\n\t\treturn modelService;\n\t}\n\n\tfunction stubNotebookEditorService(instantiationService: TestInstantiationService): INotebookEditorService {\n\t\tinstantiationService.stub(IEditorGroupsService, new TestEditorGroupsService());\n\t\tinstantiationService.stub(IContextKeyService, new MockContextKeyService());\n\t\tinstantiationService.stub(IEditorService, store.add(new TestEditorService()));\n\t\tconst notebookEditorWidgetService = instantiationService.createInstance(NotebookEditorWidgetService);\n\t\tstore.add(notebookEditorWidgetService);\n\t\treturn notebookEditorWidgetService;\n\t}\n\n\tfunction getPopulatedSearchResult() {\n\t\tconst testObject = aSearchResult();\n\n\t\ttestObject.query = {\n\t\t\ttype: QueryType.Text,\n\t\t\tcontentPattern: { pattern: 'foo' },\n\t\t\tfolderQueries: [{\n\t\t\t\tfolder: createFileUriFromPathFromRoot('/voo')\n\t\t\t},\n\t\t\t{ folder: createFileUriFromPathFromRoot('/with') },\n\t\t\t]\n\t\t};\n\n\t\taddToSearchResult(testObject, [\n\t\t\taRawMatch('/voo/foo.a',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange), new TextSearchMatch('preview 2', lineOneRange)),\n\t\t\taRawMatch('/with/path/bar.b',\n\t\t\t\tnew TextSearchMatch('preview 3', lineOneRange)),\n\t\t\taRawMatch('/with/path.c',\n\t\t\t\tnew TextSearchMatch('preview 4', lineOneRange), new TextSearchMatch('preview 5', lineOneRange)),\n\t\t]);\n\t\treturn testObject;\n\t}\n\n\tfunction getPopulatedSearchResultForTreeTesting() {\n\t\tconst testObject = aSearchResult();\n\n\t\ttestObject.query = {\n\t\t\ttype: QueryType.Text,\n\t\t\tcontentPattern: { pattern: 'foo' },\n\t\t\tfolderQueries: [{\n\t\t\t\tfolder: createFileUriFromPathFromRoot('/voo')\n\t\t\t},\n\t\t\t{\n\t\t\t\tfolder: createFileUriFromPathFromRoot('/with')\n\t\t\t},\n\t\t\t{\n\t\t\t\tfolder: createFileUriFromPathFromRoot('/with/test')\n\t\t\t},\n\t\t\t{\n\t\t\t\tfolder: createFileUriFromPathFromRoot('/eep')\n\t\t\t},\n\t\t\t]\n\t\t};\n\t\t/***\n\t\t * file structure looks like:\n\t\t * *voo/\n\t\t * |- foo.a\n\t\t * |- beep\n\t\t *    |- foo.c\n\t\t * \t  |- boop.c\n\t\t * *with/\n\t\t * |- path\n\t\t *    |- bar.b\n\t\t * |- path.c\n\t\t * |- *test/\n\t\t *    |- woo.c\n\t\t * eep/\n\t\t *    |- bar\n\t\t *       |- goo\n\t\t *           |- foo\n\t\t *              |- here.txt\n\t\t * \t\t\t |- ooo\n\t\t *              |- there.txt\n\t\t *    |- eyy.y\n\t\t */\n\n\t\taddToSearchResult(testObject, [\n\t\t\taRawMatch('/voo/foo.a',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange), new TextSearchMatch('preview 2', lineOneRange)),\n\t\t\taRawMatch('/voo/beep/foo.c',\n\t\t\t\tnew TextSearchMatch('preview 1', lineOneRange), new TextSearchMatch('preview 2', lineOneRange)),\n\t\t\taRawMatch('/voo/beep/boop.c',\n\t\t\t\tnew TextSearchMatch('preview 3', lineOneRange)),\n\t\t\taRawMatch('/with/path.c',\n\t\t\t\tnew TextSearchMatch('preview 4', lineOneRange), new TextSearchMatch('preview 5', lineOneRange)),\n\t\t\taRawMatch('/with/path/bar.b',\n\t\t\t\tnew TextSearchMatch('preview 3', lineOneRange)),\n\t\t\taRawMatch('/with/test/woo.c',\n\t\t\t\tnew TextSearchMatch('preview 3', lineOneRange)),\n\t\t\taRawMatch('/eep/bar/goo/foo/here.txt',\n\t\t\t\tnew TextSearchMatch('preview 6', lineOneRange), new TextSearchMatch('preview 7', lineOneRange)),\n\t\t\taRawMatch('/eep/bar/goo/ooo/there.txt',\n\t\t\t\tnew TextSearchMatch('preview 6', lineOneRange), new TextSearchMatch('preview 7', lineOneRange)),\n\t\t\taRawMatch('/eep/eyy.y',\n\t\t\t\tnew TextSearchMatch('preview 6', lineOneRange), new TextSearchMatch('preview 7', lineOneRange))\n\t\t]);\n\t\treturn testObject;\n\t}\n\n\tfunction getFolderMatchAtIndex(parent: FolderMatch, index: number) {\n\t\treturn Array.from(parent.folderMatchesIterator())[index];\n\t}\n\n\tfunction getFileMatchAtIndex(parent: FolderMatch, index: number) {\n\t\treturn Array.from(parent.fileMatchesIterator())[index];\n\t}\n});\n"],
  "mappings": "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",
  "names": ["instantiationService"]
}
