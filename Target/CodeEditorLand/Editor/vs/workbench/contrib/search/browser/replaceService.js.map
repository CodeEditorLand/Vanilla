{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/replaceService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from \"../../../../base/common/async.js\";\nimport {\n\tDisposable,\n\ttype IReference,\n} from \"../../../../base/common/lifecycle.js\";\nimport * as network from \"../../../../base/common/network.js\";\nimport { dirname } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport {\n\tIBulkEditService,\n\tResourceTextEdit,\n} from \"../../../../editor/browser/services/bulkEditService.js\";\nimport {\n\tEditOperation,\n\ttype ISingleEditOperation,\n} from \"../../../../editor/common/core/editOperation.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport { ScrollType } from \"../../../../editor/common/editorCommon.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { createTextBufferFactoryFromSnapshot } from \"../../../../editor/common/model/textModel.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport {\n\ttype ITextModelContentProvider,\n\tITextModelService,\n} from \"../../../../editor/common/services/resolverService.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport type {\n\tIProgress,\n\tIProgressStep,\n} from \"../../../../platform/progress/common/progress.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { SaveSourceRegistry } from \"../../../common/editor.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { ITextFileService } from \"../../../services/textfile/common/textfiles.js\";\nimport {\n\tCellUri,\n\ttype IResolvedNotebookEditorModel,\n} from \"../../notebook/common/notebookCommon.js\";\nimport { INotebookEditorModelResolverService } from \"../../notebook/common/notebookEditorModelResolverService.js\";\nimport { IReplaceService } from \"./replace.js\";\nimport {\n\tFileMatch,\n\ttype FileMatchOrMatch,\n\tISearchViewModelWorkbenchService,\n\tMatch,\n\tMatchInNotebook,\n} from \"./searchModel.js\";\n\nconst REPLACE_PREVIEW = \"replacePreview\";\n\nconst toReplaceResource = (fileResource: URI): URI => {\n\treturn fileResource.with({\n\t\tscheme: network.Schemas.internal,\n\t\tfragment: REPLACE_PREVIEW,\n\t\tquery: JSON.stringify({ scheme: fileResource.scheme }),\n\t});\n};\n\nconst toFileResource = (replaceResource: URI): URI => {\n\treturn replaceResource.with({\n\t\tscheme: JSON.parse(replaceResource.query)[\"scheme\"],\n\t\tfragment: \"\",\n\t\tquery: \"\",\n\t});\n};\n\nexport class ReplacePreviewContentProvider\n\timplements ITextModelContentProvider, IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.replacePreviewContentProvider\";\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@ITextModelService\n\t\tprivate readonly textModelResolverService: ITextModelService,\n\t) {\n\t\tthis.textModelResolverService.registerTextModelContentProvider(\n\t\t\tnetwork.Schemas.internal,\n\t\t\tthis,\n\t\t);\n\t}\n\n\tprovideTextContent(uri: URI): Promise<ITextModel> | null {\n\t\tif (uri.fragment === REPLACE_PREVIEW) {\n\t\t\treturn this.instantiationService\n\t\t\t\t.createInstance(ReplacePreviewModel)\n\t\t\t\t.resolve(uri);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass ReplacePreviewModel extends Disposable {\n\tconstructor(\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@ITextModelService\n\t\tprivate readonly textModelResolverService: ITextModelService,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@ISearchViewModelWorkbenchService\n\t\tprivate readonly searchWorkbenchService: ISearchViewModelWorkbenchService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync resolve(replacePreviewUri: URI): Promise<ITextModel> {\n\t\tconst fileResource = toFileResource(replacePreviewUri);\n\t\tconst fileMatch = <FileMatch>(\n\t\t\tthis.searchWorkbenchService.searchModel.searchResult\n\t\t\t\t.matches()\n\t\t\t\t.filter(\n\t\t\t\t\t(match) =>\n\t\t\t\t\t\tmatch.resource.toString() === fileResource.toString(),\n\t\t\t\t)[0]\n\t\t);\n\t\tconst ref = this._register(\n\t\t\tawait this.textModelResolverService.createModelReference(\n\t\t\t\tfileResource,\n\t\t\t),\n\t\t);\n\t\tconst sourceModel = ref.object.textEditorModel;\n\t\tconst sourceModelLanguageId = sourceModel.getLanguageId();\n\t\tconst replacePreviewModel = this.modelService.createModel(\n\t\t\tcreateTextBufferFactoryFromSnapshot(sourceModel.createSnapshot()),\n\t\t\tthis.languageService.createById(sourceModelLanguageId),\n\t\t\treplacePreviewUri,\n\t\t);\n\t\tthis._register(\n\t\t\tfileMatch.onChange(({ forceUpdateModel }) =>\n\t\t\t\tthis.update(\n\t\t\t\t\tsourceModel,\n\t\t\t\t\treplacePreviewModel,\n\t\t\t\t\tfileMatch,\n\t\t\t\t\tforceUpdateModel,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.searchWorkbenchService.searchModel.onReplaceTermChanged(() =>\n\t\t\t\tthis.update(sourceModel, replacePreviewModel, fileMatch),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tfileMatch.onDispose(() => replacePreviewModel.dispose()),\n\t\t); // TODO@Sandeep we should not dispose a model directly but rather the reference (depends on https://github.com/microsoft/vscode/issues/17073)\n\t\tthis._register(replacePreviewModel.onWillDispose(() => this.dispose()));\n\t\tthis._register(sourceModel.onWillDispose(() => this.dispose()));\n\t\treturn replacePreviewModel;\n\t}\n\n\tprivate update(\n\t\tsourceModel: ITextModel,\n\t\treplacePreviewModel: ITextModel,\n\t\tfileMatch: FileMatch,\n\t\toverride = false,\n\t): void {\n\t\tif (!sourceModel.isDisposed() && !replacePreviewModel.isDisposed()) {\n\t\t\tthis.replaceService.updateReplacePreview(fileMatch, override);\n\t\t}\n\t}\n}\n\nexport class ReplaceService implements IReplaceService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly REPLACE_SAVE_SOURCE =\n\t\tSaveSourceRegistry.registerSource(\n\t\t\t\"searchReplace.source\",\n\t\t\tnls.localize(\"searchReplace.source\", \"Search and Replace\"),\n\t\t);\n\n\tconstructor(\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ITextModelService\n\t\tprivate readonly textModelResolverService: ITextModelService,\n\t\t@IBulkEditService private readonly bulkEditorService: IBulkEditService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@INotebookEditorModelResolverService\n\t\tprivate readonly notebookEditorModelResolverService: INotebookEditorModelResolverService,\n\t) {}\n\n\treplace(match: Match): Promise<any>;\n\treplace(\n\t\tfiles: FileMatch[],\n\t\tprogress?: IProgress<IProgressStep>,\n\t): Promise<any>;\n\treplace(\n\t\tmatch: FileMatchOrMatch,\n\t\tprogress?: IProgress<IProgressStep>,\n\t\tresource?: URI,\n\t): Promise<any>;\n\tasync replace(\n\t\targ: any,\n\t\tprogress: IProgress<IProgressStep> | undefined = undefined,\n\t\tresource: URI | null = null,\n\t): Promise<any> {\n\t\tconst edits = this.createEdits(arg, resource);\n\t\tawait this.bulkEditorService.apply(edits, { progress });\n\n\t\tconst rawTextPromises = edits.map(async (e) => {\n\t\t\tif (e.resource.scheme === network.Schemas.vscodeNotebookCell) {\n\t\t\t\tconst notebookResource = CellUri.parse(e.resource)?.notebook;\n\t\t\t\tif (notebookResource) {\n\t\t\t\t\tlet ref:\n\t\t\t\t\t\t| IReference<IResolvedNotebookEditorModel>\n\t\t\t\t\t\t| undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tref =\n\t\t\t\t\t\t\tawait this.notebookEditorModelResolverService.resolve(\n\t\t\t\t\t\t\t\tnotebookResource,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tawait ref.object.save({\n\t\t\t\t\t\t\tsource: ReplaceService.REPLACE_SAVE_SOURCE,\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tref?.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\treturn this.textFileService.files\n\t\t\t\t\t.get(e.resource)\n\t\t\t\t\t?.save({ source: ReplaceService.REPLACE_SAVE_SOURCE });\n\t\t\t}\n\t\t});\n\n\t\treturn Promises.settled(rawTextPromises);\n\t}\n\n\tasync openReplacePreview(\n\t\telement: FileMatchOrMatch,\n\t\tpreserveFocus?: boolean,\n\t\tsideBySide?: boolean,\n\t\tpinned?: boolean,\n\t): Promise<any> {\n\t\tconst fileMatch = element instanceof Match ? element.parent() : element;\n\n\t\tconst editor = await this.editorService.openEditor({\n\t\t\toriginal: { resource: fileMatch.resource },\n\t\t\tmodified: { resource: toReplaceResource(fileMatch.resource) },\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"fileReplaceChanges\",\n\t\t\t\t\"{0} \u2194 {1} (Replace Preview)\",\n\t\t\t\tfileMatch.name(),\n\t\t\t\tfileMatch.name(),\n\t\t\t),\n\t\t\tdescription: this.labelService.getUriLabel(\n\t\t\t\tdirname(fileMatch.resource),\n\t\t\t\t{ relative: true },\n\t\t\t),\n\t\t\toptions: {\n\t\t\t\tpreserveFocus,\n\t\t\t\tpinned,\n\t\t\t\trevealIfVisible: true,\n\t\t\t},\n\t\t});\n\t\tconst input = editor?.input;\n\t\tconst disposable = fileMatch.onDispose(() => {\n\t\t\tinput?.dispose();\n\t\t\tdisposable.dispose();\n\t\t});\n\t\tawait this.updateReplacePreview(fileMatch);\n\t\tif (editor) {\n\t\t\tconst editorControl = editor.getControl();\n\t\t\tif (element instanceof Match && editorControl) {\n\t\t\t\teditorControl.revealLineInCenter(\n\t\t\t\t\telement.range().startLineNumber,\n\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync updateReplacePreview(\n\t\tfileMatch: FileMatch,\n\t\toverride = false,\n\t): Promise<void> {\n\t\tconst replacePreviewUri = toReplaceResource(fileMatch.resource);\n\t\tconst [sourceModelRef, replaceModelRef] = await Promise.all([\n\t\t\tthis.textModelResolverService.createModelReference(\n\t\t\t\tfileMatch.resource,\n\t\t\t),\n\t\t\tthis.textModelResolverService.createModelReference(\n\t\t\t\treplacePreviewUri,\n\t\t\t),\n\t\t]);\n\t\tconst sourceModel = sourceModelRef.object.textEditorModel;\n\t\tconst replaceModel = replaceModelRef.object.textEditorModel;\n\t\t// If model is disposed do not update\n\t\ttry {\n\t\t\tif (sourceModel && replaceModel) {\n\t\t\t\tif (override) {\n\t\t\t\t\treplaceModel.setValue(sourceModel.getValue());\n\t\t\t\t} else {\n\t\t\t\t\treplaceModel.undo();\n\t\t\t\t}\n\t\t\t\tthis.applyEditsToPreview(fileMatch, replaceModel);\n\t\t\t}\n\t\t} finally {\n\t\t\tsourceModelRef.dispose();\n\t\t\treplaceModelRef.dispose();\n\t\t}\n\t}\n\n\tprivate applyEditsToPreview(\n\t\tfileMatch: FileMatch,\n\t\treplaceModel: ITextModel,\n\t): void {\n\t\tconst resourceEdits = this.createEdits(fileMatch, replaceModel.uri);\n\t\tconst modelEdits: ISingleEditOperation[] = [];\n\t\tfor (const resourceEdit of resourceEdits) {\n\t\t\tmodelEdits.push(\n\t\t\t\tEditOperation.replaceMove(\n\t\t\t\t\tRange.lift(resourceEdit.textEdit.range),\n\t\t\t\t\tresourceEdit.textEdit.text,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treplaceModel.pushEditOperations(\n\t\t\t[],\n\t\t\tmodelEdits.sort((a, b) =>\n\t\t\t\tRange.compareRangesUsingStarts(a.range, b.range),\n\t\t\t),\n\t\t\t() => [],\n\t\t);\n\t}\n\n\tprivate createEdits(\n\t\targ: FileMatchOrMatch | FileMatch[],\n\t\tresource: URI | null = null,\n\t): ResourceTextEdit[] {\n\t\tconst edits: ResourceTextEdit[] = [];\n\n\t\tif (arg instanceof Match) {\n\t\t\tif (arg instanceof MatchInNotebook) {\n\t\t\t\tif (!arg.isReadonly()) {\n\t\t\t\t\t// only apply edits if it's not a webview match, since webview matches are read-only\n\t\t\t\t\tconst match = <MatchInNotebook>arg;\n\t\t\t\t\tedits.push(\n\t\t\t\t\t\tthis.createEdit(\n\t\t\t\t\t\t\tmatch,\n\t\t\t\t\t\t\tmatch.replaceString,\n\t\t\t\t\t\t\tmatch.cell?.uri,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst match = <Match>arg;\n\t\t\t\tedits.push(\n\t\t\t\t\tthis.createEdit(match, match.replaceString, resource),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (arg instanceof FileMatch) {\n\t\t\targ = [arg];\n\t\t}\n\n\t\tif (arg instanceof Array) {\n\t\t\targ.forEach((element) => {\n\t\t\t\tconst fileMatch = <FileMatch>element;\n\t\t\t\tif (fileMatch.count() > 0) {\n\t\t\t\t\tedits.push(\n\t\t\t\t\t\t...fileMatch\n\t\t\t\t\t\t\t.matches()\n\t\t\t\t\t\t\t.flatMap((match) =>\n\t\t\t\t\t\t\t\tthis.createEdits(match, resource),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn edits;\n\t}\n\n\tprivate createEdit(\n\t\tmatch: Match,\n\t\ttext: string,\n\t\tresource: URI | null = null,\n\t): ResourceTextEdit {\n\t\tconst fileMatch: FileMatch = match.parent();\n\t\treturn new ResourceTextEdit(\n\t\t\tresource ?? fileMatch.resource,\n\t\t\t{ range: match.range(), text },\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,OAEM;AACP,YAAY,aAAa;AACzB,SAAS,eAAe;AAExB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,OAEM;AACP,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AAEjC,SAAS,2CAA2C;AACpD,SAAS,qBAAqB;AAC9B;AAAA,EAEC;AAAA,OACM;AACP,YAAY,SAAS;AACrB,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAM9B,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AACjC;AAAA,EACC;AAAA,OAEM;AACP,SAAS,2CAA2C;AACpD,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,MAAM,kBAAkB;AAExB,MAAM,oBAAoB,wBAAC,iBAA2B;AACrD,SAAO,aAAa,KAAK;AAAA,IACxB,QAAQ,QAAQ,QAAQ;AAAA,IACxB,UAAU;AAAA,IACV,OAAO,KAAK,UAAU,EAAE,QAAQ,aAAa,OAAO,CAAC;AAAA,EACtD,CAAC;AACF,GAN0B;AAQ1B,MAAM,iBAAiB,wBAAC,oBAA8B;AACrD,SAAO,gBAAgB,KAAK;AAAA,IAC3B,QAAQ,KAAK,MAAM,gBAAgB,KAAK,EAAE,QAAQ;AAAA,IAClD,UAAU;AAAA,IACV,OAAO;AAAA,EACR,CAAC;AACF,GANuB;AAQhB,IAAM,gCAAN,MAEP;AAAA,EAGC,YAEkB,sBAEA,0BAChB;AAHgB;AAEA;AAEjB,SAAK,yBAAyB;AAAA,MAC7B,QAAQ,QAAQ;AAAA,MAChB;AAAA,IACD;AAAA,EACD;AAAA,EAzFD,OA4EA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAcrB,mBAAmB,KAAsC;AACxD,QAAI,IAAI,aAAa,iBAAiB;AACrC,aAAO,KAAK,qBACV,eAAe,mBAAmB,EAClC,QAAQ,GAAG;AAAA,IACd;AACA,WAAO;AAAA,EACR;AACD;AAzBa,gCAAN;AAAA,EAMJ;AAAA,EAEA;AAAA,GARU;AA2Bb,IAAM,sBAAN,cAAkC,WAAW;AAAA,EAC5C,YACiC,cACG,iBAElB,0BACiB,gBAEjB,wBAChB;AACD,UAAM;AAR0B;AACG;AAElB;AACiB;AAEjB;AAAA,EAGlB;AAAA,EAhHD,OAqG6C;AAAA;AAAA;AAAA,EAa5C,MAAM,QAAQ,mBAA6C;AAC1D,UAAM,eAAe,eAAe,iBAAiB;AACrD,UAAM,YACL,KAAK,uBAAuB,YAAY,aACtC,QAAQ,EACR;AAAA,MACA,CAAC,UACA,MAAM,SAAS,SAAS,MAAM,aAAa,SAAS;AAAA,IACtD,EAAE,CAAC;AAEL,UAAM,MAAM,KAAK;AAAA,MAChB,MAAM,KAAK,yBAAyB;AAAA,QACnC;AAAA,MACD;AAAA,IACD;AACA,UAAM,cAAc,IAAI,OAAO;AAC/B,UAAM,wBAAwB,YAAY,cAAc;AACxD,UAAM,sBAAsB,KAAK,aAAa;AAAA,MAC7C,oCAAoC,YAAY,eAAe,CAAC;AAAA,MAChE,KAAK,gBAAgB,WAAW,qBAAqB;AAAA,MACrD;AAAA,IACD;AACA,SAAK;AAAA,MACJ,UAAU;AAAA,QAAS,CAAC,EAAE,iBAAiB,MACtC,KAAK;AAAA,UACJ;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,SAAK;AAAA,MACJ,KAAK,uBAAuB,YAAY;AAAA,QAAqB,MAC5D,KAAK,OAAO,aAAa,qBAAqB,SAAS;AAAA,MACxD;AAAA,IACD;AACA,SAAK;AAAA,MACJ,UAAU,UAAU,MAAM,oBAAoB,QAAQ,CAAC;AAAA,IACxD;AACA,SAAK,UAAU,oBAAoB,cAAc,MAAM,KAAK,QAAQ,CAAC,CAAC;AACtE,SAAK,UAAU,YAAY,cAAc,MAAM,KAAK,QAAQ,CAAC,CAAC;AAC9D,WAAO;AAAA,EACR;AAAA,EAEQ,OACP,aACA,qBACA,WACA,WAAW,OACJ;AACP,QAAI,CAAC,YAAY,WAAW,KAAK,CAAC,oBAAoB,WAAW,GAAG;AACnE,WAAK,eAAe,qBAAqB,WAAW,QAAQ;AAAA,IAC7D;AAAA,EACD;AACD;AApEM,sBAAN;AAAA,EAEG;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,GAPG;AAsEC,IAAM,iBAAN,MAAgD;AAAA,EAStD,YACoC,iBACF,eAEhB,0BACkB,mBACH,cAEf,oCAChB;AARkC;AACF;AAEhB;AACkB;AACH;AAEf;AAAA,EACf;AAAA,EA7LJ,OA2KuD;AAAA;AAAA;AAAA,EAGtD,OAAwB,sBACvB,mBAAmB;AAAA,IAClB;AAAA,IACA,IAAI,SAAS,wBAAwB,oBAAoB;AAAA,EAC1D;AAAA,EAuBD,MAAM,QACL,KACA,WAAiD,QACjD,WAAuB,MACR;AACf,UAAM,QAAQ,KAAK,YAAY,KAAK,QAAQ;AAC5C,UAAM,KAAK,kBAAkB,MAAM,OAAO,EAAE,SAAS,CAAC;AAEtD,UAAM,kBAAkB,MAAM,IAAI,OAAO,MAAM;AAC9C,UAAI,EAAE,SAAS,WAAW,QAAQ,QAAQ,oBAAoB;AAC7D,cAAM,mBAAmB,QAAQ,MAAM,EAAE,QAAQ,GAAG;AACpD,YAAI,kBAAkB;AACrB,cAAI;AAGJ,cAAI;AACH,kBACC,MAAM,KAAK,mCAAmC;AAAA,cAC7C;AAAA,YACD;AACD,kBAAM,IAAI,OAAO,KAAK;AAAA,cACrB,QAAQ,eAAe;AAAA,YACxB,CAAC;AAAA,UACF,UAAE;AACD,iBAAK,QAAQ;AAAA,UACd;AAAA,QACD;AACA;AAAA,MACD,OAAO;AACN,eAAO,KAAK,gBAAgB,MAC1B,IAAI,EAAE,QAAQ,GACb,KAAK,EAAE,QAAQ,eAAe,oBAAoB,CAAC;AAAA,MACvD;AAAA,IACD,CAAC;AAED,WAAO,SAAS,QAAQ,eAAe;AAAA,EACxC;AAAA,EAEA,MAAM,mBACL,SACA,eACA,YACA,QACe;AACf,UAAM,YAAY,mBAAmB,QAAQ,QAAQ,OAAO,IAAI;AAEhE,UAAM,SAAS,MAAM,KAAK,cAAc,WAAW;AAAA,MAClD,UAAU,EAAE,UAAU,UAAU,SAAS;AAAA,MACzC,UAAU,EAAE,UAAU,kBAAkB,UAAU,QAAQ,EAAE;AAAA,MAC5D,OAAO,IAAI;AAAA,QACV;AAAA,QACA;AAAA,QACA,UAAU,KAAK;AAAA,QACf,UAAU,KAAK;AAAA,MAChB;AAAA,MACA,aAAa,KAAK,aAAa;AAAA,QAC9B,QAAQ,UAAU,QAAQ;AAAA,QAC1B,EAAE,UAAU,KAAK;AAAA,MAClB;AAAA,MACA,SAAS;AAAA,QACR;AAAA,QACA;AAAA,QACA,iBAAiB;AAAA,MAClB;AAAA,IACD,CAAC;AACD,UAAM,QAAQ,QAAQ;AACtB,UAAM,aAAa,UAAU,UAAU,MAAM;AAC5C,aAAO,QAAQ;AACf,iBAAW,QAAQ;AAAA,IACpB,CAAC;AACD,UAAM,KAAK,qBAAqB,SAAS;AACzC,QAAI,QAAQ;AACX,YAAM,gBAAgB,OAAO,WAAW;AACxC,UAAI,mBAAmB,SAAS,eAAe;AAC9C,sBAAc;AAAA,UACb,QAAQ,MAAM,EAAE;AAAA,UAChB,WAAW;AAAA,QACZ;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,qBACL,WACA,WAAW,OACK;AAChB,UAAM,oBAAoB,kBAAkB,UAAU,QAAQ;AAC9D,UAAM,CAAC,gBAAgB,eAAe,IAAI,MAAM,QAAQ,IAAI;AAAA,MAC3D,KAAK,yBAAyB;AAAA,QAC7B,UAAU;AAAA,MACX;AAAA,MACA,KAAK,yBAAyB;AAAA,QAC7B;AAAA,MACD;AAAA,IACD,CAAC;AACD,UAAM,cAAc,eAAe,OAAO;AAC1C,UAAM,eAAe,gBAAgB,OAAO;AAE5C,QAAI;AACH,UAAI,eAAe,cAAc;AAChC,YAAI,UAAU;AACb,uBAAa,SAAS,YAAY,SAAS,CAAC;AAAA,QAC7C,OAAO;AACN,uBAAa,KAAK;AAAA,QACnB;AACA,aAAK,oBAAoB,WAAW,YAAY;AAAA,MACjD;AAAA,IACD,UAAE;AACD,qBAAe,QAAQ;AACvB,sBAAgB,QAAQ;AAAA,IACzB;AAAA,EACD;AAAA,EAEQ,oBACP,WACA,cACO;AACP,UAAM,gBAAgB,KAAK,YAAY,WAAW,aAAa,GAAG;AAClE,UAAM,aAAqC,CAAC;AAC5C,eAAW,gBAAgB,eAAe;AACzC,iBAAW;AAAA,QACV,cAAc;AAAA,UACb,MAAM,KAAK,aAAa,SAAS,KAAK;AAAA,UACtC,aAAa,SAAS;AAAA,QACvB;AAAA,MACD;AAAA,IACD;AACA,iBAAa;AAAA,MACZ,CAAC;AAAA,MACD,WAAW;AAAA,QAAK,CAAC,GAAG,MACnB,MAAM,yBAAyB,EAAE,OAAO,EAAE,KAAK;AAAA,MAChD;AAAA,MACA,MAAM,CAAC;AAAA,IACR;AAAA,EACD;AAAA,EAEQ,YACP,KACA,WAAuB,MACF;AACrB,UAAM,QAA4B,CAAC;AAEnC,QAAI,eAAe,OAAO;AACzB,UAAI,eAAe,iBAAiB;AACnC,YAAI,CAAC,IAAI,WAAW,GAAG;AAEtB,gBAAM,QAAyB;AAC/B,gBAAM;AAAA,YACL,KAAK;AAAA,cACJ;AAAA,cACA,MAAM;AAAA,cACN,MAAM,MAAM;AAAA,YACb;AAAA,UACD;AAAA,QACD;AAAA,MACD,OAAO;AACN,cAAM,QAAe;AACrB,cAAM;AAAA,UACL,KAAK,WAAW,OAAO,MAAM,eAAe,QAAQ;AAAA,QACrD;AAAA,MACD;AAAA,IACD;AAEA,QAAI,eAAe,WAAW;AAC7B,YAAM,CAAC,GAAG;AAAA,IACX;AAEA,QAAI,eAAe,OAAO;AACzB,UAAI,QAAQ,CAAC,YAAY;AACxB,cAAM,YAAuB;AAC7B,YAAI,UAAU,MAAM,IAAI,GAAG;AAC1B,gBAAM;AAAA,YACL,GAAG,UACD,QAAQ,EACR;AAAA,cAAQ,CAAC,UACT,KAAK,YAAY,OAAO,QAAQ;AAAA,YACjC;AAAA,UACF;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,WACP,OACA,MACA,WAAuB,MACJ;AACnB,UAAM,YAAuB,MAAM,OAAO;AAC1C,WAAO,IAAI;AAAA,MACV,YAAY,UAAU;AAAA,MACtB,EAAE,OAAO,MAAM,MAAM,GAAG,KAAK;AAAA,MAC7B;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAnOa,iBAAN;AAAA,EAUJ;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,GAhBU;",
  "names": []
}
