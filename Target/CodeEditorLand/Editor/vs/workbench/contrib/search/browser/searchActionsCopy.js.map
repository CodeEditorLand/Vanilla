{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsCopy.ts"],
  "sourcesContent": ["import { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { isWindows } from \"../../../../base/common/platform.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport * as Constants from \"../common/constants.js\";\nimport { category, getSearchView } from \"./searchActionsBase.js\";\nimport {\n\tFileMatch,\n\tFolderMatch,\n\tFolderMatchWithResource,\n\tMatch,\n\ttype RenderableMatch,\n\tsearchMatchComparer,\n} from \"./searchModel.js\";\n\n//#region Actions\nregisterAction2(\n\tclass CopyMatchCommandAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.CopyMatchCommandId,\n\t\t\t\ttitle: nls.localize2(\"copyMatchLabel\", \"Copy\"),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: Constants.SearchContext.FileMatchOrMatchFocusKey,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyC,\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\t\twhen: Constants.SearchContext.FileMatchOrMatchFocusKey,\n\t\t\t\t\t\tgroup: \"search_2\",\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\toverride async run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tmatch: RenderableMatch | undefined,\n\t\t): Promise<any> {\n\t\t\tawait copyMatchCommand(accessor, match);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass CopyPathCommandAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.CopyPathCommandId,\n\t\t\t\ttitle: nls.localize2(\"copyPathLabel\", \"Copy Path\"),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: Constants.SearchContext\n\t\t\t\t\t\t.FileMatchOrFolderMatchWithResourceFocusKey,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC,\n\t\t\t\t\twin: {\n\t\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\t\twhen: Constants.SearchContext\n\t\t\t\t\t\t\t.FileMatchOrFolderMatchWithResourceFocusKey,\n\t\t\t\t\t\tgroup: \"search_2\",\n\t\t\t\t\t\torder: 2,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\toverride async run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tfileMatch: FileMatch | FolderMatchWithResource | undefined,\n\t\t): Promise<any> {\n\t\t\tawait copyPathCommand(accessor, fileMatch);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass CopyAllCommandAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.CopyAllCommandId,\n\t\t\t\ttitle: nls.localize2(\"copyAllLabel\", \"Copy All\"),\n\t\t\t\tcategory,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\t\twhen: Constants.SearchContext.HasSearchResults,\n\t\t\t\t\t\tgroup: \"search_2\",\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\tawait copyAllCommand(accessor);\n\t\t}\n\t},\n);\n\n//#endregion\n\n//#region Helpers\nexport const lineDelimiter = isWindows ? \"\\r\\n\" : \"\\n\";\n\nasync function copyPathCommand(\n\taccessor: ServicesAccessor,\n\tfileMatch: FileMatch | FolderMatchWithResource | undefined,\n) {\n\tif (!fileMatch) {\n\t\tconst selection = getSelectedRow(accessor);\n\t\tif (\n\t\t\t!(\n\t\t\t\tselection instanceof FileMatch ||\n\t\t\t\tselection instanceof FolderMatchWithResource\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tfileMatch = selection;\n\t}\n\n\tconst clipboardService = accessor.get(IClipboardService);\n\tconst labelService = accessor.get(ILabelService);\n\n\tconst text = labelService.getUriLabel(fileMatch.resource, {\n\t\tnoPrefix: true,\n\t});\n\tawait clipboardService.writeText(text);\n}\n\nasync function copyMatchCommand(\n\taccessor: ServicesAccessor,\n\tmatch: RenderableMatch | undefined,\n) {\n\tif (!match) {\n\t\tconst selection = getSelectedRow(accessor);\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tmatch = selection;\n\t}\n\n\tconst clipboardService = accessor.get(IClipboardService);\n\tconst labelService = accessor.get(ILabelService);\n\n\tlet text: string | undefined;\n\tif (match instanceof Match) {\n\t\ttext = matchToString(match);\n\t} else if (match instanceof FileMatch) {\n\t\ttext = fileMatchToString(match, labelService).text;\n\t} else if (match instanceof FolderMatch) {\n\t\ttext = folderMatchToString(match, labelService).text;\n\t}\n\n\tif (text) {\n\t\tawait clipboardService.writeText(text);\n\t}\n}\n\nasync function copyAllCommand(accessor: ServicesAccessor) {\n\tconst viewsService = accessor.get(IViewsService);\n\tconst clipboardService = accessor.get(IClipboardService);\n\tconst labelService = accessor.get(ILabelService);\n\n\tconst searchView = getSearchView(viewsService);\n\tif (searchView) {\n\t\tconst root = searchView.searchResult;\n\n\t\tconst text = allFolderMatchesToString(\n\t\t\troot.folderMatches(),\n\t\t\tlabelService,\n\t\t);\n\t\tawait clipboardService.writeText(text);\n\t}\n}\n\nfunction matchToString(match: Match, indent = 0): string {\n\tconst getFirstLinePrefix = () =>\n\t\t`${match.range().startLineNumber},${match.range().startColumn}`;\n\tconst getOtherLinePrefix = (i: number) =>\n\t\tmatch.range().startLineNumber + i + \"\";\n\n\tconst fullMatchLines = match.fullPreviewLines();\n\tconst largestPrefixSize = fullMatchLines.reduce((largest, _, i) => {\n\t\tconst thisSize =\n\t\t\ti === 0\n\t\t\t\t? getFirstLinePrefix().length\n\t\t\t\t: getOtherLinePrefix(i).length;\n\n\t\treturn Math.max(thisSize, largest);\n\t}, 0);\n\n\tconst formattedLines = fullMatchLines.map((line, i) => {\n\t\tconst prefix = i === 0 ? getFirstLinePrefix() : getOtherLinePrefix(i);\n\n\t\tconst paddingStr = \" \".repeat(largestPrefixSize - prefix.length);\n\t\tconst indentStr = \" \".repeat(indent);\n\t\treturn `${indentStr}${prefix}: ${paddingStr}${line}`;\n\t});\n\n\treturn formattedLines.join(\"\\n\");\n}\n\nfunction fileFolderMatchToString(\n\tmatch: FileMatch | FolderMatch | FolderMatchWithResource,\n\tlabelService: ILabelService,\n): { text: string; count: number } {\n\tif (match instanceof FileMatch) {\n\t\treturn fileMatchToString(match, labelService);\n\t} else {\n\t\treturn folderMatchToString(match, labelService);\n\t}\n}\n\nfunction fileMatchToString(\n\tfileMatch: FileMatch,\n\tlabelService: ILabelService,\n): { text: string; count: number } {\n\tconst matchTextRows = fileMatch\n\t\t.matches()\n\t\t.sort(searchMatchComparer)\n\t\t.map((match) => matchToString(match, 2));\n\tconst uriString = labelService.getUriLabel(fileMatch.resource, {\n\t\tnoPrefix: true,\n\t});\n\treturn {\n\t\ttext: `${uriString}${lineDelimiter}${matchTextRows.join(lineDelimiter)}`,\n\t\tcount: matchTextRows.length,\n\t};\n}\n\nfunction folderMatchToString(\n\tfolderMatch: FolderMatchWithResource | FolderMatch,\n\tlabelService: ILabelService,\n): { text: string; count: number } {\n\tconst results: string[] = [];\n\tlet numMatches = 0;\n\n\tconst matches = folderMatch.matches().sort(searchMatchComparer);\n\n\tmatches.forEach((match) => {\n\t\tconst result = fileFolderMatchToString(match, labelService);\n\t\tnumMatches += result.count;\n\t\tresults.push(result.text);\n\t});\n\n\treturn {\n\t\ttext: results.join(lineDelimiter + lineDelimiter),\n\t\tcount: numMatches,\n\t};\n}\n\nfunction allFolderMatchesToString(\n\tfolderMatches: Array<FolderMatchWithResource | FolderMatch>,\n\tlabelService: ILabelService,\n): string {\n\tconst folderResults: string[] = [];\n\tfolderMatches = folderMatches.sort(searchMatchComparer);\n\tfor (let i = 0; i < folderMatches.length; i++) {\n\t\tconst folderResult = folderMatchToString(\n\t\t\tfolderMatches[i],\n\t\t\tlabelService,\n\t\t);\n\t\tif (folderResult.count) {\n\t\t\tfolderResults.push(folderResult.text);\n\t\t}\n\t}\n\n\treturn folderResults.join(lineDelimiter + lineDelimiter);\n}\n\nfunction getSelectedRow(\n\taccessor: ServicesAccessor,\n): RenderableMatch | undefined | null {\n\tconst viewsService = accessor.get(IViewsService);\n\tconst searchView = getSearchView(viewsService);\n\treturn searchView?.getControl().getSelection()[0];\n}\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
