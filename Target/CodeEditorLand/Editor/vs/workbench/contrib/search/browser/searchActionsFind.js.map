{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsFind.ts"],
  "sourcesContent": ["import { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { dirname } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tIListService,\n\ttype WorkbenchCompressibleObjectTree,\n} from \"../../../../platform/list/browser/listService.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport { ViewContainerLocation } from \"../../../common/views.js\";\nimport { IConfigurationResolverService } from \"../../../services/configurationResolver/common/configurationResolver.js\";\nimport { IEditorGroupsService } from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IHistoryService } from \"../../../services/history/common/history.js\";\nimport { IPaneCompositePartService } from \"../../../services/panecomposite/browser/panecomposite.js\";\nimport { resolveResourcesForSearchIncludes } from \"../../../services/search/common/queryBuilder.js\";\nimport type {\n\tISearchConfiguration,\n\tISearchConfigurationProperties,\n} from \"../../../services/search/common/search.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport type { ExplorerViewPaneContainer } from \"../../files/browser/explorerViewlet.js\";\nimport {\n\tIExplorerService,\n\tgetMultiSelectedResources,\n} from \"../../files/browser/files.js\";\nimport {\n\tExplorerFolderContext,\n\tExplorerRootContext,\n\tFilesExplorerFocusCondition,\n\tVIEWLET_ID as VIEWLET_ID_FILES,\n} from \"../../files/common/files.js\";\nimport * as SearchEditorConstants from \"../../searchEditor/browser/constants.js\";\nimport type { OpenSearchEditorArgs } from \"../../searchEditor/browser/searchEditor.contribution.js\";\nimport * as Constants from \"../common/constants.js\";\nimport {\n\tcategory,\n\tgetElementsToOperateOn,\n\tgetSearchView,\n\topenSearchView,\n} from \"./searchActionsBase.js\";\nimport {\n\tFileMatch,\n\ttype FolderMatchWithResource,\n\tMatch,\n\ttype RenderableMatch,\n} from \"./searchModel.js\";\n\n//#region Interfaces\nexport interface IFindInFilesArgs {\n\tquery?: string;\n\treplace?: string;\n\tpreserveCase?: boolean;\n\ttriggerSearch?: boolean;\n\tfilesToInclude?: string;\n\tfilesToExclude?: string;\n\tisRegex?: boolean;\n\tisCaseSensitive?: boolean;\n\tmatchWholeWord?: boolean;\n\tuseExcludeSettingsAndIgnoreFiles?: boolean;\n\tonlyOpenEditors?: boolean;\n\tshowIncludesExcludes?: boolean;\n}\n//#endregion\n\nregisterAction2(\n\tclass RestrictSearchToFolderAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.RestrictSearchToFolderId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"restrictResultsToFolder\",\n\t\t\t\t\t\"Restrict Search to Folder\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tConstants.SearchContext.SearchViewVisibleKey,\n\t\t\t\t\t\tConstants.SearchContext.ResourceFolderFocusKey,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\t\tgroup: \"search\",\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tConstants.SearchContext.ResourceFolderFocusKey,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tfolderMatch?: FolderMatchWithResource,\n\t\t) {\n\t\t\tawait searchWithFolderCommand(\n\t\t\t\taccessor,\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tundefined,\n\t\t\t\tfolderMatch,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ExpandSelectedTreeCommandAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.ExpandRecursivelyCommandId,\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\"search.expandRecursively\",\n\t\t\t\t\t\"Expand Recursively\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tConstants.SearchContext.FolderFocusKey,\n\t\t\t\t\t\t\tConstants.SearchContext.HasSearchResults,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"search\",\n\t\t\t\t\t\torder: 4,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\toverride run(accessor: any) {\n\t\t\texpandSelectSubtree(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ExcludeFolderFromSearchAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.ExcludeFolderFromSearchId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"excludeFolderFromSearch\",\n\t\t\t\t\t\"Exclude Folder from Search\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\t\tgroup: \"search\",\n\t\t\t\t\t\torder: 4,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tConstants.SearchContext.ResourceFolderFocusKey,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tfolderMatch?: FolderMatchWithResource,\n\t\t) {\n\t\t\tawait searchWithFolderCommand(\n\t\t\t\taccessor,\n\t\t\t\tfalse,\n\t\t\t\tfalse,\n\t\t\t\tundefined,\n\t\t\t\tfolderMatch,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass RevealInSideBarForSearchResultsAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.RevealInSideBarForSearchResults,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"revealInSideBar\",\n\t\t\t\t\t\"Reveal in Explorer View\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tConstants.SearchContext.FileFocusKey,\n\t\t\t\t\t\t\tConstants.SearchContext.HasSearchResults,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"search_3\",\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\toverride async run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\targs: any,\n\t\t): Promise<any> {\n\t\t\tconst paneCompositeService = accessor.get(\n\t\t\t\tIPaneCompositePartService,\n\t\t\t);\n\t\t\tconst explorerService = accessor.get(IExplorerService);\n\t\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tif (!searchView) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet fileMatch: FileMatch;\n\t\t\tif (!(args instanceof FileMatch)) {\n\t\t\t\targs = searchView.getControl().getFocus()[0];\n\t\t\t}\n\t\t\tif (args instanceof FileMatch) {\n\t\t\t\tfileMatch = args;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpaneCompositeService\n\t\t\t\t.openPaneComposite(\n\t\t\t\t\tVIEWLET_ID_FILES,\n\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\tfalse,\n\t\t\t\t)\n\t\t\t\t.then((viewlet) => {\n\t\t\t\t\tif (!viewlet) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst explorerViewContainer =\n\t\t\t\t\t\tviewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\t\t\t\tconst uri = fileMatch.resource;\n\t\t\t\t\tif (uri && contextService.isInsideWorkspace(uri)) {\n\t\t\t\t\t\tconst explorerView =\n\t\t\t\t\t\t\texplorerViewContainer.getExplorerView();\n\t\t\t\t\t\texplorerView.setExpanded(true);\n\t\t\t\t\t\texplorerService\n\t\t\t\t\t\t\t.select(uri, true)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t() => explorerView.focus(),\n\t\t\t\t\t\t\t\tonUnexpectedError,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t},\n);\n\n// Find in Files by default is the same as View: Show Search, but can be configured to open a search editor instead with the `search.mode` binding\nregisterAction2(\n\tclass FindInFilesAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.FindInFilesActionId,\n\t\t\t\ttitle: {\n\t\t\t\t\t...nls.localize2(\"findInFiles\", \"Find in Files\"),\n\t\t\t\t\tmnemonicTitle: nls.localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miFindInFiles\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Find &&in Files\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"findInFiles.description\",\n\t\t\t\t\t\t\"Open a workspace search\",\n\t\t\t\t\t),\n\t\t\t\t\targs: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: nls.localize(\n\t\t\t\t\t\t\t\t\"findInFiles.args\",\n\t\t\t\t\t\t\t\t\"A set of options for the search\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tquery: { type: \"string\" },\n\t\t\t\t\t\t\t\t\treplace: { type: \"string\" },\n\t\t\t\t\t\t\t\t\tpreserveCase: { type: \"boolean\" },\n\t\t\t\t\t\t\t\t\ttriggerSearch: { type: \"boolean\" },\n\t\t\t\t\t\t\t\t\tfilesToInclude: { type: \"string\" },\n\t\t\t\t\t\t\t\t\tfilesToExclude: { type: \"string\" },\n\t\t\t\t\t\t\t\t\tisRegex: { type: \"boolean\" },\n\t\t\t\t\t\t\t\t\tisCaseSensitive: { type: \"boolean\" },\n\t\t\t\t\t\t\t\t\tmatchWholeWord: { type: \"boolean\" },\n\t\t\t\t\t\t\t\t\tuseExcludeSettingsAndIgnoreFiles: {\n\t\t\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tonlyOpenEditors: { type: \"boolean\" },\n\t\t\t\t\t\t\t\t\tshowIncludesExcludes: { type: \"boolean\" },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyF,\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarEditMenu,\n\t\t\t\t\t\tgroup: \"4_find_global\",\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\targs: IFindInFilesArgs = {},\n\t\t): Promise<any> {\n\t\t\tfindInFilesCommand(accessor, args);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass FindInFolderAction extends Action2 {\n\t\t// from explorer\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.FindInFolderId,\n\t\t\t\ttitle: nls.localize2(\"findInFolder\", \"Find in Folder...\"),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tFilesExplorerFocusCondition,\n\t\t\t\t\t\tExplorerFolderContext,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ExplorerContext,\n\t\t\t\t\t\tgroup: \"4_search\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ExplorerFolderContext),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, resource?: URI) {\n\t\t\tawait searchWithFolderCommand(accessor, true, true, resource);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass FindInWorkspaceAction extends Action2 {\n\t\t// from explorer\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.FindInWorkspaceId,\n\t\t\t\ttitle: nls.localize2(\"findInWorkspace\", \"Find in Workspace...\"),\n\t\t\t\tcategory,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ExplorerContext,\n\t\t\t\t\t\tgroup: \"4_search\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tExplorerRootContext,\n\t\t\t\t\t\t\tExplorerFolderContext.toNegated(),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\tconst searchConfig = accessor\n\t\t\t\t.get(IConfigurationService)\n\t\t\t\t.getValue<ISearchConfiguration>().search;\n\t\t\tconst mode = searchConfig.mode;\n\n\t\t\tif (mode === \"view\") {\n\t\t\t\tconst searchView = await openSearchView(\n\t\t\t\t\taccessor.get(IViewsService),\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t\tsearchView?.searchInFolders();\n\t\t\t} else {\n\t\t\t\treturn accessor\n\t\t\t\t\t.get(ICommandService)\n\t\t\t\t\t.executeCommand(SearchEditorConstants.OpenEditorCommandId, {\n\t\t\t\t\t\tlocation: mode === \"newEditor\" ? \"new\" : \"reuse\",\n\t\t\t\t\t\tfilesToInclude: \"\",\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n);\n\n//#region Helpers\nfunction expandSelectSubtree(accessor: ServicesAccessor) {\n\tconst viewsService = accessor.get(IViewsService);\n\tconst searchView = getSearchView(viewsService);\n\tif (searchView) {\n\t\tconst viewer = searchView.getControl();\n\t\tconst selected = viewer.getFocus()[0];\n\t\tviewer.expand(selected, true);\n\t}\n}\n\nasync function searchWithFolderCommand(\n\taccessor: ServicesAccessor,\n\tisFromExplorer: boolean,\n\tisIncludes: boolean,\n\tresource?: URI,\n\tfolderMatch?: FolderMatchWithResource,\n) {\n\tconst fileService = accessor.get(IFileService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst contextService = accessor.get(IWorkspaceContextService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst searchConfig = accessor\n\t\t.get(IConfigurationService)\n\t\t.getValue<ISearchConfiguration>().search;\n\tconst mode = searchConfig.mode;\n\n\tlet resources: URI[];\n\n\tif (isFromExplorer) {\n\t\tresources = getMultiSelectedResources(\n\t\t\tresource,\n\t\t\taccessor.get(IListService),\n\t\t\taccessor.get(IEditorService),\n\t\t\taccessor.get(IEditorGroupsService),\n\t\t\taccessor.get(IExplorerService),\n\t\t);\n\t} else {\n\t\tconst searchView = getSearchView(viewsService);\n\t\tif (!searchView) {\n\t\t\treturn;\n\t\t}\n\t\tresources = getMultiSelectedSearchResources(\n\t\t\tsearchView.getControl(),\n\t\t\tfolderMatch,\n\t\t\tsearchConfig,\n\t\t);\n\t}\n\n\tconst resolvedResources = fileService\n\t\t.resolveAll(resources.map((resource) => ({ resource })))\n\t\t.then((results) => {\n\t\t\tconst folders: URI[] = [];\n\t\t\tresults.forEach((result) => {\n\t\t\t\tif (result.success && result.stat) {\n\t\t\t\t\tfolders.push(\n\t\t\t\t\t\tresult.stat.isDirectory\n\t\t\t\t\t\t\t? result.stat.resource\n\t\t\t\t\t\t\t: dirname(result.stat.resource),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn resolveResourcesForSearchIncludes(folders, contextService);\n\t\t});\n\n\tif (mode === \"view\") {\n\t\tconst searchView = await openSearchView(viewsService, true);\n\t\tif (resources && resources.length && searchView) {\n\t\t\tif (isIncludes) {\n\t\t\t\tsearchView.searchInFolders(await resolvedResources);\n\t\t\t} else {\n\t\t\t\tsearchView.searchOutsideOfFolders(await resolvedResources);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t} else if (isIncludes) {\n\t\treturn commandService.executeCommand(\n\t\t\tSearchEditorConstants.OpenEditorCommandId,\n\t\t\t{\n\t\t\t\tfilesToInclude: (await resolvedResources).join(\", \"),\n\t\t\t\tshowIncludesExcludes: true,\n\t\t\t\tlocation: mode === \"newEditor\" ? \"new\" : \"reuse\",\n\t\t\t},\n\t\t);\n\t} else {\n\t\treturn commandService.executeCommand(\n\t\t\tSearchEditorConstants.OpenEditorCommandId,\n\t\t\t{\n\t\t\t\tfilesToExclude: (await resolvedResources).join(\", \"),\n\t\t\t\tshowIncludesExcludes: true,\n\t\t\t\tlocation: mode === \"newEditor\" ? \"new\" : \"reuse\",\n\t\t\t},\n\t\t);\n\t}\n}\n\nfunction getMultiSelectedSearchResources(\n\tviewer: WorkbenchCompressibleObjectTree<RenderableMatch, void>,\n\tcurrElement: RenderableMatch | undefined,\n\tsortConfig: ISearchConfigurationProperties,\n): URI[] {\n\treturn getElementsToOperateOn(viewer, currElement, sortConfig)\n\t\t.map((renderableMatch) =>\n\t\t\trenderableMatch instanceof Match ? null : renderableMatch.resource,\n\t\t)\n\t\t.filter(\n\t\t\t(renderableMatch): renderableMatch is URI =>\n\t\t\t\trenderableMatch !== null,\n\t\t);\n}\n\nexport async function findInFilesCommand(\n\taccessor: ServicesAccessor,\n\t_args: IFindInFilesArgs = {},\n) {\n\tconst searchConfig = accessor\n\t\t.get(IConfigurationService)\n\t\t.getValue<ISearchConfiguration>().search;\n\tconst viewsService = accessor.get(IViewsService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst args: IFindInFilesArgs = {};\n\tif (Object.keys(_args).length !== 0) {\n\t\t// resolve variables in the same way as in\n\t\t// https://github.com/microsoft/vscode/blob/8b76efe9d317d50cb5b57a7658e09ce6ebffaf36/src/vs/workbench/contrib/searchEditor/browser/searchEditorActions.ts#L152-L158\n\t\tconst configurationResolverService = accessor.get(\n\t\t\tIConfigurationResolverService,\n\t\t);\n\t\tconst historyService = accessor.get(IHistoryService);\n\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\tconst activeWorkspaceRootUri =\n\t\t\thistoryService.getLastActiveWorkspaceRoot();\n\t\tconst filteredActiveWorkspaceRootUri =\n\t\t\tactiveWorkspaceRootUri?.scheme === Schemas.file ||\n\t\t\tactiveWorkspaceRootUri?.scheme === Schemas.vscodeRemote\n\t\t\t\t? activeWorkspaceRootUri\n\t\t\t\t: undefined;\n\t\tconst lastActiveWorkspaceRoot = filteredActiveWorkspaceRootUri\n\t\t\t? (workspaceContextService.getWorkspaceFolder(\n\t\t\t\t\tfilteredActiveWorkspaceRootUri,\n\t\t\t\t) ?? undefined)\n\t\t\t: undefined;\n\n\t\tfor (const entry of Object.entries(_args)) {\n\t\t\tconst name = entry[0];\n\t\t\tconst value = entry[1];\n\t\t\tif (value !== undefined) {\n\t\t\t\t(args as any)[name as any] =\n\t\t\t\t\ttypeof value === \"string\"\n\t\t\t\t\t\t? await configurationResolverService.resolveAsync(\n\t\t\t\t\t\t\t\tlastActiveWorkspaceRoot,\n\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst mode = searchConfig.mode;\n\tif (mode === \"view\") {\n\t\topenSearchView(viewsService, false).then((openedView) => {\n\t\t\tif (openedView) {\n\t\t\t\tconst searchAndReplaceWidget =\n\t\t\t\t\topenedView.searchAndReplaceWidget;\n\t\t\t\tsearchAndReplaceWidget.toggleReplace(\n\t\t\t\t\ttypeof args.replace === \"string\",\n\t\t\t\t);\n\t\t\t\tlet updatedText = false;\n\t\t\t\tif (typeof args.query !== \"string\") {\n\t\t\t\t\tupdatedText =\n\t\t\t\t\t\topenedView.updateTextFromFindWidgetOrSelection({\n\t\t\t\t\t\t\tallowUnselectedWord:\n\t\t\t\t\t\t\t\ttypeof args.replace !== \"string\",\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\topenedView.setSearchParameters(args);\n\t\t\t\tif (typeof args.showIncludesExcludes === \"boolean\") {\n\t\t\t\t\topenedView.toggleQueryDetails(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\targs.showIncludesExcludes,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\topenedView.searchAndReplaceWidget.focus(\n\t\t\t\t\tundefined,\n\t\t\t\t\tupdatedText,\n\t\t\t\t\tupdatedText,\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t} else {\n\t\tconst convertArgs = (args: IFindInFilesArgs): OpenSearchEditorArgs => ({\n\t\t\tlocation: mode === \"newEditor\" ? \"new\" : \"reuse\",\n\t\t\tquery: args.query,\n\t\t\tfilesToInclude: args.filesToInclude,\n\t\t\tfilesToExclude: args.filesToExclude,\n\t\t\tmatchWholeWord: args.matchWholeWord,\n\t\t\tisCaseSensitive: args.isCaseSensitive,\n\t\t\tisRegexp: args.isRegex,\n\t\t\tuseExcludeSettingsAndIgnoreFiles:\n\t\t\t\targs.useExcludeSettingsAndIgnoreFiles,\n\t\t\tonlyOpenEditors: args.onlyOpenEditors,\n\t\t\tshowIncludesExcludes: !!(\n\t\t\t\targs.filesToExclude ||\n\t\t\t\targs.filesToExclude ||\n\t\t\t\t!args.useExcludeSettingsAndIgnoreFiles\n\t\t\t),\n\t\t});\n\t\tcommandService.executeCommand(\n\t\t\tSearchEditorConstants.OpenEditorCommandId,\n\t\t\tconvertArgs(args),\n\t\t);\n\t}\n}\n//#endregion\n"],
  "mappings": ";;AAAA,SAAS,yBAAyB;AAClC,SAAS,SAAS,cAAc;AAChC,SAAS,eAAe;AAKxB,SAAS,eAAe;AAExB,YAAY,SAAS;AACrB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;AAE7B,SAAS,wBAAwB;AACjC;AAAA,EACC;AAAA,OAEM;AACP,SAAS,gCAAgC;AACzC,SAAS,6BAA6B;AACtC,SAAS,qCAAqC;AAC9C,SAAS,4BAA4B;AACrC,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB;AAChC,SAAS,iCAAiC;AAC1C,SAAS,yCAAyC;AAKlD,SAAS,qBAAqB;AAE9B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,OACR;AACP,YAAY,2BAA2B;AAEvC,YAAY,eAAe;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EAEA;AAAA,OAEM;AAmBP;AAAA,EACC,MAAM,qCAAqC,QAAQ;AAAA,IAnFpD,OAmFoD;AAAA;AAAA;AAAA,IAClD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB,UAAU,cAAc;AAAA,YACxB,UAAU,cAAc;AAAA,UACzB;AAAA,UACA,SAAS,OAAO,QAAQ,OAAO,MAAM,QAAQ;AAAA,QAC9C;AAAA,QACA,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM,eAAe;AAAA,cACpB,UAAU,cAAc;AAAA,YACzB;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,MAAM,IACL,UACA,aACC;AACD,YAAM;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,wCAAwC,QAAQ;AAAA,IAhIvD,OAgIuD;AAAA;AAAA;AAAA,IACrD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,MAAM,eAAe;AAAA,cACpB,UAAU,cAAc;AAAA,cACxB,UAAU,cAAc;AAAA,YACzB;AAAA,YACA,OAAO;AAAA,YACP,OAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAES,IAAI,UAAe;AAC3B,0BAAoB,QAAQ;AAAA,IAC7B;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,sCAAsC,QAAQ;AAAA,IA9JrD,OA8JqD;AAAA;AAAA;AAAA,IACnD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM,eAAe;AAAA,cACpB,UAAU,cAAc;AAAA,YACzB;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,MAAM,IACL,UACA,aACC;AACD,YAAM;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,8CAA8C,QAAQ;AAAA,IAnM7D,OAmM6D;AAAA;AAAA;AAAA,IAC3D,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,MAAM,eAAe;AAAA,cACpB,UAAU,cAAc;AAAA,cACxB,UAAU,cAAc;AAAA,YACzB;AAAA,YACA,OAAO;AAAA,YACP,OAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IACd,UACA,MACe;AACf,YAAM,uBAAuB,SAAS;AAAA,QACrC;AAAA,MACD;AACA,YAAM,kBAAkB,SAAS,IAAI,gBAAgB;AACrD,YAAM,iBAAiB,SAAS,IAAI,wBAAwB;AAE5D,YAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,UAAI,CAAC,YAAY;AAChB;AAAA,MACD;AAEA,UAAI;AACJ,UAAI,EAAE,gBAAgB,YAAY;AACjC,eAAO,WAAW,WAAW,EAAE,SAAS,EAAE,CAAC;AAAA,MAC5C;AACA,UAAI,gBAAgB,WAAW;AAC9B,oBAAY;AAAA,MACb,OAAO;AACN;AAAA,MACD;AAEA,2BACE;AAAA,QACA;AAAA,QACA,sBAAsB;AAAA,QACtB;AAAA,MACD,EACC,KAAK,CAAC,YAAY;AAClB,YAAI,CAAC,SAAS;AACb;AAAA,QACD;AAEA,cAAM,wBACL,QAAQ,qBAAqB;AAC9B,cAAM,MAAM,UAAU;AACtB,YAAI,OAAO,eAAe,kBAAkB,GAAG,GAAG;AACjD,gBAAM,eACL,sBAAsB,gBAAgB;AACvC,uBAAa,YAAY,IAAI;AAC7B,0BACE,OAAO,KAAK,IAAI,EAChB;AAAA,YACA,MAAM,aAAa,MAAM;AAAA,YACzB;AAAA,UACD;AAAA,QACF;AAAA,MACD,CAAC;AAAA,IACH;AAAA,EACD;AACD;AAGA;AAAA,EACC,MAAM,0BAA0B,QAAQ;AAAA,IAnRzC,OAmRyC;AAAA;AAAA;AAAA,IACvC,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO;AAAA,UACN,GAAG,IAAI,UAAU,eAAe,eAAe;AAAA,UAC/C,eAAe,IAAI;AAAA,YAClB;AAAA,cACC,KAAK;AAAA,cACL,SAAS,CAAC,uBAAuB;AAAA,YAClC;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,QACA,UAAU;AAAA,UACT,aAAa,IAAI;AAAA,YAChB;AAAA,YACA;AAAA,UACD;AAAA,UACA,MAAM;AAAA,YACL;AAAA,cACC,MAAM,IAAI;AAAA,gBACT;AAAA,gBACA;AAAA,cACD;AAAA,cACA,QAAQ;AAAA,gBACP,MAAM;AAAA,gBACN,YAAY;AAAA,kBACX,OAAO,EAAE,MAAM,SAAS;AAAA,kBACxB,SAAS,EAAE,MAAM,SAAS;AAAA,kBAC1B,cAAc,EAAE,MAAM,UAAU;AAAA,kBAChC,eAAe,EAAE,MAAM,UAAU;AAAA,kBACjC,gBAAgB,EAAE,MAAM,SAAS;AAAA,kBACjC,gBAAgB,EAAE,MAAM,SAAS;AAAA,kBACjC,SAAS,EAAE,MAAM,UAAU;AAAA,kBAC3B,iBAAiB,EAAE,MAAM,UAAU;AAAA,kBACnC,gBAAgB,EAAE,MAAM,UAAU;AAAA,kBAClC,kCAAkC;AAAA,oBACjC,MAAM;AAAA,kBACP;AAAA,kBACA,iBAAiB,EAAE,MAAM,UAAU;AAAA,kBACnC,sBAAsB,EAAE,MAAM,UAAU;AAAA,gBACzC;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,QAClD;AAAA,QACA,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,UACR;AAAA,QACD;AAAA,QACA,IAAI;AAAA,MACL,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IACd,UACA,OAAyB,CAAC,GACX;AACf,yBAAmB,UAAU,IAAI;AAAA,IAClC;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,2BAA2B,QAAQ;AAAA,IA5V1C,OA4V0C;AAAA;AAAA;AAAA;AAAA,IAExC,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI,UAAU,gBAAgB,mBAAmB;AAAA,QACxD;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB;AAAA,YACA;AAAA,UACD;AAAA,UACA,SAAS,OAAO,QAAQ,OAAO,MAAM,QAAQ;AAAA,QAC9C;AAAA,QACA,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM,eAAe,IAAI,qBAAqB;AAAA,UAC/C;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,MAAM,IAAI,UAA4B,UAAgB;AACrD,YAAM,wBAAwB,UAAU,MAAM,MAAM,QAAQ;AAAA,IAC7D;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,8BAA8B,QAAQ;AAAA,IA5X7C,OA4X6C;AAAA;AAAA;AAAA;AAAA,IAE3C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI,UAAU,mBAAmB,sBAAsB;AAAA,QAC9D;AAAA,QACA,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM,eAAe;AAAA,cACpB;AAAA,cACA,sBAAsB,UAAU;AAAA,YACjC;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,MAAM,IAAI,UAA4B;AACrC,YAAM,eAAe,SACnB,IAAI,qBAAqB,EACzB,SAA+B,EAAE;AACnC,YAAM,OAAO,aAAa;AAE1B,UAAI,SAAS,QAAQ;AACpB,cAAM,aAAa,MAAM;AAAA,UACxB,SAAS,IAAI,aAAa;AAAA,UAC1B;AAAA,QACD;AACA,oBAAY,gBAAgB;AAAA,MAC7B,OAAO;AACN,eAAO,SACL,IAAI,eAAe,EACnB,eAAe,sBAAsB,qBAAqB;AAAA,UAC1D,UAAU,SAAS,cAAc,QAAQ;AAAA,UACzC,gBAAgB;AAAA,QACjB,CAAC;AAAA,MACH;AAAA,IACD;AAAA,EACD;AACD;AAGA,SAAS,oBAAoB,UAA4B;AACxD,QAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,QAAM,aAAa,cAAc,YAAY;AAC7C,MAAI,YAAY;AACf,UAAM,SAAS,WAAW,WAAW;AACrC,UAAM,WAAW,OAAO,SAAS,EAAE,CAAC;AACpC,WAAO,OAAO,UAAU,IAAI;AAAA,EAC7B;AACD;AARS;AAUT,eAAe,wBACd,UACA,gBACA,YACA,UACA,aACC;AACD,QAAM,cAAc,SAAS,IAAI,YAAY;AAC7C,QAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,QAAM,iBAAiB,SAAS,IAAI,wBAAwB;AAC5D,QAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,QAAM,eAAe,SACnB,IAAI,qBAAqB,EACzB,SAA+B,EAAE;AACnC,QAAM,OAAO,aAAa;AAE1B,MAAI;AAEJ,MAAI,gBAAgB;AACnB,gBAAY;AAAA,MACX;AAAA,MACA,SAAS,IAAI,YAAY;AAAA,MACzB,SAAS,IAAI,cAAc;AAAA,MAC3B,SAAS,IAAI,oBAAoB;AAAA,MACjC,SAAS,IAAI,gBAAgB;AAAA,IAC9B;AAAA,EACD,OAAO;AACN,UAAM,aAAa,cAAc,YAAY;AAC7C,QAAI,CAAC,YAAY;AAChB;AAAA,IACD;AACA,gBAAY;AAAA,MACX,WAAW,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAEA,QAAM,oBAAoB,YACxB,WAAW,UAAU,IAAI,CAACA,eAAc,EAAE,UAAAA,UAAS,EAAE,CAAC,EACtD,KAAK,CAAC,YAAY;AAClB,UAAM,UAAiB,CAAC;AACxB,YAAQ,QAAQ,CAAC,WAAW;AAC3B,UAAI,OAAO,WAAW,OAAO,MAAM;AAClC,gBAAQ;AAAA,UACP,OAAO,KAAK,cACT,OAAO,KAAK,WACZ,QAAQ,OAAO,KAAK,QAAQ;AAAA,QAChC;AAAA,MACD;AAAA,IACD,CAAC;AACD,WAAO,kCAAkC,SAAS,cAAc;AAAA,EACjE,CAAC;AAEF,MAAI,SAAS,QAAQ;AACpB,UAAM,aAAa,MAAM,eAAe,cAAc,IAAI;AAC1D,QAAI,aAAa,UAAU,UAAU,YAAY;AAChD,UAAI,YAAY;AACf,mBAAW,gBAAgB,MAAM,iBAAiB;AAAA,MACnD,OAAO;AACN,mBAAW,uBAAuB,MAAM,iBAAiB;AAAA,MAC1D;AAAA,IACD;AACA,WAAO;AAAA,EACR,WAAW,YAAY;AACtB,WAAO,eAAe;AAAA,MACrB,sBAAsB;AAAA,MACtB;AAAA,QACC,iBAAiB,MAAM,mBAAmB,KAAK,IAAI;AAAA,QACnD,sBAAsB;AAAA,QACtB,UAAU,SAAS,cAAc,QAAQ;AAAA,MAC1C;AAAA,IACD;AAAA,EACD,OAAO;AACN,WAAO,eAAe;AAAA,MACrB,sBAAsB;AAAA,MACtB;AAAA,QACC,iBAAiB,MAAM,mBAAmB,KAAK,IAAI;AAAA,QACnD,sBAAsB;AAAA,QACtB,UAAU,SAAS,cAAc,QAAQ;AAAA,MAC1C;AAAA,IACD;AAAA,EACD;AACD;AAnFe;AAqFf,SAAS,gCACR,QACA,aACA,YACQ;AACR,SAAO,uBAAuB,QAAQ,aAAa,UAAU,EAC3D;AAAA,IAAI,CAAC,oBACL,2BAA2B,QAAQ,OAAO,gBAAgB;AAAA,EAC3D,EACC;AAAA,IACA,CAAC,oBACA,oBAAoB;AAAA,EACtB;AACF;AAbS;AAeT,eAAsB,mBACrB,UACA,QAA0B,CAAC,GAC1B;AACD,QAAM,eAAe,SACnB,IAAI,qBAAqB,EACzB,SAA+B,EAAE;AACnC,QAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,QAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,QAAM,OAAyB,CAAC;AAChC,MAAI,OAAO,KAAK,KAAK,EAAE,WAAW,GAAG;AAGpC,UAAM,+BAA+B,SAAS;AAAA,MAC7C;AAAA,IACD;AACA,UAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,UAAM,0BAA0B,SAAS,IAAI,wBAAwB;AACrE,UAAM,yBACL,eAAe,2BAA2B;AAC3C,UAAM,iCACL,wBAAwB,WAAW,QAAQ,QAC3C,wBAAwB,WAAW,QAAQ,eACxC,yBACA;AACJ,UAAM,0BAA0B,iCAC5B,wBAAwB;AAAA,MACzB;AAAA,IACD,KAAK,SACJ;AAEH,eAAW,SAAS,OAAO,QAAQ,KAAK,GAAG;AAC1C,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,QAAQ,MAAM,CAAC;AACrB,UAAI,UAAU,QAAW;AACxB,QAAC,KAAa,IAAW,IACxB,OAAO,UAAU,WACd,MAAM,6BAA6B;AAAA,UACnC;AAAA,UACA;AAAA,QACD,IACC;AAAA,MACL;AAAA,IACD;AAAA,EACD;AAEA,QAAM,OAAO,aAAa;AAC1B,MAAI,SAAS,QAAQ;AACpB,mBAAe,cAAc,KAAK,EAAE,KAAK,CAAC,eAAe;AACxD,UAAI,YAAY;AACf,cAAM,yBACL,WAAW;AACZ,+BAAuB;AAAA,UACtB,OAAO,KAAK,YAAY;AAAA,QACzB;AACA,YAAI,cAAc;AAClB,YAAI,OAAO,KAAK,UAAU,UAAU;AACnC,wBACC,WAAW,oCAAoC;AAAA,YAC9C,qBACC,OAAO,KAAK,YAAY;AAAA,UAC1B,CAAC;AAAA,QACH;AACA,mBAAW,oBAAoB,IAAI;AACnC,YAAI,OAAO,KAAK,yBAAyB,WAAW;AACnD,qBAAW;AAAA,YACV;AAAA,YACA,KAAK;AAAA,UACN;AAAA,QACD;AAEA,mBAAW,uBAAuB;AAAA,UACjC;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,cAAc,wBAACC,WAAkD;AAAA,MACtE,UAAU,SAAS,cAAc,QAAQ;AAAA,MACzC,OAAOA,MAAK;AAAA,MACZ,gBAAgBA,MAAK;AAAA,MACrB,gBAAgBA,MAAK;AAAA,MACrB,gBAAgBA,MAAK;AAAA,MACrB,iBAAiBA,MAAK;AAAA,MACtB,UAAUA,MAAK;AAAA,MACf,kCACCA,MAAK;AAAA,MACN,iBAAiBA,MAAK;AAAA,MACtB,sBAAsB,CAAC,EACtBA,MAAK,kBACLA,MAAK,kBACL,CAACA,MAAK;AAAA,IAER,IAhBoB;AAiBpB,mBAAe;AAAA,MACd,sBAAsB;AAAA,MACtB,YAAY,IAAI;AAAA,IACjB;AAAA,EACD;AACD;AArGsB;",
  "names": ["resource", "args"]
}
