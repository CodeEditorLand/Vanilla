{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsFind.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { dirname } from '../../../../base/common/resources.js';\nimport * as nls from '../../../../nls.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IListService, WorkbenchCompressibleObjectTree } from '../../../../platform/list/browser/listService.js';\nimport { ViewContainerLocation } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport * as Constants from '../common/constants.js';\nimport * as SearchEditorConstants from '../../searchEditor/browser/constants.js';\nimport { FileMatch, FolderMatchWithResource, Match, RenderableMatch } from './searchModel.js';\nimport { OpenSearchEditorArgs } from '../../searchEditor/browser/searchEditor.contribution.js';\nimport { ISearchConfiguration, ISearchConfigurationProperties } from '../../../services/search/common/search.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { resolveResourcesForSearchIncludes } from '../../../services/search/common/queryBuilder.js';\nimport { getMultiSelectedResources, IExplorerService } from '../../files/browser/files.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { ExplorerFolderContext, ExplorerRootContext, FilesExplorerFocusCondition, VIEWLET_ID as VIEWLET_ID_FILES } from '../../files/common/files.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nimport { ExplorerViewPaneContainer } from '../../files/browser/explorerViewlet.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { category, getElementsToOperateOn, getSearchView, openSearchView } from './searchActionsBase.js';\nimport { IConfigurationResolverService } from '../../../services/configurationResolver/common/configurationResolver.js';\nimport { IHistoryService } from '../../../services/history/common/history.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\n\n\n//#region Interfaces\nexport interface IFindInFilesArgs {\n\tquery?: string;\n\treplace?: string;\n\tpreserveCase?: boolean;\n\ttriggerSearch?: boolean;\n\tfilesToInclude?: string;\n\tfilesToExclude?: string;\n\tisRegex?: boolean;\n\tisCaseSensitive?: boolean;\n\tmatchWholeWord?: boolean;\n\tuseExcludeSettingsAndIgnoreFiles?: boolean;\n\tonlyOpenEditors?: boolean;\n\tshowIncludesExcludes?: boolean;\n}\n//#endregion\n\nregisterAction2(class RestrictSearchToFolderAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.RestrictSearchToFolderId,\n\t\t\ttitle: nls.localize2('restrictResultsToFolder', \"Restrict Search to Folder\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.ResourceFolderFocusKey),\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\tgroup: 'search',\n\t\t\t\t\torder: 3,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.ResourceFolderFocusKey)\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, folderMatch?: FolderMatchWithResource) {\n\t\tawait searchWithFolderCommand(accessor, false, true, undefined, folderMatch);\n\t}\n});\n\n\nregisterAction2(class ExpandSelectedTreeCommandAction extends Action2 {\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ExpandRecursivelyCommandId,\n\t\t\ttitle: nls.localize('search.expandRecursively', \"Expand Recursively\"),\n\t\t\tcategory,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tConstants.SearchContext.FolderFocusKey,\n\t\t\t\t\tConstants.SearchContext.HasSearchResults\n\t\t\t\t),\n\t\t\t\tgroup: 'search',\n\t\t\t\torder: 4\n\t\t\t}]\n\t\t});\n\t}\n\n\toverride run(accessor: any) {\n\t\texpandSelectSubtree(accessor);\n\t}\n});\n\nregisterAction2(class ExcludeFolderFromSearchAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ExcludeFolderFromSearchId,\n\t\t\ttitle: nls.localize2('excludeFolderFromSearch', \"Exclude Folder from Search\"),\n\t\t\tcategory,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\tgroup: 'search',\n\t\t\t\t\torder: 4,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.ResourceFolderFocusKey)\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, folderMatch?: FolderMatchWithResource) {\n\t\tawait searchWithFolderCommand(accessor, false, false, undefined, folderMatch);\n\t}\n});\n\nregisterAction2(class RevealInSideBarForSearchResultsAction extends Action2 {\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.RevealInSideBarForSearchResults,\n\t\t\ttitle: nls.localize2('revealInSideBar', \"Reveal in Explorer View\"),\n\t\t\tcategory,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.FileFocusKey, Constants.SearchContext.HasSearchResults),\n\t\t\t\tgroup: 'search_3',\n\t\t\t\torder: 1\n\t\t\t}]\n\t\t});\n\n\t}\n\n\toverride async run(accessor: ServicesAccessor, args: any): Promise<any> {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (!searchView) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet fileMatch: FileMatch;\n\t\tif (!(args instanceof FileMatch)) {\n\t\t\targs = searchView.getControl().getFocus()[0];\n\t\t}\n\t\tif (args instanceof FileMatch) {\n\t\t\tfileMatch = args;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tpaneCompositeService.openPaneComposite(VIEWLET_ID_FILES, ViewContainerLocation.Sidebar, false).then((viewlet) => {\n\t\t\tif (!viewlet) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst explorerViewContainer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\t\tconst uri = fileMatch.resource;\n\t\t\tif (uri && contextService.isInsideWorkspace(uri)) {\n\t\t\t\tconst explorerView = explorerViewContainer.getExplorerView();\n\t\t\t\texplorerView.setExpanded(true);\n\t\t\t\texplorerService.select(uri, true).then(() => explorerView.focus(), onUnexpectedError);\n\t\t\t}\n\t\t});\n\t}\n});\n\n// Find in Files by default is the same as View: Show Search, but can be configured to open a search editor instead with the `search.mode` binding\nregisterAction2(class FindInFilesAction extends Action2 {\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.FindInFilesActionId,\n\t\t\ttitle: {\n\t\t\t\t...nls.localize2('findInFiles', \"Find in Files\"),\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miFindInFiles', comment: ['&& denotes a mnemonic'] }, \"Find &&in Files\"),\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize('findInFiles.description', \"Open a workspace search\"),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: nls.localize('findInFiles.args', \"A set of options for the search\"),\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tquery: { 'type': 'string' },\n\t\t\t\t\t\t\t\treplace: { 'type': 'string' },\n\t\t\t\t\t\t\t\tpreserveCase: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\ttriggerSearch: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tfilesToInclude: { 'type': 'string' },\n\t\t\t\t\t\t\t\tfilesToExclude: { 'type': 'string' },\n\t\t\t\t\t\t\t\tisRegex: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tisCaseSensitive: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tmatchWholeWord: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tuseExcludeSettingsAndIgnoreFiles: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tonlyOpenEditors: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tshowIncludesExcludes: { 'type': 'boolean' }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyF,\n\t\t\t},\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.MenubarEditMenu,\n\t\t\t\tgroup: '4_find_global',\n\t\t\t\torder: 1,\n\t\t\t}],\n\t\t\tf1: true\n\t\t});\n\n\t}\n\n\toverride async run(accessor: ServicesAccessor, args: IFindInFilesArgs = {}): Promise<any> {\n\t\tfindInFilesCommand(accessor, args);\n\t}\n});\n\nregisterAction2(class FindInFolderAction extends Action2 {\n\t// from explorer\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.FindInFolderId,\n\t\t\ttitle: nls.localize2('findInFolder', \"Find in Folder...\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerFolderContext),\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.ExplorerContext,\n\t\t\t\t\tgroup: '4_search',\n\t\t\t\t\torder: 10,\n\t\t\t\t\twhen: ContextKeyExpr.and(ExplorerFolderContext)\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, resource?: URI) {\n\t\tawait searchWithFolderCommand(accessor, true, true, resource);\n\t}\n});\n\nregisterAction2(class FindInWorkspaceAction extends Action2 {\n\t// from explorer\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.FindInWorkspaceId,\n\t\t\ttitle: nls.localize2('findInWorkspace', \"Find in Workspace...\"),\n\t\t\tcategory,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.ExplorerContext,\n\t\t\t\t\tgroup: '4_search',\n\t\t\t\t\torder: 10,\n\t\t\t\t\twhen: ContextKeyExpr.and(ExplorerRootContext, ExplorerFolderContext.toNegated())\n\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst searchConfig = accessor.get(IConfigurationService).getValue<ISearchConfiguration>().search;\n\t\tconst mode = searchConfig.mode;\n\n\t\tif (mode === 'view') {\n\t\t\tconst searchView = await openSearchView(accessor.get(IViewsService), true);\n\t\t\tsearchView?.searchInFolders();\n\t\t}\n\t\telse {\n\t\t\treturn accessor.get(ICommandService).executeCommand(SearchEditorConstants.OpenEditorCommandId, {\n\t\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t\t\tfilesToInclude: '',\n\t\t\t});\n\t\t}\n\t}\n});\n\n//#region Helpers\nfunction expandSelectSubtree(accessor: ServicesAccessor) {\n\tconst viewsService = accessor.get(IViewsService);\n\tconst searchView = getSearchView(viewsService);\n\tif (searchView) {\n\t\tconst viewer = searchView.getControl();\n\t\tconst selected = viewer.getFocus()[0];\n\t\tviewer.expand(selected, true);\n\t}\n}\n\nasync function searchWithFolderCommand(accessor: ServicesAccessor, isFromExplorer: boolean, isIncludes: boolean, resource?: URI, folderMatch?: FolderMatchWithResource) {\n\tconst fileService = accessor.get(IFileService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst contextService = accessor.get(IWorkspaceContextService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst searchConfig = accessor.get(IConfigurationService).getValue<ISearchConfiguration>().search;\n\tconst mode = searchConfig.mode;\n\n\tlet resources: URI[];\n\n\tif (isFromExplorer) {\n\t\tresources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IExplorerService));\n\t} else {\n\t\tconst searchView = getSearchView(viewsService);\n\t\tif (!searchView) {\n\t\t\treturn;\n\t\t}\n\t\tresources = getMultiSelectedSearchResources(searchView.getControl(), folderMatch, searchConfig);\n\t}\n\n\tconst resolvedResources = fileService.resolveAll(resources.map(resource => ({ resource }))).then(results => {\n\t\tconst folders: URI[] = [];\n\t\tresults.forEach(result => {\n\t\t\tif (result.success && result.stat) {\n\t\t\t\tfolders.push(result.stat.isDirectory ? result.stat.resource : dirname(result.stat.resource));\n\t\t\t}\n\t\t});\n\t\treturn resolveResourcesForSearchIncludes(folders, contextService);\n\t});\n\n\tif (mode === 'view') {\n\t\tconst searchView = await openSearchView(viewsService, true);\n\t\tif (resources && resources.length && searchView) {\n\t\t\tif (isIncludes) {\n\t\t\t\tsearchView.searchInFolders(await resolvedResources);\n\t\t\t} else {\n\t\t\t\tsearchView.searchOutsideOfFolders(await resolvedResources);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\tif (isIncludes) {\n\t\t\treturn commandService.executeCommand(SearchEditorConstants.OpenEditorCommandId, {\n\t\t\t\tfilesToInclude: (await resolvedResources).join(', '),\n\t\t\t\tshowIncludesExcludes: true,\n\t\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\treturn commandService.executeCommand(SearchEditorConstants.OpenEditorCommandId, {\n\t\t\t\tfilesToExclude: (await resolvedResources).join(', '),\n\t\t\t\tshowIncludesExcludes: true,\n\t\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction getMultiSelectedSearchResources(viewer: WorkbenchCompressibleObjectTree<RenderableMatch, void>, currElement: RenderableMatch | undefined, sortConfig: ISearchConfigurationProperties): URI[] {\n\treturn getElementsToOperateOn(viewer, currElement, sortConfig)\n\t\t.map((renderableMatch) => ((renderableMatch instanceof Match) ? null : renderableMatch.resource))\n\t\t.filter((renderableMatch): renderableMatch is URI => (renderableMatch !== null));\n}\n\nexport async function findInFilesCommand(accessor: ServicesAccessor, _args: IFindInFilesArgs = {}) {\n\n\tconst searchConfig = accessor.get(IConfigurationService).getValue<ISearchConfiguration>().search;\n\tconst viewsService = accessor.get(IViewsService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst args: IFindInFilesArgs = {};\n\tif (Object.keys(_args).length !== 0) {\n\t\t// resolve variables in the same way as in\n\t\t// https://github.com/microsoft/vscode/blob/8b76efe9d317d50cb5b57a7658e09ce6ebffaf36/src/vs/workbench/contrib/searchEditor/browser/searchEditorActions.ts#L152-L158\n\t\tconst configurationResolverService = accessor.get(IConfigurationResolverService);\n\t\tconst historyService = accessor.get(IHistoryService);\n\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\tconst activeWorkspaceRootUri = historyService.getLastActiveWorkspaceRoot();\n\t\tconst filteredActiveWorkspaceRootUri = activeWorkspaceRootUri?.scheme === Schemas.file || activeWorkspaceRootUri?.scheme === Schemas.vscodeRemote ? activeWorkspaceRootUri : undefined;\n\t\tconst lastActiveWorkspaceRoot = filteredActiveWorkspaceRootUri ? workspaceContextService.getWorkspaceFolder(filteredActiveWorkspaceRootUri) ?? undefined : undefined;\n\n\t\tfor (const entry of Object.entries(_args)) {\n\t\t\tconst name = entry[0];\n\t\t\tconst value = entry[1];\n\t\t\tif (value !== undefined) {\n\t\t\t\t(args as any)[name as any] = (typeof value === 'string') ? await configurationResolverService.resolveAsync(lastActiveWorkspaceRoot, value) : value;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst mode = searchConfig.mode;\n\tif (mode === 'view') {\n\t\topenSearchView(viewsService, false).then(openedView => {\n\t\t\tif (openedView) {\n\t\t\t\tconst searchAndReplaceWidget = openedView.searchAndReplaceWidget;\n\t\t\t\tsearchAndReplaceWidget.toggleReplace(typeof args.replace === 'string');\n\t\t\t\tlet updatedText = false;\n\t\t\t\tif (typeof args.query !== 'string') {\n\t\t\t\t\tupdatedText = openedView.updateTextFromFindWidgetOrSelection({ allowUnselectedWord: typeof args.replace !== 'string' });\n\t\t\t\t}\n\t\t\t\topenedView.setSearchParameters(args);\n\t\t\t\tif (typeof args.showIncludesExcludes === 'boolean') {\n\t\t\t\t\topenedView.toggleQueryDetails(false, args.showIncludesExcludes);\n\t\t\t\t}\n\n\t\t\t\topenedView.searchAndReplaceWidget.focus(undefined, updatedText, updatedText);\n\t\t\t}\n\t\t});\n\t} else {\n\t\tconst convertArgs = (args: IFindInFilesArgs): OpenSearchEditorArgs => ({\n\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t\tquery: args.query,\n\t\t\tfilesToInclude: args.filesToInclude,\n\t\t\tfilesToExclude: args.filesToExclude,\n\t\t\tmatchWholeWord: args.matchWholeWord,\n\t\t\tisCaseSensitive: args.isCaseSensitive,\n\t\t\tisRegexp: args.isRegex,\n\t\t\tuseExcludeSettingsAndIgnoreFiles: args.useExcludeSettingsAndIgnoreFiles,\n\t\t\tonlyOpenEditors: args.onlyOpenEditors,\n\t\t\tshowIncludesExcludes: !!(args.filesToExclude || args.filesToExclude || !args.useExcludeSettingsAndIgnoreFiles),\n\t\t});\n\t\tcommandService.executeCommand(SearchEditorConstants.OpenEditorCommandId, convertArgs(args));\n\t}\n}\n//#endregion\n"],
  "mappings": ";;AAIA,SAAS,eAAe;AACxB,YAAY,SAAS;AACrB,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,SAAS,wBAAwB;AACjC,SAAS,cAAc,uCAAuC;AAC9D,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,YAAY,eAAe;AAC3B,YAAY,2BAA2B;AACvC,SAAS,WAAW,yBAAyB,OAAO,uBAAuB;AAC3E,SAAS,4BAA4B;AACrC,SAAS,sBAAsB,sCAAsC;AACrE,SAAS,WAAW;AACpB,SAAS,sBAAsB;AAC/B,SAAS,SAAS,QAAQ,uBAAuB;AACjD,SAAS,wBAAwB;AACjC,SAAS,SAAS,cAAc;AAChC,SAAS,yCAAyC;AAClD,SAAS,2BAA2B,wBAAwB;AAC5D,SAAS,oBAAoB;AAC7B,SAAS,gCAAgC;AACzC,SAAS,uBAAuB,qBAAqB,6BAA6B,cAAc,wBAAwB;AACxH,SAAS,iCAAiC;AAC1C,SAAS,iCAAiC;AAC1C,SAAS,yBAAyB;AAClC,SAAS,UAAU,wBAAwB,eAAe,sBAAsB;AAChF,SAAS,qCAAqC;AAC9C,SAAS,uBAAuB;AAChC,SAAS,eAAe;AACxB,SAAS,4BAA4B;AACrC,SAAS,sBAAsB;AAoB/B,gBAAgB,MAAM,qCAAqC,QAAQ;AAAA,EAvDnE,OAuDmE;AAAA;AAAA;AAAA,EAClE,cAAc;AACb,UAAM;AAAA,MACL,IAAI,UAAU,iBAAiB;AAAA,MAC/B,OAAO,IAAI,UAAU,2BAA2B,2BAA2B;AAAA,MAC3E;AAAA,MACA,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,MAAM,eAAe,IAAI,UAAU,cAAc,sBAAsB,UAAU,cAAc,sBAAsB;AAAA,QACrH,SAAS,OAAO,QAAQ,OAAO,MAAM,QAAQ;AAAA,MAC9C;AAAA,MACA,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,UACP,MAAM,eAAe,IAAI,UAAU,cAAc,sBAAsB;AAAA,QACxE;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACA,MAAM,IAAI,UAA4B,aAAuC;AAC5E,UAAM,wBAAwB,UAAU,OAAO,MAAM,QAAW,WAAW;AAAA,EAC5E;AACD,CAAC;AAGD,gBAAgB,MAAM,wCAAwC,QAAQ;AAAA,EAlFtE,OAkFsE;AAAA;AAAA;AAAA,EACrE,cACE;AACD,UAAM;AAAA,MACL,IAAI,UAAU,iBAAiB;AAAA,MAC/B,OAAO,IAAI,SAAS,4BAA4B,oBAAoB;AAAA,MACpE;AAAA,MACA,MAAM,CAAC;AAAA,QACN,IAAI,OAAO;AAAA,QACX,MAAM,eAAe;AAAA,UACpB,UAAU,cAAc;AAAA,UACxB,UAAU,cAAc;AAAA,QACzB;AAAA,QACA,OAAO;AAAA,QACP,OAAO;AAAA,MACR,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AAAA,EAES,IAAI,UAAe;AAC3B,wBAAoB,QAAQ;AAAA,EAC7B;AACD,CAAC;AAED,gBAAgB,MAAM,sCAAsC,QAAQ;AAAA,EA1GpE,OA0GoE;AAAA;AAAA;AAAA,EACnE,cAAc;AACb,UAAM;AAAA,MACL,IAAI,UAAU,iBAAiB;AAAA,MAC/B,OAAO,IAAI,UAAU,2BAA2B,4BAA4B;AAAA,MAC5E;AAAA,MACA,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,UACP,MAAM,eAAe,IAAI,UAAU,cAAc,sBAAsB;AAAA,QACxE;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACA,MAAM,IAAI,UAA4B,aAAuC;AAC5E,UAAM,wBAAwB,UAAU,OAAO,OAAO,QAAW,WAAW;AAAA,EAC7E;AACD,CAAC;AAED,gBAAgB,MAAM,8CAA8C,QAAQ;AAAA,EA/H5E,OA+H4E;AAAA;AAAA;AAAA,EAE3E,cACE;AACD,UAAM;AAAA,MACL,IAAI,UAAU,iBAAiB;AAAA,MAC/B,OAAO,IAAI,UAAU,mBAAmB,yBAAyB;AAAA,MACjE;AAAA,MACA,MAAM,CAAC;AAAA,QACN,IAAI,OAAO;AAAA,QACX,MAAM,eAAe,IAAI,UAAU,cAAc,cAAc,UAAU,cAAc,gBAAgB;AAAA,QACvG,OAAO;AAAA,QACP,OAAO;AAAA,MACR,CAAC;AAAA,IACF,CAAC;AAAA,EAEF;AAAA,EAEA,MAAe,IAAI,UAA4B,MAAyB;AACvE,UAAM,uBAAuB,SAAS,IAAI,yBAAyB;AACnE,UAAM,kBAAkB,SAAS,IAAI,gBAAgB;AACrD,UAAM,iBAAiB,SAAS,IAAI,wBAAwB;AAE5D,UAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,QAAI,CAAC,YAAY;AAChB;AAAA,IACD;AAEA,QAAI;AACJ,QAAI,EAAE,gBAAgB,YAAY;AACjC,aAAO,WAAW,WAAW,EAAE,SAAS,EAAE,CAAC;AAAA,IAC5C;AACA,QAAI,gBAAgB,WAAW;AAC9B,kBAAY;AAAA,IACb,OAAO;AACN;AAAA,IACD;AAEA,yBAAqB,kBAAkB,kBAAkB,sBAAsB,SAAS,KAAK,EAAE,KAAK,CAAC,YAAY;AAChH,UAAI,CAAC,SAAS;AACb;AAAA,MACD;AAEA,YAAM,wBAAwB,QAAQ,qBAAqB;AAC3D,YAAM,MAAM,UAAU;AACtB,UAAI,OAAO,eAAe,kBAAkB,GAAG,GAAG;AACjD,cAAM,eAAe,sBAAsB,gBAAgB;AAC3D,qBAAa,YAAY,IAAI;AAC7B,wBAAgB,OAAO,KAAK,IAAI,EAAE,KAAK,MAAM,aAAa,MAAM,GAAG,iBAAiB;AAAA,MACrF;AAAA,IACD,CAAC;AAAA,EACF;AACD,CAAC;AAGD,gBAAgB,MAAM,0BAA0B,QAAQ;AAAA,EAtLxD,OAsLwD;AAAA;AAAA;AAAA,EAEvD,cACE;AACD,UAAM;AAAA,MACL,IAAI,UAAU,iBAAiB;AAAA,MAC/B,OAAO;AAAA,QACN,GAAG,IAAI,UAAU,eAAe,eAAe;AAAA,QAC/C,eAAe,IAAI,SAAS,EAAE,KAAK,iBAAiB,SAAS,CAAC,uBAAuB,EAAE,GAAG,iBAAiB;AAAA,MAC5G;AAAA,MACA,UAAU;AAAA,QACT,aAAa,IAAI,SAAS,2BAA2B,yBAAyB;AAAA,QAC9E,MAAM;AAAA,UACL;AAAA,YACC,MAAM,IAAI,SAAS,oBAAoB,iCAAiC;AAAA,YACxE,QAAQ;AAAA,cACP,MAAM;AAAA,cACN,YAAY;AAAA,gBACX,OAAO,EAAE,QAAQ,SAAS;AAAA,gBAC1B,SAAS,EAAE,QAAQ,SAAS;AAAA,gBAC5B,cAAc,EAAE,QAAQ,UAAU;AAAA,gBAClC,eAAe,EAAE,QAAQ,UAAU;AAAA,gBACnC,gBAAgB,EAAE,QAAQ,SAAS;AAAA,gBACnC,gBAAgB,EAAE,QAAQ,SAAS;AAAA,gBACnC,SAAS,EAAE,QAAQ,UAAU;AAAA,gBAC7B,iBAAiB,EAAE,QAAQ,UAAU;AAAA,gBACrC,gBAAgB,EAAE,QAAQ,UAAU;AAAA,gBACpC,kCAAkC,EAAE,QAAQ,UAAU;AAAA,gBACtD,iBAAiB,EAAE,QAAQ,UAAU;AAAA,gBACrC,sBAAsB,EAAE,QAAQ,UAAU;AAAA,cAC3C;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,MACA,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,MAClD;AAAA,MACA,MAAM,CAAC;AAAA,QACN,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,OAAO;AAAA,MACR,CAAC;AAAA,MACD,IAAI;AAAA,IACL,CAAC;AAAA,EAEF;AAAA,EAEA,MAAe,IAAI,UAA4B,OAAyB,CAAC,GAAiB;AACzF,uBAAmB,UAAU,IAAI;AAAA,EAClC;AACD,CAAC;AAED,gBAAgB,MAAM,2BAA2B,QAAQ;AAAA,EA7OzD,OA6OyD;AAAA;AAAA;AAAA;AAAA,EAExD,cAAc;AACb,UAAM;AAAA,MACL,IAAI,UAAU,iBAAiB;AAAA,MAC/B,OAAO,IAAI,UAAU,gBAAgB,mBAAmB;AAAA,MACxD;AAAA,MACA,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,MAAM,eAAe,IAAI,6BAA6B,qBAAqB;AAAA,QAC3E,SAAS,OAAO,QAAQ,OAAO,MAAM,QAAQ;AAAA,MAC9C;AAAA,MACA,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,UACP,MAAM,eAAe,IAAI,qBAAqB;AAAA,QAC/C;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACA,MAAM,IAAI,UAA4B,UAAgB;AACrD,UAAM,wBAAwB,UAAU,MAAM,MAAM,QAAQ;AAAA,EAC7D;AACD,CAAC;AAED,gBAAgB,MAAM,8BAA8B,QAAQ;AAAA,EAxQ5D,OAwQ4D;AAAA;AAAA;AAAA;AAAA,EAE3D,cAAc;AACb,UAAM;AAAA,MACL,IAAI,UAAU,iBAAiB;AAAA,MAC/B,OAAO,IAAI,UAAU,mBAAmB,sBAAsB;AAAA,MAC9D;AAAA,MACA,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,UACP,MAAM,eAAe,IAAI,qBAAqB,sBAAsB,UAAU,CAAC;AAAA,QAEhF;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACA,MAAM,IAAI,UAA4B;AACrC,UAAM,eAAe,SAAS,IAAI,qBAAqB,EAAE,SAA+B,EAAE;AAC1F,UAAM,OAAO,aAAa;AAE1B,QAAI,SAAS,QAAQ;AACpB,YAAM,aAAa,MAAM,eAAe,SAAS,IAAI,aAAa,GAAG,IAAI;AACzE,kBAAY,gBAAgB;AAAA,IAC7B,OACK;AACJ,aAAO,SAAS,IAAI,eAAe,EAAE,eAAe,sBAAsB,qBAAqB;AAAA,QAC9F,UAAU,SAAS,cAAc,QAAQ;AAAA,QACzC,gBAAgB;AAAA,MACjB,CAAC;AAAA,IACF;AAAA,EACD;AACD,CAAC;AAGD,SAAS,oBAAoB,UAA4B;AACxD,QAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,QAAM,aAAa,cAAc,YAAY;AAC7C,MAAI,YAAY;AACf,UAAM,SAAS,WAAW,WAAW;AACrC,UAAM,WAAW,OAAO,SAAS,EAAE,CAAC;AACpC,WAAO,OAAO,UAAU,IAAI;AAAA,EAC7B;AACD;AARS;AAUT,eAAe,wBAAwB,UAA4B,gBAAyB,YAAqB,UAAgB,aAAuC;AACvK,QAAM,cAAc,SAAS,IAAI,YAAY;AAC7C,QAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,QAAM,iBAAiB,SAAS,IAAI,wBAAwB;AAC5D,QAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,QAAM,eAAe,SAAS,IAAI,qBAAqB,EAAE,SAA+B,EAAE;AAC1F,QAAM,OAAO,aAAa;AAE1B,MAAI;AAEJ,MAAI,gBAAgB;AACnB,gBAAY,0BAA0B,UAAU,SAAS,IAAI,YAAY,GAAG,SAAS,IAAI,cAAc,GAAG,SAAS,IAAI,oBAAoB,GAAG,SAAS,IAAI,gBAAgB,CAAC;AAAA,EAC7K,OAAO;AACN,UAAM,aAAa,cAAc,YAAY;AAC7C,QAAI,CAAC,YAAY;AAChB;AAAA,IACD;AACA,gBAAY,gCAAgC,WAAW,WAAW,GAAG,aAAa,YAAY;AAAA,EAC/F;AAEA,QAAM,oBAAoB,YAAY,WAAW,UAAU,IAAI,CAAAA,eAAa,EAAE,UAAAA,UAAS,EAAE,CAAC,EAAE,KAAK,aAAW;AAC3G,UAAM,UAAiB,CAAC;AACxB,YAAQ,QAAQ,YAAU;AACzB,UAAI,OAAO,WAAW,OAAO,MAAM;AAClC,gBAAQ,KAAK,OAAO,KAAK,cAAc,OAAO,KAAK,WAAW,QAAQ,OAAO,KAAK,QAAQ,CAAC;AAAA,MAC5F;AAAA,IACD,CAAC;AACD,WAAO,kCAAkC,SAAS,cAAc;AAAA,EACjE,CAAC;AAED,MAAI,SAAS,QAAQ;AACpB,UAAM,aAAa,MAAM,eAAe,cAAc,IAAI;AAC1D,QAAI,aAAa,UAAU,UAAU,YAAY;AAChD,UAAI,YAAY;AACf,mBAAW,gBAAgB,MAAM,iBAAiB;AAAA,MACnD,OAAO;AACN,mBAAW,uBAAuB,MAAM,iBAAiB;AAAA,MAC1D;AAAA,IACD;AACA,WAAO;AAAA,EACR,OAAO;AACN,QAAI,YAAY;AACf,aAAO,eAAe,eAAe,sBAAsB,qBAAqB;AAAA,QAC/E,iBAAiB,MAAM,mBAAmB,KAAK,IAAI;AAAA,QACnD,sBAAsB;AAAA,QACtB,UAAU,SAAS,cAAc,QAAQ;AAAA,MAC1C,CAAC;AAAA,IACF,OACK;AACJ,aAAO,eAAe,eAAe,sBAAsB,qBAAqB;AAAA,QAC/E,iBAAiB,MAAM,mBAAmB,KAAK,IAAI;AAAA,QACnD,sBAAsB;AAAA,QACtB,UAAU,SAAS,cAAc,QAAQ;AAAA,MAC1C,CAAC;AAAA,IACF;AAAA,EACD;AACD;AAxDe;AA0Df,SAAS,gCAAgC,QAAgE,aAA0C,YAAmD;AACrM,SAAO,uBAAuB,QAAQ,aAAa,UAAU,EAC3D,IAAI,CAAC,oBAAsB,2BAA2B,QAAS,OAAO,gBAAgB,QAAS,EAC/F,OAAO,CAAC,oBAA6C,oBAAoB,IAAK;AACjF;AAJS;AAMT,eAAsB,mBAAmB,UAA4B,QAA0B,CAAC,GAAG;AAElG,QAAM,eAAe,SAAS,IAAI,qBAAqB,EAAE,SAA+B,EAAE;AAC1F,QAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,QAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,QAAM,OAAyB,CAAC;AAChC,MAAI,OAAO,KAAK,KAAK,EAAE,WAAW,GAAG;AAGpC,UAAM,+BAA+B,SAAS,IAAI,6BAA6B;AAC/E,UAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,UAAM,0BAA0B,SAAS,IAAI,wBAAwB;AACrE,UAAM,yBAAyB,eAAe,2BAA2B;AACzE,UAAM,iCAAiC,wBAAwB,WAAW,QAAQ,QAAQ,wBAAwB,WAAW,QAAQ,eAAe,yBAAyB;AAC7K,UAAM,0BAA0B,iCAAiC,wBAAwB,mBAAmB,8BAA8B,KAAK,SAAY;AAE3J,eAAW,SAAS,OAAO,QAAQ,KAAK,GAAG;AAC1C,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,QAAQ,MAAM,CAAC;AACrB,UAAI,UAAU,QAAW;AACxB,QAAC,KAAa,IAAW,IAAK,OAAO,UAAU,WAAY,MAAM,6BAA6B,aAAa,yBAAyB,KAAK,IAAI;AAAA,MAC9I;AAAA,IACD;AAAA,EACD;AAEA,QAAM,OAAO,aAAa;AAC1B,MAAI,SAAS,QAAQ;AACpB,mBAAe,cAAc,KAAK,EAAE,KAAK,gBAAc;AACtD,UAAI,YAAY;AACf,cAAM,yBAAyB,WAAW;AAC1C,+BAAuB,cAAc,OAAO,KAAK,YAAY,QAAQ;AACrE,YAAI,cAAc;AAClB,YAAI,OAAO,KAAK,UAAU,UAAU;AACnC,wBAAc,WAAW,oCAAoC,EAAE,qBAAqB,OAAO,KAAK,YAAY,SAAS,CAAC;AAAA,QACvH;AACA,mBAAW,oBAAoB,IAAI;AACnC,YAAI,OAAO,KAAK,yBAAyB,WAAW;AACnD,qBAAW,mBAAmB,OAAO,KAAK,oBAAoB;AAAA,QAC/D;AAEA,mBAAW,uBAAuB,MAAM,QAAW,aAAa,WAAW;AAAA,MAC5E;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,cAAc,wBAACC,WAAkD;AAAA,MACtE,UAAU,SAAS,cAAc,QAAQ;AAAA,MACzC,OAAOA,MAAK;AAAA,MACZ,gBAAgBA,MAAK;AAAA,MACrB,gBAAgBA,MAAK;AAAA,MACrB,gBAAgBA,MAAK;AAAA,MACrB,iBAAiBA,MAAK;AAAA,MACtB,UAAUA,MAAK;AAAA,MACf,kCAAkCA,MAAK;AAAA,MACvC,iBAAiBA,MAAK;AAAA,MACtB,sBAAsB,CAAC,EAAEA,MAAK,kBAAkBA,MAAK,kBAAkB,CAACA,MAAK;AAAA,IAC9E,IAXoB;AAYpB,mBAAe,eAAe,sBAAsB,qBAAqB,YAAY,IAAI,CAAC;AAAA,EAC3F;AACD;AA1DsB;",
  "names": ["resource", "args"]
}
