{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchResultsView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../base/browser/dom.js\";\nimport { CountBadge } from \"../../../../base/browser/ui/countBadge/countBadge.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport type { IListVirtualDelegate } from \"../../../../base/browser/ui/list/list.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport type { ICompressedTreeNode } from \"../../../../base/browser/ui/tree/compressedObjectTreeModel.js\";\nimport type { ICompressibleTreeRenderer } from \"../../../../base/browser/ui/tree/objectTree.js\";\nimport type { ITreeNode } from \"../../../../base/browser/ui/tree/tree.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport * as paths from \"../../../../base/common/path.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tHiddenItemStrategy,\n\tMenuWorkbenchToolBar,\n} from \"../../../../platform/actions/browser/toolbar.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { FileKind } from \"../../../../platform/files/common/files.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { defaultCountBadgeStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport type {\n\tIResourceLabel,\n\tResourceLabels,\n} from \"../../../browser/labels.js\";\nimport type { ISearchConfigurationProperties } from \"../../../services/search/common/search.js\";\nimport { SearchContext } from \"../common/constants.js\";\nimport type { ISearchActionContext } from \"./searchActionsRemoveReplace.js\";\nimport {\n\tFileMatch,\n\tFolderMatch,\n\tFolderMatchNoRoot,\n\tFolderMatchWorkspaceRoot,\n\tMatch,\n\tMatchInNotebook,\n\ttype RenderableMatch,\n\ttype SearchModel,\n} from \"./searchModel.js\";\nimport type { SearchView } from \"./searchView.js\";\n\ninterface IFolderMatchTemplate {\n\tlabel: IResourceLabel;\n\tbadge: CountBadge;\n\tactions: MenuWorkbenchToolBar;\n\tdisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n\tcontextKeyService: IContextKeyService;\n}\n\ninterface IFileMatchTemplate {\n\tel: HTMLElement;\n\tlabel: IResourceLabel;\n\tbadge: CountBadge;\n\tactions: MenuWorkbenchToolBar;\n\tdisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n\tcontextKeyService: IContextKeyService;\n}\n\ninterface IMatchTemplate {\n\tlineNumber: HTMLElement;\n\tparent: HTMLElement;\n\tbefore: HTMLElement;\n\tmatch: HTMLElement;\n\treplace: HTMLElement;\n\tafter: HTMLElement;\n\tactions: MenuWorkbenchToolBar;\n\tdisposables: DisposableStore;\n\tcontextKeyService: IContextKeyService;\n}\n\nexport class SearchDelegate implements IListVirtualDelegate<RenderableMatch> {\n\tpublic static ITEM_HEIGHT = 22;\n\n\tgetHeight(element: RenderableMatch): number {\n\t\treturn SearchDelegate.ITEM_HEIGHT;\n\t}\n\n\tgetTemplateId(element: RenderableMatch): string {\n\t\tif (element instanceof FolderMatch) {\n\t\t\treturn FolderMatchRenderer.TEMPLATE_ID;\n\t\t} else if (element instanceof FileMatch) {\n\t\t\treturn FileMatchRenderer.TEMPLATE_ID;\n\t\t} else if (element instanceof Match) {\n\t\t\treturn MatchRenderer.TEMPLATE_ID;\n\t\t}\n\n\t\tconsole.error(\"Invalid search tree element\", element);\n\t\tthrow new Error(\"Invalid search tree element\");\n\t}\n}\nexport class FolderMatchRenderer\n\textends Disposable\n\timplements ICompressibleTreeRenderer<FolderMatch, any, IFolderMatchTemplate>\n{\n\tstatic readonly TEMPLATE_ID = \"folderMatch\";\n\n\treadonly templateId = FolderMatchRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\tprivate searchView: SearchView,\n\t\tprivate labels: ResourceLabels,\n\t\t@IWorkspaceContextService\n\t\tprotected contextService: IWorkspaceContextService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<FolderMatch>, any>,\n\t\tindex: number,\n\t\ttemplateData: IFolderMatchTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\tconst compressed = node.element;\n\t\tconst folder = compressed.elements[compressed.elements.length - 1];\n\t\tconst label = compressed.elements.map((e) => e.name());\n\n\t\tif (folder.resource) {\n\t\t\tconst fileKind =\n\t\t\t\tfolder instanceof FolderMatchWorkspaceRoot\n\t\t\t\t\t? FileKind.ROOT_FOLDER\n\t\t\t\t\t: FileKind.FOLDER;\n\t\t\ttemplateData.label.setResource(\n\t\t\t\t{ resource: folder.resource, name: label },\n\t\t\t\t{\n\t\t\t\t\tfileKind,\n\t\t\t\t\tseparator: this.labelService.getSeparator(\n\t\t\t\t\t\tfolder.resource.scheme,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t);\n\t\t} else {\n\t\t\ttemplateData.label.setLabel(\n\t\t\t\tnls.localize(\"searchFolderMatch.other.label\", \"Other files\"),\n\t\t\t);\n\t\t}\n\n\t\tthis.renderFolderDetails(folder, templateData);\n\t}\n\n\trenderTemplate(container: HTMLElement): IFolderMatchTemplate {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst folderMatchElement = DOM.append(container, DOM.$(\".foldermatch\"));\n\t\tconst label = this.labels.create(folderMatchElement, {\n\t\t\tsupportDescriptionHighlights: true,\n\t\t\tsupportHighlights: true,\n\t\t});\n\t\tdisposables.add(label);\n\t\tconst badge = new CountBadge(\n\t\t\tDOM.append(folderMatchElement, DOM.$(\".badge\")),\n\t\t\t{},\n\t\t\tdefaultCountBadgeStyles,\n\t\t);\n\t\tconst actionBarContainer = DOM.append(\n\t\t\tfolderMatchElement,\n\t\t\tDOM.$(\".actionBarContainer\"),\n\t\t);\n\n\t\tconst elementDisposables = new DisposableStore();\n\t\tdisposables.add(elementDisposables);\n\n\t\tconst contextKeyServiceMain = disposables.add(\n\t\t\tthis.contextKeyService.createScoped(container),\n\t\t);\n\t\tSearchContext.MatchFocusKey.bindTo(contextKeyServiceMain).set(false);\n\t\tSearchContext.FileFocusKey.bindTo(contextKeyServiceMain).set(false);\n\t\tSearchContext.FolderFocusKey.bindTo(contextKeyServiceMain).set(true);\n\n\t\tconst instantiationService = this._register(\n\t\t\tthis.instantiationService.createChild(\n\t\t\t\tnew ServiceCollection([\n\t\t\t\t\tIContextKeyService,\n\t\t\t\t\tcontextKeyServiceMain,\n\t\t\t\t]),\n\t\t\t),\n\t\t);\n\t\tconst actions = disposables.add(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tMenuWorkbenchToolBar,\n\t\t\t\tactionBarContainer,\n\t\t\t\tMenuId.SearchActionMenu,\n\t\t\t\t{\n\t\t\t\t\tmenuOptions: {\n\t\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t\t},\n\t\t\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\t\t\ttoolbarOptions: {\n\t\t\t\t\t\tprimaryGroup: (g: string) => /^inline/.test(g),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn {\n\t\t\tlabel,\n\t\t\tbadge,\n\t\t\tactions,\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t\tcontextKeyService: contextKeyServiceMain,\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<FolderMatch, any>,\n\t\tindex: number,\n\t\ttemplateData: IFolderMatchTemplate,\n\t): void {\n\t\tconst folderMatch = node.element;\n\t\tif (folderMatch.resource) {\n\t\t\tconst workspaceFolder = this.contextService.getWorkspaceFolder(\n\t\t\t\tfolderMatch.resource,\n\t\t\t);\n\t\t\tif (\n\t\t\t\tworkspaceFolder &&\n\t\t\t\tisEqual(workspaceFolder.uri, folderMatch.resource)\n\t\t\t) {\n\t\t\t\ttemplateData.label.setFile(folderMatch.resource, {\n\t\t\t\t\tfileKind: FileKind.ROOT_FOLDER,\n\t\t\t\t\thidePath: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttemplateData.label.setFile(folderMatch.resource, {\n\t\t\t\t\tfileKind: FileKind.FOLDER,\n\t\t\t\t\thidePath: this.searchView.isTreeLayoutViewVisible,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttemplateData.label.setLabel(\n\t\t\t\tnls.localize(\"searchFolderMatch.other.label\", \"Other files\"),\n\t\t\t);\n\t\t}\n\n\t\tSearchContext.IsEditableItemKey.bindTo(\n\t\t\ttemplateData.contextKeyService,\n\t\t).set(!folderMatch.hasOnlyReadOnlyMatches());\n\n\t\ttemplateData.elementDisposables.add(\n\t\t\tfolderMatch.onChange(() => {\n\t\t\t\tSearchContext.IsEditableItemKey.bindTo(\n\t\t\t\t\ttemplateData.contextKeyService,\n\t\t\t\t).set(!folderMatch.hasOnlyReadOnlyMatches());\n\t\t\t}),\n\t\t);\n\n\t\tthis.renderFolderDetails(folderMatch, templateData);\n\t}\n\n\tdisposeElement(\n\t\telement: ITreeNode<RenderableMatch, any>,\n\t\tindex: number,\n\t\ttemplateData: IFolderMatchTemplate,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<FolderMatch>, any>,\n\t\tindex: number,\n\t\ttemplateData: IFolderMatchTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFolderMatchTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n\n\tprivate renderFolderDetails(\n\t\tfolder: FolderMatch,\n\t\ttemplateData: IFolderMatchTemplate,\n\t) {\n\t\tconst count = folder.recursiveMatchCount();\n\t\ttemplateData.badge.setCount(count);\n\t\ttemplateData.badge.setTitleFormat(\n\t\t\tcount > 1\n\t\t\t\t? nls.localize(\"searchFileMatches\", \"{0} files found\", count)\n\t\t\t\t: nls.localize(\"searchFileMatch\", \"{0} file found\", count),\n\t\t);\n\n\t\ttemplateData.actions.context = {\n\t\t\tviewer: this.searchView.getControl(),\n\t\t\telement: folder,\n\t\t} satisfies ISearchActionContext;\n\t}\n}\n\nexport class FileMatchRenderer\n\textends Disposable\n\timplements ICompressibleTreeRenderer<FileMatch, any, IFileMatchTemplate>\n{\n\tstatic readonly TEMPLATE_ID = \"fileMatch\";\n\n\treadonly templateId = FileMatchRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\tprivate searchView: SearchView,\n\t\tprivate labels: ResourceLabels,\n\t\t@IWorkspaceContextService\n\t\tprotected contextService: IWorkspaceContextService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<FileMatch>, any>,\n\t\tindex: number,\n\t\ttemplateData: IFileMatchTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\tthrow new Error(\"Should never happen since node is incompressible.\");\n\t}\n\n\trenderTemplate(container: HTMLElement): IFileMatchTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = new DisposableStore();\n\t\tdisposables.add(elementDisposables);\n\t\tconst fileMatchElement = DOM.append(container, DOM.$(\".filematch\"));\n\t\tconst label = this.labels.create(fileMatchElement);\n\t\tdisposables.add(label);\n\t\tconst badge = new CountBadge(\n\t\t\tDOM.append(fileMatchElement, DOM.$(\".badge\")),\n\t\t\t{},\n\t\t\tdefaultCountBadgeStyles,\n\t\t);\n\t\tconst actionBarContainer = DOM.append(\n\t\t\tfileMatchElement,\n\t\t\tDOM.$(\".actionBarContainer\"),\n\t\t);\n\n\t\tconst contextKeyServiceMain = disposables.add(\n\t\t\tthis.contextKeyService.createScoped(container),\n\t\t);\n\t\tSearchContext.MatchFocusKey.bindTo(contextKeyServiceMain).set(false);\n\t\tSearchContext.FileFocusKey.bindTo(contextKeyServiceMain).set(true);\n\t\tSearchContext.FolderFocusKey.bindTo(contextKeyServiceMain).set(false);\n\n\t\tconst instantiationService = this._register(\n\t\t\tthis.instantiationService.createChild(\n\t\t\t\tnew ServiceCollection([\n\t\t\t\t\tIContextKeyService,\n\t\t\t\t\tcontextKeyServiceMain,\n\t\t\t\t]),\n\t\t\t),\n\t\t);\n\t\tconst actions = disposables.add(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tMenuWorkbenchToolBar,\n\t\t\t\tactionBarContainer,\n\t\t\t\tMenuId.SearchActionMenu,\n\t\t\t\t{\n\t\t\t\t\tmenuOptions: {\n\t\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t\t},\n\t\t\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\t\t\ttoolbarOptions: {\n\t\t\t\t\t\tprimaryGroup: (g: string) => /^inline/.test(g),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn {\n\t\t\tel: fileMatchElement,\n\t\t\tlabel,\n\t\t\tbadge,\n\t\t\tactions,\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t\tcontextKeyService: contextKeyServiceMain,\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<FileMatch, any>,\n\t\tindex: number,\n\t\ttemplateData: IFileMatchTemplate,\n\t): void {\n\t\tconst fileMatch = node.element;\n\t\ttemplateData.el.setAttribute(\n\t\t\t\"data-resource\",\n\t\t\tfileMatch.resource.toString(),\n\t\t);\n\n\t\tconst decorationConfig =\n\t\t\tthis.configurationService.getValue<ISearchConfigurationProperties>(\n\t\t\t\t\"search\",\n\t\t\t).decorations;\n\t\ttemplateData.label.setFile(fileMatch.resource, {\n\t\t\thidePath:\n\t\t\t\tthis.searchView.isTreeLayoutViewVisible &&\n\t\t\t\t!(fileMatch.parent() instanceof FolderMatchNoRoot),\n\t\t\thideIcon: false,\n\t\t\tfileDecorations: {\n\t\t\t\tcolors: decorationConfig.colors,\n\t\t\t\tbadges: decorationConfig.badges,\n\t\t\t},\n\t\t});\n\t\tconst count = fileMatch.count();\n\t\ttemplateData.badge.setCount(count);\n\t\ttemplateData.badge.setTitleFormat(\n\t\t\tcount > 1\n\t\t\t\t? nls.localize(\"searchMatches\", \"{0} matches found\", count)\n\t\t\t\t: nls.localize(\"searchMatch\", \"{0} match found\", count),\n\t\t);\n\n\t\ttemplateData.actions.context = {\n\t\t\tviewer: this.searchView.getControl(),\n\t\t\telement: fileMatch,\n\t\t} satisfies ISearchActionContext;\n\n\t\tSearchContext.IsEditableItemKey.bindTo(\n\t\t\ttemplateData.contextKeyService,\n\t\t).set(!fileMatch.hasOnlyReadOnlyMatches());\n\n\t\ttemplateData.elementDisposables.add(\n\t\t\tfileMatch.onChange(() => {\n\t\t\t\tSearchContext.IsEditableItemKey.bindTo(\n\t\t\t\t\ttemplateData.contextKeyService,\n\t\t\t\t).set(!fileMatch.hasOnlyReadOnlyMatches());\n\t\t\t}),\n\t\t);\n\n\t\t// when hidesExplorerArrows: true, then the file nodes should still have a twistie because it would otherwise\n\t\t// be hard to tell whether the node is collapsed or expanded.\n\t\tconst twistieContainer =\n\t\t\ttemplateData.el.parentElement?.parentElement?.querySelector(\n\t\t\t\t\".monaco-tl-twistie\",\n\t\t\t);\n\t\ttwistieContainer?.classList.add(\"force-twistie\");\n\t}\n\n\tdisposeElement(\n\t\telement: ITreeNode<RenderableMatch, any>,\n\t\tindex: number,\n\t\ttemplateData: IFileMatchTemplate,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFileMatchTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\nexport class MatchRenderer\n\textends Disposable\n\timplements ICompressibleTreeRenderer<Match, void, IMatchTemplate>\n{\n\tstatic readonly TEMPLATE_ID = \"match\";\n\n\treadonly templateId = MatchRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\tprivate searchView: SearchView,\n\t\t@IWorkspaceContextService\n\t\tprotected contextService: IWorkspaceContextService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\t}\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<Match>, void>,\n\t\tindex: number,\n\t\ttemplateData: IMatchTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\tthrow new Error(\"Should never happen since node is incompressible.\");\n\t}\n\n\trenderTemplate(container: HTMLElement): IMatchTemplate {\n\t\tcontainer.classList.add(\"linematch\");\n\n\t\tconst lineNumber = DOM.append(container, DOM.$(\"span.matchLineNum\"));\n\t\tconst parent = DOM.append(container, DOM.$(\"a.plain.match\"));\n\t\tconst before = DOM.append(parent, DOM.$(\"span\"));\n\t\tconst match = DOM.append(parent, DOM.$(\"span.findInFileMatch\"));\n\t\tconst replace = DOM.append(parent, DOM.$(\"span.replaceMatch\"));\n\t\tconst after = DOM.append(parent, DOM.$(\"span\"));\n\t\tconst actionBarContainer = DOM.append(\n\t\t\tcontainer,\n\t\t\tDOM.$(\"span.actionBarContainer\"),\n\t\t);\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst contextKeyServiceMain = disposables.add(\n\t\t\tthis.contextKeyService.createScoped(container),\n\t\t);\n\t\tSearchContext.MatchFocusKey.bindTo(contextKeyServiceMain).set(true);\n\t\tSearchContext.FileFocusKey.bindTo(contextKeyServiceMain).set(false);\n\t\tSearchContext.FolderFocusKey.bindTo(contextKeyServiceMain).set(false);\n\n\t\tconst instantiationService = this._register(\n\t\t\tthis.instantiationService.createChild(\n\t\t\t\tnew ServiceCollection([\n\t\t\t\t\tIContextKeyService,\n\t\t\t\t\tcontextKeyServiceMain,\n\t\t\t\t]),\n\t\t\t),\n\t\t);\n\t\tconst actions = disposables.add(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tMenuWorkbenchToolBar,\n\t\t\t\tactionBarContainer,\n\t\t\t\tMenuId.SearchActionMenu,\n\t\t\t\t{\n\t\t\t\t\tmenuOptions: {\n\t\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t\t},\n\t\t\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\t\t\ttoolbarOptions: {\n\t\t\t\t\t\tprimaryGroup: (g: string) => /^inline/.test(g),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn {\n\t\t\tparent,\n\t\t\tbefore,\n\t\t\tmatch,\n\t\t\treplace,\n\t\t\tafter,\n\t\t\tlineNumber,\n\t\t\tactions,\n\t\t\tdisposables,\n\t\t\tcontextKeyService: contextKeyServiceMain,\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<Match, any>,\n\t\tindex: number,\n\t\ttemplateData: IMatchTemplate,\n\t): void {\n\t\tconst match = node.element;\n\t\tconst preview = match.preview();\n\t\tconst replace =\n\t\t\tthis.searchView.model.isReplaceActive() &&\n\t\t\t!!this.searchView.model.replaceString &&\n\t\t\t!(match instanceof MatchInNotebook && match.isReadonly());\n\n\t\ttemplateData.before.textContent = preview.before;\n\t\ttemplateData.match.textContent = preview.inside;\n\t\ttemplateData.match.classList.toggle(\"replace\", replace);\n\t\ttemplateData.replace.textContent = replace ? match.replaceString : \"\";\n\t\ttemplateData.after.textContent = preview.after;\n\n\t\tconst title = (\n\t\t\tpreview.fullBefore +\n\t\t\t(replace ? match.replaceString : preview.inside) +\n\t\t\tpreview.after\n\t\t)\n\t\t\t.trim()\n\t\t\t.substr(0, 999);\n\t\ttemplateData.disposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\ttemplateData.parent,\n\t\t\t\ttitle,\n\t\t\t),\n\t\t);\n\n\t\tSearchContext.IsEditableItemKey.bindTo(\n\t\t\ttemplateData.contextKeyService,\n\t\t).set(!(match instanceof MatchInNotebook && match.isReadonly()));\n\n\t\tconst numLines =\n\t\t\tmatch.range().endLineNumber - match.range().startLineNumber;\n\t\tconst extraLinesStr = numLines > 0 ? `+${numLines}` : \"\";\n\n\t\tconst showLineNumbers =\n\t\t\tthis.configurationService.getValue<ISearchConfigurationProperties>(\n\t\t\t\t\"search\",\n\t\t\t).showLineNumbers;\n\t\tconst lineNumberStr = showLineNumbers\n\t\t\t? `${match.range().startLineNumber}:`\n\t\t\t: \"\";\n\t\ttemplateData.lineNumber.classList.toggle(\n\t\t\t\"show\",\n\t\t\tnumLines > 0 || showLineNumbers,\n\t\t);\n\n\t\ttemplateData.lineNumber.textContent = lineNumberStr + extraLinesStr;\n\t\ttemplateData.disposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\ttemplateData.lineNumber,\n\t\t\t\tthis.getMatchTitle(match, showLineNumbers),\n\t\t\t),\n\t\t);\n\n\t\ttemplateData.actions.context = {\n\t\t\tviewer: this.searchView.getControl(),\n\t\t\telement: match,\n\t\t} satisfies ISearchActionContext;\n\t}\n\n\tdisposeTemplate(templateData: IMatchTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n\n\tprivate getMatchTitle(match: Match, showLineNumbers: boolean): string {\n\t\tconst startLine = match.range().startLineNumber;\n\t\tconst numLines =\n\t\t\tmatch.range().endLineNumber - match.range().startLineNumber;\n\n\t\tconst lineNumStr = showLineNumbers\n\t\t\t? nls.localize(\"lineNumStr\", \"From line {0}\", startLine, numLines) +\n\t\t\t\t\" \"\n\t\t\t: \"\";\n\n\t\tconst numLinesStr =\n\t\t\tnumLines > 0\n\t\t\t\t? \"+ \" + nls.localize(\"numLinesStr\", \"{0} more lines\", numLines)\n\t\t\t\t: \"\";\n\n\t\treturn lineNumStr + numLinesStr;\n\t}\n}\n\nexport class SearchAccessibilityProvider\n\timplements IListAccessibilityProvider<RenderableMatch>\n{\n\tconstructor(\n\t\tprivate searchView: SearchView,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t) {}\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn nls.localize(\"search\", \"Search\");\n\t}\n\n\tgetAriaLabel(element: RenderableMatch): string | null {\n\t\tif (element instanceof FolderMatch) {\n\t\t\tconst count = element\n\t\t\t\t.allDownstreamFileMatches()\n\t\t\t\t.reduce((total, current) => total + current.count(), 0);\n\t\t\treturn element.resource\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"folderMatchAriaLabel\",\n\t\t\t\t\t\t\"{0} matches in folder root {1}, Search result\",\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\telement.name(),\n\t\t\t\t\t)\n\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\"otherFilesAriaLabel\",\n\t\t\t\t\t\t\"{0} matches outside of the workspace, Search result\",\n\t\t\t\t\t\tcount,\n\t\t\t\t\t);\n\t\t}\n\n\t\tif (element instanceof FileMatch) {\n\t\t\tconst path =\n\t\t\t\tthis.labelService.getUriLabel(element.resource, {\n\t\t\t\t\trelative: true,\n\t\t\t\t}) || element.resource.fsPath;\n\n\t\t\treturn nls.localize(\n\t\t\t\t\"fileMatchAriaLabel\",\n\t\t\t\t\"{0} matches in file {1} of folder {2}, Search result\",\n\t\t\t\telement.count(),\n\t\t\t\telement.name(),\n\t\t\t\tpaths.dirname(path),\n\t\t\t);\n\t\t}\n\n\t\tif (element instanceof Match) {\n\t\t\tconst match = <Match>element;\n\t\t\tconst searchModel: SearchModel = this.searchView.model;\n\t\t\tconst replace =\n\t\t\t\tsearchModel.isReplaceActive() && !!searchModel.replaceString;\n\t\t\tconst matchString = match.getMatchString();\n\t\t\tconst range = match.range();\n\t\t\tconst matchText = match.text().substr(0, range.endColumn + 150);\n\t\t\tif (replace) {\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"replacePreviewResultAria\",\n\t\t\t\t\t\"'{0}' at column {1} replace {2} with {3}\",\n\t\t\t\t\tmatchText,\n\t\t\t\t\trange.startColumn,\n\t\t\t\t\tmatchString,\n\t\t\t\t\tmatch.replaceString,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn nls.localize(\n\t\t\t\t\"searchResultAria\",\n\t\t\t\t\"'{0}' at column {1} found {2}\",\n\t\t\t\tmatchText,\n\t\t\t\trange.startColumn,\n\t\t\t\tmatchString,\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,kBAAkB;AAC3B,SAAS,+BAA+B;AAMxC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,YAAY,WAAW;AACvB,SAAS,eAAe;AACxB,YAAY,SAAS;AACrB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,cAAc;AACvB,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AACzB,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AACtC,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,+BAA+B;AACxC,SAAS,gCAAgC;AAMzC,SAAS,qBAAqB;AAE9B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OAGM;AAkCA,MAAM,eAAgE;AAAA,EApF7E,OAoF6E;AAAA;AAAA;AAAA,EAC5E,OAAc,cAAc;AAAA,EAE5B,UAAU,SAAkC;AAC3C,WAAO,eAAe;AAAA,EACvB;AAAA,EAEA,cAAc,SAAkC;AAC/C,QAAI,mBAAmB,aAAa;AACnC,aAAO,oBAAoB;AAAA,IAC5B,WAAW,mBAAmB,WAAW;AACxC,aAAO,kBAAkB;AAAA,IAC1B,WAAW,mBAAmB,OAAO;AACpC,aAAO,cAAc;AAAA,IACtB;AAEA,YAAQ,MAAM,+BAA+B,OAAO;AACpD,UAAM,IAAI,MAAM,6BAA6B;AAAA,EAC9C;AACD;AACO,IAAM,sBAAN,cACE,WAET;AAAA,EAKC,YACS,YACA,QAEE,gBACsB,cAEf,sBAEA,mBAChB;AACD,UAAM;AAVE;AACA;AAEE;AACsB;AAEf;AAEA;AAAA,EAGlB;AAAA,EA5HD,OA2GA;AAAA;AAAA;AAAA,EACC,OAAgB,cAAc;AAAA,EAErB,aAAa,oBAAoB;AAAA,EAgB1C,yBACC,MACA,OACA,cACA,QACO;AACP,UAAM,aAAa,KAAK;AACxB,UAAM,SAAS,WAAW,SAAS,WAAW,SAAS,SAAS,CAAC;AACjE,UAAM,QAAQ,WAAW,SAAS,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;AAErD,QAAI,OAAO,UAAU;AACpB,YAAM,WACL,kBAAkB,2BACf,SAAS,cACT,SAAS;AACb,mBAAa,MAAM;AAAA,QAClB,EAAE,UAAU,OAAO,UAAU,MAAM,MAAM;AAAA,QACzC;AAAA,UACC;AAAA,UACA,WAAW,KAAK,aAAa;AAAA,YAC5B,OAAO,SAAS;AAAA,UACjB;AAAA,QACD;AAAA,MACD;AAAA,IACD,OAAO;AACN,mBAAa,MAAM;AAAA,QAClB,IAAI,SAAS,iCAAiC,aAAa;AAAA,MAC5D;AAAA,IACD;AAEA,SAAK,oBAAoB,QAAQ,YAAY;AAAA,EAC9C;AAAA,EAEA,eAAe,WAA8C;AAC5D,UAAM,cAAc,IAAI,gBAAgB;AAExC,UAAM,qBAAqB,IAAI,OAAO,WAAW,IAAI,EAAE,cAAc,CAAC;AACtE,UAAM,QAAQ,KAAK,OAAO,OAAO,oBAAoB;AAAA,MACpD,8BAA8B;AAAA,MAC9B,mBAAmB;AAAA,IACpB,CAAC;AACD,gBAAY,IAAI,KAAK;AACrB,UAAM,QAAQ,IAAI;AAAA,MACjB,IAAI,OAAO,oBAAoB,IAAI,EAAE,QAAQ,CAAC;AAAA,MAC9C,CAAC;AAAA,MACD;AAAA,IACD;AACA,UAAM,qBAAqB,IAAI;AAAA,MAC9B;AAAA,MACA,IAAI,EAAE,qBAAqB;AAAA,IAC5B;AAEA,UAAM,qBAAqB,IAAI,gBAAgB;AAC/C,gBAAY,IAAI,kBAAkB;AAElC,UAAM,wBAAwB,YAAY;AAAA,MACzC,KAAK,kBAAkB,aAAa,SAAS;AAAA,IAC9C;AACA,kBAAc,cAAc,OAAO,qBAAqB,EAAE,IAAI,KAAK;AACnE,kBAAc,aAAa,OAAO,qBAAqB,EAAE,IAAI,KAAK;AAClE,kBAAc,eAAe,OAAO,qBAAqB,EAAE,IAAI,IAAI;AAEnE,UAAM,uBAAuB,KAAK;AAAA,MACjC,KAAK,qBAAqB;AAAA,QACzB,IAAI,kBAAkB;AAAA,UACrB;AAAA,UACA;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AACA,UAAM,UAAU,YAAY;AAAA,MAC3B,qBAAqB;AAAA,QACpB;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,UACC,aAAa;AAAA,YACZ,mBAAmB;AAAA,UACpB;AAAA,UACA,oBAAoB,mBAAmB;AAAA,UACvC,gBAAgB;AAAA,YACf,cAAc,wBAAC,MAAc,UAAU,KAAK,CAAC,GAA/B;AAAA,UACf;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,mBAAmB;AAAA,IACpB;AAAA,EACD;AAAA,EAEA,cACC,MACA,OACA,cACO;AACP,UAAM,cAAc,KAAK;AACzB,QAAI,YAAY,UAAU;AACzB,YAAM,kBAAkB,KAAK,eAAe;AAAA,QAC3C,YAAY;AAAA,MACb;AACA,UACC,mBACA,QAAQ,gBAAgB,KAAK,YAAY,QAAQ,GAChD;AACD,qBAAa,MAAM,QAAQ,YAAY,UAAU;AAAA,UAChD,UAAU,SAAS;AAAA,UACnB,UAAU;AAAA,QACX,CAAC;AAAA,MACF,OAAO;AACN,qBAAa,MAAM,QAAQ,YAAY,UAAU;AAAA,UAChD,UAAU,SAAS;AAAA,UACnB,UAAU,KAAK,WAAW;AAAA,QAC3B,CAAC;AAAA,MACF;AAAA,IACD,OAAO;AACN,mBAAa,MAAM;AAAA,QAClB,IAAI,SAAS,iCAAiC,aAAa;AAAA,MAC5D;AAAA,IACD;AAEA,kBAAc,kBAAkB;AAAA,MAC/B,aAAa;AAAA,IACd,EAAE,IAAI,CAAC,YAAY,uBAAuB,CAAC;AAE3C,iBAAa,mBAAmB;AAAA,MAC/B,YAAY,SAAS,MAAM;AAC1B,sBAAc,kBAAkB;AAAA,UAC/B,aAAa;AAAA,QACd,EAAE,IAAI,CAAC,YAAY,uBAAuB,CAAC;AAAA,MAC5C,CAAC;AAAA,IACF;AAEA,SAAK,oBAAoB,aAAa,YAAY;AAAA,EACnD;AAAA,EAEA,eACC,SACA,OACA,cACO;AACP,iBAAa,mBAAmB,MAAM;AAAA,EACvC;AAAA,EAEA,0BACC,MACA,OACA,cACA,QACO;AACP,iBAAa,mBAAmB,MAAM;AAAA,EACvC;AAAA,EAEA,gBAAgB,cAA0C;AACzD,iBAAa,YAAY,QAAQ;AAAA,EAClC;AAAA,EAEQ,oBACP,QACA,cACC;AACD,UAAM,QAAQ,OAAO,oBAAoB;AACzC,iBAAa,MAAM,SAAS,KAAK;AACjC,iBAAa,MAAM;AAAA,MAClB,QAAQ,IACL,IAAI,SAAS,qBAAqB,mBAAmB,KAAK,IAC1D,IAAI,SAAS,mBAAmB,kBAAkB,KAAK;AAAA,IAC3D;AAEA,iBAAa,QAAQ,UAAU;AAAA,MAC9B,QAAQ,KAAK,WAAW,WAAW;AAAA,MACnC,SAAS;AAAA,IACV;AAAA,EACD;AACD;AA1Ma,sBAAN;AAAA,EAWJ;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,GAhBU;AA4MN,IAAM,oBAAN,cACE,WAET;AAAA,EAKC,YACS,YACA,QAEE,gBAEO,sBAEA,sBAEA,mBAChB;AACD,UAAM;AAXE;AACA;AAEE;AAEO;AAEA;AAEA;AAAA,EAGlB;AAAA,EAzUD,OAuTA;AAAA;AAAA;AAAA,EACC,OAAgB,cAAc;AAAA,EAErB,aAAa,kBAAkB;AAAA,EAiBxC,yBACC,MACA,OACA,cACA,QACO;AACP,UAAM,IAAI,MAAM,mDAAmD;AAAA,EACpE;AAAA,EAEA,eAAe,WAA4C;AAC1D,UAAM,cAAc,IAAI,gBAAgB;AACxC,UAAM,qBAAqB,IAAI,gBAAgB;AAC/C,gBAAY,IAAI,kBAAkB;AAClC,UAAM,mBAAmB,IAAI,OAAO,WAAW,IAAI,EAAE,YAAY,CAAC;AAClE,UAAM,QAAQ,KAAK,OAAO,OAAO,gBAAgB;AACjD,gBAAY,IAAI,KAAK;AACrB,UAAM,QAAQ,IAAI;AAAA,MACjB,IAAI,OAAO,kBAAkB,IAAI,EAAE,QAAQ,CAAC;AAAA,MAC5C,CAAC;AAAA,MACD;AAAA,IACD;AACA,UAAM,qBAAqB,IAAI;AAAA,MAC9B;AAAA,MACA,IAAI,EAAE,qBAAqB;AAAA,IAC5B;AAEA,UAAM,wBAAwB,YAAY;AAAA,MACzC,KAAK,kBAAkB,aAAa,SAAS;AAAA,IAC9C;AACA,kBAAc,cAAc,OAAO,qBAAqB,EAAE,IAAI,KAAK;AACnE,kBAAc,aAAa,OAAO,qBAAqB,EAAE,IAAI,IAAI;AACjE,kBAAc,eAAe,OAAO,qBAAqB,EAAE,IAAI,KAAK;AAEpE,UAAM,uBAAuB,KAAK;AAAA,MACjC,KAAK,qBAAqB;AAAA,QACzB,IAAI,kBAAkB;AAAA,UACrB;AAAA,UACA;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AACA,UAAM,UAAU,YAAY;AAAA,MAC3B,qBAAqB;AAAA,QACpB;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,UACC,aAAa;AAAA,YACZ,mBAAmB;AAAA,UACpB;AAAA,UACA,oBAAoB,mBAAmB;AAAA,UACvC,gBAAgB;AAAA,YACf,cAAc,wBAAC,MAAc,UAAU,KAAK,CAAC,GAA/B;AAAA,UACf;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,MACN,IAAI;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,mBAAmB;AAAA,IACpB;AAAA,EACD;AAAA,EAEA,cACC,MACA,OACA,cACO;AACP,UAAM,YAAY,KAAK;AACvB,iBAAa,GAAG;AAAA,MACf;AAAA,MACA,UAAU,SAAS,SAAS;AAAA,IAC7B;AAEA,UAAM,mBACL,KAAK,qBAAqB;AAAA,MACzB;AAAA,IACD,EAAE;AACH,iBAAa,MAAM,QAAQ,UAAU,UAAU;AAAA,MAC9C,UACC,KAAK,WAAW,2BAChB,EAAE,UAAU,OAAO,aAAa;AAAA,MACjC,UAAU;AAAA,MACV,iBAAiB;AAAA,QAChB,QAAQ,iBAAiB;AAAA,QACzB,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,IACD,CAAC;AACD,UAAM,QAAQ,UAAU,MAAM;AAC9B,iBAAa,MAAM,SAAS,KAAK;AACjC,iBAAa,MAAM;AAAA,MAClB,QAAQ,IACL,IAAI,SAAS,iBAAiB,qBAAqB,KAAK,IACxD,IAAI,SAAS,eAAe,mBAAmB,KAAK;AAAA,IACxD;AAEA,iBAAa,QAAQ,UAAU;AAAA,MAC9B,QAAQ,KAAK,WAAW,WAAW;AAAA,MACnC,SAAS;AAAA,IACV;AAEA,kBAAc,kBAAkB;AAAA,MAC/B,aAAa;AAAA,IACd,EAAE,IAAI,CAAC,UAAU,uBAAuB,CAAC;AAEzC,iBAAa,mBAAmB;AAAA,MAC/B,UAAU,SAAS,MAAM;AACxB,sBAAc,kBAAkB;AAAA,UAC/B,aAAa;AAAA,QACd,EAAE,IAAI,CAAC,UAAU,uBAAuB,CAAC;AAAA,MAC1C,CAAC;AAAA,IACF;AAIA,UAAM,mBACL,aAAa,GAAG,eAAe,eAAe;AAAA,MAC7C;AAAA,IACD;AACD,sBAAkB,UAAU,IAAI,eAAe;AAAA,EAChD;AAAA,EAEA,eACC,SACA,OACA,cACO;AACP,iBAAa,mBAAmB,MAAM;AAAA,EACvC;AAAA,EAEA,gBAAgB,cAAwC;AACvD,iBAAa,YAAY,QAAQ;AAAA,EAClC;AACD;AAlKa,oBAAN;AAAA,EAWJ;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,GAjBU;AAoKN,IAAM,gBAAN,cACE,WAET;AAAA,EAKC,YACS,YAEE,gBAEO,sBAEA,sBAEA,mBACe,cAC/B;AACD,UAAM;AAXE;AAEE;AAEO;AAEA;AAEA;AACe;AAAA,EAGjC;AAAA,EA7eD,OA2dA;AAAA;AAAA;AAAA,EACC,OAAgB,cAAc;AAAA,EAErB,aAAa,cAAc;AAAA,EAgBpC,yBACC,MACA,OACA,cACA,QACO;AACP,UAAM,IAAI,MAAM,mDAAmD;AAAA,EACpE;AAAA,EAEA,eAAe,WAAwC;AACtD,cAAU,UAAU,IAAI,WAAW;AAEnC,UAAM,aAAa,IAAI,OAAO,WAAW,IAAI,EAAE,mBAAmB,CAAC;AACnE,UAAM,SAAS,IAAI,OAAO,WAAW,IAAI,EAAE,eAAe,CAAC;AAC3D,UAAM,SAAS,IAAI,OAAO,QAAQ,IAAI,EAAE,MAAM,CAAC;AAC/C,UAAM,QAAQ,IAAI,OAAO,QAAQ,IAAI,EAAE,sBAAsB,CAAC;AAC9D,UAAM,UAAU,IAAI,OAAO,QAAQ,IAAI,EAAE,mBAAmB,CAAC;AAC7D,UAAM,QAAQ,IAAI,OAAO,QAAQ,IAAI,EAAE,MAAM,CAAC;AAC9C,UAAM,qBAAqB,IAAI;AAAA,MAC9B;AAAA,MACA,IAAI,EAAE,yBAAyB;AAAA,IAChC;AAEA,UAAM,cAAc,IAAI,gBAAgB;AAExC,UAAM,wBAAwB,YAAY;AAAA,MACzC,KAAK,kBAAkB,aAAa,SAAS;AAAA,IAC9C;AACA,kBAAc,cAAc,OAAO,qBAAqB,EAAE,IAAI,IAAI;AAClE,kBAAc,aAAa,OAAO,qBAAqB,EAAE,IAAI,KAAK;AAClE,kBAAc,eAAe,OAAO,qBAAqB,EAAE,IAAI,KAAK;AAEpE,UAAM,uBAAuB,KAAK;AAAA,MACjC,KAAK,qBAAqB;AAAA,QACzB,IAAI,kBAAkB;AAAA,UACrB;AAAA,UACA;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AACA,UAAM,UAAU,YAAY;AAAA,MAC3B,qBAAqB;AAAA,QACpB;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,UACC,aAAa;AAAA,YACZ,mBAAmB;AAAA,UACpB;AAAA,UACA,oBAAoB,mBAAmB;AAAA,UACvC,gBAAgB;AAAA,YACf,cAAc,wBAAC,MAAc,UAAU,KAAK,CAAC,GAA/B;AAAA,UACf;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,mBAAmB;AAAA,IACpB;AAAA,EACD;AAAA,EAEA,cACC,MACA,OACA,cACO;AACP,UAAM,QAAQ,KAAK;AACnB,UAAM,UAAU,MAAM,QAAQ;AAC9B,UAAM,UACL,KAAK,WAAW,MAAM,gBAAgB,KACtC,CAAC,CAAC,KAAK,WAAW,MAAM,iBACxB,EAAE,iBAAiB,mBAAmB,MAAM,WAAW;AAExD,iBAAa,OAAO,cAAc,QAAQ;AAC1C,iBAAa,MAAM,cAAc,QAAQ;AACzC,iBAAa,MAAM,UAAU,OAAO,WAAW,OAAO;AACtD,iBAAa,QAAQ,cAAc,UAAU,MAAM,gBAAgB;AACnE,iBAAa,MAAM,cAAc,QAAQ;AAEzC,UAAM,SACL,QAAQ,cACP,UAAU,MAAM,gBAAgB,QAAQ,UACzC,QAAQ,OAEP,KAAK,EACL,OAAO,GAAG,GAAG;AACf,iBAAa,YAAY;AAAA,MACxB,KAAK,aAAa;AAAA,QACjB,wBAAwB,OAAO;AAAA,QAC/B,aAAa;AAAA,QACb;AAAA,MACD;AAAA,IACD;AAEA,kBAAc,kBAAkB;AAAA,MAC/B,aAAa;AAAA,IACd,EAAE,IAAI,EAAE,iBAAiB,mBAAmB,MAAM,WAAW,EAAE;AAE/D,UAAM,WACL,MAAM,MAAM,EAAE,gBAAgB,MAAM,MAAM,EAAE;AAC7C,UAAM,gBAAgB,WAAW,IAAI,IAAI,QAAQ,KAAK;AAEtD,UAAM,kBACL,KAAK,qBAAqB;AAAA,MACzB;AAAA,IACD,EAAE;AACH,UAAM,gBAAgB,kBACnB,GAAG,MAAM,MAAM,EAAE,eAAe,MAChC;AACH,iBAAa,WAAW,UAAU;AAAA,MACjC;AAAA,MACA,WAAW,KAAK;AAAA,IACjB;AAEA,iBAAa,WAAW,cAAc,gBAAgB;AACtD,iBAAa,YAAY;AAAA,MACxB,KAAK,aAAa;AAAA,QACjB,wBAAwB,OAAO;AAAA,QAC/B,aAAa;AAAA,QACb,KAAK,cAAc,OAAO,eAAe;AAAA,MAC1C;AAAA,IACD;AAEA,iBAAa,QAAQ,UAAU;AAAA,MAC9B,QAAQ,KAAK,WAAW,WAAW;AAAA,MACnC,SAAS;AAAA,IACV;AAAA,EACD;AAAA,EAEA,gBAAgB,cAAoC;AACnD,iBAAa,YAAY,QAAQ;AAAA,EAClC;AAAA,EAEQ,cAAc,OAAc,iBAAkC;AACrE,UAAM,YAAY,MAAM,MAAM,EAAE;AAChC,UAAM,WACL,MAAM,MAAM,EAAE,gBAAgB,MAAM,MAAM,EAAE;AAE7C,UAAM,aAAa,kBAChB,IAAI,SAAS,cAAc,iBAAiB,WAAW,QAAQ,IAChE,MACC;AAEH,UAAM,cACL,WAAW,IACR,OAAO,IAAI,SAAS,eAAe,kBAAkB,QAAQ,IAC7D;AAEJ,WAAO,aAAa;AAAA,EACrB;AACD;AArLa,gBAAN;AAAA,EAUJ;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,GAlBU;AAuLN,IAAM,8BAAN,MAEP;AAAA,EACC,YACS,YACwB,cAC/B;AAFO;AACwB;AAAA,EAC9B;AAAA,EArpBJ,OAipBA;AAAA;AAAA;AAAA,EAMC,qBAA6B;AAC5B,WAAO,IAAI,SAAS,UAAU,QAAQ;AAAA,EACvC;AAAA,EAEA,aAAa,SAAyC;AACrD,QAAI,mBAAmB,aAAa;AACnC,YAAM,QAAQ,QACZ,yBAAyB,EACzB,OAAO,CAAC,OAAO,YAAY,QAAQ,QAAQ,MAAM,GAAG,CAAC;AACvD,aAAO,QAAQ,WACZ,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ,KAAK;AAAA,MACd,IACC,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACH;AAEA,QAAI,mBAAmB,WAAW;AACjC,YAAM,OACL,KAAK,aAAa,YAAY,QAAQ,UAAU;AAAA,QAC/C,UAAU;AAAA,MACX,CAAC,KAAK,QAAQ,SAAS;AAExB,aAAO,IAAI;AAAA,QACV;AAAA,QACA;AAAA,QACA,QAAQ,MAAM;AAAA,QACd,QAAQ,KAAK;AAAA,QACb,MAAM,QAAQ,IAAI;AAAA,MACnB;AAAA,IACD;AAEA,QAAI,mBAAmB,OAAO;AAC7B,YAAM,QAAe;AACrB,YAAM,cAA2B,KAAK,WAAW;AACjD,YAAM,UACL,YAAY,gBAAgB,KAAK,CAAC,CAAC,YAAY;AAChD,YAAM,cAAc,MAAM,eAAe;AACzC,YAAM,QAAQ,MAAM,MAAM;AAC1B,YAAM,YAAY,MAAM,KAAK,EAAE,OAAO,GAAG,MAAM,YAAY,GAAG;AAC9D,UAAI,SAAS;AACZ,eAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA,MAAM;AAAA,UACN;AAAA,UACA,MAAM;AAAA,QACP;AAAA,MACD;AAEA,aAAO,IAAI;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA,MAAM;AAAA,QACN;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AACD;AA3Ea,8BAAN;AAAA,EAKJ;AAAA,GALU;",
  "names": []
}
