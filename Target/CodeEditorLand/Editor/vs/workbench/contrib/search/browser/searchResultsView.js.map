{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchResultsView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from '../../../../base/browser/dom.js';\nimport { CountBadge } from '../../../../base/browser/ui/countBadge/countBadge.js';\nimport { IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { ITreeNode } from '../../../../base/browser/ui/tree/tree.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as paths from '../../../../base/common/path.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { FileKind } from '../../../../platform/files/common/files.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { ISearchConfigurationProperties } from '../../../services/search/common/search.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { IResourceLabel, ResourceLabels } from '../../../browser/labels.js';\nimport { SearchView } from './searchView.js';\nimport { FileMatch, Match, RenderableMatch, SearchModel, FolderMatch, FolderMatchNoRoot, FolderMatchWorkspaceRoot, MatchInNotebook } from './searchModel.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { ICompressibleTreeRenderer } from '../../../../base/browser/ui/tree/objectTree.js';\nimport { ICompressedTreeNode } from '../../../../base/browser/ui/tree/compressedObjectTreeModel.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { HiddenItemStrategy, MenuWorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { ISearchActionContext } from './searchActionsRemoveReplace.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { defaultCountBadgeStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { SearchContext } from '../common/constants.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\n\ninterface IFolderMatchTemplate {\n\tlabel: IResourceLabel;\n\tbadge: CountBadge;\n\tactions: MenuWorkbenchToolBar;\n\tdisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n\tcontextKeyService: IContextKeyService;\n}\n\ninterface IFileMatchTemplate {\n\tel: HTMLElement;\n\tlabel: IResourceLabel;\n\tbadge: CountBadge;\n\tactions: MenuWorkbenchToolBar;\n\tdisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n\tcontextKeyService: IContextKeyService;\n}\n\ninterface IMatchTemplate {\n\tlineNumber: HTMLElement;\n\tparent: HTMLElement;\n\tbefore: HTMLElement;\n\tmatch: HTMLElement;\n\treplace: HTMLElement;\n\tafter: HTMLElement;\n\tactions: MenuWorkbenchToolBar;\n\tdisposables: DisposableStore;\n\tcontextKeyService: IContextKeyService;\n}\n\nexport class SearchDelegate implements IListVirtualDelegate<RenderableMatch> {\n\n\tpublic static ITEM_HEIGHT = 22;\n\n\tgetHeight(element: RenderableMatch): number {\n\t\treturn SearchDelegate.ITEM_HEIGHT;\n\t}\n\n\tgetTemplateId(element: RenderableMatch): string {\n\t\tif (element instanceof FolderMatch) {\n\t\t\treturn FolderMatchRenderer.TEMPLATE_ID;\n\t\t} else if (element instanceof FileMatch) {\n\t\t\treturn FileMatchRenderer.TEMPLATE_ID;\n\t\t} else if (element instanceof Match) {\n\t\t\treturn MatchRenderer.TEMPLATE_ID;\n\t\t}\n\n\t\tconsole.error('Invalid search tree element', element);\n\t\tthrow new Error('Invalid search tree element');\n\t}\n}\nexport class FolderMatchRenderer extends Disposable implements ICompressibleTreeRenderer<FolderMatch, any, IFolderMatchTemplate> {\n\tstatic readonly TEMPLATE_ID = 'folderMatch';\n\n\treadonly templateId = FolderMatchRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\tprivate searchView: SearchView,\n\t\tprivate labels: ResourceLabels,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<FolderMatch>, any>, index: number, templateData: IFolderMatchTemplate, height: number | undefined): void {\n\t\tconst compressed = node.element;\n\t\tconst folder = compressed.elements[compressed.elements.length - 1];\n\t\tconst label = compressed.elements.map(e => e.name());\n\n\t\tif (folder.resource) {\n\t\t\tconst fileKind = (folder instanceof FolderMatchWorkspaceRoot) ? FileKind.ROOT_FOLDER : FileKind.FOLDER;\n\t\t\ttemplateData.label.setResource({ resource: folder.resource, name: label }, {\n\t\t\t\tfileKind,\n\t\t\t\tseparator: this.labelService.getSeparator(folder.resource.scheme),\n\t\t\t});\n\t\t} else {\n\t\t\ttemplateData.label.setLabel(nls.localize('searchFolderMatch.other.label', \"Other files\"));\n\t\t}\n\n\t\tthis.renderFolderDetails(folder, templateData);\n\t}\n\n\trenderTemplate(container: HTMLElement): IFolderMatchTemplate {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst folderMatchElement = DOM.append(container, DOM.$('.foldermatch'));\n\t\tconst label = this.labels.create(folderMatchElement, { supportDescriptionHighlights: true, supportHighlights: true });\n\t\tdisposables.add(label);\n\t\tconst badge = new CountBadge(DOM.append(folderMatchElement, DOM.$('.badge')), {}, defaultCountBadgeStyles);\n\t\tconst actionBarContainer = DOM.append(folderMatchElement, DOM.$('.actionBarContainer'));\n\n\t\tconst elementDisposables = new DisposableStore();\n\t\tdisposables.add(elementDisposables);\n\n\t\tconst contextKeyServiceMain = disposables.add(this.contextKeyService.createScoped(container));\n\t\tSearchContext.MatchFocusKey.bindTo(contextKeyServiceMain).set(false);\n\t\tSearchContext.FileFocusKey.bindTo(contextKeyServiceMain).set(false);\n\t\tSearchContext.FolderFocusKey.bindTo(contextKeyServiceMain).set(true);\n\n\t\tconst instantiationService = this._register(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, contextKeyServiceMain])));\n\t\tconst actions = disposables.add(instantiationService.createInstance(MenuWorkbenchToolBar, actionBarContainer, MenuId.SearchActionMenu, {\n\t\t\tmenuOptions: {\n\t\t\t\tshouldForwardArgs: true\n\t\t\t},\n\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\ttoolbarOptions: {\n\t\t\t\tprimaryGroup: (g: string) => /^inline/.test(g),\n\t\t\t},\n\t\t}));\n\n\t\treturn {\n\t\t\tlabel,\n\t\t\tbadge,\n\t\t\tactions,\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t\tcontextKeyService: contextKeyServiceMain\n\t\t};\n\t}\n\n\trenderElement(node: ITreeNode<FolderMatch, any>, index: number, templateData: IFolderMatchTemplate): void {\n\t\tconst folderMatch = node.element;\n\t\tif (folderMatch.resource) {\n\t\t\tconst workspaceFolder = this.contextService.getWorkspaceFolder(folderMatch.resource);\n\t\t\tif (workspaceFolder && isEqual(workspaceFolder.uri, folderMatch.resource)) {\n\t\t\t\ttemplateData.label.setFile(folderMatch.resource, { fileKind: FileKind.ROOT_FOLDER, hidePath: true });\n\t\t\t} else {\n\t\t\t\ttemplateData.label.setFile(folderMatch.resource, { fileKind: FileKind.FOLDER, hidePath: this.searchView.isTreeLayoutViewVisible });\n\t\t\t}\n\t\t} else {\n\t\t\ttemplateData.label.setLabel(nls.localize('searchFolderMatch.other.label', \"Other files\"));\n\t\t}\n\n\t\tSearchContext.IsEditableItemKey.bindTo(templateData.contextKeyService).set(!folderMatch.hasOnlyReadOnlyMatches());\n\n\t\ttemplateData.elementDisposables.add(folderMatch.onChange(() => {\n\t\t\tSearchContext.IsEditableItemKey.bindTo(templateData.contextKeyService).set(!folderMatch.hasOnlyReadOnlyMatches());\n\t\t}));\n\n\t\tthis.renderFolderDetails(folderMatch, templateData);\n\t}\n\n\tdisposeElement(element: ITreeNode<RenderableMatch, any>, index: number, templateData: IFolderMatchTemplate): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeCompressedElements(node: ITreeNode<ICompressedTreeNode<FolderMatch>, any>, index: number, templateData: IFolderMatchTemplate, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFolderMatchTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n\n\tprivate renderFolderDetails(folder: FolderMatch, templateData: IFolderMatchTemplate) {\n\t\tconst count = folder.recursiveMatchCount();\n\t\ttemplateData.badge.setCount(count);\n\t\ttemplateData.badge.setTitleFormat(count > 1 ? nls.localize('searchFileMatches', \"{0} files found\", count) : nls.localize('searchFileMatch', \"{0} file found\", count));\n\n\t\ttemplateData.actions.context = { viewer: this.searchView.getControl(), element: folder } satisfies ISearchActionContext;\n\t}\n}\n\nexport class FileMatchRenderer extends Disposable implements ICompressibleTreeRenderer<FileMatch, any, IFileMatchTemplate> {\n\tstatic readonly TEMPLATE_ID = 'fileMatch';\n\n\treadonly templateId = FileMatchRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\tprivate searchView: SearchView,\n\t\tprivate labels: ResourceLabels,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<FileMatch>, any>, index: number, templateData: IFileMatchTemplate, height: number | undefined): void {\n\t\tthrow new Error('Should never happen since node is incompressible.');\n\t}\n\n\trenderTemplate(container: HTMLElement): IFileMatchTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = new DisposableStore();\n\t\tdisposables.add(elementDisposables);\n\t\tconst fileMatchElement = DOM.append(container, DOM.$('.filematch'));\n\t\tconst label = this.labels.create(fileMatchElement);\n\t\tdisposables.add(label);\n\t\tconst badge = new CountBadge(DOM.append(fileMatchElement, DOM.$('.badge')), {}, defaultCountBadgeStyles);\n\t\tconst actionBarContainer = DOM.append(fileMatchElement, DOM.$('.actionBarContainer'));\n\n\t\tconst contextKeyServiceMain = disposables.add(this.contextKeyService.createScoped(container));\n\t\tSearchContext.MatchFocusKey.bindTo(contextKeyServiceMain).set(false);\n\t\tSearchContext.FileFocusKey.bindTo(contextKeyServiceMain).set(true);\n\t\tSearchContext.FolderFocusKey.bindTo(contextKeyServiceMain).set(false);\n\n\t\tconst instantiationService = this._register(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, contextKeyServiceMain])));\n\t\tconst actions = disposables.add(instantiationService.createInstance(MenuWorkbenchToolBar, actionBarContainer, MenuId.SearchActionMenu, {\n\t\t\tmenuOptions: {\n\t\t\t\tshouldForwardArgs: true\n\t\t\t},\n\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\ttoolbarOptions: {\n\t\t\t\tprimaryGroup: (g: string) => /^inline/.test(g),\n\t\t\t},\n\t\t}));\n\n\t\treturn {\n\t\t\tel: fileMatchElement,\n\t\t\tlabel,\n\t\t\tbadge,\n\t\t\tactions,\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t\tcontextKeyService: contextKeyServiceMain\n\t\t};\n\t}\n\n\trenderElement(node: ITreeNode<FileMatch, any>, index: number, templateData: IFileMatchTemplate): void {\n\t\tconst fileMatch = node.element;\n\t\ttemplateData.el.setAttribute('data-resource', fileMatch.resource.toString());\n\n\t\tconst decorationConfig = this.configurationService.getValue<ISearchConfigurationProperties>('search').decorations;\n\t\ttemplateData.label.setFile(fileMatch.resource, { hidePath: this.searchView.isTreeLayoutViewVisible && !(fileMatch.parent() instanceof FolderMatchNoRoot), hideIcon: false, fileDecorations: { colors: decorationConfig.colors, badges: decorationConfig.badges } });\n\t\tconst count = fileMatch.count();\n\t\ttemplateData.badge.setCount(count);\n\t\ttemplateData.badge.setTitleFormat(count > 1 ? nls.localize('searchMatches', \"{0} matches found\", count) : nls.localize('searchMatch', \"{0} match found\", count));\n\n\t\ttemplateData.actions.context = { viewer: this.searchView.getControl(), element: fileMatch } satisfies ISearchActionContext;\n\n\t\tSearchContext.IsEditableItemKey.bindTo(templateData.contextKeyService).set(!fileMatch.hasOnlyReadOnlyMatches());\n\n\t\ttemplateData.elementDisposables.add(fileMatch.onChange(() => {\n\t\t\tSearchContext.IsEditableItemKey.bindTo(templateData.contextKeyService).set(!fileMatch.hasOnlyReadOnlyMatches());\n\t\t}));\n\n\t\t// when hidesExplorerArrows: true, then the file nodes should still have a twistie because it would otherwise\n\t\t// be hard to tell whether the node is collapsed or expanded.\n\t\tconst twistieContainer = templateData.el.parentElement?.parentElement?.querySelector('.monaco-tl-twistie');\n\t\ttwistieContainer?.classList.add('force-twistie');\n\t}\n\n\tdisposeElement(element: ITreeNode<RenderableMatch, any>, index: number, templateData: IFileMatchTemplate): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFileMatchTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\nexport class MatchRenderer extends Disposable implements ICompressibleTreeRenderer<Match, void, IMatchTemplate> {\n\tstatic readonly TEMPLATE_ID = 'match';\n\n\treadonly templateId = MatchRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\tprivate searchView: SearchView,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IHoverService private readonly hoverService: IHoverService\n\t) {\n\t\tsuper();\n\t}\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<Match>, void>, index: number, templateData: IMatchTemplate, height: number | undefined): void {\n\t\tthrow new Error('Should never happen since node is incompressible.');\n\t}\n\n\trenderTemplate(container: HTMLElement): IMatchTemplate {\n\t\tcontainer.classList.add('linematch');\n\n\t\tconst lineNumber = DOM.append(container, DOM.$('span.matchLineNum'));\n\t\tconst parent = DOM.append(container, DOM.$('a.plain.match'));\n\t\tconst before = DOM.append(parent, DOM.$('span'));\n\t\tconst match = DOM.append(parent, DOM.$('span.findInFileMatch'));\n\t\tconst replace = DOM.append(parent, DOM.$('span.replaceMatch'));\n\t\tconst after = DOM.append(parent, DOM.$('span'));\n\t\tconst actionBarContainer = DOM.append(container, DOM.$('span.actionBarContainer'));\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst contextKeyServiceMain = disposables.add(this.contextKeyService.createScoped(container));\n\t\tSearchContext.MatchFocusKey.bindTo(contextKeyServiceMain).set(true);\n\t\tSearchContext.FileFocusKey.bindTo(contextKeyServiceMain).set(false);\n\t\tSearchContext.FolderFocusKey.bindTo(contextKeyServiceMain).set(false);\n\n\t\tconst instantiationService = this._register(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, contextKeyServiceMain])));\n\t\tconst actions = disposables.add(instantiationService.createInstance(MenuWorkbenchToolBar, actionBarContainer, MenuId.SearchActionMenu, {\n\t\t\tmenuOptions: {\n\t\t\t\tshouldForwardArgs: true\n\t\t\t},\n\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\ttoolbarOptions: {\n\t\t\t\tprimaryGroup: (g: string) => /^inline/.test(g),\n\t\t\t},\n\t\t}));\n\n\t\treturn {\n\t\t\tparent,\n\t\t\tbefore,\n\t\t\tmatch,\n\t\t\treplace,\n\t\t\tafter,\n\t\t\tlineNumber,\n\t\t\tactions,\n\t\t\tdisposables,\n\t\t\tcontextKeyService: contextKeyServiceMain\n\t\t};\n\t}\n\n\trenderElement(node: ITreeNode<Match, any>, index: number, templateData: IMatchTemplate): void {\n\t\tconst match = node.element;\n\t\tconst preview = match.preview();\n\t\tconst replace = this.searchView.model.isReplaceActive() &&\n\t\t\t!!this.searchView.model.replaceString &&\n\t\t\t!(match instanceof MatchInNotebook && match.isReadonly());\n\n\t\ttemplateData.before.textContent = preview.before;\n\t\ttemplateData.match.textContent = preview.inside;\n\t\ttemplateData.match.classList.toggle('replace', replace);\n\t\ttemplateData.replace.textContent = replace ? match.replaceString : '';\n\t\ttemplateData.after.textContent = preview.after;\n\n\t\tconst title = (preview.fullBefore + (replace ? match.replaceString : preview.inside) + preview.after).trim().substr(0, 999);\n\t\ttemplateData.disposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), templateData.parent, title));\n\n\t\tSearchContext.IsEditableItemKey.bindTo(templateData.contextKeyService).set(!(match instanceof MatchInNotebook && match.isReadonly()));\n\n\t\tconst numLines = match.range().endLineNumber - match.range().startLineNumber;\n\t\tconst extraLinesStr = numLines > 0 ? `+${numLines}` : '';\n\n\t\tconst showLineNumbers = this.configurationService.getValue<ISearchConfigurationProperties>('search').showLineNumbers;\n\t\tconst lineNumberStr = showLineNumbers ? `${match.range().startLineNumber}:` : '';\n\t\ttemplateData.lineNumber.classList.toggle('show', (numLines > 0) || showLineNumbers);\n\n\t\ttemplateData.lineNumber.textContent = lineNumberStr + extraLinesStr;\n\t\ttemplateData.disposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), templateData.lineNumber, this.getMatchTitle(match, showLineNumbers)));\n\n\t\ttemplateData.actions.context = { viewer: this.searchView.getControl(), element: match } satisfies ISearchActionContext;\n\n\t}\n\n\tdisposeTemplate(templateData: IMatchTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n\n\tprivate getMatchTitle(match: Match, showLineNumbers: boolean): string {\n\t\tconst startLine = match.range().startLineNumber;\n\t\tconst numLines = match.range().endLineNumber - match.range().startLineNumber;\n\n\t\tconst lineNumStr = showLineNumbers ?\n\t\t\tnls.localize('lineNumStr', \"From line {0}\", startLine, numLines) + ' ' :\n\t\t\t'';\n\n\t\tconst numLinesStr = numLines > 0 ?\n\t\t\t'+ ' + nls.localize('numLinesStr', \"{0} more lines\", numLines) :\n\t\t\t'';\n\n\t\treturn lineNumStr + numLinesStr;\n\t}\n}\n\nexport class SearchAccessibilityProvider implements IListAccessibilityProvider<RenderableMatch> {\n\n\tconstructor(\n\t\tprivate searchView: SearchView,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t}\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn nls.localize('search', \"Search\");\n\t}\n\n\tgetAriaLabel(element: RenderableMatch): string | null {\n\t\tif (element instanceof FolderMatch) {\n\t\t\tconst count = element.allDownstreamFileMatches().reduce((total, current) => total + current.count(), 0);\n\t\t\treturn element.resource ?\n\t\t\t\tnls.localize('folderMatchAriaLabel', \"{0} matches in folder root {1}, Search result\", count, element.name()) :\n\t\t\t\tnls.localize('otherFilesAriaLabel', \"{0} matches outside of the workspace, Search result\", count);\n\t\t}\n\n\t\tif (element instanceof FileMatch) {\n\t\t\tconst path = this.labelService.getUriLabel(element.resource, { relative: true }) || element.resource.fsPath;\n\n\t\t\treturn nls.localize('fileMatchAriaLabel', \"{0} matches in file {1} of folder {2}, Search result\", element.count(), element.name(), paths.dirname(path));\n\t\t}\n\n\t\tif (element instanceof Match) {\n\t\t\tconst match = <Match>element;\n\t\t\tconst searchModel: SearchModel = this.searchView.model;\n\t\t\tconst replace = searchModel.isReplaceActive() && !!searchModel.replaceString;\n\t\t\tconst matchString = match.getMatchString();\n\t\t\tconst range = match.range();\n\t\t\tconst matchText = match.text().substr(0, range.endColumn + 150);\n\t\t\tif (replace) {\n\t\t\t\treturn nls.localize('replacePreviewResultAria', \"'{0}' at column {1} replace {2} with {3}\", matchText, range.startColumn, matchString, match.replaceString);\n\t\t\t}\n\n\t\t\treturn nls.localize('searchResultAria', \"'{0}' at column {1} found {2}\", matchText, range.startColumn, matchString);\n\t\t}\n\t\treturn null;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
