{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchMessage.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { parseLinkedText } from \"../../../../base/common/linkedText.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport type { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { Link } from \"../../../../platform/opener/browser/link.js\";\nimport type { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { SeverityIcon } from \"../../../../platform/severityIcon/browser/severityIcon.js\";\nimport {\n\ttype TextSearchCompleteMessage,\n\tTextSearchCompleteMessageType,\n} from \"../../../services/search/common/searchExtTypes.js\";\n\nexport const renderSearchMessage = (\n\tmessage: TextSearchCompleteMessage,\n\tinstantiationService: IInstantiationService,\n\tnotificationService: INotificationService,\n\topenerService: IOpenerService,\n\tcommandService: ICommandService,\n\tdisposableStore: DisposableStore,\n\ttriggerSearch: () => void,\n): HTMLElement => {\n\tconst div = dom.$(\"div.providerMessage\");\n\tconst linkedText = parseLinkedText(message.text);\n\tdom.append(\n\t\tdiv,\n\t\tdom.$(\n\t\t\t\".\" +\n\t\t\t\tSeverityIcon.className(\n\t\t\t\t\tmessage.type === TextSearchCompleteMessageType.Information\n\t\t\t\t\t\t? Severity.Info\n\t\t\t\t\t\t: Severity.Warning,\n\t\t\t\t)\n\t\t\t\t\t.split(\" \")\n\t\t\t\t\t.join(\".\"),\n\t\t),\n\t);\n\n\tfor (const node of linkedText.nodes) {\n\t\tif (typeof node === \"string\") {\n\t\t\tdom.append(div, document.createTextNode(node));\n\t\t} else {\n\t\t\tconst link = instantiationService.createInstance(Link, div, node, {\n\t\t\t\topener: async (href) => {\n\t\t\t\t\tif (!message.trusted) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst parsed = URI.parse(href, true);\n\t\t\t\t\tif (parsed.scheme === Schemas.command && message.trusted) {\n\t\t\t\t\t\tconst result = await commandService.executeCommand(\n\t\t\t\t\t\t\tparsed.path,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ((result as any)?.triggerSearch) {\n\t\t\t\t\t\t\ttriggerSearch();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (parsed.scheme === Schemas.https) {\n\t\t\t\t\t\topenerService.open(parsed);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tparsed.scheme === Schemas.command &&\n\t\t\t\t\t\t!message.trusted\n\t\t\t\t\t) {\n\t\t\t\t\t\tnotificationService.error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"unable to open trust\",\n\t\t\t\t\t\t\t\t\"Unable to open command link from untrusted source: {0}\",\n\t\t\t\t\t\t\t\thref,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnotificationService.error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"unable to open\",\n\t\t\t\t\t\t\t\t\"Unable to open unknown link: {0}\",\n\t\t\t\t\t\t\t\thref,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t\tdisposableStore.add(link);\n\t\t}\n\t}\n\treturn div;\n};\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AAErB,SAAS,uBAAuB;AAChC,SAAS,eAAe;AACxB,OAAO,cAAc;AACrB,SAAS,WAAW;AACpB,YAAY,SAAS;AAIrB,SAAS,YAAY;AAErB,SAAS,oBAAoB;AAC7B;AAAA,EAEC;AAAA,OACM;AAEA,MAAM,sBAAsB,wBAClC,SACA,sBACA,qBACA,eACA,gBACA,iBACA,kBACiB;AACjB,QAAM,MAAM,IAAI,EAAE,qBAAqB;AACvC,QAAM,aAAa,gBAAgB,QAAQ,IAAI;AAC/C,MAAI;AAAA,IACH;AAAA,IACA,IAAI;AAAA,MACH,MACC,aAAa;AAAA,QACZ,QAAQ,SAAS,8BAA8B,cAC5C,SAAS,OACT,SAAS;AAAA,MACb,EACE,MAAM,GAAG,EACT,KAAK,GAAG;AAAA,IACZ;AAAA,EACD;AAEA,aAAW,QAAQ,WAAW,OAAO;AACpC,QAAI,OAAO,SAAS,UAAU;AAC7B,UAAI,OAAO,KAAK,SAAS,eAAe,IAAI,CAAC;AAAA,IAC9C,OAAO;AACN,YAAM,OAAO,qBAAqB,eAAe,MAAM,KAAK,MAAM;AAAA,QACjE,QAAQ,8BAAO,SAAS;AACvB,cAAI,CAAC,QAAQ,SAAS;AACrB;AAAA,UACD;AACA,gBAAM,SAAS,IAAI,MAAM,MAAM,IAAI;AACnC,cAAI,OAAO,WAAW,QAAQ,WAAW,QAAQ,SAAS;AACzD,kBAAM,SAAS,MAAM,eAAe;AAAA,cACnC,OAAO;AAAA,YACR;AACA,gBAAK,QAAgB,eAAe;AACnC,4BAAc;AAAA,YACf;AAAA,UACD,WAAW,OAAO,WAAW,QAAQ,OAAO;AAC3C,0BAAc,KAAK,MAAM;AAAA,UAC1B,WACC,OAAO,WAAW,QAAQ,WAC1B,CAAC,QAAQ,SACR;AACD,gCAAoB;AAAA,cACnB,IAAI;AAAA,gBACH;AAAA,gBACA;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,UACD,OAAO;AACN,gCAAoB;AAAA,cACnB,IAAI;AAAA,gBACH;AAAA,gBACA;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,GAlCQ;AAAA,MAmCT,CAAC;AACD,sBAAgB,IAAI,IAAI;AAAA,IACzB;AAAA,EACD;AACA,SAAO;AACR,GAtEmC;",
  "names": []
}
