import*as r from"../../../../base/browser/dom.js";import{parseLinkedText as y}from"../../../../base/common/linkedText.js";import{Schemas as m}from"../../../../base/common/network.js";import s from"../../../../base/common/severity.js";import{URI as v}from"../../../../base/common/uri.js";import*as p from"../../../../nls.js";import{Link as h}from"../../../../platform/opener/browser/link.js";import{SeverityIcon as x}from"../../../../platform/severityIcon/browser/severityIcon.js";import{TextSearchCompleteMessageType as T}from"../../../services/search/common/searchExtTypes.js";const U=(e,c,a,l,f,d,u)=>{const t=r.$("div.providerMessage"),S=y(e.text);r.append(t,r.$("."+x.className(e.type===T.Information?s.Info:s.Warning).split(" ").join(".")));for(const n of S.nodes)if(typeof n=="string")r.append(t,document.createTextNode(n));else{const I=c.createInstance(h,t,n,{opener:async i=>{if(!e.trusted)return;const o=v.parse(i,!0);o.scheme===m.command&&e.trusted?(await f.executeCommand(o.path))?.triggerSearch&&u():o.scheme===m.https?l.open(o):o.scheme===m.command&&!e.trusted?a.error(p.localize("unable to open trust","Unable to open command link from untrusted source: {0}",i)):a.error(p.localize("unable to open","Unable to open unknown link: {0}",i))}});d.add(I)}return t};export{U as renderSearchMessage};
