import{dirname as z}from"../../../../base/common/resources.js";import*as h from"../../../../nls.js";import{ICommandService as R}from"../../../../platform/commands/common/commands.js";import{IConfigurationService as A}from"../../../../platform/configuration/common/configuration.js";import"../../../../platform/instantiation/common/instantiation.js";import{IListService as _}from"../../../../platform/list/browser/listService.js";import{ViewContainerLocation as D}from"../../../common/views.js";import{IViewsService as v}from"../../../services/views/common/viewsService.js";import*as s from"../common/constants.js";import*as w from"../../searchEditor/browser/constants.js";import{FileMatch as K,Match as L}from"./searchModel.js";import"../../searchEditor/browser/searchEditor.contribution.js";import"../../../services/search/common/search.js";import"../../../../base/common/uri.js";import{ContextKeyExpr as g}from"../../../../platform/contextkey/common/contextkey.js";import{Action2 as S,MenuId as I,registerAction2 as F}from"../../../../platform/actions/common/actions.js";import{KeybindingWeight as b}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{KeyCode as W,KeyMod as y}from"../../../../base/common/keyCodes.js";import{resolveResourcesForSearchIncludes as j}from"../../../services/search/common/queryBuilder.js";import{getMultiSelectedResources as q,IExplorerService as P}from"../../files/browser/files.js";import{IFileService as B}from"../../../../platform/files/common/files.js";import{IWorkspaceContextService as T}from"../../../../platform/workspace/common/workspace.js";import{ExplorerFolderContext as k,ExplorerRootContext as H,FilesExplorerFocusCondition as G,VIEWLET_ID as N}from"../../files/common/files.js";import{IPaneCompositePartService as Q}from"../../../services/panecomposite/browser/panecomposite.js";import"../../files/browser/explorerViewlet.js";import{onUnexpectedError as J}from"../../../../base/common/errors.js";import{category as x,getElementsToOperateOn as X,getSearchView as V,openSearchView as O}from"./searchActionsBase.js";import{IConfigurationResolverService as Y}from"../../../services/configurationResolver/common/configurationResolver.js";import{IHistoryService as Z}from"../../../services/history/common/history.js";import{Schemas as U}from"../../../../base/common/network.js";import{IEditorGroupsService as $}from"../../../services/editor/common/editorGroupsService.js";import{IEditorService as ee}from"../../../services/editor/common/editorService.js";F(class extends S{constructor(){super({id:s.SearchCommandIds.RestrictSearchToFolderId,title:h.localize2("restrictResultsToFolder","Restrict Search to Folder"),category:x,keybinding:{weight:b.WorkbenchContrib,when:g.and(s.SearchContext.SearchViewVisibleKey,s.SearchContext.ResourceFolderFocusKey),primary:y.Shift|y.Alt|W.KeyF},menu:[{id:I.SearchContext,group:"search",order:3,when:g.and(s.SearchContext.ResourceFolderFocusKey)}]})}async run(o,r){await M(o,!1,!0,void 0,r)}}),F(class extends S{constructor(){super({id:s.SearchCommandIds.ExpandRecursivelyCommandId,title:h.localize("search.expandRecursively","Expand Recursively"),category:x,menu:[{id:I.SearchContext,when:g.and(s.SearchContext.FolderFocusKey,s.SearchContext.HasSearchResults),group:"search",order:4}]})}async run(o){return oe(o)}}),F(class extends S{constructor(){super({id:s.SearchCommandIds.ExcludeFolderFromSearchId,title:h.localize2("excludeFolderFromSearch","Exclude Folder from Search"),category:x,menu:[{id:I.SearchContext,group:"search",order:4,when:g.and(s.SearchContext.ResourceFolderFocusKey)}]})}async run(o,r){await M(o,!1,!1,void 0,r)}}),F(class extends S{constructor(){super({id:s.SearchCommandIds.RevealInSideBarForSearchResults,title:h.localize2("revealInSideBar","Reveal in Explorer View"),category:x,menu:[{id:I.SearchContext,when:g.and(s.SearchContext.FileFocusKey,s.SearchContext.HasSearchResults),group:"search_3",order:1}]})}async run(o,r){const n=o.get(Q),p=o.get(P),a=o.get(T),f=V(o.get(v));if(!f)return;let i;if(r instanceof K||(r=f.getControl().getFocus()[0]),r instanceof K)i=r;else return;n.openPaneComposite(N,D.Sidebar,!1).then(t=>{if(!t)return;const u=t.getViewPaneContainer(),l=i.resource;if(l&&a.isInsideWorkspace(l)){const d=u.getExplorerView();d.setExpanded(!0),p.select(l,!0).then(()=>d.focus(),J)}})}}),F(class extends S{constructor(){super({id:s.SearchCommandIds.FindInFilesActionId,title:{...h.localize2("findInFiles","Find in Files"),mnemonicTitle:h.localize({key:"miFindInFiles",comment:["&& denotes a mnemonic"]},"Find &&in Files")},metadata:{description:h.localize("findInFiles.description","Open a workspace search"),args:[{name:h.localize("findInFiles.args","A set of options for the search"),schema:{type:"object",properties:{query:{type:"string"},replace:{type:"string"},preserveCase:{type:"boolean"},triggerSearch:{type:"boolean"},filesToInclude:{type:"string"},filesToExclude:{type:"string"},isRegex:{type:"boolean"},isCaseSensitive:{type:"boolean"},matchWholeWord:{type:"boolean"},useExcludeSettingsAndIgnoreFiles:{type:"boolean"},onlyOpenEditors:{type:"boolean"},showIncludesExcludes:{type:"boolean"}}}}]},category:x,keybinding:{weight:b.WorkbenchContrib,primary:y.CtrlCmd|y.Shift|W.KeyF},menu:[{id:I.MenubarEditMenu,group:"4_find_global",order:1}],f1:!0})}async run(o,r={}){te(o,r)}}),F(class extends S{constructor(){super({id:s.SearchCommandIds.FindInFolderId,title:h.localize2("findInFolder","Find in Folder..."),category:x,keybinding:{weight:b.WorkbenchContrib,when:g.and(G,k),primary:y.Shift|y.Alt|W.KeyF},menu:[{id:I.ExplorerContext,group:"4_search",order:10,when:g.and(k)}]})}async run(o,r){await M(o,!0,!0,r)}}),F(class extends S{constructor(){super({id:s.SearchCommandIds.FindInWorkspaceId,title:h.localize2("findInWorkspace","Find in Workspace..."),category:x,menu:[{id:I.ExplorerContext,group:"4_search",order:10,when:g.and(H,k.toNegated())}]})}async run(o){const n=o.get(A).getValue().search.mode;if(n==="view")(await O(o.get(v),!0))?.searchInFolders();else return o.get(R).executeCommand(w.OpenEditorCommandId,{location:n==="newEditor"?"new":"reuse",filesToInclude:""})}});async function oe(e){const o=e.get(v),r=V(o);if(r){const n=r.getControl(),p=n.getFocus()[0];await n.expand(p,!0)}}async function M(e,o,r,n,p){const a=e.get(B),f=e.get(v),i=e.get(T),t=e.get(R),u=e.get(A).getValue().search,l=u.mode;let d;if(o)d=q(n,e.get(_),e.get(ee),e.get($),e.get(P));else{const c=V(f);if(!c)return;d=re(c.getControl(),p,u)}const C=a.resolveAll(d.map(c=>({resource:c}))).then(c=>{const E=[];return c.forEach(m=>{m.success&&m.stat&&E.push(m.stat.isDirectory?m.stat.resource:z(m.stat.resource))}),j(E,i)});if(l==="view"){const c=await O(f,!0);d&&d.length&&c&&(r?c.searchInFolders(await C):c.searchOutsideOfFolders(await C));return}else return r?t.executeCommand(w.OpenEditorCommandId,{filesToInclude:(await C).join(", "),showIncludesExcludes:!0,location:l==="newEditor"?"new":"reuse"}):t.executeCommand(w.OpenEditorCommandId,{filesToExclude:(await C).join(", "),showIncludesExcludes:!0,location:l==="newEditor"?"new":"reuse"})}function re(e,o,r){return X(e,o,r).map(n=>n instanceof L?null:n.resource).filter(n=>n!==null)}async function te(e,o={}){const r=e.get(A).getValue().search,n=e.get(v),p=e.get(R),a={};if(Object.keys(o).length!==0){const i=e.get(Y),t=e.get(Z),u=e.get(T),l=t.getLastActiveWorkspaceRoot(),d=l?.scheme===U.file||l?.scheme===U.vscodeRemote?l:void 0,C=d?u.getWorkspaceFolder(d)??void 0:void 0;for(const c of Object.entries(o)){const E=c[0],m=c[1];m!==void 0&&(a[E]=typeof m=="string"?await i.resolveAsync(C,m):m)}}const f=r.mode;if(f==="view")O(n,!1).then(i=>{if(i){i.searchAndReplaceWidget.toggleReplace(typeof a.replace=="string");let u=!1;typeof a.query!="string"&&(u=i.updateTextFromFindWidgetOrSelection({allowUnselectedWord:typeof a.replace!="string"})),i.setSearchParameters(a),typeof a.showIncludesExcludes=="boolean"&&i.toggleQueryDetails(!1,a.showIncludesExcludes),i.searchAndReplaceWidget.focus(void 0,u,u)}});else{const i=t=>({location:f==="newEditor"?"new":"reuse",query:t.query,filesToInclude:t.filesToInclude,filesToExclude:t.filesToExclude,matchWholeWord:t.matchWholeWord,isCaseSensitive:t.isCaseSensitive,isRegexp:t.isRegex,useExcludeSettingsAndIgnoreFiles:t.useExcludeSettingsAndIgnoreFiles,onlyOpenEditors:t.onlyOpenEditors,showIncludesExcludes:!!(t.filesToExclude||t.filesToExclude||!t.useExcludeSettingsAndIgnoreFiles)});p.executeCommand(w.OpenEditorCommandId,i(a))}}export{te as findInFilesCommand};
