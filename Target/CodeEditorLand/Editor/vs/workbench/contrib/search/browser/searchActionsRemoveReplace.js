import"../../../../base/browser/ui/tree/tree.js";import*as b from"../../../../nls.js";import{IConfigurationService as V}from"../../../../platform/configuration/common/configuration.js";import"../../../../platform/instantiation/common/instantiation.js";import{getSelectionKeyboardEvent as y}from"../../../../platform/list/browser/listService.js";import{IViewsService as k}from"../../../services/views/common/viewsService.js";import{searchRemoveIcon as O,searchReplaceIcon as w}from"./searchIcons.js";import"./searchView.js";import*as e from"../common/constants.js";import{IReplaceService as N}from"./replace.js";import{arrayContainsElementOrParent as C,FileMatch as g,FolderMatch as x,Match as p,MatchInNotebook as q,SearchResult as K,TextSearchResult as T}from"./searchModel.js";import{IEditorService as L}from"../../../services/editor/common/editorService.js";import"../../../services/search/common/search.js";import{IUriIdentityService as U}from"../../../../platform/uriIdentity/common/uriIdentity.js";import{ContextKeyExpr as u}from"../../../../platform/contextkey/common/contextkey.js";import{Action2 as R,MenuId as f,registerAction2 as I}from"../../../../platform/actions/common/actions.js";import{KeybindingWeight as v}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{KeyCode as S,KeyMod as h}from"../../../../base/common/keyCodes.js";import{category as A,getElementsToOperateOn as P,getSearchView as W,shouldRefocus as j}from"./searchActionsBase.js";import{equals as B}from"../../../../base/common/arrays.js";I(class extends R{constructor(){super({id:e.SearchCommandIds.RemoveActionId,title:b.localize2("RemoveAction.label","Dismiss"),category:A,icon:O,keybinding:{weight:v.WorkbenchContrib,when:u.and(e.SearchContext.SearchViewVisibleKey,e.SearchContext.FileMatchOrMatchFocusKey),primary:S.Delete,mac:{primary:h.CtrlCmd|S.Backspace}},menu:[{id:f.SearchContext,group:"search",order:2},{id:f.SearchActionMenu,group:"inline",order:2}]})}async run(t,r){const o=t.get(k),d=t.get(V),a=W(o);if(!a)return;let m=r?.element,c=r?.viewer;c||(c=a.getControl()),m||(m=c.getFocus()[0]??void 0);const s=P(c,m,d.getValue("search"));let i=c.getFocus()[0]??void 0;if(s.length===0)return;(!i||i instanceof K)&&(i=m);let l;const F=j(s,i);i&&F&&(l=D(c,i,s));const M=a.searchResult;M&&M.batchRemove(s),await a.refreshTreePromiseSerializer,i&&F?(l||(l=z(c,i)),l&&!C(l,s)&&(c.reveal(l),c.setFocus([l],y()),c.setSelection([l],y()))):B(c.getFocus(),c.getSelection())||c.setSelection(c.getFocus()),c.domFocus()}}),I(class extends R{constructor(){super({id:e.SearchCommandIds.ReplaceActionId,title:b.localize2("match.replace.label","Replace"),category:A,keybinding:{weight:v.WorkbenchContrib,when:u.and(e.SearchContext.SearchViewVisibleKey,e.SearchContext.ReplaceActiveKey,e.SearchContext.MatchFocusKey,e.SearchContext.IsEditableItemKey),primary:h.Shift|h.CtrlCmd|S.Digit1},icon:w,menu:[{id:f.SearchContext,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.MatchFocusKey,e.SearchContext.IsEditableItemKey),group:"search",order:1},{id:f.SearchActionMenu,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.MatchFocusKey,e.SearchContext.IsEditableItemKey),group:"inline",order:1}]})}async run(t,r){return E(t,r)}}),I(class extends R{constructor(){super({id:e.SearchCommandIds.ReplaceAllInFileActionId,title:b.localize2("file.replaceAll.label","Replace All"),category:A,keybinding:{weight:v.WorkbenchContrib,when:u.and(e.SearchContext.SearchViewVisibleKey,e.SearchContext.ReplaceActiveKey,e.SearchContext.FileFocusKey,e.SearchContext.IsEditableItemKey),primary:h.Shift|h.CtrlCmd|S.Digit1,secondary:[h.CtrlCmd|h.Shift|S.Enter]},icon:w,menu:[{id:f.SearchContext,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.FileFocusKey,e.SearchContext.IsEditableItemKey),group:"search",order:1},{id:f.SearchActionMenu,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.FileFocusKey,e.SearchContext.IsEditableItemKey),group:"inline",order:1}]})}async run(t,r){return E(t,r)}}),I(class extends R{constructor(){super({id:e.SearchCommandIds.ReplaceAllInFolderActionId,title:b.localize2("file.replaceAll.label","Replace All"),category:A,keybinding:{weight:v.WorkbenchContrib,when:u.and(e.SearchContext.SearchViewVisibleKey,e.SearchContext.ReplaceActiveKey,e.SearchContext.FolderFocusKey,e.SearchContext.IsEditableItemKey),primary:h.Shift|h.CtrlCmd|S.Digit1,secondary:[h.CtrlCmd|h.Shift|S.Enter]},icon:w,menu:[{id:f.SearchContext,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.FolderFocusKey,e.SearchContext.IsEditableItemKey),group:"search",order:1},{id:f.SearchActionMenu,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.FolderFocusKey,e.SearchContext.IsEditableItemKey),group:"inline",order:1}]})}async run(t,r){return E(t,r)}});async function E(n,t){const r=n.get(V),o=n.get(k),d=W(o),a=t?.viewer??d?.getControl();if(!a)return;const m=t?.element??a.getFocus()[0],c=P(a,m??void 0,r.getValue("search"));let s=a.getFocus()[0];if((!s||s&&!C(s,c)||s instanceof K)&&(s=m),c.length===0)return;let i;s&&(i=D(a,s,c));const l=d?.searchResult;l&&await l.batchReplace(c),await d?.refreshTreePromiseSerializer,s&&(i||(i=z(a,s)),i&&(a.reveal(i),a.setFocus([i],y()),a.setSelection([i],y()),i instanceof p?!r.getValue().search.useReplacePreview||G(n,i)||i instanceof q?d?.open(i,!0):n.get(N).openReplacePreview(i,!0):i instanceof g&&d?.open(i,!0))),a.domFocus()}function G(n,t){if(!(t instanceof p))return!1;const o=n.get(L).activeEditor?.resource;return o?n.get(U).extUri.isEqual(o,t.parent().resource):!1}function H(n,t){return n instanceof p?t instanceof p?0:-1:n instanceof g?t instanceof p?1:t instanceof g?0:-1:t instanceof x?t instanceof T?-1:t instanceof x?0:1:t instanceof T?0:1}function D(n,t,r){const o=n.navigate(t);if(t instanceof x)for(;o.next()&&(!(o.current()instanceof x)||C(o.current(),r)););else if(t instanceof g)for(;o.next()&&(!(o.current()instanceof g)||C(o.current(),r));)n.expand(o.current());else for(;o.next()&&(!(o.current()instanceof p)||C(o.current(),r));)n.expand(o.current());return o.current()}function z(n,t){let r=n.lastVisibleElement??null;for(;r;){const o=H(t,r);if(o===-1)n.expand(r),r=n.lastVisibleElement;else if(o===1){const d=n.getParentElement(r);if(d instanceof K)break;r=d}else return r}}export{D as getElementToFocusAfterRemoved,z as getLastNodeFromSameType};
