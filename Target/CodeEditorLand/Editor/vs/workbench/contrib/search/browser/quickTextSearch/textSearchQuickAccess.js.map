{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/quickTextSearch/textSearchQuickAccess.ts"],
  "sourcesContent": ["import { Sequencer } from \"../../../../../base/common/async.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport { Event } from \"../../../../../base/common/event.js\";\nimport type { IMatch } from \"../../../../../base/common/filters.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { ResourceSet } from \"../../../../../base/common/map.js\";\nimport {\n\tbasenameOrAuthority,\n\tdirname,\n} from \"../../../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../../../base/common/themables.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport type { IRange } from \"../../../../../editor/common/core/range.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport type { ITextEditorSelection } from \"../../../../../platform/editor/common/editor.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../../platform/label/common/label.js\";\nimport {\n\ttype WorkbenchCompressibleObjectTree,\n\tgetSelectionKeyboardEvent,\n} from \"../../../../../platform/list/browser/listService.js\";\nimport {\n\ttype FastAndSlowPicks,\n\ttype IPickerQuickAccessItem,\n\ttype IPickerQuickAccessSeparator,\n\tPickerQuickAccessProvider,\n\ttype Picks,\n\tTriggerAction,\n} from \"../../../../../platform/quickinput/browser/pickerQuickAccess.js\";\nimport {\n\tDefaultQuickAccessFilterValue,\n\ttype IQuickAccessProviderRunOptions,\n} from \"../../../../../platform/quickinput/common/quickAccess.js\";\nimport {\n\ttype IKeyMods,\n\ttype IQuickPick,\n\ttype IQuickPickItem,\n\tQuickInputButtonLocation,\n\tQuickInputHideReason,\n} from \"../../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\tIWorkspaceContextService,\n\ttype IWorkspaceFolder,\n} from \"../../../../../platform/workspace/common/workspace.js\";\nimport { PickerEditorState } from \"../../../../browser/quickaccess.js\";\nimport type { IWorkbenchEditorConfiguration } from \"../../../../common/editor.js\";\nimport {\n\tACTIVE_GROUP,\n\tIEditorService,\n\tSIDE_GROUP,\n} from \"../../../../services/editor/common/editorService.js\";\nimport {\n\ttype ITextQueryBuilderOptions,\n\tQueryBuilder,\n} from \"../../../../services/search/common/queryBuilder.js\";\nimport {\n\ttype IPatternInfo,\n\ttype ISearchComplete,\n\ttype ITextQuery,\n\tVIEW_ID,\n} from \"../../../../services/search/common/search.js\";\nimport { IViewsService } from \"../../../../services/views/common/viewsService.js\";\nimport {\n\ttype IWorkbenchSearchConfiguration,\n\tgetOutOfWorkspaceEditorResources,\n} from \"../../common/search.js\";\nimport {\n\tsearchActivityBarIcon,\n\tsearchDetailsIcon,\n\tsearchOpenInFileIcon,\n} from \"../searchIcons.js\";\nimport {\n\ttype FileMatch,\n\ttype Match,\n\ttype RenderableMatch,\n\tSearchModel,\n\tSearchModelLocation,\n\tsearchComparer,\n} from \"../searchModel.js\";\nimport { type SearchView, getEditorSelectionFromMatch } from \"../searchView.js\";\n\nexport const TEXT_SEARCH_QUICK_ACCESS_PREFIX = \"%\";\n\nconst DEFAULT_TEXT_QUERY_BUILDER_OPTIONS: ITextQueryBuilderOptions = {\n\t_reason: \"quickAccessSearch\",\n\tdisregardIgnoreFiles: false,\n\tdisregardExcludeSettings: false,\n\tonlyOpenEditors: false,\n\texpandPatterns: true,\n};\n\nconst MAX_FILES_SHOWN = 30;\nconst MAX_RESULTS_PER_FILE = 10;\nconst DEBOUNCE_DELAY = 75;\n\ninterface ITextSearchQuickAccessItem extends IPickerQuickAccessItem {\n\tmatch?: Match;\n}\nexport class TextSearchQuickAccess extends PickerQuickAccessProvider<ITextSearchQuickAccessItem> {\n\tprivate editorSequencer: Sequencer;\n\tprivate queryBuilder: QueryBuilder;\n\tprivate searchModel: SearchModel;\n\tprivate currentAsyncSearch: Promise<ISearchComplete> = Promise.resolve({\n\t\tresults: [],\n\t\tmessages: [],\n\t});\n\tprivate readonly editorViewState: PickerEditorState;\n\n\tprivate _getTextQueryBuilderOptions(\n\t\tcharsPerLine: number,\n\t): ITextQueryBuilderOptions {\n\t\treturn {\n\t\t\t...DEFAULT_TEXT_QUERY_BUILDER_OPTIONS,\n\t\t\t...{\n\t\t\t\textraFileResources: this._instantiationService.invokeFunction(\n\t\t\t\t\tgetOutOfWorkspaceEditorResources,\n\t\t\t\t),\n\t\t\t\tmaxResults: this.configuration.maxResults ?? undefined,\n\t\t\t\tisSmartCase: this.configuration.smartCase,\n\t\t\t},\n\n\t\t\tpreviewOptions: {\n\t\t\t\tmatchLines: 1,\n\t\t\t\tcharsPerLine,\n\t\t\t},\n\t\t};\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly _contextService: IWorkspaceContextService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper(TEXT_SEARCH_QUICK_ACCESS_PREFIX, {\n\t\t\tcanAcceptInBackground: true,\n\t\t\tshouldSkipTrimPickFilter: true,\n\t\t});\n\n\t\tthis.queryBuilder =\n\t\t\tthis._instantiationService.createInstance(QueryBuilder);\n\t\tthis.searchModel = this._register(\n\t\t\tthis._instantiationService.createInstance(SearchModel),\n\t\t);\n\t\tthis.editorViewState = this._register(\n\t\t\tthis._instantiationService.createInstance(PickerEditorState),\n\t\t);\n\t\tthis.searchModel.location = SearchModelLocation.QUICK_ACCESS;\n\t\tthis.editorSequencer = new Sequencer();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.searchModel.dispose();\n\t\tsuper.dispose();\n\t}\n\n\toverride provide(\n\t\tpicker: IQuickPick<ITextSearchQuickAccessItem, { useSeparators: true }>,\n\t\ttoken: CancellationToken,\n\t\trunOptions?: IQuickAccessProviderRunOptions,\n\t): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif (TEXT_SEARCH_QUICK_ACCESS_PREFIX.length < picker.value.length) {\n\t\t\tpicker.valueSelection = [\n\t\t\t\tTEXT_SEARCH_QUICK_ACCESS_PREFIX.length,\n\t\t\t\tpicker.value.length,\n\t\t\t];\n\t\t}\n\t\tpicker.buttons = [\n\t\t\t{\n\t\t\t\tlocation: QuickInputButtonLocation.Inline,\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.goToSearch),\n\t\t\t\ttooltip: localize(\"goToSearch\", \"See in Search Panel\"),\n\t\t\t},\n\t\t];\n\t\tthis.editorViewState.reset();\n\t\tdisposables.add(\n\t\t\tpicker.onDidTriggerButton(() => {\n\t\t\t\tif (this.searchModel.searchResult.count() > 0) {\n\t\t\t\t\tthis.moveToSearchViewlet(undefined);\n\t\t\t\t} else {\n\t\t\t\t\tthis._viewsService.openView(VIEW_ID, true);\n\t\t\t\t}\n\t\t\t\tpicker.hide();\n\t\t\t}),\n\t\t);\n\n\t\tconst onDidChangeActive = () => {\n\t\t\tconst [item] = picker.activeItems;\n\n\t\t\tif (item?.match) {\n\t\t\t\t// we must remember our curret view state to be able to restore (will automatically track if there is already stored state)\n\t\t\t\tthis.editorViewState.set();\n\t\t\t\tconst itemMatch = item.match;\n\t\t\t\tthis.editorSequencer.queue(async () => {\n\t\t\t\t\tawait this.editorViewState.openTransientEditor({\n\t\t\t\t\t\tresource: itemMatch.parent().resource,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\t\t\trevealIfOpened: true,\n\t\t\t\t\t\t\tignoreError: true,\n\t\t\t\t\t\t\tselection: itemMatch.range(),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(\n\t\t\tEvent.debounce(\n\t\t\t\tpicker.onDidChangeActive,\n\t\t\t\t(last, event) => event,\n\t\t\t\tDEBOUNCE_DELAY,\n\t\t\t\ttrue,\n\t\t\t)(onDidChangeActive),\n\t\t);\n\t\tdisposables.add(\n\t\t\tEvent.once(picker.onWillHide)(({ reason }) => {\n\t\t\t\t// Restore view state upon cancellation if we changed it\n\t\t\t\t// but only when the picker was closed via explicit user\n\t\t\t\t// gesture and not e.g. when focus was lost because that\n\t\t\t\t// could mean the user clicked into the editor directly.\n\t\t\t\tif (reason === QuickInputHideReason.Gesture) {\n\t\t\t\t\tthis.editorViewState.restore();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tEvent.once(picker.onDidHide)(({ reason }) => {\n\t\t\t\tthis.searchModel.searchResult.toggleHighlights(false);\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(super.provide(picker, token, runOptions));\n\t\tdisposables.add(\n\t\t\tpicker.onDidAccept(() =>\n\t\t\t\tthis.searchModel.searchResult.toggleHighlights(false),\n\t\t\t),\n\t\t);\n\t\treturn disposables;\n\t}\n\n\tprivate get configuration() {\n\t\tconst editorConfig =\n\t\t\tthis._configurationService.getValue<IWorkbenchEditorConfiguration>()\n\t\t\t\t.workbench?.editor;\n\t\tconst searchConfig =\n\t\t\tthis._configurationService.getValue<IWorkbenchSearchConfiguration>()\n\t\t\t\t.search;\n\n\t\treturn {\n\t\t\topenEditorPinned:\n\t\t\t\t!editorConfig?.enablePreviewFromQuickOpen ||\n\t\t\t\t!editorConfig?.enablePreview,\n\t\t\tpreserveInput: searchConfig.quickAccess.preserveInput,\n\t\t\tmaxResults: searchConfig.maxResults,\n\t\t\tsmartCase: searchConfig.smartCase,\n\t\t\tsortOrder: searchConfig.sortOrder,\n\t\t};\n\t}\n\n\tget defaultFilterValue(): DefaultQuickAccessFilterValue | undefined {\n\t\tif (this.configuration.preserveInput) {\n\t\t\treturn DefaultQuickAccessFilterValue.LAST;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate doSearch(\n\t\tcontentPattern: string,\n\t\ttoken: CancellationToken,\n\t):\n\t\t| {\n\t\t\t\tsyncResults: FileMatch[];\n\t\t\t\tasyncResults: Promise<FileMatch[]>;\n\t\t  }\n\t\t| undefined {\n\t\tif (contentPattern === \"\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst folderResources: IWorkspaceFolder[] =\n\t\t\tthis._contextService.getWorkspace().folders;\n\t\tconst content: IPatternInfo = {\n\t\t\tpattern: contentPattern,\n\t\t};\n\t\tthis.searchModel.searchResult.toggleHighlights(false);\n\t\tconst charsPerLine = content.isRegExp ? 10000 : 1000; // from https://github.com/microsoft/vscode/blob/e7ad5651ac26fa00a40aa1e4010e81b92f655569/src/vs/workbench/contrib/search/browser/searchView.ts#L1508\n\n\t\tconst query: ITextQuery = this.queryBuilder.text(\n\t\t\tcontent,\n\t\t\tfolderResources.map((folder) => folder.uri),\n\t\t\tthis._getTextQueryBuilderOptions(charsPerLine),\n\t\t);\n\n\t\tconst result = this.searchModel.search(query, undefined, token);\n\n\t\tconst getAsyncResults = async () => {\n\t\t\tthis.currentAsyncSearch = result.asyncResults;\n\t\t\tawait result.asyncResults;\n\t\t\tconst syncResultURIs = new ResourceSet(\n\t\t\t\tresult.syncResults.map((e) => e.resource),\n\t\t\t);\n\t\t\treturn this.searchModel.searchResult\n\t\t\t\t.matches()\n\t\t\t\t.filter((e) => !syncResultURIs.has(e.resource));\n\t\t};\n\t\treturn {\n\t\t\tsyncResults: this.searchModel.searchResult.matches(),\n\t\t\tasyncResults: getAsyncResults(),\n\t\t};\n\t}\n\n\tprivate moveToSearchViewlet(currentElem: RenderableMatch | undefined) {\n\t\t// this function takes this._searchModel and moves it to the search viewlet's search model.\n\t\t// then, this._searchModel will construct a new (empty) SearchModel.\n\t\tthis._viewsService.openView(VIEW_ID, false);\n\t\tconst viewlet: SearchView | undefined =\n\t\t\tthis._viewsService.getActiveViewWithId(VIEW_ID) as SearchView;\n\t\tviewlet.replaceSearchModel(this.searchModel, this.currentAsyncSearch);\n\n\t\tthis.searchModel =\n\t\t\tthis._instantiationService.createInstance(SearchModel);\n\t\tthis.searchModel.location = SearchModelLocation.QUICK_ACCESS;\n\n\t\tconst viewer:\n\t\t\t| WorkbenchCompressibleObjectTree<RenderableMatch>\n\t\t\t| undefined = viewlet?.getControl();\n\t\tif (currentElem) {\n\t\t\tviewer.setFocus([currentElem], getSelectionKeyboardEvent());\n\t\t\tviewer.setSelection([currentElem], getSelectionKeyboardEvent());\n\t\t\tviewer.reveal(currentElem);\n\t\t} else {\n\t\t\tviewlet.searchAndReplaceWidget.focus();\n\t\t}\n\t}\n\n\tprivate _getPicksFromMatches(\n\t\tmatches: FileMatch[],\n\t\tlimit: number,\n\t\tfirstFile?: URI,\n\t): (IPickerQuickAccessSeparator | ITextSearchQuickAccessItem)[] {\n\t\tmatches = matches.sort((a, b) => {\n\t\t\tif (firstFile) {\n\t\t\t\tif (firstFile === a.resource) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (firstFile === b.resource) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn searchComparer(a, b, this.configuration.sortOrder);\n\t\t});\n\n\t\tconst files =\n\t\t\tmatches.length > limit ? matches.slice(0, limit) : matches;\n\t\tconst picks: Array<\n\t\t\tITextSearchQuickAccessItem | IPickerQuickAccessSeparator\n\t\t> = [];\n\n\t\tfor (let fileIndex = 0; fileIndex < matches.length; fileIndex++) {\n\t\t\tif (fileIndex === limit) {\n\t\t\t\tpicks.push({\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t});\n\n\t\t\t\tpicks.push({\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"QuickSearchSeeMoreFiles\",\n\t\t\t\t\t\t\"See More Files\",\n\t\t\t\t\t),\n\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchDetailsIcon),\n\t\t\t\t\taccept: async () => {\n\t\t\t\t\t\tthis.moveToSearchViewlet(matches[limit]);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst fileMatch = files[fileIndex];\n\n\t\t\tconst label = basenameOrAuthority(fileMatch.resource);\n\t\t\tconst description = this._labelService.getUriLabel(\n\t\t\t\tdirname(fileMatch.resource),\n\t\t\t\t{ relative: true },\n\t\t\t);\n\n\t\t\tpicks.push({\n\t\t\t\tlabel,\n\t\t\t\ttype: \"separator\",\n\t\t\t\tdescription,\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchOpenInFileIcon),\n\t\t\t\t\t\ttooltip: localize(\"QuickSearchOpenInFile\", \"Open File\"),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttrigger: async (): Promise<TriggerAction> => {\n\t\t\t\t\tawait this.handleAccept(fileMatch, {});\n\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst results: Match[] = fileMatch.matches() ?? [];\n\t\t\tfor (\n\t\t\t\tlet matchIndex = 0;\n\t\t\t\tmatchIndex < results.length;\n\t\t\t\tmatchIndex++\n\t\t\t) {\n\t\t\t\tconst element = results[matchIndex];\n\n\t\t\t\tif (matchIndex === MAX_RESULTS_PER_FILE) {\n\t\t\t\t\tpicks.push({\n\t\t\t\t\t\tlabel: localize(\"QuickSearchMore\", \"More\"),\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchDetailsIcon),\n\t\t\t\t\t\taccept: async () => {\n\t\t\t\t\t\t\tthis.moveToSearchViewlet(element);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst preview = element.preview();\n\t\t\t\tconst previewText = (\n\t\t\t\t\tpreview.before +\n\t\t\t\t\tpreview.inside +\n\t\t\t\t\tpreview.after\n\t\t\t\t)\n\t\t\t\t\t.trim()\n\t\t\t\t\t.substring(0, 999);\n\t\t\t\tconst match: IMatch[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\tstart: preview.before.length,\n\t\t\t\t\t\tend: preview.before.length + preview.inside.length,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\tpicks.push({\n\t\t\t\t\tlabel: `${previewText}`,\n\t\t\t\t\thighlights: {\n\t\t\t\t\t\tlabel: match,\n\t\t\t\t\t},\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(\n\t\t\t\t\t\t\t\tsearchActivityBarIcon,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\t\t\"showMore\",\n\t\t\t\t\t\t\t\t\"See in Search Panel\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tariaLabel: `Match at location ${element.range().startLineNumber}:${element.range().startColumn} - ${previewText}`,\n\t\t\t\t\taccept: async (keyMods, event) => {\n\t\t\t\t\t\tawait this.handleAccept(fileMatch, {\n\t\t\t\t\t\t\tkeyMods,\n\t\t\t\t\t\t\tselection: getEditorSelectionFromMatch(\n\t\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\t\tthis.searchModel,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tpreserveFocus: event.inBackground,\n\t\t\t\t\t\t\tforcePinned: event.inBackground,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\ttrigger: (): TriggerAction => {\n\t\t\t\t\t\tthis.moveToSearchViewlet(element);\n\t\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t\t},\n\t\t\t\t\tmatch: element,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn picks;\n\t}\n\n\tprivate async handleAccept(\n\t\tfileMatch: FileMatch,\n\t\toptions: {\n\t\t\tkeyMods?: IKeyMods;\n\t\t\tselection?: ITextEditorSelection;\n\t\t\tpreserveFocus?: boolean;\n\t\t\trange?: IRange;\n\t\t\tforcePinned?: boolean;\n\t\t\tforceOpenSideBySide?: boolean;\n\t\t},\n\t): Promise<void> {\n\t\tconst editorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned:\n\t\t\t\toptions.keyMods?.ctrlCmd ||\n\t\t\t\toptions.forcePinned ||\n\t\t\t\tthis.configuration.openEditorPinned,\n\t\t\tselection: options.selection,\n\t\t};\n\n\t\t// from https://github.com/microsoft/vscode/blob/f40dabca07a1622b2a0ae3ee741cfc94ab964bef/src/vs/workbench/contrib/search/browser/anythingQuickAccess.ts#L1037\n\t\tconst targetGroup =\n\t\t\toptions.keyMods?.alt ||\n\t\t\t(this.configuration.openEditorPinned && options.keyMods?.ctrlCmd) ||\n\t\t\toptions.forceOpenSideBySide\n\t\t\t\t? SIDE_GROUP\n\t\t\t\t: ACTIVE_GROUP;\n\n\t\tawait this._editorService.openEditor(\n\t\t\t{\n\t\t\t\tresource: fileMatch.resource,\n\t\t\t\toptions: editorOptions,\n\t\t\t},\n\t\t\ttargetGroup,\n\t\t);\n\t}\n\n\tprotected _getPicks(\n\t\tcontentPattern: string,\n\t\tdisposables: DisposableStore,\n\t\ttoken: CancellationToken,\n\t):\n\t\t| Picks<IQuickPickItem>\n\t\t| Promise<Picks<IQuickPickItem> | FastAndSlowPicks<IQuickPickItem>>\n\t\t| FastAndSlowPicks<IQuickPickItem>\n\t\t| null {\n\t\tconst searchModelAtTimeOfSearch = this.searchModel;\n\t\tif (contentPattern === \"\") {\n\t\t\tthis.searchModel.searchResult.clear();\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"enterSearchTerm\",\n\t\t\t\t\t\t\"Enter a term to search for across your files.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tconst conditionalTokenCts = disposables.add(\n\t\t\tnew CancellationTokenSource(),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\tif (\n\t\t\t\t\tsearchModelAtTimeOfSearch.location ===\n\t\t\t\t\tSearchModelLocation.QUICK_ACCESS\n\t\t\t\t) {\n\t\t\t\t\t// if the search model has not been imported to the panel, you can cancel\n\t\t\t\t\tconditionalTokenCts.cancel();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tconst allMatches = this.doSearch(\n\t\t\tcontentPattern,\n\t\t\tconditionalTokenCts.token,\n\t\t);\n\n\t\tif (!allMatches) {\n\t\t\treturn null;\n\t\t}\n\t\tconst matches = allMatches.syncResults;\n\t\tconst syncResult = this._getPicksFromMatches(\n\t\t\tmatches,\n\t\t\tMAX_FILES_SHOWN,\n\t\t\tthis._editorService.activeEditor?.resource,\n\t\t);\n\t\tif (syncResult.length > 0) {\n\t\t\tthis.searchModel.searchResult.toggleHighlights(true);\n\t\t}\n\n\t\tif (matches.length >= MAX_FILES_SHOWN) {\n\t\t\treturn syncResult;\n\t\t}\n\n\t\treturn {\n\t\t\tpicks: syncResult,\n\t\t\tadditionalPicks: allMatches.asyncResults\n\t\t\t\t.then((asyncResults) =>\n\t\t\t\t\tasyncResults.length + syncResult.length === 0\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t\t\"noAnythingResults\",\n\t\t\t\t\t\t\t\t\t\t\"No matching results\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t: this._getPicksFromMatches(\n\t\t\t\t\t\t\t\tasyncResults,\n\t\t\t\t\t\t\t\tMAX_FILES_SHOWN - matches.length,\n\t\t\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t\t.then((picks) => {\n\t\t\t\t\tif (picks.length > 0) {\n\t\t\t\t\t\tthis.searchModel.searchResult.toggleHighlights(true);\n\t\t\t\t\t}\n\t\t\t\t\treturn picks;\n\t\t\t\t}),\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
