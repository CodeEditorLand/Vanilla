{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/quickTextSearch/textSearchQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken, CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { IMatch } from '../../../../../base/common/filters.js';\nimport { DisposableStore, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { ResourceSet } from '../../../../../base/common/map.js';\nimport { basenameOrAuthority, dirname } from '../../../../../base/common/resources.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { IRange } from '../../../../../editor/common/core/range.js';\nimport { localize } from '../../../../../nls.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ITextEditorSelection } from '../../../../../platform/editor/common/editor.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { WorkbenchCompressibleObjectTree, getSelectionKeyboardEvent } from '../../../../../platform/list/browser/listService.js';\nimport { FastAndSlowPicks, IPickerQuickAccessItem, IPickerQuickAccessSeparator, PickerQuickAccessProvider, Picks, TriggerAction } from '../../../../../platform/quickinput/browser/pickerQuickAccess.js';\nimport { DefaultQuickAccessFilterValue, IQuickAccessProviderRunOptions } from '../../../../../platform/quickinput/common/quickAccess.js';\nimport { IKeyMods, IQuickPick, IQuickPickItem, QuickInputButtonLocation, QuickInputHideReason } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { IWorkspaceContextService, IWorkspaceFolder } from '../../../../../platform/workspace/common/workspace.js';\nimport { IWorkbenchEditorConfiguration } from '../../../../common/editor.js';\nimport { searchDetailsIcon, searchOpenInFileIcon, searchActivityBarIcon } from '../searchIcons.js';\nimport { FileMatch, Match, RenderableMatch, SearchModel, SearchModelLocation, searchComparer } from '../searchModel.js';\nimport { SearchView, getEditorSelectionFromMatch } from '../searchView.js';\nimport { IWorkbenchSearchConfiguration, getOutOfWorkspaceEditorResources } from '../../common/search.js';\nimport { ACTIVE_GROUP, IEditorService, SIDE_GROUP } from '../../../../services/editor/common/editorService.js';\nimport { ITextQueryBuilderOptions, QueryBuilder } from '../../../../services/search/common/queryBuilder.js';\nimport { IPatternInfo, ISearchComplete, ITextQuery, VIEW_ID } from '../../../../services/search/common/search.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { PickerEditorState } from '../../../../browser/quickaccess.js';\nimport { IViewsService } from '../../../../services/views/common/viewsService.js';\nimport { Sequencer } from '../../../../../base/common/async.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\n\nexport const TEXT_SEARCH_QUICK_ACCESS_PREFIX = '%';\n\nconst DEFAULT_TEXT_QUERY_BUILDER_OPTIONS: ITextQueryBuilderOptions = {\n\t_reason: 'quickAccessSearch',\n\tdisregardIgnoreFiles: false,\n\tdisregardExcludeSettings: false,\n\tonlyOpenEditors: false,\n\texpandPatterns: true\n};\n\nconst MAX_FILES_SHOWN = 30;\nconst MAX_RESULTS_PER_FILE = 10;\nconst DEBOUNCE_DELAY = 75;\n\ninterface ITextSearchQuickAccessItem extends IPickerQuickAccessItem {\n\tmatch?: Match;\n}\nexport class TextSearchQuickAccess extends PickerQuickAccessProvider<ITextSearchQuickAccessItem> {\n\n\tprivate editorSequencer: Sequencer;\n\tprivate queryBuilder: QueryBuilder;\n\tprivate searchModel: SearchModel;\n\tprivate currentAsyncSearch: Promise<ISearchComplete> = Promise.resolve({\n\t\tresults: [],\n\t\tmessages: []\n\t});\n\tprivate readonly editorViewState: PickerEditorState;\n\n\tprivate _getTextQueryBuilderOptions(charsPerLine: number): ITextQueryBuilderOptions {\n\t\treturn {\n\t\t\t...DEFAULT_TEXT_QUERY_BUILDER_OPTIONS,\n\t\t\t... {\n\t\t\t\textraFileResources: this._instantiationService.invokeFunction(getOutOfWorkspaceEditorResources),\n\t\t\t\tmaxResults: this.configuration.maxResults ?? undefined,\n\t\t\t\tisSmartCase: this.configuration.smartCase,\n\t\t\t},\n\n\t\t\tpreviewOptions: {\n\t\t\t\tmatchLines: 1,\n\t\t\t\tcharsPerLine\n\t\t\t}\n\t\t};\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper(TEXT_SEARCH_QUICK_ACCESS_PREFIX, { canAcceptInBackground: true, shouldSkipTrimPickFilter: true });\n\n\t\tthis.queryBuilder = this._instantiationService.createInstance(QueryBuilder);\n\t\tthis.searchModel = this._register(this._instantiationService.createInstance(SearchModel));\n\t\tthis.editorViewState = this._register(this._instantiationService.createInstance(PickerEditorState));\n\t\tthis.searchModel.location = SearchModelLocation.QUICK_ACCESS;\n\t\tthis.editorSequencer = new Sequencer();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.searchModel.dispose();\n\t\tsuper.dispose();\n\t}\n\n\toverride provide(picker: IQuickPick<ITextSearchQuickAccessItem, { useSeparators: true }>, token: CancellationToken, runOptions?: IQuickAccessProviderRunOptions): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif (TEXT_SEARCH_QUICK_ACCESS_PREFIX.length < picker.value.length) {\n\t\t\tpicker.valueSelection = [TEXT_SEARCH_QUICK_ACCESS_PREFIX.length, picker.value.length];\n\t\t}\n\t\tpicker.buttons = [{\n\t\t\tlocation: QuickInputButtonLocation.Inline,\n\t\t\ticonClass: ThemeIcon.asClassName(Codicon.goToSearch),\n\t\t\ttooltip: localize('goToSearch', \"See in Search Panel\")\n\t\t}];\n\t\tthis.editorViewState.reset();\n\t\tdisposables.add(picker.onDidTriggerButton(() => {\n\t\t\tif (this.searchModel.searchResult.count() > 0) {\n\t\t\t\tthis.moveToSearchViewlet(undefined);\n\t\t\t} else {\n\t\t\t\tthis._viewsService.openView(VIEW_ID, true);\n\t\t\t}\n\t\t\tpicker.hide();\n\t\t}));\n\n\t\tconst onDidChangeActive = () => {\n\t\t\tconst [item] = picker.activeItems;\n\n\t\t\tif (item?.match) {\n\t\t\t\t// we must remember our curret view state to be able to restore (will automatically track if there is already stored state)\n\t\t\t\tthis.editorViewState.set();\n\t\t\t\tconst itemMatch = item.match;\n\t\t\t\tthis.editorSequencer.queue(async () => {\n\t\t\t\t\tawait this.editorViewState.openTransientEditor({\n\t\t\t\t\t\tresource: itemMatch.parent().resource,\n\t\t\t\t\t\toptions: { preserveFocus: true, revealIfOpened: true, ignoreError: true, selection: itemMatch.range() }\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(Event.debounce(picker.onDidChangeActive, (last, event) => event, DEBOUNCE_DELAY, true)(onDidChangeActive));\n\t\tdisposables.add(Event.once(picker.onWillHide)(({ reason }) => {\n\t\t\t// Restore view state upon cancellation if we changed it\n\t\t\t// but only when the picker was closed via explicit user\n\t\t\t// gesture and not e.g. when focus was lost because that\n\t\t\t// could mean the user clicked into the editor directly.\n\t\t\tif (reason === QuickInputHideReason.Gesture) {\n\t\t\t\tthis.editorViewState.restore();\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(Event.once(picker.onDidHide)(({ reason }) => {\n\t\t\tthis.searchModel.searchResult.toggleHighlights(false);\n\t\t}));\n\n\t\tdisposables.add(super.provide(picker, token, runOptions));\n\t\tdisposables.add(picker.onDidAccept(() => this.searchModel.searchResult.toggleHighlights(false)));\n\t\treturn disposables;\n\t}\n\n\tprivate get configuration() {\n\t\tconst editorConfig = this._configurationService.getValue<IWorkbenchEditorConfiguration>().workbench?.editor;\n\t\tconst searchConfig = this._configurationService.getValue<IWorkbenchSearchConfiguration>().search;\n\n\t\treturn {\n\t\t\topenEditorPinned: !editorConfig?.enablePreviewFromQuickOpen || !editorConfig?.enablePreview,\n\t\t\tpreserveInput: searchConfig.quickAccess.preserveInput,\n\t\t\tmaxResults: searchConfig.maxResults,\n\t\t\tsmartCase: searchConfig.smartCase,\n\t\t\tsortOrder: searchConfig.sortOrder,\n\t\t};\n\t}\n\n\tget defaultFilterValue(): DefaultQuickAccessFilterValue | undefined {\n\t\tif (this.configuration.preserveInput) {\n\t\t\treturn DefaultQuickAccessFilterValue.LAST;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate doSearch(contentPattern: string, token: CancellationToken): {\n\t\tsyncResults: FileMatch[];\n\t\tasyncResults: Promise<FileMatch[]>;\n\t} | undefined {\n\t\tif (contentPattern === '') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst folderResources: IWorkspaceFolder[] = this._contextService.getWorkspace().folders;\n\t\tconst content: IPatternInfo = {\n\t\t\tpattern: contentPattern,\n\t\t};\n\t\tthis.searchModel.searchResult.toggleHighlights(false);\n\t\tconst charsPerLine = content.isRegExp ? 10000 : 1000; // from https://github.com/microsoft/vscode/blob/e7ad5651ac26fa00a40aa1e4010e81b92f655569/src/vs/workbench/contrib/search/browser/searchView.ts#L1508\n\n\t\tconst query: ITextQuery = this.queryBuilder.text(content, folderResources.map(folder => folder.uri), this._getTextQueryBuilderOptions(charsPerLine));\n\n\t\tconst result = this.searchModel.search(query, undefined, token);\n\n\t\tconst getAsyncResults = async () => {\n\t\t\tthis.currentAsyncSearch = result.asyncResults;\n\t\t\tawait result.asyncResults;\n\t\t\tconst syncResultURIs = new ResourceSet(result.syncResults.map(e => e.resource));\n\t\t\treturn this.searchModel.searchResult.matches().filter(e => !syncResultURIs.has(e.resource));\n\t\t};\n\t\treturn {\n\t\t\tsyncResults: this.searchModel.searchResult.matches(),\n\t\t\tasyncResults: getAsyncResults()\n\t\t};\n\t}\n\n\tprivate moveToSearchViewlet(currentElem: RenderableMatch | undefined) {\n\t\t// this function takes this._searchModel and moves it to the search viewlet's search model.\n\t\t// then, this._searchModel will construct a new (empty) SearchModel.\n\t\tthis._viewsService.openView(VIEW_ID, false);\n\t\tconst viewlet: SearchView | undefined = this._viewsService.getActiveViewWithId(VIEW_ID) as SearchView;\n\t\tviewlet.replaceSearchModel(this.searchModel, this.currentAsyncSearch);\n\n\t\tthis.searchModel = this._instantiationService.createInstance(SearchModel);\n\t\tthis.searchModel.location = SearchModelLocation.QUICK_ACCESS;\n\n\t\tconst viewer: WorkbenchCompressibleObjectTree<RenderableMatch> | undefined = viewlet?.getControl();\n\t\tif (currentElem) {\n\t\t\tviewer.setFocus([currentElem], getSelectionKeyboardEvent());\n\t\t\tviewer.setSelection([currentElem], getSelectionKeyboardEvent());\n\t\t\tviewer.reveal(currentElem);\n\t\t} else {\n\t\t\tviewlet.searchAndReplaceWidget.focus();\n\t\t}\n\t}\n\n\n\tprivate _getPicksFromMatches(matches: FileMatch[], limit: number, firstFile?: URI): (IPickerQuickAccessSeparator | ITextSearchQuickAccessItem)[] {\n\t\tmatches = matches.sort((a, b) => {\n\t\t\tif (firstFile) {\n\t\t\t\tif (firstFile === a.resource) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (firstFile === b.resource) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn searchComparer(a, b, this.configuration.sortOrder);\n\t\t});\n\n\t\tconst files = matches.length > limit ? matches.slice(0, limit) : matches;\n\t\tconst picks: Array<ITextSearchQuickAccessItem | IPickerQuickAccessSeparator> = [];\n\n\t\tfor (let fileIndex = 0; fileIndex < matches.length; fileIndex++) {\n\t\t\tif (fileIndex === limit) {\n\n\t\t\t\tpicks.push({\n\t\t\t\t\ttype: 'separator',\n\t\t\t\t});\n\n\t\t\t\tpicks.push({\n\t\t\t\t\tlabel: localize('QuickSearchSeeMoreFiles', \"See More Files\"),\n\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchDetailsIcon),\n\t\t\t\t\taccept: async () => {\n\t\t\t\t\t\tthis.moveToSearchViewlet(matches[limit]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst fileMatch = files[fileIndex];\n\n\t\t\tconst label = basenameOrAuthority(fileMatch.resource);\n\t\t\tconst description = this._labelService.getUriLabel(dirname(fileMatch.resource), { relative: true });\n\n\n\t\t\tpicks.push({\n\t\t\t\tlabel,\n\t\t\t\ttype: 'separator',\n\t\t\t\tdescription,\n\t\t\t\tbuttons: [{\n\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchOpenInFileIcon),\n\t\t\t\t\ttooltip: localize('QuickSearchOpenInFile', \"Open File\")\n\t\t\t\t}],\n\t\t\t\ttrigger: async (): Promise<TriggerAction> => {\n\t\t\t\t\tawait this.handleAccept(fileMatch, {});\n\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst results: Match[] = fileMatch.matches() ?? [];\n\t\t\tfor (let matchIndex = 0; matchIndex < results.length; matchIndex++) {\n\t\t\t\tconst element = results[matchIndex];\n\n\t\t\t\tif (matchIndex === MAX_RESULTS_PER_FILE) {\n\t\t\t\t\tpicks.push({\n\t\t\t\t\t\tlabel: localize('QuickSearchMore', \"More\"),\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchDetailsIcon),\n\t\t\t\t\t\taccept: async () => {\n\t\t\t\t\t\t\tthis.moveToSearchViewlet(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst preview = element.preview();\n\t\t\t\tconst previewText = (preview.before + preview.inside + preview.after).trim().substring(0, 999);\n\t\t\t\tconst match: IMatch[] = [{\n\t\t\t\t\tstart: preview.before.length,\n\t\t\t\t\tend: preview.before.length + preview.inside.length\n\t\t\t\t}];\n\t\t\t\tpicks.push({\n\t\t\t\t\tlabel: `${previewText}`,\n\t\t\t\t\thighlights: {\n\t\t\t\t\t\tlabel: match\n\t\t\t\t\t},\n\t\t\t\t\tbuttons: [{\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchActivityBarIcon),\n\t\t\t\t\t\ttooltip: localize('showMore', \"See in Search Panel\"),\n\t\t\t\t\t}],\n\t\t\t\t\tariaLabel: `Match at location ${element.range().startLineNumber}:${element.range().startColumn} - ${previewText}`,\n\t\t\t\t\taccept: async (keyMods, event) => {\n\t\t\t\t\t\tawait this.handleAccept(fileMatch, {\n\t\t\t\t\t\t\tkeyMods,\n\t\t\t\t\t\t\tselection: getEditorSelectionFromMatch(element, this.searchModel),\n\t\t\t\t\t\t\tpreserveFocus: event.inBackground,\n\t\t\t\t\t\t\tforcePinned: event.inBackground\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\ttrigger: (): TriggerAction => {\n\t\t\t\t\t\tthis.moveToSearchViewlet(element);\n\t\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t\t},\n\t\t\t\t\tmatch: element\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn picks;\n\t}\n\n\tprivate async handleAccept(fileMatch: FileMatch, options: { keyMods?: IKeyMods; selection?: ITextEditorSelection; preserveFocus?: boolean; range?: IRange; forcePinned?: boolean; forceOpenSideBySide?: boolean }): Promise<void> {\n\t\tconst editorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.keyMods?.ctrlCmd || options.forcePinned || this.configuration.openEditorPinned,\n\t\t\tselection: options.selection\n\t\t};\n\n\t\t// from https://github.com/microsoft/vscode/blob/f40dabca07a1622b2a0ae3ee741cfc94ab964bef/src/vs/workbench/contrib/search/browser/anythingQuickAccess.ts#L1037\n\t\tconst targetGroup = options.keyMods?.alt || (this.configuration.openEditorPinned && options.keyMods?.ctrlCmd) || options.forceOpenSideBySide ? SIDE_GROUP : ACTIVE_GROUP;\n\n\t\tawait this._editorService.openEditor({\n\t\t\tresource: fileMatch.resource,\n\t\t\toptions: editorOptions\n\t\t}, targetGroup);\n\t}\n\n\tprotected _getPicks(contentPattern: string, disposables: DisposableStore, token: CancellationToken): Picks<IQuickPickItem> | Promise<Picks<IQuickPickItem> | FastAndSlowPicks<IQuickPickItem>> | FastAndSlowPicks<IQuickPickItem> | null {\n\n\t\tconst searchModelAtTimeOfSearch = this.searchModel;\n\t\tif (contentPattern === '') {\n\n\t\t\tthis.searchModel.searchResult.clear();\n\t\t\treturn [{\n\t\t\t\tlabel: localize('enterSearchTerm', \"Enter a term to search for across your files.\")\n\t\t\t}];\n\t\t}\n\n\t\tconst conditionalTokenCts = disposables.add(new CancellationTokenSource());\n\n\t\tdisposables.add(token.onCancellationRequested(() => {\n\t\t\tif (searchModelAtTimeOfSearch.location === SearchModelLocation.QUICK_ACCESS) {\n\t\t\t\t// if the search model has not been imported to the panel, you can cancel\n\t\t\t\tconditionalTokenCts.cancel();\n\t\t\t}\n\t\t}));\n\t\tconst allMatches = this.doSearch(contentPattern, conditionalTokenCts.token);\n\n\t\tif (!allMatches) {\n\t\t\treturn null;\n\t\t}\n\t\tconst matches = allMatches.syncResults;\n\t\tconst syncResult = this._getPicksFromMatches(matches, MAX_FILES_SHOWN, this._editorService.activeEditor?.resource);\n\t\tif (syncResult.length > 0) {\n\t\t\tthis.searchModel.searchResult.toggleHighlights(true);\n\t\t}\n\n\t\tif (matches.length >= MAX_FILES_SHOWN) {\n\t\t\treturn syncResult;\n\t\t}\n\n\t\treturn {\n\t\t\tpicks: syncResult,\n\t\t\tadditionalPicks: allMatches.asyncResults\n\t\t\t\t.then(asyncResults => (asyncResults.length + syncResult.length === 0) ? [{\n\t\t\t\t\tlabel: localize('noAnythingResults', \"No matching results\")\n\t\t\t\t}] : this._getPicksFromMatches(asyncResults, MAX_FILES_SHOWN - matches.length))\n\t\t\t\t.then(picks => {\n\t\t\t\t\tif (picks.length > 0) {\n\t\t\t\t\t\tthis.searchModel.searchResult.toggleHighlights(true);\n\t\t\t\t\t}\n\t\t\t\t\treturn picks;\n\t\t\t\t})\n\t\t};\n\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
