{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsSymbol.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport * as Constants from \"../common/constants.js\";\n\n//#region Actions\nregisterAction2(\n\tclass ShowAllSymbolsAction extends Action2 {\n\t\tstatic readonly ID = \"workbench.action.showAllSymbols\";\n\t\tstatic readonly LABEL = nls.localize(\n\t\t\t\"showTriggerActions\",\n\t\t\t\"Go to Symbol in Workspace...\",\n\t\t);\n\t\tstatic readonly ALL_SYMBOLS_PREFIX = \"#\";\n\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.ShowAllSymbolsActionId,\n\t\t\t\ttitle: {\n\t\t\t\t\t...nls.localize2(\n\t\t\t\t\t\t\"showTriggerActions\",\n\t\t\t\t\t\t\"Go to Symbol in Workspace...\",\n\t\t\t\t\t),\n\t\t\t\t\tmnemonicTitle: nls.localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miGotoSymbolInWorkspace\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Go to Symbol in &&Workspace...\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyT,\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.MenubarGoMenu,\n\t\t\t\t\tgroup: \"3_global_nav\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\t\taccessor\n\t\t\t\t.get(IQuickInputService)\n\t\t\t\t.quickAccess.show(ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX);\n\t\t}\n\t},\n);\n\n//#endregion\n"],
  "mappings": ";;AAKA,SAAS,SAAS,cAAc;AAChC,YAAY,SAAS;AACrB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC,YAAY,eAAe;AAG3B;AAAA,EACC,MAAM,6BAA6B,QAAQ;AAAA,IAnB5C,OAmB4C;AAAA;AAAA;AAAA,IAC1C,OAAgB,KAAK;AAAA,IACrB,OAAgB,QAAQ,IAAI;AAAA,MAC3B;AAAA,MACA;AAAA,IACD;AAAA,IACA,OAAgB,qBAAqB;AAAA,IAErC,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO;AAAA,UACN,GAAG,IAAI;AAAA,YACN;AAAA,YACA;AAAA,UACD;AAAA,UACA,eAAe,IAAI;AAAA,YAClB;AAAA,cACC,KAAK;AAAA,cACL,SAAS,CAAC,uBAAuB;AAAA,YAClC;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,UAAU,QAAQ;AAAA,QACnC;AAAA,QACA,MAAM;AAAA,UACL,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA2C;AAC7D,eACE,IAAI,kBAAkB,EACtB,YAAY,KAAK,qBAAqB,kBAAkB;AAAA,IAC3D;AAAA,EACD;AACD;",
  "names": []
}
