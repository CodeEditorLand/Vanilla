{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsSymbol.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport * as Constants from '../common/constants.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\n\n//#region Actions\nregisterAction2(class ShowAllSymbolsAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.showAllSymbols';\n\tstatic readonly LABEL = nls.localize('showTriggerActions', \"Go to Symbol in Workspace...\");\n\tstatic readonly ALL_SYMBOLS_PREFIX = '#';\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ShowAllSymbolsActionId,\n\t\t\ttitle: {\n\t\t\t\t...nls.localize2('showTriggerActions', \"Go to Symbol in Workspace...\"),\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miGotoSymbolInWorkspace', comment: ['&& denotes a mnemonic'] }, \"Go to Symbol in &&Workspace...\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyT\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarGoMenu,\n\t\t\t\tgroup: '3_global_nav',\n\t\t\t\torder: 2\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\taccessor.get(IQuickInputService).quickAccess.show(ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX);\n\t}\n});\n\n//#endregion\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AACrB,SAAS,wBAAwB;AACjC,YAAY,eAAe;AAC3B,SAAS,SAAS,QAAQ,uBAAuB;AACjD,SAAS,wBAAwB;AACjC,SAAS,SAAS,cAAc;AAChC,SAAS,0BAA0B;AAGnC,gBAAgB,MAAM,6BAA6B,QAAQ;AAAA,EAd3D,OAc2D;AAAA;AAAA;AAAA,EAE1D,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ,IAAI,SAAS,sBAAsB,8BAA8B;AAAA,EACzF,OAAgB,qBAAqB;AAAA,EAErC,cACE;AACD,UAAM;AAAA,MACL,IAAI,UAAU,iBAAiB;AAAA,MAC/B,OAAO;AAAA,QACN,GAAG,IAAI,UAAU,sBAAsB,8BAA8B;AAAA,QACrE,eAAe,IAAI,SAAS,EAAE,KAAK,2BAA2B,SAAS,CAAC,uBAAuB,EAAE,GAAG,gCAAgC;AAAA,MACrI;AAAA,MACA,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS,OAAO,UAAU,QAAQ;AAAA,MACnC;AAAA,MACA,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,aAAS,IAAI,kBAAkB,EAAE,YAAY,KAAK,qBAAqB,kBAAkB;AAAA,EAC1F;AACD,CAAC;",
  "names": []
}
