{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsBase.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from '../../../../base/browser/dom.js';\nimport { ResolvedKeybinding } from '../../../../base/common/keybindings.js';\nimport * as nls from '../../../../nls.js';\nimport { WorkbenchCompressibleObjectTree } from '../../../../platform/list/browser/listService.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { SearchView } from './searchView.js';\nimport { FileMatch, FolderMatch, Match, RenderableMatch, searchComparer } from './searchModel.js';\nimport { ISearchConfigurationProperties, VIEW_ID } from '../../../services/search/common/search.js';\n\nexport const category = nls.localize2('search', \"Search\");\n\nexport function isSearchViewFocused(viewsService: IViewsService): boolean {\n\tconst searchView = getSearchView(viewsService);\n\treturn !!(searchView && DOM.isAncestorOfActiveElement(searchView.getContainer()));\n}\n\nexport function appendKeyBindingLabel(label: string, inputKeyBinding: ResolvedKeybinding | undefined): string {\n\treturn doAppendKeyBindingLabel(label, inputKeyBinding);\n}\n\nexport function getSearchView(viewsService: IViewsService): SearchView | undefined {\n\treturn viewsService.getActiveViewWithId(VIEW_ID) as SearchView;\n}\n\nexport function getElementsToOperateOn(viewer: WorkbenchCompressibleObjectTree<RenderableMatch, void>, currElement: RenderableMatch | undefined, sortConfig: ISearchConfigurationProperties): RenderableMatch[] {\n\tlet elements: RenderableMatch[] = viewer.getSelection().filter((x): x is RenderableMatch => x !== null).sort((a, b) => searchComparer(a, b, sortConfig.sortOrder));\n\n\t// if selection doesn't include multiple elements, just return current focus element.\n\tif (currElement && !(elements.length > 1 && elements.includes(currElement))) {\n\t\telements = [currElement];\n\t}\n\n\treturn elements;\n}\n\n/**\n * @param elements elements that are going to be removed\n * @param focusElement element that is focused\n * @returns whether we need to re-focus on a remove\n */\nexport function shouldRefocus(elements: RenderableMatch[], focusElement: RenderableMatch | undefined) {\n\tif (!focusElement) {\n\t\treturn false;\n\t}\n\treturn !focusElement || elements.includes(focusElement) || hasDownstreamMatch(elements, focusElement);\n}\n\nfunction hasDownstreamMatch(elements: RenderableMatch[], focusElement: RenderableMatch) {\n\tfor (const elem of elements) {\n\t\tif ((elem instanceof FileMatch && focusElement instanceof Match && elem.matches().includes(focusElement)) ||\n\t\t\t(elem instanceof FolderMatch && (\n\t\t\t\t(focusElement instanceof FileMatch && elem.getDownstreamFileMatch(focusElement.resource)) ||\n\t\t\t\t(focusElement instanceof Match && elem.getDownstreamFileMatch(focusElement.parent().resource))\n\t\t\t))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\n}\n\nexport function openSearchView(viewsService: IViewsService, focus?: boolean): Promise<SearchView | undefined> {\n\treturn viewsService.openView(VIEW_ID, focus).then(view => (view as SearchView ?? undefined));\n}\n\nfunction doAppendKeyBindingLabel(label: string, keyBinding: ResolvedKeybinding | undefined): string {\n\treturn keyBinding ? label + ' (' + keyBinding.getLabel() + ')' : label;\n}\n\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AACrB,SAAS,0BAA0B;AACnC,YAAY,SAAS;AACrB,SAAS,uCAAuC;AAChD,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB;AAC3B,SAAS,WAAW,aAAa,OAAO,iBAAiB,sBAAsB;AAC/E,SAAS,gCAAgC,eAAe;AAEjD,MAAM,WAAW,IAAI,UAAU,UAAU,QAAQ;AAEjD,SAAS,oBAAoB,cAAsC;AACzE,QAAM,aAAa,cAAc,YAAY;AAC7C,SAAO,CAAC,EAAE,cAAc,IAAI,0BAA0B,WAAW,aAAa,CAAC;AAChF;AAHgB;AAKT,SAAS,sBAAsB,OAAe,iBAAyD;AAC7G,SAAO,wBAAwB,OAAO,eAAe;AACtD;AAFgB;AAIT,SAAS,cAAc,cAAqD;AAClF,SAAO,aAAa,oBAAoB,OAAO;AAChD;AAFgB;AAIT,SAAS,uBAAuB,QAAgE,aAA0C,YAA+D;AAC/M,MAAI,WAA8B,OAAO,aAAa,EAAE,OAAO,CAAC,MAA4B,MAAM,IAAI,EAAE,KAAK,CAAC,GAAG,MAAM,eAAe,GAAG,GAAG,WAAW,SAAS,CAAC;AAGjK,MAAI,eAAe,EAAE,SAAS,SAAS,KAAK,SAAS,SAAS,WAAW,IAAI;AAC5E,eAAW,CAAC,WAAW;AAAA,EACxB;AAEA,SAAO;AACR;AATgB;AAgBT,SAAS,cAAc,UAA6B,cAA2C;AACrG,MAAI,CAAC,cAAc;AAClB,WAAO;AAAA,EACR;AACA,SAAO,CAAC,gBAAgB,SAAS,SAAS,YAAY,KAAK,mBAAmB,UAAU,YAAY;AACrG;AALgB;AAOhB,SAAS,mBAAmB,UAA6B,cAA+B;AACvF,aAAW,QAAQ,UAAU;AAC5B,QAAK,gBAAgB,aAAa,wBAAwB,SAAS,KAAK,QAAQ,EAAE,SAAS,YAAY,KACrG,gBAAgB,gBACf,wBAAwB,aAAa,KAAK,uBAAuB,aAAa,QAAQ,KACtF,wBAAwB,SAAS,KAAK,uBAAuB,aAAa,OAAO,EAAE,QAAQ,IACzF;AACJ,aAAO;AAAA,IACR;AAAA,EACD;AACA,SAAO;AAER;AAZS;AAcF,SAAS,eAAe,cAA6B,OAAkD;AAC7G,SAAO,aAAa,SAAS,SAAS,KAAK,EAAE,KAAK,UAAS,QAAsB,MAAU;AAC5F;AAFgB;AAIhB,SAAS,wBAAwB,OAAe,YAAoD;AACnG,SAAO,aAAa,QAAQ,OAAO,WAAW,SAAS,IAAI,MAAM;AAClE;AAFS;",
  "names": []
}
