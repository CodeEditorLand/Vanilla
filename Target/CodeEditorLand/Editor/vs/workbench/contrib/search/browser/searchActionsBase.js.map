{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsBase.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../base/browser/dom.js\";\nimport type { ResolvedKeybinding } from \"../../../../base/common/keybindings.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { WorkbenchCompressibleObjectTree } from \"../../../../platform/list/browser/listService.js\";\nimport {\n\ttype ISearchConfigurationProperties,\n\tVIEW_ID,\n} from \"../../../services/search/common/search.js\";\nimport type { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport {\n\tFileMatch,\n\tFolderMatch,\n\tMatch,\n\ttype RenderableMatch,\n\tsearchComparer,\n} from \"./searchModel.js\";\nimport type { SearchView } from \"./searchView.js\";\n\nexport const category = nls.localize2(\"search\", \"Search\");\n\nexport function isSearchViewFocused(viewsService: IViewsService): boolean {\n\tconst searchView = getSearchView(viewsService);\n\treturn !!(\n\t\tsearchView && DOM.isAncestorOfActiveElement(searchView.getContainer())\n\t);\n}\n\nexport function appendKeyBindingLabel(\n\tlabel: string,\n\tinputKeyBinding: ResolvedKeybinding | undefined,\n): string {\n\treturn doAppendKeyBindingLabel(label, inputKeyBinding);\n}\n\nexport function getSearchView(\n\tviewsService: IViewsService,\n): SearchView | undefined {\n\treturn viewsService.getActiveViewWithId(VIEW_ID) as SearchView;\n}\n\nexport function getElementsToOperateOn(\n\tviewer: WorkbenchCompressibleObjectTree<RenderableMatch, void>,\n\tcurrElement: RenderableMatch | undefined,\n\tsortConfig: ISearchConfigurationProperties,\n): RenderableMatch[] {\n\tlet elements: RenderableMatch[] = viewer\n\t\t.getSelection()\n\t\t.filter((x): x is RenderableMatch => x !== null)\n\t\t.sort((a, b) => searchComparer(a, b, sortConfig.sortOrder));\n\n\t// if selection doesn't include multiple elements, just return current focus element.\n\tif (\n\t\tcurrElement &&\n\t\t!(elements.length > 1 && elements.includes(currElement))\n\t) {\n\t\telements = [currElement];\n\t}\n\n\treturn elements;\n}\n\n/**\n * @param elements elements that are going to be removed\n * @param focusElement element that is focused\n * @returns whether we need to re-focus on a remove\n */\nexport function shouldRefocus(\n\telements: RenderableMatch[],\n\tfocusElement: RenderableMatch | undefined,\n) {\n\tif (!focusElement) {\n\t\treturn false;\n\t}\n\treturn (\n\t\t!focusElement ||\n\t\telements.includes(focusElement) ||\n\t\thasDownstreamMatch(elements, focusElement)\n\t);\n}\n\nfunction hasDownstreamMatch(\n\telements: RenderableMatch[],\n\tfocusElement: RenderableMatch,\n) {\n\tfor (const elem of elements) {\n\t\tif (\n\t\t\t(elem instanceof FileMatch &&\n\t\t\t\tfocusElement instanceof Match &&\n\t\t\t\telem.matches().includes(focusElement)) ||\n\t\t\t(elem instanceof FolderMatch &&\n\t\t\t\t((focusElement instanceof FileMatch &&\n\t\t\t\t\telem.getDownstreamFileMatch(focusElement.resource)) ||\n\t\t\t\t\t(focusElement instanceof Match &&\n\t\t\t\t\t\telem.getDownstreamFileMatch(\n\t\t\t\t\t\t\tfocusElement.parent().resource,\n\t\t\t\t\t\t))))\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function openSearchView(\n\tviewsService: IViewsService,\n\tfocus?: boolean,\n): Promise<SearchView | undefined> {\n\treturn viewsService\n\t\t.openView(VIEW_ID, focus)\n\t\t.then((view) => (view as SearchView) ?? undefined);\n}\n\nfunction doAppendKeyBindingLabel(\n\tlabel: string,\n\tkeyBinding: ResolvedKeybinding | undefined,\n): string {\n\treturn keyBinding ? label + \" (\" + keyBinding.getLabel() + \")\" : label;\n}\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AAErB,YAAY,SAAS;AAErB;AAAA,EAEC;AAAA,OACM;AAEP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,OACM;AAGA,MAAM,WAAW,IAAI,UAAU,UAAU,QAAQ;AAEjD,SAAS,oBAAoB,cAAsC;AACzE,QAAM,aAAa,cAAc,YAAY;AAC7C,SAAO,CAAC,EACP,cAAc,IAAI,0BAA0B,WAAW,aAAa,CAAC;AAEvE;AALgB;AAOT,SAAS,sBACf,OACA,iBACS;AACT,SAAO,wBAAwB,OAAO,eAAe;AACtD;AALgB;AAOT,SAAS,cACf,cACyB;AACzB,SAAO,aAAa,oBAAoB,OAAO;AAChD;AAJgB;AAMT,SAAS,uBACf,QACA,aACA,YACoB;AACpB,MAAI,WAA8B,OAChC,aAAa,EACb,OAAO,CAAC,MAA4B,MAAM,IAAI,EAC9C,KAAK,CAAC,GAAG,MAAM,eAAe,GAAG,GAAG,WAAW,SAAS,CAAC;AAG3D,MACC,eACA,EAAE,SAAS,SAAS,KAAK,SAAS,SAAS,WAAW,IACrD;AACD,eAAW,CAAC,WAAW;AAAA,EACxB;AAEA,SAAO;AACR;AAnBgB;AA0BT,SAAS,cACf,UACA,cACC;AACD,MAAI,CAAC,cAAc;AAClB,WAAO;AAAA,EACR;AACA,SACC,CAAC,gBACD,SAAS,SAAS,YAAY,KAC9B,mBAAmB,UAAU,YAAY;AAE3C;AAZgB;AAchB,SAAS,mBACR,UACA,cACC;AACD,aAAW,QAAQ,UAAU;AAC5B,QACE,gBAAgB,aAChB,wBAAwB,SACxB,KAAK,QAAQ,EAAE,SAAS,YAAY,KACpC,gBAAgB,gBACd,wBAAwB,aACzB,KAAK,uBAAuB,aAAa,QAAQ,KAChD,wBAAwB,SACxB,KAAK;AAAA,MACJ,aAAa,OAAO,EAAE;AAAA,IACvB,IACF;AACD,aAAO;AAAA,IACR;AAAA,EACD;AACA,SAAO;AACR;AArBS;AAuBF,SAAS,eACf,cACA,OACkC;AAClC,SAAO,aACL,SAAS,SAAS,KAAK,EACvB,KAAK,CAAC,SAAU,QAAuB,MAAS;AACnD;AAPgB;AAShB,SAAS,wBACR,OACA,YACS;AACT,SAAO,aAAa,QAAQ,OAAO,WAAW,SAAS,IAAI,MAAM;AAClE;AALS;",
  "names": []
}
