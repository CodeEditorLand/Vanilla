{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/patternInputWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type { IKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport type { IContextViewProvider } from \"../../../../base/browser/ui/contextview/contextview.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport type {\n\tHistoryInputBox,\n\tIInputBoxStyles,\n} from \"../../../../base/browser/ui/inputbox/inputBox.js\";\nimport { Toggle } from \"../../../../base/browser/ui/toggle/toggle.js\";\nimport { Widget } from \"../../../../base/browser/ui/widget.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport {\n\ttype Event as CommonEvent,\n\tEmitter,\n} from \"../../../../base/common/event.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { ContextScopedHistoryInputBox } from \"../../../../platform/history/browser/contextScopedHistoryWidget.js\";\nimport { showHistoryKeybindingHint } from \"../../../../platform/history/browser/historyWidgetKeybindingHint.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { defaultToggleStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\n\nexport interface IOptions {\n\tplaceholder?: string;\n\tshowPlaceholderOnFocus?: boolean;\n\ttooltip?: string;\n\twidth?: number;\n\tariaLabel?: string;\n\thistory?: string[];\n\tinputBoxStyles: IInputBoxStyles;\n}\n\nexport class PatternInputWidget extends Widget {\n\tstatic OPTION_CHANGE = \"optionChange\";\n\n\tinputFocusTracker!: dom.IFocusTracker;\n\n\tprivate width: number;\n\n\tprivate domNode!: HTMLElement;\n\tprotected inputBox!: HistoryInputBox;\n\n\tprivate _onSubmit = this._register(new Emitter<boolean>());\n\tonSubmit: CommonEvent<boolean /* triggeredOnType */> = this._onSubmit.event;\n\n\tprivate _onCancel = this._register(new Emitter<void>());\n\tonCancel: CommonEvent<void> = this._onCancel.event;\n\n\tconstructor(parent: HTMLElement, private contextViewProvider: IContextViewProvider, options: IOptions,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\t\toptions = {\n\t\t\t...{\n\t\t\t\tariaLabel: nls.localize('defaultLabel', \"input\")\n\t\t\t},\n\t\t\t...options,\n\t\t};\n\t\tthis.width = options.width ?? 100;\n\n\t\tthis.render(options);\n\n\t\tparent.appendChild(this.domNode);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.inputFocusTracker?.dispose();\n\t}\n\n\tsetWidth(newWidth: number): void {\n\t\tthis.width = newWidth;\n\t\tthis.contextViewProvider.layout();\n\t\tthis.setInputWidth();\n\t}\n\n\tgetValue(): string {\n\t\treturn this.inputBox.value;\n\t}\n\n\tsetValue(value: string): void {\n\t\tif (this.inputBox.value !== value) {\n\t\t\tthis.inputBox.value = value;\n\t\t}\n\t}\n\n\tselect(): void {\n\t\tthis.inputBox.select();\n\t}\n\n\tfocus(): void {\n\t\tthis.inputBox.focus();\n\t}\n\n\tinputHasFocus(): boolean {\n\t\treturn this.inputBox.hasFocus();\n\t}\n\n\tprivate setInputWidth(): void {\n\t\tthis.inputBox.width = this.width - this.getSubcontrolsWidth() - 2; // 2 for input box border\n\t}\n\n\tprotected getSubcontrolsWidth(): number {\n\t\treturn 0;\n\t}\n\n\tgetHistory(): string[] {\n\t\treturn this.inputBox.getHistory();\n\t}\n\n\tclearHistory(): void {\n\t\tthis.inputBox.clearHistory();\n\t}\n\n\tprependHistory(history: string[]): void {\n\t\tthis.inputBox.prependHistory(history);\n\t}\n\n\tclear(): void {\n\t\tthis.setValue(\"\");\n\t}\n\n\tonSearchSubmit(): void {\n\t\tthis.inputBox.addToHistory();\n\t}\n\n\tshowNextTerm() {\n\t\tthis.inputBox.showNextValue();\n\t}\n\n\tshowPreviousTerm() {\n\t\tthis.inputBox.showPreviousValue();\n\t}\n\n\tprivate render(options: IOptions): void {\n\t\tthis.domNode = document.createElement(\"div\");\n\t\tthis.domNode.classList.add(\"monaco-findInput\");\n\n\t\tthis.inputBox = new ContextScopedHistoryInputBox(\n\t\t\tthis.domNode,\n\t\t\tthis.contextViewProvider,\n\t\t\t{\n\t\t\t\tplaceholder: options.placeholder,\n\t\t\t\tshowPlaceholderOnFocus: options.showPlaceholderOnFocus,\n\t\t\t\ttooltip: options.tooltip,\n\t\t\t\tariaLabel: options.ariaLabel,\n\t\t\t\tvalidationOptions: {\n\t\t\t\t\tvalidation: undefined,\n\t\t\t\t},\n\t\t\t\thistory: options.history || [],\n\t\t\t\tshowHistoryHint: () =>\n\t\t\t\t\tshowHistoryKeybindingHint(this.keybindingService),\n\t\t\t\tinputBoxStyles: options.inputBoxStyles,\n\t\t\t},\n\t\t\tthis.contextKeyService,\n\t\t);\n\t\tthis._register(\n\t\t\tthis.inputBox.onDidChange(() => this._onSubmit.fire(true)),\n\t\t);\n\n\t\tthis.inputFocusTracker = dom.trackFocus(this.inputBox.inputElement);\n\t\tthis.onkeyup(this.inputBox.inputElement, (keyboardEvent) =>\n\t\t\tthis.onInputKeyUp(keyboardEvent),\n\t\t);\n\n\t\tconst controls = document.createElement(\"div\");\n\t\tcontrols.className = \"controls\";\n\t\tthis.renderSubcontrols(controls);\n\n\t\tthis.domNode.appendChild(controls);\n\t\tthis.setInputWidth();\n\t}\n\n\tprotected renderSubcontrols(_controlsDiv: HTMLDivElement): void {}\n\n\tprivate onInputKeyUp(keyboardEvent: IKeyboardEvent) {\n\t\tswitch (keyboardEvent.keyCode) {\n\t\t\tcase KeyCode.Enter:\n\t\t\t\tthis.onSearchSubmit();\n\t\t\t\tthis._onSubmit.fire(false);\n\t\t\t\treturn;\n\t\t\tcase KeyCode.Escape:\n\t\t\t\tthis._onCancel.fire();\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nexport class IncludePatternInputWidget extends PatternInputWidget {\n\tprivate _onChangeSearchInEditorsBoxEmitter = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\tonChangeSearchInEditorsBox = this._onChangeSearchInEditorsBoxEmitter.event;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tcontextViewProvider: IContextViewProvider,\n\t\toptions: IOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(\n\t\t\tparent,\n\t\t\tcontextViewProvider,\n\t\t\toptions,\n\t\t\tcontextKeyService,\n\t\t\tconfigurationService,\n\t\t\tkeybindingService,\n\t\t);\n\t}\n\n\tprivate useSearchInEditorsBox!: Toggle;\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.useSearchInEditorsBox.dispose();\n\t}\n\n\tonlySearchInOpenEditors(): boolean {\n\t\treturn this.useSearchInEditorsBox.checked;\n\t}\n\n\tsetOnlySearchInOpenEditors(value: boolean) {\n\t\tthis.useSearchInEditorsBox.checked = value;\n\t\tthis._onChangeSearchInEditorsBoxEmitter.fire();\n\t}\n\n\tprotected override getSubcontrolsWidth(): number {\n\t\treturn super.getSubcontrolsWidth() + this.useSearchInEditorsBox.width();\n\t}\n\n\tprotected override renderSubcontrols(controlsDiv: HTMLDivElement): void {\n\t\tthis.useSearchInEditorsBox = this._register(\n\t\t\tnew Toggle({\n\t\t\t\ticon: Codicon.book,\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\"onlySearchInOpenEditors\",\n\t\t\t\t\t\"Search only in Open Editors\",\n\t\t\t\t),\n\t\t\t\tisChecked: false,\n\t\t\t\thoverDelegate: getDefaultHoverDelegate(\"element\"),\n\t\t\t\t...defaultToggleStyles,\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.useSearchInEditorsBox.onChange((viaKeyboard) => {\n\t\t\t\tthis._onChangeSearchInEditorsBoxEmitter.fire();\n\t\t\t\tif (!viaKeyboard) {\n\t\t\t\t\tthis.inputBox.focus();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tcontrolsDiv.appendChild(this.useSearchInEditorsBox.domNode);\n\t\tsuper.renderSubcontrols(controlsDiv);\n\t}\n}\n\nexport class ExcludePatternInputWidget extends PatternInputWidget {\n\tprivate _onChangeIgnoreBoxEmitter = this._register(new Emitter<void>());\n\tonChangeIgnoreBox = this._onChangeIgnoreBoxEmitter.event;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tcontextViewProvider: IContextViewProvider,\n\t\toptions: IOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(\n\t\t\tparent,\n\t\t\tcontextViewProvider,\n\t\t\toptions,\n\t\t\tcontextKeyService,\n\t\t\tconfigurationService,\n\t\t\tkeybindingService,\n\t\t);\n\t}\n\n\tprivate useExcludesAndIgnoreFilesBox!: Toggle;\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.useExcludesAndIgnoreFilesBox.dispose();\n\t}\n\n\tuseExcludesAndIgnoreFiles(): boolean {\n\t\treturn this.useExcludesAndIgnoreFilesBox.checked;\n\t}\n\n\tsetUseExcludesAndIgnoreFiles(value: boolean) {\n\t\tthis.useExcludesAndIgnoreFilesBox.checked = value;\n\t\tthis._onChangeIgnoreBoxEmitter.fire();\n\t}\n\n\tprotected override getSubcontrolsWidth(): number {\n\t\treturn (\n\t\t\tsuper.getSubcontrolsWidth() +\n\t\t\tthis.useExcludesAndIgnoreFilesBox.width()\n\t\t);\n\t}\n\n\tprotected override renderSubcontrols(controlsDiv: HTMLDivElement): void {\n\t\tthis.useExcludesAndIgnoreFilesBox = this._register(\n\t\t\tnew Toggle({\n\t\t\t\ticon: Codicon.exclude,\n\t\t\t\tactionClassName: \"useExcludesAndIgnoreFiles\",\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\"useExcludesAndIgnoreFilesDescription\",\n\t\t\t\t\t\"Use Exclude Settings and Ignore Files\",\n\t\t\t\t),\n\t\t\t\tisChecked: true,\n\t\t\t\thoverDelegate: getDefaultHoverDelegate(\"element\"),\n\t\t\t\t...defaultToggleStyles,\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.useExcludesAndIgnoreFilesBox.onChange((viaKeyboard) => {\n\t\t\t\tthis._onChangeIgnoreBoxEmitter.fire();\n\t\t\t\tif (!viaKeyboard) {\n\t\t\t\t\tthis.inputBox.focus();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tcontrolsDiv.appendChild(this.useExcludesAndIgnoreFilesBox.domNode);\n\t\tsuper.renderSubcontrols(controlsDiv);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
