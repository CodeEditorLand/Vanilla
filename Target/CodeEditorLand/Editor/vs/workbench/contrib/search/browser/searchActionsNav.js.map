{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsNav.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport * as nls from '../../../../nls.js';\nimport { ICommandHandler } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { WorkbenchCompressibleObjectTree } from '../../../../platform/list/browser/listService.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport * as Constants from '../common/constants.js';\nimport * as SearchEditorConstants from '../../searchEditor/browser/constants.js';\nimport { FileMatchOrMatch, FolderMatch, RenderableMatch } from './searchModel.js';\nimport { SearchEditor } from '../../searchEditor/browser/searchEditor.js';\nimport { SearchEditorInput } from '../../searchEditor/browser/searchEditorInput.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleWholeWordKeybinding } from '../../../../editor/contrib/find/browser/findModel.js';\nimport { category, getSearchView, openSearchView } from './searchActionsBase.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../../platform/accessibility/common/accessibility.js';\nimport { getActiveElement } from '../../../../base/browser/dom.js';\n\n//#region Actions: Changing Search Input Options\nregisterAction2(class ToggleQueryDetailsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ToggleQueryDetailsActionId,\n\t\t\ttitle: nls.localize2('ToggleQueryDetailsAction.label', \"Toggle Query Details\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.or(Constants.SearchContext.SearchViewFocusedKey, SearchEditorConstants.InSearchEditor),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyJ,\n\t\t\t},\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst contextService = accessor.get(IContextKeyService).getContext(getActiveElement());\n\t\tif (contextService.getValue(SearchEditorConstants.InSearchEditor.serialize())) {\n\t\t\t(accessor.get(IEditorService).activeEditorPane as SearchEditor).toggleQueryDetails(args[0]?.show);\n\t\t} else if (contextService.getValue(Constants.SearchContext.SearchViewFocusedKey.serialize())) {\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tassertIsDefined(searchView).toggleQueryDetails(undefined, args[0]?.show);\n\t\t}\n\t}\n});\n\nregisterAction2(class CloseReplaceAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.CloseReplaceWidgetActionId,\n\t\t\ttitle: nls.localize2('CloseReplaceWidget.label', \"Close Replace Widget\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.ReplaceInputBoxFocusedKey),\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t},\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tsearchView.searchAndReplaceWidget.toggleReplace(false);\n\t\t\tsearchView.searchAndReplaceWidget.focus();\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n});\n\nregisterAction2(class ToggleCaseSensitiveCommandAction extends Action2 {\n\n\tconstructor(\n\t) {\n\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ToggleCaseSensitiveCommandId,\n\t\t\ttitle: nls.localize2('ToggleCaseSensitiveCommandId.label', \"Toggle Case Sensitive\"),\n\t\t\tcategory,\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: isMacintosh ? ContextKeyExpr.and(Constants.SearchContext.SearchViewFocusedKey, Constants.SearchContext.FileMatchOrFolderMatchFocusKey.toNegated()) : Constants.SearchContext.SearchViewFocusedKey,\n\t\t\t}, ToggleCaseSensitiveKeybinding)\n\n\t\t});\n\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\ttoggleCaseSensitiveCommand(accessor);\n\t}\n});\n\nregisterAction2(class ToggleWholeWordCommandAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ToggleWholeWordCommandId,\n\t\t\ttitle: nls.localize2('ToggleWholeWordCommandId.label', \"Toggle Whole Word\"),\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: Constants.SearchContext.SearchViewFocusedKey,\n\t\t\t}, ToggleWholeWordKeybinding),\n\t\t\tcategory,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\treturn toggleWholeWordCommand(accessor);\n\t}\n});\n\nregisterAction2(class ToggleRegexCommandAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ToggleRegexCommandId,\n\t\t\ttitle: nls.localize2('ToggleRegexCommandId.label', \"Toggle Regex\"),\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: Constants.SearchContext.SearchViewFocusedKey,\n\t\t\t}, ToggleRegexKeybinding),\n\t\t\tcategory,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\treturn toggleRegexCommand(accessor);\n\t}\n});\n\nregisterAction2(class TogglePreserveCaseAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.TogglePreserveCaseId,\n\t\t\ttitle: nls.localize2('TogglePreserveCaseId.label', \"Toggle Preserve Case\"),\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: Constants.SearchContext.SearchViewFocusedKey,\n\t\t\t}, TogglePreserveCaseKeybinding),\n\t\t\tcategory,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\treturn togglePreserveCaseCommand(accessor);\n\t}\n});\n\n//#endregion\n//#region Actions: Opening Matches\nregisterAction2(class OpenMatchAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.OpenMatch,\n\t\t\ttitle: nls.localize2('OpenMatch.label', \"Open Match\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.FileMatchOrMatchFocusKey),\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow]\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchCompressibleObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\tconst viewer = searchView.getControl();\n\t\t\tconst focus = tree.getFocus()[0];\n\n\t\t\tif (focus instanceof FolderMatch) {\n\t\t\t\tviewer.toggleCollapsed(focus);\n\t\t\t} else {\n\t\t\t\tsearchView.open(<FileMatchOrMatch>tree.getFocus()[0], false, false, true);\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class OpenMatchToSideAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.OpenMatchToSide,\n\t\t\ttitle: nls.localize2('OpenMatchToSide.label', \"Open Match To Side\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.FileMatchOrMatchFocusKey),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchCompressibleObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\tsearchView.open(<FileMatchOrMatch>tree.getFocus()[0], false, true, true);\n\t\t}\n\t}\n});\n\nregisterAction2(class AddCursorsAtSearchResultsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.AddCursorsAtSearchResults,\n\t\t\ttitle: nls.localize2('AddCursorsAtSearchResults.label', \"Add Cursors at Search Results\"),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.FileMatchOrMatchFocusKey),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyL,\n\t\t\t},\n\t\t\tcategory,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchCompressibleObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\tsearchView.openEditorWithMultiCursor(<FileMatchOrMatch>tree.getFocus()[0]);\n\t\t}\n\t}\n});\n\n//#endregion\n//#region Actions: Toggling Focus\nregisterAction2(class FocusNextInputAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.FocusNextInputActionId,\n\t\t\ttitle: nls.localize2('FocusNextInputAction.label', \"Focus Next Input\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\tContextKeyExpr.and(SearchEditorConstants.InSearchEditor, Constants.SearchContext.InputBoxFocusedKey),\n\t\t\t\t\tContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.InputBoxFocusedKey)),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst input = editorService.activeEditor;\n\t\tif (input instanceof SearchEditorInput) {\n\t\t\t// cast as we cannot import SearchEditor as a value b/c cyclic dependency.\n\t\t\t(editorService.activeEditorPane as SearchEditor).focusNextInput();\n\t\t}\n\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tsearchView?.focusNextInputBox();\n\t}\n});\n\nregisterAction2(class FocusPreviousInputAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.FocusPreviousInputActionId,\n\t\t\ttitle: nls.localize2('FocusPreviousInputAction.label', \"Focus Previous Input\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\tContextKeyExpr.and(SearchEditorConstants.InSearchEditor, Constants.SearchContext.InputBoxFocusedKey),\n\t\t\t\t\tContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.InputBoxFocusedKey, Constants.SearchContext.SearchInputBoxFocusedKey.toNegated())),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst input = editorService.activeEditor;\n\t\tif (input instanceof SearchEditorInput) {\n\t\t\t// cast as we cannot import SearchEditor as a value b/c cyclic dependency.\n\t\t\t(editorService.activeEditorPane as SearchEditor).focusPrevInput();\n\t\t}\n\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tsearchView?.focusPreviousInputBox();\n\t}\n});\n\nregisterAction2(class FocusSearchFromResultsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.FocusSearchFromResults,\n\t\t\ttitle: nls.localize2('FocusSearchFromResults.label', \"Focus Search From Results\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, ContextKeyExpr.or(Constants.SearchContext.FirstMatchFocusKey, CONTEXT_ACCESSIBILITY_MODE_ENABLED)),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t},\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tsearchView?.focusPreviousInputBox();\n\t}\n});\n\nregisterAction2(class ToggleSearchOnTypeAction extends Action2 {\n\tprivate static readonly searchOnTypeKey = 'search.searchOnType';\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ToggleSearchOnTypeActionId,\n\t\t\ttitle: nls.localize2('toggleTabs', \"Toggle Search on Type\"),\n\t\t\tcategory,\n\t\t});\n\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst searchOnType = configurationService.getValue<boolean>(ToggleSearchOnTypeAction.searchOnTypeKey);\n\t\treturn configurationService.updateValue(ToggleSearchOnTypeAction.searchOnTypeKey, !searchOnType);\n\t}\n});\n\nregisterAction2(class FocusSearchListCommandAction extends Action2 {\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.FocusSearchListCommandID,\n\t\t\ttitle: nls.localize2('focusSearchListCommandLabel', \"Focus List\"),\n\t\t\tcategory,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\tfocusSearchListCommand(accessor);\n\t}\n});\n\nregisterAction2(class FocusNextSearchResultAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.FocusNextSearchResultActionId,\n\t\t\ttitle: nls.localize2('FocusNextSearchResult.label', \"Focus Next Search Result\"),\n\t\t\tkeybinding: [{\n\t\t\t\tprimary: KeyCode.F4,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t}],\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.or(Constants.SearchContext.HasSearchResults, SearchEditorConstants.InSearchEditor),\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\treturn await focusNextSearchResult(accessor);\n\t}\n});\n\nregisterAction2(class FocusPreviousSearchResultAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.FocusPreviousSearchResultActionId,\n\t\t\ttitle: nls.localize2('FocusPreviousSearchResult.label', \"Focus Previous Search Result\"),\n\t\t\tkeybinding: [{\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F4,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t}],\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.or(Constants.SearchContext.HasSearchResults, SearchEditorConstants.InSearchEditor),\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\treturn await focusPreviousSearchResult(accessor);\n\t}\n});\n\nregisterAction2(class ReplaceInFilesAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ReplaceInFilesActionId,\n\t\t\ttitle: nls.localize2('replaceInFiles', \"Replace in Files\"),\n\t\t\tkeybinding: [{\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyH,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t}],\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.MenubarEditMenu,\n\t\t\t\tgroup: '4_find_global',\n\t\t\t\torder: 2\n\t\t\t}],\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\treturn await findOrReplaceInFiles(accessor, true);\n\t}\n});\n\n//#endregion\n\n//#region Helpers\nfunction toggleCaseSensitiveCommand(accessor: ServicesAccessor) {\n\tconst searchView = getSearchView(accessor.get(IViewsService));\n\tsearchView?.toggleCaseSensitive();\n}\n\nfunction toggleWholeWordCommand(accessor: ServicesAccessor) {\n\tconst searchView = getSearchView(accessor.get(IViewsService));\n\tsearchView?.toggleWholeWords();\n}\n\nfunction toggleRegexCommand(accessor: ServicesAccessor) {\n\tconst searchView = getSearchView(accessor.get(IViewsService));\n\tsearchView?.toggleRegex();\n}\n\nfunction togglePreserveCaseCommand(accessor: ServicesAccessor) {\n\tconst searchView = getSearchView(accessor.get(IViewsService));\n\tsearchView?.togglePreserveCase();\n}\n\nconst focusSearchListCommand: ICommandHandler = accessor => {\n\tconst viewsService = accessor.get(IViewsService);\n\topenSearchView(viewsService).then(searchView => {\n\t\tsearchView?.moveFocusToResults();\n\t});\n};\n\nasync function focusNextSearchResult(accessor: ServicesAccessor): Promise<any> {\n\tconst editorService = accessor.get(IEditorService);\n\tconst input = editorService.activeEditor;\n\tif (input instanceof SearchEditorInput) {\n\t\t// cast as we cannot import SearchEditor as a value b/c cyclic dependency.\n\t\treturn (editorService.activeEditorPane as SearchEditor).focusNextResult();\n\t}\n\n\treturn openSearchView(accessor.get(IViewsService)).then(searchView => {\n\t\tsearchView?.selectNextMatch();\n\t});\n}\n\nasync function focusPreviousSearchResult(accessor: ServicesAccessor): Promise<any> {\n\tconst editorService = accessor.get(IEditorService);\n\tconst input = editorService.activeEditor;\n\tif (input instanceof SearchEditorInput) {\n\t\t// cast as we cannot import SearchEditor as a value b/c cyclic dependency.\n\t\treturn (editorService.activeEditorPane as SearchEditor).focusPreviousResult();\n\t}\n\n\treturn openSearchView(accessor.get(IViewsService)).then(searchView => {\n\t\tsearchView?.selectPreviousMatch();\n\t});\n}\n\nasync function findOrReplaceInFiles(accessor: ServicesAccessor, expandSearchReplaceWidget: boolean): Promise<any> {\n\treturn openSearchView(accessor.get(IViewsService), false).then(openedView => {\n\t\tif (openedView) {\n\t\t\tconst searchAndReplaceWidget = openedView.searchAndReplaceWidget;\n\t\t\tsearchAndReplaceWidget.toggleReplace(expandSearchReplaceWidget);\n\n\t\t\tconst updatedText = openedView.updateTextFromFindWidgetOrSelection({ allowUnselectedWord: !expandSearchReplaceWidget });\n\t\t\topenedView.searchAndReplaceWidget.focus(undefined, updatedText, updatedText);\n\t\t}\n\t});\n}\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
