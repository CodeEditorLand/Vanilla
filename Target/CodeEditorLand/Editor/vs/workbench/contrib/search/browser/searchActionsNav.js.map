{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsNav.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveElement } from \"../../../../base/browser/dom.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { isMacintosh } from \"../../../../base/common/platform.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport {\n\tToggleCaseSensitiveKeybinding,\n\tTogglePreserveCaseKeybinding,\n\tToggleRegexKeybinding,\n\tToggleWholeWordKeybinding,\n} from \"../../../../editor/contrib/find/browser/findModel.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport type { ICommandHandler } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { WorkbenchCompressibleObjectTree } from \"../../../../platform/list/browser/listService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport * as SearchEditorConstants from \"../../searchEditor/browser/constants.js\";\nimport type { SearchEditor } from \"../../searchEditor/browser/searchEditor.js\";\nimport { SearchEditorInput } from \"../../searchEditor/browser/searchEditorInput.js\";\nimport * as Constants from \"../common/constants.js\";\nimport {\n\tcategory,\n\tgetSearchView,\n\topenSearchView,\n} from \"./searchActionsBase.js\";\nimport {\n\ttype FileMatchOrMatch,\n\tFolderMatch,\n\ttype RenderableMatch,\n} from \"./searchModel.js\";\n\n//#region Actions: Changing Search Input Options\nregisterAction2(\n\tclass ToggleQueryDetailsAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.ToggleQueryDetailsActionId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"ToggleQueryDetailsAction.label\",\n\t\t\t\t\t\"Toggle Query Details\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\tConstants.SearchContext.SearchViewFocusedKey,\n\t\t\t\t\t\tSearchEditorConstants.InSearchEditor,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyJ,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tconst contextService = accessor\n\t\t\t\t.get(IContextKeyService)\n\t\t\t\t.getContext(getActiveElement());\n\t\t\tif (\n\t\t\t\tcontextService.getValue(\n\t\t\t\t\tSearchEditorConstants.InSearchEditor.serialize(),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t(\n\t\t\t\t\taccessor.get(IEditorService)\n\t\t\t\t\t\t.activeEditorPane as SearchEditor\n\t\t\t\t).toggleQueryDetails(args[0]?.show);\n\t\t\t} else if (\n\t\t\t\tcontextService.getValue(\n\t\t\t\t\tConstants.SearchContext.SearchViewFocusedKey.serialize(),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\t\tassertIsDefined(searchView).toggleQueryDetails(\n\t\t\t\t\tundefined,\n\t\t\t\t\targs[0]?.show,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass CloseReplaceAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.CloseReplaceWidgetActionId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"CloseReplaceWidget.label\",\n\t\t\t\t\t\"Close Replace Widget\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tConstants.SearchContext.SearchViewVisibleKey,\n\t\t\t\t\t\tConstants.SearchContext.ReplaceInputBoxFocusedKey,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tif (searchView) {\n\t\t\t\tsearchView.searchAndReplaceWidget.toggleReplace(false);\n\t\t\t\tsearchView.searchAndReplaceWidget.focus();\n\t\t\t}\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleCaseSensitiveCommandAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.ToggleCaseSensitiveCommandId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"ToggleCaseSensitiveCommandId.label\",\n\t\t\t\t\t\"Toggle Case Sensitive\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: isMacintosh\n\t\t\t\t\t\t\t? ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tConstants.SearchContext\n\t\t\t\t\t\t\t\t\t\t.SearchViewFocusedKey,\n\t\t\t\t\t\t\t\t\tConstants.SearchContext.FileMatchOrFolderMatchFocusKey.toNegated(),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: Constants.SearchContext.SearchViewFocusedKey,\n\t\t\t\t\t},\n\t\t\t\t\tToggleCaseSensitiveKeybinding,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\ttoggleCaseSensitiveCommand(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleWholeWordCommandAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.ToggleWholeWordCommandId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"ToggleWholeWordCommandId.label\",\n\t\t\t\t\t\"Toggle Whole Word\",\n\t\t\t\t),\n\t\t\t\tkeybinding: Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: Constants.SearchContext.SearchViewFocusedKey,\n\t\t\t\t\t},\n\t\t\t\t\tToggleWholeWordKeybinding,\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\treturn toggleWholeWordCommand(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleRegexCommandAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.ToggleRegexCommandId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"ToggleRegexCommandId.label\",\n\t\t\t\t\t\"Toggle Regex\",\n\t\t\t\t),\n\t\t\t\tkeybinding: Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: Constants.SearchContext.SearchViewFocusedKey,\n\t\t\t\t\t},\n\t\t\t\t\tToggleRegexKeybinding,\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\treturn toggleRegexCommand(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass TogglePreserveCaseAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.TogglePreserveCaseId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"TogglePreserveCaseId.label\",\n\t\t\t\t\t\"Toggle Preserve Case\",\n\t\t\t\t),\n\t\t\t\tkeybinding: Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: Constants.SearchContext.SearchViewFocusedKey,\n\t\t\t\t\t},\n\t\t\t\t\tTogglePreserveCaseKeybinding,\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\treturn togglePreserveCaseCommand(accessor);\n\t\t}\n\t},\n);\n\n//#endregion\n//#region Actions: Opening Matches\nregisterAction2(\n\tclass OpenMatchAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.OpenMatch,\n\t\t\t\ttitle: nls.localize2(\"OpenMatch.label\", \"Open Match\"),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tConstants.SearchContext.SearchViewVisibleKey,\n\t\t\t\t\t\tConstants.SearchContext.FileMatchOrMatchFocusKey,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tif (searchView) {\n\t\t\t\tconst tree: WorkbenchCompressibleObjectTree<RenderableMatch> =\n\t\t\t\t\tsearchView.getControl();\n\t\t\t\tconst viewer = searchView.getControl();\n\t\t\t\tconst focus = tree.getFocus()[0];\n\n\t\t\t\tif (focus instanceof FolderMatch) {\n\t\t\t\t\tviewer.toggleCollapsed(focus);\n\t\t\t\t} else {\n\t\t\t\t\tsearchView.open(\n\t\t\t\t\t\t<FileMatchOrMatch>tree.getFocus()[0],\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass OpenMatchToSideAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.OpenMatchToSide,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"OpenMatchToSide.label\",\n\t\t\t\t\t\"Open Match To Side\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tConstants.SearchContext.SearchViewVisibleKey,\n\t\t\t\t\t\tConstants.SearchContext.FileMatchOrMatchFocusKey,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tif (searchView) {\n\t\t\t\tconst tree: WorkbenchCompressibleObjectTree<RenderableMatch> =\n\t\t\t\t\tsearchView.getControl();\n\t\t\t\tsearchView.open(\n\t\t\t\t\t<FileMatchOrMatch>tree.getFocus()[0],\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass AddCursorsAtSearchResultsAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.AddCursorsAtSearchResults,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"AddCursorsAtSearchResults.label\",\n\t\t\t\t\t\"Add Cursors at Search Results\",\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tConstants.SearchContext.SearchViewVisibleKey,\n\t\t\t\t\t\tConstants.SearchContext.FileMatchOrMatchFocusKey,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyL,\n\t\t\t\t},\n\t\t\t\tcategory,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tif (searchView) {\n\t\t\t\tconst tree: WorkbenchCompressibleObjectTree<RenderableMatch> =\n\t\t\t\t\tsearchView.getControl();\n\t\t\t\tsearchView.openEditorWithMultiCursor(\n\t\t\t\t\t<FileMatchOrMatch>tree.getFocus()[0],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\n//#endregion\n//#region Actions: Toggling Focus\nregisterAction2(\n\tclass FocusNextInputAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.FocusNextInputActionId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"FocusNextInputAction.label\",\n\t\t\t\t\t\"Focus Next Input\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\tSearchEditorConstants.InSearchEditor,\n\t\t\t\t\t\t\tConstants.SearchContext.InputBoxFocusedKey,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\tConstants.SearchContext.SearchViewVisibleKey,\n\t\t\t\t\t\t\tConstants.SearchContext.InputBoxFocusedKey,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst input = editorService.activeEditor;\n\t\t\tif (input instanceof SearchEditorInput) {\n\t\t\t\t// cast as we cannot import SearchEditor as a value b/c cyclic dependency.\n\t\t\t\t(\n\t\t\t\t\teditorService.activeEditorPane as SearchEditor\n\t\t\t\t).focusNextInput();\n\t\t\t}\n\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tsearchView?.focusNextInputBox();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass FocusPreviousInputAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.FocusPreviousInputActionId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"FocusPreviousInputAction.label\",\n\t\t\t\t\t\"Focus Previous Input\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\tSearchEditorConstants.InSearchEditor,\n\t\t\t\t\t\t\tConstants.SearchContext.InputBoxFocusedKey,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\tConstants.SearchContext.SearchViewVisibleKey,\n\t\t\t\t\t\t\tConstants.SearchContext.InputBoxFocusedKey,\n\t\t\t\t\t\t\tConstants.SearchContext.SearchInputBoxFocusedKey.toNegated(),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst input = editorService.activeEditor;\n\t\t\tif (input instanceof SearchEditorInput) {\n\t\t\t\t// cast as we cannot import SearchEditor as a value b/c cyclic dependency.\n\t\t\t\t(\n\t\t\t\t\teditorService.activeEditorPane as SearchEditor\n\t\t\t\t).focusPrevInput();\n\t\t\t}\n\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tsearchView?.focusPreviousInputBox();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass FocusSearchFromResultsAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.FocusSearchFromResults,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"FocusSearchFromResults.label\",\n\t\t\t\t\t\"Focus Search From Results\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tConstants.SearchContext.SearchViewVisibleKey,\n\t\t\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\t\t\tConstants.SearchContext.FirstMatchFocusKey,\n\t\t\t\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tsearchView?.focusPreviousInputBox();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleSearchOnTypeAction extends Action2 {\n\t\tprivate static readonly searchOnTypeKey = \"search.searchOnType\";\n\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.ToggleSearchOnTypeActionId,\n\t\t\t\ttitle: nls.localize2(\"toggleTabs\", \"Toggle Search on Type\"),\n\t\t\t\tcategory,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst searchOnType = configurationService.getValue<boolean>(\n\t\t\t\tToggleSearchOnTypeAction.searchOnTypeKey,\n\t\t\t);\n\t\t\treturn configurationService.updateValue(\n\t\t\t\tToggleSearchOnTypeAction.searchOnTypeKey,\n\t\t\t\t!searchOnType,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass FocusSearchListCommandAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.FocusSearchListCommandID,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"focusSearchListCommandLabel\",\n\t\t\t\t\t\"Focus List\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\tfocusSearchListCommand(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass FocusNextSearchResultAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.FocusNextSearchResultActionId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"FocusNextSearchResult.label\",\n\t\t\t\t\t\"Focus Next Search Result\",\n\t\t\t\t),\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\tprimary: KeyCode.F4,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\t\tConstants.SearchContext.HasSearchResults,\n\t\t\t\t\tSearchEditorConstants.InSearchEditor,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\treturn await focusNextSearchResult(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass FocusPreviousSearchResultAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds\n\t\t\t\t\t.FocusPreviousSearchResultActionId,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"FocusPreviousSearchResult.label\",\n\t\t\t\t\t\"Focus Previous Search Result\",\n\t\t\t\t),\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\tprimary: KeyMod.Shift | KeyCode.F4,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\t\tConstants.SearchContext.HasSearchResults,\n\t\t\t\t\tSearchEditorConstants.InSearchEditor,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\treturn await focusPreviousSearchResult(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ReplaceInFilesAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Constants.SearchCommandIds.ReplaceInFilesActionId,\n\t\t\t\ttitle: nls.localize2(\"replaceInFiles\", \"Replace in Files\"),\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyH,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarEditMenu,\n\t\t\t\t\t\tgroup: \"4_find_global\",\n\t\t\t\t\t\torder: 2,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\t\treturn await findOrReplaceInFiles(accessor, true);\n\t\t}\n\t},\n);\n\n//#endregion\n\n//#region Helpers\nfunction toggleCaseSensitiveCommand(accessor: ServicesAccessor) {\n\tconst searchView = getSearchView(accessor.get(IViewsService));\n\tsearchView?.toggleCaseSensitive();\n}\n\nfunction toggleWholeWordCommand(accessor: ServicesAccessor) {\n\tconst searchView = getSearchView(accessor.get(IViewsService));\n\tsearchView?.toggleWholeWords();\n}\n\nfunction toggleRegexCommand(accessor: ServicesAccessor) {\n\tconst searchView = getSearchView(accessor.get(IViewsService));\n\tsearchView?.toggleRegex();\n}\n\nfunction togglePreserveCaseCommand(accessor: ServicesAccessor) {\n\tconst searchView = getSearchView(accessor.get(IViewsService));\n\tsearchView?.togglePreserveCase();\n}\n\nconst focusSearchListCommand: ICommandHandler = (accessor) => {\n\tconst viewsService = accessor.get(IViewsService);\n\topenSearchView(viewsService).then((searchView) => {\n\t\tsearchView?.moveFocusToResults();\n\t});\n};\n\nasync function focusNextSearchResult(accessor: ServicesAccessor): Promise<any> {\n\tconst editorService = accessor.get(IEditorService);\n\tconst input = editorService.activeEditor;\n\tif (input instanceof SearchEditorInput) {\n\t\t// cast as we cannot import SearchEditor as a value b/c cyclic dependency.\n\t\treturn (\n\t\t\teditorService.activeEditorPane as SearchEditor\n\t\t).focusNextResult();\n\t}\n\n\treturn openSearchView(accessor.get(IViewsService)).then((searchView) => {\n\t\tsearchView?.selectNextMatch();\n\t});\n}\n\nasync function focusPreviousSearchResult(\n\taccessor: ServicesAccessor,\n): Promise<any> {\n\tconst editorService = accessor.get(IEditorService);\n\tconst input = editorService.activeEditor;\n\tif (input instanceof SearchEditorInput) {\n\t\t// cast as we cannot import SearchEditor as a value b/c cyclic dependency.\n\t\treturn (\n\t\t\teditorService.activeEditorPane as SearchEditor\n\t\t).focusPreviousResult();\n\t}\n\n\treturn openSearchView(accessor.get(IViewsService)).then((searchView) => {\n\t\tsearchView?.selectPreviousMatch();\n\t});\n}\n\nasync function findOrReplaceInFiles(\n\taccessor: ServicesAccessor,\n\texpandSearchReplaceWidget: boolean,\n): Promise<any> {\n\treturn openSearchView(accessor.get(IViewsService), false).then(\n\t\t(openedView) => {\n\t\t\tif (openedView) {\n\t\t\t\tconst searchAndReplaceWidget =\n\t\t\t\t\topenedView.searchAndReplaceWidget;\n\t\t\t\tsearchAndReplaceWidget.toggleReplace(expandSearchReplaceWidget);\n\n\t\t\t\tconst updatedText =\n\t\t\t\t\topenedView.updateTextFromFindWidgetOrSelection({\n\t\t\t\t\t\tallowUnselectedWord: !expandSearchReplaceWidget,\n\t\t\t\t\t});\n\t\t\t\topenedView.searchAndReplaceWidget.focus(\n\t\t\t\t\tundefined,\n\t\t\t\t\tupdatedText,\n\t\t\t\t\tupdatedText,\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t);\n}\n//#endregion\n"],
  "mappings": ";;AAKA,SAAS,wBAAwB;AACjC,SAAS,SAAS,cAAc;AAChC,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,YAAY,SAAS;AACrB,SAAS,0CAA0C;AACnD;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,SAAS,wBAAwB;AAEjC,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B,YAAY,2BAA2B;AAEvC,SAAS,yBAAyB;AAClC,YAAY,eAAe;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAEC;AAAA,OAEM;AAGP;AAAA,EACC,MAAM,iCAAiC,QAAQ;AAAA,IAlDhD,OAkDgD;AAAA;AAAA;AAAA,IAC9C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB,UAAU,cAAc;AAAA,YACxB,sBAAsB;AAAA,UACvB;AAAA,UACA,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,QAClD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,IAAI,aAA+B,MAAa;AAC/C,YAAM,iBAAiB,SACrB,IAAI,kBAAkB,EACtB,WAAW,iBAAiB,CAAC;AAC/B,UACC,eAAe;AAAA,QACd,sBAAsB,eAAe,UAAU;AAAA,MAChD,GACC;AACD,QACC,SAAS,IAAI,cAAc,EACzB,iBACD,mBAAmB,KAAK,CAAC,GAAG,IAAI;AAAA,MACnC,WACC,eAAe;AAAA,QACd,UAAU,cAAc,qBAAqB,UAAU;AAAA,MACxD,GACC;AACD,cAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,wBAAgB,UAAU,EAAE;AAAA,UAC3B;AAAA,UACA,KAAK,CAAC,GAAG;AAAA,QACV;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,2BAA2B,QAAQ;AAAA,IAlG1C,OAkG0C;AAAA;AAAA;AAAA,IACxC,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB,UAAU,cAAc;AAAA,YACxB,UAAU,cAAc;AAAA,UACzB;AAAA,UACA,SAAS,QAAQ;AAAA,QAClB;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,IAAI,UAA4B;AAC/B,YAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,UAAI,YAAY;AACf,mBAAW,uBAAuB,cAAc,KAAK;AACrD,mBAAW,uBAAuB,MAAM;AAAA,MACzC;AACA,aAAO,QAAQ,QAAQ,IAAI;AAAA,IAC5B;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,yCAAyC,QAAQ;AAAA,IAjIxD,OAiIwD;AAAA;AAAA;AAAA,IACtD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,YAAY,OAAO;AAAA,UAClB;AAAA,YACC,QAAQ,iBAAiB;AAAA,YACzB,MAAM,cACH,eAAe;AAAA,cACf,UAAU,cACR;AAAA,cACF,UAAU,cAAc,+BAA+B,UAAU;AAAA,YAClE,IACC,UAAU,cAAc;AAAA,UAC5B;AAAA,UACA;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,iCAA2B,QAAQ;AAAA,IACpC;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,qCAAqC,QAAQ;AAAA,IAjKpD,OAiKoD;AAAA;AAAA;AAAA,IAClD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA,YAAY,OAAO;AAAA,UAClB;AAAA,YACC,QAAQ,iBAAiB;AAAA,YACzB,MAAM,UAAU,cAAc;AAAA,UAC/B;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,aAAO,uBAAuB,QAAQ;AAAA,IACvC;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,iCAAiC,QAAQ;AAAA,IA3LhD,OA2LgD;AAAA;AAAA;AAAA,IAC9C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA,YAAY,OAAO;AAAA,UAClB;AAAA,YACC,QAAQ,iBAAiB;AAAA,YACzB,MAAM,UAAU,cAAc;AAAA,UAC/B;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,aAAO,mBAAmB,QAAQ;AAAA,IACnC;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,iCAAiC,QAAQ;AAAA,IArNhD,OAqNgD;AAAA;AAAA;AAAA,IAC9C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA,YAAY,OAAO;AAAA,UAClB;AAAA,YACC,QAAQ,iBAAiB;AAAA,YACzB,MAAM,UAAU,cAAc;AAAA,UAC/B;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,aAAO,0BAA0B,QAAQ;AAAA,IAC1C;AAAA,EACD;AACD;AAIA;AAAA,EACC,MAAM,wBAAwB,QAAQ;AAAA,IAjPvC,OAiPuC;AAAA;AAAA;AAAA,IACrC,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI,UAAU,mBAAmB,YAAY;AAAA,QACpD;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB,UAAU,cAAc;AAAA,YACxB,UAAU,cAAc;AAAA,UACzB;AAAA,UACA,SAAS,QAAQ;AAAA,UACjB,KAAK;AAAA,YACJ,SAAS,QAAQ;AAAA,YACjB,WAAW,CAAC,OAAO,UAAU,QAAQ,SAAS;AAAA,UAC/C;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,IAAI,UAA4B;AAC/B,YAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,UAAI,YAAY;AACf,cAAM,OACL,WAAW,WAAW;AACvB,cAAM,SAAS,WAAW,WAAW;AACrC,cAAM,QAAQ,KAAK,SAAS,EAAE,CAAC;AAE/B,YAAI,iBAAiB,aAAa;AACjC,iBAAO,gBAAgB,KAAK;AAAA,QAC7B,OAAO;AACN,qBAAW;AAAA,YACQ,KAAK,SAAS,EAAE,CAAC;AAAA,YACnC;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,8BAA8B,QAAQ;AAAA,IA7R7C,OA6R6C;AAAA;AAAA;AAAA,IAC3C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB,UAAU,cAAc;AAAA,YACxB,UAAU,cAAc;AAAA,UACzB;AAAA,UACA,SAAS,OAAO,UAAU,QAAQ;AAAA,UAClC,KAAK;AAAA,YACJ,SAAS,OAAO,UAAU,QAAQ;AAAA,UACnC;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,IAAI,UAA4B;AAC/B,YAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,UAAI,YAAY;AACf,cAAM,OACL,WAAW,WAAW;AACvB,mBAAW;AAAA,UACQ,KAAK,SAAS,EAAE,CAAC;AAAA,UACnC;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,wCAAwC,QAAQ;AAAA,IApUvD,OAoUuD;AAAA;AAAA;AAAA,IACrD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB,UAAU,cAAc;AAAA,YACxB,UAAU,cAAc;AAAA,UACzB;AAAA,UACA,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,QAClD;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,YAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,UAAI,YAAY;AACf,cAAM,OACL,WAAW,WAAW;AACvB,mBAAW;AAAA,UACQ,KAAK,SAAS,EAAE,CAAC;AAAA,QACpC;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAIA;AAAA,EACC,MAAM,6BAA6B,QAAQ;AAAA,IAxW5C,OAwW4C;AAAA;AAAA;AAAA,IAC1C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB,eAAe;AAAA,cACd,sBAAsB;AAAA,cACtB,UAAU,cAAc;AAAA,YACzB;AAAA,YACA,eAAe;AAAA,cACd,UAAU,cAAc;AAAA,cACxB,UAAU,cAAc;AAAA,YACzB;AAAA,UACD;AAAA,UACA,SAAS,OAAO,UAAU,QAAQ;AAAA,QACnC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,YAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,YAAM,QAAQ,cAAc;AAC5B,UAAI,iBAAiB,mBAAmB;AAEvC,QACC,cAAc,iBACb,eAAe;AAAA,MAClB;AAEA,YAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,kBAAY,kBAAkB;AAAA,IAC/B;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,iCAAiC,QAAQ;AAAA,IAnZhD,OAmZgD;AAAA;AAAA;AAAA,IAC9C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB,eAAe;AAAA,cACd,sBAAsB;AAAA,cACtB,UAAU,cAAc;AAAA,YACzB;AAAA,YACA,eAAe;AAAA,cACd,UAAU,cAAc;AAAA,cACxB,UAAU,cAAc;AAAA,cACxB,UAAU,cAAc,yBAAyB,UAAU;AAAA,YAC5D;AAAA,UACD;AAAA,UACA,SAAS,OAAO,UAAU,QAAQ;AAAA,QACnC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,YAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,YAAM,QAAQ,cAAc;AAC5B,UAAI,iBAAiB,mBAAmB;AAEvC,QACC,cAAc,iBACb,eAAe;AAAA,MAClB;AAEA,YAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,kBAAY,sBAAsB;AAAA,IACnC;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,qCAAqC,QAAQ;AAAA,IA/bpD,OA+boD;AAAA;AAAA;AAAA,IAClD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,MAAM,eAAe;AAAA,YACpB,UAAU,cAAc;AAAA,YACxB,eAAe;AAAA,cACd,UAAU,cAAc;AAAA,cACxB;AAAA,YACD;AAAA,UACD;AAAA,UACA,SAAS,OAAO,UAAU,QAAQ;AAAA,QACnC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,IAAI,UAA4B;AAC/B,YAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,kBAAY,sBAAsB;AAAA,IACnC;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,iCAAiC,QAAQ;AAAA,IA7dhD,OA6dgD;AAAA;AAAA;AAAA,IAC9C,OAAwB,kBAAkB;AAAA,IAE1C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI,UAAU,cAAc,uBAAuB;AAAA,QAC1D;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,YAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAC/D,YAAM,eAAe,qBAAqB;AAAA,QACzC,yBAAyB;AAAA,MAC1B;AACA,aAAO,qBAAqB;AAAA,QAC3B,yBAAyB;AAAA,QACzB,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,qCAAqC,QAAQ;AAAA,IAtfpD,OAsfoD;AAAA;AAAA;AAAA,IAClD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA,IAAI;AAAA,MACL,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,6BAAuB,QAAQ;AAAA,IAChC;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,oCAAoC,QAAQ;AAAA,IA1gBnD,OA0gBmD;AAAA;AAAA;AAAA,IACjD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA,YAAY;AAAA,UACX;AAAA,YACC,SAAS,QAAQ;AAAA,YACjB,QAAQ,iBAAiB;AAAA,UAC1B;AAAA,QACD;AAAA,QACA;AAAA,QACA,IAAI;AAAA,QACJ,cAAc,eAAe;AAAA,UAC5B,UAAU,cAAc;AAAA,UACxB,sBAAsB;AAAA,QACvB;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,aAAO,MAAM,sBAAsB,QAAQ;AAAA,IAC5C;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,wCAAwC,QAAQ;AAAA,IAxiBvD,OAwiBuD;AAAA;AAAA;AAAA,IACrD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBACZ;AAAA,QACF,OAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA,YAAY;AAAA,UACX;AAAA,YACC,SAAS,OAAO,QAAQ,QAAQ;AAAA,YAChC,QAAQ,iBAAiB;AAAA,UAC1B;AAAA,QACD;AAAA,QACA;AAAA,QACA,IAAI;AAAA,QACJ,cAAc,eAAe;AAAA,UAC5B,UAAU,cAAc;AAAA,UACxB,sBAAsB;AAAA,QACvB;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,aAAO,MAAM,0BAA0B,QAAQ;AAAA,IAChD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,6BAA6B,QAAQ;AAAA,IAvkB5C,OAukB4C;AAAA;AAAA;AAAA,IAC1C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,iBAAiB;AAAA,QAC/B,OAAO,IAAI,UAAU,kBAAkB,kBAAkB;AAAA,QACzD,YAAY;AAAA,UACX;AAAA,YACC,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,YACjD,QAAQ,iBAAiB;AAAA,UAC1B;AAAA,QACD;AAAA,QACA;AAAA,QACA,IAAI;AAAA,QACJ,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IAAI,UAA0C;AAC5D,aAAO,MAAM,qBAAqB,UAAU,IAAI;AAAA,IACjD;AAAA,EACD;AACD;AAKA,SAAS,2BAA2B,UAA4B;AAC/D,QAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,cAAY,oBAAoB;AACjC;AAHS;AAKT,SAAS,uBAAuB,UAA4B;AAC3D,QAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,cAAY,iBAAiB;AAC9B;AAHS;AAKT,SAAS,mBAAmB,UAA4B;AACvD,QAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,cAAY,YAAY;AACzB;AAHS;AAKT,SAAS,0BAA0B,UAA4B;AAC9D,QAAM,aAAa,cAAc,SAAS,IAAI,aAAa,CAAC;AAC5D,cAAY,mBAAmB;AAChC;AAHS;AAKT,MAAM,yBAA0C,wBAAC,aAAa;AAC7D,QAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,iBAAe,YAAY,EAAE,KAAK,CAAC,eAAe;AACjD,gBAAY,mBAAmB;AAAA,EAChC,CAAC;AACF,GALgD;AAOhD,eAAe,sBAAsB,UAA0C;AAC9E,QAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,QAAM,QAAQ,cAAc;AAC5B,MAAI,iBAAiB,mBAAmB;AAEvC,WACC,cAAc,iBACb,gBAAgB;AAAA,EACnB;AAEA,SAAO,eAAe,SAAS,IAAI,aAAa,CAAC,EAAE,KAAK,CAAC,eAAe;AACvE,gBAAY,gBAAgB;AAAA,EAC7B,CAAC;AACF;AAbe;AAef,eAAe,0BACd,UACe;AACf,QAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,QAAM,QAAQ,cAAc;AAC5B,MAAI,iBAAiB,mBAAmB;AAEvC,WACC,cAAc,iBACb,oBAAoB;AAAA,EACvB;AAEA,SAAO,eAAe,SAAS,IAAI,aAAa,CAAC,EAAE,KAAK,CAAC,eAAe;AACvE,gBAAY,oBAAoB;AAAA,EACjC,CAAC;AACF;AAfe;AAiBf,eAAe,qBACd,UACA,2BACe;AACf,SAAO,eAAe,SAAS,IAAI,aAAa,GAAG,KAAK,EAAE;AAAA,IACzD,CAAC,eAAe;AACf,UAAI,YAAY;AACf,cAAM,yBACL,WAAW;AACZ,+BAAuB,cAAc,yBAAyB;AAE9D,cAAM,cACL,WAAW,oCAAoC;AAAA,UAC9C,qBAAqB,CAAC;AAAA,QACvB,CAAC;AACF,mBAAW,uBAAuB;AAAA,UACjC;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAvBe;",
  "names": []
}
