var x=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var P=(S,t,o,i)=>{for(var s=i>1?void 0:i?E(t,o):t,r=S.length-1,n;r>=0;r--)(n=S[r])&&(s=(i?n(t,o,s):n(s))||s);return i&&s&&x(t,o,s),s},d=(S,t)=>(o,i)=>t(o,i,S);import*as y from"../../../../../base/common/arrays.js";import{CancellationToken as w}from"../../../../../base/common/cancellation.js";import{ResourceMap as C,ResourceSet as g}from"../../../../../base/common/map.js";import{isNumber as T}from"../../../../../base/common/types.js";import{IConfigurationService as W}from"../../../../../platform/configuration/common/configuration.js";import{IInstantiationService as D}from"../../../../../platform/instantiation/common/instantiation.js";import{ILogService as U}from"../../../../../platform/log/common/log.js";import{IUriIdentityService as A}from"../../../../../platform/uriIdentity/common/uriIdentity.js";import{IEditorResolverService as H}from"../../../../services/editor/common/editorResolverService.js";import{QueryBuilder as L}from"../../../../services/search/common/queryBuilder.js";import{DEFAULT_MAX_SEARCH_RESULTS as j,ISearchService as Q,QueryType as B,pathIncludedInQuery as O}from"../../../../services/search/common/search.js";import{INotebookEditorService as K}from"../../../notebook/browser/services/notebookEditorService.js";import{INotebookService as _}from"../../../notebook/common/notebookService.js";import{contentMatchesToTextSearchMatches as z,webviewMatchesToTextSearchMatches as $}from"./searchNotebookHelpers.js";let N=class{constructor(t,o,i,s,r,n,l,u){this.uriIdentityService=t;this.notebookEditorService=o;this.logService=i;this.notebookService=s;this.configurationService=r;this.editorResolverService=n;this.searchService=l;this.queryBuilder=u.createInstance(L)}queryBuilder;notebookSearch(t,o,i,s){if(t.type!==B.Text)return{openFilesToScan:new g,completeData:Promise.resolve({messages:[],limitHit:!1,results:[]}),allScannedFiles:Promise.resolve(new g)};const r=this.getLocalNotebookWidgets(),n=r.map(a=>a.viewModel.uri),u=(()=>{const a=Date.now(),m=this.getLocalNotebookResults(t,o??w.None,r,i),f=Date.now(),h=this.configurationService.getValue("search").experimental?.closedNotebookRichContentResults??!1;let c=Promise.resolve(void 0);h&&(c=this.getClosedNotebookResults(t,new g(n,e=>this.uriIdentityService.extUri.getComparisonKey(e)),o??w.None));const k=Promise.all([m,c]);return{completeData:k.then(e=>{const p=e[0],b=e[1],I=e.filter(R=>!!R),v=[...p.results.values(),...b?.results.values()??[]],M=y.coalesce(v);return s&&M.forEach(s),this.logService.trace(`local notebook search time | ${f-a}ms`),{messages:[],limitHit:I.reduce((R,F)=>R||F.limitHit,!1),results:M}}),allScannedFiles:k.then(e=>{const p=e[0],b=e[1],I=y.coalesce([...p.results.keys(),...b?.results.keys()??[]]);return new g(I,v=>this.uriIdentityService.extUri.getComparisonKey(v))})}})();return{openFilesToScan:new g(n),completeData:u.completeData,allScannedFiles:u.allScannedFiles}}async doesFileExist(t,o,i){const s=t.map(async r=>{const n=this.queryBuilder.file(o.map(l=>l.folder),{includePattern:r.startsWith("/")?r:"**/"+r,exists:!0,onlyFileScheme:!0});return this.searchService.fileSearch(n,i).then(l=>!!l.limitHit)});return Promise.any(s)}async getClosedNotebookResults(t,o,i){const s=this.editorResolverService.getAllUserAssociations(),r=new Map,n=this.notebookService.getContributedNotebookTypes();s.forEach(e=>{if(!e.filenamePattern)return;const p={isFromSettings:!0,filenamePatterns:[e.filenamePattern]},b=r.get(e.viewType);b?r.set(e.viewType,b.concat(p)):r.set(e.viewType,[p])});const l=[];n.forEach(e=>{e.selectors.length>0&&l.push((async()=>{const p=e.selectors.map(I=>(I.include||I).toString());if(await this.doesFileExist(p,t.folderQueries,i))return await this.notebookService.canResolve(e.id)?await(await this.notebookService.withNotebookDataProvider(e.id)).serializer.searchInNotebooks(t,i,r):void 0})())});const u=Date.now(),a=y.coalesce(await Promise.all(l)),m=a.flatMap(e=>e.results);let f=a.some(e=>e.limitHit);const h=new C(e=>this.uriIdentityService.extUri.getComparisonKey(e));let c=0;for(const e of m){if(t.maxResults&&c>=t.maxResults){f=!0;break}!o.has(e.resource)&&!h.has(e.resource)&&(h.set(e.resource,e.cellResults.length>0?e:null),c++)}const k=Date.now();return this.logService.trace(`query: ${t.contentPattern.pattern}`),this.logService.trace(`closed notebook search time | ${k-u}ms`),{results:h,limitHit:f}}async getLocalNotebookResults(t,o,i,s){const r=new C(l=>this.uriIdentityService.extUri.getComparisonKey(l));let n=!1;for(const l of i){if(!l.hasModel())continue;const u=(T(t.maxResults)?t.maxResults:j)+1,a=l.viewModel.uri;if(!O(t,a.fsPath))continue;let m=await l.find(t.contentPattern.pattern,{regex:t.contentPattern.isRegExp,wholeWord:t.contentPattern.isWordMatch,caseSensitive:t.contentPattern.isCaseSensitive,includeMarkupInput:t.contentPattern.notebookInfo?.isInNotebookMarkdownInput??!0,includeMarkupPreview:t.contentPattern.notebookInfo?.isInNotebookMarkdownPreview??!0,includeCodeInput:t.contentPattern.notebookInfo?.isInNotebookCellInput??!0,includeOutput:t.contentPattern.notebookInfo?.isInNotebookCellOutput??!0},o,!1,!0,s);if(m.length){u&&m.length>=u&&(n=!0,m=m.slice(0,u-1));const f=m.map(c=>{const k=z(c.contentMatches,c.cell),e=$(c.webviewMatches);return{cell:c.cell,index:c.index,contentResults:k,webviewResults:e}}),h={resource:a,cellResults:f};r.set(a,h)}else r.set(a,null)}return{results:r,limitHit:n}}getLocalNotebookWidgets(){return this.notebookEditorService.retrieveAllExistingWidgets().map(o=>o.value).filter(o=>!!o&&o.hasModel())}};N=P([d(0,A),d(1,K),d(2,U),d(3,_),d(4,W),d(5,H),d(6,Q),d(7,D)],N);export{N as NotebookSearchService};
