{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchActionsRemoveReplace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITreeNavigator } from '../../../../base/browser/ui/tree/tree.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { getSelectionKeyboardEvent, WorkbenchCompressibleObjectTree } from '../../../../platform/list/browser/listService.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { searchRemoveIcon, searchReplaceIcon } from './searchIcons.js';\nimport { SearchView } from './searchView.js';\nimport * as Constants from '../common/constants.js';\nimport { IReplaceService } from './replace.js';\nimport { arrayContainsElementOrParent, FileMatch, FolderMatch, Match, MatchInNotebook, RenderableMatch, SearchResult } from './searchModel.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ISearchConfiguration, ISearchConfigurationProperties } from '../../../services/search/common/search.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { category, getElementsToOperateOn, getSearchView, shouldRefocus } from './searchActionsBase.js';\nimport { equals } from '../../../../base/common/arrays.js';\n\n\n//#region Interfaces\nexport interface ISearchActionContext {\n\treadonly viewer: WorkbenchCompressibleObjectTree<RenderableMatch>;\n\treadonly element: RenderableMatch;\n}\n\n\nexport interface IFindInFilesArgs {\n\tquery?: string;\n\treplace?: string;\n\tpreserveCase?: boolean;\n\ttriggerSearch?: boolean;\n\tfilesToInclude?: string;\n\tfilesToExclude?: string;\n\tisRegex?: boolean;\n\tisCaseSensitive?: boolean;\n\tmatchWholeWord?: boolean;\n\tuseExcludeSettingsAndIgnoreFiles?: boolean;\n\tonlyOpenEditors?: boolean;\n}\n\n//#endregion\n\n//#region Actions\nregisterAction2(class RemoveAction extends Action2 {\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.RemoveActionId,\n\t\t\ttitle: nls.localize2('RemoveAction.label', \"Dismiss\"),\n\t\t\tcategory,\n\t\t\ticon: searchRemoveIcon,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.FileMatchOrMatchFocusKey),\n\t\t\t\tprimary: KeyCode.Delete,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\tgroup: 'search',\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchActionMenu,\n\t\t\t\t\tgroup: 'inline',\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, context: ISearchActionContext | undefined): void {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst searchView = getSearchView(viewsService);\n\n\t\tif (!searchView) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet element = context?.element;\n\t\tlet viewer = context?.viewer;\n\t\tif (!viewer) {\n\t\t\tviewer = searchView.getControl();\n\t\t}\n\t\tif (!element) {\n\t\t\telement = viewer.getFocus()[0] ?? undefined;\n\t\t}\n\n\t\tconst elementsToRemove = getElementsToOperateOn(viewer, element, configurationService.getValue<ISearchConfigurationProperties>('search'));\n\t\tlet focusElement = viewer.getFocus()[0] ?? undefined;\n\n\t\tif (elementsToRemove.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!focusElement || (focusElement instanceof SearchResult)) {\n\t\t\tfocusElement = element;\n\t\t}\n\n\t\tlet nextFocusElement;\n\t\tconst shouldRefocusMatch = shouldRefocus(elementsToRemove, focusElement);\n\t\tif (focusElement && shouldRefocusMatch) {\n\t\t\tnextFocusElement = getElementToFocusAfterRemoved(viewer, focusElement, elementsToRemove);\n\t\t}\n\n\t\tconst searchResult = searchView.searchResult;\n\n\t\tif (searchResult) {\n\t\t\tsearchResult.batchRemove(elementsToRemove);\n\t\t}\n\n\t\tif (focusElement && shouldRefocusMatch) {\n\t\t\tif (!nextFocusElement) {\n\t\t\t\tnextFocusElement = getLastNodeFromSameType(viewer, focusElement);\n\t\t\t}\n\n\t\t\tif (nextFocusElement && !arrayContainsElementOrParent(nextFocusElement, elementsToRemove)) {\n\t\t\t\tviewer.reveal(nextFocusElement);\n\t\t\t\tviewer.setFocus([nextFocusElement], getSelectionKeyboardEvent());\n\t\t\t\tviewer.setSelection([nextFocusElement], getSelectionKeyboardEvent());\n\t\t\t}\n\t\t} else if (!equals(viewer.getFocus(), viewer.getSelection())) {\n\t\t\tviewer.setSelection(viewer.getFocus());\n\t\t}\n\n\t\tviewer.domFocus();\n\t\treturn;\n\t}\n});\n\nregisterAction2(class ReplaceAction extends Action2 {\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ReplaceActionId,\n\t\t\ttitle: nls.localize2('match.replace.label', \"Replace\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.ReplaceActiveKey, Constants.SearchContext.MatchFocusKey, Constants.SearchContext.IsEditableItemKey),\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.Digit1,\n\t\t\t},\n\t\t\ticon: searchReplaceIcon,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.ReplaceActiveKey, Constants.SearchContext.MatchFocusKey, Constants.SearchContext.IsEditableItemKey),\n\t\t\t\t\tgroup: 'search',\n\t\t\t\t\torder: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchActionMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.ReplaceActiveKey, Constants.SearchContext.MatchFocusKey, Constants.SearchContext.IsEditableItemKey),\n\t\t\t\t\tgroup: 'inline',\n\t\t\t\t\torder: 1\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, context: ISearchActionContext | undefined): Promise<any> {\n\t\treturn performReplace(accessor, context);\n\t}\n});\n\nregisterAction2(class ReplaceAllAction extends Action2 {\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ReplaceAllInFileActionId,\n\t\t\ttitle: nls.localize2('file.replaceAll.label', \"Replace All\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.ReplaceActiveKey, Constants.SearchContext.FileFocusKey, Constants.SearchContext.IsEditableItemKey),\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.Digit1,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter],\n\t\t\t},\n\t\t\ticon: searchReplaceIcon,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.ReplaceActiveKey, Constants.SearchContext.FileFocusKey, Constants.SearchContext.IsEditableItemKey),\n\t\t\t\t\tgroup: 'search',\n\t\t\t\t\torder: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchActionMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.ReplaceActiveKey, Constants.SearchContext.FileFocusKey, Constants.SearchContext.IsEditableItemKey),\n\t\t\t\t\tgroup: 'inline',\n\t\t\t\t\torder: 1\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, context: ISearchActionContext | undefined): Promise<any> {\n\t\treturn performReplace(accessor, context);\n\t}\n});\n\nregisterAction2(class ReplaceAllInFolderAction extends Action2 {\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ReplaceAllInFolderActionId,\n\t\t\ttitle: nls.localize2('file.replaceAll.label', \"Replace All\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, Constants.SearchContext.ReplaceActiveKey, Constants.SearchContext.FolderFocusKey, Constants.SearchContext.IsEditableItemKey),\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.Digit1,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter],\n\t\t\t},\n\t\t\ticon: searchReplaceIcon,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.ReplaceActiveKey, Constants.SearchContext.FolderFocusKey, Constants.SearchContext.IsEditableItemKey),\n\t\t\t\t\tgroup: 'search',\n\t\t\t\t\torder: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchActionMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.ReplaceActiveKey, Constants.SearchContext.FolderFocusKey, Constants.SearchContext.IsEditableItemKey),\n\t\t\t\t\tgroup: 'inline',\n\t\t\t\t\torder: 1\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, context: ISearchActionContext | undefined): Promise<any> {\n\t\treturn performReplace(accessor, context);\n\t}\n});\n\n//#endregion\n\n//#region Helpers\n\nfunction performReplace(accessor: ServicesAccessor,\n\tcontext: ISearchActionContext | undefined): void {\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst viewsService = accessor.get(IViewsService);\n\n\tconst viewlet: SearchView | undefined = getSearchView(viewsService);\n\tconst viewer: WorkbenchCompressibleObjectTree<RenderableMatch> | undefined = context?.viewer ?? viewlet?.getControl();\n\n\tif (!viewer) {\n\t\treturn;\n\t}\n\tconst element: RenderableMatch | null = context?.element ?? viewer.getFocus()[0];\n\n\t// since multiple elements can be selected, we need to check the type of the FolderMatch/FileMatch/Match before we perform the replace.\n\tconst elementsToReplace = getElementsToOperateOn(viewer, element ?? undefined, configurationService.getValue<ISearchConfigurationProperties>('search'));\n\tlet focusElement = viewer.getFocus()[0];\n\n\tif (!focusElement || (focusElement && !arrayContainsElementOrParent(focusElement, elementsToReplace)) || (focusElement instanceof SearchResult)) {\n\t\tfocusElement = element;\n\t}\n\n\tif (elementsToReplace.length === 0) {\n\t\treturn;\n\t}\n\tlet nextFocusElement;\n\tif (focusElement) {\n\t\tnextFocusElement = getElementToFocusAfterRemoved(viewer, focusElement, elementsToReplace);\n\t}\n\n\tconst searchResult = viewlet?.searchResult;\n\n\tif (searchResult) {\n\t\tsearchResult.batchReplace(elementsToReplace);\n\t}\n\n\tif (focusElement) {\n\t\tif (!nextFocusElement) {\n\t\t\tnextFocusElement = getLastNodeFromSameType(viewer, focusElement);\n\t\t}\n\n\t\tif (nextFocusElement) {\n\t\t\tviewer.reveal(nextFocusElement);\n\t\t\tviewer.setFocus([nextFocusElement], getSelectionKeyboardEvent());\n\t\t\tviewer.setSelection([nextFocusElement], getSelectionKeyboardEvent());\n\n\t\t\tif (nextFocusElement instanceof Match) {\n\t\t\t\tconst useReplacePreview = configurationService.getValue<ISearchConfiguration>().search.useReplacePreview;\n\t\t\t\tif (!useReplacePreview || hasToOpenFile(accessor, nextFocusElement) || nextFocusElement instanceof MatchInNotebook) {\n\t\t\t\t\tviewlet?.open(nextFocusElement, true);\n\t\t\t\t} else {\n\t\t\t\t\taccessor.get(IReplaceService).openReplacePreview(nextFocusElement, true);\n\t\t\t\t}\n\t\t\t} else if (nextFocusElement instanceof FileMatch) {\n\t\t\t\tviewlet?.open(nextFocusElement, true);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tviewer.domFocus();\n}\n\nfunction hasToOpenFile(accessor: ServicesAccessor, currBottomElem: RenderableMatch): boolean {\n\tif (!(currBottomElem instanceof Match)) {\n\t\treturn false;\n\t}\n\tconst activeEditor = accessor.get(IEditorService).activeEditor;\n\tconst file = activeEditor?.resource;\n\tif (file) {\n\t\treturn accessor.get(IUriIdentityService).extUri.isEqual(file, currBottomElem.parent().resource);\n\t}\n\treturn false;\n}\n\nfunction compareLevels(elem1: RenderableMatch, elem2: RenderableMatch) {\n\tif (elem1 instanceof Match) {\n\t\tif (elem2 instanceof Match) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\n\t} else if (elem1 instanceof FileMatch) {\n\t\tif (elem2 instanceof Match) {\n\t\t\treturn 1;\n\t\t} else if (elem2 instanceof FileMatch) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\n\t} else {\n\t\t// FolderMatch\n\t\tif (elem2 instanceof FolderMatch) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n}\n\n/**\n * Returns element to focus after removing the given element\n */\nexport function getElementToFocusAfterRemoved(viewer: WorkbenchCompressibleObjectTree<RenderableMatch>, element: RenderableMatch, elementsToRemove: RenderableMatch[]): RenderableMatch | undefined {\n\tconst navigator: ITreeNavigator<any> = viewer.navigate(element);\n\tif (element instanceof FolderMatch) {\n\t\twhile (!!navigator.next() && (!(navigator.current() instanceof FolderMatch) || arrayContainsElementOrParent(navigator.current(), elementsToRemove))) { }\n\t} else if (element instanceof FileMatch) {\n\t\twhile (!!navigator.next() && (!(navigator.current() instanceof FileMatch) || arrayContainsElementOrParent(navigator.current(), elementsToRemove))) {\n\t\t\tviewer.expand(navigator.current());\n\t\t}\n\t} else {\n\t\twhile (navigator.next() && (!(navigator.current() instanceof Match) || arrayContainsElementOrParent(navigator.current(), elementsToRemove))) {\n\t\t\tviewer.expand(navigator.current());\n\t\t}\n\t}\n\treturn navigator.current();\n}\n\n/***\n * Finds the last element in the tree with the same type as `element`\n */\nexport function getLastNodeFromSameType(viewer: WorkbenchCompressibleObjectTree<RenderableMatch>, element: RenderableMatch): RenderableMatch | undefined {\n\tlet lastElem: RenderableMatch | null = viewer.lastVisibleElement ?? null;\n\n\twhile (lastElem) {\n\t\tconst compareVal = compareLevels(element, lastElem);\n\t\tif (compareVal === -1) {\n\t\t\tviewer.expand(lastElem);\n\t\t\tlastElem = viewer.lastVisibleElement;\n\t\t} else if (compareVal === 1) {\n\t\t\tlastElem = viewer.getParentElement(lastElem);\n\t\t} else {\n\t\t\treturn lastElem;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n//#endregion\n\n"],
  "mappings": "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",
  "names": []
}
