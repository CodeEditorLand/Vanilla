{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/notebookSearch/searchNotebookHelpers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FindMatch } from '../../../../../editor/common/model.js';\nimport { IFileMatch, ITextSearchMatch, TextSearchMatch } from '../../../../services/search/common/search.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { INotebookCellMatchNoModel, INotebookFileMatchNoModel, genericCellMatchesToTextSearchMatches, rawCellPrefix } from '../../common/searchNotebookHelpers.js';\nimport { CellWebviewFindMatch, ICellViewModel } from '../../../notebook/browser/notebookBrowser.js';\nimport { URI } from '../../../../../base/common/uri.js';\n\nexport type INotebookCellMatch = INotebookCellMatchWithModel | INotebookCellMatchNoModel;\nexport type INotebookFileMatch = INotebookFileMatchWithModel | INotebookFileMatchNoModel;\n\nexport function getIDFromINotebookCellMatch(match: INotebookCellMatch): string {\n\tif (isINotebookCellMatchWithModel(match)) {\n\t\treturn match.cell.id;\n\t} else {\n\t\treturn `${rawCellPrefix}${match.index}`;\n\t}\n}\nexport interface INotebookFileMatchWithModel extends IFileMatch {\n\tcellResults: INotebookCellMatchWithModel[];\n}\n\nexport interface INotebookCellMatchWithModel extends INotebookCellMatchNoModel<URI> {\n\tcell: ICellViewModel;\n}\n\nexport function isINotebookFileMatchWithModel(object: any): object is INotebookFileMatchWithModel {\n\treturn 'cellResults' in object && object.cellResults instanceof Array && object.cellResults.every(isINotebookCellMatchWithModel);\n}\n\nexport function isINotebookCellMatchWithModel(object: any): object is INotebookCellMatchWithModel {\n\treturn 'cell' in object;\n}\n\nexport function contentMatchesToTextSearchMatches(contentMatches: FindMatch[], cell: ICellViewModel): ITextSearchMatch[] {\n\treturn genericCellMatchesToTextSearchMatches(\n\t\tcontentMatches,\n\t\tcell.textBuffer\n\t);\n}\n\nexport function webviewMatchesToTextSearchMatches(webviewMatches: CellWebviewFindMatch[]): ITextSearchMatch[] {\n\treturn webviewMatches\n\t\t.map(rawMatch =>\n\t\t\t(rawMatch.searchPreviewInfo) ?\n\t\t\t\tnew TextSearchMatch(\n\t\t\t\t\trawMatch.searchPreviewInfo.line,\n\t\t\t\t\tnew Range(0, rawMatch.searchPreviewInfo.range.start, 0, rawMatch.searchPreviewInfo.range.end),\n\t\t\t\t\tundefined,\n\t\t\t\t\trawMatch.index) : undefined\n\t\t).filter((e): e is TextSearchMatch => !!e);\n}\n"],
  "mappings": ";;AAKA,SAAS,iBAAiB;AAC1B,SAAS,YAAY,kBAAkB,uBAAuB;AAC9D,SAAS,aAAa;AACtB,SAAS,2BAA2B,2BAA2B,uCAAuC,qBAAqB;AAC3H,SAAS,sBAAsB,sBAAsB;AACrD,SAAS,WAAW;AAKb,SAAS,4BAA4B,OAAmC;AAC9E,MAAI,8BAA8B,KAAK,GAAG;AACzC,WAAO,MAAM,KAAK;AAAA,EACnB,OAAO;AACN,WAAO,GAAG,aAAa,GAAG,MAAM,KAAK;AAAA,EACtC;AACD;AANgB;AAeT,SAAS,8BAA8B,QAAoD;AACjG,SAAO,iBAAiB,UAAU,OAAO,uBAAuB,SAAS,OAAO,YAAY,MAAM,6BAA6B;AAChI;AAFgB;AAIT,SAAS,8BAA8B,QAAoD;AACjG,SAAO,UAAU;AAClB;AAFgB;AAIT,SAAS,kCAAkC,gBAA6B,MAA0C;AACxH,SAAO;AAAA,IACN;AAAA,IACA,KAAK;AAAA,EACN;AACD;AALgB;AAOT,SAAS,kCAAkC,gBAA4D;AAC7G,SAAO,eACL;AAAA,IAAI,cACH,SAAS,oBACT,IAAI;AAAA,MACH,SAAS,kBAAkB;AAAA,MAC3B,IAAI,MAAM,GAAG,SAAS,kBAAkB,MAAM,OAAO,GAAG,SAAS,kBAAkB,MAAM,GAAG;AAAA,MAC5F;AAAA,MACA,SAAS;AAAA,IAAK,IAAI;AAAA,EACrB,EAAE,OAAO,CAAC,MAA4B,CAAC,CAAC,CAAC;AAC3C;AAVgB;",
  "names": []
}
