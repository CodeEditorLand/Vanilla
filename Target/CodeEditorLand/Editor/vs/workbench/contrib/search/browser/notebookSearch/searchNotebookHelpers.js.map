{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/notebookSearch/searchNotebookHelpers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport { Range } from \"../../../../../editor/common/core/range.js\";\nimport type { FindMatch } from \"../../../../../editor/common/model.js\";\nimport {\n\ttype IFileMatch,\n\ttype ITextSearchMatch,\n\tTextSearchMatch,\n} from \"../../../../services/search/common/search.js\";\nimport type {\n\tCellWebviewFindMatch,\n\tICellViewModel,\n} from \"../../../notebook/browser/notebookBrowser.js\";\nimport {\n\ttype INotebookCellMatchNoModel,\n\ttype INotebookFileMatchNoModel,\n\tgenericCellMatchesToTextSearchMatches,\n\trawCellPrefix,\n} from \"../../common/searchNotebookHelpers.js\";\n\nexport type INotebookCellMatch =\n\t| INotebookCellMatchWithModel\n\t| INotebookCellMatchNoModel;\nexport type INotebookFileMatch =\n\t| INotebookFileMatchWithModel\n\t| INotebookFileMatchNoModel;\n\nexport function getIDFromINotebookCellMatch(match: INotebookCellMatch): string {\n\tif (isINotebookCellMatchWithModel(match)) {\n\t\treturn match.cell.id;\n\t} else {\n\t\treturn `${rawCellPrefix}${match.index}`;\n\t}\n}\nexport interface INotebookFileMatchWithModel extends IFileMatch {\n\tcellResults: INotebookCellMatchWithModel[];\n}\n\nexport interface INotebookCellMatchWithModel\n\textends INotebookCellMatchNoModel<URI> {\n\tcell: ICellViewModel;\n}\n\nexport function isINotebookFileMatchWithModel(\n\tobject: any,\n): object is INotebookFileMatchWithModel {\n\treturn (\n\t\t\"cellResults\" in object &&\n\t\tobject.cellResults instanceof Array &&\n\t\tobject.cellResults.every(isINotebookCellMatchWithModel)\n\t);\n}\n\nexport function isINotebookCellMatchWithModel(\n\tobject: any,\n): object is INotebookCellMatchWithModel {\n\treturn \"cell\" in object;\n}\n\nexport function contentMatchesToTextSearchMatches(\n\tcontentMatches: FindMatch[],\n\tcell: ICellViewModel,\n): ITextSearchMatch[] {\n\treturn genericCellMatchesToTextSearchMatches(\n\t\tcontentMatches,\n\t\tcell.textBuffer,\n\t);\n}\n\nexport function webviewMatchesToTextSearchMatches(\n\twebviewMatches: CellWebviewFindMatch[],\n): ITextSearchMatch[] {\n\treturn webviewMatches\n\t\t.map((rawMatch) =>\n\t\t\trawMatch.searchPreviewInfo\n\t\t\t\t? new TextSearchMatch(\n\t\t\t\t\t\trawMatch.searchPreviewInfo.line,\n\t\t\t\t\t\tnew Range(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\trawMatch.searchPreviewInfo.range.start,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\trawMatch.searchPreviewInfo.range.end,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\trawMatch.index,\n\t\t\t\t\t)\n\t\t\t\t: undefined,\n\t\t)\n\t\t.filter((e): e is TextSearchMatch => !!e);\n}\n"],
  "mappings": ";;AAMA,SAAS,aAAa;AAEtB;AAAA,EAGC;AAAA,OACM;AAKP;AAAA,EAGC;AAAA,EACA;AAAA,OACM;AASA,SAAS,4BAA4B,OAAmC;AAC9E,MAAI,8BAA8B,KAAK,GAAG;AACzC,WAAO,MAAM,KAAK;AAAA,EACnB,OAAO;AACN,WAAO,GAAG,aAAa,GAAG,MAAM,KAAK;AAAA,EACtC;AACD;AANgB;AAgBT,SAAS,8BACf,QACwC;AACxC,SACC,iBAAiB,UACjB,OAAO,uBAAuB,SAC9B,OAAO,YAAY,MAAM,6BAA6B;AAExD;AARgB;AAUT,SAAS,8BACf,QACwC;AACxC,SAAO,UAAU;AAClB;AAJgB;AAMT,SAAS,kCACf,gBACA,MACqB;AACrB,SAAO;AAAA,IACN;AAAA,IACA,KAAK;AAAA,EACN;AACD;AARgB;AAUT,SAAS,kCACf,gBACqB;AACrB,SAAO,eACL;AAAA,IAAI,CAAC,aACL,SAAS,oBACN,IAAI;AAAA,MACJ,SAAS,kBAAkB;AAAA,MAC3B,IAAI;AAAA,QACH;AAAA,QACA,SAAS,kBAAkB,MAAM;AAAA,QACjC;AAAA,QACA,SAAS,kBAAkB,MAAM;AAAA,MAClC;AAAA,MACA;AAAA,MACA,SAAS;AAAA,IACV,IACC;AAAA,EACJ,EACC,OAAO,CAAC,MAA4B,CAAC,CAAC,CAAC;AAC1C;AApBgB;",
  "names": []
}
