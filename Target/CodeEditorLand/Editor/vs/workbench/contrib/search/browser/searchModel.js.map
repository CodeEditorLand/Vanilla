{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport {\n\tCancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport {\n\tcompareFileExtensions,\n\tcompareFileNames,\n\tcomparePaths,\n} from \"../../../../base/common/comparers.js\";\nimport { memoize } from \"../../../../base/common/decorators.js\";\nimport * as errors from \"../../../../base/common/errors.js\";\nimport {\n\tEmitter,\n\tEvent,\n\tPauseableEmitter,\n} from \"../../../../base/common/event.js\";\nimport { Lazy } from \"../../../../base/common/lazy.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { lcut } from \"../../../../base/common/strings.js\";\nimport { TernarySearchTree } from \"../../../../base/common/ternarySearchTree.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport {\n\tFindMatch,\n\ttype IModelDeltaDecoration,\n\ttype ITextModel,\n\tMinimapPosition,\n\tOverviewRulerLane,\n\tTrackedRangeStickiness,\n} from \"../../../../editor/common/model.js\";\nimport { ModelDecorationOptions } from \"../../../../editor/common/model/textModel.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type {\n\tIFileService,\n\tIFileStatWithPartialMetadata,\n} from \"../../../../platform/files/common/files.js\";\nimport {\n\tIInstantiationService,\n\tcreateDecorator,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\ttype IProgress,\n\tIProgressService,\n\ttype IProgressStep,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tminimapFindMatch,\n\toverviewRulerFindMatchForeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { themeColorFromId } from \"../../../../platform/theme/common/themeService.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { ReplacePattern } from \"../../../services/search/common/replace.js\";\nimport {\n\tDEFAULT_MAX_SEARCH_RESULTS,\n\ttype IAITextQuery,\n\ttype IFileMatch,\n\ttype IPatternInfo,\n\ttype ISearchComplete,\n\ttype ISearchConfigurationProperties,\n\ttype ISearchProgressItem,\n\ttype ISearchRange,\n\tISearchService,\n\ttype ITextQuery,\n\ttype ITextSearchContext,\n\ttype ITextSearchMatch,\n\ttype ITextSearchPreviewOptions,\n\ttype ITextSearchResult,\n\ttype ITextSearchStats,\n\tOneLineRange,\n\tQueryType,\n\tSearchCompletionExitCode,\n\tSearchSortOrder,\n\tresultIsMatch,\n} from \"../../../services/search/common/search.js\";\nimport {\n\teditorMatchesToTextSearchResults,\n\tgetTextSearchMatchWithModelContext,\n} from \"../../../services/search/common/searchHelpers.js\";\nimport { FindMatchDecorationModel } from \"../../notebook/browser/contrib/find/findMatchDecorationModel.js\";\nimport { CellFindMatchModel } from \"../../notebook/browser/contrib/find/findModel.js\";\nimport type {\n\tCellFindMatchWithIndex,\n\tCellWebviewFindMatch,\n\tICellViewModel,\n} from \"../../notebook/browser/notebookBrowser.js\";\nimport { NotebookEditorWidget } from \"../../notebook/browser/notebookEditorWidget.js\";\nimport { INotebookEditorService } from \"../../notebook/browser/services/notebookEditorService.js\";\nimport { NotebookCellsChangeType } from \"../../notebook/common/notebookCommon.js\";\nimport { CellSearchModel } from \"../common/cellSearchModel.js\";\nimport { INotebookSearchService } from \"../common/notebookSearch.js\";\nimport {\n\ttype INotebookCellMatchNoModel,\n\tisINotebookFileMatchNoModel,\n\trawCellPrefix,\n} from \"../common/searchNotebookHelpers.js\";\nimport {\n\ttype INotebookCellMatchWithModel,\n\tcontentMatchesToTextSearchMatches,\n\tgetIDFromINotebookCellMatch,\n\tisINotebookCellMatchWithModel,\n\tisINotebookFileMatchWithModel,\n\twebviewMatchesToTextSearchMatches,\n} from \"./notebookSearch/searchNotebookHelpers.js\";\nimport { IReplaceService } from \"./replace.js\";\n\nexport class Match {\n\tprivate static readonly MAX_PREVIEW_CHARS = 250;\n\tprotected _id: string;\n\tprotected _range: Range;\n\tprivate _oneLinePreviewText: string;\n\tprivate _rangeInPreviewText: ISearchRange;\n\t// For replace\n\tprivate _fullPreviewRange: ISearchRange;\n\n\tconstructor(\n\t\tprotected _parent: FileMatch,\n\t\tprivate _fullPreviewLines: string[],\n\t\t_fullPreviewRange: ISearchRange,\n\t\t_documentRange: ISearchRange,\n\t\tpublic readonly aiContributed: boolean,\n\t) {\n\t\tthis._oneLinePreviewText =\n\t\t\t_fullPreviewLines[_fullPreviewRange.startLineNumber];\n\t\tconst adjustedEndCol =\n\t\t\t_fullPreviewRange.startLineNumber ===\n\t\t\t_fullPreviewRange.endLineNumber\n\t\t\t\t? _fullPreviewRange.endColumn\n\t\t\t\t: this._oneLinePreviewText.length;\n\t\tthis._rangeInPreviewText = new OneLineRange(\n\t\t\t1,\n\t\t\t_fullPreviewRange.startColumn + 1,\n\t\t\tadjustedEndCol + 1,\n\t\t);\n\n\t\tthis._range = new Range(\n\t\t\t_documentRange.startLineNumber + 1,\n\t\t\t_documentRange.startColumn + 1,\n\t\t\t_documentRange.endLineNumber + 1,\n\t\t\t_documentRange.endColumn + 1,\n\t\t);\n\n\t\tthis._fullPreviewRange = _fullPreviewRange;\n\n\t\tthis._id =\n\t\t\tthis._parent.id() + \">\" + this._range + this.getMatchString();\n\t}\n\n\tid(): string {\n\t\treturn this._id;\n\t}\n\n\tparent(): FileMatch {\n\t\treturn this._parent;\n\t}\n\n\ttext(): string {\n\t\treturn this._oneLinePreviewText;\n\t}\n\n\trange(): Range {\n\t\treturn this._range;\n\t}\n\n\t@memoize\n\tpreview(): {\n\t\tbefore: string;\n\t\tfullBefore: string;\n\t\tinside: string;\n\t\tafter: string;\n\t} {\n\t\tconst fullBefore = this._oneLinePreviewText.substring(\n\t\t\t\t0,\n\t\t\t\tthis._rangeInPreviewText.startColumn - 1,\n\t\t\t),\n\t\t\tbefore = lcut(fullBefore, 26, \"\u2026\");\n\n\t\tlet inside = this.getMatchString(),\n\t\t\tafter = this._oneLinePreviewText.substring(\n\t\t\t\tthis._rangeInPreviewText.endColumn - 1,\n\t\t\t);\n\n\t\tlet charsRemaining = Match.MAX_PREVIEW_CHARS - before.length;\n\t\tinside = inside.substr(0, charsRemaining);\n\t\tcharsRemaining -= inside.length;\n\t\tafter = after.substr(0, charsRemaining);\n\n\t\treturn {\n\t\t\tbefore,\n\t\t\tfullBefore,\n\t\t\tinside,\n\t\t\tafter,\n\t\t};\n\t}\n\n\tget replaceString(): string {\n\t\tconst searchModel = this.parent().parent().searchModel;\n\t\tif (!searchModel.replacePattern) {\n\t\t\tthrow new Error(\n\t\t\t\t\"searchModel.replacePattern must be set before accessing replaceString\",\n\t\t\t);\n\t\t}\n\n\t\tconst fullMatchText = this.fullMatchText();\n\t\tlet replaceString = searchModel.replacePattern.getReplaceString(\n\t\t\tfullMatchText,\n\t\t\tsearchModel.preserveCase,\n\t\t);\n\t\tif (replaceString !== null) {\n\t\t\treturn replaceString;\n\t\t}\n\n\t\t// Search/find normalize line endings - check whether \\r prevents regex from matching\n\t\tconst fullMatchTextWithoutCR = fullMatchText.replace(/\\r\\n/g, \"\\n\");\n\t\tif (fullMatchTextWithoutCR !== fullMatchText) {\n\t\t\treplaceString = searchModel.replacePattern.getReplaceString(\n\t\t\t\tfullMatchTextWithoutCR,\n\t\t\t\tsearchModel.preserveCase,\n\t\t\t);\n\t\t\tif (replaceString !== null) {\n\t\t\t\treturn replaceString;\n\t\t\t}\n\t\t}\n\n\t\t// If match string is not matching then regex pattern has a lookahead expression\n\t\tconst contextMatchTextWithSurroundingContent = this.fullMatchText(true);\n\t\treplaceString = searchModel.replacePattern.getReplaceString(\n\t\t\tcontextMatchTextWithSurroundingContent,\n\t\t\tsearchModel.preserveCase,\n\t\t);\n\t\tif (replaceString !== null) {\n\t\t\treturn replaceString;\n\t\t}\n\n\t\t// Search/find normalize line endings, this time in full context\n\t\tconst contextMatchTextWithoutCR =\n\t\t\tcontextMatchTextWithSurroundingContent.replace(/\\r\\n/g, \"\\n\");\n\t\tif (\n\t\t\tcontextMatchTextWithoutCR !== contextMatchTextWithSurroundingContent\n\t\t) {\n\t\t\treplaceString = searchModel.replacePattern.getReplaceString(\n\t\t\t\tcontextMatchTextWithoutCR,\n\t\t\t\tsearchModel.preserveCase,\n\t\t\t);\n\t\t\tif (replaceString !== null) {\n\t\t\t\treturn replaceString;\n\t\t\t}\n\t\t}\n\n\t\t// Match string is still not matching. Could be unsupported matches (multi-line).\n\t\treturn searchModel.replacePattern.pattern;\n\t}\n\n\tfullMatchText(includeSurrounding = false): string {\n\t\tlet thisMatchPreviewLines: string[];\n\t\tif (includeSurrounding) {\n\t\t\tthisMatchPreviewLines = this._fullPreviewLines;\n\t\t} else {\n\t\t\tthisMatchPreviewLines = this._fullPreviewLines.slice(\n\t\t\t\tthis._fullPreviewRange.startLineNumber,\n\t\t\t\tthis._fullPreviewRange.endLineNumber + 1,\n\t\t\t);\n\t\t\tthisMatchPreviewLines[thisMatchPreviewLines.length - 1] =\n\t\t\t\tthisMatchPreviewLines[thisMatchPreviewLines.length - 1].slice(\n\t\t\t\t\t0,\n\t\t\t\t\tthis._fullPreviewRange.endColumn,\n\t\t\t\t);\n\t\t\tthisMatchPreviewLines[0] = thisMatchPreviewLines[0].slice(\n\t\t\t\tthis._fullPreviewRange.startColumn,\n\t\t\t);\n\t\t}\n\n\t\treturn thisMatchPreviewLines.join(\"\\n\");\n\t}\n\n\trangeInPreview() {\n\t\t// convert to editor's base 1 positions.\n\t\treturn {\n\t\t\t...this._fullPreviewRange,\n\t\t\tstartColumn: this._fullPreviewRange.startColumn + 1,\n\t\t\tendColumn: this._fullPreviewRange.endColumn + 1,\n\t\t};\n\t}\n\n\tfullPreviewLines(): string[] {\n\t\treturn this._fullPreviewLines.slice(\n\t\t\tthis._fullPreviewRange.startLineNumber,\n\t\t\tthis._fullPreviewRange.endLineNumber + 1,\n\t\t);\n\t}\n\n\tgetMatchString(): string {\n\t\treturn this._oneLinePreviewText.substring(\n\t\t\tthis._rangeInPreviewText.startColumn - 1,\n\t\t\tthis._rangeInPreviewText.endColumn - 1,\n\t\t);\n\t}\n}\n\nexport class CellMatch {\n\tprivate _contentMatches: Map<string, MatchInNotebook>;\n\tprivate _webviewMatches: Map<string, MatchInNotebook>;\n\tprivate _context: Map<number, string>;\n\n\tconstructor(\n\t\tprivate readonly _parent: FileMatch,\n\t\tprivate _cell: ICellViewModel | undefined,\n\t\tprivate readonly _cellIndex: number,\n\t) {\n\t\tthis._contentMatches = new Map<string, MatchInNotebook>();\n\t\tthis._webviewMatches = new Map<string, MatchInNotebook>();\n\t\tthis._context = new Map<number, string>();\n\t}\n\n\tpublic hasCellViewModel() {\n\t\treturn !(this._cell instanceof CellSearchModel);\n\t}\n\n\tget context(): Map<number, string> {\n\t\treturn new Map(this._context);\n\t}\n\n\tmatches() {\n\t\treturn [\n\t\t\t...this._contentMatches.values(),\n\t\t\t...this._webviewMatches.values(),\n\t\t];\n\t}\n\n\tget contentMatches(): MatchInNotebook[] {\n\t\treturn Array.from(this._contentMatches.values());\n\t}\n\n\tget webviewMatches(): MatchInNotebook[] {\n\t\treturn Array.from(this._webviewMatches.values());\n\t}\n\n\tremove(matches: MatchInNotebook | MatchInNotebook[]): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\t\tfor (const match of matches) {\n\t\t\tthis._contentMatches.delete(match.id());\n\t\t\tthis._webviewMatches.delete(match.id());\n\t\t}\n\t}\n\n\tclearAllMatches() {\n\t\tthis._contentMatches.clear();\n\t\tthis._webviewMatches.clear();\n\t}\n\n\taddContentMatches(textSearchMatches: ITextSearchMatch[]) {\n\t\tconst contentMatches = textSearchMatchesToNotebookMatches(\n\t\t\ttextSearchMatches,\n\t\t\tthis,\n\t\t);\n\t\tcontentMatches.forEach((match) => {\n\t\t\tthis._contentMatches.set(match.id(), match);\n\t\t});\n\t\tthis.addContext(textSearchMatches);\n\t}\n\n\tpublic addContext(textSearchMatches: ITextSearchMatch[]) {\n\t\tif (!this.cell) {\n\t\t\t// todo: get closed notebook results in search editor\n\t\t\treturn;\n\t\t}\n\t\tthis.cell.resolveTextModel().then((textModel) => {\n\t\t\tconst textResultsWithContext = getTextSearchMatchWithModelContext(\n\t\t\t\ttextSearchMatches,\n\t\t\t\ttextModel,\n\t\t\t\tthis.parent.parent().query!,\n\t\t\t);\n\t\t\tconst contexts = textResultsWithContext.filter(\n\t\t\t\t((result) => !resultIsMatch(result)) as (\n\t\t\t\t\ta: any,\n\t\t\t\t) => a is ITextSearchContext,\n\t\t\t);\n\t\t\tcontexts\n\t\t\t\t.map((context) => ({\n\t\t\t\t\t...context,\n\t\t\t\t\tlineNumber: context.lineNumber + 1,\n\t\t\t\t}))\n\t\t\t\t.forEach((context) => {\n\t\t\t\t\tthis._context.set(context.lineNumber, context.text);\n\t\t\t\t});\n\t\t});\n\t}\n\n\taddWebviewMatches(textSearchMatches: ITextSearchMatch[]) {\n\t\tconst webviewMatches = textSearchMatchesToNotebookMatches(\n\t\t\ttextSearchMatches,\n\t\t\tthis,\n\t\t);\n\t\twebviewMatches.forEach((match) => {\n\t\t\tthis._webviewMatches.set(match.id(), match);\n\t\t});\n\t\t// TODO: add webview results to context\n\t}\n\n\tsetCellModel(cell: ICellViewModel) {\n\t\tthis._cell = cell;\n\t}\n\n\tget parent(): FileMatch {\n\t\treturn this._parent;\n\t}\n\n\tget id(): string {\n\t\treturn this._cell?.id ?? `${rawCellPrefix}${this.cellIndex}`;\n\t}\n\n\tget cellIndex(): number {\n\t\treturn this._cellIndex;\n\t}\n\n\tget cell(): ICellViewModel | undefined {\n\t\treturn this._cell;\n\t}\n}\n\nexport class MatchInNotebook extends Match {\n\tprivate _webviewIndex: number | undefined;\n\n\tconstructor(\n\t\tprivate readonly _cellParent: CellMatch,\n\t\t_fullPreviewLines: string[],\n\t\t_fullPreviewRange: ISearchRange,\n\t\t_documentRange: ISearchRange,\n\t\twebviewIndex?: number,\n\t) {\n\t\tsuper(\n\t\t\t_cellParent.parent,\n\t\t\t_fullPreviewLines,\n\t\t\t_fullPreviewRange,\n\t\t\t_documentRange,\n\t\t\tfalse,\n\t\t);\n\t\tthis._id =\n\t\t\tthis._parent.id() +\n\t\t\t\">\" +\n\t\t\tthis._cellParent.cellIndex +\n\t\t\t(webviewIndex ? \"_\" + webviewIndex : \"\") +\n\t\t\t\"_\" +\n\t\t\tthis.notebookMatchTypeString() +\n\t\t\tthis._range +\n\t\t\tthis.getMatchString();\n\t\tthis._webviewIndex = webviewIndex;\n\t}\n\n\toverride parent(): FileMatch {\n\t\t// visible parent in search tree\n\t\treturn this._cellParent.parent;\n\t}\n\n\tget cellParent(): CellMatch {\n\t\treturn this._cellParent;\n\t}\n\n\tprivate notebookMatchTypeString(): string {\n\t\treturn this.isWebviewMatch() ? \"webview\" : \"content\";\n\t}\n\n\tpublic isWebviewMatch() {\n\t\treturn this._webviewIndex !== undefined;\n\t}\n\n\tpublic isReadonly() {\n\t\treturn !this._cellParent.hasCellViewModel() || this.isWebviewMatch();\n\t}\n\n\tget cellIndex() {\n\t\treturn this._cellParent.cellIndex;\n\t}\n\n\tget webviewIndex() {\n\t\treturn this._webviewIndex;\n\t}\n\n\tget cell() {\n\t\treturn this._cellParent.cell;\n\t}\n}\n\nexport class FileMatch extends Disposable implements IFileMatch {\n\tprivate static readonly _CURRENT_FIND_MATCH =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"search-current-find-match\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tzIndex: 13,\n\t\t\tclassName: \"currentFindMatch\",\n\t\t\toverviewRuler: {\n\t\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t},\n\t\t\tminimap: {\n\t\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\t\tposition: MinimapPosition.Inline,\n\t\t\t},\n\t\t});\n\n\tprivate static readonly _FIND_MATCH = ModelDecorationOptions.register({\n\t\tdescription: \"search-find-match\",\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: \"findMatch\",\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center,\n\t\t},\n\t\tminimap: {\n\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\tposition: MinimapPosition.Inline,\n\t\t},\n\t});\n\n\tprivate static getDecorationOption(\n\t\tselected: boolean,\n\t): ModelDecorationOptions {\n\t\treturn selected ? FileMatch._CURRENT_FIND_MATCH : FileMatch._FIND_MATCH;\n\t}\n\n\tprotected _onChange = this._register(\n\t\tnew Emitter<{ didRemove?: boolean; forceUpdateModel?: boolean }>(),\n\t);\n\treadonly onChange: Event<{\n\t\tdidRemove?: boolean;\n\t\tforceUpdateModel?: boolean;\n\t}> = this._onChange.event;\n\n\tprivate _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprivate _resource: URI;\n\tprivate _fileStat?: IFileStatWithPartialMetadata;\n\tprivate _model: ITextModel | null = null;\n\tprivate _modelListener: IDisposable | null = null;\n\tprivate _textMatches: Map<string, Match>;\n\tprivate _cellMatches: Map<string, CellMatch>;\n\n\tprivate _removedTextMatches: Set<string>;\n\tprivate _selectedMatch: Match | null = null;\n\tprivate _name: Lazy<string>;\n\n\tprivate _updateScheduler: RunOnceScheduler;\n\tprivate _modelDecorations: string[] = [];\n\n\tprivate _context: Map<number, string> = new Map();\n\n\tpublic get context(): Map<number, string> {\n\t\treturn new Map(this._context);\n\t}\n\n\tpublic get cellContext(): Map<string, Map<number, string>> {\n\t\tconst cellContext = new Map<string, Map<number, string>>();\n\t\tthis._cellMatches.forEach((cellMatch) => {\n\t\t\tcellContext.set(cellMatch.id, cellMatch.context);\n\t\t});\n\t\treturn cellContext;\n\t}\n\n\t// #region notebook fields\n\tprivate _notebookEditorWidget: NotebookEditorWidget | null = null;\n\tprivate _editorWidgetListener: IDisposable | null = null;\n\tprivate _notebookUpdateScheduler: RunOnceScheduler;\n\tprivate _findMatchDecorationModel: FindMatchDecorationModel | undefined;\n\tprivate _lastEditorWidgetIdForUpdate: string | undefined;\n\t// #endregion\n\n\tconstructor(\n\t\tprivate _query: IPatternInfo,\n\t\tprivate _previewOptions: ITextSearchPreviewOptions | undefined,\n\t\tprivate _maxResults: number | undefined,\n\t\tprivate _parent: FolderMatch,\n\t\tprivate rawMatch: IFileMatch,\n\t\tprivate _closestRoot: FolderMatchWorkspaceRoot | null,\n\t\tprivate readonly searchInstanceID: string,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@INotebookEditorService\n\t\tprivate readonly notebookEditorService: INotebookEditorService,\n\t) {\n\t\tsuper();\n\t\tthis._resource = this.rawMatch.resource;\n\t\tthis._textMatches = new Map<string, Match>();\n\t\tthis._removedTextMatches = new Set<string>();\n\t\tthis._updateScheduler = new RunOnceScheduler(\n\t\t\tthis.updateMatchesForModel.bind(this),\n\t\t\t250,\n\t\t);\n\t\tthis._name = new Lazy(() =>\n\t\t\tlabelService.getUriBasenameLabel(this.resource),\n\t\t);\n\t\tthis._cellMatches = new Map<string, CellMatch>();\n\t\tthis._notebookUpdateScheduler = new RunOnceScheduler(\n\t\t\tthis.updateMatchesForEditorWidget.bind(this),\n\t\t\t250,\n\t\t);\n\t}\n\n\taddWebviewMatchesToCell(\n\t\tcellID: string,\n\t\twebviewMatches: ITextSearchMatch[],\n\t) {\n\t\tconst cellMatch = this.getCellMatch(cellID);\n\t\tif (cellMatch !== undefined) {\n\t\t\tcellMatch.addWebviewMatches(webviewMatches);\n\t\t}\n\t}\n\n\taddContentMatchesToCell(\n\t\tcellID: string,\n\t\tcontentMatches: ITextSearchMatch[],\n\t) {\n\t\tconst cellMatch = this.getCellMatch(cellID);\n\t\tif (cellMatch !== undefined) {\n\t\t\tcellMatch.addContentMatches(contentMatches);\n\t\t}\n\t}\n\n\tgetCellMatch(cellID: string): CellMatch | undefined {\n\t\treturn this._cellMatches.get(cellID);\n\t}\n\n\taddCellMatch(\n\t\trawCell: INotebookCellMatchNoModel | INotebookCellMatchWithModel,\n\t) {\n\t\tconst cellMatch = new CellMatch(\n\t\t\tthis,\n\t\t\tisINotebookCellMatchWithModel(rawCell) ? rawCell.cell : undefined,\n\t\t\trawCell.index,\n\t\t);\n\t\tthis._cellMatches.set(cellMatch.id, cellMatch);\n\t\tthis.addWebviewMatchesToCell(cellMatch.id, rawCell.webviewResults);\n\t\tthis.addContentMatchesToCell(cellMatch.id, rawCell.contentResults);\n\t}\n\n\tget closestRoot(): FolderMatchWorkspaceRoot | null {\n\t\treturn this._closestRoot;\n\t}\n\n\thasReadonlyMatches(): boolean {\n\t\treturn this.matches().some(\n\t\t\t(m) => m instanceof MatchInNotebook && m.isReadonly(),\n\t\t);\n\t}\n\n\tcreateMatches(isAiContributed: boolean): void {\n\t\tconst model = this.modelService.getModel(this._resource);\n\t\tif (model && !isAiContributed) {\n\t\t\t// todo: handle better when ai contributed results has model, currently, createMatches does not work for this\n\t\t\tthis.bindModel(model);\n\t\t\tthis.updateMatchesForModel();\n\t\t} else {\n\t\t\tconst notebookEditorWidgetBorrow =\n\t\t\t\tthis.notebookEditorService.retrieveExistingWidgetFromURI(\n\t\t\t\t\tthis.resource,\n\t\t\t\t);\n\n\t\t\tif (notebookEditorWidgetBorrow?.value) {\n\t\t\t\tthis.bindNotebookEditorWidget(notebookEditorWidgetBorrow.value);\n\t\t\t}\n\t\t\tif (this.rawMatch.results) {\n\t\t\t\tthis.rawMatch.results\n\t\t\t\t\t.filter(resultIsMatch)\n\t\t\t\t\t.forEach((rawMatch) => {\n\t\t\t\t\t\ttextSearchResultToMatches(\n\t\t\t\t\t\t\trawMatch,\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tisAiContributed,\n\t\t\t\t\t\t).forEach((m) => this.add(m));\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tisINotebookFileMatchWithModel(this.rawMatch) ||\n\t\t\t\tisINotebookFileMatchNoModel(this.rawMatch)\n\t\t\t) {\n\t\t\t\tthis.rawMatch.cellResults?.forEach((cell) =>\n\t\t\t\t\tthis.addCellMatch(cell),\n\t\t\t\t);\n\t\t\t\tthis.setNotebookFindMatchDecorationsUsingCellMatches(\n\t\t\t\t\tthis.cellMatches(),\n\t\t\t\t);\n\t\t\t\tthis._onChange.fire({ forceUpdateModel: true });\n\t\t\t}\n\t\t\tthis.addContext(this.rawMatch.results);\n\t\t}\n\t}\n\n\tbindModel(model: ITextModel): void {\n\t\tthis._model = model;\n\t\tthis._modelListener = this._model.onDidChangeContent(() => {\n\t\t\tthis._updateScheduler.schedule();\n\t\t});\n\t\tthis._model.onWillDispose(() => this.onModelWillDispose());\n\t\tthis.updateHighlights();\n\t}\n\n\tprivate onModelWillDispose(): void {\n\t\t// Update matches because model might have some dirty changes\n\t\tthis.updateMatchesForModel();\n\t\tthis.unbindModel();\n\t}\n\n\tprivate unbindModel(): void {\n\t\tif (this._model) {\n\t\t\tthis._updateScheduler.cancel();\n\t\t\tthis._model.changeDecorations((accessor) => {\n\t\t\t\tthis._modelDecorations = accessor.deltaDecorations(\n\t\t\t\t\tthis._modelDecorations,\n\t\t\t\t\t[],\n\t\t\t\t);\n\t\t\t});\n\t\t\tthis._model = null;\n\t\t\tthis._modelListener!.dispose();\n\t\t}\n\t}\n\n\tprivate updateMatchesForModel(): void {\n\t\t// this is called from a timeout and might fire\n\t\t// after the model has been disposed\n\t\tif (!this._model) {\n\t\t\treturn;\n\t\t}\n\t\tthis._textMatches = new Map<string, Match>();\n\n\t\tconst wordSeparators =\n\t\t\tthis._query.isWordMatch && this._query.wordSeparators\n\t\t\t\t? this._query.wordSeparators\n\t\t\t\t: null;\n\t\tconst matches = this._model.findMatches(\n\t\t\tthis._query.pattern,\n\t\t\tthis._model.getFullModelRange(),\n\t\t\t!!this._query.isRegExp,\n\t\t\t!!this._query.isCaseSensitive,\n\t\t\twordSeparators,\n\t\t\tfalse,\n\t\t\tthis._maxResults ?? DEFAULT_MAX_SEARCH_RESULTS,\n\t\t);\n\n\t\tthis.updateMatches(matches, true, this._model, false);\n\t}\n\n\tprotected async updatesMatchesForLineAfterReplace(\n\t\tlineNumber: number,\n\t\tmodelChange: boolean,\n\t): Promise<void> {\n\t\tif (!this._model) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = {\n\t\t\tstartLineNumber: lineNumber,\n\t\t\tstartColumn: this._model.getLineMinColumn(lineNumber),\n\t\t\tendLineNumber: lineNumber,\n\t\t\tendColumn: this._model.getLineMaxColumn(lineNumber),\n\t\t};\n\t\tconst oldMatches = Array.from(this._textMatches.values()).filter(\n\t\t\t(match) => match.range().startLineNumber === lineNumber,\n\t\t);\n\t\toldMatches.forEach((match) => this._textMatches.delete(match.id()));\n\n\t\tconst wordSeparators =\n\t\t\tthis._query.isWordMatch && this._query.wordSeparators\n\t\t\t\t? this._query.wordSeparators\n\t\t\t\t: null;\n\t\tconst matches = this._model.findMatches(\n\t\t\tthis._query.pattern,\n\t\t\trange,\n\t\t\t!!this._query.isRegExp,\n\t\t\t!!this._query.isCaseSensitive,\n\t\t\twordSeparators,\n\t\t\tfalse,\n\t\t\tthis._maxResults ?? DEFAULT_MAX_SEARCH_RESULTS,\n\t\t);\n\t\tthis.updateMatches(matches, modelChange, this._model, false);\n\n\t\t// await this.updateMatchesForEditorWidget();\n\t}\n\n\tprivate updateMatches(\n\t\tmatches: FindMatch[],\n\t\tmodelChange: boolean,\n\t\tmodel: ITextModel,\n\t\tisAiContributed: boolean,\n\t): void {\n\t\tconst textSearchResults = editorMatchesToTextSearchResults(\n\t\t\tmatches,\n\t\t\tmodel,\n\t\t\tthis._previewOptions,\n\t\t);\n\t\ttextSearchResults.forEach((textSearchResult) => {\n\t\t\ttextSearchResultToMatches(\n\t\t\t\ttextSearchResult,\n\t\t\t\tthis,\n\t\t\t\tisAiContributed,\n\t\t\t).forEach((match) => {\n\t\t\t\tif (!this._removedTextMatches.has(match.id())) {\n\t\t\t\t\tthis.add(match);\n\t\t\t\t\tif (this.isMatchSelected(match)) {\n\t\t\t\t\t\tthis._selectedMatch = match;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.addContext(\n\t\t\tgetTextSearchMatchWithModelContext(\n\t\t\t\ttextSearchResults,\n\t\t\t\tmodel,\n\t\t\t\tthis.parent().parent().query!,\n\t\t\t),\n\t\t);\n\n\t\tthis._onChange.fire({ forceUpdateModel: modelChange });\n\t\tthis.updateHighlights();\n\t}\n\n\tupdateHighlights(): void {\n\t\tif (!this._model) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._model.changeDecorations((accessor) => {\n\t\t\tconst newDecorations = this.parent().showHighlights\n\t\t\t\t? this.matches().map(\n\t\t\t\t\t\t(match): IModelDeltaDecoration => ({\n\t\t\t\t\t\t\trange: match.range(),\n\t\t\t\t\t\t\toptions: FileMatch.getDecorationOption(\n\t\t\t\t\t\t\t\tthis.isMatchSelected(match),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t: [];\n\t\t\tthis._modelDecorations = accessor.deltaDecorations(\n\t\t\t\tthis._modelDecorations,\n\t\t\t\tnewDecorations,\n\t\t\t);\n\t\t});\n\t}\n\n\tid(): string {\n\t\treturn this.resource.toString();\n\t}\n\n\tparent(): FolderMatch {\n\t\treturn this._parent;\n\t}\n\n\tmatches(): Match[] {\n\t\tconst cellMatches: MatchInNotebook[] = Array.from(\n\t\t\tthis._cellMatches.values(),\n\t\t).flatMap((e) => e.matches());\n\t\treturn [...this._textMatches.values(), ...cellMatches];\n\t}\n\n\ttextMatches(): Match[] {\n\t\treturn Array.from(this._textMatches.values());\n\t}\n\n\tcellMatches(): CellMatch[] {\n\t\treturn Array.from(this._cellMatches.values());\n\t}\n\n\tremove(matches: Match | Match[]): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\n\t\tfor (const match of matches) {\n\t\t\tthis.removeMatch(match);\n\t\t\tthis._removedTextMatches.add(match.id());\n\t\t}\n\n\t\tthis._onChange.fire({ didRemove: true });\n\t}\n\n\tprivate replaceQ = Promise.resolve();\n\tasync replace(toReplace: Match): Promise<void> {\n\t\treturn (this.replaceQ = this.replaceQ.finally(async () => {\n\t\t\tawait this.replaceService.replace(toReplace);\n\t\t\tawait this.updatesMatchesForLineAfterReplace(\n\t\t\t\ttoReplace.range().startLineNumber,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}));\n\t}\n\n\tsetSelectedMatch(match: Match | null): void {\n\t\tif (match) {\n\t\t\tif (\n\t\t\t\t!this.isMatchSelected(match) &&\n\t\t\t\tmatch instanceof MatchInNotebook\n\t\t\t) {\n\t\t\t\tthis._selectedMatch = match;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._textMatches.has(match.id())) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.isMatchSelected(match)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._selectedMatch = match;\n\t\tthis.updateHighlights();\n\t}\n\n\tgetSelectedMatch(): Match | null {\n\t\treturn this._selectedMatch;\n\t}\n\n\tisMatchSelected(match: Match): boolean {\n\t\treturn !!this._selectedMatch && this._selectedMatch.id() === match.id();\n\t}\n\n\tcount(): number {\n\t\treturn this.matches().length;\n\t}\n\n\tget resource(): URI {\n\t\treturn this._resource;\n\t}\n\n\tname(): string {\n\t\treturn this._name.value;\n\t}\n\n\taddContext(results: ITextSearchResult[] | undefined) {\n\t\tif (!results) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst contexts = results.filter(\n\t\t\t((result) => !resultIsMatch(result)) as (\n\t\t\t\ta: any,\n\t\t\t) => a is ITextSearchContext,\n\t\t);\n\n\t\treturn contexts.forEach((context) =>\n\t\t\tthis._context.set(context.lineNumber, context.text),\n\t\t);\n\t}\n\n\tadd(match: Match, trigger?: boolean) {\n\t\tthis._textMatches.set(match.id(), match);\n\t\tif (trigger) {\n\t\t\tthis._onChange.fire({ forceUpdateModel: true });\n\t\t}\n\t}\n\n\tprivate removeMatch(match: Match) {\n\t\tif (match instanceof MatchInNotebook) {\n\t\t\tmatch.cellParent.remove(match);\n\t\t\tif (match.cellParent.matches().length === 0) {\n\t\t\t\tthis._cellMatches.delete(match.cellParent.id);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._textMatches.delete(match.id());\n\t\t}\n\t\tif (this.isMatchSelected(match)) {\n\t\t\tthis.setSelectedMatch(null);\n\t\t\tthis._findMatchDecorationModel?.clearCurrentFindMatchDecoration();\n\t\t} else {\n\t\t\tthis.updateHighlights();\n\t\t}\n\t\tif (match instanceof MatchInNotebook) {\n\t\t\tthis.setNotebookFindMatchDecorationsUsingCellMatches(\n\t\t\t\tthis.cellMatches(),\n\t\t\t);\n\t\t}\n\t}\n\n\tasync resolveFileStat(fileService: IFileService): Promise<void> {\n\t\tthis._fileStat = await fileService\n\t\t\t.stat(this.resource)\n\t\t\t.catch(() => undefined);\n\t}\n\n\tpublic get fileStat(): IFileStatWithPartialMetadata | undefined {\n\t\treturn this._fileStat;\n\t}\n\n\tpublic set fileStat(stat: IFileStatWithPartialMetadata | undefined) {\n\t\tthis._fileStat = stat;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.setSelectedMatch(null);\n\t\tthis.unbindModel();\n\t\tthis.unbindNotebookEditorWidget();\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n\n\thasOnlyReadOnlyMatches(): boolean {\n\t\treturn this.matches().every(\n\t\t\t(match) => match instanceof MatchInNotebook && match.isReadonly(),\n\t\t);\n\t}\n\n\t// #region strictly notebook methods\n\tbindNotebookEditorWidget(widget: NotebookEditorWidget) {\n\t\tif (this._notebookEditorWidget === widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._notebookEditorWidget = widget;\n\n\t\tthis._editorWidgetListener =\n\t\t\tthis._notebookEditorWidget.textModel?.onDidChangeContent((e) => {\n\t\t\t\tif (\n\t\t\t\t\t!e.rawEvents.some(\n\t\t\t\t\t\t(event) =>\n\t\t\t\t\t\t\tevent.kind ===\n\t\t\t\t\t\t\t\tNotebookCellsChangeType.ChangeCellContent ||\n\t\t\t\t\t\t\tevent.kind === NotebookCellsChangeType.ModelChange,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._notebookUpdateScheduler.schedule();\n\t\t\t}) ?? null;\n\t\tthis._addNotebookHighlights();\n\t}\n\n\tunbindNotebookEditorWidget(widget?: NotebookEditorWidget) {\n\t\tif (widget && this._notebookEditorWidget !== widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._notebookEditorWidget) {\n\t\t\tthis._notebookUpdateScheduler.cancel();\n\t\t\tthis._editorWidgetListener?.dispose();\n\t\t}\n\t\tthis._removeNotebookHighlights();\n\t\tthis._notebookEditorWidget = null;\n\t}\n\n\tupdateNotebookHighlights(): void {\n\t\tif (this.parent().showHighlights) {\n\t\t\tthis._addNotebookHighlights();\n\t\t\tthis.setNotebookFindMatchDecorationsUsingCellMatches(\n\t\t\t\tArray.from(this._cellMatches.values()),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._removeNotebookHighlights();\n\t\t}\n\t}\n\n\tprivate _addNotebookHighlights(): void {\n\t\tif (!this._notebookEditorWidget) {\n\t\t\treturn;\n\t\t}\n\t\tthis._findMatchDecorationModel?.stopWebviewFind();\n\t\tthis._findMatchDecorationModel?.dispose();\n\t\tthis._findMatchDecorationModel = new FindMatchDecorationModel(\n\t\t\tthis._notebookEditorWidget,\n\t\t\tthis.searchInstanceID,\n\t\t);\n\t\tif (this._selectedMatch instanceof MatchInNotebook) {\n\t\t\tthis.highlightCurrentFindMatchDecoration(this._selectedMatch);\n\t\t}\n\t}\n\n\tprivate _removeNotebookHighlights(): void {\n\t\tif (this._findMatchDecorationModel) {\n\t\t\tthis._findMatchDecorationModel?.stopWebviewFind();\n\t\t\tthis._findMatchDecorationModel?.dispose();\n\t\t\tthis._findMatchDecorationModel = undefined;\n\t\t}\n\t}\n\n\tprivate updateNotebookMatches(\n\t\tmatches: CellFindMatchWithIndex[],\n\t\tmodelChange: boolean,\n\t): void {\n\t\tif (!this._notebookEditorWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldCellMatches = new Map<string, CellMatch>(this._cellMatches);\n\t\tif (\n\t\t\tthis._notebookEditorWidget.getId() !==\n\t\t\tthis._lastEditorWidgetIdForUpdate\n\t\t) {\n\t\t\tthis._cellMatches.clear();\n\t\t\tthis._lastEditorWidgetIdForUpdate =\n\t\t\t\tthis._notebookEditorWidget.getId();\n\t\t}\n\t\tmatches.forEach((match) => {\n\t\t\tlet existingCell = this._cellMatches.get(match.cell.id);\n\t\t\tif (this._notebookEditorWidget && !existingCell) {\n\t\t\t\tconst index = this._notebookEditorWidget.getCellIndex(\n\t\t\t\t\tmatch.cell,\n\t\t\t\t);\n\t\t\t\tconst existingRawCell = oldCellMatches.get(\n\t\t\t\t\t`${rawCellPrefix}${index}`,\n\t\t\t\t);\n\t\t\t\tif (existingRawCell) {\n\t\t\t\t\texistingRawCell.setCellModel(match.cell);\n\t\t\t\t\texistingRawCell.clearAllMatches();\n\t\t\t\t\texistingCell = existingRawCell;\n\t\t\t\t}\n\t\t\t}\n\t\t\texistingCell?.clearAllMatches();\n\t\t\tconst cell =\n\t\t\t\texistingCell ?? new CellMatch(this, match.cell, match.index);\n\t\t\tcell.addContentMatches(\n\t\t\t\tcontentMatchesToTextSearchMatches(\n\t\t\t\t\tmatch.contentMatches,\n\t\t\t\t\tmatch.cell,\n\t\t\t\t),\n\t\t\t);\n\t\t\tcell.addWebviewMatches(\n\t\t\t\twebviewMatchesToTextSearchMatches(match.webviewMatches),\n\t\t\t);\n\t\t\tthis._cellMatches.set(cell.id, cell);\n\t\t});\n\n\t\tthis._findMatchDecorationModel?.setAllFindMatchesDecorations(matches);\n\t\tif (this._selectedMatch instanceof MatchInNotebook) {\n\t\t\tthis.highlightCurrentFindMatchDecoration(this._selectedMatch);\n\t\t}\n\t\tthis._onChange.fire({ forceUpdateModel: modelChange });\n\t}\n\n\tprivate setNotebookFindMatchDecorationsUsingCellMatches(\n\t\tcells: CellMatch[],\n\t): void {\n\t\tif (!this._findMatchDecorationModel) {\n\t\t\treturn;\n\t\t}\n\t\tconst cellFindMatch = coalesce(\n\t\t\tcells.map((cell): CellFindMatchModel | undefined => {\n\t\t\t\tconst webviewMatches: CellWebviewFindMatch[] = coalesce(\n\t\t\t\t\tcell.webviewMatches.map(\n\t\t\t\t\t\t(match): CellWebviewFindMatch | undefined => {\n\t\t\t\t\t\t\tif (!match.webviewIndex) {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tindex: match.webviewIndex,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (!cell.cell) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst findMatches: FindMatch[] = cell.contentMatches.map(\n\t\t\t\t\t(match) => {\n\t\t\t\t\t\treturn new FindMatch(match.range(), [match.text()]);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\treturn new CellFindMatchModel(\n\t\t\t\t\tcell.cell,\n\t\t\t\t\tcell.cellIndex,\n\t\t\t\t\tfindMatches,\n\t\t\t\t\twebviewMatches,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\ttry {\n\t\t\tthis._findMatchDecorationModel.setAllFindMatchesDecorations(\n\t\t\t\tcellFindMatch,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// no op, might happen due to bugs related to cell output regex search\n\t\t}\n\t}\n\tasync updateMatchesForEditorWidget(): Promise<void> {\n\t\tif (!this._notebookEditorWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._textMatches = new Map<string, Match>();\n\n\t\tconst wordSeparators =\n\t\t\tthis._query.isWordMatch && this._query.wordSeparators\n\t\t\t\t? this._query.wordSeparators\n\t\t\t\t: null;\n\t\tconst allMatches = await this._notebookEditorWidget.find(\n\t\t\tthis._query.pattern,\n\t\t\t{\n\t\t\t\tregex: this._query.isRegExp,\n\t\t\t\twholeWord: this._query.isWordMatch,\n\t\t\t\tcaseSensitive: this._query.isCaseSensitive,\n\t\t\t\twordSeparators: wordSeparators ?? undefined,\n\t\t\t\tincludeMarkupInput:\n\t\t\t\t\tthis._query.notebookInfo?.isInNotebookMarkdownInput,\n\t\t\t\tincludeMarkupPreview:\n\t\t\t\t\tthis._query.notebookInfo?.isInNotebookMarkdownPreview,\n\t\t\t\tincludeCodeInput:\n\t\t\t\t\tthis._query.notebookInfo?.isInNotebookCellInput,\n\t\t\t\tincludeOutput: this._query.notebookInfo?.isInNotebookCellOutput,\n\t\t\t},\n\t\t\tCancellationToken.None,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tthis.searchInstanceID,\n\t\t);\n\n\t\tthis.updateNotebookMatches(allMatches, true);\n\t}\n\n\tpublic async showMatch(match: MatchInNotebook) {\n\t\tconst offset = await this.highlightCurrentFindMatchDecoration(match);\n\t\tthis.setSelectedMatch(match);\n\t\tthis.revealCellRange(match, offset);\n\t}\n\n\tprivate async highlightCurrentFindMatchDecoration(\n\t\tmatch: MatchInNotebook,\n\t): Promise<number | null> {\n\t\tif (!this._findMatchDecorationModel || !match.cell) {\n\t\t\t// match cell should never be a CellSearchModel if the notebook is open\n\t\t\treturn null;\n\t\t}\n\t\tif (match.webviewIndex === undefined) {\n\t\t\treturn this._findMatchDecorationModel.highlightCurrentFindMatchDecorationInCell(\n\t\t\t\tmatch.cell,\n\t\t\t\tmatch.range(),\n\t\t\t);\n\t\t} else {\n\t\t\treturn this._findMatchDecorationModel.highlightCurrentFindMatchDecorationInWebview(\n\t\t\t\tmatch.cell,\n\t\t\t\tmatch.webviewIndex,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate revealCellRange(\n\t\tmatch: MatchInNotebook,\n\t\toutputOffset: number | null,\n\t) {\n\t\tif (!this._notebookEditorWidget || !match.cell) {\n\t\t\t// match cell should never be a CellSearchModel if the notebook is open\n\t\t\treturn;\n\t\t}\n\t\tif (match.webviewIndex !== undefined) {\n\t\t\tconst index = this._notebookEditorWidget.getCellIndex(match.cell);\n\t\t\tif (index !== undefined) {\n\t\t\t\tthis._notebookEditorWidget.revealCellOffsetInCenter(\n\t\t\t\t\tmatch.cell,\n\t\t\t\t\toutputOffset ?? 0,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tmatch.cell.updateEditState(\n\t\t\t\tmatch.cell.getEditState(),\n\t\t\t\t\"focusNotebookCell\",\n\t\t\t);\n\t\t\tthis._notebookEditorWidget.setCellEditorSelection(\n\t\t\t\tmatch.cell,\n\t\t\t\tmatch.range(),\n\t\t\t);\n\t\t\tthis._notebookEditorWidget.revealRangeInCenterIfOutsideViewportAsync(\n\t\t\t\tmatch.cell,\n\t\t\t\tmatch.range(),\n\t\t\t);\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nexport interface IChangeEvent {\n\telements: FileMatch[];\n\tadded?: boolean;\n\tremoved?: boolean;\n\tclearingAll?: boolean;\n}\n\nexport class FolderMatch extends Disposable {\n\tprotected _onChange = this._register(new Emitter<IChangeEvent>());\n\treadonly onChange: Event<IChangeEvent> = this._onChange.event;\n\n\tprivate _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprotected _fileMatches: ResourceMap<FileMatch>;\n\tprotected _folderMatches: ResourceMap<FolderMatchWithResource>;\n\tprotected _folderMatchesMap: TernarySearchTree<\n\t\tURI,\n\t\tFolderMatchWithResource\n\t>;\n\tprotected _unDisposedFileMatches: ResourceMap<FileMatch>;\n\tprotected _unDisposedFolderMatches: ResourceMap<FolderMatchWithResource>;\n\tprivate _replacingAll = false;\n\tprivate _name: Lazy<string>;\n\n\tconstructor(\n\t\tprotected _resource: URI | null,\n\t\tprivate _id: string,\n\t\tprotected _index: number,\n\t\tprotected _query: ITextQuery,\n\t\tprivate _parent: SearchResult | FolderMatch,\n\t\tprivate _searchResult: SearchResult,\n\t\tprivate _closestRoot: FolderMatchWorkspaceRoot | null,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@IInstantiationService\n\t\tprotected readonly instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUriIdentityService\n\t\tprotected readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t\tthis._fileMatches = new ResourceMap<FileMatch>();\n\t\tthis._folderMatches = new ResourceMap<FolderMatchWithResource>();\n\t\tthis._folderMatchesMap =\n\t\t\tTernarySearchTree.forUris<FolderMatchWithResource>((key) =>\n\t\t\t\tthis.uriIdentityService.extUri.ignorePathCasing(key),\n\t\t\t);\n\t\tthis._unDisposedFileMatches = new ResourceMap<FileMatch>();\n\t\tthis._unDisposedFolderMatches =\n\t\t\tnew ResourceMap<FolderMatchWithResource>();\n\t\tthis._name = new Lazy(() =>\n\t\t\tthis.resource\n\t\t\t\t? labelService.getUriBasenameLabel(this.resource)\n\t\t\t\t: \"\",\n\t\t);\n\t}\n\n\tget searchModel(): SearchModel {\n\t\treturn this._searchResult.searchModel;\n\t}\n\n\tget showHighlights(): boolean {\n\t\treturn this._parent.showHighlights;\n\t}\n\n\tget closestRoot(): FolderMatchWorkspaceRoot | null {\n\t\treturn this._closestRoot;\n\t}\n\n\tset replacingAll(b: boolean) {\n\t\tthis._replacingAll = b;\n\t}\n\n\tid(): string {\n\t\treturn this._id;\n\t}\n\n\tget resource(): URI | null {\n\t\treturn this._resource;\n\t}\n\n\tindex(): number {\n\t\treturn this._index;\n\t}\n\n\tname(): string {\n\t\treturn this._name.value;\n\t}\n\n\tparent(): SearchResult | FolderMatch {\n\t\treturn this._parent;\n\t}\n\n\tbindModel(model: ITextModel): void {\n\t\tconst fileMatch = this._fileMatches.get(model.uri);\n\n\t\tif (fileMatch) {\n\t\t\tfileMatch.bindModel(model);\n\t\t} else {\n\t\t\tconst folderMatch = this.getFolderMatch(model.uri);\n\t\t\tconst match = folderMatch?.getDownstreamFileMatch(model.uri);\n\t\t\tmatch?.bindModel(model);\n\t\t}\n\t}\n\n\tasync bindNotebookEditorWidget(\n\t\teditor: NotebookEditorWidget,\n\t\tresource: URI,\n\t) {\n\t\tconst fileMatch = this._fileMatches.get(resource);\n\n\t\tif (fileMatch) {\n\t\t\tfileMatch.bindNotebookEditorWidget(editor);\n\t\t\tawait fileMatch.updateMatchesForEditorWidget();\n\t\t} else {\n\t\t\tconst folderMatches = this.folderMatchesIterator();\n\t\t\tfor (const elem of folderMatches) {\n\t\t\t\tawait elem.bindNotebookEditorWidget(editor, resource);\n\t\t\t}\n\t\t}\n\t}\n\n\tunbindNotebookEditorWidget(editor: NotebookEditorWidget, resource: URI) {\n\t\tconst fileMatch = this._fileMatches.get(resource);\n\n\t\tif (fileMatch) {\n\t\t\tfileMatch.unbindNotebookEditorWidget(editor);\n\t\t} else {\n\t\t\tconst folderMatches = this.folderMatchesIterator();\n\t\t\tfor (const elem of folderMatches) {\n\t\t\t\telem.unbindNotebookEditorWidget(editor, resource);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic createIntermediateFolderMatch(\n\t\tresource: URI,\n\t\tid: string,\n\t\tindex: number,\n\t\tquery: ITextQuery,\n\t\tbaseWorkspaceFolder: FolderMatchWorkspaceRoot,\n\t): FolderMatchWithResource {\n\t\tconst folderMatch = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tFolderMatchWithResource,\n\t\t\t\tresource,\n\t\t\t\tid,\n\t\t\t\tindex,\n\t\t\t\tquery,\n\t\t\t\tthis,\n\t\t\t\tthis._searchResult,\n\t\t\t\tbaseWorkspaceFolder,\n\t\t\t),\n\t\t);\n\t\tthis.configureIntermediateMatch(folderMatch);\n\t\tthis.doAddFolder(folderMatch);\n\t\treturn folderMatch;\n\t}\n\n\tpublic configureIntermediateMatch(folderMatch: FolderMatchWithResource) {\n\t\tconst disposable = folderMatch.onChange((event) =>\n\t\t\tthis.onFolderChange(folderMatch, event),\n\t\t);\n\t\tthis._register(folderMatch.onDispose(() => disposable.dispose()));\n\t}\n\n\tclear(clearingAll = false): void {\n\t\tconst changed: FileMatch[] = this.allDownstreamFileMatches();\n\t\tthis.disposeMatches();\n\t\tthis._onChange.fire({\n\t\t\telements: changed,\n\t\t\tremoved: true,\n\t\t\tadded: false,\n\t\t\tclearingAll,\n\t\t});\n\t}\n\n\tremove(\n\t\tmatches:\n\t\t\t| FileMatch\n\t\t\t| FolderMatchWithResource\n\t\t\t| (FileMatch | FolderMatchWithResource)[],\n\t): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\t\tconst allMatches = getFileMatches(matches);\n\t\tthis.doRemoveFile(allMatches);\n\t}\n\n\tasync replace(match: FileMatch): Promise<any> {\n\t\treturn this.replaceService.replace([match]).then(() => {\n\t\t\tthis.doRemoveFile([match], true, true, true);\n\t\t});\n\t}\n\n\treplaceAll(): Promise<any> {\n\t\tconst matches = this.matches();\n\t\treturn this.batchReplace(matches);\n\t}\n\n\tmatches(): (FileMatch | FolderMatchWithResource)[] {\n\t\treturn [...this.fileMatchesIterator(), ...this.folderMatchesIterator()];\n\t}\n\n\tfileMatchesIterator(): IterableIterator<FileMatch> {\n\t\treturn this._fileMatches.values();\n\t}\n\n\tfolderMatchesIterator(): IterableIterator<FolderMatchWithResource> {\n\t\treturn this._folderMatches.values();\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.fileCount() + this.folderCount() === 0;\n\t}\n\n\tgetDownstreamFileMatch(uri: URI): FileMatch | null {\n\t\tconst directChildFileMatch = this._fileMatches.get(uri);\n\t\tif (directChildFileMatch) {\n\t\t\treturn directChildFileMatch;\n\t\t}\n\n\t\tconst folderMatch = this.getFolderMatch(uri);\n\t\tconst match = folderMatch?.getDownstreamFileMatch(uri);\n\t\tif (match) {\n\t\t\treturn match;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tallDownstreamFileMatches(): FileMatch[] {\n\t\tlet recursiveChildren: FileMatch[] = [];\n\t\tconst iterator = this.folderMatchesIterator();\n\t\tfor (const elem of iterator) {\n\t\t\trecursiveChildren = recursiveChildren.concat(\n\t\t\t\telem.allDownstreamFileMatches(),\n\t\t\t);\n\t\t}\n\n\t\treturn [...this.fileMatchesIterator(), ...recursiveChildren];\n\t}\n\n\tprivate fileCount(): number {\n\t\treturn this._fileMatches.size;\n\t}\n\n\tprivate folderCount(): number {\n\t\treturn this._folderMatches.size;\n\t}\n\n\tcount(): number {\n\t\treturn this.fileCount() + this.folderCount();\n\t}\n\n\trecursiveFileCount(): number {\n\t\treturn this.allDownstreamFileMatches().length;\n\t}\n\n\trecursiveMatchCount(): number {\n\t\treturn this.allDownstreamFileMatches().reduce<number>(\n\t\t\t(prev, match) => prev + match.count(),\n\t\t\t0,\n\t\t);\n\t}\n\n\tget query(): ITextQuery | null {\n\t\treturn this._query;\n\t}\n\n\taddFileMatch(\n\t\traw: IFileMatch[],\n\t\tsilent: boolean,\n\t\tsearchInstanceID: string,\n\t\tisAiContributed: boolean,\n\t): void {\n\t\t// when adding a fileMatch that has intermediate directories\n\t\tconst added: FileMatch[] = [];\n\t\tconst updated: FileMatch[] = [];\n\n\t\traw.forEach((rawFileMatch) => {\n\t\t\tconst existingFileMatch = this.getDownstreamFileMatch(\n\t\t\t\trawFileMatch.resource,\n\t\t\t);\n\t\t\tif (existingFileMatch) {\n\t\t\t\tif (rawFileMatch.results) {\n\t\t\t\t\trawFileMatch.results.filter(resultIsMatch).forEach((m) => {\n\t\t\t\t\t\ttextSearchResultToMatches(\n\t\t\t\t\t\t\tm,\n\t\t\t\t\t\t\texistingFileMatch,\n\t\t\t\t\t\t\tisAiContributed,\n\t\t\t\t\t\t).forEach((m) => existingFileMatch.add(m));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// add cell matches\n\t\t\t\tif (\n\t\t\t\t\tisINotebookFileMatchWithModel(rawFileMatch) ||\n\t\t\t\t\tisINotebookFileMatchNoModel(rawFileMatch)\n\t\t\t\t) {\n\t\t\t\t\trawFileMatch.cellResults?.forEach((rawCellMatch) => {\n\t\t\t\t\t\tconst existingCellMatch =\n\t\t\t\t\t\t\texistingFileMatch.getCellMatch(\n\t\t\t\t\t\t\t\tgetIDFromINotebookCellMatch(rawCellMatch),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (existingCellMatch) {\n\t\t\t\t\t\t\texistingCellMatch.addContentMatches(\n\t\t\t\t\t\t\t\trawCellMatch.contentResults,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\texistingCellMatch.addWebviewMatches(\n\t\t\t\t\t\t\t\trawCellMatch.webviewResults,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\texistingFileMatch.addCellMatch(rawCellMatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tupdated.push(existingFileMatch);\n\n\t\t\t\tif (rawFileMatch.results && rawFileMatch.results.length > 0) {\n\t\t\t\t\texistingFileMatch.addContext(rawFileMatch.results);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tthis instanceof FolderMatchWorkspaceRoot ||\n\t\t\t\tthis instanceof FolderMatchNoRoot\n\t\t\t) {\n\t\t\t\tconst fileMatch = this.createAndConfigureFileMatch(\n\t\t\t\t\trawFileMatch,\n\t\t\t\t\tsearchInstanceID,\n\t\t\t\t);\n\t\t\t\tadded.push(fileMatch);\n\t\t\t}\n\t\t});\n\n\t\tconst elements = [...added, ...updated];\n\t\tif (!silent && elements.length) {\n\t\t\tthis._onChange.fire({ elements, added: !!added.length });\n\t\t}\n\t}\n\n\tdoAddFile(fileMatch: FileMatch): void {\n\t\tthis._fileMatches.set(fileMatch.resource, fileMatch);\n\t\tif (this._unDisposedFileMatches.has(fileMatch.resource)) {\n\t\t\tthis._unDisposedFileMatches.delete(fileMatch.resource);\n\t\t}\n\t}\n\n\thasOnlyReadOnlyMatches(): boolean {\n\t\treturn Array.from(this._fileMatches.values()).every((fm) =>\n\t\t\tfm.hasOnlyReadOnlyMatches(),\n\t\t);\n\t}\n\n\tprotected uriHasParent(parent: URI, child: URI) {\n\t\treturn (\n\t\t\tthis.uriIdentityService.extUri.isEqualOrParent(child, parent) &&\n\t\t\t!this.uriIdentityService.extUri.isEqual(child, parent)\n\t\t);\n\t}\n\n\tprivate isInParentChain(folderMatch: FolderMatchWithResource) {\n\t\tlet matchItem: FolderMatch | SearchResult = this;\n\t\twhile (matchItem instanceof FolderMatch) {\n\t\t\tif (matchItem.id() === folderMatch.id()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tmatchItem = matchItem.parent();\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getFolderMatch(resource: URI): FolderMatchWithResource | undefined {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(resource);\n\t\treturn folderMatch;\n\t}\n\n\tdoAddFolder(folderMatch: FolderMatchWithResource) {\n\t\tif (\n\t\t\tthis instanceof FolderMatchWithResource &&\n\t\t\t!this.uriHasParent(this.resource, folderMatch.resource)\n\t\t) {\n\t\t\tthrow Error(\n\t\t\t\t`${folderMatch.resource} does not belong as a child of ${this.resource}`,\n\t\t\t);\n\t\t} else if (this.isInParentChain(folderMatch)) {\n\t\t\tthrow Error(\n\t\t\t\t`${folderMatch.resource} is a parent of ${this.resource}`,\n\t\t\t);\n\t\t}\n\n\t\tthis._folderMatches.set(folderMatch.resource, folderMatch);\n\t\tthis._folderMatchesMap.set(folderMatch.resource, folderMatch);\n\t\tif (this._unDisposedFolderMatches.has(folderMatch.resource)) {\n\t\t\tthis._unDisposedFolderMatches.delete(folderMatch.resource);\n\t\t}\n\t}\n\n\tprivate async batchReplace(\n\t\tmatches: (FileMatch | FolderMatchWithResource)[],\n\t): Promise<any> {\n\t\tconst allMatches = getFileMatches(matches);\n\n\t\tawait this.replaceService.replace(allMatches);\n\t\tthis.doRemoveFile(allMatches, true, true, true);\n\t}\n\n\tpublic onFileChange(fileMatch: FileMatch, removed = false): void {\n\t\tlet added = false;\n\t\tif (!this._fileMatches.has(fileMatch.resource)) {\n\t\t\tthis.doAddFile(fileMatch);\n\t\t\tadded = true;\n\t\t}\n\t\tif (fileMatch.count() === 0) {\n\t\t\tthis.doRemoveFile([fileMatch], false, false);\n\t\t\tadded = false;\n\t\t\tremoved = true;\n\t\t}\n\t\tif (!this._replacingAll) {\n\t\t\tthis._onChange.fire({\n\t\t\t\telements: [fileMatch],\n\t\t\t\tadded: added,\n\t\t\t\tremoved: removed,\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic onFolderChange(\n\t\tfolderMatch: FolderMatchWithResource,\n\t\tevent: IChangeEvent,\n\t): void {\n\t\tif (!this._folderMatches.has(folderMatch.resource)) {\n\t\t\tthis.doAddFolder(folderMatch);\n\t\t}\n\t\tif (folderMatch.isEmpty()) {\n\t\t\tthis._folderMatches.delete(folderMatch.resource);\n\t\t\tfolderMatch.dispose();\n\t\t}\n\n\t\tthis._onChange.fire(event);\n\t}\n\n\tprivate doRemoveFile(\n\t\tfileMatches: FileMatch[],\n\t\tdispose = true,\n\t\ttrigger = true,\n\t\tkeepReadonly = false,\n\t): void {\n\t\tconst removed = [];\n\t\tfor (const match of fileMatches as FileMatch[]) {\n\t\t\tif (this._fileMatches.get(match.resource)) {\n\t\t\t\tif (keepReadonly && match.hasReadonlyMatches()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._fileMatches.delete(match.resource);\n\t\t\t\tif (dispose) {\n\t\t\t\t\tmatch.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tthis._unDisposedFileMatches.set(match.resource, match);\n\t\t\t\t}\n\t\t\t\tremoved.push(match);\n\t\t\t} else {\n\t\t\t\tconst folder = this.getFolderMatch(match.resource);\n\t\t\t\tif (folder) {\n\t\t\t\t\tfolder.doRemoveFile([match], dispose, trigger);\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error(\n\t\t\t\t\t\t`FileMatch ${match.resource} is not located within FolderMatch ${this.resource}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (trigger) {\n\t\t\tthis._onChange.fire({ elements: removed, removed: true });\n\t\t}\n\t}\n\n\tprivate disposeMatches(): void {\n\t\t[...this._fileMatches.values()].forEach((fileMatch: FileMatch) =>\n\t\t\tfileMatch.dispose(),\n\t\t);\n\t\t[...this._folderMatches.values()].forEach((folderMatch: FolderMatch) =>\n\t\t\tfolderMatch.disposeMatches(),\n\t\t);\n\t\t[...this._unDisposedFileMatches.values()].forEach(\n\t\t\t(fileMatch: FileMatch) => fileMatch.dispose(),\n\t\t);\n\t\t[...this._unDisposedFolderMatches.values()].forEach(\n\t\t\t(folderMatch: FolderMatch) => folderMatch.disposeMatches(),\n\t\t);\n\t\tthis._fileMatches.clear();\n\t\tthis._folderMatches.clear();\n\t\tthis._unDisposedFileMatches.clear();\n\t\tthis._unDisposedFolderMatches.clear();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposeMatches();\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\nexport class FolderMatchWithResource extends FolderMatch {\n\tprotected _normalizedResource: Lazy<URI>;\n\n\tconstructor(\n\t\t_resource: URI,\n\t\t_id: string,\n\t\t_index: number,\n\t\t_query: ITextQuery,\n\t\t_parent: SearchResult | FolderMatch,\n\t\t_searchResult: SearchResult,\n\t\t_closestRoot: FolderMatchWorkspaceRoot | null,\n\t\t@IReplaceService replaceService: IReplaceService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\t_resource,\n\t\t\t_id,\n\t\t\t_index,\n\t\t\t_query,\n\t\t\t_parent,\n\t\t\t_searchResult,\n\t\t\t_closestRoot,\n\t\t\treplaceService,\n\t\t\tinstantiationService,\n\t\t\tlabelService,\n\t\t\turiIdentityService,\n\t\t);\n\t\tthis._normalizedResource = new Lazy(() =>\n\t\t\tthis.uriIdentityService.extUri.removeTrailingPathSeparator(\n\t\t\t\tthis.uriIdentityService.extUri.normalizePath(this.resource),\n\t\t\t),\n\t\t);\n\t}\n\n\toverride get resource(): URI {\n\t\treturn this._resource!;\n\t}\n\n\tget normalizedResource(): URI {\n\t\treturn this._normalizedResource.value;\n\t}\n}\n\n/**\n * FolderMatchWorkspaceRoot => folder for workspace root\n */\nexport class FolderMatchWorkspaceRoot extends FolderMatchWithResource {\n\tconstructor(\n\t\t_resource: URI,\n\t\t_id: string,\n\t\t_index: number,\n\t\t_query: ITextQuery,\n\t\t_parent: SearchResult,\n\t\tprivate readonly _ai: boolean,\n\t\t@IReplaceService replaceService: IReplaceService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\t_resource,\n\t\t\t_id,\n\t\t\t_index,\n\t\t\t_query,\n\t\t\t_parent,\n\t\t\t_parent,\n\t\t\tnull,\n\t\t\treplaceService,\n\t\t\tinstantiationService,\n\t\t\tlabelService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tprivate normalizedUriParent(uri: URI): URI {\n\t\treturn this.uriIdentityService.extUri.normalizePath(\n\t\t\tthis.uriIdentityService.extUri.dirname(uri),\n\t\t);\n\t}\n\n\tprivate uriEquals(uri1: URI, ur2: URI): boolean {\n\t\treturn this.uriIdentityService.extUri.isEqual(uri1, ur2);\n\t}\n\n\tprivate createFileMatch(\n\t\tquery: IPatternInfo,\n\t\tpreviewOptions: ITextSearchPreviewOptions | undefined,\n\t\tmaxResults: number | undefined,\n\t\tparent: FolderMatch,\n\t\trawFileMatch: IFileMatch,\n\t\tclosestRoot: FolderMatchWorkspaceRoot | null,\n\t\tsearchInstanceID: string,\n\t): FileMatch {\n\t\tconst fileMatch = this.instantiationService.createInstance(\n\t\t\tFileMatch,\n\t\t\tquery,\n\t\t\tpreviewOptions,\n\t\t\tmaxResults,\n\t\t\tparent,\n\t\t\trawFileMatch,\n\t\t\tclosestRoot,\n\t\t\tsearchInstanceID,\n\t\t);\n\t\tfileMatch.createMatches(this._ai);\n\t\tparent.doAddFile(fileMatch);\n\t\tconst disposable = fileMatch.onChange(({ didRemove }) =>\n\t\t\tparent.onFileChange(fileMatch, didRemove),\n\t\t);\n\t\tthis._register(fileMatch.onDispose(() => disposable.dispose()));\n\t\treturn fileMatch;\n\t}\n\n\tcreateAndConfigureFileMatch(\n\t\trawFileMatch: IFileMatch<URI>,\n\t\tsearchInstanceID: string,\n\t): FileMatch {\n\t\tif (!this.uriHasParent(this.resource, rawFileMatch.resource)) {\n\t\t\tthrow Error(\n\t\t\t\t`${rawFileMatch.resource} is not a descendant of ${this.resource}`,\n\t\t\t);\n\t\t}\n\n\t\tconst fileMatchParentParts: URI[] = [];\n\t\tlet uri = this.normalizedUriParent(rawFileMatch.resource);\n\n\t\twhile (!this.uriEquals(this.normalizedResource, uri)) {\n\t\t\tfileMatchParentParts.unshift(uri);\n\t\t\tconst prevUri = uri;\n\t\t\turi = this.uriIdentityService.extUri.removeTrailingPathSeparator(\n\t\t\t\tthis.normalizedUriParent(uri),\n\t\t\t);\n\t\t\tif (this.uriEquals(prevUri, uri)) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t`${rawFileMatch.resource} is not correctly configured as a child of ${this.normalizedResource}`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst root = this.closestRoot ?? this;\n\t\tlet parent: FolderMatch = this;\n\t\tfor (let i = 0; i < fileMatchParentParts.length; i++) {\n\t\t\tlet folderMatch: FolderMatchWithResource | undefined =\n\t\t\t\tparent.getFolderMatch(fileMatchParentParts[i]);\n\t\t\tif (!folderMatch) {\n\t\t\t\tfolderMatch = parent.createIntermediateFolderMatch(\n\t\t\t\t\tfileMatchParentParts[i],\n\t\t\t\t\tfileMatchParentParts[i].toString(),\n\t\t\t\t\t-1,\n\t\t\t\t\tthis._query,\n\t\t\t\t\troot,\n\t\t\t\t);\n\t\t\t}\n\t\t\tparent = folderMatch;\n\t\t}\n\n\t\treturn this.createFileMatch(\n\t\t\tthis._query.contentPattern,\n\t\t\tthis._query.previewOptions,\n\t\t\tthis._query.maxResults,\n\t\t\tparent,\n\t\t\trawFileMatch,\n\t\t\troot,\n\t\t\tsearchInstanceID,\n\t\t);\n\t}\n}\n\n/**\n * BaseFolderMatch => optional resource (\"other files\" node)\n * FolderMatch => required resource (normal folder node)\n */\nexport class FolderMatchNoRoot extends FolderMatch {\n\tconstructor(\n\t\t_id: string,\n\t\t_index: number,\n\t\t_query: ITextQuery,\n\t\t_parent: SearchResult,\n\t\t@IReplaceService replaceService: IReplaceService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tnull,\n\t\t\t_id,\n\t\t\t_index,\n\t\t\t_query,\n\t\t\t_parent,\n\t\t\t_parent,\n\t\t\tnull,\n\t\t\treplaceService,\n\t\t\tinstantiationService,\n\t\t\tlabelService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tcreateAndConfigureFileMatch(\n\t\trawFileMatch: IFileMatch,\n\t\tsearchInstanceID: string,\n\t): FileMatch {\n\t\tconst fileMatch = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tFileMatch,\n\t\t\t\tthis._query.contentPattern,\n\t\t\t\tthis._query.previewOptions,\n\t\t\t\tthis._query.maxResults,\n\t\t\t\tthis,\n\t\t\t\trawFileMatch,\n\t\t\t\tnull,\n\t\t\t\tsearchInstanceID,\n\t\t\t),\n\t\t);\n\t\tfileMatch.createMatches(false); // currently, no support for AI results in out-of-workspace files\n\t\tthis.doAddFile(fileMatch);\n\t\tconst disposable = fileMatch.onChange(({ didRemove }) =>\n\t\t\tthis.onFileChange(fileMatch, didRemove),\n\t\t);\n\t\tthis._register(fileMatch.onDispose(() => disposable.dispose()));\n\t\treturn fileMatch;\n\t}\n}\n\nlet elemAIndex = -1;\nlet elemBIndex = -1;\n/**\n * Compares instances of the same match type. Different match types should not be siblings\n * and their sort order is undefined.\n */\nexport function searchMatchComparer(\n\telementA: RenderableMatch,\n\telementB: RenderableMatch,\n\tsortOrder: SearchSortOrder = SearchSortOrder.Default,\n): number {\n\tif (elementA instanceof FileMatch && elementB instanceof FolderMatch) {\n\t\treturn 1;\n\t}\n\n\tif (elementB instanceof FileMatch && elementA instanceof FolderMatch) {\n\t\treturn -1;\n\t}\n\n\tif (elementA instanceof FolderMatch && elementB instanceof FolderMatch) {\n\t\telemAIndex = elementA.index();\n\t\telemBIndex = elementB.index();\n\t\tif (elemAIndex !== -1 && elemBIndex !== -1) {\n\t\t\treturn elemAIndex - elemBIndex;\n\t\t}\n\n\t\tswitch (sortOrder) {\n\t\t\tcase SearchSortOrder.CountDescending:\n\t\t\t\treturn elementB.count() - elementA.count();\n\t\t\tcase SearchSortOrder.CountAscending:\n\t\t\t\treturn elementA.count() - elementB.count();\n\t\t\tcase SearchSortOrder.Type:\n\t\t\t\treturn compareFileExtensions(elementA.name(), elementB.name());\n\t\t\tcase SearchSortOrder.FileNames:\n\t\t\t\treturn compareFileNames(elementA.name(), elementB.name());\n\t\t\t// Fall through otherwise\n\t\t\tdefault:\n\t\t\t\tif (!elementA.resource || !elementB.resource) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\tcomparePaths(\n\t\t\t\t\t\telementA.resource.fsPath,\n\t\t\t\t\t\telementB.resource.fsPath,\n\t\t\t\t\t) || compareFileNames(elementA.name(), elementB.name())\n\t\t\t\t);\n\t\t}\n\t}\n\n\tif (elementA instanceof FileMatch && elementB instanceof FileMatch) {\n\t\tswitch (sortOrder) {\n\t\t\tcase SearchSortOrder.CountDescending:\n\t\t\t\treturn elementB.count() - elementA.count();\n\t\t\tcase SearchSortOrder.CountAscending:\n\t\t\t\treturn elementA.count() - elementB.count();\n\t\t\tcase SearchSortOrder.Type:\n\t\t\t\treturn compareFileExtensions(elementA.name(), elementB.name());\n\t\t\tcase SearchSortOrder.FileNames:\n\t\t\t\treturn compareFileNames(elementA.name(), elementB.name());\n\t\t\tcase SearchSortOrder.Modified: {\n\t\t\t\tconst fileStatA = elementA.fileStat;\n\t\t\t\tconst fileStatB = elementB.fileStat;\n\t\t\t\tif (fileStatA && fileStatB) {\n\t\t\t\t\treturn fileStatB.mtime - fileStatA.mtime;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Fall through otherwise\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\tcomparePaths(\n\t\t\t\t\t\telementA.resource.fsPath,\n\t\t\t\t\t\telementB.resource.fsPath,\n\t\t\t\t\t) || compareFileNames(elementA.name(), elementB.name())\n\t\t\t\t);\n\t\t}\n\t}\n\n\tif (\n\t\telementA instanceof MatchInNotebook &&\n\t\telementB instanceof MatchInNotebook\n\t) {\n\t\treturn compareNotebookPos(elementA, elementB);\n\t}\n\n\tif (elementA instanceof Match && elementB instanceof Match) {\n\t\treturn Range.compareRangesUsingStarts(\n\t\t\telementA.range(),\n\t\t\telementB.range(),\n\t\t);\n\t}\n\n\treturn 0;\n}\n\nexport function compareNotebookPos(\n\tmatch1: MatchInNotebook,\n\tmatch2: MatchInNotebook,\n): number {\n\tif (match1.cellIndex === match2.cellIndex) {\n\t\tif (\n\t\t\tmatch1.webviewIndex !== undefined &&\n\t\t\tmatch2.webviewIndex !== undefined\n\t\t) {\n\t\t\treturn match1.webviewIndex - match2.webviewIndex;\n\t\t} else if (\n\t\t\tmatch1.webviewIndex === undefined &&\n\t\t\tmatch2.webviewIndex === undefined\n\t\t) {\n\t\t\treturn Range.compareRangesUsingStarts(\n\t\t\t\tmatch1.range(),\n\t\t\t\tmatch2.range(),\n\t\t\t);\n\t\t} else {\n\t\t\t// webview matches should always be after content matches\n\t\t\tif (match1.webviewIndex !== undefined) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t} else if (match1.cellIndex < match2.cellIndex) {\n\t\treturn -1;\n\t} else {\n\t\treturn 1;\n\t}\n}\nexport function searchComparer(\n\telementA: RenderableMatch,\n\telementB: RenderableMatch,\n\tsortOrder: SearchSortOrder = SearchSortOrder.Default,\n): number {\n\tconst elemAParents = createParentList(elementA);\n\tconst elemBParents = createParentList(elementB);\n\n\tlet i = elemAParents.length - 1;\n\tlet j = elemBParents.length - 1;\n\twhile (i >= 0 && j >= 0) {\n\t\tif (elemAParents[i].id() !== elemBParents[j].id()) {\n\t\t\treturn searchMatchComparer(\n\t\t\t\telemAParents[i],\n\t\t\t\telemBParents[j],\n\t\t\t\tsortOrder,\n\t\t\t);\n\t\t}\n\t\ti--;\n\t\tj--;\n\t}\n\tconst elemAAtEnd = i === 0;\n\tconst elemBAtEnd = j === 0;\n\n\tif (elemAAtEnd && !elemBAtEnd) {\n\t\treturn 1;\n\t} else if (!elemAAtEnd && elemBAtEnd) {\n\t\treturn -1;\n\t}\n\treturn 0;\n}\n\nfunction createParentList(element: RenderableMatch): RenderableMatch[] {\n\tconst parentArray: RenderableMatch[] = [];\n\tlet currElement: RenderableMatch | SearchResult = element;\n\n\twhile (!(currElement instanceof SearchResult)) {\n\t\tparentArray.push(currElement);\n\t\tcurrElement = currElement.parent();\n\t}\n\n\treturn parentArray;\n}\n\nexport class SearchResult extends Disposable {\n\tprivate _onChange = this._register(\n\t\tnew PauseableEmitter<IChangeEvent>({\n\t\t\tmerge: mergeSearchResultEvents,\n\t\t}),\n\t);\n\treadonly onChange: Event<IChangeEvent> = this._onChange.event;\n\tprivate _folderMatches: FolderMatchWorkspaceRoot[] = [];\n\tprivate _aiFolderMatches: FolderMatchWorkspaceRoot[] = [];\n\tprivate _otherFilesMatch: FolderMatch | null = null;\n\tprivate _folderMatchesMap: TernarySearchTree<URI, FolderMatchWithResource> =\n\t\tTernarySearchTree.forUris<FolderMatchWorkspaceRoot>((key) =>\n\t\t\tthis.uriIdentityService.extUri.ignorePathCasing(key),\n\t\t);\n\tprivate _aiFolderMatchesMap: TernarySearchTree<\n\t\tURI,\n\t\tFolderMatchWithResource\n\t> = TernarySearchTree.forUris<FolderMatchWorkspaceRoot>((key) =>\n\t\tthis.uriIdentityService.extUri.ignorePathCasing(key),\n\t);\n\tprivate _showHighlights = false;\n\tprivate _query: ITextQuery | null = null;\n\tprivate _rangeHighlightDecorations: RangeHighlightDecorations;\n\tprivate disposePastResults: () => Promise<void> = () => Promise.resolve();\n\tprivate _isDirty = false;\n\tprivate _onWillChangeModelListener: IDisposable | undefined;\n\tprivate _onDidChangeModelListener: IDisposable | undefined;\n\n\tprivate _cachedSearchComplete: ISearchComplete | undefined;\n\tprivate _aiCachedSearchComplete: ISearchComplete | undefined;\n\n\tconstructor(\n\t\tpublic readonly searchModel: SearchModel,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@INotebookEditorService\n\t\tprivate readonly notebookEditorService: INotebookEditorService,\n\t) {\n\t\tsuper();\n\t\tthis._rangeHighlightDecorations =\n\t\t\tthis.instantiationService.createInstance(RangeHighlightDecorations);\n\t\tthis.modelService\n\t\t\t.getModels()\n\t\t\t.forEach((model) => this.onModelAdded(model));\n\t\tthis._register(\n\t\t\tthis.modelService.onModelAdded((model) => this.onModelAdded(model)),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.notebookEditorService.onDidAddNotebookEditor((widget) => {\n\t\t\t\tif (widget instanceof NotebookEditorWidget) {\n\t\t\t\t\tthis.onDidAddNotebookEditorWidget(\n\t\t\t\t\t\t<NotebookEditorWidget>widget,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.onChange((e) => {\n\t\t\t\tif (e.removed) {\n\t\t\t\t\tthis._isDirty = !this.isEmpty() || !this.isEmpty(true);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tasync batchReplace(elementsToReplace: RenderableMatch[]) {\n\t\ttry {\n\t\t\tthis._onChange.pause();\n\t\t\tawait Promise.all(\n\t\t\t\telementsToReplace.map(async (elem) => {\n\t\t\t\t\tconst parent = elem.parent();\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(parent instanceof FolderMatch ||\n\t\t\t\t\t\t\tparent instanceof FileMatch) &&\n\t\t\t\t\t\tarrayContainsElementOrParent(parent, elementsToReplace)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// skip any children who have parents in the array\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (elem instanceof FileMatch) {\n\t\t\t\t\t\tawait elem.parent().replace(elem);\n\t\t\t\t\t} else if (elem instanceof Match) {\n\t\t\t\t\t\tawait elem.parent().replace(elem);\n\t\t\t\t\t} else if (elem instanceof FolderMatch) {\n\t\t\t\t\t\tawait elem.replaceAll();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t} finally {\n\t\t\tthis._onChange.resume();\n\t\t}\n\t}\n\n\tbatchRemove(elementsToRemove: RenderableMatch[]) {\n\t\t// need to check that we aren't trying to remove elements twice\n\t\tconst removedElems: RenderableMatch[] = [];\n\n\t\ttry {\n\t\t\tthis._onChange.pause();\n\t\t\telementsToRemove.forEach((currentElement) => {\n\t\t\t\tif (\n\t\t\t\t\t!arrayContainsElementOrParent(currentElement, removedElems)\n\t\t\t\t) {\n\t\t\t\t\tcurrentElement\n\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t.remove(\n\t\t\t\t\t\t\t<(FolderMatch | FileMatch)[] & Match & FileMatch[]>(\n\t\t\t\t\t\t\t\tcurrentElement\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\tremovedElems.push(currentElement);\n\t\t\t\t}\n\t\t\t});\n\t\t} finally {\n\t\t\tthis._onChange.resume();\n\t\t}\n\t}\n\n\tget isDirty(): boolean {\n\t\treturn this._isDirty;\n\t}\n\n\tget query(): ITextQuery | null {\n\t\treturn this._query;\n\t}\n\n\tset query(query: ITextQuery | null) {\n\t\t// When updating the query we could change the roots, so keep a reference to them to clean up when we trigger `disposePastResults`\n\t\tconst oldFolderMatches = this.folderMatches();\n\t\tthis.disposePastResults = async () => {\n\t\t\toldFolderMatches.forEach((match) => match.clear());\n\t\t\toldFolderMatches.forEach((match) => match.dispose());\n\t\t\tthis._isDirty = false;\n\t\t};\n\n\t\tthis._cachedSearchComplete = undefined;\n\t\tthis._aiCachedSearchComplete = undefined;\n\n\t\tthis._rangeHighlightDecorations.removeHighlightRange();\n\t\tthis._folderMatchesMap =\n\t\t\tTernarySearchTree.forUris<FolderMatchWithResource>((key) =>\n\t\t\t\tthis.uriIdentityService.extUri.ignorePathCasing(key),\n\t\t\t);\n\t\tthis._aiFolderMatchesMap =\n\t\t\tTernarySearchTree.forUris<FolderMatchWithResource>((key) =>\n\t\t\t\tthis.uriIdentityService.extUri.ignorePathCasing(key),\n\t\t\t);\n\n\t\tif (!query) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._folderMatches = ((query && query.folderQueries) || [])\n\t\t\t.map((fq) => fq.folder)\n\t\t\t.map(\n\t\t\t\t(resource, index) =>\n\t\t\t\t\t<FolderMatchWorkspaceRoot>(\n\t\t\t\t\t\tthis._createBaseFolderMatch(\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\tresource.toString(),\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t);\n\n\t\tthis._folderMatches.forEach((fm) =>\n\t\t\tthis._folderMatchesMap.set(fm.resource, fm),\n\t\t);\n\n\t\tthis._aiFolderMatches = ((query && query.folderQueries) || [])\n\t\t\t.map((fq) => fq.folder)\n\t\t\t.map(\n\t\t\t\t(resource, index) =>\n\t\t\t\t\t<FolderMatchWorkspaceRoot>(\n\t\t\t\t\t\tthis._createBaseFolderMatch(\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\tresource.toString(),\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t);\n\n\t\tthis._aiFolderMatches.forEach((fm) =>\n\t\t\tthis._aiFolderMatchesMap.set(fm.resource, fm),\n\t\t);\n\n\t\tthis._otherFilesMatch = <FolderMatchNoRoot>(\n\t\t\tthis._createBaseFolderMatch(\n\t\t\t\tnull,\n\t\t\t\t\"otherFiles\",\n\t\t\t\tthis._folderMatches.length + this._aiFolderMatches.length + 1,\n\t\t\t\tquery,\n\t\t\t\tfalse,\n\t\t\t)\n\t\t);\n\n\t\tthis._query = query;\n\t}\n\n\tsetCachedSearchComplete(\n\t\tcachedSearchComplete: ISearchComplete | undefined,\n\t\tai: boolean,\n\t) {\n\t\tif (ai) {\n\t\t\tthis._aiCachedSearchComplete = cachedSearchComplete;\n\t\t} else {\n\t\t\tthis._cachedSearchComplete = cachedSearchComplete;\n\t\t}\n\t}\n\n\tgetCachedSearchComplete(ai: boolean) {\n\t\treturn ai ? this._aiCachedSearchComplete : this._cachedSearchComplete;\n\t}\n\n\tprivate onDidAddNotebookEditorWidget(widget: NotebookEditorWidget): void {\n\t\tthis._onWillChangeModelListener?.dispose();\n\t\tthis._onWillChangeModelListener = widget.onWillChangeModel((model) => {\n\t\t\tif (model) {\n\t\t\t\tthis.onNotebookEditorWidgetRemoved(widget, model?.uri);\n\t\t\t}\n\t\t});\n\n\t\tthis._onDidChangeModelListener?.dispose();\n\t\t// listen to view model change as we are searching on both inputs and outputs\n\t\tthis._onDidChangeModelListener = widget.onDidAttachViewModel(() => {\n\t\t\tif (widget.hasModel()) {\n\t\t\t\tthis.onNotebookEditorWidgetAdded(widget, widget.textModel.uri);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onModelAdded(model: ITextModel): void {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(model.uri);\n\t\tfolderMatch?.bindModel(model);\n\t}\n\n\tprivate async onNotebookEditorWidgetAdded(\n\t\teditor: NotebookEditorWidget,\n\t\tresource: URI,\n\t): Promise<void> {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(resource);\n\t\tawait folderMatch?.bindNotebookEditorWidget(editor, resource);\n\t}\n\n\tprivate onNotebookEditorWidgetRemoved(\n\t\teditor: NotebookEditorWidget,\n\t\tresource: URI,\n\t): void {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(resource);\n\t\tfolderMatch?.unbindNotebookEditorWidget(editor, resource);\n\t}\n\n\tprivate _createBaseFolderMatch(\n\t\tresource: URI | null,\n\t\tid: string,\n\t\tindex: number,\n\t\tquery: ITextQuery,\n\t\tai: boolean,\n\t): FolderMatch {\n\t\tlet folderMatch: FolderMatch;\n\t\tif (resource) {\n\t\t\tfolderMatch = this._register(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tFolderMatchWorkspaceRoot,\n\t\t\t\t\tresource,\n\t\t\t\t\tid,\n\t\t\t\t\tindex,\n\t\t\t\t\tquery,\n\t\t\t\t\tthis,\n\t\t\t\t\tai,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tfolderMatch = this._register(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tFolderMatchNoRoot,\n\t\t\t\t\tid,\n\t\t\t\t\tindex,\n\t\t\t\t\tquery,\n\t\t\t\t\tthis,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tconst disposable = folderMatch.onChange((event) =>\n\t\t\tthis._onChange.fire(event),\n\t\t);\n\t\tthis._register(folderMatch.onDispose(() => disposable.dispose()));\n\t\treturn folderMatch;\n\t}\n\n\tadd(\n\t\tallRaw: IFileMatch[],\n\t\tsearchInstanceID: string,\n\t\tai: boolean,\n\t\tsilent = false,\n\t): void {\n\t\t// Split up raw into a list per folder so we can do a batch add per folder.\n\n\t\tconst { byFolder, other } = this.groupFilesByFolder(allRaw, ai);\n\t\tbyFolder.forEach((raw) => {\n\t\t\tif (!raw.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// ai results go into the respective folder\n\t\t\tconst folderMatch = ai\n\t\t\t\t? this.getAIFolderMatch(raw[0].resource)\n\t\t\t\t: this.getFolderMatch(raw[0].resource);\n\t\t\tfolderMatch?.addFileMatch(raw, silent, searchInstanceID, ai);\n\t\t});\n\n\t\tif (!ai) {\n\t\t\tthis._otherFilesMatch?.addFileMatch(\n\t\t\t\tother,\n\t\t\t\tsilent,\n\t\t\t\tsearchInstanceID,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\t\tthis.disposePastResults();\n\t}\n\n\tclear(): void {\n\t\tthis.folderMatches().forEach((folderMatch) => folderMatch.clear(true));\n\t\tthis.folderMatches(true);\n\t\tthis.disposeMatches();\n\t\tthis._folderMatches = [];\n\t\tthis._aiFolderMatches = [];\n\t\tthis._otherFilesMatch = null;\n\t}\n\n\tremove(\n\t\tmatches: FileMatch | FolderMatch | (FileMatch | FolderMatch)[],\n\t\tai = false,\n\t): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\n\t\tmatches.forEach((m) => {\n\t\t\tif (m instanceof FolderMatch) {\n\t\t\t\tm.clear();\n\t\t\t}\n\t\t});\n\n\t\tconst fileMatches: FileMatch[] = matches.filter(\n\t\t\t(m) => m instanceof FileMatch,\n\t\t) as FileMatch[];\n\n\t\tconst { byFolder, other } = this.groupFilesByFolder(fileMatches, ai);\n\t\tbyFolder.forEach((matches) => {\n\t\t\tif (!matches.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.getFolderMatch(matches[0].resource).remove(\n\t\t\t\t<FileMatch[]>matches,\n\t\t\t);\n\t\t});\n\n\t\tif (other.length) {\n\t\t\tthis.getFolderMatch(other[0].resource).remove(<FileMatch[]>other);\n\t\t}\n\t}\n\n\treplace(match: FileMatch): Promise<any> {\n\t\treturn this.getFolderMatch(match.resource).replace(match);\n\t}\n\n\treplaceAll(progress: IProgress<IProgressStep>): Promise<any> {\n\t\tthis.replacingAll = true;\n\n\t\tconst promise = this.replaceService.replace(this.matches(), progress);\n\n\t\treturn promise.then(\n\t\t\t() => {\n\t\t\t\tthis.replacingAll = false;\n\t\t\t\tthis.clear();\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.replacingAll = false;\n\t\t\t},\n\t\t);\n\t}\n\n\tfolderMatches(ai = false): FolderMatch[] {\n\t\tif (ai) {\n\t\t\treturn this._aiFolderMatches;\n\t\t}\n\t\treturn this._otherFilesMatch\n\t\t\t? [...this._folderMatches, this._otherFilesMatch]\n\t\t\t: [...this._folderMatches];\n\t}\n\n\tmatches(ai = false): FileMatch[] {\n\t\tconst matches: FileMatch[][] = [];\n\t\tthis.folderMatches(ai).forEach((folderMatch) => {\n\t\t\tmatches.push(folderMatch.allDownstreamFileMatches());\n\t\t});\n\n\t\treturn (<FileMatch[]>[]).concat(...matches);\n\t}\n\n\tisEmpty(ai = false): boolean {\n\t\treturn this.folderMatches(ai).every((folderMatch) =>\n\t\t\tfolderMatch.isEmpty(),\n\t\t);\n\t}\n\n\tfileCount(ai = false): number {\n\t\treturn this.folderMatches(ai).reduce<number>(\n\t\t\t(prev, match) => prev + match.recursiveFileCount(),\n\t\t\t0,\n\t\t);\n\t}\n\n\tcount(ai = false): number {\n\t\treturn this.matches(ai).reduce<number>(\n\t\t\t(prev, match) => prev + match.count(),\n\t\t\t0,\n\t\t);\n\t}\n\n\tget showHighlights(): boolean {\n\t\treturn this._showHighlights;\n\t}\n\n\ttoggleHighlights(value: boolean): void {\n\t\tif (this._showHighlights === value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._showHighlights = value;\n\t\tlet selectedMatch: Match | null = null;\n\t\tthis.matches().forEach((fileMatch: FileMatch) => {\n\t\t\tfileMatch.updateHighlights();\n\t\t\tfileMatch.updateNotebookHighlights();\n\t\t\tif (!selectedMatch) {\n\t\t\t\tselectedMatch = fileMatch.getSelectedMatch();\n\t\t\t}\n\t\t});\n\t\tif (this._showHighlights && selectedMatch) {\n\t\t\t// TS?\n\t\t\tthis._rangeHighlightDecorations.highlightRange(\n\t\t\t\t(<Match>selectedMatch).parent().resource,\n\t\t\t\t(<Match>selectedMatch).range(),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._rangeHighlightDecorations.removeHighlightRange();\n\t\t}\n\t}\n\n\tget rangeHighlightDecorations(): RangeHighlightDecorations {\n\t\treturn this._rangeHighlightDecorations;\n\t}\n\n\tprivate getFolderMatch(\n\t\tresource: URI,\n\t): FolderMatchWorkspaceRoot | FolderMatch {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(resource);\n\t\treturn folderMatch ? folderMatch : this._otherFilesMatch!;\n\t}\n\n\tprivate getAIFolderMatch(\n\t\tresource: URI,\n\t): FolderMatchWorkspaceRoot | FolderMatch | undefined {\n\t\tconst folderMatch = this._aiFolderMatchesMap.findSubstr(resource);\n\t\treturn folderMatch;\n\t}\n\n\tprivate set replacingAll(running: boolean) {\n\t\tthis.folderMatches().forEach((folderMatch) => {\n\t\t\tfolderMatch.replacingAll = running;\n\t\t});\n\t}\n\n\tprivate groupFilesByFolder(\n\t\tfileMatches: IFileMatch[],\n\t\tai: boolean,\n\t): { byFolder: ResourceMap<IFileMatch[]>; other: IFileMatch[] } {\n\t\tconst rawPerFolder = new ResourceMap<IFileMatch[]>();\n\t\tconst otherFileMatches: IFileMatch[] = [];\n\t\t(ai ? this._aiFolderMatches : this._folderMatches).forEach((fm) =>\n\t\t\trawPerFolder.set(fm.resource, []),\n\t\t);\n\n\t\tfileMatches.forEach((rawFileMatch) => {\n\t\t\tconst folderMatch = ai\n\t\t\t\t? this.getAIFolderMatch(rawFileMatch.resource)\n\t\t\t\t: this.getFolderMatch(rawFileMatch.resource);\n\t\t\tif (!folderMatch) {\n\t\t\t\t// foldermatch was previously removed by user or disposed for some reason\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst resource = folderMatch.resource;\n\t\t\tif (resource) {\n\t\t\t\trawPerFolder.get(resource)!.push(rawFileMatch);\n\t\t\t} else {\n\t\t\t\totherFileMatches.push(rawFileMatch);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tbyFolder: rawPerFolder,\n\t\t\tother: otherFileMatches,\n\t\t};\n\t}\n\n\tprivate disposeMatches(): void {\n\t\tthis.folderMatches().forEach((folderMatch) => folderMatch.dispose());\n\t\tthis.folderMatches(true).forEach((folderMatch) =>\n\t\t\tfolderMatch.dispose(),\n\t\t);\n\n\t\tthis._folderMatches = [];\n\t\tthis._aiFolderMatches = [];\n\n\t\tthis._folderMatchesMap =\n\t\t\tTernarySearchTree.forUris<FolderMatchWithResource>((key) =>\n\t\t\t\tthis.uriIdentityService.extUri.ignorePathCasing(key),\n\t\t\t);\n\t\tthis._aiFolderMatchesMap =\n\t\t\tTernarySearchTree.forUris<FolderMatchWithResource>((key) =>\n\t\t\t\tthis.uriIdentityService.extUri.ignorePathCasing(key),\n\t\t\t);\n\n\t\tthis._rangeHighlightDecorations.removeHighlightRange();\n\t}\n\n\toverride async dispose(): Promise<void> {\n\t\tthis._onWillChangeModelListener?.dispose();\n\t\tthis._onDidChangeModelListener?.dispose();\n\t\tthis._rangeHighlightDecorations.dispose();\n\t\tthis.disposeMatches();\n\t\tsuper.dispose();\n\t\tawait this.disposePastResults();\n\t}\n}\n\nexport enum SearchModelLocation {\n\tPANEL = 0,\n\tQUICK_ACCESS = 1,\n}\n\nexport class SearchModel extends Disposable {\n\tprivate _searchResult: SearchResult;\n\tprivate _searchQuery: ITextQuery | null = null;\n\tprivate _replaceActive = false;\n\tprivate _replaceString: string | null = null;\n\tprivate _replacePattern: ReplacePattern | null = null;\n\tprivate _preserveCase = false;\n\tprivate _startStreamDelay: Promise<void> = Promise.resolve();\n\tprivate readonly _resultQueue: IFileMatch[] = [];\n\tprivate readonly _aiResultQueue: IFileMatch[] = [];\n\n\tprivate readonly _onReplaceTermChanged: Emitter<void> = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onReplaceTermChanged: Event<void> =\n\t\tthis._onReplaceTermChanged.event;\n\n\tprivate readonly _onSearchResultChanged = this._register(\n\t\tnew PauseableEmitter<IChangeEvent>({\n\t\t\tmerge: mergeSearchResultEvents,\n\t\t}),\n\t);\n\treadonly onSearchResultChanged: Event<IChangeEvent> =\n\t\tthis._onSearchResultChanged.event;\n\n\tprivate currentCancelTokenSource: CancellationTokenSource | null = null;\n\tprivate currentAICancelTokenSource: CancellationTokenSource | null = null;\n\tprivate searchCancelledForNewSearch = false;\n\tprivate aiSearchCancelledForNewSearch = false;\n\tpublic location: SearchModelLocation = SearchModelLocation.PANEL;\n\n\tconstructor(\n\t\t@ISearchService private readonly searchService: ISearchService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INotebookSearchService\n\t\tprivate readonly notebookSearchService: INotebookSearchService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t) {\n\t\tsuper();\n\t\tthis._searchResult = this.instantiationService.createInstance(\n\t\t\tSearchResult,\n\t\t\tthis,\n\t\t);\n\t\tthis._register(\n\t\t\tthis._searchResult.onChange((e) =>\n\t\t\t\tthis._onSearchResultChanged.fire(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tisReplaceActive(): boolean {\n\t\treturn this._replaceActive;\n\t}\n\n\tset replaceActive(replaceActive: boolean) {\n\t\tthis._replaceActive = replaceActive;\n\t}\n\n\tget replacePattern(): ReplacePattern | null {\n\t\treturn this._replacePattern;\n\t}\n\n\tget replaceString(): string {\n\t\treturn this._replaceString || \"\";\n\t}\n\n\tset preserveCase(value: boolean) {\n\t\tthis._preserveCase = value;\n\t}\n\n\tget preserveCase(): boolean {\n\t\treturn this._preserveCase;\n\t}\n\n\tset replaceString(replaceString: string) {\n\t\tthis._replaceString = replaceString;\n\t\tif (this._searchQuery) {\n\t\t\tthis._replacePattern = new ReplacePattern(\n\t\t\t\treplaceString,\n\t\t\t\tthis._searchQuery.contentPattern,\n\t\t\t);\n\t\t}\n\t\tthis._onReplaceTermChanged.fire();\n\t}\n\n\tget searchResult(): SearchResult {\n\t\treturn this._searchResult;\n\t}\n\n\tasync addAIResults(onProgress?: (result: ISearchProgressItem) => void) {\n\t\tif (this.searchResult.count(true)) {\n\t\t\t// already has matches\n\t\t\treturn;\n\t\t} else if (this._searchQuery) {\n\t\t\tawait this.aiSearch(\n\t\t\t\t{\n\t\t\t\t\t...this._searchQuery,\n\t\t\t\t\tcontentPattern: this._searchQuery.contentPattern.pattern,\n\t\t\t\t\ttype: QueryType.aiText,\n\t\t\t\t},\n\t\t\t\tonProgress,\n\t\t\t\tthis.currentCancelTokenSource?.token,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async doAISearchWithModal(\n\t\tsearchQuery: IAITextQuery,\n\t\tsearchInstanceID: string,\n\t\ttoken?: CancellationToken,\n\t\tonProgress?: (result: ISearchProgressItem) => void,\n\t): Promise<ISearchComplete> {\n\t\tconst promise = this.searchService.aiTextSearch(\n\t\t\tsearchQuery,\n\t\t\ttoken,\n\t\t\tasync (p: ISearchProgressItem) => {\n\t\t\t\tthis.onSearchProgress(p, searchInstanceID, false, true);\n\t\t\t\tonProgress?.(p);\n\t\t\t},\n\t\t);\n\t\treturn this.progressService.withProgress<ISearchComplete>(\n\t\t\t{\n\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\ttype: \"syncing\",\n\t\t\t\ttitle: \"Searching for AI results...\",\n\t\t\t},\n\t\t\tasync (_) => promise,\n\t\t);\n\t}\n\n\taiSearch(\n\t\tquery: IAITextQuery,\n\t\tonProgress?: (result: ISearchProgressItem) => void,\n\t\tcallerToken?: CancellationToken,\n\t): Promise<ISearchComplete> {\n\t\tconst searchInstanceID = Date.now().toString();\n\t\tconst tokenSource = (this.currentAICancelTokenSource =\n\t\t\tnew CancellationTokenSource(callerToken));\n\t\tconst start = Date.now();\n\t\tconst asyncAIResults = this.doAISearchWithModal(\n\t\t\tquery,\n\t\t\tsearchInstanceID,\n\t\t\tthis.currentAICancelTokenSource.token,\n\t\t\tasync (p: ISearchProgressItem) => {\n\t\t\t\tthis.onSearchProgress(p, searchInstanceID, false, true);\n\t\t\t\tonProgress?.(p);\n\t\t\t},\n\t\t)\n\t\t\t.then(\n\t\t\t\t(value) => {\n\t\t\t\t\tthis.onSearchCompleted(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tDate.now() - start,\n\t\t\t\t\t\tsearchInstanceID,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t\t(e) => {\n\t\t\t\t\tthis.onSearchError(e, Date.now() - start, true);\n\t\t\t\t\tthrow e;\n\t\t\t\t},\n\t\t\t)\n\t\t\t.finally(() => tokenSource.dispose());\n\t\treturn asyncAIResults;\n\t}\n\n\tprivate doSearch(\n\t\tquery: ITextQuery,\n\t\tprogressEmitter: Emitter<void>,\n\t\tsearchQuery: ITextQuery,\n\t\tsearchInstanceID: string,\n\t\tonProgress?: (result: ISearchProgressItem) => void,\n\t\tcallerToken?: CancellationToken,\n\t): {\n\t\tasyncResults: Promise<ISearchComplete>;\n\t\tsyncResults: IFileMatch<URI>[];\n\t} {\n\t\tconst asyncGenerateOnProgress = async (p: ISearchProgressItem) => {\n\t\t\tprogressEmitter.fire();\n\t\t\tthis.onSearchProgress(p, searchInstanceID, false, false);\n\t\t\tonProgress?.(p);\n\t\t};\n\n\t\tconst syncGenerateOnProgress = (p: ISearchProgressItem) => {\n\t\t\tprogressEmitter.fire();\n\t\t\tthis.onSearchProgress(p, searchInstanceID, true);\n\t\t\tonProgress?.(p);\n\t\t};\n\t\tconst tokenSource = (this.currentCancelTokenSource =\n\t\t\tnew CancellationTokenSource(callerToken));\n\n\t\tconst notebookResult = this.notebookSearchService.notebookSearch(\n\t\t\tquery,\n\t\t\ttokenSource.token,\n\t\t\tsearchInstanceID,\n\t\t\tasyncGenerateOnProgress,\n\t\t);\n\t\tconst textResult = this.searchService.textSearchSplitSyncAsync(\n\t\t\tsearchQuery,\n\t\t\tthis.currentCancelTokenSource.token,\n\t\t\tasyncGenerateOnProgress,\n\t\t\tnotebookResult.openFilesToScan,\n\t\t\tnotebookResult.allScannedFiles,\n\t\t);\n\n\t\tconst syncResults = textResult.syncResults.results;\n\t\tsyncResults.forEach((p) => {\n\t\t\tif (p) {\n\t\t\t\tsyncGenerateOnProgress(p);\n\t\t\t}\n\t\t});\n\n\t\tconst getAsyncResults = async (): Promise<ISearchComplete> => {\n\t\t\tconst searchStart = Date.now();\n\n\t\t\t// resolve async parts of search\n\t\t\tconst allClosedEditorResults = await textResult.asyncResults;\n\t\t\tconst resolvedNotebookResults = await notebookResult.completeData;\n\t\t\ttokenSource.dispose();\n\t\t\tconst searchLength = Date.now() - searchStart;\n\t\t\tconst resolvedResult: ISearchComplete = {\n\t\t\t\tresults: [\n\t\t\t\t\t...allClosedEditorResults.results,\n\t\t\t\t\t...resolvedNotebookResults.results,\n\t\t\t\t],\n\t\t\t\tmessages: [\n\t\t\t\t\t...allClosedEditorResults.messages,\n\t\t\t\t\t...resolvedNotebookResults.messages,\n\t\t\t\t],\n\t\t\t\tlimitHit:\n\t\t\t\t\tallClosedEditorResults.limitHit ||\n\t\t\t\t\tresolvedNotebookResults.limitHit,\n\t\t\t\texit: allClosedEditorResults.exit,\n\t\t\t\tstats: allClosedEditorResults.stats,\n\t\t\t};\n\t\t\tthis.logService.trace(`whole search time | ${searchLength}ms`);\n\t\t\treturn resolvedResult;\n\t\t};\n\t\treturn {\n\t\t\tasyncResults: getAsyncResults(),\n\t\t\tsyncResults,\n\t\t};\n\t}\n\n\tsearch(\n\t\tquery: ITextQuery,\n\t\tonProgress?: (result: ISearchProgressItem) => void,\n\t\tcallerToken?: CancellationToken,\n\t): {\n\t\tasyncResults: Promise<ISearchComplete>;\n\t\tsyncResults: IFileMatch<URI>[];\n\t} {\n\t\tthis.cancelSearch(true);\n\n\t\tthis._searchQuery = query;\n\t\tif (!this.searchConfig.searchOnType) {\n\t\t\tthis.searchResult.clear();\n\t\t}\n\t\tconst searchInstanceID = Date.now().toString();\n\n\t\tthis._searchResult.query = this._searchQuery;\n\n\t\tconst progressEmitter = this._register(new Emitter<void>());\n\t\tthis._replacePattern = new ReplacePattern(\n\t\t\tthis.replaceString,\n\t\t\tthis._searchQuery.contentPattern,\n\t\t);\n\n\t\t// In search on type case, delay the streaming of results just a bit, so that we don't flash the only \"local results\" fast path\n\t\tthis._startStreamDelay = new Promise((resolve) =>\n\t\t\tsetTimeout(resolve, this.searchConfig.searchOnType ? 150 : 0),\n\t\t);\n\n\t\tconst req = this.doSearch(\n\t\t\tquery,\n\t\t\tprogressEmitter,\n\t\t\tthis._searchQuery,\n\t\t\tsearchInstanceID,\n\t\t\tonProgress,\n\t\t\tcallerToken,\n\t\t);\n\t\tconst asyncResults = req.asyncResults;\n\t\tconst syncResults = req.syncResults;\n\n\t\tif (onProgress) {\n\t\t\tsyncResults.forEach((p) => {\n\t\t\t\tif (p) {\n\t\t\t\t\tonProgress(p);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst start = Date.now();\n\t\tlet event: IDisposable | undefined;\n\n\t\tconst progressEmitterPromise = new Promise((resolve) => {\n\t\t\tevent = Event.once(progressEmitter.event)(resolve);\n\t\t\treturn event;\n\t\t});\n\n\t\tPromise.race([asyncResults, progressEmitterPromise]).finally(() => {\n\t\t\t/* __GDPR__\n\t\t\t\t\"searchResultsFirstRender\" : {\n\t\t\t\t\t\"owner\": \"roblourens\",\n\t\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tevent?.dispose();\n\t\t\tthis.telemetryService.publicLog(\"searchResultsFirstRender\", {\n\t\t\t\tduration: Date.now() - start,\n\t\t\t});\n\t\t});\n\n\t\ttry {\n\t\t\treturn {\n\t\t\t\tasyncResults: asyncResults.then(\n\t\t\t\t\t(value) => {\n\t\t\t\t\t\tthis.onSearchCompleted(\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tDate.now() - start,\n\t\t\t\t\t\t\tsearchInstanceID,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t},\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tthis.onSearchError(e, Date.now() - start, false);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t\tsyncResults,\n\t\t\t};\n\t\t} finally {\n\t\t\t/* __GDPR__\n\t\t\t\t\"searchResultsFinished\" : {\n\t\t\t\t\t\"owner\": \"roblourens\",\n\t\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryService.publicLog(\"searchResultsFinished\", {\n\t\t\t\tduration: Date.now() - start,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onSearchCompleted(\n\t\tcompleted: ISearchComplete | undefined,\n\t\tduration: number,\n\t\tsearchInstanceID: string,\n\t\tai: boolean,\n\t): ISearchComplete | undefined {\n\t\tif (!this._searchQuery) {\n\t\t\tthrow new Error(\n\t\t\t\t\"onSearchCompleted must be called after a search is started\",\n\t\t\t);\n\t\t}\n\n\t\tif (ai) {\n\t\t\tthis._searchResult.add(this._aiResultQueue, searchInstanceID, true);\n\t\t\tthis._aiResultQueue.length = 0;\n\t\t} else {\n\t\t\tthis._searchResult.add(this._resultQueue, searchInstanceID, false);\n\t\t\tthis._resultQueue.length = 0;\n\t\t}\n\n\t\tthis.searchResult.setCachedSearchComplete(completed, ai);\n\n\t\tconst options: IPatternInfo = Object.assign(\n\t\t\t{},\n\t\t\tthis._searchQuery.contentPattern,\n\t\t);\n\t\tdelete (options as any).pattern;\n\n\t\tconst stats = completed && (completed.stats as ITextSearchStats);\n\n\t\tconst fileSchemeOnly = this._searchQuery.folderQueries.every(\n\t\t\t(fq) => fq.folder.scheme === Schemas.file,\n\t\t);\n\t\tconst otherSchemeOnly = this._searchQuery.folderQueries.every(\n\t\t\t(fq) => fq.folder.scheme !== Schemas.file,\n\t\t);\n\t\tconst scheme = fileSchemeOnly\n\t\t\t? Schemas.file\n\t\t\t: otherSchemeOnly\n\t\t\t\t? \"other\"\n\t\t\t\t: \"mixed\";\n\n\t\t/* __GDPR__\n\t\t\t\"searchResultsShown\" : {\n\t\t\t\t\"owner\": \"roblourens\",\n\t\t\t\t\"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"fileCount\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"options\": { \"${inline}\": [ \"${IPatternInfo}\" ] },\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"type\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"scheme\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"searchOnTypeEnabled\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog(\"searchResultsShown\", {\n\t\t\tcount: this._searchResult.count(),\n\t\t\tfileCount: this._searchResult.fileCount(),\n\t\t\toptions,\n\t\t\tduration,\n\t\t\ttype: stats && stats.type,\n\t\t\tscheme,\n\t\t\tsearchOnTypeEnabled: this.searchConfig.searchOnType,\n\t\t});\n\t\treturn completed;\n\t}\n\n\tprivate onSearchError(e: any, duration: number, ai: boolean): void {\n\t\tif (errors.isCancellationError(e)) {\n\t\t\tthis.onSearchCompleted(\n\t\t\t\t(\n\t\t\t\t\tai\n\t\t\t\t\t\t? this.aiSearchCancelledForNewSearch\n\t\t\t\t\t\t: this.searchCancelledForNewSearch\n\t\t\t\t)\n\t\t\t\t\t? {\n\t\t\t\t\t\t\texit: SearchCompletionExitCode.NewSearchStarted,\n\t\t\t\t\t\t\tresults: [],\n\t\t\t\t\t\t\tmessages: [],\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined,\n\t\t\t\tduration,\n\t\t\t\t\"\",\n\t\t\t\tai,\n\t\t\t);\n\t\t\tif (ai) {\n\t\t\t\tthis.aiSearchCancelledForNewSearch = false;\n\t\t\t} else {\n\t\t\t\tthis.searchCancelledForNewSearch = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onSearchProgress(\n\t\tp: ISearchProgressItem,\n\t\tsearchInstanceID: string,\n\t\tsync = true,\n\t\tai = false,\n\t) {\n\t\tconst targetQueue = ai ? this._aiResultQueue : this._resultQueue;\n\t\tif ((<IFileMatch>p).resource) {\n\t\t\ttargetQueue.push(<IFileMatch>p);\n\t\t\tif (sync) {\n\t\t\t\tif (targetQueue.length) {\n\t\t\t\t\tthis._searchResult.add(\n\t\t\t\t\t\ttargetQueue,\n\t\t\t\t\t\tsearchInstanceID,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t\ttargetQueue.length = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._startStreamDelay.then(() => {\n\t\t\t\t\tif (targetQueue.length) {\n\t\t\t\t\t\tthis._searchResult.add(\n\t\t\t\t\t\t\ttargetQueue,\n\t\t\t\t\t\t\tsearchInstanceID,\n\t\t\t\t\t\t\tai,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t\ttargetQueue.length = 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate get searchConfig() {\n\t\treturn this.configurationService.getValue<ISearchConfigurationProperties>(\n\t\t\t\"search\",\n\t\t);\n\t}\n\n\tcancelSearch(cancelledForNewSearch = false): boolean {\n\t\tif (this.currentCancelTokenSource) {\n\t\t\tthis.searchCancelledForNewSearch = cancelledForNewSearch;\n\t\t\tthis.currentCancelTokenSource.cancel();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tcancelAISearch(cancelledForNewSearch = false): boolean {\n\t\tif (this.currentAICancelTokenSource) {\n\t\t\tthis.aiSearchCancelledForNewSearch = cancelledForNewSearch;\n\t\t\tthis.currentAICancelTokenSource.cancel();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\toverride dispose(): void {\n\t\tthis.cancelSearch();\n\t\tthis.cancelAISearch();\n\t\tthis.searchResult.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nexport type FileMatchOrMatch = FileMatch | Match;\n\nexport type RenderableMatch =\n\t| FolderMatch\n\t| FolderMatchWithResource\n\t| FileMatch\n\t| Match;\n\nexport class SearchViewModelWorkbenchService\n\timplements ISearchViewModelWorkbenchService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate _searchModel: SearchModel | null = null;\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {}\n\n\tget searchModel(): SearchModel {\n\t\tif (!this._searchModel) {\n\t\t\tthis._searchModel =\n\t\t\t\tthis.instantiationService.createInstance(SearchModel);\n\t\t}\n\t\treturn this._searchModel;\n\t}\n\n\tset searchModel(searchModel: SearchModel) {\n\t\tthis._searchModel?.dispose();\n\t\tthis._searchModel = searchModel;\n\t}\n}\n\nexport const ISearchViewModelWorkbenchService =\n\tcreateDecorator<ISearchViewModelWorkbenchService>(\n\t\t\"searchViewModelWorkbenchService\",\n\t);\n\nexport interface ISearchViewModelWorkbenchService {\n\treadonly _serviceBrand: undefined;\n\n\tsearchModel: SearchModel;\n}\n\n/**\n * Can add a range highlight decoration to a model.\n * It will automatically remove it when the model has its decorations changed.\n */\nexport class RangeHighlightDecorations implements IDisposable {\n\tprivate _decorationId: string | null = null;\n\tprivate _model: ITextModel | null = null;\n\tprivate readonly _modelDisposables = new DisposableStore();\n\n\tconstructor(@IModelService private readonly _modelService: IModelService) {}\n\n\tremoveHighlightRange() {\n\t\tif (this._model && this._decorationId) {\n\t\t\tconst decorationId = this._decorationId;\n\t\t\tthis._model.changeDecorations((accessor) => {\n\t\t\t\taccessor.removeDecoration(decorationId);\n\t\t\t});\n\t\t}\n\t\tthis._decorationId = null;\n\t}\n\n\thighlightRange(\n\t\tresource: URI | ITextModel,\n\t\trange: Range,\n\t\townerId = 0,\n\t): void {\n\t\tlet model: ITextModel | null;\n\t\tif (URI.isUri(resource)) {\n\t\t\tmodel = this._modelService.getModel(resource);\n\t\t} else {\n\t\t\tmodel = resource;\n\t\t}\n\n\t\tif (model) {\n\t\t\tthis.doHighlightRange(model, range);\n\t\t}\n\t}\n\n\tprivate doHighlightRange(model: ITextModel, range: Range) {\n\t\tthis.removeHighlightRange();\n\t\tmodel.changeDecorations((accessor) => {\n\t\t\tthis._decorationId = accessor.addDecoration(\n\t\t\t\trange,\n\t\t\t\tRangeHighlightDecorations._RANGE_HIGHLIGHT_DECORATION,\n\t\t\t);\n\t\t});\n\t\tthis.setModel(model);\n\t}\n\n\tprivate setModel(model: ITextModel) {\n\t\tif (this._model !== model) {\n\t\t\tthis.clearModelListeners();\n\t\t\tthis._model = model;\n\t\t\tthis._modelDisposables.add(\n\t\t\t\tthis._model.onDidChangeDecorations((e) => {\n\t\t\t\t\tthis.clearModelListeners();\n\t\t\t\t\tthis.removeHighlightRange();\n\t\t\t\t\tthis._model = null;\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._modelDisposables.add(\n\t\t\t\tthis._model.onWillDispose(() => {\n\t\t\t\t\tthis.clearModelListeners();\n\t\t\t\t\tthis.removeHighlightRange();\n\t\t\t\t\tthis._model = null;\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate clearModelListeners() {\n\t\tthis._modelDisposables.clear();\n\t}\n\n\tdispose() {\n\t\tif (this._model) {\n\t\t\tthis.removeHighlightRange();\n\t\t\tthis._model = null;\n\t\t}\n\t\tthis._modelDisposables.dispose();\n\t}\n\n\tprivate static readonly _RANGE_HIGHLIGHT_DECORATION =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"search-range-highlight\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tclassName: \"rangeHighlight\",\n\t\t\tisWholeLine: true,\n\t\t});\n}\n\nfunction textSearchResultToMatches(\n\trawMatch: ITextSearchMatch,\n\tfileMatch: FileMatch,\n\tisAiContributed: boolean,\n): Match[] {\n\tconst previewLines = rawMatch.previewText.split(\"\\n\");\n\treturn rawMatch.rangeLocations.map((rangeLocation) => {\n\t\tconst previewRange: ISearchRange = rangeLocation.preview;\n\t\treturn new Match(\n\t\t\tfileMatch,\n\t\t\tpreviewLines,\n\t\t\tpreviewRange,\n\t\t\trangeLocation.source,\n\t\t\tisAiContributed,\n\t\t);\n\t});\n}\n\n// text search to notebook matches\n\nexport function textSearchMatchesToNotebookMatches(\n\ttextSearchMatches: ITextSearchMatch[],\n\tcell: CellMatch,\n): MatchInNotebook[] {\n\tconst notebookMatches: MatchInNotebook[] = [];\n\ttextSearchMatches.forEach((textSearchMatch) => {\n\t\tconst previewLines = textSearchMatch.previewText.split(\"\\n\");\n\t\ttextSearchMatch.rangeLocations.map((rangeLocation) => {\n\t\t\tconst previewRange: ISearchRange = rangeLocation.preview;\n\t\t\tconst match = new MatchInNotebook(\n\t\t\t\tcell,\n\t\t\t\tpreviewLines,\n\t\t\t\tpreviewRange,\n\t\t\t\trangeLocation.source,\n\t\t\t\ttextSearchMatch.webviewIndex,\n\t\t\t);\n\t\t\tnotebookMatches.push(match);\n\t\t});\n\t});\n\treturn notebookMatches;\n}\n\nexport function arrayContainsElementOrParent(\n\telement: RenderableMatch,\n\ttestArray: RenderableMatch[],\n): boolean {\n\tdo {\n\t\tif (testArray.includes(element)) {\n\t\t\treturn true;\n\t\t}\n\t} while (\n\t\t!(element.parent() instanceof SearchResult) &&\n\t\t(element = <RenderableMatch>element.parent())\n\t);\n\n\treturn false;\n}\n\nfunction getFileMatches(\n\tmatches: (FileMatch | FolderMatchWithResource)[],\n): FileMatch[] {\n\tconst folderMatches: FolderMatchWithResource[] = [];\n\tconst fileMatches: FileMatch[] = [];\n\tmatches.forEach((e) => {\n\t\tif (e instanceof FileMatch) {\n\t\t\tfileMatches.push(e);\n\t\t} else {\n\t\t\tfolderMatches.push(e);\n\t\t}\n\t});\n\n\treturn fileMatches.concat(\n\t\tfolderMatches.flatMap((e) => e.allDownstreamFileMatches()),\n\t);\n}\n\nfunction mergeSearchResultEvents(events: IChangeEvent[]): IChangeEvent {\n\tconst retEvent: IChangeEvent = {\n\t\telements: [],\n\t\tadded: false,\n\t\tremoved: false,\n\t};\n\tevents.forEach((e) => {\n\t\tif (e.added) {\n\t\t\tretEvent.added = true;\n\t\t}\n\n\t\tif (e.removed) {\n\t\t\tretEvent.removed = true;\n\t\t}\n\n\t\tretEvent.elements = retEvent.elements.concat(e.elements);\n\t});\n\n\treturn retEvent;\n}\n"],
  "mappings": "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",
  "names": ["m", "matches", "SearchModelLocation"]
}
