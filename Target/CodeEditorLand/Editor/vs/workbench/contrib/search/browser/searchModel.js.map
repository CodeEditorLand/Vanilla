{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/searchModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { compareFileExtensions, compareFileNames, comparePaths } from '../../../../base/common/comparers.js';\nimport { memoize } from '../../../../base/common/decorators.js';\nimport * as errors from '../../../../base/common/errors.js';\nimport { Emitter, Event, PauseableEmitter } from '../../../../base/common/event.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { Disposable, DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { lcut } from '../../../../base/common/strings.js';\nimport { TernarySearchTree } from '../../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { FindMatch, IModelDeltaDecoration, ITextModel, MinimapPosition, OverviewRulerLane, TrackedRangeStickiness } from '../../../../editor/common/model.js';\nimport { ModelDecorationOptions } from '../../../../editor/common/model/textModel.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IFileService, IFileStatWithPartialMetadata } from '../../../../platform/files/common/files.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IProgress, IProgressService, IProgressStep, ProgressLocation } from '../../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { FindMatchDecorationModel } from '../../notebook/browser/contrib/find/findMatchDecorationModel.js';\nimport { CellFindMatchWithIndex, CellWebviewFindMatch, ICellViewModel } from '../../notebook/browser/notebookBrowser.js';\nimport { NotebookEditorWidget } from '../../notebook/browser/notebookEditorWidget.js';\nimport { INotebookEditorService } from '../../notebook/browser/services/notebookEditorService.js';\nimport { NotebookCellsChangeType } from '../../notebook/common/notebookCommon.js';\nimport { IReplaceService } from './replace.js';\nimport { contentMatchesToTextSearchMatches, webviewMatchesToTextSearchMatches, INotebookCellMatchWithModel, isINotebookFileMatchWithModel, isINotebookCellMatchWithModel, getIDFromINotebookCellMatch } from './notebookSearch/searchNotebookHelpers.js';\nimport { INotebookSearchService } from '../common/notebookSearch.js';\nimport { rawCellPrefix, INotebookCellMatchNoModel, isINotebookFileMatchNoModel } from '../common/searchNotebookHelpers.js';\nimport { ReplacePattern } from '../../../services/search/common/replace.js';\nimport { DEFAULT_MAX_SEARCH_RESULTS, IAITextQuery, IFileMatch, IPatternInfo, ISearchComplete, ISearchConfigurationProperties, ISearchProgressItem, ISearchRange, ISearchService, ITextQuery, ITextSearchContext, ITextSearchMatch, ITextSearchPreviewOptions, ITextSearchResult, ITextSearchStats, OneLineRange, QueryType, resultIsMatch, SearchCompletionExitCode, SearchSortOrder } from '../../../services/search/common/search.js';\nimport { getTextSearchMatchWithModelContext, editorMatchesToTextSearchResults } from '../../../services/search/common/searchHelpers.js';\nimport { CellSearchModel } from '../common/cellSearchModel.js';\nimport { CellFindMatchModel } from '../../notebook/browser/contrib/find/findModel.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\n\nexport class Match {\n\n\tprivate static readonly MAX_PREVIEW_CHARS = 250;\n\tprotected _id: string;\n\tprotected _range: Range;\n\tprivate _oneLinePreviewText: string;\n\tprivate _rangeInPreviewText: ISearchRange;\n\t// For replace\n\tprivate _fullPreviewRange: ISearchRange;\n\n\tconstructor(protected _parent: FileMatch, private _fullPreviewLines: string[], _fullPreviewRange: ISearchRange, _documentRange: ISearchRange, public readonly aiContributed: boolean) {\n\t\tthis._oneLinePreviewText = _fullPreviewLines[_fullPreviewRange.startLineNumber];\n\t\tconst adjustedEndCol = _fullPreviewRange.startLineNumber === _fullPreviewRange.endLineNumber ?\n\t\t\t_fullPreviewRange.endColumn :\n\t\t\tthis._oneLinePreviewText.length;\n\t\tthis._rangeInPreviewText = new OneLineRange(1, _fullPreviewRange.startColumn + 1, adjustedEndCol + 1);\n\n\t\tthis._range = new Range(\n\t\t\t_documentRange.startLineNumber + 1,\n\t\t\t_documentRange.startColumn + 1,\n\t\t\t_documentRange.endLineNumber + 1,\n\t\t\t_documentRange.endColumn + 1);\n\n\t\tthis._fullPreviewRange = _fullPreviewRange;\n\n\t\tthis._id = this._parent.id() + '>' + this._range + this.getMatchString();\n\t}\n\n\tid(): string {\n\t\treturn this._id;\n\t}\n\n\tparent(): FileMatch {\n\t\treturn this._parent;\n\t}\n\n\ttext(): string {\n\t\treturn this._oneLinePreviewText;\n\t}\n\n\trange(): Range {\n\t\treturn this._range;\n\t}\n\n\t@memoize\n\tpreview(): { before: string; fullBefore: string; inside: string; after: string } {\n\t\tconst fullBefore = this._oneLinePreviewText.substring(0, this._rangeInPreviewText.startColumn - 1),\n\t\t\tbefore = lcut(fullBefore, 26, '\u2026');\n\n\t\tlet inside = this.getMatchString(),\n\t\t\tafter = this._oneLinePreviewText.substring(this._rangeInPreviewText.endColumn - 1);\n\n\t\tlet charsRemaining = Match.MAX_PREVIEW_CHARS - before.length;\n\t\tinside = inside.substr(0, charsRemaining);\n\t\tcharsRemaining -= inside.length;\n\t\tafter = after.substr(0, charsRemaining);\n\n\t\treturn {\n\t\t\tbefore,\n\t\t\tfullBefore,\n\t\t\tinside,\n\t\t\tafter,\n\t\t};\n\t}\n\n\tget replaceString(): string {\n\t\tconst searchModel = this.parent().parent().searchModel;\n\t\tif (!searchModel.replacePattern) {\n\t\t\tthrow new Error('searchModel.replacePattern must be set before accessing replaceString');\n\t\t}\n\n\t\tconst fullMatchText = this.fullMatchText();\n\t\tlet replaceString = searchModel.replacePattern.getReplaceString(fullMatchText, searchModel.preserveCase);\n\t\tif (replaceString !== null) {\n\t\t\treturn replaceString;\n\t\t}\n\n\t\t// Search/find normalize line endings - check whether \\r prevents regex from matching\n\t\tconst fullMatchTextWithoutCR = fullMatchText.replace(/\\r\\n/g, '\\n');\n\t\tif (fullMatchTextWithoutCR !== fullMatchText) {\n\t\t\treplaceString = searchModel.replacePattern.getReplaceString(fullMatchTextWithoutCR, searchModel.preserveCase);\n\t\t\tif (replaceString !== null) {\n\t\t\t\treturn replaceString;\n\t\t\t}\n\t\t}\n\n\t\t// If match string is not matching then regex pattern has a lookahead expression\n\t\tconst contextMatchTextWithSurroundingContent = this.fullMatchText(true);\n\t\treplaceString = searchModel.replacePattern.getReplaceString(contextMatchTextWithSurroundingContent, searchModel.preserveCase);\n\t\tif (replaceString !== null) {\n\t\t\treturn replaceString;\n\t\t}\n\n\t\t// Search/find normalize line endings, this time in full context\n\t\tconst contextMatchTextWithoutCR = contextMatchTextWithSurroundingContent.replace(/\\r\\n/g, '\\n');\n\t\tif (contextMatchTextWithoutCR !== contextMatchTextWithSurroundingContent) {\n\t\t\treplaceString = searchModel.replacePattern.getReplaceString(contextMatchTextWithoutCR, searchModel.preserveCase);\n\t\t\tif (replaceString !== null) {\n\t\t\t\treturn replaceString;\n\t\t\t}\n\t\t}\n\n\t\t// Match string is still not matching. Could be unsupported matches (multi-line).\n\t\treturn searchModel.replacePattern.pattern;\n\t}\n\n\tfullMatchText(includeSurrounding = false): string {\n\t\tlet thisMatchPreviewLines: string[];\n\t\tif (includeSurrounding) {\n\t\t\tthisMatchPreviewLines = this._fullPreviewLines;\n\t\t} else {\n\t\t\tthisMatchPreviewLines = this._fullPreviewLines.slice(this._fullPreviewRange.startLineNumber, this._fullPreviewRange.endLineNumber + 1);\n\t\t\tthisMatchPreviewLines[thisMatchPreviewLines.length - 1] = thisMatchPreviewLines[thisMatchPreviewLines.length - 1].slice(0, this._fullPreviewRange.endColumn);\n\t\t\tthisMatchPreviewLines[0] = thisMatchPreviewLines[0].slice(this._fullPreviewRange.startColumn);\n\t\t}\n\n\t\treturn thisMatchPreviewLines.join('\\n');\n\t}\n\n\trangeInPreview() {\n\t\t// convert to editor's base 1 positions.\n\t\treturn {\n\t\t\t...this._fullPreviewRange,\n\t\t\tstartColumn: this._fullPreviewRange.startColumn + 1,\n\t\t\tendColumn: this._fullPreviewRange.endColumn + 1\n\t\t};\n\t}\n\n\tfullPreviewLines(): string[] {\n\t\treturn this._fullPreviewLines.slice(this._fullPreviewRange.startLineNumber, this._fullPreviewRange.endLineNumber + 1);\n\t}\n\n\tgetMatchString(): string {\n\t\treturn this._oneLinePreviewText.substring(this._rangeInPreviewText.startColumn - 1, this._rangeInPreviewText.endColumn - 1);\n\t}\n}\n\nexport class CellMatch {\n\tprivate _contentMatches: Map<string, MatchInNotebook>;\n\tprivate _webviewMatches: Map<string, MatchInNotebook>;\n\tprivate _context: Map<number, string>;\n\n\tconstructor(\n\t\tprivate readonly _parent: FileMatch,\n\t\tprivate _cell: ICellViewModel | undefined,\n\t\tprivate readonly _cellIndex: number,\n\t) {\n\n\t\tthis._contentMatches = new Map<string, MatchInNotebook>();\n\t\tthis._webviewMatches = new Map<string, MatchInNotebook>();\n\t\tthis._context = new Map<number, string>();\n\t}\n\n\tpublic hasCellViewModel() {\n\t\treturn !(this._cell instanceof CellSearchModel);\n\t}\n\n\tget context(): Map<number, string> {\n\t\treturn new Map(this._context);\n\t}\n\n\tmatches() {\n\t\treturn [...this._contentMatches.values(), ... this._webviewMatches.values()];\n\t}\n\n\tget contentMatches(): MatchInNotebook[] {\n\t\treturn Array.from(this._contentMatches.values());\n\t}\n\n\tget webviewMatches(): MatchInNotebook[] {\n\t\treturn Array.from(this._webviewMatches.values());\n\t}\n\n\tremove(matches: MatchInNotebook | MatchInNotebook[]): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\t\tfor (const match of matches) {\n\t\t\tthis._contentMatches.delete(match.id());\n\t\t\tthis._webviewMatches.delete(match.id());\n\t\t}\n\t}\n\n\tclearAllMatches() {\n\t\tthis._contentMatches.clear();\n\t\tthis._webviewMatches.clear();\n\t}\n\n\taddContentMatches(textSearchMatches: ITextSearchMatch[]) {\n\t\tconst contentMatches = textSearchMatchesToNotebookMatches(textSearchMatches, this);\n\t\tcontentMatches.forEach((match) => {\n\t\t\tthis._contentMatches.set(match.id(), match);\n\t\t});\n\t\tthis.addContext(textSearchMatches);\n\t}\n\n\tpublic addContext(textSearchMatches: ITextSearchMatch[]) {\n\t\tif (!this.cell) {\n\t\t\t// todo: get closed notebook results in search editor\n\t\t\treturn;\n\t\t}\n\t\tthis.cell.resolveTextModel().then((textModel) => {\n\t\t\tconst textResultsWithContext = getTextSearchMatchWithModelContext(textSearchMatches, textModel, this.parent.parent().query!);\n\t\t\tconst contexts = textResultsWithContext.filter((result => !resultIsMatch(result)) as ((a: any) => a is ITextSearchContext));\n\t\t\tcontexts.map(context => ({ ...context, lineNumber: context.lineNumber + 1 }))\n\t\t\t\t.forEach((context) => { this._context.set(context.lineNumber, context.text); });\n\t\t});\n\t}\n\n\taddWebviewMatches(textSearchMatches: ITextSearchMatch[]) {\n\t\tconst webviewMatches = textSearchMatchesToNotebookMatches(textSearchMatches, this);\n\t\twebviewMatches.forEach((match) => {\n\t\t\tthis._webviewMatches.set(match.id(), match);\n\t\t});\n\t\t// TODO: add webview results to context\n\t}\n\n\n\tsetCellModel(cell: ICellViewModel) {\n\t\tthis._cell = cell;\n\t}\n\n\tget parent(): FileMatch {\n\t\treturn this._parent;\n\t}\n\n\tget id(): string {\n\t\treturn this._cell?.id ?? `${rawCellPrefix}${this.cellIndex}`;\n\t}\n\n\tget cellIndex(): number {\n\t\treturn this._cellIndex;\n\t}\n\n\tget cell(): ICellViewModel | undefined {\n\t\treturn this._cell;\n\t}\n\n}\n\nexport class MatchInNotebook extends Match {\n\tprivate _webviewIndex: number | undefined;\n\n\tconstructor(private readonly _cellParent: CellMatch, _fullPreviewLines: string[], _fullPreviewRange: ISearchRange, _documentRange: ISearchRange, webviewIndex?: number) {\n\t\tsuper(_cellParent.parent, _fullPreviewLines, _fullPreviewRange, _documentRange, false);\n\t\tthis._id = this._parent.id() + '>' + this._cellParent.cellIndex + (webviewIndex ? '_' + webviewIndex : '') + '_' + this.notebookMatchTypeString() + this._range + this.getMatchString();\n\t\tthis._webviewIndex = webviewIndex;\n\t}\n\n\toverride parent(): FileMatch { // visible parent in search tree\n\t\treturn this._cellParent.parent;\n\t}\n\n\tget cellParent(): CellMatch {\n\t\treturn this._cellParent;\n\t}\n\n\tprivate notebookMatchTypeString(): string {\n\t\treturn this.isWebviewMatch() ? 'webview' : 'content';\n\t}\n\n\tpublic isWebviewMatch() {\n\t\treturn this._webviewIndex !== undefined;\n\t}\n\n\tpublic isReadonly() {\n\t\treturn (!this._cellParent.hasCellViewModel()) || this.isWebviewMatch();\n\t}\n\n\tget cellIndex() {\n\t\treturn this._cellParent.cellIndex;\n\t}\n\n\tget webviewIndex() {\n\t\treturn this._webviewIndex;\n\t}\n\n\tget cell() {\n\t\treturn this._cellParent.cell;\n\t}\n}\n\n\nexport class FileMatch extends Disposable implements IFileMatch {\n\n\tprivate static readonly _CURRENT_FIND_MATCH = ModelDecorationOptions.register({\n\t\tdescription: 'search-current-find-match',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tzIndex: 13,\n\t\tclassName: 'currentFindMatch',\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t},\n\t\tminimap: {\n\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\tposition: MinimapPosition.Inline\n\t\t}\n\t});\n\n\tprivate static readonly _FIND_MATCH = ModelDecorationOptions.register({\n\t\tdescription: 'search-find-match',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'findMatch',\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t},\n\t\tminimap: {\n\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\tposition: MinimapPosition.Inline\n\t\t}\n\t});\n\n\tprivate static getDecorationOption(selected: boolean): ModelDecorationOptions {\n\t\treturn (selected ? FileMatch._CURRENT_FIND_MATCH : FileMatch._FIND_MATCH);\n\t}\n\n\tprotected _onChange = this._register(new Emitter<{ didRemove?: boolean; forceUpdateModel?: boolean }>());\n\treadonly onChange: Event<{ didRemove?: boolean; forceUpdateModel?: boolean }> = this._onChange.event;\n\n\tprivate _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprivate _resource: URI;\n\tprivate _fileStat?: IFileStatWithPartialMetadata;\n\tprivate _model: ITextModel | null = null;\n\tprivate _modelListener: IDisposable | null = null;\n\tprivate _textMatches: Map<string, Match>;\n\tprivate _cellMatches: Map<string, CellMatch>;\n\n\tprivate _removedTextMatches: Set<string>;\n\tprivate _selectedMatch: Match | null = null;\n\tprivate _name: Lazy<string>;\n\n\tprivate _updateScheduler: RunOnceScheduler;\n\tprivate _modelDecorations: string[] = [];\n\n\tprivate _context: Map<number, string> = new Map();\n\n\tpublic get context(): Map<number, string> {\n\t\treturn new Map(this._context);\n\t}\n\n\tpublic get cellContext(): Map<string, Map<number, string>> {\n\t\tconst cellContext = new Map<string, Map<number, string>>();\n\t\tthis._cellMatches.forEach(cellMatch => {\n\t\t\tcellContext.set(cellMatch.id, cellMatch.context);\n\t\t});\n\t\treturn cellContext;\n\t}\n\n\t// #region notebook fields\n\tprivate _notebookEditorWidget: NotebookEditorWidget | null = null;\n\tprivate _editorWidgetListener: IDisposable | null = null;\n\tprivate _notebookUpdateScheduler: RunOnceScheduler;\n\tprivate _findMatchDecorationModel: FindMatchDecorationModel | undefined;\n\tprivate _lastEditorWidgetIdForUpdate: string | undefined;\n\t// #endregion\n\n\tconstructor(\n\t\tprivate _query: IPatternInfo,\n\t\tprivate _previewOptions: ITextSearchPreviewOptions | undefined,\n\t\tprivate _maxResults: number | undefined,\n\t\tprivate _parent: FolderMatch,\n\t\tprivate rawMatch: IFileMatch,\n\t\tprivate _closestRoot: FolderMatchWorkspaceRoot | null,\n\t\tprivate readonly searchInstanceID: string,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@INotebookEditorService private readonly notebookEditorService: INotebookEditorService,\n\t) {\n\t\tsuper();\n\t\tthis._resource = this.rawMatch.resource;\n\t\tthis._textMatches = new Map<string, Match>();\n\t\tthis._removedTextMatches = new Set<string>();\n\t\tthis._updateScheduler = new RunOnceScheduler(this.updateMatchesForModel.bind(this), 250);\n\t\tthis._name = new Lazy(() => labelService.getUriBasenameLabel(this.resource));\n\t\tthis._cellMatches = new Map<string, CellMatch>();\n\t\tthis._notebookUpdateScheduler = new RunOnceScheduler(this.updateMatchesForEditorWidget.bind(this), 250);\n\t}\n\n\taddWebviewMatchesToCell(cellID: string, webviewMatches: ITextSearchMatch[]) {\n\t\tconst cellMatch = this.getCellMatch(cellID);\n\t\tif (cellMatch !== undefined) {\n\t\t\tcellMatch.addWebviewMatches(webviewMatches);\n\t\t}\n\t}\n\n\taddContentMatchesToCell(cellID: string, contentMatches: ITextSearchMatch[]) {\n\t\tconst cellMatch = this.getCellMatch(cellID);\n\t\tif (cellMatch !== undefined) {\n\t\t\tcellMatch.addContentMatches(contentMatches);\n\t\t}\n\t}\n\n\tgetCellMatch(cellID: string): CellMatch | undefined {\n\t\treturn this._cellMatches.get(cellID);\n\t}\n\n\taddCellMatch(rawCell: INotebookCellMatchNoModel | INotebookCellMatchWithModel) {\n\t\tconst cellMatch = new CellMatch(this, isINotebookCellMatchWithModel(rawCell) ? rawCell.cell : undefined, rawCell.index);\n\t\tthis._cellMatches.set(cellMatch.id, cellMatch);\n\t\tthis.addWebviewMatchesToCell(cellMatch.id, rawCell.webviewResults);\n\t\tthis.addContentMatchesToCell(cellMatch.id, rawCell.contentResults);\n\t}\n\n\tget closestRoot(): FolderMatchWorkspaceRoot | null {\n\t\treturn this._closestRoot;\n\t}\n\n\thasReadonlyMatches(): boolean {\n\t\treturn this.matches().some(m => m instanceof MatchInNotebook && m.isReadonly());\n\t}\n\n\tcreateMatches(isAiContributed: boolean): void {\n\t\tconst model = this.modelService.getModel(this._resource);\n\t\tif (model && !isAiContributed) {\n\t\t\t// todo: handle better when ai contributed results has model, currently, createMatches does not work for this\n\t\t\tthis.bindModel(model);\n\t\t\tthis.updateMatchesForModel();\n\t\t} else {\n\t\t\tconst notebookEditorWidgetBorrow = this.notebookEditorService.retrieveExistingWidgetFromURI(this.resource);\n\n\t\t\tif (notebookEditorWidgetBorrow?.value) {\n\t\t\t\tthis.bindNotebookEditorWidget(notebookEditorWidgetBorrow.value);\n\t\t\t}\n\t\t\tif (this.rawMatch.results) {\n\t\t\t\tthis.rawMatch.results\n\t\t\t\t\t.filter(resultIsMatch)\n\t\t\t\t\t.forEach(rawMatch => {\n\t\t\t\t\t\ttextSearchResultToMatches(rawMatch, this, isAiContributed)\n\t\t\t\t\t\t\t.forEach(m => this.add(m));\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (isINotebookFileMatchWithModel(this.rawMatch) || isINotebookFileMatchNoModel(this.rawMatch)) {\n\t\t\t\tthis.rawMatch.cellResults?.forEach(cell => this.addCellMatch(cell));\n\t\t\t\tthis.setNotebookFindMatchDecorationsUsingCellMatches(this.cellMatches());\n\t\t\t\tthis._onChange.fire({ forceUpdateModel: true });\n\t\t\t}\n\t\t\tthis.addContext(this.rawMatch.results);\n\t\t}\n\t}\n\n\tbindModel(model: ITextModel): void {\n\t\tthis._model = model;\n\t\tthis._modelListener = this._model.onDidChangeContent(() => {\n\t\t\tthis._updateScheduler.schedule();\n\t\t});\n\t\tthis._model.onWillDispose(() => this.onModelWillDispose());\n\t\tthis.updateHighlights();\n\t}\n\n\tprivate onModelWillDispose(): void {\n\t\t// Update matches because model might have some dirty changes\n\t\tthis.updateMatchesForModel();\n\t\tthis.unbindModel();\n\t}\n\n\tprivate unbindModel(): void {\n\t\tif (this._model) {\n\t\t\tthis._updateScheduler.cancel();\n\t\t\tthis._model.changeDecorations((accessor) => {\n\t\t\t\tthis._modelDecorations = accessor.deltaDecorations(this._modelDecorations, []);\n\t\t\t});\n\t\t\tthis._model = null;\n\t\t\tthis._modelListener!.dispose();\n\t\t}\n\t}\n\n\tprivate updateMatchesForModel(): void {\n\t\t// this is called from a timeout and might fire\n\t\t// after the model has been disposed\n\t\tif (!this._model) {\n\t\t\treturn;\n\t\t}\n\t\tthis._textMatches = new Map<string, Match>();\n\n\t\tconst wordSeparators = this._query.isWordMatch && this._query.wordSeparators ? this._query.wordSeparators : null;\n\t\tconst matches = this._model\n\t\t\t.findMatches(this._query.pattern, this._model.getFullModelRange(), !!this._query.isRegExp, !!this._query.isCaseSensitive, wordSeparators, false, this._maxResults ?? DEFAULT_MAX_SEARCH_RESULTS);\n\n\t\tthis.updateMatches(matches, true, this._model, false);\n\t}\n\n\n\n\tprotected async updatesMatchesForLineAfterReplace(lineNumber: number, modelChange: boolean): Promise<void> {\n\t\tif (!this._model) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = {\n\t\t\tstartLineNumber: lineNumber,\n\t\t\tstartColumn: this._model.getLineMinColumn(lineNumber),\n\t\t\tendLineNumber: lineNumber,\n\t\t\tendColumn: this._model.getLineMaxColumn(lineNumber)\n\t\t};\n\t\tconst oldMatches = Array.from(this._textMatches.values()).filter(match => match.range().startLineNumber === lineNumber);\n\t\toldMatches.forEach(match => this._textMatches.delete(match.id()));\n\n\t\tconst wordSeparators = this._query.isWordMatch && this._query.wordSeparators ? this._query.wordSeparators : null;\n\t\tconst matches = this._model.findMatches(this._query.pattern, range, !!this._query.isRegExp, !!this._query.isCaseSensitive, wordSeparators, false, this._maxResults ?? DEFAULT_MAX_SEARCH_RESULTS);\n\t\tthis.updateMatches(matches, modelChange, this._model, false);\n\n\t\t// await this.updateMatchesForEditorWidget();\n\t}\n\n\n\n\tprivate updateMatches(matches: FindMatch[], modelChange: boolean, model: ITextModel, isAiContributed: boolean): void {\n\t\tconst textSearchResults = editorMatchesToTextSearchResults(matches, model, this._previewOptions);\n\t\ttextSearchResults.forEach(textSearchResult => {\n\t\t\ttextSearchResultToMatches(textSearchResult, this, isAiContributed).forEach(match => {\n\t\t\t\tif (!this._removedTextMatches.has(match.id())) {\n\t\t\t\t\tthis.add(match);\n\t\t\t\t\tif (this.isMatchSelected(match)) {\n\t\t\t\t\t\tthis._selectedMatch = match;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.addContext(getTextSearchMatchWithModelContext(textSearchResults, model, this.parent().parent().query!));\n\n\t\tthis._onChange.fire({ forceUpdateModel: modelChange });\n\t\tthis.updateHighlights();\n\t}\n\n\tupdateHighlights(): void {\n\t\tif (!this._model) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._model.changeDecorations((accessor) => {\n\t\t\tconst newDecorations = (\n\t\t\t\tthis.parent().showHighlights\n\t\t\t\t\t? this.matches().map((match): IModelDeltaDecoration => ({\n\t\t\t\t\t\trange: match.range(),\n\t\t\t\t\t\toptions: FileMatch.getDecorationOption(this.isMatchSelected(match))\n\t\t\t\t\t}))\n\t\t\t\t\t: []\n\t\t\t);\n\t\t\tthis._modelDecorations = accessor.deltaDecorations(this._modelDecorations, newDecorations);\n\t\t});\n\t}\n\n\tid(): string {\n\t\treturn this.resource.toString();\n\t}\n\n\tparent(): FolderMatch {\n\t\treturn this._parent;\n\t}\n\n\tmatches(): Match[] {\n\t\tconst cellMatches: MatchInNotebook[] = Array.from(this._cellMatches.values()).flatMap((e) => e.matches());\n\t\treturn [...this._textMatches.values(), ...cellMatches];\n\t}\n\n\ttextMatches(): Match[] {\n\t\treturn Array.from(this._textMatches.values());\n\t}\n\n\tcellMatches(): CellMatch[] {\n\t\treturn Array.from(this._cellMatches.values());\n\t}\n\n\tremove(matches: Match | Match[]): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\n\t\tfor (const match of matches) {\n\t\t\tthis.removeMatch(match);\n\t\t\tthis._removedTextMatches.add(match.id());\n\t\t}\n\n\t\tthis._onChange.fire({ didRemove: true });\n\t}\n\n\tprivate replaceQ = Promise.resolve();\n\tasync replace(toReplace: Match): Promise<void> {\n\t\treturn this.replaceQ = this.replaceQ.finally(async () => {\n\t\t\tawait this.replaceService.replace(toReplace);\n\t\t\tawait this.updatesMatchesForLineAfterReplace(toReplace.range().startLineNumber, false);\n\t\t});\n\t}\n\n\tsetSelectedMatch(match: Match | null): void {\n\t\tif (match) {\n\n\t\t\tif (!this.isMatchSelected(match) && match instanceof MatchInNotebook) {\n\t\t\t\tthis._selectedMatch = match;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._textMatches.has(match.id())) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.isMatchSelected(match)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._selectedMatch = match;\n\t\tthis.updateHighlights();\n\t}\n\n\tgetSelectedMatch(): Match | null {\n\t\treturn this._selectedMatch;\n\t}\n\n\tisMatchSelected(match: Match): boolean {\n\t\treturn !!this._selectedMatch && this._selectedMatch.id() === match.id();\n\t}\n\n\tcount(): number {\n\t\treturn this.matches().length;\n\t}\n\n\tget resource(): URI {\n\t\treturn this._resource;\n\t}\n\n\tname(): string {\n\t\treturn this._name.value;\n\t}\n\n\taddContext(results: ITextSearchResult[] | undefined) {\n\t\tif (!results) { return; }\n\n\t\tconst contexts = results\n\t\t\t.filter((result =>\n\t\t\t\t!resultIsMatch(result)) as ((a: any) => a is ITextSearchContext));\n\n\t\treturn contexts.forEach(context => this._context.set(context.lineNumber, context.text));\n\t}\n\n\tadd(match: Match, trigger?: boolean) {\n\t\tthis._textMatches.set(match.id(), match);\n\t\tif (trigger) {\n\t\t\tthis._onChange.fire({ forceUpdateModel: true });\n\t\t}\n\t}\n\n\tprivate removeMatch(match: Match) {\n\n\t\tif (match instanceof MatchInNotebook) {\n\t\t\tmatch.cellParent.remove(match);\n\t\t\tif (match.cellParent.matches().length === 0) {\n\t\t\t\tthis._cellMatches.delete(match.cellParent.id);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._textMatches.delete(match.id());\n\t\t}\n\t\tif (this.isMatchSelected(match)) {\n\t\t\tthis.setSelectedMatch(null);\n\t\t\tthis._findMatchDecorationModel?.clearCurrentFindMatchDecoration();\n\t\t} else {\n\t\t\tthis.updateHighlights();\n\t\t}\n\t\tif (match instanceof MatchInNotebook) {\n\t\t\tthis.setNotebookFindMatchDecorationsUsingCellMatches(this.cellMatches());\n\t\t}\n\t}\n\n\tasync resolveFileStat(fileService: IFileService): Promise<void> {\n\t\tthis._fileStat = await fileService.stat(this.resource).catch(() => undefined);\n\t}\n\n\tpublic get fileStat(): IFileStatWithPartialMetadata | undefined {\n\t\treturn this._fileStat;\n\t}\n\n\tpublic set fileStat(stat: IFileStatWithPartialMetadata | undefined) {\n\t\tthis._fileStat = stat;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.setSelectedMatch(null);\n\t\tthis.unbindModel();\n\t\tthis.unbindNotebookEditorWidget();\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n\n\thasOnlyReadOnlyMatches(): boolean {\n\t\treturn this.matches().every(match => (match instanceof MatchInNotebook && match.isReadonly()));\n\t}\n\n\t// #region strictly notebook methods\n\tbindNotebookEditorWidget(widget: NotebookEditorWidget) {\n\t\tif (this._notebookEditorWidget === widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._notebookEditorWidget = widget;\n\n\t\tthis._editorWidgetListener = this._notebookEditorWidget.textModel?.onDidChangeContent((e) => {\n\t\t\tif (!e.rawEvents.some(event => event.kind === NotebookCellsChangeType.ChangeCellContent || event.kind === NotebookCellsChangeType.ModelChange)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._notebookUpdateScheduler.schedule();\n\t\t}) ?? null;\n\t\tthis._addNotebookHighlights();\n\t}\n\n\tunbindNotebookEditorWidget(widget?: NotebookEditorWidget) {\n\t\tif (widget && this._notebookEditorWidget !== widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._notebookEditorWidget) {\n\t\t\tthis._notebookUpdateScheduler.cancel();\n\t\t\tthis._editorWidgetListener?.dispose();\n\t\t}\n\t\tthis._removeNotebookHighlights();\n\t\tthis._notebookEditorWidget = null;\n\t}\n\n\tupdateNotebookHighlights(): void {\n\t\tif (this.parent().showHighlights) {\n\t\t\tthis._addNotebookHighlights();\n\t\t\tthis.setNotebookFindMatchDecorationsUsingCellMatches(Array.from(this._cellMatches.values()));\n\t\t} else {\n\t\t\tthis._removeNotebookHighlights();\n\t\t}\n\t}\n\n\tprivate _addNotebookHighlights(): void {\n\t\tif (!this._notebookEditorWidget) {\n\t\t\treturn;\n\t\t}\n\t\tthis._findMatchDecorationModel?.stopWebviewFind();\n\t\tthis._findMatchDecorationModel?.dispose();\n\t\tthis._findMatchDecorationModel = new FindMatchDecorationModel(this._notebookEditorWidget, this.searchInstanceID);\n\t\tif (this._selectedMatch instanceof MatchInNotebook) {\n\t\t\tthis.highlightCurrentFindMatchDecoration(this._selectedMatch);\n\t\t}\n\t}\n\n\tprivate _removeNotebookHighlights(): void {\n\t\tif (this._findMatchDecorationModel) {\n\t\t\tthis._findMatchDecorationModel?.stopWebviewFind();\n\t\t\tthis._findMatchDecorationModel?.dispose();\n\t\t\tthis._findMatchDecorationModel = undefined;\n\t\t}\n\t}\n\n\tprivate updateNotebookMatches(matches: CellFindMatchWithIndex[], modelChange: boolean): void {\n\t\tif (!this._notebookEditorWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldCellMatches = new Map<string, CellMatch>(this._cellMatches);\n\t\tif (this._notebookEditorWidget.getId() !== this._lastEditorWidgetIdForUpdate) {\n\t\t\tthis._cellMatches.clear();\n\t\t\tthis._lastEditorWidgetIdForUpdate = this._notebookEditorWidget.getId();\n\t\t}\n\t\tmatches.forEach(match => {\n\t\t\tlet existingCell = this._cellMatches.get(match.cell.id);\n\t\t\tif (this._notebookEditorWidget && !existingCell) {\n\t\t\t\tconst index = this._notebookEditorWidget.getCellIndex(match.cell);\n\t\t\t\tconst existingRawCell = oldCellMatches.get(`${rawCellPrefix}${index}`);\n\t\t\t\tif (existingRawCell) {\n\t\t\t\t\texistingRawCell.setCellModel(match.cell);\n\t\t\t\t\texistingRawCell.clearAllMatches();\n\t\t\t\t\texistingCell = existingRawCell;\n\t\t\t\t}\n\t\t\t}\n\t\t\texistingCell?.clearAllMatches();\n\t\t\tconst cell = existingCell ?? new CellMatch(this, match.cell, match.index);\n\t\t\tcell.addContentMatches(contentMatchesToTextSearchMatches(match.contentMatches, match.cell));\n\t\t\tcell.addWebviewMatches(webviewMatchesToTextSearchMatches(match.webviewMatches));\n\t\t\tthis._cellMatches.set(cell.id, cell);\n\n\t\t});\n\n\t\tthis._findMatchDecorationModel?.setAllFindMatchesDecorations(matches);\n\t\tif (this._selectedMatch instanceof MatchInNotebook) {\n\t\t\tthis.highlightCurrentFindMatchDecoration(this._selectedMatch);\n\t\t}\n\t\tthis._onChange.fire({ forceUpdateModel: modelChange });\n\t}\n\n\tprivate setNotebookFindMatchDecorationsUsingCellMatches(cells: CellMatch[]): void {\n\t\tif (!this._findMatchDecorationModel) {\n\t\t\treturn;\n\t\t}\n\t\tconst cellFindMatch = coalesce(cells.map((cell): CellFindMatchModel | undefined => {\n\t\t\tconst webviewMatches: CellWebviewFindMatch[] = coalesce(cell.webviewMatches.map((match): CellWebviewFindMatch | undefined => {\n\t\t\t\tif (!match.webviewIndex) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tindex: match.webviewIndex,\n\t\t\t\t};\n\t\t\t}));\n\t\t\tif (!cell.cell) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst findMatches: FindMatch[] = cell.contentMatches.map(match => {\n\t\t\t\treturn new FindMatch(match.range(), [match.text()]);\n\t\t\t});\n\t\t\treturn new CellFindMatchModel(cell.cell, cell.cellIndex, findMatches, webviewMatches);\n\t\t}));\n\t\ttry {\n\t\t\tthis._findMatchDecorationModel.setAllFindMatchesDecorations(cellFindMatch);\n\t\t} catch (e) {\n\t\t\t// no op, might happen due to bugs related to cell output regex search\n\t\t}\n\t}\n\tasync updateMatchesForEditorWidget(): Promise<void> {\n\t\tif (!this._notebookEditorWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._textMatches = new Map<string, Match>();\n\n\t\tconst wordSeparators = this._query.isWordMatch && this._query.wordSeparators ? this._query.wordSeparators : null;\n\t\tconst allMatches = await this._notebookEditorWidget\n\t\t\t.find(this._query.pattern, {\n\t\t\t\tregex: this._query.isRegExp,\n\t\t\t\twholeWord: this._query.isWordMatch,\n\t\t\t\tcaseSensitive: this._query.isCaseSensitive,\n\t\t\t\twordSeparators: wordSeparators ?? undefined,\n\t\t\t\tincludeMarkupInput: this._query.notebookInfo?.isInNotebookMarkdownInput,\n\t\t\t\tincludeMarkupPreview: this._query.notebookInfo?.isInNotebookMarkdownPreview,\n\t\t\t\tincludeCodeInput: this._query.notebookInfo?.isInNotebookCellInput,\n\t\t\t\tincludeOutput: this._query.notebookInfo?.isInNotebookCellOutput,\n\t\t\t}, CancellationToken.None, false, true, this.searchInstanceID);\n\n\t\tthis.updateNotebookMatches(allMatches, true);\n\t}\n\n\tpublic async showMatch(match: MatchInNotebook) {\n\t\tconst offset = await this.highlightCurrentFindMatchDecoration(match);\n\t\tthis.setSelectedMatch(match);\n\t\tthis.revealCellRange(match, offset);\n\t}\n\n\tprivate async highlightCurrentFindMatchDecoration(match: MatchInNotebook): Promise<number | null> {\n\t\tif (!this._findMatchDecorationModel || !match.cell) {\n\t\t\t// match cell should never be a CellSearchModel if the notebook is open\n\t\t\treturn null;\n\t\t}\n\t\tif (match.webviewIndex === undefined) {\n\t\t\treturn this._findMatchDecorationModel.highlightCurrentFindMatchDecorationInCell(match.cell, match.range());\n\t\t} else {\n\t\t\treturn this._findMatchDecorationModel.highlightCurrentFindMatchDecorationInWebview(match.cell, match.webviewIndex);\n\t\t}\n\t}\n\n\tprivate revealCellRange(match: MatchInNotebook, outputOffset: number | null) {\n\t\tif (!this._notebookEditorWidget || !match.cell) {\n\t\t\t// match cell should never be a CellSearchModel if the notebook is open\n\t\t\treturn;\n\t\t}\n\t\tif (match.webviewIndex !== undefined) {\n\t\t\tconst index = this._notebookEditorWidget.getCellIndex(match.cell);\n\t\t\tif (index !== undefined) {\n\t\t\t\tthis._notebookEditorWidget.revealCellOffsetInCenter(match.cell, outputOffset ?? 0);\n\t\t\t}\n\t\t} else {\n\t\t\tmatch.cell.updateEditState(match.cell.getEditState(), 'focusNotebookCell');\n\t\t\tthis._notebookEditorWidget.setCellEditorSelection(match.cell, match.range());\n\t\t\tthis._notebookEditorWidget.revealRangeInCenterIfOutsideViewportAsync(match.cell, match.range());\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nexport interface IChangeEvent {\n\telements: FileMatch[];\n\tadded?: boolean;\n\tremoved?: boolean;\n\tclearingAll?: boolean;\n}\n\nexport class FolderMatch extends Disposable {\n\n\tprotected _onChange = this._register(new Emitter<IChangeEvent>());\n\treadonly onChange: Event<IChangeEvent> = this._onChange.event;\n\n\tprivate _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprotected _fileMatches: ResourceMap<FileMatch>;\n\tprotected _folderMatches: ResourceMap<FolderMatchWithResource>;\n\tprotected _folderMatchesMap: TernarySearchTree<URI, FolderMatchWithResource>;\n\tprotected _unDisposedFileMatches: ResourceMap<FileMatch>;\n\tprotected _unDisposedFolderMatches: ResourceMap<FolderMatchWithResource>;\n\tprivate _replacingAll: boolean = false;\n\tprivate _name: Lazy<string>;\n\n\tconstructor(\n\t\tprotected _resource: URI | null,\n\t\tprivate _id: string,\n\t\tprotected _index: number,\n\t\tprotected _query: ITextQuery,\n\t\tprivate _parent: SearchResult | FolderMatch,\n\t\tprivate _searchResult: SearchResult,\n\t\tprivate _closestRoot: FolderMatchWorkspaceRoot | null,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUriIdentityService protected readonly uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper();\n\t\tthis._fileMatches = new ResourceMap<FileMatch>();\n\t\tthis._folderMatches = new ResourceMap<FolderMatchWithResource>();\n\t\tthis._folderMatchesMap = TernarySearchTree.forUris<FolderMatchWithResource>(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n\t\tthis._unDisposedFileMatches = new ResourceMap<FileMatch>();\n\t\tthis._unDisposedFolderMatches = new ResourceMap<FolderMatchWithResource>();\n\t\tthis._name = new Lazy(() => this.resource ? labelService.getUriBasenameLabel(this.resource) : '');\n\t}\n\n\tget searchModel(): SearchModel {\n\t\treturn this._searchResult.searchModel;\n\t}\n\n\tget showHighlights(): boolean {\n\t\treturn this._parent.showHighlights;\n\t}\n\n\tget closestRoot(): FolderMatchWorkspaceRoot | null {\n\t\treturn this._closestRoot;\n\t}\n\n\tset replacingAll(b: boolean) {\n\t\tthis._replacingAll = b;\n\t}\n\n\tid(): string {\n\t\treturn this._id;\n\t}\n\n\tget resource(): URI | null {\n\t\treturn this._resource;\n\t}\n\n\tindex(): number {\n\t\treturn this._index;\n\t}\n\n\tname(): string {\n\t\treturn this._name.value;\n\t}\n\n\tparent(): SearchResult | FolderMatch {\n\t\treturn this._parent;\n\t}\n\n\tbindModel(model: ITextModel): void {\n\t\tconst fileMatch = this._fileMatches.get(model.uri);\n\n\t\tif (fileMatch) {\n\t\t\tfileMatch.bindModel(model);\n\t\t} else {\n\t\t\tconst folderMatch = this.getFolderMatch(model.uri);\n\t\t\tconst match = folderMatch?.getDownstreamFileMatch(model.uri);\n\t\t\tmatch?.bindModel(model);\n\t\t}\n\t}\n\n\tasync bindNotebookEditorWidget(editor: NotebookEditorWidget, resource: URI) {\n\t\tconst fileMatch = this._fileMatches.get(resource);\n\n\t\tif (fileMatch) {\n\t\t\tfileMatch.bindNotebookEditorWidget(editor);\n\t\t\tawait fileMatch.updateMatchesForEditorWidget();\n\t\t} else {\n\t\t\tconst folderMatches = this.folderMatchesIterator();\n\t\t\tfor (const elem of folderMatches) {\n\t\t\t\tawait elem.bindNotebookEditorWidget(editor, resource);\n\t\t\t}\n\t\t}\n\t}\n\n\tunbindNotebookEditorWidget(editor: NotebookEditorWidget, resource: URI) {\n\t\tconst fileMatch = this._fileMatches.get(resource);\n\n\t\tif (fileMatch) {\n\t\t\tfileMatch.unbindNotebookEditorWidget(editor);\n\t\t} else {\n\t\t\tconst folderMatches = this.folderMatchesIterator();\n\t\t\tfor (const elem of folderMatches) {\n\t\t\t\telem.unbindNotebookEditorWidget(editor, resource);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tpublic createIntermediateFolderMatch(resource: URI, id: string, index: number, query: ITextQuery, baseWorkspaceFolder: FolderMatchWorkspaceRoot): FolderMatchWithResource {\n\t\tconst folderMatch = this._register(this.instantiationService.createInstance(FolderMatchWithResource, resource, id, index, query, this, this._searchResult, baseWorkspaceFolder));\n\t\tthis.configureIntermediateMatch(folderMatch);\n\t\tthis.doAddFolder(folderMatch);\n\t\treturn folderMatch;\n\t}\n\n\tpublic configureIntermediateMatch(folderMatch: FolderMatchWithResource) {\n\t\tconst disposable = folderMatch.onChange((event) => this.onFolderChange(folderMatch, event));\n\t\tthis._register(folderMatch.onDispose(() => disposable.dispose()));\n\t}\n\n\tclear(clearingAll = false): void {\n\t\tconst changed: FileMatch[] = this.allDownstreamFileMatches();\n\t\tthis.disposeMatches();\n\t\tthis._onChange.fire({ elements: changed, removed: true, added: false, clearingAll });\n\t}\n\n\tremove(matches: FileMatch | FolderMatchWithResource | (FileMatch | FolderMatchWithResource)[]): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\t\tconst allMatches = getFileMatches(matches);\n\t\tthis.doRemoveFile(allMatches);\n\t}\n\n\tasync replace(match: FileMatch): Promise<any> {\n\t\treturn this.replaceService.replace([match]).then(() => {\n\t\t\tthis.doRemoveFile([match], true, true, true);\n\t\t});\n\t}\n\n\treplaceAll(): Promise<any> {\n\t\tconst matches = this.matches();\n\t\treturn this.batchReplace(matches);\n\t}\n\n\tmatches(): (FileMatch | FolderMatchWithResource)[] {\n\t\treturn [...this.fileMatchesIterator(), ...this.folderMatchesIterator()];\n\t}\n\n\tfileMatchesIterator(): IterableIterator<FileMatch> {\n\t\treturn this._fileMatches.values();\n\t}\n\n\tfolderMatchesIterator(): IterableIterator<FolderMatchWithResource> {\n\t\treturn this._folderMatches.values();\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn (this.fileCount() + this.folderCount()) === 0;\n\t}\n\n\tgetDownstreamFileMatch(uri: URI): FileMatch | null {\n\t\tconst directChildFileMatch = this._fileMatches.get(uri);\n\t\tif (directChildFileMatch) {\n\t\t\treturn directChildFileMatch;\n\t\t}\n\n\t\tconst folderMatch = this.getFolderMatch(uri);\n\t\tconst match = folderMatch?.getDownstreamFileMatch(uri);\n\t\tif (match) {\n\t\t\treturn match;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tallDownstreamFileMatches(): FileMatch[] {\n\t\tlet recursiveChildren: FileMatch[] = [];\n\t\tconst iterator = this.folderMatchesIterator();\n\t\tfor (const elem of iterator) {\n\t\t\trecursiveChildren = recursiveChildren.concat(elem.allDownstreamFileMatches());\n\t\t}\n\n\t\treturn [...this.fileMatchesIterator(), ...recursiveChildren];\n\t}\n\n\tprivate fileCount(): number {\n\t\treturn this._fileMatches.size;\n\t}\n\n\tprivate folderCount(): number {\n\t\treturn this._folderMatches.size;\n\t}\n\n\tcount(): number {\n\t\treturn this.fileCount() + this.folderCount();\n\t}\n\n\trecursiveFileCount(): number {\n\t\treturn this.allDownstreamFileMatches().length;\n\t}\n\n\trecursiveMatchCount(): number {\n\t\treturn this.allDownstreamFileMatches().reduce<number>((prev, match) => prev + match.count(), 0);\n\t}\n\n\tget query(): ITextQuery | null {\n\t\treturn this._query;\n\t}\n\n\taddFileMatch(raw: IFileMatch[], silent: boolean, searchInstanceID: string, isAiContributed: boolean): void {\n\t\t// when adding a fileMatch that has intermediate directories\n\t\tconst added: FileMatch[] = [];\n\t\tconst updated: FileMatch[] = [];\n\n\t\traw.forEach(rawFileMatch => {\n\t\t\tconst existingFileMatch = this.getDownstreamFileMatch(rawFileMatch.resource);\n\t\t\tif (existingFileMatch) {\n\n\t\t\t\tif (rawFileMatch.results) {\n\t\t\t\t\trawFileMatch\n\t\t\t\t\t\t.results\n\t\t\t\t\t\t.filter(resultIsMatch)\n\t\t\t\t\t\t.forEach(m => {\n\t\t\t\t\t\t\ttextSearchResultToMatches(m, existingFileMatch, isAiContributed)\n\t\t\t\t\t\t\t\t.forEach(m => existingFileMatch.add(m));\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// add cell matches\n\t\t\t\tif (isINotebookFileMatchWithModel(rawFileMatch) || isINotebookFileMatchNoModel(rawFileMatch)) {\n\t\t\t\t\trawFileMatch.cellResults?.forEach(rawCellMatch => {\n\t\t\t\t\t\tconst existingCellMatch = existingFileMatch.getCellMatch(getIDFromINotebookCellMatch(rawCellMatch));\n\t\t\t\t\t\tif (existingCellMatch) {\n\t\t\t\t\t\t\texistingCellMatch.addContentMatches(rawCellMatch.contentResults);\n\t\t\t\t\t\t\texistingCellMatch.addWebviewMatches(rawCellMatch.webviewResults);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\texistingFileMatch.addCellMatch(rawCellMatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tupdated.push(existingFileMatch);\n\n\t\t\t\tif (rawFileMatch.results && rawFileMatch.results.length > 0) {\n\t\t\t\t\texistingFileMatch.addContext(rawFileMatch.results);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this instanceof FolderMatchWorkspaceRoot || this instanceof FolderMatchNoRoot) {\n\t\t\t\t\tconst fileMatch = this.createAndConfigureFileMatch(rawFileMatch, searchInstanceID);\n\t\t\t\t\tadded.push(fileMatch);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst elements = [...added, ...updated];\n\t\tif (!silent && elements.length) {\n\t\t\tthis._onChange.fire({ elements, added: !!added.length });\n\t\t}\n\t}\n\n\tdoAddFile(fileMatch: FileMatch): void {\n\t\tthis._fileMatches.set(fileMatch.resource, fileMatch);\n\t\tif (this._unDisposedFileMatches.has(fileMatch.resource)) {\n\t\t\tthis._unDisposedFileMatches.delete(fileMatch.resource);\n\t\t}\n\t}\n\n\thasOnlyReadOnlyMatches(): boolean {\n\t\treturn Array.from(this._fileMatches.values()).every(fm => fm.hasOnlyReadOnlyMatches());\n\t}\n\n\tprotected uriHasParent(parent: URI, child: URI) {\n\t\treturn this.uriIdentityService.extUri.isEqualOrParent(child, parent) && !this.uriIdentityService.extUri.isEqual(child, parent);\n\t}\n\n\tprivate isInParentChain(folderMatch: FolderMatchWithResource) {\n\n\t\tlet matchItem: FolderMatch | SearchResult = this;\n\t\twhile (matchItem instanceof FolderMatch) {\n\t\t\tif (matchItem.id() === folderMatch.id()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tmatchItem = matchItem.parent();\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getFolderMatch(resource: URI): FolderMatchWithResource | undefined {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(resource);\n\t\treturn folderMatch;\n\t}\n\n\tdoAddFolder(folderMatch: FolderMatchWithResource) {\n\t\tif (this instanceof FolderMatchWithResource && !this.uriHasParent(this.resource, folderMatch.resource)) {\n\t\t\tthrow Error(`${folderMatch.resource} does not belong as a child of ${this.resource}`);\n\t\t} else if (this.isInParentChain(folderMatch)) {\n\t\t\tthrow Error(`${folderMatch.resource} is a parent of ${this.resource}`);\n\t\t}\n\n\t\tthis._folderMatches.set(folderMatch.resource, folderMatch);\n\t\tthis._folderMatchesMap.set(folderMatch.resource, folderMatch);\n\t\tif (this._unDisposedFolderMatches.has(folderMatch.resource)) {\n\t\t\tthis._unDisposedFolderMatches.delete(folderMatch.resource);\n\t\t}\n\t}\n\n\tprivate async batchReplace(matches: (FileMatch | FolderMatchWithResource)[]): Promise<any> {\n\t\tconst allMatches = getFileMatches(matches);\n\n\t\tawait this.replaceService.replace(allMatches);\n\t\tthis.doRemoveFile(allMatches, true, true, true);\n\t}\n\n\tpublic onFileChange(fileMatch: FileMatch, removed = false): void {\n\t\tlet added = false;\n\t\tif (!this._fileMatches.has(fileMatch.resource)) {\n\t\t\tthis.doAddFile(fileMatch);\n\t\t\tadded = true;\n\t\t}\n\t\tif (fileMatch.count() === 0) {\n\t\t\tthis.doRemoveFile([fileMatch], false, false);\n\t\t\tadded = false;\n\t\t\tremoved = true;\n\t\t}\n\t\tif (!this._replacingAll) {\n\t\t\tthis._onChange.fire({ elements: [fileMatch], added: added, removed: removed });\n\t\t}\n\t}\n\n\tpublic onFolderChange(folderMatch: FolderMatchWithResource, event: IChangeEvent): void {\n\t\tif (!this._folderMatches.has(folderMatch.resource)) {\n\t\t\tthis.doAddFolder(folderMatch);\n\t\t}\n\t\tif (folderMatch.isEmpty()) {\n\t\t\tthis._folderMatches.delete(folderMatch.resource);\n\t\t\tfolderMatch.dispose();\n\t\t}\n\n\t\tthis._onChange.fire(event);\n\t}\n\n\tprivate doRemoveFile(fileMatches: FileMatch[], dispose: boolean = true, trigger: boolean = true, keepReadonly = false): void {\n\n\t\tconst removed = [];\n\t\tfor (const match of fileMatches as FileMatch[]) {\n\t\t\tif (this._fileMatches.get(match.resource)) {\n\t\t\t\tif (keepReadonly && match.hasReadonlyMatches()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._fileMatches.delete(match.resource);\n\t\t\t\tif (dispose) {\n\t\t\t\t\tmatch.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tthis._unDisposedFileMatches.set(match.resource, match);\n\t\t\t\t}\n\t\t\t\tremoved.push(match);\n\t\t\t} else {\n\t\t\t\tconst folder = this.getFolderMatch(match.resource);\n\t\t\t\tif (folder) {\n\t\t\t\t\tfolder.doRemoveFile([match], dispose, trigger);\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error(`FileMatch ${match.resource} is not located within FolderMatch ${this.resource}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (trigger) {\n\t\t\tthis._onChange.fire({ elements: removed, removed: true });\n\t\t}\n\t}\n\n\tprivate disposeMatches(): void {\n\t\t[...this._fileMatches.values()].forEach((fileMatch: FileMatch) => fileMatch.dispose());\n\t\t[...this._folderMatches.values()].forEach((folderMatch: FolderMatch) => folderMatch.disposeMatches());\n\t\t[...this._unDisposedFileMatches.values()].forEach((fileMatch: FileMatch) => fileMatch.dispose());\n\t\t[...this._unDisposedFolderMatches.values()].forEach((folderMatch: FolderMatch) => folderMatch.disposeMatches());\n\t\tthis._fileMatches.clear();\n\t\tthis._folderMatches.clear();\n\t\tthis._unDisposedFileMatches.clear();\n\t\tthis._unDisposedFolderMatches.clear();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposeMatches();\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\nexport class FolderMatchWithResource extends FolderMatch {\n\n\tprotected _normalizedResource: Lazy<URI>;\n\n\tconstructor(_resource: URI, _id: string, _index: number, _query: ITextQuery, _parent: SearchResult | FolderMatch, _searchResult: SearchResult, _closestRoot: FolderMatchWorkspaceRoot | null,\n\t\t@IReplaceService replaceService: IReplaceService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(_resource, _id, _index, _query, _parent, _searchResult, _closestRoot, replaceService, instantiationService, labelService, uriIdentityService);\n\t\tthis._normalizedResource = new Lazy(() => this.uriIdentityService.extUri.removeTrailingPathSeparator(this.uriIdentityService.extUri.normalizePath(\n\t\t\tthis.resource)));\n\t}\n\n\toverride get resource(): URI {\n\t\treturn this._resource!;\n\t}\n\n\tget normalizedResource(): URI {\n\t\treturn this._normalizedResource.value;\n\t}\n}\n\n/**\n * FolderMatchWorkspaceRoot => folder for workspace root\n */\nexport class FolderMatchWorkspaceRoot extends FolderMatchWithResource {\n\tconstructor(_resource: URI, _id: string, _index: number, _query: ITextQuery, _parent: SearchResult, private readonly _ai: boolean,\n\t\t@IReplaceService replaceService: IReplaceService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(_resource, _id, _index, _query, _parent, _parent, null, replaceService, instantiationService, labelService, uriIdentityService);\n\t}\n\n\tprivate normalizedUriParent(uri: URI): URI {\n\t\treturn this.uriIdentityService.extUri.normalizePath(this.uriIdentityService.extUri.dirname(uri));\n\t}\n\n\tprivate uriEquals(uri1: URI, ur2: URI): boolean {\n\t\treturn this.uriIdentityService.extUri.isEqual(uri1, ur2);\n\t}\n\n\tprivate createFileMatch(query: IPatternInfo, previewOptions: ITextSearchPreviewOptions | undefined, maxResults: number | undefined, parent: FolderMatch, rawFileMatch: IFileMatch, closestRoot: FolderMatchWorkspaceRoot | null, searchInstanceID: string): FileMatch {\n\t\tconst fileMatch =\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tFileMatch,\n\t\t\t\tquery,\n\t\t\t\tpreviewOptions,\n\t\t\t\tmaxResults,\n\t\t\t\tparent,\n\t\t\t\trawFileMatch,\n\t\t\t\tclosestRoot,\n\t\t\t\tsearchInstanceID\n\t\t\t);\n\t\tfileMatch.createMatches(this._ai);\n\t\tparent.doAddFile(fileMatch);\n\t\tconst disposable = fileMatch.onChange(({ didRemove }) => parent.onFileChange(fileMatch, didRemove));\n\t\tthis._register(fileMatch.onDispose(() => disposable.dispose()));\n\t\treturn fileMatch;\n\t}\n\n\tcreateAndConfigureFileMatch(rawFileMatch: IFileMatch<URI>, searchInstanceID: string): FileMatch {\n\n\t\tif (!this.uriHasParent(this.resource, rawFileMatch.resource)) {\n\t\t\tthrow Error(`${rawFileMatch.resource} is not a descendant of ${this.resource}`);\n\t\t}\n\n\t\tconst fileMatchParentParts: URI[] = [];\n\t\tlet uri = this.normalizedUriParent(rawFileMatch.resource);\n\n\t\twhile (!this.uriEquals(this.normalizedResource, uri)) {\n\t\t\tfileMatchParentParts.unshift(uri);\n\t\t\tconst prevUri = uri;\n\t\t\turi = this.uriIdentityService.extUri.removeTrailingPathSeparator(this.normalizedUriParent(uri));\n\t\t\tif (this.uriEquals(prevUri, uri)) {\n\t\t\t\tthrow Error(`${rawFileMatch.resource} is not correctly configured as a child of ${this.normalizedResource}`);\n\t\t\t}\n\t\t}\n\n\t\tconst root = this.closestRoot ?? this;\n\t\tlet parent: FolderMatch = this;\n\t\tfor (let i = 0; i < fileMatchParentParts.length; i++) {\n\t\t\tlet folderMatch: FolderMatchWithResource | undefined = parent.getFolderMatch(fileMatchParentParts[i]);\n\t\t\tif (!folderMatch) {\n\t\t\t\tfolderMatch = parent.createIntermediateFolderMatch(fileMatchParentParts[i], fileMatchParentParts[i].toString(), -1, this._query, root);\n\t\t\t}\n\t\t\tparent = folderMatch;\n\t\t}\n\n\t\treturn this.createFileMatch(this._query.contentPattern, this._query.previewOptions, this._query.maxResults, parent, rawFileMatch, root, searchInstanceID);\n\t}\n}\n\n/**\n * BaseFolderMatch => optional resource (\"other files\" node)\n * FolderMatch => required resource (normal folder node)\n */\nexport class FolderMatchNoRoot extends FolderMatch {\n\tconstructor(_id: string, _index: number, _query: ITextQuery, _parent: SearchResult,\n\t\t@IReplaceService replaceService: IReplaceService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\n\t) {\n\t\tsuper(null, _id, _index, _query, _parent, _parent, null, replaceService, instantiationService, labelService, uriIdentityService);\n\t}\n\n\tcreateAndConfigureFileMatch(rawFileMatch: IFileMatch, searchInstanceID: string): FileMatch {\n\t\tconst fileMatch = this._register(this.instantiationService.createInstance(\n\t\t\tFileMatch,\n\t\t\tthis._query.contentPattern,\n\t\t\tthis._query.previewOptions,\n\t\t\tthis._query.maxResults,\n\t\t\tthis, rawFileMatch,\n\t\t\tnull,\n\t\t\tsearchInstanceID));\n\t\tfileMatch.createMatches(false); // currently, no support for AI results in out-of-workspace files\n\t\tthis.doAddFile(fileMatch);\n\t\tconst disposable = fileMatch.onChange(({ didRemove }) => this.onFileChange(fileMatch, didRemove));\n\t\tthis._register(fileMatch.onDispose(() => disposable.dispose()));\n\t\treturn fileMatch;\n\t}\n}\n\nlet elemAIndex: number = -1;\nlet elemBIndex: number = -1;\n/**\n * Compares instances of the same match type. Different match types should not be siblings\n * and their sort order is undefined.\n */\nexport function searchMatchComparer(elementA: RenderableMatch, elementB: RenderableMatch, sortOrder: SearchSortOrder = SearchSortOrder.Default): number {\n\n\tif (elementA instanceof FileMatch && elementB instanceof FolderMatch) {\n\t\treturn 1;\n\t}\n\n\tif (elementB instanceof FileMatch && elementA instanceof FolderMatch) {\n\t\treturn -1;\n\t}\n\n\tif (elementA instanceof FolderMatch && elementB instanceof FolderMatch) {\n\t\telemAIndex = elementA.index();\n\t\telemBIndex = elementB.index();\n\t\tif (elemAIndex !== -1 && elemBIndex !== -1) {\n\t\t\treturn elemAIndex - elemBIndex;\n\t\t}\n\n\t\tswitch (sortOrder) {\n\t\t\tcase SearchSortOrder.CountDescending:\n\t\t\t\treturn elementB.count() - elementA.count();\n\t\t\tcase SearchSortOrder.CountAscending:\n\t\t\t\treturn elementA.count() - elementB.count();\n\t\t\tcase SearchSortOrder.Type:\n\t\t\t\treturn compareFileExtensions(elementA.name(), elementB.name());\n\t\t\tcase SearchSortOrder.FileNames:\n\t\t\t\treturn compareFileNames(elementA.name(), elementB.name());\n\t\t\t// Fall through otherwise\n\t\t\tdefault:\n\t\t\t\tif (!elementA.resource || !elementB.resource) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn comparePaths(elementA.resource.fsPath, elementB.resource.fsPath) || compareFileNames(elementA.name(), elementB.name());\n\t\t}\n\t}\n\n\tif (elementA instanceof FileMatch && elementB instanceof FileMatch) {\n\t\tswitch (sortOrder) {\n\t\t\tcase SearchSortOrder.CountDescending:\n\t\t\t\treturn elementB.count() - elementA.count();\n\t\t\tcase SearchSortOrder.CountAscending:\n\t\t\t\treturn elementA.count() - elementB.count();\n\t\t\tcase SearchSortOrder.Type:\n\t\t\t\treturn compareFileExtensions(elementA.name(), elementB.name());\n\t\t\tcase SearchSortOrder.FileNames:\n\t\t\t\treturn compareFileNames(elementA.name(), elementB.name());\n\t\t\tcase SearchSortOrder.Modified: {\n\t\t\t\tconst fileStatA = elementA.fileStat;\n\t\t\t\tconst fileStatB = elementB.fileStat;\n\t\t\t\tif (fileStatA && fileStatB) {\n\t\t\t\t\treturn fileStatB.mtime - fileStatA.mtime;\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Fall through otherwise\n\t\t\tdefault:\n\t\t\t\treturn comparePaths(elementA.resource.fsPath, elementB.resource.fsPath) || compareFileNames(elementA.name(), elementB.name());\n\t\t}\n\t}\n\n\tif (elementA instanceof MatchInNotebook && elementB instanceof MatchInNotebook) {\n\t\treturn compareNotebookPos(elementA, elementB);\n\t}\n\n\tif (elementA instanceof Match && elementB instanceof Match) {\n\t\treturn Range.compareRangesUsingStarts(elementA.range(), elementB.range());\n\t}\n\n\treturn 0;\n}\n\nexport function compareNotebookPos(match1: MatchInNotebook, match2: MatchInNotebook): number {\n\tif (match1.cellIndex === match2.cellIndex) {\n\n\t\tif (match1.webviewIndex !== undefined && match2.webviewIndex !== undefined) {\n\t\t\treturn match1.webviewIndex - match2.webviewIndex;\n\t\t} else if (match1.webviewIndex === undefined && match2.webviewIndex === undefined) {\n\t\t\treturn Range.compareRangesUsingStarts(match1.range(), match2.range());\n\t\t} else {\n\t\t\t// webview matches should always be after content matches\n\t\t\tif (match1.webviewIndex !== undefined) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t} else if (match1.cellIndex < match2.cellIndex) {\n\t\treturn -1;\n\t} else {\n\t\treturn 1;\n\t}\n}\nexport function searchComparer(elementA: RenderableMatch, elementB: RenderableMatch, sortOrder: SearchSortOrder = SearchSortOrder.Default): number {\n\tconst elemAParents = createParentList(elementA);\n\tconst elemBParents = createParentList(elementB);\n\n\tlet i = elemAParents.length - 1;\n\tlet j = elemBParents.length - 1;\n\twhile (i >= 0 && j >= 0) {\n\t\tif (elemAParents[i].id() !== elemBParents[j].id()) {\n\t\t\treturn searchMatchComparer(elemAParents[i], elemBParents[j], sortOrder);\n\t\t}\n\t\ti--;\n\t\tj--;\n\t}\n\tconst elemAAtEnd = i === 0;\n\tconst elemBAtEnd = j === 0;\n\n\tif (elemAAtEnd && !elemBAtEnd) {\n\t\treturn 1;\n\t} else if (!elemAAtEnd && elemBAtEnd) {\n\t\treturn -1;\n\t}\n\treturn 0;\n}\n\nfunction createParentList(element: RenderableMatch): RenderableMatch[] {\n\tconst parentArray: RenderableMatch[] = [];\n\tlet currElement: RenderableMatch | SearchResult = element;\n\n\twhile (!(currElement instanceof SearchResult)) {\n\t\tparentArray.push(currElement);\n\t\tcurrElement = currElement.parent();\n\t}\n\n\treturn parentArray;\n}\n\nexport class SearchResult extends Disposable {\n\n\tprivate _onChange = this._register(new PauseableEmitter<IChangeEvent>({\n\t\tmerge: mergeSearchResultEvents\n\t}));\n\treadonly onChange: Event<IChangeEvent> = this._onChange.event;\n\tprivate _folderMatches: FolderMatchWorkspaceRoot[] = [];\n\tprivate _aiFolderMatches: FolderMatchWorkspaceRoot[] = [];\n\tprivate _otherFilesMatch: FolderMatch | null = null;\n\tprivate _folderMatchesMap: TernarySearchTree<URI, FolderMatchWithResource> = TernarySearchTree.forUris<FolderMatchWorkspaceRoot>(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n\tprivate _aiFolderMatchesMap: TernarySearchTree<URI, FolderMatchWithResource> = TernarySearchTree.forUris<FolderMatchWorkspaceRoot>(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n\tprivate _showHighlights: boolean = false;\n\tprivate _query: ITextQuery | null = null;\n\tprivate _rangeHighlightDecorations: RangeHighlightDecorations;\n\tprivate disposePastResults: () => Promise<void> = () => Promise.resolve();\n\tprivate _isDirty = false;\n\tprivate _onWillChangeModelListener: IDisposable | undefined;\n\tprivate _onDidChangeModelListener: IDisposable | undefined;\n\n\tprivate _cachedSearchComplete: ISearchComplete | undefined;\n\tprivate _aiCachedSearchComplete: ISearchComplete | undefined;\n\n\tconstructor(\n\t\tpublic readonly searchModel: SearchModel,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@INotebookEditorService private readonly notebookEditorService: INotebookEditorService,\n\t) {\n\t\tsuper();\n\t\tthis._rangeHighlightDecorations = this.instantiationService.createInstance(RangeHighlightDecorations);\n\t\tthis.modelService.getModels().forEach(model => this.onModelAdded(model));\n\t\tthis._register(this.modelService.onModelAdded(model => this.onModelAdded(model)));\n\n\t\tthis._register(this.notebookEditorService.onDidAddNotebookEditor(widget => {\n\t\t\tif (widget instanceof NotebookEditorWidget) {\n\t\t\t\tthis.onDidAddNotebookEditorWidget(<NotebookEditorWidget>widget);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.onChange(e => {\n\t\t\tif (e.removed) {\n\t\t\t\tthis._isDirty = !this.isEmpty() || !this.isEmpty(true);\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync batchReplace(elementsToReplace: RenderableMatch[]) {\n\t\ttry {\n\t\t\tthis._onChange.pause();\n\t\t\tawait Promise.all(elementsToReplace.map(async (elem) => {\n\t\t\t\tconst parent = elem.parent();\n\n\t\t\t\tif ((parent instanceof FolderMatch || parent instanceof FileMatch) && arrayContainsElementOrParent(parent, elementsToReplace)) {\n\t\t\t\t\t// skip any children who have parents in the array\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (elem instanceof FileMatch) {\n\t\t\t\t\tawait elem.parent().replace(elem);\n\t\t\t\t} else if (elem instanceof Match) {\n\t\t\t\t\tawait elem.parent().replace(elem);\n\t\t\t\t} else if (elem instanceof FolderMatch) {\n\t\t\t\t\tawait elem.replaceAll();\n\t\t\t\t}\n\t\t\t}));\n\t\t} finally {\n\t\t\tthis._onChange.resume();\n\t\t}\n\t}\n\n\tbatchRemove(elementsToRemove: RenderableMatch[]) {\n\t\t// need to check that we aren't trying to remove elements twice\n\t\tconst removedElems: RenderableMatch[] = [];\n\n\t\ttry {\n\t\t\tthis._onChange.pause();\n\t\t\telementsToRemove.forEach((currentElement) => {\n\t\t\t\tif (!arrayContainsElementOrParent(currentElement, removedElems)) {\n\t\t\t\t\tcurrentElement.parent().remove(<(FolderMatch | FileMatch)[] & Match & FileMatch[]>currentElement);\n\t\t\t\t\tremovedElems.push(currentElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t} finally {\n\t\t\tthis._onChange.resume();\n\t\t}\n\t}\n\n\tget isDirty(): boolean {\n\t\treturn this._isDirty;\n\t}\n\n\tget query(): ITextQuery | null {\n\t\treturn this._query;\n\t}\n\n\tset query(query: ITextQuery | null) {\n\t\t// When updating the query we could change the roots, so keep a reference to them to clean up when we trigger `disposePastResults`\n\t\tconst oldFolderMatches = this.folderMatches();\n\t\tthis.disposePastResults = async () => {\n\t\t\toldFolderMatches.forEach(match => match.clear());\n\t\t\toldFolderMatches.forEach(match => match.dispose());\n\t\t\tthis._isDirty = false;\n\t\t};\n\n\t\tthis._cachedSearchComplete = undefined;\n\t\tthis._aiCachedSearchComplete = undefined;\n\n\t\tthis._rangeHighlightDecorations.removeHighlightRange();\n\t\tthis._folderMatchesMap = TernarySearchTree.forUris<FolderMatchWithResource>(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n\t\tthis._aiFolderMatchesMap = TernarySearchTree.forUris<FolderMatchWithResource>(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n\n\t\tif (!query) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._folderMatches = (query && query.folderQueries || [])\n\t\t\t.map(fq => fq.folder)\n\t\t\t.map((resource, index) => <FolderMatchWorkspaceRoot>this._createBaseFolderMatch(resource, resource.toString(), index, query, false));\n\n\t\tthis._folderMatches.forEach(fm => this._folderMatchesMap.set(fm.resource, fm));\n\n\t\tthis._aiFolderMatches = (query && query.folderQueries || [])\n\t\t\t.map(fq => fq.folder)\n\t\t\t.map((resource, index) => <FolderMatchWorkspaceRoot>this._createBaseFolderMatch(resource, resource.toString(), index, query, true));\n\n\t\tthis._aiFolderMatches.forEach(fm => this._aiFolderMatchesMap.set(fm.resource, fm));\n\n\t\tthis._otherFilesMatch = <FolderMatchNoRoot>this._createBaseFolderMatch(null, 'otherFiles', this._folderMatches.length + this._aiFolderMatches.length + 1, query, false);\n\n\t\tthis._query = query;\n\t}\n\n\tsetCachedSearchComplete(cachedSearchComplete: ISearchComplete | undefined, ai: boolean) {\n\t\tif (ai) {\n\t\t\tthis._aiCachedSearchComplete = cachedSearchComplete;\n\t\t} else {\n\t\t\tthis._cachedSearchComplete = cachedSearchComplete;\n\t\t}\n\t}\n\n\tgetCachedSearchComplete(ai: boolean) {\n\t\treturn ai ? this._aiCachedSearchComplete : this._cachedSearchComplete;\n\t}\n\n\tprivate onDidAddNotebookEditorWidget(widget: NotebookEditorWidget): void {\n\n\t\tthis._onWillChangeModelListener?.dispose();\n\t\tthis._onWillChangeModelListener = widget.onWillChangeModel(\n\t\t\t(model) => {\n\t\t\t\tif (model) {\n\t\t\t\t\tthis.onNotebookEditorWidgetRemoved(widget, model?.uri);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis._onDidChangeModelListener?.dispose();\n\t\t// listen to view model change as we are searching on both inputs and outputs\n\t\tthis._onDidChangeModelListener = widget.onDidAttachViewModel(\n\t\t\t() => {\n\t\t\t\tif (widget.hasModel()) {\n\t\t\t\t\tthis.onNotebookEditorWidgetAdded(widget, widget.textModel.uri);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate onModelAdded(model: ITextModel): void {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(model.uri);\n\t\tfolderMatch?.bindModel(model);\n\t}\n\n\tprivate async onNotebookEditorWidgetAdded(editor: NotebookEditorWidget, resource: URI): Promise<void> {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(resource);\n\t\tawait folderMatch?.bindNotebookEditorWidget(editor, resource);\n\t}\n\n\tprivate onNotebookEditorWidgetRemoved(editor: NotebookEditorWidget, resource: URI): void {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(resource);\n\t\tfolderMatch?.unbindNotebookEditorWidget(editor, resource);\n\t}\n\n\tprivate _createBaseFolderMatch(resource: URI | null, id: string, index: number, query: ITextQuery, ai: boolean): FolderMatch {\n\t\tlet folderMatch: FolderMatch;\n\t\tif (resource) {\n\t\t\tfolderMatch = this._register(this.instantiationService.createInstance(FolderMatchWorkspaceRoot, resource, id, index, query, this, ai));\n\t\t} else {\n\t\t\tfolderMatch = this._register(this.instantiationService.createInstance(FolderMatchNoRoot, id, index, query, this));\n\t\t}\n\t\tconst disposable = folderMatch.onChange((event) => this._onChange.fire(event));\n\t\tthis._register(folderMatch.onDispose(() => disposable.dispose()));\n\t\treturn folderMatch;\n\t}\n\n\n\tadd(allRaw: IFileMatch[], searchInstanceID: string, ai: boolean, silent: boolean = false): void {\n\t\t// Split up raw into a list per folder so we can do a batch add per folder.\n\n\t\tconst { byFolder, other } = this.groupFilesByFolder(allRaw, ai);\n\t\tbyFolder.forEach(raw => {\n\t\t\tif (!raw.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// ai results go into the respective folder\n\t\t\tconst folderMatch = ai ? this.getAIFolderMatch(raw[0].resource) : this.getFolderMatch(raw[0].resource);\n\t\t\tfolderMatch?.addFileMatch(raw, silent, searchInstanceID, ai);\n\t\t});\n\n\t\tif (!ai) {\n\t\t\tthis._otherFilesMatch?.addFileMatch(other, silent, searchInstanceID, false);\n\t\t}\n\t\tthis.disposePastResults();\n\t}\n\n\tclear(): void {\n\t\tthis.folderMatches().forEach((folderMatch) => folderMatch.clear(true));\n\t\tthis.folderMatches(true);\n\t\tthis.disposeMatches();\n\t\tthis._folderMatches = [];\n\t\tthis._aiFolderMatches = [];\n\t\tthis._otherFilesMatch = null;\n\t}\n\n\tremove(matches: FileMatch | FolderMatch | (FileMatch | FolderMatch)[], ai = false): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\n\t\tmatches.forEach(m => {\n\t\t\tif (m instanceof FolderMatch) {\n\t\t\t\tm.clear();\n\t\t\t}\n\t\t});\n\n\t\tconst fileMatches: FileMatch[] = matches.filter(m => m instanceof FileMatch) as FileMatch[];\n\n\t\tconst { byFolder, other } = this.groupFilesByFolder(fileMatches, ai);\n\t\tbyFolder.forEach(matches => {\n\t\t\tif (!matches.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.getFolderMatch(matches[0].resource).remove(<FileMatch[]>matches);\n\t\t});\n\n\t\tif (other.length) {\n\t\t\tthis.getFolderMatch(other[0].resource).remove(<FileMatch[]>other);\n\t\t}\n\t}\n\n\treplace(match: FileMatch): Promise<any> {\n\t\treturn this.getFolderMatch(match.resource).replace(match);\n\t}\n\n\treplaceAll(progress: IProgress<IProgressStep>): Promise<any> {\n\t\tthis.replacingAll = true;\n\n\t\tconst promise = this.replaceService.replace(this.matches(), progress);\n\n\t\treturn promise.then(() => {\n\t\t\tthis.replacingAll = false;\n\t\t\tthis.clear();\n\t\t}, () => {\n\t\t\tthis.replacingAll = false;\n\t\t});\n\t}\n\n\tfolderMatches(ai = false): FolderMatch[] {\n\t\tif (ai) {\n\t\t\treturn this._aiFolderMatches;\n\t\t}\n\t\treturn this._otherFilesMatch ?\n\t\t\t[\n\t\t\t\t...this._folderMatches,\n\t\t\t\tthis._otherFilesMatch\n\t\t\t] :\n\t\t\t[\n\t\t\t\t...this._folderMatches\n\t\t\t];\n\t}\n\n\tmatches(ai = false): FileMatch[] {\n\t\tconst matches: FileMatch[][] = [];\n\t\tthis.folderMatches(ai).forEach(folderMatch => {\n\t\t\tmatches.push(folderMatch.allDownstreamFileMatches());\n\t\t});\n\n\t\treturn (<FileMatch[]>[]).concat(...matches);\n\t}\n\n\tisEmpty(ai = false): boolean {\n\t\treturn this.folderMatches(ai).every((folderMatch) => folderMatch.isEmpty());\n\t}\n\n\tfileCount(ai = false): number {\n\t\treturn this.folderMatches(ai).reduce<number>((prev, match) => prev + match.recursiveFileCount(), 0);\n\t}\n\n\tcount(ai = false): number {\n\t\treturn this.matches(ai).reduce<number>((prev, match) => prev + match.count(), 0);\n\t}\n\n\tget showHighlights(): boolean {\n\t\treturn this._showHighlights;\n\t}\n\n\ttoggleHighlights(value: boolean): void {\n\t\tif (this._showHighlights === value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._showHighlights = value;\n\t\tlet selectedMatch: Match | null = null;\n\t\tthis.matches().forEach((fileMatch: FileMatch) => {\n\t\t\tfileMatch.updateHighlights();\n\t\t\tfileMatch.updateNotebookHighlights();\n\t\t\tif (!selectedMatch) {\n\t\t\t\tselectedMatch = fileMatch.getSelectedMatch();\n\t\t\t}\n\t\t});\n\t\tif (this._showHighlights && selectedMatch) {\n\t\t\t// TS?\n\t\t\tthis._rangeHighlightDecorations.highlightRange(\n\t\t\t\t(<Match>selectedMatch).parent().resource,\n\t\t\t\t(<Match>selectedMatch).range()\n\t\t\t);\n\t\t} else {\n\t\t\tthis._rangeHighlightDecorations.removeHighlightRange();\n\t\t}\n\t}\n\n\tget rangeHighlightDecorations(): RangeHighlightDecorations {\n\t\treturn this._rangeHighlightDecorations;\n\t}\n\n\tprivate getFolderMatch(resource: URI): FolderMatchWorkspaceRoot | FolderMatch {\n\t\tconst folderMatch = this._folderMatchesMap.findSubstr(resource);\n\t\treturn folderMatch ? folderMatch : this._otherFilesMatch!;\n\t}\n\n\tprivate getAIFolderMatch(resource: URI): FolderMatchWorkspaceRoot | FolderMatch | undefined {\n\t\tconst folderMatch = this._aiFolderMatchesMap.findSubstr(resource);\n\t\treturn folderMatch;\n\t}\n\n\tprivate set replacingAll(running: boolean) {\n\t\tthis.folderMatches().forEach((folderMatch) => {\n\t\t\tfolderMatch.replacingAll = running;\n\t\t});\n\t}\n\n\tprivate groupFilesByFolder(fileMatches: IFileMatch[], ai: boolean): { byFolder: ResourceMap<IFileMatch[]>; other: IFileMatch[] } {\n\t\tconst rawPerFolder = new ResourceMap<IFileMatch[]>();\n\t\tconst otherFileMatches: IFileMatch[] = [];\n\t\t(ai ? this._aiFolderMatches : this._folderMatches).forEach(fm => rawPerFolder.set(fm.resource, []));\n\n\t\tfileMatches.forEach(rawFileMatch => {\n\t\t\tconst folderMatch = ai ? this.getAIFolderMatch(rawFileMatch.resource) : this.getFolderMatch(rawFileMatch.resource);\n\t\t\tif (!folderMatch) {\n\t\t\t\t// foldermatch was previously removed by user or disposed for some reason\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst resource = folderMatch.resource;\n\t\t\tif (resource) {\n\t\t\t\trawPerFolder.get(resource)!.push(rawFileMatch);\n\t\t\t} else {\n\t\t\t\totherFileMatches.push(rawFileMatch);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tbyFolder: rawPerFolder,\n\t\t\tother: otherFileMatches\n\t\t};\n\t}\n\n\tprivate disposeMatches(): void {\n\t\tthis.folderMatches().forEach(folderMatch => folderMatch.dispose());\n\t\tthis.folderMatches(true).forEach(folderMatch => folderMatch.dispose());\n\n\t\tthis._folderMatches = [];\n\t\tthis._aiFolderMatches = [];\n\n\t\tthis._folderMatchesMap = TernarySearchTree.forUris<FolderMatchWithResource>(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n\t\tthis._aiFolderMatchesMap = TernarySearchTree.forUris<FolderMatchWithResource>(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n\n\t\tthis._rangeHighlightDecorations.removeHighlightRange();\n\t}\n\n\toverride async dispose(): Promise<void> {\n\t\tthis._onWillChangeModelListener?.dispose();\n\t\tthis._onDidChangeModelListener?.dispose();\n\t\tthis._rangeHighlightDecorations.dispose();\n\t\tthis.disposeMatches();\n\t\tsuper.dispose();\n\t\tawait this.disposePastResults();\n\t}\n}\n\nexport enum SearchModelLocation {\n\tPANEL,\n\tQUICK_ACCESS\n}\n\nexport class SearchModel extends Disposable {\n\n\tprivate _searchResult: SearchResult;\n\tprivate _searchQuery: ITextQuery | null = null;\n\tprivate _replaceActive: boolean = false;\n\tprivate _replaceString: string | null = null;\n\tprivate _replacePattern: ReplacePattern | null = null;\n\tprivate _preserveCase: boolean = false;\n\tprivate _startStreamDelay: Promise<void> = Promise.resolve();\n\tprivate readonly _resultQueue: IFileMatch[] = [];\n\tprivate readonly _aiResultQueue: IFileMatch[] = [];\n\n\tprivate readonly _onReplaceTermChanged: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onReplaceTermChanged: Event<void> = this._onReplaceTermChanged.event;\n\n\tprivate readonly _onSearchResultChanged = this._register(new PauseableEmitter<IChangeEvent>({\n\t\tmerge: mergeSearchResultEvents\n\t}));\n\treadonly onSearchResultChanged: Event<IChangeEvent> = this._onSearchResultChanged.event;\n\n\tprivate currentCancelTokenSource: CancellationTokenSource | null = null;\n\tprivate currentAICancelTokenSource: CancellationTokenSource | null = null;\n\tprivate searchCancelledForNewSearch: boolean = false;\n\tprivate aiSearchCancelledForNewSearch: boolean = false;\n\tpublic location: SearchModelLocation = SearchModelLocation.PANEL;\n\n\tconstructor(\n\t\t@ISearchService private readonly searchService: ISearchService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INotebookSearchService private readonly notebookSearchService: INotebookSearchService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t) {\n\t\tsuper();\n\t\tthis._searchResult = this.instantiationService.createInstance(SearchResult, this);\n\t\tthis._register(this._searchResult.onChange((e) => this._onSearchResultChanged.fire(e)));\n\t}\n\n\tisReplaceActive(): boolean {\n\t\treturn this._replaceActive;\n\t}\n\n\tset replaceActive(replaceActive: boolean) {\n\t\tthis._replaceActive = replaceActive;\n\t}\n\n\tget replacePattern(): ReplacePattern | null {\n\t\treturn this._replacePattern;\n\t}\n\n\tget replaceString(): string {\n\t\treturn this._replaceString || '';\n\t}\n\n\tset preserveCase(value: boolean) {\n\t\tthis._preserveCase = value;\n\t}\n\n\tget preserveCase(): boolean {\n\t\treturn this._preserveCase;\n\t}\n\n\tset replaceString(replaceString: string) {\n\t\tthis._replaceString = replaceString;\n\t\tif (this._searchQuery) {\n\t\t\tthis._replacePattern = new ReplacePattern(replaceString, this._searchQuery.contentPattern);\n\t\t}\n\t\tthis._onReplaceTermChanged.fire();\n\t}\n\n\tget searchResult(): SearchResult {\n\t\treturn this._searchResult;\n\t}\n\n\tasync addAIResults(onProgress?: (result: ISearchProgressItem) => void) {\n\t\tif (this.searchResult.count(true)) {\n\t\t\t// already has matches\n\t\t\treturn;\n\t\t} else {\n\t\t\tif (this._searchQuery) {\n\t\t\t\tawait this.aiSearch(\n\t\t\t\t\t{ ...this._searchQuery, contentPattern: this._searchQuery.contentPattern.pattern, type: QueryType.aiText },\n\t\t\t\t\tonProgress,\n\t\t\t\t\tthis.currentCancelTokenSource?.token,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doAISearchWithModal(searchQuery: IAITextQuery, searchInstanceID: string, token?: CancellationToken, onProgress?: (result: ISearchProgressItem) => void): Promise<ISearchComplete> {\n\t\tconst promise = this.searchService.aiTextSearch(\n\t\t\tsearchQuery,\n\t\t\ttoken, async (p: ISearchProgressItem) => {\n\t\t\t\tthis.onSearchProgress(p, searchInstanceID, false, true);\n\t\t\t\tonProgress?.(p);\n\t\t\t});\n\t\treturn this.progressService.withProgress<ISearchComplete>({\n\t\t\tlocation: ProgressLocation.Notification,\n\t\t\ttype: 'syncing',\n\t\t\ttitle: 'Searching for AI results...',\n\t\t}, async (_) => promise);\n\t}\n\n\taiSearch(query: IAITextQuery, onProgress?: (result: ISearchProgressItem) => void, callerToken?: CancellationToken): Promise<ISearchComplete> {\n\n\t\tconst searchInstanceID = Date.now().toString();\n\t\tconst tokenSource = this.currentAICancelTokenSource = new CancellationTokenSource(callerToken);\n\t\tconst start = Date.now();\n\t\tconst asyncAIResults = this.doAISearchWithModal(query,\n\t\t\tsearchInstanceID,\n\t\t\tthis.currentAICancelTokenSource.token, async (p: ISearchProgressItem) => {\n\t\t\t\tthis.onSearchProgress(p, searchInstanceID, false, true);\n\t\t\t\tonProgress?.(p);\n\t\t\t})\n\t\t\t.then(\n\t\t\t\tvalue => {\n\t\t\t\t\tthis.onSearchCompleted(value, Date.now() - start, searchInstanceID, true);\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tthis.onSearchError(e, Date.now() - start, true);\n\t\t\t\t\tthrow e;\n\t\t\t\t}).finally(() => tokenSource.dispose());\n\t\treturn asyncAIResults;\n\t}\n\n\tprivate doSearch(query: ITextQuery, progressEmitter: Emitter<void>, searchQuery: ITextQuery, searchInstanceID: string, onProgress?: (result: ISearchProgressItem) => void, callerToken?: CancellationToken): {\n\t\tasyncResults: Promise<ISearchComplete>;\n\t\tsyncResults: IFileMatch<URI>[];\n\t} {\n\t\tconst asyncGenerateOnProgress = async (p: ISearchProgressItem) => {\n\t\t\tprogressEmitter.fire();\n\t\t\tthis.onSearchProgress(p, searchInstanceID, false, false);\n\t\t\tonProgress?.(p);\n\t\t};\n\n\t\tconst syncGenerateOnProgress = (p: ISearchProgressItem) => {\n\t\t\tprogressEmitter.fire();\n\t\t\tthis.onSearchProgress(p, searchInstanceID, true);\n\t\t\tonProgress?.(p);\n\t\t};\n\t\tconst tokenSource = this.currentCancelTokenSource = new CancellationTokenSource(callerToken);\n\n\t\tconst notebookResult = this.notebookSearchService.notebookSearch(query, tokenSource.token, searchInstanceID, asyncGenerateOnProgress);\n\t\tconst textResult = this.searchService.textSearchSplitSyncAsync(\n\t\t\tsearchQuery,\n\t\t\tthis.currentCancelTokenSource.token, asyncGenerateOnProgress,\n\t\t\tnotebookResult.openFilesToScan,\n\t\t\tnotebookResult.allScannedFiles,\n\t\t);\n\n\t\tconst syncResults = textResult.syncResults.results;\n\t\tsyncResults.forEach(p => { if (p) { syncGenerateOnProgress(p); } });\n\n\t\tconst getAsyncResults = async (): Promise<ISearchComplete> => {\n\t\t\tconst searchStart = Date.now();\n\n\t\t\t// resolve async parts of search\n\t\t\tconst allClosedEditorResults = await textResult.asyncResults;\n\t\t\tconst resolvedNotebookResults = await notebookResult.completeData;\n\t\t\ttokenSource.dispose();\n\t\t\tconst searchLength = Date.now() - searchStart;\n\t\t\tconst resolvedResult: ISearchComplete = {\n\t\t\t\tresults: [...allClosedEditorResults.results, ...resolvedNotebookResults.results],\n\t\t\t\tmessages: [...allClosedEditorResults.messages, ...resolvedNotebookResults.messages],\n\t\t\t\tlimitHit: allClosedEditorResults.limitHit || resolvedNotebookResults.limitHit,\n\t\t\t\texit: allClosedEditorResults.exit,\n\t\t\t\tstats: allClosedEditorResults.stats,\n\t\t\t};\n\t\t\tthis.logService.trace(`whole search time | ${searchLength}ms`);\n\t\t\treturn resolvedResult;\n\t\t};\n\t\treturn {\n\t\t\tasyncResults: getAsyncResults(),\n\t\t\tsyncResults\n\t\t};\n\t}\n\n\tsearch(query: ITextQuery, onProgress?: (result: ISearchProgressItem) => void, callerToken?: CancellationToken): {\n\t\tasyncResults: Promise<ISearchComplete>;\n\t\tsyncResults: IFileMatch<URI>[];\n\t} {\n\t\tthis.cancelSearch(true);\n\n\t\tthis._searchQuery = query;\n\t\tif (!this.searchConfig.searchOnType) {\n\t\t\tthis.searchResult.clear();\n\t\t}\n\t\tconst searchInstanceID = Date.now().toString();\n\n\t\tthis._searchResult.query = this._searchQuery;\n\n\t\tconst progressEmitter = this._register(new Emitter<void>());\n\t\tthis._replacePattern = new ReplacePattern(this.replaceString, this._searchQuery.contentPattern);\n\n\t\t// In search on type case, delay the streaming of results just a bit, so that we don't flash the only \"local results\" fast path\n\t\tthis._startStreamDelay = new Promise(resolve => setTimeout(resolve, this.searchConfig.searchOnType ? 150 : 0));\n\n\t\tconst req = this.doSearch(query, progressEmitter, this._searchQuery, searchInstanceID, onProgress, callerToken);\n\t\tconst asyncResults = req.asyncResults;\n\t\tconst syncResults = req.syncResults;\n\n\t\tif (onProgress) {\n\t\t\tsyncResults.forEach(p => {\n\t\t\t\tif (p) {\n\t\t\t\t\tonProgress(p);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst start = Date.now();\n\t\tlet event: IDisposable | undefined;\n\n\t\tconst progressEmitterPromise = new Promise(resolve => {\n\t\t\tevent = Event.once(progressEmitter.event)(resolve);\n\t\t\treturn event;\n\t\t});\n\n\t\tPromise.race([asyncResults, progressEmitterPromise]).finally(() => {\n\t\t\t/* __GDPR__\n\t\t\t\t\"searchResultsFirstRender\" : {\n\t\t\t\t\t\"owner\": \"roblourens\",\n\t\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tevent?.dispose();\n\t\t\tthis.telemetryService.publicLog('searchResultsFirstRender', { duration: Date.now() - start });\n\t\t});\n\n\t\ttry {\n\t\t\treturn {\n\t\t\t\tasyncResults: asyncResults.then(\n\t\t\t\t\tvalue => {\n\t\t\t\t\t\tthis.onSearchCompleted(value, Date.now() - start, searchInstanceID, false);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t},\n\t\t\t\t\te => {\n\t\t\t\t\t\tthis.onSearchError(e, Date.now() - start, false);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}),\n\t\t\t\tsyncResults\n\t\t\t};\n\t\t} finally {\n\t\t\t/* __GDPR__\n\t\t\t\t\"searchResultsFinished\" : {\n\t\t\t\t\t\"owner\": \"roblourens\",\n\t\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryService.publicLog('searchResultsFinished', { duration: Date.now() - start });\n\t\t}\n\t}\n\n\tprivate onSearchCompleted(completed: ISearchComplete | undefined, duration: number, searchInstanceID: string, ai: boolean): ISearchComplete | undefined {\n\t\tif (!this._searchQuery) {\n\t\t\tthrow new Error('onSearchCompleted must be called after a search is started');\n\t\t}\n\n\t\tif (ai) {\n\t\t\tthis._searchResult.add(this._aiResultQueue, searchInstanceID, true);\n\t\t\tthis._aiResultQueue.length = 0;\n\t\t} else {\n\t\t\tthis._searchResult.add(this._resultQueue, searchInstanceID, false);\n\t\t\tthis._resultQueue.length = 0;\n\t\t}\n\n\t\tthis.searchResult.setCachedSearchComplete(completed, ai);\n\n\t\tconst options: IPatternInfo = Object.assign({}, this._searchQuery.contentPattern);\n\t\tdelete (options as any).pattern;\n\n\t\tconst stats = completed && completed.stats as ITextSearchStats;\n\n\t\tconst fileSchemeOnly = this._searchQuery.folderQueries.every(fq => fq.folder.scheme === Schemas.file);\n\t\tconst otherSchemeOnly = this._searchQuery.folderQueries.every(fq => fq.folder.scheme !== Schemas.file);\n\t\tconst scheme = fileSchemeOnly ? Schemas.file :\n\t\t\totherSchemeOnly ? 'other' :\n\t\t\t\t'mixed';\n\n\t\t/* __GDPR__\n\t\t\t\"searchResultsShown\" : {\n\t\t\t\t\"owner\": \"roblourens\",\n\t\t\t\t\"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"fileCount\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"options\": { \"${inline}\": [ \"${IPatternInfo}\" ] },\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"type\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"scheme\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"searchOnTypeEnabled\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('searchResultsShown', {\n\t\t\tcount: this._searchResult.count(),\n\t\t\tfileCount: this._searchResult.fileCount(),\n\t\t\toptions,\n\t\t\tduration,\n\t\t\ttype: stats && stats.type,\n\t\t\tscheme,\n\t\t\tsearchOnTypeEnabled: this.searchConfig.searchOnType\n\t\t});\n\t\treturn completed;\n\t}\n\n\tprivate onSearchError(e: any, duration: number, ai: boolean): void {\n\t\tif (errors.isCancellationError(e)) {\n\t\t\tthis.onSearchCompleted(\n\t\t\t\t(ai ? this.aiSearchCancelledForNewSearch : this.searchCancelledForNewSearch)\n\t\t\t\t\t? { exit: SearchCompletionExitCode.NewSearchStarted, results: [], messages: [] }\n\t\t\t\t\t: undefined,\n\t\t\t\tduration, '', ai);\n\t\t\tif (ai) {\n\t\t\t\tthis.aiSearchCancelledForNewSearch = false;\n\t\t\t} else {\n\t\t\t\tthis.searchCancelledForNewSearch = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onSearchProgress(p: ISearchProgressItem, searchInstanceID: string, sync = true, ai: boolean = false) {\n\t\tconst targetQueue = ai ? this._aiResultQueue : this._resultQueue;\n\t\tif ((<IFileMatch>p).resource) {\n\t\t\ttargetQueue.push(<IFileMatch>p);\n\t\t\tif (sync) {\n\t\t\t\tif (targetQueue.length) {\n\t\t\t\t\tthis._searchResult.add(targetQueue, searchInstanceID, false, true);\n\t\t\t\t\ttargetQueue.length = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._startStreamDelay.then(() => {\n\t\t\t\t\tif (targetQueue.length) {\n\t\t\t\t\t\tthis._searchResult.add(targetQueue, searchInstanceID, ai, true);\n\t\t\t\t\t\ttargetQueue.length = 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprivate get searchConfig() {\n\t\treturn this.configurationService.getValue<ISearchConfigurationProperties>('search');\n\t}\n\n\tcancelSearch(cancelledForNewSearch = false): boolean {\n\t\tif (this.currentCancelTokenSource) {\n\t\t\tthis.searchCancelledForNewSearch = cancelledForNewSearch;\n\t\t\tthis.currentCancelTokenSource.cancel();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tcancelAISearch(cancelledForNewSearch = false): boolean {\n\t\tif (this.currentAICancelTokenSource) {\n\t\t\tthis.aiSearchCancelledForNewSearch = cancelledForNewSearch;\n\t\t\tthis.currentAICancelTokenSource.cancel();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\toverride dispose(): void {\n\t\tthis.cancelSearch();\n\t\tthis.cancelAISearch();\n\t\tthis.searchResult.dispose();\n\t\tsuper.dispose();\n\t}\n\n}\n\nexport type FileMatchOrMatch = FileMatch | Match;\n\nexport type RenderableMatch = FolderMatch | FolderMatchWithResource | FileMatch | Match;\n\nexport class SearchViewModelWorkbenchService implements ISearchViewModelWorkbenchService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate _searchModel: SearchModel | null = null;\n\n\tconstructor(@IInstantiationService private readonly instantiationService: IInstantiationService) {\n\t}\n\n\tget searchModel(): SearchModel {\n\t\tif (!this._searchModel) {\n\t\t\tthis._searchModel = this.instantiationService.createInstance(SearchModel);\n\t\t}\n\t\treturn this._searchModel;\n\t}\n\n\tset searchModel(searchModel: SearchModel) {\n\t\tthis._searchModel?.dispose();\n\t\tthis._searchModel = searchModel;\n\t}\n}\n\nexport const ISearchViewModelWorkbenchService = createDecorator<ISearchViewModelWorkbenchService>('searchViewModelWorkbenchService');\n\nexport interface ISearchViewModelWorkbenchService {\n\treadonly _serviceBrand: undefined;\n\n\tsearchModel: SearchModel;\n}\n\n/**\n * Can add a range highlight decoration to a model.\n * It will automatically remove it when the model has its decorations changed.\n */\nexport class RangeHighlightDecorations implements IDisposable {\n\n\tprivate _decorationId: string | null = null;\n\tprivate _model: ITextModel | null = null;\n\tprivate readonly _modelDisposables = new DisposableStore();\n\n\tconstructor(\n\t\t@IModelService private readonly _modelService: IModelService\n\t) {\n\t}\n\n\tremoveHighlightRange() {\n\t\tif (this._model && this._decorationId) {\n\t\t\tconst decorationId = this._decorationId;\n\t\t\tthis._model.changeDecorations((accessor) => {\n\t\t\t\taccessor.removeDecoration(decorationId);\n\t\t\t});\n\t\t}\n\t\tthis._decorationId = null;\n\t}\n\n\thighlightRange(resource: URI | ITextModel, range: Range, ownerId: number = 0): void {\n\t\tlet model: ITextModel | null;\n\t\tif (URI.isUri(resource)) {\n\t\t\tmodel = this._modelService.getModel(resource);\n\t\t} else {\n\t\t\tmodel = resource;\n\t\t}\n\n\t\tif (model) {\n\t\t\tthis.doHighlightRange(model, range);\n\t\t}\n\t}\n\n\tprivate doHighlightRange(model: ITextModel, range: Range) {\n\t\tthis.removeHighlightRange();\n\t\tmodel.changeDecorations((accessor) => {\n\t\t\tthis._decorationId = accessor.addDecoration(range, RangeHighlightDecorations._RANGE_HIGHLIGHT_DECORATION);\n\t\t});\n\t\tthis.setModel(model);\n\t}\n\n\tprivate setModel(model: ITextModel) {\n\t\tif (this._model !== model) {\n\t\t\tthis.clearModelListeners();\n\t\t\tthis._model = model;\n\t\t\tthis._modelDisposables.add(this._model.onDidChangeDecorations((e) => {\n\t\t\t\tthis.clearModelListeners();\n\t\t\t\tthis.removeHighlightRange();\n\t\t\t\tthis._model = null;\n\t\t\t}));\n\t\t\tthis._modelDisposables.add(this._model.onWillDispose(() => {\n\t\t\t\tthis.clearModelListeners();\n\t\t\t\tthis.removeHighlightRange();\n\t\t\t\tthis._model = null;\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate clearModelListeners() {\n\t\tthis._modelDisposables.clear();\n\t}\n\n\tdispose() {\n\t\tif (this._model) {\n\t\t\tthis.removeHighlightRange();\n\t\t\tthis._model = null;\n\t\t}\n\t\tthis._modelDisposables.dispose();\n\t}\n\n\tprivate static readonly _RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'search-range-highlight',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'rangeHighlight',\n\t\tisWholeLine: true\n\t});\n}\n\nfunction textSearchResultToMatches(rawMatch: ITextSearchMatch, fileMatch: FileMatch, isAiContributed: boolean): Match[] {\n\tconst previewLines = rawMatch.previewText.split('\\n');\n\treturn rawMatch.rangeLocations.map((rangeLocation) => {\n\t\tconst previewRange: ISearchRange = rangeLocation.preview;\n\t\treturn new Match(fileMatch, previewLines, previewRange, rangeLocation.source, isAiContributed);\n\t});\n}\n\n// text search to notebook matches\n\nexport function textSearchMatchesToNotebookMatches(textSearchMatches: ITextSearchMatch[], cell: CellMatch): MatchInNotebook[] {\n\tconst notebookMatches: MatchInNotebook[] = [];\n\ttextSearchMatches.forEach((textSearchMatch) => {\n\t\tconst previewLines = textSearchMatch.previewText.split('\\n');\n\t\ttextSearchMatch.rangeLocations.map((rangeLocation) => {\n\t\t\tconst previewRange: ISearchRange = rangeLocation.preview;\n\t\t\tconst match = new MatchInNotebook(cell, previewLines, previewRange, rangeLocation.source, textSearchMatch.webviewIndex);\n\t\t\tnotebookMatches.push(match);\n\t\t});\n\t});\n\treturn notebookMatches;\n}\n\nexport function arrayContainsElementOrParent(element: RenderableMatch, testArray: RenderableMatch[]): boolean {\n\tdo {\n\t\tif (testArray.includes(element)) {\n\t\t\treturn true;\n\t\t}\n\t} while (!(element.parent() instanceof SearchResult) && (element = <RenderableMatch>element.parent()));\n\n\treturn false;\n}\n\nfunction getFileMatches(matches: (FileMatch | FolderMatchWithResource)[]): FileMatch[] {\n\n\tconst folderMatches: FolderMatchWithResource[] = [];\n\tconst fileMatches: FileMatch[] = [];\n\tmatches.forEach((e) => {\n\t\tif (e instanceof FileMatch) {\n\t\t\tfileMatches.push(e);\n\t\t} else {\n\t\t\tfolderMatches.push(e);\n\t\t}\n\t});\n\n\treturn fileMatches.concat(folderMatches.map(e => e.allDownstreamFileMatches()).flat());\n}\n\n\n\nfunction mergeSearchResultEvents(events: IChangeEvent[]): IChangeEvent {\n\tconst retEvent: IChangeEvent = {\n\t\telements: [],\n\t\tadded: false,\n\t\tremoved: false,\n\t};\n\tevents.forEach((e) => {\n\t\tif (e.added) {\n\t\t\tretEvent.added = true;\n\t\t}\n\n\t\tif (e.removed) {\n\t\t\tretEvent.removed = true;\n\t\t}\n\n\t\tretEvent.elements = retEvent.elements.concat(e.elements);\n\t});\n\n\treturn retEvent;\n}\n\n"],
  "mappings": "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",
  "names": ["m", "matches", "SearchModelLocation"]
}
