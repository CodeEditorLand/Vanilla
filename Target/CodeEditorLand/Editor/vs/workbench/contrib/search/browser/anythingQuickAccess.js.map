{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/anythingQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/anythingQuickAccess.css\";\nimport { top } from \"../../../../base/common/arrays.js\";\nimport { ThrottledDelayer } from \"../../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport {\n\ttype FuzzyScorerCache,\n\ttype IPreparedQuery,\n\tcompareItemsByFuzzyScore,\n\tprepareQuery,\n\tscoreItemFuzzy,\n} from \"../../../../base/common/fuzzyScorer.js\";\nimport { stripIcons } from \"../../../../base/common/iconLabels.js\";\nimport { untildify } from \"../../../../base/common/labels.js\";\nimport { Lazy } from \"../../../../base/common/lazy.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport {\n\tbasenameOrAuthority,\n\tdirname,\n\ttoLocalResource,\n} from \"../../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { type IRange, Range } from \"../../../../editor/common/core/range.js\";\nimport {\n\ttype IEditor,\n\tScrollType,\n} from \"../../../../editor/common/editorCommon.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { getIconClasses } from \"../../../../editor/common/services/getIconClasses.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport { ITextModelService } from \"../../../../editor/common/services/resolverService.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type {\n\tIResourceEditorInput,\n\tITextEditorOptions,\n} from \"../../../../platform/editor/common/editor.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\ttype FastAndSlowPicks,\n\ttype IPickerQuickAccessItem,\n\tPickerQuickAccessProvider,\n\ttype Picks,\n\ttype PicksWithActive,\n\tTriggerAction,\n} from \"../../../../platform/quickinput/browser/pickerQuickAccess.js\";\nimport {\n\ttype AnythingQuickAccessProviderRunOptions,\n\tDefaultQuickAccessFilterValue,\n\tExtensions,\n\ttype IQuickAccessRegistry,\n} from \"../../../../platform/quickinput/common/quickAccess.js\";\nimport {\n\ttype IKeyMods,\n\ttype IQuickInputButton,\n\tIQuickInputService,\n\ttype IQuickPick,\n\ttype IQuickPickItemWithResource,\n\ttype IQuickPickSeparator,\n\tQuickInputHideReason,\n\tQuickPickItemScorerAccessor,\n\tquickPickItemScorerAccessor,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\ttype IWorkbenchQuickAccessConfiguration,\n\tPickerEditorState,\n} from \"../../../browser/quickaccess.js\";\nimport {\n\tEditorResourceAccessor,\n\ttype IWorkbenchEditorConfiguration,\n\tisEditorInput,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { ICustomEditorLabelService } from \"../../../services/editor/common/customEditorLabelService.js\";\nimport {\n\tACTIVE_GROUP,\n\tIEditorService,\n\tSIDE_GROUP,\n} from \"../../../services/editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport { IFilesConfigurationService } from \"../../../services/filesConfiguration/common/filesConfigurationService.js\";\nimport { IHistoryService } from \"../../../services/history/common/history.js\";\nimport { IPathService } from \"../../../services/path/common/pathService.js\";\nimport {\n\ttype IFileQueryBuilderOptions,\n\tQueryBuilder,\n} from \"../../../services/search/common/queryBuilder.js\";\nimport {\n\ttype ISearchComplete,\n\tISearchService,\n} from \"../../../services/search/common/search.js\";\nimport { IWorkingCopyService } from \"../../../services/workingCopy/common/workingCopyService.js\";\nimport { ASK_QUICK_QUESTION_ACTION_ID } from \"../../chat/browser/actions/chatQuickInputActions.js\";\nimport { IQuickChatService } from \"../../chat/browser/chat.js\";\nimport { GotoSymbolQuickAccessProvider } from \"../../codeEditor/browser/quickaccess/gotoSymbolQuickAccess.js\";\nimport { FileQueryCacheState } from \"../common/cacheState.js\";\nimport {\n\ttype IWorkbenchSearchConfiguration,\n\textractRangeFromFilter,\n\tgetOutOfWorkspaceEditorResources,\n} from \"../common/search.js\";\nimport { SymbolsQuickAccessProvider } from \"./symbolsQuickAccess.js\";\n\ninterface IAnythingQuickPickItem\n\textends IPickerQuickAccessItem,\n\t\tIQuickPickItemWithResource {}\n\ninterface IEditorSymbolAnythingQuickPickItem extends IAnythingQuickPickItem {\n\tresource: URI;\n\trange: { decoration: IRange; selection: IRange };\n}\n\nfunction isEditorSymbolQuickPickItem(\n\tpick?: IAnythingQuickPickItem,\n): pick is IEditorSymbolAnythingQuickPickItem {\n\tconst candidate = pick as IEditorSymbolAnythingQuickPickItem | undefined;\n\n\treturn !!candidate?.range && !!candidate.resource;\n}\n\nexport class AnythingQuickAccessProvider extends PickerQuickAccessProvider<IAnythingQuickPickItem> {\n\tstatic PREFIX = \"\";\n\n\tprivate static readonly NO_RESULTS_PICK: IAnythingQuickPickItem = {\n\t\tlabel: localize(\"noAnythingResults\", \"No matching results\"),\n\t};\n\n\tprivate static readonly MAX_RESULTS = 512;\n\n\tprivate static readonly TYPING_SEARCH_DELAY = 200; // this delay accommodates for the user typing a word and then stops typing to start searching\n\n\tprivate static SYMBOL_PICKS_MERGE_DELAY = 200; // allow some time to merge fast and slow picks to reduce flickering\n\n\tprivate readonly pickState = this._register(\n\t\tnew (class extends Disposable {\n\t\t\tpicker:\n\t\t\t\t| IQuickPick<IAnythingQuickPickItem, { useSeparators: true }>\n\t\t\t\t| undefined = undefined;\n\n\t\t\teditorViewState = this._register(\n\t\t\t\tthis.instantiationService.createInstance(PickerEditorState),\n\t\t\t);\n\n\t\t\tscorerCache: FuzzyScorerCache = Object.create(null);\n\t\t\tfileQueryCache: FileQueryCacheState | undefined = undefined;\n\n\t\t\tlastOriginalFilter: string | undefined = undefined;\n\t\t\tlastFilter: string | undefined = undefined;\n\t\t\tlastRange: IRange | undefined = undefined;\n\n\t\t\tlastGlobalPicks:\n\t\t\t\t| PicksWithActive<IAnythingQuickPickItem>\n\t\t\t\t| undefined = undefined;\n\n\t\t\tisQuickNavigating: boolean | undefined = undefined;\n\n\t\t\tconstructor(\n\t\t\t\tprivate readonly provider: AnythingQuickAccessProvider,\n\t\t\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t\t) {\n\t\t\t\tsuper();\n\t\t\t}\n\n\t\t\tset(\n\t\t\t\tpicker: IQuickPick<\n\t\t\t\t\tIAnythingQuickPickItem,\n\t\t\t\t\t{ useSeparators: true }\n\t\t\t\t>,\n\t\t\t): void {\n\t\t\t\t// Picker for this run\n\t\t\t\tthis.picker = picker;\n\t\t\t\tEvent.once(picker.onDispose)(() => {\n\t\t\t\t\tif (picker === this.picker) {\n\t\t\t\t\t\tthis.picker = undefined; // clear the picker when disposed to not keep it in memory for too long\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Caches\n\t\t\t\tconst isQuickNavigating = !!picker.quickNavigate;\n\t\t\t\tif (!isQuickNavigating) {\n\t\t\t\t\tthis.fileQueryCache = this.provider.createFileQueryCache();\n\t\t\t\t\tthis.scorerCache = Object.create(null);\n\t\t\t\t}\n\n\t\t\t\t// Other\n\t\t\t\tthis.isQuickNavigating = isQuickNavigating;\n\t\t\t\tthis.lastOriginalFilter = undefined;\n\t\t\t\tthis.lastFilter = undefined;\n\t\t\t\tthis.lastRange = undefined;\n\t\t\t\tthis.lastGlobalPicks = undefined;\n\t\t\t\tthis.editorViewState.reset();\n\t\t\t}\n\t\t})(this, this.instantiationService),\n\t);\n\n\tget defaultFilterValue(): DefaultQuickAccessFilterValue | undefined {\n\t\tif (this.configuration.preserveInput) {\n\t\t\treturn DefaultQuickAccessFilterValue.LAST;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ISearchService private readonly searchService: ISearchService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IHistoryService private readonly historyService: IHistoryService,\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IQuickChatService private readonly quickChatService: IQuickChatService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@ICustomEditorLabelService private readonly customEditorLabelService: ICustomEditorLabelService\n\t) {\n\t\tsuper(AnythingQuickAccessProvider.PREFIX, {\n\t\t\tcanAcceptInBackground: true,\n\t\t\tnoResultsPick: AnythingQuickAccessProvider.NO_RESULTS_PICK\n\t\t});\n\t}\n\n\tprivate get configuration() {\n\t\tconst editorConfig =\n\t\t\tthis.configurationService.getValue<IWorkbenchEditorConfiguration>()\n\t\t\t\t.workbench?.editor;\n\t\tconst searchConfig =\n\t\t\tthis.configurationService.getValue<IWorkbenchSearchConfiguration>()\n\t\t\t\t.search;\n\t\tconst quickAccessConfig =\n\t\t\tthis.configurationService.getValue<IWorkbenchQuickAccessConfiguration>()\n\t\t\t\t.workbench.quickOpen;\n\n\t\treturn {\n\t\t\topenEditorPinned:\n\t\t\t\t!editorConfig?.enablePreviewFromQuickOpen ||\n\t\t\t\t!editorConfig?.enablePreview,\n\t\t\topenSideBySideDirection: editorConfig?.openSideBySideDirection,\n\t\t\tincludeSymbols: searchConfig?.quickOpen.includeSymbols,\n\t\t\tincludeHistory: searchConfig?.quickOpen.includeHistory,\n\t\t\thistoryFilterSortOrder:\n\t\t\t\tsearchConfig?.quickOpen.history.filterSortOrder,\n\t\t\tpreserveInput: quickAccessConfig.preserveInput,\n\t\t};\n\t}\n\n\toverride provide(\n\t\tpicker: IQuickPick<IAnythingQuickPickItem, { useSeparators: true }>,\n\t\ttoken: CancellationToken,\n\t\trunOptions?: AnythingQuickAccessProviderRunOptions,\n\t): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Update the pick state for this run\n\t\tthis.pickState.set(picker);\n\n\t\t// Add editor decorations for active editor symbol picks\n\t\tconst editorDecorationsDisposable = disposables.add(\n\t\t\tnew MutableDisposable(),\n\t\t);\n\t\tdisposables.add(\n\t\t\tpicker.onDidChangeActive(() => {\n\t\t\t\t// Clear old decorations\n\t\t\t\teditorDecorationsDisposable.value = undefined;\n\n\t\t\t\t// Add new decoration if editor symbol is active\n\t\t\t\tconst [item] = picker.activeItems;\n\t\t\t\tif (isEditorSymbolQuickPickItem(item)) {\n\t\t\t\t\teditorDecorationsDisposable.value =\n\t\t\t\t\t\tthis.decorateAndRevealSymbolRange(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Restore view state upon cancellation if we changed it\n\t\t// but only when the picker was closed via explicit user\n\t\t// gesture and not e.g. when focus was lost because that\n\t\t// could mean the user clicked into the editor directly.\n\t\tdisposables.add(\n\t\t\tEvent.once(picker.onDidHide)(({ reason }) => {\n\t\t\t\tif (reason === QuickInputHideReason.Gesture) {\n\t\t\t\t\tthis.pickState.editorViewState.restore();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Start picker\n\t\tdisposables.add(super.provide(picker, token, runOptions));\n\n\t\treturn disposables;\n\t}\n\n\tprivate decorateAndRevealSymbolRange(\n\t\tpick: IEditorSymbolAnythingQuickPickItem,\n\t): IDisposable {\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (\n\t\t\t!this.uriIdentityService.extUri.isEqual(\n\t\t\t\tpick.resource,\n\t\t\t\tactiveEditor?.resource,\n\t\t\t)\n\t\t) {\n\t\t\treturn Disposable.None; // active editor needs to be for resource\n\t\t}\n\n\t\tconst activeEditorControl = this.editorService.activeTextEditorControl;\n\t\tif (!activeEditorControl) {\n\t\t\treturn Disposable.None; // we need a text editor control to decorate and reveal\n\t\t}\n\n\t\t// we must remember our curret view state to be able to restore\n\t\tthis.pickState.editorViewState.set();\n\n\t\t// Reveal\n\t\tactiveEditorControl.revealRangeInCenter(\n\t\t\tpick.range.selection,\n\t\t\tScrollType.Smooth,\n\t\t);\n\n\t\t// Decorate\n\t\tthis.addDecorations(activeEditorControl, pick.range.decoration);\n\n\t\treturn toDisposable(() => this.clearDecorations(activeEditorControl));\n\t}\n\n\tprotected _getPicks(\n\t\toriginalFilter: string,\n\t\tdisposables: DisposableStore,\n\t\ttoken: CancellationToken,\n\t\trunOptions?: AnythingQuickAccessProviderRunOptions,\n\t):\n\t\t| Picks<IAnythingQuickPickItem>\n\t\t| Promise<Picks<IAnythingQuickPickItem>>\n\t\t| FastAndSlowPicks<IAnythingQuickPickItem>\n\t\t| null {\n\t\t// Find a suitable range from the pattern looking for \":\", \"#\" or \",\"\n\t\t// unless we have the `@` editor symbol character inside the filter\n\t\tconst filterWithRange = extractRangeFromFilter(originalFilter, [\n\t\t\tGotoSymbolQuickAccessProvider.PREFIX,\n\t\t]);\n\n\t\t// Update filter with normalized values\n\t\tlet filter: string;\n\t\tif (filterWithRange) {\n\t\t\tfilter = filterWithRange.filter;\n\t\t} else {\n\t\t\tfilter = originalFilter;\n\t\t}\n\n\t\t// Remember as last range\n\t\tthis.pickState.lastRange = filterWithRange?.range;\n\n\t\t// If the original filter value has changed but the normalized\n\t\t// one has not, we return early with a `null` result indicating\n\t\t// that the results should preserve because the range information\n\t\t// (:<line>:<column>) does not need to trigger any re-sorting.\n\t\tif (\n\t\t\toriginalFilter !== this.pickState.lastOriginalFilter &&\n\t\t\tfilter === this.pickState.lastFilter\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Remember as last filter\n\t\tconst lastWasFiltering = !!this.pickState.lastOriginalFilter;\n\t\tthis.pickState.lastOriginalFilter = originalFilter;\n\t\tthis.pickState.lastFilter = filter;\n\n\t\t// Remember our pick state before returning new picks\n\t\t// unless we are inside an editor symbol filter or result.\n\t\t// We can use this state to return back to the global pick\n\t\t// when the user is narrowing back out of editor symbols.\n\t\tconst picks = this.pickState.picker?.items;\n\t\tconst activePick = this.pickState.picker?.activeItems[0];\n\t\tif (picks && activePick) {\n\t\t\tconst activePickIsEditorSymbol =\n\t\t\t\tisEditorSymbolQuickPickItem(activePick);\n\t\t\tconst activePickIsNoResultsInEditorSymbols =\n\t\t\t\tactivePick === AnythingQuickAccessProvider.NO_RESULTS_PICK &&\n\t\t\t\tfilter.indexOf(GotoSymbolQuickAccessProvider.PREFIX) >= 0;\n\t\t\tif (\n\t\t\t\t!activePickIsEditorSymbol &&\n\t\t\t\t!activePickIsNoResultsInEditorSymbols\n\t\t\t) {\n\t\t\t\tthis.pickState.lastGlobalPicks = {\n\t\t\t\t\titems: picks,\n\t\t\t\t\tactive: activePick,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// `enableEditorSymbolSearch`: this will enable local editor symbol\n\t\t// search if the filter value includes `@` character. We only want\n\t\t// to enable this support though if the user was filtering in the\n\t\t// picker because this feature depends on an active item in the result\n\t\t// list to get symbols from. If we would simply trigger editor symbol\n\t\t// search without prior filtering, you could not paste a file name\n\t\t// including the `@` character to open it (e.g. /some/file@path)\n\t\t// refs: https://github.com/microsoft/vscode/issues/93845\n\t\treturn this.doGetPicks(\n\t\t\tfilter,\n\t\t\t{\n\t\t\t\t...runOptions,\n\t\t\t\tenableEditorSymbolSearch: lastWasFiltering,\n\t\t\t},\n\t\t\tdisposables,\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tprivate doGetPicks(\n\t\tfilter: string,\n\t\toptions: AnythingQuickAccessProviderRunOptions & {\n\t\t\tenableEditorSymbolSearch: boolean;\n\t\t},\n\t\tdisposables: DisposableStore,\n\t\ttoken: CancellationToken,\n\t):\n\t\t| Picks<IAnythingQuickPickItem>\n\t\t| Promise<Picks<IAnythingQuickPickItem>>\n\t\t| FastAndSlowPicks<IAnythingQuickPickItem> {\n\t\tconst query = prepareQuery(filter);\n\n\t\t// Return early if we have editor symbol picks. We support this by:\n\t\t// - having a previously active global pick (e.g. a file)\n\t\t// - the user typing `@` to start the local symbol query\n\t\tif (options.enableEditorSymbolSearch) {\n\t\t\tconst editorSymbolPicks = this.getEditorSymbolPicks(\n\t\t\t\tquery,\n\t\t\t\tdisposables,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t\tif (editorSymbolPicks) {\n\t\t\t\treturn editorSymbolPicks;\n\t\t\t}\n\t\t}\n\n\t\t// If we have a known last active editor symbol pick, we try to restore\n\t\t// the last global pick to support the case of narrowing out from a\n\t\t// editor symbol search back into the global search\n\t\tconst activePick = this.pickState.picker?.activeItems[0];\n\t\tif (\n\t\t\tisEditorSymbolQuickPickItem(activePick) &&\n\t\t\tthis.pickState.lastGlobalPicks\n\t\t) {\n\t\t\treturn this.pickState.lastGlobalPicks;\n\t\t}\n\n\t\t// Otherwise return normally with history and file/symbol results\n\t\tconst historyEditorPicks = this.getEditorHistoryPicks(query);\n\n\t\tlet picks = new Array<IAnythingQuickPickItem | IQuickPickSeparator>();\n\t\tif (options.additionPicks) {\n\t\t\tfor (const pick of options.additionPicks) {\n\t\t\t\tif (pick.type === \"separator\") {\n\t\t\t\t\tpicks.push(pick);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!query.original) {\n\t\t\t\t\tpick.highlights = undefined;\n\t\t\t\t\tpicks.push(pick);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst { score, labelMatch, descriptionMatch } = scoreItemFuzzy(\n\t\t\t\t\tpick,\n\t\t\t\t\tquery,\n\t\t\t\t\ttrue,\n\t\t\t\t\tquickPickItemScorerAccessor,\n\t\t\t\t\tthis.pickState.scorerCache,\n\t\t\t\t);\n\t\t\t\tif (!score) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpick.highlights = {\n\t\t\t\t\tlabel: labelMatch,\n\t\t\t\t\tdescription: descriptionMatch,\n\t\t\t\t};\n\t\t\t\tpicks.push(pick);\n\t\t\t}\n\t\t}\n\t\tif (this.pickState.isQuickNavigating) {\n\t\t\tif (picks.length > 0) {\n\t\t\t\tpicks.push({\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"recentlyOpenedSeparator\",\n\t\t\t\t\t\t\"recently opened\",\n\t\t\t\t\t),\n\t\t\t\t} satisfies IQuickPickSeparator);\n\t\t\t}\n\t\t\tpicks = historyEditorPicks;\n\t\t} else {\n\t\t\tif (options.includeHelp) {\n\t\t\t\tpicks.push(...this.getHelpPicks(query, token, options));\n\t\t\t}\n\t\t\tif (historyEditorPicks.length !== 0) {\n\t\t\t\tpicks.push({\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"recentlyOpenedSeparator\",\n\t\t\t\t\t\t\"recently opened\",\n\t\t\t\t\t),\n\t\t\t\t} satisfies IQuickPickSeparator);\n\t\t\t\tpicks.push(...historyEditorPicks);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t// Fast picks: help (if included) & editor history\n\t\t\tpicks: options.filter\n\t\t\t\t? picks.filter((p) => options.filter?.(p))\n\t\t\t\t: picks,\n\n\t\t\t// Slow picks: files and symbols\n\t\t\tadditionalPicks: (async (): Promise<\n\t\t\t\tPicks<IAnythingQuickPickItem>\n\t\t\t> => {\n\t\t\t\t// Exclude any result that is already present in editor history\n\t\t\t\tconst additionalPicksExcludes = new ResourceMap<boolean>();\n\t\t\t\tfor (const historyEditorPick of historyEditorPicks) {\n\t\t\t\t\tif (historyEditorPick.resource) {\n\t\t\t\t\t\tadditionalPicksExcludes.set(\n\t\t\t\t\t\t\thistoryEditorPick.resource,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet additionalPicks = await this.getAdditionalPicks(\n\t\t\t\t\tquery,\n\t\t\t\t\tadditionalPicksExcludes,\n\t\t\t\t\tthis.configuration.includeSymbols,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\t\tif (options.filter) {\n\t\t\t\t\tadditionalPicks = additionalPicks.filter((p) =>\n\t\t\t\t\t\toptions.filter?.(p),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn additionalPicks.length > 0\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\t\tlabel: this.configuration.includeSymbols\n\t\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\t\"fileAndSymbolResultsSeparator\",\n\t\t\t\t\t\t\t\t\t\t\t\"file and symbol results\",\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"fileResultsSeparator\",\n\t\t\t\t\t\t\t\t\t\t\t\"file results\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...additionalPicks,\n\t\t\t\t\t\t]\n\t\t\t\t\t: [];\n\t\t\t})(),\n\n\t\t\t// allow some time to merge files and symbols to reduce flickering\n\t\t\tmergeDelay: AnythingQuickAccessProvider.SYMBOL_PICKS_MERGE_DELAY,\n\t\t};\n\t}\n\n\tprivate async getAdditionalPicks(\n\t\tquery: IPreparedQuery,\n\t\texcludes: ResourceMap<boolean>,\n\t\tincludeSymbols: boolean,\n\t\ttoken: CancellationToken,\n\t): Promise<Array<IAnythingQuickPickItem>> {\n\t\t// Resolve file and symbol picks (if enabled)\n\t\tconst [filePicks, symbolPicks] = await Promise.all([\n\t\t\tthis.getFilePicks(query, excludes, token),\n\t\t\tthis.getWorkspaceSymbolPicks(query, includeSymbols, token),\n\t\t]);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Perform sorting (top results by score)\n\t\tconst sortedAnythingPicks = top(\n\t\t\t[...filePicks, ...symbolPicks],\n\t\t\t(anyPickA, anyPickB) =>\n\t\t\t\tcompareItemsByFuzzyScore(\n\t\t\t\t\tanyPickA,\n\t\t\t\t\tanyPickB,\n\t\t\t\t\tquery,\n\t\t\t\t\ttrue,\n\t\t\t\t\tquickPickItemScorerAccessor,\n\t\t\t\t\tthis.pickState.scorerCache,\n\t\t\t\t),\n\t\t\tAnythingQuickAccessProvider.MAX_RESULTS,\n\t\t);\n\n\t\t// Perform filtering\n\t\tconst filteredAnythingPicks: IAnythingQuickPickItem[] = [];\n\t\tfor (const anythingPick of sortedAnythingPicks) {\n\t\t\t// Always preserve any existing highlights (e.g. from workspace symbols)\n\t\t\tif (anythingPick.highlights) {\n\t\t\t\tfilteredAnythingPicks.push(anythingPick);\n\t\t\t}\n\n\t\t\t// Otherwise, do the scoring and matching here\n\t\t\telse {\n\t\t\t\tconst { score, labelMatch, descriptionMatch } = scoreItemFuzzy(\n\t\t\t\t\tanythingPick,\n\t\t\t\t\tquery,\n\t\t\t\t\ttrue,\n\t\t\t\t\tquickPickItemScorerAccessor,\n\t\t\t\t\tthis.pickState.scorerCache,\n\t\t\t\t);\n\t\t\t\tif (!score) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tanythingPick.highlights = {\n\t\t\t\t\tlabel: labelMatch,\n\t\t\t\t\tdescription: descriptionMatch,\n\t\t\t\t};\n\n\t\t\t\tfilteredAnythingPicks.push(anythingPick);\n\t\t\t}\n\t\t}\n\n\t\treturn filteredAnythingPicks;\n\t}\n\n\t//#region Editor History\n\n\tprivate readonly labelOnlyEditorHistoryPickAccessor =\n\t\tnew QuickPickItemScorerAccessor({ skipDescription: true });\n\n\tprivate getEditorHistoryPicks(\n\t\tquery: IPreparedQuery,\n\t): Array<IAnythingQuickPickItem> {\n\t\tconst configuration = this.configuration;\n\n\t\t// Just return all history entries if not searching\n\t\tif (!query.normalized) {\n\t\t\treturn this.historyService\n\t\t\t\t.getHistory()\n\t\t\t\t.map((editor) =>\n\t\t\t\t\tthis.createAnythingPick(editor, configuration),\n\t\t\t\t);\n\t\t}\n\n\t\tif (!this.configuration.includeHistory) {\n\t\t\treturn []; // disabled when searching\n\t\t}\n\n\t\t// Perform filtering\n\t\tconst editorHistoryScorerAccessor = query.containsPathSeparator\n\t\t\t? quickPickItemScorerAccessor\n\t\t\t: this.labelOnlyEditorHistoryPickAccessor; // Only match on label of the editor unless the search includes path separators\n\t\tconst editorHistoryPicks: Array<IAnythingQuickPickItem> = [];\n\t\tfor (const editor of this.historyService.getHistory()) {\n\t\t\tconst resource = editor.resource;\n\t\t\t// allow untitled and terminal editors to go through\n\t\t\tif (\n\t\t\t\t!resource ||\n\t\t\t\t(!this.fileService.hasProvider(resource) &&\n\t\t\t\t\tresource.scheme !== Schemas.untitled &&\n\t\t\t\t\tresource.scheme !== Schemas.vscodeTerminal)\n\t\t\t) {\n\t\t\t\tcontinue; // exclude editors without file resource if we are searching by pattern\n\t\t\t}\n\n\t\t\tconst editorHistoryPick = this.createAnythingPick(\n\t\t\t\teditor,\n\t\t\t\tconfiguration,\n\t\t\t);\n\n\t\t\tconst { score, labelMatch, descriptionMatch } = scoreItemFuzzy(\n\t\t\t\teditorHistoryPick,\n\t\t\t\tquery,\n\t\t\t\tfalse,\n\t\t\t\teditorHistoryScorerAccessor,\n\t\t\t\tthis.pickState.scorerCache,\n\t\t\t);\n\t\t\tif (!score) {\n\t\t\t\tcontinue; // exclude editors not matching query\n\t\t\t}\n\n\t\t\teditorHistoryPick.highlights = {\n\t\t\t\tlabel: labelMatch,\n\t\t\t\tdescription: descriptionMatch,\n\t\t\t};\n\n\t\t\teditorHistoryPicks.push(editorHistoryPick);\n\t\t}\n\n\t\t// Return without sorting if settings tell to sort by recency\n\t\tif (this.configuration.historyFilterSortOrder === \"recency\") {\n\t\t\treturn editorHistoryPicks;\n\t\t}\n\n\t\t// Perform sorting\n\t\treturn editorHistoryPicks.sort((editorA, editorB) =>\n\t\t\tcompareItemsByFuzzyScore(\n\t\t\t\teditorA,\n\t\t\t\teditorB,\n\t\t\t\tquery,\n\t\t\t\tfalse,\n\t\t\t\teditorHistoryScorerAccessor,\n\t\t\t\tthis.pickState.scorerCache,\n\t\t\t),\n\t\t);\n\t}\n\n\t//#endregion\n\n\t//#region File Search\n\n\tprivate readonly fileQueryDelayer = this._register(\n\t\tnew ThrottledDelayer<URI[]>(\n\t\t\tAnythingQuickAccessProvider.TYPING_SEARCH_DELAY,\n\t\t),\n\t);\n\n\tprivate readonly fileQueryBuilder =\n\t\tthis.instantiationService.createInstance(QueryBuilder);\n\n\tprivate createFileQueryCache(): FileQueryCacheState {\n\t\treturn new FileQueryCacheState(\n\t\t\t(cacheKey) =>\n\t\t\t\tthis.fileQueryBuilder.file(\n\t\t\t\t\tthis.contextService.getWorkspace().folders,\n\t\t\t\t\tthis.getFileQueryOptions({ cacheKey }),\n\t\t\t\t),\n\t\t\t(query) => this.searchService.fileSearch(query),\n\t\t\t(cacheKey) => this.searchService.clearCache(cacheKey),\n\t\t\tthis.pickState.fileQueryCache,\n\t\t).load();\n\t}\n\n\tprivate async getFilePicks(\n\t\tquery: IPreparedQuery,\n\t\texcludes: ResourceMap<boolean>,\n\t\ttoken: CancellationToken,\n\t): Promise<Array<IAnythingQuickPickItem>> {\n\t\tif (!query.normalized) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Absolute path result\n\t\tconst absolutePathResult = await this.getAbsolutePathFileResult(\n\t\t\tquery,\n\t\t\ttoken,\n\t\t);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Use absolute path result as only results if present\n\t\tlet fileMatches: Array<URI>;\n\t\tif (absolutePathResult) {\n\t\t\tif (excludes.has(absolutePathResult)) {\n\t\t\t\treturn []; // excluded\n\t\t\t}\n\n\t\t\t// Create a single result pick and make sure to apply full\n\t\t\t// highlights to ensure the pick is displayed. Since a\n\t\t\t// ~ might have been used for searching, our fuzzy scorer\n\t\t\t// may otherwise not properly respect the pick as a result\n\t\t\tconst absolutePathPick = this.createAnythingPick(\n\t\t\t\tabsolutePathResult,\n\t\t\t\tthis.configuration,\n\t\t\t);\n\t\t\tabsolutePathPick.highlights = {\n\t\t\t\tlabel: [{ start: 0, end: absolutePathPick.label.length }],\n\t\t\t\tdescription: absolutePathPick.description\n\t\t\t\t\t? [{ start: 0, end: absolutePathPick.description.length }]\n\t\t\t\t\t: undefined,\n\t\t\t};\n\n\t\t\treturn [absolutePathPick];\n\t\t}\n\n\t\t// Otherwise run the file search (with a delayer if cache is not ready yet)\n\t\tif (this.pickState.fileQueryCache?.isLoaded) {\n\t\t\tfileMatches = await this.doFileSearch(query, token);\n\t\t} else {\n\t\t\tfileMatches = await this.fileQueryDelayer.trigger(async () => {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn this.doFileSearch(query, token);\n\t\t\t});\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Filter excludes & convert to picks\n\t\tconst configuration = this.configuration;\n\t\treturn fileMatches\n\t\t\t.filter((resource) => !excludes.has(resource))\n\t\t\t.map((resource) =>\n\t\t\t\tthis.createAnythingPick(resource, configuration),\n\t\t\t);\n\t}\n\n\tprivate async doFileSearch(\n\t\tquery: IPreparedQuery,\n\t\ttoken: CancellationToken,\n\t): Promise<URI[]> {\n\t\tconst [fileSearchResults, relativePathFileResults] = await Promise.all([\n\t\t\t// File search: this is a search over all files of the workspace using the provided pattern\n\t\t\tthis.getFileSearchResults(query, token),\n\n\t\t\t// Relative path search: we also want to consider results that match files inside the workspace\n\t\t\t// by looking for relative paths that the user typed as query. This allows to return even excluded\n\t\t\t// results into the picker if found (e.g. helps for opening compilation results that are otherwise\n\t\t\t// excluded)\n\t\t\tthis.getRelativePathFileResults(query, token),\n\t\t]);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Return quickly if no relative results are present\n\t\tif (!relativePathFileResults) {\n\t\t\treturn fileSearchResults;\n\t\t}\n\n\t\t// Otherwise, make sure to filter relative path results from\n\t\t// the search results to prevent duplicates\n\t\tconst relativePathFileResultsMap = new ResourceMap<boolean>();\n\t\tfor (const relativePathFileResult of relativePathFileResults) {\n\t\t\trelativePathFileResultsMap.set(relativePathFileResult, true);\n\t\t}\n\n\t\treturn [\n\t\t\t...fileSearchResults.filter(\n\t\t\t\t(result) => !relativePathFileResultsMap.has(result),\n\t\t\t),\n\t\t\t...relativePathFileResults,\n\t\t];\n\t}\n\n\tprivate async getFileSearchResults(\n\t\tquery: IPreparedQuery,\n\t\ttoken: CancellationToken,\n\t): Promise<URI[]> {\n\t\t// filePattern for search depends on the number of queries in input:\n\t\t// - with multiple: only take the first one and let the filter later drop non-matching results\n\t\t// - with single: just take the original in full\n\t\t//\n\t\t// This enables to e.g. search for \"someFile someFolder\" by only returning\n\t\t// search results for \"someFile\" and not both that would normally not match.\n\t\t//\n\t\tlet filePattern = \"\";\n\t\tif (query.values && query.values.length > 1) {\n\t\t\tfilePattern = query.values[0].original;\n\t\t} else {\n\t\t\tfilePattern = query.original;\n\t\t}\n\n\t\tconst fileSearchResults = await this.doGetFileSearchResults(\n\t\t\tfilePattern,\n\t\t\ttoken,\n\t\t);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// If we detect that the search limit has been hit and we have a query\n\t\t// that was composed of multiple inputs where we only took the first part\n\t\t// we run another search with the full original query included to make\n\t\t// sure we are including all possible results that could match.\n\t\tif (\n\t\t\tfileSearchResults.limitHit &&\n\t\t\tquery.values &&\n\t\t\tquery.values.length > 1\n\t\t) {\n\t\t\tconst additionalFileSearchResults =\n\t\t\t\tawait this.doGetFileSearchResults(query.original, token);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// Remember which result we already covered\n\t\t\tconst existingFileSearchResultsMap = new ResourceMap<boolean>();\n\t\t\tfor (const fileSearchResult of fileSearchResults.results) {\n\t\t\t\texistingFileSearchResultsMap.set(\n\t\t\t\t\tfileSearchResult.resource,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Add all additional results to the original set for inclusion\n\t\t\tfor (const additionalFileSearchResult of additionalFileSearchResults.results) {\n\t\t\t\tif (\n\t\t\t\t\t!existingFileSearchResultsMap.has(\n\t\t\t\t\t\tadditionalFileSearchResult.resource,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tfileSearchResults.results.push(additionalFileSearchResult);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fileSearchResults.results.map((result) => result.resource);\n\t}\n\n\tprivate doGetFileSearchResults(\n\t\tfilePattern: string,\n\t\ttoken: CancellationToken,\n\t): Promise<ISearchComplete> {\n\t\tconst start = Date.now();\n\t\treturn this.searchService\n\t\t\t.fileSearch(\n\t\t\t\tthis.fileQueryBuilder.file(\n\t\t\t\t\tthis.contextService.getWorkspace().folders,\n\t\t\t\t\tthis.getFileQueryOptions({\n\t\t\t\t\t\tfilePattern,\n\t\t\t\t\t\tcacheKey: this.pickState.fileQueryCache?.cacheKey,\n\t\t\t\t\t\tmaxResults: AnythingQuickAccessProvider.MAX_RESULTS,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\ttoken,\n\t\t\t)\n\t\t\t.finally(() => {\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t`QuickAccess fileSearch ${Date.now() - start}ms`,\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tprivate getFileQueryOptions(input: {\n\t\tfilePattern?: string;\n\t\tcacheKey?: string;\n\t\tmaxResults?: number;\n\t}): IFileQueryBuilderOptions {\n\t\treturn {\n\t\t\t_reason: \"openFileHandler\", // used for telemetry - do not change\n\t\t\textraFileResources: this.instantiationService.invokeFunction(\n\t\t\t\tgetOutOfWorkspaceEditorResources,\n\t\t\t),\n\t\t\tfilePattern: input.filePattern || \"\",\n\t\t\tcacheKey: input.cacheKey,\n\t\t\tmaxResults: input.maxResults || 0,\n\t\t\tsortByScore: true,\n\t\t};\n\t}\n\n\tprivate async getAbsolutePathFileResult(\n\t\tquery: IPreparedQuery,\n\t\ttoken: CancellationToken,\n\t): Promise<URI | undefined> {\n\t\tif (!query.containsPathSeparator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst userHome = await this.pathService.userHome();\n\t\tconst detildifiedQuery = untildify(\n\t\t\tquery.original,\n\t\t\tuserHome.scheme === Schemas.file ? userHome.fsPath : userHome.path,\n\t\t);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isAbsolutePathQuery = (await this.pathService.path).isAbsolute(\n\t\t\tdetildifiedQuery,\n\t\t);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isAbsolutePathQuery) {\n\t\t\tconst resource = toLocalResource(\n\t\t\t\tawait this.pathService.fileURI(detildifiedQuery),\n\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\tthis.pathService.defaultUriScheme,\n\t\t\t);\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif ((await this.fileService.stat(resource)).isFile) {\n\t\t\t\t\treturn resource;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore if file does not exist\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\tprivate async getRelativePathFileResults(\n\t\tquery: IPreparedQuery,\n\t\ttoken: CancellationToken,\n\t): Promise<URI[] | undefined> {\n\t\tif (!query.containsPathSeparator) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert relative paths to absolute paths over all folders of the workspace\n\t\t// and return them as results if the absolute paths exist\n\t\tconst isAbsolutePathQuery = (await this.pathService.path).isAbsolute(\n\t\t\tquery.original,\n\t\t);\n\t\tif (!isAbsolutePathQuery) {\n\t\t\tconst resources: URI[] = [];\n\t\t\tfor (const folder of this.contextService.getWorkspace().folders) {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst resource = toLocalResource(\n\t\t\t\t\tfolder.toResource(query.original),\n\t\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\t\tthis.pathService.defaultUriScheme,\n\t\t\t\t);\n\n\t\t\t\ttry {\n\t\t\t\t\tif ((await this.fileService.stat(resource)).isFile) {\n\t\t\t\t\t\tresources.push(resource);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore if file does not exist\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn resources;\n\t\t}\n\n\t\treturn;\n\t}\n\n\t//#endregion\n\n\t//#region Command Center (if enabled)\n\n\tprivate readonly lazyRegistry = new Lazy(() =>\n\t\tRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess),\n\t);\n\n\tprivate getHelpPicks(\n\t\tquery: IPreparedQuery,\n\t\ttoken: CancellationToken,\n\t\trunOptions?: AnythingQuickAccessProviderRunOptions,\n\t): IAnythingQuickPickItem[] {\n\t\tif (query.normalized) {\n\t\t\treturn []; // If there's a filter, we don't show the help\n\t\t}\n\n\t\ttype IHelpAnythingQuickPickItem = IAnythingQuickPickItem & {\n\t\t\tcommandCenterOrder: number;\n\t\t};\n\t\tconst providers: IHelpAnythingQuickPickItem[] = this.lazyRegistry.value\n\t\t\t.getQuickAccessProviders()\n\t\t\t.filter((p) =>\n\t\t\t\tp.helpEntries.some((h) => h.commandCenterOrder !== undefined),\n\t\t\t)\n\t\t\t.flatMap((provider) =>\n\t\t\t\tprovider.helpEntries\n\t\t\t\t\t.filter((h) => h.commandCenterOrder !== undefined)\n\t\t\t\t\t.map((helpEntry) => {\n\t\t\t\t\t\tconst providerSpecificOptions:\n\t\t\t\t\t\t\t| AnythingQuickAccessProviderRunOptions\n\t\t\t\t\t\t\t| undefined = {\n\t\t\t\t\t\t\t...runOptions,\n\t\t\t\t\t\t\tincludeHelp:\n\t\t\t\t\t\t\t\tprovider.prefix ===\n\t\t\t\t\t\t\t\tAnythingQuickAccessProvider.PREFIX\n\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t: runOptions?.includeHelp,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst label =\n\t\t\t\t\t\t\thelpEntry.commandCenterLabel ??\n\t\t\t\t\t\t\thelpEntry.description;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\tdescription: helpEntry.prefix ?? provider.prefix,\n\t\t\t\t\t\t\tcommandCenterOrder: helpEntry.commandCenterOrder!,\n\t\t\t\t\t\t\tkeybinding: helpEntry.commandId\n\t\t\t\t\t\t\t\t? this.keybindingService.lookupKeybinding(\n\t\t\t\t\t\t\t\t\t\thelpEntry.commandId,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\tariaLabel: localize(\n\t\t\t\t\t\t\t\t\"helpPickAriaLabel\",\n\t\t\t\t\t\t\t\t\"{0}, {1}\",\n\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\thelpEntry.description,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\taccept: () => {\n\t\t\t\t\t\t\t\tthis.quickInputService.quickAccess.show(\n\t\t\t\t\t\t\t\t\tprovider.prefix,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpreserveValue: true,\n\t\t\t\t\t\t\t\t\t\tproviderOptions:\n\t\t\t\t\t\t\t\t\t\t\tproviderSpecificOptions,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t);\n\n\t\t// TODO: There has to be a better place for this, but it's the first time we are adding a non-quick access provider\n\t\t// to the command center, so for now, let's do this.\n\t\tif (this.quickChatService.enabled) {\n\t\t\tproviders.push({\n\t\t\t\tlabel: localize(\"chat\", \"Open Quick Chat\"),\n\t\t\t\tcommandCenterOrder: 30,\n\t\t\t\tkeybinding: this.keybindingService.lookupKeybinding(\n\t\t\t\t\tASK_QUICK_QUESTION_ACTION_ID,\n\t\t\t\t),\n\t\t\t\taccept: () => this.quickChatService.toggle(),\n\t\t\t});\n\t\t}\n\n\t\treturn providers.sort(\n\t\t\t(a, b) => a.commandCenterOrder - b.commandCenterOrder,\n\t\t);\n\t}\n\n\t//#endregion\n\n\t//#region Workspace Symbols (if enabled)\n\n\tprivate workspaceSymbolsQuickAccess = this._register(\n\t\tthis.instantiationService.createInstance(SymbolsQuickAccessProvider),\n\t);\n\n\tprivate async getWorkspaceSymbolPicks(\n\t\tquery: IPreparedQuery,\n\t\tincludeSymbols: boolean,\n\t\ttoken: CancellationToken,\n\t): Promise<Array<IAnythingQuickPickItem>> {\n\t\tif (\n\t\t\t!query.normalized || // we need a value for search for\n\t\t\t!includeSymbols || // we need to enable symbols in search\n\t\t\tthis.pickState.lastRange // a range is an indicator for just searching for files\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Delegate to the existing symbols quick access\n\t\t// but skip local results and also do not score\n\t\treturn this.workspaceSymbolsQuickAccess.getSymbolPicks(\n\t\t\tquery.original,\n\t\t\t{\n\t\t\t\tskipLocal: true,\n\t\t\t\tskipSorting: true,\n\t\t\t\tdelay: AnythingQuickAccessProvider.TYPING_SEARCH_DELAY,\n\t\t\t},\n\t\t\ttoken,\n\t\t);\n\t}\n\n\t//#endregion\n\n\t//#region Editor Symbols (if narrowing down into a global pick via `@`)\n\n\tprivate readonly editorSymbolsQuickAccess =\n\t\tthis.instantiationService.createInstance(GotoSymbolQuickAccessProvider);\n\n\tprivate getEditorSymbolPicks(\n\t\tquery: IPreparedQuery,\n\t\tdisposables: DisposableStore,\n\t\ttoken: CancellationToken,\n\t): Promise<Picks<IAnythingQuickPickItem>> | null {\n\t\tconst filterSegments = query.original.split(\n\t\t\tGotoSymbolQuickAccessProvider.PREFIX,\n\t\t);\n\t\tconst filter =\n\t\t\tfilterSegments.length > 1\n\t\t\t\t? filterSegments[filterSegments.length - 1].trim()\n\t\t\t\t: undefined;\n\t\tif (typeof filter !== \"string\") {\n\t\t\treturn null; // we need to be searched for editor symbols via `@`\n\t\t}\n\n\t\tconst activeGlobalPick = this.pickState.lastGlobalPicks?.active;\n\t\tif (!activeGlobalPick) {\n\t\t\treturn null; // we need an active global pick to find symbols for\n\t\t}\n\n\t\tconst activeGlobalResource = activeGlobalPick.resource;\n\t\tif (\n\t\t\t!activeGlobalResource ||\n\t\t\t(!this.fileService.hasProvider(activeGlobalResource) &&\n\t\t\t\tactiveGlobalResource.scheme !== Schemas.untitled)\n\t\t) {\n\t\t\treturn null; // we need a resource that we can resolve\n\t\t}\n\n\t\tif (\n\t\t\tactiveGlobalPick.label.includes(\n\t\t\t\tGotoSymbolQuickAccessProvider.PREFIX,\n\t\t\t) ||\n\t\t\tactiveGlobalPick.description?.includes(\n\t\t\t\tGotoSymbolQuickAccessProvider.PREFIX,\n\t\t\t)\n\t\t) {\n\t\t\tif (filterSegments.length < 3) {\n\t\t\t\treturn null; // require at least 2 `@` if our active pick contains `@` in label or description\n\t\t\t}\n\t\t}\n\n\t\treturn this.doGetEditorSymbolPicks(\n\t\t\tactiveGlobalPick,\n\t\t\tactiveGlobalResource,\n\t\t\tfilter,\n\t\t\tdisposables,\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tprivate async doGetEditorSymbolPicks(\n\t\tactiveGlobalPick: IAnythingQuickPickItem,\n\t\tactiveGlobalResource: URI,\n\t\tfilter: string,\n\t\tdisposables: DisposableStore,\n\t\ttoken: CancellationToken,\n\t): Promise<Picks<IAnythingQuickPickItem>> {\n\t\t// Bring the editor to front to review symbols to go to\n\t\ttry {\n\t\t\t// we must remember our curret view state to be able to restore\n\t\t\tthis.pickState.editorViewState.set();\n\n\t\t\t// open it\n\t\t\tawait this.pickState.editorViewState.openTransientEditor({\n\t\t\t\tresource: activeGlobalResource,\n\t\t\t\toptions: {\n\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\trevealIfOpened: true,\n\t\t\t\t\tignoreError: true,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\treturn []; // return if resource cannot be opened\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Obtain model from resource\n\t\tlet model = this.modelService.getModel(activeGlobalResource);\n\t\tif (!model) {\n\t\t\ttry {\n\t\t\t\tconst modelReference = disposables.add(\n\t\t\t\t\tawait this.textModelService.createModelReference(\n\t\t\t\t\t\tactiveGlobalResource,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tmodel = modelReference.object.textEditorModel;\n\t\t\t} catch (error) {\n\t\t\t\treturn []; // return if model cannot be resolved\n\t\t\t}\n\t\t}\n\n\t\t// Ask provider for editor symbols\n\t\tconst editorSymbolPicks =\n\t\t\tawait this.editorSymbolsQuickAccess.getSymbolPicks(\n\t\t\t\tmodel,\n\t\t\t\tfilter,\n\t\t\t\t{ extraContainerLabel: stripIcons(activeGlobalPick.label) },\n\t\t\t\tdisposables,\n\t\t\t\ttoken,\n\t\t\t);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn editorSymbolPicks.map((editorSymbolPick) => {\n\t\t\t// Preserve separators\n\t\t\tif (editorSymbolPick.type === \"separator\") {\n\t\t\t\treturn editorSymbolPick;\n\t\t\t}\n\n\t\t\t// Convert editor symbols to anything pick\n\t\t\treturn {\n\t\t\t\t...editorSymbolPick,\n\t\t\t\tresource: activeGlobalResource,\n\t\t\t\tdescription: editorSymbolPick.description,\n\t\t\t\ttrigger: (buttonIndex, keyMods) => {\n\t\t\t\t\tthis.openAnything(activeGlobalResource, {\n\t\t\t\t\t\tkeyMods,\n\t\t\t\t\t\trange: editorSymbolPick.range?.selection,\n\t\t\t\t\t\tforceOpenSideBySide: true,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t},\n\t\t\t\taccept: (keyMods, event) =>\n\t\t\t\t\tthis.openAnything(activeGlobalResource, {\n\t\t\t\t\t\tkeyMods,\n\t\t\t\t\t\trange: editorSymbolPick.range?.selection,\n\t\t\t\t\t\tpreserveFocus: event.inBackground,\n\t\t\t\t\t\tforcePinned: event.inBackground,\n\t\t\t\t\t}),\n\t\t\t};\n\t\t});\n\t}\n\n\taddDecorations(editor: IEditor, range: IRange): void {\n\t\tthis.editorSymbolsQuickAccess.addDecorations(editor, range);\n\t}\n\n\tclearDecorations(editor: IEditor): void {\n\t\tthis.editorSymbolsQuickAccess.clearDecorations(editor);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate createAnythingPick(\n\t\tresourceOrEditor: URI | EditorInput | IResourceEditorInput,\n\t\tconfiguration: {\n\t\t\topenSideBySideDirection: \"right\" | \"down\" | undefined;\n\t\t},\n\t): IAnythingQuickPickItem {\n\t\tconst isEditorHistoryEntry = !URI.isUri(resourceOrEditor);\n\n\t\tlet resource: URI | undefined;\n\t\tlet label: string;\n\t\tlet description: string | undefined;\n\t\tlet isDirty: boolean | undefined;\n\t\tlet extraClasses: string[];\n\t\tlet icon: ThemeIcon | undefined;\n\n\t\tif (isEditorInput(resourceOrEditor)) {\n\t\t\tresource = EditorResourceAccessor.getOriginalUri(resourceOrEditor);\n\t\t\tlabel = resourceOrEditor.getName();\n\t\t\tdescription = resourceOrEditor.getDescription();\n\t\t\tisDirty =\n\t\t\t\tresourceOrEditor.isDirty() && !resourceOrEditor.isSaving();\n\t\t\textraClasses = resourceOrEditor.getLabelExtraClasses();\n\t\t\ticon = resourceOrEditor.getIcon();\n\t\t} else {\n\t\t\tresource = URI.isUri(resourceOrEditor)\n\t\t\t\t? resourceOrEditor\n\t\t\t\t: resourceOrEditor.resource;\n\t\t\tconst customLabel = this.customEditorLabelService.getName(resource);\n\t\t\tlabel = customLabel || basenameOrAuthority(resource);\n\t\t\tdescription = this.labelService.getUriLabel(\n\t\t\t\t!!customLabel ? resource : dirname(resource),\n\t\t\t\t{ relative: true },\n\t\t\t);\n\t\t\tisDirty =\n\t\t\t\tthis.workingCopyService.isDirty(resource) &&\n\t\t\t\t!this.filesConfigurationService.hasShortAutoSaveDelay(resource);\n\t\t\textraClasses = [];\n\t\t}\n\n\t\tconst labelAndDescription = description\n\t\t\t? `${label} ${description}`\n\t\t\t: label;\n\n\t\tconst iconClassesValue = new Lazy(() =>\n\t\t\tgetIconClasses(\n\t\t\t\tthis.modelService,\n\t\t\t\tthis.languageService,\n\t\t\t\tresource,\n\t\t\t\tundefined,\n\t\t\t\ticon,\n\t\t\t).concat(extraClasses),\n\t\t);\n\n\t\tconst buttonsValue = new Lazy(() => {\n\t\t\tconst openSideBySideDirection =\n\t\t\t\tconfiguration.openSideBySideDirection;\n\t\t\tconst buttons: IQuickInputButton[] = [];\n\n\t\t\t// Open to side / below\n\t\t\tbuttons.push({\n\t\t\t\ticonClass:\n\t\t\t\t\topenSideBySideDirection === \"right\"\n\t\t\t\t\t\t? ThemeIcon.asClassName(Codicon.splitHorizontal)\n\t\t\t\t\t\t: ThemeIcon.asClassName(Codicon.splitVertical),\n\t\t\t\ttooltip:\n\t\t\t\t\topenSideBySideDirection === \"right\"\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"openToSide\",\n\t\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\t\"Open this file in a split editor on the left/right side\",\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"Open to the Side\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"openToBottom\",\n\t\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\t\"Open this file in a split editor on the bottom\",\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"Open to the Bottom\",\n\t\t\t\t\t\t\t),\n\t\t\t});\n\n\t\t\t// Remove from History\n\t\t\tif (isEditorHistoryEntry) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\ticonClass: isDirty\n\t\t\t\t\t\t? \"dirty-anything \" +\n\t\t\t\t\t\t\tThemeIcon.asClassName(Codicon.circleFilled)\n\t\t\t\t\t\t: ThemeIcon.asClassName(Codicon.close),\n\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\"closeEditor\",\n\t\t\t\t\t\t\"Remove from Recently Opened\",\n\t\t\t\t\t),\n\t\t\t\t\talwaysVisible: isDirty,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn buttons;\n\t\t});\n\n\t\treturn {\n\t\t\tresource,\n\t\t\tlabel,\n\t\t\tariaLabel: isDirty\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"filePickAriaLabelDirty\",\n\t\t\t\t\t\t\"{0} unsaved changes\",\n\t\t\t\t\t\tlabelAndDescription,\n\t\t\t\t\t)\n\t\t\t\t: labelAndDescription,\n\t\t\tdescription,\n\t\t\tget iconClasses() {\n\t\t\t\treturn iconClassesValue.value;\n\t\t\t},\n\t\t\tget buttons() {\n\t\t\t\treturn buttonsValue.value;\n\t\t\t},\n\t\t\ttrigger: (buttonIndex, keyMods) => {\n\t\t\t\tswitch (buttonIndex) {\n\t\t\t\t\t// Open to side / below\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tthis.openAnything(resourceOrEditor, {\n\t\t\t\t\t\t\tkeyMods,\n\t\t\t\t\t\t\trange: this.pickState.lastRange,\n\t\t\t\t\t\t\tforceOpenSideBySide: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\n\t\t\t\t\t// Remove from History\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (!URI.isUri(resourceOrEditor)) {\n\t\t\t\t\t\t\tthis.historyService.removeFromHistory(\n\t\t\t\t\t\t\t\tresourceOrEditor,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturn TriggerAction.REMOVE_ITEM;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn TriggerAction.NO_ACTION;\n\t\t\t},\n\t\t\taccept: (keyMods, event) =>\n\t\t\t\tthis.openAnything(resourceOrEditor, {\n\t\t\t\t\tkeyMods,\n\t\t\t\t\trange: this.pickState.lastRange,\n\t\t\t\t\tpreserveFocus: event.inBackground,\n\t\t\t\t\tforcePinned: event.inBackground,\n\t\t\t\t}),\n\t\t};\n\t}\n\n\tprivate async openAnything(\n\t\tresourceOrEditor: URI | EditorInput | IResourceEditorInput,\n\t\toptions: {\n\t\t\tkeyMods?: IKeyMods;\n\t\t\tpreserveFocus?: boolean;\n\t\t\trange?: IRange;\n\t\t\tforceOpenSideBySide?: boolean;\n\t\t\tforcePinned?: boolean;\n\t\t},\n\t): Promise<void> {\n\t\t// Craft some editor options based on quick access usage\n\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned:\n\t\t\t\toptions.keyMods?.ctrlCmd ||\n\t\t\t\toptions.forcePinned ||\n\t\t\t\tthis.configuration.openEditorPinned,\n\t\t\tselection: options.range\n\t\t\t\t? Range.collapseToStart(options.range)\n\t\t\t\t: undefined,\n\t\t};\n\n\t\tconst targetGroup =\n\t\t\toptions.keyMods?.alt ||\n\t\t\t(this.configuration.openEditorPinned && options.keyMods?.ctrlCmd) ||\n\t\t\toptions.forceOpenSideBySide\n\t\t\t\t? SIDE_GROUP\n\t\t\t\t: ACTIVE_GROUP;\n\n\t\t// Restore any view state if the target is the side group\n\t\tif (targetGroup === SIDE_GROUP) {\n\t\t\tawait this.pickState.editorViewState.restore();\n\t\t}\n\n\t\t// Open editor (typed)\n\t\tif (isEditorInput(resourceOrEditor)) {\n\t\t\tawait this.editorService.openEditor(\n\t\t\t\tresourceOrEditor,\n\t\t\t\teditorOptions,\n\t\t\t\ttargetGroup,\n\t\t\t);\n\t\t}\n\n\t\t// Open editor (untyped)\n\t\telse {\n\t\t\tlet resourceEditorInput: IResourceEditorInput;\n\t\t\tif (URI.isUri(resourceOrEditor)) {\n\t\t\t\tresourceEditorInput = {\n\t\t\t\t\tresource: resourceOrEditor,\n\t\t\t\t\toptions: editorOptions,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tresourceEditorInput = {\n\t\t\t\t\t...resourceOrEditor,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t...resourceOrEditor.options,\n\t\t\t\t\t\t...editorOptions,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait this.editorService.openEditor(\n\t\t\t\tresourceEditorInput,\n\t\t\t\ttargetGroup,\n\t\t\t);\n\t\t}\n\t}\n\n\t//#endregion\n}\n"],
  "mappings": "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",
  "names": []
}
