{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/search/browser/anythingQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/anythingQuickAccess.css';\nimport { IQuickInputButton, IKeyMods, quickPickItemScorerAccessor, QuickPickItemScorerAccessor, IQuickPick, IQuickPickItemWithResource, QuickInputHideReason, IQuickInputService, IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IPickerQuickAccessItem, PickerQuickAccessProvider, TriggerAction, FastAndSlowPicks, Picks, PicksWithActive } from '../../../../platform/quickinput/browser/pickerQuickAccess.js';\nimport { prepareQuery, IPreparedQuery, compareItemsByFuzzyScore, scoreItemFuzzy, FuzzyScorerCache } from '../../../../base/common/fuzzyScorer.js';\nimport { IFileQueryBuilderOptions, QueryBuilder } from '../../../services/search/common/queryBuilder.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { getOutOfWorkspaceEditorResources, extractRangeFromFilter, IWorkbenchSearchConfiguration } from '../common/search.js';\nimport { ISearchService, ISearchComplete } from '../../../services/search/common/search.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { untildify } from '../../../../base/common/labels.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { toLocalResource, dirname, basenameOrAuthority } from '../../../../base/common/resources.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { DisposableStore, IDisposable, toDisposable, MutableDisposable, Disposable } from '../../../../base/common/lifecycle.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { getIconClasses } from '../../../../editor/common/services/getIconClasses.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkingCopyService } from '../../../services/workingCopy/common/workingCopyService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IWorkbenchEditorConfiguration, EditorResourceAccessor, isEditorInput } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { IEditorService, SIDE_GROUP, ACTIVE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { Range, IRange } from '../../../../editor/common/core/range.js';\nimport { ThrottledDelayer } from '../../../../base/common/async.js';\nimport { top } from '../../../../base/common/arrays.js';\nimport { FileQueryCacheState } from '../common/cacheState.js';\nimport { IHistoryService } from '../../../services/history/common/history.js';\nimport { IResourceEditorInput, ITextEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { SymbolsQuickAccessProvider } from './symbolsQuickAccess.js';\nimport { AnythingQuickAccessProviderRunOptions, DefaultQuickAccessFilterValue, Extensions, IQuickAccessRegistry } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { PickerEditorState, IWorkbenchQuickAccessConfiguration } from '../../../browser/quickaccess.js';\nimport { GotoSymbolQuickAccessProvider } from '../../codeEditor/browser/quickaccess/gotoSymbolQuickAccess.js';\nimport { ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { ScrollType, IEditor } from '../../../../editor/common/editorCommon.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { stripIcons } from '../../../../base/common/iconLabels.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { ASK_QUICK_QUESTION_ACTION_ID } from '../../chat/browser/actions/chatQuickInputActions.js';\nimport { IQuickChatService } from '../../chat/browser/chat.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ICustomEditorLabelService } from '../../../services/editor/common/customEditorLabelService.js';\n\ninterface IAnythingQuickPickItem extends IPickerQuickAccessItem, IQuickPickItemWithResource { }\n\ninterface IEditorSymbolAnythingQuickPickItem extends IAnythingQuickPickItem {\n\tresource: URI;\n\trange: { decoration: IRange; selection: IRange };\n}\n\nfunction isEditorSymbolQuickPickItem(pick?: IAnythingQuickPickItem): pick is IEditorSymbolAnythingQuickPickItem {\n\tconst candidate = pick as IEditorSymbolAnythingQuickPickItem | undefined;\n\n\treturn !!candidate?.range && !!candidate.resource;\n}\n\nexport class AnythingQuickAccessProvider extends PickerQuickAccessProvider<IAnythingQuickPickItem> {\n\n\tstatic PREFIX = '';\n\n\tprivate static readonly NO_RESULTS_PICK: IAnythingQuickPickItem = {\n\t\tlabel: localize('noAnythingResults', \"No matching results\")\n\t};\n\n\tprivate static readonly MAX_RESULTS = 512;\n\n\tprivate static readonly TYPING_SEARCH_DELAY = 200; // this delay accommodates for the user typing a word and then stops typing to start searching\n\n\tprivate static SYMBOL_PICKS_MERGE_DELAY = 200; // allow some time to merge fast and slow picks to reduce flickering\n\n\tprivate readonly pickState = this._register(new class extends Disposable {\n\n\t\tpicker: IQuickPick<IAnythingQuickPickItem, { useSeparators: true }> | undefined = undefined;\n\n\t\teditorViewState = this._register(this.instantiationService.createInstance(PickerEditorState));\n\n\t\tscorerCache: FuzzyScorerCache = Object.create(null);\n\t\tfileQueryCache: FileQueryCacheState | undefined = undefined;\n\n\t\tlastOriginalFilter: string | undefined = undefined;\n\t\tlastFilter: string | undefined = undefined;\n\t\tlastRange: IRange | undefined = undefined;\n\n\t\tlastGlobalPicks: PicksWithActive<IAnythingQuickPickItem> | undefined = undefined;\n\n\t\tisQuickNavigating: boolean | undefined = undefined;\n\n\t\tconstructor(\n\t\t\tprivate readonly provider: AnythingQuickAccessProvider,\n\t\t\tprivate readonly instantiationService: IInstantiationService\n\t\t) {\n\t\t\tsuper();\n\t\t}\n\n\t\tset(picker: IQuickPick<IAnythingQuickPickItem, { useSeparators: true }>): void {\n\n\t\t\t// Picker for this run\n\t\t\tthis.picker = picker;\n\t\t\tEvent.once(picker.onDispose)(() => {\n\t\t\t\tif (picker === this.picker) {\n\t\t\t\t\tthis.picker = undefined; // clear the picker when disposed to not keep it in memory for too long\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Caches\n\t\t\tconst isQuickNavigating = !!picker.quickNavigate;\n\t\t\tif (!isQuickNavigating) {\n\t\t\t\tthis.fileQueryCache = this.provider.createFileQueryCache();\n\t\t\t\tthis.scorerCache = Object.create(null);\n\t\t\t}\n\n\t\t\t// Other\n\t\t\tthis.isQuickNavigating = isQuickNavigating;\n\t\t\tthis.lastOriginalFilter = undefined;\n\t\t\tthis.lastFilter = undefined;\n\t\t\tthis.lastRange = undefined;\n\t\t\tthis.lastGlobalPicks = undefined;\n\t\t\tthis.editorViewState.reset();\n\t\t}\n\t}(this, this.instantiationService));\n\n\tget defaultFilterValue(): DefaultQuickAccessFilterValue | undefined {\n\t\tif (this.configuration.preserveInput) {\n\t\t\treturn DefaultQuickAccessFilterValue.LAST;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ISearchService private readonly searchService: ISearchService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IHistoryService private readonly historyService: IHistoryService,\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IQuickChatService private readonly quickChatService: IQuickChatService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@ICustomEditorLabelService private readonly customEditorLabelService: ICustomEditorLabelService\n\t) {\n\t\tsuper(AnythingQuickAccessProvider.PREFIX, {\n\t\t\tcanAcceptInBackground: true,\n\t\t\tnoResultsPick: AnythingQuickAccessProvider.NO_RESULTS_PICK\n\t\t});\n\t}\n\n\tprivate get configuration() {\n\t\tconst editorConfig = this.configurationService.getValue<IWorkbenchEditorConfiguration>().workbench?.editor;\n\t\tconst searchConfig = this.configurationService.getValue<IWorkbenchSearchConfiguration>().search;\n\t\tconst quickAccessConfig = this.configurationService.getValue<IWorkbenchQuickAccessConfiguration>().workbench.quickOpen;\n\n\t\treturn {\n\t\t\topenEditorPinned: !editorConfig?.enablePreviewFromQuickOpen || !editorConfig?.enablePreview,\n\t\t\topenSideBySideDirection: editorConfig?.openSideBySideDirection,\n\t\t\tincludeSymbols: searchConfig?.quickOpen.includeSymbols,\n\t\t\tincludeHistory: searchConfig?.quickOpen.includeHistory,\n\t\t\thistoryFilterSortOrder: searchConfig?.quickOpen.history.filterSortOrder,\n\t\t\tpreserveInput: quickAccessConfig.preserveInput\n\t\t};\n\t}\n\n\toverride provide(picker: IQuickPick<IAnythingQuickPickItem, { useSeparators: true }>, token: CancellationToken, runOptions?: AnythingQuickAccessProviderRunOptions): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Update the pick state for this run\n\t\tthis.pickState.set(picker);\n\n\t\t// Add editor decorations for active editor symbol picks\n\t\tconst editorDecorationsDisposable = disposables.add(new MutableDisposable());\n\t\tdisposables.add(picker.onDidChangeActive(() => {\n\n\t\t\t// Clear old decorations\n\t\t\teditorDecorationsDisposable.value = undefined;\n\n\t\t\t// Add new decoration if editor symbol is active\n\t\t\tconst [item] = picker.activeItems;\n\t\t\tif (isEditorSymbolQuickPickItem(item)) {\n\t\t\t\teditorDecorationsDisposable.value = this.decorateAndRevealSymbolRange(item);\n\t\t\t}\n\t\t}));\n\n\t\t// Restore view state upon cancellation if we changed it\n\t\t// but only when the picker was closed via explicit user\n\t\t// gesture and not e.g. when focus was lost because that\n\t\t// could mean the user clicked into the editor directly.\n\t\tdisposables.add(Event.once(picker.onDidHide)(({ reason }) => {\n\t\t\tif (reason === QuickInputHideReason.Gesture) {\n\t\t\t\tthis.pickState.editorViewState.restore();\n\t\t\t}\n\t\t}));\n\n\t\t// Start picker\n\t\tdisposables.add(super.provide(picker, token, runOptions));\n\n\t\treturn disposables;\n\t}\n\n\tprivate decorateAndRevealSymbolRange(pick: IEditorSymbolAnythingQuickPickItem): IDisposable {\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (!this.uriIdentityService.extUri.isEqual(pick.resource, activeEditor?.resource)) {\n\t\t\treturn Disposable.None; // active editor needs to be for resource\n\t\t}\n\n\t\tconst activeEditorControl = this.editorService.activeTextEditorControl;\n\t\tif (!activeEditorControl) {\n\t\t\treturn Disposable.None; // we need a text editor control to decorate and reveal\n\t\t}\n\n\t\t// we must remember our curret view state to be able to restore\n\t\tthis.pickState.editorViewState.set();\n\n\t\t// Reveal\n\t\tactiveEditorControl.revealRangeInCenter(pick.range.selection, ScrollType.Smooth);\n\n\t\t// Decorate\n\t\tthis.addDecorations(activeEditorControl, pick.range.decoration);\n\n\t\treturn toDisposable(() => this.clearDecorations(activeEditorControl));\n\t}\n\n\tprotected _getPicks(originalFilter: string, disposables: DisposableStore, token: CancellationToken, runOptions?: AnythingQuickAccessProviderRunOptions): Picks<IAnythingQuickPickItem> | Promise<Picks<IAnythingQuickPickItem>> | FastAndSlowPicks<IAnythingQuickPickItem> | null {\n\n\t\t// Find a suitable range from the pattern looking for \":\", \"#\" or \",\"\n\t\t// unless we have the `@` editor symbol character inside the filter\n\t\tconst filterWithRange = extractRangeFromFilter(originalFilter, [GotoSymbolQuickAccessProvider.PREFIX]);\n\n\t\t// Update filter with normalized values\n\t\tlet filter: string;\n\t\tif (filterWithRange) {\n\t\t\tfilter = filterWithRange.filter;\n\t\t} else {\n\t\t\tfilter = originalFilter;\n\t\t}\n\n\t\t// Remember as last range\n\t\tthis.pickState.lastRange = filterWithRange?.range;\n\n\t\t// If the original filter value has changed but the normalized\n\t\t// one has not, we return early with a `null` result indicating\n\t\t// that the results should preserve because the range information\n\t\t// (:<line>:<column>) does not need to trigger any re-sorting.\n\t\tif (originalFilter !== this.pickState.lastOriginalFilter && filter === this.pickState.lastFilter) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Remember as last filter\n\t\tconst lastWasFiltering = !!this.pickState.lastOriginalFilter;\n\t\tthis.pickState.lastOriginalFilter = originalFilter;\n\t\tthis.pickState.lastFilter = filter;\n\n\t\t// Remember our pick state before returning new picks\n\t\t// unless we are inside an editor symbol filter or result.\n\t\t// We can use this state to return back to the global pick\n\t\t// when the user is narrowing back out of editor symbols.\n\t\tconst picks = this.pickState.picker?.items;\n\t\tconst activePick = this.pickState.picker?.activeItems[0];\n\t\tif (picks && activePick) {\n\t\t\tconst activePickIsEditorSymbol = isEditorSymbolQuickPickItem(activePick);\n\t\t\tconst activePickIsNoResultsInEditorSymbols = activePick === AnythingQuickAccessProvider.NO_RESULTS_PICK && filter.indexOf(GotoSymbolQuickAccessProvider.PREFIX) >= 0;\n\t\t\tif (!activePickIsEditorSymbol && !activePickIsNoResultsInEditorSymbols) {\n\t\t\t\tthis.pickState.lastGlobalPicks = {\n\t\t\t\t\titems: picks,\n\t\t\t\t\tactive: activePick\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// `enableEditorSymbolSearch`: this will enable local editor symbol\n\t\t// search if the filter value includes `@` character. We only want\n\t\t// to enable this support though if the user was filtering in the\n\t\t// picker because this feature depends on an active item in the result\n\t\t// list to get symbols from. If we would simply trigger editor symbol\n\t\t// search without prior filtering, you could not paste a file name\n\t\t// including the `@` character to open it (e.g. /some/file@path)\n\t\t// refs: https://github.com/microsoft/vscode/issues/93845\n\t\treturn this.doGetPicks(\n\t\t\tfilter,\n\t\t\t{\n\t\t\t\t...runOptions,\n\t\t\t\tenableEditorSymbolSearch: lastWasFiltering\n\t\t\t},\n\t\t\tdisposables,\n\t\t\ttoken\n\t\t);\n\t}\n\n\tprivate doGetPicks(\n\t\tfilter: string,\n\t\toptions: AnythingQuickAccessProviderRunOptions & { enableEditorSymbolSearch: boolean },\n\t\tdisposables: DisposableStore,\n\t\ttoken: CancellationToken\n\t): Picks<IAnythingQuickPickItem> | Promise<Picks<IAnythingQuickPickItem>> | FastAndSlowPicks<IAnythingQuickPickItem> {\n\t\tconst query = prepareQuery(filter);\n\n\t\t// Return early if we have editor symbol picks. We support this by:\n\t\t// - having a previously active global pick (e.g. a file)\n\t\t// - the user typing `@` to start the local symbol query\n\t\tif (options.enableEditorSymbolSearch) {\n\t\t\tconst editorSymbolPicks = this.getEditorSymbolPicks(query, disposables, token);\n\t\t\tif (editorSymbolPicks) {\n\t\t\t\treturn editorSymbolPicks;\n\t\t\t}\n\t\t}\n\n\t\t// If we have a known last active editor symbol pick, we try to restore\n\t\t// the last global pick to support the case of narrowing out from a\n\t\t// editor symbol search back into the global search\n\t\tconst activePick = this.pickState.picker?.activeItems[0];\n\t\tif (isEditorSymbolQuickPickItem(activePick) && this.pickState.lastGlobalPicks) {\n\t\t\treturn this.pickState.lastGlobalPicks;\n\t\t}\n\n\t\t// Otherwise return normally with history and file/symbol results\n\t\tconst historyEditorPicks = this.getEditorHistoryPicks(query);\n\n\t\tlet picks = new Array<IAnythingQuickPickItem | IQuickPickSeparator>();\n\t\tif (options.additionPicks) {\n\t\t\tfor (const pick of options.additionPicks) {\n\t\t\t\tif (pick.type === 'separator') {\n\t\t\t\t\tpicks.push(pick);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!query.original) {\n\t\t\t\t\tpick.highlights = undefined;\n\t\t\t\t\tpicks.push(pick);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst { score, labelMatch, descriptionMatch } = scoreItemFuzzy(pick, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n\t\t\t\tif (!score) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpick.highlights = {\n\t\t\t\t\tlabel: labelMatch,\n\t\t\t\t\tdescription: descriptionMatch\n\t\t\t\t};\n\t\t\t\tpicks.push(pick);\n\t\t\t}\n\t\t}\n\t\tif (this.pickState.isQuickNavigating) {\n\t\t\tif (picks.length > 0) {\n\t\t\t\tpicks.push({ type: 'separator', label: localize('recentlyOpenedSeparator', \"recently opened\") } satisfies IQuickPickSeparator);\n\t\t\t}\n\t\t\tpicks = historyEditorPicks;\n\t\t} else {\n\t\t\tif (options.includeHelp) {\n\t\t\t\tpicks.push(...this.getHelpPicks(query, token, options));\n\t\t\t}\n\t\t\tif (historyEditorPicks.length !== 0) {\n\t\t\t\tpicks.push({ type: 'separator', label: localize('recentlyOpenedSeparator', \"recently opened\") } satisfies IQuickPickSeparator);\n\t\t\t\tpicks.push(...historyEditorPicks);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\n\t\t\t// Fast picks: help (if included) & editor history\n\t\t\tpicks: options.filter ? picks.filter((p) => options.filter?.(p)) : picks,\n\n\t\t\t// Slow picks: files and symbols\n\t\t\tadditionalPicks: (async (): Promise<Picks<IAnythingQuickPickItem>> => {\n\n\t\t\t\t// Exclude any result that is already present in editor history\n\t\t\t\tconst additionalPicksExcludes = new ResourceMap<boolean>();\n\t\t\t\tfor (const historyEditorPick of historyEditorPicks) {\n\t\t\t\t\tif (historyEditorPick.resource) {\n\t\t\t\t\t\tadditionalPicksExcludes.set(historyEditorPick.resource, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet additionalPicks = await this.getAdditionalPicks(query, additionalPicksExcludes, this.configuration.includeSymbols, token);\n\t\t\t\tif (options.filter) {\n\t\t\t\t\tadditionalPicks = additionalPicks.filter((p) => options.filter?.(p));\n\t\t\t\t}\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn additionalPicks.length > 0 ? [\n\t\t\t\t\t{ type: 'separator', label: this.configuration.includeSymbols ? localize('fileAndSymbolResultsSeparator', \"file and symbol results\") : localize('fileResultsSeparator', \"file results\") },\n\t\t\t\t\t...additionalPicks\n\t\t\t\t] : [];\n\t\t\t})(),\n\n\t\t\t// allow some time to merge files and symbols to reduce flickering\n\t\t\tmergeDelay: AnythingQuickAccessProvider.SYMBOL_PICKS_MERGE_DELAY\n\t\t};\n\t}\n\n\tprivate async getAdditionalPicks(query: IPreparedQuery, excludes: ResourceMap<boolean>, includeSymbols: boolean, token: CancellationToken): Promise<Array<IAnythingQuickPickItem>> {\n\n\t\t// Resolve file and symbol picks (if enabled)\n\t\tconst [filePicks, symbolPicks] = await Promise.all([\n\t\t\tthis.getFilePicks(query, excludes, token),\n\t\t\tthis.getWorkspaceSymbolPicks(query, includeSymbols, token)\n\t\t]);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Perform sorting (top results by score)\n\t\tconst sortedAnythingPicks = top(\n\t\t\t[...filePicks, ...symbolPicks],\n\t\t\t(anyPickA, anyPickB) => compareItemsByFuzzyScore(anyPickA, anyPickB, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache),\n\t\t\tAnythingQuickAccessProvider.MAX_RESULTS\n\t\t);\n\n\t\t// Perform filtering\n\t\tconst filteredAnythingPicks: IAnythingQuickPickItem[] = [];\n\t\tfor (const anythingPick of sortedAnythingPicks) {\n\n\t\t\t// Always preserve any existing highlights (e.g. from workspace symbols)\n\t\t\tif (anythingPick.highlights) {\n\t\t\t\tfilteredAnythingPicks.push(anythingPick);\n\t\t\t}\n\n\t\t\t// Otherwise, do the scoring and matching here\n\t\t\telse {\n\t\t\t\tconst { score, labelMatch, descriptionMatch } = scoreItemFuzzy(anythingPick, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n\t\t\t\tif (!score) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tanythingPick.highlights = {\n\t\t\t\t\tlabel: labelMatch,\n\t\t\t\t\tdescription: descriptionMatch\n\t\t\t\t};\n\n\t\t\t\tfilteredAnythingPicks.push(anythingPick);\n\t\t\t}\n\t\t}\n\n\t\treturn filteredAnythingPicks;\n\t}\n\n\n\t//#region Editor History\n\n\tprivate readonly labelOnlyEditorHistoryPickAccessor = new QuickPickItemScorerAccessor({ skipDescription: true });\n\n\tprivate getEditorHistoryPicks(query: IPreparedQuery): Array<IAnythingQuickPickItem> {\n\t\tconst configuration = this.configuration;\n\n\t\t// Just return all history entries if not searching\n\t\tif (!query.normalized) {\n\t\t\treturn this.historyService.getHistory().map(editor => this.createAnythingPick(editor, configuration));\n\t\t}\n\n\t\tif (!this.configuration.includeHistory) {\n\t\t\treturn []; // disabled when searching\n\t\t}\n\n\t\t// Perform filtering\n\t\tconst editorHistoryScorerAccessor = query.containsPathSeparator ? quickPickItemScorerAccessor : this.labelOnlyEditorHistoryPickAccessor; // Only match on label of the editor unless the search includes path separators\n\t\tconst editorHistoryPicks: Array<IAnythingQuickPickItem> = [];\n\t\tfor (const editor of this.historyService.getHistory()) {\n\t\t\tconst resource = editor.resource;\n\t\t\t// allow untitled and terminal editors to go through\n\t\t\tif (!resource || (!this.fileService.hasProvider(resource) && resource.scheme !== Schemas.untitled && resource.scheme !== Schemas.vscodeTerminal)) {\n\t\t\t\tcontinue; // exclude editors without file resource if we are searching by pattern\n\t\t\t}\n\n\t\t\tconst editorHistoryPick = this.createAnythingPick(editor, configuration);\n\n\t\t\tconst { score, labelMatch, descriptionMatch } = scoreItemFuzzy(editorHistoryPick, query, false, editorHistoryScorerAccessor, this.pickState.scorerCache);\n\t\t\tif (!score) {\n\t\t\t\tcontinue; // exclude editors not matching query\n\t\t\t}\n\n\t\t\teditorHistoryPick.highlights = {\n\t\t\t\tlabel: labelMatch,\n\t\t\t\tdescription: descriptionMatch\n\t\t\t};\n\n\t\t\teditorHistoryPicks.push(editorHistoryPick);\n\t\t}\n\n\t\t// Return without sorting if settings tell to sort by recency\n\t\tif (this.configuration.historyFilterSortOrder === 'recency') {\n\t\t\treturn editorHistoryPicks;\n\t\t}\n\n\t\t// Perform sorting\n\t\treturn editorHistoryPicks.sort((editorA, editorB) => compareItemsByFuzzyScore(editorA, editorB, query, false, editorHistoryScorerAccessor, this.pickState.scorerCache));\n\t}\n\n\t//#endregion\n\n\n\t//#region File Search\n\n\tprivate readonly fileQueryDelayer = this._register(new ThrottledDelayer<URI[]>(AnythingQuickAccessProvider.TYPING_SEARCH_DELAY));\n\n\tprivate readonly fileQueryBuilder = this.instantiationService.createInstance(QueryBuilder);\n\n\tprivate createFileQueryCache(): FileQueryCacheState {\n\t\treturn new FileQueryCacheState(\n\t\t\tcacheKey => this.fileQueryBuilder.file(this.contextService.getWorkspace().folders, this.getFileQueryOptions({ cacheKey })),\n\t\t\tquery => this.searchService.fileSearch(query),\n\t\t\tcacheKey => this.searchService.clearCache(cacheKey),\n\t\t\tthis.pickState.fileQueryCache\n\t\t).load();\n\t}\n\n\tprivate async getFilePicks(query: IPreparedQuery, excludes: ResourceMap<boolean>, token: CancellationToken): Promise<Array<IAnythingQuickPickItem>> {\n\t\tif (!query.normalized) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Absolute path result\n\t\tconst absolutePathResult = await this.getAbsolutePathFileResult(query, token);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Use absolute path result as only results if present\n\t\tlet fileMatches: Array<URI>;\n\t\tif (absolutePathResult) {\n\t\t\tif (excludes.has(absolutePathResult)) {\n\t\t\t\treturn []; // excluded\n\t\t\t}\n\n\t\t\t// Create a single result pick and make sure to apply full\n\t\t\t// highlights to ensure the pick is displayed. Since a\n\t\t\t// ~ might have been used for searching, our fuzzy scorer\n\t\t\t// may otherwise not properly respect the pick as a result\n\t\t\tconst absolutePathPick = this.createAnythingPick(absolutePathResult, this.configuration);\n\t\t\tabsolutePathPick.highlights = {\n\t\t\t\tlabel: [{ start: 0, end: absolutePathPick.label.length }],\n\t\t\t\tdescription: absolutePathPick.description ? [{ start: 0, end: absolutePathPick.description.length }] : undefined\n\t\t\t};\n\n\t\t\treturn [absolutePathPick];\n\t\t}\n\n\t\t// Otherwise run the file search (with a delayer if cache is not ready yet)\n\t\tif (this.pickState.fileQueryCache?.isLoaded) {\n\t\t\tfileMatches = await this.doFileSearch(query, token);\n\t\t} else {\n\t\t\tfileMatches = await this.fileQueryDelayer.trigger(async () => {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn this.doFileSearch(query, token);\n\t\t\t});\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Filter excludes & convert to picks\n\t\tconst configuration = this.configuration;\n\t\treturn fileMatches\n\t\t\t.filter(resource => !excludes.has(resource))\n\t\t\t.map(resource => this.createAnythingPick(resource, configuration));\n\t}\n\n\tprivate async doFileSearch(query: IPreparedQuery, token: CancellationToken): Promise<URI[]> {\n\t\tconst [fileSearchResults, relativePathFileResults] = await Promise.all([\n\n\t\t\t// File search: this is a search over all files of the workspace using the provided pattern\n\t\t\tthis.getFileSearchResults(query, token),\n\n\t\t\t// Relative path search: we also want to consider results that match files inside the workspace\n\t\t\t// by looking for relative paths that the user typed as query. This allows to return even excluded\n\t\t\t// results into the picker if found (e.g. helps for opening compilation results that are otherwise\n\t\t\t// excluded)\n\t\t\tthis.getRelativePathFileResults(query, token)\n\t\t]);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Return quickly if no relative results are present\n\t\tif (!relativePathFileResults) {\n\t\t\treturn fileSearchResults;\n\t\t}\n\n\t\t// Otherwise, make sure to filter relative path results from\n\t\t// the search results to prevent duplicates\n\t\tconst relativePathFileResultsMap = new ResourceMap<boolean>();\n\t\tfor (const relativePathFileResult of relativePathFileResults) {\n\t\t\trelativePathFileResultsMap.set(relativePathFileResult, true);\n\t\t}\n\n\t\treturn [\n\t\t\t...fileSearchResults.filter(result => !relativePathFileResultsMap.has(result)),\n\t\t\t...relativePathFileResults\n\t\t];\n\t}\n\n\tprivate async getFileSearchResults(query: IPreparedQuery, token: CancellationToken): Promise<URI[]> {\n\n\t\t// filePattern for search depends on the number of queries in input:\n\t\t// - with multiple: only take the first one and let the filter later drop non-matching results\n\t\t// - with single: just take the original in full\n\t\t//\n\t\t// This enables to e.g. search for \"someFile someFolder\" by only returning\n\t\t// search results for \"someFile\" and not both that would normally not match.\n\t\t//\n\t\tlet filePattern = '';\n\t\tif (query.values && query.values.length > 1) {\n\t\t\tfilePattern = query.values[0].original;\n\t\t} else {\n\t\t\tfilePattern = query.original;\n\t\t}\n\n\t\tconst fileSearchResults = await this.doGetFileSearchResults(filePattern, token);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// If we detect that the search limit has been hit and we have a query\n\t\t// that was composed of multiple inputs where we only took the first part\n\t\t// we run another search with the full original query included to make\n\t\t// sure we are including all possible results that could match.\n\t\tif (fileSearchResults.limitHit && query.values && query.values.length > 1) {\n\t\t\tconst additionalFileSearchResults = await this.doGetFileSearchResults(query.original, token);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// Remember which result we already covered\n\t\t\tconst existingFileSearchResultsMap = new ResourceMap<boolean>();\n\t\t\tfor (const fileSearchResult of fileSearchResults.results) {\n\t\t\t\texistingFileSearchResultsMap.set(fileSearchResult.resource, true);\n\t\t\t}\n\n\t\t\t// Add all additional results to the original set for inclusion\n\t\t\tfor (const additionalFileSearchResult of additionalFileSearchResults.results) {\n\t\t\t\tif (!existingFileSearchResultsMap.has(additionalFileSearchResult.resource)) {\n\t\t\t\t\tfileSearchResults.results.push(additionalFileSearchResult);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fileSearchResults.results.map(result => result.resource);\n\t}\n\n\tprivate doGetFileSearchResults(filePattern: string, token: CancellationToken): Promise<ISearchComplete> {\n\t\tconst start = Date.now();\n\t\treturn this.searchService.fileSearch(\n\t\t\tthis.fileQueryBuilder.file(\n\t\t\t\tthis.contextService.getWorkspace().folders,\n\t\t\t\tthis.getFileQueryOptions({\n\t\t\t\t\tfilePattern,\n\t\t\t\t\tcacheKey: this.pickState.fileQueryCache?.cacheKey,\n\t\t\t\t\tmaxResults: AnythingQuickAccessProvider.MAX_RESULTS\n\t\t\t\t})\n\t\t\t), token).finally(() => {\n\t\t\t\tthis.logService.trace(`QuickAccess fileSearch ${Date.now() - start}ms`);\n\t\t\t});\n\t}\n\n\tprivate getFileQueryOptions(input: { filePattern?: string; cacheKey?: string; maxResults?: number }): IFileQueryBuilderOptions {\n\t\treturn {\n\t\t\t_reason: 'openFileHandler', // used for telemetry - do not change\n\t\t\textraFileResources: this.instantiationService.invokeFunction(getOutOfWorkspaceEditorResources),\n\t\t\tfilePattern: input.filePattern || '',\n\t\t\tcacheKey: input.cacheKey,\n\t\t\tmaxResults: input.maxResults || 0,\n\t\t\tsortByScore: true\n\t\t};\n\t}\n\n\tprivate async getAbsolutePathFileResult(query: IPreparedQuery, token: CancellationToken): Promise<URI | undefined> {\n\t\tif (!query.containsPathSeparator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst userHome = await this.pathService.userHome();\n\t\tconst detildifiedQuery = untildify(query.original, userHome.scheme === Schemas.file ? userHome.fsPath : userHome.path);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isAbsolutePathQuery = (await this.pathService.path).isAbsolute(detildifiedQuery);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isAbsolutePathQuery) {\n\t\t\tconst resource = toLocalResource(\n\t\t\t\tawait this.pathService.fileURI(detildifiedQuery),\n\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\tthis.pathService.defaultUriScheme\n\t\t\t);\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif ((await this.fileService.stat(resource)).isFile) {\n\t\t\t\t\treturn resource;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore if file does not exist\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\tprivate async getRelativePathFileResults(query: IPreparedQuery, token: CancellationToken): Promise<URI[] | undefined> {\n\t\tif (!query.containsPathSeparator) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert relative paths to absolute paths over all folders of the workspace\n\t\t// and return them as results if the absolute paths exist\n\t\tconst isAbsolutePathQuery = (await this.pathService.path).isAbsolute(query.original);\n\t\tif (!isAbsolutePathQuery) {\n\t\t\tconst resources: URI[] = [];\n\t\t\tfor (const folder of this.contextService.getWorkspace().folders) {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst resource = toLocalResource(\n\t\t\t\t\tfolder.toResource(query.original),\n\t\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\t\tthis.pathService.defaultUriScheme\n\t\t\t\t);\n\n\t\t\t\ttry {\n\t\t\t\t\tif ((await this.fileService.stat(resource)).isFile) {\n\t\t\t\t\t\tresources.push(resource);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore if file does not exist\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn resources;\n\t\t}\n\n\t\treturn;\n\t}\n\n\t//#endregion\n\n\t//#region Command Center (if enabled)\n\n\tprivate readonly lazyRegistry = new Lazy(() => Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess));\n\n\tprivate getHelpPicks(query: IPreparedQuery, token: CancellationToken, runOptions?: AnythingQuickAccessProviderRunOptions): IAnythingQuickPickItem[] {\n\t\tif (query.normalized) {\n\t\t\treturn []; // If there's a filter, we don't show the help\n\t\t}\n\n\t\ttype IHelpAnythingQuickPickItem = IAnythingQuickPickItem & { commandCenterOrder: number };\n\t\tconst providers: IHelpAnythingQuickPickItem[] = this.lazyRegistry.value.getQuickAccessProviders()\n\t\t\t.filter(p => p.helpEntries.some(h => h.commandCenterOrder !== undefined))\n\t\t\t.flatMap(provider => provider.helpEntries\n\t\t\t\t.filter(h => h.commandCenterOrder !== undefined)\n\t\t\t\t.map(helpEntry => {\n\t\t\t\t\tconst providerSpecificOptions: AnythingQuickAccessProviderRunOptions | undefined = {\n\t\t\t\t\t\t...runOptions,\n\t\t\t\t\t\tincludeHelp: provider.prefix === AnythingQuickAccessProvider.PREFIX ? false : runOptions?.includeHelp\n\t\t\t\t\t};\n\n\t\t\t\t\tconst label = helpEntry.commandCenterLabel ?? helpEntry.description;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tdescription: helpEntry.prefix ?? provider.prefix,\n\t\t\t\t\t\tcommandCenterOrder: helpEntry.commandCenterOrder!,\n\t\t\t\t\t\tkeybinding: helpEntry.commandId ? this.keybindingService.lookupKeybinding(helpEntry.commandId) : undefined,\n\t\t\t\t\t\tariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\n\t\t\t\t\t\taccept: () => {\n\t\t\t\t\t\t\tthis.quickInputService.quickAccess.show(provider.prefix, {\n\t\t\t\t\t\t\t\tpreserveValue: true,\n\t\t\t\t\t\t\t\tproviderOptions: providerSpecificOptions\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}));\n\n\t\t// TODO: There has to be a better place for this, but it's the first time we are adding a non-quick access provider\n\t\t// to the command center, so for now, let's do this.\n\t\tif (this.quickChatService.enabled) {\n\t\t\tproviders.push({\n\t\t\t\tlabel: localize('chat', \"Open Quick Chat\"),\n\t\t\t\tcommandCenterOrder: 30,\n\t\t\t\tkeybinding: this.keybindingService.lookupKeybinding(ASK_QUICK_QUESTION_ACTION_ID),\n\t\t\t\taccept: () => this.quickChatService.toggle()\n\t\t\t});\n\t\t}\n\n\t\treturn providers.sort((a, b) => a.commandCenterOrder - b.commandCenterOrder);\n\t}\n\n\t//#endregion\n\n\t//#region Workspace Symbols (if enabled)\n\n\tprivate workspaceSymbolsQuickAccess = this._register(this.instantiationService.createInstance(SymbolsQuickAccessProvider));\n\n\tprivate async getWorkspaceSymbolPicks(query: IPreparedQuery, includeSymbols: boolean, token: CancellationToken): Promise<Array<IAnythingQuickPickItem>> {\n\t\tif (\n\t\t\t!query.normalized ||\t// we need a value for search for\n\t\t\t!includeSymbols ||\t\t// we need to enable symbols in search\n\t\t\tthis.pickState.lastRange\t\t\t\t// a range is an indicator for just searching for files\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Delegate to the existing symbols quick access\n\t\t// but skip local results and also do not score\n\t\treturn this.workspaceSymbolsQuickAccess.getSymbolPicks(query.original, {\n\t\t\tskipLocal: true,\n\t\t\tskipSorting: true,\n\t\t\tdelay: AnythingQuickAccessProvider.TYPING_SEARCH_DELAY\n\t\t}, token);\n\t}\n\n\t//#endregion\n\n\n\t//#region Editor Symbols (if narrowing down into a global pick via `@`)\n\n\tprivate readonly editorSymbolsQuickAccess = this.instantiationService.createInstance(GotoSymbolQuickAccessProvider);\n\n\tprivate getEditorSymbolPicks(query: IPreparedQuery, disposables: DisposableStore, token: CancellationToken): Promise<Picks<IAnythingQuickPickItem>> | null {\n\t\tconst filterSegments = query.original.split(GotoSymbolQuickAccessProvider.PREFIX);\n\t\tconst filter = filterSegments.length > 1 ? filterSegments[filterSegments.length - 1].trim() : undefined;\n\t\tif (typeof filter !== 'string') {\n\t\t\treturn null; // we need to be searched for editor symbols via `@`\n\t\t}\n\n\t\tconst activeGlobalPick = this.pickState.lastGlobalPicks?.active;\n\t\tif (!activeGlobalPick) {\n\t\t\treturn null; // we need an active global pick to find symbols for\n\t\t}\n\n\t\tconst activeGlobalResource = activeGlobalPick.resource;\n\t\tif (!activeGlobalResource || (!this.fileService.hasProvider(activeGlobalResource) && activeGlobalResource.scheme !== Schemas.untitled)) {\n\t\t\treturn null; // we need a resource that we can resolve\n\t\t}\n\n\t\tif (activeGlobalPick.label.includes(GotoSymbolQuickAccessProvider.PREFIX) || activeGlobalPick.description?.includes(GotoSymbolQuickAccessProvider.PREFIX)) {\n\t\t\tif (filterSegments.length < 3) {\n\t\t\t\treturn null; // require at least 2 `@` if our active pick contains `@` in label or description\n\t\t\t}\n\t\t}\n\n\t\treturn this.doGetEditorSymbolPicks(activeGlobalPick, activeGlobalResource, filter, disposables, token);\n\t}\n\n\tprivate async doGetEditorSymbolPicks(activeGlobalPick: IAnythingQuickPickItem, activeGlobalResource: URI, filter: string, disposables: DisposableStore, token: CancellationToken): Promise<Picks<IAnythingQuickPickItem>> {\n\n\t\t// Bring the editor to front to review symbols to go to\n\t\ttry {\n\n\t\t\t// we must remember our curret view state to be able to restore\n\t\t\tthis.pickState.editorViewState.set();\n\n\t\t\t// open it\n\t\t\tawait this.pickState.editorViewState.openTransientEditor({\n\t\t\t\tresource: activeGlobalResource,\n\t\t\t\toptions: { preserveFocus: true, revealIfOpened: true, ignoreError: true }\n\t\t\t});\n\t\t} catch (error) {\n\t\t\treturn []; // return if resource cannot be opened\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Obtain model from resource\n\t\tlet model = this.modelService.getModel(activeGlobalResource);\n\t\tif (!model) {\n\t\t\ttry {\n\t\t\t\tconst modelReference = disposables.add(await this.textModelService.createModelReference(activeGlobalResource));\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tmodel = modelReference.object.textEditorModel;\n\t\t\t} catch (error) {\n\t\t\t\treturn []; // return if model cannot be resolved\n\t\t\t}\n\t\t}\n\n\t\t// Ask provider for editor symbols\n\t\tconst editorSymbolPicks = (await this.editorSymbolsQuickAccess.getSymbolPicks(model, filter, { extraContainerLabel: stripIcons(activeGlobalPick.label) }, disposables, token));\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn editorSymbolPicks.map(editorSymbolPick => {\n\n\t\t\t// Preserve separators\n\t\t\tif (editorSymbolPick.type === 'separator') {\n\t\t\t\treturn editorSymbolPick;\n\t\t\t}\n\n\t\t\t// Convert editor symbols to anything pick\n\t\t\treturn {\n\t\t\t\t...editorSymbolPick,\n\t\t\t\tresource: activeGlobalResource,\n\t\t\t\tdescription: editorSymbolPick.description,\n\t\t\t\ttrigger: (buttonIndex, keyMods) => {\n\t\t\t\t\tthis.openAnything(activeGlobalResource, { keyMods, range: editorSymbolPick.range?.selection, forceOpenSideBySide: true });\n\n\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t},\n\t\t\t\taccept: (keyMods, event) => this.openAnything(activeGlobalResource, { keyMods, range: editorSymbolPick.range?.selection, preserveFocus: event.inBackground, forcePinned: event.inBackground })\n\t\t\t};\n\t\t});\n\t}\n\n\taddDecorations(editor: IEditor, range: IRange): void {\n\t\tthis.editorSymbolsQuickAccess.addDecorations(editor, range);\n\t}\n\n\tclearDecorations(editor: IEditor): void {\n\t\tthis.editorSymbolsQuickAccess.clearDecorations(editor);\n\t}\n\n\t//#endregion\n\n\n\t//#region Helpers\n\n\tprivate createAnythingPick(resourceOrEditor: URI | EditorInput | IResourceEditorInput, configuration: { openSideBySideDirection: 'right' | 'down' | undefined }): IAnythingQuickPickItem {\n\t\tconst isEditorHistoryEntry = !URI.isUri(resourceOrEditor);\n\n\t\tlet resource: URI | undefined;\n\t\tlet label: string;\n\t\tlet description: string | undefined = undefined;\n\t\tlet isDirty: boolean | undefined = undefined;\n\t\tlet extraClasses: string[];\n\t\tlet icon: ThemeIcon | undefined = undefined;\n\n\t\tif (isEditorInput(resourceOrEditor)) {\n\t\t\tresource = EditorResourceAccessor.getOriginalUri(resourceOrEditor);\n\t\t\tlabel = resourceOrEditor.getName();\n\t\t\tdescription = resourceOrEditor.getDescription();\n\t\t\tisDirty = resourceOrEditor.isDirty() && !resourceOrEditor.isSaving();\n\t\t\textraClasses = resourceOrEditor.getLabelExtraClasses();\n\t\t\ticon = resourceOrEditor.getIcon();\n\t\t} else {\n\t\t\tresource = URI.isUri(resourceOrEditor) ? resourceOrEditor : resourceOrEditor.resource;\n\t\t\tconst customLabel = this.customEditorLabelService.getName(resource);\n\t\t\tlabel = customLabel || basenameOrAuthority(resource);\n\t\t\tdescription = this.labelService.getUriLabel(!!customLabel ? resource : dirname(resource), { relative: true });\n\t\t\tisDirty = this.workingCopyService.isDirty(resource) && !this.filesConfigurationService.hasShortAutoSaveDelay(resource);\n\t\t\textraClasses = [];\n\t\t}\n\n\t\tconst labelAndDescription = description ? `${label} ${description}` : label;\n\n\t\tconst iconClassesValue = new Lazy(() => getIconClasses(this.modelService, this.languageService, resource, undefined, icon).concat(extraClasses));\n\n\t\tconst buttonsValue = new Lazy(() => {\n\t\t\tconst openSideBySideDirection = configuration.openSideBySideDirection;\n\t\t\tconst buttons: IQuickInputButton[] = [];\n\n\t\t\t// Open to side / below\n\t\t\tbuttons.push({\n\t\t\t\ticonClass: openSideBySideDirection === 'right' ? ThemeIcon.asClassName(Codicon.splitHorizontal) : ThemeIcon.asClassName(Codicon.splitVertical),\n\t\t\t\ttooltip: openSideBySideDirection === 'right' ?\n\t\t\t\t\tlocalize({ key: 'openToSide', comment: ['Open this file in a split editor on the left/right side'] }, \"Open to the Side\") :\n\t\t\t\t\tlocalize({ key: 'openToBottom', comment: ['Open this file in a split editor on the bottom'] }, \"Open to the Bottom\")\n\t\t\t});\n\n\t\t\t// Remove from History\n\t\t\tif (isEditorHistoryEntry) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\ticonClass: isDirty ? ('dirty-anything ' + ThemeIcon.asClassName(Codicon.circleFilled)) : ThemeIcon.asClassName(Codicon.close),\n\t\t\t\t\ttooltip: localize('closeEditor', \"Remove from Recently Opened\"),\n\t\t\t\t\talwaysVisible: isDirty\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn buttons;\n\t\t});\n\n\t\treturn {\n\t\t\tresource,\n\t\t\tlabel,\n\t\t\tariaLabel: isDirty ? localize('filePickAriaLabelDirty', \"{0} unsaved changes\", labelAndDescription) : labelAndDescription,\n\t\t\tdescription,\n\t\t\tget iconClasses() { return iconClassesValue.value; },\n\t\t\tget buttons() { return buttonsValue.value; },\n\t\t\ttrigger: (buttonIndex, keyMods) => {\n\t\t\t\tswitch (buttonIndex) {\n\n\t\t\t\t\t// Open to side / below\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tthis.openAnything(resourceOrEditor, { keyMods, range: this.pickState.lastRange, forceOpenSideBySide: true });\n\n\t\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\n\t\t\t\t\t// Remove from History\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (!URI.isUri(resourceOrEditor)) {\n\t\t\t\t\t\t\tthis.historyService.removeFromHistory(resourceOrEditor);\n\n\t\t\t\t\t\t\treturn TriggerAction.REMOVE_ITEM;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn TriggerAction.NO_ACTION;\n\t\t\t},\n\t\t\taccept: (keyMods, event) => this.openAnything(resourceOrEditor, { keyMods, range: this.pickState.lastRange, preserveFocus: event.inBackground, forcePinned: event.inBackground })\n\t\t};\n\t}\n\n\tprivate async openAnything(resourceOrEditor: URI | EditorInput | IResourceEditorInput, options: { keyMods?: IKeyMods; preserveFocus?: boolean; range?: IRange; forceOpenSideBySide?: boolean; forcePinned?: boolean }): Promise<void> {\n\n\t\t// Craft some editor options based on quick access usage\n\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.keyMods?.ctrlCmd || options.forcePinned || this.configuration.openEditorPinned,\n\t\t\tselection: options.range ? Range.collapseToStart(options.range) : undefined\n\t\t};\n\n\t\tconst targetGroup = options.keyMods?.alt || (this.configuration.openEditorPinned && options.keyMods?.ctrlCmd) || options.forceOpenSideBySide ? SIDE_GROUP : ACTIVE_GROUP;\n\n\t\t// Restore any view state if the target is the side group\n\t\tif (targetGroup === SIDE_GROUP) {\n\t\t\tawait this.pickState.editorViewState.restore();\n\t\t}\n\n\t\t// Open editor (typed)\n\t\tif (isEditorInput(resourceOrEditor)) {\n\t\t\tawait this.editorService.openEditor(resourceOrEditor, editorOptions, targetGroup);\n\t\t}\n\n\t\t// Open editor (untyped)\n\t\telse {\n\t\t\tlet resourceEditorInput: IResourceEditorInput;\n\t\t\tif (URI.isUri(resourceOrEditor)) {\n\t\t\t\tresourceEditorInput = {\n\t\t\t\t\tresource: resourceOrEditor,\n\t\t\t\t\toptions: editorOptions\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tresourceEditorInput = {\n\t\t\t\t\t...resourceOrEditor,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t...resourceOrEditor.options,\n\t\t\t\t\t\t...editorOptions\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait this.editorService.openEditor(resourceEditorInput, targetGroup);\n\t\t}\n\t}\n\n\t//#endregion\n}\n"],
  "mappings": "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",
  "names": []
}
