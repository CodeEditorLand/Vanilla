import"../../../../editor/common/editorCommon.js";import*as c from"../../../../nls.js";import{Action2 as n,registerAction2 as s}from"../../../../platform/actions/common/actions.js";import{IConfigurationService as a}from"../../../../platform/configuration/common/configuration.js";import"../../../../platform/instantiation/common/instantiation.js";import{IQuickInputService as m}from"../../../../platform/quickinput/common/quickInput.js";import{IEditorService as u}from"../../../services/editor/common/editorService.js";import*as S from"../common/constants.js";import{TEXT_SEARCH_QUICK_ACCESS_PREFIX as l}from"./quickTextSearch/textSearchQuickAccess.js";import{category as d}from"./searchActionsBase.js";import"./searchModel.js";import{getSelectionTextFromEditor as f}from"./searchView.js";s(class extends n{constructor(){super({id:S.SearchCommandIds.QuickTextSearchActionId,title:c.localize2("quickTextSearch","Quick Search"),category:d,f1:!0})}async run(r,i){const e=r.get(m),o=p(r)??"";e.quickAccess.show(l+o,{preserveValue:!!o})}});function p(t){const r=t.get(u),i=t.get(a),e=r.activeTextEditorControl;return!e||!e.hasTextFocus()||!i.getValue("editor.find.seedSearchStringFromSelection")?null:f(!1,e)}
