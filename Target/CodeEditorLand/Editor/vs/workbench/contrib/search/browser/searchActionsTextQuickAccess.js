import*as c from"../../../../nls.js";import"../../../../platform/instantiation/common/instantiation.js";import*as n from"../common/constants.js";import"./searchModel.js";import{Action2 as s,registerAction2 as a}from"../../../../platform/actions/common/actions.js";import{category as m}from"./searchActionsBase.js";import{IQuickInputService as u}from"../../../../platform/quickinput/common/quickInput.js";import{TEXT_SEARCH_QUICK_ACCESS_PREFIX as S}from"./quickTextSearch/textSearchQuickAccess.js";import{IEditorService as l}from"../../../services/editor/common/editorService.js";import"../../../../editor/common/editorCommon.js";import{IConfigurationService as d}from"../../../../platform/configuration/common/configuration.js";import{getSelectionTextFromEditor as f}from"./searchView.js";a(class extends s{constructor(){super({id:n.SearchCommandIds.QuickTextSearchActionId,title:c.localize2("quickTextSearch","Quick Search"),category:m,f1:!0})}async run(r,i){const e=r.get(u),o=p(r)??"";e.quickAccess.show(S+o,{preserveValue:!!o})}});function p(t){const r=t.get(l),i=t.get(d),e=r.activeTextEditorControl;return!e||!e.hasTextFocus()||!i.getValue("editor.find.seedSearchStringFromSelection")?null:f(!1,e)}
