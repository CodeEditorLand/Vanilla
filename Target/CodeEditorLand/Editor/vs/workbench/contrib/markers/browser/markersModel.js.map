{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/markers/browser/markersModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from \"../../../../base/common/arrays.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport type { IMatch } from \"../../../../base/common/filters.js\";\nimport { Hasher } from \"../../../../base/common/hash.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { basename, extUri } from \"../../../../base/common/resources.js\";\nimport { splitLines } from \"../../../../base/common/strings.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { type IRange, Range } from \"../../../../editor/common/core/range.js\";\nimport { unsupportedSchemas } from \"../../../../platform/markers/common/markerService.js\";\nimport {\n\ttype IMarker,\n\tIMarkerData,\n\ttype IRelatedInformation,\n\tMarkerSeverity,\n} from \"../../../../platform/markers/common/markers.js\";\n\nexport type MarkerElement = ResourceMarkers | Marker | RelatedInformation;\n\nexport function compareMarkersByUri(a: IMarker, b: IMarker) {\n\treturn extUri.compare(a.resource, b.resource);\n}\n\nfunction compareResourceMarkers(\n\ta: ResourceMarkers,\n\tb: ResourceMarkers,\n): number {\n\tconst [firstMarkerOfA] = a.markers;\n\tconst [firstMarkerOfB] = b.markers;\n\tlet res = 0;\n\tif (firstMarkerOfA && firstMarkerOfB) {\n\t\tres = MarkerSeverity.compare(\n\t\t\tfirstMarkerOfA.marker.severity,\n\t\t\tfirstMarkerOfB.marker.severity,\n\t\t);\n\t}\n\tif (res === 0) {\n\t\tres = a.path.localeCompare(b.path) || a.name.localeCompare(b.name);\n\t}\n\treturn res;\n}\n\nexport class ResourceMarkers {\n\treadonly path: string;\n\n\treadonly name: string;\n\n\tprivate _markersMap = new ResourceMap<Marker[]>();\n\tprivate _cachedMarkers: Marker[] | undefined;\n\tprivate _total = 0;\n\n\tconstructor(\n\t\treadonly id: string,\n\t\treadonly resource: URI,\n\t) {\n\t\tthis.path = this.resource.fsPath;\n\t\tthis.name = basename(this.resource);\n\t}\n\n\tget markers(): readonly Marker[] {\n\t\tif (!this._cachedMarkers) {\n\t\t\tthis._cachedMarkers = [...this._markersMap.values()]\n\t\t\t\t.flat()\n\t\t\t\t.sort(ResourceMarkers._compareMarkers);\n\t\t}\n\t\treturn this._cachedMarkers;\n\t}\n\n\thas(uri: URI) {\n\t\treturn this._markersMap.has(uri);\n\t}\n\n\tset(uri: URI, marker: Marker[]) {\n\t\tthis.delete(uri);\n\t\tif (isNonEmptyArray(marker)) {\n\t\t\tthis._markersMap.set(uri, marker);\n\t\t\tthis._total += marker.length;\n\t\t\tthis._cachedMarkers = undefined;\n\t\t}\n\t}\n\n\tdelete(uri: URI) {\n\t\tconst array = this._markersMap.get(uri);\n\t\tif (array) {\n\t\t\tthis._total -= array.length;\n\t\t\tthis._cachedMarkers = undefined;\n\t\t\tthis._markersMap.delete(uri);\n\t\t}\n\t}\n\n\tget total() {\n\t\treturn this._total;\n\t}\n\n\tprivate static _compareMarkers(a: Marker, b: Marker): number {\n\t\treturn (\n\t\t\tMarkerSeverity.compare(a.marker.severity, b.marker.severity) ||\n\t\t\textUri.compare(a.resource, b.resource) ||\n\t\t\tRange.compareRangesUsingStarts(a.marker, b.marker)\n\t\t);\n\t}\n}\n\nexport class Marker {\n\tget resource(): URI {\n\t\treturn this.marker.resource;\n\t}\n\tget range(): IRange {\n\t\treturn this.marker;\n\t}\n\n\tprivate _lines: string[] | undefined;\n\tget lines(): string[] {\n\t\tif (!this._lines) {\n\t\t\tthis._lines = splitLines(this.marker.message);\n\t\t}\n\t\treturn this._lines;\n\t}\n\n\tconstructor(\n\t\treadonly id: string,\n\t\treadonly marker: IMarker,\n\t\treadonly relatedInformation: RelatedInformation[] = [],\n\t) {}\n\n\ttoString(): string {\n\t\treturn JSON.stringify(\n\t\t\t{\n\t\t\t\t...this.marker,\n\t\t\t\tresource: this.marker.resource.path,\n\t\t\t\trelatedInformation: this.relatedInformation.length\n\t\t\t\t\t? this.relatedInformation.map((r) => ({\n\t\t\t\t\t\t\t...r.raw,\n\t\t\t\t\t\t\tresource: r.raw.resource.path,\n\t\t\t\t\t\t}))\n\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t\tnull,\n\t\t\t\"\\t\",\n\t\t);\n\t}\n}\n\nexport class MarkerTableItem extends Marker {\n\tconstructor(\n\t\tmarker: Marker,\n\t\treadonly sourceMatches?: IMatch[],\n\t\treadonly codeMatches?: IMatch[],\n\t\treadonly messageMatches?: IMatch[],\n\t\treadonly fileMatches?: IMatch[],\n\t\treadonly ownerMatches?: IMatch[],\n\t) {\n\t\tsuper(marker.id, marker.marker, marker.relatedInformation);\n\t}\n}\n\nexport class RelatedInformation {\n\tconstructor(\n\t\treadonly id: string,\n\t\treadonly marker: IMarker,\n\t\treadonly raw: IRelatedInformation,\n\t) {}\n}\n\nexport interface MarkerChangesEvent {\n\treadonly added: Set<ResourceMarkers>;\n\treadonly removed: Set<ResourceMarkers>;\n\treadonly updated: Set<ResourceMarkers>;\n}\n\nexport class MarkersModel {\n\tprivate cachedSortedResources: ResourceMarkers[] | undefined = undefined;\n\n\tprivate readonly _onDidChange = new Emitter<MarkerChangesEvent>();\n\treadonly onDidChange: Event<MarkerChangesEvent> = this._onDidChange.event;\n\n\tget resourceMarkers(): ResourceMarkers[] {\n\t\tif (!this.cachedSortedResources) {\n\t\t\tthis.cachedSortedResources = [...this.resourcesByUri.values()].sort(\n\t\t\t\tcompareResourceMarkers,\n\t\t\t);\n\t\t}\n\t\treturn this.cachedSortedResources;\n\t}\n\n\tprivate resourcesByUri: Map<string, ResourceMarkers>;\n\n\tconstructor() {\n\t\tthis.resourcesByUri = new Map<string, ResourceMarkers>();\n\t}\n\n\treset(): void {\n\t\tconst removed = new Set<ResourceMarkers>();\n\t\tfor (const resourceMarker of this.resourcesByUri.values()) {\n\t\t\tremoved.add(resourceMarker);\n\t\t}\n\t\tthis.resourcesByUri.clear();\n\t\tthis._total = 0;\n\t\tthis._onDidChange.fire({\n\t\t\tremoved,\n\t\t\tadded: new Set<ResourceMarkers>(),\n\t\t\tupdated: new Set<ResourceMarkers>(),\n\t\t});\n\t}\n\n\tprivate _total = 0;\n\tget total(): number {\n\t\treturn this._total;\n\t}\n\n\tgetResourceMarkers(resource: URI): ResourceMarkers | null {\n\t\treturn (\n\t\t\tthis.resourcesByUri.get(extUri.getComparisonKey(resource, true)) ??\n\t\t\tnull\n\t\t);\n\t}\n\n\tsetResourceMarkers(resourcesMarkers: [URI, IMarker[]][]): void {\n\t\tconst change: MarkerChangesEvent = {\n\t\t\tadded: new Set(),\n\t\t\tremoved: new Set(),\n\t\t\tupdated: new Set(),\n\t\t};\n\t\tfor (const [resource, rawMarkers] of resourcesMarkers) {\n\t\t\tif (unsupportedSchemas.has(resource.scheme)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst key = extUri.getComparisonKey(resource, true);\n\t\t\tlet resourceMarkers = this.resourcesByUri.get(key);\n\n\t\t\tif (isNonEmptyArray(rawMarkers)) {\n\t\t\t\t// update, add\n\t\t\t\tif (resourceMarkers) {\n\t\t\t\t\tchange.updated.add(resourceMarkers);\n\t\t\t\t} else {\n\t\t\t\t\tconst resourceMarkersId = this.id(resource.toString());\n\t\t\t\t\tresourceMarkers = new ResourceMarkers(\n\t\t\t\t\t\tresourceMarkersId,\n\t\t\t\t\t\tresource.with({ fragment: null }),\n\t\t\t\t\t);\n\t\t\t\t\tthis.resourcesByUri.set(key, resourceMarkers);\n\t\t\t\t\tchange.added.add(resourceMarkers);\n\t\t\t\t}\n\t\t\t\tconst markersCountByKey = new Map<string, number>();\n\t\t\t\tconst markers = rawMarkers.map((rawMarker) => {\n\t\t\t\t\tconst key = IMarkerData.makeKey(rawMarker);\n\t\t\t\t\tconst index = markersCountByKey.get(key) || 0;\n\t\t\t\t\tmarkersCountByKey.set(key, index + 1);\n\n\t\t\t\t\tconst markerId = this.id(\n\t\t\t\t\t\tresourceMarkers!.id,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\trawMarker.resource.toString(),\n\t\t\t\t\t);\n\n\t\t\t\t\tlet relatedInformation: RelatedInformation[] | undefined;\n\t\t\t\t\tif (rawMarker.relatedInformation) {\n\t\t\t\t\t\trelatedInformation = rawMarker.relatedInformation.map(\n\t\t\t\t\t\t\t(r, index) =>\n\t\t\t\t\t\t\t\tnew RelatedInformation(\n\t\t\t\t\t\t\t\t\tthis.id(\n\t\t\t\t\t\t\t\t\t\tmarkerId,\n\t\t\t\t\t\t\t\t\t\tr.resource.toString(),\n\t\t\t\t\t\t\t\t\t\tr.startLineNumber,\n\t\t\t\t\t\t\t\t\t\tr.startColumn,\n\t\t\t\t\t\t\t\t\t\tr.endLineNumber,\n\t\t\t\t\t\t\t\t\t\tr.endColumn,\n\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\trawMarker,\n\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Marker(markerId, rawMarker, relatedInformation);\n\t\t\t\t});\n\n\t\t\t\tthis._total -= resourceMarkers.total;\n\t\t\t\tresourceMarkers.set(resource, markers);\n\t\t\t\tthis._total += resourceMarkers.total;\n\t\t\t} else if (resourceMarkers) {\n\t\t\t\t// clear\n\t\t\t\tthis._total -= resourceMarkers.total;\n\t\t\t\tresourceMarkers.delete(resource);\n\t\t\t\tthis._total += resourceMarkers.total;\n\t\t\t\tif (resourceMarkers.total === 0) {\n\t\t\t\t\tthis.resourcesByUri.delete(key);\n\t\t\t\t\tchange.removed.add(resourceMarkers);\n\t\t\t\t} else {\n\t\t\t\t\tchange.updated.add(resourceMarkers);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.cachedSortedResources = undefined;\n\t\tif (change.added.size || change.removed.size || change.updated.size) {\n\t\t\tthis._onDidChange.fire(change);\n\t\t}\n\t}\n\n\tprivate id(...values: (string | number)[]): string {\n\t\tconst hasher = new Hasher();\n\t\tfor (const value of values) {\n\t\t\thasher.hash(value);\n\t\t}\n\t\treturn `${hasher.value}`;\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis.resourcesByUri.clear();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["key", "index"]
}
