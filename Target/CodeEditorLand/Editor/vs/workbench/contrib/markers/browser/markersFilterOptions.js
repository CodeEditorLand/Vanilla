import{matchesFuzzy as E,matchesFuzzy2 as b}from"../../../../base/common/filters.js";import{getEmptyExpression as y,parse as m,splitGlobAware as u}from"../../../../base/common/glob.js";import{relativePath as g}from"../../../../base/common/resources.js";import*as n from"../../../../base/common/strings.js";import{TernarySearchTree as R}from"../../../../base/common/ternarySearchTree.js";class f{globalExpression;expressionsByRoot;constructor(e,s,t){this.globalExpression=m(e),this.expressionsByRoot=R.forUris(o=>t.extUri.ignorePathCasing(o));for(const o of s)this.expressionsByRoot.set(o.root,{root:o.root,expression:m(o.expression)})}matches(e){const s=this.expressionsByRoot.findSubstr(e);if(s){const t=g(s.root,e);if(t&&s.expression(t))return!0}return!!this.globalExpression(e.path)}}class I{constructor(e,s,t,o,d,a){this.filter=e;e=e.trim(),this.showWarnings=t,this.showErrors=o,this.showInfos=d;const l=Array.isArray(s)?s:[],p=Array.isArray(s)?y():s;for(const{expression:i}of l)for(const r of Object.keys(i))r.endsWith("/**")||(i[`${n.rtrim(r,"/")}/**`]=i[r]);const c=e.startsWith("!");this.textFilter={text:(c?n.ltrim(e,"!"):e).trim(),negate:c};const x=y();if(e){const i=u(e,",").map(r=>r.trim()).filter(r=>!!r.length);for(const r of i)if(r.startsWith("!")){const h=n.ltrim(r,"!");h&&this.setPattern(p,h)}else this.setPattern(x,r)}this.excludesMatcher=new f(p,l,a),this.includesMatcher=new f(x,[],a)}static _filter=b;static _messageFilter=E;showWarnings=!1;showErrors=!1;showInfos=!1;textFilter;excludesMatcher;includesMatcher;static EMPTY(e){return new I("",[],!1,!1,!1,e)}setPattern(e,s){s[0]==="."&&(s="*"+s),e[`**/${s}/**`]=!0,e[`**/${s}`]=!0}}export{I as FilterOptions,f as ResourceGlobMatcher};
