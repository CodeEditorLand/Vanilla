{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/markers/browser/markers.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./markersFileDecorations.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tIMarkerService,\n\ttype MarkerStatistics,\n} from \"../../../../platform/markers/common/markers.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport { viewFilterSubmenu } from \"../../../browser/parts/views/viewFilter.js\";\nimport { ViewAction } from \"../../../browser/parts/views/viewPane.js\";\nimport { ViewPaneContainer } from \"../../../browser/parts/views/viewPaneContainer.js\";\nimport { problemsConfigurationNodeBase } from \"../../../common/configuration.js\";\nimport {\n\tFocusedViewContext,\n\tgetVisbileViewContextKey,\n} from \"../../../common/contextkeys.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport {\n\ttype IViewContainersRegistry,\n\ttype IViewsRegistry,\n\ttype ViewContainer,\n\tExtensions as ViewContainerExtensions,\n\tViewContainerLocation,\n} from \"../../../common/views.js\";\nimport {\n\tIActivityService,\n\tNumberBadge,\n} from \"../../../services/activity/common/activity.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\ttype IStatusbarEntry,\n\ttype IStatusbarEntryAccessor,\n\tIStatusbarService,\n\tStatusbarAlignment,\n} from \"../../../services/statusbar/browser/statusbar.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport {\n\tMarkers,\n\tMarkersContextKeys,\n\tMarkersViewMode,\n} from \"../common/markers.js\";\nimport type { IMarkersView } from \"./markers.js\";\nimport { Marker, RelatedInformation, ResourceMarkers } from \"./markersModel.js\";\nimport { MarkersView } from \"./markersView.js\";\nimport Messages from \"./messages.js\";\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Markers.MARKER_OPEN_ACTION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(MarkersContextKeys.MarkerFocusContextKey),\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyCode.Enter,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow],\n\t},\n\thandler: (accessor, args: any) => {\n\t\tconst markersView = accessor\n\t\t\t.get(IViewsService)\n\t\t\t.getActiveViewWithId<MarkersView>(Markers.MARKERS_VIEW_ID)!;\n\t\tmarkersView.openFileAtElement(\n\t\t\tmarkersView.getFocusElement(),\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t);\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Markers.MARKER_OPEN_SIDE_ACTION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(MarkersContextKeys.MarkerFocusContextKey),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter,\n\t},\n\thandler: (accessor, args: any) => {\n\t\tconst markersView = accessor\n\t\t\t.get(IViewsService)\n\t\t\t.getActiveViewWithId<MarkersView>(Markers.MARKERS_VIEW_ID)!;\n\t\tmarkersView.openFileAtElement(\n\t\t\tmarkersView.getFocusElement(),\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t);\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Markers.MARKER_SHOW_PANEL_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: undefined,\n\thandler: async (accessor, args: any) => {\n\t\tawait accessor.get(IViewsService).openView(Markers.MARKERS_VIEW_ID);\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Markers.MARKER_SHOW_QUICK_FIX,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: MarkersContextKeys.MarkerFocusContextKey,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\thandler: (accessor, args: any) => {\n\t\tconst markersView = accessor\n\t\t\t.get(IViewsService)\n\t\t\t.getActiveViewWithId<MarkersView>(Markers.MARKERS_VIEW_ID)!;\n\t\tconst focusedElement = markersView.getFocusElement();\n\t\tif (focusedElement instanceof Marker) {\n\t\t\tmarkersView.showQuickFixes(focusedElement);\n\t\t}\n\t},\n});\n\n// configuration\nRegistry.as<IConfigurationRegistry>(\n\tExtensions.Configuration,\n).registerConfiguration({\n\t...problemsConfigurationNodeBase,\n\tproperties: {\n\t\t\"problems.autoReveal\": {\n\t\t\tdescription: Messages.PROBLEMS_PANEL_CONFIGURATION_AUTO_REVEAL,\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t},\n\t\t\"problems.defaultViewMode\": {\n\t\t\tdescription: Messages.PROBLEMS_PANEL_CONFIGURATION_VIEW_MODE,\n\t\t\ttype: \"string\",\n\t\t\tdefault: \"tree\",\n\t\t\tenum: [\"table\", \"tree\"],\n\t\t},\n\t\t\"problems.showCurrentInStatus\": {\n\t\t\tdescription:\n\t\t\t\tMessages.PROBLEMS_PANEL_CONFIGURATION_SHOW_CURRENT_STATUS,\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t},\n\t\t\"problems.sortOrder\": {\n\t\t\tdescription: Messages.PROBLEMS_PANEL_CONFIGURATION_COMPARE_ORDER,\n\t\t\ttype: \"string\",\n\t\t\tdefault: \"severity\",\n\t\t\tenum: [\"severity\", \"position\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tMessages.PROBLEMS_PANEL_CONFIGURATION_COMPARE_ORDER_SEVERITY,\n\t\t\t\tMessages.PROBLEMS_PANEL_CONFIGURATION_COMPARE_ORDER_POSITION,\n\t\t\t],\n\t\t},\n\t},\n});\n\nconst markersViewIcon = registerIcon(\n\t\"markers-view-icon\",\n\tCodicon.warning,\n\tlocalize(\"markersViewIcon\", \"View icon of the markers view.\"),\n);\n\n// markers view container\nconst VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(\n\tViewContainerExtensions.ViewContainersRegistry,\n).registerViewContainer(\n\t{\n\t\tid: Markers.MARKERS_CONTAINER_ID,\n\t\ttitle: Messages.MARKERS_PANEL_TITLE_PROBLEMS,\n\t\ticon: markersViewIcon,\n\t\thideIfEmpty: true,\n\t\torder: 0,\n\t\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [\n\t\t\tMarkers.MARKERS_CONTAINER_ID,\n\t\t\t{ mergeViewWithContainerWhenSingleView: true },\n\t\t]),\n\t\tstorageId: Markers.MARKERS_VIEW_STORAGE_ID,\n\t},\n\tViewContainerLocation.Panel,\n\t{ doNotRegisterOpenCommand: true },\n);\n\nRegistry.as<IViewsRegistry>(\n\tViewContainerExtensions.ViewsRegistry,\n).registerViews(\n\t[\n\t\t{\n\t\t\tid: Markers.MARKERS_VIEW_ID,\n\t\t\tcontainerIcon: markersViewIcon,\n\t\t\tname: Messages.MARKERS_PANEL_TITLE_PROBLEMS,\n\t\t\tcanToggleVisibility: false,\n\t\t\tcanMoveView: true,\n\t\t\tctorDescriptor: new SyncDescriptor(MarkersView),\n\t\t\topenCommandActionDescriptor: {\n\t\t\t\tid: \"workbench.actions.view.problems\",\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miMarker\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Problems\",\n\t\t\t\t),\n\t\t\t\tkeybindings: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyM,\n\t\t\t\t},\n\t\t\t\torder: 0,\n\t\t\t},\n\t\t},\n\t],\n\tVIEW_CONTAINER,\n);\n\n// workbench\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n);\n\n// actions\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.actions.table.${Markers.MARKERS_VIEW_ID}.viewAsTree`,\n\t\t\t\ttitle: localize(\"viewAsTree\", \"View as Tree\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tContextKeyExpr.equals(\"view\", Markers.MARKERS_VIEW_ID),\n\t\t\t\t\t\tMarkersContextKeys.MarkersViewModeContextKey.isEqualTo(\n\t\t\t\t\t\t\tMarkersViewMode.Table,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 3,\n\t\t\t\t},\n\t\t\t\ticon: Codicon.listTree,\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tview: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tview.setViewMode(MarkersViewMode.Tree);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.actions.table.${Markers.MARKERS_VIEW_ID}.viewAsTable`,\n\t\t\t\ttitle: localize(\"viewAsTable\", \"View as Table\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tContextKeyExpr.equals(\"view\", Markers.MARKERS_VIEW_ID),\n\t\t\t\t\t\tMarkersContextKeys.MarkersViewModeContextKey.isEqualTo(\n\t\t\t\t\t\t\tMarkersViewMode.Tree,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 3,\n\t\t\t\t},\n\t\t\t\ticon: Codicon.listFlat,\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tview: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tview.setViewMode(MarkersViewMode.Table);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleErrors`,\n\t\t\t\ttitle: localize(\"show errors\", \"Show Errors\"),\n\t\t\t\tcategory: localize(\"problems\", \"Problems\"),\n\t\t\t\ttoggled: MarkersContextKeys.ShowErrorsFilterContextKey,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\t\tgroup: \"1_filter\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\tMarkers.MARKERS_VIEW_ID,\n\t\t\t\t\t),\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tview: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tview.filters.showErrors = !view.filters.showErrors;\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleWarnings`,\n\t\t\t\ttitle: localize(\"show warnings\", \"Show Warnings\"),\n\t\t\t\tcategory: localize(\"problems\", \"Problems\"),\n\t\t\t\ttoggled: MarkersContextKeys.ShowWarningsFilterContextKey,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\t\tgroup: \"1_filter\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\tMarkers.MARKERS_VIEW_ID,\n\t\t\t\t\t),\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tview: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tview.filters.showWarnings = !view.filters.showWarnings;\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleInfos`,\n\t\t\t\ttitle: localize(\"show infos\", \"Show Infos\"),\n\t\t\t\tcategory: localize(\"problems\", \"Problems\"),\n\t\t\t\ttoggled: MarkersContextKeys.ShowInfoFilterContextKey,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\t\tgroup: \"1_filter\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\tMarkers.MARKERS_VIEW_ID,\n\t\t\t\t\t),\n\t\t\t\t\torder: 3,\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tview: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tview.filters.showInfos = !view.filters.showInfos;\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleActiveFile`,\n\t\t\t\ttitle: localize(\"show active file\", \"Show Active File Only\"),\n\t\t\t\tcategory: localize(\"problems\", \"Problems\"),\n\t\t\t\ttoggled: MarkersContextKeys.ShowActiveFileFilterContextKey,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\t\tgroup: \"2_filter\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\tMarkers.MARKERS_VIEW_ID,\n\t\t\t\t\t),\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tview: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tview.filters.activeFile = !view.filters.activeFile;\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleExcludedFiles`,\n\t\t\t\ttitle: localize(\"show excluded files\", \"Show Excluded Files\"),\n\t\t\t\tcategory: localize(\"problems\", \"Problems\"),\n\t\t\t\ttoggled:\n\t\t\t\t\tMarkersContextKeys.ShowExcludedFilesFilterContextKey.negate(),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\t\tgroup: \"2_filter\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\tMarkers.MARKERS_VIEW_ID,\n\t\t\t\t\t),\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tview: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tview.filters.excludedFiles = !view.filters.excludedFiles;\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.problems.focus\",\n\t\t\t\ttitle: Messages.MARKERS_PANEL_SHOW_LABEL,\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\taccessor.get(IViewsService).openView(Markers.MARKERS_VIEW_ID, true);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tconst when = ContextKeyExpr.and(\n\t\t\t\tFocusedViewContext.isEqualTo(Markers.MARKERS_VIEW_ID),\n\t\t\t\tMarkersContextKeys.MarkersTreeVisibilityContextKey,\n\t\t\t\tMarkersContextKeys.RelatedInformationFocusContextKey.toNegated(),\n\t\t\t);\n\t\t\tsuper({\n\t\t\t\tid: Markers.MARKER_COPY_ACTION_ID,\n\t\t\t\ttitle: localize2(\"copyMarker\", \"Copy\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ProblemsPanelContext,\n\t\t\t\t\twhen,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t},\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyC,\n\t\t\t\t\twhen,\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tmarkersView: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tconst clipboardService = serviceAccessor.get(IClipboardService);\n\t\t\tconst selection =\n\t\t\t\tmarkersView.getFocusedSelectedElements() ||\n\t\t\t\tmarkersView.getAllResourceMarkers();\n\t\t\tconst markers: Marker[] = [];\n\t\t\tconst addMarker = (marker: Marker) => {\n\t\t\t\tif (!markers.includes(marker)) {\n\t\t\t\t\tmarkers.push(marker);\n\t\t\t\t}\n\t\t\t};\n\t\t\tfor (const selected of selection) {\n\t\t\t\tif (selected instanceof ResourceMarkers) {\n\t\t\t\t\tselected.markers.forEach(addMarker);\n\t\t\t\t} else if (selected instanceof Marker) {\n\t\t\t\t\taddMarker(selected);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (markers.length) {\n\t\t\t\tawait clipboardService.writeText(`[${markers}]`);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Markers.MARKER_COPY_MESSAGE_ACTION_ID,\n\t\t\t\ttitle: localize2(\"copyMessage\", \"Copy Message\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ProblemsPanelContext,\n\t\t\t\t\twhen: MarkersContextKeys.MarkerFocusContextKey,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tmarkersView: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tconst clipboardService = serviceAccessor.get(IClipboardService);\n\t\t\tconst element = markersView.getFocusElement();\n\t\t\tif (element instanceof Marker) {\n\t\t\t\tawait clipboardService.writeText(element.marker.message);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Markers.RELATED_INFORMATION_COPY_MESSAGE_ACTION_ID,\n\t\t\t\ttitle: localize2(\"copyMessage\", \"Copy Message\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ProblemsPanelContext,\n\t\t\t\t\twhen: MarkersContextKeys.RelatedInformationFocusContextKey,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tmarkersView: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tconst clipboardService = serviceAccessor.get(IClipboardService);\n\t\t\tconst element = markersView.getFocusElement();\n\t\t\tif (element instanceof RelatedInformation) {\n\t\t\t\tawait clipboardService.writeText(element.raw.message);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Markers.FOCUS_PROBLEMS_FROM_FILTER,\n\t\t\t\ttitle: localize(\"focusProblemsList\", \"Focus problems view\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: MarkersContextKeys.MarkerViewFilterFocusContextKey,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tmarkersView: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tmarkersView.focus();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Markers.MARKERS_VIEW_FOCUS_FILTER,\n\t\t\t\ttitle: localize(\"focusProblemsFilter\", \"Focus problems filter\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: FocusedViewContext.isEqualTo(Markers.MARKERS_VIEW_ID),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tmarkersView: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tmarkersView.focusFilter();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Markers.MARKERS_VIEW_SHOW_MULTILINE_MESSAGE,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"show multiline\",\n\t\t\t\t\t\"Show message in multiple lines\",\n\t\t\t\t),\n\t\t\t\tcategory: localize(\"problems\", \"Problems\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\twhen: ContextKeyExpr.has(\n\t\t\t\t\t\tgetVisbileViewContextKey(Markers.MARKERS_VIEW_ID),\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tmarkersView: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tmarkersView.setMultiline(true);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Markers.MARKERS_VIEW_SHOW_SINGLELINE_MESSAGE,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"show singleline\",\n\t\t\t\t\t\"Show message in single line\",\n\t\t\t\t),\n\t\t\t\tcategory: localize(\"problems\", \"Problems\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\twhen: ContextKeyExpr.has(\n\t\t\t\t\t\tgetVisbileViewContextKey(Markers.MARKERS_VIEW_ID),\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tmarkersView: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tmarkersView.setMultiline(false);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Markers.MARKERS_VIEW_CLEAR_FILTER_TEXT,\n\t\t\t\ttitle: localize(\"clearFiltersText\", \"Clear filters text\"),\n\t\t\t\tcategory: localize(\"problems\", \"Problems\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: MarkersContextKeys.MarkerViewFilterFocusContextKey,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t},\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tmarkersView: IMarkersView,\n\t\t): Promise<void> {\n\t\t\tmarkersView.clearFilterText();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<IMarkersView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.actions.treeView.${Markers.MARKERS_VIEW_ID}.collapseAll`,\n\t\t\t\ttitle: localize(\"collapseAll\", \"Collapse All\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tContextKeyExpr.equals(\"view\", Markers.MARKERS_VIEW_ID),\n\t\t\t\t\t\tMarkersContextKeys.MarkersViewModeContextKey.isEqualTo(\n\t\t\t\t\t\t\tMarkersViewMode.Tree,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t\ticon: Codicon.collapseAll,\n\t\t\t\tviewId: Markers.MARKERS_VIEW_ID,\n\t\t\t});\n\t\t}\n\t\tasync runInView(\n\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\tview: IMarkersView,\n\t\t): Promise<void> {\n\t\t\treturn view.collapseAll();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: Markers.TOGGLE_MARKERS_VIEW_ACTION_ID,\n\t\t\t\ttitle: Messages.MARKERS_PANEL_TOGGLE_LABEL,\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tif (viewsService.isViewVisible(Markers.MARKERS_VIEW_ID)) {\n\t\t\t\tviewsService.closeView(Markers.MARKERS_VIEW_ID);\n\t\t\t} else {\n\t\t\t\tviewsService.openView(Markers.MARKERS_VIEW_ID, true);\n\t\t\t}\n\t\t}\n\t},\n);\n\nclass MarkersStatusBarContributions\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate markersStatusItem: IStatusbarEntryAccessor;\n\tprivate markersStatusItemOff: IStatusbarEntryAccessor | undefined;\n\n\tconstructor(\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis.markersStatusItem = this._register(\n\t\t\tthis.statusbarService.addEntry(\n\t\t\t\tthis.getMarkersItem(),\n\t\t\t\t\"status.problems\",\n\t\t\t\tStatusbarAlignment.LEFT,\n\t\t\t\t50 /* Medium Priority */,\n\t\t\t),\n\t\t);\n\n\t\tconst addStatusBarEntry = () => {\n\t\t\tthis.markersStatusItemOff = this.statusbarService.addEntry(\n\t\t\t\tthis.getMarkersItemTurnedOff(),\n\t\t\t\t\"status.problemsVisibility\",\n\t\t\t\tStatusbarAlignment.LEFT,\n\t\t\t\t49,\n\t\t\t);\n\t\t};\n\n\t\t// Add the status bar entry if the problems is not visible\n\t\tlet config = this.configurationService.getValue(\"problems.visibility\");\n\t\tif (!config) {\n\t\t\taddStatusBarEntry();\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis.markerService.onMarkerChanged(() => {\n\t\t\t\tthis.markersStatusItem.update(this.getMarkersItem());\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(\"problems.visibility\")) {\n\t\t\t\t\tthis.markersStatusItem.update(this.getMarkersItem());\n\n\t\t\t\t\t// Update based on what setting was changed to.\n\t\t\t\t\tconfig = this.configurationService.getValue(\n\t\t\t\t\t\t\"problems.visibility\",\n\t\t\t\t\t);\n\t\t\t\t\tif (!config && !this.markersStatusItemOff) {\n\t\t\t\t\t\taddStatusBarEntry();\n\t\t\t\t\t} else if (config && this.markersStatusItemOff) {\n\t\t\t\t\t\tthis.markersStatusItemOff.dispose();\n\t\t\t\t\t\tthis.markersStatusItemOff = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate getMarkersItem(): IStatusbarEntry {\n\t\tconst markersStatistics = this.markerService.getStatistics();\n\t\tconst tooltip = this.getMarkersTooltip(markersStatistics);\n\t\treturn {\n\t\t\tname: localize(\"status.problems\", \"Problems\"),\n\t\t\ttext: this.getMarkersText(markersStatistics),\n\t\t\tariaLabel: tooltip,\n\t\t\ttooltip,\n\t\t\tcommand: \"workbench.actions.view.toggleProblems\",\n\t\t};\n\t}\n\n\tprivate getMarkersItemTurnedOff(): IStatusbarEntry {\n\t\t// Update to true, config checked before `getMarkersItemTurnedOff` is called.\n\t\tthis.statusbarService.updateEntryVisibility(\n\t\t\t\"status.problemsVisibility\",\n\t\t\ttrue,\n\t\t);\n\t\tconst openSettingsCommand = \"workbench.action.openSettings\";\n\t\tconst configureSettingsLabel = \"@id:problems.visibility\";\n\t\tconst tooltip = localize(\n\t\t\t\"status.problemsVisibilityOff\",\n\t\t\t\"Problems are turned off. Click to open settings.\",\n\t\t);\n\t\treturn {\n\t\t\tname: localize(\"status.problemsVisibility\", \"Problems Visibility\"),\n\t\t\ttext: \"$(whole-word)\",\n\t\t\tariaLabel: tooltip,\n\t\t\ttooltip,\n\t\t\tkind: \"warning\",\n\t\t\tcommand: {\n\t\t\t\ttitle: openSettingsCommand,\n\t\t\t\targuments: [configureSettingsLabel],\n\t\t\t\tid: openSettingsCommand,\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate getMarkersTooltip(stats: MarkerStatistics): string {\n\t\tconst errorTitle = (n: number) =>\n\t\t\tlocalize(\"totalErrors\", \"Errors: {0}\", n);\n\t\tconst warningTitle = (n: number) =>\n\t\t\tlocalize(\"totalWarnings\", \"Warnings: {0}\", n);\n\t\tconst infoTitle = (n: number) =>\n\t\t\tlocalize(\"totalInfos\", \"Infos: {0}\", n);\n\n\t\tconst titles: string[] = [];\n\n\t\tif (stats.errors > 0) {\n\t\t\ttitles.push(errorTitle(stats.errors));\n\t\t}\n\n\t\tif (stats.warnings > 0) {\n\t\t\ttitles.push(warningTitle(stats.warnings));\n\t\t}\n\n\t\tif (stats.infos > 0) {\n\t\t\ttitles.push(infoTitle(stats.infos));\n\t\t}\n\n\t\tif (titles.length === 0) {\n\t\t\treturn localize(\"noProblems\", \"No Problems\");\n\t\t}\n\n\t\treturn titles.join(\", \");\n\t}\n\n\tprivate getMarkersText(stats: MarkerStatistics): string {\n\t\tconst problemsText: string[] = [];\n\n\t\t// Errors\n\t\tproblemsText.push(\"$(error) \" + this.packNumber(stats.errors));\n\n\t\t// Warnings\n\t\tproblemsText.push(\"$(warning) \" + this.packNumber(stats.warnings));\n\n\t\t// Info (only if any)\n\t\tif (stats.infos > 0) {\n\t\t\tproblemsText.push(\"$(info) \" + this.packNumber(stats.infos));\n\t\t}\n\n\t\treturn problemsText.join(\" \");\n\t}\n\n\tprivate packNumber(n: number): string {\n\t\tconst manyProblems = localize(\"manyProblems\", \"10K+\");\n\t\treturn n > 9999\n\t\t\t? manyProblems\n\t\t\t: n > 999\n\t\t\t\t? n.toString().charAt(0) + \"K\"\n\t\t\t\t: n.toString();\n\t}\n}\n\nworkbenchRegistry.registerWorkbenchContribution(\n\tMarkersStatusBarContributions,\n\tLifecyclePhase.Restored,\n);\n\nclass ActivityUpdater extends Disposable implements IWorkbenchContribution {\n\tprivate readonly activity = this._register(\n\t\tnew MutableDisposable<IDisposable>(),\n\t);\n\n\tconstructor(\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tthis.markerService.onMarkerChanged(() => this.updateBadge()),\n\t\t);\n\t\tthis.updateBadge();\n\t}\n\n\tprivate updateBadge(): void {\n\t\tconst { errors, warnings, infos } = this.markerService.getStatistics();\n\t\tconst total = errors + warnings + infos;\n\t\tif (total > 0) {\n\t\t\tconst message = localize(\n\t\t\t\t\"totalProblems\",\n\t\t\t\t\"Total {0} Problems\",\n\t\t\t\ttotal,\n\t\t\t);\n\t\t\tthis.activity.value = this.activityService.showViewActivity(\n\t\t\t\tMarkers.MARKERS_VIEW_ID,\n\t\t\t\t{ badge: new NumberBadge(total, () => message) },\n\t\t\t);\n\t\t} else {\n\t\t\tthis.activity.value = undefined;\n\t\t}\n\t}\n}\n\nworkbenchRegistry.registerWorkbenchContribution(\n\tActivityUpdater,\n\tLifecyclePhase.Restored,\n);\n"],
  "mappings": "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",
  "names": []
}
