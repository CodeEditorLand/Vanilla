{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/markers/browser/markers.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './markersFileDecorations.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Extensions, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Marker, RelatedInformation, ResourceMarkers } from './markersModel.js';\nimport { MarkersView } from './markersView.js';\nimport { MenuId, registerAction2, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { MarkersViewMode, Markers, MarkersContextKeys } from '../common/markers.js';\nimport Messages from './messages.js';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IMarkersView } from './markers.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { Disposable, IDisposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment, IStatusbarEntry } from '../../../services/statusbar/browser/statusbar.js';\nimport { IMarkerService, MarkerStatistics } from '../../../../platform/markers/common/markers.js';\nimport { ViewContainer, IViewContainersRegistry, Extensions as ViewContainerExtensions, ViewContainerLocation, IViewsRegistry } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { getVisbileViewContextKey, FocusedViewContext } from '../../../common/contextkeys.js';\nimport { ViewPaneContainer } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { ViewAction } from '../../../browser/parts/views/viewPane.js';\nimport { IActivityService, NumberBadge } from '../../../services/activity/common/activity.js';\nimport { viewFilterSubmenu } from '../../../browser/parts/views/viewFilter.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { problemsConfigurationNodeBase } from '../../../common/configuration.js';\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Markers.MARKER_OPEN_ACTION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(MarkersContextKeys.MarkerFocusContextKey),\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyCode.Enter,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow]\n\t},\n\thandler: (accessor, args: any) => {\n\t\tconst markersView = accessor.get(IViewsService).getActiveViewWithId<MarkersView>(Markers.MARKERS_VIEW_ID)!;\n\t\tmarkersView.openFileAtElement(markersView.getFocusElement(), false, false, true);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Markers.MARKER_OPEN_SIDE_ACTION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(MarkersContextKeys.MarkerFocusContextKey),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t},\n\thandler: (accessor, args: any) => {\n\t\tconst markersView = accessor.get(IViewsService).getActiveViewWithId<MarkersView>(Markers.MARKERS_VIEW_ID)!;\n\t\tmarkersView.openFileAtElement(markersView.getFocusElement(), false, true, true);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Markers.MARKER_SHOW_PANEL_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: undefined,\n\thandler: async (accessor, args: any) => {\n\t\tawait accessor.get(IViewsService).openView(Markers.MARKERS_VIEW_ID);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Markers.MARKER_SHOW_QUICK_FIX,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: MarkersContextKeys.MarkerFocusContextKey,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\thandler: (accessor, args: any) => {\n\t\tconst markersView = accessor.get(IViewsService).getActiveViewWithId<MarkersView>(Markers.MARKERS_VIEW_ID)!;\n\t\tconst focusedElement = markersView.getFocusElement();\n\t\tif (focusedElement instanceof Marker) {\n\t\t\tmarkersView.showQuickFixes(focusedElement);\n\t\t}\n\t}\n});\n\n// configuration\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t...problemsConfigurationNodeBase,\n\t'properties': {\n\t\t'problems.autoReveal': {\n\t\t\t'description': Messages.PROBLEMS_PANEL_CONFIGURATION_AUTO_REVEAL,\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t},\n\t\t'problems.defaultViewMode': {\n\t\t\t'description': Messages.PROBLEMS_PANEL_CONFIGURATION_VIEW_MODE,\n\t\t\t'type': 'string',\n\t\t\t'default': 'tree',\n\t\t\t'enum': ['table', 'tree'],\n\t\t},\n\t\t'problems.showCurrentInStatus': {\n\t\t\t'description': Messages.PROBLEMS_PANEL_CONFIGURATION_SHOW_CURRENT_STATUS,\n\t\t\t'type': 'boolean',\n\t\t\t'default': false\n\t\t},\n\t\t'problems.sortOrder': {\n\t\t\t'description': Messages.PROBLEMS_PANEL_CONFIGURATION_COMPARE_ORDER,\n\t\t\t'type': 'string',\n\t\t\t'default': 'severity',\n\t\t\t'enum': ['severity', 'position'],\n\t\t\t'enumDescriptions': [\n\t\t\t\tMessages.PROBLEMS_PANEL_CONFIGURATION_COMPARE_ORDER_SEVERITY,\n\t\t\t\tMessages.PROBLEMS_PANEL_CONFIGURATION_COMPARE_ORDER_POSITION,\n\t\t\t],\n\t\t},\n\t}\n});\n\nconst markersViewIcon = registerIcon('markers-view-icon', Codicon.warning, localize('markersViewIcon', 'View icon of the markers view.'));\n\n// markers view container\nconst VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: Markers.MARKERS_CONTAINER_ID,\n\ttitle: Messages.MARKERS_PANEL_TITLE_PROBLEMS,\n\ticon: markersViewIcon,\n\thideIfEmpty: true,\n\torder: 0,\n\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [Markers.MARKERS_CONTAINER_ID, { mergeViewWithContainerWhenSingleView: true }]),\n\tstorageId: Markers.MARKERS_VIEW_STORAGE_ID,\n}, ViewContainerLocation.Panel, { doNotRegisterOpenCommand: true });\n\nRegistry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry).registerViews([{\n\tid: Markers.MARKERS_VIEW_ID,\n\tcontainerIcon: markersViewIcon,\n\tname: Messages.MARKERS_PANEL_TITLE_PROBLEMS,\n\tcanToggleVisibility: false,\n\tcanMoveView: true,\n\tctorDescriptor: new SyncDescriptor(MarkersView),\n\topenCommandActionDescriptor: {\n\t\tid: 'workbench.actions.view.problems',\n\t\tmnemonicTitle: localize({ key: 'miMarker', comment: ['&& denotes a mnemonic'] }, \"&&Problems\"),\n\t\tkeybindings: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyM },\n\t\torder: 0,\n\t}\n}], VIEW_CONTAINER);\n\n// workbench\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\n\n// actions\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.table.${Markers.MARKERS_VIEW_ID}.viewAsTree`,\n\t\t\ttitle: localize('viewAsTree', \"View as Tree\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', Markers.MARKERS_VIEW_ID), MarkersContextKeys.MarkersViewModeContextKey.isEqualTo(MarkersViewMode.Table)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3\n\t\t\t},\n\t\t\ticon: Codicon.listTree,\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\n\tasync runInView(serviceAccessor: ServicesAccessor, view: IMarkersView): Promise<void> {\n\t\tview.setViewMode(MarkersViewMode.Tree);\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.table.${Markers.MARKERS_VIEW_ID}.viewAsTable`,\n\t\t\ttitle: localize('viewAsTable', \"View as Table\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', Markers.MARKERS_VIEW_ID), MarkersContextKeys.MarkersViewModeContextKey.isEqualTo(MarkersViewMode.Tree)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3\n\t\t\t},\n\t\t\ticon: Codicon.listFlat,\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\n\tasync runInView(serviceAccessor: ServicesAccessor, view: IMarkersView): Promise<void> {\n\t\tview.setViewMode(MarkersViewMode.Table);\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleErrors`,\n\t\t\ttitle: localize('show errors', \"Show Errors\"),\n\t\t\tcategory: localize('problems', \"Problems\"),\n\t\t\ttoggled: MarkersContextKeys.ShowErrorsFilterContextKey,\n\t\t\tmenu: {\n\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\tgroup: '1_filter',\n\t\t\t\twhen: ContextKeyExpr.equals('view', Markers.MARKERS_VIEW_ID),\n\t\t\t\torder: 1\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\n\tasync runInView(serviceAccessor: ServicesAccessor, view: IMarkersView): Promise<void> {\n\t\tview.filters.showErrors = !view.filters.showErrors;\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleWarnings`,\n\t\t\ttitle: localize('show warnings', \"Show Warnings\"),\n\t\t\tcategory: localize('problems', \"Problems\"),\n\t\t\ttoggled: MarkersContextKeys.ShowWarningsFilterContextKey,\n\t\t\tmenu: {\n\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\tgroup: '1_filter',\n\t\t\t\twhen: ContextKeyExpr.equals('view', Markers.MARKERS_VIEW_ID),\n\t\t\t\torder: 2\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\n\tasync runInView(serviceAccessor: ServicesAccessor, view: IMarkersView): Promise<void> {\n\t\tview.filters.showWarnings = !view.filters.showWarnings;\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleInfos`,\n\t\t\ttitle: localize('show infos', \"Show Infos\"),\n\t\t\tcategory: localize('problems', \"Problems\"),\n\t\t\ttoggled: MarkersContextKeys.ShowInfoFilterContextKey,\n\t\t\tmenu: {\n\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\tgroup: '1_filter',\n\t\t\t\twhen: ContextKeyExpr.equals('view', Markers.MARKERS_VIEW_ID),\n\t\t\t\torder: 3\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\n\tasync runInView(serviceAccessor: ServicesAccessor, view: IMarkersView): Promise<void> {\n\t\tview.filters.showInfos = !view.filters.showInfos;\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleActiveFile`,\n\t\t\ttitle: localize('show active file', \"Show Active File Only\"),\n\t\t\tcategory: localize('problems', \"Problems\"),\n\t\t\ttoggled: MarkersContextKeys.ShowActiveFileFilterContextKey,\n\t\t\tmenu: {\n\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\tgroup: '2_filter',\n\t\t\t\twhen: ContextKeyExpr.equals('view', Markers.MARKERS_VIEW_ID),\n\t\t\t\torder: 1\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\n\tasync runInView(serviceAccessor: ServicesAccessor, view: IMarkersView): Promise<void> {\n\t\tview.filters.activeFile = !view.filters.activeFile;\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.${Markers.MARKERS_VIEW_ID}.toggleExcludedFiles`,\n\t\t\ttitle: localize('show excluded files', \"Show Excluded Files\"),\n\t\t\tcategory: localize('problems', \"Problems\"),\n\t\t\ttoggled: MarkersContextKeys.ShowExcludedFilesFilterContextKey.negate(),\n\t\t\tmenu: {\n\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\tgroup: '2_filter',\n\t\t\t\twhen: ContextKeyExpr.equals('view', Markers.MARKERS_VIEW_ID),\n\t\t\t\torder: 2\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\n\tasync runInView(serviceAccessor: ServicesAccessor, view: IMarkersView): Promise<void> {\n\t\tview.filters.excludedFiles = !view.filters.excludedFiles;\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.problems.focus',\n\t\t\ttitle: Messages.MARKERS_PANEL_SHOW_LABEL,\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\taccessor.get(IViewsService).openView(Markers.MARKERS_VIEW_ID, true);\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tconst when = ContextKeyExpr.and(FocusedViewContext.isEqualTo(Markers.MARKERS_VIEW_ID), MarkersContextKeys.MarkersTreeVisibilityContextKey, MarkersContextKeys.RelatedInformationFocusContextKey.toNegated());\n\t\tsuper({\n\t\t\tid: Markers.MARKER_COPY_ACTION_ID,\n\t\t\ttitle: localize2('copyMarker', 'Copy'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ProblemsPanelContext,\n\t\t\t\twhen,\n\t\t\t\tgroup: 'navigation'\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyC,\n\t\t\t\twhen\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, markersView: IMarkersView): Promise<void> {\n\t\tconst clipboardService = serviceAccessor.get(IClipboardService);\n\t\tconst selection = markersView.getFocusedSelectedElements() || markersView.getAllResourceMarkers();\n\t\tconst markers: Marker[] = [];\n\t\tconst addMarker = (marker: Marker) => {\n\t\t\tif (!markers.includes(marker)) {\n\t\t\t\tmarkers.push(marker);\n\t\t\t}\n\t\t};\n\t\tfor (const selected of selection) {\n\t\t\tif (selected instanceof ResourceMarkers) {\n\t\t\t\tselected.markers.forEach(addMarker);\n\t\t\t} else if (selected instanceof Marker) {\n\t\t\t\taddMarker(selected);\n\t\t\t}\n\t\t}\n\t\tif (markers.length) {\n\t\t\tawait clipboardService.writeText(`[${markers}]`);\n\t\t}\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Markers.MARKER_COPY_MESSAGE_ACTION_ID,\n\t\t\ttitle: localize2('copyMessage', 'Copy Message'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ProblemsPanelContext,\n\t\t\t\twhen: MarkersContextKeys.MarkerFocusContextKey,\n\t\t\t\tgroup: 'navigation'\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, markersView: IMarkersView): Promise<void> {\n\t\tconst clipboardService = serviceAccessor.get(IClipboardService);\n\t\tconst element = markersView.getFocusElement();\n\t\tif (element instanceof Marker) {\n\t\t\tawait clipboardService.writeText(element.marker.message);\n\t\t}\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Markers.RELATED_INFORMATION_COPY_MESSAGE_ACTION_ID,\n\t\t\ttitle: localize2('copyMessage', 'Copy Message'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ProblemsPanelContext,\n\t\t\t\twhen: MarkersContextKeys.RelatedInformationFocusContextKey,\n\t\t\t\tgroup: 'navigation'\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, markersView: IMarkersView): Promise<void> {\n\t\tconst clipboardService = serviceAccessor.get(IClipboardService);\n\t\tconst element = markersView.getFocusElement();\n\t\tif (element instanceof RelatedInformation) {\n\t\t\tawait clipboardService.writeText(element.raw.message);\n\t\t}\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Markers.FOCUS_PROBLEMS_FROM_FILTER,\n\t\t\ttitle: localize('focusProblemsList', \"Focus problems view\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: MarkersContextKeys.MarkerViewFilterFocusContextKey,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, markersView: IMarkersView): Promise<void> {\n\t\tmarkersView.focus();\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Markers.MARKERS_VIEW_FOCUS_FILTER,\n\t\t\ttitle: localize('focusProblemsFilter', \"Focus problems filter\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: FocusedViewContext.isEqualTo(Markers.MARKERS_VIEW_ID),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, markersView: IMarkersView): Promise<void> {\n\t\tmarkersView.focusFilter();\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Markers.MARKERS_VIEW_SHOW_MULTILINE_MESSAGE,\n\t\t\ttitle: localize2('show multiline', \"Show message in multiple lines\"),\n\t\t\tcategory: localize('problems', \"Problems\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.has(getVisbileViewContextKey(Markers.MARKERS_VIEW_ID))\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, markersView: IMarkersView): Promise<void> {\n\t\tmarkersView.setMultiline(true);\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Markers.MARKERS_VIEW_SHOW_SINGLELINE_MESSAGE,\n\t\t\ttitle: localize2('show singleline', \"Show message in single line\"),\n\t\t\tcategory: localize('problems', \"Problems\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.has(getVisbileViewContextKey(Markers.MARKERS_VIEW_ID))\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, markersView: IMarkersView): Promise<void> {\n\t\tmarkersView.setMultiline(false);\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Markers.MARKERS_VIEW_CLEAR_FILTER_TEXT,\n\t\t\ttitle: localize('clearFiltersText', \"Clear filters text\"),\n\t\t\tcategory: localize('problems', \"Problems\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: MarkersContextKeys.MarkerViewFilterFocusContextKey,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyCode.Escape\n\t\t\t},\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, markersView: IMarkersView): Promise<void> {\n\t\tmarkersView.clearFilterText();\n\t}\n});\n\nregisterAction2(class extends ViewAction<IMarkersView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.treeView.${Markers.MARKERS_VIEW_ID}.collapseAll`,\n\t\t\ttitle: localize('collapseAll', \"Collapse All\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', Markers.MARKERS_VIEW_ID), MarkersContextKeys.MarkersViewModeContextKey.isEqualTo(MarkersViewMode.Tree)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2,\n\t\t\t},\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tviewId: Markers.MARKERS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, view: IMarkersView): Promise<void> {\n\t\treturn view.collapseAll();\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Markers.TOGGLE_MARKERS_VIEW_ACTION_ID,\n\t\t\ttitle: Messages.MARKERS_PANEL_TOGGLE_LABEL,\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tif (viewsService.isViewVisible(Markers.MARKERS_VIEW_ID)) {\n\t\t\tviewsService.closeView(Markers.MARKERS_VIEW_ID);\n\t\t} else {\n\t\t\tviewsService.openView(Markers.MARKERS_VIEW_ID, true);\n\t\t}\n\t}\n});\n\nclass MarkersStatusBarContributions extends Disposable implements IWorkbenchContribution {\n\n\tprivate markersStatusItem: IStatusbarEntryAccessor;\n\tprivate markersStatusItemOff: IStatusbarEntryAccessor | undefined;\n\n\tconstructor(\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis.markersStatusItem = this._register(this.statusbarService.addEntry(this.getMarkersItem(), 'status.problems', StatusbarAlignment.LEFT, 50 /* Medium Priority */));\n\n\t\tconst addStatusBarEntry = () => {\n\t\t\tthis.markersStatusItemOff = this.statusbarService.addEntry(this.getMarkersItemTurnedOff(), 'status.problemsVisibility', StatusbarAlignment.LEFT, 49);\n\t\t};\n\n\t\t// Add the status bar entry if the problems is not visible\n\t\tlet config = this.configurationService.getValue('problems.visibility');\n\t\tif (!config) {\n\t\t\taddStatusBarEntry();\n\t\t}\n\n\t\tthis._register(this.markerService.onMarkerChanged(() => {\n\t\t\tthis.markersStatusItem.update(this.getMarkersItem());\n\t\t}));\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('problems.visibility')) {\n\t\t\t\tthis.markersStatusItem.update(this.getMarkersItem());\n\n\t\t\t\t// Update based on what setting was changed to.\n\t\t\t\tconfig = this.configurationService.getValue('problems.visibility');\n\t\t\t\tif (!config && !this.markersStatusItemOff) {\n\t\t\t\t\taddStatusBarEntry();\n\t\t\t\t} else if (config && this.markersStatusItemOff) {\n\t\t\t\t\tthis.markersStatusItemOff.dispose();\n\t\t\t\t\tthis.markersStatusItemOff = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate getMarkersItem(): IStatusbarEntry {\n\t\tconst markersStatistics = this.markerService.getStatistics();\n\t\tconst tooltip = this.getMarkersTooltip(markersStatistics);\n\t\treturn {\n\t\t\tname: localize('status.problems', \"Problems\"),\n\t\t\ttext: this.getMarkersText(markersStatistics),\n\t\t\tariaLabel: tooltip,\n\t\t\ttooltip,\n\t\t\tcommand: 'workbench.actions.view.toggleProblems'\n\t\t};\n\t}\n\n\tprivate getMarkersItemTurnedOff(): IStatusbarEntry {\n\t\t// Update to true, config checked before `getMarkersItemTurnedOff` is called.\n\t\tthis.statusbarService.updateEntryVisibility('status.problemsVisibility', true);\n\t\tconst openSettingsCommand = 'workbench.action.openSettings';\n\t\tconst configureSettingsLabel = '@id:problems.visibility';\n\t\tconst tooltip = localize('status.problemsVisibilityOff', \"Problems are turned off. Click to open settings.\");\n\t\treturn {\n\t\t\tname: localize('status.problemsVisibility', \"Problems Visibility\"),\n\t\t\ttext: '$(whole-word)',\n\t\t\tariaLabel: tooltip,\n\t\t\ttooltip,\n\t\t\tkind: 'warning',\n\t\t\tcommand: { title: openSettingsCommand, arguments: [configureSettingsLabel], id: openSettingsCommand }\n\t\t};\n\t}\n\n\tprivate getMarkersTooltip(stats: MarkerStatistics): string {\n\t\tconst errorTitle = (n: number) => localize('totalErrors', \"Errors: {0}\", n);\n\t\tconst warningTitle = (n: number) => localize('totalWarnings', \"Warnings: {0}\", n);\n\t\tconst infoTitle = (n: number) => localize('totalInfos', \"Infos: {0}\", n);\n\n\t\tconst titles: string[] = [];\n\n\t\tif (stats.errors > 0) {\n\t\t\ttitles.push(errorTitle(stats.errors));\n\t\t}\n\n\t\tif (stats.warnings > 0) {\n\t\t\ttitles.push(warningTitle(stats.warnings));\n\t\t}\n\n\t\tif (stats.infos > 0) {\n\t\t\ttitles.push(infoTitle(stats.infos));\n\t\t}\n\n\t\tif (titles.length === 0) {\n\t\t\treturn localize('noProblems', \"No Problems\");\n\t\t}\n\n\t\treturn titles.join(', ');\n\t}\n\n\tprivate getMarkersText(stats: MarkerStatistics): string {\n\t\tconst problemsText: string[] = [];\n\n\t\t// Errors\n\t\tproblemsText.push('$(error) ' + this.packNumber(stats.errors));\n\n\t\t// Warnings\n\t\tproblemsText.push('$(warning) ' + this.packNumber(stats.warnings));\n\n\t\t// Info (only if any)\n\t\tif (stats.infos > 0) {\n\t\t\tproblemsText.push('$(info) ' + this.packNumber(stats.infos));\n\t\t}\n\n\t\treturn problemsText.join(' ');\n\t}\n\n\tprivate packNumber(n: number): string {\n\t\tconst manyProblems = localize('manyProblems', \"10K+\");\n\t\treturn n > 9999 ? manyProblems : n > 999 ? n.toString().charAt(0) + 'K' : n.toString();\n\t}\n}\n\nworkbenchRegistry.registerWorkbenchContribution(MarkersStatusBarContributions, LifecyclePhase.Restored);\n\nclass ActivityUpdater extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly activity = this._register(new MutableDisposable<IDisposable>());\n\n\tconstructor(\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IMarkerService private readonly markerService: IMarkerService\n\t) {\n\t\tsuper();\n\t\tthis._register(this.markerService.onMarkerChanged(() => this.updateBadge()));\n\t\tthis.updateBadge();\n\t}\n\n\tprivate updateBadge(): void {\n\t\tconst { errors, warnings, infos } = this.markerService.getStatistics();\n\t\tconst total = errors + warnings + infos;\n\t\tif (total > 0) {\n\t\t\tconst message = localize('totalProblems', 'Total {0} Problems', total);\n\t\t\tthis.activity.value = this.activityService.showViewActivity(Markers.MARKERS_VIEW_ID, { badge: new NumberBadge(total, () => message) });\n\t\t} else {\n\t\t\tthis.activity.value = undefined;\n\t\t}\n\t}\n}\n\nworkbenchRegistry.registerWorkbenchContribution(ActivityUpdater, LifecyclePhase.Restored);\n"],
  "mappings": "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",
  "names": []
}
