{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/markers/browser/markersFilterOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFilter, matchesFuzzy, matchesFuzzy2 } from '../../../../base/common/filters.js';\nimport { IExpression, splitGlobAware, getEmptyExpression, ParsedExpression, parse } from '../../../../base/common/glob.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { TernarySearchTree } from '../../../../base/common/ternarySearchTree.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<URI, { root: URI; expression: ParsedExpression }>;\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI; expression: IExpression }[],\n\t\turiIdentityService: IUriIdentityService\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tthis.expressionsByRoot = TernarySearchTree.forUris<{ root: URI; expression: ParsedExpression }>(uri => uriIdentityService.extUri.ignorePathCasing(uri));\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport class FilterOptions {\n\n\tstatic readonly _filter: IFilter = matchesFuzzy2;\n\tstatic readonly _messageFilter: IFilter = matchesFuzzy;\n\n\treadonly showWarnings: boolean = false;\n\treadonly showErrors: boolean = false;\n\treadonly showInfos: boolean = false;\n\treadonly textFilter: { readonly text: string; readonly negate: boolean };\n\treadonly excludesMatcher: ResourceGlobMatcher;\n\treadonly includesMatcher: ResourceGlobMatcher;\n\n\tstatic EMPTY(uriIdentityService: IUriIdentityService) { return new FilterOptions('', [], false, false, false, uriIdentityService); }\n\n\tconstructor(\n\t\treadonly filter: string,\n\t\tfilesExclude: { root: URI; expression: IExpression }[] | IExpression,\n\t\tshowWarnings: boolean,\n\t\tshowErrors: boolean,\n\t\tshowInfos: boolean,\n\t\turiIdentityService: IUriIdentityService\n\t) {\n\t\tfilter = filter.trim();\n\t\tthis.showWarnings = showWarnings;\n\t\tthis.showErrors = showErrors;\n\t\tthis.showInfos = showInfos;\n\n\t\tconst filesExcludeByRoot = Array.isArray(filesExclude) ? filesExclude : [];\n\t\tconst excludesExpression: IExpression = Array.isArray(filesExclude) ? getEmptyExpression() : filesExclude;\n\n\t\tfor (const { expression } of filesExcludeByRoot) {\n\t\t\tfor (const pattern of Object.keys(expression)) {\n\t\t\t\tif (!pattern.endsWith('/**')) {\n\t\t\t\t\t// Append `/**` to pattern to match a parent folder #103631\n\t\t\t\t\texpression[`${strings.rtrim(pattern, '/')}/**`] = expression[pattern];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst negate = filter.startsWith('!');\n\t\tthis.textFilter = { text: (negate ? strings.ltrim(filter, '!') : filter).trim(), negate };\n\t\tconst includeExpression: IExpression = getEmptyExpression();\n\n\t\tif (filter) {\n\t\t\tconst filters = splitGlobAware(filter, ',').map(s => s.trim()).filter(s => !!s.length);\n\t\t\tfor (const f of filters) {\n\t\t\t\tif (f.startsWith('!')) {\n\t\t\t\t\tconst filterText = strings.ltrim(f, '!');\n\t\t\t\t\tif (filterText) {\n\t\t\t\t\t\tthis.setPattern(excludesExpression, filterText);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.setPattern(includeExpression, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.excludesMatcher = new ResourceGlobMatcher(excludesExpression, filesExcludeByRoot, uriIdentityService);\n\t\tthis.includesMatcher = new ResourceGlobMatcher(includeExpression, [], uriIdentityService);\n\t}\n\n\tprivate setPattern(expression: IExpression, pattern: string) {\n\t\tif (pattern[0] === '.') {\n\t\t\tpattern = '*' + pattern; // convert \".js\" to \"*.js\"\n\t\t}\n\t\texpression[`**/${pattern}/**`] = true;\n\t\texpression[`**/${pattern}`] = true;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
