{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/markers/browser/markersFilterOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype IFilter,\n\tmatchesFuzzy,\n\tmatchesFuzzy2,\n} from \"../../../../base/common/filters.js\";\nimport {\n\ttype IExpression,\n\ttype ParsedExpression,\n\tgetEmptyExpression,\n\tparse,\n\tsplitGlobAware,\n} from \"../../../../base/common/glob.js\";\nimport { relativePath } from \"../../../../base/common/resources.js\";\nimport * as strings from \"../../../../base/common/strings.js\";\nimport { TernarySearchTree } from \"../../../../base/common/ternarySearchTree.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\n\nexport class ResourceGlobMatcher {\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<\n\t\tURI,\n\t\t{ root: URI; expression: ParsedExpression }\n\t>;\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI; expression: IExpression }[],\n\t\turiIdentityService: IUriIdentityService,\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tthis.expressionsByRoot = TernarySearchTree.forUris<{\n\t\t\troot: URI;\n\t\t\texpression: ParsedExpression;\n\t\t}>((uri) => uriIdentityService.extUri.ignorePathCasing(uri));\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, {\n\t\t\t\troot: expression.root,\n\t\t\t\texpression: parse(expression.expression),\n\t\t\t});\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport class FilterOptions {\n\tstatic readonly _filter: IFilter = matchesFuzzy2;\n\tstatic readonly _messageFilter: IFilter = matchesFuzzy;\n\n\treadonly showWarnings: boolean = false;\n\treadonly showErrors: boolean = false;\n\treadonly showInfos: boolean = false;\n\treadonly textFilter: { readonly text: string; readonly negate: boolean };\n\treadonly excludesMatcher: ResourceGlobMatcher;\n\treadonly includesMatcher: ResourceGlobMatcher;\n\n\tstatic EMPTY(uriIdentityService: IUriIdentityService) {\n\t\treturn new FilterOptions(\n\t\t\t\"\",\n\t\t\t[],\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tconstructor(\n\t\treadonly filter: string,\n\t\tfilesExclude: { root: URI; expression: IExpression }[] | IExpression,\n\t\tshowWarnings: boolean,\n\t\tshowErrors: boolean,\n\t\tshowInfos: boolean,\n\t\turiIdentityService: IUriIdentityService,\n\t) {\n\t\tfilter = filter.trim();\n\t\tthis.showWarnings = showWarnings;\n\t\tthis.showErrors = showErrors;\n\t\tthis.showInfos = showInfos;\n\n\t\tconst filesExcludeByRoot = Array.isArray(filesExclude)\n\t\t\t? filesExclude\n\t\t\t: [];\n\t\tconst excludesExpression: IExpression = Array.isArray(filesExclude)\n\t\t\t? getEmptyExpression()\n\t\t\t: filesExclude;\n\n\t\tfor (const { expression } of filesExcludeByRoot) {\n\t\t\tfor (const pattern of Object.keys(expression)) {\n\t\t\t\tif (!pattern.endsWith(\"/**\")) {\n\t\t\t\t\t// Append `/**` to pattern to match a parent folder #103631\n\t\t\t\t\texpression[`${strings.rtrim(pattern, \"/\")}/**`] =\n\t\t\t\t\t\texpression[pattern];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst negate = filter.startsWith(\"!\");\n\t\tthis.textFilter = {\n\t\t\ttext: (negate ? strings.ltrim(filter, \"!\") : filter).trim(),\n\t\t\tnegate,\n\t\t};\n\t\tconst includeExpression: IExpression = getEmptyExpression();\n\n\t\tif (filter) {\n\t\t\tconst filters = splitGlobAware(filter, \",\")\n\t\t\t\t.map((s) => s.trim())\n\t\t\t\t.filter((s) => !!s.length);\n\t\t\tfor (const f of filters) {\n\t\t\t\tif (f.startsWith(\"!\")) {\n\t\t\t\t\tconst filterText = strings.ltrim(f, \"!\");\n\t\t\t\t\tif (filterText) {\n\t\t\t\t\t\tthis.setPattern(excludesExpression, filterText);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.setPattern(includeExpression, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.excludesMatcher = new ResourceGlobMatcher(\n\t\t\texcludesExpression,\n\t\t\tfilesExcludeByRoot,\n\t\t\turiIdentityService,\n\t\t);\n\t\tthis.includesMatcher = new ResourceGlobMatcher(\n\t\t\tincludeExpression,\n\t\t\t[],\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tprivate setPattern(expression: IExpression, pattern: string) {\n\t\tif (pattern[0] === \".\") {\n\t\t\tpattern = \"*\" + pattern; // convert \".js\" to \"*.js\"\n\t\t}\n\t\texpression[`**/${pattern}/**`] = true;\n\t\texpression[`**/${pattern}`] = true;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
