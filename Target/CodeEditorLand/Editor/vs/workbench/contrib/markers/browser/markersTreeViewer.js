var z=Object.defineProperty;var J=Object.getOwnPropertyDescriptor;var p=(c,r,e,t)=>{for(var i=t>1?void 0:t?J(r,e):r,s=c.length-1,a;s>=0;s--)(a=c[s])&&(i=(t?a(r,e,i):a(i))||i);return t&&i&&z(r,e,i),i},d=(c,r)=>(e,t)=>r(e,t,c);import*as o from"../../../../base/browser/dom.js";import*as y from"../../../../base/common/path.js";import{CountBadge as X}from"../../../../base/browser/ui/countBadge/countBadge.js";import{HighlightedLabel as h}from"../../../../base/browser/ui/highlightedlabel/highlightedLabel.js";import{MarkerSeverity as f}from"../../../../platform/markers/common/markers.js";import{ResourceMarkers as F,Marker as w,RelatedInformation as Y,MarkerTableItem as Z}from"./markersModel.js";import g from"./messages.js";import{IInstantiationService as E}from"../../../../platform/instantiation/common/instantiation.js";import{ThemeIcon as L}from"../../../../base/common/themables.js";import{dispose as V,Disposable as D,toDisposable as P,DisposableStore as N}from"../../../../base/common/lifecycle.js";import{ActionBar as H}from"../../../../base/browser/ui/actionbar/actionbar.js";import{QuickFixAction as $,QuickFixActionViewItem as ee}from"./markersViewActions.js";import{ILabelService as K}from"../../../../platform/label/common/label.js";import{basename as C,isEqual as te}from"../../../../base/common/resources.js";import{TreeVisibility as k}from"../../../../base/browser/ui/tree/tree.js";import{FilterOptions as M}from"./markersFilterOptions.js";import{Emitter as _}from"../../../../base/common/event.js";import{isUndefinedOrNull as re}from"../../../../base/common/types.js";import{Action as O}from"../../../../base/common/actions.js";import{localize as I}from"../../../../nls.js";import{createCancelablePromise as B,Delayer as ie}from"../../../../base/common/async.js";import{IModelService as se}from"../../../../editor/common/services/model.js";import{Range as oe}from"../../../../editor/common/core/range.js";import{applyCodeAction as ae,ApplyCodeActionReason as ne,getCodeActions as le}from"../../../../editor/contrib/codeAction/browser/codeAction.js";import{CodeActionKind as ce,CodeActionTriggerSource as de}from"../../../../editor/contrib/codeAction/common/types.js";import{IEditorService as ue,ACTIVE_GROUP as me}from"../../../services/editor/common/editorService.js";import{SeverityIcon as pe}from"../../../../platform/severityIcon/browser/severityIcon.js";import{CodeActionTriggerType as he}from"../../../../editor/common/languages.js";import{IOpenerService as Me}from"../../../../platform/opener/common/opener.js";import{Progress as ve}from"../../../../platform/progress/common/progress.js";import{ActionViewItem as fe}from"../../../../base/browser/ui/actionbar/actionViewItems.js";import{Codicon as U}from"../../../../base/common/codicons.js";import{registerIcon as q}from"../../../../platform/theme/common/iconRegistry.js";import{Link as ge}from"../../../../platform/opener/browser/link.js";import{ILanguageFeaturesService as ke}from"../../../../editor/common/services/languageFeatures.js";import{IContextKeyService as Ie}from"../../../../platform/contextkey/common/contextkey.js";import{MarkersContextKeys as be,MarkersViewMode as Q}from"../common/markers.js";import{unsupportedSchemas as we}from"../../../../platform/markers/common/markerService.js";import{defaultCountBadgeStyles as Re}from"../../../../platform/theme/browser/defaultStyles.js";import xe from"../../../../base/common/severity.js";import{getDefaultHoverDelegate as Ae}from"../../../../base/browser/ui/hover/hoverDelegateFactory.js";import{IHoverService as Se}from"../../../../platform/hover/browser/hover.js";let R=class{constructor(r){this.labelService=r}getWidgetAriaLabel(){return I("problemsView","Problems View")}getAriaLabel(r){if(r instanceof F){const e=this.labelService.getUriLabel(r.resource,{relative:!0})||r.resource.fsPath;return g.MARKERS_TREE_ARIA_LABEL_RESOURCE(r.markers.length,r.name,y.dirname(e))}return r instanceof w||r instanceof Z?g.MARKERS_TREE_ARIA_LABEL_MARKER(r):r instanceof Y?g.MARKERS_TREE_ARIA_LABEL_RELATED_INFORMATION(r.raw):null}};R=p([d(0,K)],R);var Te=(t=>(t.ResourceMarkers="rm",t.Marker="m",t.RelatedInformation="ri",t))(Te||{});class T{constructor(r){this.markersViewState=r}static LINE_HEIGHT=22;getHeight(r){if(r instanceof w){const e=this.markersViewState.getViewModel(r);return(!e||e.multiline?r.lines.length:1)*T.LINE_HEIGHT}return T.LINE_HEIGHT}getTemplateId(r){return r instanceof F?"rm":r instanceof w?"m":"ri"}}var Fe=(t=>(t[t.ResourceMarkers=0]="ResourceMarkers",t[t.Marker=1]="Marker",t[t.RelatedInformation=2]="RelatedInformation",t))(Fe||{});class Ee{constructor(r,e){this.labels=r;e(this.onDidChangeRenderNodeCount,this,this.disposables)}renderedNodes=new Map;disposables=new N;templateId="rm";renderTemplate(r){const e=o.append(r,o.$(".resource-label-container")),t=this.labels.create(e,{supportHighlights:!0}),i=o.append(r,o.$(".count-badge-wrapper"));return{count:new X(i,{},Re),resourceLabel:t}}renderElement(r,e,t){const i=r.element,s=r.filterData&&r.filterData.uriMatches||[];t.resourceLabel.setFile(i.resource,{matches:s}),this.updateCount(r,t);const a=this.renderedNodes.get(i)??[];this.renderedNodes.set(i,[...a,t])}disposeElement(r,e,t){const i=this.renderedNodes.get(r.element)??[],s=i.findIndex(a=>t===a);if(s<0)throw new Error("Disposing unknown resource marker");i.length===1?this.renderedNodes.delete(r.element):i.splice(s,1)}disposeTemplate(r){r.resourceLabel.dispose()}onDidChangeRenderNodeCount(r){const e=this.renderedNodes.get(r.element);e&&e.forEach(t=>this.updateCount(r,t))}updateCount(r,e){e.count.setCount(r.children.reduce((t,i)=>t+(i.visible?1:0),0))}dispose(){this.disposables.dispose()}}class Wt extends Ee{}let x=class{constructor(r,e,t,i){this.markersViewState=r;this.hoverService=e;this.instantiationService=t;this.openerService=i}templateId="m";renderTemplate(r){const e=Object.create(null);return e.markerWidget=new _e(r,this.markersViewState,this.hoverService,this.openerService,this.instantiationService),e}renderElement(r,e,t){t.markerWidget.render(r.element,r.filterData)}disposeTemplate(r){r.markerWidget.dispose()}};x=p([d(1,Se),d(2,E),d(3,Me)],x);const W=q("markers-view-multi-line-expanded",U.chevronUp,I("expandedIcon","Icon indicating that multiple lines are shown in the markers view.")),De=q("markers-view-multi-line-collapsed",U.chevronDown,I("collapsedIcon","Icon indicating that multiple lines are collapsed in the markers view.")),G="problems.action.toggleMultiline";class Ce extends fe{render(r){super.render(r),this.updateExpandedAttribute()}updateClass(){super.updateClass(),this.updateExpandedAttribute()}updateExpandedAttribute(){this.element?.setAttribute("aria-expanded",`${this._action.class===L.asClassName(W)}`)}}class _e extends D{constructor(e,t,i,s,a){super();this.parent=e;this.markersViewModel=t;this._hoverService=i;this._openerService=s;this.actionBar=this._register(new H(o.append(e,o.$(".actions")),{actionViewItemProvider:(n,l)=>n.id===$.ID?a.createInstance(ee,n,l):void 0})),this.iconContainer=o.append(e,o.$("")),this.icon=o.append(this.iconContainer,o.$("")),this.messageAndDetailsContainer=o.append(e,o.$(".marker-message-details-container")),this.messageAndDetailsContainerHover=this._register(this._hoverService.setupManagedHover(Ae("mouse"),this.messageAndDetailsContainer,""))}actionBar;icon;iconContainer;messageAndDetailsContainer;messageAndDetailsContainerHover;disposables=this._register(new N);render(e,t){this.actionBar.clear(),this.disposables.clear(),o.clearNode(this.messageAndDetailsContainer),this.iconContainer.className=`marker-icon ${xe.toString(f.toSeverity(e.marker.severity))}`,this.icon.className=`codicon ${pe.className(f.toSeverity(e.marker.severity))}`,this.renderQuickfixActionbar(e),this.renderMessageAndDetails(e,t),this.disposables.add(o.addDisposableListener(this.parent,o.EventType.MOUSE_OVER,()=>this.markersViewModel.onMarkerMouseHover(e))),this.disposables.add(o.addDisposableListener(this.parent,o.EventType.MOUSE_LEAVE,()=>this.markersViewModel.onMarkerMouseLeave(e)))}renderQuickfixActionbar(e){const t=this.markersViewModel.getViewModel(e);if(t){const i=t.quickFixAction;this.actionBar.push([i],{icon:!0,label:!1}),this.iconContainer.classList.toggle("quickFix",i.enabled),i.onDidChange(({enabled:s})=>{re(s)||this.iconContainer.classList.toggle("quickFix",s)},this,this.disposables),i.onShowQuickFixes(()=>{const s=this.actionBar.viewItems[0];s&&s.showQuickFixes()},this,this.disposables)}}renderMultilineActionbar(e,t){const i=this.disposables.add(new H(o.append(t,o.$(".multiline-actions")),{actionViewItemProvider:(l,u)=>{if(l.id===G)return new Ce(void 0,l,{...u,icon:!0})}}));this.disposables.add(P(()=>i.dispose()));const s=this.markersViewModel.getViewModel(e),a=s&&s.multiline,n=new O(G);n.enabled=!!s&&e.lines.length>1,n.tooltip=a?I("single line","Show message in single line"):I("multi line","Show message in multiple lines"),n.class=L.asClassName(a?W:De),n.run=()=>(s&&(s.multiline=!s.multiline),Promise.resolve()),i.push([n],{icon:!0,label:!1})}renderMessageAndDetails(e,t){const{marker:i,lines:s}=e,a=this.markersViewModel.getViewModel(e),n=!a||a.multiline,l=t&&t.lineMatches||[];this.messageAndDetailsContainerHover.update(e.marker.message);const u=[];for(let m=0;m<(n?s.length:1);m++){const v=o.append(this.messageAndDetailsContainer,o.$(".marker-message-line")),j=o.append(v,o.$(".marker-message"));this.disposables.add(new h(j)).set(s[m].length>1e3?`${s[m].substring(0,1e3)}...`:s[m],l[m]),s[m]===""&&(v.style.height=`${T.LINE_HEIGHT}px`),u.push(v)}this.renderDetails(i,t,u[0]),this.renderMultilineActionbar(e,u[0])}renderDetails(e,t,i){if(i.classList.add("details-container"),e.source||e.code){const a=this.disposables.add(new h(o.append(i,o.$(".marker-source")))),n=t&&t.sourceMatches||[];if(a.set(e.source,n),e.code)if(typeof e.code=="string"){const l=this.disposables.add(new h(o.append(i,o.$(".marker-code")))),u=t&&t.codeMatches||[];l.set(e.code,u)}else{const l=o.$(".marker-code"),u=this.disposables.add(new h(l)),m=e.code.target.toString(!0);this.disposables.add(new ge(i,{href:m,label:l,title:m},void 0,this._hoverService,this._openerService));const v=t&&t.codeMatches||[];u.set(e.code.value,v)}}const s=o.append(i,o.$("span.marker-line"));s.textContent=g.MARKERS_PANEL_AT_LINE_COL_NUMBER(e.startLineNumber,e.startColumn)}}let A=class{constructor(r){this.labelService=r}templateId="ri";renderTemplate(r){const e=Object.create(null);o.append(r,o.$(".actions")),o.append(r,o.$(".icon")),e.resourceLabel=new h(o.append(r,o.$(".related-info-resource"))),e.lnCol=o.append(r,o.$("span.marker-line"));const t=o.append(r,o.$("span.related-info-resource-separator"));return t.textContent=":",t.style.paddingRight="4px",e.description=new h(o.append(r,o.$(".marker-description"))),e}renderElement(r,e,t){const i=r.element.raw,s=r.filterData&&r.filterData.uriMatches||[],a=r.filterData&&r.filterData.messageMatches||[],n=this.labelService.getUriLabel(i.resource,{relative:!0});t.resourceLabel.set(C(i.resource),s,n),t.lnCol.textContent=g.MARKERS_PANEL_AT_LINE_COL_NUMBER(i.startLineNumber,i.startColumn),t.description.set(i.message,a,i.message)}disposeTemplate(r){r.resourceLabel.dispose(),r.description.dispose()}};A=p([d(0,K)],A);class Gt{constructor(r){this.options=r}filter(r,e){return r instanceof F?this.filterResourceMarkers(r):r instanceof w?this.filterMarker(r,e):this.filterRelatedInformation(r,e)}filterResourceMarkers(r){if(we.has(r.resource.scheme)||this.options.excludesMatcher.matches(r.resource))return!1;if(this.options.includesMatcher.matches(r.resource))return!0;if(this.options.textFilter.text&&!this.options.textFilter.negate){const e=M._filter(this.options.textFilter.text,C(r.resource));if(e)return{visibility:!0,data:{type:0,uriMatches:e||[]}}}return k.Recurse}filterMarker(r,e){if(!(this.options.showErrors&&f.Error===r.marker.severity||this.options.showWarnings&&f.Warning===r.marker.severity||this.options.showInfos&&f.Info===r.marker.severity))return!1;if(!this.options.textFilter.text)return!0;const i=[];for(const l of r.lines){const u=M._messageFilter(this.options.textFilter.text,l);i.push(u||[])}const s=r.marker.source?M._filter(this.options.textFilter.text,r.marker.source):void 0,a=r.marker.code?M._filter(this.options.textFilter.text,typeof r.marker.code=="string"?r.marker.code:r.marker.code.value):void 0,n=s||a||i.some(l=>l.length>0);return n&&!this.options.textFilter.negate?{visibility:!0,data:{type:1,lineMatches:i,sourceMatches:s||[],codeMatches:a||[]}}:n&&this.options.textFilter.negate&&e===k.Recurse?!1:!n&&this.options.textFilter.negate&&e===k.Recurse?!0:e}filterRelatedInformation(r,e){if(!this.options.textFilter.text)return!0;const t=M._filter(this.options.textFilter.text,C(r.raw.resource)),i=M._messageFilter(this.options.textFilter.text,y.basename(r.raw.message)),s=t||i;return s&&!this.options.textFilter.negate?{visibility:!0,data:{type:2,uriMatches:t||[],messageMatches:i||[]}}:s&&this.options.textFilter.negate&&e===k.Recurse?!1:!s&&this.options.textFilter.negate&&e===k.Recurse?!0:e}}let b=class extends D{constructor(e,t,i,s,a){super();this.marker=e;this.modelService=t;this.instantiationService=i;this.editorService=s;this.languageFeaturesService=a;this._register(P(()=>{this.modelPromise&&this.modelPromise.cancel(),this.codeActionsPromise&&this.codeActionsPromise.cancel()}))}_onDidChange=this._register(new _);onDidChange=this._onDidChange.event;modelPromise=null;codeActionsPromise=null;_multiline=!0;get multiline(){return this._multiline}set multiline(e){this._multiline!==e&&(this._multiline=e,this._onDidChange.fire())}_quickFixAction=null;get quickFixAction(){return this._quickFixAction||(this._quickFixAction=this._register(this.instantiationService.createInstance($,this.marker))),this._quickFixAction}showLightBulb(){this.setQuickFixes(!0)}async setQuickFixes(e){const t=await this.getCodeActions(e);this.quickFixAction.quickFixes=t?this.toActions(t):[],this.quickFixAction.autoFixable(!!t&&t.hasAutoFix)}getCodeActions(e){return this.codeActionsPromise!==null?this.codeActionsPromise:this.getModel(e).then(t=>t?(this.codeActionsPromise||(this.codeActionsPromise=B(i=>le(this.languageFeaturesService.codeActionProvider,t,new oe(this.marker.range.startLineNumber,this.marker.range.startColumn,this.marker.range.endLineNumber,this.marker.range.endColumn),{type:he.Invoke,triggerAction:de.ProblemsView,filter:{include:ce.QuickFix}},ve.None,i).then(s=>this._register(s)))),this.codeActionsPromise):null)}toActions(e){return e.validActions.map(t=>new O(t.action.command?t.action.command.id:t.action.title,t.action.title,void 0,!0,()=>this.openFileAtMarker(this.marker).then(()=>this.instantiationService.invokeFunction(ae,t,ne.FromProblemsView))))}openFileAtMarker(e){const{resource:t,selection:i}={resource:e.resource,selection:e.range};return this.editorService.openEditor({resource:t,options:{selection:i,preserveFocus:!0,pinned:!1,revealIfVisible:!0}},me).then(()=>{})}getModel(e){const t=this.modelService.getModel(this.marker.resource);return t?Promise.resolve(t):e?(this.modelPromise||(this.modelPromise=B(i=>new Promise(s=>{this._register(this.modelService.onModelAdded(a=>{te(a.uri,this.marker.resource)&&s(a)}))}))),this.modelPromise):Promise.resolve(null)}};b=p([d(1,se),d(2,E),d(3,ue),d(4,ke)],b);let S=class extends D{constructor(e=!0,t=Q.Tree,i,s){super();this.contextKeyService=i;this.instantiationService=s;this._multiline=e,this._viewMode=t,this.viewModeContextKey=be.MarkersViewModeContextKey.bindTo(this.contextKeyService),this.viewModeContextKey.set(t)}_onDidChange=this._register(new _);onDidChange=this._onDidChange.event;_onDidChangeViewMode=this._register(new _);onDidChangeViewMode=this._onDidChangeViewMode.event;markersViewStates=new Map;markersPerResource=new Map;bulkUpdate=!1;hoveredMarker=null;hoverDelayer=new ie(300);viewModeContextKey;add(e){if(!this.markersViewStates.has(e.id)){const t=this.instantiationService.createInstance(b,e),i=[t];t.multiline=this.multiline,t.onDidChange(()=>{this.bulkUpdate||this._onDidChange.fire(e)},this,i),this.markersViewStates.set(e.id,{viewModel:t,disposables:i});const s=this.markersPerResource.get(e.resource.toString())||[];s.push(e),this.markersPerResource.set(e.resource.toString(),s)}}remove(e){const t=this.markersPerResource.get(e.toString())||[];for(const i of t){const s=this.markersViewStates.get(i.id);s&&V(s.disposables),this.markersViewStates.delete(i.id),this.hoveredMarker===i&&(this.hoveredMarker=null)}this.markersPerResource.delete(e.toString())}getViewModel(e){const t=this.markersViewStates.get(e.id);return t?t.viewModel:null}onMarkerMouseHover(e){this.hoveredMarker=e,this.hoverDelayer.trigger(()=>{if(this.hoveredMarker){const t=this.getViewModel(this.hoveredMarker);t&&t.showLightBulb()}})}onMarkerMouseLeave(e){this.hoveredMarker===e&&(this.hoveredMarker=null)}_multiline=!0;get multiline(){return this._multiline}set multiline(e){let t=!1;this._multiline!==e&&(this._multiline=e,t=!0),this.bulkUpdate=!0,this.markersViewStates.forEach(({viewModel:i})=>{i.multiline!==e&&(i.multiline=e,t=!0)}),this.bulkUpdate=!1,t&&this._onDidChange.fire(void 0)}_viewMode=Q.Tree;get viewMode(){return this._viewMode}set viewMode(e){this._viewMode!==e&&(this._viewMode=e,this._onDidChangeViewMode.fire(e),this.viewModeContextKey.set(e))}dispose(){this.markersViewStates.forEach(({disposables:e})=>V(e)),this.markersViewStates.clear(),this.markersPerResource.clear(),super.dispose()}};S=p([d(2,Ie),d(3,E)],S);export{Wt as FileResourceMarkersRenderer,Gt as Filter,x as MarkerRenderer,b as MarkerViewModel,S as MarkersViewModel,R as MarkersWidgetAccessibilityProvider,A as RelatedInformationRenderer,Ee as ResourceMarkersRenderer,T as VirtualDelegate};
