var n=self,N=4,$=`vscode-resource-cache-${N}`,R=n.location.pathname.replace(/\/service-worker.js$/,""),U=new URL(location.toString()).searchParams,M=U.get("remoteAuthority"),E=U.get("vscode-resource-base-authority"),x=3e4,w=class{constructor(){this.map=new Map,this.requestPool=0}create(){let e=++this.requestPool,o,s=new Promise(i=>o=i),a={resolve:o,promise:s};this.map.set(e,a);let u=setTimeout(()=>{clearTimeout(u);let i=this.map.get(e);if(i===a){i.resolve({status:"timeout"}),this.map.delete(e);return}},x);return{requestId:e,promise:s}}resolve(e,o){let s=this.map.get(e);return s?(s.resolve({status:"ok",value:o}),this.map.delete(e),!0):!1}},A=new w,O=new w,S=()=>new Response("Unauthorized",{status:401}),g=()=>new Response("Not Found",{status:404}),v=()=>new Response("Method Not Allowed",{status:405}),H=()=>new Response("Request Timeout",{status:408});n.addEventListener("message",async t=>{switch(t.data.channel){case"version":{let e=t.source;n.clients.get(e.id).then(o=>{o&&o.postMessage({channel:"version",version:N})});return}case"did-load-resource":{let e=t.data.data;A.resolve(e.id,e)||console.log("Could not resolve unknown resource",e.path);return}case"did-load-localhost":{let e=t.data.data;O.resolve(e.id,e.location)||console.log("Could not resolve unknown localhost",e.origin);return}default:{console.log("Unknown message");return}}});n.addEventListener("fetch",t=>{let e=new URL(t.request.url);if(typeof E=="string"&&e.protocol==="https:"&&e.hostname.endsWith("."+E))switch(t.request.method){case"GET":case"HEAD":{let o=e.hostname.slice(0,e.hostname.length-(E.length+1)),s=o.split("+",1)[0],a=o.slice(s.length+1);return t.respondWith(T(t,{scheme:s,authority:a,path:e.pathname,query:e.search.replace(/^\?/,"")}))}default:return t.respondWith(v())}if(e.origin!==n.origin&&e.host===M)switch(t.request.method){case"GET":case"HEAD":return t.respondWith(T(t,{path:e.pathname,scheme:e.protocol.slice(0,e.protocol.length-1),authority:e.host,query:e.search.replace(/^\?/,"")}));default:return t.respondWith(v())}if(e.origin!==n.origin&&e.host.match(/^(localhost|127.0.0.1|0.0.0.0):(\d+)$/))return t.respondWith(D(t,e))});n.addEventListener("install",t=>{t.waitUntil(n.skipWaiting())});n.addEventListener("activate",t=>{t.waitUntil(n.clients.claim())});async function T(t,e){let o=await n.clients.get(t.clientId);if(!o)return console.error("Could not find inner client for request"),g();let s=I(o);if(!s)return console.error("Could not resolve webview id"),g();let a=t.request.method==="GET",p=(c,m)=>{if(c.status==="timeout")return H();let r=c.value;if(r.status===304){if(m)return m.clone();throw new Error("No cache found")}if(r.status===401)return S();if(r.status!==200)return g();let q={"Access-Control-Allow-Origin":"*"},f=r.data.byteLength,b=t.request.headers.get("range");if(b){let d=b.match(/^bytes\=(\d+)\-(\d+)?$/g);if(d){let k=Number(d[1]),P=Number(d[2])||f-1;return new Response(r.data.slice(k,P+1),{status:206,headers:{...q,"Content-range":`bytes 0-${P}/${f}`}})}else return new Response(null,{status:416,headers:{...q,"Content-range":`*/${f}`}})}let l={...q,"Content-Type":r.mime,"Content-Length":f.toString()};r.etag&&(l.ETag=r.etag,l["Cache-Control"]="no-cache"),r.mtime&&(l["Last-Modified"]=new Date(r.mtime).toUTCString());let C=new URL(t.request.url).searchParams.get("vscode-coi");C==="3"?(l["Cross-Origin-Opener-Policy"]="same-origin",l["Cross-Origin-Embedder-Policy"]="require-corp"):C==="2"?l["Cross-Origin-Embedder-Policy"]="require-corp":C==="1"&&(l["Cross-Origin-Opener-Policy"]="same-origin");let L=new Response(r.data,{status:200,headers:l});return a&&r.etag&&caches.open($).then(d=>d.put(t.request,L)),L.clone()},u=await W(s);if(!u.length)return console.log("Could not find parent client for request"),g();let i;a&&(i=await(await caches.open($)).match(t.request));let{requestId:y,promise:h}=A.create();for(let c of u)c.postMessage({channel:"load-resource",id:y,scheme:e.scheme,authority:e.authority,path:e.path,query:e.query,ifNoneMatch:i?.headers.get("ETag")});return h.then(c=>p(c,i))}async function D(t,e){let o=await n.clients.get(t.clientId);if(!o)return fetch(t.request);let s=I(o);if(!s)return console.error("Could not resolve webview id"),fetch(t.request);let a=e.origin,p=async h=>{if(h.status!=="ok"||!h.value)return fetch(t.request);let c=h.value,m=t.request.url.replace(new RegExp(`^${e.origin}(/|$)`),`${c}$1`);return new Response(null,{status:302,headers:{Location:m}})},u=await W(s);if(!u.length)return console.log("Could not find parent client for request"),g();let{requestId:i,promise:y}=O.create();for(let h of u)h.postMessage({channel:"load-localhost",origin:a,id:i});return y.then(p)}function I(t){return new URL(t.url).searchParams.get("id")}async function W(t){return(await n.clients.matchAll({includeUncontrolled:!0})).filter(o=>{let s=new URL(o.url);return(s.pathname===`${R}/`||s.pathname===`${R}/index.html`||s.pathname===`${R}/index-no-csp.html`)&&s.searchParams.get("id")===t})}
