{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webview/browser/pre/service-worker.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// @ts-check\n\n/// <reference lib=\"webworker\" />\n\nconst sw = /** @type {ServiceWorkerGlobalScope} */ (/** @type {any} */ (self));\n\nconst VERSION = 4;\n\nconst resourceCacheName = `vscode-resource-cache-${VERSION}`;\n\nconst rootPath = sw.location.pathname.replace(/\\/service-worker.js$/, '');\n\nconst searchParams = new URL(location.toString()).searchParams;\n\nconst remoteAuthority = searchParams.get('remoteAuthority');\n\n/**\n * Origin used for resources\n */\nconst resourceBaseAuthority = searchParams.get('vscode-resource-base-authority');\n\nconst resolveTimeout = 30_000;\n\n/**\n * @template T\n * @typedef {{ status: 'ok'; value: T } | { status: 'timeout' }} RequestStoreResult\n */\n\n/**\n * @template T\n * @typedef {{\n *     resolve: (x: RequestStoreResult<T>) => void,\n *     promise: Promise<RequestStoreResult<T>>\n * }} RequestStoreEntry\n */\n\n/**\n * Caches\n * @template T\n */\nclass RequestStore {\n\tconstructor() {\n\t\t/** @type {Map<number, RequestStoreEntry<T>>} */\n\t\tthis.map = new Map();\n\n\t\tthis.requestPool = 0;\n\t}\n\n\t/**\n\t * @returns {{ requestId: number, promise: Promise<RequestStoreResult<T>> }}\n\t */\n\tcreate() {\n\t\tconst requestId = ++this.requestPool;\n\n\t\t/** @type {undefined | ((x: RequestStoreResult<T>) => void)} */\n\t\tlet resolve;\n\n\t\t/** @type {Promise<RequestStoreResult<T>>} */\n\t\tconst promise = new Promise(r => resolve = r);\n\n\t\t/** @type {RequestStoreEntry<T>} */\n\t\tconst entry = { resolve: /** @type {(x: RequestStoreResult<T>) => void} */ (resolve), promise };\n\n\t\tthis.map.set(requestId, entry);\n\n\t\tconst dispose = () => {\n\t\t\tclearTimeout(timeout);\n\t\t\tconst existingEntry = this.map.get(requestId);\n\t\t\tif (existingEntry === entry) {\n\t\t\t\texistingEntry.resolve({ status: 'timeout' });\n\t\t\t\tthis.map.delete(requestId);\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\t\tconst timeout = setTimeout(dispose, resolveTimeout);\n\t\treturn { requestId, promise };\n\t}\n\n\t/**\n\t * @param {number} requestId\n\t * @param {T} result\n\t * @return {boolean}\n\t */\n\tresolve(requestId, result) {\n\t\tconst entry = this.map.get(requestId);\n\t\tif (!entry) {\n\t\t\treturn false;\n\t\t}\n\t\tentry.resolve({ status: 'ok', value: result });\n\t\tthis.map.delete(requestId);\n\t\treturn true;\n\t}\n}\n\n/**\n * @typedef {{ readonly status: 200; id: number; path: string; mime: string; data: Uint8Array; etag: string | undefined; mtime: number | undefined; }\n * \t\t| { readonly status: 304; id: number; path: string; mime: string; mtime: number | undefined }\n *\t\t| { readonly status: 401; id: number; path: string }\n *\t\t| { readonly status: 404; id: number; path: string }} ResourceResponse\n */\n\n/**\n * Map of requested paths to responses.\n *\n * @type {RequestStore<ResourceResponse>}\n */\nconst resourceRequestStore = new RequestStore();\n\n/**\n * Map of requested localhost origins to optional redirects.\n *\n * @type {RequestStore<string | undefined>}\n */\nconst localhostRequestStore = new RequestStore();\n\nconst unauthorized = () =>\n\tnew Response('Unauthorized', { status: 401, });\n\nconst notFound = () =>\n\tnew Response('Not Found', { status: 404, });\n\nconst methodNotAllowed = () =>\n\tnew Response('Method Not Allowed', { status: 405, });\n\nconst requestTimeout = () =>\n\tnew Response('Request Timeout', { status: 408, });\n\nsw.addEventListener('message', async (event) => {\n\tswitch (event.data.channel) {\n\t\tcase 'version': {\n\t\t\tconst source = /** @type {Client} */ (event.source);\n\t\t\tsw.clients.get(source.id).then(client => {\n\t\t\t\tif (client) {\n\t\t\t\t\tclient.postMessage({\n\t\t\t\t\t\tchannel: 'version',\n\t\t\t\t\t\tversion: VERSION\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tcase 'did-load-resource': {\n\t\t\t/** @type {ResourceResponse} */\n\t\t\tconst response = event.data.data;\n\t\t\tif (!resourceRequestStore.resolve(response.id, response)) {\n\t\t\t\tconsole.log('Could not resolve unknown resource', response.path);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tcase 'did-load-localhost': {\n\t\t\tconst data = event.data.data;\n\t\t\tif (!localhostRequestStore.resolve(data.id, data.location)) {\n\t\t\t\tconsole.log('Could not resolve unknown localhost', data.origin);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tdefault: {\n\t\t\tconsole.log('Unknown message');\n\t\t\treturn;\n\t\t}\n\t}\n});\n\nsw.addEventListener('fetch', (event) => {\n\tconst requestUrl = new URL(event.request.url);\n\tif (typeof resourceBaseAuthority === 'string' && requestUrl.protocol === 'https:' && requestUrl.hostname.endsWith('.' + resourceBaseAuthority)) {\n\t\tswitch (event.request.method) {\n\t\t\tcase 'GET':\n\t\t\tcase 'HEAD': {\n\t\t\t\tconst firstHostSegment = requestUrl.hostname.slice(0, requestUrl.hostname.length - (resourceBaseAuthority.length + 1));\n\t\t\t\tconst scheme = firstHostSegment.split('+', 1)[0];\n\t\t\t\tconst authority = firstHostSegment.slice(scheme.length + 1); // may be empty\n\t\t\t\treturn event.respondWith(processResourceRequest(event, {\n\t\t\t\t\tscheme,\n\t\t\t\t\tauthority,\n\t\t\t\t\tpath: requestUrl.pathname,\n\t\t\t\t\tquery: requestUrl.search.replace(/^\\?/, ''),\n\t\t\t\t}));\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn event.respondWith(methodNotAllowed());\n\t\t\t}\n\t\t}\n\t}\n\n\t// If we're making a request against the remote authority, we want to go\n\t// through VS Code itself so that we are authenticated properly.  If the\n\t// service worker is hosted on the same origin we will have cookies and\n\t// authentication will not be an issue.\n\tif (requestUrl.origin !== sw.origin && requestUrl.host === remoteAuthority) {\n\t\tswitch (event.request.method) {\n\t\t\tcase 'GET':\n\t\t\tcase 'HEAD': {\n\t\t\t\treturn event.respondWith(processResourceRequest(event, {\n\t\t\t\t\tpath: requestUrl.pathname,\n\t\t\t\t\tscheme: requestUrl.protocol.slice(0, requestUrl.protocol.length - 1),\n\t\t\t\t\tauthority: requestUrl.host,\n\t\t\t\t\tquery: requestUrl.search.replace(/^\\?/, ''),\n\t\t\t\t}));\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn event.respondWith(methodNotAllowed());\n\t\t\t}\n\t\t}\n\t}\n\n\t// See if it's a localhost request\n\tif (requestUrl.origin !== sw.origin && requestUrl.host.match(/^(localhost|127.0.0.1|0.0.0.0):(\\d+)$/)) {\n\t\treturn event.respondWith(processLocalhostRequest(event, requestUrl));\n\t}\n});\n\nsw.addEventListener('install', (event) => {\n\tevent.waitUntil(sw.skipWaiting()); // Activate worker immediately\n});\n\nsw.addEventListener('activate', (event) => {\n\tevent.waitUntil(sw.clients.claim()); // Become available to all pages\n});\n\n/**\n * @param {FetchEvent} event\n * @param {{\n * \t\tscheme: string;\n * \t\tauthority: string;\n * \t\tpath: string;\n * \t\tquery: string;\n * }} requestUrlComponents\n */\nasync function processResourceRequest(event, requestUrlComponents) {\n\tconst client = await sw.clients.get(event.clientId);\n\tif (!client) {\n\t\tconsole.error('Could not find inner client for request');\n\t\treturn notFound();\n\t}\n\n\tconst webviewId = getWebviewIdForClient(client);\n\tif (!webviewId) {\n\t\tconsole.error('Could not resolve webview id');\n\t\treturn notFound();\n\t}\n\n\tconst shouldTryCaching = (event.request.method === 'GET');\n\n\t/**\n\t * @param {RequestStoreResult<ResourceResponse>} result\n\t * @param {Response | undefined} cachedResponse\n\t */\n\tconst resolveResourceEntry = (result, cachedResponse) => {\n\t\tif (result.status === 'timeout') {\n\t\t\treturn requestTimeout();\n\t\t}\n\n\t\tconst entry = result.value;\n\t\tif (entry.status === 304) { // Not modified\n\t\t\tif (cachedResponse) {\n\t\t\t\treturn cachedResponse.clone();\n\t\t\t} else {\n\t\t\t\tthrow new Error('No cache found');\n\t\t\t}\n\t\t}\n\n\t\tif (entry.status === 401) {\n\t\t\treturn unauthorized();\n\t\t}\n\n\t\tif (entry.status !== 200) {\n\t\t\treturn notFound();\n\t\t}\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst commonHeaders = {\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t};\n\n\t\tconst byteLength = entry.data.byteLength;\n\n\t\tconst range = event.request.headers.get('range');\n\t\tif (range) {\n\t\t\t// To support seeking for videos, we need to handle range requests\n\t\t\tconst bytes = range.match(/^bytes\\=(\\d+)\\-(\\d+)?$/g);\n\t\t\tif (bytes) {\n\t\t\t\t// TODO: Right now we are always reading the full file content. This is a bad idea\n\t\t\t\t// for large video files :)\n\n\t\t\t\tconst start = Number(bytes[1]);\n\t\t\t\tconst end = Number(bytes[2]) || byteLength - 1;\n\t\t\t\treturn new Response(entry.data.slice(start, end + 1), {\n\t\t\t\t\tstatus: 206,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t...commonHeaders,\n\t\t\t\t\t\t'Content-range': `bytes 0-${end}/${byteLength}`,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// We don't understand the requested bytes\n\t\t\t\treturn new Response(null, {\n\t\t\t\t\tstatus: 416,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t...commonHeaders,\n\t\t\t\t\t\t'Content-range': `*/${byteLength}`\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': entry.mime,\n\t\t\t'Content-Length': byteLength.toString(),\n\t\t};\n\n\t\tif (entry.etag) {\n\t\t\theaders['ETag'] = entry.etag;\n\t\t\theaders['Cache-Control'] = 'no-cache';\n\t\t}\n\t\tif (entry.mtime) {\n\t\t\theaders['Last-Modified'] = new Date(entry.mtime).toUTCString();\n\t\t}\n\n\t\t// support COI requests, see network.ts#COI.getHeadersFromQuery(...)\n\t\tconst coiRequest = new URL(event.request.url).searchParams.get('vscode-coi');\n\t\tif (coiRequest === '3') {\n\t\t\theaders['Cross-Origin-Opener-Policy'] = 'same-origin';\n\t\t\theaders['Cross-Origin-Embedder-Policy'] = 'require-corp';\n\t\t} else if (coiRequest === '2') {\n\t\t\theaders['Cross-Origin-Embedder-Policy'] = 'require-corp';\n\t\t} else if (coiRequest === '1') {\n\t\t\theaders['Cross-Origin-Opener-Policy'] = 'same-origin';\n\t\t}\n\n\t\tconst response = new Response(entry.data, {\n\t\t\tstatus: 200,\n\t\t\theaders\n\t\t});\n\n\t\tif (shouldTryCaching && entry.etag) {\n\t\t\tcaches.open(resourceCacheName).then(cache => {\n\t\t\t\treturn cache.put(event.request, response);\n\t\t\t});\n\t\t}\n\t\treturn response.clone();\n\t};\n\n\tconst parentClients = await getOuterIframeClient(webviewId);\n\tif (!parentClients.length) {\n\t\tconsole.log('Could not find parent client for request');\n\t\treturn notFound();\n\t}\n\n\t/** @type {Response | undefined} */\n\tlet cached;\n\tif (shouldTryCaching) {\n\t\tconst cache = await caches.open(resourceCacheName);\n\t\tcached = await cache.match(event.request);\n\t}\n\n\tconst { requestId, promise } = resourceRequestStore.create();\n\n\tfor (const parentClient of parentClients) {\n\t\tparentClient.postMessage({\n\t\t\tchannel: 'load-resource',\n\t\t\tid: requestId,\n\t\t\tscheme: requestUrlComponents.scheme,\n\t\t\tauthority: requestUrlComponents.authority,\n\t\t\tpath: requestUrlComponents.path,\n\t\t\tquery: requestUrlComponents.query,\n\t\t\tifNoneMatch: cached?.headers.get('ETag'),\n\t\t});\n\t}\n\n\treturn promise.then(entry => resolveResourceEntry(entry, cached));\n}\n\n/**\n * @param {FetchEvent} event\n * @param {URL} requestUrl\n * @return {Promise<Response>}\n */\nasync function processLocalhostRequest(event, requestUrl) {\n\tconst client = await sw.clients.get(event.clientId);\n\tif (!client) {\n\t\t// This is expected when requesting resources on other localhost ports\n\t\t// that are not spawned by vs code\n\t\treturn fetch(event.request);\n\t}\n\tconst webviewId = getWebviewIdForClient(client);\n\tif (!webviewId) {\n\t\tconsole.error('Could not resolve webview id');\n\t\treturn fetch(event.request);\n\t}\n\n\tconst origin = requestUrl.origin;\n\n\t/**\n\t * @param {RequestStoreResult<string | undefined>} result\n\t * @return {Promise<Response>}\n\t */\n\tconst resolveRedirect = async (result) => {\n\t\tif (result.status !== 'ok' || !result.value) {\n\t\t\treturn fetch(event.request);\n\t\t}\n\n\t\tconst redirectOrigin = result.value;\n\t\tconst location = event.request.url.replace(new RegExp(`^${requestUrl.origin}(/|$)`), `${redirectOrigin}$1`);\n\t\treturn new Response(null, {\n\t\t\tstatus: 302,\n\t\t\theaders: {\n\t\t\t\tLocation: location\n\t\t\t}\n\t\t});\n\t};\n\n\tconst parentClients = await getOuterIframeClient(webviewId);\n\tif (!parentClients.length) {\n\t\tconsole.log('Could not find parent client for request');\n\t\treturn notFound();\n\t}\n\n\tconst { requestId, promise } = localhostRequestStore.create();\n\tfor (const parentClient of parentClients) {\n\t\tparentClient.postMessage({\n\t\t\tchannel: 'load-localhost',\n\t\t\torigin: origin,\n\t\t\tid: requestId,\n\t\t});\n\t}\n\n\treturn promise.then(resolveRedirect);\n}\n\n/**\n * @param {Client} client\n * @returns {string | null}\n */\nfunction getWebviewIdForClient(client) {\n\tconst requesterClientUrl = new URL(client.url);\n\treturn requesterClientUrl.searchParams.get('id');\n}\n\n/**\n * @param {string} webviewId\n * @returns {Promise<Client[]>}\n */\nasync function getOuterIframeClient(webviewId) {\n\tconst allClients = await sw.clients.matchAll({ includeUncontrolled: true });\n\treturn allClients.filter(client => {\n\t\tconst clientUrl = new URL(client.url);\n\t\tconst hasExpectedPathName = (clientUrl.pathname === `${rootPath}/` || clientUrl.pathname === `${rootPath}/index.html` || clientUrl.pathname === `${rootPath}/index-no-csp.html`);\n\t\treturn hasExpectedPathName && clientUrl.searchParams.get('id') === webviewId;\n\t});\n}\n"],
  "mappings": ";;AAQA,MAAM;AAAA;AAAA;AAAA,EAAkE;AAAA;AAExE,MAAM,UAAU;AAEhB,MAAM,oBAAoB,yBAAyB,OAAO;AAE1D,MAAM,WAAW,GAAG,SAAS,SAAS,QAAQ,wBAAwB,EAAE;AAExE,MAAM,eAAe,IAAI,IAAI,SAAS,SAAS,CAAC,EAAE;AAElD,MAAM,kBAAkB,aAAa,IAAI,iBAAiB;AAK1D,MAAM,wBAAwB,aAAa,IAAI,gCAAgC;AAE/E,MAAM,iBAAiB;AAmBvB,MAAM,aAAa;AAAA,EA5CnB,OA4CmB;AAAA;AAAA;AAAA,EAClB,cAAc;AAEb,SAAK,MAAM,oBAAI,IAAI;AAEnB,SAAK,cAAc;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACR,UAAM,YAAY,EAAE,KAAK;AAGzB,QAAI;AAGJ,UAAM,UAAU,IAAI,QAAQ,OAAK,UAAU,CAAC;AAG5C,UAAM,QAAQ,EAAE;AAAA;AAAA,MAA4D;AAAA,OAAU,QAAQ;AAE9F,SAAK,IAAI,IAAI,WAAW,KAAK;AAE7B,UAAM,UAAU,6BAAM;AACrB,mBAAa,OAAO;AACpB,YAAM,gBAAgB,KAAK,IAAI,IAAI,SAAS;AAC5C,UAAI,kBAAkB,OAAO;AAC5B,sBAAc,QAAQ,EAAE,QAAQ,UAAU,CAAC;AAC3C,aAAK,IAAI,OAAO,SAAS;AACzB;AAAA,MACD;AAAA,IACD,GARgB;AAShB,UAAM,UAAU,WAAW,SAAS,cAAc;AAClD,WAAO,EAAE,WAAW,QAAQ;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,WAAW,QAAQ;AAC1B,UAAM,QAAQ,KAAK,IAAI,IAAI,SAAS;AACpC,QAAI,CAAC,OAAO;AACX,aAAO;AAAA,IACR;AACA,UAAM,QAAQ,EAAE,QAAQ,MAAM,OAAO,OAAO,CAAC;AAC7C,SAAK,IAAI,OAAO,SAAS;AACzB,WAAO;AAAA,EACR;AACD;AAcA,MAAM,uBAAuB,IAAI,aAAa;AAO9C,MAAM,wBAAwB,IAAI,aAAa;AAE/C,MAAM,eAAe,6BACpB,IAAI,SAAS,gBAAgB,EAAE,QAAQ,IAAK,CAAC,GADzB;AAGrB,MAAM,WAAW,6BAChB,IAAI,SAAS,aAAa,EAAE,QAAQ,IAAK,CAAC,GAD1B;AAGjB,MAAM,mBAAmB,6BACxB,IAAI,SAAS,sBAAsB,EAAE,QAAQ,IAAK,CAAC,GAD3B;AAGzB,MAAM,iBAAiB,6BACtB,IAAI,SAAS,mBAAmB,EAAE,QAAQ,IAAK,CAAC,GAD1B;AAGvB,GAAG,iBAAiB,WAAW,OAAO,UAAU;AAC/C,UAAQ,MAAM,KAAK,SAAS;AAAA,IAC3B,KAAK,WAAW;AACf,YAAM;AAAA;AAAA,QAAgC,MAAM;AAAA;AAC5C,SAAG,QAAQ,IAAI,OAAO,EAAE,EAAE,KAAK,YAAU;AACxC,YAAI,QAAQ;AACX,iBAAO,YAAY;AAAA,YAClB,SAAS;AAAA,YACT,SAAS;AAAA,UACV,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AACD;AAAA,IACD;AAAA,IACA,KAAK,qBAAqB;AAEzB,YAAM,WAAW,MAAM,KAAK;AAC5B,UAAI,CAAC,qBAAqB,QAAQ,SAAS,IAAI,QAAQ,GAAG;AACzD,gBAAQ,IAAI,sCAAsC,SAAS,IAAI;AAAA,MAChE;AACA;AAAA,IACD;AAAA,IACA,KAAK,sBAAsB;AAC1B,YAAM,OAAO,MAAM,KAAK;AACxB,UAAI,CAAC,sBAAsB,QAAQ,KAAK,IAAI,KAAK,QAAQ,GAAG;AAC3D,gBAAQ,IAAI,uCAAuC,KAAK,MAAM;AAAA,MAC/D;AACA;AAAA,IACD;AAAA,IACA,SAAS;AACR,cAAQ,IAAI,iBAAiB;AAC7B;AAAA,IACD;AAAA,EACD;AACD,CAAC;AAED,GAAG,iBAAiB,SAAS,CAAC,UAAU;AACvC,QAAM,aAAa,IAAI,IAAI,MAAM,QAAQ,GAAG;AAC5C,MAAI,OAAO,0BAA0B,YAAY,WAAW,aAAa,YAAY,WAAW,SAAS,SAAS,MAAM,qBAAqB,GAAG;AAC/I,YAAQ,MAAM,QAAQ,QAAQ;AAAA,MAC7B,KAAK;AAAA,MACL,KAAK,QAAQ;AACZ,cAAM,mBAAmB,WAAW,SAAS,MAAM,GAAG,WAAW,SAAS,UAAU,sBAAsB,SAAS,EAAE;AACrH,cAAM,SAAS,iBAAiB,MAAM,KAAK,CAAC,EAAE,CAAC;AAC/C,cAAM,YAAY,iBAAiB,MAAM,OAAO,SAAS,CAAC;AAC1D,eAAO,MAAM,YAAY,uBAAuB,OAAO;AAAA,UACtD;AAAA,UACA;AAAA,UACA,MAAM,WAAW;AAAA,UACjB,OAAO,WAAW,OAAO,QAAQ,OAAO,EAAE;AAAA,QAC3C,CAAC,CAAC;AAAA,MACH;AAAA,MACA,SAAS;AACR,eAAO,MAAM,YAAY,iBAAiB,CAAC;AAAA,MAC5C;AAAA,IACD;AAAA,EACD;AAMA,MAAI,WAAW,WAAW,GAAG,UAAU,WAAW,SAAS,iBAAiB;AAC3E,YAAQ,MAAM,QAAQ,QAAQ;AAAA,MAC7B,KAAK;AAAA,MACL,KAAK,QAAQ;AACZ,eAAO,MAAM,YAAY,uBAAuB,OAAO;AAAA,UACtD,MAAM,WAAW;AAAA,UACjB,QAAQ,WAAW,SAAS,MAAM,GAAG,WAAW,SAAS,SAAS,CAAC;AAAA,UACnE,WAAW,WAAW;AAAA,UACtB,OAAO,WAAW,OAAO,QAAQ,OAAO,EAAE;AAAA,QAC3C,CAAC,CAAC;AAAA,MACH;AAAA,MACA,SAAS;AACR,eAAO,MAAM,YAAY,iBAAiB,CAAC;AAAA,MAC5C;AAAA,IACD;AAAA,EACD;AAGA,MAAI,WAAW,WAAW,GAAG,UAAU,WAAW,KAAK,MAAM,uCAAuC,GAAG;AACtG,WAAO,MAAM,YAAY,wBAAwB,OAAO,UAAU,CAAC;AAAA,EACpE;AACD,CAAC;AAED,GAAG,iBAAiB,WAAW,CAAC,UAAU;AACzC,QAAM,UAAU,GAAG,YAAY,CAAC;AACjC,CAAC;AAED,GAAG,iBAAiB,YAAY,CAAC,UAAU;AAC1C,QAAM,UAAU,GAAG,QAAQ,MAAM,CAAC;AACnC,CAAC;AAWD,eAAe,uBAAuB,OAAO,sBAAsB;AAClE,QAAM,SAAS,MAAM,GAAG,QAAQ,IAAI,MAAM,QAAQ;AAClD,MAAI,CAAC,QAAQ;AACZ,YAAQ,MAAM,yCAAyC;AACvD,WAAO,SAAS;AAAA,EACjB;AAEA,QAAM,YAAY,sBAAsB,MAAM;AAC9C,MAAI,CAAC,WAAW;AACf,YAAQ,MAAM,8BAA8B;AAC5C,WAAO,SAAS;AAAA,EACjB;AAEA,QAAM,mBAAoB,MAAM,QAAQ,WAAW;AAMnD,QAAM,uBAAuB,wBAAC,QAAQ,mBAAmB;AACxD,QAAI,OAAO,WAAW,WAAW;AAChC,aAAO,eAAe;AAAA,IACvB;AAEA,UAAM,QAAQ,OAAO;AACrB,QAAI,MAAM,WAAW,KAAK;AACzB,UAAI,gBAAgB;AACnB,eAAO,eAAe,MAAM;AAAA,MAC7B,OAAO;AACN,cAAM,IAAI,MAAM,gBAAgB;AAAA,MACjC;AAAA,IACD;AAEA,QAAI,MAAM,WAAW,KAAK;AACzB,aAAO,aAAa;AAAA,IACrB;AAEA,QAAI,MAAM,WAAW,KAAK;AACzB,aAAO,SAAS;AAAA,IACjB;AAGA,UAAM,gBAAgB;AAAA,MACrB,+BAA+B;AAAA,IAChC;AAEA,UAAM,aAAa,MAAM,KAAK;AAE9B,UAAM,QAAQ,MAAM,QAAQ,QAAQ,IAAI,OAAO;AAC/C,QAAI,OAAO;AAEV,YAAM,QAAQ,MAAM,MAAM,yBAAyB;AACnD,UAAI,OAAO;AAIV,cAAM,QAAQ,OAAO,MAAM,CAAC,CAAC;AAC7B,cAAM,MAAM,OAAO,MAAM,CAAC,CAAC,KAAK,aAAa;AAC7C,eAAO,IAAI,SAAS,MAAM,KAAK,MAAM,OAAO,MAAM,CAAC,GAAG;AAAA,UACrD,QAAQ;AAAA,UACR,SAAS;AAAA,YACR,GAAG;AAAA,YACH,iBAAiB,WAAW,GAAG,IAAI,UAAU;AAAA,UAC9C;AAAA,QACD,CAAC;AAAA,MACF,OAAO;AAEN,eAAO,IAAI,SAAS,MAAM;AAAA,UACzB,QAAQ;AAAA,UACR,SAAS;AAAA,YACR,GAAG;AAAA,YACH,iBAAiB,KAAK,UAAU;AAAA,UACjC;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAGA,UAAM,UAAU;AAAA,MACf,GAAG;AAAA,MACH,gBAAgB,MAAM;AAAA,MACtB,kBAAkB,WAAW,SAAS;AAAA,IACvC;AAEA,QAAI,MAAM,MAAM;AACf,cAAQ,MAAM,IAAI,MAAM;AACxB,cAAQ,eAAe,IAAI;AAAA,IAC5B;AACA,QAAI,MAAM,OAAO;AAChB,cAAQ,eAAe,IAAI,IAAI,KAAK,MAAM,KAAK,EAAE,YAAY;AAAA,IAC9D;AAGA,UAAM,aAAa,IAAI,IAAI,MAAM,QAAQ,GAAG,EAAE,aAAa,IAAI,YAAY;AAC3E,QAAI,eAAe,KAAK;AACvB,cAAQ,4BAA4B,IAAI;AACxC,cAAQ,8BAA8B,IAAI;AAAA,IAC3C,WAAW,eAAe,KAAK;AAC9B,cAAQ,8BAA8B,IAAI;AAAA,IAC3C,WAAW,eAAe,KAAK;AAC9B,cAAQ,4BAA4B,IAAI;AAAA,IACzC;AAEA,UAAM,WAAW,IAAI,SAAS,MAAM,MAAM;AAAA,MACzC,QAAQ;AAAA,MACR;AAAA,IACD,CAAC;AAED,QAAI,oBAAoB,MAAM,MAAM;AACnC,aAAO,KAAK,iBAAiB,EAAE,KAAK,WAAS;AAC5C,eAAO,MAAM,IAAI,MAAM,SAAS,QAAQ;AAAA,MACzC,CAAC;AAAA,IACF;AACA,WAAO,SAAS,MAAM;AAAA,EACvB,GA/F6B;AAiG7B,QAAM,gBAAgB,MAAM,qBAAqB,SAAS;AAC1D,MAAI,CAAC,cAAc,QAAQ;AAC1B,YAAQ,IAAI,0CAA0C;AACtD,WAAO,SAAS;AAAA,EACjB;AAGA,MAAI;AACJ,MAAI,kBAAkB;AACrB,UAAM,QAAQ,MAAM,OAAO,KAAK,iBAAiB;AACjD,aAAS,MAAM,MAAM,MAAM,MAAM,OAAO;AAAA,EACzC;AAEA,QAAM,EAAE,WAAW,QAAQ,IAAI,qBAAqB,OAAO;AAE3D,aAAW,gBAAgB,eAAe;AACzC,iBAAa,YAAY;AAAA,MACxB,SAAS;AAAA,MACT,IAAI;AAAA,MACJ,QAAQ,qBAAqB;AAAA,MAC7B,WAAW,qBAAqB;AAAA,MAChC,MAAM,qBAAqB;AAAA,MAC3B,OAAO,qBAAqB;AAAA,MAC5B,aAAa,QAAQ,QAAQ,IAAI,MAAM;AAAA,IACxC,CAAC;AAAA,EACF;AAEA,SAAO,QAAQ,KAAK,WAAS,qBAAqB,OAAO,MAAM,CAAC;AACjE;AAhJe;AAuJf,eAAe,wBAAwB,OAAO,YAAY;AACzD,QAAM,SAAS,MAAM,GAAG,QAAQ,IAAI,MAAM,QAAQ;AAClD,MAAI,CAAC,QAAQ;AAGZ,WAAO,MAAM,MAAM,OAAO;AAAA,EAC3B;AACA,QAAM,YAAY,sBAAsB,MAAM;AAC9C,MAAI,CAAC,WAAW;AACf,YAAQ,MAAM,8BAA8B;AAC5C,WAAO,MAAM,MAAM,OAAO;AAAA,EAC3B;AAEA,QAAM,SAAS,WAAW;AAM1B,QAAM,kBAAkB,8BAAO,WAAW;AACzC,QAAI,OAAO,WAAW,QAAQ,CAAC,OAAO,OAAO;AAC5C,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B;AAEA,UAAM,iBAAiB,OAAO;AAC9B,UAAMA,YAAW,MAAM,QAAQ,IAAI,QAAQ,IAAI,OAAO,IAAI,WAAW,MAAM,OAAO,GAAG,GAAG,cAAc,IAAI;AAC1G,WAAO,IAAI,SAAS,MAAM;AAAA,MACzB,QAAQ;AAAA,MACR,SAAS;AAAA,QACR,UAAUA;AAAA,MACX;AAAA,IACD,CAAC;AAAA,EACF,GAbwB;AAexB,QAAM,gBAAgB,MAAM,qBAAqB,SAAS;AAC1D,MAAI,CAAC,cAAc,QAAQ;AAC1B,YAAQ,IAAI,0CAA0C;AACtD,WAAO,SAAS;AAAA,EACjB;AAEA,QAAM,EAAE,WAAW,QAAQ,IAAI,sBAAsB,OAAO;AAC5D,aAAW,gBAAgB,eAAe;AACzC,iBAAa,YAAY;AAAA,MACxB,SAAS;AAAA,MACT;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAEA,SAAO,QAAQ,KAAK,eAAe;AACpC;AAlDe;AAwDf,SAAS,sBAAsB,QAAQ;AACtC,QAAM,qBAAqB,IAAI,IAAI,OAAO,GAAG;AAC7C,SAAO,mBAAmB,aAAa,IAAI,IAAI;AAChD;AAHS;AAST,eAAe,qBAAqB,WAAW;AAC9C,QAAM,aAAa,MAAM,GAAG,QAAQ,SAAS,EAAE,qBAAqB,KAAK,CAAC;AAC1E,SAAO,WAAW,OAAO,YAAU;AAClC,UAAM,YAAY,IAAI,IAAI,OAAO,GAAG;AACpC,UAAM,sBAAuB,UAAU,aAAa,GAAG,QAAQ,OAAO,UAAU,aAAa,GAAG,QAAQ,iBAAiB,UAAU,aAAa,GAAG,QAAQ;AAC3J,WAAO,uBAAuB,UAAU,aAAa,IAAI,IAAI,MAAM;AAAA,EACpE,CAAC;AACF;AAPe;",
  "names": ["location"]
}
