import"../../../../base/common/buffer.js";import"../../../../base/common/cancellation.js";import{isUNC as u}from"../../../../base/common/extpath.js";import{Schemas as m}from"../../../../base/common/network.js";import{normalize as f,sep as p}from"../../../../base/common/path.js";import{URI as R}from"../../../../base/common/uri.js";import{FileOperationError as y,FileOperationResult as h}from"../../../../platform/files/common/files.js";import"../../../../platform/log/common/log.js";import{getWebviewContentMimeType as I}from"../../../../platform/webview/common/mimeTypes.js";var s;(a=>{let e;(r=>(r[r.Success=0]="Success",r[r.Failed=1]="Failed",r[r.AccessDenied=2]="AccessDenied",r[r.NotModified=3]="NotModified"))(e=a.Type||={});class o{constructor(t,l,b,r){this.stream=t;this.etag=l;this.mtime=b;this.mimeType=r}type=0}a.StreamSuccess=o,a.Failed={type:1},a.AccessDenied={type:2};class d{constructor(t,l){this.mimeType=t;this.mtime=l}type=3}a.NotModified=d})(s||={});async function $(e,o,i,n,d){n.debug(`loadLocalResource - begin. requestUri=${e}`);const a=S(e,o.roots);if(n.debug(`loadLocalResource - found resource to load. requestUri=${e}, resourceToLoad=${a}`),!a)return s.AccessDenied;const c=I(e);try{const t=await i.readFileStream(a,{etag:o.ifNoneMatch},d);return new s.StreamSuccess(t.value,t.etag,t.mtime,c)}catch(t){return t instanceof y&&t.fileOperationResult===h.FILE_NOT_MODIFIED_SINCE?new s.NotModified(c,t.options?.mtime):(n.debug(`loadLocalResource - Error using fileReader. requestUri=${e}`),s.Failed)}}function S(e,o){for(const i of o)if(g(i,e))return F(e)}function g(e,o){if(e.scheme!==o.scheme)return!1;let i=f(o.fsPath),n=f(e.fsPath+(e.fsPath.endsWith(p)?"":p));return u(e.fsPath)&&u(o.fsPath)&&(n=n.toLowerCase(),i=i.toLowerCase()),i.startsWith(n)}function F(e){return e.scheme===m.vscodeRemote?R.from({scheme:m.vscodeRemote,authority:e.authority,path:"/vscode-resource",query:JSON.stringify({requestResourcePath:e.path})}):e}export{s as WebviewResourceResponse,$ as loadLocalResource};
