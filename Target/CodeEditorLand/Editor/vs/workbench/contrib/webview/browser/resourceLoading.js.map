{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webview/browser/resourceLoading.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { VSBufferReadableStream } from \"../../../../base/common/buffer.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { isUNC } from \"../../../../base/common/extpath.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { normalize, sep } from \"../../../../base/common/path.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport {\n\tFileOperationError,\n\tFileOperationResult,\n\ttype IFileService,\n\ttype IWriteFileOptions,\n} from \"../../../../platform/files/common/files.js\";\nimport type { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { getWebviewContentMimeType } from \"../../../../platform/webview/common/mimeTypes.js\";\n\nexport namespace WebviewResourceResponse {\n\texport enum Type {\n\t\tSuccess = 0,\n\t\tFailed = 1,\n\t\tAccessDenied = 2,\n\t\tNotModified = 3,\n\t}\n\n\texport class StreamSuccess {\n\t\treadonly type = Type.Success;\n\n\t\tconstructor(\n\t\t\tpublic readonly stream: VSBufferReadableStream,\n\t\t\tpublic readonly etag: string | undefined,\n\t\t\tpublic readonly mtime: number | undefined,\n\t\t\tpublic readonly mimeType: string,\n\t\t) {}\n\t}\n\n\texport const Failed = { type: Type.Failed } as const;\n\texport const AccessDenied = { type: Type.AccessDenied } as const;\n\n\texport class NotModified {\n\t\treadonly type = Type.NotModified;\n\n\t\tconstructor(\n\t\t\tpublic readonly mimeType: string,\n\t\t\tpublic readonly mtime: number | undefined,\n\t\t) {}\n\t}\n\n\texport type StreamResponse =\n\t\t| StreamSuccess\n\t\t| typeof Failed\n\t\t| typeof AccessDenied\n\t\t| NotModified;\n}\n\nexport async function loadLocalResource(\n\trequestUri: URI,\n\toptions: {\n\t\tifNoneMatch: string | undefined;\n\t\troots: ReadonlyArray<URI>;\n\t},\n\tfileService: IFileService,\n\tlogService: ILogService,\n\ttoken: CancellationToken,\n): Promise<WebviewResourceResponse.StreamResponse> {\n\tlogService.debug(`loadLocalResource - begin. requestUri=${requestUri}`);\n\n\tconst resourceToLoad = getResourceToLoad(requestUri, options.roots);\n\n\tlogService.debug(\n\t\t`loadLocalResource - found resource to load. requestUri=${requestUri}, resourceToLoad=${resourceToLoad}`,\n\t);\n\n\tif (!resourceToLoad) {\n\t\treturn WebviewResourceResponse.AccessDenied;\n\t}\n\n\tconst mime = getWebviewContentMimeType(requestUri); // Use the original path for the mime\n\n\ttry {\n\t\tconst result = await fileService.readFileStream(\n\t\t\tresourceToLoad,\n\t\t\t{ etag: options.ifNoneMatch },\n\t\t\ttoken,\n\t\t);\n\t\treturn new WebviewResourceResponse.StreamSuccess(\n\t\t\tresult.value,\n\t\t\tresult.etag,\n\t\t\tresult.mtime,\n\t\t\tmime,\n\t\t);\n\t} catch (err) {\n\t\tif (err instanceof FileOperationError) {\n\t\t\tconst result = err.fileOperationResult;\n\n\t\t\t// NotModified status is expected and can be handled gracefully\n\t\t\tif (result === FileOperationResult.FILE_NOT_MODIFIED_SINCE) {\n\t\t\t\treturn new WebviewResourceResponse.NotModified(\n\t\t\t\t\tmime,\n\t\t\t\t\t(err.options as IWriteFileOptions | undefined)?.mtime,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise the error is unexpected.\n\t\tlogService.debug(\n\t\t\t`loadLocalResource - Error using fileReader. requestUri=${requestUri}`,\n\t\t);\n\t\tconsole.log(err);\n\n\t\treturn WebviewResourceResponse.Failed;\n\t}\n}\n\nfunction getResourceToLoad(\n\trequestUri: URI,\n\troots: ReadonlyArray<URI>,\n): URI | undefined {\n\tfor (const root of roots) {\n\t\tif (containsResource(root, requestUri)) {\n\t\t\treturn normalizeResourcePath(requestUri);\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction containsResource(root: URI, resource: URI): boolean {\n\tif (root.scheme !== resource.scheme) {\n\t\treturn false;\n\t}\n\n\tlet resourceFsPath = normalize(resource.fsPath);\n\tlet rootPath = normalize(\n\t\troot.fsPath + (root.fsPath.endsWith(sep) ? \"\" : sep),\n\t);\n\n\tif (isUNC(root.fsPath) && isUNC(resource.fsPath)) {\n\t\trootPath = rootPath.toLowerCase();\n\t\tresourceFsPath = resourceFsPath.toLowerCase();\n\t}\n\n\treturn resourceFsPath.startsWith(rootPath);\n}\n\nfunction normalizeResourcePath(resource: URI): URI {\n\t// Rewrite remote uris to a path that the remote file system can understand\n\tif (resource.scheme === Schemas.vscodeRemote) {\n\t\treturn URI.from({\n\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\tauthority: resource.authority,\n\t\t\tpath: \"/vscode-resource\",\n\t\t\tquery: JSON.stringify({\n\t\t\t\trequestResourcePath: resource.path,\n\t\t\t}),\n\t\t});\n\t}\n\treturn resource;\n}\n"],
  "mappings": "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",
  "names": ["WebviewResourceResponse", "Type"]
}
