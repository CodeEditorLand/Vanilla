{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webview/browser/overlayWebview.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension, getWindowById } from '../../../../base/browser/dom.js';\nimport { FastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IMouseWheelEvent } from '../../../../base/browser/mouseEvent.js';\nimport { CodeWindow } from '../../../../base/browser/window.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { IContextKey, IContextKeyService, IScopedContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nimport { IOverlayWebview, IWebview, IWebviewElement, IWebviewService, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_ENABLED, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE, WebviewContentOptions, WebviewExtensionDescription, WebviewInitInfo, WebviewMessageReceivedEvent, WebviewOptions } from './webview.js';\n\n/**\n * Webview that is absolutely positioned over another element and that can creates and destroys an underlying webview as needed.\n */\nexport class OverlayWebview extends Disposable implements IOverlayWebview {\n\n\tprivate _isFirstLoad = true;\n\tprivate readonly _firstLoadPendingMessages = new Set<{ readonly message: any; readonly transfer?: readonly ArrayBuffer[]; readonly resolve: (value: boolean) => void }>();\n\tprivate readonly _webview = this._register(new MutableDisposable<IWebviewElement>());\n\tprivate readonly _webviewEvents = this._register(new DisposableStore());\n\n\tprivate _html = '';\n\tprivate _title: string | undefined;\n\tprivate _initialScrollProgress: number = 0;\n\tprivate _state: string | undefined = undefined;\n\n\tprivate _extension: WebviewExtensionDescription | undefined;\n\tprivate _contentOptions: WebviewContentOptions;\n\tprivate _options: WebviewOptions;\n\n\tprivate _owner: any = undefined;\n\n\tprivate _windowId: number | undefined = undefined;\n\tprivate get window() { return getWindowById(this._windowId, true).window; }\n\n\tprivate readonly _scopedContextKeyService = this._register(new MutableDisposable<IScopedContextKeyService>());\n\tprivate _findWidgetVisible: IContextKey<boolean> | undefined;\n\tprivate _findWidgetEnabled: IContextKey<boolean> | undefined;\n\tprivate _shouldShowFindWidgetOnRestore = false;\n\n\tpublic readonly providedViewType?: string;\n\n\tpublic origin: string;\n\n\tprivate _container: FastDomNode<HTMLDivElement> | undefined;\n\n\tpublic constructor(\n\t\tinitInfo: WebviewInitInfo,\n\t\t@IWorkbenchLayoutService private readonly _layoutService: IWorkbenchLayoutService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t\t@IContextKeyService private readonly _baseContextKeyService: IContextKeyService\n\t) {\n\t\tsuper();\n\n\t\tthis.providedViewType = initInfo.providedViewType;\n\t\tthis.origin = initInfo.origin ?? generateUuid();\n\n\t\tthis._title = initInfo.title;\n\t\tthis._extension = initInfo.extension;\n\t\tthis._options = initInfo.options;\n\t\tthis._contentOptions = initInfo.contentOptions;\n\t}\n\n\tpublic get isFocused() {\n\t\treturn !!this._webview.value?.isFocused;\n\t}\n\n\tprivate _isDisposed = false;\n\n\tprivate readonly _onDidDispose = this._register(new Emitter<void>());\n\tpublic onDidDispose = this._onDidDispose.event;\n\n\toverride dispose() {\n\t\tthis._isDisposed = true;\n\n\t\tthis._container?.domNode.remove();\n\t\tthis._container = undefined;\n\n\t\tfor (const msg of this._firstLoadPendingMessages) {\n\t\t\tmsg.resolve(false);\n\t\t}\n\t\tthis._firstLoadPendingMessages.clear();\n\n\t\tthis._onDidDispose.fire();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic get container(): HTMLElement {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`OverlayWebview has been disposed`);\n\t\t}\n\n\t\tif (!this._container) {\n\t\t\tconst node = document.createElement('div');\n\t\t\tnode.style.position = 'absolute';\n\t\t\tnode.style.overflow = 'hidden';\n\t\t\tthis._container = new FastDomNode(node);\n\t\t\tthis._container.setVisibility('hidden');\n\n\t\t\t// Webviews cannot be reparented in the dom as it will destroy their contents.\n\t\t\t// Mount them to a high level node to avoid this.\n\t\t\tthis._layoutService.getContainer(this.window).appendChild(node);\n\t\t}\n\n\t\treturn this._container.domNode;\n\t}\n\n\tpublic claim(owner: any, targetWindow: CodeWindow, scopedContextKeyService: IContextKeyService | undefined) {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldOwner = this._owner;\n\n\t\tif (this._windowId !== targetWindow.vscodeWindowId) {\n\t\t\t// moving to a new window\n\t\t\tthis.release(oldOwner);\n\t\t\t// since we are moving to a new window, we need to dispose the webview and recreate\n\t\t\tthis._webview.clear();\n\t\t\tthis._webviewEvents.clear();\n\t\t\tthis._container?.domNode.remove();\n\t\t\tthis._container = undefined;\n\t\t}\n\n\t\tthis._owner = owner;\n\t\tthis._windowId = targetWindow.vscodeWindowId;\n\t\tthis._show(targetWindow);\n\n\t\tif (oldOwner !== owner) {\n\t\t\tconst contextKeyService = (scopedContextKeyService || this._baseContextKeyService);\n\n\t\t\t// Explicitly clear before creating the new context.\n\t\t\t// Otherwise we create the new context while the old one is still around\n\t\t\tthis._scopedContextKeyService.clear();\n\t\t\tthis._scopedContextKeyService.value = contextKeyService.createScoped(this.container);\n\n\t\t\tconst wasFindVisible = this._findWidgetVisible?.get();\n\t\t\tthis._findWidgetVisible?.reset();\n\t\t\tthis._findWidgetVisible = KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n\t\t\tthis._findWidgetVisible.set(!!wasFindVisible);\n\n\t\t\tthis._findWidgetEnabled?.reset();\n\t\t\tthis._findWidgetEnabled = KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_ENABLED.bindTo(contextKeyService);\n\t\t\tthis._findWidgetEnabled.set(!!this.options.enableFindWidget);\n\n\t\t\tthis._webview.value?.setContextKeyService(this._scopedContextKeyService.value);\n\t\t}\n\t}\n\n\tpublic release(owner: any) {\n\t\tif (this._owner !== owner) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._scopedContextKeyService.clear();\n\n\t\tthis._owner = undefined;\n\t\tif (this._container) {\n\t\t\tthis._container.setVisibility('hidden');\n\t\t}\n\n\t\tif (this._options.retainContextWhenHidden) {\n\t\t\t// https://github.com/microsoft/vscode/issues/157424\n\t\t\t// We need to record the current state when retaining context so we can try to showFind() when showing webview again\n\t\t\tthis._shouldShowFindWidgetOnRestore = !!this._findWidgetVisible?.get();\n\t\t\tthis.hideFind(false);\n\t\t} else {\n\t\t\tthis._webview.clear();\n\t\t\tthis._webviewEvents.clear();\n\t\t}\n\t}\n\n\tpublic layoutWebviewOverElement(element: HTMLElement, dimension?: Dimension, clippingContainer?: HTMLElement) {\n\t\tif (!this._container || !this._container.domNode.parentElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst whenContainerStylesLoaded = this._layoutService.whenContainerStylesLoaded(this.window);\n\t\tif (whenContainerStylesLoaded) {\n\t\t\t// In floating windows, we need to ensure that the\n\t\t\t// container is ready for us to compute certain\n\t\t\t// layout related properties.\n\t\t\twhenContainerStylesLoaded.then(() => this.doLayoutWebviewOverElement(element, dimension, clippingContainer));\n\t\t} else {\n\t\t\tthis.doLayoutWebviewOverElement(element, dimension, clippingContainer);\n\t\t}\n\t}\n\n\tprivate doLayoutWebviewOverElement(element: HTMLElement, dimension?: Dimension, clippingContainer?: HTMLElement) {\n\t\tif (!this._container || !this._container.domNode.parentElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst frameRect = element.getBoundingClientRect();\n\t\tconst containerRect = this._container.domNode.parentElement.getBoundingClientRect();\n\t\tconst parentBorderTop = (containerRect.height - this._container.domNode.parentElement.clientHeight) / 2.0;\n\t\tconst parentBorderLeft = (containerRect.width - this._container.domNode.parentElement.clientWidth) / 2.0;\n\n\t\tthis._container.setTop(frameRect.top - containerRect.top - parentBorderTop);\n\t\tthis._container.setLeft(frameRect.left - containerRect.left - parentBorderLeft);\n\t\tthis._container.setWidth(dimension ? dimension.width : frameRect.width);\n\t\tthis._container.setHeight(dimension ? dimension.height : frameRect.height);\n\n\t\tif (clippingContainer) {\n\t\t\tconst { top, left, right, bottom } = computeClippingRect(frameRect, clippingContainer);\n\t\t\tthis._container.domNode.style.clipPath = `polygon(${left}px ${top}px, ${right}px ${top}px, ${right}px ${bottom}px, ${left}px ${bottom}px)`;\n\t\t}\n\t}\n\n\tprivate _show(targetWindow: CodeWindow) {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('OverlayWebview is disposed');\n\t\t}\n\n\t\tif (!this._webview.value) {\n\t\t\tconst webview = this._webviewService.createWebviewElement({\n\t\t\t\tprovidedViewType: this.providedViewType,\n\t\t\t\torigin: this.origin,\n\t\t\t\ttitle: this._title,\n\t\t\t\toptions: this._options,\n\t\t\t\tcontentOptions: this._contentOptions,\n\t\t\t\textension: this.extension,\n\t\t\t});\n\t\t\tthis._webview.value = webview;\n\t\t\twebview.state = this._state;\n\n\t\t\tif (this._scopedContextKeyService.value) {\n\t\t\t\tthis._webview.value.setContextKeyService(this._scopedContextKeyService.value);\n\t\t\t}\n\n\t\t\tif (this._html) {\n\t\t\t\twebview.setHtml(this._html);\n\t\t\t}\n\n\t\t\tif (this._options.tryRestoreScrollPosition) {\n\t\t\t\twebview.initialScrollProgress = this._initialScrollProgress;\n\t\t\t}\n\n\t\t\tthis._findWidgetEnabled?.set(!!this.options.enableFindWidget);\n\n\t\t\twebview.mountTo(this.container, targetWindow);\n\n\t\t\t// Forward events from inner webview to outer listeners\n\t\t\tthis._webviewEvents.clear();\n\t\t\tthis._webviewEvents.add(webview.onDidFocus(() => { this._onDidFocus.fire(); }));\n\t\t\tthis._webviewEvents.add(webview.onDidBlur(() => { this._onDidBlur.fire(); }));\n\t\t\tthis._webviewEvents.add(webview.onDidClickLink(x => { this._onDidClickLink.fire(x); }));\n\t\t\tthis._webviewEvents.add(webview.onMessage(x => { this._onMessage.fire(x); }));\n\t\t\tthis._webviewEvents.add(webview.onMissingCsp(x => { this._onMissingCsp.fire(x); }));\n\t\t\tthis._webviewEvents.add(webview.onDidWheel(x => { this._onDidWheel.fire(x); }));\n\t\t\tthis._webviewEvents.add(webview.onDidReload(() => { this._onDidReload.fire(); }));\n\t\t\tthis._webviewEvents.add(webview.onFatalError(x => { this._onFatalError.fire(x); }));\n\n\t\t\tthis._webviewEvents.add(webview.onDidScroll(x => {\n\t\t\t\tthis._initialScrollProgress = x.scrollYPercentage;\n\t\t\t\tthis._onDidScroll.fire(x);\n\t\t\t}));\n\n\t\t\tthis._webviewEvents.add(webview.onDidUpdateState(state => {\n\t\t\t\tthis._state = state;\n\t\t\t\tthis._onDidUpdateState.fire(state);\n\t\t\t}));\n\n\t\t\tif (this._isFirstLoad) {\n\t\t\t\tthis._firstLoadPendingMessages.forEach(async msg => {\n\t\t\t\t\tmsg.resolve(await webview.postMessage(msg.message, msg.transfer));\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._isFirstLoad = false;\n\t\t\tthis._firstLoadPendingMessages.clear();\n\t\t}\n\n\t\t// https://github.com/microsoft/vscode/issues/157424\n\t\tif (this.options.retainContextWhenHidden && this._shouldShowFindWidgetOnRestore) {\n\t\t\tthis.showFind(false);\n\t\t\t// Reset\n\t\t\tthis._shouldShowFindWidgetOnRestore = false;\n\t\t}\n\n\t\tthis._container?.setVisibility('visible');\n\t}\n\n\tpublic setHtml(html: string) {\n\t\tthis._html = html;\n\t\tthis._withWebview(webview => webview.setHtml(html));\n\t}\n\n\tpublic setTitle(title: string) {\n\t\tthis._title = title;\n\t\tthis._withWebview(webview => webview.setTitle(title));\n\t}\n\n\tpublic get initialScrollProgress(): number { return this._initialScrollProgress; }\n\tpublic set initialScrollProgress(value: number) {\n\t\tthis._initialScrollProgress = value;\n\t\tthis._withWebview(webview => webview.initialScrollProgress = value);\n\t}\n\n\tpublic get state(): string | undefined { return this._state; }\n\tpublic set state(value: string | undefined) {\n\t\tthis._state = value;\n\t\tthis._withWebview(webview => webview.state = value);\n\t}\n\n\tpublic get extension(): WebviewExtensionDescription | undefined { return this._extension; }\n\tpublic set extension(value: WebviewExtensionDescription | undefined) {\n\t\tthis._extension = value;\n\t\tthis._withWebview(webview => webview.extension = value);\n\t}\n\n\tpublic get options(): WebviewOptions { return this._options; }\n\tpublic set options(value: WebviewOptions) { this._options = { customClasses: this._options.customClasses, ...value }; }\n\n\tpublic get contentOptions(): WebviewContentOptions { return this._contentOptions; }\n\tpublic set contentOptions(value: WebviewContentOptions) {\n\t\tthis._contentOptions = value;\n\t\tthis._withWebview(webview => webview.contentOptions = value);\n\t}\n\n\tpublic set localResourcesRoot(resources: URI[]) {\n\t\tthis._withWebview(webview => webview.localResourcesRoot = resources);\n\t}\n\n\tprivate readonly _onDidFocus = this._register(new Emitter<void>());\n\tpublic readonly onDidFocus = this._onDidFocus.event;\n\n\tprivate readonly _onDidBlur = this._register(new Emitter<void>());\n\tpublic readonly onDidBlur = this._onDidBlur.event;\n\n\tprivate readonly _onDidClickLink = this._register(new Emitter<string>());\n\tpublic readonly onDidClickLink = this._onDidClickLink.event;\n\n\tprivate readonly _onDidReload = this._register(new Emitter<void>());\n\tpublic readonly onDidReload = this._onDidReload.event;\n\n\tprivate readonly _onDidScroll = this._register(new Emitter<{ readonly scrollYPercentage: number }>());\n\tpublic readonly onDidScroll = this._onDidScroll.event;\n\n\tprivate readonly _onDidUpdateState = this._register(new Emitter<string | undefined>());\n\tpublic readonly onDidUpdateState = this._onDidUpdateState.event;\n\n\tprivate readonly _onMessage = this._register(new Emitter<WebviewMessageReceivedEvent>());\n\tpublic readonly onMessage = this._onMessage.event;\n\n\tprivate readonly _onMissingCsp = this._register(new Emitter<ExtensionIdentifier>());\n\tpublic readonly onMissingCsp = this._onMissingCsp.event;\n\n\tprivate readonly _onDidWheel = this._register(new Emitter<IMouseWheelEvent>());\n\tpublic readonly onDidWheel = this._onDidWheel.event;\n\n\tprivate readonly _onFatalError = this._register(new Emitter<{ readonly message: string }>());\n\tpublic onFatalError = this._onFatalError.event;\n\n\tpublic async postMessage(message: any, transfer?: readonly ArrayBuffer[]): Promise<boolean> {\n\t\tif (this._webview.value) {\n\t\t\treturn this._webview.value.postMessage(message, transfer);\n\t\t}\n\n\t\tif (this._isFirstLoad) {\n\t\t\tlet resolve: (x: boolean) => void;\n\t\t\tconst p = new Promise<boolean>(r => resolve = r);\n\t\t\tthis._firstLoadPendingMessages.add({ message, transfer, resolve: resolve! });\n\t\t\treturn p;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfocus(): void { this._webview.value?.focus(); }\n\treload(): void { this._webview.value?.reload(); }\n\tselectAll(): void { this._webview.value?.selectAll(); }\n\tcopy(): void { this._webview.value?.copy(); }\n\tpaste(): void { this._webview.value?.paste(); }\n\tcut(): void { this._webview.value?.cut(); }\n\tundo(): void { this._webview.value?.undo(); }\n\tredo(): void { this._webview.value?.redo(); }\n\n\tshowFind(animated = true) {\n\t\tif (this._webview.value) {\n\t\t\tthis._webview.value.showFind(animated);\n\t\t\tthis._findWidgetVisible?.set(true);\n\t\t}\n\t}\n\n\thideFind(animated = true) {\n\t\tthis._findWidgetVisible?.reset();\n\t\tthis._webview.value?.hideFind(animated);\n\t}\n\n\trunFindAction(previous: boolean): void { this._webview.value?.runFindAction(previous); }\n\n\tprivate _withWebview(f: (webview: IWebview) => void): void {\n\t\tif (this._webview.value) {\n\t\t\tf(this._webview.value);\n\t\t}\n\t}\n\n\twindowDidDragStart() {\n\t\tthis._webview.value?.windowDidDragStart();\n\t}\n\n\twindowDidDragEnd() {\n\t\tthis._webview.value?.windowDidDragEnd();\n\t}\n\n\tsetContextKeyService(contextKeyService: IContextKeyService) {\n\t\tthis._webview.value?.setContextKeyService(contextKeyService);\n\t}\n}\n\nfunction computeClippingRect(frameRect: DOMRectReadOnly, clipper: HTMLElement) {\n\tconst rootRect = clipper.getBoundingClientRect();\n\n\tconst top = Math.max(rootRect.top - frameRect.top, 0);\n\tconst right = Math.max(frameRect.width - (frameRect.right - rootRect.right), 0);\n\tconst bottom = Math.max(frameRect.height - (frameRect.bottom - rootRect.bottom), 0);\n\tconst left = Math.max(rootRect.left - frameRect.left, 0);\n\n\treturn { top, right, bottom, left };\n}\n"],
  "mappings": "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",
  "names": []
}
