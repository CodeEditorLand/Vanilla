{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webview/browser/webviewFindWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Event } from \"../../../../base/common/event.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextViewService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { SimpleFindWidget } from \"../../codeEditor/browser/find/simpleFindWidget.js\";\nimport { KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_FOCUSED } from \"./webview.js\";\n\nexport interface WebviewFindDelegate {\n\treadonly hasFindResult: Event<boolean>;\n\treadonly onDidStopFind: Event<void>;\n\treadonly checkImeCompletionState: boolean;\n\tfind(value: string, previous: boolean): void;\n\tupdateFind(value: string): void;\n\tstopFind(keepSelection?: boolean): void;\n\tfocus(): void;\n}\n\nexport class WebviewFindWidget extends SimpleFindWidget {\n\tprotected async _getResultCount(\n\t\tdataChanged?: boolean,\n\t): Promise<{ resultIndex: number; resultCount: number } | undefined> {\n\t\treturn undefined;\n\t}\n\n\tprotected readonly _findWidgetFocused: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _delegate: WebviewFindDelegate,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tshowCommonFindToggles: false,\n\t\t\t\tcheckImeCompletionState: _delegate.checkImeCompletionState,\n\t\t\t\tenableSash: true,\n\t\t\t},\n\t\t\tcontextViewService,\n\t\t\tcontextKeyService,\n\t\t\thoverService,\n\t\t\tkeybindingService,\n\t\t);\n\t\tthis._findWidgetFocused =\n\t\t\tKEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_FOCUSED.bindTo(\n\t\t\t\tcontextKeyService,\n\t\t\t);\n\n\t\tthis._register(\n\t\t\t_delegate.hasFindResult((hasResult) => {\n\t\t\t\tthis.updateButtons(hasResult);\n\t\t\t\tthis.focusFindBox();\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\t_delegate.onDidStopFind(() => {\n\t\t\t\tthis.updateButtons(false);\n\t\t\t}),\n\t\t);\n\t}\n\n\tpublic find(previous: boolean) {\n\t\tconst val = this.inputValue;\n\t\tif (val) {\n\t\t\tthis._delegate.find(val, previous);\n\t\t}\n\t}\n\n\tpublic override hide(animated = true) {\n\t\tsuper.hide(animated);\n\t\tthis._delegate.stopFind(true);\n\t\tthis._delegate.focus();\n\t}\n\n\tprotected _onInputChanged(): boolean {\n\t\tconst val = this.inputValue;\n\t\tif (val) {\n\t\t\tthis._delegate.updateFind(val);\n\t\t} else {\n\t\t\tthis._delegate.stopFind(false);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _onFocusTrackerFocus() {\n\t\tthis._findWidgetFocused.set(true);\n\t}\n\n\tprotected _onFocusTrackerBlur() {\n\t\tthis._findWidgetFocused.reset();\n\t}\n\n\tprotected _onFindInputFocusTrackerFocus() {}\n\n\tprotected _onFindInputFocusTrackerBlur() {}\n\n\tfindFirst() {}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMA;AAAA,EAEC;AAAA,OACM;AACP,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AACjC,SAAS,sDAAsD;AAYxD,IAAM,oBAAN,cAAgC,iBAAiB;AAAA,EASvD,YACkB,WACI,oBACD,mBACL,cACK,mBACnB;AACD;AAAA,MACC;AAAA,QACC,uBAAuB;AAAA,QACvB,yBAAyB,UAAU;AAAA,QACnC,YAAY;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAhBiB;AAiBjB,SAAK,qBACJ,+CAA+C;AAAA,MAC9C;AAAA,IACD;AAED,SAAK;AAAA,MACJ,UAAU,cAAc,CAAC,cAAc;AACtC,aAAK,cAAc,SAAS;AAC5B,aAAK,aAAa;AAAA,MACnB,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,UAAU,cAAc,MAAM;AAC7B,aAAK,cAAc,KAAK;AAAA,MACzB,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAtED,OA0BwD;AAAA;AAAA;AAAA,EACvD,MAAgB,gBACf,aACoE;AACpE,WAAO;AAAA,EACR;AAAA,EAEmB;AAAA,EAuCZ,KAAK,UAAmB;AAC9B,UAAM,MAAM,KAAK;AACjB,QAAI,KAAK;AACR,WAAK,UAAU,KAAK,KAAK,QAAQ;AAAA,IAClC;AAAA,EACD;AAAA,EAEgB,KAAK,WAAW,MAAM;AACrC,UAAM,KAAK,QAAQ;AACnB,SAAK,UAAU,SAAS,IAAI;AAC5B,SAAK,UAAU,MAAM;AAAA,EACtB;AAAA,EAEU,kBAA2B;AACpC,UAAM,MAAM,KAAK;AACjB,QAAI,KAAK;AACR,WAAK,UAAU,WAAW,GAAG;AAAA,IAC9B,OAAO;AACN,WAAK,UAAU,SAAS,KAAK;AAAA,IAC9B;AACA,WAAO;AAAA,EACR;AAAA,EAEU,uBAAuB;AAChC,SAAK,mBAAmB,IAAI,IAAI;AAAA,EACjC;AAAA,EAEU,sBAAsB;AAC/B,SAAK,mBAAmB,MAAM;AAAA,EAC/B;AAAA,EAEU,gCAAgC;AAAA,EAAC;AAAA,EAEjC,+BAA+B;AAAA,EAAC;AAAA,EAE1C,YAAY;AAAA,EAAC;AACd;AAlFa,oBAAN;AAAA,EAWJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAdU;",
  "names": []
}
