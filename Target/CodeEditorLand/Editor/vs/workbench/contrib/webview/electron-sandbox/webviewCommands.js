import*as e from"../../../../nls.js";import{getActiveWindow as r}from"../../../../base/browser/dom.js";import{Categories as t}from"../../../../platform/action/common/actionCommonCategories.js";import{Action2 as s}from"../../../../platform/actions/common/actions.js";import"../../../../platform/instantiation/common/instantiation.js";import{INativeHostService as l}from"../../../../platform/native/common/native.js";class b extends s{constructor(){super({id:"workbench.action.webview.openDeveloperTools",title:e.localize2("openToolsLabel","Open Webview Developer Tools"),category:t.Developer,metadata:{description:e.localize("openToolsDescription","Opens Developer Tools for active webviews")},f1:!0})}async run(o){const i=o.get(l);r().document.querySelectorAll("iframe.webview.ready").length&&(console.info(e.localize("iframeWebviewAlert","Using standard dev tools to debug iframe based webview")),i.openDevTools())}}export{b as OpenWebviewDeveloperToolsAction};
