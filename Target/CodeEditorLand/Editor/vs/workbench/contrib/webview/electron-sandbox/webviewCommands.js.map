{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webview/electron-sandbox/webviewCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from \"../../../../base/browser/dom.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport { Action2 } from \"../../../../platform/actions/common/actions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\n\nexport class OpenWebviewDeveloperToolsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.webview.openDeveloperTools\",\n\t\t\ttitle: nls.localize2(\n\t\t\t\t\"openToolsLabel\",\n\t\t\t\t\"Open Webview Developer Tools\",\n\t\t\t),\n\t\t\tcategory: Categories.Developer,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\"openToolsDescription\",\n\t\t\t\t\t\"Opens Developer Tools for active webviews\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\tconst iframeWebviewElements =\n\t\t\tgetActiveWindow().document.querySelectorAll(\"iframe.webview.ready\");\n\t\tif (iframeWebviewElements.length) {\n\t\t\tconsole.info(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"iframeWebviewAlert\",\n\t\t\t\t\t\"Using standard dev tools to debug iframe based webview\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tnativeHostService.openDevTools();\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,YAAY,SAAS;AACrB,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AAExB,SAAS,0BAA0B;AAE5B,MAAM,wCAAwC,QAAQ;AAAA,EAZ7D,OAY6D;AAAA;AAAA;AAAA,EAC5D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,IAAI;AAAA,QACV;AAAA,QACA;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,MACrB,UAAU;AAAA,QACT,aAAa,IAAI;AAAA,UAChB;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,UAAM,wBACL,gBAAgB,EAAE,SAAS,iBAAiB,sBAAsB;AACnE,QAAI,sBAAsB,QAAQ;AACjC,cAAQ;AAAA,QACP,IAAI;AAAA,UACH;AAAA,UACA;AAAA,QACD;AAAA,MACD;AACA,wBAAkB,aAAa;AAAA,IAChC;AAAA,EACD;AACD;",
  "names": []
}
