{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webview/electron-sandbox/webviewElement.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Delayer } from \"../../../../base/common/async.js\";\nimport type {\n\tVSBuffer,\n\tVSBufferReadableStream,\n} from \"../../../../base/common/buffer.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { consumeStream } from \"../../../../base/common/stream.js\";\nimport { ProxyChannel } from \"../../../../base/parts/ipc/common/ipc.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IMainProcessService } from \"../../../../platform/ipc/common/mainProcessService.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { IRemoteAuthorityResolverService } from \"../../../../platform/remote/common/remoteAuthorityResolver.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { ITunnelService } from \"../../../../platform/tunnel/common/tunnel.js\";\nimport type {\n\tFindInFrameOptions,\n\tIWebviewManagerService,\n} from \"../../../../platform/webview/common/webviewManagerService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport type { WebviewThemeDataProvider } from \"../browser/themeing.js\";\nimport type { WebviewInitInfo } from \"../browser/webview.js\";\nimport { WebviewElement } from \"../browser/webviewElement.js\";\nimport { WindowIgnoreMenuShortcutsManager } from \"./windowIgnoreMenuShortcutsManager.js\";\n\n/**\n * Webview backed by an iframe but that uses Electron APIs to power the webview.\n */\nexport class ElectronWebviewElement extends WebviewElement {\n\tprivate readonly _webviewKeyboardHandler: WindowIgnoreMenuShortcutsManager;\n\n\tprivate _findStarted = false;\n\tprivate _cachedHtmlContent: string | undefined;\n\n\tprivate readonly _webviewMainService: IWebviewManagerService;\n\tprivate readonly _iframeDelayer = this._register(new Delayer<void>(200));\n\n\tprotected override get platform() {\n\t\treturn \"electron\";\n\t}\n\n\tconstructor(\n\t\tinitInfo: WebviewInitInfo,\n\t\twebviewThemeDataProvider: WebviewThemeDataProvider,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@ITunnelService tunnelService: ITunnelService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ILogService logService: ILogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IMainProcessService mainProcessService: IMainProcessService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@INativeHostService private readonly _nativeHostService: INativeHostService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper(initInfo, webviewThemeDataProvider,\n\t\t\tconfigurationService, contextMenuService, notificationService, environmentService,\n\t\t\tfileService, logService, remoteAuthorityResolverService, telemetryService, tunnelService, instantiationService, accessibilityService);\n\n\t\tthis._webviewKeyboardHandler = new WindowIgnoreMenuShortcutsManager(configurationService, mainProcessService, _nativeHostService);\n\n\t\tthis._webviewMainService = ProxyChannel.toService<IWebviewManagerService>(mainProcessService.getChannel('webview'));\n\n\t\tif (initInfo.options.enableFindWidget) {\n\t\t\tthis._register(this.onDidHtmlChange((newContent) => {\n\t\t\t\tif (this._findStarted && this._cachedHtmlContent !== newContent) {\n\t\t\t\t\tthis.stopFind(false);\n\t\t\t\t\tthis._cachedHtmlContent = newContent;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._register(this._webviewMainService.onFoundInFrame((result) => {\n\t\t\t\tthis._hasFindResult.fire(result.matches > 0);\n\t\t\t}));\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// Make sure keyboard handler knows it closed (#71800)\n\t\tthis._webviewKeyboardHandler.didBlur();\n\n\t\tsuper.dispose();\n\t}\n\n\tprotected override webviewContentEndpoint(iframeId: string): string {\n\t\treturn `${Schemas.vscodeWebview}://${iframeId}`;\n\t}\n\n\tprotected override streamToBuffer(\n\t\tstream: VSBufferReadableStream,\n\t): Promise<ArrayBufferLike> {\n\t\t// Join buffers from stream without using the Node.js backing pool.\n\t\t// This lets us transfer the resulting buffer to the webview.\n\t\treturn consumeStream<VSBuffer, ArrayBufferLike>(\n\t\t\tstream,\n\t\t\t(buffers: readonly VSBuffer[]) => {\n\t\t\t\tconst totalLength = buffers.reduce(\n\t\t\t\t\t(prev, curr) => prev + curr.byteLength,\n\t\t\t\t\t0,\n\t\t\t\t);\n\t\t\t\tconst ret = new ArrayBuffer(totalLength);\n\t\t\t\tconst view = new Uint8Array(ret);\n\t\t\t\tlet offset = 0;\n\t\t\t\tfor (const element of buffers) {\n\t\t\t\t\tview.set(element.buffer, offset);\n\t\t\t\t\toffset += element.byteLength;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Webviews expose a stateful find API.\n\t * Successive calls to find will move forward or backward through onFindResults\n\t * depending on the supplied options.\n\t *\n\t * @param value The string to search for. Empty strings are ignored.\n\t */\n\tpublic override find(value: string, previous: boolean): void {\n\t\tif (!this.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._findStarted) {\n\t\t\t// continuing the find, so set findNext to false\n\t\t\tconst options: FindInFrameOptions = {\n\t\t\t\tforward: !previous,\n\t\t\t\tfindNext: false,\n\t\t\t\tmatchCase: false,\n\t\t\t};\n\t\t\tthis._webviewMainService.findInFrame(\n\t\t\t\t{ windowId: this._nativeHostService.windowId },\n\t\t\t\tthis.id,\n\t\t\t\tvalue,\n\t\t\t\toptions,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.updateFind(value);\n\t\t}\n\t}\n\n\tpublic override updateFind(value: string) {\n\t\tif (!value || !this.element) {\n\t\t\treturn;\n\t\t}\n\n\t\t// FindNext must be true for a first request\n\t\tconst options: FindInFrameOptions = {\n\t\t\tforward: true,\n\t\t\tfindNext: true,\n\t\t\tmatchCase: false,\n\t\t};\n\n\t\tthis._iframeDelayer.trigger(() => {\n\t\t\tthis._findStarted = true;\n\t\t\tthis._webviewMainService.findInFrame(\n\t\t\t\t{ windowId: this._nativeHostService.windowId },\n\t\t\t\tthis.id,\n\t\t\t\tvalue,\n\t\t\t\toptions,\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic override stopFind(keepSelection?: boolean): void {\n\t\tif (!this.element) {\n\t\t\treturn;\n\t\t}\n\t\tthis._iframeDelayer.cancel();\n\t\tthis._findStarted = false;\n\t\tthis._webviewMainService.stopFindInFrame(\n\t\t\t{ windowId: this._nativeHostService.windowId },\n\t\t\tthis.id,\n\t\t\t{\n\t\t\t\tkeepSelection,\n\t\t\t},\n\t\t);\n\t\tthis._onDidStopFind.fire();\n\t}\n\n\tprotected override handleFocusChange(isFocused: boolean): void {\n\t\tsuper.handleFocusChange(isFocused);\n\t\tif (isFocused) {\n\t\t\tthis._webviewKeyboardHandler.didFocus();\n\t\t} else {\n\t\t\tthis._webviewKeyboardHandler.didBlur();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
