var v=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var c=(m,i,t,o)=>{for(var r=o>1?void 0:o?u(i,t):i,d=m.length-1,e;d>=0;d--)(e=m[d])&&(r=(o?e(i,t,r):e(r))||r);return o&&r&&v(i,t,r),r},p=(m,i)=>(t,o)=>i(t,o,m);import{localize as l}from"../../../../../nls.js";import{EditorResolution as E}from"../../../../../platform/editor/common/editor.js";import{IStorageService as S}from"../../../../../platform/storage/common/storage.js";import{ITelemetryService as R}from"../../../../../platform/telemetry/common/telemetry.js";import{IThemeService as g}from"../../../../../platform/theme/common/themeService.js";import{BaseBinaryResourceEditor as h}from"../../../../browser/parts/editor/binaryEditor.js";import{isEditorInputWithOptions as y}from"../../../../common/editor.js";import{DiffEditorInput as T}from"../../../../common/editor/diffEditorInput.js";import{IEditorResolverService as O,ResolvedStatus as f}from"../../../../services/editor/common/editorResolverService.js";import{BINARY_FILE_EDITOR_ID as D,BINARY_TEXT_FILE_MODE as A}from"../../common/files.js";import{FileEditorInput as I}from"./fileEditorInput.js";let n=class extends h{constructor(t,o,r,d,e){super(n.ID,t,{openInternal:(s,a)=>this.openInternal(s,a)},o,r,e);this.editorResolverService=d}static ID=D;async openInternal(t,o){if(t instanceof I&&this.group.activeEditor){const r=this.group.activeEditor,d=r?.toUntyped();if(!d)return;let e=await this.editorResolverService.resolveEditor({...d,options:{...o,override:E.PICK}},this.group);if(e===f.NONE)e=void 0;else if(e===f.ABORT)return;if(y(e))for(const s of e.editor instanceof T?[e.editor.original,e.editor.modified]:[e.editor])s instanceof I&&(s.setForceOpenAsText(),s.setPreferredLanguageId(A));await this.group.replaceEditors([{editor:r,replacement:e?.editor??t,options:{...e?.options??o}}])}}getTitle(){return this.input?this.input.getName():l("binaryFileEditor","Binary File Viewer")}};n=c([p(1,R),p(2,g),p(3,O),p(4,S)],n);export{n as BinaryFileEditor};
