var v=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var f=(m,i,t,o)=>{for(var r=o>1?void 0:o?l(i,t):i,d=m.length-1,e;d>=0;d--)(e=m[d])&&(r=(o?e(i,t,r):e(r))||r);return o&&r&&v(i,t,r),r},p=(m,i)=>(t,o)=>i(t,o,m);import{localize as u}from"../../../../../../vs/nls.js";import{EditorResolution as E}from"../../../../../../vs/platform/editor/common/editor.js";import{IStorageService as R}from"../../../../../../vs/platform/storage/common/storage.js";import{ITelemetryService as S}from"../../../../../../vs/platform/telemetry/common/telemetry.js";import{IThemeService as g}from"../../../../../../vs/platform/theme/common/themeService.js";import{BaseBinaryResourceEditor as h}from"../../../../../../vs/workbench/browser/parts/editor/binaryEditor.js";import{isEditorInputWithOptions as T}from"../../../../../../vs/workbench/common/editor.js";import{DiffEditorInput as O}from"../../../../../../vs/workbench/common/editor/diffEditorInput.js";import"../../../../../../vs/workbench/common/editor/editorInput.js";import{FileEditorInput as a}from"../../../../../../vs/workbench/contrib/files/browser/editors/fileEditorInput.js";import{BINARY_FILE_EDITOR_ID as y,BINARY_TEXT_FILE_MODE as D}from"../../../../../../vs/workbench/contrib/files/common/files.js";import"../../../../../../vs/workbench/services/editor/common/editorGroupsService.js";import{IEditorResolverService as A,ResolvedStatus as c}from"../../../../../../vs/workbench/services/editor/common/editorResolverService.js";let n=class extends h{constructor(t,o,r,d,e){super(n.ID,t,{openInternal:(s,I)=>this.openInternal(s,I)},o,r,e);this.editorResolverService=d}static ID=y;async openInternal(t,o){if(t instanceof a&&this.group.activeEditor){const r=this.group.activeEditor,d=r?.toUntyped();if(!d)return;let e=await this.editorResolverService.resolveEditor({...d,options:{...o,override:E.PICK}},this.group);if(e===c.NONE)e=void 0;else if(e===c.ABORT)return;if(T(e))for(const s of e.editor instanceof O?[e.editor.original,e.editor.modified]:[e.editor])s instanceof a&&(s.setForceOpenAsText(),s.setPreferredLanguageId(D));await this.group.replaceEditors([{editor:r,replacement:e?.editor??t,options:{...e?.options??o}}])}}getTitle(){return this.input?this.input.getName():u("binaryFileEditor","Binary File Viewer")}};n=f([p(1,S),p(2,g),p(3,A),p(4,R)],n);export{n as BinaryFileEditor};
