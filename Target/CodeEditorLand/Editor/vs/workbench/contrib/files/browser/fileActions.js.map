{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/fileActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { isWindows, OperatingSystem, OS } from '../../../../base/common/platform.js';\nimport { extname, basename, isAbsolute } from '../../../../base/common/path.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { dispose, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { VIEWLET_ID, IFilesConfiguration, VIEW_ID, UndoConfirmLevel } from '../common/files.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { IQuickInputService, ItemActivation } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { REVEAL_IN_EXPLORER_COMMAND_ID, SAVE_ALL_IN_GROUP_COMMAND_ID, NEW_UNTITLED_FILE_COMMAND_ID } from './fileConstants.js';\nimport { ITextModelService, ITextModelContentProvider } from '../../../../editor/common/services/resolverService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ICommandService, CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IDialogService, IConfirmationResult, getFileNamesMessage } from '../../../../platform/dialogs/common/dialogs.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { Constants } from '../../../../base/common/uint.js';\nimport { CLOSE_EDITORS_AND_GROUP_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { ExplorerItem, NewExplorerItem } from '../common/explorerModel.js';\nimport { getErrorMessage } from '../../../../base/common/errors.js';\nimport { triggerUpload } from '../../../../base/browser/dom.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { IWorkingCopyService } from '../../../services/workingCopy/common/workingCopyService.js';\nimport { IWorkingCopy } from '../../../services/workingCopy/common/workingCopy.js';\nimport { timeout } from '../../../../base/common/async.js';\nimport { IWorkingCopyFileService } from '../../../services/workingCopy/common/workingCopyFileService.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { ViewContainerLocation } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { trim, rtrim } from '../../../../base/common/strings.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { ResourceFileEdit } from '../../../../editor/browser/services/bulkEditService.js';\nimport { IExplorerService } from './files.js';\nimport { BrowserFileUpload, FileDownload } from './fileImportExport.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nimport { IRemoteAgentService } from '../../../services/remote/common/remoteAgentService.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { Action2 } from '../../../../platform/actions/common/actions.js';\nimport { ActiveEditorCanToggleReadonlyContext, ActiveEditorContext, EmptyWorkspaceSupportContext } from '../../../common/contextkeys.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyChord, KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\nimport { VSBuffer } from '../../../../base/common/buffer.js';\n\nexport const NEW_FILE_COMMAND_ID = 'explorer.newFile';\nexport const NEW_FILE_LABEL = nls.localize2('newFile', \"New File...\");\nexport const NEW_FOLDER_COMMAND_ID = 'explorer.newFolder';\nexport const NEW_FOLDER_LABEL = nls.localize2('newFolder', \"New Folder...\");\nexport const TRIGGER_RENAME_LABEL = nls.localize('rename', \"Rename...\");\nexport const MOVE_FILE_TO_TRASH_LABEL = nls.localize('delete', \"Delete\");\nexport const COPY_FILE_LABEL = nls.localize('copyFile', \"Copy\");\nexport const PASTE_FILE_LABEL = nls.localize('pasteFile', \"Paste\");\nexport const FileCopiedContext = new RawContextKey<boolean>('fileCopied', false);\nexport const DOWNLOAD_COMMAND_ID = 'explorer.download';\nexport const DOWNLOAD_LABEL = nls.localize('download', \"Download...\");\nexport const UPLOAD_COMMAND_ID = 'explorer.upload';\nexport const UPLOAD_LABEL = nls.localize('upload', \"Upload...\");\nconst CONFIRM_DELETE_SETTING_KEY = 'explorer.confirmDelete';\nconst MAX_UNDO_FILE_SIZE = 5000000; // 5mb\n\nfunction onError(notificationService: INotificationService, error: any): void {\n\tif (error.message === 'string') {\n\t\terror = error.message;\n\t}\n\n\tnotificationService.error(toErrorMessage(error, false));\n}\n\nasync function refreshIfSeparator(value: string, explorerService: IExplorerService): Promise<void> {\n\tif (value && ((value.indexOf('/') >= 0) || (value.indexOf('\\\\') >= 0))) {\n\t\t// New input contains separator, multiple resources will get created workaround for #68204\n\t\tawait explorerService.refresh();\n\t}\n}\n\nasync function deleteFiles(explorerService: IExplorerService, workingCopyFileService: IWorkingCopyFileService, dialogService: IDialogService, configurationService: IConfigurationService, elements: ExplorerItem[], useTrash: boolean, skipConfirm = false, ignoreIfNotExists = false): Promise<void> {\n\tlet primaryButton: string;\n\tif (useTrash) {\n\t\tprimaryButton = isWindows ? nls.localize('deleteButtonLabelRecycleBin', \"&&Move to Recycle Bin\") : nls.localize({ key: 'deleteButtonLabelTrash', comment: ['&& denotes a mnemonic'] }, \"&&Move to Trash\");\n\t} else {\n\t\tprimaryButton = nls.localize({ key: 'deleteButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Delete\");\n\t}\n\n\t// Handle dirty\n\tconst distinctElements = resources.distinctParents(elements, e => e.resource);\n\tconst dirtyWorkingCopies = new Set<IWorkingCopy>();\n\tfor (const distinctElement of distinctElements) {\n\t\tfor (const dirtyWorkingCopy of workingCopyFileService.getDirty(distinctElement.resource)) {\n\t\t\tdirtyWorkingCopies.add(dirtyWorkingCopy);\n\t\t}\n\t}\n\tlet confirmed = true;\n\tif (dirtyWorkingCopies.size) {\n\t\tlet message: string;\n\t\tif (distinctElements.length > 1) {\n\t\t\tmessage = nls.localize('dirtyMessageFilesDelete', \"You are deleting files with unsaved changes. Do you want to continue?\");\n\t\t} else if (distinctElements[0].isDirectory) {\n\t\t\tif (dirtyWorkingCopies.size === 1) {\n\t\t\t\tmessage = nls.localize('dirtyMessageFolderOneDelete', \"You are deleting a folder {0} with unsaved changes in 1 file. Do you want to continue?\", distinctElements[0].name);\n\t\t\t} else {\n\t\t\t\tmessage = nls.localize('dirtyMessageFolderDelete', \"You are deleting a folder {0} with unsaved changes in {1} files. Do you want to continue?\", distinctElements[0].name, dirtyWorkingCopies.size);\n\t\t\t}\n\t\t} else {\n\t\t\tmessage = nls.localize('dirtyMessageFileDelete', \"You are deleting {0} with unsaved changes. Do you want to continue?\", distinctElements[0].name);\n\t\t}\n\n\t\tconst response = await dialogService.confirm({\n\t\t\ttype: 'warning',\n\t\t\tmessage,\n\t\t\tdetail: nls.localize('dirtyWarning', \"Your changes will be lost if you don't save them.\"),\n\t\t\tprimaryButton\n\t\t});\n\n\t\tif (!response.confirmed) {\n\t\t\tconfirmed = false;\n\t\t} else {\n\t\t\tskipConfirm = true;\n\t\t}\n\t}\n\n\t// Check if file is dirty in editor and save it to avoid data loss\n\tif (!confirmed) {\n\t\treturn;\n\t}\n\n\tlet confirmation: IConfirmationResult;\n\t// We do not support undo of folders, so in that case the delete action is irreversible\n\tconst deleteDetail = distinctElements.some(e => e.isDirectory) ? nls.localize('irreversible', \"This action is irreversible!\") :\n\t\tdistinctElements.length > 1 ? nls.localize('restorePlural', \"You can restore these files using the Undo command.\") : nls.localize('restore', \"You can restore this file using the Undo command.\");\n\n\t// Check if we need to ask for confirmation at all\n\tif (skipConfirm || (useTrash && configurationService.getValue<boolean>(CONFIRM_DELETE_SETTING_KEY) === false)) {\n\t\tconfirmation = { confirmed: true };\n\t}\n\n\t// Confirm for moving to trash\n\telse if (useTrash) {\n\t\tlet { message, detail } = getMoveToTrashMessage(distinctElements);\n\t\tdetail += detail ? '\\n' : '';\n\t\tif (isWindows) {\n\t\t\tdetail += distinctElements.length > 1 ? nls.localize('undoBinFiles', \"You can restore these files from the Recycle Bin.\") : nls.localize('undoBin', \"You can restore this file from the Recycle Bin.\");\n\t\t} else {\n\t\t\tdetail += distinctElements.length > 1 ? nls.localize('undoTrashFiles', \"You can restore these files from the Trash.\") : nls.localize('undoTrash', \"You can restore this file from the Trash.\");\n\t\t}\n\n\t\tconfirmation = await dialogService.confirm({\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tprimaryButton,\n\t\t\tcheckbox: {\n\t\t\t\tlabel: nls.localize('doNotAskAgain', \"Do not ask me again\")\n\t\t\t}\n\t\t});\n\t}\n\n\t// Confirm for deleting permanently\n\telse {\n\t\tlet { message, detail } = getDeleteMessage(distinctElements);\n\t\tdetail += detail ? '\\n' : '';\n\t\tdetail += deleteDetail;\n\t\tconfirmation = await dialogService.confirm({\n\t\t\ttype: 'warning',\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tprimaryButton\n\t\t});\n\t}\n\n\t// Check for confirmation checkbox\n\tif (confirmation.confirmed && confirmation.checkboxChecked === true) {\n\t\tawait configurationService.updateValue(CONFIRM_DELETE_SETTING_KEY, false);\n\t}\n\n\t// Check for confirmation\n\tif (!confirmation.confirmed) {\n\t\treturn;\n\t}\n\n\t// Call function\n\ttry {\n\t\tconst resourceFileEdits = distinctElements.map(e => new ResourceFileEdit(e.resource, undefined, { recursive: true, folder: e.isDirectory, ignoreIfNotExists, skipTrashBin: !useTrash, maxSize: MAX_UNDO_FILE_SIZE }));\n\t\tconst options = {\n\t\t\tundoLabel: distinctElements.length > 1 ? nls.localize({ key: 'deleteBulkEdit', comment: ['Placeholder will be replaced by the number of files deleted'] }, \"Delete {0} files\", distinctElements.length) : nls.localize({ key: 'deleteFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file deleted'] }, \"Delete {0}\", distinctElements[0].name),\n\t\t\tprogressLabel: distinctElements.length > 1 ? nls.localize({ key: 'deletingBulkEdit', comment: ['Placeholder will be replaced by the number of files deleted'] }, \"Deleting {0} files\", distinctElements.length) : nls.localize({ key: 'deletingFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file deleted'] }, \"Deleting {0}\", distinctElements[0].name),\n\t\t};\n\t\tawait explorerService.applyBulkEdit(resourceFileEdits, options);\n\t} catch (error) {\n\n\t\t// Handle error to delete file(s) from a modal confirmation dialog\n\t\tlet errorMessage: string;\n\t\tlet detailMessage: string | undefined;\n\t\tlet primaryButton: string;\n\t\tif (useTrash) {\n\t\t\terrorMessage = isWindows ? nls.localize('binFailed', \"Failed to delete using the Recycle Bin. Do you want to permanently delete instead?\") : nls.localize('trashFailed', \"Failed to delete using the Trash. Do you want to permanently delete instead?\");\n\t\t\tdetailMessage = deleteDetail;\n\t\t\tprimaryButton = nls.localize({ key: 'deletePermanentlyButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Delete Permanently\");\n\t\t} else {\n\t\t\terrorMessage = toErrorMessage(error, false);\n\t\t\tprimaryButton = nls.localize({ key: 'retryButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Retry\");\n\t\t}\n\n\t\tconst res = await dialogService.confirm({\n\t\t\ttype: 'warning',\n\t\t\tmessage: errorMessage,\n\t\t\tdetail: detailMessage,\n\t\t\tprimaryButton\n\t\t});\n\n\t\tif (res.confirmed) {\n\t\t\tif (useTrash) {\n\t\t\t\tuseTrash = false; // Delete Permanently\n\t\t\t}\n\n\t\t\tskipConfirm = true;\n\t\t\tignoreIfNotExists = true;\n\n\t\t\treturn deleteFiles(explorerService, workingCopyFileService, dialogService, configurationService, elements, useTrash, skipConfirm, ignoreIfNotExists);\n\t\t}\n\t}\n}\n\nfunction getMoveToTrashMessage(distinctElements: ExplorerItem[]): { message: string; detail: string } {\n\tif (containsBothDirectoryAndFile(distinctElements)) {\n\t\treturn {\n\t\t\tmessage: nls.localize('confirmMoveTrashMessageFilesAndDirectories', \"Are you sure you want to delete the following {0} files/directories and their contents?\", distinctElements.length),\n\t\t\tdetail: getFileNamesMessage(distinctElements.map(e => e.resource))\n\t\t};\n\t}\n\n\tif (distinctElements.length > 1) {\n\t\tif (distinctElements[0].isDirectory) {\n\t\t\treturn {\n\t\t\t\tmessage: nls.localize('confirmMoveTrashMessageMultipleDirectories', \"Are you sure you want to delete the following {0} directories and their contents?\", distinctElements.length),\n\t\t\t\tdetail: getFileNamesMessage(distinctElements.map(e => e.resource))\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tmessage: nls.localize('confirmMoveTrashMessageMultiple', \"Are you sure you want to delete the following {0} files?\", distinctElements.length),\n\t\t\tdetail: getFileNamesMessage(distinctElements.map(e => e.resource))\n\t\t};\n\t}\n\n\tif (distinctElements[0].isDirectory && !distinctElements[0].isSymbolicLink) {\n\t\treturn { message: nls.localize('confirmMoveTrashMessageFolder', \"Are you sure you want to delete '{0}' and its contents?\", distinctElements[0].name), detail: '' };\n\t}\n\n\treturn { message: nls.localize('confirmMoveTrashMessageFile', \"Are you sure you want to delete '{0}'?\", distinctElements[0].name), detail: '' };\n}\n\nfunction getDeleteMessage(distinctElements: ExplorerItem[]): { message: string; detail: string } {\n\tif (containsBothDirectoryAndFile(distinctElements)) {\n\t\treturn {\n\t\t\tmessage: nls.localize('confirmDeleteMessageFilesAndDirectories', \"Are you sure you want to permanently delete the following {0} files/directories and their contents?\", distinctElements.length),\n\t\t\tdetail: getFileNamesMessage(distinctElements.map(e => e.resource))\n\t\t};\n\t}\n\n\tif (distinctElements.length > 1) {\n\t\tif (distinctElements[0].isDirectory) {\n\t\t\treturn {\n\t\t\t\tmessage: nls.localize('confirmDeleteMessageMultipleDirectories', \"Are you sure you want to permanently delete the following {0} directories and their contents?\", distinctElements.length),\n\t\t\t\tdetail: getFileNamesMessage(distinctElements.map(e => e.resource))\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tmessage: nls.localize('confirmDeleteMessageMultiple', \"Are you sure you want to permanently delete the following {0} files?\", distinctElements.length),\n\t\t\tdetail: getFileNamesMessage(distinctElements.map(e => e.resource))\n\t\t};\n\t}\n\n\tif (distinctElements[0].isDirectory) {\n\t\treturn { message: nls.localize('confirmDeleteMessageFolder', \"Are you sure you want to permanently delete '{0}' and its contents?\", distinctElements[0].name), detail: '' };\n\t}\n\n\treturn { message: nls.localize('confirmDeleteMessageFile', \"Are you sure you want to permanently delete '{0}'?\", distinctElements[0].name), detail: '' };\n}\n\nfunction containsBothDirectoryAndFile(distinctElements: ExplorerItem[]): boolean {\n\tconst directory = distinctElements.find(element => element.isDirectory);\n\tconst file = distinctElements.find(element => !element.isDirectory);\n\n\treturn !!directory && !!file;\n}\n\n\nexport async function findValidPasteFileTarget(\n\texplorerService: IExplorerService,\n\tfileService: IFileService,\n\tdialogService: IDialogService,\n\ttargetFolder: ExplorerItem,\n\tfileToPaste: { resource: URI | string; isDirectory?: boolean; allowOverwrite: boolean },\n\tincrementalNaming: 'simple' | 'smart' | 'disabled'\n): Promise<URI | undefined> {\n\n\tlet name = typeof fileToPaste.resource === 'string' ? fileToPaste.resource : resources.basenameOrAuthority(fileToPaste.resource);\n\tlet candidate = resources.joinPath(targetFolder.resource, name);\n\n\t// In the disabled case we must ask if it's ok to overwrite the file if it exists\n\tif (incrementalNaming === 'disabled') {\n\t\tconst canOverwrite = await askForOverwrite(fileService, dialogService, candidate);\n\t\tif (!canOverwrite) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\twhile (true && !fileToPaste.allowOverwrite) {\n\t\tif (!explorerService.findClosest(candidate)) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif (incrementalNaming !== 'disabled') {\n\t\t\tname = incrementFileName(name, !!fileToPaste.isDirectory, incrementalNaming);\n\t\t}\n\t\tcandidate = resources.joinPath(targetFolder.resource, name);\n\t}\n\n\treturn candidate;\n}\n\nexport function incrementFileName(name: string, isFolder: boolean, incrementalNaming: 'simple' | 'smart'): string {\n\tif (incrementalNaming === 'simple') {\n\t\tlet namePrefix = name;\n\t\tlet extSuffix = '';\n\t\tif (!isFolder) {\n\t\t\textSuffix = extname(name);\n\t\t\tnamePrefix = basename(name, extSuffix);\n\t\t}\n\n\t\t// name copy 5(.txt) => name copy 6(.txt)\n\t\t// name copy(.txt) => name copy 2(.txt)\n\t\tconst suffixRegex = /^(.+ copy)( \\d+)?$/;\n\t\tif (suffixRegex.test(namePrefix)) {\n\t\t\treturn namePrefix.replace(suffixRegex, (match, g1?, g2?) => {\n\t\t\t\tconst number = (g2 ? parseInt(g2) : 1);\n\t\t\t\treturn number === 0\n\t\t\t\t\t? `${g1}`\n\t\t\t\t\t: (number < Constants.MAX_SAFE_SMALL_INTEGER\n\t\t\t\t\t\t? `${g1} ${number + 1}`\n\t\t\t\t\t\t: `${g1}${g2} copy`);\n\t\t\t}) + extSuffix;\n\t\t}\n\n\t\t// name(.txt) => name copy(.txt)\n\t\treturn `${namePrefix} copy${extSuffix}`;\n\t}\n\n\tconst separators = '[\\\\.\\\\-_]';\n\tconst maxNumber = Constants.MAX_SAFE_SMALL_INTEGER;\n\n\t// file.1.txt=>file.2.txt\n\tconst suffixFileRegex = RegExp('(.*' + separators + ')(\\\\d+)(\\\\..*)$');\n\tif (!isFolder && name.match(suffixFileRegex)) {\n\t\treturn name.replace(suffixFileRegex, (match, g1?, g2?, g3?) => {\n\t\t\tconst number = parseInt(g2);\n\t\t\treturn number < maxNumber\n\t\t\t\t? g1 + String(number + 1).padStart(g2.length, '0') + g3\n\t\t\t\t: `${g1}${g2}.1${g3}`;\n\t\t});\n\t}\n\n\t// 1.file.txt=>2.file.txt\n\tconst prefixFileRegex = RegExp('(\\\\d+)(' + separators + '.*)(\\\\..*)$');\n\tif (!isFolder && name.match(prefixFileRegex)) {\n\t\treturn name.replace(prefixFileRegex, (match, g1?, g2?, g3?) => {\n\t\t\tconst number = parseInt(g1);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(g1.length, '0') + g2 + g3\n\t\t\t\t: `${g1}${g2}.1${g3}`;\n\t\t});\n\t}\n\n\t// 1.txt=>2.txt\n\tconst prefixFileNoNameRegex = RegExp('(\\\\d+)(\\\\..*)$');\n\tif (!isFolder && name.match(prefixFileNoNameRegex)) {\n\t\treturn name.replace(prefixFileNoNameRegex, (match, g1?, g2?) => {\n\t\t\tconst number = parseInt(g1);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(g1.length, '0') + g2\n\t\t\t\t: `${g1}.1${g2}`;\n\t\t});\n\t}\n\n\t// file.txt=>file.1.txt\n\tconst lastIndexOfDot = name.lastIndexOf('.');\n\tif (!isFolder && lastIndexOfDot >= 0) {\n\t\treturn `${name.substr(0, lastIndexOfDot)}.1${name.substr(lastIndexOfDot)}`;\n\t}\n\n\t// 123 => 124\n\tconst noNameNoExtensionRegex = RegExp('(\\\\d+)$');\n\tif (!isFolder && lastIndexOfDot === -1 && name.match(noNameNoExtensionRegex)) {\n\t\treturn name.replace(noNameNoExtensionRegex, (match, g1?) => {\n\t\t\tconst number = parseInt(g1);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(g1.length, '0')\n\t\t\t\t: `${g1}.1`;\n\t\t});\n\t}\n\n\t// file => file1\n\t// file1 => file2\n\tconst noExtensionRegex = RegExp('(.*)(\\\\d*)$');\n\tif (!isFolder && lastIndexOfDot === -1 && name.match(noExtensionRegex)) {\n\t\treturn name.replace(noExtensionRegex, (match, g1?, g2?) => {\n\t\t\tlet number = parseInt(g2);\n\t\t\tif (isNaN(number)) {\n\t\t\t\tnumber = 0;\n\t\t\t}\n\t\t\treturn number < maxNumber\n\t\t\t\t? g1 + String(number + 1).padStart(g2.length, '0')\n\t\t\t\t: `${g1}${g2}.1`;\n\t\t});\n\t}\n\n\t// folder.1=>folder.2\n\tif (isFolder && name.match(/(\\d+)$/)) {\n\t\treturn name.replace(/(\\d+)$/, (match, ...groups) => {\n\t\t\tconst number = parseInt(groups[0]);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(groups[0].length, '0')\n\t\t\t\t: `${groups[0]}.1`;\n\t\t});\n\t}\n\n\t// 1.folder=>2.folder\n\tif (isFolder && name.match(/^(\\d+)/)) {\n\t\treturn name.replace(/^(\\d+)(.*)$/, (match, ...groups) => {\n\t\t\tconst number = parseInt(groups[0]);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(groups[0].length, '0') + groups[1]\n\t\t\t\t: `${groups[0]}${groups[1]}.1`;\n\t\t});\n\t}\n\n\t// file/folder=>file.1/folder.1\n\treturn `${name}.1`;\n}\n\n/**\n * Checks to see if the resource already exists, if so prompts the user if they would be ok with it being overwritten\n * @param fileService The file service\n * @param dialogService The dialog service\n * @param targetResource The resource to be overwritten\n * @return A boolean indicating if the user is ok with resource being overwritten, if the resource does not exist it returns true.\n */\nasync function askForOverwrite(fileService: IFileService, dialogService: IDialogService, targetResource: URI): Promise<boolean> {\n\tconst exists = await fileService.exists(targetResource);\n\tif (!exists) {\n\t\treturn true;\n\t}\n\t// Ask for overwrite confirmation\n\tconst { confirmed } = await dialogService.confirm({\n\t\ttype: Severity.Warning,\n\t\tmessage: nls.localize('confirmOverwrite', \"A file or folder with the name '{0}' already exists in the destination folder. Do you want to replace it?\", basename(targetResource.path)),\n\t\tprimaryButton: nls.localize('replaceButtonLabel', \"&&Replace\")\n\t});\n\treturn confirmed;\n}\n\n// Global Compare with\nexport class GlobalCompareResourcesAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.files.action.compareFileWith';\n\tstatic readonly LABEL = nls.localize2('globalCompareFile', \"Compare Active File With...\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GlobalCompareResourcesAction.ID,\n\t\t\ttitle: GlobalCompareResourcesAction.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tprecondition: ActiveEditorContext,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('compareFileWithMeta', \"Opens a picker to select a file to diff with the active editor.\")\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst activeInput = editorService.activeEditor;\n\t\tconst activeResource = EditorResourceAccessor.getOriginalUri(activeInput);\n\t\tif (activeResource && textModelService.canHandleResource(activeResource)) {\n\t\t\tconst picks = await quickInputService.quickAccess.pick('', { itemActivation: ItemActivation.SECOND });\n\t\t\tif (picks?.length === 1) {\n\t\t\t\tconst resource = (picks[0] as unknown as { resource: unknown }).resource;\n\t\t\t\tif (URI.isUri(resource) && textModelService.canHandleResource(resource)) {\n\t\t\t\t\teditorService.openEditor({\n\t\t\t\t\t\toriginal: { resource: activeResource },\n\t\t\t\t\t\tmodified: { resource: resource },\n\t\t\t\t\t\toptions: { pinned: true }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class ToggleAutoSaveAction extends Action2 {\n\tstatic readonly ID = 'workbench.action.toggleAutoSave';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleAutoSaveAction.ID,\n\t\t\ttitle: nls.localize2('toggleAutoSave', \"Toggle Auto Save\"),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tmetadata: { description: nls.localize2('toggleAutoSaveDescription', \"Toggle the ability to save files automatically after typing\") }\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst filesConfigurationService = accessor.get(IFilesConfigurationService);\n\t\treturn filesConfigurationService.toggleAutoSave();\n\t}\n}\n\nabstract class BaseSaveAllAction extends Action {\n\tprivate lastDirtyState: boolean;\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@INotificationService private notificationService: INotificationService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService\n\t) {\n\t\tsuper(id, label);\n\n\t\tthis.lastDirtyState = this.workingCopyService.hasDirty;\n\t\tthis.enabled = this.lastDirtyState;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected abstract doRun(context: unknown): Promise<void>;\n\n\tprivate registerListeners(): void {\n\n\t\t// update enablement based on working copy changes\n\t\tthis._register(this.workingCopyService.onDidChangeDirty(workingCopy => this.updateEnablement(workingCopy)));\n\t}\n\n\tprivate updateEnablement(workingCopy: IWorkingCopy): void {\n\t\tconst hasDirty = workingCopy.isDirty() || this.workingCopyService.hasDirty;\n\t\tif (this.lastDirtyState !== hasDirty) {\n\t\t\tthis.enabled = hasDirty;\n\t\t\tthis.lastDirtyState = this.enabled;\n\t\t}\n\t}\n\n\toverride async run(context?: unknown): Promise<void> {\n\t\ttry {\n\t\t\tawait this.doRun(context);\n\t\t} catch (error) {\n\t\t\tonError(this.notificationService, error);\n\t\t}\n\t}\n}\n\nexport class SaveAllInGroupAction extends BaseSaveAllAction {\n\n\tstatic readonly ID = 'workbench.files.action.saveAllInGroup';\n\tstatic readonly LABEL = nls.localize('saveAllInGroup', \"Save All in Group\");\n\n\toverride get class(): string {\n\t\treturn 'explorer-action ' + ThemeIcon.asClassName(Codicon.saveAll);\n\t}\n\n\tprotected doRun(context: unknown): Promise<void> {\n\t\treturn this.commandService.executeCommand(SAVE_ALL_IN_GROUP_COMMAND_ID, {}, context);\n\t}\n}\n\nexport class CloseGroupAction extends Action {\n\n\tstatic readonly ID = 'workbench.files.action.closeGroup';\n\tstatic readonly LABEL = nls.localize('closeGroup', \"Close Group\");\n\n\tconstructor(id: string, label: string, @ICommandService private readonly commandService: ICommandService) {\n\t\tsuper(id, label, ThemeIcon.asClassName(Codicon.closeAll));\n\t}\n\n\toverride run(context?: unknown): Promise<void> {\n\t\treturn this.commandService.executeCommand(CLOSE_EDITORS_AND_GROUP_COMMAND_ID, {}, context);\n\t}\n}\n\nexport class FocusFilesExplorer extends Action2 {\n\n\tstatic readonly ID = 'workbench.files.action.focusFilesExplorer';\n\tstatic readonly LABEL = nls.localize2('focusFilesExplorer', \"Focus on Files Explorer\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FocusFilesExplorer.ID,\n\t\t\ttitle: FocusFilesExplorer.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('focusFilesExplorerMetadata', \"Moves focus to the file explorer view container.\")\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tawait paneCompositeService.openPaneComposite(VIEWLET_ID, ViewContainerLocation.Sidebar, true);\n\t}\n}\n\nexport class ShowActiveFileInExplorer extends Action2 {\n\n\tstatic readonly ID = 'workbench.files.action.showActiveFileInExplorer';\n\tstatic readonly LABEL = nls.localize2('showInExplorer', \"Reveal Active File in Explorer View\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowActiveFileInExplorer.ID,\n\t\t\ttitle: ShowActiveFileInExplorer.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('showInExplorerMetadata', \"Reveals and selects the active file within the explorer view.\")\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tif (resource) {\n\t\t\tcommandService.executeCommand(REVEAL_IN_EXPLORER_COMMAND_ID, resource);\n\t\t}\n\t}\n}\n\nexport class OpenActiveFileInEmptyWorkspace extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.files.showOpenedFileInNewWindow';\n\tstatic readonly LABEL = nls.localize2('openFileInEmptyWorkspace', \"Open Active File in New Empty Workspace\");\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: OpenActiveFileInEmptyWorkspace.ID,\n\t\t\ttitle: OpenActiveFileInEmptyWorkspace.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tprecondition: EmptyWorkspaceSupportContext,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('openFileInEmptyWorkspaceMetadata', \"Opens the active file in a new window with no folders open.\")\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\tconst fileResource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tif (fileResource) {\n\t\t\tif (fileService.hasProvider(fileResource)) {\n\t\t\t\thostService.openWindow([{ fileUri: fileResource }], { forceNewWindow: true });\n\t\t\t} else {\n\t\t\t\tdialogService.error(nls.localize('openFileToShowInNewWindow.unsupportedschema', \"The active editor must contain an openable resource.\"));\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function validateFileName(pathService: IPathService, item: ExplorerItem, name: string, os: OperatingSystem): { content: string; severity: Severity } | null {\n\t// Produce a well formed file name\n\tname = getWellFormedFileName(name);\n\n\t// Name not provided\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn {\n\t\t\tcontent: nls.localize('emptyFileNameError', \"A file or folder name must be provided.\"),\n\t\t\tseverity: Severity.Error\n\t\t};\n\t}\n\n\t// Relative paths only\n\tif (name[0] === '/' || name[0] === '\\\\') {\n\t\treturn {\n\t\t\tcontent: nls.localize('fileNameStartsWithSlashError', \"A file or folder name cannot start with a slash.\"),\n\t\t\tseverity: Severity.Error\n\t\t};\n\t}\n\n\tconst names = coalesce(name.split(/[\\\\/]/));\n\tconst parent = item.parent;\n\n\tif (name !== item.name) {\n\t\t// Do not allow to overwrite existing file\n\t\tconst child = parent?.getChild(name);\n\t\tif (child && child !== item) {\n\t\t\treturn {\n\t\t\t\tcontent: nls.localize('fileNameExistsError', \"A file or folder **{0}** already exists at this location. Please choose a different name.\", name),\n\t\t\t\tseverity: Severity.Error\n\t\t\t};\n\t\t}\n\t}\n\n\t// Check for invalid file name.\n\tif (names.some(folderName => !pathService.hasValidBasename(item.resource, os, folderName))) {\n\t\t// Escape * characters\n\t\tconst escapedName = name.replace(/\\*/g, '\\\\*'); // CodeQL [SM02383] This only processes filenames which are enforced against having backslashes in them farther up in the stack.\n\t\treturn {\n\t\t\tcontent: nls.localize('invalidFileNameError', \"The name **{0}** is not valid as a file or folder name. Please choose a different name.\", trimLongName(escapedName)),\n\t\t\tseverity: Severity.Error\n\t\t};\n\t}\n\n\tif (names.some(name => /^\\s|\\s$/.test(name))) {\n\t\treturn {\n\t\t\tcontent: nls.localize('fileNameWhitespaceWarning', \"Leading or trailing whitespace detected in file or folder name.\"),\n\t\t\tseverity: Severity.Warning\n\t\t};\n\t}\n\n\treturn null;\n}\n\nfunction trimLongName(name: string): string {\n\tif (name?.length > 255) {\n\t\treturn `${name.substr(0, 255)}...`;\n\t}\n\n\treturn name;\n}\n\nfunction getWellFormedFileName(filename: string): string {\n\tif (!filename) {\n\t\treturn filename;\n\t}\n\n\t// Trim tabs\n\tfilename = trim(filename, '\\t');\n\n\t// Remove trailing slashes\n\tfilename = rtrim(filename, '/');\n\tfilename = rtrim(filename, '\\\\');\n\n\treturn filename;\n}\n\nexport class CompareNewUntitledTextFilesAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.files.action.compareNewUntitledTextFiles';\n\tstatic readonly LABEL = nls.localize2('compareNewUntitledTextFiles', \"Compare New Untitled Text Files\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CompareNewUntitledTextFilesAction.ID,\n\t\t\ttitle: CompareNewUntitledTextFilesAction.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('compareNewUntitledTextFilesMeta', \"Opens a new diff editor with two untitled files.\")\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tawait editorService.openEditor({\n\t\t\toriginal: { resource: undefined },\n\t\t\tmodified: { resource: undefined },\n\t\t\toptions: { pinned: true }\n\t\t});\n\t}\n}\n\nexport class CompareWithClipboardAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.files.action.compareWithClipboard';\n\tstatic readonly LABEL = nls.localize2('compareWithClipboard', \"Compare Active File with Clipboard\");\n\n\tprivate registrationDisposal: IDisposable | undefined;\n\tprivate static SCHEME_COUNTER = 0;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CompareWithClipboardAction.ID,\n\t\t\ttitle: CompareWithClipboardAction.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tkeybinding: { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyC), weight: KeybindingWeight.WorkbenchContrib },\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('compareWithClipboardMeta', \"Opens a new diff editor to compare the active file with the contents of the clipboard.\")\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tconst scheme = `clipboardCompare${CompareWithClipboardAction.SCHEME_COUNTER++}`;\n\t\tif (resource && (fileService.hasProvider(resource) || resource.scheme === Schemas.untitled)) {\n\t\t\tif (!this.registrationDisposal) {\n\t\t\t\tconst provider = instantiationService.createInstance(ClipboardContentProvider);\n\t\t\t\tthis.registrationDisposal = textModelService.registerTextModelContentProvider(scheme, provider);\n\t\t\t}\n\n\t\t\tconst name = resources.basename(resource);\n\t\t\tconst editorLabel = nls.localize('clipboardComparisonLabel', \"Clipboard \u2194 {0}\", name);\n\n\t\t\tawait editorService.openEditor({\n\t\t\t\toriginal: { resource: resource.with({ scheme }) },\n\t\t\t\tmodified: { resource: resource },\n\t\t\t\tlabel: editorLabel,\n\t\t\t\toptions: { pinned: true }\n\t\t\t}).finally(() => {\n\t\t\t\tdispose(this.registrationDisposal);\n\t\t\t\tthis.registrationDisposal = undefined;\n\t\t\t});\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.registrationDisposal);\n\t\tthis.registrationDisposal = undefined;\n\t}\n}\n\nclass ClipboardContentProvider implements ITextModelContentProvider {\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IModelService private readonly modelService: IModelService\n\t) { }\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel> {\n\t\tconst text = await this.clipboardService.readText();\n\t\tconst model = this.modelService.createModel(text, this.languageService.createByFilepathOrFirstLine(resource), resource);\n\n\t\treturn model;\n\t}\n}\n\nfunction onErrorWithRetry(notificationService: INotificationService, error: unknown, retry: () => Promise<unknown>): void {\n\tnotificationService.prompt(Severity.Error, toErrorMessage(error, false),\n\t\t[{\n\t\t\tlabel: nls.localize('retry', \"Retry\"),\n\t\t\trun: () => retry()\n\t\t}]\n\t);\n}\n\nasync function openExplorerAndCreate(accessor: ServicesAccessor, isFolder: boolean): Promise<void> {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst fileService = accessor.get(IFileService);\n\tconst configService = accessor.get(IConfigurationService);\n\tconst filesConfigService = accessor.get(IFilesConfigurationService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst remoteAgentService = accessor.get(IRemoteAgentService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst pathService = accessor.get(IPathService);\n\n\tconst wasHidden = !viewsService.isViewVisible(VIEW_ID);\n\tconst view = await viewsService.openView(VIEW_ID, true);\n\tif (wasHidden) {\n\t\t// Give explorer some time to resolve itself #111218\n\t\tawait timeout(500);\n\t}\n\tif (!view) {\n\t\t// Can happen in empty workspace case (https://github.com/microsoft/vscode/issues/100604)\n\n\t\tif (isFolder) {\n\t\t\tthrow new Error('Open a folder or workspace first.');\n\t\t}\n\n\t\treturn commandService.executeCommand(NEW_UNTITLED_FILE_COMMAND_ID);\n\t}\n\n\tconst stats = explorerService.getContext(false);\n\tconst stat = stats.length > 0 ? stats[0] : undefined;\n\tlet folder: ExplorerItem;\n\tif (stat) {\n\t\tfolder = stat.isDirectory ? stat : (stat.parent || explorerService.roots[0]);\n\t} else {\n\t\tfolder = explorerService.roots[0];\n\t}\n\n\tif (folder.isReadonly) {\n\t\tthrow new Error('Parent folder is readonly.');\n\t}\n\n\tconst newStat = new NewExplorerItem(fileService, configService, filesConfigService, folder, isFolder);\n\tfolder.addChild(newStat);\n\n\tconst onSuccess = async (value: string): Promise<void> => {\n\t\ttry {\n\t\t\tconst resourceToCreate = resources.joinPath(folder.resource, value);\n\t\t\tif (value.endsWith('/')) {\n\t\t\t\tisFolder = true;\n\t\t\t}\n\t\t\tawait explorerService.applyBulkEdit([new ResourceFileEdit(undefined, resourceToCreate, { folder: isFolder })], {\n\t\t\t\tundoLabel: nls.localize('createBulkEdit', \"Create {0}\", value),\n\t\t\t\tprogressLabel: nls.localize('creatingBulkEdit', \"Creating {0}\", value),\n\t\t\t\tconfirmBeforeUndo: true\n\t\t\t});\n\t\t\tawait refreshIfSeparator(value, explorerService);\n\n\t\t\tif (isFolder) {\n\t\t\t\tawait explorerService.select(resourceToCreate, true);\n\t\t\t} else {\n\t\t\t\tawait editorService.openEditor({ resource: resourceToCreate, options: { pinned: true } });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tonErrorWithRetry(notificationService, error, () => onSuccess(value));\n\t\t}\n\t};\n\n\tconst os = (await remoteAgentService.getEnvironment())?.os ?? OS;\n\n\tawait explorerService.setEditable(newStat, {\n\t\tvalidationMessage: value => validateFileName(pathService, newStat, value, os),\n\t\tonFinish: async (value, success) => {\n\t\t\tfolder.removeChild(newStat);\n\t\t\tawait explorerService.setEditable(newStat, null);\n\t\t\tif (success) {\n\t\t\t\tonSuccess(value);\n\t\t\t}\n\t\t}\n\t});\n}\n\nCommandsRegistry.registerCommand({\n\tid: NEW_FILE_COMMAND_ID,\n\thandler: async (accessor) => {\n\t\tawait openExplorerAndCreate(accessor, false);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: NEW_FOLDER_COMMAND_ID,\n\thandler: async (accessor) => {\n\t\tawait openExplorerAndCreate(accessor, true);\n\t}\n});\n\nexport const renameHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst remoteAgentService = accessor.get(IRemoteAgentService);\n\tconst pathService = accessor.get(IPathService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\n\tconst stats = explorerService.getContext(false);\n\tconst stat = stats.length > 0 ? stats[0] : undefined;\n\tif (!stat) {\n\t\treturn;\n\t}\n\n\tconst os = (await remoteAgentService.getEnvironment())?.os ?? OS;\n\n\tawait explorerService.setEditable(stat, {\n\t\tvalidationMessage: value => validateFileName(pathService, stat, value, os),\n\t\tonFinish: async (value, success) => {\n\t\t\tif (success) {\n\t\t\t\tconst parentResource = stat.parent!.resource;\n\t\t\t\tconst targetResource = resources.joinPath(parentResource, value);\n\t\t\t\tif (stat.resource.toString() !== targetResource.toString()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait explorerService.applyBulkEdit([new ResourceFileEdit(stat.resource, targetResource)], {\n\t\t\t\t\t\t\tconfirmBeforeUndo: configurationService.getValue<IFilesConfiguration>().explorer.confirmUndo === UndoConfirmLevel.Verbose,\n\t\t\t\t\t\t\tundoLabel: nls.localize('renameBulkEdit', \"Rename {0} to {1}\", stat.name, value),\n\t\t\t\t\t\t\tprogressLabel: nls.localize('renamingBulkEdit', \"Renaming {0} to {1}\", stat.name, value),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait refreshIfSeparator(value, explorerService);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tnotificationService.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait explorerService.setEditable(stat, null);\n\t\t}\n\t});\n};\n\nexport const moveFileToTrashHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true).filter(s => !s.isRoot);\n\tif (stats.length) {\n\t\tawait deleteFiles(accessor.get(IExplorerService), accessor.get(IWorkingCopyFileService), accessor.get(IDialogService), accessor.get(IConfigurationService), stats, true);\n\t}\n};\n\nexport const deleteFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true).filter(s => !s.isRoot);\n\n\tif (stats.length) {\n\t\tawait deleteFiles(accessor.get(IExplorerService), accessor.get(IWorkingCopyFileService), accessor.get(IDialogService), accessor.get(IConfigurationService), stats, false);\n\t}\n};\n\nlet pasteShouldMove = false;\nexport const copyFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true);\n\tif (stats.length > 0) {\n\t\tawait explorerService.setToCopy(stats, false);\n\t\tpasteShouldMove = false;\n\t}\n};\n\nexport const cutFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true);\n\tif (stats.length > 0) {\n\t\tawait explorerService.setToCopy(stats, true);\n\t\tpasteShouldMove = true;\n\t}\n};\n\nconst downloadFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\n\tconst context = explorerService.getContext(true);\n\tconst explorerItems = context.length ? context : explorerService.roots;\n\n\tconst downloadHandler = instantiationService.createInstance(FileDownload);\n\n\ttry {\n\t\tawait downloadHandler.download(explorerItems);\n\t} catch (error) {\n\t\tnotificationService.error(error);\n\n\t\tthrow error;\n\t}\n};\n\nCommandsRegistry.registerCommand({\n\tid: DOWNLOAD_COMMAND_ID,\n\thandler: downloadFileHandler\n});\n\nconst uploadFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\n\tconst context = explorerService.getContext(false);\n\tconst element = context.length ? context[0] : explorerService.roots[0];\n\n\ttry {\n\t\tconst files = await triggerUpload();\n\t\tif (files) {\n\t\t\tconst browserUpload = instantiationService.createInstance(BrowserFileUpload);\n\t\t\tawait browserUpload.upload(element, files);\n\t\t}\n\t} catch (error) {\n\t\tnotificationService.error(error);\n\n\t\tthrow error;\n\t}\n};\n\nCommandsRegistry.registerCommand({\n\tid: UPLOAD_COMMAND_ID,\n\thandler: uploadFileHandler\n});\n\nexport const pasteFileHandler = async (accessor: ServicesAccessor, fileList?: FileList) => {\n\tconst clipboardService = accessor.get(IClipboardService);\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst fileService = accessor.get(IFileService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\tconst dialogService = accessor.get(IDialogService);\n\tconst hostService = accessor.get(IHostService);\n\n\tconst context = explorerService.getContext(false);\n\tconst hasNativeFilesToPaste = fileList && fileList.length > 0;\n\tconst confirmPasteNative = hasNativeFilesToPaste && configurationService.getValue<boolean>('explorer.confirmPasteNative');\n\n\tconst toPaste = await getFilesToPaste(fileList, clipboardService, hostService);\n\n\tif (confirmPasteNative && toPaste.files.length >= 1) {\n\t\tconst message = toPaste.files.length > 1 ?\n\t\t\tnls.localize('confirmMultiPasteNative', \"Are you sure you want to paste the following {0} items?\", toPaste.files.length) :\n\t\t\tnls.localize('confirmPasteNative', \"Are you sure you want to paste '{0}'?\", basename(toPaste.type === 'paths' ? toPaste.files[0].fsPath : toPaste.files[0].name));\n\t\tconst detail = toPaste.files.length > 1 ? getFileNamesMessage(toPaste.files.map(item => {\n\t\t\tif (URI.isUri(item)) {\n\t\t\t\treturn item.fsPath;\n\t\t\t}\n\n\t\t\tif (toPaste.type === 'paths') {\n\t\t\t\tconst path = hostService.getPathForFile(item);\n\t\t\t\tif (path) {\n\t\t\t\t\treturn path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn item.name;\n\t\t})) : undefined;\n\t\tconst confirmation = await dialogService.confirm({\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tcheckbox: {\n\t\t\t\tlabel: nls.localize('doNotAskAgain', \"Do not ask me again\")\n\t\t\t},\n\t\t\tprimaryButton: nls.localize({ key: 'pasteButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Paste\")\n\t\t});\n\n\t\tif (!confirmation.confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check for confirmation checkbox\n\t\tif (confirmation.checkboxChecked === true) {\n\t\t\tawait configurationService.updateValue('explorer.confirmPasteNative', false);\n\t\t}\n\t}\n\tconst element = context.length ? context[0] : explorerService.roots[0];\n\tconst incrementalNaming = configurationService.getValue<IFilesConfiguration>().explorer.incrementalNaming;\n\n\tconst editableItem = explorerService.getEditable();\n\t// If it's an editable item, just do nothing\n\tif (editableItem) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tlet targets: URI[] = [];\n\n\t\tif (toPaste.type === 'paths') { // Pasting from files on disk\n\n\t\t\t// Check if target is ancestor of pasted folder\n\t\t\tconst sourceTargetPairs = coalesce(await Promise.all(toPaste.files.map(async fileToPaste => {\n\t\t\t\tif (element.resource.toString() !== fileToPaste.toString() && resources.isEqualOrParent(element.resource, fileToPaste)) {\n\t\t\t\t\tthrow new Error(nls.localize('fileIsAncestor', \"File to paste is an ancestor of the destination folder\"));\n\t\t\t\t}\n\t\t\t\tconst fileToPasteStat = await fileService.stat(fileToPaste);\n\n\t\t\t\t// Find target\n\t\t\t\tlet target: ExplorerItem;\n\t\t\t\tif (uriIdentityService.extUri.isEqual(element.resource, fileToPaste)) {\n\t\t\t\t\ttarget = element.parent!;\n\t\t\t\t} else {\n\t\t\t\t\ttarget = element.isDirectory ? element : element.parent!;\n\t\t\t\t}\n\n\t\t\t\tconst targetFile = await findValidPasteFileTarget(\n\t\t\t\t\texplorerService,\n\t\t\t\t\tfileService,\n\t\t\t\t\tdialogService,\n\t\t\t\t\ttarget,\n\t\t\t\t\t{ resource: fileToPaste, isDirectory: fileToPasteStat.isDirectory, allowOverwrite: pasteShouldMove || incrementalNaming === 'disabled' },\n\t\t\t\t\tincrementalNaming\n\t\t\t\t);\n\n\t\t\t\tif (!targetFile) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn { source: fileToPaste, target: targetFile };\n\t\t\t})));\n\n\t\t\tif (sourceTargetPairs.length >= 1) {\n\t\t\t\t// Move/Copy File\n\t\t\t\tif (pasteShouldMove) {\n\t\t\t\t\tconst resourceFileEdits = sourceTargetPairs.map(pair => new ResourceFileEdit(pair.source, pair.target, { overwrite: incrementalNaming === 'disabled' }));\n\t\t\t\t\tconst options = {\n\t\t\t\t\t\tconfirmBeforeUndo: configurationService.getValue<IFilesConfiguration>().explorer.confirmUndo === UndoConfirmLevel.Verbose,\n\t\t\t\t\t\tprogressLabel: sourceTargetPairs.length > 1 ? nls.localize({ key: 'movingBulkEdit', comment: ['Placeholder will be replaced by the number of files being moved'] }, \"Moving {0} files\", sourceTargetPairs.length)\n\t\t\t\t\t\t\t: nls.localize({ key: 'movingFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file moved.'] }, \"Moving {0}\", resources.basenameOrAuthority(sourceTargetPairs[0].target)),\n\t\t\t\t\t\tundoLabel: sourceTargetPairs.length > 1 ? nls.localize({ key: 'moveBulkEdit', comment: ['Placeholder will be replaced by the number of files being moved'] }, \"Move {0} files\", sourceTargetPairs.length)\n\t\t\t\t\t\t\t: nls.localize({ key: 'moveFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file moved.'] }, \"Move {0}\", resources.basenameOrAuthority(sourceTargetPairs[0].target))\n\t\t\t\t\t};\n\t\t\t\t\tawait explorerService.applyBulkEdit(resourceFileEdits, options);\n\t\t\t\t} else {\n\t\t\t\t\tconst resourceFileEdits = sourceTargetPairs.map(pair => new ResourceFileEdit(pair.source, pair.target, { copy: true, overwrite: incrementalNaming === 'disabled' }));\n\t\t\t\t\tawait applyCopyResourceEdit(sourceTargetPairs.map(pair => pair.target), resourceFileEdits);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargets = sourceTargetPairs.map(pair => pair.target);\n\n\t\t} else { // Pasting from file data\n\t\t\tconst targetAndEdits = coalesce(await Promise.all(toPaste.files.map(async file => {\n\t\t\t\tconst target = element.isDirectory ? element : element.parent!;\n\n\t\t\t\tconst targetFile = await findValidPasteFileTarget(\n\t\t\t\t\texplorerService,\n\t\t\t\t\tfileService,\n\t\t\t\t\tdialogService,\n\t\t\t\t\ttarget,\n\t\t\t\t\t{ resource: file.name, isDirectory: false, allowOverwrite: pasteShouldMove || incrementalNaming === 'disabled' },\n\t\t\t\t\tincrementalNaming\n\t\t\t\t);\n\t\t\t\tif (!targetFile) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttarget: targetFile,\n\t\t\t\t\tedit: new ResourceFileEdit(undefined, targetFile, {\n\t\t\t\t\t\toverwrite: incrementalNaming === 'disabled',\n\t\t\t\t\t\tcontents: (async () => VSBuffer.wrap(new Uint8Array(await file.arrayBuffer())))(),\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t})));\n\n\t\t\tawait applyCopyResourceEdit(targetAndEdits.map(pair => pair.target), targetAndEdits.map(pair => pair.edit));\n\t\t\ttargets = targetAndEdits.map(pair => pair.target);\n\t\t}\n\n\t\tif (targets.length) {\n\t\t\tconst firstTarget = targets[0];\n\t\t\tawait explorerService.select(firstTarget);\n\t\t\tif (targets.length === 1) {\n\t\t\t\tconst item = explorerService.findClosest(firstTarget);\n\t\t\t\tif (item && !item.isDirectory) {\n\t\t\t\t\tawait editorService.openEditor({ resource: item.resource, options: { pinned: true, preserveFocus: true } });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\tonError(notificationService, new Error(nls.localize('fileDeleted', \"The file(s) to paste have been deleted or moved since you copied them. {0}\", getErrorMessage(e))));\n\t} finally {\n\t\tif (pasteShouldMove) {\n\t\t\t// Cut is done. Make sure to clear cut state.\n\t\t\tawait explorerService.setToCopy([], false);\n\t\t\tpasteShouldMove = false;\n\t\t}\n\t}\n\n\tasync function applyCopyResourceEdit(targets: readonly URI[], resourceFileEdits: ResourceFileEdit[]) {\n\t\tconst undoLevel = configurationService.getValue<IFilesConfiguration>().explorer.confirmUndo;\n\t\tconst options = {\n\t\t\tconfirmBeforeUndo: undoLevel === UndoConfirmLevel.Default || undoLevel === UndoConfirmLevel.Verbose,\n\t\t\tprogressLabel: targets.length > 1 ? nls.localize({ key: 'copyingBulkEdit', comment: ['Placeholder will be replaced by the number of files being copied'] }, \"Copying {0} files\", targets.length)\n\t\t\t\t: nls.localize({ key: 'copyingFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file copied.'] }, \"Copying {0}\", resources.basenameOrAuthority(targets[0])),\n\t\t\tundoLabel: targets.length > 1 ? nls.localize({ key: 'copyBulkEdit', comment: ['Placeholder will be replaced by the number of files being copied'] }, \"Paste {0} files\", targets.length)\n\t\t\t\t: nls.localize({ key: 'copyFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file copied.'] }, \"Paste {0}\", resources.basenameOrAuthority(targets[0]))\n\t\t};\n\t\tawait explorerService.applyBulkEdit(resourceFileEdits, options);\n\t}\n};\n\ntype FilesToPaste =\n\t| { type: 'paths'; files: URI[] }\n\t| { type: 'data'; files: File[] };\n\nasync function getFilesToPaste(fileList: FileList | undefined, clipboardService: IClipboardService, hostService: IHostService): Promise<FilesToPaste> {\n\tif (fileList && fileList.length > 0) {\n\t\t// with a `fileList` we support natively pasting file from disk from clipboard\n\t\tconst resources = [...fileList].map(file => hostService.getPathForFile(file)).filter(filePath => !!filePath && isAbsolute(filePath)).map((filePath) => URI.file(filePath!));\n\t\tif (resources.length) {\n\t\t\treturn { type: 'paths', files: resources, };\n\t\t}\n\n\t\t// Support pasting files that we can't read from disk\n\t\treturn { type: 'data', files: [...fileList].filter(file => !hostService.getPathForFile(file)) };\n\t} else {\n\t\t// otherwise we fallback to reading resources from our clipboard service\n\t\treturn { type: 'paths', files: resources.distinctParents(await clipboardService.readResources(), resource => resource) };\n\t}\n}\n\nexport const openFilePreserveFocusHandler = async (accessor: ServicesAccessor) => {\n\tconst editorService = accessor.get(IEditorService);\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true);\n\n\tawait editorService.openEditors(stats.filter(s => !s.isDirectory).map(s => ({\n\t\tresource: s.resource,\n\t\toptions: { preserveFocus: true }\n\t})));\n};\n\nclass BaseSetActiveEditorReadonlyInSession extends Action2 {\n\n\tconstructor(\n\t\tid: string,\n\t\ttitle: ILocalizedString,\n\t\tprivate readonly newReadonlyState: true | false | 'toggle' | 'reset'\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tprecondition: ActiveEditorCanToggleReadonlyContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst filesConfigurationService = accessor.get(IFilesConfigurationService);\n\n\t\tconst fileResource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tif (!fileResource) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait filesConfigurationService.updateReadonly(fileResource, this.newReadonlyState);\n\t}\n}\n\nexport class SetActiveEditorReadonlyInSession extends BaseSetActiveEditorReadonlyInSession {\n\n\tstatic readonly ID = 'workbench.action.files.setActiveEditorReadonlyInSession';\n\tstatic readonly LABEL = nls.localize2('setActiveEditorReadonlyInSession', \"Set Active Editor Read-only in Session\");\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tSetActiveEditorReadonlyInSession.ID,\n\t\t\tSetActiveEditorReadonlyInSession.LABEL,\n\t\t\ttrue\n\t\t);\n\t}\n}\n\nexport class SetActiveEditorWriteableInSession extends BaseSetActiveEditorReadonlyInSession {\n\n\tstatic readonly ID = 'workbench.action.files.setActiveEditorWriteableInSession';\n\tstatic readonly LABEL = nls.localize2('setActiveEditorWriteableInSession', \"Set Active Editor Writeable in Session\");\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tSetActiveEditorWriteableInSession.ID,\n\t\t\tSetActiveEditorWriteableInSession.LABEL,\n\t\t\tfalse\n\t\t);\n\t}\n}\n\nexport class ToggleActiveEditorReadonlyInSession extends BaseSetActiveEditorReadonlyInSession {\n\n\tstatic readonly ID = 'workbench.action.files.toggleActiveEditorReadonlyInSession';\n\tstatic readonly LABEL = nls.localize2('toggleActiveEditorReadonlyInSession', \"Toggle Active Editor Read-only in Session\");\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tToggleActiveEditorReadonlyInSession.ID,\n\t\t\tToggleActiveEditorReadonlyInSession.LABEL,\n\t\t\t'toggle'\n\t\t);\n\t}\n}\n\nexport class ResetActiveEditorReadonlyInSession extends BaseSetActiveEditorReadonlyInSession {\n\n\tstatic readonly ID = 'workbench.action.files.resetActiveEditorReadonlyInSession';\n\tstatic readonly LABEL = nls.localize2('resetActiveEditorReadonlyInSession', \"Reset Active Editor Read-only in Session\");\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tResetActiveEditorReadonlyInSession.ID,\n\t\t\tResetActiveEditorReadonlyInSession.LABEL,\n\t\t\t'reset'\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["primaryButton", "name", "resources"]
}
