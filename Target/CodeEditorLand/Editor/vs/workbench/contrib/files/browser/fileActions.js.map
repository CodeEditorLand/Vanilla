{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/fileActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { triggerUpload } from \"../../../../base/browser/dom.js\";\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport { timeout } from \"../../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { toErrorMessage } from \"../../../../base/common/errorMessage.js\";\nimport { getErrorMessage } from \"../../../../base/common/errors.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { basename, extname, isAbsolute } from \"../../../../base/common/path.js\";\nimport {\n\tOS,\n\ttype OperatingSystem,\n\tisWindows,\n} from \"../../../../base/common/platform.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport { rtrim, trim } from \"../../../../base/common/strings.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { Constants } from \"../../../../base/common/uint.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ResourceFileEdit } from \"../../../../editor/browser/services/bulkEditService.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport {\n\ttype ITextModelContentProvider,\n\tITextModelService,\n} from \"../../../../editor/common/services/resolverService.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { ILocalizedString } from \"../../../../platform/action/common/action.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport { Action2 } from \"../../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { RawContextKey } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\ttype IConfirmationResult,\n\tIDialogService,\n\tgetFileNamesMessage,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIQuickInputService,\n\tItemActivation,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { CLOSE_EDITORS_AND_GROUP_COMMAND_ID } from \"../../../browser/parts/editor/editorCommands.js\";\nimport {\n\tActiveEditorCanToggleReadonlyContext,\n\tActiveEditorContext,\n\tEmptyWorkspaceSupportContext,\n} from \"../../../common/contextkeys.js\";\nimport {\n\tEditorResourceAccessor,\n\tSideBySideEditor,\n} from \"../../../common/editor.js\";\nimport { ViewContainerLocation } from \"../../../common/views.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IFilesConfigurationService } from \"../../../services/filesConfiguration/common/filesConfigurationService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { IPaneCompositePartService } from \"../../../services/panecomposite/browser/panecomposite.js\";\nimport { IPathService } from \"../../../services/path/common/pathService.js\";\nimport { IRemoteAgentService } from \"../../../services/remote/common/remoteAgentService.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport type { IWorkingCopy } from \"../../../services/workingCopy/common/workingCopy.js\";\nimport { IWorkingCopyFileService } from \"../../../services/workingCopy/common/workingCopyFileService.js\";\nimport { IWorkingCopyService } from \"../../../services/workingCopy/common/workingCopyService.js\";\nimport { type ExplorerItem, NewExplorerItem } from \"../common/explorerModel.js\";\nimport {\n\ttype IFilesConfiguration,\n\tUndoConfirmLevel,\n\tVIEWLET_ID,\n\tVIEW_ID,\n} from \"../common/files.js\";\nimport {\n\tNEW_UNTITLED_FILE_COMMAND_ID,\n\tREVEAL_IN_EXPLORER_COMMAND_ID,\n\tSAVE_ALL_IN_GROUP_COMMAND_ID,\n} from \"./fileConstants.js\";\nimport { BrowserFileUpload, FileDownload } from \"./fileImportExport.js\";\nimport { IExplorerService } from \"./files.js\";\n\nexport const NEW_FILE_COMMAND_ID = \"explorer.newFile\";\nexport const NEW_FILE_LABEL = nls.localize2(\"newFile\", \"New File...\");\nexport const NEW_FOLDER_COMMAND_ID = \"explorer.newFolder\";\nexport const NEW_FOLDER_LABEL = nls.localize2(\"newFolder\", \"New Folder...\");\nexport const TRIGGER_RENAME_LABEL = nls.localize(\"rename\", \"Rename...\");\nexport const MOVE_FILE_TO_TRASH_LABEL = nls.localize(\"delete\", \"Delete\");\nexport const COPY_FILE_LABEL = nls.localize(\"copyFile\", \"Copy\");\nexport const PASTE_FILE_LABEL = nls.localize(\"pasteFile\", \"Paste\");\nexport const FileCopiedContext = new RawContextKey<boolean>(\n\t\"fileCopied\",\n\tfalse,\n);\nexport const DOWNLOAD_COMMAND_ID = \"explorer.download\";\nexport const DOWNLOAD_LABEL = nls.localize(\"download\", \"Download...\");\nexport const UPLOAD_COMMAND_ID = \"explorer.upload\";\nexport const UPLOAD_LABEL = nls.localize(\"upload\", \"Upload...\");\nconst CONFIRM_DELETE_SETTING_KEY = \"explorer.confirmDelete\";\nconst MAX_UNDO_FILE_SIZE = 5000000; // 5mb\n\nfunction onError(notificationService: INotificationService, error: any): void {\n\tif (error.message === \"string\") {\n\t\terror = error.message;\n\t}\n\n\tnotificationService.error(toErrorMessage(error, false));\n}\n\nasync function refreshIfSeparator(\n\tvalue: string,\n\texplorerService: IExplorerService,\n): Promise<void> {\n\tif (value && (value.indexOf(\"/\") >= 0 || value.indexOf(\"\\\\\") >= 0)) {\n\t\t// New input contains separator, multiple resources will get created workaround for #68204\n\t\tawait explorerService.refresh();\n\t}\n}\n\nasync function deleteFiles(\n\texplorerService: IExplorerService,\n\tworkingCopyFileService: IWorkingCopyFileService,\n\tdialogService: IDialogService,\n\tconfigurationService: IConfigurationService,\n\telements: ExplorerItem[],\n\tuseTrash: boolean,\n\tskipConfirm = false,\n\tignoreIfNotExists = false,\n): Promise<void> {\n\tlet primaryButton: string;\n\tif (useTrash) {\n\t\tprimaryButton = isWindows\n\t\t\t? nls.localize(\n\t\t\t\t\t\"deleteButtonLabelRecycleBin\",\n\t\t\t\t\t\"&&Move to Recycle Bin\",\n\t\t\t\t)\n\t\t\t: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"deleteButtonLabelTrash\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Move to Trash\",\n\t\t\t\t);\n\t} else {\n\t\tprimaryButton = nls.localize(\n\t\t\t{ key: \"deleteButtonLabel\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Delete\",\n\t\t);\n\t}\n\n\t// Handle dirty\n\tconst distinctElements = resources.distinctParents(\n\t\telements,\n\t\t(e) => e.resource,\n\t);\n\tconst dirtyWorkingCopies = new Set<IWorkingCopy>();\n\tfor (const distinctElement of distinctElements) {\n\t\tfor (const dirtyWorkingCopy of workingCopyFileService.getDirty(\n\t\t\tdistinctElement.resource,\n\t\t)) {\n\t\t\tdirtyWorkingCopies.add(dirtyWorkingCopy);\n\t\t}\n\t}\n\tlet confirmed = true;\n\tif (dirtyWorkingCopies.size) {\n\t\tlet message: string;\n\t\tif (distinctElements.length > 1) {\n\t\t\tmessage = nls.localize(\n\t\t\t\t\"dirtyMessageFilesDelete\",\n\t\t\t\t\"You are deleting files with unsaved changes. Do you want to continue?\",\n\t\t\t);\n\t\t} else if (distinctElements[0].isDirectory) {\n\t\t\tif (dirtyWorkingCopies.size === 1) {\n\t\t\t\tmessage = nls.localize(\n\t\t\t\t\t\"dirtyMessageFolderOneDelete\",\n\t\t\t\t\t\"You are deleting a folder {0} with unsaved changes in 1 file. Do you want to continue?\",\n\t\t\t\t\tdistinctElements[0].name,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmessage = nls.localize(\n\t\t\t\t\t\"dirtyMessageFolderDelete\",\n\t\t\t\t\t\"You are deleting a folder {0} with unsaved changes in {1} files. Do you want to continue?\",\n\t\t\t\t\tdistinctElements[0].name,\n\t\t\t\t\tdirtyWorkingCopies.size,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tmessage = nls.localize(\n\t\t\t\t\"dirtyMessageFileDelete\",\n\t\t\t\t\"You are deleting {0} with unsaved changes. Do you want to continue?\",\n\t\t\t\tdistinctElements[0].name,\n\t\t\t);\n\t\t}\n\n\t\tconst response = await dialogService.confirm({\n\t\t\ttype: \"warning\",\n\t\t\tmessage,\n\t\t\tdetail: nls.localize(\n\t\t\t\t\"dirtyWarning\",\n\t\t\t\t\"Your changes will be lost if you don't save them.\",\n\t\t\t),\n\t\t\tprimaryButton,\n\t\t});\n\n\t\tif (response.confirmed) {\n\t\t\tskipConfirm = true;\n\t\t} else {\n\t\t\tconfirmed = false;\n\t\t}\n\t}\n\n\t// Check if file is dirty in editor and save it to avoid data loss\n\tif (!confirmed) {\n\t\treturn;\n\t}\n\n\tlet confirmation: IConfirmationResult;\n\t// We do not support undo of folders, so in that case the delete action is irreversible\n\tconst deleteDetail = distinctElements.some((e) => e.isDirectory)\n\t\t? nls.localize(\"irreversible\", \"This action is irreversible!\")\n\t\t: distinctElements.length > 1\n\t\t\t? nls.localize(\n\t\t\t\t\t\"restorePlural\",\n\t\t\t\t\t\"You can restore these files using the Undo command.\",\n\t\t\t\t)\n\t\t\t: nls.localize(\n\t\t\t\t\t\"restore\",\n\t\t\t\t\t\"You can restore this file using the Undo command.\",\n\t\t\t\t);\n\n\t// Check if we need to ask for confirmation at all\n\tif (\n\t\tskipConfirm ||\n\t\t(useTrash &&\n\t\t\tconfigurationService.getValue<boolean>(\n\t\t\t\tCONFIRM_DELETE_SETTING_KEY,\n\t\t\t) === false)\n\t) {\n\t\tconfirmation = { confirmed: true };\n\t}\n\n\t// Confirm for moving to trash\n\telse if (useTrash) {\n\t\tlet { message, detail } = getMoveToTrashMessage(distinctElements);\n\t\tdetail += detail ? \"\\n\" : \"\";\n\t\tif (isWindows) {\n\t\t\tdetail +=\n\t\t\t\tdistinctElements.length > 1\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"undoBinFiles\",\n\t\t\t\t\t\t\t\"You can restore these files from the Recycle Bin.\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"undoBin\",\n\t\t\t\t\t\t\t\"You can restore this file from the Recycle Bin.\",\n\t\t\t\t\t\t);\n\t\t} else {\n\t\t\tdetail +=\n\t\t\t\tdistinctElements.length > 1\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"undoTrashFiles\",\n\t\t\t\t\t\t\t\"You can restore these files from the Trash.\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"undoTrash\",\n\t\t\t\t\t\t\t\"You can restore this file from the Trash.\",\n\t\t\t\t\t\t);\n\t\t}\n\n\t\tconfirmation = await dialogService.confirm({\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tprimaryButton,\n\t\t\tcheckbox: {\n\t\t\t\tlabel: nls.localize(\"doNotAskAgain\", \"Do not ask me again\"),\n\t\t\t},\n\t\t});\n\t}\n\n\t// Confirm for deleting permanently\n\telse {\n\t\tlet { message, detail } = getDeleteMessage(distinctElements);\n\t\tdetail += detail ? \"\\n\" : \"\";\n\t\tdetail += deleteDetail;\n\t\tconfirmation = await dialogService.confirm({\n\t\t\ttype: \"warning\",\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tprimaryButton,\n\t\t});\n\t}\n\n\t// Check for confirmation checkbox\n\tif (confirmation.confirmed && confirmation.checkboxChecked === true) {\n\t\tawait configurationService.updateValue(\n\t\t\tCONFIRM_DELETE_SETTING_KEY,\n\t\t\tfalse,\n\t\t);\n\t}\n\n\t// Check for confirmation\n\tif (!confirmation.confirmed) {\n\t\treturn;\n\t}\n\n\t// Call function\n\ttry {\n\t\tconst resourceFileEdits = distinctElements.map(\n\t\t\t(e) =>\n\t\t\t\tnew ResourceFileEdit(e.resource, undefined, {\n\t\t\t\t\trecursive: true,\n\t\t\t\t\tfolder: e.isDirectory,\n\t\t\t\t\tignoreIfNotExists,\n\t\t\t\t\tskipTrashBin: !useTrash,\n\t\t\t\t\tmaxSize: MAX_UNDO_FILE_SIZE,\n\t\t\t\t}),\n\t\t);\n\t\tconst options = {\n\t\t\tundoLabel:\n\t\t\t\tdistinctElements.length > 1\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"deleteBulkEdit\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the number of files deleted\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Delete {0} files\",\n\t\t\t\t\t\t\tdistinctElements.length,\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"deleteFileBulkEdit\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the name of the file deleted\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Delete {0}\",\n\t\t\t\t\t\t\tdistinctElements[0].name,\n\t\t\t\t\t\t),\n\t\t\tprogressLabel:\n\t\t\t\tdistinctElements.length > 1\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"deletingBulkEdit\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the number of files deleted\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Deleting {0} files\",\n\t\t\t\t\t\t\tdistinctElements.length,\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"deletingFileBulkEdit\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the name of the file deleted\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Deleting {0}\",\n\t\t\t\t\t\t\tdistinctElements[0].name,\n\t\t\t\t\t\t),\n\t\t};\n\t\tawait explorerService.applyBulkEdit(resourceFileEdits, options);\n\t} catch (error) {\n\t\t// Handle error to delete file(s) from a modal confirmation dialog\n\t\tlet errorMessage: string;\n\t\tlet detailMessage: string | undefined;\n\t\tlet primaryButton: string;\n\t\tif (useTrash) {\n\t\t\terrorMessage = isWindows\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"binFailed\",\n\t\t\t\t\t\t\"Failed to delete using the Recycle Bin. Do you want to permanently delete instead?\",\n\t\t\t\t\t)\n\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\"trashFailed\",\n\t\t\t\t\t\t\"Failed to delete using the Trash. Do you want to permanently delete instead?\",\n\t\t\t\t\t);\n\t\t\tdetailMessage = deleteDetail;\n\t\t\tprimaryButton = nls.localize(\n\t\t\t\t{\n\t\t\t\t\tkey: \"deletePermanentlyButtonLabel\",\n\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t},\n\t\t\t\t\"&&Delete Permanently\",\n\t\t\t);\n\t\t} else {\n\t\t\terrorMessage = toErrorMessage(error, false);\n\t\t\tprimaryButton = nls.localize(\n\t\t\t\t{ key: \"retryButtonLabel\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Retry\",\n\t\t\t);\n\t\t}\n\n\t\tconst res = await dialogService.confirm({\n\t\t\ttype: \"warning\",\n\t\t\tmessage: errorMessage,\n\t\t\tdetail: detailMessage,\n\t\t\tprimaryButton,\n\t\t});\n\n\t\tif (res.confirmed) {\n\t\t\tif (useTrash) {\n\t\t\t\tuseTrash = false; // Delete Permanently\n\t\t\t}\n\n\t\t\tskipConfirm = true;\n\t\t\tignoreIfNotExists = true;\n\n\t\t\treturn deleteFiles(\n\t\t\t\texplorerService,\n\t\t\t\tworkingCopyFileService,\n\t\t\t\tdialogService,\n\t\t\t\tconfigurationService,\n\t\t\t\telements,\n\t\t\t\tuseTrash,\n\t\t\t\tskipConfirm,\n\t\t\t\tignoreIfNotExists,\n\t\t\t);\n\t\t}\n\t}\n}\n\nfunction getMoveToTrashMessage(distinctElements: ExplorerItem[]): {\n\tmessage: string;\n\tdetail: string;\n} {\n\tif (containsBothDirectoryAndFile(distinctElements)) {\n\t\treturn {\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"confirmMoveTrashMessageFilesAndDirectories\",\n\t\t\t\t\"Are you sure you want to delete the following {0} files/directories and their contents?\",\n\t\t\t\tdistinctElements.length,\n\t\t\t),\n\t\t\tdetail: getFileNamesMessage(\n\t\t\t\tdistinctElements.map((e) => e.resource),\n\t\t\t),\n\t\t};\n\t}\n\n\tif (distinctElements.length > 1) {\n\t\tif (distinctElements[0].isDirectory) {\n\t\t\treturn {\n\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\"confirmMoveTrashMessageMultipleDirectories\",\n\t\t\t\t\t\"Are you sure you want to delete the following {0} directories and their contents?\",\n\t\t\t\t\tdistinctElements.length,\n\t\t\t\t),\n\t\t\t\tdetail: getFileNamesMessage(\n\t\t\t\t\tdistinctElements.map((e) => e.resource),\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"confirmMoveTrashMessageMultiple\",\n\t\t\t\t\"Are you sure you want to delete the following {0} files?\",\n\t\t\t\tdistinctElements.length,\n\t\t\t),\n\t\t\tdetail: getFileNamesMessage(\n\t\t\t\tdistinctElements.map((e) => e.resource),\n\t\t\t),\n\t\t};\n\t}\n\n\tif (\n\t\tdistinctElements[0].isDirectory &&\n\t\t!distinctElements[0].isSymbolicLink\n\t) {\n\t\treturn {\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"confirmMoveTrashMessageFolder\",\n\t\t\t\t\"Are you sure you want to delete '{0}' and its contents?\",\n\t\t\t\tdistinctElements[0].name,\n\t\t\t),\n\t\t\tdetail: \"\",\n\t\t};\n\t}\n\n\treturn {\n\t\tmessage: nls.localize(\n\t\t\t\"confirmMoveTrashMessageFile\",\n\t\t\t\"Are you sure you want to delete '{0}'?\",\n\t\t\tdistinctElements[0].name,\n\t\t),\n\t\tdetail: \"\",\n\t};\n}\n\nfunction getDeleteMessage(distinctElements: ExplorerItem[]): {\n\tmessage: string;\n\tdetail: string;\n} {\n\tif (containsBothDirectoryAndFile(distinctElements)) {\n\t\treturn {\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"confirmDeleteMessageFilesAndDirectories\",\n\t\t\t\t\"Are you sure you want to permanently delete the following {0} files/directories and their contents?\",\n\t\t\t\tdistinctElements.length,\n\t\t\t),\n\t\t\tdetail: getFileNamesMessage(\n\t\t\t\tdistinctElements.map((e) => e.resource),\n\t\t\t),\n\t\t};\n\t}\n\n\tif (distinctElements.length > 1) {\n\t\tif (distinctElements[0].isDirectory) {\n\t\t\treturn {\n\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\"confirmDeleteMessageMultipleDirectories\",\n\t\t\t\t\t\"Are you sure you want to permanently delete the following {0} directories and their contents?\",\n\t\t\t\t\tdistinctElements.length,\n\t\t\t\t),\n\t\t\t\tdetail: getFileNamesMessage(\n\t\t\t\t\tdistinctElements.map((e) => e.resource),\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"confirmDeleteMessageMultiple\",\n\t\t\t\t\"Are you sure you want to permanently delete the following {0} files?\",\n\t\t\t\tdistinctElements.length,\n\t\t\t),\n\t\t\tdetail: getFileNamesMessage(\n\t\t\t\tdistinctElements.map((e) => e.resource),\n\t\t\t),\n\t\t};\n\t}\n\n\tif (distinctElements[0].isDirectory) {\n\t\treturn {\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"confirmDeleteMessageFolder\",\n\t\t\t\t\"Are you sure you want to permanently delete '{0}' and its contents?\",\n\t\t\t\tdistinctElements[0].name,\n\t\t\t),\n\t\t\tdetail: \"\",\n\t\t};\n\t}\n\n\treturn {\n\t\tmessage: nls.localize(\n\t\t\t\"confirmDeleteMessageFile\",\n\t\t\t\"Are you sure you want to permanently delete '{0}'?\",\n\t\t\tdistinctElements[0].name,\n\t\t),\n\t\tdetail: \"\",\n\t};\n}\n\nfunction containsBothDirectoryAndFile(\n\tdistinctElements: ExplorerItem[],\n): boolean {\n\tconst directory = distinctElements.find((element) => element.isDirectory);\n\tconst file = distinctElements.find((element) => !element.isDirectory);\n\n\treturn !!directory && !!file;\n}\n\nexport async function findValidPasteFileTarget(\n\texplorerService: IExplorerService,\n\tfileService: IFileService,\n\tdialogService: IDialogService,\n\ttargetFolder: ExplorerItem,\n\tfileToPaste: {\n\t\tresource: URI | string;\n\t\tisDirectory?: boolean;\n\t\tallowOverwrite: boolean;\n\t},\n\tincrementalNaming: \"simple\" | \"smart\" | \"disabled\",\n): Promise<URI | undefined> {\n\tlet name =\n\t\ttypeof fileToPaste.resource === \"string\"\n\t\t\t? fileToPaste.resource\n\t\t\t: resources.basenameOrAuthority(fileToPaste.resource);\n\tlet candidate = resources.joinPath(targetFolder.resource, name);\n\n\t// In the disabled case we must ask if it's ok to overwrite the file if it exists\n\tif (incrementalNaming === \"disabled\") {\n\t\tconst canOverwrite = await askForOverwrite(\n\t\t\tfileService,\n\t\t\tdialogService,\n\t\t\tcandidate,\n\t\t);\n\t\tif (!canOverwrite) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\twhile (true && !fileToPaste.allowOverwrite) {\n\t\tif (!explorerService.findClosest(candidate)) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif (incrementalNaming !== \"disabled\") {\n\t\t\tname = incrementFileName(\n\t\t\t\tname,\n\t\t\t\t!!fileToPaste.isDirectory,\n\t\t\t\tincrementalNaming,\n\t\t\t);\n\t\t}\n\t\tcandidate = resources.joinPath(targetFolder.resource, name);\n\t}\n\n\treturn candidate;\n}\n\nexport function incrementFileName(\n\tname: string,\n\tisFolder: boolean,\n\tincrementalNaming: \"simple\" | \"smart\",\n): string {\n\tif (incrementalNaming === \"simple\") {\n\t\tlet namePrefix = name;\n\t\tlet extSuffix = \"\";\n\t\tif (!isFolder) {\n\t\t\textSuffix = extname(name);\n\t\t\tnamePrefix = basename(name, extSuffix);\n\t\t}\n\n\t\t// name copy 5(.txt) => name copy 6(.txt)\n\t\t// name copy(.txt) => name copy 2(.txt)\n\t\tconst suffixRegex = /^(.+ copy)( \\d+)?$/;\n\t\tif (suffixRegex.test(namePrefix)) {\n\t\t\treturn (\n\t\t\t\tnamePrefix.replace(suffixRegex, (match, g1?, g2?) => {\n\t\t\t\t\tconst number = g2 ? Number.parseInt(g2) : 1;\n\t\t\t\t\treturn number === 0\n\t\t\t\t\t\t? `${g1}`\n\t\t\t\t\t\t: number < Constants.MAX_SAFE_SMALL_INTEGER\n\t\t\t\t\t\t\t? `${g1} ${number + 1}`\n\t\t\t\t\t\t\t: `${g1}${g2} copy`;\n\t\t\t\t}) + extSuffix\n\t\t\t);\n\t\t}\n\n\t\t// name(.txt) => name copy(.txt)\n\t\treturn `${namePrefix} copy${extSuffix}`;\n\t}\n\n\tconst separators = \"[\\\\.\\\\-_]\";\n\tconst maxNumber = Constants.MAX_SAFE_SMALL_INTEGER;\n\n\t// file.1.txt=>file.2.txt\n\tconst suffixFileRegex = RegExp(\"(.*\" + separators + \")(\\\\d+)(\\\\..*)$\");\n\tif (!isFolder && name.match(suffixFileRegex)) {\n\t\treturn name.replace(suffixFileRegex, (match, g1?, g2?, g3?) => {\n\t\t\tconst number = Number.parseInt(g2);\n\t\t\treturn number < maxNumber\n\t\t\t\t? g1 + String(number + 1).padStart(g2.length, \"0\") + g3\n\t\t\t\t: `${g1}${g2}.1${g3}`;\n\t\t});\n\t}\n\n\t// 1.file.txt=>2.file.txt\n\tconst prefixFileRegex = RegExp(\"(\\\\d+)(\" + separators + \".*)(\\\\..*)$\");\n\tif (!isFolder && name.match(prefixFileRegex)) {\n\t\treturn name.replace(prefixFileRegex, (match, g1?, g2?, g3?) => {\n\t\t\tconst number = Number.parseInt(g1);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(g1.length, \"0\") + g2 + g3\n\t\t\t\t: `${g1}${g2}.1${g3}`;\n\t\t});\n\t}\n\n\t// 1.txt=>2.txt\n\tconst prefixFileNoNameRegex = /(\\d+)(\\..*)$/;\n\tif (!isFolder && name.match(prefixFileNoNameRegex)) {\n\t\treturn name.replace(prefixFileNoNameRegex, (match, g1?, g2?) => {\n\t\t\tconst number = Number.parseInt(g1);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(g1.length, \"0\") + g2\n\t\t\t\t: `${g1}.1${g2}`;\n\t\t});\n\t}\n\n\t// file.txt=>file.1.txt\n\tconst lastIndexOfDot = name.lastIndexOf(\".\");\n\tif (!isFolder && lastIndexOfDot >= 0) {\n\t\treturn `${name.substr(0, lastIndexOfDot)}.1${name.substr(lastIndexOfDot)}`;\n\t}\n\n\t// 123 => 124\n\tconst noNameNoExtensionRegex = /(\\d+)$/;\n\tif (\n\t\t!isFolder &&\n\t\tlastIndexOfDot === -1 &&\n\t\tname.match(noNameNoExtensionRegex)\n\t) {\n\t\treturn name.replace(noNameNoExtensionRegex, (match, g1?) => {\n\t\t\tconst number = Number.parseInt(g1);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(g1.length, \"0\")\n\t\t\t\t: `${g1}.1`;\n\t\t});\n\t}\n\n\t// file => file1\n\t// file1 => file2\n\tconst noExtensionRegex = /(.*)(\\d*)$/;\n\tif (!isFolder && lastIndexOfDot === -1 && name.match(noExtensionRegex)) {\n\t\treturn name.replace(noExtensionRegex, (match, g1?, g2?) => {\n\t\t\tlet number = Number.parseInt(g2);\n\t\t\tif (isNaN(number)) {\n\t\t\t\tnumber = 0;\n\t\t\t}\n\t\t\treturn number < maxNumber\n\t\t\t\t? g1 + String(number + 1).padStart(g2.length, \"0\")\n\t\t\t\t: `${g1}${g2}.1`;\n\t\t});\n\t}\n\n\t// folder.1=>folder.2\n\tif (isFolder && name.match(/(\\d+)$/)) {\n\t\treturn name.replace(/(\\d+)$/, (match, ...groups) => {\n\t\t\tconst number = Number.parseInt(groups[0]);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(groups[0].length, \"0\")\n\t\t\t\t: `${groups[0]}.1`;\n\t\t});\n\t}\n\n\t// 1.folder=>2.folder\n\tif (isFolder && name.match(/^(\\d+)/)) {\n\t\treturn name.replace(/^(\\d+)(.*)$/, (match, ...groups) => {\n\t\t\tconst number = Number.parseInt(groups[0]);\n\t\t\treturn number < maxNumber\n\t\t\t\t? String(number + 1).padStart(groups[0].length, \"0\") + groups[1]\n\t\t\t\t: `${groups[0]}${groups[1]}.1`;\n\t\t});\n\t}\n\n\t// file/folder=>file.1/folder.1\n\treturn `${name}.1`;\n}\n\n/**\n * Checks to see if the resource already exists, if so prompts the user if they would be ok with it being overwritten\n * @param fileService The file service\n * @param dialogService The dialog service\n * @param targetResource The resource to be overwritten\n * @return A boolean indicating if the user is ok with resource being overwritten, if the resource does not exist it returns true.\n */\nasync function askForOverwrite(\n\tfileService: IFileService,\n\tdialogService: IDialogService,\n\ttargetResource: URI,\n): Promise<boolean> {\n\tconst exists = await fileService.exists(targetResource);\n\tif (!exists) {\n\t\treturn true;\n\t}\n\t// Ask for overwrite confirmation\n\tconst { confirmed } = await dialogService.confirm({\n\t\ttype: Severity.Warning,\n\t\tmessage: nls.localize(\n\t\t\t\"confirmOverwrite\",\n\t\t\t\"A file or folder with the name '{0}' already exists in the destination folder. Do you want to replace it?\",\n\t\t\tbasename(targetResource.path),\n\t\t),\n\t\tprimaryButton: nls.localize(\"replaceButtonLabel\", \"&&Replace\"),\n\t});\n\treturn confirmed;\n}\n\n// Global Compare with\nexport class GlobalCompareResourcesAction extends Action2 {\n\tstatic readonly ID = \"workbench.files.action.compareFileWith\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"globalCompareFile\",\n\t\t\"Compare Active File With...\",\n\t);\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GlobalCompareResourcesAction.ID,\n\t\t\ttitle: GlobalCompareResourcesAction.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tprecondition: ActiveEditorContext,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\"compareFileWithMeta\",\n\t\t\t\t\t\"Opens a picker to select a file to diff with the active editor.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst activeInput = editorService.activeEditor;\n\t\tconst activeResource =\n\t\t\tEditorResourceAccessor.getOriginalUri(activeInput);\n\t\tif (\n\t\t\tactiveResource &&\n\t\t\ttextModelService.canHandleResource(activeResource)\n\t\t) {\n\t\t\tconst picks = await quickInputService.quickAccess.pick(\"\", {\n\t\t\t\titemActivation: ItemActivation.SECOND,\n\t\t\t});\n\t\t\tif (picks?.length === 1) {\n\t\t\t\tconst resource = (picks[0] as unknown as { resource: unknown })\n\t\t\t\t\t.resource;\n\t\t\t\tif (\n\t\t\t\t\tURI.isUri(resource) &&\n\t\t\t\t\ttextModelService.canHandleResource(resource)\n\t\t\t\t) {\n\t\t\t\t\teditorService.openEditor({\n\t\t\t\t\t\toriginal: { resource: activeResource },\n\t\t\t\t\t\tmodified: { resource: resource },\n\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class ToggleAutoSaveAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.toggleAutoSave\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleAutoSaveAction.ID,\n\t\t\ttitle: nls.localize2(\"toggleAutoSave\", \"Toggle Auto Save\"),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\"toggleAutoSaveDescription\",\n\t\t\t\t\t\"Toggle the ability to save files automatically after typing\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst filesConfigurationService = accessor.get(\n\t\t\tIFilesConfigurationService,\n\t\t);\n\t\treturn filesConfigurationService.toggleAutoSave();\n\t}\n}\n\nabstract class BaseSaveAllAction extends Action {\n\tprivate lastDirtyState: boolean;\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@INotificationService private notificationService: INotificationService,\n\t\t@IWorkingCopyService\n\t\tprivate readonly workingCopyService: IWorkingCopyService,\n\t) {\n\t\tsuper(id, label);\n\n\t\tthis.lastDirtyState = this.workingCopyService.hasDirty;\n\t\tthis.enabled = this.lastDirtyState;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected abstract doRun(context: unknown): Promise<void>;\n\n\tprivate registerListeners(): void {\n\t\t// update enablement based on working copy changes\n\t\tthis._register(\n\t\t\tthis.workingCopyService.onDidChangeDirty((workingCopy) =>\n\t\t\t\tthis.updateEnablement(workingCopy),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate updateEnablement(workingCopy: IWorkingCopy): void {\n\t\tconst hasDirty =\n\t\t\tworkingCopy.isDirty() || this.workingCopyService.hasDirty;\n\t\tif (this.lastDirtyState !== hasDirty) {\n\t\t\tthis.enabled = hasDirty;\n\t\t\tthis.lastDirtyState = this.enabled;\n\t\t}\n\t}\n\n\toverride async run(context?: unknown): Promise<void> {\n\t\ttry {\n\t\t\tawait this.doRun(context);\n\t\t} catch (error) {\n\t\t\tonError(this.notificationService, error);\n\t\t}\n\t}\n}\n\nexport class SaveAllInGroupAction extends BaseSaveAllAction {\n\tstatic readonly ID = \"workbench.files.action.saveAllInGroup\";\n\tstatic readonly LABEL = nls.localize(\"saveAllInGroup\", \"Save All in Group\");\n\n\toverride get class(): string {\n\t\treturn \"explorer-action \" + ThemeIcon.asClassName(Codicon.saveAll);\n\t}\n\n\tprotected doRun(context: unknown): Promise<void> {\n\t\treturn this.commandService.executeCommand(\n\t\t\tSAVE_ALL_IN_GROUP_COMMAND_ID,\n\t\t\t{},\n\t\t\tcontext,\n\t\t);\n\t}\n}\n\nexport class CloseGroupAction extends Action {\n\tstatic readonly ID = \"workbench.files.action.closeGroup\";\n\tstatic readonly LABEL = nls.localize(\"closeGroup\", \"Close Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(Codicon.closeAll));\n\t}\n\n\toverride run(context?: unknown): Promise<void> {\n\t\treturn this.commandService.executeCommand(\n\t\t\tCLOSE_EDITORS_AND_GROUP_COMMAND_ID,\n\t\t\t{},\n\t\t\tcontext,\n\t\t);\n\t}\n}\n\nexport class FocusFilesExplorer extends Action2 {\n\tstatic readonly ID = \"workbench.files.action.focusFilesExplorer\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"focusFilesExplorer\",\n\t\t\"Focus on Files Explorer\",\n\t);\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FocusFilesExplorer.ID,\n\t\t\ttitle: FocusFilesExplorer.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\"focusFilesExplorerMetadata\",\n\t\t\t\t\t\"Moves focus to the file explorer view container.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tawait paneCompositeService.openPaneComposite(\n\t\t\tVIEWLET_ID,\n\t\t\tViewContainerLocation.Sidebar,\n\t\t\ttrue,\n\t\t);\n\t}\n}\n\nexport class ShowActiveFileInExplorer extends Action2 {\n\tstatic readonly ID = \"workbench.files.action.showActiveFileInExplorer\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"showInExplorer\",\n\t\t\"Reveal Active File in Explorer View\",\n\t);\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowActiveFileInExplorer.ID,\n\t\t\ttitle: ShowActiveFileInExplorer.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\"showInExplorerMetadata\",\n\t\t\t\t\t\"Reveals and selects the active file within the explorer view.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(\n\t\t\teditorService.activeEditor,\n\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t);\n\t\tif (resource) {\n\t\t\tcommandService.executeCommand(\n\t\t\t\tREVEAL_IN_EXPLORER_COMMAND_ID,\n\t\t\t\tresource,\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport class OpenActiveFileInEmptyWorkspace extends Action2 {\n\tstatic readonly ID = \"workbench.action.files.showOpenedFileInNewWindow\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"openFileInEmptyWorkspace\",\n\t\t\"Open Active File in New Empty Workspace\",\n\t);\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenActiveFileInEmptyWorkspace.ID,\n\t\t\ttitle: OpenActiveFileInEmptyWorkspace.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tprecondition: EmptyWorkspaceSupportContext,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\"openFileInEmptyWorkspaceMetadata\",\n\t\t\t\t\t\"Opens the active file in a new window with no folders open.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\tconst fileResource = EditorResourceAccessor.getOriginalUri(\n\t\t\teditorService.activeEditor,\n\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t);\n\t\tif (fileResource) {\n\t\t\tif (fileService.hasProvider(fileResource)) {\n\t\t\t\thostService.openWindow([{ fileUri: fileResource }], {\n\t\t\t\t\tforceNewWindow: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdialogService.error(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"openFileToShowInNewWindow.unsupportedschema\",\n\t\t\t\t\t\t\"The active editor must contain an openable resource.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function validateFileName(\n\tpathService: IPathService,\n\titem: ExplorerItem,\n\tname: string,\n\tos: OperatingSystem,\n): { content: string; severity: Severity } | null {\n\t// Produce a well formed file name\n\tname = getWellFormedFileName(name);\n\n\t// Name not provided\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn {\n\t\t\tcontent: nls.localize(\n\t\t\t\t\"emptyFileNameError\",\n\t\t\t\t\"A file or folder name must be provided.\",\n\t\t\t),\n\t\t\tseverity: Severity.Error,\n\t\t};\n\t}\n\n\t// Relative paths only\n\tif (name[0] === \"/\" || name[0] === \"\\\\\") {\n\t\treturn {\n\t\t\tcontent: nls.localize(\n\t\t\t\t\"fileNameStartsWithSlashError\",\n\t\t\t\t\"A file or folder name cannot start with a slash.\",\n\t\t\t),\n\t\t\tseverity: Severity.Error,\n\t\t};\n\t}\n\n\tconst names = coalesce(name.split(/[\\\\/]/));\n\tconst parent = item.parent;\n\n\tif (name !== item.name) {\n\t\t// Do not allow to overwrite existing file\n\t\tconst child = parent?.getChild(name);\n\t\tif (child && child !== item) {\n\t\t\treturn {\n\t\t\t\tcontent: nls.localize(\n\t\t\t\t\t\"fileNameExistsError\",\n\t\t\t\t\t\"A file or folder **{0}** already exists at this location. Please choose a different name.\",\n\t\t\t\t\tname,\n\t\t\t\t),\n\t\t\t\tseverity: Severity.Error,\n\t\t\t};\n\t\t}\n\t}\n\n\t// Check for invalid file name.\n\tif (\n\t\tnames.some(\n\t\t\t(folderName) =>\n\t\t\t\t!pathService.hasValidBasename(item.resource, os, folderName),\n\t\t)\n\t) {\n\t\t// Escape * characters\n\t\tconst escapedName = name.replace(/\\*/g, \"\\\\*\"); // CodeQL [SM02383] This only processes filenames which are enforced against having backslashes in them farther up in the stack.\n\t\treturn {\n\t\t\tcontent: nls.localize(\n\t\t\t\t\"invalidFileNameError\",\n\t\t\t\t\"The name **{0}** is not valid as a file or folder name. Please choose a different name.\",\n\t\t\t\ttrimLongName(escapedName),\n\t\t\t),\n\t\t\tseverity: Severity.Error,\n\t\t};\n\t}\n\n\tif (names.some((name) => /^\\s|\\s$/.test(name))) {\n\t\treturn {\n\t\t\tcontent: nls.localize(\n\t\t\t\t\"fileNameWhitespaceWarning\",\n\t\t\t\t\"Leading or trailing whitespace detected in file or folder name.\",\n\t\t\t),\n\t\t\tseverity: Severity.Warning,\n\t\t};\n\t}\n\n\treturn null;\n}\n\nfunction trimLongName(name: string): string {\n\tif (name?.length > 255) {\n\t\treturn `${name.substr(0, 255)}...`;\n\t}\n\n\treturn name;\n}\n\nfunction getWellFormedFileName(filename: string): string {\n\tif (!filename) {\n\t\treturn filename;\n\t}\n\n\t// Trim tabs\n\tfilename = trim(filename, \"\\t\");\n\n\t// Remove trailing slashes\n\tfilename = rtrim(filename, \"/\");\n\tfilename = rtrim(filename, \"\\\\\");\n\n\treturn filename;\n}\n\nexport class CompareNewUntitledTextFilesAction extends Action2 {\n\tstatic readonly ID = \"workbench.files.action.compareNewUntitledTextFiles\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"compareNewUntitledTextFiles\",\n\t\t\"Compare New Untitled Text Files\",\n\t);\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CompareNewUntitledTextFilesAction.ID,\n\t\t\ttitle: CompareNewUntitledTextFilesAction.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\"compareNewUntitledTextFilesMeta\",\n\t\t\t\t\t\"Opens a new diff editor with two untitled files.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tawait editorService.openEditor({\n\t\t\toriginal: { resource: undefined },\n\t\t\tmodified: { resource: undefined },\n\t\t\toptions: { pinned: true },\n\t\t});\n\t}\n}\n\nexport class CompareWithClipboardAction extends Action2 {\n\tstatic readonly ID = \"workbench.files.action.compareWithClipboard\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"compareWithClipboard\",\n\t\t\"Compare Active File with Clipboard\",\n\t);\n\n\tprivate registrationDisposal: IDisposable | undefined;\n\tprivate static SCHEME_COUNTER = 0;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CompareWithClipboardAction.ID,\n\t\t\ttitle: CompareWithClipboardAction.LABEL,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyC),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\"compareWithClipboardMeta\",\n\t\t\t\t\t\"Opens a new diff editor to compare the active file with the contents of the clipboard.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(\n\t\t\teditorService.activeEditor,\n\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t);\n\t\tconst scheme = `clipboardCompare${CompareWithClipboardAction.SCHEME_COUNTER++}`;\n\t\tif (\n\t\t\tresource &&\n\t\t\t(fileService.hasProvider(resource) ||\n\t\t\t\tresource.scheme === Schemas.untitled)\n\t\t) {\n\t\t\tif (!this.registrationDisposal) {\n\t\t\t\tconst provider = instantiationService.createInstance(\n\t\t\t\t\tClipboardContentProvider,\n\t\t\t\t);\n\t\t\t\tthis.registrationDisposal =\n\t\t\t\t\ttextModelService.registerTextModelContentProvider(\n\t\t\t\t\t\tscheme,\n\t\t\t\t\t\tprovider,\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst name = resources.basename(resource);\n\t\t\tconst editorLabel = nls.localize(\n\t\t\t\t\"clipboardComparisonLabel\",\n\t\t\t\t\"Clipboard \u2194 {0}\",\n\t\t\t\tname,\n\t\t\t);\n\n\t\t\tawait editorService\n\t\t\t\t.openEditor({\n\t\t\t\t\toriginal: { resource: resource.with({ scheme }) },\n\t\t\t\t\tmodified: { resource: resource },\n\t\t\t\t\tlabel: editorLabel,\n\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tdispose(this.registrationDisposal);\n\t\t\t\t\tthis.registrationDisposal = undefined;\n\t\t\t\t});\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.registrationDisposal);\n\t\tthis.registrationDisposal = undefined;\n\t}\n}\n\nclass ClipboardContentProvider implements ITextModelContentProvider {\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t) {}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel> {\n\t\tconst text = await this.clipboardService.readText();\n\t\tconst model = this.modelService.createModel(\n\t\t\ttext,\n\t\t\tthis.languageService.createByFilepathOrFirstLine(resource),\n\t\t\tresource,\n\t\t);\n\n\t\treturn model;\n\t}\n}\n\nfunction onErrorWithRetry(\n\tnotificationService: INotificationService,\n\terror: unknown,\n\tretry: () => Promise<unknown>,\n): void {\n\tnotificationService.prompt(Severity.Error, toErrorMessage(error, false), [\n\t\t{\n\t\t\tlabel: nls.localize(\"retry\", \"Retry\"),\n\t\t\trun: () => retry(),\n\t\t},\n\t]);\n}\n\nasync function openExplorerAndCreate(\n\taccessor: ServicesAccessor,\n\tisFolder: boolean,\n): Promise<void> {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst fileService = accessor.get(IFileService);\n\tconst configService = accessor.get(IConfigurationService);\n\tconst filesConfigService = accessor.get(IFilesConfigurationService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst remoteAgentService = accessor.get(IRemoteAgentService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst pathService = accessor.get(IPathService);\n\n\tconst wasHidden = !viewsService.isViewVisible(VIEW_ID);\n\tconst view = await viewsService.openView(VIEW_ID, true);\n\tif (wasHidden) {\n\t\t// Give explorer some time to resolve itself #111218\n\t\tawait timeout(500);\n\t}\n\tif (!view) {\n\t\t// Can happen in empty workspace case (https://github.com/microsoft/vscode/issues/100604)\n\n\t\tif (isFolder) {\n\t\t\tthrow new Error(\"Open a folder or workspace first.\");\n\t\t}\n\n\t\treturn commandService.executeCommand(NEW_UNTITLED_FILE_COMMAND_ID);\n\t}\n\n\tconst stats = explorerService.getContext(false);\n\tconst stat = stats.length > 0 ? stats[0] : undefined;\n\tlet folder: ExplorerItem;\n\tif (stat) {\n\t\tfolder = stat.isDirectory\n\t\t\t? stat\n\t\t\t: stat.parent || explorerService.roots[0];\n\t} else {\n\t\tfolder = explorerService.roots[0];\n\t}\n\n\tif (folder.isReadonly) {\n\t\tthrow new Error(\"Parent folder is readonly.\");\n\t}\n\n\tconst newStat = new NewExplorerItem(\n\t\tfileService,\n\t\tconfigService,\n\t\tfilesConfigService,\n\t\tfolder,\n\t\tisFolder,\n\t);\n\tfolder.addChild(newStat);\n\n\tconst onSuccess = async (value: string): Promise<void> => {\n\t\ttry {\n\t\t\tconst resourceToCreate = resources.joinPath(folder.resource, value);\n\t\t\tif (value.endsWith(\"/\")) {\n\t\t\t\tisFolder = true;\n\t\t\t}\n\t\t\tawait explorerService.applyBulkEdit(\n\t\t\t\t[\n\t\t\t\t\tnew ResourceFileEdit(undefined, resourceToCreate, {\n\t\t\t\t\t\tfolder: isFolder,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tundoLabel: nls.localize(\n\t\t\t\t\t\t\"createBulkEdit\",\n\t\t\t\t\t\t\"Create {0}\",\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t),\n\t\t\t\t\tprogressLabel: nls.localize(\n\t\t\t\t\t\t\"creatingBulkEdit\",\n\t\t\t\t\t\t\"Creating {0}\",\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t),\n\t\t\t\t\tconfirmBeforeUndo: true,\n\t\t\t\t},\n\t\t\t);\n\t\t\tawait refreshIfSeparator(value, explorerService);\n\n\t\t\tif (isFolder) {\n\t\t\t\tawait explorerService.select(resourceToCreate, true);\n\t\t\t} else {\n\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\tresource: resourceToCreate,\n\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tonErrorWithRetry(notificationService, error, () =>\n\t\t\t\tonSuccess(value),\n\t\t\t);\n\t\t}\n\t};\n\n\tconst os = (await remoteAgentService.getEnvironment())?.os ?? OS;\n\n\tawait explorerService.setEditable(newStat, {\n\t\tvalidationMessage: (value) =>\n\t\t\tvalidateFileName(pathService, newStat, value, os),\n\t\tonFinish: async (value, success) => {\n\t\t\tfolder.removeChild(newStat);\n\t\t\tawait explorerService.setEditable(newStat, null);\n\t\t\tif (success) {\n\t\t\t\tonSuccess(value);\n\t\t\t}\n\t\t},\n\t});\n}\n\nCommandsRegistry.registerCommand({\n\tid: NEW_FILE_COMMAND_ID,\n\thandler: async (accessor) => {\n\t\tawait openExplorerAndCreate(accessor, false);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: NEW_FOLDER_COMMAND_ID,\n\thandler: async (accessor) => {\n\t\tawait openExplorerAndCreate(accessor, true);\n\t},\n});\n\nexport const renameHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst remoteAgentService = accessor.get(IRemoteAgentService);\n\tconst pathService = accessor.get(IPathService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\n\tconst stats = explorerService.getContext(false);\n\tconst stat = stats.length > 0 ? stats[0] : undefined;\n\tif (!stat) {\n\t\treturn;\n\t}\n\n\tconst os = (await remoteAgentService.getEnvironment())?.os ?? OS;\n\n\tawait explorerService.setEditable(stat, {\n\t\tvalidationMessage: (value) =>\n\t\t\tvalidateFileName(pathService, stat, value, os),\n\t\tonFinish: async (value, success) => {\n\t\t\tif (success) {\n\t\t\t\tconst parentResource = stat.parent!.resource;\n\t\t\t\tconst targetResource = resources.joinPath(\n\t\t\t\t\tparentResource,\n\t\t\t\t\tvalue,\n\t\t\t\t);\n\t\t\t\tif (stat.resource.toString() !== targetResource.toString()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait explorerService.applyBulkEdit(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tnew ResourceFileEdit(\n\t\t\t\t\t\t\t\t\tstat.resource,\n\t\t\t\t\t\t\t\t\ttargetResource,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconfirmBeforeUndo:\n\t\t\t\t\t\t\t\t\tconfigurationService.getValue<IFilesConfiguration>()\n\t\t\t\t\t\t\t\t\t\t.explorer.confirmUndo ===\n\t\t\t\t\t\t\t\t\tUndoConfirmLevel.Verbose,\n\t\t\t\t\t\t\t\tundoLabel: nls.localize(\n\t\t\t\t\t\t\t\t\t\"renameBulkEdit\",\n\t\t\t\t\t\t\t\t\t\"Rename {0} to {1}\",\n\t\t\t\t\t\t\t\t\tstat.name,\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tprogressLabel: nls.localize(\n\t\t\t\t\t\t\t\t\t\"renamingBulkEdit\",\n\t\t\t\t\t\t\t\t\t\"Renaming {0} to {1}\",\n\t\t\t\t\t\t\t\t\tstat.name,\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait refreshIfSeparator(value, explorerService);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tnotificationService.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait explorerService.setEditable(stat, null);\n\t\t},\n\t});\n};\n\nexport const moveFileToTrashHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true).filter((s) => !s.isRoot);\n\tif (stats.length) {\n\t\tawait deleteFiles(\n\t\t\taccessor.get(IExplorerService),\n\t\t\taccessor.get(IWorkingCopyFileService),\n\t\t\taccessor.get(IDialogService),\n\t\t\taccessor.get(IConfigurationService),\n\t\t\tstats,\n\t\t\ttrue,\n\t\t);\n\t}\n};\n\nexport const deleteFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true).filter((s) => !s.isRoot);\n\n\tif (stats.length) {\n\t\tawait deleteFiles(\n\t\t\taccessor.get(IExplorerService),\n\t\t\taccessor.get(IWorkingCopyFileService),\n\t\t\taccessor.get(IDialogService),\n\t\t\taccessor.get(IConfigurationService),\n\t\t\tstats,\n\t\t\tfalse,\n\t\t);\n\t}\n};\n\nlet pasteShouldMove = false;\nexport const copyFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true);\n\tif (stats.length > 0) {\n\t\tawait explorerService.setToCopy(stats, false);\n\t\tpasteShouldMove = false;\n\t}\n};\n\nexport const cutFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true);\n\tif (stats.length > 0) {\n\t\tawait explorerService.setToCopy(stats, true);\n\t\tpasteShouldMove = true;\n\t}\n};\n\nconst downloadFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\n\tconst context = explorerService.getContext(true);\n\tconst explorerItems = context.length ? context : explorerService.roots;\n\n\tconst downloadHandler = instantiationService.createInstance(FileDownload);\n\n\ttry {\n\t\tawait downloadHandler.download(explorerItems);\n\t} catch (error) {\n\t\tnotificationService.error(error);\n\n\t\tthrow error;\n\t}\n};\n\nCommandsRegistry.registerCommand({\n\tid: DOWNLOAD_COMMAND_ID,\n\thandler: downloadFileHandler,\n});\n\nconst uploadFileHandler = async (accessor: ServicesAccessor) => {\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\n\tconst context = explorerService.getContext(false);\n\tconst element = context.length ? context[0] : explorerService.roots[0];\n\n\ttry {\n\t\tconst files = await triggerUpload();\n\t\tif (files) {\n\t\t\tconst browserUpload =\n\t\t\t\tinstantiationService.createInstance(BrowserFileUpload);\n\t\t\tawait browserUpload.upload(element, files);\n\t\t}\n\t} catch (error) {\n\t\tnotificationService.error(error);\n\n\t\tthrow error;\n\t}\n};\n\nCommandsRegistry.registerCommand({\n\tid: UPLOAD_COMMAND_ID,\n\thandler: uploadFileHandler,\n});\n\nexport const pasteFileHandler = async (\n\taccessor: ServicesAccessor,\n\tfileList?: FileList,\n) => {\n\tconst clipboardService = accessor.get(IClipboardService);\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst fileService = accessor.get(IFileService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\tconst dialogService = accessor.get(IDialogService);\n\tconst hostService = accessor.get(IHostService);\n\n\tconst context = explorerService.getContext(false);\n\tconst hasNativeFilesToPaste = fileList && fileList.length > 0;\n\tconst confirmPasteNative =\n\t\thasNativeFilesToPaste &&\n\t\tconfigurationService.getValue<boolean>(\"explorer.confirmPasteNative\");\n\n\tconst toPaste = await getFilesToPaste(\n\t\tfileList,\n\t\tclipboardService,\n\t\thostService,\n\t);\n\n\tif (confirmPasteNative && toPaste.files.length >= 1) {\n\t\tconst message =\n\t\t\ttoPaste.files.length > 1\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"confirmMultiPasteNative\",\n\t\t\t\t\t\t\"Are you sure you want to paste the following {0} items?\",\n\t\t\t\t\t\ttoPaste.files.length,\n\t\t\t\t\t)\n\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\"confirmPasteNative\",\n\t\t\t\t\t\t\"Are you sure you want to paste '{0}'?\",\n\t\t\t\t\t\tbasename(\n\t\t\t\t\t\t\ttoPaste.type === \"paths\"\n\t\t\t\t\t\t\t\t? toPaste.files[0].fsPath\n\t\t\t\t\t\t\t\t: toPaste.files[0].name,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\tconst detail =\n\t\t\ttoPaste.files.length > 1\n\t\t\t\t? getFileNamesMessage(\n\t\t\t\t\t\ttoPaste.files.map((item) => {\n\t\t\t\t\t\t\tif (URI.isUri(item)) {\n\t\t\t\t\t\t\t\treturn item.fsPath;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (toPaste.type === \"paths\") {\n\t\t\t\t\t\t\t\tconst path = hostService.getPathForFile(item);\n\t\t\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn item.name;\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t: undefined;\n\t\tconst confirmation = await dialogService.confirm({\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tcheckbox: {\n\t\t\t\tlabel: nls.localize(\"doNotAskAgain\", \"Do not ask me again\"),\n\t\t\t},\n\t\t\tprimaryButton: nls.localize(\n\t\t\t\t{ key: \"pasteButtonLabel\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Paste\",\n\t\t\t),\n\t\t});\n\n\t\tif (!confirmation.confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check for confirmation checkbox\n\t\tif (confirmation.checkboxChecked === true) {\n\t\t\tawait configurationService.updateValue(\n\t\t\t\t\"explorer.confirmPasteNative\",\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\t}\n\tconst element = context.length ? context[0] : explorerService.roots[0];\n\tconst incrementalNaming =\n\t\tconfigurationService.getValue<IFilesConfiguration>().explorer\n\t\t\t.incrementalNaming;\n\n\tconst editableItem = explorerService.getEditable();\n\t// If it's an editable item, just do nothing\n\tif (editableItem) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tlet targets: URI[] = [];\n\n\t\tif (toPaste.type === \"paths\") {\n\t\t\t// Pasting from files on disk\n\n\t\t\t// Check if target is ancestor of pasted folder\n\t\t\tconst sourceTargetPairs = coalesce(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\ttoPaste.files.map(async (fileToPaste) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\telement.resource.toString() !==\n\t\t\t\t\t\t\t\tfileToPaste.toString() &&\n\t\t\t\t\t\t\tresources.isEqualOrParent(\n\t\t\t\t\t\t\t\telement.resource,\n\t\t\t\t\t\t\t\tfileToPaste,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"fileIsAncestor\",\n\t\t\t\t\t\t\t\t\t\"File to paste is an ancestor of the destination folder\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst fileToPasteStat =\n\t\t\t\t\t\t\tawait fileService.stat(fileToPaste);\n\n\t\t\t\t\t\t// Find target\n\t\t\t\t\t\tlet target: ExplorerItem;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\turiIdentityService.extUri.isEqual(\n\t\t\t\t\t\t\t\telement.resource,\n\t\t\t\t\t\t\t\tfileToPaste,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\ttarget = element.parent!;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget = element.isDirectory\n\t\t\t\t\t\t\t\t? element\n\t\t\t\t\t\t\t\t: element.parent!;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst targetFile = await findValidPasteFileTarget(\n\t\t\t\t\t\t\texplorerService,\n\t\t\t\t\t\t\tfileService,\n\t\t\t\t\t\t\tdialogService,\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresource: fileToPaste,\n\t\t\t\t\t\t\t\tisDirectory: fileToPasteStat.isDirectory,\n\t\t\t\t\t\t\t\tallowOverwrite:\n\t\t\t\t\t\t\t\t\tpasteShouldMove ||\n\t\t\t\t\t\t\t\t\tincrementalNaming === \"disabled\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincrementalNaming,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!targetFile) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn { source: fileToPaste, target: targetFile };\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (sourceTargetPairs.length >= 1) {\n\t\t\t\t// Move/Copy File\n\t\t\t\tif (pasteShouldMove) {\n\t\t\t\t\tconst resourceFileEdits = sourceTargetPairs.map(\n\t\t\t\t\t\t(pair) =>\n\t\t\t\t\t\t\tnew ResourceFileEdit(pair.source, pair.target, {\n\t\t\t\t\t\t\t\toverwrite: incrementalNaming === \"disabled\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tconst options = {\n\t\t\t\t\t\tconfirmBeforeUndo:\n\t\t\t\t\t\t\tconfigurationService.getValue<IFilesConfiguration>()\n\t\t\t\t\t\t\t\t.explorer.confirmUndo ===\n\t\t\t\t\t\t\tUndoConfirmLevel.Verbose,\n\t\t\t\t\t\tprogressLabel:\n\t\t\t\t\t\t\tsourceTargetPairs.length > 1\n\t\t\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tkey: \"movingBulkEdit\",\n\t\t\t\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the number of files being moved\",\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"Moving {0} files\",\n\t\t\t\t\t\t\t\t\t\tsourceTargetPairs.length,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tkey: \"movingFileBulkEdit\",\n\t\t\t\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the name of the file moved.\",\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"Moving {0}\",\n\t\t\t\t\t\t\t\t\t\tresources.basenameOrAuthority(\n\t\t\t\t\t\t\t\t\t\t\tsourceTargetPairs[0].target,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\tundoLabel:\n\t\t\t\t\t\t\tsourceTargetPairs.length > 1\n\t\t\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tkey: \"moveBulkEdit\",\n\t\t\t\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the number of files being moved\",\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"Move {0} files\",\n\t\t\t\t\t\t\t\t\t\tsourceTargetPairs.length,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tkey: \"moveFileBulkEdit\",\n\t\t\t\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the name of the file moved.\",\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"Move {0}\",\n\t\t\t\t\t\t\t\t\t\tresources.basenameOrAuthority(\n\t\t\t\t\t\t\t\t\t\t\tsourceTargetPairs[0].target,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t\tawait explorerService.applyBulkEdit(\n\t\t\t\t\t\tresourceFileEdits,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst resourceFileEdits = sourceTargetPairs.map(\n\t\t\t\t\t\t(pair) =>\n\t\t\t\t\t\t\tnew ResourceFileEdit(pair.source, pair.target, {\n\t\t\t\t\t\t\t\tcopy: true,\n\t\t\t\t\t\t\t\toverwrite: incrementalNaming === \"disabled\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tawait applyCopyResourceEdit(\n\t\t\t\t\t\tsourceTargetPairs.map((pair) => pair.target),\n\t\t\t\t\t\tresourceFileEdits,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargets = sourceTargetPairs.map((pair) => pair.target);\n\t\t} else {\n\t\t\t// Pasting from file data\n\t\t\tconst targetAndEdits = coalesce(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\ttoPaste.files.map(async (file) => {\n\t\t\t\t\t\tconst target = element.isDirectory\n\t\t\t\t\t\t\t? element\n\t\t\t\t\t\t\t: element.parent!;\n\n\t\t\t\t\t\tconst targetFile = await findValidPasteFileTarget(\n\t\t\t\t\t\t\texplorerService,\n\t\t\t\t\t\t\tfileService,\n\t\t\t\t\t\t\tdialogService,\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresource: file.name,\n\t\t\t\t\t\t\t\tisDirectory: false,\n\t\t\t\t\t\t\t\tallowOverwrite:\n\t\t\t\t\t\t\t\t\tpasteShouldMove ||\n\t\t\t\t\t\t\t\t\tincrementalNaming === \"disabled\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincrementalNaming,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!targetFile) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttarget: targetFile,\n\t\t\t\t\t\t\tedit: new ResourceFileEdit(undefined, targetFile, {\n\t\t\t\t\t\t\t\toverwrite: incrementalNaming === \"disabled\",\n\t\t\t\t\t\t\t\tcontents: (async () =>\n\t\t\t\t\t\t\t\t\tVSBuffer.wrap(\n\t\t\t\t\t\t\t\t\t\tnew Uint8Array(\n\t\t\t\t\t\t\t\t\t\t\tawait file.arrayBuffer(),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t))(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tawait applyCopyResourceEdit(\n\t\t\t\ttargetAndEdits.map((pair) => pair.target),\n\t\t\t\ttargetAndEdits.map((pair) => pair.edit),\n\t\t\t);\n\t\t\ttargets = targetAndEdits.map((pair) => pair.target);\n\t\t}\n\n\t\tif (targets.length) {\n\t\t\tconst firstTarget = targets[0];\n\t\t\tawait explorerService.select(firstTarget);\n\t\t\tif (targets.length === 1) {\n\t\t\t\tconst item = explorerService.findClosest(firstTarget);\n\t\t\t\tif (item && !item.isDirectory) {\n\t\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\t\tresource: item.resource,\n\t\t\t\t\t\toptions: { pinned: true, preserveFocus: true },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\tonError(\n\t\t\tnotificationService,\n\t\t\tnew Error(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"fileDeleted\",\n\t\t\t\t\t\"The file(s) to paste have been deleted or moved since you copied them. {0}\",\n\t\t\t\t\tgetErrorMessage(e),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t} finally {\n\t\tif (pasteShouldMove) {\n\t\t\t// Cut is done. Make sure to clear cut state.\n\t\t\tawait explorerService.setToCopy([], false);\n\t\t\tpasteShouldMove = false;\n\t\t}\n\t}\n\n\tasync function applyCopyResourceEdit(\n\t\ttargets: readonly URI[],\n\t\tresourceFileEdits: ResourceFileEdit[],\n\t) {\n\t\tconst undoLevel =\n\t\t\tconfigurationService.getValue<IFilesConfiguration>().explorer\n\t\t\t\t.confirmUndo;\n\t\tconst options = {\n\t\t\tconfirmBeforeUndo:\n\t\t\t\tundoLevel === UndoConfirmLevel.Default ||\n\t\t\t\tundoLevel === UndoConfirmLevel.Verbose,\n\t\t\tprogressLabel:\n\t\t\t\ttargets.length > 1\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"copyingBulkEdit\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the number of files being copied\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Copying {0} files\",\n\t\t\t\t\t\t\ttargets.length,\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"copyingFileBulkEdit\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the name of the file copied.\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Copying {0}\",\n\t\t\t\t\t\t\tresources.basenameOrAuthority(targets[0]),\n\t\t\t\t\t\t),\n\t\t\tundoLabel:\n\t\t\t\ttargets.length > 1\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"copyBulkEdit\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the number of files being copied\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Paste {0} files\",\n\t\t\t\t\t\t\ttargets.length,\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"copyFileBulkEdit\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"Placeholder will be replaced by the name of the file copied.\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Paste {0}\",\n\t\t\t\t\t\t\tresources.basenameOrAuthority(targets[0]),\n\t\t\t\t\t\t),\n\t\t};\n\t\tawait explorerService.applyBulkEdit(resourceFileEdits, options);\n\t}\n};\n\ntype FilesToPaste =\n\t| { type: \"paths\"; files: URI[] }\n\t| { type: \"data\"; files: File[] };\n\nasync function getFilesToPaste(\n\tfileList: FileList | undefined,\n\tclipboardService: IClipboardService,\n\thostService: IHostService,\n): Promise<FilesToPaste> {\n\tif (fileList && fileList.length > 0) {\n\t\t// with a `fileList` we support natively pasting file from disk from clipboard\n\t\tconst resources = [...fileList]\n\t\t\t.map((file) => hostService.getPathForFile(file))\n\t\t\t.filter((filePath) => !!filePath && isAbsolute(filePath))\n\t\t\t.map((filePath) => URI.file(filePath!));\n\t\tif (resources.length) {\n\t\t\treturn { type: \"paths\", files: resources };\n\t\t}\n\n\t\t// Support pasting files that we can't read from disk\n\t\treturn {\n\t\t\ttype: \"data\",\n\t\t\tfiles: [...fileList].filter(\n\t\t\t\t(file) => !hostService.getPathForFile(file),\n\t\t\t),\n\t\t};\n\t} else {\n\t\t// otherwise we fallback to reading resources from our clipboard service\n\t\treturn {\n\t\t\ttype: \"paths\",\n\t\t\tfiles: resources.distinctParents(\n\t\t\t\tawait clipboardService.readResources(),\n\t\t\t\t(resource) => resource,\n\t\t\t),\n\t\t};\n\t}\n}\n\nexport const openFilePreserveFocusHandler = async (\n\taccessor: ServicesAccessor,\n) => {\n\tconst editorService = accessor.get(IEditorService);\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst stats = explorerService.getContext(true);\n\n\tawait editorService.openEditors(\n\t\tstats\n\t\t\t.filter((s) => !s.isDirectory)\n\t\t\t.map((s) => ({\n\t\t\t\tresource: s.resource,\n\t\t\t\toptions: { preserveFocus: true },\n\t\t\t})),\n\t);\n};\n\nclass BaseSetActiveEditorReadonlyInSession extends Action2 {\n\tconstructor(\n\t\tid: string,\n\t\ttitle: ILocalizedString,\n\t\tprivate readonly newReadonlyState: true | false | \"toggle\" | \"reset\",\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t\tprecondition: ActiveEditorCanToggleReadonlyContext,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst filesConfigurationService = accessor.get(\n\t\t\tIFilesConfigurationService,\n\t\t);\n\n\t\tconst fileResource = EditorResourceAccessor.getOriginalUri(\n\t\t\teditorService.activeEditor,\n\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t);\n\t\tif (!fileResource) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait filesConfigurationService.updateReadonly(\n\t\t\tfileResource,\n\t\t\tthis.newReadonlyState,\n\t\t);\n\t}\n}\n\nexport class SetActiveEditorReadonlyInSession extends BaseSetActiveEditorReadonlyInSession {\n\tstatic readonly ID =\n\t\t\"workbench.action.files.setActiveEditorReadonlyInSession\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"setActiveEditorReadonlyInSession\",\n\t\t\"Set Active Editor Read-only in Session\",\n\t);\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tSetActiveEditorReadonlyInSession.ID,\n\t\t\tSetActiveEditorReadonlyInSession.LABEL,\n\t\t\ttrue,\n\t\t);\n\t}\n}\n\nexport class SetActiveEditorWriteableInSession extends BaseSetActiveEditorReadonlyInSession {\n\tstatic readonly ID =\n\t\t\"workbench.action.files.setActiveEditorWriteableInSession\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"setActiveEditorWriteableInSession\",\n\t\t\"Set Active Editor Writeable in Session\",\n\t);\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tSetActiveEditorWriteableInSession.ID,\n\t\t\tSetActiveEditorWriteableInSession.LABEL,\n\t\t\tfalse,\n\t\t);\n\t}\n}\n\nexport class ToggleActiveEditorReadonlyInSession extends BaseSetActiveEditorReadonlyInSession {\n\tstatic readonly ID =\n\t\t\"workbench.action.files.toggleActiveEditorReadonlyInSession\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"toggleActiveEditorReadonlyInSession\",\n\t\t\"Toggle Active Editor Read-only in Session\",\n\t);\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tToggleActiveEditorReadonlyInSession.ID,\n\t\t\tToggleActiveEditorReadonlyInSession.LABEL,\n\t\t\t\"toggle\",\n\t\t);\n\t}\n}\n\nexport class ResetActiveEditorReadonlyInSession extends BaseSetActiveEditorReadonlyInSession {\n\tstatic readonly ID =\n\t\t\"workbench.action.files.resetActiveEditorReadonlyInSession\";\n\tstatic readonly LABEL = nls.localize2(\n\t\t\"resetActiveEditorReadonlyInSession\",\n\t\t\"Reset Active Editor Read-only in Session\",\n\t);\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tResetActiveEditorReadonlyInSession.ID,\n\t\t\tResetActiveEditorReadonlyInSession.LABEL,\n\t\t\t\"reset\",\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["primaryButton", "name", "resources"]
}
