{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/editors/textFileSaveErrorHandler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from \"../../../../../base/common/actions.js\";\nimport { toErrorMessage } from \"../../../../../base/common/errorMessage.js\";\nimport { Event } from \"../../../../../base/common/event.js\";\nimport { hash } from \"../../../../../base/common/hash.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../../base/common/map.js\";\nimport { Schemas } from \"../../../../../base/common/network.js\";\nimport { isWindows } from \"../../../../../base/common/platform.js\";\nimport { basename, isEqual } from \"../../../../../base/common/resources.js\";\nimport { URI } from \"../../../../../base/common/uri.js\";\nimport { ITextModelService } from \"../../../../../editor/common/services/resolverService.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\ttype FileOperationError,\n\tFileOperationResult,\n\ttype IWriteFileOptions,\n} from \"../../../../../platform/files/common/files.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\ttype INotificationActions,\n\ttype INotificationHandle,\n\tINotificationService,\n\tSeverity,\n} from \"../../../../../platform/notification/common/notification.js\";\nimport { IOpenerService } from \"../../../../../platform/opener/common/opener.js\";\nimport { IProductService } from \"../../../../../platform/product/common/productService.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../../platform/storage/common/storage.js\";\nimport type { IWorkbenchContribution } from \"../../../../common/contributions.js\";\nimport {\n\ttype IEditorIdentifier,\n\tSaveReason,\n\tSideBySideEditor,\n} from \"../../../../common/editor.js\";\nimport { DiffEditorInput } from \"../../../../common/editor/diffEditorInput.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\nimport { IPreferencesService } from \"../../../../services/preferences/common/preferences.js\";\nimport {\n\ttype ISaveErrorHandler,\n\ttype ITextFileEditorModel,\n\ttype ITextFileSaveAsOptions,\n\ttype ITextFileSaveOptions,\n\tITextFileService,\n} from \"../../../../services/textfile/common/textfiles.js\";\nimport { TextFileContentProvider } from \"../../common/files.js\";\nimport { SAVE_FILE_AS_LABEL } from \"../fileConstants.js\";\nimport { FileEditorInput } from \"./fileEditorInput.js\";\n\nexport const CONFLICT_RESOLUTION_CONTEXT = \"saveConflictResolutionContext\";\nexport const CONFLICT_RESOLUTION_SCHEME = \"conflictResolution\";\n\nconst LEARN_MORE_DIRTY_WRITE_IGNORE_KEY = \"learnMoreDirtyWriteError\";\n\nconst conflictEditorHelp = localize(\n\t\"userGuide\",\n\t\"Use the actions in the editor tool bar to either undo your changes or overwrite the content of the file with your changes.\",\n);\n\n// A handler for text file save error happening with conflict resolution actions\nexport class TextFileSaveErrorHandler\n\textends Disposable\n\timplements ISaveErrorHandler, IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.textFileSaveErrorHandler\";\n\n\tprivate readonly messages = new ResourceMap<INotificationHandle>();\n\tprivate readonly conflictResolutionContext = new RawContextKey<boolean>(\n\t\tCONFLICT_RESOLUTION_CONTEXT,\n\t\tfalse,\n\t\ttrue,\n\t).bindTo(this.contextKeyService);\n\tprivate activeConflictResolutionResource: URI | undefined = undefined;\n\n\tconstructor(\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService\n\t) {\n\t\tsuper();\n\n\t\tconst provider = this._register(instantiationService.createInstance(TextFileContentProvider));\n\t\tthis._register(textModelService.registerTextModelContentProvider(CONFLICT_RESOLUTION_SCHEME, provider));\n\n\t\t// Set as save error handler to service for text files\n\t\tthis.textFileService.files.saveErrorHandler = this;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis.textFileService.files.onDidSave((e) =>\n\t\t\t\tthis.onFileSavedOrReverted(e.model.resource),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.textFileService.files.onDidRevert((model) =>\n\t\t\t\tthis.onFileSavedOrReverted(model.resource),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editorService.onDidActiveEditorChange(() =>\n\t\t\t\tthis.onActiveEditorChanged(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onActiveEditorChanged(): void {\n\t\tlet isActiveEditorSaveConflictResolution = false;\n\t\tlet activeConflictResolutionResource: URI | undefined;\n\n\t\tconst activeInput = this.editorService.activeEditor;\n\t\tif (activeInput instanceof DiffEditorInput) {\n\t\t\tconst resource = activeInput.original.resource;\n\t\t\tif (resource?.scheme === CONFLICT_RESOLUTION_SCHEME) {\n\t\t\t\tisActiveEditorSaveConflictResolution = true;\n\t\t\t\tactiveConflictResolutionResource =\n\t\t\t\t\tactiveInput.modified.resource;\n\t\t\t}\n\t\t}\n\n\t\tthis.conflictResolutionContext.set(\n\t\t\tisActiveEditorSaveConflictResolution,\n\t\t);\n\t\tthis.activeConflictResolutionResource =\n\t\t\tactiveConflictResolutionResource;\n\t}\n\n\tprivate onFileSavedOrReverted(resource: URI): void {\n\t\tconst messageHandle = this.messages.get(resource);\n\t\tif (messageHandle) {\n\t\t\tmessageHandle.close();\n\t\t\tthis.messages.delete(resource);\n\t\t}\n\t}\n\n\tonSaveError(\n\t\terror: unknown,\n\t\tmodel: ITextFileEditorModel,\n\t\toptions: ITextFileSaveOptions,\n\t): void {\n\t\tconst fileOperationError = error as FileOperationError;\n\t\tconst resource = model.resource;\n\n\t\tlet message: string;\n\t\tconst primaryActions: Action[] = [];\n\t\tconst secondaryActions: Action[] = [];\n\n\t\t// Dirty write prevention\n\t\tif (\n\t\t\tfileOperationError.fileOperationResult ===\n\t\t\tFileOperationResult.FILE_MODIFIED_SINCE\n\t\t) {\n\t\t\t// If the user tried to save from the opened conflict editor, show its message again\n\t\t\tif (\n\t\t\t\tthis.activeConflictResolutionResource &&\n\t\t\t\tisEqual(this.activeConflictResolutionResource, model.resource)\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tthis.storageService.getBoolean(\n\t\t\t\t\t\tLEARN_MORE_DIRTY_WRITE_IGNORE_KEY,\n\t\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn; // return if this message is ignored\n\t\t\t\t}\n\n\t\t\t\tmessage = conflictEditorHelp;\n\n\t\t\t\tprimaryActions.push(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tResolveConflictLearnMoreAction,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tsecondaryActions.push(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tDoNotShowResolveConflictLearnMoreAction,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Otherwise show the message that will lead the user into the save conflict editor.\n\t\t\telse {\n\t\t\t\tmessage = localize(\n\t\t\t\t\t\"staleSaveError\",\n\t\t\t\t\t\"Failed to save '{0}': The content of the file is newer. Please compare your version with the file contents or overwrite the content of the file with your changes.\",\n\t\t\t\t\tbasename(resource),\n\t\t\t\t);\n\n\t\t\t\tprimaryActions.push(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tResolveSaveConflictAction,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tprimaryActions.push(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tSaveModelIgnoreModifiedSinceAction,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tsecondaryActions.push(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tConfigureSaveConflictAction,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Any other save error\n\t\telse {\n\t\t\tconst isWriteLocked =\n\t\t\t\tfileOperationError.fileOperationResult ===\n\t\t\t\tFileOperationResult.FILE_WRITE_LOCKED;\n\t\t\tconst triedToUnlock =\n\t\t\t\tisWriteLocked &&\n\t\t\t\t(fileOperationError.options as IWriteFileOptions | undefined)\n\t\t\t\t\t?.unlock;\n\t\t\tconst isPermissionDenied =\n\t\t\t\tfileOperationError.fileOperationResult ===\n\t\t\t\tFileOperationResult.FILE_PERMISSION_DENIED;\n\t\t\tconst canSaveElevated = resource.scheme === Schemas.file; // currently only supported for local schemes (https://github.com/microsoft/vscode/issues/48659)\n\n\t\t\t// Save Elevated\n\t\t\tif (canSaveElevated && (isPermissionDenied || triedToUnlock)) {\n\t\t\t\tprimaryActions.push(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tSaveModelElevatedAction,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\t!!triedToUnlock,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Unlock\n\t\t\telse if (isWriteLocked) {\n\t\t\t\tprimaryActions.push(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tUnlockModelAction,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Retry\n\t\t\telse {\n\t\t\t\tprimaryActions.push(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tRetrySaveModelAction,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Save As\n\t\t\tprimaryActions.push(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tSaveModelAsAction,\n\t\t\t\t\tmodel,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Revert\n\t\t\tprimaryActions.push(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tRevertModelAction,\n\t\t\t\t\tmodel,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Message\n\t\t\tif (isWriteLocked) {\n\t\t\t\tif (triedToUnlock && canSaveElevated) {\n\t\t\t\t\tmessage = isWindows\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\"readonlySaveErrorAdmin\",\n\t\t\t\t\t\t\t\t\"Failed to save '{0}': File is read-only. Select 'Overwrite as Admin' to retry as administrator.\",\n\t\t\t\t\t\t\t\tbasename(resource),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\"readonlySaveErrorSudo\",\n\t\t\t\t\t\t\t\t\"Failed to save '{0}': File is read-only. Select 'Overwrite as Sudo' to retry as superuser.\",\n\t\t\t\t\t\t\t\tbasename(resource),\n\t\t\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmessage = localize(\n\t\t\t\t\t\t\"readonlySaveError\",\n\t\t\t\t\t\t\"Failed to save '{0}': File is read-only. Select 'Overwrite' to attempt to make it writeable.\",\n\t\t\t\t\t\tbasename(resource),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (canSaveElevated && isPermissionDenied) {\n\t\t\t\tmessage = isWindows\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"permissionDeniedSaveError\",\n\t\t\t\t\t\t\t\"Failed to save '{0}': Insufficient permissions. Select 'Retry as Admin' to retry as administrator.\",\n\t\t\t\t\t\t\tbasename(resource),\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"permissionDeniedSaveErrorSudo\",\n\t\t\t\t\t\t\t\"Failed to save '{0}': Insufficient permissions. Select 'Retry as Sudo' to retry as superuser.\",\n\t\t\t\t\t\t\tbasename(resource),\n\t\t\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmessage = localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"genericSaveError\",\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"{0} is the resource that failed to save and {1} the error message\",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t\"Failed to save '{0}': {1}\",\n\t\t\t\t\tbasename(resource),\n\t\t\t\t\ttoErrorMessage(error, false),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Show message and keep function to hide in case the file gets saved/reverted\n\t\tconst actions: INotificationActions = {\n\t\t\tprimary: primaryActions,\n\t\t\tsecondary: secondaryActions,\n\t\t};\n\t\tconst handle = this.notificationService.notify({\n\t\t\tid: `${hash(model.resource.toString())}`, // unique per model (https://github.com/microsoft/vscode/issues/121539)\n\t\t\tseverity: Severity.Error,\n\t\t\tmessage,\n\t\t\tactions,\n\t\t});\n\t\tEvent.once(handle.onDidClose)(() => {\n\t\t\tdispose(primaryActions);\n\t\t\tdispose(secondaryActions);\n\t\t});\n\t\tthis.messages.set(model.resource, handle);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.messages.clear();\n\t}\n}\n\nconst pendingResolveSaveConflictMessages: INotificationHandle[] = [];\nfunction clearPendingResolveSaveConflictMessages(): void {\n\twhile (pendingResolveSaveConflictMessages.length > 0) {\n\t\tconst item = pendingResolveSaveConflictMessages.pop();\n\t\titem?.close();\n\t}\n}\n\nclass ResolveConflictLearnMoreAction extends Action {\n\tconstructor(\n\t\t@IOpenerService private readonly openerService: IOpenerService\n\t) {\n\t\tsuper('workbench.files.action.resolveConflictLearnMore', localize('learnMore', \"Learn More\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tawait this.openerService.open(\n\t\t\tURI.parse(\"https://go.microsoft.com/fwlink/?linkid=868264\"),\n\t\t);\n\t}\n}\n\nclass DoNotShowResolveConflictLearnMoreAction extends Action {\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService\n\t) {\n\t\tsuper('workbench.files.action.resolveConflictLearnMoreDoNotShowAgain', localize('dontShowAgain', \"Don't Show Again\"));\n\t}\n\n\toverride async run(notification: IDisposable): Promise<void> {\n\t\t// Remember this as application state\n\t\tthis.storageService.store(\n\t\t\tLEARN_MORE_DIRTY_WRITE_IGNORE_KEY,\n\t\t\ttrue,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.USER,\n\t\t);\n\n\t\t// Hide notification\n\t\tnotification.dispose();\n\t}\n}\n\nclass ResolveSaveConflictAction extends Action {\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper('workbench.files.action.resolveConflict', localize('compareChanges', \"Compare\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tconst resource = this.model.resource;\n\t\t\tconst name = basename(resource);\n\t\t\tconst editorLabel = localize(\n\t\t\t\t\"saveConflictDiffLabel\",\n\t\t\t\t\"{0} (in file) \u2194 {1} (in {2}) - Resolve save conflict\",\n\t\t\t\tname,\n\t\t\t\tname,\n\t\t\t\tthis.productService.nameLong,\n\t\t\t);\n\n\t\t\tawait TextFileContentProvider.open(\n\t\t\t\tresource,\n\t\t\t\tCONFLICT_RESOLUTION_SCHEME,\n\t\t\t\teditorLabel,\n\t\t\t\tthis.editorService,\n\t\t\t\t{ pinned: true },\n\t\t\t);\n\n\t\t\t// Show additional help how to resolve the save conflict\n\t\t\tconst actions = {\n\t\t\t\tprimary: [\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tResolveConflictLearnMoreAction,\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t};\n\t\t\tconst handle = this.notificationService.notify({\n\t\t\t\tid: `${hash(resource.toString())}`, // unique per model\n\t\t\t\tseverity: Severity.Info,\n\t\t\t\tmessage: conflictEditorHelp,\n\t\t\t\tactions,\n\t\t\t\tneverShowAgain: {\n\t\t\t\t\tid: LEARN_MORE_DIRTY_WRITE_IGNORE_KEY,\n\t\t\t\t\tisSecondary: true,\n\t\t\t\t},\n\t\t\t});\n\t\t\tEvent.once(handle.onDidClose)(() => dispose(actions.primary));\n\t\t\tpendingResolveSaveConflictMessages.push(handle);\n\t\t}\n\t}\n}\n\nclass SaveModelElevatedAction extends Action {\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel,\n\t\tprivate options: ITextFileSaveOptions,\n\t\tprivate triedToUnlock: boolean,\n\t) {\n\t\tsuper(\n\t\t\t\"workbench.files.action.saveModelElevated\",\n\t\t\ttriedToUnlock\n\t\t\t\t? isWindows\n\t\t\t\t\t? localize(\"overwriteElevated\", \"Overwrite as Admin...\")\n\t\t\t\t\t: localize(\"overwriteElevatedSudo\", \"Overwrite as Sudo...\")\n\t\t\t\t: isWindows\n\t\t\t\t\t? localize(\"saveElevated\", \"Retry as Admin...\")\n\t\t\t\t\t: localize(\"saveElevatedSudo\", \"Retry as Sudo...\"),\n\t\t);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.save({\n\t\t\t\t...this.options,\n\t\t\t\twriteElevated: true,\n\t\t\t\twriteUnlock: this.triedToUnlock,\n\t\t\t\treason: SaveReason.EXPLICIT,\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass RetrySaveModelAction extends Action {\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel,\n\t\tprivate options: ITextFileSaveOptions,\n\t) {\n\t\tsuper(\"workbench.files.action.saveModel\", localize(\"retry\", \"Retry\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.save({\n\t\t\t\t...this.options,\n\t\t\t\treason: SaveReason.EXPLICIT,\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass RevertModelAction extends Action {\n\tconstructor(private model: ITextFileEditorModel) {\n\t\tsuper(\n\t\t\t\"workbench.files.action.revertModel\",\n\t\t\tlocalize(\"revert\", \"Revert\"),\n\t\t);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.revert();\n\t\t}\n\t}\n}\n\nclass SaveModelAsAction extends Action {\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel,\n\t\t@IEditorService private editorService: IEditorService\n\t) {\n\t\tsuper('workbench.files.action.saveModelAs', SAVE_FILE_AS_LABEL.value);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tconst editor = this.findEditor();\n\t\t\tif (editor) {\n\t\t\t\tawait this.editorService.save(editor, {\n\t\t\t\t\tsaveAs: true,\n\t\t\t\t\treason: SaveReason.EXPLICIT,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate findEditor(): IEditorIdentifier | undefined {\n\t\tlet preferredMatchingEditor: IEditorIdentifier | undefined;\n\n\t\tconst editors = this.editorService.findEditors(this.model.resource, {\n\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t});\n\t\tfor (const identifier of editors) {\n\t\t\tif (identifier.editor instanceof FileEditorInput) {\n\t\t\t\t// We prefer a `FileEditorInput` for \"Save As\", but it is possible\n\t\t\t\t// that a custom editor is leveraging the text file model and as\n\t\t\t\t// such we need to fallback to any other editor having the resource\n\t\t\t\t// opened for running the save.\n\t\t\t\tpreferredMatchingEditor = identifier;\n\t\t\t\tbreak;\n\t\t\t} else if (!preferredMatchingEditor) {\n\t\t\t\tpreferredMatchingEditor = identifier;\n\t\t\t}\n\t\t}\n\n\t\treturn preferredMatchingEditor;\n\t}\n}\n\nclass UnlockModelAction extends Action {\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel,\n\t\tprivate options: ITextFileSaveOptions,\n\t) {\n\t\tsuper(\n\t\t\t\"workbench.files.action.unlock\",\n\t\t\tlocalize(\"overwrite\", \"Overwrite\"),\n\t\t);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.save({\n\t\t\t\t...this.options,\n\t\t\t\twriteUnlock: true,\n\t\t\t\treason: SaveReason.EXPLICIT,\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass SaveModelIgnoreModifiedSinceAction extends Action {\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel,\n\t\tprivate options: ITextFileSaveOptions,\n\t) {\n\t\tsuper(\n\t\t\t\"workbench.files.action.saveIgnoreModifiedSince\",\n\t\t\tlocalize(\"overwrite\", \"Overwrite\"),\n\t\t);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.save({\n\t\t\t\t...this.options,\n\t\t\t\tignoreModifiedSince: true,\n\t\t\t\treason: SaveReason.EXPLICIT,\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass ConfigureSaveConflictAction extends Action {\n\tconstructor(\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService\n\t) {\n\t\tsuper('workbench.files.action.configureSaveConflict', localize('configure', \"Configure\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.preferencesService.openSettings({\n\t\t\tquery: \"files.saveConflictResolution\",\n\t\t});\n\t}\n}\n\nexport const acceptLocalChangesCommand = (\n\taccessor: ServicesAccessor,\n\tresource: URI,\n) => {\n\treturn acceptOrRevertLocalChangesCommand(accessor, resource, true);\n};\n\nexport const revertLocalChangesCommand = (\n\taccessor: ServicesAccessor,\n\tresource: URI,\n) => {\n\treturn acceptOrRevertLocalChangesCommand(accessor, resource, false);\n};\n\nasync function acceptOrRevertLocalChangesCommand(\n\taccessor: ServicesAccessor,\n\tresource: URI,\n\taccept: boolean,\n) {\n\tconst editorService = accessor.get(IEditorService);\n\n\tconst editorPane = editorService.activeEditorPane;\n\tif (!editorPane) {\n\t\treturn;\n\t}\n\n\tconst editor = editorPane.input;\n\tconst group = editorPane.group;\n\n\t// Hide any previously shown message about how to use these actions\n\tclearPendingResolveSaveConflictMessages();\n\n\t// Accept or revert\n\tif (accept) {\n\t\tconst options: ITextFileSaveAsOptions = {\n\t\t\tignoreModifiedSince: true,\n\t\t\treason: SaveReason.EXPLICIT,\n\t\t};\n\t\tawait editorService.save({ editor, groupId: group.id }, options);\n\t} else {\n\t\tawait editorService.revert({ editor, groupId: group.id });\n\t}\n\n\t// Reopen original editor\n\tawait editorService.openEditor({ resource }, group);\n\n\t// Clean up\n\treturn group.closeEditor(editor);\n}\n"],
  "mappings": "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",
  "names": []
}
