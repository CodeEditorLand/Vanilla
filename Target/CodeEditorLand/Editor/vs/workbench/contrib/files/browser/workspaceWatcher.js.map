{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/workspaceWatcher.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { isAbsolute } from \"../../../../base/common/path.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tIFileService,\n\ttype IFilesConfiguration,\n} from \"../../../../platform/files/common/files.js\";\nimport {\n\tINotificationService,\n\tNeverShowAgainScope,\n\tNotificationPriority,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\tIWorkspaceContextService,\n\ttype IWorkspaceFolder,\n\ttype IWorkspaceFoldersChangeEvent,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\n\nexport class WorkspaceWatcher extends Disposable {\n\tstatic readonly ID = \"workbench.contrib.workspaceWatcher\";\n\n\tprivate readonly watchedWorkspaces = new ResourceMap<IDisposable>(\n\t\t(resource) => this.uriIdentityService.extUri.getComparisonKey(resource),\n\t);\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\n\t\tthis.refresh();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis.contextService.onDidChangeWorkspaceFolders((e) =>\n\t\t\t\tthis.onDidChangeWorkspaceFolders(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.contextService.onDidChangeWorkbenchState(() =>\n\t\t\t\tthis.onDidChangeWorkbenchState(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) =>\n\t\t\t\tthis.onDidChangeConfiguration(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.fileService.onDidWatchError((error) =>\n\t\t\t\tthis.onDidWatchError(error),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onDidChangeWorkspaceFolders(e: IWorkspaceFoldersChangeEvent): void {\n\t\t// Removed workspace: Unwatch\n\t\tfor (const removed of e.removed) {\n\t\t\tthis.unwatchWorkspace(removed);\n\t\t}\n\n\t\t// Added workspace: Watch\n\t\tfor (const added of e.added) {\n\t\t\tthis.watchWorkspace(added);\n\t\t}\n\t}\n\n\tprivate onDidChangeWorkbenchState(): void {\n\t\tthis.refresh();\n\t}\n\n\tprivate onDidChangeConfiguration(e: IConfigurationChangeEvent): void {\n\t\tif (\n\t\t\te.affectsConfiguration(\"files.watcherExclude\") ||\n\t\t\te.affectsConfiguration(\"files.watcherInclude\")\n\t\t) {\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tprivate onDidWatchError(error: Error): void {\n\t\tconst msg = error.toString();\n\t\tlet reason: \"ENOSPC\" | \"EUNKNOWN\" | \"ETERM\" | undefined;\n\n\t\t// Detect if we run into ENOSPC issues\n\t\tif (msg.indexOf(\"ENOSPC\") >= 0) {\n\t\t\treason = \"ENOSPC\";\n\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tlocalize(\n\t\t\t\t\t\"enospcError\",\n\t\t\t\t\t\"Unable to watch for file changes. Please follow the instructions link to resolve this issue.\",\n\t\t\t\t),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\"learnMore\", \"Instructions\"),\n\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\tthis.openerService.open(\n\t\t\t\t\t\t\t\tURI.parse(\n\t\t\t\t\t\t\t\t\t\"https://go.microsoft.com/fwlink/?linkid=867693\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tneverShowAgain: {\n\t\t\t\t\t\tid: \"ignoreEnospcError\",\n\t\t\t\t\t\tisSecondary: true,\n\t\t\t\t\t\tscope: NeverShowAgainScope.WORKSPACE,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\t// Detect when the watcher throws an error unexpectedly\n\t\telse if (msg.indexOf(\"EUNKNOWN\") >= 0) {\n\t\t\treason = \"EUNKNOWN\";\n\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tlocalize(\n\t\t\t\t\t\"eshutdownError\",\n\t\t\t\t\t\"File changes watcher stopped unexpectedly. A reload of the window may enable the watcher again unless the workspace cannot be watched for file changes.\",\n\t\t\t\t),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\"reload\", \"Reload\"),\n\t\t\t\t\t\trun: () => this.hostService.reload(),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tpriority: NotificationPriority.SILENT, // reduce potential spam since we don't really know how often this fires\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\t// Detect unexpected termination\n\t\telse if (msg.indexOf(\"ETERM\") >= 0) {\n\t\t\treason = \"ETERM\";\n\t\t}\n\n\t\t// Log telemetry if we gathered a reason (logging it from the renderer\n\t\t// allows us to investigate this situation in context of experiments)\n\t\tif (reason) {\n\t\t\ttype WatchErrorClassification = {\n\t\t\t\towner: \"bpasero\";\n\t\t\t\tcomment: \"An event that fires when a watcher errors\";\n\t\t\t\treason: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\tcomment: \"The watcher error reason.\";\n\t\t\t\t};\n\t\t\t};\n\t\t\ttype WatchErrorEvent = {\n\t\t\t\treason: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tWatchErrorEvent,\n\t\t\t\tWatchErrorClassification\n\t\t\t>(\"fileWatcherError\", { reason });\n\t\t}\n\t}\n\n\tprivate watchWorkspace(workspace: IWorkspaceFolder): void {\n\t\t// Compute the watcher exclude rules from configuration\n\t\tconst excludes: string[] = [];\n\t\tconst config = this.configurationService.getValue<IFilesConfiguration>({\n\t\t\tresource: workspace.uri,\n\t\t});\n\t\tif (config.files?.watcherExclude) {\n\t\t\tfor (const key in config.files.watcherExclude) {\n\t\t\t\tif (key && config.files.watcherExclude[key] === true) {\n\t\t\t\t\texcludes.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst pathsToWatch = new ResourceMap<URI>((uri) =>\n\t\t\tthis.uriIdentityService.extUri.getComparisonKey(uri),\n\t\t);\n\n\t\t// Add the workspace as path to watch\n\t\tpathsToWatch.set(workspace.uri, workspace.uri);\n\n\t\t// Compute additional includes from configuration\n\t\tif (config.files?.watcherInclude) {\n\t\t\tfor (const includePath of config.files.watcherInclude) {\n\t\t\t\tif (!includePath) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Absolute: verify a child of the workspace\n\t\t\t\tif (isAbsolute(includePath)) {\n\t\t\t\t\tconst candidate = URI.file(includePath).with({\n\t\t\t\t\t\tscheme: workspace.uri.scheme,\n\t\t\t\t\t});\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqualOrParent(\n\t\t\t\t\t\t\tcandidate,\n\t\t\t\t\t\t\tworkspace.uri,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tpathsToWatch.set(candidate, candidate);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Relative: join against workspace folder\n\t\t\t\telse {\n\t\t\t\t\tconst candidate = workspace.toResource(includePath);\n\t\t\t\t\tpathsToWatch.set(candidate, candidate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Watch all paths as instructed\n\t\tconst disposables = new DisposableStore();\n\t\tfor (const [, pathToWatch] of pathsToWatch) {\n\t\t\tdisposables.add(\n\t\t\t\tthis.fileService.watch(pathToWatch, {\n\t\t\t\t\trecursive: true,\n\t\t\t\t\texcludes,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\tthis.watchedWorkspaces.set(workspace.uri, disposables);\n\t}\n\n\tprivate unwatchWorkspace(workspace: IWorkspaceFolder): void {\n\t\tif (this.watchedWorkspaces.has(workspace.uri)) {\n\t\t\tdispose(this.watchedWorkspaces.get(workspace.uri));\n\t\t\tthis.watchedWorkspaces.delete(workspace.uri);\n\t\t}\n\t}\n\n\tprivate refresh(): void {\n\t\t// Unwatch all first\n\t\tthis.unwatchWorkspaces();\n\n\t\t// Watch each workspace folder\n\t\tfor (const folder of this.contextService.getWorkspace().folders) {\n\t\t\tthis.watchWorkspace(folder);\n\t\t}\n\t}\n\n\tprivate unwatchWorkspaces(): void {\n\t\tfor (const [, disposable] of this.watchedWorkspaces) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t\tthis.watchedWorkspaces.clear();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.unwatchWorkspaces();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
