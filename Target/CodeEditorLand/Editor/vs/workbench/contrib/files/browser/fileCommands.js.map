{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/fileCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorResourceAccessor, IEditorCommandsContext, SideBySideEditor, IEditorIdentifier, SaveReason, EditorsOrder, EditorInputCapabilities } from '../../../common/editor.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { IWindowOpenable, IOpenWindowOptions, isWorkspaceToOpen, IOpenEmptyWindowOptions } from '../../../../platform/window/common/window.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { ServicesAccessor, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IWorkspaceContextService, UNTITLED_WORKSPACE_NAME } from '../../../../platform/workspace/common/workspace.js';\nimport { ExplorerFocusCondition, TextFileContentProvider, VIEWLET_ID, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext, ExplorerCompressedLastFocusContext, FilesExplorerFocusCondition, ExplorerFolderContext, VIEW_ID } from '../common/files.js';\nimport { ExplorerViewPaneContainer } from './explorerViewlet.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { CommandsRegistry, ICommandHandler, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKey, IContextKeyService, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyMod, KeyCode, KeyChord } from '../../../../base/common/keyCodes.js';\nimport { isWeb, isWindows } from '../../../../base/common/platform.js';\nimport { ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { getResourceForCommand, getMultiSelectedResources, getOpenEditorsViewMultiSelection, IExplorerService } from './files.js';\nimport { IWorkspaceEditingService } from '../../../services/workspaces/common/workspaceEditing.js';\nimport { resolveCommandsContext } from '../../../browser/parts/editor/editorCommandsContext.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport { IEditorService, SIDE_GROUP, ISaveEditorsOptions } from '../../../services/editor/common/editorService.js';\nimport { IEditorGroupsService, GroupsOrder, IEditorGroup } from '../../../services/editor/common/editorGroupsService.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { basename, joinPath, isEqual } from '../../../../base/common/resources.js';\nimport { IDisposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { IAction, toAction } from '../../../../base/common/actions.js';\nimport { EditorOpenSource, EditorResolution } from '../../../../platform/editor/common/editor.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nimport { ViewContainerLocation } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { OPEN_TO_SIDE_COMMAND_ID, COMPARE_WITH_SAVED_COMMAND_ID, SELECT_FOR_COMPARE_COMMAND_ID, ResourceSelectedForCompareContext, COMPARE_SELECTED_COMMAND_ID, COMPARE_RESOURCE_COMMAND_ID, COPY_PATH_COMMAND_ID, COPY_RELATIVE_PATH_COMMAND_ID, REVEAL_IN_EXPLORER_COMMAND_ID, OPEN_WITH_EXPLORER_COMMAND_ID, SAVE_FILE_COMMAND_ID, SAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID, SAVE_FILE_AS_COMMAND_ID, SAVE_ALL_COMMAND_ID, SAVE_ALL_IN_GROUP_COMMAND_ID, SAVE_FILES_COMMAND_ID, REVERT_FILE_COMMAND_ID, REMOVE_ROOT_FOLDER_COMMAND_ID, PREVIOUS_COMPRESSED_FOLDER, NEXT_COMPRESSED_FOLDER, FIRST_COMPRESSED_FOLDER, LAST_COMPRESSED_FOLDER, NEW_UNTITLED_FILE_COMMAND_ID, NEW_UNTITLED_FILE_LABEL, NEW_FILE_COMMAND_ID } from './fileConstants.js';\nimport { IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { RemoveRootFolderAction } from '../../../browser/actions/workspaceActions.js';\nimport { OpenEditorsView } from './views/openEditorsView.js';\nimport { ExplorerView } from './views/explorerView.js';\nimport { IListService } from '../../../../platform/list/browser/listService.js';\n\nexport const openWindowCommand = (accessor: ServicesAccessor, toOpen: IWindowOpenable[], options?: IOpenWindowOptions) => {\n\tif (Array.isArray(toOpen)) {\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst environmentService = accessor.get(IEnvironmentService);\n\n\t\t// rewrite untitled: workspace URIs to the absolute path on disk\n\t\ttoOpen = toOpen.map(openable => {\n\t\t\tif (isWorkspaceToOpen(openable) && openable.workspaceUri.scheme === Schemas.untitled) {\n\t\t\t\treturn {\n\t\t\t\t\tworkspaceUri: joinPath(environmentService.untitledWorkspacesHome, openable.workspaceUri.path, UNTITLED_WORKSPACE_NAME)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn openable;\n\t\t});\n\n\t\thostService.openWindow(toOpen, options);\n\t}\n};\n\nexport const newWindowCommand = (accessor: ServicesAccessor, options?: IOpenEmptyWindowOptions) => {\n\tconst hostService = accessor.get(IHostService);\n\thostService.openWindow(options);\n};\n\n// Command registration\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ExplorerFocusCondition,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t},\n\tid: OPEN_TO_SIDE_COMMAND_ID, handler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), editorService, accessor.get(IEditorGroupsService), explorerService);\n\n\t\t// Set side input\n\t\tif (resources.length) {\n\t\t\tconst untitledResources = resources.filter(resource => resource.scheme === Schemas.untitled);\n\t\t\tconst fileResources = resources.filter(resource => resource.scheme !== Schemas.untitled);\n\n\t\t\tconst items = await Promise.all(fileResources.map(async resource => {\n\t\t\t\tconst item = explorerService.findClosest(resource);\n\t\t\t\tif (item) {\n\t\t\t\t\t// Explorer already resolved the item, no need to go to the file service #109780\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\n\t\t\t\treturn await fileService.stat(resource);\n\t\t\t}));\n\t\t\tconst files = items.filter(i => !i.isDirectory);\n\t\t\tconst editors = files.map(f => ({\n\t\t\t\tresource: f.resource,\n\t\t\t\toptions: { pinned: true }\n\t\t\t})).concat(...untitledResources.map(untitledResource => ({ resource: untitledResource, options: { pinned: true } })));\n\n\t\t\tawait editorService.openEditors(editors, SIDE_GROUP);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerFolderContext.toNegated()),\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow\n\t},\n\tid: 'explorer.openAndPassFocus', handler: async (accessor, _resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = explorerService.getContext(true);\n\n\t\tif (resources.length) {\n\t\t\tawait editorService.openEditors(resources.map(r => ({ resource: r.resource, options: { preserveFocus: false, pinned: true } })));\n\t\t}\n\t}\n});\n\nconst COMPARE_WITH_SAVED_SCHEMA = 'showModifications';\nlet providerDisposables: IDisposable[] = [];\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: COMPARE_WITH_SAVED_COMMAND_ID,\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyD),\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst listService = accessor.get(IListService);\n\n\t\t// Register provider at first as needed\n\t\tlet registerEditorListener = false;\n\t\tif (providerDisposables.length === 0) {\n\t\t\tregisterEditorListener = true;\n\n\t\t\tconst provider = instantiationService.createInstance(TextFileContentProvider);\n\t\t\tproviderDisposables.push(provider);\n\t\t\tproviderDisposables.push(textModelService.registerTextModelContentProvider(COMPARE_WITH_SAVED_SCHEMA, provider));\n\t\t}\n\n\t\t// Open editor (only resources that can be handled by file service are supported)\n\t\tconst uri = getResourceForCommand(resource, editorService, listService);\n\t\tif (uri && fileService.hasProvider(uri)) {\n\t\t\tconst name = basename(uri);\n\t\t\tconst editorLabel = nls.localize('modifiedLabel', \"{0} (in file) \u2194 {1}\", name, name);\n\n\t\t\ttry {\n\t\t\t\tawait TextFileContentProvider.open(uri, COMPARE_WITH_SAVED_SCHEMA, editorLabel, editorService, { pinned: true });\n\t\t\t\t// Dispose once no more diff editor is opened with the scheme\n\t\t\t\tif (registerEditorListener) {\n\t\t\t\t\tproviderDisposables.push(editorService.onDidVisibleEditorsChange(() => {\n\t\t\t\t\t\tif (!editorService.editors.some(editor => !!EditorResourceAccessor.getCanonicalUri(editor, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: COMPARE_WITH_SAVED_SCHEMA }))) {\n\t\t\t\t\t\t\tproviderDisposables = dispose(providerDisposables);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tproviderDisposables = dispose(providerDisposables);\n\t\t\t}\n\t\t}\n\t}\n});\n\nlet globalResourceToCompare: URI | undefined;\nlet resourceSelectedForCompareContext: IContextKey<boolean>;\nCommandsRegistry.registerCommand({\n\tid: SELECT_FOR_COMPARE_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tglobalResourceToCompare = getResourceForCommand(resource, accessor.get(IEditorService), accessor.get(IListService));\n\t\tif (!resourceSelectedForCompareContext) {\n\t\t\tresourceSelectedForCompareContext = ResourceSelectedForCompareContext.bindTo(accessor.get(IContextKeyService));\n\t\t}\n\t\tresourceSelectedForCompareContext.set(true);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: COMPARE_SELECTED_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), editorService, accessor.get(IEditorGroupsService), accessor.get(IExplorerService));\n\n\t\tif (resources.length === 2) {\n\t\t\treturn editorService.openEditor({\n\t\t\t\toriginal: { resource: resources[0] },\n\t\t\t\tmodified: { resource: resources[1] },\n\t\t\t\toptions: { pinned: true }\n\t\t\t});\n\t\t}\n\n\t\treturn true;\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: COMPARE_RESOURCE_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst rightResource = getResourceForCommand(resource, editorService, accessor.get(IListService));\n\t\tif (globalResourceToCompare && rightResource) {\n\t\t\teditorService.openEditor({\n\t\t\t\toriginal: { resource: globalResourceToCompare },\n\t\t\t\tmodified: { resource: rightResource },\n\t\t\t\toptions: { pinned: true }\n\t\t\t});\n\t\t}\n\t}\n});\n\nasync function resourcesToClipboard(resources: URI[], relative: boolean, clipboardService: IClipboardService, labelService: ILabelService, configurationService: IConfigurationService): Promise<void> {\n\tif (resources.length) {\n\t\tconst lineDelimiter = isWindows ? '\\r\\n' : '\\n';\n\n\t\tlet separator: '/' | '\\\\' | undefined = undefined;\n\t\tif (relative) {\n\t\t\tconst relativeSeparator = configurationService.getValue('explorer.copyRelativePathSeparator');\n\t\t\tif (relativeSeparator === '/' || relativeSeparator === '\\\\') {\n\t\t\t\tseparator = relativeSeparator;\n\t\t\t}\n\t\t}\n\n\t\tconst text = resources.map(resource => labelService.getUriLabel(resource, { relative, noPrefix: true, separator })).join(lineDelimiter);\n\t\tawait clipboardService.writeText(text);\n\t}\n}\n\nconst copyPathCommandHandler: ICommandHandler = async (accessor, resource: URI | object) => {\n\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IExplorerService));\n\tawait resourcesToClipboard(resources, false, accessor.get(IClipboardService), accessor.get(ILabelService), accessor.get(IConfigurationService));\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus.toNegated(),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC,\n\twin: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC\n\t},\n\tid: COPY_PATH_COMMAND_ID,\n\thandler: copyPathCommandHandler\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC),\n\twin: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC\n\t},\n\tid: COPY_PATH_COMMAND_ID,\n\thandler: copyPathCommandHandler\n});\n\nconst copyRelativePathCommandHandler: ICommandHandler = async (accessor, resource: URI | object) => {\n\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IExplorerService));\n\tawait resourcesToClipboard(resources, true, accessor.get(IClipboardService), accessor.get(ILabelService), accessor.get(IConfigurationService));\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus.toNegated(),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC,\n\twin: {\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyC)\n\t},\n\tid: COPY_RELATIVE_PATH_COMMAND_ID,\n\thandler: copyRelativePathCommandHandler\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC),\n\twin: {\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyC)\n\t},\n\tid: COPY_RELATIVE_PATH_COMMAND_ID,\n\thandler: copyRelativePathCommandHandler\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyP),\n\tid: 'workbench.action.files.copyPathOfActiveFile',\n\thandler: async accessor => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeInput = editorService.activeEditor;\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeInput, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tconst resources = resource ? [resource] : [];\n\t\tawait resourcesToClipboard(resources, false, accessor.get(IClipboardService), accessor.get(ILabelService), accessor.get(IConfigurationService));\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVEAL_IN_EXPLORER_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst viewService = accessor.get(IViewsService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst listService = accessor.get(IListService);\n\t\tconst uri = getResourceForCommand(resource, editorService, listService);\n\n\t\tif (uri && contextService.isInsideWorkspace(uri)) {\n\t\t\tconst explorerView = await viewService.openView<ExplorerView>(VIEW_ID, false);\n\t\t\tif (explorerView) {\n\t\t\t\tconst oldAutoReveal = explorerView.autoReveal;\n\t\t\t\t// Disable autoreveal before revealing the explorer to prevent a race betwene auto reveal + selection\n\t\t\t\t// Fixes #197268\n\t\t\t\texplorerView.autoReveal = false;\n\t\t\t\texplorerView.setExpanded(true);\n\t\t\t\tawait explorerService.select(uri, 'force');\n\t\t\t\texplorerView.focus();\n\t\t\t\texplorerView.autoReveal = oldAutoReveal;\n\t\t\t}\n\t\t} else {\n\t\t\t// Do not reveal the open editors view if it's hidden explicitly\n\t\t\t// See https://github.com/microsoft/vscode/issues/227378\n\t\t\tconst openEditorsView = viewService.getViewWithId(OpenEditorsView.ID);\n\t\t\tif (openEditorsView) {\n\t\t\t\topenEditorsView.setExpanded(true);\n\t\t\t\topenEditorsView.focus();\n\t\t\t}\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: OPEN_WITH_EXPLORER_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst listService = accessor.get(IListService);\n\t\tconst uri = getResourceForCommand(resource, editorService, listService);\n\t\tif (uri) {\n\t\t\treturn editorService.openEditor({ resource: uri, options: { override: EditorResolution.PICK, source: EditorOpenSource.USER } });\n\t\t}\n\n\t\treturn undefined;\n\t}\n});\n\n// Save / Save As / Save All / Revert\n\nasync function saveSelectedEditors(accessor: ServicesAccessor, options?: ISaveEditorsOptions): Promise<void> {\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst textFileService = accessor.get(ITextFileService);\n\n\t// Retrieve selected or active editor\n\tlet editors = getOpenEditorsViewMultiSelection(accessor);\n\tif (!editors) {\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\tif (activeGroup.activeEditor) {\n\t\t\teditors = [];\n\n\t\t\t// Special treatment for side by side editors: if the active editor\n\t\t\t// has 2 sides, we consider both, to support saving both sides.\n\t\t\t// We only allow this when saving, not for \"Save As\" and not if any\n\t\t\t// editor is untitled which would bring up a \"Save As\" dialog too.\n\t\t\t// In addition, we require the secondary side to be modified to not\n\t\t\t// trigger a touch operation unexpectedly.\n\t\t\t//\n\t\t\t// See also https://github.com/microsoft/vscode/issues/4180\n\t\t\t// See also https://github.com/microsoft/vscode/issues/106330\n\t\t\t// See also https://github.com/microsoft/vscode/issues/190210\n\t\t\tif (\n\t\t\t\tactiveGroup.activeEditor instanceof SideBySideEditorInput &&\n\t\t\t\t!options?.saveAs && !(activeGroup.activeEditor.primary.hasCapability(EditorInputCapabilities.Untitled) || activeGroup.activeEditor.secondary.hasCapability(EditorInputCapabilities.Untitled)) &&\n\t\t\t\tactiveGroup.activeEditor.secondary.isModified()\n\t\t\t) {\n\t\t\t\teditors.push({ groupId: activeGroup.id, editor: activeGroup.activeEditor.primary });\n\t\t\t\teditors.push({ groupId: activeGroup.id, editor: activeGroup.activeEditor.secondary });\n\t\t\t} else {\n\t\t\t\teditors.push({ groupId: activeGroup.id, editor: activeGroup.activeEditor });\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!editors || editors.length === 0) {\n\t\treturn; // nothing to save\n\t}\n\n\t// Save editors\n\tawait doSaveEditors(accessor, editors, options);\n\n\t// Special treatment for embedded editors: if we detect that focus is\n\t// inside an embedded code editor, we save that model as well if we\n\t// find it in our text file models. Currently, only textual editors\n\t// support embedded editors.\n\tconst focusedCodeEditor = codeEditorService.getFocusedCodeEditor();\n\tif (focusedCodeEditor instanceof EmbeddedCodeEditorWidget && !focusedCodeEditor.isSimpleWidget) {\n\t\tconst resource = focusedCodeEditor.getModel()?.uri;\n\n\t\t// Check that the resource of the model was not saved already\n\t\tif (resource && !editors.some(({ editor }) => isEqual(EditorResourceAccessor.getCanonicalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY }), resource))) {\n\t\t\tconst model = textFileService.files.get(resource);\n\t\t\tif (!model?.isReadonly()) {\n\t\t\t\tawait textFileService.save(resource, options);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction saveDirtyEditorsOfGroups(accessor: ServicesAccessor, groups: readonly IEditorGroup[], options?: ISaveEditorsOptions): Promise<void> {\n\tconst dirtyEditors: IEditorIdentifier[] = [];\n\tfor (const group of groups) {\n\t\tfor (const editor of group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\tif (editor.isDirty()) {\n\t\t\t\tdirtyEditors.push({ groupId: group.id, editor });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn doSaveEditors(accessor, dirtyEditors, options);\n}\n\nasync function doSaveEditors(accessor: ServicesAccessor, editors: IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<void> {\n\tconst editorService = accessor.get(IEditorService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\n\ttry {\n\t\tawait editorService.save(editors, options);\n\t} catch (error) {\n\t\tif (!isCancellationError(error)) {\n\t\t\tconst actions: IAction[] = [toAction({ id: 'workbench.action.files.saveEditors', label: nls.localize('retry', \"Retry\"), run: () => instantiationService.invokeFunction(accessor => doSaveEditors(accessor, editors, options)) })];\n\t\t\tconst editorsToRevert = editors.filter(({ editor }) => !editor.hasCapability(EditorInputCapabilities.Untitled) /* all except untitled to prevent unexpected data-loss */);\n\t\t\tif (editorsToRevert.length > 0) {\n\t\t\t\tactions.push(toAction({ id: 'workbench.action.files.revertEditors', label: editorsToRevert.length > 1 ? nls.localize('revertAll', \"Revert All\") : nls.localize('revert', \"Revert\"), run: () => editorService.revert(editorsToRevert) }));\n\t\t\t}\n\n\t\t\tnotificationService.notify({\n\t\t\t\tid: editors.map(({ editor }) => hash(editor.resource?.toString())).join(), // ensure unique notification ID per set of editor\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: nls.localize({ key: 'genericSaveError', comment: ['{0} is the resource that failed to save and {1} the error message'] }, \"Failed to save '{0}': {1}\", editors.map(({ editor }) => editor.getName()).join(', '), toErrorMessage(error, false)),\n\t\t\t\tactions: { primary: actions }\n\t\t\t});\n\t\t}\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KeyS,\n\tid: SAVE_FILE_COMMAND_ID,\n\thandler: accessor => {\n\t\treturn saveSelectedEditors(accessor, { reason: SaveReason.EXPLICIT, force: true /* force save even when non-dirty */ });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyS),\n\twin: { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyS) },\n\tid: SAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID,\n\thandler: accessor => {\n\t\treturn saveSelectedEditors(accessor, { reason: SaveReason.EXPLICIT, force: true /* force save even when non-dirty */, skipSaveParticipants: true });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: SAVE_FILE_AS_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyS,\n\thandler: accessor => {\n\t\treturn saveSelectedEditors(accessor, { reason: SaveReason.EXPLICIT, saveAs: true });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: undefined,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyS },\n\twin: { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyS) },\n\tid: SAVE_ALL_COMMAND_ID,\n\thandler: accessor => {\n\t\treturn saveDirtyEditorsOfGroups(accessor, accessor.get(IEditorGroupsService).getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE), { reason: SaveReason.EXPLICIT });\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SAVE_ALL_IN_GROUP_COMMAND_ID,\n\thandler: (accessor, _: URI | object, editorContext: IEditorCommandsContext) => {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\tconst resolvedContext = resolveCommandsContext([editorContext], accessor.get(IEditorService), editorGroupsService, accessor.get(IListService));\n\n\t\tlet groups: readonly IEditorGroup[] | undefined = undefined;\n\t\tif (!resolvedContext.groupedEditors.length) {\n\t\t\tgroups = editorGroupsService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\t} else {\n\t\t\tgroups = resolvedContext.groupedEditors.map(({ group }) => group);\n\t\t}\n\n\t\treturn saveDirtyEditorsOfGroups(accessor, groups, { reason: SaveReason.EXPLICIT });\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SAVE_FILES_COMMAND_ID,\n\thandler: async accessor => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst res = await editorService.saveAll({ includeUntitled: false, reason: SaveReason.EXPLICIT });\n\t\treturn res.success;\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVERT_FILE_COMMAND_ID,\n\thandler: async accessor => {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t// Retrieve selected or active editor\n\t\tlet editors = getOpenEditorsViewMultiSelection(accessor);\n\t\tif (!editors) {\n\t\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\t\tif (activeGroup.activeEditor) {\n\t\t\t\teditors = [{ groupId: activeGroup.id, editor: activeGroup.activeEditor }];\n\t\t\t}\n\t\t}\n\n\t\tif (!editors || editors.length === 0) {\n\t\t\treturn; // nothing to revert\n\t\t}\n\n\t\ttry {\n\t\t\tawait editorService.revert(editors.filter(({ editor }) => !editor.hasCapability(EditorInputCapabilities.Untitled) /* all except untitled */), { force: true });\n\t\t} catch (error) {\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tnotificationService.error(nls.localize('genericRevertError', \"Failed to revert '{0}': {1}\", editors.map(({ editor }) => editor.getName()).join(', '), toErrorMessage(error, false)));\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REMOVE_ROOT_FOLDER_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\t\tconst workspace = contextService.getWorkspace();\n\t\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IExplorerService)).filter(resource =>\n\t\t\tworkspace.folders.some(folder => uriIdentityService.extUri.isEqual(folder.uri, resource)) // Need to verify resources are workspaces since multi selection can trigger this command on some non workspace resources\n\t\t);\n\n\t\tif (resources.length === 0) {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t// Show a picker for the user to choose which folder to remove\n\t\t\treturn commandService.executeCommand(RemoveRootFolderAction.ID);\n\t\t}\n\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\treturn workspaceEditingService.removeFolders(resources);\n\t}\n});\n\n// Compressed item navigation\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext.negate()),\n\tprimary: KeyCode.LeftArrow,\n\tid: PREVIOUS_COMPRESSED_FOLDER,\n\thandler: accessor => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.previousCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedLastFocusContext.negate()),\n\tprimary: KeyCode.RightArrow,\n\tid: NEXT_COMPRESSED_FOLDER,\n\thandler: accessor => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.nextCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext.negate()),\n\tprimary: KeyCode.Home,\n\tid: FIRST_COMPRESSED_FOLDER,\n\thandler: accessor => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.firstCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedLastFocusContext.negate()),\n\tprimary: KeyCode.End,\n\tid: LAST_COMPRESSED_FOLDER,\n\thandler: accessor => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.lastCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: null,\n\tprimary: isWeb ? (isWindows ? KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyN) : KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyN) : KeyMod.CtrlCmd | KeyCode.KeyN,\n\tsecondary: isWeb ? [KeyMod.CtrlCmd | KeyCode.KeyN] : undefined,\n\tid: NEW_UNTITLED_FILE_COMMAND_ID,\n\tmetadata: {\n\t\tdescription: NEW_UNTITLED_FILE_LABEL,\n\t\targs: [\n\t\t\t{\n\t\t\t\tisOptional: true,\n\t\t\t\tname: 'New Untitled Text File arguments',\n\t\t\t\tdescription: 'The editor view type or language ID if known',\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'viewType': {\n\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'languageId': {\n\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\thandler: async (accessor, args?: { languageId?: string; viewType?: string }) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: undefined,\n\t\t\toptions: {\n\t\t\t\toverride: args?.viewType,\n\t\t\t\tpinned: true\n\t\t\t},\n\t\t\tlanguageId: args?.languageId,\n\t\t});\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: NEW_FILE_COMMAND_ID,\n\thandler: async (accessor, args?: { languageId?: string; viewType?: string; fileName?: string }) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst dialogService = accessor.get(IFileDialogService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\tconst createFileLocalized = nls.localize('newFileCommand.saveLabel', \"Create File\");\n\t\tconst defaultFileUri = joinPath(await dialogService.defaultFilePath(), args?.fileName ?? 'Untitled.txt');\n\n\t\tconst saveUri = await dialogService.showSaveDialog({ saveLabel: createFileLocalized, title: createFileLocalized, defaultUri: defaultFileUri });\n\n\t\tif (!saveUri) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait fileService.createFile(saveUri, undefined, { overwrite: true });\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: saveUri,\n\t\t\toptions: {\n\t\t\t\toverride: args?.viewType,\n\t\t\t\tpinned: true\n\t\t\t},\n\t\t\tlanguageId: args?.languageId,\n\t\t});\n\t}\n});\n"],
  "mappings": "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",
  "names": ["resource", "accessor"]
}
