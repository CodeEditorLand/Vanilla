{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/fileCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { type IAction, toAction } from \"../../../../base/common/actions.js\";\nimport { toErrorMessage } from \"../../../../base/common/errorMessage.js\";\nimport { isCancellationError } from \"../../../../base/common/errors.js\";\nimport { hash } from \"../../../../base/common/hash.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { isWeb, isWindows } from \"../../../../base/common/platform.js\";\nimport {\n\tbasename,\n\tisEqual,\n\tjoinPath,\n} from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { EmbeddedCodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport { ITextModelService } from \"../../../../editor/common/services/resolverService.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport {\n\tCommandsRegistry,\n\ttype ICommandHandler,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IFileDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tEditorOpenSource,\n\tEditorResolution,\n} from \"../../../../platform/editor/common/editor.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { IListService } from \"../../../../platform/list/browser/listService.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IOpenEmptyWindowOptions,\n\ttype IOpenWindowOptions,\n\ttype IWindowOpenable,\n\tisWorkspaceToOpen,\n} from \"../../../../platform/window/common/window.js\";\nimport {\n\tIWorkspaceContextService,\n\tUNTITLED_WORKSPACE_NAME,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport { RemoveRootFolderAction } from \"../../../browser/actions/workspaceActions.js\";\nimport { resolveCommandsContext } from \"../../../browser/parts/editor/editorCommandsContext.js\";\nimport {\n\tEditorInputCapabilities,\n\tEditorResourceAccessor,\n\tEditorsOrder,\n\ttype IEditorCommandsContext,\n\ttype IEditorIdentifier,\n\tSaveReason,\n\tSideBySideEditor,\n} from \"../../../common/editor.js\";\nimport { SideBySideEditorInput } from \"../../../common/editor/sideBySideEditorInput.js\";\nimport { ViewContainerLocation } from \"../../../common/views.js\";\nimport {\n\tGroupsOrder,\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport {\n\tIEditorService,\n\ttype ISaveEditorsOptions,\n\tSIDE_GROUP,\n} from \"../../../services/editor/common/editorService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { IPaneCompositePartService } from \"../../../services/panecomposite/browser/panecomposite.js\";\nimport { ITextFileService } from \"../../../services/textfile/common/textfiles.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { IWorkspaceEditingService } from \"../../../services/workspaces/common/workspaceEditing.js\";\nimport {\n\tExplorerCompressedFirstFocusContext,\n\tExplorerCompressedFocusContext,\n\tExplorerCompressedLastFocusContext,\n\tExplorerFocusCondition,\n\tExplorerFolderContext,\n\tFilesExplorerFocusCondition,\n\tTextFileContentProvider,\n\tVIEWLET_ID,\n\tVIEW_ID,\n} from \"../common/files.js\";\nimport type { ExplorerViewPaneContainer } from \"./explorerViewlet.js\";\nimport {\n\tCOMPARE_RESOURCE_COMMAND_ID,\n\tCOMPARE_SELECTED_COMMAND_ID,\n\tCOMPARE_WITH_SAVED_COMMAND_ID,\n\tCOPY_PATH_COMMAND_ID,\n\tCOPY_RELATIVE_PATH_COMMAND_ID,\n\tFIRST_COMPRESSED_FOLDER,\n\tLAST_COMPRESSED_FOLDER,\n\tNEW_FILE_COMMAND_ID,\n\tNEW_UNTITLED_FILE_COMMAND_ID,\n\tNEW_UNTITLED_FILE_LABEL,\n\tNEXT_COMPRESSED_FOLDER,\n\tOPEN_TO_SIDE_COMMAND_ID,\n\tOPEN_WITH_EXPLORER_COMMAND_ID,\n\tPREVIOUS_COMPRESSED_FOLDER,\n\tREMOVE_ROOT_FOLDER_COMMAND_ID,\n\tREVEAL_IN_EXPLORER_COMMAND_ID,\n\tREVERT_FILE_COMMAND_ID,\n\tResourceSelectedForCompareContext,\n\tSAVE_ALL_COMMAND_ID,\n\tSAVE_ALL_IN_GROUP_COMMAND_ID,\n\tSAVE_FILES_COMMAND_ID,\n\tSAVE_FILE_AS_COMMAND_ID,\n\tSAVE_FILE_COMMAND_ID,\n\tSAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID,\n\tSELECT_FOR_COMPARE_COMMAND_ID,\n} from \"./fileConstants.js\";\nimport {\n\tIExplorerService,\n\tgetMultiSelectedResources,\n\tgetOpenEditorsViewMultiSelection,\n\tgetResourceForCommand,\n} from \"./files.js\";\nimport type { ExplorerView } from \"./views/explorerView.js\";\nimport { OpenEditorsView } from \"./views/openEditorsView.js\";\n\nexport const openWindowCommand = (\n\taccessor: ServicesAccessor,\n\ttoOpen: IWindowOpenable[],\n\toptions?: IOpenWindowOptions,\n) => {\n\tif (Array.isArray(toOpen)) {\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst environmentService = accessor.get(IEnvironmentService);\n\n\t\t// rewrite untitled: workspace URIs to the absolute path on disk\n\t\ttoOpen = toOpen.map((openable) => {\n\t\t\tif (\n\t\t\t\tisWorkspaceToOpen(openable) &&\n\t\t\t\topenable.workspaceUri.scheme === Schemas.untitled\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\tworkspaceUri: joinPath(\n\t\t\t\t\t\tenvironmentService.untitledWorkspacesHome,\n\t\t\t\t\t\topenable.workspaceUri.path,\n\t\t\t\t\t\tUNTITLED_WORKSPACE_NAME,\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn openable;\n\t\t});\n\n\t\thostService.openWindow(toOpen, options);\n\t}\n};\n\nexport const newWindowCommand = (\n\taccessor: ServicesAccessor,\n\toptions?: IOpenEmptyWindowOptions,\n) => {\n\tconst hostService = accessor.get(IHostService);\n\thostService.openWindow(options);\n};\n\n// Command registration\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ExplorerFocusCondition,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter,\n\t},\n\tid: OPEN_TO_SIDE_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = getMultiSelectedResources(\n\t\t\tresource,\n\t\t\taccessor.get(IListService),\n\t\t\teditorService,\n\t\t\taccessor.get(IEditorGroupsService),\n\t\t\texplorerService,\n\t\t);\n\n\t\t// Set side input\n\t\tif (resources.length) {\n\t\t\tconst untitledResources = resources.filter(\n\t\t\t\t(resource) => resource.scheme === Schemas.untitled,\n\t\t\t);\n\t\t\tconst fileResources = resources.filter(\n\t\t\t\t(resource) => resource.scheme !== Schemas.untitled,\n\t\t\t);\n\n\t\t\tconst items = await Promise.all(\n\t\t\t\tfileResources.map(async (resource) => {\n\t\t\t\t\tconst item = explorerService.findClosest(resource);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\t// Explorer already resolved the item, no need to go to the file service #109780\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await fileService.stat(resource);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst files = items.filter((i) => !i.isDirectory);\n\t\t\tconst editors = files\n\t\t\t\t.map((f) => ({\n\t\t\t\t\tresource: f.resource,\n\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t}))\n\t\t\t\t.concat(\n\t\t\t\t\t...untitledResources.map((untitledResource) => ({\n\t\t\t\t\t\tresource: untitledResource,\n\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t})),\n\t\t\t\t);\n\n\t\t\tawait editorService.openEditors(editors, SIDE_GROUP);\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(\n\t\tFilesExplorerFocusCondition,\n\t\tExplorerFolderContext.toNegated(),\n\t),\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t},\n\tid: \"explorer.openAndPassFocus\",\n\thandler: async (accessor, _resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = explorerService.getContext(true);\n\n\t\tif (resources.length) {\n\t\t\tawait editorService.openEditors(\n\t\t\t\tresources.map((r) => ({\n\t\t\t\t\tresource: r.resource,\n\t\t\t\t\toptions: { preserveFocus: false, pinned: true },\n\t\t\t\t})),\n\t\t\t);\n\t\t}\n\t},\n});\n\nconst COMPARE_WITH_SAVED_SCHEMA = \"showModifications\";\nlet providerDisposables: IDisposable[] = [];\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: COMPARE_WITH_SAVED_COMMAND_ID,\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyD),\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst listService = accessor.get(IListService);\n\n\t\t// Register provider at first as needed\n\t\tlet registerEditorListener = false;\n\t\tif (providerDisposables.length === 0) {\n\t\t\tregisterEditorListener = true;\n\n\t\t\tconst provider = instantiationService.createInstance(\n\t\t\t\tTextFileContentProvider,\n\t\t\t);\n\t\t\tproviderDisposables.push(provider);\n\t\t\tproviderDisposables.push(\n\t\t\t\ttextModelService.registerTextModelContentProvider(\n\t\t\t\t\tCOMPARE_WITH_SAVED_SCHEMA,\n\t\t\t\t\tprovider,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Open editor (only resources that can be handled by file service are supported)\n\t\tconst uri = getResourceForCommand(resource, editorService, listService);\n\t\tif (uri && fileService.hasProvider(uri)) {\n\t\t\tconst name = basename(uri);\n\t\t\tconst editorLabel = nls.localize(\n\t\t\t\t\"modifiedLabel\",\n\t\t\t\t\"{0} (in file) \u2194 {1}\",\n\t\t\t\tname,\n\t\t\t\tname,\n\t\t\t);\n\n\t\t\ttry {\n\t\t\t\tawait TextFileContentProvider.open(\n\t\t\t\t\turi,\n\t\t\t\t\tCOMPARE_WITH_SAVED_SCHEMA,\n\t\t\t\t\teditorLabel,\n\t\t\t\t\teditorService,\n\t\t\t\t\t{ pinned: true },\n\t\t\t\t);\n\t\t\t\t// Dispose once no more diff editor is opened with the scheme\n\t\t\t\tif (registerEditorListener) {\n\t\t\t\t\tproviderDisposables.push(\n\t\t\t\t\t\teditorService.onDidVisibleEditorsChange(() => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!editorService.editors.some(\n\t\t\t\t\t\t\t\t\t(editor) =>\n\t\t\t\t\t\t\t\t\t\t!!EditorResourceAccessor.getCanonicalUri(\n\t\t\t\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tsupportSideBySide:\n\t\t\t\t\t\t\t\t\t\t\t\t\tSideBySideEditor.SECONDARY,\n\t\t\t\t\t\t\t\t\t\t\t\tfilterByScheme:\n\t\t\t\t\t\t\t\t\t\t\t\t\tCOMPARE_WITH_SAVED_SCHEMA,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tproviderDisposables =\n\t\t\t\t\t\t\t\t\tdispose(providerDisposables);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tproviderDisposables = dispose(providerDisposables);\n\t\t\t}\n\t\t}\n\t},\n});\n\nlet globalResourceToCompare: URI | undefined;\nlet resourceSelectedForCompareContext: IContextKey<boolean>;\nCommandsRegistry.registerCommand({\n\tid: SELECT_FOR_COMPARE_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tglobalResourceToCompare = getResourceForCommand(\n\t\t\tresource,\n\t\t\taccessor.get(IEditorService),\n\t\t\taccessor.get(IListService),\n\t\t);\n\t\tif (!resourceSelectedForCompareContext) {\n\t\t\tresourceSelectedForCompareContext =\n\t\t\t\tResourceSelectedForCompareContext.bindTo(\n\t\t\t\t\taccessor.get(IContextKeyService),\n\t\t\t\t);\n\t\t}\n\t\tresourceSelectedForCompareContext.set(true);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: COMPARE_SELECTED_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst resources = getMultiSelectedResources(\n\t\t\tresource,\n\t\t\taccessor.get(IListService),\n\t\t\teditorService,\n\t\t\taccessor.get(IEditorGroupsService),\n\t\t\taccessor.get(IExplorerService),\n\t\t);\n\n\t\tif (resources.length === 2) {\n\t\t\treturn editorService.openEditor({\n\t\t\t\toriginal: { resource: resources[0] },\n\t\t\t\tmodified: { resource: resources[1] },\n\t\t\t\toptions: { pinned: true },\n\t\t\t});\n\t\t}\n\n\t\treturn true;\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: COMPARE_RESOURCE_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst rightResource = getResourceForCommand(\n\t\t\tresource,\n\t\t\teditorService,\n\t\t\taccessor.get(IListService),\n\t\t);\n\t\tif (globalResourceToCompare && rightResource) {\n\t\t\teditorService.openEditor({\n\t\t\t\toriginal: { resource: globalResourceToCompare },\n\t\t\t\tmodified: { resource: rightResource },\n\t\t\t\toptions: { pinned: true },\n\t\t\t});\n\t\t}\n\t},\n});\n\nasync function resourcesToClipboard(\n\tresources: URI[],\n\trelative: boolean,\n\tclipboardService: IClipboardService,\n\tlabelService: ILabelService,\n\tconfigurationService: IConfigurationService,\n): Promise<void> {\n\tif (resources.length) {\n\t\tconst lineDelimiter = isWindows ? \"\\r\\n\" : \"\\n\";\n\n\t\tlet separator: \"/\" | \"\\\\\" | undefined;\n\t\tif (relative) {\n\t\t\tconst relativeSeparator = configurationService.getValue(\n\t\t\t\t\"explorer.copyRelativePathSeparator\",\n\t\t\t);\n\t\t\tif (relativeSeparator === \"/\" || relativeSeparator === \"\\\\\") {\n\t\t\t\tseparator = relativeSeparator;\n\t\t\t}\n\t\t}\n\n\t\tconst text = resources\n\t\t\t.map((resource) =>\n\t\t\t\tlabelService.getUriLabel(resource, {\n\t\t\t\t\trelative,\n\t\t\t\t\tnoPrefix: true,\n\t\t\t\t\tseparator,\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.join(lineDelimiter);\n\t\tawait clipboardService.writeText(text);\n\t}\n}\n\nconst copyPathCommandHandler: ICommandHandler = async (\n\taccessor,\n\tresource: URI | object,\n) => {\n\tconst resources = getMultiSelectedResources(\n\t\tresource,\n\t\taccessor.get(IListService),\n\t\taccessor.get(IEditorService),\n\t\taccessor.get(IEditorGroupsService),\n\t\taccessor.get(IExplorerService),\n\t);\n\tawait resourcesToClipboard(\n\t\tresources,\n\t\tfalse,\n\t\taccessor.get(IClipboardService),\n\t\taccessor.get(ILabelService),\n\t\taccessor.get(IConfigurationService),\n\t);\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus.toNegated(),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC,\n\twin: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC,\n\t},\n\tid: COPY_PATH_COMMAND_ID,\n\thandler: copyPathCommandHandler,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus,\n\tprimary: KeyChord(\n\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC,\n\t),\n\twin: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC,\n\t},\n\tid: COPY_PATH_COMMAND_ID,\n\thandler: copyPathCommandHandler,\n});\n\nconst copyRelativePathCommandHandler: ICommandHandler = async (\n\taccessor,\n\tresource: URI | object,\n) => {\n\tconst resources = getMultiSelectedResources(\n\t\tresource,\n\t\taccessor.get(IListService),\n\t\taccessor.get(IEditorService),\n\t\taccessor.get(IEditorGroupsService),\n\t\taccessor.get(IExplorerService),\n\t);\n\tawait resourcesToClipboard(\n\t\tresources,\n\t\ttrue,\n\t\taccessor.get(IClipboardService),\n\t\taccessor.get(ILabelService),\n\t\taccessor.get(IConfigurationService),\n\t);\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus.toNegated(),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC,\n\twin: {\n\t\tprimary: KeyChord(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyC,\n\t\t),\n\t},\n\tid: COPY_RELATIVE_PATH_COMMAND_ID,\n\thandler: copyRelativePathCommandHandler,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus,\n\tprimary: KeyChord(\n\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC,\n\t),\n\twin: {\n\t\tprimary: KeyChord(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyC,\n\t\t),\n\t},\n\tid: COPY_RELATIVE_PATH_COMMAND_ID,\n\thandler: copyRelativePathCommandHandler,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyP),\n\tid: \"workbench.action.files.copyPathOfActiveFile\",\n\thandler: async (accessor) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeInput = editorService.activeEditor;\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeInput, {\n\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t});\n\t\tconst resources = resource ? [resource] : [];\n\t\tawait resourcesToClipboard(\n\t\t\tresources,\n\t\t\tfalse,\n\t\t\taccessor.get(IClipboardService),\n\t\t\taccessor.get(ILabelService),\n\t\t\taccessor.get(IConfigurationService),\n\t\t);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVEAL_IN_EXPLORER_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst viewService = accessor.get(IViewsService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst listService = accessor.get(IListService);\n\t\tconst uri = getResourceForCommand(resource, editorService, listService);\n\n\t\tif (uri && contextService.isInsideWorkspace(uri)) {\n\t\t\tconst explorerView = await viewService.openView<ExplorerView>(\n\t\t\t\tVIEW_ID,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\tif (explorerView) {\n\t\t\t\tconst oldAutoReveal = explorerView.autoReveal;\n\t\t\t\t// Disable autoreveal before revealing the explorer to prevent a race betwene auto reveal + selection\n\t\t\t\t// Fixes #197268\n\t\t\t\texplorerView.autoReveal = false;\n\t\t\t\texplorerView.setExpanded(true);\n\t\t\t\tawait explorerService.select(uri, \"force\");\n\t\t\t\texplorerView.focus();\n\t\t\t\texplorerView.autoReveal = oldAutoReveal;\n\t\t\t}\n\t\t} else {\n\t\t\t// Do not reveal the open editors view if it's hidden explicitly\n\t\t\t// See https://github.com/microsoft/vscode/issues/227378\n\t\t\tconst openEditorsView = viewService.getViewWithId(\n\t\t\t\tOpenEditorsView.ID,\n\t\t\t);\n\t\t\tif (openEditorsView) {\n\t\t\t\topenEditorsView.setExpanded(true);\n\t\t\t\topenEditorsView.focus();\n\t\t\t}\n\t\t}\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: OPEN_WITH_EXPLORER_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst listService = accessor.get(IListService);\n\t\tconst uri = getResourceForCommand(resource, editorService, listService);\n\t\tif (uri) {\n\t\t\treturn editorService.openEditor({\n\t\t\t\tresource: uri,\n\t\t\t\toptions: {\n\t\t\t\t\toverride: EditorResolution.PICK,\n\t\t\t\t\tsource: EditorOpenSource.USER,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t},\n});\n\n// Save / Save As / Save All / Revert\n\nasync function saveSelectedEditors(\n\taccessor: ServicesAccessor,\n\toptions?: ISaveEditorsOptions,\n): Promise<void> {\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst textFileService = accessor.get(ITextFileService);\n\n\t// Retrieve selected or active editor\n\tlet editors = getOpenEditorsViewMultiSelection(accessor);\n\tif (!editors) {\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\tif (activeGroup.activeEditor) {\n\t\t\teditors = [];\n\n\t\t\t// Special treatment for side by side editors: if the active editor\n\t\t\t// has 2 sides, we consider both, to support saving both sides.\n\t\t\t// We only allow this when saving, not for \"Save As\" and not if any\n\t\t\t// editor is untitled which would bring up a \"Save As\" dialog too.\n\t\t\t// In addition, we require the secondary side to be modified to not\n\t\t\t// trigger a touch operation unexpectedly.\n\t\t\t//\n\t\t\t// See also https://github.com/microsoft/vscode/issues/4180\n\t\t\t// See also https://github.com/microsoft/vscode/issues/106330\n\t\t\t// See also https://github.com/microsoft/vscode/issues/190210\n\t\t\tif (\n\t\t\t\tactiveGroup.activeEditor instanceof SideBySideEditorInput &&\n\t\t\t\t!options?.saveAs &&\n\t\t\t\t!(\n\t\t\t\t\tactiveGroup.activeEditor.primary.hasCapability(\n\t\t\t\t\t\tEditorInputCapabilities.Untitled,\n\t\t\t\t\t) ||\n\t\t\t\t\tactiveGroup.activeEditor.secondary.hasCapability(\n\t\t\t\t\t\tEditorInputCapabilities.Untitled,\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\tactiveGroup.activeEditor.secondary.isModified()\n\t\t\t) {\n\t\t\t\teditors.push({\n\t\t\t\t\tgroupId: activeGroup.id,\n\t\t\t\t\teditor: activeGroup.activeEditor.primary,\n\t\t\t\t});\n\t\t\t\teditors.push({\n\t\t\t\t\tgroupId: activeGroup.id,\n\t\t\t\t\teditor: activeGroup.activeEditor.secondary,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\teditors.push({\n\t\t\t\t\tgroupId: activeGroup.id,\n\t\t\t\t\teditor: activeGroup.activeEditor,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!editors || editors.length === 0) {\n\t\treturn; // nothing to save\n\t}\n\n\t// Save editors\n\tawait doSaveEditors(accessor, editors, options);\n\n\t// Special treatment for embedded editors: if we detect that focus is\n\t// inside an embedded code editor, we save that model as well if we\n\t// find it in our text file models. Currently, only textual editors\n\t// support embedded editors.\n\tconst focusedCodeEditor = codeEditorService.getFocusedCodeEditor();\n\tif (\n\t\tfocusedCodeEditor instanceof EmbeddedCodeEditorWidget &&\n\t\t!focusedCodeEditor.isSimpleWidget\n\t) {\n\t\tconst resource = focusedCodeEditor.getModel()?.uri;\n\n\t\t// Check that the resource of the model was not saved already\n\t\tif (\n\t\t\tresource &&\n\t\t\t!editors.some(({ editor }) =>\n\t\t\t\tisEqual(\n\t\t\t\t\tEditorResourceAccessor.getCanonicalUri(editor, {\n\t\t\t\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\t\t\t}),\n\t\t\t\t\tresource,\n\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\tconst model = textFileService.files.get(resource);\n\t\t\tif (!model?.isReadonly()) {\n\t\t\t\tawait textFileService.save(resource, options);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction saveDirtyEditorsOfGroups(\n\taccessor: ServicesAccessor,\n\tgroups: readonly IEditorGroup[],\n\toptions?: ISaveEditorsOptions,\n): Promise<void> {\n\tconst dirtyEditors: IEditorIdentifier[] = [];\n\tfor (const group of groups) {\n\t\tfor (const editor of group.getEditors(\n\t\t\tEditorsOrder.MOST_RECENTLY_ACTIVE,\n\t\t)) {\n\t\t\tif (editor.isDirty()) {\n\t\t\t\tdirtyEditors.push({ groupId: group.id, editor });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn doSaveEditors(accessor, dirtyEditors, options);\n}\n\nasync function doSaveEditors(\n\taccessor: ServicesAccessor,\n\teditors: IEditorIdentifier[],\n\toptions?: ISaveEditorsOptions,\n): Promise<void> {\n\tconst editorService = accessor.get(IEditorService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\n\ttry {\n\t\tawait editorService.save(editors, options);\n\t} catch (error) {\n\t\tif (!isCancellationError(error)) {\n\t\t\tconst actions: IAction[] = [\n\t\t\t\ttoAction({\n\t\t\t\t\tid: \"workbench.action.files.saveEditors\",\n\t\t\t\t\tlabel: nls.localize(\"retry\", \"Retry\"),\n\t\t\t\t\trun: () =>\n\t\t\t\t\t\tinstantiationService.invokeFunction((accessor) =>\n\t\t\t\t\t\t\tdoSaveEditors(accessor, editors, options),\n\t\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t];\n\t\t\tconst editorsToRevert = editors.filter(\n\t\t\t\t({ editor }) =>\n\t\t\t\t\t!editor.hasCapability(\n\t\t\t\t\t\tEditorInputCapabilities.Untitled,\n\t\t\t\t\t) /* all except untitled to prevent unexpected data-loss */,\n\t\t\t);\n\t\t\tif (editorsToRevert.length > 0) {\n\t\t\t\tactions.push(\n\t\t\t\t\ttoAction({\n\t\t\t\t\t\tid: \"workbench.action.files.revertEditors\",\n\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\teditorsToRevert.length > 1\n\t\t\t\t\t\t\t\t? nls.localize(\"revertAll\", \"Revert All\")\n\t\t\t\t\t\t\t\t: nls.localize(\"revert\", \"Revert\"),\n\t\t\t\t\t\trun: () => editorService.revert(editorsToRevert),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tnotificationService.notify({\n\t\t\t\tid: editors\n\t\t\t\t\t.map(({ editor }) => hash(editor.resource?.toString()))\n\t\t\t\t\t.join(), // ensure unique notification ID per set of editor\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"genericSaveError\",\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"{0} is the resource that failed to save and {1} the error message\",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t\"Failed to save '{0}': {1}\",\n\t\t\t\t\teditors.map(({ editor }) => editor.getName()).join(\", \"),\n\t\t\t\t\ttoErrorMessage(error, false),\n\t\t\t\t),\n\t\t\t\tactions: { primary: actions },\n\t\t\t});\n\t\t}\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KeyS,\n\tid: SAVE_FILE_COMMAND_ID,\n\thandler: (accessor) => {\n\t\treturn saveSelectedEditors(accessor, {\n\t\t\treason: SaveReason.EXPLICIT,\n\t\t\tforce: true /* force save even when non-dirty */,\n\t\t});\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyS),\n\twin: {\n\t\tprimary: KeyChord(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyS,\n\t\t),\n\t},\n\tid: SAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID,\n\thandler: (accessor) => {\n\t\treturn saveSelectedEditors(accessor, {\n\t\t\treason: SaveReason.EXPLICIT,\n\t\t\tforce: true /* force save even when non-dirty */,\n\t\t\tskipSaveParticipants: true,\n\t\t});\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: SAVE_FILE_AS_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyS,\n\thandler: (accessor) => {\n\t\treturn saveSelectedEditors(accessor, {\n\t\t\treason: SaveReason.EXPLICIT,\n\t\t\tsaveAs: true,\n\t\t});\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: undefined,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyS },\n\twin: { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyS) },\n\tid: SAVE_ALL_COMMAND_ID,\n\thandler: (accessor) => {\n\t\treturn saveDirtyEditorsOfGroups(\n\t\t\taccessor,\n\t\t\taccessor\n\t\t\t\t.get(IEditorGroupsService)\n\t\t\t\t.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE),\n\t\t\t{ reason: SaveReason.EXPLICIT },\n\t\t);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: SAVE_ALL_IN_GROUP_COMMAND_ID,\n\thandler: (\n\t\taccessor,\n\t\t_: URI | object,\n\t\teditorContext: IEditorCommandsContext,\n\t) => {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t[editorContext],\n\t\t\taccessor.get(IEditorService),\n\t\t\teditorGroupsService,\n\t\t\taccessor.get(IListService),\n\t\t);\n\n\t\tlet groups: readonly IEditorGroup[] | undefined;\n\t\tif (resolvedContext.groupedEditors.length) {\n\t\t\tgroups = resolvedContext.groupedEditors.map(({ group }) => group);\n\t\t} else {\n\t\t\tgroups = editorGroupsService.getGroups(\n\t\t\t\tGroupsOrder.MOST_RECENTLY_ACTIVE,\n\t\t\t);\n\t\t}\n\n\t\treturn saveDirtyEditorsOfGroups(accessor, groups, {\n\t\t\treason: SaveReason.EXPLICIT,\n\t\t});\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: SAVE_FILES_COMMAND_ID,\n\thandler: async (accessor) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst res = await editorService.saveAll({\n\t\t\tincludeUntitled: false,\n\t\t\treason: SaveReason.EXPLICIT,\n\t\t});\n\t\treturn res.success;\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVERT_FILE_COMMAND_ID,\n\thandler: async (accessor) => {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t// Retrieve selected or active editor\n\t\tlet editors = getOpenEditorsViewMultiSelection(accessor);\n\t\tif (!editors) {\n\t\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\t\tif (activeGroup.activeEditor) {\n\t\t\t\teditors = [\n\t\t\t\t\t{\n\t\t\t\t\t\tgroupId: activeGroup.id,\n\t\t\t\t\t\teditor: activeGroup.activeEditor,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tif (!editors || editors.length === 0) {\n\t\t\treturn; // nothing to revert\n\t\t}\n\n\t\ttry {\n\t\t\tawait editorService.revert(\n\t\t\t\teditors.filter(\n\t\t\t\t\t({ editor }) =>\n\t\t\t\t\t\t!editor.hasCapability(\n\t\t\t\t\t\t\tEditorInputCapabilities.Untitled,\n\t\t\t\t\t\t) /* all except untitled */,\n\t\t\t\t),\n\t\t\t\t{ force: true },\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tnotificationService.error(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"genericRevertError\",\n\t\t\t\t\t\"Failed to revert '{0}': {1}\",\n\t\t\t\t\teditors.map(({ editor }) => editor.getName()).join(\", \"),\n\t\t\t\t\ttoErrorMessage(error, false),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: REMOVE_ROOT_FOLDER_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\t\tconst workspace = contextService.getWorkspace();\n\t\tconst resources = getMultiSelectedResources(\n\t\t\tresource,\n\t\t\taccessor.get(IListService),\n\t\t\taccessor.get(IEditorService),\n\t\t\taccessor.get(IEditorGroupsService),\n\t\t\taccessor.get(IExplorerService),\n\t\t).filter(\n\t\t\t(resource) =>\n\t\t\t\tworkspace.folders.some((folder) =>\n\t\t\t\t\turiIdentityService.extUri.isEqual(folder.uri, resource),\n\t\t\t\t), // Need to verify resources are workspaces since multi selection can trigger this command on some non workspace resources\n\t\t);\n\n\t\tif (resources.length === 0) {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t// Show a picker for the user to choose which folder to remove\n\t\t\treturn commandService.executeCommand(RemoveRootFolderAction.ID);\n\t\t}\n\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\treturn workspaceEditingService.removeFolders(resources);\n\t},\n});\n\n// Compressed item navigation\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(\n\t\tFilesExplorerFocusCondition,\n\t\tExplorerCompressedFocusContext,\n\t\tExplorerCompressedFirstFocusContext.negate(),\n\t),\n\tprimary: KeyCode.LeftArrow,\n\tid: PREVIOUS_COMPRESSED_FOLDER,\n\thandler: (accessor) => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(\n\t\t\tViewContainerLocation.Sidebar,\n\t\t);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer =\n\t\t\tviewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.previousCompressedStat();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(\n\t\tFilesExplorerFocusCondition,\n\t\tExplorerCompressedFocusContext,\n\t\tExplorerCompressedLastFocusContext.negate(),\n\t),\n\tprimary: KeyCode.RightArrow,\n\tid: NEXT_COMPRESSED_FOLDER,\n\thandler: (accessor) => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(\n\t\t\tViewContainerLocation.Sidebar,\n\t\t);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer =\n\t\t\tviewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.nextCompressedStat();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(\n\t\tFilesExplorerFocusCondition,\n\t\tExplorerCompressedFocusContext,\n\t\tExplorerCompressedFirstFocusContext.negate(),\n\t),\n\tprimary: KeyCode.Home,\n\tid: FIRST_COMPRESSED_FOLDER,\n\thandler: (accessor) => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(\n\t\t\tViewContainerLocation.Sidebar,\n\t\t);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer =\n\t\t\tviewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.firstCompressedStat();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(\n\t\tFilesExplorerFocusCondition,\n\t\tExplorerCompressedFocusContext,\n\t\tExplorerCompressedLastFocusContext.negate(),\n\t),\n\tprimary: KeyCode.End,\n\tid: LAST_COMPRESSED_FOLDER,\n\thandler: (accessor) => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(\n\t\t\tViewContainerLocation.Sidebar,\n\t\t);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer =\n\t\t\tviewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.lastCompressedStat();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: null,\n\tprimary: isWeb\n\t\t? isWindows\n\t\t\t? KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyN)\n\t\t\t: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyN\n\t\t: KeyMod.CtrlCmd | KeyCode.KeyN,\n\tsecondary: isWeb ? [KeyMod.CtrlCmd | KeyCode.KeyN] : undefined,\n\tid: NEW_UNTITLED_FILE_COMMAND_ID,\n\tmetadata: {\n\t\tdescription: NEW_UNTITLED_FILE_LABEL,\n\t\targs: [\n\t\t\t{\n\t\t\t\tisOptional: true,\n\t\t\t\tname: \"New Untitled Text File arguments\",\n\t\t\t\tdescription: \"The editor view type or language ID if known\",\n\t\t\t\tschema: {\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tviewType: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlanguageId: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\thandler: async (\n\t\taccessor,\n\t\targs?: { languageId?: string; viewType?: string },\n\t) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: undefined,\n\t\t\toptions: {\n\t\t\t\toverride: args?.viewType,\n\t\t\t\tpinned: true,\n\t\t\t},\n\t\t\tlanguageId: args?.languageId,\n\t\t});\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: NEW_FILE_COMMAND_ID,\n\thandler: async (\n\t\taccessor,\n\t\targs?: { languageId?: string; viewType?: string; fileName?: string },\n\t) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst dialogService = accessor.get(IFileDialogService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\tconst createFileLocalized = nls.localize(\n\t\t\t\"newFileCommand.saveLabel\",\n\t\t\t\"Create File\",\n\t\t);\n\t\tconst defaultFileUri = joinPath(\n\t\t\tawait dialogService.defaultFilePath(),\n\t\t\targs?.fileName ?? \"Untitled.txt\",\n\t\t);\n\n\t\tconst saveUri = await dialogService.showSaveDialog({\n\t\t\tsaveLabel: createFileLocalized,\n\t\t\ttitle: createFileLocalized,\n\t\t\tdefaultUri: defaultFileUri,\n\t\t});\n\n\t\tif (!saveUri) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait fileService.createFile(saveUri, undefined, { overwrite: true });\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: saveUri,\n\t\t\toptions: {\n\t\t\t\toverride: args?.viewType,\n\t\t\t\tpinned: true,\n\t\t\t},\n\t\t\tlanguageId: args?.languageId,\n\t\t});\n\t},\n});\n"],
  "mappings": "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",
  "names": ["resource", "accessor"]
}
