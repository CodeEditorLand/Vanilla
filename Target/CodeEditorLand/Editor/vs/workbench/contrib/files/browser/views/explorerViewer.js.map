{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/views/explorerViewer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDataTransfers,\n\ttype IDragAndDropData,\n} from \"../../../../../base/browser/dnd.js\";\nimport * as DOM from \"../../../../../base/browser/dom.js\";\nimport type { IKeyboardEvent } from \"../../../../../base/browser/keyboardEvent.js\";\nimport {\n\tInputBox,\n\tMessageType,\n} from \"../../../../../base/browser/ui/inputbox/inputBox.js\";\nimport {\n\ttype IListVirtualDelegate,\n\tListDragOverEffectPosition,\n\tListDragOverEffectType,\n} from \"../../../../../base/browser/ui/list/list.js\";\nimport {\n\ttype ElementsDragAndDropData,\n\tExternalElementsDragAndDropData,\n\tListViewTargetSector,\n\tNativeDragAndDropData,\n} from \"../../../../../base/browser/ui/list/listView.js\";\nimport type { IListAccessibilityProvider } from \"../../../../../base/browser/ui/list/listWidget.js\";\nimport type { ITreeCompressionDelegate } from \"../../../../../base/browser/ui/tree/asyncDataTree.js\";\nimport type { ICompressedTreeNode } from \"../../../../../base/browser/ui/tree/compressedObjectTreeModel.js\";\nimport type { ICompressibleTreeRenderer } from \"../../../../../base/browser/ui/tree/objectTree.js\";\nimport {\n\ttype IAsyncDataSource,\n\ttype ITreeDragAndDrop,\n\ttype ITreeDragOverReaction,\n\ttype ITreeFilter,\n\ttype ITreeNode,\n\ttype ITreeSorter,\n\tTreeDragOverBubble,\n\tTreeVisibility,\n} from \"../../../../../base/browser/ui/tree/tree.js\";\nimport { mainWindow } from \"../../../../../base/browser/window.js\";\nimport { timeout } from \"../../../../../base/common/async.js\";\nimport {\n\tcompareFileExtensionsDefault,\n\tcompareFileExtensionsLower,\n\tcompareFileExtensionsUnicode,\n\tcompareFileExtensionsUpper,\n\tcompareFileNamesDefault,\n\tcompareFileNamesLower,\n\tcompareFileNamesUnicode,\n\tcompareFileNamesUpper,\n} from \"../../../../../base/common/comparers.js\";\nimport { toErrorMessage } from \"../../../../../base/common/errorMessage.js\";\nimport {\n\tEmitter,\n\tEvent,\n\tEventMultiplexer,\n} from \"../../../../../base/common/event.js\";\nimport {\n\ttype FuzzyScore,\n\tcreateMatches,\n} from \"../../../../../base/common/filters.js\";\nimport { createSingleCallFunction } from \"../../../../../base/common/functional.js\";\nimport * as glob from \"../../../../../base/common/glob.js\";\nimport { KeyCode } from \"../../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { ResourceSet } from \"../../../../../base/common/map.js\";\nimport { Schemas } from \"../../../../../base/common/network.js\";\nimport { deepClone, equals } from \"../../../../../base/common/objects.js\";\nimport * as path from \"../../../../../base/common/path.js\";\nimport { isMacintosh, isWeb } from \"../../../../../base/common/platform.js\";\nimport {\n\tdirname,\n\tdistinctParents,\n\tjoinPath,\n} from \"../../../../../base/common/resources.js\";\nimport { TernarySearchTree } from \"../../../../../base/common/ternarySearchTree.js\";\nimport { isNumber } from \"../../../../../base/common/types.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport { ResourceFileEdit } from \"../../../../../editor/browser/services/bulkEditService.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../../platform/configuration/common/configuration.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n} from \"../../../../../platform/contextview/browser/contextView.js\";\nimport {\n\tIDialogService,\n\tgetFileNamesMessage,\n} from \"../../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tCodeDataTransfers,\n\tcontainsDragType,\n} from \"../../../../../platform/dnd/browser/dnd.js\";\nimport { WebFileSystemAccess } from \"../../../../../platform/files/browser/webFileSystemAccess.js\";\nimport {\n\tFileChangeType,\n\tFileKind,\n\ttype FileOperationError,\n\tFileOperationResult,\n\tIFileService,\n} from \"../../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../../platform/label/common/label.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../../platform/notification/common/notification.js\";\nimport {\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../../platform/progress/common/progress.js\";\nimport { defaultInputBoxStyles } from \"../../../../../platform/theme/browser/defaultStyles.js\";\nimport { IThemeService } from \"../../../../../platform/theme/common/themeService.js\";\nimport { IUriIdentityService } from \"../../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n\tisTemporaryWorkspace,\n} from \"../../../../../platform/workspace/common/workspace.js\";\nimport type { IWorkspaceFolderCreationData } from \"../../../../../platform/workspaces/common/workspaces.js\";\nimport { fillEditorsDragData } from \"../../../../browser/dnd.js\";\nimport type {\n\tIFileLabelOptions,\n\tIResourceLabel,\n\tResourceLabels,\n} from \"../../../../browser/labels.js\";\nimport type { EditorInput } from \"../../../../common/editor/editorInput.js\";\nimport type { IEditableData } from \"../../../../common/views.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\nimport { IFilesConfigurationService } from \"../../../../services/filesConfiguration/common/filesConfigurationService.js\";\nimport { IWorkbenchLayoutService } from \"../../../../services/layout/browser/layoutService.js\";\nimport { IgnoreFile } from \"../../../../services/search/common/ignoreFile.js\";\nimport { IWorkspaceEditingService } from \"../../../../services/workspaces/common/workspaceEditing.js\";\nimport { ExplorerItem, NewExplorerItem } from \"../../common/explorerModel.js\";\nimport {\n\ttype IFilesConfiguration,\n\tUndoConfirmLevel,\n} from \"../../common/files.js\";\nimport {\n\ttype IExplorerFileContribution,\n\texplorerFileContribRegistry,\n} from \"../explorerFileContrib.js\";\nimport { findValidPasteFileTarget } from \"../fileActions.js\";\nimport {\n\tBrowserFileUpload,\n\tExternalFileImport,\n\tgetMultipleFilesOverwriteConfirm,\n} from \"../fileImportExport.js\";\nimport { IExplorerService } from \"../files.js\";\n\nexport class ExplorerDelegate implements IListVirtualDelegate<ExplorerItem> {\n\tstatic readonly ITEM_HEIGHT = 22;\n\n\tgetHeight(element: ExplorerItem): number {\n\t\treturn ExplorerDelegate.ITEM_HEIGHT;\n\t}\n\n\tgetTemplateId(element: ExplorerItem): string {\n\t\treturn FilesRenderer.ID;\n\t}\n}\n\nexport const explorerRootErrorEmitter = new Emitter<URI>();\nexport class ExplorerDataSource\n\timplements IAsyncDataSource<ExplorerItem | ExplorerItem[], ExplorerItem>\n{\n\tconstructor(\n\t\tprivate fileFilter: FilesFilter,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IConfigurationService\n\t\tprivate readonly configService: IConfigurationService,\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@IWorkbenchLayoutService\n\t\tprivate readonly layoutService: IWorkbenchLayoutService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@IFilesConfigurationService\n\t\tprivate readonly filesConfigService: IFilesConfigurationService,\n\t) {}\n\n\thasChildren(element: ExplorerItem | ExplorerItem[]): boolean {\n\t\t// don't render nest parents as containing children when all the children are filtered out\n\t\treturn (\n\t\t\tArray.isArray(element) ||\n\t\t\telement.hasChildren((stat) =>\n\t\t\t\tthis.fileFilter.filter(stat, TreeVisibility.Visible),\n\t\t\t)\n\t\t);\n\t}\n\n\tgetChildren(\n\t\telement: ExplorerItem | ExplorerItem[],\n\t): ExplorerItem[] | Promise<ExplorerItem[]> {\n\t\tif (Array.isArray(element)) {\n\t\t\treturn element;\n\t\t}\n\n\t\tconst hasError = element.error;\n\t\tconst sortOrder = this.explorerService.sortOrderConfiguration.sortOrder;\n\t\tconst children = element.fetchChildren(sortOrder);\n\t\tif (Array.isArray(children)) {\n\t\t\t// fast path when children are known sync (i.e. nested children)\n\t\t\treturn children;\n\t\t}\n\t\tconst promise = children.then(\n\t\t\t(children) => {\n\t\t\t\t// Clear previous error decoration on root folder\n\t\t\t\tif (\n\t\t\t\t\telement instanceof ExplorerItem &&\n\t\t\t\t\telement.isRoot &&\n\t\t\t\t\t!element.error &&\n\t\t\t\t\thasError &&\n\t\t\t\t\tthis.contextService.getWorkbenchState() !==\n\t\t\t\t\t\tWorkbenchState.FOLDER\n\t\t\t\t) {\n\t\t\t\t\texplorerRootErrorEmitter.fire(element.resource);\n\t\t\t\t}\n\t\t\t\treturn children;\n\t\t\t},\n\t\t\t(e) => {\n\t\t\t\tif (element instanceof ExplorerItem && element.isRoot) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.contextService.getWorkbenchState() ===\n\t\t\t\t\t\tWorkbenchState.FOLDER\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Single folder create a dummy explorer item to show error\n\t\t\t\t\t\tconst placeholder = new ExplorerItem(\n\t\t\t\t\t\t\telement.resource,\n\t\t\t\t\t\t\tthis.fileService,\n\t\t\t\t\t\t\tthis.configService,\n\t\t\t\t\t\t\tthis.filesConfigService,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tplaceholder.error = e;\n\t\t\t\t\t\treturn [placeholder];\n\t\t\t\t\t} else {\n\t\t\t\t\t\texplorerRootErrorEmitter.fire(element.resource);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Do not show error for roots since we already use an explorer decoration to notify user\n\t\t\t\t\tthis.notificationService.error(e);\n\t\t\t\t}\n\n\t\t\t\treturn []; // we could not resolve any children because of an error\n\t\t\t},\n\t\t);\n\n\t\tthis.progressService.withProgress(\n\t\t\t{\n\t\t\t\tlocation: ProgressLocation.Explorer,\n\t\t\t\tdelay: this.layoutService.isRestored() ? 800 : 1500, // reduce progress visibility when still restoring\n\t\t\t},\n\t\t\t(_progress) => promise,\n\t\t);\n\n\t\treturn promise;\n\t}\n}\n\nexport interface ICompressedNavigationController {\n\treadonly current: ExplorerItem;\n\treadonly currentId: string;\n\treadonly items: ExplorerItem[];\n\treadonly labels: HTMLElement[];\n\treadonly index: number;\n\treadonly count: number;\n\treadonly onDidChange: Event<void>;\n\tprevious(): void;\n\tnext(): void;\n\tfirst(): void;\n\tlast(): void;\n\tsetIndex(index: number): void;\n\tupdateCollapsed(collapsed: boolean): void;\n}\n\nexport class CompressedNavigationController\n\timplements ICompressedNavigationController, IDisposable\n{\n\tstatic ID = 0;\n\n\tprivate _index: number;\n\tprivate _labels!: HTMLElement[];\n\tprivate _updateLabelDisposable: IDisposable;\n\n\tget index(): number {\n\t\treturn this._index;\n\t}\n\tget count(): number {\n\t\treturn this.items.length;\n\t}\n\tget current(): ExplorerItem {\n\t\treturn this.items[this._index]!;\n\t}\n\tget currentId(): string {\n\t\treturn `${this.id}_${this.index}`;\n\t}\n\tget labels(): HTMLElement[] {\n\t\treturn this._labels;\n\t}\n\n\tprivate _onDidChange = new Emitter<void>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate id: string,\n\t\treadonly items: ExplorerItem[],\n\t\ttemplateData: IFileTemplateData,\n\t\tprivate depth: number,\n\t\tprivate collapsed: boolean,\n\t) {\n\t\tthis._index = items.length - 1;\n\n\t\tthis.updateLabels(templateData);\n\t\tthis._updateLabelDisposable = templateData.label.onDidRender(() =>\n\t\t\tthis.updateLabels(templateData),\n\t\t);\n\t}\n\n\tprivate updateLabels(templateData: IFileTemplateData): void {\n\t\tthis._labels = Array.from(\n\t\t\ttemplateData.container.querySelectorAll(\".label-name\"),\n\t\t) as HTMLElement[];\n\t\tlet parents = \"\";\n\t\tfor (let i = 0; i < this.labels.length; i++) {\n\t\t\tconst ariaLabel = parents.length\n\t\t\t\t? `${this.items[i].name}, compact, ${parents}`\n\t\t\t\t: this.items[i].name;\n\t\t\tthis.labels[i].setAttribute(\"aria-label\", ariaLabel);\n\t\t\tthis.labels[i].setAttribute(\"aria-level\", `${this.depth + i}`);\n\t\t\tparents = parents.length\n\t\t\t\t? `${this.items[i].name} ${parents}`\n\t\t\t\t: this.items[i].name;\n\t\t}\n\t\tthis.updateCollapsed(this.collapsed);\n\n\t\tif (this._index < this.labels.length) {\n\t\t\tthis.labels[this._index].classList.add(\"active\");\n\t\t}\n\t}\n\n\tprevious(): void {\n\t\tif (this._index <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(this._index - 1);\n\t}\n\n\tnext(): void {\n\t\tif (this._index >= this.items.length - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(this._index + 1);\n\t}\n\n\tfirst(): void {\n\t\tif (this._index === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(0);\n\t}\n\n\tlast(): void {\n\t\tif (this._index === this.items.length - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(this.items.length - 1);\n\t}\n\n\tsetIndex(index: number): void {\n\t\tif (index < 0 || index >= this.items.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.labels[this._index].classList.remove(\"active\");\n\t\tthis._index = index;\n\t\tthis.labels[this._index].classList.add(\"active\");\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tupdateCollapsed(collapsed: boolean): void {\n\t\tthis.collapsed = collapsed;\n\t\tfor (let i = 0; i < this.labels.length; i++) {\n\t\t\tthis.labels[i].setAttribute(\n\t\t\t\t\"aria-expanded\",\n\t\t\t\tcollapsed ? \"false\" : \"true\",\n\t\t\t);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._updateLabelDisposable.dispose();\n\t}\n}\n\nexport interface IFileTemplateData {\n\treadonly templateDisposables: DisposableStore;\n\treadonly elementDisposables: DisposableStore;\n\treadonly label: IResourceLabel;\n\treadonly container: HTMLElement;\n\treadonly contribs: IExplorerFileContribution[];\n\tcurrentContext?: ExplorerItem;\n}\n\nexport class FilesRenderer\n\timplements\n\t\tICompressibleTreeRenderer<ExplorerItem, FuzzyScore, IFileTemplateData>,\n\t\tIListAccessibilityProvider<ExplorerItem>,\n\t\tIDisposable\n{\n\tstatic readonly ID = \"file\";\n\n\tprivate config: IFilesConfiguration;\n\tprivate configListener: IDisposable;\n\tprivate compressedNavigationControllers = new Map<\n\t\tExplorerItem,\n\t\tCompressedNavigationController[]\n\t>();\n\n\tprivate _onDidChangeActiveDescendant = new EventMultiplexer<void>();\n\treadonly onDidChangeActiveDescendant =\n\t\tthis._onDidChangeActiveDescendant.event;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate labels: ResourceLabels,\n\t\tprivate updateWidth: (stat: ExplorerItem) => void,\n\t\t@IContextViewService\n\t\tprivate readonly contextViewService: IContextViewService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@IContextMenuService\n\t\tprivate readonly contextMenuService: IContextMenuService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {\n\t\tthis.config = this.configurationService.getValue<IFilesConfiguration>();\n\n\t\tconst updateOffsetStyles = () => {\n\t\t\tconst indent = this.configurationService.getValue<number>(\n\t\t\t\t\"workbench.tree.indent\",\n\t\t\t);\n\t\t\tconst offset = Math.max(22 - indent, 0); // derived via inspection\n\t\t\tcontainer.style.setProperty(\n\t\t\t\t`--vscode-explorer-align-offset-margin-left`,\n\t\t\t\t`${offset}px`,\n\t\t\t);\n\t\t};\n\n\t\tthis.configListener =\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(\"explorer\")) {\n\t\t\t\t\tthis.config = this.configurationService.getValue();\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(\"workbench.tree.indent\")) {\n\t\t\t\t\tupdateOffsetStyles();\n\t\t\t\t}\n\t\t\t});\n\n\t\tupdateOffsetStyles();\n\t}\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\"treeAriaLabel\", \"Files Explorer\");\n\t}\n\n\tget templateId(): string {\n\t\treturn FilesRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IFileTemplateData {\n\t\tconst templateDisposables = new DisposableStore();\n\t\tconst label = templateDisposables.add(\n\t\t\tthis.labels.create(container, { supportHighlights: true }),\n\t\t);\n\t\ttemplateDisposables.add(\n\t\t\tlabel.onDidRender(() => {\n\t\t\t\ttry {\n\t\t\t\t\tif (templateData.currentContext) {\n\t\t\t\t\t\tthis.updateWidth(templateData.currentContext);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// noop since the element might no longer be in the tree, no update of width necessary\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst contribs = explorerFileContribRegistry.create(\n\t\t\tthis.instantiationService,\n\t\t\tcontainer,\n\t\t\ttemplateDisposables,\n\t\t);\n\t\ttemplateDisposables.add(\n\t\t\texplorerFileContribRegistry.onDidRegisterDescriptor((d) => {\n\t\t\t\tconst contr = d.create(this.instantiationService, container);\n\t\t\t\tcontribs.push(templateDisposables.add(contr));\n\t\t\t\tcontr.setResource(templateData.currentContext?.resource);\n\t\t\t}),\n\t\t);\n\n\t\tconst templateData: IFileTemplateData = {\n\t\t\ttemplateDisposables,\n\t\t\telementDisposables: templateDisposables.add(new DisposableStore()),\n\t\t\tlabel,\n\t\t\tcontainer,\n\t\t\tcontribs,\n\t\t};\n\t\treturn templateData;\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<ExplorerItem, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IFileTemplateData,\n\t): void {\n\t\tconst stat = node.element;\n\t\ttemplateData.currentContext = stat;\n\n\t\tconst editableData = this.explorerService.getEditableData(stat);\n\n\t\ttemplateData.label.element.classList.remove(\"compressed\");\n\n\t\t// File Label\n\t\tif (editableData) {\n\t\t\ttemplateData.label.element.style.display = \"none\";\n\t\t\ttemplateData.contribs.forEach((c) => c.setResource(undefined));\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\tthis.renderInputBox(templateData.container, stat, editableData),\n\t\t\t);\n\t\t} else {\n\t\t\ttemplateData.label.element.style.display = \"flex\";\n\t\t\tthis.renderStat(\n\t\t\t\tstat,\n\t\t\t\tstat.name,\n\t\t\t\tundefined,\n\t\t\t\tnode.filterData,\n\t\t\t\ttemplateData,\n\t\t\t);\n\t\t}\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<ExplorerItem>, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IFileTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tconst stat = node.element.elements[node.element.elements.length - 1];\n\t\ttemplateData.currentContext = stat;\n\n\t\tconst editable = node.element.elements.filter((e) =>\n\t\t\tthis.explorerService.isEditable(e),\n\t\t);\n\t\tconst editableData =\n\t\t\teditable.length === 0\n\t\t\t\t? undefined\n\t\t\t\t: this.explorerService.getEditableData(editable[0]);\n\n\t\t// File Label\n\t\tif (editableData) {\n\t\t\ttemplateData.label.element.classList.remove(\"compressed\");\n\t\t\ttemplateData.label.element.style.display = \"none\";\n\t\t\ttemplateData.contribs.forEach((c) => c.setResource(undefined));\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\tthis.renderInputBox(\n\t\t\t\t\ttemplateData.container,\n\t\t\t\t\teditable[0],\n\t\t\t\t\teditableData,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\ttemplateData.label.element.classList.add(\"compressed\");\n\t\t\ttemplateData.label.element.style.display = \"flex\";\n\n\t\t\tconst id = `compressed-explorer_${CompressedNavigationController.ID++}`;\n\n\t\t\tconst label = node.element.elements.map((e) => e.name);\n\t\t\tthis.renderStat(stat, label, id, node.filterData, templateData);\n\n\t\t\tconst compressedNavigationController =\n\t\t\t\tnew CompressedNavigationController(\n\t\t\t\t\tid,\n\t\t\t\t\tnode.element.elements,\n\t\t\t\t\ttemplateData,\n\t\t\t\t\tnode.depth,\n\t\t\t\t\tnode.collapsed,\n\t\t\t\t);\n\t\t\ttemplateData.elementDisposables.add(compressedNavigationController);\n\n\t\t\tconst nodeControllers =\n\t\t\t\tthis.compressedNavigationControllers.get(stat) ?? [];\n\t\t\tthis.compressedNavigationControllers.set(stat, [\n\t\t\t\t...nodeControllers,\n\t\t\t\tcompressedNavigationController,\n\t\t\t]);\n\n\t\t\t// accessibility\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\tthis._onDidChangeActiveDescendant.add(\n\t\t\t\t\tcompressedNavigationController.onDidChange,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\ttemplateData.container,\n\t\t\t\t\t\"mousedown\",\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tconst result = getIconLabelNameFromHTMLElement(\n\t\t\t\t\t\t\te.target,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tcompressedNavigationController.setIndex(\n\t\t\t\t\t\t\t\tresult.index,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\ttoDisposable(() => {\n\t\t\t\t\tconst nodeControllers =\n\t\t\t\t\t\tthis.compressedNavigationControllers.get(stat) ?? [];\n\t\t\t\t\tconst renderedIndex = nodeControllers.findIndex(\n\t\t\t\t\t\t(controller) =>\n\t\t\t\t\t\t\tcontroller === compressedNavigationController,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (renderedIndex < 0) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"Disposing unknown navigation controller\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nodeControllers.length === 1) {\n\t\t\t\t\t\tthis.compressedNavigationControllers.delete(stat);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeControllers.splice(renderedIndex, 1);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate renderStat(\n\t\tstat: ExplorerItem,\n\t\tlabel: string | string[],\n\t\tdomId: string | undefined,\n\t\tfilterData: FuzzyScore | undefined,\n\t\ttemplateData: IFileTemplateData,\n\t): void {\n\t\ttemplateData.label.element.style.display = \"flex\";\n\t\tconst extraClasses = [\"explorer-item\"];\n\t\tif (this.explorerService.isCut(stat)) {\n\t\t\textraClasses.push(\"cut\");\n\t\t}\n\n\t\t// Offset nested children unless folders have both chevrons and icons, otherwise alignment breaks\n\t\tconst theme = this.themeService.getFileIconTheme();\n\n\t\t// Hack to always render chevrons for file nests, or else may not be able to identify them.\n\t\tconst twistieContainer =\n\t\t\ttemplateData.container.parentElement?.parentElement?.querySelector(\n\t\t\t\t\".monaco-tl-twistie\",\n\t\t\t);\n\t\ttwistieContainer?.classList.toggle(\n\t\t\t\"force-twistie\",\n\t\t\tstat.hasNests && theme.hidesExplorerArrows,\n\t\t);\n\n\t\t// when explorer arrows are hidden or there are no folder icons, nests get misaligned as they are forced to have arrows and files typically have icons\n\t\t// Apply some CSS magic to get things looking as reasonable as possible.\n\t\tconst themeIsUnhappyWithNesting =\n\t\t\ttheme.hasFileIcons &&\n\t\t\t(theme.hidesExplorerArrows || !theme.hasFolderIcons);\n\t\tconst realignNestedChildren =\n\t\t\tstat.nestedParent && themeIsUnhappyWithNesting;\n\t\ttemplateData.contribs.forEach((c) => c.setResource(stat.resource));\n\t\ttemplateData.label.setResource(\n\t\t\t{ resource: stat.resource, name: label },\n\t\t\t{\n\t\t\t\tfileKind: stat.isRoot\n\t\t\t\t\t? FileKind.ROOT_FOLDER\n\t\t\t\t\t: stat.isDirectory\n\t\t\t\t\t\t? FileKind.FOLDER\n\t\t\t\t\t\t: FileKind.FILE,\n\t\t\t\textraClasses: realignNestedChildren\n\t\t\t\t\t? [...extraClasses, \"align-nest-icon-with-parent-icon\"]\n\t\t\t\t\t: extraClasses,\n\t\t\t\tfileDecorations: this.config.explorer.decorations,\n\t\t\t\tmatches: createMatches(filterData),\n\t\t\t\tseparator: this.labelService.getSeparator(\n\t\t\t\t\tstat.resource.scheme,\n\t\t\t\t\tstat.resource.authority,\n\t\t\t\t),\n\t\t\t\tdomId,\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate renderInputBox(\n\t\tcontainer: HTMLElement,\n\t\tstat: ExplorerItem,\n\t\teditableData: IEditableData,\n\t): IDisposable {\n\t\t// Use a file label only for the icon next to the input box\n\t\tconst label = this.labels.create(container);\n\t\tconst extraClasses = [\"explorer-item\", \"explorer-item-edited\"];\n\t\tconst fileKind = stat.isRoot\n\t\t\t? FileKind.ROOT_FOLDER\n\t\t\t: stat.isDirectory\n\t\t\t\t? FileKind.FOLDER\n\t\t\t\t: FileKind.FILE;\n\n\t\tconst theme = this.themeService.getFileIconTheme();\n\t\tconst themeIsUnhappyWithNesting =\n\t\t\ttheme.hasFileIcons &&\n\t\t\t(theme.hidesExplorerArrows || !theme.hasFolderIcons);\n\t\tconst realignNestedChildren =\n\t\t\tstat.nestedParent && themeIsUnhappyWithNesting;\n\n\t\tconst labelOptions: IFileLabelOptions = {\n\t\t\thidePath: true,\n\t\t\thideLabel: true,\n\t\t\tfileKind,\n\t\t\textraClasses: realignNestedChildren\n\t\t\t\t? [...extraClasses, \"align-nest-icon-with-parent-icon\"]\n\t\t\t\t: extraClasses,\n\t\t};\n\n\t\tconst parent = stat.name ? dirname(stat.resource) : stat.resource;\n\t\tconst value = stat.name || \"\";\n\n\t\tlabel.setFile(joinPath(parent, value || \" \"), labelOptions); // Use icon for ' ' if name is empty.\n\n\t\t// hack: hide label\n\t\t(label.element.firstElementChild as HTMLElement).style.display = \"none\";\n\n\t\t// Input field for name\n\t\tconst inputBox = new InputBox(label.element, this.contextViewService, {\n\t\t\tvalidationOptions: {\n\t\t\t\tvalidation: (value) => {\n\t\t\t\t\tconst message = editableData.validationMessage(value);\n\t\t\t\t\tif (!message || message.severity !== Severity.Error) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcontent: message.content,\n\t\t\t\t\t\tformatContent: true,\n\t\t\t\t\t\ttype: MessageType.ERROR,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t\tariaLabel: localize(\n\t\t\t\t\"fileInputAriaLabel\",\n\t\t\t\t\"Type file name. Press Enter to confirm or Escape to cancel.\",\n\t\t\t),\n\t\t\tinputBoxStyles: defaultInputBoxStyles,\n\t\t});\n\n\t\tconst lastDot = value.lastIndexOf(\".\");\n\t\tlet currentSelectionState = \"prefix\";\n\n\t\tinputBox.value = value;\n\t\tinputBox.focus();\n\t\tinputBox.select({\n\t\t\tstart: 0,\n\t\t\tend: lastDot > 0 && !stat.isDirectory ? lastDot : value.length,\n\t\t});\n\n\t\tconst done = createSingleCallFunction(\n\t\t\t(success: boolean, finishEditing: boolean) => {\n\t\t\t\tlabel.element.style.display = \"none\";\n\t\t\t\tconst value = inputBox.value;\n\t\t\t\tdispose(toDispose);\n\t\t\t\tlabel.element.remove();\n\t\t\t\tif (finishEditing) {\n\t\t\t\t\teditableData.onFinish(value, success);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\tconst showInputBoxNotification = () => {\n\t\t\tif (inputBox.isInputValid()) {\n\t\t\t\tconst message = editableData.validationMessage(inputBox.value);\n\t\t\t\tif (message) {\n\t\t\t\t\tinputBox.showMessage({\n\t\t\t\t\t\tcontent: message.content,\n\t\t\t\t\t\tformatContent: true,\n\t\t\t\t\t\ttype:\n\t\t\t\t\t\t\tmessage.severity === Severity.Info\n\t\t\t\t\t\t\t\t? MessageType.INFO\n\t\t\t\t\t\t\t\t: message.severity === Severity.Warning\n\t\t\t\t\t\t\t\t\t? MessageType.WARNING\n\t\t\t\t\t\t\t\t\t: MessageType.ERROR,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tinputBox.hideMessage();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tshowInputBoxNotification();\n\n\t\tconst toDispose = [\n\t\t\tinputBox,\n\t\t\tinputBox.onDidChange((value) => {\n\t\t\t\tlabel.setFile(joinPath(parent, value || \" \"), labelOptions); // update label icon while typing!\n\t\t\t}),\n\t\t\tDOM.addStandardDisposableListener(\n\t\t\t\tinputBox.inputElement,\n\t\t\t\tDOM.EventType.KEY_DOWN,\n\t\t\t\t(e: IKeyboardEvent) => {\n\t\t\t\t\tif (e.equals(KeyCode.F2)) {\n\t\t\t\t\t\tconst dotIndex = inputBox.value.lastIndexOf(\".\");\n\t\t\t\t\t\tif (stat.isDirectory || dotIndex === -1) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (currentSelectionState === \"prefix\") {\n\t\t\t\t\t\t\tcurrentSelectionState = \"all\";\n\t\t\t\t\t\t\tinputBox.select({\n\t\t\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\t\t\tend: inputBox.value.length,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (currentSelectionState === \"all\") {\n\t\t\t\t\t\t\tcurrentSelectionState = \"suffix\";\n\t\t\t\t\t\t\tinputBox.select({\n\t\t\t\t\t\t\t\tstart: dotIndex + 1,\n\t\t\t\t\t\t\t\tend: inputBox.value.length,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentSelectionState = \"prefix\";\n\t\t\t\t\t\t\tinputBox.select({ start: 0, end: dotIndex });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (e.equals(KeyCode.Enter)) {\n\t\t\t\t\t\tif (!inputBox.validate()) {\n\t\t\t\t\t\t\tdone(true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (e.equals(KeyCode.Escape)) {\n\t\t\t\t\t\tdone(false, true);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t\tDOM.addStandardDisposableListener(\n\t\t\t\tinputBox.inputElement,\n\t\t\t\tDOM.EventType.KEY_UP,\n\t\t\t\t(e: IKeyboardEvent) => {\n\t\t\t\t\tshowInputBoxNotification();\n\t\t\t\t},\n\t\t\t),\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tinputBox.inputElement,\n\t\t\t\tDOM.EventType.BLUR,\n\t\t\t\tasync () => {\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tawait timeout(0);\n\n\t\t\t\t\t\tconst ownerDocument =\n\t\t\t\t\t\t\tinputBox.inputElement.ownerDocument;\n\t\t\t\t\t\tif (!ownerDocument.hasFocus()) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (DOM.isActiveElement(inputBox.inputElement)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tDOM.isHTMLElement(ownerDocument.activeElement) &&\n\t\t\t\t\t\t\tDOM.hasParentWithClass(\n\t\t\t\t\t\t\t\townerDocument.activeElement,\n\t\t\t\t\t\t\t\t\"context-view\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tawait Event.toPromise(\n\t\t\t\t\t\t\t\tthis.contextMenuService.onDidHideContextMenu,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdone(inputBox.isInputValid(), true);\n\t\t\t\t},\n\t\t\t),\n\t\t\tlabel,\n\t\t];\n\n\t\treturn toDisposable(() => {\n\t\t\tdone(false, false);\n\t\t});\n\t}\n\n\tdisposeElement(\n\t\telement: ITreeNode<ExplorerItem, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IFileTemplateData,\n\t): void {\n\t\ttemplateData.currentContext = undefined;\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<ExplorerItem>, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IFileTemplateData,\n\t): void {\n\t\ttemplateData.currentContext = undefined;\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFileTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n\n\tgetCompressedNavigationController(\n\t\tstat: ExplorerItem,\n\t): ICompressedNavigationController[] | undefined {\n\t\treturn this.compressedNavigationControllers.get(stat);\n\t}\n\n\t// IAccessibilityProvider\n\n\tgetAriaLabel(element: ExplorerItem): string {\n\t\treturn element.name;\n\t}\n\n\tgetAriaLevel(element: ExplorerItem): number {\n\t\t// We need to comput aria level on our own since children of compact folders will otherwise have an incorrect level\t#107235\n\t\tlet depth = 0;\n\t\tlet parent = element.parent;\n\t\twhile (parent) {\n\t\t\tparent = parent.parent;\n\t\t\tdepth++;\n\t\t}\n\n\t\tif (\n\t\t\tthis.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE\n\t\t) {\n\t\t\tdepth = depth + 1;\n\t\t}\n\n\t\treturn depth;\n\t}\n\n\tgetActiveDescendantId(stat: ExplorerItem): string | undefined {\n\t\treturn (\n\t\t\tthis.compressedNavigationControllers.get(stat)?.[0]?.currentId ??\n\t\t\tundefined\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis.configListener.dispose();\n\t}\n}\n\ninterface CachedParsedExpression {\n\toriginal: glob.IExpression;\n\tparsed: glob.ParsedExpression;\n}\n\n/**\n * Respects files.exclude setting in filtering out content from the explorer.\n * Makes sure that visible editors are always shown in the explorer even if they are filtered out by settings.\n */\nexport class FilesFilter implements ITreeFilter<ExplorerItem, FuzzyScore> {\n\tprivate hiddenExpressionPerRoot = new Map<string, CachedParsedExpression>();\n\tprivate editorsAffectingFilter = new Set<EditorInput>();\n\tprivate _onDidChange = new Emitter<void>();\n\tprivate toDispose: IDisposable[] = [];\n\t// List of ignoreFile resources. Used to detect changes to the ignoreFiles.\n\tprivate ignoreFileResourcesPerRoot = new Map<string, ResourceSet>();\n\t// Ignore tree per root. Similar to `hiddenExpressionPerRoot`\n\t// Note: URI in the ternary search tree is the URI of the folder containing the ignore file\n\t// It is not the ignore file itself. This is because of the way the IgnoreFile works and nested paths\n\tprivate ignoreTreesPerRoot = new Map<\n\t\tstring,\n\t\tTernarySearchTree<URI, IgnoreFile>\n\t>();\n\n\tconstructor(\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tthis.toDispose.push(\n\t\t\tthis.contextService.onDidChangeWorkspaceFolders(() =>\n\t\t\t\tthis.updateConfiguration(),\n\t\t\t),\n\t\t);\n\t\tthis.toDispose.push(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\"files.exclude\") ||\n\t\t\t\t\te.affectsConfiguration(\"explorer.excludeGitIgnore\")\n\t\t\t\t) {\n\t\t\t\t\tthis.updateConfiguration();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.toDispose.push(\n\t\t\tthis.fileService.onDidFilesChange((e) => {\n\t\t\t\t// Check to see if the update contains any of the ignoreFileResources\n\t\t\t\tfor (const [\n\t\t\t\t\troot,\n\t\t\t\t\tignoreFileResourceSet,\n\t\t\t\t] of this.ignoreFileResourcesPerRoot.entries()) {\n\t\t\t\t\tignoreFileResourceSet.forEach(async (ignoreResource) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te.contains(ignoreResource, FileChangeType.UPDATED)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tawait this.processIgnoreFile(\n\t\t\t\t\t\t\t\troot,\n\t\t\t\t\t\t\t\tignoreResource,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te.contains(ignoreResource, FileChangeType.DELETED)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.ignoreTreesPerRoot\n\t\t\t\t\t\t\t\t.get(root)\n\t\t\t\t\t\t\t\t?.delete(dirname(ignoreResource));\n\t\t\t\t\t\t\tignoreFileResourceSet.delete(ignoreResource);\n\t\t\t\t\t\t\tthis._onDidChange.fire();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.toDispose.push(\n\t\t\tthis.editorService.onDidVisibleEditorsChange(() => {\n\t\t\t\tconst editors = this.editorService.visibleEditors;\n\t\t\t\tlet shouldFire = false;\n\n\t\t\t\tfor (const e of editors) {\n\t\t\t\t\tif (!e.resource) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst stat = this.explorerService.findClosest(e.resource);\n\t\t\t\t\tif (stat && stat.isExcluded) {\n\t\t\t\t\t\t// A filtered resource suddenly became visible since user opened an editor\n\t\t\t\t\t\tshouldFire = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const e of this.editorsAffectingFilter) {\n\t\t\t\t\tif (!editors.includes(e)) {\n\t\t\t\t\t\t// Editor that was affecting filtering is no longer visible\n\t\t\t\t\t\tshouldFire = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (shouldFire) {\n\t\t\t\t\tthis.editorsAffectingFilter.clear();\n\t\t\t\t\tthis._onDidChange.fire();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.updateConfiguration();\n\t}\n\n\tget onDidChange(): Event<void> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tprivate updateConfiguration(): void {\n\t\tlet shouldFire = false;\n\t\tlet updatedGitIgnoreSetting = false;\n\t\tthis.contextService.getWorkspace().folders.forEach((folder) => {\n\t\t\tconst configuration =\n\t\t\t\tthis.configurationService.getValue<IFilesConfiguration>({\n\t\t\t\t\tresource: folder.uri,\n\t\t\t\t});\n\t\t\tconst excludesConfig: glob.IExpression =\n\t\t\t\tconfiguration?.files?.exclude || Object.create(null);\n\t\t\tconst parseIgnoreFile: boolean =\n\t\t\t\tconfiguration.explorer.excludeGitIgnore;\n\n\t\t\t// If we should be parsing ignoreFiles for this workspace and don't have an ignore tree initialize one\n\t\t\tif (\n\t\t\t\tparseIgnoreFile &&\n\t\t\t\t!this.ignoreTreesPerRoot.has(folder.uri.toString())\n\t\t\t) {\n\t\t\t\tupdatedGitIgnoreSetting = true;\n\t\t\t\tthis.ignoreFileResourcesPerRoot.set(\n\t\t\t\t\tfolder.uri.toString(),\n\t\t\t\t\tnew ResourceSet(),\n\t\t\t\t);\n\t\t\t\tthis.ignoreTreesPerRoot.set(\n\t\t\t\t\tfolder.uri.toString(),\n\t\t\t\t\tTernarySearchTree.forUris((uri) =>\n\t\t\t\t\t\tthis.uriIdentityService.extUri.ignorePathCasing(uri),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// If we shouldn't be parsing ignore files but have an ignore tree, clear the ignore tree\n\t\t\tif (\n\t\t\t\t!parseIgnoreFile &&\n\t\t\t\tthis.ignoreTreesPerRoot.has(folder.uri.toString())\n\t\t\t) {\n\t\t\t\tupdatedGitIgnoreSetting = true;\n\t\t\t\tthis.ignoreFileResourcesPerRoot.delete(folder.uri.toString());\n\t\t\t\tthis.ignoreTreesPerRoot.delete(folder.uri.toString());\n\t\t\t}\n\n\t\t\tif (!shouldFire) {\n\t\t\t\tconst cached = this.hiddenExpressionPerRoot.get(\n\t\t\t\t\tfolder.uri.toString(),\n\t\t\t\t);\n\t\t\t\tshouldFire =\n\t\t\t\t\t!cached || !equals(cached.original, excludesConfig);\n\t\t\t}\n\n\t\t\tconst excludesConfigCopy = deepClone(excludesConfig); // do not keep the config, as it gets mutated under our hoods\n\n\t\t\tthis.hiddenExpressionPerRoot.set(folder.uri.toString(), {\n\t\t\t\toriginal: excludesConfigCopy,\n\t\t\t\tparsed: glob.parse(excludesConfigCopy),\n\t\t\t});\n\t\t});\n\n\t\tif (shouldFire || updatedGitIgnoreSetting) {\n\t\t\tthis.editorsAffectingFilter.clear();\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\t/**\n\t * Given a .gitignore file resource, processes the resource and adds it to the ignore tree which hides explorer items\n\t * @param root The root folder of the workspace as a string. Used for lookup key for ignore tree and resource list\n\t * @param ignoreFileResource The resource of the .gitignore file\n\t * @param update Whether or not we're updating an existing ignore file. If true it deletes the old entry\n\t */\n\tprivate async processIgnoreFile(\n\t\troot: string,\n\t\tignoreFileResource: URI,\n\t\tupdate?: boolean,\n\t) {\n\t\t// Get the name of the directory which the ignore file is in\n\t\tconst dirUri = dirname(ignoreFileResource);\n\t\tconst ignoreTree = this.ignoreTreesPerRoot.get(root);\n\t\tif (!ignoreTree) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't process a directory if we already have it in the tree\n\t\tif (!update && ignoreTree.has(dirUri)) {\n\t\t\treturn;\n\t\t}\n\t\t// Maybe we need a cancellation token here in case it's super long?\n\t\tconst content = await this.fileService.readFile(ignoreFileResource);\n\n\t\t// If it's just an update we update the contents keeping all references the same\n\t\tif (update) {\n\t\t\tconst ignoreFile = ignoreTree.get(dirUri);\n\t\t\tignoreFile?.updateContents(content.value.toString());\n\t\t} else {\n\t\t\t// Otherwise we create a new ignorefile and add it to the tree\n\t\t\tconst ignoreParent = ignoreTree.findSubstr(dirUri);\n\t\t\tconst ignoreFile = new IgnoreFile(\n\t\t\t\tcontent.value.toString(),\n\t\t\t\tdirUri.path,\n\t\t\t\tignoreParent,\n\t\t\t);\n\t\t\tignoreTree.set(dirUri, ignoreFile);\n\t\t\t// If we haven't seen this resource before then we need to add it to the list of resources we're tracking\n\t\t\tif (\n\t\t\t\t!this.ignoreFileResourcesPerRoot\n\t\t\t\t\t.get(root)\n\t\t\t\t\t?.has(ignoreFileResource)\n\t\t\t) {\n\t\t\t\tthis.ignoreFileResourcesPerRoot\n\t\t\t\t\t.get(root)\n\t\t\t\t\t?.add(ignoreFileResource);\n\t\t\t}\n\t\t}\n\n\t\t// Notify the explorer of the change so we may ignore these files\n\t\tthis._onDidChange.fire();\n\t}\n\n\tfilter(stat: ExplorerItem, parentVisibility: TreeVisibility): boolean {\n\t\t// Add newly visited .gitignore files to the ignore tree\n\t\tif (\n\t\t\tstat.name === \".gitignore\" &&\n\t\t\tthis.ignoreTreesPerRoot.has(stat.root.resource.toString())\n\t\t) {\n\t\t\tthis.processIgnoreFile(\n\t\t\t\tstat.root.resource.toString(),\n\t\t\t\tstat.resource,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isVisible(stat, parentVisibility);\n\t}\n\n\tprivate isVisible(\n\t\tstat: ExplorerItem,\n\t\tparentVisibility: TreeVisibility,\n\t): boolean {\n\t\tstat.isExcluded = false;\n\t\tif (parentVisibility === TreeVisibility.Hidden) {\n\t\t\tstat.isExcluded = true;\n\t\t\treturn false;\n\t\t}\n\t\tif (this.explorerService.getEditableData(stat)) {\n\t\t\treturn true; // always visible\n\t\t}\n\n\t\t// Hide those that match Hidden Patterns\n\t\tconst cached = this.hiddenExpressionPerRoot.get(\n\t\t\tstat.root.resource.toString(),\n\t\t);\n\t\tconst globMatch = cached?.parsed(\n\t\t\tpath.relative(stat.root.resource.path, stat.resource.path),\n\t\t\tstat.name,\n\t\t\t(name) => !!(stat.parent && stat.parent.getChild(name)),\n\t\t);\n\t\t// Small optimization to only traverse gitIgnore if the globMatch from fileExclude returned nothing\n\t\tconst ignoreFile = globMatch\n\t\t\t? undefined\n\t\t\t: this.ignoreTreesPerRoot\n\t\t\t\t\t.get(stat.root.resource.toString())\n\t\t\t\t\t?.findSubstr(stat.resource);\n\t\tconst isIncludedInTraversal = ignoreFile?.isPathIncludedInTraversal(\n\t\t\tstat.resource.path,\n\t\t\tstat.isDirectory,\n\t\t);\n\t\t// Doing !undefined returns true and we want it to be false when undefined because that means it's not included in the ignore file\n\t\tconst isIgnoredByIgnoreFile =\n\t\t\tisIncludedInTraversal === undefined\n\t\t\t\t? false\n\t\t\t\t: !isIncludedInTraversal;\n\t\tif (isIgnoredByIgnoreFile || globMatch || stat.parent?.isExcluded) {\n\t\t\tstat.isExcluded = true;\n\t\t\tconst editors = this.editorService.visibleEditors;\n\t\t\tconst editor = editors.find(\n\t\t\t\t(e) =>\n\t\t\t\t\te.resource &&\n\t\t\t\t\tthis.uriIdentityService.extUri.isEqualOrParent(\n\t\t\t\t\t\te.resource,\n\t\t\t\t\t\tstat.resource,\n\t\t\t\t\t),\n\t\t\t);\n\t\t\tif (\n\t\t\t\teditor &&\n\t\t\t\tstat.root ===\n\t\t\t\t\tthis.explorerService.findClosestRoot(stat.resource)\n\t\t\t) {\n\t\t\t\tthis.editorsAffectingFilter.add(editor);\n\t\t\t\treturn true; // Show all opened files and their parents\n\t\t\t}\n\n\t\t\treturn false; // hidden through pattern\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.toDispose);\n\t}\n}\n\n// Explorer Sorter\nexport class FileSorter implements ITreeSorter<ExplorerItem> {\n\tconstructor(\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t) {}\n\n\tcompare(statA: ExplorerItem, statB: ExplorerItem): number {\n\t\t// Do not sort roots\n\t\tif (statA.isRoot) {\n\t\t\tif (statB.isRoot) {\n\t\t\t\tconst workspaceA = this.contextService.getWorkspaceFolder(\n\t\t\t\t\tstatA.resource,\n\t\t\t\t);\n\t\t\t\tconst workspaceB = this.contextService.getWorkspaceFolder(\n\t\t\t\t\tstatB.resource,\n\t\t\t\t);\n\t\t\t\treturn workspaceA && workspaceB\n\t\t\t\t\t? workspaceA.index - workspaceB.index\n\t\t\t\t\t: -1;\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (statB.isRoot) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst sortOrder = this.explorerService.sortOrderConfiguration.sortOrder;\n\t\tconst lexicographicOptions =\n\t\t\tthis.explorerService.sortOrderConfiguration.lexicographicOptions;\n\t\tconst reverse = this.explorerService.sortOrderConfiguration.reverse;\n\t\tif (reverse) {\n\t\t\t[statA, statB] = [statB, statA];\n\t\t}\n\n\t\tlet compareFileNames;\n\t\tlet compareFileExtensions;\n\t\tswitch (lexicographicOptions) {\n\t\t\tcase \"upper\":\n\t\t\t\tcompareFileNames = compareFileNamesUpper;\n\t\t\t\tcompareFileExtensions = compareFileExtensionsUpper;\n\t\t\t\tbreak;\n\t\t\tcase \"lower\":\n\t\t\t\tcompareFileNames = compareFileNamesLower;\n\t\t\t\tcompareFileExtensions = compareFileExtensionsLower;\n\t\t\t\tbreak;\n\t\t\tcase \"unicode\":\n\t\t\t\tcompareFileNames = compareFileNamesUnicode;\n\t\t\t\tcompareFileExtensions = compareFileExtensionsUnicode;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// 'default'\n\t\t\t\tcompareFileNames = compareFileNamesDefault;\n\t\t\t\tcompareFileExtensions = compareFileExtensionsDefault;\n\t\t}\n\n\t\t// Sort Directories\n\t\tswitch (sortOrder) {\n\t\t\tcase \"type\":\n\t\t\t\tif (statA.isDirectory && !statB.isDirectory) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.isDirectory && !statA.isDirectory) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (statA.isDirectory && statB.isDirectory) {\n\t\t\t\t\treturn compareFileNames(statA.name, statB.name);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"filesFirst\":\n\t\t\t\tif (statA.isDirectory && !statB.isDirectory) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.isDirectory && !statA.isDirectory) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"foldersNestsFiles\":\n\t\t\t\tif (statA.isDirectory && !statB.isDirectory) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.isDirectory && !statA.isDirectory) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (statA.hasNests && !statB.hasNests) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.hasNests && !statA.hasNests) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"mixed\":\n\t\t\t\tbreak; // not sorting when \"mixed\" is on\n\n\t\t\tdefault: /* 'default', 'modified' */\n\t\t\t\tif (statA.isDirectory && !statB.isDirectory) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.isDirectory && !statA.isDirectory) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Sort Files\n\t\tswitch (sortOrder) {\n\t\t\tcase \"type\":\n\t\t\t\treturn compareFileExtensions(statA.name, statB.name);\n\n\t\t\tcase \"modified\":\n\t\t\t\tif (statA.mtime !== statB.mtime) {\n\t\t\t\t\treturn statA.mtime &&\n\t\t\t\t\t\tstatB.mtime &&\n\t\t\t\t\t\tstatA.mtime < statB.mtime\n\t\t\t\t\t\t? 1\n\t\t\t\t\t\t: -1;\n\t\t\t\t}\n\n\t\t\t\treturn compareFileNames(statA.name, statB.name);\n\n\t\t\tdefault: /* 'default', 'mixed', 'filesFirst' */\n\t\t\t\treturn compareFileNames(statA.name, statB.name);\n\t\t}\n\t}\n}\n\nexport class FileDragAndDrop implements ITreeDragAndDrop<ExplorerItem> {\n\tprivate static readonly CONFIRM_DND_SETTING_KEY =\n\t\t\"explorer.confirmDragAndDrop\";\n\n\tprivate compressedDragOverElement: HTMLElement | undefined;\n\tprivate compressedDropTargetDisposable: IDisposable = Disposable.None;\n\n\tprivate readonly disposables = new DisposableStore();\n\tprivate dropEnabled = false;\n\n\tconstructor(\n\t\tprivate isCollapsed: (item: ExplorerItem) => boolean,\n\t\t@IExplorerService private explorerService: IExplorerService,\n\t\t@IEditorService private editorService: IEditorService,\n\t\t@IDialogService private dialogService: IDialogService,\n\t\t@IWorkspaceContextService\n\t\tprivate contextService: IWorkspaceContextService,\n\t\t@IFileService private fileService: IFileService,\n\t\t@IConfigurationService\n\t\tprivate configurationService: IConfigurationService,\n\t\t@IInstantiationService\n\t\tprivate instantiationService: IInstantiationService,\n\t\t@IWorkspaceEditingService\n\t\tprivate workspaceEditingService: IWorkspaceEditingService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tconst updateDropEnablement = (\n\t\t\te: IConfigurationChangeEvent | undefined,\n\t\t) => {\n\t\t\tif (!e || e.affectsConfiguration(\"explorer.enableDragAndDrop\")) {\n\t\t\t\tthis.dropEnabled = this.configurationService.getValue(\n\t\t\t\t\t\"explorer.enableDragAndDrop\",\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tupdateDropEnablement(undefined);\n\t\tthis.disposables.add(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) =>\n\t\t\t\tupdateDropEnablement(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tonDragOver(\n\t\tdata: IDragAndDropData,\n\t\ttarget: ExplorerItem | undefined,\n\t\ttargetIndex: number | undefined,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): boolean | ITreeDragOverReaction {\n\t\tif (!this.dropEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Compressed folders\n\t\tif (target) {\n\t\t\tconst compressedTarget =\n\t\t\t\tFileDragAndDrop.getCompressedStatFromDragEvent(\n\t\t\t\t\ttarget,\n\t\t\t\t\toriginalEvent,\n\t\t\t\t);\n\n\t\t\tif (compressedTarget) {\n\t\t\t\tconst iconLabelName = getIconLabelNameFromHTMLElement(\n\t\t\t\t\toriginalEvent.target,\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\ticonLabelName &&\n\t\t\t\t\ticonLabelName.index < iconLabelName.count - 1\n\t\t\t\t) {\n\t\t\t\t\tconst result = this.handleDragOver(\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tcompressedTarget,\n\t\t\t\t\t\ttargetIndex,\n\t\t\t\t\t\ttargetSector,\n\t\t\t\t\t\toriginalEvent,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ticonLabelName.element !==\n\t\t\t\t\t\t\tthis.compressedDragOverElement\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.compressedDragOverElement =\n\t\t\t\t\t\t\t\ticonLabelName.element;\n\t\t\t\t\t\t\tthis.compressedDropTargetDisposable.dispose();\n\t\t\t\t\t\t\tthis.compressedDropTargetDisposable = toDisposable(\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\ticonLabelName.element.classList.remove(\n\t\t\t\t\t\t\t\t\t\t\"drop-target\",\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.compressedDragOverElement = undefined;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\ticonLabelName.element.classList.add(\"drop-target\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn typeof result === \"boolean\"\n\t\t\t\t\t\t\t? result\n\t\t\t\t\t\t\t: { ...result, feedback: [] };\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.compressedDropTargetDisposable.dispose();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.compressedDropTargetDisposable.dispose();\n\t\treturn this.handleDragOver(\n\t\t\tdata,\n\t\t\ttarget,\n\t\t\ttargetIndex,\n\t\t\ttargetSector,\n\t\t\toriginalEvent,\n\t\t);\n\t}\n\n\tprivate handleDragOver(\n\t\tdata: IDragAndDropData,\n\t\ttarget: ExplorerItem | undefined,\n\t\ttargetIndex: number | undefined,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): boolean | ITreeDragOverReaction {\n\t\tconst isCopy =\n\t\t\toriginalEvent &&\n\t\t\t((originalEvent.ctrlKey && !isMacintosh) ||\n\t\t\t\t(originalEvent.altKey && isMacintosh));\n\t\tconst isNative = data instanceof NativeDragAndDropData;\n\t\tconst effectType =\n\t\t\tisNative || isCopy\n\t\t\t\t? ListDragOverEffectType.Copy\n\t\t\t\t: ListDragOverEffectType.Move;\n\t\tconst effect = {\n\t\t\ttype: effectType,\n\t\t\tposition: ListDragOverEffectPosition.Over,\n\t\t};\n\n\t\t// Native DND\n\t\tif (isNative) {\n\t\t\tif (\n\t\t\t\t!containsDragType(\n\t\t\t\t\toriginalEvent,\n\t\t\t\t\tDataTransfers.FILES,\n\t\t\t\t\tCodeDataTransfers.FILES,\n\t\t\t\t\tDataTransfers.RESOURCES,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Other-Tree DND\n\t\telse if (data instanceof ExternalElementsDragAndDropData) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In-Explorer DND\n\t\telse {\n\t\t\tconst items = FileDragAndDrop.getStatsFromDragAndDropData(\n\t\t\t\tdata as ElementsDragAndDropData<ExplorerItem, ExplorerItem[]>,\n\t\t\t);\n\t\t\tconst isRootsReorder = items.every((item) => item.isRoot);\n\n\t\t\tif (!target) {\n\t\t\t\t// Dropping onto the empty area. Do not accept if items dragged are already\n\t\t\t\t// children of the root unless we are copying the file\n\t\t\t\tif (\n\t\t\t\t\t!isCopy &&\n\t\t\t\t\titems.every((i) => !!i.parent && i.parent.isRoot)\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// root is added after last root folder when hovering on empty background\n\t\t\t\tif (isRootsReorder) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\taccept: true,\n\t\t\t\t\t\teffect: {\n\t\t\t\t\t\t\ttype: ListDragOverEffectType.Move,\n\t\t\t\t\t\t\tposition: ListDragOverEffectPosition.After,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\taccept: true,\n\t\t\t\t\tbubble: TreeDragOverBubble.Down,\n\t\t\t\t\teffect,\n\t\t\t\t\tautoExpand: false,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (!Array.isArray(items)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isCopy && items.every((source) => source.isReadonly)) {\n\t\t\t\treturn false; // Cannot move readonly items unless we copy\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\titems.some((source) => {\n\t\t\t\t\tif (source.isRoot) {\n\t\t\t\t\t\treturn false; // Root folders are handled seperately\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\t\tsource.resource,\n\t\t\t\t\t\t\ttarget.resource,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true; // Can not move anything onto itself excpet for root folders\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t!isCopy &&\n\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\t\tdirname(source.resource),\n\t\t\t\t\t\t\ttarget.resource,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true; // Can not move a file to the same parent unless we copy\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqualOrParent(\n\t\t\t\t\t\t\ttarget.resource,\n\t\t\t\t\t\t\tsource.resource,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true; // Can not move a parent folder into one of its children\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// reordering roots\n\t\t\tif (isRootsReorder) {\n\t\t\t\tif (!target.isRoot) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet dropEffectPosition: ListDragOverEffectPosition | undefined;\n\t\t\t\tswitch (targetSector) {\n\t\t\t\t\tcase ListViewTargetSector.TOP:\n\t\t\t\t\tcase ListViewTargetSector.CENTER_TOP:\n\t\t\t\t\t\tdropEffectPosition = ListDragOverEffectPosition.Before;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ListViewTargetSector.CENTER_BOTTOM:\n\t\t\t\t\tcase ListViewTargetSector.BOTTOM:\n\t\t\t\t\t\tdropEffectPosition = ListDragOverEffectPosition.After;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\taccept: true,\n\t\t\t\t\teffect: {\n\t\t\t\t\t\ttype: ListDragOverEffectType.Move,\n\t\t\t\t\t\tposition: dropEffectPosition,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// All (target = model)\n\t\tif (target) {\n\t\t\tif (target.isDirectory) {\n\t\t\t\tif (target.isReadonly) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\taccept: true,\n\t\t\t\t\tbubble: TreeDragOverBubble.Down,\n\t\t\t\t\teffect,\n\t\t\t\t\tautoExpand: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.contextService\n\t\t\t\t\t.getWorkspace()\n\t\t\t\t\t.folders.every(\n\t\t\t\t\t\t(folder) =>\n\t\t\t\t\t\t\tfolder.uri.toString() !==\n\t\t\t\t\t\t\ttarget.resource.toString(),\n\t\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn { accept: true, bubble: TreeDragOverBubble.Up, effect };\n\t\t\t}\n\t\t} else {\n\t\t\treturn { accept: true, bubble: TreeDragOverBubble.Down, effect };\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetDragURI(element: ExplorerItem): string | null {\n\t\tif (this.explorerService.isEditable(element)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn element.resource.toString();\n\t}\n\n\tgetDragLabel(\n\t\telements: ExplorerItem[],\n\t\toriginalEvent: DragEvent,\n\t): string | undefined {\n\t\tif (elements.length === 1) {\n\t\t\tconst stat = FileDragAndDrop.getCompressedStatFromDragEvent(\n\t\t\t\telements[0],\n\t\t\t\toriginalEvent,\n\t\t\t);\n\t\t\treturn stat.name;\n\t\t}\n\n\t\treturn String(elements.length);\n\t}\n\n\tonDragStart(data: IDragAndDropData, originalEvent: DragEvent): void {\n\t\tconst items = FileDragAndDrop.getStatsFromDragAndDropData(\n\t\t\tdata as ElementsDragAndDropData<ExplorerItem, ExplorerItem[]>,\n\t\t\toriginalEvent,\n\t\t);\n\t\tif (items && items.length && originalEvent.dataTransfer) {\n\t\t\t// Apply some datatransfer types to allow for dragging the element outside of the application\n\t\t\tthis.instantiationService.invokeFunction((accessor) =>\n\t\t\t\tfillEditorsDragData(accessor, items, originalEvent),\n\t\t\t);\n\n\t\t\t// The only custom data transfer we set from the explorer is a file transfer\n\t\t\t// to be able to DND between multiple code file explorers across windows\n\t\t\tconst fileResources = items\n\t\t\t\t.filter((s) => s.resource.scheme === Schemas.file)\n\t\t\t\t.map((r) => r.resource.fsPath);\n\t\t\tif (fileResources.length) {\n\t\t\t\toriginalEvent.dataTransfer.setData(\n\t\t\t\t\tCodeDataTransfers.FILES,\n\t\t\t\t\tJSON.stringify(fileResources),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync drop(\n\t\tdata: IDragAndDropData,\n\t\ttarget: ExplorerItem | undefined,\n\t\ttargetIndex: number | undefined,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): Promise<void> {\n\t\tthis.compressedDropTargetDisposable.dispose();\n\n\t\t// Find compressed target\n\t\tif (target) {\n\t\t\tconst compressedTarget =\n\t\t\t\tFileDragAndDrop.getCompressedStatFromDragEvent(\n\t\t\t\t\ttarget,\n\t\t\t\t\toriginalEvent,\n\t\t\t\t);\n\n\t\t\tif (compressedTarget) {\n\t\t\t\ttarget = compressedTarget;\n\t\t\t}\n\t\t}\n\n\t\t// Find parent to add to\n\t\tif (!target) {\n\t\t\ttarget =\n\t\t\t\tthis.explorerService.roots[\n\t\t\t\t\tthis.explorerService.roots.length - 1\n\t\t\t\t];\n\t\t\ttargetSector = ListViewTargetSector.BOTTOM;\n\t\t}\n\t\tif (!target.isDirectory && target.parent) {\n\t\t\ttarget = target.parent;\n\t\t}\n\t\tif (target.isReadonly) {\n\t\t\treturn;\n\t\t}\n\t\tconst resolvedTarget = target;\n\t\tif (!resolvedTarget) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t// External file DND (Import/Upload file)\n\t\t\tif (data instanceof NativeDragAndDropData) {\n\t\t\t\t// Use local file import when supported\n\t\t\t\tif (\n\t\t\t\t\t!isWeb ||\n\t\t\t\t\t(isTemporaryWorkspace(this.contextService.getWorkspace()) &&\n\t\t\t\t\t\tWebFileSystemAccess.supported(mainWindow))\n\t\t\t\t) {\n\t\t\t\t\tconst fileImport =\n\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\tExternalFileImport,\n\t\t\t\t\t\t);\n\t\t\t\t\tawait fileImport.import(\n\t\t\t\t\t\tresolvedTarget,\n\t\t\t\t\t\toriginalEvent,\n\t\t\t\t\t\tmainWindow,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// Otherwise fallback to browser based file upload\n\t\t\t\telse {\n\t\t\t\t\tconst browserUpload =\n\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\tBrowserFileUpload,\n\t\t\t\t\t\t);\n\t\t\t\t\tawait browserUpload.upload(target, originalEvent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In-Explorer DND (Move/Copy file)\n\t\t\telse {\n\t\t\t\tawait this.handleExplorerDrop(\n\t\t\t\t\tdata as ElementsDragAndDropData<\n\t\t\t\t\t\tExplorerItem,\n\t\t\t\t\t\tExplorerItem[]\n\t\t\t\t\t>,\n\t\t\t\t\tresolvedTarget,\n\t\t\t\t\ttargetIndex,\n\t\t\t\t\ttargetSector,\n\t\t\t\t\toriginalEvent,\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.dialogService.error(toErrorMessage(error));\n\t\t}\n\t}\n\n\tprivate async handleExplorerDrop(\n\t\tdata: ElementsDragAndDropData<ExplorerItem, ExplorerItem[]>,\n\t\ttarget: ExplorerItem,\n\t\ttargetIndex: number | undefined,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): Promise<void> {\n\t\tconst elementsData = FileDragAndDrop.getStatsFromDragAndDropData(data);\n\t\tconst distinctItems = new Map(\n\t\t\telementsData.map((element) => [element, this.isCollapsed(element)]),\n\t\t);\n\n\t\tfor (const [item, collapsed] of distinctItems) {\n\t\t\tif (collapsed) {\n\t\t\t\tconst nestedChildren = item.nestedChildren;\n\t\t\t\tif (nestedChildren) {\n\t\t\t\t\tfor (const child of nestedChildren) {\n\t\t\t\t\t\t// if parent is collapsed, then the nested children is considered collapsed to operate as a group\n\t\t\t\t\t\t// and skip collapsed state check since they're not in the tree\n\t\t\t\t\t\tdistinctItems.set(child, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst items = distinctParents(\n\t\t\t[...distinctItems.keys()],\n\t\t\t(s) => s.resource,\n\t\t);\n\t\tconst isCopy =\n\t\t\t(originalEvent.ctrlKey && !isMacintosh) ||\n\t\t\t(originalEvent.altKey && isMacintosh);\n\n\t\t// Handle confirm setting\n\t\tconst confirmDragAndDrop =\n\t\t\t!isCopy &&\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\tFileDragAndDrop.CONFIRM_DND_SETTING_KEY,\n\t\t\t);\n\t\tif (confirmDragAndDrop) {\n\t\t\tconst message =\n\t\t\t\titems.length > 1 && items.every((s) => s.isRoot)\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"confirmRootsMove\",\n\t\t\t\t\t\t\t\"Are you sure you want to change the order of multiple root folders in your workspace?\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: items.length > 1\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\"confirmMultiMove\",\n\t\t\t\t\t\t\t\t\"Are you sure you want to move the following {0} files into '{1}'?\",\n\t\t\t\t\t\t\t\titems.length,\n\t\t\t\t\t\t\t\ttarget.name,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: items[0].isRoot\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"confirmRootMove\",\n\t\t\t\t\t\t\t\t\t\"Are you sure you want to change the order of root folder '{0}' in your workspace?\",\n\t\t\t\t\t\t\t\t\titems[0].name,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"confirmMove\",\n\t\t\t\t\t\t\t\t\t\"Are you sure you want to move '{0}' into '{1}'?\",\n\t\t\t\t\t\t\t\t\titems[0].name,\n\t\t\t\t\t\t\t\t\ttarget.name,\n\t\t\t\t\t\t\t\t);\n\t\t\tconst detail =\n\t\t\t\titems.length > 1 && !items.every((s) => s.isRoot)\n\t\t\t\t\t? getFileNamesMessage(items.map((i) => i.resource))\n\t\t\t\t\t: undefined;\n\n\t\t\tconst confirmation = await this.dialogService.confirm({\n\t\t\t\tmessage,\n\t\t\t\tdetail,\n\t\t\t\tcheckbox: {\n\t\t\t\t\tlabel: localize(\"doNotAskAgain\", \"Do not ask me again\"),\n\t\t\t\t},\n\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"moveButtonLabel\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Move\",\n\t\t\t\t),\n\t\t\t});\n\n\t\t\tif (!confirmation.confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check for confirmation checkbox\n\t\t\tif (confirmation.checkboxChecked === true) {\n\t\t\t\tawait this.configurationService.updateValue(\n\t\t\t\t\tFileDragAndDrop.CONFIRM_DND_SETTING_KEY,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tawait this.doHandleRootDrop(\n\t\t\titems.filter((s) => s.isRoot),\n\t\t\ttarget,\n\t\t\ttargetSector,\n\t\t);\n\n\t\tconst sources = items.filter((s) => !s.isRoot);\n\t\tif (isCopy) {\n\t\t\treturn this.doHandleExplorerDropOnCopy(sources, target);\n\t\t}\n\n\t\treturn this.doHandleExplorerDropOnMove(sources, target);\n\t}\n\n\tprivate async doHandleRootDrop(\n\t\troots: ExplorerItem[],\n\t\ttarget: ExplorerItem,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t): Promise<void> {\n\t\tif (roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst folders = this.contextService.getWorkspace().folders;\n\t\tlet targetIndex: number | undefined;\n\t\tconst sourceIndices: number[] = [];\n\t\tconst workspaceCreationData: IWorkspaceFolderCreationData[] = [];\n\t\tconst rootsToMove: IWorkspaceFolderCreationData[] = [];\n\n\t\tfor (let index = 0; index < folders.length; index++) {\n\t\t\tconst data = {\n\t\t\t\turi: folders[index].uri,\n\t\t\t\tname: folders[index].name,\n\t\t\t};\n\n\t\t\t// Is current target\n\t\t\tif (\n\t\t\t\ttarget instanceof ExplorerItem &&\n\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\tfolders[index].uri,\n\t\t\t\t\ttarget.resource,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\ttargetIndex = index;\n\t\t\t}\n\n\t\t\t// Is current source\n\t\t\tfor (const root of roots) {\n\t\t\t\tif (\n\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\tfolders[index].uri,\n\t\t\t\t\t\troot.resource,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tsourceIndices.push(index);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\troots.every(\n\t\t\t\t\t(r) =>\n\t\t\t\t\t\tr.resource.toString() !== folders[index].uri.toString(),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tworkspaceCreationData.push(data);\n\t\t\t} else {\n\t\t\t\trootsToMove.push(data);\n\t\t\t}\n\t\t}\n\t\tif (targetIndex === undefined) {\n\t\t\ttargetIndex = workspaceCreationData.length;\n\t\t} else {\n\t\t\tswitch (targetSector) {\n\t\t\t\tcase ListViewTargetSector.BOTTOM:\n\t\t\t\tcase ListViewTargetSector.CENTER_BOTTOM:\n\t\t\t\t\ttargetIndex++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Adjust target index if source was located before target.\n\t\t\t// The move will cause the index to change\n\t\t\tfor (const sourceIndex of sourceIndices) {\n\t\t\t\tif (sourceIndex < targetIndex) {\n\t\t\t\t\ttargetIndex--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tworkspaceCreationData.splice(targetIndex, 0, ...rootsToMove);\n\n\t\treturn this.workspaceEditingService.updateFolders(\n\t\t\t0,\n\t\t\tworkspaceCreationData.length,\n\t\t\tworkspaceCreationData,\n\t\t);\n\t}\n\n\tprivate async doHandleExplorerDropOnCopy(\n\t\tsources: ExplorerItem[],\n\t\ttarget: ExplorerItem,\n\t): Promise<void> {\n\t\t// Reuse duplicate action when user copies\n\t\tconst explorerConfig =\n\t\t\tthis.configurationService.getValue<IFilesConfiguration>().explorer;\n\t\tconst resourceFileEdits: ResourceFileEdit[] = [];\n\t\tfor (const { resource, isDirectory } of sources) {\n\t\t\tconst allowOverwrite =\n\t\t\t\texplorerConfig.incrementalNaming === \"disabled\";\n\t\t\tconst newResource = await findValidPasteFileTarget(\n\t\t\t\tthis.explorerService,\n\t\t\t\tthis.fileService,\n\t\t\t\tthis.dialogService,\n\t\t\t\ttarget,\n\t\t\t\t{ resource, isDirectory, allowOverwrite },\n\t\t\t\texplorerConfig.incrementalNaming,\n\t\t\t);\n\t\t\tif (!newResource) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst resourceEdit = new ResourceFileEdit(resource, newResource, {\n\t\t\t\tcopy: true,\n\t\t\t\toverwrite: allowOverwrite,\n\t\t\t});\n\t\t\tresourceFileEdits.push(resourceEdit);\n\t\t}\n\t\tconst labelSuffix = getFileOrFolderLabelSuffix(sources);\n\t\tawait this.explorerService.applyBulkEdit(resourceFileEdits, {\n\t\t\tconfirmBeforeUndo:\n\t\t\t\texplorerConfig.confirmUndo === UndoConfirmLevel.Default ||\n\t\t\t\texplorerConfig.confirmUndo === UndoConfirmLevel.Verbose,\n\t\t\tundoLabel: localize(\"copy\", \"Copy {0}\", labelSuffix),\n\t\t\tprogressLabel: localize(\"copying\", \"Copying {0}\", labelSuffix),\n\t\t});\n\n\t\tconst editors = resourceFileEdits\n\t\t\t.filter((edit) => {\n\t\t\t\tconst item = edit.newResource\n\t\t\t\t\t? this.explorerService.findClosest(edit.newResource)\n\t\t\t\t\t: undefined;\n\t\t\t\treturn item && !item.isDirectory;\n\t\t\t})\n\t\t\t.map((edit) => ({\n\t\t\t\tresource: edit.newResource,\n\t\t\t\toptions: { pinned: true },\n\t\t\t}));\n\n\t\tawait this.editorService.openEditors(editors);\n\t}\n\n\tprivate async doHandleExplorerDropOnMove(\n\t\tsources: ExplorerItem[],\n\t\ttarget: ExplorerItem,\n\t): Promise<void> {\n\t\t// Do not allow moving readonly items\n\t\tconst resourceFileEdits = sources\n\t\t\t.filter((source) => !source.isReadonly)\n\t\t\t.map(\n\t\t\t\t(source) =>\n\t\t\t\t\tnew ResourceFileEdit(\n\t\t\t\t\t\tsource.resource,\n\t\t\t\t\t\tjoinPath(target.resource, source.name),\n\t\t\t\t\t),\n\t\t\t);\n\t\tconst labelSuffix = getFileOrFolderLabelSuffix(sources);\n\t\tconst options = {\n\t\t\tconfirmBeforeUndo:\n\t\t\t\tthis.configurationService.getValue<IFilesConfiguration>()\n\t\t\t\t\t.explorer.confirmUndo === UndoConfirmLevel.Verbose,\n\t\t\tundoLabel: localize(\"move\", \"Move {0}\", labelSuffix),\n\t\t\tprogressLabel: localize(\"moving\", \"Moving {0}\", labelSuffix),\n\t\t};\n\n\t\ttry {\n\t\t\tawait this.explorerService.applyBulkEdit(\n\t\t\t\tresourceFileEdits,\n\t\t\t\toptions,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\t// Conflict\n\t\t\tif (\n\t\t\t\t(<FileOperationError>error).fileOperationResult ===\n\t\t\t\tFileOperationResult.FILE_MOVE_CONFLICT\n\t\t\t) {\n\t\t\t\tconst overwrites: URI[] = [];\n\t\t\t\tfor (const edit of resourceFileEdits) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tedit.newResource &&\n\t\t\t\t\t\t(await this.fileService.exists(edit.newResource))\n\t\t\t\t\t) {\n\t\t\t\t\t\toverwrites.push(edit.newResource);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Move with overwrite if the user confirms\n\t\t\t\tconst confirm = getMultipleFilesOverwriteConfirm(overwrites);\n\t\t\t\tconst { confirmed } = await this.dialogService.confirm(confirm);\n\t\t\t\tif (confirmed) {\n\t\t\t\t\tawait this.explorerService.applyBulkEdit(\n\t\t\t\t\t\tresourceFileEdits.map(\n\t\t\t\t\t\t\t(re) =>\n\t\t\t\t\t\t\t\tnew ResourceFileEdit(\n\t\t\t\t\t\t\t\t\tre.oldResource,\n\t\t\t\t\t\t\t\t\tre.newResource,\n\t\t\t\t\t\t\t\t\t{ overwrite: true },\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Any other error: bubble up\n\t\t\telse {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static getStatsFromDragAndDropData(\n\t\tdata: ElementsDragAndDropData<ExplorerItem, ExplorerItem[]>,\n\t\tdragStartEvent?: DragEvent,\n\t): ExplorerItem[] {\n\t\tif (data.context) {\n\t\t\treturn data.context;\n\t\t}\n\n\t\t// Detect compressed folder dragging\n\t\tif (dragStartEvent && data.elements.length === 1) {\n\t\t\tdata.context = [\n\t\t\t\tFileDragAndDrop.getCompressedStatFromDragEvent(\n\t\t\t\t\tdata.elements[0],\n\t\t\t\t\tdragStartEvent,\n\t\t\t\t),\n\t\t\t];\n\t\t\treturn data.context;\n\t\t}\n\n\t\treturn data.elements;\n\t}\n\n\tprivate static getCompressedStatFromDragEvent(\n\t\tstat: ExplorerItem,\n\t\tdragEvent: DragEvent,\n\t): ExplorerItem {\n\t\tconst target = DOM.getWindow(dragEvent).document.elementFromPoint(\n\t\t\tdragEvent.clientX,\n\t\t\tdragEvent.clientY,\n\t\t);\n\t\tconst iconLabelName = getIconLabelNameFromHTMLElement(target);\n\n\t\tif (iconLabelName) {\n\t\t\tconst { count, index } = iconLabelName;\n\n\t\t\tlet i = count - 1;\n\t\t\twhile (i > index && stat.parent) {\n\t\t\t\tstat = stat.parent;\n\t\t\t\ti--;\n\t\t\t}\n\n\t\t\treturn stat;\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tonDragEnd(): void {\n\t\tthis.compressedDropTargetDisposable.dispose();\n\t}\n\n\tdispose(): void {\n\t\tthis.compressedDropTargetDisposable.dispose();\n\t}\n}\n\nfunction getIconLabelNameFromHTMLElement(\n\ttarget: HTMLElement | EventTarget | Element | null,\n): { element: HTMLElement; count: number; index: number } | null {\n\tif (!DOM.isHTMLElement(target)) {\n\t\treturn null;\n\t}\n\n\tlet element: HTMLElement | null = target;\n\n\twhile (element && !element.classList.contains(\"monaco-list-row\")) {\n\t\tif (\n\t\t\telement.classList.contains(\"label-name\") &&\n\t\t\telement.hasAttribute(\"data-icon-label-count\")\n\t\t) {\n\t\t\tconst count = Number(element.getAttribute(\"data-icon-label-count\"));\n\t\t\tconst index = Number(element.getAttribute(\"data-icon-label-index\"));\n\n\t\t\tif (isNumber(count) && isNumber(index)) {\n\t\t\t\treturn { element: element, count, index };\n\t\t\t}\n\t\t}\n\n\t\telement = element.parentElement;\n\t}\n\n\treturn null;\n}\n\nexport function isCompressedFolderName(\n\ttarget: HTMLElement | EventTarget | Element | null,\n): boolean {\n\treturn !!getIconLabelNameFromHTMLElement(target);\n}\n\nexport class ExplorerCompressionDelegate\n\timplements ITreeCompressionDelegate<ExplorerItem>\n{\n\tisIncompressible(stat: ExplorerItem): boolean {\n\t\treturn (\n\t\t\tstat.isRoot ||\n\t\t\t!stat.isDirectory ||\n\t\t\tstat instanceof NewExplorerItem ||\n\t\t\t!stat.parent ||\n\t\t\tstat.parent.isRoot\n\t\t);\n\t}\n}\n\nfunction getFileOrFolderLabelSuffix(items: ExplorerItem[]): string {\n\tif (items.length === 1) {\n\t\treturn items[0].name;\n\t}\n\n\tif (items.every((i) => i.isDirectory)) {\n\t\treturn localize(\"numberOfFolders\", \"{0} folders\", items.length);\n\t}\n\tif (items.every((i) => !i.isDirectory)) {\n\t\treturn localize(\"numberOfFiles\", \"{0} files\", items.length);\n\t}\n\n\treturn `${items.length} files and folders`;\n}\n"],
  "mappings": "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",
  "names": ["children", "nodeControllers", "value"]
}
