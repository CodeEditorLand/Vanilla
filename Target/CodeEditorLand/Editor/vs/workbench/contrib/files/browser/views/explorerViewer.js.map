{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/views/explorerViewer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IListAccessibilityProvider } from '../../../../../base/browser/ui/list/listWidget.js';\nimport * as DOM from '../../../../../base/browser/dom.js';\nimport * as glob from '../../../../../base/common/glob.js';\nimport { IListVirtualDelegate, ListDragOverEffectPosition, ListDragOverEffectType } from '../../../../../base/browser/ui/list/list.js';\nimport { IProgressService, ProgressLocation, } from '../../../../../platform/progress/common/progress.js';\nimport { INotificationService, Severity } from '../../../../../platform/notification/common/notification.js';\nimport { IFileService, FileKind, FileOperationError, FileOperationResult, FileChangeType } from '../../../../../platform/files/common/files.js';\nimport { IWorkbenchLayoutService } from '../../../../services/layout/browser/layoutService.js';\nimport { isTemporaryWorkspace, IWorkspaceContextService, WorkbenchState } from '../../../../../platform/workspace/common/workspace.js';\nimport { IDisposable, Disposable, dispose, toDisposable, DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { IFileLabelOptions, IResourceLabel, ResourceLabels } from '../../../../browser/labels.js';\nimport { ITreeNode, ITreeFilter, TreeVisibility, IAsyncDataSource, ITreeSorter, ITreeDragAndDrop, ITreeDragOverReaction, TreeDragOverBubble } from '../../../../../base/browser/ui/tree/tree.js';\nimport { IContextMenuService, IContextViewService } from '../../../../../platform/contextview/browser/contextView.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IFilesConfiguration, UndoConfirmLevel } from '../../common/files.js';\nimport { dirname, joinPath, distinctParents } from '../../../../../base/common/resources.js';\nimport { InputBox, MessageType } from '../../../../../base/browser/ui/inputbox/inputBox.js';\nimport { localize } from '../../../../../nls.js';\nimport { createSingleCallFunction } from '../../../../../base/common/functional.js';\nimport { IKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport { equals, deepClone } from '../../../../../base/common/objects.js';\nimport * as path from '../../../../../base/common/path.js';\nimport { ExplorerItem, NewExplorerItem } from '../../common/explorerModel.js';\nimport { compareFileExtensionsDefault, compareFileNamesDefault, compareFileNamesUpper, compareFileExtensionsUpper, compareFileNamesLower, compareFileExtensionsLower, compareFileNamesUnicode, compareFileExtensionsUnicode } from '../../../../../base/common/comparers.js';\nimport { CodeDataTransfers, containsDragType } from '../../../../../platform/dnd/browser/dnd.js';\nimport { fillEditorsDragData } from '../../../../browser/dnd.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IDragAndDropData, DataTransfers } from '../../../../../base/browser/dnd.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { NativeDragAndDropData, ExternalElementsDragAndDropData, ElementsDragAndDropData, ListViewTargetSector } from '../../../../../base/browser/ui/list/listView.js';\nimport { isMacintosh, isWeb } from '../../../../../base/common/platform.js';\nimport { IDialogService, getFileNamesMessage } from '../../../../../platform/dialogs/common/dialogs.js';\nimport { IWorkspaceEditingService } from '../../../../services/workspaces/common/workspaceEditing.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { IWorkspaceFolderCreationData } from '../../../../../platform/workspaces/common/workspaces.js';\nimport { findValidPasteFileTarget } from '../fileActions.js';\nimport { FuzzyScore, createMatches } from '../../../../../base/common/filters.js';\nimport { Emitter, Event, EventMultiplexer } from '../../../../../base/common/event.js';\nimport { ITreeCompressionDelegate } from '../../../../../base/browser/ui/tree/asyncDataTree.js';\nimport { ICompressibleTreeRenderer } from '../../../../../base/browser/ui/tree/objectTree.js';\nimport { ICompressedTreeNode } from '../../../../../base/browser/ui/tree/compressedObjectTreeModel.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { isNumber } from '../../../../../base/common/types.js';\nimport { IEditableData } from '../../../../common/views.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { IUriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { ResourceFileEdit } from '../../../../../editor/browser/services/bulkEditService.js';\nimport { IExplorerService } from '../files.js';\nimport { BrowserFileUpload, ExternalFileImport, getMultipleFilesOverwriteConfirm } from '../fileImportExport.js';\nimport { toErrorMessage } from '../../../../../base/common/errorMessage.js';\nimport { WebFileSystemAccess } from '../../../../../platform/files/browser/webFileSystemAccess.js';\nimport { IgnoreFile } from '../../../../services/search/common/ignoreFile.js';\nimport { ResourceSet } from '../../../../../base/common/map.js';\nimport { TernarySearchTree } from '../../../../../base/common/ternarySearchTree.js';\nimport { defaultInputBoxStyles } from '../../../../../platform/theme/browser/defaultStyles.js';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { IFilesConfigurationService } from '../../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { mainWindow } from '../../../../../base/browser/window.js';\nimport { IExplorerFileContribution, explorerFileContribRegistry } from '../explorerFileContrib.js';\n\nexport class ExplorerDelegate implements IListVirtualDelegate<ExplorerItem> {\n\n\tstatic readonly ITEM_HEIGHT = 22;\n\n\tgetHeight(element: ExplorerItem): number {\n\t\treturn ExplorerDelegate.ITEM_HEIGHT;\n\t}\n\n\tgetTemplateId(element: ExplorerItem): string {\n\t\treturn FilesRenderer.ID;\n\t}\n}\n\nexport const explorerRootErrorEmitter = new Emitter<URI>();\nexport class ExplorerDataSource implements IAsyncDataSource<ExplorerItem | ExplorerItem[], ExplorerItem> {\n\n\tconstructor(\n\t\tprivate fileFilter: FilesFilter,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IConfigurationService private readonly configService: IConfigurationService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IFilesConfigurationService private readonly filesConfigService: IFilesConfigurationService\n\t) { }\n\n\thasChildren(element: ExplorerItem | ExplorerItem[]): boolean {\n\t\t// don't render nest parents as containing children when all the children are filtered out\n\t\treturn Array.isArray(element) || element.hasChildren((stat) => this.fileFilter.filter(stat, TreeVisibility.Visible));\n\t}\n\n\tgetChildren(element: ExplorerItem | ExplorerItem[]): ExplorerItem[] | Promise<ExplorerItem[]> {\n\t\tif (Array.isArray(element)) {\n\t\t\treturn element;\n\t\t}\n\n\t\tconst hasError = element.error;\n\t\tconst sortOrder = this.explorerService.sortOrderConfiguration.sortOrder;\n\t\tconst children = element.fetchChildren(sortOrder);\n\t\tif (Array.isArray(children)) {\n\t\t\t// fast path when children are known sync (i.e. nested children)\n\t\t\treturn children;\n\t\t}\n\t\tconst promise = children.then(\n\t\t\tchildren => {\n\t\t\t\t// Clear previous error decoration on root folder\n\t\t\t\tif (element instanceof ExplorerItem && element.isRoot && !element.error && hasError && this.contextService.getWorkbenchState() !== WorkbenchState.FOLDER) {\n\t\t\t\t\texplorerRootErrorEmitter.fire(element.resource);\n\t\t\t\t}\n\t\t\t\treturn children;\n\t\t\t}\n\t\t\t, e => {\n\n\t\t\t\tif (element instanceof ExplorerItem && element.isRoot) {\n\t\t\t\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.FOLDER) {\n\t\t\t\t\t\t// Single folder create a dummy explorer item to show error\n\t\t\t\t\t\tconst placeholder = new ExplorerItem(element.resource, this.fileService, this.configService, this.filesConfigService, undefined, undefined, false);\n\t\t\t\t\t\tplaceholder.error = e;\n\t\t\t\t\t\treturn [placeholder];\n\t\t\t\t\t} else {\n\t\t\t\t\t\texplorerRootErrorEmitter.fire(element.resource);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Do not show error for roots since we already use an explorer decoration to notify user\n\t\t\t\t\tthis.notificationService.error(e);\n\t\t\t\t}\n\n\t\t\t\treturn []; // we could not resolve any children because of an error\n\t\t\t});\n\n\t\tthis.progressService.withProgress({\n\t\t\tlocation: ProgressLocation.Explorer,\n\t\t\tdelay: this.layoutService.isRestored() ? 800 : 1500 // reduce progress visibility when still restoring\n\t\t}, _progress => promise);\n\n\t\treturn promise;\n\t}\n}\n\nexport interface ICompressedNavigationController {\n\treadonly current: ExplorerItem;\n\treadonly currentId: string;\n\treadonly items: ExplorerItem[];\n\treadonly labels: HTMLElement[];\n\treadonly index: number;\n\treadonly count: number;\n\treadonly onDidChange: Event<void>;\n\tprevious(): void;\n\tnext(): void;\n\tfirst(): void;\n\tlast(): void;\n\tsetIndex(index: number): void;\n\tupdateCollapsed(collapsed: boolean): void;\n}\n\nexport class CompressedNavigationController implements ICompressedNavigationController, IDisposable {\n\n\tstatic ID = 0;\n\n\tprivate _index: number;\n\tprivate _labels!: HTMLElement[];\n\tprivate _updateLabelDisposable: IDisposable;\n\n\tget index(): number { return this._index; }\n\tget count(): number { return this.items.length; }\n\tget current(): ExplorerItem { return this.items[this._index]!; }\n\tget currentId(): string { return `${this.id}_${this.index}`; }\n\tget labels(): HTMLElement[] { return this._labels; }\n\n\tprivate _onDidChange = new Emitter<void>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(private id: string, readonly items: ExplorerItem[], templateData: IFileTemplateData, private depth: number, private collapsed: boolean) {\n\t\tthis._index = items.length - 1;\n\n\t\tthis.updateLabels(templateData);\n\t\tthis._updateLabelDisposable = templateData.label.onDidRender(() => this.updateLabels(templateData));\n\t}\n\n\tprivate updateLabels(templateData: IFileTemplateData): void {\n\t\tthis._labels = Array.from(templateData.container.querySelectorAll('.label-name')) as HTMLElement[];\n\t\tlet parents = '';\n\t\tfor (let i = 0; i < this.labels.length; i++) {\n\t\t\tconst ariaLabel = parents.length ? `${this.items[i].name}, compact, ${parents}` : this.items[i].name;\n\t\t\tthis.labels[i].setAttribute('aria-label', ariaLabel);\n\t\t\tthis.labels[i].setAttribute('aria-level', `${this.depth + i}`);\n\t\t\tparents = parents.length ? `${this.items[i].name} ${parents}` : this.items[i].name;\n\t\t}\n\t\tthis.updateCollapsed(this.collapsed);\n\n\t\tif (this._index < this.labels.length) {\n\t\t\tthis.labels[this._index].classList.add('active');\n\t\t}\n\t}\n\n\tprevious(): void {\n\t\tif (this._index <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(this._index - 1);\n\t}\n\n\tnext(): void {\n\t\tif (this._index >= this.items.length - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(this._index + 1);\n\t}\n\n\tfirst(): void {\n\t\tif (this._index === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(0);\n\t}\n\n\tlast(): void {\n\t\tif (this._index === this.items.length - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(this.items.length - 1);\n\t}\n\n\tsetIndex(index: number): void {\n\t\tif (index < 0 || index >= this.items.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.labels[this._index].classList.remove('active');\n\t\tthis._index = index;\n\t\tthis.labels[this._index].classList.add('active');\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tupdateCollapsed(collapsed: boolean): void {\n\t\tthis.collapsed = collapsed;\n\t\tfor (let i = 0; i < this.labels.length; i++) {\n\t\t\tthis.labels[i].setAttribute('aria-expanded', collapsed ? 'false' : 'true');\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._updateLabelDisposable.dispose();\n\t}\n}\n\nexport interface IFileTemplateData {\n\treadonly templateDisposables: DisposableStore;\n\treadonly elementDisposables: DisposableStore;\n\treadonly label: IResourceLabel;\n\treadonly container: HTMLElement;\n\treadonly contribs: IExplorerFileContribution[];\n\tcurrentContext?: ExplorerItem;\n}\n\nexport class FilesRenderer implements ICompressibleTreeRenderer<ExplorerItem, FuzzyScore, IFileTemplateData>, IListAccessibilityProvider<ExplorerItem>, IDisposable {\n\tstatic readonly ID = 'file';\n\n\tprivate config: IFilesConfiguration;\n\tprivate configListener: IDisposable;\n\tprivate compressedNavigationControllers = new Map<ExplorerItem, CompressedNavigationController[]>();\n\n\tprivate _onDidChangeActiveDescendant = new EventMultiplexer<void>();\n\treadonly onDidChangeActiveDescendant = this._onDidChangeActiveDescendant.event;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate labels: ResourceLabels,\n\t\tprivate updateWidth: (stat: ExplorerItem) => void,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tthis.config = this.configurationService.getValue<IFilesConfiguration>();\n\n\t\tconst updateOffsetStyles = () => {\n\t\t\tconst indent = this.configurationService.getValue<number>('workbench.tree.indent');\n\t\t\tconst offset = Math.max(22 - indent, 0); // derived via inspection\n\t\t\tcontainer.style.setProperty(`--vscode-explorer-align-offset-margin-left`, `${offset}px`);\n\t\t};\n\n\t\tthis.configListener = this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('explorer')) {\n\t\t\t\tthis.config = this.configurationService.getValue();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration('workbench.tree.indent')) {\n\t\t\t\tupdateOffsetStyles();\n\t\t\t}\n\t\t});\n\n\t\tupdateOffsetStyles();\n\t}\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('treeAriaLabel', \"Files Explorer\");\n\t}\n\n\tget templateId(): string {\n\t\treturn FilesRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IFileTemplateData {\n\t\tconst templateDisposables = new DisposableStore();\n\t\tconst label = templateDisposables.add(this.labels.create(container, { supportHighlights: true }));\n\t\ttemplateDisposables.add(label.onDidRender(() => {\n\t\t\ttry {\n\t\t\t\tif (templateData.currentContext) {\n\t\t\t\t\tthis.updateWidth(templateData.currentContext);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// noop since the element might no longer be in the tree, no update of width necessary\n\t\t\t}\n\t\t}));\n\n\t\tconst contribs = explorerFileContribRegistry.create(this.instantiationService, container, templateDisposables);\n\t\ttemplateDisposables.add(explorerFileContribRegistry.onDidRegisterDescriptor(d => {\n\t\t\tconst contr = d.create(this.instantiationService, container);\n\t\t\tcontribs.push(templateDisposables.add(contr));\n\t\t\tcontr.setResource(templateData.currentContext?.resource);\n\t\t}));\n\n\t\tconst templateData: IFileTemplateData = { templateDisposables, elementDisposables: templateDisposables.add(new DisposableStore()), label, container, contribs };\n\t\treturn templateData;\n\t}\n\n\trenderElement(node: ITreeNode<ExplorerItem, FuzzyScore>, index: number, templateData: IFileTemplateData): void {\n\t\tconst stat = node.element;\n\t\ttemplateData.currentContext = stat;\n\n\t\tconst editableData = this.explorerService.getEditableData(stat);\n\n\t\ttemplateData.label.element.classList.remove('compressed');\n\n\t\t// File Label\n\t\tif (!editableData) {\n\t\t\ttemplateData.label.element.style.display = 'flex';\n\t\t\tthis.renderStat(stat, stat.name, undefined, node.filterData, templateData);\n\t\t}\n\n\t\t// Input Box\n\t\telse {\n\t\t\ttemplateData.label.element.style.display = 'none';\n\t\t\ttemplateData.contribs.forEach(c => c.setResource(undefined));\n\t\t\ttemplateData.elementDisposables.add(this.renderInputBox(templateData.container, stat, editableData));\n\t\t}\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<ExplorerItem>, FuzzyScore>, index: number, templateData: IFileTemplateData, height: number | undefined): void {\n\t\tconst stat = node.element.elements[node.element.elements.length - 1];\n\t\ttemplateData.currentContext = stat;\n\n\t\tconst editable = node.element.elements.filter(e => this.explorerService.isEditable(e));\n\t\tconst editableData = editable.length === 0 ? undefined : this.explorerService.getEditableData(editable[0]);\n\n\t\t// File Label\n\t\tif (!editableData) {\n\t\t\ttemplateData.label.element.classList.add('compressed');\n\t\t\ttemplateData.label.element.style.display = 'flex';\n\n\t\t\tconst id = `compressed-explorer_${CompressedNavigationController.ID++}`;\n\n\t\t\tconst label = node.element.elements.map(e => e.name);\n\t\t\tthis.renderStat(stat, label, id, node.filterData, templateData);\n\n\t\t\tconst compressedNavigationController = new CompressedNavigationController(id, node.element.elements, templateData, node.depth, node.collapsed);\n\t\t\ttemplateData.elementDisposables.add(compressedNavigationController);\n\n\t\t\tconst nodeControllers = this.compressedNavigationControllers.get(stat) ?? [];\n\t\t\tthis.compressedNavigationControllers.set(stat, [...nodeControllers, compressedNavigationController]);\n\n\t\t\t// accessibility\n\t\t\ttemplateData.elementDisposables.add(this._onDidChangeActiveDescendant.add(compressedNavigationController.onDidChange));\n\n\t\t\ttemplateData.elementDisposables.add(DOM.addDisposableListener(templateData.container, 'mousedown', e => {\n\t\t\t\tconst result = getIconLabelNameFromHTMLElement(e.target);\n\n\t\t\t\tif (result) {\n\t\t\t\t\tcompressedNavigationController.setIndex(result.index);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\ttemplateData.elementDisposables.add(toDisposable(() => {\n\t\t\t\tconst nodeControllers = this.compressedNavigationControllers.get(stat) ?? [];\n\t\t\t\tconst renderedIndex = nodeControllers.findIndex(controller => controller === compressedNavigationController);\n\n\t\t\t\tif (renderedIndex < 0) {\n\t\t\t\t\tthrow new Error('Disposing unknown navigation controller');\n\t\t\t\t}\n\n\t\t\t\tif (nodeControllers.length === 1) {\n\t\t\t\t\tthis.compressedNavigationControllers.delete(stat);\n\t\t\t\t} else {\n\t\t\t\t\tnodeControllers.splice(renderedIndex, 1);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\t// Input Box\n\t\telse {\n\t\t\ttemplateData.label.element.classList.remove('compressed');\n\t\t\ttemplateData.label.element.style.display = 'none';\n\t\t\ttemplateData.contribs.forEach(c => c.setResource(undefined));\n\t\t\ttemplateData.elementDisposables.add(this.renderInputBox(templateData.container, editable[0], editableData));\n\t\t}\n\t}\n\n\tprivate renderStat(stat: ExplorerItem, label: string | string[], domId: string | undefined, filterData: FuzzyScore | undefined, templateData: IFileTemplateData): void {\n\t\ttemplateData.label.element.style.display = 'flex';\n\t\tconst extraClasses = ['explorer-item'];\n\t\tif (this.explorerService.isCut(stat)) {\n\t\t\textraClasses.push('cut');\n\t\t}\n\n\t\t// Offset nested children unless folders have both chevrons and icons, otherwise alignment breaks\n\t\tconst theme = this.themeService.getFileIconTheme();\n\n\t\t// Hack to always render chevrons for file nests, or else may not be able to identify them.\n\t\tconst twistieContainer = templateData.container.parentElement?.parentElement?.querySelector('.monaco-tl-twistie');\n\t\ttwistieContainer?.classList.toggle('force-twistie', stat.hasNests && theme.hidesExplorerArrows);\n\n\t\t// when explorer arrows are hidden or there are no folder icons, nests get misaligned as they are forced to have arrows and files typically have icons\n\t\t// Apply some CSS magic to get things looking as reasonable as possible.\n\t\tconst themeIsUnhappyWithNesting = theme.hasFileIcons && (theme.hidesExplorerArrows || !theme.hasFolderIcons);\n\t\tconst realignNestedChildren = stat.nestedParent && themeIsUnhappyWithNesting;\n\t\ttemplateData.contribs.forEach(c => c.setResource(stat.resource));\n\t\ttemplateData.label.setResource({ resource: stat.resource, name: label }, {\n\t\t\tfileKind: stat.isRoot ? FileKind.ROOT_FOLDER : stat.isDirectory ? FileKind.FOLDER : FileKind.FILE,\n\t\t\textraClasses: realignNestedChildren ? [...extraClasses, 'align-nest-icon-with-parent-icon'] : extraClasses,\n\t\t\tfileDecorations: this.config.explorer.decorations,\n\t\t\tmatches: createMatches(filterData),\n\t\t\tseparator: this.labelService.getSeparator(stat.resource.scheme, stat.resource.authority),\n\t\t\tdomId\n\t\t});\n\t}\n\n\tprivate renderInputBox(container: HTMLElement, stat: ExplorerItem, editableData: IEditableData): IDisposable {\n\n\t\t// Use a file label only for the icon next to the input box\n\t\tconst label = this.labels.create(container);\n\t\tconst extraClasses = ['explorer-item', 'explorer-item-edited'];\n\t\tconst fileKind = stat.isRoot ? FileKind.ROOT_FOLDER : stat.isDirectory ? FileKind.FOLDER : FileKind.FILE;\n\n\t\tconst theme = this.themeService.getFileIconTheme();\n\t\tconst themeIsUnhappyWithNesting = theme.hasFileIcons && (theme.hidesExplorerArrows || !theme.hasFolderIcons);\n\t\tconst realignNestedChildren = stat.nestedParent && themeIsUnhappyWithNesting;\n\n\t\tconst labelOptions: IFileLabelOptions = {\n\t\t\thidePath: true,\n\t\t\thideLabel: true,\n\t\t\tfileKind,\n\t\t\textraClasses: realignNestedChildren ? [...extraClasses, 'align-nest-icon-with-parent-icon'] : extraClasses,\n\t\t};\n\n\n\t\tconst parent = stat.name ? dirname(stat.resource) : stat.resource;\n\t\tconst value = stat.name || '';\n\n\t\tlabel.setFile(joinPath(parent, value || ' '), labelOptions); // Use icon for ' ' if name is empty.\n\n\t\t// hack: hide label\n\t\t(label.element.firstElementChild as HTMLElement).style.display = 'none';\n\n\t\t// Input field for name\n\t\tconst inputBox = new InputBox(label.element, this.contextViewService, {\n\t\t\tvalidationOptions: {\n\t\t\t\tvalidation: (value) => {\n\t\t\t\t\tconst message = editableData.validationMessage(value);\n\t\t\t\t\tif (!message || message.severity !== Severity.Error) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcontent: message.content,\n\t\t\t\t\t\tformatContent: true,\n\t\t\t\t\t\ttype: MessageType.ERROR\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\tariaLabel: localize('fileInputAriaLabel', \"Type file name. Press Enter to confirm or Escape to cancel.\"),\n\t\t\tinputBoxStyles: defaultInputBoxStyles\n\t\t});\n\n\t\tconst lastDot = value.lastIndexOf('.');\n\t\tlet currentSelectionState = 'prefix';\n\n\t\tinputBox.value = value;\n\t\tinputBox.focus();\n\t\tinputBox.select({ start: 0, end: lastDot > 0 && !stat.isDirectory ? lastDot : value.length });\n\n\t\tconst done = createSingleCallFunction((success: boolean, finishEditing: boolean) => {\n\t\t\tlabel.element.style.display = 'none';\n\t\t\tconst value = inputBox.value;\n\t\t\tdispose(toDispose);\n\t\t\tlabel.element.remove();\n\t\t\tif (finishEditing) {\n\t\t\t\teditableData.onFinish(value, success);\n\t\t\t}\n\t\t});\n\n\t\tconst showInputBoxNotification = () => {\n\t\t\tif (inputBox.isInputValid()) {\n\t\t\t\tconst message = editableData.validationMessage(inputBox.value);\n\t\t\t\tif (message) {\n\t\t\t\t\tinputBox.showMessage({\n\t\t\t\t\t\tcontent: message.content,\n\t\t\t\t\t\tformatContent: true,\n\t\t\t\t\t\ttype: message.severity === Severity.Info ? MessageType.INFO : message.severity === Severity.Warning ? MessageType.WARNING : MessageType.ERROR\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tinputBox.hideMessage();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tshowInputBoxNotification();\n\n\t\tconst toDispose = [\n\t\t\tinputBox,\n\t\t\tinputBox.onDidChange(value => {\n\t\t\t\tlabel.setFile(joinPath(parent, value || ' '), labelOptions); // update label icon while typing!\n\t\t\t}),\n\t\t\tDOM.addStandardDisposableListener(inputBox.inputElement, DOM.EventType.KEY_DOWN, (e: IKeyboardEvent) => {\n\t\t\t\tif (e.equals(KeyCode.F2)) {\n\t\t\t\t\tconst dotIndex = inputBox.value.lastIndexOf('.');\n\t\t\t\t\tif (stat.isDirectory || dotIndex === -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (currentSelectionState === 'prefix') {\n\t\t\t\t\t\tcurrentSelectionState = 'all';\n\t\t\t\t\t\tinputBox.select({ start: 0, end: inputBox.value.length });\n\t\t\t\t\t} else if (currentSelectionState === 'all') {\n\t\t\t\t\t\tcurrentSelectionState = 'suffix';\n\t\t\t\t\t\tinputBox.select({ start: dotIndex + 1, end: inputBox.value.length });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentSelectionState = 'prefix';\n\t\t\t\t\t\tinputBox.select({ start: 0, end: dotIndex });\n\t\t\t\t\t}\n\t\t\t\t} else if (e.equals(KeyCode.Enter)) {\n\t\t\t\t\tif (!inputBox.validate()) {\n\t\t\t\t\t\tdone(true, true);\n\t\t\t\t\t}\n\t\t\t\t} else if (e.equals(KeyCode.Escape)) {\n\t\t\t\t\tdone(false, true);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tDOM.addStandardDisposableListener(inputBox.inputElement, DOM.EventType.KEY_UP, (e: IKeyboardEvent) => {\n\t\t\t\tshowInputBoxNotification();\n\t\t\t}),\n\t\t\tDOM.addDisposableListener(inputBox.inputElement, DOM.EventType.BLUR, async () => {\n\t\t\t\twhile (true) {\n\t\t\t\t\tawait timeout(0);\n\n\t\t\t\t\tconst ownerDocument = inputBox.inputElement.ownerDocument;\n\t\t\t\t\tif (!ownerDocument.hasFocus()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} if (DOM.isActiveElement(inputBox.inputElement)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (DOM.isHTMLElement(ownerDocument.activeElement) && DOM.hasParentWithClass(ownerDocument.activeElement, 'context-view')) {\n\t\t\t\t\t\tawait Event.toPromise(this.contextMenuService.onDidHideContextMenu);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdone(inputBox.isInputValid(), true);\n\t\t\t}),\n\t\t\tlabel\n\t\t];\n\n\t\treturn toDisposable(() => {\n\t\t\tdone(false, false);\n\t\t});\n\t}\n\n\tdisposeElement(element: ITreeNode<ExplorerItem, FuzzyScore>, index: number, templateData: IFileTemplateData): void {\n\t\ttemplateData.currentContext = undefined;\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeCompressedElements(node: ITreeNode<ICompressedTreeNode<ExplorerItem>, FuzzyScore>, index: number, templateData: IFileTemplateData): void {\n\t\ttemplateData.currentContext = undefined;\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFileTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n\n\tgetCompressedNavigationController(stat: ExplorerItem): ICompressedNavigationController[] | undefined {\n\t\treturn this.compressedNavigationControllers.get(stat);\n\t}\n\n\t// IAccessibilityProvider\n\n\tgetAriaLabel(element: ExplorerItem): string {\n\t\treturn element.name;\n\t}\n\n\tgetAriaLevel(element: ExplorerItem): number {\n\t\t// We need to comput aria level on our own since children of compact folders will otherwise have an incorrect level\t#107235\n\t\tlet depth = 0;\n\t\tlet parent = element.parent;\n\t\twhile (parent) {\n\t\t\tparent = parent.parent;\n\t\t\tdepth++;\n\t\t}\n\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tdepth = depth + 1;\n\t\t}\n\n\t\treturn depth;\n\t}\n\n\tgetActiveDescendantId(stat: ExplorerItem): string | undefined {\n\t\treturn this.compressedNavigationControllers.get(stat)?.[0]?.currentId ?? undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis.configListener.dispose();\n\t}\n}\n\ninterface CachedParsedExpression {\n\toriginal: glob.IExpression;\n\tparsed: glob.ParsedExpression;\n}\n\n/**\n * Respects files.exclude setting in filtering out content from the explorer.\n * Makes sure that visible editors are always shown in the explorer even if they are filtered out by settings.\n */\nexport class FilesFilter implements ITreeFilter<ExplorerItem, FuzzyScore> {\n\tprivate hiddenExpressionPerRoot = new Map<string, CachedParsedExpression>();\n\tprivate editorsAffectingFilter = new Set<EditorInput>();\n\tprivate _onDidChange = new Emitter<void>();\n\tprivate toDispose: IDisposable[] = [];\n\t// List of ignoreFile resources. Used to detect changes to the ignoreFiles.\n\tprivate ignoreFileResourcesPerRoot = new Map<string, ResourceSet>();\n\t// Ignore tree per root. Similar to `hiddenExpressionPerRoot`\n\t// Note: URI in the ternary search tree is the URI of the folder containing the ignore file\n\t// It is not the ignore file itself. This is because of the way the IgnoreFile works and nested paths\n\tprivate ignoreTreesPerRoot = new Map<string, TernarySearchTree<URI, IgnoreFile>>();\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tthis.toDispose.push(this.contextService.onDidChangeWorkspaceFolders(() => this.updateConfiguration()));\n\t\tthis.toDispose.push(this.configurationService.onDidChangeConfiguration((e) => {\n\t\t\tif (e.affectsConfiguration('files.exclude') || e.affectsConfiguration('explorer.excludeGitIgnore')) {\n\t\t\t\tthis.updateConfiguration();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.fileService.onDidFilesChange(e => {\n\t\t\t// Check to see if the update contains any of the ignoreFileResources\n\t\t\tfor (const [root, ignoreFileResourceSet] of this.ignoreFileResourcesPerRoot.entries()) {\n\t\t\t\tignoreFileResourceSet.forEach(async ignoreResource => {\n\t\t\t\t\tif (e.contains(ignoreResource, FileChangeType.UPDATED)) {\n\t\t\t\t\t\tawait this.processIgnoreFile(root, ignoreResource, true);\n\t\t\t\t\t}\n\t\t\t\t\tif (e.contains(ignoreResource, FileChangeType.DELETED)) {\n\t\t\t\t\t\tthis.ignoreTreesPerRoot.get(root)?.delete(dirname(ignoreResource));\n\t\t\t\t\t\tignoreFileResourceSet.delete(ignoreResource);\n\t\t\t\t\t\tthis._onDidChange.fire();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.editorService.onDidVisibleEditorsChange(() => {\n\t\t\tconst editors = this.editorService.visibleEditors;\n\t\t\tlet shouldFire = false;\n\n\t\t\tfor (const e of editors) {\n\t\t\t\tif (!e.resource) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst stat = this.explorerService.findClosest(e.resource);\n\t\t\t\tif (stat && stat.isExcluded) {\n\t\t\t\t\t// A filtered resource suddenly became visible since user opened an editor\n\t\t\t\t\tshouldFire = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const e of this.editorsAffectingFilter) {\n\t\t\t\tif (!editors.includes(e)) {\n\t\t\t\t\t// Editor that was affecting filtering is no longer visible\n\t\t\t\t\tshouldFire = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (shouldFire) {\n\t\t\t\tthis.editorsAffectingFilter.clear();\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}\n\t\t}));\n\t\tthis.updateConfiguration();\n\t}\n\n\tget onDidChange(): Event<void> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tprivate updateConfiguration(): void {\n\t\tlet shouldFire = false;\n\t\tlet updatedGitIgnoreSetting = false;\n\t\tthis.contextService.getWorkspace().folders.forEach(folder => {\n\t\t\tconst configuration = this.configurationService.getValue<IFilesConfiguration>({ resource: folder.uri });\n\t\t\tconst excludesConfig: glob.IExpression = configuration?.files?.exclude || Object.create(null);\n\t\t\tconst parseIgnoreFile: boolean = configuration.explorer.excludeGitIgnore;\n\n\t\t\t// If we should be parsing ignoreFiles for this workspace and don't have an ignore tree initialize one\n\t\t\tif (parseIgnoreFile && !this.ignoreTreesPerRoot.has(folder.uri.toString())) {\n\t\t\t\tupdatedGitIgnoreSetting = true;\n\t\t\t\tthis.ignoreFileResourcesPerRoot.set(folder.uri.toString(), new ResourceSet());\n\t\t\t\tthis.ignoreTreesPerRoot.set(folder.uri.toString(), TernarySearchTree.forUris((uri) => this.uriIdentityService.extUri.ignorePathCasing(uri)));\n\t\t\t}\n\n\t\t\t// If we shouldn't be parsing ignore files but have an ignore tree, clear the ignore tree\n\t\t\tif (!parseIgnoreFile && this.ignoreTreesPerRoot.has(folder.uri.toString())) {\n\t\t\t\tupdatedGitIgnoreSetting = true;\n\t\t\t\tthis.ignoreFileResourcesPerRoot.delete(folder.uri.toString());\n\t\t\t\tthis.ignoreTreesPerRoot.delete(folder.uri.toString());\n\t\t\t}\n\n\t\t\tif (!shouldFire) {\n\t\t\t\tconst cached = this.hiddenExpressionPerRoot.get(folder.uri.toString());\n\t\t\t\tshouldFire = !cached || !equals(cached.original, excludesConfig);\n\t\t\t}\n\n\t\t\tconst excludesConfigCopy = deepClone(excludesConfig); // do not keep the config, as it gets mutated under our hoods\n\n\t\t\tthis.hiddenExpressionPerRoot.set(folder.uri.toString(), { original: excludesConfigCopy, parsed: glob.parse(excludesConfigCopy) });\n\t\t});\n\n\t\tif (shouldFire || updatedGitIgnoreSetting) {\n\t\t\tthis.editorsAffectingFilter.clear();\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\t/**\n\t * Given a .gitignore file resource, processes the resource and adds it to the ignore tree which hides explorer items\n\t * @param root The root folder of the workspace as a string. Used for lookup key for ignore tree and resource list\n\t * @param ignoreFileResource The resource of the .gitignore file\n\t * @param update Whether or not we're updating an existing ignore file. If true it deletes the old entry\n\t */\n\tprivate async processIgnoreFile(root: string, ignoreFileResource: URI, update?: boolean) {\n\t\t// Get the name of the directory which the ignore file is in\n\t\tconst dirUri = dirname(ignoreFileResource);\n\t\tconst ignoreTree = this.ignoreTreesPerRoot.get(root);\n\t\tif (!ignoreTree) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't process a directory if we already have it in the tree\n\t\tif (!update && ignoreTree.has(dirUri)) {\n\t\t\treturn;\n\t\t}\n\t\t// Maybe we need a cancellation token here in case it's super long?\n\t\tconst content = await this.fileService.readFile(ignoreFileResource);\n\n\t\t// If it's just an update we update the contents keeping all references the same\n\t\tif (update) {\n\t\t\tconst ignoreFile = ignoreTree.get(dirUri);\n\t\t\tignoreFile?.updateContents(content.value.toString());\n\t\t} else {\n\t\t\t// Otherwise we create a new ignorefile and add it to the tree\n\t\t\tconst ignoreParent = ignoreTree.findSubstr(dirUri);\n\t\t\tconst ignoreFile = new IgnoreFile(content.value.toString(), dirUri.path, ignoreParent);\n\t\t\tignoreTree.set(dirUri, ignoreFile);\n\t\t\t// If we haven't seen this resource before then we need to add it to the list of resources we're tracking\n\t\t\tif (!this.ignoreFileResourcesPerRoot.get(root)?.has(ignoreFileResource)) {\n\t\t\t\tthis.ignoreFileResourcesPerRoot.get(root)?.add(ignoreFileResource);\n\t\t\t}\n\t\t}\n\n\t\t// Notify the explorer of the change so we may ignore these files\n\t\tthis._onDidChange.fire();\n\t}\n\n\tfilter(stat: ExplorerItem, parentVisibility: TreeVisibility): boolean {\n\t\t// Add newly visited .gitignore files to the ignore tree\n\t\tif (stat.name === '.gitignore' && this.ignoreTreesPerRoot.has(stat.root.resource.toString())) {\n\t\t\tthis.processIgnoreFile(stat.root.resource.toString(), stat.resource, false);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isVisible(stat, parentVisibility);\n\t}\n\n\tprivate isVisible(stat: ExplorerItem, parentVisibility: TreeVisibility): boolean {\n\t\tstat.isExcluded = false;\n\t\tif (parentVisibility === TreeVisibility.Hidden) {\n\t\t\tstat.isExcluded = true;\n\t\t\treturn false;\n\t\t}\n\t\tif (this.explorerService.getEditableData(stat)) {\n\t\t\treturn true; // always visible\n\t\t}\n\n\t\t// Hide those that match Hidden Patterns\n\t\tconst cached = this.hiddenExpressionPerRoot.get(stat.root.resource.toString());\n\t\tconst globMatch = cached?.parsed(path.relative(stat.root.resource.path, stat.resource.path), stat.name, name => !!(stat.parent && stat.parent.getChild(name)));\n\t\t// Small optimization to only traverse gitIgnore if the globMatch from fileExclude returned nothing\n\t\tconst ignoreFile = globMatch ? undefined : this.ignoreTreesPerRoot.get(stat.root.resource.toString())?.findSubstr(stat.resource);\n\t\tconst isIncludedInTraversal = ignoreFile?.isPathIncludedInTraversal(stat.resource.path, stat.isDirectory);\n\t\t// Doing !undefined returns true and we want it to be false when undefined because that means it's not included in the ignore file\n\t\tconst isIgnoredByIgnoreFile = isIncludedInTraversal === undefined ? false : !isIncludedInTraversal;\n\t\tif (isIgnoredByIgnoreFile || globMatch || stat.parent?.isExcluded) {\n\t\t\tstat.isExcluded = true;\n\t\t\tconst editors = this.editorService.visibleEditors;\n\t\t\tconst editor = editors.find(e => e.resource && this.uriIdentityService.extUri.isEqualOrParent(e.resource, stat.resource));\n\t\t\tif (editor && stat.root === this.explorerService.findClosestRoot(stat.resource)) {\n\t\t\t\tthis.editorsAffectingFilter.add(editor);\n\t\t\t\treturn true; // Show all opened files and their parents\n\t\t\t}\n\n\t\t\treturn false; // hidden through pattern\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.toDispose);\n\t}\n}\n\n// Explorer Sorter\nexport class FileSorter implements ITreeSorter<ExplorerItem> {\n\n\tconstructor(\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService\n\t) { }\n\n\tcompare(statA: ExplorerItem, statB: ExplorerItem): number {\n\t\t// Do not sort roots\n\t\tif (statA.isRoot) {\n\t\t\tif (statB.isRoot) {\n\t\t\t\tconst workspaceA = this.contextService.getWorkspaceFolder(statA.resource);\n\t\t\t\tconst workspaceB = this.contextService.getWorkspaceFolder(statB.resource);\n\t\t\t\treturn workspaceA && workspaceB ? (workspaceA.index - workspaceB.index) : -1;\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (statB.isRoot) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst sortOrder = this.explorerService.sortOrderConfiguration.sortOrder;\n\t\tconst lexicographicOptions = this.explorerService.sortOrderConfiguration.lexicographicOptions;\n\t\tconst reverse = this.explorerService.sortOrderConfiguration.reverse;\n\t\tif (reverse) {\n\t\t\t[statA, statB] = [statB, statA];\n\t\t}\n\n\t\tlet compareFileNames;\n\t\tlet compareFileExtensions;\n\t\tswitch (lexicographicOptions) {\n\t\t\tcase 'upper':\n\t\t\t\tcompareFileNames = compareFileNamesUpper;\n\t\t\t\tcompareFileExtensions = compareFileExtensionsUpper;\n\t\t\t\tbreak;\n\t\t\tcase 'lower':\n\t\t\t\tcompareFileNames = compareFileNamesLower;\n\t\t\t\tcompareFileExtensions = compareFileExtensionsLower;\n\t\t\t\tbreak;\n\t\t\tcase 'unicode':\n\t\t\t\tcompareFileNames = compareFileNamesUnicode;\n\t\t\t\tcompareFileExtensions = compareFileExtensionsUnicode;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// 'default'\n\t\t\t\tcompareFileNames = compareFileNamesDefault;\n\t\t\t\tcompareFileExtensions = compareFileExtensionsDefault;\n\t\t}\n\n\t\t// Sort Directories\n\t\tswitch (sortOrder) {\n\t\t\tcase 'type':\n\t\t\t\tif (statA.isDirectory && !statB.isDirectory) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.isDirectory && !statA.isDirectory) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (statA.isDirectory && statB.isDirectory) {\n\t\t\t\t\treturn compareFileNames(statA.name, statB.name);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'filesFirst':\n\t\t\t\tif (statA.isDirectory && !statB.isDirectory) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.isDirectory && !statA.isDirectory) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'foldersNestsFiles':\n\t\t\t\tif (statA.isDirectory && !statB.isDirectory) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.isDirectory && !statA.isDirectory) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (statA.hasNests && !statB.hasNests) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.hasNests && !statA.hasNests) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'mixed':\n\t\t\t\tbreak; // not sorting when \"mixed\" is on\n\n\t\t\tdefault: /* 'default', 'modified' */\n\t\t\t\tif (statA.isDirectory && !statB.isDirectory) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (statB.isDirectory && !statA.isDirectory) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Sort Files\n\t\tswitch (sortOrder) {\n\t\t\tcase 'type':\n\t\t\t\treturn compareFileExtensions(statA.name, statB.name);\n\n\t\t\tcase 'modified':\n\t\t\t\tif (statA.mtime !== statB.mtime) {\n\t\t\t\t\treturn (statA.mtime && statB.mtime && statA.mtime < statB.mtime) ? 1 : -1;\n\t\t\t\t}\n\n\t\t\t\treturn compareFileNames(statA.name, statB.name);\n\n\t\t\tdefault: /* 'default', 'mixed', 'filesFirst' */\n\t\t\t\treturn compareFileNames(statA.name, statB.name);\n\t\t}\n\t}\n}\n\nexport class FileDragAndDrop implements ITreeDragAndDrop<ExplorerItem> {\n\tprivate static readonly CONFIRM_DND_SETTING_KEY = 'explorer.confirmDragAndDrop';\n\n\tprivate compressedDragOverElement: HTMLElement | undefined;\n\tprivate compressedDropTargetDisposable: IDisposable = Disposable.None;\n\n\tprivate readonly disposables = new DisposableStore();\n\tprivate dropEnabled = false;\n\n\tconstructor(\n\t\tprivate isCollapsed: (item: ExplorerItem) => boolean,\n\t\t@IExplorerService private explorerService: IExplorerService,\n\t\t@IEditorService private editorService: IEditorService,\n\t\t@IDialogService private dialogService: IDialogService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IFileService private fileService: IFileService,\n\t\t@IConfigurationService private configurationService: IConfigurationService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IWorkspaceEditingService private workspaceEditingService: IWorkspaceEditingService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService\n\t) {\n\t\tconst updateDropEnablement = (e: IConfigurationChangeEvent | undefined) => {\n\t\t\tif (!e || e.affectsConfiguration('explorer.enableDragAndDrop')) {\n\t\t\t\tthis.dropEnabled = this.configurationService.getValue('explorer.enableDragAndDrop');\n\t\t\t}\n\t\t};\n\t\tupdateDropEnablement(undefined);\n\t\tthis.disposables.add(this.configurationService.onDidChangeConfiguration(e => updateDropEnablement(e)));\n\t}\n\n\tonDragOver(data: IDragAndDropData, target: ExplorerItem | undefined, targetIndex: number | undefined, targetSector: ListViewTargetSector | undefined, originalEvent: DragEvent): boolean | ITreeDragOverReaction {\n\t\tif (!this.dropEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Compressed folders\n\t\tif (target) {\n\t\t\tconst compressedTarget = FileDragAndDrop.getCompressedStatFromDragEvent(target, originalEvent);\n\n\t\t\tif (compressedTarget) {\n\t\t\t\tconst iconLabelName = getIconLabelNameFromHTMLElement(originalEvent.target);\n\n\t\t\t\tif (iconLabelName && iconLabelName.index < iconLabelName.count - 1) {\n\t\t\t\t\tconst result = this.handleDragOver(data, compressedTarget, targetIndex, targetSector, originalEvent);\n\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tif (iconLabelName.element !== this.compressedDragOverElement) {\n\t\t\t\t\t\t\tthis.compressedDragOverElement = iconLabelName.element;\n\t\t\t\t\t\t\tthis.compressedDropTargetDisposable.dispose();\n\t\t\t\t\t\t\tthis.compressedDropTargetDisposable = toDisposable(() => {\n\t\t\t\t\t\t\t\ticonLabelName.element.classList.remove('drop-target');\n\t\t\t\t\t\t\t\tthis.compressedDragOverElement = undefined;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\ticonLabelName.element.classList.add('drop-target');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn typeof result === 'boolean' ? result : { ...result, feedback: [] };\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.compressedDropTargetDisposable.dispose();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.compressedDropTargetDisposable.dispose();\n\t\treturn this.handleDragOver(data, target, targetIndex, targetSector, originalEvent);\n\t}\n\n\tprivate handleDragOver(data: IDragAndDropData, target: ExplorerItem | undefined, targetIndex: number | undefined, targetSector: ListViewTargetSector | undefined, originalEvent: DragEvent): boolean | ITreeDragOverReaction {\n\t\tconst isCopy = originalEvent && ((originalEvent.ctrlKey && !isMacintosh) || (originalEvent.altKey && isMacintosh));\n\t\tconst isNative = data instanceof NativeDragAndDropData;\n\t\tconst effectType = (isNative || isCopy) ? ListDragOverEffectType.Copy : ListDragOverEffectType.Move;\n\t\tconst effect = { type: effectType, position: ListDragOverEffectPosition.Over };\n\n\t\t// Native DND\n\t\tif (isNative) {\n\t\t\tif (!containsDragType(originalEvent, DataTransfers.FILES, CodeDataTransfers.FILES, DataTransfers.RESOURCES)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Other-Tree DND\n\t\telse if (data instanceof ExternalElementsDragAndDropData) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In-Explorer DND\n\t\telse {\n\t\t\tconst items = FileDragAndDrop.getStatsFromDragAndDropData(data as ElementsDragAndDropData<ExplorerItem, ExplorerItem[]>);\n\t\t\tconst isRootsReorder = items.every(item => item.isRoot);\n\n\t\t\tif (!target) {\n\t\t\t\t// Dropping onto the empty area. Do not accept if items dragged are already\n\t\t\t\t// children of the root unless we are copying the file\n\t\t\t\tif (!isCopy && items.every(i => !!i.parent && i.parent.isRoot)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// root is added after last root folder when hovering on empty background\n\t\t\t\tif (isRootsReorder) {\n\t\t\t\t\treturn { accept: true, effect: { type: ListDragOverEffectType.Move, position: ListDragOverEffectPosition.After } };\n\t\t\t\t}\n\n\t\t\t\treturn { accept: true, bubble: TreeDragOverBubble.Down, effect, autoExpand: false };\n\t\t\t}\n\n\t\t\tif (!Array.isArray(items)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isCopy && items.every((source) => source.isReadonly)) {\n\t\t\t\treturn false; // Cannot move readonly items unless we copy\n\t\t\t}\n\n\t\t\tif (items.some((source) => {\n\t\t\t\tif (source.isRoot) {\n\t\t\t\t\treturn false; // Root folders are handled seperately\n\t\t\t\t}\n\n\t\t\t\tif (this.uriIdentityService.extUri.isEqual(source.resource, target.resource)) {\n\t\t\t\t\treturn true; // Can not move anything onto itself excpet for root folders\n\t\t\t\t}\n\n\t\t\t\tif (!isCopy && this.uriIdentityService.extUri.isEqual(dirname(source.resource), target.resource)) {\n\t\t\t\t\treturn true; // Can not move a file to the same parent unless we copy\n\t\t\t\t}\n\n\t\t\t\tif (this.uriIdentityService.extUri.isEqualOrParent(target.resource, source.resource)) {\n\t\t\t\t\treturn true; // Can not move a parent folder into one of its children\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// reordering roots\n\t\t\tif (isRootsReorder) {\n\t\t\t\tif (!target.isRoot) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet dropEffectPosition: ListDragOverEffectPosition | undefined = undefined;\n\t\t\t\tswitch (targetSector) {\n\t\t\t\t\tcase ListViewTargetSector.TOP:\n\t\t\t\t\tcase ListViewTargetSector.CENTER_TOP:\n\t\t\t\t\t\tdropEffectPosition = ListDragOverEffectPosition.Before; break;\n\t\t\t\t\tcase ListViewTargetSector.CENTER_BOTTOM:\n\t\t\t\t\tcase ListViewTargetSector.BOTTOM:\n\t\t\t\t\t\tdropEffectPosition = ListDragOverEffectPosition.After; break;\n\t\t\t\t}\n\t\t\t\treturn { accept: true, effect: { type: ListDragOverEffectType.Move, position: dropEffectPosition } };\n\t\t\t}\n\t\t}\n\n\t\t// All (target = model)\n\t\tif (!target) {\n\t\t\treturn { accept: true, bubble: TreeDragOverBubble.Down, effect };\n\t\t}\n\n\t\t// All (target = file/folder)\n\t\telse {\n\t\t\tif (target.isDirectory) {\n\t\t\t\tif (target.isReadonly) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn { accept: true, bubble: TreeDragOverBubble.Down, effect, autoExpand: true };\n\t\t\t}\n\n\t\t\tif (this.contextService.getWorkspace().folders.every(folder => folder.uri.toString() !== target.resource.toString())) {\n\t\t\t\treturn { accept: true, bubble: TreeDragOverBubble.Up, effect };\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetDragURI(element: ExplorerItem): string | null {\n\t\tif (this.explorerService.isEditable(element)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn element.resource.toString();\n\t}\n\n\tgetDragLabel(elements: ExplorerItem[], originalEvent: DragEvent): string | undefined {\n\t\tif (elements.length === 1) {\n\t\t\tconst stat = FileDragAndDrop.getCompressedStatFromDragEvent(elements[0], originalEvent);\n\t\t\treturn stat.name;\n\t\t}\n\n\t\treturn String(elements.length);\n\t}\n\n\tonDragStart(data: IDragAndDropData, originalEvent: DragEvent): void {\n\t\tconst items = FileDragAndDrop.getStatsFromDragAndDropData(data as ElementsDragAndDropData<ExplorerItem, ExplorerItem[]>, originalEvent);\n\t\tif (items && items.length && originalEvent.dataTransfer) {\n\t\t\t// Apply some datatransfer types to allow for dragging the element outside of the application\n\t\t\tthis.instantiationService.invokeFunction(accessor => fillEditorsDragData(accessor, items, originalEvent));\n\n\t\t\t// The only custom data transfer we set from the explorer is a file transfer\n\t\t\t// to be able to DND between multiple code file explorers across windows\n\t\t\tconst fileResources = items.filter(s => s.resource.scheme === Schemas.file).map(r => r.resource.fsPath);\n\t\t\tif (fileResources.length) {\n\t\t\t\toriginalEvent.dataTransfer.setData(CodeDataTransfers.FILES, JSON.stringify(fileResources));\n\t\t\t}\n\t\t}\n\t}\n\n\tasync drop(data: IDragAndDropData, target: ExplorerItem | undefined, targetIndex: number | undefined, targetSector: ListViewTargetSector | undefined, originalEvent: DragEvent): Promise<void> {\n\t\tthis.compressedDropTargetDisposable.dispose();\n\n\t\t// Find compressed target\n\t\tif (target) {\n\t\t\tconst compressedTarget = FileDragAndDrop.getCompressedStatFromDragEvent(target, originalEvent);\n\n\t\t\tif (compressedTarget) {\n\t\t\t\ttarget = compressedTarget;\n\t\t\t}\n\t\t}\n\n\t\t// Find parent to add to\n\t\tif (!target) {\n\t\t\ttarget = this.explorerService.roots[this.explorerService.roots.length - 1];\n\t\t\ttargetSector = ListViewTargetSector.BOTTOM;\n\t\t}\n\t\tif (!target.isDirectory && target.parent) {\n\t\t\ttarget = target.parent;\n\t\t}\n\t\tif (target.isReadonly) {\n\t\t\treturn;\n\t\t}\n\t\tconst resolvedTarget = target;\n\t\tif (!resolvedTarget) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\n\t\t\t// External file DND (Import/Upload file)\n\t\t\tif (data instanceof NativeDragAndDropData) {\n\t\t\t\t// Use local file import when supported\n\t\t\t\tif (!isWeb || (isTemporaryWorkspace(this.contextService.getWorkspace()) && WebFileSystemAccess.supported(mainWindow))) {\n\t\t\t\t\tconst fileImport = this.instantiationService.createInstance(ExternalFileImport);\n\t\t\t\t\tawait fileImport.import(resolvedTarget, originalEvent, mainWindow);\n\t\t\t\t}\n\t\t\t\t// Otherwise fallback to browser based file upload\n\t\t\t\telse {\n\t\t\t\t\tconst browserUpload = this.instantiationService.createInstance(BrowserFileUpload);\n\t\t\t\t\tawait browserUpload.upload(target, originalEvent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In-Explorer DND (Move/Copy file)\n\t\t\telse {\n\t\t\t\tawait this.handleExplorerDrop(data as ElementsDragAndDropData<ExplorerItem, ExplorerItem[]>, resolvedTarget, targetIndex, targetSector, originalEvent);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.dialogService.error(toErrorMessage(error));\n\t\t}\n\t}\n\n\tprivate async handleExplorerDrop(data: ElementsDragAndDropData<ExplorerItem, ExplorerItem[]>, target: ExplorerItem, targetIndex: number | undefined, targetSector: ListViewTargetSector | undefined, originalEvent: DragEvent): Promise<void> {\n\t\tconst elementsData = FileDragAndDrop.getStatsFromDragAndDropData(data);\n\t\tconst distinctItems = new Map(elementsData.map(element => [element, this.isCollapsed(element)]));\n\n\t\tfor (const [item, collapsed] of distinctItems) {\n\t\t\tif (collapsed) {\n\t\t\t\tconst nestedChildren = item.nestedChildren;\n\t\t\t\tif (nestedChildren) {\n\t\t\t\t\tfor (const child of nestedChildren) {\n\t\t\t\t\t\t// if parent is collapsed, then the nested children is considered collapsed to operate as a group\n\t\t\t\t\t\t// and skip collapsed state check since they're not in the tree\n\t\t\t\t\t\tdistinctItems.set(child, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst items = distinctParents([...distinctItems.keys()], s => s.resource);\n\t\tconst isCopy = (originalEvent.ctrlKey && !isMacintosh) || (originalEvent.altKey && isMacintosh);\n\n\t\t// Handle confirm setting\n\t\tconst confirmDragAndDrop = !isCopy && this.configurationService.getValue<boolean>(FileDragAndDrop.CONFIRM_DND_SETTING_KEY);\n\t\tif (confirmDragAndDrop) {\n\t\t\tconst message = items.length > 1 && items.every(s => s.isRoot) ? localize('confirmRootsMove', \"Are you sure you want to change the order of multiple root folders in your workspace?\")\n\t\t\t\t: items.length > 1 ? localize('confirmMultiMove', \"Are you sure you want to move the following {0} files into '{1}'?\", items.length, target.name)\n\t\t\t\t\t: items[0].isRoot ? localize('confirmRootMove', \"Are you sure you want to change the order of root folder '{0}' in your workspace?\", items[0].name)\n\t\t\t\t\t\t: localize('confirmMove', \"Are you sure you want to move '{0}' into '{1}'?\", items[0].name, target.name);\n\t\t\tconst detail = items.length > 1 && !items.every(s => s.isRoot) ? getFileNamesMessage(items.map(i => i.resource)) : undefined;\n\n\t\t\tconst confirmation = await this.dialogService.confirm({\n\t\t\t\tmessage,\n\t\t\t\tdetail,\n\t\t\t\tcheckbox: {\n\t\t\t\t\tlabel: localize('doNotAskAgain', \"Do not ask me again\")\n\t\t\t\t},\n\t\t\t\tprimaryButton: localize({ key: 'moveButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Move\")\n\t\t\t});\n\n\t\t\tif (!confirmation.confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check for confirmation checkbox\n\t\t\tif (confirmation.checkboxChecked === true) {\n\t\t\t\tawait this.configurationService.updateValue(FileDragAndDrop.CONFIRM_DND_SETTING_KEY, false);\n\t\t\t}\n\t\t}\n\n\t\tawait this.doHandleRootDrop(items.filter(s => s.isRoot), target, targetSector);\n\n\t\tconst sources = items.filter(s => !s.isRoot);\n\t\tif (isCopy) {\n\t\t\treturn this.doHandleExplorerDropOnCopy(sources, target);\n\t\t}\n\n\t\treturn this.doHandleExplorerDropOnMove(sources, target);\n\t}\n\n\tprivate async doHandleRootDrop(roots: ExplorerItem[], target: ExplorerItem, targetSector: ListViewTargetSector | undefined): Promise<void> {\n\t\tif (roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst folders = this.contextService.getWorkspace().folders;\n\t\tlet targetIndex: number | undefined;\n\t\tconst sourceIndices: number[] = [];\n\t\tconst workspaceCreationData: IWorkspaceFolderCreationData[] = [];\n\t\tconst rootsToMove: IWorkspaceFolderCreationData[] = [];\n\n\t\tfor (let index = 0; index < folders.length; index++) {\n\t\t\tconst data = {\n\t\t\t\turi: folders[index].uri,\n\t\t\t\tname: folders[index].name\n\t\t\t};\n\n\t\t\t// Is current target\n\t\t\tif (target instanceof ExplorerItem && this.uriIdentityService.extUri.isEqual(folders[index].uri, target.resource)) {\n\t\t\t\ttargetIndex = index;\n\t\t\t}\n\n\t\t\t// Is current source\n\t\t\tfor (const root of roots) {\n\t\t\t\tif (this.uriIdentityService.extUri.isEqual(folders[index].uri, root.resource)) {\n\t\t\t\t\tsourceIndices.push(index);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (roots.every(r => r.resource.toString() !== folders[index].uri.toString())) {\n\t\t\t\tworkspaceCreationData.push(data);\n\t\t\t} else {\n\t\t\t\trootsToMove.push(data);\n\t\t\t}\n\t\t}\n\t\tif (targetIndex === undefined) {\n\t\t\ttargetIndex = workspaceCreationData.length;\n\t\t} else {\n\t\t\tswitch (targetSector) {\n\t\t\t\tcase ListViewTargetSector.BOTTOM:\n\t\t\t\tcase ListViewTargetSector.CENTER_BOTTOM:\n\t\t\t\t\ttargetIndex++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Adjust target index if source was located before target.\n\t\t\t// The move will cause the index to change\n\t\t\tfor (const sourceIndex of sourceIndices) {\n\t\t\t\tif (sourceIndex < targetIndex) {\n\t\t\t\t\ttargetIndex--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tworkspaceCreationData.splice(targetIndex, 0, ...rootsToMove);\n\n\t\treturn this.workspaceEditingService.updateFolders(0, workspaceCreationData.length, workspaceCreationData);\n\t}\n\n\tprivate async doHandleExplorerDropOnCopy(sources: ExplorerItem[], target: ExplorerItem): Promise<void> {\n\n\t\t// Reuse duplicate action when user copies\n\t\tconst explorerConfig = this.configurationService.getValue<IFilesConfiguration>().explorer;\n\t\tconst resourceFileEdits: ResourceFileEdit[] = [];\n\t\tfor (const { resource, isDirectory } of sources) {\n\t\t\tconst allowOverwrite = explorerConfig.incrementalNaming === 'disabled';\n\t\t\tconst newResource = await findValidPasteFileTarget(this.explorerService,\n\t\t\t\tthis.fileService,\n\t\t\t\tthis.dialogService,\n\t\t\t\ttarget,\n\t\t\t\t{ resource, isDirectory, allowOverwrite },\n\t\t\t\texplorerConfig.incrementalNaming\n\t\t\t);\n\t\t\tif (!newResource) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst resourceEdit = new ResourceFileEdit(resource, newResource, { copy: true, overwrite: allowOverwrite });\n\t\t\tresourceFileEdits.push(resourceEdit);\n\t\t}\n\t\tconst labelSuffix = getFileOrFolderLabelSuffix(sources);\n\t\tawait this.explorerService.applyBulkEdit(resourceFileEdits, {\n\t\t\tconfirmBeforeUndo: explorerConfig.confirmUndo === UndoConfirmLevel.Default || explorerConfig.confirmUndo === UndoConfirmLevel.Verbose,\n\t\t\tundoLabel: localize('copy', \"Copy {0}\", labelSuffix),\n\t\t\tprogressLabel: localize('copying', \"Copying {0}\", labelSuffix),\n\t\t});\n\n\t\tconst editors = resourceFileEdits.filter(edit => {\n\t\t\tconst item = edit.newResource ? this.explorerService.findClosest(edit.newResource) : undefined;\n\t\t\treturn item && !item.isDirectory;\n\t\t}).map(edit => ({ resource: edit.newResource, options: { pinned: true } }));\n\n\t\tawait this.editorService.openEditors(editors);\n\t}\n\n\tprivate async doHandleExplorerDropOnMove(sources: ExplorerItem[], target: ExplorerItem): Promise<void> {\n\n\t\t// Do not allow moving readonly items\n\t\tconst resourceFileEdits = sources.filter(source => !source.isReadonly).map(source => new ResourceFileEdit(source.resource, joinPath(target.resource, source.name)));\n\t\tconst labelSuffix = getFileOrFolderLabelSuffix(sources);\n\t\tconst options = {\n\t\t\tconfirmBeforeUndo: this.configurationService.getValue<IFilesConfiguration>().explorer.confirmUndo === UndoConfirmLevel.Verbose,\n\t\t\tundoLabel: localize('move', \"Move {0}\", labelSuffix),\n\t\t\tprogressLabel: localize('moving', \"Moving {0}\", labelSuffix)\n\t\t};\n\n\t\ttry {\n\t\t\tawait this.explorerService.applyBulkEdit(resourceFileEdits, options);\n\t\t} catch (error) {\n\n\t\t\t// Conflict\n\t\t\tif ((<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_MOVE_CONFLICT) {\n\n\t\t\t\tconst overwrites: URI[] = [];\n\t\t\t\tfor (const edit of resourceFileEdits) {\n\t\t\t\t\tif (edit.newResource && await this.fileService.exists(edit.newResource)) {\n\t\t\t\t\t\toverwrites.push(edit.newResource);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Move with overwrite if the user confirms\n\t\t\t\tconst confirm = getMultipleFilesOverwriteConfirm(overwrites);\n\t\t\t\tconst { confirmed } = await this.dialogService.confirm(confirm);\n\t\t\t\tif (confirmed) {\n\t\t\t\t\tawait this.explorerService.applyBulkEdit(resourceFileEdits.map(re => new ResourceFileEdit(re.oldResource, re.newResource, { overwrite: true })), options);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Any other error: bubble up\n\t\t\telse {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static getStatsFromDragAndDropData(data: ElementsDragAndDropData<ExplorerItem, ExplorerItem[]>, dragStartEvent?: DragEvent): ExplorerItem[] {\n\t\tif (data.context) {\n\t\t\treturn data.context;\n\t\t}\n\n\t\t// Detect compressed folder dragging\n\t\tif (dragStartEvent && data.elements.length === 1) {\n\t\t\tdata.context = [FileDragAndDrop.getCompressedStatFromDragEvent(data.elements[0], dragStartEvent)];\n\t\t\treturn data.context;\n\t\t}\n\n\t\treturn data.elements;\n\t}\n\n\tprivate static getCompressedStatFromDragEvent(stat: ExplorerItem, dragEvent: DragEvent): ExplorerItem {\n\t\tconst target = DOM.getWindow(dragEvent).document.elementFromPoint(dragEvent.clientX, dragEvent.clientY);\n\t\tconst iconLabelName = getIconLabelNameFromHTMLElement(target);\n\n\t\tif (iconLabelName) {\n\t\t\tconst { count, index } = iconLabelName;\n\n\t\t\tlet i = count - 1;\n\t\t\twhile (i > index && stat.parent) {\n\t\t\t\tstat = stat.parent;\n\t\t\t\ti--;\n\t\t\t}\n\n\t\t\treturn stat;\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tonDragEnd(): void {\n\t\tthis.compressedDropTargetDisposable.dispose();\n\t}\n\n\tdispose(): void {\n\t\tthis.compressedDropTargetDisposable.dispose();\n\t}\n}\n\nfunction getIconLabelNameFromHTMLElement(target: HTMLElement | EventTarget | Element | null): { element: HTMLElement; count: number; index: number } | null {\n\tif (!(DOM.isHTMLElement(target))) {\n\t\treturn null;\n\t}\n\n\tlet element: HTMLElement | null = target;\n\n\twhile (element && !element.classList.contains('monaco-list-row')) {\n\t\tif (element.classList.contains('label-name') && element.hasAttribute('data-icon-label-count')) {\n\t\t\tconst count = Number(element.getAttribute('data-icon-label-count'));\n\t\t\tconst index = Number(element.getAttribute('data-icon-label-index'));\n\n\t\t\tif (isNumber(count) && isNumber(index)) {\n\t\t\t\treturn { element: element, count, index };\n\t\t\t}\n\t\t}\n\n\t\telement = element.parentElement;\n\t}\n\n\treturn null;\n}\n\nexport function isCompressedFolderName(target: HTMLElement | EventTarget | Element | null): boolean {\n\treturn !!getIconLabelNameFromHTMLElement(target);\n}\n\nexport class ExplorerCompressionDelegate implements ITreeCompressionDelegate<ExplorerItem> {\n\n\tisIncompressible(stat: ExplorerItem): boolean {\n\t\treturn stat.isRoot || !stat.isDirectory || stat instanceof NewExplorerItem || (!stat.parent || stat.parent.isRoot);\n\t}\n}\n\nfunction getFileOrFolderLabelSuffix(items: ExplorerItem[]): string {\n\tif (items.length === 1) {\n\t\treturn items[0].name;\n\t}\n\n\tif (items.every(i => i.isDirectory)) {\n\t\treturn localize('numberOfFolders', \"{0} folders\", items.length);\n\t}\n\tif (items.every(i => !i.isDirectory)) {\n\t\treturn localize('numberOfFiles', \"{0} files\", items.length);\n\t}\n\n\treturn `${items.length} files and folders`;\n}\n"],
  "mappings": "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",
  "names": ["children", "nodeControllers", "value"]
}
