var v=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var a=(n,t,e,i)=>{for(var r=i>1?void 0:i?y(t,e):t,o=n.length-1,s;o>=0;o--)(s=n[o])&&(r=(i?s(t,e,r):s(r))||r);return i&&r&&v(t,e,r),r},d=(n,t)=>(e,i)=>t(e,i,n);import{Disposable as b}from"../../../../../base/common/lifecycle.js";import{isEqual as u}from"../../../../../base/common/resources.js";import{URI as I}from"../../../../../base/common/uri.js";import{IFileService as h}from"../../../../../platform/files/common/files.js";import{ITextEditorService as l}from"../../../../services/textfile/common/textEditorService.js";import{NO_TYPE_ID as m}from"../../../../services/workingCopy/common/workingCopy.js";import{IWorkingCopyEditorService as F}from"../../../../services/workingCopy/common/workingCopyEditorService.js";class k{canSerialize(t){return!0}serialize(t){const e=t,i=e.resource,r=e.preferredResource,o={resourceJSON:i.toJSON(),preferredResourceJSON:u(i,r)?void 0:r,name:e.getPreferredName(),description:e.getPreferredDescription(),encoding:e.getEncoding(),modeId:e.getPreferredLanguageId()};return JSON.stringify(o)}deserialize(t,e){return t.invokeFunction(i=>{const r=JSON.parse(e),o=I.revive(r.resourceJSON),s=I.revive(r.preferredResourceJSON),f=r.name,S=r.description,E=r.encoding,g=r.modeId,p=i.get(l).createTextEditor({resource:o,label:f,description:S,encoding:E,languageId:g,forceFile:!0});return s&&p.setPreferredResource(s),p})}}let c=class extends b{constructor(e,i,r){super();this.textEditorService=i;this.fileService=r;this._register(e.registerHandler(this))}static ID="workbench.contrib.fileEditorWorkingCopyEditorHandler";handles(e){return e.typeId===m&&this.fileService.canHandleResource(e.resource)}handlesSync(e){return e.typeId===m&&this.fileService.hasProvider(e.resource)}isOpen(e,i){return this.handlesSync(e)?u(e.resource,i.resource):!1}createEditor(e){return this.textEditorService.createTextEditor({resource:e.resource,forceFile:!0})}};c=a([d(0,F),d(1,l),d(2,h)],c);export{k as FileEditorInputSerializer,c as FileEditorWorkingCopyEditorHandler};
