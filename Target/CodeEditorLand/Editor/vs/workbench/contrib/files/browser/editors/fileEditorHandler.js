var v=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var u=(n,t,e,i)=>{for(var r=i>1?void 0:i?b(t,e):t,o=n.length-1,s;o>=0;o--)(s=n[o])&&(r=(i?s(t,e,r):s(r))||r);return i&&r&&v(t,e,r),r},d=(n,t)=>(e,i)=>t(e,i,n);import{Disposable as h}from"../../../../../base/common/lifecycle.js";import{URI as a}from"../../../../../base/common/uri.js";import"../../../../common/editor.js";import"../../../../common/editor/editorInput.js";import{ITextEditorService as I}from"../../../../services/textfile/common/textEditorService.js";import{isEqual as l}from"../../../../../base/common/resources.js";import"../../../../../platform/instantiation/common/instantiation.js";import"../../../../common/contributions.js";import{NO_TYPE_ID as f}from"../../../../services/workingCopy/common/workingCopy.js";import{IWorkingCopyEditorService as y}from"../../../../services/workingCopy/common/workingCopyEditorService.js";import"./fileEditorInput.js";import{IFileService as F}from"../../../../../platform/files/common/files.js";class G{canSerialize(t){return!0}serialize(t){const e=t,i=e.resource,r=e.preferredResource,o={resourceJSON:i.toJSON(),preferredResourceJSON:l(i,r)?void 0:r,name:e.getPreferredName(),description:e.getPreferredDescription(),encoding:e.getEncoding(),modeId:e.getPreferredLanguageId()};return JSON.stringify(o)}deserialize(t,e){return t.invokeFunction(i=>{const r=JSON.parse(e),o=a.revive(r.resourceJSON),s=a.revive(r.preferredResourceJSON),m=r.name,S=r.description,E=r.encoding,g=r.modeId,p=i.get(I).createTextEditor({resource:o,label:m,description:S,encoding:E,languageId:g,forceFile:!0});return s&&p.setPreferredResource(s),p})}}let c=class extends h{constructor(e,i,r){super();this.textEditorService=i;this.fileService=r;this._register(e.registerHandler(this))}static ID="workbench.contrib.fileEditorWorkingCopyEditorHandler";handles(e){return e.typeId===f&&this.fileService.canHandleResource(e.resource)}handlesSync(e){return e.typeId===f&&this.fileService.hasProvider(e.resource)}isOpen(e,i){return this.handlesSync(e)?l(e.resource,i.resource):!1}createEditor(e){return this.textEditorService.createTextEditor({resource:e.resource,forceFile:!0})}};c=u([d(0,y),d(1,I),d(2,F)],c);export{G as FileEditorInputSerializer,c as FileEditorWorkingCopyEditorHandler};
