{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/explorerViewlet.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/explorerviewlet.css\";\nimport { isMouseEvent } from \"../../../../base/browser/dom.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { mark } from \"../../../../base/common/performance.js\";\nimport { isMacintosh, isWeb } from \"../../../../base/common/platform.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IsWebContext } from \"../../../../platform/contextkey/common/contextkeys.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport { OpenRecentAction } from \"../../../browser/actions/windowActions.js\";\nimport {\n\tAddRootFolderAction,\n\tOpenFileFolderAction,\n\tOpenFolderAction,\n\tOpenFolderViaWorkspaceAction,\n} from \"../../../browser/actions/workspaceActions.js\";\nimport type { ViewPane } from \"../../../browser/parts/views/viewPane.js\";\nimport { ViewPaneContainer } from \"../../../browser/parts/views/viewPaneContainer.js\";\nimport type { IViewletViewOptions } from \"../../../browser/parts/views/viewsViewlet.js\";\nimport {\n\tOpenFolderWorkspaceSupportContext,\n\tRemoteNameContext,\n\tWorkbenchStateContext,\n} from \"../../../common/contextkeys.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport {\n\tExtensions,\n\ttype IViewContainersRegistry,\n\ttype IViewDescriptor,\n\tIViewDescriptorService,\n\ttype IViewsRegistry,\n\ttype ViewContainer,\n\tViewContainerLocation,\n\tViewContentGroups,\n} from \"../../../common/views.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IWorkbenchLayoutService } from \"../../../services/layout/browser/layoutService.js\";\nimport {\n\tExplorerViewletVisibleContext,\n\ttype IFilesConfiguration,\n\tVIEWLET_ID,\n\tVIEW_ID,\n} from \"../common/files.js\";\nimport { EmptyView } from \"./views/emptyView.js\";\nimport { ExplorerView } from \"./views/explorerView.js\";\nimport { OpenEditorsView } from \"./views/openEditorsView.js\";\n\nconst explorerViewIcon = registerIcon(\n\t\"explorer-view-icon\",\n\tCodicon.files,\n\tlocalize(\"explorerViewIcon\", \"View icon of the explorer view.\"),\n);\nconst openEditorsViewIcon = registerIcon(\n\t\"open-editors-view-icon\",\n\tCodicon.book,\n\tlocalize(\"openEditorsIcon\", \"View icon of the open editors view.\"),\n);\n\nexport class ExplorerViewletViewsContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.explorerViewletViews\";\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IProgressService progressService: IProgressService\n\t) {\n\t\tsuper();\n\n\t\tprogressService.withProgress({ location: ProgressLocation.Explorer }, () => workspaceContextService.getCompleteWorkspace()).finally(() => {\n\t\t\tthis.registerViews();\n\n\t\t\tthis._register(workspaceContextService.onDidChangeWorkbenchState(() => this.registerViews()));\n\t\t\tthis._register(workspaceContextService.onDidChangeWorkspaceFolders(() => this.registerViews()));\n\t\t});\n\t}\n\n\tprivate registerViews(): void {\n\t\tmark(\"code/willRegisterExplorerViews\");\n\n\t\tconst viewDescriptors = viewsRegistry.getViews(VIEW_CONTAINER);\n\n\t\tconst viewDescriptorsToRegister: IViewDescriptor[] = [];\n\t\tconst viewDescriptorsToDeregister: IViewDescriptor[] = [];\n\n\t\tconst openEditorsViewDescriptor =\n\t\t\tthis.createOpenEditorsViewDescriptor();\n\t\tif (\n\t\t\t!viewDescriptors.some((v) => v.id === openEditorsViewDescriptor.id)\n\t\t) {\n\t\t\tviewDescriptorsToRegister.push(openEditorsViewDescriptor);\n\t\t}\n\n\t\tconst explorerViewDescriptor = this.createExplorerViewDescriptor();\n\t\tconst registeredExplorerViewDescriptor = viewDescriptors.find(\n\t\t\t(v) => v.id === explorerViewDescriptor.id,\n\t\t);\n\t\tconst emptyViewDescriptor = this.createEmptyViewDescriptor();\n\t\tconst registeredEmptyViewDescriptor = viewDescriptors.find(\n\t\t\t(v) => v.id === emptyViewDescriptor.id,\n\t\t);\n\n\t\tif (\n\t\t\tthis.workspaceContextService.getWorkbenchState() ===\n\t\t\t\tWorkbenchState.EMPTY ||\n\t\t\tthis.workspaceContextService.getWorkspace().folders.length === 0\n\t\t) {\n\t\t\tif (registeredExplorerViewDescriptor) {\n\t\t\t\tviewDescriptorsToDeregister.push(\n\t\t\t\t\tregisteredExplorerViewDescriptor,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!registeredEmptyViewDescriptor) {\n\t\t\t\tviewDescriptorsToRegister.push(emptyViewDescriptor);\n\t\t\t}\n\t\t} else {\n\t\t\tif (registeredEmptyViewDescriptor) {\n\t\t\t\tviewDescriptorsToDeregister.push(registeredEmptyViewDescriptor);\n\t\t\t}\n\t\t\tif (!registeredExplorerViewDescriptor) {\n\t\t\t\tviewDescriptorsToRegister.push(explorerViewDescriptor);\n\t\t\t}\n\t\t}\n\n\t\tif (viewDescriptorsToDeregister.length) {\n\t\t\tviewsRegistry.deregisterViews(\n\t\t\t\tviewDescriptorsToDeregister,\n\t\t\t\tVIEW_CONTAINER,\n\t\t\t);\n\t\t}\n\t\tif (viewDescriptorsToRegister.length) {\n\t\t\tviewsRegistry.registerViews(\n\t\t\t\tviewDescriptorsToRegister,\n\t\t\t\tVIEW_CONTAINER,\n\t\t\t);\n\t\t}\n\n\t\tmark(\"code/didRegisterExplorerViews\");\n\t}\n\n\tprivate createOpenEditorsViewDescriptor(): IViewDescriptor {\n\t\treturn {\n\t\t\tid: OpenEditorsView.ID,\n\t\t\tname: OpenEditorsView.NAME,\n\t\t\tctorDescriptor: new SyncDescriptor(OpenEditorsView),\n\t\t\tcontainerIcon: openEditorsViewIcon,\n\t\t\torder: 0,\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: true,\n\t\t\tcollapsed: false,\n\t\t\thideByDefault: true,\n\t\t\tfocusCommand: {\n\t\t\t\tid: \"workbench.files.action.focusOpenEditorsView\",\n\t\t\t\tkeybindings: {\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyCode.KeyE,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate createEmptyViewDescriptor(): IViewDescriptor {\n\t\treturn {\n\t\t\tid: EmptyView.ID,\n\t\t\tname: EmptyView.NAME,\n\t\t\tcontainerIcon: explorerViewIcon,\n\t\t\tctorDescriptor: new SyncDescriptor(EmptyView),\n\t\t\torder: 1,\n\t\t\tcanToggleVisibility: true,\n\t\t\tfocusCommand: {\n\t\t\t\tid: \"workbench.explorer.fileView.focus\",\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate createExplorerViewDescriptor(): IViewDescriptor {\n\t\treturn {\n\t\t\tid: VIEW_ID,\n\t\t\tname: localize2(\"folders\", \"Folders\"),\n\t\t\tcontainerIcon: explorerViewIcon,\n\t\t\tctorDescriptor: new SyncDescriptor(ExplorerView),\n\t\t\torder: 1,\n\t\t\tcanMoveView: true,\n\t\t\tcanToggleVisibility: false,\n\t\t\tfocusCommand: {\n\t\t\t\tid: \"workbench.explorer.fileView.focus\",\n\t\t\t},\n\t\t};\n\t}\n}\n\nexport class ExplorerViewPaneContainer extends ViewPaneContainer {\n\tprivate viewletVisibleContextKey: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t) {\n\t\tsuper(\n\t\t\tVIEWLET_ID,\n\t\t\t{ mergeViewWithContainerWhenSingleView: true },\n\t\t\tinstantiationService,\n\t\t\tconfigurationService,\n\t\t\tlayoutService,\n\t\t\tcontextMenuService,\n\t\t\ttelemetryService,\n\t\t\textensionService,\n\t\t\tthemeService,\n\t\t\tstorageService,\n\t\t\tcontextService,\n\t\t\tviewDescriptorService,\n\t\t);\n\n\t\tthis.viewletVisibleContextKey =\n\t\t\tExplorerViewletVisibleContext.bindTo(contextKeyService);\n\t\tthis._register(\n\t\t\tthis.contextService.onDidChangeWorkspaceName((e) =>\n\t\t\t\tthis.updateTitleArea(),\n\t\t\t),\n\t\t);\n\t}\n\n\toverride create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\t\tparent.classList.add(\"explorer-viewlet\");\n\t}\n\n\tprotected override createView(\n\t\tviewDescriptor: IViewDescriptor,\n\t\toptions: IViewletViewOptions,\n\t): ViewPane {\n\t\tif (viewDescriptor.id === VIEW_ID) {\n\t\t\treturn this.instantiationService.createInstance(ExplorerView, {\n\t\t\t\t...options,\n\t\t\t\tdelegate: {\n\t\t\t\t\twillOpenElement: (e) => {\n\t\t\t\t\t\tif (!isMouseEvent(e)) {\n\t\t\t\t\t\t\treturn; // only delay when user clicks\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst openEditorsView = this.getOpenEditorsView();\n\t\t\t\t\t\tif (openEditorsView) {\n\t\t\t\t\t\t\tlet delay = 0;\n\n\t\t\t\t\t\t\tconst config =\n\t\t\t\t\t\t\t\tthis.configurationService.getValue<IFilesConfiguration>();\n\t\t\t\t\t\t\tif (!!config.workbench?.editor?.enablePreview) {\n\t\t\t\t\t\t\t\t// delay open editors view when preview is enabled\n\t\t\t\t\t\t\t\t// to accomodate for the user doing a double click\n\t\t\t\t\t\t\t\t// to pin the editor.\n\t\t\t\t\t\t\t\t// without this delay a double click would be not\n\t\t\t\t\t\t\t\t// possible because the next element would move\n\t\t\t\t\t\t\t\t// under the mouse after the first click.\n\t\t\t\t\t\t\t\tdelay = 250;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\topenEditorsView.setStructuralRefreshDelay(delay);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdidOpenElement: (e) => {\n\t\t\t\t\t\tif (!isMouseEvent(e)) {\n\t\t\t\t\t\t\treturn; // only delay when user clicks\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst openEditorsView = this.getOpenEditorsView();\n\t\t\t\t\t\topenEditorsView?.setStructuralRefreshDelay(0);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn super.createView(viewDescriptor, options);\n\t}\n\n\tgetExplorerView(): ExplorerView {\n\t\treturn <ExplorerView>this.getView(VIEW_ID);\n\t}\n\n\tgetOpenEditorsView(): OpenEditorsView {\n\t\treturn <OpenEditorsView>this.getView(OpenEditorsView.ID);\n\t}\n\n\toverride setVisible(visible: boolean): void {\n\t\tthis.viewletVisibleContextKey.set(visible);\n\t\tsuper.setVisible(visible);\n\t}\n\n\toverride focus(): void {\n\t\tconst explorerView = this.getView(VIEW_ID);\n\t\tif (explorerView && this.panes.every((p) => !p.isExpanded())) {\n\t\t\texplorerView.setExpanded(true);\n\t\t}\n\t\tif (explorerView?.isExpanded()) {\n\t\t\texplorerView.focus();\n\t\t} else {\n\t\t\tsuper.focus();\n\t\t}\n\t}\n}\n\nconst viewContainerRegistry = Registry.as<IViewContainersRegistry>(\n\tExtensions.ViewContainersRegistry,\n);\n\n/**\n * Explorer viewlet container.\n */\nexport const VIEW_CONTAINER: ViewContainer =\n\tviewContainerRegistry.registerViewContainer(\n\t\t{\n\t\t\tid: VIEWLET_ID,\n\t\t\ttitle: localize2(\"explore\", \"Explorer\"),\n\t\t\tctorDescriptor: new SyncDescriptor(ExplorerViewPaneContainer),\n\t\t\tstorageId: \"workbench.explorer.views.state\",\n\t\t\ticon: explorerViewIcon,\n\t\t\talwaysUseContainerInfo: true,\n\t\t\thideIfEmpty: true,\n\t\t\torder: 0,\n\t\t\topenCommandActionDescriptor: {\n\t\t\t\tid: VIEWLET_ID,\n\t\t\t\ttitle: localize2(\"explore\", \"Explorer\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miViewExplorer\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Explorer\",\n\t\t\t\t),\n\t\t\t\tkeybindings: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyE,\n\t\t\t\t},\n\t\t\t\torder: 0,\n\t\t\t},\n\t\t},\n\t\tViewContainerLocation.Sidebar,\n\t\t{ isDefault: true },\n\t);\n\nconst openFolder = localize(\"openFolder\", \"Open Folder\");\nconst addAFolder = localize(\"addAFolder\", \"add a folder\");\nconst openRecent = localize(\"openRecent\", \"Open Recent\");\n\nconst addRootFolderButton = `[${openFolder}](command:${AddRootFolderAction.ID})`;\nconst addAFolderButton = `[${addAFolder}](command:${AddRootFolderAction.ID})`;\nconst openFolderButton = `[${openFolder}](command:${isMacintosh && !isWeb ? OpenFileFolderAction.ID : OpenFolderAction.ID})`;\nconst openFolderViaWorkspaceButton = `[${openFolder}](command:${OpenFolderViaWorkspaceAction.ID})`;\nconst openRecentButton = `[${openRecent}](command:${OpenRecentAction.ID})`;\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\nviewsRegistry.registerViewWelcomeContent(EmptyView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: \"noWorkspaceHelp\",\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t],\n\t\t},\n\t\t\"You have not yet added a folder to the workspace.\\n{0}\",\n\t\taddRootFolderButton,\n\t),\n\twhen: ContextKeyExpr.and(\n\t\t// inside a .code-workspace\n\t\tWorkbenchStateContext.isEqualTo(\"workspace\"),\n\t\t// unless we cannot enter or open workspaces (e.g. web serverless)\n\t\tOpenFolderWorkspaceSupportContext,\n\t),\n\tgroup: ViewContentGroups.Open,\n\torder: 1,\n});\n\nviewsRegistry.registerViewWelcomeContent(EmptyView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: \"noFolderHelpWeb\",\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t],\n\t\t},\n\t\t\"You have not yet opened a folder.\\n{0}\\n{1}\",\n\t\topenFolderViaWorkspaceButton,\n\t\topenRecentButton,\n\t),\n\twhen: ContextKeyExpr.and(\n\t\t// inside a .code-workspace\n\t\tWorkbenchStateContext.isEqualTo(\"workspace\"),\n\t\t// we cannot enter workspaces (e.g. web serverless)\n\t\tOpenFolderWorkspaceSupportContext.toNegated(),\n\t),\n\tgroup: ViewContentGroups.Open,\n\torder: 1,\n});\n\nviewsRegistry.registerViewWelcomeContent(EmptyView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: \"remoteNoFolderHelp\",\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t],\n\t\t},\n\t\t\"Connected to remote.\\n{0}\",\n\t\topenFolderButton,\n\t),\n\twhen: ContextKeyExpr.and(\n\t\t// not inside a .code-workspace\n\t\tWorkbenchStateContext.notEqualsTo(\"workspace\"),\n\t\t// connected to a remote\n\t\tRemoteNameContext.notEqualsTo(\"\"),\n\t\t// but not in web\n\t\tIsWebContext.toNegated(),\n\t),\n\tgroup: ViewContentGroups.Open,\n\torder: 1,\n});\n\nviewsRegistry.registerViewWelcomeContent(EmptyView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: \"noFolderButEditorsHelp\",\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t],\n\t\t},\n\t\t\"You have not yet opened a folder.\\n{0}\\nOpening a folder will close all currently open editors. To keep them open, {1} instead.\",\n\t\topenFolderButton,\n\t\taddAFolderButton,\n\t),\n\twhen: ContextKeyExpr.and(\n\t\t// editors are opened\n\t\tContextKeyExpr.has(\"editorIsOpen\"),\n\t\tContextKeyExpr.or(\n\t\t\t// not inside a .code-workspace and local\n\t\t\tContextKeyExpr.and(\n\t\t\t\tWorkbenchStateContext.notEqualsTo(\"workspace\"),\n\t\t\t\tRemoteNameContext.isEqualTo(\"\"),\n\t\t\t),\n\t\t\t// not inside a .code-workspace and web\n\t\t\tContextKeyExpr.and(\n\t\t\t\tWorkbenchStateContext.notEqualsTo(\"workspace\"),\n\t\t\t\tIsWebContext,\n\t\t\t),\n\t\t),\n\t),\n\tgroup: ViewContentGroups.Open,\n\torder: 1,\n});\n\nviewsRegistry.registerViewWelcomeContent(EmptyView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: \"noFolderHelp\",\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t],\n\t\t},\n\t\t\"You have not yet opened a folder.\\n{0}\",\n\t\topenFolderButton,\n\t),\n\twhen: ContextKeyExpr.and(\n\t\t// no editor is open\n\t\tContextKeyExpr.has(\"editorIsOpen\")?.negate(),\n\t\tContextKeyExpr.or(\n\t\t\t// not inside a .code-workspace and local\n\t\t\tContextKeyExpr.and(\n\t\t\t\tWorkbenchStateContext.notEqualsTo(\"workspace\"),\n\t\t\t\tRemoteNameContext.isEqualTo(\"\"),\n\t\t\t),\n\t\t\t// not inside a .code-workspace and web\n\t\t\tContextKeyExpr.and(\n\t\t\t\tWorkbenchStateContext.notEqualsTo(\"workspace\"),\n\t\t\t\tIsWebContext,\n\t\t\t),\n\t\t),\n\t),\n\tgroup: ViewContentGroups.Open,\n\torder: 1,\n});\n"],
  "mappings": "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",
  "names": []
}
