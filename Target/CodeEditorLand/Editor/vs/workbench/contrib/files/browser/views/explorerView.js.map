{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/views/explorerView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../../nls.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport * as perf from '../../../../../base/common/performance.js';\nimport { WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification } from '../../../../../base/common/actions.js';\nimport { memoize } from '../../../../../base/common/decorators.js';\nimport { IFilesConfiguration, ExplorerFolderContext, FilesExplorerFocusedContext, ExplorerFocusedContext, ExplorerRootContext, ExplorerResourceReadonlyContext, ExplorerResourceCut, ExplorerResourceMoveableToTrash, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext, ExplorerCompressedLastFocusContext, ExplorerResourceAvailableEditorIdsContext, VIEW_ID, ExplorerResourceNotReadonlyContext, ViewHasSomeCollapsibleRootItemContext, FoldersViewVisibleContext } from '../../common/files.js';\nimport { FileCopiedContext, NEW_FILE_COMMAND_ID, NEW_FOLDER_COMMAND_ID } from '../fileActions.js';\nimport * as DOM from '../../../../../base/browser/dom.js';\nimport { IWorkbenchLayoutService } from '../../../../services/layout/browser/layoutService.js';\nimport { ExplorerDecorationsProvider } from './explorerDecorationsProvider.js';\nimport { IWorkspaceContextService, WorkbenchState } from '../../../../../platform/workspace/common/workspace.js';\nimport { IConfigurationService, IConfigurationChangeEvent } from '../../../../../platform/configuration/common/configuration.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IProgressService, ProgressLocation } from '../../../../../platform/progress/common/progress.js';\nimport { IContextMenuService } from '../../../../../platform/contextview/browser/contextView.js';\nimport { IContextKeyService, IContextKey, ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { ResourceContextKey } from '../../../../common/contextkeys.js';\nimport { IDecorationsService } from '../../../../services/decorations/common/decorations.js';\nimport { WorkbenchCompressibleAsyncDataTree } from '../../../../../platform/list/browser/listService.js';\nimport { DelayedDragHandler } from '../../../../../base/browser/dnd.js';\nimport { IEditorService, SIDE_GROUP, ACTIVE_GROUP } from '../../../../services/editor/common/editorService.js';\nimport { IViewPaneOptions, ViewPane } from '../../../../browser/parts/views/viewPane.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { ExplorerDelegate, ExplorerDataSource, FilesRenderer, ICompressedNavigationController, FilesFilter, FileSorter, FileDragAndDrop, ExplorerCompressionDelegate, isCompressedFolderName } from './explorerViewer.js';\nimport { IThemeService, IFileIconTheme } from '../../../../../platform/theme/common/themeService.js';\nimport { IWorkbenchThemeService } from '../../../../services/themes/common/workbenchThemeService.js';\nimport { ITreeContextMenuEvent, TreeVisibility } from '../../../../../base/browser/ui/tree/tree.js';\nimport { MenuId, Action2, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { ExplorerItem, NewExplorerItem } from '../../common/explorerModel.js';\nimport { ResourceLabels } from '../../../../browser/labels.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../platform/storage/common/storage.js';\nimport { IAsyncDataTreeViewState } from '../../../../../base/browser/ui/tree/asyncDataTree.js';\nimport { FuzzyScore } from '../../../../../base/common/filters.js';\nimport { IClipboardService } from '../../../../../platform/clipboard/common/clipboardService.js';\nimport { IFileService, FileSystemProviderCapabilities } from '../../../../../platform/files/common/files.js';\nimport { IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { IViewDescriptorService } from '../../../../common/views.js';\nimport { IViewsService } from '../../../../services/views/common/viewsService.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { IUriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../../common/editor.js';\nimport { IExplorerService, IExplorerView } from '../files.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IEditorResolverService } from '../../../../services/editor/common/editorResolverService.js';\nimport { EditorOpenSource } from '../../../../../platform/editor/common/editor.js';\nimport { ResourceMap } from '../../../../../base/common/map.js';\nimport { AbstractTreePart } from '../../../../../base/browser/ui/tree/abstractTree.js';\nimport { IHoverService } from '../../../../../platform/hover/browser/hover.js';\n\n\nfunction hasExpandedRootChild(tree: WorkbenchCompressibleAsyncDataTree<ExplorerItem | ExplorerItem[], ExplorerItem, FuzzyScore>, treeInput: ExplorerItem[]): boolean {\n\tfor (const folder of treeInput) {\n\t\tif (tree.hasNode(folder) && !tree.isCollapsed(folder)) {\n\t\t\tfor (const [, child] of folder.children.entries()) {\n\t\t\t\tif (tree.hasNode(child) && tree.isCollapsible(child) && !tree.isCollapsed(child)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Whether or not any of the nodes in the tree are expanded\n */\nfunction hasExpandedNode(tree: WorkbenchCompressibleAsyncDataTree<ExplorerItem | ExplorerItem[], ExplorerItem, FuzzyScore>, treeInput: ExplorerItem[]): boolean {\n\tfor (const folder of treeInput) {\n\t\tif (tree.hasNode(folder) && !tree.isCollapsed(folder)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nconst identityProvider = {\n\tgetId: (stat: ExplorerItem) => {\n\t\tif (stat instanceof NewExplorerItem) {\n\t\t\treturn `new:${stat.getId()}`;\n\t\t}\n\n\t\treturn stat.getId();\n\t}\n};\n\nexport function getContext(focus: ExplorerItem[], selection: ExplorerItem[], respectMultiSelection: boolean,\n\tcompressedNavigationControllerProvider: { getCompressedNavigationController(stat: ExplorerItem): ICompressedNavigationController[] | undefined }): ExplorerItem[] {\n\n\tlet focusedStat: ExplorerItem | undefined;\n\tfocusedStat = focus.length ? focus[0] : undefined;\n\n\t// If we are respecting multi-select and we have a multi-selection we ignore focus as we want to act on the selection\n\tif (respectMultiSelection && selection.length > 1) {\n\t\tfocusedStat = undefined;\n\t}\n\n\tconst compressedNavigationControllers = focusedStat && compressedNavigationControllerProvider.getCompressedNavigationController(focusedStat);\n\tconst compressedNavigationController = compressedNavigationControllers && compressedNavigationControllers.length ? compressedNavigationControllers[0] : undefined;\n\tfocusedStat = compressedNavigationController ? compressedNavigationController.current : focusedStat;\n\n\tconst selectedStats: ExplorerItem[] = [];\n\n\tfor (const stat of selection) {\n\t\tconst controllers = compressedNavigationControllerProvider.getCompressedNavigationController(stat);\n\t\tconst controller = controllers && controllers.length ? controllers[0] : undefined;\n\t\tif (controller && focusedStat && controller === compressedNavigationController) {\n\t\t\tif (stat === focusedStat) {\n\t\t\t\tselectedStats.push(stat);\n\t\t\t}\n\t\t\t// Ignore stats which are selected but are part of the same compact node as the focused stat\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (controller) {\n\t\t\tselectedStats.push(...controller.items);\n\t\t} else {\n\t\t\tselectedStats.push(stat);\n\t\t}\n\t}\n\tif (!focusedStat) {\n\t\tif (respectMultiSelection) {\n\t\t\treturn selectedStats;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tif (respectMultiSelection && selectedStats.indexOf(focusedStat) >= 0) {\n\t\treturn selectedStats;\n\t}\n\n\treturn [focusedStat];\n}\n\nexport interface IExplorerViewContainerDelegate {\n\twillOpenElement(event?: UIEvent): void;\n\tdidOpenElement(event?: UIEvent): void;\n}\n\nexport interface IExplorerViewPaneOptions extends IViewPaneOptions {\n\tdelegate: IExplorerViewContainerDelegate;\n}\n\nexport class ExplorerView extends ViewPane implements IExplorerView {\n\tstatic readonly TREE_VIEW_STATE_STORAGE_KEY: string = 'workbench.explorer.treeViewState';\n\n\tprivate tree!: WorkbenchCompressibleAsyncDataTree<ExplorerItem | ExplorerItem[], ExplorerItem, FuzzyScore>;\n\tprivate filter!: FilesFilter;\n\n\tprivate resourceContext: ResourceContextKey;\n\tprivate folderContext: IContextKey<boolean>;\n\tprivate readonlyContext: IContextKey<boolean>;\n\tprivate availableEditorIdsContext: IContextKey<string>;\n\n\tprivate rootContext: IContextKey<boolean>;\n\tprivate resourceMoveableToTrash: IContextKey<boolean>;\n\n\tprivate renderer!: FilesRenderer;\n\n\tprivate treeContainer!: HTMLElement;\n\tprivate container!: HTMLElement;\n\tprivate compressedFocusContext: IContextKey<boolean>;\n\tprivate compressedFocusFirstContext: IContextKey<boolean>;\n\tprivate compressedFocusLastContext: IContextKey<boolean>;\n\n\tprivate viewHasSomeCollapsibleRootItem: IContextKey<boolean>;\n\tprivate viewVisibleContextKey: IContextKey<boolean>;\n\n\tprivate setTreeInputPromise: Promise<void> | undefined;\n\tprivate horizontalScrolling: boolean | undefined;\n\n\tprivate dragHandler!: DelayedDragHandler;\n\tprivate _autoReveal: boolean | 'force' | 'focusNoScroll' = false;\n\tprivate decorationsProvider: ExplorerDecorationsProvider | undefined;\n\tprivate readonly delegate: IExplorerViewContainerDelegate | undefined;\n\n\tconstructor(\n\t\toptions: IExplorerViewPaneOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorResolverService private readonly editorResolverService: IEditorResolverService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IDecorationsService private readonly decorationService: IDecorationsService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IThemeService themeService: IWorkbenchThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IClipboardService private clipboardService: IClipboardService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IOpenerService openerService: IOpenerService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\tthis.delegate = options.delegate;\n\t\tthis.resourceContext = instantiationService.createInstance(ResourceContextKey);\n\t\tthis._register(this.resourceContext);\n\n\t\tthis.folderContext = ExplorerFolderContext.bindTo(contextKeyService);\n\t\tthis.readonlyContext = ExplorerResourceReadonlyContext.bindTo(contextKeyService);\n\t\tthis.availableEditorIdsContext = ExplorerResourceAvailableEditorIdsContext.bindTo(contextKeyService);\n\t\tthis.rootContext = ExplorerRootContext.bindTo(contextKeyService);\n\t\tthis.resourceMoveableToTrash = ExplorerResourceMoveableToTrash.bindTo(contextKeyService);\n\t\tthis.compressedFocusContext = ExplorerCompressedFocusContext.bindTo(contextKeyService);\n\t\tthis.compressedFocusFirstContext = ExplorerCompressedFirstFocusContext.bindTo(contextKeyService);\n\t\tthis.compressedFocusLastContext = ExplorerCompressedLastFocusContext.bindTo(contextKeyService);\n\t\tthis.viewHasSomeCollapsibleRootItem = ViewHasSomeCollapsibleRootItemContext.bindTo(contextKeyService);\n\t\tthis.viewVisibleContextKey = FoldersViewVisibleContext.bindTo(contextKeyService);\n\n\n\t\tthis.explorerService.registerView(this);\n\t}\n\n\tget autoReveal() {\n\t\treturn this._autoReveal;\n\t}\n\n\tset autoReveal(autoReveal: boolean | 'force' | 'focusNoScroll') {\n\t\tthis._autoReveal = autoReveal;\n\t}\n\n\tget name(): string {\n\t\treturn this.labelService.getWorkspaceLabel(this.contextService.getWorkspace());\n\t}\n\n\toverride get title(): string {\n\t\treturn this.name;\n\t}\n\n\toverride set title(_: string) {\n\t\t// noop\n\t}\n\n\toverride setVisible(visible: boolean): void {\n\t\tthis.viewVisibleContextKey.set(visible);\n\t\tsuper.setVisible(visible);\n\t}\n\n\t@memoize private get fileCopiedContextKey(): IContextKey<boolean> {\n\t\treturn FileCopiedContext.bindTo(this.contextKeyService);\n\t}\n\n\t@memoize private get resourceCutContextKey(): IContextKey<boolean> {\n\t\treturn ExplorerResourceCut.bindTo(this.contextKeyService);\n\t}\n\n\t// Split view methods\n\n\tprotected override renderHeader(container: HTMLElement): void {\n\t\tsuper.renderHeader(container);\n\n\t\t// Expand on drag over\n\t\tthis.dragHandler = new DelayedDragHandler(container, () => this.setExpanded(true));\n\n\t\tconst titleElement = container.querySelector('.title') as HTMLElement;\n\t\tconst setHeader = () => {\n\t\t\ttitleElement.textContent = this.name;\n\t\t\tthis.updateTitle(this.name);\n\t\t\tthis.ariaHeaderLabel = nls.localize('explorerSection', \"Explorer Section: {0}\", this.name);\n\t\t\ttitleElement.setAttribute('aria-label', this.ariaHeaderLabel);\n\t\t};\n\n\t\tthis._register(this.contextService.onDidChangeWorkspaceName(setHeader));\n\t\tthis._register(this.labelService.onDidChangeFormatters(setHeader));\n\t\tsetHeader();\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(height, width);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.container = container;\n\t\tthis.treeContainer = DOM.append(container, DOM.$('.explorer-folders-view'));\n\n\t\tthis.createTree(this.treeContainer);\n\n\t\tthis._register(this.labelService.onDidChangeFormatters(() => {\n\t\t\tthis._onDidChangeTitleArea.fire();\n\t\t}));\n\n\t\t// Update configuration\n\t\tthis.onConfigurationUpdated(undefined);\n\n\t\t// When the explorer viewer is loaded, listen to changes to the editor input\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => {\n\t\t\tthis.selectActiveFile();\n\t\t}));\n\n\t\t// Also handle configuration updates\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n\n\t\tthis._register(this.onDidChangeBodyVisibility(async visible => {\n\t\t\tif (visible) {\n\t\t\t\t// Always refresh explorer when it becomes visible to compensate for missing file events #126817\n\t\t\t\tawait this.setTreeInput();\n\t\t\t\t// Update the collapse / expand  button state\n\t\t\t\tthis.updateAnyCollapsedContext();\n\t\t\t\t// Find resource to focus from active editor input if set\n\t\t\t\tthis.selectActiveFile(true);\n\t\t\t}\n\t\t}));\n\n\t\t// Support for paste of files into explorer\n\t\tthis._register(DOM.addDisposableListener(DOM.getWindow(this.container), DOM.EventType.PASTE, async event => {\n\t\t\tif (!this.hasFocus() || this.readonlyContext.get()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.clipboardData?.files?.length) {\n\t\t\t\tawait this.commandService.executeCommand('filesExplorer.paste', event.clipboardData?.files);\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.tree.domFocus();\n\n\t\tif (this.tree.getFocusedPart() === AbstractTreePart.Tree) {\n\t\t\tconst focused = this.tree.getFocus();\n\t\t\tif (focused.length === 1 && this._autoReveal) {\n\t\t\t\tthis.tree.reveal(focused[0], 0.5);\n\t\t\t}\n\t\t}\n\t}\n\n\thasFocus(): boolean {\n\t\treturn DOM.isAncestorOfActiveElement(this.container);\n\t}\n\n\tgetFocus(): ExplorerItem[] {\n\t\treturn this.tree.getFocus();\n\t}\n\n\tfocusNext(): void {\n\t\tthis.tree.focusNext();\n\t}\n\n\tfocusLast(): void {\n\t\tthis.tree.focusLast();\n\t}\n\n\tgetContext(respectMultiSelection: boolean): ExplorerItem[] {\n\t\tconst focusedItems = this.tree.getFocusedPart() === AbstractTreePart.StickyScroll ?\n\t\t\tthis.tree.getStickyScrollFocus() :\n\t\t\tthis.tree.getFocus();\n\t\treturn getContext(focusedItems, this.tree.getSelection(), respectMultiSelection, this.renderer);\n\t}\n\n\tisItemVisible(item: ExplorerItem): boolean {\n\t\t// If filter is undefined it means the tree hasn't been rendered yet, so nothing is visible\n\t\tif (!this.filter) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.filter.filter(item, TreeVisibility.Visible);\n\t}\n\n\tisItemCollapsed(item: ExplorerItem): boolean {\n\t\treturn this.tree.isCollapsed(item);\n\t}\n\n\tasync setEditable(stat: ExplorerItem, isEditing: boolean): Promise<void> {\n\t\tif (isEditing) {\n\t\t\tthis.horizontalScrolling = this.tree.options.horizontalScrolling;\n\n\t\t\tif (this.horizontalScrolling) {\n\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: false });\n\t\t\t}\n\n\t\t\tawait this.tree.expand(stat.parent!);\n\t\t} else {\n\t\t\tif (this.horizontalScrolling !== undefined) {\n\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: this.horizontalScrolling });\n\t\t\t}\n\n\t\t\tthis.horizontalScrolling = undefined;\n\t\t\tthis.treeContainer.classList.remove('highlight');\n\t\t}\n\n\t\tawait this.refresh(false, stat.parent, false);\n\n\t\tif (isEditing) {\n\t\t\tthis.treeContainer.classList.add('highlight');\n\t\t\tthis.tree.reveal(stat);\n\t\t} else {\n\t\t\tthis.tree.domFocus();\n\t\t}\n\t}\n\n\tprivate async selectActiveFile(reveal = this._autoReveal): Promise<void> {\n\t\tif (this._autoReveal) {\n\t\t\tconst activeFile = EditorResourceAccessor.getCanonicalUri(this.editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\n\t\t\tif (activeFile) {\n\t\t\t\tconst focus = this.tree.getFocus();\n\t\t\t\tconst selection = this.tree.getSelection();\n\t\t\t\tif (focus.length === 1 && this.uriIdentityService.extUri.isEqual(focus[0].resource, activeFile) && selection.length === 1 && this.uriIdentityService.extUri.isEqual(selection[0].resource, activeFile)) {\n\t\t\t\t\t// No action needed, active file is already focused and selected\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn this.explorerService.select(activeFile, reveal);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createTree(container: HTMLElement): void {\n\t\tthis.filter = this.instantiationService.createInstance(FilesFilter);\n\t\tthis._register(this.filter);\n\t\tthis._register(this.filter.onDidChange(() => this.refresh(true)));\n\t\tconst explorerLabels = this.instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility });\n\t\tthis._register(explorerLabels);\n\n\t\tconst updateWidth = (stat: ExplorerItem) => this.tree.updateWidth(stat);\n\t\tthis.renderer = this.instantiationService.createInstance(FilesRenderer, container, explorerLabels, updateWidth);\n\t\tthis._register(this.renderer);\n\n\t\tthis._register(createFileIconThemableTreeContainerScope(container, this.themeService));\n\n\t\tconst isCompressionEnabled = () => this.configurationService.getValue<boolean>('explorer.compactFolders');\n\n\t\tconst getFileNestingSettings = (item?: ExplorerItem) => this.configurationService.getValue<IFilesConfiguration>({ resource: item?.root.resource }).explorer.fileNesting;\n\n\t\tthis.tree = <WorkbenchCompressibleAsyncDataTree<ExplorerItem | ExplorerItem[], ExplorerItem, FuzzyScore>>this.instantiationService.createInstance(WorkbenchCompressibleAsyncDataTree, 'FileExplorer', container, new ExplorerDelegate(), new ExplorerCompressionDelegate(), [this.renderer],\n\t\t\tthis.instantiationService.createInstance(ExplorerDataSource, this.filter), {\n\t\t\tcompressionEnabled: isCompressionEnabled(),\n\t\t\taccessibilityProvider: this.renderer,\n\t\t\tidentityProvider,\n\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\tgetKeyboardNavigationLabel: (stat: ExplorerItem) => {\n\t\t\t\t\tif (this.explorerService.isEditable(stat)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn stat.name;\n\t\t\t\t},\n\t\t\t\tgetCompressedNodeKeyboardNavigationLabel: (stats: ExplorerItem[]) => {\n\t\t\t\t\tif (stats.some(stat => this.explorerService.isEditable(stat))) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn stats.map(stat => stat.name).join('/');\n\t\t\t\t}\n\t\t\t},\n\t\t\tmultipleSelectionSupport: true,\n\t\t\tfilter: this.filter,\n\t\t\tsorter: this.instantiationService.createInstance(FileSorter),\n\t\t\tdnd: this.instantiationService.createInstance(FileDragAndDrop, (item) => this.isItemCollapsed(item)),\n\t\t\tcollapseByDefault: (e) => {\n\t\t\t\tif (e instanceof ExplorerItem) {\n\t\t\t\t\tif (e.hasNests && getFileNestingSettings(e).expand) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tautoExpandSingleChildren: true,\n\t\t\texpandOnlyOnTwistieClick: (e: unknown) => {\n\t\t\t\tif (e instanceof ExplorerItem) {\n\t\t\t\t\tif (e.hasNests) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.configurationService.getValue<'singleClick' | 'doubleClick'>('workbench.tree.expandMode') === 'doubleClick') {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tpaddingBottom: ExplorerDelegate.ITEM_HEIGHT,\n\t\t\toverrideStyles: this.getLocationBasedColors().listOverrideStyles\n\t\t});\n\t\tthis._register(this.tree);\n\t\tthis._register(this.themeService.onDidColorThemeChange(() => this.tree.rerender()));\n\n\t\t// Bind configuration\n\t\tconst onDidChangeCompressionConfiguration = Event.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('explorer.compactFolders'));\n\t\tthis._register(onDidChangeCompressionConfiguration(_ => this.tree.updateOptions({ compressionEnabled: isCompressionEnabled() })));\n\n\t\t// Bind context keys\n\t\tFilesExplorerFocusedContext.bindTo(this.tree.contextKeyService);\n\t\tExplorerFocusedContext.bindTo(this.tree.contextKeyService);\n\n\t\t// Update resource context based on focused element\n\t\tthis._register(this.tree.onDidChangeFocus(e => this.onFocusChanged(e.elements)));\n\t\tthis.onFocusChanged([]);\n\t\t// Open when selecting via keyboard\n\t\tthis._register(this.tree.onDidOpen(async e => {\n\t\t\tconst element = e.element;\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Do not react if the user is expanding selection via keyboard.\n\t\t\t// Check if the item was previously also selected, if yes the user is simply expanding / collapsing current selection #66589.\n\t\t\tconst shiftDown = DOM.isKeyboardEvent(e.browserEvent) && e.browserEvent.shiftKey;\n\t\t\tif (!shiftDown) {\n\t\t\t\tif (element.isDirectory || this.explorerService.isEditable(undefined)) {\n\t\t\t\t\t// Do not react if user is clicking on explorer items while some are being edited #70276\n\t\t\t\t\t// Do not react if clicking on directories\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: 'workbench.files.openFile', from: 'explorer' });\n\t\t\t\ttry {\n\t\t\t\t\tthis.delegate?.willOpenElement(e.browserEvent);\n\t\t\t\t\tawait this.editorService.openEditor({ resource: element.resource, options: { preserveFocus: e.editorOptions.preserveFocus, pinned: e.editorOptions.pinned, source: EditorOpenSource.USER } }, e.sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n\t\t\t\t} finally {\n\t\t\t\t\tthis.delegate?.didOpenElement();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\n\t\tthis._register(this.tree.onDidScroll(async e => {\n\t\t\tconst editable = this.explorerService.getEditable();\n\t\t\tif (e.scrollTopChanged && editable && this.tree.getRelativeTop(editable.stat) === null) {\n\t\t\t\tawait editable.data.onFinish('', false);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.tree.onDidChangeCollapseState(e => {\n\t\t\tconst element = e.node.element?.element;\n\t\t\tif (element) {\n\t\t\t\tconst navigationControllers = this.renderer.getCompressedNavigationController(element instanceof Array ? element[0] : element);\n\t\t\t\tnavigationControllers?.forEach(controller => controller.updateCollapsed(e.node.collapsed));\n\t\t\t}\n\t\t\t// Update showing expand / collapse button\n\t\t\tthis.updateAnyCollapsedContext();\n\t\t}));\n\n\t\tthis.updateAnyCollapsedContext();\n\n\t\tthis._register(this.tree.onMouseDblClick(e => {\n\t\t\t// If empty space is clicked, and not scrolling by page enabled #173261\n\t\t\tconst scrollingByPage = this.configurationService.getValue<boolean>('workbench.list.scrollByPage');\n\t\t\tif (e.element === null && !scrollingByPage) {\n\t\t\t\t// click in empty area -> create a new file #116676\n\t\t\t\tthis.commandService.executeCommand(NEW_FILE_COMMAND_ID);\n\t\t\t}\n\t\t}));\n\n\t\t// save view state\n\t\tthis._register(this.storageService.onWillSaveState(() => {\n\t\t\tthis.storeTreeViewState();\n\t\t}));\n\t}\n\n\t// React on events\n\n\tprivate onConfigurationUpdated(event: IConfigurationChangeEvent | undefined): void {\n\t\tif (!event || event.affectsConfiguration('explorer.autoReveal')) {\n\t\t\tconst configuration = this.configurationService.getValue<IFilesConfiguration>();\n\t\t\tthis._autoReveal = configuration?.explorer?.autoReveal;\n\t\t}\n\n\t\t// Push down config updates to components of viewer\n\t\tif (event && (event.affectsConfiguration('explorer.decorations.colors') || event.affectsConfiguration('explorer.decorations.badges'))) {\n\t\t\tthis.refresh(true);\n\t\t}\n\t}\n\n\tprivate storeTreeViewState() {\n\t\tthis.storageService.store(ExplorerView.TREE_VIEW_STATE_STORAGE_KEY, JSON.stringify(this.tree.getViewState()), StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\tprivate setContextKeys(stat: ExplorerItem | null | undefined): void {\n\t\tconst folders = this.contextService.getWorkspace().folders;\n\t\tconst resource = stat ? stat.resource : folders[folders.length - 1].uri;\n\t\tstat = stat || this.explorerService.findClosest(resource);\n\t\tthis.resourceContext.set(resource);\n\t\tthis.folderContext.set(!!stat && stat.isDirectory);\n\t\tthis.readonlyContext.set(!!stat && !!stat.isReadonly);\n\t\tthis.rootContext.set(!!stat && stat.isRoot);\n\n\t\tif (resource) {\n\t\t\tconst overrides = resource ? this.editorResolverService.getEditors(resource).map(editor => editor.id) : [];\n\t\t\tthis.availableEditorIdsContext.set(overrides.join(','));\n\t\t} else {\n\t\t\tthis.availableEditorIdsContext.reset();\n\t\t}\n\t}\n\n\tprivate async onContextMenu(e: ITreeContextMenuEvent<ExplorerItem>): Promise<void> {\n\t\tif (DOM.isEditableElement(e.browserEvent.target as HTMLElement)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst stat = e.element;\n\t\tlet anchor = e.anchor;\n\n\t\t// Adjust for compressed folders (except when mouse is used)\n\t\tif (DOM.isHTMLElement(anchor)) {\n\t\t\tif (stat) {\n\t\t\t\tconst controllers = this.renderer.getCompressedNavigationController(stat);\n\n\t\t\t\tif (controllers && controllers.length > 0) {\n\t\t\t\t\tif (DOM.isKeyboardEvent(e.browserEvent) || isCompressedFolderName(e.browserEvent.target)) {\n\t\t\t\t\t\tanchor = controllers[0].labels[controllers[0].index];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontrollers.forEach(controller => controller.last());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update dynamic contexts\n\t\tthis.fileCopiedContextKey.set(await this.clipboardService.hasResources());\n\t\tthis.setContextKeys(stat);\n\n\t\tconst selection = this.tree.getSelection();\n\n\t\tconst roots = this.explorerService.roots; // If the click is outside of the elements pass the root resource if there is only one root. If there are multiple roots pass empty object.\n\t\tlet arg: URI | {};\n\t\tif (stat instanceof ExplorerItem) {\n\t\t\tconst compressedControllers = this.renderer.getCompressedNavigationController(stat);\n\t\t\targ = compressedControllers && compressedControllers.length ? compressedControllers[0].current.resource : stat.resource;\n\t\t} else {\n\t\t\targ = roots.length === 1 ? roots[0].resource : {};\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tmenuId: MenuId.ExplorerContext,\n\t\t\tmenuActionOptions: { arg, shouldForwardArgs: true },\n\t\t\tcontextKeyService: this.tree.contextKeyService,\n\t\t\tgetAnchor: () => anchor,\n\t\t\tonHide: (wasCancelled?: boolean) => {\n\t\t\t\tif (wasCancelled) {\n\t\t\t\t\tthis.tree.domFocus();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetActionsContext: () => stat && selection && selection.indexOf(stat) >= 0\n\t\t\t\t? selection.map((fs: ExplorerItem) => fs.resource)\n\t\t\t\t: stat instanceof ExplorerItem ? [stat.resource] : []\n\t\t});\n\t}\n\n\tprivate onFocusChanged(elements: readonly ExplorerItem[]): void {\n\t\tconst stat = elements && elements.length ? elements[0] : undefined;\n\t\tthis.setContextKeys(stat);\n\n\t\tif (stat) {\n\t\t\tconst enableTrash = Boolean(this.configurationService.getValue<IFilesConfiguration>().files?.enableTrash);\n\t\t\tconst hasCapability = this.fileService.hasCapability(stat.resource, FileSystemProviderCapabilities.Trash);\n\t\t\tthis.resourceMoveableToTrash.set(enableTrash && hasCapability);\n\t\t} else {\n\t\t\tthis.resourceMoveableToTrash.reset();\n\t\t}\n\n\t\tconst compressedNavigationControllers = stat && this.renderer.getCompressedNavigationController(stat);\n\n\t\tif (!compressedNavigationControllers) {\n\t\t\tthis.compressedFocusContext.set(false);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.compressedFocusContext.set(true);\n\t\tcompressedNavigationControllers.forEach(controller => {\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\t// General methods\n\n\t/**\n\t * Refresh the contents of the explorer to get up to date data from the disk about the file structure.\n\t * If the item is passed we refresh only that level of the tree, otherwise we do a full refresh.\n\t */\n\trefresh(recursive: boolean, item?: ExplorerItem, cancelEditing: boolean = true): Promise<void> {\n\t\tif (!this.tree || !this.isBodyVisible() || (item && !this.tree.hasNode(item))) {\n\t\t\t// Tree node doesn't exist yet, when it becomes visible we will refresh\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (cancelEditing && this.explorerService.isEditable(undefined)) {\n\t\t\tthis.tree.domFocus();\n\t\t}\n\n\t\tconst toRefresh = item || this.tree.getInput();\n\t\treturn this.tree.updateChildren(toRefresh, recursive, !!item);\n\t}\n\n\toverride getOptimalWidth(): number {\n\t\tconst parentNode = this.tree.getHTMLElement();\n\t\tconst childNodes = ([] as HTMLElement[]).slice.call(parentNode.querySelectorAll('.explorer-item .label-name')); // select all file labels\n\n\t\treturn DOM.getLargestChildWidth(parentNode, childNodes);\n\t}\n\n\tasync setTreeInput(): Promise<void> {\n\t\tif (!this.isBodyVisible()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Wait for the last execution to complete before executing\n\t\tif (this.setTreeInputPromise) {\n\t\t\tawait this.setTreeInputPromise;\n\t\t}\n\n\t\tconst initialInputSetup = !this.tree.getInput();\n\t\tif (initialInputSetup) {\n\t\t\tperf.mark('code/willResolveExplorer');\n\t\t}\n\t\tconst roots = this.explorerService.roots;\n\t\tlet input: ExplorerItem | ExplorerItem[] = roots[0];\n\t\tif (this.contextService.getWorkbenchState() !== WorkbenchState.FOLDER || roots[0].error) {\n\t\t\t// Display roots only when multi folder workspace\n\t\t\tinput = roots;\n\t\t}\n\n\t\tlet viewState: IAsyncDataTreeViewState | undefined;\n\t\tif (this.tree && this.tree.getInput()) {\n\t\t\tviewState = this.tree.getViewState();\n\t\t} else {\n\t\t\tconst rawViewState = this.storageService.get(ExplorerView.TREE_VIEW_STATE_STORAGE_KEY, StorageScope.WORKSPACE);\n\t\t\tif (rawViewState) {\n\t\t\t\tviewState = JSON.parse(rawViewState);\n\t\t\t}\n\t\t}\n\n\t\tconst previousInput = this.tree.getInput();\n\t\tconst promise = this.setTreeInputPromise = this.tree.setInput(input, viewState).then(async () => {\n\t\t\tif (Array.isArray(input)) {\n\t\t\t\tif (!viewState || previousInput instanceof ExplorerItem) {\n\t\t\t\t\t// There is no view state for this workspace (we transitioned from a folder workspace?), expand up to five roots.\n\t\t\t\t\t// If there are many roots in a workspace, expanding them all would can cause performance issues #176226\n\t\t\t\t\tfor (let i = 0; i < Math.min(input.length, 5); i++) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.tree.expand(input[i]);\n\t\t\t\t\t\t} catch (e) { }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Reloaded or transitioned from an empty workspace, but only have a single folder in the workspace.\n\t\t\t\tif (!previousInput && input.length === 1 && this.configurationService.getValue<IFilesConfiguration>().explorer.expandSingleFolderWorkspaces) {\n\t\t\t\t\tawait this.tree.expand(input[0]).catch(() => { });\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(previousInput)) {\n\t\t\t\t\tconst previousRoots = new ResourceMap<true>();\n\t\t\t\t\tpreviousInput.forEach(previousRoot => previousRoots.set(previousRoot.resource, true));\n\n\t\t\t\t\t// Roots added to the explorer -> expand them.\n\t\t\t\t\tawait Promise.all(input.map(async item => {\n\t\t\t\t\t\tif (!previousRoots.has(item.resource)) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.tree.expand(item);\n\t\t\t\t\t\t\t} catch (e) { }\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (initialInputSetup) {\n\t\t\t\tperf.mark('code/didResolveExplorer');\n\t\t\t}\n\t\t});\n\n\t\tthis.progressService.withProgress({\n\t\t\tlocation: ProgressLocation.Explorer,\n\t\t\tdelay: this.layoutService.isRestored() ? 800 : 1500 // reduce progress visibility when still restoring\n\t\t}, _progress => promise);\n\n\t\tawait promise;\n\t\tif (!this.decorationsProvider) {\n\t\t\tthis.decorationsProvider = new ExplorerDecorationsProvider(this.explorerService, this.contextService);\n\t\t\tthis._register(this.decorationService.registerDecorationsProvider(this.decorationsProvider));\n\t\t}\n\t}\n\n\tpublic async selectResource(resource: URI | undefined, reveal = this._autoReveal, retry = 0): Promise<void> {\n\t\t// do no retry more than once to prevent infinite loops in cases of inconsistent model\n\t\tif (retry === 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!resource || !this.isBodyVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If something is refreshing the explorer, we must await it or else a selection race condition can occur\n\t\tif (this.setTreeInputPromise) {\n\t\t\tawait this.setTreeInputPromise;\n\t\t}\n\n\t\t// Expand all stats in the parent chain.\n\t\tlet item: ExplorerItem | null = this.explorerService.findClosestRoot(resource);\n\n\t\twhile (item && item.resource.toString() !== resource.toString()) {\n\t\t\ttry {\n\t\t\t\tawait this.tree.expand(item);\n\t\t\t} catch (e) {\n\t\t\t\treturn this.selectResource(resource, reveal, retry + 1);\n\t\t\t}\n\t\t\tif (!item.children.size) {\n\t\t\t\titem = null;\n\t\t\t} else {\n\t\t\t\tfor (const child of item.children.values()) {\n\t\t\t\t\tif (this.uriIdentityService.extUri.isEqualOrParent(resource, child.resource)) {\n\t\t\t\t\t\titem = child;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\titem = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (item) {\n\t\t\tif (item === this.tree.getInput()) {\n\t\t\t\tthis.tree.setFocus([]);\n\t\t\t\tthis.tree.setSelection([]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// We must expand the nest to have it be populated in the tree\n\t\t\t\tif (item.nestedParent) {\n\t\t\t\t\tawait this.tree.expand(item.nestedParent);\n\t\t\t\t}\n\n\t\t\t\tif ((reveal === true || reveal === 'force') && this.tree.getRelativeTop(item) === null) {\n\t\t\t\t\t// Don't scroll to the item if it's already visible, or if set not to.\n\t\t\t\t\tthis.tree.reveal(item, 0.5);\n\t\t\t\t}\n\n\t\t\t\tthis.tree.setFocus([item]);\n\t\t\t\tthis.tree.setSelection([item]);\n\t\t\t} catch (e) {\n\t\t\t\t// Element might not be in the tree, try again and silently fail\n\t\t\t\treturn this.selectResource(resource, reveal, retry + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\titemsCopied(stats: ExplorerItem[], cut: boolean, previousCut: ExplorerItem[] | undefined): void {\n\t\tthis.fileCopiedContextKey.set(stats.length > 0);\n\t\tthis.resourceCutContextKey.set(cut && stats.length > 0);\n\t\tpreviousCut?.forEach(item => this.tree.rerender(item));\n\t\tif (cut) {\n\t\t\tstats.forEach(s => this.tree.rerender(s));\n\t\t}\n\t}\n\n\texpandAll(): void {\n\t\tif (this.explorerService.isEditable(undefined)) {\n\t\t\tthis.tree.domFocus();\n\t\t}\n\n\t\tthis.tree.expandAll();\n\t}\n\n\tcollapseAll(): void {\n\t\tif (this.explorerService.isEditable(undefined)) {\n\t\t\tthis.tree.domFocus();\n\t\t}\n\n\t\tconst treeInput = this.tree.getInput();\n\t\tif (Array.isArray(treeInput)) {\n\t\t\tif (hasExpandedRootChild(this.tree, treeInput)) {\n\t\t\t\ttreeInput.forEach(folder => {\n\t\t\t\t\tfolder.children.forEach(child => this.tree.hasNode(child) && this.tree.collapse(child, true));\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.tree.collapseAll();\n\t}\n\n\tpreviousCompressedStat(): void {\n\t\tconst focused = this.tree.getFocus();\n\t\tif (!focused.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst compressedNavigationControllers = this.renderer.getCompressedNavigationController(focused[0])!;\n\t\tcompressedNavigationControllers.forEach(controller => {\n\t\t\tcontroller.previous();\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\tnextCompressedStat(): void {\n\t\tconst focused = this.tree.getFocus();\n\t\tif (!focused.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst compressedNavigationControllers = this.renderer.getCompressedNavigationController(focused[0])!;\n\t\tcompressedNavigationControllers.forEach(controller => {\n\t\t\tcontroller.next();\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\tfirstCompressedStat(): void {\n\t\tconst focused = this.tree.getFocus();\n\t\tif (!focused.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst compressedNavigationControllers = this.renderer.getCompressedNavigationController(focused[0])!;\n\t\tcompressedNavigationControllers.forEach(controller => {\n\t\t\tcontroller.first();\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\tlastCompressedStat(): void {\n\t\tconst focused = this.tree.getFocus();\n\t\tif (!focused.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst compressedNavigationControllers = this.renderer.getCompressedNavigationController(focused[0])!;\n\t\tcompressedNavigationControllers.forEach(controller => {\n\t\t\tcontroller.last();\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\tprivate updateCompressedNavigationContextKeys(controller: ICompressedNavigationController): void {\n\t\tthis.compressedFocusFirstContext.set(controller.index === 0);\n\t\tthis.compressedFocusLastContext.set(controller.index === controller.count - 1);\n\t}\n\n\tprivate updateAnyCollapsedContext(): void {\n\t\tconst treeInput = this.tree.getInput();\n\t\tif (treeInput === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst treeInputArray = Array.isArray(treeInput) ? treeInput : Array.from(treeInput.children.values());\n\t\t// Has collapsible root when anything is expanded\n\t\tthis.viewHasSomeCollapsibleRootItem.set(hasExpandedNode(this.tree, treeInputArray));\n\t\t// synchronize state to cache\n\t\tthis.storeTreeViewState();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.dragHandler?.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nexport function createFileIconThemableTreeContainerScope(container: HTMLElement, themeService: IThemeService): IDisposable {\n\tcontainer.classList.add('file-icon-themable-tree');\n\tcontainer.classList.add('show-file-icons');\n\n\tconst onDidChangeFileIconTheme = (theme: IFileIconTheme) => {\n\t\tcontainer.classList.toggle('align-icons-and-twisties', theme.hasFileIcons && !theme.hasFolderIcons);\n\t\tcontainer.classList.toggle('hide-arrows', theme.hidesExplorerArrows === true);\n\t};\n\n\tonDidChangeFileIconTheme(themeService.getFileIconTheme());\n\treturn themeService.onDidFileIconThemeChange(onDidChangeFileIconTheme);\n}\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.files.action.createFileFromExplorer',\n\t\t\ttitle: nls.localize('createNewFile', \"New File...\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.newFile,\n\t\t\tprecondition: ExplorerResourceNotReadonlyContext,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.equals('view', VIEW_ID),\n\t\t\t\torder: 10\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tcommandService.executeCommand(NEW_FILE_COMMAND_ID);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.files.action.createFolderFromExplorer',\n\t\t\ttitle: nls.localize('createNewFolder', \"New Folder...\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.newFolder,\n\t\t\tprecondition: ExplorerResourceNotReadonlyContext,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.equals('view', VIEW_ID),\n\t\t\t\torder: 20\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tcommandService.executeCommand(NEW_FOLDER_COMMAND_ID);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.files.action.refreshFilesExplorer',\n\t\t\ttitle: nls.localize2('refreshExplorer', \"Refresh Explorer\"),\n\t\t\tf1: true,\n\t\t\ticon: Codicon.refresh,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.equals('view', VIEW_ID),\n\t\t\t\torder: 30\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('refreshExplorerMetadata', \"Forces a refresh of the Explorer.\")\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tawait viewsService.openView(VIEW_ID);\n\t\tawait explorerService.refresh();\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.files.action.collapseExplorerFolders',\n\t\t\ttitle: nls.localize2('collapseExplorerFolders', \"Collapse Folders in Explorer\"),\n\t\t\tf1: true,\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.equals('view', VIEW_ID),\n\t\t\t\torder: 40\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('collapseExplorerFoldersMetadata', \"Folds all folders in the Explorer.\")\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = viewsService.getViewWithId(VIEW_ID);\n\t\tif (view !== null) {\n\t\t\tconst explorerView = view as ExplorerView;\n\t\t\texplorerView.collapseAll();\n\t\t}\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
