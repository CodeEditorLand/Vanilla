{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/views/explorerView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DelayedDragHandler } from \"../../../../../base/browser/dnd.js\";\nimport * as DOM from \"../../../../../base/browser/dom.js\";\nimport { AbstractTreePart } from \"../../../../../base/browser/ui/tree/abstractTree.js\";\nimport type { IAsyncDataTreeViewState } from \"../../../../../base/browser/ui/tree/asyncDataTree.js\";\nimport {\n\ttype ITreeContextMenuEvent,\n\tTreeVisibility,\n} from \"../../../../../base/browser/ui/tree/tree.js\";\nimport type {\n\tWorkbenchActionExecutedClassification,\n\tWorkbenchActionExecutedEvent,\n} from \"../../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport { memoize } from \"../../../../../base/common/decorators.js\";\nimport { Event } from \"../../../../../base/common/event.js\";\nimport type { FuzzyScore } from \"../../../../../base/common/filters.js\";\nimport type { IDisposable } from \"../../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../../base/common/map.js\";\nimport * as perf from \"../../../../../base/common/performance.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport * as nls from \"../../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../../../platform/clipboard/common/clipboardService.js\";\nimport { ICommandService } from \"../../../../../platform/commands/common/commands.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../../platform/contextview/browser/contextView.js\";\nimport { EditorOpenSource } from \"../../../../../platform/editor/common/editor.js\";\nimport {\n\tFileSystemProviderCapabilities,\n\tIFileService,\n} from \"../../../../../platform/files/common/files.js\";\nimport { IHoverService } from \"../../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../../platform/keybinding/common/keybinding.js\";\nimport { ILabelService } from \"../../../../../platform/label/common/label.js\";\nimport { WorkbenchCompressibleAsyncDataTree } from \"../../../../../platform/list/browser/listService.js\";\nimport { IOpenerService } from \"../../../../../platform/opener/common/opener.js\";\nimport {\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../../platform/progress/common/progress.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype IFileIconTheme,\n\tIThemeService,\n} from \"../../../../../platform/theme/common/themeService.js\";\nimport { IUriIdentityService } from \"../../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n} from \"../../../../../platform/workspace/common/workspace.js\";\nimport { ResourceLabels } from \"../../../../browser/labels.js\";\nimport {\n\ttype IViewPaneOptions,\n\tViewPane,\n} from \"../../../../browser/parts/views/viewPane.js\";\nimport { ResourceContextKey } from \"../../../../common/contextkeys.js\";\nimport {\n\tEditorResourceAccessor,\n\tSideBySideEditor,\n} from \"../../../../common/editor.js\";\nimport { IViewDescriptorService } from \"../../../../common/views.js\";\nimport { IDecorationsService } from \"../../../../services/decorations/common/decorations.js\";\nimport { IEditorResolverService } from \"../../../../services/editor/common/editorResolverService.js\";\nimport {\n\tACTIVE_GROUP,\n\tIEditorService,\n\tSIDE_GROUP,\n} from \"../../../../services/editor/common/editorService.js\";\nimport { IWorkbenchLayoutService } from \"../../../../services/layout/browser/layoutService.js\";\nimport type { IWorkbenchThemeService } from \"../../../../services/themes/common/workbenchThemeService.js\";\nimport { IViewsService } from \"../../../../services/views/common/viewsService.js\";\nimport { ExplorerItem, NewExplorerItem } from \"../../common/explorerModel.js\";\nimport {\n\tExplorerCompressedFirstFocusContext,\n\tExplorerCompressedFocusContext,\n\tExplorerCompressedLastFocusContext,\n\tExplorerFocusedContext,\n\tExplorerFolderContext,\n\tExplorerResourceAvailableEditorIdsContext,\n\tExplorerResourceCut,\n\tExplorerResourceMoveableToTrash,\n\tExplorerResourceNotReadonlyContext,\n\tExplorerResourceReadonlyContext,\n\tExplorerRootContext,\n\tFilesExplorerFocusedContext,\n\tFoldersViewVisibleContext,\n\ttype IFilesConfiguration,\n\tVIEW_ID,\n\tViewHasSomeCollapsibleRootItemContext,\n} from \"../../common/files.js\";\nimport {\n\tFileCopiedContext,\n\tNEW_FILE_COMMAND_ID,\n\tNEW_FOLDER_COMMAND_ID,\n} from \"../fileActions.js\";\nimport { IExplorerService, type IExplorerView } from \"../files.js\";\nimport { ExplorerDecorationsProvider } from \"./explorerDecorationsProvider.js\";\nimport {\n\tExplorerCompressionDelegate,\n\tExplorerDataSource,\n\tExplorerDelegate,\n\tFileDragAndDrop,\n\tFileSorter,\n\tFilesFilter,\n\tFilesRenderer,\n\ttype ICompressedNavigationController,\n\tisCompressedFolderName,\n} from \"./explorerViewer.js\";\n\nfunction hasExpandedRootChild(\n\ttree: WorkbenchCompressibleAsyncDataTree<\n\t\tExplorerItem | ExplorerItem[],\n\t\tExplorerItem,\n\t\tFuzzyScore\n\t>,\n\ttreeInput: ExplorerItem[],\n): boolean {\n\tfor (const folder of treeInput) {\n\t\tif (tree.hasNode(folder) && !tree.isCollapsed(folder)) {\n\t\t\tfor (const [, child] of folder.children.entries()) {\n\t\t\t\tif (\n\t\t\t\t\ttree.hasNode(child) &&\n\t\t\t\t\ttree.isCollapsible(child) &&\n\t\t\t\t\t!tree.isCollapsed(child)\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Whether or not any of the nodes in the tree are expanded\n */\nfunction hasExpandedNode(\n\ttree: WorkbenchCompressibleAsyncDataTree<\n\t\tExplorerItem | ExplorerItem[],\n\t\tExplorerItem,\n\t\tFuzzyScore\n\t>,\n\ttreeInput: ExplorerItem[],\n): boolean {\n\tfor (const folder of treeInput) {\n\t\tif (tree.hasNode(folder) && !tree.isCollapsed(folder)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nconst identityProvider = {\n\tgetId: (stat: ExplorerItem) => {\n\t\tif (stat instanceof NewExplorerItem) {\n\t\t\treturn `new:${stat.getId()}`;\n\t\t}\n\n\t\treturn stat.getId();\n\t},\n};\n\nexport function getContext(\n\tfocus: ExplorerItem[],\n\tselection: ExplorerItem[],\n\trespectMultiSelection: boolean,\n\tcompressedNavigationControllerProvider: {\n\t\tgetCompressedNavigationController(\n\t\t\tstat: ExplorerItem,\n\t\t): ICompressedNavigationController[] | undefined;\n\t},\n): ExplorerItem[] {\n\tlet focusedStat: ExplorerItem | undefined;\n\tfocusedStat = focus.length ? focus[0] : undefined;\n\n\t// If we are respecting multi-select and we have a multi-selection we ignore focus as we want to act on the selection\n\tif (respectMultiSelection && selection.length > 1) {\n\t\tfocusedStat = undefined;\n\t}\n\n\tconst compressedNavigationControllers =\n\t\tfocusedStat &&\n\t\tcompressedNavigationControllerProvider.getCompressedNavigationController(\n\t\t\tfocusedStat,\n\t\t);\n\tconst compressedNavigationController =\n\t\tcompressedNavigationControllers &&\n\t\tcompressedNavigationControllers.length\n\t\t\t? compressedNavigationControllers[0]\n\t\t\t: undefined;\n\tfocusedStat = compressedNavigationController\n\t\t? compressedNavigationController.current\n\t\t: focusedStat;\n\n\tconst selectedStats: ExplorerItem[] = [];\n\n\tfor (const stat of selection) {\n\t\tconst controllers =\n\t\t\tcompressedNavigationControllerProvider.getCompressedNavigationController(\n\t\t\t\tstat,\n\t\t\t);\n\t\tconst controller =\n\t\t\tcontrollers && controllers.length ? controllers[0] : undefined;\n\t\tif (\n\t\t\tcontroller &&\n\t\t\tfocusedStat &&\n\t\t\tcontroller === compressedNavigationController\n\t\t) {\n\t\t\tif (stat === focusedStat) {\n\t\t\t\tselectedStats.push(stat);\n\t\t\t}\n\t\t\t// Ignore stats which are selected but are part of the same compact node as the focused stat\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (controller) {\n\t\t\tselectedStats.push(...controller.items);\n\t\t} else {\n\t\t\tselectedStats.push(stat);\n\t\t}\n\t}\n\tif (!focusedStat) {\n\t\tif (respectMultiSelection) {\n\t\t\treturn selectedStats;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tif (respectMultiSelection && selectedStats.indexOf(focusedStat) >= 0) {\n\t\treturn selectedStats;\n\t}\n\n\treturn [focusedStat];\n}\n\nexport interface IExplorerViewContainerDelegate {\n\twillOpenElement(event?: UIEvent): void;\n\tdidOpenElement(event?: UIEvent): void;\n}\n\nexport interface IExplorerViewPaneOptions extends IViewPaneOptions {\n\tdelegate: IExplorerViewContainerDelegate;\n}\n\nexport class ExplorerView extends ViewPane implements IExplorerView {\n\tstatic readonly TREE_VIEW_STATE_STORAGE_KEY: string =\n\t\t\"workbench.explorer.treeViewState\";\n\n\tprivate tree!: WorkbenchCompressibleAsyncDataTree<\n\t\tExplorerItem | ExplorerItem[],\n\t\tExplorerItem,\n\t\tFuzzyScore\n\t>;\n\tprivate filter!: FilesFilter;\n\n\tprivate resourceContext: ResourceContextKey;\n\tprivate folderContext: IContextKey<boolean>;\n\tprivate readonlyContext: IContextKey<boolean>;\n\tprivate availableEditorIdsContext: IContextKey<string>;\n\n\tprivate rootContext: IContextKey<boolean>;\n\tprivate resourceMoveableToTrash: IContextKey<boolean>;\n\n\tprivate renderer!: FilesRenderer;\n\n\tprivate treeContainer!: HTMLElement;\n\tprivate container!: HTMLElement;\n\tprivate compressedFocusContext: IContextKey<boolean>;\n\tprivate compressedFocusFirstContext: IContextKey<boolean>;\n\tprivate compressedFocusLastContext: IContextKey<boolean>;\n\n\tprivate viewHasSomeCollapsibleRootItem: IContextKey<boolean>;\n\tprivate viewVisibleContextKey: IContextKey<boolean>;\n\n\tprivate setTreeInputPromise: Promise<void> | undefined;\n\tprivate horizontalScrolling: boolean | undefined;\n\n\tprivate dragHandler!: DelayedDragHandler;\n\tprivate _autoReveal: boolean | \"force\" | \"focusNoScroll\" = false;\n\tprivate decorationsProvider: ExplorerDecorationsProvider | undefined;\n\tprivate readonly delegate: IExplorerViewContainerDelegate | undefined;\n\n\tconstructor(\n\t\toptions: IExplorerViewPaneOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorResolverService\n\t\tprivate readonly editorResolverService: IEditorResolverService,\n\t\t@IWorkbenchLayoutService\n\t\tprivate readonly layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IDecorationsService\n\t\tprivate readonly decorationService: IDecorationsService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IThemeService themeService: IWorkbenchThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IClipboardService private clipboardService: IClipboardService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t) {\n\t\tsuper(\n\t\t\toptions,\n\t\t\tkeybindingService,\n\t\t\tcontextMenuService,\n\t\t\tconfigurationService,\n\t\t\tcontextKeyService,\n\t\t\tviewDescriptorService,\n\t\t\tinstantiationService,\n\t\t\topenerService,\n\t\t\tthemeService,\n\t\t\ttelemetryService,\n\t\t\thoverService,\n\t\t);\n\n\t\tthis.delegate = options.delegate;\n\t\tthis.resourceContext =\n\t\t\tinstantiationService.createInstance(ResourceContextKey);\n\t\tthis._register(this.resourceContext);\n\n\t\tthis.folderContext = ExplorerFolderContext.bindTo(contextKeyService);\n\t\tthis.readonlyContext =\n\t\t\tExplorerResourceReadonlyContext.bindTo(contextKeyService);\n\t\tthis.availableEditorIdsContext =\n\t\t\tExplorerResourceAvailableEditorIdsContext.bindTo(contextKeyService);\n\t\tthis.rootContext = ExplorerRootContext.bindTo(contextKeyService);\n\t\tthis.resourceMoveableToTrash =\n\t\t\tExplorerResourceMoveableToTrash.bindTo(contextKeyService);\n\t\tthis.compressedFocusContext =\n\t\t\tExplorerCompressedFocusContext.bindTo(contextKeyService);\n\t\tthis.compressedFocusFirstContext =\n\t\t\tExplorerCompressedFirstFocusContext.bindTo(contextKeyService);\n\t\tthis.compressedFocusLastContext =\n\t\t\tExplorerCompressedLastFocusContext.bindTo(contextKeyService);\n\t\tthis.viewHasSomeCollapsibleRootItem =\n\t\t\tViewHasSomeCollapsibleRootItemContext.bindTo(contextKeyService);\n\t\tthis.viewVisibleContextKey =\n\t\t\tFoldersViewVisibleContext.bindTo(contextKeyService);\n\n\t\tthis.explorerService.registerView(this);\n\t}\n\n\tget autoReveal() {\n\t\treturn this._autoReveal;\n\t}\n\n\tset autoReveal(autoReveal: boolean | \"force\" | \"focusNoScroll\") {\n\t\tthis._autoReveal = autoReveal;\n\t}\n\n\tget name(): string {\n\t\treturn this.labelService.getWorkspaceLabel(\n\t\t\tthis.contextService.getWorkspace(),\n\t\t);\n\t}\n\n\toverride get title(): string {\n\t\treturn this.name;\n\t}\n\n\toverride set title(_: string) {\n\t\t// noop\n\t}\n\n\toverride setVisible(visible: boolean): void {\n\t\tthis.viewVisibleContextKey.set(visible);\n\t\tsuper.setVisible(visible);\n\t}\n\n\t@memoize private get fileCopiedContextKey(): IContextKey<boolean> {\n\t\treturn FileCopiedContext.bindTo(this.contextKeyService);\n\t}\n\n\t@memoize private get resourceCutContextKey(): IContextKey<boolean> {\n\t\treturn ExplorerResourceCut.bindTo(this.contextKeyService);\n\t}\n\n\t// Split view methods\n\n\tprotected override renderHeader(container: HTMLElement): void {\n\t\tsuper.renderHeader(container);\n\n\t\t// Expand on drag over\n\t\tthis.dragHandler = new DelayedDragHandler(container, () =>\n\t\t\tthis.setExpanded(true),\n\t\t);\n\n\t\tconst titleElement = container.querySelector(\".title\") as HTMLElement;\n\t\tconst setHeader = () => {\n\t\t\ttitleElement.textContent = this.name;\n\t\t\tthis.updateTitle(this.name);\n\t\t\tthis.ariaHeaderLabel = nls.localize(\n\t\t\t\t\"explorerSection\",\n\t\t\t\t\"Explorer Section: {0}\",\n\t\t\t\tthis.name,\n\t\t\t);\n\t\t\ttitleElement.setAttribute(\"aria-label\", this.ariaHeaderLabel);\n\t\t};\n\n\t\tthis._register(this.contextService.onDidChangeWorkspaceName(setHeader));\n\t\tthis._register(this.labelService.onDidChangeFormatters(setHeader));\n\t\tsetHeader();\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(height, width);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.container = container;\n\t\tthis.treeContainer = DOM.append(\n\t\t\tcontainer,\n\t\t\tDOM.$(\".explorer-folders-view\"),\n\t\t);\n\n\t\tthis.createTree(this.treeContainer);\n\n\t\tthis._register(\n\t\t\tthis.labelService.onDidChangeFormatters(() => {\n\t\t\t\tthis._onDidChangeTitleArea.fire();\n\t\t\t}),\n\t\t);\n\n\t\t// Update configuration\n\t\tthis.onConfigurationUpdated(undefined);\n\n\t\t// When the explorer viewer is loaded, listen to changes to the editor input\n\t\tthis._register(\n\t\t\tthis.editorService.onDidActiveEditorChange(() => {\n\t\t\t\tthis.selectActiveFile();\n\t\t\t}),\n\t\t);\n\n\t\t// Also handle configuration updates\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) =>\n\t\t\t\tthis.onConfigurationUpdated(e),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.onDidChangeBodyVisibility(async (visible) => {\n\t\t\t\tif (visible) {\n\t\t\t\t\t// Always refresh explorer when it becomes visible to compensate for missing file events #126817\n\t\t\t\t\tawait this.setTreeInput();\n\t\t\t\t\t// Update the collapse / expand  button state\n\t\t\t\t\tthis.updateAnyCollapsedContext();\n\t\t\t\t\t// Find resource to focus from active editor input if set\n\t\t\t\t\tthis.selectActiveFile(true);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Support for paste of files into explorer\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tDOM.getWindow(this.container),\n\t\t\t\tDOM.EventType.PASTE,\n\t\t\t\tasync (event) => {\n\t\t\t\t\tif (!this.hasFocus() || this.readonlyContext.get()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (event.clipboardData?.files?.length) {\n\t\t\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\t\t\t\"filesExplorer.paste\",\n\t\t\t\t\t\t\tevent.clipboardData?.files,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.tree.domFocus();\n\n\t\tif (this.tree.getFocusedPart() === AbstractTreePart.Tree) {\n\t\t\tconst focused = this.tree.getFocus();\n\t\t\tif (focused.length === 1 && this._autoReveal) {\n\t\t\t\tthis.tree.reveal(focused[0], 0.5);\n\t\t\t}\n\t\t}\n\t}\n\n\thasFocus(): boolean {\n\t\treturn DOM.isAncestorOfActiveElement(this.container);\n\t}\n\n\tgetFocus(): ExplorerItem[] {\n\t\treturn this.tree.getFocus();\n\t}\n\n\tfocusNext(): void {\n\t\tthis.tree.focusNext();\n\t}\n\n\tfocusLast(): void {\n\t\tthis.tree.focusLast();\n\t}\n\n\tgetContext(respectMultiSelection: boolean): ExplorerItem[] {\n\t\tconst focusedItems =\n\t\t\tthis.tree.getFocusedPart() === AbstractTreePart.StickyScroll\n\t\t\t\t? this.tree.getStickyScrollFocus()\n\t\t\t\t: this.tree.getFocus();\n\t\treturn getContext(\n\t\t\tfocusedItems,\n\t\t\tthis.tree.getSelection(),\n\t\t\trespectMultiSelection,\n\t\t\tthis.renderer,\n\t\t);\n\t}\n\n\tisItemVisible(item: ExplorerItem): boolean {\n\t\t// If filter is undefined it means the tree hasn't been rendered yet, so nothing is visible\n\t\tif (!this.filter) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.filter.filter(item, TreeVisibility.Visible);\n\t}\n\n\tisItemCollapsed(item: ExplorerItem): boolean {\n\t\treturn this.tree.isCollapsed(item);\n\t}\n\n\tasync setEditable(stat: ExplorerItem, isEditing: boolean): Promise<void> {\n\t\tif (isEditing) {\n\t\t\tthis.horizontalScrolling = this.tree.options.horizontalScrolling;\n\n\t\t\tif (this.horizontalScrolling) {\n\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: false });\n\t\t\t}\n\n\t\t\tawait this.tree.expand(stat.parent!);\n\t\t} else {\n\t\t\tif (this.horizontalScrolling !== undefined) {\n\t\t\t\tthis.tree.updateOptions({\n\t\t\t\t\thorizontalScrolling: this.horizontalScrolling,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.horizontalScrolling = undefined;\n\t\t\tthis.treeContainer.classList.remove(\"highlight\");\n\t\t}\n\n\t\tawait this.refresh(false, stat.parent, false);\n\n\t\tif (isEditing) {\n\t\t\tthis.treeContainer.classList.add(\"highlight\");\n\t\t\tthis.tree.reveal(stat);\n\t\t} else {\n\t\t\tthis.tree.domFocus();\n\t\t}\n\t}\n\n\tprivate async selectActiveFile(reveal = this._autoReveal): Promise<void> {\n\t\tif (this._autoReveal) {\n\t\t\tconst activeFile = EditorResourceAccessor.getCanonicalUri(\n\t\t\t\tthis.editorService.activeEditor,\n\t\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t\t);\n\n\t\t\tif (activeFile) {\n\t\t\t\tconst focus = this.tree.getFocus();\n\t\t\t\tconst selection = this.tree.getSelection();\n\t\t\t\tif (\n\t\t\t\t\tfocus.length === 1 &&\n\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\tfocus[0].resource,\n\t\t\t\t\t\tactiveFile,\n\t\t\t\t\t) &&\n\t\t\t\t\tselection.length === 1 &&\n\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\tselection[0].resource,\n\t\t\t\t\t\tactiveFile,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// No action needed, active file is already focused and selected\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn this.explorerService.select(activeFile, reveal);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createTree(container: HTMLElement): void {\n\t\tthis.filter = this.instantiationService.createInstance(FilesFilter);\n\t\tthis._register(this.filter);\n\t\tthis._register(this.filter.onDidChange(() => this.refresh(true)));\n\t\tconst explorerLabels = this.instantiationService.createInstance(\n\t\t\tResourceLabels,\n\t\t\t{ onDidChangeVisibility: this.onDidChangeBodyVisibility },\n\t\t);\n\t\tthis._register(explorerLabels);\n\n\t\tconst updateWidth = (stat: ExplorerItem) => this.tree.updateWidth(stat);\n\t\tthis.renderer = this.instantiationService.createInstance(\n\t\t\tFilesRenderer,\n\t\t\tcontainer,\n\t\t\texplorerLabels,\n\t\t\tupdateWidth,\n\t\t);\n\t\tthis._register(this.renderer);\n\n\t\tthis._register(\n\t\t\tcreateFileIconThemableTreeContainerScope(\n\t\t\t\tcontainer,\n\t\t\t\tthis.themeService,\n\t\t\t),\n\t\t);\n\n\t\tconst isCompressionEnabled = () =>\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"explorer.compactFolders\",\n\t\t\t);\n\n\t\tconst getFileNestingSettings = (item?: ExplorerItem) =>\n\t\t\tthis.configurationService.getValue<IFilesConfiguration>({\n\t\t\t\tresource: item?.root.resource,\n\t\t\t}).explorer.fileNesting;\n\n\t\tthis.tree = <\n\t\t\tWorkbenchCompressibleAsyncDataTree<\n\t\t\t\tExplorerItem | ExplorerItem[],\n\t\t\t\tExplorerItem,\n\t\t\t\tFuzzyScore\n\t\t\t>\n\t\t>this.instantiationService.createInstance(\n\t\t\tWorkbenchCompressibleAsyncDataTree,\n\t\t\t\"FileExplorer\",\n\t\t\tcontainer,\n\t\t\tnew ExplorerDelegate(),\n\t\t\tnew ExplorerCompressionDelegate(),\n\t\t\t[this.renderer],\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tExplorerDataSource,\n\t\t\t\tthis.filter,\n\t\t\t),\n\t\t\t{\n\t\t\t\tcompressionEnabled: isCompressionEnabled(),\n\t\t\t\taccessibilityProvider: this.renderer,\n\t\t\t\tidentityProvider,\n\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\tgetKeyboardNavigationLabel: (stat: ExplorerItem) => {\n\t\t\t\t\t\tif (this.explorerService.isEditable(stat)) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn stat.name;\n\t\t\t\t\t},\n\t\t\t\t\tgetCompressedNodeKeyboardNavigationLabel: (\n\t\t\t\t\t\tstats: ExplorerItem[],\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tstats.some((stat) =>\n\t\t\t\t\t\t\t\tthis.explorerService.isEditable(stat),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn stats.map((stat) => stat.name).join(\"/\");\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmultipleSelectionSupport: true,\n\t\t\t\tfilter: this.filter,\n\t\t\t\tsorter: this.instantiationService.createInstance(FileSorter),\n\t\t\t\tdnd: this.instantiationService.createInstance(\n\t\t\t\t\tFileDragAndDrop,\n\t\t\t\t\t(item) => this.isItemCollapsed(item),\n\t\t\t\t),\n\t\t\t\tcollapseByDefault: (e) => {\n\t\t\t\t\tif (e instanceof ExplorerItem) {\n\t\t\t\t\t\tif (e.hasNests && getFileNestingSettings(e).expand) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tautoExpandSingleChildren: true,\n\t\t\t\texpandOnlyOnTwistieClick: (e: unknown) => {\n\t\t\t\t\tif (e instanceof ExplorerItem) {\n\t\t\t\t\t\tif (e.hasNests) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tthis.configurationService.getValue<\n\t\t\t\t\t\t\t\t\"singleClick\" | \"doubleClick\"\n\t\t\t\t\t\t\t>(\"workbench.tree.expandMode\") === \"doubleClick\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\tpaddingBottom: ExplorerDelegate.ITEM_HEIGHT,\n\t\t\t\toverrideStyles:\n\t\t\t\t\tthis.getLocationBasedColors().listOverrideStyles,\n\t\t\t},\n\t\t);\n\t\tthis._register(this.tree);\n\t\tthis._register(\n\t\t\tthis.themeService.onDidColorThemeChange(() => this.tree.rerender()),\n\t\t);\n\n\t\t// Bind configuration\n\t\tconst onDidChangeCompressionConfiguration = Event.filter(\n\t\t\tthis.configurationService.onDidChangeConfiguration,\n\t\t\t(e) => e.affectsConfiguration(\"explorer.compactFolders\"),\n\t\t);\n\t\tthis._register(\n\t\t\tonDidChangeCompressionConfiguration((_) =>\n\t\t\t\tthis.tree.updateOptions({\n\t\t\t\t\tcompressionEnabled: isCompressionEnabled(),\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\n\t\t// Bind context keys\n\t\tFilesExplorerFocusedContext.bindTo(this.tree.contextKeyService);\n\t\tExplorerFocusedContext.bindTo(this.tree.contextKeyService);\n\n\t\t// Update resource context based on focused element\n\t\tthis._register(\n\t\t\tthis.tree.onDidChangeFocus((e) => this.onFocusChanged(e.elements)),\n\t\t);\n\t\tthis.onFocusChanged([]);\n\t\t// Open when selecting via keyboard\n\t\tthis._register(\n\t\t\tthis.tree.onDidOpen(async (e) => {\n\t\t\t\tconst element = e.element;\n\t\t\t\tif (!element) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Do not react if the user is expanding selection via keyboard.\n\t\t\t\t// Check if the item was previously also selected, if yes the user is simply expanding / collapsing current selection #66589.\n\t\t\t\tconst shiftDown =\n\t\t\t\t\tDOM.isKeyboardEvent(e.browserEvent) &&\n\t\t\t\t\te.browserEvent.shiftKey;\n\t\t\t\tif (!shiftDown) {\n\t\t\t\t\tif (\n\t\t\t\t\t\telement.isDirectory ||\n\t\t\t\t\t\tthis.explorerService.isEditable(undefined)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Do not react if user is clicking on explorer items while some are being edited #70276\n\t\t\t\t\t\t// Do not react if clicking on directories\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\tWorkbenchActionExecutedEvent,\n\t\t\t\t\t\tWorkbenchActionExecutedClassification\n\t\t\t\t\t>(\"workbenchActionExecuted\", {\n\t\t\t\t\t\tid: \"workbench.files.openFile\",\n\t\t\t\t\t\tfrom: \"explorer\",\n\t\t\t\t\t});\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.delegate?.willOpenElement(e.browserEvent);\n\t\t\t\t\t\tawait this.editorService.openEditor(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresource: element.resource,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tpreserveFocus:\n\t\t\t\t\t\t\t\t\t\te.editorOptions.preserveFocus,\n\t\t\t\t\t\t\t\t\tpinned: e.editorOptions.pinned,\n\t\t\t\t\t\t\t\t\tsource: EditorOpenSource.USER,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\te.sideBySide ? SIDE_GROUP : ACTIVE_GROUP,\n\t\t\t\t\t\t);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.delegate?.didOpenElement();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(this.tree.onContextMenu((e) => this.onContextMenu(e)));\n\n\t\tthis._register(\n\t\t\tthis.tree.onDidScroll(async (e) => {\n\t\t\t\tconst editable = this.explorerService.getEditable();\n\t\t\t\tif (\n\t\t\t\t\te.scrollTopChanged &&\n\t\t\t\t\teditable &&\n\t\t\t\t\tthis.tree.getRelativeTop(editable.stat) === null\n\t\t\t\t) {\n\t\t\t\t\tawait editable.data.onFinish(\"\", false);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.tree.onDidChangeCollapseState((e) => {\n\t\t\t\tconst element = e.node.element?.element;\n\t\t\t\tif (element) {\n\t\t\t\t\tconst navigationControllers =\n\t\t\t\t\t\tthis.renderer.getCompressedNavigationController(\n\t\t\t\t\t\t\telement instanceof Array ? element[0] : element,\n\t\t\t\t\t\t);\n\t\t\t\t\tnavigationControllers?.forEach((controller) =>\n\t\t\t\t\t\tcontroller.updateCollapsed(e.node.collapsed),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// Update showing expand / collapse button\n\t\t\t\tthis.updateAnyCollapsedContext();\n\t\t\t}),\n\t\t);\n\n\t\tthis.updateAnyCollapsedContext();\n\n\t\tthis._register(\n\t\t\tthis.tree.onMouseDblClick((e) => {\n\t\t\t\t// If empty space is clicked, and not scrolling by page enabled #173261\n\t\t\t\tconst scrollingByPage =\n\t\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\t\"workbench.list.scrollByPage\",\n\t\t\t\t\t);\n\t\t\t\tif (e.element === null && !scrollingByPage) {\n\t\t\t\t\t// click in empty area -> create a new file #116676\n\t\t\t\t\tthis.commandService.executeCommand(NEW_FILE_COMMAND_ID);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// save view state\n\t\tthis._register(\n\t\t\tthis.storageService.onWillSaveState(() => {\n\t\t\t\tthis.storeTreeViewState();\n\t\t\t}),\n\t\t);\n\t}\n\n\t// React on events\n\n\tprivate onConfigurationUpdated(\n\t\tevent: IConfigurationChangeEvent | undefined,\n\t): void {\n\t\tif (!event || event.affectsConfiguration(\"explorer.autoReveal\")) {\n\t\t\tconst configuration =\n\t\t\t\tthis.configurationService.getValue<IFilesConfiguration>();\n\t\t\tthis._autoReveal = configuration?.explorer?.autoReveal;\n\t\t}\n\n\t\t// Push down config updates to components of viewer\n\t\tif (\n\t\t\tevent &&\n\t\t\t(event.affectsConfiguration(\"explorer.decorations.colors\") ||\n\t\t\t\tevent.affectsConfiguration(\"explorer.decorations.badges\"))\n\t\t) {\n\t\t\tthis.refresh(true);\n\t\t}\n\t}\n\n\tprivate storeTreeViewState() {\n\t\tthis.storageService.store(\n\t\t\tExplorerView.TREE_VIEW_STATE_STORAGE_KEY,\n\t\t\tJSON.stringify(this.tree.getViewState()),\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tprivate setContextKeys(stat: ExplorerItem | null | undefined): void {\n\t\tconst folders = this.contextService.getWorkspace().folders;\n\t\tconst resource = stat ? stat.resource : folders[folders.length - 1].uri;\n\t\tstat = stat || this.explorerService.findClosest(resource);\n\t\tthis.resourceContext.set(resource);\n\t\tthis.folderContext.set(!!stat && stat.isDirectory);\n\t\tthis.readonlyContext.set(!!stat && !!stat.isReadonly);\n\t\tthis.rootContext.set(!!stat && stat.isRoot);\n\n\t\tif (resource) {\n\t\t\tconst overrides = resource\n\t\t\t\t? this.editorResolverService\n\t\t\t\t\t\t.getEditors(resource)\n\t\t\t\t\t\t.map((editor) => editor.id)\n\t\t\t\t: [];\n\t\t\tthis.availableEditorIdsContext.set(overrides.join(\",\"));\n\t\t} else {\n\t\t\tthis.availableEditorIdsContext.reset();\n\t\t}\n\t}\n\n\tprivate async onContextMenu(\n\t\te: ITreeContextMenuEvent<ExplorerItem>,\n\t): Promise<void> {\n\t\tif (DOM.isEditableElement(e.browserEvent.target as HTMLElement)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst stat = e.element;\n\t\tlet anchor = e.anchor;\n\n\t\t// Adjust for compressed folders (except when mouse is used)\n\t\tif (DOM.isHTMLElement(anchor)) {\n\t\t\tif (stat) {\n\t\t\t\tconst controllers =\n\t\t\t\t\tthis.renderer.getCompressedNavigationController(stat);\n\n\t\t\t\tif (controllers && controllers.length > 0) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tDOM.isKeyboardEvent(e.browserEvent) ||\n\t\t\t\t\t\tisCompressedFolderName(e.browserEvent.target)\n\t\t\t\t\t) {\n\t\t\t\t\t\tanchor = controllers[0].labels[controllers[0].index];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontrollers.forEach((controller) => controller.last());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update dynamic contexts\n\t\tthis.fileCopiedContextKey.set(\n\t\t\tawait this.clipboardService.hasResources(),\n\t\t);\n\t\tthis.setContextKeys(stat);\n\n\t\tconst selection = this.tree.getSelection();\n\n\t\tconst roots = this.explorerService.roots; // If the click is outside of the elements pass the root resource if there is only one root. If there are multiple roots pass empty object.\n\t\tlet arg: URI | {};\n\t\tif (stat instanceof ExplorerItem) {\n\t\t\tconst compressedControllers =\n\t\t\t\tthis.renderer.getCompressedNavigationController(stat);\n\t\t\targ =\n\t\t\t\tcompressedControllers && compressedControllers.length\n\t\t\t\t\t? compressedControllers[0].current.resource\n\t\t\t\t\t: stat.resource;\n\t\t} else {\n\t\t\targ = roots.length === 1 ? roots[0].resource : {};\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tmenuId: MenuId.ExplorerContext,\n\t\t\tmenuActionOptions: { arg, shouldForwardArgs: true },\n\t\t\tcontextKeyService: this.tree.contextKeyService,\n\t\t\tgetAnchor: () => anchor,\n\t\t\tonHide: (wasCancelled?: boolean) => {\n\t\t\t\tif (wasCancelled) {\n\t\t\t\t\tthis.tree.domFocus();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetActionsContext: () =>\n\t\t\t\tstat && selection && selection.indexOf(stat) >= 0\n\t\t\t\t\t? selection.map((fs: ExplorerItem) => fs.resource)\n\t\t\t\t\t: stat instanceof ExplorerItem\n\t\t\t\t\t\t? [stat.resource]\n\t\t\t\t\t\t: [],\n\t\t});\n\t}\n\n\tprivate onFocusChanged(elements: readonly ExplorerItem[]): void {\n\t\tconst stat = elements && elements.length ? elements[0] : undefined;\n\t\tthis.setContextKeys(stat);\n\n\t\tif (stat) {\n\t\t\tconst enableTrash = Boolean(\n\t\t\t\tthis.configurationService.getValue<IFilesConfiguration>().files\n\t\t\t\t\t?.enableTrash,\n\t\t\t);\n\t\t\tconst hasCapability = this.fileService.hasCapability(\n\t\t\t\tstat.resource,\n\t\t\t\tFileSystemProviderCapabilities.Trash,\n\t\t\t);\n\t\t\tthis.resourceMoveableToTrash.set(enableTrash && hasCapability);\n\t\t} else {\n\t\t\tthis.resourceMoveableToTrash.reset();\n\t\t}\n\n\t\tconst compressedNavigationControllers =\n\t\t\tstat && this.renderer.getCompressedNavigationController(stat);\n\n\t\tif (!compressedNavigationControllers) {\n\t\t\tthis.compressedFocusContext.set(false);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.compressedFocusContext.set(true);\n\t\tcompressedNavigationControllers.forEach((controller) => {\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\t// General methods\n\n\t/**\n\t * Refresh the contents of the explorer to get up to date data from the disk about the file structure.\n\t * If the item is passed we refresh only that level of the tree, otherwise we do a full refresh.\n\t */\n\trefresh(\n\t\trecursive: boolean,\n\t\titem?: ExplorerItem,\n\t\tcancelEditing = true,\n\t): Promise<void> {\n\t\tif (\n\t\t\t!this.tree ||\n\t\t\t!this.isBodyVisible() ||\n\t\t\t(item && !this.tree.hasNode(item))\n\t\t) {\n\t\t\t// Tree node doesn't exist yet, when it becomes visible we will refresh\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (cancelEditing && this.explorerService.isEditable(undefined)) {\n\t\t\tthis.tree.domFocus();\n\t\t}\n\n\t\tconst toRefresh = item || this.tree.getInput();\n\t\treturn this.tree.updateChildren(toRefresh, recursive, !!item);\n\t}\n\n\toverride getOptimalWidth(): number {\n\t\tconst parentNode = this.tree.getHTMLElement();\n\t\tconst childNodes = ([] as HTMLElement[]).slice.call(\n\t\t\tparentNode.querySelectorAll(\".explorer-item .label-name\"),\n\t\t); // select all file labels\n\n\t\treturn DOM.getLargestChildWidth(parentNode, childNodes);\n\t}\n\n\tasync setTreeInput(): Promise<void> {\n\t\tif (!this.isBodyVisible()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Wait for the last execution to complete before executing\n\t\tif (this.setTreeInputPromise) {\n\t\t\tawait this.setTreeInputPromise;\n\t\t}\n\n\t\tconst initialInputSetup = !this.tree.getInput();\n\t\tif (initialInputSetup) {\n\t\t\tperf.mark(\"code/willResolveExplorer\");\n\t\t}\n\t\tconst roots = this.explorerService.roots;\n\t\tlet input: ExplorerItem | ExplorerItem[] = roots[0];\n\t\tif (\n\t\t\tthis.contextService.getWorkbenchState() !== WorkbenchState.FOLDER ||\n\t\t\troots[0].error\n\t\t) {\n\t\t\t// Display roots only when multi folder workspace\n\t\t\tinput = roots;\n\t\t}\n\n\t\tlet viewState: IAsyncDataTreeViewState | undefined;\n\t\tif (this.tree && this.tree.getInput()) {\n\t\t\tviewState = this.tree.getViewState();\n\t\t} else {\n\t\t\tconst rawViewState = this.storageService.get(\n\t\t\t\tExplorerView.TREE_VIEW_STATE_STORAGE_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t\tif (rawViewState) {\n\t\t\t\tviewState = JSON.parse(rawViewState);\n\t\t\t}\n\t\t}\n\n\t\tconst previousInput = this.tree.getInput();\n\t\tconst promise = (this.setTreeInputPromise = this.tree\n\t\t\t.setInput(input, viewState)\n\t\t\t.then(async () => {\n\t\t\t\tif (Array.isArray(input)) {\n\t\t\t\t\tif (!viewState || previousInput instanceof ExplorerItem) {\n\t\t\t\t\t\t// There is no view state for this workspace (we transitioned from a folder workspace?), expand up to five roots.\n\t\t\t\t\t\t// If there are many roots in a workspace, expanding them all would can cause performance issues #176226\n\t\t\t\t\t\tfor (let i = 0; i < Math.min(input.length, 5); i++) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.tree.expand(input[i]);\n\t\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Reloaded or transitioned from an empty workspace, but only have a single folder in the workspace.\n\t\t\t\t\tif (\n\t\t\t\t\t\t!previousInput &&\n\t\t\t\t\t\tinput.length === 1 &&\n\t\t\t\t\t\tthis.configurationService.getValue<IFilesConfiguration>()\n\t\t\t\t\t\t\t.explorer.expandSingleFolderWorkspaces\n\t\t\t\t\t) {\n\t\t\t\t\t\tawait this.tree.expand(input[0]).catch(() => {});\n\t\t\t\t\t}\n\t\t\t\t\tif (Array.isArray(previousInput)) {\n\t\t\t\t\t\tconst previousRoots = new ResourceMap<true>();\n\t\t\t\t\t\tpreviousInput.forEach((previousRoot) =>\n\t\t\t\t\t\t\tpreviousRoots.set(previousRoot.resource, true),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Roots added to the explorer -> expand them.\n\t\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\t\tinput.map(async (item) => {\n\t\t\t\t\t\t\t\tif (!previousRoots.has(item.resource)) {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tawait this.tree.expand(item);\n\t\t\t\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (initialInputSetup) {\n\t\t\t\t\tperf.mark(\"code/didResolveExplorer\");\n\t\t\t\t}\n\t\t\t}));\n\n\t\tthis.progressService.withProgress(\n\t\t\t{\n\t\t\t\tlocation: ProgressLocation.Explorer,\n\t\t\t\tdelay: this.layoutService.isRestored() ? 800 : 1500, // reduce progress visibility when still restoring\n\t\t\t},\n\t\t\t(_progress) => promise,\n\t\t);\n\n\t\tawait promise;\n\t\tif (!this.decorationsProvider) {\n\t\t\tthis.decorationsProvider = new ExplorerDecorationsProvider(\n\t\t\t\tthis.explorerService,\n\t\t\t\tthis.contextService,\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.decorationService.registerDecorationsProvider(\n\t\t\t\t\tthis.decorationsProvider,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic async selectResource(\n\t\tresource: URI | undefined,\n\t\treveal = this._autoReveal,\n\t\tretry = 0,\n\t): Promise<void> {\n\t\t// do no retry more than once to prevent infinite loops in cases of inconsistent model\n\t\tif (retry === 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!resource || !this.isBodyVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If something is refreshing the explorer, we must await it or else a selection race condition can occur\n\t\tif (this.setTreeInputPromise) {\n\t\t\tawait this.setTreeInputPromise;\n\t\t}\n\n\t\t// Expand all stats in the parent chain.\n\t\tlet item: ExplorerItem | null =\n\t\t\tthis.explorerService.findClosestRoot(resource);\n\n\t\twhile (item && item.resource.toString() !== resource.toString()) {\n\t\t\ttry {\n\t\t\t\tawait this.tree.expand(item);\n\t\t\t} catch (e) {\n\t\t\t\treturn this.selectResource(resource, reveal, retry + 1);\n\t\t\t}\n\t\t\tif (item.children.size) {\n\t\t\t\tfor (const child of item.children.values()) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqualOrParent(\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\tchild.resource,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\titem = child;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\titem = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\titem = null;\n\t\t\t}\n\t\t}\n\n\t\tif (item) {\n\t\t\tif (item === this.tree.getInput()) {\n\t\t\t\tthis.tree.setFocus([]);\n\t\t\t\tthis.tree.setSelection([]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// We must expand the nest to have it be populated in the tree\n\t\t\t\tif (item.nestedParent) {\n\t\t\t\t\tawait this.tree.expand(item.nestedParent);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(reveal === true || reveal === \"force\") &&\n\t\t\t\t\tthis.tree.getRelativeTop(item) === null\n\t\t\t\t) {\n\t\t\t\t\t// Don't scroll to the item if it's already visible, or if set not to.\n\t\t\t\t\tthis.tree.reveal(item, 0.5);\n\t\t\t\t}\n\n\t\t\t\tthis.tree.setFocus([item]);\n\t\t\t\tthis.tree.setSelection([item]);\n\t\t\t} catch (e) {\n\t\t\t\t// Element might not be in the tree, try again and silently fail\n\t\t\t\treturn this.selectResource(resource, reveal, retry + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\titemsCopied(\n\t\tstats: ExplorerItem[],\n\t\tcut: boolean,\n\t\tpreviousCut: ExplorerItem[] | undefined,\n\t): void {\n\t\tthis.fileCopiedContextKey.set(stats.length > 0);\n\t\tthis.resourceCutContextKey.set(cut && stats.length > 0);\n\t\tpreviousCut?.forEach((item) => this.tree.rerender(item));\n\t\tif (cut) {\n\t\t\tstats.forEach((s) => this.tree.rerender(s));\n\t\t}\n\t}\n\n\texpandAll(): void {\n\t\tif (this.explorerService.isEditable(undefined)) {\n\t\t\tthis.tree.domFocus();\n\t\t}\n\n\t\tthis.tree.expandAll();\n\t}\n\n\tcollapseAll(): void {\n\t\tif (this.explorerService.isEditable(undefined)) {\n\t\t\tthis.tree.domFocus();\n\t\t}\n\n\t\tconst treeInput = this.tree.getInput();\n\t\tif (Array.isArray(treeInput)) {\n\t\t\tif (hasExpandedRootChild(this.tree, treeInput)) {\n\t\t\t\ttreeInput.forEach((folder) => {\n\t\t\t\t\tfolder.children.forEach(\n\t\t\t\t\t\t(child) =>\n\t\t\t\t\t\t\tthis.tree.hasNode(child) &&\n\t\t\t\t\t\t\tthis.tree.collapse(child, true),\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.tree.collapseAll();\n\t}\n\n\tpreviousCompressedStat(): void {\n\t\tconst focused = this.tree.getFocus();\n\t\tif (!focused.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst compressedNavigationControllers =\n\t\t\tthis.renderer.getCompressedNavigationController(focused[0])!;\n\t\tcompressedNavigationControllers.forEach((controller) => {\n\t\t\tcontroller.previous();\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\tnextCompressedStat(): void {\n\t\tconst focused = this.tree.getFocus();\n\t\tif (!focused.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst compressedNavigationControllers =\n\t\t\tthis.renderer.getCompressedNavigationController(focused[0])!;\n\t\tcompressedNavigationControllers.forEach((controller) => {\n\t\t\tcontroller.next();\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\tfirstCompressedStat(): void {\n\t\tconst focused = this.tree.getFocus();\n\t\tif (!focused.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst compressedNavigationControllers =\n\t\t\tthis.renderer.getCompressedNavigationController(focused[0])!;\n\t\tcompressedNavigationControllers.forEach((controller) => {\n\t\t\tcontroller.first();\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\tlastCompressedStat(): void {\n\t\tconst focused = this.tree.getFocus();\n\t\tif (!focused.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst compressedNavigationControllers =\n\t\t\tthis.renderer.getCompressedNavigationController(focused[0])!;\n\t\tcompressedNavigationControllers.forEach((controller) => {\n\t\t\tcontroller.last();\n\t\t\tthis.updateCompressedNavigationContextKeys(controller);\n\t\t});\n\t}\n\n\tprivate updateCompressedNavigationContextKeys(\n\t\tcontroller: ICompressedNavigationController,\n\t): void {\n\t\tthis.compressedFocusFirstContext.set(controller.index === 0);\n\t\tthis.compressedFocusLastContext.set(\n\t\t\tcontroller.index === controller.count - 1,\n\t\t);\n\t}\n\n\tprivate updateAnyCollapsedContext(): void {\n\t\tconst treeInput = this.tree.getInput();\n\t\tif (treeInput === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst treeInputArray = Array.isArray(treeInput)\n\t\t\t? treeInput\n\t\t\t: Array.from(treeInput.children.values());\n\t\t// Has collapsible root when anything is expanded\n\t\tthis.viewHasSomeCollapsibleRootItem.set(\n\t\t\thasExpandedNode(this.tree, treeInputArray),\n\t\t);\n\t\t// synchronize state to cache\n\t\tthis.storeTreeViewState();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.dragHandler?.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nexport function createFileIconThemableTreeContainerScope(\n\tcontainer: HTMLElement,\n\tthemeService: IThemeService,\n): IDisposable {\n\tcontainer.classList.add(\"file-icon-themable-tree\");\n\tcontainer.classList.add(\"show-file-icons\");\n\n\tconst onDidChangeFileIconTheme = (theme: IFileIconTheme) => {\n\t\tcontainer.classList.toggle(\n\t\t\t\"align-icons-and-twisties\",\n\t\t\ttheme.hasFileIcons && !theme.hasFolderIcons,\n\t\t);\n\t\tcontainer.classList.toggle(\n\t\t\t\"hide-arrows\",\n\t\t\ttheme.hidesExplorerArrows === true,\n\t\t);\n\t};\n\n\tonDidChangeFileIconTheme(themeService.getFileIconTheme());\n\treturn themeService.onDidFileIconThemeChange(onDidChangeFileIconTheme);\n}\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.files.action.createFileFromExplorer\",\n\t\t\t\ttitle: nls.localize(\"createNewFile\", \"New File...\"),\n\t\t\t\tf1: false,\n\t\t\t\ticon: Codicon.newFile,\n\t\t\t\tprecondition: ExplorerResourceNotReadonlyContext,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", VIEW_ID),\n\t\t\t\t\torder: 10,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tcommandService.executeCommand(NEW_FILE_COMMAND_ID);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.files.action.createFolderFromExplorer\",\n\t\t\t\ttitle: nls.localize(\"createNewFolder\", \"New Folder...\"),\n\t\t\t\tf1: false,\n\t\t\t\ticon: Codicon.newFolder,\n\t\t\t\tprecondition: ExplorerResourceNotReadonlyContext,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", VIEW_ID),\n\t\t\t\t\torder: 20,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tcommandService.executeCommand(NEW_FOLDER_COMMAND_ID);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.files.action.refreshFilesExplorer\",\n\t\t\t\ttitle: nls.localize2(\"refreshExplorer\", \"Refresh Explorer\"),\n\t\t\t\tf1: true,\n\t\t\t\ticon: Codicon.refresh,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", VIEW_ID),\n\t\t\t\t\torder: 30,\n\t\t\t\t},\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\t\"refreshExplorerMetadata\",\n\t\t\t\t\t\t\"Forces a refresh of the Explorer.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst explorerService = accessor.get(IExplorerService);\n\t\t\tawait viewsService.openView(VIEW_ID);\n\t\t\tawait explorerService.refresh();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.files.action.collapseExplorerFolders\",\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"collapseExplorerFolders\",\n\t\t\t\t\t\"Collapse Folders in Explorer\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\ticon: Codicon.collapseAll,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", VIEW_ID),\n\t\t\t\t\torder: 40,\n\t\t\t\t},\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\t\"collapseExplorerFoldersMetadata\",\n\t\t\t\t\t\t\"Folds all folders in the Explorer.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst view = viewsService.getViewWithId(VIEW_ID);\n\t\t\tif (view !== null) {\n\t\t\t\tconst explorerView = view as ExplorerView;\n\t\t\t\texplorerView.collapseAll();\n\t\t\t}\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": []
}
