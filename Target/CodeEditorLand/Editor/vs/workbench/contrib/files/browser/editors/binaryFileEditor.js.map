{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/browser/editors/binaryFileEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../../nls.js';\nimport { BaseBinaryResourceEditor } from '../../../../browser/parts/editor/binaryEditor.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { FileEditorInput } from './fileEditorInput.js';\nimport { BINARY_FILE_EDITOR_ID, BINARY_TEXT_FILE_MODE } from '../../common/files.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { EditorResolution, IEditorOptions } from '../../../../../platform/editor/common/editor.js';\nimport { IEditorResolverService, ResolvedStatus, ResolvedEditor } from '../../../../services/editor/common/editorResolverService.js';\nimport { isEditorInputWithOptions } from '../../../../common/editor.js';\nimport { DiffEditorInput } from '../../../../common/editor/diffEditorInput.js';\nimport { IEditorGroup } from '../../../../services/editor/common/editorGroupsService.js';\n\n/**\n * An implementation of editor for binary files that cannot be displayed.\n */\nexport class BinaryFileEditor extends BaseBinaryResourceEditor {\n\n\tstatic readonly ID = BINARY_FILE_EDITOR_ID;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEditorResolverService private readonly editorResolverService: IEditorResolverService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(\n\t\t\tBinaryFileEditor.ID,\n\t\t\tgroup,\n\t\t\t{\n\t\t\t\topenInternal: (input, options) => this.openInternal(input, options)\n\t\t\t},\n\t\t\ttelemetryService,\n\t\t\tthemeService,\n\t\t\tstorageService\n\t\t);\n\t}\n\n\tprivate async openInternal(input: EditorInput, options: IEditorOptions | undefined): Promise<void> {\n\t\tif (input instanceof FileEditorInput && this.group.activeEditor) {\n\n\t\t\t// We operate on the active editor here to support re-opening\n\t\t\t// diff editors where `input` may just be one side of the\n\t\t\t// diff editor.\n\t\t\t// Since `openInternal` can only ever be selected from the\n\t\t\t// active editor of the group, this is a safe assumption.\n\t\t\t// (https://github.com/microsoft/vscode/issues/124222)\n\t\t\tconst activeEditor = this.group.activeEditor;\n\t\t\tconst untypedActiveEditor = activeEditor?.toUntyped();\n\t\t\tif (!untypedActiveEditor) {\n\t\t\t\treturn; // we need untyped editor support\n\t\t\t}\n\n\t\t\t// Try to let the user pick an editor\n\t\t\tlet resolvedEditor: ResolvedEditor | undefined = await this.editorResolverService.resolveEditor({\n\t\t\t\t...untypedActiveEditor,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\toverride: EditorResolution.PICK\n\t\t\t\t}\n\t\t\t}, this.group);\n\n\t\t\tif (resolvedEditor === ResolvedStatus.NONE) {\n\t\t\t\tresolvedEditor = undefined;\n\t\t\t} else if (resolvedEditor === ResolvedStatus.ABORT) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the result if a file editor, the user indicated to open\n\t\t\t// the binary file as text. As such we adjust the input for that.\n\t\t\tif (isEditorInputWithOptions(resolvedEditor)) {\n\t\t\t\tfor (const editor of resolvedEditor.editor instanceof DiffEditorInput ? [resolvedEditor.editor.original, resolvedEditor.editor.modified] : [resolvedEditor.editor]) {\n\t\t\t\t\tif (editor instanceof FileEditorInput) {\n\t\t\t\t\t\teditor.setForceOpenAsText();\n\t\t\t\t\t\teditor.setPreferredLanguageId(BINARY_TEXT_FILE_MODE); // https://github.com/microsoft/vscode/issues/131076\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace the active editor with the picked one\n\t\t\tawait this.group.replaceEditors([{\n\t\t\t\teditor: activeEditor,\n\t\t\t\treplacement: resolvedEditor?.editor ?? input,\n\t\t\t\toptions: {\n\t\t\t\t\t...resolvedEditor?.options ?? options\n\t\t\t\t}\n\t\t\t}]);\n\t\t}\n\t}\n\n\toverride getTitle(): string {\n\t\treturn this.input ? this.input.getName() : localize('binaryFileEditor', \"Binary File Viewer\");\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,gCAAgC;AACzC,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAChC,SAAS,uBAAuB,6BAA6B;AAC7D,SAAS,uBAAuB;AAChC,SAAS,kBAAkB,sBAAsB;AACjD,SAAS,wBAAwB,gBAAgB,sBAAsB;AACvE,SAAS,gCAAgC;AACzC,SAAS,uBAAuB;AAChC,SAAS,oBAAoB;AAKtB,IAAM,mBAAN,cAA+B,yBAAyB;AAAA,EAI9D,YACC,OACmB,kBACJ,cAC0B,uBACxB,gBAChB;AACD;AAAA,MACC,iBAAiB;AAAA,MACjB;AAAA,MACA;AAAA,QACC,cAAc,wBAAC,OAAO,YAAY,KAAK,aAAa,OAAO,OAAO,GAApD;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAZyC;AAAA,EAa1C;AAAA,EA3CD,OAsB+D;AAAA;AAAA;AAAA,EAE9D,OAAgB,KAAK;AAAA,EAqBrB,MAAc,aAAa,OAAoB,SAAoD;AAClG,QAAI,iBAAiB,mBAAmB,KAAK,MAAM,cAAc;AAQhE,YAAM,eAAe,KAAK,MAAM;AAChC,YAAM,sBAAsB,cAAc,UAAU;AACpD,UAAI,CAAC,qBAAqB;AACzB;AAAA,MACD;AAGA,UAAI,iBAA6C,MAAM,KAAK,sBAAsB,cAAc;AAAA,QAC/F,GAAG;AAAA,QACH,SAAS;AAAA,UACR,GAAG;AAAA,UACH,UAAU,iBAAiB;AAAA,QAC5B;AAAA,MACD,GAAG,KAAK,KAAK;AAEb,UAAI,mBAAmB,eAAe,MAAM;AAC3C,yBAAiB;AAAA,MAClB,WAAW,mBAAmB,eAAe,OAAO;AACnD;AAAA,MACD;AAIA,UAAI,yBAAyB,cAAc,GAAG;AAC7C,mBAAW,UAAU,eAAe,kBAAkB,kBAAkB,CAAC,eAAe,OAAO,UAAU,eAAe,OAAO,QAAQ,IAAI,CAAC,eAAe,MAAM,GAAG;AACnK,cAAI,kBAAkB,iBAAiB;AACtC,mBAAO,mBAAmB;AAC1B,mBAAO,uBAAuB,qBAAqB;AAAA,UACpD;AAAA,QACD;AAAA,MACD;AAGA,YAAM,KAAK,MAAM,eAAe,CAAC;AAAA,QAChC,QAAQ;AAAA,QACR,aAAa,gBAAgB,UAAU;AAAA,QACvC,SAAS;AAAA,UACR,GAAG,gBAAgB,WAAW;AAAA,QAC/B;AAAA,MACD,CAAC,CAAC;AAAA,IACH;AAAA,EACD;AAAA,EAES,WAAmB;AAC3B,WAAO,KAAK,QAAQ,KAAK,MAAM,QAAQ,IAAI,SAAS,oBAAoB,oBAAoB;AAAA,EAC7F;AACD;AA9Ea,mBAAN;AAAA,EAMJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GATU;",
  "names": []
}
