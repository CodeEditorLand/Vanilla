import{PreTrie as p,ExplorerFileNestingTrie as r,SufTrie as i}from"../../common/explorerFileNestingTrie.js";import t from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as b}from"../../../../../base/test/common/utils.js";const s={dirname:"mydir",basename:"",extname:""};suite("SufTrie",()=>{b(),test("exactMatches",()=>{const e=new i;e.add(".npmrc","MyKey"),t.deepStrictEqual(e.get(".npmrc",s),["MyKey"]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get("a.npmrc",s),[])}),test("starMatches",()=>{const e=new i;e.add("*.npmrc","MyKey"),t.deepStrictEqual(e.get(".npmrc",s),["MyKey"]),t.deepStrictEqual(e.get("npmrc",s),[]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get("a.npmrc",s),["MyKey"]),t.deepStrictEqual(e.get("a.b.c.d.npmrc",s),["MyKey"])}),test("starSubstitutes",()=>{const e=new i;e.add("*.npmrc","${capture}.json"),t.deepStrictEqual(e.get(".npmrc",s),[".json"]),t.deepStrictEqual(e.get("npmrc",s),[]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get("a.npmrc",s),["a.json"]),t.deepStrictEqual(e.get("a.b.c.d.npmrc",s),["a.b.c.d.json"])}),test("multiMatches",()=>{const e=new i;e.add("*.npmrc","Key1"),e.add("*.json","Key2"),e.add("*d.npmrc","Key3"),t.deepStrictEqual(e.get(".npmrc",s),["Key1"]),t.deepStrictEqual(e.get("npmrc",s),[]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get(".json",s),["Key2"]),t.deepStrictEqual(e.get("a.json",s),["Key2"]),t.deepStrictEqual(e.get("a.npmrc",s),["Key1"]),t.deepStrictEqual(e.get("a.b.c.d.npmrc",s),["Key1","Key3"])}),test("multiSubstitutes",()=>{const e=new i;e.add("*.npmrc","Key1.${capture}.js"),e.add("*.json","Key2.${capture}.js"),e.add("*d.npmrc","Key3.${capture}.js"),t.deepStrictEqual(e.get(".npmrc",s),["Key1..js"]),t.deepStrictEqual(e.get("npmrc",s),[]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get(".json",s),["Key2..js"]),t.deepStrictEqual(e.get("a.json",s),["Key2.a.js"]),t.deepStrictEqual(e.get("a.npmrc",s),["Key1.a.js"]),t.deepStrictEqual(e.get("a.b.cd.npmrc",s),["Key1.a.b.cd.js","Key3.a.b.c.js"]),t.deepStrictEqual(e.get("a.b.c.d.npmrc",s),["Key1.a.b.c.d.js","Key3.a.b.c..js"])})}),suite("PreTrie",()=>{b(),test("exactMatches",()=>{const e=new p;e.add(".npmrc","MyKey"),t.deepStrictEqual(e.get(".npmrc",s),["MyKey"]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get("a.npmrc",s),[])}),test("starMatches",()=>{const e=new p;e.add("*.npmrc","MyKey"),t.deepStrictEqual(e.get(".npmrc",s),["MyKey"]),t.deepStrictEqual(e.get("npmrc",s),[]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get("a.npmrc",s),["MyKey"]),t.deepStrictEqual(e.get("a.b.c.d.npmrc",s),["MyKey"])}),test("starSubstitutes",()=>{const e=new p;e.add("*.npmrc","${capture}.json"),t.deepStrictEqual(e.get(".npmrc",s),[".json"]),t.deepStrictEqual(e.get("npmrc",s),[]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get("a.npmrc",s),["a.json"]),t.deepStrictEqual(e.get("a.b.c.d.npmrc",s),["a.b.c.d.json"])}),test("multiMatches",()=>{const e=new p;e.add("*.npmrc","Key1"),e.add("*.json","Key2"),e.add("*d.npmrc","Key3"),t.deepStrictEqual(e.get(".npmrc",s),["Key1"]),t.deepStrictEqual(e.get("npmrc",s),[]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get(".json",s),["Key2"]),t.deepStrictEqual(e.get("a.json",s),["Key2"]),t.deepStrictEqual(e.get("a.npmrc",s),["Key1"]),t.deepStrictEqual(e.get("a.b.c.d.npmrc",s),["Key1","Key3"])}),test("multiSubstitutes",()=>{const e=new p;e.add("*.npmrc","Key1.${capture}.js"),e.add("*.json","Key2.${capture}.js"),e.add("*d.npmrc","Key3.${capture}.js"),t.deepStrictEqual(e.get(".npmrc",s),["Key1..js"]),t.deepStrictEqual(e.get("npmrc",s),[]),t.deepStrictEqual(e.get(".npmrcs",s),[]),t.deepStrictEqual(e.get(".json",s),["Key2..js"]),t.deepStrictEqual(e.get("a.json",s),["Key2.a.js"]),t.deepStrictEqual(e.get("a.npmrc",s),["Key1.a.js"]),t.deepStrictEqual(e.get("a.b.cd.npmrc",s),["Key1.a.b.cd.js","Key3.a.b.c.js"]),t.deepStrictEqual(e.get("a.b.c.d.npmrc",s),["Key1.a.b.c.d.js","Key3.a.b.c..js"])}),test("emptyMatches",()=>{const e=new p;e.add("package*json","package"),t.deepStrictEqual(e.get("package.json",s),["package"]),t.deepStrictEqual(e.get("packagejson",s),["package"]),t.deepStrictEqual(e.get("package-lock.json",s),["package"])})}),suite("StarTrie",()=>{b();const e=(a,c)=>{const o=[...a.entries()].map(n=>`${n[0]} => [${[...n[1].keys()].join()}]`),d=Object.entries(c).map(n=>`${n[0]}: [${[n[1]].join()}]`),m=o+"==="+d;t.strictEqual(a.size,Object.keys(c).length,m);for(const n of a.keys()){const l=a.get(n),j=c[n],g=[...l.keys()].join()+"==="+j.join(),u=m+`
`+g;t(l.size===j.length,u);for(const y of j)t(l.has(y),u)}};test("does added extension nesting",()=>{const c=new r([["*",["${capture}.*"]]]).nest(["file","file.json","boop.test","boop.test1","boop.test.1","beep","beep.test1","beep.boop.test1","beep.boop.test2","beep.boop.a"],"mydir");e(c,{file:["file.json"],"boop.test":["boop.test.1"],"boop.test1":[],beep:["beep.test1","beep.boop.test1","beep.boop.test2","beep.boop.a"]})}),test("does ext specific nesting",()=>{const c=new r([["*.ts",["${capture}.js"]],["*.js",["${capture}.map"]]]).nest(["a.ts","a.js","a.jss","ab.js","b.js","b.map","c.ts","c.js","c.map","d.ts","d.map"],"mydir");e(c,{"a.ts":["a.js"],"ab.js":[],"a.jss":[],"b.js":["b.map"],"c.ts":["c.js","c.map"],"d.ts":[],"d.map":[]})}),test("handles loops",()=>{const c=new r([["*.a",["${capture}.b","${capture}.c"]],["*.b",["${capture}.a"]],["*.c",["${capture}.d"]],["*.aa",["${capture}.bb"]],["*.bb",["${capture}.cc","${capture}.dd"]],["*.cc",["${capture}.aa"]],["*.dd",["${capture}.ee"]]]).nest([".a",".b",".c",".d","a.a","a.b","a.d","a.aa","a.bb","a.cc","b.aa","b.bb","c.bb","c.cc","d.aa","d.cc","e.aa","e.bb","e.dd","e.ee","f.aa","f.bb","f.cc","f.dd","f.ee"],"mydir");e(c,{".a":[],".b":[],".c":[],".d":[],"a.a":[],"a.b":[],"a.d":[],"a.aa":[],"a.bb":[],"a.cc":[],"b.aa":["b.bb"],"c.bb":["c.cc"],"d.cc":["d.aa"],"e.aa":["e.bb","e.dd","e.ee"],"f.aa":[],"f.bb":[],"f.cc":[],"f.dd":[],"f.ee":[]})}),test("does general bidirectional suffix matching",()=>{const c=new r([["*-vsdoc.js",["${capture}.js"]],["*.js",["${capture}-vscdoc.js"]]]).nest(["a-vsdoc.js","a.js","b.js","b-vscdoc.js"],"mydir");e(c,{"a-vsdoc.js":["a.js"],"b.js":["b-vscdoc.js"]})}),test("does general bidirectional prefix matching",()=>{const c=new r([["vsdoc-*.js",["${capture}.js"]],["*.js",["vscdoc-${capture}.js"]]]).nest(["vsdoc-a.js","a.js","b.js","vscdoc-b.js"],"mydir");e(c,{"vsdoc-a.js":["a.js"],"b.js":["vscdoc-b.js"]})}),test("does general bidirectional general matching",()=>{const c=new r([["foo-*-bar.js",["${capture}.js"]],["*.js",["bib-${capture}-bap.js"]]]).nest(["foo-a-bar.js","a.js","b.js","bib-b-bap.js"],"mydir");e(c,{"foo-a-bar.js":["a.js"],"b.js":["bib-b-bap.js"]})}),test("does extension specific path segment matching",()=>{const c=new r([["*.js",["${capture}.*.js"]]]).nest(["foo.js","foo.test.js","fooTest.js","bar.js.js"],"mydir");e(c,{"foo.js":["foo.test.js"],"fooTest.js":[],"bar.js.js":[]})}),test("does exact match nesting",()=>{const c=new r([["package.json",[".npmrc","npm-shrinkwrap.json","yarn.lock",".yarnclean",".yarnignore",".yarn-integrity",".yarnrc"]],["bower.json",[".bowerrc"]]]).nest(["package.json",".npmrc","npm-shrinkwrap.json","yarn.lock",".bowerrc"],"mydir");e(c,{"package.json":[".npmrc","npm-shrinkwrap.json","yarn.lock"],".bowerrc":[]})}),test("eslint test",()=>{const a=new r([[".eslintrc*",[".eslint*"]]]),c=a.nest([".eslintrc.json",".eslintignore"],"mydir");e(c,{".eslintrc.json":[".eslintignore"]});const o=a.nest([".eslintrc",".eslintignore"],"mydir");e(o,{".eslintrc":[".eslintignore"]})}),test("basename expansion",()=>{const c=new r([["*-vsdoc.js",["${basename}.doc"]]]).nest(["boop-vsdoc.js","boop-vsdoc.doc","boop.doc"],"mydir");e(c,{"boop-vsdoc.js":["boop-vsdoc.doc"],"boop.doc":[]})}),test("extname expansion",()=>{const c=new r([["*-vsdoc.js",["${extname}.doc"]]]).nest(["boop-vsdoc.js","js.doc","boop.doc"],"mydir");e(c,{"boop-vsdoc.js":["js.doc"],"boop.doc":[]})}),test("added segment matcher",()=>{const c=new r([["*",["${basename}.*.${extname}"]]]).nest(["some.file","some.html.file","some.html.nested.file","other.file","some.thing","some.thing.else"],"mydir");e(c,{"some.file":["some.html.file","some.html.nested.file"],"other.file":[],"some.thing":[],"some.thing.else":[]})}),test("added segment matcher (old format)",()=>{const c=new r([["*",["$(basename).*.$(extname)"]]]).nest(["some.file","some.html.file","some.html.nested.file","other.file","some.thing","some.thing.else"],"mydir");e(c,{"some.file":["some.html.file","some.html.nested.file"],"other.file":[],"some.thing":[],"some.thing.else":[]})}),test("dirname matching",()=>{const c=new r([["index.ts",["${dirname}.ts"]]]).nest(["otherFile.ts","MyComponent.ts","index.ts"],"MyComponent");e(c,{"index.ts":["MyComponent.ts"],"otherFile.ts":[]})}),test.skip("is fast",()=>{const a=new r([["*",["${capture}.*"]],["*.js",["${capture}.*.js","${capture}.map"]],["*.jsx",["${capture}.js"]],["*.ts",["${capture}.js","${capture}.*.ts"]],["*.tsx",["${capture}.js"]],["*.css",["${capture}.*.css","${capture}.map"]],["*.html",["${capture}.*.html"]],["*.htm",["${capture}.*.htm"]],["*.less",["${capture}.*.less","${capture}.css"]],["*.scss",["${capture}.*.scss","${capture}.css"]],["*.sass",["${capture}.css"]],["*.styl",["${capture}.css"]],["*.coffee",["${capture}.*.coffee","${capture}.js"]],["*.iced",["${capture}.*.iced","${capture}.js"]],["*.config",["${capture}.*.config"]],["*.cs",["${capture}.*.cs","${capture}.cs.d.ts"]],["*.vb",["${capture}.*.vb"]],["*.json",["${capture}.*.json"]],["*.md",["${capture}.html"]],["*.mdown",["${capture}.html"]],["*.markdown",["${capture}.html"]],["*.mdwn",["${capture}.html"]],["*.svg",["${capture}.svgz"]],["*.a",["${capture}.b"]],["*.b",["${capture}.a"]],["*.resx",["${capture}.designer.cs"]],["package.json",[".npmrc","npm-shrinkwrap.json","yarn.lock",".yarnclean",".yarnignore",".yarn-integrity",".yarnrc"]],["bower.json",[".bowerrc"]],["*-vsdoc.js",["${capture}.js"]],["*.tt",["${capture}.*"]]]),c=Array.from({length:5e4/6}).map((m,n)=>["file"+n+".js","file"+n+".map","file"+n+".css","file"+n+".ts","file"+n+".d.ts","file"+n+".jsx"]).flat(),o=performance.now();a.nest(c,"mydir");const d=performance.now();t(d-o<1e3,"too slow..."+(d-o))})});
