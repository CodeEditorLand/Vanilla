{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/test/browser/fileActions.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { incrementFileName } from '../../browser/fileActions.js';\n\nsuite('Files - Increment file name simple', () => {\n\n\ttest('Increment file name without any version', function () {\n\t\tconst name = 'test.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy.js');\n\t});\n\n\ttest('Increment file name with suffix version', function () {\n\t\tconst name = 'test copy.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy 2.js');\n\t});\n\n\ttest('Increment file name with suffix version with leading zeros', function () {\n\t\tconst name = 'test copy 005.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy 6.js');\n\t});\n\n\ttest('Increment file name with suffix version, too big number', function () {\n\t\tconst name = 'test copy 9007199254740992.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy 9007199254740992 copy.js');\n\t});\n\n\ttest('Increment file name with just version in name', function () {\n\t\tconst name = 'copy.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'copy copy.js');\n\t});\n\n\ttest('Increment file name with just version in name, v2', function () {\n\t\tconst name = 'copy 2.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'copy 2 copy.js');\n\t});\n\n\ttest('Increment file name without any extension or version', function () {\n\t\tconst name = 'test';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy');\n\t});\n\n\ttest('Increment file name without any extension or version, trailing dot', function () {\n\t\tconst name = 'test.';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy.');\n\t});\n\n\ttest('Increment file name without any extension or version, leading dot', function () {\n\t\tconst name = '.test';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, '.test copy');\n\t});\n\n\ttest('Increment file name without any extension or version, leading dot v2', function () {\n\t\tconst name = '..test';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, '. copy.test');\n\t});\n\n\ttest('Increment file name without any extension but with suffix version', function () {\n\t\tconst name = 'test copy 5';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy 6');\n\t});\n\n\ttest('Increment folder name without any version', function () {\n\t\tconst name = 'test';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy');\n\t});\n\n\ttest('Increment folder name with suffix version', function () {\n\t\tconst name = 'test copy';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy 2');\n\t});\n\n\ttest('Increment folder name with suffix version, leading zeros', function () {\n\t\tconst name = 'test copy 005';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy 6');\n\t});\n\n\ttest('Increment folder name with suffix version, too big number', function () {\n\t\tconst name = 'test copy 9007199254740992';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy 9007199254740992 copy');\n\t});\n\n\ttest('Increment folder name with just version in name', function () {\n\t\tconst name = 'copy';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'copy copy');\n\t});\n\n\ttest('Increment folder name with just version in name, v2', function () {\n\t\tconst name = 'copy 2';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'copy 2 copy');\n\t});\n\n\ttest('Increment folder name \"with extension\" but without any version', function () {\n\t\tconst name = 'test.js';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test.js copy');\n\t});\n\n\ttest('Increment folder name \"with extension\" and with suffix version', function () {\n\t\tconst name = 'test.js copy 5';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test.js copy 6');\n\t});\n\n\ttest('Increment file/folder name with suffix version, special case 1', function () {\n\t\tconst name = 'test copy 0';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy');\n\t});\n\n\ttest('Increment file/folder name with suffix version, special case 2', function () {\n\t\tconst name = 'test copy 1';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy 2');\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n\nsuite('Files - Increment file name smart', () => {\n\n\ttest('Increment file name without any version', function () {\n\t\tconst name = 'test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.1.js');\n\t});\n\n\ttest('Increment folder name without any version', function () {\n\t\tconst name = 'test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test.1');\n\t});\n\n\ttest('Increment file name with suffix version', function () {\n\t\tconst name = 'test.1.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.2.js');\n\t});\n\n\ttest('Increment file name with suffix version with trailing zeros', function () {\n\t\tconst name = 'test.001.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.002.js');\n\t});\n\n\ttest('Increment file name with suffix version with trailing zeros, changing length', function () {\n\t\tconst name = 'test.009.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.010.js');\n\t});\n\n\ttest('Increment file name with suffix version with `-` as separator', function () {\n\t\tconst name = 'test-1.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test-2.js');\n\t});\n\n\ttest('Increment file name with suffix version with `-` as separator, trailing zeros', function () {\n\t\tconst name = 'test-001.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test-002.js');\n\t});\n\n\ttest('Increment file name with suffix version with `-` as separator, trailing zeros, changnig length', function () {\n\t\tconst name = 'test-099.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test-100.js');\n\t});\n\n\ttest('Increment file name with suffix version with `_` as separator', function () {\n\t\tconst name = 'test_1.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test_2.js');\n\t});\n\n\ttest('Increment folder name with suffix version', function () {\n\t\tconst name = 'test.1';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test.2');\n\t});\n\n\ttest('Increment folder name with suffix version, trailing zeros', function () {\n\t\tconst name = 'test.001';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test.002');\n\t});\n\n\ttest('Increment folder name with suffix version with `-` as separator', function () {\n\t\tconst name = 'test-1';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test-2');\n\t});\n\n\ttest('Increment folder name with suffix version with `_` as separator', function () {\n\t\tconst name = 'test_1';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test_2');\n\t});\n\n\ttest('Increment file name with suffix version, too big number', function () {\n\t\tconst name = 'test.9007199254740992.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.9007199254740992.1.js');\n\t});\n\n\ttest('Increment folder name with suffix version, too big number', function () {\n\t\tconst name = 'test.9007199254740992';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test.9007199254740992.1');\n\t});\n\n\ttest('Increment file name with prefix version', function () {\n\t\tconst name = '1.test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '2.test.js');\n\t});\n\n\ttest('Increment file name with just version in name', function () {\n\t\tconst name = '1.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '2.js');\n\t});\n\n\ttest('Increment file name with just version in name, too big number', function () {\n\t\tconst name = '9007199254740992.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '9007199254740992.1.js');\n\t});\n\n\ttest('Increment file name with prefix version, trailing zeros', function () {\n\t\tconst name = '001.test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '002.test.js');\n\t});\n\n\ttest('Increment file name with prefix version with `-` as separator', function () {\n\t\tconst name = '1-test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '2-test.js');\n\t});\n\n\ttest('Increment file name with prefix version with `_` as separator', function () {\n\t\tconst name = '1_test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '2_test.js');\n\t});\n\n\ttest('Increment file name with prefix version, too big number', function () {\n\t\tconst name = '9007199254740992.test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '9007199254740992.test.1.js');\n\t});\n\n\ttest('Increment file name with just version and no extension', function () {\n\t\tconst name = '001004';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '001005');\n\t});\n\n\ttest('Increment file name with just version and no extension, too big number', function () {\n\t\tconst name = '9007199254740992';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '9007199254740992.1');\n\t});\n\n\ttest('Increment file name with no extension and no version', function () {\n\t\tconst name = 'file';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'file1');\n\t});\n\n\ttest('Increment file name with no extension', function () {\n\t\tconst name = 'file1';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'file2');\n\t});\n\n\ttest('Increment file name with no extension, too big number', function () {\n\t\tconst name = 'file9007199254740992';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'file9007199254740992.1');\n\t});\n\n\ttest('Increment folder name with prefix version', function () {\n\t\tconst name = '1.test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, '2.test');\n\t});\n\n\ttest('Increment folder name with prefix version, too big number', function () {\n\t\tconst name = '9007199254740992.test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, '9007199254740992.test.1');\n\t});\n\n\ttest('Increment folder name with prefix version, trailing zeros', function () {\n\t\tconst name = '001.test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, '002.test');\n\t});\n\n\ttest('Increment folder name with prefix version  with `-` as separator', function () {\n\t\tconst name = '1-test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, '2-test');\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
