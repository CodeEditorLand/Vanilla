{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/files/test/browser/editorAutoSave.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Event } from '../../../../../base/common/event.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite, toResource } from '../../../../../base/test/common/utils.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { TestFilesConfigurationService, workbenchInstantiationService, TestServiceAccessor, registerTestFileEditor, createEditorPart, TestEnvironmentService, TestFileService, TestTextResourceConfigurationService } from '../../../../test/browser/workbenchTestServices.js';\nimport { ITextFileEditorModel } from '../../../../services/textfile/common/textfiles.js';\nimport { IEditorGroupsService } from '../../../../services/editor/common/editorGroupsService.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { TextFileEditorModelManager } from '../../../../services/textfile/common/textFileEditorModelManager.js';\nimport { EditorService } from '../../../../services/editor/browser/editorService.js';\nimport { EditorAutoSave } from '../../../../browser/parts/editor/editorAutoSave.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IFilesConfigurationService } from '../../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { MockContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { DEFAULT_EDITOR_ASSOCIATION } from '../../../../common/editor.js';\nimport { TestWorkspace } from '../../../../../platform/workspace/test/common/testWorkspace.js';\nimport { TestContextService, TestMarkerService } from '../../../../test/common/workbenchTestServices.js';\nimport { UriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\n\nsuite('EditorAutoSave', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tdisposables.add(registerTestFileEditor());\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tasync function createEditorAutoSave(autoSaveConfig: object): Promise<TestServiceAccessor> {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst configurationService = new TestConfigurationService();\n\t\tconfigurationService.setUserConfiguration('files', autoSaveConfig);\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tinstantiationService.stub(IAccessibilitySignalService, {\n\t\t\tplaySignal: async () => { },\n\t\t\tisSoundEnabled(signal: unknown) { return false; },\n\t\t} as any);\n\t\tinstantiationService.stub(IFilesConfigurationService, disposables.add(new TestFilesConfigurationService(\n\t\t\t<IContextKeyService>instantiationService.createInstance(MockContextKeyService),\n\t\t\tconfigurationService,\n\t\t\tnew TestContextService(TestWorkspace),\n\t\t\tTestEnvironmentService,\n\t\t\tdisposables.add(new UriIdentityService(disposables.add(new TestFileService()))),\n\t\t\tdisposables.add(new TestFileService()),\n\t\t\tnew TestMarkerService(),\n\t\t\tnew TestTextResourceConfigurationService(configurationService)\n\t\t)));\n\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\n\t\tconst editorService: EditorService = disposables.add(instantiationService.createInstance(EditorService, undefined));\n\t\tinstantiationService.stub(IEditorService, editorService);\n\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\tdisposables.add((<TextFileEditorModelManager>accessor.textFileService.files));\n\n\t\tdisposables.add(instantiationService.createInstance(EditorAutoSave));\n\n\t\treturn accessor;\n\t}\n\n\ttest('editor auto saves after short delay if configured', async function () {\n\t\tconst accessor = await createEditorAutoSave({ autoSave: 'afterDelay', autoSaveDelay: 1 });\n\n\t\tconst resource = toResource.call(this, '/path/index.txt');\n\n\t\tconst model: ITextFileEditorModel = disposables.add(await accessor.textFileService.files.resolve(resource));\n\t\tmodel.textEditorModel?.setValue('Super Good');\n\n\t\tassert.ok(model.isDirty());\n\n\t\tawait awaitModelSaved(model);\n\n\t\tassert.strictEqual(model.isDirty(), false);\n\t});\n\n\ttest('editor auto saves on focus change if configured', async function () {\n\t\tconst accessor = await createEditorAutoSave({ autoSave: 'onFocusChange' });\n\n\t\tconst resource = toResource.call(this, '/path/index.txt');\n\t\tawait accessor.editorService.openEditor({ resource, options: { override: DEFAULT_EDITOR_ASSOCIATION.id } });\n\n\t\tconst model: ITextFileEditorModel = disposables.add(await accessor.textFileService.files.resolve(resource));\n\t\tmodel.textEditorModel?.setValue('Super Good');\n\n\t\tassert.ok(model.isDirty());\n\n\t\tconst editorPane = await accessor.editorService.openEditor({ resource: toResource.call(this, '/path/index_other.txt') });\n\n\t\tawait awaitModelSaved(model);\n\n\t\tassert.strictEqual(model.isDirty(), false);\n\n\t\tawait editorPane?.group.closeAllEditors();\n\t});\n\n\tfunction awaitModelSaved(model: ITextFileEditorModel): Promise<void> {\n\t\treturn Event.toPromise(Event.once(model.onDidChangeDirty));\n\t}\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
