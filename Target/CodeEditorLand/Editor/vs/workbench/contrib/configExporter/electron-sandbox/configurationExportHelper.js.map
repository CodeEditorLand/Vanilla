{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/configExporter/electron-sandbox/configurationExportHelper.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tExtensions,\n\ttype IConfigurationNode,\n\ttype IConfigurationPropertySchema,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { INativeWorkbenchEnvironmentService } from \"../../../services/environment/electron-sandbox/environmentService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\n\ninterface IExportedConfigurationNode {\n\tname: string;\n\tdescription: string;\n\tdefault: any;\n\ttype?: string | string[];\n\tenum?: any[];\n\tenumDescriptions?: string[];\n}\n\ninterface IConfigurationExport {\n\tsettings: IExportedConfigurationNode[];\n\tbuildTime: number;\n\tcommit?: string;\n\tbuildNumber?: number;\n}\n\nexport class DefaultConfigurationExportHelper {\n\tconstructor(\n\t\t@INativeWorkbenchEnvironmentService\n\t\tenvironmentService: INativeWorkbenchEnvironmentService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tconst exportDefaultConfigurationPath =\n\t\t\tenvironmentService.args[\"export-default-configuration\"];\n\t\tif (exportDefaultConfigurationPath) {\n\t\t\tthis.writeConfigModelAndQuit(\n\t\t\t\tURI.file(exportDefaultConfigurationPath),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async writeConfigModelAndQuit(target: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\t\t\tawait this.writeConfigModel(target);\n\t\t} finally {\n\t\t\tthis.commandService.executeCommand(\"workbench.action.quit\");\n\t\t}\n\t}\n\n\tprivate async writeConfigModel(target: URI): Promise<void> {\n\t\tconst config = this.getConfigModel();\n\n\t\tconst resultString = JSON.stringify(config, undefined, \"  \");\n\t\tawait this.fileService.writeFile(\n\t\t\ttarget,\n\t\t\tVSBuffer.fromString(resultString),\n\t\t);\n\t}\n\n\tprivate getConfigModel(): IConfigurationExport {\n\t\tconst configRegistry = Registry.as<IConfigurationRegistry>(\n\t\t\tExtensions.Configuration,\n\t\t);\n\t\tconst configurations = configRegistry.getConfigurations().slice();\n\t\tconst settings: IExportedConfigurationNode[] = [];\n\t\tconst processedNames = new Set<string>();\n\n\t\tconst processProperty = (\n\t\t\tname: string,\n\t\t\tprop: IConfigurationPropertySchema,\n\t\t) => {\n\t\t\tif (processedNames.has(name)) {\n\t\t\t\tconsole.warn(\"Setting is registered twice: \" + name);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tprocessedNames.add(name);\n\t\t\tconst propDetails: IExportedConfigurationNode = {\n\t\t\t\tname,\n\t\t\t\tdescription: prop.description || prop.markdownDescription || \"\",\n\t\t\t\tdefault: prop.default,\n\t\t\t\ttype: prop.type,\n\t\t\t};\n\n\t\t\tif (prop.enum) {\n\t\t\t\tpropDetails.enum = prop.enum;\n\t\t\t}\n\n\t\t\tif (prop.enumDescriptions || prop.markdownEnumDescriptions) {\n\t\t\t\tpropDetails.enumDescriptions =\n\t\t\t\t\tprop.enumDescriptions || prop.markdownEnumDescriptions;\n\t\t\t}\n\n\t\t\tsettings.push(propDetails);\n\t\t};\n\n\t\tconst processConfig = (config: IConfigurationNode) => {\n\t\t\tif (config.properties) {\n\t\t\t\tfor (const name in config.properties) {\n\t\t\t\t\tprocessProperty(name, config.properties[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfig.allOf?.forEach(processConfig);\n\t\t};\n\n\t\tconfigurations.forEach(processConfig);\n\n\t\tconst excludedProps =\n\t\t\tconfigRegistry.getExcludedConfigurationProperties();\n\t\tfor (const name in excludedProps) {\n\t\t\tprocessProperty(name, excludedProps[name]);\n\t\t}\n\n\t\tconst result: IConfigurationExport = {\n\t\t\tsettings: settings.sort((a, b) => a.name.localeCompare(b.name)),\n\t\t\tbuildTime: Date.now(),\n\t\t\tcommit: this.productService.commit,\n\t\t\tbuildNumber: this.productService.settingsSearchBuildId,\n\t\t};\n\n\t\treturn result;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,OAIM;AACP,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AACzB,SAAS,0CAA0C;AACnD,SAAS,yBAAyB;AAkB3B,IAAM,mCAAN,MAAuC;AAAA,EAC7C,YAEC,oBACoC,kBACF,gBACH,aACG,gBACjC;AAJmC;AACF;AACH;AACG;AAElC,UAAM,iCACL,mBAAmB,KAAK,8BAA8B;AACvD,QAAI,gCAAgC;AACnC,WAAK;AAAA,QACJ,IAAI,KAAK,8BAA8B;AAAA,MACxC;AAAA,IACD;AAAA,EACD;AAAA,EApDD,OAoC8C;AAAA;AAAA;AAAA,EAkB7C,MAAc,wBAAwB,QAA4B;AACjE,QAAI;AACH,YAAM,KAAK,iBAAiB,kCAAkC;AAC9D,YAAM,KAAK,iBAAiB,MAAM;AAAA,IACnC,UAAE;AACD,WAAK,eAAe,eAAe,uBAAuB;AAAA,IAC3D;AAAA,EACD;AAAA,EAEA,MAAc,iBAAiB,QAA4B;AAC1D,UAAM,SAAS,KAAK,eAAe;AAEnC,UAAM,eAAe,KAAK,UAAU,QAAQ,QAAW,IAAI;AAC3D,UAAM,KAAK,YAAY;AAAA,MACtB;AAAA,MACA,SAAS,WAAW,YAAY;AAAA,IACjC;AAAA,EACD;AAAA,EAEQ,iBAAuC;AAC9C,UAAM,iBAAiB,SAAS;AAAA,MAC/B,WAAW;AAAA,IACZ;AACA,UAAM,iBAAiB,eAAe,kBAAkB,EAAE,MAAM;AAChE,UAAM,WAAyC,CAAC;AAChD,UAAM,iBAAiB,oBAAI,IAAY;AAEvC,UAAM,kBAAkB,wBACvB,MACA,SACI;AACJ,UAAI,eAAe,IAAI,IAAI,GAAG;AAC7B,gBAAQ,KAAK,kCAAkC,IAAI;AACnD;AAAA,MACD;AAEA,qBAAe,IAAI,IAAI;AACvB,YAAM,cAA0C;AAAA,QAC/C;AAAA,QACA,aAAa,KAAK,eAAe,KAAK,uBAAuB;AAAA,QAC7D,SAAS,KAAK;AAAA,QACd,MAAM,KAAK;AAAA,MACZ;AAEA,UAAI,KAAK,MAAM;AACd,oBAAY,OAAO,KAAK;AAAA,MACzB;AAEA,UAAI,KAAK,oBAAoB,KAAK,0BAA0B;AAC3D,oBAAY,mBACX,KAAK,oBAAoB,KAAK;AAAA,MAChC;AAEA,eAAS,KAAK,WAAW;AAAA,IAC1B,GA3BwB;AA6BxB,UAAM,gBAAgB,wBAAC,WAA+B;AACrD,UAAI,OAAO,YAAY;AACtB,mBAAW,QAAQ,OAAO,YAAY;AACrC,0BAAgB,MAAM,OAAO,WAAW,IAAI,CAAC;AAAA,QAC9C;AAAA,MACD;AAEA,aAAO,OAAO,QAAQ,aAAa;AAAA,IACpC,GARsB;AAUtB,mBAAe,QAAQ,aAAa;AAEpC,UAAM,gBACL,eAAe,mCAAmC;AACnD,eAAW,QAAQ,eAAe;AACjC,sBAAgB,MAAM,cAAc,IAAI,CAAC;AAAA,IAC1C;AAEA,UAAM,SAA+B;AAAA,MACpC,UAAU,SAAS,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AAAA,MAC9D,WAAW,KAAK,IAAI;AAAA,MACpB,QAAQ,KAAK,eAAe;AAAA,MAC5B,aAAa,KAAK,eAAe;AAAA,IAClC;AAEA,WAAO;AAAA,EACR;AACD;AArGa,mCAAN;AAAA,EAEJ;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
