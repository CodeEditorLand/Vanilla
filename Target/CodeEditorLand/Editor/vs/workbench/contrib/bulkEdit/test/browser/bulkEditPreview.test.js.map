{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/bulkEdit/test/browser/bulkEditPreview.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Event } from '../../../../../base/common/event.js';\nimport { IFileService } from '../../../../../platform/files/common/files.js';\nimport { mock } from '../../../../test/common/workbenchTestServices.js';\nimport { InstantiationService } from '../../../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { BulkFileOperations } from '../../browser/preview/bulkEditPreview.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { ResourceFileEdit, ResourceTextEdit } from '../../../../../editor/browser/services/bulkEditService.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('BulkEditPreview', function () {\n\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet instaService: IInstantiationService;\n\n\tsetup(function () {\n\n\t\tconst fileService: IFileService = new class extends mock<IFileService>() {\n\t\t\toverride onDidFilesChange = Event.None;\n\t\t\toverride async exists() {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\tconst modelService: IModelService = new class extends mock<IModelService>() {\n\t\t\toverride getModel() {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\toverride getModels() {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\n\t\tinstaService = new InstantiationService(new ServiceCollection(\n\t\t\t[IFileService, fileService],\n\t\t\t[IModelService, modelService],\n\t\t));\n\t});\n\n\ttest('one needsConfirmation unchecks all of file', async function () {\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'cat1', needsConfirmation: true }),\n\t\t\tnew ResourceFileEdit(URI.parse('some:///uri1'), URI.parse('some:///uri2'), undefined, { label: 'cat2', needsConfirmation: false }),\n\t\t];\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\t\tstore.add(ops);\n\t\tassert.strictEqual(ops.fileOperations.length, 1);\n\t\tassert.strictEqual(ops.checked.isChecked(edits[0]), false);\n\t});\n\n\ttest('has categories', async function () {\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'uri1', needsConfirmation: true }),\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri2'), undefined, { label: 'uri2', needsConfirmation: false }),\n\t\t];\n\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\t\tstore.add(ops);\n\t\tassert.strictEqual(ops.categories.length, 2);\n\t\tassert.strictEqual(ops.categories[0].metadata.label, 'uri1'); // unconfirmed!\n\t\tassert.strictEqual(ops.categories[1].metadata.label, 'uri2');\n\t});\n\n\ttest('has not categories', async function () {\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'uri1', needsConfirmation: true }),\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri2'), undefined, { label: 'uri1', needsConfirmation: false }),\n\t\t];\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\t\tstore.add(ops);\n\t\tassert.strictEqual(ops.categories.length, 1);\n\t\tassert.strictEqual(ops.categories[0].metadata.label, 'uri1'); // unconfirmed!\n\t\tassert.strictEqual(ops.categories[0].metadata.label, 'uri1');\n\t});\n\n\ttest('category selection', async function () {\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'C1', needsConfirmation: false }),\n\t\t\tnew ResourceTextEdit(URI.parse('some:///uri2'), { text: 'foo', range: new Range(1, 1, 1, 1) }, undefined, { label: 'C2', needsConfirmation: false }),\n\t\t];\n\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\t\tstore.add(ops);\n\n\t\tassert.strictEqual(ops.checked.isChecked(edits[0]), true);\n\t\tassert.strictEqual(ops.checked.isChecked(edits[1]), true);\n\n\t\tassert.ok(edits === ops.getWorkspaceEdit());\n\n\t\t// NOT taking to create, but the invalid text edit will\n\t\t// go through\n\t\tops.checked.updateChecked(edits[0], false);\n\t\tconst newEdits = ops.getWorkspaceEdit();\n\t\tassert.ok(edits !== newEdits);\n\n\t\tassert.strictEqual(edits.length, 2);\n\t\tassert.strictEqual(newEdits.length, 1);\n\t});\n\n\ttest('fix bad metadata', async function () {\n\n\t\t// bogous edit that wants creation to be confirmed, but not it's textedit-child...\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'C1', needsConfirmation: true }),\n\t\t\tnew ResourceTextEdit(URI.parse('some:///uri1'), { text: 'foo', range: new Range(1, 1, 1, 1) }, undefined, { label: 'C2', needsConfirmation: false })\n\t\t];\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\t\tstore.add(ops);\n\n\t\tassert.strictEqual(ops.checked.isChecked(edits[0]), false);\n\t\tassert.strictEqual(ops.checked.isChecked(edits[1]), false);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
