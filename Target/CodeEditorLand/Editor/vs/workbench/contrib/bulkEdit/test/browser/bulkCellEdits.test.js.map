{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/bulkEdit/test/browser/bulkCellEdits.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mockObject } from '../../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IProgress } from '../../../../../platform/progress/common/progress.js';\nimport { UndoRedoGroup, UndoRedoSource } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { BulkCellEdits, ResourceNotebookCellEdit } from '../../browser/bulkCellEdits.js';\nimport { NotebookTextModel } from '../../../notebook/common/model/notebookTextModel.js';\nimport { CellEditType, CellUri, IResolvedNotebookEditorModel } from '../../../notebook/common/notebookCommon.js';\nimport { INotebookEditorModelResolverService } from '../../../notebook/common/notebookEditorModelResolverService.js';\nimport { TestEditorService } from '../../../../test/browser/workbenchTestServices.js';\n\nsuite('BulkCellEdits', function () {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tasync function runTest(inputUri: URI, resolveUri: URI) {\n\t\tconst progress: IProgress<void> = { report: _ => { } };\n\t\tconst editorService = store.add(new TestEditorService());\n\n\t\tconst notebook = mockObject<NotebookTextModel>()();\n\t\tnotebook.uri.returns(URI.file('/project/notebook.ipynb'));\n\n\t\tconst notebookEditorModel = mockObject<IResolvedNotebookEditorModel>()({ notebook: notebook as any });\n\t\tnotebookEditorModel.isReadonly.returns(false);\n\n\t\tconst notebookService = mockObject<INotebookEditorModelResolverService>()();\n\t\tnotebookService.resolve.returns({ object: notebookEditorModel, dispose: () => { } });\n\n\t\tconst edits = [\n\t\t\tnew ResourceNotebookCellEdit(inputUri, { index: 0, count: 1, editType: CellEditType.Replace, cells: [] })\n\t\t];\n\t\tconst bce = new BulkCellEdits(new UndoRedoGroup(), new UndoRedoSource(), progress, CancellationToken.None, edits, editorService, notebookService as any);\n\t\tawait bce.apply();\n\n\t\tconst resolveArgs = notebookService.resolve.args[0];\n\t\tassert.strictEqual(resolveArgs[0].toString(), resolveUri.toString());\n\t}\n\n\tconst notebookUri = URI.file('/foo/bar.ipynb');\n\ttest('works with notebook URI', async () => {\n\t\tawait runTest(notebookUri, notebookUri);\n\t});\n\n\ttest('maps cell URI to notebook URI', async () => {\n\t\tawait runTest(CellUri.generate(notebookUri, 5), notebookUri);\n\t});\n\n\ttest('throws for invalid cell URI', async () => {\n\t\tconst badCellUri = CellUri.generate(notebookUri, 5).with({ fragment: '' });\n\t\tawait assert.rejects(async () => await runTest(badCellUri, notebookUri));\n\t});\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,yBAAyB;AAClC,SAAS,WAAW;AACpB,SAAS,kBAAkB;AAC3B,SAAS,+CAA+C;AACxD,SAAS,iBAAiB;AAC1B,SAAS,eAAe,sBAAsB;AAC9C,SAAS,eAAe,gCAAgC;AACxD,SAAS,yBAAyB;AAClC,SAAS,cAAc,SAAS,oCAAoC;AACpE,SAAS,2CAA2C;AACpD,SAAS,yBAAyB;AAElC,MAAM,iBAAiB,WAAY;AAClC,QAAM,QAAQ,wCAAwC;AAEtD,iBAAe,QAAQ,UAAe,YAAiB;AACtD,UAAM,WAA4B,EAAE,QAAQ,8BAAK;AAAA,IAAE,GAAP,UAAS;AACrD,UAAM,gBAAgB,MAAM,IAAI,IAAI,kBAAkB,CAAC;AAEvD,UAAM,WAAW,WAA8B,EAAE;AACjD,aAAS,IAAI,QAAQ,IAAI,KAAK,yBAAyB,CAAC;AAExD,UAAM,sBAAsB,WAAyC,EAAE,EAAE,SAA0B,CAAC;AACpG,wBAAoB,WAAW,QAAQ,KAAK;AAE5C,UAAM,kBAAkB,WAAgD,EAAE;AAC1E,oBAAgB,QAAQ,QAAQ,EAAE,QAAQ,qBAAqB,SAAS,6BAAM;AAAA,IAAE,GAAR,WAAU,CAAC;AAEnF,UAAM,QAAQ;AAAA,MACb,IAAI,yBAAyB,UAAU,EAAE,OAAO,GAAG,OAAO,GAAG,UAAU,aAAa,SAAS,OAAO,CAAC,EAAE,CAAC;AAAA,IACzG;AACA,UAAM,MAAM,IAAI,cAAc,IAAI,cAAc,GAAG,IAAI,eAAe,GAAG,UAAU,kBAAkB,MAAM,OAAO,eAAe,eAAsB;AACvJ,UAAM,IAAI,MAAM;AAEhB,UAAM,cAAc,gBAAgB,QAAQ,KAAK,CAAC;AAClD,WAAO,YAAY,YAAY,CAAC,EAAE,SAAS,GAAG,WAAW,SAAS,CAAC;AAAA,EACpE;AArBe;AAuBf,QAAM,cAAc,IAAI,KAAK,gBAAgB;AAC7C,OAAK,2BAA2B,YAAY;AAC3C,UAAM,QAAQ,aAAa,WAAW;AAAA,EACvC,CAAC;AAED,OAAK,iCAAiC,YAAY;AACjD,UAAM,QAAQ,QAAQ,SAAS,aAAa,CAAC,GAAG,WAAW;AAAA,EAC5D,CAAC;AAED,OAAK,+BAA+B,YAAY;AAC/C,UAAM,aAAa,QAAQ,SAAS,aAAa,CAAC,EAAE,KAAK,EAAE,UAAU,GAAG,CAAC;AACzE,UAAM,OAAO,QAAQ,YAAY,MAAM,QAAQ,YAAY,WAAW,CAAC;AAAA,EACxE,CAAC;AACF,CAAC;",
  "names": []
}
