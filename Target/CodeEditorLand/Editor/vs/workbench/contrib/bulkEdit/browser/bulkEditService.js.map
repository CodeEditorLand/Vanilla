{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/bulkEdit/browser/bulkEditService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { LinkedList } from \"../../../../base/common/linkedList.js\";\nimport { ResourceMap, ResourceSet } from \"../../../../base/common/map.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport {\n\ttype ICodeEditor,\n\tisCodeEditor,\n\tisDiffEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\ttype IBulkEditOptions,\n\ttype IBulkEditPreviewHandler,\n\ttype IBulkEditResult,\n\tIBulkEditService,\n\ttype ResourceEdit,\n\tResourceFileEdit,\n\tResourceTextEdit,\n} from \"../../../../editor/browser/services/bulkEditService.js\";\nimport { EditorOption } from \"../../../../editor/common/config/editorOptions.js\";\nimport type { WorkspaceEdit } from \"../../../../editor/common/languages.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\ttype IProgress,\n\ttype IProgressStep,\n\tProgress,\n} from \"../../../../platform/progress/common/progress.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tUndoRedoGroup,\n\ttype UndoRedoSource,\n} from \"../../../../platform/undoRedo/common/undoRedo.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tILifecycleService,\n\tShutdownReason,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IWorkingCopyService } from \"../../../services/workingCopy/common/workingCopyService.js\";\nimport { BulkCellEdits, ResourceNotebookCellEdit } from \"./bulkCellEdits.js\";\nimport { BulkFileEdits } from \"./bulkFileEdits.js\";\nimport { BulkTextEdits } from \"./bulkTextEdits.js\";\n\nfunction liftEdits(edits: ResourceEdit[]): ResourceEdit[] {\n\treturn edits.map((edit) => {\n\t\tif (ResourceTextEdit.is(edit)) {\n\t\t\treturn ResourceTextEdit.lift(edit);\n\t\t}\n\t\tif (ResourceFileEdit.is(edit)) {\n\t\t\treturn ResourceFileEdit.lift(edit);\n\t\t}\n\t\tif (ResourceNotebookCellEdit.is(edit)) {\n\t\t\treturn ResourceNotebookCellEdit.lift(edit);\n\t\t}\n\t\tthrow new Error(\"Unsupported edit\");\n\t});\n}\n\nclass BulkEdit {\n\tconstructor(\n\t\tprivate readonly _label: string | undefined,\n\t\tprivate readonly _code: string | undefined,\n\t\tprivate readonly _editor: ICodeEditor | undefined,\n\t\tprivate readonly _progress: IProgress<IProgressStep>,\n\t\tprivate readonly _token: CancellationToken,\n\t\tprivate readonly _edits: ResourceEdit[],\n\t\tprivate readonly _undoRedoGroup: UndoRedoGroup,\n\t\tprivate readonly _undoRedoSource: UndoRedoSource | undefined,\n\t\tprivate readonly _confirmBeforeUndo: boolean,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\n\t}\n\n\tariaMessage(): string {\n\t\tconst otherResources = new ResourceMap<boolean>();\n\t\tconst textEditResources = new ResourceMap<boolean>();\n\t\tlet textEditCount = 0;\n\t\tfor (const edit of this._edits) {\n\t\t\tif (edit instanceof ResourceTextEdit) {\n\t\t\t\ttextEditCount += 1;\n\t\t\t\ttextEditResources.set(edit.resource, true);\n\t\t\t} else if (edit instanceof ResourceFileEdit) {\n\t\t\t\totherResources.set(edit.oldResource ?? edit.newResource!, true);\n\t\t\t}\n\t\t}\n\t\tif (this._edits.length === 0) {\n\t\t\treturn localize(\"summary.0\", \"Made no edits\");\n\t\t} else if (otherResources.size === 0) {\n\t\t\tif (textEditCount > 1 && textEditResources.size > 1) {\n\t\t\t\treturn localize(\n\t\t\t\t\t\"summary.nm\",\n\t\t\t\t\t\"Made {0} text edits in {1} files\",\n\t\t\t\t\ttextEditCount,\n\t\t\t\t\ttextEditResources.size,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn localize(\n\t\t\t\t\t\"summary.n0\",\n\t\t\t\t\t\"Made {0} text edits in one file\",\n\t\t\t\t\ttextEditCount,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\treturn localize(\n\t\t\t\t\"summary.textFiles\",\n\t\t\t\t\"Made {0} text edits in {1} files, also created or deleted {2} files\",\n\t\t\t\ttextEditCount,\n\t\t\t\ttextEditResources.size,\n\t\t\t\totherResources.size,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync perform(): Promise<readonly URI[]> {\n\t\tif (this._edits.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst ranges: number[] = [1];\n\t\tfor (let i = 1; i < this._edits.length; i++) {\n\t\t\tif (\n\t\t\t\tObject.getPrototypeOf(this._edits[i - 1]) ===\n\t\t\t\tObject.getPrototypeOf(this._edits[i])\n\t\t\t) {\n\t\t\t\tranges[ranges.length - 1]++;\n\t\t\t} else {\n\t\t\t\tranges.push(1);\n\t\t\t}\n\t\t}\n\n\t\t// Show infinte progress when there is only 1 item since we do not know how long it takes\n\t\tconst increment = this._edits.length > 1 ? 0 : undefined;\n\t\tthis._progress.report({ increment, total: 100 });\n\t\t// Increment by percentage points since progress API expects that\n\t\tconst progress: IProgress<void> = {\n\t\t\treport: (_) =>\n\t\t\t\tthis._progress.report({ increment: 100 / this._edits.length }),\n\t\t};\n\n\t\tconst resources: (readonly URI[])[] = [];\n\t\tlet index = 0;\n\t\tfor (const range of ranges) {\n\t\t\tif (this._token.isCancellationRequested) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst group = this._edits.slice(index, index + range);\n\t\t\tif (group[0] instanceof ResourceFileEdit) {\n\t\t\t\tresources.push(\n\t\t\t\t\tawait this._performFileEdits(\n\t\t\t\t\t\t<ResourceFileEdit[]>group,\n\t\t\t\t\t\tthis._undoRedoGroup,\n\t\t\t\t\t\tthis._undoRedoSource,\n\t\t\t\t\t\tthis._confirmBeforeUndo,\n\t\t\t\t\t\tprogress,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else if (group[0] instanceof ResourceTextEdit) {\n\t\t\t\tresources.push(\n\t\t\t\t\tawait this._performTextEdits(\n\t\t\t\t\t\t<ResourceTextEdit[]>group,\n\t\t\t\t\t\tthis._undoRedoGroup,\n\t\t\t\t\t\tthis._undoRedoSource,\n\t\t\t\t\t\tprogress,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else if (group[0] instanceof ResourceNotebookCellEdit) {\n\t\t\t\tresources.push(\n\t\t\t\t\tawait this._performCellEdits(\n\t\t\t\t\t\t<ResourceNotebookCellEdit[]>group,\n\t\t\t\t\t\tthis._undoRedoGroup,\n\t\t\t\t\t\tthis._undoRedoSource,\n\t\t\t\t\t\tprogress,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"UNKNOWN EDIT\");\n\t\t\t}\n\t\t\tindex = index + range;\n\t\t}\n\n\t\treturn resources.flat();\n\t}\n\n\tprivate async _performFileEdits(\n\t\tedits: ResourceFileEdit[],\n\t\tundoRedoGroup: UndoRedoGroup,\n\t\tundoRedoSource: UndoRedoSource | undefined,\n\t\tconfirmBeforeUndo: boolean,\n\t\tprogress: IProgress<void>,\n\t): Promise<readonly URI[]> {\n\t\tthis._logService.debug(\"_performFileEdits\", JSON.stringify(edits));\n\t\tconst model = this._instaService.createInstance(\n\t\t\tBulkFileEdits,\n\t\t\tthis._label || localize(\"workspaceEdit\", \"Workspace Edit\"),\n\t\t\tthis._code || \"undoredo.workspaceEdit\",\n\t\t\tundoRedoGroup,\n\t\t\tundoRedoSource,\n\t\t\tconfirmBeforeUndo,\n\t\t\tprogress,\n\t\t\tthis._token,\n\t\t\tedits,\n\t\t);\n\t\treturn await model.apply();\n\t}\n\n\tprivate async _performTextEdits(\n\t\tedits: ResourceTextEdit[],\n\t\tundoRedoGroup: UndoRedoGroup,\n\t\tundoRedoSource: UndoRedoSource | undefined,\n\t\tprogress: IProgress<void>,\n\t): Promise<readonly URI[]> {\n\t\tthis._logService.debug(\"_performTextEdits\", JSON.stringify(edits));\n\t\tconst model = this._instaService.createInstance(\n\t\t\tBulkTextEdits,\n\t\t\tthis._label || localize(\"workspaceEdit\", \"Workspace Edit\"),\n\t\t\tthis._code || \"undoredo.workspaceEdit\",\n\t\t\tthis._editor,\n\t\t\tundoRedoGroup,\n\t\t\tundoRedoSource,\n\t\t\tprogress,\n\t\t\tthis._token,\n\t\t\tedits,\n\t\t);\n\t\treturn await model.apply();\n\t}\n\n\tprivate async _performCellEdits(\n\t\tedits: ResourceNotebookCellEdit[],\n\t\tundoRedoGroup: UndoRedoGroup,\n\t\tundoRedoSource: UndoRedoSource | undefined,\n\t\tprogress: IProgress<void>,\n\t): Promise<readonly URI[]> {\n\t\tthis._logService.debug(\"_performCellEdits\", JSON.stringify(edits));\n\t\tconst model = this._instaService.createInstance(\n\t\t\tBulkCellEdits,\n\t\t\tundoRedoGroup,\n\t\t\tundoRedoSource,\n\t\t\tprogress,\n\t\t\tthis._token,\n\t\t\tedits,\n\t\t);\n\t\treturn await model.apply();\n\t}\n}\n\nexport class BulkEditService implements IBulkEditService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _activeUndoRedoGroups = new LinkedList<UndoRedoGroup>();\n\tprivate _previewHandler?: IBulkEditPreviewHandler;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILifecycleService private readonly _lifecycleService: ILifecycleService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IWorkingCopyService private readonly _workingCopyService: IWorkingCopyService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t) { }\n\n\tsetPreviewHandler(handler: IBulkEditPreviewHandler): IDisposable {\n\t\tthis._previewHandler = handler;\n\t\treturn toDisposable(() => {\n\t\t\tif (this._previewHandler === handler) {\n\t\t\t\tthis._previewHandler = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\thasPreviewHandler(): boolean {\n\t\treturn Boolean(this._previewHandler);\n\t}\n\n\tasync apply(\n\t\teditsIn: ResourceEdit[] | WorkspaceEdit,\n\t\toptions?: IBulkEditOptions,\n\t): Promise<IBulkEditResult> {\n\t\tlet edits = liftEdits(Array.isArray(editsIn) ? editsIn : editsIn.edits);\n\n\t\tif (edits.length === 0) {\n\t\t\treturn {\n\t\t\t\tariaSummary: localize(\"nothing\", \"Made no edits\"),\n\t\t\t\tisApplied: false,\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis._previewHandler &&\n\t\t\t(options?.showPreview ||\n\t\t\t\tedits.some((value) => value.metadata?.needsConfirmation))\n\t\t) {\n\t\t\tedits = await this._previewHandler(edits, options);\n\t\t}\n\n\t\tlet codeEditor = options?.editor;\n\t\t// try to find code editor\n\t\tif (!codeEditor) {\n\t\t\tconst candidate = this._editorService.activeTextEditorControl;\n\t\t\tif (isCodeEditor(candidate)) {\n\t\t\t\tcodeEditor = candidate;\n\t\t\t} else if (isDiffEditor(candidate)) {\n\t\t\t\tcodeEditor = candidate.getModifiedEditor();\n\t\t\t}\n\t\t}\n\n\t\tif (codeEditor && codeEditor.getOption(EditorOption.readOnly)) {\n\t\t\t// If the code editor is readonly still allow bulk edits to be applied #68549\n\t\t\tcodeEditor = undefined;\n\t\t}\n\n\t\t// undo-redo-group: if a group id is passed then try to find it\n\t\t// in the list of active edits. otherwise (or when not found)\n\t\t// create a separate undo-redo-group\n\t\tlet undoRedoGroup: UndoRedoGroup | undefined;\n\t\tlet undoRedoGroupRemove = () => {};\n\t\tif (typeof options?.undoRedoGroupId === \"number\") {\n\t\t\tfor (const candidate of this._activeUndoRedoGroups) {\n\t\t\t\tif (candidate.id === options.undoRedoGroupId) {\n\t\t\t\t\tundoRedoGroup = candidate;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!undoRedoGroup) {\n\t\t\tundoRedoGroup = new UndoRedoGroup();\n\t\t\tundoRedoGroupRemove =\n\t\t\t\tthis._activeUndoRedoGroups.push(undoRedoGroup);\n\t\t}\n\n\t\tconst label = options?.quotableLabel || options?.label;\n\t\tconst bulkEdit = this._instaService.createInstance(\n\t\t\tBulkEdit,\n\t\t\tlabel,\n\t\t\toptions?.code,\n\t\t\tcodeEditor,\n\t\t\toptions?.progress ?? Progress.None,\n\t\t\toptions?.token ?? CancellationToken.None,\n\t\t\tedits,\n\t\t\tundoRedoGroup,\n\t\t\toptions?.undoRedoSource,\n\t\t\t!!options?.confirmBeforeUndo,\n\t\t);\n\n\t\tlet listener: IDisposable | undefined;\n\t\ttry {\n\t\t\tlistener = this._lifecycleService.onBeforeShutdown((e) =>\n\t\t\t\te.veto(\n\t\t\t\t\tthis._shouldVeto(label, e.reason),\n\t\t\t\t\t\"veto.blukEditService\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tconst resources = await bulkEdit.perform();\n\n\t\t\t// when enabled (option AND setting) loop over all dirty working copies and trigger save\n\t\t\t// for those that were involved in this bulk edit operation.\n\t\t\tif (\n\t\t\t\toptions?.respectAutoSaveConfig &&\n\t\t\t\tthis._configService.getValue(autoSaveSetting) === true &&\n\t\t\t\tresources.length > 1\n\t\t\t) {\n\t\t\t\tawait this._saveAll(resources);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tariaSummary: bulkEdit.ariaMessage(),\n\t\t\t\tisApplied: edits.length > 0,\n\t\t\t};\n\t\t} catch (err) {\n\t\t\t// console.log('apply FAILED');\n\t\t\t// console.log(err);\n\t\t\tthis._logService.error(err);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tlistener?.dispose();\n\t\t\tundoRedoGroupRemove();\n\t\t}\n\t}\n\n\tprivate async _saveAll(resources: readonly URI[]) {\n\t\tconst set = new ResourceSet(resources);\n\t\tconst saves = this._workingCopyService.dirtyWorkingCopies.map(\n\t\t\tasync (copy) => {\n\t\t\t\tif (set.has(copy.resource)) {\n\t\t\t\t\tawait copy.save();\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\tconst result = await Promise.allSettled(saves);\n\t\tfor (const item of result) {\n\t\t\tif (item.status === \"rejected\") {\n\t\t\t\tthis._logService.warn(item.reason);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _shouldVeto(\n\t\tlabel: string | undefined,\n\t\treason: ShutdownReason,\n\t): Promise<boolean> {\n\t\tlet message: string;\n\t\tlet primaryButton: string;\n\t\tswitch (reason) {\n\t\t\tcase ShutdownReason.CLOSE:\n\t\t\t\tmessage = localize(\n\t\t\t\t\t\"closeTheWindow.message\",\n\t\t\t\t\t\"Are you sure you want to close the window?\",\n\t\t\t\t);\n\t\t\t\tprimaryButton = localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"closeTheWindow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Close Window\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ShutdownReason.LOAD:\n\t\t\t\tmessage = localize(\n\t\t\t\t\t\"changeWorkspace.message\",\n\t\t\t\t\t\"Are you sure you want to change the workspace?\",\n\t\t\t\t);\n\t\t\t\tprimaryButton = localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"changeWorkspace\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Change &&Workspace\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ShutdownReason.RELOAD:\n\t\t\t\tmessage = localize(\n\t\t\t\t\t\"reloadTheWindow.message\",\n\t\t\t\t\t\"Are you sure you want to reload the window?\",\n\t\t\t\t);\n\t\t\t\tprimaryButton = localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"reloadTheWindow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Reload Window\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmessage = localize(\n\t\t\t\t\t\"quit.message\",\n\t\t\t\t\t\"Are you sure you want to quit?\",\n\t\t\t\t);\n\t\t\t\tprimaryButton = localize(\n\t\t\t\t\t{ key: \"quit\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Quit\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst result = await this._dialogService.confirm({\n\t\t\tmessage,\n\t\t\tdetail: localize(\n\t\t\t\t\"areYouSureQuiteBulkEdit.detail\",\n\t\t\t\t\"'{0}' is in progress.\",\n\t\t\t\tlabel || localize(\"fileOperation\", \"File operation\"),\n\t\t\t),\n\t\t\tprimaryButton,\n\t\t});\n\n\t\treturn !result.confirmed;\n\t}\n}\n\nregisterSingleton(IBulkEditService, BulkEditService, InstantiationType.Delayed);\n\nconst autoSaveSetting = \"files.refactoring.autoSave\";\n\nRegistry.as<IConfigurationRegistry>(\n\tExtensions.Configuration,\n).registerConfiguration({\n\tid: \"files\",\n\tproperties: {\n\t\t[autoSaveSetting]: {\n\t\t\tdescription: localize(\n\t\t\t\t\"refactoring.autoSave\",\n\t\t\t\t\"Controls if files that were part of a refactoring are saved automatically\",\n\t\t\t),\n\t\t\tdefault: true,\n\t\t\ttype: \"boolean\",\n\t\t},\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
