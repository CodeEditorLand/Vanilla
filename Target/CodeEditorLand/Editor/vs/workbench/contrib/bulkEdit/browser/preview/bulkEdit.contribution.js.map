{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/bulkEdit/browser/preview/bulkEdit.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from \"../../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport Severity from \"../../../../../base/common/severity.js\";\nimport {\n\tIBulkEditService,\n\ttype ResourceEdit,\n} from \"../../../../../editor/browser/services/bulkEditService.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IDialogService } from \"../../../../../platform/dialogs/common/dialogs.js\";\nimport { SyncDescriptor } from \"../../../../../platform/instantiation/common/descriptors.js\";\nimport type { ServicesAccessor } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { WorkbenchListFocusContextKey } from \"../../../../../platform/list/browser/listService.js\";\nimport { Registry } from \"../../../../../platform/registry/common/platform.js\";\nimport { registerIcon } from \"../../../../../platform/theme/common/iconRegistry.js\";\nimport { ViewPaneContainer } from \"../../../../browser/parts/views/viewPaneContainer.js\";\nimport { FocusedViewContext } from \"../../../../common/contextkeys.js\";\nimport {\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../../common/contributions.js\";\nimport {\n\tEditorResourceAccessor,\n\tSideBySideEditor,\n} from \"../../../../common/editor.js\";\nimport type { EditorInput } from \"../../../../common/editor/editorInput.js\";\nimport {\n\ttype IViewContainersRegistry,\n\ttype IViewsRegistry,\n\tExtensions as ViewContainerExtensions,\n\tViewContainerLocation,\n} from \"../../../../common/views.js\";\nimport { IEditorGroupsService } from \"../../../../services/editor/common/editorGroupsService.js\";\nimport { IPaneCompositePartService } from \"../../../../services/panecomposite/browser/panecomposite.js\";\nimport { IViewsService } from \"../../../../services/views/common/viewsService.js\";\nimport { BulkEditPane } from \"./bulkEditPane.js\";\n\nasync function getBulkEditPane(\n\tviewsService: IViewsService,\n): Promise<BulkEditPane | undefined> {\n\tconst view = await viewsService.openView(BulkEditPane.ID, true);\n\tif (view instanceof BulkEditPane) {\n\t\treturn view;\n\t}\n\treturn undefined;\n}\n\nclass UXState {\n\tprivate readonly _activePanel: string | undefined;\n\n\tconstructor(\n\t\t@IPaneCompositePartService\n\t\tprivate readonly _paneCompositeService: IPaneCompositePartService,\n\t\t@IEditorGroupsService\n\t\tprivate readonly _editorGroupsService: IEditorGroupsService,\n\t) {\n\t\tthis._activePanel = _paneCompositeService\n\t\t\t.getActivePaneComposite(ViewContainerLocation.Panel)\n\t\t\t?.getId();\n\t}\n\n\tasync restore(panels: boolean, editors: boolean): Promise<void> {\n\t\t// (1) restore previous panel\n\t\tif (panels) {\n\t\t\tif (typeof this._activePanel === \"string\") {\n\t\t\t\tawait this._paneCompositeService.openPaneComposite(\n\t\t\t\t\tthis._activePanel,\n\t\t\t\t\tViewContainerLocation.Panel,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._paneCompositeService.hideActivePaneComposite(\n\t\t\t\t\tViewContainerLocation.Panel,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// (2) close preview editors\n\t\tif (editors) {\n\t\t\tfor (const group of this._editorGroupsService.groups) {\n\t\t\t\tconst previewEditors: EditorInput[] = [];\n\t\t\t\tfor (const input of group.editors) {\n\t\t\t\t\tconst resource = EditorResourceAccessor.getCanonicalUri(\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t\t\t\t);\n\t\t\t\t\tif (resource?.scheme === BulkEditPane.Schema) {\n\t\t\t\t\t\tpreviewEditors.push(input);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (previewEditors.length) {\n\t\t\t\t\tgroup.closeEditors(previewEditors, { preserveFocus: true });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass PreviewSession {\n\tconstructor(\n\t\treadonly uxState: UXState,\n\t\treadonly cts: CancellationTokenSource = new CancellationTokenSource(),\n\t) {}\n}\n\nclass BulkEditPreviewContribution {\n\tstatic readonly ID = \"workbench.contrib.bulkEditPreview\";\n\n\tstatic readonly ctxEnabled = new RawContextKey(\n\t\t\"refactorPreview.enabled\",\n\t\tfalse,\n\t);\n\n\tprivate readonly _ctxEnabled: IContextKey<boolean>;\n\n\tprivate _activeSession: PreviewSession | undefined;\n\n\tconstructor(\n\t\t@IPaneCompositePartService\n\t\tprivate readonly _paneCompositeService: IPaneCompositePartService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IEditorGroupsService\n\t\tprivate readonly _editorGroupsService: IEditorGroupsService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IBulkEditService bulkEditService: IBulkEditService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tbulkEditService.setPreviewHandler((edits) => this._previewEdit(edits));\n\t\tthis._ctxEnabled =\n\t\t\tBulkEditPreviewContribution.ctxEnabled.bindTo(contextKeyService);\n\t}\n\n\tprivate async _previewEdit(edits: ResourceEdit[]): Promise<ResourceEdit[]> {\n\t\tthis._ctxEnabled.set(true);\n\n\t\tconst uxState =\n\t\t\tthis._activeSession?.uxState ??\n\t\t\tnew UXState(this._paneCompositeService, this._editorGroupsService);\n\t\tconst view = await getBulkEditPane(this._viewsService);\n\t\tif (!view) {\n\t\t\tthis._ctxEnabled.set(false);\n\t\t\treturn edits;\n\t\t}\n\n\t\t// check for active preview session and let the user decide\n\t\tif (view.hasInput()) {\n\t\t\tconst { confirmed } = await this._dialogService.confirm({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"overlap\",\n\t\t\t\t\t\"Another refactoring is being previewed.\",\n\t\t\t\t),\n\t\t\t\tdetail: localize(\n\t\t\t\t\t\"detail\",\n\t\t\t\t\t\"Press 'Continue' to discard the previous refactoring and continue with the current refactoring.\",\n\t\t\t\t),\n\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t{ key: \"continue\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Continue\",\n\t\t\t\t),\n\t\t\t});\n\n\t\t\tif (!confirmed) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// session\n\t\tlet session: PreviewSession;\n\t\tif (this._activeSession) {\n\t\t\tawait this._activeSession.uxState.restore(false, true);\n\t\t\tthis._activeSession.cts.dispose(true);\n\t\t\tsession = new PreviewSession(uxState);\n\t\t} else {\n\t\t\tsession = new PreviewSession(uxState);\n\t\t}\n\t\tthis._activeSession = session;\n\n\t\t// the actual work...\n\t\ttry {\n\t\t\treturn (await view.setInput(edits, session.cts.token)) ?? [];\n\t\t} finally {\n\t\t\t// restore UX state\n\t\t\tif (this._activeSession === session) {\n\t\t\t\tawait this._activeSession.uxState.restore(true, true);\n\t\t\t\tthis._activeSession.cts.dispose();\n\t\t\t\tthis._ctxEnabled.set(false);\n\t\t\t\tthis._activeSession = undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// CMD: accept\nregisterAction2(\n\tclass ApplyAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"refactorPreview.apply\",\n\t\t\t\ttitle: localize2(\"apply\", \"Apply Refactoring\"),\n\t\t\t\tcategory: localize2(\"cat\", \"Refactor Preview\"),\n\t\t\t\ticon: Codicon.check,\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tBulkEditPreviewContribution.ctxEnabled,\n\t\t\t\t\tBulkEditPane.ctxHasCheckedChanges,\n\t\t\t\t),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib - 10,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tBulkEditPreviewContribution.ctxEnabled,\n\t\t\t\t\t\tFocusedViewContext.isEqualTo(BulkEditPane.ID),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd + KeyCode.Enter,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<any> {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst view = await getBulkEditPane(viewsService);\n\t\t\tview?.accept();\n\t\t}\n\t},\n);\n\n// CMD: discard\nregisterAction2(\n\tclass DiscardAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"refactorPreview.discard\",\n\t\t\t\ttitle: localize2(\"Discard\", \"Discard Refactoring\"),\n\t\t\t\tcategory: localize2(\"cat\", \"Refactor Preview\"),\n\t\t\t\ticon: Codicon.clearAll,\n\t\t\t\tprecondition: BulkEditPreviewContribution.ctxEnabled,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\t\t\torder: 2,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst view = await getBulkEditPane(viewsService);\n\t\t\tview?.discard();\n\t\t}\n\t},\n);\n\n// CMD: toggle change\nregisterAction2(\n\tclass ToggleAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"refactorPreview.toggleCheckedState\",\n\t\t\t\ttitle: localize2(\"toogleSelection\", \"Toggle Change\"),\n\t\t\t\tcategory: localize2(\"cat\", \"Refactor Preview\"),\n\t\t\t\tprecondition: BulkEditPreviewContribution.ctxEnabled,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: WorkbenchListFocusContextKey,\n\t\t\t\t\tprimary: KeyCode.Space,\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst view = await getBulkEditPane(viewsService);\n\t\t\tview?.toggleChecked();\n\t\t}\n\t},\n);\n\n// CMD: toggle category\nregisterAction2(\n\tclass GroupByFile extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"refactorPreview.groupByFile\",\n\t\t\t\ttitle: localize2(\"groupByFile\", \"Group Changes By File\"),\n\t\t\t\tcategory: localize2(\"cat\", \"Refactor Preview\"),\n\t\t\t\ticon: Codicon.ungroupByRefType,\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tBulkEditPane.ctxHasCategories,\n\t\t\t\t\tBulkEditPane.ctxGroupByFile.negate(),\n\t\t\t\t\tBulkEditPreviewContribution.ctxEnabled,\n\t\t\t\t),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.BulkEditTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tBulkEditPane.ctxHasCategories,\n\t\t\t\t\t\t\tBulkEditPane.ctxGroupByFile.negate(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst view = await getBulkEditPane(viewsService);\n\t\t\tview?.groupByFile();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass GroupByType extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"refactorPreview.groupByType\",\n\t\t\t\ttitle: localize2(\"groupByType\", \"Group Changes By Type\"),\n\t\t\t\tcategory: localize2(\"cat\", \"Refactor Preview\"),\n\t\t\t\ticon: Codicon.groupByRefType,\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tBulkEditPane.ctxHasCategories,\n\t\t\t\t\tBulkEditPane.ctxGroupByFile,\n\t\t\t\t\tBulkEditPreviewContribution.ctxEnabled,\n\t\t\t\t),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.BulkEditTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tBulkEditPane.ctxHasCategories,\n\t\t\t\t\t\t\tBulkEditPane.ctxGroupByFile,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst view = await getBulkEditPane(viewsService);\n\t\t\tview?.groupByType();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleGrouping extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"refactorPreview.toggleGrouping\",\n\t\t\t\ttitle: localize2(\"groupByType\", \"Group Changes By Type\"),\n\t\t\t\tcategory: localize2(\"cat\", \"Refactor Preview\"),\n\t\t\t\ticon: Codicon.listTree,\n\t\t\t\ttoggled: BulkEditPane.ctxGroupByFile.negate(),\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tBulkEditPane.ctxHasCategories,\n\t\t\t\t\tBulkEditPreviewContribution.ctxEnabled,\n\t\t\t\t),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst view = await getBulkEditPane(viewsService);\n\t\t\tview?.toggleGrouping();\n\t\t}\n\t},\n);\n\nregisterWorkbenchContribution2(\n\tBulkEditPreviewContribution.ID,\n\tBulkEditPreviewContribution,\n\tWorkbenchPhase.BlockRestore,\n);\n\nconst refactorPreviewViewIcon = registerIcon(\n\t\"refactor-preview-view-icon\",\n\tCodicon.lightbulb,\n\tlocalize(\n\t\t\"refactorPreviewViewIcon\",\n\t\t\"View icon of the refactor preview view.\",\n\t),\n);\n\nconst container = Registry.as<IViewContainersRegistry>(\n\tViewContainerExtensions.ViewContainersRegistry,\n).registerViewContainer(\n\t{\n\t\tid: BulkEditPane.ID,\n\t\ttitle: localize2(\"panel\", \"Refactor Preview\"),\n\t\thideIfEmpty: true,\n\t\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [\n\t\t\tBulkEditPane.ID,\n\t\t\t{ mergeViewWithContainerWhenSingleView: true },\n\t\t]),\n\t\ticon: refactorPreviewViewIcon,\n\t\tstorageId: BulkEditPane.ID,\n\t},\n\tViewContainerLocation.Panel,\n);\n\nRegistry.as<IViewsRegistry>(\n\tViewContainerExtensions.ViewsRegistry,\n).registerViews(\n\t[\n\t\t{\n\t\t\tid: BulkEditPane.ID,\n\t\t\tname: localize2(\"panel\", \"Refactor Preview\"),\n\t\t\twhen: BulkEditPreviewContribution.ctxEnabled,\n\t\t\tctorDescriptor: new SyncDescriptor(BulkEditPane),\n\t\t\tcontainerIcon: refactorPreviewViewIcon,\n\t\t},\n\t],\n\tcontainer,\n);\n"],
  "mappings": "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",
  "names": []
}
