{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/bulkEdit/browser/bulkFileEdits.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { tail } from \"../../../../base/common/arrays.js\";\nimport type { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { ResourceFileEdit } from \"../../../../editor/browser/services/bulkEditService.js\";\nimport type { WorkspaceFileEditOptions } from \"../../../../editor/common/languages.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tFileSystemProviderCapabilities,\n\ttype IFileContent,\n\tIFileService,\n\ttype IFileStatWithMetadata,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport type { IProgress } from \"../../../../platform/progress/common/progress.js\";\nimport {\n\tIUndoRedoService,\n\ttype IWorkspaceUndoRedoElement,\n\tUndoRedoElementType,\n\ttype UndoRedoGroup,\n\ttype UndoRedoSource,\n} from \"../../../../platform/undoRedo/common/undoRedo.js\";\nimport { ITextFileService } from \"../../../services/textfile/common/textfiles.js\";\nimport {\n\ttype ICopyOperation,\n\ttype ICreateFileOperation,\n\ttype ICreateOperation,\n\ttype IDeleteOperation,\n\ttype IFileOperationUndoRedoInfo,\n\ttype IMoveOperation,\n\tIWorkingCopyFileService,\n} from \"../../../services/workingCopy/common/workingCopyFileService.js\";\n\ninterface IFileOperation {\n\turis: URI[];\n\tperform(token: CancellationToken): Promise<IFileOperation>;\n}\n\nclass Noop implements IFileOperation {\n\treadonly uris = [];\n\tasync perform() {\n\t\treturn this;\n\t}\n\ttoString(): string {\n\t\treturn \"(noop)\";\n\t}\n}\n\nclass RenameEdit {\n\treadonly type = \"rename\";\n\tconstructor(\n\t\treadonly newUri: URI,\n\t\treadonly oldUri: URI,\n\t\treadonly options: WorkspaceFileEditOptions,\n\t) {}\n}\n\nclass RenameOperation implements IFileOperation {\n\tconstructor(\n\t\tprivate readonly _edits: RenameEdit[],\n\t\tprivate readonly _undoRedoInfo: IFileOperationUndoRedoInfo,\n\t\t@IWorkingCopyFileService private readonly _workingCopyFileService: IWorkingCopyFileService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t) { }\n\n\tget uris() {\n\t\treturn this._edits.flatMap((edit) => [edit.newUri, edit.oldUri]);\n\t}\n\n\tasync perform(token: CancellationToken): Promise<IFileOperation> {\n\t\tconst moves: IMoveOperation[] = [];\n\t\tconst undoes: RenameEdit[] = [];\n\t\tfor (const edit of this._edits) {\n\t\t\t// check: not overwriting, but ignoring, and the target file exists\n\t\t\tconst skip =\n\t\t\t\tedit.options.overwrite === undefined &&\n\t\t\t\tedit.options.ignoreIfExists &&\n\t\t\t\t(await this._fileService.exists(edit.newUri));\n\t\t\tif (!skip) {\n\t\t\t\tmoves.push({\n\t\t\t\t\tfile: { source: edit.oldUri, target: edit.newUri },\n\t\t\t\t\toverwrite: edit.options.overwrite,\n\t\t\t\t});\n\n\t\t\t\t// reverse edit\n\t\t\t\tundoes.push(\n\t\t\t\t\tnew RenameEdit(edit.oldUri, edit.newUri, edit.options),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (moves.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\n\t\tawait this._workingCopyFileService.move(\n\t\t\tmoves,\n\t\t\ttoken,\n\t\t\tthis._undoRedoInfo,\n\t\t);\n\t\treturn new RenameOperation(\n\t\t\tundoes,\n\t\t\t{ isUndoing: true },\n\t\t\tthis._workingCopyFileService,\n\t\t\tthis._fileService,\n\t\t);\n\t}\n\n\ttoString(): string {\n\t\treturn `(rename ${this._edits.map((edit) => `${edit.oldUri} to ${edit.newUri}`).join(\", \")})`;\n\t}\n}\n\nclass CopyEdit {\n\treadonly type = \"copy\";\n\tconstructor(\n\t\treadonly newUri: URI,\n\t\treadonly oldUri: URI,\n\t\treadonly options: WorkspaceFileEditOptions,\n\t) {}\n}\n\nclass CopyOperation implements IFileOperation {\n\tconstructor(\n\t\tprivate readonly _edits: CopyEdit[],\n\t\tprivate readonly _undoRedoInfo: IFileOperationUndoRedoInfo,\n\t\t@IWorkingCopyFileService private readonly _workingCopyFileService: IWorkingCopyFileService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService\n\t) { }\n\n\tget uris() {\n\t\treturn this._edits.flatMap((edit) => [edit.newUri, edit.oldUri]);\n\t}\n\n\tasync perform(token: CancellationToken): Promise<IFileOperation> {\n\t\t// (1) create copy operations, remove noops\n\t\tconst copies: ICopyOperation[] = [];\n\t\tfor (const edit of this._edits) {\n\t\t\t//check: not overwriting, but ignoring, and the target file exists\n\t\t\tconst skip =\n\t\t\t\tedit.options.overwrite === undefined &&\n\t\t\t\tedit.options.ignoreIfExists &&\n\t\t\t\t(await this._fileService.exists(edit.newUri));\n\t\t\tif (!skip) {\n\t\t\t\tcopies.push({\n\t\t\t\t\tfile: { source: edit.oldUri, target: edit.newUri },\n\t\t\t\t\toverwrite: edit.options.overwrite,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (copies.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\n\t\t// (2) perform the actual copy and use the return stats to build undo edits\n\t\tconst stats = await this._workingCopyFileService.copy(\n\t\t\tcopies,\n\t\t\ttoken,\n\t\t\tthis._undoRedoInfo,\n\t\t);\n\t\tconst undoes: DeleteEdit[] = [];\n\n\t\tfor (let i = 0; i < stats.length; i++) {\n\t\t\tconst stat = stats[i];\n\t\t\tconst edit = this._edits[i];\n\t\t\tundoes.push(\n\t\t\t\tnew DeleteEdit(\n\t\t\t\t\tstat.resource,\n\t\t\t\t\t{\n\t\t\t\t\t\trecursive: true,\n\t\t\t\t\t\tfolder:\n\t\t\t\t\t\t\tthis._edits[i].options.folder || stat.isDirectory,\n\t\t\t\t\t\t...edit.options,\n\t\t\t\t\t},\n\t\t\t\t\tfalse,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn this._instaService.createInstance(DeleteOperation, undoes, {\n\t\t\tisUndoing: true,\n\t\t});\n\t}\n\n\ttoString(): string {\n\t\treturn `(copy ${this._edits.map((edit) => `${edit.oldUri} to ${edit.newUri}`).join(\", \")})`;\n\t}\n}\n\nclass CreateEdit {\n\treadonly type = \"create\";\n\tconstructor(\n\t\treadonly newUri: URI,\n\t\treadonly options: WorkspaceFileEditOptions,\n\t\treadonly contents: VSBuffer | undefined,\n\t) {}\n}\n\nclass CreateOperation implements IFileOperation {\n\tconstructor(\n\t\tprivate readonly _edits: CreateEdit[],\n\t\tprivate readonly _undoRedoInfo: IFileOperationUndoRedoInfo,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IWorkingCopyFileService private readonly _workingCopyFileService: IWorkingCopyFileService,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@ITextFileService private readonly _textFileService: ITextFileService\n\t) { }\n\n\tget uris() {\n\t\treturn this._edits.map((edit) => edit.newUri);\n\t}\n\n\tasync perform(token: CancellationToken): Promise<IFileOperation> {\n\t\tconst folderCreates: ICreateOperation[] = [];\n\t\tconst fileCreates: ICreateFileOperation[] = [];\n\t\tconst undoes: DeleteEdit[] = [];\n\n\t\tfor (const edit of this._edits) {\n\t\t\tif (edit.newUri.scheme === Schemas.untitled) {\n\t\t\t\tcontinue; // ignore, will be handled by a later edit\n\t\t\t}\n\t\t\tif (\n\t\t\t\tedit.options.overwrite === undefined &&\n\t\t\t\tedit.options.ignoreIfExists &&\n\t\t\t\t(await this._fileService.exists(edit.newUri))\n\t\t\t) {\n\t\t\t\tcontinue; // not overwriting, but ignoring, and the target file exists\n\t\t\t}\n\t\t\tif (edit.options.folder) {\n\t\t\t\tfolderCreates.push({ resource: edit.newUri });\n\t\t\t} else {\n\t\t\t\t// If the contents are part of the edit they include the encoding, thus use them. Otherwise get the encoding for a new empty file.\n\t\t\t\tconst encodedReadable =\n\t\t\t\t\ttypeof edit.contents !== \"undefined\"\n\t\t\t\t\t\t? edit.contents\n\t\t\t\t\t\t: await this._textFileService.getEncodedReadable(\n\t\t\t\t\t\t\t\tedit.newUri,\n\t\t\t\t\t\t\t);\n\t\t\t\tfileCreates.push({\n\t\t\t\t\tresource: edit.newUri,\n\t\t\t\t\tcontents: encodedReadable,\n\t\t\t\t\toverwrite: edit.options.overwrite,\n\t\t\t\t});\n\t\t\t}\n\t\t\tundoes.push(\n\t\t\t\tnew DeleteEdit(\n\t\t\t\t\tedit.newUri,\n\t\t\t\t\tedit.options,\n\t\t\t\t\t!edit.options.folder && !edit.contents,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (folderCreates.length === 0 && fileCreates.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\n\t\tawait this._workingCopyFileService.createFolder(\n\t\t\tfolderCreates,\n\t\t\ttoken,\n\t\t\tthis._undoRedoInfo,\n\t\t);\n\t\tawait this._workingCopyFileService.create(\n\t\t\tfileCreates,\n\t\t\ttoken,\n\t\t\tthis._undoRedoInfo,\n\t\t);\n\n\t\treturn this._instaService.createInstance(DeleteOperation, undoes, {\n\t\t\tisUndoing: true,\n\t\t});\n\t}\n\n\ttoString(): string {\n\t\treturn `(create ${this._edits.map((edit) => (edit.options.folder ? `folder ${edit.newUri}` : `file ${edit.newUri} with ${edit.contents?.byteLength || 0} bytes`)).join(\", \")})`;\n\t}\n}\n\nclass DeleteEdit {\n\treadonly type = \"delete\";\n\tconstructor(\n\t\treadonly oldUri: URI,\n\t\treadonly options: WorkspaceFileEditOptions,\n\t\treadonly undoesCreate: boolean,\n\t) {}\n}\n\nclass DeleteOperation implements IFileOperation {\n\tconstructor(\n\t\tprivate _edits: DeleteEdit[],\n\t\tprivate readonly _undoRedoInfo: IFileOperationUndoRedoInfo,\n\t\t@IWorkingCopyFileService private readonly _workingCopyFileService: IWorkingCopyFileService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) { }\n\n\tget uris() {\n\t\treturn this._edits.map((edit) => edit.oldUri);\n\t}\n\n\tasync perform(token: CancellationToken): Promise<IFileOperation> {\n\t\t// delete file\n\n\t\tconst deletes: IDeleteOperation[] = [];\n\t\tconst undoes: CreateEdit[] = [];\n\n\t\tfor (const edit of this._edits) {\n\t\t\tlet fileStat: IFileStatWithMetadata | undefined;\n\t\t\ttry {\n\t\t\t\tfileStat = await this._fileService.resolve(edit.oldUri, {\n\t\t\t\t\tresolveMetadata: true,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tif (!edit.options.ignoreIfNotExists) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`${edit.oldUri} does not exist and can not be deleted`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdeletes.push({\n\t\t\t\tresource: edit.oldUri,\n\t\t\t\trecursive: edit.options.recursive,\n\t\t\t\tuseTrash:\n\t\t\t\t\t!edit.options.skipTrashBin &&\n\t\t\t\t\tthis._fileService.hasCapability(\n\t\t\t\t\t\tedit.oldUri,\n\t\t\t\t\t\tFileSystemProviderCapabilities.Trash,\n\t\t\t\t\t) &&\n\t\t\t\t\tthis._configurationService.getValue<boolean>(\n\t\t\t\t\t\t\"files.enableTrash\",\n\t\t\t\t\t),\n\t\t\t});\n\n\t\t\t// read file contents for undo operation. when a file is too large it won't be restored\n\t\t\tlet fileContent: IFileContent | undefined;\n\t\t\tif (\n\t\t\t\t!edit.undoesCreate &&\n\t\t\t\t!edit.options.folder &&\n\t\t\t\t!(\n\t\t\t\t\ttypeof edit.options.maxSize === \"number\" &&\n\t\t\t\t\tfileStat.size > edit.options.maxSize\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\ttry {\n\t\t\t\t\tfileContent = await this._fileService.readFile(edit.oldUri);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis._logService.error(err);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fileContent !== undefined) {\n\t\t\t\tundoes.push(\n\t\t\t\t\tnew CreateEdit(\n\t\t\t\t\t\tedit.oldUri,\n\t\t\t\t\t\tedit.options,\n\t\t\t\t\t\tfileContent.value,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (deletes.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\n\t\tawait this._workingCopyFileService.delete(\n\t\t\tdeletes,\n\t\t\ttoken,\n\t\t\tthis._undoRedoInfo,\n\t\t);\n\n\t\tif (undoes.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\t\treturn this._instaService.createInstance(CreateOperation, undoes, {\n\t\t\tisUndoing: true,\n\t\t});\n\t}\n\n\ttoString(): string {\n\t\treturn `(delete ${this._edits.map((edit) => edit.oldUri).join(\", \")})`;\n\t}\n}\n\nclass FileUndoRedoElement implements IWorkspaceUndoRedoElement {\n\treadonly type = UndoRedoElementType.Workspace;\n\n\treadonly resources: readonly URI[];\n\n\tconstructor(\n\t\treadonly label: string,\n\t\treadonly code: string,\n\t\treadonly operations: IFileOperation[],\n\t\treadonly confirmBeforeUndo: boolean,\n\t) {\n\t\tthis.resources = operations.flatMap((op) => op.uris);\n\t}\n\n\tasync undo(): Promise<void> {\n\t\tawait this._reverse();\n\t}\n\n\tasync redo(): Promise<void> {\n\t\tawait this._reverse();\n\t}\n\n\tprivate async _reverse() {\n\t\tfor (let i = 0; i < this.operations.length; i++) {\n\t\t\tconst op = this.operations[i];\n\t\t\tconst undo = await op.perform(CancellationToken.None);\n\t\t\tthis.operations[i] = undo;\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\treturn this.operations.map((op) => String(op)).join(\", \");\n\t}\n}\n\nexport class BulkFileEdits {\n\tconstructor(\n\t\tprivate readonly _label: string,\n\t\tprivate readonly _code: string,\n\t\tprivate readonly _undoRedoGroup: UndoRedoGroup,\n\t\tprivate readonly _undoRedoSource: UndoRedoSource | undefined,\n\t\tprivate readonly _confirmBeforeUndo: boolean,\n\t\tprivate readonly _progress: IProgress<void>,\n\t\tprivate readonly _token: CancellationToken,\n\t\tprivate readonly _edits: ResourceFileEdit[],\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@IUndoRedoService private readonly _undoRedoService: IUndoRedoService,\n\t) { }\n\n\tasync apply(): Promise<readonly URI[]> {\n\t\tconst undoOperations: IFileOperation[] = [];\n\t\tconst undoRedoInfo = { undoRedoGroupId: this._undoRedoGroup.id };\n\n\t\tconst edits: Array<RenameEdit | CopyEdit | DeleteEdit | CreateEdit> =\n\t\t\t[];\n\t\tfor (const edit of this._edits) {\n\t\t\tif (edit.newResource && edit.oldResource && !edit.options?.copy) {\n\t\t\t\tedits.push(\n\t\t\t\t\tnew RenameEdit(\n\t\t\t\t\t\tedit.newResource,\n\t\t\t\t\t\tedit.oldResource,\n\t\t\t\t\t\tedit.options ?? {},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\tedit.newResource &&\n\t\t\t\tedit.oldResource &&\n\t\t\t\tedit.options?.copy\n\t\t\t) {\n\t\t\t\tedits.push(\n\t\t\t\t\tnew CopyEdit(\n\t\t\t\t\t\tedit.newResource,\n\t\t\t\t\t\tedit.oldResource,\n\t\t\t\t\t\tedit.options ?? {},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else if (!edit.newResource && edit.oldResource) {\n\t\t\t\tedits.push(\n\t\t\t\t\tnew DeleteEdit(edit.oldResource, edit.options ?? {}, false),\n\t\t\t\t);\n\t\t\t} else if (edit.newResource && !edit.oldResource) {\n\t\t\t\tedits.push(\n\t\t\t\t\tnew CreateEdit(\n\t\t\t\t\t\tedit.newResource,\n\t\t\t\t\t\tedit.options ?? {},\n\t\t\t\t\t\tawait edit.options.contents,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (edits.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst groups: Array<RenameEdit | CopyEdit | DeleteEdit | CreateEdit>[] =\n\t\t\t[];\n\t\tgroups[0] = [edits[0]];\n\n\t\tfor (let i = 1; i < edits.length; i++) {\n\t\t\tconst edit = edits[i];\n\t\t\tconst lastGroup = tail(groups);\n\t\t\tif (lastGroup?.[0].type === edit.type) {\n\t\t\t\tlastGroup.push(edit);\n\t\t\t} else {\n\t\t\t\tgroups.push([edit]);\n\t\t\t}\n\t\t}\n\n\t\tfor (const group of groups) {\n\t\t\tif (this._token.isCancellationRequested) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet op: IFileOperation | undefined;\n\t\t\tswitch (group[0].type) {\n\t\t\t\tcase \"rename\":\n\t\t\t\t\top = this._instaService.createInstance(\n\t\t\t\t\t\tRenameOperation,\n\t\t\t\t\t\t<RenameEdit[]>group,\n\t\t\t\t\t\tundoRedoInfo,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"copy\":\n\t\t\t\t\top = this._instaService.createInstance(\n\t\t\t\t\t\tCopyOperation,\n\t\t\t\t\t\t<CopyEdit[]>group,\n\t\t\t\t\t\tundoRedoInfo,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"delete\":\n\t\t\t\t\top = this._instaService.createInstance(\n\t\t\t\t\t\tDeleteOperation,\n\t\t\t\t\t\t<DeleteEdit[]>group,\n\t\t\t\t\t\tundoRedoInfo,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"create\":\n\t\t\t\t\top = this._instaService.createInstance(\n\t\t\t\t\t\tCreateOperation,\n\t\t\t\t\t\t<CreateEdit[]>group,\n\t\t\t\t\t\tundoRedoInfo,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (op) {\n\t\t\t\tconst undoOp = await op.perform(this._token);\n\t\t\t\tundoOperations.push(undoOp);\n\t\t\t}\n\t\t\tthis._progress.report(undefined);\n\t\t}\n\n\t\tconst undoRedoElement = new FileUndoRedoElement(\n\t\t\tthis._label,\n\t\t\tthis._code,\n\t\t\tundoOperations,\n\t\t\tthis._confirmBeforeUndo,\n\t\t);\n\t\tthis._undoRedoService.pushElement(\n\t\t\tundoRedoElement,\n\t\t\tthis._undoRedoGroup,\n\t\t\tthis._undoRedoSource,\n\t\t);\n\t\treturn undoRedoElement.resources;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
