{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ButtonBar } from '../../../../../base/browser/ui/button/button.js';\nimport type { IAsyncDataTreeViewState } from '../../../../../base/browser/ui/tree/asyncDataTree.js';\nimport { ITreeContextMenuEvent } from '../../../../../base/browser/ui/tree/tree.js';\nimport { CachedFunction, LRUCachedFunction } from '../../../../../base/common/cache.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { FuzzyScore } from '../../../../../base/common/filters.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { Mutable } from '../../../../../base/common/types.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport './bulkEdit.css';\nimport { ResourceEdit } from '../../../../../editor/browser/services/bulkEditService.js';\nimport { IMultiDiffEditorOptions, IMultiDiffResourceId } from '../../../../../editor/browser/widget/multiDiffEditor/multiDiffEditorWidgetImpl.js';\nimport { IRange } from '../../../../../editor/common/core/range.js';\nimport { ITextModelService } from '../../../../../editor/common/services/resolverService.js';\nimport { localize } from '../../../../../nls.js';\nimport { MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKey, IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../../platform/contextview/browser/contextView.js';\nimport { IDialogService } from '../../../../../platform/dialogs/common/dialogs.js';\nimport { IHoverService } from '../../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { IOpenEvent, WorkbenchAsyncDataTree } from '../../../../../platform/list/browser/listService.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { defaultButtonStyles } from '../../../../../platform/theme/browser/defaultStyles.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { ResourceLabels } from '../../../../browser/labels.js';\nimport { ViewPane } from '../../../../browser/parts/views/viewPane.js';\nimport { IViewletViewOptions } from '../../../../browser/parts/views/viewsViewlet.js';\nimport { IMultiDiffEditorResource, IResourceDiffEditorInput } from '../../../../common/editor.js';\nimport { IViewDescriptorService } from '../../../../common/views.js';\nimport { BulkEditPreviewProvider, BulkFileOperation, BulkFileOperations, BulkFileOperationType } from './bulkEditPreview.js';\nimport { BulkEditAccessibilityProvider, BulkEditDataSource, BulkEditDelegate, BulkEditElement, BulkEditIdentityProvider, BulkEditNaviLabelProvider, BulkEditSorter, CategoryElement, CategoryElementRenderer, compareBulkFileOperations, FileElement, FileElementRenderer, TextEditElement, TextEditElementRenderer } from './bulkEditTree.js';\nimport { ACTIVE_GROUP, IEditorService, SIDE_GROUP } from '../../../../services/editor/common/editorService.js';\n\nconst enum State {\n\tData = 'data',\n\tMessage = 'message'\n}\n\nexport class BulkEditPane extends ViewPane {\n\n\tstatic readonly ID = 'refactorPreview';\n\tstatic readonly Schema = 'vscode-bulkeditpreview-multieditor';\n\n\tstatic readonly ctxHasCategories = new RawContextKey('refactorPreview.hasCategories', false);\n\tstatic readonly ctxGroupByFile = new RawContextKey('refactorPreview.groupByFile', true);\n\tstatic readonly ctxHasCheckedChanges = new RawContextKey('refactorPreview.hasCheckedChanges', true);\n\n\tprivate static readonly _memGroupByFile = `${this.ID}.groupByFile`;\n\n\tprivate _tree!: WorkbenchAsyncDataTree<BulkFileOperations, BulkEditElement, FuzzyScore>;\n\tprivate _treeDataSource!: BulkEditDataSource;\n\tprivate _treeViewStates = new Map<boolean, IAsyncDataTreeViewState>();\n\tprivate _message!: HTMLSpanElement;\n\n\tprivate readonly _ctxHasCategories: IContextKey<boolean>;\n\tprivate readonly _ctxGroupByFile: IContextKey<boolean>;\n\tprivate readonly _ctxHasCheckedChanges: IContextKey<boolean>;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _sessionDisposables = new DisposableStore();\n\tprivate _currentResolve?: (edit?: ResourceEdit[]) => void;\n\tprivate _currentInput?: BulkFileOperations;\n\tprivate _currentProvider?: BulkEditPreviewProvider;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@ITextModelService private readonly _textModelService: ITextModelService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(\n\t\t\t{ ...options, titleMenuId: MenuId.BulkEditTitle },\n\t\t\tkeybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, _instaService, openerService, themeService, telemetryService, hoverService\n\t\t);\n\n\t\tthis.element.classList.add('bulk-edit-panel', 'show-file-icons');\n\t\tthis._ctxHasCategories = BulkEditPane.ctxHasCategories.bindTo(contextKeyService);\n\t\tthis._ctxGroupByFile = BulkEditPane.ctxGroupByFile.bindTo(contextKeyService);\n\t\tthis._ctxHasCheckedChanges = BulkEditPane.ctxHasCheckedChanges.bindTo(contextKeyService);\n\t\t// telemetry\n\t\ttype BulkEditPaneOpened = {\n\t\t\towner: 'aiday-mar';\n\t\t\tcomment: 'Report when the bulk edit pane has been opened';\n\t\t};\n\t\tthis.telemetryService.publicLog2<{}, BulkEditPaneOpened>('views.bulkEditPane');\n\t}\n\n\toverride dispose(): void {\n\t\tthis._tree.dispose();\n\t\tthis._disposables.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tprotected override renderBody(parent: HTMLElement): void {\n\t\tsuper.renderBody(parent);\n\n\t\tconst resourceLabels = this._instaService.createInstance(\n\t\t\tResourceLabels,\n\t\t\t{ onDidChangeVisibility: this.onDidChangeBodyVisibility }\n\t\t);\n\t\tthis._disposables.add(resourceLabels);\n\n\t\tconst contentContainer = document.createElement('div');\n\t\tcontentContainer.className = 'content';\n\t\tparent.appendChild(contentContainer);\n\n\t\t// tree\n\t\tconst treeContainer = document.createElement('div');\n\t\tcontentContainer.appendChild(treeContainer);\n\n\t\tthis._treeDataSource = this._instaService.createInstance(BulkEditDataSource);\n\t\tthis._treeDataSource.groupByFile = this._storageService.getBoolean(BulkEditPane._memGroupByFile, StorageScope.PROFILE, true);\n\t\tthis._ctxGroupByFile.set(this._treeDataSource.groupByFile);\n\n\t\tthis._tree = <WorkbenchAsyncDataTree<BulkFileOperations, BulkEditElement, FuzzyScore>>this._instaService.createInstance(\n\t\t\tWorkbenchAsyncDataTree, this.id, treeContainer,\n\t\t\tnew BulkEditDelegate(),\n\t\t\t[this._instaService.createInstance(TextEditElementRenderer), this._instaService.createInstance(FileElementRenderer, resourceLabels), this._instaService.createInstance(CategoryElementRenderer)],\n\t\t\tthis._treeDataSource,\n\t\t\t{\n\t\t\t\taccessibilityProvider: this._instaService.createInstance(BulkEditAccessibilityProvider),\n\t\t\t\tidentityProvider: new BulkEditIdentityProvider(),\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tkeyboardNavigationLabelProvider: new BulkEditNaviLabelProvider(),\n\t\t\t\tsorter: new BulkEditSorter(),\n\t\t\t\tselectionNavigation: true\n\t\t\t}\n\t\t);\n\n\t\tthis._disposables.add(this._tree.onContextMenu(this._onContextMenu, this));\n\t\tthis._disposables.add(this._tree.onDidOpen(e => this._openElementInMultiDiffEditor(e)));\n\n\t\t// buttons\n\t\tconst buttonsContainer = document.createElement('div');\n\t\tbuttonsContainer.className = 'buttons';\n\t\tcontentContainer.appendChild(buttonsContainer);\n\t\tconst buttonBar = new ButtonBar(buttonsContainer);\n\t\tthis._disposables.add(buttonBar);\n\n\t\tconst btnConfirm = buttonBar.addButton({ supportIcons: true, ...defaultButtonStyles });\n\t\tbtnConfirm.label = localize('ok', 'Apply');\n\t\tbtnConfirm.onDidClick(() => this.accept(), this, this._disposables);\n\n\t\tconst btnCancel = buttonBar.addButton({ ...defaultButtonStyles, secondary: true });\n\t\tbtnCancel.label = localize('cancel', 'Discard');\n\t\tbtnCancel.onDidClick(() => this.discard(), this, this._disposables);\n\n\t\t// message\n\t\tthis._message = document.createElement('span');\n\t\tthis._message.className = 'message';\n\t\tthis._message.innerText = localize('empty.msg', \"Invoke a code action, like rename, to see a preview of its changes here.\");\n\t\tparent.appendChild(this._message);\n\n\t\t//\n\t\tthis._setState(State.Message);\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tconst treeHeight = height - 50;\n\t\tthis._tree.getHTMLElement().parentElement!.style.height = `${treeHeight}px`;\n\t\tthis._tree.layout(treeHeight, width);\n\t}\n\n\tprivate _setState(state: State): void {\n\t\tthis.element.dataset['state'] = state;\n\t}\n\n\tasync setInput(edit: ResourceEdit[], token: CancellationToken): Promise<ResourceEdit[] | undefined> {\n\t\tthis._setState(State.Data);\n\t\tthis._sessionDisposables.clear();\n\t\tthis._treeViewStates.clear();\n\n\t\tif (this._currentResolve) {\n\t\t\tthis._currentResolve(undefined);\n\t\t\tthis._currentResolve = undefined;\n\t\t}\n\n\t\tconst input = await this._instaService.invokeFunction(BulkFileOperations.create, edit);\n\t\tthis._currentProvider = this._instaService.createInstance(BulkEditPreviewProvider, input);\n\t\tthis._sessionDisposables.add(this._currentProvider);\n\t\tthis._sessionDisposables.add(input);\n\n\t\t//\n\t\tconst hasCategories = input.categories.length > 1;\n\t\tthis._ctxHasCategories.set(hasCategories);\n\t\tthis._treeDataSource.groupByFile = !hasCategories || this._treeDataSource.groupByFile;\n\t\tthis._ctxHasCheckedChanges.set(input.checked.checkedCount > 0);\n\n\t\tthis._currentInput = input;\n\n\t\treturn new Promise<ResourceEdit[] | undefined>(resolve => {\n\n\t\t\ttoken.onCancellationRequested(() => resolve(undefined));\n\n\t\t\tthis._currentResolve = resolve;\n\t\t\tthis._setTreeInput(input);\n\n\t\t\t// refresh when check state changes\n\t\t\tthis._sessionDisposables.add(input.checked.onDidChange(() => {\n\t\t\t\tthis._tree.updateChildren();\n\t\t\t\tthis._ctxHasCheckedChanges.set(input.checked.checkedCount > 0);\n\t\t\t}));\n\t\t});\n\t}\n\n\thasInput(): boolean {\n\t\treturn Boolean(this._currentInput);\n\t}\n\n\tprivate async _setTreeInput(input: BulkFileOperations) {\n\n\t\tconst viewState = this._treeViewStates.get(this._treeDataSource.groupByFile);\n\t\tawait this._tree.setInput(input, viewState);\n\t\tthis._tree.domFocus();\n\n\t\tif (viewState) {\n\t\t\treturn;\n\t\t}\n\n\t\t// async expandAll (max=10) is the default when no view state is given\n\t\tconst expand = [...this._tree.getNode(input).children].slice(0, 10);\n\t\twhile (expand.length > 0) {\n\t\t\tconst { element } = expand.shift()!;\n\t\t\tif (element instanceof FileElement) {\n\t\t\t\tawait this._tree.expand(element, true);\n\t\t\t}\n\t\t\tif (element instanceof CategoryElement) {\n\t\t\t\tawait this._tree.expand(element, true);\n\t\t\t\texpand.push(...this._tree.getNode(element).children);\n\t\t\t}\n\t\t}\n\t}\n\n\taccept(): void {\n\n\t\tconst conflicts = this._currentInput?.conflicts.list();\n\n\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\tthis._done(true);\n\t\t\treturn;\n\t\t}\n\n\t\tlet message: string;\n\t\tif (conflicts.length === 1) {\n\t\t\tmessage = localize('conflict.1', \"Cannot apply refactoring because '{0}' has changed in the meantime.\", this._labelService.getUriLabel(conflicts[0], { relative: true }));\n\t\t} else {\n\t\t\tmessage = localize('conflict.N', \"Cannot apply refactoring because {0} other files have changed in the meantime.\", conflicts.length);\n\t\t}\n\n\t\tthis._dialogService.warn(message).finally(() => this._done(false));\n\t}\n\n\tdiscard() {\n\t\tthis._done(false);\n\t}\n\n\tprivate _done(accept: boolean): void {\n\t\tthis._currentResolve?.(accept ? this._currentInput?.getWorkspaceEdit() : undefined);\n\t\tthis._currentInput = undefined;\n\t\tthis._setState(State.Message);\n\t\tthis._sessionDisposables.clear();\n\t}\n\n\ttoggleChecked() {\n\t\tconst [first] = this._tree.getFocus();\n\t\tif ((first instanceof FileElement || first instanceof TextEditElement) && !first.isDisabled()) {\n\t\t\tfirst.setChecked(!first.isChecked());\n\t\t} else if (first instanceof CategoryElement) {\n\t\t\tfirst.setChecked(!first.isChecked());\n\t\t}\n\t}\n\n\tgroupByFile(): void {\n\t\tif (!this._treeDataSource.groupByFile) {\n\t\t\tthis.toggleGrouping();\n\t\t}\n\t}\n\n\tgroupByType(): void {\n\t\tif (this._treeDataSource.groupByFile) {\n\t\t\tthis.toggleGrouping();\n\t\t}\n\t}\n\n\ttoggleGrouping() {\n\t\tconst input = this._tree.getInput();\n\t\tif (input) {\n\n\t\t\t// (1) capture view state\n\t\t\tconst oldViewState = this._tree.getViewState();\n\t\t\tthis._treeViewStates.set(this._treeDataSource.groupByFile, oldViewState);\n\n\t\t\t// (2) toggle and update\n\t\t\tthis._treeDataSource.groupByFile = !this._treeDataSource.groupByFile;\n\t\t\tthis._setTreeInput(input);\n\n\t\t\t// (3) remember preference\n\t\t\tthis._storageService.store(BulkEditPane._memGroupByFile, this._treeDataSource.groupByFile, StorageScope.PROFILE, StorageTarget.USER);\n\t\t\tthis._ctxGroupByFile.set(this._treeDataSource.groupByFile);\n\t\t}\n\t}\n\n\tprivate async _openElementInMultiDiffEditor(e: IOpenEvent<BulkEditElement | undefined>): Promise<void> {\n\n\t\tconst fileOperations = this._currentInput?.fileOperations;\n\t\tif (!fileOperations) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet selection: IRange | undefined = undefined;\n\t\tlet fileElement: FileElement;\n\t\tif (e.element instanceof TextEditElement) {\n\t\t\tfileElement = e.element.parent;\n\t\t\tselection = e.element.edit.textEdit.textEdit.range;\n\t\t} else if (e.element instanceof FileElement) {\n\t\t\tfileElement = e.element;\n\t\t\tselection = e.element.edit.textEdits[0]?.textEdit.textEdit.range;\n\t\t} else {\n\t\t\t// invalid event\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await this._computeResourceDiffEditorInputs.get(fileOperations);\n\t\tconst resourceId = await result.getResourceDiffEditorInputIdOfOperation(fileElement.edit);\n\t\tconst options: Mutable<IMultiDiffEditorOptions> = {\n\t\t\t...e.editorOptions,\n\t\t\tviewState: {\n\t\t\t\trevealData: {\n\t\t\t\t\tresource: resourceId,\n\t\t\t\t\trange: selection,\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconst multiDiffSource = URI.from({ scheme: BulkEditPane.Schema });\n\t\tconst label = 'Refactor Preview';\n\t\tthis._editorService.openEditor({\n\t\t\tmultiDiffSource,\n\t\t\tlabel,\n\t\t\toptions,\n\t\t\tisTransient: true,\n\t\t\tdescription: label,\n\t\t\tresources: result.resources\n\t\t}, e.sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n\t}\n\n\tprivate readonly _computeResourceDiffEditorInputs = new LRUCachedFunction<\n\t\tBulkFileOperation[],\n\t\tPromise<{ resources: IMultiDiffEditorResource[]; getResourceDiffEditorInputIdOfOperation: (operation: BulkFileOperation) => Promise<IMultiDiffResourceId> }>\n\t>(async (fileOperations) => {\n\t\tconst computeDiffEditorInput = new CachedFunction<BulkFileOperation, Promise<IMultiDiffEditorResource>>(async (fileOperation) => {\n\t\t\tconst fileOperationUri = fileOperation.uri;\n\t\t\tconst previewUri = this._currentProvider!.asPreviewUri(fileOperationUri);\n\t\t\t// delete\n\t\t\tif (fileOperation.type & BulkFileOperationType.Delete) {\n\t\t\t\treturn {\n\t\t\t\t\toriginal: { resource: URI.revive(previewUri) },\n\t\t\t\t\tmodified: { resource: undefined },\n\t\t\t\t\tgoToFileResource: fileOperation.uri,\n\t\t\t\t} satisfies IMultiDiffEditorResource;\n\n\t\t\t}\n\t\t\t// rename, create, edits\n\t\t\telse {\n\t\t\t\tlet leftResource: URI | undefined;\n\t\t\t\ttry {\n\t\t\t\t\t(await this._textModelService.createModelReference(fileOperationUri)).dispose();\n\t\t\t\t\tleftResource = fileOperationUri;\n\t\t\t\t} catch {\n\t\t\t\t\tleftResource = BulkEditPreviewProvider.emptyPreview;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\toriginal: { resource: URI.revive(leftResource) },\n\t\t\t\t\tmodified: { resource: URI.revive(previewUri) },\n\t\t\t\t\tgoToFileResource: leftResource,\n\t\t\t\t} satisfies IMultiDiffEditorResource;\n\t\t\t}\n\t\t});\n\n\t\tconst sortedFileOperations = fileOperations.slice().sort(compareBulkFileOperations);\n\t\tconst resources: IResourceDiffEditorInput[] = [];\n\t\tfor (const operation of sortedFileOperations) {\n\t\t\tresources.push(await computeDiffEditorInput.get(operation));\n\t\t}\n\t\tconst getResourceDiffEditorInputIdOfOperation = async (operation: BulkFileOperation): Promise<IMultiDiffResourceId> => {\n\t\t\tconst resource = await computeDiffEditorInput.get(operation);\n\t\t\treturn { original: resource.original.resource, modified: resource.modified.resource };\n\t\t};\n\t\treturn {\n\t\t\tresources,\n\t\t\tgetResourceDiffEditorInputIdOfOperation\n\t\t};\n\t});\n\n\tprivate _onContextMenu(e: ITreeContextMenuEvent<any>): void {\n\n\t\tthis._contextMenuService.showContextMenu({\n\t\t\tmenuId: MenuId.BulkEditContext,\n\t\t\tcontextKeyService: this.contextKeyService,\n\t\t\tgetAnchor: () => e.anchor\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["State"]
}
