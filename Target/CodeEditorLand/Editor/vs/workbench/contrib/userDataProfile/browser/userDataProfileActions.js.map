{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataProfile/browser/userDataProfileActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize2 } from '../../../../nls.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IUserDataProfileManagementService, PROFILES_CATEGORY, PROFILES_ENABLEMENT_CONTEXT } from '../../../services/userDataProfile/common/userDataProfile.js';\n\nclass CreateTransientProfileAction extends Action2 {\n\tstatic readonly ID = 'workbench.profiles.actions.createTemporaryProfile';\n\tstatic readonly TITLE = localize2('create temporary profile', \"Create a Temporary Profile\");\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CreateTransientProfileAction.ID,\n\t\t\ttitle: CreateTransientProfileAction.TITLE,\n\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\tf1: true,\n\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\treturn accessor.get(IUserDataProfileManagementService).createAndEnterTransientProfile();\n\t}\n}\n\nregisterAction2(CreateTransientProfileAction);\n\n// Developer Actions\n\nregisterAction2(class CleanupProfilesAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.profiles.actions.cleanupProfiles',\n\t\t\ttitle: localize2('cleanup profile', \"Cleanup Profiles\"),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true,\n\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\treturn accessor.get(IUserDataProfilesService).cleanUp();\n\t}\n});\n\nregisterAction2(class ResetWorkspacesAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.profiles.actions.resetWorkspaces',\n\t\t\ttitle: localize2('reset workspaces', \"Reset Workspace Profiles Associations\"),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true,\n\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst userDataProfilesService = accessor.get(IUserDataProfilesService);\n\t\treturn userDataProfilesService.resetWorkspaces();\n\t}\n});\n"],
  "mappings": ";;AAKA,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAC3B,SAAS,SAAS,uBAAuB;AACzC,SAAS,wBAAwB;AACjC,SAAS,gCAAgC;AACzC,SAAS,mCAAmC,mBAAmB,mCAAmC;AAElG,MAAM,qCAAqC,QAAQ;AAAA,EAZnD,OAYmD;AAAA;AAAA;AAAA,EAClD,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ,UAAU,4BAA4B,4BAA4B;AAAA,EAC1F,cAAc;AACb,UAAM;AAAA,MACL,IAAI,6BAA6B;AAAA,MACjC,OAAO,6BAA6B;AAAA,MACpC,UAAU;AAAA,MACV,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA4B;AACrC,WAAO,SAAS,IAAI,iCAAiC,EAAE,+BAA+B;AAAA,EACvF;AACD;AAEA,gBAAgB,4BAA4B;AAI5C,gBAAgB,MAAM,8BAA8B,QAAQ;AAAA,EAlC5D,OAkC4D;AAAA;AAAA;AAAA,EAC3D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,mBAAmB,kBAAkB;AAAA,MACtD,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA4B;AACrC,WAAO,SAAS,IAAI,wBAAwB,EAAE,QAAQ;AAAA,EACvD;AACD,CAAC;AAED,gBAAgB,MAAM,8BAA8B,QAAQ;AAAA,EAlD5D,OAkD4D;AAAA;AAAA;AAAA,EAC3D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,oBAAoB,uCAAuC;AAAA,MAC5E,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA4B;AACrC,UAAM,0BAA0B,SAAS,IAAI,wBAAwB;AACrE,WAAO,wBAAwB,gBAAgB;AAAA,EAChD;AACD,CAAC;",
  "names": []
}
