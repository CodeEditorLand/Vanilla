{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataProfile/browser/userDataProfileActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tIUserDataProfileManagementService,\n\tPROFILES_CATEGORY,\n\tPROFILES_ENABLEMENT_CONTEXT,\n} from \"../../../services/userDataProfile/common/userDataProfile.js\";\n\nclass CreateTransientProfileAction extends Action2 {\n\tstatic readonly ID = \"workbench.profiles.actions.createTemporaryProfile\";\n\tstatic readonly TITLE = localize2(\n\t\t\"create temporary profile\",\n\t\t\"Create a Temporary Profile\",\n\t);\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CreateTransientProfileAction.ID,\n\t\t\ttitle: CreateTransientProfileAction.TITLE,\n\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\tf1: true,\n\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\treturn accessor\n\t\t\t.get(IUserDataProfileManagementService)\n\t\t\t.createAndEnterTransientProfile();\n\t}\n}\n\nregisterAction2(CreateTransientProfileAction);\n\n// Developer Actions\n\nregisterAction2(\n\tclass CleanupProfilesAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.profiles.actions.cleanupProfiles\",\n\t\t\t\ttitle: localize2(\"cleanup profile\", \"Cleanup Profiles\"),\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\treturn accessor.get(IUserDataProfilesService).cleanUp();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ResetWorkspacesAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.profiles.actions.resetWorkspaces\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"reset workspaces\",\n\t\t\t\t\t\"Reset Workspace Profiles Associations\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\tconst userDataProfilesService = accessor.get(\n\t\t\t\tIUserDataProfilesService,\n\t\t\t);\n\t\t\treturn userDataProfilesService.resetWorkspaces();\n\t\t}\n\t},\n);\n"],
  "mappings": ";;AAKA,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,SAAS,gCAAgC;AACzC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,MAAM,qCAAqC,QAAQ;AAAA,EAnBnD,OAmBmD;AAAA;AAAA;AAAA,EAClD,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ;AAAA,IACvB;AAAA,IACA;AAAA,EACD;AAAA,EACA,cAAc;AACb,UAAM;AAAA,MACL,IAAI,6BAA6B;AAAA,MACjC,OAAO,6BAA6B;AAAA,MACpC,UAAU;AAAA,MACV,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA4B;AACrC,WAAO,SACL,IAAI,iCAAiC,EACrC,+BAA+B;AAAA,EAClC;AACD;AAEA,gBAAgB,4BAA4B;AAI5C;AAAA,EACC,MAAM,8BAA8B,QAAQ;AAAA,IA/C7C,OA+C6C;AAAA;AAAA;AAAA,IAC3C,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,UAAU,mBAAmB,kBAAkB;AAAA,QACtD,UAAU,WAAW;AAAA,QACrB,IAAI;AAAA,QACJ,cAAc;AAAA,MACf,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,IAAI,UAA4B;AACrC,aAAO,SAAS,IAAI,wBAAwB,EAAE,QAAQ;AAAA,IACvD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,8BAA8B,QAAQ;AAAA,IAjE7C,OAiE6C;AAAA;AAAA;AAAA,IAC3C,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,QACrB,IAAI;AAAA,QACJ,cAAc;AAAA,MACf,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,IAAI,UAA4B;AACrC,YAAM,0BAA0B,SAAS;AAAA,QACxC;AAAA,MACD;AACA,aAAO,wBAAwB,gBAAgB;AAAA,IAChD;AAAA,EACD;AACD;",
  "names": []
}
