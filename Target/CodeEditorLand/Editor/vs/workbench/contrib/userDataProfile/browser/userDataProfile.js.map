{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataProfile/browser/userDataProfile.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IURLService } from \"../../../../platform/url/common/url.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tEditorPaneDescriptor,\n\ttype IEditorPaneRegistry,\n} from \"../../../browser/editor.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport {\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n} from \"../../../common/editor.js\";\nimport { IEditorGroupsService } from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../../services/environment/browser/environmentService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\tCURRENT_PROFILE_CONTEXT,\n\tHAS_PROFILES_CONTEXT,\n\tIS_CURRENT_PROFILE_TRANSIENT_CONTEXT,\n\tIUserDataProfileManagementService,\n\tIUserDataProfileService,\n\tPROFILES_CATEGORY,\n\tPROFILES_ENABLEMENT_CONTEXT,\n\tPROFILES_TITLE,\n\tisProfileURL,\n} from \"../../../services/userDataProfile/common/userDataProfile.js\";\nimport { IWorkspaceTagsService } from \"../../tags/common/workspaceTags.js\";\nimport type { IUserDataProfilesEditor } from \"../common/userDataProfile.js\";\nimport {\n\tUserDataProfilesEditor,\n\tUserDataProfilesEditorInput,\n\tUserDataProfilesEditorInputSerializer,\n} from \"./userDataProfilesEditor.js\";\n\nexport const OpenProfileMenu = new MenuId(\"OpenProfile\");\n\nexport class UserDataProfilesWorkbenchContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.userDataProfiles\";\n\n\tprivate readonly currentProfileContext: IContextKey<string>;\n\tprivate readonly isCurrentProfileTransientContext: IContextKey<boolean>;\n\tprivate readonly hasProfilesContext: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IUserDataProfileService\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileManagementService\n\t\tprivate readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkspaceTagsService\n\t\tprivate readonly workspaceTagsService: IWorkspaceTagsService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IEditorGroupsService\n\t\tprivate readonly editorGroupsService: IEditorGroupsService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IURLService private readonly urlService: IURLService,\n\t\t@IBrowserWorkbenchEnvironmentService\n\t\tenvironmentService: IBrowserWorkbenchEnvironmentService,\n\t) {\n\t\tsuper();\n\n\t\tthis.currentProfileContext =\n\t\t\tCURRENT_PROFILE_CONTEXT.bindTo(contextKeyService);\n\t\tPROFILES_ENABLEMENT_CONTEXT.bindTo(contextKeyService).set(\n\t\t\tthis.userDataProfilesService.isEnabled(),\n\t\t);\n\t\tthis.isCurrentProfileTransientContext =\n\t\t\tIS_CURRENT_PROFILE_TRANSIENT_CONTEXT.bindTo(contextKeyService);\n\n\t\tthis.currentProfileContext.set(\n\t\t\tthis.userDataProfileService.currentProfile.id,\n\t\t);\n\t\tthis.isCurrentProfileTransientContext.set(\n\t\t\t!!this.userDataProfileService.currentProfile.isTransient,\n\t\t);\n\t\tthis._register(\n\t\t\tthis.userDataProfileService.onDidChangeCurrentProfile((e) => {\n\t\t\t\tthis.currentProfileContext.set(\n\t\t\t\t\tthis.userDataProfileService.currentProfile.id,\n\t\t\t\t);\n\t\t\t\tthis.isCurrentProfileTransientContext.set(\n\t\t\t\t\t!!this.userDataProfileService.currentProfile.isTransient,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis.hasProfilesContext =\n\t\t\tHAS_PROFILES_CONTEXT.bindTo(contextKeyService);\n\t\tthis.hasProfilesContext.set(\n\t\t\tthis.userDataProfilesService.profiles.length > 1,\n\t\t);\n\t\tthis._register(\n\t\t\tthis.userDataProfilesService.onDidChangeProfiles((e) =>\n\t\t\t\tthis.hasProfilesContext.set(\n\t\t\t\t\tthis.userDataProfilesService.profiles.length > 1,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tthis.registerEditor();\n\t\tthis.registerActions();\n\n\t\tthis._register(this.urlService.registerHandler(this));\n\n\t\tif (isWeb) {\n\t\t\tlifecycleService\n\t\t\t\t.when(LifecyclePhase.Eventually)\n\t\t\t\t.then(() => userDataProfilesService.cleanUp());\n\t\t}\n\n\t\tthis.reportWorkspaceProfileInfo();\n\n\t\tif (environmentService.options?.profileToPreview) {\n\t\t\tlifecycleService\n\t\t\t\t.when(LifecyclePhase.Restored)\n\t\t\t\t.then(() =>\n\t\t\t\t\tthis.handleURL(\n\t\t\t\t\t\tURI.revive(\n\t\t\t\t\t\t\tenvironmentService.options!.profileToPreview!,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t}\n\t}\n\n\tasync handleURL(uri: URI): Promise<boolean> {\n\t\tif (isProfileURL(uri)) {\n\t\t\tconst editor = await this.openProfilesEditor();\n\t\t\tif (editor) {\n\t\t\t\teditor.createNewProfile(uri);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async openProfilesEditor(): Promise<\n\t\tIUserDataProfilesEditor | undefined\n\t> {\n\t\tconst editor = await this.editorGroupsService.activeGroup.openEditor(\n\t\t\tnew UserDataProfilesEditorInput(this.instantiationService),\n\t\t);\n\t\treturn editor as IUserDataProfilesEditor;\n\t}\n\n\tprivate registerEditor(): void {\n\t\tRegistry.as<IEditorPaneRegistry>(\n\t\t\tEditorExtensions.EditorPane,\n\t\t).registerEditorPane(\n\t\t\tEditorPaneDescriptor.create(\n\t\t\t\tUserDataProfilesEditor,\n\t\t\t\tUserDataProfilesEditor.ID,\n\t\t\t\tlocalize(\"userdataprofilesEditor\", \"Profiles Editor\"),\n\t\t\t),\n\t\t\t[new SyncDescriptor(UserDataProfilesEditorInput)],\n\t\t);\n\t\tRegistry.as<IEditorFactoryRegistry>(\n\t\t\tEditorExtensions.EditorFactory,\n\t\t).registerEditorSerializer(\n\t\t\tUserDataProfilesEditorInput.ID,\n\t\t\tUserDataProfilesEditorInputSerializer,\n\t\t);\n\t}\n\n\tprivate registerActions(): void {\n\t\tthis._register(this.registerManageProfilesAction());\n\t\tthis._register(this.registerSwitchProfileAction());\n\n\t\tthis.registerOpenProfileSubMenu();\n\t\tthis.registerNewWindowWithProfileAction();\n\t\tthis.registerProfilesActions();\n\t\tthis._register(\n\t\t\tthis.userDataProfilesService.onDidChangeProfiles(() =>\n\t\t\t\tthis.registerProfilesActions(),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(this.registerExportCurrentProfileAction());\n\n\t\tthis.registerCreateFromCurrentProfileAction();\n\t\tthis.registerNewProfileAction();\n\t\tthis.registerDeleteProfileAction();\n\n\t\tthis.registerHelpAction();\n\t}\n\n\tprivate registerOpenProfileSubMenu(): void {\n\t\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\t\ttitle: localize(\"New Profile Window\", \"New Window with Profile\"),\n\t\t\tsubmenu: OpenProfileMenu,\n\t\t\tgroup: \"1_new\",\n\t\t\torder: 4,\n\t\t});\n\t}\n\n\tprivate readonly profilesDisposable = this._register(\n\t\tnew MutableDisposable<DisposableStore>(),\n\t);\n\tprivate registerProfilesActions(): void {\n\t\tthis.profilesDisposable.value = new DisposableStore();\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tif (!profile.isTransient) {\n\t\t\t\tthis.profilesDisposable.value.add(\n\t\t\t\t\tthis.registerNewWindowAction(profile),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate registerNewWindowWithProfileAction(): IDisposable {\n\t\treturn registerAction2(\n\t\t\tclass NewWindowWithProfileAction extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: `workbench.profiles.actions.newWindowWithProfile`,\n\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\"newWindowWithProfile\",\n\t\t\t\t\t\t\t\"New Window with Profile...\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\t\tprecondition: HAS_PROFILES_CONTEXT,\n\t\t\t\t\t\tf1: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\t\tconst userDataProfilesService = accessor.get(\n\t\t\t\t\t\tIUserDataProfilesService,\n\t\t\t\t\t);\n\t\t\t\t\tconst hostService = accessor.get(IHostService);\n\n\t\t\t\t\tconst pick = await quickInputService.pick(\n\t\t\t\t\t\tuserDataProfilesService.profiles.map((profile) => ({\n\t\t\t\t\t\t\tlabel: profile.name,\n\t\t\t\t\t\t\tprofile,\n\t\t\t\t\t\t})),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"new window with profile\",\n\t\t\t\t\t\t\t\t\"New Window with Profile\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\t\t\t\"pick profile\",\n\t\t\t\t\t\t\t\t\"Select Profile\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcanPickMany: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tif (pick) {\n\t\t\t\t\t\treturn hostService.openWindow({\n\t\t\t\t\t\t\tremoteAuthority: null,\n\t\t\t\t\t\t\tforceProfile: pick.profile.name,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate registerNewWindowAction(profile: IUserDataProfile): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst id = `workbench.action.openProfile.${profile.name.replace(\"/s+/\", \"_\")}`;\n\n\t\tdisposables.add(\n\t\t\tregisterAction2(\n\t\t\t\tclass NewWindowAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\ttitle: localize2(\"openShort\", \"{0}\", profile.name),\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: OpenProfileMenu,\n\t\t\t\t\t\t\t\tgroup: \"0_profiles\",\n\t\t\t\t\t\t\t\twhen: HAS_PROFILES_CONTEXT,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\tconst hostService = accessor.get(IHostService);\n\t\t\t\t\t\treturn hostService.openWindow({\n\t\t\t\t\t\t\tremoteAuthority: null,\n\t\t\t\t\t\t\tforceProfile: profile.name,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\t\tcommand: {\n\t\t\t\t\tid,\n\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\ttitle: localize2(\"open\", \"Open {0} Profile\", profile.name),\n\t\t\t\t\tprecondition: HAS_PROFILES_CONTEXT,\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\treturn disposables;\n\t}\n\n\tprivate registerSwitchProfileAction(): IDisposable {\n\t\tconst that = this;\n\t\treturn registerAction2(\n\t\t\tclass SwitchProfileAction extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: `workbench.profiles.actions.switchProfile`,\n\t\t\t\t\t\ttitle: localize2(\"switchProfile\", \"Switch Profile...\"),\n\t\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\t\t\t\tconst items: Array<\n\t\t\t\t\t\tIQuickPickItem & { profile: IUserDataProfile }\n\t\t\t\t\t> = [];\n\t\t\t\t\tfor (const profile of that.userDataProfilesService\n\t\t\t\t\t\t.profiles) {\n\t\t\t\t\t\titems.push({\n\t\t\t\t\t\t\tid: profile.id,\n\t\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\t\tprofile.id ===\n\t\t\t\t\t\t\t\tthat.userDataProfileService.currentProfile.id\n\t\t\t\t\t\t\t\t\t? `$(check) ${profile.name}`\n\t\t\t\t\t\t\t\t\t: profile.name,\n\t\t\t\t\t\t\tprofile,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await quickInputService.pick(\n\t\t\t\t\t\titems.sort((a, b) =>\n\t\t\t\t\t\t\ta.profile.name.localeCompare(b.profile.name),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\t\t\t\"selectProfile\",\n\t\t\t\t\t\t\t\t\"Select Profile\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tawait that.userDataProfileManagementService.switchProfile(\n\t\t\t\t\t\t\tresult.profile,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate registerManageProfilesAction(): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(\n\t\t\tregisterAction2(\n\t\t\t\tclass ManageProfilesAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.profiles.actions.manageProfiles`,\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t...localize2(\"manage profiles\", \"Profiles\"),\n\t\t\t\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"miOpenProfiles\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Profiles\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmenu: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\t\t\t\tgroup: \"2_configuration\",\n\t\t\t\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: MenuId.MenubarPreferencesMenu,\n\t\t\t\t\t\t\t\t\tgroup: \"2_configuration\",\n\t\t\t\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\t\t\tconst editorGroupsService =\n\t\t\t\t\t\t\taccessor.get(IEditorGroupsService);\n\t\t\t\t\t\tconst instantiationService = accessor.get(\n\t\t\t\t\t\t\tIInstantiationService,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn editorGroupsService.activeGroup.openEditor(\n\t\t\t\t\t\t\tnew UserDataProfilesEditorInput(\n\t\t\t\t\t\t\t\tinstantiationService,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\t\tcommand: {\n\t\t\t\t\tid: \"workbench.profiles.actions.manageProfiles\",\n\t\t\t\t\tcategory: Categories.Preferences,\n\t\t\t\t\ttitle: localize2(\"open profiles\", \"Open Profiles (UI)\"),\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\treturn disposables;\n\t}\n\n\tprivate registerExportCurrentProfileAction(): IDisposable {\n\t\tconst that = this;\n\t\tconst disposables = new DisposableStore();\n\t\tconst id = \"workbench.profiles.actions.exportProfile\";\n\t\tdisposables.add(\n\t\t\tregisterAction2(\n\t\t\t\tclass ExportProfileAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\t\"export profile\",\n\t\t\t\t\t\t\t\t\"Export Profile...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run() {\n\t\t\t\t\t\tconst editor = await that.openProfilesEditor();\n\t\t\t\t\t\teditor?.selectProfile(\n\t\t\t\t\t\t\tthat.userDataProfileService.currentProfile,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tMenuRegistry.appendMenuItem(MenuId.MenubarShare, {\n\t\t\t\tcommand: {\n\t\t\t\t\tid,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"export profile in share\",\n\t\t\t\t\t\t\"Export Profile ({0})...\",\n\t\t\t\t\t\tthat.userDataProfileService.currentProfile.name,\n\t\t\t\t\t),\n\t\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t\treturn disposables;\n\t}\n\n\tprivate registerCreateFromCurrentProfileAction(): void {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass CreateFromCurrentProfileAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.profiles.actions.createFromCurrentProfile\",\n\t\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\t\"save profile as\",\n\t\t\t\t\t\t\t\t\"Save Current Profile As...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run() {\n\t\t\t\t\t\tconst editor = await that.openProfilesEditor();\n\t\t\t\t\t\teditor?.createNewProfile(\n\t\t\t\t\t\t\tthat.userDataProfileService.currentProfile,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerNewProfileAction(): void {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass CreateProfileAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.profiles.actions.createProfile\",\n\t\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\t\"create profile\",\n\t\t\t\t\t\t\t\t\"New Profile...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t\tmenu: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: OpenProfileMenu,\n\t\t\t\t\t\t\t\t\tgroup: \"1_manage_profiles\",\n\t\t\t\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\t\t\tconst editor = await that.openProfilesEditor();\n\t\t\t\t\t\treturn editor?.createNewProfile();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerDeleteProfileAction(): void {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass DeleteProfileAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.profiles.actions.deleteProfile\",\n\t\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\t\"delete profile\",\n\t\t\t\t\t\t\t\t\"Delete Profile...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\tPROFILES_ENABLEMENT_CONTEXT,\n\t\t\t\t\t\t\t\tHAS_PROFILES_CONTEXT,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\t\t\tconst quickInputService =\n\t\t\t\t\t\t\taccessor.get(IQuickInputService);\n\t\t\t\t\t\tconst userDataProfileService = accessor.get(\n\t\t\t\t\t\t\tIUserDataProfileService,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst userDataProfilesService = accessor.get(\n\t\t\t\t\t\t\tIUserDataProfilesService,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst userDataProfileManagementService = accessor.get(\n\t\t\t\t\t\t\tIUserDataProfileManagementService,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst notificationService =\n\t\t\t\t\t\t\taccessor.get(INotificationService);\n\n\t\t\t\t\t\tconst profiles =\n\t\t\t\t\t\t\tuserDataProfilesService.profiles.filter(\n\t\t\t\t\t\t\t\t(p) => !p.isDefault && !p.isTransient,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (profiles.length) {\n\t\t\t\t\t\t\tconst picks = await quickInputService.pick(\n\t\t\t\t\t\t\t\tprofiles.map((profile) => ({\n\t\t\t\t\t\t\t\t\tlabel: profile.name,\n\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\tprofile.id ===\n\t\t\t\t\t\t\t\t\t\tuserDataProfileService.currentProfile.id\n\t\t\t\t\t\t\t\t\t\t\t? localize(\"current\", \"Current\")\n\t\t\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\t\tprofile,\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\t\t\"delete specific profile\",\n\t\t\t\t\t\t\t\t\t\t\"Delete Profile...\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\t\t\t\t\t\"pick profile to delete\",\n\t\t\t\t\t\t\t\t\t\t\"Select Profiles to Delete\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcanPickMany: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (picks) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\t\t\t\t\tpicks.map((pick) =>\n\t\t\t\t\t\t\t\t\t\t\tuserDataProfileManagementService.removeProfile(\n\t\t\t\t\t\t\t\t\t\t\t\tpick.profile,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\tnotificationService.error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerHelpAction(): void {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass HelpAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.profiles.actions.help\",\n\t\t\t\t\t\t\ttitle: PROFILES_TITLE,\n\t\t\t\t\t\t\tcategory: Categories.Help,\n\t\t\t\t\t\t\tmenu: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\trun(accessor: ServicesAccessor): any {\n\t\t\t\t\t\treturn accessor\n\t\t\t\t\t\t\t.get(IOpenerService)\n\t\t\t\t\t\t\t.open(\n\t\t\t\t\t\t\t\tURI.parse(\n\t\t\t\t\t\t\t\t\t\"https://aka.ms/vscode-profiles-help\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async reportWorkspaceProfileInfo(): Promise<void> {\n\t\tawait this.lifecycleService.when(LifecyclePhase.Eventually);\n\t\tconst workspaceId =\n\t\t\tawait this.workspaceTagsService.getTelemetryWorkspaceId(\n\t\t\t\tthis.workspaceContextService.getWorkspace(),\n\t\t\t\tthis.workspaceContextService.getWorkbenchState(),\n\t\t\t);\n\t\ttype WorkspaceProfileInfoClassification = {\n\t\t\towner: \"sandy081\";\n\t\t\tcomment: \"Report profile information of the current workspace\";\n\t\t\tworkspaceId: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"A UUID given to a workspace to identify it.\";\n\t\t\t};\n\t\t\tdefaultProfile: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether the profile of the workspace is default or not.\";\n\t\t\t};\n\t\t};\n\t\ttype WorkspaceProfileInfoEvent = {\n\t\t\tworkspaceId: string | undefined;\n\t\t\tdefaultProfile: boolean;\n\t\t};\n\t\tthis.telemetryService.publicLog2<\n\t\t\tWorkspaceProfileInfoEvent,\n\t\t\tWorkspaceProfileInfoClassification\n\t\t>(\"workspaceProfileInfo\", {\n\t\t\tworkspaceId,\n\t\t\tdefaultProfile:\n\t\t\t\tthis.userDataProfileService.currentProfile.isDefault,\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
