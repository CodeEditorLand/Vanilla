{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataProfile/browser/userDataProfile.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { isWeb } from '../../../../base/common/platform.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Action2, MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IUserDataProfile, IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { ILifecycleService, LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { CURRENT_PROFILE_CONTEXT, HAS_PROFILES_CONTEXT, IS_CURRENT_PROFILE_TRANSIENT_CONTEXT, IUserDataProfileManagementService, IUserDataProfileService, PROFILES_CATEGORY, PROFILES_ENABLEMENT_CONTEXT, PROFILES_TITLE, isProfileURL } from '../../../services/userDataProfile/common/userDataProfile.js';\nimport { IQuickInputService, IQuickPickItem } from '../../../../platform/quickinput/common/quickInput.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { IWorkspaceTagsService } from '../../tags/common/workspaceTags.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { EditorExtensions, IEditorFactoryRegistry } from '../../../common/editor.js';\nimport { UserDataProfilesEditor, UserDataProfilesEditorInput, UserDataProfilesEditorInputSerializer } from './userDataProfilesEditor.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { IUserDataProfilesEditor } from '../common/userDataProfile.js';\nimport { IURLService } from '../../../../platform/url/common/url.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../../../services/environment/browser/environmentService.js';\n\nexport const OpenProfileMenu = new MenuId('OpenProfile');\n\nexport class UserDataProfilesWorkbenchContribution extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.userDataProfiles';\n\n\tprivate readonly currentProfileContext: IContextKey<string>;\n\tprivate readonly isCurrentProfileTransientContext: IContextKey<boolean>;\n\tprivate readonly hasProfilesContext: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileManagementService private readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkspaceTagsService private readonly workspaceTagsService: IWorkspaceTagsService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IEditorGroupsService private readonly editorGroupsService: IEditorGroupsService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IURLService private readonly urlService: IURLService,\n\t\t@IBrowserWorkbenchEnvironmentService environmentService: IBrowserWorkbenchEnvironmentService,\n\t) {\n\t\tsuper();\n\n\t\tthis.currentProfileContext = CURRENT_PROFILE_CONTEXT.bindTo(contextKeyService);\n\t\tPROFILES_ENABLEMENT_CONTEXT.bindTo(contextKeyService).set(this.userDataProfilesService.isEnabled());\n\t\tthis.isCurrentProfileTransientContext = IS_CURRENT_PROFILE_TRANSIENT_CONTEXT.bindTo(contextKeyService);\n\n\t\tthis.currentProfileContext.set(this.userDataProfileService.currentProfile.id);\n\t\tthis.isCurrentProfileTransientContext.set(!!this.userDataProfileService.currentProfile.isTransient);\n\t\tthis._register(this.userDataProfileService.onDidChangeCurrentProfile(e => {\n\t\t\tthis.currentProfileContext.set(this.userDataProfileService.currentProfile.id);\n\t\t\tthis.isCurrentProfileTransientContext.set(!!this.userDataProfileService.currentProfile.isTransient);\n\t\t}));\n\n\t\tthis.hasProfilesContext = HAS_PROFILES_CONTEXT.bindTo(contextKeyService);\n\t\tthis.hasProfilesContext.set(this.userDataProfilesService.profiles.length > 1);\n\t\tthis._register(this.userDataProfilesService.onDidChangeProfiles(e => this.hasProfilesContext.set(this.userDataProfilesService.profiles.length > 1)));\n\n\t\tthis.registerEditor();\n\t\tthis.registerActions();\n\n\t\tthis._register(this.urlService.registerHandler(this));\n\n\t\tif (isWeb) {\n\t\t\tlifecycleService.when(LifecyclePhase.Eventually).then(() => userDataProfilesService.cleanUp());\n\t\t}\n\n\t\tthis.reportWorkspaceProfileInfo();\n\n\t\tif (environmentService.options?.profileToPreview) {\n\t\t\tlifecycleService.when(LifecyclePhase.Restored).then(() => this.handleURL(URI.revive(environmentService.options!.profileToPreview!)));\n\t\t}\n\t}\n\n\tasync handleURL(uri: URI): Promise<boolean> {\n\t\tif (isProfileURL(uri)) {\n\t\t\tconst editor = await this.openProfilesEditor();\n\t\t\tif (editor) {\n\t\t\t\teditor.createNewProfile(uri);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async openProfilesEditor(): Promise<IUserDataProfilesEditor | undefined> {\n\t\tconst editor = await this.editorGroupsService.activeGroup.openEditor(new UserDataProfilesEditorInput(this.instantiationService));\n\t\treturn editor as IUserDataProfilesEditor;\n\t}\n\n\tprivate registerEditor(): void {\n\t\tRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\t\t\tEditorPaneDescriptor.create(\n\t\t\t\tUserDataProfilesEditor,\n\t\t\t\tUserDataProfilesEditor.ID,\n\t\t\t\tlocalize('userdataprofilesEditor', \"Profiles Editor\")\n\t\t\t),\n\t\t\t[\n\t\t\t\tnew SyncDescriptor(UserDataProfilesEditorInput)\n\t\t\t]\n\t\t);\n\t\tRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(UserDataProfilesEditorInput.ID, UserDataProfilesEditorInputSerializer);\n\t}\n\n\tprivate registerActions(): void {\n\t\tthis._register(this.registerManageProfilesAction());\n\t\tthis._register(this.registerSwitchProfileAction());\n\n\t\tthis.registerOpenProfileSubMenu();\n\t\tthis.registerNewWindowWithProfileAction();\n\t\tthis.registerProfilesActions();\n\t\tthis._register(this.userDataProfilesService.onDidChangeProfiles(() => this.registerProfilesActions()));\n\n\t\tthis._register(this.registerExportCurrentProfileAction());\n\n\t\tthis.registerCreateFromCurrentProfileAction();\n\t\tthis.registerNewProfileAction();\n\t\tthis.registerDeleteProfileAction();\n\n\t\tthis.registerHelpAction();\n\t}\n\n\tprivate registerOpenProfileSubMenu(): void {\n\t\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\t\ttitle: localize('New Profile Window', \"New Window with Profile\"),\n\t\t\tsubmenu: OpenProfileMenu,\n\t\t\tgroup: '1_new',\n\t\t\torder: 4,\n\t\t});\n\t}\n\n\tprivate readonly profilesDisposable = this._register(new MutableDisposable<DisposableStore>());\n\tprivate registerProfilesActions(): void {\n\t\tthis.profilesDisposable.value = new DisposableStore();\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tif (!profile.isTransient) {\n\t\t\t\tthis.profilesDisposable.value.add(this.registerNewWindowAction(profile));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate registerNewWindowWithProfileAction(): IDisposable {\n\t\treturn registerAction2(class NewWindowWithProfileAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.profiles.actions.newWindowWithProfile`,\n\t\t\t\t\ttitle: localize2('newWindowWithProfile', \"New Window with Profile...\"),\n\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\tprecondition: HAS_PROFILES_CONTEXT,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\tconst userDataProfilesService = accessor.get(IUserDataProfilesService);\n\t\t\t\tconst hostService = accessor.get(IHostService);\n\n\t\t\t\tconst pick = await quickInputService.pick(\n\t\t\t\t\tuserDataProfilesService.profiles.map(profile => ({\n\t\t\t\t\t\tlabel: profile.name,\n\t\t\t\t\t\tprofile\n\t\t\t\t\t})),\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: localize('new window with profile', \"New Window with Profile\"),\n\t\t\t\t\t\tplaceHolder: localize('pick profile', \"Select Profile\"),\n\t\t\t\t\t\tcanPickMany: false\n\t\t\t\t\t});\n\t\t\t\tif (pick) {\n\t\t\t\t\treturn hostService.openWindow({ remoteAuthority: null, forceProfile: pick.profile.name });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerNewWindowAction(profile: IUserDataProfile): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst id = `workbench.action.openProfile.${profile.name.replace('/\\s+/', '_')}`;\n\n\t\tdisposables.add(registerAction2(class NewWindowAction extends Action2 {\n\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid,\n\t\t\t\t\ttitle: localize2('openShort', \"{0}\", profile.name),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: OpenProfileMenu,\n\t\t\t\t\t\tgroup: '0_profiles',\n\t\t\t\t\t\twhen: HAS_PROFILES_CONTEXT\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst hostService = accessor.get(IHostService);\n\t\t\t\treturn hostService.openWindow({ remoteAuthority: null, forceProfile: profile.name });\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(MenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid,\n\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\ttitle: localize2('open', \"Open {0} Profile\", profile.name),\n\t\t\t\tprecondition: HAS_PROFILES_CONTEXT\n\t\t\t},\n\t\t}));\n\n\t\treturn disposables;\n\t}\n\n\tprivate registerSwitchProfileAction(): IDisposable {\n\t\tconst that = this;\n\t\treturn registerAction2(class SwitchProfileAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.profiles.actions.switchProfile`,\n\t\t\t\t\ttitle: localize2('switchProfile', 'Switch Profile...'),\n\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\t\t\tconst items: Array<IQuickPickItem & { profile: IUserDataProfile }> = [];\n\t\t\t\tfor (const profile of that.userDataProfilesService.profiles) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\tid: profile.id,\n\t\t\t\t\t\tlabel: profile.id === that.userDataProfileService.currentProfile.id ? `$(check) ${profile.name}` : profile.name,\n\t\t\t\t\t\tprofile,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst result = await quickInputService.pick(items.sort((a, b) => a.profile.name.localeCompare(b.profile.name)), {\n\t\t\t\t\tplaceHolder: localize('selectProfile', \"Select Profile\")\n\t\t\t\t});\n\t\t\t\tif (result) {\n\t\t\t\t\tawait that.userDataProfileManagementService.switchProfile(result.profile);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerManageProfilesAction(): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(registerAction2(class ManageProfilesAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.profiles.actions.manageProfiles`,\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\t...localize2('manage profiles', \"Profiles\"),\n\t\t\t\t\t\tmnemonicTitle: localize({ key: 'miOpenProfiles', comment: ['&& denotes a mnemonic'] }, \"&&Profiles\"),\n\t\t\t\t\t},\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\t\tgroup: '2_configuration',\n\t\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.MenubarPreferencesMenu,\n\t\t\t\t\t\t\tgroup: '2_configuration',\n\t\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\treturn editorGroupsService.activeGroup.openEditor(new UserDataProfilesEditorInput(instantiationService));\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(MenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: 'workbench.profiles.actions.manageProfiles',\n\t\t\t\tcategory: Categories.Preferences,\n\t\t\t\ttitle: localize2('open profiles', \"Open Profiles (UI)\"),\n\t\t\t},\n\t\t}));\n\n\t\treturn disposables;\n\t}\n\n\tprivate registerExportCurrentProfileAction(): IDisposable {\n\t\tconst that = this;\n\t\tconst disposables = new DisposableStore();\n\t\tconst id = 'workbench.profiles.actions.exportProfile';\n\t\tdisposables.add(registerAction2(class ExportProfileAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid,\n\t\t\t\t\ttitle: localize2('export profile', \"Export Profile...\"),\n\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run() {\n\t\t\t\tconst editor = await that.openProfilesEditor();\n\t\t\t\teditor?.selectProfile(that.userDataProfileService.currentProfile);\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(MenuRegistry.appendMenuItem(MenuId.MenubarShare, {\n\t\t\tcommand: {\n\t\t\t\tid,\n\t\t\t\ttitle: localize2('export profile in share', \"Export Profile ({0})...\", that.userDataProfileService.currentProfile.name),\n\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t\t},\n\t\t}));\n\t\treturn disposables;\n\t}\n\n\n\tprivate registerCreateFromCurrentProfileAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class CreateFromCurrentProfileAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.profiles.actions.createFromCurrentProfile',\n\t\t\t\t\ttitle: localize2('save profile as', \"Save Current Profile As...\"),\n\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run() {\n\t\t\t\tconst editor = await that.openProfilesEditor();\n\t\t\t\teditor?.createNewProfile(that.userDataProfileService.currentProfile);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerNewProfileAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class CreateProfileAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.profiles.actions.createProfile',\n\t\t\t\t\ttitle: localize2('create profile', \"New Profile...\"),\n\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\tprecondition: PROFILES_ENABLEMENT_CONTEXT,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: OpenProfileMenu,\n\t\t\t\t\t\t\tgroup: '1_manage_profiles',\n\t\t\t\t\t\t\torder: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\tconst editor = await that.openProfilesEditor();\n\t\t\t\treturn editor?.createNewProfile();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerDeleteProfileAction(): void {\n\t\tthis._register(registerAction2(class DeleteProfileAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.profiles.actions.deleteProfile',\n\t\t\t\t\ttitle: localize2('delete profile', \"Delete Profile...\"),\n\t\t\t\t\tcategory: PROFILES_CATEGORY,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tprecondition: ContextKeyExpr.and(PROFILES_ENABLEMENT_CONTEXT, HAS_PROFILES_CONTEXT),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\tconst userDataProfileService = accessor.get(IUserDataProfileService);\n\t\t\t\tconst userDataProfilesService = accessor.get(IUserDataProfilesService);\n\t\t\t\tconst userDataProfileManagementService = accessor.get(IUserDataProfileManagementService);\n\t\t\t\tconst notificationService = accessor.get(INotificationService);\n\n\t\t\t\tconst profiles = userDataProfilesService.profiles.filter(p => !p.isDefault && !p.isTransient);\n\t\t\t\tif (profiles.length) {\n\t\t\t\t\tconst picks = await quickInputService.pick(\n\t\t\t\t\t\tprofiles.map(profile => ({\n\t\t\t\t\t\t\tlabel: profile.name,\n\t\t\t\t\t\t\tdescription: profile.id === userDataProfileService.currentProfile.id ? localize('current', \"Current\") : undefined,\n\t\t\t\t\t\t\tprofile\n\t\t\t\t\t\t})),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: localize('delete specific profile', \"Delete Profile...\"),\n\t\t\t\t\t\t\tplaceHolder: localize('pick profile to delete', \"Select Profiles to Delete\"),\n\t\t\t\t\t\t\tcanPickMany: true\n\t\t\t\t\t\t});\n\t\t\t\t\tif (picks) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait Promise.all(picks.map(pick => userDataProfileManagementService.removeProfile(pick.profile)));\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tnotificationService.error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerHelpAction(): void {\n\t\tthis._register(registerAction2(class HelpAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.profiles.actions.help',\n\t\t\t\t\ttitle: PROFILES_TITLE,\n\t\t\t\t\tcategory: Categories.Help,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t}],\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor): any {\n\t\t\t\treturn accessor.get(IOpenerService).open(URI.parse('https://aka.ms/vscode-profiles-help'));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async reportWorkspaceProfileInfo(): Promise<void> {\n\t\tawait this.lifecycleService.when(LifecyclePhase.Eventually);\n\t\tconst workspaceId = await this.workspaceTagsService.getTelemetryWorkspaceId(this.workspaceContextService.getWorkspace(), this.workspaceContextService.getWorkbenchState());\n\t\ttype WorkspaceProfileInfoClassification = {\n\t\t\towner: 'sandy081';\n\t\t\tcomment: 'Report profile information of the current workspace';\n\t\t\tworkspaceId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'A UUID given to a workspace to identify it.' };\n\t\t\tdefaultProfile: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether the profile of the workspace is default or not.' };\n\t\t};\n\t\ttype WorkspaceProfileInfoEvent = {\n\t\t\tworkspaceId: string | undefined;\n\t\t\tdefaultProfile: boolean;\n\t\t};\n\t\tthis.telemetryService.publicLog2<WorkspaceProfileInfoEvent, WorkspaceProfileInfoClassification>('workspaceProfileInfo', {\n\t\t\tworkspaceId,\n\t\t\tdefaultProfile: this.userDataProfileService.currentProfile.isDefault\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
