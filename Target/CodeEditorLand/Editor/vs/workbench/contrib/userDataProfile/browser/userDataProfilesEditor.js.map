{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataProfile/browser/userDataProfilesEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/userDataProfilesEditor.css\";\nimport {\n\t$,\n\tDimension,\n\tEventHelper,\n\tEventType,\n\ttype IDomPosition,\n\taddDisposableListener,\n\tappend,\n\tclearNode,\n\ttrackFocus,\n} from \"../../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport { renderMarkdown } from \"../../../../base/browser/markdownRenderer.js\";\nimport {\n\tButton,\n\tButtonWithDropdown,\n} from \"../../../../base/browser/ui/button/button.js\";\nimport type { IHoverWidget } from \"../../../../base/browser/ui/hover/hover.js\";\nimport type { IHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegate.js\";\nimport { createInstantHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { HoverPosition } from \"../../../../base/browser/ui/hover/hoverWidget.js\";\nimport {\n\tInputBox,\n\tMessageType,\n} from \"../../../../base/browser/ui/inputbox/inputBox.js\";\nimport {\n\tCachedListVirtualDelegate,\n\ttype IListRenderer,\n\ttype IListVirtualDelegate,\n} from \"../../../../base/browser/ui/list/list.js\";\nimport { Radio } from \"../../../../base/browser/ui/radio/radio.js\";\nimport {\n\ttype ISelectOptionItem,\n\tSelectBox,\n} from \"../../../../base/browser/ui/selectBox/selectBox.js\";\nimport {\n\tOrientation,\n\tSizing,\n\tSplitView,\n} from \"../../../../base/browser/ui/splitview/splitview.js\";\nimport { Checkbox } from \"../../../../base/browser/ui/toggle/toggle.js\";\nimport { RenderIndentGuides } from \"../../../../base/browser/ui/tree/abstractTree.js\";\nimport type {\n\tIAsyncDataSource,\n\tITreeNode,\n\tITreeRenderer,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport {\n\tAction,\n\ttype IAction,\n\tSeparator,\n\tSubmenuAction,\n} from \"../../../../base/common/actions.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { MarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { basename } from \"../../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { isString, isUndefined } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { WorkbenchToolBar } from \"../../../../platform/actions/browser/toolbar.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n} from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IFileDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport type { IEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport {\n\tIHoverService,\n\tWorkbenchHoverDelegate,\n} from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tWorkbenchAsyncDataTree,\n\tWorkbenchList,\n} from \"../../../../platform/list/browser/listService.js\";\nimport { IEditorProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tdefaultButtonStyles,\n\tdefaultCheckboxStyles,\n\tdefaultInputBoxStyles,\n\tdefaultSelectBoxStyles,\n\tgetInputBoxStyle,\n\tgetListStyles,\n} from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\teditorBackground,\n\tforeground,\n\tregisterColor,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n\tProfileResourceType,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tDEFAULT_LABELS_CONTAINER,\n\ttype IResourceLabel,\n\tResourceLabels,\n} from \"../../../browser/labels.js\";\nimport { EditorPane } from \"../../../browser/parts/editor/editorPane.js\";\nimport type {\n\tIEditorOpenContext,\n\tIEditorSerializer,\n\tIUntypedEditorInput,\n} from \"../../../common/editor.js\";\nimport { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { PANEL_BORDER } from \"../../../common/theme.js\";\nimport type { IEditorGroup } from \"../../../services/editor/common/editorGroupsService.js\";\nimport { WorkbenchIconSelectBox } from \"../../../services/userDataProfile/browser/iconSelectBox.js\";\nimport {\n\ttype IProfileTemplateInfo,\n\tIUserDataProfileService,\n\tPROFILE_FILTER,\n\tdefaultUserDataProfileIcon,\n} from \"../../../services/userDataProfile/common/userDataProfile.js\";\nimport {\n\tDEFAULT_ICON,\n\tICONS,\n} from \"../../../services/userDataProfile/common/userDataProfileIcons.js\";\nimport { settingsTextInputBorder } from \"../../preferences/common/settingsEditorColorRegistry.js\";\nimport type { IUserDataProfilesEditor } from \"../common/userDataProfile.js\";\nimport {\n\tAbstractUserDataProfileElement,\n\ttype IProfileChildElement,\n\ttype IProfileResourceTypeChildElement,\n\ttype IProfileResourceTypeElement,\n\tNewProfileElement,\n\tUserDataProfileElement,\n\tUserDataProfilesEditorModel,\n\tisProfileResourceChildElement,\n\tisProfileResourceTypeElement,\n} from \"./userDataProfilesEditorModel.js\";\n\nexport const profilesSashBorder = registerColor(\n\t\"profiles.sashBorder\",\n\tPANEL_BORDER,\n\tlocalize(\n\t\t\"profilesSashBorder\",\n\t\t\"The color of the Profiles editor splitview sash border.\",\n\t),\n);\n\nconst listStyles = getListStyles({\n\tlistActiveSelectionBackground: editorBackground,\n\tlistActiveSelectionForeground: foreground,\n\tlistFocusAndSelectionBackground: editorBackground,\n\tlistFocusAndSelectionForeground: foreground,\n\tlistFocusBackground: editorBackground,\n\tlistFocusForeground: foreground,\n\tlistHoverForeground: foreground,\n\tlistHoverBackground: editorBackground,\n\tlistHoverOutline: editorBackground,\n\tlistFocusOutline: editorBackground,\n\tlistInactiveSelectionBackground: editorBackground,\n\tlistInactiveSelectionForeground: foreground,\n\tlistInactiveFocusBackground: editorBackground,\n\tlistInactiveFocusOutline: editorBackground,\n\ttreeIndentGuidesStroke: undefined,\n\ttreeInactiveIndentGuidesStroke: undefined,\n});\n\nexport class UserDataProfilesEditor\n\textends EditorPane\n\timplements IUserDataProfilesEditor\n{\n\tstatic readonly ID: string = \"workbench.editor.userDataProfiles\";\n\n\tprivate container: HTMLElement | undefined;\n\tprivate splitView: SplitView<number> | undefined;\n\tprivate profilesList:\n\t\t| WorkbenchList<AbstractUserDataProfileElement>\n\t\t| undefined;\n\tprivate profileWidget: ProfileWidget | undefined;\n\n\tprivate model: UserDataProfilesEditorModel | undefined;\n\tprivate templates: readonly IProfileTemplateInfo[] = [];\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(UserDataProfilesEditor.ID, group, telemetryService, themeService, storageService);\n\t}\n\n\tlayout(dimension: Dimension, position?: IDomPosition | undefined): void {\n\t\tif (this.container && this.splitView) {\n\t\t\tconst height = dimension.height - 20;\n\t\t\tthis.splitView.layout(this.container?.clientWidth, height);\n\t\t\tthis.splitView.el.style.height = `${height}px`;\n\t\t}\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tthis.container = append(parent, $(\".profiles-editor\"));\n\n\t\tconst sidebarView = append(this.container, $(\".sidebar-view\"));\n\t\tconst sidebarContainer = append(sidebarView, $(\".sidebar-container\"));\n\n\t\tconst contentsView = append(this.container, $(\".contents-view\"));\n\t\tconst contentsContainer = append(\n\t\t\tcontentsView,\n\t\t\t$(\".contents-container\"),\n\t\t);\n\t\tthis.profileWidget = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tProfileWidget,\n\t\t\t\tcontentsContainer,\n\t\t\t),\n\t\t);\n\n\t\tthis.splitView = new SplitView(this.container, {\n\t\t\torientation: Orientation.HORIZONTAL,\n\t\t\tproportionalLayout: true,\n\t\t});\n\n\t\tthis.renderSidebar(sidebarContainer);\n\t\tthis.splitView.addView(\n\t\t\t{\n\t\t\t\tonDidChange: Event.None,\n\t\t\t\telement: sidebarView,\n\t\t\t\tminimumSize: 200,\n\t\t\t\tmaximumSize: 350,\n\t\t\t\tlayout: (width, _, height) => {\n\t\t\t\t\tsidebarView.style.width = `${width}px`;\n\t\t\t\t\tif (height && this.profilesList) {\n\t\t\t\t\t\tconst listHeight =\n\t\t\t\t\t\t\theight -\n\t\t\t\t\t\t\t40 /* new profile button */ -\n\t\t\t\t\t\t\t15 /* marginTop */;\n\t\t\t\t\t\tthis.profilesList.getHTMLElement().style.height = `${listHeight}px`;\n\t\t\t\t\t\tthis.profilesList.layout(listHeight, width);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t300,\n\t\t\tundefined,\n\t\t\ttrue,\n\t\t);\n\t\tthis.splitView.addView(\n\t\t\t{\n\t\t\t\tonDidChange: Event.None,\n\t\t\t\telement: contentsView,\n\t\t\t\tminimumSize: 550,\n\t\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\t\tlayout: (width, _, height) => {\n\t\t\t\t\tcontentsView.style.width = `${width}px`;\n\t\t\t\t\tif (height) {\n\t\t\t\t\t\tthis.profileWidget?.layout(\n\t\t\t\t\t\t\tnew Dimension(width, height),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\tSizing.Distribute,\n\t\t\tundefined,\n\t\t\ttrue,\n\t\t);\n\n\t\tthis.registerListeners();\n\t\tthis.updateStyles();\n\t}\n\n\toverride updateStyles(): void {\n\t\tconst borderColor = this.theme.getColor(profilesSashBorder)!;\n\t\tthis.splitView?.style({ separatorBorder: borderColor });\n\t}\n\n\tprivate renderSidebar(parent: HTMLElement): void {\n\t\t// render New Profile Button\n\t\tthis.renderNewProfileButton(append(parent, $(\".new-profile-button\")));\n\n\t\t// render profiles list\n\t\tconst renderer = this.instantiationService.createInstance(\n\t\t\tProfileElementRenderer,\n\t\t);\n\t\tconst delegate = new ProfileElementDelegate();\n\t\tthis.profilesList = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchList<AbstractUserDataProfileElement>,\n\t\t\t\t\"ProfilesList\",\n\t\t\t\tappend(parent, $(\".profiles-list\")),\n\t\t\t\tdelegate,\n\t\t\t\t[renderer],\n\t\t\t\t{\n\t\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\t\tsetRowLineHeight: false,\n\t\t\t\t\thorizontalScrolling: false,\n\t\t\t\t\taccessibilityProvider: {\n\t\t\t\t\t\tgetAriaLabel(\n\t\t\t\t\t\t\tprofileElement: AbstractUserDataProfileElement | null,\n\t\t\t\t\t\t): string {\n\t\t\t\t\t\t\treturn profileElement?.name ?? \"\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetWidgetAriaLabel(): string {\n\t\t\t\t\t\t\treturn localize(\"profiles\", \"Profiles\");\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\topenOnSingleClick: true,\n\t\t\t\t\tidentityProvider: {\n\t\t\t\t\t\tgetId(e) {\n\t\t\t\t\t\t\tif (e instanceof UserDataProfileElement) {\n\t\t\t\t\t\t\t\treturn e.profile.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn e.name;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate renderNewProfileButton(parent: HTMLElement): void {\n\t\tconst button = this._register(\n\t\t\tnew ButtonWithDropdown(parent, {\n\t\t\t\tactions: {\n\t\t\t\t\tgetActions: () => {\n\t\t\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\t\t\tif (this.templates.length) {\n\t\t\t\t\t\t\tactions.push(\n\t\t\t\t\t\t\t\tnew SubmenuAction(\n\t\t\t\t\t\t\t\t\t\"from.template\",\n\t\t\t\t\t\t\t\t\tlocalize(\"from template\", \"From Template\"),\n\t\t\t\t\t\t\t\t\tthis.getCreateFromTemplateActions(),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tactions.push(new Separator());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tactions.push(\n\t\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\t\"importProfile\",\n\t\t\t\t\t\t\t\tlocalize(\"importProfile\", \"Import Profile...\"),\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t() => this.importProfile(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn actions;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taddPrimaryActionToDropdown: false,\n\t\t\t\tcontextMenuProvider: this.contextMenuService,\n\t\t\t\tsupportIcons: true,\n\t\t\t\t...defaultButtonStyles,\n\t\t\t}),\n\t\t);\n\t\tbutton.label = localize(\"newProfile\", \"New Profile\");\n\t\tthis._register(button.onDidClick((e) => this.createNewProfile()));\n\t}\n\n\tprivate getCreateFromTemplateActions(): IAction[] {\n\t\treturn this.templates.map(\n\t\t\t(template) =>\n\t\t\t\tnew Action(\n\t\t\t\t\t`template:${template.url}`,\n\t\t\t\t\ttemplate.name,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => this.createNewProfile(URI.parse(template.url)),\n\t\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerListeners(): void {\n\t\tif (this.profilesList) {\n\t\t\tthis._register(\n\t\t\t\tthis.profilesList.onDidChangeSelection((e) => {\n\t\t\t\t\tconst [element] = e.elements;\n\t\t\t\t\tif (element instanceof AbstractUserDataProfileElement) {\n\t\t\t\t\t\tthis.profileWidget?.render(element);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.profilesList.onContextMenu((e) => {\n\t\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\t\tif (!e.element) {\n\t\t\t\t\t\tactions.push(...this.getTreeContextMenuActions());\n\t\t\t\t\t}\n\t\t\t\t\tif (e.element instanceof AbstractUserDataProfileElement) {\n\t\t\t\t\t\tactions.push(...e.element.actions[1]);\n\t\t\t\t\t}\n\t\t\t\t\tif (actions.length) {\n\t\t\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\t\t\t\tgetActions: () => actions,\n\t\t\t\t\t\t\tgetActionsContext: () => e.element,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.profilesList.onMouseDblClick((e) => {\n\t\t\t\t\tif (!e.element) {\n\t\t\t\t\t\tthis.createNewProfile();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getTreeContextMenuActions(): IAction[] {\n\t\tconst actions: IAction[] = [];\n\t\tactions.push(\n\t\t\tnew Action(\n\t\t\t\t\"newProfile\",\n\t\t\t\tlocalize(\"newProfile\", \"New Profile\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => this.createNewProfile(),\n\t\t\t),\n\t\t);\n\t\tconst templateActions = this.getCreateFromTemplateActions();\n\t\tif (templateActions.length) {\n\t\t\tactions.push(\n\t\t\t\tnew SubmenuAction(\n\t\t\t\t\t\"from.template\",\n\t\t\t\t\tlocalize(\"new from template\", \"New Profile From Template\"),\n\t\t\t\t\ttemplateActions,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tactions.push(new Separator());\n\t\tactions.push(\n\t\t\tnew Action(\n\t\t\t\t\"importProfile\",\n\t\t\t\tlocalize(\"importProfile\", \"Import Profile...\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => this.importProfile(),\n\t\t\t),\n\t\t);\n\t\treturn actions;\n\t}\n\n\tprivate async importProfile(): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst quickPick = disposables.add(\n\t\t\tthis.quickInputService.createQuickPick(),\n\t\t);\n\n\t\tconst updateQuickPickItems = (value?: string) => {\n\t\t\tconst quickPickItems: IQuickPickItem[] = [];\n\t\t\tif (value) {\n\t\t\t\tquickPickItems.push({\n\t\t\t\t\tlabel: quickPick.value,\n\t\t\t\t\tdescription: localize(\"import from url\", \"Import from URL\"),\n\t\t\t\t});\n\t\t\t}\n\t\t\tquickPickItems.push({\n\t\t\t\tlabel: localize(\"import from file\", \"Select File...\"),\n\t\t\t});\n\t\t\tquickPick.items = quickPickItems;\n\t\t};\n\n\t\tquickPick.title = localize(\n\t\t\t\"import profile quick pick title\",\n\t\t\t\"Import from Profile Template...\",\n\t\t);\n\t\tquickPick.placeholder = localize(\n\t\t\t\"import profile placeholder\",\n\t\t\t\"Provide Profile Template URL\",\n\t\t);\n\t\tquickPick.ignoreFocusOut = true;\n\t\tdisposables.add(quickPick.onDidChangeValue(updateQuickPickItems));\n\t\tupdateQuickPickItems();\n\t\tquickPick.matchOnLabel = false;\n\t\tquickPick.matchOnDescription = false;\n\t\tdisposables.add(\n\t\t\tquickPick.onDidAccept(async () => {\n\t\t\t\tquickPick.hide();\n\t\t\t\tconst selectedItem = quickPick.selectedItems[0];\n\t\t\t\tif (!selectedItem) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst url =\n\t\t\t\t\tselectedItem.label === quickPick.value\n\t\t\t\t\t\t? URI.parse(quickPick.value)\n\t\t\t\t\t\t: await this.getProfileUriFromFileSystem();\n\t\t\t\tif (url) {\n\t\t\t\t\tthis.createNewProfile(url);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(quickPick.onDidHide(() => disposables.dispose()));\n\t\tquickPick.show();\n\t}\n\n\tasync createNewProfile(copyFrom?: URI | IUserDataProfile): Promise<void> {\n\t\tawait this.model?.createNewProfile(copyFrom);\n\t}\n\n\tselectProfile(profile: IUserDataProfile): void {\n\t\tconst index = this.model?.profiles.findIndex(\n\t\t\t(p) =>\n\t\t\t\tp instanceof UserDataProfileElement &&\n\t\t\t\tp.profile.id === profile.id,\n\t\t);\n\t\tif (index !== undefined && index >= 0) {\n\t\t\tthis.profilesList?.setSelection([index]);\n\t\t}\n\t}\n\n\tprivate async getProfileUriFromFileSystem(): Promise<URI | null> {\n\t\tconst profileLocation = await this.fileDialogService.showOpenDialog({\n\t\t\tcanSelectFolders: false,\n\t\t\tcanSelectFiles: true,\n\t\t\tcanSelectMany: false,\n\t\t\tfilters: PROFILE_FILTER,\n\t\t\ttitle: localize(\n\t\t\t\t\"import profile dialog\",\n\t\t\t\t\"Select Profile Template File\",\n\t\t\t),\n\t\t});\n\t\tif (!profileLocation) {\n\t\t\treturn null;\n\t\t}\n\t\treturn profileLocation[0];\n\t}\n\n\toverride async setInput(\n\t\tinput: UserDataProfilesEditorInput,\n\t\toptions: IEditorOptions | undefined,\n\t\tcontext: IEditorOpenContext,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tawait super.setInput(input, options, context, token);\n\t\tthis.model = await input.resolve();\n\t\tthis.model.getTemplates().then((templates) => {\n\t\t\tthis.templates = templates;\n\t\t\tif (this.profileWidget) {\n\t\t\t\tthis.profileWidget.templates = templates;\n\t\t\t}\n\t\t});\n\t\tthis.updateProfilesList();\n\t\tthis._register(\n\t\t\tthis.model.onDidChange((element) =>\n\t\t\t\tthis.updateProfilesList(element),\n\t\t\t),\n\t\t);\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.profilesList?.domFocus();\n\t}\n\n\tprivate updateProfilesList(\n\t\telementToSelect?: AbstractUserDataProfileElement,\n\t): void {\n\t\tif (!this.model) {\n\t\t\treturn;\n\t\t}\n\t\tconst currentSelectionIndex = this.profilesList?.getSelection()?.[0];\n\t\tconst currentSelection =\n\t\t\tcurrentSelectionIndex !== undefined\n\t\t\t\t? this.profilesList?.element(currentSelectionIndex)\n\t\t\t\t: undefined;\n\t\tthis.profilesList?.splice(\n\t\t\t0,\n\t\t\tthis.profilesList.length,\n\t\t\tthis.model.profiles,\n\t\t);\n\n\t\tif (elementToSelect) {\n\t\t\tthis.profilesList?.setSelection([\n\t\t\t\tthis.model.profiles.indexOf(elementToSelect),\n\t\t\t]);\n\t\t} else if (currentSelection) {\n\t\t\tif (!this.model.profiles.includes(currentSelection)) {\n\t\t\t\tconst elementToSelect =\n\t\t\t\t\tthis.model.profiles.find(\n\t\t\t\t\t\t(profile) => profile.name === currentSelection.name,\n\t\t\t\t\t) ?? this.model.profiles[0];\n\t\t\t\tif (elementToSelect) {\n\t\t\t\t\tthis.profilesList?.setSelection([\n\t\t\t\t\t\tthis.model.profiles.indexOf(elementToSelect),\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst elementToSelect =\n\t\t\t\tthis.model.profiles.find((profile) => profile.active) ??\n\t\t\t\tthis.model.profiles[0];\n\t\t\tif (elementToSelect) {\n\t\t\t\tthis.profilesList?.setSelection([\n\t\t\t\t\tthis.model.profiles.indexOf(elementToSelect),\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n}\n\ninterface IProfileElementTemplateData {\n\treadonly icon: HTMLElement;\n\treadonly label: HTMLElement;\n\treadonly dirty: HTMLElement;\n\treadonly description: HTMLElement;\n\treadonly actionBar: WorkbenchToolBar;\n\treadonly disposables: DisposableStore;\n\treadonly elementDisposables: DisposableStore;\n}\n\nclass ProfileElementDelegate\n\timplements IListVirtualDelegate<AbstractUserDataProfileElement>\n{\n\tgetHeight(element: AbstractUserDataProfileElement) {\n\t\treturn 22;\n\t}\n\tgetTemplateId() {\n\t\treturn \"profileListElement\";\n\t}\n}\n\nclass ProfileElementRenderer\n\timplements\n\t\tIListRenderer<\n\t\t\tAbstractUserDataProfileElement,\n\t\t\tIProfileElementTemplateData\n\t\t>\n{\n\treadonly templateId = \"profileListElement\";\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) { }\n\n\trenderTemplate(container: HTMLElement): IProfileElementTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = new DisposableStore();\n\n\t\tcontainer.classList.add(\"profile-list-item\");\n\t\tconst icon = append(container, $(\".profile-list-item-icon\"));\n\t\tconst label = append(container, $(\".profile-list-item-label\"));\n\t\tconst dirty = append(\n\t\t\tcontainer,\n\t\t\t$(`span${ThemeIcon.asCSSSelector(Codicon.circleFilled)}`),\n\t\t);\n\t\tconst description = append(\n\t\t\tcontainer,\n\t\t\t$(\".profile-list-item-description\"),\n\t\t);\n\t\tappend(\n\t\t\tdescription,\n\t\t\t$(`span${ThemeIcon.asCSSSelector(Codicon.check)}`),\n\t\t\t$(\"span\", undefined, localize(\"activeProfile\", \"In use\")),\n\t\t);\n\n\t\tconst actionsContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\".profile-tree-item-actions-container\"),\n\t\t);\n\t\tconst actionBar = disposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchToolBar,\n\t\t\t\tactionsContainer,\n\t\t\t\t{\n\t\t\t\t\thoverDelegate: disposables.add(\n\t\t\t\t\t\tcreateInstantHoverDelegate(),\n\t\t\t\t\t),\n\t\t\t\t\thighlightToggledItems: true,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\tdirty,\n\t\t\tdescription,\n\t\t\tactionBar,\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t};\n\t}\n\n\trenderElement(\n\t\telement: AbstractUserDataProfileElement,\n\t\tindex: number,\n\t\ttemplateData: IProfileElementTemplateData,\n\t\theight: number | undefined,\n\t) {\n\t\ttemplateData.elementDisposables.clear();\n\t\ttemplateData.label.textContent = element.name;\n\t\ttemplateData.label.classList.toggle(\n\t\t\t\"new-profile\",\n\t\t\telement instanceof NewProfileElement,\n\t\t);\n\t\ttemplateData.icon.className = ThemeIcon.asClassName(\n\t\t\telement.icon ? ThemeIcon.fromId(element.icon) : DEFAULT_ICON,\n\t\t);\n\t\ttemplateData.dirty.classList.toggle(\n\t\t\t\"hide\",\n\t\t\t!(element instanceof NewProfileElement),\n\t\t);\n\t\ttemplateData.description.classList.toggle(\"hide\", !element.active);\n\t\tif (element.onDidChange) {\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\telement.onDidChange((e) => {\n\t\t\t\t\tif (e.name) {\n\t\t\t\t\t\ttemplateData.label.textContent = element.name;\n\t\t\t\t\t}\n\t\t\t\t\tif (e.icon) {\n\t\t\t\t\t\tif (element.icon) {\n\t\t\t\t\t\t\ttemplateData.icon.className = ThemeIcon.asClassName(\n\t\t\t\t\t\t\t\tThemeIcon.fromId(element.icon),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttemplateData.icon.className = \"hide\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (e.active) {\n\t\t\t\t\t\ttemplateData.description.classList.toggle(\n\t\t\t\t\t\t\t\"hide\",\n\t\t\t\t\t\t\t!element.active,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\ttemplateData.actionBar.setActions(\n\t\t\t[...element.actions[0]],\n\t\t\t[...element.actions[1]],\n\t\t);\n\t}\n\n\tdisposeElement(\n\t\telement: AbstractUserDataProfileElement,\n\t\tindex: number,\n\t\ttemplateData: IProfileElementTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IProfileElementTemplateData): void {\n\t\ttemplateData.disposables.dispose();\n\t\ttemplateData.elementDisposables.dispose();\n\t}\n}\n\nclass ProfileWidget extends Disposable {\n\tprivate readonly profileTitle: HTMLElement;\n\tprivate readonly profileTreeContainer: HTMLElement;\n\tprivate readonly buttonContainer: HTMLElement;\n\n\tprivate readonly profileTree: WorkbenchAsyncDataTree<\n\t\tAbstractUserDataProfileElement,\n\t\tProfileTreeElement\n\t>;\n\tprivate readonly copyFromProfileRenderer: CopyFromProfileRenderer;\n\tprivate readonly _profileElement = this._register(\n\t\tnew MutableDisposable<\n\t\t\t{ element: AbstractUserDataProfileElement } & IDisposable\n\t\t>(),\n\t);\n\n\tpublic set templates(templates: readonly IProfileTemplateInfo[]) {\n\t\tthis.copyFromProfileRenderer.setTemplates(templates);\n\t\tthis.profileTree.rerender();\n\t}\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\t@IEditorProgressService private readonly editorProgressService: IEditorProgressService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst header = append(parent, $('.profile-header'));\n\t\tconst title = append(header, $('.profile-title-container'));\n\t\tthis.profileTitle = append(title, $(''));\n\n\t\tconst body = append(parent, $('.profile-body'));\n\n\t\tconst delegate = new ProfileTreeDelegate();\n\t\tconst contentsRenderer = this._register(this.instantiationService.createInstance(ContentsProfileRenderer));\n\t\tthis.copyFromProfileRenderer = this._register(this.instantiationService.createInstance(CopyFromProfileRenderer));\n\t\tthis.profileTreeContainer = append(body, $('.profile-tree'));\n\t\tthis.profileTree = this._register(this.instantiationService.createInstance(WorkbenchAsyncDataTree<AbstractUserDataProfileElement, ProfileTreeElement>,\n\t\t\t'ProfileEditor-Tree',\n\t\t\tthis.profileTreeContainer,\n\t\t\tdelegate,\n\t\t\t[\n\t\t\t\tthis._register(this.instantiationService.createInstance(ProfileNameRenderer)),\n\t\t\t\tthis._register(this.instantiationService.createInstance(ProfileIconRenderer)),\n\t\t\t\tthis._register(this.instantiationService.createInstance(UseForCurrentWindowPropertyRenderer)),\n\t\t\t\tthis._register(this.instantiationService.createInstance(UseAsDefaultProfileRenderer)),\n\t\t\t\tthis.copyFromProfileRenderer,\n\t\t\t\tcontentsRenderer,\n\t\t\t],\n\t\t\tthis.instantiationService.createInstance(ProfileTreeDataSource),\n\t\t\t{\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel(element: ProfileTreeElement | null): string {\n\t\t\t\t\t\treturn element?.element ?? '';\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel(): string {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId(element) {\n\t\t\t\t\t\treturn element.element;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\tenableStickyScroll: false,\n\t\t\t\topenOnSingleClick: false,\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\tsupportDynamicHeights: true,\n\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t}));\n\n\t\tthis.profileTree.style(listStyles);\n\n\t\tthis._register(contentsRenderer.onDidChangeContentHeight((e) => this.profileTree.updateElementHeight(e, undefined)));\n\t\tthis._register(contentsRenderer.onDidChangeSelection((e) => {\n\t\t\tif (e.selected) {\n\t\t\t\tthis.profileTree.setFocus([]);\n\t\t\t\tthis.profileTree.setSelection([]);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.profileTree.onDidChangeContentHeight((e) => {\n\t\t\tif (this.dimension) {\n\t\t\t\tthis.layout(this.dimension);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.profileTree.onDidChangeSelection((e) => {\n\t\t\tif (e.elements.length) {\n\t\t\t\tcontentsRenderer.clearSelection();\n\t\t\t}\n\t\t}));\n\n\t\tthis.buttonContainer = append(body, $('.profile-row-container.profile-button-container'));\n\t}\n\n\tprivate dimension: Dimension | undefined;\n\tlayout(dimension: Dimension): void {\n\t\tthis.dimension = dimension;\n\t\tconst treeContentHeight = this.profileTree.contentHeight;\n\t\tconst height = Math.min(\n\t\t\ttreeContentHeight,\n\t\t\tdimension.height -\n\t\t\t\t(this._profileElement.value?.element instanceof\n\t\t\t\tNewProfileElement\n\t\t\t\t\t? 116\n\t\t\t\t\t: 54),\n\t\t);\n\t\tthis.profileTreeContainer.style.height = `${height}px`;\n\t\tthis.profileTree.layout(height, dimension.width);\n\t}\n\n\trender(profileElement: AbstractUserDataProfileElement): void {\n\t\tif (this._profileElement.value?.element === profileElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis._profileElement.value?.element instanceof\n\t\t\tUserDataProfileElement\n\t\t) {\n\t\t\tthis._profileElement.value.element.reset();\n\t\t}\n\t\tthis.profileTree.setInput(profileElement);\n\n\t\tconst disposables = new DisposableStore();\n\t\tthis._profileElement.value = {\n\t\t\telement: profileElement,\n\t\t\tdispose: () => disposables.dispose(),\n\t\t};\n\n\t\tthis.profileTitle.textContent = profileElement.name;\n\t\tdisposables.add(\n\t\t\tprofileElement.onDidChange((e) => {\n\t\t\t\tif (e.name) {\n\t\t\t\t\tthis.profileTitle.textContent = profileElement.name;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst [primaryTitleButtons, secondatyTitleButtons] =\n\t\t\tprofileElement.titleButtons;\n\t\tif (primaryTitleButtons?.length || secondatyTitleButtons?.length) {\n\t\t\tthis.buttonContainer.classList.remove(\"hide\");\n\n\t\t\tif (secondatyTitleButtons?.length) {\n\t\t\t\tfor (const action of secondatyTitleButtons) {\n\t\t\t\t\tconst button = disposables.add(\n\t\t\t\t\t\tnew Button(this.buttonContainer, {\n\t\t\t\t\t\t\t...defaultButtonStyles,\n\t\t\t\t\t\t\tsecondary: true,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tbutton.label = action.label;\n\t\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tbutton.onDidClick(() =>\n\t\t\t\t\t\t\tthis.editorProgressService.showWhile(action.run()),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\taction.onDidChange((e) => {\n\t\t\t\t\t\t\tif (!isUndefined(e.enabled)) {\n\t\t\t\t\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!isUndefined(e.label)) {\n\t\t\t\t\t\t\t\tbutton.label = action.label;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (primaryTitleButtons?.length) {\n\t\t\t\tfor (const action of primaryTitleButtons) {\n\t\t\t\t\tconst button = disposables.add(\n\t\t\t\t\t\tnew Button(this.buttonContainer, {\n\t\t\t\t\t\t\t...defaultButtonStyles,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tbutton.label = action.label;\n\t\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tbutton.onDidClick(() =>\n\t\t\t\t\t\t\tthis.editorProgressService.showWhile(action.run()),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\taction.onDidChange((e) => {\n\t\t\t\t\t\t\tif (!isUndefined(e.enabled)) {\n\t\t\t\t\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!isUndefined(e.label)) {\n\t\t\t\t\t\t\t\tbutton.label = action.label;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tprofileElement.onDidChange((e) => {\n\t\t\t\t\t\t\tif (e.message) {\n\t\t\t\t\t\t\t\tbutton.setTitle(\n\t\t\t\t\t\t\t\t\tprofileElement.message ?? action.label,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbutton.element.classList.toggle(\n\t\t\t\t\t\t\t\t\t\"error\",\n\t\t\t\t\t\t\t\t\t!!profileElement.message,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.buttonContainer.classList.add(\"hide\");\n\t\t}\n\n\t\tif (profileElement instanceof NewProfileElement) {\n\t\t\tthis.profileTree.focusFirst();\n\t\t}\n\n\t\tif (this.dimension) {\n\t\t\tthis.layout(this.dimension);\n\t\t}\n\t}\n}\n\ntype ProfileProperty =\n\t| \"name\"\n\t| \"icon\"\n\t| \"copyFrom\"\n\t| \"useForCurrent\"\n\t| \"useAsDefault\"\n\t| \"contents\";\n\ninterface ProfileTreeElement {\n\telement: ProfileProperty;\n\troot: AbstractUserDataProfileElement;\n}\n\nclass ProfileTreeDelegate extends CachedListVirtualDelegate<ProfileTreeElement> {\n\tgetTemplateId({ element }: ProfileTreeElement) {\n\t\treturn element;\n\t}\n\n\thasDynamicHeight({ element }: ProfileTreeElement): boolean {\n\t\treturn element === \"contents\";\n\t}\n\n\tprotected estimateHeight({ element }: ProfileTreeElement): number {\n\t\tswitch (element) {\n\t\t\tcase \"name\":\n\t\t\t\treturn 72;\n\t\t\tcase \"icon\":\n\t\t\t\treturn 68;\n\t\t\tcase \"copyFrom\":\n\t\t\t\treturn 90;\n\t\t\tcase \"useForCurrent\":\n\t\t\tcase \"useAsDefault\":\n\t\t\t\treturn 68;\n\t\t\tcase \"contents\":\n\t\t\t\treturn 250;\n\t\t}\n\t}\n}\n\nclass ProfileTreeDataSource\n\timplements\n\t\tIAsyncDataSource<AbstractUserDataProfileElement, ProfileTreeElement>\n{\n\thasChildren(\n\t\telement: AbstractUserDataProfileElement | ProfileTreeElement,\n\t): boolean {\n\t\treturn element instanceof AbstractUserDataProfileElement;\n\t}\n\n\tasync getChildren(\n\t\telement: AbstractUserDataProfileElement | ProfileTreeElement,\n\t): Promise<ProfileTreeElement[]> {\n\t\tif (element instanceof AbstractUserDataProfileElement) {\n\t\t\tconst children: ProfileTreeElement[] = [];\n\t\t\tif (element instanceof NewProfileElement) {\n\t\t\t\tchildren.push({ element: \"name\", root: element });\n\t\t\t\tchildren.push({ element: \"icon\", root: element });\n\t\t\t\tchildren.push({ element: \"copyFrom\", root: element });\n\t\t\t\tchildren.push({ element: \"contents\", root: element });\n\t\t\t} else if (element instanceof UserDataProfileElement) {\n\t\t\t\tif (!element.profile.isDefault) {\n\t\t\t\t\tchildren.push({ element: \"name\", root: element });\n\t\t\t\t\tchildren.push({ element: \"icon\", root: element });\n\t\t\t\t}\n\t\t\t\tchildren.push({ element: \"useAsDefault\", root: element });\n\t\t\t\tchildren.push({ element: \"contents\", root: element });\n\t\t\t}\n\t\t\treturn children;\n\t\t}\n\t\treturn [];\n\t}\n}\n\ninterface ProfileContentTreeElement {\n\telement: IProfileChildElement;\n\troot: AbstractUserDataProfileElement;\n}\n\nclass ProfileContentTreeElementDelegate\n\timplements IListVirtualDelegate<ProfileContentTreeElement>\n{\n\tgetTemplateId(element: ProfileContentTreeElement) {\n\t\tif (!(<IProfileResourceTypeElement>element.element).resourceType) {\n\t\t\treturn ProfileResourceChildTreeItemRenderer.TEMPLATE_ID;\n\t\t}\n\t\tif (element.root instanceof NewProfileElement) {\n\t\t\treturn NewProfileResourceTreeRenderer.TEMPLATE_ID;\n\t\t}\n\t\treturn ExistingProfileResourceTreeRenderer.TEMPLATE_ID;\n\t}\n\n\tgetHeight(element: ProfileContentTreeElement): number {\n\t\treturn 24;\n\t}\n}\n\nclass ProfileResourceTreeDataSource\n\timplements\n\t\tIAsyncDataSource<\n\t\t\tAbstractUserDataProfileElement,\n\t\t\tProfileContentTreeElement\n\t\t>\n{\n\tconstructor(\n\t\t@IEditorProgressService private readonly editorProgressService: IEditorProgressService,\n\t) { }\n\n\thasChildren(\n\t\telement: AbstractUserDataProfileElement | ProfileContentTreeElement,\n\t): boolean {\n\t\tif (element instanceof AbstractUserDataProfileElement) {\n\t\t\treturn true;\n\t\t}\n\t\tif ((<IProfileResourceTypeElement>element.element).resourceType) {\n\t\t\tif (\n\t\t\t\t(<IProfileResourceTypeElement>element.element).resourceType !==\n\t\t\t\t\tProfileResourceType.Extensions &&\n\t\t\t\t(<IProfileResourceTypeElement>element.element).resourceType !==\n\t\t\t\t\tProfileResourceType.Snippets\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (element.root instanceof NewProfileElement) {\n\t\t\t\tconst resourceType = (<IProfileResourceTypeElement>(\n\t\t\t\t\telement.element\n\t\t\t\t)).resourceType;\n\t\t\t\tif (element.root.getFlag(resourceType)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (!element.root.hasResource(resourceType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (element.root.copyFrom === undefined) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!element.root.getCopyFlag(resourceType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync getChildren(\n\t\telement: AbstractUserDataProfileElement | ProfileContentTreeElement,\n\t): Promise<ProfileContentTreeElement[]> {\n\t\tif (element instanceof AbstractUserDataProfileElement) {\n\t\t\tconst children = await element.getChildren();\n\t\t\treturn children.map((e) => ({ element: e, root: element }));\n\t\t}\n\t\tif ((<IProfileResourceTypeElement>element.element).resourceType) {\n\t\t\tconst progressRunner = this.editorProgressService.show(true, 500);\n\t\t\ttry {\n\t\t\t\tconst extensions = await element.root.getChildren(\n\t\t\t\t\t(<IProfileResourceTypeElement>element.element).resourceType,\n\t\t\t\t);\n\t\t\t\treturn extensions.map((e) => ({\n\t\t\t\t\telement: e,\n\t\t\t\t\troot: element.root,\n\t\t\t\t}));\n\t\t\t} finally {\n\t\t\t\tprogressRunner.done();\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n}\n\ninterface IProfileRendererTemplate {\n\treadonly disposables: DisposableStore;\n\treadonly elementDisposables: DisposableStore;\n}\n\ninterface IExistingProfileResourceTemplateData\n\textends IProfileRendererTemplate {\n\treadonly label: HTMLElement;\n\treadonly radio: Radio;\n\treadonly actionBar: WorkbenchToolBar;\n}\n\ninterface INewProfileResourceTemplateData extends IProfileRendererTemplate {\n\treadonly label: HTMLElement;\n\treadonly radio: Radio;\n\treadonly actionBar: WorkbenchToolBar;\n}\n\ninterface IProfileResourceChildTreeItemTemplateData\n\textends IProfileRendererTemplate {\n\treadonly actionBar: WorkbenchToolBar;\n\treadonly checkbox: Checkbox;\n\treadonly resourceLabel: IResourceLabel;\n}\n\ninterface IProfilePropertyRendererTemplate extends IProfileRendererTemplate {\n\telement: ProfileTreeElement;\n}\n\nclass AbstractProfileResourceTreeRenderer extends Disposable {\n\tprotected getResourceTypeTitle(resourceType: ProfileResourceType): string {\n\t\tswitch (resourceType) {\n\t\t\tcase ProfileResourceType.Settings:\n\t\t\t\treturn localize(\"settings\", \"Settings\");\n\t\t\tcase ProfileResourceType.Keybindings:\n\t\t\t\treturn localize(\"keybindings\", \"Keyboard Shortcuts\");\n\t\t\tcase ProfileResourceType.Snippets:\n\t\t\t\treturn localize(\"snippets\", \"Snippets\");\n\t\t\tcase ProfileResourceType.Tasks:\n\t\t\t\treturn localize(\"tasks\", \"Tasks\");\n\t\t\tcase ProfileResourceType.Extensions:\n\t\t\t\treturn localize(\"extensions\", \"Extensions\");\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tdisposeElement(\n\t\telement: ITreeNode<\n\t\t\tProfileContentTreeElement | ProfileTreeElement,\n\t\t\tvoid\n\t\t>,\n\t\tindex: number,\n\t\ttemplateData: IProfileRendererTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IProfileRendererTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\nabstract class ProfilePropertyRenderer\n\textends AbstractProfileResourceTreeRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tProfileTreeElement,\n\t\t\tvoid,\n\t\t\tIProfilePropertyRendererTemplate\n\t\t>\n{\n\tabstract templateId: ProfileProperty;\n\tabstract renderTemplate(\n\t\tparent: HTMLElement,\n\t): IProfilePropertyRendererTemplate;\n\n\trenderElement(\n\t\t{ element }: ITreeNode<ProfileTreeElement, void>,\n\t\tindex: number,\n\t\ttemplateData: IProfilePropertyRendererTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\ttemplateData.element = element;\n\t}\n}\n\nclass ProfileNameRenderer extends ProfilePropertyRenderer {\n\treadonly templateId: ProfileProperty = \"name\";\n\n\tconstructor(\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst nameContainer = append(parent, $(\".profile-row-container\"));\n\t\tappend(\n\t\t\tnameContainer,\n\t\t\t$(\".profile-label-element\", undefined, localize(\"name\", \"Name\")),\n\t\t);\n\t\tconst nameInput = disposables.add(\n\t\t\tnew InputBox(nameContainer, this.contextViewService, {\n\t\t\t\tinputBoxStyles: getInputBoxStyle({\n\t\t\t\t\tinputBorder: settingsTextInputBorder,\n\t\t\t\t}),\n\t\t\t\tariaLabel: localize(\"profileName\", \"Profile Name\"),\n\t\t\t\tplaceholder: localize(\"profileName\", \"Profile Name\"),\n\t\t\t\tvalidationOptions: {\n\t\t\t\t\tvalidation: (value) => {\n\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tcontent: localize(\n\t\t\t\t\t\t\t\t\t\"name required\",\n\t\t\t\t\t\t\t\t\t\"Profile name is required and must be a non-empty value.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: MessageType.WARNING,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (profileElement?.root.disabled) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!profileElement?.root.shouldValidateName()) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst initialName =\n\t\t\t\t\t\t\tprofileElement?.root.getInitialName();\n\t\t\t\t\t\tvalue = value.trim();\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tinitialName !== value &&\n\t\t\t\t\t\t\tthis.userDataProfilesService.profiles.some(\n\t\t\t\t\t\t\t\t(p) => !p.isTransient && p.name === value,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tcontent: localize(\n\t\t\t\t\t\t\t\t\t\"profileExists\",\n\t\t\t\t\t\t\t\t\t\"Profile with name {0} already exists.\",\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: MessageType.WARNING,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t\tnameInput.onDidChange((value) => {\n\t\t\tif (profileElement && value) {\n\t\t\t\tprofileElement.root.name = value;\n\t\t\t}\n\t\t});\n\t\tconst focusTracker = disposables.add(\n\t\t\ttrackFocus(nameInput.inputElement),\n\t\t);\n\t\tdisposables.add(\n\t\t\tfocusTracker.onDidBlur(() => {\n\t\t\t\tif (profileElement && !nameInput.value) {\n\t\t\t\t\tnameInput.value = profileElement.root.name;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst renderName = (profileElement: ProfileTreeElement) => {\n\t\t\tnameInput.value = profileElement.root.name;\n\t\t\tnameInput.validate();\n\t\t\tif (profileElement.root.disabled) {\n\t\t\t\tnameInput.disable();\n\t\t\t} else {\n\t\t\t\tnameInput.enable();\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\trenderName(profileElement);\n\t\t\t\telementDisposables.add(\n\t\t\t\t\tprofileElement.root.onDidChange((e) => {\n\t\t\t\t\t\tif (e.name || e.disabled) {\n\t\t\t\t\t\t\trenderName(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e.profile) {\n\t\t\t\t\t\t\tnameInput.validate();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t};\n\t}\n}\n\nclass ProfileIconRenderer extends ProfilePropertyRenderer {\n\treadonly templateId: ProfileProperty = \"icon\";\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst iconContainer = append(parent, $(\".profile-row-container\"));\n\t\tappend(\n\t\t\ticonContainer,\n\t\t\t$(\n\t\t\t\t\".profile-label-element\",\n\t\t\t\tundefined,\n\t\t\t\tlocalize(\"icon-label\", \"Icon\"),\n\t\t\t),\n\t\t);\n\t\tconst iconValueContainer = append(\n\t\t\ticonContainer,\n\t\t\t$(\".profile-icon-container\"),\n\t\t);\n\t\tconst iconElement = append(\n\t\t\ticonValueContainer,\n\t\t\t$(`${ThemeIcon.asCSSSelector(DEFAULT_ICON)}`, {\n\t\t\t\ttabindex: \"0\",\n\t\t\t\trole: \"button\",\n\t\t\t\t\"aria-label\": localize(\"icon\", \"Profile Icon\"),\n\t\t\t}),\n\t\t);\n\n\t\tconst iconSelectBox = disposables.add(\n\t\t\tthis.instantiationService.createInstance(WorkbenchIconSelectBox, {\n\t\t\t\ticons: ICONS,\n\t\t\t\tinputBoxStyles: defaultInputBoxStyles,\n\t\t\t}),\n\t\t);\n\t\tlet hoverWidget: IHoverWidget | undefined;\n\t\tconst showIconSelectBox = () => {\n\t\t\tif (\n\t\t\t\tprofileElement?.root instanceof UserDataProfileElement &&\n\t\t\t\tprofileElement.root.profile.isDefault\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (profileElement?.root.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ticonSelectBox.clearInput();\n\t\t\thoverWidget = this.hoverService.showHover(\n\t\t\t\t{\n\t\t\t\t\tcontent: iconSelectBox.domNode,\n\t\t\t\t\ttarget: iconElement,\n\t\t\t\t\tposition: {\n\t\t\t\t\t\thoverPosition: HoverPosition.BELOW,\n\t\t\t\t\t},\n\t\t\t\t\tpersistence: {\n\t\t\t\t\t\tsticky: true,\n\t\t\t\t\t},\n\t\t\t\t\tappearance: {\n\t\t\t\t\t\tshowPointer: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t);\n\n\t\t\tif (hoverWidget) {\n\t\t\t\ticonSelectBox.layout(new Dimension(486, 260));\n\t\t\t\ticonSelectBox.focus();\n\t\t\t}\n\t\t};\n\t\tdisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\ticonElement,\n\t\t\t\tEventType.CLICK,\n\t\t\t\t(e: MouseEvent) => {\n\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t\tshowIconSelectBox();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\taddDisposableListener(iconElement, EventType.KEY_DOWN, (e) => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\tif (\n\t\t\t\t\tevent.equals(KeyCode.Enter) ||\n\t\t\t\t\tevent.equals(KeyCode.Space)\n\t\t\t\t) {\n\t\t\t\t\tEventHelper.stop(event, true);\n\t\t\t\t\tshowIconSelectBox();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\ticonSelectBox.domNode,\n\t\t\t\tEventType.KEY_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (event.equals(KeyCode.Escape)) {\n\t\t\t\t\t\tEventHelper.stop(event, true);\n\t\t\t\t\t\thoverWidget?.dispose();\n\t\t\t\t\t\ticonElement.focus();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\ticonSelectBox.onDidSelect((selectedIcon) => {\n\t\t\t\thoverWidget?.dispose();\n\t\t\t\ticonElement.focus();\n\t\t\t\tif (profileElement) {\n\t\t\t\t\tprofileElement.root.icon = selectedIcon.id;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tappend(\n\t\t\ticonValueContainer,\n\t\t\t$(\n\t\t\t\t\".profile-description-element\",\n\t\t\t\tundefined,\n\t\t\t\tlocalize(\n\t\t\t\t\t\"icon-description\",\n\t\t\t\t\t\"Profile icon to be shown in the activity bar\",\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tconst renderIcon = (profileElement: ProfileTreeElement) => {\n\t\t\tif (profileElement.root.icon) {\n\t\t\t\ticonElement.className = ThemeIcon.asClassName(\n\t\t\t\t\tThemeIcon.fromId(profileElement.root.icon),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ticonElement.className = ThemeIcon.asClassName(\n\t\t\t\t\tThemeIcon.fromId(DEFAULT_ICON.id),\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\trenderIcon(profileElement);\n\t\t\t\telementDisposables.add(\n\t\t\t\t\tprofileElement.root.onDidChange((e) => {\n\t\t\t\t\t\tif (e.icon) {\n\t\t\t\t\t\t\trenderIcon(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t};\n\t}\n}\n\nclass UseForCurrentWindowPropertyRenderer extends ProfilePropertyRenderer {\n\treadonly templateId: ProfileProperty = \"useForCurrent\";\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst useForCurrentWindowContainer = append(\n\t\t\tparent,\n\t\t\t$(\".profile-row-container\"),\n\t\t);\n\t\tappend(\n\t\t\tuseForCurrentWindowContainer,\n\t\t\t$(\n\t\t\t\t\".profile-label-element\",\n\t\t\t\tundefined,\n\t\t\t\tlocalize(\"use for curren window\", \"Use for Current Window\"),\n\t\t\t),\n\t\t);\n\t\tconst useForCurrentWindowValueContainer = append(\n\t\t\tuseForCurrentWindowContainer,\n\t\t\t$(\".profile-use-for-current-container\"),\n\t\t);\n\t\tconst useForCurrentWindowTitle = localize(\n\t\t\t\"enable for current window\",\n\t\t\t\"Use this profile for the current window\",\n\t\t);\n\t\tconst useForCurrentWindowCheckbox = disposables.add(\n\t\t\tnew Checkbox(\n\t\t\t\tuseForCurrentWindowTitle,\n\t\t\t\tfalse,\n\t\t\t\tdefaultCheckboxStyles,\n\t\t\t),\n\t\t);\n\t\tappend(\n\t\t\tuseForCurrentWindowValueContainer,\n\t\t\tuseForCurrentWindowCheckbox.domNode,\n\t\t);\n\t\tconst useForCurrentWindowLabel = append(\n\t\t\tuseForCurrentWindowValueContainer,\n\t\t\t$(\n\t\t\t\t\".profile-description-element\",\n\t\t\t\tundefined,\n\t\t\t\tuseForCurrentWindowTitle,\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tuseForCurrentWindowCheckbox.onChange(() => {\n\t\t\t\tif (profileElement?.root instanceof UserDataProfileElement) {\n\t\t\t\t\tprofileElement.root.toggleCurrentWindowProfile();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\tuseForCurrentWindowLabel,\n\t\t\t\tEventType.CLICK,\n\t\t\t\t() => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tprofileElement?.root instanceof UserDataProfileElement\n\t\t\t\t\t) {\n\t\t\t\t\t\tprofileElement.root.toggleCurrentWindowProfile();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tconst renderUseCurrentProfile = (\n\t\t\tprofileElement: ProfileTreeElement,\n\t\t) => {\n\t\t\tuseForCurrentWindowCheckbox.checked =\n\t\t\t\tprofileElement.root instanceof UserDataProfileElement &&\n\t\t\t\tthis.userDataProfileService.currentProfile.id ===\n\t\t\t\t\tprofileElement.root.profile.id;\n\t\t\tif (\n\t\t\t\tuseForCurrentWindowCheckbox.checked &&\n\t\t\t\tthis.userDataProfileService.currentProfile.isDefault\n\t\t\t) {\n\t\t\t\tuseForCurrentWindowCheckbox.disable();\n\t\t\t} else {\n\t\t\t\tuseForCurrentWindowCheckbox.enable();\n\t\t\t}\n\t\t};\n\n\t\tconst that = this;\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\trenderUseCurrentProfile(profileElement);\n\t\t\t\telementDisposables.add(\n\t\t\t\t\tthat.userDataProfileService.onDidChangeCurrentProfile(\n\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\trenderUseCurrentProfile(element);\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t};\n\t}\n}\n\nclass UseAsDefaultProfileRenderer extends ProfilePropertyRenderer {\n\treadonly templateId: ProfileProperty = \"useAsDefault\";\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst useAsDefaultProfileContainer = append(\n\t\t\tparent,\n\t\t\t$(\".profile-row-container\"),\n\t\t);\n\t\tappend(\n\t\t\tuseAsDefaultProfileContainer,\n\t\t\t$(\n\t\t\t\t\".profile-label-element\",\n\t\t\t\tundefined,\n\t\t\t\tlocalize(\"use for new windows\", \"Use for New Windows\"),\n\t\t\t),\n\t\t);\n\t\tconst useAsDefaultProfileValueContainer = append(\n\t\t\tuseAsDefaultProfileContainer,\n\t\t\t$(\".profile-use-as-default-container\"),\n\t\t);\n\t\tconst useAsDefaultProfileTitle = localize(\n\t\t\t\"enable for new windows\",\n\t\t\t\"Use this profile as the default for new windows\",\n\t\t);\n\t\tconst useAsDefaultProfileCheckbox = disposables.add(\n\t\t\tnew Checkbox(\n\t\t\t\tuseAsDefaultProfileTitle,\n\t\t\t\tfalse,\n\t\t\t\tdefaultCheckboxStyles,\n\t\t\t),\n\t\t);\n\t\tappend(\n\t\t\tuseAsDefaultProfileValueContainer,\n\t\t\tuseAsDefaultProfileCheckbox.domNode,\n\t\t);\n\t\tconst useAsDefaultProfileLabel = append(\n\t\t\tuseAsDefaultProfileValueContainer,\n\t\t\t$(\n\t\t\t\t\".profile-description-element\",\n\t\t\t\tundefined,\n\t\t\t\tuseAsDefaultProfileTitle,\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tuseAsDefaultProfileCheckbox.onChange(() => {\n\t\t\t\tif (profileElement?.root instanceof UserDataProfileElement) {\n\t\t\t\t\tprofileElement.root.toggleNewWindowProfile();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\tuseAsDefaultProfileLabel,\n\t\t\t\tEventType.CLICK,\n\t\t\t\t() => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tprofileElement?.root instanceof UserDataProfileElement\n\t\t\t\t\t) {\n\t\t\t\t\t\tprofileElement.root.toggleNewWindowProfile();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tconst renderUseAsDefault = (profileElement: ProfileTreeElement) => {\n\t\t\tuseAsDefaultProfileCheckbox.checked =\n\t\t\t\tprofileElement.root instanceof UserDataProfileElement &&\n\t\t\t\tprofileElement.root.isNewWindowProfile;\n\t\t};\n\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\trenderUseAsDefault(profileElement);\n\t\t\t\telementDisposables.add(\n\t\t\t\t\tprofileElement.root.onDidChange((e) => {\n\t\t\t\t\t\tif (e.newWindowProfile) {\n\t\t\t\t\t\t\trenderUseAsDefault(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t};\n\t}\n}\n\nclass CopyFromProfileRenderer extends ProfilePropertyRenderer {\n\treadonly templateId: ProfileProperty = \"copyFrom\";\n\n\tprivate templates: readonly IProfileTemplateInfo[] = [];\n\n\tconstructor(\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst copyFromContainer = append(\n\t\t\tparent,\n\t\t\t$(\".profile-row-container.profile-copy-from-container\"),\n\t\t);\n\t\tappend(\n\t\t\tcopyFromContainer,\n\t\t\t$(\n\t\t\t\t\".profile-label-element\",\n\t\t\t\tundefined,\n\t\t\t\tlocalize(\"create from\", \"Copy from\"),\n\t\t\t),\n\t\t);\n\t\tappend(\n\t\t\tcopyFromContainer,\n\t\t\t$(\n\t\t\t\t\".profile-description-element\",\n\t\t\t\tundefined,\n\t\t\t\tlocalize(\n\t\t\t\t\t\"copy from description\",\n\t\t\t\t\t\"Select the profile source from which you want to copy contents\",\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tconst copyFromSelectBox = disposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tSelectBox,\n\t\t\t\t[],\n\t\t\t\t0,\n\t\t\t\tthis.contextViewService,\n\t\t\t\tdefaultSelectBoxStyles,\n\t\t\t\t{\n\t\t\t\t\tuseCustomDrawn: true,\n\t\t\t\t\tariaLabel: localize(\n\t\t\t\t\t\t\"copy profile from\",\n\t\t\t\t\t\t\"Copy profile from\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tcopyFromSelectBox.render(\n\t\t\tappend(copyFromContainer, $(\".profile-select-container\")),\n\t\t);\n\n\t\tconst render = (\n\t\t\tprofileElement: NewProfileElement,\n\t\t\tcopyFromOptions: (ISelectOptionItem & {\n\t\t\t\tid?: string;\n\t\t\t\tsource?: IUserDataProfile | URI;\n\t\t\t})[],\n\t\t) => {\n\t\t\tcopyFromSelectBox.setOptions(copyFromOptions);\n\t\t\tconst id =\n\t\t\t\tprofileElement.copyFrom instanceof URI\n\t\t\t\t\t? profileElement.copyFrom.toString()\n\t\t\t\t\t: profileElement.copyFrom?.id;\n\t\t\tconst index = id\n\t\t\t\t? copyFromOptions.findIndex((option) => option.id === id)\n\t\t\t\t: 0;\n\t\t\tcopyFromSelectBox.select(index);\n\t\t};\n\n\t\tconst that = this;\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\tif (profileElement.root instanceof NewProfileElement) {\n\t\t\t\t\tconst newProfileElement = profileElement.root;\n\t\t\t\t\tlet copyFromOptions =\n\t\t\t\t\t\tthat.getCopyFromOptions(newProfileElement);\n\t\t\t\t\trender(newProfileElement, copyFromOptions);\n\t\t\t\t\tcopyFromSelectBox.setEnabled(\n\t\t\t\t\t\t!newProfileElement.previewProfile &&\n\t\t\t\t\t\t\t!newProfileElement.disabled,\n\t\t\t\t\t);\n\t\t\t\t\telementDisposables.add(\n\t\t\t\t\t\tprofileElement.root.onDidChange((e) => {\n\t\t\t\t\t\t\tif (e.copyFrom || e.copyFromInfo) {\n\t\t\t\t\t\t\t\tcopyFromOptions =\n\t\t\t\t\t\t\t\t\tthat.getCopyFromOptions(newProfileElement);\n\t\t\t\t\t\t\t\trender(newProfileElement, copyFromOptions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (e.preview || e.disabled) {\n\t\t\t\t\t\t\t\tcopyFromSelectBox.setEnabled(\n\t\t\t\t\t\t\t\t\t!newProfileElement.previewProfile &&\n\t\t\t\t\t\t\t\t\t\t!newProfileElement.disabled,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\telementDisposables.add(\n\t\t\t\t\t\tcopyFromSelectBox.onDidSelect((option) => {\n\t\t\t\t\t\t\tnewProfileElement.copyFrom =\n\t\t\t\t\t\t\t\tcopyFromOptions[option.index].source;\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables,\n\t\t};\n\t}\n\n\tsetTemplates(templates: readonly IProfileTemplateInfo[]): void {\n\t\tthis.templates = templates;\n\t}\n\n\tprivate getCopyFromOptions(\n\t\tprofileElement: NewProfileElement,\n\t): (ISelectOptionItem & {\n\t\tid?: string;\n\t\tsource?: IUserDataProfile | URI;\n\t})[] {\n\t\tconst separator = {\n\t\t\ttext: \"\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\",\n\t\t\tisDisabled: true,\n\t\t};\n\t\tconst copyFromOptions: (ISelectOptionItem & {\n\t\t\tid?: string;\n\t\t\tsource?: IUserDataProfile | URI;\n\t\t})[] = [];\n\n\t\tcopyFromOptions.push({ text: localize(\"empty profile\", \"None\") });\n\t\tfor (const [\n\t\t\tcopyFromTemplate,\n\t\t\tname,\n\t\t] of profileElement.copyFromTemplates) {\n\t\t\tif (\n\t\t\t\t!this.templates.some((template) =>\n\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\tURI.parse(template.url),\n\t\t\t\t\t\tcopyFromTemplate,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcopyFromOptions.push({\n\t\t\t\t\ttext: `${name} (${basename(copyFromTemplate)})`,\n\t\t\t\t\tid: copyFromTemplate.toString(),\n\t\t\t\t\tsource: copyFromTemplate,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this.templates.length) {\n\t\t\tcopyFromOptions.push({\n\t\t\t\t...separator,\n\t\t\t\tdecoratorRight: localize(\"from templates\", \"Profile Templates\"),\n\t\t\t});\n\t\t\tfor (const template of this.templates) {\n\t\t\t\tcopyFromOptions.push({\n\t\t\t\t\ttext: template.name,\n\t\t\t\t\tid: template.url,\n\t\t\t\t\tsource: URI.parse(template.url),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tcopyFromOptions.push({\n\t\t\t...separator,\n\t\t\tdecoratorRight: localize(\n\t\t\t\t\"from existing profiles\",\n\t\t\t\t\"Existing Profiles\",\n\t\t\t),\n\t\t});\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tcopyFromOptions.push({\n\t\t\t\ttext: profile.name,\n\t\t\t\tid: profile.id,\n\t\t\t\tsource: profile,\n\t\t\t});\n\t\t}\n\t\treturn copyFromOptions;\n\t}\n}\n\nclass ContentsProfileRenderer extends ProfilePropertyRenderer {\n\treadonly templateId: ProfileProperty = \"contents\";\n\n\tprivate readonly _onDidChangeContentHeight = this._register(\n\t\tnew Emitter<ProfileTreeElement>(),\n\t);\n\treadonly onDidChangeContentHeight = this._onDidChangeContentHeight.event;\n\n\tprivate readonly _onDidChangeSelection = this._register(\n\t\tnew Emitter<{ element: ProfileTreeElement; selected: boolean }>(),\n\t);\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\tprivate profilesContentTree:\n\t\t| WorkbenchAsyncDataTree<\n\t\t\t\tAbstractUserDataProfileElement,\n\t\t\t\tProfileContentTreeElement\n\t\t  >\n\t\t| undefined;\n\n\tconstructor(\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst configureRowContainer = append(\n\t\t\tparent,\n\t\t\t$(\".profile-row-container\"),\n\t\t);\n\t\tappend(\n\t\t\tconfigureRowContainer,\n\t\t\t$(\n\t\t\t\t\".profile-label-element\",\n\t\t\t\tundefined,\n\t\t\t\tlocalize(\"contents\", \"Contents\"),\n\t\t\t),\n\t\t);\n\t\tconst contentsDescriptionElement = append(\n\t\t\tconfigureRowContainer,\n\t\t\t$(\".profile-description-element\"),\n\t\t);\n\t\tconst contentsTreeHeader = append(\n\t\t\tconfigureRowContainer,\n\t\t\t$(\".profile-content-tree-header\"),\n\t\t);\n\t\tconst optionsLabel = $(\n\t\t\t\".options-header\",\n\t\t\tundefined,\n\t\t\t$(\"span\", undefined, localize(\"options\", \"Source\")),\n\t\t);\n\t\tappend(\n\t\t\tcontentsTreeHeader,\n\t\t\t$(\"\"),\n\t\t\t$(\"\", undefined, localize(\"contents\", \"Contents\")),\n\t\t\toptionsLabel,\n\t\t\t$(\".actions-header\", undefined, localize(\"actions\", \"Actions\")),\n\t\t);\n\n\t\tconst delegate = new ProfileContentTreeElementDelegate();\n\t\tconst profilesContentTree = (this.profilesContentTree = disposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchAsyncDataTree<\n\t\t\t\t\tAbstractUserDataProfileElement,\n\t\t\t\t\tProfileContentTreeElement\n\t\t\t\t>,\n\t\t\t\t\"ProfileEditor-ContentsTree\",\n\t\t\t\tappend(\n\t\t\t\t\tconfigureRowContainer,\n\t\t\t\t\t$(\n\t\t\t\t\t\t\".profile-content-tree.file-icon-themable-tree.show-file-icons\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tdelegate,\n\t\t\t\t[\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tExistingProfileResourceTreeRenderer,\n\t\t\t\t\t),\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tNewProfileResourceTreeRenderer,\n\t\t\t\t\t),\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tProfileResourceChildTreeItemRenderer,\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tProfileResourceTreeDataSource,\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\t\thorizontalScrolling: false,\n\t\t\t\t\taccessibilityProvider: {\n\t\t\t\t\t\tgetAriaLabel(\n\t\t\t\t\t\t\telement: ProfileContentTreeElement | null,\n\t\t\t\t\t\t): string {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(<IProfileResourceTypeElement>element?.element)\n\t\t\t\t\t\t\t\t\t.resourceType\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn (<IProfileResourceTypeElement>(\n\t\t\t\t\t\t\t\t\telement?.element\n\t\t\t\t\t\t\t\t)).resourceType;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(<IProfileResourceTypeChildElement>(\n\t\t\t\t\t\t\t\t\telement?.element\n\t\t\t\t\t\t\t\t)).label\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn (<IProfileResourceTypeChildElement>(\n\t\t\t\t\t\t\t\t\telement?.element\n\t\t\t\t\t\t\t\t)).label;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetWidgetAriaLabel(): string {\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tidentityProvider: {\n\t\t\t\t\t\tgetId(element) {\n\t\t\t\t\t\t\tif (element?.element.handle) {\n\t\t\t\t\t\t\t\treturn element.element.handle;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\t\tenableStickyScroll: false,\n\t\t\t\t\topenOnSingleClick: false,\n\t\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t\t},\n\t\t\t),\n\t\t));\n\n\t\tthis.profilesContentTree.style(listStyles);\n\n\t\tdisposables.add(\n\t\t\ttoDisposable(() => (this.profilesContentTree = undefined)),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tthis.profilesContentTree.onDidChangeContentHeight((height) => {\n\t\t\t\tthis.profilesContentTree?.layout(height);\n\t\t\t\tif (profileElement) {\n\t\t\t\t\tthis._onDidChangeContentHeight.fire(profileElement);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tthis.profilesContentTree.onDidChangeSelection((e) => {\n\t\t\t\tif (profileElement) {\n\t\t\t\t\tthis._onDidChangeSelection.fire({\n\t\t\t\t\t\telement: profileElement,\n\t\t\t\t\t\tselected: !!e.elements.length,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tthis.profilesContentTree.onDidOpen(async (e) => {\n\t\t\t\tif (!e.browserEvent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\te.browserEvent.target &&\n\t\t\t\t\t(e.browserEvent.target as HTMLElement).classList.contains(\n\t\t\t\t\t\tCheckbox.CLASS_NAME,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (e.element?.element.action) {\n\t\t\t\t\tawait e.element.element.action.run();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst updateDescription = (element: ProfileTreeElement) => {\n\t\t\tconst defaultHelpInfo = localize(\n\t\t\t\t\"default info\",\n\t\t\t\t\"- *Default:* Use contents from the Default profile\\n\",\n\t\t\t);\n\t\t\tconst markdown = new MarkdownString().appendMarkdown(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"contents source description\",\n\t\t\t\t\t\"Configure source of contents for this profile\\n\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tclearNode(contentsDescriptionElement);\n\n\t\t\tif (\n\t\t\t\telement.root instanceof UserDataProfileElement &&\n\t\t\t\telement.root.profile.isDefault\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (element.root instanceof NewProfileElement) {\n\t\t\t\tconst copyFromName = element.root.getCopyFromName();\n\t\t\t\tconst optionName =\n\t\t\t\t\tcopyFromName ===\n\t\t\t\t\tthis.userDataProfilesService.defaultProfile.name\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\"copy from default\",\n\t\t\t\t\t\t\t\t\"{0} (Copy)\",\n\t\t\t\t\t\t\t\tcopyFromName,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: copyFromName;\n\t\t\t\tif (optionName) {\n\t\t\t\t\tmarkdown.appendMarkdown(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"copy info\",\n\t\t\t\t\t\t\t\"- *{0}:* Copy contents from the {1} profile\\n\",\n\t\t\t\t\t\t\toptionName,\n\t\t\t\t\t\t\tcopyFromName,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tmarkdown\n\t\t\t\t\t.appendMarkdown(defaultHelpInfo)\n\t\t\t\t\t.appendMarkdown(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"none info\",\n\t\t\t\t\t\t\t\"- *None:* Create empty contents\\n\",\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t} else if (element.root instanceof UserDataProfileElement) {\n\t\t\t\tmarkdown\n\t\t\t\t\t.appendMarkdown(defaultHelpInfo)\n\t\t\t\t\t.appendMarkdown(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"current info\",\n\t\t\t\t\t\t\t\"- *{1}:* Use contents from the {0} profile\\n\",\n\t\t\t\t\t\t\telement.root.profile.name,\n\t\t\t\t\t\t\telement.root.profile.name,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tappend(\n\t\t\t\tcontentsDescriptionElement,\n\t\t\t\telementDisposables.add(renderMarkdown(markdown)).element,\n\t\t\t);\n\t\t};\n\n\t\tconst that = this;\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\tupdateDescription(element);\n\t\t\t\tif (element.root instanceof NewProfileElement) {\n\t\t\t\t\tcontentsTreeHeader.classList.remove(\"default-profile\");\n\t\t\t\t} else if (element.root instanceof UserDataProfileElement) {\n\t\t\t\t\tcontentsTreeHeader.classList.toggle(\n\t\t\t\t\t\t\"default-profile\",\n\t\t\t\t\t\telement.root.profile.isDefault,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tprofilesContentTree.setInput(profileElement.root);\n\t\t\t\telementDisposables.add(\n\t\t\t\t\tprofileElement.root.onDidChange((e) => {\n\t\t\t\t\t\tif (e.copyFrom || e.copyFlags || e.flags) {\n\t\t\t\t\t\t\tprofilesContentTree.updateChildren(element.root);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e.copyFromInfo) {\n\t\t\t\t\t\t\tupdateDescription(element);\n\t\t\t\t\t\t\tthat._onDidChangeContentHeight.fire(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables: new DisposableStore(),\n\t\t};\n\t}\n\n\tclearSelection(): void {\n\t\tif (this.profilesContentTree) {\n\t\t\tthis.profilesContentTree.setSelection([]);\n\t\t\tthis.profilesContentTree.setFocus([]);\n\t\t}\n\t}\n}\n\nclass ExistingProfileResourceTreeRenderer\n\textends AbstractProfileResourceTreeRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tProfileContentTreeElement,\n\t\t\tvoid,\n\t\t\tIExistingProfileResourceTemplateData\n\t\t>\n{\n\tstatic readonly TEMPLATE_ID = \"ExistingProfileResourceTemplate\";\n\n\treadonly templateId = ExistingProfileResourceTreeRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IExistingProfileResourceTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst container = append(\n\t\t\tparent,\n\t\t\t$(\n\t\t\t\t\".profile-tree-item-container.existing-profile-resource-type-container\",\n\t\t\t),\n\t\t);\n\t\tconst label = append(container, $(\".profile-resource-type-label\"));\n\n\t\tconst radio = disposables.add(new Radio({ items: [] }));\n\t\tappend(\n\t\t\tappend(container, $(\".profile-resource-options-container\")),\n\t\t\tradio.domNode,\n\t\t);\n\n\t\tconst actionsContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\".profile-resource-actions-container\"),\n\t\t);\n\t\tconst actionBar = disposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchToolBar,\n\t\t\t\tactionsContainer,\n\t\t\t\t{\n\t\t\t\t\thoverDelegate: disposables.add(\n\t\t\t\t\t\tcreateInstantHoverDelegate(),\n\t\t\t\t\t),\n\t\t\t\t\thighlightToggledItems: true,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn {\n\t\t\tlabel,\n\t\t\tradio,\n\t\t\tactionBar,\n\t\t\tdisposables,\n\t\t\telementDisposables: disposables.add(new DisposableStore()),\n\t\t};\n\t}\n\n\trenderElement(\n\t\t{\n\t\t\telement: profileResourceTreeElement,\n\t\t}: ITreeNode<ProfileContentTreeElement, void>,\n\t\tindex: number,\n\t\ttemplateData: IExistingProfileResourceTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\tconst { element, root } = profileResourceTreeElement;\n\t\tif (!(root instanceof UserDataProfileElement)) {\n\t\t\tthrow new Error(\n\t\t\t\t\"ExistingProfileResourceTreeRenderer can only render existing profile element\",\n\t\t\t);\n\t\t}\n\t\tif (isString(element) || !isProfileResourceTypeElement(element)) {\n\t\t\tthrow new Error(\"Invalid profile resource element\");\n\t\t}\n\n\t\tconst updateRadioItems = () => {\n\t\t\ttemplateData.radio.setItems([\n\t\t\t\t{\n\t\t\t\t\ttext: localize(\"default\", \"Default\"),\n\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\"default description\",\n\t\t\t\t\t\t\"Use {0} from the Default profile\",\n\t\t\t\t\t\tresourceTypeTitle,\n\t\t\t\t\t),\n\t\t\t\t\tisActive: root.getFlag(element.resourceType),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: root.name,\n\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\"current description\",\n\t\t\t\t\t\t\"Use {0} from the {1} profile\",\n\t\t\t\t\t\tresourceTypeTitle,\n\t\t\t\t\t\troot.name,\n\t\t\t\t\t),\n\t\t\t\t\tisActive: !root.getFlag(element.resourceType),\n\t\t\t\t},\n\t\t\t]);\n\t\t};\n\n\t\tconst resourceTypeTitle = this.getResourceTypeTitle(\n\t\t\telement.resourceType,\n\t\t);\n\t\ttemplateData.label.textContent = resourceTypeTitle;\n\n\t\tif (root instanceof UserDataProfileElement && root.profile.isDefault) {\n\t\t\ttemplateData.radio.domNode.classList.add(\"hide\");\n\t\t} else {\n\t\t\ttemplateData.radio.domNode.classList.remove(\"hide\");\n\t\t\tupdateRadioItems();\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\troot.onDidChange((e) => {\n\t\t\t\t\tif (e.name) {\n\t\t\t\t\t\tupdateRadioItems();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\ttemplateData.radio.onDidSelect((index) =>\n\t\t\t\t\troot.setFlag(element.resourceType, index === 0),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\ttemplateData.actionBar.setActions(\n\t\t\telement.action ? [element.action] : [],\n\t\t);\n\t}\n}\n\nclass NewProfileResourceTreeRenderer\n\textends AbstractProfileResourceTreeRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tProfileContentTreeElement,\n\t\t\tvoid,\n\t\t\tINewProfileResourceTemplateData\n\t\t>\n{\n\tstatic readonly TEMPLATE_ID = \"NewProfileResourceTemplate\";\n\n\treadonly templateId = NewProfileResourceTreeRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): INewProfileResourceTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst container = append(\n\t\t\tparent,\n\t\t\t$(\n\t\t\t\t\".profile-tree-item-container.new-profile-resource-type-container\",\n\t\t\t),\n\t\t);\n\t\tconst labelContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\".profile-resource-type-label-container\"),\n\t\t);\n\t\tconst label = append(\n\t\t\tlabelContainer,\n\t\t\t$(\"span.profile-resource-type-label\"),\n\t\t);\n\n\t\tconst radio = disposables.add(new Radio({ items: [] }));\n\t\tappend(\n\t\t\tappend(container, $(\".profile-resource-options-container\")),\n\t\t\tradio.domNode,\n\t\t);\n\n\t\tconst actionsContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\".profile-resource-actions-container\"),\n\t\t);\n\t\tconst actionBar = disposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchToolBar,\n\t\t\t\tactionsContainer,\n\t\t\t\t{\n\t\t\t\t\thoverDelegate: disposables.add(\n\t\t\t\t\t\tcreateInstantHoverDelegate(),\n\t\t\t\t\t),\n\t\t\t\t\thighlightToggledItems: true,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn {\n\t\t\tlabel,\n\t\t\tradio,\n\t\t\tactionBar,\n\t\t\tdisposables,\n\t\t\telementDisposables: disposables.add(new DisposableStore()),\n\t\t};\n\t}\n\n\trenderElement(\n\t\t{\n\t\t\telement: profileResourceTreeElement,\n\t\t}: ITreeNode<ProfileContentTreeElement, void>,\n\t\tindex: number,\n\t\ttemplateData: INewProfileResourceTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\tconst { element, root } = profileResourceTreeElement;\n\t\tif (!(root instanceof NewProfileElement)) {\n\t\t\tthrow new Error(\n\t\t\t\t\"NewProfileResourceTreeRenderer can only render new profile element\",\n\t\t\t);\n\t\t}\n\t\tif (isString(element) || !isProfileResourceTypeElement(element)) {\n\t\t\tthrow new Error(\"Invalid profile resource element\");\n\t\t}\n\n\t\tconst resourceTypeTitle = this.getResourceTypeTitle(\n\t\t\telement.resourceType,\n\t\t);\n\t\ttemplateData.label.textContent = resourceTypeTitle;\n\n\t\tconst renderRadioItems = () => {\n\t\t\tconst options = [\n\t\t\t\t{\n\t\t\t\t\ttext: localize(\"default\", \"Default\"),\n\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\"default description\",\n\t\t\t\t\t\t\"Use {0} from the Default profile\",\n\t\t\t\t\t\tresourceTypeTitle,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: localize(\"none\", \"None\"),\n\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\"none description\",\n\t\t\t\t\t\t\"Create empty {0}\",\n\t\t\t\t\t\tresourceTypeTitle,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t];\n\t\t\tconst copyFromName = root.getCopyFromName();\n\t\t\tconst name =\n\t\t\t\tcopyFromName ===\n\t\t\t\tthis.userDataProfilesService.defaultProfile.name\n\t\t\t\t\t? localize(\"copy from default\", \"{0} (Copy)\", copyFromName)\n\t\t\t\t\t: copyFromName;\n\t\t\tif (root.copyFrom && name) {\n\t\t\t\ttemplateData.radio.setItems([\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: name,\n\t\t\t\t\t\ttooltip: name\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"copy from profile description\",\n\t\t\t\t\t\t\t\t\t\"Copy {0} from the {1} profile\",\n\t\t\t\t\t\t\t\t\tresourceTypeTitle,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\"copy description\", \"Copy\"),\n\t\t\t\t\t},\n\t\t\t\t\t...options,\n\t\t\t\t]);\n\t\t\t\ttemplateData.radio.setActiveItem(\n\t\t\t\t\troot.getCopyFlag(element.resourceType)\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: root.getFlag(element.resourceType)\n\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t: 2,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttemplateData.radio.setItems(options);\n\t\t\t\ttemplateData.radio.setActiveItem(\n\t\t\t\t\troot.getFlag(element.resourceType) ? 0 : 1,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tif (root.copyFrom) {\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\ttemplateData.radio.onDidSelect((index) => {\n\t\t\t\t\troot.setFlag(element.resourceType, index === 1);\n\t\t\t\t\troot.setCopyFlag(element.resourceType, index === 0);\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\ttemplateData.radio.onDidSelect((index) => {\n\t\t\t\t\troot.setFlag(element.resourceType, index === 0);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\trenderRadioItems();\n\t\ttemplateData.radio.setEnabled(!root.disabled);\n\t\ttemplateData.elementDisposables.add(\n\t\t\troot.onDidChange((e) => {\n\t\t\t\tif (e.disabled) {\n\t\t\t\t\ttemplateData.radio.setEnabled(!root.disabled);\n\t\t\t\t}\n\t\t\t\tif (e.copyFrom || e.copyFromInfo) {\n\t\t\t\t\trenderRadioItems();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\ttemplateData.actionBar.setActions(\n\t\t\telement.action ? [element.action] : [],\n\t\t);\n\t}\n}\n\nclass ProfileResourceChildTreeItemRenderer\n\textends AbstractProfileResourceTreeRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tProfileContentTreeElement,\n\t\t\tvoid,\n\t\t\tIProfileResourceChildTreeItemTemplateData\n\t\t>\n{\n\tstatic readonly TEMPLATE_ID = \"ProfileResourceChildTreeItemTemplate\";\n\n\treadonly templateId = ProfileResourceChildTreeItemRenderer.TEMPLATE_ID;\n\tprivate readonly labels: ResourceLabels;\n\tprivate readonly hoverDelegate: IHoverDelegate;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.labels = instantiationService.createInstance(ResourceLabels, DEFAULT_LABELS_CONTAINER);\n\t\tthis.hoverDelegate = this._register(instantiationService.createInstance(WorkbenchHoverDelegate, 'mouse', false, {}));\n\t}\n\n\trenderTemplate(\n\t\tparent: HTMLElement,\n\t): IProfileResourceChildTreeItemTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst container = append(\n\t\t\tparent,\n\t\t\t$(\".profile-tree-item-container.profile-resource-child-container\"),\n\t\t);\n\t\tconst checkbox = disposables.add(\n\t\t\tnew Checkbox(\"\", false, defaultCheckboxStyles),\n\t\t);\n\t\tappend(container, checkbox.domNode);\n\t\tconst resourceLabel = disposables.add(\n\t\t\tthis.labels.create(container, {\n\t\t\t\thoverDelegate: this.hoverDelegate,\n\t\t\t}),\n\t\t);\n\n\t\tconst actionsContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\".profile-resource-actions-container\"),\n\t\t);\n\t\tconst actionBar = disposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchToolBar,\n\t\t\t\tactionsContainer,\n\t\t\t\t{\n\t\t\t\t\thoverDelegate: disposables.add(\n\t\t\t\t\t\tcreateInstantHoverDelegate(),\n\t\t\t\t\t),\n\t\t\t\t\thighlightToggledItems: true,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn {\n\t\t\tcheckbox,\n\t\t\tresourceLabel,\n\t\t\tactionBar,\n\t\t\tdisposables,\n\t\t\telementDisposables: disposables.add(new DisposableStore()),\n\t\t};\n\t}\n\n\trenderElement(\n\t\t{\n\t\t\telement: profileResourceTreeElement,\n\t\t}: ITreeNode<ProfileContentTreeElement, void>,\n\t\tindex: number,\n\t\ttemplateData: IProfileResourceChildTreeItemTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\tconst { element } = profileResourceTreeElement;\n\n\t\tif (isString(element) || !isProfileResourceChildElement(element)) {\n\t\t\tthrow new Error(\"Invalid profile resource element\");\n\t\t}\n\n\t\tif (element.checkbox) {\n\t\t\ttemplateData.checkbox.domNode.setAttribute(\"tabindex\", \"0\");\n\t\t\ttemplateData.checkbox.domNode.classList.remove(\"hide\");\n\t\t\ttemplateData.checkbox.checked = element.checkbox.isChecked;\n\t\t\ttemplateData.checkbox.domNode.ariaLabel =\n\t\t\t\telement.checkbox.accessibilityInformation?.label ?? \"\";\n\t\t\tif (element.checkbox.accessibilityInformation?.role) {\n\t\t\t\ttemplateData.checkbox.domNode.role =\n\t\t\t\t\telement.checkbox.accessibilityInformation.role;\n\t\t\t}\n\t\t} else {\n\t\t\ttemplateData.checkbox.domNode.removeAttribute(\"tabindex\");\n\t\t\ttemplateData.checkbox.domNode.classList.add(\"hide\");\n\t\t}\n\n\t\ttemplateData.resourceLabel.setResource(\n\t\t\t{\n\t\t\t\tname: element.resource\n\t\t\t\t\t? basename(element.resource)\n\t\t\t\t\t: element.label,\n\t\t\t\tresource: element.resource,\n\t\t\t},\n\t\t\t{\n\t\t\t\tforceLabel: true,\n\t\t\t\ticon: element.icon,\n\t\t\t\thideIcon: !element.resource && !element.icon,\n\t\t\t},\n\t\t);\n\t\ttemplateData.actionBar.setActions(\n\t\t\telement.action ? [element.action] : [],\n\t\t);\n\t}\n}\n\nexport class UserDataProfilesEditorInput extends EditorInput {\n\tstatic readonly ID: string = \"workbench.input.userDataProfiles\";\n\treadonly resource = undefined;\n\n\tprivate readonly model: UserDataProfilesEditorModel;\n\n\tprivate _dirty = false;\n\tget dirty(): boolean {\n\t\treturn this._dirty;\n\t}\n\tset dirty(dirty: boolean) {\n\t\tif (this._dirty !== dirty) {\n\t\t\tthis._dirty = dirty;\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.model = UserDataProfilesEditorModel.getInstance(this.instantiationService);\n\t\tthis._register(this.model.onDidChange(e => this.dirty = this.model.profiles.some(profile => profile instanceof NewProfileElement)));\n\t}\n\n\toverride get typeId(): string {\n\t\treturn UserDataProfilesEditorInput.ID;\n\t}\n\toverride getName(): string {\n\t\treturn localize(\"userDataProfiles\", \"Profiles\");\n\t}\n\toverride getIcon(): ThemeIcon | undefined {\n\t\treturn defaultUserDataProfileIcon;\n\t}\n\n\toverride async resolve(): Promise<UserDataProfilesEditorModel> {\n\t\tawait this.model.resolve();\n\t\treturn this.model;\n\t}\n\n\toverride isDirty(): boolean {\n\t\treturn this.dirty;\n\t}\n\n\toverride async save(): Promise<EditorInput> {\n\t\tawait this.model.saveNewProfile();\n\t\treturn this;\n\t}\n\n\toverride async revert(): Promise<void> {\n\t\tthis.model.revert();\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\treturn otherInput instanceof UserDataProfilesEditorInput;\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const profile of this.model.profiles) {\n\t\t\tif (profile instanceof UserDataProfileElement) {\n\t\t\t\tprofile.reset();\n\t\t\t}\n\t\t}\n\t\tsuper.dispose();\n\t}\n}\n\nexport class UserDataProfilesEditorInputSerializer\n\timplements IEditorSerializer\n{\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\tserialize(editorInput: EditorInput): string {\n\t\treturn \"\";\n\t}\n\tdeserialize(instantiationService: IInstantiationService): EditorInput {\n\t\treturn instantiationService.createInstance(UserDataProfilesEditorInput);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["elementToSelect", "profileElement", "index"]
}
