{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataProfile/browser/userDataProfilesEditorModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action, IAction, Separator } from '../../../../base/common/actions.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { localize } from '../../../../nls.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { DidChangeProfilesEvent, isUserDataProfile, IUserDataProfile, IUserDataProfilesService, ProfileResourceType, ProfileResourceTypeFlags, toUserDataProfile, UseDefaultProfileFlags } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IProfileResourceChildTreeItem, IProfileTemplateInfo, isProfileURL, IUserDataProfileImportExportService, IUserDataProfileManagementService, IUserDataProfileService, IUserDataProfileTemplate } from '../../../services/userDataProfile/common/userDataProfile.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { equals } from '../../../../base/common/objects.js';\nimport { EditorModel } from '../../../common/editor/editorModel.js';\nimport { ExtensionsResourceExportTreeItem, ExtensionsResourceImportTreeItem } from '../../../services/userDataProfile/browser/extensionsResource.js';\nimport { SettingsResource, SettingsResourceTreeItem } from '../../../services/userDataProfile/browser/settingsResource.js';\nimport { KeybindingsResource, KeybindingsResourceTreeItem } from '../../../services/userDataProfile/browser/keybindingsResource.js';\nimport { TasksResource, TasksResourceTreeItem } from '../../../services/userDataProfile/browser/tasksResource.js';\nimport { SnippetsResource, SnippetsResourceTreeItem } from '../../../services/userDataProfile/browser/snippetsResource.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { InMemoryFileSystemProvider } from '../../../../platform/files/common/inMemoryFilesystemProvider.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { CancelablePromise, createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { ITreeItemCheckboxState } from '../../../common/views.js';\nimport { API_OPEN_EDITOR_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { SIDE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { CONFIG_NEW_WINDOW_PROFILE } from '../../../common/configuration.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { getErrorMessage } from '../../../../base/common/errors.js';\nimport { isWeb } from '../../../../base/common/platform.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\n\nexport type ChangeEvent = {\n\treadonly name?: boolean;\n\treadonly icon?: boolean;\n\treadonly flags?: boolean;\n\treadonly active?: boolean;\n\treadonly message?: boolean;\n\treadonly copyFrom?: boolean;\n\treadonly copyFromInfo?: boolean;\n\treadonly copyFlags?: boolean;\n\treadonly preview?: boolean;\n\treadonly profile?: boolean;\n\treadonly disabled?: boolean;\n\treadonly newWindowProfile?: boolean;\n};\n\nexport interface IProfileChildElement {\n\treadonly handle: string;\n\treadonly action?: IAction;\n\treadonly checkbox?: ITreeItemCheckboxState;\n}\n\nexport interface IProfileResourceTypeElement extends IProfileChildElement {\n\treadonly resourceType: ProfileResourceType;\n}\n\nexport interface IProfileResourceTypeChildElement extends IProfileChildElement {\n\treadonly label: string;\n\treadonly resource?: URI;\n\treadonly icon?: ThemeIcon;\n}\n\nexport function isProfileResourceTypeElement(element: IProfileChildElement): element is IProfileResourceTypeElement {\n\treturn (element as IProfileResourceTypeElement).resourceType !== undefined;\n}\n\nexport function isProfileResourceChildElement(element: IProfileChildElement): element is IProfileResourceTypeChildElement {\n\treturn (element as IProfileResourceTypeChildElement).label !== undefined;\n}\n\nexport abstract class AbstractUserDataProfileElement extends Disposable {\n\n\tprotected readonly _onDidChange = this._register(new Emitter<ChangeEvent>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate readonly saveScheduler = this._register(new RunOnceScheduler(() => this.doSave(), 500));\n\n\tconstructor(\n\t\tname: string,\n\t\ticon: string | undefined,\n\t\tflags: UseDefaultProfileFlags | undefined,\n\t\tisActive: boolean,\n\t\t@IUserDataProfileManagementService protected readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfilesService protected readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@ICommandService protected readonly commandService: ICommandService,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._name = name;\n\t\tthis._icon = icon;\n\t\tthis._flags = flags;\n\t\tthis._active = isActive;\n\t\tthis._register(this.onDidChange(e => {\n\t\t\tif (!e.message) {\n\t\t\t\tthis.validate();\n\t\t\t}\n\t\t\tthis.save();\n\t\t}));\n\t}\n\n\tprivate _name = '';\n\tget name(): string { return this._name; }\n\tset name(name: string) {\n\t\tname = name.trim();\n\t\tif (this._name !== name) {\n\t\t\tthis._name = name;\n\t\t\tthis._onDidChange.fire({ name: true });\n\t\t}\n\t}\n\n\tprivate _icon: string | undefined;\n\tget icon(): string | undefined { return this._icon; }\n\tset icon(icon: string | undefined) {\n\t\tif (this._icon !== icon) {\n\t\t\tthis._icon = icon;\n\t\t\tthis._onDidChange.fire({ icon: true });\n\t\t}\n\t}\n\n\tprivate _flags: UseDefaultProfileFlags | undefined;\n\tget flags(): UseDefaultProfileFlags | undefined { return this._flags; }\n\tset flags(flags: UseDefaultProfileFlags | undefined) {\n\t\tif (!equals(this._flags, flags)) {\n\t\t\tthis._flags = flags;\n\t\t\tthis._onDidChange.fire({ flags: true });\n\t\t}\n\t}\n\n\tprivate _active: boolean = false;\n\tget active(): boolean { return this._active; }\n\tset active(active: boolean) {\n\t\tif (this._active !== active) {\n\t\t\tthis._active = active;\n\t\t\tthis._onDidChange.fire({ active: true });\n\t\t}\n\t}\n\n\tprivate _message: string | undefined;\n\tget message(): string | undefined { return this._message; }\n\tset message(message: string | undefined) {\n\t\tif (this._message !== message) {\n\t\t\tthis._message = message;\n\t\t\tthis._onDidChange.fire({ message: true });\n\t\t}\n\t}\n\n\tprivate _disabled: boolean = false;\n\tget disabled(): boolean { return this._disabled; }\n\tset disabled(saving: boolean) {\n\t\tif (this._disabled !== saving) {\n\t\t\tthis._disabled = saving;\n\t\t\tthis._onDidChange.fire({ disabled: true });\n\t\t}\n\t}\n\n\tgetFlag(key: ProfileResourceType): boolean {\n\t\treturn this.flags?.[key] ?? false;\n\t}\n\n\tsetFlag(key: ProfileResourceType, value: boolean): void {\n\t\tconst flags = this.flags ? { ...this.flags } : {};\n\t\tif (value) {\n\t\t\tflags[key] = true;\n\t\t} else {\n\t\t\tdelete flags[key];\n\t\t}\n\t\tthis.flags = flags;\n\t}\n\n\tvalidate(): void {\n\t\tif (!this.name) {\n\t\t\tthis.message = localize('name required', \"Profile name is required and must be a non-empty value.\");\n\t\t\treturn;\n\t\t}\n\t\tif (this.shouldValidateName() && this.name !== this.getInitialName() && this.userDataProfilesService.profiles.some(p => p.name === this.name)) {\n\t\t\tthis.message = localize('profileExists', \"Profile with name {0} already exists.\", this.name);\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.flags && this.flags.settings && this.flags.keybindings && this.flags.tasks && this.flags.snippets && this.flags.extensions\n\t\t) {\n\t\t\tthis.message = localize('invalid configurations', \"The profile should contain at least one configuration.\");\n\t\t\treturn;\n\t\t}\n\t\tthis.message = undefined;\n\t}\n\n\tasync getChildren(resourceType?: ProfileResourceType): Promise<IProfileChildElement[]> {\n\t\tif (resourceType === undefined) {\n\t\t\tconst resourceTypes = [\n\t\t\t\tProfileResourceType.Settings,\n\t\t\t\tProfileResourceType.Keybindings,\n\t\t\t\tProfileResourceType.Tasks,\n\t\t\t\tProfileResourceType.Snippets,\n\t\t\t\tProfileResourceType.Extensions\n\t\t\t];\n\t\t\treturn Promise.all(resourceTypes.map<Promise<IProfileResourceTypeElement>>(async r => {\n\t\t\t\tconst children = (r === ProfileResourceType.Settings\n\t\t\t\t\t|| r === ProfileResourceType.Keybindings\n\t\t\t\t\t|| r === ProfileResourceType.Tasks) ? await this.getChildrenForResourceType(r) : [];\n\t\t\t\treturn {\n\t\t\t\t\thandle: r,\n\t\t\t\t\tcheckbox: undefined,\n\t\t\t\t\tresourceType: r,\n\t\t\t\t\taction: children.length\n\t\t\t\t\t\t? new Action('_open',\n\t\t\t\t\t\t\tlocalize('open', \"Open to the Side\"),\n\t\t\t\t\t\t\tThemeIcon.asClassName(Codicon.goToFile),\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t() => children[0]?.action?.run())\n\t\t\t\t\t\t: undefined\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\t\treturn this.getChildrenForResourceType(resourceType);\n\t}\n\n\tprotected async getChildrenForResourceType(resourceType: ProfileResourceType): Promise<IProfileChildElement[]> {\n\t\treturn [];\n\t}\n\n\tprotected async getChildrenFromProfile(profile: IUserDataProfile, resourceType: ProfileResourceType): Promise<IProfileResourceTypeChildElement[]> {\n\t\tprofile = this.getFlag(resourceType) ? this.userDataProfilesService.defaultProfile : profile;\n\t\tlet children: IProfileResourceChildTreeItem[] = [];\n\t\tswitch (resourceType) {\n\t\t\tcase ProfileResourceType.Settings:\n\t\t\t\tchildren = await this.instantiationService.createInstance(SettingsResourceTreeItem, profile).getChildren();\n\t\t\t\tbreak;\n\t\t\tcase ProfileResourceType.Keybindings:\n\t\t\t\tchildren = await this.instantiationService.createInstance(KeybindingsResourceTreeItem, profile).getChildren();\n\t\t\t\tbreak;\n\t\t\tcase ProfileResourceType.Snippets:\n\t\t\t\tchildren = (await this.instantiationService.createInstance(SnippetsResourceTreeItem, profile).getChildren()) ?? [];\n\t\t\t\tbreak;\n\t\t\tcase ProfileResourceType.Tasks:\n\t\t\t\tchildren = await this.instantiationService.createInstance(TasksResourceTreeItem, profile).getChildren();\n\t\t\t\tbreak;\n\t\t\tcase ProfileResourceType.Extensions:\n\t\t\t\tchildren = await this.instantiationService.createInstance(ExtensionsResourceExportTreeItem, profile).getChildren();\n\t\t\t\tbreak;\n\t\t}\n\t\treturn children.map<IProfileResourceTypeChildElement>(child => this.toUserDataProfileResourceChildElement(child));\n\t}\n\n\tprotected toUserDataProfileResourceChildElement(child: IProfileResourceChildTreeItem): IProfileResourceTypeChildElement {\n\t\treturn {\n\t\t\thandle: child.handle,\n\t\t\tcheckbox: child.checkbox,\n\t\t\tlabel: child.label?.label ?? '',\n\t\t\tresource: URI.revive(child.resourceUri),\n\t\t\ticon: child.themeIcon,\n\t\t\taction: new Action('_openChild', localize('open', \"Open to the Side\"), ThemeIcon.asClassName(Codicon.goToFile), true, async () => {\n\t\t\t\tif (child.parent.type === ProfileResourceType.Extensions) {\n\t\t\t\t\tawait this.commandService.executeCommand('extension.open', child.handle, undefined, true, undefined, true);\n\t\t\t\t} else if (child.resourceUri) {\n\t\t\t\t\tawait this.commandService.executeCommand(API_OPEN_EDITOR_COMMAND_ID, child.resourceUri, [SIDE_GROUP], undefined);\n\t\t\t\t}\n\t\t\t})\n\t\t};\n\n\t}\n\n\tgetInitialName(): string {\n\t\treturn '';\n\t}\n\n\tshouldValidateName(): boolean {\n\t\treturn true;\n\t}\n\n\tsave(): void {\n\t\tthis.saveScheduler.schedule();\n\t}\n\n\tprivate hasUnsavedChanges(profile: IUserDataProfile): boolean {\n\t\tif (this.name !== profile.name) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.icon !== profile.icon) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!equals(this.flags ?? {}, profile.useDefaultFlags ?? {})) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected async saveProfile(profile: IUserDataProfile): Promise<IUserDataProfile | undefined> {\n\t\tif (!this.hasUnsavedChanges(profile)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.validate();\n\t\tif (this.message) {\n\t\t\treturn;\n\t\t}\n\t\tconst useDefaultFlags: UseDefaultProfileFlags | undefined = this.flags\n\t\t\t? this.flags.settings && this.flags.keybindings && this.flags.tasks && this.flags.globalState && this.flags.extensions ? undefined : this.flags\n\t\t\t: undefined;\n\n\t\treturn await this.userDataProfileManagementService.updateProfile(profile, {\n\t\t\tname: this.name,\n\t\t\ticon: this.icon,\n\t\t\tuseDefaultFlags: profile.useDefaultFlags && !useDefaultFlags ? {} : useDefaultFlags\n\t\t});\n\t}\n\n\tabstract readonly titleButtons: [Action[], Action[]];\n\tabstract readonly actions: [IAction[], IAction[]];\n\n\tprotected abstract doSave(): Promise<void>;\n}\n\nexport class UserDataProfileElement extends AbstractUserDataProfileElement {\n\n\tget profile(): IUserDataProfile { return this._profile; }\n\n\tconstructor(\n\t\tprivate _profile: IUserDataProfile,\n\t\treadonly titleButtons: [Action[], Action[]],\n\t\treadonly actions: [IAction[], IAction[]],\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IUserDataProfileManagementService userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\t_profile.name,\n\t\t\t_profile.icon,\n\t\t\t_profile.useDefaultFlags,\n\t\t\tuserDataProfileService.currentProfile.id === _profile.id,\n\t\t\tuserDataProfileManagementService,\n\t\t\tuserDataProfilesService,\n\t\t\tcommandService,\n\t\t\tinstantiationService,\n\t\t);\n\t\tthis._isNewWindowProfile = this.configurationService.getValue(CONFIG_NEW_WINDOW_PROFILE) === this.profile.name;\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(CONFIG_NEW_WINDOW_PROFILE)) {\n\t\t\t\tthis.isNewWindowProfile = this.configurationService.getValue(CONFIG_NEW_WINDOW_PROFILE) === this.profile.name;\n\t\t\t}\n\t\t}\n\t\t));\n\t\tthis._register(this.userDataProfileService.onDidChangeCurrentProfile(() => this.active = this.userDataProfileService.currentProfile.id === this.profile.id));\n\t\tthis._register(this.userDataProfilesService.onDidChangeProfiles(({ updated }) => {\n\t\t\tconst profile = updated.find(p => p.id === this.profile.id);\n\t\t\tif (profile) {\n\t\t\t\tthis._profile = profile;\n\t\t\t\tthis.reset();\n\t\t\t\tthis._onDidChange.fire({ profile: true });\n\t\t\t}\n\t\t}));\n\t}\n\n\treset(): void {\n\t\tthis.name = this._profile.name;\n\t\tthis.icon = this._profile.icon;\n\t\tthis.flags = this._profile.useDefaultFlags;\n\t}\n\n\tpublic async toggleNewWindowProfile(): Promise<void> {\n\t\tif (this._isNewWindowProfile) {\n\t\t\tawait this.configurationService.updateValue(CONFIG_NEW_WINDOW_PROFILE, null);\n\t\t} else {\n\t\t\tawait this.configurationService.updateValue(CONFIG_NEW_WINDOW_PROFILE, this.profile.name);\n\t\t}\n\t}\n\n\tprivate _isNewWindowProfile: boolean = false;\n\tget isNewWindowProfile(): boolean { return this._isNewWindowProfile; }\n\tset isNewWindowProfile(isNewWindowProfile: boolean) {\n\t\tif (this._isNewWindowProfile !== isNewWindowProfile) {\n\t\t\tthis._isNewWindowProfile = isNewWindowProfile;\n\t\t\tthis._onDidChange.fire({ newWindowProfile: true });\n\t\t}\n\t}\n\n\tpublic async toggleCurrentWindowProfile(): Promise<void> {\n\t\tif (this.userDataProfileService.currentProfile.id === this.profile.id) {\n\t\t\tawait this.userDataProfileManagementService.switchProfile(this.userDataProfilesService.defaultProfile);\n\t\t} else {\n\t\t\tawait this.userDataProfileManagementService.switchProfile(this.profile);\n\t\t}\n\t}\n\n\tprotected override async doSave(): Promise<void> {\n\t\tawait this.saveProfile(this.profile);\n\t}\n\n\tprotected override async getChildrenForResourceType(resourceType: ProfileResourceType): Promise<IProfileChildElement[]> {\n\t\treturn this.getChildrenFromProfile(this.profile, resourceType);\n\t}\n\n\toverride getInitialName(): string {\n\t\treturn this.profile.name;\n\t}\n\n}\n\nconst USER_DATA_PROFILE_TEMPLATE_PREVIEW_SCHEME = 'userdataprofiletemplatepreview';\n\nexport class NewProfileElement extends AbstractUserDataProfileElement {\n\n\tprivate _copyFromTemplates = new ResourceMap<string>();\n\tget copyFromTemplates(): ResourceMap<string> { return this._copyFromTemplates; }\n\n\tprivate templatePromise: CancelablePromise<void> | undefined;\n\tprivate template: IUserDataProfileTemplate | null = null;\n\n\tprivate defaultName: string;\n\tprivate defaultIcon: string | undefined;\n\n\tconstructor(\n\t\tname: string,\n\t\tcopyFrom: URI | IUserDataProfile | undefined,\n\t\treadonly titleButtons: [Action[], Action[]],\n\t\treadonly actions: [IAction[], IAction[]],\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataProfileImportExportService private readonly userDataProfileImportExportService: IUserDataProfileImportExportService,\n\t\t@IUserDataProfileManagementService userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\tname,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t\tuserDataProfileManagementService,\n\t\t\tuserDataProfilesService,\n\t\t\tcommandService,\n\t\t\tinstantiationService,\n\t\t);\n\t\tthis.defaultName = name;\n\t\tthis._copyFrom = copyFrom;\n\t\tthis._copyFlags = this.getCopyFlagsFrom(copyFrom);\n\t\tthis.initialize();\n\t\tthis._register(this.fileService.registerProvider(USER_DATA_PROFILE_TEMPLATE_PREVIEW_SCHEME, this._register(new InMemoryFileSystemProvider())));\n\t}\n\n\tprivate _copyFrom: IUserDataProfile | URI | undefined;\n\tget copyFrom(): IUserDataProfile | URI | undefined { return this._copyFrom; }\n\tset copyFrom(copyFrom: IUserDataProfile | URI | undefined) {\n\t\tif (this._copyFrom !== copyFrom) {\n\t\t\tthis._copyFrom = copyFrom;\n\t\t\tthis._onDidChange.fire({ copyFrom: true });\n\t\t\tthis.flags = undefined;\n\t\t\tthis.copyFlags = this.getCopyFlagsFrom(copyFrom);\n\t\t\tif (copyFrom instanceof URI) {\n\t\t\t\tthis.templatePromise?.cancel();\n\t\t\t\tthis.templatePromise = undefined;\n\t\t\t}\n\t\t\tthis.initialize();\n\t\t}\n\t}\n\n\tprivate _copyFlags: ProfileResourceTypeFlags | undefined;\n\tget copyFlags(): ProfileResourceTypeFlags | undefined { return this._copyFlags; }\n\tset copyFlags(flags: ProfileResourceTypeFlags | undefined) {\n\t\tif (!equals(this._copyFlags, flags)) {\n\t\t\tthis._copyFlags = flags;\n\t\t\tthis._onDidChange.fire({ copyFlags: true });\n\t\t}\n\t}\n\n\tprivate _previewProfile: IUserDataProfile | undefined;\n\tget previewProfile(): IUserDataProfile | undefined { return this._previewProfile; }\n\tset previewProfile(profile: IUserDataProfile | undefined) {\n\t\tif (this._previewProfile !== profile) {\n\t\t\tthis._previewProfile = profile;\n\t\t\tthis._onDidChange.fire({ preview: true });\n\t\t}\n\t}\n\n\tprivate getCopyFlagsFrom(copyFrom: URI | IUserDataProfile | undefined): ProfileResourceTypeFlags | undefined {\n\t\treturn copyFrom ? {\n\t\t\tsettings: true,\n\t\t\tkeybindings: true,\n\t\t\tsnippets: true,\n\t\t\ttasks: true,\n\t\t\textensions: true\n\t\t} : undefined;\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\tthis.disabled = true;\n\t\ttry {\n\t\t\tif (this.copyFrom instanceof URI) {\n\t\t\t\tawait this.resolveTemplate(this.copyFrom);\n\t\t\t\tif (this.template) {\n\t\t\t\t\tthis.copyFromTemplates.set(this.copyFrom, this.template.name);\n\t\t\t\t\tif (this.defaultName === this.name) {\n\t\t\t\t\t\tthis.name = this.defaultName = this.template.name ?? '';\n\t\t\t\t\t}\n\t\t\t\t\tif (this.defaultIcon === this.icon) {\n\t\t\t\t\t\tthis.icon = this.defaultIcon = this.template.icon;\n\t\t\t\t\t}\n\t\t\t\t\tthis.setCopyFlag(ProfileResourceType.Settings, !!this.template.settings);\n\t\t\t\t\tthis.setCopyFlag(ProfileResourceType.Keybindings, !!this.template.keybindings);\n\t\t\t\t\tthis.setCopyFlag(ProfileResourceType.Tasks, !!this.template.tasks);\n\t\t\t\t\tthis.setCopyFlag(ProfileResourceType.Snippets, !!this.template.snippets);\n\t\t\t\t\tthis.setCopyFlag(ProfileResourceType.Extensions, !!this.template.extensions);\n\t\t\t\t\tthis._onDidChange.fire({ copyFromInfo: true });\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isUserDataProfile(this.copyFrom)) {\n\t\t\t\tif (this.defaultName === this.name) {\n\t\t\t\t\tthis.name = this.defaultName = localize('copy from', \"{0} (Copy)\", this.copyFrom.name);\n\t\t\t\t}\n\t\t\t\tif (this.defaultIcon === this.icon) {\n\t\t\t\t\tthis.icon = this.defaultIcon = this.copyFrom.icon;\n\t\t\t\t}\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Settings, true);\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Keybindings, true);\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Tasks, true);\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Snippets, true);\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Extensions, true);\n\t\t\t\tthis._onDidChange.fire({ copyFromInfo: true });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.defaultName === this.name) {\n\t\t\t\tthis.name = this.defaultName = localize('untitled', \"Untitled\");\n\t\t\t}\n\t\t\tif (this.defaultIcon === this.icon) {\n\t\t\t\tthis.icon = this.defaultIcon = undefined;\n\t\t\t}\n\t\t\tthis.setCopyFlag(ProfileResourceType.Settings, false);\n\t\t\tthis.setCopyFlag(ProfileResourceType.Keybindings, false);\n\t\t\tthis.setCopyFlag(ProfileResourceType.Tasks, false);\n\t\t\tthis.setCopyFlag(ProfileResourceType.Snippets, false);\n\t\t\tthis.setCopyFlag(ProfileResourceType.Extensions, false);\n\t\t\tthis._onDidChange.fire({ copyFromInfo: true });\n\t\t} finally {\n\t\t\tthis.disabled = false;\n\t\t}\n\t}\n\n\tasync resolveTemplate(uri: URI): Promise<IUserDataProfileTemplate | null> {\n\t\tif (!this.templatePromise) {\n\t\t\tthis.templatePromise = createCancelablePromise(async token => {\n\t\t\t\tconst template = await this.userDataProfileImportExportService.resolveProfileTemplate(uri);\n\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\tthis.template = template;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tawait this.templatePromise;\n\t\treturn this.template;\n\t}\n\n\thasResource(resourceType: ProfileResourceType): boolean {\n\t\tif (this.template) {\n\t\t\tswitch (resourceType) {\n\t\t\t\tcase ProfileResourceType.Settings:\n\t\t\t\t\treturn !!this.template.settings;\n\t\t\t\tcase ProfileResourceType.Keybindings:\n\t\t\t\t\treturn !!this.template.keybindings;\n\t\t\t\tcase ProfileResourceType.Snippets:\n\t\t\t\t\treturn !!this.template.snippets;\n\t\t\t\tcase ProfileResourceType.Tasks:\n\t\t\t\t\treturn !!this.template.tasks;\n\t\t\t\tcase ProfileResourceType.Extensions:\n\t\t\t\t\treturn !!this.template.extensions;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tgetCopyFlag(key: ProfileResourceType): boolean {\n\t\treturn this.copyFlags?.[key] ?? false;\n\t}\n\n\tsetCopyFlag(key: ProfileResourceType, value: boolean): void {\n\t\tconst flags = this.copyFlags ? { ...this.copyFlags } : {};\n\t\tflags[key] = value;\n\t\tthis.copyFlags = flags;\n\t}\n\n\tgetCopyFromName(): string | undefined {\n\t\tif (isUserDataProfile(this.copyFrom)) {\n\t\t\treturn this.copyFrom.name;\n\t\t}\n\t\tif (this.copyFrom instanceof URI) {\n\t\t\treturn this.copyFromTemplates.get(this.copyFrom);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected override async getChildrenForResourceType(resourceType: ProfileResourceType): Promise<IProfileChildElement[]> {\n\t\tif (this.getFlag(resourceType)) {\n\t\t\treturn this.getChildrenFromProfile(this.userDataProfilesService.defaultProfile, resourceType);\n\t\t}\n\t\tif (!this.getCopyFlag(resourceType)) {\n\t\t\treturn [];\n\t\t}\n\t\tif (this.copyFrom instanceof URI) {\n\t\t\tawait this.resolveTemplate(this.copyFrom);\n\t\t\tif (!this.template) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn this.getChildrenFromProfileTemplate(this.template, resourceType);\n\t\t}\n\t\tif (this.copyFrom) {\n\t\t\treturn this.getChildrenFromProfile(this.copyFrom, resourceType);\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async getChildrenFromProfileTemplate(profileTemplate: IUserDataProfileTemplate, resourceType: ProfileResourceType): Promise<IProfileResourceTypeChildElement[]> {\n\t\tconst profile = toUserDataProfile(generateUuid(), this.name, URI.file('/root').with({ scheme: USER_DATA_PROFILE_TEMPLATE_PREVIEW_SCHEME }), URI.file('/cache').with({ scheme: USER_DATA_PROFILE_TEMPLATE_PREVIEW_SCHEME }));\n\t\tswitch (resourceType) {\n\t\t\tcase ProfileResourceType.Settings:\n\t\t\t\tif (profileTemplate.settings) {\n\t\t\t\t\tawait this.instantiationService.createInstance(SettingsResource).apply(profileTemplate.settings, profile);\n\t\t\t\t\treturn this.getChildrenFromProfile(profile, resourceType);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\tcase ProfileResourceType.Keybindings:\n\t\t\t\tif (profileTemplate.keybindings) {\n\t\t\t\t\tawait this.instantiationService.createInstance(KeybindingsResource).apply(profileTemplate.keybindings, profile);\n\t\t\t\t\treturn this.getChildrenFromProfile(profile, resourceType);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\tcase ProfileResourceType.Snippets:\n\t\t\t\tif (profileTemplate.snippets) {\n\t\t\t\t\tawait this.instantiationService.createInstance(SnippetsResource).apply(profileTemplate.snippets, profile);\n\t\t\t\t\treturn this.getChildrenFromProfile(profile, resourceType);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\tcase ProfileResourceType.Tasks:\n\t\t\t\tif (profileTemplate.tasks) {\n\t\t\t\t\tawait this.instantiationService.createInstance(TasksResource).apply(profileTemplate.tasks, profile);\n\t\t\t\t\treturn this.getChildrenFromProfile(profile, resourceType);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\tcase ProfileResourceType.Extensions:\n\t\t\t\tif (profileTemplate.extensions) {\n\t\t\t\t\tconst children = await this.instantiationService.createInstance(ExtensionsResourceImportTreeItem, profileTemplate.extensions).getChildren();\n\t\t\t\t\treturn children.map(child => this.toUserDataProfileResourceChildElement(child));\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride shouldValidateName(): boolean {\n\t\treturn !this.copyFrom;\n\t}\n\n\toverride getInitialName(): string {\n\t\treturn this.previewProfile?.name ?? '';\n\t}\n\n\tprotected override async doSave(): Promise<void> {\n\t\tif (this.previewProfile) {\n\t\t\tconst profile = await this.saveProfile(this.previewProfile);\n\t\t\tif (profile) {\n\t\t\t\tthis.previewProfile = profile;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class UserDataProfilesEditorModel extends EditorModel {\n\n\tprivate static INSTANCE: UserDataProfilesEditorModel | undefined;\n\tstatic getInstance(instantiationService: IInstantiationService): UserDataProfilesEditorModel {\n\t\tif (!UserDataProfilesEditorModel.INSTANCE) {\n\t\t\tUserDataProfilesEditorModel.INSTANCE = instantiationService.createInstance(UserDataProfilesEditorModel);\n\t\t}\n\t\treturn UserDataProfilesEditorModel.INSTANCE;\n\t}\n\n\tprivate _profiles: [AbstractUserDataProfileElement, DisposableStore][] = [];\n\tget profiles(): AbstractUserDataProfileElement[] {\n\t\treturn this._profiles\n\t\t\t.map(([profile]) => profile)\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a instanceof NewProfileElement) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (b instanceof NewProfileElement) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (a instanceof UserDataProfileElement && a.profile.isDefault) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (b instanceof UserDataProfileElement && b.profile.isDefault) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn a.name.localeCompare(b.name);\n\t\t\t});\n\t}\n\n\tprivate newProfileElement: NewProfileElement | undefined;\n\n\tprivate _onDidChange = this._register(new Emitter<AbstractUserDataProfileElement | undefined>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate templates: Promise<readonly IProfileTemplateInfo[]> | undefined;\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileManagementService private readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfileImportExportService private readonly userDataProfileImportExportService: IUserDataProfileImportExportService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tfor (const profile of userDataProfilesService.profiles) {\n\t\t\tif (!profile.isTransient) {\n\t\t\t\tthis._profiles.push(this.createProfileElement(profile));\n\t\t\t}\n\t\t}\n\t\tthis._register(toDisposable(() => this._profiles.splice(0, this._profiles.length).map(([, disposables]) => disposables.dispose())));\n\t\tthis._register(userDataProfilesService.onDidChangeProfiles(e => this.onDidChangeProfiles(e)));\n\t}\n\n\tprivate onDidChangeProfiles(e: DidChangeProfilesEvent): void {\n\t\tlet changed = false;\n\t\tfor (const profile of e.added) {\n\t\t\tif (!profile.isTransient && profile.name !== this.newProfileElement?.name) {\n\t\t\t\tchanged = true;\n\t\t\t\tthis._profiles.push(this.createProfileElement(profile));\n\t\t\t}\n\t\t}\n\t\tfor (const profile of e.removed) {\n\t\t\tif (profile.id === this.newProfileElement?.previewProfile?.id) {\n\t\t\t\tthis.newProfileElement.previewProfile = undefined;\n\t\t\t}\n\t\t\tconst index = this._profiles.findIndex(([p]) => p instanceof UserDataProfileElement && p.profile.id === profile.id);\n\t\t\tif (index !== -1) {\n\t\t\t\tchanged = true;\n\t\t\t\tthis._profiles.splice(index, 1).map(([, disposables]) => disposables.dispose());\n\t\t\t}\n\t\t}\n\t\tif (changed) {\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t}\n\t}\n\n\tgetTemplates(): Promise<readonly IProfileTemplateInfo[]> {\n\t\tif (!this.templates) {\n\t\t\tthis.templates = this.userDataProfileManagementService.getBuiltinProfileTemplates();\n\t\t}\n\t\treturn this.templates;\n\t}\n\n\tprivate createProfileElement(profile: IUserDataProfile): [UserDataProfileElement, DisposableStore] {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst activateAction = disposables.add(new Action(\n\t\t\t'userDataProfile.activate',\n\t\t\tlocalize('active', \"Use this Profile for Current Window\"),\n\t\t\tThemeIcon.asClassName(Codicon.check),\n\t\t\ttrue,\n\t\t\t() => this.userDataProfileManagementService.switchProfile(profileElement.profile)\n\t\t));\n\n\t\tconst copyFromProfileAction = disposables.add(new Action(\n\t\t\t'userDataProfile.copyFromProfile',\n\t\t\tlocalize('copyFromProfile', \"Duplicate...\"),\n\t\t\tThemeIcon.asClassName(Codicon.copy),\n\t\t\ttrue, () => this.createNewProfile(profileElement.profile)\n\t\t));\n\n\t\tconst exportAction = disposables.add(new Action(\n\t\t\t'userDataProfile.export',\n\t\t\tlocalize('export', \"Export...\"),\n\t\t\tThemeIcon.asClassName(Codicon.export),\n\t\t\ttrue,\n\t\t\t() => this.userDataProfileImportExportService.exportProfile(profile)\n\t\t));\n\n\t\tconst deleteAction = disposables.add(new Action(\n\t\t\t'userDataProfile.delete',\n\t\t\tlocalize('delete', \"Delete\"),\n\t\t\tThemeIcon.asClassName(Codicon.trash),\n\t\t\ttrue,\n\t\t\t() => this.removeProfile(profileElement.profile)\n\t\t));\n\n\t\tconst newWindowAction = disposables.add(new Action(\n\t\t\t'userDataProfile.newWindow',\n\t\t\tlocalize('open new window', \"Open New Window with this Profile\"),\n\t\t\tThemeIcon.asClassName(Codicon.emptyWindow),\n\t\t\ttrue,\n\t\t\t() => this.openWindow(profileElement.profile)\n\t\t));\n\n\t\tconst primaryActions: IAction[] = [];\n\t\tprimaryActions.push(activateAction);\n\t\tprimaryActions.push(newWindowAction);\n\t\tconst secondaryActions: IAction[] = [];\n\t\tsecondaryActions.push(copyFromProfileAction);\n\t\tsecondaryActions.push(exportAction);\n\t\tif (!profile.isDefault) {\n\t\t\tsecondaryActions.push(new Separator());\n\t\t\tsecondaryActions.push(deleteAction);\n\t\t}\n\n\t\tconst profileElement = disposables.add(this.instantiationService.createInstance(UserDataProfileElement,\n\t\t\tprofile,\n\t\t\t[[], []],\n\t\t\t[primaryActions, secondaryActions]\n\t\t));\n\n\t\tactivateAction.enabled = this.userDataProfileService.currentProfile.id !== profileElement.profile.id;\n\t\tdisposables.add(this.userDataProfileService.onDidChangeCurrentProfile(() =>\n\t\t\tactivateAction.enabled = this.userDataProfileService.currentProfile.id !== profileElement.profile.id));\n\n\t\treturn [profileElement, disposables];\n\t}\n\n\tasync createNewProfile(copyFrom?: URI | IUserDataProfile): Promise<AbstractUserDataProfileElement | undefined> {\n\t\tif (this.newProfileElement) {\n\t\t\tconst result = await this.dialogService.confirm({\n\t\t\t\ttype: 'info',\n\t\t\t\tmessage: localize('new profile exists', \"A new profile is already being created. Do you want to discard it and create a new one?\"),\n\t\t\t\tprimaryButton: localize('discard', \"Discard & Create\"),\n\t\t\t\tcancelButton: localize('cancel', \"Cancel\")\n\t\t\t});\n\t\t\tif (!result.confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.revert();\n\t\t}\n\n\t\tif (copyFrom instanceof URI) {\n\t\t\ttry {\n\t\t\t\tawait this.userDataProfileImportExportService.resolveProfileTemplate(copyFrom);\n\t\t\t} catch (error) {\n\t\t\t\tthis.dialogService.error(getErrorMessage(error));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.newProfileElement) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\tdisposables.add(toDisposable(() => cancellationTokenSource.dispose(true)));\n\t\t\tconst primaryActions: Action[] = [];\n\t\t\tconst secondaryActions: Action[] = [];\n\t\t\tconst createAction = disposables.add(new Action(\n\t\t\t\t'userDataProfile.create',\n\t\t\t\tlocalize('create', \"Create\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => this.saveNewProfile(false, cancellationTokenSource.token)\n\t\t\t));\n\t\t\tprimaryActions.push(createAction);\n\t\t\tif (isWeb && copyFrom instanceof URI && isProfileURL(copyFrom)) {\n\t\t\t\tprimaryActions.push(new Action(\n\t\t\t\t\t'userDataProfile.createInDesktop',\n\t\t\t\t\tlocalize('import in desktop', \"Create in {0}\", this.productService.nameLong),\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => this.openerService.open(copyFrom, { openExternal: true })\n\t\t\t\t));\n\t\t\t}\n\t\t\tconst cancelAction = disposables.add(new Action(\n\t\t\t\t'userDataProfile.cancel',\n\t\t\t\tlocalize('cancel', \"Cancel\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.trash),\n\t\t\t\ttrue,\n\t\t\t\t() => this.discardNewProfile()\n\t\t\t));\n\t\t\tsecondaryActions.push(cancelAction);\n\t\t\tconst previewProfileAction = disposables.add(new Action(\n\t\t\t\t'userDataProfile.preview',\n\t\t\t\tlocalize('preview', \"Preview\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.openPreview),\n\t\t\t\ttrue,\n\t\t\t\t() => this.previewNewProfile(cancellationTokenSource.token)\n\t\t\t));\n\t\t\tif (!isWeb) {\n\t\t\t\tsecondaryActions.push(previewProfileAction);\n\t\t\t}\n\t\t\tconst exportAction = disposables.add(new Action(\n\t\t\t\t'userDataProfile.export',\n\t\t\t\tlocalize('export', \"Export...\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.export),\n\t\t\t\tisUserDataProfile(copyFrom),\n\t\t\t\t() => this.exportNewProfile(cancellationTokenSource.token)\n\t\t\t));\n\t\t\tthis.newProfileElement = disposables.add(this.instantiationService.createInstance(NewProfileElement,\n\t\t\t\tcopyFrom ? '' : localize('untitled', \"Untitled\"),\n\t\t\t\tcopyFrom,\n\t\t\t\t[primaryActions, secondaryActions],\n\t\t\t\t[[cancelAction], [exportAction]],\n\t\t\t));\n\t\t\tconst updateCreateActionLabel = () => {\n\t\t\t\tif (createAction.enabled) {\n\t\t\t\t\tif (this.newProfileElement?.copyFrom && this.userDataProfilesService.profiles.some(p => p.name === this.newProfileElement?.name)) {\n\t\t\t\t\t\tcreateAction.label = localize('replace', \"Replace\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateAction.label = localize('create', \"Create\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tupdateCreateActionLabel();\n\t\t\tdisposables.add(this.newProfileElement.onDidChange(e => {\n\t\t\t\tif (e.preview) {\n\t\t\t\t\tpreviewProfileAction.checked = !!this.newProfileElement?.previewProfile;\n\t\t\t\t}\n\t\t\t\tif (e.disabled || e.message) {\n\t\t\t\t\tpreviewProfileAction.enabled = createAction.enabled = !this.newProfileElement?.disabled && !this.newProfileElement?.message;\n\t\t\t\t}\n\t\t\t\tif (e.name || e.copyFrom) {\n\t\t\t\t\tupdateCreateActionLabel();\n\t\t\t\t\texportAction.enabled = isUserDataProfile(this.newProfileElement?.copyFrom);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tdisposables.add(this.userDataProfilesService.onDidChangeProfiles((e) => {\n\t\t\t\tupdateCreateActionLabel();\n\t\t\t\tthis.newProfileElement?.validate();\n\t\t\t}));\n\t\t\tthis._profiles.push([this.newProfileElement, disposables]);\n\t\t\tthis._onDidChange.fire(this.newProfileElement);\n\t\t}\n\t\treturn this.newProfileElement;\n\t}\n\n\trevert(): void {\n\t\tthis.removeNewProfile();\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\tprivate removeNewProfile(): void {\n\t\tif (this.newProfileElement) {\n\t\t\tconst index = this._profiles.findIndex(([p]) => p === this.newProfileElement);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis._profiles.splice(index, 1).map(([, disposables]) => disposables.dispose());\n\t\t\t}\n\t\t\tthis.newProfileElement = undefined;\n\t\t}\n\t}\n\n\tprivate async previewNewProfile(token: CancellationToken): Promise<void> {\n\t\tif (!this.newProfileElement) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.newProfileElement.previewProfile) {\n\t\t\treturn;\n\t\t}\n\t\tconst profile = await this.saveNewProfile(true, token);\n\t\tif (profile) {\n\t\t\tthis.newProfileElement.previewProfile = profile;\n\t\t\tawait this.openWindow(profile);\n\t\t}\n\t}\n\n\tprivate async exportNewProfile(token: CancellationToken): Promise<void> {\n\t\tif (!this.newProfileElement) {\n\t\t\treturn;\n\t\t}\n\t\tif (!isUserDataProfile(this.newProfileElement.copyFrom)) {\n\t\t\treturn;\n\t\t}\n\t\tconst profile = toUserDataProfile(\n\t\t\tgenerateUuid(),\n\t\t\tthis.newProfileElement.name,\n\t\t\tthis.newProfileElement.copyFrom.location,\n\t\t\tthis.newProfileElement.copyFrom.cacheHome,\n\t\t\t{\n\t\t\t\ticon: this.newProfileElement.icon,\n\t\t\t\tuseDefaultFlags: this.newProfileElement.flags,\n\t\t\t},\n\t\t\tthis.userDataProfilesService.defaultProfile\n\t\t);\n\t\tawait this.userDataProfileImportExportService.exportProfile(profile, this.newProfileElement.copyFlags);\n\t}\n\n\tasync saveNewProfile(transient?: boolean, token?: CancellationToken): Promise<IUserDataProfile | undefined> {\n\t\tif (!this.newProfileElement) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.newProfileElement.validate();\n\t\tif (this.newProfileElement.message) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.newProfileElement.disabled = true;\n\t\tlet profile: IUserDataProfile | undefined;\n\n\t\ttry {\n\t\t\tif (this.newProfileElement.previewProfile) {\n\t\t\t\tif (!transient) {\n\t\t\t\t\tprofile = await this.userDataProfileManagementService.updateProfile(this.newProfileElement.previewProfile, { transient: false });\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst { flags, icon, name, copyFrom } = this.newProfileElement;\n\t\t\t\tconst useDefaultFlags: UseDefaultProfileFlags | undefined = flags\n\t\t\t\t\t? flags.settings && flags.keybindings && flags.tasks && flags.globalState && flags.extensions ? undefined : flags\n\t\t\t\t\t: undefined;\n\n\t\t\t\ttype CreateProfileInfoClassification = {\n\t\t\t\t\towner: 'sandy081';\n\t\t\t\t\tcomment: 'Report when profile is about to be created';\n\t\t\t\t\tsource: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Type of profile source' };\n\t\t\t\t};\n\t\t\t\ttype CreateProfileInfoEvent = {\n\t\t\t\t\tsource: string | undefined;\n\t\t\t\t};\n\t\t\t\tconst createProfileTelemetryData: CreateProfileInfoEvent = { source: copyFrom instanceof URI ? 'template' : isUserDataProfile(copyFrom) ? 'profile' : copyFrom ? 'external' : undefined };\n\n\t\t\t\tif (copyFrom instanceof URI) {\n\t\t\t\t\tconst template = await this.newProfileElement.resolveTemplate(copyFrom);\n\t\t\t\t\tif (template) {\n\t\t\t\t\t\tthis.telemetryService.publicLog2<CreateProfileInfoEvent, CreateProfileInfoClassification>('userDataProfile.createFromTemplate', createProfileTelemetryData);\n\t\t\t\t\t\tprofile = await this.userDataProfileImportExportService.createProfileFromTemplate(\n\t\t\t\t\t\t\ttemplate,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tuseDefaultFlags,\n\t\t\t\t\t\t\t\ticon,\n\t\t\t\t\t\t\t\tresourceTypeFlags: this.newProfileElement.copyFlags,\n\t\t\t\t\t\t\t\ttransient\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttoken ?? CancellationToken.None\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (isUserDataProfile(copyFrom)) {\n\t\t\t\t\tthis.telemetryService.publicLog2<CreateProfileInfoEvent, CreateProfileInfoClassification>('userDataProfile.createFromProfile', createProfileTelemetryData);\n\t\t\t\t\tprofile = await this.userDataProfileImportExportService.createFromProfile(\n\t\t\t\t\t\tcopyFrom,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tuseDefaultFlags,\n\t\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\t\tresourceTypeFlags: this.newProfileElement.copyFlags,\n\t\t\t\t\t\t\ttransient\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttoken ?? CancellationToken.None\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.telemetryService.publicLog2<CreateProfileInfoEvent, CreateProfileInfoClassification>('userDataProfile.createEmptyProfile', createProfileTelemetryData);\n\t\t\t\t\tprofile = await this.userDataProfileManagementService.createProfile(name, { useDefaultFlags, icon, transient });\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tif (this.newProfileElement) {\n\t\t\t\tthis.newProfileElement.disabled = false;\n\t\t\t}\n\t\t}\n\n\t\tif (token?.isCancellationRequested) {\n\t\t\tif (profile) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.userDataProfileManagementService.removeProfile(profile);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (profile && !profile.isTransient && this.newProfileElement) {\n\t\t\tthis.removeNewProfile();\n\t\t\tconst existing = this._profiles.find(([p]) => p.name === profile.name);\n\t\t\tif (existing) {\n\t\t\t\tthis._onDidChange.fire(existing[0]);\n\t\t\t} else {\n\t\t\t\tthis.onDidChangeProfiles({ added: [profile], removed: [], updated: [], all: this.userDataProfilesService.profiles });\n\t\t\t}\n\t\t}\n\n\t\treturn profile;\n\t}\n\n\tprivate async discardNewProfile(): Promise<void> {\n\t\tif (!this.newProfileElement) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.newProfileElement.previewProfile) {\n\t\t\tawait this.userDataProfileManagementService.removeProfile(this.newProfileElement.previewProfile);\n\t\t}\n\t\tthis.removeNewProfile();\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\tprivate async removeProfile(profile: IUserDataProfile): Promise<void> {\n\t\tconst result = await this.dialogService.confirm({\n\t\t\ttype: 'info',\n\t\t\tmessage: localize('deleteProfile', \"Are you sure you want to delete the profile '{0}'?\", profile.name),\n\t\t\tprimaryButton: localize('delete', \"Delete\"),\n\t\t\tcancelButton: localize('cancel', \"Cancel\")\n\t\t});\n\t\tif (result.confirmed) {\n\t\t\tawait this.userDataProfileManagementService.removeProfile(profile);\n\t\t}\n\t}\n\n\tprivate async openWindow(profile: IUserDataProfile): Promise<void> {\n\t\tawait this.hostService.openWindow({ forceProfile: profile.name });\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
