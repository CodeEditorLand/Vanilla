{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataProfile/browser/userDataProfilesEditorModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tAction,\n\ttype IAction,\n\tSeparator,\n} from \"../../../../base/common/actions.js\";\nimport {\n\ttype CancelablePromise,\n\tRunOnceScheduler,\n\tcreateCancelablePromise,\n} from \"../../../../base/common/async.js\";\nimport {\n\tCancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { getErrorMessage } from \"../../../../base/common/errors.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { equals } from \"../../../../base/common/objects.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { InMemoryFileSystemProvider } from \"../../../../platform/files/common/inMemoryFilesystemProvider.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype DidChangeProfilesEvent,\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n\tProfileResourceType,\n\ttype ProfileResourceTypeFlags,\n\ttype UseDefaultProfileFlags,\n\tisUserDataProfile,\n\ttoUserDataProfile,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { API_OPEN_EDITOR_COMMAND_ID } from \"../../../browser/parts/editor/editorCommands.js\";\nimport { CONFIG_NEW_WINDOW_PROFILE } from \"../../../common/configuration.js\";\nimport { EditorModel } from \"../../../common/editor/editorModel.js\";\nimport type { ITreeItemCheckboxState } from \"../../../common/views.js\";\nimport { SIDE_GROUP } from \"../../../services/editor/common/editorService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport {\n\tExtensionsResourceExportTreeItem,\n\tExtensionsResourceImportTreeItem,\n} from \"../../../services/userDataProfile/browser/extensionsResource.js\";\nimport {\n\tKeybindingsResource,\n\tKeybindingsResourceTreeItem,\n} from \"../../../services/userDataProfile/browser/keybindingsResource.js\";\nimport {\n\tSettingsResource,\n\tSettingsResourceTreeItem,\n} from \"../../../services/userDataProfile/browser/settingsResource.js\";\nimport {\n\tSnippetsResource,\n\tSnippetsResourceTreeItem,\n} from \"../../../services/userDataProfile/browser/snippetsResource.js\";\nimport {\n\tTasksResource,\n\tTasksResourceTreeItem,\n} from \"../../../services/userDataProfile/browser/tasksResource.js\";\nimport {\n\ttype IProfileResourceChildTreeItem,\n\ttype IProfileTemplateInfo,\n\tIUserDataProfileImportExportService,\n\tIUserDataProfileManagementService,\n\tIUserDataProfileService,\n\ttype IUserDataProfileTemplate,\n\tisProfileURL,\n} from \"../../../services/userDataProfile/common/userDataProfile.js\";\n\nexport type ChangeEvent = {\n\treadonly name?: boolean;\n\treadonly icon?: boolean;\n\treadonly flags?: boolean;\n\treadonly active?: boolean;\n\treadonly message?: boolean;\n\treadonly copyFrom?: boolean;\n\treadonly copyFromInfo?: boolean;\n\treadonly copyFlags?: boolean;\n\treadonly preview?: boolean;\n\treadonly profile?: boolean;\n\treadonly disabled?: boolean;\n\treadonly newWindowProfile?: boolean;\n};\n\nexport interface IProfileChildElement {\n\treadonly handle: string;\n\treadonly action?: IAction;\n\treadonly checkbox?: ITreeItemCheckboxState;\n}\n\nexport interface IProfileResourceTypeElement extends IProfileChildElement {\n\treadonly resourceType: ProfileResourceType;\n}\n\nexport interface IProfileResourceTypeChildElement extends IProfileChildElement {\n\treadonly label: string;\n\treadonly resource?: URI;\n\treadonly icon?: ThemeIcon;\n}\n\nexport function isProfileResourceTypeElement(\n\telement: IProfileChildElement,\n): element is IProfileResourceTypeElement {\n\treturn (element as IProfileResourceTypeElement).resourceType !== undefined;\n}\n\nexport function isProfileResourceChildElement(\n\telement: IProfileChildElement,\n): element is IProfileResourceTypeChildElement {\n\treturn (element as IProfileResourceTypeChildElement).label !== undefined;\n}\n\nexport abstract class AbstractUserDataProfileElement extends Disposable {\n\tprotected readonly _onDidChange = this._register(\n\t\tnew Emitter<ChangeEvent>(),\n\t);\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate readonly saveScheduler = this._register(\n\t\tnew RunOnceScheduler(() => this.doSave(), 500),\n\t);\n\n\tconstructor(\n\t\tname: string,\n\t\ticon: string | undefined,\n\t\tflags: UseDefaultProfileFlags | undefined,\n\t\tisActive: boolean,\n\t\t@IUserDataProfileManagementService\n\t\tprotected readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfilesService\n\t\tprotected readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@ICommandService protected readonly commandService: ICommandService,\n\t\t@IInstantiationService\n\t\tprotected readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._name = name;\n\t\tthis._icon = icon;\n\t\tthis._flags = flags;\n\t\tthis._active = isActive;\n\t\tthis._register(\n\t\t\tthis.onDidChange((e) => {\n\t\t\t\tif (!e.message) {\n\t\t\t\t\tthis.validate();\n\t\t\t\t}\n\t\t\t\tthis.save();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _name = \"\";\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\tset name(name: string) {\n\t\tname = name.trim();\n\t\tif (this._name !== name) {\n\t\t\tthis._name = name;\n\t\t\tthis._onDidChange.fire({ name: true });\n\t\t}\n\t}\n\n\tprivate _icon: string | undefined;\n\tget icon(): string | undefined {\n\t\treturn this._icon;\n\t}\n\tset icon(icon: string | undefined) {\n\t\tif (this._icon !== icon) {\n\t\t\tthis._icon = icon;\n\t\t\tthis._onDidChange.fire({ icon: true });\n\t\t}\n\t}\n\n\tprivate _flags: UseDefaultProfileFlags | undefined;\n\tget flags(): UseDefaultProfileFlags | undefined {\n\t\treturn this._flags;\n\t}\n\tset flags(flags: UseDefaultProfileFlags | undefined) {\n\t\tif (!equals(this._flags, flags)) {\n\t\t\tthis._flags = flags;\n\t\t\tthis._onDidChange.fire({ flags: true });\n\t\t}\n\t}\n\n\tprivate _active = false;\n\tget active(): boolean {\n\t\treturn this._active;\n\t}\n\tset active(active: boolean) {\n\t\tif (this._active !== active) {\n\t\t\tthis._active = active;\n\t\t\tthis._onDidChange.fire({ active: true });\n\t\t}\n\t}\n\n\tprivate _message: string | undefined;\n\tget message(): string | undefined {\n\t\treturn this._message;\n\t}\n\tset message(message: string | undefined) {\n\t\tif (this._message !== message) {\n\t\t\tthis._message = message;\n\t\t\tthis._onDidChange.fire({ message: true });\n\t\t}\n\t}\n\n\tprivate _disabled = false;\n\tget disabled(): boolean {\n\t\treturn this._disabled;\n\t}\n\tset disabled(saving: boolean) {\n\t\tif (this._disabled !== saving) {\n\t\t\tthis._disabled = saving;\n\t\t\tthis._onDidChange.fire({ disabled: true });\n\t\t}\n\t}\n\n\tgetFlag(key: ProfileResourceType): boolean {\n\t\treturn this.flags?.[key] ?? false;\n\t}\n\n\tsetFlag(key: ProfileResourceType, value: boolean): void {\n\t\tconst flags = this.flags ? { ...this.flags } : {};\n\t\tif (value) {\n\t\t\tflags[key] = true;\n\t\t} else {\n\t\t\tdelete flags[key];\n\t\t}\n\t\tthis.flags = flags;\n\t}\n\n\tvalidate(): void {\n\t\tif (!this.name) {\n\t\t\tthis.message = localize(\n\t\t\t\t\"name required\",\n\t\t\t\t\"Profile name is required and must be a non-empty value.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.shouldValidateName() &&\n\t\t\tthis.name !== this.getInitialName() &&\n\t\t\tthis.userDataProfilesService.profiles.some(\n\t\t\t\t(p) => p.name === this.name,\n\t\t\t)\n\t\t) {\n\t\t\tthis.message = localize(\n\t\t\t\t\"profileExists\",\n\t\t\t\t\"Profile with name {0} already exists.\",\n\t\t\t\tthis.name,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.flags &&\n\t\t\tthis.flags.settings &&\n\t\t\tthis.flags.keybindings &&\n\t\t\tthis.flags.tasks &&\n\t\t\tthis.flags.snippets &&\n\t\t\tthis.flags.extensions\n\t\t) {\n\t\t\tthis.message = localize(\n\t\t\t\t\"invalid configurations\",\n\t\t\t\t\"The profile should contain at least one configuration.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tthis.message = undefined;\n\t}\n\n\tasync getChildren(\n\t\tresourceType?: ProfileResourceType,\n\t): Promise<IProfileChildElement[]> {\n\t\tif (resourceType === undefined) {\n\t\t\tconst resourceTypes = [\n\t\t\t\tProfileResourceType.Settings,\n\t\t\t\tProfileResourceType.Keybindings,\n\t\t\t\tProfileResourceType.Tasks,\n\t\t\t\tProfileResourceType.Snippets,\n\t\t\t\tProfileResourceType.Extensions,\n\t\t\t];\n\t\t\treturn Promise.all(\n\t\t\t\tresourceTypes.map<Promise<IProfileResourceTypeElement>>(\n\t\t\t\t\tasync (r) => {\n\t\t\t\t\t\tconst children =\n\t\t\t\t\t\t\tr === ProfileResourceType.Settings ||\n\t\t\t\t\t\t\tr === ProfileResourceType.Keybindings ||\n\t\t\t\t\t\t\tr === ProfileResourceType.Tasks\n\t\t\t\t\t\t\t\t? await this.getChildrenForResourceType(r)\n\t\t\t\t\t\t\t\t: [];\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\thandle: r,\n\t\t\t\t\t\t\tcheckbox: undefined,\n\t\t\t\t\t\t\tresourceType: r,\n\t\t\t\t\t\t\taction: children.length\n\t\t\t\t\t\t\t\t? new Action(\n\t\t\t\t\t\t\t\t\t\t\"_open\",\n\t\t\t\t\t\t\t\t\t\tlocalize(\"open\", \"Open to the Side\"),\n\t\t\t\t\t\t\t\t\t\tThemeIcon.asClassName(Codicon.goToFile),\n\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t() => children[0]?.action?.run(),\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn this.getChildrenForResourceType(resourceType);\n\t}\n\n\tprotected async getChildrenForResourceType(\n\t\tresourceType: ProfileResourceType,\n\t): Promise<IProfileChildElement[]> {\n\t\treturn [];\n\t}\n\n\tprotected async getChildrenFromProfile(\n\t\tprofile: IUserDataProfile,\n\t\tresourceType: ProfileResourceType,\n\t): Promise<IProfileResourceTypeChildElement[]> {\n\t\tprofile = this.getFlag(resourceType)\n\t\t\t? this.userDataProfilesService.defaultProfile\n\t\t\t: profile;\n\t\tlet children: IProfileResourceChildTreeItem[] = [];\n\t\tswitch (resourceType) {\n\t\t\tcase ProfileResourceType.Settings:\n\t\t\t\tchildren = await this.instantiationService\n\t\t\t\t\t.createInstance(SettingsResourceTreeItem, profile)\n\t\t\t\t\t.getChildren();\n\t\t\t\tbreak;\n\t\t\tcase ProfileResourceType.Keybindings:\n\t\t\t\tchildren = await this.instantiationService\n\t\t\t\t\t.createInstance(KeybindingsResourceTreeItem, profile)\n\t\t\t\t\t.getChildren();\n\t\t\t\tbreak;\n\t\t\tcase ProfileResourceType.Snippets:\n\t\t\t\tchildren =\n\t\t\t\t\t(await this.instantiationService\n\t\t\t\t\t\t.createInstance(SnippetsResourceTreeItem, profile)\n\t\t\t\t\t\t.getChildren()) ?? [];\n\t\t\t\tbreak;\n\t\t\tcase ProfileResourceType.Tasks:\n\t\t\t\tchildren = await this.instantiationService\n\t\t\t\t\t.createInstance(TasksResourceTreeItem, profile)\n\t\t\t\t\t.getChildren();\n\t\t\t\tbreak;\n\t\t\tcase ProfileResourceType.Extensions:\n\t\t\t\tchildren = await this.instantiationService\n\t\t\t\t\t.createInstance(ExtensionsResourceExportTreeItem, profile)\n\t\t\t\t\t.getChildren();\n\t\t\t\tbreak;\n\t\t}\n\t\treturn children.map<IProfileResourceTypeChildElement>((child) =>\n\t\t\tthis.toUserDataProfileResourceChildElement(child),\n\t\t);\n\t}\n\n\tprotected toUserDataProfileResourceChildElement(\n\t\tchild: IProfileResourceChildTreeItem,\n\t): IProfileResourceTypeChildElement {\n\t\treturn {\n\t\t\thandle: child.handle,\n\t\t\tcheckbox: child.checkbox,\n\t\t\tlabel: child.label?.label ?? \"\",\n\t\t\tresource: URI.revive(child.resourceUri),\n\t\t\ticon: child.themeIcon,\n\t\t\taction: new Action(\n\t\t\t\t\"_openChild\",\n\t\t\t\tlocalize(\"open\", \"Open to the Side\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.goToFile),\n\t\t\t\ttrue,\n\t\t\t\tasync () => {\n\t\t\t\t\tif (child.parent.type === ProfileResourceType.Extensions) {\n\t\t\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\t\t\t\"extension.open\",\n\t\t\t\t\t\t\tchild.handle,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (child.resourceUri) {\n\t\t\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\t\t\tAPI_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\t\t\tchild.resourceUri,\n\t\t\t\t\t\t\t[SIDE_GROUP],\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t};\n\t}\n\n\tgetInitialName(): string {\n\t\treturn \"\";\n\t}\n\n\tshouldValidateName(): boolean {\n\t\treturn true;\n\t}\n\n\tsave(): void {\n\t\tthis.saveScheduler.schedule();\n\t}\n\n\tprivate hasUnsavedChanges(profile: IUserDataProfile): boolean {\n\t\tif (this.name !== profile.name) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.icon !== profile.icon) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!equals(this.flags ?? {}, profile.useDefaultFlags ?? {})) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected async saveProfile(\n\t\tprofile: IUserDataProfile,\n\t): Promise<IUserDataProfile | undefined> {\n\t\tif (!this.hasUnsavedChanges(profile)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.validate();\n\t\tif (this.message) {\n\t\t\treturn;\n\t\t}\n\t\tconst useDefaultFlags: UseDefaultProfileFlags | undefined = this.flags\n\t\t\t? this.flags.settings &&\n\t\t\t\tthis.flags.keybindings &&\n\t\t\t\tthis.flags.tasks &&\n\t\t\t\tthis.flags.globalState &&\n\t\t\t\tthis.flags.extensions\n\t\t\t\t? undefined\n\t\t\t\t: this.flags\n\t\t\t: undefined;\n\n\t\treturn await this.userDataProfileManagementService.updateProfile(\n\t\t\tprofile,\n\t\t\t{\n\t\t\t\tname: this.name,\n\t\t\t\ticon: this.icon,\n\t\t\t\tuseDefaultFlags:\n\t\t\t\t\tprofile.useDefaultFlags && !useDefaultFlags\n\t\t\t\t\t\t? {}\n\t\t\t\t\t\t: useDefaultFlags,\n\t\t\t},\n\t\t);\n\t}\n\n\tabstract readonly titleButtons: [Action[], Action[]];\n\tabstract readonly actions: [IAction[], IAction[]];\n\n\tprotected abstract doSave(): Promise<void>;\n}\n\nexport class UserDataProfileElement extends AbstractUserDataProfileElement {\n\tget profile(): IUserDataProfile {\n\t\treturn this._profile;\n\t}\n\n\tconstructor(\n\t\tprivate _profile: IUserDataProfile,\n\t\treadonly titleButtons: [Action[], Action[]],\n\t\treadonly actions: [IAction[], IAction[]],\n\t\t@IUserDataProfileService\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IUserDataProfileManagementService\n\t\tuserDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfilesService\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\t_profile.name,\n\t\t\t_profile.icon,\n\t\t\t_profile.useDefaultFlags,\n\t\t\tuserDataProfileService.currentProfile.id === _profile.id,\n\t\t\tuserDataProfileManagementService,\n\t\t\tuserDataProfilesService,\n\t\t\tcommandService,\n\t\t\tinstantiationService,\n\t\t);\n\t\tthis._isNewWindowProfile =\n\t\t\tthis.configurationService.getValue(CONFIG_NEW_WINDOW_PROFILE) ===\n\t\t\tthis.profile.name;\n\t\tthis._register(\n\t\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(CONFIG_NEW_WINDOW_PROFILE)) {\n\t\t\t\t\tthis.isNewWindowProfile =\n\t\t\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\t\t\tCONFIG_NEW_WINDOW_PROFILE,\n\t\t\t\t\t\t) === this.profile.name;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.userDataProfileService.onDidChangeCurrentProfile(\n\t\t\t\t() =>\n\t\t\t\t\t(this.active =\n\t\t\t\t\t\tthis.userDataProfileService.currentProfile.id ===\n\t\t\t\t\t\tthis.profile.id),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.userDataProfilesService.onDidChangeProfiles(({ updated }) => {\n\t\t\t\tconst profile = updated.find((p) => p.id === this.profile.id);\n\t\t\t\tif (profile) {\n\t\t\t\t\tthis._profile = profile;\n\t\t\t\t\tthis.reset();\n\t\t\t\t\tthis._onDidChange.fire({ profile: true });\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\treset(): void {\n\t\tthis.name = this._profile.name;\n\t\tthis.icon = this._profile.icon;\n\t\tthis.flags = this._profile.useDefaultFlags;\n\t}\n\n\tpublic async toggleNewWindowProfile(): Promise<void> {\n\t\tif (this._isNewWindowProfile) {\n\t\t\tawait this.configurationService.updateValue(\n\t\t\t\tCONFIG_NEW_WINDOW_PROFILE,\n\t\t\t\tnull,\n\t\t\t);\n\t\t} else {\n\t\t\tawait this.configurationService.updateValue(\n\t\t\t\tCONFIG_NEW_WINDOW_PROFILE,\n\t\t\t\tthis.profile.name,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _isNewWindowProfile = false;\n\tget isNewWindowProfile(): boolean {\n\t\treturn this._isNewWindowProfile;\n\t}\n\tset isNewWindowProfile(isNewWindowProfile: boolean) {\n\t\tif (this._isNewWindowProfile !== isNewWindowProfile) {\n\t\t\tthis._isNewWindowProfile = isNewWindowProfile;\n\t\t\tthis._onDidChange.fire({ newWindowProfile: true });\n\t\t}\n\t}\n\n\tpublic async toggleCurrentWindowProfile(): Promise<void> {\n\t\tif (this.userDataProfileService.currentProfile.id === this.profile.id) {\n\t\t\tawait this.userDataProfileManagementService.switchProfile(\n\t\t\t\tthis.userDataProfilesService.defaultProfile,\n\t\t\t);\n\t\t} else {\n\t\t\tawait this.userDataProfileManagementService.switchProfile(\n\t\t\t\tthis.profile,\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected override async doSave(): Promise<void> {\n\t\tawait this.saveProfile(this.profile);\n\t}\n\n\tprotected override async getChildrenForResourceType(\n\t\tresourceType: ProfileResourceType,\n\t): Promise<IProfileChildElement[]> {\n\t\treturn this.getChildrenFromProfile(this.profile, resourceType);\n\t}\n\n\toverride getInitialName(): string {\n\t\treturn this.profile.name;\n\t}\n}\n\nconst USER_DATA_PROFILE_TEMPLATE_PREVIEW_SCHEME =\n\t\"userdataprofiletemplatepreview\";\n\nexport class NewProfileElement extends AbstractUserDataProfileElement {\n\tprivate _copyFromTemplates = new ResourceMap<string>();\n\tget copyFromTemplates(): ResourceMap<string> {\n\t\treturn this._copyFromTemplates;\n\t}\n\n\tprivate templatePromise: CancelablePromise<void> | undefined;\n\tprivate template: IUserDataProfileTemplate | null = null;\n\n\tprivate defaultName: string;\n\tprivate defaultIcon: string | undefined;\n\n\tconstructor(\n\t\tname: string,\n\t\tcopyFrom: URI | IUserDataProfile | undefined,\n\t\treadonly titleButtons: [Action[], Action[]],\n\t\treadonly actions: [IAction[], IAction[]],\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataProfileImportExportService\n\t\tprivate readonly userDataProfileImportExportService: IUserDataProfileImportExportService,\n\t\t@IUserDataProfileManagementService\n\t\tuserDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfilesService\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\tname,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t\tuserDataProfileManagementService,\n\t\t\tuserDataProfilesService,\n\t\t\tcommandService,\n\t\t\tinstantiationService,\n\t\t);\n\t\tthis.defaultName = name;\n\t\tthis._copyFrom = copyFrom;\n\t\tthis._copyFlags = this.getCopyFlagsFrom(copyFrom);\n\t\tthis.initialize();\n\t\tthis._register(\n\t\t\tthis.fileService.registerProvider(\n\t\t\t\tUSER_DATA_PROFILE_TEMPLATE_PREVIEW_SCHEME,\n\t\t\t\tthis._register(new InMemoryFileSystemProvider()),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _copyFrom: IUserDataProfile | URI | undefined;\n\tget copyFrom(): IUserDataProfile | URI | undefined {\n\t\treturn this._copyFrom;\n\t}\n\tset copyFrom(copyFrom: IUserDataProfile | URI | undefined) {\n\t\tif (this._copyFrom !== copyFrom) {\n\t\t\tthis._copyFrom = copyFrom;\n\t\t\tthis._onDidChange.fire({ copyFrom: true });\n\t\t\tthis.flags = undefined;\n\t\t\tthis.copyFlags = this.getCopyFlagsFrom(copyFrom);\n\t\t\tif (copyFrom instanceof URI) {\n\t\t\t\tthis.templatePromise?.cancel();\n\t\t\t\tthis.templatePromise = undefined;\n\t\t\t}\n\t\t\tthis.initialize();\n\t\t}\n\t}\n\n\tprivate _copyFlags: ProfileResourceTypeFlags | undefined;\n\tget copyFlags(): ProfileResourceTypeFlags | undefined {\n\t\treturn this._copyFlags;\n\t}\n\tset copyFlags(flags: ProfileResourceTypeFlags | undefined) {\n\t\tif (!equals(this._copyFlags, flags)) {\n\t\t\tthis._copyFlags = flags;\n\t\t\tthis._onDidChange.fire({ copyFlags: true });\n\t\t}\n\t}\n\n\tprivate _previewProfile: IUserDataProfile | undefined;\n\tget previewProfile(): IUserDataProfile | undefined {\n\t\treturn this._previewProfile;\n\t}\n\tset previewProfile(profile: IUserDataProfile | undefined) {\n\t\tif (this._previewProfile !== profile) {\n\t\t\tthis._previewProfile = profile;\n\t\t\tthis._onDidChange.fire({ preview: true });\n\t\t}\n\t}\n\n\tprivate getCopyFlagsFrom(\n\t\tcopyFrom: URI | IUserDataProfile | undefined,\n\t): ProfileResourceTypeFlags | undefined {\n\t\treturn copyFrom\n\t\t\t? {\n\t\t\t\t\tsettings: true,\n\t\t\t\t\tkeybindings: true,\n\t\t\t\t\tsnippets: true,\n\t\t\t\t\ttasks: true,\n\t\t\t\t\textensions: true,\n\t\t\t\t}\n\t\t\t: undefined;\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\tthis.disabled = true;\n\t\ttry {\n\t\t\tif (this.copyFrom instanceof URI) {\n\t\t\t\tawait this.resolveTemplate(this.copyFrom);\n\t\t\t\tif (this.template) {\n\t\t\t\t\tthis.copyFromTemplates.set(\n\t\t\t\t\t\tthis.copyFrom,\n\t\t\t\t\t\tthis.template.name,\n\t\t\t\t\t);\n\t\t\t\t\tif (this.defaultName === this.name) {\n\t\t\t\t\t\tthis.name = this.defaultName = this.template.name ?? \"\";\n\t\t\t\t\t}\n\t\t\t\t\tif (this.defaultIcon === this.icon) {\n\t\t\t\t\t\tthis.icon = this.defaultIcon = this.template.icon;\n\t\t\t\t\t}\n\t\t\t\t\tthis.setCopyFlag(\n\t\t\t\t\t\tProfileResourceType.Settings,\n\t\t\t\t\t\t!!this.template.settings,\n\t\t\t\t\t);\n\t\t\t\t\tthis.setCopyFlag(\n\t\t\t\t\t\tProfileResourceType.Keybindings,\n\t\t\t\t\t\t!!this.template.keybindings,\n\t\t\t\t\t);\n\t\t\t\t\tthis.setCopyFlag(\n\t\t\t\t\t\tProfileResourceType.Tasks,\n\t\t\t\t\t\t!!this.template.tasks,\n\t\t\t\t\t);\n\t\t\t\t\tthis.setCopyFlag(\n\t\t\t\t\t\tProfileResourceType.Snippets,\n\t\t\t\t\t\t!!this.template.snippets,\n\t\t\t\t\t);\n\t\t\t\t\tthis.setCopyFlag(\n\t\t\t\t\t\tProfileResourceType.Extensions,\n\t\t\t\t\t\t!!this.template.extensions,\n\t\t\t\t\t);\n\t\t\t\t\tthis._onDidChange.fire({ copyFromInfo: true });\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isUserDataProfile(this.copyFrom)) {\n\t\t\t\tif (this.defaultName === this.name) {\n\t\t\t\t\tthis.name = this.defaultName = localize(\n\t\t\t\t\t\t\"copy from\",\n\t\t\t\t\t\t\"{0} (Copy)\",\n\t\t\t\t\t\tthis.copyFrom.name,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (this.defaultIcon === this.icon) {\n\t\t\t\t\tthis.icon = this.defaultIcon = this.copyFrom.icon;\n\t\t\t\t}\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Settings, true);\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Keybindings, true);\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Tasks, true);\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Snippets, true);\n\t\t\t\tthis.setCopyFlag(ProfileResourceType.Extensions, true);\n\t\t\t\tthis._onDidChange.fire({ copyFromInfo: true });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.defaultName === this.name) {\n\t\t\t\tthis.name = this.defaultName = localize(\"untitled\", \"Untitled\");\n\t\t\t}\n\t\t\tif (this.defaultIcon === this.icon) {\n\t\t\t\tthis.icon = this.defaultIcon = undefined;\n\t\t\t}\n\t\t\tthis.setCopyFlag(ProfileResourceType.Settings, false);\n\t\t\tthis.setCopyFlag(ProfileResourceType.Keybindings, false);\n\t\t\tthis.setCopyFlag(ProfileResourceType.Tasks, false);\n\t\t\tthis.setCopyFlag(ProfileResourceType.Snippets, false);\n\t\t\tthis.setCopyFlag(ProfileResourceType.Extensions, false);\n\t\t\tthis._onDidChange.fire({ copyFromInfo: true });\n\t\t} finally {\n\t\t\tthis.disabled = false;\n\t\t}\n\t}\n\n\tasync resolveTemplate(uri: URI): Promise<IUserDataProfileTemplate | null> {\n\t\tif (!this.templatePromise) {\n\t\t\tthis.templatePromise = createCancelablePromise(async (token) => {\n\t\t\t\tconst template =\n\t\t\t\t\tawait this.userDataProfileImportExportService.resolveProfileTemplate(\n\t\t\t\t\t\turi,\n\t\t\t\t\t);\n\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\tthis.template = template;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tawait this.templatePromise;\n\t\treturn this.template;\n\t}\n\n\thasResource(resourceType: ProfileResourceType): boolean {\n\t\tif (this.template) {\n\t\t\tswitch (resourceType) {\n\t\t\t\tcase ProfileResourceType.Settings:\n\t\t\t\t\treturn !!this.template.settings;\n\t\t\t\tcase ProfileResourceType.Keybindings:\n\t\t\t\t\treturn !!this.template.keybindings;\n\t\t\t\tcase ProfileResourceType.Snippets:\n\t\t\t\t\treturn !!this.template.snippets;\n\t\t\t\tcase ProfileResourceType.Tasks:\n\t\t\t\t\treturn !!this.template.tasks;\n\t\t\t\tcase ProfileResourceType.Extensions:\n\t\t\t\t\treturn !!this.template.extensions;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tgetCopyFlag(key: ProfileResourceType): boolean {\n\t\treturn this.copyFlags?.[key] ?? false;\n\t}\n\n\tsetCopyFlag(key: ProfileResourceType, value: boolean): void {\n\t\tconst flags = this.copyFlags ? { ...this.copyFlags } : {};\n\t\tflags[key] = value;\n\t\tthis.copyFlags = flags;\n\t}\n\n\tgetCopyFromName(): string | undefined {\n\t\tif (isUserDataProfile(this.copyFrom)) {\n\t\t\treturn this.copyFrom.name;\n\t\t}\n\t\tif (this.copyFrom instanceof URI) {\n\t\t\treturn this.copyFromTemplates.get(this.copyFrom);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected override async getChildrenForResourceType(\n\t\tresourceType: ProfileResourceType,\n\t): Promise<IProfileChildElement[]> {\n\t\tif (this.getFlag(resourceType)) {\n\t\t\treturn this.getChildrenFromProfile(\n\t\t\t\tthis.userDataProfilesService.defaultProfile,\n\t\t\t\tresourceType,\n\t\t\t);\n\t\t}\n\t\tif (!this.getCopyFlag(resourceType)) {\n\t\t\treturn [];\n\t\t}\n\t\tif (this.copyFrom instanceof URI) {\n\t\t\tawait this.resolveTemplate(this.copyFrom);\n\t\t\tif (!this.template) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn this.getChildrenFromProfileTemplate(\n\t\t\t\tthis.template,\n\t\t\t\tresourceType,\n\t\t\t);\n\t\t}\n\t\tif (this.copyFrom) {\n\t\t\treturn this.getChildrenFromProfile(this.copyFrom, resourceType);\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async getChildrenFromProfileTemplate(\n\t\tprofileTemplate: IUserDataProfileTemplate,\n\t\tresourceType: ProfileResourceType,\n\t): Promise<IProfileResourceTypeChildElement[]> {\n\t\tconst profile = toUserDataProfile(\n\t\t\tgenerateUuid(),\n\t\t\tthis.name,\n\t\t\tURI.file(\"/root\").with({\n\t\t\t\tscheme: USER_DATA_PROFILE_TEMPLATE_PREVIEW_SCHEME,\n\t\t\t}),\n\t\t\tURI.file(\"/cache\").with({\n\t\t\t\tscheme: USER_DATA_PROFILE_TEMPLATE_PREVIEW_SCHEME,\n\t\t\t}),\n\t\t);\n\t\tswitch (resourceType) {\n\t\t\tcase ProfileResourceType.Settings:\n\t\t\t\tif (profileTemplate.settings) {\n\t\t\t\t\tawait this.instantiationService\n\t\t\t\t\t\t.createInstance(SettingsResource)\n\t\t\t\t\t\t.apply(profileTemplate.settings, profile);\n\t\t\t\t\treturn this.getChildrenFromProfile(profile, resourceType);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\tcase ProfileResourceType.Keybindings:\n\t\t\t\tif (profileTemplate.keybindings) {\n\t\t\t\t\tawait this.instantiationService\n\t\t\t\t\t\t.createInstance(KeybindingsResource)\n\t\t\t\t\t\t.apply(profileTemplate.keybindings, profile);\n\t\t\t\t\treturn this.getChildrenFromProfile(profile, resourceType);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\tcase ProfileResourceType.Snippets:\n\t\t\t\tif (profileTemplate.snippets) {\n\t\t\t\t\tawait this.instantiationService\n\t\t\t\t\t\t.createInstance(SnippetsResource)\n\t\t\t\t\t\t.apply(profileTemplate.snippets, profile);\n\t\t\t\t\treturn this.getChildrenFromProfile(profile, resourceType);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\tcase ProfileResourceType.Tasks:\n\t\t\t\tif (profileTemplate.tasks) {\n\t\t\t\t\tawait this.instantiationService\n\t\t\t\t\t\t.createInstance(TasksResource)\n\t\t\t\t\t\t.apply(profileTemplate.tasks, profile);\n\t\t\t\t\treturn this.getChildrenFromProfile(profile, resourceType);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\tcase ProfileResourceType.Extensions:\n\t\t\t\tif (profileTemplate.extensions) {\n\t\t\t\t\tconst children = await this.instantiationService\n\t\t\t\t\t\t.createInstance(\n\t\t\t\t\t\t\tExtensionsResourceImportTreeItem,\n\t\t\t\t\t\t\tprofileTemplate.extensions,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.getChildren();\n\t\t\t\t\treturn children.map((child) =>\n\t\t\t\t\t\tthis.toUserDataProfileResourceChildElement(child),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride shouldValidateName(): boolean {\n\t\treturn !this.copyFrom;\n\t}\n\n\toverride getInitialName(): string {\n\t\treturn this.previewProfile?.name ?? \"\";\n\t}\n\n\tprotected override async doSave(): Promise<void> {\n\t\tif (this.previewProfile) {\n\t\t\tconst profile = await this.saveProfile(this.previewProfile);\n\t\t\tif (profile) {\n\t\t\t\tthis.previewProfile = profile;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class UserDataProfilesEditorModel extends EditorModel {\n\tprivate static INSTANCE: UserDataProfilesEditorModel | undefined;\n\tstatic getInstance(\n\t\tinstantiationService: IInstantiationService,\n\t): UserDataProfilesEditorModel {\n\t\tif (!UserDataProfilesEditorModel.INSTANCE) {\n\t\t\tUserDataProfilesEditorModel.INSTANCE =\n\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\tUserDataProfilesEditorModel,\n\t\t\t\t);\n\t\t}\n\t\treturn UserDataProfilesEditorModel.INSTANCE;\n\t}\n\n\tprivate _profiles: [AbstractUserDataProfileElement, DisposableStore][] = [];\n\tget profiles(): AbstractUserDataProfileElement[] {\n\t\treturn this._profiles\n\t\t\t.map(([profile]) => profile)\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a instanceof NewProfileElement) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (b instanceof NewProfileElement) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\ta instanceof UserDataProfileElement &&\n\t\t\t\t\ta.profile.isDefault\n\t\t\t\t) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tb instanceof UserDataProfileElement &&\n\t\t\t\t\tb.profile.isDefault\n\t\t\t\t) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn a.name.localeCompare(b.name);\n\t\t\t});\n\t}\n\n\tprivate newProfileElement: NewProfileElement | undefined;\n\n\tprivate _onDidChange = this._register(\n\t\tnew Emitter<AbstractUserDataProfileElement | undefined>(),\n\t);\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate templates: Promise<readonly IProfileTemplateInfo[]> | undefined;\n\n\tconstructor(\n\t\t@IUserDataProfileService\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileManagementService\n\t\tprivate readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfileImportExportService\n\t\tprivate readonly userDataProfileImportExportService: IUserDataProfileImportExportService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tfor (const profile of userDataProfilesService.profiles) {\n\t\t\tif (!profile.isTransient) {\n\t\t\t\tthis._profiles.push(this.createProfileElement(profile));\n\t\t\t}\n\t\t}\n\t\tthis._register(\n\t\t\ttoDisposable(() =>\n\t\t\t\tthis._profiles\n\t\t\t\t\t.splice(0, this._profiles.length)\n\t\t\t\t\t.map(([, disposables]) => disposables.dispose()),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tuserDataProfilesService.onDidChangeProfiles((e) =>\n\t\t\t\tthis.onDidChangeProfiles(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onDidChangeProfiles(e: DidChangeProfilesEvent): void {\n\t\tlet changed = false;\n\t\tfor (const profile of e.added) {\n\t\t\tif (\n\t\t\t\t!profile.isTransient &&\n\t\t\t\tprofile.name !== this.newProfileElement?.name\n\t\t\t) {\n\t\t\t\tchanged = true;\n\t\t\t\tthis._profiles.push(this.createProfileElement(profile));\n\t\t\t}\n\t\t}\n\t\tfor (const profile of e.removed) {\n\t\t\tif (profile.id === this.newProfileElement?.previewProfile?.id) {\n\t\t\t\tthis.newProfileElement.previewProfile = undefined;\n\t\t\t}\n\t\t\tconst index = this._profiles.findIndex(\n\t\t\t\t([p]) =>\n\t\t\t\t\tp instanceof UserDataProfileElement &&\n\t\t\t\t\tp.profile.id === profile.id,\n\t\t\t);\n\t\t\tif (index !== -1) {\n\t\t\t\tchanged = true;\n\t\t\t\tthis._profiles\n\t\t\t\t\t.splice(index, 1)\n\t\t\t\t\t.map(([, disposables]) => disposables.dispose());\n\t\t\t}\n\t\t}\n\t\tif (changed) {\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t}\n\t}\n\n\tgetTemplates(): Promise<readonly IProfileTemplateInfo[]> {\n\t\tif (!this.templates) {\n\t\t\tthis.templates =\n\t\t\t\tthis.userDataProfileManagementService.getBuiltinProfileTemplates();\n\t\t}\n\t\treturn this.templates;\n\t}\n\n\tprivate createProfileElement(\n\t\tprofile: IUserDataProfile,\n\t): [UserDataProfileElement, DisposableStore] {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst activateAction = disposables.add(\n\t\t\tnew Action(\n\t\t\t\t\"userDataProfile.activate\",\n\t\t\t\tlocalize(\"active\", \"Use this Profile for Current Window\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.check),\n\t\t\t\ttrue,\n\t\t\t\t() =>\n\t\t\t\t\tthis.userDataProfileManagementService.switchProfile(\n\t\t\t\t\t\tprofileElement.profile,\n\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tconst copyFromProfileAction = disposables.add(\n\t\t\tnew Action(\n\t\t\t\t\"userDataProfile.copyFromProfile\",\n\t\t\t\tlocalize(\"copyFromProfile\", \"Duplicate...\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.copy),\n\t\t\t\ttrue,\n\t\t\t\t() => this.createNewProfile(profileElement.profile),\n\t\t\t),\n\t\t);\n\n\t\tconst exportAction = disposables.add(\n\t\t\tnew Action(\n\t\t\t\t\"userDataProfile.export\",\n\t\t\t\tlocalize(\"export\", \"Export...\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.export),\n\t\t\t\ttrue,\n\t\t\t\t() =>\n\t\t\t\t\tthis.userDataProfileImportExportService.exportProfile(\n\t\t\t\t\t\tprofile,\n\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tconst deleteAction = disposables.add(\n\t\t\tnew Action(\n\t\t\t\t\"userDataProfile.delete\",\n\t\t\t\tlocalize(\"delete\", \"Delete\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.trash),\n\t\t\t\ttrue,\n\t\t\t\t() => this.removeProfile(profileElement.profile),\n\t\t\t),\n\t\t);\n\n\t\tconst newWindowAction = disposables.add(\n\t\t\tnew Action(\n\t\t\t\t\"userDataProfile.newWindow\",\n\t\t\t\tlocalize(\n\t\t\t\t\t\"open new window\",\n\t\t\t\t\t\"Open New Window with this Profile\",\n\t\t\t\t),\n\t\t\t\tThemeIcon.asClassName(Codicon.emptyWindow),\n\t\t\t\ttrue,\n\t\t\t\t() => this.openWindow(profileElement.profile),\n\t\t\t),\n\t\t);\n\n\t\tconst primaryActions: IAction[] = [];\n\t\tprimaryActions.push(activateAction);\n\t\tprimaryActions.push(newWindowAction);\n\t\tconst secondaryActions: IAction[] = [];\n\t\tsecondaryActions.push(copyFromProfileAction);\n\t\tsecondaryActions.push(exportAction);\n\t\tif (!profile.isDefault) {\n\t\t\tsecondaryActions.push(new Separator());\n\t\t\tsecondaryActions.push(deleteAction);\n\t\t}\n\n\t\tconst profileElement = disposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tUserDataProfileElement,\n\t\t\t\tprofile,\n\t\t\t\t[[], []],\n\t\t\t\t[primaryActions, secondaryActions],\n\t\t\t),\n\t\t);\n\n\t\tactivateAction.enabled =\n\t\t\tthis.userDataProfileService.currentProfile.id !==\n\t\t\tprofileElement.profile.id;\n\t\tdisposables.add(\n\t\t\tthis.userDataProfileService.onDidChangeCurrentProfile(\n\t\t\t\t() =>\n\t\t\t\t\t(activateAction.enabled =\n\t\t\t\t\t\tthis.userDataProfileService.currentProfile.id !==\n\t\t\t\t\t\tprofileElement.profile.id),\n\t\t\t),\n\t\t);\n\n\t\treturn [profileElement, disposables];\n\t}\n\n\tasync createNewProfile(\n\t\tcopyFrom?: URI | IUserDataProfile,\n\t): Promise<AbstractUserDataProfileElement | undefined> {\n\t\tif (this.newProfileElement) {\n\t\t\tconst result = await this.dialogService.confirm({\n\t\t\t\ttype: \"info\",\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"new profile exists\",\n\t\t\t\t\t\"A new profile is already being created. Do you want to discard it and create a new one?\",\n\t\t\t\t),\n\t\t\t\tprimaryButton: localize(\"discard\", \"Discard & Create\"),\n\t\t\t\tcancelButton: localize(\"cancel\", \"Cancel\"),\n\t\t\t});\n\t\t\tif (!result.confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.revert();\n\t\t}\n\n\t\tif (copyFrom instanceof URI) {\n\t\t\ttry {\n\t\t\t\tawait this.userDataProfileImportExportService.resolveProfileTemplate(\n\t\t\t\t\tcopyFrom,\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tthis.dialogService.error(getErrorMessage(error));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.newProfileElement) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\tdisposables.add(\n\t\t\t\ttoDisposable(() => cancellationTokenSource.dispose(true)),\n\t\t\t);\n\t\t\tconst primaryActions: Action[] = [];\n\t\t\tconst secondaryActions: Action[] = [];\n\t\t\tconst createAction = disposables.add(\n\t\t\t\tnew Action(\n\t\t\t\t\t\"userDataProfile.create\",\n\t\t\t\t\tlocalize(\"create\", \"Create\"),\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() =>\n\t\t\t\t\t\tthis.saveNewProfile(\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tcancellationTokenSource.token,\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tprimaryActions.push(createAction);\n\t\t\tif (isWeb && copyFrom instanceof URI && isProfileURL(copyFrom)) {\n\t\t\t\tprimaryActions.push(\n\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\"userDataProfile.createInDesktop\",\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"import in desktop\",\n\t\t\t\t\t\t\t\"Create in {0}\",\n\t\t\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\tthis.openerService.open(copyFrom, {\n\t\t\t\t\t\t\t\topenExternal: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst cancelAction = disposables.add(\n\t\t\t\tnew Action(\n\t\t\t\t\t\"userDataProfile.cancel\",\n\t\t\t\t\tlocalize(\"cancel\", \"Cancel\"),\n\t\t\t\t\tThemeIcon.asClassName(Codicon.trash),\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => this.discardNewProfile(),\n\t\t\t\t),\n\t\t\t);\n\t\t\tsecondaryActions.push(cancelAction);\n\t\t\tconst previewProfileAction = disposables.add(\n\t\t\t\tnew Action(\n\t\t\t\t\t\"userDataProfile.preview\",\n\t\t\t\t\tlocalize(\"preview\", \"Preview\"),\n\t\t\t\t\tThemeIcon.asClassName(Codicon.openPreview),\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => this.previewNewProfile(cancellationTokenSource.token),\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (!isWeb) {\n\t\t\t\tsecondaryActions.push(previewProfileAction);\n\t\t\t}\n\t\t\tconst exportAction = disposables.add(\n\t\t\t\tnew Action(\n\t\t\t\t\t\"userDataProfile.export\",\n\t\t\t\t\tlocalize(\"export\", \"Export...\"),\n\t\t\t\t\tThemeIcon.asClassName(Codicon.export),\n\t\t\t\t\tisUserDataProfile(copyFrom),\n\t\t\t\t\t() => this.exportNewProfile(cancellationTokenSource.token),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.newProfileElement = disposables.add(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tNewProfileElement,\n\t\t\t\t\tcopyFrom ? \"\" : localize(\"untitled\", \"Untitled\"),\n\t\t\t\t\tcopyFrom,\n\t\t\t\t\t[primaryActions, secondaryActions],\n\t\t\t\t\t[[cancelAction], [exportAction]],\n\t\t\t\t),\n\t\t\t);\n\t\t\tconst updateCreateActionLabel = () => {\n\t\t\t\tif (createAction.enabled) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.newProfileElement?.copyFrom &&\n\t\t\t\t\t\tthis.userDataProfilesService.profiles.some(\n\t\t\t\t\t\t\t(p) => p.name === this.newProfileElement?.name,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcreateAction.label = localize(\"replace\", \"Replace\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateAction.label = localize(\"create\", \"Create\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tupdateCreateActionLabel();\n\t\t\tdisposables.add(\n\t\t\t\tthis.newProfileElement.onDidChange((e) => {\n\t\t\t\t\tif (e.preview) {\n\t\t\t\t\t\tpreviewProfileAction.checked =\n\t\t\t\t\t\t\t!!this.newProfileElement?.previewProfile;\n\t\t\t\t\t}\n\t\t\t\t\tif (e.disabled || e.message) {\n\t\t\t\t\t\tpreviewProfileAction.enabled = createAction.enabled =\n\t\t\t\t\t\t\t!this.newProfileElement?.disabled &&\n\t\t\t\t\t\t\t!this.newProfileElement?.message;\n\t\t\t\t\t}\n\t\t\t\t\tif (e.name || e.copyFrom) {\n\t\t\t\t\t\tupdateCreateActionLabel();\n\t\t\t\t\t\texportAction.enabled = isUserDataProfile(\n\t\t\t\t\t\t\tthis.newProfileElement?.copyFrom,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tthis.userDataProfilesService.onDidChangeProfiles((e) => {\n\t\t\t\t\tupdateCreateActionLabel();\n\t\t\t\t\tthis.newProfileElement?.validate();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._profiles.push([this.newProfileElement, disposables]);\n\t\t\tthis._onDidChange.fire(this.newProfileElement);\n\t\t}\n\t\treturn this.newProfileElement;\n\t}\n\n\trevert(): void {\n\t\tthis.removeNewProfile();\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\tprivate removeNewProfile(): void {\n\t\tif (this.newProfileElement) {\n\t\t\tconst index = this._profiles.findIndex(\n\t\t\t\t([p]) => p === this.newProfileElement,\n\t\t\t);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis._profiles\n\t\t\t\t\t.splice(index, 1)\n\t\t\t\t\t.map(([, disposables]) => disposables.dispose());\n\t\t\t}\n\t\t\tthis.newProfileElement = undefined;\n\t\t}\n\t}\n\n\tprivate async previewNewProfile(token: CancellationToken): Promise<void> {\n\t\tif (!this.newProfileElement) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.newProfileElement.previewProfile) {\n\t\t\treturn;\n\t\t}\n\t\tconst profile = await this.saveNewProfile(true, token);\n\t\tif (profile) {\n\t\t\tthis.newProfileElement.previewProfile = profile;\n\t\t\tawait this.openWindow(profile);\n\t\t}\n\t}\n\n\tprivate async exportNewProfile(token: CancellationToken): Promise<void> {\n\t\tif (!this.newProfileElement) {\n\t\t\treturn;\n\t\t}\n\t\tif (!isUserDataProfile(this.newProfileElement.copyFrom)) {\n\t\t\treturn;\n\t\t}\n\t\tconst profile = toUserDataProfile(\n\t\t\tgenerateUuid(),\n\t\t\tthis.newProfileElement.name,\n\t\t\tthis.newProfileElement.copyFrom.location,\n\t\t\tthis.newProfileElement.copyFrom.cacheHome,\n\t\t\t{\n\t\t\t\ticon: this.newProfileElement.icon,\n\t\t\t\tuseDefaultFlags: this.newProfileElement.flags,\n\t\t\t},\n\t\t\tthis.userDataProfilesService.defaultProfile,\n\t\t);\n\t\tawait this.userDataProfileImportExportService.exportProfile(\n\t\t\tprofile,\n\t\t\tthis.newProfileElement.copyFlags,\n\t\t);\n\t}\n\n\tasync saveNewProfile(\n\t\ttransient?: boolean,\n\t\ttoken?: CancellationToken,\n\t): Promise<IUserDataProfile | undefined> {\n\t\tif (!this.newProfileElement) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.newProfileElement.validate();\n\t\tif (this.newProfileElement.message) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.newProfileElement.disabled = true;\n\t\tlet profile: IUserDataProfile | undefined;\n\n\t\ttry {\n\t\t\tif (this.newProfileElement.previewProfile) {\n\t\t\t\tif (!transient) {\n\t\t\t\t\tprofile =\n\t\t\t\t\t\tawait this.userDataProfileManagementService.updateProfile(\n\t\t\t\t\t\t\tthis.newProfileElement.previewProfile,\n\t\t\t\t\t\t\t{ transient: false },\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst { flags, icon, name, copyFrom } = this.newProfileElement;\n\t\t\t\tconst useDefaultFlags: UseDefaultProfileFlags | undefined =\n\t\t\t\t\tflags\n\t\t\t\t\t\t? flags.settings &&\n\t\t\t\t\t\t\tflags.keybindings &&\n\t\t\t\t\t\t\tflags.tasks &&\n\t\t\t\t\t\t\tflags.globalState &&\n\t\t\t\t\t\t\tflags.extensions\n\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t: flags\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\ttype CreateProfileInfoClassification = {\n\t\t\t\t\towner: \"sandy081\";\n\t\t\t\t\tcomment: \"Report when profile is about to be created\";\n\t\t\t\t\tsource: {\n\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\tcomment: \"Type of profile source\";\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\ttype CreateProfileInfoEvent = {\n\t\t\t\t\tsource: string | undefined;\n\t\t\t\t};\n\t\t\t\tconst createProfileTelemetryData: CreateProfileInfoEvent = {\n\t\t\t\t\tsource:\n\t\t\t\t\t\tcopyFrom instanceof URI\n\t\t\t\t\t\t\t? \"template\"\n\t\t\t\t\t\t\t: isUserDataProfile(copyFrom)\n\t\t\t\t\t\t\t\t? \"profile\"\n\t\t\t\t\t\t\t\t: copyFrom\n\t\t\t\t\t\t\t\t\t? \"external\"\n\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t};\n\n\t\t\t\tif (copyFrom instanceof URI) {\n\t\t\t\t\tconst template =\n\t\t\t\t\t\tawait this.newProfileElement.resolveTemplate(copyFrom);\n\t\t\t\t\tif (template) {\n\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\tCreateProfileInfoEvent,\n\t\t\t\t\t\t\tCreateProfileInfoClassification\n\t\t\t\t\t\t>(\n\t\t\t\t\t\t\t\"userDataProfile.createFromTemplate\",\n\t\t\t\t\t\t\tcreateProfileTelemetryData,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tprofile =\n\t\t\t\t\t\t\tawait this.userDataProfileImportExportService.createProfileFromTemplate(\n\t\t\t\t\t\t\t\ttemplate,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\tuseDefaultFlags,\n\t\t\t\t\t\t\t\t\ticon,\n\t\t\t\t\t\t\t\t\tresourceTypeFlags:\n\t\t\t\t\t\t\t\t\t\tthis.newProfileElement.copyFlags,\n\t\t\t\t\t\t\t\t\ttransient,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttoken ?? CancellationToken.None,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (isUserDataProfile(copyFrom)) {\n\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\tCreateProfileInfoEvent,\n\t\t\t\t\t\tCreateProfileInfoClassification\n\t\t\t\t\t>(\n\t\t\t\t\t\t\"userDataProfile.createFromProfile\",\n\t\t\t\t\t\tcreateProfileTelemetryData,\n\t\t\t\t\t);\n\t\t\t\t\tprofile =\n\t\t\t\t\t\tawait this.userDataProfileImportExportService.createFromProfile(\n\t\t\t\t\t\t\tcopyFrom,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tuseDefaultFlags,\n\t\t\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\t\t\tresourceTypeFlags:\n\t\t\t\t\t\t\t\t\tthis.newProfileElement.copyFlags,\n\t\t\t\t\t\t\t\ttransient,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttoken ?? CancellationToken.None,\n\t\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\tCreateProfileInfoEvent,\n\t\t\t\t\t\tCreateProfileInfoClassification\n\t\t\t\t\t>(\n\t\t\t\t\t\t\"userDataProfile.createEmptyProfile\",\n\t\t\t\t\t\tcreateProfileTelemetryData,\n\t\t\t\t\t);\n\t\t\t\t\tprofile =\n\t\t\t\t\t\tawait this.userDataProfileManagementService.createProfile(\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t{ useDefaultFlags, icon, transient },\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tif (this.newProfileElement) {\n\t\t\t\tthis.newProfileElement.disabled = false;\n\t\t\t}\n\t\t}\n\n\t\tif (token?.isCancellationRequested) {\n\t\t\tif (profile) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.userDataProfileManagementService.removeProfile(\n\t\t\t\t\t\tprofile,\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (profile && !profile.isTransient && this.newProfileElement) {\n\t\t\tthis.removeNewProfile();\n\t\t\tconst existing = this._profiles.find(\n\t\t\t\t([p]) => p.name === profile.name,\n\t\t\t);\n\t\t\tif (existing) {\n\t\t\t\tthis._onDidChange.fire(existing[0]);\n\t\t\t} else {\n\t\t\t\tthis.onDidChangeProfiles({\n\t\t\t\t\tadded: [profile],\n\t\t\t\t\tremoved: [],\n\t\t\t\t\tupdated: [],\n\t\t\t\t\tall: this.userDataProfilesService.profiles,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn profile;\n\t}\n\n\tprivate async discardNewProfile(): Promise<void> {\n\t\tif (!this.newProfileElement) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.newProfileElement.previewProfile) {\n\t\t\tawait this.userDataProfileManagementService.removeProfile(\n\t\t\t\tthis.newProfileElement.previewProfile,\n\t\t\t);\n\t\t}\n\t\tthis.removeNewProfile();\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\tprivate async removeProfile(profile: IUserDataProfile): Promise<void> {\n\t\tconst result = await this.dialogService.confirm({\n\t\t\ttype: \"info\",\n\t\t\tmessage: localize(\n\t\t\t\t\"deleteProfile\",\n\t\t\t\t\"Are you sure you want to delete the profile '{0}'?\",\n\t\t\t\tprofile.name,\n\t\t\t),\n\t\t\tprimaryButton: localize(\"delete\", \"Delete\"),\n\t\t\tcancelButton: localize(\"cancel\", \"Cancel\"),\n\t\t});\n\t\tif (result.confirmed) {\n\t\t\tawait this.userDataProfileManagementService.removeProfile(profile);\n\t\t}\n\t}\n\n\tprivate async openWindow(profile: IUserDataProfile): Promise<void> {\n\t\tawait this.hostService.openWindow({ forceProfile: profile.name });\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
