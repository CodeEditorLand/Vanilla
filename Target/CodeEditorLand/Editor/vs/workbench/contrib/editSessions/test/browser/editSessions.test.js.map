{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/editSessions/test/browser/editSessions.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { IFileService } from '../../../../../platform/files/common/files.js';\nimport { FileService } from '../../../../../platform/files/common/fileService.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { InMemoryFileSystemProvider } from '../../../../../platform/files/common/inMemoryFilesystemProvider.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { NullLogService } from '../../../../../platform/log/common/log.js';\nimport { EditSessionsContribution } from '../../browser/editSessions.contribution.js';\nimport { ProgressService } from '../../../../services/progress/browser/progressService.js';\nimport { IProgressService } from '../../../../../platform/progress/common/progress.js';\nimport { ISCMService } from '../../../scm/common/scm.js';\nimport { SCMService } from '../../../scm/common/scmService.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IWorkspaceContextService, WorkbenchState } from '../../../../../platform/workspace/common/workspace.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport * as sinon from 'sinon';\nimport assert from 'assert';\nimport { ChangeType, FileType, IEditSessionsLogService, IEditSessionsStorageService } from '../../common/editSessions.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { joinPath } from '../../../../../base/common/resources.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { TestNotificationService } from '../../../../../platform/notification/test/common/testNotificationService.js';\nimport { TestEnvironmentService } from '../../../../test/browser/workbenchTestServices.js';\nimport { IEnvironmentService } from '../../../../../platform/environment/common/environment.js';\nimport { MockContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { IViewDescriptorService } from '../../../../common/views.js';\nimport { ITextModelService } from '../../../../../editor/common/services/resolverService.js';\nimport { ILifecycleService } from '../../../../services/lifecycle/common/lifecycle.js';\nimport { IDialogService, IPrompt } from '../../../../../platform/dialogs/common/dialogs.js';\nimport { IEditorService, ISaveAllEditorsOptions } from '../../../../services/editor/common/editorService.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IRemoteAgentService } from '../../../../services/remote/common/remoteAgentService.js';\nimport { IExtensionService } from '../../../../services/extensions/common/extensions.js';\nimport { IEditSessionIdentityService } from '../../../../../platform/workspace/common/editSessions.js';\nimport { IUserDataProfilesService } from '../../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IProductService } from '../../../../../platform/product/common/productService.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { TestStorageService } from '../../../../test/common/workbenchTestServices.js';\nimport { IUriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { UriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { IWorkspaceIdentityService, WorkspaceIdentityService } from '../../../../services/workspaces/common/workspaceIdentityService.js';\n\nconst folderName = 'test-folder';\nconst folderUri = URI.file(`/${folderName}`);\n\nsuite('Edit session sync', () => {\n\tlet instantiationService: TestInstantiationService;\n\tlet editSessionsContribution: EditSessionsContribution;\n\tlet fileService: FileService;\n\tlet sandbox: sinon.SinonSandbox;\n\n\tconst disposables = new DisposableStore();\n\n\tsuiteSetup(() => {\n\t\tsandbox = sinon.createSandbox();\n\n\t\tinstantiationService = new TestInstantiationService();\n\n\t\t// Set up filesystem\n\t\tconst logService = new NullLogService();\n\t\tfileService = disposables.add(new FileService(logService));\n\t\tconst fileSystemProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\tfileService.registerProvider(Schemas.file, fileSystemProvider);\n\n\t\t// Stub out all services\n\t\tinstantiationService.stub(IEditSessionsLogService, logService);\n\t\tinstantiationService.stub(IFileService, fileService);\n\t\tinstantiationService.stub(ILifecycleService, new class extends mock<ILifecycleService>() {\n\t\t\toverride onWillShutdown = Event.None;\n\t\t});\n\t\tinstantiationService.stub(INotificationService, new TestNotificationService());\n\t\tinstantiationService.stub(IProductService, { 'editSessions.store': { url: 'https://test.com', canSwitch: true, authenticationProviders: {} } });\n\t\tinstantiationService.stub(IStorageService, new TestStorageService());\n\t\tinstantiationService.stub(IUriIdentityService, new UriIdentityService(fileService));\n\t\tinstantiationService.stub(IEditSessionsStorageService, new class extends mock<IEditSessionsStorageService>() {\n\t\t\toverride onDidSignIn = Event.None;\n\t\t\toverride onDidSignOut = Event.None;\n\t\t});\n\t\tinstantiationService.stub(IExtensionService, new class extends mock<IExtensionService>() {\n\t\t\toverride onDidChangeExtensions = Event.None;\n\t\t});\n\t\tinstantiationService.stub(IProgressService, ProgressService);\n\t\tinstantiationService.stub(ISCMService, SCMService);\n\t\tinstantiationService.stub(IEnvironmentService, TestEnvironmentService);\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tinstantiationService.stub(IDialogService, new class extends mock<IDialogService>() {\n\t\t\toverride async prompt(prompt: IPrompt<any>) {\n\t\t\t\tconst result = prompt.buttons?.[0].run({ checkboxChecked: false });\n\t\t\t\treturn { result };\n\t\t\t}\n\t\t\toverride async confirm() {\n\t\t\t\treturn { confirmed: false };\n\t\t\t}\n\t\t});\n\t\tinstantiationService.stub(IRemoteAgentService, new class extends mock<IRemoteAgentService>() {\n\t\t\toverride async getEnvironment() {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t\tinstantiationService.stub(IConfigurationService, new TestConfigurationService({ workbench: { experimental: { editSessions: { enabled: true } } } }));\n\t\tinstantiationService.stub(IWorkspaceContextService, new class extends mock<IWorkspaceContextService>() {\n\t\t\toverride getWorkspace() {\n\t\t\t\treturn {\n\t\t\t\t\tid: 'workspace-id',\n\t\t\t\t\tfolders: [{\n\t\t\t\t\t\turi: folderUri,\n\t\t\t\t\t\tname: folderName,\n\t\t\t\t\t\tindex: 0,\n\t\t\t\t\t\ttoResource: (relativePath: string) => joinPath(folderUri, relativePath)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t\toverride getWorkbenchState() {\n\t\t\t\treturn WorkbenchState.FOLDER;\n\t\t\t}\n\t\t});\n\n\t\t// Stub repositories\n\t\tinstantiationService.stub(ISCMService, '_repositories', new Map());\n\t\tinstantiationService.stub(IContextKeyService, new MockContextKeyService());\n\t\tinstantiationService.stub(IThemeService, new class extends mock<IThemeService>() {\n\t\t\toverride onDidColorThemeChange = Event.None;\n\t\t\toverride onDidFileIconThemeChange = Event.None;\n\t\t});\n\t\tinstantiationService.stub(IViewDescriptorService, {\n\t\t\tonDidChangeLocation: Event.None\n\t\t});\n\t\tinstantiationService.stub(ITextModelService, new class extends mock<ITextModelService>() {\n\t\t\toverride registerTextModelContentProvider = () => ({ dispose: () => { } });\n\t\t});\n\t\tinstantiationService.stub(IEditorService, new class extends mock<IEditorService>() {\n\t\t\toverride saveAll = async (_options: ISaveAllEditorsOptions) => { return { success: true, editors: [] }; };\n\t\t});\n\t\tinstantiationService.stub(IEditSessionIdentityService, new class extends mock<IEditSessionIdentityService>() {\n\t\t\toverride async getEditSessionIdentifier() {\n\t\t\t\treturn 'test-identity';\n\t\t\t}\n\t\t});\n\t\tinstantiationService.set(IWorkspaceIdentityService, instantiationService.createInstance(WorkspaceIdentityService));\n\t\tinstantiationService.stub(IUserDataProfilesService, new class extends mock<IUserDataProfilesService>() {\n\t\t\toverride defaultProfile = {\n\t\t\t\tid: 'default',\n\t\t\t\tname: 'Default',\n\t\t\t\tisDefault: true,\n\t\t\t\tlocation: URI.file('location'),\n\t\t\t\tglobalStorageHome: URI.file('globalStorageHome'),\n\t\t\t\tsettingsResource: URI.file('settingsResource'),\n\t\t\t\tkeybindingsResource: URI.file('keybindingsResource'),\n\t\t\t\ttasksResource: URI.file('tasksResource'),\n\t\t\t\tsnippetsHome: URI.file('snippetsHome'),\n\t\t\t\textensionsResource: URI.file('extensionsResource'),\n\t\t\t\tcacheHome: URI.file('cacheHome'),\n\t\t\t};\n\t\t});\n\n\t\teditSessionsContribution = instantiationService.createInstance(EditSessionsContribution);\n\t});\n\n\tteardown(() => {\n\t\tsinon.restore();\n\t\tdisposables.clear();\n\t});\n\n\ttest('Can apply edit session', async function () {\n\t\tconst fileUri = joinPath(folderUri, 'dir1', 'README.md');\n\t\tconst fileContents = '# readme';\n\t\tconst editSession = {\n\t\t\tversion: 1,\n\t\t\tfolders: [\n\t\t\t\t{\n\t\t\t\t\tname: folderName,\n\t\t\t\t\tworkingChanges: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trelativeFilePath: 'dir1/README.md',\n\t\t\t\t\t\t\tfileType: FileType.File,\n\t\t\t\t\t\t\tcontents: fileContents,\n\t\t\t\t\t\t\ttype: ChangeType.Addition\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\t// Stub sync service to return edit session data\n\t\tconst readStub = sandbox.stub().returns({ content: JSON.stringify(editSession), ref: '0' });\n\t\tinstantiationService.stub(IEditSessionsStorageService, 'read', readStub);\n\n\t\t// Create root folder\n\t\tawait fileService.createFolder(folderUri);\n\n\t\t// Resume edit session\n\t\tawait editSessionsContribution.resumeEditSession();\n\n\t\t// Verify edit session was correctly applied\n\t\tassert.equal((await fileService.readFile(fileUri)).value.toString(), fileContents);\n\t});\n\n\ttest('Edit session not stored if there are no edits', async function () {\n\t\tconst writeStub = sandbox.stub();\n\t\tinstantiationService.stub(IEditSessionsStorageService, 'write', writeStub);\n\n\t\t// Create root folder\n\t\tawait fileService.createFolder(folderUri);\n\n\t\tawait editSessionsContribution.storeEditSession(true, CancellationToken.None);\n\n\t\t// Verify that we did not attempt to write the edit session\n\t\tassert.equal(writeStub.called, false);\n\t});\n});\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AACxB,SAAS,kCAAkC;AAC3C,SAAS,gCAAgC;AACzC,SAAS,sBAAsB;AAC/B,SAAS,gCAAgC;AACzC,SAAS,uBAAuB;AAChC,SAAS,wBAAwB;AACjC,SAAS,mBAAmB;AAC5B,SAAS,kBAAkB;AAC3B,SAAS,gCAAgC;AACzC,SAAS,6BAA6B;AACtC,SAAS,0BAA0B,sBAAsB;AACzD,SAAS,YAAY;AACrB,YAAY,WAAW;AACvB,OAAO,YAAY;AACnB,SAAS,YAAY,UAAU,yBAAyB,mCAAmC;AAC3F,SAAS,WAAW;AACpB,SAAS,gBAAgB;AACzB,SAAS,4BAA4B;AACrC,SAAS,+BAA+B;AACxC,SAAS,8BAA8B;AACvC,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAC9B,SAAS,aAAa;AACtB,SAAS,8BAA8B;AACvC,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,gBAAgB,eAAe;AACxC,SAAS,gBAAgB,8BAA8B;AACvD,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,4BAA4B;AACrC,SAAS,2BAA2B;AACpC,SAAS,yBAAyB;AAClC,SAAS,mCAAmC;AAC5C,SAAS,gCAAgC;AACzC,SAAS,uBAAuB;AAChC,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,2BAA2B,gCAAgC;AAEpE,MAAM,aAAa;AACnB,MAAM,YAAY,IAAI,KAAK,IAAI,UAAU,EAAE;AAE3C,MAAM,qBAAqB,MAAM;AAChC,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,QAAM,cAAc,IAAI,gBAAgB;AAExC,aAAW,MAAM;AAChB,cAAU,MAAM,cAAc;AAE9B,2BAAuB,IAAI,yBAAyB;AAGpD,UAAM,aAAa,IAAI,eAAe;AACtC,kBAAc,YAAY,IAAI,IAAI,YAAY,UAAU,CAAC;AACzD,UAAM,qBAAqB,YAAY,IAAI,IAAI,2BAA2B,CAAC;AAC3E,gBAAY,iBAAiB,QAAQ,MAAM,kBAAkB;AAG7D,yBAAqB,KAAK,yBAAyB,UAAU;AAC7D,yBAAqB,KAAK,cAAc,WAAW;AACnD,yBAAqB,KAAK,mBAAmB,IAAI,cAAc,KAAwB,EAAE;AAAA,MAC/E,iBAAiB,MAAM;AAAA,IACjC,GAAC;AACD,yBAAqB,KAAK,sBAAsB,IAAI,wBAAwB,CAAC;AAC7E,yBAAqB,KAAK,iBAAiB,EAAE,sBAAsB,EAAE,KAAK,oBAAoB,WAAW,MAAM,yBAAyB,CAAC,EAAE,EAAE,CAAC;AAC9I,yBAAqB,KAAK,iBAAiB,IAAI,mBAAmB,CAAC;AACnE,yBAAqB,KAAK,qBAAqB,IAAI,mBAAmB,WAAW,CAAC;AAClF,yBAAqB,KAAK,6BAA6B,IAAI,cAAc,KAAkC,EAAE;AAAA,MACnG,cAAc,MAAM;AAAA,MACpB,eAAe,MAAM;AAAA,IAC/B,GAAC;AACD,yBAAqB,KAAK,mBAAmB,IAAI,cAAc,KAAwB,EAAE;AAAA,MAC/E,wBAAwB,MAAM;AAAA,IACxC,GAAC;AACD,yBAAqB,KAAK,kBAAkB,eAAe;AAC3D,yBAAqB,KAAK,aAAa,UAAU;AACjD,yBAAqB,KAAK,qBAAqB,sBAAsB;AACrE,yBAAqB,KAAK,mBAAmB,oBAAoB;AACjE,yBAAqB,KAAK,gBAAgB,IAAI,cAAc,KAAqB,EAAE;AAAA,MAClF,MAAe,OAAO,QAAsB;AAC3C,cAAM,SAAS,OAAO,UAAU,CAAC,EAAE,IAAI,EAAE,iBAAiB,MAAM,CAAC;AACjE,eAAO,EAAE,OAAO;AAAA,MACjB;AAAA,MACA,MAAe,UAAU;AACxB,eAAO,EAAE,WAAW,MAAM;AAAA,MAC3B;AAAA,IACD,GAAC;AACD,yBAAqB,KAAK,qBAAqB,IAAI,cAAc,KAA0B,EAAE;AAAA,MAC5F,MAAe,iBAAiB;AAC/B,eAAO;AAAA,MACR;AAAA,IACD,GAAC;AACD,yBAAqB,KAAK,uBAAuB,IAAI,yBAAyB,EAAE,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,SAAS,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;AACnJ,yBAAqB,KAAK,0BAA0B,IAAI,cAAc,KAA+B,EAAE;AAAA,MAC7F,eAAe;AACvB,eAAO;AAAA,UACN,IAAI;AAAA,UACJ,SAAS,CAAC;AAAA,YACT,KAAK;AAAA,YACL,MAAM;AAAA,YACN,OAAO;AAAA,YACP,YAAY,wBAAC,iBAAyB,SAAS,WAAW,YAAY,GAA1D;AAAA,UACb,CAAC;AAAA,QACF;AAAA,MACD;AAAA,MACS,oBAAoB;AAC5B,eAAO,eAAe;AAAA,MACvB;AAAA,IACD,GAAC;AAGD,yBAAqB,KAAK,aAAa,iBAAiB,oBAAI,IAAI,CAAC;AACjE,yBAAqB,KAAK,oBAAoB,IAAI,sBAAsB,CAAC;AACzE,yBAAqB,KAAK,eAAe,IAAI,cAAc,KAAoB,EAAE;AAAA,MACvE,wBAAwB,MAAM;AAAA,MAC9B,2BAA2B,MAAM;AAAA,IAC3C,GAAC;AACD,yBAAqB,KAAK,wBAAwB;AAAA,MACjD,qBAAqB,MAAM;AAAA,IAC5B,CAAC;AACD,yBAAqB,KAAK,mBAAmB,IAAI,cAAc,KAAwB,EAAE;AAAA,MAC/E,mCAAmC,8BAAO,EAAE,SAAS,6BAAM;AAAA,MAAE,GAAR,WAAU,IAA5B;AAAA,IAC7C,GAAC;AACD,yBAAqB,KAAK,gBAAgB,IAAI,cAAc,KAAqB,EAAE;AAAA,MACzE,UAAU,8BAAO,aAAqC;AAAE,eAAO,EAAE,SAAS,MAAM,SAAS,CAAC,EAAE;AAAA,MAAG,GAArF;AAAA,IACpB,GAAC;AACD,yBAAqB,KAAK,6BAA6B,IAAI,cAAc,KAAkC,EAAE;AAAA,MAC5G,MAAe,2BAA2B;AACzC,eAAO;AAAA,MACR;AAAA,IACD,GAAC;AACD,yBAAqB,IAAI,2BAA2B,qBAAqB,eAAe,wBAAwB,CAAC;AACjH,yBAAqB,KAAK,0BAA0B,IAAI,cAAc,KAA+B,EAAE;AAAA,MAC7F,iBAAiB;AAAA,QACzB,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,WAAW;AAAA,QACX,UAAU,IAAI,KAAK,UAAU;AAAA,QAC7B,mBAAmB,IAAI,KAAK,mBAAmB;AAAA,QAC/C,kBAAkB,IAAI,KAAK,kBAAkB;AAAA,QAC7C,qBAAqB,IAAI,KAAK,qBAAqB;AAAA,QACnD,eAAe,IAAI,KAAK,eAAe;AAAA,QACvC,cAAc,IAAI,KAAK,cAAc;AAAA,QACrC,oBAAoB,IAAI,KAAK,oBAAoB;AAAA,QACjD,WAAW,IAAI,KAAK,WAAW;AAAA,MAChC;AAAA,IACD,GAAC;AAED,+BAA2B,qBAAqB,eAAe,wBAAwB;AAAA,EACxF,CAAC;AAED,WAAS,MAAM;AACd,UAAM,QAAQ;AACd,gBAAY,MAAM;AAAA,EACnB,CAAC;AAED,OAAK,0BAA0B,iBAAkB;AAChD,UAAM,UAAU,SAAS,WAAW,QAAQ,WAAW;AACvD,UAAM,eAAe;AACrB,UAAM,cAAc;AAAA,MACnB,SAAS;AAAA,MACT,SAAS;AAAA,QACR;AAAA,UACC,MAAM;AAAA,UACN,gBAAgB;AAAA,YACf;AAAA,cACC,kBAAkB;AAAA,cAClB,UAAU,SAAS;AAAA,cACnB,UAAU;AAAA,cACV,MAAM,WAAW;AAAA,YAClB;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAGA,UAAM,WAAW,QAAQ,KAAK,EAAE,QAAQ,EAAE,SAAS,KAAK,UAAU,WAAW,GAAG,KAAK,IAAI,CAAC;AAC1F,yBAAqB,KAAK,6BAA6B,QAAQ,QAAQ;AAGvE,UAAM,YAAY,aAAa,SAAS;AAGxC,UAAM,yBAAyB,kBAAkB;AAGjD,WAAO,OAAO,MAAM,YAAY,SAAS,OAAO,GAAG,MAAM,SAAS,GAAG,YAAY;AAAA,EAClF,CAAC;AAED,OAAK,iDAAiD,iBAAkB;AACvE,UAAM,YAAY,QAAQ,KAAK;AAC/B,yBAAqB,KAAK,6BAA6B,SAAS,SAAS;AAGzE,UAAM,YAAY,aAAa,SAAS;AAExC,UAAM,yBAAyB,iBAAiB,MAAM,kBAAkB,IAAI;AAG5E,WAAO,MAAM,UAAU,QAAQ,KAAK;AAAA,EACrC,CAAC;AACF,CAAC;",
  "names": []
}
