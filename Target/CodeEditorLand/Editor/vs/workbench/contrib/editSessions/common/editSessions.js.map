{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/editSessions/common/editSessions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { decodeBase64, VSBuffer } from '../../../../base/common/buffer.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { IResourceRefHandle } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { StringSHA1 } from '../../../../base/common/hash.js';\nimport { EditSessionsStoreClient } from './editSessionsStorageClient.js';\n\nexport const EDIT_SESSION_SYNC_CATEGORY = localize2('cloud changes', 'Cloud Changes');\n\nexport type SyncResource = 'editSessions' | 'workspaceState';\n\nexport const IEditSessionsStorageService = createDecorator<IEditSessionsStorageService>('IEditSessionsStorageService');\nexport interface IEditSessionsStorageService {\n\t_serviceBrand: undefined;\n\n\treadonly SIZE_LIMIT: number;\n\n\treadonly isSignedIn: boolean;\n\treadonly onDidSignIn: Event<void>;\n\treadonly onDidSignOut: Event<void>;\n\n\tstoreClient: EditSessionsStoreClient | undefined;\n\n\tlastReadResources: Map<SyncResource, { ref: string; content: string }>;\n\tlastWrittenResources: Map<SyncResource, { ref: string; content: string }>;\n\n\tinitialize(reason: 'read' | 'write', silent?: boolean): Promise<boolean>;\n\tread(resource: SyncResource, ref: string | undefined): Promise<{ ref: string; content: string } | undefined>;\n\twrite(resource: SyncResource, content: string | EditSession): Promise<string>;\n\tdelete(resource: SyncResource, ref: string | null): Promise<void>;\n\tlist(resource: SyncResource): Promise<IResourceRefHandle[]>;\n\tgetMachineById(machineId: string): Promise<string | undefined>;\n}\n\nexport const IEditSessionsLogService = createDecorator<IEditSessionsLogService>('IEditSessionsLogService');\nexport interface IEditSessionsLogService extends ILogService { }\n\nexport enum ChangeType {\n\tAddition = 1,\n\tDeletion = 2,\n}\n\nexport enum FileType {\n\tFile = 1,\n}\n\ninterface Addition {\n\trelativeFilePath: string;\n\tfileType: FileType.File;\n\tcontents: string;\n\ttype: ChangeType.Addition;\n}\n\ninterface Deletion {\n\trelativeFilePath: string;\n\tfileType: FileType.File;\n\tcontents: undefined;\n\ttype: ChangeType.Deletion;\n}\n\nexport type Change = Addition | Deletion;\n\nexport interface Folder {\n\tname: string;\n\tcanonicalIdentity: string | undefined;\n\tworkingChanges: Change[];\n\tabsoluteUri: string | undefined;\n}\n\nexport const EditSessionSchemaVersion = 3;\n\nexport interface EditSession {\n\tversion: number;\n\tworkspaceStateId?: string;\n\tmachine?: string;\n\tfolders: Folder[];\n}\n\nexport const EDIT_SESSIONS_SIGNED_IN_KEY = 'editSessionsSignedIn';\nexport const EDIT_SESSIONS_SIGNED_IN = new RawContextKey<boolean>(EDIT_SESSIONS_SIGNED_IN_KEY, false);\n\nexport const EDIT_SESSIONS_PENDING_KEY = 'editSessionsPending';\nexport const EDIT_SESSIONS_PENDING = new RawContextKey<boolean>(EDIT_SESSIONS_PENDING_KEY, false);\n\nexport const EDIT_SESSIONS_CONTAINER_ID = 'workbench.view.editSessions';\nexport const EDIT_SESSIONS_DATA_VIEW_ID = 'workbench.views.editSessions.data';\nexport const EDIT_SESSIONS_TITLE: ILocalizedString = localize2('cloud changes', 'Cloud Changes');\n\nexport const EDIT_SESSIONS_VIEW_ICON = registerIcon('edit-sessions-view-icon', Codicon.cloudDownload, localize('editSessionViewIcon', 'View icon of the cloud changes view.'));\n\nexport const EDIT_SESSIONS_SHOW_VIEW = new RawContextKey<boolean>('editSessionsShowView', false);\n\nexport const EDIT_SESSIONS_SCHEME = 'vscode-edit-sessions';\n\nexport function decodeEditSessionFileContent(version: number, content: string): VSBuffer {\n\tswitch (version) {\n\t\tcase 1:\n\t\t\treturn VSBuffer.fromString(content);\n\t\tcase 2:\n\t\t\treturn decodeBase64(content);\n\t\tdefault:\n\t\t\tthrow new Error('Upgrade to a newer version to decode this content.');\n\t}\n}\n\nexport function hashedEditSessionId(editSessionId: string) {\n\tconst sha1 = new StringSHA1();\n\tsha1.update(editSessionId);\n\treturn sha1.digest();\n}\n\nexport const editSessionsLogId = 'editSessions';\n"],
  "mappings": ";;AAKA,SAAS,cAAc,gBAAgB;AACvC,SAAS,eAAe;AACxB,SAAS,UAAU,iBAAiB;AACpC,SAAS,wBAAwB;AACjC,SAAS,qBAAqB;AAC9B,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B;AACnC,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,+BAA+B;AAEjC,MAAM,6BAA6B,UAAU,iBAAiB,eAAe;AAI7E,MAAM,8BAA8B,gBAA6C,6BAA6B;AAuB9G,MAAM,0BAA0B,gBAAyC,yBAAyB;AAGlG,IAAK,aAAL,kBAAKA,gBAAL;AACN,EAAAA,wBAAA,cAAW,KAAX;AACA,EAAAA,wBAAA,cAAW,KAAX;AAFW,SAAAA;AAAA,GAAA;AAKL,IAAK,WAAL,kBAAKC,cAAL;AACN,EAAAA,oBAAA,UAAO,KAAP;AADW,SAAAA;AAAA,GAAA;AA2BL,MAAM,2BAA2B;AASjC,MAAM,8BAA8B;AACpC,MAAM,0BAA0B,IAAI,cAAuB,6BAA6B,KAAK;AAE7F,MAAM,4BAA4B;AAClC,MAAM,wBAAwB,IAAI,cAAuB,2BAA2B,KAAK;AAEzF,MAAM,6BAA6B;AACnC,MAAM,6BAA6B;AACnC,MAAM,sBAAwC,UAAU,iBAAiB,eAAe;AAExF,MAAM,0BAA0B,aAAa,2BAA2B,QAAQ,eAAe,SAAS,uBAAuB,sCAAsC,CAAC;AAEtK,MAAM,0BAA0B,IAAI,cAAuB,wBAAwB,KAAK;AAExF,MAAM,uBAAuB;AAE7B,SAAS,6BAA6B,SAAiB,SAA2B;AACxF,UAAQ,SAAS;AAAA,IAChB,KAAK;AACJ,aAAO,SAAS,WAAW,OAAO;AAAA,IACnC,KAAK;AACJ,aAAO,aAAa,OAAO;AAAA,IAC5B;AACC,YAAM,IAAI,MAAM,oDAAoD;AAAA,EACtE;AACD;AATgB;AAWT,SAAS,oBAAoB,eAAuB;AAC1D,QAAM,OAAO,IAAI,WAAW;AAC5B,OAAK,OAAO,aAAa;AACzB,SAAO,KAAK,OAAO;AACpB;AAJgB;AAMT,MAAM,oBAAoB;",
  "names": ["ChangeType", "FileType"]
}
