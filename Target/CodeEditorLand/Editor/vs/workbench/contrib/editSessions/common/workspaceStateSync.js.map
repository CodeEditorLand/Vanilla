{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/editSessions/common/workspaceStateSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { IStringDictionary } from '../../../../base/common/collections.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { parse, stringify } from '../../../../base/common/marshalling.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IStorageEntry, IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfile } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { AbstractSynchroniser, IAcceptResult, IMergeResult, IResourcePreview, ISyncResourcePreview } from '../../../../platform/userDataSync/common/abstractSynchronizer.js';\nimport { IRemoteUserData, IResourceRefHandle, IUserDataSyncLocalStoreService, IUserDataSyncConfiguration, IUserDataSyncEnablementService, IUserDataSyncLogService, IUserDataSyncStoreService, IUserDataSynchroniser, IWorkspaceState, SyncResource } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { EditSession, IEditSessionsStorageService } from './editSessions.js';\nimport { IWorkspaceIdentityService } from '../../../services/workspaces/common/workspaceIdentityService.js';\n\n\nclass NullBackupStoreService implements IUserDataSyncLocalStoreService {\n\t_serviceBrand: undefined;\n\tasync writeResource(): Promise<void> {\n\t\treturn;\n\t}\n\tasync getAllResourceRefs(): Promise<IResourceRefHandle[]> {\n\t\treturn [];\n\t}\n\tasync resolveResourceContent(): Promise<string | null> {\n\t\treturn null;\n\t}\n\n}\n\nclass NullEnablementService implements IUserDataSyncEnablementService {\n\t_serviceBrand: any;\n\n\tprivate _onDidChangeEnablement = new Emitter<boolean>();\n\treadonly onDidChangeEnablement: Event<boolean> = this._onDidChangeEnablement.event;\n\n\tprivate _onDidChangeResourceEnablement = new Emitter<[SyncResource, boolean]>();\n\treadonly onDidChangeResourceEnablement: Event<[SyncResource, boolean]> = this._onDidChangeResourceEnablement.event;\n\n\tisEnabled(): boolean { return true; }\n\tcanToggleEnablement(): boolean { return true; }\n\tsetEnablement(_enabled: boolean): void { }\n\tisResourceEnabled(_resource: SyncResource): boolean { return true; }\n\tsetResourceEnablement(_resource: SyncResource, _enabled: boolean): void { }\n\tgetResourceSyncStateVersion(_resource: SyncResource): string | undefined { return undefined; }\n\n}\n\nexport class WorkspaceStateSynchroniser extends AbstractSynchroniser implements IUserDataSynchroniser {\n\tprotected override version: number = 1;\n\n\tconstructor(\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\tuserDataSyncStoreService: IUserDataSyncStoreService,\n\t\tlogService: IUserDataSyncLogService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceIdentityService private readonly workspaceIdentityService: IWorkspaceIdentityService,\n\t\t@IEditSessionsStorageService private readonly editSessionsStorageService: IEditSessionsStorageService,\n\t) {\n\t\tconst userDataSyncLocalStoreService = new NullBackupStoreService();\n\t\tconst userDataSyncEnablementService = new NullEnablementService();\n\t\tsuper({ syncResource: SyncResource.WorkspaceState, profile }, collection, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncLocalStoreService, userDataSyncEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t}\n\n\toverride async sync(): Promise<void> {\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tconst folders = await this.workspaceIdentityService.getWorkspaceStateFolders(cancellationTokenSource.token);\n\t\tif (!folders.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure we have latest state by sending out onWillSaveState event\n\t\tawait this.storageService.flush();\n\n\t\tconst keys = this.storageService.keys(StorageScope.WORKSPACE, StorageTarget.USER);\n\t\tif (!keys.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst contributedData: IStringDictionary<string> = {};\n\t\tkeys.forEach((key) => {\n\t\t\tconst data = this.storageService.get(key, StorageScope.WORKSPACE);\n\t\t\tif (data) {\n\t\t\t\tcontributedData[key] = data;\n\t\t\t}\n\t\t});\n\n\t\tconst content: IWorkspaceState = { folders, storage: contributedData, version: this.version };\n\t\tawait this.editSessionsStorageService.write('workspaceState', stringify(content));\n\t}\n\n\toverride async apply(): Promise<ISyncResourcePreview | null> {\n\t\tconst payload = this.editSessionsStorageService.lastReadResources.get('editSessions')?.content;\n\t\tconst workspaceStateId = payload ? (JSON.parse(payload) as EditSession).workspaceStateId : undefined;\n\n\t\tconst resource = await this.editSessionsStorageService.read('workspaceState', workspaceStateId);\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst remoteWorkspaceState: IWorkspaceState = parse(resource.content);\n\t\tif (!remoteWorkspaceState) {\n\t\t\tthis.logService.info('Skipping initializing workspace state because remote workspace state does not exist.');\n\t\t\treturn null;\n\t\t}\n\n\t\t// Evaluate whether storage is applicable for current workspace\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tconst replaceUris = await this.workspaceIdentityService.matches(remoteWorkspaceState.folders, cancellationTokenSource.token);\n\t\tif (!replaceUris) {\n\t\t\tthis.logService.info('Skipping initializing workspace state because remote workspace state does not match current workspace.');\n\t\t\treturn null;\n\t\t}\n\n\t\tconst storage: IStringDictionary<any> = {};\n\t\tfor (const key of Object.keys(remoteWorkspaceState.storage)) {\n\t\t\tstorage[key] = remoteWorkspaceState.storage[key];\n\t\t}\n\n\t\tif (Object.keys(storage).length) {\n\t\t\t// Initialize storage with remote storage\n\t\t\tconst storageEntries: Array<IStorageEntry> = [];\n\t\t\tfor (const key of Object.keys(storage)) {\n\t\t\t\t// Deserialize the stored state\n\t\t\t\ttry {\n\t\t\t\t\tconst value = parse(storage[key]);\n\t\t\t\t\t// Run URI conversion on the stored state\n\t\t\t\t\treplaceUris(value);\n\t\t\t\t\tstorageEntries.push({ key, value, scope: StorageScope.WORKSPACE, target: StorageTarget.USER });\n\t\t\t\t} catch {\n\t\t\t\t\tstorageEntries.push({ key, value: storage[key], scope: StorageScope.WORKSPACE, target: StorageTarget.USER });\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.storageService.storeAll(storageEntries, true);\n\t\t}\n\n\t\tthis.editSessionsStorageService.delete('workspaceState', resource.ref);\n\t\treturn null;\n\t}\n\n\t// TODO@joyceerhl implement AbstractSynchronizer in full\n\tprotected override applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, result: [IResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tprotected override async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration, token: CancellationToken): Promise<IResourcePreview[]> {\n\t\treturn [];\n\t}\n\tprotected override getMergeResult(resourcePreview: IResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tprotected override getAcceptResult(resourcePreview: IResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tprotected override async hasRemoteChanged(lastSyncUserData: IRemoteUserData): Promise<boolean> {\n\t\treturn true;\n\t}\n\toverride async hasLocalData(): Promise<boolean> {\n\t\treturn false;\n\t}\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\treturn null;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
