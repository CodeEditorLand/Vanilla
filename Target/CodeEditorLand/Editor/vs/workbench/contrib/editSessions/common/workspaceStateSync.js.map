{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/editSessions/common/workspaceStateSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport type { IStringDictionary } from \"../../../../base/common/collections.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { parse, stringify } from \"../../../../base/common/marshalling.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport {\n\ttype IStorageEntry,\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport type { IUserDataProfile } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tAbstractSynchroniser,\n\ttype IAcceptResult,\n\ttype IMergeResult,\n\ttype IResourcePreview,\n\ttype ISyncResourcePreview,\n} from \"../../../../platform/userDataSync/common/abstractSynchronizer.js\";\nimport {\n\ttype IRemoteUserData,\n\ttype IResourceRefHandle,\n\ttype IUserDataSyncConfiguration,\n\ttype IUserDataSyncEnablementService,\n\ttype IUserDataSyncLocalStoreService,\n\ttype IUserDataSyncLogService,\n\ttype IUserDataSyncStoreService,\n\ttype IUserDataSynchroniser,\n\ttype IWorkspaceState,\n\tSyncResource,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { IWorkspaceIdentityService } from \"../../../services/workspaces/common/workspaceIdentityService.js\";\nimport {\n\ttype EditSession,\n\tIEditSessionsStorageService,\n} from \"./editSessions.js\";\n\nclass NullBackupStoreService implements IUserDataSyncLocalStoreService {\n\t_serviceBrand: undefined;\n\tasync writeResource(): Promise<void> {\n\t\treturn;\n\t}\n\tasync getAllResourceRefs(): Promise<IResourceRefHandle[]> {\n\t\treturn [];\n\t}\n\tasync resolveResourceContent(): Promise<string | null> {\n\t\treturn null;\n\t}\n}\n\nclass NullEnablementService implements IUserDataSyncEnablementService {\n\t_serviceBrand: any;\n\n\tprivate _onDidChangeEnablement = new Emitter<boolean>();\n\treadonly onDidChangeEnablement: Event<boolean> =\n\t\tthis._onDidChangeEnablement.event;\n\n\tprivate _onDidChangeResourceEnablement = new Emitter<\n\t\t[SyncResource, boolean]\n\t>();\n\treadonly onDidChangeResourceEnablement: Event<[SyncResource, boolean]> =\n\t\tthis._onDidChangeResourceEnablement.event;\n\n\tisEnabled(): boolean {\n\t\treturn true;\n\t}\n\tcanToggleEnablement(): boolean {\n\t\treturn true;\n\t}\n\tsetEnablement(_enabled: boolean): void {}\n\tisResourceEnabled(_resource: SyncResource): boolean {\n\t\treturn true;\n\t}\n\tsetResourceEnablement(_resource: SyncResource, _enabled: boolean): void {}\n\tgetResourceSyncStateVersion(_resource: SyncResource): string | undefined {\n\t\treturn undefined;\n\t}\n}\n\nexport class WorkspaceStateSynchroniser\n\textends AbstractSynchroniser\n\timplements IUserDataSynchroniser\n{\n\tprotected override version = 1;\n\n\tconstructor(\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\tuserDataSyncStoreService: IUserDataSyncStoreService,\n\t\tlogService: IUserDataSyncLogService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceIdentityService\n\t\tprivate readonly workspaceIdentityService: IWorkspaceIdentityService,\n\t\t@IEditSessionsStorageService\n\t\tprivate readonly editSessionsStorageService: IEditSessionsStorageService,\n\t) {\n\t\tconst userDataSyncLocalStoreService = new NullBackupStoreService();\n\t\tconst userDataSyncEnablementService = new NullEnablementService();\n\t\tsuper(\n\t\t\t{ syncResource: SyncResource.WorkspaceState, profile },\n\t\t\tcollection,\n\t\t\tfileService,\n\t\t\tenvironmentService,\n\t\t\tstorageService,\n\t\t\tuserDataSyncStoreService,\n\t\t\tuserDataSyncLocalStoreService,\n\t\t\tuserDataSyncEnablementService,\n\t\t\ttelemetryService,\n\t\t\tlogService,\n\t\t\tconfigurationService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\toverride async sync(): Promise<void> {\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tconst folders =\n\t\t\tawait this.workspaceIdentityService.getWorkspaceStateFolders(\n\t\t\t\tcancellationTokenSource.token,\n\t\t\t);\n\t\tif (!folders.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure we have latest state by sending out onWillSaveState event\n\t\tawait this.storageService.flush();\n\n\t\tconst keys = this.storageService.keys(\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t\tif (!keys.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst contributedData: IStringDictionary<string> = {};\n\t\tkeys.forEach((key) => {\n\t\t\tconst data = this.storageService.get(key, StorageScope.WORKSPACE);\n\t\t\tif (data) {\n\t\t\t\tcontributedData[key] = data;\n\t\t\t}\n\t\t});\n\n\t\tconst content: IWorkspaceState = {\n\t\t\tfolders,\n\t\t\tstorage: contributedData,\n\t\t\tversion: this.version,\n\t\t};\n\t\tawait this.editSessionsStorageService.write(\n\t\t\t\"workspaceState\",\n\t\t\tstringify(content),\n\t\t);\n\t}\n\n\toverride async apply(): Promise<ISyncResourcePreview | null> {\n\t\tconst payload =\n\t\t\tthis.editSessionsStorageService.lastReadResources.get(\n\t\t\t\t\"editSessions\",\n\t\t\t)?.content;\n\t\tconst workspaceStateId = payload\n\t\t\t? (JSON.parse(payload) as EditSession).workspaceStateId\n\t\t\t: undefined;\n\n\t\tconst resource = await this.editSessionsStorageService.read(\n\t\t\t\"workspaceState\",\n\t\t\tworkspaceStateId,\n\t\t);\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst remoteWorkspaceState: IWorkspaceState = parse(resource.content);\n\t\tif (!remoteWorkspaceState) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing workspace state because remote workspace state does not exist.\",\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\t// Evaluate whether storage is applicable for current workspace\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tconst replaceUris = await this.workspaceIdentityService.matches(\n\t\t\tremoteWorkspaceState.folders,\n\t\t\tcancellationTokenSource.token,\n\t\t);\n\t\tif (!replaceUris) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing workspace state because remote workspace state does not match current workspace.\",\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst storage: IStringDictionary<any> = {};\n\t\tfor (const key of Object.keys(remoteWorkspaceState.storage)) {\n\t\t\tstorage[key] = remoteWorkspaceState.storage[key];\n\t\t}\n\n\t\tif (Object.keys(storage).length) {\n\t\t\t// Initialize storage with remote storage\n\t\t\tconst storageEntries: Array<IStorageEntry> = [];\n\t\t\tfor (const key of Object.keys(storage)) {\n\t\t\t\t// Deserialize the stored state\n\t\t\t\ttry {\n\t\t\t\t\tconst value = parse(storage[key]);\n\t\t\t\t\t// Run URI conversion on the stored state\n\t\t\t\t\treplaceUris(value);\n\t\t\t\t\tstorageEntries.push({\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tscope: StorageScope.WORKSPACE,\n\t\t\t\t\t\ttarget: StorageTarget.USER,\n\t\t\t\t\t});\n\t\t\t\t} catch {\n\t\t\t\t\tstorageEntries.push({\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue: storage[key],\n\t\t\t\t\t\tscope: StorageScope.WORKSPACE,\n\t\t\t\t\t\ttarget: StorageTarget.USER,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.storageService.storeAll(storageEntries, true);\n\t\t}\n\n\t\tthis.editSessionsStorageService.delete(\"workspaceState\", resource.ref);\n\t\treturn null;\n\t}\n\n\t// TODO@joyceerhl implement AbstractSynchronizer in full\n\tprotected override applyResult(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tresult: [IResourcePreview, IAcceptResult][],\n\t\tforce: boolean,\n\t): Promise<void> {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tprotected override async generateSyncPreview(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tisRemoteDataFromCurrentMachine: boolean,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t\ttoken: CancellationToken,\n\t): Promise<IResourcePreview[]> {\n\t\treturn [];\n\t}\n\tprotected override getMergeResult(\n\t\tresourcePreview: IResourcePreview,\n\t\ttoken: CancellationToken,\n\t): Promise<IMergeResult> {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tprotected override getAcceptResult(\n\t\tresourcePreview: IResourcePreview,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\ttoken: CancellationToken,\n\t): Promise<IAcceptResult> {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tprotected override async hasRemoteChanged(\n\t\tlastSyncUserData: IRemoteUserData,\n\t): Promise<boolean> {\n\t\treturn true;\n\t}\n\toverride async hasLocalData(): Promise<boolean> {\n\t\treturn false;\n\t}\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\treturn null;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
