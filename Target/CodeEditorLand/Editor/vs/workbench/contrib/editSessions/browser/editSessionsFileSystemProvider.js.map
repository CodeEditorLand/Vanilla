{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/editSessions/browser/editSessionsFileSystemProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { NotSupportedError } from \"../../../../base/common/errors.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport {\n\tFilePermission,\n\tFileSystemProviderCapabilities,\n\tFileSystemProviderErrorCode,\n\tFileType,\n\ttype IFileDeleteOptions,\n\ttype IFileOverwriteOptions,\n\ttype IFileSystemProviderWithFileReadWriteCapability,\n\ttype IStat,\n\ttype IWatchOptions,\n} from \"../../../../platform/files/common/files.js\";\nimport {\n\tChangeType,\n\tEDIT_SESSIONS_SCHEME,\n\ttype EditSession,\n\tIEditSessionsStorageService,\n\tdecodeEditSessionFileContent,\n} from \"../common/editSessions.js\";\n\nexport class EditSessionsFileSystemProvider\n\timplements IFileSystemProviderWithFileReadWriteCapability\n{\n\tstatic readonly SCHEMA = EDIT_SESSIONS_SCHEME;\n\n\tconstructor(\n\t\t@IEditSessionsStorageService\n\t\tprivate editSessionsStorageService: IEditSessionsStorageService,\n\t) {}\n\n\treadonly capabilities: FileSystemProviderCapabilities =\n\t\tFileSystemProviderCapabilities.Readonly +\n\t\tFileSystemProviderCapabilities.FileReadWrite;\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst match =\n\t\t\t/(?<ref>[^/]+)\\/(?<folderName>[^/]+)\\/(?<filePath>.*)/.exec(\n\t\t\t\tresource.path.substring(1),\n\t\t\t);\n\t\tif (!match?.groups) {\n\t\t\tthrow FileSystemProviderErrorCode.FileNotFound;\n\t\t}\n\t\tconst { ref, folderName, filePath } = match.groups;\n\t\tconst data = await this.editSessionsStorageService.read(\n\t\t\t\"editSessions\",\n\t\t\tref,\n\t\t);\n\t\tif (!data) {\n\t\t\tthrow FileSystemProviderErrorCode.FileNotFound;\n\t\t}\n\t\tconst content: EditSession = JSON.parse(data.content);\n\t\tconst change = content.folders\n\t\t\t.find((f) => f.name === folderName)\n\t\t\t?.workingChanges.find(\n\t\t\t\t(change) => change.relativeFilePath === filePath,\n\t\t\t);\n\t\tif (!change || change.type === ChangeType.Deletion) {\n\t\t\tthrow FileSystemProviderErrorCode.FileNotFound;\n\t\t}\n\t\treturn decodeEditSessionFileContent(content.version, change.contents)\n\t\t\t.buffer;\n\t}\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\tconst content = await this.readFile(resource);\n\t\tconst currentTime = Date.now();\n\t\treturn {\n\t\t\ttype: FileType.File,\n\t\t\tpermissions: FilePermission.Readonly,\n\t\t\tmtime: currentTime,\n\t\t\tctime: currentTime,\n\t\t\tsize: content.byteLength,\n\t\t};\n\t}\n\n\t//#region Unsupported file operations\n\treadonly onDidChangeCapabilities = Event.None;\n\treadonly onDidChangeFile = Event.None;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tasync mkdir(resource: URI): Promise<void> {}\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn [];\n\t}\n\n\tasync rename(\n\t\tfrom: URI,\n\t\tto: URI,\n\t\topts: IFileOverwriteOptions,\n\t): Promise<void> {}\n\tasync delete(resource: URI, opts: IFileDeleteOptions): Promise<void> {}\n\n\tasync writeFile() {\n\t\tthrow new NotSupportedError();\n\t}\n\t//#endregion\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,aAAa;AACtB;AAAA,EACC;AAAA,OAEM;AAEP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OAMM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,OACM;AAEA,IAAM,iCAAN,MAEP;AAAA,EAGC,YAES,4BACP;AADO;AAAA,EACN;AAAA,EAvCJ,OAiCA;AAAA;AAAA;AAAA,EACC,OAAgB,SAAS;AAAA,EAOhB,eACR,+BAA+B,WAC/B,+BAA+B;AAAA,EAEhC,MAAM,SAAS,UAAoC;AAClD,UAAM,QACL,uDAAuD;AAAA,MACtD,SAAS,KAAK,UAAU,CAAC;AAAA,IAC1B;AACD,QAAI,CAAC,OAAO,QAAQ;AACnB,YAAM,4BAA4B;AAAA,IACnC;AACA,UAAM,EAAE,KAAK,YAAY,SAAS,IAAI,MAAM;AAC5C,UAAM,OAAO,MAAM,KAAK,2BAA2B;AAAA,MAClD;AAAA,MACA;AAAA,IACD;AACA,QAAI,CAAC,MAAM;AACV,YAAM,4BAA4B;AAAA,IACnC;AACA,UAAM,UAAuB,KAAK,MAAM,KAAK,OAAO;AACpD,UAAM,SAAS,QAAQ,QACrB,KAAK,CAAC,MAAM,EAAE,SAAS,UAAU,GAChC,eAAe;AAAA,MAChB,CAACA,YAAWA,QAAO,qBAAqB;AAAA,IACzC;AACD,QAAI,CAAC,UAAU,OAAO,SAAS,WAAW,UAAU;AACnD,YAAM,4BAA4B;AAAA,IACnC;AACA,WAAO,6BAA6B,QAAQ,SAAS,OAAO,QAAQ,EAClE;AAAA,EACH;AAAA,EAEA,MAAM,KAAK,UAA+B;AACzC,UAAM,UAAU,MAAM,KAAK,SAAS,QAAQ;AAC5C,UAAM,cAAc,KAAK,IAAI;AAC7B,WAAO;AAAA,MACN,MAAM,SAAS;AAAA,MACf,aAAa,eAAe;AAAA,MAC5B,OAAO;AAAA,MACP,OAAO;AAAA,MACP,MAAM,QAAQ;AAAA,IACf;AAAA,EACD;AAAA;AAAA,EAGS,0BAA0B,MAAM;AAAA,EAChC,kBAAkB,MAAM;AAAA,EAEjC,MAAM,UAAe,MAAkC;AACtD,WAAO,WAAW;AAAA,EACnB;AAAA,EAEA,MAAM,MAAM,UAA8B;AAAA,EAAC;AAAA,EAC3C,MAAM,QAAQ,UAA8C;AAC3D,WAAO,CAAC;AAAA,EACT;AAAA,EAEA,MAAM,OACL,MACA,IACA,MACgB;AAAA,EAAC;AAAA,EAClB,MAAM,OAAO,UAAe,MAAyC;AAAA,EAAC;AAAA,EAEtE,MAAM,YAAY;AACjB,UAAM,IAAI,kBAAkB;AAAA,EAC7B;AAAA;AAED;AA/Ea,iCAAN;AAAA,EAMJ;AAAA,GANU;",
  "names": ["change"]
}
