{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/editSessions/browser/editSessionsFileSystemProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { FilePermission, FileSystemProviderCapabilities, FileSystemProviderErrorCode, FileType, IFileDeleteOptions, IFileOverwriteOptions, IFileSystemProviderWithFileReadWriteCapability, IStat, IWatchOptions } from '../../../../platform/files/common/files.js';\nimport { ChangeType, decodeEditSessionFileContent, EDIT_SESSIONS_SCHEME, EditSession, IEditSessionsStorageService } from '../common/editSessions.js';\nimport { NotSupportedError } from '../../../../base/common/errors.js';\n\nexport class EditSessionsFileSystemProvider implements IFileSystemProviderWithFileReadWriteCapability {\n\n\tstatic readonly SCHEMA = EDIT_SESSIONS_SCHEME;\n\n\tconstructor(\n\t\t@IEditSessionsStorageService private editSessionsStorageService: IEditSessionsStorageService,\n\t) { }\n\n\treadonly capabilities: FileSystemProviderCapabilities = FileSystemProviderCapabilities.Readonly + FileSystemProviderCapabilities.FileReadWrite;\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst match = /(?<ref>[^/]+)\\/(?<folderName>[^/]+)\\/(?<filePath>.*)/.exec(resource.path.substring(1));\n\t\tif (!match?.groups) {\n\t\t\tthrow FileSystemProviderErrorCode.FileNotFound;\n\t\t}\n\t\tconst { ref, folderName, filePath } = match.groups;\n\t\tconst data = await this.editSessionsStorageService.read('editSessions', ref);\n\t\tif (!data) {\n\t\t\tthrow FileSystemProviderErrorCode.FileNotFound;\n\t\t}\n\t\tconst content: EditSession = JSON.parse(data.content);\n\t\tconst change = content.folders.find((f) => f.name === folderName)?.workingChanges.find((change) => change.relativeFilePath === filePath);\n\t\tif (!change || change.type === ChangeType.Deletion) {\n\t\t\tthrow FileSystemProviderErrorCode.FileNotFound;\n\t\t}\n\t\treturn decodeEditSessionFileContent(content.version, change.contents).buffer;\n\t}\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\tconst content = await this.readFile(resource);\n\t\tconst currentTime = Date.now();\n\t\treturn {\n\t\t\ttype: FileType.File,\n\t\t\tpermissions: FilePermission.Readonly,\n\t\t\tmtime: currentTime,\n\t\t\tctime: currentTime,\n\t\t\tsize: content.byteLength\n\t\t};\n\t}\n\n\t//#region Unsupported file operations\n\treadonly onDidChangeCapabilities = Event.None;\n\treadonly onDidChangeFile = Event.None;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable { return Disposable.None; }\n\n\tasync mkdir(resource: URI): Promise<void> { }\n\tasync readdir(resource: URI): Promise<[string, FileType][]> { return []; }\n\n\tasync rename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> { }\n\tasync delete(resource: URI, opts: IFileDeleteOptions): Promise<void> { }\n\n\tasync writeFile() {\n\t\tthrow new NotSupportedError();\n\t}\n\t//#endregion\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,YAAY,mBAAmB;AACxC,SAAS,aAAa;AACtB,SAAS,WAAW;AACpB,SAAS,gBAAgB,gCAAgC,6BAA6B,UAAU,oBAAoB,uBAAuB,gDAAgD,OAAO,qBAAqB;AACvN,SAAS,YAAY,8BAA8B,sBAAsB,aAAa,mCAAmC;AACzH,SAAS,yBAAyB;AAE3B,IAAM,iCAAN,MAA+F;AAAA,EAIrG,YACsC,4BACpC;AADoC;AAAA,EAClC;AAAA,EAlBL,OAYsG;AAAA;AAAA;AAAA,EAErG,OAAgB,SAAS;AAAA,EAMhB,eAA+C,+BAA+B,WAAW,+BAA+B;AAAA,EAEjI,MAAM,SAAS,UAAoC;AAClD,UAAM,QAAQ,uDAAuD,KAAK,SAAS,KAAK,UAAU,CAAC,CAAC;AACpG,QAAI,CAAC,OAAO,QAAQ;AACnB,YAAM,4BAA4B;AAAA,IACnC;AACA,UAAM,EAAE,KAAK,YAAY,SAAS,IAAI,MAAM;AAC5C,UAAM,OAAO,MAAM,KAAK,2BAA2B,KAAK,gBAAgB,GAAG;AAC3E,QAAI,CAAC,MAAM;AACV,YAAM,4BAA4B;AAAA,IACnC;AACA,UAAM,UAAuB,KAAK,MAAM,KAAK,OAAO;AACpD,UAAM,SAAS,QAAQ,QAAQ,KAAK,CAAC,MAAM,EAAE,SAAS,UAAU,GAAG,eAAe,KAAK,CAACA,YAAWA,QAAO,qBAAqB,QAAQ;AACvI,QAAI,CAAC,UAAU,OAAO,SAAS,WAAW,UAAU;AACnD,YAAM,4BAA4B;AAAA,IACnC;AACA,WAAO,6BAA6B,QAAQ,SAAS,OAAO,QAAQ,EAAE;AAAA,EACvE;AAAA,EAEA,MAAM,KAAK,UAA+B;AACzC,UAAM,UAAU,MAAM,KAAK,SAAS,QAAQ;AAC5C,UAAM,cAAc,KAAK,IAAI;AAC7B,WAAO;AAAA,MACN,MAAM,SAAS;AAAA,MACf,aAAa,eAAe;AAAA,MAC5B,OAAO;AAAA,MACP,OAAO;AAAA,MACP,MAAM,QAAQ;AAAA,IACf;AAAA,EACD;AAAA;AAAA,EAGS,0BAA0B,MAAM;AAAA,EAChC,kBAAkB,MAAM;AAAA,EAEjC,MAAM,UAAe,MAAkC;AAAE,WAAO,WAAW;AAAA,EAAM;AAAA,EAEjF,MAAM,MAAM,UAA8B;AAAA,EAAE;AAAA,EAC5C,MAAM,QAAQ,UAA8C;AAAE,WAAO,CAAC;AAAA,EAAG;AAAA,EAEzE,MAAM,OAAO,MAAW,IAAS,MAA4C;AAAA,EAAE;AAAA,EAC/E,MAAM,OAAO,UAAe,MAAyC;AAAA,EAAE;AAAA,EAEvE,MAAM,YAAY;AACjB,UAAM,IAAI,kBAAkB;AAAA,EAC7B;AAAA;AAED;AAxDa,iCAAN;AAAA,EAKJ;AAAA,GALU;",
  "names": ["change"]
}
