{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/editSessions/browser/editSessionsViews.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { TreeView, TreeViewPane } from '../../../browser/parts/views/treeView.js';\nimport { Extensions, ITreeItem, ITreeViewDataProvider, ITreeViewDescriptor, IViewsRegistry, TreeItemCollapsibleState, TreeViewItemHandleArg, ViewContainer } from '../../../common/views.js';\nimport { ChangeType, EDIT_SESSIONS_DATA_VIEW_ID, EDIT_SESSIONS_SCHEME, EDIT_SESSIONS_SHOW_VIEW, EDIT_SESSIONS_TITLE, EditSession, IEditSessionsStorageService } from '../common/editSessions.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { fromNow } from '../../../../base/common/date.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { API_OPEN_EDITOR_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { registerAction2, Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { basename } from '../../../../base/common/path.js';\n\nconst EDIT_SESSIONS_COUNT_KEY = 'editSessionsCount';\nconst EDIT_SESSIONS_COUNT_CONTEXT_KEY = new RawContextKey<number>(EDIT_SESSIONS_COUNT_KEY, 0);\n\nexport class EditSessionsDataViews extends Disposable {\n\tconstructor(\n\t\tcontainer: ViewContainer,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.registerViews(container);\n\t}\n\n\tprivate registerViews(container: ViewContainer): void {\n\t\tconst viewId = EDIT_SESSIONS_DATA_VIEW_ID;\n\t\tconst treeView = this.instantiationService.createInstance(TreeView, viewId, EDIT_SESSIONS_TITLE.value);\n\t\ttreeView.showCollapseAllAction = true;\n\t\ttreeView.showRefreshAction = true;\n\t\ttreeView.dataProvider = this.instantiationService.createInstance(EditSessionDataViewDataProvider);\n\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tviewsRegistry.registerViews([<ITreeViewDescriptor>{\n\t\t\tid: viewId,\n\t\t\tname: EDIT_SESSIONS_TITLE,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\twhen: ContextKeyExpr.and(EDIT_SESSIONS_SHOW_VIEW),\n\t\t\torder: 100,\n\t\t\thideByDefault: true,\n\t\t}], container);\n\n\t\tviewsRegistry.registerViewWelcomeContent(viewId, {\n\t\t\tcontent: localize(\n\t\t\t\t'noStoredChanges',\n\t\t\t\t'You have no stored changes in the cloud to display.\\n{0}',\n\t\t\t\t`[${localize('storeWorkingChangesTitle', 'Store Working Changes')}](command:workbench.editSessions.actions.store)`,\n\t\t\t),\n\t\t\twhen: ContextKeyExpr.equals(EDIT_SESSIONS_COUNT_KEY, 0),\n\t\t\torder: 1\n\t\t});\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.resume',\n\t\t\t\t\ttitle: localize('workbench.editSessions.actions.resume.v2', \"Resume Working Changes\"),\n\t\t\t\t\ticon: Codicon.desktopDownload,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', viewId), ContextKeyExpr.regex('viewItem', /edit-session/i)),\n\t\t\t\t\t\tgroup: 'inline'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst editSessionId = URI.parse(handle.$treeItemHandle).path.substring(1);\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\tawait commandService.executeCommand('workbench.editSessions.actions.resumeLatest', editSessionId, true);\n\t\t\t\tawait treeView.refresh();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.store',\n\t\t\t\t\ttitle: localize('workbench.editSessions.actions.store.v2', \"Store Working Changes\"),\n\t\t\t\t\ticon: Codicon.cloudUpload,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\tawait commandService.executeCommand('workbench.editSessions.actions.storeCurrent');\n\t\t\t\tawait treeView.refresh();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.delete',\n\t\t\t\t\ttitle: localize('workbench.editSessions.actions.delete.v2', \"Delete Working Changes\"),\n\t\t\t\t\ticon: Codicon.trash,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', viewId), ContextKeyExpr.regex('viewItem', /edit-session/i)),\n\t\t\t\t\t\tgroup: 'inline'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst editSessionId = URI.parse(handle.$treeItemHandle).path.substring(1);\n\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\tconst editSessionStorageService = accessor.get(IEditSessionsStorageService);\n\t\t\t\tconst result = await dialogService.confirm({\n\t\t\t\t\tmessage: localize('confirm delete.v2', 'Are you sure you want to permanently delete your working changes with ref {0}?', editSessionId),\n\t\t\t\t\tdetail: localize('confirm delete detail.v2', ' You cannot undo this action.'),\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\ttitle: EDIT_SESSIONS_TITLE.value\n\t\t\t\t});\n\t\t\t\tif (result.confirmed) {\n\t\t\t\t\tawait editSessionStorageService.delete('editSessions', editSessionId);\n\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.deleteAll',\n\t\t\t\t\ttitle: localize('workbench.editSessions.actions.deleteAll', \"Delete All Working Changes from Cloud\"),\n\t\t\t\t\ticon: Codicon.trash,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', viewId), ContextKeyExpr.greater(EDIT_SESSIONS_COUNT_KEY, 0)),\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\tconst editSessionStorageService = accessor.get(IEditSessionsStorageService);\n\t\t\t\tconst result = await dialogService.confirm({\n\t\t\t\t\tmessage: localize('confirm delete all', 'Are you sure you want to permanently delete all stored changes from the cloud?'),\n\t\t\t\t\tdetail: localize('confirm delete all detail', ' You cannot undo this action.'),\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\ttitle: EDIT_SESSIONS_TITLE.value\n\t\t\t\t});\n\t\t\t\tif (result.confirmed) {\n\t\t\t\t\tawait editSessionStorageService.delete('editSessions', null);\n\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n}\n\nclass EditSessionDataViewDataProvider implements ITreeViewDataProvider {\n\n\tprivate editSessionsCount;\n\n\tconstructor(\n\t\t@IEditSessionsStorageService private readonly editSessionsStorageService: IEditSessionsStorageService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tthis.editSessionsCount = EDIT_SESSIONS_COUNT_CONTEXT_KEY.bindTo(this.contextKeyService);\n\t}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\treturn this.getAllEditSessions();\n\t\t}\n\n\t\tconst [ref, folderName, filePath] = URI.parse(element.handle).path.substring(1).split('/');\n\n\t\tif (ref && !folderName) {\n\t\t\treturn this.getEditSession(ref);\n\t\t} else if (ref && folderName && !filePath) {\n\t\t\treturn this.getEditSessionFolderContents(ref, folderName);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate async getAllEditSessions(): Promise<ITreeItem[]> {\n\t\tconst allEditSessions = await this.editSessionsStorageService.list('editSessions');\n\t\tthis.editSessionsCount.set(allEditSessions.length);\n\t\tconst editSessions = [];\n\n\t\tfor (const session of allEditSessions) {\n\t\t\tconst resource = URI.from({ scheme: EDIT_SESSIONS_SCHEME, authority: 'remote-session-content', path: `/${session.ref}` });\n\t\t\tconst sessionData = await this.editSessionsStorageService.read('editSessions', session.ref);\n\t\t\tif (!sessionData) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst content: EditSession = JSON.parse(sessionData.content);\n\t\t\tconst label = content.folders.map((folder) => folder.name).join(', ') ?? session.ref;\n\t\t\tconst machineId = content.machine;\n\t\t\tconst machineName = machineId ? await this.editSessionsStorageService.getMachineById(machineId) : undefined;\n\t\t\tconst description = machineName === undefined ? fromNow(session.created, true) : `${fromNow(session.created, true)}\\u00a0\\u00a0\\u2022\\u00a0\\u00a0${machineName}`;\n\n\t\t\teditSessions.push({\n\t\t\t\thandle: resource.toString(),\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: { label },\n\t\t\t\tdescription: description,\n\t\t\t\tthemeIcon: Codicon.repo,\n\t\t\t\tcontextValue: `edit-session`\n\t\t\t});\n\t\t}\n\n\t\treturn editSessions;\n\t}\n\n\tprivate async getEditSession(ref: string): Promise<ITreeItem[]> {\n\t\tconst data = await this.editSessionsStorageService.read('editSessions', ref);\n\n\t\tif (!data) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content: EditSession = JSON.parse(data.content);\n\n\t\tif (content.folders.length === 1) {\n\t\t\tconst folder = content.folders[0];\n\t\t\treturn this.getEditSessionFolderContents(ref, folder.name);\n\t\t}\n\n\t\treturn content.folders.map((folder) => {\n\t\t\tconst resource = URI.from({ scheme: EDIT_SESSIONS_SCHEME, authority: 'remote-session-content', path: `/${data.ref}/${folder.name}` });\n\t\t\treturn {\n\t\t\t\thandle: resource.toString(),\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: { label: folder.name },\n\t\t\t\tthemeIcon: Codicon.folder\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate async getEditSessionFolderContents(ref: string, folderName: string): Promise<ITreeItem[]> {\n\t\tconst data = await this.editSessionsStorageService.read('editSessions', ref);\n\n\t\tif (!data) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content: EditSession = JSON.parse(data.content);\n\n\t\tconst currentWorkspaceFolder = this.workspaceContextService.getWorkspace().folders.find((folder) => folder.name === folderName);\n\t\tconst editSessionFolder = content.folders.find((folder) => folder.name === folderName);\n\n\t\tif (!editSessionFolder) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Promise.all(editSessionFolder.workingChanges.map(async (change) => {\n\t\t\tconst cloudChangeUri = URI.from({ scheme: EDIT_SESSIONS_SCHEME, authority: 'remote-session-content', path: `/${data.ref}/${folderName}/${change.relativeFilePath}` });\n\n\t\t\tif (currentWorkspaceFolder?.uri) {\n\t\t\t\t// find the corresponding file in the workspace\n\t\t\t\tconst localCopy = joinPath(currentWorkspaceFolder.uri, change.relativeFilePath);\n\t\t\t\tif (change.type === ChangeType.Addition && await this.fileService.exists(localCopy)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\thandle: cloudChangeUri.toString(),\n\t\t\t\t\t\tresourceUri: cloudChangeUri,\n\t\t\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\t\t\tlabel: { label: change.relativeFilePath },\n\t\t\t\t\t\tthemeIcon: Codicon.file,\n\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\tid: 'vscode.diff',\n\t\t\t\t\t\t\ttitle: localize('compare changes', 'Compare Changes'),\n\t\t\t\t\t\t\targuments: [\n\t\t\t\t\t\t\t\tlocalCopy,\n\t\t\t\t\t\t\t\tcloudChangeUri,\n\t\t\t\t\t\t\t\t`${basename(change.relativeFilePath)} (${localize('local copy', 'Local Copy')} \\u2194 ${localize('cloud changes', 'Cloud Changes')})`,\n\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\thandle: cloudChangeUri.toString(),\n\t\t\t\tresourceUri: cloudChangeUri,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tlabel: { label: change.relativeFilePath },\n\t\t\t\tthemeIcon: Codicon.file,\n\t\t\t\tcommand: {\n\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\ttitle: localize('open file', 'Open File'),\n\t\t\t\t\targuments: [cloudChangeUri, undefined, undefined]\n\t\t\t\t}\n\t\t\t};\n\t\t}));\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
