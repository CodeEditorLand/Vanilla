{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/editSessions/browser/editSessionsViews.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { fromNow } from \"../../../../base/common/date.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { basename } from \"../../../../base/common/path.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport { API_OPEN_EDITOR_COMMAND_ID } from \"../../../browser/parts/editor/editorCommands.js\";\nimport {\n\tTreeView,\n\tTreeViewPane,\n} from \"../../../browser/parts/views/treeView.js\";\nimport {\n\tExtensions,\n\ttype ITreeItem,\n\ttype ITreeViewDataProvider,\n\ttype ITreeViewDescriptor,\n\ttype IViewsRegistry,\n\tTreeItemCollapsibleState,\n\ttype TreeViewItemHandleArg,\n\ttype ViewContainer,\n} from \"../../../common/views.js\";\nimport {\n\tChangeType,\n\tEDIT_SESSIONS_DATA_VIEW_ID,\n\tEDIT_SESSIONS_SCHEME,\n\tEDIT_SESSIONS_SHOW_VIEW,\n\tEDIT_SESSIONS_TITLE,\n\ttype EditSession,\n\tIEditSessionsStorageService,\n} from \"../common/editSessions.js\";\n\nconst EDIT_SESSIONS_COUNT_KEY = \"editSessionsCount\";\nconst EDIT_SESSIONS_COUNT_CONTEXT_KEY = new RawContextKey<number>(\n\tEDIT_SESSIONS_COUNT_KEY,\n\t0,\n);\n\nexport class EditSessionsDataViews extends Disposable {\n\tconstructor(\n\t\tcontainer: ViewContainer,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.registerViews(container);\n\t}\n\n\tprivate registerViews(container: ViewContainer): void {\n\t\tconst viewId = EDIT_SESSIONS_DATA_VIEW_ID;\n\t\tconst treeView = this.instantiationService.createInstance(\n\t\t\tTreeView,\n\t\t\tviewId,\n\t\t\tEDIT_SESSIONS_TITLE.value,\n\t\t);\n\t\ttreeView.showCollapseAllAction = true;\n\t\ttreeView.showRefreshAction = true;\n\t\ttreeView.dataProvider = this.instantiationService.createInstance(\n\t\t\tEditSessionDataViewDataProvider,\n\t\t);\n\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(\n\t\t\tExtensions.ViewsRegistry,\n\t\t);\n\t\tviewsRegistry.registerViews(\n\t\t\t[\n\t\t\t\t<ITreeViewDescriptor>{\n\t\t\t\t\tid: viewId,\n\t\t\t\t\tname: EDIT_SESSIONS_TITLE,\n\t\t\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\t\t\tcanToggleVisibility: true,\n\t\t\t\t\tcanMoveView: false,\n\t\t\t\t\ttreeView,\n\t\t\t\t\tcollapsed: false,\n\t\t\t\t\twhen: ContextKeyExpr.and(EDIT_SESSIONS_SHOW_VIEW),\n\t\t\t\t\torder: 100,\n\t\t\t\t\thideByDefault: true,\n\t\t\t\t},\n\t\t\t],\n\t\t\tcontainer,\n\t\t);\n\n\t\tviewsRegistry.registerViewWelcomeContent(viewId, {\n\t\t\tcontent: localize(\n\t\t\t\t\"noStoredChanges\",\n\t\t\t\t\"You have no stored changes in the cloud to display.\\n{0}\",\n\t\t\t\t`[${localize(\"storeWorkingChangesTitle\", \"Store Working Changes\")}](command:workbench.editSessions.actions.store)`,\n\t\t\t),\n\t\t\twhen: ContextKeyExpr.equals(EDIT_SESSIONS_COUNT_KEY, 0),\n\t\t\torder: 1,\n\t\t});\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.editSessions.actions.resume\",\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.editSessions.actions.resume.v2\",\n\t\t\t\t\t\t\t\t\"Resume Working Changes\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ticon: Codicon.desktopDownload,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\"view\", viewId),\n\t\t\t\t\t\t\t\t\tContextKeyExpr.regex(\n\t\t\t\t\t\t\t\t\t\t\"viewItem\",\n\t\t\t\t\t\t\t\t\t\t/edit-session/i,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tgroup: \"inline\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\thandle: TreeViewItemHandleArg,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst editSessionId = URI.parse(\n\t\t\t\t\t\t\thandle.$treeItemHandle,\n\t\t\t\t\t\t).path.substring(1);\n\t\t\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\t\t\tawait commandService.executeCommand(\n\t\t\t\t\t\t\t\"workbench.editSessions.actions.resumeLatest\",\n\t\t\t\t\t\t\teditSessionId,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.editSessions.actions.store\",\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.editSessions.actions.store.v2\",\n\t\t\t\t\t\t\t\t\"Store Working Changes\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ticon: Codicon.cloudUpload,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\thandle: TreeViewItemHandleArg,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\t\t\tawait commandService.executeCommand(\n\t\t\t\t\t\t\t\"workbench.editSessions.actions.storeCurrent\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.editSessions.actions.delete\",\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.editSessions.actions.delete.v2\",\n\t\t\t\t\t\t\t\t\"Delete Working Changes\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ticon: Codicon.trash,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\"view\", viewId),\n\t\t\t\t\t\t\t\t\tContextKeyExpr.regex(\n\t\t\t\t\t\t\t\t\t\t\"viewItem\",\n\t\t\t\t\t\t\t\t\t\t/edit-session/i,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tgroup: \"inline\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\thandle: TreeViewItemHandleArg,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst editSessionId = URI.parse(\n\t\t\t\t\t\t\thandle.$treeItemHandle,\n\t\t\t\t\t\t).path.substring(1);\n\t\t\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\t\t\tconst editSessionStorageService = accessor.get(\n\t\t\t\t\t\t\tIEditSessionsStorageService,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst result = await dialogService.confirm({\n\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\"confirm delete.v2\",\n\t\t\t\t\t\t\t\t\"Are you sure you want to permanently delete your working changes with ref {0}?\",\n\t\t\t\t\t\t\t\teditSessionId,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tdetail: localize(\n\t\t\t\t\t\t\t\t\"confirm delete detail.v2\",\n\t\t\t\t\t\t\t\t\" You cannot undo this action.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\t\t\ttitle: EDIT_SESSIONS_TITLE.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (result.confirmed) {\n\t\t\t\t\t\t\tawait editSessionStorageService.delete(\n\t\t\t\t\t\t\t\t\"editSessions\",\n\t\t\t\t\t\t\t\teditSessionId,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.editSessions.actions.deleteAll\",\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.editSessions.actions.deleteAll\",\n\t\t\t\t\t\t\t\t\"Delete All Working Changes from Cloud\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ticon: Codicon.trash,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\"view\", viewId),\n\t\t\t\t\t\t\t\t\tContextKeyExpr.greater(\n\t\t\t\t\t\t\t\t\t\tEDIT_SESSIONS_COUNT_KEY,\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\t\t\tconst editSessionStorageService = accessor.get(\n\t\t\t\t\t\t\tIEditSessionsStorageService,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst result = await dialogService.confirm({\n\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\"confirm delete all\",\n\t\t\t\t\t\t\t\t\"Are you sure you want to permanently delete all stored changes from the cloud?\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tdetail: localize(\n\t\t\t\t\t\t\t\t\"confirm delete all detail\",\n\t\t\t\t\t\t\t\t\" You cannot undo this action.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\t\t\ttitle: EDIT_SESSIONS_TITLE.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (result.confirmed) {\n\t\t\t\t\t\t\tawait editSessionStorageService.delete(\n\t\t\t\t\t\t\t\t\"editSessions\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n\nclass EditSessionDataViewDataProvider implements ITreeViewDataProvider {\n\tprivate editSessionsCount;\n\n\tconstructor(\n\t\t@IEditSessionsStorageService\n\t\tprivate readonly editSessionsStorageService: IEditSessionsStorageService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tthis.editSessionsCount = EDIT_SESSIONS_COUNT_CONTEXT_KEY.bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\t}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\treturn this.getAllEditSessions();\n\t\t}\n\n\t\tconst [ref, folderName, filePath] = URI.parse(element.handle)\n\t\t\t.path.substring(1)\n\t\t\t.split(\"/\");\n\n\t\tif (ref && !folderName) {\n\t\t\treturn this.getEditSession(ref);\n\t\t} else if (ref && folderName && !filePath) {\n\t\t\treturn this.getEditSessionFolderContents(ref, folderName);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate async getAllEditSessions(): Promise<ITreeItem[]> {\n\t\tconst allEditSessions =\n\t\t\tawait this.editSessionsStorageService.list(\"editSessions\");\n\t\tthis.editSessionsCount.set(allEditSessions.length);\n\t\tconst editSessions = [];\n\n\t\tfor (const session of allEditSessions) {\n\t\t\tconst resource = URI.from({\n\t\t\t\tscheme: EDIT_SESSIONS_SCHEME,\n\t\t\t\tauthority: \"remote-session-content\",\n\t\t\t\tpath: `/${session.ref}`,\n\t\t\t});\n\t\t\tconst sessionData = await this.editSessionsStorageService.read(\n\t\t\t\t\"editSessions\",\n\t\t\t\tsession.ref,\n\t\t\t);\n\t\t\tif (!sessionData) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst content: EditSession = JSON.parse(sessionData.content);\n\t\t\tconst label =\n\t\t\t\tcontent.folders.map((folder) => folder.name).join(\", \") ??\n\t\t\t\tsession.ref;\n\t\t\tconst machineId = content.machine;\n\t\t\tconst machineName = machineId\n\t\t\t\t? await this.editSessionsStorageService.getMachineById(\n\t\t\t\t\t\tmachineId,\n\t\t\t\t\t)\n\t\t\t\t: undefined;\n\t\t\tconst description =\n\t\t\t\tmachineName === undefined\n\t\t\t\t\t? fromNow(session.created, true)\n\t\t\t\t\t: `${fromNow(session.created, true)}\\u00a0\\u00a0\\u2022\\u00a0\\u00a0${machineName}`;\n\n\t\t\teditSessions.push({\n\t\t\t\thandle: resource.toString(),\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: { label },\n\t\t\t\tdescription: description,\n\t\t\t\tthemeIcon: Codicon.repo,\n\t\t\t\tcontextValue: `edit-session`,\n\t\t\t});\n\t\t}\n\n\t\treturn editSessions;\n\t}\n\n\tprivate async getEditSession(ref: string): Promise<ITreeItem[]> {\n\t\tconst data = await this.editSessionsStorageService.read(\n\t\t\t\"editSessions\",\n\t\t\tref,\n\t\t);\n\n\t\tif (!data) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content: EditSession = JSON.parse(data.content);\n\n\t\tif (content.folders.length === 1) {\n\t\t\tconst folder = content.folders[0];\n\t\t\treturn this.getEditSessionFolderContents(ref, folder.name);\n\t\t}\n\n\t\treturn content.folders.map((folder) => {\n\t\t\tconst resource = URI.from({\n\t\t\t\tscheme: EDIT_SESSIONS_SCHEME,\n\t\t\t\tauthority: \"remote-session-content\",\n\t\t\t\tpath: `/${data.ref}/${folder.name}`,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\thandle: resource.toString(),\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: { label: folder.name },\n\t\t\t\tthemeIcon: Codicon.folder,\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate async getEditSessionFolderContents(\n\t\tref: string,\n\t\tfolderName: string,\n\t): Promise<ITreeItem[]> {\n\t\tconst data = await this.editSessionsStorageService.read(\n\t\t\t\"editSessions\",\n\t\t\tref,\n\t\t);\n\n\t\tif (!data) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content: EditSession = JSON.parse(data.content);\n\n\t\tconst currentWorkspaceFolder = this.workspaceContextService\n\t\t\t.getWorkspace()\n\t\t\t.folders.find((folder) => folder.name === folderName);\n\t\tconst editSessionFolder = content.folders.find(\n\t\t\t(folder) => folder.name === folderName,\n\t\t);\n\n\t\tif (!editSessionFolder) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Promise.all(\n\t\t\teditSessionFolder.workingChanges.map(async (change) => {\n\t\t\t\tconst cloudChangeUri = URI.from({\n\t\t\t\t\tscheme: EDIT_SESSIONS_SCHEME,\n\t\t\t\t\tauthority: \"remote-session-content\",\n\t\t\t\t\tpath: `/${data.ref}/${folderName}/${change.relativeFilePath}`,\n\t\t\t\t});\n\n\t\t\t\tif (currentWorkspaceFolder?.uri) {\n\t\t\t\t\t// find the corresponding file in the workspace\n\t\t\t\t\tconst localCopy = joinPath(\n\t\t\t\t\t\tcurrentWorkspaceFolder.uri,\n\t\t\t\t\t\tchange.relativeFilePath,\n\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\tchange.type === ChangeType.Addition &&\n\t\t\t\t\t\t(await this.fileService.exists(localCopy))\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\thandle: cloudChangeUri.toString(),\n\t\t\t\t\t\t\tresourceUri: cloudChangeUri,\n\t\t\t\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\t\t\t\tlabel: { label: change.relativeFilePath },\n\t\t\t\t\t\t\tthemeIcon: Codicon.file,\n\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\tid: \"vscode.diff\",\n\t\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\t\"compare changes\",\n\t\t\t\t\t\t\t\t\t\"Compare Changes\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\targuments: [\n\t\t\t\t\t\t\t\t\tlocalCopy,\n\t\t\t\t\t\t\t\t\tcloudChangeUri,\n\t\t\t\t\t\t\t\t\t`${basename(change.relativeFilePath)} (${localize(\"local copy\", \"Local Copy\")} \\u2194 ${localize(\"cloud changes\", \"Cloud Changes\")})`,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\thandle: cloudChangeUri.toString(),\n\t\t\t\t\tresourceUri: cloudChangeUri,\n\t\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\t\tlabel: { label: change.relativeFilePath },\n\t\t\t\t\tthemeIcon: Codicon.file,\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\t\ttitle: localize(\"open file\", \"Open File\"),\n\t\t\t\t\t\targuments: [cloudChangeUri, undefined, undefined],\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,gBAAgB;AACzB,SAAS,WAAW;AACpB,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,OAEM;AACP,SAAS,gBAAgB;AACzB,SAAS,gCAAgC;AACzC,SAAS,kCAAkC;AAC3C;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EAKA;AAAA,OAGM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,OACM;AAEP,MAAM,0BAA0B;AAChC,MAAM,kCAAkC,IAAI;AAAA,EAC3C;AAAA,EACA;AACD;AAEO,IAAM,wBAAN,cAAoC,WAAW;AAAA,EACrD,YACC,WAEiB,sBAChB;AACD,UAAM;AAFW;AAGjB,SAAK,cAAc,SAAS;AAAA,EAC7B;AAAA,EAvED,OA+DsD;AAAA;AAAA;AAAA,EAU7C,cAAc,WAAgC;AACrD,UAAM,SAAS;AACf,UAAM,WAAW,KAAK,qBAAqB;AAAA,MAC1C;AAAA,MACA;AAAA,MACA,oBAAoB;AAAA,IACrB;AACA,aAAS,wBAAwB;AACjC,aAAS,oBAAoB;AAC7B,aAAS,eAAe,KAAK,qBAAqB;AAAA,MACjD;AAAA,IACD;AAEA,UAAM,gBAAgB,SAAS;AAAA,MAC9B,WAAW;AAAA,IACZ;AACA,kBAAc;AAAA,MACb;AAAA,QACsB;AAAA,UACpB,IAAI;AAAA,UACJ,MAAM;AAAA,UACN,gBAAgB,IAAI,eAAe,YAAY;AAAA,UAC/C,qBAAqB;AAAA,UACrB,aAAa;AAAA,UACb;AAAA,UACA,WAAW;AAAA,UACX,MAAM,eAAe,IAAI,uBAAuB;AAAA,UAChD,OAAO;AAAA,UACP,eAAe;AAAA,QAChB;AAAA,MACD;AAAA,MACA;AAAA,IACD;AAEA,kBAAc,2BAA2B,QAAQ;AAAA,MAChD,SAAS;AAAA,QACR;AAAA,QACA;AAAA,QACA,IAAI,SAAS,4BAA4B,uBAAuB,CAAC;AAAA,MAClE;AAAA,MACA,MAAM,eAAe,OAAO,yBAAyB,CAAC;AAAA,MACtD,OAAO;AAAA,IACR,CAAC;AAED,SAAK;AAAA,MACJ;AAAA,QACC,cAAc,QAAQ;AAAA,UACrB,cAAc;AACb,kBAAM;AAAA,cACL,IAAI;AAAA,cACJ,OAAO;AAAA,gBACN;AAAA,gBACA;AAAA,cACD;AAAA,cACA,MAAM,QAAQ;AAAA,cACd,MAAM;AAAA,gBACL,IAAI,OAAO;AAAA,gBACX,MAAM,eAAe;AAAA,kBACpB,eAAe,OAAO,QAAQ,MAAM;AAAA,kBACpC,eAAe;AAAA,oBACd;AAAA,oBACA;AAAA,kBACD;AAAA,gBACD;AAAA,gBACA,OAAO;AAAA,cACR;AAAA,YACD,CAAC;AAAA,UACF;AAAA,UAEA,MAAM,IACL,UACA,QACgB;AAChB,kBAAM,gBAAgB,IAAI;AAAA,cACzB,OAAO;AAAA,YACR,EAAE,KAAK,UAAU,CAAC;AAClB,kBAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,kBAAM,eAAe;AAAA,cACpB;AAAA,cACA;AAAA,cACA;AAAA,YACD;AACA,kBAAM,SAAS,QAAQ;AAAA,UACxB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ;AAAA,QACC,cAAc,QAAQ;AAAA,UACrB,cAAc;AACb,kBAAM;AAAA,cACL,IAAI;AAAA,cACJ,OAAO;AAAA,gBACN;AAAA,gBACA;AAAA,cACD;AAAA,cACA,MAAM,QAAQ;AAAA,YACf,CAAC;AAAA,UACF;AAAA,UAEA,MAAM,IACL,UACA,QACgB;AAChB,kBAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,kBAAM,eAAe;AAAA,cACpB;AAAA,YACD;AACA,kBAAM,SAAS,QAAQ;AAAA,UACxB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ;AAAA,QACC,cAAc,QAAQ;AAAA,UACrB,cAAc;AACb,kBAAM;AAAA,cACL,IAAI;AAAA,cACJ,OAAO;AAAA,gBACN;AAAA,gBACA;AAAA,cACD;AAAA,cACA,MAAM,QAAQ;AAAA,cACd,MAAM;AAAA,gBACL,IAAI,OAAO;AAAA,gBACX,MAAM,eAAe;AAAA,kBACpB,eAAe,OAAO,QAAQ,MAAM;AAAA,kBACpC,eAAe;AAAA,oBACd;AAAA,oBACA;AAAA,kBACD;AAAA,gBACD;AAAA,gBACA,OAAO;AAAA,cACR;AAAA,YACD,CAAC;AAAA,UACF;AAAA,UAEA,MAAM,IACL,UACA,QACgB;AAChB,kBAAM,gBAAgB,IAAI;AAAA,cACzB,OAAO;AAAA,YACR,EAAE,KAAK,UAAU,CAAC;AAClB,kBAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,kBAAM,4BAA4B,SAAS;AAAA,cAC1C;AAAA,YACD;AACA,kBAAM,SAAS,MAAM,cAAc,QAAQ;AAAA,cAC1C,SAAS;AAAA,gBACR;AAAA,gBACA;AAAA,gBACA;AAAA,cACD;AAAA,cACA,QAAQ;AAAA,gBACP;AAAA,gBACA;AAAA,cACD;AAAA,cACA,MAAM;AAAA,cACN,OAAO,oBAAoB;AAAA,YAC5B,CAAC;AACD,gBAAI,OAAO,WAAW;AACrB,oBAAM,0BAA0B;AAAA,gBAC/B;AAAA,gBACA;AAAA,cACD;AACA,oBAAM,SAAS,QAAQ;AAAA,YACxB;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ;AAAA,QACC,cAAc,QAAQ;AAAA,UACrB,cAAc;AACb,kBAAM;AAAA,cACL,IAAI;AAAA,cACJ,OAAO;AAAA,gBACN;AAAA,gBACA;AAAA,cACD;AAAA,cACA,MAAM,QAAQ;AAAA,cACd,MAAM;AAAA,gBACL,IAAI,OAAO;AAAA,gBACX,MAAM,eAAe;AAAA,kBACpB,eAAe,OAAO,QAAQ,MAAM;AAAA,kBACpC,eAAe;AAAA,oBACd;AAAA,oBACA;AAAA,kBACD;AAAA,gBACD;AAAA,cACD;AAAA,YACD,CAAC;AAAA,UACF;AAAA,UAEA,MAAM,IAAI,UAA2C;AACpD,kBAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,kBAAM,4BAA4B,SAAS;AAAA,cAC1C;AAAA,YACD;AACA,kBAAM,SAAS,MAAM,cAAc,QAAQ;AAAA,cAC1C,SAAS;AAAA,gBACR;AAAA,gBACA;AAAA,cACD;AAAA,cACA,QAAQ;AAAA,gBACP;AAAA,gBACA;AAAA,cACD;AAAA,cACA,MAAM;AAAA,cACN,OAAO,oBAAoB;AAAA,YAC5B,CAAC;AACD,gBAAI,OAAO,WAAW;AACrB,oBAAM,0BAA0B;AAAA,gBAC/B;AAAA,gBACA;AAAA,cACD;AACA,oBAAM,SAAS,QAAQ;AAAA,YACxB;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAhPa,wBAAN;AAAA,EAGJ;AAAA,GAHU;AAkPb,IAAM,kCAAN,MAAuE;AAAA,EAGtE,YAEkB,4BAEA,mBAEA,yBACc,aAC9B;AANgB;AAEA;AAEA;AACc;AAE/B,SAAK,oBAAoB,gCAAgC;AAAA,MACxD,KAAK;AAAA,IACN;AAAA,EACD;AAAA,EAhUD,OAiTuE;AAAA;AAAA;AAAA,EAC9D;AAAA,EAgBR,MAAM,YAAY,SAA2C;AAC5D,QAAI,CAAC,SAAS;AACb,aAAO,KAAK,mBAAmB;AAAA,IAChC;AAEA,UAAM,CAAC,KAAK,YAAY,QAAQ,IAAI,IAAI,MAAM,QAAQ,MAAM,EAC1D,KAAK,UAAU,CAAC,EAChB,MAAM,GAAG;AAEX,QAAI,OAAO,CAAC,YAAY;AACvB,aAAO,KAAK,eAAe,GAAG;AAAA,IAC/B,WAAW,OAAO,cAAc,CAAC,UAAU;AAC1C,aAAO,KAAK,6BAA6B,KAAK,UAAU;AAAA,IACzD;AAEA,WAAO,CAAC;AAAA,EACT;AAAA,EAEA,MAAc,qBAA2C;AACxD,UAAM,kBACL,MAAM,KAAK,2BAA2B,KAAK,cAAc;AAC1D,SAAK,kBAAkB,IAAI,gBAAgB,MAAM;AACjD,UAAM,eAAe,CAAC;AAEtB,eAAW,WAAW,iBAAiB;AACtC,YAAM,WAAW,IAAI,KAAK;AAAA,QACzB,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,MAAM,IAAI,QAAQ,GAAG;AAAA,MACtB,CAAC;AACD,YAAM,cAAc,MAAM,KAAK,2BAA2B;AAAA,QACzD;AAAA,QACA,QAAQ;AAAA,MACT;AACA,UAAI,CAAC,aAAa;AACjB;AAAA,MACD;AACA,YAAM,UAAuB,KAAK,MAAM,YAAY,OAAO;AAC3D,YAAM,QACL,QAAQ,QAAQ,IAAI,CAAC,WAAW,OAAO,IAAI,EAAE,KAAK,IAAI,KACtD,QAAQ;AACT,YAAM,YAAY,QAAQ;AAC1B,YAAM,cAAc,YACjB,MAAM,KAAK,2BAA2B;AAAA,QACtC;AAAA,MACD,IACC;AACH,YAAM,cACL,gBAAgB,SACb,QAAQ,QAAQ,SAAS,IAAI,IAC7B,GAAG,QAAQ,QAAQ,SAAS,IAAI,CAAC,yBAAiC,WAAW;AAEjF,mBAAa,KAAK;AAAA,QACjB,QAAQ,SAAS,SAAS;AAAA,QAC1B,kBAAkB,yBAAyB;AAAA,QAC3C,OAAO,EAAE,MAAM;AAAA,QACf;AAAA,QACA,WAAW,QAAQ;AAAA,QACnB,cAAc;AAAA,MACf,CAAC;AAAA,IACF;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAc,eAAe,KAAmC;AAC/D,UAAM,OAAO,MAAM,KAAK,2BAA2B;AAAA,MAClD;AAAA,MACA;AAAA,IACD;AAEA,QAAI,CAAC,MAAM;AACV,aAAO,CAAC;AAAA,IACT;AACA,UAAM,UAAuB,KAAK,MAAM,KAAK,OAAO;AAEpD,QAAI,QAAQ,QAAQ,WAAW,GAAG;AACjC,YAAM,SAAS,QAAQ,QAAQ,CAAC;AAChC,aAAO,KAAK,6BAA6B,KAAK,OAAO,IAAI;AAAA,IAC1D;AAEA,WAAO,QAAQ,QAAQ,IAAI,CAAC,WAAW;AACtC,YAAM,WAAW,IAAI,KAAK;AAAA,QACzB,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,MAAM,IAAI,KAAK,GAAG,IAAI,OAAO,IAAI;AAAA,MAClC,CAAC;AACD,aAAO;AAAA,QACN,QAAQ,SAAS,SAAS;AAAA,QAC1B,kBAAkB,yBAAyB;AAAA,QAC3C,OAAO,EAAE,OAAO,OAAO,KAAK;AAAA,QAC5B,WAAW,QAAQ;AAAA,MACpB;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAc,6BACb,KACA,YACuB;AACvB,UAAM,OAAO,MAAM,KAAK,2BAA2B;AAAA,MAClD;AAAA,MACA;AAAA,IACD;AAEA,QAAI,CAAC,MAAM;AACV,aAAO,CAAC;AAAA,IACT;AACA,UAAM,UAAuB,KAAK,MAAM,KAAK,OAAO;AAEpD,UAAM,yBAAyB,KAAK,wBAClC,aAAa,EACb,QAAQ,KAAK,CAAC,WAAW,OAAO,SAAS,UAAU;AACrD,UAAM,oBAAoB,QAAQ,QAAQ;AAAA,MACzC,CAAC,WAAW,OAAO,SAAS;AAAA,IAC7B;AAEA,QAAI,CAAC,mBAAmB;AACvB,aAAO,CAAC;AAAA,IACT;AAEA,WAAO,QAAQ;AAAA,MACd,kBAAkB,eAAe,IAAI,OAAO,WAAW;AACtD,cAAM,iBAAiB,IAAI,KAAK;AAAA,UAC/B,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,MAAM,IAAI,KAAK,GAAG,IAAI,UAAU,IAAI,OAAO,gBAAgB;AAAA,QAC5D,CAAC;AAED,YAAI,wBAAwB,KAAK;AAEhC,gBAAM,YAAY;AAAA,YACjB,uBAAuB;AAAA,YACvB,OAAO;AAAA,UACR;AACA,cACC,OAAO,SAAS,WAAW,YAC1B,MAAM,KAAK,YAAY,OAAO,SAAS,GACvC;AACD,mBAAO;AAAA,cACN,QAAQ,eAAe,SAAS;AAAA,cAChC,aAAa;AAAA,cACb,kBAAkB,yBAAyB;AAAA,cAC3C,OAAO,EAAE,OAAO,OAAO,iBAAiB;AAAA,cACxC,WAAW,QAAQ;AAAA,cACnB,SAAS;AAAA,gBACR,IAAI;AAAA,gBACJ,OAAO;AAAA,kBACN;AAAA,kBACA;AAAA,gBACD;AAAA,gBACA,WAAW;AAAA,kBACV;AAAA,kBACA;AAAA,kBACA,GAAG,SAAS,OAAO,gBAAgB,CAAC,KAAK,SAAS,cAAc,YAAY,CAAC,WAAW,SAAS,iBAAiB,eAAe,CAAC;AAAA,kBAClI;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAEA,eAAO;AAAA,UACN,QAAQ,eAAe,SAAS;AAAA,UAChC,aAAa;AAAA,UACb,kBAAkB,yBAAyB;AAAA,UAC3C,OAAO,EAAE,OAAO,OAAO,iBAAiB;AAAA,UACxC,WAAW,QAAQ;AAAA,UACnB,SAAS;AAAA,YACR,IAAI;AAAA,YACJ,OAAO,SAAS,aAAa,WAAW;AAAA,YACxC,WAAW,CAAC,gBAAgB,QAAW,MAAS;AAAA,UACjD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AACD;AAlMM,kCAAN;AAAA,EAIG;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,GAVG;",
  "names": []
}
