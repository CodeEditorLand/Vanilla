{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/editSessions/browser/editSessions.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { sha1Hex } from \"../../../../base/browser/hash.js\";\nimport { encodeBase64 } from \"../../../../base/common/buffer.js\";\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { CancellationError } from \"../../../../base/common/errors.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { equals } from \"../../../../base/common/objects.js\";\nimport { isNative, isWeb } from \"../../../../base/common/platform.js\";\nimport {\n\tbasename,\n\tjoinPath,\n\trelativePath,\n} from \"../../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport type { ILocalizedString } from \"../../../../platform/action/common/action.js\";\nimport {\n\tAction2,\n\ttype IAction2Options,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IsWebContext } from \"../../../../platform/contextkey/common/contextkeys.js\";\nimport {\n\tIDialogService,\n\tIFileDialogService,\n\tgetFileNamesMessage,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\ttype IProgress,\n\tIProgressService,\n\ttype IProgressStep,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport {\n\ttype IQuickInputButton,\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IRequestService } from \"../../../../platform/request/common/request.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\ttype IUserDataSynchroniser,\n\tUserDataSyncErrorCode,\n\tUserDataSyncStoreError,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport {\n\tEditSessionIdentityMatch,\n\tIEditSessionIdentityService,\n} from \"../../../../platform/workspace/common/editSessions.js\";\nimport { getVirtualWorkspaceLocation } from \"../../../../platform/workspace/common/virtualWorkspace.js\";\nimport {\n\tIWorkspaceContextService,\n\ttype IWorkspaceFolder,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport { ViewPaneContainer } from \"../../../browser/parts/views/viewPaneContainer.js\";\nimport { workbenchConfigurationNodeBase } from \"../../../common/configuration.js\";\nimport {\n\tVirtualWorkspaceContext,\n\tWorkspaceFolderCountContext,\n} from \"../../../common/contextkeys.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport {\n\ttype IViewContainersRegistry,\n\tViewContainerLocation,\n\tExtensions as ViewExtensions,\n} from \"../../../common/views.js\";\nimport {\n\tIActivityService,\n\tNumberBadge,\n} from \"../../../services/activity/common/activity.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tIExtensionService,\n\tisProposedApiEnabled,\n} from \"../../../services/extensions/common/extensions.js\";\nimport { ExtensionsRegistry } from \"../../../services/extensions/common/extensionsRegistry.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n\tShutdownReason,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IOutputService } from \"../../../services/output/common/output.js\";\nimport { IRemoteAgentService } from \"../../../services/remote/common/remoteAgentService.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { IWorkspaceIdentityService } from \"../../../services/workspaces/common/workspaceIdentityService.js\";\nimport { IExtensionsWorkbenchService } from \"../../extensions/common/extensions.js\";\nimport { type ISCMRepository, ISCMService } from \"../../scm/common/scm.js\";\nimport {\n\ttype Change,\n\tChangeType,\n\tEDIT_SESSIONS_CONTAINER_ID,\n\tEDIT_SESSIONS_DATA_VIEW_ID,\n\tEDIT_SESSIONS_PENDING,\n\tEDIT_SESSIONS_SHOW_VIEW,\n\tEDIT_SESSIONS_TITLE,\n\tEDIT_SESSIONS_VIEW_ICON,\n\tEDIT_SESSION_SYNC_CATEGORY,\n\ttype EditSession,\n\tEditSessionSchemaVersion,\n\tFileType,\n\ttype Folder,\n\tIEditSessionsLogService,\n\tIEditSessionsStorageService,\n\tdecodeEditSessionFileContent,\n\teditSessionsLogId,\n\thashedEditSessionId,\n} from \"../common/editSessions.js\";\nimport { EditSessionsLogService } from \"../common/editSessionsLogService.js\";\nimport { EditSessionsStoreClient } from \"../common/editSessionsStorageClient.js\";\nimport { WorkspaceStateSynchroniser } from \"../common/workspaceStateSync.js\";\nimport { EditSessionsFileSystemProvider } from \"./editSessionsFileSystemProvider.js\";\nimport { EditSessionsWorkbenchService } from \"./editSessionsStorageService.js\";\nimport { EditSessionsDataViews } from \"./editSessionsViews.js\";\n\nregisterSingleton(\n\tIEditSessionsLogService,\n\tEditSessionsLogService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tIEditSessionsStorageService,\n\tEditSessionsWorkbenchService,\n\tInstantiationType.Delayed,\n);\n\nconst continueWorkingOnCommand: IAction2Options = {\n\tid: \"_workbench.editSessions.actions.continueEditSession\",\n\ttitle: localize2(\"continue working on\", \"Continue Working On...\"),\n\tprecondition: WorkspaceFolderCountContext.notEqualsTo(\"0\"),\n\tf1: true,\n};\nconst openLocalFolderCommand: IAction2Options = {\n\tid: \"_workbench.editSessions.actions.continueEditSession.openLocalFolder\",\n\ttitle: localize2(\n\t\t\"continue edit session in local folder\",\n\t\t\"Open In Local Folder\",\n\t),\n\tcategory: EDIT_SESSION_SYNC_CATEGORY,\n\tprecondition: ContextKeyExpr.and(\n\t\tIsWebContext.toNegated(),\n\t\tVirtualWorkspaceContext,\n\t),\n};\nconst showOutputChannelCommand: IAction2Options = {\n\tid: \"workbench.editSessions.actions.showOutputChannel\",\n\ttitle: localize2(\"show log\", \"Show Log\"),\n\tcategory: EDIT_SESSION_SYNC_CATEGORY,\n};\nconst installAdditionalContinueOnOptionsCommand = {\n\tid: \"workbench.action.continueOn.extensions\",\n\ttitle: localize(\n\t\t\"continueOn.installAdditional\",\n\t\t\"Install additional development environment options\",\n\t),\n};\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({ ...installAdditionalContinueOnOptionsCommand, f1: false });\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\treturn accessor\n\t\t\t\t.get(IExtensionsWorkbenchService)\n\t\t\t\t.openSearch(\"@tag:continueOn\");\n\t\t}\n\t},\n);\n\nconst resumeProgressOptionsTitle = `[${localize(\"resuming working changes window\", \"Resuming working changes...\")}](command:${showOutputChannelCommand.id})`;\nconst resumeProgressOptions = {\n\tlocation: ProgressLocation.Window,\n\ttype: \"syncing\",\n};\nconst queryParamName = \"editSessionId\";\n\nconst useEditSessionsWithContinueOn = \"workbench.editSessions.continueOn\";\nexport class EditSessionsContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate continueEditSessionOptions: ContinueEditSessionItem[] = [];\n\n\tprivate readonly shouldShowViewsContext: IContextKey<boolean>;\n\tprivate readonly pendingEditSessionsContext: IContextKey<boolean>;\n\n\tprivate static APPLICATION_LAUNCHED_VIA_CONTINUE_ON_STORAGE_KEY =\n\t\t\"applicationLaunchedViaContinueOn\";\n\tprivate readonly accountsMenuBadgeDisposable = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\n\tprivate registeredCommands = new Set<string>();\n\n\tprivate workspaceStateSynchronizer: IUserDataSynchroniser | undefined;\n\tprivate editSessionsStorageClient: EditSessionsStoreClient | undefined;\n\n\tconstructor(\n\t\t@IEditSessionsStorageService\n\t\tprivate readonly editSessionsStorageService: IEditSessionsStorageService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IEditSessionsLogService\n\t\tprivate readonly logService: IEditSessionsLogService,\n\t\t@IEnvironmentService\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService\n\t\tprivate configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@IEditSessionIdentityService\n\t\tprivate readonly editSessionIdentityService: IEditSessionIdentityService,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@ICommandService private commandService: ICommandService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@IFileDialogService\n\t\tprivate readonly fileDialogService: IFileDialogService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IRemoteAgentService\n\t\tprivate readonly remoteAgentService: IRemoteAgentService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceIdentityService\n\t\tprivate readonly workspaceIdentityService: IWorkspaceIdentityService,\n\t) {\n\t\tsuper();\n\n\t\tthis.shouldShowViewsContext = EDIT_SESSIONS_SHOW_VIEW.bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\t\tthis.pendingEditSessionsContext = EDIT_SESSIONS_PENDING.bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\t\tthis.pendingEditSessionsContext.set(false);\n\n\t\tif (!this.productService[\"editSessions.store\"]?.url) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editSessionsStorageClient = new EditSessionsStoreClient(\n\t\t\tURI.parse(this.productService[\"editSessions.store\"].url),\n\t\t\tthis.productService,\n\t\t\tthis.requestService,\n\t\t\tthis.logService,\n\t\t\tthis.environmentService,\n\t\t\tthis.fileService,\n\t\t\tthis.storageService,\n\t\t);\n\t\tthis.editSessionsStorageService.storeClient =\n\t\t\tthis.editSessionsStorageClient;\n\t\tthis.workspaceStateSynchronizer = new WorkspaceStateSynchroniser(\n\t\t\tthis.userDataProfilesService.defaultProfile,\n\t\t\tundefined,\n\t\t\tthis.editSessionsStorageClient,\n\t\t\tthis.logService,\n\t\t\tthis.fileService,\n\t\t\tthis.environmentService,\n\t\t\tthis.telemetryService,\n\t\t\tthis.configurationService,\n\t\t\tthis.storageService,\n\t\t\tthis.uriIdentityService,\n\t\t\tthis.workspaceIdentityService,\n\t\t\tthis.editSessionsStorageService,\n\t\t);\n\n\t\tthis.autoResumeEditSession();\n\n\t\tthis.registerActions();\n\t\tthis.registerViews();\n\t\tthis.registerContributedEditSessionOptions();\n\n\t\tthis._register(\n\t\t\tthis.fileService.registerProvider(\n\t\t\t\tEditSessionsFileSystemProvider.SCHEMA,\n\t\t\t\tnew EditSessionsFileSystemProvider(\n\t\t\t\t\tthis.editSessionsStorageService,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis.lifecycleService.onWillShutdown((e) => {\n\t\t\tif (\n\t\t\t\te.reason !== ShutdownReason.RELOAD &&\n\t\t\t\tthis.editSessionsStorageService.isSignedIn &&\n\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\t\"workbench.experimental.cloudChanges.autoStore\",\n\t\t\t\t) === \"onShutdown\" &&\n\t\t\t\t!isWeb\n\t\t\t) {\n\t\t\t\te.join(this.autoStoreEditSession(), {\n\t\t\t\t\tid: \"autoStoreWorkingChanges\",\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"autoStoreWorkingChanges\",\n\t\t\t\t\t\t\"Storing current working changes...\",\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._register(\n\t\t\tthis.editSessionsStorageService.onDidSignIn(() =>\n\t\t\t\tthis.updateAccountsMenuBadge(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editSessionsStorageService.onDidSignOut(() =>\n\t\t\t\tthis.updateAccountsMenuBadge(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async autoResumeEditSession() {\n\t\tconst shouldAutoResumeOnReload =\n\t\t\tthis.configurationService.getValue(\n\t\t\t\t\"workbench.cloudChanges.autoResume\",\n\t\t\t) === \"onReload\";\n\n\t\tif (this.environmentService.editSessionId !== undefined) {\n\t\t\tthis.logService.info(\n\t\t\t\t`Resuming cloud changes, reason: found editSessionId ${this.environmentService.editSessionId} in environment service...`,\n\t\t\t);\n\t\t\tawait this.progressService.withProgress(\n\t\t\t\tresumeProgressOptions,\n\t\t\t\tasync (progress) =>\n\t\t\t\t\tawait this.resumeEditSession(\n\t\t\t\t\t\tthis.environmentService.editSessionId,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tprogress,\n\t\t\t\t\t).finally(\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t(this.environmentService.editSessionId = undefined),\n\t\t\t\t\t),\n\t\t\t);\n\t\t} else if (\n\t\t\tshouldAutoResumeOnReload &&\n\t\t\tthis.editSessionsStorageService.isSignedIn\n\t\t) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Resuming cloud changes, reason: cloud changes enabled...\",\n\t\t\t);\n\t\t\t// Attempt to resume edit session based on edit workspace identifier\n\t\t\t// Note: at this point if the user is not signed into edit sessions,\n\t\t\t// we don't want them to be prompted to sign in and should just return early\n\t\t\tawait this.progressService.withProgress(\n\t\t\t\tresumeProgressOptions,\n\t\t\t\tasync (progress) =>\n\t\t\t\t\tawait this.resumeEditSession(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tprogress,\n\t\t\t\t\t),\n\t\t\t);\n\t\t} else if (shouldAutoResumeOnReload) {\n\t\t\t// The application has previously launched via a protocol URL Continue On flow\n\t\t\tconst hasApplicationLaunchedFromContinueOnFlow =\n\t\t\t\tthis.storageService.getBoolean(\n\t\t\t\t\tEditSessionsContribution.APPLICATION_LAUNCHED_VIA_CONTINUE_ON_STORAGE_KEY,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\tthis.logService.info(\n\t\t\t\t`Prompting to enable cloud changes, has application previously launched from Continue On flow: ${hasApplicationLaunchedFromContinueOnFlow}`,\n\t\t\t);\n\n\t\t\tconst handlePendingEditSessions = () => {\n\t\t\t\t// display a badge in the accounts menu but do not prompt the user to sign in again\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t\"Showing badge to enable cloud changes in accounts menu...\",\n\t\t\t\t);\n\t\t\t\tthis.updateAccountsMenuBadge();\n\t\t\t\tthis.pendingEditSessionsContext.set(true);\n\t\t\t\t// attempt a resume if we are in a pending state and the user just signed in\n\t\t\t\tconst disposable = this.editSessionsStorageService.onDidSignIn(\n\t\t\t\t\tasync () => {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\"Showing badge to enable cloud changes in accounts menu succeeded, resuming cloud changes...\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.progressService.withProgress(\n\t\t\t\t\t\t\tresumeProgressOptions,\n\t\t\t\t\t\t\tasync (progress) =>\n\t\t\t\t\t\t\t\tawait this.resumeEditSession(\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tprogress,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.storageService.remove(\n\t\t\t\t\t\t\tEditSessionsContribution.APPLICATION_LAUNCHED_VIA_CONTINUE_ON_STORAGE_KEY,\n\t\t\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.environmentService.continueOn = undefined;\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\tthis.environmentService.continueOn !== undefined &&\n\t\t\t\t!this.editSessionsStorageService.isSignedIn &&\n\t\t\t\t// and user has not yet been prompted to sign in on this machine\n\t\t\t\thasApplicationLaunchedFromContinueOnFlow === false\n\t\t\t) {\n\t\t\t\t// store the fact that we prompted the user\n\t\t\t\tthis.storageService.store(\n\t\t\t\t\tEditSessionsContribution.APPLICATION_LAUNCHED_VIA_CONTINUE_ON_STORAGE_KEY,\n\t\t\t\t\ttrue,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t);\n\t\t\t\tthis.logService.info(\"Prompting to enable cloud changes...\");\n\t\t\t\tawait this.editSessionsStorageService.initialize(\"read\");\n\t\t\t\tif (this.editSessionsStorageService.isSignedIn) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\"Prompting to enable cloud changes succeeded, resuming cloud changes...\",\n\t\t\t\t\t);\n\t\t\t\t\tawait this.progressService.withProgress(\n\t\t\t\t\t\tresumeProgressOptions,\n\t\t\t\t\t\tasync (progress) =>\n\t\t\t\t\t\t\tawait this.resumeEditSession(\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tprogress,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\thandlePendingEditSessions();\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\t!this.editSessionsStorageService.isSignedIn &&\n\t\t\t\t// and user has been prompted to sign in on this machine\n\t\t\t\thasApplicationLaunchedFromContinueOnFlow === true\n\t\t\t) {\n\t\t\t\thandlePendingEditSessions();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logService.debug(\"Auto resuming cloud changes disabled.\");\n\t\t}\n\t}\n\n\tprivate updateAccountsMenuBadge() {\n\t\tif (this.editSessionsStorageService.isSignedIn) {\n\t\t\treturn this.accountsMenuBadgeDisposable.clear();\n\t\t}\n\n\t\tconst badge = new NumberBadge(1, () =>\n\t\t\tlocalize(\n\t\t\t\t\"check for pending cloud changes\",\n\t\t\t\t\"Check for pending cloud changes\",\n\t\t\t),\n\t\t);\n\t\tthis.accountsMenuBadgeDisposable.value =\n\t\t\tthis.activityService.showAccountsActivity({ badge });\n\t}\n\n\tprivate async autoStoreEditSession() {\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tawait this.progressService.withProgress(\n\t\t\t{\n\t\t\t\tlocation: ProgressLocation.Window,\n\t\t\t\ttype: \"syncing\",\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"store working changes\",\n\t\t\t\t\t\"Storing working changes...\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tasync () =>\n\t\t\t\tthis.storeEditSession(false, cancellationTokenSource.token),\n\t\t\t() => {\n\t\t\t\tcancellationTokenSource.cancel();\n\t\t\t\tcancellationTokenSource.dispose();\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate registerViews() {\n\t\tconst container = Registry.as<IViewContainersRegistry>(\n\t\t\tViewExtensions.ViewContainersRegistry,\n\t\t).registerViewContainer(\n\t\t\t{\n\t\t\t\tid: EDIT_SESSIONS_CONTAINER_ID,\n\t\t\t\ttitle: EDIT_SESSIONS_TITLE,\n\t\t\t\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [\n\t\t\t\t\tEDIT_SESSIONS_CONTAINER_ID,\n\t\t\t\t\t{ mergeViewWithContainerWhenSingleView: true },\n\t\t\t\t]),\n\t\t\t\ticon: EDIT_SESSIONS_VIEW_ICON,\n\t\t\t\thideIfEmpty: true,\n\t\t\t},\n\t\t\tViewContainerLocation.Sidebar,\n\t\t\t{ doNotRegisterOpenCommand: true },\n\t\t);\n\t\tthis._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tEditSessionsDataViews,\n\t\t\t\tcontainer,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerActions() {\n\t\tthis.registerContinueEditSessionAction();\n\n\t\tthis.registerResumeLatestEditSessionAction();\n\t\tthis.registerStoreLatestEditSessionAction();\n\n\t\tthis.registerContinueInLocalFolderAction();\n\n\t\tthis.registerShowEditSessionViewAction();\n\t\tthis.registerShowEditSessionOutputChannelAction();\n\t}\n\n\tprivate registerShowEditSessionOutputChannelAction() {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass ShowEditSessionOutput extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper(showOutputChannelCommand);\n\t\t\t\t\t}\n\n\t\t\t\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\t\t\t\tconst outputChannel = accessor.get(IOutputService);\n\t\t\t\t\t\tvoid outputChannel.showChannel(editSessionsLogId);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerShowEditSessionViewAction() {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass ShowEditSessionView extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.editSessions.actions.showEditSessions\",\n\t\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\t\"show cloud changes\",\n\t\t\t\t\t\t\t\t\"Show Cloud Changes\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: EDIT_SESSION_SYNC_CATEGORY,\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\t\t\tthat.shouldShowViewsContext.set(true);\n\t\t\t\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\t\t\t\tawait viewsService.openView(EDIT_SESSIONS_DATA_VIEW_ID);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerContinueEditSessionAction() {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass ContinueEditSessionAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper(continueWorkingOnCommand);\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\tworkspaceUri: URI | undefined,\n\t\t\t\t\t\tdestination: string | undefined,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\ttype ContinueOnEventOutcome = {\n\t\t\t\t\t\t\toutcome: string;\n\t\t\t\t\t\t\thashedId?: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype ContinueOnClassificationOutcome = {\n\t\t\t\t\t\t\towner: \"joyceerhl\";\n\t\t\t\t\t\t\tcomment: \"Reporting the outcome of invoking the Continue On action.\";\n\t\t\t\t\t\t\toutcome: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\t\tcomment: \"The outcome of invoking continue edit session.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\thashedId?: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\t\tcomment: \"The hash of the stored edit session id, for correlating success of stores and resumes.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// First ask the user to pick a destination, if necessary\n\t\t\t\t\t\tlet uri: URI | \"noDestinationUri\" | undefined =\n\t\t\t\t\t\t\tworkspaceUri;\n\t\t\t\t\t\tif (!destination && !uri) {\n\t\t\t\t\t\t\tdestination =\n\t\t\t\t\t\t\t\tawait that.pickContinueEditSessionDestination();\n\t\t\t\t\t\t\tif (!destination) {\n\t\t\t\t\t\t\t\tthat.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\t\tContinueOnEventOutcome,\n\t\t\t\t\t\t\t\t\tContinueOnClassificationOutcome\n\t\t\t\t\t\t\t\t>(\"continueOn.editSessions.pick.outcome\", {\n\t\t\t\t\t\t\t\t\toutcome: \"noSelection\",\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Determine if we need to store an edit session, asking for edit session auth if necessary\n\t\t\t\t\t\tconst shouldStoreEditSession =\n\t\t\t\t\t\t\tawait that.shouldContinueOnWithEditSession();\n\n\t\t\t\t\t\t// Run the store action to get back a ref\n\t\t\t\t\t\tlet ref: string | undefined;\n\t\t\t\t\t\tif (shouldStoreEditSession) {\n\t\t\t\t\t\t\ttype ContinueWithEditSessionEvent = {};\n\t\t\t\t\t\t\ttype ContinueWithEditSessionClassification = {\n\t\t\t\t\t\t\t\towner: \"joyceerhl\";\n\t\t\t\t\t\t\t\tcomment: \"Reporting when storing an edit session as part of the Continue On flow.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthat.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\tContinueWithEditSessionEvent,\n\t\t\t\t\t\t\t\tContinueWithEditSessionClassification\n\t\t\t\t\t\t\t>(\"continueOn.editSessions.store\");\n\n\t\t\t\t\t\t\tconst cancellationTokenSource =\n\t\t\t\t\t\t\t\tnew CancellationTokenSource();\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tref = await that.progressService.withProgress(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\t\t\t\t\t\tcancellable: true,\n\t\t\t\t\t\t\t\t\t\ttype: \"syncing\",\n\t\t\t\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"store your working changes\",\n\t\t\t\t\t\t\t\t\t\t\t\"Storing your working changes...\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tasync () => {\n\t\t\t\t\t\t\t\t\t\tconst ref = await that.storeEditSession(\n\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\tcancellationTokenSource.token,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (ref !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tthat.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\t\t\t\t\tContinueOnEventOutcome,\n\t\t\t\t\t\t\t\t\t\t\t\tContinueOnClassificationOutcome\n\t\t\t\t\t\t\t\t\t\t\t>(\n\t\t\t\t\t\t\t\t\t\t\t\t\"continueOn.editSessions.store.outcome\",\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\toutcome: \"storeSucceeded\",\n\t\t\t\t\t\t\t\t\t\t\t\t\thashedId:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thashedEditSessionId(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthat.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\t\t\t\t\tContinueOnEventOutcome,\n\t\t\t\t\t\t\t\t\t\t\t\tContinueOnClassificationOutcome\n\t\t\t\t\t\t\t\t\t\t\t>(\n\t\t\t\t\t\t\t\t\t\t\t\t\"continueOn.editSessions.store.outcome\",\n\t\t\t\t\t\t\t\t\t\t\t\t{ outcome: \"storeSkipped\" },\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn ref;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\tcancellationTokenSource.cancel();\n\t\t\t\t\t\t\t\t\t\tcancellationTokenSource.dispose();\n\t\t\t\t\t\t\t\t\t\tthat.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\t\t\t\tContinueOnEventOutcome,\n\t\t\t\t\t\t\t\t\t\t\tContinueOnClassificationOutcome\n\t\t\t\t\t\t\t\t\t\t>(\n\t\t\t\t\t\t\t\t\t\t\t\"continueOn.editSessions.store.outcome\",\n\t\t\t\t\t\t\t\t\t\t\t{ outcome: \"storeCancelledByUser\" },\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\t\tthat.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\t\tContinueOnEventOutcome,\n\t\t\t\t\t\t\t\t\tContinueOnClassificationOutcome\n\t\t\t\t\t\t\t\t>(\"continueOn.editSessions.store.outcome\", {\n\t\t\t\t\t\t\t\t\toutcome: \"storeFailed\",\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Append the ref to the URI\n\t\t\t\t\t\turi = destination\n\t\t\t\t\t\t\t? await that.resolveDestination(destination)\n\t\t\t\t\t\t\t: uri;\n\t\t\t\t\t\tif (uri === undefined) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (ref !== undefined && uri !== \"noDestinationUri\") {\n\t\t\t\t\t\t\tconst encodedRef = encodeURIComponent(ref);\n\t\t\t\t\t\t\turi = uri.with({\n\t\t\t\t\t\t\t\tquery:\n\t\t\t\t\t\t\t\t\turi.query.length > 0\n\t\t\t\t\t\t\t\t\t\t? uri.query +\n\t\t\t\t\t\t\t\t\t\t\t`&${queryParamName}=${encodedRef}&continueOn=1`\n\t\t\t\t\t\t\t\t\t\t: `${queryParamName}=${encodedRef}&continueOn=1`,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// Open the URI\n\t\t\t\t\t\t\tthat.logService.info(`Opening ${uri.toString()}`);\n\t\t\t\t\t\t\tawait that.openerService.open(uri, {\n\t\t\t\t\t\t\t\topenExternal: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t!shouldStoreEditSession &&\n\t\t\t\t\t\t\turi !== \"noDestinationUri\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Open the URI without an edit session ref\n\t\t\t\t\t\t\tthat.logService.info(`Opening ${uri.toString()}`);\n\t\t\t\t\t\t\tawait that.openerService.open(uri, {\n\t\t\t\t\t\t\t\topenExternal: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tref === undefined &&\n\t\t\t\t\t\t\tshouldStoreEditSession\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthat.logService.warn(\n\t\t\t\t\t\t\t\t`Failed to store working changes when invoking ${continueWorkingOnCommand.id}.`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerResumeLatestEditSessionAction(): void {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass ResumeLatestEditSessionAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.editSessions.actions.resumeLatest\",\n\t\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\t\"resume latest cloud changes\",\n\t\t\t\t\t\t\t\t\"Resume Latest Changes from Cloud\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: EDIT_SESSION_SYNC_CATEGORY,\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\teditSessionId?: string,\n\t\t\t\t\t\tforceApplyUnrelatedChange?: boolean,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tawait that.progressService.withProgress(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...resumeProgressOptions,\n\t\t\t\t\t\t\t\ttitle: resumeProgressOptionsTitle,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tasync () =>\n\t\t\t\t\t\t\t\tawait that.resumeEditSession(\n\t\t\t\t\t\t\t\t\teditSessionId,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tforceApplyUnrelatedChange,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass ResumeLatestEditSessionAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.editSessions.actions.resumeFromSerializedPayload\",\n\t\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\t\"resume cloud changes\",\n\t\t\t\t\t\t\t\t\"Resume Changes from Serialized Data\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: \"Developer\",\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\teditSessionId?: string,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst data = await that.quickInputService.input({\n\t\t\t\t\t\t\tprompt: \"Enter serialized data\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tthat.editSessionsStorageService.lastReadResources.set(\n\t\t\t\t\t\t\t\t\"editSessions\",\n\t\t\t\t\t\t\t\t{ content: data, ref: \"\" },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait that.progressService.withProgress(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...resumeProgressOptions,\n\t\t\t\t\t\t\t\ttitle: resumeProgressOptionsTitle,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tasync () =>\n\t\t\t\t\t\t\t\tawait that.resumeEditSession(\n\t\t\t\t\t\t\t\t\teditSessionId,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerStoreLatestEditSessionAction(): void {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass StoreLatestEditSessionAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.editSessions.actions.storeCurrent\",\n\t\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\t\"store working changes in cloud\",\n\t\t\t\t\t\t\t\t\"Store Working Changes in Cloud\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: EDIT_SESSION_SYNC_CATEGORY,\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\tconst cancellationTokenSource =\n\t\t\t\t\t\t\tnew CancellationTokenSource();\n\t\t\t\t\t\tawait that.progressService.withProgress(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\t\"storing working changes\",\n\t\t\t\t\t\t\t\t\t\"Storing working changes...\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tasync () => {\n\t\t\t\t\t\t\t\ttype StoreEvent = {};\n\t\t\t\t\t\t\t\ttype StoreClassification = {\n\t\t\t\t\t\t\t\t\towner: \"joyceerhl\";\n\t\t\t\t\t\t\t\t\tcomment: \"Reporting when the store edit session action is invoked.\";\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthat.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\t\tStoreEvent,\n\t\t\t\t\t\t\t\t\tStoreClassification\n\t\t\t\t\t\t\t\t>(\"editSessions.store\");\n\n\t\t\t\t\t\t\t\tawait that.storeEditSession(\n\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\tcancellationTokenSource.token,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tcancellationTokenSource.cancel();\n\t\t\t\t\t\t\t\tcancellationTokenSource.dispose();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tasync resumeEditSession(\n\t\tref?: string,\n\t\tsilent?: boolean,\n\t\tforceApplyUnrelatedChange?: boolean,\n\t\tapplyPartialMatch?: boolean,\n\t\tprogress?: IProgress<IProgressStep>,\n\t\tserializedData?: string,\n\t): Promise<void> {\n\t\t// Wait for the remote environment to become available, if any\n\t\tawait this.remoteAgentService.getEnvironment();\n\n\t\t// Edit sessions are not currently supported in empty workspaces\n\t\t// https://github.com/microsoft/vscode/issues/159220\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.info(\n\t\t\tref !== undefined\n\t\t\t\t? `Resuming changes from cloud with ref ${ref}...`\n\t\t\t\t: \"Checking for pending cloud changes...\",\n\t\t);\n\n\t\tif (\n\t\t\tsilent &&\n\t\t\t!(await this.editSessionsStorageService.initialize(\"read\", true))\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype ResumeEvent = { outcome: string; hashedId?: string };\n\t\ttype ResumeClassification = {\n\t\t\towner: \"joyceerhl\";\n\t\t\tcomment: \"Reporting when an edit session is resumed from an edit session identifier.\";\n\t\t\toutcome: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The outcome of resuming the edit session.\";\n\t\t\t};\n\t\t\thashedId?: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The hash of the stored edit session id, for correlating success of stores and resumes.\";\n\t\t\t};\n\t\t};\n\t\tthis.telemetryService.publicLog2<ResumeEvent, ResumeClassification>(\n\t\t\t\"editSessions.resume\",\n\t\t);\n\n\t\tperformance.mark(\"code/willResumeEditSessionFromIdentifier\");\n\n\t\tprogress?.report({\n\t\t\tmessage: localize(\n\t\t\t\t\"checkingForWorkingChanges\",\n\t\t\t\t\"Checking for pending cloud changes...\",\n\t\t\t),\n\t\t});\n\t\tconst data = serializedData\n\t\t\t? { content: serializedData, ref: \"\" }\n\t\t\t: await this.editSessionsStorageService.read(\"editSessions\", ref);\n\t\tif (!data) {\n\t\t\tif (ref === undefined && !silent) {\n\t\t\t\tthis.notificationService.info(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"no cloud changes\",\n\t\t\t\t\t\t\"There are no changes to resume from the cloud.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else if (ref !== undefined) {\n\t\t\t\tthis.notificationService.warn(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"no cloud changes for ref\",\n\t\t\t\t\t\t\"Could not resume changes from the cloud for ID {0}.\",\n\t\t\t\t\t\tref,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.logService.info(\n\t\t\t\tref !== undefined\n\t\t\t\t\t? `Aborting resuming changes from cloud as no edit session content is available to be applied from ref ${ref}.`\n\t\t\t\t\t: `Aborting resuming edit session as no edit session content is available to be applied`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tprogress?.report({ message: resumeProgressOptionsTitle });\n\t\tconst editSession = JSON.parse(data.content);\n\t\tref = data.ref;\n\n\t\tif (editSession.version > EditSessionSchemaVersion) {\n\t\t\tthis.notificationService.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"client too old\",\n\t\t\t\t\t\"Please upgrade to a newer version of {0} to resume your working changes from the cloud.\",\n\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.telemetryService.publicLog2<ResumeEvent, ResumeClassification>(\n\t\t\t\t\"editSessions.resume.outcome\",\n\t\t\t\t{\n\t\t\t\t\thashedId: hashedEditSessionId(ref),\n\t\t\t\t\toutcome: \"clientUpdateNeeded\",\n\t\t\t\t},\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst { changes, conflictingChanges } = await this.generateChanges(\n\t\t\t\teditSession,\n\t\t\t\tref,\n\t\t\t\tforceApplyUnrelatedChange,\n\t\t\t\tapplyPartialMatch,\n\t\t\t);\n\t\t\tif (changes.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// TODO@joyceerhl Provide the option to diff files which would be overwritten by edit session contents\n\t\t\tif (conflictingChanges.length > 0) {\n\t\t\t\t// Allow to show edit sessions\n\n\t\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\t\ttype: Severity.Warning,\n\t\t\t\t\tmessage:\n\t\t\t\t\t\tconflictingChanges.length > 1\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"resume edit session warning many\",\n\t\t\t\t\t\t\t\t\t\"Resuming your working changes from the cloud will overwrite the following {0} files. Do you want to proceed?\",\n\t\t\t\t\t\t\t\t\tconflictingChanges.length,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"resume edit session warning 1\",\n\t\t\t\t\t\t\t\t\t\"Resuming your working changes from the cloud will overwrite {0}. Do you want to proceed?\",\n\t\t\t\t\t\t\t\t\tbasename(conflictingChanges[0].uri),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\tdetail:\n\t\t\t\t\t\tconflictingChanges.length > 1\n\t\t\t\t\t\t\t? getFileNamesMessage(\n\t\t\t\t\t\t\t\t\tconflictingChanges.map((c) => c.uri),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t});\n\n\t\t\t\tif (!confirmed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const { uri, type, contents } of changes) {\n\t\t\t\tif (type === ChangeType.Addition) {\n\t\t\t\t\tawait this.fileService.writeFile(\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tdecodeEditSessionFileContent(\n\t\t\t\t\t\t\teditSession.version,\n\t\t\t\t\t\t\tcontents!,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\ttype === ChangeType.Deletion &&\n\t\t\t\t\t(await this.fileService.exists(uri))\n\t\t\t\t) {\n\t\t\t\t\tawait this.fileService.del(uri);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.workspaceStateSynchronizer?.apply(false, {});\n\n\t\t\tthis.logService.info(\n\t\t\t\t`Deleting edit session with ref ${ref} after successfully applying it to current workspace...`,\n\t\t\t);\n\t\t\tawait this.editSessionsStorageService.delete(\"editSessions\", ref);\n\t\t\tthis.logService.info(`Deleted edit session with ref ${ref}.`);\n\n\t\t\tthis.telemetryService.publicLog2<ResumeEvent, ResumeClassification>(\n\t\t\t\t\"editSessions.resume.outcome\",\n\t\t\t\t{\n\t\t\t\t\thashedId: hashedEditSessionId(ref),\n\t\t\t\t\toutcome: \"resumeSucceeded\",\n\t\t\t\t},\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tthis.logService.error(\n\t\t\t\t\"Failed to resume edit session, reason: \",\n\t\t\t\t(ex as Error).toString(),\n\t\t\t);\n\t\t\tthis.notificationService.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"resume failed\",\n\t\t\t\t\t\"Failed to resume your working changes from the cloud.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tperformance.mark(\"code/didResumeEditSessionFromIdentifier\");\n\t}\n\n\tprivate async generateChanges(\n\t\teditSession: EditSession,\n\t\tref: string,\n\t\tforceApplyUnrelatedChange = false,\n\t\tapplyPartialMatch = false,\n\t) {\n\t\tconst changes: {\n\t\t\turi: URI;\n\t\t\ttype: ChangeType;\n\t\t\tcontents: string | undefined;\n\t\t}[] = [];\n\t\tconst conflictingChanges = [];\n\t\tconst workspaceFolders = this.contextService.getWorkspace().folders;\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\n\t\tfor (const folder of editSession.folders) {\n\t\t\tlet folderRoot: IWorkspaceFolder | undefined;\n\n\t\t\tif (folder.canonicalIdentity) {\n\t\t\t\t// Look for an edit session identifier that we can use\n\t\t\t\tfor (const f of workspaceFolders) {\n\t\t\t\t\tconst identity =\n\t\t\t\t\t\tawait this.editSessionIdentityService.getEditSessionIdentifier(\n\t\t\t\t\t\t\tf,\n\t\t\t\t\t\t\tcancellationTokenSource.token,\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Matching identity ${identity} against edit session folder identity ${folder.canonicalIdentity}...`,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tequals(identity, folder.canonicalIdentity) ||\n\t\t\t\t\t\tforceApplyUnrelatedChange\n\t\t\t\t\t) {\n\t\t\t\t\t\tfolderRoot = f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (identity !== undefined) {\n\t\t\t\t\t\tconst match =\n\t\t\t\t\t\t\tawait this.editSessionIdentityService.provideEditSessionIdentityMatch(\n\t\t\t\t\t\t\t\tf,\n\t\t\t\t\t\t\t\tidentity,\n\t\t\t\t\t\t\t\tfolder.canonicalIdentity,\n\t\t\t\t\t\t\t\tcancellationTokenSource.token,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (match === EditSessionIdentityMatch.Complete) {\n\t\t\t\t\t\t\tfolderRoot = f;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tmatch === EditSessionIdentityMatch.Partial &&\n\t\t\t\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\t\t\t\t\"workbench.experimental.cloudChanges.partialMatches.enabled\",\n\t\t\t\t\t\t\t) === true\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (applyPartialMatch) {\n\t\t\t\t\t\t\t\tfolderRoot = f;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Surface partially matching edit session\n\t\t\t\t\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\t\"editSessionPartialMatch\",\n\t\t\t\t\t\t\t\t\t\t\"You have pending working changes in the cloud for this workspace. Would you like to resume them?\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: localize(\"resume\", \"Resume\"),\n\t\t\t\t\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.resumeEditSession(\n\t\t\t\t\t\t\t\t\t\t\t\t\tref,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfolderRoot = workspaceFolders.find(\n\t\t\t\t\t(f) => f.name === folder.name,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!folderRoot) {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`Skipping applying ${folder.workingChanges.length} changes from edit session with ref ${ref} as no matching workspace folder was found.`,\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tchanges: [],\n\t\t\t\t\tconflictingChanges: [],\n\t\t\t\t\tcontributedStateHandlers: [],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst localChanges = new Set<string>();\n\t\t\tfor (const repository of this.scmService.repositories) {\n\t\t\t\tif (\n\t\t\t\t\trepository.provider.rootUri !== undefined &&\n\t\t\t\t\tthis.contextService.getWorkspaceFolder(\n\t\t\t\t\t\trepository.provider.rootUri,\n\t\t\t\t\t)?.name === folder.name\n\t\t\t\t) {\n\t\t\t\t\tconst repositoryChanges =\n\t\t\t\t\t\tthis.getChangedResources(repository);\n\t\t\t\t\trepositoryChanges.forEach((change) =>\n\t\t\t\t\t\tlocalChanges.add(change.toString()),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const change of folder.workingChanges) {\n\t\t\t\tconst uri = joinPath(folderRoot.uri, change.relativeFilePath);\n\n\t\t\t\tchanges.push({\n\t\t\t\t\turi,\n\t\t\t\t\ttype: change.type,\n\t\t\t\t\tcontents: change.contents,\n\t\t\t\t});\n\t\t\t\tif (\n\t\t\t\t\tawait this.willChangeLocalContents(\n\t\t\t\t\t\tlocalChanges,\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tchange,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tconflictingChanges.push({\n\t\t\t\t\t\turi,\n\t\t\t\t\t\ttype: change.type,\n\t\t\t\t\t\tcontents: change.contents,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { changes, conflictingChanges };\n\t}\n\n\tprivate async willChangeLocalContents(\n\t\tlocalChanges: Set<string>,\n\t\turiWithIncomingChanges: URI,\n\t\tincomingChange: Change,\n\t) {\n\t\tif (!localChanges.has(uriWithIncomingChanges.toString())) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { contents, type } = incomingChange;\n\n\t\tswitch (type) {\n\t\t\tcase ChangeType.Addition: {\n\t\t\t\tconst [originalContents, incomingContents] = await Promise.all([\n\t\t\t\t\tsha1Hex(contents),\n\t\t\t\t\tsha1Hex(\n\t\t\t\t\t\tencodeBase64(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tawait this.fileService.readFile(\n\t\t\t\t\t\t\t\t\turiWithIncomingChanges,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t).value,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t]);\n\t\t\t\treturn originalContents !== incomingContents;\n\t\t\t}\n\t\t\tcase ChangeType.Deletion: {\n\t\t\t\treturn await this.fileService.exists(uriWithIncomingChanges);\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unhandled change type.\");\n\t\t}\n\t}\n\n\tasync storeEditSession(\n\t\tfromStoreCommand: boolean,\n\t\tcancellationToken: CancellationToken,\n\t): Promise<string | undefined> {\n\t\tconst folders: Folder[] = [];\n\t\tlet editSessionSize = 0;\n\t\tlet hasEdits = false;\n\n\t\t// Save all saveable editors before building edit session contents\n\t\tawait this.editorService.saveAll();\n\n\t\tfor (const repository of this.scmService.repositories) {\n\t\t\t// Look through all resource groups and compute which files were added/modified/deleted\n\t\t\tconst trackedUris = this.getChangedResources(repository); // A URI might appear in more than one resource group\n\n\t\t\tconst workingChanges: Change[] = [];\n\n\t\t\tconst { rootUri } = repository.provider;\n\t\t\tconst workspaceFolder = rootUri\n\t\t\t\t? this.contextService.getWorkspaceFolder(rootUri)\n\t\t\t\t: undefined;\n\t\t\tlet name = workspaceFolder?.name;\n\n\t\t\tfor (const uri of trackedUris) {\n\t\t\t\tconst workspaceFolder =\n\t\t\t\t\tthis.contextService.getWorkspaceFolder(uri);\n\t\t\t\tif (!workspaceFolder) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Skipping working change ${uri.toString()} as no associated workspace folder was found.`,\n\t\t\t\t\t);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tawait this.editSessionIdentityService.onWillCreateEditSessionIdentity(\n\t\t\t\t\tworkspaceFolder,\n\t\t\t\t\tcancellationToken,\n\t\t\t\t);\n\n\t\t\t\tname = name ?? workspaceFolder.name;\n\t\t\t\tconst relativeFilePath =\n\t\t\t\t\trelativePath(workspaceFolder.uri, uri) ?? uri.path;\n\n\t\t\t\t// Only deal with file contents for now\n\t\t\t\ttry {\n\t\t\t\t\tif (!(await this.fileService.stat(uri)).isFile) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} catch {}\n\n\t\t\t\thasEdits = true;\n\n\t\t\t\tif (await this.fileService.exists(uri)) {\n\t\t\t\t\tconst contents = encodeBase64(\n\t\t\t\t\t\t(await this.fileService.readFile(uri)).value,\n\t\t\t\t\t);\n\t\t\t\t\teditSessionSize += contents.length;\n\t\t\t\t\tif (\n\t\t\t\t\t\teditSessionSize >\n\t\t\t\t\t\tthis.editSessionsStorageService.SIZE_LIMIT\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.notificationService.error(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"payload too large\",\n\t\t\t\t\t\t\t\t\"Your working changes exceed the size limit and cannot be stored.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tworkingChanges.push({\n\t\t\t\t\t\ttype: ChangeType.Addition,\n\t\t\t\t\t\tfileType: FileType.File,\n\t\t\t\t\t\tcontents: contents,\n\t\t\t\t\t\trelativeFilePath: relativeFilePath,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Assume it's a deletion\n\t\t\t\t\tworkingChanges.push({\n\t\t\t\t\t\ttype: ChangeType.Deletion,\n\t\t\t\t\t\tfileType: FileType.File,\n\t\t\t\t\t\tcontents: undefined,\n\t\t\t\t\t\trelativeFilePath: relativeFilePath,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet canonicalIdentity;\n\t\t\tif (workspaceFolder !== null && workspaceFolder !== undefined) {\n\t\t\t\tcanonicalIdentity =\n\t\t\t\t\tawait this.editSessionIdentityService.getEditSessionIdentifier(\n\t\t\t\t\t\tworkspaceFolder,\n\t\t\t\t\t\tcancellationToken,\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\t// TODO@joyceerhl debt: don't store working changes as a child of the folder\n\t\t\tfolders.push({\n\t\t\t\tworkingChanges,\n\t\t\t\tname: name ?? \"\",\n\t\t\t\tcanonicalIdentity: canonicalIdentity ?? undefined,\n\t\t\t\tabsoluteUri: workspaceFolder?.uri.toString(),\n\t\t\t});\n\t\t}\n\n\t\t// Store contributed workspace state\n\t\tawait this.workspaceStateSynchronizer?.sync(null, {});\n\n\t\tif (!hasEdits) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipped storing working changes in the cloud as there are no edits to store.\",\n\t\t\t);\n\t\t\tif (fromStoreCommand) {\n\t\t\t\tthis.notificationService.info(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"no working changes to store\",\n\t\t\t\t\t\t\"Skipped storing working changes in the cloud as there are no edits to store.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst data: EditSession = {\n\t\t\tfolders,\n\t\t\tversion: 2,\n\t\t\tworkspaceStateId:\n\t\t\t\tthis.editSessionsStorageService.lastWrittenResources.get(\n\t\t\t\t\t\"workspaceState\",\n\t\t\t\t)?.ref,\n\t\t};\n\n\t\ttry {\n\t\t\tthis.logService.info(`Storing edit session...`);\n\t\t\tconst ref = await this.editSessionsStorageService.write(\n\t\t\t\t\"editSessions\",\n\t\t\t\tdata,\n\t\t\t);\n\t\t\tthis.logService.info(`Stored edit session with ref ${ref}.`);\n\t\t\treturn ref;\n\t\t} catch (ex) {\n\t\t\tthis.logService.error(\n\t\t\t\t`Failed to store edit session, reason: `,\n\t\t\t\t(ex as Error).toString(),\n\t\t\t);\n\n\t\t\ttype UploadFailedEvent = { reason: string };\n\t\t\ttype UploadFailedClassification = {\n\t\t\t\towner: \"joyceerhl\";\n\t\t\t\tcomment: \"Reporting when Continue On server request fails.\";\n\t\t\t\treason?: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"The reason that the server request failed.\";\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tif (ex instanceof UserDataSyncStoreError) {\n\t\t\t\tswitch (ex.code) {\n\t\t\t\t\tcase UserDataSyncErrorCode.TooLarge:\n\t\t\t\t\t\t// Uploading a payload can fail due to server size limits\n\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\tUploadFailedEvent,\n\t\t\t\t\t\t\tUploadFailedClassification\n\t\t\t\t\t\t>(\"editSessions.upload.failed\", { reason: \"TooLarge\" });\n\t\t\t\t\t\tthis.notificationService.error(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"payload too large\",\n\t\t\t\t\t\t\t\t\"Your working changes exceed the size limit and cannot be stored.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\tUploadFailedEvent,\n\t\t\t\t\t\t\tUploadFailedClassification\n\t\t\t\t\t\t>(\"editSessions.upload.failed\", { reason: \"unknown\" });\n\t\t\t\t\t\tthis.notificationService.error(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"payload failed\",\n\t\t\t\t\t\t\t\t\"Your working changes cannot be stored.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getChangedResources(repository: ISCMRepository) {\n\t\treturn repository.provider.groups.reduce(\n\t\t\t(resources, resourceGroups) => {\n\t\t\t\tresourceGroups.resources.forEach((resource) =>\n\t\t\t\t\tresources.add(resource.sourceUri),\n\t\t\t\t);\n\t\t\t\treturn resources;\n\t\t\t},\n\t\t\tnew Set<URI>(),\n\t\t); // A URI might appear in more than one resource group\n\t}\n\n\tprivate hasEditSession() {\n\t\tfor (const repository of this.scmService.repositories) {\n\t\t\tif (this.getChangedResources(repository).size > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async shouldContinueOnWithEditSession(): Promise<boolean> {\n\t\ttype EditSessionsAuthCheckEvent = { outcome: string };\n\t\ttype EditSessionsAuthCheckClassification = {\n\t\t\towner: \"joyceerhl\";\n\t\t\tcomment: \"Reporting whether we can and should store edit session as part of Continue On.\";\n\t\t\toutcome: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The outcome of checking whether we can store an edit session as part of the Continue On flow.\";\n\t\t\t};\n\t\t};\n\n\t\t// If the user is already signed in, we should store edit session\n\t\tif (this.editSessionsStorageService.isSignedIn) {\n\t\t\treturn this.hasEditSession();\n\t\t}\n\n\t\t// If the user has been asked before and said no, don't use edit sessions\n\t\tif (\n\t\t\tthis.configurationService.getValue(\n\t\t\t\tuseEditSessionsWithContinueOn,\n\t\t\t) === \"off\"\n\t\t) {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tEditSessionsAuthCheckEvent,\n\t\t\t\tEditSessionsAuthCheckClassification\n\t\t\t>(\"continueOn.editSessions.canStore.outcome\", {\n\t\t\t\toutcome: \"disabledEditSessionsViaSetting\",\n\t\t\t});\n\t\t\treturn false;\n\t\t}\n\n\t\t// Prompt the user to use edit sessions if they currently could benefit from using it\n\t\tif (this.hasEditSession()) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst quickpick = disposables.add(\n\t\t\t\tthis.quickInputService.createQuickPick<IQuickPickItem>(),\n\t\t\t);\n\t\t\tquickpick.placeholder = localize(\n\t\t\t\t\"continue with cloud changes\",\n\t\t\t\t\"Select whether to bring your working changes with you\",\n\t\t\t);\n\t\t\tquickpick.ok = false;\n\t\t\tquickpick.ignoreFocusOut = true;\n\t\t\tconst withCloudChanges = {\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"with cloud changes\",\n\t\t\t\t\t\"Yes, continue with my working changes\",\n\t\t\t\t),\n\t\t\t};\n\t\t\tconst withoutCloudChanges = {\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"without cloud changes\",\n\t\t\t\t\t\"No, continue without my working changes\",\n\t\t\t\t),\n\t\t\t};\n\t\t\tquickpick.items = [withCloudChanges, withoutCloudChanges];\n\n\t\t\tconst continueWithCloudChanges = await new Promise<boolean>(\n\t\t\t\t(resolve, reject) => {\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tquickpick.onDidAccept(() => {\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\tquickpick.selectedItems[0] === withCloudChanges,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tquickpick.onDidHide(() => {\n\t\t\t\t\t\t\treject(new CancellationError());\n\t\t\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tquickpick.show();\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (!continueWithCloudChanges) {\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tEditSessionsAuthCheckEvent,\n\t\t\t\t\tEditSessionsAuthCheckClassification\n\t\t\t\t>(\"continueOn.editSessions.canStore.outcome\", {\n\t\t\t\t\toutcome: \"didNotEnableEditSessionsWhenPrompted\",\n\t\t\t\t});\n\t\t\t\treturn continueWithCloudChanges;\n\t\t\t}\n\n\t\t\tconst initialized =\n\t\t\t\tawait this.editSessionsStorageService.initialize(\"write\");\n\t\t\tif (!initialized) {\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tEditSessionsAuthCheckEvent,\n\t\t\t\t\tEditSessionsAuthCheckClassification\n\t\t\t\t>(\"continueOn.editSessions.canStore.outcome\", {\n\t\t\t\t\toutcome: \"didNotEnableEditSessionsWhenPrompted\",\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn initialized;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t//#region Continue Edit Session extension contribution point\n\n\tprivate registerContributedEditSessionOptions() {\n\t\tcontinueEditSessionExtPoint.setHandler((extensions) => {\n\t\t\tconst continueEditSessionOptions: ContinueEditSessionItem[] = [];\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tif (\n\t\t\t\t\t!isProposedApiEnabled(\n\t\t\t\t\t\textension.description,\n\t\t\t\t\t\t\"contribEditSessions\",\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!Array.isArray(extension.value)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor (const contribution of extension.value) {\n\t\t\t\t\tconst command = MenuRegistry.getCommand(\n\t\t\t\t\t\tcontribution.command,\n\t\t\t\t\t);\n\t\t\t\t\tif (!command) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst icon = command.icon;\n\t\t\t\t\tconst title =\n\t\t\t\t\t\ttypeof command.title === \"string\"\n\t\t\t\t\t\t\t? command.title\n\t\t\t\t\t\t\t: command.title.value;\n\t\t\t\t\tconst when = ContextKeyExpr.deserialize(contribution.when);\n\n\t\t\t\t\tcontinueEditSessionOptions.push(\n\t\t\t\t\t\tnew ContinueEditSessionItem(\n\t\t\t\t\t\t\tThemeIcon.isThemeIcon(icon)\n\t\t\t\t\t\t\t\t? `$(${icon.id}) ${title}`\n\t\t\t\t\t\t\t\t: title,\n\t\t\t\t\t\t\tcommand.id,\n\t\t\t\t\t\t\tcommand.source?.title,\n\t\t\t\t\t\t\twhen,\n\t\t\t\t\t\t\tcontribution.documentation,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\tif (contribution.qualifiedName) {\n\t\t\t\t\t\tthis.generateStandaloneOptionCommand(\n\t\t\t\t\t\t\tcommand.id,\n\t\t\t\t\t\t\tcontribution.qualifiedName,\n\t\t\t\t\t\t\tcontribution.category ?? command.category,\n\t\t\t\t\t\t\twhen,\n\t\t\t\t\t\t\tcontribution.remoteGroup,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.continueEditSessionOptions = continueEditSessionOptions;\n\t\t});\n\t}\n\n\tprivate generateStandaloneOptionCommand(\n\t\tcommandId: string,\n\t\tqualifiedName: string,\n\t\tcategory: string | ILocalizedString | undefined,\n\t\twhen: ContextKeyExpression | undefined,\n\t\tremoteGroup: string | undefined,\n\t) {\n\t\tconst command: IAction2Options = {\n\t\t\tid: `${continueWorkingOnCommand.id}.${commandId}`,\n\t\t\ttitle: { original: qualifiedName, value: qualifiedName },\n\t\t\tcategory:\n\t\t\t\ttypeof category === \"string\"\n\t\t\t\t\t? { original: category, value: category }\n\t\t\t\t\t: category,\n\t\t\tprecondition: when,\n\t\t\tf1: true,\n\t\t};\n\n\t\tif (!this.registeredCommands.has(command.id)) {\n\t\t\tthis.registeredCommands.add(command.id);\n\n\t\t\tthis._register(\n\t\t\t\tregisterAction2(\n\t\t\t\t\tclass StandaloneContinueOnOption extends Action2 {\n\t\t\t\t\t\tconstructor() {\n\t\t\t\t\t\t\tsuper(command);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\t\treturn accessor\n\t\t\t\t\t\t\t\t.get(ICommandService)\n\t\t\t\t\t\t\t\t.executeCommand(\n\t\t\t\t\t\t\t\t\tcontinueWorkingOnCommand.id,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tcommandId,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (remoteGroup !== undefined) {\n\t\t\t\tMenuRegistry.appendMenuItem(\n\t\t\t\t\tMenuId.StatusBarRemoteIndicatorMenu,\n\t\t\t\t\t{\n\t\t\t\t\t\tgroup: remoteGroup,\n\t\t\t\t\t\tcommand: command,\n\t\t\t\t\t\twhen: command.precondition,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate registerContinueInLocalFolderAction(): void {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass ContinueInLocalFolderAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper(openLocalFolderCommand);\n\t\t\t\t\t}\n\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t): Promise<URI | undefined> {\n\t\t\t\t\t\tconst selection =\n\t\t\t\t\t\t\tawait that.fileDialogService.showOpenDialog({\n\t\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\t\"continueEditSession.openLocalFolder.title.v2\",\n\t\t\t\t\t\t\t\t\t\"Select a local folder to continue working in\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcanSelectFolders: true,\n\t\t\t\t\t\t\t\tcanSelectMany: false,\n\t\t\t\t\t\t\t\tcanSelectFiles: false,\n\t\t\t\t\t\t\t\tavailableFileSystems: [Schemas.file],\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn selection?.length !== 1\n\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t: URI.from({\n\t\t\t\t\t\t\t\t\tscheme: that.productService.urlProtocol,\n\t\t\t\t\t\t\t\t\tauthority: Schemas.file,\n\t\t\t\t\t\t\t\t\tpath: selection[0].path,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tif (\n\t\t\tgetVirtualWorkspaceLocation(this.contextService.getWorkspace()) !==\n\t\t\t\tundefined &&\n\t\t\tisNative\n\t\t) {\n\t\t\tthis.generateStandaloneOptionCommand(\n\t\t\t\topenLocalFolderCommand.id,\n\t\t\t\tlocalize(\n\t\t\t\t\t\"continueWorkingOn.existingLocalFolder\",\n\t\t\t\t\t\"Continue Working in Existing Local Folder\",\n\t\t\t\t),\n\t\t\t\tundefined,\n\t\t\t\topenLocalFolderCommand.precondition,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async pickContinueEditSessionDestination(): Promise<\n\t\tstring | undefined\n\t> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst quickPick = disposables.add(\n\t\t\tthis.quickInputService.createQuickPick<ContinueEditSessionItem>({\n\t\t\t\tuseSeparators: true,\n\t\t\t}),\n\t\t);\n\n\t\tconst workspaceContext =\n\t\t\tthis.contextService.getWorkbenchState() === WorkbenchState.FOLDER\n\t\t\t\t? this.contextService.getWorkspace().folders[0].name\n\t\t\t\t: this.contextService\n\t\t\t\t\t\t.getWorkspace()\n\t\t\t\t\t\t.folders.map((folder) => folder.name)\n\t\t\t\t\t\t.join(\", \");\n\t\tquickPick.placeholder = localize(\n\t\t\t\"continueEditSessionPick.title.v2\",\n\t\t\t\"Select a development environment to continue working on {0} in\",\n\t\t\t`'${workspaceContext}'`,\n\t\t);\n\t\tquickPick.items = this.createPickItems();\n\t\tthis.extensionService.onDidChangeExtensions(() => {\n\t\t\tquickPick.items = this.createPickItems();\n\t\t});\n\n\t\tconst command = await new Promise<string | undefined>(\n\t\t\t(resolve, reject) => {\n\t\t\t\tdisposables.add(\n\t\t\t\t\tquickPick.onDidHide(() => {\n\t\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tdisposables.add(\n\t\t\t\t\tquickPick.onDidAccept((e) => {\n\t\t\t\t\t\tconst selection = quickPick.activeItems[0].command;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tselection ===\n\t\t\t\t\t\t\tinstallAdditionalContinueOnOptionsCommand.id\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tvoid this.commandService.executeCommand(\n\t\t\t\t\t\t\t\tinstallAdditionalContinueOnOptionsCommand.id,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(selection);\n\t\t\t\t\t\t\tquickPick.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tquickPick.show();\n\n\t\t\t\tdisposables.add(\n\t\t\t\t\tquickPick.onDidTriggerItemButton(async (e) => {\n\t\t\t\t\t\tif (e.item.documentation !== undefined) {\n\t\t\t\t\t\t\tconst uri = URI.isUri(e.item.documentation)\n\t\t\t\t\t\t\t\t? URI.parse(e.item.documentation)\n\t\t\t\t\t\t\t\t: await this.commandService.executeCommand(\n\t\t\t\t\t\t\t\t\t\te.item.documentation,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tvoid this.openerService.open(uri, {\n\t\t\t\t\t\t\t\topenExternal: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\n\t\tquickPick.dispose();\n\n\t\treturn command;\n\t}\n\n\tprivate async resolveDestination(\n\t\tcommand: string,\n\t): Promise<URI | \"noDestinationUri\" | undefined> {\n\t\ttype EvaluateContinueOnDestinationEvent = {\n\t\t\toutcome: string;\n\t\t\tselection: string;\n\t\t};\n\t\ttype EvaluateContinueOnDestinationClassification = {\n\t\t\towner: \"joyceerhl\";\n\t\t\tcomment: \"Reporting the outcome of evaluating a selected Continue On destination option.\";\n\t\t\tselection: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The selected Continue On destination option.\";\n\t\t\t};\n\t\t\toutcome: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The outcome of evaluating the selected Continue On destination option.\";\n\t\t\t};\n\t\t};\n\n\t\ttry {\n\t\t\tconst uri = await this.commandService.executeCommand(command);\n\n\t\t\t// Some continue on commands do not return a URI\n\t\t\t// to support extensions which want to be in control\n\t\t\t// of how the destination is opened\n\t\t\tif (uri === undefined) {\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tEvaluateContinueOnDestinationEvent,\n\t\t\t\t\tEvaluateContinueOnDestinationClassification\n\t\t\t\t>(\"continueOn.openDestination.outcome\", {\n\t\t\t\t\tselection: command,\n\t\t\t\t\toutcome: \"noDestinationUri\",\n\t\t\t\t});\n\t\t\t\treturn \"noDestinationUri\";\n\t\t\t}\n\n\t\t\tif (URI.isUri(uri)) {\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tEvaluateContinueOnDestinationEvent,\n\t\t\t\t\tEvaluateContinueOnDestinationClassification\n\t\t\t\t>(\"continueOn.openDestination.outcome\", {\n\t\t\t\t\tselection: command,\n\t\t\t\t\toutcome: \"resolvedUri\",\n\t\t\t\t});\n\t\t\t\treturn uri;\n\t\t\t}\n\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tEvaluateContinueOnDestinationEvent,\n\t\t\t\tEvaluateContinueOnDestinationClassification\n\t\t\t>(\"continueOn.openDestination.outcome\", {\n\t\t\t\tselection: command,\n\t\t\t\toutcome: \"invalidDestination\",\n\t\t\t});\n\t\t\treturn undefined;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof CancellationError) {\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tEvaluateContinueOnDestinationEvent,\n\t\t\t\t\tEvaluateContinueOnDestinationClassification\n\t\t\t\t>(\"continueOn.openDestination.outcome\", {\n\t\t\t\t\tselection: command,\n\t\t\t\t\toutcome: \"cancelled\",\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tEvaluateContinueOnDestinationEvent,\n\t\t\t\t\tEvaluateContinueOnDestinationClassification\n\t\t\t\t>(\"continueOn.openDestination.outcome\", {\n\t\t\t\t\tselection: command,\n\t\t\t\t\toutcome: \"unknownError\",\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate createPickItems(): (\n\t\t| ContinueEditSessionItem\n\t\t| IQuickPickSeparator\n\t)[] {\n\t\tconst items = [...this.continueEditSessionOptions].filter(\n\t\t\t(option) =>\n\t\t\t\toption.when === undefined ||\n\t\t\t\tthis.contextKeyService.contextMatchesRules(option.when),\n\t\t);\n\n\t\tif (\n\t\t\tgetVirtualWorkspaceLocation(this.contextService.getWorkspace()) !==\n\t\t\t\tundefined &&\n\t\t\tisNative\n\t\t) {\n\t\t\titems.push(\n\t\t\t\tnew ContinueEditSessionItem(\n\t\t\t\t\t\"$(folder) \" +\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"continueEditSessionItem.openInLocalFolder.v2\",\n\t\t\t\t\t\t\t\"Open in Local Folder\",\n\t\t\t\t\t\t),\n\t\t\t\t\topenLocalFolderCommand.id,\n\t\t\t\t\tlocalize(\"continueEditSessionItem.builtin\", \"Built-in\"),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst sortedItems: (ContinueEditSessionItem | IQuickPickSeparator)[] =\n\t\t\titems.sort((item1, item2) =>\n\t\t\t\titem1.label.localeCompare(item2.label),\n\t\t\t);\n\t\treturn sortedItems.concat(\n\t\t\t{ type: \"separator\" },\n\t\t\tnew ContinueEditSessionItem(\n\t\t\t\tinstallAdditionalContinueOnOptionsCommand.title,\n\t\t\t\tinstallAdditionalContinueOnOptionsCommand.id,\n\t\t\t),\n\t\t);\n\t}\n}\n\nconst infoButtonClass = ThemeIcon.asClassName(Codicon.info);\nclass ContinueEditSessionItem implements IQuickPickItem {\n\tpublic readonly buttons: IQuickInputButton[] | undefined;\n\n\tconstructor(\n\t\tpublic readonly label: string,\n\t\tpublic readonly command: string,\n\t\tpublic readonly description?: string,\n\t\tpublic readonly when?: ContextKeyExpression,\n\t\tpublic readonly documentation?: string,\n\t) {\n\t\tif (documentation !== undefined) {\n\t\t\tthis.buttons = [\n\t\t\t\t{\n\t\t\t\t\ticonClass: infoButtonClass,\n\t\t\t\t\ttooltip: localize(\"learnMoreTooltip\", \"Learn More\"),\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t}\n}\n\ninterface ICommand {\n\tcommand: string;\n\tgroup: string;\n\twhen: string;\n\tdocumentation?: string;\n\tqualifiedName?: string;\n\tcategory?: string;\n\tremoteGroup?: string;\n}\n\nconst continueEditSessionExtPoint = ExtensionsRegistry.registerExtensionPoint<\n\tICommand[]\n>({\n\textensionPoint: \"continueEditSession\",\n\tjsonSchema: {\n\t\tdescription: localize(\n\t\t\t\"continueEditSessionExtPoint\",\n\t\t\t\"Contributes options for continuing the current edit session in a different environment\",\n\t\t),\n\t\ttype: \"array\",\n\t\titems: {\n\t\t\ttype: \"object\",\n\t\t\tproperties: {\n\t\t\t\tcommand: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"continueEditSessionExtPoint.command\",\n\t\t\t\t\t\t\"Identifier of the command to execute. The command must be declared in the 'commands'-section and return a URI representing a different environment where the current edit session can be continued.\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t\tgroup: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"continueEditSessionExtPoint.group\",\n\t\t\t\t\t\t\"Group into which this item belongs.\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t\tqualifiedName: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"continueEditSessionExtPoint.qualifiedName\",\n\t\t\t\t\t\t\"A fully qualified name for this item which is used for display in menus.\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t\tdescription: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"continueEditSessionExtPoint.description\",\n\t\t\t\t\t\t\"The url, or a command that returns the url, to the option's documentation page.\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t\tremoteGroup: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"continueEditSessionExtPoint.remoteGroup\",\n\t\t\t\t\t\t\"Group into which this item belongs in the remote indicator.\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t\twhen: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"continueEditSessionExtPoint.when\",\n\t\t\t\t\t\t\"Condition which must be true to show this item.\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t},\n\t\t\trequired: [\"command\"],\n\t\t},\n\t},\n});\n\n//#endregion\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n);\nworkbenchRegistry.registerWorkbenchContribution(\n\tEditSessionsContribution,\n\tLifecyclePhase.Restored,\n);\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration({\n\t...workbenchConfigurationNodeBase,\n\tproperties: {\n\t\t\"workbench.experimental.cloudChanges.autoStore\": {\n\t\t\tenum: [\"onShutdown\", \"off\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"autoStoreWorkingChanges.onShutdown\",\n\t\t\t\t\t\"Automatically store current working changes in the cloud on window close.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"autoStoreWorkingChanges.off\",\n\t\t\t\t\t\"Never attempt to automatically store working changes in the cloud.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\ttype: \"string\",\n\t\t\ttags: [\"experimental\", \"usesOnlineServices\"],\n\t\t\tdefault: \"off\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"autoStoreWorkingChangesDescription\",\n\t\t\t\t\"Controls whether to automatically store available working changes in the cloud for the current workspace. This setting has no effect in the web.\",\n\t\t\t),\n\t\t},\n\t\t\"workbench.cloudChanges.autoResume\": {\n\t\t\tenum: [\"onReload\", \"off\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"autoResumeWorkingChanges.onReload\",\n\t\t\t\t\t\"Automatically resume available working changes from the cloud on window reload.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"autoResumeWorkingChanges.off\",\n\t\t\t\t\t\"Never attempt to resume working changes from the cloud.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\ttype: \"string\",\n\t\t\ttags: [\"usesOnlineServices\"],\n\t\t\tdefault: \"onReload\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"autoResumeWorkingChanges\",\n\t\t\t\t\"Controls whether to automatically resume available working changes stored in the cloud for the current workspace.\",\n\t\t\t),\n\t\t},\n\t\t\"workbench.cloudChanges.continueOn\": {\n\t\t\tenum: [\"prompt\", \"off\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"continueOnCloudChanges.promptForAuth\",\n\t\t\t\t\t\"Prompt the user to sign in to store working changes in the cloud with Continue Working On.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"continueOnCloudChanges.off\",\n\t\t\t\t\t\"Do not store working changes in the cloud with Continue Working On unless the user has already turned on Cloud Changes.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\ttype: \"string\",\n\t\t\ttags: [\"usesOnlineServices\"],\n\t\t\tdefault: \"prompt\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"continueOnCloudChanges\",\n\t\t\t\t\"Controls whether to prompt the user to store working changes in the cloud when using Continue Working On.\",\n\t\t\t),\n\t\t},\n\t\t\"workbench.experimental.cloudChanges.partialMatches.enabled\": {\n\t\t\ttype: \"boolean\",\n\t\t\ttags: [\"experimental\", \"usesOnlineServices\"],\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"cloudChangesPartialMatchesEnabled\",\n\t\t\t\t\"Controls whether to surface cloud changes which partially match the current session.\",\n\t\t\t),\n\t\t},\n\t},\n});\n"],
  "mappings": "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",
  "names": ["ref", "workspaceFolder"]
}
