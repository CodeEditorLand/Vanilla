{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/workspaces/browser/workspaces.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, IWorkbenchContribution } from '../../../common/contributions.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { hasWorkspaceFileExtension, IWorkspaceContextService, WorkbenchState, WORKSPACE_SUFFIX } from '../../../../platform/workspace/common/workspace.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { INeverShowAgainOptions, INotificationService, NeverShowAgainScope, NotificationPriority, Severity } from '../../../../platform/notification/common/notification.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { isEqual, joinPath } from '../../../../base/common/resources.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { IQuickInputService, IQuickPickItem } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, StorageScope } from '../../../../platform/storage/common/storage.js';\nimport { isVirtualWorkspace } from '../../../../platform/workspace/common/virtualWorkspace.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { ActiveEditorContext, ResourceContextKey, TemporaryWorkspaceContext } from '../../../common/contextkeys.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { TEXT_FILE_EDITOR_ID } from '../../files/common/files.js';\n\n/**\n * A workbench contribution that will look for `.code-workspace` files in the root of the\n * workspace folder and open a notification to suggest to open one of the workspaces.\n */\nexport class WorkspacesFinderContribution extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IStorageService private readonly storageService: IStorageService\n\t) {\n\t\tsuper();\n\n\t\tthis.findWorkspaces();\n\t}\n\n\tprivate async findWorkspaces(): Promise<void> {\n\t\tconst folder = this.contextService.getWorkspace().folders[0];\n\t\tif (!folder || this.contextService.getWorkbenchState() !== WorkbenchState.FOLDER || isVirtualWorkspace(this.contextService.getWorkspace())) {\n\t\t\treturn; // require a single (non virtual) root folder\n\t\t}\n\n\t\tconst rootFileNames = (await this.fileService.resolve(folder.uri)).children?.map(child => child.name);\n\t\tif (Array.isArray(rootFileNames)) {\n\t\t\tconst workspaceFiles = rootFileNames.filter(hasWorkspaceFileExtension);\n\t\t\tif (workspaceFiles.length > 0) {\n\t\t\t\tthis.doHandleWorkspaceFiles(folder.uri, workspaceFiles);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate doHandleWorkspaceFiles(folder: URI, workspaces: string[]): void {\n\t\tconst neverShowAgain: INeverShowAgainOptions = { id: 'workspaces.dontPromptToOpen', scope: NeverShowAgainScope.WORKSPACE, isSecondary: true };\n\n\t\t// Prompt to open one workspace\n\t\tif (workspaces.length === 1) {\n\t\t\tconst workspaceFile = workspaces[0];\n\n\t\t\tthis.notificationService.prompt(Severity.Info, localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'foundWorkspace',\n\t\t\t\t\tcomment: ['{Locked=\"]({1})\"}']\n\t\t\t\t},\n\t\t\t\t\"This folder contains a workspace file '{0}'. Do you want to open it? [Learn more]({1}) about workspace files.\",\n\t\t\t\tworkspaceFile,\n\t\t\t\t'https://go.microsoft.com/fwlink/?linkid=2025315'\n\t\t\t), [{\n\t\t\t\tlabel: localize('openWorkspace', \"Open Workspace\"),\n\t\t\t\trun: () => this.hostService.openWindow([{ workspaceUri: joinPath(folder, workspaceFile) }])\n\t\t\t}], {\n\t\t\t\tneverShowAgain,\n\t\t\t\tpriority: !this.storageService.isNew(StorageScope.WORKSPACE) ? NotificationPriority.SILENT : undefined // https://github.com/microsoft/vscode/issues/125315\n\t\t\t});\n\t\t}\n\n\t\t// Prompt to select a workspace from many\n\t\telse if (workspaces.length > 1) {\n\t\t\tthis.notificationService.prompt(Severity.Info, localize({\n\t\t\t\tkey: 'foundWorkspaces',\n\t\t\t\tcomment: ['{Locked=\"]({0})\"}']\n\t\t\t}, \"This folder contains multiple workspace files. Do you want to open one? [Learn more]({0}) about workspace files.\", 'https://go.microsoft.com/fwlink/?linkid=2025315'), [{\n\t\t\t\tlabel: localize('selectWorkspace', \"Select Workspace\"),\n\t\t\t\trun: () => {\n\t\t\t\t\tthis.quickInputService.pick(\n\t\t\t\t\t\tworkspaces.map(workspace => ({ label: workspace } satisfies IQuickPickItem)),\n\t\t\t\t\t\t{ placeHolder: localize('selectToOpen', \"Select a workspace to open\") }).then(pick => {\n\t\t\t\t\t\t\tif (pick) {\n\t\t\t\t\t\t\t\tthis.hostService.openWindow([{ workspaceUri: joinPath(folder, pick.label) }]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}], {\n\t\t\t\tneverShowAgain,\n\t\t\t\tpriority: !this.storageService.isNew(StorageScope.WORKSPACE) ? NotificationPriority.SILENT : undefined // https://github.com/microsoft/vscode/issues/125315\n\t\t\t});\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(WorkspacesFinderContribution, LifecyclePhase.Eventually);\n\n// Render \"Open Workspace\" button in *.code-workspace files\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.openWorkspaceFromEditor',\n\t\t\ttitle: localize2('openWorkspace', \"Open Workspace\"),\n\t\t\tf1: false,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.EditorContent,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tResourceContextKey.Extension.isEqualTo(WORKSPACE_SUFFIX),\n\t\t\t\t\tActiveEditorContext.isEqualTo(TEXT_FILE_EDITOR_ID),\n\t\t\t\t\tTemporaryWorkspaceContext.toNegated()\n\t\t\t\t)\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, uri: URI): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\n\t\tif (contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tconst workspaceConfiguration = contextService.getWorkspace().configuration;\n\t\t\tif (workspaceConfiguration && isEqual(workspaceConfiguration, uri)) {\n\t\t\t\tnotificationService.info(localize('alreadyOpen', \"This workspace is already open.\"));\n\n\t\t\t\treturn; // workspace already opened\n\t\t\t}\n\t\t}\n\n\t\treturn hostService.openWindow([{ workspaceUri: uri }]);\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
