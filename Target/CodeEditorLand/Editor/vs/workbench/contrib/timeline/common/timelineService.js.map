{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/timeline/common/timelineService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport {\n\ttype ITimelineService,\n\ttype TimelineChangeEvent,\n\ttype TimelineOptions,\n\tTimelinePaneId,\n\ttype TimelineProvider,\n\ttype TimelineProvidersChangeEvent,\n} from \"./timeline.js\";\n\nexport const TimelineHasProviderContext = new RawContextKey<boolean>(\n\t\"timelineHasProvider\",\n\tfalse,\n);\n\nexport class TimelineService implements ITimelineService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeProviders =\n\t\tnew Emitter<TimelineProvidersChangeEvent>();\n\treadonly onDidChangeProviders: Event<TimelineProvidersChangeEvent> =\n\t\tthis._onDidChangeProviders.event;\n\n\tprivate readonly _onDidChangeTimeline = new Emitter<TimelineChangeEvent>();\n\treadonly onDidChangeTimeline: Event<TimelineChangeEvent> =\n\t\tthis._onDidChangeTimeline.event;\n\tprivate readonly _onDidChangeUri = new Emitter<URI>();\n\treadonly onDidChangeUri: Event<URI> = this._onDidChangeUri.event;\n\n\tprivate readonly hasProviderContext: IContextKey<boolean>;\n\tprivate readonly providers = new Map<string, TimelineProvider>();\n\tprivate readonly providerSubscriptions = new Map<string, IDisposable>();\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IViewsService protected viewsService: IViewsService,\n\t\t@IConfigurationService\n\t\tprotected configurationService: IConfigurationService,\n\t\t@IContextKeyService protected contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.hasProviderContext = TimelineHasProviderContext.bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\t\tthis.updateHasProviderContext();\n\t}\n\n\tgetSources() {\n\t\treturn [...this.providers.values()].map((p) => ({\n\t\t\tid: p.id,\n\t\t\tlabel: p.label,\n\t\t}));\n\t}\n\n\tgetTimeline(\n\t\tid: string,\n\t\turi: URI,\n\t\toptions: TimelineOptions,\n\t\ttokenSource: CancellationTokenSource,\n\t) {\n\t\tthis.logService.trace(\n\t\t\t`TimelineService#getTimeline(${id}): uri=${uri.toString()}`,\n\t\t);\n\n\t\tconst provider = this.providers.get(id);\n\t\tif (provider === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (typeof provider.scheme === \"string\") {\n\t\t\tif (provider.scheme !== \"*\" && provider.scheme !== uri.scheme) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else if (!provider.scheme.includes(uri.scheme)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tresult: provider\n\t\t\t\t.provideTimeline(uri, options, tokenSource.token)\n\t\t\t\t.then((result) => {\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.items = result.items.map((item) => ({\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tsource: provider.id,\n\t\t\t\t\t}));\n\t\t\t\t\tresult.items.sort(\n\t\t\t\t\t\t(a, b) =>\n\t\t\t\t\t\t\tb.timestamp - a.timestamp ||\n\t\t\t\t\t\t\tb.source.localeCompare(a.source, undefined, {\n\t\t\t\t\t\t\t\tnumeric: true,\n\t\t\t\t\t\t\t\tsensitivity: \"base\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn result;\n\t\t\t\t}),\n\t\t\toptions: options,\n\t\t\tsource: provider.id,\n\t\t\ttokenSource: tokenSource,\n\t\t\turi: uri,\n\t\t};\n\t}\n\n\tregisterTimelineProvider(provider: TimelineProvider): IDisposable {\n\t\tthis.logService.trace(\n\t\t\t`TimelineService#registerTimelineProvider: id=${provider.id}`,\n\t\t);\n\n\t\tconst id = provider.id;\n\n\t\tconst existing = this.providers.get(id);\n\t\tif (existing) {\n\t\t\t// For now to deal with https://github.com/microsoft/vscode/issues/89553 allow any overwritting here (still will be blocked in the Extension Host)\n\t\t\t// TODO@eamodio: Ultimately will need to figure out a way to unregister providers when the Extension Host restarts/crashes\n\t\t\t// throw new Error(`Timeline Provider ${id} already exists.`);\n\t\t\ttry {\n\t\t\t\texisting?.dispose();\n\t\t\t} catch {}\n\t\t}\n\n\t\tthis.providers.set(id, provider);\n\n\t\tthis.updateHasProviderContext();\n\n\t\tif (provider.onDidChange) {\n\t\t\tthis.providerSubscriptions.set(\n\t\t\t\tid,\n\t\t\t\tprovider.onDidChange((e) => this._onDidChangeTimeline.fire(e)),\n\t\t\t);\n\t\t}\n\t\tthis._onDidChangeProviders.fire({ added: [id] });\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.providers.delete(id);\n\t\t\t\tthis._onDidChangeProviders.fire({ removed: [id] });\n\t\t\t},\n\t\t};\n\t}\n\n\tunregisterTimelineProvider(id: string): void {\n\t\tthis.logService.trace(\n\t\t\t`TimelineService#unregisterTimelineProvider: id=${id}`,\n\t\t);\n\n\t\tif (!this.providers.has(id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.providers.delete(id);\n\t\tthis.providerSubscriptions.delete(id);\n\n\t\tthis.updateHasProviderContext();\n\n\t\tthis._onDidChangeProviders.fire({ removed: [id] });\n\t}\n\n\tsetUri(uri: URI) {\n\t\tthis.viewsService.openView(TimelinePaneId, true);\n\t\tthis._onDidChangeUri.fire(uri);\n\t}\n\n\tprivate updateHasProviderContext() {\n\t\tthis.hasProviderContext.set(this.providers.size !== 0);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
