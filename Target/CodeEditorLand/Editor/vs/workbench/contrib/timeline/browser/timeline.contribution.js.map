{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/timeline/browser/timeline.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IViewsRegistry, IViewDescriptor, Extensions as ViewExtensions } from '../../../common/views.js';\nimport { VIEW_CONTAINER } from '../../files/browser/explorerViewlet.js';\nimport { ITimelineService, TimelinePaneId } from '../common/timeline.js';\nimport { TimelineHasProviderContext, TimelineService } from '../common/timelineService.js';\nimport { TimelinePane } from './timelinePane.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ISubmenuItem, MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandHandler, CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ExplorerFolderContext } from '../../files/common/files.js';\nimport { ResourceContextKey } from '../../../common/contextkeys.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\n\nconst timelineViewIcon = registerIcon('timeline-view-icon', Codicon.history, localize('timelineViewIcon', 'View icon of the timeline view.'));\nconst timelineOpenIcon = registerIcon('timeline-open', Codicon.history, localize('timelineOpenIcon', 'Icon for the open timeline action.'));\n\nexport class TimelinePaneDescriptor implements IViewDescriptor {\n\treadonly id = TimelinePaneId;\n\treadonly name: ILocalizedString = TimelinePane.TITLE;\n\treadonly containerIcon = timelineViewIcon;\n\treadonly ctorDescriptor = new SyncDescriptor(TimelinePane);\n\treadonly order = 2;\n\treadonly weight = 30;\n\treadonly collapsed = true;\n\treadonly canToggleVisibility = true;\n\treadonly hideByDefault = false;\n\treadonly canMoveView = true;\n\treadonly when = TimelineHasProviderContext;\n\n\tfocusCommand = { id: 'timeline.focus' };\n}\n\n// Configuration\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\tid: 'timeline',\n\torder: 1001,\n\ttitle: localize('timelineConfigurationTitle', \"Timeline\"),\n\ttype: 'object',\n\tproperties: {\n\t\t'timeline.pageSize': {\n\t\t\ttype: ['number', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDescription: localize('timeline.pageSize', \"The number of items to show in the Timeline view by default and when loading more items. Setting to `null` (the default) will automatically choose a page size based on the visible area of the Timeline view.\"),\n\t\t},\n\t\t'timeline.pageOnScroll': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: localize('timeline.pageOnScroll', \"Experimental. Controls whether the Timeline view will load the next page of items when you scroll to the end of the list.\"),\n\t\t},\n\t}\n});\n\nRegistry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry).registerViews([new TimelinePaneDescriptor()], VIEW_CONTAINER);\n\nnamespace OpenTimelineAction {\n\n\texport const ID = 'files.openTimeline';\n\texport const LABEL = localize('files.openTimeline', \"Open Timeline\");\n\n\texport function handler(): ICommandHandler {\n\t\treturn (accessor, arg) => {\n\t\t\tconst service = accessor.get(ITimelineService);\n\t\t\treturn service.setUri(arg);\n\t\t};\n\t}\n}\n\nCommandsRegistry.registerCommand(OpenTimelineAction.ID, OpenTimelineAction.handler());\n\nMenuRegistry.appendMenuItem(MenuId.ExplorerContext, ({\n\tgroup: '4_timeline',\n\torder: 1,\n\tcommand: {\n\t\tid: OpenTimelineAction.ID,\n\t\ttitle: OpenTimelineAction.LABEL,\n\t\ticon: timelineOpenIcon\n\t},\n\twhen: ContextKeyExpr.and(ExplorerFolderContext.toNegated(), ResourceContextKey.HasResource, TimelineHasProviderContext)\n}));\n\nconst timelineFilter = registerIcon('timeline-filter', Codicon.filter, localize('timelineFilter', 'Icon for the filter timeline action.'));\n\nMenuRegistry.appendMenuItem(MenuId.TimelineTitle, {\n\tsubmenu: MenuId.TimelineFilterSubMenu,\n\ttitle: localize('filterTimeline', \"Filter Timeline\"),\n\tgroup: 'navigation',\n\torder: 100,\n\ticon: timelineFilter\n} satisfies ISubmenuItem);\n\nregisterSingleton(ITimelineService, TimelineService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": ["OpenTimelineAction"]
}
