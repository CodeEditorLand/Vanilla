{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/customEditor/common/customEditorModelManager.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createSingleCallFunction } from \"../../../../base/common/functional.js\";\nimport type { IReference } from \"../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type {\n\tICustomEditorModel,\n\tICustomEditorModelManager,\n} from \"./customEditor.js\";\n\nexport class CustomEditorModelManager implements ICustomEditorModelManager {\n\tprivate readonly _references = new Map<\n\t\tstring,\n\t\t{\n\t\t\treadonly viewType: string;\n\t\t\treadonly model: Promise<ICustomEditorModel>;\n\t\t\tcounter: number;\n\t\t}\n\t>();\n\n\tpublic async getAllModels(resource: URI): Promise<ICustomEditorModel[]> {\n\t\tconst keyStart = `${resource.toString()}@@@`;\n\t\tconst models = [];\n\t\tfor (const [key, entry] of this._references) {\n\t\t\tif (key.startsWith(keyStart) && entry.model) {\n\t\t\t\tmodels.push(await entry.model);\n\t\t\t}\n\t\t}\n\t\treturn models;\n\t}\n\tpublic async get(\n\t\tresource: URI,\n\t\tviewType: string,\n\t): Promise<ICustomEditorModel | undefined> {\n\t\tconst key = this.key(resource, viewType);\n\t\tconst entry = this._references.get(key);\n\t\treturn entry?.model;\n\t}\n\n\tpublic tryRetain(\n\t\tresource: URI,\n\t\tviewType: string,\n\t): Promise<IReference<ICustomEditorModel>> | undefined {\n\t\tconst key = this.key(resource, viewType);\n\n\t\tconst entry = this._references.get(key);\n\t\tif (!entry) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tentry.counter++;\n\n\t\treturn entry.model.then((model) => {\n\t\t\treturn {\n\t\t\t\tobject: model,\n\t\t\t\tdispose: createSingleCallFunction(() => {\n\t\t\t\t\tif (--entry.counter <= 0) {\n\t\t\t\t\t\tentry.model.then((x) => x.dispose());\n\t\t\t\t\t\tthis._references.delete(key);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic add(\n\t\tresource: URI,\n\t\tviewType: string,\n\t\tmodel: Promise<ICustomEditorModel>,\n\t): Promise<IReference<ICustomEditorModel>> {\n\t\tconst key = this.key(resource, viewType);\n\t\tconst existing = this._references.get(key);\n\t\tif (existing) {\n\t\t\tthrow new Error(\"Model already exists\");\n\t\t}\n\n\t\tthis._references.set(key, { viewType, model, counter: 0 });\n\t\treturn this.tryRetain(resource, viewType)!;\n\t}\n\n\tpublic disposeAllModelsForView(viewType: string): void {\n\t\tfor (const [key, value] of this._references) {\n\t\t\tif (value.viewType === viewType) {\n\t\t\t\tvalue.model.then((x) => x.dispose());\n\t\t\t\tthis._references.delete(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate key(resource: URI, viewType: string): string {\n\t\treturn `${resource.toString()}@@@${viewType}`;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,gCAAgC;AAQlC,MAAM,yBAA8D;AAAA,EAb3E,OAa2E;AAAA;AAAA;AAAA,EACzD,cAAc,oBAAI,IAOjC;AAAA,EAEF,MAAa,aAAa,UAA8C;AACvE,UAAM,WAAW,GAAG,SAAS,SAAS,CAAC;AACvC,UAAM,SAAS,CAAC;AAChB,eAAW,CAAC,KAAK,KAAK,KAAK,KAAK,aAAa;AAC5C,UAAI,IAAI,WAAW,QAAQ,KAAK,MAAM,OAAO;AAC5C,eAAO,KAAK,MAAM,MAAM,KAAK;AAAA,MAC9B;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EACA,MAAa,IACZ,UACA,UAC0C;AAC1C,UAAM,MAAM,KAAK,IAAI,UAAU,QAAQ;AACvC,UAAM,QAAQ,KAAK,YAAY,IAAI,GAAG;AACtC,WAAO,OAAO;AAAA,EACf;AAAA,EAEO,UACN,UACA,UACsD;AACtD,UAAM,MAAM,KAAK,IAAI,UAAU,QAAQ;AAEvC,UAAM,QAAQ,KAAK,YAAY,IAAI,GAAG;AACtC,QAAI,CAAC,OAAO;AACX,aAAO;AAAA,IACR;AAEA,UAAM;AAEN,WAAO,MAAM,MAAM,KAAK,CAAC,UAAU;AAClC,aAAO;AAAA,QACN,QAAQ;AAAA,QACR,SAAS,yBAAyB,MAAM;AACvC,cAAI,EAAE,MAAM,WAAW,GAAG;AACzB,kBAAM,MAAM,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC;AACnC,iBAAK,YAAY,OAAO,GAAG;AAAA,UAC5B;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEO,IACN,UACA,UACA,OAC0C;AAC1C,UAAM,MAAM,KAAK,IAAI,UAAU,QAAQ;AACvC,UAAM,WAAW,KAAK,YAAY,IAAI,GAAG;AACzC,QAAI,UAAU;AACb,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACvC;AAEA,SAAK,YAAY,IAAI,KAAK,EAAE,UAAU,OAAO,SAAS,EAAE,CAAC;AACzD,WAAO,KAAK,UAAU,UAAU,QAAQ;AAAA,EACzC;AAAA,EAEO,wBAAwB,UAAwB;AACtD,eAAW,CAAC,KAAK,KAAK,KAAK,KAAK,aAAa;AAC5C,UAAI,MAAM,aAAa,UAAU;AAChC,cAAM,MAAM,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC;AACnC,aAAK,YAAY,OAAO,GAAG;AAAA,MAC5B;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,IAAI,UAAe,UAA0B;AACpD,WAAO,GAAG,SAAS,SAAS,CAAC,MAAM,QAAQ;AAAA,EAC5C;AACD;",
  "names": []
}
