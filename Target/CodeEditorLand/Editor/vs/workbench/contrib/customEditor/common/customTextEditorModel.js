var p=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var l=(a,r,e,i)=>{for(var t=i>1?void 0:i?v(r,e):r,n=a.length-1,o;n>=0;n--)(o=a[n])&&(t=(i?o(r,e,t):o(t))||t);return i&&t&&p(r,e,t),t},h=(a,r)=>(e,i)=>r(e,i,a);import{Emitter as d}from"../../../../base/common/event.js";import{Disposable as m}from"../../../../base/common/lifecycle.js";import{isEqual as u}from"../../../../base/common/resources.js";import{ITextModelService as y}from"../../../../editor/common/services/resolverService.js";import{ITextFileService as g,TextFileEditorModelState as I}from"../../../services/textfile/common/textfiles.js";let s=class extends m{constructor(e,i,t,n){super();this.viewType=e;this._resource=i;this._model=t;this.textFileService=n;this._register(t),this._textFileModel=this.textFileService.files.get(i),this._textFileModel&&(this._register(this._textFileModel.onDidChangeOrphaned(()=>this._onDidChangeOrphaned.fire())),this._register(this._textFileModel.onDidChangeReadonly(()=>this._onDidChangeReadonly.fire()))),this._register(this.textFileService.files.onDidChangeDirty(o=>{u(this.resource,o.resource)&&(this._onDidChangeDirty.fire(),this._onDidChangeContent.fire())}))}static async create(e,i,t){return e.invokeFunction(async n=>{const c=await n.get(y).createModelReference(t);return e.createInstance(s,i,t,c)})}_textFileModel;_onDidChangeOrphaned=this._register(new d);onDidChangeOrphaned=this._onDidChangeOrphaned.event;_onDidChangeReadonly=this._register(new d);onDidChangeReadonly=this._onDidChangeReadonly.event;get resource(){return this._resource}isReadonly(){return this._model.object.isReadonly()}get backupId(){}get canHotExit(){return!0}isDirty(){return this.textFileService.isDirty(this.resource)}isOrphaned(){return!!this._textFileModel?.hasState(I.ORPHAN)}_onDidChangeDirty=this._register(new d);onDidChangeDirty=this._onDidChangeDirty.event;_onDidChangeContent=this._register(new d);onDidChangeContent=this._onDidChangeContent.event;async revert(e){return this.textFileService.revert(this.resource,e)}saveCustomEditor(e){return this.textFileService.save(this.resource,e)}async saveCustomEditorAs(e,i,t){return!!await this.textFileService.saveAs(e,i,t)}};s=l([h(3,g)],s);export{s as CustomTextEditorModel};
