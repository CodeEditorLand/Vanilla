{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/customEditor/browser/customEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/customEditor.css\";\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { extname, isEqual } from \"../../../../base/common/resources.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport {\n\tRedoCommand,\n\tUndoCommand,\n} from \"../../../../editor/browser/editorExtensions.js\";\nimport type { IResourceEditorInput } from \"../../../../platform/editor/common/editor.js\";\nimport {\n\tFileOperation,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\tDEFAULT_EDITOR_ASSOCIATION,\n\tEditorExtensions,\n\ttype GroupIdentifier,\n\ttype IEditorFactoryRegistry,\n\ttype IResourceDiffEditorInput,\n} from \"../../../common/editor.js\";\nimport { DiffEditorInput } from \"../../../common/editor/diffEditorInput.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\ttype IEditorGroup,\n\ttype IEditorGroupContextKeyProvider,\n\tIEditorGroupsService,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport {\n\tIEditorResolverService,\n\ttype IEditorType,\n\tRegisteredEditorPriority,\n} from \"../../../services/editor/common/editorResolverService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { ContributedCustomEditors } from \"../common/contributedCustomEditors.js\";\nimport {\n\tCONTEXT_ACTIVE_CUSTOM_EDITOR_ID,\n\tCONTEXT_FOCUSED_CUSTOM_EDITOR_IS_EDITABLE,\n\ttype CustomEditorCapabilities,\n\ttype CustomEditorInfo,\n\tCustomEditorInfoCollection,\n\ttype ICustomEditorService,\n} from \"../common/customEditor.js\";\nimport { CustomEditorModelManager } from \"../common/customEditorModelManager.js\";\nimport { CustomEditorInput } from \"./customEditorInput.js\";\n\nexport class CustomEditorService\n\textends Disposable\n\timplements ICustomEditorService\n{\n\t_serviceBrand: any;\n\n\tprivate readonly _contributedEditors: ContributedCustomEditors;\n\tprivate _untitledCounter = 0;\n\tprivate readonly _editorResolverDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate readonly _editorCapabilities = new Map<\n\t\tstring,\n\t\tCustomEditorCapabilities\n\t>();\n\n\tprivate readonly _models = new CustomEditorModelManager();\n\n\tprivate readonly _onDidChangeEditorTypes = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\tpublic readonly onDidChangeEditorTypes: Event<void> =\n\t\tthis._onDidChangeEditorTypes.event;\n\n\tprivate readonly _fileEditorFactory = Registry.as<IEditorFactoryRegistry>(\n\t\tEditorExtensions.EditorFactory,\n\t).getFileEditorFactory();\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IEditorResolverService private readonly editorResolverService: IEditorResolverService,\n\t) {\n\t\tsuper();\n\n\t\tthis._contributedEditors = this._register(new ContributedCustomEditors(storageService));\n\t\t// Register the contribution points only emitting one change from the resolver\n\t\tthis.editorResolverService.bufferChangeEvents(this.registerContributionPoints.bind(this));\n\n\t\tthis._register(this._contributedEditors.onChange(() => {\n\t\t\t// Register the contribution points only emitting one change from the resolver\n\t\t\tthis.editorResolverService.bufferChangeEvents(this.registerContributionPoints.bind(this));\n\t\t\tthis._onDidChangeEditorTypes.fire();\n\t\t}));\n\n\t\t// Register group context key providers.\n\t\t// These set the context keys for each editor group and the global context\n\t\tconst activeCustomEditorContextKeyProvider: IEditorGroupContextKeyProvider<string> = {\n\t\t\tcontextKey: CONTEXT_ACTIVE_CUSTOM_EDITOR_ID,\n\t\t\tgetGroupContextKeyValue: group => this.getActiveCustomEditorId(group),\n\t\t\tonDidChange: this.onDidChangeEditorTypes\n\t\t};\n\n\t\tconst customEditorIsEditableContextKeyProvider: IEditorGroupContextKeyProvider<boolean> = {\n\t\t\tcontextKey: CONTEXT_FOCUSED_CUSTOM_EDITOR_IS_EDITABLE,\n\t\t\tgetGroupContextKeyValue: group => this.getCustomEditorIsEditable(group),\n\t\t\tonDidChange: this.onDidChangeEditorTypes\n\t\t};\n\n\t\tthis._register(this.editorGroupService.registerContextKeyProvider(activeCustomEditorContextKeyProvider));\n\t\tthis._register(this.editorGroupService.registerContextKeyProvider(customEditorIsEditableContextKeyProvider));\n\n\t\tthis._register(fileService.onDidRunOperation(e => {\n\t\t\tif (e.isOperation(FileOperation.MOVE)) {\n\t\t\t\tthis.handleMovedFileInOpenedFileEditors(e.resource, this.uriIdentityService.asCanonicalUri(e.target.resource));\n\t\t\t}\n\t\t}));\n\n\t\tconst PRIORITY = 105;\n\t\tthis._register(UndoCommand.addImplementation(PRIORITY, 'custom-editor', () => {\n\t\t\treturn this.withActiveCustomEditor(editor => editor.undo());\n\t\t}));\n\t\tthis._register(RedoCommand.addImplementation(PRIORITY, 'custom-editor', () => {\n\t\t\treturn this.withActiveCustomEditor(editor => editor.redo());\n\t\t}));\n\t}\n\n\tgetEditorTypes(): IEditorType[] {\n\t\treturn [...this._contributedEditors];\n\t}\n\n\tprivate withActiveCustomEditor(\n\t\tf: (editor: CustomEditorInput) => void | Promise<void>,\n\t): boolean | Promise<void> {\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (activeEditor instanceof CustomEditorInput) {\n\t\t\tconst result = f(activeEditor);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate registerContributionPoints(): void {\n\t\t// Clear all previous contributions we know\n\t\tthis._editorResolverDisposables.clear();\n\n\t\tfor (const contributedEditor of this._contributedEditors) {\n\t\t\tfor (const globPattern of contributedEditor.selector) {\n\t\t\t\tif (!globPattern.filenamePattern) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis._editorResolverDisposables.add(\n\t\t\t\t\tthis.editorResolverService.registerEditor(\n\t\t\t\t\t\tglobPattern.filenamePattern,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: contributedEditor.id,\n\t\t\t\t\t\t\tlabel: contributedEditor.displayName,\n\t\t\t\t\t\t\tdetail: contributedEditor.providerDisplayName,\n\t\t\t\t\t\t\tpriority: contributedEditor.priority,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsinglePerResource: () =>\n\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\tthis.getCustomEditorCapabilities(\n\t\t\t\t\t\t\t\t\t\tcontributedEditor.id,\n\t\t\t\t\t\t\t\t\t)?.supportsMultipleEditorsPerDocument ??\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcreateEditorInput: ({ resource }, group) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\teditor: CustomEditorInput.create(\n\t\t\t\t\t\t\t\t\t\tthis.instantiationService,\n\t\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\t\tcontributedEditor.id,\n\t\t\t\t\t\t\t\t\t\tgroup.id,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreateUntitledEditorInput: (\n\t\t\t\t\t\t\t\t{ resource },\n\t\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\teditor: CustomEditorInput.create(\n\t\t\t\t\t\t\t\t\t\tthis.instantiationService,\n\t\t\t\t\t\t\t\t\t\tresource ??\n\t\t\t\t\t\t\t\t\t\t\tURI.from({\n\t\t\t\t\t\t\t\t\t\t\t\tscheme: Schemas.untitled,\n\t\t\t\t\t\t\t\t\t\t\t\tauthority: `Untitled-${this._untitledCounter++}`,\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tcontributedEditor.id,\n\t\t\t\t\t\t\t\t\t\tgroup.id,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreateDiffEditorInput: (diffEditorInput, group) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\teditor: this.createDiffEditorInput(\n\t\t\t\t\t\t\t\t\t\tdiffEditorInput,\n\t\t\t\t\t\t\t\t\t\tcontributedEditor.id,\n\t\t\t\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createDiffEditorInput(\n\t\teditor: IResourceDiffEditorInput,\n\t\teditorID: string,\n\t\tgroup: IEditorGroup,\n\t): DiffEditorInput {\n\t\tconst modifiedOverride = CustomEditorInput.create(\n\t\t\tthis.instantiationService,\n\t\t\tassertIsDefined(editor.modified.resource),\n\t\t\teditorID,\n\t\t\tgroup.id,\n\t\t\t{ customClasses: \"modified\" },\n\t\t);\n\t\tconst originalOverride = CustomEditorInput.create(\n\t\t\tthis.instantiationService,\n\t\t\tassertIsDefined(editor.original.resource),\n\t\t\teditorID,\n\t\t\tgroup.id,\n\t\t\t{ customClasses: \"original\" },\n\t\t);\n\t\treturn this.instantiationService.createInstance(\n\t\t\tDiffEditorInput,\n\t\t\teditor.label,\n\t\t\teditor.description,\n\t\t\toriginalOverride,\n\t\t\tmodifiedOverride,\n\t\t\ttrue,\n\t\t);\n\t}\n\n\tpublic get models() {\n\t\treturn this._models;\n\t}\n\n\tpublic getCustomEditor(viewType: string): CustomEditorInfo | undefined {\n\t\treturn this._contributedEditors.get(viewType);\n\t}\n\n\tpublic getContributedCustomEditors(\n\t\tresource: URI,\n\t): CustomEditorInfoCollection {\n\t\treturn new CustomEditorInfoCollection(\n\t\t\tthis._contributedEditors.getContributedEditors(resource),\n\t\t);\n\t}\n\n\tpublic getUserConfiguredCustomEditors(\n\t\tresource: URI,\n\t): CustomEditorInfoCollection {\n\t\tconst resourceAssocations =\n\t\t\tthis.editorResolverService.getAssociationsForResource(resource);\n\t\treturn new CustomEditorInfoCollection(\n\t\t\tcoalesce(\n\t\t\t\tresourceAssocations.map((association) =>\n\t\t\t\t\tthis._contributedEditors.get(association.viewType),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic getAllCustomEditors(resource: URI): CustomEditorInfoCollection {\n\t\treturn new CustomEditorInfoCollection([\n\t\t\t...this.getUserConfiguredCustomEditors(resource).allEditors,\n\t\t\t...this.getContributedCustomEditors(resource).allEditors,\n\t\t]);\n\t}\n\n\tpublic registerCustomEditorCapabilities(\n\t\tviewType: string,\n\t\toptions: CustomEditorCapabilities,\n\t): IDisposable {\n\t\tif (this._editorCapabilities.has(viewType)) {\n\t\t\tthrow new Error(`Capabilities for ${viewType} already set`);\n\t\t}\n\t\tthis._editorCapabilities.set(viewType, options);\n\t\treturn toDisposable(() => {\n\t\t\tthis._editorCapabilities.delete(viewType);\n\t\t});\n\t}\n\n\tpublic getCustomEditorCapabilities(\n\t\tviewType: string,\n\t): CustomEditorCapabilities | undefined {\n\t\treturn this._editorCapabilities.get(viewType);\n\t}\n\n\tprivate getActiveCustomEditorId(group: IEditorGroup): string {\n\t\tconst activeEditorPane = group.activeEditorPane;\n\t\tconst resource = activeEditorPane?.input?.resource;\n\t\tif (!resource) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\treturn activeEditorPane?.input instanceof CustomEditorInput\n\t\t\t? activeEditorPane.input.viewType\n\t\t\t: \"\";\n\t}\n\n\tprivate getCustomEditorIsEditable(group: IEditorGroup): boolean {\n\t\tconst activeEditorPane = group.activeEditorPane;\n\t\tconst resource = activeEditorPane?.input?.resource;\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn activeEditorPane?.input instanceof CustomEditorInput;\n\t}\n\n\tprivate async handleMovedFileInOpenedFileEditors(\n\t\toldResource: URI,\n\t\tnewResource: URI,\n\t): Promise<void> {\n\t\tif (\n\t\t\textname(oldResource).toLowerCase() ===\n\t\t\textname(newResource).toLowerCase()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst possibleEditors = this.getAllCustomEditors(newResource);\n\n\t\t// See if we have any non-optional custom editor for this resource\n\t\tif (\n\t\t\t!possibleEditors.allEditors.some(\n\t\t\t\t(editor) => editor.priority !== RegisteredEditorPriority.option,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If so, check all editors to see if there are any file editors open for the new resource\n\t\tconst editorsToReplace = new Map<GroupIdentifier, EditorInput[]>();\n\t\tfor (const group of this.editorGroupService.groups) {\n\t\t\tfor (const editor of group.editors) {\n\t\t\t\tif (\n\t\t\t\t\tthis._fileEditorFactory.isFileEditor(editor) &&\n\t\t\t\t\t!(editor instanceof CustomEditorInput) &&\n\t\t\t\t\tisEqual(editor.resource, newResource)\n\t\t\t\t) {\n\t\t\t\t\tlet entry = editorsToReplace.get(group.id);\n\t\t\t\t\tif (!entry) {\n\t\t\t\t\t\tentry = [];\n\t\t\t\t\t\teditorsToReplace.set(group.id, entry);\n\t\t\t\t\t}\n\t\t\t\t\tentry.push(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!editorsToReplace.size) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [group, entries] of editorsToReplace) {\n\t\t\tthis.editorService.replaceEditors(\n\t\t\t\tentries.map((editor) => {\n\t\t\t\t\tlet replacement: EditorInput | IResourceEditorInput;\n\t\t\t\t\tif (possibleEditors.defaultEditor) {\n\t\t\t\t\t\tconst viewType = possibleEditors.defaultEditor.id;\n\t\t\t\t\t\treplacement = CustomEditorInput.create(\n\t\t\t\t\t\t\tthis.instantiationService,\n\t\t\t\t\t\t\tnewResource,\n\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treplacement = {\n\t\t\t\t\t\t\tresource: newResource,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\toverride: DEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\treplacement,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tgroup,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
