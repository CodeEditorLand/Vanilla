{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/customEditor/browser/customEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/customEditor.css';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { extname, isEqual } from '../../../../base/common/resources.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { RedoCommand, UndoCommand } from '../../../../editor/browser/editorExtensions.js';\nimport { IResourceEditorInput } from '../../../../platform/editor/common/editor.js';\nimport { FileOperation, IFileService } from '../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { DEFAULT_EDITOR_ASSOCIATION, EditorExtensions, GroupIdentifier, IEditorFactoryRegistry, IResourceDiffEditorInput } from '../../../common/editor.js';\nimport { DiffEditorInput } from '../../../common/editor/diffEditorInput.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { CONTEXT_ACTIVE_CUSTOM_EDITOR_ID, CONTEXT_FOCUSED_CUSTOM_EDITOR_IS_EDITABLE, CustomEditorCapabilities, CustomEditorInfo, CustomEditorInfoCollection, ICustomEditorService } from '../common/customEditor.js';\nimport { CustomEditorModelManager } from '../common/customEditorModelManager.js';\nimport { IEditorGroup, IEditorGroupContextKeyProvider, IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorResolverService, IEditorType, RegisteredEditorPriority } from '../../../services/editor/common/editorResolverService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ContributedCustomEditors } from '../common/contributedCustomEditors.js';\nimport { CustomEditorInput } from './customEditorInput.js';\n\nexport class CustomEditorService extends Disposable implements ICustomEditorService {\n\t_serviceBrand: any;\n\n\tprivate readonly _contributedEditors: ContributedCustomEditors;\n\tprivate _untitledCounter = 0;\n\tprivate readonly _editorResolverDisposables = this._register(new DisposableStore());\n\tprivate readonly _editorCapabilities = new Map<string, CustomEditorCapabilities>();\n\n\tprivate readonly _models = new CustomEditorModelManager();\n\n\tprivate readonly _onDidChangeEditorTypes = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeEditorTypes: Event<void> = this._onDidChangeEditorTypes.event;\n\n\tprivate readonly _fileEditorFactory = Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).getFileEditorFactory();\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IEditorResolverService private readonly editorResolverService: IEditorResolverService,\n\t) {\n\t\tsuper();\n\n\t\tthis._contributedEditors = this._register(new ContributedCustomEditors(storageService));\n\t\t// Register the contribution points only emitting one change from the resolver\n\t\tthis.editorResolverService.bufferChangeEvents(this.registerContributionPoints.bind(this));\n\n\t\tthis._register(this._contributedEditors.onChange(() => {\n\t\t\t// Register the contribution points only emitting one change from the resolver\n\t\t\tthis.editorResolverService.bufferChangeEvents(this.registerContributionPoints.bind(this));\n\t\t\tthis._onDidChangeEditorTypes.fire();\n\t\t}));\n\n\t\t// Register group context key providers.\n\t\t// These set the context keys for each editor group and the global context\n\t\tconst activeCustomEditorContextKeyProvider: IEditorGroupContextKeyProvider<string> = {\n\t\t\tcontextKey: CONTEXT_ACTIVE_CUSTOM_EDITOR_ID,\n\t\t\tgetGroupContextKeyValue: group => this.getActiveCustomEditorId(group),\n\t\t\tonDidChange: this.onDidChangeEditorTypes\n\t\t};\n\n\t\tconst customEditorIsEditableContextKeyProvider: IEditorGroupContextKeyProvider<boolean> = {\n\t\t\tcontextKey: CONTEXT_FOCUSED_CUSTOM_EDITOR_IS_EDITABLE,\n\t\t\tgetGroupContextKeyValue: group => this.getCustomEditorIsEditable(group),\n\t\t\tonDidChange: this.onDidChangeEditorTypes\n\t\t};\n\n\t\tthis._register(this.editorGroupService.registerContextKeyProvider(activeCustomEditorContextKeyProvider));\n\t\tthis._register(this.editorGroupService.registerContextKeyProvider(customEditorIsEditableContextKeyProvider));\n\n\t\tthis._register(fileService.onDidRunOperation(e => {\n\t\t\tif (e.isOperation(FileOperation.MOVE)) {\n\t\t\t\tthis.handleMovedFileInOpenedFileEditors(e.resource, this.uriIdentityService.asCanonicalUri(e.target.resource));\n\t\t\t}\n\t\t}));\n\n\t\tconst PRIORITY = 105;\n\t\tthis._register(UndoCommand.addImplementation(PRIORITY, 'custom-editor', () => {\n\t\t\treturn this.withActiveCustomEditor(editor => editor.undo());\n\t\t}));\n\t\tthis._register(RedoCommand.addImplementation(PRIORITY, 'custom-editor', () => {\n\t\t\treturn this.withActiveCustomEditor(editor => editor.redo());\n\t\t}));\n\t}\n\n\tgetEditorTypes(): IEditorType[] {\n\t\treturn [...this._contributedEditors];\n\t}\n\n\tprivate withActiveCustomEditor(f: (editor: CustomEditorInput) => void | Promise<void>): boolean | Promise<void> {\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (activeEditor instanceof CustomEditorInput) {\n\t\t\tconst result = f(activeEditor);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate registerContributionPoints(): void {\n\t\t// Clear all previous contributions we know\n\t\tthis._editorResolverDisposables.clear();\n\n\t\tfor (const contributedEditor of this._contributedEditors) {\n\t\t\tfor (const globPattern of contributedEditor.selector) {\n\t\t\t\tif (!globPattern.filenamePattern) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis._editorResolverDisposables.add(this.editorResolverService.registerEditor(\n\t\t\t\t\tglobPattern.filenamePattern,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: contributedEditor.id,\n\t\t\t\t\t\tlabel: contributedEditor.displayName,\n\t\t\t\t\t\tdetail: contributedEditor.providerDisplayName,\n\t\t\t\t\t\tpriority: contributedEditor.priority,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsinglePerResource: () => !(this.getCustomEditorCapabilities(contributedEditor.id)?.supportsMultipleEditorsPerDocument ?? false)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcreateEditorInput: ({ resource }, group) => {\n\t\t\t\t\t\t\treturn { editor: CustomEditorInput.create(this.instantiationService, resource, contributedEditor.id, group.id) };\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcreateUntitledEditorInput: ({ resource }, group) => {\n\t\t\t\t\t\t\treturn { editor: CustomEditorInput.create(this.instantiationService, resource ?? URI.from({ scheme: Schemas.untitled, authority: `Untitled-${this._untitledCounter++}` }), contributedEditor.id, group.id) };\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcreateDiffEditorInput: (diffEditorInput, group) => {\n\t\t\t\t\t\t\treturn { editor: this.createDiffEditorInput(diffEditorInput, contributedEditor.id, group) };\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createDiffEditorInput(\n\t\teditor: IResourceDiffEditorInput,\n\t\teditorID: string,\n\t\tgroup: IEditorGroup\n\t): DiffEditorInput {\n\t\tconst modifiedOverride = CustomEditorInput.create(this.instantiationService, assertIsDefined(editor.modified.resource), editorID, group.id, { customClasses: 'modified' });\n\t\tconst originalOverride = CustomEditorInput.create(this.instantiationService, assertIsDefined(editor.original.resource), editorID, group.id, { customClasses: 'original' });\n\t\treturn this.instantiationService.createInstance(DiffEditorInput, editor.label, editor.description, originalOverride, modifiedOverride, true);\n\t}\n\n\tpublic get models() { return this._models; }\n\n\tpublic getCustomEditor(viewType: string): CustomEditorInfo | undefined {\n\t\treturn this._contributedEditors.get(viewType);\n\t}\n\n\tpublic getContributedCustomEditors(resource: URI): CustomEditorInfoCollection {\n\t\treturn new CustomEditorInfoCollection(this._contributedEditors.getContributedEditors(resource));\n\t}\n\n\tpublic getUserConfiguredCustomEditors(resource: URI): CustomEditorInfoCollection {\n\t\tconst resourceAssocations = this.editorResolverService.getAssociationsForResource(resource);\n\t\treturn new CustomEditorInfoCollection(\n\t\t\tcoalesce(resourceAssocations\n\t\t\t\t.map(association => this._contributedEditors.get(association.viewType))));\n\t}\n\n\tpublic getAllCustomEditors(resource: URI): CustomEditorInfoCollection {\n\t\treturn new CustomEditorInfoCollection([\n\t\t\t...this.getUserConfiguredCustomEditors(resource).allEditors,\n\t\t\t...this.getContributedCustomEditors(resource).allEditors,\n\t\t]);\n\t}\n\n\tpublic registerCustomEditorCapabilities(viewType: string, options: CustomEditorCapabilities): IDisposable {\n\t\tif (this._editorCapabilities.has(viewType)) {\n\t\t\tthrow new Error(`Capabilities for ${viewType} already set`);\n\t\t}\n\t\tthis._editorCapabilities.set(viewType, options);\n\t\treturn toDisposable(() => {\n\t\t\tthis._editorCapabilities.delete(viewType);\n\t\t});\n\t}\n\n\tpublic getCustomEditorCapabilities(viewType: string): CustomEditorCapabilities | undefined {\n\t\treturn this._editorCapabilities.get(viewType);\n\t}\n\n\tprivate getActiveCustomEditorId(group: IEditorGroup): string {\n\t\tconst activeEditorPane = group.activeEditorPane;\n\t\tconst resource = activeEditorPane?.input?.resource;\n\t\tif (!resource) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn activeEditorPane?.input instanceof CustomEditorInput ? activeEditorPane.input.viewType : '';\n\t}\n\n\tprivate getCustomEditorIsEditable(group: IEditorGroup): boolean {\n\t\tconst activeEditorPane = group.activeEditorPane;\n\t\tconst resource = activeEditorPane?.input?.resource;\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn activeEditorPane?.input instanceof CustomEditorInput;\n\t}\n\n\tprivate async handleMovedFileInOpenedFileEditors(oldResource: URI, newResource: URI): Promise<void> {\n\t\tif (extname(oldResource).toLowerCase() === extname(newResource).toLowerCase()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst possibleEditors = this.getAllCustomEditors(newResource);\n\n\t\t// See if we have any non-optional custom editor for this resource\n\t\tif (!possibleEditors.allEditors.some(editor => editor.priority !== RegisteredEditorPriority.option)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If so, check all editors to see if there are any file editors open for the new resource\n\t\tconst editorsToReplace = new Map<GroupIdentifier, EditorInput[]>();\n\t\tfor (const group of this.editorGroupService.groups) {\n\t\t\tfor (const editor of group.editors) {\n\t\t\t\tif (this._fileEditorFactory.isFileEditor(editor)\n\t\t\t\t\t&& !(editor instanceof CustomEditorInput)\n\t\t\t\t\t&& isEqual(editor.resource, newResource)\n\t\t\t\t) {\n\t\t\t\t\tlet entry = editorsToReplace.get(group.id);\n\t\t\t\t\tif (!entry) {\n\t\t\t\t\t\tentry = [];\n\t\t\t\t\t\teditorsToReplace.set(group.id, entry);\n\t\t\t\t\t}\n\t\t\t\t\tentry.push(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!editorsToReplace.size) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [group, entries] of editorsToReplace) {\n\t\t\tthis.editorService.replaceEditors(entries.map(editor => {\n\t\t\t\tlet replacement: EditorInput | IResourceEditorInput;\n\t\t\t\tif (possibleEditors.defaultEditor) {\n\t\t\t\t\tconst viewType = possibleEditors.defaultEditor.id;\n\t\t\t\t\treplacement = CustomEditorInput.create(this.instantiationService, newResource, viewType, group);\n\t\t\t\t} else {\n\t\t\t\t\treplacement = { resource: newResource, options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\teditor,\n\t\t\t\t\treplacement,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}), group);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
