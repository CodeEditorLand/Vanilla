{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/customEditor/browser/customEditorInputFactory.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport { URI, type UriComponents } from \"../../../../base/common/uri.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport type {\n\tIWorkingCopyBackupMeta,\n\tIWorkingCopyIdentifier,\n} from \"../../../services/workingCopy/common/workingCopy.js\";\nimport { IWorkingCopyBackupService } from \"../../../services/workingCopy/common/workingCopyBackup.js\";\nimport {\n\ttype IWorkingCopyEditorHandler,\n\tIWorkingCopyEditorService,\n} from \"../../../services/workingCopy/common/workingCopyEditorService.js\";\nimport { NotebookEditorInput } from \"../../notebook/common/notebookEditorInput.js\";\nimport {\n\tIWebviewService,\n\ttype WebviewContentOptions,\n\tWebviewContentPurpose,\n\ttype WebviewExtensionDescription,\n\ttype WebviewOptions,\n} from \"../../webview/browser/webview.js\";\nimport {\n\ttype DeserializedWebview,\n\ttype SerializedWebview,\n\ttype SerializedWebviewOptions,\n\tWebviewEditorInputSerializer,\n\trestoreWebviewContentOptions,\n\trestoreWebviewOptions,\n\treviveWebviewExtensionDescription,\n} from \"../../webviewPanel/browser/webviewEditorInputSerializer.js\";\nimport { IWebviewWorkbenchService } from \"../../webviewPanel/browser/webviewWorkbenchService.js\";\nimport { ICustomEditorService } from \"../common/customEditor.js\";\nimport { CustomEditorInput } from \"./customEditorInput.js\";\n\nexport interface CustomDocumentBackupData extends IWorkingCopyBackupMeta {\n\treadonly viewType: string;\n\treadonly editorResource: UriComponents;\n\tbackupId: string;\n\n\treadonly extension:\n\t\t| undefined\n\t\t| {\n\t\t\t\treadonly location: UriComponents;\n\t\t\t\treadonly id: string;\n\t\t  };\n\n\treadonly webview: {\n\t\treadonly origin: string | undefined;\n\t\treadonly options: SerializedWebviewOptions;\n\t\treadonly state: any;\n\t};\n}\n\ninterface SerializedCustomEditor extends SerializedWebview {\n\treadonly editorResource: UriComponents;\n\treadonly dirty: boolean;\n\treadonly backupId?: string;\n}\n\ninterface DeserializedCustomEditor extends DeserializedWebview {\n\treadonly editorResource: URI;\n\treadonly dirty: boolean;\n\treadonly backupId?: string;\n}\n\nexport class CustomEditorInputSerializer extends WebviewEditorInputSerializer {\n\tpublic static override readonly ID = CustomEditorInput.typeId;\n\n\tpublic constructor(\n\t\t@IWebviewWorkbenchService\n\t\twebviewWorkbenchService: IWebviewWorkbenchService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t) {\n\t\tsuper(webviewWorkbenchService);\n\t}\n\n\tpublic override serialize(input: CustomEditorInput): string | undefined {\n\t\tconst dirty = input.isDirty();\n\t\tconst data: SerializedCustomEditor = {\n\t\t\t...this.toJson(input),\n\t\t\teditorResource: input.resource.toJSON(),\n\t\t\tdirty,\n\t\t\tbackupId: dirty ? input.backupId : undefined,\n\t\t};\n\n\t\ttry {\n\t\t\treturn JSON.stringify(data);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprotected override fromJson(\n\t\tdata: SerializedCustomEditor,\n\t): DeserializedCustomEditor {\n\t\treturn {\n\t\t\t...super.fromJson(data),\n\t\t\teditorResource: URI.from(data.editorResource),\n\t\t\tdirty: data.dirty,\n\t\t};\n\t}\n\n\tpublic override deserialize(\n\t\t_instantiationService: IInstantiationService,\n\t\tserializedEditorInput: string,\n\t): CustomEditorInput {\n\t\tconst data = this.fromJson(JSON.parse(serializedEditorInput));\n\n\t\tconst webview = reviveWebview(this._webviewService, data);\n\t\tconst customInput = this._instantiationService.createInstance(\n\t\t\tCustomEditorInput,\n\t\t\t{ resource: data.editorResource, viewType: data.viewType },\n\t\t\twebview,\n\t\t\t{ startsDirty: data.dirty, backupId: data.backupId },\n\t\t);\n\t\tif (typeof data.group === \"number\") {\n\t\t\tcustomInput.updateGroup(data.group);\n\t\t}\n\t\treturn customInput;\n\t}\n}\n\nfunction reviveWebview(\n\twebviewService: IWebviewService,\n\tdata: {\n\t\torigin: string | undefined;\n\t\tviewType: string;\n\t\tstate: any;\n\t\twebviewOptions: WebviewOptions;\n\t\tcontentOptions: WebviewContentOptions;\n\t\textension?: WebviewExtensionDescription;\n\t},\n) {\n\tconst webview = webviewService.createWebviewOverlay({\n\t\tprovidedViewType: data.viewType,\n\t\torigin: data.origin,\n\t\ttitle: undefined,\n\t\toptions: {\n\t\t\tpurpose: WebviewContentPurpose.CustomEditor,\n\t\t\tenableFindWidget: data.webviewOptions.enableFindWidget,\n\t\t\tretainContextWhenHidden:\n\t\t\t\tdata.webviewOptions.retainContextWhenHidden,\n\t\t},\n\t\tcontentOptions: data.contentOptions,\n\t\textension: data.extension,\n\t});\n\twebview.state = data.state;\n\treturn webview;\n}\n\nexport class ComplexCustomWorkingCopyEditorHandler\n\textends Disposable\n\timplements IWorkbenchContribution, IWorkingCopyEditorHandler\n{\n\tstatic readonly ID =\n\t\t\"workbench.contrib.complexCustomWorkingCopyEditorHandler\";\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService\n\t\t_workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IWorkingCopyBackupService\n\t\tprivate readonly _workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t\t@ICustomEditorService _customEditorService: ICustomEditorService, // DO NOT REMOVE (needed on startup to register overrides properly)\n\t) {\n\t\tsuper();\n\n\t\tthis._register(_workingCopyEditorService.registerHandler(this));\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\treturn workingCopy.resource.scheme === Schemas.vscodeCustomEditor;\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\tworkingCopy.resource.authority === \"jupyter-notebook-ipynb\" &&\n\t\t\teditor instanceof NotebookEditorInput\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst data = JSON.parse(workingCopy.resource.query);\n\t\t\t\tconst workingCopyResource = URI.from(data);\n\t\t\t\treturn isEqual(workingCopyResource, editor.resource);\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (!(editor instanceof CustomEditorInput)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\tworkingCopy.resource.authority !==\n\t\t\teditor.viewType.replace(/[^a-z0-9\\-_]/gi, \"-\").toLowerCase()\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// The working copy stores the uri of the original resource as its query param\n\t\ttry {\n\t\t\tconst data = JSON.parse(workingCopy.resource.query);\n\t\t\tconst workingCopyResource = URI.from(data);\n\t\t\treturn isEqual(workingCopyResource, editor.resource);\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync createEditor(\n\t\tworkingCopy: IWorkingCopyIdentifier,\n\t): Promise<EditorInput> {\n\t\tconst backup =\n\t\t\tawait this._workingCopyBackupService.resolve<CustomDocumentBackupData>(\n\t\t\t\tworkingCopy,\n\t\t\t);\n\t\tif (!backup?.meta) {\n\t\t\tthrow new Error(\n\t\t\t\t`No backup found for custom editor: ${workingCopy.resource}`,\n\t\t\t);\n\t\t}\n\n\t\tconst backupData = backup.meta;\n\t\tconst extension = reviveWebviewExtensionDescription(\n\t\t\tbackupData.extension?.id,\n\t\t\tbackupData.extension?.location,\n\t\t);\n\t\tconst webview = reviveWebview(this._webviewService, {\n\t\t\tviewType: backupData.viewType,\n\t\t\torigin: backupData.webview.origin,\n\t\t\twebviewOptions: restoreWebviewOptions(backupData.webview.options),\n\t\t\tcontentOptions: restoreWebviewContentOptions(\n\t\t\t\tbackupData.webview.options,\n\t\t\t),\n\t\t\tstate: backupData.webview.state,\n\t\t\textension,\n\t\t});\n\n\t\tconst editor = this._instantiationService.createInstance(\n\t\t\tCustomEditorInput,\n\t\t\t{\n\t\t\t\tresource: URI.revive(backupData.editorResource),\n\t\t\t\tviewType: backupData.viewType,\n\t\t\t},\n\t\t\twebview,\n\t\t\t{ backupId: backupData.backupId },\n\t\t);\n\t\teditor.updateGroup(0);\n\t\treturn editor;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
