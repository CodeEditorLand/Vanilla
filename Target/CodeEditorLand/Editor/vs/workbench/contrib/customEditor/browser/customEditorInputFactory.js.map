{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/customEditor/browser/customEditorInputFactory.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { URI, UriComponents } from '../../../../base/common/uri.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { CustomEditorInput } from './customEditorInput.js';\nimport { ICustomEditorService } from '../common/customEditor.js';\nimport { NotebookEditorInput } from '../../notebook/common/notebookEditorInput.js';\nimport { IWebviewService, WebviewContentOptions, WebviewContentPurpose, WebviewExtensionDescription, WebviewOptions } from '../../webview/browser/webview.js';\nimport { DeserializedWebview, restoreWebviewContentOptions, restoreWebviewOptions, reviveWebviewExtensionDescription, SerializedWebview, SerializedWebviewOptions, WebviewEditorInputSerializer } from '../../webviewPanel/browser/webviewEditorInputSerializer.js';\nimport { IWebviewWorkbenchService } from '../../webviewPanel/browser/webviewWorkbenchService.js';\nimport { IWorkingCopyBackupMeta, IWorkingCopyIdentifier } from '../../../services/workingCopy/common/workingCopy.js';\nimport { IWorkingCopyBackupService } from '../../../services/workingCopy/common/workingCopyBackup.js';\nimport { IWorkingCopyEditorHandler, IWorkingCopyEditorService } from '../../../services/workingCopy/common/workingCopyEditorService.js';\n\nexport interface CustomDocumentBackupData extends IWorkingCopyBackupMeta {\n\treadonly viewType: string;\n\treadonly editorResource: UriComponents;\n\tbackupId: string;\n\n\treadonly extension: undefined | {\n\t\treadonly location: UriComponents;\n\t\treadonly id: string;\n\t};\n\n\treadonly webview: {\n\t\treadonly origin: string | undefined;\n\t\treadonly options: SerializedWebviewOptions;\n\t\treadonly state: any;\n\t};\n}\n\ninterface SerializedCustomEditor extends SerializedWebview {\n\treadonly editorResource: UriComponents;\n\treadonly dirty: boolean;\n\treadonly backupId?: string;\n}\n\ninterface DeserializedCustomEditor extends DeserializedWebview {\n\treadonly editorResource: URI;\n\treadonly dirty: boolean;\n\treadonly backupId?: string;\n}\n\nexport class CustomEditorInputSerializer extends WebviewEditorInputSerializer {\n\n\tpublic static override readonly ID = CustomEditorInput.typeId;\n\n\tpublic constructor(\n\t\t@IWebviewWorkbenchService webviewWorkbenchService: IWebviewWorkbenchService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t) {\n\t\tsuper(webviewWorkbenchService);\n\t}\n\n\tpublic override serialize(input: CustomEditorInput): string | undefined {\n\t\tconst dirty = input.isDirty();\n\t\tconst data: SerializedCustomEditor = {\n\t\t\t...this.toJson(input),\n\t\t\teditorResource: input.resource.toJSON(),\n\t\t\tdirty,\n\t\t\tbackupId: dirty ? input.backupId : undefined,\n\t\t};\n\n\t\ttry {\n\t\t\treturn JSON.stringify(data);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprotected override fromJson(data: SerializedCustomEditor): DeserializedCustomEditor {\n\t\treturn {\n\t\t\t...super.fromJson(data),\n\t\t\teditorResource: URI.from(data.editorResource),\n\t\t\tdirty: data.dirty,\n\t\t};\n\t}\n\n\tpublic override deserialize(\n\t\t_instantiationService: IInstantiationService,\n\t\tserializedEditorInput: string\n\t): CustomEditorInput {\n\t\tconst data = this.fromJson(JSON.parse(serializedEditorInput));\n\n\t\tconst webview = reviveWebview(this._webviewService, data);\n\t\tconst customInput = this._instantiationService.createInstance(CustomEditorInput, { resource: data.editorResource, viewType: data.viewType }, webview, { startsDirty: data.dirty, backupId: data.backupId });\n\t\tif (typeof data.group === 'number') {\n\t\t\tcustomInput.updateGroup(data.group);\n\t\t}\n\t\treturn customInput;\n\t}\n}\n\nfunction reviveWebview(webviewService: IWebviewService, data: { origin: string | undefined; viewType: string; state: any; webviewOptions: WebviewOptions; contentOptions: WebviewContentOptions; extension?: WebviewExtensionDescription }) {\n\tconst webview = webviewService.createWebviewOverlay({\n\t\tprovidedViewType: data.viewType,\n\t\torigin: data.origin,\n\t\ttitle: undefined,\n\t\toptions: {\n\t\t\tpurpose: WebviewContentPurpose.CustomEditor,\n\t\t\tenableFindWidget: data.webviewOptions.enableFindWidget,\n\t\t\tretainContextWhenHidden: data.webviewOptions.retainContextWhenHidden,\n\t\t},\n\t\tcontentOptions: data.contentOptions,\n\t\textension: data.extension,\n\t});\n\twebview.state = data.state;\n\treturn webview;\n}\n\nexport class ComplexCustomWorkingCopyEditorHandler extends Disposable implements IWorkbenchContribution, IWorkingCopyEditorHandler {\n\n\tstatic readonly ID = 'workbench.contrib.complexCustomWorkingCopyEditorHandler';\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService _workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IWorkingCopyBackupService private readonly _workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t\t@ICustomEditorService _customEditorService: ICustomEditorService // DO NOT REMOVE (needed on startup to register overrides properly)\n\t) {\n\t\tsuper();\n\n\t\tthis._register(_workingCopyEditorService.registerHandler(this));\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\treturn workingCopy.resource.scheme === Schemas.vscodeCustomEditor;\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (workingCopy.resource.authority === 'jupyter-notebook-ipynb' && editor instanceof NotebookEditorInput) {\n\t\t\ttry {\n\t\t\t\tconst data = JSON.parse(workingCopy.resource.query);\n\t\t\t\tconst workingCopyResource = URI.from(data);\n\t\t\t\treturn isEqual(workingCopyResource, editor.resource);\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (!(editor instanceof CustomEditorInput)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (workingCopy.resource.authority !== editor.viewType.replace(/[^a-z0-9\\-_]/gi, '-').toLowerCase()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// The working copy stores the uri of the original resource as its query param\n\t\ttry {\n\t\t\tconst data = JSON.parse(workingCopy.resource.query);\n\t\t\tconst workingCopyResource = URI.from(data);\n\t\t\treturn isEqual(workingCopyResource, editor.resource);\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync createEditor(workingCopy: IWorkingCopyIdentifier): Promise<EditorInput> {\n\t\tconst backup = await this._workingCopyBackupService.resolve<CustomDocumentBackupData>(workingCopy);\n\t\tif (!backup?.meta) {\n\t\t\tthrow new Error(`No backup found for custom editor: ${workingCopy.resource}`);\n\t\t}\n\n\t\tconst backupData = backup.meta;\n\t\tconst extension = reviveWebviewExtensionDescription(backupData.extension?.id, backupData.extension?.location);\n\t\tconst webview = reviveWebview(this._webviewService, {\n\t\t\tviewType: backupData.viewType,\n\t\t\torigin: backupData.webview.origin,\n\t\t\twebviewOptions: restoreWebviewOptions(backupData.webview.options),\n\t\t\tcontentOptions: restoreWebviewContentOptions(backupData.webview.options),\n\t\t\tstate: backupData.webview.state,\n\t\t\textension,\n\t\t});\n\n\t\tconst editor = this._instantiationService.createInstance(CustomEditorInput, { resource: URI.revive(backupData.editorResource), viewType: backupData.viewType }, webview, { backupId: backupData.backupId });\n\t\teditor.updateGroup(0);\n\t\treturn editor;\n\t}\n}\n\n"],
  "mappings": "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",
  "names": []
}
