{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/customEditor/browser/customEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWindow } from \"../../../../base/browser/dom.js\";\nimport type { CodeWindow } from \"../../../../base/browser/window.js\";\nimport { toAction } from \"../../../../base/common/actions.js\";\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport type { IMarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport type { IReference } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { basename } from \"../../../../base/common/path.js\";\nimport { dirname, isEqual } from \"../../../../base/common/resources.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IFileDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport type { IResourceEditorInput } from \"../../../../platform/editor/common/editor.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { IUndoRedoService } from \"../../../../platform/undoRedo/common/undoRedo.js\";\nimport {\n\tEditorInputCapabilities,\n\ttype GroupIdentifier,\n\ttype IMoveResult,\n\ttype IRevertOptions,\n\ttype ISaveOptions,\n\ttype IUntypedEditorInput,\n\tVerbosity,\n\tcreateEditorOpenError,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { ICustomEditorLabelService } from \"../../../services/editor/common/customEditorLabelService.js\";\nimport { IEditorGroupsService } from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IFilesConfigurationService } from \"../../../services/filesConfiguration/common/filesConfigurationService.js\";\nimport { IWorkbenchLayoutService } from \"../../../services/layout/browser/layoutService.js\";\nimport { IUntitledTextEditorService } from \"../../../services/untitled/common/untitledTextEditorService.js\";\nimport {\n\ttype IOverlayWebview,\n\tIWebviewService,\n} from \"../../webview/browser/webview.js\";\nimport {\n\tIWebviewWorkbenchService,\n\tLazilyResolvedWebviewEditorInput,\n} from \"../../webviewPanel/browser/webviewWorkbenchService.js\";\nimport {\n\ttype ICustomEditorModel,\n\tICustomEditorService,\n} from \"../common/customEditor.js\";\n\ninterface CustomEditorInputInitInfo {\n\treadonly resource: URI;\n\treadonly viewType: string;\n}\n\nexport class CustomEditorInput extends LazilyResolvedWebviewEditorInput {\n\tstatic create(\n\t\tinstantiationService: IInstantiationService,\n\t\tresource: URI,\n\t\tviewType: string,\n\t\tgroup: GroupIdentifier | undefined,\n\t\toptions?: {\n\t\t\treadonly customClasses?: string;\n\t\t\treadonly oldResource?: URI;\n\t\t},\n\t): EditorInput {\n\t\treturn instantiationService.invokeFunction((accessor) => {\n\t\t\t// If it's an untitled file we must populate the untitledDocumentData\n\t\t\tconst untitledString = accessor\n\t\t\t\t.get(IUntitledTextEditorService)\n\t\t\t\t.getValue(resource);\n\t\t\tconst untitledDocumentData = untitledString\n\t\t\t\t? VSBuffer.fromString(untitledString)\n\t\t\t\t: undefined;\n\t\t\tconst webview = accessor.get(IWebviewService).createWebviewOverlay({\n\t\t\t\tprovidedViewType: viewType,\n\t\t\t\ttitle: undefined,\n\t\t\t\toptions: { customClasses: options?.customClasses },\n\t\t\t\tcontentOptions: {},\n\t\t\t\textension: undefined,\n\t\t\t});\n\t\t\tconst input = instantiationService.createInstance(\n\t\t\t\tCustomEditorInput,\n\t\t\t\t{ resource, viewType },\n\t\t\t\twebview,\n\t\t\t\t{\n\t\t\t\t\tuntitledDocumentData: untitledDocumentData,\n\t\t\t\t\toldResource: options?.oldResource,\n\t\t\t\t},\n\t\t\t);\n\t\t\tif (typeof group !== \"undefined\") {\n\t\t\t\tinput.updateGroup(group);\n\t\t\t}\n\t\t\treturn input;\n\t\t});\n\t}\n\n\tpublic static override readonly typeId = \"workbench.editors.webviewEditor\";\n\n\tprivate readonly _editorResource: URI;\n\tpublic readonly oldResource?: URI;\n\tprivate _defaultDirtyState: boolean | undefined;\n\n\tprivate readonly _backupId: string | undefined;\n\n\tprivate readonly _untitledDocumentData: VSBuffer | undefined;\n\n\toverride get resource() {\n\t\treturn this._editorResource;\n\t}\n\n\tprivate _modelRef?: IReference<ICustomEditorModel>;\n\n\tconstructor(\n\t\tinit: CustomEditorInputInitInfo,\n\t\twebview: IOverlayWebview,\n\t\toptions: { startsDirty?: boolean; backupId?: string; untitledDocumentData?: VSBuffer; readonly oldResource?: URI },\n\t\t@IWebviewWorkbenchService webviewWorkbenchService: IWebviewWorkbenchService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ICustomEditorService private readonly customEditorService: ICustomEditorService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IUndoRedoService private readonly undoRedoService: IUndoRedoService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@IEditorGroupsService private readonly editorGroupsService: IEditorGroupsService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@ICustomEditorLabelService private readonly customEditorLabelService: ICustomEditorLabelService,\n\t) {\n\t\tsuper({ providedId: init.viewType, viewType: init.viewType, name: '' }, webview, webviewWorkbenchService);\n\t\tthis._editorResource = init.resource;\n\t\tthis.oldResource = options.oldResource;\n\t\tthis._defaultDirtyState = options.startsDirty;\n\t\tthis._backupId = options.backupId;\n\t\tthis._untitledDocumentData = options.untitledDocumentData;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Clear our labels on certain label related events\n\t\tthis._register(\n\t\t\tthis.labelService.onDidChangeFormatters((e) =>\n\t\t\t\tthis.onLabelEvent(e.scheme),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.fileService.onDidChangeFileSystemProviderRegistrations((e) =>\n\t\t\t\tthis.onLabelEvent(e.scheme),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.fileService.onDidChangeFileSystemProviderCapabilities((e) =>\n\t\t\t\tthis.onLabelEvent(e.scheme),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.customEditorLabelService.onDidChange(() => this.updateLabel()),\n\t\t);\n\t}\n\n\tprivate onLabelEvent(scheme: string): void {\n\t\tif (scheme === this.resource.scheme) {\n\t\t\tthis.updateLabel();\n\t\t}\n\t}\n\n\tprivate updateLabel(): void {\n\t\t// Clear any cached labels from before\n\t\tthis._editorName = undefined;\n\t\tthis._shortDescription = undefined;\n\t\tthis._mediumDescription = undefined;\n\t\tthis._longDescription = undefined;\n\t\tthis._shortTitle = undefined;\n\t\tthis._mediumTitle = undefined;\n\t\tthis._longTitle = undefined;\n\n\t\t// Trigger recompute of label\n\t\tthis._onDidChangeLabel.fire();\n\t}\n\n\tpublic override get typeId(): string {\n\t\treturn CustomEditorInput.typeId;\n\t}\n\n\tpublic override get editorId() {\n\t\treturn this.viewType;\n\t}\n\n\tpublic override get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = EditorInputCapabilities.None;\n\n\t\tcapabilities |= EditorInputCapabilities.CanDropIntoEditor;\n\n\t\tif (\n\t\t\t!this.customEditorService.getCustomEditorCapabilities(this.viewType)\n\t\t\t\t?.supportsMultipleEditorsPerDocument\n\t\t) {\n\t\t\tcapabilities |= EditorInputCapabilities.Singleton;\n\t\t}\n\n\t\tif (this._modelRef) {\n\t\t\tif (this._modelRef.object.isReadonly()) {\n\t\t\t\tcapabilities |= EditorInputCapabilities.Readonly;\n\t\t\t}\n\t\t} else if (this.filesConfigurationService.isReadonly(this.resource)) {\n\t\t\tcapabilities |= EditorInputCapabilities.Readonly;\n\t\t}\n\n\t\tif (this.resource.scheme === Schemas.untitled) {\n\t\t\tcapabilities |= EditorInputCapabilities.Untitled;\n\t\t}\n\n\t\treturn capabilities;\n\t}\n\n\tprivate _editorName: string | undefined = undefined;\n\toverride getName(): string {\n\t\tif (typeof this._editorName !== \"string\") {\n\t\t\tthis._editorName =\n\t\t\t\tthis.customEditorLabelService.getName(this.resource) ??\n\t\t\t\tbasename(this.labelService.getUriLabel(this.resource));\n\t\t}\n\n\t\treturn this._editorName;\n\t}\n\n\toverride getDescription(verbosity = Verbosity.MEDIUM): string | undefined {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.shortDescription;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.longDescription;\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\treturn this.mediumDescription;\n\t\t}\n\t}\n\n\tprivate _shortDescription: string | undefined = undefined;\n\tprivate get shortDescription(): string {\n\t\tif (typeof this._shortDescription !== \"string\") {\n\t\t\tthis._shortDescription = this.labelService.getUriBasenameLabel(\n\t\t\t\tdirname(this.resource),\n\t\t\t);\n\t\t}\n\n\t\treturn this._shortDescription;\n\t}\n\n\tprivate _mediumDescription: string | undefined = undefined;\n\tprivate get mediumDescription(): string {\n\t\tif (typeof this._mediumDescription !== \"string\") {\n\t\t\tthis._mediumDescription = this.labelService.getUriLabel(\n\t\t\t\tdirname(this.resource),\n\t\t\t\t{ relative: true },\n\t\t\t);\n\t\t}\n\n\t\treturn this._mediumDescription;\n\t}\n\n\tprivate _longDescription: string | undefined = undefined;\n\tprivate get longDescription(): string {\n\t\tif (typeof this._longDescription !== \"string\") {\n\t\t\tthis._longDescription = this.labelService.getUriLabel(\n\t\t\t\tdirname(this.resource),\n\t\t\t);\n\t\t}\n\n\t\treturn this._longDescription;\n\t}\n\n\tprivate _shortTitle: string | undefined = undefined;\n\tprivate get shortTitle(): string {\n\t\tif (typeof this._shortTitle !== \"string\") {\n\t\t\tthis._shortTitle = this.getName();\n\t\t}\n\n\t\treturn this._shortTitle;\n\t}\n\n\tprivate _mediumTitle: string | undefined = undefined;\n\tprivate get mediumTitle(): string {\n\t\tif (typeof this._mediumTitle !== \"string\") {\n\t\t\tthis._mediumTitle = this.labelService.getUriLabel(this.resource, {\n\t\t\t\trelative: true,\n\t\t\t});\n\t\t}\n\n\t\treturn this._mediumTitle;\n\t}\n\n\tprivate _longTitle: string | undefined = undefined;\n\tprivate get longTitle(): string {\n\t\tif (typeof this._longTitle !== \"string\") {\n\t\t\tthis._longTitle = this.labelService.getUriLabel(this.resource);\n\t\t}\n\n\t\treturn this._longTitle;\n\t}\n\n\toverride getTitle(verbosity?: Verbosity): string {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.shortTitle;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.longTitle;\n\t\t\tdefault:\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\t\treturn this.mediumTitle;\n\t\t}\n\t}\n\n\tpublic override matches(other: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(other)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\tthis === other ||\n\t\t\t(other instanceof CustomEditorInput &&\n\t\t\t\tthis.viewType === other.viewType &&\n\t\t\t\tisEqual(this.resource, other.resource))\n\t\t);\n\t}\n\n\tpublic override copy(): EditorInput {\n\t\treturn CustomEditorInput.create(\n\t\t\tthis.instantiationService,\n\t\t\tthis.resource,\n\t\t\tthis.viewType,\n\t\t\tthis.group,\n\t\t\tthis.webview.options,\n\t\t);\n\t}\n\n\tpublic override isReadonly(): boolean | IMarkdownString {\n\t\tif (!this._modelRef) {\n\t\t\treturn this.filesConfigurationService.isReadonly(this.resource);\n\t\t}\n\t\treturn this._modelRef.object.isReadonly();\n\t}\n\n\tpublic override isDirty(): boolean {\n\t\tif (!this._modelRef) {\n\t\t\treturn !!this._defaultDirtyState;\n\t\t}\n\t\treturn this._modelRef.object.isDirty();\n\t}\n\n\tpublic override async save(\n\t\tgroupId: GroupIdentifier,\n\t\toptions?: ISaveOptions,\n\t): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tif (!this._modelRef) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst target = await this._modelRef.object.saveCustomEditor(options);\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\t// Different URIs == untyped input returned to allow resolver to possibly resolve to a different editor type\n\t\tif (!isEqual(target, this.resource)) {\n\t\t\treturn { resource: target };\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic override async saveAs(\n\t\tgroupId: GroupIdentifier,\n\t\toptions?: ISaveOptions,\n\t): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tif (!this._modelRef) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst dialogPath = this._editorResource;\n\t\tconst target = await this.fileDialogService.pickFileToSave(\n\t\t\tdialogPath,\n\t\t\toptions?.availableFileSystems,\n\t\t);\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\tif (\n\t\t\t!(await this._modelRef.object.saveCustomEditorAs(\n\t\t\t\tthis._editorResource,\n\t\t\t\ttarget,\n\t\t\t\toptions,\n\t\t\t))\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn (await this.rename(groupId, target))?.editor;\n\t}\n\n\tpublic override async revert(\n\t\tgroup: GroupIdentifier,\n\t\toptions?: IRevertOptions,\n\t): Promise<void> {\n\t\tif (this._modelRef) {\n\t\t\treturn this._modelRef.object.revert(options);\n\t\t}\n\t\tthis._defaultDirtyState = false;\n\t\tthis._onDidChangeDirty.fire();\n\t}\n\n\tpublic override async resolve(): Promise<null> {\n\t\tawait super.resolve();\n\n\t\tif (this.isDisposed()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this._modelRef) {\n\t\t\tconst oldCapabilities = this.capabilities;\n\t\t\tthis._modelRef = this._register(\n\t\t\t\tassertIsDefined(\n\t\t\t\t\tawait this.customEditorService.models.tryRetain(\n\t\t\t\t\t\tthis.resource,\n\t\t\t\t\t\tthis.viewType,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis._modelRef.object.onDidChangeDirty(() =>\n\t\t\t\t\tthis._onDidChangeDirty.fire(),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis._modelRef.object.onDidChangeReadonly(() =>\n\t\t\t\t\tthis._onDidChangeCapabilities.fire(),\n\t\t\t\t),\n\t\t\t);\n\t\t\t// If we're loading untitled file data we should ensure it's dirty\n\t\t\tif (this._untitledDocumentData) {\n\t\t\t\tthis._defaultDirtyState = true;\n\t\t\t}\n\t\t\tif (this.isDirty()) {\n\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t}\n\t\t\tif (this.capabilities !== oldCapabilities) {\n\t\t\t\tthis._onDidChangeCapabilities.fire();\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic override async rename(\n\t\tgroup: GroupIdentifier,\n\t\tnewResource: URI,\n\t): Promise<IMoveResult | undefined> {\n\t\t// We return an untyped editor input which can then be resolved in the editor service\n\t\treturn { editor: { resource: newResource } };\n\t}\n\n\tpublic undo(): void | Promise<void> {\n\t\tassertIsDefined(this._modelRef);\n\t\treturn this.undoRedoService.undo(this.resource);\n\t}\n\n\tpublic redo(): void | Promise<void> {\n\t\tassertIsDefined(this._modelRef);\n\t\treturn this.undoRedoService.redo(this.resource);\n\t}\n\n\tprivate _moveHandler?: (newResource: URI) => void;\n\n\tpublic onMove(handler: (newResource: URI) => void): void {\n\t\t// TODO: Move this to the service\n\t\tthis._moveHandler = handler;\n\t}\n\n\tprotected override transfer(\n\t\tother: CustomEditorInput,\n\t): CustomEditorInput | undefined {\n\t\tif (!super.transfer(other)) {\n\t\t\treturn;\n\t\t}\n\n\t\tother._moveHandler = this._moveHandler;\n\t\tthis._moveHandler = undefined;\n\t\treturn other;\n\t}\n\n\tpublic get backupId(): string | undefined {\n\t\tif (this._modelRef) {\n\t\t\treturn this._modelRef.object.backupId;\n\t\t}\n\t\treturn this._backupId;\n\t}\n\n\tpublic get untitledDocumentData(): VSBuffer | undefined {\n\t\treturn this._untitledDocumentData;\n\t}\n\n\tpublic override toUntyped(): IResourceEditorInput {\n\t\treturn {\n\t\t\tresource: this.resource,\n\t\t\toptions: {\n\t\t\t\toverride: this.viewType,\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic override claim(\n\t\tclaimant: unknown,\n\t\ttargetWindow: CodeWindow,\n\t\tscopedContextKeyService: IContextKeyService | undefined,\n\t): void {\n\t\tif (this.doCanMove(targetWindow.vscodeWindowId) !== true) {\n\t\t\tthrow createEditorOpenError(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"editorUnsupportedInWindow\",\n\t\t\t\t\t\"Unable to open the editor in this window, it contains modifications that can only be saved in the original window.\",\n\t\t\t\t),\n\t\t\t\t[\n\t\t\t\t\ttoAction({\n\t\t\t\t\t\tid: \"openInOriginalWindow\",\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\"reopenInOriginalWindow\",\n\t\t\t\t\t\t\t\"Open in Original Window\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\tconst originalPart =\n\t\t\t\t\t\t\t\tthis.editorGroupsService.getPart(\n\t\t\t\t\t\t\t\t\tthis.layoutService.getContainer(\n\t\t\t\t\t\t\t\t\t\tgetWindow(this.webview.container)\n\t\t\t\t\t\t\t\t\t\t\t.window,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst currentPart =\n\t\t\t\t\t\t\t\tthis.editorGroupsService.getPart(\n\t\t\t\t\t\t\t\t\tthis.layoutService.getContainer(\n\t\t\t\t\t\t\t\t\t\ttargetWindow.window,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcurrentPart.activeGroup.moveEditor(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\toriginalPart.activeGroup,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t\t{ forceMessage: true },\n\t\t\t);\n\t\t}\n\t\treturn super.claim(claimant, targetWindow, scopedContextKeyService);\n\t}\n\n\tpublic override canMove(\n\t\tsourceGroup: GroupIdentifier,\n\t\ttargetGroup: GroupIdentifier,\n\t): true | string {\n\t\tconst resolvedTargetGroup =\n\t\t\tthis.editorGroupsService.getGroup(targetGroup);\n\t\tif (resolvedTargetGroup) {\n\t\t\tconst canMove = this.doCanMove(resolvedTargetGroup.windowId);\n\t\t\tif (typeof canMove === \"string\") {\n\t\t\t\treturn canMove;\n\t\t\t}\n\t\t}\n\n\t\treturn super.canMove(sourceGroup, targetGroup);\n\t}\n\n\tprivate doCanMove(targetWindowId: number): true | string {\n\t\tif (this.isModified() && this._modelRef?.object.canHotExit === false) {\n\t\t\tconst sourceWindowId = getWindow(\n\t\t\t\tthis.webview.container,\n\t\t\t).vscodeWindowId;\n\t\t\tif (sourceWindowId !== targetWindowId) {\n\t\t\t\t// The custom editor is modified, not backed by a file and without a backup.\n\t\t\t\t// We have to assume that the modified state is enclosed into the webview\n\t\t\t\t// managed by an extension. As such, we cannot just move the webview\n\t\t\t\t// into another window because that means, we potentally loose the modified\n\t\t\t\t// state and thus trigger data loss.\n\n\t\t\t\treturn localize(\n\t\t\t\t\t\"editorCannotMove\",\n\t\t\t\t\t\"Unable to move '{0}': The editor contains changes that can only be saved in its current window.\",\n\t\t\t\t\tthis.getName(),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
