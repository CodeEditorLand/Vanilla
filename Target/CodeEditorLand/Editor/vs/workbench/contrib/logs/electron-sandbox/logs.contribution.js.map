{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/logs/electron-sandbox/logs.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tOpenExtensionLogsFolderAction,\n\tOpenLogsFolderAction,\n} from \"./logsActions.js\";\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: OpenLogsFolderAction.ID,\n\t\t\t\ttitle: OpenLogsFolderAction.TITLE,\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\t\trun(servicesAccessor: ServicesAccessor): Promise<void> {\n\t\t\treturn servicesAccessor\n\t\t\t\t.get(IInstantiationService)\n\t\t\t\t.createInstance(\n\t\t\t\t\tOpenLogsFolderAction,\n\t\t\t\t\tOpenLogsFolderAction.ID,\n\t\t\t\t\tOpenLogsFolderAction.TITLE.value,\n\t\t\t\t)\n\t\t\t\t.run();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: OpenExtensionLogsFolderAction.ID,\n\t\t\t\ttitle: OpenExtensionLogsFolderAction.TITLE,\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\t\trun(servicesAccessor: ServicesAccessor): Promise<void> {\n\t\t\treturn servicesAccessor\n\t\t\t\t.get(IInstantiationService)\n\t\t\t\t.createInstance(\n\t\t\t\t\tOpenExtensionLogsFolderAction,\n\t\t\t\t\tOpenExtensionLogsFolderAction.ID,\n\t\t\t\t\tOpenExtensionLogsFolderAction.TITLE.value,\n\t\t\t\t)\n\t\t\t\t.run();\n\t\t}\n\t},\n);\n"],
  "mappings": "AAMA,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP;AAAA,EACC,cAAc,QAAQ;AAAA,IACrB,cAAc;AACb,YAAM;AAAA,QACL,IAAI,qBAAqB;AAAA,QACzB,OAAO,qBAAqB;AAAA,QAC5B,UAAU,WAAW;AAAA,QACrB,IAAI;AAAA,MACL,CAAC;AAAA,IACF;AAAA,IACA,IAAI,kBAAmD;AACtD,aAAO,iBACL,IAAI,qBAAqB,EACzB;AAAA,QACA;AAAA,QACA,qBAAqB;AAAA,QACrB,qBAAqB,MAAM;AAAA,MAC5B,EACC,IAAI;AAAA,IACP;AAAA,EACD;AACD;AAEA;AAAA,EACC,cAAc,QAAQ;AAAA,IACrB,cAAc;AACb,YAAM;AAAA,QACL,IAAI,8BAA8B;AAAA,QAClC,OAAO,8BAA8B;AAAA,QACrC,UAAU,WAAW;AAAA,QACrB,IAAI;AAAA,MACL,CAAC;AAAA,IACF;AAAA,IACA,IAAI,kBAAmD;AACtD,aAAO,iBACL,IAAI,qBAAqB,EACzB;AAAA,QACA;AAAA,QACA,8BAA8B;AAAA,QAC9B,8BAA8B,MAAM;AAAA,MACrC,EACC,IAAI;AAAA,IACP;AAAA,EACD;AACD;",
  "names": []
}
