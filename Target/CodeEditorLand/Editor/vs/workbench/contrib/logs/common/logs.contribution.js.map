{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/logs/common/logs.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tcreateCancelablePromise,\n\ttimeout,\n} from \"../../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tCancellationError,\n\tgetErrorMessage,\n\tisCancellationError,\n} from \"../../../../base/common/errors.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { CounterSet } from \"../../../../base/common/map.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIFileService,\n\twhenProviderRegistered,\n} from \"../../../../platform/files/common/files.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tCONTEXT_LOG_LEVEL,\n\tILogService,\n\ttype ILoggerResource,\n\tILoggerService,\n\ttype LogLevel,\n\tLogLevelToString,\n\tisLogLevel,\n} from \"../../../../platform/log/common/log.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\tshowWindowLogActionId,\n\twindowLogId,\n} from \"../../../services/log/common/logConstants.js\";\nimport {\n\tExtensions,\n\ttype IOutputChannelRegistry,\n\tIOutputService,\n} from \"../../../services/output/common/output.js\";\nimport { IDefaultLogLevelsService } from \"./defaultLogLevels.js\";\nimport { SetLogLevelAction } from \"./logsActions.js\";\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SetLogLevelAction.ID,\n\t\t\t\ttitle: SetLogLevelAction.TITLE,\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\t\trun(servicesAccessor: ServicesAccessor): Promise<void> {\n\t\t\treturn servicesAccessor\n\t\t\t\t.get(IInstantiationService)\n\t\t\t\t.createInstance(\n\t\t\t\t\tSetLogLevelAction,\n\t\t\t\t\tSetLogLevelAction.ID,\n\t\t\t\t\tSetLogLevelAction.TITLE.value,\n\t\t\t\t)\n\t\t\t\t.run();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.setDefaultLogLevel\",\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"setDefaultLogLevel\",\n\t\t\t\t\t\"Set Default Log Level\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t});\n\t\t}\n\t\trun(\n\t\t\tservicesAccessor: ServicesAccessor,\n\t\t\tlogLevel: LogLevel,\n\t\t\textensionId?: string,\n\t\t): Promise<void> {\n\t\t\treturn servicesAccessor\n\t\t\t\t.get(IDefaultLogLevelsService)\n\t\t\t\t.setDefaultLogLevel(logLevel, extensionId);\n\t\t}\n\t},\n);\n\nclass LogOutputChannels extends Disposable implements IWorkbenchContribution {\n\tprivate readonly contextKeys = new CounterSet<string>();\n\tprivate readonly outputChannelRegistry =\n\t\tRegistry.as<IOutputChannelRegistry>(Extensions.OutputChannels);\n\tprivate readonly loggerDisposables = this._register(new DisposableMap());\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@ILoggerService private readonly loggerService: ILoggerService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t\tconst contextKey = CONTEXT_LOG_LEVEL.bindTo(contextKeyService);\n\t\tcontextKey.set(LogLevelToString(loggerService.getLogLevel()));\n\t\tthis._register(loggerService.onDidChangeLogLevel(e => {\n\t\t\tif (isLogLevel(e)) {\n\t\t\t\tcontextKey.set(LogLevelToString(loggerService.getLogLevel()));\n\t\t\t}\n\t\t}));\n\n\t\tthis.onDidAddLoggers(loggerService.getRegisteredLoggers());\n\t\tthis._register(loggerService.onDidChangeLoggers(({ added, removed }) => {\n\t\t\tthis.onDidAddLoggers(added);\n\t\t\tthis.onDidRemoveLoggers(removed);\n\t\t}));\n\t\tthis._register(loggerService.onDidChangeVisibility(([resource, visibility]) => {\n\t\t\tconst logger = loggerService.getRegisteredLogger(resource);\n\t\t\tif (logger) {\n\t\t\t\tif (visibility) {\n\t\t\t\t\tthis.registerLogChannel(logger);\n\t\t\t\t} else {\n\t\t\t\t\tthis.deregisterLogChannel(logger);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis.registerShowWindowLogAction();\n\t\tthis._register(Event.filter(contextKeyService.onDidChangeContext, e => e.affectsSome(this.contextKeys))(() => this.onDidChangeContext()));\n\t}\n\n\tprivate onDidAddLoggers(loggers: Iterable<ILoggerResource>): void {\n\t\tfor (const logger of loggers) {\n\t\t\tif (logger.when) {\n\t\t\t\tconst contextKeyExpr = ContextKeyExpr.deserialize(logger.when);\n\t\t\t\tif (contextKeyExpr) {\n\t\t\t\t\tfor (const key of contextKeyExpr.keys()) {\n\t\t\t\t\t\tthis.contextKeys.add(key);\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.contextKeyService.contextMatchesRules(\n\t\t\t\t\t\t\tcontextKeyExpr,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (logger.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.registerLogChannel(logger);\n\t\t}\n\t}\n\n\tprivate onDidChangeContext(): void {\n\t\tfor (const logger of this.loggerService.getRegisteredLoggers()) {\n\t\t\tif (logger.when) {\n\t\t\t\tif (\n\t\t\t\t\tthis.contextKeyService.contextMatchesRules(\n\t\t\t\t\t\tContextKeyExpr.deserialize(logger.when),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.registerLogChannel(logger);\n\t\t\t\t} else {\n\t\t\t\t\tthis.deregisterLogChannel(logger);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidRemoveLoggers(loggers: Iterable<ILoggerResource>): void {\n\t\tfor (const logger of loggers) {\n\t\t\tif (logger.when) {\n\t\t\t\tconst contextKeyExpr = ContextKeyExpr.deserialize(logger.when);\n\t\t\t\tif (contextKeyExpr) {\n\t\t\t\t\tfor (const key of contextKeyExpr.keys()) {\n\t\t\t\t\t\tthis.contextKeys.delete(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.deregisterLogChannel(logger);\n\t\t}\n\t}\n\n\tprivate registerLogChannel(logger: ILoggerResource): void {\n\t\tconst channel = this.outputChannelRegistry.getChannel(logger.id);\n\t\tif (\n\t\t\tchannel &&\n\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\tchannel.file,\n\t\t\t\tlogger.resource,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst disposables = new DisposableStore();\n\t\tconst promise = createCancelablePromise(async (token) => {\n\t\t\tawait whenProviderRegistered(logger.resource, this.fileService);\n\t\t\ttry {\n\t\t\t\tawait this.whenFileExists(logger.resource, 1, token);\n\t\t\t\tconst existingChannel = this.outputChannelRegistry.getChannel(\n\t\t\t\t\tlogger.id,\n\t\t\t\t);\n\t\t\t\tconst remoteLogger =\n\t\t\t\t\texistingChannel?.file?.scheme === Schemas.vscodeRemote\n\t\t\t\t\t\t? this.loggerService.getRegisteredLogger(\n\t\t\t\t\t\t\t\texistingChannel.file,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: undefined;\n\t\t\t\tif (remoteLogger) {\n\t\t\t\t\tthis.deregisterLogChannel(remoteLogger);\n\t\t\t\t}\n\t\t\t\tconst hasToAppendRemote =\n\t\t\t\t\texistingChannel &&\n\t\t\t\t\tlogger.resource.scheme === Schemas.vscodeRemote;\n\t\t\t\tconst id = hasToAppendRemote\n\t\t\t\t\t? `${logger.id}.remote`\n\t\t\t\t\t: logger.id;\n\t\t\t\tconst label = hasToAppendRemote\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"remote name\",\n\t\t\t\t\t\t\t\"{0} (Remote)\",\n\t\t\t\t\t\t\tlogger.name ?? logger.id,\n\t\t\t\t\t\t)\n\t\t\t\t\t: (logger.name ?? logger.id);\n\t\t\t\tthis.outputChannelRegistry.registerChannel({\n\t\t\t\t\tid,\n\t\t\t\t\tlabel,\n\t\t\t\t\tfile: logger.resource,\n\t\t\t\t\tlog: true,\n\t\t\t\t\textensionId: logger.extensionId,\n\t\t\t\t});\n\t\t\t\tdisposables.add(\n\t\t\t\t\ttoDisposable(() =>\n\t\t\t\t\t\tthis.outputChannelRegistry.removeChannel(id),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (remoteLogger) {\n\t\t\t\t\tthis.registerLogChannel(remoteLogger);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (!isCancellationError(error)) {\n\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t\"Error while registering log channel\",\n\t\t\t\t\t\tlogger.resource.toString(),\n\t\t\t\t\t\tgetErrorMessage(error),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdisposables.add(toDisposable(() => promise.cancel()));\n\t\tthis.loggerDisposables.set(logger.resource.toString(), disposables);\n\t}\n\n\tprivate deregisterLogChannel(logger: ILoggerResource): void {\n\t\tthis.loggerDisposables.deleteAndDispose(logger.resource.toString());\n\t}\n\n\tprivate async whenFileExists(\n\t\tfile: URI,\n\t\ttrial: number,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tconst exists = await this.fileService.exists(file);\n\t\tif (exists) {\n\t\t\treturn;\n\t\t}\n\t\tif (token.isCancellationRequested) {\n\t\t\tthrow new CancellationError();\n\t\t}\n\t\tif (trial > 10) {\n\t\t\tthrow new Error(`Timed out while waiting for file to be created`);\n\t\t}\n\t\tthis.logService.debug(\n\t\t\t`[Registering Log Channel] File does not exist. Waiting for 1s to retry.`,\n\t\t\tfile.toString(),\n\t\t);\n\t\tawait timeout(1000, token);\n\t\tawait this.whenFileExists(file, trial + 1, token);\n\t}\n\n\tprivate registerShowWindowLogAction(): void {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass ShowWindowLogAction extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: showWindowLogActionId,\n\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\"show window log\",\n\t\t\t\t\t\t\t\t\"Show Window Log\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: Categories.Developer,\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(\n\t\t\t\t\t\tservicesAccessor: ServicesAccessor,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst outputService =\n\t\t\t\t\t\t\tservicesAccessor.get(IOutputService);\n\t\t\t\t\t\toutputService.showChannel(windowLogId);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n\nclass LogLevelMigration implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IDefaultLogLevelsService defaultLogLevelsService: IDefaultLogLevelsService\n\t) {\n\t\tdefaultLogLevelsService.migrateLogLevels();\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(LogOutputChannels, LifecyclePhase.Restored);\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(LogLevelMigration, LifecyclePhase.Eventually);\n"],
  "mappings": "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",
  "names": []
}
