{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/logs/common/logsActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { ILoggerService, LogLevel, LogLevelToLocalizedString, isLogLevel } from '../../../../platform/log/common/log.js';\nimport { IQuickInputButton, IQuickInputService, IQuickPickItem, IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { dirname, basename, isEqual } from '../../../../base/common/resources.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IOutputChannelDescriptor, IOutputService } from '../../../services/output/common/output.js';\nimport { extensionTelemetryLogChannelId, telemetryLogId } from '../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IDefaultLogLevelsService } from './defaultLogLevels.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\n\ntype LogLevelQuickPickItem = IQuickPickItem & { level: LogLevel };\ntype LogChannelQuickPickItem = IQuickPickItem & { id: string; resource: URI; extensionId?: string };\n\nexport class SetLogLevelAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.setLogLevel';\n\tstatic readonly TITLE = nls.localize2('setLogLevel', \"Set Log Level...\");\n\n\tconstructor(id: string, label: string,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ILoggerService private readonly loggerService: ILoggerService,\n\t\t@IOutputService private readonly outputService: IOutputService,\n\t\t@IDefaultLogLevelsService private readonly defaultLogLevelsService: IDefaultLogLevelsService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst logLevelOrChannel = await this.selectLogLevelOrChannel();\n\t\tif (logLevelOrChannel !== null) {\n\t\t\tif (isLogLevel(logLevelOrChannel)) {\n\t\t\t\tthis.loggerService.setLogLevel(logLevelOrChannel);\n\t\t\t} else {\n\t\t\t\tawait this.setLogLevelForChannel(logLevelOrChannel);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async selectLogLevelOrChannel(): Promise<LogChannelQuickPickItem | LogLevel | null> {\n\t\tconst defaultLogLevels = await this.defaultLogLevelsService.getDefaultLogLevels();\n\t\tconst extensionLogs: LogChannelQuickPickItem[] = [], logs: LogChannelQuickPickItem[] = [];\n\t\tconst logLevel = this.loggerService.getLogLevel();\n\t\tfor (const channel of this.outputService.getChannelDescriptors()) {\n\t\t\tif (!SetLogLevelAction.isLevelSettable(channel) || !channel.file) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst channelLogLevel = this.loggerService.getLogLevel(channel.file) ?? logLevel;\n\t\t\tconst item: LogChannelQuickPickItem = { id: channel.id, resource: channel.file, label: channel.label, description: channelLogLevel !== logLevel ? this.getLabel(channelLogLevel) : undefined, extensionId: channel.extensionId };\n\t\t\tif (channel.extensionId) {\n\t\t\t\textensionLogs.push(item);\n\t\t\t} else {\n\t\t\t\tlogs.push(item);\n\t\t\t}\n\t\t}\n\t\tconst entries: (LogLevelQuickPickItem | LogChannelQuickPickItem | IQuickPickSeparator)[] = [];\n\t\tentries.push({ type: 'separator', label: nls.localize('all', \"All\") });\n\t\tentries.push(...this.getLogLevelEntries(defaultLogLevels.default, this.loggerService.getLogLevel(), true));\n\t\tif (extensionLogs.length) {\n\t\t\tentries.push({ type: 'separator', label: nls.localize('extensionLogs', \"Extension Logs\") });\n\t\t\tentries.push(...extensionLogs.sort((a, b) => a.label.localeCompare(b.label)));\n\t\t}\n\t\tentries.push({ type: 'separator', label: nls.localize('loggers', \"Logs\") });\n\t\tentries.push(...logs.sort((a, b) => a.label.localeCompare(b.label)));\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst quickPick = disposables.add(this.quickInputService.createQuickPick({ useSeparators: true }));\n\t\t\tquickPick.placeholder = nls.localize('selectlog', \"Set Log Level\");\n\t\t\tquickPick.items = entries;\n\t\t\tlet selectedItem: IQuickPickItem | undefined;\n\t\t\tdisposables.add(quickPick.onDidTriggerItemButton(e => {\n\t\t\t\tquickPick.hide();\n\t\t\t\tthis.defaultLogLevelsService.setDefaultLogLevel((<LogLevelQuickPickItem>e.item).level);\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidAccept(e => {\n\t\t\t\tselectedItem = quickPick.selectedItems[0];\n\t\t\t\tquickPick.hide();\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\tconst result = selectedItem ? (<LogLevelQuickPickItem>selectedItem).level ?? <LogChannelQuickPickItem>selectedItem : null;\n\t\t\t\tdisposables.dispose();\n\t\t\t\tresolve(result);\n\t\t\t}));\n\t\t\tquickPick.show();\n\t\t});\n\t}\n\n\tstatic isLevelSettable(channel: IOutputChannelDescriptor): boolean {\n\t\treturn channel.log && channel.file !== undefined && channel.id !== telemetryLogId && channel.id !== extensionTelemetryLogChannelId;\n\t}\n\n\tprivate async setLogLevelForChannel(logChannel: LogChannelQuickPickItem): Promise<void> {\n\t\tconst defaultLogLevels = await this.defaultLogLevelsService.getDefaultLogLevels();\n\t\tconst defaultLogLevel = defaultLogLevels.extensions.find(e => e[0] === logChannel.extensionId?.toLowerCase())?.[1] ?? defaultLogLevels.default;\n\t\tconst currentLogLevel = this.loggerService.getLogLevel(logChannel.resource) ?? defaultLogLevel;\n\t\tconst entries = this.getLogLevelEntries(defaultLogLevel, currentLogLevel, !!logChannel.extensionId);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst quickPick = disposables.add(this.quickInputService.createQuickPick());\n\t\t\tquickPick.placeholder = logChannel ? nls.localize('selectLogLevelFor', \" {0}: Select log level\", logChannel?.label) : nls.localize('selectLogLevel', \"Select log level\");\n\t\t\tquickPick.items = entries;\n\t\t\tquickPick.activeItems = entries.filter((entry) => entry.level === this.loggerService.getLogLevel());\n\t\t\tlet selectedItem: LogLevelQuickPickItem | undefined;\n\t\t\tdisposables.add(quickPick.onDidTriggerItemButton(e => {\n\t\t\t\tquickPick.hide();\n\t\t\t\tthis.defaultLogLevelsService.setDefaultLogLevel((<LogLevelQuickPickItem>e.item).level, logChannel.extensionId);\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidAccept(e => {\n\t\t\t\tselectedItem = quickPick.selectedItems[0] as LogLevelQuickPickItem;\n\t\t\t\tquickPick.hide();\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\tif (selectedItem) {\n\t\t\t\t\tthis.loggerService.setLogLevel(logChannel.resource, selectedItem.level);\n\t\t\t\t}\n\t\t\t\tdisposables.dispose();\n\t\t\t\tresolve();\n\t\t\t}));\n\t\t\tquickPick.show();\n\t\t});\n\t}\n\n\tprivate getLogLevelEntries(defaultLogLevel: LogLevel, currentLogLevel: LogLevel, canSetDefaultLogLevel: boolean): LogLevelQuickPickItem[] {\n\t\tconst button: IQuickInputButton | undefined = canSetDefaultLogLevel ? { iconClass: ThemeIcon.asClassName(Codicon.checkAll), tooltip: nls.localize('resetLogLevel', \"Set as Default Log Level\") } : undefined;\n\t\treturn [\n\t\t\t{ label: this.getLabel(LogLevel.Trace, currentLogLevel), level: LogLevel.Trace, description: this.getDescription(LogLevel.Trace, defaultLogLevel), buttons: button && defaultLogLevel !== LogLevel.Trace ? [button] : undefined },\n\t\t\t{ label: this.getLabel(LogLevel.Debug, currentLogLevel), level: LogLevel.Debug, description: this.getDescription(LogLevel.Debug, defaultLogLevel), buttons: button && defaultLogLevel !== LogLevel.Debug ? [button] : undefined },\n\t\t\t{ label: this.getLabel(LogLevel.Info, currentLogLevel), level: LogLevel.Info, description: this.getDescription(LogLevel.Info, defaultLogLevel), buttons: button && defaultLogLevel !== LogLevel.Info ? [button] : undefined },\n\t\t\t{ label: this.getLabel(LogLevel.Warning, currentLogLevel), level: LogLevel.Warning, description: this.getDescription(LogLevel.Warning, defaultLogLevel), buttons: button && defaultLogLevel !== LogLevel.Warning ? [button] : undefined },\n\t\t\t{ label: this.getLabel(LogLevel.Error, currentLogLevel), level: LogLevel.Error, description: this.getDescription(LogLevel.Error, defaultLogLevel), buttons: button && defaultLogLevel !== LogLevel.Error ? [button] : undefined },\n\t\t\t{ label: this.getLabel(LogLevel.Off, currentLogLevel), level: LogLevel.Off, description: this.getDescription(LogLevel.Off, defaultLogLevel), buttons: button && defaultLogLevel !== LogLevel.Off ? [button] : undefined },\n\t\t];\n\t}\n\n\tprivate getLabel(level: LogLevel, current?: LogLevel): string {\n\t\tconst label = LogLevelToLocalizedString(level).value;\n\t\treturn level === current ? `$(check) ${label}` : label;\n\t}\n\n\tprivate getDescription(level: LogLevel, defaultLogLevel: LogLevel): string | undefined {\n\t\treturn defaultLogLevel === level ? nls.localize('default', \"Default\") : undefined;\n\t}\n\n}\n\nexport class OpenWindowSessionLogFileAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.openSessionLogFile';\n\tstatic readonly TITLE = nls.localize2('openSessionLogFile', \"Open Window Log File (Session)...\");\n\n\tconstructor(id: string, label: string,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst sessionResult = await this.quickInputService.pick(\n\t\t\tthis.getSessions().then(sessions => sessions.map((s, index): IQuickPickItem => ({\n\t\t\t\tid: s.toString(),\n\t\t\t\tlabel: basename(s),\n\t\t\t\tdescription: index === 0 ? nls.localize('current', \"Current\") : undefined\n\t\t\t}))),\n\t\t\t{\n\t\t\t\tcanPickMany: false,\n\t\t\t\tplaceHolder: nls.localize('sessions placeholder', \"Select Session\")\n\t\t\t});\n\t\tif (sessionResult) {\n\t\t\tconst logFileResult = await this.quickInputService.pick(\n\t\t\t\tthis.getLogFiles(URI.parse(sessionResult.id!)).then(logFiles => logFiles.map((s): IQuickPickItem => ({\n\t\t\t\t\tid: s.toString(),\n\t\t\t\t\tlabel: basename(s)\n\t\t\t\t}))),\n\t\t\t\t{\n\t\t\t\t\tcanPickMany: false,\n\t\t\t\t\tplaceHolder: nls.localize('log placeholder', \"Select Log file\")\n\t\t\t\t});\n\t\t\tif (logFileResult) {\n\t\t\t\treturn this.editorService.openEditor({ resource: URI.parse(logFileResult.id!), options: { pinned: true } }).then(() => undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getSessions(): Promise<URI[]> {\n\t\tconst logsPath = this.environmentService.logsHome.with({ scheme: this.environmentService.logFile.scheme });\n\t\tconst result: URI[] = [logsPath];\n\t\tconst stat = await this.fileService.resolve(dirname(logsPath));\n\t\tif (stat.children) {\n\t\t\tresult.push(...stat.children\n\t\t\t\t.filter(stat => !isEqual(stat.resource, logsPath) && stat.isDirectory && /^\\d{8}T\\d{6}$/.test(stat.name))\n\t\t\t\t.sort()\n\t\t\t\t.reverse()\n\t\t\t\t.map(d => d.resource));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getLogFiles(session: URI): Promise<URI[]> {\n\t\tconst stat = await this.fileService.resolve(session);\n\t\tif (stat.children) {\n\t\t\treturn stat.children.filter(stat => !stat.isDirectory).map(stat => stat.resource);\n\t\t}\n\t\treturn [];\n\t}\n}\n\n"],
  "mappings": "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",
  "names": ["stat"]
}
