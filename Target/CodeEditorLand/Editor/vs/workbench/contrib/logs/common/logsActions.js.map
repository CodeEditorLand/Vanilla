{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/logs/common/logsActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport {\n\tbasename,\n\tdirname,\n\tisEqual,\n} from \"../../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport {\n\tILoggerService,\n\tLogLevel,\n\tLogLevelToLocalizedString,\n\tisLogLevel,\n} from \"../../../../platform/log/common/log.js\";\nimport {\n\ttype IQuickInputButton,\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\textensionTelemetryLogChannelId,\n\ttelemetryLogId,\n} from \"../../../../platform/telemetry/common/telemetryUtils.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport {\n\ttype IOutputChannelDescriptor,\n\tIOutputService,\n} from \"../../../services/output/common/output.js\";\nimport { IDefaultLogLevelsService } from \"./defaultLogLevels.js\";\n\ntype LogLevelQuickPickItem = IQuickPickItem & { level: LogLevel };\ntype LogChannelQuickPickItem = IQuickPickItem & {\n\tid: string;\n\tresource: URI;\n\textensionId?: string;\n};\n\nexport class SetLogLevelAction extends Action {\n\tstatic readonly ID = \"workbench.action.setLogLevel\";\n\tstatic readonly TITLE = nls.localize2(\"setLogLevel\", \"Set Log Level...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@ILoggerService private readonly loggerService: ILoggerService,\n\t\t@IOutputService private readonly outputService: IOutputService,\n\t\t@IDefaultLogLevelsService\n\t\tprivate readonly defaultLogLevelsService: IDefaultLogLevelsService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst logLevelOrChannel = await this.selectLogLevelOrChannel();\n\t\tif (logLevelOrChannel !== null) {\n\t\t\tif (isLogLevel(logLevelOrChannel)) {\n\t\t\t\tthis.loggerService.setLogLevel(logLevelOrChannel);\n\t\t\t} else {\n\t\t\t\tawait this.setLogLevelForChannel(logLevelOrChannel);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async selectLogLevelOrChannel(): Promise<\n\t\tLogChannelQuickPickItem | LogLevel | null\n\t> {\n\t\tconst defaultLogLevels =\n\t\t\tawait this.defaultLogLevelsService.getDefaultLogLevels();\n\t\tconst extensionLogs: LogChannelQuickPickItem[] = [],\n\t\t\tlogs: LogChannelQuickPickItem[] = [];\n\t\tconst logLevel = this.loggerService.getLogLevel();\n\t\tfor (const channel of this.outputService.getChannelDescriptors()) {\n\t\t\tif (!SetLogLevelAction.isLevelSettable(channel) || !channel.file) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst channelLogLevel =\n\t\t\t\tthis.loggerService.getLogLevel(channel.file) ?? logLevel;\n\t\t\tconst item: LogChannelQuickPickItem = {\n\t\t\t\tid: channel.id,\n\t\t\t\tresource: channel.file,\n\t\t\t\tlabel: channel.label,\n\t\t\t\tdescription:\n\t\t\t\t\tchannelLogLevel !== logLevel\n\t\t\t\t\t\t? this.getLabel(channelLogLevel)\n\t\t\t\t\t\t: undefined,\n\t\t\t\textensionId: channel.extensionId,\n\t\t\t};\n\t\t\tif (channel.extensionId) {\n\t\t\t\textensionLogs.push(item);\n\t\t\t} else {\n\t\t\t\tlogs.push(item);\n\t\t\t}\n\t\t}\n\t\tconst entries: (\n\t\t\t| LogLevelQuickPickItem\n\t\t\t| LogChannelQuickPickItem\n\t\t\t| IQuickPickSeparator\n\t\t)[] = [];\n\t\tentries.push({ type: \"separator\", label: nls.localize(\"all\", \"All\") });\n\t\tentries.push(\n\t\t\t...this.getLogLevelEntries(\n\t\t\t\tdefaultLogLevels.default,\n\t\t\t\tthis.loggerService.getLogLevel(),\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\t\tif (extensionLogs.length) {\n\t\t\tentries.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: nls.localize(\"extensionLogs\", \"Extension Logs\"),\n\t\t\t});\n\t\t\tentries.push(\n\t\t\t\t...extensionLogs.sort((a, b) => a.label.localeCompare(b.label)),\n\t\t\t);\n\t\t}\n\t\tentries.push({\n\t\t\ttype: \"separator\",\n\t\t\tlabel: nls.localize(\"loggers\", \"Logs\"),\n\t\t});\n\t\tentries.push(...logs.sort((a, b) => a.label.localeCompare(b.label)));\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst quickPick = disposables.add(\n\t\t\t\tthis.quickInputService.createQuickPick({ useSeparators: true }),\n\t\t\t);\n\t\t\tquickPick.placeholder = nls.localize(\"selectlog\", \"Set Log Level\");\n\t\t\tquickPick.items = entries;\n\t\t\tlet selectedItem: IQuickPickItem | undefined;\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidTriggerItemButton((e) => {\n\t\t\t\t\tquickPick.hide();\n\t\t\t\t\tthis.defaultLogLevelsService.setDefaultLogLevel(\n\t\t\t\t\t\t(<LogLevelQuickPickItem>e.item).level,\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidAccept((e) => {\n\t\t\t\t\tselectedItem = quickPick.selectedItems[0];\n\t\t\t\t\tquickPick.hide();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidHide(() => {\n\t\t\t\t\tconst result = selectedItem\n\t\t\t\t\t\t? ((<LogLevelQuickPickItem>selectedItem).level ??\n\t\t\t\t\t\t\t<LogChannelQuickPickItem>selectedItem)\n\t\t\t\t\t\t: null;\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\tresolve(result);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tquickPick.show();\n\t\t});\n\t}\n\n\tstatic isLevelSettable(channel: IOutputChannelDescriptor): boolean {\n\t\treturn (\n\t\t\tchannel.log &&\n\t\t\tchannel.file !== undefined &&\n\t\t\tchannel.id !== telemetryLogId &&\n\t\t\tchannel.id !== extensionTelemetryLogChannelId\n\t\t);\n\t}\n\n\tprivate async setLogLevelForChannel(\n\t\tlogChannel: LogChannelQuickPickItem,\n\t): Promise<void> {\n\t\tconst defaultLogLevels =\n\t\t\tawait this.defaultLogLevelsService.getDefaultLogLevels();\n\t\tconst defaultLogLevel =\n\t\t\tdefaultLogLevels.extensions.find(\n\t\t\t\t(e) => e[0] === logChannel.extensionId?.toLowerCase(),\n\t\t\t)?.[1] ?? defaultLogLevels.default;\n\t\tconst currentLogLevel =\n\t\t\tthis.loggerService.getLogLevel(logChannel.resource) ??\n\t\t\tdefaultLogLevel;\n\t\tconst entries = this.getLogLevelEntries(\n\t\t\tdefaultLogLevel,\n\t\t\tcurrentLogLevel,\n\t\t\t!!logChannel.extensionId,\n\t\t);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst quickPick = disposables.add(\n\t\t\t\tthis.quickInputService.createQuickPick(),\n\t\t\t);\n\t\t\tquickPick.placeholder = logChannel\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"selectLogLevelFor\",\n\t\t\t\t\t\t\" {0}: Select log level\",\n\t\t\t\t\t\tlogChannel?.label,\n\t\t\t\t\t)\n\t\t\t\t: nls.localize(\"selectLogLevel\", \"Select log level\");\n\t\t\tquickPick.items = entries;\n\t\t\tquickPick.activeItems = entries.filter(\n\t\t\t\t(entry) => entry.level === this.loggerService.getLogLevel(),\n\t\t\t);\n\t\t\tlet selectedItem: LogLevelQuickPickItem | undefined;\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidTriggerItemButton((e) => {\n\t\t\t\t\tquickPick.hide();\n\t\t\t\t\tthis.defaultLogLevelsService.setDefaultLogLevel(\n\t\t\t\t\t\t(<LogLevelQuickPickItem>e.item).level,\n\t\t\t\t\t\tlogChannel.extensionId,\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidAccept((e) => {\n\t\t\t\t\tselectedItem = quickPick\n\t\t\t\t\t\t.selectedItems[0] as LogLevelQuickPickItem;\n\t\t\t\t\tquickPick.hide();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidHide(() => {\n\t\t\t\t\tif (selectedItem) {\n\t\t\t\t\t\tthis.loggerService.setLogLevel(\n\t\t\t\t\t\t\tlogChannel.resource,\n\t\t\t\t\t\t\tselectedItem.level,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\tresolve();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tquickPick.show();\n\t\t});\n\t}\n\n\tprivate getLogLevelEntries(\n\t\tdefaultLogLevel: LogLevel,\n\t\tcurrentLogLevel: LogLevel,\n\t\tcanSetDefaultLogLevel: boolean,\n\t): LogLevelQuickPickItem[] {\n\t\tconst button: IQuickInputButton | undefined = canSetDefaultLogLevel\n\t\t\t? {\n\t\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.checkAll),\n\t\t\t\t\ttooltip: nls.localize(\n\t\t\t\t\t\t\"resetLogLevel\",\n\t\t\t\t\t\t\"Set as Default Log Level\",\n\t\t\t\t\t),\n\t\t\t\t}\n\t\t\t: undefined;\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: this.getLabel(LogLevel.Trace, currentLogLevel),\n\t\t\t\tlevel: LogLevel.Trace,\n\t\t\t\tdescription: this.getDescription(\n\t\t\t\t\tLogLevel.Trace,\n\t\t\t\t\tdefaultLogLevel,\n\t\t\t\t),\n\t\t\t\tbuttons:\n\t\t\t\t\tbutton && defaultLogLevel !== LogLevel.Trace\n\t\t\t\t\t\t? [button]\n\t\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: this.getLabel(LogLevel.Debug, currentLogLevel),\n\t\t\t\tlevel: LogLevel.Debug,\n\t\t\t\tdescription: this.getDescription(\n\t\t\t\t\tLogLevel.Debug,\n\t\t\t\t\tdefaultLogLevel,\n\t\t\t\t),\n\t\t\t\tbuttons:\n\t\t\t\t\tbutton && defaultLogLevel !== LogLevel.Debug\n\t\t\t\t\t\t? [button]\n\t\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: this.getLabel(LogLevel.Info, currentLogLevel),\n\t\t\t\tlevel: LogLevel.Info,\n\t\t\t\tdescription: this.getDescription(\n\t\t\t\t\tLogLevel.Info,\n\t\t\t\t\tdefaultLogLevel,\n\t\t\t\t),\n\t\t\t\tbuttons:\n\t\t\t\t\tbutton && defaultLogLevel !== LogLevel.Info\n\t\t\t\t\t\t? [button]\n\t\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: this.getLabel(LogLevel.Warning, currentLogLevel),\n\t\t\t\tlevel: LogLevel.Warning,\n\t\t\t\tdescription: this.getDescription(\n\t\t\t\t\tLogLevel.Warning,\n\t\t\t\t\tdefaultLogLevel,\n\t\t\t\t),\n\t\t\t\tbuttons:\n\t\t\t\t\tbutton && defaultLogLevel !== LogLevel.Warning\n\t\t\t\t\t\t? [button]\n\t\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: this.getLabel(LogLevel.Error, currentLogLevel),\n\t\t\t\tlevel: LogLevel.Error,\n\t\t\t\tdescription: this.getDescription(\n\t\t\t\t\tLogLevel.Error,\n\t\t\t\t\tdefaultLogLevel,\n\t\t\t\t),\n\t\t\t\tbuttons:\n\t\t\t\t\tbutton && defaultLogLevel !== LogLevel.Error\n\t\t\t\t\t\t? [button]\n\t\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: this.getLabel(LogLevel.Off, currentLogLevel),\n\t\t\t\tlevel: LogLevel.Off,\n\t\t\t\tdescription: this.getDescription(LogLevel.Off, defaultLogLevel),\n\t\t\t\tbuttons:\n\t\t\t\t\tbutton && defaultLogLevel !== LogLevel.Off\n\t\t\t\t\t\t? [button]\n\t\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t];\n\t}\n\n\tprivate getLabel(level: LogLevel, current?: LogLevel): string {\n\t\tconst label = LogLevelToLocalizedString(level).value;\n\t\treturn level === current ? `$(check) ${label}` : label;\n\t}\n\n\tprivate getDescription(\n\t\tlevel: LogLevel,\n\t\tdefaultLogLevel: LogLevel,\n\t): string | undefined {\n\t\treturn defaultLogLevel === level\n\t\t\t? nls.localize(\"default\", \"Default\")\n\t\t\t: undefined;\n\t}\n}\n\nexport class OpenWindowSessionLogFileAction extends Action {\n\tstatic readonly ID = \"workbench.action.openSessionLogFile\";\n\tstatic readonly TITLE = nls.localize2(\n\t\t\"openSessionLogFile\",\n\t\t\"Open Window Log File (Session)...\",\n\t);\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkbenchEnvironmentService\n\t\tprivate readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst sessionResult = await this.quickInputService.pick(\n\t\t\tthis.getSessions().then((sessions) =>\n\t\t\t\tsessions.map(\n\t\t\t\t\t(s, index): IQuickPickItem => ({\n\t\t\t\t\t\tid: s.toString(),\n\t\t\t\t\t\tlabel: basename(s),\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\tindex === 0\n\t\t\t\t\t\t\t\t? nls.localize(\"current\", \"Current\")\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t),\n\t\t\t{\n\t\t\t\tcanPickMany: false,\n\t\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\t\"sessions placeholder\",\n\t\t\t\t\t\"Select Session\",\n\t\t\t\t),\n\t\t\t},\n\t\t);\n\t\tif (sessionResult) {\n\t\t\tconst logFileResult = await this.quickInputService.pick(\n\t\t\t\tthis.getLogFiles(URI.parse(sessionResult.id!)).then(\n\t\t\t\t\t(logFiles) =>\n\t\t\t\t\t\tlogFiles.map(\n\t\t\t\t\t\t\t(s): IQuickPickItem => ({\n\t\t\t\t\t\t\t\tid: s.toString(),\n\t\t\t\t\t\t\t\tlabel: basename(s),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tcanPickMany: false,\n\t\t\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\t\t\"log placeholder\",\n\t\t\t\t\t\t\"Select Log file\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t);\n\t\t\tif (logFileResult) {\n\t\t\t\treturn this.editorService\n\t\t\t\t\t.openEditor({\n\t\t\t\t\t\tresource: URI.parse(logFileResult.id!),\n\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getSessions(): Promise<URI[]> {\n\t\tconst logsPath = this.environmentService.logsHome.with({\n\t\t\tscheme: this.environmentService.logFile.scheme,\n\t\t});\n\t\tconst result: URI[] = [logsPath];\n\t\tconst stat = await this.fileService.resolve(dirname(logsPath));\n\t\tif (stat.children) {\n\t\t\tresult.push(\n\t\t\t\t...stat.children\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(stat) =>\n\t\t\t\t\t\t\t!isEqual(stat.resource, logsPath) &&\n\t\t\t\t\t\t\tstat.isDirectory &&\n\t\t\t\t\t\t\t/^\\d{8}T\\d{6}$/.test(stat.name),\n\t\t\t\t\t)\n\t\t\t\t\t.sort()\n\t\t\t\t\t.reverse()\n\t\t\t\t\t.map((d) => d.resource),\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getLogFiles(session: URI): Promise<URI[]> {\n\t\tconst stat = await this.fileService.resolve(session);\n\t\tif (stat.children) {\n\t\t\treturn stat.children\n\t\t\t\t.filter((stat) => !stat.isDirectory)\n\t\t\t\t.map((stat) => stat.resource);\n\t\t}\n\t\treturn [];\n\t}\n}\n"],
  "mappings": "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",
  "names": ["stat"]
}
