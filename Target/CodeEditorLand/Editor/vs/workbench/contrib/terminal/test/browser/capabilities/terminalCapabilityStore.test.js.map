{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/test/browser/capabilities/terminalCapabilityStore.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual } from 'assert';\nimport { DisposableStore } from '../../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../../base/test/common/utils.js';\nimport { TerminalCapability } from '../../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { TerminalCapabilityStore, TerminalCapabilityStoreMultiplexer } from '../../../../../../platform/terminal/common/capabilities/terminalCapabilityStore.js';\n\nsuite('TerminalCapabilityStore', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet capabilityStore: TerminalCapabilityStore;\n\tlet addEvents: TerminalCapability[];\n\tlet removeEvents: TerminalCapability[];\n\n\tsetup(() => {\n\t\tcapabilityStore = store.add(new TerminalCapabilityStore());\n\t\tstore.add(capabilityStore.onDidAddCapabilityType(e => addEvents.push(e)));\n\t\tstore.add(capabilityStore.onDidRemoveCapabilityType(e => removeEvents.push(e)));\n\t\taddEvents = [];\n\t\tremoveEvents = [];\n\t});\n\n\tteardown(() => capabilityStore.dispose());\n\n\ttest('should fire events when capabilities are added', () => {\n\t\tassertEvents(addEvents, []);\n\t\tcapabilityStore.add(TerminalCapability.CwdDetection, {} as any);\n\t\tassertEvents(addEvents, [TerminalCapability.CwdDetection]);\n\t});\n\ttest('should fire events when capabilities are removed', async () => {\n\t\tassertEvents(removeEvents, []);\n\t\tcapabilityStore.add(TerminalCapability.CwdDetection, {} as any);\n\t\tassertEvents(removeEvents, []);\n\t\tcapabilityStore.remove(TerminalCapability.CwdDetection);\n\t\tassertEvents(removeEvents, [TerminalCapability.CwdDetection]);\n\t});\n\ttest('has should return whether a capability is present', () => {\n\t\tdeepStrictEqual(capabilityStore.has(TerminalCapability.CwdDetection), false);\n\t\tcapabilityStore.add(TerminalCapability.CwdDetection, {} as any);\n\t\tdeepStrictEqual(capabilityStore.has(TerminalCapability.CwdDetection), true);\n\t\tcapabilityStore.remove(TerminalCapability.CwdDetection);\n\t\tdeepStrictEqual(capabilityStore.has(TerminalCapability.CwdDetection), false);\n\t});\n\ttest('items should reflect current state', () => {\n\t\tdeepStrictEqual(Array.from(capabilityStore.items), []);\n\t\tcapabilityStore.add(TerminalCapability.CwdDetection, {} as any);\n\t\tdeepStrictEqual(Array.from(capabilityStore.items), [TerminalCapability.CwdDetection]);\n\t\tcapabilityStore.add(TerminalCapability.NaiveCwdDetection, {} as any);\n\t\tdeepStrictEqual(Array.from(capabilityStore.items), [TerminalCapability.CwdDetection, TerminalCapability.NaiveCwdDetection]);\n\t\tcapabilityStore.remove(TerminalCapability.CwdDetection);\n\t\tdeepStrictEqual(Array.from(capabilityStore.items), [TerminalCapability.NaiveCwdDetection]);\n\t});\n});\n\nsuite('TerminalCapabilityStoreMultiplexer', () => {\n\tlet store: DisposableStore;\n\tlet multiplexer: TerminalCapabilityStoreMultiplexer;\n\tlet store1: TerminalCapabilityStore;\n\tlet store2: TerminalCapabilityStore;\n\tlet addEvents: TerminalCapability[];\n\tlet removeEvents: TerminalCapability[];\n\n\tsetup(() => {\n\t\tstore = new DisposableStore();\n\t\tmultiplexer = store.add(new TerminalCapabilityStoreMultiplexer());\n\t\tmultiplexer.onDidAddCapabilityType(e => addEvents.push(e));\n\t\tmultiplexer.onDidRemoveCapabilityType(e => removeEvents.push(e));\n\t\tstore1 = store.add(new TerminalCapabilityStore());\n\t\tstore2 = store.add(new TerminalCapabilityStore());\n\t\taddEvents = [];\n\t\tremoveEvents = [];\n\t});\n\n\tteardown(() => store.dispose());\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('should fire events when capabilities are enabled', async () => {\n\t\tassertEvents(addEvents, []);\n\t\tmultiplexer.add(store1);\n\t\tmultiplexer.add(store2);\n\t\tstore1.add(TerminalCapability.CwdDetection, {} as any);\n\t\tassertEvents(addEvents, [TerminalCapability.CwdDetection]);\n\t\tstore2.add(TerminalCapability.NaiveCwdDetection, {} as any);\n\t\tassertEvents(addEvents, [TerminalCapability.NaiveCwdDetection]);\n\t});\n\ttest('should fire events when capabilities are disabled', async () => {\n\t\tassertEvents(removeEvents, []);\n\t\tmultiplexer.add(store1);\n\t\tmultiplexer.add(store2);\n\t\tstore1.add(TerminalCapability.CwdDetection, {} as any);\n\t\tstore2.add(TerminalCapability.NaiveCwdDetection, {} as any);\n\t\tassertEvents(removeEvents, []);\n\t\tstore1.remove(TerminalCapability.CwdDetection);\n\t\tassertEvents(removeEvents, [TerminalCapability.CwdDetection]);\n\t\tstore2.remove(TerminalCapability.NaiveCwdDetection);\n\t\tassertEvents(removeEvents, [TerminalCapability.NaiveCwdDetection]);\n\t});\n\ttest('should fire events when stores are added', async () => {\n\t\tassertEvents(addEvents, []);\n\t\tstore1.add(TerminalCapability.CwdDetection, {} as any);\n\t\tassertEvents(addEvents, []);\n\t\tstore2.add(TerminalCapability.NaiveCwdDetection, {} as any);\n\t\tmultiplexer.add(store1);\n\t\tmultiplexer.add(store2);\n\t\tassertEvents(addEvents, [TerminalCapability.CwdDetection, TerminalCapability.NaiveCwdDetection]);\n\t});\n\ttest('items should return items from all stores', () => {\n\t\tdeepStrictEqual(Array.from(multiplexer.items).sort(), [].sort());\n\t\tmultiplexer.add(store1);\n\t\tmultiplexer.add(store2);\n\t\tstore1.add(TerminalCapability.CwdDetection, {} as any);\n\t\tdeepStrictEqual(Array.from(multiplexer.items).sort(), [TerminalCapability.CwdDetection].sort());\n\t\tstore1.add(TerminalCapability.CommandDetection, {} as any);\n\t\tstore2.add(TerminalCapability.NaiveCwdDetection, {} as any);\n\t\tdeepStrictEqual(Array.from(multiplexer.items).sort(), [TerminalCapability.CwdDetection, TerminalCapability.CommandDetection, TerminalCapability.NaiveCwdDetection].sort());\n\t\tstore2.remove(TerminalCapability.NaiveCwdDetection);\n\t\tdeepStrictEqual(Array.from(multiplexer.items).sort(), [TerminalCapability.CwdDetection, TerminalCapability.CommandDetection].sort());\n\t});\n\ttest('has should return whether a capability is present', () => {\n\t\tdeepStrictEqual(multiplexer.has(TerminalCapability.CwdDetection), false);\n\t\tmultiplexer.add(store1);\n\t\tstore1.add(TerminalCapability.CwdDetection, {} as any);\n\t\tdeepStrictEqual(multiplexer.has(TerminalCapability.CwdDetection), true);\n\t\tstore1.remove(TerminalCapability.CwdDetection);\n\t\tdeepStrictEqual(multiplexer.has(TerminalCapability.CwdDetection), false);\n\t});\n});\n\nfunction assertEvents(actual: TerminalCapability[], expected: TerminalCapability[]) {\n\tdeepStrictEqual(actual, expected);\n\tactual.length = 0;\n}\n"],
  "mappings": "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",
  "names": []
}
