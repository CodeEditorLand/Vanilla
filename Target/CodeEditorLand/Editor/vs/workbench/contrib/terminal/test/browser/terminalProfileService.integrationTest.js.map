{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/test/browser/terminalProfileService.integrationTest.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual } from 'assert';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { isLinux, isWindows, OperatingSystem } from '../../../../../base/common/platform.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ConfigurationTarget, IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IPickOptions, IQuickInputService, Omit, QuickPickInput } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { IRemoteAgentEnvironment } from '../../../../../platform/remote/common/remoteAgentEnvironment.js';\nimport { IExtensionTerminalProfile, ITerminalBackend, ITerminalProfile } from '../../../../../platform/terminal/common/terminal.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { TestThemeService } from '../../../../../platform/theme/test/common/testThemeService.js';\nimport { ITerminalInstanceService } from '../../browser/terminal.js';\nimport { IProfileQuickPickItem, TerminalProfileQuickpick } from '../../browser/terminalProfileQuickpick.js';\nimport { TerminalProfileService } from '../../browser/terminalProfileService.js';\nimport { ITerminalConfiguration, ITerminalProfileService } from '../../common/terminal.js';\nimport { ITerminalContributionService } from '../../common/terminalExtensionPoints.js';\nimport { IWorkbenchEnvironmentService } from '../../../../services/environment/common/environmentService.js';\nimport { IExtensionService } from '../../../../services/extensions/common/extensions.js';\nimport { IRemoteAgentService } from '../../../../services/remote/common/remoteAgentService.js';\nimport { workbenchInstantiationService } from '../../../../test/browser/workbenchTestServices.js';\nimport { TestExtensionService } from '../../../../test/common/workbenchTestServices.js';\n\nclass TestTerminalProfileService extends TerminalProfileService implements Partial<ITerminalProfileService> {\n\thasRefreshedProfiles: Promise<void> | undefined;\n\toverride refreshAvailableProfiles(): void {\n\t\tthis.hasRefreshedProfiles = this._refreshAvailableProfilesNow();\n\t}\n\trefreshAndAwaitAvailableProfiles(): Promise<void> {\n\t\tthis.refreshAvailableProfiles();\n\t\tif (!this.hasRefreshedProfiles) {\n\t\t\tthrow new Error('has not refreshed profiles yet');\n\t\t}\n\t\treturn this.hasRefreshedProfiles;\n\t}\n}\n\nclass MockTerminalProfileService implements Partial<ITerminalProfileService> {\n\thasRefreshedProfiles: Promise<void> | undefined;\n\t_defaultProfileName: string | undefined;\n\tavailableProfiles?: ITerminalProfile[] | undefined = [];\n\tcontributedProfiles?: IExtensionTerminalProfile[] | undefined = [];\n\tasync getPlatformKey(): Promise<string> {\n\t\treturn 'linux';\n\t}\n\tgetDefaultProfileName(): string | undefined {\n\t\treturn this._defaultProfileName;\n\t}\n\tsetProfiles(profiles: ITerminalProfile[], contributed: IExtensionTerminalProfile[]): void {\n\t\tthis.availableProfiles = profiles;\n\t\tthis.contributedProfiles = contributed;\n\t}\n\tsetDefaultProfileName(name: string): void {\n\t\tthis._defaultProfileName = name;\n\t}\n}\n\n\nclass MockQuickInputService implements Partial<IQuickInputService> {\n\t_pick: IProfileQuickPickItem = powershellPick;\n\tpick(picks: QuickPickInput<IProfileQuickPickItem>[] | Promise<QuickPickInput<IProfileQuickPickItem>[]>, options?: IPickOptions<IProfileQuickPickItem> & { canPickMany: true }, token?: CancellationToken): Promise<IProfileQuickPickItem[] | undefined>;\n\tpick(picks: QuickPickInput<IProfileQuickPickItem>[] | Promise<QuickPickInput<IProfileQuickPickItem>[]>, options?: IPickOptions<IProfileQuickPickItem> & { canPickMany: false }, token?: CancellationToken): Promise<IProfileQuickPickItem | undefined>;\n\tpick(picks: QuickPickInput<IProfileQuickPickItem>[] | Promise<QuickPickInput<IProfileQuickPickItem>[]>, options?: Omit<IPickOptions<IProfileQuickPickItem>, 'canPickMany'>, token?: CancellationToken): Promise<IProfileQuickPickItem | undefined>;\n\tasync pick(picks: any, options?: any, token?: any): Promise<IProfileQuickPickItem | IProfileQuickPickItem[] | undefined> {\n\t\tPromise.resolve(picks);\n\t\treturn this._pick;\n\t}\n\n\tsetPick(pick: IProfileQuickPickItem) {\n\t\tthis._pick = pick;\n\t}\n}\n\nclass TestTerminalProfileQuickpick extends TerminalProfileQuickpick {\n\n}\n\nclass TestTerminalExtensionService extends TestExtensionService {\n\treadonly _onDidChangeExtensions = new Emitter<void>();\n}\n\nclass TestTerminalContributionService implements ITerminalContributionService {\n\t_serviceBrand: undefined;\n\tterminalProfiles: readonly IExtensionTerminalProfile[] = [];\n\tsetProfiles(profiles: IExtensionTerminalProfile[]): void {\n\t\tthis.terminalProfiles = profiles;\n\t}\n}\n\nclass TestTerminalInstanceService implements Partial<ITerminalInstanceService> {\n\tprivate _profiles: Map<string, ITerminalProfile[]> = new Map();\n\tprivate _hasReturnedNone = true;\n\tasync getBackend(remoteAuthority: string | undefined): Promise<ITerminalBackend> {\n\t\treturn {\n\t\t\tgetProfiles: async () => {\n\t\t\t\tif (this._hasReturnedNone) {\n\t\t\t\t\treturn this._profiles.get(remoteAuthority ?? '') || [];\n\t\t\t\t} else {\n\t\t\t\t\tthis._hasReturnedNone = true;\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\t} satisfies Partial<ITerminalBackend> as any;\n\t}\n\tsetProfiles(remoteAuthority: string | undefined, profiles: ITerminalProfile[]) {\n\t\tthis._profiles.set(remoteAuthority ?? '', profiles);\n\t}\n\tsetReturnNone() {\n\t\tthis._hasReturnedNone = false;\n\t}\n}\n\nclass TestRemoteAgentService implements Partial<IRemoteAgentService> {\n\tprivate _os: OperatingSystem | undefined;\n\tsetEnvironment(os: OperatingSystem) {\n\t\tthis._os = os;\n\t}\n\tasync getEnvironment(): Promise<IRemoteAgentEnvironment | null> {\n\t\treturn { os: this._os } satisfies Partial<IRemoteAgentEnvironment> as any;\n\t}\n}\n\nconst defaultTerminalConfig: Partial<ITerminalConfiguration> = { profiles: { windows: {}, linux: {}, osx: {} } };\nlet powershellProfile = {\n\tprofileName: 'PowerShell',\n\tpath: 'C:\\\\Powershell.exe',\n\tisDefault: true,\n\ticon: Codicon.terminalPowershell\n};\nlet jsdebugProfile = {\n\textensionIdentifier: 'ms-vscode.js-debug-nightly',\n\ticon: 'debug',\n\tid: 'extension.js-debug.debugTerminal',\n\ttitle: 'JavaScript Debug Terminal'\n};\nconst powershellPick = { label: 'Powershell', profile: powershellProfile, profileName: powershellProfile.profileName };\nconst jsdebugPick = { label: 'Javascript Debug Terminal', profile: jsdebugProfile, profileName: jsdebugProfile.title };\n\nsuite('TerminalProfileService', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet configurationService: TestConfigurationService;\n\tlet terminalInstanceService: TestTerminalInstanceService;\n\tlet terminalProfileService: TestTerminalProfileService;\n\tlet remoteAgentService: TestRemoteAgentService;\n\tlet extensionService: TestTerminalExtensionService;\n\tlet environmentService: IWorkbenchEnvironmentService;\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(async () => {\n\t\tconfigurationService = new TestConfigurationService({\n\t\t\tfiles: {},\n\t\t\tterminal: {\n\t\t\t\tintegrated: defaultTerminalConfig\n\t\t\t}\n\t\t});\n\t\tinstantiationService = workbenchInstantiationService({\n\t\t\tconfigurationService: () => configurationService\n\t\t}, store);\n\t\tremoteAgentService = new TestRemoteAgentService();\n\t\tterminalInstanceService = new TestTerminalInstanceService();\n\t\textensionService = new TestTerminalExtensionService();\n\t\tenvironmentService = { remoteAuthority: undefined } satisfies Partial<IWorkbenchEnvironmentService> as any;\n\n\t\tconst themeService = new TestThemeService();\n\t\tconst terminalContributionService = new TestTerminalContributionService();\n\n\t\tinstantiationService.stub(IExtensionService, extensionService);\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tinstantiationService.stub(IRemoteAgentService, remoteAgentService);\n\t\tinstantiationService.stub(ITerminalContributionService, terminalContributionService);\n\t\tinstantiationService.stub(ITerminalInstanceService, terminalInstanceService);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\t\tinstantiationService.stub(IThemeService, themeService);\n\n\t\tterminalProfileService = store.add(instantiationService.createInstance(TestTerminalProfileService));\n\n\t\t//reset as these properties are changed in each test\n\t\tpowershellProfile = {\n\t\t\tprofileName: 'PowerShell',\n\t\t\tpath: 'C:\\\\Powershell.exe',\n\t\t\tisDefault: true,\n\t\t\ticon: Codicon.terminalPowershell\n\t\t};\n\t\tjsdebugProfile = {\n\t\t\textensionIdentifier: 'ms-vscode.js-debug-nightly',\n\t\t\ticon: 'debug',\n\t\t\tid: 'extension.js-debug.debugTerminal',\n\t\t\ttitle: 'JavaScript Debug Terminal'\n\t\t};\n\n\t\tterminalInstanceService.setProfiles(undefined, [powershellProfile]);\n\t\tterminalInstanceService.setProfiles('fakeremote', []);\n\t\tterminalContributionService.setProfiles([jsdebugProfile]);\n\t\tif (isWindows) {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Windows);\n\t\t} else if (isLinux) {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Linux);\n\t\t} else {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Macintosh);\n\t\t}\n\t\tconfigurationService.setUserConfiguration('terminal', { integrated: defaultTerminalConfig });\n\t});\n\n\tsuite('Contributed Profiles', () => {\n\t\ttest('should filter out contributed profiles set to null (Linux)', async () => {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Linux);\n\t\t\tawait configurationService.setUserConfiguration('terminal', {\n\t\t\t\tintegrated: {\n\t\t\t\t\tprofiles: {\n\t\t\t\t\t\tlinux: {\n\t\t\t\t\t\t\t'JavaScript Debug Terminal': null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true, source: ConfigurationTarget.USER } as any);\n\t\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, []);\n\t\t});\n\t\ttest('should filter out contributed profiles set to null (Windows)', async () => {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Windows);\n\t\t\tawait configurationService.setUserConfiguration('terminal', {\n\t\t\t\tintegrated: {\n\t\t\t\t\tprofiles: {\n\t\t\t\t\t\twindows: {\n\t\t\t\t\t\t\t'JavaScript Debug Terminal': null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true, source: ConfigurationTarget.USER } as any);\n\t\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, []);\n\t\t});\n\t\ttest('should filter out contributed profiles set to null (macOS)', async () => {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Macintosh);\n\t\t\tawait configurationService.setUserConfiguration('terminal', {\n\t\t\t\tintegrated: {\n\t\t\t\t\tprofiles: {\n\t\t\t\t\t\tosx: {\n\t\t\t\t\t\t\t'JavaScript Debug Terminal': null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true, source: ConfigurationTarget.USER } as any);\n\t\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, []);\n\t\t});\n\t\ttest('should include contributed profiles', async () => {\n\t\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t\t});\n\t});\n\n\ttest('should get profiles from remoteTerminalService when there is a remote authority', async () => {\n\t\tenvironmentService = { remoteAuthority: 'fakeremote' } satisfies Partial<IWorkbenchEnvironmentService> as any;\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\t\tterminalProfileService = store.add(instantiationService.createInstance(TestTerminalProfileService));\n\t\tawait terminalProfileService.hasRefreshedProfiles;\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, []);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t\tterminalInstanceService.setProfiles('fakeremote', [powershellProfile]);\n\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t});\n\n\ttest('should fire onDidChangeAvailableProfiles only when available profiles have changed via user config', async () => {\n\t\tpowershellProfile.icon = Codicon.lightBulb;\n\t\tlet calls: ITerminalProfile[][] = [];\n\t\tstore.add(terminalProfileService.onDidChangeAvailableProfiles(e => calls.push(e)));\n\t\tawait configurationService.setUserConfiguration('terminal', {\n\t\t\tintegrated: {\n\t\t\t\tprofiles: {\n\t\t\t\t\twindows: powershellProfile,\n\t\t\t\t\tlinux: powershellProfile,\n\t\t\t\t\tosx: powershellProfile\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tawait terminalProfileService.hasRefreshedProfiles;\n\t\tdeepStrictEqual(calls, [\n\t\t\t[powershellProfile]\n\t\t]);\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t\tcalls = [];\n\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\tdeepStrictEqual(calls, []);\n\t});\n\n\ttest('should fire onDidChangeAvailableProfiles when available or contributed profiles have changed via remote/localTerminalService', async () => {\n\t\tpowershellProfile.isDefault = false;\n\t\tterminalInstanceService.setProfiles(undefined, [powershellProfile]);\n\t\tconst calls: ITerminalProfile[][] = [];\n\t\tstore.add(terminalProfileService.onDidChangeAvailableProfiles(e => calls.push(e)));\n\t\tawait terminalProfileService.hasRefreshedProfiles;\n\t\tdeepStrictEqual(calls, [\n\t\t\t[powershellProfile]\n\t\t]);\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t});\n\n\ttest('should call refreshAvailableProfiles _onDidChangeExtensions', async () => {\n\t\textensionService._onDidChangeExtensions.fire();\n\t\tconst calls: ITerminalProfile[][] = [];\n\t\tstore.add(terminalProfileService.onDidChangeAvailableProfiles(e => calls.push(e)));\n\t\tawait terminalProfileService.hasRefreshedProfiles;\n\t\tdeepStrictEqual(calls, [\n\t\t\t[powershellProfile]\n\t\t]);\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t});\n\tsuite('Profiles Quickpick', () => {\n\t\tlet quickInputService: MockQuickInputService;\n\t\tlet mockTerminalProfileService: MockTerminalProfileService;\n\t\tlet terminalProfileQuickpick: TestTerminalProfileQuickpick;\n\t\tsetup(async () => {\n\t\t\tquickInputService = new MockQuickInputService();\n\t\t\tmockTerminalProfileService = new MockTerminalProfileService();\n\t\t\tinstantiationService.stub(IQuickInputService, quickInputService);\n\t\t\tinstantiationService.stub(ITerminalProfileService, mockTerminalProfileService);\n\t\t\tterminalProfileQuickpick = instantiationService.createInstance(TestTerminalProfileQuickpick);\n\t\t});\n\t\ttest('setDefault', async () => {\n\t\t\tpowershellProfile.isDefault = false;\n\t\t\tmockTerminalProfileService.setProfiles([powershellProfile], [jsdebugProfile]);\n\t\t\tmockTerminalProfileService.setDefaultProfileName(jsdebugProfile.title);\n\t\t\tconst result = await terminalProfileQuickpick.showAndGetResult('setDefault');\n\t\t\tdeepStrictEqual(result, powershellProfile.profileName);\n\t\t});\n\t\ttest('setDefault to contributed', async () => {\n\t\t\tmockTerminalProfileService.setDefaultProfileName(powershellProfile.profileName);\n\t\t\tquickInputService.setPick(jsdebugPick);\n\t\t\tconst result = await terminalProfileQuickpick.showAndGetResult('setDefault');\n\t\t\tconst expected = {\n\t\t\t\tconfig: {\n\t\t\t\t\textensionIdentifier: jsdebugProfile.extensionIdentifier,\n\t\t\t\t\tid: jsdebugProfile.id,\n\t\t\t\t\toptions: { color: undefined, icon: 'debug' },\n\t\t\t\t\ttitle: jsdebugProfile.title,\n\t\t\t\t},\n\t\t\t\tkeyMods: undefined\n\t\t\t};\n\t\t\tdeepStrictEqual(result, expected);\n\t\t});\n\n\t\ttest('createInstance', async () => {\n\t\t\tmockTerminalProfileService.setDefaultProfileName(powershellProfile.profileName);\n\t\t\tconst pick = { ...powershellPick, keyMods: { alt: true, ctrlCmd: false } };\n\t\t\tquickInputService.setPick(pick);\n\t\t\tconst result = await terminalProfileQuickpick.showAndGetResult('createInstance');\n\t\t\tdeepStrictEqual(result, { config: powershellProfile, keyMods: { alt: true, ctrlCmd: false } });\n\t\t});\n\n\t\ttest('createInstance with contributed', async () => {\n\t\t\tconst pick = { ...jsdebugPick, keyMods: { alt: true, ctrlCmd: false } };\n\t\t\tquickInputService.setPick(pick);\n\t\t\tconst result = await terminalProfileQuickpick.showAndGetResult('createInstance');\n\t\t\tconst expected = {\n\t\t\t\tconfig: {\n\t\t\t\t\textensionIdentifier: jsdebugProfile.extensionIdentifier,\n\t\t\t\t\tid: jsdebugProfile.id,\n\t\t\t\t\toptions: { color: undefined, icon: 'debug' },\n\t\t\t\t\ttitle: jsdebugProfile.title,\n\t\t\t\t},\n\t\t\t\tkeyMods: { alt: true, ctrlCmd: false }\n\t\t\t};\n\t\t\tdeepStrictEqual(result, expected);\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
