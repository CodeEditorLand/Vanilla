{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/test/browser/terminalProcessManager.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { strictEqual } from 'assert';\nimport { Event } from '../../../../../base/common/event.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { ITerminalChildProcess } from '../../../../../platform/terminal/common/terminal.js';\nimport { ITerminalInstanceService } from '../../browser/terminal.js';\nimport { TerminalProcessManager } from '../../browser/terminalProcessManager.js';\nimport { workbenchInstantiationService } from '../../../../test/browser/workbenchTestServices.js';\n\nclass TestTerminalChildProcess implements ITerminalChildProcess {\n\tid: number = 0;\n\tget capabilities() { return []; }\n\tconstructor(\n\t\treadonly shouldPersist: boolean\n\t) {\n\t}\n\tupdateProperty(property: any, value: any): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tonProcessOverrideDimensions?: Event<any> | undefined;\n\tonProcessResolvedShellLaunchConfig?: Event<any> | undefined;\n\tonDidChangeHasChildProcesses?: Event<any> | undefined;\n\n\tonDidChangeProperty = Event.None;\n\tonProcessData = Event.None;\n\tonProcessExit = Event.None;\n\tonProcessReady = Event.None;\n\tonProcessTitleChanged = Event.None;\n\tonProcessShellTypeChanged = Event.None;\n\tasync start(): Promise<undefined> { return undefined; }\n\tshutdown(immediate: boolean): void { }\n\tinput(data: string): void { }\n\tresize(cols: number, rows: number): void { }\n\tclearBuffer(): void { }\n\tacknowledgeDataEvent(charCount: number): void { }\n\tasync setUnicodeVersion(version: '6' | '11'): Promise<void> { }\n\tasync getInitialCwd(): Promise<string> { return ''; }\n\tasync getCwd(): Promise<string> { return ''; }\n\tasync processBinary(data: string): Promise<void> { }\n\trefreshProperty(property: any): Promise<any> { return Promise.resolve(''); }\n}\n\nclass TestTerminalInstanceService implements Partial<ITerminalInstanceService> {\n\tgetBackend() {\n\t\treturn {\n\t\t\tonPtyHostExit: Event.None,\n\t\t\tonPtyHostUnresponsive: Event.None,\n\t\t\tonPtyHostResponsive: Event.None,\n\t\t\tonPtyHostRestart: Event.None,\n\t\t\tonDidMoveWindowInstance: Event.None,\n\t\t\tonDidRequestDetach: Event.None,\n\t\t\tcreateProcess: (\n\t\t\t\tshellLaunchConfig: any,\n\t\t\t\tcwd: string,\n\t\t\t\tcols: number,\n\t\t\t\trows: number,\n\t\t\t\tunicodeVersion: '6' | '11',\n\t\t\t\tenv: any,\n\t\t\t\twindowsEnableConpty: boolean,\n\t\t\t\tshouldPersist: boolean\n\t\t\t) => new TestTerminalChildProcess(shouldPersist),\n\t\t\tgetLatency: () => Promise.resolve([])\n\t\t} as any;\n\t}\n}\n\nsuite('Workbench - TerminalProcessManager', () => {\n\tlet manager: TerminalProcessManager;\n\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, store);\n\t\tconst configurationService = instantiationService.get(IConfigurationService) as TestConfigurationService;\n\t\tawait configurationService.setUserConfiguration('editor', { fontFamily: 'foo' });\n\t\tawait configurationService.setUserConfiguration('terminal', {\n\t\t\tintegrated: {\n\t\t\t\tfontFamily: 'bar',\n\t\t\t\tenablePersistentSessions: true,\n\t\t\t\tshellIntegration: {\n\t\t\t\t\tenabled: false\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({\n\t\t\taffectsConfiguration: () => true,\n\t\t} as any);\n\t\tinstantiationService.stub(ITerminalInstanceService, new TestTerminalInstanceService());\n\n\t\tmanager = store.add(instantiationService.createInstance(TerminalProcessManager, 1, undefined, undefined, undefined));\n\t});\n\n\tsuite('process persistence', () => {\n\t\tsuite('local', () => {\n\t\t\ttest('regular terminal should persist', async () => {\n\t\t\t\tconst p = await manager.createProcess({\n\t\t\t\t}, 1, 1, false);\n\t\t\t\tstrictEqual(p, undefined);\n\t\t\t\tstrictEqual(manager.shouldPersist, true);\n\t\t\t});\n\t\t\ttest('task terminal should not persist', async () => {\n\t\t\t\tconst p = await manager.createProcess({\n\t\t\t\t\tisFeatureTerminal: true\n\t\t\t\t}, 1, 1, false);\n\t\t\t\tstrictEqual(p, undefined);\n\t\t\t\tstrictEqual(manager.shouldPersist, false);\n\t\t\t});\n\t\t});\n\t\tsuite('remote', () => {\n\t\t\tconst remoteCwd = URI.from({\n\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\tpath: 'test/cwd'\n\t\t\t});\n\n\t\t\ttest('regular terminal should persist', async () => {\n\t\t\t\tconst p = await manager.createProcess({\n\t\t\t\t\tcwd: remoteCwd\n\t\t\t\t}, 1, 1, false);\n\t\t\t\tstrictEqual(p, undefined);\n\t\t\t\tstrictEqual(manager.shouldPersist, true);\n\t\t\t});\n\t\t\ttest('task terminal should not persist', async () => {\n\t\t\t\tconst p = await manager.createProcess({\n\t\t\t\t\tisFeatureTerminal: true,\n\t\t\t\t\tcwd: remoteCwd\n\t\t\t\t}, 1, 1, false);\n\t\t\t\tstrictEqual(p, undefined);\n\t\t\t\tstrictEqual(manager.shouldPersist, false);\n\t\t\t});\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
