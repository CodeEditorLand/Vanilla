{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/test/common/terminalColorRegistry.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Extensions as ThemeingExtensions, IColorRegistry, ColorIdentifier } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { ansiColorIdentifiers, registerColors } from '../../common/terminalColorRegistry.js';\nimport { IColorTheme } from '../../../../../platform/theme/common/themeService.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { ColorScheme } from '../../../../../platform/theme/common/theme.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nregisterColors();\n\nconst themingRegistry = Registry.as<IColorRegistry>(ThemeingExtensions.ColorContribution);\nfunction getMockTheme(type: ColorScheme): IColorTheme {\n\tconst theme = {\n\t\tselector: '',\n\t\tlabel: '',\n\t\ttype: type,\n\t\tgetColor: (colorId: ColorIdentifier): Color | undefined => themingRegistry.resolveDefaultColor(colorId, theme),\n\t\tdefines: () => true,\n\t\tgetTokenStyleMetadata: () => undefined,\n\t\ttokenColorMap: [],\n\t\tsemanticHighlighting: false\n\t};\n\treturn theme;\n}\n\nsuite('Workbench - TerminalColorRegistry', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('hc colors', function () {\n\t\tconst theme = getMockTheme(ColorScheme.HIGH_CONTRAST_DARK);\n\t\tconst colors = ansiColorIdentifiers.map(colorId => Color.Format.CSS.formatHexA(theme.getColor(colorId)!, true));\n\n\t\tassert.deepStrictEqual(colors, [\n\t\t\t'#000000',\n\t\t\t'#cd0000',\n\t\t\t'#00cd00',\n\t\t\t'#cdcd00',\n\t\t\t'#0000ee',\n\t\t\t'#cd00cd',\n\t\t\t'#00cdcd',\n\t\t\t'#e5e5e5',\n\t\t\t'#7f7f7f',\n\t\t\t'#ff0000',\n\t\t\t'#00ff00',\n\t\t\t'#ffff00',\n\t\t\t'#5c5cff',\n\t\t\t'#ff00ff',\n\t\t\t'#00ffff',\n\t\t\t'#ffffff'\n\t\t], 'The high contrast terminal colors should be used when the hc theme is active');\n\n\t});\n\n\ttest('light colors', function () {\n\t\tconst theme = getMockTheme(ColorScheme.LIGHT);\n\t\tconst colors = ansiColorIdentifiers.map(colorId => Color.Format.CSS.formatHexA(theme.getColor(colorId)!, true));\n\n\t\tassert.deepStrictEqual(colors, [\n\t\t\t'#000000',\n\t\t\t'#cd3131',\n\t\t\t'#107c10',\n\t\t\t'#949800',\n\t\t\t'#0451a5',\n\t\t\t'#bc05bc',\n\t\t\t'#0598bc',\n\t\t\t'#555555',\n\t\t\t'#666666',\n\t\t\t'#cd3131',\n\t\t\t'#14ce14',\n\t\t\t'#b5ba00',\n\t\t\t'#0451a5',\n\t\t\t'#bc05bc',\n\t\t\t'#0598bc',\n\t\t\t'#a5a5a5'\n\t\t], 'The light terminal colors should be used when the light theme is active');\n\n\t});\n\n\ttest('dark colors', function () {\n\t\tconst theme = getMockTheme(ColorScheme.DARK);\n\t\tconst colors = ansiColorIdentifiers.map(colorId => Color.Format.CSS.formatHexA(theme.getColor(colorId)!, true));\n\n\t\tassert.deepStrictEqual(colors, [\n\t\t\t'#000000',\n\t\t\t'#cd3131',\n\t\t\t'#0dbc79',\n\t\t\t'#e5e510',\n\t\t\t'#2472c8',\n\t\t\t'#bc3fbc',\n\t\t\t'#11a8cd',\n\t\t\t'#e5e5e5',\n\t\t\t'#666666',\n\t\t\t'#f14c4c',\n\t\t\t'#23d18b',\n\t\t\t'#f5f543',\n\t\t\t'#3b8eea',\n\t\t\t'#d670d6',\n\t\t\t'#29b8db',\n\t\t\t'#e5e5e5'\n\t\t], 'The dark terminal colors should be used when a dark theme is active');\n\t});\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,cAAc,oBAAoB,gBAAgB,uBAAuB;AAClF,SAAS,gBAAgB;AACzB,SAAS,sBAAsB,sBAAsB;AACrD,SAAS,mBAAmB;AAC5B,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAC5B,SAAS,+CAA+C;AAExD,eAAe;AAEf,MAAM,kBAAkB,SAAS,GAAmB,mBAAmB,iBAAiB;AACxF,SAAS,aAAa,MAAgC;AACrD,QAAM,QAAQ;AAAA,IACb,UAAU;AAAA,IACV,OAAO;AAAA,IACP;AAAA,IACA,UAAU,wBAAC,YAAgD,gBAAgB,oBAAoB,SAAS,KAAK,GAAnG;AAAA,IACV,SAAS,6BAAM,MAAN;AAAA,IACT,uBAAuB,6BAAM,QAAN;AAAA,IACvB,eAAe,CAAC;AAAA,IAChB,sBAAsB;AAAA,EACvB;AACA,SAAO;AACR;AAZS;AAcT,MAAM,qCAAqC,MAAM;AAChD,0CAAwC;AAExC,OAAK,aAAa,WAAY;AAC7B,UAAM,QAAQ,aAAa,YAAY,kBAAkB;AACzD,UAAM,SAAS,qBAAqB,IAAI,aAAW,MAAM,OAAO,IAAI,WAAW,MAAM,SAAS,OAAO,GAAI,IAAI,CAAC;AAE9G,WAAO,gBAAgB,QAAQ;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,GAAG,8EAA8E;AAAA,EAElF,CAAC;AAED,OAAK,gBAAgB,WAAY;AAChC,UAAM,QAAQ,aAAa,YAAY,KAAK;AAC5C,UAAM,SAAS,qBAAqB,IAAI,aAAW,MAAM,OAAO,IAAI,WAAW,MAAM,SAAS,OAAO,GAAI,IAAI,CAAC;AAE9G,WAAO,gBAAgB,QAAQ;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,GAAG,yEAAyE;AAAA,EAE7E,CAAC;AAED,OAAK,eAAe,WAAY;AAC/B,UAAM,QAAQ,aAAa,YAAY,IAAI;AAC3C,UAAM,SAAS,qBAAqB,IAAI,aAAW,MAAM,OAAO,IAAI,WAAW,MAAM,SAAS,OAAO,GAAI,IAAI,CAAC;AAE9G,WAAO,gBAAgB,QAAQ;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,GAAG,qEAAqE;AAAA,EACzE,CAAC;AACF,CAAC;",
  "names": []
}
