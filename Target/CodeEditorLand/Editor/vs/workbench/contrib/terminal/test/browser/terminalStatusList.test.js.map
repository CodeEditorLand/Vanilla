{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/test/browser/terminalStatusList.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual, strictEqual } from 'assert';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport Severity from '../../../../../base/common/severity.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { spinningLoading } from '../../../../../platform/theme/common/iconRegistry.js';\nimport { TerminalStatusList } from '../../browser/terminalStatusList.js';\nimport { ITerminalStatus } from '../../common/terminal.js';\nimport { workbenchInstantiationService } from '../../../../test/browser/workbenchTestServices.js';\n\nfunction statusesEqual(list: TerminalStatusList, expected: [string, Severity][]) {\n\tdeepStrictEqual(list.statuses.map(e => [e.id, e.severity]), expected);\n}\n\nsuite('Workbench - TerminalStatusList', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\tlet list: TerminalStatusList;\n\n\tsetup(() => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, store);\n\t\tlist = store.add(instantiationService.createInstance(TerminalStatusList));\n\t});\n\n\ttest('primary', () => {\n\t\tstrictEqual(list.primary?.id, undefined);\n\t\tlist.add({ id: 'info1', severity: Severity.Info });\n\t\tstrictEqual(list.primary?.id, 'info1');\n\t\tlist.add({ id: 'warning1', severity: Severity.Warning });\n\t\tstrictEqual(list.primary?.id, 'warning1');\n\t\tlist.add({ id: 'info2', severity: Severity.Info });\n\t\tstrictEqual(list.primary?.id, 'warning1');\n\t\tlist.add({ id: 'warning2', severity: Severity.Warning });\n\t\tstrictEqual(list.primary?.id, 'warning2');\n\t\tlist.add({ id: 'info3', severity: Severity.Info });\n\t\tstrictEqual(list.primary?.id, 'warning2');\n\t\tlist.add({ id: 'error1', severity: Severity.Error });\n\t\tstrictEqual(list.primary?.id, 'error1');\n\t\tlist.add({ id: 'warning3', severity: Severity.Warning });\n\t\tstrictEqual(list.primary?.id, 'error1');\n\t\tlist.add({ id: 'error2', severity: Severity.Error });\n\t\tstrictEqual(list.primary?.id, 'error2');\n\t\tlist.remove('error1');\n\t\tstrictEqual(list.primary?.id, 'error2');\n\t\tlist.remove('error2');\n\t\tstrictEqual(list.primary?.id, 'warning3');\n\t});\n\n\ttest('statuses', () => {\n\t\tstrictEqual(list.statuses.length, 0);\n\t\tlist.add({ id: 'info', severity: Severity.Info });\n\t\tlist.add({ id: 'warning', severity: Severity.Warning });\n\t\tlist.add({ id: 'error', severity: Severity.Error });\n\t\tstrictEqual(list.statuses.length, 3);\n\t\tstatusesEqual(list, [\n\t\t\t['info', Severity.Info],\n\t\t\t['warning', Severity.Warning],\n\t\t\t['error', Severity.Error],\n\t\t]);\n\t\tlist.remove('info');\n\t\tlist.remove('warning');\n\t\tlist.remove('error');\n\t\tstrictEqual(list.statuses.length, 0);\n\t});\n\n\ttest('onDidAddStatus', async () => {\n\t\tconst result = await new Promise<ITerminalStatus>(r => {\n\t\t\tstore.add(list.onDidAddStatus(r));\n\t\t\tlist.add({ id: 'test', severity: Severity.Info });\n\t\t});\n\t\tdeepStrictEqual(result, { id: 'test', severity: Severity.Info });\n\t});\n\n\ttest('onDidRemoveStatus', async () => {\n\t\tconst result = await new Promise<ITerminalStatus>(r => {\n\t\t\tstore.add(list.onDidRemoveStatus(r));\n\t\t\tlist.add({ id: 'test', severity: Severity.Info });\n\t\t\tlist.remove('test');\n\t\t});\n\t\tdeepStrictEqual(result, { id: 'test', severity: Severity.Info });\n\t});\n\n\ttest('onDidChangePrimaryStatus', async () => {\n\t\tconst result = await new Promise<ITerminalStatus | undefined>(r => {\n\t\t\tstore.add(list.onDidChangePrimaryStatus(r));\n\t\t\tlist.add({ id: 'test', severity: Severity.Info });\n\t\t});\n\t\tdeepStrictEqual(result, { id: 'test', severity: Severity.Info });\n\t});\n\n\ttest('primary is not updated to status without an icon', async () => {\n\t\tlist.add({ id: 'test', severity: Severity.Info, icon: Codicon.check });\n\t\tlist.add({ id: 'warning', severity: Severity.Warning });\n\t\tdeepStrictEqual(list.primary, { id: 'test', severity: Severity.Info, icon: Codicon.check });\n\t});\n\n\ttest('add', () => {\n\t\tstatusesEqual(list, []);\n\t\tlist.add({ id: 'info', severity: Severity.Info });\n\t\tstatusesEqual(list, [\n\t\t\t['info', Severity.Info]\n\t\t]);\n\t\tlist.add({ id: 'warning', severity: Severity.Warning });\n\t\tstatusesEqual(list, [\n\t\t\t['info', Severity.Info],\n\t\t\t['warning', Severity.Warning]\n\t\t]);\n\t\tlist.add({ id: 'error', severity: Severity.Error });\n\t\tstatusesEqual(list, [\n\t\t\t['info', Severity.Info],\n\t\t\t['warning', Severity.Warning],\n\t\t\t['error', Severity.Error]\n\t\t]);\n\t});\n\n\ttest('add should remove animation', () => {\n\t\tstatusesEqual(list, []);\n\t\tlist.add({ id: 'info', severity: Severity.Info, icon: spinningLoading });\n\t\tstatusesEqual(list, [\n\t\t\t['info', Severity.Info]\n\t\t]);\n\t\tstrictEqual(list.statuses[0].icon!.id, Codicon.play.id, 'loading~spin should be converted to play');\n\t\tlist.add({ id: 'warning', severity: Severity.Warning, icon: ThemeIcon.modify(Codicon.zap, 'spin') });\n\t\tstatusesEqual(list, [\n\t\t\t['info', Severity.Info],\n\t\t\t['warning', Severity.Warning]\n\t\t]);\n\t\tstrictEqual(list.statuses[1].icon!.id, Codicon.zap.id, 'zap~spin should have animation removed only');\n\t});\n\n\ttest('add should fire onDidRemoveStatus if same status id with a different object reference was added', () => {\n\t\tconst eventCalls: string[] = [];\n\t\tstore.add(list.onDidAddStatus(() => eventCalls.push('add')));\n\t\tstore.add(list.onDidRemoveStatus(() => eventCalls.push('remove')));\n\t\tlist.add({ id: 'test', severity: Severity.Info });\n\t\tlist.add({ id: 'test', severity: Severity.Info });\n\t\tdeepStrictEqual(eventCalls, [\n\t\t\t'add',\n\t\t\t'remove',\n\t\t\t'add'\n\t\t]);\n\t});\n\n\ttest('remove', () => {\n\t\tlist.add({ id: 'info', severity: Severity.Info });\n\t\tlist.add({ id: 'warning', severity: Severity.Warning });\n\t\tlist.add({ id: 'error', severity: Severity.Error });\n\t\tstatusesEqual(list, [\n\t\t\t['info', Severity.Info],\n\t\t\t['warning', Severity.Warning],\n\t\t\t['error', Severity.Error]\n\t\t]);\n\t\tlist.remove('warning');\n\t\tstatusesEqual(list, [\n\t\t\t['info', Severity.Info],\n\t\t\t['error', Severity.Error]\n\t\t]);\n\t\tlist.remove('info');\n\t\tstatusesEqual(list, [\n\t\t\t['error', Severity.Error]\n\t\t]);\n\t\tlist.remove('error');\n\t\tstatusesEqual(list, []);\n\t});\n\n\ttest('toggle', () => {\n\t\tconst status = { id: 'info', severity: Severity.Info };\n\t\tlist.toggle(status, true);\n\t\tstatusesEqual(list, [\n\t\t\t['info', Severity.Info]\n\t\t]);\n\t\tlist.toggle(status, false);\n\t\tstatusesEqual(list, []);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
