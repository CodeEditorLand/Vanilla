{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/test/browser/xterm/decorationAddon.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDecoration, IDecorationOptions, Terminal as RawXtermTerminal } from '@xterm/xterm';\nimport { notEqual, strictEqual, throws } from 'assert';\nimport { importAMDNodeModule } from '../../../../../../amdX.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../../base/test/common/utils.js';\nimport { TestConfigurationService } from '../../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { ITerminalCommand, TerminalCapability } from '../../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { CommandDetectionCapability } from '../../../../../../platform/terminal/common/capabilities/commandDetectionCapability.js';\nimport { TerminalCapabilityStore } from '../../../../../../platform/terminal/common/capabilities/terminalCapabilityStore.js';\nimport { DecorationAddon } from '../../../browser/xterm/decorationAddon.js';\nimport { workbenchInstantiationService } from '../../../../../test/browser/workbenchTestServices.js';\n\nsuite('DecorationAddon', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet decorationAddon: DecorationAddon;\n\tlet xterm: RawXtermTerminal;\n\n\tsetup(async () => {\n\t\tconst TerminalCtor = (await importAMDNodeModule<typeof import('@xterm/xterm')>('@xterm/xterm', 'lib/xterm.js')).Terminal;\n\t\tclass TestTerminal extends TerminalCtor {\n\t\t\toverride registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n\t\t\t\tif (decorationOptions.marker.isDisposed) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst element = document.createElement('div');\n\t\t\t\treturn { marker: decorationOptions.marker, element, onDispose: () => { }, isDisposed: false, dispose: () => { }, onRender: (element: HTMLElement) => { return element; } } as unknown as IDecoration;\n\t\t\t}\n\t\t}\n\n\t\tconst instantiationService = workbenchInstantiationService({\n\t\t\tconfigurationService: () => new TestConfigurationService({\n\t\t\t\tfiles: {},\n\t\t\t\tworkbench: {\n\t\t\t\t\thover: { delay: 5 },\n\t\t\t\t},\n\t\t\t\tterminal: {\n\t\t\t\t\tintegrated: {\n\t\t\t\t\t\tshellIntegration: {\n\t\t\t\t\t\t\tdecorationsEnabled: 'both'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}, store);\n\t\txterm = store.add(new TestTerminal({\n\t\t\tallowProposedApi: true,\n\t\t\tcols: 80,\n\t\t\trows: 30\n\t\t}));\n\t\tconst capabilities = store.add(new TerminalCapabilityStore());\n\t\tcapabilities.add(TerminalCapability.CommandDetection, store.add(instantiationService.createInstance(CommandDetectionCapability, xterm)));\n\t\tdecorationAddon = store.add(instantiationService.createInstance(DecorationAddon, capabilities));\n\t\txterm.loadAddon(decorationAddon);\n\t});\n\n\tsuite('registerDecoration', () => {\n\t\ttest('should throw when command has no marker', async () => {\n\t\t\tthrows(() => decorationAddon.registerCommandDecoration({ command: 'cd src', timestamp: Date.now(), hasOutput: () => false } as ITerminalCommand));\n\t\t});\n\t\ttest('should return undefined when marker has been disposed of', async () => {\n\t\t\tconst marker = xterm.registerMarker(1);\n\t\t\tmarker?.dispose();\n\t\t\tstrictEqual(decorationAddon.registerCommandDecoration({ command: 'cd src', marker, timestamp: Date.now(), hasOutput: () => false } as ITerminalCommand), undefined);\n\t\t});\n\t\ttest('should return decoration when marker has not been disposed of', async () => {\n\t\t\tconst marker = xterm.registerMarker(2);\n\t\t\tnotEqual(decorationAddon.registerCommandDecoration({ command: 'cd src', marker, timestamp: Date.now(), hasOutput: () => false } as ITerminalCommand), undefined);\n\t\t});\n\t\ttest('should return decoration with mark properties', async () => {\n\t\t\tconst marker = xterm.registerMarker(2);\n\t\t\tnotEqual(decorationAddon.registerCommandDecoration(undefined, undefined, { marker }), undefined);\n\t\t});\n\t});\n});\n"],
  "mappings": ";;AAMA,SAAS,UAAU,aAAa,cAAc;AAC9C,SAAS,2BAA2B;AACpC,SAAS,+CAA+C;AACxD,SAAS,gCAAgC;AACzC,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,kCAAkC;AAC3C,SAAS,+BAA+B;AACxC,SAAS,uBAAuB;AAChC,SAAS,qCAAqC;AAE9C,MAAM,mBAAmB,MAAM;AAC9B,QAAM,QAAQ,wCAAwC;AAEtD,MAAI;AACJ,MAAI;AAEJ,QAAM,YAAY;AACjB,UAAM,gBAAgB,MAAM,oBAAmD,gBAAgB,cAAc,GAAG;AAAA,IAChH,MAAM,qBAAqB,aAAa;AAAA,MAxB1C,OAwB0C;AAAA;AAAA;AAAA,MAC9B,mBAAmB,mBAAgE;AAC3F,YAAI,kBAAkB,OAAO,YAAY;AACxC,iBAAO;AAAA,QACR;AACA,cAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,eAAO,EAAE,QAAQ,kBAAkB,QAAQ,SAAS,WAAW,6BAAM;AAAA,QAAE,GAAR,cAAW,YAAY,OAAO,SAAS,6BAAM;AAAA,QAAE,GAAR,YAAW,UAAU,wBAACA,aAAyB;AAAE,iBAAOA;AAAA,QAAS,GAA5C,YAA8C;AAAA,MAC1K;AAAA,IACD;AAEA,UAAM,uBAAuB,8BAA8B;AAAA,MAC1D,sBAAsB,6BAAM,IAAI,yBAAyB;AAAA,QACxD,OAAO,CAAC;AAAA,QACR,WAAW;AAAA,UACV,OAAO,EAAE,OAAO,EAAE;AAAA,QACnB;AAAA,QACA,UAAU;AAAA,UACT,YAAY;AAAA,YACX,kBAAkB;AAAA,cACjB,oBAAoB;AAAA,YACrB;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC,GAZqB;AAAA,IAavB,GAAG,KAAK;AACR,YAAQ,MAAM,IAAI,IAAI,aAAa;AAAA,MAClC,kBAAkB;AAAA,MAClB,MAAM;AAAA,MACN,MAAM;AAAA,IACP,CAAC,CAAC;AACF,UAAM,eAAe,MAAM,IAAI,IAAI,wBAAwB,CAAC;AAC5D,iBAAa,IAAI,mBAAmB,kBAAkB,MAAM,IAAI,qBAAqB,eAAe,4BAA4B,KAAK,CAAC,CAAC;AACvI,sBAAkB,MAAM,IAAI,qBAAqB,eAAe,iBAAiB,YAAY,CAAC;AAC9F,UAAM,UAAU,eAAe;AAAA,EAChC,CAAC;AAED,QAAM,sBAAsB,MAAM;AACjC,SAAK,2CAA2C,YAAY;AAC3D,aAAO,MAAM,gBAAgB,0BAA0B,EAAE,SAAS,UAAU,WAAW,KAAK,IAAI,GAAG,WAAW,6BAAM,OAAN,aAAY,CAAqB,CAAC;AAAA,IACjJ,CAAC;AACD,SAAK,4DAA4D,YAAY;AAC5E,YAAM,SAAS,MAAM,eAAe,CAAC;AACrC,cAAQ,QAAQ;AAChB,kBAAY,gBAAgB,0BAA0B,EAAE,SAAS,UAAU,QAAQ,WAAW,KAAK,IAAI,GAAG,WAAW,6BAAM,OAAN,aAAY,CAAqB,GAAG,MAAS;AAAA,IACnK,CAAC;AACD,SAAK,iEAAiE,YAAY;AACjF,YAAM,SAAS,MAAM,eAAe,CAAC;AACrC,eAAS,gBAAgB,0BAA0B,EAAE,SAAS,UAAU,QAAQ,WAAW,KAAK,IAAI,GAAG,WAAW,6BAAM,OAAN,aAAY,CAAqB,GAAG,MAAS;AAAA,IAChK,CAAC;AACD,SAAK,iDAAiD,YAAY;AACjE,YAAM,SAAS,MAAM,eAAe,CAAC;AACrC,eAAS,gBAAgB,0BAA0B,QAAW,QAAW,EAAE,OAAO,CAAC,GAAG,MAAS;AAAA,IAChG,CAAC;AAAA,EACF,CAAC;AACF,CAAC;",
  "names": ["element"]
}
