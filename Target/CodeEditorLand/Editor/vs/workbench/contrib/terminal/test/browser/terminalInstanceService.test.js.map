{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/test/browser/terminalInstanceService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual } from 'assert';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ITerminalProfile } from '../../../../../platform/terminal/common/terminal.js';\nimport { ITerminalInstanceService } from '../../browser/terminal.js';\nimport { TerminalInstanceService } from '../../browser/terminalInstanceService.js';\nimport { workbenchInstantiationService } from '../../../../test/browser/workbenchTestServices.js';\n\nsuite('Workbench - TerminalInstanceService', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet terminalInstanceService: ITerminalInstanceService;\n\n\tsetup(async () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, store);\n\t\tterminalInstanceService = store.add(instantiationService.createInstance(TerminalInstanceService));\n\t});\n\n\tsuite('convertProfileToShellLaunchConfig', () => {\n\t\ttest('should return an empty shell launch config when undefined is provided', () => {\n\t\t\tdeepStrictEqual(terminalInstanceService.convertProfileToShellLaunchConfig(), {});\n\t\t\tdeepStrictEqual(terminalInstanceService.convertProfileToShellLaunchConfig(undefined), {});\n\t\t});\n\t\ttest('should return the same shell launch config when provided', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({}),\n\t\t\t\t{}\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({ executable: '/foo' }),\n\t\t\t\t{ executable: '/foo' }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({ executable: '/foo', cwd: '/bar', args: ['a', 'b'] }),\n\t\t\t\t{ executable: '/foo', cwd: '/bar', args: ['a', 'b'] }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({ executable: '/foo' }, '/bar'),\n\t\t\t\t{ executable: '/foo', cwd: '/bar' }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({ executable: '/foo', cwd: '/bar' }, '/baz'),\n\t\t\t\t{ executable: '/foo', cwd: '/baz' }\n\t\t\t);\n\t\t});\n\t\ttest('should convert a provided profile to a shell launch config', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({\n\t\t\t\t\tprofileName: 'abc',\n\t\t\t\t\tpath: '/foo',\n\t\t\t\t\tisDefault: true\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\targs: undefined,\n\t\t\t\t\tcolor: undefined,\n\t\t\t\t\tcwd: undefined,\n\t\t\t\t\tenv: undefined,\n\t\t\t\t\texecutable: '/foo',\n\t\t\t\t\ticon: undefined,\n\t\t\t\t\tname: undefined\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst icon = URI.file('/icon');\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({\n\t\t\t\t\tprofileName: 'abc',\n\t\t\t\t\tpath: '/foo',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\targs: ['a', 'b'],\n\t\t\t\t\tcolor: 'color',\n\t\t\t\t\tenv: { test: 'TEST' },\n\t\t\t\t\ticon\n\t\t\t\t} as ITerminalProfile, '/bar'),\n\t\t\t\t{\n\t\t\t\t\targs: ['a', 'b'],\n\t\t\t\t\tcolor: 'color',\n\t\t\t\t\tcwd: '/bar',\n\t\t\t\t\tenv: { test: 'TEST' },\n\t\t\t\t\texecutable: '/foo',\n\t\t\t\t\ticon,\n\t\t\t\t\tname: undefined\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t\ttest('should respect overrideName in profile', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({\n\t\t\t\t\tprofileName: 'abc',\n\t\t\t\t\tpath: '/foo',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\toverrideName: true\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\targs: undefined,\n\t\t\t\t\tcolor: undefined,\n\t\t\t\t\tcwd: undefined,\n\t\t\t\t\tenv: undefined,\n\t\t\t\t\texecutable: '/foo',\n\t\t\t\t\ticon: undefined,\n\t\t\t\t\tname: 'abc'\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t});\n});\n"],
  "mappings": "AAKA,SAAS,uBAAuB;AAChC,SAAS,WAAW;AACpB,SAAS,+CAA+C;AACxD,SAAS,wBAAwB;AACjC,SAAS,gCAAgC;AACzC,SAAS,+BAA+B;AACxC,SAAS,qCAAqC;AAE9C,MAAM,uCAAuC,MAAM;AAClD,QAAM,QAAQ,wCAAwC;AAEtD,MAAI;AAEJ,QAAM,YAAY;AACjB,UAAM,uBAAuB,8BAA8B,QAAW,KAAK;AAC3E,8BAA0B,MAAM,IAAI,qBAAqB,eAAe,uBAAuB,CAAC;AAAA,EACjG,CAAC;AAED,QAAM,qCAAqC,MAAM;AAChD,SAAK,yEAAyE,MAAM;AACnF,sBAAgB,wBAAwB,kCAAkC,GAAG,CAAC,CAAC;AAC/E,sBAAgB,wBAAwB,kCAAkC,MAAS,GAAG,CAAC,CAAC;AAAA,IACzF,CAAC;AACD,SAAK,4DAA4D,MAAM;AACtE;AAAA,QACC,wBAAwB,kCAAkC,CAAC,CAAC;AAAA,QAC5D,CAAC;AAAA,MACF;AACA;AAAA,QACC,wBAAwB,kCAAkC,EAAE,YAAY,OAAO,CAAC;AAAA,QAChF,EAAE,YAAY,OAAO;AAAA,MACtB;AACA;AAAA,QACC,wBAAwB,kCAAkC,EAAE,YAAY,QAAQ,KAAK,QAAQ,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;AAAA,QAC/G,EAAE,YAAY,QAAQ,KAAK,QAAQ,MAAM,CAAC,KAAK,GAAG,EAAE;AAAA,MACrD;AACA;AAAA,QACC,wBAAwB,kCAAkC,EAAE,YAAY,OAAO,GAAG,MAAM;AAAA,QACxF,EAAE,YAAY,QAAQ,KAAK,OAAO;AAAA,MACnC;AACA;AAAA,QACC,wBAAwB,kCAAkC,EAAE,YAAY,QAAQ,KAAK,OAAO,GAAG,MAAM;AAAA,QACrG,EAAE,YAAY,QAAQ,KAAK,OAAO;AAAA,MACnC;AAAA,IACD,CAAC;AACD,SAAK,8DAA8D,MAAM;AACxE;AAAA,QACC,wBAAwB,kCAAkC;AAAA,UACzD,aAAa;AAAA,UACb,MAAM;AAAA,UACN,WAAW;AAAA,QACZ,CAAC;AAAA,QACD;AAAA,UACC,MAAM;AAAA,UACN,OAAO;AAAA,UACP,KAAK;AAAA,UACL,KAAK;AAAA,UACL,YAAY;AAAA,UACZ,MAAM;AAAA,UACN,MAAM;AAAA,QACP;AAAA,MACD;AACA,YAAM,OAAO,IAAI,KAAK,OAAO;AAC7B;AAAA,QACC,wBAAwB,kCAAkC;AAAA,UACzD,aAAa;AAAA,UACb,MAAM;AAAA,UACN,WAAW;AAAA,UACX,MAAM,CAAC,KAAK,GAAG;AAAA,UACf,OAAO;AAAA,UACP,KAAK,EAAE,MAAM,OAAO;AAAA,UACpB;AAAA,QACD,GAAuB,MAAM;AAAA,QAC7B;AAAA,UACC,MAAM,CAAC,KAAK,GAAG;AAAA,UACf,OAAO;AAAA,UACP,KAAK;AAAA,UACL,KAAK,EAAE,MAAM,OAAO;AAAA,UACpB,YAAY;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,QACP;AAAA,MACD;AAAA,IACD,CAAC;AACD,SAAK,0CAA0C,MAAM;AACpD;AAAA,QACC,wBAAwB,kCAAkC;AAAA,UACzD,aAAa;AAAA,UACb,MAAM;AAAA,UACN,WAAW;AAAA,UACX,cAAc;AAAA,QACf,CAAC;AAAA,QACD;AAAA,UACC,MAAM;AAAA,UACN,OAAO;AAAA,UACP,KAAK;AAAA,UACL,KAAK;AAAA,UACL,YAAY;AAAA,UACZ,MAAM;AAAA,UACN,MAAM;AAAA,QACP;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF,CAAC;AACF,CAAC;",
  "names": []
}
