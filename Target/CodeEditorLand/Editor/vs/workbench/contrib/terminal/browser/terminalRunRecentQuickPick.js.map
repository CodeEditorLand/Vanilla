{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalRunRecentQuickPick.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Toggle } from \"../../../../base/browser/ui/toggle/toggle.js\";\nimport { fromNow } from \"../../../../base/common/date.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\tOperatingSystem,\n\tisMacintosh,\n} from \"../../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport {\n\ttype ITextModelContentProvider,\n\tITextModelService,\n} from \"../../../../editor/common/services/resolverService.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tAccessibleViewProviderId,\n\tIAccessibleViewService,\n} from \"../../../../platform/accessibility/browser/accessibleView.js\";\nimport type { IContextKey } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { showWithPinnedItems } from \"../../../../platform/quickinput/browser/quickPickPin.js\";\nimport {\n\ttype IQuickInputButton,\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport {\n\ttype ITerminalCommand,\n\tTerminalCapability,\n} from \"../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport { collapseTildePath } from \"../../../../platform/terminal/common/terminalEnvironment.js\";\nimport {\n\tasCssVariable,\n\tinputActiveOptionBackground,\n\tinputActiveOptionBorder,\n\tinputActiveOptionForeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tgetCommandHistory,\n\tgetDirectoryHistory,\n\tgetShellFileHistory,\n} from \"../common/history.js\";\nimport { TerminalStorageKeys } from \"../common/terminalStorageKeys.js\";\nimport { terminalStrings } from \"../common/terminalStrings.js\";\nimport type { ITerminalInstance } from \"./terminal.js\";\nimport {\n\tcommandHistoryFuzzySearchIcon,\n\tcommandHistoryOutputIcon,\n\tcommandHistoryRemoveIcon,\n} from \"./terminalIcons.js\";\n\nexport async function showRunRecentQuickPick(\n\taccessor: ServicesAccessor,\n\tinstance: ITerminalInstance,\n\tterminalInRunCommandPicker: IContextKey<boolean>,\n\ttype: \"command\" | \"cwd\",\n\tfilterMode?: \"fuzzy\" | \"contiguous\",\n\tvalue?: string,\n): Promise<void> {\n\tif (!instance.xterm) {\n\t\treturn;\n\t}\n\n\tconst editorService = accessor.get(IEditorService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst quickInputService = accessor.get(IQuickInputService);\n\tconst storageService = accessor.get(IStorageService);\n\tconst accessibleViewService = accessor.get(IAccessibleViewService);\n\n\tconst runRecentStorageKey = `${TerminalStorageKeys.PinnedRecentCommandsPrefix}.${instance.shellType}`;\n\tlet placeholder: string;\n\ttype Item = IQuickPickItem & {\n\t\tcommand?: ITerminalCommand;\n\t\trawLabel: string;\n\t};\n\tlet items: (\n\t\t| Item\n\t\t| (IQuickPickItem & { rawLabel: string })\n\t\t| IQuickPickSeparator\n\t)[] = [];\n\tconst commandMap: Set<string> = new Set();\n\n\tconst removeFromCommandHistoryButton: IQuickInputButton = {\n\t\ticonClass: ThemeIcon.asClassName(commandHistoryRemoveIcon),\n\t\ttooltip: localize(\"removeCommand\", \"Remove from Command History\"),\n\t};\n\n\tconst commandOutputButton: IQuickInputButton = {\n\t\ticonClass: ThemeIcon.asClassName(commandHistoryOutputIcon),\n\t\ttooltip: localize(\"viewCommandOutput\", \"View Command Output\"),\n\t\talwaysVisible: false,\n\t};\n\n\tif (type === \"command\") {\n\t\tplaceholder = isMacintosh\n\t\t\t? localize(\n\t\t\t\t\t\"selectRecentCommandMac\",\n\t\t\t\t\t\"Select a command to run (hold Option-key to edit the command)\",\n\t\t\t\t)\n\t\t\t: localize(\n\t\t\t\t\t\"selectRecentCommand\",\n\t\t\t\t\t\"Select a command to run (hold Alt-key to edit the command)\",\n\t\t\t\t);\n\t\tconst cmdDetection = instance.capabilities.get(\n\t\t\tTerminalCapability.CommandDetection,\n\t\t);\n\t\tconst commands = cmdDetection?.commands;\n\t\t// Current session history\n\t\tconst executingCommand = cmdDetection?.executingCommand;\n\t\tif (executingCommand) {\n\t\t\tcommandMap.add(executingCommand);\n\t\t}\n\t\tfunction formatLabel(label: string) {\n\t\t\treturn (\n\t\t\t\tlabel\n\t\t\t\t\t// Replace new lines with \"enter\" symbol\n\t\t\t\t\t.replace(/\\r?\\n/g, \"\\u23CE\")\n\t\t\t\t\t// Replace 3 or more spaces with midline horizontal ellipsis which looks similar\n\t\t\t\t\t// to whitespace in the editor\n\t\t\t\t\t.replace(/\\s\\s\\s+/g, \"\\u22EF\")\n\t\t\t);\n\t\t}\n\t\tif (commands && commands.length > 0) {\n\t\t\tfor (const entry of commands) {\n\t\t\t\t// Trim off any whitespace and/or line endings, replace new lines with the\n\t\t\t\t// Downwards Arrow with Corner Leftwards symbol\n\t\t\t\tconst label = entry.command.trim();\n\t\t\t\tif (label.length === 0 || commandMap.has(label)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet description = collapseTildePath(\n\t\t\t\t\tentry.cwd,\n\t\t\t\t\tinstance.userHome,\n\t\t\t\t\tinstance.os === OperatingSystem.Windows ? \"\\\\\" : \"/\",\n\t\t\t\t);\n\t\t\t\tif (entry.exitCode) {\n\t\t\t\t\t// Since you cannot get the last command's exit code on pwsh, just whether it failed\n\t\t\t\t\t// or not, -1 is treated specially as simply failed\n\t\t\t\t\tif (entry.exitCode === -1) {\n\t\t\t\t\t\tdescription += \" failed\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdescription += ` exitCode: ${entry.exitCode}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdescription = description.trim();\n\t\t\t\tconst buttons: IQuickInputButton[] = [commandOutputButton];\n\t\t\t\t// Merge consecutive commands\n\t\t\t\tconst lastItem =\n\t\t\t\t\titems.length > 0 ? items[items.length - 1] : undefined;\n\t\t\t\tif (\n\t\t\t\t\tlastItem?.type !== \"separator\" &&\n\t\t\t\t\tlastItem?.label === label\n\t\t\t\t) {\n\t\t\t\t\tlastItem.id = entry.timestamp.toString();\n\t\t\t\t\tlastItem.description = description;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\titems.push({\n\t\t\t\t\tlabel: formatLabel(label),\n\t\t\t\t\trawLabel: label,\n\t\t\t\t\tdescription,\n\t\t\t\t\tid: entry.timestamp.toString(),\n\t\t\t\t\tcommand: entry,\n\t\t\t\t\tbuttons: entry.hasOutput() ? buttons : undefined,\n\t\t\t\t});\n\t\t\t\tcommandMap.add(label);\n\t\t\t}\n\t\t\titems = items.reverse();\n\t\t}\n\t\tif (executingCommand) {\n\t\t\titems.unshift({\n\t\t\t\tlabel: formatLabel(executingCommand),\n\t\t\t\trawLabel: executingCommand,\n\t\t\t\tdescription: cmdDetection.cwd,\n\t\t\t});\n\t\t}\n\t\tif (items.length > 0) {\n\t\t\titems.unshift({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: terminalStrings.currentSessionCategory,\n\t\t\t});\n\t\t}\n\n\t\t// Gather previous session history\n\t\tconst history = instantiationService.invokeFunction(getCommandHistory);\n\t\tconst previousSessionItems: (IQuickPickItem & { rawLabel: string })[] =\n\t\t\t[];\n\t\tfor (const [label, info] of history.entries) {\n\t\t\t// Only add previous session item if it's not in this session\n\t\t\tif (\n\t\t\t\t!commandMap.has(label) &&\n\t\t\t\tinfo.shellType === instance.shellType\n\t\t\t) {\n\t\t\t\tpreviousSessionItems.unshift({\n\t\t\t\t\tlabel: formatLabel(label),\n\t\t\t\t\trawLabel: label,\n\t\t\t\t\tbuttons: [removeFromCommandHistoryButton],\n\t\t\t\t});\n\t\t\t\tcommandMap.add(label);\n\t\t\t}\n\t\t}\n\n\t\tif (previousSessionItems.length > 0) {\n\t\t\titems.push(\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: terminalStrings.previousSessionCategory,\n\t\t\t\t},\n\t\t\t\t...previousSessionItems,\n\t\t\t);\n\t\t}\n\n\t\t// Gather shell file history\n\t\tconst shellFileHistory = await instantiationService.invokeFunction(\n\t\t\tgetShellFileHistory,\n\t\t\tinstance.shellType,\n\t\t);\n\t\tconst dedupedShellFileItems: (IQuickPickItem & { rawLabel: string })[] =\n\t\t\t[];\n\t\tfor (const label of shellFileHistory) {\n\t\t\tif (!commandMap.has(label)) {\n\t\t\t\tdedupedShellFileItems.unshift({\n\t\t\t\t\tlabel: formatLabel(label),\n\t\t\t\t\trawLabel: label,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (dedupedShellFileItems.length > 0) {\n\t\t\titems.push(\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"shellFileHistoryCategory\",\n\t\t\t\t\t\t\"{0} history\",\n\t\t\t\t\t\tinstance.shellType,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t...dedupedShellFileItems,\n\t\t\t);\n\t\t}\n\t} else {\n\t\tplaceholder = isMacintosh\n\t\t\t? localize(\n\t\t\t\t\t\"selectRecentDirectoryMac\",\n\t\t\t\t\t\"Select a directory to go to (hold Option-key to edit the command)\",\n\t\t\t\t)\n\t\t\t: localize(\n\t\t\t\t\t\"selectRecentDirectory\",\n\t\t\t\t\t\"Select a directory to go to (hold Alt-key to edit the command)\",\n\t\t\t\t);\n\t\tconst cwds =\n\t\t\tinstance.capabilities.get(TerminalCapability.CwdDetection)?.cwds ||\n\t\t\t[];\n\t\tif (cwds && cwds.length > 0) {\n\t\t\tfor (const label of cwds) {\n\t\t\t\titems.push({ label, rawLabel: label });\n\t\t\t}\n\t\t\titems = items.reverse();\n\t\t\titems.unshift({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: terminalStrings.currentSessionCategory,\n\t\t\t});\n\t\t}\n\n\t\t// Gather previous session history\n\t\tconst history =\n\t\t\tinstantiationService.invokeFunction(getDirectoryHistory);\n\t\tconst previousSessionItems: (IQuickPickItem & { rawLabel: string })[] =\n\t\t\t[];\n\t\t// Only add previous session item if it's not in this session and it matches the remote authority\n\t\tfor (const [label, info] of history.entries) {\n\t\t\tif (\n\t\t\t\t(info === null ||\n\t\t\t\t\tinfo.remoteAuthority === instance.remoteAuthority) &&\n\t\t\t\t!cwds.includes(label)\n\t\t\t) {\n\t\t\t\tpreviousSessionItems.unshift({\n\t\t\t\t\tlabel,\n\t\t\t\t\trawLabel: label,\n\t\t\t\t\tbuttons: [removeFromCommandHistoryButton],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (previousSessionItems.length > 0) {\n\t\t\titems.push(\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: terminalStrings.previousSessionCategory,\n\t\t\t\t},\n\t\t\t\t...previousSessionItems,\n\t\t\t);\n\t\t}\n\t}\n\tif (items.length === 0) {\n\t\treturn;\n\t}\n\tconst disposables = new DisposableStore();\n\tconst fuzzySearchToggle = disposables.add(\n\t\tnew Toggle({\n\t\t\ttitle: \"Fuzzy search\",\n\t\t\ticon: commandHistoryFuzzySearchIcon,\n\t\t\tisChecked: filterMode === \"fuzzy\",\n\t\t\tinputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n\t\t\tinputActiveOptionForeground: asCssVariable(\n\t\t\t\tinputActiveOptionForeground,\n\t\t\t),\n\t\t\tinputActiveOptionBackground: asCssVariable(\n\t\t\t\tinputActiveOptionBackground,\n\t\t\t),\n\t\t}),\n\t);\n\tdisposables.add(\n\t\tfuzzySearchToggle.onChange(() => {\n\t\t\tinstantiationService.invokeFunction(\n\t\t\t\tshowRunRecentQuickPick,\n\t\t\t\tinstance,\n\t\t\t\tterminalInRunCommandPicker,\n\t\t\t\ttype,\n\t\t\t\tfuzzySearchToggle.checked ? \"fuzzy\" : \"contiguous\",\n\t\t\t\tquickPick.value,\n\t\t\t);\n\t\t}),\n\t);\n\tconst outputProvider = disposables.add(\n\t\tinstantiationService.createInstance(TerminalOutputProvider),\n\t);\n\tconst quickPick = disposables.add(\n\t\tquickInputService.createQuickPick<\n\t\t\tItem | (IQuickPickItem & { rawLabel: string })\n\t\t>({ useSeparators: true }),\n\t);\n\tconst originalItems = items;\n\tquickPick.items = [...originalItems];\n\tquickPick.sortByLabel = false;\n\tquickPick.placeholder = placeholder;\n\tquickPick.matchOnLabelMode = filterMode || \"contiguous\";\n\tquickPick.toggles = [fuzzySearchToggle];\n\tdisposables.add(\n\t\tquickPick.onDidTriggerItemButton(async (e) => {\n\t\t\tif (e.button === removeFromCommandHistoryButton) {\n\t\t\t\tif (type === \"command\") {\n\t\t\t\t\tinstantiationService\n\t\t\t\t\t\t.invokeFunction(getCommandHistory)\n\t\t\t\t\t\t?.remove(e.item.label);\n\t\t\t\t} else {\n\t\t\t\t\tinstantiationService\n\t\t\t\t\t\t.invokeFunction(getDirectoryHistory)\n\t\t\t\t\t\t?.remove(e.item.label);\n\t\t\t\t}\n\t\t\t} else if (e.button === commandOutputButton) {\n\t\t\t\tconst selectedCommand = (e.item as Item).command;\n\t\t\t\tconst output = selectedCommand?.getOutput();\n\t\t\t\tif (output && selectedCommand?.command) {\n\t\t\t\t\tconst textContent = await outputProvider.provideTextContent(\n\t\t\t\t\t\tURI.from({\n\t\t\t\t\t\t\tscheme: TerminalOutputProvider.scheme,\n\t\t\t\t\t\t\tpath: `${selectedCommand.command}... ${fromNow(selectedCommand.timestamp, true)}`,\n\t\t\t\t\t\t\tfragment: output,\n\t\t\t\t\t\t\tquery: `terminal-output-${selectedCommand.timestamp}-${instance.instanceId}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tif (textContent) {\n\t\t\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\t\t\tresource: textContent.uri,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait instantiationService.invokeFunction(\n\t\t\t\tshowRunRecentQuickPick,\n\t\t\t\tinstance,\n\t\t\t\tterminalInRunCommandPicker,\n\t\t\t\ttype,\n\t\t\t\tfilterMode,\n\t\t\t\tvalue,\n\t\t\t);\n\t\t}),\n\t);\n\tdisposables.add(\n\t\tquickPick.onDidChangeValue(async (value) => {\n\t\t\tif (!value) {\n\t\t\t\tawait instantiationService.invokeFunction(\n\t\t\t\t\tshowRunRecentQuickPick,\n\t\t\t\t\tinstance,\n\t\t\t\t\tterminalInRunCommandPicker,\n\t\t\t\t\ttype,\n\t\t\t\t\tfilterMode,\n\t\t\t\t\tvalue,\n\t\t\t\t);\n\t\t\t}\n\t\t}),\n\t);\n\tlet terminalScrollStateSaved = false;\n\tfunction restoreScrollState() {\n\t\tterminalScrollStateSaved = false;\n\t\tinstance.xterm?.markTracker.restoreScrollState();\n\t\tinstance.xterm?.markTracker.clear();\n\t}\n\tdisposables.add(\n\t\tquickPick.onDidChangeActive(async () => {\n\t\t\tconst xterm = instance.xterm;\n\t\t\tif (!xterm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst [item] = quickPick.activeItems;\n\t\t\tif (!item) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\"command\" in item && item.command && item.command.marker) {\n\t\t\t\tif (!terminalScrollStateSaved) {\n\t\t\t\t\txterm.markTracker.saveScrollState();\n\t\t\t\t\tterminalScrollStateSaved = true;\n\t\t\t\t}\n\t\t\t\tconst promptRowCount = item.command.getPromptRowCount();\n\t\t\t\tconst commandRowCount = item.command.getCommandRowCount();\n\t\t\t\txterm.markTracker.revealRange({\n\t\t\t\t\tstart: {\n\t\t\t\t\t\tx: 1,\n\t\t\t\t\t\ty: item.command.marker.line - (promptRowCount - 1) + 1,\n\t\t\t\t\t},\n\t\t\t\t\tend: {\n\t\t\t\t\t\tx: instance.cols,\n\t\t\t\t\t\ty: item.command.marker.line + (commandRowCount - 1) + 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trestoreScrollState();\n\t\t\t}\n\t\t}),\n\t);\n\tdisposables.add(\n\t\tquickPick.onDidAccept(async () => {\n\t\t\tconst result = quickPick.activeItems[0];\n\t\t\tlet text: string;\n\t\t\tif (type === \"cwd\") {\n\t\t\t\ttext = `cd ${await instance.preparePathForShell(result.rawLabel)}`;\n\t\t\t} else {\n\t\t\t\t// command\n\t\t\t\ttext = result.rawLabel;\n\t\t\t}\n\t\t\tquickPick.hide();\n\t\t\tinstance.runCommand(text, !quickPick.keyMods.alt);\n\t\t\tif (quickPick.keyMods.alt) {\n\t\t\t\tinstance.focus();\n\t\t\t}\n\t\t\trestoreScrollState();\n\t\t}),\n\t);\n\tdisposables.add(quickPick.onDidHide(() => restoreScrollState()));\n\tif (value) {\n\t\tquickPick.value = value;\n\t}\n\treturn new Promise<void>((r) => {\n\t\tterminalInRunCommandPicker.set(true);\n\t\tdisposables.add(\n\t\t\tshowWithPinnedItems(\n\t\t\t\tstorageService,\n\t\t\t\trunRecentStorageKey,\n\t\t\t\tquickPick,\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tquickPick.onDidHide(() => {\n\t\t\t\tterminalInRunCommandPicker.set(false);\n\t\t\t\taccessibleViewService.showLastProvider(\n\t\t\t\t\tAccessibleViewProviderId.Terminal,\n\t\t\t\t);\n\t\t\t\tr();\n\t\t\t\tdisposables.dispose();\n\t\t\t}),\n\t\t);\n\t});\n}\n\nclass TerminalOutputProvider\n\textends Disposable\n\timplements ITextModelContentProvider\n{\n\tstatic scheme = \"TERMINAL_OUTPUT\";\n\n\tconstructor(\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\ttextModelResolverService.registerTextModelContentProvider(\n\t\t\t\tTerminalOutputProvider.scheme,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this._modelService.getModel(resource);\n\t\tif (existing && !existing.isDisposed()) {\n\t\t\treturn existing;\n\t\t}\n\n\t\treturn this._modelService.createModel(\n\t\t\tresource.fragment,\n\t\t\tnull,\n\t\t\tresource,\n\t\t\tfalse,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["formatLabel", "value"]
}
