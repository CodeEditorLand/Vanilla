import{StandardMouseEvent as p}from"../../../../base/browser/mouseEvent.js";import{ActionRunner as d}from"../../../../base/common/actions.js";import{asArray as u}from"../../../../base/common/arrays.js";import{MarshalledId as l}from"../../../../base/common/marshallingIds.js";import{createAndFillInContextMenuActions as f}from"../../../../platform/actions/browser/menuEntryActionViewItem.js";class a{instanceId;constructor(e){this.instanceId=e.instanceId}toJSON(){return{$mid:l.TerminalContext,instanceId:this.instanceId}}}class A extends d{async runAction(e,n){if(Array.isArray(n)&&n.every(o=>o instanceof a)){await e.run(n?.[0],n);return}return super.runAction(e,n)}}function w(t,e,n,o,s,i){const c=new p(t,e),r=[];f(o,{shouldForwardArgs:!0},r),i&&r.push(...i);const m=n?u(n).map(I=>new a(I)):[];s.showContextMenu({actionRunner:new A,getAnchor:()=>c,getActions:()=>r,getActionsContext:()=>m})}export{a as InstanceContext,A as TerminalContextActionRunner,w as openContextMenu};
