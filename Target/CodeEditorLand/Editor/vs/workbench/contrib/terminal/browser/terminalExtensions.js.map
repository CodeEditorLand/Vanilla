{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalExtensions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tBrandedService,\n\tIConstructorSignature,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport type {\n\tITerminalProcessInfo,\n\tITerminalProcessManager,\n} from \"../common/terminal.js\";\nimport type {\n\tIDetachedTerminalInstance,\n\tITerminalContribution,\n\tITerminalInstance,\n} from \"./terminal.js\";\nimport type { TerminalWidgetManager } from \"./widgets/widgetManager.js\";\n\n/** Constructor compatible with full terminal instances, is assignable to {@link DetachedCompatibleTerminalContributionCtor} */\nexport type TerminalContributionCtor = IConstructorSignature<\n\tITerminalContribution,\n\t[ITerminalInstance, ITerminalProcessManager, TerminalWidgetManager]\n>;\n/** Constructor compatible with detached terminals */\nexport type DetachedCompatibleTerminalContributionCtor = IConstructorSignature<\n\tITerminalContribution,\n\t[IDetachedTerminalInstance, ITerminalProcessInfo, TerminalWidgetManager]\n>;\n\nexport type ITerminalContributionDescription = { readonly id: string } & (\n\t| {\n\t\t\treadonly canRunInDetachedTerminals: false;\n\t\t\treadonly ctor: TerminalContributionCtor;\n\t  }\n\t| {\n\t\t\treadonly canRunInDetachedTerminals: true;\n\t\t\treadonly ctor: DetachedCompatibleTerminalContributionCtor;\n\t  }\n);\n\nexport function registerTerminalContribution<Services extends BrandedService[]>(\n\tid: string,\n\tctor: {\n\t\tnew (\n\t\t\tinstance: ITerminalInstance,\n\t\t\tprocessManager: ITerminalProcessManager,\n\t\t\twidgetManager: TerminalWidgetManager,\n\t\t\t...services: Services\n\t\t): ITerminalContribution;\n\t},\n\tcanRunInDetachedTerminals?: false,\n): void;\nexport function registerTerminalContribution<Services extends BrandedService[]>(\n\tid: string,\n\tctor: {\n\t\tnew (\n\t\t\tinstance: ITerminalInstance,\n\t\t\tprocessManager: ITerminalProcessInfo,\n\t\t\twidgetManager: TerminalWidgetManager,\n\t\t\t...services: Services\n\t\t): ITerminalContribution;\n\t},\n\tcanRunInDetachedTerminals: true,\n): void;\nexport function registerTerminalContribution<Services extends BrandedService[]>(\n\tid: string,\n\tctor: {\n\t\tnew (\n\t\t\tinstance: ITerminalInstance,\n\t\t\tprocessManager: ITerminalProcessManager,\n\t\t\twidgetManager: TerminalWidgetManager,\n\t\t\t...services: Services\n\t\t): ITerminalContribution;\n\t},\n\tcanRunInDetachedTerminals = false,\n): void {\n\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\tTerminalContributionRegistry.INSTANCE.registerTerminalContribution({\n\t\tid,\n\t\tctor,\n\t\tcanRunInDetachedTerminals,\n\t} as ITerminalContributionDescription);\n}\n\nexport namespace TerminalExtensionsRegistry {\n\texport function getTerminalContributions(): ITerminalContributionDescription[] {\n\t\treturn TerminalContributionRegistry.INSTANCE.getTerminalContributions();\n\t}\n}\n\nclass TerminalContributionRegistry {\n\tpublic static readonly INSTANCE = new TerminalContributionRegistry();\n\n\tprivate readonly _terminalContributions: ITerminalContributionDescription[] =\n\t\t[];\n\n\tconstructor() {}\n\n\tpublic registerTerminalContribution(\n\t\tdescription: ITerminalContributionDescription,\n\t): void {\n\t\tthis._terminalContributions.push(description);\n\t}\n\n\tpublic getTerminalContributions(): ITerminalContributionDescription[] {\n\t\treturn this._terminalContributions.slice(0);\n\t}\n}\n\nenum Extensions {\n\tTerminalContributions = \"terminal.contributions\",\n}\n\nRegistry.add(\n\tExtensions.TerminalContributions,\n\tTerminalContributionRegistry.INSTANCE,\n);\n"],
  "mappings": ";;AASA,SAAS,gBAAgB;AA0DlB,SAAS,6BACf,IACA,MAQA,4BAA4B,OACrB;AAEP,+BAA6B,SAAS,6BAA6B;AAAA,IAClE;AAAA,IACA;AAAA,IACA;AAAA,EACD,CAAqC;AACtC;AAlBgB;AAoBT,IAAU;AAAA,CAAV,CAAUA,gCAAV;AACC,WAAS,2BAA+D;AAC9E,WAAO,6BAA6B,SAAS,yBAAyB;AAAA,EACvE;AAFO,EAAAA,4BAAS;AAAA;AAAA,GADA;AAMjB,MAAM,6BAA6B;AAAA,EA7FnC,OA6FmC;AAAA;AAAA;AAAA,EAClC,OAAuB,WAAW,IAAI,6BAA6B;AAAA,EAElD,yBAChB,CAAC;AAAA,EAEF,cAAc;AAAA,EAAC;AAAA,EAER,6BACN,aACO;AACP,SAAK,uBAAuB,KAAK,WAAW;AAAA,EAC7C;AAAA,EAEO,2BAA+D;AACrE,WAAO,KAAK,uBAAuB,MAAM,CAAC;AAAA,EAC3C;AACD;AAEA,IAAK,aAAL,kBAAKC,gBAAL;AACC,EAAAA,YAAA,2BAAwB;AADpB,SAAAA;AAAA,GAAA;AAIL,SAAS;AAAA,EACR;AAAA,EACA,6BAA6B;AAC9B;",
  "names": ["TerminalExtensionsRegistry", "Extensions"]
}
