{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { IActionViewItem } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action, IAction } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { DropdownWithPrimaryActionViewItem } from '../../../../platform/actions/browser/dropdownWithPrimaryActionViewItem.js';\nimport { IMenu, IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { EditorPane } from '../../../browser/parts/editor/editorPane.js';\nimport { IEditorOpenContext } from '../../../common/editor.js';\nimport { ITerminalConfigurationService, ITerminalEditorService, ITerminalService, terminalEditorId } from './terminal.js';\nimport { TerminalEditorInput } from './terminalEditorInput.js';\nimport { getTerminalActionBarArgs } from './terminalMenus.js';\nimport { ITerminalProfileResolverService, ITerminalProfileService, TerminalCommandId } from '../common/terminal.js';\nimport { IEditorGroup } from '../../../services/editor/common/editorGroupsService.js';\nimport { openContextMenu } from './terminalContextMenu.js';\nimport { ACTIVE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { IWorkbenchLayoutService, Parts } from '../../../services/layout/browser/layoutService.js';\nimport { IBaseActionViewItemOptions } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\n\nexport class TerminalEditor extends EditorPane {\n\n\tprivate _editorInstanceElement: HTMLElement | undefined;\n\tprivate _overflowGuardElement: HTMLElement | undefined;\n\n\tprivate _editorInput?: TerminalEditorInput = undefined;\n\n\tprivate _lastDimension?: dom.Dimension;\n\n\tprivate readonly _dropdownMenu: IMenu;\n\n\tprivate readonly _instanceMenu: IMenu;\n\n\tprivate _cancelContextMenu: boolean = false;\n\n\tprivate readonly _disposableStore = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ITerminalEditorService private readonly _terminalEditorService: ITerminalEditorService,\n\t\t@ITerminalProfileResolverService private readonly _terminalProfileResolverService: ITerminalProfileResolverService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@ITerminalConfigurationService private readonly _terminalConfigurationService: ITerminalConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@ITerminalProfileService private readonly _terminalProfileService: ITerminalProfileService,\n\t\t@IWorkbenchLayoutService private readonly _workbenchLayoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(terminalEditorId, group, telemetryService, themeService, storageService);\n\t\tthis._dropdownMenu = this._register(menuService.createMenu(MenuId.TerminalNewDropdownContext, contextKeyService));\n\t\tthis._instanceMenu = this._register(menuService.createMenu(MenuId.TerminalInstanceContext, contextKeyService));\n\t}\n\n\toverride async setInput(newInput: TerminalEditorInput, options: IEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken) {\n\t\tthis._editorInput?.terminalInstance?.detachFromElement();\n\t\tthis._editorInput = newInput;\n\t\tawait super.setInput(newInput, options, context, token);\n\t\tthis._editorInput.terminalInstance?.attachToElement(this._overflowGuardElement!);\n\t\tif (this._lastDimension) {\n\t\t\tthis.layout(this._lastDimension);\n\t\t}\n\t\tthis._editorInput.terminalInstance?.setVisible(this.isVisible() && this._workbenchLayoutService.isVisible(Parts.EDITOR_PART, this.window));\n\t\tif (this._editorInput.terminalInstance) {\n\t\t\t// since the editor does not monitor focus changes, for ex. between the terminal\n\t\t\t// panel and the editors, this is needed so that the active instance gets set\n\t\t\t// when focus changes between them.\n\t\t\tthis._register(this._editorInput.terminalInstance.onDidFocus(() => this._setActiveInstance()));\n\t\t\tthis._editorInput.setCopyLaunchConfig(this._editorInput.terminalInstance.shellLaunchConfig);\n\t\t}\n\t}\n\n\toverride clearInput(): void {\n\t\tsuper.clearInput();\n\t\tif (this._overflowGuardElement && this._editorInput?.terminalInstance?.domElement.parentElement === this._overflowGuardElement) {\n\t\t\tthis._editorInput.terminalInstance?.detachFromElement();\n\t\t}\n\t\tthis._editorInput = undefined;\n\t}\n\n\tprivate _setActiveInstance(): void {\n\t\tif (!this._editorInput?.terminalInstance) {\n\t\t\treturn;\n\t\t}\n\t\tthis._terminalEditorService.setActiveInstance(this._editorInput.terminalInstance);\n\t}\n\n\toverride focus() {\n\t\tsuper.focus();\n\n\t\tthis._editorInput?.terminalInstance?.focus(true);\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tthis._editorInstanceElement = parent;\n\t\tthis._overflowGuardElement = dom.$('.terminal-overflow-guard.terminal-editor');\n\t\tthis._editorInstanceElement.appendChild(this._overflowGuardElement);\n\t\tthis._registerListeners();\n\t}\n\n\tprivate _registerListeners(): void {\n\t\tif (!this._editorInstanceElement) {\n\t\t\treturn;\n\t\t}\n\t\tthis._register(dom.addDisposableListener(this._editorInstanceElement, 'mousedown', async (event: MouseEvent) => {\n\t\t\tconst terminal = this._terminalEditorService.activeInstance;\n\t\t\tif (this._terminalEditorService.instances.length > 0 && terminal) {\n\t\t\t\tconst result = await terminal.handleMouseEvent(event, this._instanceMenu);\n\t\t\t\tif (typeof result === 'object' && result.cancelContextMenu) {\n\t\t\t\t\tthis._cancelContextMenu = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(this._editorInstanceElement, 'contextmenu', (event: MouseEvent) => {\n\t\t\tconst rightClickBehavior = this._terminalConfigurationService.config.rightClickBehavior;\n\t\t\tif (rightClickBehavior === 'nothing' && !event.shiftKey) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\tthis._cancelContextMenu = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t\tif (!this._cancelContextMenu && rightClickBehavior !== 'copyPaste' && rightClickBehavior !== 'paste') {\n\t\t\t\t\tif (!this._cancelContextMenu) {\n\t\t\t\t\t\topenContextMenu(this.window, event, this._editorInput?.terminalInstance, this._instanceMenu, this._contextMenuService);\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\tthis._cancelContextMenu = false;\n\t\t\t\t}\n\t\t}));\n\t}\n\n\tlayout(dimension: dom.Dimension): void {\n\t\tconst instance = this._editorInput?.terminalInstance;\n\t\tif (instance) {\n\t\t\tinstance.attachToElement(this._overflowGuardElement!);\n\t\t\tinstance.layout(dimension);\n\t\t}\n\t\tthis._lastDimension = dimension;\n\t}\n\n\toverride setVisible(visible: boolean): void {\n\t\tsuper.setVisible(visible);\n\t\tthis._editorInput?.terminalInstance?.setVisible(visible && this._workbenchLayoutService.isVisible(Parts.EDITOR_PART, this.window));\n\t}\n\n\toverride getActionViewItem(action: IAction, options: IBaseActionViewItemOptions): IActionViewItem | undefined {\n\t\tswitch (action.id) {\n\t\t\tcase TerminalCommandId.CreateTerminalEditor: {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\tconst location = { viewColumn: ACTIVE_GROUP };\n\t\t\t\t\tconst actions = getTerminalActionBarArgs(location, this._terminalProfileService.availableProfiles, this._getDefaultProfileName(), this._terminalProfileService.contributedProfiles, this._terminalService, this._dropdownMenu);\n\t\t\t\t\tthis._registerDisposableActions(actions.dropdownAction, actions.dropdownMenuActions);\n\t\t\t\t\tconst button = this._instantiationService.createInstance(DropdownWithPrimaryActionViewItem, action, actions.dropdownAction, actions.dropdownMenuActions, actions.className, this._contextMenuService, { hoverDelegate: options.hoverDelegate });\n\t\t\t\t\treturn button;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn super.getActionViewItem(action, options);\n\t}\n\n\t/**\n\t * Actions might be of type Action (disposable) or Separator or SubmenuAction, which don't extend Disposable\n\t */\n\tprivate _registerDisposableActions(dropdownAction: IAction, dropdownMenuActions: IAction[]): void {\n\t\tthis._disposableStore.clear();\n\t\tif (dropdownAction instanceof Action) {\n\t\t\tthis._disposableStore.add(dropdownAction);\n\t\t}\n\t\tdropdownMenuActions.filter(a => a instanceof Action).forEach(a => this._disposableStore.add(a));\n\t}\n\n\tprivate _getDefaultProfileName(): string {\n\t\tlet defaultProfileName;\n\t\ttry {\n\t\t\tdefaultProfileName = this._terminalProfileService.getDefaultProfileName();\n\t\t} catch (e) {\n\t\t\tdefaultProfileName = this._terminalProfileResolverService.defaultProfileName;\n\t\t}\n\t\treturn defaultProfileName!;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,uBAAuB;AAChC,SAAS,QAAQ,eAAe;AAChC,SAAS,yBAAyB;AAClC,SAAS,yCAAyC;AAClD,SAAS,OAAO,cAAc,QAAQ,sBAAsB;AAC5D,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,SAAS,sBAAsB;AAC/B,SAAS,6BAA6B;AACtC,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B;AACnC,SAAS,+BAA+B,wBAAwB,kBAAkB,wBAAwB;AAC1G,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,iCAAiC,yBAAyB,yBAAyB;AAC5F,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,oBAAoB;AAC7B,SAAS,yBAAyB,aAAa;AAC/C,SAAS,kCAAkC;AAC3C,SAAS,uBAAuB;AAEzB,IAAM,iBAAN,cAA6B,WAAW;AAAA,EAiB9C,YACC,OACmB,kBACJ,cACE,gBACwB,wBACS,iCACf,kBACa,+BAC5B,mBACN,aAC0B,uBACF,qBACI,yBACA,yBACzC;AACD,UAAM,kBAAkB,OAAO,kBAAkB,cAAc,cAAc;AAXpC;AACS;AACf;AACa;AAGR;AACF;AACI;AACA;AAG1C,SAAK,gBAAgB,KAAK,UAAU,YAAY,WAAW,OAAO,4BAA4B,iBAAiB,CAAC;AAChH,SAAK,gBAAgB,KAAK,UAAU,YAAY,WAAW,OAAO,yBAAyB,iBAAiB,CAAC;AAAA,EAC9G;AAAA,EAnED,OA+B+C;AAAA;AAAA;AAAA,EAEtC;AAAA,EACA;AAAA,EAEA,eAAqC;AAAA,EAErC;AAAA,EAES;AAAA,EAEA;AAAA,EAET,qBAA8B;AAAA,EAErB,mBAAmB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAAA,EAuBxE,MAAe,SAAS,UAA+B,SAAqC,SAA6B,OAA0B;AAClJ,SAAK,cAAc,kBAAkB,kBAAkB;AACvD,SAAK,eAAe;AACpB,UAAM,MAAM,SAAS,UAAU,SAAS,SAAS,KAAK;AACtD,SAAK,aAAa,kBAAkB,gBAAgB,KAAK,qBAAsB;AAC/E,QAAI,KAAK,gBAAgB;AACxB,WAAK,OAAO,KAAK,cAAc;AAAA,IAChC;AACA,SAAK,aAAa,kBAAkB,WAAW,KAAK,UAAU,KAAK,KAAK,wBAAwB,UAAU,MAAM,aAAa,KAAK,MAAM,CAAC;AACzI,QAAI,KAAK,aAAa,kBAAkB;AAIvC,WAAK,UAAU,KAAK,aAAa,iBAAiB,WAAW,MAAM,KAAK,mBAAmB,CAAC,CAAC;AAC7F,WAAK,aAAa,oBAAoB,KAAK,aAAa,iBAAiB,iBAAiB;AAAA,IAC3F;AAAA,EACD;AAAA,EAES,aAAmB;AAC3B,UAAM,WAAW;AACjB,QAAI,KAAK,yBAAyB,KAAK,cAAc,kBAAkB,WAAW,kBAAkB,KAAK,uBAAuB;AAC/H,WAAK,aAAa,kBAAkB,kBAAkB;AAAA,IACvD;AACA,SAAK,eAAe;AAAA,EACrB;AAAA,EAEQ,qBAA2B;AAClC,QAAI,CAAC,KAAK,cAAc,kBAAkB;AACzC;AAAA,IACD;AACA,SAAK,uBAAuB,kBAAkB,KAAK,aAAa,gBAAgB;AAAA,EACjF;AAAA,EAES,QAAQ;AAChB,UAAM,MAAM;AAEZ,SAAK,cAAc,kBAAkB,MAAM,IAAI;AAAA,EAChD;AAAA;AAAA,EAGU,aAAa,QAA2B;AACjD,SAAK,yBAAyB;AAC9B,SAAK,wBAAwB,IAAI,EAAE,0CAA0C;AAC7E,SAAK,uBAAuB,YAAY,KAAK,qBAAqB;AAClE,SAAK,mBAAmB;AAAA,EACzB;AAAA,EAEQ,qBAA2B;AAClC,QAAI,CAAC,KAAK,wBAAwB;AACjC;AAAA,IACD;AACA,SAAK,UAAU,IAAI,sBAAsB,KAAK,wBAAwB,aAAa,OAAO,UAAsB;AAC/G,YAAM,WAAW,KAAK,uBAAuB;AAC7C,UAAI,KAAK,uBAAuB,UAAU,SAAS,KAAK,UAAU;AACjE,cAAM,SAAS,MAAM,SAAS,iBAAiB,OAAO,KAAK,aAAa;AACxE,YAAI,OAAO,WAAW,YAAY,OAAO,mBAAmB;AAC3D,eAAK,qBAAqB;AAAA,QAC3B;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,IAAI,sBAAsB,KAAK,wBAAwB,eAAe,CAAC,UAAsB;AAC3G,YAAM,qBAAqB,KAAK,8BAA8B,OAAO;AACrE,UAAI,uBAAuB,aAAa,CAAC,MAAM,UAAU;AACxD,cAAM,eAAe;AACrB,cAAM,yBAAyB;AAC/B,aAAK,qBAAqB;AAC1B;AAAA,MACD,WAEK,CAAC,KAAK,sBAAsB,uBAAuB,eAAe,uBAAuB,SAAS;AACrG,YAAI,CAAC,KAAK,oBAAoB;AAC7B,0BAAgB,KAAK,QAAQ,OAAO,KAAK,cAAc,kBAAkB,KAAK,eAAe,KAAK,mBAAmB;AAAA,QACtH;AACA,cAAM,eAAe;AACrB,cAAM,yBAAyB;AAC/B,aAAK,qBAAqB;AAAA,MAC3B;AAAA,IACF,CAAC,CAAC;AAAA,EACH;AAAA,EAEA,OAAO,WAAgC;AACtC,UAAM,WAAW,KAAK,cAAc;AACpC,QAAI,UAAU;AACb,eAAS,gBAAgB,KAAK,qBAAsB;AACpD,eAAS,OAAO,SAAS;AAAA,IAC1B;AACA,SAAK,iBAAiB;AAAA,EACvB;AAAA,EAES,WAAW,SAAwB;AAC3C,UAAM,WAAW,OAAO;AACxB,SAAK,cAAc,kBAAkB,WAAW,WAAW,KAAK,wBAAwB,UAAU,MAAM,aAAa,KAAK,MAAM,CAAC;AAAA,EAClI;AAAA,EAES,kBAAkB,QAAiB,SAAkE;AAC7G,YAAQ,OAAO,IAAI;AAAA,MAClB,KAAK,kBAAkB,sBAAsB;AAC5C,YAAI,kBAAkB,gBAAgB;AACrC,gBAAM,WAAW,EAAE,YAAY,aAAa;AAC5C,gBAAM,UAAU,yBAAyB,UAAU,KAAK,wBAAwB,mBAAmB,KAAK,uBAAuB,GAAG,KAAK,wBAAwB,qBAAqB,KAAK,kBAAkB,KAAK,aAAa;AAC7N,eAAK,2BAA2B,QAAQ,gBAAgB,QAAQ,mBAAmB;AACnF,gBAAM,SAAS,KAAK,sBAAsB,eAAe,mCAAmC,QAAQ,QAAQ,gBAAgB,QAAQ,qBAAqB,QAAQ,WAAW,KAAK,qBAAqB,EAAE,eAAe,QAAQ,cAAc,CAAC;AAC9O,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AACA,WAAO,MAAM,kBAAkB,QAAQ,OAAO;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAKQ,2BAA2B,gBAAyB,qBAAsC;AACjG,SAAK,iBAAiB,MAAM;AAC5B,QAAI,0BAA0B,QAAQ;AACrC,WAAK,iBAAiB,IAAI,cAAc;AAAA,IACzC;AACA,wBAAoB,OAAO,OAAK,aAAa,MAAM,EAAE,QAAQ,OAAK,KAAK,iBAAiB,IAAI,CAAC,CAAC;AAAA,EAC/F;AAAA,EAEQ,yBAAiC;AACxC,QAAI;AACJ,QAAI;AACH,2BAAqB,KAAK,wBAAwB,sBAAsB;AAAA,IACzE,SAAS,GAAG;AACX,2BAAqB,KAAK,gCAAgC;AAAA,IAC3D;AACA,WAAO;AAAA,EACR;AACD;AAvKa,iBAAN;AAAA,EAmBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA/BU;",
  "names": []
}
