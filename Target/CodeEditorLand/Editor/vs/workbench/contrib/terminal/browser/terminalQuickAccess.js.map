{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IPickerQuickAccessItem, PickerQuickAccessProvider, TriggerAction } from '../../../../platform/quickinput/browser/pickerQuickAccess.js';\nimport { matchesFuzzy } from '../../../../base/common/filters.js';\nimport { ITerminalEditorService, ITerminalGroupService, ITerminalInstance, ITerminalService } from './terminal.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { TerminalCommandId } from '../common/terminal.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { killTerminalIcon, renameTerminalIcon } from './terminalIcons.js';\nimport { getColorClass, getIconId, getUriClasses } from './terminalIcon.js';\nimport { terminalStrings } from '../common/terminalStrings.js';\nimport { TerminalLocation } from '../../../../platform/terminal/common/terminal.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nlet terminalPicks: Array<IPickerQuickAccessItem | IQuickPickSeparator> = [];\n\nexport class TerminalQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\n\tstatic PREFIX = 'term ';\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@ITerminalEditorService private readonly _terminalEditorService: ITerminalEditorService,\n\t\t@ITerminalGroupService private readonly _terminalGroupService: ITerminalGroupService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper(TerminalQuickAccessProvider.PREFIX, { canAcceptInBackground: true });\n\t}\n\tprotected _getPicks(filter: string): Array<IPickerQuickAccessItem | IQuickPickSeparator> {\n\t\tterminalPicks = [];\n\t\tterminalPicks.push({ type: 'separator', label: 'panel' });\n\t\tconst terminalGroups = this._terminalGroupService.groups;\n\t\tfor (let groupIndex = 0; groupIndex < terminalGroups.length; groupIndex++) {\n\t\t\tconst terminalGroup = terminalGroups[groupIndex];\n\t\t\tfor (let terminalIndex = 0; terminalIndex < terminalGroup.terminalInstances.length; terminalIndex++) {\n\t\t\t\tconst terminal = terminalGroup.terminalInstances[terminalIndex];\n\t\t\t\tconst pick = this._createPick(terminal, terminalIndex, filter, { groupIndex, groupSize: terminalGroup.terminalInstances.length });\n\t\t\t\tif (pick) {\n\t\t\t\t\tterminalPicks.push(pick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (terminalPicks.length > 0) {\n\t\t\tterminalPicks.push({ type: 'separator', label: 'editor' });\n\t\t}\n\n\t\tconst terminalEditors = this._terminalEditorService.instances;\n\t\tfor (let editorIndex = 0; editorIndex < terminalEditors.length; editorIndex++) {\n\t\t\tconst term = terminalEditors[editorIndex];\n\t\t\tterm.target = TerminalLocation.Editor;\n\t\t\tconst pick = this._createPick(term, editorIndex, filter);\n\t\t\tif (pick) {\n\t\t\t\tterminalPicks.push(pick);\n\t\t\t}\n\t\t}\n\n\t\tif (terminalPicks.length > 0) {\n\t\t\tterminalPicks.push({ type: 'separator' });\n\t\t}\n\n\t\tconst createTerminalLabel = localize(\"workbench.action.terminal.newplus\", \"Create New Terminal\");\n\t\tterminalPicks.push({\n\t\t\tlabel: `$(plus) ${createTerminalLabel}`,\n\t\t\tariaLabel: createTerminalLabel,\n\t\t\taccept: () => this._commandService.executeCommand(TerminalCommandId.New)\n\t\t});\n\t\tconst createWithProfileLabel = localize(\"workbench.action.terminal.newWithProfilePlus\", \"Create New Terminal With Profile...\");\n\t\tterminalPicks.push({\n\t\t\tlabel: `$(plus) ${createWithProfileLabel}`,\n\t\t\tariaLabel: createWithProfileLabel,\n\t\t\taccept: () => this._commandService.executeCommand(TerminalCommandId.NewWithProfile)\n\t\t});\n\t\treturn terminalPicks;\n\t}\n\n\tprivate _createPick(terminal: ITerminalInstance, terminalIndex: number, filter: string, groupInfo?: { groupIndex: number; groupSize: number }): IPickerQuickAccessItem | undefined {\n\t\tconst iconId = this._instantiationService.invokeFunction(getIconId, terminal);\n\t\tconst index = groupInfo\n\t\t\t? (groupInfo.groupSize > 1\n\t\t\t\t? `${groupInfo.groupIndex + 1}.${terminalIndex + 1}`\n\t\t\t\t: `${groupInfo.groupIndex + 1}`)\n\t\t\t: `${terminalIndex + 1}`;\n\t\tconst label = `$(${iconId}) ${index}: ${terminal.title}`;\n\t\tconst iconClasses: string[] = [];\n\t\tconst colorClass = getColorClass(terminal);\n\t\tif (colorClass) {\n\t\t\ticonClasses.push(colorClass);\n\t\t}\n\t\tconst uriClasses = getUriClasses(terminal, this._themeService.getColorTheme().type);\n\t\tif (uriClasses) {\n\t\t\ticonClasses.push(...uriClasses);\n\t\t}\n\t\tconst highlights = matchesFuzzy(filter, label, true);\n\t\tif (highlights) {\n\t\t\treturn {\n\t\t\t\tlabel,\n\t\t\t\tdescription: terminal.description,\n\t\t\t\thighlights: { label: highlights },\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(renameTerminalIcon),\n\t\t\t\t\t\ttooltip: localize('renameTerminal', \"Rename Terminal\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(killTerminalIcon),\n\t\t\t\t\t\ttooltip: terminalStrings.kill.value\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\ticonClasses,\n\t\t\t\ttrigger: buttonIndex => {\n\t\t\t\t\tswitch (buttonIndex) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tthis._commandService.executeCommand(TerminalCommandId.Rename, terminal);\n\t\t\t\t\t\t\treturn TriggerAction.NO_ACTION;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tthis._terminalService.safeDisposeTerminal(terminal);\n\t\t\t\t\t\t\treturn TriggerAction.REMOVE_ITEM;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TriggerAction.NO_ACTION;\n\t\t\t\t},\n\t\t\t\taccept: (keyMod, event) => {\n\t\t\t\t\tif (terminal.target === TerminalLocation.Editor) {\n\t\t\t\t\t\tconst existingEditors = this._editorService.findEditors(terminal.resource);\n\t\t\t\t\t\tthis._terminalEditorService.openEditor(terminal, { viewColumn: existingEditors?.[0].groupId });\n\t\t\t\t\t\tthis._terminalEditorService.setActiveInstance(terminal);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._terminalGroupService.showPanel(!event.inBackground);\n\t\t\t\t\t\tthis._terminalGroupService.setActiveInstance(terminal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
