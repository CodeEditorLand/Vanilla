{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype IProcessProperty,\n\ttype IProcessPropertyMap,\n\ttype IProcessReadyEvent,\n\ttype IShellLaunchConfig,\n\ttype ITerminalChildProcess,\n\ttype ITerminalDimensions,\n\ttype ITerminalLaunchError,\n\tProcessPropertyType,\n} from \"../../../../platform/terminal/common/terminal.js\";\nimport type { ITerminalProcessExtHostProxy } from \"../common/terminal.js\";\nimport { ITerminalService } from \"./terminal.js\";\n\nexport class TerminalProcessExtHostProxy\n\textends Disposable\n\timplements ITerminalChildProcess, ITerminalProcessExtHostProxy\n{\n\treadonly id = 0;\n\treadonly shouldPersist = false;\n\n\tprivate readonly _onProcessData = this._register(new Emitter<string>());\n\treadonly onProcessData: Event<string> = this._onProcessData.event;\n\tprivate readonly _onProcessReady = this._register(\n\t\tnew Emitter<IProcessReadyEvent>(),\n\t);\n\tget onProcessReady(): Event<IProcessReadyEvent> {\n\t\treturn this._onProcessReady.event;\n\t}\n\n\tprivate readonly _onStart = this._register(new Emitter<void>());\n\treadonly onStart: Event<void> = this._onStart.event;\n\tprivate readonly _onInput = this._register(new Emitter<string>());\n\treadonly onInput: Event<string> = this._onInput.event;\n\tprivate readonly _onBinary = this._register(new Emitter<string>());\n\treadonly onBinary: Event<string> = this._onBinary.event;\n\tprivate readonly _onResize: Emitter<{ cols: number; rows: number }> =\n\t\tthis._register(new Emitter<{ cols: number; rows: number }>());\n\treadonly onResize: Event<{ cols: number; rows: number }> =\n\t\tthis._onResize.event;\n\tprivate readonly _onAcknowledgeDataEvent = this._register(\n\t\tnew Emitter<number>(),\n\t);\n\treadonly onAcknowledgeDataEvent: Event<number> =\n\t\tthis._onAcknowledgeDataEvent.event;\n\tprivate readonly _onShutdown = this._register(new Emitter<boolean>());\n\treadonly onShutdown: Event<boolean> = this._onShutdown.event;\n\tprivate readonly _onRequestInitialCwd = this._register(new Emitter<void>());\n\treadonly onRequestInitialCwd: Event<void> = this._onRequestInitialCwd.event;\n\tprivate readonly _onRequestCwd = this._register(new Emitter<void>());\n\treadonly onRequestCwd: Event<void> = this._onRequestCwd.event;\n\tprivate readonly _onDidChangeProperty = this._register(\n\t\tnew Emitter<IProcessProperty<any>>(),\n\t);\n\treadonly onDidChangeProperty = this._onDidChangeProperty.event;\n\tprivate readonly _onProcessExit = this._register(\n\t\tnew Emitter<number | undefined>(),\n\t);\n\treadonly onProcessExit: Event<number | undefined> =\n\t\tthis._onProcessExit.event;\n\n\tprivate _pendingInitialCwdRequests: ((\n\t\tvalue: string | PromiseLike<string>,\n\t) => void)[] = [];\n\tprivate _pendingCwdRequests: ((\n\t\tvalue: string | PromiseLike<string>,\n\t) => void)[] = [];\n\n\tconstructor(\n\t\tpublic instanceId: number,\n\t\tprivate _cols: number,\n\t\tprivate _rows: number,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t) {\n\t\tsuper();\n\t}\n\n\temitData(data: string): void {\n\t\tthis._onProcessData.fire(data);\n\t}\n\n\temitTitle(title: string): void {\n\t\tthis._onDidChangeProperty.fire({\n\t\t\ttype: ProcessPropertyType.Title,\n\t\t\tvalue: title,\n\t\t});\n\t}\n\n\temitReady(pid: number, cwd: string): void {\n\t\tthis._onProcessReady.fire({ pid, cwd, windowsPty: undefined });\n\t}\n\n\temitProcessProperty({ type, value }: IProcessProperty<any>): void {\n\t\tswitch (type) {\n\t\t\tcase ProcessPropertyType.Cwd:\n\t\t\t\tthis.emitCwd(value);\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.InitialCwd:\n\t\t\t\tthis.emitInitialCwd(value);\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.Title:\n\t\t\t\tthis.emitTitle(value);\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.OverrideDimensions:\n\t\t\t\tthis.emitOverrideDimensions(value);\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.ResolvedShellLaunchConfig:\n\t\t\t\tthis.emitResolvedShellLaunchConfig(value);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\temitExit(exitCode: number | undefined): void {\n\t\tthis._onProcessExit.fire(exitCode);\n\t\tthis.dispose();\n\t}\n\n\temitOverrideDimensions(dimensions: ITerminalDimensions | undefined): void {\n\t\tthis._onDidChangeProperty.fire({\n\t\t\ttype: ProcessPropertyType.OverrideDimensions,\n\t\t\tvalue: dimensions,\n\t\t});\n\t}\n\n\temitResolvedShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig): void {\n\t\tthis._onDidChangeProperty.fire({\n\t\t\ttype: ProcessPropertyType.ResolvedShellLaunchConfig,\n\t\t\tvalue: shellLaunchConfig,\n\t\t});\n\t}\n\n\temitInitialCwd(initialCwd: string): void {\n\t\twhile (this._pendingInitialCwdRequests.length > 0) {\n\t\t\tthis._pendingInitialCwdRequests.pop()!(initialCwd);\n\t\t}\n\t}\n\n\temitCwd(cwd: string): void {\n\t\twhile (this._pendingCwdRequests.length > 0) {\n\t\t\tthis._pendingCwdRequests.pop()!(cwd);\n\t\t}\n\t}\n\n\tasync start(): Promise<ITerminalLaunchError | undefined> {\n\t\treturn this._terminalService.requestStartExtensionTerminal(\n\t\t\tthis,\n\t\t\tthis._cols,\n\t\t\tthis._rows,\n\t\t);\n\t}\n\n\tshutdown(immediate: boolean): void {\n\t\tthis._onShutdown.fire(immediate);\n\t}\n\n\tinput(data: string): void {\n\t\tthis._onInput.fire(data);\n\t}\n\n\tresize(cols: number, rows: number): void {\n\t\tthis._onResize.fire({ cols, rows });\n\t}\n\n\tclearBuffer(): void | Promise<void> {\n\t\t// no-op\n\t}\n\n\tacknowledgeDataEvent(): void {\n\t\t// Flow control is disabled for extension terminals\n\t}\n\n\tasync setUnicodeVersion(version: \"6\" | \"11\"): Promise<void> {\n\t\t// No-op\n\t}\n\n\tasync processBinary(data: string): Promise<void> {\n\t\t// Disabled for extension terminals\n\t\tthis._onBinary.fire(data);\n\t}\n\n\tgetInitialCwd(): Promise<string> {\n\t\treturn new Promise<string>((resolve) => {\n\t\t\tthis._onRequestInitialCwd.fire();\n\t\t\tthis._pendingInitialCwdRequests.push(resolve);\n\t\t});\n\t}\n\n\tgetCwd(): Promise<string> {\n\t\treturn new Promise<string>((resolve) => {\n\t\t\tthis._onRequestCwd.fire();\n\t\t\tthis._pendingCwdRequests.push(resolve);\n\t\t});\n\t}\n\n\tasync refreshProperty<T extends ProcessPropertyType>(\n\t\ttype: T,\n\t): Promise<any> {\n\t\t// throws if called in extHostTerminalService\n\t}\n\n\tasync updateProperty<T extends ProcessPropertyType>(\n\t\ttype: T,\n\t\tvalue: IProcessPropertyMap[T],\n\t): Promise<void> {\n\t\t// throws if called in extHostTerminalService\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
