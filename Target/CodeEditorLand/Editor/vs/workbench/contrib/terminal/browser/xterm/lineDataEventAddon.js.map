{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/xterm/lineDataEventAddon.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { OperatingSystem } from '../../../../../base/common/platform.js';\nimport type { Terminal as XTermTerminal, IBuffer, ITerminalAddon } from '@xterm/xterm';\n\n/**\n * Provides extensions to the xterm object in a modular, testable way.\n */\nexport class LineDataEventAddon extends Disposable implements ITerminalAddon {\n\n\tprivate _xterm?: XTermTerminal;\n\tprivate _isOsSet = false;\n\n\tprivate readonly _onLineData = this._register(new Emitter<string>());\n\treadonly onLineData = this._onLineData.event;\n\n\tconstructor(private readonly _initializationPromise?: Promise<void>) {\n\t\tsuper();\n\t}\n\n\tasync activate(xterm: XTermTerminal) {\n\t\tthis._xterm = xterm;\n\n\t\t// IMPORTANT: Instantiate the buffer namespace object here before it's disposed.\n\t\tconst buffer = xterm.buffer;\n\n\t\t// If there is an initialization promise, wait for it before registering the event\n\t\tawait this._initializationPromise;\n\n\t\t// Fire onLineData when a line feed occurs, taking into account wrapped lines\n\t\tthis._register(xterm.onLineFeed(() => {\n\t\t\tconst newLine = buffer.active.getLine(buffer.active.baseY + buffer.active.cursorY);\n\t\t\tif (newLine && !newLine.isWrapped) {\n\t\t\t\tthis._sendLineData(buffer.active, buffer.active.baseY + buffer.active.cursorY - 1);\n\t\t\t}\n\t\t}));\n\n\t\t// Fire onLineData when disposing object to flush last line\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis._sendLineData(buffer.active, buffer.active.baseY + buffer.active.cursorY);\n\t\t}));\n\t}\n\n\tsetOperatingSystem(os: OperatingSystem) {\n\t\tif (this._isOsSet || !this._xterm) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isOsSet = true;\n\n\t\t// Force line data to be sent when the cursor is moved, the main purpose for\n\t\t// this is because ConPTY will often not do a line feed but instead move the\n\t\t// cursor, in which case we still want to send the current line's data to tasks.\n\t\tif (os === OperatingSystem.Windows) {\n\t\t\tconst xterm = this._xterm;\n\t\t\tthis._register(xterm.parser.registerCsiHandler({ final: 'H' }, () => {\n\t\t\t\tconst buffer = xterm.buffer;\n\t\t\t\tthis._sendLineData(buffer.active, buffer.active.baseY + buffer.active.cursorY);\n\t\t\t\treturn false;\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate _sendLineData(buffer: IBuffer, lineIndex: number): void {\n\t\tlet line = buffer.getLine(lineIndex);\n\t\tif (!line) {\n\t\t\treturn;\n\t\t}\n\t\tlet lineData = line.translateToString(true);\n\t\twhile (lineIndex > 0 && line.isWrapped) {\n\t\t\tline = buffer.getLine(--lineIndex);\n\t\t\tif (!line) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlineData = line.translateToString(false) + lineData;\n\t\t}\n\t\tthis._onLineData.fire(lineData);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,YAAY,oBAAoB;AACzC,SAAS,uBAAuB;AAMzB,MAAM,2BAA2B,WAAqC;AAAA,EAQ5E,YAA6B,wBAAwC;AACpE,UAAM;AADsB;AAAA,EAE7B;AAAA,EAvBD,OAa6E;AAAA;AAAA;AAAA,EAEpE;AAAA,EACA,WAAW;AAAA,EAEF,cAAc,KAAK,UAAU,IAAI,QAAgB,CAAC;AAAA,EAC1D,aAAa,KAAK,YAAY;AAAA,EAMvC,MAAM,SAAS,OAAsB;AACpC,SAAK,SAAS;AAGd,UAAM,SAAS,MAAM;AAGrB,UAAM,KAAK;AAGX,SAAK,UAAU,MAAM,WAAW,MAAM;AACrC,YAAM,UAAU,OAAO,OAAO,QAAQ,OAAO,OAAO,QAAQ,OAAO,OAAO,OAAO;AACjF,UAAI,WAAW,CAAC,QAAQ,WAAW;AAClC,aAAK,cAAc,OAAO,QAAQ,OAAO,OAAO,QAAQ,OAAO,OAAO,UAAU,CAAC;AAAA,MAClF;AAAA,IACD,CAAC,CAAC;AAGF,SAAK,UAAU,aAAa,MAAM;AACjC,WAAK,cAAc,OAAO,QAAQ,OAAO,OAAO,QAAQ,OAAO,OAAO,OAAO;AAAA,IAC9E,CAAC,CAAC;AAAA,EACH;AAAA,EAEA,mBAAmB,IAAqB;AACvC,QAAI,KAAK,YAAY,CAAC,KAAK,QAAQ;AAClC;AAAA,IACD;AACA,SAAK,WAAW;AAKhB,QAAI,OAAO,gBAAgB,SAAS;AACnC,YAAM,QAAQ,KAAK;AACnB,WAAK,UAAU,MAAM,OAAO,mBAAmB,EAAE,OAAO,IAAI,GAAG,MAAM;AACpE,cAAM,SAAS,MAAM;AACrB,aAAK,cAAc,OAAO,QAAQ,OAAO,OAAO,QAAQ,OAAO,OAAO,OAAO;AAC7E,eAAO;AAAA,MACR,CAAC,CAAC;AAAA,IACH;AAAA,EACD;AAAA,EAEQ,cAAc,QAAiB,WAAyB;AAC/D,QAAI,OAAO,OAAO,QAAQ,SAAS;AACnC,QAAI,CAAC,MAAM;AACV;AAAA,IACD;AACA,QAAI,WAAW,KAAK,kBAAkB,IAAI;AAC1C,WAAO,YAAY,KAAK,KAAK,WAAW;AACvC,aAAO,OAAO,QAAQ,EAAE,SAAS;AACjC,UAAI,CAAC,MAAM;AACV;AAAA,MACD;AACA,iBAAW,KAAK,kBAAkB,KAAK,IAAI;AAAA,IAC5C;AACA,SAAK,YAAY,KAAK,QAAQ;AAAA,EAC/B;AACD;",
  "names": []
}
