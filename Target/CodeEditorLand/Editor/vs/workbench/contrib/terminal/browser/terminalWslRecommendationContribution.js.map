{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalWslRecommendationContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { basename } from \"../../../../base/common/path.js\";\nimport { isWindows } from \"../../../../base/common/platform.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IExtensionManagementService } from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tINotificationService,\n\tNeverShowAgainScope,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { InstallRecommendedExtensionAction } from \"../../extensions/browser/extensionsActions.js\";\nimport { ITerminalService } from \"./terminal.js\";\n\nexport class TerminalWslRecommendationContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic ID = \"terminalWslRecommendation\";\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IProductService productService: IProductService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IExtensionManagementService\n\t\textensionManagementService: IExtensionManagementService,\n\t\t@ITerminalService terminalService: ITerminalService,\n\t) {\n\t\tsuper();\n\n\t\tif (!isWindows) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst exeBasedExtensionTips = productService.exeBasedExtensionTips;\n\t\tif (!exeBasedExtensionTips || !exeBasedExtensionTips.wsl) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listener: IDisposable | undefined =\n\t\t\tterminalService.onDidCreateInstance(async (instance) => {\n\t\t\t\tasync function isExtensionInstalled(\n\t\t\t\t\tid: string,\n\t\t\t\t): Promise<boolean> {\n\t\t\t\t\tconst extensions =\n\t\t\t\t\t\tawait extensionManagementService.getInstalled();\n\t\t\t\t\treturn extensions.some((e) => e.identifier.id === id);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!instance.shellLaunchConfig.executable ||\n\t\t\t\t\tbasename(\n\t\t\t\t\t\tinstance.shellLaunchConfig.executable,\n\t\t\t\t\t).toLowerCase() !== \"wsl.exe\"\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlistener?.dispose();\n\t\t\t\tlistener = undefined;\n\n\t\t\t\tconst extId = Object.keys(\n\t\t\t\t\texeBasedExtensionTips.wsl.recommendations,\n\t\t\t\t).find(\n\t\t\t\t\t(extId) =>\n\t\t\t\t\t\texeBasedExtensionTips.wsl.recommendations[extId]\n\t\t\t\t\t\t\t.important,\n\t\t\t\t);\n\t\t\t\tif (!extId || (await isExtensionInstalled(extId))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnotificationService.prompt(\n\t\t\t\t\tSeverity.Info,\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"useWslExtension.title\",\n\t\t\t\t\t\t\"The '{0}' extension is recommended for opening a terminal in WSL.\",\n\t\t\t\t\t\texeBasedExtensionTips.wsl.friendlyName,\n\t\t\t\t\t),\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: localize(\"install\", \"Install\"),\n\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\tinstantiationService\n\t\t\t\t\t\t\t\t\t.createInstance(\n\t\t\t\t\t\t\t\t\t\tInstallRecommendedExtensionAction,\n\t\t\t\t\t\t\t\t\t\textId,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.run();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t{\n\t\t\t\t\t\tsticky: true,\n\t\t\t\t\t\tneverShowAgain: {\n\t\t\t\t\t\t\tid: \"terminalConfigHelper/launchRecommendationsIgnore\",\n\t\t\t\t\t\t\tscope: NeverShowAgainScope.APPLICATION,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonCancel: () => {},\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,OAEM;AACP,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,mCAAmC;AAC5C,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAEhC,SAAS,yCAAyC;AAClD,SAAS,wBAAwB;AAE1B,IAAM,wCAAN,cACE,WAET;AAAA,EA3BA,OA2BA;AAAA;AAAA;AAAA,EACC,OAAO,KAAK;AAAA,EAEZ,YACwB,sBACN,gBACK,qBAEtB,4BACkB,iBACjB;AACD,UAAM;AAEN,QAAI,CAAC,WAAW;AACf;AAAA,IACD;AAEA,UAAM,wBAAwB,eAAe;AAC7C,QAAI,CAAC,yBAAyB,CAAC,sBAAsB,KAAK;AACzD;AAAA,IACD;AAEA,QAAI,WACH,gBAAgB,oBAAoB,OAAO,aAAa;AACvD,qBAAe,qBACd,IACmB;AACnB,cAAM,aACL,MAAM,2BAA2B,aAAa;AAC/C,eAAO,WAAW,KAAK,CAAC,MAAM,EAAE,WAAW,OAAO,EAAE;AAAA,MACrD;AANe;AAQf,UACC,CAAC,SAAS,kBAAkB,cAC5B;AAAA,QACC,SAAS,kBAAkB;AAAA,MAC5B,EAAE,YAAY,MAAM,WACnB;AACD;AAAA,MACD;AAEA,gBAAU,QAAQ;AAClB,iBAAW;AAEX,YAAM,QAAQ,OAAO;AAAA,QACpB,sBAAsB,IAAI;AAAA,MAC3B,EAAE;AAAA,QACD,CAACA,WACA,sBAAsB,IAAI,gBAAgBA,MAAK,EAC7C;AAAA,MACJ;AACA,UAAI,CAAC,SAAU,MAAM,qBAAqB,KAAK,GAAI;AAClD;AAAA,MACD;AAEA,0BAAoB;AAAA,QACnB,SAAS;AAAA,QACT;AAAA,UACC;AAAA,UACA;AAAA,UACA,sBAAsB,IAAI;AAAA,QAC3B;AAAA,QACA;AAAA,UACC;AAAA,YACC,OAAO,SAAS,WAAW,SAAS;AAAA,YACpC,KAAK,6BAAM;AACV,mCACE;AAAA,gBACA;AAAA,gBACA;AAAA,cACD,EACC,IAAI;AAAA,YACP,GAPK;AAAA,UAQN;AAAA,QACD;AAAA,QACA;AAAA,UACC,QAAQ;AAAA,UACR,gBAAgB;AAAA,YACf,IAAI;AAAA,YACJ,OAAO,oBAAoB;AAAA,UAC5B;AAAA,UACA,UAAU,6BAAM;AAAA,UAAC,GAAP;AAAA,QACX;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACH;AACD;AAzFa,wCAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,GAZU;",
  "names": ["extId"]
}
