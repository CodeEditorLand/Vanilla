{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalWslRecommendationContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, type IDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/path.js';\nimport { isWindows } from '../../../../base/common/platform.js';\nimport { localize } from '../../../../nls.js';\nimport { IExtensionManagementService } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, NeverShowAgainScope, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport type { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { InstallRecommendedExtensionAction } from '../../extensions/browser/extensionsActions.js';\nimport { ITerminalService } from './terminal.js';\n\nexport class TerminalWslRecommendationContribution extends Disposable implements IWorkbenchContribution {\n\tstatic ID = 'terminalWslRecommendation';\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IProductService productService: IProductService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@ITerminalService terminalService: ITerminalService,\n\t) {\n\t\tsuper();\n\n\t\tif (!isWindows) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst exeBasedExtensionTips = productService.exeBasedExtensionTips;\n\t\tif (!exeBasedExtensionTips || !exeBasedExtensionTips.wsl) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listener: IDisposable | undefined = terminalService.onDidCreateInstance(async instance => {\n\t\t\tasync function isExtensionInstalled(id: string): Promise<boolean> {\n\t\t\t\tconst extensions = await extensionManagementService.getInstalled();\n\t\t\t\treturn extensions.some(e => e.identifier.id === id);\n\t\t\t}\n\n\t\t\tif (!instance.shellLaunchConfig.executable || basename(instance.shellLaunchConfig.executable).toLowerCase() !== 'wsl.exe') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlistener?.dispose();\n\t\t\tlistener = undefined;\n\n\t\t\tconst extId = Object.keys(exeBasedExtensionTips.wsl.recommendations).find(extId => exeBasedExtensionTips.wsl.recommendations[extId].important);\n\t\t\tif (!extId || await isExtensionInstalled(extId)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotificationService.prompt(\n\t\t\t\tSeverity.Info,\n\t\t\t\tlocalize('useWslExtension.title', \"The '{0}' extension is recommended for opening a terminal in WSL.\", exeBasedExtensionTips.wsl.friendlyName),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize('install', 'Install'),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\tinstantiationService.createInstance(InstallRecommendedExtensionAction, extId).run();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tneverShowAgain: { id: 'terminalConfigHelper/launchRecommendationsIgnore', scope: NeverShowAgainScope.APPLICATION },\n\t\t\t\t\tonCancel: () => { }\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAoC;AAC7C,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,mCAAmC;AAC5C,SAAS,6BAA6B;AACtC,SAAS,sBAAsB,qBAAqB,gBAAgB;AACpE,SAAS,uBAAuB;AAEhC,SAAS,yCAAyC;AAClD,SAAS,wBAAwB;AAE1B,IAAM,wCAAN,cAAoD,WAA6C;AAAA,EAjBxG,OAiBwG;AAAA;AAAA;AAAA,EACvG,OAAO,KAAK;AAAA,EAEZ,YACwB,sBACN,gBACK,qBACO,4BACX,iBACjB;AACD,UAAM;AAEN,QAAI,CAAC,WAAW;AACf;AAAA,IACD;AAEA,UAAM,wBAAwB,eAAe;AAC7C,QAAI,CAAC,yBAAyB,CAAC,sBAAsB,KAAK;AACzD;AAAA,IACD;AAEA,QAAI,WAAoC,gBAAgB,oBAAoB,OAAM,aAAY;AAC7F,qBAAe,qBAAqB,IAA8B;AACjE,cAAM,aAAa,MAAM,2BAA2B,aAAa;AACjE,eAAO,WAAW,KAAK,OAAK,EAAE,WAAW,OAAO,EAAE;AAAA,MACnD;AAHe;AAKf,UAAI,CAAC,SAAS,kBAAkB,cAAc,SAAS,SAAS,kBAAkB,UAAU,EAAE,YAAY,MAAM,WAAW;AAC1H;AAAA,MACD;AAEA,gBAAU,QAAQ;AAClB,iBAAW;AAEX,YAAM,QAAQ,OAAO,KAAK,sBAAsB,IAAI,eAAe,EAAE,KAAK,CAAAA,WAAS,sBAAsB,IAAI,gBAAgBA,MAAK,EAAE,SAAS;AAC7I,UAAI,CAAC,SAAS,MAAM,qBAAqB,KAAK,GAAG;AAChD;AAAA,MACD;AAEA,0BAAoB;AAAA,QACnB,SAAS;AAAA,QACT,SAAS,yBAAyB,qEAAqE,sBAAsB,IAAI,YAAY;AAAA,QAC7I;AAAA,UACC;AAAA,YACC,OAAO,SAAS,WAAW,SAAS;AAAA,YACpC,KAAK,6BAAM;AACV,mCAAqB,eAAe,mCAAmC,KAAK,EAAE,IAAI;AAAA,YACnF,GAFK;AAAA,UAGN;AAAA,QACD;AAAA,QACA;AAAA,UACC,QAAQ;AAAA,UACR,gBAAgB,EAAE,IAAI,oDAAoD,OAAO,oBAAoB,YAAY;AAAA,UACjH,UAAU,6BAAM;AAAA,UAAE,GAAR;AAAA,QACX;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AACD;AA1Da,wCAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GARU;",
  "names": ["extId"]
}
