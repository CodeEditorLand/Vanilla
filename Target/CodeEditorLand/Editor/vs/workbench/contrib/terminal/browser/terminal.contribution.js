import{KeyCode as e,KeyMod as r}from"../../../../base/common/keyCodes.js";import{Schemas as q}from"../../../../base/common/network.js";import{isIOS as N,isWindows as T}from"../../../../base/common/platform.js";import{URI as K}from"../../../../base/common/uri.js";import"./media/terminal.css";import"./media/terminalVoice.css";import"./media/widgets.css";import"./media/xterm.css";import*as C from"../../../../nls.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED as s}from"../../../../platform/accessibility/common/accessibility.js";import{CommandsRegistry as I}from"../../../../platform/commands/common/commands.js";import{ContextKeyExpr as t}from"../../../../platform/contextkey/common/contextkey.js";import{Extensions as L}from"../../../../platform/dnd/browser/dnd.js";import{SyncDescriptor as u}from"../../../../platform/instantiation/common/descriptors.js";import{InstantiationType as a,registerSingleton as m}from"../../../../platform/instantiation/common/extensions.js";import{Extensions as B}from"../../../../platform/quickinput/common/quickAccess.js";import{Registry as c}from"../../../../platform/registry/common/platform.js";import{GeneralShellType as p,ITerminalLogService as Q,WindowsShellType as z}from"../../../../platform/terminal/common/terminal.js";import{TerminalLogService as M}from"../../../../platform/terminal/common/terminalLogService.js";import{registerTerminalPlatformConfiguration as _}from"../../../../platform/terminal/common/terminalPlatformConfiguration.js";import{EditorPaneDescriptor as F}from"../../../browser/editor.js";import{ViewPaneContainer as G}from"../../../browser/parts/views/viewPaneContainer.js";import{getQuickNavigateHandler as E}from"../../../browser/quickaccess.js";import{WorkbenchPhase as h,registerWorkbenchContribution2 as S}from"../../../common/contributions.js";import{EditorExtensions as w}from"../../../common/editor.js";import{Extensions as A,ViewContainerLocation as H}from"../../../common/views.js";import{RemoteTerminalBackendContribution as D}from"./remoteTerminalBackend.js";import{ITerminalConfigurationService as J,ITerminalEditorService as X,ITerminalGroupService as U,ITerminalInstanceService as Y,ITerminalService as j,TerminalDataTransfers as k,terminalEditorId as Z}from"./terminal.js";import{registerTerminalActions as $}from"./terminalActions.js";import{setupTerminalCommands as rr}from"./terminalCommands.js";import{TerminalConfigurationService as er}from"./terminalConfigurationService.js";import{TerminalEditor as ir}from"./terminalEditor.js";import{TerminalEditorInput as R}from"./terminalEditorInput.js";import{TerminalInputSerializer as tr}from"./terminalEditorSerializer.js";import{TerminalEditorService as or}from"./terminalEditorService.js";import{TerminalGroupService as nr}from"./terminalGroupService.js";import{terminalViewIcon as P}from"./terminalIcons.js";import{TerminalInstanceService as ar}from"./terminalInstanceService.js";import{TerminalMainContribution as v}from"./terminalMainContribution.js";import{setupTerminalMenus as mr}from"./terminalMenus.js";import{TerminalProfileService as lr}from"./terminalProfileService.js";import{TerminalQuickAccessProvider as b}from"./terminalQuickAccess.js";import{TerminalService as sr}from"./terminalService.js";import{TerminalViewPane as cr}from"./terminalView.js";import{TerminalWslRecommendationContribution as x}from"./terminalWslRecommendationContribution.js";import{ITerminalProfileService as pr,TERMINAL_VIEW_ID as g,TerminalCommandId as V}from"../common/terminal.js";import{registerColors as dr}from"../common/terminalColorRegistry.js";import{registerTerminalConfiguration as fr}from"../common/terminalConfiguration.js";import{TerminalContextKeyStrings as l,TerminalContextKeys as o}from"../common/terminalContextKey.js";import{terminalStrings as Cr}from"../common/terminalStrings.js";import{registerSendSequenceKeybinding as i}from"./terminalKeybindings.js";m(Q,M,a.Delayed),m(J,er,a.Delayed),m(j,sr,a.Delayed),m(X,or,a.Delayed),m(U,nr,a.Delayed),m(Y,ar,a.Delayed),m(pr,lr,a.Delayed);const gr=c.as(B.Quickaccess),yr="inTerminalPicker";gr.registerQuickAccessProvider({ctor:b,prefix:b.PREFIX,contextKey:yr,placeholder:C.localize("tasksQuickAccessPlaceholder","Type the name of a terminal to open."),helpEntries:[{description:C.localize("tasksQuickAccessHelp","Show All Opened Terminals"),commandId:V.QuickOpenTerm}]});const W="workbench.action.quickOpenNavigateNextInTerminalPicker";I.registerCommand({id:W,handler:E(W,!0)});const O="workbench.action.quickOpenNavigatePreviousInTerminalPicker";I.registerCommand({id:O,handler:E(O,!1)}),S(v.ID,v,h.BlockStartup),S(D.ID,D,h.AfterRestored),S(x.ID,x,h.Eventually),_(),fr(),c.as(w.EditorFactory).registerEditorSerializer(R.ID,tr),c.as(w.EditorPane).registerEditorPane(F.create(ir,Z,Cr.terminal),[new u(R)]),c.as(L.DragAndDropContribution).register({dataFormatKey:k.Terminals,getEditorInputs(y){const n=[];try{const d=JSON.parse(y);for(const f of d)n.push({resource:K.parse(f)})}catch{}return n},setData(y,n){const d=y.filter(({resource:f})=>f.scheme===q.vscodeTerminal);d.length&&n.dataTransfer?.setData(k.Terminals,JSON.stringify(d.map(({resource:f})=>f.toString())))}});const ur=c.as(A.ViewContainersRegistry).registerViewContainer({id:g,title:C.localize2("terminal","Terminal"),icon:P,ctorDescriptor:new u(G,[g,{mergeViewWithContainerWhenSingleView:!0}]),storageId:g,hideIfEmpty:!0,order:3},H.Panel,{doNotRegisterOpenCommand:!0,isDefault:!0});c.as(A.ViewsRegistry).registerViews([{id:g,name:C.localize2("terminal","Terminal"),containerIcon:P,canToggleVisibility:!1,canMoveView:!0,ctorDescriptor:new u(cr),openCommandActionDescriptor:{id:V.Toggle,mnemonicTitle:C.localize({key:"miToggleIntegratedTerminal",comment:["&& denotes a mnemonic"]},"&&Terminal"),keybindings:{primary:r.CtrlCmd|e.Backquote,mac:{primary:r.WinCtrl|e.Backquote}},order:3}}],ur),$();var hr=(n=>(n[n.CtrlLetterOffset=64]="CtrlLetterOffset",n))(hr||{});T&&i("",{when:t.and(o.focus,t.equals(l.ShellType,p.PowerShell),s.negate()),primary:r.CtrlCmd|e.KeyV}),i("\x1B[24~a",{when:t.and(o.focus,t.equals(l.ShellType,p.PowerShell),o.terminalShellIntegrationEnabled,s.negate()),primary:r.CtrlCmd|e.Space,mac:{primary:r.WinCtrl|e.Space}}),i("\x1B[24~b",{when:t.and(o.focus,t.equals(l.ShellType,p.PowerShell),o.terminalShellIntegrationEnabled,s.negate()),primary:r.Alt|e.Space}),i("\x1B[24~c",{when:t.and(o.focus,t.equals(l.ShellType,p.PowerShell),o.terminalShellIntegrationEnabled,s.negate()),primary:r.Shift|e.Enter}),i("\x1B[24~d",{when:t.and(o.focus,t.equals(l.ShellType,p.PowerShell),o.terminalShellIntegrationEnabled,s.negate()),mac:{primary:r.Shift|r.CtrlCmd|e.RightArrow}}),i("\x1B[1;2H",{when:t.and(o.focus,t.equals(l.ShellType,p.PowerShell)),mac:{primary:r.Shift|r.CtrlCmd|e.LeftArrow}}),i("",{when:t.and(o.focus,s),primary:r.CtrlCmd|r.Alt|e.KeyR,mac:{primary:r.WinCtrl|r.Alt|e.KeyR}}),i("\x07",{when:o.focus,primary:r.CtrlCmd|r.Alt|e.KeyG,mac:{primary:r.WinCtrl|r.Alt|e.KeyG}}),N&&i("",{when:t.and(o.focus),primary:r.WinCtrl|e.KeyC}),i("",{primary:r.CtrlCmd|e.Backspace,mac:{primary:r.Alt|e.Backspace}}),T&&i("\b",{when:t.and(o.focus,t.equals(l.ShellType,z.CommandPrompt)),primary:r.CtrlCmd|e.Backspace}),i("\x1Bd",{primary:r.CtrlCmd|e.Delete,mac:{primary:r.Alt|e.Delete}}),i("",{mac:{primary:r.CtrlCmd|e.Backspace}}),i("",{mac:{primary:r.CtrlCmd|e.LeftArrow}}),i("",{mac:{primary:r.CtrlCmd|e.RightArrow}}),i("\0",{primary:r.CtrlCmd|r.Shift|e.Digit2,mac:{primary:r.WinCtrl|r.Shift|e.Digit2}}),i("",{primary:r.CtrlCmd|r.Shift|e.Digit6,mac:{primary:r.WinCtrl|r.Shift|e.Digit6}}),i("",{primary:r.CtrlCmd|e.Slash,mac:{primary:r.WinCtrl|e.Slash}}),rr(),mr(),dr();
