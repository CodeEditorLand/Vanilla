{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminal.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { isIOS, isWindows } from '../../../../base/common/platform.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './media/terminal.css';\nimport './media/terminalVoice.css';\nimport './media/widgets.css';\nimport './media/xterm.css';\nimport * as nls from '../../../../nls.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../../platform/accessibility/common/accessibility.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, ContextKeyExpression } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Extensions as DragAndDropExtensions, IDragAndDropContributionRegistry, IDraggedResourceEditorInput } from '../../../../platform/dnd/browser/dnd.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IKeybindings, KeybindingWeight, KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IQuickAccessRegistry, Extensions as QuickAccessExtensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { GeneralShellType, ITerminalLogService, WindowsShellType } from '../../../../platform/terminal/common/terminal.js';\nimport { TerminalLogService } from '../../../../platform/terminal/common/terminalLogService.js';\nimport { registerTerminalPlatformConfiguration } from '../../../../platform/terminal/common/terminalPlatformConfiguration.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { ViewPaneContainer } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { getQuickNavigateHandler } from '../../../browser/quickaccess.js';\nimport { WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { EditorExtensions, IEditorFactoryRegistry } from '../../../common/editor.js';\nimport { IViewContainersRegistry, IViewsRegistry, Extensions as ViewContainerExtensions, ViewContainerLocation } from '../../../common/views.js';\nimport { RemoteTerminalBackendContribution } from './remoteTerminalBackend.js';\nimport { ITerminalConfigurationService, ITerminalEditorService, ITerminalGroupService, ITerminalInstanceService, ITerminalService, TerminalDataTransfers, terminalEditorId } from './terminal.js';\nimport { registerTerminalActions, terminalSendSequenceCommand } from './terminalActions.js';\nimport { setupTerminalCommands } from './terminalCommands.js';\nimport { TerminalConfigurationService } from './terminalConfigurationService.js';\nimport { TerminalEditor } from './terminalEditor.js';\nimport { TerminalEditorInput } from './terminalEditorInput.js';\nimport { TerminalInputSerializer } from './terminalEditorSerializer.js';\nimport { TerminalEditorService } from './terminalEditorService.js';\nimport { TerminalGroupService } from './terminalGroupService.js';\nimport { terminalViewIcon } from './terminalIcons.js';\nimport { TerminalInstanceService } from './terminalInstanceService.js';\nimport { TerminalMainContribution } from './terminalMainContribution.js';\nimport { setupTerminalMenus } from './terminalMenus.js';\nimport { TerminalProfileService } from './terminalProfileService.js';\nimport { TerminalQuickAccessProvider } from './terminalQuickAccess.js';\nimport { TerminalService } from './terminalService.js';\nimport { TerminalViewPane } from './terminalView.js';\nimport { TerminalWslRecommendationContribution } from './terminalWslRecommendationContribution.js';\nimport { ITerminalProfileService, TERMINAL_VIEW_ID, TerminalCommandId } from '../common/terminal.js';\nimport { registerColors } from '../common/terminalColorRegistry.js';\nimport { registerTerminalConfiguration } from '../common/terminalConfiguration.js';\nimport { TerminalContextKeyStrings, TerminalContextKeys } from '../common/terminalContextKey.js';\nimport { terminalStrings } from '../common/terminalStrings.js';\n\n// HACK: This file should not depend on terminalContrib\n// eslint-disable-next-line local/code-import-patterns\nimport { TerminalSuggestSettingId } from '../../terminalContrib/suggest/common/terminalSuggestConfiguration.js';\n\n// Register services\nregisterSingleton(ITerminalLogService, TerminalLogService, InstantiationType.Delayed);\nregisterSingleton(ITerminalConfigurationService, TerminalConfigurationService, InstantiationType.Delayed);\nregisterSingleton(ITerminalService, TerminalService, InstantiationType.Delayed);\nregisterSingleton(ITerminalEditorService, TerminalEditorService, InstantiationType.Delayed);\nregisterSingleton(ITerminalGroupService, TerminalGroupService, InstantiationType.Delayed);\nregisterSingleton(ITerminalInstanceService, TerminalInstanceService, InstantiationType.Delayed);\nregisterSingleton(ITerminalProfileService, TerminalProfileService, InstantiationType.Delayed);\n\n// Register quick accesses\nconst quickAccessRegistry = (Registry.as<IQuickAccessRegistry>(QuickAccessExtensions.Quickaccess));\nconst inTerminalsPicker = 'inTerminalPicker';\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: TerminalQuickAccessProvider,\n\tprefix: TerminalQuickAccessProvider.PREFIX,\n\tcontextKey: inTerminalsPicker,\n\tplaceholder: nls.localize('tasksQuickAccessPlaceholder', \"Type the name of a terminal to open.\"),\n\thelpEntries: [{ description: nls.localize('tasksQuickAccessHelp', \"Show All Opened Terminals\"), commandId: TerminalCommandId.QuickOpenTerm }]\n});\nconst quickAccessNavigateNextInTerminalPickerId = 'workbench.action.quickOpenNavigateNextInTerminalPicker';\nCommandsRegistry.registerCommand({ id: quickAccessNavigateNextInTerminalPickerId, handler: getQuickNavigateHandler(quickAccessNavigateNextInTerminalPickerId, true) });\nconst quickAccessNavigatePreviousInTerminalPickerId = 'workbench.action.quickOpenNavigatePreviousInTerminalPicker';\nCommandsRegistry.registerCommand({ id: quickAccessNavigatePreviousInTerminalPickerId, handler: getQuickNavigateHandler(quickAccessNavigatePreviousInTerminalPickerId, false) });\n\n// Register workbench contributions\n// This contribution blocks startup as it's critical to enable the web embedder window.createTerminal API\nregisterWorkbenchContribution2(TerminalMainContribution.ID, TerminalMainContribution, WorkbenchPhase.BlockStartup);\nregisterWorkbenchContribution2(RemoteTerminalBackendContribution.ID, RemoteTerminalBackendContribution, WorkbenchPhase.AfterRestored);\nregisterWorkbenchContribution2(TerminalWslRecommendationContribution.ID, TerminalWslRecommendationContribution, WorkbenchPhase.Eventually);\n\n// Register configurations\nregisterTerminalPlatformConfiguration();\nregisterTerminalConfiguration();\n\n// Register editor/dnd contributions\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(TerminalEditorInput.ID, TerminalInputSerializer);\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tTerminalEditor,\n\t\tterminalEditorId,\n\t\tterminalStrings.terminal\n\t),\n\t[\n\t\tnew SyncDescriptor(TerminalEditorInput)\n\t]\n);\nRegistry.as<IDragAndDropContributionRegistry>(DragAndDropExtensions.DragAndDropContribution).register({\n\tdataFormatKey: TerminalDataTransfers.Terminals,\n\tgetEditorInputs(data) {\n\t\tconst editors: IDraggedResourceEditorInput[] = [];\n\t\ttry {\n\t\t\tconst terminalEditors: string[] = JSON.parse(data);\n\t\t\tfor (const terminalEditor of terminalEditors) {\n\t\t\t\teditors.push({ resource: URI.parse(terminalEditor) });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// Invalid transfer\n\t\t}\n\t\treturn editors;\n\t},\n\tsetData(resources, event) {\n\t\tconst terminalResources = resources.filter(({ resource }) => resource.scheme === Schemas.vscodeTerminal);\n\t\tif (terminalResources.length) {\n\t\t\tevent.dataTransfer?.setData(TerminalDataTransfers.Terminals, JSON.stringify(terminalResources.map(({ resource }) => resource.toString())));\n\t\t}\n\t}\n});\n\n// Register views\nconst VIEW_CONTAINER = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: TERMINAL_VIEW_ID,\n\ttitle: nls.localize2('terminal', \"Terminal\"),\n\ticon: terminalViewIcon,\n\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [TERMINAL_VIEW_ID, { mergeViewWithContainerWhenSingleView: true }]),\n\tstorageId: TERMINAL_VIEW_ID,\n\thideIfEmpty: true,\n\torder: 3,\n}, ViewContainerLocation.Panel, { doNotRegisterOpenCommand: true, isDefault: true });\nRegistry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry).registerViews([{\n\tid: TERMINAL_VIEW_ID,\n\tname: nls.localize2('terminal', \"Terminal\"),\n\tcontainerIcon: terminalViewIcon,\n\tcanToggleVisibility: false,\n\tcanMoveView: true,\n\tctorDescriptor: new SyncDescriptor(TerminalViewPane),\n\topenCommandActionDescriptor: {\n\t\tid: TerminalCommandId.Toggle,\n\t\tmnemonicTitle: nls.localize({ key: 'miToggleIntegratedTerminal', comment: ['&& denotes a mnemonic'] }, \"&&Terminal\"),\n\t\tkeybindings: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backquote,\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Backquote }\n\t\t},\n\t\torder: 3\n\t}\n}], VIEW_CONTAINER);\n\n// Register actions\nregisterTerminalActions();\n\nfunction registerSendSequenceKeybinding(text: string, rule: { when?: ContextKeyExpression } & IKeybindings): void {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: TerminalCommandId.SendSequence,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: rule.when || TerminalContextKeys.focus,\n\t\tprimary: rule.primary,\n\t\tmac: rule.mac,\n\t\tlinux: rule.linux,\n\t\twin: rule.win,\n\t\thandler: terminalSendSequenceCommand,\n\t\targs: { text }\n\t});\n}\n\nconst enum Constants {\n\t/** The text representation of `^<letter>` is `'A'.charCodeAt(0) + 1`. */\n\tCtrlLetterOffset = 64\n}\n\n// An extra Windows-only ctrl+v keybinding is used for pwsh that sends ctrl+v directly to the\n// shell, this gets handled by PSReadLine which properly handles multi-line pastes. This is\n// disabled in accessibility mode as PowerShell does not run PSReadLine when it detects a screen\n// reader. This works even when clipboard.readText is not supported.\nif (isWindows) {\n\tregisterSendSequenceKeybinding(String.fromCharCode('V'.charCodeAt(0) - Constants.CtrlLetterOffset), { // ctrl+v\n\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, ContextKeyExpr.equals(TerminalContextKeyStrings.ShellType, GeneralShellType.PowerShell), CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyV\n\t});\n}\n\n// Map certain keybindings in pwsh to unused keys which get handled by PSReadLine handlers in the\n// shell integration script. This allows keystrokes that cannot be sent via VT sequences to work.\n// See https://github.com/microsoft/terminal/issues/879#issuecomment-497775007\nregisterSendSequenceKeybinding('\\x1b[24~a', { // F12,a -> ctrl+space (MenuComplete)\n\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, ContextKeyExpr.equals(TerminalContextKeyStrings.ShellType, GeneralShellType.PowerShell), TerminalContextKeys.terminalShellIntegrationEnabled, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.Space }\n});\nregisterSendSequenceKeybinding('\\x1b[24~b', { // F12,b -> alt+space (SetMark)\n\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, ContextKeyExpr.equals(TerminalContextKeyStrings.ShellType, GeneralShellType.PowerShell), TerminalContextKeys.terminalShellIntegrationEnabled, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\tprimary: KeyMod.Alt | KeyCode.Space\n});\nregisterSendSequenceKeybinding('\\x1b[24~c', { // F12,c -> shift+enter (AddLine)\n\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, ContextKeyExpr.equals(TerminalContextKeyStrings.ShellType, GeneralShellType.PowerShell), TerminalContextKeys.terminalShellIntegrationEnabled, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\tprimary: KeyMod.Shift | KeyCode.Enter\n});\nregisterSendSequenceKeybinding('\\x1b[24~d', { // F12,d -> shift+end (SelectLine) - HACK: \\x1b[1;2F is supposed to work but it doesn't\n\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, ContextKeyExpr.equals(TerminalContextKeyStrings.ShellType, GeneralShellType.PowerShell), TerminalContextKeys.terminalShellIntegrationEnabled, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.RightArrow }\n});\nregisterSendSequenceKeybinding('\\x1b[24~e', { // F12,e -> ctrl+space (Native suggest)\n\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, ContextKeyExpr.equals(TerminalContextKeyStrings.ShellType, GeneralShellType.PowerShell), TerminalContextKeys.terminalShellIntegrationEnabled, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(), ContextKeyExpr.equals(`config.${TerminalSuggestSettingId.Enabled}`, true)),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.Space }\n});\n\n// Always on pwsh keybindings\nregisterSendSequenceKeybinding('\\x1b[1;2H', { // Shift+home\n\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, ContextKeyExpr.equals(TerminalContextKeyStrings.ShellType, GeneralShellType.PowerShell)),\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.LeftArrow }\n});\n\n// Map ctrl+alt+r -> ctrl+r when in accessibility mode due to default run recent command keybinding\nregisterSendSequenceKeybinding('\\x12', {\n\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, CONTEXT_ACCESSIBILITY_MODE_ENABLED),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyR,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.KeyR }\n});\n\n// Map ctrl+alt+g -> ctrl+g due to default go to recent directory keybinding\nregisterSendSequenceKeybinding('\\x07', {\n\twhen: TerminalContextKeys.focus,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyG,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.KeyG }\n});\n\n// send ctrl+c to the iPad when the terminal is focused and ctrl+c is pressed to kill the process (work around for #114009)\nif (isIOS) {\n\tregisterSendSequenceKeybinding(String.fromCharCode('C'.charCodeAt(0) - Constants.CtrlLetterOffset), { // ctrl+c\n\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus),\n\t\tprimary: KeyMod.WinCtrl | KeyCode.KeyC\n\t});\n}\n\n// Delete word left: ctrl+w\nregisterSendSequenceKeybinding(String.fromCharCode('W'.charCodeAt(0) - Constants.CtrlLetterOffset), {\n\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\tmac: { primary: KeyMod.Alt | KeyCode.Backspace }\n});\nif (isWindows) {\n\t// Delete word left: ctrl+h\n\t// Windows cmd.exe requires ^H to delete full word left\n\tregisterSendSequenceKeybinding(String.fromCharCode('H'.charCodeAt(0) - Constants.CtrlLetterOffset), {\n\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, ContextKeyExpr.equals(TerminalContextKeyStrings.ShellType, WindowsShellType.CommandPrompt)),\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t});\n}\n// Delete word right: alt+d [27, 100]\nregisterSendSequenceKeybinding('\\u001bd', {\n\tprimary: KeyMod.CtrlCmd | KeyCode.Delete,\n\tmac: { primary: KeyMod.Alt | KeyCode.Delete }\n});\n// Delete to line start: ctrl+u\nregisterSendSequenceKeybinding('\\u0015', {\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace }\n});\n// Move to line start: ctrl+A\nregisterSendSequenceKeybinding(String.fromCharCode('A'.charCodeAt(0) - 64), {\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.LeftArrow }\n});\n// Move to line end: ctrl+E\nregisterSendSequenceKeybinding(String.fromCharCode('E'.charCodeAt(0) - 64), {\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.RightArrow }\n});\n// NUL: ctrl+shift+2\nregisterSendSequenceKeybinding('\\u0000', {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Digit2,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Digit2 }\n});\n// RS: ctrl+shift+6\nregisterSendSequenceKeybinding('\\u001e', {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Digit6,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Digit6 }\n});\n// US (Undo): ctrl+/\nregisterSendSequenceKeybinding('\\u001f', {\n\tprimary: KeyMod.CtrlCmd | KeyCode.Slash,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.Slash }\n});\n\nsetupTerminalCommands();\n\nsetupTerminalMenus();\n\nregisterColors();\n"],
  "mappings": "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",
  "names": ["Constants"]
}
