{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminal.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { isIOS, isWindows } from \"../../../../base/common/platform.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport \"./media/terminal.css\";\nimport \"./media/terminalVoice.css\";\nimport \"./media/widgets.css\";\nimport \"./media/xterm.css\";\nimport * as nls from \"../../../../nls.js\";\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tExtensions as DragAndDropExtensions,\n\ttype IDragAndDropContributionRegistry,\n\ttype IDraggedResourceEditorInput,\n} from \"../../../../platform/dnd/browser/dnd.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\ttype IKeybindings,\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\ttype IQuickAccessRegistry,\n\tExtensions as QuickAccessExtensions,\n} from \"../../../../platform/quickinput/common/quickAccess.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tGeneralShellType,\n\tITerminalLogService,\n\tWindowsShellType,\n} from \"../../../../platform/terminal/common/terminal.js\";\nimport { TerminalLogService } from \"../../../../platform/terminal/common/terminalLogService.js\";\nimport { registerTerminalPlatformConfiguration } from \"../../../../platform/terminal/common/terminalPlatformConfiguration.js\";\nimport {\n\tEditorPaneDescriptor,\n\ttype IEditorPaneRegistry,\n} from \"../../../browser/editor.js\";\nimport { ViewPaneContainer } from \"../../../browser/parts/views/viewPaneContainer.js\";\nimport { getQuickNavigateHandler } from \"../../../browser/quickaccess.js\";\nimport {\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n} from \"../../../common/editor.js\";\nimport {\n\ttype IViewContainersRegistry,\n\ttype IViewsRegistry,\n\tExtensions as ViewContainerExtensions,\n\tViewContainerLocation,\n} from \"../../../common/views.js\";\nimport {\n\tITerminalProfileService,\n\tTERMINAL_VIEW_ID,\n\tTerminalCommandId,\n} from \"../common/terminal.js\";\nimport { registerColors } from \"../common/terminalColorRegistry.js\";\nimport { registerTerminalConfiguration } from \"../common/terminalConfiguration.js\";\nimport {\n\tTerminalContextKeyStrings,\n\tTerminalContextKeys,\n} from \"../common/terminalContextKey.js\";\nimport { terminalStrings } from \"../common/terminalStrings.js\";\nimport { RemoteTerminalBackendContribution } from \"./remoteTerminalBackend.js\";\nimport {\n\tITerminalConfigurationService,\n\tITerminalEditorService,\n\tITerminalGroupService,\n\tITerminalInstanceService,\n\tITerminalService,\n\tTerminalDataTransfers,\n\tterminalEditorId,\n} from \"./terminal.js\";\nimport {\n\tregisterTerminalActions,\n\tterminalSendSequenceCommand,\n} from \"./terminalActions.js\";\nimport { setupTerminalCommands } from \"./terminalCommands.js\";\nimport { TerminalConfigurationService } from \"./terminalConfigurationService.js\";\nimport { TerminalEditor } from \"./terminalEditor.js\";\nimport { TerminalEditorInput } from \"./terminalEditorInput.js\";\nimport { TerminalInputSerializer } from \"./terminalEditorSerializer.js\";\nimport { TerminalEditorService } from \"./terminalEditorService.js\";\nimport { TerminalGroupService } from \"./terminalGroupService.js\";\nimport { terminalViewIcon } from \"./terminalIcons.js\";\nimport { TerminalInstanceService } from \"./terminalInstanceService.js\";\nimport { TerminalMainContribution } from \"./terminalMainContribution.js\";\nimport { setupTerminalMenus } from \"./terminalMenus.js\";\nimport { TerminalProfileService } from \"./terminalProfileService.js\";\nimport { TerminalQuickAccessProvider } from \"./terminalQuickAccess.js\";\nimport { TerminalService } from \"./terminalService.js\";\nimport { TerminalViewPane } from \"./terminalView.js\";\nimport { TerminalWslRecommendationContribution } from \"./terminalWslRecommendationContribution.js\";\n\n// HACK: This file should not depend on terminalContrib\n// eslint-disable-next-line local/code-import-patterns\nimport { TerminalSuggestSettingId } from \"../../terminalContrib/suggest/common/terminalSuggestConfiguration.js\";\n\n// Register services\nregisterSingleton(\n\tITerminalLogService,\n\tTerminalLogService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITerminalConfigurationService,\n\tTerminalConfigurationService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(ITerminalService, TerminalService, InstantiationType.Delayed);\nregisterSingleton(\n\tITerminalEditorService,\n\tTerminalEditorService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITerminalGroupService,\n\tTerminalGroupService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITerminalInstanceService,\n\tTerminalInstanceService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITerminalProfileService,\n\tTerminalProfileService,\n\tInstantiationType.Delayed,\n);\n\n// Register quick accesses\nconst quickAccessRegistry = Registry.as<IQuickAccessRegistry>(\n\tQuickAccessExtensions.Quickaccess,\n);\nconst inTerminalsPicker = \"inTerminalPicker\";\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: TerminalQuickAccessProvider,\n\tprefix: TerminalQuickAccessProvider.PREFIX,\n\tcontextKey: inTerminalsPicker,\n\tplaceholder: nls.localize(\n\t\t\"tasksQuickAccessPlaceholder\",\n\t\t\"Type the name of a terminal to open.\",\n\t),\n\thelpEntries: [\n\t\t{\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"tasksQuickAccessHelp\",\n\t\t\t\t\"Show All Opened Terminals\",\n\t\t\t),\n\t\t\tcommandId: TerminalCommandId.QuickOpenTerm,\n\t\t},\n\t],\n});\nconst quickAccessNavigateNextInTerminalPickerId =\n\t\"workbench.action.quickOpenNavigateNextInTerminalPicker\";\nCommandsRegistry.registerCommand({\n\tid: quickAccessNavigateNextInTerminalPickerId,\n\thandler: getQuickNavigateHandler(\n\t\tquickAccessNavigateNextInTerminalPickerId,\n\t\ttrue,\n\t),\n});\nconst quickAccessNavigatePreviousInTerminalPickerId =\n\t\"workbench.action.quickOpenNavigatePreviousInTerminalPicker\";\nCommandsRegistry.registerCommand({\n\tid: quickAccessNavigatePreviousInTerminalPickerId,\n\thandler: getQuickNavigateHandler(\n\t\tquickAccessNavigatePreviousInTerminalPickerId,\n\t\tfalse,\n\t),\n});\n\n// Register workbench contributions\n// This contribution blocks startup as it's critical to enable the web embedder window.createTerminal API\nregisterWorkbenchContribution2(\n\tTerminalMainContribution.ID,\n\tTerminalMainContribution,\n\tWorkbenchPhase.BlockStartup,\n);\nregisterWorkbenchContribution2(\n\tRemoteTerminalBackendContribution.ID,\n\tRemoteTerminalBackendContribution,\n\tWorkbenchPhase.AfterRestored,\n);\nregisterWorkbenchContribution2(\n\tTerminalWslRecommendationContribution.ID,\n\tTerminalWslRecommendationContribution,\n\tWorkbenchPhase.Eventually,\n);\n\n// Register configurations\nregisterTerminalPlatformConfiguration();\nregisterTerminalConfiguration();\n\n// Register editor/dnd contributions\nRegistry.as<IEditorFactoryRegistry>(\n\tEditorExtensions.EditorFactory,\n).registerEditorSerializer(TerminalEditorInput.ID, TerminalInputSerializer);\nRegistry.as<IEditorPaneRegistry>(\n\tEditorExtensions.EditorPane,\n).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tTerminalEditor,\n\t\tterminalEditorId,\n\t\tterminalStrings.terminal,\n\t),\n\t[new SyncDescriptor(TerminalEditorInput)],\n);\nRegistry.as<IDragAndDropContributionRegistry>(\n\tDragAndDropExtensions.DragAndDropContribution,\n).register({\n\tdataFormatKey: TerminalDataTransfers.Terminals,\n\tgetEditorInputs(data) {\n\t\tconst editors: IDraggedResourceEditorInput[] = [];\n\t\ttry {\n\t\t\tconst terminalEditors: string[] = JSON.parse(data);\n\t\t\tfor (const terminalEditor of terminalEditors) {\n\t\t\t\teditors.push({ resource: URI.parse(terminalEditor) });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// Invalid transfer\n\t\t}\n\t\treturn editors;\n\t},\n\tsetData(resources, event) {\n\t\tconst terminalResources = resources.filter(\n\t\t\t({ resource }) => resource.scheme === Schemas.vscodeTerminal,\n\t\t);\n\t\tif (terminalResources.length) {\n\t\t\tevent.dataTransfer?.setData(\n\t\t\t\tTerminalDataTransfers.Terminals,\n\t\t\t\tJSON.stringify(\n\t\t\t\t\tterminalResources.map(({ resource }) =>\n\t\t\t\t\t\tresource.toString(),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t},\n});\n\n// Register views\nconst VIEW_CONTAINER = Registry.as<IViewContainersRegistry>(\n\tViewContainerExtensions.ViewContainersRegistry,\n).registerViewContainer(\n\t{\n\t\tid: TERMINAL_VIEW_ID,\n\t\ttitle: nls.localize2(\"terminal\", \"Terminal\"),\n\t\ticon: terminalViewIcon,\n\t\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [\n\t\t\tTERMINAL_VIEW_ID,\n\t\t\t{ mergeViewWithContainerWhenSingleView: true },\n\t\t]),\n\t\tstorageId: TERMINAL_VIEW_ID,\n\t\thideIfEmpty: true,\n\t\torder: 3,\n\t},\n\tViewContainerLocation.Panel,\n\t{ doNotRegisterOpenCommand: true, isDefault: true },\n);\nRegistry.as<IViewsRegistry>(\n\tViewContainerExtensions.ViewsRegistry,\n).registerViews(\n\t[\n\t\t{\n\t\t\tid: TERMINAL_VIEW_ID,\n\t\t\tname: nls.localize2(\"terminal\", \"Terminal\"),\n\t\t\tcontainerIcon: terminalViewIcon,\n\t\t\tcanToggleVisibility: false,\n\t\t\tcanMoveView: true,\n\t\t\tctorDescriptor: new SyncDescriptor(TerminalViewPane),\n\t\t\topenCommandActionDescriptor: {\n\t\t\t\tid: TerminalCommandId.Toggle,\n\t\t\t\tmnemonicTitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miToggleIntegratedTerminal\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Terminal\",\n\t\t\t\t),\n\t\t\t\tkeybindings: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backquote,\n\t\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Backquote },\n\t\t\t\t},\n\t\t\t\torder: 3,\n\t\t\t},\n\t\t},\n\t],\n\tVIEW_CONTAINER,\n);\n\n// Register actions\nregisterTerminalActions();\n\nfunction registerSendSequenceKeybinding(\n\ttext: string,\n\trule: { when?: ContextKeyExpression } & IKeybindings,\n): void {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: TerminalCommandId.SendSequence,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: rule.when || TerminalContextKeys.focus,\n\t\tprimary: rule.primary,\n\t\tmac: rule.mac,\n\t\tlinux: rule.linux,\n\t\twin: rule.win,\n\t\thandler: terminalSendSequenceCommand,\n\t\targs: { text },\n\t});\n}\n\nenum Constants {\n\t/** The text representation of `^<letter>` is `'A'.charCodeAt(0) + 1`. */\n\tCtrlLetterOffset = 64,\n}\n\n// An extra Windows-only ctrl+v keybinding is used for pwsh that sends ctrl+v directly to the\n// shell, this gets handled by PSReadLine which properly handles multi-line pastes. This is\n// disabled in accessibility mode as PowerShell does not run PSReadLine when it detects a screen\n// reader. This works even when clipboard.readText is not supported.\nif (isWindows) {\n\tregisterSendSequenceKeybinding(\n\t\tString.fromCharCode(\"V\".charCodeAt(0) - Constants.CtrlLetterOffset),\n\t\t{\n\t\t\t// ctrl+v\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tTerminalContextKeys.focus,\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\tTerminalContextKeyStrings.ShellType,\n\t\t\t\t\tGeneralShellType.PowerShell,\n\t\t\t\t),\n\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(),\n\t\t\t),\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyV,\n\t\t},\n\t);\n}\n\n// Map certain keybindings in pwsh to unused keys which get handled by PSReadLine handlers in the\n// shell integration script. This allows keystrokes that cannot be sent via VT sequences to work.\n// See https://github.com/microsoft/terminal/issues/879#issuecomment-497775007\nregisterSendSequenceKeybinding(\"\\x1b[24~a\", {\n\t// F12,a -> ctrl+space (MenuComplete)\n\twhen: ContextKeyExpr.and(\n\t\tTerminalContextKeys.focus,\n\t\tContextKeyExpr.equals(\n\t\t\tTerminalContextKeyStrings.ShellType,\n\t\t\tGeneralShellType.PowerShell,\n\t\t),\n\t\tTerminalContextKeys.terminalShellIntegrationEnabled,\n\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(),\n\t),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.Space },\n});\nregisterSendSequenceKeybinding(\"\\x1b[24~b\", {\n\t// F12,b -> alt+space (SetMark)\n\twhen: ContextKeyExpr.and(\n\t\tTerminalContextKeys.focus,\n\t\tContextKeyExpr.equals(\n\t\t\tTerminalContextKeyStrings.ShellType,\n\t\t\tGeneralShellType.PowerShell,\n\t\t),\n\t\tTerminalContextKeys.terminalShellIntegrationEnabled,\n\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(),\n\t),\n\tprimary: KeyMod.Alt | KeyCode.Space,\n});\nregisterSendSequenceKeybinding(\"\\x1b[24~c\", {\n\t// F12,c -> shift+enter (AddLine)\n\twhen: ContextKeyExpr.and(\n\t\tTerminalContextKeys.focus,\n\t\tContextKeyExpr.equals(\n\t\t\tTerminalContextKeyStrings.ShellType,\n\t\t\tGeneralShellType.PowerShell,\n\t\t),\n\t\tTerminalContextKeys.terminalShellIntegrationEnabled,\n\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(),\n\t),\n\tprimary: KeyMod.Shift | KeyCode.Enter,\n});\nregisterSendSequenceKeybinding(\"\\x1b[24~d\", {\n\t// F12,d -> shift+end (SelectLine) - HACK: \\x1b[1;2F is supposed to work but it doesn't\n\twhen: ContextKeyExpr.and(\n\t\tTerminalContextKeys.focus,\n\t\tContextKeyExpr.equals(\n\t\t\tTerminalContextKeyStrings.ShellType,\n\t\t\tGeneralShellType.PowerShell,\n\t\t),\n\t\tTerminalContextKeys.terminalShellIntegrationEnabled,\n\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(),\n\t),\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.RightArrow },\n});\nregisterSendSequenceKeybinding(\"\\x1b[24~e\", {\n\t// F12,e -> ctrl+space (Native suggest)\n\twhen: ContextKeyExpr.and(\n\t\tTerminalContextKeys.focus,\n\t\tContextKeyExpr.equals(\n\t\t\tTerminalContextKeyStrings.ShellType,\n\t\t\tGeneralShellType.PowerShell,\n\t\t),\n\t\tTerminalContextKeys.terminalShellIntegrationEnabled,\n\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(),\n\t\tContextKeyExpr.equals(\n\t\t\t`config.${TerminalSuggestSettingId.Enabled}`,\n\t\t\ttrue,\n\t\t),\n\t),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.Space },\n});\n\n// Always on pwsh keybindings\nregisterSendSequenceKeybinding(\"\\x1b[1;2H\", {\n\t// Shift+home\n\twhen: ContextKeyExpr.and(\n\t\tTerminalContextKeys.focus,\n\t\tContextKeyExpr.equals(\n\t\t\tTerminalContextKeyStrings.ShellType,\n\t\t\tGeneralShellType.PowerShell,\n\t\t),\n\t),\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.LeftArrow },\n});\n\n// Map ctrl+alt+r -> ctrl+r when in accessibility mode due to default run recent command keybinding\nregisterSendSequenceKeybinding(\"\\x12\", {\n\twhen: ContextKeyExpr.and(\n\t\tTerminalContextKeys.focus,\n\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED,\n\t),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyR,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.KeyR },\n});\n\n// Map ctrl+alt+g -> ctrl+g due to default go to recent directory keybinding\nregisterSendSequenceKeybinding(\"\\x07\", {\n\twhen: TerminalContextKeys.focus,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyG,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.KeyG },\n});\n\n// send ctrl+c to the iPad when the terminal is focused and ctrl+c is pressed to kill the process (work around for #114009)\nif (isIOS) {\n\tregisterSendSequenceKeybinding(\n\t\tString.fromCharCode(\"C\".charCodeAt(0) - Constants.CtrlLetterOffset),\n\t\t{\n\t\t\t// ctrl+c\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus),\n\t\t\tprimary: KeyMod.WinCtrl | KeyCode.KeyC,\n\t\t},\n\t);\n}\n\n// Delete word left: ctrl+w\nregisterSendSequenceKeybinding(\n\tString.fromCharCode(\"W\".charCodeAt(0) - Constants.CtrlLetterOffset),\n\t{\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t\tmac: { primary: KeyMod.Alt | KeyCode.Backspace },\n\t},\n);\nif (isWindows) {\n\t// Delete word left: ctrl+h\n\t// Windows cmd.exe requires ^H to delete full word left\n\tregisterSendSequenceKeybinding(\n\t\tString.fromCharCode(\"H\".charCodeAt(0) - Constants.CtrlLetterOffset),\n\t\t{\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tTerminalContextKeys.focus,\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\tTerminalContextKeyStrings.ShellType,\n\t\t\t\t\tWindowsShellType.CommandPrompt,\n\t\t\t\t),\n\t\t\t),\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t\t},\n\t);\n}\n// Delete word right: alt+d [27, 100]\nregisterSendSequenceKeybinding(\"\\u001bd\", {\n\tprimary: KeyMod.CtrlCmd | KeyCode.Delete,\n\tmac: { primary: KeyMod.Alt | KeyCode.Delete },\n});\n// Delete to line start: ctrl+u\nregisterSendSequenceKeybinding(\"\\u0015\", {\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace },\n});\n// Move to line start: ctrl+A\nregisterSendSequenceKeybinding(String.fromCharCode(\"A\".charCodeAt(0) - 64), {\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.LeftArrow },\n});\n// Move to line end: ctrl+E\nregisterSendSequenceKeybinding(String.fromCharCode(\"E\".charCodeAt(0) - 64), {\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.RightArrow },\n});\n// NUL: ctrl+shift+2\nregisterSendSequenceKeybinding(\"\\u0000\", {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Digit2,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Digit2 },\n});\n// RS: ctrl+shift+6\nregisterSendSequenceKeybinding(\"\\u001e\", {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Digit6,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Digit6 },\n});\n// US (Undo): ctrl+/\nregisterSendSequenceKeybinding(\"\\u001f\", {\n\tprimary: KeyMod.CtrlCmd | KeyCode.Slash,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.Slash },\n});\n\nsetupTerminalCommands();\n\nsetupTerminalMenus();\n\nregisterColors();\n"],
  "mappings": "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",
  "names": ["Constants"]
}
