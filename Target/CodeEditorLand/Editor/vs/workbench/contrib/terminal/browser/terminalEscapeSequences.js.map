{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalEscapeSequences.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The identifier for the first numeric parameter (`Ps`) for OSC commands used by shell integration.\n */\nenum ShellIntegrationOscPs {\n\t/**\n\t * Sequences pioneered by FinalTerm.\n\t */\n\tFinalTerm = 133,\n\t/**\n\t * Sequences pioneered by VS Code. The number is derived from the least significant digit of\n\t * \"VSC\" when encoded in hex (\"VSC\" = 0x56, 0x53, 0x43).\n\t */\n\tVSCode = 633,\n\t/**\n\t * Sequences pioneered by iTerm.\n\t */\n\tITerm = 1337,\n}\n\n/**\n * VS Code-specific shell integration sequences. Some of these are based on common alternatives like\n * those pioneered in FinalTerm. The decision to move to entirely custom sequences was to try to\n * improve reliability and prevent the possibility of applications confusing the terminal.\n */\nexport enum VSCodeOscPt {\n\t/**\n\t * The start of the prompt, this is expected to always appear at the start of a line.\n\t * Based on FinalTerm's `OSC 133 ; A ST`.\n\t */\n\tPromptStart = \"A\",\n\n\t/**\n\t * The start of a command, ie. where the user inputs their command.\n\t * Based on FinalTerm's `OSC 133 ; B ST`.\n\t */\n\tCommandStart = \"B\",\n\n\t/**\n\t * Sent just before the command output begins.\n\t * Based on FinalTerm's `OSC 133 ; C ST`.\n\t */\n\tCommandExecuted = \"C\",\n\n\t/**\n\t * Sent just after a command has finished. The exit code is optional, when not specified it\n\t * means no command was run (ie. enter on empty prompt or ctrl+c).\n\t * Based on FinalTerm's `OSC 133 ; D [; <ExitCode>] ST`.\n\t */\n\tCommandFinished = \"D\",\n\n\t/**\n\t * Explicitly set the command line. This helps workaround problems with conpty not having a\n\t * passthrough mode by providing an option on Windows to send the command that was run. With\n\t * this sequence there's no need for the guessing based on the unreliable cursor positions that\n\t * would otherwise be required.\n\t */\n\tCommandLine = \"E\",\n\n\t/**\n\t * Similar to prompt start but for line continuations.\n\t */\n\tContinuationStart = \"F\",\n\n\t/**\n\t * Similar to command start but for line continuations.\n\t */\n\tContinuationEnd = \"G\",\n\n\t/**\n\t * The start of the right prompt.\n\t */\n\tRightPromptStart = \"H\",\n\n\t/**\n\t * The end of the right prompt.\n\t */\n\tRightPromptEnd = \"I\",\n\n\t/**\n\t * Set an arbitrary property: `OSC 633 ; P ; <Property>=<Value> ST`, only known properties will\n\t * be handled.\n\t */\n\tProperty = \"P\",\n}\n\nexport enum VSCodeOscProperty {\n\tTask = \"Task\",\n\tCwd = \"Cwd\",\n}\n\n/**\n * ITerm sequences\n */\nexport enum ITermOscPt {\n\t/**\n\t * Based on ITerm's `OSC 1337 ; SetMark` sets a mark on the scrollbar\n\t */\n\tSetMark = \"SetMark\",\n}\n\nexport function VSCodeSequence(\n\tosc: VSCodeOscPt,\n\tdata?: string | VSCodeOscProperty,\n): string {\n\treturn oscSequence(ShellIntegrationOscPs.VSCode, osc, data);\n}\n\nexport function ITermSequence(osc: ITermOscPt, data?: string): string {\n\treturn oscSequence(ShellIntegrationOscPs.ITerm, osc, data);\n}\n\nfunction oscSequence(ps: number, pt: string, data?: string): string {\n\tlet result = `\\x1b]${ps};${pt}`;\n\tif (data) {\n\t\tresult += `;${data}`;\n\t}\n\tresult += `\\x07`;\n\treturn result;\n}\n"],
  "mappings": ";;AAQA,IAAK,wBAAL,kBAAKA,2BAAL;AAIC,EAAAA,8CAAA,eAAY,OAAZ;AAKA,EAAAA,8CAAA,YAAS,OAAT;AAIA,EAAAA,8CAAA,WAAQ,QAAR;AAbI,SAAAA;AAAA,GAAA;AAqBE,IAAK,cAAL,kBAAKC,iBAAL;AAKN,EAAAA,aAAA,iBAAc;AAMd,EAAAA,aAAA,kBAAe;AAMf,EAAAA,aAAA,qBAAkB;AAOlB,EAAAA,aAAA,qBAAkB;AAQlB,EAAAA,aAAA,iBAAc;AAKd,EAAAA,aAAA,uBAAoB;AAKpB,EAAAA,aAAA,qBAAkB;AAKlB,EAAAA,aAAA,sBAAmB;AAKnB,EAAAA,aAAA,oBAAiB;AAMjB,EAAAA,aAAA,cAAW;AA1DA,SAAAA;AAAA,GAAA;AA6DL,IAAK,oBAAL,kBAAKC,uBAAL;AACN,EAAAA,mBAAA,UAAO;AACP,EAAAA,mBAAA,SAAM;AAFK,SAAAA;AAAA,GAAA;AAQL,IAAK,aAAL,kBAAKC,gBAAL;AAIN,EAAAA,YAAA,aAAU;AAJC,SAAAA;AAAA,GAAA;AAOL,SAAS,eACf,KACA,MACS;AACT,SAAO,YAAY,kBAA8B,KAAK,IAAI;AAC3D;AALgB;AAOT,SAAS,cAAc,KAAiB,MAAuB;AACrE,SAAO,YAAY,kBAA6B,KAAK,IAAI;AAC1D;AAFgB;AAIhB,SAAS,YAAY,IAAY,IAAY,MAAuB;AACnE,MAAI,SAAS,QAAQ,EAAE,IAAI,EAAE;AAC7B,MAAI,MAAM;AACT,cAAU,IAAI,IAAI;AAAA,EACnB;AACA,YAAU;AACV,SAAO;AACR;AAPS;",
  "names": ["ShellIntegrationOscPs", "VSCodeOscPt", "VSCodeOscProperty", "ITermOscPt"]
}
