{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IBuffer, ITerminalOptions, ITheme, Terminal as RawXtermTerminal, LogLevel as XtermLogLevel } from '@xterm/xterm';\nimport type { ISearchOptions, SearchAddon as SearchAddonType } from '@xterm/addon-search';\nimport type { Unicode11Addon as Unicode11AddonType } from '@xterm/addon-unicode11';\nimport type { WebglAddon as WebglAddonType } from '@xterm/addon-webgl';\nimport type { SerializeAddon as SerializeAddonType } from '@xterm/addon-serialize';\nimport type { ImageAddon as ImageAddonType } from '@xterm/addon-image';\nimport type { ClipboardAddon as ClipboardAddonType, ClipboardSelectionType } from '@xterm/addon-clipboard';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { IXtermCore } from '../xterm-private.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { Disposable, DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { IEditorOptions } from '../../../../../editor/common/config/editorOptions.js';\nimport { IShellIntegration, ITerminalLogService, TerminalSettingId } from '../../../../../platform/terminal/common/terminal.js';\nimport { ITerminalFont, ITerminalConfiguration } from '../../common/terminal.js';\nimport { IMarkTracker, IInternalXtermTerminal, IXtermTerminal, IXtermColorProvider, XtermTerminalConstants, IXtermAttachToElementOptions, IDetachedXtermTerminal, ITerminalConfigurationService } from '../terminal.js';\nimport { LogLevel } from '../../../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { MarkNavigationAddon, ScrollPosition } from './markNavigationAddon.js';\nimport { localize } from '../../../../../nls.js';\nimport { IColorTheme, IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { PANEL_BACKGROUND } from '../../../../common/theme.js';\nimport { TERMINAL_FOREGROUND_COLOR, TERMINAL_BACKGROUND_COLOR, TERMINAL_CURSOR_FOREGROUND_COLOR, TERMINAL_CURSOR_BACKGROUND_COLOR, ansiColorIdentifiers, TERMINAL_SELECTION_BACKGROUND_COLOR, TERMINAL_FIND_MATCH_BACKGROUND_COLOR, TERMINAL_FIND_MATCH_HIGHLIGHT_BACKGROUND_COLOR, TERMINAL_FIND_MATCH_BORDER_COLOR, TERMINAL_OVERVIEW_RULER_FIND_MATCH_FOREGROUND_COLOR, TERMINAL_FIND_MATCH_HIGHLIGHT_BORDER_COLOR, TERMINAL_OVERVIEW_RULER_CURSOR_FOREGROUND_COLOR, TERMINAL_SELECTION_FOREGROUND_COLOR, TERMINAL_INACTIVE_SELECTION_BACKGROUND_COLOR, TERMINAL_OVERVIEW_RULER_BORDER_COLOR } from '../../common/terminalColorRegistry.js';\nimport { ShellIntegrationAddon } from '../../../../../platform/terminal/common/xterm/shellIntegrationAddon.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { DecorationAddon } from './decorationAddon.js';\nimport { ITerminalCapabilityStore, ITerminalCommand, TerminalCapability } from '../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { importAMDNodeModule } from '../../../../../amdX.js';\nimport { IContextKey, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { TerminalContextKeys } from '../../common/terminalContextKey.js';\nimport { IClipboardService } from '../../../../../platform/clipboard/common/clipboardService.js';\nimport { debounce } from '../../../../../base/common/decorators.js';\nimport { MouseWheelClassifier } from '../../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { IMouseWheelEvent, StandardWheelEvent } from '../../../../../base/browser/mouseEvent.js';\nimport { ILayoutService } from '../../../../../platform/layout/browser/layoutService.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground } from '../../../../../platform/theme/common/colorRegistry.js';\n\nconst enum RenderConstants {\n\tSmoothScrollDuration = 125\n}\n\nlet ClipboardAddon: typeof ClipboardAddonType;\nlet ImageAddon: typeof ImageAddonType;\nlet SearchAddon: typeof SearchAddonType;\nlet SerializeAddon: typeof SerializeAddonType;\nlet Unicode11Addon: typeof Unicode11AddonType;\nlet WebglAddon: typeof WebglAddonType;\n\nfunction getFullBufferLineAsString(lineIndex: number, buffer: IBuffer): { lineData: string | undefined; lineIndex: number } {\n\tlet line = buffer.getLine(lineIndex);\n\tif (!line) {\n\t\treturn { lineData: undefined, lineIndex };\n\t}\n\tlet lineData = line.translateToString(true);\n\twhile (lineIndex > 0 && line.isWrapped) {\n\t\tline = buffer.getLine(--lineIndex);\n\t\tif (!line) {\n\t\t\tbreak;\n\t\t}\n\t\tlineData = line.translateToString(false) + lineData;\n\t}\n\treturn { lineData, lineIndex };\n}\n\n\n// DEBUG: This helper can be used to draw image data to the console, it's commented out as we don't\n//        want to ship it, but this is very useful for investigating texture atlas issues.\n// (console as any).image = (source: ImageData | HTMLCanvasElement, scale: number = 1) => {\n// \tfunction getBox(width: number, height: number) {\n// \t\treturn {\n// \t\t\tstring: '+',\n// \t\t\tstyle: 'font-size: 1px; padding: ' + Math.floor(height/2) + 'px ' + Math.floor(width/2) + 'px; line-height: ' + height + 'px;'\n// \t\t};\n// \t}\n// \tif (source instanceof HTMLCanvasElement) {\n// \t\tsource = source.getContext('2d')?.getImageData(0, 0, source.width, source.height)!;\n// \t}\n// \tconst canvas = document.createElement('canvas');\n// \tcanvas.width = source.width;\n// \tcanvas.height = source.height;\n// \tconst ctx = canvas.getContext('2d')!;\n// \tctx.putImageData(source, 0, 0);\n\n// \tconst sw = source.width * scale;\n// \tconst sh = source.height * scale;\n// \tconst dim = getBox(sw, sh);\n// \tconsole.log(\n// \t\t`Image: ${source.width} x ${source.height}\\n%c${dim.string}`,\n// \t\t`${dim.style}background: url(${canvas.toDataURL()}); background-size: ${sw}px ${sh}px; background-repeat: no-repeat; color: transparent;`\n// \t);\n// \tconsole.groupCollapsed('Zoomed');\n// \tconsole.log(\n// \t\t`%c${dim.string}`,\n// \t\t`${getBox(sw * 10, sh * 10).style}background: url(${canvas.toDataURL()}); background-size: ${sw * 10}px ${sh * 10}px; background-repeat: no-repeat; color: transparent; image-rendering: pixelated;-ms-interpolation-mode: nearest-neighbor;`\n// \t);\n// \tconsole.groupEnd();\n// };\n\n/**\n * Wraps the xterm object with additional functionality. Interaction with the backing process is out\n * of the scope of this class.\n */\nexport class XtermTerminal extends Disposable implements IXtermTerminal, IDetachedXtermTerminal, IInternalXtermTerminal {\n\t/** The raw xterm.js instance */\n\treadonly raw: RawXtermTerminal;\n\tprivate _core: IXtermCore;\n\tprivate static _suggestedRendererType: 'dom' | undefined = undefined;\n\tprivate static _checkedWebglCompatible = false;\n\tprivate _attached?: { container: HTMLElement; options: IXtermAttachToElementOptions };\n\tprivate _isPhysicalMouseWheel = MouseWheelClassifier.INSTANCE.isPhysicalMouseWheel();\n\n\t// Always on addons\n\tprivate _markNavigationAddon: MarkNavigationAddon;\n\tprivate _shellIntegrationAddon: ShellIntegrationAddon;\n\tprivate _decorationAddon: DecorationAddon;\n\n\t// Always on dynamicly imported addons\n\tprivate _clipboardAddon?: ClipboardAddonType;\n\n\t// Optional addons\n\tprivate _searchAddon?: SearchAddonType;\n\tprivate _unicode11Addon?: Unicode11AddonType;\n\tprivate _webglAddon?: WebglAddonType;\n\tprivate _serializeAddon?: SerializeAddonType;\n\tprivate _imageAddon?: ImageAddonType;\n\n\tprivate readonly _attachedDisposables = this._register(new DisposableStore());\n\tprivate readonly _anyTerminalFocusContextKey: IContextKey<boolean>;\n\tprivate readonly _anyFocusedTerminalHasSelection: IContextKey<boolean>;\n\n\tprivate _lastFindResult: { resultIndex: number; resultCount: number } | undefined;\n\tget findResult(): { resultIndex: number; resultCount: number } | undefined { return this._lastFindResult; }\n\n\tget isStdinDisabled(): boolean { return !!this.raw.options.disableStdin; }\n\tget isGpuAccelerated(): boolean { return !!this._webglAddon; }\n\n\tprivate readonly _onDidRequestRunCommand = this._register(new Emitter<{ command: ITerminalCommand; copyAsHtml?: boolean; noNewLine?: boolean }>());\n\treadonly onDidRequestRunCommand = this._onDidRequestRunCommand.event;\n\tprivate readonly _onDidRequestFocus = this._register(new Emitter<void>());\n\treadonly onDidRequestFocus = this._onDidRequestFocus.event;\n\tprivate readonly _onDidRequestSendText = this._register(new Emitter<string>());\n\treadonly onDidRequestSendText = this._onDidRequestSendText.event;\n\tprivate readonly _onDidRequestFreePort = this._register(new Emitter<string>());\n\treadonly onDidRequestFreePort = this._onDidRequestFreePort.event;\n\tprivate readonly _onDidRequestRefreshDimensions = this._register(new Emitter<void>());\n\treadonly onDidRequestRefreshDimensions = this._onDidRequestRefreshDimensions.event;\n\tprivate readonly _onDidChangeFindResults = this._register(new Emitter<{ resultIndex: number; resultCount: number }>());\n\treadonly onDidChangeFindResults = this._onDidChangeFindResults.event;\n\tprivate readonly _onDidChangeSelection = this._register(new Emitter<void>());\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\tprivate readonly _onDidChangeFocus = this._register(new Emitter<boolean>());\n\treadonly onDidChangeFocus = this._onDidChangeFocus.event;\n\tprivate readonly _onDidDispose = this._register(new Emitter<void>());\n\treadonly onDidDispose = this._onDidDispose.event;\n\n\tget markTracker(): IMarkTracker { return this._markNavigationAddon; }\n\tget shellIntegration(): IShellIntegration { return this._shellIntegrationAddon; }\n\n\tget textureAtlas(): Promise<ImageBitmap> | undefined {\n\t\tconst canvas = this._webglAddon?.textureAtlas;\n\t\tif (!canvas) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn createImageBitmap(canvas);\n\t}\n\n\tpublic get isFocused() {\n\t\tif (!this.raw.element) {\n\t\t\treturn false;\n\t\t}\n\t\treturn dom.isAncestorOfActiveElement(this.raw.element);\n\t}\n\n\t/**\n\t * @param xtermCtor The xterm.js constructor, this is passed in so it can be fetched lazily\n\t * outside of this class such that {@link raw} is not nullable.\n\t */\n\tconstructor(\n\t\txtermCtor: typeof RawXtermTerminal,\n\t\tcols: number,\n\t\trows: number,\n\t\tprivate readonly _xtermColorProvider: IXtermColorProvider,\n\t\tprivate readonly _capabilities: ITerminalCapabilityStore,\n\t\tshellIntegrationNonce: string,\n\t\tdisableShellIntegrationReporting: boolean,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ITerminalConfigurationService private readonly _terminalConfigurationService: ITerminalConfigurationService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@ILayoutService layoutService: ILayoutService\n\t) {\n\t\tsuper();\n\t\tconst font = this._terminalConfigurationService.getFont(dom.getActiveWindow(), undefined, true);\n\t\tconst config = this._terminalConfigurationService.config;\n\t\tconst editorOptions = this._configurationService.getValue<IEditorOptions>('editor');\n\n\t\tthis.raw = this._register(new xtermCtor({\n\t\t\tallowProposedApi: true,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tdocumentOverride: layoutService.mainContainer.ownerDocument,\n\t\t\taltClickMovesCursor: config.altClickMovesCursor && editorOptions.multiCursorModifier === 'alt',\n\t\t\tscrollback: config.scrollback,\n\t\t\ttheme: this.getXtermTheme(),\n\t\t\tdrawBoldTextInBrightColors: config.drawBoldTextInBrightColors,\n\t\t\tfontFamily: font.fontFamily,\n\t\t\tfontWeight: config.fontWeight,\n\t\t\tfontWeightBold: config.fontWeightBold,\n\t\t\tfontSize: font.fontSize,\n\t\t\tletterSpacing: font.letterSpacing,\n\t\t\tlineHeight: font.lineHeight,\n\t\t\tlogLevel: vscodeToXtermLogLevel(this._logService.getLevel()),\n\t\t\tlogger: this._logService,\n\t\t\tminimumContrastRatio: config.minimumContrastRatio,\n\t\t\ttabStopWidth: config.tabStopWidth,\n\t\t\tcursorBlink: config.cursorBlinking,\n\t\t\tcursorStyle: vscodeToXtermCursorStyle<'cursorStyle'>(config.cursorStyle),\n\t\t\tcursorInactiveStyle: vscodeToXtermCursorStyle(config.cursorStyleInactive),\n\t\t\tcursorWidth: config.cursorWidth,\n\t\t\tmacOptionIsMeta: config.macOptionIsMeta,\n\t\t\tmacOptionClickForcesSelection: config.macOptionClickForcesSelection,\n\t\t\trightClickSelectsWord: config.rightClickBehavior === 'selectWord',\n\t\t\tfastScrollModifier: 'alt',\n\t\t\tfastScrollSensitivity: config.fastScrollSensitivity,\n\t\t\tscrollSensitivity: config.mouseWheelScrollSensitivity,\n\t\t\twordSeparator: config.wordSeparators,\n\t\t\toverviewRuler: {\n\t\t\t\twidth: 14,\n\t\t\t\tshowTopBorder: true,\n\t\t\t},\n\t\t\tignoreBracketedPasteMode: config.ignoreBracketedPasteMode,\n\t\t\trescaleOverlappingGlyphs: config.rescaleOverlappingGlyphs,\n\t\t\twindowOptions: {\n\t\t\t\tgetWinSizePixels: true,\n\t\t\t\tgetCellSizePixels: true,\n\t\t\t\tgetWinSizeChars: true,\n\t\t\t},\n\t\t}));\n\t\tthis._updateSmoothScrolling();\n\t\tthis._core = (this.raw as any)._core as IXtermCore;\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(async e => {\n\t\t\tif (e.affectsConfiguration(TerminalSettingId.GpuAcceleration)) {\n\t\t\t\tXtermTerminal._suggestedRendererType = undefined;\n\t\t\t}\n\t\t\tif (e.affectsConfiguration('terminal.integrated') || e.affectsConfiguration('editor.fastScrollSensitivity') || e.affectsConfiguration('editor.mouseWheelScrollSensitivity') || e.affectsConfiguration('editor.multiCursorModifier')) {\n\t\t\t\tthis.updateConfig();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(TerminalSettingId.UnicodeVersion)) {\n\t\t\t\tthis._updateUnicodeVersion();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(TerminalSettingId.ShellIntegrationDecorationsEnabled)) {\n\t\t\t\tthis._updateTheme();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._themeService.onDidColorThemeChange(theme => this._updateTheme(theme)));\n\t\tthis._register(this._logService.onDidChangeLogLevel(e => this.raw.options.logLevel = vscodeToXtermLogLevel(e)));\n\n\t\t// Refire events\n\t\tthis._register(this.raw.onSelectionChange(() => {\n\t\t\tthis._onDidChangeSelection.fire();\n\t\t\tif (this.isFocused) {\n\t\t\t\tthis._anyFocusedTerminalHasSelection.set(this.raw.hasSelection());\n\t\t\t}\n\t\t}));\n\n\t\t// Load addons\n\t\tthis._updateUnicodeVersion();\n\t\tthis._markNavigationAddon = this._instantiationService.createInstance(MarkNavigationAddon, _capabilities);\n\t\tthis.raw.loadAddon(this._markNavigationAddon);\n\t\tthis._decorationAddon = this._instantiationService.createInstance(DecorationAddon, this._capabilities);\n\t\tthis._register(this._decorationAddon.onDidRequestRunCommand(e => this._onDidRequestRunCommand.fire(e)));\n\t\tthis.raw.loadAddon(this._decorationAddon);\n\t\tthis._shellIntegrationAddon = new ShellIntegrationAddon(shellIntegrationNonce, disableShellIntegrationReporting, this._telemetryService, this._logService);\n\t\tthis.raw.loadAddon(this._shellIntegrationAddon);\n\t\tthis._getClipboardAddonConstructor().then(ClipboardAddon => {\n\t\t\tthis._clipboardAddon = this._instantiationService.createInstance(ClipboardAddon, undefined, {\n\t\t\t\tasync readText(type: ClipboardSelectionType): Promise<string> {\n\t\t\t\t\treturn _clipboardService.readText(type === 'p' ? 'selection' : 'clipboard');\n\t\t\t\t},\n\t\t\t\tasync writeText(type: ClipboardSelectionType, text: string): Promise<void> {\n\t\t\t\t\treturn _clipboardService.writeText(text, type === 'p' ? 'selection' : 'clipboard');\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.raw.loadAddon(this._clipboardAddon);\n\t\t});\n\n\t\tthis._anyTerminalFocusContextKey = TerminalContextKeys.focusInAny.bindTo(contextKeyService);\n\t\tthis._anyFocusedTerminalHasSelection = TerminalContextKeys.textSelectedInFocused.bindTo(contextKeyService);\n\t}\n\n\t*getBufferReverseIterator(): IterableIterator<string> {\n\t\tfor (let i = this.raw.buffer.active.length; i >= 0; i--) {\n\t\t\tconst { lineData, lineIndex } = getFullBufferLineAsString(i, this.raw.buffer.active);\n\t\t\tif (lineData) {\n\t\t\t\ti = lineIndex;\n\t\t\t\tyield lineData;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getContentsAsHtml(): Promise<string> {\n\t\tif (!this._serializeAddon) {\n\t\t\tconst Addon = await this._getSerializeAddonConstructor();\n\t\t\tthis._serializeAddon = new Addon();\n\t\t\tthis.raw.loadAddon(this._serializeAddon);\n\t\t}\n\n\t\treturn this._serializeAddon.serializeAsHTML();\n\t}\n\n\tasync getSelectionAsHtml(command?: ITerminalCommand): Promise<string> {\n\t\tif (!this._serializeAddon) {\n\t\t\tconst Addon = await this._getSerializeAddonConstructor();\n\t\t\tthis._serializeAddon = new Addon();\n\t\t\tthis.raw.loadAddon(this._serializeAddon);\n\t\t}\n\t\tif (command) {\n\t\t\tconst length = command.getOutput()?.length;\n\t\t\tconst row = command.marker?.line;\n\t\t\tif (!length || !row) {\n\t\t\t\tthrow new Error(`No row ${row} or output length ${length} for command ${command}`);\n\t\t\t}\n\t\t\tthis.raw.select(0, row + 1, length - Math.floor(length / this.raw.cols));\n\t\t}\n\t\tconst result = this._serializeAddon.serializeAsHTML({ onlySelection: true });\n\t\tif (command) {\n\t\t\tthis.raw.clearSelection();\n\t\t}\n\t\treturn result;\n\t}\n\n\tattachToElement(container: HTMLElement, partialOptions?: Partial<IXtermAttachToElementOptions>): HTMLElement {\n\t\tconst options: IXtermAttachToElementOptions = { enableGpu: true, ...partialOptions };\n\t\tif (!this._attached) {\n\t\t\tthis.raw.open(container);\n\t\t}\n\n\t\t// TODO: Move before open so the DOM renderer doesn't initialize\n\t\tif (options.enableGpu) {\n\t\t\tif (this._shouldLoadWebgl()) {\n\t\t\t\tthis._enableWebglRenderer();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.raw.element || !this.raw.textarea) {\n\t\t\tthrow new Error('xterm elements not set after open');\n\t\t}\n\n\t\tconst ad = this._attachedDisposables;\n\t\tad.clear();\n\t\tad.add(dom.addDisposableListener(this.raw.textarea, 'focus', () => this._setFocused(true)));\n\t\tad.add(dom.addDisposableListener(this.raw.textarea, 'blur', () => this._setFocused(false)));\n\t\tad.add(dom.addDisposableListener(this.raw.textarea, 'focusout', () => this._setFocused(false)));\n\n\t\t// Track wheel events in mouse wheel classifier and update smoothScrolling when it changes\n\t\t// as it must be disabled when a trackpad is used\n\t\tad.add(dom.addDisposableListener(this.raw.element, dom.EventType.MOUSE_WHEEL, (e: IMouseWheelEvent) => {\n\t\t\tconst classifier = MouseWheelClassifier.INSTANCE;\n\t\t\tclassifier.acceptStandardWheelEvent(new StandardWheelEvent(e));\n\t\t\tconst value = classifier.isPhysicalMouseWheel();\n\t\t\tif (value !== this._isPhysicalMouseWheel) {\n\t\t\t\tthis._isPhysicalMouseWheel = value;\n\t\t\t\tthis._updateSmoothScrolling();\n\t\t\t}\n\t\t}, { passive: true }));\n\n\t\tthis._attached = { container, options };\n\t\t// Screen must be created at this point as xterm.open is called\n\t\treturn this._attached?.container.querySelector('.xterm-screen')!;\n\t}\n\n\tprivate _setFocused(isFocused: boolean) {\n\t\tthis._onDidChangeFocus.fire(isFocused);\n\t\tthis._anyTerminalFocusContextKey.set(isFocused);\n\t\tthis._anyFocusedTerminalHasSelection.set(isFocused && this.raw.hasSelection());\n\t}\n\n\twrite(data: string | Uint8Array, callback?: () => void): void {\n\t\tthis.raw.write(data, callback);\n\t}\n\n\tresize(columns: number, rows: number): void {\n\t\tthis.raw.resize(columns, rows);\n\t}\n\n\tupdateConfig(): void {\n\t\tconst config = this._terminalConfigurationService.config;\n\t\tthis.raw.options.altClickMovesCursor = config.altClickMovesCursor;\n\t\tthis._setCursorBlink(config.cursorBlinking);\n\t\tthis._setCursorStyle(config.cursorStyle);\n\t\tthis._setCursorStyleInactive(config.cursorStyleInactive);\n\t\tthis._setCursorWidth(config.cursorWidth);\n\t\tthis.raw.options.scrollback = config.scrollback;\n\t\tthis.raw.options.drawBoldTextInBrightColors = config.drawBoldTextInBrightColors;\n\t\tthis.raw.options.minimumContrastRatio = config.minimumContrastRatio;\n\t\tthis.raw.options.tabStopWidth = config.tabStopWidth;\n\t\tthis.raw.options.fastScrollSensitivity = config.fastScrollSensitivity;\n\t\tthis.raw.options.scrollSensitivity = config.mouseWheelScrollSensitivity;\n\t\tthis.raw.options.macOptionIsMeta = config.macOptionIsMeta;\n\t\tconst editorOptions = this._configurationService.getValue<IEditorOptions>('editor');\n\t\tthis.raw.options.altClickMovesCursor = config.altClickMovesCursor && editorOptions.multiCursorModifier === 'alt';\n\t\tthis.raw.options.macOptionClickForcesSelection = config.macOptionClickForcesSelection;\n\t\tthis.raw.options.rightClickSelectsWord = config.rightClickBehavior === 'selectWord';\n\t\tthis.raw.options.wordSeparator = config.wordSeparators;\n\t\tthis.raw.options.customGlyphs = config.customGlyphs;\n\t\tthis.raw.options.ignoreBracketedPasteMode = config.ignoreBracketedPasteMode;\n\t\tthis.raw.options.rescaleOverlappingGlyphs = config.rescaleOverlappingGlyphs;\n\t\tthis.raw.options.overviewRuler = {\n\t\t\twidth: 14,\n\t\t\tshowTopBorder: true,\n\t\t};\n\t\tthis._updateSmoothScrolling();\n\t\tif (this._attached?.options.enableGpu) {\n\t\t\tif (this._shouldLoadWebgl()) {\n\t\t\t\tthis._enableWebglRenderer();\n\t\t\t} else {\n\t\t\t\tthis._disposeOfWebglRenderer();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _updateSmoothScrolling() {\n\t\tthis.raw.options.smoothScrollDuration = this._terminalConfigurationService.config.smoothScrolling && this._isPhysicalMouseWheel ? RenderConstants.SmoothScrollDuration : 0;\n\t}\n\n\tprivate _shouldLoadWebgl(): boolean {\n\t\treturn (this._terminalConfigurationService.config.gpuAcceleration === 'auto' && XtermTerminal._suggestedRendererType === undefined) || this._terminalConfigurationService.config.gpuAcceleration === 'on';\n\t}\n\n\tforceRedraw() {\n\t\tthis.raw.clearTextureAtlas();\n\t}\n\n\tclearDecorations(): void {\n\t\tthis._decorationAddon?.clearDecorations();\n\t}\n\n\tforceRefresh() {\n\t\tthis._core.viewport?._innerRefresh();\n\t}\n\n\tasync findNext(term: string, searchOptions: ISearchOptions): Promise<boolean> {\n\t\tthis._updateFindColors(searchOptions);\n\t\treturn (await this._getSearchAddon()).findNext(term, searchOptions);\n\t}\n\n\tasync findPrevious(term: string, searchOptions: ISearchOptions): Promise<boolean> {\n\t\tthis._updateFindColors(searchOptions);\n\t\treturn (await this._getSearchAddon()).findPrevious(term, searchOptions);\n\t}\n\n\tprivate _updateFindColors(searchOptions: ISearchOptions): void {\n\t\tconst theme = this._themeService.getColorTheme();\n\t\t// Theme color names align with monaco/vscode whereas xterm.js has some different naming.\n\t\t// The mapping is as follows:\n\t\t// - findMatch -> activeMatch\n\t\t// - findMatchHighlight -> match\n\t\tconst terminalBackground = theme.getColor(TERMINAL_BACKGROUND_COLOR) || theme.getColor(PANEL_BACKGROUND);\n\t\tconst findMatchBackground = theme.getColor(TERMINAL_FIND_MATCH_BACKGROUND_COLOR);\n\t\tconst findMatchBorder = theme.getColor(TERMINAL_FIND_MATCH_BORDER_COLOR);\n\t\tconst findMatchOverviewRuler = theme.getColor(TERMINAL_OVERVIEW_RULER_CURSOR_FOREGROUND_COLOR);\n\t\tconst findMatchHighlightBackground = theme.getColor(TERMINAL_FIND_MATCH_HIGHLIGHT_BACKGROUND_COLOR);\n\t\tconst findMatchHighlightBorder = theme.getColor(TERMINAL_FIND_MATCH_HIGHLIGHT_BORDER_COLOR);\n\t\tconst findMatchHighlightOverviewRuler = theme.getColor(TERMINAL_OVERVIEW_RULER_FIND_MATCH_FOREGROUND_COLOR);\n\t\tsearchOptions.decorations = {\n\t\t\tactiveMatchBackground: findMatchBackground?.toString(),\n\t\t\tactiveMatchBorder: findMatchBorder?.toString() || 'transparent',\n\t\t\tactiveMatchColorOverviewRuler: findMatchOverviewRuler?.toString() || 'transparent',\n\t\t\t// decoration bgs don't support the alpha channel so blend it with the regular bg\n\t\t\tmatchBackground: terminalBackground ? findMatchHighlightBackground?.blend(terminalBackground).toString() : undefined,\n\t\t\tmatchBorder: findMatchHighlightBorder?.toString() || 'transparent',\n\t\t\tmatchOverviewRuler: findMatchHighlightOverviewRuler?.toString() || 'transparent'\n\t\t};\n\t}\n\n\tprivate _searchAddonPromise: Promise<SearchAddonType> | undefined;\n\tprivate _getSearchAddon(): Promise<SearchAddonType> {\n\t\tif (!this._searchAddonPromise) {\n\t\t\tthis._searchAddonPromise = this._getSearchAddonConstructor().then((AddonCtor) => {\n\t\t\t\tthis._searchAddon = new AddonCtor({ highlightLimit: XtermTerminalConstants.SearchHighlightLimit });\n\t\t\t\tthis.raw.loadAddon(this._searchAddon);\n\t\t\t\tthis._searchAddon.onDidChangeResults((results: { resultIndex: number; resultCount: number }) => {\n\t\t\t\t\tthis._lastFindResult = results;\n\t\t\t\t\tthis._onDidChangeFindResults.fire(results);\n\t\t\t\t});\n\t\t\t\treturn this._searchAddon;\n\t\t\t});\n\t\t}\n\t\treturn this._searchAddonPromise;\n\t}\n\n\tclearSearchDecorations(): void {\n\t\tthis._searchAddon?.clearDecorations();\n\t}\n\n\tclearActiveSearchDecoration(): void {\n\t\tthis._searchAddon?.clearActiveDecoration();\n\t}\n\n\tgetFont(): ITerminalFont {\n\t\treturn this._terminalConfigurationService.getFont(dom.getWindow(this.raw.element), this._core);\n\t}\n\n\tgetLongestViewportWrappedLineLength(): number {\n\t\tlet maxLineLength = 0;\n\t\tfor (let i = this.raw.buffer.active.length - 1; i >= this.raw.buffer.active.viewportY; i--) {\n\t\t\tconst lineInfo = this._getWrappedLineCount(i, this.raw.buffer.active);\n\t\t\tmaxLineLength = Math.max(maxLineLength, ((lineInfo.lineCount * this.raw.cols) - lineInfo.endSpaces) || 0);\n\t\t\ti = lineInfo.currentIndex;\n\t\t}\n\t\treturn maxLineLength;\n\t}\n\n\tprivate _getWrappedLineCount(index: number, buffer: IBuffer): { lineCount: number; currentIndex: number; endSpaces: number } {\n\t\tlet line = buffer.getLine(index);\n\t\tif (!line) {\n\t\t\tthrow new Error('Could not get line');\n\t\t}\n\t\tlet currentIndex = index;\n\t\tlet endSpaces = 0;\n\t\t// line.length may exceed cols as it doesn't necessarily trim the backing array on resize\n\t\tfor (let i = Math.min(line.length, this.raw.cols) - 1; i >= 0; i--) {\n\t\t\tif (!line?.getCell(i)?.getChars()) {\n\t\t\t\tendSpaces++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\twhile (line?.isWrapped && currentIndex > 0) {\n\t\t\tcurrentIndex--;\n\t\t\tline = buffer.getLine(currentIndex);\n\t\t}\n\t\treturn { lineCount: index - currentIndex + 1, currentIndex, endSpaces };\n\t}\n\n\tscrollDownLine(): void {\n\t\tthis.raw.scrollLines(1);\n\t}\n\n\tscrollDownPage(): void {\n\t\tthis.raw.scrollPages(1);\n\t}\n\n\tscrollToBottom(): void {\n\t\tthis.raw.scrollToBottom();\n\t}\n\n\tscrollUpLine(): void {\n\t\tthis.raw.scrollLines(-1);\n\t}\n\n\tscrollUpPage(): void {\n\t\tthis.raw.scrollPages(-1);\n\t}\n\n\tscrollToTop(): void {\n\t\tthis.raw.scrollToTop();\n\t}\n\n\tscrollToLine(line: number, position: ScrollPosition = ScrollPosition.Top): void {\n\t\tthis.markTracker.scrollToLine(line, position);\n\t}\n\n\tclearBuffer(): void {\n\t\tthis.raw.clear();\n\t\t// xterm.js does not clear the first prompt, so trigger these to simulate\n\t\t// the prompt being written\n\t\tthis._capabilities.get(TerminalCapability.CommandDetection)?.handlePromptStart();\n\t\tthis._capabilities.get(TerminalCapability.CommandDetection)?.handleCommandStart();\n\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.clear);\n\t}\n\n\thasSelection(): boolean {\n\t\treturn this.raw.hasSelection();\n\t}\n\n\tclearSelection(): void {\n\t\tthis.raw.clearSelection();\n\t}\n\n\tselectMarkedRange(fromMarkerId: string, toMarkerId: string, scrollIntoView = false) {\n\t\tconst detectionCapability = this.shellIntegration.capabilities.get(TerminalCapability.BufferMarkDetection);\n\t\tif (!detectionCapability) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst start = detectionCapability.getMark(fromMarkerId);\n\t\tconst end = detectionCapability.getMark(toMarkerId);\n\t\tif (start === undefined || end === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.raw.selectLines(start.line, end.line);\n\t\tif (scrollIntoView) {\n\t\t\tthis.raw.scrollToLine(start.line);\n\t\t}\n\t}\n\n\tselectAll(): void {\n\t\tthis.raw.focus();\n\t\tthis.raw.selectAll();\n\t}\n\n\tfocus(): void {\n\t\tthis.raw.focus();\n\t}\n\n\tasync copySelection(asHtml?: boolean, command?: ITerminalCommand): Promise<void> {\n\t\tif (this.hasSelection() || (asHtml && command)) {\n\t\t\tif (asHtml) {\n\t\t\t\tconst textAsHtml = await this.getSelectionAsHtml(command);\n\t\t\t\tfunction listener(e: any) {\n\t\t\t\t\tif (!e.clipboardData.types.includes('text/plain')) {\n\t\t\t\t\t\te.clipboardData.setData('text/plain', command?.getOutput() ?? '');\n\t\t\t\t\t}\n\t\t\t\t\te.clipboardData.setData('text/html', textAsHtml);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\tconst doc = dom.getDocument(this.raw.element);\n\t\t\t\tdoc.addEventListener('copy', listener);\n\t\t\t\tdoc.execCommand('copy');\n\t\t\t\tdoc.removeEventListener('copy', listener);\n\t\t\t} else {\n\t\t\t\tawait this._clipboardService.writeText(this.raw.getSelection());\n\t\t\t}\n\t\t} else {\n\t\t\tthis._notificationService.warn(localize('terminal.integrated.copySelection.noSelection', 'The terminal has no selection to copy'));\n\t\t}\n\t}\n\n\tprivate _setCursorBlink(blink: boolean): void {\n\t\tif (this.raw.options.cursorBlink !== blink) {\n\t\t\tthis.raw.options.cursorBlink = blink;\n\t\t\tthis.raw.refresh(0, this.raw.rows - 1);\n\t\t}\n\t}\n\n\tprivate _setCursorStyle(style: ITerminalConfiguration['cursorStyle']): void {\n\t\tconst mapped = vscodeToXtermCursorStyle<'cursorStyle'>(style);\n\t\tif (this.raw.options.cursorStyle !== mapped) {\n\t\t\tthis.raw.options.cursorStyle = mapped;\n\t\t}\n\t}\n\n\tprivate _setCursorStyleInactive(style: ITerminalConfiguration['cursorStyleInactive']): void {\n\t\tconst mapped = vscodeToXtermCursorStyle(style);\n\t\tif (this.raw.options.cursorInactiveStyle !== mapped) {\n\t\t\tthis.raw.options.cursorInactiveStyle = mapped;\n\t\t}\n\t}\n\n\tprivate _setCursorWidth(width: number): void {\n\t\tif (this.raw.options.cursorWidth !== width) {\n\t\t\tthis.raw.options.cursorWidth = width;\n\t\t}\n\t}\n\n\tprivate async _enableWebglRenderer(): Promise<void> {\n\t\tif (!this.raw.element || this._webglAddon) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if the the WebGL renderer is compatible with xterm.js:\n\t\t// - https://github.com/microsoft/vscode/issues/190195\n\t\t// - https://github.com/xtermjs/xterm.js/issues/4665\n\t\t// - https://bugs.chromium.org/p/chromium/issues/detail?id=1476475\n\t\tif (!XtermTerminal._checkedWebglCompatible) {\n\t\t\tXtermTerminal._checkedWebglCompatible = true;\n\t\t\tconst checkCanvas = document.createElement('canvas');\n\t\t\tconst checkGl = checkCanvas.getContext('webgl2');\n\t\t\tconst debugInfo = checkGl?.getExtension('WEBGL_debug_renderer_info');\n\t\t\tif (checkGl && debugInfo) {\n\t\t\t\tconst renderer = checkGl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\n\t\t\t\tif (renderer.startsWith('ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero)')) {\n\t\t\t\t\tthis._disableWebglForThisSession();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst Addon = await this._getWebglAddonConstructor();\n\t\tthis._webglAddon = new Addon();\n\t\ttry {\n\t\t\tthis.raw.loadAddon(this._webglAddon);\n\t\t\tthis._logService.trace('Webgl was loaded');\n\t\t\tthis._webglAddon.onContextLoss(() => {\n\t\t\t\tthis._logService.info(`Webgl lost context, disposing of webgl renderer`);\n\t\t\t\tthis._disposeOfWebglRenderer();\n\t\t\t});\n\t\t\tthis._refreshImageAddon();\n\t\t\t// WebGL renderer cell dimensions differ from the DOM renderer, make sure the terminal\n\t\t\t// gets resized after the webgl addon is loaded\n\t\t\tthis._onDidRequestRefreshDimensions.fire();\n\t\t\t// Uncomment to add the texture atlas to the DOM\n\t\t\t// setTimeout(() => {\n\t\t\t// \tif (this._webglAddon?.textureAtlas) {\n\t\t\t// \t\tdocument.body.appendChild(this._webglAddon?.textureAtlas);\n\t\t\t// \t}\n\t\t\t// }, 5000);\n\t\t} catch (e) {\n\t\t\tthis._logService.warn(`Webgl could not be loaded. Falling back to the DOM renderer`, e);\n\t\t\tthis._disableWebglForThisSession();\n\t\t}\n\t}\n\n\tprivate _disableWebglForThisSession() {\n\t\tXtermTerminal._suggestedRendererType = 'dom';\n\t\tthis._disposeOfWebglRenderer();\n\t}\n\n\t@debounce(100)\n\tprivate async _refreshImageAddon(): Promise<void> {\n\t\t// Only allow the image addon when webgl is being used to avoid possible GPU issues\n\t\tif (this._terminalConfigurationService.config.enableImages && this._webglAddon) {\n\t\t\tif (!this._imageAddon) {\n\t\t\t\tconst AddonCtor = await this._getImageAddonConstructor();\n\t\t\t\tthis._imageAddon = new AddonCtor();\n\t\t\t\tthis.raw.loadAddon(this._imageAddon);\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis._imageAddon?.dispose();\n\t\t\t} catch {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t\tthis._imageAddon = undefined;\n\t\t}\n\t}\n\n\tprotected async _getClipboardAddonConstructor(): Promise<typeof ClipboardAddonType> {\n\t\tif (!ClipboardAddon) {\n\t\t\tClipboardAddon = (await importAMDNodeModule<typeof import('@xterm/addon-clipboard')>('@xterm/addon-clipboard', 'lib/addon-clipboard.js')).ClipboardAddon;\n\t\t}\n\t\treturn ClipboardAddon;\n\t}\n\n\tprotected async _getImageAddonConstructor(): Promise<typeof ImageAddonType> {\n\t\tif (!ImageAddon) {\n\t\t\tImageAddon = (await importAMDNodeModule<typeof import('@xterm/addon-image')>('@xterm/addon-image', 'lib/addon-image.js')).ImageAddon;\n\t\t}\n\t\treturn ImageAddon;\n\t}\n\n\tprotected async _getSearchAddonConstructor(): Promise<typeof SearchAddonType> {\n\t\tif (!SearchAddon) {\n\t\t\tSearchAddon = (await importAMDNodeModule<typeof import('@xterm/addon-search')>('@xterm/addon-search', 'lib/addon-search.js')).SearchAddon;\n\t\t}\n\t\treturn SearchAddon;\n\t}\n\n\tprotected async _getUnicode11Constructor(): Promise<typeof Unicode11AddonType> {\n\t\tif (!Unicode11Addon) {\n\t\t\tUnicode11Addon = (await importAMDNodeModule<typeof import('@xterm/addon-unicode11')>('@xterm/addon-unicode11', 'lib/addon-unicode11.js')).Unicode11Addon;\n\t\t}\n\t\treturn Unicode11Addon;\n\t}\n\n\tprotected async _getWebglAddonConstructor(): Promise<typeof WebglAddonType> {\n\t\tif (!WebglAddon) {\n\t\t\tWebglAddon = (await importAMDNodeModule<typeof import('@xterm/addon-webgl')>('@xterm/addon-webgl', 'lib/addon-webgl.js')).WebglAddon;\n\t\t}\n\t\treturn WebglAddon;\n\t}\n\n\tprotected async _getSerializeAddonConstructor(): Promise<typeof SerializeAddonType> {\n\t\tif (!SerializeAddon) {\n\t\t\tSerializeAddon = (await importAMDNodeModule<typeof import('@xterm/addon-serialize')>('@xterm/addon-serialize', 'lib/addon-serialize.js')).SerializeAddon;\n\t\t}\n\t\treturn SerializeAddon;\n\t}\n\n\tprivate _disposeOfWebglRenderer(): void {\n\t\ttry {\n\t\t\tthis._webglAddon?.dispose();\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tthis._webglAddon = undefined;\n\t\tthis._refreshImageAddon();\n\t}\n\n\tgetXtermTheme(theme?: IColorTheme): ITheme {\n\t\tif (!theme) {\n\t\t\ttheme = this._themeService.getColorTheme();\n\t\t}\n\n\t\tconst config = this._terminalConfigurationService.config;\n\t\tconst hideOverviewRuler = ['never', 'gutter'].includes(config.shellIntegration?.decorationsEnabled ?? '');\n\n\t\tconst foregroundColor = theme.getColor(TERMINAL_FOREGROUND_COLOR);\n\t\tconst backgroundColor = this._xtermColorProvider.getBackgroundColor(theme);\n\t\tconst cursorColor = theme.getColor(TERMINAL_CURSOR_FOREGROUND_COLOR) || foregroundColor;\n\t\tconst cursorAccentColor = theme.getColor(TERMINAL_CURSOR_BACKGROUND_COLOR) || backgroundColor;\n\t\tconst selectionBackgroundColor = theme.getColor(TERMINAL_SELECTION_BACKGROUND_COLOR);\n\t\tconst selectionInactiveBackgroundColor = theme.getColor(TERMINAL_INACTIVE_SELECTION_BACKGROUND_COLOR);\n\t\tconst selectionForegroundColor = theme.getColor(TERMINAL_SELECTION_FOREGROUND_COLOR) || undefined;\n\n\t\treturn {\n\t\t\tbackground: backgroundColor?.toString(),\n\t\t\tforeground: foregroundColor?.toString(),\n\t\t\tcursor: cursorColor?.toString(),\n\t\t\tcursorAccent: cursorAccentColor?.toString(),\n\t\t\tselectionBackground: selectionBackgroundColor?.toString(),\n\t\t\tselectionInactiveBackground: selectionInactiveBackgroundColor?.toString(),\n\t\t\tselectionForeground: selectionForegroundColor?.toString(),\n\t\t\toverviewRulerBorder: hideOverviewRuler ? '#0000' : theme.getColor(TERMINAL_OVERVIEW_RULER_BORDER_COLOR)?.toString(),\n\t\t\tscrollbarSliderActiveBackground: theme.getColor(scrollbarSliderActiveBackground)?.toString(),\n\t\t\tscrollbarSliderBackground: theme.getColor(scrollbarSliderBackground)?.toString(),\n\t\t\tscrollbarSliderHoverBackground: theme.getColor(scrollbarSliderHoverBackground)?.toString(),\n\t\t\tblack: theme.getColor(ansiColorIdentifiers[0])?.toString(),\n\t\t\tred: theme.getColor(ansiColorIdentifiers[1])?.toString(),\n\t\t\tgreen: theme.getColor(ansiColorIdentifiers[2])?.toString(),\n\t\t\tyellow: theme.getColor(ansiColorIdentifiers[3])?.toString(),\n\t\t\tblue: theme.getColor(ansiColorIdentifiers[4])?.toString(),\n\t\t\tmagenta: theme.getColor(ansiColorIdentifiers[5])?.toString(),\n\t\t\tcyan: theme.getColor(ansiColorIdentifiers[6])?.toString(),\n\t\t\twhite: theme.getColor(ansiColorIdentifiers[7])?.toString(),\n\t\t\tbrightBlack: theme.getColor(ansiColorIdentifiers[8])?.toString(),\n\t\t\tbrightRed: theme.getColor(ansiColorIdentifiers[9])?.toString(),\n\t\t\tbrightGreen: theme.getColor(ansiColorIdentifiers[10])?.toString(),\n\t\t\tbrightYellow: theme.getColor(ansiColorIdentifiers[11])?.toString(),\n\t\t\tbrightBlue: theme.getColor(ansiColorIdentifiers[12])?.toString(),\n\t\t\tbrightMagenta: theme.getColor(ansiColorIdentifiers[13])?.toString(),\n\t\t\tbrightCyan: theme.getColor(ansiColorIdentifiers[14])?.toString(),\n\t\t\tbrightWhite: theme.getColor(ansiColorIdentifiers[15])?.toString()\n\t\t};\n\t}\n\n\tprivate _updateTheme(theme?: IColorTheme): void {\n\t\tthis.raw.options.theme = this.getXtermTheme(theme);\n\t}\n\n\trefresh() {\n\t\tthis._updateTheme();\n\t\tthis._decorationAddon.refreshLayouts();\n\t}\n\n\tprivate async _updateUnicodeVersion(): Promise<void> {\n\t\tif (!this._unicode11Addon && this._terminalConfigurationService.config.unicodeVersion === '11') {\n\t\t\tconst Addon = await this._getUnicode11Constructor();\n\t\t\tthis._unicode11Addon = new Addon();\n\t\t\tthis.raw.loadAddon(this._unicode11Addon);\n\t\t}\n\t\tif (this.raw.unicode.activeVersion !== this._terminalConfigurationService.config.unicodeVersion) {\n\t\t\tthis.raw.unicode.activeVersion = this._terminalConfigurationService.config.unicodeVersion;\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\t_writeText(data: string): void {\n\t\tthis.raw.write(data);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._anyTerminalFocusContextKey.reset();\n\t\tthis._anyFocusedTerminalHasSelection.reset();\n\t\tthis._onDidDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\nexport function getXtermScaledDimensions(w: Window, font: ITerminalFont, width: number, height: number): { rows: number; cols: number } | null {\n\tif (!font.charWidth || !font.charHeight) {\n\t\treturn null;\n\t}\n\n\t// Because xterm.js converts from CSS pixels to actual pixels through\n\t// the use of canvas, window.devicePixelRatio needs to be used here in\n\t// order to be precise. font.charWidth/charHeight alone as insufficient\n\t// when window.devicePixelRatio changes.\n\tconst scaledWidthAvailable = width * w.devicePixelRatio;\n\n\tconst scaledCharWidth = font.charWidth * w.devicePixelRatio + font.letterSpacing;\n\tconst cols = Math.max(Math.floor(scaledWidthAvailable / scaledCharWidth), 1);\n\n\tconst scaledHeightAvailable = height * w.devicePixelRatio;\n\tconst scaledCharHeight = Math.ceil(font.charHeight * w.devicePixelRatio);\n\tconst scaledLineHeight = Math.floor(scaledCharHeight * font.lineHeight);\n\tconst rows = Math.max(Math.floor(scaledHeightAvailable / scaledLineHeight), 1);\n\n\treturn { rows, cols };\n}\n\nfunction vscodeToXtermLogLevel(logLevel: LogLevel): XtermLogLevel {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tdefault: return 'off';\n\t}\n}\n\ninterface ICursorStyleVscodeToXtermMap {\n\t'cursorStyle': NonNullable<ITerminalOptions['cursorStyle']>;\n\t'cursorStyleInactive': NonNullable<ITerminalOptions['cursorInactiveStyle']>;\n}\nfunction vscodeToXtermCursorStyle<T extends 'cursorStyle' | 'cursorStyleInactive'>(style: ITerminalConfiguration[T]): ICursorStyleVscodeToXtermMap[T] {\n\t// 'line' is used instead of bar in VS Code to be consistent with editor.cursorStyle\n\tif (style === 'line') {\n\t\treturn 'bar';\n\t}\n\treturn style as ICursorStyleVscodeToXtermMap[T];\n}\n"],
  "mappings": "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",
  "names": ["RenderConstants", "ClipboardAddon", "listener"]
}
