{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tClipboardAddon as ClipboardAddonType,\n\tClipboardSelectionType,\n} from \"@xterm/addon-clipboard\";\nimport type { ImageAddon as ImageAddonType } from \"@xterm/addon-image\";\nimport type {\n\tISearchOptions,\n\tSearchAddon as SearchAddonType,\n} from \"@xterm/addon-search\";\nimport type { SerializeAddon as SerializeAddonType } from \"@xterm/addon-serialize\";\nimport type { Unicode11Addon as Unicode11AddonType } from \"@xterm/addon-unicode11\";\nimport type { WebglAddon as WebglAddonType } from \"@xterm/addon-webgl\";\nimport type {\n\tIBuffer,\n\tITerminalOptions,\n\tITheme,\n\tTerminal as RawXtermTerminal,\n\tLogLevel as XtermLogLevel,\n} from \"@xterm/xterm\";\nimport { importAMDNodeModule } from \"../../../../../amdX.js\";\nimport * as dom from \"../../../../../base/browser/dom.js\";\nimport {\n\ttype IMouseWheelEvent,\n\tStandardWheelEvent,\n} from \"../../../../../base/browser/mouseEvent.js\";\nimport { MouseWheelClassifier } from \"../../../../../base/browser/ui/scrollbar/scrollableElement.js\";\nimport { debounce } from \"../../../../../base/common/decorators.js\";\nimport { Emitter } from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../../base/common/lifecycle.js\";\nimport type { IEditorOptions } from \"../../../../../editor/common/config/editorOptions.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport { IClipboardService } from \"../../../../../platform/clipboard/common/clipboardService.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { ILayoutService } from \"../../../../../platform/layout/browser/layoutService.js\";\nimport { LogLevel } from \"../../../../../platform/log/common/log.js\";\nimport { INotificationService } from \"../../../../../platform/notification/common/notification.js\";\nimport { ITelemetryService } from \"../../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype ITerminalCapabilityStore,\n\ttype ITerminalCommand,\n\tTerminalCapability,\n} from \"../../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport {\n\ttype IShellIntegration,\n\tITerminalLogService,\n\tTerminalSettingId,\n} from \"../../../../../platform/terminal/common/terminal.js\";\nimport { ShellIntegrationAddon } from \"../../../../../platform/terminal/common/xterm/shellIntegrationAddon.js\";\nimport {\n\tscrollbarSliderActiveBackground,\n\tscrollbarSliderBackground,\n\tscrollbarSliderHoverBackground,\n} from \"../../../../../platform/theme/common/colorRegistry.js\";\nimport {\n\ttype IColorTheme,\n\tIThemeService,\n} from \"../../../../../platform/theme/common/themeService.js\";\nimport { PANEL_BACKGROUND } from \"../../../../common/theme.js\";\nimport type {\n\tITerminalConfiguration,\n\tITerminalFont,\n} from \"../../common/terminal.js\";\nimport {\n\tTERMINAL_BACKGROUND_COLOR,\n\tTERMINAL_CURSOR_BACKGROUND_COLOR,\n\tTERMINAL_CURSOR_FOREGROUND_COLOR,\n\tTERMINAL_FIND_MATCH_BACKGROUND_COLOR,\n\tTERMINAL_FIND_MATCH_BORDER_COLOR,\n\tTERMINAL_FIND_MATCH_HIGHLIGHT_BACKGROUND_COLOR,\n\tTERMINAL_FIND_MATCH_HIGHLIGHT_BORDER_COLOR,\n\tTERMINAL_FOREGROUND_COLOR,\n\tTERMINAL_INACTIVE_SELECTION_BACKGROUND_COLOR,\n\tTERMINAL_OVERVIEW_RULER_BORDER_COLOR,\n\tTERMINAL_OVERVIEW_RULER_CURSOR_FOREGROUND_COLOR,\n\tTERMINAL_OVERVIEW_RULER_FIND_MATCH_FOREGROUND_COLOR,\n\tTERMINAL_SELECTION_BACKGROUND_COLOR,\n\tTERMINAL_SELECTION_FOREGROUND_COLOR,\n\tansiColorIdentifiers,\n} from \"../../common/terminalColorRegistry.js\";\nimport { TerminalContextKeys } from \"../../common/terminalContextKey.js\";\nimport {\n\ttype IDetachedXtermTerminal,\n\ttype IInternalXtermTerminal,\n\ttype IMarkTracker,\n\tITerminalConfigurationService,\n\ttype IXtermAttachToElementOptions,\n\ttype IXtermColorProvider,\n\ttype IXtermTerminal,\n\tXtermTerminalConstants,\n} from \"../terminal.js\";\nimport type { IXtermCore } from \"../xterm-private.js\";\nimport { DecorationAddon } from \"./decorationAddon.js\";\nimport { MarkNavigationAddon, ScrollPosition } from \"./markNavigationAddon.js\";\n\nenum RenderConstants {\n\tSmoothScrollDuration = 125,\n}\n\nlet ClipboardAddon: typeof ClipboardAddonType;\nlet ImageAddon: typeof ImageAddonType;\nlet SearchAddon: typeof SearchAddonType;\nlet SerializeAddon: typeof SerializeAddonType;\nlet Unicode11Addon: typeof Unicode11AddonType;\nlet WebglAddon: typeof WebglAddonType;\n\nfunction getFullBufferLineAsString(\n\tlineIndex: number,\n\tbuffer: IBuffer,\n): { lineData: string | undefined; lineIndex: number } {\n\tlet line = buffer.getLine(lineIndex);\n\tif (!line) {\n\t\treturn { lineData: undefined, lineIndex };\n\t}\n\tlet lineData = line.translateToString(true);\n\twhile (lineIndex > 0 && line.isWrapped) {\n\t\tline = buffer.getLine(--lineIndex);\n\t\tif (!line) {\n\t\t\tbreak;\n\t\t}\n\t\tlineData = line.translateToString(false) + lineData;\n\t}\n\treturn { lineData, lineIndex };\n}\n\n// DEBUG: This helper can be used to draw image data to the console, it's commented out as we don't\n//        want to ship it, but this is very useful for investigating texture atlas issues.\n// (console as any).image = (source: ImageData | HTMLCanvasElement, scale: number = 1) => {\n// \tfunction getBox(width: number, height: number) {\n// \t\treturn {\n// \t\t\tstring: '+',\n// \t\t\tstyle: 'font-size: 1px; padding: ' + Math.floor(height/2) + 'px ' + Math.floor(width/2) + 'px; line-height: ' + height + 'px;'\n// \t\t};\n// \t}\n// \tif (source instanceof HTMLCanvasElement) {\n// \t\tsource = source.getContext('2d')?.getImageData(0, 0, source.width, source.height)!;\n// \t}\n// \tconst canvas = document.createElement('canvas');\n// \tcanvas.width = source.width;\n// \tcanvas.height = source.height;\n// \tconst ctx = canvas.getContext('2d')!;\n// \tctx.putImageData(source, 0, 0);\n\n// \tconst sw = source.width * scale;\n// \tconst sh = source.height * scale;\n// \tconst dim = getBox(sw, sh);\n// \tconsole.log(\n// \t\t`Image: ${source.width} x ${source.height}\\n%c${dim.string}`,\n// \t\t`${dim.style}background: url(${canvas.toDataURL()}); background-size: ${sw}px ${sh}px; background-repeat: no-repeat; color: transparent;`\n// \t);\n// \tconsole.groupCollapsed('Zoomed');\n// \tconsole.log(\n// \t\t`%c${dim.string}`,\n// \t\t`${getBox(sw * 10, sh * 10).style}background: url(${canvas.toDataURL()}); background-size: ${sw * 10}px ${sh * 10}px; background-repeat: no-repeat; color: transparent; image-rendering: pixelated;-ms-interpolation-mode: nearest-neighbor;`\n// \t);\n// \tconsole.groupEnd();\n// };\n\n/**\n * Wraps the xterm object with additional functionality. Interaction with the backing process is out\n * of the scope of this class.\n */\nexport class XtermTerminal\n\textends Disposable\n\timplements IXtermTerminal, IDetachedXtermTerminal, IInternalXtermTerminal\n{\n\t/** The raw xterm.js instance */\n\treadonly raw: RawXtermTerminal;\n\tprivate _core: IXtermCore;\n\tprivate static _suggestedRendererType: \"dom\" | undefined = undefined;\n\tprivate static _checkedWebglCompatible = false;\n\tprivate _attached?: {\n\t\tcontainer: HTMLElement;\n\t\toptions: IXtermAttachToElementOptions;\n\t};\n\tprivate _isPhysicalMouseWheel =\n\t\tMouseWheelClassifier.INSTANCE.isPhysicalMouseWheel();\n\n\t// Always on addons\n\tprivate _markNavigationAddon: MarkNavigationAddon;\n\tprivate _shellIntegrationAddon: ShellIntegrationAddon;\n\tprivate _decorationAddon: DecorationAddon;\n\n\t// Always on dynamicly imported addons\n\tprivate _clipboardAddon?: ClipboardAddonType;\n\n\t// Optional addons\n\tprivate _searchAddon?: SearchAddonType;\n\tprivate _unicode11Addon?: Unicode11AddonType;\n\tprivate _webglAddon?: WebglAddonType;\n\tprivate _serializeAddon?: SerializeAddonType;\n\tprivate _imageAddon?: ImageAddonType;\n\n\tprivate readonly _attachedDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate readonly _anyTerminalFocusContextKey: IContextKey<boolean>;\n\tprivate readonly _anyFocusedTerminalHasSelection: IContextKey<boolean>;\n\n\tprivate _lastFindResult:\n\t\t| { resultIndex: number; resultCount: number }\n\t\t| undefined;\n\tget findResult(): { resultIndex: number; resultCount: number } | undefined {\n\t\treturn this._lastFindResult;\n\t}\n\n\tget isStdinDisabled(): boolean {\n\t\treturn !!this.raw.options.disableStdin;\n\t}\n\tget isGpuAccelerated(): boolean {\n\t\treturn !!this._webglAddon;\n\t}\n\n\tprivate readonly _onDidRequestRunCommand = this._register(\n\t\tnew Emitter<{\n\t\t\tcommand: ITerminalCommand;\n\t\t\tcopyAsHtml?: boolean;\n\t\t\tnoNewLine?: boolean;\n\t\t}>(),\n\t);\n\treadonly onDidRequestRunCommand = this._onDidRequestRunCommand.event;\n\tprivate readonly _onDidRequestFocus = this._register(new Emitter<void>());\n\treadonly onDidRequestFocus = this._onDidRequestFocus.event;\n\tprivate readonly _onDidRequestSendText = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\treadonly onDidRequestSendText = this._onDidRequestSendText.event;\n\tprivate readonly _onDidRequestFreePort = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\treadonly onDidRequestFreePort = this._onDidRequestFreePort.event;\n\tprivate readonly _onDidRequestRefreshDimensions = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidRequestRefreshDimensions =\n\t\tthis._onDidRequestRefreshDimensions.event;\n\tprivate readonly _onDidChangeFindResults = this._register(\n\t\tnew Emitter<{ resultIndex: number; resultCount: number }>(),\n\t);\n\treadonly onDidChangeFindResults = this._onDidChangeFindResults.event;\n\tprivate readonly _onDidChangeSelection = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\tprivate readonly _onDidChangeFocus = this._register(new Emitter<boolean>());\n\treadonly onDidChangeFocus = this._onDidChangeFocus.event;\n\tprivate readonly _onDidDispose = this._register(new Emitter<void>());\n\treadonly onDidDispose = this._onDidDispose.event;\n\n\tget markTracker(): IMarkTracker {\n\t\treturn this._markNavigationAddon;\n\t}\n\tget shellIntegration(): IShellIntegration {\n\t\treturn this._shellIntegrationAddon;\n\t}\n\n\tget textureAtlas(): Promise<ImageBitmap> | undefined {\n\t\tconst canvas = this._webglAddon?.textureAtlas;\n\t\tif (!canvas) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn createImageBitmap(canvas);\n\t}\n\n\tpublic get isFocused() {\n\t\tif (!this.raw.element) {\n\t\t\treturn false;\n\t\t}\n\t\treturn dom.isAncestorOfActiveElement(this.raw.element);\n\t}\n\n\t/**\n\t * @param xtermCtor The xterm.js constructor, this is passed in so it can be fetched lazily\n\t * outside of this class such that {@link raw} is not nullable.\n\t */\n\tconstructor(\n\t\txtermCtor: typeof RawXtermTerminal,\n\t\tcols: number,\n\t\trows: number,\n\t\tprivate readonly _xtermColorProvider: IXtermColorProvider,\n\t\tprivate readonly _capabilities: ITerminalCapabilityStore,\n\t\tshellIntegrationNonce: string,\n\t\tdisableShellIntegrationReporting: boolean,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService,\n\t\t@INotificationService\n\t\tprivate readonly _notificationService: INotificationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ITelemetryService\n\t\tprivate readonly _telemetryService: ITelemetryService,\n\t\t@ITerminalConfigurationService\n\t\tprivate readonly _terminalConfigurationService: ITerminalConfigurationService,\n\t\t@IClipboardService\n\t\tprivate readonly _clipboardService: IClipboardService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAccessibilitySignalService\n\t\tprivate readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@ILayoutService layoutService: ILayoutService,\n\t) {\n\t\tsuper();\n\t\tconst font = this._terminalConfigurationService.getFont(\n\t\t\tdom.getActiveWindow(),\n\t\t\tundefined,\n\t\t\ttrue,\n\t\t);\n\t\tconst config = this._terminalConfigurationService.config;\n\t\tconst editorOptions =\n\t\t\tthis._configurationService.getValue<IEditorOptions>(\"editor\");\n\n\t\tthis.raw = this._register(\n\t\t\tnew xtermCtor({\n\t\t\t\tallowProposedApi: true,\n\t\t\t\tcols,\n\t\t\t\trows,\n\t\t\t\tdocumentOverride: layoutService.mainContainer.ownerDocument,\n\t\t\t\taltClickMovesCursor:\n\t\t\t\t\tconfig.altClickMovesCursor &&\n\t\t\t\t\teditorOptions.multiCursorModifier === \"alt\",\n\t\t\t\tscrollback: config.scrollback,\n\t\t\t\ttheme: this.getXtermTheme(),\n\t\t\t\tdrawBoldTextInBrightColors: config.drawBoldTextInBrightColors,\n\t\t\t\tfontFamily: font.fontFamily,\n\t\t\t\tfontWeight: config.fontWeight,\n\t\t\t\tfontWeightBold: config.fontWeightBold,\n\t\t\t\tfontSize: font.fontSize,\n\t\t\t\tletterSpacing: font.letterSpacing,\n\t\t\t\tlineHeight: font.lineHeight,\n\t\t\t\tlogLevel: vscodeToXtermLogLevel(this._logService.getLevel()),\n\t\t\t\tlogger: this._logService,\n\t\t\t\tminimumContrastRatio: config.minimumContrastRatio,\n\t\t\t\ttabStopWidth: config.tabStopWidth,\n\t\t\t\tcursorBlink: config.cursorBlinking,\n\t\t\t\tcursorStyle: vscodeToXtermCursorStyle<\"cursorStyle\">(\n\t\t\t\t\tconfig.cursorStyle,\n\t\t\t\t),\n\t\t\t\tcursorInactiveStyle: vscodeToXtermCursorStyle(\n\t\t\t\t\tconfig.cursorStyleInactive,\n\t\t\t\t),\n\t\t\t\tcursorWidth: config.cursorWidth,\n\t\t\t\tmacOptionIsMeta: config.macOptionIsMeta,\n\t\t\t\tmacOptionClickForcesSelection:\n\t\t\t\t\tconfig.macOptionClickForcesSelection,\n\t\t\t\trightClickSelectsWord:\n\t\t\t\t\tconfig.rightClickBehavior === \"selectWord\",\n\t\t\t\tfastScrollModifier: \"alt\",\n\t\t\t\tfastScrollSensitivity: config.fastScrollSensitivity,\n\t\t\t\tscrollSensitivity: config.mouseWheelScrollSensitivity,\n\t\t\t\twordSeparator: config.wordSeparators,\n\t\t\t\toverviewRuler: {\n\t\t\t\t\twidth: 14,\n\t\t\t\t\tshowTopBorder: true,\n\t\t\t\t},\n\t\t\t\tignoreBracketedPasteMode: config.ignoreBracketedPasteMode,\n\t\t\t\trescaleOverlappingGlyphs: config.rescaleOverlappingGlyphs,\n\t\t\t\twindowOptions: {\n\t\t\t\t\tgetWinSizePixels: true,\n\t\t\t\t\tgetCellSizePixels: true,\n\t\t\t\t\tgetWinSizeChars: true,\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t\tthis._updateSmoothScrolling();\n\t\tthis._core = (this.raw as any)._core as IXtermCore;\n\n\t\tthis._register(\n\t\t\tthis._configurationService.onDidChangeConfiguration(async (e) => {\n\t\t\t\tif (e.affectsConfiguration(TerminalSettingId.GpuAcceleration)) {\n\t\t\t\t\tXtermTerminal._suggestedRendererType = undefined;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\"terminal.integrated\") ||\n\t\t\t\t\te.affectsConfiguration(\"editor.fastScrollSensitivity\") ||\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\"editor.mouseWheelScrollSensitivity\",\n\t\t\t\t\t) ||\n\t\t\t\t\te.affectsConfiguration(\"editor.multiCursorModifier\")\n\t\t\t\t) {\n\t\t\t\t\tthis.updateConfig();\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(TerminalSettingId.UnicodeVersion)) {\n\t\t\t\t\tthis._updateUnicodeVersion();\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tTerminalSettingId.ShellIntegrationDecorationsEnabled,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis._updateTheme();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._themeService.onDidColorThemeChange((theme) =>\n\t\t\t\tthis._updateTheme(theme),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._logService.onDidChangeLogLevel(\n\t\t\t\t(e) => (this.raw.options.logLevel = vscodeToXtermLogLevel(e)),\n\t\t\t),\n\t\t);\n\n\t\t// Refire events\n\t\tthis._register(\n\t\t\tthis.raw.onSelectionChange(() => {\n\t\t\t\tthis._onDidChangeSelection.fire();\n\t\t\t\tif (this.isFocused) {\n\t\t\t\t\tthis._anyFocusedTerminalHasSelection.set(\n\t\t\t\t\t\tthis.raw.hasSelection(),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Load addons\n\t\tthis._updateUnicodeVersion();\n\t\tthis._markNavigationAddon = this._instantiationService.createInstance(\n\t\t\tMarkNavigationAddon,\n\t\t\t_capabilities,\n\t\t);\n\t\tthis.raw.loadAddon(this._markNavigationAddon);\n\t\tthis._decorationAddon = this._instantiationService.createInstance(\n\t\t\tDecorationAddon,\n\t\t\tthis._capabilities,\n\t\t);\n\t\tthis._register(\n\t\t\tthis._decorationAddon.onDidRequestRunCommand((e) =>\n\t\t\t\tthis._onDidRequestRunCommand.fire(e),\n\t\t\t),\n\t\t);\n\t\tthis.raw.loadAddon(this._decorationAddon);\n\t\tthis._shellIntegrationAddon = new ShellIntegrationAddon(\n\t\t\tshellIntegrationNonce,\n\t\t\tdisableShellIntegrationReporting,\n\t\t\tthis._telemetryService,\n\t\t\tthis._logService,\n\t\t);\n\t\tthis.raw.loadAddon(this._shellIntegrationAddon);\n\t\tthis._getClipboardAddonConstructor().then((ClipboardAddon) => {\n\t\t\tthis._clipboardAddon = this._instantiationService.createInstance(\n\t\t\t\tClipboardAddon,\n\t\t\t\tundefined,\n\t\t\t\t{\n\t\t\t\t\tasync readText(\n\t\t\t\t\t\ttype: ClipboardSelectionType,\n\t\t\t\t\t): Promise<string> {\n\t\t\t\t\t\treturn _clipboardService.readText(\n\t\t\t\t\t\t\ttype === \"p\" ? \"selection\" : \"clipboard\",\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tasync writeText(\n\t\t\t\t\t\ttype: ClipboardSelectionType,\n\t\t\t\t\t\ttext: string,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\treturn _clipboardService.writeText(\n\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\ttype === \"p\" ? \"selection\" : \"clipboard\",\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t\tthis.raw.loadAddon(this._clipboardAddon);\n\t\t});\n\n\t\tthis._anyTerminalFocusContextKey =\n\t\t\tTerminalContextKeys.focusInAny.bindTo(contextKeyService);\n\t\tthis._anyFocusedTerminalHasSelection =\n\t\t\tTerminalContextKeys.textSelectedInFocused.bindTo(contextKeyService);\n\t}\n\n\t*getBufferReverseIterator(): IterableIterator<string> {\n\t\tfor (let i = this.raw.buffer.active.length; i >= 0; i--) {\n\t\t\tconst { lineData, lineIndex } = getFullBufferLineAsString(\n\t\t\t\ti,\n\t\t\t\tthis.raw.buffer.active,\n\t\t\t);\n\t\t\tif (lineData) {\n\t\t\t\ti = lineIndex;\n\t\t\t\tyield lineData;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getContentsAsHtml(): Promise<string> {\n\t\tif (!this._serializeAddon) {\n\t\t\tconst Addon = await this._getSerializeAddonConstructor();\n\t\t\tthis._serializeAddon = new Addon();\n\t\t\tthis.raw.loadAddon(this._serializeAddon);\n\t\t}\n\n\t\treturn this._serializeAddon.serializeAsHTML();\n\t}\n\n\tasync getSelectionAsHtml(command?: ITerminalCommand): Promise<string> {\n\t\tif (!this._serializeAddon) {\n\t\t\tconst Addon = await this._getSerializeAddonConstructor();\n\t\t\tthis._serializeAddon = new Addon();\n\t\t\tthis.raw.loadAddon(this._serializeAddon);\n\t\t}\n\t\tif (command) {\n\t\t\tconst length = command.getOutput()?.length;\n\t\t\tconst row = command.marker?.line;\n\t\t\tif (!length || !row) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`No row ${row} or output length ${length} for command ${command}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.raw.select(\n\t\t\t\t0,\n\t\t\t\trow + 1,\n\t\t\t\tlength - Math.floor(length / this.raw.cols),\n\t\t\t);\n\t\t}\n\t\tconst result = this._serializeAddon.serializeAsHTML({\n\t\t\tonlySelection: true,\n\t\t});\n\t\tif (command) {\n\t\t\tthis.raw.clearSelection();\n\t\t}\n\t\treturn result;\n\t}\n\n\tattachToElement(\n\t\tcontainer: HTMLElement,\n\t\tpartialOptions?: Partial<IXtermAttachToElementOptions>,\n\t): HTMLElement {\n\t\tconst options: IXtermAttachToElementOptions = {\n\t\t\tenableGpu: true,\n\t\t\t...partialOptions,\n\t\t};\n\t\tif (!this._attached) {\n\t\t\tthis.raw.open(container);\n\t\t}\n\n\t\t// TODO: Move before open so the DOM renderer doesn't initialize\n\t\tif (options.enableGpu) {\n\t\t\tif (this._shouldLoadWebgl()) {\n\t\t\t\tthis._enableWebglRenderer();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.raw.element || !this.raw.textarea) {\n\t\t\tthrow new Error(\"xterm elements not set after open\");\n\t\t}\n\n\t\tconst ad = this._attachedDisposables;\n\t\tad.clear();\n\t\tad.add(\n\t\t\tdom.addDisposableListener(this.raw.textarea, \"focus\", () =>\n\t\t\t\tthis._setFocused(true),\n\t\t\t),\n\t\t);\n\t\tad.add(\n\t\t\tdom.addDisposableListener(this.raw.textarea, \"blur\", () =>\n\t\t\t\tthis._setFocused(false),\n\t\t\t),\n\t\t);\n\t\tad.add(\n\t\t\tdom.addDisposableListener(this.raw.textarea, \"focusout\", () =>\n\t\t\t\tthis._setFocused(false),\n\t\t\t),\n\t\t);\n\n\t\t// Track wheel events in mouse wheel classifier and update smoothScrolling when it changes\n\t\t// as it must be disabled when a trackpad is used\n\t\tad.add(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis.raw.element,\n\t\t\t\tdom.EventType.MOUSE_WHEEL,\n\t\t\t\t(e: IMouseWheelEvent) => {\n\t\t\t\t\tconst classifier = MouseWheelClassifier.INSTANCE;\n\t\t\t\t\tclassifier.acceptStandardWheelEvent(\n\t\t\t\t\t\tnew StandardWheelEvent(e),\n\t\t\t\t\t);\n\t\t\t\t\tconst value = classifier.isPhysicalMouseWheel();\n\t\t\t\t\tif (value !== this._isPhysicalMouseWheel) {\n\t\t\t\t\t\tthis._isPhysicalMouseWheel = value;\n\t\t\t\t\t\tthis._updateSmoothScrolling();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ passive: true },\n\t\t\t),\n\t\t);\n\n\t\tthis._attached = { container, options };\n\t\t// Screen must be created at this point as xterm.open is called\n\t\treturn this._attached?.container.querySelector(\".xterm-screen\")!;\n\t}\n\n\tprivate _setFocused(isFocused: boolean) {\n\t\tthis._onDidChangeFocus.fire(isFocused);\n\t\tthis._anyTerminalFocusContextKey.set(isFocused);\n\t\tthis._anyFocusedTerminalHasSelection.set(\n\t\t\tisFocused && this.raw.hasSelection(),\n\t\t);\n\t}\n\n\twrite(data: string | Uint8Array, callback?: () => void): void {\n\t\tthis.raw.write(data, callback);\n\t}\n\n\tresize(columns: number, rows: number): void {\n\t\tthis.raw.resize(columns, rows);\n\t}\n\n\tupdateConfig(): void {\n\t\tconst config = this._terminalConfigurationService.config;\n\t\tthis.raw.options.altClickMovesCursor = config.altClickMovesCursor;\n\t\tthis._setCursorBlink(config.cursorBlinking);\n\t\tthis._setCursorStyle(config.cursorStyle);\n\t\tthis._setCursorStyleInactive(config.cursorStyleInactive);\n\t\tthis._setCursorWidth(config.cursorWidth);\n\t\tthis.raw.options.scrollback = config.scrollback;\n\t\tthis.raw.options.drawBoldTextInBrightColors =\n\t\t\tconfig.drawBoldTextInBrightColors;\n\t\tthis.raw.options.minimumContrastRatio = config.minimumContrastRatio;\n\t\tthis.raw.options.tabStopWidth = config.tabStopWidth;\n\t\tthis.raw.options.fastScrollSensitivity = config.fastScrollSensitivity;\n\t\tthis.raw.options.scrollSensitivity = config.mouseWheelScrollSensitivity;\n\t\tthis.raw.options.macOptionIsMeta = config.macOptionIsMeta;\n\t\tconst editorOptions =\n\t\t\tthis._configurationService.getValue<IEditorOptions>(\"editor\");\n\t\tthis.raw.options.altClickMovesCursor =\n\t\t\tconfig.altClickMovesCursor &&\n\t\t\teditorOptions.multiCursorModifier === \"alt\";\n\t\tthis.raw.options.macOptionClickForcesSelection =\n\t\t\tconfig.macOptionClickForcesSelection;\n\t\tthis.raw.options.rightClickSelectsWord =\n\t\t\tconfig.rightClickBehavior === \"selectWord\";\n\t\tthis.raw.options.wordSeparator = config.wordSeparators;\n\t\tthis.raw.options.customGlyphs = config.customGlyphs;\n\t\tthis.raw.options.ignoreBracketedPasteMode =\n\t\t\tconfig.ignoreBracketedPasteMode;\n\t\tthis.raw.options.rescaleOverlappingGlyphs =\n\t\t\tconfig.rescaleOverlappingGlyphs;\n\t\tthis.raw.options.overviewRuler = {\n\t\t\twidth: 14,\n\t\t\tshowTopBorder: true,\n\t\t};\n\t\tthis._updateSmoothScrolling();\n\t\tif (this._attached?.options.enableGpu) {\n\t\t\tif (this._shouldLoadWebgl()) {\n\t\t\t\tthis._enableWebglRenderer();\n\t\t\t} else {\n\t\t\t\tthis._disposeOfWebglRenderer();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _updateSmoothScrolling() {\n\t\tthis.raw.options.smoothScrollDuration =\n\t\t\tthis._terminalConfigurationService.config.smoothScrolling &&\n\t\t\tthis._isPhysicalMouseWheel\n\t\t\t\t? RenderConstants.SmoothScrollDuration\n\t\t\t\t: 0;\n\t}\n\n\tprivate _shouldLoadWebgl(): boolean {\n\t\treturn (\n\t\t\t(this._terminalConfigurationService.config.gpuAcceleration ===\n\t\t\t\t\"auto\" &&\n\t\t\t\tXtermTerminal._suggestedRendererType === undefined) ||\n\t\t\tthis._terminalConfigurationService.config.gpuAcceleration === \"on\"\n\t\t);\n\t}\n\n\tforceRedraw() {\n\t\tthis.raw.clearTextureAtlas();\n\t}\n\n\tclearDecorations(): void {\n\t\tthis._decorationAddon?.clearDecorations();\n\t}\n\n\tforceRefresh() {\n\t\tthis._core.viewport?._innerRefresh();\n\t}\n\n\tasync findNext(\n\t\tterm: string,\n\t\tsearchOptions: ISearchOptions,\n\t): Promise<boolean> {\n\t\tthis._updateFindColors(searchOptions);\n\t\treturn (await this._getSearchAddon()).findNext(term, searchOptions);\n\t}\n\n\tasync findPrevious(\n\t\tterm: string,\n\t\tsearchOptions: ISearchOptions,\n\t): Promise<boolean> {\n\t\tthis._updateFindColors(searchOptions);\n\t\treturn (await this._getSearchAddon()).findPrevious(term, searchOptions);\n\t}\n\n\tprivate _updateFindColors(searchOptions: ISearchOptions): void {\n\t\tconst theme = this._themeService.getColorTheme();\n\t\t// Theme color names align with monaco/vscode whereas xterm.js has some different naming.\n\t\t// The mapping is as follows:\n\t\t// - findMatch -> activeMatch\n\t\t// - findMatchHighlight -> match\n\t\tconst terminalBackground =\n\t\t\ttheme.getColor(TERMINAL_BACKGROUND_COLOR) ||\n\t\t\ttheme.getColor(PANEL_BACKGROUND);\n\t\tconst findMatchBackground = theme.getColor(\n\t\t\tTERMINAL_FIND_MATCH_BACKGROUND_COLOR,\n\t\t);\n\t\tconst findMatchBorder = theme.getColor(\n\t\t\tTERMINAL_FIND_MATCH_BORDER_COLOR,\n\t\t);\n\t\tconst findMatchOverviewRuler = theme.getColor(\n\t\t\tTERMINAL_OVERVIEW_RULER_CURSOR_FOREGROUND_COLOR,\n\t\t);\n\t\tconst findMatchHighlightBackground = theme.getColor(\n\t\t\tTERMINAL_FIND_MATCH_HIGHLIGHT_BACKGROUND_COLOR,\n\t\t);\n\t\tconst findMatchHighlightBorder = theme.getColor(\n\t\t\tTERMINAL_FIND_MATCH_HIGHLIGHT_BORDER_COLOR,\n\t\t);\n\t\tconst findMatchHighlightOverviewRuler = theme.getColor(\n\t\t\tTERMINAL_OVERVIEW_RULER_FIND_MATCH_FOREGROUND_COLOR,\n\t\t);\n\t\tsearchOptions.decorations = {\n\t\t\tactiveMatchBackground: findMatchBackground?.toString(),\n\t\t\tactiveMatchBorder: findMatchBorder?.toString() || \"transparent\",\n\t\t\tactiveMatchColorOverviewRuler:\n\t\t\t\tfindMatchOverviewRuler?.toString() || \"transparent\",\n\t\t\t// decoration bgs don't support the alpha channel so blend it with the regular bg\n\t\t\tmatchBackground: terminalBackground\n\t\t\t\t? findMatchHighlightBackground\n\t\t\t\t\t\t?.blend(terminalBackground)\n\t\t\t\t\t\t.toString()\n\t\t\t\t: undefined,\n\t\t\tmatchBorder: findMatchHighlightBorder?.toString() || \"transparent\",\n\t\t\tmatchOverviewRuler:\n\t\t\t\tfindMatchHighlightOverviewRuler?.toString() || \"transparent\",\n\t\t};\n\t}\n\n\tprivate _searchAddonPromise: Promise<SearchAddonType> | undefined;\n\tprivate _getSearchAddon(): Promise<SearchAddonType> {\n\t\tif (!this._searchAddonPromise) {\n\t\t\tthis._searchAddonPromise = this._getSearchAddonConstructor().then(\n\t\t\t\t(AddonCtor) => {\n\t\t\t\t\tthis._searchAddon = new AddonCtor({\n\t\t\t\t\t\thighlightLimit:\n\t\t\t\t\t\t\tXtermTerminalConstants.SearchHighlightLimit,\n\t\t\t\t\t});\n\t\t\t\t\tthis.raw.loadAddon(this._searchAddon);\n\t\t\t\t\tthis._searchAddon.onDidChangeResults(\n\t\t\t\t\t\t(results: {\n\t\t\t\t\t\t\tresultIndex: number;\n\t\t\t\t\t\t\tresultCount: number;\n\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\tthis._lastFindResult = results;\n\t\t\t\t\t\t\tthis._onDidChangeFindResults.fire(results);\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\treturn this._searchAddon;\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\treturn this._searchAddonPromise;\n\t}\n\n\tclearSearchDecorations(): void {\n\t\tthis._searchAddon?.clearDecorations();\n\t}\n\n\tclearActiveSearchDecoration(): void {\n\t\tthis._searchAddon?.clearActiveDecoration();\n\t}\n\n\tgetFont(): ITerminalFont {\n\t\treturn this._terminalConfigurationService.getFont(\n\t\t\tdom.getWindow(this.raw.element),\n\t\t\tthis._core,\n\t\t);\n\t}\n\n\tgetLongestViewportWrappedLineLength(): number {\n\t\tlet maxLineLength = 0;\n\t\tfor (\n\t\t\tlet i = this.raw.buffer.active.length - 1;\n\t\t\ti >= this.raw.buffer.active.viewportY;\n\t\t\ti--\n\t\t) {\n\t\t\tconst lineInfo = this._getWrappedLineCount(\n\t\t\t\ti,\n\t\t\t\tthis.raw.buffer.active,\n\t\t\t);\n\t\t\tmaxLineLength = Math.max(\n\t\t\t\tmaxLineLength,\n\t\t\t\tlineInfo.lineCount * this.raw.cols - lineInfo.endSpaces || 0,\n\t\t\t);\n\t\t\ti = lineInfo.currentIndex;\n\t\t}\n\t\treturn maxLineLength;\n\t}\n\n\tprivate _getWrappedLineCount(\n\t\tindex: number,\n\t\tbuffer: IBuffer,\n\t): { lineCount: number; currentIndex: number; endSpaces: number } {\n\t\tlet line = buffer.getLine(index);\n\t\tif (!line) {\n\t\t\tthrow new Error(\"Could not get line\");\n\t\t}\n\t\tlet currentIndex = index;\n\t\tlet endSpaces = 0;\n\t\t// line.length may exceed cols as it doesn't necessarily trim the backing array on resize\n\t\tfor (let i = Math.min(line.length, this.raw.cols) - 1; i >= 0; i--) {\n\t\t\tif (line?.getCell(i)?.getChars()) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tendSpaces++;\n\t\t\t}\n\t\t}\n\t\twhile (line?.isWrapped && currentIndex > 0) {\n\t\t\tcurrentIndex--;\n\t\t\tline = buffer.getLine(currentIndex);\n\t\t}\n\t\treturn { lineCount: index - currentIndex + 1, currentIndex, endSpaces };\n\t}\n\n\tscrollDownLine(): void {\n\t\tthis.raw.scrollLines(1);\n\t}\n\n\tscrollDownPage(): void {\n\t\tthis.raw.scrollPages(1);\n\t}\n\n\tscrollToBottom(): void {\n\t\tthis.raw.scrollToBottom();\n\t}\n\n\tscrollUpLine(): void {\n\t\tthis.raw.scrollLines(-1);\n\t}\n\n\tscrollUpPage(): void {\n\t\tthis.raw.scrollPages(-1);\n\t}\n\n\tscrollToTop(): void {\n\t\tthis.raw.scrollToTop();\n\t}\n\n\tscrollToLine(\n\t\tline: number,\n\t\tposition: ScrollPosition = ScrollPosition.Top,\n\t): void {\n\t\tthis.markTracker.scrollToLine(line, position);\n\t}\n\n\tclearBuffer(): void {\n\t\tthis.raw.clear();\n\t\t// xterm.js does not clear the first prompt, so trigger these to simulate\n\t\t// the prompt being written\n\t\tthis._capabilities\n\t\t\t.get(TerminalCapability.CommandDetection)\n\t\t\t?.handlePromptStart();\n\t\tthis._capabilities\n\t\t\t.get(TerminalCapability.CommandDetection)\n\t\t\t?.handleCommandStart();\n\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.clear);\n\t}\n\n\thasSelection(): boolean {\n\t\treturn this.raw.hasSelection();\n\t}\n\n\tclearSelection(): void {\n\t\tthis.raw.clearSelection();\n\t}\n\n\tselectMarkedRange(\n\t\tfromMarkerId: string,\n\t\ttoMarkerId: string,\n\t\tscrollIntoView = false,\n\t) {\n\t\tconst detectionCapability = this.shellIntegration.capabilities.get(\n\t\t\tTerminalCapability.BufferMarkDetection,\n\t\t);\n\t\tif (!detectionCapability) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst start = detectionCapability.getMark(fromMarkerId);\n\t\tconst end = detectionCapability.getMark(toMarkerId);\n\t\tif (start === undefined || end === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.raw.selectLines(start.line, end.line);\n\t\tif (scrollIntoView) {\n\t\t\tthis.raw.scrollToLine(start.line);\n\t\t}\n\t}\n\n\tselectAll(): void {\n\t\tthis.raw.focus();\n\t\tthis.raw.selectAll();\n\t}\n\n\tfocus(): void {\n\t\tthis.raw.focus();\n\t}\n\n\tasync copySelection(\n\t\tasHtml?: boolean,\n\t\tcommand?: ITerminalCommand,\n\t): Promise<void> {\n\t\tif (this.hasSelection() || (asHtml && command)) {\n\t\t\tif (asHtml) {\n\t\t\t\tconst textAsHtml = await this.getSelectionAsHtml(command);\n\t\t\t\tfunction listener(e: any) {\n\t\t\t\t\tif (!e.clipboardData.types.includes(\"text/plain\")) {\n\t\t\t\t\t\te.clipboardData.setData(\n\t\t\t\t\t\t\t\"text/plain\",\n\t\t\t\t\t\t\tcommand?.getOutput() ?? \"\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\te.clipboardData.setData(\"text/html\", textAsHtml);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\tconst doc = dom.getDocument(this.raw.element);\n\t\t\t\tdoc.addEventListener(\"copy\", listener);\n\t\t\t\tdoc.execCommand(\"copy\");\n\t\t\t\tdoc.removeEventListener(\"copy\", listener);\n\t\t\t} else {\n\t\t\t\tawait this._clipboardService.writeText(this.raw.getSelection());\n\t\t\t}\n\t\t} else {\n\t\t\tthis._notificationService.warn(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"terminal.integrated.copySelection.noSelection\",\n\t\t\t\t\t\"The terminal has no selection to copy\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _setCursorBlink(blink: boolean): void {\n\t\tif (this.raw.options.cursorBlink !== blink) {\n\t\t\tthis.raw.options.cursorBlink = blink;\n\t\t\tthis.raw.refresh(0, this.raw.rows - 1);\n\t\t}\n\t}\n\n\tprivate _setCursorStyle(\n\t\tstyle: ITerminalConfiguration[\"cursorStyle\"],\n\t): void {\n\t\tconst mapped = vscodeToXtermCursorStyle<\"cursorStyle\">(style);\n\t\tif (this.raw.options.cursorStyle !== mapped) {\n\t\t\tthis.raw.options.cursorStyle = mapped;\n\t\t}\n\t}\n\n\tprivate _setCursorStyleInactive(\n\t\tstyle: ITerminalConfiguration[\"cursorStyleInactive\"],\n\t): void {\n\t\tconst mapped = vscodeToXtermCursorStyle(style);\n\t\tif (this.raw.options.cursorInactiveStyle !== mapped) {\n\t\t\tthis.raw.options.cursorInactiveStyle = mapped;\n\t\t}\n\t}\n\n\tprivate _setCursorWidth(width: number): void {\n\t\tif (this.raw.options.cursorWidth !== width) {\n\t\t\tthis.raw.options.cursorWidth = width;\n\t\t}\n\t}\n\n\tprivate async _enableWebglRenderer(): Promise<void> {\n\t\tif (!this.raw.element || this._webglAddon) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if the the WebGL renderer is compatible with xterm.js:\n\t\t// - https://github.com/microsoft/vscode/issues/190195\n\t\t// - https://github.com/xtermjs/xterm.js/issues/4665\n\t\t// - https://bugs.chromium.org/p/chromium/issues/detail?id=1476475\n\t\tif (!XtermTerminal._checkedWebglCompatible) {\n\t\t\tXtermTerminal._checkedWebglCompatible = true;\n\t\t\tconst checkCanvas = document.createElement(\"canvas\");\n\t\t\tconst checkGl = checkCanvas.getContext(\"webgl2\");\n\t\t\tconst debugInfo = checkGl?.getExtension(\n\t\t\t\t\"WEBGL_debug_renderer_info\",\n\t\t\t);\n\t\t\tif (checkGl && debugInfo) {\n\t\t\t\tconst renderer = checkGl.getParameter(\n\t\t\t\t\tdebugInfo.UNMASKED_RENDERER_WEBGL,\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\trenderer.startsWith(\n\t\t\t\t\t\t\"ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero)\",\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis._disableWebglForThisSession();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst Addon = await this._getWebglAddonConstructor();\n\t\tthis._webglAddon = new Addon();\n\t\ttry {\n\t\t\tthis.raw.loadAddon(this._webglAddon);\n\t\t\tthis._logService.trace(\"Webgl was loaded\");\n\t\t\tthis._webglAddon.onContextLoss(() => {\n\t\t\t\tthis._logService.info(\n\t\t\t\t\t`Webgl lost context, disposing of webgl renderer`,\n\t\t\t\t);\n\t\t\t\tthis._disposeOfWebglRenderer();\n\t\t\t});\n\t\t\tthis._refreshImageAddon();\n\t\t\t// WebGL renderer cell dimensions differ from the DOM renderer, make sure the terminal\n\t\t\t// gets resized after the webgl addon is loaded\n\t\t\tthis._onDidRequestRefreshDimensions.fire();\n\t\t\t// Uncomment to add the texture atlas to the DOM\n\t\t\t// setTimeout(() => {\n\t\t\t// \tif (this._webglAddon?.textureAtlas) {\n\t\t\t// \t\tdocument.body.appendChild(this._webglAddon?.textureAtlas);\n\t\t\t// \t}\n\t\t\t// }, 5000);\n\t\t} catch (e) {\n\t\t\tthis._logService.warn(\n\t\t\t\t`Webgl could not be loaded. Falling back to the DOM renderer`,\n\t\t\t\te,\n\t\t\t);\n\t\t\tthis._disableWebglForThisSession();\n\t\t}\n\t}\n\n\tprivate _disableWebglForThisSession() {\n\t\tXtermTerminal._suggestedRendererType = \"dom\";\n\t\tthis._disposeOfWebglRenderer();\n\t}\n\n\t@debounce(100)\n\tprivate async _refreshImageAddon(): Promise<void> {\n\t\t// Only allow the image addon when webgl is being used to avoid possible GPU issues\n\t\tif (\n\t\t\tthis._terminalConfigurationService.config.enableImages &&\n\t\t\tthis._webglAddon\n\t\t) {\n\t\t\tif (!this._imageAddon) {\n\t\t\t\tconst AddonCtor = await this._getImageAddonConstructor();\n\t\t\t\tthis._imageAddon = new AddonCtor();\n\t\t\t\tthis.raw.loadAddon(this._imageAddon);\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis._imageAddon?.dispose();\n\t\t\t} catch {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t\tthis._imageAddon = undefined;\n\t\t}\n\t}\n\n\tprotected async _getClipboardAddonConstructor(): Promise<\n\t\ttypeof ClipboardAddonType\n\t> {\n\t\tif (!ClipboardAddon) {\n\t\t\tClipboardAddon = (\n\t\t\t\tawait importAMDNodeModule<\n\t\t\t\t\ttypeof import(\"@xterm/addon-clipboard\")\n\t\t\t\t>(\"@xterm/addon-clipboard\", \"lib/addon-clipboard.js\")\n\t\t\t).ClipboardAddon;\n\t\t}\n\t\treturn ClipboardAddon;\n\t}\n\n\tprotected async _getImageAddonConstructor(): Promise<\n\t\ttypeof ImageAddonType\n\t> {\n\t\tif (!ImageAddon) {\n\t\t\tImageAddon = (\n\t\t\t\tawait importAMDNodeModule<typeof import(\"@xterm/addon-image\")>(\n\t\t\t\t\t\"@xterm/addon-image\",\n\t\t\t\t\t\"lib/addon-image.js\",\n\t\t\t\t)\n\t\t\t).ImageAddon;\n\t\t}\n\t\treturn ImageAddon;\n\t}\n\n\tprotected async _getSearchAddonConstructor(): Promise<\n\t\ttypeof SearchAddonType\n\t> {\n\t\tif (!SearchAddon) {\n\t\t\tSearchAddon = (\n\t\t\t\tawait importAMDNodeModule<typeof import(\"@xterm/addon-search\")>(\n\t\t\t\t\t\"@xterm/addon-search\",\n\t\t\t\t\t\"lib/addon-search.js\",\n\t\t\t\t)\n\t\t\t).SearchAddon;\n\t\t}\n\t\treturn SearchAddon;\n\t}\n\n\tprotected async _getUnicode11Constructor(): Promise<\n\t\ttypeof Unicode11AddonType\n\t> {\n\t\tif (!Unicode11Addon) {\n\t\t\tUnicode11Addon = (\n\t\t\t\tawait importAMDNodeModule<\n\t\t\t\t\ttypeof import(\"@xterm/addon-unicode11\")\n\t\t\t\t>(\"@xterm/addon-unicode11\", \"lib/addon-unicode11.js\")\n\t\t\t).Unicode11Addon;\n\t\t}\n\t\treturn Unicode11Addon;\n\t}\n\n\tprotected async _getWebglAddonConstructor(): Promise<\n\t\ttypeof WebglAddonType\n\t> {\n\t\tif (!WebglAddon) {\n\t\t\tWebglAddon = (\n\t\t\t\tawait importAMDNodeModule<typeof import(\"@xterm/addon-webgl\")>(\n\t\t\t\t\t\"@xterm/addon-webgl\",\n\t\t\t\t\t\"lib/addon-webgl.js\",\n\t\t\t\t)\n\t\t\t).WebglAddon;\n\t\t}\n\t\treturn WebglAddon;\n\t}\n\n\tprotected async _getSerializeAddonConstructor(): Promise<\n\t\ttypeof SerializeAddonType\n\t> {\n\t\tif (!SerializeAddon) {\n\t\t\tSerializeAddon = (\n\t\t\t\tawait importAMDNodeModule<\n\t\t\t\t\ttypeof import(\"@xterm/addon-serialize\")\n\t\t\t\t>(\"@xterm/addon-serialize\", \"lib/addon-serialize.js\")\n\t\t\t).SerializeAddon;\n\t\t}\n\t\treturn SerializeAddon;\n\t}\n\n\tprivate _disposeOfWebglRenderer(): void {\n\t\ttry {\n\t\t\tthis._webglAddon?.dispose();\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tthis._webglAddon = undefined;\n\t\tthis._refreshImageAddon();\n\t}\n\n\tgetXtermTheme(theme?: IColorTheme): ITheme {\n\t\tif (!theme) {\n\t\t\ttheme = this._themeService.getColorTheme();\n\t\t}\n\n\t\tconst config = this._terminalConfigurationService.config;\n\t\tconst hideOverviewRuler = [\"never\", \"gutter\"].includes(\n\t\t\tconfig.shellIntegration?.decorationsEnabled ?? \"\",\n\t\t);\n\n\t\tconst foregroundColor = theme.getColor(TERMINAL_FOREGROUND_COLOR);\n\t\tconst backgroundColor =\n\t\t\tthis._xtermColorProvider.getBackgroundColor(theme);\n\t\tconst cursorColor =\n\t\t\ttheme.getColor(TERMINAL_CURSOR_FOREGROUND_COLOR) || foregroundColor;\n\t\tconst cursorAccentColor =\n\t\t\ttheme.getColor(TERMINAL_CURSOR_BACKGROUND_COLOR) || backgroundColor;\n\t\tconst selectionBackgroundColor = theme.getColor(\n\t\t\tTERMINAL_SELECTION_BACKGROUND_COLOR,\n\t\t);\n\t\tconst selectionInactiveBackgroundColor = theme.getColor(\n\t\t\tTERMINAL_INACTIVE_SELECTION_BACKGROUND_COLOR,\n\t\t);\n\t\tconst selectionForegroundColor =\n\t\t\ttheme.getColor(TERMINAL_SELECTION_FOREGROUND_COLOR) || undefined;\n\n\t\treturn {\n\t\t\tbackground: backgroundColor?.toString(),\n\t\t\tforeground: foregroundColor?.toString(),\n\t\t\tcursor: cursorColor?.toString(),\n\t\t\tcursorAccent: cursorAccentColor?.toString(),\n\t\t\tselectionBackground: selectionBackgroundColor?.toString(),\n\t\t\tselectionInactiveBackground:\n\t\t\t\tselectionInactiveBackgroundColor?.toString(),\n\t\t\tselectionForeground: selectionForegroundColor?.toString(),\n\t\t\toverviewRulerBorder: hideOverviewRuler\n\t\t\t\t? \"#0000\"\n\t\t\t\t: theme\n\t\t\t\t\t\t.getColor(TERMINAL_OVERVIEW_RULER_BORDER_COLOR)\n\t\t\t\t\t\t?.toString(),\n\t\t\tscrollbarSliderActiveBackground: theme\n\t\t\t\t.getColor(scrollbarSliderActiveBackground)\n\t\t\t\t?.toString(),\n\t\t\tscrollbarSliderBackground: theme\n\t\t\t\t.getColor(scrollbarSliderBackground)\n\t\t\t\t?.toString(),\n\t\t\tscrollbarSliderHoverBackground: theme\n\t\t\t\t.getColor(scrollbarSliderHoverBackground)\n\t\t\t\t?.toString(),\n\t\t\tblack: theme.getColor(ansiColorIdentifiers[0])?.toString(),\n\t\t\tred: theme.getColor(ansiColorIdentifiers[1])?.toString(),\n\t\t\tgreen: theme.getColor(ansiColorIdentifiers[2])?.toString(),\n\t\t\tyellow: theme.getColor(ansiColorIdentifiers[3])?.toString(),\n\t\t\tblue: theme.getColor(ansiColorIdentifiers[4])?.toString(),\n\t\t\tmagenta: theme.getColor(ansiColorIdentifiers[5])?.toString(),\n\t\t\tcyan: theme.getColor(ansiColorIdentifiers[6])?.toString(),\n\t\t\twhite: theme.getColor(ansiColorIdentifiers[7])?.toString(),\n\t\t\tbrightBlack: theme.getColor(ansiColorIdentifiers[8])?.toString(),\n\t\t\tbrightRed: theme.getColor(ansiColorIdentifiers[9])?.toString(),\n\t\t\tbrightGreen: theme.getColor(ansiColorIdentifiers[10])?.toString(),\n\t\t\tbrightYellow: theme.getColor(ansiColorIdentifiers[11])?.toString(),\n\t\t\tbrightBlue: theme.getColor(ansiColorIdentifiers[12])?.toString(),\n\t\t\tbrightMagenta: theme.getColor(ansiColorIdentifiers[13])?.toString(),\n\t\t\tbrightCyan: theme.getColor(ansiColorIdentifiers[14])?.toString(),\n\t\t\tbrightWhite: theme.getColor(ansiColorIdentifiers[15])?.toString(),\n\t\t};\n\t}\n\n\tprivate _updateTheme(theme?: IColorTheme): void {\n\t\tthis.raw.options.theme = this.getXtermTheme(theme);\n\t}\n\n\trefresh() {\n\t\tthis._updateTheme();\n\t\tthis._decorationAddon.refreshLayouts();\n\t}\n\n\tprivate async _updateUnicodeVersion(): Promise<void> {\n\t\tif (\n\t\t\t!this._unicode11Addon &&\n\t\t\tthis._terminalConfigurationService.config.unicodeVersion === \"11\"\n\t\t) {\n\t\t\tconst Addon = await this._getUnicode11Constructor();\n\t\t\tthis._unicode11Addon = new Addon();\n\t\t\tthis.raw.loadAddon(this._unicode11Addon);\n\t\t}\n\t\tif (\n\t\t\tthis.raw.unicode.activeVersion !==\n\t\t\tthis._terminalConfigurationService.config.unicodeVersion\n\t\t) {\n\t\t\tthis.raw.unicode.activeVersion =\n\t\t\t\tthis._terminalConfigurationService.config.unicodeVersion;\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\t_writeText(data: string): void {\n\t\tthis.raw.write(data);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._anyTerminalFocusContextKey.reset();\n\t\tthis._anyFocusedTerminalHasSelection.reset();\n\t\tthis._onDidDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\nexport function getXtermScaledDimensions(\n\tw: Window,\n\tfont: ITerminalFont,\n\twidth: number,\n\theight: number,\n): { rows: number; cols: number } | null {\n\tif (!font.charWidth || !font.charHeight) {\n\t\treturn null;\n\t}\n\n\t// Because xterm.js converts from CSS pixels to actual pixels through\n\t// the use of canvas, window.devicePixelRatio needs to be used here in\n\t// order to be precise. font.charWidth/charHeight alone as insufficient\n\t// when window.devicePixelRatio changes.\n\tconst scaledWidthAvailable = width * w.devicePixelRatio;\n\n\tconst scaledCharWidth =\n\t\tfont.charWidth * w.devicePixelRatio + font.letterSpacing;\n\tconst cols = Math.max(\n\t\tMath.floor(scaledWidthAvailable / scaledCharWidth),\n\t\t1,\n\t);\n\n\tconst scaledHeightAvailable = height * w.devicePixelRatio;\n\tconst scaledCharHeight = Math.ceil(font.charHeight * w.devicePixelRatio);\n\tconst scaledLineHeight = Math.floor(scaledCharHeight * font.lineHeight);\n\tconst rows = Math.max(\n\t\tMath.floor(scaledHeightAvailable / scaledLineHeight),\n\t\t1,\n\t);\n\n\treturn { rows, cols };\n}\n\nfunction vscodeToXtermLogLevel(logLevel: LogLevel): XtermLogLevel {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace:\n\t\t\treturn \"trace\";\n\t\tcase LogLevel.Debug:\n\t\t\treturn \"debug\";\n\t\tcase LogLevel.Info:\n\t\t\treturn \"info\";\n\t\tcase LogLevel.Warning:\n\t\t\treturn \"warn\";\n\t\tcase LogLevel.Error:\n\t\t\treturn \"error\";\n\t\tdefault:\n\t\t\treturn \"off\";\n\t}\n}\n\ninterface ICursorStyleVscodeToXtermMap {\n\tcursorStyle: NonNullable<ITerminalOptions[\"cursorStyle\"]>;\n\tcursorStyleInactive: NonNullable<ITerminalOptions[\"cursorInactiveStyle\"]>;\n}\nfunction vscodeToXtermCursorStyle<\n\tT extends \"cursorStyle\" | \"cursorStyleInactive\",\n>(style: ITerminalConfiguration[T]): ICursorStyleVscodeToXtermMap[T] {\n\t// 'line' is used instead of bar in VS Code to be consistent with editor.cursorStyle\n\tif (style === \"line\") {\n\t\treturn \"bar\";\n\t}\n\treturn style as ICursorStyleVscodeToXtermMap[T];\n}\n"],
  "mappings": "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",
  "names": ["RenderConstants", "ClipboardAddon", "listener"]
}
