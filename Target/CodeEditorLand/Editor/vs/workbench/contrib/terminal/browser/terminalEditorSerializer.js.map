{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalEditorSerializer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { IEditorSerializer } from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\ttype ISerializedTerminalEditorInput,\n\tITerminalEditorService,\n\ttype ITerminalInstance,\n} from \"./terminal.js\";\nimport type { TerminalEditorInput } from \"./terminalEditorInput.js\";\n\nexport class TerminalInputSerializer implements IEditorSerializer {\n\tconstructor(\n\t\t@ITerminalEditorService\n\t\tprivate readonly _terminalEditorService: ITerminalEditorService,\n\t) {}\n\n\tpublic canSerialize(\n\t\teditorInput: TerminalEditorInput,\n\t): editorInput is TerminalEditorInput & {\n\t\treadonly terminalInstance: ITerminalInstance;\n\t} {\n\t\treturn (\n\t\t\ttypeof editorInput.terminalInstance?.persistentProcessId ===\n\t\t\t\t\"number\" && editorInput.terminalInstance.shouldPersist\n\t\t);\n\t}\n\n\tpublic serialize(editorInput: TerminalEditorInput): string | undefined {\n\t\tif (!this.canSerialize(editorInput)) {\n\t\t\treturn;\n\t\t}\n\t\treturn JSON.stringify(this._toJson(editorInput.terminalInstance));\n\t}\n\n\tpublic deserialize(\n\t\tinstantiationService: IInstantiationService,\n\t\tserializedEditorInput: string,\n\t): EditorInput | undefined {\n\t\tconst terminalInstance = JSON.parse(serializedEditorInput);\n\t\treturn this._terminalEditorService.reviveInput(terminalInstance);\n\t}\n\n\tprivate _toJson(\n\t\tinstance: ITerminalInstance,\n\t): ISerializedTerminalEditorInput {\n\t\treturn {\n\t\t\tid: instance.persistentProcessId!,\n\t\t\tpid: instance.processId || 0,\n\t\t\ttitle: instance.title,\n\t\t\ttitleSource: instance.titleSource,\n\t\t\tcwd: \"\",\n\t\t\ticon: instance.icon,\n\t\t\tcolor: instance.color,\n\t\t\thasChildProcesses: instance.hasChildProcesses,\n\t\t\tisFeatureTerminal: instance.shellLaunchConfig.isFeatureTerminal,\n\t\t\thideFromUser: instance.shellLaunchConfig.hideFromUser,\n\t\t\treconnectionProperties:\n\t\t\t\tinstance.shellLaunchConfig.reconnectionProperties,\n\t\t\tshellIntegrationNonce: instance.shellIntegrationNonce,\n\t\t};\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAQA;AAAA,EAEC;AAAA,OAEM;AAGA,IAAM,0BAAN,MAA2D;AAAA,EACjE,YAEkB,wBAChB;AADgB;AAAA,EACf;AAAA,EAnBJ,OAekE;AAAA;AAAA;AAAA,EAM1D,aACN,aAGC;AACD,WACC,OAAO,YAAY,kBAAkB,wBACpC,YAAY,YAAY,iBAAiB;AAAA,EAE5C;AAAA,EAEO,UAAU,aAAsD;AACtE,QAAI,CAAC,KAAK,aAAa,WAAW,GAAG;AACpC;AAAA,IACD;AACA,WAAO,KAAK,UAAU,KAAK,QAAQ,YAAY,gBAAgB,CAAC;AAAA,EACjE;AAAA,EAEO,YACN,sBACA,uBAC0B;AAC1B,UAAM,mBAAmB,KAAK,MAAM,qBAAqB;AACzD,WAAO,KAAK,uBAAuB,YAAY,gBAAgB;AAAA,EAChE;AAAA,EAEQ,QACP,UACiC;AACjC,WAAO;AAAA,MACN,IAAI,SAAS;AAAA,MACb,KAAK,SAAS,aAAa;AAAA,MAC3B,OAAO,SAAS;AAAA,MAChB,aAAa,SAAS;AAAA,MACtB,KAAK;AAAA,MACL,MAAM,SAAS;AAAA,MACf,OAAO,SAAS;AAAA,MAChB,mBAAmB,SAAS;AAAA,MAC5B,mBAAmB,SAAS,kBAAkB;AAAA,MAC9C,cAAc,SAAS,kBAAkB;AAAA,MACzC,wBACC,SAAS,kBAAkB;AAAA,MAC5B,uBAAuB,SAAS;AAAA,IACjC;AAAA,EACD;AACD;AAnDa,0BAAN;AAAA,EAEJ;AAAA,GAFU;",
  "names": []
}
