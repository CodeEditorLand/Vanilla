{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalEditorSerializer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IEditorSerializer } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { ISerializedTerminalEditorInput, ITerminalEditorService, ITerminalInstance } from './terminal.js';\nimport { TerminalEditorInput } from './terminalEditorInput.js';\n\nexport class TerminalInputSerializer implements IEditorSerializer {\n\tconstructor(\n\t\t@ITerminalEditorService private readonly _terminalEditorService: ITerminalEditorService\n\t) { }\n\n\tpublic canSerialize(editorInput: TerminalEditorInput): editorInput is TerminalEditorInput & { readonly terminalInstance: ITerminalInstance } {\n\t\treturn typeof editorInput.terminalInstance?.persistentProcessId === 'number' && editorInput.terminalInstance.shouldPersist;\n\t}\n\n\tpublic serialize(editorInput: TerminalEditorInput): string | undefined {\n\t\tif (!this.canSerialize(editorInput)) {\n\t\t\treturn;\n\t\t}\n\t\treturn JSON.stringify(this._toJson(editorInput.terminalInstance));\n\t}\n\n\tpublic deserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput | undefined {\n\t\tconst terminalInstance = JSON.parse(serializedEditorInput);\n\t\treturn this._terminalEditorService.reviveInput(terminalInstance);\n\t}\n\n\tprivate _toJson(instance: ITerminalInstance): ISerializedTerminalEditorInput {\n\t\treturn {\n\t\t\tid: instance.persistentProcessId!,\n\t\t\tpid: instance.processId || 0,\n\t\t\ttitle: instance.title,\n\t\t\ttitleSource: instance.titleSource,\n\t\t\tcwd: '',\n\t\t\ticon: instance.icon,\n\t\t\tcolor: instance.color,\n\t\t\thasChildProcesses: instance.hasChildProcesses,\n\t\t\tisFeatureTerminal: instance.shellLaunchConfig.isFeatureTerminal,\n\t\t\thideFromUser: instance.shellLaunchConfig.hideFromUser,\n\t\t\treconnectionProperties: instance.shellLaunchConfig.reconnectionProperties,\n\t\t\tshellIntegrationNonce: instance.shellIntegrationNonce\n\t\t};\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,6BAA6B;AACtC,SAAS,yBAAyB;AAClC,SAAS,mBAAmB;AAC5B,SAAS,gCAAgC,wBAAwB,yBAAyB;AAC1F,SAAS,2BAA2B;AAE7B,IAAM,0BAAN,MAA2D;AAAA,EACjE,YAC0C,wBACxC;AADwC;AAAA,EACtC;AAAA,EAdL,OAWkE;AAAA;AAAA;AAAA,EAK1D,aAAa,aAAyH;AAC5I,WAAO,OAAO,YAAY,kBAAkB,wBAAwB,YAAY,YAAY,iBAAiB;AAAA,EAC9G;AAAA,EAEO,UAAU,aAAsD;AACtE,QAAI,CAAC,KAAK,aAAa,WAAW,GAAG;AACpC;AAAA,IACD;AACA,WAAO,KAAK,UAAU,KAAK,QAAQ,YAAY,gBAAgB,CAAC;AAAA,EACjE;AAAA,EAEO,YAAY,sBAA6C,uBAAwD;AACvH,UAAM,mBAAmB,KAAK,MAAM,qBAAqB;AACzD,WAAO,KAAK,uBAAuB,YAAY,gBAAgB;AAAA,EAChE;AAAA,EAEQ,QAAQ,UAA6D;AAC5E,WAAO;AAAA,MACN,IAAI,SAAS;AAAA,MACb,KAAK,SAAS,aAAa;AAAA,MAC3B,OAAO,SAAS;AAAA,MAChB,aAAa,SAAS;AAAA,MACtB,KAAK;AAAA,MACL,MAAM,SAAS;AAAA,MACf,OAAO,SAAS;AAAA,MAChB,mBAAmB,SAAS;AAAA,MAC5B,mBAAmB,SAAS,kBAAkB;AAAA,MAC9C,cAAc,SAAS,kBAAkB;AAAA,MACzC,wBAAwB,SAAS,kBAAkB;AAAA,MACnD,uBAAuB,SAAS;AAAA,IACjC;AAAA,EACD;AACD;AArCa,0BAAN;AAAA,EAEJ;AAAA,GAFU;",
  "names": []
}
