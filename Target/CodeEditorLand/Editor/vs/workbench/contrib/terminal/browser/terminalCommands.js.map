{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ITerminalGroupService } from './terminal.js';\n\nexport function setupTerminalCommands(): void {\n\tregisterOpenTerminalAtIndexCommands();\n}\n\nfunction registerOpenTerminalAtIndexCommands(): void {\n\tfor (let i = 0; i < 9; i++) {\n\t\tconst terminalIndex = i;\n\t\tconst visibleIndex = i + 1;\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: `workbench.action.terminal.focusAtIndex${visibleIndex}`,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: undefined,\n\t\t\tprimary: 0,\n\t\t\thandler: accessor => {\n\t\t\t\taccessor.get(ITerminalGroupService).setActiveInstanceByIndex(terminalIndex);\n\t\t\t\treturn accessor.get(ITerminalGroupService).showPanel(true);\n\t\t\t}\n\t\t});\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,qBAAqB,wBAAwB;AACtD,SAAS,6BAA6B;AAE/B,SAAS,wBAA8B;AAC7C,sCAAoC;AACrC;AAFgB;AAIhB,SAAS,sCAA4C;AACpD,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC3B,UAAM,gBAAgB;AACtB,UAAM,eAAe,IAAI;AAEzB,wBAAoB,iCAAiC;AAAA,MACpD,IAAI,yCAAyC,YAAY;AAAA,MACzD,QAAQ,iBAAiB;AAAA,MACzB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS,qCAAY;AACpB,iBAAS,IAAI,qBAAqB,EAAE,yBAAyB,aAAa;AAC1E,eAAO,SAAS,IAAI,qBAAqB,EAAE,UAAU,IAAI;AAAA,MAC1D,GAHS;AAAA,IAIV,CAAC;AAAA,EACF;AACD;AAhBS;",
  "names": []
}
