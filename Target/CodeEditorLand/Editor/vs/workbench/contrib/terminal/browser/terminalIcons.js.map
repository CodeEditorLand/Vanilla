{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalIcons.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { localize } from '../../../../nls.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\n\nexport const terminalViewIcon = registerIcon('terminal-view-icon', Codicon.terminal, localize('terminalViewIcon', 'View icon of the terminal view.'));\n\nexport const renameTerminalIcon = registerIcon('terminal-rename', Codicon.edit, localize('renameTerminalIcon', 'Icon for rename in the terminal quick menu.'));\nexport const killTerminalIcon = registerIcon('terminal-kill', Codicon.trash, localize('killTerminalIcon', 'Icon for killing a terminal instance.'));\nexport const newTerminalIcon = registerIcon('terminal-new', Codicon.add, localize('newTerminalIcon', 'Icon for creating a new terminal instance.'));\n\nexport const configureTerminalProfileIcon = registerIcon('terminal-configure-profile', Codicon.gear, localize('configureTerminalProfileIcon', 'Icon for creating a new terminal profile.'));\n\nexport const terminalDecorationMark = registerIcon('terminal-decoration-mark', Codicon.circleSmallFilled, localize('terminalDecorationMark', 'Icon for a terminal decoration mark.'));\nexport const terminalDecorationIncomplete = registerIcon('terminal-decoration-incomplete', Codicon.circle, localize('terminalDecorationIncomplete', 'Icon for a terminal decoration of a command that was incomplete.'));\nexport const terminalDecorationError = registerIcon('terminal-decoration-error', Codicon.errorSmall, localize('terminalDecorationError', 'Icon for a terminal decoration of a command that errored.'));\nexport const terminalDecorationSuccess = registerIcon('terminal-decoration-success', Codicon.circleFilled, localize('terminalDecorationSuccess', 'Icon for a terminal decoration of a command that was successful.'));\n\nexport const commandHistoryRemoveIcon = registerIcon('terminal-command-history-remove', Codicon.close, localize('terminalCommandHistoryRemove', 'Icon for removing a terminal command from command history.'));\nexport const commandHistoryOutputIcon = registerIcon('terminal-command-history-output', Codicon.output, localize('terminalCommandHistoryOutput', 'Icon for viewing output of a terminal command.'));\nexport const commandHistoryFuzzySearchIcon = registerIcon('terminal-command-history-fuzzy-search', Codicon.searchFuzzy, localize('terminalCommandHistoryFuzzySearch', 'Icon for toggling fuzzy search of command history.'));\n"],
  "mappings": "AAKA,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAEtB,MAAM,mBAAmB,aAAa,sBAAsB,QAAQ,UAAU,SAAS,oBAAoB,iCAAiC,CAAC;AAE7I,MAAM,qBAAqB,aAAa,mBAAmB,QAAQ,MAAM,SAAS,sBAAsB,6CAA6C,CAAC;AACtJ,MAAM,mBAAmB,aAAa,iBAAiB,QAAQ,OAAO,SAAS,oBAAoB,uCAAuC,CAAC;AAC3I,MAAM,kBAAkB,aAAa,gBAAgB,QAAQ,KAAK,SAAS,mBAAmB,4CAA4C,CAAC;AAE3I,MAAM,+BAA+B,aAAa,8BAA8B,QAAQ,MAAM,SAAS,gCAAgC,2CAA2C,CAAC;AAEnL,MAAM,yBAAyB,aAAa,4BAA4B,QAAQ,mBAAmB,SAAS,0BAA0B,sCAAsC,CAAC;AAC7K,MAAM,+BAA+B,aAAa,kCAAkC,QAAQ,QAAQ,SAAS,gCAAgC,kEAAkE,CAAC;AAChN,MAAM,0BAA0B,aAAa,6BAA6B,QAAQ,YAAY,SAAS,2BAA2B,2DAA2D,CAAC;AAC9L,MAAM,4BAA4B,aAAa,+BAA+B,QAAQ,cAAc,SAAS,6BAA6B,kEAAkE,CAAC;AAE7M,MAAM,2BAA2B,aAAa,mCAAmC,QAAQ,OAAO,SAAS,gCAAgC,4DAA4D,CAAC;AACtM,MAAM,2BAA2B,aAAa,mCAAmC,QAAQ,QAAQ,SAAS,gCAAgC,gDAAgD,CAAC;AAC3L,MAAM,gCAAgC,aAAa,yCAAyC,QAAQ,aAAa,SAAS,qCAAqC,oDAAoD,CAAC;",
  "names": []
}
