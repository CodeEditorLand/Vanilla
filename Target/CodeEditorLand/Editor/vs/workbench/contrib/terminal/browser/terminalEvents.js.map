{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalEvents.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDynamicListEventMultiplexer,\n\tEvent,\n\tEventMultiplexer,\n\ttype IDynamicListEventMultiplexer,\n} from \"../../../../base/common/event.js\";\nimport {\n\tDisposableMap,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport type {\n\tITerminalCapabilityImplMap,\n\tTerminalCapability,\n} from \"../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport type { ITerminalInstance } from \"./terminal.js\";\n\nexport function createInstanceCapabilityEventMultiplexer<\n\tT extends TerminalCapability,\n\tK,\n>(\n\tcurrentInstances: ITerminalInstance[],\n\tonAddInstance: Event<ITerminalInstance>,\n\tonRemoveInstance: Event<ITerminalInstance>,\n\tcapabilityId: T,\n\tgetEvent: (capability: ITerminalCapabilityImplMap[T]) => Event<K>,\n): IDynamicListEventMultiplexer<{ instance: ITerminalInstance; data: K }> {\n\tconst store = new DisposableStore();\n\tconst multiplexer = store.add(\n\t\tnew EventMultiplexer<{ instance: ITerminalInstance; data: K }>(),\n\t);\n\tconst capabilityListeners = store.add(\n\t\tnew DisposableMap<ITerminalCapabilityImplMap[T], IDisposable>(),\n\t);\n\n\tfunction addCapability(\n\t\tinstance: ITerminalInstance,\n\t\tcapability: ITerminalCapabilityImplMap[T],\n\t) {\n\t\tconst listener = multiplexer.add(\n\t\t\tEvent.map(getEvent(capability), (data) => ({ instance, data })),\n\t\t);\n\t\tcapabilityListeners.set(capability, listener);\n\t}\n\n\t// Existing capabilities\n\tfor (const instance of currentInstances) {\n\t\tconst capability = instance.capabilities.get(capabilityId);\n\t\tif (capability) {\n\t\t\taddCapability(instance, capability);\n\t\t}\n\t}\n\n\t// Added capabilities\n\tconst addCapabilityMultiplexer = store.add(\n\t\tnew DynamicListEventMultiplexer(\n\t\t\tcurrentInstances,\n\t\t\tonAddInstance,\n\t\t\tonRemoveInstance,\n\t\t\t(instance) =>\n\t\t\t\tEvent.map(\n\t\t\t\t\tinstance.capabilities.onDidAddCapability,\n\t\t\t\t\t(changeEvent) => ({ instance, changeEvent }),\n\t\t\t\t),\n\t\t),\n\t);\n\tstore.add(\n\t\taddCapabilityMultiplexer.event((e) => {\n\t\t\tif (e.changeEvent.id === capabilityId) {\n\t\t\t\taddCapability(e.instance, e.changeEvent.capability);\n\t\t\t}\n\t\t}),\n\t);\n\n\t// Removed capabilities\n\tconst removeCapabilityMultiplexer = store.add(\n\t\tnew DynamicListEventMultiplexer(\n\t\t\tcurrentInstances,\n\t\t\tonAddInstance,\n\t\t\tonRemoveInstance,\n\t\t\t(instance) => instance.capabilities.onDidRemoveCapability,\n\t\t),\n\t);\n\tstore.add(\n\t\tremoveCapabilityMultiplexer.event((e) => {\n\t\t\tif (e.id === capabilityId) {\n\t\t\t\tcapabilityListeners.deleteAndDispose(e.capability);\n\t\t\t}\n\t\t}),\n\t);\n\n\treturn {\n\t\tdispose: () => store.dispose(),\n\t\tevent: multiplexer.event,\n\t};\n}\n"],
  "mappings": ";;AAKA;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AAOA,SAAS,yCAIf,kBACA,eACA,kBACA,cACA,UACyE;AACzE,QAAM,QAAQ,IAAI,gBAAgB;AAClC,QAAM,cAAc,MAAM;AAAA,IACzB,IAAI,iBAA2D;AAAA,EAChE;AACA,QAAM,sBAAsB,MAAM;AAAA,IACjC,IAAI,cAA0D;AAAA,EAC/D;AAEA,WAAS,cACR,UACA,YACC;AACD,UAAM,WAAW,YAAY;AAAA,MAC5B,MAAM,IAAI,SAAS,UAAU,GAAG,CAAC,UAAU,EAAE,UAAU,KAAK,EAAE;AAAA,IAC/D;AACA,wBAAoB,IAAI,YAAY,QAAQ;AAAA,EAC7C;AARS;AAWT,aAAW,YAAY,kBAAkB;AACxC,UAAM,aAAa,SAAS,aAAa,IAAI,YAAY;AACzD,QAAI,YAAY;AACf,oBAAc,UAAU,UAAU;AAAA,IACnC;AAAA,EACD;AAGA,QAAM,2BAA2B,MAAM;AAAA,IACtC,IAAI;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA,CAAC,aACA,MAAM;AAAA,QACL,SAAS,aAAa;AAAA,QACtB,CAAC,iBAAiB,EAAE,UAAU,YAAY;AAAA,MAC3C;AAAA,IACF;AAAA,EACD;AACA,QAAM;AAAA,IACL,yBAAyB,MAAM,CAAC,MAAM;AACrC,UAAI,EAAE,YAAY,OAAO,cAAc;AACtC,sBAAc,EAAE,UAAU,EAAE,YAAY,UAAU;AAAA,MACnD;AAAA,IACD,CAAC;AAAA,EACF;AAGA,QAAM,8BAA8B,MAAM;AAAA,IACzC,IAAI;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA,CAAC,aAAa,SAAS,aAAa;AAAA,IACrC;AAAA,EACD;AACA,QAAM;AAAA,IACL,4BAA4B,MAAM,CAAC,MAAM;AACxC,UAAI,EAAE,OAAO,cAAc;AAC1B,4BAAoB,iBAAiB,EAAE,UAAU;AAAA,MAClD;AAAA,IACD,CAAC;AAAA,EACF;AAEA,SAAO;AAAA,IACN,SAAS,6BAAM,MAAM,QAAQ,GAApB;AAAA,IACT,OAAO,YAAY;AAAA,EACpB;AACD;AA9EgB;",
  "names": []
}
