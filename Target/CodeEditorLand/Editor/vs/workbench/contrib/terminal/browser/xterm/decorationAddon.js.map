{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/xterm/decorationAddon.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDecoration, ITerminalAddon, Terminal } from \"@xterm/xterm\";\nimport * as dom from \"../../../../../base/browser/dom.js\";\nimport { type IAction, Separator } from \"../../../../../base/common/actions.js\";\nimport { Emitter } from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../../base/common/themables.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport { IClipboardService } from \"../../../../../platform/clipboard/common/clipboardService.js\";\nimport { ICommandService } from \"../../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { IContextMenuService } from \"../../../../../platform/contextview/browser/contextView.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../../platform/notification/common/notification.js\";\nimport { IOpenerService } from \"../../../../../platform/opener/common/opener.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\tCommandInvalidationReason,\n\ttype ICommandDetectionCapability,\n\ttype IMarkProperties,\n\ttype ITerminalCapabilityStore,\n\ttype ITerminalCommand,\n\tTerminalCapability,\n} from \"../../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport { TerminalSettingId } from \"../../../../../platform/terminal/common/terminal.js\";\nimport { IThemeService } from \"../../../../../platform/theme/common/themeService.js\";\nimport { ILifecycleService } from \"../../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\tTERMINAL_COMMAND_DECORATION_DEFAULT_BACKGROUND_COLOR,\n\tTERMINAL_COMMAND_DECORATION_ERROR_BACKGROUND_COLOR,\n\tTERMINAL_COMMAND_DECORATION_SUCCESS_BACKGROUND_COLOR,\n} from \"../../common/terminalColorRegistry.js\";\nimport {\n\tterminalDecorationError,\n\tterminalDecorationIncomplete,\n\tterminalDecorationMark,\n\tterminalDecorationSuccess,\n} from \"../terminalIcons.js\";\nimport {\n\tDecorationSelector,\n\tTerminalDecorationHoverManager,\n\tupdateLayout,\n} from \"./decorationStyles.js\";\n\ninterface IDisposableDecoration {\n\tdecoration: IDecoration;\n\tdisposables: IDisposable[];\n\texitCode?: number;\n\tmarkProperties?: IMarkProperties;\n}\n\nexport class DecorationAddon extends Disposable implements ITerminalAddon {\n\tprotected _terminal: Terminal | undefined;\n\tprivate _capabilityDisposables: Map<TerminalCapability, DisposableStore> =\n\t\tnew Map();\n\tprivate _decorations: Map<number, IDisposableDecoration> = new Map();\n\tprivate _placeholderDecoration: IDecoration | undefined;\n\tprivate _showGutterDecorations?: boolean;\n\tprivate _showOverviewRulerDecorations?: boolean;\n\tprivate _terminalDecorationHoverManager: TerminalDecorationHoverManager;\n\n\tprivate readonly _onDidRequestRunCommand = this._register(\n\t\tnew Emitter<{ command: ITerminalCommand; copyAsHtml?: boolean }>(),\n\t);\n\treadonly onDidRequestRunCommand = this._onDidRequestRunCommand.event;\n\n\tconstructor(\n\t\tprivate readonly _capabilities: ITerminalCapabilityStore,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@INotificationService private readonly _notificationService: INotificationService\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => this._dispose()));\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TerminalSettingId.FontSize) || e.affectsConfiguration(TerminalSettingId.LineHeight)) {\n\t\t\t\tthis.refreshLayouts();\n\t\t\t} else if (e.affectsConfiguration('workbench.colorCustomizations')) {\n\t\t\t\tthis._refreshStyles(true);\n\t\t\t} else if (e.affectsConfiguration(TerminalSettingId.ShellIntegrationDecorationsEnabled)) {\n\t\t\t\tthis._removeCapabilityDisposables(TerminalCapability.CommandDetection);\n\t\t\t\tthis._updateDecorationVisibility();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => this._refreshStyles(true)));\n\t\tthis._updateDecorationVisibility();\n\t\tthis._register(this._capabilities.onDidAddCapabilityType(c => this._createCapabilityDisposables(c)));\n\t\tthis._register(this._capabilities.onDidRemoveCapabilityType(c => this._removeCapabilityDisposables(c)));\n\t\tthis._register(lifecycleService.onWillShutdown(() => this._disposeAllDecorations()));\n\t\tthis._terminalDecorationHoverManager = this._register(instantiationService.createInstance(TerminalDecorationHoverManager));\n\t}\n\n\tprivate _removeCapabilityDisposables(c: TerminalCapability): void {\n\t\tconst disposables = this._capabilityDisposables.get(c);\n\t\tif (disposables) {\n\t\t\tdispose(disposables);\n\t\t}\n\t\tthis._capabilityDisposables.delete(c);\n\t}\n\n\tprivate _createCapabilityDisposables(c: TerminalCapability): void {\n\t\tconst store = new DisposableStore();\n\t\tconst capability = this._capabilities.get(c);\n\t\tif (!capability || this._capabilityDisposables.has(c)) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (capability.type) {\n\t\t\tcase TerminalCapability.BufferMarkDetection:\n\t\t\t\tstore.add(\n\t\t\t\t\tcapability.onMarkAdded((mark) =>\n\t\t\t\t\t\tthis.registerMarkDecoration(mark),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase TerminalCapability.CommandDetection: {\n\t\t\t\tconst disposables =\n\t\t\t\t\tthis._getCommandDetectionListeners(capability);\n\t\t\t\tfor (const d of disposables) {\n\t\t\t\t\tstore.add(d);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._capabilityDisposables.set(c, store);\n\t}\n\n\tregisterMarkDecoration(mark: IMarkProperties): IDecoration | undefined {\n\t\tif (\n\t\t\t!this._terminal ||\n\t\t\t(!this._showGutterDecorations &&\n\t\t\t\t!this._showOverviewRulerDecorations)\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (mark.hidden) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.registerCommandDecoration(undefined, undefined, mark);\n\t}\n\n\tprivate _updateDecorationVisibility(): void {\n\t\tconst showDecorations = this._configurationService.getValue(\n\t\t\tTerminalSettingId.ShellIntegrationDecorationsEnabled,\n\t\t);\n\t\tthis._showGutterDecorations =\n\t\t\tshowDecorations === \"both\" || showDecorations === \"gutter\";\n\t\tthis._showOverviewRulerDecorations =\n\t\t\tshowDecorations === \"both\" || showDecorations === \"overviewRuler\";\n\t\tthis._disposeAllDecorations();\n\t\tif (this._showGutterDecorations || this._showOverviewRulerDecorations) {\n\t\t\tthis._attachToCommandCapability();\n\t\t\tthis._updateGutterDecorationVisibility();\n\t\t}\n\t\tconst currentCommand = this._capabilities.get(\n\t\t\tTerminalCapability.CommandDetection,\n\t\t)?.executingCommandObject;\n\t\tif (currentCommand) {\n\t\t\tthis.registerCommandDecoration(currentCommand, true);\n\t\t}\n\t}\n\n\tprivate _disposeAllDecorations(): void {\n\t\tthis._placeholderDecoration?.dispose();\n\t\tfor (const value of this._decorations.values()) {\n\t\t\tvalue.decoration.dispose();\n\t\t\tdispose(value.disposables);\n\t\t}\n\t}\n\n\tprivate _updateGutterDecorationVisibility(): void {\n\t\tconst commandDecorationElements =\n\t\t\tthis._terminal?.element?.querySelectorAll(\n\t\t\t\tDecorationSelector.CommandDecoration,\n\t\t\t);\n\t\tif (commandDecorationElements) {\n\t\t\tfor (const commandDecorationElement of commandDecorationElements) {\n\t\t\t\tthis._updateCommandDecorationVisibility(\n\t\t\t\t\tcommandDecorationElement,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _updateCommandDecorationVisibility(\n\t\tcommandDecorationElement: Element,\n\t): void {\n\t\tif (this._showGutterDecorations) {\n\t\t\tcommandDecorationElement.classList.remove(DecorationSelector.Hide);\n\t\t} else {\n\t\t\tcommandDecorationElement.classList.add(DecorationSelector.Hide);\n\t\t}\n\t}\n\n\tpublic refreshLayouts(): void {\n\t\tupdateLayout(\n\t\t\tthis._configurationService,\n\t\t\tthis._placeholderDecoration?.element,\n\t\t);\n\t\tfor (const decoration of this._decorations) {\n\t\t\tupdateLayout(\n\t\t\t\tthis._configurationService,\n\t\t\t\tdecoration[1].decoration.element,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _refreshStyles(refreshOverviewRulerColors?: boolean): void {\n\t\tif (refreshOverviewRulerColors) {\n\t\t\tfor (const decoration of this._decorations.values()) {\n\t\t\t\tconst color =\n\t\t\t\t\tthis._getDecorationCssColor(decoration)?.toString() ?? \"\";\n\t\t\t\tif (decoration.decoration.options?.overviewRulerOptions) {\n\t\t\t\t\tdecoration.decoration.options.overviewRulerOptions.color =\n\t\t\t\t\t\tcolor;\n\t\t\t\t} else if (decoration.decoration.options) {\n\t\t\t\t\tdecoration.decoration.options.overviewRulerOptions = {\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._updateClasses(this._placeholderDecoration?.element);\n\t\tfor (const decoration of this._decorations.values()) {\n\t\t\tthis._updateClasses(\n\t\t\t\tdecoration.decoration.element,\n\t\t\t\tdecoration.exitCode,\n\t\t\t\tdecoration.markProperties,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _dispose(): void {\n\t\tthis._terminalDecorationHoverManager.dispose();\n\t\tfor (const disposable of this._capabilityDisposables.values()) {\n\t\t\tdispose(disposable);\n\t\t}\n\t\tthis.clearDecorations();\n\t}\n\n\tprivate _clearPlaceholder(): void {\n\t\tthis._placeholderDecoration?.dispose();\n\t\tthis._placeholderDecoration = undefined;\n\t}\n\n\tpublic clearDecorations(): void {\n\t\tthis._placeholderDecoration?.marker.dispose();\n\t\tthis._clearPlaceholder();\n\t\tthis._disposeAllDecorations();\n\t\tthis._decorations.clear();\n\t}\n\n\tprivate _attachToCommandCapability(): void {\n\t\tif (this._capabilities.has(TerminalCapability.CommandDetection)) {\n\t\t\tconst capability = this._capabilities.get(\n\t\t\t\tTerminalCapability.CommandDetection,\n\t\t\t)!;\n\t\t\tconst disposables = this._getCommandDetectionListeners(capability);\n\t\t\tconst store = new DisposableStore();\n\t\t\tfor (const d of disposables) {\n\t\t\t\tstore.add(d);\n\t\t\t}\n\t\t\tthis._capabilityDisposables.set(\n\t\t\t\tTerminalCapability.CommandDetection,\n\t\t\t\tstore,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _getCommandDetectionListeners(\n\t\tcapability: ICommandDetectionCapability,\n\t): IDisposable[] {\n\t\tif (\n\t\t\tthis._capabilityDisposables.has(TerminalCapability.CommandDetection)\n\t\t) {\n\t\t\tconst disposables = this._capabilityDisposables.get(\n\t\t\t\tTerminalCapability.CommandDetection,\n\t\t\t)!;\n\t\t\tdispose(disposables);\n\t\t\tthis._capabilityDisposables.delete(capability.type);\n\t\t}\n\t\tconst commandDetectionListeners = [];\n\t\t// Command started\n\t\tif (capability.executingCommandObject?.marker) {\n\t\t\tthis.registerCommandDecoration(\n\t\t\t\tcapability.executingCommandObject,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t\tcommandDetectionListeners.push(\n\t\t\tcapability.onCommandStarted((command) =>\n\t\t\t\tthis.registerCommandDecoration(command, true),\n\t\t\t),\n\t\t);\n\t\t// Command finished\n\t\tfor (const command of capability.commands) {\n\t\t\tthis.registerCommandDecoration(command);\n\t\t}\n\t\tcommandDetectionListeners.push(\n\t\t\tcapability.onCommandFinished((command) => {\n\t\t\t\tthis.registerCommandDecoration(command);\n\t\t\t\tif (command.exitCode) {\n\t\t\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\t\t\tAccessibilitySignal.terminalCommandFailed,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\t\t\tAccessibilitySignal.terminalCommandSucceeded,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\t// Command invalidated\n\t\tcommandDetectionListeners.push(\n\t\t\tcapability.onCommandInvalidated((commands) => {\n\t\t\t\tfor (const command of commands) {\n\t\t\t\t\tconst id = command.marker?.id;\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\tconst match = this._decorations.get(id);\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tmatch.decoration.dispose();\n\t\t\t\t\t\t\tdispose(match.disposables);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\t// Current command invalidated\n\t\tcommandDetectionListeners.push(\n\t\t\tcapability.onCurrentCommandInvalidated((request) => {\n\t\t\t\tif (\n\t\t\t\t\trequest.reason ===\n\t\t\t\t\tCommandInvalidationReason.NoProblemsReported\n\t\t\t\t) {\n\t\t\t\t\tconst lastDecoration = Array.from(\n\t\t\t\t\t\tthis._decorations.entries(),\n\t\t\t\t\t)[this._decorations.size - 1];\n\t\t\t\t\tlastDecoration?.[1].decoration.dispose();\n\t\t\t\t} else if (\n\t\t\t\t\trequest.reason === CommandInvalidationReason.Windows\n\t\t\t\t) {\n\t\t\t\t\tthis._clearPlaceholder();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\treturn commandDetectionListeners;\n\t}\n\n\tactivate(terminal: Terminal): void {\n\t\tthis._terminal = terminal;\n\t\tthis._attachToCommandCapability();\n\t}\n\n\tregisterCommandDecoration(\n\t\tcommand?: ITerminalCommand,\n\t\tbeforeCommandExecution?: boolean,\n\t\tmarkProperties?: IMarkProperties,\n\t): IDecoration | undefined {\n\t\tif (\n\t\t\t!this._terminal ||\n\t\t\t(beforeCommandExecution && !command) ||\n\t\t\t(!this._showGutterDecorations &&\n\t\t\t\t!this._showOverviewRulerDecorations)\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst marker = command?.marker || markProperties?.marker;\n\t\tif (!marker) {\n\t\t\tthrow new Error(\n\t\t\t\t`cannot add a decoration for a command ${JSON.stringify(command)} with no marker`,\n\t\t\t);\n\t\t}\n\t\tthis._clearPlaceholder();\n\t\tconst color = this._getDecorationCssColor(command)?.toString() ?? \"\";\n\t\tconst decoration = this._terminal.registerDecoration({\n\t\t\tmarker,\n\t\t\toverviewRulerOptions: this._showOverviewRulerDecorations\n\t\t\t\t? beforeCommandExecution\n\t\t\t\t\t? { color, position: \"left\" }\n\t\t\t\t\t: { color, position: command?.exitCode ? \"right\" : \"left\" }\n\t\t\t\t: undefined,\n\t\t});\n\t\tif (!decoration) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (beforeCommandExecution) {\n\t\t\tthis._placeholderDecoration = decoration;\n\t\t}\n\t\tdecoration.onRender((element) => {\n\t\t\tif (element.classList.contains(DecorationSelector.OverviewRuler)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._decorations.get(decoration.marker.id)) {\n\t\t\t\tdecoration.onDispose(() =>\n\t\t\t\t\tthis._decorations.delete(decoration.marker.id),\n\t\t\t\t);\n\t\t\t\tthis._decorations.set(decoration.marker.id, {\n\t\t\t\t\tdecoration,\n\t\t\t\t\tdisposables: this._createDisposables(\n\t\t\t\t\t\telement,\n\t\t\t\t\t\tcommand,\n\t\t\t\t\t\tmarkProperties,\n\t\t\t\t\t),\n\t\t\t\t\texitCode: command?.exitCode,\n\t\t\t\t\tmarkProperties: command?.markProperties,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!element.classList.contains(DecorationSelector.Codicon) ||\n\t\t\t\tcommand?.marker?.line === 0\n\t\t\t) {\n\t\t\t\t// first render or buffer was cleared\n\t\t\t\tupdateLayout(this._configurationService, element);\n\t\t\t\tthis._updateClasses(\n\t\t\t\t\telement,\n\t\t\t\t\tcommand?.exitCode,\n\t\t\t\t\tcommand?.markProperties || markProperties,\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn decoration;\n\t}\n\n\tprivate _createDisposables(\n\t\telement: HTMLElement,\n\t\tcommand?: ITerminalCommand,\n\t\tmarkProperties?: IMarkProperties,\n\t): IDisposable[] {\n\t\tif (command?.exitCode === undefined && !command?.markProperties) {\n\t\t\treturn [];\n\t\t} else if (command?.markProperties || markProperties) {\n\t\t\treturn [\n\t\t\t\tthis._terminalDecorationHoverManager.createHover(\n\t\t\t\t\telement,\n\t\t\t\t\tcommand || markProperties,\n\t\t\t\t\tmarkProperties?.hoverMessage,\n\t\t\t\t),\n\t\t\t];\n\t\t}\n\t\treturn [\n\t\t\t...this._createContextMenu(element, command),\n\t\t\tthis._terminalDecorationHoverManager.createHover(element, command),\n\t\t];\n\t}\n\n\tprivate _updateClasses(\n\t\telement?: HTMLElement,\n\t\texitCode?: number,\n\t\tmarkProperties?: IMarkProperties,\n\t): void {\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const classes of element.classList) {\n\t\t\telement.classList.remove(classes);\n\t\t}\n\t\telement.classList.add(\n\t\t\tDecorationSelector.CommandDecoration,\n\t\t\tDecorationSelector.Codicon,\n\t\t\tDecorationSelector.XtermDecoration,\n\t\t);\n\n\t\tif (markProperties) {\n\t\t\telement.classList.add(\n\t\t\t\tDecorationSelector.DefaultColor,\n\t\t\t\t...ThemeIcon.asClassNameArray(terminalDecorationMark),\n\t\t\t);\n\t\t\tif (!markProperties.hoverMessage) {\n\t\t\t\t//disable the mouse pointer\n\t\t\t\telement.classList.add(DecorationSelector.Default);\n\t\t\t}\n\t\t} else {\n\t\t\t// command decoration\n\t\t\tthis._updateCommandDecorationVisibility(element);\n\t\t\tif (exitCode === undefined) {\n\t\t\t\telement.classList.add(\n\t\t\t\t\tDecorationSelector.DefaultColor,\n\t\t\t\t\tDecorationSelector.Default,\n\t\t\t\t);\n\t\t\t\telement.classList.add(\n\t\t\t\t\t...ThemeIcon.asClassNameArray(terminalDecorationIncomplete),\n\t\t\t\t);\n\t\t\t} else if (exitCode) {\n\t\t\t\telement.classList.add(DecorationSelector.ErrorColor);\n\t\t\t\telement.classList.add(\n\t\t\t\t\t...ThemeIcon.asClassNameArray(terminalDecorationError),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\telement.classList.add(\n\t\t\t\t\t...ThemeIcon.asClassNameArray(terminalDecorationSuccess),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _createContextMenu(\n\t\telement: HTMLElement,\n\t\tcommand: ITerminalCommand,\n\t): IDisposable[] {\n\t\t// When the xterm Decoration gets disposed of, its element gets removed from the dom\n\t\t// along with its listeners\n\t\treturn [\n\t\t\tdom.addDisposableListener(\n\t\t\t\telement,\n\t\t\t\tdom.EventType.MOUSE_DOWN,\n\t\t\t\tasync (e) => {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t},\n\t\t\t),\n\t\t\tdom.addDisposableListener(\n\t\t\t\telement,\n\t\t\t\tdom.EventType.CLICK,\n\t\t\t\tasync (e) => {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\tthis._terminalDecorationHoverManager.hideHover();\n\t\t\t\t\tconst actions = await this._getCommandActions(command);\n\t\t\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\t\t\tgetAnchor: () => element,\n\t\t\t\t\t\tgetActions: () => actions,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t),\n\t\t\tdom.addDisposableListener(\n\t\t\t\telement,\n\t\t\t\tdom.EventType.CONTEXT_MENU,\n\t\t\t\tasync (e) => {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\tthis._terminalDecorationHoverManager.hideHover();\n\t\t\t\t\tconst actions = this._getContextMenuActions();\n\t\t\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\t\t\tgetAnchor: () => element,\n\t\t\t\t\t\tgetActions: () => actions,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t),\n\t\t];\n\t}\n\tprivate _getContextMenuActions(): IAction[] {\n\t\tconst label = localize(\n\t\t\t\"workbench.action.terminal.toggleVisibility\",\n\t\t\t\"Toggle Visibility\",\n\t\t);\n\t\treturn [\n\t\t\t{\n\t\t\t\tclass: undefined,\n\t\t\t\ttooltip: label,\n\t\t\t\tid: \"terminal.toggleVisibility\",\n\t\t\t\tlabel,\n\t\t\t\tenabled: true,\n\t\t\t\trun: async () => {\n\t\t\t\t\tthis._showToggleVisibilityQuickPick();\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tprivate async _getCommandActions(\n\t\tcommand: ITerminalCommand,\n\t): Promise<IAction[]> {\n\t\tconst actions: IAction[] = [];\n\t\tif (command.command !== \"\") {\n\t\t\tconst labelRun = localize(\"terminal.rerunCommand\", \"Rerun Command\");\n\t\t\tactions.push({\n\t\t\t\tclass: undefined,\n\t\t\t\ttooltip: labelRun,\n\t\t\t\tid: \"terminal.rerunCommand\",\n\t\t\t\tlabel: labelRun,\n\t\t\t\tenabled: true,\n\t\t\t\trun: async () => {\n\t\t\t\t\tif (command.command === \"\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!command.isTrusted) {\n\t\t\t\t\t\tconst shouldRun = await new Promise<boolean>((r) => {\n\t\t\t\t\t\t\tthis._notificationService.prompt(\n\t\t\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\"rerun\",\n\t\t\t\t\t\t\t\t\t\"Do you want to run the command: {0}\",\n\t\t\t\t\t\t\t\t\tcommand.command,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: localize(\"yes\", \"Yes\"),\n\t\t\t\t\t\t\t\t\t\trun: () => r(true),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: localize(\"no\", \"No\"),\n\t\t\t\t\t\t\t\t\t\trun: () => r(false),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!shouldRun) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDidRequestRunCommand.fire({ command });\n\t\t\t\t},\n\t\t\t});\n\t\t\t// The second section is the clipboard section\n\t\t\tactions.push(new Separator());\n\t\t\tconst labelCopy = localize(\"terminal.copyCommand\", \"Copy Command\");\n\t\t\tactions.push({\n\t\t\t\tclass: undefined,\n\t\t\t\ttooltip: labelCopy,\n\t\t\t\tid: \"terminal.copyCommand\",\n\t\t\t\tlabel: labelCopy,\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this._clipboardService.writeText(command.command),\n\t\t\t});\n\t\t}\n\t\tif (command.hasOutput()) {\n\t\t\tconst labelCopyCommandAndOutput = localize(\n\t\t\t\t\"terminal.copyCommandAndOutput\",\n\t\t\t\t\"Copy Command and Output\",\n\t\t\t);\n\t\t\tactions.push({\n\t\t\t\tclass: undefined,\n\t\t\t\ttooltip: labelCopyCommandAndOutput,\n\t\t\t\tid: \"terminal.copyCommandAndOutput\",\n\t\t\t\tlabel: labelCopyCommandAndOutput,\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => {\n\t\t\t\t\tconst output = command.getOutput();\n\t\t\t\t\tif (typeof output === \"string\") {\n\t\t\t\t\t\tthis._clipboardService.writeText(\n\t\t\t\t\t\t\t`${command.command !== \"\" ? command.command + \"\\n\" : \"\"}${output}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst labelText = localize(\"terminal.copyOutput\", \"Copy Output\");\n\t\t\tactions.push({\n\t\t\t\tclass: undefined,\n\t\t\t\ttooltip: labelText,\n\t\t\t\tid: \"terminal.copyOutput\",\n\t\t\t\tlabel: labelText,\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => {\n\t\t\t\t\tconst text = command.getOutput();\n\t\t\t\t\tif (typeof text === \"string\") {\n\t\t\t\t\t\tthis._clipboardService.writeText(text);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst labelHtml = localize(\n\t\t\t\t\"terminal.copyOutputAsHtml\",\n\t\t\t\t\"Copy Output as HTML\",\n\t\t\t);\n\t\t\tactions.push({\n\t\t\t\tclass: undefined,\n\t\t\t\ttooltip: labelHtml,\n\t\t\t\tid: \"terminal.copyOutputAsHtml\",\n\t\t\t\tlabel: labelHtml,\n\t\t\t\tenabled: true,\n\t\t\t\trun: () =>\n\t\t\t\t\tthis._onDidRequestRunCommand.fire({\n\t\t\t\t\t\tcommand,\n\t\t\t\t\t\tcopyAsHtml: true,\n\t\t\t\t\t}),\n\t\t\t});\n\t\t}\n\t\tif (actions.length > 0) {\n\t\t\tactions.push(new Separator());\n\t\t}\n\t\tconst labelRunRecent = localize(\n\t\t\t\"workbench.action.terminal.runRecentCommand\",\n\t\t\t\"Run Recent Command\",\n\t\t);\n\t\tactions.push({\n\t\t\tclass: undefined,\n\t\t\ttooltip: labelRunRecent,\n\t\t\tid: \"workbench.action.terminal.runRecentCommand\",\n\t\t\tlabel: labelRunRecent,\n\t\t\tenabled: true,\n\t\t\trun: () =>\n\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\"workbench.action.terminal.runRecentCommand\",\n\t\t\t\t),\n\t\t});\n\t\tconst labelGoToRecent = localize(\n\t\t\t\"workbench.action.terminal.goToRecentDirectory\",\n\t\t\t\"Go To Recent Directory\",\n\t\t);\n\t\tactions.push({\n\t\t\tclass: undefined,\n\t\t\ttooltip: labelRunRecent,\n\t\t\tid: \"workbench.action.terminal.goToRecentDirectory\",\n\t\t\tlabel: labelGoToRecent,\n\t\t\tenabled: true,\n\t\t\trun: () =>\n\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\"workbench.action.terminal.goToRecentDirectory\",\n\t\t\t\t),\n\t\t});\n\n\t\tactions.push(new Separator());\n\n\t\tconst labelAbout = localize(\n\t\t\t\"terminal.learnShellIntegration\",\n\t\t\t\"Learn About Shell Integration\",\n\t\t);\n\t\tactions.push({\n\t\t\tclass: undefined,\n\t\t\ttooltip: labelAbout,\n\t\t\tid: \"terminal.learnShellIntegration\",\n\t\t\tlabel: labelAbout,\n\t\t\tenabled: true,\n\t\t\trun: () =>\n\t\t\t\tthis._openerService.open(\n\t\t\t\t\t\"https://code.visualstudio.com/docs/terminal/shell-integration\",\n\t\t\t\t),\n\t\t});\n\t\treturn actions;\n\t}\n\n\tprivate _showToggleVisibilityQuickPick() {\n\t\tconst quickPick = this._register(\n\t\t\tthis._quickInputService.createQuickPick(),\n\t\t);\n\t\tquickPick.hideInput = true;\n\t\tquickPick.hideCheckAll = true;\n\t\tquickPick.canSelectMany = true;\n\t\tquickPick.title = localize(\"toggleVisibility\", \"Toggle visibility\");\n\t\tconst configValue = this._configurationService.getValue(\n\t\t\tTerminalSettingId.ShellIntegrationDecorationsEnabled,\n\t\t);\n\t\tconst gutterIcon: IQuickPickItem = {\n\t\t\tlabel: localize(\"gutter\", \"Gutter command decorations\"),\n\t\t\tpicked: configValue !== \"never\" && configValue !== \"overviewRuler\",\n\t\t};\n\t\tconst overviewRulerIcon: IQuickPickItem = {\n\t\t\tlabel: localize(\n\t\t\t\t\"overviewRuler\",\n\t\t\t\t\"Overview ruler command decorations\",\n\t\t\t),\n\t\t\tpicked: configValue !== \"never\" && configValue !== \"gutter\",\n\t\t};\n\t\tquickPick.items = [gutterIcon, overviewRulerIcon];\n\t\tconst selectedItems: IQuickPickItem[] = [];\n\t\tif (configValue !== \"never\") {\n\t\t\tif (configValue !== \"gutter\") {\n\t\t\t\tselectedItems.push(gutterIcon);\n\t\t\t}\n\t\t\tif (configValue !== \"overviewRuler\") {\n\t\t\t\tselectedItems.push(overviewRulerIcon);\n\t\t\t}\n\t\t}\n\t\tquickPick.selectedItems = selectedItems;\n\t\tthis._register(\n\t\t\tquickPick.onDidChangeSelection(async (e) => {\n\t\t\t\tlet newValue: \"both\" | \"gutter\" | \"overviewRuler\" | \"never\" =\n\t\t\t\t\t\"never\";\n\t\t\t\tif (e.includes(gutterIcon)) {\n\t\t\t\t\tif (e.includes(overviewRulerIcon)) {\n\t\t\t\t\t\tnewValue = \"both\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewValue = \"gutter\";\n\t\t\t\t\t}\n\t\t\t\t} else if (e.includes(overviewRulerIcon)) {\n\t\t\t\t\tnewValue = \"overviewRuler\";\n\t\t\t\t}\n\t\t\t\tawait this._configurationService.updateValue(\n\t\t\t\t\tTerminalSettingId.ShellIntegrationDecorationsEnabled,\n\t\t\t\t\tnewValue,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\tquickPick.ok = false;\n\t\tquickPick.show();\n\t}\n\n\tprivate _getDecorationCssColor(\n\t\tdecorationOrCommand?: IDisposableDecoration | ITerminalCommand,\n\t): string | undefined {\n\t\tlet colorId: string;\n\t\tif (decorationOrCommand?.exitCode === undefined) {\n\t\t\tcolorId = TERMINAL_COMMAND_DECORATION_DEFAULT_BACKGROUND_COLOR;\n\t\t} else {\n\t\t\tcolorId = decorationOrCommand.exitCode\n\t\t\t\t? TERMINAL_COMMAND_DECORATION_ERROR_BACKGROUND_COLOR\n\t\t\t\t: TERMINAL_COMMAND_DECORATION_SUCCESS_BACKGROUND_COLOR;\n\t\t}\n\t\treturn this._themeService.getColorTheme().getColor(colorId)?.toString();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
