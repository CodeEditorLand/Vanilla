{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/xterm/decorationAddon.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDecoration, ITerminalAddon, Terminal } from '@xterm/xterm';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { IAction, Separator } from '../../../../../base/common/actions.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable, dispose, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { localize } from '../../../../../nls.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IClipboardService } from '../../../../../platform/clipboard/common/clipboardService.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextMenuService } from '../../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { IQuickInputService, IQuickPickItem } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { CommandInvalidationReason, ICommandDetectionCapability, IMarkProperties, ITerminalCapabilityStore, ITerminalCommand, TerminalCapability } from '../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { TerminalSettingId } from '../../../../../platform/terminal/common/terminal.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { terminalDecorationError, terminalDecorationIncomplete, terminalDecorationMark, terminalDecorationSuccess } from '../terminalIcons.js';\nimport { DecorationSelector, TerminalDecorationHoverManager, updateLayout } from './decorationStyles.js';\nimport { TERMINAL_COMMAND_DECORATION_DEFAULT_BACKGROUND_COLOR, TERMINAL_COMMAND_DECORATION_ERROR_BACKGROUND_COLOR, TERMINAL_COMMAND_DECORATION_SUCCESS_BACKGROUND_COLOR } from '../../common/terminalColorRegistry.js';\nimport { ILifecycleService } from '../../../../services/lifecycle/common/lifecycle.js';\n\ninterface IDisposableDecoration { decoration: IDecoration; disposables: IDisposable[]; exitCode?: number; markProperties?: IMarkProperties }\n\nexport class DecorationAddon extends Disposable implements ITerminalAddon {\n\tprotected _terminal: Terminal | undefined;\n\tprivate _capabilityDisposables: Map<TerminalCapability, DisposableStore> = new Map();\n\tprivate _decorations: Map<number, IDisposableDecoration> = new Map();\n\tprivate _placeholderDecoration: IDecoration | undefined;\n\tprivate _showGutterDecorations?: boolean;\n\tprivate _showOverviewRulerDecorations?: boolean;\n\tprivate _terminalDecorationHoverManager: TerminalDecorationHoverManager;\n\n\tprivate readonly _onDidRequestRunCommand = this._register(new Emitter<{ command: ITerminalCommand; copyAsHtml?: boolean }>());\n\treadonly onDidRequestRunCommand = this._onDidRequestRunCommand.event;\n\n\tconstructor(\n\t\tprivate readonly _capabilities: ITerminalCapabilityStore,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@INotificationService private readonly _notificationService: INotificationService\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => this._dispose()));\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TerminalSettingId.FontSize) || e.affectsConfiguration(TerminalSettingId.LineHeight)) {\n\t\t\t\tthis.refreshLayouts();\n\t\t\t} else if (e.affectsConfiguration('workbench.colorCustomizations')) {\n\t\t\t\tthis._refreshStyles(true);\n\t\t\t} else if (e.affectsConfiguration(TerminalSettingId.ShellIntegrationDecorationsEnabled)) {\n\t\t\t\tthis._removeCapabilityDisposables(TerminalCapability.CommandDetection);\n\t\t\t\tthis._updateDecorationVisibility();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => this._refreshStyles(true)));\n\t\tthis._updateDecorationVisibility();\n\t\tthis._register(this._capabilities.onDidAddCapabilityType(c => this._createCapabilityDisposables(c)));\n\t\tthis._register(this._capabilities.onDidRemoveCapabilityType(c => this._removeCapabilityDisposables(c)));\n\t\tthis._register(lifecycleService.onWillShutdown(() => this._disposeAllDecorations()));\n\t\tthis._terminalDecorationHoverManager = this._register(instantiationService.createInstance(TerminalDecorationHoverManager));\n\t}\n\n\tprivate _removeCapabilityDisposables(c: TerminalCapability): void {\n\t\tconst disposables = this._capabilityDisposables.get(c);\n\t\tif (disposables) {\n\t\t\tdispose(disposables);\n\t\t}\n\t\tthis._capabilityDisposables.delete(c);\n\t}\n\n\tprivate _createCapabilityDisposables(c: TerminalCapability): void {\n\t\tconst store = new DisposableStore();\n\t\tconst capability = this._capabilities.get(c);\n\t\tif (!capability || this._capabilityDisposables.has(c)) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (capability.type) {\n\t\t\tcase TerminalCapability.BufferMarkDetection:\n\t\t\t\tstore.add(capability.onMarkAdded(mark => this.registerMarkDecoration(mark)));\n\t\t\t\tbreak;\n\t\t\tcase TerminalCapability.CommandDetection: {\n\t\t\t\tconst disposables = this._getCommandDetectionListeners(capability);\n\t\t\t\tfor (const d of disposables) {\n\t\t\t\t\tstore.add(d);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._capabilityDisposables.set(c, store);\n\t}\n\n\tregisterMarkDecoration(mark: IMarkProperties): IDecoration | undefined {\n\t\tif (!this._terminal || (!this._showGutterDecorations && !this._showOverviewRulerDecorations)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (mark.hidden) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.registerCommandDecoration(undefined, undefined, mark);\n\t}\n\n\tprivate _updateDecorationVisibility(): void {\n\t\tconst showDecorations = this._configurationService.getValue(TerminalSettingId.ShellIntegrationDecorationsEnabled);\n\t\tthis._showGutterDecorations = (showDecorations === 'both' || showDecorations === 'gutter');\n\t\tthis._showOverviewRulerDecorations = (showDecorations === 'both' || showDecorations === 'overviewRuler');\n\t\tthis._disposeAllDecorations();\n\t\tif (this._showGutterDecorations || this._showOverviewRulerDecorations) {\n\t\t\tthis._attachToCommandCapability();\n\t\t\tthis._updateGutterDecorationVisibility();\n\t\t}\n\t\tconst currentCommand = this._capabilities.get(TerminalCapability.CommandDetection)?.executingCommandObject;\n\t\tif (currentCommand) {\n\t\t\tthis.registerCommandDecoration(currentCommand, true);\n\t\t}\n\t}\n\n\tprivate _disposeAllDecorations(): void {\n\t\tthis._placeholderDecoration?.dispose();\n\t\tfor (const value of this._decorations.values()) {\n\t\t\tvalue.decoration.dispose();\n\t\t\tdispose(value.disposables);\n\t\t}\n\t}\n\n\tprivate _updateGutterDecorationVisibility(): void {\n\t\tconst commandDecorationElements = this._terminal?.element?.querySelectorAll(DecorationSelector.CommandDecoration);\n\t\tif (commandDecorationElements) {\n\t\t\tfor (const commandDecorationElement of commandDecorationElements) {\n\t\t\t\tthis._updateCommandDecorationVisibility(commandDecorationElement);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _updateCommandDecorationVisibility(commandDecorationElement: Element): void {\n\t\tif (this._showGutterDecorations) {\n\t\t\tcommandDecorationElement.classList.remove(DecorationSelector.Hide);\n\t\t} else {\n\t\t\tcommandDecorationElement.classList.add(DecorationSelector.Hide);\n\t\t}\n\t}\n\n\tpublic refreshLayouts(): void {\n\t\tupdateLayout(this._configurationService, this._placeholderDecoration?.element);\n\t\tfor (const decoration of this._decorations) {\n\t\t\tupdateLayout(this._configurationService, decoration[1].decoration.element);\n\t\t}\n\t}\n\n\tprivate _refreshStyles(refreshOverviewRulerColors?: boolean): void {\n\t\tif (refreshOverviewRulerColors) {\n\t\t\tfor (const decoration of this._decorations.values()) {\n\t\t\t\tconst color = this._getDecorationCssColor(decoration)?.toString() ?? '';\n\t\t\t\tif (decoration.decoration.options?.overviewRulerOptions) {\n\t\t\t\t\tdecoration.decoration.options.overviewRulerOptions.color = color;\n\t\t\t\t} else if (decoration.decoration.options) {\n\t\t\t\t\tdecoration.decoration.options.overviewRulerOptions = { color };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._updateClasses(this._placeholderDecoration?.element);\n\t\tfor (const decoration of this._decorations.values()) {\n\t\t\tthis._updateClasses(decoration.decoration.element, decoration.exitCode, decoration.markProperties);\n\t\t}\n\t}\n\n\tprivate _dispose(): void {\n\t\tthis._terminalDecorationHoverManager.dispose();\n\t\tfor (const disposable of this._capabilityDisposables.values()) {\n\t\t\tdispose(disposable);\n\t\t}\n\t\tthis.clearDecorations();\n\t}\n\n\tprivate _clearPlaceholder(): void {\n\t\tthis._placeholderDecoration?.dispose();\n\t\tthis._placeholderDecoration = undefined;\n\t}\n\n\tpublic clearDecorations(): void {\n\t\tthis._placeholderDecoration?.marker.dispose();\n\t\tthis._clearPlaceholder();\n\t\tthis._disposeAllDecorations();\n\t\tthis._decorations.clear();\n\t}\n\n\tprivate _attachToCommandCapability(): void {\n\t\tif (this._capabilities.has(TerminalCapability.CommandDetection)) {\n\t\t\tconst capability = this._capabilities.get(TerminalCapability.CommandDetection)!;\n\t\t\tconst disposables = this._getCommandDetectionListeners(capability);\n\t\t\tconst store = new DisposableStore();\n\t\t\tfor (const d of disposables) {\n\t\t\t\tstore.add(d);\n\t\t\t}\n\t\t\tthis._capabilityDisposables.set(TerminalCapability.CommandDetection, store);\n\t\t}\n\t}\n\n\tprivate _getCommandDetectionListeners(capability: ICommandDetectionCapability): IDisposable[] {\n\t\tif (this._capabilityDisposables.has(TerminalCapability.CommandDetection)) {\n\t\t\tconst disposables = this._capabilityDisposables.get(TerminalCapability.CommandDetection)!;\n\t\t\tdispose(disposables);\n\t\t\tthis._capabilityDisposables.delete(capability.type);\n\t\t}\n\t\tconst commandDetectionListeners = [];\n\t\t// Command started\n\t\tif (capability.executingCommandObject?.marker) {\n\t\t\tthis.registerCommandDecoration(capability.executingCommandObject, true);\n\t\t}\n\t\tcommandDetectionListeners.push(capability.onCommandStarted(command => this.registerCommandDecoration(command, true)));\n\t\t// Command finished\n\t\tfor (const command of capability.commands) {\n\t\t\tthis.registerCommandDecoration(command);\n\t\t}\n\t\tcommandDetectionListeners.push(capability.onCommandFinished(command => {\n\t\t\tthis.registerCommandDecoration(command);\n\t\t\tif (command.exitCode) {\n\t\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.terminalCommandFailed);\n\t\t\t} else {\n\t\t\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.terminalCommandSucceeded);\n\t\t\t}\n\t\t}));\n\t\t// Command invalidated\n\t\tcommandDetectionListeners.push(capability.onCommandInvalidated(commands => {\n\t\t\tfor (const command of commands) {\n\t\t\t\tconst id = command.marker?.id;\n\t\t\t\tif (id) {\n\t\t\t\t\tconst match = this._decorations.get(id);\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\tmatch.decoration.dispose();\n\t\t\t\t\t\tdispose(match.disposables);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\t// Current command invalidated\n\t\tcommandDetectionListeners.push(capability.onCurrentCommandInvalidated((request) => {\n\t\t\tif (request.reason === CommandInvalidationReason.NoProblemsReported) {\n\t\t\t\tconst lastDecoration = Array.from(this._decorations.entries())[this._decorations.size - 1];\n\t\t\t\tlastDecoration?.[1].decoration.dispose();\n\t\t\t} else if (request.reason === CommandInvalidationReason.Windows) {\n\t\t\t\tthis._clearPlaceholder();\n\t\t\t}\n\t\t}));\n\t\treturn commandDetectionListeners;\n\t}\n\n\tactivate(terminal: Terminal): void {\n\t\tthis._terminal = terminal;\n\t\tthis._attachToCommandCapability();\n\t}\n\n\tregisterCommandDecoration(command?: ITerminalCommand, beforeCommandExecution?: boolean, markProperties?: IMarkProperties): IDecoration | undefined {\n\t\tif (!this._terminal || (beforeCommandExecution && !command) || (!this._showGutterDecorations && !this._showOverviewRulerDecorations)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst marker = command?.marker || markProperties?.marker;\n\t\tif (!marker) {\n\t\t\tthrow new Error(`cannot add a decoration for a command ${JSON.stringify(command)} with no marker`);\n\t\t}\n\t\tthis._clearPlaceholder();\n\t\tconst color = this._getDecorationCssColor(command)?.toString() ?? '';\n\t\tconst decoration = this._terminal.registerDecoration({\n\t\t\tmarker,\n\t\t\toverviewRulerOptions: this._showOverviewRulerDecorations ? (beforeCommandExecution\n\t\t\t\t? { color, position: 'left' }\n\t\t\t\t: { color, position: command?.exitCode ? 'right' : 'left' }) : undefined\n\t\t});\n\t\tif (!decoration) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (beforeCommandExecution) {\n\t\t\tthis._placeholderDecoration = decoration;\n\t\t}\n\t\tdecoration.onRender(element => {\n\t\t\tif (element.classList.contains(DecorationSelector.OverviewRuler)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._decorations.get(decoration.marker.id)) {\n\t\t\t\tdecoration.onDispose(() => this._decorations.delete(decoration.marker.id));\n\t\t\t\tthis._decorations.set(decoration.marker.id,\n\t\t\t\t\t{\n\t\t\t\t\t\tdecoration,\n\t\t\t\t\t\tdisposables: this._createDisposables(element, command, markProperties),\n\t\t\t\t\t\texitCode: command?.exitCode,\n\t\t\t\t\t\tmarkProperties: command?.markProperties\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tif (!element.classList.contains(DecorationSelector.Codicon) || command?.marker?.line === 0) {\n\t\t\t\t// first render or buffer was cleared\n\t\t\t\tupdateLayout(this._configurationService, element);\n\t\t\t\tthis._updateClasses(element, command?.exitCode, command?.markProperties || markProperties);\n\t\t\t}\n\t\t});\n\t\treturn decoration;\n\t}\n\n\tprivate _createDisposables(element: HTMLElement, command?: ITerminalCommand, markProperties?: IMarkProperties): IDisposable[] {\n\t\tif (command?.exitCode === undefined && !command?.markProperties) {\n\t\t\treturn [];\n\t\t} else if (command?.markProperties || markProperties) {\n\t\t\treturn [this._terminalDecorationHoverManager.createHover(element, command || markProperties, markProperties?.hoverMessage)];\n\t\t}\n\t\treturn [...this._createContextMenu(element, command), this._terminalDecorationHoverManager.createHover(element, command)];\n\t}\n\n\tprivate _updateClasses(element?: HTMLElement, exitCode?: number, markProperties?: IMarkProperties): void {\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const classes of element.classList) {\n\t\t\telement.classList.remove(classes);\n\t\t}\n\t\telement.classList.add(DecorationSelector.CommandDecoration, DecorationSelector.Codicon, DecorationSelector.XtermDecoration);\n\n\t\tif (markProperties) {\n\t\t\telement.classList.add(DecorationSelector.DefaultColor, ...ThemeIcon.asClassNameArray(terminalDecorationMark));\n\t\t\tif (!markProperties.hoverMessage) {\n\t\t\t\t//disable the mouse pointer\n\t\t\t\telement.classList.add(DecorationSelector.Default);\n\t\t\t}\n\t\t} else {\n\t\t\t// command decoration\n\t\t\tthis._updateCommandDecorationVisibility(element);\n\t\t\tif (exitCode === undefined) {\n\t\t\t\telement.classList.add(DecorationSelector.DefaultColor, DecorationSelector.Default);\n\t\t\t\telement.classList.add(...ThemeIcon.asClassNameArray(terminalDecorationIncomplete));\n\t\t\t} else if (exitCode) {\n\t\t\t\telement.classList.add(DecorationSelector.ErrorColor);\n\t\t\t\telement.classList.add(...ThemeIcon.asClassNameArray(terminalDecorationError));\n\t\t\t} else {\n\t\t\t\telement.classList.add(...ThemeIcon.asClassNameArray(terminalDecorationSuccess));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _createContextMenu(element: HTMLElement, command: ITerminalCommand): IDisposable[] {\n\t\t// When the xterm Decoration gets disposed of, its element gets removed from the dom\n\t\t// along with its listeners\n\t\treturn [\n\t\t\tdom.addDisposableListener(element, dom.EventType.MOUSE_DOWN, async (e) => {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t}),\n\t\t\tdom.addDisposableListener(element, dom.EventType.CLICK, async (e) => {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\tthis._terminalDecorationHoverManager.hideHover();\n\t\t\t\tconst actions = await this._getCommandActions(command);\n\t\t\t\tthis._contextMenuService.showContextMenu({ getAnchor: () => element, getActions: () => actions });\n\t\t\t}),\n\t\t\tdom.addDisposableListener(element, dom.EventType.CONTEXT_MENU, async (e) => {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\tthis._terminalDecorationHoverManager.hideHover();\n\t\t\t\tconst actions = this._getContextMenuActions();\n\t\t\t\tthis._contextMenuService.showContextMenu({ getAnchor: () => element, getActions: () => actions });\n\t\t\t}),\n\t\t];\n\t}\n\tprivate _getContextMenuActions(): IAction[] {\n\t\tconst label = localize('workbench.action.terminal.toggleVisibility', \"Toggle Visibility\");\n\t\treturn [\n\t\t\t{\n\t\t\t\tclass: undefined, tooltip: label, id: 'terminal.toggleVisibility', label, enabled: true,\n\t\t\t\trun: async () => {\n\t\t\t\t\tthis._showToggleVisibilityQuickPick();\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\tprivate async _getCommandActions(command: ITerminalCommand): Promise<IAction[]> {\n\t\tconst actions: IAction[] = [];\n\t\tif (command.command !== '') {\n\t\t\tconst labelRun = localize(\"terminal.rerunCommand\", 'Rerun Command');\n\t\t\tactions.push({\n\t\t\t\tclass: undefined, tooltip: labelRun, id: 'terminal.rerunCommand', label: labelRun, enabled: true,\n\t\t\t\trun: async () => {\n\t\t\t\t\tif (command.command === '') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!command.isTrusted) {\n\t\t\t\t\t\tconst shouldRun = await new Promise<boolean>(r => {\n\t\t\t\t\t\t\tthis._notificationService.prompt(Severity.Info, localize('rerun', 'Do you want to run the command: {0}', command.command), [{\n\t\t\t\t\t\t\t\tlabel: localize('yes', 'Yes'),\n\t\t\t\t\t\t\t\trun: () => r(true)\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tlabel: localize('no', 'No'),\n\t\t\t\t\t\t\t\trun: () => r(false)\n\t\t\t\t\t\t\t}]);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!shouldRun) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDidRequestRunCommand.fire({ command });\n\t\t\t\t}\n\t\t\t});\n\t\t\t// The second section is the clipboard section\n\t\t\tactions.push(new Separator());\n\t\t\tconst labelCopy = localize(\"terminal.copyCommand\", 'Copy Command');\n\t\t\tactions.push({\n\t\t\t\tclass: undefined, tooltip: labelCopy, id: 'terminal.copyCommand', label: labelCopy, enabled: true,\n\t\t\t\trun: () => this._clipboardService.writeText(command.command)\n\t\t\t});\n\t\t}\n\t\tif (command.hasOutput()) {\n\t\t\tconst labelCopyCommandAndOutput = localize(\"terminal.copyCommandAndOutput\", 'Copy Command and Output');\n\t\t\tactions.push({\n\t\t\t\tclass: undefined, tooltip: labelCopyCommandAndOutput, id: 'terminal.copyCommandAndOutput', label: labelCopyCommandAndOutput, enabled: true,\n\t\t\t\trun: () => {\n\t\t\t\t\tconst output = command.getOutput();\n\t\t\t\t\tif (typeof output === 'string') {\n\t\t\t\t\t\tthis._clipboardService.writeText(`${command.command !== '' ? command.command + '\\n' : ''}${output}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst labelText = localize(\"terminal.copyOutput\", 'Copy Output');\n\t\t\tactions.push({\n\t\t\t\tclass: undefined, tooltip: labelText, id: 'terminal.copyOutput', label: labelText, enabled: true,\n\t\t\t\trun: () => {\n\t\t\t\t\tconst text = command.getOutput();\n\t\t\t\t\tif (typeof text === 'string') {\n\t\t\t\t\t\tthis._clipboardService.writeText(text);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst labelHtml = localize(\"terminal.copyOutputAsHtml\", 'Copy Output as HTML');\n\t\t\tactions.push({\n\t\t\t\tclass: undefined, tooltip: labelHtml, id: 'terminal.copyOutputAsHtml', label: labelHtml, enabled: true,\n\t\t\t\trun: () => this._onDidRequestRunCommand.fire({ command, copyAsHtml: true })\n\t\t\t});\n\t\t}\n\t\tif (actions.length > 0) {\n\t\t\tactions.push(new Separator());\n\t\t}\n\t\tconst labelRunRecent = localize('workbench.action.terminal.runRecentCommand', \"Run Recent Command\");\n\t\tactions.push({\n\t\t\tclass: undefined, tooltip: labelRunRecent, id: 'workbench.action.terminal.runRecentCommand', label: labelRunRecent, enabled: true,\n\t\t\trun: () => this._commandService.executeCommand('workbench.action.terminal.runRecentCommand')\n\t\t});\n\t\tconst labelGoToRecent = localize('workbench.action.terminal.goToRecentDirectory', \"Go To Recent Directory\");\n\t\tactions.push({\n\t\t\tclass: undefined, tooltip: labelRunRecent, id: 'workbench.action.terminal.goToRecentDirectory', label: labelGoToRecent, enabled: true,\n\t\t\trun: () => this._commandService.executeCommand('workbench.action.terminal.goToRecentDirectory')\n\t\t});\n\n\t\tactions.push(new Separator());\n\n\t\tconst labelAbout = localize(\"terminal.learnShellIntegration\", 'Learn About Shell Integration');\n\t\tactions.push({\n\t\t\tclass: undefined, tooltip: labelAbout, id: 'terminal.learnShellIntegration', label: labelAbout, enabled: true,\n\t\t\trun: () => this._openerService.open('https://code.visualstudio.com/docs/terminal/shell-integration')\n\t\t});\n\t\treturn actions;\n\t}\n\n\tprivate _showToggleVisibilityQuickPick() {\n\t\tconst quickPick = this._register(this._quickInputService.createQuickPick());\n\t\tquickPick.hideInput = true;\n\t\tquickPick.hideCheckAll = true;\n\t\tquickPick.canSelectMany = true;\n\t\tquickPick.title = localize('toggleVisibility', 'Toggle visibility');\n\t\tconst configValue = this._configurationService.getValue(TerminalSettingId.ShellIntegrationDecorationsEnabled);\n\t\tconst gutterIcon: IQuickPickItem = {\n\t\t\tlabel: localize('gutter', 'Gutter command decorations'),\n\t\t\tpicked: configValue !== 'never' && configValue !== 'overviewRuler'\n\t\t};\n\t\tconst overviewRulerIcon: IQuickPickItem = {\n\t\t\tlabel: localize('overviewRuler', 'Overview ruler command decorations'),\n\t\t\tpicked: configValue !== 'never' && configValue !== 'gutter'\n\t\t};\n\t\tquickPick.items = [gutterIcon, overviewRulerIcon];\n\t\tconst selectedItems: IQuickPickItem[] = [];\n\t\tif (configValue !== 'never') {\n\t\t\tif (configValue !== 'gutter') {\n\t\t\t\tselectedItems.push(gutterIcon);\n\t\t\t}\n\t\t\tif (configValue !== 'overviewRuler') {\n\t\t\t\tselectedItems.push(overviewRulerIcon);\n\t\t\t}\n\t\t}\n\t\tquickPick.selectedItems = selectedItems;\n\t\tthis._register(quickPick.onDidChangeSelection(async e => {\n\t\t\tlet newValue: 'both' | 'gutter' | 'overviewRuler' | 'never' = 'never';\n\t\t\tif (e.includes(gutterIcon)) {\n\t\t\t\tif (e.includes(overviewRulerIcon)) {\n\t\t\t\t\tnewValue = 'both';\n\t\t\t\t} else {\n\t\t\t\t\tnewValue = 'gutter';\n\t\t\t\t}\n\t\t\t} else if (e.includes(overviewRulerIcon)) {\n\t\t\t\tnewValue = 'overviewRuler';\n\t\t\t}\n\t\t\tawait this._configurationService.updateValue(TerminalSettingId.ShellIntegrationDecorationsEnabled, newValue);\n\t\t}));\n\t\tquickPick.ok = false;\n\t\tquickPick.show();\n\t}\n\n\tprivate _getDecorationCssColor(decorationOrCommand?: IDisposableDecoration | ITerminalCommand): string | undefined {\n\t\tlet colorId: string;\n\t\tif (decorationOrCommand?.exitCode === undefined) {\n\t\t\tcolorId = TERMINAL_COMMAND_DECORATION_DEFAULT_BACKGROUND_COLOR;\n\t\t} else {\n\t\t\tcolorId = decorationOrCommand.exitCode ? TERMINAL_COMMAND_DECORATION_ERROR_BACKGROUND_COLOR : TERMINAL_COMMAND_DECORATION_SUCCESS_BACKGROUND_COLOR;\n\t\t}\n\t\treturn this._themeService.getColorTheme().getColor(colorId)?.toString();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
