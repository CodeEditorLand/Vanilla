{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalIcon.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createStyleSheet } from \"../../../../base/browser/dom.js\";\nimport { hash } from \"../../../../base/common/hash.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tIExtensionTerminalProfile,\n\tITerminalProfile,\n} from \"../../../../platform/terminal/common/terminal.js\";\nimport { getIconRegistry } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport { ColorScheme } from \"../../../../platform/theme/common/theme.js\";\nimport type { IColorTheme } from \"../../../../platform/theme/common/themeService.js\";\nimport { ITerminalProfileResolverService } from \"../common/terminal.js\";\nimport { ansiColorMap } from \"../common/terminalColorRegistry.js\";\nimport type { ITerminalInstance } from \"./terminal.js\";\n\nexport function getColorClass(colorKey: string): string;\nexport function getColorClass(profile: ITerminalProfile): string;\nexport function getColorClass(terminal: ITerminalInstance): string | undefined;\nexport function getColorClass(\n\textensionTerminalProfile: IExtensionTerminalProfile,\n): string | undefined;\nexport function getColorClass(\n\tterminalOrColorKey:\n\t\t| ITerminalInstance\n\t\t| IExtensionTerminalProfile\n\t\t| ITerminalProfile\n\t\t| string,\n): string | undefined {\n\tlet color;\n\tif (typeof terminalOrColorKey === \"string\") {\n\t\tcolor = terminalOrColorKey;\n\t} else if (terminalOrColorKey.color) {\n\t\tcolor = terminalOrColorKey.color.replace(/\\./g, \"_\");\n\t} else if (\n\t\tThemeIcon.isThemeIcon(terminalOrColorKey.icon) &&\n\t\tterminalOrColorKey.icon.color\n\t) {\n\t\tcolor = terminalOrColorKey.icon.color.id.replace(/\\./g, \"_\");\n\t}\n\tif (color) {\n\t\treturn `terminal-icon-${color.replace(/\\./g, \"_\")}`;\n\t}\n\treturn undefined;\n}\n\nexport function getStandardColors(colorTheme: IColorTheme): string[] {\n\tconst standardColors: string[] = [];\n\n\tfor (const colorKey in ansiColorMap) {\n\t\tconst color = colorTheme.getColor(colorKey);\n\t\tif (color && !colorKey.toLowerCase().includes(\"bright\")) {\n\t\t\tstandardColors.push(colorKey);\n\t\t}\n\t}\n\treturn standardColors;\n}\n\nexport function createColorStyleElement(colorTheme: IColorTheme): IDisposable {\n\tconst disposable = new DisposableStore();\n\tconst standardColors = getStandardColors(colorTheme);\n\tconst styleElement = createStyleSheet(undefined, undefined, disposable);\n\tlet css = \"\";\n\tfor (const colorKey of standardColors) {\n\t\tconst colorClass = getColorClass(colorKey);\n\t\tconst color = colorTheme.getColor(colorKey);\n\t\tif (color) {\n\t\t\tcss +=\n\t\t\t\t`.monaco-workbench .${colorClass} .codicon:first-child:not(.codicon-split-horizontal):not(.codicon-trashcan):not(.file-icon)` +\n\t\t\t\t`{ color: ${color} !important; }`;\n\t\t}\n\t}\n\tstyleElement.textContent = css;\n\treturn disposable;\n}\n\nexport function getColorStyleContent(\n\tcolorTheme: IColorTheme,\n\teditor?: boolean,\n): string {\n\tconst standardColors = getStandardColors(colorTheme);\n\tlet css = \"\";\n\tfor (const colorKey of standardColors) {\n\t\tconst colorClass = getColorClass(colorKey);\n\t\tconst color = colorTheme.getColor(colorKey);\n\t\tif (color) {\n\t\t\tif (editor) {\n\t\t\t\tcss +=\n\t\t\t\t\t`.monaco-workbench .show-file-icons .predefined-file-icon.terminal-tab.${colorClass}::before,` +\n\t\t\t\t\t`.monaco-workbench .show-file-icons .file-icon.terminal-tab.${colorClass}::before` +\n\t\t\t\t\t`{ color: ${color} !important; }`;\n\t\t\t} else {\n\t\t\t\tcss +=\n\t\t\t\t\t`.monaco-workbench .${colorClass} .codicon:first-child:not(.codicon-split-horizontal):not(.codicon-trashcan):not(.file-icon)` +\n\t\t\t\t\t`{ color: ${color} !important; }`;\n\t\t\t}\n\t\t}\n\t}\n\treturn css;\n}\n\nexport function getUriClasses(\n\tterminal: ITerminalInstance | IExtensionTerminalProfile | ITerminalProfile,\n\tcolorScheme: ColorScheme,\n\textensionContributed?: boolean,\n): string[] | undefined {\n\tconst icon = terminal.icon;\n\tif (!icon) {\n\t\treturn undefined;\n\t}\n\tconst iconClasses: string[] = [];\n\tlet uri;\n\n\tif (extensionContributed) {\n\t\tif (\n\t\t\ttypeof icon === \"string\" &&\n\t\t\t(icon.startsWith(\"$(\") || getIconRegistry().getIcon(icon))\n\t\t) {\n\t\t\treturn iconClasses;\n\t\t} else if (typeof icon === \"string\") {\n\t\t\turi = URI.parse(icon);\n\t\t}\n\t}\n\n\tif (icon instanceof URI) {\n\t\turi = icon;\n\t} else if (icon instanceof Object && \"light\" in icon && \"dark\" in icon) {\n\t\turi = colorScheme === ColorScheme.LIGHT ? icon.light : icon.dark;\n\t}\n\tif (uri instanceof URI) {\n\t\tconst uriIconKey = hash(uri.path).toString(36);\n\t\tconst className = `terminal-uri-icon-${uriIconKey}`;\n\t\ticonClasses.push(className);\n\t\ticonClasses.push(`terminal-uri-icon`);\n\t}\n\treturn iconClasses;\n}\n\nexport function getIconId(\n\taccessor: ServicesAccessor,\n\tterminal: ITerminalInstance | IExtensionTerminalProfile | ITerminalProfile,\n): string {\n\tif (\n\t\t!terminal.icon ||\n\t\t(terminal.icon instanceof Object && !(\"id\" in terminal.icon))\n\t) {\n\t\treturn accessor.get(ITerminalProfileResolverService).getDefaultIcon()\n\t\t\t.id;\n\t}\n\treturn typeof terminal.icon === \"string\" ? terminal.icon : terminal.icon.id;\n}\n"],
  "mappings": "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",
  "names": []
}
