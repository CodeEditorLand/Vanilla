{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport {\n\tActionViewItem,\n\ttype IBaseActionViewItemOptions,\n\tSelectActionViewItem,\n} from \"../../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport type { IActionViewItem } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport type {\n\tIHoverDelegate,\n\tIHoverDelegateOptions,\n} from \"../../../../base/browser/ui/hover/hoverDelegate.js\";\nimport { renderLabelWithIcons } from \"../../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport type { ISelectOptionItem } from \"../../../../base/browser/ui/selectBox/selectBox.js\";\nimport { Action, type IAction } from \"../../../../base/common/actions.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { MicrotaskDelay } from \"../../../../base/common/symbols.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport { DropdownWithPrimaryActionViewItem } from \"../../../../platform/actions/browser/dropdownWithPrimaryActionViewItem.js\";\nimport {\n\tMenuEntryActionViewItem,\n\tcreateAndFillInContextMenuActions,\n} from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n\tMenuItemAction,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n} from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tINotificationService,\n\ttype IPromptChoice,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { TerminalCapability } from \"../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport {\n\ttype ITerminalProfile,\n\tTerminalLocation,\n\tTerminalSettingId,\n} from \"../../../../platform/terminal/common/terminal.js\";\nimport { defaultSelectBoxStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tasCssVariable,\n\tselectBorder,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { ColorScheme } from \"../../../../platform/theme/common/theme.js\";\nimport {\n\tIThemeService,\n\tThemable,\n} from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\ttype IViewPaneOptions,\n\tViewPane,\n} from \"../../../browser/parts/views/viewPane.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport {\n\tITerminalProfileResolverService,\n\tITerminalProfileService,\n\tTerminalCommandId,\n} from \"../common/terminal.js\";\nimport { TerminalContextKeys } from \"../common/terminalContextKey.js\";\nimport {\n\ttype ICreateTerminalOptions,\n\tITerminalConfigurationService,\n\tITerminalGroupService,\n\ttype ITerminalInstance,\n\tITerminalService,\n\tTerminalConnectionState,\n\tTerminalDataTransfers,\n} from \"./terminal.js\";\nimport {\n\tswitchTerminalActionViewItemSeparator,\n\tswitchTerminalShowTabsTitle,\n} from \"./terminalActions.js\";\nimport {\n\tInstanceContext,\n\tTerminalContextActionRunner,\n} from \"./terminalContextMenu.js\";\nimport { getColorClass, getUriClasses } from \"./terminalIcon.js\";\nimport { getTerminalActionBarArgs } from \"./terminalMenus.js\";\nimport { getColorForSeverity } from \"./terminalStatusList.js\";\nimport { TerminalTabbedView } from \"./terminalTabbedView.js\";\nimport { getInstanceHoverInfo } from \"./terminalTooltip.js\";\n\nexport class TerminalViewPane extends ViewPane {\n\tprivate _parentDomElement: HTMLElement | undefined;\n\tprivate _terminalTabbedView?: TerminalTabbedView;\n\tget terminalTabbedView(): TerminalTabbedView | undefined {\n\t\treturn this._terminalTabbedView;\n\t}\n\tprivate _isInitialized = false;\n\tprivate readonly _newDropdown: MutableDisposable<DropdownWithPrimaryActionViewItem> =\n\t\tthis._register(new MutableDisposable());\n\tprivate readonly _dropdownMenu: IMenu;\n\tprivate readonly _singleTabMenu: IMenu;\n\tprivate _viewShowing: IContextKey<boolean>;\n\tprivate readonly _disposableStore = this._register(new DisposableStore());\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@ITerminalConfigurationService private readonly _terminalConfigurationService: ITerminalConfigurationService,\n\t\t@ITerminalGroupService private readonly _terminalGroupService: ITerminalGroupService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t\t@ITerminalProfileService private readonly _terminalProfileService: ITerminalProfileService,\n\t\t@ITerminalProfileResolverService private readonly _terminalProfileResolverService: ITerminalProfileResolverService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper(options, keybindingService, _contextMenuService, _configurationService, _contextKeyService, viewDescriptorService, _instantiationService, openerService, themeService, telemetryService, hoverService);\n\t\tthis._register(this._terminalService.onDidRegisterProcessSupport(() => {\n\t\t\tthis._onDidChangeViewWelcomeState.fire();\n\t\t}));\n\n\t\tthis._register(this._terminalService.onDidChangeInstances(() => {\n\t\t\t// If the first terminal is opened, hide the welcome view\n\t\t\t// and if the last one is closed, show it again\n\t\t\tif (this._hasWelcomeScreen() && this._terminalGroupService.instances.length <= 1) {\n\t\t\t\tthis._onDidChangeViewWelcomeState.fire();\n\t\t\t}\n\t\t\tif (!this._parentDomElement) { return; }\n\t\t\t// If we do not have the tab view yet, create it now.\n\t\t\tif (!this._terminalTabbedView) {\n\t\t\t\tthis._createTabsView();\n\t\t\t}\n\t\t\t// If we just opened our first terminal, layout\n\t\t\tif (this._terminalGroupService.instances.length === 1) {\n\t\t\t\tthis.layoutBody(this._parentDomElement.offsetHeight, this._parentDomElement.offsetWidth);\n\t\t\t}\n\t\t}));\n\t\tthis._dropdownMenu = this._register(this._menuService.createMenu(MenuId.TerminalNewDropdownContext, this._contextKeyService));\n\t\tthis._singleTabMenu = this._register(this._menuService.createMenu(MenuId.TerminalTabContext, this._contextKeyService));\n\t\tthis._register(this._terminalProfileService.onDidChangeAvailableProfiles(profiles => this._updateTabActionBar(profiles)));\n\t\tthis._viewShowing = TerminalContextKeys.viewShowing.bindTo(this._contextKeyService);\n\t\tthis._register(this.onDidChangeBodyVisibility(e => {\n\t\t\tif (e) {\n\t\t\t\tthis._terminalTabbedView?.rerenderTabs();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (this._parentDomElement && (e.affectsConfiguration(TerminalSettingId.ShellIntegrationDecorationsEnabled) || e.affectsConfiguration(TerminalSettingId.ShellIntegrationEnabled))) {\n\t\t\t\tthis._updateForShellIntegration(this._parentDomElement);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._terminalService.onDidCreateInstance((i) => {\n\t\t\ti.capabilities.onDidAddCapabilityType(c => {\n\t\t\t\tif (c === TerminalCapability.CommandDetection && this._gutterDecorationsEnabled()) {\n\t\t\t\t\tthis._parentDomElement?.classList.add('shell-integration');\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\t}\n\n\tprivate _updateForShellIntegration(container: HTMLElement) {\n\t\tcontainer.classList.toggle(\n\t\t\t\"shell-integration\",\n\t\t\tthis._gutterDecorationsEnabled(),\n\t\t);\n\t}\n\n\tprivate _gutterDecorationsEnabled(): boolean {\n\t\tconst decorationsEnabled = this._configurationService.getValue(\n\t\t\tTerminalSettingId.ShellIntegrationDecorationsEnabled,\n\t\t);\n\t\treturn (\n\t\t\t(decorationsEnabled === \"both\" ||\n\t\t\t\tdecorationsEnabled === \"gutter\") &&\n\t\t\tthis._configurationService.getValue(\n\t\t\t\tTerminalSettingId.ShellIntegrationEnabled,\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate _initializeTerminal(checkRestoredTerminals: boolean) {\n\t\tif (\n\t\t\tthis.isBodyVisible() &&\n\t\t\tthis._terminalService.isProcessSupportRegistered &&\n\t\t\tthis._terminalService.connectionState ===\n\t\t\t\tTerminalConnectionState.Connected\n\t\t) {\n\t\t\tconst wasInitialized = this._isInitialized;\n\t\t\tthis._isInitialized = true;\n\n\t\t\tlet hideOnStartup: \"never\" | \"whenEmpty\" | \"always\" = \"never\";\n\t\t\tif (!wasInitialized) {\n\t\t\t\thideOnStartup = this._configurationService.getValue(\n\t\t\t\t\tTerminalSettingId.HideOnStartup,\n\t\t\t\t);\n\t\t\t\tif (hideOnStartup === \"always\") {\n\t\t\t\t\tthis._terminalGroupService.hidePanel();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldCreate = this._terminalGroupService.groups.length === 0;\n\t\t\t// When triggered just after reconnection, also check there are no groups that could be\n\t\t\t// getting restored currently\n\t\t\tif (checkRestoredTerminals) {\n\t\t\t\tshouldCreate &&= this._terminalService.restoredGroupCount === 0;\n\t\t\t}\n\t\t\tif (!shouldCreate) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!wasInitialized) {\n\t\t\t\tswitch (hideOnStartup) {\n\t\t\t\t\tcase \"never\":\n\t\t\t\t\t\tthis._terminalService.createTerminal({\n\t\t\t\t\t\t\tlocation: TerminalLocation.Panel,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"whenEmpty\":\n\t\t\t\t\t\tif (this._terminalService.restoredGroupCount === 0) {\n\t\t\t\t\t\t\tthis._terminalGroupService.hidePanel();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._terminalService.createTerminal({\n\t\t\t\tlocation: TerminalLocation.Panel,\n\t\t\t});\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tif (!this._parentDomElement) {\n\t\t\tthis._updateForShellIntegration(container);\n\t\t}\n\t\tthis._parentDomElement = container;\n\t\tthis._parentDomElement.classList.add(\"integrated-terminal\");\n\t\tdom.createStyleSheet(this._parentDomElement);\n\t\tthis._instantiationService.createInstance(\n\t\t\tTerminalThemeIconStyle,\n\t\t\tthis._parentDomElement,\n\t\t);\n\n\t\tif (!this.shouldShowWelcome()) {\n\t\t\tthis._createTabsView();\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(TerminalSettingId.FontFamily) ||\n\t\t\t\t\te.affectsConfiguration(\"editor.fontFamily\")\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this._terminalConfigurationService.configFontIsMonospace()\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst choices: IPromptChoice[] = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\t\t\"terminal.useMonospace\",\n\t\t\t\t\t\t\t\t\t\"Use 'monospace'\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\t\tthis.configurationService.updateValue(\n\t\t\t\t\t\t\t\t\t\tTerminalSettingId.FontFamily,\n\t\t\t\t\t\t\t\t\t\t\"monospace\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t];\n\t\t\t\t\t\tthis._notificationService.prompt(\n\t\t\t\t\t\t\tSeverity.Warning,\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"terminal.monospaceOnly\",\n\t\t\t\t\t\t\t\t\"The terminal only supports monospace fonts. Be sure to restart VS Code if this is a newly installed font.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tchoices,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.onDidChangeBodyVisibility(async (visible) => {\n\t\t\t\tthis._viewShowing.set(visible);\n\t\t\t\tif (visible) {\n\t\t\t\t\tif (this._hasWelcomeScreen()) {\n\t\t\t\t\t\tthis._onDidChangeViewWelcomeState.fire();\n\t\t\t\t\t}\n\t\t\t\t\tthis._initializeTerminal(false);\n\t\t\t\t\t// we don't know here whether or not it should be focused, so\n\t\t\t\t\t// defer focusing the panel to the focus() call\n\t\t\t\t\t// to prevent overriding preserveFocus for extensions\n\t\t\t\t\tthis._terminalGroupService.showPanel(false);\n\t\t\t\t} else {\n\t\t\t\t\tfor (const instance of this._terminalGroupService\n\t\t\t\t\t\t.instances) {\n\t\t\t\t\t\tinstance.resetFocusContextKey();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._terminalGroupService.updateVisibility();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._terminalService.onDidChangeConnectionState(() =>\n\t\t\t\tthis._initializeTerminal(true),\n\t\t\t),\n\t\t);\n\t\tthis.layoutBody(\n\t\t\tthis._parentDomElement.offsetHeight,\n\t\t\tthis._parentDomElement.offsetWidth,\n\t\t);\n\t}\n\n\tprivate _createTabsView(): void {\n\t\tif (!this._parentDomElement) {\n\t\t\treturn;\n\t\t}\n\t\tthis._terminalTabbedView = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tTerminalTabbedView,\n\t\t\t\tthis._parentDomElement,\n\t\t\t),\n\t\t);\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis._terminalTabbedView?.layout(width, height);\n\t}\n\n\toverride getActionViewItem(\n\t\taction: Action,\n\t\toptions: IBaseActionViewItemOptions,\n\t): IActionViewItem | undefined {\n\t\tswitch (action.id) {\n\t\t\tcase TerminalCommandId.Split: {\n\t\t\t\t// Split needs to be special cased to force splitting within the panel, not the editor\n\t\t\t\tconst that = this;\n\t\t\t\tconst panelOnlySplitAction = new (class extends Action {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper(\n\t\t\t\t\t\t\taction.id,\n\t\t\t\t\t\t\taction.label,\n\t\t\t\t\t\t\taction.class,\n\t\t\t\t\t\t\taction.enabled,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.checked = action.checked;\n\t\t\t\t\t\tthis.tooltip = action.tooltip;\n\t\t\t\t\t\tthis._register(action);\n\t\t\t\t\t}\n\t\t\t\t\toverride async run() {\n\t\t\t\t\t\tconst instance =\n\t\t\t\t\t\t\tthat._terminalGroupService.activeInstance;\n\t\t\t\t\t\tif (instance) {\n\t\t\t\t\t\t\tconst newInstance =\n\t\t\t\t\t\t\t\tawait that._terminalService.createTerminal({\n\t\t\t\t\t\t\t\t\tlocation: { parentTerminal: instance },\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn newInstance?.focusWhenReady();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t\treturn new ActionViewItem(action, panelOnlySplitAction, {\n\t\t\t\t\t...options,\n\t\t\t\t\ticon: true,\n\t\t\t\t\tlabel: false,\n\t\t\t\t\tkeybinding: this._getKeybindingLabel(action),\n\t\t\t\t});\n\t\t\t}\n\t\t\tcase TerminalCommandId.SwitchTerminal: {\n\t\t\t\treturn this._instantiationService.createInstance(\n\t\t\t\t\tSwitchTerminalActionViewItem,\n\t\t\t\t\taction,\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase TerminalCommandId.Focus: {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\t\tcreateAndFillInContextMenuActions(\n\t\t\t\t\t\tthis._singleTabMenu,\n\t\t\t\t\t\t{ shouldForwardArgs: true },\n\t\t\t\t\t\tactions,\n\t\t\t\t\t);\n\t\t\t\t\treturn this._instantiationService.createInstance(\n\t\t\t\t\t\tSingleTerminalTabActionViewItem,\n\t\t\t\t\t\taction,\n\t\t\t\t\t\tactions,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase TerminalCommandId.New: {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\tconst actions = getTerminalActionBarArgs(\n\t\t\t\t\t\tTerminalLocation.Panel,\n\t\t\t\t\t\tthis._terminalProfileService.availableProfiles,\n\t\t\t\t\t\tthis._getDefaultProfileName(),\n\t\t\t\t\t\tthis._terminalProfileService.contributedProfiles,\n\t\t\t\t\t\tthis._terminalService,\n\t\t\t\t\t\tthis._dropdownMenu,\n\t\t\t\t\t);\n\t\t\t\t\tthis._registerDisposableActions(\n\t\t\t\t\t\tactions.dropdownAction,\n\t\t\t\t\t\tactions.dropdownMenuActions,\n\t\t\t\t\t);\n\t\t\t\t\tthis._newDropdown.value =\n\t\t\t\t\t\tnew DropdownWithPrimaryActionViewItem(\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\tactions.dropdownAction,\n\t\t\t\t\t\t\tactions.dropdownMenuActions,\n\t\t\t\t\t\t\tactions.className,\n\t\t\t\t\t\t\tthis._contextMenuService,\n\t\t\t\t\t\t\t{ hoverDelegate: options.hoverDelegate },\n\t\t\t\t\t\t\tthis._keybindingService,\n\t\t\t\t\t\t\tthis._notificationService,\n\t\t\t\t\t\t\tthis._contextKeyService,\n\t\t\t\t\t\t\tthis._themeService,\n\t\t\t\t\t\t\tthis._accessibilityService,\n\t\t\t\t\t\t);\n\t\t\t\t\tthis._newDropdown.value?.update(\n\t\t\t\t\t\tactions.dropdownAction,\n\t\t\t\t\t\tactions.dropdownMenuActions,\n\t\t\t\t\t);\n\t\t\t\t\treturn this._newDropdown.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn super.getActionViewItem(action, options);\n\t}\n\n\t/**\n\t * Actions might be of type Action (disposable) or Separator or SubmenuAction, which don't extend Disposable\n\t */\n\tprivate _registerDisposableActions(\n\t\tdropdownAction: IAction,\n\t\tdropdownMenuActions: IAction[],\n\t): void {\n\t\tthis._disposableStore.clear();\n\t\tif (dropdownAction instanceof Action) {\n\t\t\tthis._disposableStore.add(dropdownAction);\n\t\t}\n\t\tdropdownMenuActions\n\t\t\t.filter((a) => a instanceof Action)\n\t\t\t.forEach((a) => this._disposableStore.add(a));\n\t}\n\n\tprivate _getDefaultProfileName(): string {\n\t\tlet defaultProfileName;\n\t\ttry {\n\t\t\tdefaultProfileName =\n\t\t\t\tthis._terminalProfileService.getDefaultProfileName();\n\t\t} catch (e) {\n\t\t\tdefaultProfileName =\n\t\t\t\tthis._terminalProfileResolverService.defaultProfileName;\n\t\t}\n\t\treturn defaultProfileName!;\n\t}\n\n\tprivate _getKeybindingLabel(action: IAction): string | undefined {\n\t\treturn (\n\t\t\tthis._keybindingService.lookupKeybinding(action.id)?.getLabel() ??\n\t\t\tundefined\n\t\t);\n\t}\n\n\tprivate _updateTabActionBar(profiles: ITerminalProfile[]): void {\n\t\tconst actions = getTerminalActionBarArgs(\n\t\t\tTerminalLocation.Panel,\n\t\t\tprofiles,\n\t\t\tthis._getDefaultProfileName(),\n\t\t\tthis._terminalProfileService.contributedProfiles,\n\t\t\tthis._terminalService,\n\t\t\tthis._dropdownMenu,\n\t\t);\n\t\tthis._registerDisposableActions(\n\t\t\tactions.dropdownAction,\n\t\t\tactions.dropdownMenuActions,\n\t\t);\n\t\tthis._newDropdown.value?.update(\n\t\t\tactions.dropdownAction,\n\t\t\tactions.dropdownMenuActions,\n\t\t);\n\t}\n\n\toverride focus() {\n\t\tsuper.focus();\n\t\tif (\n\t\t\tthis._terminalService.connectionState ===\n\t\t\tTerminalConnectionState.Connected\n\t\t) {\n\t\t\tthis._terminalGroupService.showPanel(true);\n\t\t\treturn;\n\t\t}\n\n\t\t// If the terminal is waiting to reconnect to remote terminals, then there is no TerminalInstance yet that can\n\t\t// be focused. So wait for connection to finish, then focus.\n\t\tconst previousActiveElement = this.element.ownerDocument.activeElement;\n\t\tif (previousActiveElement) {\n\t\t\t// TODO: Improve lifecycle management this event should be disposed after first fire\n\t\t\tthis._register(\n\t\t\t\tthis._terminalService.onDidChangeConnectionState(() => {\n\t\t\t\t\t// Only focus the terminal if the activeElement has not changed since focus() was called\n\t\t\t\t\t// TODO: Hack\n\t\t\t\t\tif (\n\t\t\t\t\t\tpreviousActiveElement &&\n\t\t\t\t\t\tdom.isActiveElement(previousActiveElement)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._terminalGroupService.showPanel(true);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _hasWelcomeScreen(): boolean {\n\t\treturn !this._terminalService.isProcessSupportRegistered;\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn (\n\t\t\tthis._hasWelcomeScreen() &&\n\t\t\tthis._terminalService.instances.length === 0\n\t\t);\n\t}\n}\n\nclass SwitchTerminalActionViewItem extends SelectActionViewItem {\n\tconstructor(\n\t\taction: IAction,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@ITerminalGroupService private readonly _terminalGroupService: ITerminalGroupService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@ITerminalProfileService terminalProfileService: ITerminalProfileService\n\t) {\n\t\tsuper(null, action, getTerminalSelectOpenItems(_terminalService, _terminalGroupService), _terminalGroupService.activeGroupIndex, contextViewService, defaultSelectBoxStyles, { ariaLabel: nls.localize('terminals', 'Open Terminals.'), optionsAsChildren: true });\n\t\tthis._register(_terminalService.onDidChangeInstances(() => this._updateItems(), this));\n\t\tthis._register(_terminalService.onDidChangeActiveGroup(() => this._updateItems(), this));\n\t\tthis._register(_terminalService.onDidChangeActiveInstance(() => this._updateItems(), this));\n\t\tthis._register(_terminalService.onAnyInstanceTitleChange(() => this._updateItems(), this));\n\t\tthis._register(_terminalGroupService.onDidChangeGroups(() => this._updateItems(), this));\n\t\tthis._register(_terminalService.onDidChangeConnectionState(() => this._updateItems(), this));\n\t\tthis._register(terminalProfileService.onDidChangeAvailableProfiles(() => this._updateItems(), this));\n\t\tthis._register(_terminalService.onAnyInstancePrimaryStatusChange(() => this._updateItems(), this));\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tcontainer.classList.add(\"switch-terminal\");\n\t\tcontainer.style.borderColor = asCssVariable(selectBorder);\n\t}\n\n\tprivate _updateItems(): void {\n\t\tconst options = getTerminalSelectOpenItems(\n\t\t\tthis._terminalService,\n\t\t\tthis._terminalGroupService,\n\t\t);\n\t\tthis.setOptions(options, this._terminalGroupService.activeGroupIndex);\n\t}\n}\n\nfunction getTerminalSelectOpenItems(\n\tterminalService: ITerminalService,\n\tterminalGroupService: ITerminalGroupService,\n): ISelectOptionItem[] {\n\tlet items: ISelectOptionItem[];\n\tif (terminalService.connectionState === TerminalConnectionState.Connected) {\n\t\titems = terminalGroupService.getGroupLabels().map((label) => {\n\t\t\treturn { text: label };\n\t\t});\n\t} else {\n\t\titems = [\n\t\t\t{ text: nls.localize(\"terminalConnectingLabel\", \"Starting...\") },\n\t\t];\n\t}\n\titems.push({\n\t\ttext: switchTerminalActionViewItemSeparator,\n\t\tisDisabled: true,\n\t});\n\titems.push({ text: switchTerminalShowTabsTitle });\n\treturn items;\n}\n\nclass SingleTerminalTabActionViewItem extends MenuEntryActionViewItem {\n\tprivate _color: string | undefined;\n\tprivate _altCommand: string | undefined;\n\tprivate _class: string | undefined;\n\tprivate readonly _elementDisposables: IDisposable[] = [];\n\n\tconstructor(\n\t\taction: MenuItemAction,\n\t\tprivate readonly _actions: IAction[],\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@ITerminalConfigurationService private readonly _terminaConfigurationService: ITerminalConfigurationService,\n\t\t@ITerminalGroupService private readonly _terminalGroupService: ITerminalGroupService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IAccessibilityService _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper(action, {\n\t\t\tdraggable: true,\n\t\t\thoverDelegate: _instantiationService.createInstance(SingleTabHoverDelegate)\n\t\t}, keybindingService, notificationService, contextKeyService, themeService, contextMenuService, _accessibilityService);\n\n\t\t// Register listeners to update the tab\n\t\tthis._register(Event.debounce<ITerminalInstance | undefined, Set<ITerminalInstance>>(Event.any(\n\t\t\tthis._terminalService.onAnyInstancePrimaryStatusChange,\n\t\t\tthis._terminalGroupService.onDidChangeActiveInstance,\n\t\t\tEvent.map(this._terminalService.onAnyInstanceIconChange, e => e.instance),\n\t\t\tthis._terminalService.onAnyInstanceTitleChange,\n\t\t\tthis._terminalService.onDidChangeInstanceCapability,\n\t\t), (last, e) => {\n\t\t\tif (!last) {\n\t\t\t\tlast = new Set();\n\t\t\t}\n\t\t\tif (e) {\n\t\t\t\tlast.add(e);\n\t\t\t}\n\t\t\treturn last;\n\t\t}, MicrotaskDelay)(merged => {\n\t\t\tfor (const e of merged) {\n\t\t\t\tthis.updateLabel(e);\n\t\t\t}\n\t\t}));\n\n\t\t// Clean up on dispose\n\t\tthis._register(toDisposable(() => dispose(this._elementDisposables)));\n\t}\n\n\toverride async onClick(event: MouseEvent): Promise<void> {\n\t\tthis._terminalGroupService.lastAccessedMenu = \"inline-tab\";\n\t\tif (event.altKey && this._menuItemAction.alt) {\n\t\t\tthis._commandService.executeCommand(this._menuItemAction.alt.id, {\n\t\t\t\tlocation: TerminalLocation.Panel,\n\t\t\t} satisfies ICreateTerminalOptions);\n\t\t} else {\n\t\t\tthis._openContextMenu();\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tprotected override updateLabel(e?: ITerminalInstance): void {\n\t\t// Only update if it's the active instance\n\t\tif (e && e !== this._terminalGroupService.activeInstance) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis._elementDisposables.length === 0 &&\n\t\t\tthis.element &&\n\t\t\tthis.label\n\t\t) {\n\t\t\t// Right click opens context menu\n\t\t\tthis._elementDisposables.push(\n\t\t\t\tdom.addDisposableListener(\n\t\t\t\t\tthis.element,\n\t\t\t\t\tdom.EventType.CONTEXT_MENU,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (e.button === 2) {\n\t\t\t\t\t\t\tthis._openContextMenu();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\t// Middle click kills\n\t\t\tthis._elementDisposables.push(\n\t\t\t\tdom.addDisposableListener(\n\t\t\t\t\tthis.element,\n\t\t\t\t\tdom.EventType.AUXCLICK,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (e.button === 1) {\n\t\t\t\t\t\t\tconst instance =\n\t\t\t\t\t\t\t\tthis._terminalGroupService.activeInstance;\n\t\t\t\t\t\t\tif (instance) {\n\t\t\t\t\t\t\t\tthis._terminalService.safeDisposeTerminal(\n\t\t\t\t\t\t\t\t\tinstance,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\t// Drag and drop\n\t\t\tthis._elementDisposables.push(\n\t\t\t\tdom.addDisposableListener(\n\t\t\t\t\tthis.element,\n\t\t\t\t\tdom.EventType.DRAG_START,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tconst instance =\n\t\t\t\t\t\t\tthis._terminalGroupService.activeInstance;\n\t\t\t\t\t\tif (e.dataTransfer && instance) {\n\t\t\t\t\t\t\te.dataTransfer.setData(\n\t\t\t\t\t\t\t\tTerminalDataTransfers.Terminals,\n\t\t\t\t\t\t\t\tJSON.stringify([instance.resource.toString()]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst label = this.label;\n\t\t\tconst instance = this._terminalGroupService.activeInstance;\n\t\t\tif (!instance) {\n\t\t\t\tdom.reset(label, \"\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlabel.classList.add(\"single-terminal-tab\");\n\t\t\tlet colorStyle = \"\";\n\t\t\tconst primaryStatus = instance.statusList.primary;\n\t\t\tif (primaryStatus) {\n\t\t\t\tconst colorKey = getColorForSeverity(primaryStatus.severity);\n\t\t\t\tthis._themeService.getColorTheme();\n\t\t\t\tconst foundColor = this._themeService\n\t\t\t\t\t.getColorTheme()\n\t\t\t\t\t.getColor(colorKey);\n\t\t\t\tif (foundColor) {\n\t\t\t\t\tcolorStyle = foundColor.toString();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlabel.style.color = colorStyle;\n\t\t\tdom.reset(\n\t\t\t\tlabel,\n\t\t\t\t...renderLabelWithIcons(\n\t\t\t\t\tthis._instantiationService.invokeFunction(\n\t\t\t\t\t\tgetSingleTabLabel,\n\t\t\t\t\t\tinstance,\n\t\t\t\t\t\tthis._terminaConfigurationService.config.tabs.separator,\n\t\t\t\t\t\tThemeIcon.isThemeIcon(this._commandAction.item.icon)\n\t\t\t\t\t\t\t? this._commandAction.item.icon\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (this._altCommand) {\n\t\t\t\tlabel.classList.remove(this._altCommand);\n\t\t\t\tthis._altCommand = undefined;\n\t\t\t}\n\t\t\tif (this._color) {\n\t\t\t\tlabel.classList.remove(this._color);\n\t\t\t\tthis._color = undefined;\n\t\t\t}\n\t\t\tif (this._class) {\n\t\t\t\tlabel.classList.remove(this._class);\n\t\t\t\tlabel.classList.remove(\"terminal-uri-icon\");\n\t\t\t\tthis._class = undefined;\n\t\t\t}\n\t\t\tconst colorClass = getColorClass(instance);\n\t\t\tif (colorClass) {\n\t\t\t\tthis._color = colorClass;\n\t\t\t\tlabel.classList.add(colorClass);\n\t\t\t}\n\t\t\tconst uriClasses = getUriClasses(\n\t\t\t\tinstance,\n\t\t\t\tthis._themeService.getColorTheme().type,\n\t\t\t);\n\t\t\tif (uriClasses) {\n\t\t\t\tthis._class = uriClasses?.[0];\n\t\t\t\tlabel.classList.add(...uriClasses);\n\t\t\t}\n\t\t\tif (this._commandAction.item.icon) {\n\t\t\t\tthis._altCommand = `alt-command`;\n\t\t\t\tlabel.classList.add(this._altCommand);\n\t\t\t}\n\t\t\tthis.updateTooltip();\n\t\t}\n\t}\n\n\tprivate _openContextMenu() {\n\t\tthis._contextMenuService.showContextMenu({\n\t\t\tactionRunner: new TerminalContextActionRunner(),\n\t\t\tgetAnchor: () => this.element!,\n\t\t\tgetActions: () => this._actions,\n\t\t\t// The context is always the active instance in the terminal view\n\t\t\tgetActionsContext: () => {\n\t\t\t\tconst instance = this._terminalGroupService.activeInstance;\n\t\t\t\treturn instance ? [new InstanceContext(instance)] : [];\n\t\t\t},\n\t\t});\n\t}\n}\n\nfunction getSingleTabLabel(\n\taccessor: ServicesAccessor,\n\tinstance: ITerminalInstance | undefined,\n\tseparator: string,\n\ticon?: ThemeIcon,\n) {\n\t// Don't even show the icon if there is no title as the icon would shift around when the title\n\t// is added\n\tif (!instance || !instance.title) {\n\t\treturn \"\";\n\t}\n\tconst iconId = ThemeIcon.isThemeIcon(instance.icon)\n\t\t? instance.icon.id\n\t\t: accessor.get(ITerminalProfileResolverService).getDefaultIcon().id;\n\tconst label = `$(${icon?.id || iconId}) ${getSingleTabTitle(instance, separator)}`;\n\n\tconst primaryStatus = instance.statusList.primary;\n\tif (!primaryStatus?.icon) {\n\t\treturn label;\n\t}\n\treturn `${label} $(${primaryStatus.icon.id})`;\n}\n\nfunction getSingleTabTitle(\n\tinstance: ITerminalInstance | undefined,\n\tseparator: string,\n): string {\n\tif (!instance) {\n\t\treturn \"\";\n\t}\n\treturn instance.description\n\t\t? `${instance.title} ${separator} ${instance.description}`\n\t\t: instance.title;\n}\n\nclass TerminalThemeIconStyle extends Themable {\n\tprivate _styleElement: HTMLElement;\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@ITerminalGroupService private readonly _terminalGroupService: ITerminalGroupService\n\t) {\n\t\tsuper(_themeService);\n\t\tthis._registerListeners();\n\t\tthis._styleElement = dom.createStyleSheet(container);\n\t\tthis._register(toDisposable(() => this._styleElement.remove()));\n\t\tthis.updateStyles();\n\t}\n\n\tprivate _registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis._terminalService.onAnyInstanceIconChange(() =>\n\t\t\t\tthis.updateStyles(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._terminalService.onDidChangeInstances(() =>\n\t\t\t\tthis.updateStyles(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._terminalGroupService.onDidChangeGroups(() =>\n\t\t\t\tthis.updateStyles(),\n\t\t\t),\n\t\t);\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\t\tconst colorTheme = this._themeService.getColorTheme();\n\n\t\t// TODO: add a rule collector to avoid duplication\n\t\tlet css = \"\";\n\n\t\t// Add icons\n\t\tfor (const instance of this._terminalService.instances) {\n\t\t\tconst icon = instance.icon;\n\t\t\tif (!icon) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet uri;\n\t\t\tif (icon instanceof URI) {\n\t\t\t\turi = icon;\n\t\t\t} else if (\n\t\t\t\ticon instanceof Object &&\n\t\t\t\t\"light\" in icon &&\n\t\t\t\t\"dark\" in icon\n\t\t\t) {\n\t\t\t\turi =\n\t\t\t\t\tcolorTheme.type === ColorScheme.LIGHT\n\t\t\t\t\t\t? icon.light\n\t\t\t\t\t\t: icon.dark;\n\t\t\t}\n\t\t\tconst iconClasses = getUriClasses(instance, colorTheme.type);\n\t\t\tif (uri instanceof URI && iconClasses && iconClasses.length > 1) {\n\t\t\t\tcss +=\n\t\t\t\t\t`.monaco-workbench .${iconClasses[0]} .monaco-highlighted-label .codicon, .monaco-action-bar .terminal-uri-icon.single-terminal-tab.action-label:not(.alt-command) .codicon` +\n\t\t\t\t\t`{background-image: ${dom.asCSSUrl(uri)};}`;\n\t\t\t}\n\t\t}\n\n\t\t// Add colors\n\t\tfor (const instance of this._terminalService.instances) {\n\t\t\tconst colorClass = getColorClass(instance);\n\t\t\tif (!colorClass || !instance.color) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst color = colorTheme.getColor(instance.color);\n\t\t\tif (color) {\n\t\t\t\t// exclude status icons (file-icon) and inline action icons (trashcan and horizontalSplit)\n\t\t\t\tcss +=\n\t\t\t\t\t`.monaco-workbench .${colorClass} .codicon:first-child:not(.codicon-split-horizontal):not(.codicon-trashcan):not(.file-icon)` +\n\t\t\t\t\t`{ color: ${color} !important; }`;\n\t\t\t}\n\t\t}\n\n\t\tthis._styleElement.textContent = css;\n\t}\n}\n\nclass SingleTabHoverDelegate implements IHoverDelegate {\n\tprivate _lastHoverHideTime = 0;\n\n\treadonly placement = \"element\";\n\n\tconstructor(\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t\t@ITerminalGroupService private readonly _terminalGroupService: ITerminalGroupService\n\t) {\n\t}\n\n\tget delay(): number {\n\t\treturn Date.now() - this._lastHoverHideTime < 200\n\t\t\t? 0 // show instantly when a hover was recently shown\n\t\t\t: this._configurationService.getValue<number>(\n\t\t\t\t\t\"workbench.hover.delay\",\n\t\t\t\t);\n\t}\n\n\tshowHover(options: IHoverDelegateOptions, focus?: boolean) {\n\t\tconst instance = this._terminalGroupService.activeInstance;\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\t\tconst hoverInfo = getInstanceHoverInfo(instance);\n\t\treturn this._hoverService.showHover(\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tcontent: hoverInfo.content,\n\t\t\t\tactions: hoverInfo.actions,\n\t\t\t},\n\t\t\tfocus,\n\t\t);\n\t}\n\n\tonDidHideHover() {\n\t\tthis._lastHoverHideTime = Date.now();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["e"]
}
