{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalGroupService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Orientation } from \"../../../../base/browser/ui/sash/sash.js\";\nimport { asArray } from \"../../../../base/common/arrays.js\";\nimport { timeout } from \"../../../../base/common/async.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport type { IShellLaunchConfig } from \"../../../../platform/terminal/common/terminal.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { TERMINAL_VIEW_ID } from \"../common/terminal.js\";\nimport { TerminalContextKeys } from \"../common/terminalContextKey.js\";\nimport type {\n\tITerminalGroup,\n\tITerminalGroupService,\n\tITerminalInstance,\n} from \"./terminal.js\";\nimport { TerminalGroup } from \"./terminalGroup.js\";\nimport { getInstanceFromResource } from \"./terminalUri.js\";\nimport type { TerminalViewPane } from \"./terminalView.js\";\n\nexport class TerminalGroupService\n\textends Disposable\n\timplements ITerminalGroupService\n{\n\tdeclare _serviceBrand: undefined;\n\n\tgroups: ITerminalGroup[] = [];\n\tactiveGroupIndex = -1;\n\tget instances(): ITerminalInstance[] {\n\t\treturn this.groups.reduce(\n\t\t\t(p, c) => p.concat(c.terminalInstances),\n\t\t\t[] as ITerminalInstance[],\n\t\t);\n\t}\n\n\tlastAccessedMenu: \"inline-tab\" | \"tab-list\" = \"inline-tab\";\n\n\tprivate _terminalGroupCountContextKey: IContextKey<number>;\n\n\tprivate _container: HTMLElement | undefined;\n\n\tprivate _isQuickInputOpened = false;\n\n\tprivate readonly _onDidChangeActiveGroup = this._register(\n\t\tnew Emitter<ITerminalGroup | undefined>(),\n\t);\n\treadonly onDidChangeActiveGroup = this._onDidChangeActiveGroup.event;\n\tprivate readonly _onDidDisposeGroup = this._register(\n\t\tnew Emitter<ITerminalGroup>(),\n\t);\n\treadonly onDidDisposeGroup = this._onDidDisposeGroup.event;\n\tprivate readonly _onDidChangeGroups = this._register(new Emitter<void>());\n\treadonly onDidChangeGroups = this._onDidChangeGroups.event;\n\tprivate readonly _onDidShow = this._register(new Emitter<void>());\n\treadonly onDidShow = this._onDidShow.event;\n\n\tprivate readonly _onDidDisposeInstance = this._register(\n\t\tnew Emitter<ITerminalInstance>(),\n\t);\n\treadonly onDidDisposeInstance = this._onDidDisposeInstance.event;\n\tprivate readonly _onDidFocusInstance = this._register(\n\t\tnew Emitter<ITerminalInstance>(),\n\t);\n\treadonly onDidFocusInstance = this._onDidFocusInstance.event;\n\tprivate readonly _onDidChangeActiveInstance = this._register(\n\t\tnew Emitter<ITerminalInstance | undefined>(),\n\t);\n\treadonly onDidChangeActiveInstance = this._onDidChangeActiveInstance.event;\n\tprivate readonly _onDidChangeInstances = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeInstances = this._onDidChangeInstances.event;\n\tprivate readonly _onDidChangeInstanceCapability = this._register(\n\t\tnew Emitter<ITerminalInstance>(),\n\t);\n\treadonly onDidChangeInstanceCapability =\n\t\tthis._onDidChangeInstanceCapability.event;\n\n\tprivate readonly _onDidChangePanelOrientation = this._register(\n\t\tnew Emitter<Orientation>(),\n\t);\n\treadonly onDidChangePanelOrientation =\n\t\tthis._onDidChangePanelOrientation.event;\n\n\tconstructor(\n\t\t@IContextKeyService private _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IViewDescriptorService private readonly _viewDescriptorService: IViewDescriptorService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService\n\t) {\n\t\tsuper();\n\n\t\tthis._terminalGroupCountContextKey = TerminalContextKeys.groupCount.bindTo(this._contextKeyService);\n\n\t\tthis._register(this.onDidDisposeGroup(group => this._removeGroup(group)));\n\t\tthis._register(this.onDidChangeGroups(() => this._terminalGroupCountContextKey.set(this.groups.length)));\n\t\tthis._register(Event.any(this.onDidChangeActiveGroup, this.onDidChangeInstances)(() => this.updateVisibility()));\n\t\tthis._register(this._quickInputService.onShow(() => this._isQuickInputOpened = true));\n\t\tthis._register(this._quickInputService.onHide(() => this._isQuickInputOpened = false));\n\t}\n\n\thidePanel(): void {\n\t\t// Hide the panel if the terminal is in the panel and it has no sibling views\n\t\tconst panel =\n\t\t\tthis._viewDescriptorService.getViewContainerByViewId(\n\t\t\t\tTERMINAL_VIEW_ID,\n\t\t\t);\n\t\tif (\n\t\t\tpanel &&\n\t\t\tthis._viewDescriptorService.getViewContainerModel(panel)\n\t\t\t\t.activeViewDescriptors.length === 1\n\t\t) {\n\t\t\tthis._viewsService.closeView(TERMINAL_VIEW_ID);\n\t\t\tTerminalContextKeys.tabsMouse\n\t\t\t\t.bindTo(this._contextKeyService)\n\t\t\t\t.set(false);\n\t\t}\n\t}\n\n\tget activeGroup(): ITerminalGroup | undefined {\n\t\tif (\n\t\t\tthis.activeGroupIndex < 0 ||\n\t\t\tthis.activeGroupIndex >= this.groups.length\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.groups[this.activeGroupIndex];\n\t}\n\tset activeGroup(value: ITerminalGroup | undefined) {\n\t\tif (value === undefined) {\n\t\t\t// Setting to undefined is not possible, this can only be done when removing the last group\n\t\t\treturn;\n\t\t}\n\t\tconst index = this.groups.findIndex((e) => e === value);\n\t\tthis.setActiveGroupByIndex(index);\n\t}\n\n\tget activeInstance(): ITerminalInstance | undefined {\n\t\treturn this.activeGroup?.activeInstance;\n\t}\n\n\tsetActiveInstance(instance: ITerminalInstance) {\n\t\tthis.setActiveInstanceByIndex(\n\t\t\tthis._getIndexFromId(instance.instanceId),\n\t\t);\n\t}\n\n\tprivate _getIndexFromId(terminalId: number): number {\n\t\tconst terminalIndex = this.instances.findIndex(\n\t\t\t(e) => e.instanceId === terminalId,\n\t\t);\n\t\tif (terminalIndex === -1) {\n\t\t\tthrow new Error(\n\t\t\t\t`Terminal with ID ${terminalId} does not exist (has it already been disposed?)`,\n\t\t\t);\n\t\t}\n\t\treturn terminalIndex;\n\t}\n\n\tsetContainer(container: HTMLElement) {\n\t\tthis._container = container;\n\t\tthis.groups.forEach((group) => group.attachToElement(container));\n\t}\n\n\tasync focusTabs(): Promise<void> {\n\t\tif (this.instances.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.showPanel(true);\n\t\tconst pane =\n\t\t\tthis._viewsService.getActiveViewWithId<TerminalViewPane>(\n\t\t\t\tTERMINAL_VIEW_ID,\n\t\t\t);\n\t\tpane?.terminalTabbedView?.focusTabs();\n\t}\n\n\tasync focusHover(): Promise<void> {\n\t\tif (this.instances.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pane =\n\t\t\tthis._viewsService.getActiveViewWithId<TerminalViewPane>(\n\t\t\t\tTERMINAL_VIEW_ID,\n\t\t\t);\n\t\tpane?.terminalTabbedView?.focusHover();\n\t}\n\n\tasync focusInstance(_: ITerminalInstance): Promise<void> {\n\t\treturn this.showPanel(true);\n\t}\n\n\tasync focusActiveInstance(): Promise<void> {\n\t\treturn this.showPanel(true);\n\t}\n\n\tcreateGroup(\n\t\tslcOrInstance?: IShellLaunchConfig | ITerminalInstance,\n\t): ITerminalGroup {\n\t\tconst group = this._instantiationService.createInstance(\n\t\t\tTerminalGroup,\n\t\t\tthis._container,\n\t\t\tslcOrInstance,\n\t\t);\n\t\tthis.groups.push(group);\n\t\tgroup.addDisposable(\n\t\t\tEvent.forward(\n\t\t\t\tgroup.onPanelOrientationChanged,\n\t\t\t\tthis._onDidChangePanelOrientation,\n\t\t\t),\n\t\t);\n\t\tgroup.addDisposable(\n\t\t\tEvent.forward(\n\t\t\t\tgroup.onDidDisposeInstance,\n\t\t\t\tthis._onDidDisposeInstance,\n\t\t\t),\n\t\t);\n\t\tgroup.addDisposable(\n\t\t\tEvent.forward(group.onDidFocusInstance, this._onDidFocusInstance),\n\t\t);\n\t\tgroup.addDisposable(\n\t\t\tEvent.forward(\n\t\t\t\tgroup.onDidChangeInstanceCapability,\n\t\t\t\tthis._onDidChangeInstanceCapability,\n\t\t\t),\n\t\t);\n\t\tgroup.addDisposable(\n\t\t\tEvent.forward(group.onInstancesChanged, this._onDidChangeInstances),\n\t\t);\n\t\tgroup.addDisposable(\n\t\t\tEvent.forward(group.onDisposed, this._onDidDisposeGroup),\n\t\t);\n\t\tgroup.addDisposable(\n\t\t\tgroup.onDidChangeActiveInstance((e) => {\n\t\t\t\tif (group === this.activeGroup) {\n\t\t\t\t\tthis._onDidChangeActiveInstance.fire(e);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tif (group.terminalInstances.length > 0) {\n\t\t\tthis._onDidChangeInstances.fire();\n\t\t}\n\t\tif (this.instances.length === 1) {\n\t\t\t// It's the first instance so it should be made active automatically, this must fire\n\t\t\t// after onInstancesChanged so consumers can react to the instance being added first\n\t\t\tthis.setActiveInstanceByIndex(0);\n\t\t}\n\t\tthis._onDidChangeGroups.fire();\n\t\treturn group;\n\t}\n\n\tasync showPanel(focus?: boolean): Promise<void> {\n\t\tconst pane =\n\t\t\tthis._viewsService.getActiveViewWithId(TERMINAL_VIEW_ID) ??\n\t\t\t(await this._viewsService.openView(TERMINAL_VIEW_ID, focus));\n\t\tpane?.setExpanded(true);\n\n\t\tif (focus) {\n\t\t\t// Do the focus call asynchronously as going through the\n\t\t\t// command palette will force editor focus\n\t\t\tawait timeout(0);\n\t\t\tconst instance = this.activeInstance;\n\t\t\tif (instance) {\n\t\t\t\t// HACK: Ensure the panel is still visible at this point as there may have been\n\t\t\t\t// a request since it was opened to show a different panel\n\t\t\t\tif (pane && !pane.isVisible()) {\n\t\t\t\t\tawait this._viewsService.openView(TERMINAL_VIEW_ID, focus);\n\t\t\t\t}\n\t\t\t\tawait instance.focusWhenReady(true);\n\t\t\t}\n\t\t}\n\t\tthis._onDidShow.fire();\n\t}\n\n\tgetInstanceFromResource(\n\t\tresource: URI | undefined,\n\t): ITerminalInstance | undefined {\n\t\treturn getInstanceFromResource(this.instances, resource);\n\t}\n\n\tprivate _removeGroup(group: ITerminalGroup) {\n\t\t// Get the index of the group and remove it from the list\n\t\tconst activeGroup = this.activeGroup;\n\t\tconst wasActiveGroup = group === activeGroup;\n\t\tconst index = this.groups.indexOf(group);\n\t\tif (index !== -1) {\n\t\t\tthis.groups.splice(index, 1);\n\t\t\tthis._onDidChangeGroups.fire();\n\t\t}\n\n\t\tif (wasActiveGroup) {\n\t\t\t// Adjust focus if the group was active\n\t\t\tif (this.groups.length > 0 && !this._isQuickInputOpened) {\n\t\t\t\tconst newIndex =\n\t\t\t\t\tindex < this.groups.length ? index : this.groups.length - 1;\n\t\t\t\tthis.setActiveGroupByIndex(newIndex, true);\n\t\t\t\tthis.activeInstance?.focus(true);\n\t\t\t}\n\t\t} else {\n\t\t\t// Adjust the active group if the removed group was above the active group\n\t\t\tif (this.activeGroupIndex > index) {\n\t\t\t\tthis.setActiveGroupByIndex(this.activeGroupIndex - 1);\n\t\t\t}\n\t\t}\n\t\t// Ensure the active group is still valid, this should set the activeGroupIndex to -1 if\n\t\t// there are no groups\n\t\tif (this.activeGroupIndex >= this.groups.length) {\n\t\t\tthis.setActiveGroupByIndex(this.groups.length - 1);\n\t\t}\n\n\t\tthis._onDidChangeInstances.fire();\n\t\tthis._onDidChangeGroups.fire();\n\t\tif (wasActiveGroup) {\n\t\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\t\tthis._onDidChangeActiveInstance.fire(this.activeInstance);\n\t\t}\n\t}\n\n\t/**\n\t * @param force Whether to force the group change, this should be used when the previous active\n\t * group has been removed.\n\t */\n\tsetActiveGroupByIndex(index: number, force?: boolean) {\n\t\t// Unset active group when the last group is removed\n\t\tif (index === -1 && this.groups.length === 0) {\n\t\t\tif (this.activeGroupIndex !== -1) {\n\t\t\t\tthis.activeGroupIndex = -1;\n\t\t\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\t\t\tthis._onDidChangeActiveInstance.fire(this.activeInstance);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure index is valid\n\t\tif (index < 0 || index >= this.groups.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fire group/instance change if needed\n\t\tconst oldActiveGroup = this.activeGroup;\n\t\tthis.activeGroupIndex = index;\n\t\tif (force || oldActiveGroup !== this.activeGroup) {\n\t\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\t\tthis._onDidChangeActiveInstance.fire(this.activeInstance);\n\t\t}\n\t}\n\n\tprivate _getInstanceLocation(index: number): IInstanceLocation | undefined {\n\t\tlet currentGroupIndex = 0;\n\t\twhile (index >= 0 && currentGroupIndex < this.groups.length) {\n\t\t\tconst group = this.groups[currentGroupIndex];\n\t\t\tconst count = group.terminalInstances.length;\n\t\t\tif (index < count) {\n\t\t\t\treturn {\n\t\t\t\t\tgroup,\n\t\t\t\t\tgroupIndex: currentGroupIndex,\n\t\t\t\t\tinstance: group.terminalInstances[index],\n\t\t\t\t\tinstanceIndex: index,\n\t\t\t\t};\n\t\t\t}\n\t\t\tindex -= count;\n\t\t\tcurrentGroupIndex++;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetActiveInstanceByIndex(index: number) {\n\t\tconst activeInstance = this.activeInstance;\n\t\tconst instanceLocation = this._getInstanceLocation(index);\n\t\tconst newActiveInstance =\n\t\t\tinstanceLocation?.group.terminalInstances[\n\t\t\t\tinstanceLocation.instanceIndex\n\t\t\t];\n\t\tif (!instanceLocation || activeInstance === newActiveInstance) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeInstanceIndex = instanceLocation.instanceIndex;\n\n\t\tthis.activeGroupIndex = instanceLocation.groupIndex;\n\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\tinstanceLocation.group.setActiveInstanceByIndex(\n\t\t\tactiveInstanceIndex,\n\t\t\ttrue,\n\t\t);\n\t}\n\n\tsetActiveGroupToNext() {\n\t\tif (this.groups.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tlet newIndex = this.activeGroupIndex + 1;\n\t\tif (newIndex >= this.groups.length) {\n\t\t\tnewIndex = 0;\n\t\t}\n\t\tthis.setActiveGroupByIndex(newIndex);\n\t}\n\n\tsetActiveGroupToPrevious() {\n\t\tif (this.groups.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tlet newIndex = this.activeGroupIndex - 1;\n\t\tif (newIndex < 0) {\n\t\t\tnewIndex = this.groups.length - 1;\n\t\t}\n\t\tthis.setActiveGroupByIndex(newIndex);\n\t}\n\n\tprivate _getValidTerminalGroups = (\n\t\tsources: ITerminalInstance[],\n\t): Set<ITerminalGroup> => {\n\t\treturn new Set(\n\t\t\tsources\n\t\t\t\t.map((source) => this.getGroupForInstance(source))\n\t\t\t\t.filter((group) => group !== undefined),\n\t\t);\n\t};\n\n\tmoveGroup(\n\t\tsource: ITerminalInstance | ITerminalInstance[],\n\t\ttarget: ITerminalInstance,\n\t) {\n\t\tsource = asArray(source);\n\t\tconst sourceGroups = this._getValidTerminalGroups(source);\n\t\tconst targetGroup = this.getGroupForInstance(target);\n\t\tif (!targetGroup || sourceGroups.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The groups are the same, rearrange within the group\n\t\tif (sourceGroups.size === 1 && sourceGroups.has(targetGroup)) {\n\t\t\tconst targetIndex = targetGroup.terminalInstances.indexOf(target);\n\t\t\tconst sortedSources = source.sort((a, b) => {\n\t\t\t\treturn (\n\t\t\t\t\ttargetGroup.terminalInstances.indexOf(a) -\n\t\t\t\t\ttargetGroup.terminalInstances.indexOf(b)\n\t\t\t\t);\n\t\t\t});\n\t\t\tconst firstTargetIndex = targetGroup.terminalInstances.indexOf(\n\t\t\t\tsortedSources[0],\n\t\t\t);\n\t\t\tconst position: \"before\" | \"after\" =\n\t\t\t\tfirstTargetIndex < targetIndex ? \"after\" : \"before\";\n\t\t\ttargetGroup.moveInstance(sortedSources, targetIndex, position);\n\t\t\tthis._onDidChangeInstances.fire();\n\t\t\treturn;\n\t\t}\n\n\t\t// The groups differ, rearrange groups\n\t\tconst targetGroupIndex = this.groups.indexOf(targetGroup);\n\t\tconst sortedSourceGroups = Array.from(sourceGroups).sort((a, b) => {\n\t\t\treturn this.groups.indexOf(a) - this.groups.indexOf(b);\n\t\t});\n\t\tconst firstSourceGroupIndex = this.groups.indexOf(\n\t\t\tsortedSourceGroups[0],\n\t\t);\n\t\tconst position: \"before\" | \"after\" =\n\t\t\tfirstSourceGroupIndex < targetGroupIndex ? \"after\" : \"before\";\n\t\tconst insertIndex =\n\t\t\tposition === \"after\" ? targetGroupIndex + 1 : targetGroupIndex;\n\t\tthis.groups.splice(insertIndex, 0, ...sortedSourceGroups);\n\t\tfor (const sourceGroup of sortedSourceGroups) {\n\t\t\tconst originSourceGroupIndex =\n\t\t\t\tposition === \"after\"\n\t\t\t\t\t? this.groups.indexOf(sourceGroup)\n\t\t\t\t\t: this.groups.lastIndexOf(sourceGroup);\n\t\t\tthis.groups.splice(originSourceGroupIndex, 1);\n\t\t}\n\t\tthis._onDidChangeInstances.fire();\n\t}\n\n\tmoveGroupToEnd(source: ITerminalInstance | ITerminalInstance[]): void {\n\t\tsource = asArray(source);\n\t\tconst sourceGroups = this._getValidTerminalGroups(source);\n\t\tif (sourceGroups.size === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst lastInstanceIndex = this.groups.length - 1;\n\t\tconst sortedSourceGroups = Array.from(sourceGroups).sort((a, b) => {\n\t\t\treturn this.groups.indexOf(a) - this.groups.indexOf(b);\n\t\t});\n\t\tthis.groups.splice(lastInstanceIndex + 1, 0, ...sortedSourceGroups);\n\t\tfor (const sourceGroup of sortedSourceGroups) {\n\t\t\tconst sourceGroupIndex = this.groups.indexOf(sourceGroup);\n\t\t\tthis.groups.splice(sourceGroupIndex, 1);\n\t\t}\n\t\tthis._onDidChangeInstances.fire();\n\t}\n\n\tmoveInstance(\n\t\tsource: ITerminalInstance,\n\t\ttarget: ITerminalInstance,\n\t\tside: \"before\" | \"after\",\n\t) {\n\t\tconst sourceGroup = this.getGroupForInstance(source);\n\t\tconst targetGroup = this.getGroupForInstance(target);\n\t\tif (!sourceGroup || !targetGroup) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Move from the source group to the target group\n\t\tif (sourceGroup !== targetGroup) {\n\t\t\t// Move groups\n\t\t\tsourceGroup.removeInstance(source);\n\t\t\ttargetGroup.addInstance(source);\n\t\t}\n\n\t\t// Rearrange within the target group\n\t\tconst index =\n\t\t\ttargetGroup.terminalInstances.indexOf(target) +\n\t\t\t(side === \"after\" ? 1 : 0);\n\t\ttargetGroup.moveInstance(source, index, side);\n\t}\n\n\tunsplitInstance(instance: ITerminalInstance) {\n\t\tconst oldGroup = this.getGroupForInstance(instance);\n\t\tif (!oldGroup || oldGroup.terminalInstances.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\toldGroup.removeInstance(instance);\n\t\tthis.createGroup(instance);\n\t}\n\n\tjoinInstances(instances: ITerminalInstance[]) {\n\t\tconst group = this.getGroupForInstance(instances[0]);\n\t\tif (group) {\n\t\t\tlet differentGroups = true;\n\t\t\tfor (let i = 1; i < group.terminalInstances.length; i++) {\n\t\t\t\tif (group.terminalInstances.includes(instances[i])) {\n\t\t\t\t\tdifferentGroups = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!differentGroups &&\n\t\t\t\tgroup.terminalInstances.length === instances.length\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// Find the group of the first instance that is the only instance in the group, if one exists\n\t\tlet candidateInstance: ITerminalInstance | undefined;\n\t\tlet candidateGroup: ITerminalGroup | undefined;\n\t\tfor (const instance of instances) {\n\t\t\tconst group = this.getGroupForInstance(instance);\n\t\t\tif (group?.terminalInstances.length === 1) {\n\t\t\t\tcandidateInstance = instance;\n\t\t\t\tcandidateGroup = group;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Create a new group if needed\n\t\tif (!candidateGroup) {\n\t\t\tcandidateGroup = this.createGroup();\n\t\t}\n\n\t\tconst wasActiveGroup = this.activeGroup === candidateGroup;\n\n\t\t// Unsplit all other instances and add them to the new group\n\t\tfor (const instance of instances) {\n\t\t\tif (instance === candidateInstance) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst oldGroup = this.getGroupForInstance(instance);\n\t\t\tif (!oldGroup) {\n\t\t\t\t// Something went wrong, don't join this one\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\toldGroup.removeInstance(instance);\n\t\t\tcandidateGroup.addInstance(instance);\n\t\t}\n\n\t\t// Set the active terminal\n\t\tthis.setActiveInstance(instances[0]);\n\n\t\t// Fire events\n\t\tthis._onDidChangeInstances.fire();\n\t\tif (!wasActiveGroup) {\n\t\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\t}\n\t}\n\n\tinstanceIsSplit(instance: ITerminalInstance): boolean {\n\t\tconst group = this.getGroupForInstance(instance);\n\t\tif (!group) {\n\t\t\treturn false;\n\t\t}\n\t\treturn group.terminalInstances.length > 1;\n\t}\n\n\tgetGroupForInstance(\n\t\tinstance: ITerminalInstance,\n\t): ITerminalGroup | undefined {\n\t\treturn this.groups.find((group) =>\n\t\t\tgroup.terminalInstances.includes(instance),\n\t\t);\n\t}\n\n\tgetGroupLabels(): string[] {\n\t\treturn this.groups\n\t\t\t.filter((group) => group.terminalInstances.length > 0)\n\t\t\t.map((group, index) => {\n\t\t\t\treturn `${index + 1}: ${group.title ? group.title : \"\"}`;\n\t\t\t});\n\t}\n\n\t/**\n\t * Visibility should be updated in the following cases:\n\t * 1. Toggle `TERMINAL_VIEW_ID` visibility\n\t * 2. Change active group\n\t * 3. Change instances in active group\n\t */\n\tupdateVisibility() {\n\t\tconst visible = this._viewsService.isViewVisible(TERMINAL_VIEW_ID);\n\t\tthis.groups.forEach((g, i) =>\n\t\t\tg.setVisible(visible && i === this.activeGroupIndex),\n\t\t);\n\t}\n}\n\ninterface IInstanceLocation {\n\tgroup: ITerminalGroup;\n\tgroupIndex: number;\n\tinstance: ITerminalInstance;\n\tinstanceIndex: number;\n}\n"],
  "mappings": "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",
  "names": ["position", "group"]
}
