{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalContextMenu.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { ActionRunner, IAction } from '../../../../base/common/actions.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { MarshalledId } from '../../../../base/common/marshallingIds.js';\nimport { SingleOrMany } from '../../../../base/common/types.js';\nimport { createAndFillInContextMenuActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IMenu } from '../../../../platform/actions/common/actions.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { ITerminalInstance } from './terminal.js';\nimport { ISerializedTerminalInstanceContext } from '../common/terminal.js';\n\n/**\n * A context that is passed to actions as arguments to represent the terminal instance(s) being\n * acted upon.\n */\nexport class InstanceContext {\n\treadonly instanceId: number;\n\n\tconstructor(instance: ITerminalInstance) {\n\t\t// Only store the instance to avoid contexts holding on to disposed instances.\n\t\tthis.instanceId = instance.instanceId;\n\t}\n\n\ttoJSON(): ISerializedTerminalInstanceContext {\n\t\treturn {\n\t\t\t$mid: MarshalledId.TerminalContext,\n\t\t\tinstanceId: this.instanceId\n\t\t};\n\t}\n}\n\nexport class TerminalContextActionRunner extends ActionRunner {\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tprotected override async runAction(action: IAction, context?: InstanceContext | InstanceContext[]): Promise<void> {\n\t\tif (Array.isArray(context) && context.every(e => e instanceof InstanceContext)) {\n\t\t\t// arg1: The (first) focused instance\n\t\t\t// arg2: All selected instances\n\t\t\tawait action.run(context?.[0], context);\n\t\t\treturn;\n\t\t}\n\t\treturn super.runAction(action, context);\n\t}\n}\n\nexport function openContextMenu(targetWindow: Window, event: MouseEvent, contextInstances: SingleOrMany<ITerminalInstance> | undefined, menu: IMenu, contextMenuService: IContextMenuService, extraActions?: IAction[]): void {\n\tconst standardEvent = new StandardMouseEvent(targetWindow, event);\n\n\tconst actions: IAction[] = [];\n\n\tcreateAndFillInContextMenuActions(menu, { shouldForwardArgs: true }, actions);\n\n\tif (extraActions) {\n\t\tactions.push(...extraActions);\n\t}\n\n\tconst context: InstanceContext[] = contextInstances ? asArray(contextInstances).map(e => new InstanceContext(e)) : [];\n\n\tcontextMenuService.showContextMenu({\n\t\tactionRunner: new TerminalContextActionRunner(),\n\t\tgetAnchor: () => standardEvent,\n\t\tgetActions: () => actions,\n\t\tgetActionsContext: () => context,\n\t});\n}\n"],
  "mappings": ";;AAKA,SAAS,0BAA0B;AACnC,SAAS,cAAc,eAAe;AACtC,SAAS,eAAe;AACxB,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,SAAS,yCAAyC;AAClD,SAAS,aAAa;AACtB,SAAS,2BAA2B;AACpC,SAAS,yBAAyB;AAClC,SAAS,0CAA0C;AAM5C,MAAM,gBAAgB;AAAA,EApB7B,OAoB6B;AAAA;AAAA;AAAA,EACnB;AAAA,EAET,YAAY,UAA6B;AAExC,SAAK,aAAa,SAAS;AAAA,EAC5B;AAAA,EAEA,SAA6C;AAC5C,WAAO;AAAA,MACN,MAAM,aAAa;AAAA,MACnB,YAAY,KAAK;AAAA,IAClB;AAAA,EACD;AACD;AAEO,MAAM,oCAAoC,aAAa;AAAA,EApC9D,OAoC8D;AAAA;AAAA;AAAA;AAAA,EAG7D,MAAyB,UAAU,QAAiB,SAA8D;AACjH,QAAI,MAAM,QAAQ,OAAO,KAAK,QAAQ,MAAM,OAAK,aAAa,eAAe,GAAG;AAG/E,YAAM,OAAO,IAAI,UAAU,CAAC,GAAG,OAAO;AACtC;AAAA,IACD;AACA,WAAO,MAAM,UAAU,QAAQ,OAAO;AAAA,EACvC;AACD;AAEO,SAAS,gBAAgB,cAAsB,OAAmB,kBAA+D,MAAa,oBAAyC,cAAgC;AAC7N,QAAM,gBAAgB,IAAI,mBAAmB,cAAc,KAAK;AAEhE,QAAM,UAAqB,CAAC;AAE5B,oCAAkC,MAAM,EAAE,mBAAmB,KAAK,GAAG,OAAO;AAE5E,MAAI,cAAc;AACjB,YAAQ,KAAK,GAAG,YAAY;AAAA,EAC7B;AAEA,QAAM,UAA6B,mBAAmB,QAAQ,gBAAgB,EAAE,IAAI,OAAK,IAAI,gBAAgB,CAAC,CAAC,IAAI,CAAC;AAEpH,qBAAmB,gBAAgB;AAAA,IAClC,cAAc,IAAI,4BAA4B;AAAA,IAC9C,WAAW,6BAAM,eAAN;AAAA,IACX,YAAY,6BAAM,SAAN;AAAA,IACZ,mBAAmB,6BAAM,SAAN;AAAA,EACpB,CAAC;AACF;AAnBgB;",
  "names": []
}
