{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/terminalContextMenu.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StandardMouseEvent } from \"../../../../base/browser/mouseEvent.js\";\nimport { ActionRunner, type IAction } from \"../../../../base/common/actions.js\";\nimport { asArray } from \"../../../../base/common/arrays.js\";\nimport { MarshalledId } from \"../../../../base/common/marshallingIds.js\";\nimport type { SingleOrMany } from \"../../../../base/common/types.js\";\nimport { createAndFillInContextMenuActions } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport type { IMenu } from \"../../../../platform/actions/common/actions.js\";\nimport type { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport type { ISerializedTerminalInstanceContext } from \"../common/terminal.js\";\nimport type { ITerminalInstance } from \"./terminal.js\";\n\n/**\n * A context that is passed to actions as arguments to represent the terminal instance(s) being\n * acted upon.\n */\nexport class InstanceContext {\n\treadonly instanceId: number;\n\n\tconstructor(instance: ITerminalInstance) {\n\t\t// Only store the instance to avoid contexts holding on to disposed instances.\n\t\tthis.instanceId = instance.instanceId;\n\t}\n\n\ttoJSON(): ISerializedTerminalInstanceContext {\n\t\treturn {\n\t\t\t$mid: MarshalledId.TerminalContext,\n\t\t\tinstanceId: this.instanceId,\n\t\t};\n\t}\n}\n\nexport class TerminalContextActionRunner extends ActionRunner {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tprotected override async runAction(\n\t\taction: IAction,\n\t\tcontext?: InstanceContext | InstanceContext[],\n\t): Promise<void> {\n\t\tif (\n\t\t\tArray.isArray(context) &&\n\t\t\tcontext.every((e) => e instanceof InstanceContext)\n\t\t) {\n\t\t\t// arg1: The (first) focused instance\n\t\t\t// arg2: All selected instances\n\t\t\tawait action.run(context?.[0], context);\n\t\t\treturn;\n\t\t}\n\t\treturn super.runAction(action, context);\n\t}\n}\n\nexport function openContextMenu(\n\ttargetWindow: Window,\n\tevent: MouseEvent,\n\tcontextInstances: SingleOrMany<ITerminalInstance> | undefined,\n\tmenu: IMenu,\n\tcontextMenuService: IContextMenuService,\n\textraActions?: IAction[],\n): void {\n\tconst standardEvent = new StandardMouseEvent(targetWindow, event);\n\n\tconst actions: IAction[] = [];\n\n\tcreateAndFillInContextMenuActions(\n\t\tmenu,\n\t\t{ shouldForwardArgs: true },\n\t\tactions,\n\t);\n\n\tif (extraActions) {\n\t\tactions.push(...extraActions);\n\t}\n\n\tconst context: InstanceContext[] = contextInstances\n\t\t? asArray(contextInstances).map((e) => new InstanceContext(e))\n\t\t: [];\n\n\tcontextMenuService.showContextMenu({\n\t\tactionRunner: new TerminalContextActionRunner(),\n\t\tgetAnchor: () => standardEvent,\n\t\tgetActions: () => actions,\n\t\tgetActionsContext: () => context,\n\t});\n}\n"],
  "mappings": ";;AAKA,SAAS,0BAA0B;AACnC,SAAS,oBAAkC;AAC3C,SAAS,eAAe;AACxB,SAAS,oBAAoB;AAE7B,SAAS,yCAAyC;AAU3C,MAAM,gBAAgB;AAAA,EApB7B,OAoB6B;AAAA;AAAA;AAAA,EACnB;AAAA,EAET,YAAY,UAA6B;AAExC,SAAK,aAAa,SAAS;AAAA,EAC5B;AAAA,EAEA,SAA6C;AAC5C,WAAO;AAAA,MACN,MAAM,aAAa;AAAA,MACnB,YAAY,KAAK;AAAA,IAClB;AAAA,EACD;AACD;AAEO,MAAM,oCAAoC,aAAa;AAAA,EApC9D,OAoC8D;AAAA;AAAA;AAAA;AAAA,EAE7D,MAAyB,UACxB,QACA,SACgB;AAChB,QACC,MAAM,QAAQ,OAAO,KACrB,QAAQ,MAAM,CAAC,MAAM,aAAa,eAAe,GAChD;AAGD,YAAM,OAAO,IAAI,UAAU,CAAC,GAAG,OAAO;AACtC;AAAA,IACD;AACA,WAAO,MAAM,UAAU,QAAQ,OAAO;AAAA,EACvC;AACD;AAEO,SAAS,gBACf,cACA,OACA,kBACA,MACA,oBACA,cACO;AACP,QAAM,gBAAgB,IAAI,mBAAmB,cAAc,KAAK;AAEhE,QAAM,UAAqB,CAAC;AAE5B;AAAA,IACC;AAAA,IACA,EAAE,mBAAmB,KAAK;AAAA,IAC1B;AAAA,EACD;AAEA,MAAI,cAAc;AACjB,YAAQ,KAAK,GAAG,YAAY;AAAA,EAC7B;AAEA,QAAM,UAA6B,mBAChC,QAAQ,gBAAgB,EAAE,IAAI,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,IAC3D,CAAC;AAEJ,qBAAmB,gBAAgB;AAAA,IAClC,cAAc,IAAI,4BAA4B;AAAA,IAC9C,WAAW,6BAAM,eAAN;AAAA,IACX,YAAY,6BAAM,SAAN;AAAA,IACZ,mBAAmB,6BAAM,SAAN;AAAA,EACpB,CAAC;AACF;AAhCgB;",
  "names": []
}
