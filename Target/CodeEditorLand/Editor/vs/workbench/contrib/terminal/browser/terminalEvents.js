import{DynamicListEventMultiplexer as o,Event as c,EventMultiplexer as v}from"../../../../base/common/event.js";import{DisposableMap as f,DisposableStore as C}from"../../../../base/common/lifecycle.js";function x(t,l,p,n,d){const e=new C,s=e.add(new v),r=e.add(new f);function m(i,a){const I=s.add(c.map(d(a),T=>({instance:i,data:T})));r.set(a,I)}for(const i of t){const a=i.capabilities.get(n);a&&m(i,a)}const b=e.add(new o(t,l,p,i=>c.map(i.capabilities.onDidAddCapability,a=>({instance:i,changeEvent:a}))));e.add(b.event(i=>{i.changeEvent.id===n&&m(i.instance,i.changeEvent.capability)}));const y=e.add(new o(t,l,p,i=>i.capabilities.onDidRemoveCapability));return e.add(y.event(i=>{i.id===n&&r.deleteAndDispose(i.capability)})),{dispose:()=>e.dispose(),event:s.event}}export{x as createInstanceCapabilityEventMultiplexer};
