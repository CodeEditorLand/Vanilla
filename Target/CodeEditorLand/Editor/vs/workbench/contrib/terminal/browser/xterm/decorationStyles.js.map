{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/browser/xterm/decorationStyles.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Delayer } from '../../../../../base/common/async.js';\nimport { fromNow, getDurationString } from '../../../../../base/common/date.js';\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { combinedDisposable, Disposable, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../../nls.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextMenuService } from '../../../../../platform/contextview/browser/contextView.js';\nimport { ITerminalCommand } from '../../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { TerminalSettingId } from '../../../../../platform/terminal/common/terminal.js';\nimport { IHoverService } from '../../../../../platform/hover/browser/hover.js';\n\nconst enum DecorationStyles {\n\tDefaultDimension = 16,\n\tMarginLeft = -17,\n}\n\nexport const enum DecorationSelector {\n\tCommandDecoration = 'terminal-command-decoration',\n\tHide = 'hide',\n\tErrorColor = 'error',\n\tDefaultColor = 'default-color',\n\tDefault = 'default',\n\tCodicon = 'codicon',\n\tXtermDecoration = 'xterm-decoration',\n\tOverviewRuler = '.xterm-decoration-overview-ruler',\n}\n\nexport class TerminalDecorationHoverManager extends Disposable {\n\tprivate _hoverDelayer: Delayer<void>;\n\tprivate _contextMenuVisible: boolean = false;\n\n\tconstructor(@IHoverService private readonly _hoverService: IHoverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService) {\n\t\tsuper();\n\t\tthis._register(contextMenuService.onDidShowContextMenu(() => this._contextMenuVisible = true));\n\t\tthis._register(contextMenuService.onDidHideContextMenu(() => this._contextMenuVisible = false));\n\t\tthis._hoverDelayer = this._register(new Delayer(configurationService.getValue('workbench.hover.delay')));\n\t}\n\n\tpublic hideHover() {\n\t\tthis._hoverDelayer.cancel();\n\t\tthis._hoverService.hideHover();\n\t}\n\n\tcreateHover(element: HTMLElement, command: ITerminalCommand | undefined, hoverMessage?: string): IDisposable {\n\t\treturn combinedDisposable(\n\t\t\tdom.addDisposableListener(element, dom.EventType.MOUSE_ENTER, () => {\n\t\t\t\tif (this._contextMenuVisible) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._hoverDelayer.trigger(() => {\n\t\t\t\t\tlet hoverContent = `${localize('terminalPromptContextMenu', \"Show Command Actions\")}`;\n\t\t\t\t\thoverContent += '\\n\\n---\\n\\n';\n\t\t\t\t\tif (!command) {\n\t\t\t\t\t\tif (hoverMessage) {\n\t\t\t\t\t\t\thoverContent = hoverMessage;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (command.markProperties || hoverMessage) {\n\t\t\t\t\t\tif (command.markProperties?.hoverMessage || hoverMessage) {\n\t\t\t\t\t\t\thoverContent = command.markProperties?.hoverMessage || hoverMessage || '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (command.duration) {\n\t\t\t\t\t\t\tconst durationText = getDurationString(command.duration);\n\t\t\t\t\t\t\tif (command.exitCode) {\n\t\t\t\t\t\t\t\tif (command.exitCode === -1) {\n\t\t\t\t\t\t\t\t\thoverContent += localize('terminalPromptCommandFailed.duration', 'Command executed {0}, took {1} and failed', fromNow(command.timestamp, true), durationText);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\thoverContent += localize('terminalPromptCommandFailedWithExitCode.duration', 'Command executed {0}, took {1} and failed (Exit Code {2})', fromNow(command.timestamp, true), durationText, command.exitCode);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thoverContent += localize('terminalPromptCommandSuccess.duration', 'Command executed {0} and took {1}', fromNow(command.timestamp, true), durationText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (command.exitCode) {\n\t\t\t\t\t\t\t\tif (command.exitCode === -1) {\n\t\t\t\t\t\t\t\t\thoverContent += localize('terminalPromptCommandFailed', 'Command executed {0} and failed', fromNow(command.timestamp, true));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\thoverContent += localize('terminalPromptCommandFailedWithExitCode', 'Command executed {0} and failed (Exit Code {1})', fromNow(command.timestamp, true), command.exitCode);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thoverContent += localize('terminalPromptCommandSuccess', 'Command executed {0}', fromNow(command.timestamp, true));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._hoverService.showHover({ content: new MarkdownString(hoverContent), target: element });\n\t\t\t\t});\n\t\t\t}),\n\t\t\tdom.addDisposableListener(element, dom.EventType.MOUSE_LEAVE, () => this.hideHover()),\n\t\t\tdom.addDisposableListener(element, dom.EventType.MOUSE_OUT, () => this.hideHover())\n\t\t);\n\t}\n\n}\n\nexport function updateLayout(configurationService: IConfigurationService, element?: HTMLElement): void {\n\tif (!element) {\n\t\treturn;\n\t}\n\tconst fontSize = configurationService.inspect(TerminalSettingId.FontSize).value;\n\tconst defaultFontSize = configurationService.inspect(TerminalSettingId.FontSize).defaultValue;\n\tconst lineHeight = configurationService.inspect(TerminalSettingId.LineHeight).value;\n\tif (typeof fontSize === 'number' && typeof defaultFontSize === 'number' && typeof lineHeight === 'number') {\n\t\tconst scalar = (fontSize / defaultFontSize) <= 1 ? (fontSize / defaultFontSize) : 1;\n\t\t// must be inlined to override the inlined styles from xterm\n\t\telement.style.width = `${scalar * DecorationStyles.DefaultDimension}px`;\n\t\telement.style.height = `${scalar * DecorationStyles.DefaultDimension * lineHeight}px`;\n\t\telement.style.fontSize = `${scalar * DecorationStyles.DefaultDimension}px`;\n\t\telement.style.marginLeft = `${scalar * DecorationStyles.MarginLeft}px`;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["DecorationStyles", "DecorationSelector"]
}
