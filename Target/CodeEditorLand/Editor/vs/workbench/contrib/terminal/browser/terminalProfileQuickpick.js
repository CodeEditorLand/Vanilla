var Q=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var T=(p,i,r,o)=>{for(var e=o>1?void 0:o?w(i,r):i,n=p.length-1,a;n>=0;n--)(a=p[n])&&(e=(o?a(i,r,e):a(e))||e);return o&&e&&Q(i,r,e),e},u=(p,i)=>(r,o)=>i(r,o,p);import{Codicon as x}from"../../../../base/common/codicons.js";import{ConfigurationTarget as g,IConfigurationService as D}from"../../../../platform/configuration/common/configuration.js";import{IQuickInputService as $}from"../../../../platform/quickinput/common/quickInput.js";import{TerminalSettingPrefix as k}from"../../../../platform/terminal/common/terminal.js";import{getUriClasses as E,getColorClass as b,createColorStyleElement as M}from"./terminalIcon.js";import{configureTerminalProfileIcon as z}from"./terminalIcons.js";import*as l from"../../../../nls.js";import{IThemeService as A}from"../../../../platform/theme/common/themeService.js";import{ThemeIcon as v}from"../../../../base/common/themables.js";import{ITerminalProfileResolverService as K,ITerminalProfileService as U}from"../common/terminal.js";import{getIconRegistry as R}from"../../../../platform/theme/common/iconRegistry.js";import{basename as j}from"../../../../base/common/path.js";import{INotificationService as O,Severity as q}from"../../../../platform/notification/common/notification.js";let y=class{constructor(i,r,o,e,n,a){this._terminalProfileService=i;this._terminalProfileResolverService=r;this._configurationService=o;this._quickInputService=e;this._themeService=n;this._notificationService=a}async showAndGetResult(i){const r=await this._terminalProfileService.getPlatformKey(),o=k.Profiles+r,e=await this._createAndShow(i),n=`${k.DefaultProfile}${r}`;if(e){if(i==="setDefault"){if("command"in e.profile)return;if("id"in e.profile)return await this._configurationService.updateValue(n,e.profile.title,g.USER),{config:{extensionIdentifier:e.profile.extensionIdentifier,id:e.profile.id,title:e.profile.title,options:{color:e.profile.color,icon:e.profile.icon}},keyMods:e.keyMods};if("isAutoDetected"in e.profile){const a=await this._configurationService.getValue(o);if(typeof a=="object"){const f={path:e.profile.path};e.profile.args&&(f.args=e.profile.args),a[e.profile.profileName]=this._createNewProfileConfig(e.profile),await this._configurationService.updateValue(o,a,g.USER)}}await this._configurationService.updateValue(n,e.profileName,g.USER)}else if(i==="createInstance")return"id"in e.profile?{config:{extensionIdentifier:e.profile.extensionIdentifier,id:e.profile.id,title:e.profile.title,options:{icon:e.profile.icon,color:e.profile.color}},keyMods:e.keyMods}:{config:e.profile,keyMods:e.keyMods};return"profileName"in e.profile?e.profile.profileName:e.profile.title}}async _createAndShow(i){const r=await this._terminalProfileService.getPlatformKey(),o=this._terminalProfileService.availableProfiles,e=k.Profiles+r,n=this._terminalProfileService.getDefaultProfileName();let a;const f={placeHolder:i==="createInstance"?l.localize("terminal.integrated.selectProfileToCreate","Select the terminal profile to create"):l.localize("terminal.integrated.chooseDefaultProfile","Select your default terminal profile"),onDidTriggerItemButton:async t=>{if(!await this._isProfileSafe(t.item.profile)||"command"in t.item.profile||"id"in t.item.profile)return;const s=this._configurationService.getValue(k.Profiles+r),h=s?Object.keys(s):[],P=await this._quickInputService.input({prompt:l.localize("enterTerminalProfileName","Enter terminal profile name"),value:t.item.profile.profileName,validateInput:async N=>{if(h.includes(N))return l.localize("terminalProfileAlreadyExists","A terminal profile already exists with that name")}});if(!P)return;const I={...s,[P]:this._createNewProfileConfig(t.item.profile)};await this._configurationService.updateValue(e,I,g.USER)},onKeyMods:t=>a=t},c=[],m=o.filter(t=>!t.isAutoDetected),_=o.filter(t=>t.isAutoDetected);m.length>0&&(c.push({type:"separator",label:l.localize("terminalProfiles","profiles")}),c.push(...this._sortProfileQuickPickItems(m.map(t=>this._createProfileQuickPickItem(t)),n))),c.push({type:"separator",label:l.localize("ICreateContributedTerminalProfileOptions","contributed")});const S=[];for(const t of this._terminalProfileService.contributedProfiles){let s;typeof t.icon=="string"&&(t.icon.startsWith("$(")?s=v.fromString(t.icon):s=v.fromId(t.icon)),(!s||!R().getIcon(s.id))&&(s=this._terminalProfileResolverService.getDefaultIcon());const h=E(t,this._themeService.getColorTheme().type,!0),P=b(t),I=[];h&&I.push(...h),P&&I.push(P),S.push({label:`$(${s.id}) ${t.title}`,profile:{extensionIdentifier:t.extensionIdentifier,title:t.title,icon:t.icon,id:t.id,color:t.color},profileName:t.title,iconClasses:I})}S.length>0&&c.push(...this._sortProfileQuickPickItems(S,n)),_.length>0&&(c.push({type:"separator",label:l.localize("terminalProfiles.detected","detected")}),c.push(...this._sortProfileQuickPickItems(_.map(t=>this._createProfileQuickPickItem(t)),n)));const C=M(this._themeService.getColorTheme()),d=await this._quickInputService.pick(c,f);if(C.dispose(),!!d&&await this._isProfileSafe(d.profile))return a&&(d.keyMods=a),d}_createNewProfileConfig(i){const r={path:i.path};return i.args&&(r.args=i.args),i.env&&(r.env=i.env),r}async _isProfileSafe(i){const r="isUnsafePath"in i&&i.isUnsafePath,o="requiresUnsafePath"in i&&i.requiresUnsafePath;return!r&&!o?!0:await new Promise(e=>{const n=[];r&&n.push(i.path),o&&n.push(o),this._notificationService.prompt(q.Warning,l.localize("unsafePathWarning","This terminal profile uses a potentially unsafe path that can be modified by another user: {0}. Are you sure you want to use it?",`"${n.join(",")}"`),[{label:l.localize("yes","Yes"),run:()=>e(!0)},{label:l.localize("cancel","Cancel"),run:()=>e(!1)}]).onDidClose(()=>e(!1))})}_createProfileQuickPickItem(i){const r=[{iconClass:v.asClassName(z),tooltip:l.localize("createQuickLaunchProfile","Configure Terminal Profile")}],e=`$(${(i.icon&&v.isThemeIcon(i.icon)?i.icon:x.terminal).id}) ${i.profileName}`,n=i.isFromPath?j(i.path):i.path,a=b(i),f=[];if(a&&f.push(a),i.args){if(typeof i.args=="string")return{label:e,description:`${i.path} ${i.args}`,profile:i,profileName:i.profileName,buttons:r,iconClasses:f};const c=i.args.map(m=>m.includes(" ")?`"${m.replace(/"/g,'\\"')}"`:m).join(" ");return{label:e,description:`${n} ${c}`,profile:i,profileName:i.profileName,buttons:r,iconClasses:f}}return{label:e,description:n,profile:i,profileName:i.profileName,buttons:r,iconClasses:f}}_sortProfileQuickPickItems(i,r){return i.sort((o,e)=>e.profileName===r?1:o.profileName===r?-1:o.profileName.localeCompare(e.profileName))}};y=T([u(0,U),u(1,K),u(2,D),u(3,$),u(4,A),u(5,O)],y);export{y as TerminalProfileQuickpick};
