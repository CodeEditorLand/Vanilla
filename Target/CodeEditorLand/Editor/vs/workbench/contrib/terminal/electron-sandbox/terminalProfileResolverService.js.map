{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ErrorNoTelemetry } from '../../../../base/common/errors.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ITerminalLogService } from '../../../../platform/terminal/common/terminal.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { ITerminalInstanceService } from '../browser/terminal.js';\nimport { BaseTerminalProfileResolverService } from '../browser/terminalProfileResolverService.js';\nimport { ITerminalProfileService } from '../common/terminal.js';\nimport { IConfigurationResolverService } from '../../../services/configurationResolver/common/configurationResolver.js';\nimport { IHistoryService } from '../../../services/history/common/history.js';\nimport { IRemoteAgentService } from '../../../services/remote/common/remoteAgentService.js';\n\nexport class ElectronTerminalProfileResolverService extends BaseTerminalProfileResolverService {\n\n\tconstructor(\n\t\t@IConfigurationResolverService configurationResolverService: IConfigurationResolverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IHistoryService historyService: IHistoryService,\n\t\t@ITerminalLogService logService: ITerminalLogService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t\t@ITerminalProfileService terminalProfileService: ITerminalProfileService,\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ITerminalInstanceService terminalInstanceService: ITerminalInstanceService\n\t) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tgetDefaultSystemShell: async (remoteAuthority, platform) => {\n\t\t\t\t\tconst backend = await terminalInstanceService.getBackend(remoteAuthority);\n\t\t\t\t\tif (!backend) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(`Cannot get default system shell when there is no backend for remote authority '${remoteAuthority}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn backend.getDefaultSystemShell(platform);\n\t\t\t\t},\n\t\t\t\tgetEnvironment: async (remoteAuthority) => {\n\t\t\t\t\tconst backend = await terminalInstanceService.getBackend(remoteAuthority);\n\t\t\t\t\tif (!backend) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(`Cannot get environment when there is no backend for remote authority '${remoteAuthority}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn backend.getEnvironment();\n\t\t\t\t}\n\t\t\t},\n\t\t\tconfigurationService,\n\t\t\tconfigurationResolverService,\n\t\t\thistoryService,\n\t\t\tlogService,\n\t\t\tterminalProfileService,\n\t\t\tworkspaceContextService,\n\t\t\tremoteAgentService\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,wBAAwB;AACjC,SAAS,6BAA6B;AACtC,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,gCAAgC;AACzC,SAAS,0CAA0C;AACnD,SAAS,+BAA+B;AACxC,SAAS,qCAAqC;AAC9C,SAAS,uBAAuB;AAChC,SAAS,2BAA2B;AAE7B,IAAM,yCAAN,cAAqD,mCAAmC;AAAA,EAhB/F,OAgB+F;AAAA;AAAA;AAAA,EAE9F,YACgC,8BACR,sBACN,gBACI,YACK,yBACD,wBACJ,oBACK,yBACzB;AACD;AAAA,MACC;AAAA,QACC,uBAAuB,8BAAO,iBAAiB,aAAa;AAC3D,gBAAM,UAAU,MAAM,wBAAwB,WAAW,eAAe;AACxE,cAAI,CAAC,SAAS;AACb,kBAAM,IAAI,iBAAiB,kFAAkF,eAAe,GAAG;AAAA,UAChI;AACA,iBAAO,QAAQ,sBAAsB,QAAQ;AAAA,QAC9C,GANuB;AAAA,QAOvB,gBAAgB,8BAAO,oBAAoB;AAC1C,gBAAM,UAAU,MAAM,wBAAwB,WAAW,eAAe;AACxE,cAAI,CAAC,SAAS;AACb,kBAAM,IAAI,iBAAiB,yEAAyE,eAAe,GAAG;AAAA,UACvH;AACA,iBAAO,QAAQ,eAAe;AAAA,QAC/B,GANgB;AAAA,MAOjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAtCa,yCAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAVU;",
  "names": []
}
