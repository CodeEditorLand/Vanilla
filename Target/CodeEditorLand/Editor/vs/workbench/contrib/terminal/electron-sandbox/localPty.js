import"../../../../../vs/platform/terminal/common/terminal.js";import{BasePty as s}from"../../../../../vs/workbench/contrib/terminal/common/basePty.js";class P extends s{constructor(r,e,o){super(r,e);this._proxy=o}start(){return this._proxy.start(this.id)}detach(r){return this._proxy.detachFromProcess(this.id,r)}shutdown(r){this._proxy.shutdown(this.id,r)}async processBinary(r){if(!this._inReplay)return this._proxy.processBinary(this.id,r)}input(r){this._inReplay||this._proxy.input(this.id,r)}resize(r,e){this._inReplay||this._lastDimensions.cols===r&&this._lastDimensions.rows===e||(this._lastDimensions.cols=r,this._lastDimensions.rows=e,this._proxy.resize(this.id,r,e))}async clearBuffer(){this._proxy.clearBuffer?.(this.id)}freePortKillProcess(r){if(!this._proxy.freePortKillProcess)throw new Error("freePortKillProcess does not exist on the local pty service");return this._proxy.freePortKillProcess(r)}async refreshProperty(r){return this._proxy.refreshProperty(this.id,r)}async updateProperty(r,e){return this._proxy.updateProperty(this.id,r,e)}acknowledgeDataEvent(r){this._inReplay||this._proxy.acknowledgeDataEvent(this.id,r)}setUnicodeVersion(r){return this._proxy.setUnicodeVersion(this.id,r)}handleOrphanQuestion(){this._proxy.orphanQuestionReply(this.id)}}export{P as LocalPty};
