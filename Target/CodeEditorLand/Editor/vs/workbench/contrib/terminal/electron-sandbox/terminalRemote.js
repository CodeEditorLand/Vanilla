import{Schemas as c}from"../../../../base/common/network.js";import{localize2 as v}from"../../../../nls.js";import{INativeEnvironmentService as l}from"../../../../platform/environment/common/environment.js";import{IRemoteAuthorityResolverService as f}from"../../../../platform/remote/common/remoteAuthorityResolver.js";import{IHistoryService as p}from"../../../services/history/common/history.js";import{registerTerminalAction as u}from"../browser/terminalActions.js";import{TerminalCommandId as d}from"../common/terminal.js";function A(){u({id:d.NewLocal,title:v("workbench.action.terminal.newLocal","Create New Integrated Terminal (Local)"),run:async(t,r)=>{const m=r.get(p),a=r.get(f),s=r.get(l);let e;try{const i=m.getLastActiveWorkspaceRoot(c.vscodeRemote);if(i){const n=await a.getCanonicalURI(i);n.scheme===c.file&&(e=n)}}catch{}e||(e=s.userHome);const o=await t.service.createTerminal({cwd:e});return o?(t.service.setActiveInstance(o),t.groupService.showPanel(!0)):Promise.resolve(void 0)}})}export{A as registerRemoteContributions};
