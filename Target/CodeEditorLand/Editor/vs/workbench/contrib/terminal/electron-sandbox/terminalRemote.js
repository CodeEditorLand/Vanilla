import{Schemas as c}from"../../../../base/common/network.js";import"../../../../base/common/uri.js";import{localize2 as v}from"../../../../nls.js";import{INativeEnvironmentService as l}from"../../../../platform/environment/common/environment.js";import{IRemoteAuthorityResolverService as f}from"../../../../platform/remote/common/remoteAuthorityResolver.js";import{registerTerminalAction as p}from"../browser/terminalActions.js";import{TerminalCommandId as u}from"../common/terminal.js";import{IHistoryService as d}from"../../../services/history/common/history.js";function C(){p({id:u.NewLocal,title:v("workbench.action.terminal.newLocal","Create New Integrated Terminal (Local)"),run:async(t,r)=>{const m=r.get(d),a=r.get(f),s=r.get(l);let e;try{const o=m.getLastActiveWorkspaceRoot(c.vscodeRemote);if(o){const n=await a.getCanonicalURI(o);n.scheme===c.file&&(e=n)}}catch{}e||(e=s.userHome);const i=await t.service.createTerminal({cwd:e});return i?(t.service.setActiveInstance(i),t.groupService.showPanel(!0)):Promise.resolve(void 0)}})}export{C as registerRemoteContributions};
