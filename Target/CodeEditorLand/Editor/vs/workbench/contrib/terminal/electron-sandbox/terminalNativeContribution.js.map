{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/electron-sandbox/terminalNativeContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tdisposableWindowInterval,\n\tgetActiveWindow,\n} from \"../../../../base/browser/dom.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ipcRenderer } from \"../../../../base/parts/sandbox/electron-sandbox/globals.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport type { INativeOpenFileRequest } from \"../../../../platform/window/common/window.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IRemoteAgentService } from \"../../../services/remote/common/remoteAgentService.js\";\nimport { ITerminalService } from \"../browser/terminal.js\";\nimport { registerRemoteContributions } from \"./terminalRemote.js\";\n\nexport class TerminalNativeContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tdeclare _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t) {\n\t\tsuper();\n\n\t\tipcRenderer.on(\n\t\t\t\"vscode:openFiles\",\n\t\t\t(_: unknown, request: INativeOpenFileRequest) => {\n\t\t\t\tthis._onOpenFileRequest(request);\n\t\t\t},\n\t\t);\n\t\tthis._register(\n\t\t\tnativeHostService.onDidResumeOS(() => this._onOsResume()),\n\t\t);\n\n\t\tthis._terminalService.setNativeDelegate({\n\t\t\tgetWindowCount: () => nativeHostService.getWindowCount(),\n\t\t});\n\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection && connection.remoteAuthority) {\n\t\t\tregisterRemoteContributions();\n\t\t}\n\t}\n\n\tprivate _onOsResume(): void {\n\t\tfor (const instance of this._terminalService.instances) {\n\t\t\tinstance.xterm?.forceRedraw();\n\t\t}\n\t}\n\n\tprivate async _onOpenFileRequest(\n\t\trequest: INativeOpenFileRequest,\n\t): Promise<void> {\n\t\t// if the request to open files is coming in from the integrated terminal (identified though\n\t\t// the termProgram variable) and we are instructed to wait for editors close, wait for the\n\t\t// marker file to get deleted and then focus back to the integrated terminal.\n\t\tif (request.termProgram === \"vscode\" && request.filesToWait) {\n\t\t\tconst waitMarkerFileUri = URI.revive(\n\t\t\t\trequest.filesToWait.waitMarkerFileUri,\n\t\t\t);\n\t\t\tawait this._whenFileDeleted(waitMarkerFileUri);\n\n\t\t\t// Focus active terminal\n\t\t\tthis._terminalService.activeInstance?.focus();\n\t\t}\n\t}\n\n\tprivate _whenFileDeleted(path: URI): Promise<void> {\n\t\t// Complete when wait marker file is deleted\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tlet running = false;\n\t\t\tconst interval = disposableWindowInterval(\n\t\t\t\tgetActiveWindow(),\n\t\t\t\tasync () => {\n\t\t\t\t\tif (!running) {\n\t\t\t\t\t\trunning = true;\n\t\t\t\t\t\tconst exists = await this._fileService.exists(path);\n\t\t\t\t\t\trunning = false;\n\n\t\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\t\tinterval.dispose();\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t1000,\n\t\t\t);\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B;AAGnC,SAAS,2BAA2B;AACpC,SAAS,wBAAwB;AACjC,SAAS,mCAAmC;AAErC,IAAM,6BAAN,cACE,WAET;AAAA,EAGC,YACgC,cACI,kBACd,oBACD,mBACnB;AACD,UAAM;AALyB;AACI;AAMnC,gBAAY;AAAA,MACX;AAAA,MACA,CAAC,GAAY,YAAoC;AAChD,aAAK,mBAAmB,OAAO;AAAA,MAChC;AAAA,IACD;AACA,SAAK;AAAA,MACJ,kBAAkB,cAAc,MAAM,KAAK,YAAY,CAAC;AAAA,IACzD;AAEA,SAAK,iBAAiB,kBAAkB;AAAA,MACvC,gBAAgB,6BAAM,kBAAkB,eAAe,GAAvC;AAAA,IACjB,CAAC;AAED,UAAM,aAAa,mBAAmB,cAAc;AACpD,QAAI,cAAc,WAAW,iBAAiB;AAC7C,kCAA4B;AAAA,IAC7B;AAAA,EACD;AAAA,EApDD,OAuBA;AAAA;AAAA;AAAA,EA+BS,cAAoB;AAC3B,eAAW,YAAY,KAAK,iBAAiB,WAAW;AACvD,eAAS,OAAO,YAAY;AAAA,IAC7B;AAAA,EACD;AAAA,EAEA,MAAc,mBACb,SACgB;AAIhB,QAAI,QAAQ,gBAAgB,YAAY,QAAQ,aAAa;AAC5D,YAAM,oBAAoB,IAAI;AAAA,QAC7B,QAAQ,YAAY;AAAA,MACrB;AACA,YAAM,KAAK,iBAAiB,iBAAiB;AAG7C,WAAK,iBAAiB,gBAAgB,MAAM;AAAA,IAC7C;AAAA,EACD;AAAA,EAEQ,iBAAiB,MAA0B;AAElD,WAAO,IAAI,QAAc,CAAC,YAAY;AACrC,UAAI,UAAU;AACd,YAAM,WAAW;AAAA,QAChB,gBAAgB;AAAA,QAChB,YAAY;AACX,cAAI,CAAC,SAAS;AACb,sBAAU;AACV,kBAAM,SAAS,MAAM,KAAK,aAAa,OAAO,IAAI;AAClD,sBAAU;AAEV,gBAAI,CAAC,QAAQ;AACZ,uBAAS,QAAQ;AACjB,sBAAQ,MAAS;AAAA,YAClB;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AACD;AA/Ea,6BAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAVU;",
  "names": []
}
