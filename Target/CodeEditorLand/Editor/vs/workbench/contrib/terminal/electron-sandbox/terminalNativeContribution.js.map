{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/electron-sandbox/terminalNativeContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ipcRenderer } from '../../../../base/parts/sandbox/electron-sandbox/globals.js';\nimport { INativeOpenFileRequest } from '../../../../platform/window/common/window.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { registerRemoteContributions } from './terminalRemote.js';\nimport { IRemoteAgentService } from '../../../services/remote/common/remoteAgentService.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ITerminalService } from '../browser/terminal.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { disposableWindowInterval, getActiveWindow } from '../../../../base/browser/dom.js';\n\nexport class TerminalNativeContribution extends Disposable implements IWorkbenchContribution {\n\tdeclare _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@INativeHostService nativeHostService: INativeHostService\n\t) {\n\t\tsuper();\n\n\t\tipcRenderer.on('vscode:openFiles', (_: unknown, request: INativeOpenFileRequest) => { this._onOpenFileRequest(request); });\n\t\tthis._register(nativeHostService.onDidResumeOS(() => this._onOsResume()));\n\n\t\tthis._terminalService.setNativeDelegate({\n\t\t\tgetWindowCount: () => nativeHostService.getWindowCount()\n\t\t});\n\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection && connection.remoteAuthority) {\n\t\t\tregisterRemoteContributions();\n\t\t}\n\t}\n\n\tprivate _onOsResume(): void {\n\t\tfor (const instance of this._terminalService.instances) {\n\t\t\tinstance.xterm?.forceRedraw();\n\t\t}\n\t}\n\n\tprivate async _onOpenFileRequest(request: INativeOpenFileRequest): Promise<void> {\n\t\t// if the request to open files is coming in from the integrated terminal (identified though\n\t\t// the termProgram variable) and we are instructed to wait for editors close, wait for the\n\t\t// marker file to get deleted and then focus back to the integrated terminal.\n\t\tif (request.termProgram === 'vscode' && request.filesToWait) {\n\t\t\tconst waitMarkerFileUri = URI.revive(request.filesToWait.waitMarkerFileUri);\n\t\t\tawait this._whenFileDeleted(waitMarkerFileUri);\n\n\t\t\t// Focus active terminal\n\t\t\tthis._terminalService.activeInstance?.focus();\n\t\t}\n\t}\n\n\tprivate _whenFileDeleted(path: URI): Promise<void> {\n\t\t// Complete when wait marker file is deleted\n\t\treturn new Promise<void>(resolve => {\n\t\t\tlet running = false;\n\t\t\tconst interval = disposableWindowInterval(getActiveWindow(), async () => {\n\t\t\t\tif (!running) {\n\t\t\t\t\trunning = true;\n\t\t\t\t\tconst exists = await this._fileService.exists(path);\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tinterval.dispose();\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,mBAAmB;AAC5B,SAAS,8BAA8B;AACvC,SAAS,WAAW;AACpB,SAAS,oBAAoB;AAC7B,SAAS,mCAAmC;AAC5C,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AACjC,SAAS,8BAA8B;AACvC,SAAS,0BAA0B,uBAAuB;AAEnD,IAAM,6BAAN,cAAyC,WAA6C;AAAA,EAG5F,YACgC,cACI,kBACd,oBACD,mBACnB;AACD,UAAM;AALyB;AACI;AAMnC,gBAAY,GAAG,oBAAoB,CAAC,GAAY,YAAoC;AAAE,WAAK,mBAAmB,OAAO;AAAA,IAAG,CAAC;AACzH,SAAK,UAAU,kBAAkB,cAAc,MAAM,KAAK,YAAY,CAAC,CAAC;AAExE,SAAK,iBAAiB,kBAAkB;AAAA,MACvC,gBAAgB,6BAAM,kBAAkB,eAAe,GAAvC;AAAA,IACjB,CAAC;AAED,UAAM,aAAa,mBAAmB,cAAc;AACpD,QAAI,cAAc,WAAW,iBAAiB;AAC7C,kCAA4B;AAAA,IAC7B;AAAA,EACD;AAAA,EAvCD,OAiB6F;AAAA;AAAA;AAAA,EAwBpF,cAAoB;AAC3B,eAAW,YAAY,KAAK,iBAAiB,WAAW;AACvD,eAAS,OAAO,YAAY;AAAA,IAC7B;AAAA,EACD;AAAA,EAEA,MAAc,mBAAmB,SAAgD;AAIhF,QAAI,QAAQ,gBAAgB,YAAY,QAAQ,aAAa;AAC5D,YAAM,oBAAoB,IAAI,OAAO,QAAQ,YAAY,iBAAiB;AAC1E,YAAM,KAAK,iBAAiB,iBAAiB;AAG7C,WAAK,iBAAiB,gBAAgB,MAAM;AAAA,IAC7C;AAAA,EACD;AAAA,EAEQ,iBAAiB,MAA0B;AAElD,WAAO,IAAI,QAAc,aAAW;AACnC,UAAI,UAAU;AACd,YAAM,WAAW,yBAAyB,gBAAgB,GAAG,YAAY;AACxE,YAAI,CAAC,SAAS;AACb,oBAAU;AACV,gBAAM,SAAS,MAAM,KAAK,aAAa,OAAO,IAAI;AAClD,oBAAU;AAEV,cAAI,CAAC,QAAQ;AACZ,qBAAS,QAAQ;AACjB,oBAAQ,MAAS;AAAA,UAClB;AAAA,QACD;AAAA,MACD,GAAG,GAAI;AAAA,IACR,CAAC;AAAA,EACF;AACD;AA7Da,6BAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
