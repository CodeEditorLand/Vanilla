{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/common/remote/remoteTerminalChannel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Event } from \"../../../../../base/common/event.js\";\nimport { Schemas } from \"../../../../../base/common/network.js\";\nimport type * as performance from \"../../../../../base/common/performance.js\";\nimport type {\n\tIProcessEnvironment,\n\tOperatingSystem,\n} from \"../../../../../base/common/platform.js\";\nimport type { URI, UriComponents } from \"../../../../../base/common/uri.js\";\nimport type { IChannel } from \"../../../../../base/parts/ipc/common/ipc.js\";\nimport { ILabelService } from \"../../../../../platform/label/common/label.js\";\nimport { IRemoteAuthorityResolverService } from \"../../../../../platform/remote/common/remoteAuthorityResolver.js\";\nimport type { IPtyHostProcessReplayEvent } from \"../../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport type {\n\tISerializableEnvironmentDescriptionMap,\n\tISerializableEnvironmentVariableCollection,\n} from \"../../../../../platform/terminal/common/environmentVariable.js\";\nimport {\n\tserializeEnvironmentDescriptionMap,\n\tserializeEnvironmentVariableCollection,\n} from \"../../../../../platform/terminal/common/environmentVariableShared.js\";\nimport {\n\ttype IProcessDataEvent,\n\ttype IProcessProperty,\n\ttype IProcessPropertyMap,\n\ttype IProcessReadyEvent,\n\ttype IPtyHostController,\n\ttype IPtyHostLatencyMeasurement,\n\ttype IRequestResolveVariablesEvent,\n\ttype ISerializedTerminalState,\n\ttype IShellLaunchConfigDto,\n\ttype ITerminalLaunchError,\n\tITerminalLogService,\n\ttype ITerminalProcessOptions,\n\ttype ITerminalProfile,\n\ttype ITerminalsLayoutInfo,\n\ttype ITerminalsLayoutInfoById,\n\ttype ProcessPropertyType,\n\ttype TerminalIcon,\n\ttype TitleEventSource,\n} from \"../../../../../platform/terminal/common/terminal.js\";\nimport type {\n\tIGetTerminalLayoutInfoArgs,\n\tIProcessDetails,\n\tISetTerminalLayoutInfoArgs,\n} from \"../../../../../platform/terminal/common/terminalProcess.js\";\nimport { IWorkspaceContextService } from \"../../../../../platform/workspace/common/workspace.js\";\nimport {\n\tEditorResourceAccessor,\n\tSideBySideEditor,\n} from \"../../../../common/editor.js\";\nimport { IWorkbenchConfigurationService } from \"../../../../services/configuration/common/configuration.js\";\nimport { IConfigurationResolverService } from \"../../../../services/configurationResolver/common/configurationResolver.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\nimport { IEnvironmentVariableService } from \"../environmentVariable.js\";\nimport type { ICompleteTerminalConfiguration } from \"../terminal.js\";\nimport {\n\tRemoteTerminalChannelEvent,\n\tRemoteTerminalChannelRequest,\n} from \"./terminal.js\";\n\nexport const REMOTE_TERMINAL_CHANNEL_NAME = \"remoteterminal\";\n\nexport type ITerminalEnvironmentVariableCollections = [\n\tstring,\n\tISerializableEnvironmentVariableCollection,\n\tISerializableEnvironmentDescriptionMap,\n][];\n\nexport interface IWorkspaceFolderData {\n\turi: UriComponents;\n\tname: string;\n\tindex: number;\n}\n\nexport interface ICreateTerminalProcessArguments {\n\tconfiguration: ICompleteTerminalConfiguration;\n\tresolvedVariables: { [name: string]: string };\n\tenvVariableCollections: ITerminalEnvironmentVariableCollections;\n\tshellLaunchConfig: IShellLaunchConfigDto;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tworkspaceFolders: IWorkspaceFolderData[];\n\tactiveWorkspaceFolder: IWorkspaceFolderData | null;\n\tactiveFileResource: UriComponents | undefined;\n\tshouldPersistTerminal: boolean;\n\toptions: ITerminalProcessOptions;\n\tcols: number;\n\trows: number;\n\tunicodeVersion: \"6\" | \"11\";\n\tresolverEnv: { [key: string]: string | null } | undefined;\n}\n\nexport interface ICreateTerminalProcessResult {\n\tpersistentTerminalId: number;\n\tresolvedShellLaunchConfig: IShellLaunchConfigDto;\n}\n\nexport class RemoteTerminalChannelClient implements IPtyHostController {\n\tget onPtyHostExit(): Event<number> {\n\t\treturn this._channel.listen<number>(\n\t\t\tRemoteTerminalChannelEvent.OnPtyHostExitEvent,\n\t\t);\n\t}\n\tget onPtyHostStart(): Event<void> {\n\t\treturn this._channel.listen<void>(\n\t\t\tRemoteTerminalChannelEvent.OnPtyHostStartEvent,\n\t\t);\n\t}\n\tget onPtyHostUnresponsive(): Event<void> {\n\t\treturn this._channel.listen<void>(\n\t\t\tRemoteTerminalChannelEvent.OnPtyHostUnresponsiveEvent,\n\t\t);\n\t}\n\tget onPtyHostResponsive(): Event<void> {\n\t\treturn this._channel.listen<void>(\n\t\t\tRemoteTerminalChannelEvent.OnPtyHostResponsiveEvent,\n\t\t);\n\t}\n\tget onPtyHostRequestResolveVariables(): Event<IRequestResolveVariablesEvent> {\n\t\treturn this._channel.listen<IRequestResolveVariablesEvent>(\n\t\t\tRemoteTerminalChannelEvent.OnPtyHostRequestResolveVariablesEvent,\n\t\t);\n\t}\n\tget onProcessData(): Event<{\n\t\tid: number;\n\t\tevent: IProcessDataEvent | string;\n\t}> {\n\t\treturn this._channel.listen<{\n\t\t\tid: number;\n\t\t\tevent: IProcessDataEvent | string;\n\t\t}>(RemoteTerminalChannelEvent.OnProcessDataEvent);\n\t}\n\tget onProcessExit(): Event<{ id: number; event: number | undefined }> {\n\t\treturn this._channel.listen<{ id: number; event: number | undefined }>(\n\t\t\tRemoteTerminalChannelEvent.OnProcessExitEvent,\n\t\t);\n\t}\n\tget onProcessReady(): Event<{ id: number; event: IProcessReadyEvent }> {\n\t\treturn this._channel.listen<{ id: number; event: IProcessReadyEvent }>(\n\t\t\tRemoteTerminalChannelEvent.OnProcessReadyEvent,\n\t\t);\n\t}\n\tget onProcessReplay(): Event<{\n\t\tid: number;\n\t\tevent: IPtyHostProcessReplayEvent;\n\t}> {\n\t\treturn this._channel.listen<{\n\t\t\tid: number;\n\t\t\tevent: IPtyHostProcessReplayEvent;\n\t\t}>(RemoteTerminalChannelEvent.OnProcessReplayEvent);\n\t}\n\tget onProcessOrphanQuestion(): Event<{ id: number }> {\n\t\treturn this._channel.listen<{ id: number }>(\n\t\t\tRemoteTerminalChannelEvent.OnProcessOrphanQuestion,\n\t\t);\n\t}\n\tget onExecuteCommand(): Event<{\n\t\treqId: number;\n\t\tpersistentProcessId: number;\n\t\tcommandId: string;\n\t\tcommandArgs: any[];\n\t}> {\n\t\treturn this._channel.listen<{\n\t\t\treqId: number;\n\t\t\tpersistentProcessId: number;\n\t\t\tcommandId: string;\n\t\t\tcommandArgs: any[];\n\t\t}>(RemoteTerminalChannelEvent.OnExecuteCommand);\n\t}\n\tget onDidRequestDetach(): Event<{\n\t\trequestId: number;\n\t\tworkspaceId: string;\n\t\tinstanceId: number;\n\t}> {\n\t\treturn this._channel.listen<{\n\t\t\trequestId: number;\n\t\t\tworkspaceId: string;\n\t\t\tinstanceId: number;\n\t\t}>(RemoteTerminalChannelEvent.OnDidRequestDetach);\n\t}\n\tget onDidChangeProperty(): Event<{\n\t\tid: number;\n\t\tproperty: IProcessProperty<any>;\n\t}> {\n\t\treturn this._channel.listen<{\n\t\t\tid: number;\n\t\t\tproperty: IProcessProperty<any>;\n\t\t}>(RemoteTerminalChannelEvent.OnDidChangeProperty);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _remoteAuthority: string,\n\t\tprivate readonly _channel: IChannel,\n\t\t@IWorkbenchConfigurationService\n\t\tprivate readonly _configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IConfigurationResolverService\n\t\tprivate readonly _resolverService: IConfigurationResolverService,\n\t\t@IEnvironmentVariableService\n\t\tprivate readonly _environmentVariableService: IEnvironmentVariableService,\n\t\t@IRemoteAuthorityResolverService\n\t\tprivate readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) {}\n\n\trestartPtyHost(): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.RestartPtyHost,\n\t\t\t[],\n\t\t);\n\t}\n\n\tasync createProcess(\n\t\tshellLaunchConfig: IShellLaunchConfigDto,\n\t\tconfiguration: ICompleteTerminalConfiguration,\n\t\tactiveWorkspaceRootUri: URI | undefined,\n\t\toptions: ITerminalProcessOptions,\n\t\tshouldPersistTerminal: boolean,\n\t\tcols: number,\n\t\trows: number,\n\t\tunicodeVersion: \"6\" | \"11\",\n\t): Promise<ICreateTerminalProcessResult> {\n\t\t// Be sure to first wait for the remote configuration\n\t\tawait this._configurationService.whenRemoteConfigurationLoaded();\n\n\t\t// We will use the resolver service to resolve all the variables in the config / launch config\n\t\t// But then we will keep only some variables, since the rest need to be resolved on the remote side\n\t\tconst resolvedVariables = Object.create(null);\n\t\tconst lastActiveWorkspace = activeWorkspaceRootUri\n\t\t\t? (this._workspaceContextService.getWorkspaceFolder(\n\t\t\t\t\tactiveWorkspaceRootUri,\n\t\t\t\t) ?? undefined)\n\t\t\t: undefined;\n\t\tlet allResolvedVariables: Map<string, string> | undefined;\n\t\ttry {\n\t\t\tallResolvedVariables = (\n\t\t\t\tawait this._resolverService.resolveAnyMap(lastActiveWorkspace, {\n\t\t\t\t\tshellLaunchConfig,\n\t\t\t\t\tconfiguration,\n\t\t\t\t})\n\t\t\t).resolvedVariables;\n\t\t} catch (err) {\n\t\t\tthis._logService.error(err);\n\t\t}\n\t\tif (allResolvedVariables) {\n\t\t\tfor (const [name, value] of allResolvedVariables.entries()) {\n\t\t\t\tif (\n\t\t\t\t\t/^config:/.test(name) ||\n\t\t\t\t\tname === \"selectedText\" ||\n\t\t\t\t\tname === \"lineNumber\"\n\t\t\t\t) {\n\t\t\t\t\tresolvedVariables[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst envVariableCollections: ITerminalEnvironmentVariableCollections =\n\t\t\t[];\n\t\tfor (const [\n\t\t\tk,\n\t\t\tv,\n\t\t] of this._environmentVariableService.collections.entries()) {\n\t\t\tenvVariableCollections.push([\n\t\t\t\tk,\n\t\t\t\tserializeEnvironmentVariableCollection(v.map),\n\t\t\t\tserializeEnvironmentDescriptionMap(v.descriptionMap),\n\t\t\t]);\n\t\t}\n\n\t\tconst resolverResult =\n\t\t\tawait this._remoteAuthorityResolverService.resolveAuthority(\n\t\t\t\tthis._remoteAuthority,\n\t\t\t);\n\t\tconst resolverEnv =\n\t\t\tresolverResult.options && resolverResult.options.extensionHostEnv;\n\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst workspaceFolders = workspace.folders;\n\t\tconst activeWorkspaceFolder = activeWorkspaceRootUri\n\t\t\t? this._workspaceContextService.getWorkspaceFolder(\n\t\t\t\t\tactiveWorkspaceRootUri,\n\t\t\t\t)\n\t\t\t: null;\n\n\t\tconst activeFileResource = EditorResourceAccessor.getOriginalUri(\n\t\t\tthis._editorService.activeEditor,\n\t\t\t{\n\t\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\t\tfilterByScheme: [\n\t\t\t\t\tSchemas.file,\n\t\t\t\t\tSchemas.vscodeUserData,\n\t\t\t\t\tSchemas.vscodeRemote,\n\t\t\t\t],\n\t\t\t},\n\t\t);\n\n\t\tconst args: ICreateTerminalProcessArguments = {\n\t\t\tconfiguration,\n\t\t\tresolvedVariables,\n\t\t\tenvVariableCollections,\n\t\t\tshellLaunchConfig,\n\t\t\tworkspaceId: workspace.id,\n\t\t\tworkspaceName: this._labelService.getWorkspaceLabel(workspace),\n\t\t\tworkspaceFolders,\n\t\t\tactiveWorkspaceFolder,\n\t\t\tactiveFileResource,\n\t\t\tshouldPersistTerminal,\n\t\t\toptions,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tunicodeVersion,\n\t\t\tresolverEnv,\n\t\t};\n\t\treturn await this._channel.call<ICreateTerminalProcessResult>(\n\t\t\tRemoteTerminalChannelRequest.CreateProcess,\n\t\t\targs,\n\t\t);\n\t}\n\n\trequestDetachInstance(\n\t\tworkspaceId: string,\n\t\tinstanceId: number,\n\t): Promise<IProcessDetails | undefined> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.RequestDetachInstance,\n\t\t\t[workspaceId, instanceId],\n\t\t);\n\t}\n\tacceptDetachInstanceReply(\n\t\trequestId: number,\n\t\tpersistentProcessId: number,\n\t): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.AcceptDetachInstanceReply,\n\t\t\t[requestId, persistentProcessId],\n\t\t);\n\t}\n\tattachToProcess(id: number): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.AttachToProcess,\n\t\t\t[id],\n\t\t);\n\t}\n\tdetachFromProcess(id: number, forcePersist?: boolean): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.DetachFromProcess,\n\t\t\t[id, forcePersist],\n\t\t);\n\t}\n\tlistProcesses(): Promise<IProcessDetails[]> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.ListProcesses);\n\t}\n\tgetLatency(): Promise<IPtyHostLatencyMeasurement[]> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetLatency);\n\t}\n\tgetPerformanceMarks(): Promise<performance.PerformanceMark[]> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.GetPerformanceMarks,\n\t\t);\n\t}\n\treduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.ReduceConnectionGraceTime,\n\t\t);\n\t}\n\tprocessBinary(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.ProcessBinary, [\n\t\t\tid,\n\t\t\tdata,\n\t\t]);\n\t}\n\tstart(\n\t\tid: number,\n\t): Promise<ITerminalLaunchError | { injectedArgs: string[] } | undefined> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.Start, [id]);\n\t}\n\tinput(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.Input, [\n\t\t\tid,\n\t\t\tdata,\n\t\t]);\n\t}\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.AcknowledgeDataEvent,\n\t\t\t[id, charCount],\n\t\t);\n\t}\n\tsetUnicodeVersion(id: number, version: \"6\" | \"11\"): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.SetUnicodeVersion,\n\t\t\t[id, version],\n\t\t);\n\t}\n\tshutdown(id: number, immediate: boolean): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.Shutdown, [\n\t\t\tid,\n\t\t\timmediate,\n\t\t]);\n\t}\n\tresize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.Resize, [\n\t\t\tid,\n\t\t\tcols,\n\t\t\trows,\n\t\t]);\n\t}\n\tclearBuffer(id: number): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.ClearBuffer, [\n\t\t\tid,\n\t\t]);\n\t}\n\tgetInitialCwd(id: number): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetInitialCwd, [\n\t\t\tid,\n\t\t]);\n\t}\n\tgetCwd(id: number): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetCwd, [id]);\n\t}\n\torphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.OrphanQuestionReply,\n\t\t\t[id],\n\t\t);\n\t}\n\tsendCommandResult(\n\t\treqId: number,\n\t\tisError: boolean,\n\t\tpayload: any,\n\t): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.SendCommandResult,\n\t\t\t[reqId, isError, payload],\n\t\t);\n\t}\n\tfreePortKillProcess(\n\t\tport: string,\n\t): Promise<{ port: string; processId: string }> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.FreePortKillProcess,\n\t\t\t[port],\n\t\t);\n\t}\n\tinstallAutoReply(match: string, reply: string): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.InstallAutoReply,\n\t\t\t[match, reply],\n\t\t);\n\t}\n\tuninstallAllAutoReplies(): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.UninstallAllAutoReplies,\n\t\t\t[],\n\t\t);\n\t}\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.GetDefaultSystemShell,\n\t\t\t[osOverride],\n\t\t);\n\t}\n\tgetProfiles(\n\t\tprofiles: unknown,\n\t\tdefaultProfile: unknown,\n\t\tincludeDetectedProfiles?: boolean,\n\t): Promise<ITerminalProfile[]> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetProfiles, [\n\t\t\tthis._workspaceContextService.getWorkspace().id,\n\t\t\tprofiles,\n\t\t\tdefaultProfile,\n\t\t\tincludeDetectedProfiles,\n\t\t]);\n\t}\n\tacceptPtyHostResolvedVariables(\n\t\trequestId: number,\n\t\tresolved: string[],\n\t): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.AcceptPtyHostResolvedVariables,\n\t\t\t[requestId, resolved],\n\t\t);\n\t}\n\n\tgetEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetEnvironment);\n\t}\n\n\tgetWslPath(\n\t\toriginal: string,\n\t\tdirection: \"unix-to-win\" | \"win-to-unix\",\n\t): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetWslPath, [\n\t\t\toriginal,\n\t\t\tdirection,\n\t\t]);\n\t}\n\n\tsetTerminalLayoutInfo(layout?: ITerminalsLayoutInfoById): Promise<void> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: ISetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t\ttabs: layout ? layout.tabs : [],\n\t\t};\n\t\treturn this._channel.call<void>(\n\t\t\tRemoteTerminalChannelRequest.SetTerminalLayoutInfo,\n\t\t\targs,\n\t\t);\n\t}\n\n\tupdateTitle(\n\t\tid: number,\n\t\ttitle: string,\n\t\ttitleSource: TitleEventSource,\n\t): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.UpdateTitle, [\n\t\t\tid,\n\t\t\ttitle,\n\t\t\ttitleSource,\n\t\t]);\n\t}\n\n\tupdateIcon(\n\t\tid: number,\n\t\tuserInitiated: boolean,\n\t\ticon: TerminalIcon,\n\t\tcolor?: string,\n\t): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.UpdateIcon, [\n\t\t\tid,\n\t\t\tuserInitiated,\n\t\t\ticon,\n\t\t\tcolor,\n\t\t]);\n\t}\n\n\trefreshProperty<T extends ProcessPropertyType>(\n\t\tid: number,\n\t\tproperty: T,\n\t): Promise<IProcessPropertyMap[T]> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.RefreshProperty,\n\t\t\t[id, property],\n\t\t);\n\t}\n\n\tupdateProperty<T extends ProcessPropertyType>(\n\t\tid: number,\n\t\tproperty: T,\n\t\tvalue: IProcessPropertyMap[T],\n\t): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.UpdateProperty, [\n\t\t\tid,\n\t\t\tproperty,\n\t\t\tvalue,\n\t\t]);\n\t}\n\n\tgetTerminalLayoutInfo(): Promise<ITerminalsLayoutInfo | undefined> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: IGetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t};\n\t\treturn this._channel.call<ITerminalsLayoutInfo>(\n\t\t\tRemoteTerminalChannelRequest.GetTerminalLayoutInfo,\n\t\t\targs,\n\t\t);\n\t}\n\n\treviveTerminalProcesses(\n\t\tworkspaceId: string,\n\t\tstate: ISerializedTerminalState[],\n\t\tdateTimeFormatLocate: string,\n\t): Promise<void> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.ReviveTerminalProcesses,\n\t\t\t[workspaceId, state, dateTimeFormatLocate],\n\t\t);\n\t}\n\n\tgetRevivedPtyNewId(id: number): Promise<number | undefined> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.GetRevivedPtyNewId,\n\t\t\t[id],\n\t\t);\n\t}\n\n\tserializeTerminalState(ids: number[]): Promise<string> {\n\t\treturn this._channel.call(\n\t\t\tRemoteTerminalChannelRequest.SerializeTerminalState,\n\t\t\t[ids],\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
