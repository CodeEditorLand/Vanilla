{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/common/terminal.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Event } from \"../../../../base/common/event.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport type { MarshalledId } from \"../../../../base/common/marshallingIds.js\";\nimport {\n\ttype IProcessEnvironment,\n\ttype OperatingSystem,\n\tisLinux,\n} from \"../../../../base/common/platform.js\";\nimport type Severity from \"../../../../base/common/severity.js\";\nimport type { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tISerializedCommandDetectionCapability,\n\tITerminalCapabilityStore,\n} from \"../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport type { IMergedEnvironmentVariableCollection } from \"../../../../platform/terminal/common/environmentVariable.js\";\nimport type {\n\tICreateContributedTerminalProfileOptions,\n\tIExtensionTerminalProfile,\n\tIFixedTerminalDimensions,\n\tIProcessDataEvent,\n\tIProcessProperty,\n\tIProcessPropertyMap,\n\tIProcessReadyEvent,\n\tIProcessReadyWindowsPty,\n\tIShellLaunchConfig,\n\tITerminalBackend,\n\tITerminalContributions,\n\tITerminalEnvironment,\n\tITerminalLaunchError,\n\tITerminalProfile,\n\tITerminalProfileObject,\n\tProcessPropertyType,\n\tTerminalIcon,\n\tTerminalLocationString,\n\tTitleEventSource,\n} from \"../../../../platform/terminal/common/terminal.js\";\nimport type { IExtensionPointDescriptor } from \"../../../services/extensions/common/extensionsRegistry.js\";\nimport { AccessibilityCommandId } from \"../../accessibility/common/accessibilityCommands.js\";\nimport type { IEnvironmentVariableInfo } from \"./environmentVariable.js\";\n\n// Import commands to skip shell from terminalContrib - this is an exception to the eslint rule\n// since they need to be included in the terminal module\nimport { defaultTerminalAccessibilityCommandsToSkipShell } from \"../../terminalContrib/accessibility/common/terminal.accessibility.js\"; // eslint-disable-line local/code-import-patterns\nimport { defaultTerminalFindCommandToSkipShell } from \"../../terminalContrib/find/common/terminal.find.js\"; // eslint-disable-line local/code-import-patterns\nimport { defaultTerminalSuggestCommandsToSkipShell } from \"../../terminalContrib/suggest/common/terminal.suggest.js\"; // eslint-disable-line local/code-import-patterns\n\nexport const TERMINAL_VIEW_ID = \"terminal\";\n\nexport const TERMINAL_CREATION_COMMANDS = [\n\t\"workbench.action.terminal.toggleTerminal\",\n\t\"workbench.action.terminal.new\",\n\t\"workbench.action.togglePanel\",\n\t\"workbench.action.terminal.focus\",\n];\n\nexport const TERMINAL_CONFIG_SECTION = \"terminal.integrated\";\n\nexport const DEFAULT_LETTER_SPACING = 0;\nexport const MINIMUM_LETTER_SPACING = -5;\n// HACK: On Linux it's common for fonts to include an underline that is rendered lower than the\n// bottom of the cell which causes it to be cut off due to `overflow:hidden` in the DOM renderer.\n// See:\n// - https://github.com/microsoft/vscode/issues/211933\n// - https://github.com/xtermjs/xterm.js/issues/4067\nexport const DEFAULT_LINE_HEIGHT = isLinux ? 1.1 : 1;\n\nexport const MINIMUM_FONT_WEIGHT = 1;\nexport const MAXIMUM_FONT_WEIGHT = 1000;\nexport const DEFAULT_FONT_WEIGHT = \"normal\";\nexport const DEFAULT_BOLD_FONT_WEIGHT = \"bold\";\nexport const SUGGESTIONS_FONT_WEIGHT = [\n\t\"normal\",\n\t\"bold\",\n\t\"100\",\n\t\"200\",\n\t\"300\",\n\t\"400\",\n\t\"500\",\n\t\"600\",\n\t\"700\",\n\t\"800\",\n\t\"900\",\n];\n\nexport const ITerminalProfileResolverService =\n\tcreateDecorator<ITerminalProfileResolverService>(\n\t\t\"terminalProfileResolverService\",\n\t);\nexport interface ITerminalProfileResolverService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly defaultProfileName: string | undefined;\n\n\t/**\n\t * Resolves the icon of a shell launch config if this will use the default profile\n\t */\n\tresolveIcon(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tos: OperatingSystem,\n\t): void;\n\tresolveShellLaunchConfig(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\toptions: IShellLaunchConfigResolveOptions,\n\t): Promise<void>;\n\tgetDefaultProfile(\n\t\toptions: IShellLaunchConfigResolveOptions,\n\t): Promise<ITerminalProfile>;\n\tgetDefaultShell(options: IShellLaunchConfigResolveOptions): Promise<string>;\n\tgetDefaultShellArgs(\n\t\toptions: IShellLaunchConfigResolveOptions,\n\t): Promise<string | string[]>;\n\tgetDefaultIcon(): TerminalIcon & ThemeIcon;\n\tgetEnvironment(\n\t\tremoteAuthority: string | undefined,\n\t): Promise<IProcessEnvironment>;\n}\n\n/*\n * When there were shell integration args injected\n * and createProcess returns an error, this exit code will be used.\n */\nexport const ShellIntegrationExitCode = 633;\n\nexport interface IRegisterContributedProfileArgs {\n\textensionIdentifier: string;\n\tid: string;\n\ttitle: string;\n\toptions: ICreateContributedTerminalProfileOptions;\n}\n\nexport const ITerminalProfileService = createDecorator<ITerminalProfileService>(\n\t\"terminalProfileService\",\n);\nexport interface ITerminalProfileService {\n\treadonly _serviceBrand: undefined;\n\treadonly availableProfiles: ITerminalProfile[];\n\treadonly contributedProfiles: IExtensionTerminalProfile[];\n\treadonly profilesReady: Promise<void>;\n\tgetPlatformKey(): Promise<string>;\n\trefreshAvailableProfiles(): void;\n\tgetDefaultProfileName(): string | undefined;\n\tgetDefaultProfile(os?: OperatingSystem): ITerminalProfile | undefined;\n\tonDidChangeAvailableProfiles: Event<ITerminalProfile[]>;\n\tgetContributedDefaultProfile(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t): Promise<IExtensionTerminalProfile | undefined>;\n\tregisterContributedProfile(\n\t\targs: IRegisterContributedProfileArgs,\n\t): Promise<void>;\n\tgetContributedProfileProvider(\n\t\textensionIdentifier: string,\n\t\tid: string,\n\t): ITerminalProfileProvider | undefined;\n\tregisterTerminalProfileProvider(\n\t\textensionIdentifier: string,\n\t\tid: string,\n\t\tprofileProvider: ITerminalProfileProvider,\n\t): IDisposable;\n}\n\nexport interface ITerminalProfileProvider {\n\tcreateContributedTerminalProfile(\n\t\toptions: ICreateContributedTerminalProfileOptions,\n\t): Promise<void>;\n}\n\nexport interface IShellLaunchConfigResolveOptions {\n\tremoteAuthority: string | undefined;\n\tos: OperatingSystem;\n\tallowAutomationShell?: boolean;\n}\n\nexport type FontWeight = \"normal\" | \"bold\" | number;\n\nexport interface ITerminalProfiles {\n\tlinux: { [key: string]: ITerminalProfileObject };\n\tosx: { [key: string]: ITerminalProfileObject };\n\twindows: { [key: string]: ITerminalProfileObject };\n}\n\nexport type ConfirmOnKill = \"never\" | \"always\" | \"editor\" | \"panel\";\nexport type ConfirmOnExit = \"never\" | \"always\" | \"hasChildProcesses\";\n\nexport interface ICompleteTerminalConfiguration {\n\t\"terminal.integrated.env.windows\": ITerminalEnvironment;\n\t\"terminal.integrated.env.osx\": ITerminalEnvironment;\n\t\"terminal.integrated.env.linux\": ITerminalEnvironment;\n\t\"terminal.integrated.cwd\": string;\n\t\"terminal.integrated.detectLocale\": \"auto\" | \"off\" | \"on\";\n}\n\nexport interface ITerminalConfiguration {\n\tshell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tautomationShell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tshellArgs: {\n\t\tlinux: string[];\n\t\tosx: string[];\n\t\twindows: string[];\n\t};\n\tprofiles: ITerminalProfiles;\n\tdefaultProfile: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tuseWslProfiles: boolean;\n\taltClickMovesCursor: boolean;\n\tmacOptionIsMeta: boolean;\n\tmacOptionClickForcesSelection: boolean;\n\tgpuAcceleration: \"auto\" | \"on\" | \"off\";\n\trightClickBehavior:\n\t\t| \"default\"\n\t\t| \"copyPaste\"\n\t\t| \"paste\"\n\t\t| \"selectWord\"\n\t\t| \"nothing\";\n\tmiddleClickBehavior: \"default\" | \"paste\";\n\tcursorBlinking: boolean;\n\tcursorStyle: \"block\" | \"underline\" | \"line\";\n\tcursorStyleInactive: \"outline\" | \"block\" | \"underline\" | \"line\" | \"none\";\n\tcursorWidth: number;\n\tdrawBoldTextInBrightColors: boolean;\n\tfastScrollSensitivity: number;\n\tfontFamily: string;\n\tfontWeight: FontWeight;\n\tfontWeightBold: FontWeight;\n\tminimumContrastRatio: number;\n\tmouseWheelScrollSensitivity: number;\n\ttabStopWidth: number;\n\tsendKeybindingsToShell: boolean;\n\t// fontLigatures: boolean;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tdetectLocale: \"auto\" | \"off\" | \"on\";\n\tscrollback: number;\n\tcommandsToSkipShell: string[];\n\tallowChords: boolean;\n\tallowMnemonics: boolean;\n\tcwd: string;\n\tconfirmOnExit: ConfirmOnExit;\n\tconfirmOnKill: ConfirmOnKill;\n\tenableBell: boolean;\n\tenv: {\n\t\tlinux: { [key: string]: string };\n\t\tosx: { [key: string]: string };\n\t\twindows: { [key: string]: string };\n\t};\n\tenvironmentChangesIndicator: \"off\" | \"on\" | \"warnonly\";\n\tenvironmentChangesRelaunch: boolean;\n\tshowExitAlert: boolean;\n\tsplitCwd: \"workspaceRoot\" | \"initial\" | \"inherited\";\n\twindowsEnableConpty: boolean;\n\twordSeparators: string;\n\tenableFileLinks: \"off\" | \"on\" | \"notRemote\";\n\tallowedLinkSchemes: string[];\n\tunicodeVersion: \"6\" | \"11\";\n\tenablePersistentSessions: boolean;\n\ttabs: {\n\t\tenabled: boolean;\n\t\thideCondition: \"never\" | \"singleTerminal\" | \"singleGroup\";\n\t\tshowActiveTerminal:\n\t\t\t| \"always\"\n\t\t\t| \"singleTerminal\"\n\t\t\t| \"singleTerminalOrNarrow\"\n\t\t\t| \"singleGroup\"\n\t\t\t| \"never\";\n\t\tlocation: \"left\" | \"right\";\n\t\tfocusMode: \"singleClick\" | \"doubleClick\";\n\t\ttitle: string;\n\t\tdescription: string;\n\t\tseparator: string;\n\t};\n\tbellDuration: number;\n\tdefaultLocation: TerminalLocationString;\n\tcustomGlyphs: boolean;\n\tpersistentSessionReviveProcess: \"onExit\" | \"onExitAndWindowClose\" | \"never\";\n\tignoreProcessNames: string[];\n\tautoReplies: { [key: string]: string };\n\tshellIntegration?: {\n\t\tenabled: boolean;\n\t\tdecorationsEnabled: \"both\" | \"gutter\" | \"overviewRuler\" | \"never\";\n\t};\n\tenableImages: boolean;\n\tsmoothScrolling: boolean;\n\tignoreBracketedPasteMode: boolean;\n\trescaleOverlappingGlyphs: boolean;\n\texperimental?: {\n\t\twindowsUseConptyDll?: boolean;\n\t};\n}\n\nexport interface ITerminalFont {\n\tfontFamily: string;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tcharWidth?: number;\n\tcharHeight?: number;\n}\n\nexport interface IRemoteTerminalAttachTarget {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\ttitleSource: TitleEventSource;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tisOrphan: boolean;\n\ticon:\n\t\t| URI\n\t\t| { light: URI; dark: URI }\n\t\t| { id: string; color?: { id: string } }\n\t\t| undefined;\n\tcolor: string | undefined;\n\tfixedDimensions: IFixedTerminalDimensions | undefined;\n\tshellIntegrationNonce: string;\n}\n\nexport interface IBeforeProcessDataEvent {\n\t/**\n\t * The data of the event, this can be modified by the event listener to change what gets sent\n\t * to the terminal.\n\t */\n\tdata: string;\n}\n\nexport interface IDefaultShellAndArgsRequest {\n\tuseAutomationShell: boolean;\n\tcallback: (shell: string, args: string[] | string | undefined) => void;\n}\n\n/** Read-only process information that can apply to detached terminals. */\nexport interface ITerminalProcessInfo {\n\treadonly processState: ProcessState;\n\treadonly ptyProcessReady: Promise<void>;\n\treadonly shellProcessId: number | undefined;\n\treadonly remoteAuthority: string | undefined;\n\treadonly os: OperatingSystem | undefined;\n\treadonly userHome: string | undefined;\n\treadonly initialCwd: string;\n\treadonly environmentVariableInfo: IEnvironmentVariableInfo | undefined;\n\treadonly persistentProcessId: number | undefined;\n\treadonly shouldPersist: boolean;\n\treadonly hasWrittenData: boolean;\n\treadonly hasChildProcesses: boolean;\n\treadonly backend: ITerminalBackend | undefined;\n\treadonly capabilities: ITerminalCapabilityStore;\n\treadonly shellIntegrationNonce: string;\n\treadonly extEnvironmentVariableCollection:\n\t\t| IMergedEnvironmentVariableCollection\n\t\t| undefined;\n}\n\nexport const isTerminalProcessManager = (\n\tt: ITerminalProcessInfo | ITerminalProcessManager,\n): t is ITerminalProcessManager =>\n\ttypeof (t as ITerminalProcessManager).write === \"function\";\n\nexport interface ITerminalProcessManager\n\textends IDisposable,\n\t\tITerminalProcessInfo {\n\treadonly onPtyDisconnect: Event<void>;\n\treadonly onPtyReconnect: Event<void>;\n\n\treadonly onProcessReady: Event<IProcessReadyEvent>;\n\treadonly onBeforeProcessData: Event<IBeforeProcessDataEvent>;\n\treadonly onProcessData: Event<IProcessDataEvent>;\n\treadonly onProcessReplayComplete: Event<void>;\n\treadonly onEnvironmentVariableInfoChanged: Event<IEnvironmentVariableInfo>;\n\treadonly onDidChangeProperty: Event<IProcessProperty<any>>;\n\treadonly onProcessExit: Event<number | undefined>;\n\treadonly onRestoreCommands: Event<ISerializedCommandDetectionCapability>;\n\n\tdispose(immediate?: boolean): void;\n\tdetachFromProcess(forcePersist?: boolean): Promise<void>;\n\tcreateProcess(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tcols: number,\n\t\trows: number,\n\t): Promise<ITerminalLaunchError | { injectedArgs: string[] } | undefined>;\n\trelaunch(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tcols: number,\n\t\trows: number,\n\t\treset: boolean,\n\t): Promise<ITerminalLaunchError | { injectedArgs: string[] } | undefined>;\n\twrite(data: string): Promise<void>;\n\tsetDimensions(cols: number, rows: number): Promise<void>;\n\tsetDimensions(cols: number, rows: number, sync: false): Promise<void>;\n\tsetDimensions(cols: number, rows: number, sync: true): void;\n\tclearBuffer(): Promise<void>;\n\tsetUnicodeVersion(version: \"6\" | \"11\"): Promise<void>;\n\tacknowledgeDataEvent(charCount: number): void;\n\tprocessBinary(data: string): void;\n\n\trefreshProperty<T extends ProcessPropertyType>(\n\t\ttype: T,\n\t): Promise<IProcessPropertyMap[T]>;\n\tupdateProperty<T extends ProcessPropertyType>(\n\t\tproperty: T,\n\t\tvalue: IProcessPropertyMap[T],\n\t): Promise<void>;\n\tgetBackendOS(): Promise<OperatingSystem>;\n\tfreePortKillProcess(port: string): Promise<void>;\n}\n\nexport enum ProcessState {\n\t// The process has not been initialized yet.\n\tUninitialized = 1,\n\t// The process is currently launching, the process is marked as launching\n\t// for a short duration after being created and is helpful to indicate\n\t// whether the process died as a result of bad shell and args.\n\tLaunching = 2,\n\t// The process is running normally.\n\tRunning = 3,\n\t// The process was killed during launch, likely as a result of bad shell and\n\t// args.\n\tKilledDuringLaunch = 4,\n\t// The process was killed by the user (the event originated from VS Code).\n\tKilledByUser = 5,\n\t// The process was killed by itself, for example the shell crashed or `exit`\n\t// was run.\n\tKilledByProcess = 6,\n}\n\nexport interface ITerminalProcessExtHostProxy extends IDisposable {\n\treadonly instanceId: number;\n\n\temitData(data: string): void;\n\temitProcessProperty(property: IProcessProperty<any>): void;\n\temitReady(\n\t\tpid: number,\n\t\tcwd: string,\n\t\twindowsPty: IProcessReadyWindowsPty | undefined,\n\t): void;\n\temitExit(exitCode: number | undefined): void;\n\n\tonInput: Event<string>;\n\tonBinary: Event<string>;\n\tonResize: Event<{ cols: number; rows: number }>;\n\tonAcknowledgeDataEvent: Event<number>;\n\tonShutdown: Event<boolean>;\n\tonRequestInitialCwd: Event<void>;\n\tonRequestCwd: Event<void>;\n}\n\nexport interface IStartExtensionTerminalRequest {\n\tproxy: ITerminalProcessExtHostProxy;\n\tcols: number;\n\trows: number;\n\tcallback: (error: ITerminalLaunchError | undefined) => void;\n}\n\nexport interface ITerminalStatus {\n\t/** An internal string ID used to identify the status. */\n\tid: string;\n\t/**\n\t * The severity of the status, this defines both the color and how likely the status is to be\n\t * the \"primary status\".\n\t */\n\tseverity: Severity;\n\t/**\n\t * An icon representing the status, if this is not specified it will not show up on the terminal\n\t * tab and will use the generic `info` icon when hovering.\n\t */\n\ticon?: ThemeIcon;\n\t/**\n\t * What to show for this status in the terminal's hover.\n\t */\n\ttooltip?: string | undefined;\n\t/**\n\t * Actions to expose on hover.\n\t */\n\thoverActions?: ITerminalStatusHoverAction[];\n}\n\nexport interface ITerminalStatusHoverAction {\n\tlabel: string;\n\tcommandId: string;\n\trun: () => void;\n}\n\n/**\n * Context for actions taken on terminal instances.\n */\nexport interface ISerializedTerminalInstanceContext {\n\t$mid: MarshalledId.TerminalContext;\n\tinstanceId: number;\n}\n\nexport const QUICK_LAUNCH_PROFILE_CHOICE =\n\t\"workbench.action.terminal.profile.choice\";\n\nexport enum TerminalCommandId {\n\tToggle = \"workbench.action.terminal.toggleTerminal\",\n\tKill = \"workbench.action.terminal.kill\",\n\tKillViewOrEditor = \"workbench.action.terminal.killViewOrEditor\",\n\tKillEditor = \"workbench.action.terminal.killEditor\",\n\tKillActiveTab = \"workbench.action.terminal.killActiveTab\",\n\tKillAll = \"workbench.action.terminal.killAll\",\n\tQuickKill = \"workbench.action.terminal.quickKill\",\n\tConfigureTerminalSettings = \"workbench.action.terminal.openSettings\",\n\tShellIntegrationLearnMore = \"workbench.action.terminal.learnMore\",\n\tRunRecentCommand = \"workbench.action.terminal.runRecentCommand\",\n\tCopyLastCommand = \"workbench.action.terminal.copyLastCommand\",\n\tCopyLastCommandOutput = \"workbench.action.terminal.copyLastCommandOutput\",\n\tCopyLastCommandAndLastCommandOutput = \"workbench.action.terminal.copyLastCommandAndLastCommandOutput\",\n\tGoToRecentDirectory = \"workbench.action.terminal.goToRecentDirectory\",\n\tCopyAndClearSelection = \"workbench.action.terminal.copyAndClearSelection\",\n\tCopySelection = \"workbench.action.terminal.copySelection\",\n\tCopySelectionAsHtml = \"workbench.action.terminal.copySelectionAsHtml\",\n\tSelectAll = \"workbench.action.terminal.selectAll\",\n\tDeleteWordLeft = \"workbench.action.terminal.deleteWordLeft\",\n\tDeleteWordRight = \"workbench.action.terminal.deleteWordRight\",\n\tDeleteToLineStart = \"workbench.action.terminal.deleteToLineStart\",\n\tMoveToLineStart = \"workbench.action.terminal.moveToLineStart\",\n\tMoveToLineEnd = \"workbench.action.terminal.moveToLineEnd\",\n\tNew = \"workbench.action.terminal.new\",\n\tNewWithCwd = \"workbench.action.terminal.newWithCwd\",\n\tNewLocal = \"workbench.action.terminal.newLocal\",\n\tNewInActiveWorkspace = \"workbench.action.terminal.newInActiveWorkspace\",\n\tNewWithProfile = \"workbench.action.terminal.newWithProfile\",\n\tSplit = \"workbench.action.terminal.split\",\n\tSplitActiveTab = \"workbench.action.terminal.splitActiveTab\",\n\tSplitInActiveWorkspace = \"workbench.action.terminal.splitInActiveWorkspace\",\n\tUnsplit = \"workbench.action.terminal.unsplit\",\n\tJoinActiveTab = \"workbench.action.terminal.joinActiveTab\",\n\tJoin = \"workbench.action.terminal.join\",\n\tRelaunch = \"workbench.action.terminal.relaunch\",\n\tFocusPreviousPane = \"workbench.action.terminal.focusPreviousPane\",\n\tCreateTerminalEditor = \"workbench.action.createTerminalEditor\",\n\tCreateTerminalEditorSameGroup = \"workbench.action.createTerminalEditorSameGroup\",\n\tCreateTerminalEditorSide = \"workbench.action.createTerminalEditorSide\",\n\tFocusTabs = \"workbench.action.terminal.focusTabs\",\n\tFocusNextPane = \"workbench.action.terminal.focusNextPane\",\n\tResizePaneLeft = \"workbench.action.terminal.resizePaneLeft\",\n\tResizePaneRight = \"workbench.action.terminal.resizePaneRight\",\n\tResizePaneUp = \"workbench.action.terminal.resizePaneUp\",\n\tSizeToContentWidth = \"workbench.action.terminal.sizeToContentWidth\",\n\tSizeToContentWidthActiveTab = \"workbench.action.terminal.sizeToContentWidthActiveTab\",\n\tResizePaneDown = \"workbench.action.terminal.resizePaneDown\",\n\tFocus = \"workbench.action.terminal.focus\",\n\tFocusNext = \"workbench.action.terminal.focusNext\",\n\tFocusPrevious = \"workbench.action.terminal.focusPrevious\",\n\tPaste = \"workbench.action.terminal.paste\",\n\tPasteSelection = \"workbench.action.terminal.pasteSelection\",\n\tSelectDefaultProfile = \"workbench.action.terminal.selectDefaultShell\",\n\tRunSelectedText = \"workbench.action.terminal.runSelectedText\",\n\tRunActiveFile = \"workbench.action.terminal.runActiveFile\",\n\tSwitchTerminal = \"workbench.action.terminal.switchTerminal\",\n\tScrollDownLine = \"workbench.action.terminal.scrollDown\",\n\tScrollDownPage = \"workbench.action.terminal.scrollDownPage\",\n\tScrollToBottom = \"workbench.action.terminal.scrollToBottom\",\n\tScrollUpLine = \"workbench.action.terminal.scrollUp\",\n\tScrollUpPage = \"workbench.action.terminal.scrollUpPage\",\n\tScrollToTop = \"workbench.action.terminal.scrollToTop\",\n\tClear = \"workbench.action.terminal.clear\",\n\tClearSelection = \"workbench.action.terminal.clearSelection\",\n\tChangeIcon = \"workbench.action.terminal.changeIcon\",\n\tChangeIconActiveTab = \"workbench.action.terminal.changeIconActiveTab\",\n\tChangeColor = \"workbench.action.terminal.changeColor\",\n\tChangeColorActiveTab = \"workbench.action.terminal.changeColorActiveTab\",\n\tRename = \"workbench.action.terminal.rename\",\n\tRenameActiveTab = \"workbench.action.terminal.renameActiveTab\",\n\tRenameWithArgs = \"workbench.action.terminal.renameWithArg\",\n\tQuickOpenTerm = \"workbench.action.quickOpenTerm\",\n\tScrollToPreviousCommand = \"workbench.action.terminal.scrollToPreviousCommand\",\n\tScrollToNextCommand = \"workbench.action.terminal.scrollToNextCommand\",\n\tSelectToPreviousCommand = \"workbench.action.terminal.selectToPreviousCommand\",\n\tSelectToNextCommand = \"workbench.action.terminal.selectToNextCommand\",\n\tSelectToPreviousLine = \"workbench.action.terminal.selectToPreviousLine\",\n\tSelectToNextLine = \"workbench.action.terminal.selectToNextLine\",\n\tSendSequence = \"workbench.action.terminal.sendSequence\",\n\tAttachToSession = \"workbench.action.terminal.attachToSession\",\n\tDetachSession = \"workbench.action.terminal.detachSession\",\n\tMoveToEditor = \"workbench.action.terminal.moveToEditor\",\n\tMoveToTerminalPanel = \"workbench.action.terminal.moveToTerminalPanel\",\n\tMoveIntoNewWindow = \"workbench.action.terminal.moveIntoNewWindow\",\n\tSetDimensions = \"workbench.action.terminal.setDimensions\",\n\tClearPreviousSessionHistory = \"workbench.action.terminal.clearPreviousSessionHistory\",\n\tFocusHover = \"workbench.action.terminal.focusHover\",\n\tShowEnvironmentContributions = \"workbench.action.terminal.showEnvironmentContributions\",\n\tStartVoice = \"workbench.action.terminal.startVoice\",\n\tStopVoice = \"workbench.action.terminal.stopVoice\",\n}\n\nexport const DEFAULT_COMMANDS_TO_SKIP_SHELL: string[] = [\n\tTerminalCommandId.ClearSelection,\n\tTerminalCommandId.Clear,\n\tTerminalCommandId.CopyAndClearSelection,\n\tTerminalCommandId.CopySelection,\n\tTerminalCommandId.CopySelectionAsHtml,\n\tTerminalCommandId.CopyLastCommand,\n\tTerminalCommandId.CopyLastCommandOutput,\n\tTerminalCommandId.CopyLastCommandAndLastCommandOutput,\n\tTerminalCommandId.DeleteToLineStart,\n\tTerminalCommandId.DeleteWordLeft,\n\tTerminalCommandId.DeleteWordRight,\n\tTerminalCommandId.GoToRecentDirectory,\n\tTerminalCommandId.FocusNextPane,\n\tTerminalCommandId.FocusNext,\n\tTerminalCommandId.FocusPreviousPane,\n\tTerminalCommandId.FocusPrevious,\n\tTerminalCommandId.Focus,\n\tTerminalCommandId.SizeToContentWidth,\n\tTerminalCommandId.Kill,\n\tTerminalCommandId.KillEditor,\n\tTerminalCommandId.MoveToEditor,\n\tTerminalCommandId.MoveToLineEnd,\n\tTerminalCommandId.MoveToLineStart,\n\tTerminalCommandId.MoveToTerminalPanel,\n\tTerminalCommandId.NewInActiveWorkspace,\n\tTerminalCommandId.New,\n\tTerminalCommandId.Paste,\n\tTerminalCommandId.PasteSelection,\n\tTerminalCommandId.ResizePaneDown,\n\tTerminalCommandId.ResizePaneLeft,\n\tTerminalCommandId.ResizePaneRight,\n\tTerminalCommandId.ResizePaneUp,\n\tTerminalCommandId.RunActiveFile,\n\tTerminalCommandId.RunSelectedText,\n\tTerminalCommandId.RunRecentCommand,\n\tTerminalCommandId.ScrollDownLine,\n\tTerminalCommandId.ScrollDownPage,\n\tTerminalCommandId.ScrollToBottom,\n\tTerminalCommandId.ScrollToNextCommand,\n\tTerminalCommandId.ScrollToPreviousCommand,\n\tTerminalCommandId.ScrollToTop,\n\tTerminalCommandId.ScrollUpLine,\n\tTerminalCommandId.ScrollUpPage,\n\tTerminalCommandId.SendSequence,\n\tTerminalCommandId.SelectAll,\n\tTerminalCommandId.SelectToNextCommand,\n\tTerminalCommandId.SelectToNextLine,\n\tTerminalCommandId.SelectToPreviousCommand,\n\tTerminalCommandId.SelectToPreviousLine,\n\tTerminalCommandId.SplitInActiveWorkspace,\n\tTerminalCommandId.Split,\n\tTerminalCommandId.Toggle,\n\tTerminalCommandId.FocusHover,\n\tAccessibilityCommandId.OpenAccessibilityHelp,\n\t\"editor.action.toggleTabFocusMode\",\n\t\"notifications.hideList\",\n\t\"notifications.hideToasts\",\n\t\"workbench.action.closeQuickOpen\",\n\t\"workbench.action.quickOpen\",\n\t\"workbench.action.quickOpenPreviousEditor\",\n\t\"workbench.action.showCommands\",\n\t\"workbench.action.tasks.build\",\n\t\"workbench.action.tasks.restartTask\",\n\t\"workbench.action.tasks.runTask\",\n\t\"workbench.action.tasks.reRunTask\",\n\t\"workbench.action.tasks.showLog\",\n\t\"workbench.action.tasks.showTasks\",\n\t\"workbench.action.tasks.terminate\",\n\t\"workbench.action.tasks.test\",\n\t\"workbench.action.toggleFullScreen\",\n\t\"workbench.action.terminal.focusAtIndex1\",\n\t\"workbench.action.terminal.focusAtIndex2\",\n\t\"workbench.action.terminal.focusAtIndex3\",\n\t\"workbench.action.terminal.focusAtIndex4\",\n\t\"workbench.action.terminal.focusAtIndex5\",\n\t\"workbench.action.terminal.focusAtIndex6\",\n\t\"workbench.action.terminal.focusAtIndex7\",\n\t\"workbench.action.terminal.focusAtIndex8\",\n\t\"workbench.action.terminal.focusAtIndex9\",\n\t\"workbench.action.focusSecondEditorGroup\",\n\t\"workbench.action.focusThirdEditorGroup\",\n\t\"workbench.action.focusFourthEditorGroup\",\n\t\"workbench.action.focusFifthEditorGroup\",\n\t\"workbench.action.focusSixthEditorGroup\",\n\t\"workbench.action.focusSeventhEditorGroup\",\n\t\"workbench.action.focusEighthEditorGroup\",\n\t\"workbench.action.focusNextPart\",\n\t\"workbench.action.focusPreviousPart\",\n\t\"workbench.action.nextPanelView\",\n\t\"workbench.action.previousPanelView\",\n\t\"workbench.action.nextSideBarView\",\n\t\"workbench.action.previousSideBarView\",\n\t\"workbench.action.debug.start\",\n\t\"workbench.action.debug.stop\",\n\t\"workbench.action.debug.run\",\n\t\"workbench.action.debug.restart\",\n\t\"workbench.action.debug.continue\",\n\t\"workbench.action.debug.pause\",\n\t\"workbench.action.debug.stepInto\",\n\t\"workbench.action.debug.stepOut\",\n\t\"workbench.action.debug.stepOver\",\n\t\"workbench.action.nextEditor\",\n\t\"workbench.action.previousEditor\",\n\t\"workbench.action.nextEditorInGroup\",\n\t\"workbench.action.previousEditorInGroup\",\n\t\"workbench.action.openNextRecentlyUsedEditor\",\n\t\"workbench.action.openPreviousRecentlyUsedEditor\",\n\t\"workbench.action.openNextRecentlyUsedEditorInGroup\",\n\t\"workbench.action.openPreviousRecentlyUsedEditorInGroup\",\n\t\"workbench.action.quickOpenPreviousRecentlyUsedEditor\",\n\t\"workbench.action.quickOpenLeastRecentlyUsedEditor\",\n\t\"workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\",\n\t\"workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\",\n\t\"workbench.action.focusActiveEditorGroup\",\n\t\"workbench.action.focusFirstEditorGroup\",\n\t\"workbench.action.focusLastEditorGroup\",\n\t\"workbench.action.firstEditorInGroup\",\n\t\"workbench.action.lastEditorInGroup\",\n\t\"workbench.action.navigateUp\",\n\t\"workbench.action.navigateDown\",\n\t\"workbench.action.navigateRight\",\n\t\"workbench.action.navigateLeft\",\n\t\"workbench.action.togglePanel\",\n\t\"workbench.action.quickOpenView\",\n\t\"workbench.action.toggleMaximizedPanel\",\n\t\"notification.acceptPrimaryAction\",\n\t\"runCommands\",\n\t\"workbench.action.terminal.chat.start\",\n\t\"workbench.action.terminal.chat.close\",\n\t\"workbench.action.terminal.chat.discard\",\n\t\"workbench.action.terminal.chat.makeRequest\",\n\t\"workbench.action.terminal.chat.cancel\",\n\t\"workbench.action.terminal.chat.feedbackHelpful\",\n\t\"workbench.action.terminal.chat.feedbackUnhelpful\",\n\t\"workbench.action.terminal.chat.feedbackReportIssue\",\n\t\"workbench.action.terminal.chat.runCommand\",\n\t\"workbench.action.terminal.chat.insertCommand\",\n\t\"workbench.action.terminal.chat.viewInChat\",\n\t...defaultTerminalAccessibilityCommandsToSkipShell,\n\t...defaultTerminalFindCommandToSkipShell,\n\t...defaultTerminalSuggestCommandsToSkipShell,\n];\n\nexport const terminalContributionsDescriptor: IExtensionPointDescriptor<ITerminalContributions> =\n\t{\n\t\textensionPoint: \"terminal\",\n\t\tdefaultExtensionKind: [\"workspace\"],\n\t\tactivationEventsGenerator: (\n\t\t\tcontribs: ITerminalContributions[],\n\t\t\tresult: { push(item: string): void },\n\t\t) => {\n\t\t\tfor (const contrib of contribs) {\n\t\t\t\tfor (const profileContrib of contrib.profiles ?? []) {\n\t\t\t\t\tresult.push(`onTerminalProfile:${profileContrib.id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tjsonSchema: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"vscode.extension.contributes.terminal\",\n\t\t\t\t\"Contributes terminal functionality.\",\n\t\t\t),\n\t\t\ttype: \"object\",\n\t\t\tproperties: {\n\t\t\t\tprofiles: {\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"vscode.extension.contributes.terminal.profiles\",\n\t\t\t\t\t\t\"Defines additional terminal profiles that the user can create.\",\n\t\t\t\t\t),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\trequired: [\"id\", \"title\"],\n\t\t\t\t\t\tdefaultSnippets: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\t\tid: \"$1\",\n\t\t\t\t\t\t\t\t\ttitle: \"$2\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.terminal.profiles.id\",\n\t\t\t\t\t\t\t\t\t\"The ID of the terminal profile provider.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.terminal.profiles.title\",\n\t\t\t\t\t\t\t\t\t\"Title for this terminal profile.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ticon: {\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.terminal.types.icon\",\n\t\t\t\t\t\t\t\t\t\"A codicon, URI, or light and dark URIs to associate with this terminal type.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\tlight: {\n\t\t\t\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.terminal.types.icon.light\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Icon path when a light theme is used\",\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tdark: {\n\t\t\t\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.terminal.types.icon.dark\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Icon path when a dark theme is used\",\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n"],
  "mappings": "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",
  "names": ["ProcessState", "TerminalCommandId"]
}
