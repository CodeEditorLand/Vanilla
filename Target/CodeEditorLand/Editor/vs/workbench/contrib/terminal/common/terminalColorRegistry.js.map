{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { editorOverviewRulerBorder } from \"../../../../editor/common/core/editorColorRegistry.js\";\nimport * as nls from \"../../../../nls.js\";\n\nimport {\n\ttype ColorDefaults,\n\ttype ColorIdentifier,\n\teditorFindMatch,\n\teditorFindMatchHighlight,\n\teditorHoverHighlight,\n\teditorSelectionBackground,\n\toverviewRulerFindMatchForeground,\n\tregisterColor,\n\ttransparent,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport {\n\tEDITOR_DRAG_AND_DROP_BACKGROUND,\n\tPANEL_BORDER,\n\tTAB_ACTIVE_BORDER,\n} from \"../../../common/theme.js\";\n\n/**\n * The color identifiers for the terminal's ansi colors. The index in the array corresponds to the index\n * of the color in the terminal color table.\n */\nexport const ansiColorIdentifiers: ColorIdentifier[] = [];\n\nexport const TERMINAL_BACKGROUND_COLOR = registerColor(\n\t\"terminal.background\",\n\tnull,\n\tnls.localize(\n\t\t\"terminal.background\",\n\t\t\"The background color of the terminal, this allows coloring the terminal differently to the panel.\",\n\t),\n);\nexport const TERMINAL_FOREGROUND_COLOR = registerColor(\n\t\"terminal.foreground\",\n\t{\n\t\tlight: \"#333333\",\n\t\tdark: \"#CCCCCC\",\n\t\thcDark: \"#FFFFFF\",\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\n\t\t\"terminal.foreground\",\n\t\t\"The foreground color of the terminal.\",\n\t),\n);\nexport const TERMINAL_CURSOR_FOREGROUND_COLOR = registerColor(\n\t\"terminalCursor.foreground\",\n\tnull,\n\tnls.localize(\n\t\t\"terminalCursor.foreground\",\n\t\t\"The foreground color of the terminal cursor.\",\n\t),\n);\nexport const TERMINAL_CURSOR_BACKGROUND_COLOR = registerColor(\n\t\"terminalCursor.background\",\n\tnull,\n\tnls.localize(\n\t\t\"terminalCursor.background\",\n\t\t\"The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.\",\n\t),\n);\nexport const TERMINAL_SELECTION_BACKGROUND_COLOR = registerColor(\n\t\"terminal.selectionBackground\",\n\teditorSelectionBackground,\n\tnls.localize(\n\t\t\"terminal.selectionBackground\",\n\t\t\"The selection background color of the terminal.\",\n\t),\n);\nexport const TERMINAL_INACTIVE_SELECTION_BACKGROUND_COLOR = registerColor(\n\t\"terminal.inactiveSelectionBackground\",\n\t{\n\t\tlight: transparent(TERMINAL_SELECTION_BACKGROUND_COLOR, 0.5),\n\t\tdark: transparent(TERMINAL_SELECTION_BACKGROUND_COLOR, 0.5),\n\t\thcDark: transparent(TERMINAL_SELECTION_BACKGROUND_COLOR, 0.7),\n\t\thcLight: transparent(TERMINAL_SELECTION_BACKGROUND_COLOR, 0.5),\n\t},\n\tnls.localize(\n\t\t\"terminal.inactiveSelectionBackground\",\n\t\t\"The selection background color of the terminal when it does not have focus.\",\n\t),\n);\nexport const TERMINAL_SELECTION_FOREGROUND_COLOR = registerColor(\n\t\"terminal.selectionForeground\",\n\t{\n\t\tlight: null,\n\t\tdark: null,\n\t\thcDark: \"#000000\",\n\t\thcLight: \"#ffffff\",\n\t},\n\tnls.localize(\n\t\t\"terminal.selectionForeground\",\n\t\t\"The selection foreground color of the terminal. When this is null the selection foreground will be retained and have the minimum contrast ratio feature applied.\",\n\t),\n);\nexport const TERMINAL_COMMAND_DECORATION_DEFAULT_BACKGROUND_COLOR =\n\tregisterColor(\n\t\t\"terminalCommandDecoration.defaultBackground\",\n\t\t{\n\t\t\tlight: \"#00000040\",\n\t\t\tdark: \"#ffffff40\",\n\t\t\thcDark: \"#ffffff80\",\n\t\t\thcLight: \"#00000040\",\n\t\t},\n\t\tnls.localize(\n\t\t\t\"terminalCommandDecoration.defaultBackground\",\n\t\t\t\"The default terminal command decoration background color.\",\n\t\t),\n\t);\nexport const TERMINAL_COMMAND_DECORATION_SUCCESS_BACKGROUND_COLOR =\n\tregisterColor(\n\t\t\"terminalCommandDecoration.successBackground\",\n\t\t{\n\t\t\tdark: \"#1B81A8\",\n\t\t\tlight: \"#2090D3\",\n\t\t\thcDark: \"#1B81A8\",\n\t\t\thcLight: \"#007100\",\n\t\t},\n\t\tnls.localize(\n\t\t\t\"terminalCommandDecoration.successBackground\",\n\t\t\t\"The terminal command decoration background color for successful commands.\",\n\t\t),\n\t);\nexport const TERMINAL_COMMAND_DECORATION_ERROR_BACKGROUND_COLOR = registerColor(\n\t\"terminalCommandDecoration.errorBackground\",\n\t{\n\t\tdark: \"#F14C4C\",\n\t\tlight: \"#E51400\",\n\t\thcDark: \"#F14C4C\",\n\t\thcLight: \"#B5200D\",\n\t},\n\tnls.localize(\n\t\t\"terminalCommandDecoration.errorBackground\",\n\t\t\"The terminal command decoration background color for error commands.\",\n\t),\n);\nexport const TERMINAL_OVERVIEW_RULER_CURSOR_FOREGROUND_COLOR = registerColor(\n\t\"terminalOverviewRuler.cursorForeground\",\n\t\"#A0A0A0CC\",\n\tnls.localize(\n\t\t\"terminalOverviewRuler.cursorForeground\",\n\t\t\"The overview ruler cursor color.\",\n\t),\n);\nexport const TERMINAL_BORDER_COLOR = registerColor(\n\t\"terminal.border\",\n\tPANEL_BORDER,\n\tnls.localize(\n\t\t\"terminal.border\",\n\t\t\"The color of the border that separates split panes within the terminal. This defaults to panel.border.\",\n\t),\n);\nexport const TERMINAL_OVERVIEW_RULER_BORDER_COLOR = registerColor(\n\t\"terminalOverviewRuler.border\",\n\teditorOverviewRulerBorder,\n\tnls.localize(\n\t\t\"terminalOverviewRuler.border\",\n\t\t\"The overview ruler left-side border color.\",\n\t),\n);\nexport const TERMINAL_FIND_MATCH_BACKGROUND_COLOR = registerColor(\n\t\"terminal.findMatchBackground\",\n\t{\n\t\tdark: editorFindMatch,\n\t\tlight: editorFindMatch,\n\t\t// Use regular selection background in high contrast with a thick border\n\t\thcDark: null,\n\t\thcLight: \"#0F4A85\",\n\t},\n\tnls.localize(\n\t\t\"terminal.findMatchBackground\",\n\t\t\"Color of the current search match in the terminal. The color must not be opaque so as not to hide underlying terminal content.\",\n\t),\n\ttrue,\n);\nexport const TERMINAL_HOVER_HIGHLIGHT_BACKGROUND_COLOR = registerColor(\n\t\"terminal.hoverHighlightBackground\",\n\ttransparent(editorHoverHighlight, 0.5),\n\tnls.localize(\n\t\t\"terminal.findMatchHighlightBorder\",\n\t\t\"Border color of the other search matches in the terminal.\",\n\t),\n);\nexport const TERMINAL_FIND_MATCH_BORDER_COLOR = registerColor(\n\t\"terminal.findMatchBorder\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: \"#f38518\",\n\t\thcLight: \"#0F4A85\",\n\t},\n\tnls.localize(\n\t\t\"terminal.findMatchBorder\",\n\t\t\"Border color of the current search match in the terminal.\",\n\t),\n);\nexport const TERMINAL_FIND_MATCH_HIGHLIGHT_BACKGROUND_COLOR = registerColor(\n\t\"terminal.findMatchHighlightBackground\",\n\t{\n\t\tdark: editorFindMatchHighlight,\n\t\tlight: editorFindMatchHighlight,\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"terminal.findMatchHighlightBackground\",\n\t\t\"Color of the other search matches in the terminal. The color must not be opaque so as not to hide underlying terminal content.\",\n\t),\n\ttrue,\n);\nexport const TERMINAL_FIND_MATCH_HIGHLIGHT_BORDER_COLOR = registerColor(\n\t\"terminal.findMatchHighlightBorder\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: \"#f38518\",\n\t\thcLight: \"#0F4A85\",\n\t},\n\tnls.localize(\n\t\t\"terminal.findMatchHighlightBorder\",\n\t\t\"Border color of the other search matches in the terminal.\",\n\t),\n);\nexport const TERMINAL_OVERVIEW_RULER_FIND_MATCH_FOREGROUND_COLOR =\n\tregisterColor(\n\t\t\"terminalOverviewRuler.findMatchForeground\",\n\t\t{\n\t\t\tdark: overviewRulerFindMatchForeground,\n\t\t\tlight: overviewRulerFindMatchForeground,\n\t\t\thcDark: \"#f38518\",\n\t\t\thcLight: \"#0F4A85\",\n\t\t},\n\t\tnls.localize(\n\t\t\t\"terminalOverviewRuler.findMatchHighlightForeground\",\n\t\t\t\"Overview ruler marker color for find matches in the terminal.\",\n\t\t),\n\t);\nexport const TERMINAL_DRAG_AND_DROP_BACKGROUND = registerColor(\n\t\"terminal.dropBackground\",\n\tEDITOR_DRAG_AND_DROP_BACKGROUND,\n\tnls.localize(\n\t\t\"terminal.dragAndDropBackground\",\n\t\t\"Background color when dragging on top of terminals. The color should have transparency so that the terminal contents can still shine through.\",\n\t),\n\ttrue,\n);\nexport const TERMINAL_TAB_ACTIVE_BORDER = registerColor(\n\t\"terminal.tab.activeBorder\",\n\tTAB_ACTIVE_BORDER,\n\tnls.localize(\n\t\t\"terminal.tab.activeBorder\",\n\t\t\"Border on the side of the terminal tab in the panel. This defaults to tab.activeBorder.\",\n\t),\n);\nexport const TERMINAL_INITIAL_HINT_FOREGROUND = registerColor(\n\t\"terminal.initialHintForeground\",\n\t{\n\t\tdark: \"#ffffff56\",\n\t\tlight: \"#0007\",\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"terminalInitialHintForeground\",\n\t\t\"Foreground color of the terminal initial hint.\",\n\t),\n);\n\nexport const ansiColorMap: {\n\t[key: string]: { index: number; defaults: ColorDefaults };\n} = {\n\t\"terminal.ansiBlack\": {\n\t\tindex: 0,\n\t\tdefaults: {\n\t\t\tlight: \"#000000\",\n\t\t\tdark: \"#000000\",\n\t\t\thcDark: \"#000000\",\n\t\t\thcLight: \"#292929\",\n\t\t},\n\t},\n\t\"terminal.ansiRed\": {\n\t\tindex: 1,\n\t\tdefaults: {\n\t\t\tlight: \"#cd3131\",\n\t\t\tdark: \"#cd3131\",\n\t\t\thcDark: \"#cd0000\",\n\t\t\thcLight: \"#cd3131\",\n\t\t},\n\t},\n\t\"terminal.ansiGreen\": {\n\t\tindex: 2,\n\t\tdefaults: {\n\t\t\tlight: \"#107C10\",\n\t\t\tdark: \"#0DBC79\",\n\t\t\thcDark: \"#00cd00\",\n\t\t\thcLight: \"#136C13\",\n\t\t},\n\t},\n\t\"terminal.ansiYellow\": {\n\t\tindex: 3,\n\t\tdefaults: {\n\t\t\tlight: \"#949800\",\n\t\t\tdark: \"#e5e510\",\n\t\t\thcDark: \"#cdcd00\",\n\t\t\thcLight: \"#949800\",\n\t\t},\n\t},\n\t\"terminal.ansiBlue\": {\n\t\tindex: 4,\n\t\tdefaults: {\n\t\t\tlight: \"#0451a5\",\n\t\t\tdark: \"#2472c8\",\n\t\t\thcDark: \"#0000ee\",\n\t\t\thcLight: \"#0451a5\",\n\t\t},\n\t},\n\t\"terminal.ansiMagenta\": {\n\t\tindex: 5,\n\t\tdefaults: {\n\t\t\tlight: \"#bc05bc\",\n\t\t\tdark: \"#bc3fbc\",\n\t\t\thcDark: \"#cd00cd\",\n\t\t\thcLight: \"#bc05bc\",\n\t\t},\n\t},\n\t\"terminal.ansiCyan\": {\n\t\tindex: 6,\n\t\tdefaults: {\n\t\t\tlight: \"#0598bc\",\n\t\t\tdark: \"#11a8cd\",\n\t\t\thcDark: \"#00cdcd\",\n\t\t\thcLight: \"#0598bc\",\n\t\t},\n\t},\n\t\"terminal.ansiWhite\": {\n\t\tindex: 7,\n\t\tdefaults: {\n\t\t\tlight: \"#555555\",\n\t\t\tdark: \"#e5e5e5\",\n\t\t\thcDark: \"#e5e5e5\",\n\t\t\thcLight: \"#555555\",\n\t\t},\n\t},\n\t\"terminal.ansiBrightBlack\": {\n\t\tindex: 8,\n\t\tdefaults: {\n\t\t\tlight: \"#666666\",\n\t\t\tdark: \"#666666\",\n\t\t\thcDark: \"#7f7f7f\",\n\t\t\thcLight: \"#666666\",\n\t\t},\n\t},\n\t\"terminal.ansiBrightRed\": {\n\t\tindex: 9,\n\t\tdefaults: {\n\t\t\tlight: \"#cd3131\",\n\t\t\tdark: \"#f14c4c\",\n\t\t\thcDark: \"#ff0000\",\n\t\t\thcLight: \"#cd3131\",\n\t\t},\n\t},\n\t\"terminal.ansiBrightGreen\": {\n\t\tindex: 10,\n\t\tdefaults: {\n\t\t\tlight: \"#14CE14\",\n\t\t\tdark: \"#23d18b\",\n\t\t\thcDark: \"#00ff00\",\n\t\t\thcLight: \"#00bc00\",\n\t\t},\n\t},\n\t\"terminal.ansiBrightYellow\": {\n\t\tindex: 11,\n\t\tdefaults: {\n\t\t\tlight: \"#b5ba00\",\n\t\t\tdark: \"#f5f543\",\n\t\t\thcDark: \"#ffff00\",\n\t\t\thcLight: \"#b5ba00\",\n\t\t},\n\t},\n\t\"terminal.ansiBrightBlue\": {\n\t\tindex: 12,\n\t\tdefaults: {\n\t\t\tlight: \"#0451a5\",\n\t\t\tdark: \"#3b8eea\",\n\t\t\thcDark: \"#5c5cff\",\n\t\t\thcLight: \"#0451a5\",\n\t\t},\n\t},\n\t\"terminal.ansiBrightMagenta\": {\n\t\tindex: 13,\n\t\tdefaults: {\n\t\t\tlight: \"#bc05bc\",\n\t\t\tdark: \"#d670d6\",\n\t\t\thcDark: \"#ff00ff\",\n\t\t\thcLight: \"#bc05bc\",\n\t\t},\n\t},\n\t\"terminal.ansiBrightCyan\": {\n\t\tindex: 14,\n\t\tdefaults: {\n\t\t\tlight: \"#0598bc\",\n\t\t\tdark: \"#29b8db\",\n\t\t\thcDark: \"#00ffff\",\n\t\t\thcLight: \"#0598bc\",\n\t\t},\n\t},\n\t\"terminal.ansiBrightWhite\": {\n\t\tindex: 15,\n\t\tdefaults: {\n\t\t\tlight: \"#a5a5a5\",\n\t\t\tdark: \"#e5e5e5\",\n\t\t\thcDark: \"#ffffff\",\n\t\t\thcLight: \"#a5a5a5\",\n\t\t},\n\t},\n};\n\nexport function registerColors(): void {\n\tfor (const id in ansiColorMap) {\n\t\tconst entry = ansiColorMap[id];\n\t\tconst colorName = id.substring(13);\n\t\tansiColorIdentifiers[entry.index] = registerColor(\n\t\t\tid,\n\t\t\tentry.defaults,\n\t\t\tnls.localize(\n\t\t\t\t\"terminal.ansiColor\",\n\t\t\t\t\"'{0}' ANSI color in the terminal.\",\n\t\t\t\tcolorName,\n\t\t\t),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
