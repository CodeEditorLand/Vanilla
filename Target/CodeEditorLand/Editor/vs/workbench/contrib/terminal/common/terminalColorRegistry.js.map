{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { editorOverviewRulerBorder } from '../../../../editor/common/core/editorColorRegistry.js';\nimport * as nls from '../../../../nls.js';\n\nimport { registerColor, ColorIdentifier, ColorDefaults, editorFindMatch, editorFindMatchHighlight, overviewRulerFindMatchForeground, editorSelectionBackground, transparent, editorHoverHighlight } from '../../../../platform/theme/common/colorRegistry.js';\nimport { EDITOR_DRAG_AND_DROP_BACKGROUND, PANEL_BORDER, TAB_ACTIVE_BORDER } from '../../../common/theme.js';\n\n/**\n * The color identifiers for the terminal's ansi colors. The index in the array corresponds to the index\n * of the color in the terminal color table.\n */\nexport const ansiColorIdentifiers: ColorIdentifier[] = [];\n\nexport const TERMINAL_BACKGROUND_COLOR = registerColor('terminal.background', null, nls.localize('terminal.background', 'The background color of the terminal, this allows coloring the terminal differently to the panel.'));\nexport const TERMINAL_FOREGROUND_COLOR = registerColor('terminal.foreground', {\n\tlight: '#333333',\n\tdark: '#CCCCCC',\n\thcDark: '#FFFFFF',\n\thcLight: '#292929'\n}, nls.localize('terminal.foreground', 'The foreground color of the terminal.'));\nexport const TERMINAL_CURSOR_FOREGROUND_COLOR = registerColor('terminalCursor.foreground', null, nls.localize('terminalCursor.foreground', 'The foreground color of the terminal cursor.'));\nexport const TERMINAL_CURSOR_BACKGROUND_COLOR = registerColor('terminalCursor.background', null, nls.localize('terminalCursor.background', 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const TERMINAL_SELECTION_BACKGROUND_COLOR = registerColor('terminal.selectionBackground', editorSelectionBackground, nls.localize('terminal.selectionBackground', 'The selection background color of the terminal.'));\nexport const TERMINAL_INACTIVE_SELECTION_BACKGROUND_COLOR = registerColor('terminal.inactiveSelectionBackground', {\n\tlight: transparent(TERMINAL_SELECTION_BACKGROUND_COLOR, 0.5),\n\tdark: transparent(TERMINAL_SELECTION_BACKGROUND_COLOR, 0.5),\n\thcDark: transparent(TERMINAL_SELECTION_BACKGROUND_COLOR, 0.7),\n\thcLight: transparent(TERMINAL_SELECTION_BACKGROUND_COLOR, 0.5)\n}, nls.localize('terminal.inactiveSelectionBackground', 'The selection background color of the terminal when it does not have focus.'));\nexport const TERMINAL_SELECTION_FOREGROUND_COLOR = registerColor('terminal.selectionForeground', {\n\tlight: null,\n\tdark: null,\n\thcDark: '#000000',\n\thcLight: '#ffffff'\n}, nls.localize('terminal.selectionForeground', 'The selection foreground color of the terminal. When this is null the selection foreground will be retained and have the minimum contrast ratio feature applied.'));\nexport const TERMINAL_COMMAND_DECORATION_DEFAULT_BACKGROUND_COLOR = registerColor('terminalCommandDecoration.defaultBackground', {\n\tlight: '#00000040',\n\tdark: '#ffffff40',\n\thcDark: '#ffffff80',\n\thcLight: '#00000040',\n}, nls.localize('terminalCommandDecoration.defaultBackground', 'The default terminal command decoration background color.'));\nexport const TERMINAL_COMMAND_DECORATION_SUCCESS_BACKGROUND_COLOR = registerColor('terminalCommandDecoration.successBackground', {\n\tdark: '#1B81A8',\n\tlight: '#2090D3',\n\thcDark: '#1B81A8',\n\thcLight: '#007100'\n}, nls.localize('terminalCommandDecoration.successBackground', 'The terminal command decoration background color for successful commands.'));\nexport const TERMINAL_COMMAND_DECORATION_ERROR_BACKGROUND_COLOR = registerColor('terminalCommandDecoration.errorBackground', {\n\tdark: '#F14C4C',\n\tlight: '#E51400',\n\thcDark: '#F14C4C',\n\thcLight: '#B5200D'\n}, nls.localize('terminalCommandDecoration.errorBackground', 'The terminal command decoration background color for error commands.'));\nexport const TERMINAL_OVERVIEW_RULER_CURSOR_FOREGROUND_COLOR = registerColor('terminalOverviewRuler.cursorForeground', '#A0A0A0CC', nls.localize('terminalOverviewRuler.cursorForeground', 'The overview ruler cursor color.'));\nexport const TERMINAL_BORDER_COLOR = registerColor('terminal.border', PANEL_BORDER, nls.localize('terminal.border', 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'));\nexport const TERMINAL_OVERVIEW_RULER_BORDER_COLOR = registerColor('terminalOverviewRuler.border', editorOverviewRulerBorder, nls.localize('terminalOverviewRuler.border', 'The overview ruler left-side border color.'));\nexport const TERMINAL_FIND_MATCH_BACKGROUND_COLOR = registerColor('terminal.findMatchBackground', {\n\tdark: editorFindMatch,\n\tlight: editorFindMatch,\n\t// Use regular selection background in high contrast with a thick border\n\thcDark: null,\n\thcLight: '#0F4A85'\n}, nls.localize('terminal.findMatchBackground', 'Color of the current search match in the terminal. The color must not be opaque so as not to hide underlying terminal content.'), true);\nexport const TERMINAL_HOVER_HIGHLIGHT_BACKGROUND_COLOR = registerColor('terminal.hoverHighlightBackground', transparent(editorHoverHighlight, 0.5), nls.localize('terminal.findMatchHighlightBorder', 'Border color of the other search matches in the terminal.'));\nexport const TERMINAL_FIND_MATCH_BORDER_COLOR = registerColor('terminal.findMatchBorder', {\n\tdark: null,\n\tlight: null,\n\thcDark: '#f38518',\n\thcLight: '#0F4A85'\n}, nls.localize('terminal.findMatchBorder', 'Border color of the current search match in the terminal.'));\nexport const TERMINAL_FIND_MATCH_HIGHLIGHT_BACKGROUND_COLOR = registerColor('terminal.findMatchHighlightBackground', {\n\tdark: editorFindMatchHighlight,\n\tlight: editorFindMatchHighlight,\n\thcDark: null,\n\thcLight: null\n}, nls.localize('terminal.findMatchHighlightBackground', 'Color of the other search matches in the terminal. The color must not be opaque so as not to hide underlying terminal content.'), true);\nexport const TERMINAL_FIND_MATCH_HIGHLIGHT_BORDER_COLOR = registerColor('terminal.findMatchHighlightBorder', {\n\tdark: null,\n\tlight: null,\n\thcDark: '#f38518',\n\thcLight: '#0F4A85'\n}, nls.localize('terminal.findMatchHighlightBorder', 'Border color of the other search matches in the terminal.'));\nexport const TERMINAL_OVERVIEW_RULER_FIND_MATCH_FOREGROUND_COLOR = registerColor('terminalOverviewRuler.findMatchForeground', {\n\tdark: overviewRulerFindMatchForeground,\n\tlight: overviewRulerFindMatchForeground,\n\thcDark: '#f38518',\n\thcLight: '#0F4A85'\n}, nls.localize('terminalOverviewRuler.findMatchHighlightForeground', 'Overview ruler marker color for find matches in the terminal.'));\nexport const TERMINAL_DRAG_AND_DROP_BACKGROUND = registerColor('terminal.dropBackground', EDITOR_DRAG_AND_DROP_BACKGROUND, nls.localize('terminal.dragAndDropBackground', \"Background color when dragging on top of terminals. The color should have transparency so that the terminal contents can still shine through.\"), true);\nexport const TERMINAL_TAB_ACTIVE_BORDER = registerColor('terminal.tab.activeBorder', TAB_ACTIVE_BORDER, nls.localize('terminal.tab.activeBorder', 'Border on the side of the terminal tab in the panel. This defaults to tab.activeBorder.'));\nexport const TERMINAL_INITIAL_HINT_FOREGROUND = registerColor('terminal.initialHintForeground', {\n\tdark: '#ffffff56',\n\tlight: '#0007',\n\thcDark: null,\n\thcLight: null\n}, nls.localize('terminalInitialHintForeground', 'Foreground color of the terminal initial hint.'));\n\nexport const ansiColorMap: { [key: string]: { index: number; defaults: ColorDefaults } } = {\n\t'terminal.ansiBlack': {\n\t\tindex: 0,\n\t\tdefaults: {\n\t\t\tlight: '#000000',\n\t\t\tdark: '#000000',\n\t\t\thcDark: '#000000',\n\t\t\thcLight: '#292929'\n\t\t}\n\t},\n\t'terminal.ansiRed': {\n\t\tindex: 1,\n\t\tdefaults: {\n\t\t\tlight: '#cd3131',\n\t\t\tdark: '#cd3131',\n\t\t\thcDark: '#cd0000',\n\t\t\thcLight: '#cd3131'\n\t\t}\n\t},\n\t'terminal.ansiGreen': {\n\t\tindex: 2,\n\t\tdefaults: {\n\t\t\tlight: '#107C10',\n\t\t\tdark: '#0DBC79',\n\t\t\thcDark: '#00cd00',\n\t\t\thcLight: '#136C13'\n\t\t}\n\t},\n\t'terminal.ansiYellow': {\n\t\tindex: 3,\n\t\tdefaults: {\n\t\t\tlight: '#949800',\n\t\t\tdark: '#e5e510',\n\t\t\thcDark: '#cdcd00',\n\t\t\thcLight: '#949800'\n\t\t}\n\t},\n\t'terminal.ansiBlue': {\n\t\tindex: 4,\n\t\tdefaults: {\n\t\t\tlight: '#0451a5',\n\t\t\tdark: '#2472c8',\n\t\t\thcDark: '#0000ee',\n\t\t\thcLight: '#0451a5'\n\t\t}\n\t},\n\t'terminal.ansiMagenta': {\n\t\tindex: 5,\n\t\tdefaults: {\n\t\t\tlight: '#bc05bc',\n\t\t\tdark: '#bc3fbc',\n\t\t\thcDark: '#cd00cd',\n\t\t\thcLight: '#bc05bc'\n\t\t}\n\t},\n\t'terminal.ansiCyan': {\n\t\tindex: 6,\n\t\tdefaults: {\n\t\t\tlight: '#0598bc',\n\t\t\tdark: '#11a8cd',\n\t\t\thcDark: '#00cdcd',\n\t\t\thcLight: '#0598bc'\n\t\t}\n\t},\n\t'terminal.ansiWhite': {\n\t\tindex: 7,\n\t\tdefaults: {\n\t\t\tlight: '#555555',\n\t\t\tdark: '#e5e5e5',\n\t\t\thcDark: '#e5e5e5',\n\t\t\thcLight: '#555555'\n\t\t}\n\t},\n\t'terminal.ansiBrightBlack': {\n\t\tindex: 8,\n\t\tdefaults: {\n\t\t\tlight: '#666666',\n\t\t\tdark: '#666666',\n\t\t\thcDark: '#7f7f7f',\n\t\t\thcLight: '#666666'\n\t\t}\n\t},\n\t'terminal.ansiBrightRed': {\n\t\tindex: 9,\n\t\tdefaults: {\n\t\t\tlight: '#cd3131',\n\t\t\tdark: '#f14c4c',\n\t\t\thcDark: '#ff0000',\n\t\t\thcLight: '#cd3131'\n\t\t}\n\t},\n\t'terminal.ansiBrightGreen': {\n\t\tindex: 10,\n\t\tdefaults: {\n\t\t\tlight: '#14CE14',\n\t\t\tdark: '#23d18b',\n\t\t\thcDark: '#00ff00',\n\t\t\thcLight: '#00bc00'\n\t\t}\n\t},\n\t'terminal.ansiBrightYellow': {\n\t\tindex: 11,\n\t\tdefaults: {\n\t\t\tlight: '#b5ba00',\n\t\t\tdark: '#f5f543',\n\t\t\thcDark: '#ffff00',\n\t\t\thcLight: '#b5ba00'\n\t\t}\n\t},\n\t'terminal.ansiBrightBlue': {\n\t\tindex: 12,\n\t\tdefaults: {\n\t\t\tlight: '#0451a5',\n\t\t\tdark: '#3b8eea',\n\t\t\thcDark: '#5c5cff',\n\t\t\thcLight: '#0451a5'\n\t\t}\n\t},\n\t'terminal.ansiBrightMagenta': {\n\t\tindex: 13,\n\t\tdefaults: {\n\t\t\tlight: '#bc05bc',\n\t\t\tdark: '#d670d6',\n\t\t\thcDark: '#ff00ff',\n\t\t\thcLight: '#bc05bc'\n\t\t}\n\t},\n\t'terminal.ansiBrightCyan': {\n\t\tindex: 14,\n\t\tdefaults: {\n\t\t\tlight: '#0598bc',\n\t\t\tdark: '#29b8db',\n\t\t\thcDark: '#00ffff',\n\t\t\thcLight: '#0598bc'\n\t\t}\n\t},\n\t'terminal.ansiBrightWhite': {\n\t\tindex: 15,\n\t\tdefaults: {\n\t\t\tlight: '#a5a5a5',\n\t\t\tdark: '#e5e5e5',\n\t\t\thcDark: '#ffffff',\n\t\t\thcLight: '#a5a5a5'\n\t\t}\n\t}\n};\n\nexport function registerColors(): void {\n\tfor (const id in ansiColorMap) {\n\t\tconst entry = ansiColorMap[id];\n\t\tconst colorName = id.substring(13);\n\t\tansiColorIdentifiers[entry.index] = registerColor(id, entry.defaults, nls.localize('terminal.ansiColor', '\\'{0}\\' ANSI color in the terminal.', colorName));\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
