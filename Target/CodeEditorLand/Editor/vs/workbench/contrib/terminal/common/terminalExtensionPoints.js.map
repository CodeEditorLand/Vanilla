{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/common/terminalExtensionPoints.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extensionsRegistry from '../../../services/extensions/common/extensionsRegistry.js';\nimport { terminalContributionsDescriptor } from './terminal.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IExtensionTerminalProfile, ITerminalContributions, ITerminalProfileContribution } from '../../../../platform/terminal/common/terminal.js';\nimport { URI } from '../../../../base/common/uri.js';\n\n// terminal extension point\nconst terminalsExtPoint = extensionsRegistry.ExtensionsRegistry.registerExtensionPoint<ITerminalContributions>(terminalContributionsDescriptor);\n\nexport interface ITerminalContributionService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly terminalProfiles: ReadonlyArray<IExtensionTerminalProfile>;\n}\n\nexport const ITerminalContributionService = createDecorator<ITerminalContributionService>('terminalContributionsService');\n\nexport class TerminalContributionService implements ITerminalContributionService {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _terminalProfiles: ReadonlyArray<IExtensionTerminalProfile> = [];\n\tget terminalProfiles() { return this._terminalProfiles; }\n\n\tconstructor() {\n\t\tterminalsExtPoint.setHandler(contributions => {\n\t\t\tthis._terminalProfiles = contributions.map(c => {\n\t\t\t\treturn c.value?.profiles?.filter(p => hasValidTerminalIcon(p)).map(e => {\n\t\t\t\t\treturn { ...e, extensionIdentifier: c.description.identifier.value };\n\t\t\t\t}) || [];\n\t\t\t}).flat();\n\t\t});\n\t}\n}\n\nfunction hasValidTerminalIcon(profile: ITerminalProfileContribution): boolean {\n\treturn !profile.icon ||\n\t\t(\n\t\t\ttypeof profile.icon === 'string' ||\n\t\t\tURI.isUri(profile.icon) ||\n\t\t\t(\n\t\t\t\t'light' in profile.icon && 'dark' in profile.icon &&\n\t\t\t\tURI.isUri(profile.icon.light) && URI.isUri(profile.icon.dark)\n\t\t\t)\n\t\t);\n}\n"],
  "mappings": ";;AAKA,YAAY,wBAAwB;AACpC,SAAS,uCAAuC;AAChD,SAAS,uBAAuB;AAChC,SAAS,2BAA2B,wBAAwB,oCAAoC;AAChG,SAAS,WAAW;AAGpB,MAAM,oBAAoB,mBAAmB,mBAAmB,uBAA+C,+BAA+B;AAQvI,MAAM,+BAA+B,gBAA8C,8BAA8B;AAEjH,MAAM,4BAAoE;AAAA,EAtBjF,OAsBiF;AAAA;AAAA;AAAA,EAGxE,oBAA8D,CAAC;AAAA,EACvE,IAAI,mBAAmB;AAAE,WAAO,KAAK;AAAA,EAAmB;AAAA,EAExD,cAAc;AACb,sBAAkB,WAAW,mBAAiB;AAC7C,WAAK,oBAAoB,cAAc,IAAI,OAAK;AAC/C,eAAO,EAAE,OAAO,UAAU,OAAO,OAAK,qBAAqB,CAAC,CAAC,EAAE,IAAI,OAAK;AACvE,iBAAO,EAAE,GAAG,GAAG,qBAAqB,EAAE,YAAY,WAAW,MAAM;AAAA,QACpE,CAAC,KAAK,CAAC;AAAA,MACR,CAAC,EAAE,KAAK;AAAA,IACT,CAAC;AAAA,EACF;AACD;AAEA,SAAS,qBAAqB,SAAgD;AAC7E,SAAO,CAAC,QAAQ,SAEd,OAAO,QAAQ,SAAS,YACxB,IAAI,MAAM,QAAQ,IAAI,KAErB,WAAW,QAAQ,QAAQ,UAAU,QAAQ,QAC7C,IAAI,MAAM,QAAQ,KAAK,KAAK,KAAK,IAAI,MAAM,QAAQ,KAAK,IAAI;AAGhE;AAVS;",
  "names": []
}
