{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/common/terminalExtensionPoints.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tIExtensionTerminalProfile,\n\tITerminalContributions,\n\tITerminalProfileContribution,\n} from \"../../../../platform/terminal/common/terminal.js\";\nimport * as extensionsRegistry from \"../../../services/extensions/common/extensionsRegistry.js\";\nimport { terminalContributionsDescriptor } from \"./terminal.js\";\n\n// terminal extension point\nconst terminalsExtPoint =\n\textensionsRegistry.ExtensionsRegistry.registerExtensionPoint<ITerminalContributions>(\n\t\tterminalContributionsDescriptor,\n\t);\n\nexport interface ITerminalContributionService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly terminalProfiles: ReadonlyArray<IExtensionTerminalProfile>;\n}\n\nexport const ITerminalContributionService =\n\tcreateDecorator<ITerminalContributionService>(\n\t\t\"terminalContributionsService\",\n\t);\n\nexport class TerminalContributionService\n\timplements ITerminalContributionService\n{\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _terminalProfiles: ReadonlyArray<IExtensionTerminalProfile> = [];\n\tget terminalProfiles() {\n\t\treturn this._terminalProfiles;\n\t}\n\n\tconstructor() {\n\t\tterminalsExtPoint.setHandler((contributions) => {\n\t\t\tthis._terminalProfiles = contributions.flatMap((c) => {\n\t\t\t\treturn (\n\t\t\t\t\tc.value?.profiles\n\t\t\t\t\t\t?.filter((p) => hasValidTerminalIcon(p))\n\t\t\t\t\t\t.map((e) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...e,\n\t\t\t\t\t\t\t\textensionIdentifier:\n\t\t\t\t\t\t\t\t\tc.description.identifier.value,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}) || []\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n}\n\nfunction hasValidTerminalIcon(profile: ITerminalProfileContribution): boolean {\n\treturn (\n\t\t!profile.icon ||\n\t\ttypeof profile.icon === \"string\" || URI.isUri(profile.icon) ||\n\t\t(\"light\" in profile.icon &&\n\t\t\t\"dark\" in profile.icon &&\n\t\t\tURI.isUri(profile.icon.light) &&\n\t\t\tURI.isUri(profile.icon.dark))\n\t);\n}\n"],
  "mappings": ";;AAKA,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAMhC,YAAY,wBAAwB;AACpC,SAAS,uCAAuC;AAGhD,MAAM,oBACL,mBAAmB,mBAAmB;AAAA,EACrC;AACD;AAQM,MAAM,+BACZ;AAAA,EACC;AACD;AAEM,MAAM,4BAEb;AAAA,EAlCA,OAkCA;AAAA;AAAA;AAAA,EAGS,oBAA8D,CAAC;AAAA,EACvE,IAAI,mBAAmB;AACtB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,cAAc;AACb,sBAAkB,WAAW,CAAC,kBAAkB;AAC/C,WAAK,oBAAoB,cAAc,QAAQ,CAAC,MAAM;AACrD,eACC,EAAE,OAAO,UACN,OAAO,CAAC,MAAM,qBAAqB,CAAC,CAAC,EACtC,IAAI,CAAC,MAAM;AACX,iBAAO;AAAA,YACN,GAAG;AAAA,YACH,qBACC,EAAE,YAAY,WAAW;AAAA,UAC3B;AAAA,QACD,CAAC,KAAK,CAAC;AAAA,MAEV,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AACD;AAEA,SAAS,qBAAqB,SAAgD;AAC7E,SACC,CAAC,QAAQ,QACT,OAAO,QAAQ,SAAS,YAAY,IAAI,MAAM,QAAQ,IAAI,KACzD,WAAW,QAAQ,QACnB,UAAU,QAAQ,QAClB,IAAI,MAAM,QAAQ,KAAK,KAAK,KAC5B,IAAI,MAAM,QAAQ,KAAK,IAAI;AAE9B;AATS;",
  "names": []
}
