{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/common/environmentVariableService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport { debounce, throttle } from '../../../../base/common/decorators.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { MergedEnvironmentVariableCollection } from '../../../../platform/terminal/common/environmentVariableCollection.js';\nimport { deserializeEnvironmentDescriptionMap, deserializeEnvironmentVariableCollection, serializeEnvironmentDescriptionMap, serializeEnvironmentVariableCollection } from '../../../../platform/terminal/common/environmentVariableShared.js';\nimport { IEnvironmentVariableCollectionWithPersistence, IEnvironmentVariableService } from './environmentVariable.js';\nimport { TerminalStorageKeys } from './terminalStorageKeys.js';\nimport { IMergedEnvironmentVariableCollection, ISerializableEnvironmentDescriptionMap, ISerializableEnvironmentVariableCollection } from '../../../../platform/terminal/common/environmentVariable.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\n\ninterface ISerializableExtensionEnvironmentVariableCollection {\n\textensionIdentifier: string;\n\tcollection: ISerializableEnvironmentVariableCollection;\n\tdescription?: ISerializableEnvironmentDescriptionMap;\n}\n\n/**\n * Tracks and persists environment variable collections as defined by extensions.\n */\nexport class EnvironmentVariableService extends Disposable implements IEnvironmentVariableService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tcollections: Map<string, IEnvironmentVariableCollectionWithPersistence> = new Map();\n\tmergedCollection: IMergedEnvironmentVariableCollection;\n\n\tprivate readonly _onDidChangeCollections = this._register(new Emitter<IMergedEnvironmentVariableCollection>());\n\tget onDidChangeCollections(): Event<IMergedEnvironmentVariableCollection> { return this._onDidChangeCollections.event; }\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IStorageService private readonly _storageService: IStorageService\n\t) {\n\t\tsuper();\n\n\t\tthis._storageService.remove(TerminalStorageKeys.DeprecatedEnvironmentVariableCollections, StorageScope.WORKSPACE);\n\t\tconst serializedPersistedCollections = this._storageService.get(TerminalStorageKeys.EnvironmentVariableCollections, StorageScope.WORKSPACE);\n\t\tif (serializedPersistedCollections) {\n\t\t\tconst collectionsJson: ISerializableExtensionEnvironmentVariableCollection[] = JSON.parse(serializedPersistedCollections);\n\t\t\tcollectionsJson.forEach(c => this.collections.set(c.extensionIdentifier, {\n\t\t\t\tpersistent: true,\n\t\t\t\tmap: deserializeEnvironmentVariableCollection(c.collection),\n\t\t\t\tdescriptionMap: deserializeEnvironmentDescriptionMap(c.description)\n\t\t\t}));\n\n\t\t\t// Asynchronously invalidate collections where extensions have been uninstalled, this is\n\t\t\t// async to avoid making all functions on the service synchronous and because extensions\n\t\t\t// being uninstalled is rare.\n\t\t\tthis._invalidateExtensionCollections();\n\t\t}\n\t\tthis.mergedCollection = this._resolveMergedCollection();\n\n\t\t// Listen for uninstalled/disabled extensions\n\t\tthis._register(this._extensionService.onDidChangeExtensions(() => this._invalidateExtensionCollections()));\n\t}\n\n\tset(extensionIdentifier: string, collection: IEnvironmentVariableCollectionWithPersistence): void {\n\t\tthis.collections.set(extensionIdentifier, collection);\n\t\tthis._updateCollections();\n\t}\n\n\tdelete(extensionIdentifier: string): void {\n\t\tthis.collections.delete(extensionIdentifier);\n\t\tthis._updateCollections();\n\t}\n\n\tprivate _updateCollections(): void {\n\t\tthis._persistCollectionsEventually();\n\t\tthis.mergedCollection = this._resolveMergedCollection();\n\t\tthis._notifyCollectionUpdatesEventually();\n\t}\n\n\t@throttle(1000)\n\tprivate _persistCollectionsEventually(): void {\n\t\tthis._persistCollections();\n\t}\n\n\tprotected _persistCollections(): void {\n\t\tconst collectionsJson: ISerializableExtensionEnvironmentVariableCollection[] = [];\n\t\tthis.collections.forEach((collection, extensionIdentifier) => {\n\t\t\tif (collection.persistent) {\n\t\t\t\tcollectionsJson.push({\n\t\t\t\t\textensionIdentifier,\n\t\t\t\t\tcollection: serializeEnvironmentVariableCollection(this.collections.get(extensionIdentifier)!.map),\n\t\t\t\t\tdescription: serializeEnvironmentDescriptionMap(collection.descriptionMap)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tconst stringifiedJson = JSON.stringify(collectionsJson);\n\t\tthis._storageService.store(TerminalStorageKeys.EnvironmentVariableCollections, stringifiedJson, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\t@debounce(1000)\n\tprivate _notifyCollectionUpdatesEventually(): void {\n\t\tthis._notifyCollectionUpdates();\n\t}\n\n\tprotected _notifyCollectionUpdates(): void {\n\t\tthis._onDidChangeCollections.fire(this.mergedCollection);\n\t}\n\n\tprivate _resolveMergedCollection(): IMergedEnvironmentVariableCollection {\n\t\treturn new MergedEnvironmentVariableCollection(this.collections);\n\t}\n\n\tprivate async _invalidateExtensionCollections(): Promise<void> {\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\t\tconst registeredExtensions = this._extensionService.extensions;\n\t\tlet changes = false;\n\t\tthis.collections.forEach((_, extensionIdentifier) => {\n\t\t\tconst isExtensionRegistered = registeredExtensions.some(r => r.identifier.value === extensionIdentifier);\n\t\t\tif (!isExtensionRegistered) {\n\t\t\t\tthis.collections.delete(extensionIdentifier);\n\t\t\t\tchanges = true;\n\t\t\t}\n\t\t});\n\t\tif (changes) {\n\t\t\tthis._updateCollections();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
