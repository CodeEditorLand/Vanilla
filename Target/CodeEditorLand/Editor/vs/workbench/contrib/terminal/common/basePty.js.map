{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/common/basePty.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { mark } from \"../../../../base/common/performance.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type {\n\tIPtyHostProcessReplayEvent,\n\tISerializedCommandDetectionCapability,\n} from \"../../../../platform/terminal/common/capabilities/capabilities.js\";\nimport {\n\ttype IProcessDataEvent,\n\ttype IProcessProperty,\n\ttype IProcessPropertyMap,\n\ttype IProcessReadyEvent,\n\ttype ITerminalChildProcess,\n\tProcessPropertyType,\n} from \"../../../../platform/terminal/common/terminal.js\";\n\n/**\n * Responsible for establishing and maintaining a connection with an existing terminal process\n * created on the local pty host.\n */\nexport abstract class BasePty\n\textends Disposable\n\timplements Partial<ITerminalChildProcess>\n{\n\tprotected readonly _properties: IProcessPropertyMap = {\n\t\tcwd: \"\",\n\t\tinitialCwd: \"\",\n\t\tfixedDimensions: { cols: undefined, rows: undefined },\n\t\ttitle: \"\",\n\t\tshellType: undefined,\n\t\thasChildProcesses: true,\n\t\tresolvedShellLaunchConfig: {},\n\t\toverrideDimensions: undefined,\n\t\tfailedShellIntegrationActivation: false,\n\t\tusedShellIntegrationInjection: undefined,\n\t};\n\tprotected readonly _lastDimensions: { cols: number; rows: number } = {\n\t\tcols: -1,\n\t\trows: -1,\n\t};\n\tprotected _inReplay = false;\n\n\tprotected readonly _onProcessData = this._register(\n\t\tnew Emitter<IProcessDataEvent | string>(),\n\t);\n\treadonly onProcessData = this._onProcessData.event;\n\tprotected readonly _onProcessReplayComplete = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onProcessReplayComplete = this._onProcessReplayComplete.event;\n\tprotected readonly _onProcessReady = this._register(\n\t\tnew Emitter<IProcessReadyEvent>(),\n\t);\n\treadonly onProcessReady = this._onProcessReady.event;\n\tprotected readonly _onDidChangeProperty = this._register(\n\t\tnew Emitter<IProcessProperty<any>>(),\n\t);\n\treadonly onDidChangeProperty = this._onDidChangeProperty.event;\n\tprotected readonly _onProcessExit = this._register(\n\t\tnew Emitter<number | undefined>(),\n\t);\n\treadonly onProcessExit = this._onProcessExit.event;\n\tprotected readonly _onRestoreCommands = this._register(\n\t\tnew Emitter<ISerializedCommandDetectionCapability>(),\n\t);\n\treadonly onRestoreCommands = this._onRestoreCommands.event;\n\n\tconstructor(\n\t\treadonly id: number,\n\t\treadonly shouldPersist: boolean,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync getInitialCwd(): Promise<string> {\n\t\treturn this._properties.initialCwd;\n\t}\n\n\tasync getCwd(): Promise<string> {\n\t\treturn this._properties.cwd || this._properties.initialCwd;\n\t}\n\n\thandleData(e: string | IProcessDataEvent) {\n\t\tthis._onProcessData.fire(e);\n\t}\n\thandleExit(e: number | undefined) {\n\t\tthis._onProcessExit.fire(e);\n\t}\n\thandleReady(e: IProcessReadyEvent) {\n\t\tthis._onProcessReady.fire(e);\n\t}\n\thandleDidChangeProperty({ type, value }: IProcessProperty<any>) {\n\t\tswitch (type) {\n\t\t\tcase ProcessPropertyType.Cwd:\n\t\t\t\tthis._properties.cwd = value;\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.InitialCwd:\n\t\t\t\tthis._properties.initialCwd = value;\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.ResolvedShellLaunchConfig:\n\t\t\t\tif (value.cwd && typeof value.cwd !== \"string\") {\n\t\t\t\t\tvalue.cwd = URI.revive(value.cwd);\n\t\t\t\t}\n\t\t}\n\t\tthis._onDidChangeProperty.fire({ type, value });\n\t}\n\tasync handleReplay(e: IPtyHostProcessReplayEvent) {\n\t\tmark(`code/terminal/willHandleReplay/${this.id}`);\n\t\ttry {\n\t\t\tthis._inReplay = true;\n\t\t\tfor (const innerEvent of e.events) {\n\t\t\t\tif (innerEvent.cols !== 0 || innerEvent.rows !== 0) {\n\t\t\t\t\t// never override with 0x0 as that is a marker for an unknown initial size\n\t\t\t\t\tthis._onDidChangeProperty.fire({\n\t\t\t\t\t\ttype: ProcessPropertyType.OverrideDimensions,\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\tcols: innerEvent.cols,\n\t\t\t\t\t\t\trows: innerEvent.rows,\n\t\t\t\t\t\t\tforceExactSize: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconst e: IProcessDataEvent = {\n\t\t\t\t\tdata: innerEvent.data,\n\t\t\t\t\ttrackCommit: true,\n\t\t\t\t};\n\t\t\t\tthis._onProcessData.fire(e);\n\t\t\t\tawait e.writePromise;\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._inReplay = false;\n\t\t}\n\n\t\tif (e.commands) {\n\t\t\tthis._onRestoreCommands.fire(e.commands);\n\t\t}\n\n\t\t// remove size override\n\t\tthis._onDidChangeProperty.fire({\n\t\t\ttype: ProcessPropertyType.OverrideDimensions,\n\t\t\tvalue: undefined,\n\t\t});\n\n\t\tmark(`code/terminal/didHandleReplay/${this.id}`);\n\t\tthis._onProcessReplayComplete.fire();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["e"]
}
