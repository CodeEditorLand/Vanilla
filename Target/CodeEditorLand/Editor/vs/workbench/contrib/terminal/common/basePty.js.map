{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/terminal/common/basePty.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { mark } from '../../../../base/common/performance.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport type { IPtyHostProcessReplayEvent, ISerializedCommandDetectionCapability } from '../../../../platform/terminal/common/capabilities/capabilities.js';\nimport { ProcessPropertyType, type IProcessDataEvent, type IProcessProperty, type IProcessPropertyMap, type IProcessReadyEvent, type ITerminalChildProcess } from '../../../../platform/terminal/common/terminal.js';\n\n/**\n * Responsible for establishing and maintaining a connection with an existing terminal process\n * created on the local pty host.\n */\nexport abstract class BasePty extends Disposable implements Partial<ITerminalChildProcess> {\n\tprotected readonly _properties: IProcessPropertyMap = {\n\t\tcwd: '',\n\t\tinitialCwd: '',\n\t\tfixedDimensions: { cols: undefined, rows: undefined },\n\t\ttitle: '',\n\t\tshellType: undefined,\n\t\thasChildProcesses: true,\n\t\tresolvedShellLaunchConfig: {},\n\t\toverrideDimensions: undefined,\n\t\tfailedShellIntegrationActivation: false,\n\t\tusedShellIntegrationInjection: undefined\n\t};\n\tprotected readonly _lastDimensions: { cols: number; rows: number } = { cols: -1, rows: -1 };\n\tprotected _inReplay = false;\n\n\tprotected readonly _onProcessData = this._register(new Emitter<IProcessDataEvent | string>());\n\treadonly onProcessData = this._onProcessData.event;\n\tprotected readonly _onProcessReplayComplete = this._register(new Emitter<void>());\n\treadonly onProcessReplayComplete = this._onProcessReplayComplete.event;\n\tprotected readonly _onProcessReady = this._register(new Emitter<IProcessReadyEvent>());\n\treadonly onProcessReady = this._onProcessReady.event;\n\tprotected readonly _onDidChangeProperty = this._register(new Emitter<IProcessProperty<any>>());\n\treadonly onDidChangeProperty = this._onDidChangeProperty.event;\n\tprotected readonly _onProcessExit = this._register(new Emitter<number | undefined>());\n\treadonly onProcessExit = this._onProcessExit.event;\n\tprotected readonly _onRestoreCommands = this._register(new Emitter<ISerializedCommandDetectionCapability>());\n\treadonly onRestoreCommands = this._onRestoreCommands.event;\n\n\tconstructor(\n\t\treadonly id: number,\n\t\treadonly shouldPersist: boolean\n\t) {\n\t\tsuper();\n\t}\n\n\tasync getInitialCwd(): Promise<string> {\n\t\treturn this._properties.initialCwd;\n\t}\n\n\tasync getCwd(): Promise<string> {\n\t\treturn this._properties.cwd || this._properties.initialCwd;\n\t}\n\n\thandleData(e: string | IProcessDataEvent) {\n\t\tthis._onProcessData.fire(e);\n\t}\n\thandleExit(e: number | undefined) {\n\t\tthis._onProcessExit.fire(e);\n\t}\n\thandleReady(e: IProcessReadyEvent) {\n\t\tthis._onProcessReady.fire(e);\n\t}\n\thandleDidChangeProperty({ type, value }: IProcessProperty<any>) {\n\t\tswitch (type) {\n\t\t\tcase ProcessPropertyType.Cwd:\n\t\t\t\tthis._properties.cwd = value;\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.InitialCwd:\n\t\t\t\tthis._properties.initialCwd = value;\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.ResolvedShellLaunchConfig:\n\t\t\t\tif (value.cwd && typeof value.cwd !== 'string') {\n\t\t\t\t\tvalue.cwd = URI.revive(value.cwd);\n\t\t\t\t}\n\t\t}\n\t\tthis._onDidChangeProperty.fire({ type, value });\n\t}\n\tasync handleReplay(e: IPtyHostProcessReplayEvent) {\n\t\tmark(`code/terminal/willHandleReplay/${this.id}`);\n\t\ttry {\n\t\t\tthis._inReplay = true;\n\t\t\tfor (const innerEvent of e.events) {\n\t\t\t\tif (innerEvent.cols !== 0 || innerEvent.rows !== 0) {\n\t\t\t\t\t// never override with 0x0 as that is a marker for an unknown initial size\n\t\t\t\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.OverrideDimensions, value: { cols: innerEvent.cols, rows: innerEvent.rows, forceExactSize: true } });\n\t\t\t\t}\n\t\t\t\tconst e: IProcessDataEvent = { data: innerEvent.data, trackCommit: true };\n\t\t\t\tthis._onProcessData.fire(e);\n\t\t\t\tawait e.writePromise;\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._inReplay = false;\n\t\t}\n\n\t\tif (e.commands) {\n\t\t\tthis._onRestoreCommands.fire(e.commands);\n\t\t}\n\n\t\t// remove size override\n\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.OverrideDimensions, value: undefined });\n\n\t\tmark(`code/terminal/didHandleReplay/${this.id}`);\n\t\tthis._onProcessReplayComplete.fire();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["e"]
}
