var k=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var _=(m,e,r,t)=>{for(var i=t>1?void 0:t?w(e,r):e,l=m.length-1,c;l>=0;l--)(c=m[l])&&(i=(t?c(e,r,i):c(i))||i);return t&&i&&k(e,r,i),i},s=(m,e)=>(r,t)=>e(r,t,m);import{Schemas as P}from"../../../../../base/common/network.js";import{ILabelService as D}from"../../../../../platform/label/common/label.js";import{IRemoteAuthorityResolverService as A}from"../../../../../platform/remote/common/remoteAuthorityResolver.js";import{serializeEnvironmentDescriptionMap as L,serializeEnvironmentVariableCollection as x}from"../../../../../platform/terminal/common/environmentVariableShared.js";import{ITerminalLogService as V}from"../../../../../platform/terminal/common/terminal.js";import{IWorkspaceContextService as O}from"../../../../../platform/workspace/common/workspace.js";import{EditorResourceAccessor as H,SideBySideEditor as M}from"../../../../common/editor.js";import{IWorkbenchConfigurationService as W}from"../../../../services/configuration/common/configuration.js";import{IConfigurationResolverService as q}from"../../../../services/configurationResolver/common/configurationResolver.js";import{IEditorService as F}from"../../../../services/editor/common/editorService.js";import{IEnvironmentVariableService as G}from"../environmentVariable.js";import{RemoteTerminalChannelEvent as o,RemoteTerminalChannelRequest as n}from"./terminal.js";const re="remoteterminal";let p=class{constructor(e,r,t,i,l,c,y,I,v,b){this._remoteAuthority=e;this._channel=r;this._configurationService=t;this._workspaceContextService=i;this._resolverService=l;this._environmentVariableService=c;this._remoteAuthorityResolverService=y;this._logService=I;this._editorService=v;this._labelService=b}get onPtyHostExit(){return this._channel.listen(o.OnPtyHostExitEvent)}get onPtyHostStart(){return this._channel.listen(o.OnPtyHostStartEvent)}get onPtyHostUnresponsive(){return this._channel.listen(o.OnPtyHostUnresponsiveEvent)}get onPtyHostResponsive(){return this._channel.listen(o.OnPtyHostResponsiveEvent)}get onPtyHostRequestResolveVariables(){return this._channel.listen(o.OnPtyHostRequestResolveVariablesEvent)}get onProcessData(){return this._channel.listen(o.OnProcessDataEvent)}get onProcessExit(){return this._channel.listen(o.OnProcessExitEvent)}get onProcessReady(){return this._channel.listen(o.OnProcessReadyEvent)}get onProcessReplay(){return this._channel.listen(o.OnProcessReplayEvent)}get onProcessOrphanQuestion(){return this._channel.listen(o.OnProcessOrphanQuestion)}get onExecuteCommand(){return this._channel.listen(o.OnExecuteCommand)}get onDidRequestDetach(){return this._channel.listen(o.OnDidRequestDetach)}get onDidChangeProperty(){return this._channel.listen(o.OnDidChangeProperty)}restartPtyHost(){return this._channel.call(n.RestartPtyHost,[])}async createProcess(e,r,t,i,l,c,y,I){await this._configurationService.whenRemoteConfigurationLoaded();const v=Object.create(null),b=t?this._workspaceContextService.getWorkspaceFolder(t)??void 0:void 0;let d;try{d=(await this._resolverService.resolveAnyMap(b,{shellLaunchConfig:e,configuration:r})).resolvedVariables}catch(a){this._logService.error(a)}if(d)for(const[a,u]of d.entries())(/^config:/.test(a)||a==="selectedText"||a==="lineNumber")&&(v[a]=u);const g=[];for(const[a,u]of this._environmentVariableService.collections.entries())g.push([a,x(u.map),L(u.descriptionMap)]);const f=await this._remoteAuthorityResolverService.resolveAuthority(this._remoteAuthority),E=f.options&&f.options.extensionHostEnv,h=this._workspaceContextService.getWorkspace(),S=h.folders,R=t?this._workspaceContextService.getWorkspaceFolder(t):null,T=H.getOriginalUri(this._editorService.activeEditor,{supportSideBySide:M.PRIMARY,filterByScheme:[P.file,P.vscodeUserData,P.vscodeRemote]}),C={configuration:r,resolvedVariables:v,envVariableCollections:g,shellLaunchConfig:e,workspaceId:h.id,workspaceName:this._labelService.getWorkspaceLabel(h),workspaceFolders:S,activeWorkspaceFolder:R,activeFileResource:T,shouldPersistTerminal:l,options:i,cols:c,rows:y,unicodeVersion:I,resolverEnv:E};return await this._channel.call(n.CreateProcess,C)}requestDetachInstance(e,r){return this._channel.call(n.RequestDetachInstance,[e,r])}acceptDetachInstanceReply(e,r){return this._channel.call(n.AcceptDetachInstanceReply,[e,r])}attachToProcess(e){return this._channel.call(n.AttachToProcess,[e])}detachFromProcess(e,r){return this._channel.call(n.DetachFromProcess,[e,r])}listProcesses(){return this._channel.call(n.ListProcesses)}getLatency(){return this._channel.call(n.GetLatency)}getPerformanceMarks(){return this._channel.call(n.GetPerformanceMarks)}reduceConnectionGraceTime(){return this._channel.call(n.ReduceConnectionGraceTime)}processBinary(e,r){return this._channel.call(n.ProcessBinary,[e,r])}start(e){return this._channel.call(n.Start,[e])}input(e,r){return this._channel.call(n.Input,[e,r])}acknowledgeDataEvent(e,r){return this._channel.call(n.AcknowledgeDataEvent,[e,r])}setUnicodeVersion(e,r){return this._channel.call(n.SetUnicodeVersion,[e,r])}shutdown(e,r){return this._channel.call(n.Shutdown,[e,r])}resize(e,r,t){return this._channel.call(n.Resize,[e,r,t])}clearBuffer(e){return this._channel.call(n.ClearBuffer,[e])}getInitialCwd(e){return this._channel.call(n.GetInitialCwd,[e])}getCwd(e){return this._channel.call(n.GetCwd,[e])}orphanQuestionReply(e){return this._channel.call(n.OrphanQuestionReply,[e])}sendCommandResult(e,r,t){return this._channel.call(n.SendCommandResult,[e,r,t])}freePortKillProcess(e){return this._channel.call(n.FreePortKillProcess,[e])}installAutoReply(e,r){return this._channel.call(n.InstallAutoReply,[e,r])}uninstallAllAutoReplies(){return this._channel.call(n.UninstallAllAutoReplies,[])}getDefaultSystemShell(e){return this._channel.call(n.GetDefaultSystemShell,[e])}getProfiles(e,r,t){return this._channel.call(n.GetProfiles,[this._workspaceContextService.getWorkspace().id,e,r,t])}acceptPtyHostResolvedVariables(e,r){return this._channel.call(n.AcceptPtyHostResolvedVariables,[e,r])}getEnvironment(){return this._channel.call(n.GetEnvironment)}getWslPath(e,r){return this._channel.call(n.GetWslPath,[e,r])}setTerminalLayoutInfo(e){const t={workspaceId:this._workspaceContextService.getWorkspace().id,tabs:e?e.tabs:[]};return this._channel.call(n.SetTerminalLayoutInfo,t)}updateTitle(e,r,t){return this._channel.call(n.UpdateTitle,[e,r,t])}updateIcon(e,r,t,i){return this._channel.call(n.UpdateIcon,[e,r,t,i])}refreshProperty(e,r){return this._channel.call(n.RefreshProperty,[e,r])}updateProperty(e,r,t){return this._channel.call(n.UpdateProperty,[e,r,t])}getTerminalLayoutInfo(){const r={workspaceId:this._workspaceContextService.getWorkspace().id};return this._channel.call(n.GetTerminalLayoutInfo,r)}reviveTerminalProcesses(e,r,t){return this._channel.call(n.ReviveTerminalProcesses,[e,r,t])}getRevivedPtyNewId(e){return this._channel.call(n.GetRevivedPtyNewId,[e])}serializeTerminalState(e){return this._channel.call(n.SerializeTerminalState,[e])}};p=_([s(2,W),s(3,O),s(4,q),s(5,G),s(6,A),s(7,V),s(8,F),s(9,D)],p);export{re as REMOTE_TERMINAL_CHANNEL_NAME,p as RemoteTerminalChannelClient};
