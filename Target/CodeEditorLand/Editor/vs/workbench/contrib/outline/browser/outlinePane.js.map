{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/outline/browser/outlinePane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./outlinePane.css\";\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { ProgressBar } from \"../../../../base/browser/ui/progressbar/progressbar.js\";\nimport {\n\tAbstractTreeViewState,\n\ttype IAbstractTreeViewState,\n\tTreeFindMode,\n} from \"../../../../base/browser/ui/tree/abstractTree.js\";\nimport type { ITreeSorter } from \"../../../../base/browser/ui/tree/tree.js\";\nimport { TimeoutTimer, timeout } from \"../../../../base/common/async.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport type { FuzzyScore } from \"../../../../base/common/filters.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { LRUCache } from \"../../../../base/common/map.js\";\nimport { basename } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { WorkbenchDataTree } from \"../../../../platform/list/browser/listService.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { defaultProgressBarStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { ViewPane } from \"../../../browser/parts/views/viewPane.js\";\nimport type { IViewletViewOptions } from \"../../../browser/parts/views/viewsViewlet.js\";\nimport {\n\tEditorResourceAccessor,\n\ttype IEditorPane,\n} from \"../../../common/editor.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\ttype IOutline,\n\ttype IOutlineComparator,\n\tIOutlineService,\n\tOutlineTarget,\n} from \"../../../services/outline/browser/outline.js\";\nimport {\n\ttype IOutlinePane,\n\tOutlineSortOrder,\n\tctxAllCollapsed,\n\tctxFilterOnType,\n\tctxFollowsCursor,\n\tctxSortMode,\n} from \"./outline.js\";\nimport { OutlineViewState } from \"./outlineViewState.js\";\n\nclass OutlineTreeSorter<E> implements ITreeSorter<E> {\n\tconstructor(\n\t\tprivate _comparator: IOutlineComparator<E>,\n\t\tpublic order: OutlineSortOrder,\n\t) {}\n\n\tcompare(a: E, b: E): number {\n\t\tif (this.order === OutlineSortOrder.ByKind) {\n\t\t\treturn this._comparator.compareByType(a, b);\n\t\t} else if (this.order === OutlineSortOrder.ByName) {\n\t\t\treturn this._comparator.compareByName(a, b);\n\t\t} else {\n\t\t\treturn this._comparator.compareByPosition(a, b);\n\t\t}\n\t}\n}\n\nexport class OutlinePane extends ViewPane implements IOutlinePane {\n\tstatic readonly Id = \"outline\";\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _editorControlDisposables = new DisposableStore();\n\tprivate readonly _editorPaneDisposables = new DisposableStore();\n\tprivate readonly _outlineViewState = new OutlineViewState();\n\n\tprivate readonly _editorListener = new MutableDisposable();\n\n\tprivate _domNode!: HTMLElement;\n\tprivate _message!: HTMLDivElement;\n\tprivate _progressBar!: ProgressBar;\n\tprivate _treeContainer!: HTMLElement;\n\tprivate _tree?: WorkbenchDataTree<\n\t\tIOutline<any> | undefined,\n\t\tany,\n\t\tFuzzyScore\n\t>;\n\tprivate _treeDimensions?: dom.Dimension;\n\tprivate _treeStates = new LRUCache<string, IAbstractTreeViewState>(10);\n\n\tprivate _ctxFollowsCursor!: IContextKey<boolean>;\n\tprivate _ctxFilterOnType!: IContextKey<boolean>;\n\tprivate _ctxSortMode!: IContextKey<OutlineSortOrder>;\n\tprivate _ctxAllCollapsed!: IContextKey<boolean>;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IOutlineService private readonly _outlineService: IOutlineService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(\n\t\t\toptions,\n\t\t\tkeybindingService,\n\t\t\tcontextMenuService,\n\t\t\tconfigurationService,\n\t\t\tcontextKeyService,\n\t\t\tviewDescriptorService,\n\t\t\t_instantiationService,\n\t\t\topenerService,\n\t\t\tthemeService,\n\t\t\ttelemetryService,\n\t\t\thoverService,\n\t\t);\n\t\tthis._outlineViewState.restore(this._storageService);\n\t\tthis._disposables.add(this._outlineViewState);\n\n\t\tcontextKeyService.bufferChangeEvents(() => {\n\t\t\tthis._ctxFollowsCursor = ctxFollowsCursor.bindTo(contextKeyService);\n\t\t\tthis._ctxFilterOnType = ctxFilterOnType.bindTo(contextKeyService);\n\t\t\tthis._ctxSortMode = ctxSortMode.bindTo(contextKeyService);\n\t\t\tthis._ctxAllCollapsed = ctxAllCollapsed.bindTo(contextKeyService);\n\t\t});\n\n\t\tconst updateContext = () => {\n\t\t\tthis._ctxFollowsCursor.set(this._outlineViewState.followCursor);\n\t\t\tthis._ctxFilterOnType.set(this._outlineViewState.filterOnType);\n\t\t\tthis._ctxSortMode.set(this._outlineViewState.sortBy);\n\t\t};\n\t\tupdateContext();\n\t\tthis._disposables.add(\n\t\t\tthis._outlineViewState.onDidChange(updateContext),\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._editorPaneDisposables.dispose();\n\t\tthis._editorControlDisposables.dispose();\n\t\tthis._editorListener.dispose();\n\t\tsuper.dispose();\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis._tree?.domFocus();\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis._domNode = container;\n\t\tcontainer.classList.add(\"outline-pane\");\n\n\t\tconst progressContainer = dom.$(\".outline-progress\");\n\t\tthis._message = dom.$(\".outline-message\");\n\n\t\tthis._progressBar = new ProgressBar(\n\t\t\tprogressContainer,\n\t\t\tdefaultProgressBarStyles,\n\t\t);\n\n\t\tthis._treeContainer = dom.$(\".outline-tree\");\n\t\tdom.append(\n\t\t\tcontainer,\n\t\t\tprogressContainer,\n\t\t\tthis._message,\n\t\t\tthis._treeContainer,\n\t\t);\n\n\t\tthis._disposables.add(\n\t\t\tthis.onDidChangeBodyVisibility((visible) => {\n\t\t\t\tif (!visible) {\n\t\t\t\t\t// stop everything when not visible\n\t\t\t\t\tthis._editorListener.clear();\n\t\t\t\t\tthis._editorPaneDisposables.clear();\n\t\t\t\t\tthis._editorControlDisposables.clear();\n\t\t\t\t} else if (!this._editorListener.value) {\n\t\t\t\t\tconst event = Event.any(\n\t\t\t\t\t\tthis._editorService.onDidActiveEditorChange,\n\t\t\t\t\t\tthis._outlineService.onDidChange,\n\t\t\t\t\t);\n\t\t\t\t\tthis._editorListener.value = event(() =>\n\t\t\t\t\t\tthis._handleEditorChanged(\n\t\t\t\t\t\t\tthis._editorService.activeEditorPane,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tthis._handleEditorChanged(\n\t\t\t\t\t\tthis._editorService.activeEditorPane,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis._tree?.layout(height, width);\n\t\tthis._treeDimensions = new dom.Dimension(width, height);\n\t}\n\n\tcollapseAll(): void {\n\t\tthis._tree?.collapseAll();\n\t}\n\n\texpandAll(): void {\n\t\tthis._tree?.expandAll();\n\t}\n\n\tget outlineViewState() {\n\t\treturn this._outlineViewState;\n\t}\n\n\tprivate _showMessage(message: string) {\n\t\tthis._domNode.classList.add(\"message\");\n\t\tthis._progressBar.stop().hide();\n\t\tthis._message.innerText = message;\n\t}\n\n\tprivate _captureViewState(uri?: URI): boolean {\n\t\tif (this._tree) {\n\t\t\tconst oldOutline = this._tree.getInput();\n\t\t\tif (!uri) {\n\t\t\t\turi = oldOutline?.uri;\n\t\t\t}\n\t\t\tif (oldOutline && uri) {\n\t\t\t\tthis._treeStates.set(\n\t\t\t\t\t`${oldOutline.outlineKind}/${uri}`,\n\t\t\t\t\tthis._tree.getViewState(),\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _handleEditorChanged(pane: IEditorPane | undefined): void {\n\t\tthis._editorPaneDisposables.clear();\n\n\t\tif (pane) {\n\t\t\t// react to control changes from within pane (https://github.com/microsoft/vscode/issues/134008)\n\t\t\tthis._editorPaneDisposables.add(\n\t\t\t\tpane.onDidChangeControl(() => {\n\t\t\t\t\tthis._handleEditorControlChanged(pane);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tthis._handleEditorControlChanged(pane);\n\t}\n\n\tprivate async _handleEditorControlChanged(\n\t\tpane: IEditorPane | undefined,\n\t): Promise<void> {\n\t\t// persist state\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(pane?.input);\n\t\tconst didCapture = this._captureViewState();\n\n\t\tthis._editorControlDisposables.clear();\n\n\t\tif (\n\t\t\t!pane ||\n\t\t\t!this._outlineService.canCreateOutline(pane) ||\n\t\t\t!resource\n\t\t) {\n\t\t\treturn this._showMessage(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"no-editor\",\n\t\t\t\t\t\"The active editor cannot provide outline information.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tlet loadingMessage: IDisposable | undefined;\n\t\tif (!didCapture) {\n\t\t\tloadingMessage = new TimeoutTimer(() => {\n\t\t\t\tthis._showMessage(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"loading\",\n\t\t\t\t\t\t\"Loading document symbols for '{0}'...\",\n\t\t\t\t\t\tbasename(resource),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}, 100);\n\t\t}\n\n\t\tthis._progressBar.infinite().show(500);\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis._editorControlDisposables.add(\n\t\t\ttoDisposable(() => cts.dispose(true)),\n\t\t);\n\n\t\tconst newOutline = await this._outlineService.createOutline(\n\t\t\tpane,\n\t\t\tOutlineTarget.OutlinePane,\n\t\t\tcts.token,\n\t\t);\n\t\tloadingMessage?.dispose();\n\n\t\tif (!newOutline) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (cts.token.isCancellationRequested) {\n\t\t\tnewOutline?.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editorControlDisposables.add(newOutline);\n\t\tthis._progressBar.stop().hide();\n\n\t\tconst sorter = new OutlineTreeSorter(\n\t\t\tnewOutline.config.comparator,\n\t\t\tthis._outlineViewState.sortBy,\n\t\t);\n\n\t\tconst tree = <\n\t\t\tWorkbenchDataTree<IOutline<any> | undefined, any, FuzzyScore>\n\t\t>this._instantiationService.createInstance(\n\t\t\tWorkbenchDataTree,\n\t\t\t\"OutlinePane\",\n\t\t\tthis._treeContainer,\n\t\t\tnewOutline.config.delegate,\n\t\t\tnewOutline.config.renderers,\n\t\t\tnewOutline.config.treeDataSource,\n\t\t\t{\n\t\t\t\t...newOutline.config.options,\n\t\t\t\tsorter,\n\t\t\t\texpandOnDoubleClick: false,\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\tdefaultFindMode: this._outlineViewState.filterOnType\n\t\t\t\t\t? TreeFindMode.Filter\n\t\t\t\t\t: TreeFindMode.Highlight,\n\t\t\t\toverrideStyles:\n\t\t\t\t\tthis.getLocationBasedColors().listOverrideStyles,\n\t\t\t},\n\t\t);\n\n\t\t// update tree, listen to changes\n\t\tconst updateTree = () => {\n\t\t\tif (newOutline.isEmpty) {\n\t\t\t\t// no more elements\n\t\t\t\tthis._showMessage(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"no-symbols\",\n\t\t\t\t\t\t\"No symbols found in document '{0}'\",\n\t\t\t\t\t\tbasename(resource),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tthis._captureViewState(resource);\n\t\t\t\ttree.setInput(undefined);\n\t\t\t} else if (tree.getInput()) {\n\t\t\t\t// update: refresh tree\n\t\t\t\tthis._domNode.classList.remove(\"message\");\n\t\t\t\ttree.updateChildren();\n\t\t\t} else {\n\t\t\t\t// first: init tree\n\t\t\t\tthis._domNode.classList.remove(\"message\");\n\t\t\t\tconst state = this._treeStates.get(\n\t\t\t\t\t`${newOutline.outlineKind}/${newOutline.uri}`,\n\t\t\t\t);\n\t\t\t\ttree.setInput(\n\t\t\t\t\tnewOutline,\n\t\t\t\t\tstate && AbstractTreeViewState.lift(state),\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tupdateTree();\n\t\tthis._editorControlDisposables.add(newOutline.onDidChange(updateTree));\n\t\ttree.findMode = this._outlineViewState.filterOnType\n\t\t\t? TreeFindMode.Filter\n\t\t\t: TreeFindMode.Highlight;\n\n\t\t// feature: apply panel background to tree\n\t\tthis._editorControlDisposables.add(\n\t\t\tthis.viewDescriptorService.onDidChangeLocation(({ views }) => {\n\t\t\t\tif (views.some((v) => v.id === this.id)) {\n\t\t\t\t\ttree.updateOptions({\n\t\t\t\t\t\toverrideStyles:\n\t\t\t\t\t\t\tthis.getLocationBasedColors().listOverrideStyles,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// feature: filter on type - keep tree and menu in sync\n\t\tthis._editorControlDisposables.add(\n\t\t\ttree.onDidChangeFindMode(\n\t\t\t\t(mode) =>\n\t\t\t\t\t(this._outlineViewState.filterOnType =\n\t\t\t\t\t\tmode === TreeFindMode.Filter),\n\t\t\t),\n\t\t);\n\n\t\t// feature: reveal outline selection in editor\n\t\t// on change -> reveal/select defining range\n\t\tlet idPool = 0;\n\t\tthis._editorControlDisposables.add(\n\t\t\ttree.onDidOpen(async (e) => {\n\t\t\t\tconst myId = ++idPool;\n\t\t\t\tconst isDoubleClick = e.browserEvent?.type === \"dblclick\";\n\t\t\t\tif (!isDoubleClick) {\n\t\t\t\t\t// workaround for https://github.com/microsoft/vscode/issues/206424\n\t\t\t\t\tawait timeout(150);\n\t\t\t\t\tif (myId !== idPool) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tawait newOutline.reveal(\n\t\t\t\t\te.element,\n\t\t\t\t\te.editorOptions,\n\t\t\t\t\te.sideBySide,\n\t\t\t\t\tisDoubleClick,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\t// feature: reveal editor selection in outline\n\t\tconst revealActiveElement = () => {\n\t\t\tif (\n\t\t\t\t!this._outlineViewState.followCursor ||\n\t\t\t\t!newOutline.activeElement\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet item = newOutline.activeElement;\n\t\t\twhile (item) {\n\t\t\t\tconst top = tree.getRelativeTop(item);\n\t\t\t\tif (top === null) {\n\t\t\t\t\t// not visible -> reveal\n\t\t\t\t\ttree.reveal(item, 0.5);\n\t\t\t\t}\n\t\t\t\tif (tree.getRelativeTop(item) !== null) {\n\t\t\t\t\ttree.setFocus([item]);\n\t\t\t\t\ttree.setSelection([item]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// STILL not visible -> try parent\n\t\t\t\titem = tree.getParentElement(item);\n\t\t\t}\n\t\t};\n\t\trevealActiveElement();\n\t\tthis._editorControlDisposables.add(\n\t\t\tnewOutline.onDidChange(revealActiveElement),\n\t\t);\n\n\t\t// feature: update view when user state changes\n\t\tthis._editorControlDisposables.add(\n\t\t\tthis._outlineViewState.onDidChange(\n\t\t\t\t(e: {\n\t\t\t\t\tfollowCursor?: boolean;\n\t\t\t\t\tsortBy?: boolean;\n\t\t\t\t\tfilterOnType?: boolean;\n\t\t\t\t}) => {\n\t\t\t\t\tthis._outlineViewState.persist(this._storageService);\n\t\t\t\t\tif (e.filterOnType) {\n\t\t\t\t\t\ttree.findMode = this._outlineViewState.filterOnType\n\t\t\t\t\t\t\t? TreeFindMode.Filter\n\t\t\t\t\t\t\t: TreeFindMode.Highlight;\n\t\t\t\t\t}\n\t\t\t\t\tif (e.followCursor) {\n\t\t\t\t\t\trevealActiveElement();\n\t\t\t\t\t}\n\t\t\t\t\tif (e.sortBy) {\n\t\t\t\t\t\tsorter.order = this._outlineViewState.sortBy;\n\t\t\t\t\t\ttree.resort();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// feature: expand all nodes when filtering (not when finding)\n\t\tlet viewState: AbstractTreeViewState | undefined;\n\t\tthis._editorControlDisposables.add(\n\t\t\ttree.onDidChangeFindPattern((pattern) => {\n\t\t\t\tif (tree.findMode === TreeFindMode.Highlight) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!viewState && pattern) {\n\t\t\t\t\tviewState = tree.getViewState();\n\t\t\t\t\ttree.expandAll();\n\t\t\t\t} else if (!pattern && viewState) {\n\t\t\t\t\ttree.setInput(tree.getInput()!, viewState);\n\t\t\t\t\tviewState = undefined;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// feature: update all-collapsed context key\n\t\tconst updateAllCollapsedCtx = () => {\n\t\t\tthis._ctxAllCollapsed.set(\n\t\t\t\ttree\n\t\t\t\t\t.getNode(null)\n\t\t\t\t\t.children.every(\n\t\t\t\t\t\t(node) => !node.collapsible || node.collapsed,\n\t\t\t\t\t),\n\t\t\t);\n\t\t};\n\t\tthis._editorControlDisposables.add(\n\t\t\ttree.onDidChangeCollapseState(updateAllCollapsedCtx),\n\t\t);\n\t\tthis._editorControlDisposables.add(\n\t\t\ttree.onDidChangeModel(updateAllCollapsedCtx),\n\t\t);\n\t\tupdateAllCollapsedCtx();\n\n\t\t// last: set tree property and wire it up to one of our context keys\n\t\ttree.layout(this._treeDimensions?.height, this._treeDimensions?.width);\n\t\tthis._tree = tree;\n\t\tthis._editorControlDisposables.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\ttree.dispose();\n\t\t\t\tthis._tree = undefined;\n\t\t\t}),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
