{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/outline/browser/outlineViewState.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport {\n\ttype IStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { type IOutlineViewState, OutlineSortOrder } from \"./outline.js\";\n\nexport class OutlineViewState implements IOutlineViewState {\n\tprivate _followCursor = false;\n\tprivate _filterOnType = true;\n\tprivate _sortBy = OutlineSortOrder.ByPosition;\n\n\tprivate readonly _onDidChange = new Emitter<{\n\t\tfollowCursor?: boolean;\n\t\tsortBy?: boolean;\n\t\tfilterOnType?: boolean;\n\t}>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t}\n\n\tset followCursor(value: boolean) {\n\t\tif (value !== this._followCursor) {\n\t\t\tthis._followCursor = value;\n\t\t\tthis._onDidChange.fire({ followCursor: true });\n\t\t}\n\t}\n\n\tget followCursor(): boolean {\n\t\treturn this._followCursor;\n\t}\n\n\tget filterOnType() {\n\t\treturn this._filterOnType;\n\t}\n\n\tset filterOnType(value) {\n\t\tif (value !== this._filterOnType) {\n\t\t\tthis._filterOnType = value;\n\t\t\tthis._onDidChange.fire({ filterOnType: true });\n\t\t}\n\t}\n\n\tset sortBy(value: OutlineSortOrder) {\n\t\tif (value !== this._sortBy) {\n\t\t\tthis._sortBy = value;\n\t\t\tthis._onDidChange.fire({ sortBy: true });\n\t\t}\n\t}\n\n\tget sortBy(): OutlineSortOrder {\n\t\treturn this._sortBy;\n\t}\n\n\tpersist(storageService: IStorageService): void {\n\t\tstorageService.store(\n\t\t\t\"outline/state\",\n\t\t\tJSON.stringify({\n\t\t\t\tfollowCursor: this.followCursor,\n\t\t\t\tsortBy: this.sortBy,\n\t\t\t\tfilterOnType: this.filterOnType,\n\t\t\t}),\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n\n\trestore(storageService: IStorageService): void {\n\t\tconst raw = storageService.get(\"outline/state\", StorageScope.WORKSPACE);\n\t\tif (!raw) {\n\t\t\treturn;\n\t\t}\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = JSON.parse(raw);\n\t\t} catch (e) {\n\t\t\treturn;\n\t\t}\n\t\tthis.followCursor = data.followCursor;\n\t\tthis.sortBy = data.sortBy ?? OutlineSortOrder.ByPosition;\n\t\tif (typeof data.filterOnType === \"boolean\") {\n\t\t\tthis.filterOnType = data.filterOnType;\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAiC,wBAAwB;AAElD,MAAM,iBAA8C;AAAA,EAb3D,OAa2D;AAAA;AAAA;AAAA,EAClD,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,UAAU,iBAAiB;AAAA,EAElB,eAAe,IAAI,QAIjC;AAAA,EACM,cAAc,KAAK,aAAa;AAAA,EAEzC,UAAgB;AACf,SAAK,aAAa,QAAQ;AAAA,EAC3B;AAAA,EAEA,IAAI,aAAa,OAAgB;AAChC,QAAI,UAAU,KAAK,eAAe;AACjC,WAAK,gBAAgB;AACrB,WAAK,aAAa,KAAK,EAAE,cAAc,KAAK,CAAC;AAAA,IAC9C;AAAA,EACD;AAAA,EAEA,IAAI,eAAwB;AAC3B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,eAAe;AAClB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,aAAa,OAAO;AACvB,QAAI,UAAU,KAAK,eAAe;AACjC,WAAK,gBAAgB;AACrB,WAAK,aAAa,KAAK,EAAE,cAAc,KAAK,CAAC;AAAA,IAC9C;AAAA,EACD;AAAA,EAEA,IAAI,OAAO,OAAyB;AACnC,QAAI,UAAU,KAAK,SAAS;AAC3B,WAAK,UAAU;AACf,WAAK,aAAa,KAAK,EAAE,QAAQ,KAAK,CAAC;AAAA,IACxC;AAAA,EACD;AAAA,EAEA,IAAI,SAA2B;AAC9B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,QAAQ,gBAAuC;AAC9C,mBAAe;AAAA,MACd;AAAA,MACA,KAAK,UAAU;AAAA,QACd,cAAc,KAAK;AAAA,QACnB,QAAQ,KAAK;AAAA,QACb,cAAc,KAAK;AAAA,MACpB,CAAC;AAAA,MACD,aAAa;AAAA,MACb,cAAc;AAAA,IACf;AAAA,EACD;AAAA,EAEA,QAAQ,gBAAuC;AAC9C,UAAM,MAAM,eAAe,IAAI,iBAAiB,aAAa,SAAS;AACtE,QAAI,CAAC,KAAK;AACT;AAAA,IACD;AACA,QAAI;AACJ,QAAI;AACH,aAAO,KAAK,MAAM,GAAG;AAAA,IACtB,SAAS,GAAG;AACX;AAAA,IACD;AACA,SAAK,eAAe,KAAK;AACzB,SAAK,SAAS,KAAK,UAAU,iBAAiB;AAC9C,QAAI,OAAO,KAAK,iBAAiB,WAAW;AAC3C,WAAK,eAAe,KAAK;AAAA,IAC1B;AAAA,EACD;AACD;",
  "names": []
}
