{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/outline/browser/outline.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport type { IView } from '../../../common/views.js';\n\nexport const enum OutlineSortOrder {\n\tByPosition,\n\tByName,\n\tByKind\n}\n\nexport interface IOutlineViewState {\n\tfollowCursor: boolean;\n\tfilterOnType: boolean;\n\tsortBy: OutlineSortOrder;\n}\n\nexport namespace IOutlinePane {\n\texport const Id = 'outline';\n}\n\nexport interface IOutlinePane extends IView {\n\toutlineViewState: IOutlineViewState;\n\tcollapseAll(): void;\n\texpandAll(): void;\n}\n\n// --- context keys\n\nexport const ctxFollowsCursor = new RawContextKey<boolean>('outlineFollowsCursor', false);\nexport const ctxFilterOnType = new RawContextKey<boolean>('outlineFiltersOnType', false);\nexport const ctxSortMode = new RawContextKey<OutlineSortOrder>('outlineSortMode', OutlineSortOrder.ByPosition);\nexport const ctxAllCollapsed = new RawContextKey<boolean>('outlineAllCollapsed', false);\n"],
  "mappings": "AAKA,SAAS,qBAAqB;AAGvB,IAAW,mBAAX,kBAAWA,sBAAX;AACN,EAAAA,oCAAA;AACA,EAAAA,oCAAA;AACA,EAAAA,oCAAA;AAHiB,SAAAA;AAAA,GAAA;AAYX,IAAU;AAAA,CAAV,CAAUC,kBAAV;AACC,EAAMA,cAAA,KAAK;AAAA,GADF;AAYV,MAAM,mBAAmB,IAAI,cAAuB,wBAAwB,KAAK;AACjF,MAAM,kBAAkB,IAAI,cAAuB,wBAAwB,KAAK;AAChF,MAAM,cAAc,IAAI,cAAgC,mBAAmB,kBAA2B;AACtG,MAAM,kBAAkB,IAAI,cAAuB,uBAAuB,KAAK;",
  "names": ["OutlineSortOrder", "IOutlinePane"]
}
