{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/outline/browser/outline.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { IViewsRegistry, Extensions as ViewExtensions } from '../../../common/views.js';\nimport { OutlinePane } from './outlinePane.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { VIEW_CONTAINER } from '../../files/browser/explorerViewlet.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { OutlineConfigKeys } from '../../../services/outline/browser/outline.js';\nimport { IOutlinePane } from './outline.js';\n\n// --- actions\n\nimport './outlineActions.js';\n\n// --- view\n\nconst outlineViewIcon = registerIcon('outline-view-icon', Codicon.symbolClass, localize('outlineViewIcon', 'View icon of the outline view.'));\n\nRegistry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry).registerViews([{\n\tid: IOutlinePane.Id,\n\tname: localize2('name', \"Outline\"),\n\tcontainerIcon: outlineViewIcon,\n\tctorDescriptor: new SyncDescriptor(OutlinePane),\n\tcanToggleVisibility: true,\n\tcanMoveView: true,\n\thideByDefault: false,\n\tcollapsed: true,\n\torder: 2,\n\tweight: 30,\n\tfocusCommand: { id: 'outline.focus' }\n}], VIEW_CONTAINER);\n\n// --- configurations\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\t'id': 'outline',\n\t'order': 117,\n\t'title': localize('outlineConfigurationTitle', \"Outline\"),\n\t'type': 'object',\n\t'properties': {\n\t\t[OutlineConfigKeys.icons]: {\n\t\t\t'description': localize('outline.showIcons', \"Render Outline elements with icons.\"),\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t},\n\t\t[OutlineConfigKeys.collapseItems]: {\n\t\t\t'description': localize('outline.initialState', \"Controls whether Outline items are collapsed or expanded.\"),\n\t\t\t'type': 'string',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\t'enum': [\n\t\t\t\t'alwaysCollapse',\n\t\t\t\t'alwaysExpand'\n\t\t\t],\n\t\t\t'enumDescriptions': [\n\t\t\t\tlocalize('outline.initialState.collapsed', \"Collapse all items.\"),\n\t\t\t\tlocalize('outline.initialState.expanded', \"Expand all items.\")\n\t\t\t],\n\t\t\t'default': 'alwaysExpand'\n\t\t},\n\t\t[OutlineConfigKeys.problemsEnabled]: {\n\t\t\t'markdownDescription': localize('outline.showProblem', \"Show errors and warnings on Outline elements. Overwritten by {0} when it is off.\", '`#problems.visibility#`'),\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t},\n\t\t[OutlineConfigKeys.problemsColors]: {\n\t\t\t'markdownDescription': localize('outline.problem.colors', \"Use colors for errors and warnings on Outline elements. Overwritten by {0} when it is off.\", '`#problems.visibility#`'),\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t},\n\t\t[OutlineConfigKeys.problemsBadges]: {\n\t\t\t'markdownDescription': localize('outline.problems.badges', \"Use badges for errors and warnings on Outline elements. Overwritten by {0} when it is off.\", '`#problems.visibility#`'),\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t},\n\t\t'outline.showFiles': {\n\t\t\ttype: 'boolean',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('filteredTypes.file', \"When enabled, Outline shows `file`-symbols.\")\n\t\t},\n\t\t'outline.showModules': {\n\t\t\ttype: 'boolean',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('filteredTypes.module', \"When enabled, Outline shows `module`-symbols.\")\n\t\t},\n\t\t'outline.showNamespaces': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.namespace', \"When enabled, Outline shows `namespace`-symbols.\")\n\t\t},\n\t\t'outline.showPackages': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.package', \"When enabled, Outline shows `package`-symbols.\")\n\t\t},\n\t\t'outline.showClasses': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.class', \"When enabled, Outline shows `class`-symbols.\")\n\t\t},\n\t\t'outline.showMethods': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.method', \"When enabled, Outline shows `method`-symbols.\")\n\t\t},\n\t\t'outline.showProperties': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.property', \"When enabled, Outline shows `property`-symbols.\")\n\t\t},\n\t\t'outline.showFields': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.field', \"When enabled, Outline shows `field`-symbols.\")\n\t\t},\n\t\t'outline.showConstructors': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.constructor', \"When enabled, Outline shows `constructor`-symbols.\")\n\t\t},\n\t\t'outline.showEnums': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.enum', \"When enabled, Outline shows `enum`-symbols.\")\n\t\t},\n\t\t'outline.showInterfaces': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.interface', \"When enabled, Outline shows `interface`-symbols.\")\n\t\t},\n\t\t'outline.showFunctions': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.function', \"When enabled, Outline shows `function`-symbols.\")\n\t\t},\n\t\t'outline.showVariables': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.variable', \"When enabled, Outline shows `variable`-symbols.\")\n\t\t},\n\t\t'outline.showConstants': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.constant', \"When enabled, Outline shows `constant`-symbols.\")\n\t\t},\n\t\t'outline.showStrings': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.string', \"When enabled, Outline shows `string`-symbols.\")\n\t\t},\n\t\t'outline.showNumbers': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.number', \"When enabled, Outline shows `number`-symbols.\")\n\t\t},\n\t\t'outline.showBooleans': {\n\t\t\ttype: 'boolean',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('filteredTypes.boolean', \"When enabled, Outline shows `boolean`-symbols.\")\n\t\t},\n\t\t'outline.showArrays': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.array', \"When enabled, Outline shows `array`-symbols.\")\n\t\t},\n\t\t'outline.showObjects': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.object', \"When enabled, Outline shows `object`-symbols.\")\n\t\t},\n\t\t'outline.showKeys': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.key', \"When enabled, Outline shows `key`-symbols.\")\n\t\t},\n\t\t'outline.showNull': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.null', \"When enabled, Outline shows `null`-symbols.\")\n\t\t},\n\t\t'outline.showEnumMembers': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.enumMember', \"When enabled, Outline shows `enumMember`-symbols.\")\n\t\t},\n\t\t'outline.showStructs': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.struct', \"When enabled, Outline shows `struct`-symbols.\")\n\t\t},\n\t\t'outline.showEvents': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.event', \"When enabled, Outline shows `event`-symbols.\")\n\t\t},\n\t\t'outline.showOperators': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.operator', \"When enabled, Outline shows `operator`-symbols.\")\n\t\t},\n\t\t'outline.showTypeParameters': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.typeParameter', \"When enabled, Outline shows `typeParameter`-symbols.\")\n\t\t}\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
