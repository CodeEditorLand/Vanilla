{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/encryption/electron-sandbox/encryption.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { parse } from \"../../../../base/common/jsonc.js\";\nimport { isLinux } from \"../../../../base/common/platform.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { IJSONEditingService } from \"../../../services/configuration/common/jsonEditing.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\n\nclass EncryptionContribution implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IJSONEditingService\n\t\tprivate readonly jsonEditingService: IJSONEditingService,\n\t\t@IEnvironmentService\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tthis.migrateToGnomeLibsecret();\n\t}\n\n\t/**\n\t * Migrate the user from using the gnome or gnome-keyring password-store to gnome-libsecret.\n\t * TODO@TylerLeonhardt: This migration can be removed in 3 months or so and then storage\n\t * can be cleaned up.\n\t */\n\tprivate async migrateToGnomeLibsecret(): Promise<void> {\n\t\tif (\n\t\t\t!isLinux ||\n\t\t\tthis.storageService.getBoolean(\n\t\t\t\t\"encryption.migratedToGnomeLibsecret\",\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tfalse,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(\n\t\t\t\tthis.environmentService.argvResource,\n\t\t\t);\n\t\t\tconst argv = parse(content.value.toString());\n\t\t\tif (\n\t\t\t\targv[\"password-store\"] === \"gnome\" ||\n\t\t\t\targv[\"password-store\"] === \"gnome-keyring\"\n\t\t\t) {\n\t\t\t\tthis.jsonEditingService.write(\n\t\t\t\t\tthis.environmentService.argvResource,\n\t\t\t\t\t[{ path: [\"password-store\"], value: \"gnome-libsecret\" }],\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.storageService.store(\n\t\t\t\t\"encryption.migratedToGnomeLibsecret\",\n\t\t\t\ttrue,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tEncryptionContribution,\n\tLifecyclePhase.Eventually,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,eAAe;AACxB,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAGC,cAAc;AAAA,OACR;AACP,SAAS,2BAA2B;AACpC,SAAS,sBAAsB;AAE/B,IAAM,yBAAN,MAA+D;AAAA,EAC9D,YAEkB,oBAEA,oBACc,aACG,gBACjC;AALgB;AAEA;AACc;AACG;AAElC,SAAK,wBAAwB;AAAA,EAC9B;AAAA,EAjCD,OAuB+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiB9D,MAAc,0BAAyC;AACtD,QACC,CAAC,WACD,KAAK,eAAe;AAAA,MACnB;AAAA,MACA,aAAa;AAAA,MACb;AAAA,IACD,GACC;AACD;AAAA,IACD;AACA,QAAI;AACH,YAAM,UAAU,MAAM,KAAK,YAAY;AAAA,QACtC,KAAK,mBAAmB;AAAA,MACzB;AACA,YAAM,OAAO,MAAM,QAAQ,MAAM,SAAS,CAAC;AAC3C,UACC,KAAK,gBAAgB,MAAM,WAC3B,KAAK,gBAAgB,MAAM,iBAC1B;AACD,aAAK,mBAAmB;AAAA,UACvB,KAAK,mBAAmB;AAAA,UACxB,CAAC,EAAE,MAAM,CAAC,gBAAgB,GAAG,OAAO,kBAAkB,CAAC;AAAA,UACvD;AAAA,QACD;AAAA,MACD;AACA,WAAK,eAAe;AAAA,QACnB;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QACb,cAAc;AAAA,MACf;AAAA,IACD,SAAS,OAAO;AACf,cAAQ,MAAM,KAAK;AAAA,IACpB;AAAA,EACD;AACD;AArDM,yBAAN;AAAA,EAEG;AAAA,EAEA;AAAA,EAEA;AAAA,EACA;AAAA,GAPG;AAuDN,SAAS;AAAA,EACR,oBAAoB;AACrB,EAAE;AAAA,EACD;AAAA,EACA,eAAe;AAChB;",
  "names": []
}
