{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/share/browser/shareService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { score } from \"../../../../editor/common/languageSelector.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type { ISubmenuItem } from \"../../../../platform/actions/common/actions.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport type {\n\tIShareProvider,\n\tIShareService,\n\tIShareableItem,\n} from \"../common/share.js\";\n\nexport const ShareProviderCountContext = new RawContextKey<number>(\n\t\"shareProviderCount\",\n\t0,\n\tlocalize(\"shareProviderCount\", \"The number of available share providers\"),\n);\n\ntype ShareEvent = {\n\tproviderId: string;\n};\ntype ShareClassification = {\n\towner: \"joyceerhl\";\n\tcomment: \"Reporting which share provider is invoked.\";\n\tproviderId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The id of the selected share provider.\";\n\t};\n};\n\nexport class ShareService implements IShareService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly providerCount: IContextKey<number>;\n\tprivate readonly _providers = new Set<IShareProvider>();\n\n\tconstructor(\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IQuickInputService private quickInputService: IQuickInputService,\n\t\t@ICodeEditorService\n\t\tprivate readonly codeEditorService: ICodeEditorService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tthis.providerCount = ShareProviderCountContext.bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\t}\n\n\tregisterShareProvider(provider: IShareProvider): IDisposable {\n\t\tthis._providers.add(provider);\n\t\tthis.providerCount.set(this._providers.size);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._providers.delete(provider);\n\t\t\t\tthis.providerCount.set(this._providers.size);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetShareActions(): ISubmenuItem[] {\n\t\t// todo@joyceerhl return share actions\n\t\treturn [];\n\t}\n\n\tasync provideShare(\n\t\titem: IShareableItem,\n\t\ttoken: CancellationToken,\n\t): Promise<URI | string | undefined> {\n\t\tconst language =\n\t\t\tthis.codeEditorService\n\t\t\t\t.getActiveCodeEditor()\n\t\t\t\t?.getModel()\n\t\t\t\t?.getLanguageId() ?? \"\";\n\t\tconst providers = [...this._providers.values()]\n\t\t\t.filter(\n\t\t\t\t(p) =>\n\t\t\t\t\tscore(\n\t\t\t\t\t\tp.selector,\n\t\t\t\t\t\titem.resourceUri,\n\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t) > 0,\n\t\t\t)\n\t\t\t.sort((a, b) => a.priority - b.priority);\n\n\t\tif (providers.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (providers.length === 1) {\n\t\t\tthis.telemetryService.publicLog2<ShareEvent, ShareClassification>(\n\t\t\t\t\"shareService.share\",\n\t\t\t\t{ providerId: providers[0].id },\n\t\t\t);\n\t\t\treturn providers[0].provideShare(item, token);\n\t\t}\n\n\t\tconst items: (IQuickPickItem & { provider: IShareProvider })[] =\n\t\t\tproviders.map((p) => ({ label: p.label, provider: p }));\n\t\tconst selected = await this.quickInputService.pick(\n\t\t\titems,\n\t\t\t{\n\t\t\t\tcanPickMany: false,\n\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\"type to filter\",\n\t\t\t\t\t\"Choose how to share {0}\",\n\t\t\t\t\tthis.labelService.getUriLabel(item.resourceUri),\n\t\t\t\t),\n\t\t\t},\n\t\t\ttoken,\n\t\t);\n\n\t\tif (selected !== undefined) {\n\t\t\tthis.telemetryService.publicLog2<ShareEvent, ShareClassification>(\n\t\t\t\t\"shareService.share\",\n\t\t\t\t{ providerId: selected.provider.id },\n\t\t\t);\n\t\t\treturn selected.provider.provideShare(item, token);\n\t\t}\n\n\t\treturn;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAQA,SAAS,0BAA0B;AACnC,SAAS,aAAa;AACtB,SAAS,gBAAgB;AAEzB;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,qBAAqB;AAC9B;AAAA,EACC;AAAA,OAEM;AACP,SAAS,yBAAyB;AAO3B,MAAM,4BAA4B,IAAI;AAAA,EAC5C;AAAA,EACA;AAAA,EACA,SAAS,sBAAsB,yCAAyC;AACzE;AAeO,IAAM,eAAN,MAA4C;AAAA,EAMlD,YAC6B,mBACI,cACJ,mBAEX,mBACmB,kBACnC;AAN2B;AACI;AACJ;AAEX;AACmB;AAEpC,SAAK,gBAAgB,0BAA0B;AAAA,MAC9C,KAAK;AAAA,IACN;AAAA,EACD;AAAA,EAjED,OAgDmD;AAAA;AAAA;AAAA,EACzC;AAAA,EAEA;AAAA,EACQ,aAAa,oBAAI,IAAoB;AAAA,EAetD,sBAAsB,UAAuC;AAC5D,SAAK,WAAW,IAAI,QAAQ;AAC5B,SAAK,cAAc,IAAI,KAAK,WAAW,IAAI;AAC3C,WAAO;AAAA,MACN,SAAS,6BAAM;AACd,aAAK,WAAW,OAAO,QAAQ;AAC/B,aAAK,cAAc,IAAI,KAAK,WAAW,IAAI;AAAA,MAC5C,GAHS;AAAA,IAIV;AAAA,EACD;AAAA,EAEA,kBAAkC;AAEjC,WAAO,CAAC;AAAA,EACT;AAAA,EAEA,MAAM,aACL,MACA,OACoC;AACpC,UAAM,WACL,KAAK,kBACH,oBAAoB,GACnB,SAAS,GACT,cAAc,KAAK;AACvB,UAAM,YAAY,CAAC,GAAG,KAAK,WAAW,OAAO,CAAC,EAC5C;AAAA,MACA,CAAC,MACA;AAAA,QACC,EAAE;AAAA,QACF,KAAK;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,IAAI;AAAA,IACN,EACC,KAAK,CAAC,GAAG,MAAM,EAAE,WAAW,EAAE,QAAQ;AAExC,QAAI,UAAU,WAAW,GAAG;AAC3B,aAAO;AAAA,IACR;AAEA,QAAI,UAAU,WAAW,GAAG;AAC3B,WAAK,iBAAiB;AAAA,QACrB;AAAA,QACA,EAAE,YAAY,UAAU,CAAC,EAAE,GAAG;AAAA,MAC/B;AACA,aAAO,UAAU,CAAC,EAAE,aAAa,MAAM,KAAK;AAAA,IAC7C;AAEA,UAAM,QACL,UAAU,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,UAAU,EAAE,EAAE;AACvD,UAAM,WAAW,MAAM,KAAK,kBAAkB;AAAA,MAC7C;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,aAAa;AAAA,UACZ;AAAA,UACA;AAAA,UACA,KAAK,aAAa,YAAY,KAAK,WAAW;AAAA,QAC/C;AAAA,MACD;AAAA,MACA;AAAA,IACD;AAEA,QAAI,aAAa,QAAW;AAC3B,WAAK,iBAAiB;AAAA,QACrB;AAAA,QACA,EAAE,YAAY,SAAS,SAAS,GAAG;AAAA,MACpC;AACA,aAAO,SAAS,SAAS,aAAa,MAAM,KAAK;AAAA,IAClD;AAEA;AAAA,EACD;AACD;AA/Fa,eAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,GAZU;",
  "names": []
}
