var k=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var S=(d,o,r,e)=>{for(var t=e>1?void 0:e?w(o,r):o,c=d.length-1,s;c>=0;c--)(s=d[c])&&(t=(e?s(o,r,t):s(t))||t);return e&&t&&k(o,r,t),t},f=(d,o)=>(r,e)=>o(r,e,d);import"./share.css";import{CancellationToken as T}from"../../../../base/common/cancellation.js";import{Codicon as h}from"../../../../base/common/codicons.js";import{MarkdownString as R}from"../../../../base/common/htmlContent.js";import{KeyCode as D,KeyMod as v}from"../../../../base/common/keyCodes.js";import{localize as a,localize2 as _}from"../../../../nls.js";import{Action2 as L,MenuId as n,MenuRegistry as B,registerAction2 as N}from"../../../../platform/actions/common/actions.js";import{IClipboardService as M}from"../../../../platform/clipboard/common/clipboardService.js";import{IConfigurationService as P}from"../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as G}from"../../../../platform/contextkey/common/contextkey.js";import{EditorResourceAccessor as H,SideBySideEditor as K}from"../../../common/editor.js";import{IDialogService as O}from"../../../../platform/dialogs/common/dialogs.js";import{InstantiationType as W,registerSingleton as V}from"../../../../platform/instantiation/common/extensions.js";import{KeybindingWeight as q}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{Severity as z}from"../../../../platform/notification/common/notification.js";import{IOpenerService as U}from"../../../../platform/opener/common/opener.js";import{Registry as E}from"../../../../platform/registry/common/platform.js";import{IWorkspaceContextService as $}from"../../../../platform/workspace/common/workspace.js";import{WorkspaceFolderCountContext as F}from"../../../common/contextkeys.js";import{Extensions as Y}from"../../../common/contributions.js";import{ShareProviderCountContext as j,ShareService as J}from"./shareService.js";import{IShareService as g}from"../common/share.js";import{LifecyclePhase as Q}from"../../../services/lifecycle/common/lifecycle.js";import{IEditorService as X}from"../../../services/editor/common/editorService.js";import{IProgressService as Z,ProgressLocation as ee}from"../../../../platform/progress/common/progress.js";import{ICodeEditorService as te}from"../../../../editor/browser/services/codeEditorService.js";import{Extensions as oe}from"../../../../platform/configuration/common/configurationRegistry.js";import{workbenchConfigurationNodeBase as ie}from"../../../common/configuration.js";import{DisposableStore as re}from"../../../../base/common/lifecycle.js";const ne=[n.EditorContextShare,n.SCMResourceContextShare,n.OpenEditorsContextShare,n.EditorTitleContextShare,n.MenubarShare,n.ExplorerContextShare];let i=class{constructor(o,r){this.shareService=o;this.configurationService=r;this.configurationService.getValue(i.SHARE_ENABLED_SETTING)&&this.registerActions(),this.configurationService.onDidChangeConfiguration(e=>{if(e.affectsConfiguration(i.SHARE_ENABLED_SETTING)){const t=this.configurationService.getValue(i.SHARE_ENABLED_SETTING);t===!0&&this._disposables===void 0?this.registerActions():t===!1&&this._disposables!==void 0&&(this._disposables?.clear(),this._disposables=void 0)}})}static SHARE_ENABLED_SETTING="workbench.experimental.share.enabled";_disposables;registerActions(){this._disposables||(this._disposables=new re),this._disposables.add(N(class u extends L{static ID="workbench.action.share";static LABEL=_("share","Share...");constructor(){super({id:u.ID,title:u.LABEL,f1:!0,icon:h.linkExternal,precondition:G.and(j.notEqualsTo(0),F.notEqualsTo(0)),keybinding:{weight:q.WorkbenchContrib,primary:v.Alt|v.CtrlCmd|D.KeyS},menu:[{id:n.CommandCenter,order:1e3}]})}async run(e,...t){const c=e.get(g),s=e.get(X)?.activeEditor,C=(s&&H.getOriginalUri(s,{supportSideBySide:K.PRIMARY}))??e.get($).getWorkspace().folders[0].uri,y=e.get(M),b=e.get(O),x=e.get(U),I=e.get(Z),A=e.get(te).getActiveCodeEditor()?.getSelection()??void 0,l=await I.withProgress({location:ee.Window,detail:a("generating link","Generating link...")},async()=>c.provideShare({resourceUri:C,selection:A},T.None));if(l){const p=l.toString(),m=typeof l=="string";await y.writeText(p),b.prompt({type:z.Info,message:m?a("shareTextSuccess","Copied text to clipboard!"):a("shareSuccess","Copied link to clipboard!"),custom:{icon:h.check,markdownDetails:[{markdown:new R(`<div aria-label='${p}'>${p}</div>`,{supportHtml:!0}),classes:[m?"share-dialog-input-text":"share-dialog-input-link"]}]},cancelButton:a("close","Close"),buttons:m?[]:[{label:a("open link","Open Link"),run:()=>{x.open(l,{openExternal:!0})}}]})}}}));const o=this.shareService.getShareActions();for(const r of ne)for(const e of o)this._disposables.add(B.appendMenuItem(r,e))}};i=S([f(0,g),f(1,P)],i),V(g,J,W.Delayed);const se=E.as(Y.Workbench);se.registerWorkbenchContribution(i,Q.Eventually),E.as(oe.Configuration).registerConfiguration({...ie,properties:{"workbench.experimental.share.enabled":{type:"boolean",default:!1,tags:["experimental"],markdownDescription:a("experimental.share.enabled","Controls whether to render the Share action next to the command center when {0} is {1}.","`#window.commandCenter#`","`true`"),restricted:!1}}});
