var k=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var S=(d,i,r,e)=>{for(var t=e>1?void 0:e?w(i,r):i,c=d.length-1,s;c>=0;c--)(s=d[c])&&(t=(e?s(i,r,t):s(t))||t);return e&&t&&k(i,r,t),t},f=(d,i)=>(r,e)=>i(r,e,d);import"./share.css";import{CancellationToken as T}from"../../../../base/common/cancellation.js";import{Codicon as h}from"../../../../base/common/codicons.js";import{MarkdownString as R}from"../../../../base/common/htmlContent.js";import{KeyCode as D,KeyMod as v}from"../../../../base/common/keyCodes.js";import{DisposableStore as _}from"../../../../base/common/lifecycle.js";import{ICodeEditorService as L}from"../../../../editor/browser/services/codeEditorService.js";import{localize as a,localize2 as B}from"../../../../nls.js";import{Action2 as N,MenuId as n,MenuRegistry as M,registerAction2 as P}from"../../../../platform/actions/common/actions.js";import{IClipboardService as G}from"../../../../platform/clipboard/common/clipboardService.js";import{IConfigurationService as H}from"../../../../platform/configuration/common/configuration.js";import{Extensions as K}from"../../../../platform/configuration/common/configurationRegistry.js";import{ContextKeyExpr as O}from"../../../../platform/contextkey/common/contextkey.js";import{IDialogService as W}from"../../../../platform/dialogs/common/dialogs.js";import{InstantiationType as V,registerSingleton as q}from"../../../../platform/instantiation/common/extensions.js";import{KeybindingWeight as z}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{Severity as U}from"../../../../platform/notification/common/notification.js";import{IOpenerService as $}from"../../../../platform/opener/common/opener.js";import{IProgressService as j,ProgressLocation as F}from"../../../../platform/progress/common/progress.js";import{Registry as E}from"../../../../platform/registry/common/platform.js";import{IWorkspaceContextService as Y}from"../../../../platform/workspace/common/workspace.js";import{workbenchConfigurationNodeBase as J}from"../../../common/configuration.js";import{WorkspaceFolderCountContext as Q}from"../../../common/contextkeys.js";import{Extensions as X}from"../../../common/contributions.js";import{EditorResourceAccessor as Z,SideBySideEditor as ee}from"../../../common/editor.js";import{IEditorService as te}from"../../../services/editor/common/editorService.js";import{LifecyclePhase as ie}from"../../../services/lifecycle/common/lifecycle.js";import{IShareService as g}from"../common/share.js";import{ShareProviderCountContext as oe,ShareService as re}from"./shareService.js";const ne=[n.EditorContextShare,n.SCMResourceContextShare,n.OpenEditorsContextShare,n.EditorTitleContextShare,n.MenubarShare,n.ExplorerContextShare];let o=class{constructor(i,r){this.shareService=i;this.configurationService=r;this.configurationService.getValue(o.SHARE_ENABLED_SETTING)&&this.registerActions(),this.configurationService.onDidChangeConfiguration(e=>{if(e.affectsConfiguration(o.SHARE_ENABLED_SETTING)){const t=this.configurationService.getValue(o.SHARE_ENABLED_SETTING);t===!0&&this._disposables===void 0?this.registerActions():t===!1&&this._disposables!==void 0&&(this._disposables?.clear(),this._disposables=void 0)}})}static SHARE_ENABLED_SETTING="workbench.experimental.share.enabled";_disposables;registerActions(){this._disposables||(this._disposables=new _),this._disposables.add(P(class u extends N{static ID="workbench.action.share";static LABEL=B("share","Share...");constructor(){super({id:u.ID,title:u.LABEL,f1:!0,icon:h.linkExternal,precondition:O.and(oe.notEqualsTo(0),Q.notEqualsTo(0)),keybinding:{weight:z.WorkbenchContrib,primary:v.Alt|v.CtrlCmd|D.KeyS},menu:[{id:n.CommandCenter,order:1e3}]})}async run(e,...t){const c=e.get(g),s=e.get(te)?.activeEditor,C=(s&&Z.getOriginalUri(s,{supportSideBySide:ee.PRIMARY}))??e.get(Y).getWorkspace().folders[0].uri,y=e.get(G),b=e.get(W),x=e.get($),I=e.get(j),A=e.get(L).getActiveCodeEditor()?.getSelection()??void 0,p=await I.withProgress({location:F.Window,detail:a("generating link","Generating link...")},async()=>c.provideShare({resourceUri:C,selection:A},T.None));if(p){const l=p.toString(),m=typeof p=="string";await y.writeText(l),b.prompt({type:U.Info,message:m?a("shareTextSuccess","Copied text to clipboard!"):a("shareSuccess","Copied link to clipboard!"),custom:{icon:h.check,markdownDetails:[{markdown:new R(`<div aria-label='${l}'>${l}</div>`,{supportHtml:!0}),classes:[m?"share-dialog-input-text":"share-dialog-input-link"]}]},cancelButton:a("close","Close"),buttons:m?[]:[{label:a("open link","Open Link"),run:()=>{x.open(p,{openExternal:!0})}}]})}}}));const i=this.shareService.getShareActions();for(const r of ne)for(const e of i)this._disposables.add(M.appendMenuItem(r,e))}};o=S([f(0,g),f(1,H)],o),q(g,re,V.Delayed);const se=E.as(X.Workbench);se.registerWorkbenchContribution(o,ie.Eventually),E.as(K.Configuration).registerConfiguration({...J,properties:{"workbench.experimental.share.enabled":{type:"boolean",default:!1,tags:["experimental"],markdownDescription:a("experimental.share.enabled","Controls whether to render the Share action next to the command center when {0} is {1}.","`#window.commandCenter#`","`true`"),restricted:!1}}});
