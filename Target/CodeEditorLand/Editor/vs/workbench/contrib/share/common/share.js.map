{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/share/common/share.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Selection } from '../../../../editor/common/core/selection.js';\nimport { LanguageSelector } from '../../../../editor/common/languageSelector.js';\nimport { ISubmenuItem } from '../../../../platform/actions/common/actions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\n\nexport interface IShareableItem {\n\tresourceUri: URI;\n\tselection?: Selection;\n}\n\nexport interface IShareProvider {\n\treadonly id: string;\n\treadonly label: string;\n\treadonly priority: number;\n\treadonly selector: LanguageSelector;\n\tprepareShare?(item: IShareableItem, token: CancellationToken): Thenable<boolean | undefined>;\n\tprovideShare(item: IShareableItem, token: CancellationToken): Thenable<URI | string | undefined>;\n}\n\nexport const IShareService = createDecorator<IShareService>('shareService');\nexport interface IShareService {\n\t_serviceBrand: undefined;\n\n\tregisterShareProvider(provider: IShareProvider): IDisposable;\n\tgetShareActions(): ISubmenuItem[];\n\tprovideShare(item: IShareableItem, token: CancellationToken): Thenable<URI | string | undefined>;\n}\n"],
  "mappings": "AAKA,SAAS,yBAAyB;AAClC,SAAS,mBAAmB;AAC5B,SAAS,WAAW;AACpB,SAAS,iBAAiB;AAC1B,SAAS,wBAAwB;AACjC,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAgBzB,MAAM,gBAAgB,gBAA+B,cAAc;",
  "names": []
}
