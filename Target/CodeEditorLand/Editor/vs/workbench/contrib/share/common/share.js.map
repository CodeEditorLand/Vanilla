{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/share/common/share.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { Selection } from \"../../../../editor/common/core/selection.js\";\nimport type { LanguageSelector } from \"../../../../editor/common/languageSelector.js\";\nimport type { ISubmenuItem } from \"../../../../platform/actions/common/actions.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\n\nexport interface IShareableItem {\n\tresourceUri: URI;\n\tselection?: Selection;\n}\n\nexport interface IShareProvider {\n\treadonly id: string;\n\treadonly label: string;\n\treadonly priority: number;\n\treadonly selector: LanguageSelector;\n\tprepareShare?(\n\t\titem: IShareableItem,\n\t\ttoken: CancellationToken,\n\t): Thenable<boolean | undefined>;\n\tprovideShare(\n\t\titem: IShareableItem,\n\t\ttoken: CancellationToken,\n\t): Thenable<URI | string | undefined>;\n}\n\nexport const IShareService = createDecorator<IShareService>(\"shareService\");\nexport interface IShareService {\n\t_serviceBrand: undefined;\n\n\tregisterShareProvider(provider: IShareProvider): IDisposable;\n\tgetShareActions(): ISubmenuItem[];\n\tprovideShare(\n\t\titem: IShareableItem,\n\t\ttoken: CancellationToken,\n\t): Thenable<URI | string | undefined>;\n}\n"],
  "mappings": "AAWA,SAAS,uBAAuB;AAsBzB,MAAM,gBAAgB,gBAA+B,cAAc;",
  "names": []
}
