{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/localization/electron-sandbox/localization.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport * as platform from \"../../../../base/common/platform.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\ttype DidUninstallExtensionEvent,\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n\ttype ILocalExtension,\n\ttype InstallExtensionResult,\n\tInstallOperation,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport {\n\tINotificationService,\n\tNeverShowAgainScope,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { ILocaleService } from \"../../../services/localization/common/locale.js\";\nimport { IExtensionsWorkbenchService } from \"../../extensions/common/extensions.js\";\nimport { BaseLocalizationWorkbenchContribution } from \"../common/localization.contribution.js\";\nimport { minimumTranslatedStrings } from \"./minimalTranslations.js\";\n\nclass NativeLocalizationWorkbenchContribution extends BaseLocalizationWorkbenchContribution {\n\tprivate static LANGUAGEPACK_SUGGESTION_IGNORE_STORAGE_KEY =\n\t\t\"extensionsAssistant/languagePackSuggestionIgnore\";\n\n\tconstructor(\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@ILocaleService private readonly localeService: ILocaleService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IExtensionManagementService\n\t\tprivate readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService\n\t\tprivate readonly galleryService: IExtensionGalleryService,\n\t\t@IExtensionsWorkbenchService\n\t\tprivate readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\n\t\tthis.checkAndInstall();\n\t\tthis._register(\n\t\t\tthis.extensionManagementService.onDidInstallExtensions((e) =>\n\t\t\t\tthis.onDidInstallExtensions(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.extensionManagementService.onDidUninstallExtension((e) =>\n\t\t\t\tthis.onDidUninstallExtension(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async onDidInstallExtensions(\n\t\tresults: readonly InstallExtensionResult[],\n\t): Promise<void> {\n\t\tfor (const result of results) {\n\t\t\tif (result.operation === InstallOperation.Install && result.local) {\n\t\t\t\tawait this.onDidInstallExtension(\n\t\t\t\t\tresult.local,\n\t\t\t\t\t!!result.context?.extensionsSync,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async onDidInstallExtension(\n\t\tlocalExtension: ILocalExtension,\n\t\tfromSettingsSync: boolean,\n\t): Promise<void> {\n\t\tconst localization =\n\t\t\tlocalExtension.manifest.contributes?.localizations?.[0];\n\t\tif (!localization || platform.language === localization.languageId) {\n\t\t\treturn;\n\t\t}\n\t\tconst { languageId, languageName } = localization;\n\n\t\tthis.notificationService.prompt(\n\t\t\tSeverity.Info,\n\t\t\tlocalize(\n\t\t\t\t\"updateLocale\",\n\t\t\t\t\"Would you like to change {0}'s display language to {1} and restart?\",\n\t\t\t\tthis.productService.nameLong,\n\t\t\t\tlanguageName || languageId,\n\t\t\t),\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"changeAndRestart\",\n\t\t\t\t\t\t\"Change Language and Restart\",\n\t\t\t\t\t),\n\t\t\t\t\trun: async () => {\n\t\t\t\t\t\tawait this.localeService.setLocale(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: languageId,\n\t\t\t\t\t\t\t\tlabel: languageName ?? languageId,\n\t\t\t\t\t\t\t\textensionId: localExtension.identifier.id,\n\t\t\t\t\t\t\t\t// If settings sync installs the language pack, then we would have just shown the notification so no\n\t\t\t\t\t\t\t\t// need to show the dialog.\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t{\n\t\t\t\tsticky: true,\n\t\t\t\tneverShowAgain: {\n\t\t\t\t\tid: \"langugage.update.donotask\",\n\t\t\t\t\tisSecondary: true,\n\t\t\t\t\tscope: NeverShowAgainScope.APPLICATION,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate async onDidUninstallExtension(\n\t\t_event: DidUninstallExtensionEvent,\n\t): Promise<void> {\n\t\tif (!(await this.isLocaleInstalled(platform.language))) {\n\t\t\tthis.localeService.setLocale({\n\t\t\t\tid: \"en\",\n\t\t\t\tlabel: \"English\",\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async checkAndInstall(): Promise<void> {\n\t\tconst language = platform.language;\n\t\tlet locale = platform.locale ?? \"\";\n\t\tconst languagePackSuggestionIgnoreList: string[] = JSON.parse(\n\t\t\tthis.storageService.get(\n\t\t\t\tNativeLocalizationWorkbenchContribution.LANGUAGEPACK_SUGGESTION_IGNORE_STORAGE_KEY,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\"[]\",\n\t\t\t),\n\t\t);\n\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!language || !locale || platform.Language.isDefaultVariant()) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tlocale.startsWith(language) ||\n\t\t\tlanguagePackSuggestionIgnoreList.includes(locale)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst installed = await this.isLocaleInstalled(locale);\n\t\tif (installed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fullLocale = locale;\n\t\tlet tagResult = await this.galleryService.query(\n\t\t\t{ text: `tag:lp-${locale}` },\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tif (tagResult.total === 0) {\n\t\t\t// Trim the locale and try again.\n\t\t\tlocale = locale.split(\"-\")[0];\n\t\t\ttagResult = await this.galleryService.query(\n\t\t\t\t{ text: `tag:lp-${locale}` },\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t\tif (tagResult.total === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst extensionToInstall =\n\t\t\ttagResult.total === 1\n\t\t\t\t? tagResult.firstPage[0]\n\t\t\t\t: tagResult.firstPage.find(\n\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\te.publisher === \"MS-CEINTL\" &&\n\t\t\t\t\t\t\te.name.startsWith(\"vscode-language-pack\"),\n\t\t\t\t\t);\n\t\tconst extensionToFetchTranslationsFrom =\n\t\t\textensionToInstall ?? tagResult.firstPage[0];\n\n\t\tif (!extensionToFetchTranslationsFrom.assets.manifest) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [manifest, translation] = await Promise.all([\n\t\t\tthis.galleryService.getManifest(\n\t\t\t\textensionToFetchTranslationsFrom,\n\t\t\t\tCancellationToken.None,\n\t\t\t),\n\t\t\tthis.galleryService.getCoreTranslation(\n\t\t\t\textensionToFetchTranslationsFrom,\n\t\t\t\tlocale,\n\t\t\t),\n\t\t]);\n\t\tconst loc = manifest?.contributes?.localizations?.find((x) =>\n\t\t\tlocale.startsWith(x.languageId.toLowerCase()),\n\t\t);\n\t\tconst languageName = loc ? loc.languageName || locale : locale;\n\t\tconst languageDisplayName = loc\n\t\t\t? loc.localizedLanguageName || loc.languageName || locale\n\t\t\t: locale;\n\t\tconst translationsFromPack: { [key: string]: string } =\n\t\t\ttranslation?.contents?.[\n\t\t\t\t\"vs/workbench/contrib/localization/electron-sandbox/minimalTranslations\"\n\t\t\t] ?? {};\n\t\tconst promptMessageKey = extensionToInstall\n\t\t\t? \"installAndRestartMessage\"\n\t\t\t: \"showLanguagePackExtensions\";\n\t\tconst useEnglish = !translationsFromPack[promptMessageKey];\n\n\t\tconst translations: { [key: string]: string } = {};\n\t\tObject.keys(minimumTranslatedStrings).forEach((key) => {\n\t\t\tif (!translationsFromPack[key] || useEnglish) {\n\t\t\t\ttranslations[key] = minimumTranslatedStrings[key].replace(\n\t\t\t\t\t\"{0}\",\n\t\t\t\t\t() => languageName,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttranslations[key] =\n\t\t\t\t\t`${translationsFromPack[key].replace(\"{0}\", () => languageDisplayName)} (${minimumTranslatedStrings[key].replace(\"{0}\", () => languageName)})`;\n\t\t\t}\n\t\t});\n\n\t\tconst logUserReaction = (userReaction: string) => {\n\t\t\t/* __GDPR__\n\t\t\t\t\"languagePackSuggestion:popup\" : {\n\t\t\t\t\t\"owner\": \"TylerLeonhardt\",\n\t\t\t\t\t\"userReaction\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"language\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryService.publicLog(\"languagePackSuggestion:popup\", {\n\t\t\t\tuserReaction,\n\t\t\t\tlanguage: locale,\n\t\t\t});\n\t\t};\n\n\t\tconst searchAction = {\n\t\t\tlabel: translations[\"searchMarketplace\"],\n\t\t\trun: async () => {\n\t\t\t\tlogUserReaction(\"search\");\n\t\t\t\tawait this.extensionsWorkbenchService.openSearch(\n\t\t\t\t\t`tag:lp-${locale}`,\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\n\t\tconst installAndRestartAction = {\n\t\t\tlabel: translations[\"installAndRestart\"],\n\t\t\trun: async () => {\n\t\t\t\tlogUserReaction(\"installAndRestart\");\n\t\t\t\tawait this.localeService.setLocale(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: locale,\n\t\t\t\t\t\tlabel: languageName,\n\t\t\t\t\t\textensionId: extensionToInstall?.identifier.id,\n\t\t\t\t\t\tgalleryExtension: extensionToInstall,\n\t\t\t\t\t\t// The user will be prompted if they want to install the language pack before this.\n\t\t\t\t\t},\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\n\t\tconst promptMessage = translations[promptMessageKey];\n\n\t\tthis.notificationService.prompt(\n\t\t\tSeverity.Info,\n\t\t\tpromptMessage,\n\t\t\t[\n\t\t\t\textensionToInstall ? installAndRestartAction : searchAction,\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"neverAgain\", \"Don't Show Again\"),\n\t\t\t\t\tisSecondary: true,\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tlanguagePackSuggestionIgnoreList.push(fullLocale);\n\t\t\t\t\t\tthis.storageService.store(\n\t\t\t\t\t\t\tNativeLocalizationWorkbenchContribution.LANGUAGEPACK_SUGGESTION_IGNORE_STORAGE_KEY,\n\t\t\t\t\t\t\tJSON.stringify(languagePackSuggestionIgnoreList),\n\t\t\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\t\t\tStorageTarget.USER,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlogUserReaction(\"neverShowAgain\");\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t{\n\t\t\t\tonCancel: () => {\n\t\t\t\t\tlogUserReaction(\"cancelled\");\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate async isLocaleInstalled(locale: string): Promise<boolean> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\treturn installed.some(\n\t\t\t(i) =>\n\t\t\t\t!!i.manifest.contributes?.localizations?.length &&\n\t\t\t\ti.manifest.contributes.localizations.some((l) =>\n\t\t\t\t\tlocale.startsWith(l.languageId.toLowerCase()),\n\t\t\t\t),\n\t\t);\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n);\nworkbenchRegistry.registerWorkbenchContribution(\n\tNativeLocalizationWorkbenchContribution,\n\tLifecyclePhase.Eventually,\n);\n"],
  "mappings": "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",
  "names": []
}
