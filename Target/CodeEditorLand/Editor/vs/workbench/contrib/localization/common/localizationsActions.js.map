{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/localization/common/localizationsActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n} from \"../../../../platform/actions/common/actions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\ttype ILanguagePackItem,\n\tILanguagePackService,\n} from \"../../../../platform/languagePacks/common/languagePacks.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { ILocaleService } from \"../../../services/localization/common/locale.js\";\nimport { IExtensionsWorkbenchService } from \"../../extensions/common/extensions.js\";\n\nexport class ConfigureDisplayLanguageAction extends Action2 {\n\tpublic static readonly ID = \"workbench.action.configureLocale\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ConfigureDisplayLanguageAction.ID,\n\t\t\ttitle: localize2(\"configureLocale\", \"Configure Display Language\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"configureLocaleDescription\",\n\t\t\t\t\t\"Changes the locale of VS Code based on installed language packs. Common languages include French, Chinese, Spanish, Japanese, German, Korean, and more.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst languagePackService: ILanguagePackService =\n\t\t\taccessor.get(ILanguagePackService);\n\t\tconst quickInputService: IQuickInputService =\n\t\t\taccessor.get(IQuickInputService);\n\t\tconst localeService: ILocaleService = accessor.get(ILocaleService);\n\t\tconst extensionWorkbenchService: IExtensionsWorkbenchService =\n\t\t\taccessor.get(IExtensionsWorkbenchService);\n\n\t\tconst installedLanguages =\n\t\t\tawait languagePackService.getInstalledLanguages();\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst qp = disposables.add(\n\t\t\tquickInputService.createQuickPick<ILanguagePackItem>({\n\t\t\t\tuseSeparators: true,\n\t\t\t}),\n\t\t);\n\t\tqp.matchOnDescription = true;\n\t\tqp.placeholder = localize(\"chooseLocale\", \"Select Display Language\");\n\n\t\tif (installedLanguages?.length) {\n\t\t\tconst items: Array<ILanguagePackItem | IQuickPickSeparator> = [\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\"installed\", \"Installed\"),\n\t\t\t\t},\n\t\t\t];\n\t\t\tqp.items = items.concat(\n\t\t\t\tthis.withMoreInfoButton(installedLanguages),\n\t\t\t);\n\t\t}\n\n\t\tconst source = new CancellationTokenSource();\n\t\tdisposables.add(\n\t\t\tqp.onDispose(() => {\n\t\t\t\tsource.cancel();\n\t\t\t\tdisposables.dispose();\n\t\t\t}),\n\t\t);\n\n\t\tconst installedSet = new Set<string>(\n\t\t\tinstalledLanguages?.map((language) => language.id!) ?? [],\n\t\t);\n\t\tlanguagePackService\n\t\t\t.getAvailableLanguages()\n\t\t\t.then((availableLanguages) => {\n\t\t\t\tconst newLanguages = availableLanguages.filter(\n\t\t\t\t\t(l) => l.id && !installedSet.has(l.id),\n\t\t\t\t);\n\t\t\t\tif (newLanguages.length) {\n\t\t\t\t\tqp.items = [\n\t\t\t\t\t\t...qp.items,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\tlabel: localize(\"available\", \"Available\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...this.withMoreInfoButton(newLanguages),\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tqp.busy = false;\n\t\t\t});\n\n\t\tdisposables.add(\n\t\t\tqp.onDidAccept(async () => {\n\t\t\t\tconst selectedLanguage = qp.activeItems[0] as\n\t\t\t\t\t| ILanguagePackItem\n\t\t\t\t\t| undefined;\n\t\t\t\tif (selectedLanguage) {\n\t\t\t\t\tqp.hide();\n\t\t\t\t\tawait localeService.setLocale(selectedLanguage);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tqp.onDidTriggerItemButton(async (e) => {\n\t\t\t\tqp.hide();\n\t\t\t\tif (e.item.extensionId) {\n\t\t\t\t\tawait extensionWorkbenchService.open(e.item.extensionId);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tqp.show();\n\t\tqp.busy = true;\n\t}\n\n\tprivate withMoreInfoButton(\n\t\titems: ILanguagePackItem[],\n\t): ILanguagePackItem[] {\n\t\tfor (const item of items) {\n\t\t\tif (item.extensionId) {\n\t\t\t\titem.buttons = [\n\t\t\t\t\t{\n\t\t\t\t\t\ttooltip: localize(\"moreInfo\", \"More Info\"),\n\t\t\t\t\t\ticonClass: \"codicon-info\",\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t}\n}\n\nexport class ClearDisplayLanguageAction extends Action2 {\n\tpublic static readonly ID = \"workbench.action.clearLocalePreference\";\n\tpublic static readonly LABEL = localize2(\n\t\t\"clearDisplayLanguage\",\n\t\t\"Clear Display Language Preference\",\n\t);\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ClearDisplayLanguageAction.ID,\n\t\t\ttitle: ClearDisplayLanguageAction.LABEL,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst localeService: ILocaleService = accessor.get(ILocaleService);\n\t\tawait localeService.clearLocalePreference();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
