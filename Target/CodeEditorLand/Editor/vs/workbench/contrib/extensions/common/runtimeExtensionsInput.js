import{Codicon as n}from"../../../../base/common/codicons.js";import"../../../../base/common/themables.js";import{URI as o}from"../../../../base/common/uri.js";import*as r from"../../../../nls.js";import{registerIcon as s}from"../../../../platform/theme/common/iconRegistry.js";import{EditorInputCapabilities as i}from"../../../common/editor.js";import{EditorInput as a}from"../../../common/editor/editorInput.js";const c=s("runtime-extensions-editor-label-icon",n.extensions,r.localize("runtimeExtensionEditorLabelIcon","Icon of the runtime extensions editor label."));class e extends a{static ID="workbench.runtimeExtensions.input";get typeId(){return e.ID}get capabilities(){return i.Readonly|i.Singleton}static _instance;static get instance(){return(!e._instance||e._instance.isDisposed())&&(e._instance=new e),e._instance}resource=o.from({scheme:"runtime-extensions",path:"default"});getName(){return r.localize("extensionsInputName","Running Extensions")}getIcon(){return c}matches(t){return super.matches(t)?!0:t instanceof e}}export{e as RuntimeExtensionsInput};
