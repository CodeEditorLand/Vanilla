{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/common/extensionsInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { join } from \"../../../../base/common/path.js\";\nimport type { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type { IEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport { areSameExtensions } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport {\n\tEditorInputCapabilities,\n\ttype IUntypedEditorInput,\n} from \"../../../common/editor.js\";\nimport { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport type { ExtensionEditorTab, IExtension } from \"./extensions.js\";\n\nconst ExtensionEditorIcon = registerIcon(\n\t\"extensions-editor-label-icon\",\n\tCodicon.extensions,\n\tlocalize(\n\t\t\"extensionsEditorLabelIcon\",\n\t\t\"Icon of the extensions editor label.\",\n\t),\n);\n\nexport interface IExtensionEditorOptions extends IEditorOptions {\n\tshowPreReleaseVersion?: boolean;\n\ttab?: ExtensionEditorTab;\n\tfeature?: string;\n\tsideByside?: boolean;\n}\n\nexport class ExtensionsInput extends EditorInput {\n\tstatic readonly ID = \"workbench.extensions.input2\";\n\n\toverride get typeId(): string {\n\t\treturn ExtensionsInput.ID;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\treturn (\n\t\t\tEditorInputCapabilities.Readonly | EditorInputCapabilities.Singleton\n\t\t);\n\t}\n\n\toverride get resource() {\n\t\treturn URI.from({\n\t\t\tscheme: Schemas.extension,\n\t\t\tpath: join(this._extension.identifier.id, \"extension\"),\n\t\t});\n\t}\n\n\tconstructor(private _extension: IExtension) {\n\t\tsuper();\n\t}\n\n\tget extension(): IExtension {\n\t\treturn this._extension;\n\t}\n\n\toverride getName(): string {\n\t\treturn localize(\n\t\t\t\"extensionsInputName\",\n\t\t\t\"Extension: {0}\",\n\t\t\tthis._extension.displayName,\n\t\t);\n\t}\n\n\toverride getIcon(): ThemeIcon | undefined {\n\t\treturn ExtensionEditorIcon;\n\t}\n\n\toverride matches(other: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(other)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (\n\t\t\tother instanceof ExtensionsInput &&\n\t\t\tareSameExtensions(\n\t\t\t\tthis._extension.identifier,\n\t\t\t\tother._extension.identifier,\n\t\t\t)\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,eAAe;AACxB,SAAS,YAAY;AAErB,SAAS,WAAW;AACpB,SAAS,gBAAgB;AAEzB,SAAS,yBAAyB;AAClC,SAAS,oBAAoB;AAC7B;AAAA,EACC;AAAA,OAEM;AACP,SAAS,mBAAmB;AAG5B,MAAM,sBAAsB;AAAA,EAC3B;AAAA,EACA,QAAQ;AAAA,EACR;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AASO,MAAM,wBAAwB,YAAY;AAAA,EAoBhD,YAAoB,YAAwB;AAC3C,UAAM;AADa;AAAA,EAEpB;AAAA,EA3DD,OAqCiD;AAAA;AAAA;AAAA,EAChD,OAAgB,KAAK;AAAA,EAErB,IAAa,SAAiB;AAC7B,WAAO,gBAAgB;AAAA,EACxB;AAAA,EAEA,IAAa,eAAwC;AACpD,WACC,wBAAwB,WAAW,wBAAwB;AAAA,EAE7D;AAAA,EAEA,IAAa,WAAW;AACvB,WAAO,IAAI,KAAK;AAAA,MACf,QAAQ,QAAQ;AAAA,MAChB,MAAM,KAAK,KAAK,WAAW,WAAW,IAAI,WAAW;AAAA,IACtD,CAAC;AAAA,EACF;AAAA,EAMA,IAAI,YAAwB;AAC3B,WAAO,KAAK;AAAA,EACb;AAAA,EAES,UAAkB;AAC1B,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA,KAAK,WAAW;AAAA,IACjB;AAAA,EACD;AAAA,EAES,UAAiC;AACzC,WAAO;AAAA,EACR;AAAA,EAES,QAAQ,OAAmD;AACnE,QAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,aAAO;AAAA,IACR;AAEA,WACC,iBAAiB,mBACjB;AAAA,MACC,KAAK,WAAW;AAAA,MAChB,MAAM,WAAW;AAAA,IAClB;AAAA,EAEF;AACD;",
  "names": []
}
