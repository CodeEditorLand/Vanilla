{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/common/extensionQuery.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EXTENSION_CATEGORIES } from \"../../../../platform/extensions/common/extensions.js\";\n\nexport class Query {\n\tconstructor(\n\t\tpublic value: string,\n\t\tpublic sortBy: string,\n\t) {\n\t\tthis.value = value.trim();\n\t}\n\n\tstatic suggestions(query: string): string[] {\n\t\tconst commands = [\n\t\t\t\"installed\",\n\t\t\t\"updates\",\n\t\t\t\"enabled\",\n\t\t\t\"disabled\",\n\t\t\t\"builtin\",\n\t\t\t\"featured\",\n\t\t\t\"popular\",\n\t\t\t\"recommended\",\n\t\t\t\"recentlyPublished\",\n\t\t\t\"workspaceUnsupported\",\n\t\t\t\"deprecated\",\n\t\t\t\"sort\",\n\t\t\t\"category\",\n\t\t\t\"tag\",\n\t\t\t\"ext\",\n\t\t\t\"id\",\n\t\t] as const;\n\t\tconst subcommands = {\n\t\t\tsort: [\"installs\", \"rating\", \"name\", \"publishedDate\", \"updateDate\"],\n\t\t\tcategory: EXTENSION_CATEGORIES.map((c) => `\"${c.toLowerCase()}\"`),\n\t\t\ttag: [\"\"],\n\t\t\text: [\"\"],\n\t\t\tid: [\"\"],\n\t\t} as const;\n\n\t\tconst queryContains = (substr: string) => query.indexOf(substr) > -1;\n\t\tconst hasSort = subcommands.sort.some((subcommand) =>\n\t\t\tqueryContains(`@sort:${subcommand}`),\n\t\t);\n\t\tconst hasCategory = subcommands.category.some((subcommand) =>\n\t\t\tqueryContains(`@category:${subcommand}`),\n\t\t);\n\n\t\treturn commands.flatMap((command) => {\n\t\t\tif (\n\t\t\t\t(hasSort && command === \"sort\") ||\n\t\t\t\t(hasCategory && command === \"category\")\n\t\t\t) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tif (command in subcommands) {\n\t\t\t\treturn (subcommands as Record<string, readonly string[]>)[\n\t\t\t\t\tcommand\n\t\t\t\t].map(\n\t\t\t\t\t(subcommand) =>\n\t\t\t\t\t\t`@${command}:${subcommand}${subcommand === \"\" ? \"\" : \" \"}`,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn queryContains(`@${command}`) ? [] : [`@${command} `];\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic parse(value: string): Query {\n\t\tlet sortBy = \"\";\n\t\tvalue = value.replace(\n\t\t\t/@sort:(\\w+)(-\\w*)?/g,\n\t\t\t(match, by: string, order: string) => {\n\t\t\t\tsortBy = by;\n\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t);\n\t\treturn new Query(value, sortBy);\n\t}\n\n\ttoString(): string {\n\t\tlet result = this.value;\n\n\t\tif (this.sortBy) {\n\t\t\tresult = `${result}${result ? \" \" : \"\"}@sort:${this.sortBy}`;\n\t\t}\n\t\treturn result;\n\t}\n\n\tisValid(): boolean {\n\t\treturn !/@outdated/.test(this.value);\n\t}\n\n\tequals(other: Query): boolean {\n\t\treturn this.value === other.value && this.sortBy === other.sortBy;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,4BAA4B;AAE9B,MAAM,MAAM;AAAA,EAClB,YACQ,OACA,QACN;AAFM;AACA;AAEP,SAAK,QAAQ,MAAM,KAAK;AAAA,EACzB;AAAA,EAbD,OAOmB;AAAA;AAAA;AAAA,EAQlB,OAAO,YAAY,OAAyB;AAC3C,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,cAAc;AAAA,MACnB,MAAM,CAAC,YAAY,UAAU,QAAQ,iBAAiB,YAAY;AAAA,MAClE,UAAU,qBAAqB,IAAI,CAAC,MAAM,IAAI,EAAE,YAAY,CAAC,GAAG;AAAA,MAChE,KAAK,CAAC,EAAE;AAAA,MACR,KAAK,CAAC,EAAE;AAAA,MACR,IAAI,CAAC,EAAE;AAAA,IACR;AAEA,UAAM,gBAAgB,wBAAC,WAAmB,MAAM,QAAQ,MAAM,IAAI,IAA5C;AACtB,UAAM,UAAU,YAAY,KAAK;AAAA,MAAK,CAAC,eACtC,cAAc,SAAS,UAAU,EAAE;AAAA,IACpC;AACA,UAAM,cAAc,YAAY,SAAS;AAAA,MAAK,CAAC,eAC9C,cAAc,aAAa,UAAU,EAAE;AAAA,IACxC;AAEA,WAAO,SAAS,QAAQ,CAAC,YAAY;AACpC,UACE,WAAW,YAAY,UACvB,eAAe,YAAY,YAC3B;AACD,eAAO,CAAC;AAAA,MACT;AACA,UAAI,WAAW,aAAa;AAC3B,eAAQ,YACP,OACD,EAAE;AAAA,UACD,CAAC,eACA,IAAI,OAAO,IAAI,UAAU,GAAG,eAAe,KAAK,KAAK,GAAG;AAAA,QAC1D;AAAA,MACD,OAAO;AACN,eAAO,cAAc,IAAI,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,GAAG;AAAA,MAC3D;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,OAAO,MAAM,OAAsB;AAClC,QAAI,SAAS;AACb,YAAQ,MAAM;AAAA,MACb;AAAA,MACA,CAAC,OAAO,IAAY,UAAkB;AACrC,iBAAS;AAET,eAAO;AAAA,MACR;AAAA,IACD;AACA,WAAO,IAAI,MAAM,OAAO,MAAM;AAAA,EAC/B;AAAA,EAEA,WAAmB;AAClB,QAAI,SAAS,KAAK;AAElB,QAAI,KAAK,QAAQ;AAChB,eAAS,GAAG,MAAM,GAAG,SAAS,MAAM,EAAE,SAAS,KAAK,MAAM;AAAA,IAC3D;AACA,WAAO;AAAA,EACR;AAAA,EAEA,UAAmB;AAClB,WAAO,CAAC,YAAY,KAAK,KAAK,KAAK;AAAA,EACpC;AAAA,EAEA,OAAO,OAAuB;AAC7B,WAAO,KAAK,UAAU,MAAM,SAAS,KAAK,WAAW,MAAM;AAAA,EAC5D;AACD;",
  "names": []
}
