{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/common/extensionsFileTemplate.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { EXTENSION_IDENTIFIER_PATTERN } from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\n\nexport const ExtensionsConfigurationSchemaId = \"vscode://schemas/extensions\";\nexport const ExtensionsConfigurationSchema: IJSONSchema = {\n\tid: ExtensionsConfigurationSchemaId,\n\tallowComments: true,\n\tallowTrailingCommas: true,\n\ttype: \"object\",\n\ttitle: localize(\"app.extensions.json.title\", \"Extensions\"),\n\tadditionalProperties: false,\n\tproperties: {\n\t\trecommendations: {\n\t\t\ttype: \"array\",\n\t\t\tdescription: localize(\n\t\t\t\t\"app.extensions.json.recommendations\",\n\t\t\t\t\"List of extensions which should be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.\",\n\t\t\t),\n\t\t\titems: {\n\t\t\t\ttype: \"string\",\n\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\terrorMessage: localize(\n\t\t\t\t\t\"app.extension.identifier.errorMessage\",\n\t\t\t\t\t\"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\",\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\tunwantedRecommendations: {\n\t\t\ttype: \"array\",\n\t\t\tdescription: localize(\n\t\t\t\t\"app.extensions.json.unwantedRecommendations\",\n\t\t\t\t\"List of extensions recommended by VS Code that should not be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.\",\n\t\t\t),\n\t\t\titems: {\n\t\t\t\ttype: \"string\",\n\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\terrorMessage: localize(\n\t\t\t\t\t\"app.extension.identifier.errorMessage\",\n\t\t\t\t\t\"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\",\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const ExtensionsConfigurationInitialContent: string = [\n\t\"{\",\n\t\"\\t// See https://go.microsoft.com/fwlink/?LinkId=827846 to learn about workspace recommendations.\",\n\t\"\\t// Extension identifier format: ${publisher}.${name}. Example: vscode.csharp\",\n\t\"\",\n\t\"\\t// List of extensions which should be recommended for users of this workspace.\",\n\t'\\t\"recommendations\": [',\n\t\"\\t\\t\",\n\t\"\\t],\",\n\t\"\\t// List of extensions recommended by VS Code that should not be recommended for users of this workspace.\",\n\t'\\t\"unwantedRecommendations\": [',\n\t\"\\t\\t\",\n\t\"\\t]\",\n\t\"}\",\n].join(\"\\n\");\n"],
  "mappings": "AAMA,SAAS,gBAAgB;AACzB,SAAS,oCAAoC;AAEtC,MAAM,kCAAkC;AACxC,MAAM,gCAA6C;AAAA,EACzD,IAAI;AAAA,EACJ,eAAe;AAAA,EACf,qBAAqB;AAAA,EACrB,MAAM;AAAA,EACN,OAAO,SAAS,6BAA6B,YAAY;AAAA,EACzD,sBAAsB;AAAA,EACtB,YAAY;AAAA,IACX,iBAAiB;AAAA,MAChB,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,MACA,OAAO;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,cAAc;AAAA,UACb;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,yBAAyB;AAAA,MACxB,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,MACA,OAAO;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,cAAc;AAAA,UACb;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,wCAAgD;AAAA,EAC5D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,EAAE,KAAK,IAAI;",
  "names": []
}
