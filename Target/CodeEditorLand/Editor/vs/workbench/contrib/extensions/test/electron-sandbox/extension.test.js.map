{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/test/electron-sandbox/extension.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ExtensionState } from '../../common/extensions.js';\nimport { Extension } from '../../browser/extensionsWorkbenchService.js';\nimport { IGalleryExtension, IGalleryExtensionProperties, ILocalExtension } from '../../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { ExtensionType, IExtensionManifest, TargetPlatform } from '../../../../../platform/extensions/common/extensions.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { getGalleryExtensionId } from '../../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { generateUuid } from '../../../../../base/common/uuid.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IProductService } from '../../../../../platform/product/common/productService.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('Extension Test', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(() => {\n\t\tinstantiationService = disposables.add(new TestInstantiationService());\n\t\tinstantiationService.stub(IProductService, { quality: 'insiders' });\n\t});\n\n\ttest('extension is not outdated when there is no local and gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, undefined, undefined, undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when there is local and no gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension(), undefined, undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when there is no local and has gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, undefined, aGalleryExtension(), undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when local and gallery are on same version', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension(), aGalleryExtension(), undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is outdated when local is older than gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }), aGalleryExtension('somext', { version: '1.0.1' }), undefined);\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is outdated when local is built in and older than gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { type: ExtensionType.System }), aGalleryExtension('somext', { version: '1.0.1' }), undefined);\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is not outdated when local is built in and older than gallery but product quality is stable', () => {\n\t\tinstantiationService.stub(IProductService, { quality: 'stable' });\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { type: ExtensionType.System }), aGalleryExtension('somext', { version: '1.0.1' }), undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is outdated when local and gallery are on same version but on different target platforms', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', {}, { targetPlatform: TargetPlatform.WIN32_ARM64 }), aGalleryExtension('somext', {}, { targetPlatform: TargetPlatform.WIN32_X64 }), undefined);\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is not outdated when local and gallery are on same version and local is on web', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', {}, { targetPlatform: TargetPlatform.WEB }), aGalleryExtension('somext'), undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when local and gallery are on same version and gallery is on web', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext'), aGalleryExtension('somext', {}, { targetPlatform: TargetPlatform.WEB }), undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when local is not pre-release but gallery is pre-release', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }), aGalleryExtension('somext', { version: '1.0.1' }, { isPreReleaseVersion: true }), undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is outdated when local and gallery are pre-releases', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { preRelease: true, isPreReleaseVersion: true }), aGalleryExtension('somext', { version: '1.0.1' }, { isPreReleaseVersion: true }), undefined);\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is outdated when local was opted to pre-release but current version is not pre-release', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { preRelease: true, isPreReleaseVersion: false }), aGalleryExtension('somext', { version: '1.0.1' }, { isPreReleaseVersion: true }), undefined);\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is outdated when local is pre-release but gallery is not', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { preRelease: true, isPreReleaseVersion: true }), aGalleryExtension('somext', { version: '1.0.1' }), undefined);\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is outdated when local was opted pre-release but current version is not and gallery is not', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { preRelease: true, isPreReleaseVersion: false }), aGalleryExtension('somext', { version: '1.0.1' }), undefined);\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\tfunction aLocalExtension(name: string = 'someext', manifest: Partial<IExtensionManifest> = {}, properties: Partial<ILocalExtension> = {}): ILocalExtension {\n\t\tmanifest = { name, publisher: 'pub', version: '1.0.0', ...manifest };\n\t\tproperties = {\n\t\t\ttype: ExtensionType.User,\n\t\t\tlocation: URI.file(`pub.${name}`),\n\t\t\tidentifier: { id: getGalleryExtensionId(manifest.publisher, manifest.name!) },\n\t\t\ttargetPlatform: TargetPlatform.UNDEFINED,\n\t\t\t...properties\n\t\t};\n\t\treturn <ILocalExtension>Object.create({ manifest, ...properties });\n\t}\n\n\tfunction aGalleryExtension(name: string = 'somext', properties: Partial<IGalleryExtension> = {}, galleryExtensionProperties: Partial<IGalleryExtensionProperties> = {}): IGalleryExtension {\n\t\tconst targetPlatform = galleryExtensionProperties.targetPlatform ?? TargetPlatform.UNDEFINED;\n\t\tconst galleryExtension = <IGalleryExtension>Object.create({ name, publisher: 'pub', version: '1.0.0', allTargetPlatforms: [targetPlatform], properties: {}, assets: {}, ...properties });\n\t\tgalleryExtension.properties = { ...galleryExtension.properties, dependencies: [], targetPlatform, ...galleryExtensionProperties };\n\t\tgalleryExtension.identifier = { id: getGalleryExtensionId(galleryExtension.publisher, galleryExtension.name), uuid: generateUuid() };\n\t\treturn <IGalleryExtension>galleryExtension;\n\t}\n\n});\n"],
  "mappings": "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",
  "names": []
}
