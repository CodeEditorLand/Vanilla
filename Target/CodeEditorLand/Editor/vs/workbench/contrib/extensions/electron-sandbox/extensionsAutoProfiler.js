var g=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var S=(f,e,r,t)=>{for(var i=t>1?void 0:t?_(e,r):e,s=f.length-1,c;s>=0;s--)(c=f[s])&&(i=(t?c(e,r,i):c(i))||i);return t&&i&&g(e,r,i),i},o=(f,e)=>(r,t)=>e(r,t,f);import{timeout as y}from"../../../../base/common/async.js";import{VSBuffer as x}from"../../../../base/common/buffer.js";import{CancellationTokenSource as E}from"../../../../base/common/cancellation.js";import{onUnexpectedError as w}from"../../../../base/common/errors.js";import"../../../../base/common/lifecycle.js";import{Schemas as P}from"../../../../base/common/network.js";import{joinPath as b}from"../../../../base/common/resources.js";import{TernarySearchTree as C}from"../../../../base/common/ternarySearchTree.js";import{URI as D}from"../../../../base/common/uri.js";import{generateUuid as N}from"../../../../base/common/uuid.js";import{localize as u}from"../../../../nls.js";import{IConfigurationService as R}from"../../../../platform/configuration/common/configuration.js";import{ExtensionIdentifier as I,ExtensionIdentifierSet as k}from"../../../../platform/extensions/common/extensions.js";import{IFileService as L}from"../../../../platform/files/common/files.js";import{IInstantiationService as U}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as T}from"../../../../platform/log/common/log.js";import{INotificationService as H,NotificationPriority as A,Severity as W}from"../../../../platform/notification/common/notification.js";import{IProfileAnalysisWorkerService as B}from"../../../../platform/profiling/electron-sandbox/profileAnalysisWorkerService.js";import{ITelemetryService as O}from"../../../../platform/telemetry/common/telemetry.js";import"../../../common/contributions.js";import{RuntimeExtensionsInput as F}from"../common/runtimeExtensionsInput.js";import{createSlowExtensionAction as M}from"./extensionsSlowActions.js";import{IExtensionHostProfileService as V}from"./runtimeExtensionsEditor.js";import{IEditorService as $}from"../../../services/editor/common/editorService.js";import{INativeWorkbenchEnvironmentService as K}from"../../../services/environment/electron-sandbox/environmentService.js";import{ExtensionHostKind as z}from"../../../services/extensions/common/extensionHostKind.js";import{IExtensionService as j}from"../../../services/extensions/common/extensions.js";import{ExtensionHostProfiler as J}from"../../../services/extensions/electron-sandbox/extensionHostProfiler.js";import{ITimerService as q}from"../../../services/timer/browser/timerService.js";let m=class{constructor(e,r,t,i,s,c,l,p,d,v,h,n){this._extensionService=e;this._extensionProfileService=r;this._telemetryService=t;this._logService=i;this._notificationService=s;this._editorService=c;this._instantiationService=l;this._environmentServie=p;this._profileAnalysisService=d;this._configService=v;this._fileService=h;n.perfBaseline.then(a=>{a<0||(this._perfBaseline=a,this._unresponsiveListener=e.onDidChangeResponsiveChange(this._onDidChangeResponsiveChange,this))})}_blame=new k;_session;_unresponsiveListener;_perfBaseline=-1;dispose(){this._unresponsiveListener?.dispose(),this._session?.dispose(!0)}async _onDidChangeResponsiveChange(e){if(e.extensionHostKind!==z.LocalProcess)return;const r=await e.getInspectListener(!0);if(r){if(e.isResponsive&&this._session)this._session.cancel(),this._logService.info("UNRESPONSIVE extension host: received responsive event and cancelling profiling session");else if(!e.isResponsive&&!this._session){const t=new E;this._session=t;let i;try{i=await this._instantiationService.createInstance(J,r.host,r.port).start()}catch{this._session=void 0;return}this._logService.info("UNRESPONSIVE extension host: starting to profile NOW");try{await y(5e3,t.token)}catch{}try{this._processCpuProfile(await i.stop())}catch(s){w(s)}finally{this._session=void 0}}}}async _processCpuProfile(e){if(await this._extensionService.whenInstalledExtensionsRegistered(),this._configService.getValue("application.experimental.rendererProfiling")){const n=C.forUris();n.fill(this._extensionService.extensions.map(a=>[a.extensionLocation,a])),await this._profileAnalysisService.analyseBottomUp(e.data,a=>n.findSubstr(D.parse(a))?.identifier.value??"<<not-found>>",this._perfBaseline,!1)}const r=this._extensionService.extensions.filter(n=>n.extensionLocation.scheme===P.file).map(n=>[n.extensionLocation,I.toKey(n.identifier)]),t=await this._profileAnalysisService.analyseByLocation(e.data,r);let i=0,s="",c=-1;for(const[n,a]of t)i+=a,a>c&&(c=a,s=n);const l=c/(i/100),p=await this._extensionService.getExtension(s);if(!p)return;const d=N(),v=b(this._environmentServie.tmpDir,`exthost-${Math.random().toString(16).slice(2,8)}.cpuprofile`);if(await this._fileService.writeFile(v,x.fromString(JSON.stringify(e.data))),this._logService.warn(`UNRESPONSIVE extension host: '${s}' took ${l}% of ${c/1e3}ms, saved PROFILE here: '${v}'`),this._telemetryService.publicLog2("exthostunresponsive",{sessionId:d,duration:i,data:t.map(n=>n[0]).flat(),id:I.toKey(p.identifier)}),this._extensionProfileService.setUnresponsiveProfile(p.identifier,e),!(l>=95&&c>=5e6))return;const h=await this._instantiationService.invokeFunction(M,p,e);h&&(this._blame.has(p.identifier)||this._blame.size>=3||(this._blame.add(p.identifier),this._notificationService.prompt(W.Warning,u("unresponsive-exthost","The extension '{0}' took a very long time to complete its last operation and it has prevented other extensions from running.",p.displayName||p.name),[{label:u("show","Show Extensions"),run:()=>this._editorService.openEditor(F.instance,{pinned:!0})},h],{priority:A.SILENT})))}};m=S([o(0,j),o(1,V),o(2,O),o(3,T),o(4,H),o(5,$),o(6,U),o(7,K),o(8,B),o(9,R),o(10,L),o(11,q)],m);export{m as ExtensionsAutoProfiler};
