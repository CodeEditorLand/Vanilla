{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/electron-sandbox/runtimeExtensionsEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from '../../../../base/common/actions.js';\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, IMenuService, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService, ServicesAccessor, createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IV8Profile, Utils } from '../../../../platform/profiling/common/profiling.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ActiveEditorContext } from '../../../common/contextkeys.js';\nimport { IEditorGroup } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService, SIDE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IExtensionFeaturesManagementService } from '../../../services/extensionManagement/common/extensionFeatures.js';\nimport { IExtensionHostProfile, IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { AbstractRuntimeExtensionsEditor, IRuntimeExtension } from '../browser/abstractRuntimeExtensionsEditor.js';\nimport { IExtensionsWorkbenchService } from '../common/extensions.js';\nimport { ReportExtensionIssueAction } from '../common/reportExtensionIssueAction.js';\nimport { SlowExtensionAction } from './extensionsSlowActions.js';\n\nexport const IExtensionHostProfileService = createDecorator<IExtensionHostProfileService>('extensionHostProfileService');\nexport const CONTEXT_PROFILE_SESSION_STATE = new RawContextKey<string>('profileSessionState', 'none');\nexport const CONTEXT_EXTENSION_HOST_PROFILE_RECORDED = new RawContextKey<boolean>('extensionHostProfileRecorded', false);\n\nexport enum ProfileSessionState {\n\tNone = 0,\n\tStarting = 1,\n\tRunning = 2,\n\tStopping = 3\n}\n\nexport interface IExtensionHostProfileService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeState: Event<void>;\n\treadonly onDidChangeLastProfile: Event<void>;\n\n\treadonly state: ProfileSessionState;\n\treadonly lastProfile: IExtensionHostProfile | null;\n\tlastProfileSavedTo: URI | undefined;\n\n\tstartProfiling(): void;\n\tstopProfiling(): void;\n\n\tgetUnresponsiveProfile(extensionId: ExtensionIdentifier): IExtensionHostProfile | undefined;\n\tsetUnresponsiveProfile(extensionId: ExtensionIdentifier, profile: IExtensionHostProfile): void;\n}\n\nexport class RuntimeExtensionsEditor extends AbstractRuntimeExtensionsEditor {\n\n\tprivate _profileInfo: IExtensionHostProfile | null;\n\tprivate _extensionsHostRecorded: IContextKey<boolean>;\n\tprivate _profileSessionState: IContextKey<string>;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionsWorkbenchService extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@IExtensionHostProfileService private readonly _extensionHostProfileService: IExtensionHostProfileService,\n\t\t@IExtensionFeaturesManagementService extensionFeaturesManagementService: IExtensionFeaturesManagementService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService menuService: IMenuService,\n\t) {\n\t\tsuper(group, telemetryService, themeService, contextKeyService, extensionsWorkbenchService, extensionService, notificationService, contextMenuService, instantiationService, storageService, labelService, environmentService, clipboardService, extensionFeaturesManagementService, hoverService, menuService);\n\t\tthis._profileInfo = this._extensionHostProfileService.lastProfile;\n\t\tthis._extensionsHostRecorded = CONTEXT_EXTENSION_HOST_PROFILE_RECORDED.bindTo(contextKeyService);\n\t\tthis._profileSessionState = CONTEXT_PROFILE_SESSION_STATE.bindTo(contextKeyService);\n\n\t\tthis._register(this._extensionHostProfileService.onDidChangeLastProfile(() => {\n\t\t\tthis._profileInfo = this._extensionHostProfileService.lastProfile;\n\t\t\tthis._extensionsHostRecorded.set(!!this._profileInfo);\n\t\t\tthis._updateExtensions();\n\t\t}));\n\t\tthis._register(this._extensionHostProfileService.onDidChangeState(() => {\n\t\t\tconst state = this._extensionHostProfileService.state;\n\t\t\tthis._profileSessionState.set(ProfileSessionState[state].toLowerCase());\n\t\t}));\n\t}\n\n\tprotected _getProfileInfo(): IExtensionHostProfile | null {\n\t\treturn this._profileInfo;\n\t}\n\n\tprotected _getUnresponsiveProfile(extensionId: ExtensionIdentifier): IExtensionHostProfile | undefined {\n\t\treturn this._extensionHostProfileService.getUnresponsiveProfile(extensionId);\n\t}\n\n\tprotected _createSlowExtensionAction(element: IRuntimeExtension): Action | null {\n\t\tif (element.unresponsiveProfile) {\n\t\t\treturn this._instantiationService.createInstance(SlowExtensionAction, element.description, element.unresponsiveProfile);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected _createReportExtensionIssueAction(element: IRuntimeExtension): Action | null {\n\t\tif (element.marketplaceInfo) {\n\t\t\treturn this._instantiationService.createInstance(ReportExtensionIssueAction, element.description);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class StartExtensionHostProfileAction extends Action2 {\n\tstatic readonly ID = 'workbench.extensions.action.extensionHostProfile';\n\tstatic readonly LABEL = nls.localize('extensionHostProfileStart', \"Start Extension Host Profile\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: StartExtensionHostProfileAction.ID,\n\t\t\ttitle: { value: StartExtensionHostProfileAction.LABEL, original: 'Start Extension Host Profile' },\n\t\t\tprecondition: CONTEXT_PROFILE_SESSION_STATE.isEqualTo('none'),\n\t\t\ticon: Codicon.circleFilled,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID), CONTEXT_PROFILE_SESSION_STATE.notEqualsTo('running')),\n\t\t\t\tgroup: 'navigation',\n\t\t\t}, {\n\t\t\t\tid: MenuId.ExtensionEditorContextMenu,\n\t\t\t\twhen: CONTEXT_PROFILE_SESSION_STATE.notEqualsTo('running'),\n\t\t\t\tgroup: 'profiling',\n\t\t\t}]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<any> {\n\t\tconst extensionHostProfileService = accessor.get(IExtensionHostProfileService);\n\t\textensionHostProfileService.startProfiling();\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class StopExtensionHostProfileAction extends Action2 {\n\tstatic readonly ID = 'workbench.extensions.action.stopExtensionHostProfile';\n\tstatic readonly LABEL = nls.localize('stopExtensionHostProfileStart', \"Stop Extension Host Profile\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: StopExtensionHostProfileAction.ID,\n\t\t\ttitle: { value: StopExtensionHostProfileAction.LABEL, original: 'Stop Extension Host Profile' },\n\t\t\ticon: Codicon.debugStop,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID), CONTEXT_PROFILE_SESSION_STATE.isEqualTo('running')),\n\t\t\t\tgroup: 'navigation',\n\t\t\t}, {\n\t\t\t\tid: MenuId.ExtensionEditorContextMenu,\n\t\t\t\twhen: CONTEXT_PROFILE_SESSION_STATE.isEqualTo('running'),\n\t\t\t\tgroup: 'profiling',\n\t\t\t}]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<any> {\n\t\tconst extensionHostProfileService = accessor.get(IExtensionHostProfileService);\n\t\textensionHostProfileService.stopProfiling();\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class OpenExtensionHostProfileACtion extends Action2 {\n\tstatic readonly LABEL = nls.localize('openExtensionHostProfile', \"Open Extension Host Profile\");\n\tstatic readonly ID = 'workbench.extensions.action.openExtensionHostProfile';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenExtensionHostProfileACtion.ID,\n\t\t\ttitle: { value: OpenExtensionHostProfileACtion.LABEL, original: 'Open Extension Host Profile' },\n\t\t\tprecondition: CONTEXT_EXTENSION_HOST_PROFILE_RECORDED,\n\t\t\ticon: Codicon.graph,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t}, {\n\t\t\t\tid: MenuId.ExtensionEditorContextMenu,\n\t\t\t\twhen: CONTEXT_EXTENSION_HOST_PROFILE_RECORDED,\n\t\t\t\tgroup: 'profiling',\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst extensionHostProfileService = accessor.get(IExtensionHostProfileService);\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tif (!extensionHostProfileService.lastProfileSavedTo) {\n\t\t\tawait commandService.executeCommand(SaveExtensionHostProfileAction.ID);\n\t\t}\n\t\tif (!extensionHostProfileService.lastProfileSavedTo) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: extensionHostProfileService.lastProfileSavedTo,\n\t\t\toptions: {\n\t\t\t\trevealIfOpened: true,\n\t\t\t\toverride: 'jsProfileVisualizer.cpuprofile.table',\n\t\t\t},\n\t\t}, SIDE_GROUP);\n\t}\n\n}\n\nexport class SaveExtensionHostProfileAction extends Action2 {\n\n\tstatic readonly LABEL = nls.localize('saveExtensionHostProfile', \"Save Extension Host Profile\");\n\tstatic readonly ID = 'workbench.extensions.action.saveExtensionHostProfile';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SaveExtensionHostProfileAction.ID,\n\t\t\ttitle: { value: SaveExtensionHostProfileAction.LABEL, original: 'Save Extension Host Profile' },\n\t\t\tprecondition: CONTEXT_EXTENSION_HOST_PROFILE_RECORDED,\n\t\t\ticon: Codicon.saveAll,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t}, {\n\t\t\t\tid: MenuId.ExtensionEditorContextMenu,\n\t\t\t\twhen: CONTEXT_EXTENSION_HOST_PROFILE_RECORDED,\n\t\t\t\tgroup: 'profiling',\n\t\t\t}]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<any> {\n\t\tconst environmentService = accessor.get(IWorkbenchEnvironmentService);\n\t\tconst extensionHostProfileService = accessor.get(IExtensionHostProfileService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\t\treturn this._asyncRun(environmentService, extensionHostProfileService, fileService, fileDialogService);\n\t}\n\n\tprivate async _asyncRun(\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\textensionHostProfileService: IExtensionHostProfileService,\n\t\tfileService: IFileService,\n\t\tfileDialogService: IFileDialogService\n\t): Promise<any> {\n\t\tconst picked = await fileDialogService.showSaveDialog({\n\t\t\ttitle: nls.localize('saveprofile.dialogTitle', \"Save Extension Host Profile\"),\n\t\t\tavailableFileSystems: [Schemas.file],\n\t\t\tdefaultUri: joinPath(await fileDialogService.defaultFilePath(), `CPU-${new Date().toISOString().replace(/[\\-:]/g, '')}.cpuprofile`),\n\t\t\tfilters: [{\n\t\t\t\tname: 'CPU Profiles',\n\t\t\t\textensions: ['cpuprofile', 'txt']\n\t\t\t}]\n\t\t});\n\n\t\tif (!picked) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst profileInfo = extensionHostProfileService.lastProfile;\n\t\tlet dataToWrite: object = profileInfo ? profileInfo.data : {};\n\n\t\tlet savePath = picked.fsPath;\n\n\t\tif (environmentService.isBuilt) {\n\t\t\t// when running from a not-development-build we remove\n\t\t\t// absolute filenames because we don't want to reveal anything\n\t\t\t// about users. We also append the `.txt` suffix to make it\n\t\t\t// easier to attach these files to GH issues\n\t\t\tdataToWrite = Utils.rewriteAbsolutePaths(dataToWrite as IV8Profile, 'piiRemoved');\n\n\t\t\tsavePath = savePath + '.txt';\n\t\t}\n\n\t\tconst saveURI = URI.file(savePath);\n\t\textensionHostProfileService.lastProfileSavedTo = saveURI;\n\t\treturn fileService.writeFile(saveURI, VSBuffer.fromString(JSON.stringify(profileInfo ? profileInfo.data : {}, null, '\\t')));\n\t}\n}\n\n"],
  "mappings": "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",
  "names": ["ProfileSessionState"]
}
