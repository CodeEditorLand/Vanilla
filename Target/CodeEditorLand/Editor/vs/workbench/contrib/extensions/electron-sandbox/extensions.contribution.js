var P=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var C=(i,e,t,n)=>{for(var o=n>1?void 0:n?k(e,t):e,v=i.length-1,D;v>=0;v--)(D=i[v])&&(o=(n?D(e,t,o):D(o))||o);return n&&o&&P(e,t,o),o},b=(i,e)=>(t,n)=>e(t,n,i);import{Codicon as m}from"../../../../base/common/codicons.js";import{Disposable as W}from"../../../../base/common/lifecycle.js";import{localize as x}from"../../../../nls.js";import{MenuId as d,MenuRegistry as E,registerAction2 as y}from"../../../../platform/actions/common/actions.js";import{CommandsRegistry as u}from"../../../../platform/commands/common/commands.js";import{ContextKeyExpr as R}from"../../../../platform/contextkey/common/contextkey.js";import{IExtensionRecommendationNotificationService as N}from"../../../../platform/extensionRecommendations/common/extensionRecommendations.js";import{ExtensionRecommendationNotificationServiceChannel as w}from"../../../../platform/extensionRecommendations/common/extensionRecommendationsIpc.js";import{SyncDescriptor as z}from"../../../../platform/instantiation/common/descriptors.js";import{InstantiationType as O,registerSingleton as _}from"../../../../platform/instantiation/common/extensions.js";import{IInstantiationService as l}from"../../../../platform/instantiation/common/instantiation.js";import{ISharedProcessService as F}from"../../../../platform/ipc/electron-sandbox/services.js";import{Registry as A}from"../../../../platform/registry/common/platform.js";import{EditorPaneDescriptor as H}from"../../../browser/editor.js";import{ActiveEditorContext as g}from"../../../common/contextkeys.js";import{Extensions as B}from"../../../common/contributions.js";import{EditorExtensions as T}from"../../../common/editor.js";import"../../../common/editor/editorInput.js";import{LifecyclePhase as S}from"../../../services/lifecycle/common/lifecycle.js";import{RuntimeExtensionsInput as h}from"../common/runtimeExtensionsInput.js";import{DebugExtensionHostAction as p,DebugExtensionsContribution as M}from"./debugExtensionHostAction.js";import{ExtensionHostProfileService as q}from"./extensionProfileService.js";import{CleanUpExtensionsFolderAction as X,OpenExtensionsFolderAction as K}from"./extensionsActions.js";import{ExtensionsAutoProfiler as U}from"./extensionsAutoProfiler.js";import{RemoteExtensionsInitializerContribution as j}from"./remoteExtensionsInit.js";import{CONTEXT_EXTENSION_HOST_PROFILE_RECORDED as G,CONTEXT_PROFILE_SESSION_STATE as L,IExtensionHostProfileService as J,RuntimeExtensionsEditor as r,SaveExtensionHostProfileAction as s,StartExtensionHostProfileAction as a,StopExtensionHostProfileAction as c}from"./runtimeExtensionsEditor.js";_(J,q,O.Delayed),A.as(T.EditorPane).registerEditorPane(H.create(r,r.ID,x("runtimeExtension","Running Extensions")),[new z(h)]);class Q{canSerialize(e){return!0}serialize(e){return""}deserialize(e){return h.instance}}A.as(T.EditorFactory).registerEditorSerializer(h.ID,Q);let I=class extends W{constructor(e,t){super(),t.registerChannel("extensionRecommendationNotification",new w(e)),this._register(y(K)),this._register(y(X))}};I=C([b(0,N),b(1,F)],I);const f=A.as(B.Workbench);f.registerWorkbenchContribution(I,S.Restored),f.registerWorkbenchContribution(U,S.Eventually),f.registerWorkbenchContribution(j,S.Restored),f.registerWorkbenchContribution(M,S.Restored),u.registerCommand(p.ID,(i,...e)=>i.get(l).createInstance(p).run(e)),u.registerCommand(a.ID,i=>{i.get(l).createInstance(a,a.ID,a.LABEL).run()}),u.registerCommand(c.ID,i=>{i.get(l).createInstance(c,c.ID,c.LABEL).run()}),u.registerCommand(s.ID,i=>{i.get(l).createInstance(s,s.ID,s.LABEL).run()}),E.appendMenuItem(d.EditorTitle,{command:{id:p.ID,title:p.LABEL,icon:m.debugStart},group:"navigation",when:g.isEqualTo(r.ID)}),E.appendMenuItem(d.CommandPalette,{command:{id:p.ID,title:x("debugExtensionHost","Debug Extensions In New Window"),category:x("developer","Developer"),icon:m.debugStart}}),E.appendMenuItem(d.EditorTitle,{command:{id:a.ID,title:a.LABEL,icon:m.circleFilled},group:"navigation",when:R.and(g.isEqualTo(r.ID),L.notEqualsTo("running"))}),E.appendMenuItem(d.EditorTitle,{command:{id:c.ID,title:c.LABEL,icon:m.debugStop},group:"navigation",when:R.and(g.isEqualTo(r.ID),L.isEqualTo("running"))}),E.appendMenuItem(d.EditorTitle,{command:{id:s.ID,title:s.LABEL,icon:m.saveAll,precondition:G},group:"navigation",when:R.and(g.isEqualTo(r.ID))});
