{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/electron-sandbox/extensionProfileService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { disposableWindowInterval } from '../../../../base/browser/dom.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { randomPort } from '../../../../base/common/ports.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { ExtensionIdentifier, ExtensionIdentifierMap } from '../../../../platform/extensions/common/extensions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { RuntimeExtensionsInput } from '../common/runtimeExtensionsInput.js';\nimport { IExtensionHostProfileService, ProfileSessionState } from './runtimeExtensionsEditor.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ExtensionHostKind } from '../../../services/extensions/common/extensionHostKind.js';\nimport { IExtensionHostProfile, IExtensionService, ProfileSession } from '../../../services/extensions/common/extensions.js';\nimport { ExtensionHostProfiler } from '../../../services/extensions/electron-sandbox/extensionHostProfiler.js';\nimport { IStatusbarEntry, IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment } from '../../../services/statusbar/browser/statusbar.js';\nimport { URI } from '../../../../base/common/uri.js';\n\nexport class ExtensionHostProfileService extends Disposable implements IExtensionHostProfileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeState: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeState: Event<void> = this._onDidChangeState.event;\n\n\tprivate readonly _onDidChangeLastProfile: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeLastProfile: Event<void> = this._onDidChangeLastProfile.event;\n\n\tprivate readonly _unresponsiveProfiles = new ExtensionIdentifierMap<IExtensionHostProfile>();\n\tprivate _profile: IExtensionHostProfile | null;\n\tprivate _profileSession: ProfileSession | null;\n\tprivate _state: ProfileSessionState = ProfileSessionState.None;\n\n\tprivate profilingStatusBarIndicator: IStatusbarEntryAccessor | undefined;\n\tprivate readonly profilingStatusBarIndicatorLabelUpdater = this._register(new MutableDisposable());\n\n\tpublic lastProfileSavedTo: URI | undefined;\n\tpublic get state() { return this._state; }\n\tpublic get lastProfile() { return this._profile; }\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INativeHostService private readonly _nativeHostService: INativeHostService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IStatusbarService private readonly _statusbarService: IStatusbarService,\n\t\t@IProductService private readonly _productService: IProductService\n\t) {\n\t\tsuper();\n\t\tthis._profile = null;\n\t\tthis._profileSession = null;\n\t\tthis._setState(ProfileSessionState.None);\n\n\t\tCommandsRegistry.registerCommand('workbench.action.extensionHostProfiler.stop', () => {\n\t\t\tthis.stopProfiling();\n\t\t\tthis._editorService.openEditor(RuntimeExtensionsInput.instance, { pinned: true });\n\t\t});\n\t}\n\n\tprivate _setState(state: ProfileSessionState): void {\n\t\tif (this._state === state) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = state;\n\n\t\tif (this._state === ProfileSessionState.Running) {\n\t\t\tthis.updateProfilingStatusBarIndicator(true);\n\t\t} else if (this._state === ProfileSessionState.Stopping) {\n\t\t\tthis.updateProfilingStatusBarIndicator(false);\n\t\t}\n\n\t\tthis._onDidChangeState.fire(undefined);\n\t}\n\n\tprivate updateProfilingStatusBarIndicator(visible: boolean): void {\n\t\tthis.profilingStatusBarIndicatorLabelUpdater.clear();\n\n\t\tif (visible) {\n\t\t\tconst indicator: IStatusbarEntry = {\n\t\t\t\tname: nls.localize('status.profiler', \"Extension Profiler\"),\n\t\t\t\ttext: nls.localize('profilingExtensionHost', \"Profiling Extension Host\"),\n\t\t\t\tshowProgress: true,\n\t\t\t\tariaLabel: nls.localize('profilingExtensionHost', \"Profiling Extension Host\"),\n\t\t\t\ttooltip: nls.localize('selectAndStartDebug', \"Click to stop profiling.\"),\n\t\t\t\tcommand: 'workbench.action.extensionHostProfiler.stop'\n\t\t\t};\n\n\t\t\tconst timeStarted = Date.now();\n\t\t\tconst handle = disposableWindowInterval(mainWindow, () => {\n\t\t\t\tthis.profilingStatusBarIndicator?.update({ ...indicator, text: nls.localize('profilingExtensionHostTime', \"Profiling Extension Host ({0} sec)\", Math.round((new Date().getTime() - timeStarted) / 1000)), });\n\t\t\t}, 1000);\n\t\t\tthis.profilingStatusBarIndicatorLabelUpdater.value = handle;\n\n\t\t\tif (!this.profilingStatusBarIndicator) {\n\t\t\t\tthis.profilingStatusBarIndicator = this._statusbarService.addEntry(indicator, 'status.profiler', StatusbarAlignment.RIGHT);\n\t\t\t} else {\n\t\t\t\tthis.profilingStatusBarIndicator.update(indicator);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.profilingStatusBarIndicator) {\n\t\t\t\tthis.profilingStatusBarIndicator.dispose();\n\t\t\t\tthis.profilingStatusBarIndicator = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async startProfiling(): Promise<any> {\n\t\tif (this._state !== ProfileSessionState.None) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst inspectPorts = await this._extensionService.getInspectPorts(ExtensionHostKind.LocalProcess, true);\n\n\t\tif (inspectPorts.length === 0) {\n\t\t\treturn this._dialogService.confirm({\n\t\t\t\ttype: 'info',\n\t\t\t\tmessage: nls.localize('restart1', \"Profile Extensions\"),\n\t\t\t\tdetail: nls.localize('restart2', \"In order to profile extensions a restart is required. Do you want to restart '{0}' now?\", this._productService.nameLong),\n\t\t\t\tprimaryButton: nls.localize({ key: 'restart3', comment: ['&& denotes a mnemonic'] }, \"&&Restart\")\n\t\t\t}).then(res => {\n\t\t\t\tif (res.confirmed) {\n\t\t\t\t\tthis._nativeHostService.relaunch({ addArgs: [`--inspect-extensions=${randomPort()}`] });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (inspectPorts.length > 1) {\n\t\t\t// TODO\n\t\t\tconsole.warn(`There are multiple extension hosts available for profiling. Picking the first one...`);\n\t\t}\n\n\t\tthis._setState(ProfileSessionState.Starting);\n\n\t\treturn this._instantiationService.createInstance(ExtensionHostProfiler, inspectPorts[0].host, inspectPorts[0].port).start().then((value) => {\n\t\t\tthis._profileSession = value;\n\t\t\tthis._setState(ProfileSessionState.Running);\n\t\t}, (err) => {\n\t\t\tonUnexpectedError(err);\n\t\t\tthis._setState(ProfileSessionState.None);\n\t\t});\n\t}\n\n\tpublic stopProfiling(): void {\n\t\tif (this._state !== ProfileSessionState.Running || !this._profileSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._setState(ProfileSessionState.Stopping);\n\t\tthis._profileSession.stop().then((result) => {\n\t\t\tthis._setLastProfile(result);\n\t\t\tthis._setState(ProfileSessionState.None);\n\t\t}, (err) => {\n\t\t\tonUnexpectedError(err);\n\t\t\tthis._setState(ProfileSessionState.None);\n\t\t});\n\t\tthis._profileSession = null;\n\t}\n\n\tprivate _setLastProfile(profile: IExtensionHostProfile) {\n\t\tthis._profile = profile;\n\t\tthis.lastProfileSavedTo = undefined;\n\t\tthis._onDidChangeLastProfile.fire(undefined);\n\t}\n\n\tgetUnresponsiveProfile(extensionId: ExtensionIdentifier): IExtensionHostProfile | undefined {\n\t\treturn this._unresponsiveProfiles.get(extensionId);\n\t}\n\n\tsetUnresponsiveProfile(extensionId: ExtensionIdentifier, profile: IExtensionHostProfile): void {\n\t\tthis._unresponsiveProfiles.set(extensionId, profile);\n\t\tthis._setLastProfile(profile);\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
