{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/electron-sandbox/extensions.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { registerAction2 } from \"../../../../platform/actions/common/actions.js\";\nimport { IExtensionRecommendationNotificationService } from \"../../../../platform/extensionRecommendations/common/extensionRecommendations.js\";\nimport { ExtensionRecommendationNotificationServiceChannel } from \"../../../../platform/extensionRecommendations/common/extensionRecommendationsIpc.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport type { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ISharedProcessService } from \"../../../../platform/ipc/electron-sandbox/services.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tEditorPaneDescriptor,\n\ttype IEditorPaneRegistry,\n} from \"../../../browser/editor.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport {\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n\ttype IEditorSerializer,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { RuntimeExtensionsInput } from \"../common/runtimeExtensionsInput.js\";\nimport {\n\tDebugExtensionHostAction,\n\tDebugExtensionsContribution,\n} from \"./debugExtensionHostAction.js\";\nimport { ExtensionHostProfileService } from \"./extensionProfileService.js\";\nimport {\n\tCleanUpExtensionsFolderAction,\n\tOpenExtensionsFolderAction,\n} from \"./extensionsActions.js\";\nimport { ExtensionsAutoProfiler } from \"./extensionsAutoProfiler.js\";\nimport { RemoteExtensionsInitializerContribution } from \"./remoteExtensionsInit.js\";\nimport {\n\tIExtensionHostProfileService,\n\tOpenExtensionHostProfileACtion,\n\tRuntimeExtensionsEditor,\n\tSaveExtensionHostProfileAction,\n\tStartExtensionHostProfileAction,\n\tStopExtensionHostProfileAction,\n} from \"./runtimeExtensionsEditor.js\";\n\n// Singletons\nregisterSingleton(\n\tIExtensionHostProfileService,\n\tExtensionHostProfileService,\n\tInstantiationType.Delayed,\n);\n\n// Running Extensions Editor\nRegistry.as<IEditorPaneRegistry>(\n\tEditorExtensions.EditorPane,\n).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tRuntimeExtensionsEditor,\n\t\tRuntimeExtensionsEditor.ID,\n\t\tlocalize(\"runtimeExtension\", \"Running Extensions\"),\n\t),\n\t[new SyncDescriptor(RuntimeExtensionsInput)],\n);\n\nclass RuntimeExtensionsInputSerializer implements IEditorSerializer {\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\tserialize(editorInput: EditorInput): string {\n\t\treturn \"\";\n\t}\n\tdeserialize(instantiationService: IInstantiationService): EditorInput {\n\t\treturn RuntimeExtensionsInput.instance;\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(\n\tEditorExtensions.EditorFactory,\n).registerEditorSerializer(\n\tRuntimeExtensionsInput.ID,\n\tRuntimeExtensionsInputSerializer,\n);\n\n// Global actions\n\nclass ExtensionsContributions\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IExtensionRecommendationNotificationService extensionRecommendationNotificationService: IExtensionRecommendationNotificationService,\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tsuper();\n\n\t\tsharedProcessService.registerChannel(\n\t\t\t\"extensionRecommendationNotification\",\n\t\t\tnew ExtensionRecommendationNotificationServiceChannel(\n\t\t\t\textensionRecommendationNotificationService,\n\t\t\t),\n\t\t);\n\n\t\tthis._register(registerAction2(OpenExtensionsFolderAction));\n\t\tthis._register(registerAction2(CleanUpExtensionsFolderAction));\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n);\nworkbenchRegistry.registerWorkbenchContribution(\n\tExtensionsContributions,\n\tLifecyclePhase.Restored,\n);\nworkbenchRegistry.registerWorkbenchContribution(\n\tExtensionsAutoProfiler,\n\tLifecyclePhase.Eventually,\n);\nworkbenchRegistry.registerWorkbenchContribution(\n\tRemoteExtensionsInitializerContribution,\n\tLifecyclePhase.Restored,\n);\nworkbenchRegistry.registerWorkbenchContribution(\n\tDebugExtensionsContribution,\n\tLifecyclePhase.Restored,\n);\n\n// Register Commands\n\nregisterAction2(DebugExtensionHostAction);\nregisterAction2(StartExtensionHostProfileAction);\nregisterAction2(StopExtensionHostProfileAction);\nregisterAction2(SaveExtensionHostProfileAction);\nregisterAction2(OpenExtensionHostProfileACtion);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,mDAAmD;AAC5D,SAAS,yDAAyD;AAClE,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,SAAS,6BAA6B;AACtC,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,OAEM;AACP;AAAA,EAGC,cAAc;AAAA,OACR;AACP;AAAA,EACC;AAAA,OAGM;AAEP,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B;AACvC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mCAAmC;AAC5C;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,8BAA8B;AACvC,SAAS,+CAA+C;AACxD;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAGP;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;AAGA,SAAS;AAAA,EACR,iBAAiB;AAClB,EAAE;AAAA,EACD,qBAAqB;AAAA,IACpB;AAAA,IACA,wBAAwB;AAAA,IACxB,SAAS,oBAAoB,oBAAoB;AAAA,EAClD;AAAA,EACA,CAAC,IAAI,eAAe,sBAAsB,CAAC;AAC5C;AAEA,MAAM,iCAA8D;AAAA,EA1EpE,OA0EoE;AAAA;AAAA;AAAA,EACnE,aAAa,aAAmC;AAC/C,WAAO;AAAA,EACR;AAAA,EACA,UAAU,aAAkC;AAC3C,WAAO;AAAA,EACR;AAAA,EACA,YAAY,sBAA0D;AACrE,WAAO,uBAAuB;AAAA,EAC/B;AACD;AAEA,SAAS;AAAA,EACR,iBAAiB;AAClB,EAAE;AAAA,EACD,uBAAuB;AAAA,EACvB;AACD;AAIA,IAAM,0BAAN,cACS,WAET;AAAA,EAlGA,OAkGA;AAAA;AAAA;AAAA,EACC,YAC8C,4CACtB,sBACtB;AACD,UAAM;AAEN,yBAAqB;AAAA,MACpB;AAAA,MACA,IAAI;AAAA,QACH;AAAA,MACD;AAAA,IACD;AAEA,SAAK,UAAU,gBAAgB,0BAA0B,CAAC;AAC1D,SAAK,UAAU,gBAAgB,6BAA6B,CAAC;AAAA,EAC9D;AACD;AApBM,0BAAN;AAAA,EAKG;AAAA,EACA;AAAA,GANG;AAsBN,MAAM,oBAAoB,SAAS;AAAA,EAClC,oBAAoB;AACrB;AACA,kBAAkB;AAAA,EACjB;AAAA,EACA,eAAe;AAChB;AACA,kBAAkB;AAAA,EACjB;AAAA,EACA,eAAe;AAChB;AACA,kBAAkB;AAAA,EACjB;AAAA,EACA,eAAe;AAChB;AACA,kBAAkB;AAAA,EACjB;AAAA,EACA,eAAe;AAChB;AAIA,gBAAgB,wBAAwB;AACxC,gBAAgB,+BAA+B;AAC/C,gBAAgB,8BAA8B;AAC9C,gBAAgB,8BAA8B;AAC9C,gBAAgB,8BAA8B;",
  "names": []
}
