{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/electron-sandbox/extensions.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IExtensionRecommendationNotificationService } from '../../../../platform/extensionRecommendations/common/extensionRecommendations.js';\nimport { ExtensionRecommendationNotificationServiceChannel } from '../../../../platform/extensionRecommendations/common/extensionRecommendationsIpc.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ISharedProcessService } from '../../../../platform/ipc/electron-sandbox/services.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from '../../../common/contributions.js';\nimport { EditorExtensions, IEditorFactoryRegistry, IEditorSerializer } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { RuntimeExtensionsInput } from '../common/runtimeExtensionsInput.js';\nimport { DebugExtensionHostAction, DebugExtensionsContribution } from './debugExtensionHostAction.js';\nimport { ExtensionHostProfileService } from './extensionProfileService.js';\nimport { CleanUpExtensionsFolderAction, OpenExtensionsFolderAction } from './extensionsActions.js';\nimport { ExtensionsAutoProfiler } from './extensionsAutoProfiler.js';\nimport { RemoteExtensionsInitializerContribution } from './remoteExtensionsInit.js';\nimport { IExtensionHostProfileService, OpenExtensionHostProfileACtion, RuntimeExtensionsEditor, SaveExtensionHostProfileAction, StartExtensionHostProfileAction, StopExtensionHostProfileAction } from './runtimeExtensionsEditor.js';\n\n// Singletons\nregisterSingleton(IExtensionHostProfileService, ExtensionHostProfileService, InstantiationType.Delayed);\n\n// Running Extensions Editor\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(RuntimeExtensionsEditor, RuntimeExtensionsEditor.ID, localize('runtimeExtension', \"Running Extensions\")),\n\t[new SyncDescriptor(RuntimeExtensionsInput)]\n);\n\nclass RuntimeExtensionsInputSerializer implements IEditorSerializer {\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\tserialize(editorInput: EditorInput): string {\n\t\treturn '';\n\t}\n\tdeserialize(instantiationService: IInstantiationService): EditorInput {\n\t\treturn RuntimeExtensionsInput.instance;\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(RuntimeExtensionsInput.ID, RuntimeExtensionsInputSerializer);\n\n\n// Global actions\n\nclass ExtensionsContributions extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IExtensionRecommendationNotificationService extensionRecommendationNotificationService: IExtensionRecommendationNotificationService,\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tsuper();\n\n\t\tsharedProcessService.registerChannel('extensionRecommendationNotification', new ExtensionRecommendationNotificationServiceChannel(extensionRecommendationNotificationService));\n\n\t\tthis._register(registerAction2(OpenExtensionsFolderAction));\n\t\tthis._register(registerAction2(CleanUpExtensionsFolderAction));\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionsContributions, LifecyclePhase.Restored);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionsAutoProfiler, LifecyclePhase.Eventually);\nworkbenchRegistry.registerWorkbenchContribution(RemoteExtensionsInitializerContribution, LifecyclePhase.Restored);\nworkbenchRegistry.registerWorkbenchContribution(DebugExtensionsContribution, LifecyclePhase.Restored);\n\n// Register Commands\n\nregisterAction2(DebugExtensionHostAction);\nregisterAction2(StartExtensionHostProfileAction);\nregisterAction2(StopExtensionHostProfileAction);\nregisterAction2(SaveExtensionHostProfileAction);\nregisterAction2(OpenExtensionHostProfileACtion);\n\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,mDAAmD;AAC5D,SAAS,yDAAyD;AAClE,SAAS,sBAAsB;AAC/B,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AACtC,SAAS,gBAAgB;AACzB,SAAS,sBAAsB,2BAA2B;AAC1D,SAAS,wBAAwB,iCAAiC,cAAc,2BAA2B;AAC3G,SAAS,kBAAkB,wBAAwB,yBAAyB;AAC5E,SAAS,mBAAmB;AAC5B,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B;AACvC,SAAS,0BAA0B,mCAAmC;AACtE,SAAS,mCAAmC;AAC5C,SAAS,+BAA+B,kCAAkC;AAC1E,SAAS,8BAA8B;AACvC,SAAS,+CAA+C;AACxD,SAAS,8BAA8B,gCAAgC,yBAAyB,gCAAgC,iCAAiC,sCAAsC;AAGvM,kBAAkB,8BAA8B,6BAA6B,kBAAkB,OAAO;AAGtG,SAAS,GAAwB,iBAAiB,UAAU,EAAE;AAAA,EAC7D,qBAAqB,OAAO,yBAAyB,wBAAwB,IAAI,SAAS,oBAAoB,oBAAoB,CAAC;AAAA,EACnI,CAAC,IAAI,eAAe,sBAAsB,CAAC;AAC5C;AAEA,MAAM,iCAA8D;AAAA,EArCpE,OAqCoE;AAAA;AAAA;AAAA,EACnE,aAAa,aAAmC;AAC/C,WAAO;AAAA,EACR;AAAA,EACA,UAAU,aAAkC;AAC3C,WAAO;AAAA,EACR;AAAA,EACA,YAAY,sBAA0D;AACrE,WAAO,uBAAuB;AAAA,EAC/B;AACD;AAEA,SAAS,GAA2B,iBAAiB,aAAa,EAAE,yBAAyB,uBAAuB,IAAI,gCAAgC;AAKxJ,IAAM,0BAAN,cAAsC,WAA6C;AAAA,EAtDnF,OAsDmF;AAAA;AAAA;AAAA,EAElF,YAC8C,4CACtB,sBACtB;AACD,UAAM;AAEN,yBAAqB,gBAAgB,uCAAuC,IAAI,kDAAkD,0CAA0C,CAAC;AAE7K,SAAK,UAAU,gBAAgB,0BAA0B,CAAC;AAC1D,SAAK,UAAU,gBAAgB,6BAA6B,CAAC;AAAA,EAC9D;AACD;AAbM,0BAAN;AAAA,EAGG;AAAA,EACA;AAAA,GAJG;AAeN,MAAM,oBAAoB,SAAS,GAAoC,oBAAoB,SAAS;AACpG,kBAAkB,8BAA8B,yBAAyB,eAAe,QAAQ;AAChG,kBAAkB,8BAA8B,wBAAwB,eAAe,UAAU;AACjG,kBAAkB,8BAA8B,yCAAyC,eAAe,QAAQ;AAChH,kBAAkB,8BAA8B,6BAA6B,eAAe,QAAQ;AAIpG,gBAAgB,wBAAwB;AACxC,gBAAgB,+BAA+B;AAC/C,gBAAgB,8BAA8B;AAC9C,gBAAgB,8BAA8B;AAC9C,gBAAgB,8BAA8B;",
  "names": []
}
