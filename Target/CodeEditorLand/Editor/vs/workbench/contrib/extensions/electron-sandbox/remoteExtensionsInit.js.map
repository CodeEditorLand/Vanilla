{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/electron-sandbox/remoteExtensionsInit.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { IExtensionGalleryService, IExtensionManagementService } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { areSameExtensions } from '../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IRemoteAuthorityResolverService } from '../../../../platform/remote/common/remoteAuthorityResolver.js';\nimport { IStorageService, IS_NEW_KEY, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { AbstractExtensionsInitializer } from '../../../../platform/userDataSync/common/extensionsSync.js';\nimport { IIgnoredExtensionsManagementService } from '../../../../platform/userDataSync/common/ignoredExtensions.js';\nimport { IRemoteUserData, IUserDataSyncEnablementService, IUserDataSyncStoreManagementService, SyncResource } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { UserDataSyncStoreClient } from '../../../../platform/userDataSync/common/userDataSyncStoreService.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IAuthenticationService } from '../../../services/authentication/common/authentication.js';\nimport { IExtensionManagementServerService } from '../../../services/extensionManagement/common/extensionManagement.js';\nimport { IExtensionManifestPropertiesService } from '../../../services/extensions/common/extensionManifestPropertiesService.js';\nimport { IRemoteAgentService } from '../../../services/remote/common/remoteAgentService.js';\n\nexport class RemoteExtensionsInitializerContribution implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService,\n\t\t@IRemoteAuthorityResolverService private readonly remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t) {\n\t\tthis.initializeRemoteExtensions();\n\t}\n\n\tprivate async initializeRemoteExtensions(): Promise<void> {\n\t\tconst connection = this.remoteAgentService.getConnection();\n\t\tconst localExtensionManagementServer = this.extensionManagementServerService.localExtensionManagementServer;\n\t\tconst remoteExtensionManagementServer = this.extensionManagementServerService.remoteExtensionManagementServer;\n\t\t// Skip: Not a remote window\n\t\tif (!connection || !remoteExtensionManagementServer) {\n\t\t\treturn;\n\t\t}\n\t\t// Skip: Not a native window\n\t\tif (!localExtensionManagementServer) {\n\t\t\treturn;\n\t\t}\n\t\t// Skip: No UserdataSyncStore is configured\n\t\tif (!this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\treturn;\n\t\t}\n\t\tconst newRemoteConnectionKey = `${IS_NEW_KEY}.${connection.remoteAuthority}`;\n\t\t// Skip: Not a new remote connection\n\t\tif (!this.storageService.getBoolean(newRemoteConnectionKey, StorageScope.APPLICATION, true)) {\n\t\t\tthis.logService.trace(`Skipping initializing remote extensions because the window with this remote authority was opened before.`);\n\t\t\treturn;\n\t\t}\n\t\tthis.storageService.store(newRemoteConnectionKey, false, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t// Skip: Not a new workspace\n\t\tif (!this.storageService.isNew(StorageScope.WORKSPACE)) {\n\t\t\tthis.logService.trace(`Skipping initializing remote extensions because this workspace was opened before.`);\n\t\t\treturn;\n\t\t}\n\t\t// Skip: Settings Sync is disabled\n\t\tif (!this.userDataSyncEnablementService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\t// Skip: No account is provided to initialize\n\t\tconst resolvedAuthority = await this.remoteAuthorityResolverService.resolveAuthority(connection.remoteAuthority);\n\t\tif (!resolvedAuthority.options?.authenticationSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst sessions = await this.authenticationService.getSessions(resolvedAuthority.options?.authenticationSession.providerId);\n\t\tconst session = sessions.find(s => s.id === resolvedAuthority.options?.authenticationSession?.id);\n\t\t// Skip: Session is not found\n\t\tif (!session) {\n\t\t\tthis.logService.info('Skipping initializing remote extensions because the account with given session id is not found', resolvedAuthority.options.authenticationSession.id);\n\t\t\treturn;\n\t\t}\n\n\t\tconst userDataSyncStoreClient = this.instantiationService.createInstance(UserDataSyncStoreClient, this.userDataSyncStoreManagementService.userDataSyncStore.url);\n\t\tuserDataSyncStoreClient.setAuthToken(session.accessToken, resolvedAuthority.options.authenticationSession.providerId);\n\t\tconst userData = await userDataSyncStoreClient.readResource(SyncResource.Extensions, null);\n\n\t\tconst serviceCollection = new ServiceCollection();\n\t\tserviceCollection.set(IExtensionManagementService, remoteExtensionManagementServer.extensionManagementService);\n\t\tconst instantiationService = this.instantiationService.createChild(serviceCollection);\n\t\tconst extensionsToInstallInitializer = instantiationService.createInstance(RemoteExtensionsInitializer);\n\n\t\tawait extensionsToInstallInitializer.initialize(userData);\n\t}\n}\n\nclass RemoteExtensionsInitializer extends AbstractExtensionsInitializer {\n\n\tconstructor(\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(extensionManagementService, ignoredExtensionsManagementService, fileService, userDataProfilesService, environmentService, logService, storageService, uriIdentityService);\n\t}\n\n\tprotected override async doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst remoteExtensions = await this.parseExtensions(remoteUserData);\n\t\tif (!remoteExtensions) {\n\t\t\tthis.logService.info('No synced extensions exist while initializing remote extensions.');\n\t\t\treturn;\n\t\t}\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\tconst { newExtensions } = this.generatePreview(remoteExtensions, installedExtensions);\n\t\tif (!newExtensions.length) {\n\t\t\tthis.logService.trace('No new remote extensions to install.');\n\t\t\treturn;\n\t\t}\n\t\tconst targetPlatform = await this.extensionManagementService.getTargetPlatform();\n\t\tconst extensionsToInstall = await this.extensionGalleryService.getExtensions(newExtensions, { targetPlatform, compatible: true }, CancellationToken.None);\n\t\tif (extensionsToInstall.length) {\n\t\t\tawait Promise.allSettled(extensionsToInstall.map(async e => {\n\t\t\t\tconst manifest = await this.extensionGalleryService.getManifest(e, CancellationToken.None);\n\t\t\t\tif (manifest && this.extensionManifestPropertiesService.canExecuteOnWorkspace(manifest)) {\n\t\t\t\t\tconst syncedExtension = remoteExtensions.find(e => areSameExtensions(e.identifier, e.identifier));\n\t\t\t\t\tawait this.extensionManagementService.installFromGallery(e, { installPreReleaseVersion: syncedExtension?.preRelease, donotIncludePackAndDependencies: true });\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["e"]
}
