{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/electron-sandbox/remoteExtensionsInit.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport {\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IRemoteAuthorityResolverService } from \"../../../../platform/remote/common/remoteAuthorityResolver.js\";\nimport {\n\tIS_NEW_KEY,\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { AbstractExtensionsInitializer } from \"../../../../platform/userDataSync/common/extensionsSync.js\";\nimport { IIgnoredExtensionsManagementService } from \"../../../../platform/userDataSync/common/ignoredExtensions.js\";\nimport {\n\ttype IRemoteUserData,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncStoreManagementService,\n\tSyncResource,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { UserDataSyncStoreClient } from \"../../../../platform/userDataSync/common/userDataSyncStoreService.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IAuthenticationService } from \"../../../services/authentication/common/authentication.js\";\nimport { IExtensionManagementServerService } from \"../../../services/extensionManagement/common/extensionManagement.js\";\nimport { IExtensionManifestPropertiesService } from \"../../../services/extensions/common/extensionManifestPropertiesService.js\";\nimport { IRemoteAgentService } from \"../../../services/remote/common/remoteAgentService.js\";\n\nexport class RemoteExtensionsInitializerContribution\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IExtensionManagementServerService\n\t\tprivate readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IRemoteAgentService\n\t\tprivate readonly remoteAgentService: IRemoteAgentService,\n\t\t@IUserDataSyncStoreManagementService\n\t\tprivate readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IAuthenticationService\n\t\tprivate readonly authenticationService: IAuthenticationService,\n\t\t@IRemoteAuthorityResolverService\n\t\tprivate readonly remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t) {\n\t\tthis.initializeRemoteExtensions();\n\t}\n\n\tprivate async initializeRemoteExtensions(): Promise<void> {\n\t\tconst connection = this.remoteAgentService.getConnection();\n\t\tconst localExtensionManagementServer =\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.localExtensionManagementServer;\n\t\tconst remoteExtensionManagementServer =\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer;\n\t\t// Skip: Not a remote window\n\t\tif (!connection || !remoteExtensionManagementServer) {\n\t\t\treturn;\n\t\t}\n\t\t// Skip: Not a native window\n\t\tif (!localExtensionManagementServer) {\n\t\t\treturn;\n\t\t}\n\t\t// Skip: No UserdataSyncStore is configured\n\t\tif (!this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\treturn;\n\t\t}\n\t\tconst newRemoteConnectionKey = `${IS_NEW_KEY}.${connection.remoteAuthority}`;\n\t\t// Skip: Not a new remote connection\n\t\tif (\n\t\t\t!this.storageService.getBoolean(\n\t\t\t\tnewRemoteConnectionKey,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`Skipping initializing remote extensions because the window with this remote authority was opened before.`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tthis.storageService.store(\n\t\t\tnewRemoteConnectionKey,\n\t\t\tfalse,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t\t// Skip: Not a new workspace\n\t\tif (!this.storageService.isNew(StorageScope.WORKSPACE)) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`Skipping initializing remote extensions because this workspace was opened before.`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t// Skip: Settings Sync is disabled\n\t\tif (!this.userDataSyncEnablementService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\t// Skip: No account is provided to initialize\n\t\tconst resolvedAuthority =\n\t\t\tawait this.remoteAuthorityResolverService.resolveAuthority(\n\t\t\t\tconnection.remoteAuthority,\n\t\t\t);\n\t\tif (!resolvedAuthority.options?.authenticationSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst sessions = await this.authenticationService.getSessions(\n\t\t\tresolvedAuthority.options?.authenticationSession.providerId,\n\t\t);\n\t\tconst session = sessions.find(\n\t\t\t(s) =>\n\t\t\t\ts.id === resolvedAuthority.options?.authenticationSession?.id,\n\t\t);\n\t\t// Skip: Session is not found\n\t\tif (!session) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing remote extensions because the account with given session id is not found\",\n\t\t\t\tresolvedAuthority.options.authenticationSession.id,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst userDataSyncStoreClient =\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tUserDataSyncStoreClient,\n\t\t\t\tthis.userDataSyncStoreManagementService.userDataSyncStore.url,\n\t\t\t);\n\t\tuserDataSyncStoreClient.setAuthToken(\n\t\t\tsession.accessToken,\n\t\t\tresolvedAuthority.options.authenticationSession.providerId,\n\t\t);\n\t\tconst userData = await userDataSyncStoreClient.readResource(\n\t\t\tSyncResource.Extensions,\n\t\t\tnull,\n\t\t);\n\n\t\tconst serviceCollection = new ServiceCollection();\n\t\tserviceCollection.set(\n\t\t\tIExtensionManagementService,\n\t\t\tremoteExtensionManagementServer.extensionManagementService,\n\t\t);\n\t\tconst instantiationService =\n\t\t\tthis.instantiationService.createChild(serviceCollection);\n\t\tconst extensionsToInstallInitializer =\n\t\t\tinstantiationService.createInstance(RemoteExtensionsInitializer);\n\n\t\tawait extensionsToInstallInitializer.initialize(userData);\n\t}\n}\n\nclass RemoteExtensionsInitializer extends AbstractExtensionsInitializer {\n\tconstructor(\n\t\t@IExtensionManagementService\n\t\textensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService\n\t\tignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IExtensionGalleryService\n\t\tprivate readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IExtensionManifestPropertiesService\n\t\tprivate readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(\n\t\t\textensionManagementService,\n\t\t\tignoredExtensionsManagementService,\n\t\t\tfileService,\n\t\t\tuserDataProfilesService,\n\t\t\tenvironmentService,\n\t\t\tlogService,\n\t\t\tstorageService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tprotected override async doInitialize(\n\t\tremoteUserData: IRemoteUserData,\n\t): Promise<void> {\n\t\tconst remoteExtensions = await this.parseExtensions(remoteUserData);\n\t\tif (!remoteExtensions) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"No synced extensions exist while initializing remote extensions.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tconst installedExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled();\n\t\tconst { newExtensions } = this.generatePreview(\n\t\t\tremoteExtensions,\n\t\t\tinstalledExtensions,\n\t\t);\n\t\tif (!newExtensions.length) {\n\t\t\tthis.logService.trace(\"No new remote extensions to install.\");\n\t\t\treturn;\n\t\t}\n\t\tconst targetPlatform =\n\t\t\tawait this.extensionManagementService.getTargetPlatform();\n\t\tconst extensionsToInstall =\n\t\t\tawait this.extensionGalleryService.getExtensions(\n\t\t\t\tnewExtensions,\n\t\t\t\t{ targetPlatform, compatible: true },\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\tif (extensionsToInstall.length) {\n\t\t\tawait Promise.allSettled(\n\t\t\t\textensionsToInstall.map(async (e) => {\n\t\t\t\t\tconst manifest =\n\t\t\t\t\t\tawait this.extensionGalleryService.getManifest(\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\tmanifest &&\n\t\t\t\t\t\tthis.extensionManifestPropertiesService.canExecuteOnWorkspace(\n\t\t\t\t\t\t\tmanifest,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst syncedExtension = remoteExtensions.find((e) =>\n\t\t\t\t\t\t\tareSameExtensions(e.identifier, e.identifier),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.extensionManagementService.installFromGallery(\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tinstallPreReleaseVersion:\n\t\t\t\t\t\t\t\t\tsyncedExtension?.preRelease,\n\t\t\t\t\t\t\t\tdonotIncludePackAndDependencies: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAClC,SAAS,oBAAoB;AAC7B,SAAS,6BAA6B;AACtC,SAAS,yBAAyB;AAClC,SAAS,mBAAmB;AAC5B,SAAS,uCAAuC;AAChD;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,qCAAqC;AAC9C,SAAS,2CAA2C;AACpD;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,+BAA+B;AAExC,SAAS,8BAA8B;AACvC,SAAS,yCAAyC;AAClD,SAAS,2CAA2C;AACpD,SAAS,2BAA2B;AAE7B,IAAM,0CAAN,MAEP;AAAA,EACC,YAEkB,kCACiB,gBAEjB,oBAEA,oCAEA,sBACa,YAEb,uBAEA,gCAEA,+BAChB;AAfgB;AACiB;AAEjB;AAEA;AAEA;AACa;AAEb;AAEA;AAEA;AAEjB,SAAK,2BAA2B;AAAA,EACjC;AAAA,EA9DD,OA0CA;AAAA;AAAA;AAAA,EAsBC,MAAc,6BAA4C;AACzD,UAAM,aAAa,KAAK,mBAAmB,cAAc;AACzD,UAAM,iCACL,KAAK,iCACH;AACH,UAAM,kCACL,KAAK,iCACH;AAEH,QAAI,CAAC,cAAc,CAAC,iCAAiC;AACpD;AAAA,IACD;AAEA,QAAI,CAAC,gCAAgC;AACpC;AAAA,IACD;AAEA,QAAI,CAAC,KAAK,mCAAmC,mBAAmB;AAC/D;AAAA,IACD;AACA,UAAM,yBAAyB,GAAG,UAAU,IAAI,WAAW,eAAe;AAE1E,QACC,CAAC,KAAK,eAAe;AAAA,MACpB;AAAA,MACA,aAAa;AAAA,MACb;AAAA,IACD,GACC;AACD,WAAK,WAAW;AAAA,QACf;AAAA,MACD;AACA;AAAA,IACD;AACA,SAAK,eAAe;AAAA,MACnB;AAAA,MACA;AAAA,MACA,aAAa;AAAA,MACb,cAAc;AAAA,IACf;AAEA,QAAI,CAAC,KAAK,eAAe,MAAM,aAAa,SAAS,GAAG;AACvD,WAAK,WAAW;AAAA,QACf;AAAA,MACD;AACA;AAAA,IACD;AAEA,QAAI,CAAC,KAAK,8BAA8B,UAAU,GAAG;AACpD;AAAA,IACD;AAEA,UAAM,oBACL,MAAM,KAAK,+BAA+B;AAAA,MACzC,WAAW;AAAA,IACZ;AACD,QAAI,CAAC,kBAAkB,SAAS,uBAAuB;AACtD;AAAA,IACD;AAEA,UAAM,WAAW,MAAM,KAAK,sBAAsB;AAAA,MACjD,kBAAkB,SAAS,sBAAsB;AAAA,IAClD;AACA,UAAM,UAAU,SAAS;AAAA,MACxB,CAAC,MACA,EAAE,OAAO,kBAAkB,SAAS,uBAAuB;AAAA,IAC7D;AAEA,QAAI,CAAC,SAAS;AACb,WAAK,WAAW;AAAA,QACf;AAAA,QACA,kBAAkB,QAAQ,sBAAsB;AAAA,MACjD;AACA;AAAA,IACD;AAEA,UAAM,0BACL,KAAK,qBAAqB;AAAA,MACzB;AAAA,MACA,KAAK,mCAAmC,kBAAkB;AAAA,IAC3D;AACD,4BAAwB;AAAA,MACvB,QAAQ;AAAA,MACR,kBAAkB,QAAQ,sBAAsB;AAAA,IACjD;AACA,UAAM,WAAW,MAAM,wBAAwB;AAAA,MAC9C,aAAa;AAAA,MACb;AAAA,IACD;AAEA,UAAM,oBAAoB,IAAI,kBAAkB;AAChD,sBAAkB;AAAA,MACjB;AAAA,MACA,gCAAgC;AAAA,IACjC;AACA,UAAM,uBACL,KAAK,qBAAqB,YAAY,iBAAiB;AACxD,UAAM,iCACL,qBAAqB,eAAe,2BAA2B;AAEhE,UAAM,+BAA+B,WAAW,QAAQ;AAAA,EACzD;AACD;AA9Ha,0CAAN;AAAA,EAIJ;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,EAEA;AAAA,GAlBU;AAgIb,IAAM,8BAAN,cAA0C,8BAA8B;AAAA,EACvE,YAEC,4BAEA,oCACc,aAEd,yBACqB,oBACR,YACQ,oBAEJ,yBACA,gBAEA,oCAChB;AACD;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAdiB;AAGA;AAAA,EAYlB;AAAA,EApMD,OAwKwE;AAAA;AAAA;AAAA,EA8BvE,MAAyB,aACxB,gBACgB;AAChB,UAAM,mBAAmB,MAAM,KAAK,gBAAgB,cAAc;AAClE,QAAI,CAAC,kBAAkB;AACtB,WAAK,WAAW;AAAA,QACf;AAAA,MACD;AACA;AAAA,IACD;AACA,UAAM,sBACL,MAAM,KAAK,2BAA2B,aAAa;AACpD,UAAM,EAAE,cAAc,IAAI,KAAK;AAAA,MAC9B;AAAA,MACA;AAAA,IACD;AACA,QAAI,CAAC,cAAc,QAAQ;AAC1B,WAAK,WAAW,MAAM,sCAAsC;AAC5D;AAAA,IACD;AACA,UAAM,iBACL,MAAM,KAAK,2BAA2B,kBAAkB;AACzD,UAAM,sBACL,MAAM,KAAK,wBAAwB;AAAA,MAClC;AAAA,MACA,EAAE,gBAAgB,YAAY,KAAK;AAAA,MACnC,kBAAkB;AAAA,IACnB;AACD,QAAI,oBAAoB,QAAQ;AAC/B,YAAM,QAAQ;AAAA,QACb,oBAAoB,IAAI,OAAO,MAAM;AACpC,gBAAM,WACL,MAAM,KAAK,wBAAwB;AAAA,YAClC;AAAA,YACA,kBAAkB;AAAA,UACnB;AACD,cACC,YACA,KAAK,mCAAmC;AAAA,YACvC;AAAA,UACD,GACC;AACD,kBAAM,kBAAkB,iBAAiB;AAAA,cAAK,CAACA,OAC9C,kBAAkBA,GAAE,YAAYA,GAAE,UAAU;AAAA,YAC7C;AACA,kBAAM,KAAK,2BAA2B;AAAA,cACrC;AAAA,cACA;AAAA,gBACC,0BACC,iBAAiB;AAAA,gBAClB,iCAAiC;AAAA,cAClC;AAAA,YACD;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AAxFM,8BAAN;AAAA,EAEG;AAAA,EAEA;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,GAfG;",
  "names": ["e"]
}
