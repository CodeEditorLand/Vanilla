{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/electron-sandbox/extensionsAutoProfiler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from \"../../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport { TernarySearchTree } from \"../../../../base/common/ternarySearchTree.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensionIdentifier,\n\tExtensionIdentifierSet,\n\ttype IExtensionDescription,\n} from \"../../../../platform/extensions/common/extensions.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tINotificationService,\n\tNotificationPriority,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IProfileAnalysisWorkerService } from \"../../../../platform/profiling/electron-sandbox/profileAnalysisWorkerService.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { INativeWorkbenchEnvironmentService } from \"../../../services/environment/electron-sandbox/environmentService.js\";\nimport { ExtensionHostKind } from \"../../../services/extensions/common/extensionHostKind.js\";\nimport {\n\ttype IExtensionHostProfile,\n\tIExtensionService,\n\ttype IResponsiveStateChangeEvent,\n\ttype ProfileSession,\n} from \"../../../services/extensions/common/extensions.js\";\nimport { ExtensionHostProfiler } from \"../../../services/extensions/electron-sandbox/extensionHostProfiler.js\";\nimport { ITimerService } from \"../../../services/timer/browser/timerService.js\";\nimport { RuntimeExtensionsInput } from \"../common/runtimeExtensionsInput.js\";\nimport { createSlowExtensionAction } from \"./extensionsSlowActions.js\";\nimport { IExtensionHostProfileService } from \"./runtimeExtensionsEditor.js\";\n\nexport class ExtensionsAutoProfiler implements IWorkbenchContribution {\n\tprivate readonly _blame = new ExtensionIdentifierSet();\n\n\tprivate _session: CancellationTokenSource | undefined;\n\tprivate _unresponsiveListener: IDisposable | undefined;\n\tprivate _perfBaseline = -1;\n\n\tconstructor(\n\t\t@IExtensionService\n\t\tprivate readonly _extensionService: IExtensionService,\n\t\t@IExtensionHostProfileService\n\t\tprivate readonly _extensionProfileService: IExtensionHostProfileService,\n\t\t@ITelemetryService\n\t\tprivate readonly _telemetryService: ITelemetryService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@INotificationService\n\t\tprivate readonly _notificationService: INotificationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@INativeWorkbenchEnvironmentService\n\t\tprivate readonly _environmentServie: INativeWorkbenchEnvironmentService,\n\t\t@IProfileAnalysisWorkerService\n\t\tprivate readonly _profileAnalysisService: IProfileAnalysisWorkerService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configService: IConfigurationService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITimerService timerService: ITimerService,\n\t) {\n\t\ttimerService.perfBaseline.then((value) => {\n\t\t\tif (value < 0) {\n\t\t\t\treturn; // too slow for profiling\n\t\t\t}\n\t\t\tthis._perfBaseline = value;\n\t\t\tthis._unresponsiveListener =\n\t\t\t\t_extensionService.onDidChangeResponsiveChange(\n\t\t\t\t\tthis._onDidChangeResponsiveChange,\n\t\t\t\t\tthis,\n\t\t\t\t);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._unresponsiveListener?.dispose();\n\t\tthis._session?.dispose(true);\n\t}\n\n\tprivate async _onDidChangeResponsiveChange(\n\t\tevent: IResponsiveStateChangeEvent,\n\t): Promise<void> {\n\t\tif (event.extensionHostKind !== ExtensionHostKind.LocalProcess) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst listener = await event.getInspectListener(true);\n\n\t\tif (!listener) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.isResponsive && this._session) {\n\t\t\t// stop profiling when responsive again\n\t\t\tthis._session.cancel();\n\t\t\tthis._logService.info(\n\t\t\t\t\"UNRESPONSIVE extension host: received responsive event and cancelling profiling session\",\n\t\t\t);\n\t\t} else if (!event.isResponsive && !this._session) {\n\t\t\t// start profiling if not yet profiling\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\tthis._session = cts;\n\n\t\t\tlet session: ProfileSession;\n\t\t\ttry {\n\t\t\t\tsession = await this._instantiationService\n\t\t\t\t\t.createInstance(\n\t\t\t\t\t\tExtensionHostProfiler,\n\t\t\t\t\t\tlistener.host,\n\t\t\t\t\t\tlistener.port,\n\t\t\t\t\t)\n\t\t\t\t\t.start();\n\t\t\t} catch (err) {\n\t\t\t\tthis._session = undefined;\n\t\t\t\t// fail silent as this is often\n\t\t\t\t// caused by another party being\n\t\t\t\t// connected already\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._logService.info(\n\t\t\t\t\"UNRESPONSIVE extension host: starting to profile NOW\",\n\t\t\t);\n\n\t\t\t// wait 5 seconds or until responsive again\n\t\t\ttry {\n\t\t\t\tawait timeout(5e3, cts.token);\n\t\t\t} catch {\n\t\t\t\t// can throw cancellation error. that is\n\t\t\t\t// OK, we stop profiling and analyse the\n\t\t\t\t// profile anyways\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// stop profiling and analyse results\n\t\t\t\tthis._processCpuProfile(await session.stop());\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t} finally {\n\t\t\t\tthis._session = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _processCpuProfile(profile: IExtensionHostProfile) {\n\t\t// get all extensions\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\n\t\t// send heavy samples iff enabled\n\t\tif (\n\t\t\tthis._configService.getValue(\n\t\t\t\t\"application.experimental.rendererProfiling\",\n\t\t\t)\n\t\t) {\n\t\t\tconst searchTree =\n\t\t\t\tTernarySearchTree.forUris<IExtensionDescription>();\n\t\t\tsearchTree.fill(\n\t\t\t\tthis._extensionService.extensions.map((e) => [\n\t\t\t\t\te.extensionLocation,\n\t\t\t\t\te,\n\t\t\t\t]),\n\t\t\t);\n\n\t\t\tawait this._profileAnalysisService.analyseBottomUp(\n\t\t\t\tprofile.data,\n\t\t\t\t(url) =>\n\t\t\t\t\tsearchTree.findSubstr(URI.parse(url))?.identifier.value ??\n\t\t\t\t\t\"<<not-found>>\",\n\t\t\t\tthis._perfBaseline,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\n\t\t// analyse profile by extension-category\n\t\tconst categories: [location: URI, id: string][] =\n\t\t\tthis._extensionService.extensions\n\t\t\t\t.filter((e) => e.extensionLocation.scheme === Schemas.file)\n\t\t\t\t.map((e) => [\n\t\t\t\t\te.extensionLocation,\n\t\t\t\t\tExtensionIdentifier.toKey(e.identifier),\n\t\t\t\t]);\n\n\t\tconst data = await this._profileAnalysisService.analyseByLocation(\n\t\t\tprofile.data,\n\t\t\tcategories,\n\t\t);\n\n\t\t//\n\t\tlet overall = 0;\n\t\tlet top = \"\";\n\t\tlet topAggregated = -1;\n\t\tfor (const [category, aggregated] of data) {\n\t\t\toverall += aggregated;\n\t\t\tif (aggregated > topAggregated) {\n\t\t\t\ttopAggregated = aggregated;\n\t\t\t\ttop = category;\n\t\t\t}\n\t\t}\n\t\tconst topPercentage = topAggregated / (overall / 100);\n\n\t\t// associate extensions to profile node\n\t\tconst extension = await this._extensionService.getExtension(top);\n\t\tif (!extension) {\n\t\t\t// not an extension => idle, gc, self?\n\t\t\treturn;\n\t\t}\n\n\t\tconst sessionId = generateUuid();\n\n\t\t// print message to log\n\t\tconst path = joinPath(\n\t\t\tthis._environmentServie.tmpDir,\n\t\t\t`exthost-${Math.random().toString(16).slice(2, 8)}.cpuprofile`,\n\t\t);\n\t\tawait this._fileService.writeFile(\n\t\t\tpath,\n\t\t\tVSBuffer.fromString(JSON.stringify(profile.data)),\n\t\t);\n\t\tthis._logService.warn(\n\t\t\t`UNRESPONSIVE extension host: '${top}' took ${topPercentage}% of ${topAggregated / 1e3}ms, saved PROFILE here: '${path}'`,\n\t\t);\n\n\t\ttype UnresponsiveData = {\n\t\t\tduration: number;\n\t\t\tsessionId: string;\n\t\t\tdata: string[];\n\t\t\tid: string;\n\t\t};\n\t\ttype UnresponsiveDataClassification = {\n\t\t\towner: \"jrieken\";\n\t\t\tcomment: \"Profiling data that was collected while the extension host was unresponsive\";\n\t\t\tsessionId: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\tcomment: \"Identifier of a profiling session\";\n\t\t\t};\n\t\t\tduration: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\tcomment: \"Duration for which the extension host was unresponsive\";\n\t\t\t};\n\t\t\tdata: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\tcomment: \"Extensions ids and core parts that were active while the extension host was frozen\";\n\t\t\t};\n\t\t\tid: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\tcomment: \"Top extensions id that took most of the duration\";\n\t\t\t};\n\t\t};\n\t\tthis._telemetryService.publicLog2<\n\t\t\tUnresponsiveData,\n\t\t\tUnresponsiveDataClassification\n\t\t>(\"exthostunresponsive\", {\n\t\t\tsessionId,\n\t\t\tduration: overall,\n\t\t\tdata: data.flatMap((tuple) => tuple[0]),\n\t\t\tid: ExtensionIdentifier.toKey(extension.identifier),\n\t\t});\n\n\t\t// add to running extensions view\n\t\tthis._extensionProfileService.setUnresponsiveProfile(\n\t\t\textension.identifier,\n\t\t\tprofile,\n\t\t);\n\n\t\t// prompt: when really slow/greedy\n\t\tif (!(topPercentage >= 95 && topAggregated >= 5e6)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst action = await this._instantiationService.invokeFunction(\n\t\t\tcreateSlowExtensionAction,\n\t\t\textension,\n\t\t\tprofile,\n\t\t);\n\n\t\tif (!action) {\n\t\t\t// cannot report issues against this extension...\n\t\t\treturn;\n\t\t}\n\n\t\t// only blame once per extension, don't blame too often\n\t\tif (this._blame.has(extension.identifier) || this._blame.size >= 3) {\n\t\t\treturn;\n\t\t}\n\t\tthis._blame.add(extension.identifier);\n\n\t\t// user-facing message when very bad...\n\t\tthis._notificationService.prompt(\n\t\t\tSeverity.Warning,\n\t\t\tlocalize(\n\t\t\t\t\"unresponsive-exthost\",\n\t\t\t\t\"The extension '{0}' took a very long time to complete its last operation and it has prevented other extensions from running.\",\n\t\t\t\textension.displayName || extension.name,\n\t\t\t),\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"show\", \"Show Extensions\"),\n\t\t\t\t\trun: () =>\n\t\t\t\t\t\tthis._editorService.openEditor(\n\t\t\t\t\t\t\tRuntimeExtensionsInput.instance,\n\t\t\t\t\t\t\t{ pinned: true },\n\t\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\taction,\n\t\t\t],\n\t\t\t{ priority: NotificationPriority.SILENT },\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
