{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/electron-sandbox/extensionsAutoProfiler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../../base/common/async.js';\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { TernarySearchTree } from '../../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ExtensionIdentifier, ExtensionIdentifierSet, IExtensionDescription } from '../../../../platform/extensions/common/extensions.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { INotificationService, NotificationPriority, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IProfileAnalysisWorkerService } from '../../../../platform/profiling/electron-sandbox/profileAnalysisWorkerService.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { RuntimeExtensionsInput } from '../common/runtimeExtensionsInput.js';\nimport { createSlowExtensionAction } from './extensionsSlowActions.js';\nimport { IExtensionHostProfileService } from './runtimeExtensionsEditor.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { INativeWorkbenchEnvironmentService } from '../../../services/environment/electron-sandbox/environmentService.js';\nimport { ExtensionHostKind } from '../../../services/extensions/common/extensionHostKind.js';\nimport { IExtensionHostProfile, IExtensionService, IResponsiveStateChangeEvent, ProfileSession } from '../../../services/extensions/common/extensions.js';\nimport { ExtensionHostProfiler } from '../../../services/extensions/electron-sandbox/extensionHostProfiler.js';\nimport { ITimerService } from '../../../services/timer/browser/timerService.js';\n\nexport class ExtensionsAutoProfiler implements IWorkbenchContribution {\n\n\tprivate readonly _blame = new ExtensionIdentifierSet();\n\n\tprivate _session: CancellationTokenSource | undefined;\n\tprivate _unresponsiveListener: IDisposable | undefined;\n\tprivate _perfBaseline: number = -1;\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IExtensionHostProfileService private readonly _extensionProfileService: IExtensionHostProfileService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INativeWorkbenchEnvironmentService private readonly _environmentServie: INativeWorkbenchEnvironmentService,\n\t\t@IProfileAnalysisWorkerService private readonly _profileAnalysisService: IProfileAnalysisWorkerService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITimerService timerService: ITimerService\n\t) {\n\n\t\ttimerService.perfBaseline.then(value => {\n\t\t\tif (value < 0) {\n\t\t\t\treturn; // too slow for profiling\n\t\t\t}\n\t\t\tthis._perfBaseline = value;\n\t\t\tthis._unresponsiveListener = _extensionService.onDidChangeResponsiveChange(this._onDidChangeResponsiveChange, this);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._unresponsiveListener?.dispose();\n\t\tthis._session?.dispose(true);\n\t}\n\n\tprivate async _onDidChangeResponsiveChange(event: IResponsiveStateChangeEvent): Promise<void> {\n\t\tif (event.extensionHostKind !== ExtensionHostKind.LocalProcess) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst listener = await event.getInspectListener(true);\n\n\t\tif (!listener) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.isResponsive && this._session) {\n\t\t\t// stop profiling when responsive again\n\t\t\tthis._session.cancel();\n\t\t\tthis._logService.info('UNRESPONSIVE extension host: received responsive event and cancelling profiling session');\n\n\n\t\t} else if (!event.isResponsive && !this._session) {\n\t\t\t// start profiling if not yet profiling\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\tthis._session = cts;\n\n\n\t\t\tlet session: ProfileSession;\n\t\t\ttry {\n\t\t\t\tsession = await this._instantiationService.createInstance(ExtensionHostProfiler, listener.host, listener.port).start();\n\n\t\t\t} catch (err) {\n\t\t\t\tthis._session = undefined;\n\t\t\t\t// fail silent as this is often\n\t\t\t\t// caused by another party being\n\t\t\t\t// connected already\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._logService.info('UNRESPONSIVE extension host: starting to profile NOW');\n\n\t\t\t// wait 5 seconds or until responsive again\n\t\t\ttry {\n\t\t\t\tawait timeout(5e3, cts.token);\n\t\t\t} catch {\n\t\t\t\t// can throw cancellation error. that is\n\t\t\t\t// OK, we stop profiling and analyse the\n\t\t\t\t// profile anyways\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// stop profiling and analyse results\n\t\t\t\tthis._processCpuProfile(await session.stop());\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t} finally {\n\t\t\t\tthis._session = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _processCpuProfile(profile: IExtensionHostProfile) {\n\n\t\t// get all extensions\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\n\t\t// send heavy samples iff enabled\n\t\tif (this._configService.getValue('application.experimental.rendererProfiling')) {\n\n\t\t\tconst searchTree = TernarySearchTree.forUris<IExtensionDescription>();\n\t\t\tsearchTree.fill(this._extensionService.extensions.map(e => [e.extensionLocation, e]));\n\n\t\t\tawait this._profileAnalysisService.analyseBottomUp(\n\t\t\t\tprofile.data,\n\t\t\t\turl => searchTree.findSubstr(URI.parse(url))?.identifier.value ?? '<<not-found>>',\n\t\t\t\tthis._perfBaseline,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\n\t\t// analyse profile by extension-category\n\t\tconst categories: [location: URI, id: string][] = this._extensionService.extensions\n\t\t\t.filter(e => e.extensionLocation.scheme === Schemas.file)\n\t\t\t.map(e => [e.extensionLocation, ExtensionIdentifier.toKey(e.identifier)]);\n\n\t\tconst data = await this._profileAnalysisService.analyseByLocation(profile.data, categories);\n\n\t\t//\n\t\tlet overall: number = 0;\n\t\tlet top: string = '';\n\t\tlet topAggregated: number = -1;\n\t\tfor (const [category, aggregated] of data) {\n\t\t\toverall += aggregated;\n\t\t\tif (aggregated > topAggregated) {\n\t\t\t\ttopAggregated = aggregated;\n\t\t\t\ttop = category;\n\t\t\t}\n\t\t}\n\t\tconst topPercentage = topAggregated / (overall / 100);\n\n\t\t// associate extensions to profile node\n\t\tconst extension = await this._extensionService.getExtension(top);\n\t\tif (!extension) {\n\t\t\t// not an extension => idle, gc, self?\n\t\t\treturn;\n\t\t}\n\n\n\t\tconst sessionId = generateUuid();\n\n\t\t// print message to log\n\t\tconst path = joinPath(this._environmentServie.tmpDir, `exthost-${Math.random().toString(16).slice(2, 8)}.cpuprofile`);\n\t\tawait this._fileService.writeFile(path, VSBuffer.fromString(JSON.stringify(profile.data)));\n\t\tthis._logService.warn(`UNRESPONSIVE extension host: '${top}' took ${topPercentage}% of ${topAggregated / 1e3}ms, saved PROFILE here: '${path}'`);\n\n\t\ttype UnresponsiveData = {\n\t\t\tduration: number;\n\t\t\tsessionId: string;\n\t\t\tdata: string[];\n\t\t\tid: string;\n\t\t};\n\t\ttype UnresponsiveDataClassification = {\n\t\t\towner: 'jrieken';\n\t\t\tcomment: 'Profiling data that was collected while the extension host was unresponsive';\n\t\t\tsessionId: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Identifier of a profiling session' };\n\t\t\tduration: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Duration for which the extension host was unresponsive' };\n\t\t\tdata: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Extensions ids and core parts that were active while the extension host was frozen' };\n\t\t\tid: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Top extensions id that took most of the duration' };\n\t\t};\n\t\tthis._telemetryService.publicLog2<UnresponsiveData, UnresponsiveDataClassification>('exthostunresponsive', {\n\t\t\tsessionId,\n\t\t\tduration: overall,\n\t\t\tdata: data.map(tuple => tuple[0]).flat(),\n\t\t\tid: ExtensionIdentifier.toKey(extension.identifier),\n\t\t});\n\n\n\t\t// add to running extensions view\n\t\tthis._extensionProfileService.setUnresponsiveProfile(extension.identifier, profile);\n\n\t\t// prompt: when really slow/greedy\n\t\tif (!(topPercentage >= 95 && topAggregated >= 5e6)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst action = await this._instantiationService.invokeFunction(createSlowExtensionAction, extension, profile);\n\n\t\tif (!action) {\n\t\t\t// cannot report issues against this extension...\n\t\t\treturn;\n\t\t}\n\n\t\t// only blame once per extension, don't blame too often\n\t\tif (this._blame.has(extension.identifier) || this._blame.size >= 3) {\n\t\t\treturn;\n\t\t}\n\t\tthis._blame.add(extension.identifier);\n\n\t\t// user-facing message when very bad...\n\t\tthis._notificationService.prompt(\n\t\t\tSeverity.Warning,\n\t\t\tlocalize(\n\t\t\t\t'unresponsive-exthost',\n\t\t\t\t\"The extension '{0}' took a very long time to complete its last operation and it has prevented other extensions from running.\",\n\t\t\t\textension.displayName || extension.name\n\t\t\t),\n\t\t\t[{\n\t\t\t\tlabel: localize('show', 'Show Extensions'),\n\t\t\t\trun: () => this._editorService.openEditor(RuntimeExtensionsInput.instance, { pinned: true })\n\t\t\t},\n\t\t\t\taction\n\t\t\t],\n\t\t\t{ priority: NotificationPriority.SILENT }\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
