{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/deprecatedExtensionsChecker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from \"../../../../base/common/arrays.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IExtensionManagementService } from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IWorkbenchExtensionEnablementService } from \"../../../services/extensionManagement/common/extensionManagement.js\";\nimport { IExtensionsWorkbenchService } from \"../common/extensions.js\";\n\nexport class DeprecatedExtensionsChecker\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t) {\n\t\tsuper();\n\t\tthis.checkForDeprecatedExtensions();\n\t\tthis._register(extensionManagementService.onDidInstallExtensions(e => {\n\t\t\tconst ids: string[] = [];\n\t\t\tfor (const { local } of e) {\n\t\t\t\tif (local && extensionsWorkbenchService.local.find(extension => areSameExtensions(extension.identifier, local.identifier))?.deprecationInfo) {\n\t\t\t\t\tids.push(local.identifier.id.toLowerCase());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ids.length) {\n\t\t\t\tthis.setNotifiedDeprecatedExtensions(ids);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async checkForDeprecatedExtensions(): Promise<void> {\n\t\tif (\n\t\t\tthis.storageService.getBoolean(\n\t\t\t\t\"extensionsAssistant/doNotCheckDeprecated\",\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tfalse,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst local = await this.extensionsWorkbenchService.queryLocal();\n\t\tconst previouslyNotified = this.getNotifiedDeprecatedExtensions();\n\t\tconst toNotify = local\n\t\t\t.filter(\n\t\t\t\t(e) =>\n\t\t\t\t\t!!e.deprecationInfo &&\n\t\t\t\t\te.local &&\n\t\t\t\t\tthis.extensionEnablementService.isEnabled(e.local),\n\t\t\t)\n\t\t\t.filter(\n\t\t\t\t(e) =>\n\t\t\t\t\t!previouslyNotified.includes(e.identifier.id.toLowerCase()),\n\t\t\t);\n\t\tif (toNotify.length) {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tlocalize(\n\t\t\t\t\t\"deprecated extensions\",\n\t\t\t\t\t\"You have deprecated extensions installed. We recommend to review them and migrate to alternatives.\",\n\t\t\t\t),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\"showDeprecated\",\n\t\t\t\t\t\t\t\"Show Deprecated Extensions\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\tthis.setNotifiedDeprecatedExtensions(\n\t\t\t\t\t\t\t\ttoNotify.map((e) =>\n\t\t\t\t\t\t\t\t\te.identifier.id.toLowerCase(),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.extensionsWorkbenchService.openSearch(\n\t\t\t\t\t\t\t\ttoNotify\n\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t(extension) =>\n\t\t\t\t\t\t\t\t\t\t\t`@id:${extension.identifier.id}`,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.join(\" \"),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\"neverShowAgain\", \"Don't Show Again\"),\n\t\t\t\t\t\tisSecondary: true,\n\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\tthis.storageService.store(\n\t\t\t\t\t\t\t\t\"extensionsAssistant/doNotCheckDeprecated\",\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\t\t\t\tStorageTarget.USER,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getNotifiedDeprecatedExtensions(): string[] {\n\t\treturn JSON.parse(\n\t\t\tthis.storageService.get(\n\t\t\t\t\"extensionsAssistant/deprecated\",\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\"[]\",\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate setNotifiedDeprecatedExtensions(notified: string[]): void {\n\t\tthis.storageService.store(\n\t\t\t\"extensionsAssistant/deprecated\",\n\t\t\tJSON.stringify(\n\t\t\t\tdistinct([\n\t\t\t\t\t...this.getNotifiedDeprecatedExtensions(),\n\t\t\t\t\t...notified,\n\t\t\t\t]),\n\t\t\t),\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
