var F=Object.defineProperty;var K=Object.getOwnPropertyDescriptor;var D=(g,p,e,i)=>{for(var o=i>1?void 0:i?K(p,e):p,n=g.length-1,t;n>=0;n--)(t=g[n])&&(o=(i?t(p,e,o):t(o))||o);return i&&o&&F(p,e,o),o},l=(g,p)=>(e,i)=>p(e,i,g);import{distinct as P}from"../../../../base/common/arrays.js";import{Promises as k,createCancelablePromise as A,raceCancellablePromises as X,raceCancellation as j,timeout as W}from"../../../../base/common/async.js";import{CancellationToken as q}from"../../../../base/common/cancellation.js";import{isCancellationError as B}from"../../../../base/common/errors.js";import{Emitter as V,Event as N}from"../../../../base/common/event.js";import{Disposable as M,DisposableStore as L,MutableDisposable as T,toDisposable as G}from"../../../../base/common/lifecycle.js";import{isString as w}from"../../../../base/common/types.js";import{localize as r}from"../../../../nls.js";import{IConfigurationService as J}from"../../../../platform/configuration/common/configuration.js";import{areSameExtensions as Y}from"../../../../platform/extensionManagement/common/extensionManagementUtil.js";import{RecommendationSource as h,RecommendationSourceToString as R,RecommendationsNotificationResult as f}from"../../../../platform/extensionRecommendations/common/extensionRecommendations.js";import{INotificationService as z,NotificationPriority as $,Severity as _}from"../../../../platform/notification/common/notification.js";import{IStorageService as Q,StorageScope as y,StorageTarget as U}from"../../../../platform/storage/common/storage.js";import{ITelemetryService as Z}from"../../../../platform/telemetry/common/telemetry.js";import{IUriIdentityService as ee}from"../../../../platform/uriIdentity/common/uriIdentity.js";import{IUserDataSyncEnablementService as ie,SyncResource as ne}from"../../../../platform/userDataSync/common/userDataSync.js";import{IWorkbenchEnvironmentService as oe}from"../../../services/environment/common/environmentService.js";import{EnablementState as te,IWorkbenchExtensionEnablementService as se,IWorkbenchExtensionManagementService as ae}from"../../../services/extensionManagement/common/extensionManagement.js";import{IExtensionIgnoredRecommendationsService as re}from"../../../services/extensionRecommendations/common/extensionRecommendations.js";import{IExtensionsWorkbenchService as ce}from"../common/extensions.js";const H="extensionsAssistant/importantRecommendationsIgnore",O="extensionsAssistant/workspaceRecommendationsIgnore";class me extends M{constructor(e,i,o,n){super();this.severity=e;this.message=i;this.choices=o;this.notificationService=n}_onDidClose=this._register(new V);onDidClose=this._onDidClose.event;_onDidChangeVisibility=this._register(new V);onDidChangeVisibility=this._onDidChangeVisibility.event;notificationHandle;cancelled=!1;show(){this.notificationHandle||this.updateNotificationHandle(this.notificationService.prompt(this.severity,this.message,this.choices,{sticky:!0,onCancel:()=>this.cancelled=!0}))}hide(){this.notificationHandle&&(this.onDidCloseDisposable.clear(),this.notificationHandle.close(),this.cancelled=!1,this.updateNotificationHandle(this.notificationService.prompt(this.severity,this.message,this.choices,{priority:$.SILENT,onCancel:()=>this.cancelled=!0})))}isCancelled(){return this.cancelled}onDidCloseDisposable=this._register(new T);onDidChangeVisibilityDisposable=this._register(new T);updateNotificationHandle(e){this.onDidCloseDisposable.clear(),this.onDidChangeVisibilityDisposable.clear(),this.notificationHandle=e,this.onDidCloseDisposable.value=this.notificationHandle.onDidClose(()=>{this.onDidCloseDisposable.dispose(),this.onDidChangeVisibilityDisposable.dispose(),this._onDidClose.fire(),this._onDidClose.dispose(),this._onDidChangeVisibility.dispose()}),this.onDidChangeVisibilityDisposable.value=this.notificationHandle.onDidChangeVisibility(i=>this._onDidChangeVisibility.fire(i))}}let b=class extends M{constructor(e,i,o,n,t,s,a,m,S,c,v){super();this.configurationService=e;this.storageService=i;this.notificationService=o;this.telemetryService=n;this.extensionsWorkbenchService=t;this.extensionManagementService=s;this.extensionEnablementService=a;this.extensionIgnoredRecommendationsService=m;this.userDataSyncEnablementService=S;this.workbenchEnvironmentService=c;this.uriIdentityService=v}get ignoredRecommendations(){return P([...JSON.parse(this.storageService.get(H,y.PROFILE,"[]"))].map(e=>e.toLowerCase()))}recommendedExtensions=[];recommendationSources=[];hideVisibleNotificationPromise;visibleNotification;pendingNotificaitons=[];hasToIgnoreRecommendationNotifications(){const e=this.configurationService.getValue("extensions");return e.ignoreRecommendations||!!e.showRecommendationsOnlyOnDemand}async promptImportantExtensionsInstallNotification(e){const i=[...this.extensionIgnoredRecommendationsService.ignoredRecommendations,...this.ignoredRecommendations],o=e.extensions.filter(n=>!i.includes(n));return o.length?this.promptRecommendationsNotification({...e,extensions:o},{onDidInstallRecommendedExtensions:n=>n.forEach(t=>this.telemetryService.publicLog2("extensionRecommendations:popup",{userReaction:"install",extensionId:t.identifier.id,source:R(e.source)})),onDidShowRecommendedExtensions:n=>n.forEach(t=>this.telemetryService.publicLog2("extensionRecommendations:popup",{userReaction:"show",extensionId:t.identifier.id,source:R(e.source)})),onDidCancelRecommendedExtensions:n=>n.forEach(t=>this.telemetryService.publicLog2("extensionRecommendations:popup",{userReaction:"cancelled",extensionId:t.identifier.id,source:R(e.source)})),onDidNeverShowRecommendedExtensionsAgain:n=>{for(const t of n)this.addToImportantRecommendationsIgnore(t.identifier.id),this.telemetryService.publicLog2("extensionRecommendations:popup",{userReaction:"neverShowAgain",extensionId:t.identifier.id,source:R(e.source)});this.notificationService.prompt(_.Info,r("ignoreExtensionRecommendations","Do you want to ignore all extension recommendations?"),[{label:r("ignoreAll","Yes, Ignore All"),run:()=>this.setIgnoreRecommendationsConfig(!0)},{label:r("no","No"),run:()=>this.setIgnoreRecommendationsConfig(!1)}])}}):f.Ignored}async promptWorkspaceRecommendations(e){if(this.storageService.getBoolean(O,y.WORKSPACE,!1))return;let i=await this.extensionManagementService.getInstalled();i=i.filter(o=>this.extensionEnablementService.getEnablementState(o)!==te.DisabledByExtensionKind),e=e.filter(o=>i.every(n=>w(o)?!Y({id:o},n.identifier):!this.uriIdentityService.extUri.isEqual(o,n.location))),e.length&&await this.promptRecommendationsNotification({extensions:e,source:h.WORKSPACE,name:r({key:"this repository",comment:["this repository means the current repository that is opened"]},"this repository")},{onDidInstallRecommendedExtensions:()=>this.telemetryService.publicLog2("extensionWorkspaceRecommendations:popup",{userReaction:"install"}),onDidShowRecommendedExtensions:()=>this.telemetryService.publicLog2("extensionWorkspaceRecommendations:popup",{userReaction:"show"}),onDidCancelRecommendedExtensions:()=>this.telemetryService.publicLog2("extensionWorkspaceRecommendations:popup",{userReaction:"cancelled"}),onDidNeverShowRecommendedExtensionsAgain:()=>{this.telemetryService.publicLog2("extensionWorkspaceRecommendations:popup",{userReaction:"neverShowAgain"}),this.storageService.store(O,!0,y.WORKSPACE,U.MACHINE)}})}async promptRecommendationsNotification({extensions:e,source:i,name:o,searchValue:n},t){if(this.hasToIgnoreRecommendationNotifications())return f.Ignored;if(i===h.EXE&&this.workbenchEnvironmentService.remoteAuthority)return f.IncompatibleWindow;if(i===h.EXE&&(this.recommendationSources.includes(h.EXE)||this.recommendationSources.length>=2))return f.TooMany;if(this.recommendationSources.push(i),i===h.EXE&&e.every(c=>w(c)&&this.recommendedExtensions.includes(c)))return f.Ignored;const s=await this.getInstallableExtensions(e);if(!s.length)return f.Ignored;this.recommendedExtensions=P([...this.recommendedExtensions,...e.filter(w)]);let a="";if(s.length===1)a=r("extensionFromPublisher","'{0}' extension from {1}",s[0].displayName,s[0].publisherDisplayName);else{const c=[...s.reduce((v,x)=>v.add(x.publisherDisplayName),new Set)];c.length>2?a=r("extensionsFromMultiplePublishers","extensions from {0}, {1} and others",c[0],c[1]):c.length===2?a=r("extensionsFromPublishers","extensions from {0} and {1}",c[0],c[1]):a=r("extensionsFromPublisher","extensions from {0}",c[0])}let m=r("recommended","Do you want to install the recommended {0} for {1}?",a,o);i===h.EXE&&(m=r({key:"exeRecommended",comment:["Placeholder string is the name of the software that is installed."]},"You have {0} installed on your system. Do you want to install the recommended {1} for it?",o,a)),n||(n=i===h.WORKSPACE?"@recommended":s.map(c=>`@id:${c.identifier.id}`).join(" "));const S=i===h.WORKSPACE?r("donotShowAgain","Don't Show Again for this Repository"):s.length>1?r("donotShowAgainExtension","Don't Show Again for these Extensions"):r("donotShowAgainExtensionSingle","Don't Show Again for this Extension");return X([this._registerP(this.showRecommendationsNotification(s,m,n,S,i,t)),this._registerP(this.waitUntilRecommendationsAreInstalled(s))])}showRecommendationsNotification(e,i,o,n,t,{onDidInstallRecommendedExtensions:s,onDidShowRecommendedExtensions:a,onDidCancelRecommendedExtensions:m,onDidNeverShowRecommendedExtensionsAgain:S}){return A(async c=>{let v=!1;const x=[],C=async u=>{this.extensionsWorkbenchService.openSearch(o),s(e);const E=[],I=[];for(const d of e)d.gallery?E.push(d.gallery):d.resourceExtension&&I.push(d);await k.settled([k.settled(e.map(d=>this.extensionsWorkbenchService.open(d,{pinned:!0}))),E.length?this.extensionManagementService.installGalleryExtensions(E.map(d=>({extension:d,options:{isMachineScoped:u}}))):Promise.resolve(),I.length?Promise.allSettled(I.map(d=>this.extensionsWorkbenchService.install(d))):Promise.resolve()])};x.push({label:r("install","Install"),run:()=>C(!1),menu:this.userDataSyncEnablementService.isEnabled()&&this.userDataSyncEnablementService.isResourceEnabled(ne.Extensions)?[{label:r("install and do no sync","Install (Do not sync)"),run:()=>C(!0)}]:void 0}),x.push({label:r("show recommendations","Show Recommendations"),run:async()=>{a(e);for(const u of e)this.extensionsWorkbenchService.open(u,{pinned:!0});this.extensionsWorkbenchService.openSearch(o)}},{label:n,isSecondary:!0,run:()=>{S(e)}});try{v=await this.doShowRecommendationsNotification(_.Info,i,x,t,c)}catch(u){if(!B(u))throw u}return v?f.Accepted:(m(e),f.Cancelled)})}waitUntilRecommendationsAreInstalled(e){const i=[],o=new L;return A(async n=>(o.add(n.onCancellationRequested(t=>o.dispose())),new Promise((t,s)=>{o.add(this.extensionManagementService.onInstallExtension(a=>{i.push(a.identifier.id.toLowerCase()),e.every(m=>i.includes(m.identifier.id.toLowerCase()))&&t(f.Accepted)}))})))}async doShowRecommendationsNotification(e,i,o,n,t){const s=new L;try{const a=s.add(new me(e,i,o,this.notificationService));if(s.add(N.once(N.filter(a.onDidChangeVisibility,m=>!m))(()=>this.showNextNotification())),this.visibleNotification){const m=this.pendingNotificaitons.length;s.add(t.onCancellationRequested(()=>this.pendingNotificaitons.splice(m,1))),this.pendingNotificaitons.push({recommendationsNotification:a,source:n,token:t}),n!==h.EXE&&n<=this.visibleNotification.source&&this.hideVisibleNotification(3e3)}else this.visibleNotification={recommendationsNotification:a,source:n,from:Date.now()},a.show();return await j(new Promise(m=>s.add(N.once(a.onDidClose)(m))),t),!a.isCancelled()}finally{s.dispose()}}showNextNotification(){const e=this.getNextPendingNotificationIndex(),[i]=e>-1?this.pendingNotificaitons.splice(e,1):[];W(i?500:0).then(()=>{this.unsetVisibileNotification(),i&&(this.visibleNotification={recommendationsNotification:i.recommendationsNotification,source:i.source,from:Date.now()},i.recommendationsNotification.show())})}getNextPendingNotificationIndex(){let e=this.pendingNotificaitons.length-1;if(this.pendingNotificaitons.length)for(let i=0;i<this.pendingNotificaitons.length;i++)this.pendingNotificaitons[i].source<=this.pendingNotificaitons[e].source&&(e=i);return e}hideVisibleNotification(e){if(this.visibleNotification&&!this.hideVisibleNotificationPromise){const i=this.visibleNotification;this.hideVisibleNotificationPromise=W(Math.max(e-(Date.now()-i.from),0)),this.hideVisibleNotificationPromise.then(()=>i.recommendationsNotification.hide())}}unsetVisibileNotification(){this.hideVisibleNotificationPromise?.cancel(),this.hideVisibleNotificationPromise=void 0,this.visibleNotification=void 0}async getInstallableExtensions(e){const i=[];if(e.length){const o=[],n=[];for(const t of e)typeof t=="string"?o.push(t):n.push(t);if(o.length){const t=await this.extensionsWorkbenchService.getExtensions(o.map(s=>({id:s})),{source:"install-recommendations"},q.None);for(const s of t)s.gallery&&await this.extensionManagementService.canInstall(s.gallery)&&i.push(s)}if(n.length){const t=await this.extensionsWorkbenchService.getResourceExtensions(n,!0);for(const s of t)await this.extensionsWorkbenchService.canInstall(s)&&i.push(s)}}return i}addToImportantRecommendationsIgnore(e){const i=[...this.ignoredRecommendations];i.includes(e.toLowerCase())||(i.push(e.toLowerCase()),this.storageService.store(H,JSON.stringify(i),y.PROFILE,U.USER))}setIgnoreRecommendationsConfig(e){this.configurationService.updateValue("extensions.ignoreRecommendations",e)}_registerP(e){return this._register(G(()=>e.cancel())),e}};b=D([l(0,J),l(1,Q),l(2,z),l(3,Z),l(4,ce),l(5,ae),l(6,se),l(7,re),l(8,ie),l(9,oe),l(10,ee)],b);export{b as ExtensionRecommendationNotificationService};
