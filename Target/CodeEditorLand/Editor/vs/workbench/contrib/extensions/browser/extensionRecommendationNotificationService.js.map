{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionRecommendationNotificationService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from \"../../../../base/common/arrays.js\";\nimport {\n\ttype CancelablePromise,\n\tPromises,\n\tcreateCancelablePromise,\n\traceCancellablePromises,\n\traceCancellation,\n\ttimeout,\n} from \"../../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { isCancellationError } from \"../../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isString } from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type { IGalleryExtension } from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\ttype IExtensionRecommendationNotificationService,\n\ttype IExtensionRecommendations,\n\tRecommendationSource,\n\tRecommendationSourceToString,\n\tRecommendationsNotificationResult,\n} from \"../../../../platform/extensionRecommendations/common/extensionRecommendations.js\";\nimport {\n\ttype INotificationHandle,\n\tINotificationService,\n\ttype IPromptChoice,\n\ttype IPromptChoiceWithMenu,\n\tNotificationPriority,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\tIUserDataSyncEnablementService,\n\tSyncResource,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport {\n\tEnablementState,\n\tIWorkbenchExtensionEnablementService,\n\tIWorkbenchExtensionManagementService,\n} from \"../../../services/extensionManagement/common/extensionManagement.js\";\nimport { IExtensionIgnoredRecommendationsService } from \"../../../services/extensionRecommendations/common/extensionRecommendations.js\";\nimport {\n\ttype IExtension,\n\tIExtensionsWorkbenchService,\n} from \"../common/extensions.js\";\n\ntype ExtensionRecommendationsNotificationClassification = {\n\towner: \"sandy081\";\n\tcomment: \"Response information when an extension is recommended\";\n\tuserReaction: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"User reaction after showing the recommendation prompt. Eg., install, cancel, show, neverShowAgain\";\n\t};\n\textensionId?: {\n\t\tclassification: \"PublicNonPersonalData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Id of the extension that is recommended\";\n\t};\n\tsource: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The source from which this recommendation is coming from. Eg., file, exe.,\";\n\t};\n};\n\ntype ExtensionWorkspaceRecommendationsNotificationClassification = {\n\towner: \"sandy081\";\n\tcomment: \"Response information when a recommendation from workspace is recommended\";\n\tuserReaction: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"User reaction after showing the recommendation prompt. Eg., install, cancel, show, neverShowAgain\";\n\t};\n};\n\nconst ignoreImportantExtensionRecommendationStorageKey =\n\t\"extensionsAssistant/importantRecommendationsIgnore\";\nconst donotShowWorkspaceRecommendationsStorageKey =\n\t\"extensionsAssistant/workspaceRecommendationsIgnore\";\n\ntype RecommendationsNotificationActions = {\n\tonDidInstallRecommendedExtensions(extensions: IExtension[]): void;\n\tonDidShowRecommendedExtensions(extensions: IExtension[]): void;\n\tonDidCancelRecommendedExtensions(extensions: IExtension[]): void;\n\tonDidNeverShowRecommendedExtensionsAgain(extensions: IExtension[]): void;\n};\n\ntype ExtensionRecommendations = Omit<\n\tIExtensionRecommendations,\n\t\"extensions\"\n> & { extensions: Array<string | URI> };\n\nclass RecommendationsNotification extends Disposable {\n\tprivate _onDidClose = this._register(new Emitter<void>());\n\treadonly onDidClose = this._onDidClose.event;\n\n\tprivate _onDidChangeVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tprivate notificationHandle: INotificationHandle | undefined;\n\tprivate cancelled = false;\n\n\tconstructor(\n\t\tprivate readonly severity: Severity,\n\t\tprivate readonly message: string,\n\t\tprivate readonly choices: IPromptChoice[],\n\t\tprivate readonly notificationService: INotificationService,\n\t) {\n\t\tsuper();\n\t}\n\n\tshow(): void {\n\t\tif (!this.notificationHandle) {\n\t\t\tthis.updateNotificationHandle(\n\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\tthis.severity,\n\t\t\t\t\tthis.message,\n\t\t\t\t\tthis.choices,\n\t\t\t\t\t{ sticky: true, onCancel: () => (this.cancelled = true) },\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\thide(): void {\n\t\tif (this.notificationHandle) {\n\t\t\tthis.onDidCloseDisposable.clear();\n\t\t\tthis.notificationHandle.close();\n\t\t\tthis.cancelled = false;\n\t\t\tthis.updateNotificationHandle(\n\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\tthis.severity,\n\t\t\t\t\tthis.message,\n\t\t\t\t\tthis.choices,\n\t\t\t\t\t{\n\t\t\t\t\t\tpriority: NotificationPriority.SILENT,\n\t\t\t\t\t\tonCancel: () => (this.cancelled = true),\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tisCancelled(): boolean {\n\t\treturn this.cancelled;\n\t}\n\n\tprivate readonly onDidCloseDisposable = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\tprivate readonly onDidChangeVisibilityDisposable = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\tprivate updateNotificationHandle(notificationHandle: INotificationHandle) {\n\t\tthis.onDidCloseDisposable.clear();\n\t\tthis.onDidChangeVisibilityDisposable.clear();\n\t\tthis.notificationHandle = notificationHandle;\n\n\t\tthis.onDidCloseDisposable.value = this.notificationHandle.onDidClose(\n\t\t\t() => {\n\t\t\t\tthis.onDidCloseDisposable.dispose();\n\t\t\t\tthis.onDidChangeVisibilityDisposable.dispose();\n\n\t\t\t\tthis._onDidClose.fire();\n\n\t\t\t\tthis._onDidClose.dispose();\n\t\t\t\tthis._onDidChangeVisibility.dispose();\n\t\t\t},\n\t\t);\n\t\tthis.onDidChangeVisibilityDisposable.value =\n\t\t\tthis.notificationHandle.onDidChangeVisibility((e) =>\n\t\t\t\tthis._onDidChangeVisibility.fire(e),\n\t\t\t);\n\t}\n}\n\ntype PendingRecommendationsNotification = {\n\trecommendationsNotification: RecommendationsNotification;\n\tsource: RecommendationSource;\n\ttoken: CancellationToken;\n};\ntype VisibleRecommendationsNotification = {\n\trecommendationsNotification: RecommendationsNotification;\n\tsource: RecommendationSource;\n\tfrom: number;\n};\n\nexport class ExtensionRecommendationNotificationService\n\textends Disposable\n\timplements IExtensionRecommendationNotificationService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\t// Ignored Important Recommendations\n\tget ignoredRecommendations(): string[] {\n\t\treturn distinct(\n\t\t\t[\n\t\t\t\t...(<string[]>(\n\t\t\t\t\tJSON.parse(\n\t\t\t\t\t\tthis.storageService.get(\n\t\t\t\t\t\t\tignoreImportantExtensionRecommendationStorageKey,\n\t\t\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\t\t\t\"[]\",\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t)),\n\t\t\t].map((i) => i.toLowerCase()),\n\t\t);\n\t}\n\n\tprivate recommendedExtensions: string[] = [];\n\tprivate recommendationSources: RecommendationSource[] = [];\n\n\tprivate hideVisibleNotificationPromise: CancelablePromise<void> | undefined;\n\tprivate visibleNotification: VisibleRecommendationsNotification | undefined;\n\tprivate pendingNotificaitons: PendingRecommendationsNotification[] = [];\n\n\tconstructor(\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IExtensionsWorkbenchService\n\t\tprivate readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkbenchExtensionManagementService\n\t\tprivate readonly extensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@IWorkbenchExtensionEnablementService\n\t\tprivate readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IExtensionIgnoredRecommendationsService\n\t\tprivate readonly extensionIgnoredRecommendationsService: IExtensionIgnoredRecommendationsService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IWorkbenchEnvironmentService\n\t\tprivate readonly workbenchEnvironmentService: IWorkbenchEnvironmentService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t}\n\n\thasToIgnoreRecommendationNotifications(): boolean {\n\t\tconst config = this.configurationService.getValue<{\n\t\t\tignoreRecommendations: boolean;\n\t\t\tshowRecommendationsOnlyOnDemand?: boolean;\n\t\t}>(\"extensions\");\n\t\treturn (\n\t\t\tconfig.ignoreRecommendations ||\n\t\t\t!!config.showRecommendationsOnlyOnDemand\n\t\t);\n\t}\n\n\tasync promptImportantExtensionsInstallNotification(\n\t\textensionRecommendations: IExtensionRecommendations,\n\t): Promise<RecommendationsNotificationResult> {\n\t\tconst ignoredRecommendations = [\n\t\t\t...this.extensionIgnoredRecommendationsService\n\t\t\t\t.ignoredRecommendations,\n\t\t\t...this.ignoredRecommendations,\n\t\t];\n\t\tconst extensions = extensionRecommendations.extensions.filter(\n\t\t\t(id) => !ignoredRecommendations.includes(id),\n\t\t);\n\t\tif (!extensions.length) {\n\t\t\treturn RecommendationsNotificationResult.Ignored;\n\t\t}\n\n\t\treturn this.promptRecommendationsNotification(\n\t\t\t{ ...extensionRecommendations, extensions },\n\t\t\t{\n\t\t\t\tonDidInstallRecommendedExtensions: (extensions: IExtension[]) =>\n\t\t\t\t\textensions.forEach((extension) =>\n\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuserReaction: string;\n\t\t\t\t\t\t\t\textensionId: string;\n\t\t\t\t\t\t\t\tsource: string;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tExtensionRecommendationsNotificationClassification\n\t\t\t\t\t\t>(\"extensionRecommendations:popup\", {\n\t\t\t\t\t\t\tuserReaction: \"install\",\n\t\t\t\t\t\t\textensionId: extension.identifier.id,\n\t\t\t\t\t\t\tsource: RecommendationSourceToString(\n\t\t\t\t\t\t\t\textensionRecommendations.source,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\tonDidShowRecommendedExtensions: (extensions: IExtension[]) =>\n\t\t\t\t\textensions.forEach((extension) =>\n\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuserReaction: string;\n\t\t\t\t\t\t\t\textensionId: string;\n\t\t\t\t\t\t\t\tsource: string;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tExtensionRecommendationsNotificationClassification\n\t\t\t\t\t\t>(\"extensionRecommendations:popup\", {\n\t\t\t\t\t\t\tuserReaction: \"show\",\n\t\t\t\t\t\t\textensionId: extension.identifier.id,\n\t\t\t\t\t\t\tsource: RecommendationSourceToString(\n\t\t\t\t\t\t\t\textensionRecommendations.source,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\tonDidCancelRecommendedExtensions: (extensions: IExtension[]) =>\n\t\t\t\t\textensions.forEach((extension) =>\n\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuserReaction: string;\n\t\t\t\t\t\t\t\textensionId: string;\n\t\t\t\t\t\t\t\tsource: string;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tExtensionRecommendationsNotificationClassification\n\t\t\t\t\t\t>(\"extensionRecommendations:popup\", {\n\t\t\t\t\t\t\tuserReaction: \"cancelled\",\n\t\t\t\t\t\t\textensionId: extension.identifier.id,\n\t\t\t\t\t\t\tsource: RecommendationSourceToString(\n\t\t\t\t\t\t\t\textensionRecommendations.source,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\tonDidNeverShowRecommendedExtensionsAgain: (\n\t\t\t\t\textensions: IExtension[],\n\t\t\t\t) => {\n\t\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\t\tthis.addToImportantRecommendationsIgnore(\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuserReaction: string;\n\t\t\t\t\t\t\t\textensionId: string;\n\t\t\t\t\t\t\t\tsource: string;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tExtensionRecommendationsNotificationClassification\n\t\t\t\t\t\t>(\"extensionRecommendations:popup\", {\n\t\t\t\t\t\t\tuserReaction: \"neverShowAgain\",\n\t\t\t\t\t\t\textensionId: extension.identifier.id,\n\t\t\t\t\t\t\tsource: RecommendationSourceToString(\n\t\t\t\t\t\t\t\textensionRecommendations.source,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"ignoreExtensionRecommendations\",\n\t\t\t\t\t\t\t\"Do you want to ignore all extension recommendations?\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: localize(\"ignoreAll\", \"Yes, Ignore All\"),\n\t\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\t\tthis.setIgnoreRecommendationsConfig(true),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: localize(\"no\", \"No\"),\n\t\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\t\tthis.setIgnoreRecommendationsConfig(false),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tasync promptWorkspaceRecommendations(\n\t\trecommendations: Array<string | URI>,\n\t): Promise<void> {\n\t\tif (\n\t\t\tthis.storageService.getBoolean(\n\t\t\t\tdonotShowWorkspaceRecommendationsStorageKey,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tfalse,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet installed = await this.extensionManagementService.getInstalled();\n\t\tinstalled = installed.filter(\n\t\t\t(l) =>\n\t\t\t\tthis.extensionEnablementService.getEnablementState(l) !==\n\t\t\t\tEnablementState.DisabledByExtensionKind,\n\t\t); // Filter extensions disabled by kind\n\t\trecommendations = recommendations.filter((recommendation) =>\n\t\t\tinstalled.every((local) =>\n\t\t\t\tisString(recommendation)\n\t\t\t\t\t? !areSameExtensions(\n\t\t\t\t\t\t\t{ id: recommendation },\n\t\t\t\t\t\t\tlocal.identifier,\n\t\t\t\t\t\t)\n\t\t\t\t\t: !this.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\t\trecommendation,\n\t\t\t\t\t\t\tlocal.location,\n\t\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tif (!recommendations.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.promptRecommendationsNotification(\n\t\t\t{\n\t\t\t\textensions: recommendations,\n\t\t\t\tsource: RecommendationSource.WORKSPACE,\n\t\t\t\tname: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"this repository\",\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"this repository means the current repository that is opened\",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t\"this repository\",\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tonDidInstallRecommendedExtensions: () =>\n\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t{ userReaction: string },\n\t\t\t\t\t\tExtensionWorkspaceRecommendationsNotificationClassification\n\t\t\t\t\t>(\"extensionWorkspaceRecommendations:popup\", {\n\t\t\t\t\t\tuserReaction: \"install\",\n\t\t\t\t\t}),\n\t\t\t\tonDidShowRecommendedExtensions: () =>\n\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t{ userReaction: string },\n\t\t\t\t\t\tExtensionWorkspaceRecommendationsNotificationClassification\n\t\t\t\t\t>(\"extensionWorkspaceRecommendations:popup\", {\n\t\t\t\t\t\tuserReaction: \"show\",\n\t\t\t\t\t}),\n\t\t\t\tonDidCancelRecommendedExtensions: () =>\n\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t{ userReaction: string },\n\t\t\t\t\t\tExtensionWorkspaceRecommendationsNotificationClassification\n\t\t\t\t\t>(\"extensionWorkspaceRecommendations:popup\", {\n\t\t\t\t\t\tuserReaction: \"cancelled\",\n\t\t\t\t\t}),\n\t\t\t\tonDidNeverShowRecommendedExtensionsAgain: () => {\n\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t{ userReaction: string },\n\t\t\t\t\t\tExtensionWorkspaceRecommendationsNotificationClassification\n\t\t\t\t\t>(\"extensionWorkspaceRecommendations:popup\", {\n\t\t\t\t\t\tuserReaction: \"neverShowAgain\",\n\t\t\t\t\t});\n\t\t\t\t\tthis.storageService.store(\n\t\t\t\t\t\tdonotShowWorkspaceRecommendationsStorageKey,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate async promptRecommendationsNotification(\n\t\t{\n\t\t\textensions: extensionIds,\n\t\t\tsource,\n\t\t\tname,\n\t\t\tsearchValue,\n\t\t}: ExtensionRecommendations,\n\t\trecommendationsNotificationActions: RecommendationsNotificationActions,\n\t): Promise<RecommendationsNotificationResult> {\n\t\tif (this.hasToIgnoreRecommendationNotifications()) {\n\t\t\treturn RecommendationsNotificationResult.Ignored;\n\t\t}\n\n\t\t// Do not show exe based recommendations in remote window\n\t\tif (\n\t\t\tsource === RecommendationSource.EXE &&\n\t\t\tthis.workbenchEnvironmentService.remoteAuthority\n\t\t) {\n\t\t\treturn RecommendationsNotificationResult.IncompatibleWindow;\n\t\t}\n\n\t\t// Ignore exe recommendation if the window\n\t\t// \t\t=> has shown an exe based recommendation already\n\t\t// \t\t=> or has shown any two recommendations already\n\t\tif (\n\t\t\tsource === RecommendationSource.EXE &&\n\t\t\t(this.recommendationSources.includes(RecommendationSource.EXE) ||\n\t\t\t\tthis.recommendationSources.length >= 2)\n\t\t) {\n\t\t\treturn RecommendationsNotificationResult.TooMany;\n\t\t}\n\n\t\tthis.recommendationSources.push(source);\n\n\t\t// Ignore exe recommendation if recommendations are already shown\n\t\tif (\n\t\t\tsource === RecommendationSource.EXE &&\n\t\t\textensionIds.every(\n\t\t\t\t(id) => isString(id) && this.recommendedExtensions.includes(id),\n\t\t\t)\n\t\t) {\n\t\t\treturn RecommendationsNotificationResult.Ignored;\n\t\t}\n\n\t\tconst extensions = await this.getInstallableExtensions(extensionIds);\n\t\tif (!extensions.length) {\n\t\t\treturn RecommendationsNotificationResult.Ignored;\n\t\t}\n\n\t\tthis.recommendedExtensions = distinct([\n\t\t\t...this.recommendedExtensions,\n\t\t\t...extensionIds.filter(isString),\n\t\t]);\n\n\t\tlet extensionsMessage = \"\";\n\t\tif (extensions.length === 1) {\n\t\t\textensionsMessage = localize(\n\t\t\t\t\"extensionFromPublisher\",\n\t\t\t\t\"'{0}' extension from {1}\",\n\t\t\t\textensions[0].displayName,\n\t\t\t\textensions[0].publisherDisplayName,\n\t\t\t);\n\t\t} else {\n\t\t\tconst publishers = [\n\t\t\t\t...extensions.reduce(\n\t\t\t\t\t(result, extension) =>\n\t\t\t\t\t\tresult.add(extension.publisherDisplayName),\n\t\t\t\t\tnew Set<string>(),\n\t\t\t\t),\n\t\t\t];\n\t\t\tif (publishers.length > 2) {\n\t\t\t\textensionsMessage = localize(\n\t\t\t\t\t\"extensionsFromMultiplePublishers\",\n\t\t\t\t\t\"extensions from {0}, {1} and others\",\n\t\t\t\t\tpublishers[0],\n\t\t\t\t\tpublishers[1],\n\t\t\t\t);\n\t\t\t} else if (publishers.length === 2) {\n\t\t\t\textensionsMessage = localize(\n\t\t\t\t\t\"extensionsFromPublishers\",\n\t\t\t\t\t\"extensions from {0} and {1}\",\n\t\t\t\t\tpublishers[0],\n\t\t\t\t\tpublishers[1],\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\textensionsMessage = localize(\n\t\t\t\t\t\"extensionsFromPublisher\",\n\t\t\t\t\t\"extensions from {0}\",\n\t\t\t\t\tpublishers[0],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tlet message = localize(\n\t\t\t\"recommended\",\n\t\t\t\"Do you want to install the recommended {0} for {1}?\",\n\t\t\textensionsMessage,\n\t\t\tname,\n\t\t);\n\t\tif (source === RecommendationSource.EXE) {\n\t\t\tmessage = localize(\n\t\t\t\t{\n\t\t\t\t\tkey: \"exeRecommended\",\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\"Placeholder string is the name of the software that is installed.\",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t\"You have {0} installed on your system. Do you want to install the recommended {1} for it?\",\n\t\t\t\tname,\n\t\t\t\textensionsMessage,\n\t\t\t);\n\t\t}\n\t\tif (!searchValue) {\n\t\t\tsearchValue =\n\t\t\t\tsource === RecommendationSource.WORKSPACE\n\t\t\t\t\t? \"@recommended\"\n\t\t\t\t\t: extensions\n\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t(extensionId) =>\n\t\t\t\t\t\t\t\t\t`@id:${extensionId.identifier.id}`,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.join(\" \");\n\t\t}\n\n\t\tconst donotShowAgainLabel =\n\t\t\tsource === RecommendationSource.WORKSPACE\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"donotShowAgain\",\n\t\t\t\t\t\t\"Don't Show Again for this Repository\",\n\t\t\t\t\t)\n\t\t\t\t: extensions.length > 1\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"donotShowAgainExtension\",\n\t\t\t\t\t\t\t\"Don't Show Again for these Extensions\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"donotShowAgainExtensionSingle\",\n\t\t\t\t\t\t\t\"Don't Show Again for this Extension\",\n\t\t\t\t\t\t);\n\n\t\treturn raceCancellablePromises([\n\t\t\tthis._registerP(\n\t\t\t\tthis.showRecommendationsNotification(\n\t\t\t\t\textensions,\n\t\t\t\t\tmessage,\n\t\t\t\t\tsearchValue,\n\t\t\t\t\tdonotShowAgainLabel,\n\t\t\t\t\tsource,\n\t\t\t\t\trecommendationsNotificationActions,\n\t\t\t\t),\n\t\t\t),\n\t\t\tthis._registerP(\n\t\t\t\tthis.waitUntilRecommendationsAreInstalled(extensions),\n\t\t\t),\n\t\t]);\n\t}\n\n\tprivate showRecommendationsNotification(\n\t\textensions: IExtension[],\n\t\tmessage: string,\n\t\tsearchValue: string,\n\t\tdonotShowAgainLabel: string,\n\t\tsource: RecommendationSource,\n\t\t{\n\t\t\tonDidInstallRecommendedExtensions,\n\t\t\tonDidShowRecommendedExtensions,\n\t\t\tonDidCancelRecommendedExtensions,\n\t\t\tonDidNeverShowRecommendedExtensionsAgain,\n\t\t}: RecommendationsNotificationActions,\n\t): CancelablePromise<RecommendationsNotificationResult> {\n\t\treturn createCancelablePromise<RecommendationsNotificationResult>(\n\t\t\tasync (token) => {\n\t\t\t\tlet accepted = false;\n\t\t\t\tconst choices: (IPromptChoice | IPromptChoiceWithMenu)[] = [];\n\t\t\t\tconst installExtensions = async (isMachineScoped: boolean) => {\n\t\t\t\t\tthis.extensionsWorkbenchService.openSearch(searchValue);\n\t\t\t\t\tonDidInstallRecommendedExtensions(extensions);\n\t\t\t\t\tconst galleryExtensions: IGalleryExtension[] = [],\n\t\t\t\t\t\tresourceExtensions: IExtension[] = [];\n\t\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\t\tif (extension.gallery) {\n\t\t\t\t\t\t\tgalleryExtensions.push(extension.gallery);\n\t\t\t\t\t\t} else if (extension.resourceExtension) {\n\t\t\t\t\t\t\tresourceExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tawait Promises.settled<any>([\n\t\t\t\t\t\tPromises.settled(\n\t\t\t\t\t\t\textensions.map((extension) =>\n\t\t\t\t\t\t\t\tthis.extensionsWorkbenchService.open(\n\t\t\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t\t\t{ pinned: true },\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgalleryExtensions.length\n\t\t\t\t\t\t\t? this.extensionManagementService.installGalleryExtensions(\n\t\t\t\t\t\t\t\t\tgalleryExtensions.map((e) => ({\n\t\t\t\t\t\t\t\t\t\textension: e,\n\t\t\t\t\t\t\t\t\t\toptions: { isMachineScoped },\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: Promise.resolve(),\n\t\t\t\t\t\tresourceExtensions.length\n\t\t\t\t\t\t\t? Promise.allSettled(\n\t\t\t\t\t\t\t\t\tresourceExtensions.map((r) =>\n\t\t\t\t\t\t\t\t\t\tthis.extensionsWorkbenchService.install(\n\t\t\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: Promise.resolve(),\n\t\t\t\t\t]);\n\t\t\t\t};\n\t\t\t\tchoices.push({\n\t\t\t\t\tlabel: localize(\"install\", \"Install\"),\n\t\t\t\t\trun: () => installExtensions(false),\n\t\t\t\t\tmenu:\n\t\t\t\t\t\tthis.userDataSyncEnablementService.isEnabled() &&\n\t\t\t\t\t\tthis.userDataSyncEnablementService.isResourceEnabled(\n\t\t\t\t\t\t\tSyncResource.Extensions,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"install and do no sync\",\n\t\t\t\t\t\t\t\t\t\t\t\"Install (Do not sync)\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\trun: () => installExtensions(true),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t});\n\t\t\t\tchoices.push(\n\t\t\t\t\t...[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"show recommendations\",\n\t\t\t\t\t\t\t\t\"Show Recommendations\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\t\tonDidShowRecommendedExtensions(extensions);\n\t\t\t\t\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\t\t\t\t\tthis.extensionsWorkbenchService.open(\n\t\t\t\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t\t\t\t{ pinned: true },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.extensionsWorkbenchService.openSearch(\n\t\t\t\t\t\t\t\t\tsearchValue,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: donotShowAgainLabel,\n\t\t\t\t\t\t\tisSecondary: true,\n\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\tonDidNeverShowRecommendedExtensionsAgain(\n\t\t\t\t\t\t\t\t\textensions,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t);\n\t\t\t\ttry {\n\t\t\t\t\taccepted = await this.doShowRecommendationsNotification(\n\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tchoices,\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!isCancellationError(error)) {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (accepted) {\n\t\t\t\t\treturn RecommendationsNotificationResult.Accepted;\n\t\t\t\t} else {\n\t\t\t\t\tonDidCancelRecommendedExtensions(extensions);\n\t\t\t\t\treturn RecommendationsNotificationResult.Cancelled;\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate waitUntilRecommendationsAreInstalled(\n\t\textensions: IExtension[],\n\t): CancelablePromise<RecommendationsNotificationResult.Accepted> {\n\t\tconst installedExtensions: string[] = [];\n\t\tconst disposables = new DisposableStore();\n\t\treturn createCancelablePromise(async (token) => {\n\t\t\tdisposables.add(\n\t\t\t\ttoken.onCancellationRequested((e) => disposables.dispose()),\n\t\t\t);\n\t\t\treturn new Promise<RecommendationsNotificationResult.Accepted>(\n\t\t\t\t(c, e) => {\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tthis.extensionManagementService.onInstallExtension(\n\t\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\t\tinstalledExtensions.push(\n\t\t\t\t\t\t\t\t\te.identifier.id.toLowerCase(),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\textensions.every((e) =>\n\t\t\t\t\t\t\t\t\t\tinstalledExtensions.includes(\n\t\t\t\t\t\t\t\t\t\t\te.identifier.id.toLowerCase(),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tc(\n\t\t\t\t\t\t\t\t\t\tRecommendationsNotificationResult.Accepted,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Show recommendations in Queue\n\t * At any time only one recommendation is shown\n\t * If a new recommendation comes in\n\t * \t\t=> If no recommendation is visible, show it immediately\n\t *\t\t=> Otherwise, add to the pending queue\n\t * \t\t\t=> If it is not exe based and has higher or same priority as current, hide the current notification after showing it for 3s.\n\t * \t\t\t=> Otherwise wait until the current notification is hidden.\n\t */\n\tprivate async doShowRecommendationsNotification(\n\t\tseverity: Severity,\n\t\tmessage: string,\n\t\tchoices: IPromptChoice[],\n\t\tsource: RecommendationSource,\n\t\ttoken: CancellationToken,\n\t): Promise<boolean> {\n\t\tconst disposables = new DisposableStore();\n\t\ttry {\n\t\t\tconst recommendationsNotification = disposables.add(\n\t\t\t\tnew RecommendationsNotification(\n\t\t\t\t\tseverity,\n\t\t\t\t\tmessage,\n\t\t\t\t\tchoices,\n\t\t\t\t\tthis.notificationService,\n\t\t\t\t),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tEvent.once(\n\t\t\t\t\tEvent.filter(\n\t\t\t\t\t\trecommendationsNotification.onDidChangeVisibility,\n\t\t\t\t\t\t(e) => !e,\n\t\t\t\t\t),\n\t\t\t\t)(() => this.showNextNotification()),\n\t\t\t);\n\t\t\tif (this.visibleNotification) {\n\t\t\t\tconst index = this.pendingNotificaitons.length;\n\t\t\t\tdisposables.add(\n\t\t\t\t\ttoken.onCancellationRequested(() =>\n\t\t\t\t\t\tthis.pendingNotificaitons.splice(index, 1),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tthis.pendingNotificaitons.push({\n\t\t\t\t\trecommendationsNotification,\n\t\t\t\t\tsource,\n\t\t\t\t\ttoken,\n\t\t\t\t});\n\t\t\t\tif (\n\t\t\t\t\tsource !== RecommendationSource.EXE &&\n\t\t\t\t\tsource <= this.visibleNotification.source\n\t\t\t\t) {\n\t\t\t\t\tthis.hideVisibleNotification(3000);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.visibleNotification = {\n\t\t\t\t\trecommendationsNotification,\n\t\t\t\t\tsource,\n\t\t\t\t\tfrom: Date.now(),\n\t\t\t\t};\n\t\t\t\trecommendationsNotification.show();\n\t\t\t}\n\t\t\tawait raceCancellation(\n\t\t\t\tnew Promise((c) =>\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tEvent.once(recommendationsNotification.onDidClose)(c),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\ttoken,\n\t\t\t);\n\t\t\treturn !recommendationsNotification.isCancelled();\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tprivate showNextNotification(): void {\n\t\tconst index = this.getNextPendingNotificationIndex();\n\t\tconst [nextNotificaiton] =\n\t\t\tindex > -1 ? this.pendingNotificaitons.splice(index, 1) : [];\n\n\t\t// Show the next notification after a delay of 500ms (after the current notification is dismissed)\n\t\ttimeout(nextNotificaiton ? 500 : 0).then(() => {\n\t\t\tthis.unsetVisibileNotification();\n\t\t\tif (nextNotificaiton) {\n\t\t\t\tthis.visibleNotification = {\n\t\t\t\t\trecommendationsNotification:\n\t\t\t\t\t\tnextNotificaiton.recommendationsNotification,\n\t\t\t\t\tsource: nextNotificaiton.source,\n\t\t\t\t\tfrom: Date.now(),\n\t\t\t\t};\n\t\t\t\tnextNotificaiton.recommendationsNotification.show();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Return the recent high priroity pending notification\n\t */\n\tprivate getNextPendingNotificationIndex(): number {\n\t\tlet index = this.pendingNotificaitons.length - 1;\n\t\tif (this.pendingNotificaitons.length) {\n\t\t\tfor (let i = 0; i < this.pendingNotificaitons.length; i++) {\n\t\t\t\tif (\n\t\t\t\t\tthis.pendingNotificaitons[i].source <=\n\t\t\t\t\tthis.pendingNotificaitons[index].source\n\t\t\t\t) {\n\t\t\t\t\tindex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn index;\n\t}\n\n\tprivate hideVisibleNotification(timeInMillis: number): void {\n\t\tif (this.visibleNotification && !this.hideVisibleNotificationPromise) {\n\t\t\tconst visibleNotification = this.visibleNotification;\n\t\t\tthis.hideVisibleNotificationPromise = timeout(\n\t\t\t\tMath.max(\n\t\t\t\t\ttimeInMillis - (Date.now() - visibleNotification.from),\n\t\t\t\t\t0,\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.hideVisibleNotificationPromise.then(() =>\n\t\t\t\tvisibleNotification.recommendationsNotification.hide(),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate unsetVisibileNotification(): void {\n\t\tthis.hideVisibleNotificationPromise?.cancel();\n\t\tthis.hideVisibleNotificationPromise = undefined;\n\t\tthis.visibleNotification = undefined;\n\t}\n\n\tprivate async getInstallableExtensions(\n\t\trecommendations: Array<string | URI>,\n\t): Promise<IExtension[]> {\n\t\tconst result: IExtension[] = [];\n\t\tif (recommendations.length) {\n\t\t\tconst galleryExtensions: string[] = [];\n\t\t\tconst resourceExtensions: URI[] = [];\n\t\t\tfor (const recommendation of recommendations) {\n\t\t\t\tif (typeof recommendation === \"string\") {\n\t\t\t\t\tgalleryExtensions.push(recommendation);\n\t\t\t\t} else {\n\t\t\t\t\tresourceExtensions.push(recommendation);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tconst extensions =\n\t\t\t\t\tawait this.extensionsWorkbenchService.getExtensions(\n\t\t\t\t\t\tgalleryExtensions.map((id) => ({ id })),\n\t\t\t\t\t\t{ source: \"install-recommendations\" },\n\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t);\n\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\tif (\n\t\t\t\t\t\textension.gallery &&\n\t\t\t\t\t\t(await this.extensionManagementService.canInstall(\n\t\t\t\t\t\t\textension.gallery,\n\t\t\t\t\t\t))\n\t\t\t\t\t) {\n\t\t\t\t\t\tresult.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (resourceExtensions.length) {\n\t\t\t\tconst extensions =\n\t\t\t\t\tawait this.extensionsWorkbenchService.getResourceExtensions(\n\t\t\t\t\t\tresourceExtensions,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tawait this.extensionsWorkbenchService.canInstall(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tresult.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate addToImportantRecommendationsIgnore(id: string) {\n\t\tconst importantRecommendationsIgnoreList = [\n\t\t\t...this.ignoredRecommendations,\n\t\t];\n\t\tif (!importantRecommendationsIgnoreList.includes(id.toLowerCase())) {\n\t\t\timportantRecommendationsIgnoreList.push(id.toLowerCase());\n\t\t\tthis.storageService.store(\n\t\t\t\tignoreImportantExtensionRecommendationStorageKey,\n\t\t\t\tJSON.stringify(importantRecommendationsIgnoreList),\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate setIgnoreRecommendationsConfig(configVal: boolean) {\n\t\tthis.configurationService.updateValue(\n\t\t\t\"extensions.ignoreRecommendations\",\n\t\t\tconfigVal,\n\t\t);\n\t}\n\n\tprivate _registerP<T>(o: CancelablePromise<T>): CancelablePromise<T> {\n\t\tthis._register(toDisposable(() => o.cancel()));\n\t\treturn o;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["extensions", "e"]
}
