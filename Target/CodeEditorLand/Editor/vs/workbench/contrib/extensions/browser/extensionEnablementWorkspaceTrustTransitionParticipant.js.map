{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionEnablementWorkspaceTrustTransitionParticipant.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IWorkspaceTrustEnablementService, IWorkspaceTrustManagementService, IWorkspaceTrustTransitionParticipant } from '../../../../platform/workspace/common/workspaceTrust.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IWorkbenchExtensionEnablementService } from '../../../services/extensionManagement/common/extensionManagement.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\n\nexport class ExtensionEnablementWorkspaceTrustTransitionParticipant extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkbenchExtensionEnablementService extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IWorkspaceTrustEnablementService workspaceTrustEnablementService: IWorkspaceTrustEnablementService,\n\t\t@IWorkspaceTrustManagementService workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t) {\n\t\tsuper();\n\n\t\tif (workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n\t\t\t// The extension enablement participant will be registered only after the\n\t\t\t// workspace trust state has been initialized. There is no need to execute\n\t\t\t// the participant as part of the initialization process, as the workspace\n\t\t\t// trust state is initialized before starting the extension host.\n\t\t\tworkspaceTrustManagementService.workspaceTrustInitialized.then(() => {\n\t\t\t\tconst workspaceTrustTransitionParticipant = new class implements IWorkspaceTrustTransitionParticipant {\n\t\t\t\t\tasync participate(trusted: boolean): Promise<void> {\n\t\t\t\t\t\tif (trusted) {\n\t\t\t\t\t\t\t// Untrusted -> Trusted\n\t\t\t\t\t\t\tawait extensionEnablementService.updateExtensionsEnablementsWhenWorkspaceTrustChanges();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Trusted -> Untrusted\n\t\t\t\t\t\t\tif (environmentService.remoteAuthority) {\n\t\t\t\t\t\t\t\thostService.reload();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst stopped = await extensionService.stopExtensionHosts(localize('restartExtensionHost.reason', \"Restarting extension host due to workspace trust change.\"));\n\t\t\t\t\t\t\t\tawait extensionEnablementService.updateExtensionsEnablementsWhenWorkspaceTrustChanges();\n\t\t\t\t\t\t\t\tif (stopped) {\n\t\t\t\t\t\t\t\t\textensionService.startExtensionHosts();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Execute BEFORE the workspace trust transition completes\n\t\t\t\tthis._register(workspaceTrustManagementService.addWorkspaceTrustTransitionParticipant(workspaceTrustTransitionParticipant));\n\t\t\t});\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,kBAAkB;AAC3B,SAAS,kCAAkC,kCAAkC,4CAA4C;AACzH,SAAS,8BAA8B;AACvC,SAAS,oCAAoC;AAC7C,SAAS,4CAA4C;AACrD,SAAS,yBAAyB;AAClC,SAAS,oBAAoB;AAEtB,IAAM,yDAAN,cAAqE,WAA6C;AAAA,EAdzH,OAcyH;AAAA;AAAA;AAAA,EACxH,YACoB,kBACL,aACgB,oBACQ,4BACJ,iCACA,iCACjC;AACD,UAAM;AAEN,QAAI,gCAAgC,wBAAwB,GAAG;AAK9D,sCAAgC,0BAA0B,KAAK,MAAM;AACpE,cAAM,sCAAsC,IAAI,MAAsD;AAAA,UACrG,MAAM,YAAY,SAAiC;AAClD,gBAAI,SAAS;AAEZ,oBAAM,2BAA2B,qDAAqD;AAAA,YACvF,OAAO;AAEN,kBAAI,mBAAmB,iBAAiB;AACvC,4BAAY,OAAO;AAAA,cACpB,OAAO;AACN,sBAAM,UAAU,MAAM,iBAAiB,mBAAmB,SAAS,+BAA+B,0DAA0D,CAAC;AAC7J,sBAAM,2BAA2B,qDAAqD;AACtF,oBAAI,SAAS;AACZ,mCAAiB,oBAAoB;AAAA,gBACtC;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAGA,aAAK,UAAU,gCAAgC,uCAAuC,mCAAmC,CAAC;AAAA,MAC3H,CAAC;AAAA,IACF;AAAA,EACD;AACD;AA1Ca,yDAAN;AAAA,EAEJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
