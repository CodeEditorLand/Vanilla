{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionRecommendations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IExtensionRecommendationReason } from '../../../services/extensionRecommendations/common/extensionRecommendations.js';\n\nexport type GalleryExtensionRecommendation = {\n\treadonly extension: string;\n\treadonly reason: IExtensionRecommendationReason;\n};\n\nexport type ResourceExtensionRecommendation = {\n\treadonly extension: URI;\n\treadonly reason: IExtensionRecommendationReason;\n};\n\nexport type ExtensionRecommendation = GalleryExtensionRecommendation | ResourceExtensionRecommendation;\n\nexport abstract class ExtensionRecommendations extends Disposable {\n\n\treadonly abstract recommendations: ReadonlyArray<ExtensionRecommendation>;\n\tprotected abstract doActivate(): Promise<void>;\n\n\tprivate _activationPromise: Promise<void> | null = null;\n\tget activated(): boolean { return this._activationPromise !== null; }\n\tactivate(): Promise<void> {\n\t\tif (!this._activationPromise) {\n\t\t\tthis._activationPromise = this.doActivate();\n\t\t}\n\t\treturn this._activationPromise;\n\t}\n\n}\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,SAAS,sCAAsC;AAcxC,MAAe,iCAAiC,WAAW;AAAA,EArBlE,OAqBkE;AAAA;AAAA;AAAA,EAKzD,qBAA2C;AAAA,EACnD,IAAI,YAAqB;AAAE,WAAO,KAAK,uBAAuB;AAAA,EAAM;AAAA,EACpE,WAA0B;AACzB,QAAI,CAAC,KAAK,oBAAoB;AAC7B,WAAK,qBAAqB,KAAK,WAAW;AAAA,IAC3C;AACA,WAAO,KAAK;AAAA,EACb;AAED;",
  "names": []
}
