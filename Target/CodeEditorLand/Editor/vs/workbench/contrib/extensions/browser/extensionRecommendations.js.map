{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionRecommendations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IExtensionRecommendationReason } from \"../../../services/extensionRecommendations/common/extensionRecommendations.js\";\n\nexport type GalleryExtensionRecommendation = {\n\treadonly extension: string;\n\treadonly reason: IExtensionRecommendationReason;\n};\n\nexport type ResourceExtensionRecommendation = {\n\treadonly extension: URI;\n\treadonly reason: IExtensionRecommendationReason;\n};\n\nexport type ExtensionRecommendation =\n\t| GalleryExtensionRecommendation\n\t| ResourceExtensionRecommendation;\n\nexport abstract class ExtensionRecommendations extends Disposable {\n\tabstract readonly recommendations: ReadonlyArray<ExtensionRecommendation>;\n\tprotected abstract doActivate(): Promise<void>;\n\n\tprivate _activationPromise: Promise<void> | null = null;\n\tget activated(): boolean {\n\t\treturn this._activationPromise !== null;\n\t}\n\tactivate(): Promise<void> {\n\t\tif (!this._activationPromise) {\n\t\t\tthis._activationPromise = this.doActivate();\n\t\t}\n\t\treturn this._activationPromise;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAkBpB,MAAe,iCAAiC,WAAW;AAAA,EAvBlE,OAuBkE;AAAA;AAAA;AAAA,EAIzD,qBAA2C;AAAA,EACnD,IAAI,YAAqB;AACxB,WAAO,KAAK,uBAAuB;AAAA,EACpC;AAAA,EACA,WAA0B;AACzB,QAAI,CAAC,KAAK,oBAAoB;AAC7B,WAAK,qBAAqB,KAAK,WAAW;AAAA,IAC3C;AACA,WAAO,KAAK;AAAA,EACb;AACD;",
  "names": []
}
