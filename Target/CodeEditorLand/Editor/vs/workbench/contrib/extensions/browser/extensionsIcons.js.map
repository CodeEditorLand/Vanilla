{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsIcons.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { localize } from '../../../../nls.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\n\nexport const extensionsViewIcon = registerIcon('extensions-view-icon', Codicon.extensions, localize('extensionsViewIcon', 'View icon of the extensions view.'));\n\nexport const manageExtensionIcon = registerIcon('extensions-manage', Codicon.gear, localize('manageExtensionIcon', 'Icon for the \\'Manage\\' action in the extensions view.'));\n\nexport const clearSearchResultsIcon = registerIcon('extensions-clear-search-results', Codicon.clearAll, localize('clearSearchResultsIcon', 'Icon for the \\'Clear Search Result\\' action in the extensions view.'));\nexport const refreshIcon = registerIcon('extensions-refresh', Codicon.refresh, localize('refreshIcon', 'Icon for the \\'Refresh\\' action in the extensions view.'));\nexport const filterIcon = registerIcon('extensions-filter', Codicon.filter, localize('filterIcon', 'Icon for the \\'Filter\\' action in the extensions view.'));\n\nexport const installLocalInRemoteIcon = registerIcon('extensions-install-local-in-remote', Codicon.cloudDownload, localize('installLocalInRemoteIcon', 'Icon for the \\'Install Local Extension in Remote\\' action in the extensions view.'));\nexport const installWorkspaceRecommendedIcon = registerIcon('extensions-install-workspace-recommended', Codicon.cloudDownload, localize('installWorkspaceRecommendedIcon', 'Icon for the \\'Install Workspace Recommended Extensions\\' action in the extensions view.'));\nexport const configureRecommendedIcon = registerIcon('extensions-configure-recommended', Codicon.pencil, localize('configureRecommendedIcon', 'Icon for the \\'Configure Recommended Extensions\\' action in the extensions view.'));\n\nexport const syncEnabledIcon = registerIcon('extensions-sync-enabled', Codicon.sync, localize('syncEnabledIcon', 'Icon to indicate that an extension is synced.'));\nexport const syncIgnoredIcon = registerIcon('extensions-sync-ignored', Codicon.syncIgnored, localize('syncIgnoredIcon', 'Icon to indicate that an extension is ignored when syncing.'));\nexport const remoteIcon = registerIcon('extensions-remote', Codicon.remote, localize('remoteIcon', 'Icon to indicate that an extension is remote in the extensions view and editor.'));\nexport const installCountIcon = registerIcon('extensions-install-count', Codicon.cloudDownload, localize('installCountIcon', 'Icon shown along with the install count in the extensions view and editor.'));\nexport const ratingIcon = registerIcon('extensions-rating', Codicon.star, localize('ratingIcon', 'Icon shown along with the rating in the extensions view and editor.'));\nexport const verifiedPublisherIcon = registerIcon('extensions-verified-publisher', Codicon.verifiedFilled, localize('verifiedPublisher', 'Icon used for the verified extension publisher in the extensions view and editor.'));\nexport const preReleaseIcon = registerIcon('extensions-pre-release', Codicon.versions, localize('preReleaseIcon', 'Icon shown for extensions having pre-release versions in extensions view and editor.'));\nexport const sponsorIcon = registerIcon('extensions-sponsor', Codicon.heartFilled, localize('sponsorIcon', 'Icon used for sponsoring extensions in the extensions view and editor.'));\n\nexport const starFullIcon = registerIcon('extensions-star-full', Codicon.starFull, localize('starFullIcon', 'Full star icon used for the rating in the extensions editor.'));\nexport const starHalfIcon = registerIcon('extensions-star-half', Codicon.starHalf, localize('starHalfIcon', 'Half star icon used for the rating in the extensions editor.'));\nexport const starEmptyIcon = registerIcon('extensions-star-empty', Codicon.starEmpty, localize('starEmptyIcon', 'Empty star icon used for the rating in the extensions editor.'));\n\nexport const errorIcon = registerIcon('extensions-error-message', Codicon.error, localize('errorIcon', 'Icon shown with a error message in the extensions editor.'));\nexport const warningIcon = registerIcon('extensions-warning-message', Codicon.warning, localize('warningIcon', 'Icon shown with a warning message in the extensions editor.'));\nexport const infoIcon = registerIcon('extensions-info-message', Codicon.info, localize('infoIcon', 'Icon shown with an info message in the extensions editor.'));\n\nexport const trustIcon = registerIcon('extension-workspace-trust', Codicon.shield, localize('trustIcon', 'Icon shown with a workspace trust message in the extension editor.'));\nexport const activationTimeIcon = registerIcon('extension-activation-time', Codicon.history, localize('activationtimeIcon', 'Icon shown with a activation time message in the extension editor.'));\n"],
  "mappings": "AAKA,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAEtB,MAAM,qBAAqB,aAAa,wBAAwB,QAAQ,YAAY,SAAS,sBAAsB,mCAAmC,CAAC;AAEvJ,MAAM,sBAAsB,aAAa,qBAAqB,QAAQ,MAAM,SAAS,uBAAuB,sDAAwD,CAAC;AAErK,MAAM,yBAAyB,aAAa,mCAAmC,QAAQ,UAAU,SAAS,0BAA0B,mEAAqE,CAAC;AAC1M,MAAM,cAAc,aAAa,sBAAsB,QAAQ,SAAS,SAAS,eAAe,uDAAyD,CAAC;AAC1J,MAAM,aAAa,aAAa,qBAAqB,QAAQ,QAAQ,SAAS,cAAc,sDAAwD,CAAC;AAErJ,MAAM,2BAA2B,aAAa,sCAAsC,QAAQ,eAAe,SAAS,4BAA4B,iFAAmF,CAAC;AACpO,MAAM,kCAAkC,aAAa,4CAA4C,QAAQ,eAAe,SAAS,mCAAmC,wFAA0F,CAAC;AAC/P,MAAM,2BAA2B,aAAa,oCAAoC,QAAQ,QAAQ,SAAS,4BAA4B,gFAAkF,CAAC;AAE1N,MAAM,kBAAkB,aAAa,2BAA2B,QAAQ,MAAM,SAAS,mBAAmB,+CAA+C,CAAC;AAC1J,MAAM,kBAAkB,aAAa,2BAA2B,QAAQ,aAAa,SAAS,mBAAmB,6DAA6D,CAAC;AAC/K,MAAM,aAAa,aAAa,qBAAqB,QAAQ,QAAQ,SAAS,cAAc,iFAAiF,CAAC;AAC9K,MAAM,mBAAmB,aAAa,4BAA4B,QAAQ,eAAe,SAAS,oBAAoB,4EAA4E,CAAC;AACnM,MAAM,aAAa,aAAa,qBAAqB,QAAQ,MAAM,SAAS,cAAc,qEAAqE,CAAC;AAChK,MAAM,wBAAwB,aAAa,iCAAiC,QAAQ,gBAAgB,SAAS,qBAAqB,mFAAmF,CAAC;AACtN,MAAM,iBAAiB,aAAa,0BAA0B,QAAQ,UAAU,SAAS,kBAAkB,sFAAsF,CAAC;AAClM,MAAM,cAAc,aAAa,sBAAsB,QAAQ,aAAa,SAAS,eAAe,wEAAwE,CAAC;AAE7K,MAAM,eAAe,aAAa,wBAAwB,QAAQ,UAAU,SAAS,gBAAgB,8DAA8D,CAAC;AACpK,MAAM,eAAe,aAAa,wBAAwB,QAAQ,UAAU,SAAS,gBAAgB,8DAA8D,CAAC;AACpK,MAAM,gBAAgB,aAAa,yBAAyB,QAAQ,WAAW,SAAS,iBAAiB,+DAA+D,CAAC;AAEzK,MAAM,YAAY,aAAa,4BAA4B,QAAQ,OAAO,SAAS,aAAa,2DAA2D,CAAC;AAC5J,MAAM,cAAc,aAAa,8BAA8B,QAAQ,SAAS,SAAS,eAAe,6DAA6D,CAAC;AACtK,MAAM,WAAW,aAAa,2BAA2B,QAAQ,MAAM,SAAS,YAAY,2DAA2D,CAAC;AAExJ,MAAM,YAAY,aAAa,6BAA6B,QAAQ,QAAQ,SAAS,aAAa,oEAAoE,CAAC;AACvK,MAAM,qBAAqB,aAAa,6BAA6B,QAAQ,SAAS,SAAS,sBAAsB,oEAAoE,CAAC;",
  "names": []
}
