{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/remoteRecommendations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tPlatformToString,\n\tplatform,\n} from \"../../../../base/common/platform.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { ExtensionRecommendationReason } from \"../../../services/extensionRecommendations/common/extensionRecommendations.js\";\nimport {\n\tExtensionRecommendations,\n\ttype GalleryExtensionRecommendation,\n} from \"./extensionRecommendations.js\";\n\nexport class RemoteRecommendations extends ExtensionRecommendations {\n\tprivate _recommendations: GalleryExtensionRecommendation[] = [];\n\tget recommendations(): ReadonlyArray<GalleryExtensionRecommendation> {\n\t\treturn this._recommendations;\n\t}\n\n\tconstructor(\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async doActivate(): Promise<void> {\n\t\tconst extensionTips = {\n\t\t\t...this.productService.remoteExtensionTips,\n\t\t\t...this.productService.virtualWorkspaceExtensionTips,\n\t\t};\n\t\tconst currentPlatform = PlatformToString(platform);\n\t\tthis._recommendations = Object.values(extensionTips)\n\t\t\t.filter(\n\t\t\t\t({ supportedPlatforms }) =>\n\t\t\t\t\t!supportedPlatforms ||\n\t\t\t\t\tsupportedPlatforms.includes(currentPlatform),\n\t\t\t)\n\t\t\t.map((extension) => ({\n\t\t\t\textension: extension.extensionId.toLowerCase(),\n\t\t\t\treason: {\n\t\t\t\t\treasonId: ExtensionRecommendationReason.Application,\n\t\t\t\t\treasonText: \"\",\n\t\t\t\t},\n\t\t\t}));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAChC,SAAS,qCAAqC;AAC9C;AAAA,EACC;AAAA,OAEM;AAEA,IAAM,wBAAN,cAAoC,yBAAyB;AAAA,EAMnE,YACmC,gBACjC;AACD,UAAM;AAF4B;AAAA,EAGnC;AAAA,EA1BD,OAgBoE;AAAA;AAAA;AAAA,EAC3D,mBAAqD,CAAC;AAAA,EAC9D,IAAI,kBAAiE;AACpE,WAAO,KAAK;AAAA,EACb;AAAA,EAQA,MAAgB,aAA4B;AAC3C,UAAM,gBAAgB;AAAA,MACrB,GAAG,KAAK,eAAe;AAAA,MACvB,GAAG,KAAK,eAAe;AAAA,IACxB;AACA,UAAM,kBAAkB,iBAAiB,QAAQ;AACjD,SAAK,mBAAmB,OAAO,OAAO,aAAa,EACjD;AAAA,MACA,CAAC,EAAE,mBAAmB,MACrB,CAAC,sBACD,mBAAmB,SAAS,eAAe;AAAA,IAC7C,EACC,IAAI,CAAC,eAAe;AAAA,MACpB,WAAW,UAAU,YAAY,YAAY;AAAA,MAC7C,QAAQ;AAAA,QACP,UAAU,8BAA8B;AAAA,QACxC,YAAY;AAAA,MACb;AAAA,IACD,EAAE;AAAA,EACJ;AACD;AAhCa,wBAAN;AAAA,EAOJ;AAAA,GAPU;",
  "names": []
}
