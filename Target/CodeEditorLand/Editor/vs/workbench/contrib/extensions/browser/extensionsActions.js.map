{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/extensionActions.css';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { IAction, Action, Separator, SubmenuAction, IActionChangeEvent } from '../../../../base/common/actions.js';\nimport { Delayer, Promises, Throttler } from '../../../../base/common/async.js';\nimport * as DOM from '../../../../base/browser/dom.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport * as json from '../../../../base/common/json.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { disposeIfDisposable } from '../../../../base/common/lifecycle.js';\nimport { IExtension, ExtensionState, IExtensionsWorkbenchService, IExtensionContainer, TOGGLE_IGNORE_EXTENSION_ACTION_ID, SELECT_INSTALL_VSIX_EXTENSION_COMMAND_ID, THEME_ACTIONS_GROUP, INSTALL_ACTIONS_GROUP, UPDATE_ACTIONS_GROUP, ExtensionEditorTab, ExtensionRuntimeActionType, IExtensionArg, AutoUpdateConfigurationKey } from '../common/extensions.js';\nimport { ExtensionsConfigurationInitialContent } from '../common/extensionsFileTemplate.js';\nimport { IGalleryExtension, IExtensionGalleryService, ILocalExtension, InstallOptions, InstallOperation, TargetPlatformToString, ExtensionManagementErrorCode } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { IWorkbenchExtensionEnablementService, EnablementState, IExtensionManagementServerService, IExtensionManagementServer, IWorkbenchExtensionManagementService } from '../../../services/extensionManagement/common/extensionManagement.js';\nimport { ExtensionRecommendationReason, IExtensionIgnoredRecommendationsService, IExtensionRecommendationsService } from '../../../services/extensionRecommendations/common/extensionRecommendations.js';\nimport { areSameExtensions, getExtensionId } from '../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { ExtensionType, ExtensionIdentifier, IExtensionDescription, IExtensionManifest, isLanguagePackExtension, getWorkspaceSupportTypeMessage, TargetPlatform, isApplicationScopedExtension } from '../../../../platform/extensions/common/extensions.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IFileService, IFileContent } from '../../../../platform/files/common/files.js';\nimport { IWorkspaceContextService, WorkbenchState, IWorkspaceFolder } from '../../../../platform/workspace/common/workspace.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { IExtensionService, toExtension, toExtensionDescription } from '../../../services/extensions/common/extensions.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { registerThemingParticipant, IColorTheme, ICssStyleCollector } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { buttonBackground, buttonForeground, buttonHoverBackground, registerColor, editorWarningForeground, editorInfoForeground, editorErrorForeground, buttonSeparator } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IJSONEditingService } from '../../../services/configuration/common/jsonEditing.js';\nimport { ITextEditorSelection } from '../../../../platform/editor/common/editor.js';\nimport { ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { MenuId, IMenuService, MenuItemAction, SubmenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { PICK_WORKSPACE_FOLDER_COMMAND_ID } from '../../../browser/actions/workspaceCommands.js';\nimport { INotificationService, IPromptChoice, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IQuickPickItem, IQuickInputService, QuickPickItem } from '../../../../platform/quickinput/common/quickInput.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { IWorkbenchThemeService, IWorkbenchTheme, IWorkbenchColorTheme, IWorkbenchFileIconTheme, IWorkbenchProductIconTheme } from '../../../services/themes/common/workbenchThemeService.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IDialogService, IPromptButton } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IProgressService, ProgressLocation } from '../../../../platform/progress/common/progress.js';\nimport { IActionViewItemOptions, ActionViewItem } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { EXTENSIONS_CONFIG, IExtensionsConfigContent } from '../../../services/extensionRecommendations/common/workspaceExtensionsConfig.js';\nimport { getErrorMessage, isCancellationError } from '../../../../base/common/errors.js';\nimport { IUserDataSyncEnablementService } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { IContextMenuProvider } from '../../../../base/browser/contextmenu.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { errorIcon, infoIcon, manageExtensionIcon, syncEnabledIcon, syncIgnoredIcon, trustIcon, warningIcon } from './extensionsIcons.js';\nimport { isIOS, isWeb, language } from '../../../../base/common/platform.js';\nimport { IExtensionManifestPropertiesService } from '../../../services/extensions/common/extensionManifestPropertiesService.js';\nimport { IWorkspaceTrustEnablementService, IWorkspaceTrustManagementService } from '../../../../platform/workspace/common/workspaceTrust.js';\nimport { isVirtualWorkspace } from '../../../../platform/workspace/common/virtualWorkspace.js';\nimport { escapeMarkdownSyntaxTokens, IMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { fromNow } from '../../../../base/common/date.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { getLocale } from '../../../../platform/languagePacks/common/languagePacks.js';\nimport { ILocaleService } from '../../../services/localization/common/locale.js';\nimport { isString } from '../../../../base/common/types.js';\nimport { showWindowLogActionId } from '../../../services/log/common/logConstants.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { Extensions, IExtensionFeaturesManagementService, IExtensionFeaturesRegistry } from '../../../services/extensionManagement/common/extensionFeatures.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IUpdateService } from '../../../../platform/update/common/update.js';\nimport { ActionWithDropdownActionViewItem, IActionWithDropdownActionViewItemOptions } from '../../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\n\nexport class PromptExtensionInstallFailureAction extends Action {\n\n\tconstructor(\n\t\tprivate readonly extension: IExtension,\n\t\tprivate readonly version: string,\n\t\tprivate readonly installOperation: InstallOperation,\n\t\tprivate readonly error: Error,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper('extension.promptExtensionInstallFailure');\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (isCancellationError(this.error)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.error(this.error);\n\n\t\tif (this.error.name === ExtensionManagementErrorCode.Unsupported) {\n\t\t\tconst productName = isWeb ? localize('VS Code for Web', \"{0} for the Web\", this.productService.nameLong) : this.productService.nameLong;\n\t\t\tconst message = localize('cannot be installed', \"The '{0}' extension is not available in {1}. Click 'More Information' to learn more.\", this.extension.displayName || this.extension.identifier.id, productName);\n\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage,\n\t\t\t\tprimaryButton: localize({ key: 'more information', comment: ['&& denotes a mnemonic'] }, \"&&More Information\"),\n\t\t\t\tcancelButton: localize('close', \"Close\")\n\t\t\t});\n\t\t\tif (confirmed) {\n\t\t\t\tthis.openerService.open(isWeb ? URI.parse('https://aka.ms/vscode-web-extensions-guide') : URI.parse('https://aka.ms/vscode-remote'));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (ExtensionManagementErrorCode.ReleaseVersionNotFound === (<ExtensionManagementErrorCode>this.error.name)) {\n\t\t\tawait this.dialogService.prompt({\n\t\t\t\ttype: 'error',\n\t\t\t\tmessage: getErrorMessage(this.error),\n\t\t\t\tbuttons: [{\n\t\t\t\t\tlabel: localize('install prerelease', \"Install Pre-Release\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tconst installAction = this.instantiationService.createInstance(InstallAction, { installPreReleaseVersion: true });\n\t\t\t\t\t\tinstallAction.extension = this.extension;\n\t\t\t\t\t\treturn installAction.run();\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\tcancelButton: localize('cancel', \"Cancel\")\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif ([ExtensionManagementErrorCode.Incompatible, ExtensionManagementErrorCode.IncompatibleApi, ExtensionManagementErrorCode.IncompatibleTargetPlatform, ExtensionManagementErrorCode.Malicious, ExtensionManagementErrorCode.Deprecated].includes(<ExtensionManagementErrorCode>this.error.name)) {\n\t\t\tawait this.dialogService.info(getErrorMessage(this.error));\n\t\t\treturn;\n\t\t}\n\n\t\tif (ExtensionManagementErrorCode.Signature === (<ExtensionManagementErrorCode>this.error.name)) {\n\t\t\tawait this.dialogService.prompt({\n\t\t\t\ttype: 'error',\n\t\t\t\tmessage: localize('signature verification failed', \"{0} cannot verify the '{1}' extension. Are you sure you want to install it?\", this.productService.nameLong, this.extension.displayName || this.extension.identifier.id),\n\t\t\t\tbuttons: [{\n\t\t\t\t\tlabel: localize('install anyway', \"Install Anyway\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tconst installAction = this.instantiationService.createInstance(InstallAction, { donotVerifySignature: true });\n\t\t\t\t\t\tinstallAction.extension = this.extension;\n\t\t\t\t\t\treturn installAction.run();\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\tcancelButton: localize('cancel', \"Cancel\")\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst operationMessage = this.installOperation === InstallOperation.Update ? localize('update operation', \"Error while updating '{0}' extension.\", this.extension.displayName || this.extension.identifier.id)\n\t\t\t: localize('install operation', \"Error while installing '{0}' extension.\", this.extension.displayName || this.extension.identifier.id);\n\t\tlet additionalMessage;\n\t\tconst promptChoices: IPromptChoice[] = [];\n\n\t\tconst downloadUrl = await this.getDownloadUrl();\n\t\tif (downloadUrl) {\n\t\t\tadditionalMessage = localize('check logs', \"Please check the [log]({0}) for more details.\", `command:${showWindowLogActionId}`);\n\t\t\tpromptChoices.push({\n\t\t\t\tlabel: localize('download', \"Try Downloading Manually...\"),\n\t\t\t\trun: () => this.openerService.open(downloadUrl).then(() => {\n\t\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\tlocalize('install vsix', 'Once downloaded, please manually install the downloaded VSIX of \\'{0}\\'.', this.extension.identifier.id),\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\tlabel: localize('installVSIX', \"Install from VSIX...\"),\n\t\t\t\t\t\t\trun: () => this.commandService.executeCommand(SELECT_INSTALL_VSIX_EXTENSION_COMMAND_ID)\n\t\t\t\t\t\t}]\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\n\t\tconst message = `${operationMessage}${additionalMessage ? ` ${additionalMessage}` : ''}`;\n\t\tthis.notificationService.prompt(Severity.Error, message, promptChoices);\n\t}\n\n\tprivate async getDownloadUrl(): Promise<URI | undefined> {\n\t\tif (isIOS) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this.extension.gallery) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this.productService.extensionsGallery) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this.extensionManagementServerService.localExtensionManagementServer && !this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet targetPlatform = this.extension.gallery.properties.targetPlatform;\n\t\tif (targetPlatform !== TargetPlatform.UNIVERSAL && targetPlatform !== TargetPlatform.UNDEFINED && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\ttry {\n\t\t\t\tconst manifest = await this.galleryService.getManifest(this.extension.gallery, CancellationToken.None);\n\t\t\t\tif (manifest && this.extensionManifestPropertiesService.prefersExecuteOnWorkspace(manifest)) {\n\t\t\t\t\ttargetPlatform = await this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getTargetPlatform();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\tif (targetPlatform === TargetPlatform.UNKNOWN) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn URI.parse(`${this.productService.extensionsGallery.serviceUrl}/publishers/${this.extension.publisher}/vsextensions/${this.extension.name}/${this.version}/vspackage${targetPlatform !== TargetPlatform.UNDEFINED ? `?targetPlatform=${targetPlatform}` : ''}`);\n\t}\n\n}\n\nexport interface IExtensionActionChangeEvent extends IActionChangeEvent {\n\treadonly hidden?: boolean;\n\treadonly menuActions?: IAction[];\n}\n\nexport abstract class ExtensionAction extends Action implements IExtensionContainer {\n\n\tprotected override _onDidChange = this._register(new Emitter<IExtensionActionChangeEvent>());\n\toverride readonly onDidChange = this._onDidChange.event;\n\n\tstatic readonly EXTENSION_ACTION_CLASS = 'extension-action';\n\tstatic readonly TEXT_ACTION_CLASS = `${ExtensionAction.EXTENSION_ACTION_CLASS} text`;\n\tstatic readonly LABEL_ACTION_CLASS = `${ExtensionAction.EXTENSION_ACTION_CLASS} label`;\n\tstatic readonly PROMINENT_LABEL_ACTION_CLASS = `${ExtensionAction.LABEL_ACTION_CLASS} prominent`;\n\tstatic readonly ICON_ACTION_CLASS = `${ExtensionAction.EXTENSION_ACTION_CLASS} icon`;\n\n\tprivate _extension: IExtension | null = null;\n\tget extension(): IExtension | null { return this._extension; }\n\tset extension(extension: IExtension | null) { this._extension = extension; this.update(); }\n\n\tprivate _hidden: boolean = false;\n\tget hidden(): boolean { return this._hidden; }\n\tset hidden(hidden: boolean) {\n\t\tif (this._hidden !== hidden) {\n\t\t\tthis._hidden = hidden;\n\t\t\tthis._onDidChange.fire({ hidden });\n\t\t}\n\t}\n\n\tprotected override _setEnabled(value: boolean): void {\n\t\tsuper._setEnabled(value);\n\t\tif (this.hideOnDisabled) {\n\t\t\tthis.hidden = !value;\n\t\t}\n\t}\n\n\tprotected hideOnDisabled: boolean = true;\n\n\tabstract update(): void;\n}\n\nexport class ButtonWithDropDownExtensionAction extends ExtensionAction {\n\n\tprivate primaryAction: IAction | undefined;\n\n\treadonly menuActionClassNames: string[] = [];\n\tprivate _menuActions: IAction[] = [];\n\tget menuActions(): IAction[] { return [...this._menuActions]; }\n\n\toverride get extension(): IExtension | null {\n\t\treturn super.extension;\n\t}\n\n\toverride set extension(extension: IExtension | null) {\n\t\tthis.extensionActions.forEach(a => a.extension = extension);\n\t\tsuper.extension = extension;\n\t}\n\n\tprotected readonly extensionActions: ExtensionAction[];\n\n\tconstructor(\n\t\tid: string,\n\t\tclazz: string,\n\t\tprivate readonly actionsGroups: ExtensionAction[][],\n\t) {\n\t\tclazz = `${clazz} action-dropdown`;\n\t\tsuper(id, undefined, clazz);\n\t\tthis.menuActionClassNames = clazz.split(' ');\n\t\tthis.hideOnDisabled = false;\n\t\tthis.extensionActions = actionsGroups.flat();\n\t\tthis.update();\n\t\tthis._register(Event.any(...this.extensionActions.map(a => a.onDidChange))(() => this.update(true)));\n\t\tthis.extensionActions.forEach(a => this._register(a));\n\t}\n\n\tupdate(donotUpdateActions?: boolean): void {\n\t\tif (!donotUpdateActions) {\n\t\t\tthis.extensionActions.forEach(a => a.update());\n\t\t}\n\n\t\tconst actionsGroups = this.actionsGroups.map(actionsGroup => actionsGroup.filter(a => !a.hidden));\n\n\t\tlet actions: IAction[] = [];\n\t\tfor (const visibleActions of actionsGroups) {\n\t\t\tif (visibleActions.length) {\n\t\t\t\tactions = [...actions, ...visibleActions, new Separator()];\n\t\t\t}\n\t\t}\n\t\tactions = actions.length ? actions.slice(0, actions.length - 1) : actions;\n\n\t\tthis.primaryAction = actions[0];\n\t\tthis._menuActions = actions.length > 1 ? actions : [];\n\t\tthis._onDidChange.fire({ menuActions: this._menuActions });\n\n\t\tif (this.primaryAction) {\n\t\t\tthis.hidden = false;\n\t\t\tthis.enabled = this.primaryAction.enabled;\n\t\t\tthis.label = this.getLabel(this.primaryAction as ExtensionAction);\n\t\t\tthis.tooltip = this.primaryAction.tooltip;\n\t\t} else {\n\t\t\tthis.hidden = true;\n\t\t\tthis.enabled = false;\n\t\t}\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (this.enabled) {\n\t\t\tawait this.primaryAction?.run();\n\t\t}\n\t}\n\n\tprotected getLabel(action: ExtensionAction): string {\n\t\treturn action.label;\n\t}\n}\n\nexport class ButtonWithDropdownExtensionActionViewItem extends ActionWithDropdownActionViewItem {\n\n\tconstructor(\n\t\taction: ButtonWithDropDownExtensionAction,\n\t\toptions: IActionViewItemOptions & IActionWithDropdownActionViewItemOptions,\n\t\tcontextMenuProvider: IContextMenuProvider\n\t) {\n\t\tsuper(null, action, options, contextMenuProvider);\n\t\tthis._register(action.onDidChange(e => {\n\t\t\tif (e.hidden !== undefined || e.menuActions !== undefined) {\n\t\t\t\tthis.updateClass();\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tthis.updateClass();\n\t}\n\n\tprotected override updateClass(): void {\n\t\tsuper.updateClass();\n\t\tif (this.element && this.dropdownMenuActionViewItem?.element) {\n\t\t\tthis.element.classList.toggle('hide', (<ButtonWithDropDownExtensionAction>this._action).hidden);\n\t\t\tconst isMenuEmpty = (<ButtonWithDropDownExtensionAction>this._action).menuActions.length === 0;\n\t\t\tthis.element.classList.toggle('empty', isMenuEmpty);\n\t\t\tthis.dropdownMenuActionViewItem.element.classList.toggle('hide', isMenuEmpty);\n\t\t}\n\t}\n\n}\n\nexport class InstallAction extends ExtensionAction {\n\n\tstatic readonly CLASS = `${this.LABEL_ACTION_CLASS} prominent install`;\n\tprivate static readonly HIDE = `${this.CLASS} hide`;\n\n\tprotected _manifest: IExtensionManifest | null = null;\n\tset manifest(manifest: IExtensionManifest | null) {\n\t\tthis._manifest = manifest;\n\t\tthis.updateLabel();\n\t}\n\n\tprivate readonly updateThrottler = new Throttler();\n\tpublic readonly options: InstallOptions;\n\n\tconstructor(\n\t\toptions: InstallOptions,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IExtensionService private readonly runtimeExtensionService: IExtensionService,\n\t\t@IWorkbenchThemeService private readonly workbenchThemeService: IWorkbenchThemeService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t) {\n\t\tsuper('extensions.install', localize('install', \"Install\"), InstallAction.CLASS, false);\n\t\tthis.hideOnDisabled = false;\n\t\tthis.options = { isMachineScoped: false, ...options };\n\t\tthis.update();\n\t\tthis._register(this.labelService.onDidChangeFormatters(() => this.updateLabel(), this));\n\t}\n\n\tupdate(): void {\n\t\tthis.updateThrottler.queue(() => this.computeAndUpdateEnablement());\n\t}\n\n\tprotected async computeAndUpdateEnablement(): Promise<void> {\n\t\tthis.enabled = false;\n\t\tthis.class = InstallAction.HIDE;\n\t\tthis.hidden = true;\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.isBuiltin) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extensionsWorkbenchService.canSetLanguage(this.extension)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.state !== ExtensionState.Uninstalled) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.options.installPreReleaseVersion && !this.extension.hasPreReleaseVersion) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.options.installPreReleaseVersion && !this.extension.hasReleaseVersion) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hidden = false;\n\t\tthis.class = InstallAction.CLASS;\n\t\tif (await this.extensionsWorkbenchService.canInstall(this.extension)) {\n\t\t\tthis.enabled = true;\n\t\t\tthis.updateLabel();\n\t\t}\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.extension.deprecationInfo) {\n\t\t\tlet detail: string | MarkdownString = localize('deprecated message', \"This extension is deprecated as it is no longer being maintained.\");\n\t\t\tenum DeprecationChoice {\n\t\t\t\tInstallAnyway = 0,\n\t\t\t\tShowAlternateExtension = 1,\n\t\t\t\tConfigureSettings = 2,\n\t\t\t\tCancel = 3\n\t\t\t}\n\t\t\tconst buttons: IPromptButton<DeprecationChoice>[] = [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize('install anyway', \"Install Anyway\"),\n\t\t\t\t\trun: () => DeprecationChoice.InstallAnyway\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tif (this.extension.deprecationInfo.extension) {\n\t\t\t\tdetail = localize('deprecated with alternate extension message', \"This extension is deprecated. Use the {0} extension instead.\", this.extension.deprecationInfo.extension.displayName);\n\n\t\t\t\tconst alternateExtension = this.extension.deprecationInfo.extension;\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel: localize({ key: 'Show alternate extension', comment: ['&& denotes a mnemonic'] }, \"&&Open {0}\", this.extension.deprecationInfo.extension.displayName),\n\t\t\t\t\trun: async () => {\n\t\t\t\t\t\tconst [extension] = await this.extensionsWorkbenchService.getExtensions([{ id: alternateExtension.id, preRelease: alternateExtension.preRelease }], CancellationToken.None);\n\t\t\t\t\t\tawait this.extensionsWorkbenchService.open(extension);\n\n\t\t\t\t\t\treturn DeprecationChoice.ShowAlternateExtension;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (this.extension.deprecationInfo.settings) {\n\t\t\t\tdetail = localize('deprecated with alternate settings message', \"This extension is deprecated as this functionality is now built-in to VS Code.\");\n\n\t\t\t\tconst settings = this.extension.deprecationInfo.settings;\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel: localize({ key: 'configure in settings', comment: ['&& denotes a mnemonic'] }, \"&&Configure Settings\"),\n\t\t\t\t\trun: async () => {\n\t\t\t\t\t\tawait this.preferencesService.openSettings({ query: settings.map(setting => `@id:${setting}`).join(' ') });\n\n\t\t\t\t\t\treturn DeprecationChoice.ConfigureSettings;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (this.extension.deprecationInfo.additionalInfo) {\n\t\t\t\tdetail = new MarkdownString(`${detail} ${this.extension.deprecationInfo.additionalInfo}`);\n\t\t\t}\n\n\t\t\tconst { result } = await this.dialogService.prompt({\n\t\t\t\ttype: Severity.Warning,\n\t\t\t\tmessage: localize('install confirmation', \"Are you sure you want to install '{0}'?\", this.extension.displayName),\n\t\t\t\tdetail: isString(detail) ? detail : undefined,\n\t\t\t\tcustom: isString(detail) ? undefined : {\n\t\t\t\t\tmarkdownDetails: [{\n\t\t\t\t\t\tmarkdown: detail\n\t\t\t\t\t}]\n\t\t\t\t},\n\t\t\t\tbuttons,\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => DeprecationChoice.Cancel\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (result !== DeprecationChoice.InstallAnyway) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.extensionsWorkbenchService.open(this.extension, { showPreReleaseVersion: this.options.installPreReleaseVersion });\n\n\t\talert(localize('installExtensionStart', \"Installing extension {0} started. An editor is now open with more details on this extension\", this.extension.displayName));\n\n\t\t/* __GDPR__\n\t\t\t\"extensions:action:install\" : {\n\t\t\t\t\"owner\": \"sandy081\",\n\t\t\t\t\"actionId\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('extensions:action:install', { ...this.extension.telemetryData, actionId: this.id });\n\n\t\tconst extension = await this.install(this.extension);\n\n\t\tif (extension?.local) {\n\t\t\talert(localize('installExtensionComplete', \"Installing extension {0} is completed.\", this.extension.displayName));\n\t\t\tconst runningExtension = await this.getRunningExtension(extension.local);\n\t\t\tif (runningExtension && !(runningExtension.activationEvents && runningExtension.activationEvents.some(activationEent => activationEent.startsWith('onLanguage')))) {\n\t\t\t\tconst action = await this.getThemeAction(extension);\n\t\t\t\tif (action) {\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn action.run({ showCurrentTheme: true, ignoreFocusLost: true });\n\t\t\t\t\t} finally {\n\t\t\t\t\t\taction.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate async getThemeAction(extension: IExtension): Promise<ExtensionAction | undefined> {\n\t\tconst colorThemes = await this.workbenchThemeService.getColorThemes();\n\t\tif (colorThemes.some(theme => isThemeFromExtension(theme, extension))) {\n\t\t\treturn this.instantiationService.createInstance(SetColorThemeAction);\n\t\t}\n\t\tconst fileIconThemes = await this.workbenchThemeService.getFileIconThemes();\n\t\tif (fileIconThemes.some(theme => isThemeFromExtension(theme, extension))) {\n\t\t\treturn this.instantiationService.createInstance(SetFileIconThemeAction);\n\t\t}\n\t\tconst productIconThemes = await this.workbenchThemeService.getProductIconThemes();\n\t\tif (productIconThemes.some(theme => isThemeFromExtension(theme, extension))) {\n\t\t\treturn this.instantiationService.createInstance(SetProductIconThemeAction);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async install(extension: IExtension): Promise<IExtension | undefined> {\n\t\ttry {\n\t\t\treturn await this.extensionsWorkbenchService.install(extension, this.options);\n\t\t} catch (error) {\n\t\t\tawait this.instantiationService.createInstance(PromptExtensionInstallFailureAction, extension, extension.latestVersion, InstallOperation.Install, error).run();\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate async getRunningExtension(extension: ILocalExtension): Promise<IExtensionDescription | null> {\n\t\tconst runningExtension = await this.runtimeExtensionService.getExtension(extension.identifier.id);\n\t\tif (runningExtension) {\n\t\t\treturn runningExtension;\n\t\t}\n\t\tif (this.runtimeExtensionService.canAddExtension(toExtensionDescription(extension))) {\n\t\t\treturn new Promise<IExtensionDescription | null>((c, e) => {\n\t\t\t\tconst disposable = this.runtimeExtensionService.onDidChangeExtensions(async () => {\n\t\t\t\t\tconst runningExtension = await this.runtimeExtensionService.getExtension(extension.identifier.id);\n\t\t\t\t\tif (runningExtension) {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\tc(runningExtension);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected updateLabel(): void {\n\t\tthis.label = this.getLabel();\n\t}\n\n\tgetLabel(primary?: boolean): string {\n\t\tif (this.extension?.isWorkspaceScoped && this.extension.resourceExtension && this.contextService.isInsideWorkspace(this.extension.resourceExtension.location)) {\n\t\t\treturn localize('install workspace version', \"Install Workspace Extension\");\n\t\t}\n\t\t/* install pre-release version */\n\t\tif (this.options.installPreReleaseVersion && this.extension?.hasPreReleaseVersion) {\n\t\t\treturn primary ? localize('install pre-release', \"Install Pre-Release\") : localize('install pre-release version', \"Install Pre-Release Version\");\n\t\t}\n\t\t/* install released version that has a pre release version */\n\t\tif (this.extension?.hasPreReleaseVersion) {\n\t\t\treturn primary ? localize('install', \"Install\") : localize('install release version', \"Install Release Version\");\n\t\t}\n\t\treturn localize('install', \"Install\");\n\t}\n\n}\n\nexport class InstallDropdownAction extends ButtonWithDropDownExtensionAction {\n\n\tset manifest(manifest: IExtensionManifest | null) {\n\t\tthis.extensionActions.forEach(a => (<InstallAction>a).manifest = manifest);\n\t\tthis.update();\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IExtensionsWorkbenchService extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t) {\n\t\tsuper(`extensions.installActions`, InstallAction.CLASS, [\n\t\t\t[\n\t\t\t\tinstantiationService.createInstance(InstallAction, { installPreReleaseVersion: extensionsWorkbenchService.preferPreReleases }),\n\t\t\t\tinstantiationService.createInstance(InstallAction, { installPreReleaseVersion: !extensionsWorkbenchService.preferPreReleases }),\n\t\t\t]\n\t\t]);\n\t}\n\n\tprotected override getLabel(action: InstallAction): string {\n\t\treturn action.getLabel(true);\n\t}\n\n}\n\nexport class InstallingLabelAction extends ExtensionAction {\n\n\tprivate static readonly LABEL = localize('installing', \"Installing\");\n\tprivate static readonly CLASS = `${ExtensionAction.LABEL_ACTION_CLASS} install installing`;\n\n\tconstructor() {\n\t\tsuper('extension.installing', InstallingLabelAction.LABEL, InstallingLabelAction.CLASS, false);\n\t}\n\n\tupdate(): void {\n\t\tthis.class = `${InstallingLabelAction.CLASS}${this.extension && this.extension.state === ExtensionState.Installing ? '' : ' hide'}`;\n\t}\n}\n\nexport abstract class InstallInOtherServerAction extends ExtensionAction {\n\n\tprotected static readonly INSTALL_LABEL = localize('install', \"Install\");\n\tprotected static readonly INSTALLING_LABEL = localize('installing', \"Installing\");\n\n\tprivate static readonly Class = `${ExtensionAction.LABEL_ACTION_CLASS} prominent install-other-server`;\n\tprivate static readonly InstallingClass = `${ExtensionAction.LABEL_ACTION_CLASS} install-other-server installing`;\n\n\tupdateWhenCounterExtensionChanges: boolean = true;\n\n\tconstructor(\n\t\tid: string,\n\t\tprivate readonly server: IExtensionManagementServer | null,\n\t\tprivate readonly canInstallAnyWhere: boolean,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionManagementServerService protected readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(id, InstallInOtherServerAction.INSTALL_LABEL, InstallInOtherServerAction.Class, false);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tthis.class = InstallInOtherServerAction.Class;\n\n\t\tif (this.canInstall()) {\n\t\t\tconst extensionInOtherServer = this.extensionsWorkbenchService.installed.filter(e => areSameExtensions(e.identifier, this.extension!.identifier) && e.server === this.server)[0];\n\t\t\tif (extensionInOtherServer) {\n\t\t\t\t// Getting installed in other server\n\t\t\t\tif (extensionInOtherServer.state === ExtensionState.Installing && !extensionInOtherServer.local) {\n\t\t\t\t\tthis.enabled = true;\n\t\t\t\t\tthis.label = InstallInOtherServerAction.INSTALLING_LABEL;\n\t\t\t\t\tthis.class = InstallInOtherServerAction.InstallingClass;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Not installed in other server\n\t\t\t\tthis.enabled = true;\n\t\t\t\tthis.label = this.getInstallLabel();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected canInstall(): boolean {\n\t\t// Disable if extension is not installed or not an user extension\n\t\tif (\n\t\t\t!this.extension\n\t\t\t|| !this.server\n\t\t\t|| !this.extension.local\n\t\t\t|| this.extension.state !== ExtensionState.Installed\n\t\t\t|| this.extension.type !== ExtensionType.User\n\t\t\t|| this.extension.enablementState === EnablementState.DisabledByEnvironment || this.extension.enablementState === EnablementState.DisabledByTrustRequirement || this.extension.enablementState === EnablementState.DisabledByVirtualWorkspace\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isLanguagePackExtension(this.extension.local.manifest)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefers to run on UI\n\t\tif (this.server === this.extensionManagementServerService.localExtensionManagementServer && this.extensionManifestPropertiesService.prefersExecuteOnUI(this.extension.local.manifest)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefers to run on Workspace\n\t\tif (this.server === this.extensionManagementServerService.remoteExtensionManagementServer && this.extensionManifestPropertiesService.prefersExecuteOnWorkspace(this.extension.local.manifest)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefers to run on Web\n\t\tif (this.server === this.extensionManagementServerService.webExtensionManagementServer && this.extensionManifestPropertiesService.prefersExecuteOnWeb(this.extension.local.manifest)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.canInstallAnyWhere) {\n\t\t\t// Can run on UI\n\t\t\tif (this.server === this.extensionManagementServerService.localExtensionManagementServer && this.extensionManifestPropertiesService.canExecuteOnUI(this.extension.local.manifest)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Can run on Workspace\n\t\t\tif (this.server === this.extensionManagementServerService.remoteExtensionManagementServer && this.extensionManifestPropertiesService.canExecuteOnWorkspace(this.extension.local.manifest)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.extension?.local) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.extension?.server) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.server) {\n\t\t\treturn;\n\t\t}\n\t\tthis.extensionsWorkbenchService.open(this.extension);\n\t\talert(localize('installExtensionStart', \"Installing extension {0} started. An editor is now open with more details on this extension\", this.extension.displayName));\n\t\treturn this.extensionsWorkbenchService.installInServer(this.extension, this.server);\n\t}\n\n\tprotected abstract getInstallLabel(): string;\n}\n\nexport class RemoteInstallAction extends InstallInOtherServerAction {\n\n\tconstructor(\n\t\tcanInstallAnyWhere: boolean,\n\t\t@IExtensionsWorkbenchService extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionManagementServerService extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionManifestPropertiesService extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(`extensions.remoteinstall`, extensionManagementServerService.remoteExtensionManagementServer, canInstallAnyWhere, extensionsWorkbenchService, extensionManagementServerService, extensionManifestPropertiesService);\n\t}\n\n\tprotected getInstallLabel(): string {\n\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer\n\t\t\t? localize({ key: 'install in remote', comment: ['This is the name of the action to install an extension in remote server. Placeholder is for the name of remote server.'] }, \"Install in {0}\", this.extensionManagementServerService.remoteExtensionManagementServer.label)\n\t\t\t: InstallInOtherServerAction.INSTALL_LABEL;\n\t}\n\n}\n\nexport class LocalInstallAction extends InstallInOtherServerAction {\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionManagementServerService extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionManifestPropertiesService extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(`extensions.localinstall`, extensionManagementServerService.localExtensionManagementServer, false, extensionsWorkbenchService, extensionManagementServerService, extensionManifestPropertiesService);\n\t}\n\n\tprotected getInstallLabel(): string {\n\t\treturn localize('install locally', \"Install Locally\");\n\t}\n\n}\n\nexport class WebInstallAction extends InstallInOtherServerAction {\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionManagementServerService extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionManifestPropertiesService extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(`extensions.webInstall`, extensionManagementServerService.webExtensionManagementServer, false, extensionsWorkbenchService, extensionManagementServerService, extensionManifestPropertiesService);\n\t}\n\n\tprotected getInstallLabel(): string {\n\t\treturn localize('install browser', \"Install in Browser\");\n\t}\n\n}\n\nexport class UninstallAction extends ExtensionAction {\n\n\tstatic readonly UninstallLabel = localize('uninstallAction', \"Uninstall\");\n\tprivate static readonly UninstallingLabel = localize('Uninstalling', \"Uninstalling\");\n\n\tstatic readonly UninstallClass = `${ExtensionAction.LABEL_ACTION_CLASS} uninstall`;\n\tprivate static readonly UnInstallingClass = `${ExtensionAction.LABEL_ACTION_CLASS} uninstall uninstalling`;\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IDialogService private readonly dialogService: IDialogService\n\t) {\n\t\tsuper('extensions.uninstall', UninstallAction.UninstallLabel, UninstallAction.UninstallClass, false);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tif (!this.extension) {\n\t\t\tthis.enabled = false;\n\t\t\treturn;\n\t\t}\n\n\t\tconst state = this.extension.state;\n\n\t\tif (state === ExtensionState.Uninstalling) {\n\t\t\tthis.label = UninstallAction.UninstallingLabel;\n\t\t\tthis.class = UninstallAction.UnInstallingClass;\n\t\t\tthis.enabled = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.label = UninstallAction.UninstallLabel;\n\t\tthis.class = UninstallAction.UninstallClass;\n\t\tthis.tooltip = UninstallAction.UninstallLabel;\n\n\t\tif (state !== ExtensionState.Installed) {\n\t\t\tthis.enabled = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.extension.isBuiltin) {\n\t\t\tthis.enabled = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enabled = true;\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\talert(localize('uninstallExtensionStart', \"Uninstalling extension {0} started.\", this.extension.displayName));\n\n\t\ttry {\n\t\t\tawait this.extensionsWorkbenchService.uninstall(this.extension);\n\t\t\talert(localize('uninstallExtensionComplete', \"Please reload Visual Studio Code to complete the uninstallation of the extension {0}.\", this.extension.displayName));\n\t\t} catch (error) {\n\t\t\tif (!isCancellationError(error)) {\n\t\t\t\tthis.dialogService.error(getErrorMessage(error));\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class UpdateAction extends ExtensionAction {\n\n\tprivate static readonly EnabledClass = `${this.LABEL_ACTION_CLASS} prominent update`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} disabled`;\n\n\tprivate readonly updateThrottler = new Throttler();\n\n\tconstructor(\n\t\tprivate readonly verbose: boolean,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(`extensions.update`, localize('update', \"Update\"), UpdateAction.DisabledClass, false);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.updateThrottler.queue(() => this.computeAndUpdateEnablement());\n\t\tif (this.extension) {\n\t\t\tthis.label = this.verbose ? localize('update to', \"Update to v{0}\", this.extension.latestVersion) : localize('update', \"Update\");\n\t\t}\n\t}\n\n\tprivate async computeAndUpdateEnablement(): Promise<void> {\n\t\tthis.enabled = false;\n\t\tthis.class = UpdateAction.DisabledClass;\n\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.extension.deprecationInfo) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst canInstall = await this.extensionsWorkbenchService.canInstall(this.extension);\n\t\tconst isInstalled = this.extension.state === ExtensionState.Installed;\n\n\t\tthis.enabled = canInstall && isInstalled && this.extension.outdated;\n\t\tthis.class = this.enabled ? UpdateAction.EnabledClass : UpdateAction.DisabledClass;\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst consent = await this.extensionsWorkbenchService.shouldRequireConsentToUpdate(this.extension);\n\t\tif (consent) {\n\t\t\tconst { result } = await this.dialogService.prompt<'update' | 'review' | 'cancel'>({\n\t\t\t\ttype: 'warning',\n\t\t\t\ttitle: localize('updateExtensionConsentTitle', \"Update {0} Extension\", this.extension.displayName),\n\t\t\t\tmessage: localize('updateExtensionConsent', \"{0}\\n\\nWould you like to update the extension?\", consent),\n\t\t\t\tbuttons: [{\n\t\t\t\t\tlabel: localize('update', \"Update\"),\n\t\t\t\t\trun: () => 'update'\n\t\t\t\t}, {\n\t\t\t\t\tlabel: localize('review', \"Review\"),\n\t\t\t\t\trun: () => 'review'\n\t\t\t\t}, {\n\t\t\t\t\tlabel: localize('cancel', \"Cancel\"),\n\t\t\t\t\trun: () => 'cancel'\n\t\t\t\t}]\n\t\t\t});\n\t\t\tif (result === 'cancel') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (result === 'review') {\n\t\t\t\tif (this.extension.hasChangelog()) {\n\t\t\t\t\treturn this.extensionsWorkbenchService.open(this.extension, { tab: ExtensionEditorTab.Changelog });\n\t\t\t\t}\n\t\t\t\tif (this.extension.repository) {\n\t\t\t\t\treturn this.openerService.open(this.extension.repository);\n\t\t\t\t}\n\t\t\t\treturn this.extensionsWorkbenchService.open(this.extension);\n\t\t\t}\n\t\t}\n\n\t\talert(localize('updateExtensionStart', \"Updating extension {0} to version {1} started.\", this.extension.displayName, this.extension.latestVersion));\n\t\treturn this.install(this.extension);\n\t}\n\n\tprivate async install(extension: IExtension): Promise<void> {\n\t\ttry {\n\t\t\tawait this.extensionsWorkbenchService.install(extension, extension.local?.preRelease ? { installPreReleaseVersion: true } : undefined);\n\t\t\talert(localize('updateExtensionComplete', \"Updating extension {0} to version {1} completed.\", extension.displayName, extension.latestVersion));\n\t\t} catch (err) {\n\t\t\tthis.instantiationService.createInstance(PromptExtensionInstallFailureAction, extension, extension.latestVersion, InstallOperation.Update, err).run();\n\t\t}\n\t}\n}\n\nexport class ToggleAutoUpdateForExtensionAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.toggleAutoUpdateForExtension';\n\tstatic readonly LABEL = localize2('enableAutoUpdateLabel', \"Auto Update\");\n\n\tprivate static readonly EnabledClass = `${ExtensionAction.EXTENSION_ACTION_CLASS} auto-update`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} hide`;\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(ToggleAutoUpdateForExtensionAction.ID, ToggleAutoUpdateForExtensionAction.LABEL.value, ToggleAutoUpdateForExtensionAction.DisabledClass);\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(AutoUpdateConfigurationKey)) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t\tthis.update();\n\t}\n\n\toverride update() {\n\t\tthis.enabled = false;\n\t\tthis.class = ToggleAutoUpdateForExtensionAction.DisabledClass;\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.isBuiltin) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.deprecationInfo?.disallowInstall) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extensionsWorkbenchService.getAutoUpdateValue() === 'onlyEnabledExtensions' && !this.extensionEnablementService.isEnabledEnablementState(this.extension.enablementState)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.enabled = true;\n\t\tthis.class = ToggleAutoUpdateForExtensionAction.EnabledClass;\n\t\tthis.checked = this.extensionsWorkbenchService.isAutoUpdateEnabledFor(this.extension);\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst enableAutoUpdate = !this.extensionsWorkbenchService.isAutoUpdateEnabledFor(this.extension);\n\t\tawait this.extensionsWorkbenchService.updateAutoUpdateEnablementFor(this.extension, enableAutoUpdate);\n\n\t\tif (enableAutoUpdate) {\n\t\t\talert(localize('enableAutoUpdate', \"Enabled auto updates for\", this.extension.displayName));\n\t\t} else {\n\t\t\talert(localize('disableAutoUpdate', \"Disabled auto updates for\", this.extension.displayName));\n\t\t}\n\t}\n}\n\nexport class ToggleAutoUpdatesForPublisherAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.toggleAutoUpdatesForPublisher';\n\tstatic readonly LABEL = localize('toggleAutoUpdatesForPublisherLabel', \"Auto Update All (From Publisher)\");\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService\n\t) {\n\t\tsuper(ToggleAutoUpdatesForPublisherAction.ID, ToggleAutoUpdatesForPublisherAction.LABEL);\n\t}\n\n\toverride update() { }\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\talert(localize('ignoreExtensionUpdatePublisher', \"Ignoring updates published by {0}.\", this.extension.publisherDisplayName));\n\t\tconst enableAutoUpdate = !this.extensionsWorkbenchService.isAutoUpdateEnabledFor(this.extension.publisher);\n\t\tawait this.extensionsWorkbenchService.updateAutoUpdateEnablementFor(this.extension.publisher, enableAutoUpdate);\n\t\tif (enableAutoUpdate) {\n\t\t\talert(localize('enableAutoUpdate', \"Enabled auto updates for\", this.extension.displayName));\n\t\t} else {\n\t\t\talert(localize('disableAutoUpdate', \"Disabled auto updates for\", this.extension.displayName));\n\t\t}\n\t}\n}\n\nexport class MigrateDeprecatedExtensionAction extends ExtensionAction {\n\n\tprivate static readonly EnabledClass = `${ExtensionAction.LABEL_ACTION_CLASS} migrate`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} disabled`;\n\n\tconstructor(\n\t\tprivate readonly small: boolean,\n\t\t@IExtensionsWorkbenchService private extensionsWorkbenchService: IExtensionsWorkbenchService\n\t) {\n\t\tsuper('extensionsAction.migrateDeprecatedExtension', localize('migrateExtension', \"Migrate\"), MigrateDeprecatedExtensionAction.DisabledClass, false);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tthis.class = MigrateDeprecatedExtensionAction.DisabledClass;\n\t\tif (!this.extension?.local) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.state !== ExtensionState.Installed) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.extension.deprecationInfo?.extension) {\n\t\t\treturn;\n\t\t}\n\t\tconst id = this.extension.deprecationInfo.extension.id;\n\t\tif (this.extensionsWorkbenchService.local.some(e => areSameExtensions(e.identifier, { id }))) {\n\t\t\treturn;\n\t\t}\n\t\tthis.enabled = true;\n\t\tthis.class = MigrateDeprecatedExtensionAction.EnabledClass;\n\t\tthis.tooltip = localize('migrate to', \"Migrate to {0}\", this.extension.deprecationInfo.extension.displayName);\n\t\tthis.label = this.small ? localize('migrate', \"Migrate\") : this.tooltip;\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension?.deprecationInfo?.extension) {\n\t\t\treturn;\n\t\t}\n\t\tconst local = this.extension.local;\n\t\tawait this.extensionsWorkbenchService.uninstall(this.extension);\n\t\tconst [extension] = await this.extensionsWorkbenchService.getExtensions([{ id: this.extension.deprecationInfo.extension.id, preRelease: this.extension.deprecationInfo?.extension?.preRelease }], CancellationToken.None);\n\t\tawait this.extensionsWorkbenchService.install(extension, { isMachineScoped: local?.isMachineScoped });\n\t}\n}\n\nexport abstract class DropDownExtensionAction extends ExtensionAction {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tcssClass: string,\n\t\tenabled: boolean,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService\n\t) {\n\t\tsuper(id, label, cssClass, enabled);\n\t}\n\n\tprivate _actionViewItem: DropDownExtensionActionViewItem | null = null;\n\tcreateActionViewItem(options: IActionViewItemOptions): DropDownExtensionActionViewItem {\n\t\tthis._actionViewItem = this.instantiationService.createInstance(DropDownExtensionActionViewItem, this, options);\n\t\treturn this._actionViewItem;\n\t}\n\n\tpublic override run({ actionGroups, disposeActionsOnHide }: { actionGroups: IAction[][]; disposeActionsOnHide: boolean }): Promise<any> {\n\t\tthis._actionViewItem?.showMenu(actionGroups, disposeActionsOnHide);\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class DropDownExtensionActionViewItem extends ActionViewItem {\n\n\tconstructor(\n\t\taction: DropDownExtensionAction,\n\t\toptions: IActionViewItemOptions,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper(null, action, { ...options, icon: true, label: true });\n\t}\n\n\tpublic showMenu(menuActionGroups: IAction[][], disposeActionsOnHide: boolean): void {\n\t\tif (this.element) {\n\t\t\tconst actions = this.getActions(menuActionGroups);\n\t\t\tconst elementPosition = DOM.getDomNodePagePosition(this.element);\n\t\t\tconst anchor = { x: elementPosition.left, y: elementPosition.top + elementPosition.height + 10 };\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => anchor,\n\t\t\t\tgetActions: () => actions,\n\t\t\t\tactionRunner: this.actionRunner,\n\t\t\t\tonHide: () => { if (disposeActionsOnHide) { disposeIfDisposable(actions); } }\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getActions(menuActionGroups: IAction[][]): IAction[] {\n\t\tlet actions: IAction[] = [];\n\t\tfor (const menuActions of menuActionGroups) {\n\t\t\tactions = [...actions, ...menuActions, new Separator()];\n\t\t}\n\t\treturn actions.length ? actions.slice(0, actions.length - 1) : actions;\n\t}\n}\n\nasync function getContextMenuActionsGroups(extension: IExtension | undefined | null, contextKeyService: IContextKeyService, instantiationService: IInstantiationService): Promise<[string, Array<MenuItemAction | SubmenuItemAction>][]> {\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst extensionsWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\tconst extensionEnablementService = accessor.get(IWorkbenchExtensionEnablementService);\n\t\tconst menuService = accessor.get(IMenuService);\n\t\tconst extensionRecommendationsService = accessor.get(IExtensionRecommendationsService);\n\t\tconst extensionIgnoredRecommendationsService = accessor.get(IExtensionIgnoredRecommendationsService);\n\t\tconst workbenchThemeService = accessor.get(IWorkbenchThemeService);\n\t\tconst cksOverlay: [string, any][] = [];\n\n\t\tif (extension) {\n\t\t\tcksOverlay.push(['extension', extension.identifier.id]);\n\t\t\tcksOverlay.push(['isBuiltinExtension', extension.isBuiltin]);\n\t\t\tcksOverlay.push(['isDefaultApplicationScopedExtension', extension.local && isApplicationScopedExtension(extension.local.manifest)]);\n\t\t\tcksOverlay.push(['isApplicationScopedExtension', extension.local && extension.local.isApplicationScoped]);\n\t\t\tcksOverlay.push(['isWorkspaceScopedExtension', extension.isWorkspaceScoped]);\n\t\t\tcksOverlay.push(['isGalleryExtension', !!extension.identifier.uuid]);\n\t\t\tif (extension.local) {\n\t\t\t\tcksOverlay.push(['extensionSource', extension.local.source]);\n\t\t\t}\n\t\t\tcksOverlay.push(['extensionHasConfiguration', extension.local && !!extension.local.manifest.contributes && !!extension.local.manifest.contributes.configuration]);\n\t\t\tcksOverlay.push(['extensionHasKeybindings', extension.local && !!extension.local.manifest.contributes && !!extension.local.manifest.contributes.keybindings]);\n\t\t\tcksOverlay.push(['extensionHasCommands', extension.local && !!extension.local.manifest.contributes && !!extension.local.manifest.contributes?.commands]);\n\t\t\tcksOverlay.push(['isExtensionRecommended', !!extensionRecommendationsService.getAllRecommendationsWithReason()[extension.identifier.id.toLowerCase()]]);\n\t\t\tcksOverlay.push(['isExtensionWorkspaceRecommended', extensionRecommendationsService.getAllRecommendationsWithReason()[extension.identifier.id.toLowerCase()]?.reasonId === ExtensionRecommendationReason.Workspace]);\n\t\t\tcksOverlay.push(['isUserIgnoredRecommendation', extensionIgnoredRecommendationsService.globalIgnoredRecommendations.some(e => e === extension.identifier.id.toLowerCase())]);\n\t\t\tcksOverlay.push(['isExtensionPinned', extension.pinned]);\n\t\t\tcksOverlay.push(['isExtensionEnabled', extensionEnablementService.isEnabledEnablementState(extension.enablementState)]);\n\t\t\tswitch (extension.state) {\n\t\t\t\tcase ExtensionState.Installing:\n\t\t\t\t\tcksOverlay.push(['extensionStatus', 'installing']);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ExtensionState.Installed:\n\t\t\t\t\tcksOverlay.push(['extensionStatus', 'installed']);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ExtensionState.Uninstalling:\n\t\t\t\t\tcksOverlay.push(['extensionStatus', 'uninstalling']);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ExtensionState.Uninstalled:\n\t\t\t\t\tcksOverlay.push(['extensionStatus', 'uninstalled']);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcksOverlay.push(['installedExtensionIsPreReleaseVersion', !!extension.local?.isPreReleaseVersion]);\n\t\t\tcksOverlay.push(['installedExtensionIsOptedToPreRelease', !!extension.local?.preRelease]);\n\t\t\tcksOverlay.push(['galleryExtensionIsPreReleaseVersion', !!extension.gallery?.properties.isPreReleaseVersion]);\n\t\t\tcksOverlay.push(['galleryExtensionHasPreReleaseVersion', extension.gallery?.hasPreReleaseVersion]);\n\t\t\tcksOverlay.push(['extensionHasPreReleaseVersion', extension.hasPreReleaseVersion]);\n\t\t\tcksOverlay.push(['extensionHasReleaseVersion', extension.hasReleaseVersion]);\n\t\t\tcksOverlay.push(['extensionDisallowInstall', !!extension.deprecationInfo?.disallowInstall]);\n\n\t\t\tconst [colorThemes, fileIconThemes, productIconThemes] = await Promise.all([workbenchThemeService.getColorThemes(), workbenchThemeService.getFileIconThemes(), workbenchThemeService.getProductIconThemes()]);\n\t\t\tcksOverlay.push(['extensionHasColorThemes', colorThemes.some(theme => isThemeFromExtension(theme, extension))]);\n\t\t\tcksOverlay.push(['extensionHasFileIconThemes', fileIconThemes.some(theme => isThemeFromExtension(theme, extension))]);\n\t\t\tcksOverlay.push(['extensionHasProductIconThemes', productIconThemes.some(theme => isThemeFromExtension(theme, extension))]);\n\n\t\t\tcksOverlay.push(['canSetLanguage', extensionsWorkbenchService.canSetLanguage(extension)]);\n\t\t\tcksOverlay.push(['isActiveLanguagePackExtension', extension.gallery && language === getLocale(extension.gallery)]);\n\t\t}\n\n\t\tconst actionsGroups = menuService.getMenuActions(MenuId.ExtensionContext, contextKeyService.createOverlay(cksOverlay), { shouldForwardArgs: true });\n\t\treturn actionsGroups;\n\t});\n}\n\nfunction toActions(actionsGroups: [string, Array<MenuItemAction | SubmenuItemAction>][], instantiationService: IInstantiationService): IAction[][] {\n\tconst result: IAction[][] = [];\n\tfor (const [, actions] of actionsGroups) {\n\t\tresult.push(actions.map(action => {\n\t\t\tif (action instanceof SubmenuAction) {\n\t\t\t\treturn action;\n\t\t\t}\n\t\t\treturn instantiationService.createInstance(MenuItemExtensionAction, action);\n\t\t}));\n\t}\n\treturn result;\n}\n\n\nexport async function getContextMenuActions(extension: IExtension | undefined | null, contextKeyService: IContextKeyService, instantiationService: IInstantiationService): Promise<IAction[][]> {\n\tconst actionsGroups = await getContextMenuActionsGroups(extension, contextKeyService, instantiationService);\n\treturn toActions(actionsGroups, instantiationService);\n}\n\nexport class ManageExtensionAction extends DropDownExtensionAction {\n\n\tstatic readonly ID = 'extensions.manage';\n\n\tprivate static readonly Class = `${ExtensionAction.ICON_ACTION_CLASS} manage ` + ThemeIcon.asClassName(manageExtensionIcon);\n\tprivate static readonly HideManageExtensionClass = `${this.Class} hide`;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\n\t\tsuper(ManageExtensionAction.ID, '', '', true, instantiationService);\n\n\t\tthis.tooltip = localize('manage', \"Manage\");\n\n\t\tthis.update();\n\t}\n\n\tasync getActionGroups(): Promise<IAction[][]> {\n\t\tconst groups: IAction[][] = [];\n\t\tconst contextMenuActionsGroups = await getContextMenuActionsGroups(this.extension, this.contextKeyService, this.instantiationService);\n\t\tconst themeActions: IAction[] = [], installActions: IAction[] = [], updateActions: IAction[] = [], otherActionGroups: IAction[][] = [];\n\t\tfor (const [group, actions] of contextMenuActionsGroups) {\n\t\t\tif (group === INSTALL_ACTIONS_GROUP) {\n\t\t\t\tinstallActions.push(...toActions([[group, actions]], this.instantiationService)[0]);\n\t\t\t} else if (group === UPDATE_ACTIONS_GROUP) {\n\t\t\t\tupdateActions.push(...toActions([[group, actions]], this.instantiationService)[0]);\n\t\t\t} else if (group === THEME_ACTIONS_GROUP) {\n\t\t\t\tthemeActions.push(...toActions([[group, actions]], this.instantiationService)[0]);\n\t\t\t} else {\n\t\t\t\totherActionGroups.push(...toActions([[group, actions]], this.instantiationService));\n\t\t\t}\n\t\t}\n\n\t\tif (themeActions.length) {\n\t\t\tgroups.push(themeActions);\n\t\t}\n\n\t\tgroups.push([\n\t\t\tthis.instantiationService.createInstance(EnableGloballyAction),\n\t\t\tthis.instantiationService.createInstance(EnableForWorkspaceAction)\n\t\t]);\n\t\tgroups.push([\n\t\t\tthis.instantiationService.createInstance(DisableGloballyAction),\n\t\t\tthis.instantiationService.createInstance(DisableForWorkspaceAction)\n\t\t]);\n\t\tif (updateActions.length) {\n\t\t\tgroups.push(updateActions);\n\t\t}\n\t\tgroups.push([\n\t\t\t...(installActions.length ? installActions : []),\n\t\t\tthis.instantiationService.createInstance(InstallAnotherVersionAction, this.extension, false),\n\t\t\tthis.instantiationService.createInstance(UninstallAction),\n\t\t]);\n\n\t\totherActionGroups.forEach(actions => groups.push(actions));\n\n\t\tgroups.forEach(group => group.forEach(extensionAction => {\n\t\t\tif (extensionAction instanceof ExtensionAction) {\n\t\t\t\textensionAction.extension = this.extension;\n\t\t\t}\n\t\t}));\n\n\t\treturn groups;\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\t\treturn super.run({ actionGroups: await this.getActionGroups(), disposeActionsOnHide: true });\n\t}\n\n\tupdate(): void {\n\t\tthis.class = ManageExtensionAction.HideManageExtensionClass;\n\t\tthis.enabled = false;\n\t\tif (this.extension) {\n\t\t\tconst state = this.extension.state;\n\t\t\tthis.enabled = state === ExtensionState.Installed;\n\t\t\tthis.class = this.enabled || state === ExtensionState.Uninstalling ? ManageExtensionAction.Class : ManageExtensionAction.HideManageExtensionClass;\n\t\t}\n\t}\n}\n\nexport class ExtensionEditorManageExtensionAction extends DropDownExtensionAction {\n\n\tconstructor(\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\tinstantiationService: IInstantiationService\n\t) {\n\t\tsuper('extensionEditor.manageExtension', '', `${ExtensionAction.ICON_ACTION_CLASS} manage ${ThemeIcon.asClassName(manageExtensionIcon)}`, true, instantiationService);\n\t\tthis.tooltip = localize('manage', \"Manage\");\n\t}\n\n\tupdate(): void { }\n\n\toverride async run(): Promise<any> {\n\t\tconst actionGroups: IAction[][] = [];\n\t\t(await getContextMenuActions(this.extension, this.contextKeyService, this.instantiationService)).forEach(actions => actionGroups.push(actions));\n\t\tactionGroups.forEach(group => group.forEach(extensionAction => {\n\t\t\tif (extensionAction instanceof ExtensionAction) {\n\t\t\t\textensionAction.extension = this.extension;\n\t\t\t}\n\t\t}));\n\t\treturn super.run({ actionGroups, disposeActionsOnHide: true });\n\t}\n\n}\n\nexport class MenuItemExtensionAction extends ExtensionAction {\n\n\tconstructor(\n\t\tprivate readonly action: IAction,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t) {\n\t\tsuper(action.id, action.label);\n\t}\n\n\toverride get enabled(): boolean {\n\t\treturn this.action.enabled;\n\t}\n\n\toverride set enabled(value: boolean) {\n\t\tthis.action.enabled = value;\n\t}\n\n\tupdate() {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.action.id === TOGGLE_IGNORE_EXTENSION_ACTION_ID) {\n\t\t\tthis.checked = !this.extensionsWorkbenchService.isExtensionIgnoredToSync(this.extension);\n\t\t} else if (this.action.id === ToggleAutoUpdateForExtensionAction.ID) {\n\t\t\tthis.checked = this.extensionsWorkbenchService.isAutoUpdateEnabledFor(this.extension);\n\t\t} else if (this.action.id === ToggleAutoUpdatesForPublisherAction.ID) {\n\t\t\tthis.checked = this.extensionsWorkbenchService.isAutoUpdateEnabledFor(this.extension.publisher);\n\t\t} else {\n\t\t\tthis.checked = this.action.checked;\n\t\t}\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (this.extension) {\n\t\t\tconst id = this.extension.local ? getExtensionId(this.extension.local.manifest.publisher, this.extension.local.manifest.name)\n\t\t\t\t: this.extension.gallery ? getExtensionId(this.extension.gallery.publisher, this.extension.gallery.name)\n\t\t\t\t\t: this.extension.identifier.id;\n\t\t\tconst extensionArg: IExtensionArg = {\n\t\t\t\tid: this.extension.identifier.id,\n\t\t\t\tversion: this.extension.version,\n\t\t\t\tlocation: this.extension.local?.location\n\t\t\t};\n\t\t\tawait this.action.run(id, extensionArg);\n\t\t}\n\t}\n}\n\nexport class TogglePreReleaseExtensionAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.togglePreRlease';\n\tstatic readonly LABEL = localize('togglePreRleaseLabel', \"Pre-Release\");\n\n\tprivate static readonly EnabledClass = `${ExtensionAction.LABEL_ACTION_CLASS} pre-release`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} hide`;\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t) {\n\t\tsuper(TogglePreReleaseExtensionAction.ID, TogglePreReleaseExtensionAction.LABEL, TogglePreReleaseExtensionAction.DisabledClass);\n\t\tthis.update();\n\t}\n\n\toverride update() {\n\t\tthis.enabled = false;\n\t\tthis.class = TogglePreReleaseExtensionAction.DisabledClass;\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.isBuiltin) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.state !== ExtensionState.Installed) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.extension.hasPreReleaseVersion) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.extension.gallery) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.preRelease && !this.extension.isPreReleaseVersion) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.extension.preRelease && !this.extension.gallery.hasPreReleaseVersion) {\n\t\t\treturn;\n\t\t}\n\t\tthis.enabled = true;\n\t\tthis.class = TogglePreReleaseExtensionAction.EnabledClass;\n\n\t\tif (this.extension.preRelease) {\n\t\t\tthis.label = localize('togglePreRleaseDisableLabel', \"Switch to Release Version\");\n\t\t\tthis.tooltip = localize('togglePreRleaseDisableTooltip', \"This will switch and enable updates to release versions\");\n\t\t} else {\n\t\t\tthis.label = localize('switchToPreReleaseLabel', \"Switch to Pre-Release Version\");\n\t\t\tthis.tooltip = localize('switchToPreReleaseTooltip', \"This will switch to pre-release version and enable updates to latest version always\");\n\t\t}\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\tthis.extensionsWorkbenchService.open(this.extension, { showPreReleaseVersion: !this.extension.preRelease });\n\t\tawait this.extensionsWorkbenchService.togglePreRelease(this.extension);\n\t}\n}\n\nexport class InstallAnotherVersionAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.install.anotherVersion';\n\tstatic readonly LABEL = localize('install another version', \"Install Specific Version...\");\n\n\tconstructor(\n\t\textension: IExtension | null,\n\t\tprivate readonly whenInstalled: boolean,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkbenchExtensionManagementService private readonly extensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t) {\n\t\tsuper(InstallAnotherVersionAction.ID, InstallAnotherVersionAction.LABEL, ExtensionAction.LABEL_ACTION_CLASS);\n\t\tthis.extension = extension;\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = !!this.extension && !this.extension.isBuiltin && !!this.extension.identifier.uuid && !this.extension.deprecationInfo;\n\t\tif (this.enabled && this.whenInstalled) {\n\t\t\tthis.enabled = !!this.extension?.local && !!this.extension.server && this.extension.state === ExtensionState.Installed;\n\t\t}\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\tconst targetPlatform = this.extension.server ? await this.extension.server.extensionManagementService.getTargetPlatform() : await this.extensionManagementService.getTargetPlatform();\n\t\tconst allVersions = await this.extensionGalleryService.getAllCompatibleVersions(this.extension.identifier, this.extension.local?.preRelease ?? this.extension.gallery?.properties.isPreReleaseVersion ?? false, targetPlatform);\n\t\tif (!allVersions.length) {\n\t\t\tawait this.dialogService.info(localize('no versions', \"This extension has no other versions.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst picks = allVersions.map((v, i) => {\n\t\t\treturn {\n\t\t\t\tid: v.version,\n\t\t\t\tlabel: v.version,\n\t\t\t\tdescription: `${fromNow(new Date(Date.parse(v.date)), true)}${v.isPreReleaseVersion ? ` (${localize('pre-release', \"pre-release\")})` : ''}${v.version === this.extension?.local?.manifest.version ? ` (${localize('current', \"current\")})` : ''}`,\n\t\t\t\tariaLabel: `${v.isPreReleaseVersion ? 'Pre-Release version' : 'Release version'} ${v.version}`,\n\t\t\t\tisPreReleaseVersion: v.isPreReleaseVersion\n\t\t\t};\n\t\t});\n\t\tconst pick = await this.quickInputService.pick(picks,\n\t\t\t{\n\t\t\t\tplaceHolder: localize('selectVersion', \"Select Version to Install\"),\n\t\t\t\tmatchOnDetail: true\n\t\t\t});\n\t\tif (pick) {\n\t\t\tif (this.extension.local?.manifest.version === pick.id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait this.extensionsWorkbenchService.install(this.extension, { installPreReleaseVersion: pick.isPreReleaseVersion, version: pick.id });\n\t\t\t} catch (error) {\n\t\t\t\tthis.instantiationService.createInstance(PromptExtensionInstallFailureAction, this.extension, pick.id, InstallOperation.Install, error).run();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n}\n\nexport class EnableForWorkspaceAction extends ExtensionAction {\n\n\tstatic readonly ID = 'extensions.enableForWorkspace';\n\tstatic readonly LABEL = localize('enableForWorkspaceAction', \"Enable (Workspace)\");\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService\n\t) {\n\t\tsuper(EnableForWorkspaceAction.ID, EnableForWorkspaceAction.LABEL, ExtensionAction.LABEL_ACTION_CLASS);\n\t\tthis.tooltip = localize('enableForWorkspaceActionToolTip', \"Enable this extension only in this workspace\");\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension && this.extension.local && !this.extension.isWorkspaceScoped) {\n\t\t\tthis.enabled = this.extension.state === ExtensionState.Installed\n\t\t\t\t&& !this.extensionEnablementService.isEnabled(this.extension.local)\n\t\t\t\t&& this.extensionEnablementService.canChangeWorkspaceEnablement(this.extension.local);\n\t\t}\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extension, EnablementState.EnabledWorkspace);\n\t}\n}\n\nexport class EnableGloballyAction extends ExtensionAction {\n\n\tstatic readonly ID = 'extensions.enableGlobally';\n\tstatic readonly LABEL = localize('enableGloballyAction', \"Enable\");\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService\n\t) {\n\t\tsuper(EnableGloballyAction.ID, EnableGloballyAction.LABEL, ExtensionAction.LABEL_ACTION_CLASS);\n\t\tthis.tooltip = localize('enableGloballyActionToolTip', \"Enable this extension\");\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension && this.extension.local && !this.extension.isWorkspaceScoped) {\n\t\t\tthis.enabled = this.extension.state === ExtensionState.Installed\n\t\t\t\t&& this.extensionEnablementService.isDisabledGlobally(this.extension.local)\n\t\t\t\t&& this.extensionEnablementService.canChangeEnablement(this.extension.local);\n\t\t}\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extension, EnablementState.EnabledGlobally);\n\t}\n}\n\nexport class DisableForWorkspaceAction extends ExtensionAction {\n\n\tstatic readonly ID = 'extensions.disableForWorkspace';\n\tstatic readonly LABEL = localize('disableForWorkspaceAction', \"Disable (Workspace)\");\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t) {\n\t\tsuper(DisableForWorkspaceAction.ID, DisableForWorkspaceAction.LABEL, ExtensionAction.LABEL_ACTION_CLASS);\n\t\tthis.tooltip = localize('disableForWorkspaceActionToolTip', \"Disable this extension only in this workspace\");\n\t\tthis.update();\n\t\tthis._register(this.extensionService.onDidChangeExtensions(() => this.update()));\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension && this.extension.local && !this.extension.isWorkspaceScoped && this.extensionService.extensions.some(e => areSameExtensions({ id: e.identifier.value, uuid: e.uuid }, this.extension!.identifier) && this.workspaceContextService.getWorkbenchState() !== WorkbenchState.EMPTY)) {\n\t\t\tthis.enabled = this.extension.state === ExtensionState.Installed\n\t\t\t\t&& (this.extension.enablementState === EnablementState.EnabledGlobally || this.extension.enablementState === EnablementState.EnabledWorkspace)\n\t\t\t\t&& this.extensionEnablementService.canChangeWorkspaceEnablement(this.extension.local);\n\t\t}\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extension, EnablementState.DisabledWorkspace);\n\t}\n}\n\nexport class DisableGloballyAction extends ExtensionAction {\n\n\tstatic readonly ID = 'extensions.disableGlobally';\n\tstatic readonly LABEL = localize('disableGloballyAction', \"Disable\");\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t) {\n\t\tsuper(DisableGloballyAction.ID, DisableGloballyAction.LABEL, ExtensionAction.LABEL_ACTION_CLASS);\n\t\tthis.tooltip = localize('disableGloballyActionToolTip', \"Disable this extension\");\n\t\tthis.update();\n\t\tthis._register(this.extensionService.onDidChangeExtensions(() => this.update()));\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension && this.extension.local && !this.extension.isWorkspaceScoped && this.extensionService.extensions.some(e => areSameExtensions({ id: e.identifier.value, uuid: e.uuid }, this.extension!.identifier))) {\n\t\t\tthis.enabled = this.extension.state === ExtensionState.Installed\n\t\t\t\t&& (this.extension.enablementState === EnablementState.EnabledGlobally || this.extension.enablementState === EnablementState.EnabledWorkspace)\n\t\t\t\t&& this.extensionEnablementService.canChangeEnablement(this.extension.local);\n\t\t}\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extension, EnablementState.DisabledGlobally);\n\t}\n}\n\nexport class EnableDropDownAction extends ButtonWithDropDownExtensionAction {\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper('extensions.enable', ExtensionAction.LABEL_ACTION_CLASS, [\n\t\t\t[\n\t\t\t\tinstantiationService.createInstance(EnableGloballyAction),\n\t\t\t\tinstantiationService.createInstance(EnableForWorkspaceAction)\n\t\t\t]\n\t\t]);\n\t}\n}\n\nexport class DisableDropDownAction extends ButtonWithDropDownExtensionAction {\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper('extensions.disable', ExtensionAction.LABEL_ACTION_CLASS, [[\n\t\t\tinstantiationService.createInstance(DisableGloballyAction),\n\t\t\tinstantiationService.createInstance(DisableForWorkspaceAction)\n\t\t]]);\n\t}\n\n}\n\nexport class ExtensionRuntimeStateAction extends ExtensionAction {\n\n\tprivate static readonly EnabledClass = `${ExtensionAction.LABEL_ACTION_CLASS} reload`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} disabled`;\n\n\tupdateWhenCounterExtensionChanges: boolean = true;\n\n\tconstructor(\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IUpdateService private readonly updateService: IUpdateService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper('extensions.runtimeState', '', ExtensionRuntimeStateAction.DisabledClass, false);\n\t\tthis._register(this.extensionService.onDidChangeExtensions(() => this.update()));\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tthis.tooltip = '';\n\t\tthis.class = ExtensionRuntimeStateAction.DisabledClass;\n\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst state = this.extension.state;\n\t\tif (state === ExtensionState.Installing || state === ExtensionState.Uninstalling) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.extension.local && this.extension.local.manifest && this.extension.local.manifest.contributes && this.extension.local.manifest.contributes.localizations && this.extension.local.manifest.contributes.localizations.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst runtimeState = this.extension.runtimeState;\n\t\tif (!runtimeState) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enabled = true;\n\t\tthis.class = ExtensionRuntimeStateAction.EnabledClass;\n\t\tthis.tooltip = runtimeState.reason;\n\t\tthis.label = runtimeState.action === ExtensionRuntimeActionType.ReloadWindow ? localize('reload window', 'Reload Window')\n\t\t\t: runtimeState.action === ExtensionRuntimeActionType.RestartExtensions ? localize('restart extensions', 'Restart Extensions')\n\t\t\t\t: runtimeState.action === ExtensionRuntimeActionType.QuitAndInstall ? localize('restart product', 'Restart to Update')\n\t\t\t\t\t: runtimeState.action === ExtensionRuntimeActionType.ApplyUpdate || runtimeState.action === ExtensionRuntimeActionType.DownloadUpdate ? localize('update product', 'Update {0}', this.productService.nameShort) : '';\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tconst runtimeState = this.extension?.runtimeState;\n\t\tif (!runtimeState?.action) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype ExtensionRuntimeStateActionClassification = {\n\t\t\towner: 'sandy081';\n\t\t\tcomment: 'Extension runtime state action event';\n\t\t\taction: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Executed action' };\n\t\t};\n\t\ttype ExtensionRuntimeStateActionEvent = {\n\t\t\taction: string;\n\t\t};\n\t\tthis.telemetryService.publicLog2<ExtensionRuntimeStateActionEvent, ExtensionRuntimeStateActionClassification>('extensions:runtimestate:action', {\n\t\t\taction: runtimeState.action\n\t\t});\n\n\t\tif (runtimeState?.action === ExtensionRuntimeActionType.ReloadWindow) {\n\t\t\treturn this.hostService.reload();\n\t\t}\n\n\t\telse if (runtimeState?.action === ExtensionRuntimeActionType.RestartExtensions) {\n\t\t\treturn this.extensionsWorkbenchService.updateRunningExtensions();\n\t\t}\n\n\t\telse if (runtimeState?.action === ExtensionRuntimeActionType.DownloadUpdate) {\n\t\t\treturn this.updateService.downloadUpdate();\n\t\t}\n\n\t\telse if (runtimeState?.action === ExtensionRuntimeActionType.ApplyUpdate) {\n\t\t\treturn this.updateService.applyUpdate();\n\t\t}\n\n\t\telse if (runtimeState?.action === ExtensionRuntimeActionType.QuitAndInstall) {\n\t\t\treturn this.updateService.quitAndInstall();\n\t\t}\n\n\t}\n}\n\nfunction isThemeFromExtension(theme: IWorkbenchTheme, extension: IExtension | undefined | null): boolean {\n\treturn !!(extension && theme.extensionData && ExtensionIdentifier.equals(theme.extensionData.extensionId, extension.identifier.id));\n}\n\nfunction getQuickPickEntries(themes: IWorkbenchTheme[], currentTheme: IWorkbenchTheme, extension: IExtension | null | undefined, showCurrentTheme: boolean): QuickPickItem[] {\n\tconst picks: QuickPickItem[] = [];\n\tfor (const theme of themes) {\n\t\tif (isThemeFromExtension(theme, extension) && !(showCurrentTheme && theme === currentTheme)) {\n\t\t\tpicks.push({ label: theme.label, id: theme.id });\n\t\t}\n\t}\n\tif (showCurrentTheme) {\n\t\tpicks.push({ type: 'separator', label: localize('current', \"current\") });\n\t\tpicks.push({ label: currentTheme.label, id: currentTheme.id });\n\t}\n\treturn picks;\n}\n\nexport class SetColorThemeAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.setColorTheme';\n\tstatic readonly TITLE = localize2('workbench.extensions.action.setColorTheme', 'Set Color Theme');\n\n\tprivate static readonly EnabledClass = `${ExtensionAction.LABEL_ACTION_CLASS} theme`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} disabled`;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IWorkbenchThemeService private readonly workbenchThemeService: IWorkbenchThemeService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t) {\n\t\tsuper(SetColorThemeAction.ID, SetColorThemeAction.TITLE.value, SetColorThemeAction.DisabledClass, false);\n\t\tthis._register(Event.any<any>(extensionService.onDidChangeExtensions, workbenchThemeService.onDidColorThemeChange)(() => this.update(), this));\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.workbenchThemeService.getColorThemes().then(colorThemes => {\n\t\t\tthis.enabled = this.computeEnablement(colorThemes);\n\t\t\tthis.class = this.enabled ? SetColorThemeAction.EnabledClass : SetColorThemeAction.DisabledClass;\n\t\t});\n\t}\n\n\tprivate computeEnablement(colorThemes: IWorkbenchColorTheme[]): boolean {\n\t\treturn !!this.extension && this.extension.state === ExtensionState.Installed && this.extensionEnablementService.isEnabledEnablementState(this.extension.enablementState) && colorThemes.some(th => isThemeFromExtension(th, this.extension));\n\t}\n\n\toverride async run({ showCurrentTheme, ignoreFocusLost }: { showCurrentTheme: boolean; ignoreFocusLost: boolean } = { showCurrentTheme: false, ignoreFocusLost: false }): Promise<any> {\n\t\tconst colorThemes = await this.workbenchThemeService.getColorThemes();\n\n\t\tif (!this.computeEnablement(colorThemes)) {\n\t\t\treturn;\n\t\t}\n\t\tconst currentTheme = this.workbenchThemeService.getColorTheme();\n\n\t\tconst delayer = new Delayer<any>(100);\n\t\tconst picks = getQuickPickEntries(colorThemes, currentTheme, this.extension, showCurrentTheme);\n\t\tconst pickedTheme = await this.quickInputService.pick(\n\t\t\tpicks,\n\t\t\t{\n\t\t\t\tplaceHolder: localize('select color theme', \"Select Color Theme\"),\n\t\t\t\tonDidFocus: item => delayer.trigger(() => this.workbenchThemeService.setColorTheme(item.id, undefined)),\n\t\t\t\tignoreFocusLost\n\t\t\t});\n\t\treturn this.workbenchThemeService.setColorTheme(pickedTheme ? pickedTheme.id : currentTheme.id, 'auto');\n\t}\n}\n\nexport class SetFileIconThemeAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.setFileIconTheme';\n\tstatic readonly TITLE = localize2('workbench.extensions.action.setFileIconTheme', 'Set File Icon Theme');\n\n\tprivate static readonly EnabledClass = `${ExtensionAction.LABEL_ACTION_CLASS} theme`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} disabled`;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IWorkbenchThemeService private readonly workbenchThemeService: IWorkbenchThemeService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t) {\n\t\tsuper(SetFileIconThemeAction.ID, SetFileIconThemeAction.TITLE.value, SetFileIconThemeAction.DisabledClass, false);\n\t\tthis._register(Event.any<any>(extensionService.onDidChangeExtensions, workbenchThemeService.onDidFileIconThemeChange)(() => this.update(), this));\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.workbenchThemeService.getFileIconThemes().then(fileIconThemes => {\n\t\t\tthis.enabled = this.computeEnablement(fileIconThemes);\n\t\t\tthis.class = this.enabled ? SetFileIconThemeAction.EnabledClass : SetFileIconThemeAction.DisabledClass;\n\t\t});\n\t}\n\n\tprivate computeEnablement(colorThemfileIconThemess: IWorkbenchFileIconTheme[]): boolean {\n\t\treturn !!this.extension && this.extension.state === ExtensionState.Installed && this.extensionEnablementService.isEnabledEnablementState(this.extension.enablementState) && colorThemfileIconThemess.some(th => isThemeFromExtension(th, this.extension));\n\t}\n\n\toverride async run({ showCurrentTheme, ignoreFocusLost }: { showCurrentTheme: boolean; ignoreFocusLost: boolean } = { showCurrentTheme: false, ignoreFocusLost: false }): Promise<any> {\n\t\tconst fileIconThemes = await this.workbenchThemeService.getFileIconThemes();\n\t\tif (!this.computeEnablement(fileIconThemes)) {\n\t\t\treturn;\n\t\t}\n\t\tconst currentTheme = this.workbenchThemeService.getFileIconTheme();\n\n\t\tconst delayer = new Delayer<any>(100);\n\t\tconst picks = getQuickPickEntries(fileIconThemes, currentTheme, this.extension, showCurrentTheme);\n\t\tconst pickedTheme = await this.quickInputService.pick(\n\t\t\tpicks,\n\t\t\t{\n\t\t\t\tplaceHolder: localize('select file icon theme', \"Select File Icon Theme\"),\n\t\t\t\tonDidFocus: item => delayer.trigger(() => this.workbenchThemeService.setFileIconTheme(item.id, undefined)),\n\t\t\t\tignoreFocusLost\n\t\t\t});\n\t\treturn this.workbenchThemeService.setFileIconTheme(pickedTheme ? pickedTheme.id : currentTheme.id, 'auto');\n\t}\n}\n\nexport class SetProductIconThemeAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.setProductIconTheme';\n\tstatic readonly TITLE = localize2('workbench.extensions.action.setProductIconTheme', 'Set Product Icon Theme');\n\n\tprivate static readonly EnabledClass = `${ExtensionAction.LABEL_ACTION_CLASS} theme`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} disabled`;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IWorkbenchThemeService private readonly workbenchThemeService: IWorkbenchThemeService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t) {\n\t\tsuper(SetProductIconThemeAction.ID, SetProductIconThemeAction.TITLE.value, SetProductIconThemeAction.DisabledClass, false);\n\t\tthis._register(Event.any<any>(extensionService.onDidChangeExtensions, workbenchThemeService.onDidProductIconThemeChange)(() => this.update(), this));\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.workbenchThemeService.getProductIconThemes().then(productIconThemes => {\n\t\t\tthis.enabled = this.computeEnablement(productIconThemes);\n\t\t\tthis.class = this.enabled ? SetProductIconThemeAction.EnabledClass : SetProductIconThemeAction.DisabledClass;\n\t\t});\n\t}\n\n\tprivate computeEnablement(productIconThemes: IWorkbenchProductIconTheme[]): boolean {\n\t\treturn !!this.extension && this.extension.state === ExtensionState.Installed && this.extensionEnablementService.isEnabledEnablementState(this.extension.enablementState) && productIconThemes.some(th => isThemeFromExtension(th, this.extension));\n\t}\n\n\toverride async run({ showCurrentTheme, ignoreFocusLost }: { showCurrentTheme: boolean; ignoreFocusLost: boolean } = { showCurrentTheme: false, ignoreFocusLost: false }): Promise<any> {\n\t\tconst productIconThemes = await this.workbenchThemeService.getProductIconThemes();\n\t\tif (!this.computeEnablement(productIconThemes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentTheme = this.workbenchThemeService.getProductIconTheme();\n\n\t\tconst delayer = new Delayer<any>(100);\n\t\tconst picks = getQuickPickEntries(productIconThemes, currentTheme, this.extension, showCurrentTheme);\n\t\tconst pickedTheme = await this.quickInputService.pick(\n\t\t\tpicks,\n\t\t\t{\n\t\t\t\tplaceHolder: localize('select product icon theme', \"Select Product Icon Theme\"),\n\t\t\t\tonDidFocus: item => delayer.trigger(() => this.workbenchThemeService.setProductIconTheme(item.id, undefined)),\n\t\t\t\tignoreFocusLost\n\t\t\t});\n\t\treturn this.workbenchThemeService.setProductIconTheme(pickedTheme ? pickedTheme.id : currentTheme.id, 'auto');\n\t}\n}\n\nexport class SetLanguageAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.setDisplayLanguage';\n\tstatic readonly TITLE = localize2('workbench.extensions.action.setDisplayLanguage', 'Set Display Language');\n\n\tprivate static readonly EnabledClass = `${ExtensionAction.LABEL_ACTION_CLASS} language`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} disabled`;\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t) {\n\t\tsuper(SetLanguageAction.ID, SetLanguageAction.TITLE.value, SetLanguageAction.DisabledClass, false);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tthis.class = SetLanguageAction.DisabledClass;\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.extensionsWorkbenchService.canSetLanguage(this.extension)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.gallery && language === getLocale(this.extension.gallery)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.enabled = true;\n\t\tthis.class = SetLanguageAction.EnabledClass;\n\t}\n\n\toverride async run(): Promise<any> {\n\t\treturn this.extension && this.extensionsWorkbenchService.setLanguage(this.extension);\n\t}\n}\n\nexport class ClearLanguageAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.clearLanguage';\n\tstatic readonly TITLE = localize2('workbench.extensions.action.clearLanguage', 'Clear Display Language');\n\n\tprivate static readonly EnabledClass = `${ExtensionAction.LABEL_ACTION_CLASS} language`;\n\tprivate static readonly DisabledClass = `${this.EnabledClass} disabled`;\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@ILocaleService private readonly localeService: ILocaleService,\n\t) {\n\t\tsuper(ClearLanguageAction.ID, ClearLanguageAction.TITLE.value, ClearLanguageAction.DisabledClass, false);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tthis.class = ClearLanguageAction.DisabledClass;\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.extensionsWorkbenchService.canSetLanguage(this.extension)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.extension.gallery && language !== getLocale(this.extension.gallery)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.enabled = true;\n\t\tthis.class = ClearLanguageAction.EnabledClass;\n\t}\n\n\toverride async run(): Promise<any> {\n\t\treturn this.extension && this.localeService.clearLocalePreference();\n\t}\n}\n\nexport class ShowRecommendedExtensionAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.showRecommendedExtension';\n\tstatic readonly LABEL = localize('showRecommendedExtension', \"Show Recommended Extension\");\n\n\tprivate extensionId: string;\n\n\tconstructor(\n\t\textensionId: string,\n\t\t@IExtensionsWorkbenchService private readonly extensionWorkbenchService: IExtensionsWorkbenchService,\n\t) {\n\t\tsuper(ShowRecommendedExtensionAction.ID, ShowRecommendedExtensionAction.LABEL, undefined, false);\n\t\tthis.extensionId = extensionId;\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tawait this.extensionWorkbenchService.openSearch(`@id:${this.extensionId}`);\n\t\tconst [extension] = await this.extensionWorkbenchService.getExtensions([{ id: this.extensionId }], { source: 'install-recommendation' }, CancellationToken.None);\n\t\tif (extension) {\n\t\t\treturn this.extensionWorkbenchService.open(extension);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class InstallRecommendedExtensionAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.installRecommendedExtension';\n\tstatic readonly LABEL = localize('installRecommendedExtension', \"Install Recommended Extension\");\n\n\tprivate extensionId: string;\n\n\tconstructor(\n\t\textensionId: string,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IExtensionsWorkbenchService private readonly extensionWorkbenchService: IExtensionsWorkbenchService,\n\t) {\n\t\tsuper(InstallRecommendedExtensionAction.ID, InstallRecommendedExtensionAction.LABEL, undefined, false);\n\t\tthis.extensionId = extensionId;\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tawait this.extensionWorkbenchService.openSearch(`@id:${this.extensionId}`);\n\t\tconst [extension] = await this.extensionWorkbenchService.getExtensions([{ id: this.extensionId }], { source: 'install-recommendation' }, CancellationToken.None);\n\t\tif (extension) {\n\t\t\tawait this.extensionWorkbenchService.open(extension);\n\t\t\ttry {\n\t\t\t\tawait this.extensionWorkbenchService.install(extension);\n\t\t\t} catch (err) {\n\t\t\t\tthis.instantiationService.createInstance(PromptExtensionInstallFailureAction, extension, extension.latestVersion, InstallOperation.Install, err).run();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class IgnoreExtensionRecommendationAction extends Action {\n\n\tstatic readonly ID = 'extensions.ignore';\n\n\tprivate static readonly Class = `${ExtensionAction.LABEL_ACTION_CLASS} ignore`;\n\n\tconstructor(\n\t\tprivate readonly extension: IExtension,\n\t\t@IExtensionIgnoredRecommendationsService private readonly extensionRecommendationsManagementService: IExtensionIgnoredRecommendationsService,\n\t) {\n\t\tsuper(IgnoreExtensionRecommendationAction.ID, 'Ignore Recommendation');\n\n\t\tthis.class = IgnoreExtensionRecommendationAction.Class;\n\t\tthis.tooltip = localize('ignoreExtensionRecommendation', \"Do not recommend this extension again\");\n\t\tthis.enabled = true;\n\t}\n\n\tpublic override run(): Promise<any> {\n\t\tthis.extensionRecommendationsManagementService.toggleGlobalIgnoredRecommendation(this.extension.identifier.id, true);\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class UndoIgnoreExtensionRecommendationAction extends Action {\n\n\tstatic readonly ID = 'extensions.ignore';\n\n\tprivate static readonly Class = `${ExtensionAction.LABEL_ACTION_CLASS} undo-ignore`;\n\n\tconstructor(\n\t\tprivate readonly extension: IExtension,\n\t\t@IExtensionIgnoredRecommendationsService private readonly extensionRecommendationsManagementService: IExtensionIgnoredRecommendationsService,\n\t) {\n\t\tsuper(UndoIgnoreExtensionRecommendationAction.ID, 'Undo');\n\n\t\tthis.class = UndoIgnoreExtensionRecommendationAction.Class;\n\t\tthis.tooltip = localize('undo', \"Undo\");\n\t\tthis.enabled = true;\n\t}\n\n\tpublic override run(): Promise<any> {\n\t\tthis.extensionRecommendationsManagementService.toggleGlobalIgnoredRecommendation(this.extension.identifier.id, false);\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport abstract class AbstractConfigureRecommendedExtensionsAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IEditorService protected editorService: IEditorService,\n\t\t@IJSONEditingService private readonly jsonEditingService: IJSONEditingService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tprotected openExtensionsFile(extensionsFileResource: URI): Promise<any> {\n\t\treturn this.getOrCreateExtensionsFile(extensionsFileResource)\n\t\t\t.then(({ created, content }) =>\n\t\t\t\tthis.getSelectionPosition(content, extensionsFileResource, ['recommendations'])\n\t\t\t\t\t.then(selection => this.editorService.openEditor({\n\t\t\t\t\t\tresource: extensionsFileResource,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tpinned: created,\n\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t}\n\t\t\t\t\t})),\n\t\t\t\terror => Promise.reject(new Error(localize('OpenExtensionsFile.failed', \"Unable to create 'extensions.json' file inside the '.vscode' folder ({0}).\", error))));\n\t}\n\n\tprotected openWorkspaceConfigurationFile(workspaceConfigurationFile: URI): Promise<any> {\n\t\treturn this.getOrUpdateWorkspaceConfigurationFile(workspaceConfigurationFile)\n\t\t\t.then(content => this.getSelectionPosition(content.value.toString(), content.resource, ['extensions', 'recommendations']))\n\t\t\t.then(selection => this.editorService.openEditor({\n\t\t\t\tresource: workspaceConfigurationFile,\n\t\t\t\toptions: {\n\t\t\t\t\tselection,\n\t\t\t\t\tforceReload: true // because content has changed\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tprivate getOrUpdateWorkspaceConfigurationFile(workspaceConfigurationFile: URI): Promise<IFileContent> {\n\t\treturn Promise.resolve(this.fileService.readFile(workspaceConfigurationFile))\n\t\t\t.then(content => {\n\t\t\t\tconst workspaceRecommendations = <IExtensionsConfigContent>json.parse(content.value.toString())['extensions'];\n\t\t\t\tif (!workspaceRecommendations || !workspaceRecommendations.recommendations) {\n\t\t\t\t\treturn this.jsonEditingService.write(workspaceConfigurationFile, [{ path: ['extensions'], value: { recommendations: [] } }], true)\n\t\t\t\t\t\t.then(() => this.fileService.readFile(workspaceConfigurationFile));\n\t\t\t\t}\n\t\t\t\treturn content;\n\t\t\t});\n\t}\n\n\tprivate getSelectionPosition(content: string, resource: URI, path: json.JSONPath): Promise<ITextEditorSelection | undefined> {\n\t\tconst tree = json.parseTree(content);\n\t\tconst node = json.findNodeAtLocation(tree, path);\n\t\tif (node && node.parent && node.parent.children) {\n\t\t\tconst recommendationsValueNode = node.parent.children[1];\n\t\t\tconst lastExtensionNode = recommendationsValueNode.children && recommendationsValueNode.children.length ? recommendationsValueNode.children[recommendationsValueNode.children.length - 1] : null;\n\t\t\tconst offset = lastExtensionNode ? lastExtensionNode.offset + lastExtensionNode.length : recommendationsValueNode.offset + 1;\n\t\t\treturn Promise.resolve(this.textModelResolverService.createModelReference(resource))\n\t\t\t\t.then(reference => {\n\t\t\t\t\tconst position = reference.object.textEditorModel.getPositionAt(offset);\n\t\t\t\t\treference.dispose();\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstartLineNumber: position.lineNumber,\n\t\t\t\t\t\tstartColumn: position.column,\n\t\t\t\t\t\tendLineNumber: position.lineNumber,\n\t\t\t\t\t\tendColumn: position.column,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate getOrCreateExtensionsFile(extensionsFileResource: URI): Promise<{ created: boolean; extensionsFileResource: URI; content: string }> {\n\t\treturn Promise.resolve(this.fileService.readFile(extensionsFileResource)).then(content => {\n\t\t\treturn { created: false, extensionsFileResource, content: content.value.toString() };\n\t\t}, err => {\n\t\t\treturn this.textFileService.write(extensionsFileResource, ExtensionsConfigurationInitialContent).then(() => {\n\t\t\t\treturn { created: true, extensionsFileResource, content: ExtensionsConfigurationInitialContent };\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class ConfigureWorkspaceRecommendedExtensionsAction extends AbstractConfigureRecommendedExtensionsAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.configureWorkspaceRecommendedExtensions';\n\tstatic readonly LABEL = localize('configureWorkspaceRecommendedExtensions', \"Configure Recommended Extensions (Workspace)\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@ITextModelService textModelResolverService: ITextModelService\n\t) {\n\t\tsuper(id, label, contextService, fileService, textFileService, editorService, jsonEditingService, textModelResolverService);\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.update(), this));\n\t\tthis.update();\n\t}\n\n\tprivate update(): void {\n\t\tthis.enabled = this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY;\n\t}\n\n\tpublic override run(): Promise<void> {\n\t\tswitch (this.contextService.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.FOLDER:\n\t\t\t\treturn this.openExtensionsFile(this.contextService.getWorkspace().folders[0].toResource(EXTENSIONS_CONFIG));\n\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\treturn this.openWorkspaceConfigurationFile(this.contextService.getWorkspace().configuration!);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class ConfigureWorkspaceFolderRecommendedExtensionsAction extends AbstractConfigureRecommendedExtensionsAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.configureWorkspaceFolderRecommendedExtensions';\n\tstatic readonly LABEL = localize('configureWorkspaceFolderRecommendedExtensions', \"Configure Recommended Extensions (Workspace Folder)\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, contextService, fileService, textFileService, editorService, jsonEditingService, textModelResolverService);\n\t}\n\n\tpublic override run(): Promise<any> {\n\t\tconst folderCount = this.contextService.getWorkspace().folders.length;\n\t\tconst pickFolderPromise = folderCount === 1 ? Promise.resolve(this.contextService.getWorkspace().folders[0]) : this.commandService.executeCommand<IWorkspaceFolder>(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n\t\treturn Promise.resolve(pickFolderPromise)\n\t\t\t.then(workspaceFolder => {\n\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\treturn this.openExtensionsFile(workspaceFolder.toResource(EXTENSIONS_CONFIG));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n}\n\nexport class ExtensionStatusLabelAction extends Action implements IExtensionContainer {\n\n\tprivate static readonly ENABLED_CLASS = `${ExtensionAction.TEXT_ACTION_CLASS} extension-status-label`;\n\tprivate static readonly DISABLED_CLASS = `${this.ENABLED_CLASS} hide`;\n\n\tprivate initialStatus: ExtensionState | null = null;\n\tprivate status: ExtensionState | null = null;\n\tprivate version: string | null = null;\n\tprivate enablementState: EnablementState | null = null;\n\n\tprivate _extension: IExtension | null = null;\n\tget extension(): IExtension | null { return this._extension; }\n\tset extension(extension: IExtension | null) {\n\t\tif (!(this._extension && extension && areSameExtensions(this._extension.identifier, extension.identifier))) {\n\t\t\t// Different extension. Reset\n\t\t\tthis.initialStatus = null;\n\t\t\tthis.status = null;\n\t\t\tthis.enablementState = null;\n\t\t}\n\t\tthis._extension = extension;\n\t\tthis.update();\n\t}\n\n\tconstructor(\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService\n\t) {\n\t\tsuper('extensions.action.statusLabel', '', ExtensionStatusLabelAction.DISABLED_CLASS, false);\n\t}\n\n\tupdate(): void {\n\t\tconst label = this.computeLabel();\n\t\tthis.label = label || '';\n\t\tthis.class = label ? ExtensionStatusLabelAction.ENABLED_CLASS : ExtensionStatusLabelAction.DISABLED_CLASS;\n\t}\n\n\tprivate computeLabel(): string | null {\n\t\tif (!this.extension) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst currentStatus = this.status;\n\t\tconst currentVersion = this.version;\n\t\tconst currentEnablementState = this.enablementState;\n\t\tthis.status = this.extension.state;\n\t\tthis.version = this.extension.version;\n\t\tif (this.initialStatus === null) {\n\t\t\tthis.initialStatus = this.status;\n\t\t}\n\t\tthis.enablementState = this.extension.enablementState;\n\n\t\tconst canAddExtension = () => {\n\t\t\tconst runningExtension = this.extensionService.extensions.filter(e => areSameExtensions({ id: e.identifier.value, uuid: e.uuid }, this.extension!.identifier))[0];\n\t\t\tif (this.extension!.local) {\n\t\t\t\tif (runningExtension && this.extension!.version === runningExtension.version) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn this.extensionService.canAddExtension(toExtensionDescription(this.extension!.local));\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst canRemoveExtension = () => {\n\t\t\tif (this.extension!.local) {\n\t\t\t\tif (this.extensionService.extensions.every(e => !(areSameExtensions({ id: e.identifier.value, uuid: e.uuid }, this.extension!.identifier) && this.extension!.server === this.extensionManagementServerService.getExtensionManagementServer(toExtension(e))))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn this.extensionService.canRemoveExtension(toExtensionDescription(this.extension!.local));\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tif (currentStatus !== null) {\n\t\t\tif (currentStatus === ExtensionState.Installing && this.status === ExtensionState.Installed) {\n\t\t\t\treturn canAddExtension() ? this.initialStatus === ExtensionState.Installed && this.version !== currentVersion ? localize('updated', \"Updated\") : localize('installed', \"Installed\") : null;\n\t\t\t}\n\t\t\tif (currentStatus === ExtensionState.Uninstalling && this.status === ExtensionState.Uninstalled) {\n\t\t\t\tthis.initialStatus = this.status;\n\t\t\t\treturn canRemoveExtension() ? localize('uninstalled', \"Uninstalled\") : null;\n\t\t\t}\n\t\t}\n\n\t\tif (currentEnablementState !== null) {\n\t\t\tconst currentlyEnabled = this.extensionEnablementService.isEnabledEnablementState(currentEnablementState);\n\t\t\tconst enabled = this.extensionEnablementService.isEnabledEnablementState(this.enablementState);\n\t\t\tif (!currentlyEnabled && enabled) {\n\t\t\t\treturn canAddExtension() ? localize('enabled', \"Enabled\") : null;\n\t\t\t}\n\t\t\tif (currentlyEnabled && !enabled) {\n\t\t\t\treturn canRemoveExtension() ? localize('disabled', \"Disabled\") : null;\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\t}\n\n\toverride run(): Promise<any> {\n\t\treturn Promise.resolve();\n\t}\n\n}\n\nexport class ToggleSyncExtensionAction extends DropDownExtensionAction {\n\n\tprivate static readonly IGNORED_SYNC_CLASS = `${ExtensionAction.ICON_ACTION_CLASS} extension-sync ${ThemeIcon.asClassName(syncIgnoredIcon)}`;\n\tprivate static readonly SYNC_CLASS = `${this.ICON_ACTION_CLASS} extension-sync ${ThemeIcon.asClassName(syncEnabledIcon)}`;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper('extensions.sync', '', ToggleSyncExtensionAction.SYNC_CLASS, false, instantiationService);\n\t\tthis._register(Event.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('settingsSync.ignoredExtensions'))(() => this.update()));\n\t\tthis._register(userDataSyncEnablementService.onDidChangeEnablement(() => this.update()));\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = !!this.extension && this.userDataSyncEnablementService.isEnabled() && this.extension.state === ExtensionState.Installed;\n\t\tif (this.extension) {\n\t\t\tconst isIgnored = this.extensionsWorkbenchService.isExtensionIgnoredToSync(this.extension);\n\t\t\tthis.class = isIgnored ? ToggleSyncExtensionAction.IGNORED_SYNC_CLASS : ToggleSyncExtensionAction.SYNC_CLASS;\n\t\t\tthis.tooltip = isIgnored ? localize('ignored', \"This extension is ignored during sync\") : localize('synced', \"This extension is synced\");\n\t\t}\n\t}\n\n\toverride async run(): Promise<any> {\n\t\treturn super.run({\n\t\t\tactionGroups: [\n\t\t\t\t[\n\t\t\t\t\tnew Action(\n\t\t\t\t\t\t'extensions.syncignore',\n\t\t\t\t\t\tthis.extensionsWorkbenchService.isExtensionIgnoredToSync(this.extension!) ? localize('sync', \"Sync this extension\") : localize('do not sync', \"Do not sync this extension\")\n\t\t\t\t\t\t, undefined, true, () => this.extensionsWorkbenchService.toggleExtensionIgnoredToSync(this.extension!))\n\t\t\t\t]\n\t\t\t], disposeActionsOnHide: true\n\t\t});\n\t}\n}\n\nexport type ExtensionStatus = { readonly message: IMarkdownString; readonly icon?: ThemeIcon };\n\nexport class ExtensionStatusAction extends ExtensionAction {\n\n\tprivate static readonly CLASS = `${ExtensionAction.ICON_ACTION_CLASS} extension-status`;\n\n\tupdateWhenCounterExtensionChanges: boolean = true;\n\n\tprivate _status: ExtensionStatus[] = [];\n\tget status(): ExtensionStatus[] { return this._status; }\n\n\tprivate readonly _onDidChangeStatus = this._register(new Emitter<void>());\n\treadonly onDidChangeStatus = this._onDidChangeStatus.event;\n\n\tprivate readonly updateThrottler = new Throttler();\n\n\tconstructor(\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkspaceTrustEnablementService private readonly workspaceTrustEnablementService: IWorkspaceTrustEnablementService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustService: IWorkspaceTrustManagementService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IWorkbenchExtensionEnablementService private readonly workbenchExtensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IExtensionFeaturesManagementService private readonly extensionFeaturesManagementService: IExtensionFeaturesManagementService,\n\t) {\n\t\tsuper('extensions.status', '', `${ExtensionStatusAction.CLASS} hide`, false);\n\t\tthis._register(this.labelService.onDidChangeFormatters(() => this.update(), this));\n\t\tthis._register(this.extensionService.onDidChangeExtensions(() => this.update()));\n\t\tthis._register(this.extensionFeaturesManagementService.onDidChangeAccessData(() => this.update()));\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.updateThrottler.queue(() => this.computeAndUpdateStatus());\n\t}\n\n\tprivate async computeAndUpdateStatus(): Promise<void> {\n\t\tthis.updateStatus(undefined, true);\n\t\tthis.enabled = false;\n\n\t\tif (!this.extension) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.extension.isMalicious) {\n\t\t\tthis.updateStatus({ icon: warningIcon, message: new MarkdownString(localize('malicious tooltip', \"This extension was reported to be problematic.\")) }, true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.extension.deprecationInfo) {\n\t\t\tif (this.extension.deprecationInfo.extension) {\n\t\t\t\tconst link = `[${this.extension.deprecationInfo.extension.displayName}](${URI.parse(`command:extension.open?${encodeURIComponent(JSON.stringify([this.extension.deprecationInfo.extension.id]))}`)})`;\n\t\t\t\tthis.updateStatus({ icon: warningIcon, message: new MarkdownString(localize('deprecated with alternate extension tooltip', \"This extension is deprecated. Use the {0} extension instead.\", link)) }, true);\n\t\t\t} else if (this.extension.deprecationInfo.settings) {\n\t\t\t\tconst link = `[${localize('settings', \"settings\")}](${URI.parse(`command:workbench.action.openSettings?${encodeURIComponent(JSON.stringify([this.extension.deprecationInfo.settings.map(setting => `@id:${setting}`).join(' ')]))}`)})`;\n\t\t\t\tthis.updateStatus({ icon: warningIcon, message: new MarkdownString(localize('deprecated with alternate settings tooltip', \"This extension is deprecated as this functionality is now built-in to VS Code. Configure these {0} to use this functionality.\", link)) }, true);\n\t\t\t} else {\n\t\t\t\tconst message = new MarkdownString(localize('deprecated tooltip', \"This extension is deprecated as it is no longer being maintained.\"));\n\t\t\t\tif (this.extension.deprecationInfo.additionalInfo) {\n\t\t\t\t\tmessage.appendMarkdown(` ${this.extension.deprecationInfo.additionalInfo}`);\n\t\t\t\t}\n\t\t\t\tthis.updateStatus({ icon: warningIcon, message }, true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.extensionsWorkbenchService.canSetLanguage(this.extension)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.extension.outdated && this.extensionsWorkbenchService.isAutoUpdateEnabledFor(this.extension)) {\n\t\t\tconst message = await this.extensionsWorkbenchService.shouldRequireConsentToUpdate(this.extension);\n\t\t\tif (message) {\n\t\t\t\tconst markdown = new MarkdownString();\n\t\t\t\tmarkdown.appendMarkdown(`${message} `);\n\t\t\t\tmarkdown.appendMarkdown(\n\t\t\t\t\tlocalize('auto update message', \"Please [review the extension]({0}) and update it manually.\",\n\t\t\t\t\t\tthis.extension.hasChangelog()\n\t\t\t\t\t\t\t? URI.parse(`command:extension.open?${encodeURIComponent(JSON.stringify([this.extension.identifier.id, ExtensionEditorTab.Changelog]))}`).toString()\n\t\t\t\t\t\t\t: this.extension.repository\n\t\t\t\t\t\t\t\t? this.extension.repository\n\t\t\t\t\t\t\t\t: URI.parse(`command:extension.open?${encodeURIComponent(JSON.stringify([this.extension.identifier.id]))}`).toString()\n\t\t\t\t\t));\n\t\t\t\tthis.updateStatus({ icon: warningIcon, message: markdown }, true);\n\t\t\t}\n\t\t}\n\n\t\tif (this.extension.gallery && this.extension.state === ExtensionState.Uninstalled && !await this.extensionsWorkbenchService.canInstall(this.extension)) {\n\t\t\tif (this.extensionManagementServerService.localExtensionManagementServer || this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\tconst targetPlatform = await (this.extensionManagementServerService.localExtensionManagementServer ? this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.getTargetPlatform() : this.extensionManagementServerService.remoteExtensionManagementServer!.extensionManagementService.getTargetPlatform());\n\t\t\t\tconst message = new MarkdownString(`${localize('incompatible platform', \"The '{0}' extension is not available in {1} for {2}.\", this.extension.displayName || this.extension.identifier.id, this.productService.nameLong, TargetPlatformToString(targetPlatform))} [${localize('learn more', \"Learn More\")}](https://aka.ms/vscode-platform-specific-extensions)`);\n\t\t\t\tthis.updateStatus({ icon: warningIcon, message }, true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\t\tconst productName = localize('VS Code for Web', \"{0} for the Web\", this.productService.nameLong);\n\t\t\t\tconst message = new MarkdownString(`${localize('not web tooltip', \"The '{0}' extension is not available in {1}.\", this.extension.displayName || this.extension.identifier.id, productName)} [${localize('learn why', \"Learn Why\")}](https://aka.ms/vscode-web-extensions-guide)`);\n\t\t\t\tthis.updateStatus({ icon: warningIcon, message }, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.extension.local ||\n\t\t\t!this.extension.server ||\n\t\t\tthis.extension.state !== ExtensionState.Installed\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Extension is disabled by environment\n\t\tif (this.extension.enablementState === EnablementState.DisabledByEnvironment) {\n\t\t\tthis.updateStatus({ message: new MarkdownString(localize('disabled by environment', \"This extension is disabled by the environment.\")) }, true);\n\t\t\treturn;\n\t\t}\n\n\t\t// Extension is enabled by environment\n\t\tif (this.extension.enablementState === EnablementState.EnabledByEnvironment) {\n\t\t\tthis.updateStatus({ message: new MarkdownString(localize('enabled by environment', \"This extension is enabled because it is required in the current environment.\")) }, true);\n\t\t\treturn;\n\t\t}\n\n\t\t// Extension is disabled by virtual workspace\n\t\tif (this.extension.enablementState === EnablementState.DisabledByVirtualWorkspace) {\n\t\t\tconst details = getWorkspaceSupportTypeMessage(this.extension.local.manifest.capabilities?.virtualWorkspaces);\n\t\t\tthis.updateStatus({ icon: infoIcon, message: new MarkdownString(details ? escapeMarkdownSyntaxTokens(details) : localize('disabled because of virtual workspace', \"This extension has been disabled because it does not support virtual workspaces.\")) }, true);\n\t\t\treturn;\n\t\t}\n\n\t\t// Limited support in Virtual Workspace\n\t\tif (isVirtualWorkspace(this.contextService.getWorkspace())) {\n\t\t\tconst virtualSupportType = this.extensionManifestPropertiesService.getExtensionVirtualWorkspaceSupportType(this.extension.local.manifest);\n\t\t\tconst details = getWorkspaceSupportTypeMessage(this.extension.local.manifest.capabilities?.virtualWorkspaces);\n\t\t\tif (virtualSupportType === 'limited' || details) {\n\t\t\t\tthis.updateStatus({ icon: warningIcon, message: new MarkdownString(details ? escapeMarkdownSyntaxTokens(details) : localize('extension limited because of virtual workspace', \"This extension has limited features because the current workspace is virtual.\")) }, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.workspaceTrustService.isWorkspaceTrusted() &&\n\t\t\t// Extension is disabled by untrusted workspace\n\t\t\t(this.extension.enablementState === EnablementState.DisabledByTrustRequirement ||\n\t\t\t\t// All disabled dependencies of the extension are disabled by untrusted workspace\n\t\t\t\t(this.extension.enablementState === EnablementState.DisabledByExtensionDependency && this.workbenchExtensionEnablementService.getDependenciesEnablementStates(this.extension.local).every(([, enablementState]) => this.workbenchExtensionEnablementService.isEnabledEnablementState(enablementState) || enablementState === EnablementState.DisabledByTrustRequirement)))) {\n\t\t\tthis.enabled = true;\n\t\t\tconst untrustedDetails = getWorkspaceSupportTypeMessage(this.extension.local.manifest.capabilities?.untrustedWorkspaces);\n\t\t\tthis.updateStatus({ icon: trustIcon, message: new MarkdownString(untrustedDetails ? escapeMarkdownSyntaxTokens(untrustedDetails) : localize('extension disabled because of trust requirement', \"This extension has been disabled because the current workspace is not trusted.\")) }, true);\n\t\t\treturn;\n\t\t}\n\n\t\t// Limited support in Untrusted Workspace\n\t\tif (this.workspaceTrustEnablementService.isWorkspaceTrustEnabled() && !this.workspaceTrustService.isWorkspaceTrusted()) {\n\t\t\tconst untrustedSupportType = this.extensionManifestPropertiesService.getExtensionUntrustedWorkspaceSupportType(this.extension.local.manifest);\n\t\t\tconst untrustedDetails = getWorkspaceSupportTypeMessage(this.extension.local.manifest.capabilities?.untrustedWorkspaces);\n\t\t\tif (untrustedSupportType === 'limited' || untrustedDetails) {\n\t\t\t\tthis.enabled = true;\n\t\t\t\tthis.updateStatus({ icon: trustIcon, message: new MarkdownString(untrustedDetails ? escapeMarkdownSyntaxTokens(untrustedDetails) : localize('extension limited because of trust requirement', \"This extension has limited features because the current workspace is not trusted.\")) }, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Extension is disabled by extension kind\n\t\tif (this.extension.enablementState === EnablementState.DisabledByExtensionKind) {\n\t\t\tif (!this.extensionsWorkbenchService.installed.some(e => areSameExtensions(e.identifier, this.extension!.identifier) && e.server !== this.extension!.server)) {\n\t\t\t\tlet message;\n\t\t\t\t// Extension on Local Server\n\t\t\t\tif (this.extensionManagementServerService.localExtensionManagementServer === this.extension.server) {\n\t\t\t\t\tif (this.extensionManifestPropertiesService.prefersExecuteOnWorkspace(this.extension.local.manifest)) {\n\t\t\t\t\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\t\t\t\tmessage = new MarkdownString(`${localize('Install in remote server to enable', \"This extension is disabled in this workspace because it is defined to run in the Remote Extension Host. Please install the extension in '{0}' to enable.\", this.extensionManagementServerService.remoteExtensionManagementServer.label)} [${localize('learn more', \"Learn More\")}](https://code.visualstudio.com/api/advanced-topics/remote-extensions#architecture-and-extension-kinds)`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Extension on Remote Server\n\t\t\t\telse if (this.extensionManagementServerService.remoteExtensionManagementServer === this.extension.server) {\n\t\t\t\t\tif (this.extensionManifestPropertiesService.prefersExecuteOnUI(this.extension.local.manifest)) {\n\t\t\t\t\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\t\t\t\tmessage = new MarkdownString(`${localize('Install in local server to enable', \"This extension is disabled in this workspace because it is defined to run in the Local Extension Host. Please install the extension locally to enable.\", this.extensionManagementServerService.remoteExtensionManagementServer.label)} [${localize('learn more', \"Learn More\")}](https://code.visualstudio.com/api/advanced-topics/remote-extensions#architecture-and-extension-kinds)`);\n\t\t\t\t\t\t} else if (isWeb) {\n\t\t\t\t\t\t\tmessage = new MarkdownString(`${localize('Defined to run in desktop', \"This extension is disabled because it is defined to run only in {0} for the Desktop.\", this.productService.nameLong)} [${localize('learn more', \"Learn More\")}](https://code.visualstudio.com/api/advanced-topics/remote-extensions#architecture-and-extension-kinds)`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Extension on Web Server\n\t\t\t\telse if (this.extensionManagementServerService.webExtensionManagementServer === this.extension.server) {\n\t\t\t\t\tmessage = new MarkdownString(`${localize('Cannot be enabled', \"This extension is disabled because it is not supported in {0} for the Web.\", this.productService.nameLong)} [${localize('learn more', \"Learn More\")}](https://code.visualstudio.com/api/advanced-topics/remote-extensions#architecture-and-extension-kinds)`);\n\t\t\t\t}\n\t\t\t\tif (message) {\n\t\t\t\t\tthis.updateStatus({ icon: warningIcon, message }, true);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst extensionId = new ExtensionIdentifier(this.extension.identifier.id);\n\t\tconst features = Registry.as<IExtensionFeaturesRegistry>(Extensions.ExtensionFeaturesRegistry).getExtensionFeatures();\n\t\tfor (const feature of features) {\n\t\t\tconst status = this.extensionFeaturesManagementService.getAccessData(extensionId, feature.id)?.current?.status;\n\t\t\tconst manageAccessLink = `[${localize('manage access', 'Manage Access')}](${URI.parse(`command:extension.open?${encodeURIComponent(JSON.stringify([this.extension.identifier.id, ExtensionEditorTab.Features, false, feature.id]))}`)})`;\n\t\t\tif (status?.severity === Severity.Error) {\n\t\t\t\tthis.updateStatus({ icon: errorIcon, message: new MarkdownString().appendText(status.message).appendMarkdown(` ${manageAccessLink}`) }, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (status?.severity === Severity.Warning) {\n\t\t\t\tthis.updateStatus({ icon: warningIcon, message: new MarkdownString().appendText(status.message).appendMarkdown(` ${manageAccessLink}`) }, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Remote Workspace\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tif (isLanguagePackExtension(this.extension.local.manifest)) {\n\t\t\t\tif (!this.extensionsWorkbenchService.installed.some(e => areSameExtensions(e.identifier, this.extension!.identifier) && e.server !== this.extension!.server)) {\n\t\t\t\t\tconst message = this.extension.server === this.extensionManagementServerService.localExtensionManagementServer\n\t\t\t\t\t\t? new MarkdownString(localize('Install language pack also in remote server', \"Install the language pack extension on '{0}' to enable it there also.\", this.extensionManagementServerService.remoteExtensionManagementServer.label))\n\t\t\t\t\t\t: new MarkdownString(localize('Install language pack also locally', \"Install the language pack extension locally to enable it there also.\"));\n\t\t\t\t\tthis.updateStatus({ icon: infoIcon, message }, true);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst runningExtension = this.extensionService.extensions.filter(e => areSameExtensions({ id: e.identifier.value, uuid: e.uuid }, this.extension!.identifier))[0];\n\t\t\tconst runningExtensionServer = runningExtension ? this.extensionManagementServerService.getExtensionManagementServer(toExtension(runningExtension)) : null;\n\t\t\tif (this.extension.server === this.extensionManagementServerService.localExtensionManagementServer && runningExtensionServer === this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\tif (this.extensionManifestPropertiesService.prefersExecuteOnWorkspace(this.extension.local.manifest)) {\n\t\t\t\t\tthis.updateStatus({ icon: infoIcon, message: new MarkdownString(`${localize('enabled remotely', \"This extension is enabled in the Remote Extension Host because it prefers to run there.\")} [${localize('learn more', \"Learn More\")}](https://code.visualstudio.com/api/advanced-topics/remote-extensions#architecture-and-extension-kinds)`) }, true);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.extension.server === this.extensionManagementServerService.remoteExtensionManagementServer && runningExtensionServer === this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\tif (this.extensionManifestPropertiesService.prefersExecuteOnUI(this.extension.local.manifest)) {\n\t\t\t\t\tthis.updateStatus({ icon: infoIcon, message: new MarkdownString(`${localize('enabled locally', \"This extension is enabled in the Local Extension Host because it prefers to run there.\")} [${localize('learn more', \"Learn More\")}](https://code.visualstudio.com/api/advanced-topics/remote-extensions#architecture-and-extension-kinds)`) }, true);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.extension.server === this.extensionManagementServerService.remoteExtensionManagementServer && runningExtensionServer === this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\t\tif (this.extensionManifestPropertiesService.canExecuteOnWeb(this.extension.local.manifest)) {\n\t\t\t\t\tthis.updateStatus({ icon: infoIcon, message: new MarkdownString(`${localize('enabled in web worker', \"This extension is enabled in the Web Worker Extension Host because it prefers to run there.\")} [${localize('learn more', \"Learn More\")}](https://code.visualstudio.com/api/advanced-topics/remote-extensions#architecture-and-extension-kinds)`) }, true);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Extension is disabled by its dependency\n\t\tif (this.extension.enablementState === EnablementState.DisabledByExtensionDependency) {\n\t\t\tthis.updateStatus({\n\t\t\t\ticon: warningIcon,\n\t\t\t\tmessage: new MarkdownString(localize('extension disabled because of dependency', \"This extension depends on an extension that is disabled.\"))\n\t\t\t\t\t.appendMarkdown(`&nbsp;[${localize('dependencies', \"Show Dependencies\")}](${URI.parse(`command:extension.open?${encodeURIComponent(JSON.stringify([this.extension.identifier.id, ExtensionEditorTab.Dependencies]))}`)})`)\n\t\t\t}, true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.extension.local.isValid) {\n\t\t\tconst errors = this.extension.local.validations.filter(([severity]) => severity === Severity.Error).map(([, message]) => message);\n\t\t\tthis.updateStatus({ icon: warningIcon, message: new MarkdownString(errors.join(' ').trim()) }, true);\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEnabled = this.workbenchExtensionEnablementService.isEnabled(this.extension.local);\n\t\tconst isRunning = this.extensionService.extensions.some(e => areSameExtensions({ id: e.identifier.value, uuid: e.uuid }, this.extension!.identifier));\n\n\t\tif (!this.extension.isWorkspaceScoped && isEnabled && isRunning) {\n\t\t\tif (this.extension.enablementState === EnablementState.EnabledWorkspace) {\n\t\t\t\tthis.updateStatus({ message: new MarkdownString(localize('workspace enabled', \"This extension is enabled for this workspace by the user.\")) }, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.extensionManagementServerService.localExtensionManagementServer && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\tif (this.extension.server === this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\t\tthis.updateStatus({ message: new MarkdownString(localize('extension enabled on remote', \"Extension is enabled on '{0}'\", this.extension.server.label)) }, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.extension.enablementState === EnablementState.EnabledGlobally) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (!isEnabled && !isRunning) {\n\t\t\tif (this.extension.enablementState === EnablementState.DisabledGlobally) {\n\t\t\t\tthis.updateStatus({ message: new MarkdownString(localize('globally disabled', \"This extension is disabled globally by the user.\")) }, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.extension.enablementState === EnablementState.DisabledWorkspace) {\n\t\t\t\tthis.updateStatus({ message: new MarkdownString(localize('workspace disabled', \"This extension is disabled for this workspace by the user.\")) }, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateStatus(status: ExtensionStatus | undefined, updateClass: boolean): void {\n\t\tif (status) {\n\t\t\tif (this._status.some(s => s.message.value === status.message.value && s.icon?.id === status.icon?.id)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._status.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._status = [];\n\t\t}\n\n\t\tif (status) {\n\t\t\tthis._status.push(status);\n\t\t\tthis._status.sort((a, b) =>\n\t\t\t\tb.icon === trustIcon ? -1 :\n\t\t\t\t\ta.icon === trustIcon ? 1 :\n\t\t\t\t\t\tb.icon === errorIcon ? -1 :\n\t\t\t\t\t\t\ta.icon === errorIcon ? 1 :\n\t\t\t\t\t\t\t\tb.icon === warningIcon ? -1 :\n\t\t\t\t\t\t\t\t\ta.icon === warningIcon ? 1 :\n\t\t\t\t\t\t\t\t\t\tb.icon === infoIcon ? -1 :\n\t\t\t\t\t\t\t\t\t\t\ta.icon === infoIcon ? 1 :\n\t\t\t\t\t\t\t\t\t\t\t\t0\n\t\t\t);\n\t\t}\n\n\t\tif (updateClass) {\n\t\t\tif (status?.icon === errorIcon) {\n\t\t\t\tthis.class = `${ExtensionStatusAction.CLASS} extension-status-error ${ThemeIcon.asClassName(errorIcon)}`;\n\t\t\t}\n\t\t\telse if (status?.icon === warningIcon) {\n\t\t\t\tthis.class = `${ExtensionStatusAction.CLASS} extension-status-warning ${ThemeIcon.asClassName(warningIcon)}`;\n\t\t\t}\n\t\t\telse if (status?.icon === infoIcon) {\n\t\t\t\tthis.class = `${ExtensionStatusAction.CLASS} extension-status-info ${ThemeIcon.asClassName(infoIcon)}`;\n\t\t\t}\n\t\t\telse if (status?.icon === trustIcon) {\n\t\t\t\tthis.class = `${ExtensionStatusAction.CLASS} ${ThemeIcon.asClassName(trustIcon)}`;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.class = `${ExtensionStatusAction.CLASS} hide`;\n\t\t\t}\n\t\t}\n\t\tthis._onDidChangeStatus.fire();\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tif (this._status[0]?.icon === trustIcon) {\n\t\t\treturn this.commandService.executeCommand('workbench.trust.manage');\n\t\t}\n\t}\n}\n\nexport class ReinstallAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.reinstall';\n\tstatic readonly LABEL = localize('reinstall', \"Reinstall Extension...\");\n\n\tconstructor(\n\t\tid: string = ReinstallAction.ID, label: string = ReinstallAction.LABEL,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride get enabled(): boolean {\n\t\treturn this.extensionsWorkbenchService.local.filter(l => !l.isBuiltin && l.local).length > 0;\n\t}\n\n\toverride run(): Promise<any> {\n\t\treturn this.quickInputService.pick(this.getEntries(), { placeHolder: localize('selectExtensionToReinstall', \"Select Extension to Reinstall\") })\n\t\t\t.then(pick => pick && this.reinstallExtension(pick.extension));\n\t}\n\n\tprivate getEntries(): Promise<(IQuickPickItem & { extension: IExtension })[]> {\n\t\treturn this.extensionsWorkbenchService.queryLocal()\n\t\t\t.then(local => {\n\t\t\t\tconst entries = local\n\t\t\t\t\t.filter(extension => !extension.isBuiltin && extension.server !== this.extensionManagementServerService.webExtensionManagementServer)\n\t\t\t\t\t.map(extension => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: extension.identifier.id,\n\t\t\t\t\t\t\tlabel: extension.displayName,\n\t\t\t\t\t\t\tdescription: extension.identifier.id,\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\treturn entries;\n\t\t\t});\n\t}\n\n\tprivate reinstallExtension(extension: IExtension): Promise<void> {\n\t\treturn this.extensionsWorkbenchService.openSearch('@installed ')\n\t\t\t.then(() => {\n\t\t\t\treturn this.extensionsWorkbenchService.reinstall(extension)\n\t\t\t\t\t.then(extension => {\n\t\t\t\t\t\tconst requireReload = !(extension.local && this.extensionService.canAddExtension(toExtensionDescription(extension.local)));\n\t\t\t\t\t\tconst message = requireReload ? localize('ReinstallAction.successReload', \"Please reload Visual Studio Code to complete reinstalling the extension {0}.\", extension.identifier.id)\n\t\t\t\t\t\t\t: localize('ReinstallAction.success', \"Reinstalling the extension {0} is completed.\", extension.identifier.id);\n\t\t\t\t\t\tconst actions = requireReload ? [{\n\t\t\t\t\t\t\tlabel: localize('InstallVSIXAction.reloadNow', \"Reload Now\"),\n\t\t\t\t\t\t\trun: () => this.hostService.reload()\n\t\t\t\t\t\t}] : [];\n\t\t\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tactions,\n\t\t\t\t\t\t\t{ sticky: true }\n\t\t\t\t\t\t);\n\t\t\t\t\t}, error => this.notificationService.error(error));\n\t\t\t});\n\t}\n}\n\nexport class InstallSpecificVersionOfExtensionAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.install.specificVersion';\n\tstatic readonly LABEL = localize('install previous version', \"Install Specific Version of Extension...\");\n\n\tconstructor(\n\t\tid: string = InstallSpecificVersionOfExtensionAction.ID, label: string = InstallSpecificVersionOfExtensionAction.LABEL,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride get enabled(): boolean {\n\t\treturn this.extensionsWorkbenchService.local.some(l => this.isEnabled(l));\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tconst extensionPick = await this.quickInputService.pick(this.getExtensionEntries(), { placeHolder: localize('selectExtension', \"Select Extension\"), matchOnDetail: true });\n\t\tif (extensionPick && extensionPick.extension) {\n\t\t\tconst action = this.instantiationService.createInstance(InstallAnotherVersionAction, extensionPick.extension, true);\n\t\t\tawait action.run();\n\t\t\tawait this.extensionsWorkbenchService.openSearch(extensionPick.extension.identifier.id);\n\t\t}\n\t}\n\n\tprivate isEnabled(extension: IExtension): boolean {\n\t\tconst action = this.instantiationService.createInstance(InstallAnotherVersionAction, extension, true);\n\t\treturn action.enabled && !!extension.local && this.extensionEnablementService.isEnabled(extension.local);\n\t}\n\n\tprivate async getExtensionEntries(): Promise<IExtensionPickItem[]> {\n\t\tconst installed = await this.extensionsWorkbenchService.queryLocal();\n\t\tconst entries: IExtensionPickItem[] = [];\n\t\tfor (const extension of installed) {\n\t\t\tif (this.isEnabled(extension)) {\n\t\t\t\tentries.push({\n\t\t\t\t\tid: extension.identifier.id,\n\t\t\t\t\tlabel: extension.displayName || extension.identifier.id,\n\t\t\t\t\tdescription: extension.identifier.id,\n\t\t\t\t\textension,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn entries.sort((e1, e2) => e1.extension.displayName.localeCompare(e2.extension.displayName));\n\t}\n}\n\ninterface IExtensionPickItem extends IQuickPickItem {\n\textension: IExtension;\n}\n\nexport abstract class AbstractInstallExtensionsInServerAction extends Action {\n\n\tprivate extensions: IExtension[] | undefined = undefined;\n\n\tconstructor(\n\t\tid: string,\n\t\t@IExtensionsWorkbenchService protected readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t) {\n\t\tsuper(id);\n\t\tthis.update();\n\t\tthis.extensionsWorkbenchService.queryLocal().then(() => this.updateExtensions());\n\t\tthis._register(this.extensionsWorkbenchService.onChange(() => {\n\t\t\tif (this.extensions) {\n\t\t\t\tthis.updateExtensions();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateExtensions(): void {\n\t\tthis.extensions = this.extensionsWorkbenchService.local;\n\t\tthis.update();\n\t}\n\n\tprivate update(): void {\n\t\tthis.enabled = !!this.extensions && this.getExtensionsToInstall(this.extensions).length > 0;\n\t\tthis.tooltip = this.label;\n\t}\n\n\toverride async run(): Promise<void> {\n\t\treturn this.selectAndInstallExtensions();\n\t}\n\n\tprivate async queryExtensionsToInstall(): Promise<IExtension[]> {\n\t\tconst local = await this.extensionsWorkbenchService.queryLocal();\n\t\treturn this.getExtensionsToInstall(local);\n\t}\n\n\tprivate async selectAndInstallExtensions(): Promise<void> {\n\t\tconst quickPick = this.quickInputService.createQuickPick<IExtensionPickItem>();\n\t\tquickPick.busy = true;\n\t\tconst disposable = quickPick.onDidAccept(() => {\n\t\t\tdisposable.dispose();\n\t\t\tquickPick.hide();\n\t\t\tquickPick.dispose();\n\t\t\tthis.onDidAccept(quickPick.selectedItems);\n\t\t});\n\t\tquickPick.show();\n\t\tconst localExtensionsToInstall = await this.queryExtensionsToInstall();\n\t\tquickPick.busy = false;\n\t\tif (localExtensionsToInstall.length) {\n\t\t\tquickPick.title = this.getQuickPickTitle();\n\t\t\tquickPick.placeholder = localize('select extensions to install', \"Select extensions to install\");\n\t\t\tquickPick.canSelectMany = true;\n\t\t\tlocalExtensionsToInstall.sort((e1, e2) => e1.displayName.localeCompare(e2.displayName));\n\t\t\tquickPick.items = localExtensionsToInstall.map<IExtensionPickItem>(extension => ({ extension, label: extension.displayName, description: extension.version }));\n\t\t} else {\n\t\t\tquickPick.hide();\n\t\t\tquickPick.dispose();\n\t\t\tthis.notificationService.notify({\n\t\t\t\tseverity: Severity.Info,\n\t\t\t\tmessage: localize('no local extensions', \"There are no extensions to install.\")\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async onDidAccept(selectedItems: ReadonlyArray<IExtensionPickItem>): Promise<void> {\n\t\tif (selectedItems.length) {\n\t\t\tconst localExtensionsToInstall = selectedItems.filter(r => !!r.extension).map(r => r.extension);\n\t\t\tif (localExtensionsToInstall.length) {\n\t\t\t\tawait this.progressService.withProgress(\n\t\t\t\t\t{\n\t\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\t\ttitle: localize('installing extensions', \"Installing Extensions...\")\n\t\t\t\t\t},\n\t\t\t\t\t() => this.installExtensions(localExtensionsToInstall));\n\t\t\t\tthis.notificationService.info(localize('finished installing', \"Successfully installed extensions.\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected abstract getQuickPickTitle(): string;\n\tprotected abstract getExtensionsToInstall(local: IExtension[]): IExtension[];\n\tprotected abstract installExtensions(extensions: IExtension[]): Promise<void>;\n}\n\nexport class InstallLocalExtensionsInRemoteAction extends AbstractInstallExtensionsInServerAction {\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IProgressService progressService: IProgressService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper('workbench.extensions.actions.installLocalExtensionsInRemote', extensionsWorkbenchService, quickInputService, notificationService, progressService);\n\t}\n\n\toverride get label(): string {\n\t\tif (this.extensionManagementServerService && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn localize('select and install local extensions', \"Install Local Extensions in '{0}'...\", this.extensionManagementServerService.remoteExtensionManagementServer.label);\n\t\t}\n\t\treturn '';\n\t}\n\n\tprotected getQuickPickTitle(): string {\n\t\treturn localize('install local extensions title', \"Install Local Extensions in '{0}'\", this.extensionManagementServerService.remoteExtensionManagementServer!.label);\n\t}\n\n\tprotected getExtensionsToInstall(local: IExtension[]): IExtension[] {\n\t\treturn local.filter(extension => {\n\t\t\tconst action = this.instantiationService.createInstance(RemoteInstallAction, true);\n\t\t\taction.extension = extension;\n\t\t\treturn action.enabled;\n\t\t});\n\t}\n\n\tprotected async installExtensions(localExtensionsToInstall: IExtension[]): Promise<void> {\n\t\tconst galleryExtensions: IGalleryExtension[] = [];\n\t\tconst vsixs: URI[] = [];\n\t\tconst targetPlatform = await this.extensionManagementServerService.remoteExtensionManagementServer!.extensionManagementService.getTargetPlatform();\n\t\tawait Promises.settled(localExtensionsToInstall.map(async extension => {\n\t\t\tif (this.extensionGalleryService.isEnabled()) {\n\t\t\t\tconst gallery = (await this.extensionGalleryService.getExtensions([{ ...extension.identifier, preRelease: !!extension.local?.preRelease }], { targetPlatform, compatible: true }, CancellationToken.None))[0];\n\t\t\t\tif (gallery) {\n\t\t\t\t\tgalleryExtensions.push(gallery);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst vsix = await this.extensionManagementServerService.localExtensionManagementServer!.extensionManagementService.zip(extension.local!);\n\t\t\tvsixs.push(vsix);\n\t\t}));\n\n\t\tawait Promises.settled(galleryExtensions.map(gallery => this.extensionManagementServerService.remoteExtensionManagementServer!.extensionManagementService.installFromGallery(gallery)));\n\t\ttry {\n\t\t\tawait Promises.settled(vsixs.map(vsix => this.extensionManagementServerService.remoteExtensionManagementServer!.extensionManagementService.install(vsix)));\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tawait Promise.allSettled(vsixs.map(vsix => this.fileService.del(vsix)));\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class InstallRemoteExtensionsInLocalAction extends AbstractInstallExtensionsInServerAction {\n\n\tconstructor(\n\t\tid: string,\n\t\t@IExtensionsWorkbenchService extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IProgressService progressService: IProgressService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper(id, extensionsWorkbenchService, quickInputService, notificationService, progressService);\n\t}\n\n\toverride get label(): string {\n\t\treturn localize('select and install remote extensions', \"Install Remote Extensions Locally...\");\n\t}\n\n\tprotected getQuickPickTitle(): string {\n\t\treturn localize('install remote extensions', \"Install Remote Extensions Locally\");\n\t}\n\n\tprotected getExtensionsToInstall(local: IExtension[]): IExtension[] {\n\t\treturn local.filter(extension =>\n\t\t\textension.type === ExtensionType.User && extension.server !== this.extensionManagementServerService.localExtensionManagementServer\n\t\t\t&& !this.extensionsWorkbenchService.installed.some(e => e.server === this.extensionManagementServerService.localExtensionManagementServer && areSameExtensions(e.identifier, extension.identifier)));\n\t}\n\n\tprotected async installExtensions(extensions: IExtension[]): Promise<void> {\n\t\tconst galleryExtensions: IGalleryExtension[] = [];\n\t\tconst vsixs: URI[] = [];\n\t\tconst targetPlatform = await this.extensionManagementServerService.localExtensionManagementServer!.extensionManagementService.getTargetPlatform();\n\t\tawait Promises.settled(extensions.map(async extension => {\n\t\t\tif (this.extensionGalleryService.isEnabled()) {\n\t\t\t\tconst gallery = (await this.extensionGalleryService.getExtensions([{ ...extension.identifier, preRelease: !!extension.local?.preRelease }], { targetPlatform, compatible: true }, CancellationToken.None))[0];\n\t\t\t\tif (gallery) {\n\t\t\t\t\tgalleryExtensions.push(gallery);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst vsix = await this.extensionManagementServerService.remoteExtensionManagementServer!.extensionManagementService.zip(extension.local!);\n\t\t\tvsixs.push(vsix);\n\t\t}));\n\n\t\tawait Promises.settled(galleryExtensions.map(gallery => this.extensionManagementServerService.localExtensionManagementServer!.extensionManagementService.installFromGallery(gallery)));\n\t\ttry {\n\t\t\tawait Promises.settled(vsixs.map(vsix => this.extensionManagementServerService.localExtensionManagementServer!.extensionManagementService.install(vsix)));\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tawait Promise.allSettled(vsixs.map(vsix => this.fileService.del(vsix)));\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n}\n\nCommandsRegistry.registerCommand('workbench.extensions.action.showExtensionsForLanguage', function (accessor: ServicesAccessor, fileExtension: string) {\n\tconst extensionsWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\treturn extensionsWorkbenchService.openSearch(`ext:${fileExtension.replace(/^\\./, '')}`);\n});\n\nexport const showExtensionsWithIdsCommandId = 'workbench.extensions.action.showExtensionsWithIds';\nCommandsRegistry.registerCommand(showExtensionsWithIdsCommandId, function (accessor: ServicesAccessor, extensionIds: string[]) {\n\tconst extensionsWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\treturn extensionsWorkbenchService.openSearch(extensionIds.map(id => `@id:${id}`).join(' '));\n});\n\nregisterColor('extensionButton.background', {\n\tdark: buttonBackground,\n\tlight: buttonBackground,\n\thcDark: null,\n\thcLight: null\n}, localize('extensionButtonBackground', \"Button background color for extension actions.\"));\n\nregisterColor('extensionButton.foreground', {\n\tdark: buttonForeground,\n\tlight: buttonForeground,\n\thcDark: null,\n\thcLight: null\n}, localize('extensionButtonForeground', \"Button foreground color for extension actions.\"));\n\nregisterColor('extensionButton.hoverBackground', {\n\tdark: buttonHoverBackground,\n\tlight: buttonHoverBackground,\n\thcDark: null,\n\thcLight: null\n}, localize('extensionButtonHoverBackground', \"Button background hover color for extension actions.\"));\n\nregisterColor('extensionButton.separator', buttonSeparator, localize('extensionButtonSeparator', \"Button separator color for extension actions\"));\n\nexport const extensionButtonProminentBackground = registerColor('extensionButton.prominentBackground', {\n\tdark: buttonBackground,\n\tlight: buttonBackground,\n\thcDark: null,\n\thcLight: null\n}, localize('extensionButtonProminentBackground', \"Button background color for extension actions that stand out (e.g. install button).\"));\n\nregisterColor('extensionButton.prominentForeground', {\n\tdark: buttonForeground,\n\tlight: buttonForeground,\n\thcDark: null,\n\thcLight: null\n}, localize('extensionButtonProminentForeground', \"Button foreground color for extension actions that stand out (e.g. install button).\"));\n\nregisterColor('extensionButton.prominentHoverBackground', {\n\tdark: buttonHoverBackground,\n\tlight: buttonHoverBackground,\n\thcDark: null,\n\thcLight: null\n}, localize('extensionButtonProminentHoverBackground', \"Button background hover color for extension actions that stand out (e.g. install button).\"));\n\nregisterThemingParticipant((theme: IColorTheme, collector: ICssStyleCollector) => {\n\n\tconst errorColor = theme.getColor(editorErrorForeground);\n\tif (errorColor) {\n\t\tcollector.addRule(`.extension-editor .header .actions-status-container > .status ${ThemeIcon.asCSSSelector(errorIcon)} { color: ${errorColor}; }`);\n\t\tcollector.addRule(`.extension-editor .body .subcontent .runtime-status ${ThemeIcon.asCSSSelector(errorIcon)} { color: ${errorColor}; }`);\n\t\tcollector.addRule(`.monaco-hover.extension-hover .markdown-hover .hover-contents ${ThemeIcon.asCSSSelector(errorIcon)} { color: ${errorColor}; }`);\n\t}\n\n\tconst warningColor = theme.getColor(editorWarningForeground);\n\tif (warningColor) {\n\t\tcollector.addRule(`.extension-editor .header .actions-status-container > .status ${ThemeIcon.asCSSSelector(warningIcon)} { color: ${warningColor}; }`);\n\t\tcollector.addRule(`.extension-editor .body .subcontent .runtime-status ${ThemeIcon.asCSSSelector(warningIcon)} { color: ${warningColor}; }`);\n\t\tcollector.addRule(`.monaco-hover.extension-hover .markdown-hover .hover-contents ${ThemeIcon.asCSSSelector(warningIcon)} { color: ${warningColor}; }`);\n\t}\n\n\tconst infoColor = theme.getColor(editorInfoForeground);\n\tif (infoColor) {\n\t\tcollector.addRule(`.extension-editor .header .actions-status-container > .status ${ThemeIcon.asCSSSelector(infoIcon)} { color: ${infoColor}; }`);\n\t\tcollector.addRule(`.extension-editor .body .subcontent .runtime-status ${ThemeIcon.asCSSSelector(infoIcon)} { color: ${infoColor}; }`);\n\t\tcollector.addRule(`.monaco-hover.extension-hover .markdown-hover .hover-contents ${ThemeIcon.asCSSSelector(infoIcon)} { color: ${infoColor}; }`);\n\t}\n});\n"],
  "mappings": "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",
  "names": ["message", "DeprecationChoice", "extension", "runningExtension"]
}
