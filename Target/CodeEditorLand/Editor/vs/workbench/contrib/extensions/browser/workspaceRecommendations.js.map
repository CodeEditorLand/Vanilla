{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/workspaceRecommendations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EXTENSION_IDENTIFIER_PATTERN } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { distinct, equals } from '../../../../base/common/arrays.js';\nimport { ExtensionRecommendations, ExtensionRecommendation } from './extensionRecommendations.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { ExtensionRecommendationReason } from '../../../services/extensionRecommendations/common/extensionRecommendations.js';\nimport { localize } from '../../../../nls.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { IExtensionsConfigContent, IWorkspaceExtensionsConfigService } from '../../../services/extensionRecommendations/common/workspaceExtensionsConfig.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { FileChangeType, IFileService } from '../../../../platform/files/common/files.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { IWorkbenchExtensionManagementService } from '../../../services/extensionManagement/common/extensionManagement.js';\n\nconst WORKSPACE_EXTENSIONS_FOLDER = '.vscode/extensions';\n\nexport class WorkspaceRecommendations extends ExtensionRecommendations {\n\n\tprivate _recommendations: ExtensionRecommendation[] = [];\n\tget recommendations(): ReadonlyArray<ExtensionRecommendation> { return this._recommendations; }\n\n\tprivate _onDidChangeRecommendations = this._register(new Emitter<void>());\n\treadonly onDidChangeRecommendations = this._onDidChangeRecommendations.event;\n\n\tprivate _ignoredRecommendations: string[] = [];\n\tget ignoredRecommendations(): ReadonlyArray<string> { return this._ignoredRecommendations; }\n\n\tprivate workspaceExtensions: URI[] = [];\n\tprivate readonly onDidChangeWorkspaceExtensionsScheduler: RunOnceScheduler;\n\n\tconstructor(\n\t\t@IWorkspaceExtensionsConfigService private readonly workspaceExtensionsConfigService: IWorkspaceExtensionsConfigService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWorkbenchExtensionManagementService private readonly workbenchExtensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t) {\n\t\tsuper();\n\t\tthis.onDidChangeWorkspaceExtensionsScheduler = this._register(new RunOnceScheduler(() => this.onDidChangeWorkspaceExtensionsFolders(), 1000));\n\t}\n\n\tprotected async doActivate(): Promise<void> {\n\t\tthis.workspaceExtensions = await this.fetchWorkspaceExtensions();\n\t\tawait this.fetch();\n\n\t\tthis._register(this.workspaceExtensionsConfigService.onDidChangeExtensionsConfigs(() => this.onDidChangeExtensionsConfigs()));\n\t\tfor (const folder of this.contextService.getWorkspace().folders) {\n\t\t\tthis._register(this.fileService.watch(this.uriIdentityService.extUri.joinPath(folder.uri, WORKSPACE_EXTENSIONS_FOLDER)));\n\t\t}\n\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(() => this.onDidChangeWorkspaceExtensionsScheduler.schedule()));\n\n\t\tthis._register(this.fileService.onDidFilesChange(e => {\n\t\t\tif (this.contextService.getWorkspace().folders.some(folder =>\n\t\t\t\te.affects(this.uriIdentityService.extUri.joinPath(folder.uri, WORKSPACE_EXTENSIONS_FOLDER), FileChangeType.ADDED, FileChangeType.DELETED))\n\t\t\t) {\n\t\t\t\tthis.onDidChangeWorkspaceExtensionsScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async onDidChangeWorkspaceExtensionsFolders(): Promise<void> {\n\t\tconst existing = this.workspaceExtensions;\n\t\tthis.workspaceExtensions = await this.fetchWorkspaceExtensions();\n\t\tif (!equals(existing, this.workspaceExtensions, (a, b) => this.uriIdentityService.extUri.isEqual(a, b))) {\n\t\t\tthis.onDidChangeExtensionsConfigs();\n\t\t}\n\t}\n\n\tprivate async fetchWorkspaceExtensions(): Promise<URI[]> {\n\t\tconst workspaceExtensions: URI[] = [];\n\t\tfor (const workspaceFolder of this.contextService.getWorkspace().folders) {\n\t\t\tconst extensionsLocaiton = this.uriIdentityService.extUri.joinPath(workspaceFolder.uri, WORKSPACE_EXTENSIONS_FOLDER);\n\t\t\ttry {\n\t\t\t\tconst stat = await this.fileService.resolve(extensionsLocaiton);\n\t\t\t\tfor (const extension of stat.children ?? []) {\n\t\t\t\t\tif (!extension.isDirectory) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tworkspaceExtensions.push(extension.resource);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\tif (workspaceExtensions.length) {\n\t\t\tconst resourceExtensions = await this.workbenchExtensionManagementService.getExtensions(workspaceExtensions);\n\t\t\treturn resourceExtensions.map(extension => extension.location);\n\t\t}\n\t\treturn [];\n\t}\n\n\t/**\n\t * Parse all extensions.json files, fetch workspace recommendations, filter out invalid and unwanted ones\n\t */\n\tprivate async fetch(): Promise<void> {\n\n\t\tconst extensionsConfigs = await this.workspaceExtensionsConfigService.getExtensionsConfigs();\n\n\t\tconst { invalidRecommendations, message } = await this.validateExtensions(extensionsConfigs);\n\t\tif (invalidRecommendations.length) {\n\t\t\tthis.notificationService.warn(`The ${invalidRecommendations.length} extension(s) below, in workspace recommendations have issues:\\n${message}`);\n\t\t}\n\n\t\tthis._recommendations = [];\n\t\tthis._ignoredRecommendations = [];\n\n\t\tfor (const extensionsConfig of extensionsConfigs) {\n\t\t\tif (extensionsConfig.unwantedRecommendations) {\n\t\t\t\tfor (const unwantedRecommendation of extensionsConfig.unwantedRecommendations) {\n\t\t\t\t\tif (invalidRecommendations.indexOf(unwantedRecommendation) === -1) {\n\t\t\t\t\t\tthis._ignoredRecommendations.push(unwantedRecommendation);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (extensionsConfig.recommendations) {\n\t\t\t\tfor (const extensionId of extensionsConfig.recommendations) {\n\t\t\t\t\tif (invalidRecommendations.indexOf(extensionId) === -1) {\n\t\t\t\t\t\tthis._recommendations.push({\n\t\t\t\t\t\t\textension: extensionId,\n\t\t\t\t\t\t\treason: {\n\t\t\t\t\t\t\t\treasonId: ExtensionRecommendationReason.Workspace,\n\t\t\t\t\t\t\t\treasonText: localize('workspaceRecommendation', \"This extension is recommended by users of the current workspace.\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const extension of this.workspaceExtensions) {\n\t\t\tthis._recommendations.push({\n\t\t\t\textension,\n\t\t\t\treason: {\n\t\t\t\t\treasonId: ExtensionRecommendationReason.Workspace,\n\t\t\t\t\treasonText: localize('workspaceRecommendation', \"This extension is recommended by users of the current workspace.\")\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async validateExtensions(contents: IExtensionsConfigContent[]): Promise<{ validRecommendations: string[]; invalidRecommendations: string[]; message: string }> {\n\n\t\tconst validExtensions: string[] = [];\n\t\tconst invalidExtensions: string[] = [];\n\t\tlet message = '';\n\n\t\tconst allRecommendations = distinct(contents.flatMap(({ recommendations }) => recommendations || []));\n\t\tconst regEx = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\t\tfor (const extensionId of allRecommendations) {\n\t\t\tif (regEx.test(extensionId)) {\n\t\t\t\tvalidExtensions.push(extensionId);\n\t\t\t} else {\n\t\t\t\tinvalidExtensions.push(extensionId);\n\t\t\t\tmessage += `${extensionId} (bad format) Expected: <provider>.<name>\\n`;\n\t\t\t}\n\t\t}\n\n\t\treturn { validRecommendations: validExtensions, invalidRecommendations: invalidExtensions, message };\n\t}\n\n\tprivate async onDidChangeExtensionsConfigs(): Promise<void> {\n\t\tawait this.fetch();\n\t\tthis._onDidChangeRecommendations.fire();\n\t}\n\n}\n\n"],
  "mappings": "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",
  "names": []
}
