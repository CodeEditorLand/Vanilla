{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport type { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n\ttype IGalleryExtension,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport {\n\ttype IPickerQuickAccessItem,\n\tPickerQuickAccessProvider,\n} from \"../../../../platform/quickinput/browser/pickerQuickAccess.js\";\nimport type { IQuickPickSeparator } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IExtensionsWorkbenchService } from \"../common/extensions.js\";\n\nexport class InstallExtensionQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\tstatic PREFIX = \"ext install \";\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IExtensionManagementService private readonly extensionsService: IExtensionManagementService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(InstallExtensionQuickAccessProvider.PREFIX);\n\t}\n\n\tprotected _getPicks(\n\t\tfilter: string,\n\t\tdisposables: DisposableStore,\n\t\ttoken: CancellationToken,\n\t):\n\t\t| Array<IPickerQuickAccessItem | IQuickPickSeparator>\n\t\t| Promise<Array<IPickerQuickAccessItem | IQuickPickSeparator>> {\n\t\t// Nothing typed\n\t\tif (!filter) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"type\",\n\t\t\t\t\t\t\"Type an extension name to install or search.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tconst genericSearchPickItem: IPickerQuickAccessItem = {\n\t\t\tlabel: localize(\n\t\t\t\t\"searchFor\",\n\t\t\t\t\"Press Enter to search for extension '{0}'.\",\n\t\t\t\tfilter,\n\t\t\t),\n\t\t\taccept: () => this.extensionsWorkbenchService.openSearch(filter),\n\t\t};\n\n\t\t// Extension ID typed: try to find it\n\t\tif (/\\./.test(filter)) {\n\t\t\treturn this.getPicksForExtensionId(\n\t\t\t\tfilter,\n\t\t\t\tgenericSearchPickItem,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t}\n\n\t\t// Extension name typed: offer to search it\n\t\treturn [genericSearchPickItem];\n\t}\n\n\tprivate async getPicksForExtensionId(\n\t\tfilter: string,\n\t\tfallback: IPickerQuickAccessItem,\n\t\ttoken: CancellationToken,\n\t): Promise<Array<IPickerQuickAccessItem | IQuickPickSeparator>> {\n\t\ttry {\n\t\t\tconst [galleryExtension] = await this.galleryService.getExtensions(\n\t\t\t\t[{ id: filter }],\n\t\t\t\ttoken,\n\t\t\t);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn []; // return early if canceled\n\t\t\t}\n\n\t\t\tif (!galleryExtension) {\n\t\t\t\treturn [fallback];\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"install\",\n\t\t\t\t\t\t\"Press Enter to install extension '{0}'.\",\n\t\t\t\t\t\tfilter,\n\t\t\t\t\t),\n\t\t\t\t\taccept: () =>\n\t\t\t\t\t\tthis.installExtension(galleryExtension, filter),\n\t\t\t\t},\n\t\t\t];\n\t\t} catch (error) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn []; // expected error\n\t\t\t}\n\n\t\t\tthis.logService.error(error);\n\n\t\t\treturn [fallback];\n\t\t}\n\t}\n\n\tprivate async installExtension(\n\t\textension: IGalleryExtension,\n\t\tname: string,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tawait this.extensionsWorkbenchService.openSearch(`@id:${name}`);\n\t\t\tawait this.extensionsService.installFromGallery(extension);\n\t\t} catch (error) {\n\t\t\tthis.notificationService.error(error);\n\t\t}\n\t}\n}\n\nexport class ManageExtensionsQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\tstatic PREFIX = \"ext \";\n\n\tconstructor(@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService) {\n\t\tsuper(ManageExtensionsQuickAccessProvider.PREFIX);\n\t}\n\n\tprotected _getPicks(): Array<IPickerQuickAccessItem | IQuickPickSeparator> {\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"manage\",\n\t\t\t\t\t\"Press Enter to manage your extensions.\",\n\t\t\t\t),\n\t\t\t\taccept: () => this.extensionsWorkbenchService.openSearch(\"\"),\n\t\t\t},\n\t\t];\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAOA,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AACP,SAAS,mBAAmB;AAC5B,SAAS,4BAA4B;AACrC;AAAA,EAEC;AAAA,OACM;AAEP,SAAS,mCAAmC;AAErC,IAAM,sCAAN,cAAkD,0BAAkD;AAAA,EAG1G,YAC+C,4BACH,gBACG,mBACP,qBACT,YAC7B;AACD,UAAM,oCAAoC,MAAM;AANF;AACH;AACG;AACP;AACT;AAAA,EAG/B;AAAA,EAjCD,OAsB2G;AAAA;AAAA;AAAA,EAC1G,OAAO,SAAS;AAAA,EAYN,UACT,QACA,aACA,OAG+D;AAE/D,QAAI,CAAC,QAAQ;AACZ,aAAO;AAAA,QACN;AAAA,UACC,OAAO;AAAA,YACN;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,UAAM,wBAAgD;AAAA,MACrD,OAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA,QAAQ,6BAAM,KAAK,2BAA2B,WAAW,MAAM,GAAvD;AAAA,IACT;AAGA,QAAI,KAAK,KAAK,MAAM,GAAG;AACtB,aAAO,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAGA,WAAO,CAAC,qBAAqB;AAAA,EAC9B;AAAA,EAEA,MAAc,uBACb,QACA,UACA,OAC+D;AAC/D,QAAI;AACH,YAAM,CAAC,gBAAgB,IAAI,MAAM,KAAK,eAAe;AAAA,QACpD,CAAC,EAAE,IAAI,OAAO,CAAC;AAAA,QACf;AAAA,MACD;AACA,UAAI,MAAM,yBAAyB;AAClC,eAAO,CAAC;AAAA,MACT;AAEA,UAAI,CAAC,kBAAkB;AACtB,eAAO,CAAC,QAAQ;AAAA,MACjB;AAEA,aAAO;AAAA,QACN;AAAA,UACC,OAAO;AAAA,YACN;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,UACA,QAAQ,6BACP,KAAK,iBAAiB,kBAAkB,MAAM,GADvC;AAAA,QAET;AAAA,MACD;AAAA,IACD,SAAS,OAAO;AACf,UAAI,MAAM,yBAAyB;AAClC,eAAO,CAAC;AAAA,MACT;AAEA,WAAK,WAAW,MAAM,KAAK;AAE3B,aAAO,CAAC,QAAQ;AAAA,IACjB;AAAA,EACD;AAAA,EAEA,MAAc,iBACb,WACA,MACgB;AAChB,QAAI;AACH,YAAM,KAAK,2BAA2B,WAAW,OAAO,IAAI,EAAE;AAC9D,YAAM,KAAK,kBAAkB,mBAAmB,SAAS;AAAA,IAC1D,SAAS,OAAO;AACf,WAAK,oBAAoB,MAAM,KAAK;AAAA,IACrC;AAAA,EACD;AACD;AAzGa,sCAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GARU;AA2GN,IAAM,sCAAN,cAAkD,0BAAkD;AAAA,EAG1G,YAA0D,4BAAyD;AAClH,UAAM,oCAAoC,MAAM;AADS;AAAA,EAE1D;AAAA,EAtID,OAiI2G;AAAA;AAAA;AAAA,EAC1G,OAAO,SAAS;AAAA,EAMN,YAAiE;AAC1E,WAAO;AAAA,MACN;AAAA,QACC,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,QAAQ,6BAAM,KAAK,2BAA2B,WAAW,EAAE,GAAnD;AAAA,MACT;AAAA,IACD;AAAA,EACD;AACD;AAlBa,sCAAN;AAAA,EAGO;AAAA,GAHD;",
  "names": []
}
