{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IPickerQuickAccessItem, PickerQuickAccessProvider } from '../../../../platform/quickinput/browser/pickerQuickAccess.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { localize } from '../../../../nls.js';\nimport { IExtensionGalleryService, IExtensionManagementService, IGalleryExtension } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { IExtensionsWorkbenchService } from '../common/extensions.js';\n\nexport class InstallExtensionQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\n\tstatic PREFIX = 'ext install ';\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IExtensionManagementService private readonly extensionsService: IExtensionManagementService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(InstallExtensionQuickAccessProvider.PREFIX);\n\t}\n\n\tprotected _getPicks(filter: string, disposables: DisposableStore, token: CancellationToken): Array<IPickerQuickAccessItem | IQuickPickSeparator> | Promise<Array<IPickerQuickAccessItem | IQuickPickSeparator>> {\n\n\t\t// Nothing typed\n\t\tif (!filter) {\n\t\t\treturn [{\n\t\t\t\tlabel: localize('type', \"Type an extension name to install or search.\")\n\t\t\t}];\n\t\t}\n\n\t\tconst genericSearchPickItem: IPickerQuickAccessItem = {\n\t\t\tlabel: localize('searchFor', \"Press Enter to search for extension '{0}'.\", filter),\n\t\t\taccept: () => this.extensionsWorkbenchService.openSearch(filter)\n\t\t};\n\n\t\t// Extension ID typed: try to find it\n\t\tif (/\\./.test(filter)) {\n\t\t\treturn this.getPicksForExtensionId(filter, genericSearchPickItem, token);\n\t\t}\n\n\t\t// Extension name typed: offer to search it\n\t\treturn [genericSearchPickItem];\n\t}\n\n\tprivate async getPicksForExtensionId(filter: string, fallback: IPickerQuickAccessItem, token: CancellationToken): Promise<Array<IPickerQuickAccessItem | IQuickPickSeparator>> {\n\t\ttry {\n\t\t\tconst [galleryExtension] = await this.galleryService.getExtensions([{ id: filter }], token);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn []; // return early if canceled\n\t\t\t}\n\n\t\t\tif (!galleryExtension) {\n\t\t\t\treturn [fallback];\n\t\t\t}\n\n\t\t\treturn [{\n\t\t\t\tlabel: localize('install', \"Press Enter to install extension '{0}'.\", filter),\n\t\t\t\taccept: () => this.installExtension(galleryExtension, filter)\n\t\t\t}];\n\t\t} catch (error) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn []; // expected error\n\t\t\t}\n\n\t\t\tthis.logService.error(error);\n\n\t\t\treturn [fallback];\n\t\t}\n\t}\n\n\tprivate async installExtension(extension: IGalleryExtension, name: string): Promise<void> {\n\t\ttry {\n\t\t\tawait this.extensionsWorkbenchService.openSearch(`@id:${name}`);\n\t\t\tawait this.extensionsService.installFromGallery(extension);\n\t\t} catch (error) {\n\t\t\tthis.notificationService.error(error);\n\t\t}\n\t}\n}\n\nexport class ManageExtensionsQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\n\tstatic PREFIX = 'ext ';\n\n\tconstructor(@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService) {\n\t\tsuper(ManageExtensionsQuickAccessProvider.PREFIX);\n\t}\n\n\tprotected _getPicks(): Array<IPickerQuickAccessItem | IQuickPickSeparator> {\n\t\treturn [{\n\t\t\tlabel: localize('manage', \"Press Enter to manage your extensions.\"),\n\t\t\taccept: () => this.extensionsWorkbenchService.openSearch('')\n\t\t}];\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,2BAA2B;AACpC,SAAS,wBAAwB,iCAAiC;AAClE,SAAS,yBAAyB;AAClC,SAAS,gBAAgB;AACzB,SAAS,0BAA0B,6BAA6B,yBAAyB;AACzF,SAAS,4BAA4B;AACrC,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAChC,SAAS,mCAAmC;AAErC,IAAM,sCAAN,cAAkD,0BAAkD;AAAA,EAI1G,YAC+C,4BACH,gBACG,mBACP,qBACT,YAC7B;AACD,UAAM,oCAAoC,MAAM;AANF;AACH;AACG;AACP;AACT;AAAA,EAG/B;AAAA,EA3BD,OAe2G;AAAA;AAAA;AAAA,EAE1G,OAAO,SAAS;AAAA,EAYN,UAAU,QAAgB,aAA8B,OAA8I;AAG/M,QAAI,CAAC,QAAQ;AACZ,aAAO,CAAC;AAAA,QACP,OAAO,SAAS,QAAQ,8CAA8C;AAAA,MACvE,CAAC;AAAA,IACF;AAEA,UAAM,wBAAgD;AAAA,MACrD,OAAO,SAAS,aAAa,8CAA8C,MAAM;AAAA,MACjF,QAAQ,6BAAM,KAAK,2BAA2B,WAAW,MAAM,GAAvD;AAAA,IACT;AAGA,QAAI,KAAK,KAAK,MAAM,GAAG;AACtB,aAAO,KAAK,uBAAuB,QAAQ,uBAAuB,KAAK;AAAA,IACxE;AAGA,WAAO,CAAC,qBAAqB;AAAA,EAC9B;AAAA,EAEA,MAAc,uBAAuB,QAAgB,UAAkC,OAAwF;AAC9K,QAAI;AACH,YAAM,CAAC,gBAAgB,IAAI,MAAM,KAAK,eAAe,cAAc,CAAC,EAAE,IAAI,OAAO,CAAC,GAAG,KAAK;AAC1F,UAAI,MAAM,yBAAyB;AAClC,eAAO,CAAC;AAAA,MACT;AAEA,UAAI,CAAC,kBAAkB;AACtB,eAAO,CAAC,QAAQ;AAAA,MACjB;AAEA,aAAO,CAAC;AAAA,QACP,OAAO,SAAS,WAAW,2CAA2C,MAAM;AAAA,QAC5E,QAAQ,6BAAM,KAAK,iBAAiB,kBAAkB,MAAM,GAApD;AAAA,MACT,CAAC;AAAA,IACF,SAAS,OAAO;AACf,UAAI,MAAM,yBAAyB;AAClC,eAAO,CAAC;AAAA,MACT;AAEA,WAAK,WAAW,MAAM,KAAK;AAE3B,aAAO,CAAC,QAAQ;AAAA,IACjB;AAAA,EACD;AAAA,EAEA,MAAc,iBAAiB,WAA8B,MAA6B;AACzF,QAAI;AACH,YAAM,KAAK,2BAA2B,WAAW,OAAO,IAAI,EAAE;AAC9D,YAAM,KAAK,kBAAkB,mBAAmB,SAAS;AAAA,IAC1D,SAAS,OAAO;AACf,WAAK,oBAAoB,MAAM,KAAK;AAAA,IACrC;AAAA,EACD;AACD;AAvEa,sCAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GATU;AAyEN,IAAM,sCAAN,cAAkD,0BAAkD;AAAA,EAI1G,YAA0D,4BAAyD;AAClH,UAAM,oCAAoC,MAAM;AADS;AAAA,EAE1D;AAAA,EA9FD,OAwF2G;AAAA;AAAA;AAAA,EAE1G,OAAO,SAAS;AAAA,EAMN,YAAiE;AAC1E,WAAO,CAAC;AAAA,MACP,OAAO,SAAS,UAAU,wCAAwC;AAAA,MAClE,QAAQ,6BAAM,KAAK,2BAA2B,WAAW,EAAE,GAAnD;AAAA,IACT,CAAC;AAAA,EACF;AACD;AAda,sCAAN;AAAA,EAIO;AAAA,GAJD;",
  "names": []
}
