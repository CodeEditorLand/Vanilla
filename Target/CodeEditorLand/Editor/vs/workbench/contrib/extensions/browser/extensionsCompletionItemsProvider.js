var h=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var f=(a,r,i,t)=>{for(var e=t>1?void 0:t?k(r,i):r,o=a.length-1,s;o>=0;o--)(s=a[o])&&(e=(t?s(r,i,e):s(e))||e);return t&&e&&h(r,i,e),e},d=(a,r)=>(i,t)=>r(i,t,a);import"../../../../../vs/base/common/cancellation.js";import{getLocation as I,parse as b}from"../../../../../vs/base/common/json.js";import{Disposable as P}from"../../../../../vs/base/common/lifecycle.js";import"../../../../../vs/editor/common/core/position.js";import{Range as x}from"../../../../../vs/editor/common/core/range.js";import{CompletionItemKind as C}from"../../../../../vs/editor/common/languages.js";import"../../../../../vs/editor/common/model.js";import{ILanguageFeaturesService as y}from"../../../../../vs/editor/common/services/languageFeatures.js";import{localize as T}from"../../../../../vs/nls.js";import{IExtensionManagementService as S}from"../../../../../vs/platform/extensionManagement/common/extensionManagement.js";import"../../../../../vs/workbench/common/contributions.js";let u=class extends P{constructor(i,t){super();this.extensionManagementService=i;this._register(t.completionProvider.register({language:"jsonc",pattern:"**/settings.json"},{_debugDisplayName:"extensionsCompletionProvider",provideCompletionItems:async(e,o,s,n)=>{const l=(p,m)=>{const g=p.getWordAtPosition(m);return g?new x(m.lineNumber,g.startColumn,m.lineNumber,g.endColumn):null},c=I(e.getValue(),e.getOffsetAt(o)),v=l(e,o)??x.fromPositions(o,o);if(c.path[0]==="extensions.supportUntrustedWorkspaces"&&c.path.length===2&&c.isAtPropertyKey){let p=[];try{p=Object.keys(b(e.getValue())["extensions.supportUntrustedWorkspaces"])}catch{}return{suggestions:await this.provideSupportUntrustedWorkspacesExtensionProposals(p,v)}}return{suggestions:[]}}}))}async provideSupportUntrustedWorkspacesExtensionProposals(i,t){const e=[],s=(await this.extensionManagementService.getInstalled()).filter(n=>n.manifest.main).filter(n=>i.indexOf(n.identifier.id)===-1);if(s.length)e.push(...s.map(n=>{const l=`"${n.identifier.id}": {
	"supported": true,
	"version": "${n.manifest.version}"
},`;return{label:n.identifier.id,kind:C.Value,insertText:l,filterText:l,range:t}}));else{const n=`"vscode.csharp": {
	"supported": true,
	"version": "0.0.0"
},`;e.push({label:T("exampleExtension","Example"),kind:C.Value,insertText:n,filterText:n,range:t})}return e}};u=f([d(0,S),d(1,y)],u);export{u as ExtensionsCompletionItemsProvider};
