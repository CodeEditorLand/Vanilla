var Ee=Object.defineProperty;var xe=Object.getOwnPropertyDescriptor;var D=(A,d,e,t)=>{for(var n=t>1?void 0:t?xe(d,e):d,i=A.length-1,s;i>=0;i--)(s=A[i])&&(n=(t?s(d,e,n):s(n))||n);return t&&n&&Ee(d,e,n),n},u=(A,d)=>(e,t)=>d(e,t,A);import*as l from"../../../../nls.js";import*as N from"../../../../base/common/semver/semver.js";import{Event as R,Emitter as k}from"../../../../base/common/event.js";import{index as me}from"../../../../base/common/arrays.js";import{Promises as Z,ThrottledDelayer as ee,createCancelablePromise as ve}from"../../../../base/common/async.js";import{CancellationError as _,isCancellationError as ye}from"../../../../base/common/errors.js";import{Disposable as te,MutableDisposable as Se,toDisposable as Ie}from"../../../../base/common/lifecycle.js";import{singlePagePager as be}from"../../../../base/common/paging.js";import{ITelemetryService as G}from"../../../../platform/telemetry/common/telemetry.js";import{IExtensionGalleryService as F,InstallOperation as we,WEB_EXTENSION_TAG as Ue,isTargetPlatformCompatible as Pe,EXTENSION_IDENTIFIER_REGEX as W}from"../../../../platform/extensionManagement/common/extensionManagement.js";import{IWorkbenchExtensionEnablementService as ne,EnablementState as x,IExtensionManagementServerService as Ce,IWorkbenchExtensionManagementService as ie,DefaultIconPath as Ae,extensionsConfigurationNodeBase as Me}from"../../../services/extensionManagement/common/extensionManagement.js";import{getGalleryExtensionTelemetryData as Re,getLocalExtensionTelemetryData as De,areSameExtensions as c,groupByExtension as se,getGalleryExtensionId as ke}from"../../../../platform/extensionManagement/common/extensionManagementUtil.js";import{IInstantiationService as re}from"../../../../platform/instantiation/common/instantiation.js";import{IConfigurationService as _e}from"../../../../platform/configuration/common/configuration.js";import{IHostService as Ve}from"../../../services/host/browser/host.js";import{URI as w}from"../../../../base/common/uri.js";import{ExtensionState as v,AutoUpdateConfigurationKey as z,AutoCheckUpdatesConfigurationKey as oe,HasOutdatedExtensionsContext as Le,ExtensionRuntimeActionType as U,AutoRestartConfigurationKey as V,VIEWLET_ID as Te}from"../common/extensions.js";import{IEditorService as Ne,SIDE_GROUP as Ge,ACTIVE_GROUP as Fe}from"../../../services/editor/common/editorService.js";import{IURLService as We}from"../../../../platform/url/common/url.js";import{ExtensionsInput as ze}from"../common/extensionsInput.js";import{ILogService as ae}from"../../../../platform/log/common/log.js";import{IProgressService as Be,ProgressLocation as L}from"../../../../platform/progress/common/progress.js";import{INotificationService as qe,NotificationPriority as Oe,Severity as B}from"../../../../platform/notification/common/notification.js";import*as q from"../../../../base/common/resources.js";import{CancellationToken as m}from"../../../../base/common/cancellation.js";import{IStorageService as $e,StorageScope as M,StorageTarget as le}from"../../../../platform/storage/common/storage.js";import{IFileService as ce}from"../../../../platform/files/common/files.js";import{ExtensionType as I,TargetPlatform as O,ExtensionIdentifier as $,isApplicationScopedExtension as Ke}from"../../../../platform/extensions/common/extensions.js";import{ILanguageService as je}from"../../../../editor/common/languages/language.js";import{IProductService as de}from"../../../../platform/product/common/productService.js";import{FileAccess as T}from"../../../../base/common/network.js";import{IIgnoredExtensionsManagementService as He}from"../../../../platform/userDataSync/common/ignoredExtensions.js";import{IUserDataAutoSyncService as Xe,IUserDataSyncEnablementService as Qe,SyncResource as Je}from"../../../../platform/userDataSync/common/userDataSync.js";import{IContextKeyService as Ye}from"../../../../platform/contextkey/common/contextkey.js";import{isBoolean as Ze,isDefined as et,isString as b,isUndefined as K}from"../../../../base/common/types.js";import{IExtensionManifestPropertiesService as tt}from"../../../services/extensions/common/extensionManifestPropertiesService.js";import{IExtensionService as nt,toExtension as j,toExtensionDescription as H}from"../../../services/extensions/common/extensions.js";import{isWeb as ue,language as it}from"../../../../base/common/platform.js";import{getLocale as he}from"../../../../platform/languagePacks/common/languagePacks.js";import{ILocaleService as st}from"../../../services/localization/common/locale.js";import{TelemetryTrustedValue as rt}from"../../../../platform/telemetry/common/telemetryUtils.js";import{ILifecycleService as ot,LifecyclePhase as at}from"../../../services/lifecycle/common/lifecycle.js";import{IUserDataProfileService as fe}from"../../../services/userDataProfile/common/userDataProfile.js";import{mainWindow as lt}from"../../../../base/browser/window.js";import{IDialogService as ct}from"../../../../platform/dialogs/common/dialogs.js";import{IUpdateService as dt,StateType as S}from"../../../../platform/update/common/update.js";import{isEngineValid as ge}from"../../../../platform/extensions/common/extensionValidator.js";import{IUriIdentityService as ut}from"../../../../platform/uriIdentity/common/uriIdentity.js";import{IWorkspaceContextService as ht}from"../../../../platform/workspace/common/workspace.js";import{ShowCurrentReleaseNotesActionId as ft}from"../../update/common/update.js";import{Registry as gt}from"../../../../platform/registry/common/platform.js";import{Extensions as pt}from"../../../../platform/configuration/common/configurationRegistry.js";import{IViewsService as Et}from"../../../services/views/common/viewsService.js";let y=class{constructor(d,e,t,n,i,s,r,o,a,h,g){this.stateProvider=d;this.runtimeStateProvider=e;this.server=t;this.local=n;this._gallery=i;this.resourceExtensionInfo=s;this.galleryService=r;this.telemetryService=o;this.logService=a;this.fileService=h;this.productService=g}enablementState=x.EnabledGlobally;galleryResourcesCache=new Map;get resourceExtension(){if(this.resourceExtensionInfo)return this.resourceExtensionInfo.resourceExtension;if(this.local?.isWorkspaceScoped)return{type:"resource",identifier:this.local.identifier,location:this.local.location,manifest:this.local.manifest,changelogUri:this.local.changelogUrl,readmeUri:this.local.readmeUrl}}get gallery(){return this._gallery}set gallery(d){this._gallery=d,this.galleryResourcesCache.clear()}get type(){return this.local?this.local.type:I.User}get isBuiltin(){return this.local?this.local.isBuiltin:!1}get isWorkspaceScoped(){return this.local?this.local.isWorkspaceScoped:this.resourceExtensionInfo?this.resourceExtensionInfo.isWorkspaceScoped:!1}get name(){return this.gallery?this.gallery.name:this.getManifestFromLocalOrResource()?.name??""}get displayName(){return this.gallery?this.gallery.displayName||this.gallery.name:this.getManifestFromLocalOrResource()?.displayName??this.name}get identifier(){return this.gallery?this.gallery.identifier:this.resourceExtension?this.resourceExtension.identifier:this.local.identifier}get uuid(){return this.gallery?this.gallery.identifier.uuid:this.local?.identifier.uuid}get publisher(){return this.gallery?this.gallery.publisher:this.getManifestFromLocalOrResource()?.publisher??""}get publisherDisplayName(){return this.gallery?this.gallery.publisherDisplayName||this.gallery.publisher:this.local?.publisherDisplayName?this.local.publisherDisplayName:this.publisher}get publisherUrl(){if(!(!this.productService.extensionsGallery||!this.gallery))return q.joinPath(w.parse(this.productService.extensionsGallery.publisherUrl),this.publisher)}get publisherDomain(){return this.gallery?.publisherDomain}get publisherSponsorLink(){return this.gallery?.publisherSponsorLink?w.parse(this.gallery.publisherSponsorLink):void 0}get version(){return this.local?this.local.manifest.version:this.latestVersion}get pinned(){return!!this.local?.pinned}get latestVersion(){return this.gallery?this.gallery.version:this.getManifestFromLocalOrResource()?.version??""}get description(){return this.gallery?this.gallery.description:this.getManifestFromLocalOrResource()?.description??""}get url(){if(!(!this.productService.extensionsGallery||!this.gallery))return`${this.productService.extensionsGallery.itemUrl}?itemName=${this.publisher}.${this.name}`}get iconUrl(){return this.galleryIconUrl||this.resourceExtensionIconUrl||this.localIconUrl||this.defaultIconUrl}get iconUrlFallback(){return this.galleryIconUrlFallback||this.resourceExtensionIconUrl||this.localIconUrl||this.defaultIconUrl}get localIconUrl(){return this.local&&this.local.manifest.icon?T.uriToBrowserUri(q.joinPath(this.local.location,this.local.manifest.icon)).toString(!0):null}get resourceExtensionIconUrl(){return this.resourceExtension?.manifest.icon?T.uriToBrowserUri(q.joinPath(this.resourceExtension.location,this.resourceExtension.manifest.icon)).toString(!0):null}get galleryIconUrl(){return this.gallery?.assets.icon?this.gallery.assets.icon.uri:null}get galleryIconUrlFallback(){return this.gallery?.assets.icon?this.gallery.assets.icon.fallbackUri:null}get defaultIconUrl(){if(this.type===I.System&&this.local&&this.local.manifest&&this.local.manifest.contributes){if(Array.isArray(this.local.manifest.contributes.themes)&&this.local.manifest.contributes.themes.length)return T.asBrowserUri("vs/workbench/contrib/extensions/browser/media/theme-icon.png").toString(!0);if(Array.isArray(this.local.manifest.contributes.grammars)&&this.local.manifest.contributes.grammars.length)return T.asBrowserUri("vs/workbench/contrib/extensions/browser/media/language-icon.svg").toString(!0)}return Ae}get repository(){return this.gallery&&this.gallery.assets.repository?this.gallery.assets.repository.uri:void 0}get licenseUrl(){return this.gallery&&this.gallery.assets.license?this.gallery.assets.license.uri:void 0}get supportUrl(){return this.gallery&&this.gallery.supportLink?this.gallery.supportLink:void 0}get state(){return this.stateProvider(this)}isMalicious=!1;deprecationInfo;get installCount(){return this.gallery?this.gallery.installCount:void 0}get rating(){return this.gallery?this.gallery.rating:void 0}get ratingCount(){return this.gallery?this.gallery.ratingCount:void 0}get outdated(){try{if(!this.gallery||!this.local||this.type===I.System&&this.productService.quality==="stable"||!this.local.preRelease&&this.gallery.properties.isPreReleaseVersion)return!1;if(N.gt(this.latestVersion,this.version)||this.outdatedTargetPlatform)return!0}catch{}return!1}get outdatedTargetPlatform(){return!!this.local&&!!this.gallery&&![O.UNDEFINED,O.WEB].includes(this.local.targetPlatform)&&this.gallery.properties.targetPlatform!==O.WEB&&this.local.targetPlatform!==this.gallery.properties.targetPlatform&&N.eq(this.latestVersion,this.version)}get runtimeState(){return this.runtimeStateProvider(this)}get telemetryData(){const{local:d,gallery:e}=this;return e?Re(e):d?De(d):{}}get preview(){return this.local?.manifest.preview??this.gallery?.preview??!1}get preRelease(){return!!this.local?.preRelease}get isPreReleaseVersion(){return this.local?this.local.isPreReleaseVersion:!!this.gallery?.properties.isPreReleaseVersion}_extensionEnabledWithPreRelease;get hasPreReleaseVersion(){return!!this.gallery?.hasPreReleaseVersion||!!this.local?.hasPreReleaseVersion||!!this._extensionEnabledWithPreRelease}get hasReleaseVersion(){return!!this.resourceExtension||!!this.gallery?.hasReleaseVersion}getLocal(){return this.local&&!this.outdated?this.local:void 0}async getManifest(d){const e=this.getLocal();return e?e.manifest:this.gallery?this.getGalleryManifest(d):this.resourceExtension?this.resourceExtension.manifest:null}async getGalleryManifest(d=m.None){if(this.gallery){let e=this.galleryResourcesCache.get("manifest");return e||(this.gallery.assets.manifest?this.galleryResourcesCache.set("manifest",e=this.galleryService.getManifest(this.gallery,d).catch(t=>{throw this.galleryResourcesCache.delete("manifest"),t})):this.logService.error(l.localize("Manifest is not found","Manifest is not found"),this.identifier.id)),e}return null}hasReadme(){return this.local&&this.local.readmeUrl||this.gallery&&this.gallery.assets.readme||this.resourceExtension?.readmeUri?!0:this.type===I.System}async getReadme(d){const e=this.getLocal();if(e?.readmeUrl)return(await this.fileService.readFile(e.readmeUrl)).value.toString();if(this.gallery){if(this.gallery.assets.readme)return this.galleryService.getReadme(this.gallery,d);this.telemetryService.publicLog("extensions:NotFoundReadMe",this.telemetryData)}return this.type===I.System?Promise.resolve(`# ${this.displayName||this.name}
**Notice:** This extension is bundled with Visual Studio Code. It can be disabled but not uninstalled.
## Features
${this.description}
`):this.resourceExtension?.readmeUri?(await this.fileService.readFile(this.resourceExtension?.readmeUri)).value.toString():Promise.reject(new Error("not available"))}hasChangelog(){return this.local&&this.local.changelogUrl||this.gallery&&this.gallery.assets.changelog?!0:this.type===I.System}async getChangelog(d){const e=this.getLocal();return e?.changelogUrl?(await this.fileService.readFile(e.changelogUrl)).value.toString():this.gallery?.assets.changelog?this.galleryService.getChangelog(this.gallery,d):this.type===I.System?Promise.resolve(`Please check the [VS Code Release Notes](command:${ft}) for changes to the built-in extensions.`):Promise.reject(new Error("not available"))}get categories(){const{local:d,gallery:e,resourceExtension:t}=this;return d&&d.manifest.categories&&!this.outdated?d.manifest.categories:e?e.categories:t?t.manifest.categories??[]:[]}get tags(){const{gallery:d}=this;return d?d.tags.filter(e=>!e.startsWith("_")):[]}get dependencies(){const{local:d,gallery:e,resourceExtension:t}=this;return d&&d.manifest.extensionDependencies&&!this.outdated?d.manifest.extensionDependencies:e?e.properties.dependencies||[]:t?t.manifest.extensionDependencies||[]:[]}get extensionPack(){const{local:d,gallery:e,resourceExtension:t}=this;return d&&d.manifest.extensionPack&&!this.outdated?d.manifest.extensionPack:e?e.properties.extensionPack||[]:t?t.manifest.extensionPack||[]:[]}setExtensionsControlManifest(d){this.isMalicious=d.malicious.some(e=>c(this.identifier,e)),this.deprecationInfo=d.deprecated?d.deprecated[this.identifier.id.toLowerCase()]:void 0,this._extensionEnabledWithPreRelease=d?.extensionsEnabledWithPreRelease?.includes(this.identifier.id.toLowerCase())}getManifestFromLocalOrResource(){return this.local?this.local.manifest:this.resourceExtension?this.resourceExtension.manifest:null}};y=D([u(6,F),u(7,G),u(8,ae),u(9,ce),u(10,de)],y);const X="extensions.autoUpdate",Q="extensions.donotAutoUpdate";let P=class extends te{constructor(e,t,n,i,s,r,o,a,h,g){super();this.server=e;this.stateProvider=t;this.runtimeStateProvider=n;this.isWorkspaceServer=i;this.galleryService=s;this.extensionEnablementService=r;this.workbenchExtensionManagementService=o;this.userDataProfileService=a;this.telemetryService=h;this.instantiationService=g;this._register(e.extensionManagementService.onInstallExtension(f=>this.onInstallExtension(f))),this._register(e.extensionManagementService.onDidInstallExtensions(f=>this.onDidInstallExtensions(f))),this._register(e.extensionManagementService.onUninstallExtension(f=>this.onUninstallExtension(f.identifier))),this._register(e.extensionManagementService.onDidUninstallExtension(f=>this.onDidUninstallExtension(f))),this._register(e.extensionManagementService.onDidUpdateExtensionMetadata(f=>this.onDidUpdateExtensionMetadata(f.local))),this._register(e.extensionManagementService.onDidChangeProfile(()=>this.reset())),this._register(r.onEnablementChanged(f=>this.onEnablementChanged(f))),this._register(R.any(this.onChange,this.onReset)(()=>this._local=void 0)),this.isWorkspaceServer&&(this._register(this.workbenchExtensionManagementService.onInstallExtension(f=>{f.workspaceScoped&&this.onInstallExtension(f)})),this._register(this.workbenchExtensionManagementService.onDidInstallExtensions(f=>{const p=f.filter(J=>J.workspaceScoped);p.length&&this.onDidInstallExtensions(p)})),this._register(this.workbenchExtensionManagementService.onUninstallExtension(f=>{f.workspaceScoped&&this.onUninstallExtension(f.identifier)})),this._register(this.workbenchExtensionManagementService.onDidUninstallExtension(f=>{f.workspaceScoped&&this.onDidUninstallExtension(f)})))}_onChange=this._register(new k);get onChange(){return this._onChange.event}_onReset=this._register(new k);get onReset(){return this._onReset.event}installing=[];uninstalling=[];installed=[];_local;get local(){if(!this._local){this._local=[];for(const e of this.installed)this._local.push(e);for(const e of this.installing)this.installed.some(t=>c(t.identifier,e.identifier))||this._local.push(e)}return this._local}async queryInstalled(e){return await this.fetchInstalledExtensions(e),this._onChange.fire(void 0),this.local}async syncInstalledExtensionsWithGallery(e,t){const n=await this.mapInstalledExtensionWithCompatibleGalleryExtension(e,t);for(const[i,s]of n)i.local&&!i.local.identifier.uuid&&(i.local=await this.updateMetadata(i.local,s)),(!i.gallery||i.gallery.version!==s.version||i.gallery.properties.targetPlatform!==s.properties.targetPlatform)&&(i.gallery=s,this._onChange.fire({extension:i}))}async mapInstalledExtensionWithCompatibleGalleryExtension(e,t){const n=this.mapInstalledExtensionWithGalleryExtension(e),i=await this.server.extensionManagementService.getTargetPlatform(),s=[],r=[];if(await Promise.allSettled(n.map(async([o,a])=>{o.local&&(await this.galleryService.isExtensionCompatible(a,o.local.preRelease,i,t)?s.push(a):r.push({...o.local.identifier,preRelease:o.local.preRelease}))})),r.length){const o=await this.galleryService.getExtensions(r,{targetPlatform:i,compatible:!0,queryAllVersions:!0,productVersion:t},m.None);s.push(...o)}return this.mapInstalledExtensionWithGalleryExtension(s)}mapInstalledExtensionWithGalleryExtension(e){const t=[],n=new Map,i=new Map;for(const s of e)n.set(s.identifier.uuid,s),i.set(s.identifier.id.toLowerCase(),s);for(const s of this.installed){if(s.uuid){const r=n.get(s.uuid);if(r){t.push([s,r]);continue}}if(s.local?.source!=="resource"){const r=i.get(s.identifier.id.toLowerCase());r&&t.push([s,r])}}return t}async updateMetadata(e,t){let n=!1;return e.manifest.version!==t.version&&(this.telemetryService.publicLog2("galleryService:updateMetadata"),n=!!(await this.galleryService.getExtensions([{...e.identifier,version:e.manifest.version}],m.None))[0]?.properties?.isPreReleaseVersion),this.server.extensionManagementService.updateMetadata(e,{id:t.identifier.uuid,publisherDisplayName:t.publisherDisplayName,publisherId:t.publisherId,isPreReleaseVersion:n},this.userDataProfileService.currentProfile.extensionsResource)}canInstall(e){return this.server.extensionManagementService.canInstall(e)}onInstallExtension(e){const{source:t}=e;if(t&&!w.isUri(t)){const n=this.installed.find(i=>c(i.identifier,t.identifier))??this.instantiationService.createInstance(y,this.stateProvider,this.runtimeStateProvider,this.server,void 0,t,void 0);this.installing.push(n),this._onChange.fire({extension:n})}}async fetchInstalledExtensions(e){const t=await this.server.extensionManagementService.getExtensionsControlManifest(),n=await this.server.extensionManagementService.getInstalled(void 0,void 0,e);this.isWorkspaceServer&&n.push(...await this.workbenchExtensionManagementService.getInstalledWorkspaceExtensions(!0));const i=se(n,r=>r.identifier).reduce((r,o)=>{if(o.length===1)r.push(o[0]);else{let a,h,g;for(const p of o)p.isWorkspaceScoped?a=p:p.type===I.User?h=p:g=p;const f=a??h??g;f&&r.push(f)}return r},[]),s=me(this.installed,r=>r.local?r.local.identifier.id:r.identifier.id);this.installed=i.map(r=>{const o=s[r.identifier.id]||this.instantiationService.createInstance(y,this.stateProvider,this.runtimeStateProvider,this.server,r,void 0,void 0);return o.local=r,o.enablementState=this.extensionEnablementService.getEnablementState(r),o.setExtensionsControlManifest(t),o})}async reset(){this.installed=[],this.installing=[],this.uninstalling=[],await this.fetchInstalledExtensions(),this._onReset.fire()}async onDidInstallExtensions(e){for(const t of e){const{local:n,source:i}=t,s=i&&!w.isUri(i)?i:void 0,r=i&&w.isUri(i)?i:void 0,o=s?this.installing.filter(h=>c(h.identifier,s.identifier))[0]:null;this.installing=o?this.installing.filter(h=>h!==o):this.installing;let a=o||(r||n?this.instantiationService.createInstance(y,this.stateProvider,this.runtimeStateProvider,this.server,n,void 0,void 0):void 0);if(a&&n){const h=this.installed.filter(g=>c(g.identifier,a.identifier))[0];h?a=h:this.installed.push(a),a.local=n,a.gallery||(a.gallery=s),a.setExtensionsControlManifest(await this.server.extensionManagementService.getExtensionsControlManifest()),a.enablementState=this.extensionEnablementService.getEnablementState(n)}this._onChange.fire(!n||!a?void 0:{extension:a,operation:t.operation}),a&&a.local&&!a.gallery&&a.local.source!=="resource"&&await this.syncInstalledExtensionWithGallery(a)}}async onDidUpdateExtensionMetadata(e){const t=this.installed.find(n=>c(n.identifier,e.identifier));if(t?.local){const n=t.local.pinned!==e.pinned||t.local.preRelease!==e.preRelease;t.local=e,n&&this._onChange.fire({extension:t})}}async syncInstalledExtensionWithGallery(e){if(!this.galleryService.isEnabled())return;this.telemetryService.publicLog2("galleryService:matchInstalledExtension");const[t]=await this.galleryService.getExtensions([{...e.identifier,preRelease:e.local?.preRelease}],{compatible:!0,targetPlatform:await this.server.extensionManagementService.getTargetPlatform()},m.None);t&&(e.gallery=t,this._onChange.fire({extension:e}))}onUninstallExtension(e){const t=this.installed.filter(n=>c(n.identifier,e))[0];if(t){const n=this.uninstalling.filter(i=>c(i.identifier,e))[0]||t;this.uninstalling=[n,...this.uninstalling.filter(i=>!c(i.identifier,e))],this._onChange.fire(n?{extension:n}:void 0)}}onDidUninstallExtension({identifier:e,error:t}){const n=this.uninstalling.find(i=>c(i.identifier,e))||this.installed.find(i=>c(i.identifier,e));this.uninstalling=this.uninstalling.filter(i=>!c(i.identifier,e)),t||(this.installed=this.installed.filter(i=>!c(i.identifier,e))),n&&this._onChange.fire({extension:n})}onEnablementChanged(e){const t=this.local.filter(n=>e.some(i=>c(n.identifier,i.identifier)));for(const n of t)if(n.local){const i=this.extensionEnablementService.getEnablementState(n.local);i!==n.enablementState&&(n.enablementState=i,this._onChange.fire({extension:n}))}}getExtensionState(e){return e.gallery&&this.installing.some(n=>!!n.gallery&&c(n.gallery.identifier,e.gallery.identifier))?v.Installing:this.uninstalling.some(n=>c(n.identifier,e.identifier))?v.Uninstalling:this.installed.filter(n=>n===e||n.gallery&&e.gallery&&c(n.gallery.identifier,e.gallery.identifier))[0]?v.Installed:v.Uninstalled}};P=D([u(4,F),u(5,ne),u(6,ie),u(7,fe),u(8,G),u(9,re)],P);let C=class extends te{constructor(e,t,n,i,s,r,o,a,h,g,f,p,J,xt,mt,vt,pe,yt,St,It,bt,wt,Ut,Pt,Ct,At,Mt,Rt,Dt,kt,_t){super();this.instantiationService=e;this.editorService=t;this.extensionManagementService=n;this.galleryService=i;this.configurationService=s;this.telemetryService=r;this.notificationService=o;this.extensionEnablementService=h;this.hostService=g;this.progressService=f;this.extensionManagementServerService=p;this.languageService=J;this.extensionsSyncManagementService=xt;this.userDataAutoSyncService=mt;this.productService=vt;this.extensionManifestPropertiesService=yt;this.logService=St;this.extensionService=It;this.localeService=bt;this.lifecycleService=wt;this.fileService=Ut;this.userDataProfileService=Pt;this.storageService=Ct;this.dialogService=At;this.userDataSyncEnablementService=Mt;this.updateService=Rt;this.uriIdentityService=Dt;this.workspaceContextService=kt;this.viewsService=_t;const Y=s.getValue("_extensions.preferPreReleases");K(Y)||(this.preferPreReleases=!!Y),this.hasOutdatedExtensionsContextKey=Le.bindTo(pe),p.localExtensionManagementServer&&(this.localExtensions=this._register(e.createInstance(P,p.localExtensionManagementServer,E=>this.getExtensionState(E),E=>this.getRuntimeState(E),!p.remoteExtensionManagementServer)),this._register(this.localExtensions.onChange(E=>this.onDidChangeExtensions(E?.extension))),this._register(this.localExtensions.onReset(E=>this.reset())),this.extensionsServers.push(this.localExtensions)),p.remoteExtensionManagementServer&&(this.remoteExtensions=this._register(e.createInstance(P,p.remoteExtensionManagementServer,E=>this.getExtensionState(E),E=>this.getRuntimeState(E),!0)),this._register(this.remoteExtensions.onChange(E=>this.onDidChangeExtensions(E?.extension))),this._register(this.remoteExtensions.onReset(E=>this.reset())),this.extensionsServers.push(this.remoteExtensions)),p.webExtensionManagementServer&&(this.webExtensions=this._register(e.createInstance(P,p.webExtensionManagementServer,E=>this.getExtensionState(E),E=>this.getRuntimeState(E),!(p.remoteExtensionManagementServer||p.localExtensionManagementServer))),this._register(this.webExtensions.onChange(E=>this.onDidChangeExtensions(E?.extension))),this._register(this.webExtensions.onReset(E=>this.reset())),this.extensionsServers.push(this.webExtensions)),this.updatesCheckDelayer=new ee(C.UpdatesCheckInterval),this.autoUpdateDelayer=new ee(1e3),this._register(Ie(()=>{this.updatesCheckDelayer.cancel(),this.autoUpdateDelayer.cancel()})),a.registerHandler(this),this.productService.quality!=="stable"&&this.registerAutoRestartConfig(),this.whenInitialized=this.initialize()}static UpdatesCheckInterval=1e3*60*60*12;hasOutdatedExtensionsContextKey;localExtensions=null;remoteExtensions=null;webExtensions=null;extensionsServers=[];updatesCheckDelayer;autoUpdateDelayer;_onChange=new k;get onChange(){return this._onChange.event}_onReset=new k;get onReset(){return this._onReset.event}preferPreReleases=this.productService.quality!=="stable";installing=[];tasksInProgress=[];whenInitialized;registerAutoRestartConfig(){gt.as(pt.Configuration).registerConfiguration({...Me,properties:{[V]:{type:"boolean",description:l.localize("autoRestart","If activated, extensions will automatically restart following an update if the window is not in focus. There can be a data loss if you have open Notebooks or Custom Editors."),default:!1}}})}async initialize(){await Promise.all([this.queryLocal(),this.extensionService.whenInstalledExtensionsRegistered()]),!this._store.isDisposed&&(this.onDidChangeRunningExtensions(this.extensionService.extensions,[]),this._register(this.extensionService.onDidChangeExtensions(({added:e,removed:t})=>this.onDidChangeRunningExtensions(e,t))),await this.lifecycleService.when(at.Eventually),!this._store.isDisposed&&(this.initializeAutoUpdate(),this.reportInstalledExtensionsTelemetry(),this._register(R.debounce(this.onChange,()=>{},100)(()=>this.reportProgressFromOtherSources())),this._register(this.storageService.onDidChangeValue(M.APPLICATION,X,this._store)(e=>this.onDidSelectedExtensionToAutoUpdateValueChange())),this._register(this.storageService.onDidChangeValue(M.APPLICATION,Q,this._store)(e=>this.onDidSelectedExtensionToAutoUpdateValueChange()))))}initializeAutoUpdate(){this._register(this.configurationService.onDidChangeConfiguration(e=>{e.affectsConfiguration(z)&&this.isAutoUpdateEnabled()&&this.eventuallyAutoUpdateExtensions(),e.affectsConfiguration(oe)&&this.isAutoCheckUpdatesEnabled()&&this.checkForUpdates()})),this._register(this.extensionEnablementService.onEnablementChanged(e=>{this.getAutoUpdateValue()==="onlyEnabledExtensions"&&e.some(t=>this.extensionEnablementService.isEnabled(t))&&this.checkForUpdates()})),this._register(R.debounce(this.onChange,()=>{},100)(()=>this.hasOutdatedExtensionsContextKey.set(this.outdated.length>0))),this._register(this.updateService.onStateChange(e=>{(e.type===S.CheckingForUpdates&&e.explicit||e.type===S.AvailableForDownload||e.type===S.Downloaded)&&(this.telemetryService.publicLog2("extensions:updatecheckonproductupdate"),this.isAutoCheckUpdatesEnabled()&&this.checkForUpdates())})),this.hasOutdatedExtensionsContextKey.set(this.outdated.length>0),this.eventuallyCheckForUpdates(!0),ue&&(this.syncPinnedBuiltinExtensions(),this.isAutoUpdateEnabled()||this.autoUpdateBuiltinExtensions()),this.registerAutoRestartListener(),this._register(this.configurationService.onDidChangeConfiguration(e=>{e.affectsConfiguration(V)&&this.registerAutoRestartListener()}))}isAutoUpdateEnabled(){return this.getAutoUpdateValue()!==!1}getAutoUpdateValue(){const e=this.configurationService.getValue(z);return e==="onlySelectedExtensions"?!1:Ze(e)||e==="onlyEnabledExtensions"?e:!0}async updateAutoUpdateForAllExtensions(e){this.isAutoUpdateEnabled()===e||!(await this.dialogService.confirm({title:l.localize("confirmEnableDisableAutoUpdate","Auto Update Extensions"),message:e?l.localize("confirmEnableAutoUpdate","Do you want to enable auto update for all extensions?"):l.localize("confirmDisableAutoUpdate","Do you want to disable auto update for all extensions?"),detail:l.localize("confirmEnableDisableAutoUpdateDetail","This will reset any auto update settings you have set for individual extensions.")})).confirmed||(this.setEnabledAutoUpdateExtensions([]),await this.configurationService.updateValue(z,e),this.setDisabledAutoUpdateExtensions([]),await this.updateExtensionsPinnedState(!e),this._onChange.fire(void 0))}autoRestartListenerDisposable=this._register(new Se);registerAutoRestartListener(){this.autoRestartListenerDisposable.value=void 0,this.configurationService.getValue(V)===!0&&(this.autoRestartListenerDisposable.value=this.hostService.onDidChangeFocus(e=>{!e&&this.configurationService.getValue(V)===!0&&this.updateRunningExtensions(!0)}))}reportInstalledExtensionsTelemetry(){const e=this.installed.filter(t=>!t.isBuiltin&&(t.enablementState===x.EnabledWorkspace||t.enablementState===x.EnabledGlobally)).map(t=>$.toKey(t.identifier.id));this.telemetryService.publicLog2("installedExtensions",{extensionIds:new rt(e.join(";")),count:e.length})}async onDidChangeRunningExtensions(e,t){const n=[],i=[];for(const r of e){const o=this.installed.find(a=>c({id:r.identifier.value,uuid:r.uuid},a.identifier));o?n.push(o):i.push(r)}const s=[];for(const r of t)this.workspaceContextService.isInsideWorkspace(r.extensionLocation)?s.push(r):i.push(r);if(i.length){const r=await this.getExtensions(i.map(o=>({id:o.identifier.value,uuid:o.uuid})),m.None);n.push(...r)}if(s.length){const r=await this.getResourceExtensions(s.map(o=>o.extensionLocation),!0);n.push(...r)}for(const r of n)this._onChange.fire(r)}updateExtensionsPinnedState(e){return this.progressService.withProgress({location:L.Extensions,title:l.localize("updatingExtensions","Updating Extensions Auto Update State")},()=>this.extensionManagementService.resetPinnedStateForAllUserExtensions(e))}reset(){for(const e of this.tasksInProgress)e.cancel();this.tasksInProgress=[],this.installing=[],this.onDidChangeExtensions(),this._onReset.fire()}onDidChangeExtensions(e){this._installed=void 0,this._local=void 0,this._onChange.fire(e)}_local;get local(){if(!this._local)if(this.extensionsServers.length===1)this._local=this.installed;else{this._local=[];const e=se(this.installed,t=>t.identifier);for(const t of e)this._local.push(this.getPrimaryExtension(t))}return this._local}_installed;get installed(){if(!this._installed){this._installed=[];for(const e of this.extensionsServers)for(const t of e.local)this._installed.push(t)}return this._installed}get outdated(){return this.installed.filter(e=>e.outdated&&e.local&&e.state===v.Installed)}async queryLocal(e){if(e){if(this.localExtensions&&this.extensionManagementServerService.localExtensionManagementServer===e)return this.localExtensions.queryInstalled(this.getProductVersion());if(this.remoteExtensions&&this.extensionManagementServerService.remoteExtensionManagementServer===e)return this.remoteExtensions.queryInstalled(this.getProductVersion());if(this.webExtensions&&this.extensionManagementServerService.webExtensionManagementServer===e)return this.webExtensions.queryInstalled(this.getProductVersion())}if(this.localExtensions)try{await this.localExtensions.queryInstalled(this.getProductVersion())}catch(t){this.logService.error(t)}if(this.remoteExtensions)try{await this.remoteExtensions.queryInstalled(this.getProductVersion())}catch(t){this.logService.error(t)}if(this.webExtensions)try{await this.webExtensions.queryInstalled(this.getProductVersion())}catch(t){this.logService.error(t)}return this.local}async queryGallery(e,t){if(!this.galleryService.isEnabled())return be([]);const n=m.isCancellationToken(e)?{}:e,i=m.isCancellationToken(e)?e:t;n.text=n.text?this.resolveQueryText(n.text):n.text,n.includePreRelease=K(n.includePreRelease)?this.preferPreReleases:n.includePreRelease;const s=await this.extensionManagementService.getExtensionsControlManifest(),r=await this.galleryService.query(n,i);return this.syncInstalledExtensionsWithGallery(r.firstPage),{firstPage:r.firstPage.map(o=>this.fromGallery(o,s)),total:r.total,pageSize:r.pageSize,getPage:async(o,a)=>{const h=await r.getPage(o,a);return this.syncInstalledExtensionsWithGallery(h),h.map(g=>this.fromGallery(g,s))}}}async getExtensions(e,t,n){if(!this.galleryService.isEnabled())return[];e.forEach(r=>r.preRelease=r.preRelease??this.preferPreReleases);const i=await this.extensionManagementService.getExtensionsControlManifest(),s=await this.galleryService.getExtensions(e,t,n);return this.syncInstalledExtensionsWithGallery(s),s.map(r=>this.fromGallery(r,i))}async getResourceExtensions(e,t){return(await this.extensionManagementService.getExtensions(e)).map(i=>this.getInstalledExtensionMatchingLocation(i.location)??this.instantiationService.createInstance(y,s=>this.getExtensionState(s),s=>this.getRuntimeState(s),void 0,void 0,void 0,{resourceExtension:i,isWorkspaceScoped:t}))}resolveQueryText(e){e=e.replace(/@web/g,`tag:"${Ue}"`);const t=/\bext:([^\s]+)\b/g;return t.test(e)&&(e=e.replace(t,(n,i)=>{const r=(this.productService.extensionKeywords||{})[i]||[],o=this.languageService.guessLanguageIdByFilepathOrFirstLine(w.file(`.${i}`)),a=o&&this.languageService.getLanguageName(o),h=a?` tag:"${a}"`:"";return`tag:"__ext_${i}" tag:"__ext_.${i}" ${r.map(g=>`tag:"${g}"`).join(" ")}${h} tag:"${i}"`})),e.substr(0,350)}fromGallery(e,t){let n=this.getInstalledExtensionMatchingGallery(e);return n||(n=this.instantiationService.createInstance(y,i=>this.getExtensionState(i),i=>this.getRuntimeState(i),void 0,void 0,e,void 0),n.setExtensionsControlManifest(t)),n}getInstalledExtensionMatchingGallery(e){for(const t of this.local)if(t.identifier.uuid){if(t.identifier.uuid===e.identifier.uuid)return t}else if(t.local?.source!=="resource"&&c(t.identifier,e.identifier))return t;return null}getInstalledExtensionMatchingLocation(e){return this.local.find(t=>t.local&&this.uriIdentityService.extUri.isEqualOrParent(e,t.local?.location))??null}async open(e,t){if(typeof e=="string"){const n=e;e=this.installed.find(i=>c(i.identifier,{id:n}))??(await this.getExtensions([{id:e}],m.None))[0]}if(!e)throw new Error(`Extension not found. ${e}`);await this.editorService.openEditor(this.instantiationService.createInstance(ze,e),t,t?.sideByside?Ge:Fe)}async openSearch(e,t){const n=(await this.viewsService.openViewContainer(Te,!0))?.getViewPaneContainer();n.search(e),t||n.focus()}getExtensionStatus(e){const t=this.extensionService.getExtensionsStatus();for(const n of Object.keys(t))if(c({id:n},e.identifier))return t[n]}async updateRunningExtensions(e=!1){const t=[],n=[],i=[...this.local];for(const s of i){const r=s.runtimeState;if(!r||r.action!==U.RestartExtensions)continue;if(s.state===v.Uninstalled){n.push(s.identifier.id);continue}if(!s.local)continue;if(this.extensionEnablementService.isEnabled(s.local)){const a=this.extensionService.extensions.find(h=>c({id:h.identifier.value,uuid:h.uuid},s.identifier));a&&n.push(a.identifier.value),t.push(s.local)}else n.push(s.identifier.id)}for(const s of this.extensionService.extensions)s.isUnderDevelopment||i.some(r=>c({id:s.identifier.value,uuid:s.uuid},r.local?.identifier??r.identifier))||n.push(s.identifier.value);(t.length||n.length)&&await this.extensionService.stopExtensionHosts(l.localize("restart","Enable or Disable extensions"),e)&&(await this.extensionService.startExtensionHosts({toAdd:t,toRemove:n}),e&&this.notificationService.notify({severity:B.Info,message:l.localize("extensionsAutoRestart","Extensions were auto restarted to enable updates."),priority:Oe.SILENT}),this.telemetryService.publicLog2("extensions:autorestart",{count:t.length+n.length,auto:e}))}getRuntimeState(e){const t=e.state===v.Uninstalled,n=this.extensionService.extensions.find(r=>c({id:r.identifier.value},e.identifier)),i=this.extensionManagementServerService.remoteExtensionManagementServer?U.ReloadWindow:U.RestartExtensions,s=i===U.ReloadWindow?l.localize("reload","reload window"):l.localize("restart extensions","restart extensions");if(t){const r=n&&this.extensionService.canRemoveExtension(n),o=n&&(!e.server||e.server===this.extensionManagementServerService.getExtensionManagementServer(j(n)))&&(!e.resourceExtension||this.uriIdentityService.extUri.isEqual(e.resourceExtension.location,n.extensionLocation));return!r&&o&&!n.isUnderDevelopment?{action:i,reason:l.localize("postUninstallTooltip","Please {0} to complete the uninstallation of this extension.",s)}:void 0}if(e.local){const r=n&&e.server===this.extensionManagementServerService.getExtensionManagementServer(j(n)),o=this.extensionEnablementService.isEnabled(e.local);if(n){if(o){if(this.extensionService.canAddExtension(H(e.local)))return;const a=this.extensionManagementServerService.getExtensionManagementServer(j(n));if(r){if(!n.isUnderDevelopment&&(e.version!==n.version||e.local.targetPlatform!==n.targetPlatform)){const h=this.getProductCurrentVersion(),g=this.getProductUpdateVersion();if(g&&!ge(e.local.manifest.engines.vscode,h.version,h.date)&&ge(e.local.manifest.engines.vscode,g.version,g.date)){const f=this.updateService.state;return f.type===S.AvailableForDownload?{action:U.DownloadUpdate,reason:l.localize("postUpdateDownloadTooltip","Please update {0} to enable the updated extension.",this.productService.nameLong)}:f.type===S.Downloaded?{action:U.ApplyUpdate,reason:l.localize("postUpdateUpdateTooltip","Please update {0} to enable the updated extension.",this.productService.nameLong)}:f.type===S.Ready?{action:U.QuitAndInstall,reason:l.localize("postUpdateRestartTooltip","Please restart {0} to enable the updated extension.",this.productService.nameLong)}:void 0}return{action:i,reason:l.localize("postUpdateTooltip","Please {0} to enable the updated extension.",s)}}if(this.extensionsServers.length>1){const h=this.installed.filter(g=>c(g.identifier,e.identifier)&&g.server!==e.server)[0];if(h){if(a===this.extensionManagementServerService.remoteExtensionManagementServer&&this.extensionManifestPropertiesService.prefersExecuteOnUI(e.local.manifest)&&h.server===this.extensionManagementServerService.localExtensionManagementServer)return{action:i,reason:l.localize("enable locally","Please {0} to enable this extension locally.",s)};if(a===this.extensionManagementServerService.localExtensionManagementServer&&this.extensionManifestPropertiesService.prefersExecuteOnWorkspace(e.local.manifest)&&h.server===this.extensionManagementServerService.remoteExtensionManagementServer)return{action:i,reason:l.localize("enable remote","Please {0} to enable this extension in {1}.",s,this.extensionManagementServerService.remoteExtensionManagementServer?.label)}}}}else{if(e.server===this.extensionManagementServerService.localExtensionManagementServer&&a===this.extensionManagementServerService.remoteExtensionManagementServer&&this.extensionManifestPropertiesService.prefersExecuteOnUI(e.local.manifest))return{action:i,reason:l.localize("postEnableTooltip","Please {0} to enable this extension.",s)};if(e.server===this.extensionManagementServerService.remoteExtensionManagementServer&&a===this.extensionManagementServerService.localExtensionManagementServer&&this.extensionManifestPropertiesService.prefersExecuteOnWorkspace(e.local.manifest))return{action:i,reason:l.localize("postEnableTooltip","Please {0} to enable this extension.",s)}}return}else if(r)return{action:i,reason:l.localize("postDisableTooltip","Please {0} to disable this extension.",s)};return}else{if(o&&!this.extensionService.canAddExtension(H(e.local)))return{action:i,reason:l.localize("postEnableTooltip","Please {0} to enable this extension.",s)};const a=e.server?e.server===this.extensionManagementServerService.localExtensionManagementServer?this.extensionManagementServerService.remoteExtensionManagementServer:this.extensionManagementServerService.localExtensionManagementServer:null;if(a&&e.enablementState===x.DisabledByExtensionKind){const h=this.local.filter(g=>c(g.identifier,e.identifier)&&g.server===a)[0];if(h&&h.local&&this.extensionEnablementService.isEnabled(h.local))return{action:i,reason:l.localize("postEnableTooltip","Please {0} to enable this extension.",s)}}}}}getPrimaryExtension(e){if(e.length===1)return e[0];const t=e.filter(o=>o.local&&this.extensionEnablementService.isEnabled(o.local));if(t.length===1)return t[0];const n=t.length?t:e,i=n.find(o=>o.local&&o.local.manifest)?.local?.manifest;if(!i)return n[0];const s=this.extensionManifestPropertiesService.getExtensionKind(i);let r=n.find(o=>{for(const a of s)switch(a){case"ui":return o.server===this.extensionManagementServerService.localExtensionManagementServer;case"workspace":return o.server===this.extensionManagementServerService.remoteExtensionManagementServer;case"web":return o.server===this.extensionManagementServerService.webExtensionManagementServer}return!1});return!r&&this.extensionManagementServerService.localExtensionManagementServer&&(r=n.find(o=>{for(const a of s)switch(a){case"workspace":return o.server===this.extensionManagementServerService.localExtensionManagementServer;case"web":return o.server===this.extensionManagementServerService.localExtensionManagementServer}return!1})),!r&&this.extensionManagementServerService.webExtensionManagementServer&&(r=n.find(o=>{for(const a of s)switch(a){case"web":return o.server===this.extensionManagementServerService.webExtensionManagementServer}return!1})),!r&&this.extensionManagementServerService.remoteExtensionManagementServer&&(r=n.find(o=>{for(const a of s)switch(a){case"web":return o.server===this.extensionManagementServerService.remoteExtensionManagementServer}return!1})),r||e[0]}getExtensionState(e){if(this.installing.some(t=>c(t.identifier,e.identifier)&&(!e.server||t.server===e.server)))return v.Installing;if(this.remoteExtensions){const t=this.remoteExtensions.getExtensionState(e);if(t!==v.Uninstalled)return t}if(this.webExtensions){const t=this.webExtensions.getExtensionState(e);if(t!==v.Uninstalled)return t}return this.localExtensions?this.localExtensions.getExtensionState(e):v.Uninstalled}async checkForUpdates(e){if(!this.galleryService.isEnabled())return;const t=[];if(this.localExtensions&&t.push(this.localExtensions),this.remoteExtensions&&t.push(this.remoteExtensions),this.webExtensions&&t.push(this.webExtensions),!t.length)return;const n=[];for(const i of this.local)e&&!i.isBuiltin||i.isBuiltin&&!i.local?.pinned&&(i.type===I.System||!i.local?.identifier.uuid)||i.local?.source!=="resource"&&n.push({...i.identifier,preRelease:!!i.local?.preRelease});if(n.length){const i=await t[0].server.extensionManagementService.getTargetPlatform();this.telemetryService.publicLog2("galleryService:checkingForUpdates",{count:n.length});const s=await this.galleryService.getExtensions(n,{targetPlatform:i,compatible:!0,productVersion:this.getProductVersion()},m.None);s.length&&await this.syncInstalledExtensionsWithGallery(s)}}async updateAll(){const e=[];return this.outdated.forEach(t=>{t.gallery&&e.push({extension:t.gallery,options:{operation:we.Update,installPreReleaseVersion:t.local?.isPreReleaseVersion,profileLocation:this.userDataProfileService.currentProfile.extensionsResource,isApplicationScoped:t.local?.isApplicationScoped}})}),this.extensionManagementService.installGalleryExtensions(e)}async syncInstalledExtensionsWithGallery(e){const t=[];this.localExtensions&&t.push(this.localExtensions),this.remoteExtensions&&t.push(this.remoteExtensions),this.webExtensions&&t.push(this.webExtensions),t.length&&(await Promise.allSettled(t.map(n=>n.syncInstalledExtensionsWithGallery(e,this.getProductVersion()))),this.outdated.length&&this.eventuallyAutoUpdateExtensions())}isAutoCheckUpdatesEnabled(){return this.configurationService.getValue(oe)}eventuallyCheckForUpdates(e=!1){this.updatesCheckDelayer.cancel(),this.updatesCheckDelayer.trigger(async()=>{this.isAutoCheckUpdatesEnabled()&&await this.checkForUpdates(),this.eventuallyCheckForUpdates()},e?0:this.getUpdatesCheckInterval()).then(void 0,t=>null)}getUpdatesCheckInterval(){return this.productService.quality==="insider"&&this.getProductUpdateVersion()?1e3*60*60*1:C.UpdatesCheckInterval}eventuallyAutoUpdateExtensions(){this.autoUpdateDelayer.trigger(()=>this.autoUpdateExtensions()).then(void 0,e=>null)}async autoUpdateBuiltinExtensions(){await this.checkForUpdates(!0);const e=this.outdated.filter(t=>t.isBuiltin);await Z.settled(e.map(t=>this.install(t,t.local?.preRelease?{installPreReleaseVersion:!0}:void 0)))}async syncPinnedBuiltinExtensions(){const e=[];for(const t of this.local)t.isBuiltin&&t.local?.pinned&&t.local?.identifier.uuid&&e.push({...t.identifier,version:t.version});if(e.length){const t=await this.galleryService.getExtensions(e,m.None);t.length&&await this.syncInstalledExtensionsWithGallery(t)}}async autoUpdateExtensions(){const e=[];for(const n of this.outdated)this.shouldAutoUpdateExtension(n)&&(await this.shouldRequireConsentToUpdate(n)||e.push(n));if(!e.length)return;const t=this.getProductVersion();await Z.settled(e.map(n=>this.install(n,n.local?.preRelease?{installPreReleaseVersion:!0,productVersion:t}:{productVersion:t})))}getProductVersion(){return this.getProductUpdateVersion()??this.getProductCurrentVersion()}getProductCurrentVersion(){return{version:this.productService.version,date:this.productService.date}}getProductUpdateVersion(){switch(this.updateService.state.type){case S.AvailableForDownload:case S.Downloaded:case S.Updating:case S.Ready:{const e=this.updateService.state.update.productVersion;if(e&&N.valid(e))return{version:e,date:this.updateService.state.update.timestamp?new Date(this.updateService.state.update.timestamp).toISOString():void 0}}}}shouldAutoUpdateExtension(e){if(e.deprecationInfo?.disallowInstall)return!1;const t=this.getAutoUpdateValue();if(t===!1){const i=this.getEnabledAutoUpdateExtensions(),s=e.identifier.id.toLowerCase();return!!(i.includes(s)||this.isAutoUpdateEnabledForPublisher(e.publisher)&&!i.includes(`-${s}`))}return e.pinned||this.getDisabledAutoUpdateExtensions().includes(e.identifier.id.toLowerCase())?!1:t===!0?!0:t==="onlyEnabledExtensions"?this.extensionEnablementService.isEnabledEnablementState(e.enablementState):!1}async shouldRequireConsentToUpdate(e){if(e.outdated&&!(e.local?.manifest.main||e.local?.manifest.browser)&&e.gallery){if(et(e.gallery.properties?.executesCode)){if(!e.gallery.properties.executesCode)return}else{const t=e instanceof y?await e.getGalleryManifest():await this.galleryService.getManifest(e.gallery,m.None);if(!t?.main&&!t?.browser)return}return l.localize("consentRequiredToUpdate","The update for {0} extension introduces executable code, which is not present in the currently installed version.",e.displayName)}}isAutoUpdateEnabledFor(e){if(b(e)){if(W.test(e))throw new Error("Expected publisher string, found extension identifier");return this.isAutoUpdateEnabled()?!0:this.isAutoUpdateEnabledForPublisher(e)}return this.shouldAutoUpdateExtension(e)}isAutoUpdateEnabledForPublisher(e){return this.getPublishersToAutoUpdate().includes(e.toLowerCase())}async updateAutoUpdateEnablementFor(e,t){if(this.isAutoUpdateEnabled()){if(b(e))throw new Error("Expected extension, found publisher string");const n=this.getDisabledAutoUpdateExtensions(),i=e.identifier.id.toLowerCase(),s=n.indexOf(i);t?s!==-1&&n.splice(s,1):s===-1&&n.push(i),this.setDisabledAutoUpdateExtensions(n),t&&e.local&&e.pinned&&await this.extensionManagementService.updateMetadata(e.local,{pinned:!1}),this._onChange.fire(e)}else{const n=this.getEnabledAutoUpdateExtensions();if(b(e)){if(W.test(e))throw new Error("Expected publisher string, found extension identifier");e=e.toLowerCase(),this.isAutoUpdateEnabledFor(e)!==t&&(t?n.push(e):n.includes(e)&&n.splice(n.indexOf(e),1)),this.setEnabledAutoUpdateExtensions(n);for(const i of this.installed)i.publisher.toLowerCase()===e&&this._onChange.fire(i)}else{const i=e.identifier.id.toLowerCase(),s=this.isAutoUpdateEnabledFor(e.publisher.toLowerCase()),r=n.includes(i),o=n.includes(`-${i}`);t?(o&&n.splice(n.indexOf(`-${i}`),1),s?r&&n.splice(n.indexOf(i),1):r||n.push(i)):(r&&n.splice(n.indexOf(i),1),s?o||n.push(`-${i}`):o&&n.splice(n.indexOf(`-${i}`),1)),this.setEnabledAutoUpdateExtensions(n),this._onChange.fire(e)}}t&&this.autoUpdateExtensions()}onDidSelectedExtensionToAutoUpdateValueChange(){if(this.enabledAuotUpdateExtensionsValue!==this.getEnabledAutoUpdateExtensionsValue()||this.disabledAutoUpdateExtensionsValue!==this.getDisabledAutoUpdateExtensionsValue()){const e=this.installed.filter(o=>!o.isBuiltin),t=o=>{const a=[],h=[];for(const g of o)this.shouldAutoUpdateExtension(g)?a.push(g):h.push(g);return[a,h]},[n,i]=t(e);this._enabledAutoUpdateExtensionsValue=void 0,this._disabledAutoUpdateExtensionsValue=void 0;const[s,r]=t(e);for(const o of n??[])r?.includes(o)&&this._onChange.fire(o);for(const o of i??[])s?.includes(o)&&this._onChange.fire(o)}}async canInstall(e){return!(e instanceof y)||e.isMalicious||e.deprecationInfo?.disallowInstall?!1:e.gallery?!!(this.localExtensions&&await this.localExtensions.canInstall(e.gallery)||this.remoteExtensions&&await this.remoteExtensions.canInstall(e.gallery)||this.webExtensions&&await this.webExtensions.canInstall(e.gallery)):!!(e.resourceExtension&&await this.extensionManagementService.canInstall(e.resourceExtension))}async install(e,t={},n){let i,s;if(e instanceof w)i=e;else{let r,o;if(b(e)?(s=this.local.find(a=>c(a.identifier,{id:e})),s?.isBuiltin||(r={id:e,version:t.version,preRelease:t.installPreReleaseVersion??this.preferPreReleases})):e.gallery?(s=e,o=e.gallery,t.version&&t.version!==o?.version&&(r={id:s.identifier.id,version:t.version})):e.resourceExtension&&(s=e,i=e.resourceExtension),r){const a=s?.server?await s.server.extensionManagementService.getTargetPlatform():void 0;o=(await this.galleryService.getExtensions([r],{targetPlatform:a},m.None)).at(0)}if(!s&&o&&(s=this.instantiationService.createInstance(y,a=>this.getExtensionState(a),a=>this.getRuntimeState(a),void 0,void 0,o,void 0),s.setExtensionsControlManifest(await this.extensionManagementService.getExtensionsControlManifest())),s?.isMalicious)throw new Error(l.localize("malicious","This extension is reported to be problematic."));if(!(t.enable&&s?.local)){if(!i){if(!o){const a=b(e)?e:e.identifier.id;throw t.version?new Error(l.localize("not found version","Unable to install extension '{0}' because the requested version '{1}' is not found.",a,t.version)):new Error(l.localize("not found","Unable to install extension '{0}' because it is not found.",a))}i=o}t.version&&(t.installGivenVersion=!0),s?.isWorkspaceScoped&&(t.isWorkspaceScoped=!0)}}if(i){if(t.justification){const r=K(t.isMachineScoped)&&this.userDataSyncEnablementService.isEnabled()&&this.userDataSyncEnablementService.isResourceEnabled(Je.Extensions),o=[];o.push({label:b(t.justification)||!t.justification.action?l.localize({key:"installButtonLabel",comment:["&& denotes a mnemonic"]},"&&Install Extension"):l.localize({key:"installButtonLabelWithAction",comment:["&& denotes a mnemonic"]},"&&Install Extension and {0}",t.justification.action),run:()=>!0}),s||o.push({label:l.localize("open","Open Extension"),run:()=>(this.open(s),!1)});const a=await this.dialogService.prompt({title:l.localize("installExtensionTitle","Install Extension"),message:s?l.localize("installExtensionMessage","Would you like to install '{0}' extension from '{1}'?",s.displayName,s.publisherDisplayName):l.localize("installVSIXMessage","Would you like to install the extension?"),detail:b(t.justification)?t.justification:t.justification.reason,cancelButton:!0,buttons:o,checkbox:r?{label:l.localize("sync extension","Sync this extension"),checked:!0}:void 0});if(!a.result)throw new _;r&&(t.isMachineScoped=!a.checkboxChecked)}i instanceof w?s=await this.doInstall(void 0,()=>this.installFromVSIX(i,t),n):s&&(s.resourceExtension?s=await this.doInstall(s,()=>this.extensionManagementService.installResourceExtension(i,t),n):s=await this.doInstall(s,()=>this.installFromGallery(s,i,t),n))}if(!s)throw new Error(l.localize("unknown","Unable to install extension"));if(t.enable){if(s.enablementState===x.DisabledWorkspace||s.enablementState===x.DisabledGlobally){if(t.justification&&!(await this.dialogService.confirm({title:l.localize("enableExtensionTitle","Enable Extension"),message:l.localize("enableExtensionMessage","Would you like to enable '{0}' extension?",s.displayName),detail:b(t.justification)?t.justification:t.justification.reason,primaryButton:b(t.justification)?l.localize({key:"enableButtonLabel",comment:["&& denotes a mnemonic"]},"&&Enable Extension"):l.localize({key:"enableButtonLabelWithAction",comment:["&& denotes a mnemonic"]},"&&Enable Extension and {0}",t.justification.action)})).confirmed)throw new _;await this.setEnablement(s,s.enablementState===x.DisabledWorkspace?x.EnabledWorkspace:x.EnabledGlobally)}await this.waitUntilExtensionIsEnabled(s)}return s}async installInServer(e,t){await this.doInstall(e,async()=>{const n=e.local;if(!n)throw new Error("Extension not found");if(e.gallery||(e=(await this.getExtensions([{...e.identifier,preRelease:n.preRelease}],m.None))[0]??e),e.gallery)return t.extensionManagementService.installFromGallery(e.gallery,{installPreReleaseVersion:n.preRelease});const i=await t.extensionManagementService.getTargetPlatform();if(!Pe(n.targetPlatform,[n.targetPlatform],i))throw new Error(l.localize("incompatible","Can't install '{0}' extension because it is not compatible.",e.identifier.id));const s=await this.extensionManagementService.zip(n);try{return await t.extensionManagementService.install(s)}finally{try{await this.fileService.del(s)}catch(r){this.logService.error(r)}}})}canSetLanguage(e){return!(!ue||!e.gallery||!he(e.gallery))}async setLanguage(e){if(!this.canSetLanguage(e))throw new Error("Can not set language");const t=he(e.gallery);if(t===it)return;const n=e.gallery?.properties?.localizedLanguages?.[0];return this.localeService.setLocale({id:t,galleryExtension:e.gallery,extensionId:e.identifier.id,label:n??e.displayName})}setEnablement(e,t){return e=Array.isArray(e)?e:[e],this.promptAndSetEnablement(e,t)}async uninstall(e){const t=e.local?e:this.local.find(s=>c(s.identifier,e.identifier));if(!t?.local)throw new Error("Missing local");const n=[{extension:t.local}];for(const s of this.getAllPackExtensionsToUninstall(t.local,this.local))n.some(r=>c(r.extension.identifier,s.identifier))||n.push({extension:s});const i=[];for(const{extension:s}of n)for(const r of this.local)r.local&&(c(r.identifier,s.identifier)||r.dependencies.length!==0&&(s.manifest.extensionPack?.some(o=>c({id:o},r.identifier))||i.some(o=>o.extensionPack.some(a=>c({id:a},r.identifier)))||r.dependencies.some(o=>c(s.identifier,{id:o}))&&(i.push(r),n.push({extension:r.local}))));if(i.length){const{result:s}=await this.dialogService.prompt({title:l.localize("uninstallDependents","Uninstall Extension with Dependents"),type:B.Warning,message:this.getErrorMessageForUninstallingAnExtensionWithDependents(t,i),buttons:[{label:l.localize("uninstallAll","Uninstall All"),run:()=>!0}],cancelButton:{run:()=>!1}});if(!s)throw new _}return this.withProgress({location:L.Extensions,title:l.localize("uninstallingExtension","Uninstalling extension...."),source:`${t.identifier.id}`},()=>this.extensionManagementService.uninstallExtensions(n).then(()=>{}))}getAllPackExtensionsToUninstall(e,t,n=[]){if(n.some(s=>c(s.identifier,e.identifier)))return[];n.push(e);const i=e.manifest.extensionPack??[];if(i.length){const s=[];for(const o of t)o.local&&!o.isBuiltin&&i.some(a=>c({id:a},o.identifier))&&s.push(o.local);const r=[];for(const o of s)r.push(...this.getAllPackExtensionsToUninstall(o,t,n));return[...s,...r]}return[]}getErrorMessageForUninstallingAnExtensionWithDependents(e,t){return t.length===1?l.localize("singleDependentUninstallError","Cannot uninstall '{0}' extension alone. '{1}' extension depends on this. Do you want to uninstall all these extensions?",e.displayName,t[0].displayName):t.length===2?l.localize("twoDependentsUninstallError","Cannot uninstall '{0}' extension alone. '{1}' and '{2}' extensions depend on this. Do you want to uninstall all these extensions?",e.displayName,t[0].displayName,t[1].displayName):l.localize("multipleDependentsUninstallError","Cannot uninstall '{0}' extension alone. '{1}', '{2}' and other extensions depend on this. Do you want to uninstall all these extensions?",e.displayName,t[0].displayName,t[1].displayName)}reinstall(e){return this.doInstall(e,()=>{const t=e.local?e:this.local.filter(i=>c(i.identifier,e.identifier))[0],n=t&&t.local?t.local:null;if(!n)throw new Error("Missing local");return this.extensionManagementService.reinstallFromGallery(n)})}isExtensionIgnoredToSync(e){return e.local?!this.isInstalledExtensionSynced(e.local):this.extensionsSyncManagementService.hasToNeverSyncExtension(e.identifier.id)}async togglePreRelease(e){if(e.local){if(e.preRelease!==e.isPreReleaseVersion){await this.extensionManagementService.updateMetadata(e.local,{preRelease:!e.preRelease});return}await this.install(e,{installPreReleaseVersion:!e.preRelease,preRelease:!e.preRelease})}}async toggleExtensionIgnoredToSync(e){const t=this.isExtensionIgnoredToSync(e);e.local&&t?(e.local=await this.updateSynchronizingInstalledExtension(e.local,!0),this._onChange.fire(e)):this.extensionsSyncManagementService.updateIgnoredExtensions(e.identifier.id,!t),await this.userDataAutoSyncService.triggerSync(["IgnoredExtensionsUpdated"],!1,!1)}async toggleApplyExtensionToAllProfiles(e){if(!e.local||Ke(e.local.manifest)||e.isBuiltin)return;const t=e.local.isApplicationScoped;await Promise.all(this.getAllExtensions().map(async n=>{const i=n.local.find(s=>c(s.identifier,e.identifier))?.local;i&&i.isApplicationScoped===t&&await this.extensionManagementService.toggleAppliationScope(i,this.userDataProfileService.currentProfile.extensionsResource)}))}getAllExtensions(){const e=[];return this.localExtensions&&e.push(this.localExtensions),this.remoteExtensions&&e.push(this.remoteExtensions),this.webExtensions&&e.push(this.webExtensions),e}isInstalledExtensionSynced(e){return e.isMachineScoped?!1:this.extensionsSyncManagementService.hasToAlwaysSyncExtension(e.identifier.id)?!0:!this.extensionsSyncManagementService.hasToNeverSyncExtension(e.identifier.id)}async updateSynchronizingInstalledExtension(e,t){const n=!t;return e.isMachineScoped!==n&&(e=await this.extensionManagementService.updateMetadata(e,{isMachineScoped:n})),t&&this.extensionsSyncManagementService.updateIgnoredExtensions(e.identifier.id,!1),e}doInstall(e,t,n){const i=e?l.localize("installing named extension","Installing '{0}' extension....",e.displayName):l.localize("installing extension","Installing extension....");return this.withProgress({location:n??L.Extensions,title:i},async()=>{try{e&&(this.installing.push(e),this._onChange.fire(e));const s=await t();return await this.waitAndGetInstalledExtension(s.identifier)}finally{e&&(this.installing=this.installing.filter(s=>s!==e),this._onChange.fire(void 0))}})}async installFromVSIX(e,t){const n=await this.extensionManagementService.getManifest(e),i=this.local.find(s=>c(s.identifier,{id:ke(n.publisher,n.name)}));return i&&(t=t||{},i.latestVersion===n.version?t.pinned=i.local?.pinned||!this.shouldAutoUpdateExtension(i):t.installGivenVersion=!0),this.extensionManagementService.installVSIX(e,n,t)}installFromGallery(e,t,n){return n=n??{},n.pinned=e.local?.pinned||!this.shouldAutoUpdateExtension(e),e.local?(n.productVersion=this.getProductVersion(),this.extensionManagementService.updateFromGallery(t,e.local,n)):this.extensionManagementService.installFromGallery(t,n)}async waitAndGetInstalledExtension(e){let t=this.local.find(n=>c(n.identifier,e));if(t||await R.toPromise(R.filter(this.onChange,n=>!!n&&this.local.some(i=>c(i.identifier,e)))),t=this.local.find(n=>c(n.identifier,e)),!t)throw new Error("Extension should have been installed");return t}async waitUntilExtensionIsEnabled(e){this.extensionService.extensions.find(t=>$.equals(t.identifier,e.identifier.id))||!e.local||!this.extensionService.canAddExtension(H(e.local))||await new Promise((t,n)=>{const i=this.extensionService.onDidChangeExtensions(()=>{try{this.extensionService.extensions.find(s=>$.equals(s.identifier,e.identifier.id))&&(i.dispose(),t())}catch(s){n(s)}})})}promptAndSetEnablement(e,t){if(t===x.EnabledGlobally||t===x.EnabledWorkspace){const i=this.getExtensionsRecursively(e,this.local,t,{dependencies:!0,pack:!0});return this.checkAndSetEnablement(e,i,t)}else{const i=this.getExtensionsRecursively(e,this.local,t,{dependencies:!1,pack:!0});return i.length?this.checkAndSetEnablement(e,i,t):this.checkAndSetEnablement(e,[],t)}}async checkAndSetEnablement(e,t,n){const i=[...e,...t];if(!(n===x.EnabledGlobally||n===x.EnabledWorkspace))for(const r of e){const o=this.getDependentsAfterDisablement(r,i,this.local);if(o.length){const{result:a}=await this.dialogService.prompt({title:l.localize("disableDependents","Disable Extension with Dependents"),type:B.Warning,message:this.getDependentsErrorMessageForDisablement(r,i,o),buttons:[{label:l.localize("disable all","Disable All"),run:()=>!0}],cancelButton:{run:()=>!1}});if(!a)throw new _;await this.checkAndSetEnablement(o,[r],n)}}return this.doSetEnablement(i,n)}getExtensionsRecursively(e,t,n,i,s=[]){const r=e.filter(o=>s.indexOf(o)===-1);if(r.length){for(const a of r)s.push(a);const o=t.filter(a=>{if(s.indexOf(a)!==-1)return!1;const h=n===x.EnabledGlobally||n===x.EnabledWorkspace,g=a.enablementState===x.EnabledGlobally||a.enablementState===x.EnabledWorkspace;return h===g?!1:(h||!a.isBuiltin)&&(i.dependencies||i.pack)&&e.some(f=>i.dependencies&&f.dependencies.some(p=>c({id:p},a.identifier))||i.pack&&f.extensionPack.some(p=>c({id:p},a.identifier)))});return o.length&&o.push(...this.getExtensionsRecursively(o,t,n,i,s)),o}return[]}getDependentsAfterDisablement(e,t,n){return n.filter(i=>i.dependencies.length===0||i===e||!this.extensionEnablementService.isEnabledEnablementState(i.enablementState)||t.indexOf(i)!==-1?!1:i.dependencies.some(s=>[e,...t].some(r=>c(r.identifier,{id:s}))))}getDependentsErrorMessageForDisablement(e,t,n){for(const i of[e,...t]){const s=n.filter(r=>r.dependencies.some(o=>c({id:o},i.identifier)));if(s.length)return this.getErrorMessageForDisablingAnExtensionWithDependents(i,s)}return""}getErrorMessageForDisablingAnExtensionWithDependents(e,t){return t.length===1?l.localize("singleDependentError","Cannot disable '{0}' extension alone. '{1}' extension depends on this. Do you want to disable all these extensions?",e.displayName,t[0].displayName):t.length===2?l.localize("twoDependentsError","Cannot disable '{0}' extension alone. '{1}' and '{2}' extensions depend on this. Do you want to disable all these extensions?",e.displayName,t[0].displayName,t[1].displayName):l.localize("multipleDependentsError","Cannot disable '{0}' extension alone. '{1}', '{2}' and other extensions depend on this. Do you want to disable all these extensions?",e.displayName,t[0].displayName,t[1].displayName)}async doSetEnablement(e,t){const n=await this.extensionEnablementService.setEnablement(e.map(i=>i.local),t);for(let i=0;i<n.length;i++)n[i]&&this.telemetryService.publicLog(t===x.EnabledGlobally||t===x.EnabledWorkspace?"extension:enable":"extension:disable",e[i].telemetryData);return n}_activityCallBack;reportProgressFromOtherSources(){this.installed.some(e=>e.state===v.Installing||e.state===v.Uninstalling)?this._activityCallBack||this.withProgress({location:L.Extensions},()=>new Promise(e=>this._activityCallBack=e)):(this._activityCallBack?.(),this._activityCallBack=void 0)}withProgress(e,t){return this.progressService.withProgress(e,async()=>{const n=ve(()=>t());this.tasksInProgress.push(n);try{return await n}finally{const i=this.tasksInProgress.indexOf(n);i!==-1&&this.tasksInProgress.splice(i,1)}})}onError(e){if(ye(e))return;const t=e&&e.message||"";/getaddrinfo ENOTFOUND|getaddrinfo ENOENT|connect EACCES|connect ECONNREFUSED/.test(t)||this.notificationService.error(e)}handleURL(e,t){return/^extension/.test(e.path)?(this.onOpenExtensionUrl(e),Promise.resolve(!0)):Promise.resolve(!1)}onOpenExtensionUrl(e){const t=/^extension\/([^/]+)$/.exec(e.path);if(!t)return;const n=t[1];this.queryLocal().then(async i=>{let s=i.find(r=>c(r.identifier,{id:n}));s||([s]=await this.getExtensions([{id:n}],{source:"uri"},m.None)),s&&(await this.hostService.focus(lt),await this.open(s))}).then(void 0,i=>this.onError(i))}getPublishersToAutoUpdate(){return this.getEnabledAutoUpdateExtensions().filter(e=>!W.test(e))}getEnabledAutoUpdateExtensions(){try{const e=JSON.parse(this.enabledAuotUpdateExtensionsValue);if(Array.isArray(e))return e}catch{}return[]}setEnabledAutoUpdateExtensions(e){this.enabledAuotUpdateExtensionsValue=JSON.stringify(e)}_enabledAutoUpdateExtensionsValue;get enabledAuotUpdateExtensionsValue(){return this._enabledAutoUpdateExtensionsValue||(this._enabledAutoUpdateExtensionsValue=this.getEnabledAutoUpdateExtensionsValue()),this._enabledAutoUpdateExtensionsValue}set enabledAuotUpdateExtensionsValue(e){this.enabledAuotUpdateExtensionsValue!==e&&(this._enabledAutoUpdateExtensionsValue=e,this.setEnabledAutoUpdateExtensionsValue(e))}getEnabledAutoUpdateExtensionsValue(){return this.storageService.get(X,M.APPLICATION,"[]")}setEnabledAutoUpdateExtensionsValue(e){this.storageService.store(X,e,M.APPLICATION,le.USER)}getDisabledAutoUpdateExtensions(){try{const e=JSON.parse(this.disabledAutoUpdateExtensionsValue);if(Array.isArray(e))return e}catch{}return[]}setDisabledAutoUpdateExtensions(e){this.disabledAutoUpdateExtensionsValue=JSON.stringify(e)}_disabledAutoUpdateExtensionsValue;get disabledAutoUpdateExtensionsValue(){return this._disabledAutoUpdateExtensionsValue||(this._disabledAutoUpdateExtensionsValue=this.getDisabledAutoUpdateExtensionsValue()),this._disabledAutoUpdateExtensionsValue}set disabledAutoUpdateExtensionsValue(e){this.disabledAutoUpdateExtensionsValue!==e&&(this._disabledAutoUpdateExtensionsValue=e,this.setDisabledAutoUpdateExtensionsValue(e))}getDisabledAutoUpdateExtensionsValue(){return this.storageService.get(Q,M.APPLICATION,"[]")}setDisabledAutoUpdateExtensionsValue(e){this.storageService.store(Q,e,M.APPLICATION,le.USER)}};C=D([u(0,re),u(1,Ne),u(2,ie),u(3,F),u(4,_e),u(5,G),u(6,qe),u(7,We),u(8,ne),u(9,Ve),u(10,Be),u(11,Ce),u(12,je),u(13,He),u(14,Xe),u(15,de),u(16,Ye),u(17,tt),u(18,ae),u(19,nt),u(20,st),u(21,ot),u(22,ce),u(23,fe),u(24,$e),u(25,ct),u(26,Qe),u(27,dt),u(28,ut),u(29,ht),u(30,Et)],C);export{y as Extension,C as ExtensionsWorkbenchService};
