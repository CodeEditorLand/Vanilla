{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/unsupportedExtensionsMigrationContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IExtensionGalleryService, IGlobalExtensionEnablementService } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { IExtensionStorageService } from '../../../../platform/extensionManagement/common/extensionStorage.js';\nimport { migrateUnsupportedExtensions } from '../../../../platform/extensionManagement/common/unsupportedExtensionsMigration.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IExtensionManagementServerService } from '../../../services/extensionManagement/common/extensionManagement.js';\n\nexport class UnsupportedExtensionsMigrationContrib implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IExtensionManagementServerService extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionGalleryService extensionGalleryService: IExtensionGalleryService,\n\t\t@IExtensionStorageService extensionStorageService: IExtensionStorageService,\n\t\t@IGlobalExtensionEnablementService extensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\t// Unsupported extensions are not migrated for local extension management server, because it is done in shared process\n\t\tif (extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tmigrateUnsupportedExtensions(extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService, extensionGalleryService, extensionStorageService, extensionEnablementService, logService);\n\t\t}\n\t\tif (extensionManagementServerService.webExtensionManagementServer) {\n\t\t\tmigrateUnsupportedExtensions(extensionManagementServerService.webExtensionManagementServer.extensionManagementService, extensionGalleryService, extensionStorageService, extensionEnablementService, logService);\n\t\t}\n\t}\n\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,0BAA0B,yCAAyC;AAC5E,SAAS,gCAAgC;AACzC,SAAS,oCAAoC;AAC7C,SAAS,mBAAmB;AAC5B,SAAS,8BAA8B;AACvC,SAAS,yCAAyC;AAE3C,IAAM,wCAAN,MAA8E;AAAA,EAZrF,OAYqF;AAAA;AAAA;AAAA,EAEpF,YACoC,kCACT,yBACA,yBACS,4BACtB,YACZ;AAED,QAAI,iCAAiC,iCAAiC;AACrE,mCAA6B,iCAAiC,gCAAgC,4BAA4B,yBAAyB,yBAAyB,4BAA4B,UAAU;AAAA,IACnN;AACA,QAAI,iCAAiC,8BAA8B;AAClE,mCAA6B,iCAAiC,6BAA6B,4BAA4B,yBAAyB,yBAAyB,4BAA4B,UAAU;AAAA,IAChN;AAAA,EACD;AAED;AAlBa,wCAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
