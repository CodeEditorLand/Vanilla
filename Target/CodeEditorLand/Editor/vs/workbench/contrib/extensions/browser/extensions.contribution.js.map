{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensions.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { KeyMod, KeyCode } from '../../../../base/common/keyCodes.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { MenuRegistry, MenuId, registerAction2, Action2, IMenuItem, IAction2Options } from '../../../../platform/actions/common/actions.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { ExtensionsLocalizedLabel, IExtensionManagementService, IExtensionGalleryService, PreferencesLocalizedLabel, InstallOperation, EXTENSION_INSTALL_SOURCE_CONTEXT, ExtensionInstallSource } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { EnablementState, IExtensionManagementServerService, IWorkbenchExtensionEnablementService, IWorkbenchExtensionManagementService, extensionsConfigurationNodeBase } from '../../../services/extensionManagement/common/extensionManagement.js';\nimport { IExtensionIgnoredRecommendationsService, IExtensionRecommendationsService } from '../../../services/extensionRecommendations/common/extensionRecommendations.js';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from '../../../common/contributions.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { VIEWLET_ID, IExtensionsWorkbenchService, IExtensionsViewPaneContainer, TOGGLE_IGNORE_EXTENSION_ACTION_ID, INSTALL_EXTENSION_FROM_VSIX_COMMAND_ID, WORKSPACE_RECOMMENDATIONS_VIEW_ID, IWorkspaceRecommendedExtensionsView, AutoUpdateConfigurationKey, HasOutdatedExtensionsContext, SELECT_INSTALL_VSIX_EXTENSION_COMMAND_ID, LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID, ExtensionEditorTab, THEME_ACTIONS_GROUP, INSTALL_ACTIONS_GROUP, OUTDATED_EXTENSIONS_VIEW_ID, CONTEXT_HAS_GALLERY, IExtension, extensionsSearchActionsMenu, UPDATE_ACTIONS_GROUP, IExtensionArg, ExtensionRuntimeActionType } from '../common/extensions.js';\nimport { ReinstallAction, InstallSpecificVersionOfExtensionAction, ConfigureWorkspaceRecommendedExtensionsAction, ConfigureWorkspaceFolderRecommendedExtensionsAction, PromptExtensionInstallFailureAction, SetColorThemeAction, SetFileIconThemeAction, SetProductIconThemeAction, ClearLanguageAction, ToggleAutoUpdateForExtensionAction, ToggleAutoUpdatesForPublisherAction, TogglePreReleaseExtensionAction, InstallAnotherVersionAction, InstallAction } from './extensionsActions.js';\nimport { ExtensionsInput } from '../common/extensionsInput.js';\nimport { ExtensionEditor } from './extensionEditor.js';\nimport { StatusUpdater, MaliciousExtensionChecker, ExtensionsViewletViewsContribution, ExtensionsViewPaneContainer, BuiltInExtensionsContext, SearchMarketplaceExtensionsContext, RecommendedExtensionsContext, DefaultViewsContext, ExtensionsSortByContext, SearchHasTextContext } from './extensionsViewlet.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport * as jsonContributionRegistry from '../../../../platform/jsonschemas/common/jsonContributionRegistry.js';\nimport { ExtensionsConfigurationSchema, ExtensionsConfigurationSchemaId } from '../common/extensionsFileTemplate.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeymapExtensions } from '../common/extensionsUtils.js';\nimport { areSameExtensions, getIdAndVersion } from '../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { URI, UriComponents } from '../../../../base/common/uri.js';\nimport { ExtensionActivationProgress } from './extensionsActivationProgress.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ExtensionDependencyChecker } from './extensionsDependencyChecker.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IViewContainersRegistry, ViewContainerLocation, Extensions as ViewContainerExtensions } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IQuickAccessRegistry, Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { InstallExtensionQuickAccessProvider, ManageExtensionsQuickAccessProvider } from './extensionsQuickAccess.js';\nimport { ExtensionRecommendationsService } from './extensionRecommendationsService.js';\nimport { CONTEXT_SYNC_ENABLEMENT } from '../../../services/userDataSync/common/userDataSync.js';\nimport { CopyAction, CutAction, PasteAction } from '../../../../editor/contrib/clipboard/browser/clipboard.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { MultiCommand } from '../../../../editor/browser/editorExtensions.js';\nimport { IWebview } from '../../webview/browser/webview.js';\nimport { ExtensionsWorkbenchService } from './extensionsWorkbenchService.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { IExtensionRecommendationNotificationService } from '../../../../platform/extensionRecommendations/common/extensionRecommendations.js';\nimport { ExtensionRecommendationNotificationService } from './extensionRecommendationNotificationService.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { ResourceContextKey, WorkbenchStateContext } from '../../../common/contextkeys.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { IWorkspaceExtensionsConfigService } from '../../../services/extensionRecommendations/common/workspaceExtensionsConfig.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { ShowRuntimeExtensionsAction } from './abstractRuntimeExtensionsEditor.js';\nimport { ExtensionEnablementWorkspaceTrustTransitionParticipant } from './extensionEnablementWorkspaceTrustTransitionParticipant.js';\nimport { clearSearchResultsIcon, configureRecommendedIcon, extensionsViewIcon, filterIcon, installWorkspaceRecommendedIcon, refreshIcon } from './extensionsIcons.js';\nimport { EXTENSION_CATEGORIES } from '../../../../platform/extensions/common/extensions.js';\nimport { Disposable, DisposableStore, IDisposable, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { IDialogService, IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { mnemonicButtonLabel } from '../../../../base/common/labels.js';\nimport { Query } from '../common/extensionQuery.js';\nimport { EditorExtensions } from '../../../common/editor.js';\nimport { WORKSPACE_TRUST_EXTENSION_SUPPORT } from '../../../services/workspaces/common/workspaceTrust.js';\nimport { ExtensionsCompletionItemsProvider } from './extensionsCompletionItemsProvider.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { UnsupportedExtensionsMigrationContrib } from './unsupportedExtensionsMigrationContribution.js';\nimport { isWeb } from '../../../../base/common/platform.js';\nimport { ExtensionStorageService } from '../../../../platform/extensionManagement/common/extensionStorage.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IStringDictionary } from '../../../../base/common/collections.js';\nimport { CONTEXT_KEYBINDINGS_EDITOR } from '../../preferences/common/preferences.js';\nimport { DeprecatedExtensionsChecker } from './deprecatedExtensionsChecker.js';\nimport { ProgressLocation } from '../../../../platform/progress/common/progress.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IConfigurationMigrationRegistry, Extensions as ConfigurationMigrationExtensions } from '../../../common/configuration.js';\n\n// Singletons\nregisterSingleton(IExtensionsWorkbenchService, ExtensionsWorkbenchService, InstantiationType.Eager /* Auto updates extensions */);\nregisterSingleton(IExtensionRecommendationNotificationService, ExtensionRecommendationNotificationService, InstantiationType.Delayed);\nregisterSingleton(IExtensionRecommendationsService, ExtensionRecommendationsService, InstantiationType.Eager /* Prompts recommendations in the background */);\n\n// Quick Access\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: ManageExtensionsQuickAccessProvider,\n\tprefix: ManageExtensionsQuickAccessProvider.PREFIX,\n\tplaceholder: localize('manageExtensionsQuickAccessPlaceholder', \"Press Enter to manage extensions.\"),\n\thelpEntries: [{ description: localize('manageExtensionsHelp', \"Manage Extensions\") }]\n});\n\n// Editor\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tExtensionEditor,\n\t\tExtensionEditor.ID,\n\t\tlocalize('extension', \"Extension\")\n\t),\n\t[\n\t\tnew SyncDescriptor(ExtensionsInput)\n\t]);\n\nRegistry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer(\n\t{\n\t\tid: VIEWLET_ID,\n\t\ttitle: localize2('extensions', \"Extensions\"),\n\t\topenCommandActionDescriptor: {\n\t\t\tid: VIEWLET_ID,\n\t\t\tmnemonicTitle: localize({ key: 'miViewExtensions', comment: ['&& denotes a mnemonic'] }, \"E&&xtensions\"),\n\t\t\tkeybindings: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyX },\n\t\t\torder: 4,\n\t\t},\n\t\tctorDescriptor: new SyncDescriptor(ExtensionsViewPaneContainer),\n\t\ticon: extensionsViewIcon,\n\t\torder: 4,\n\t\trejectAddedViews: true,\n\t\talwaysUseContainerInfo: true,\n\t}, ViewContainerLocation.Sidebar);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration)\n\t.registerConfiguration({\n\t\t...extensionsConfigurationNodeBase,\n\t\tproperties: {\n\t\t\t'extensions.autoUpdate': {\n\t\t\t\tenum: [true, 'onlyEnabledExtensions', false,],\n\t\t\t\tenumItemLabels: [\n\t\t\t\t\tlocalize('all', \"All Extensions\"),\n\t\t\t\t\tlocalize('enabled', \"Only Enabled Extensions\"),\n\t\t\t\t\tlocalize('none', \"None\"),\n\t\t\t\t],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('extensions.autoUpdate.true', 'Download and install updates automatically for all extensions.'),\n\t\t\t\t\tlocalize('extensions.autoUpdate.enabled', 'Download and install updates automatically only for enabled extensions.'),\n\t\t\t\t\tlocalize('extensions.autoUpdate.false', 'Extensions are not automatically updated.'),\n\t\t\t\t],\n\t\t\t\tdescription: localize('extensions.autoUpdate', \"Controls the automatic update behavior of extensions. The updates are fetched from a Microsoft online service.\"),\n\t\t\t\tdefault: true,\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\ttags: ['usesOnlineServices']\n\t\t\t},\n\t\t\t'extensions.autoCheckUpdates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: localize('extensionsCheckUpdates', \"When enabled, automatically checks extensions for updates. If an extension has an update, it is marked as outdated in the Extensions view. The updates are fetched from a Microsoft online service.\"),\n\t\t\t\tdefault: true,\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\ttags: ['usesOnlineServices']\n\t\t\t},\n\t\t\t'extensions.ignoreRecommendations': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: localize('extensionsIgnoreRecommendations', \"When enabled, the notifications for extension recommendations will not be shown.\"),\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\t'extensions.showRecommendationsOnlyOnDemand': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdeprecationMessage: localize('extensionsShowRecommendationsOnlyOnDemand_Deprecated', \"This setting is deprecated. Use extensions.ignoreRecommendations setting to control recommendation notifications. Use Extensions view's visibility actions to hide Recommended view by default.\"),\n\t\t\t\tdefault: false,\n\t\t\t\ttags: ['usesOnlineServices']\n\t\t\t},\n\t\t\t'extensions.closeExtensionDetailsOnViewChange': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: localize('extensionsCloseExtensionDetailsOnViewChange', \"When enabled, editors with extension details will be automatically closed upon navigating away from the Extensions View.\"),\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\t'extensions.confirmedUriHandlerExtensionIds': {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tdescription: localize('handleUriConfirmedExtensions', \"When an extension is listed here, a confirmation prompt will not be shown when that extension handles a URI.\"),\n\t\t\t\tdefault: [],\n\t\t\t\tscope: ConfigurationScope.APPLICATION\n\t\t\t},\n\t\t\t'extensions.webWorker': {\n\t\t\t\ttype: ['boolean', 'string'],\n\t\t\t\tenum: [true, false, 'auto'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('extensionsWebWorker.true', \"The Web Worker Extension Host will always be launched.\"),\n\t\t\t\t\tlocalize('extensionsWebWorker.false', \"The Web Worker Extension Host will never be launched.\"),\n\t\t\t\t\tlocalize('extensionsWebWorker.auto', \"The Web Worker Extension Host will be launched when a web extension needs it.\"),\n\t\t\t\t],\n\t\t\t\tdescription: localize('extensionsWebWorker', \"Enable web worker extension host.\"),\n\t\t\t\tdefault: 'auto'\n\t\t\t},\n\t\t\t'extensions.supportVirtualWorkspaces': {\n\t\t\t\ttype: 'object',\n\t\t\t\tmarkdownDescription: localize('extensions.supportVirtualWorkspaces', \"Override the virtual workspaces support of an extension.\"),\n\t\t\t\tpatternProperties: {\n\t\t\t\t\t'([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$': {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tadditionalProperties: false,\n\t\t\t\tdefault: {},\n\t\t\t\tdefaultSnippets: [{\n\t\t\t\t\t'body': {\n\t\t\t\t\t\t'pub.name': false\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t\t'extensions.experimental.affinity': {\n\t\t\t\ttype: 'object',\n\t\t\t\tmarkdownDescription: localize('extensions.affinity', \"Configure an extension to execute in a different extension host process.\"),\n\t\t\t\tpatternProperties: {\n\t\t\t\t\t'([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$': {\n\t\t\t\t\t\ttype: 'integer',\n\t\t\t\t\t\tdefault: 1\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tadditionalProperties: false,\n\t\t\t\tdefault: {},\n\t\t\t\tdefaultSnippets: [{\n\t\t\t\t\t'body': {\n\t\t\t\t\t\t'pub.name': 1\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t\t[WORKSPACE_TRUST_EXTENSION_SUPPORT]: {\n\t\t\t\ttype: 'object',\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\tmarkdownDescription: localize('extensions.supportUntrustedWorkspaces', \"Override the untrusted workspace support of an extension. Extensions using `true` will always be enabled. Extensions using `limited` will always be enabled, and the extension will hide functionality that requires trust. Extensions using `false` will only be enabled only when the workspace is trusted.\"),\n\t\t\t\tpatternProperties: {\n\t\t\t\t\t'([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$': {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t'supported': {\n\t\t\t\t\t\t\t\ttype: ['boolean', 'string'],\n\t\t\t\t\t\t\t\tenum: [true, false, 'limited'],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tlocalize('extensions.supportUntrustedWorkspaces.true', \"Extension will always be enabled.\"),\n\t\t\t\t\t\t\t\t\tlocalize('extensions.supportUntrustedWorkspaces.false', \"Extension will only be enabled only when the workspace is trusted.\"),\n\t\t\t\t\t\t\t\t\tlocalize('extensions.supportUntrustedWorkspaces.limited', \"Extension will always be enabled, and the extension will hide functionality requiring trust.\"),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdescription: localize('extensions.supportUntrustedWorkspaces.supported', \"Defines the untrusted workspace support setting for the extension.\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'version': {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: localize('extensions.supportUntrustedWorkspaces.version', \"Defines the version of the extension for which the override should be applied. If not specified, the override will be applied independent of the extension version.\"),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'extensions.experimental.deferredStartupFinishedActivation': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: localize('extensionsDeferredStartupFinishedActivation', \"When enabled, extensions which declare the `onStartupFinished` activation event will be activated after a timeout.\"),\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\t'extensions.experimental.issueQuickAccess': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: localize('extensionsInQuickAccess', \"When enabled, extensions can be searched for via Quick Access and report issues from there.\"),\n\t\t\t\tdefault: true\n\t\t\t}\n\t\t}\n\t});\n\nconst jsonRegistry = <jsonContributionRegistry.IJSONContributionRegistry>Registry.as(jsonContributionRegistry.Extensions.JSONContribution);\njsonRegistry.registerSchema(ExtensionsConfigurationSchemaId, ExtensionsConfigurationSchema);\n\n// Register Commands\nCommandsRegistry.registerCommand('_extensions.manage', (accessor: ServicesAccessor, extensionId: string, tab?: ExtensionEditorTab, preserveFocus?: boolean, feature?: string) => {\n\tconst extensionService = accessor.get(IExtensionsWorkbenchService);\n\tconst extension = extensionService.local.find(e => areSameExtensions(e.identifier, { id: extensionId }));\n\tif (extension) {\n\t\textensionService.open(extension, { tab, preserveFocus, feature });\n\t} else {\n\t\tthrow new Error(localize('notFound', \"Extension '{0}' not found.\", extensionId));\n\t}\n});\n\nCommandsRegistry.registerCommand('extension.open', async (accessor: ServicesAccessor, extensionId: string, tab?: ExtensionEditorTab, preserveFocus?: boolean, feature?: string, sideByside?: boolean) => {\n\tconst extensionService = accessor.get(IExtensionsWorkbenchService);\n\tconst commandService = accessor.get(ICommandService);\n\n\tconst [extension] = await extensionService.getExtensions([{ id: extensionId }], CancellationToken.None);\n\tif (extension) {\n\t\treturn extensionService.open(extension, { tab, preserveFocus, feature, sideByside });\n\t}\n\n\treturn commandService.executeCommand('_extensions.manage', extensionId, tab, preserveFocus, feature);\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'workbench.extensions.installExtension',\n\tmetadata: {\n\t\tdescription: localize('workbench.extensions.installExtension.description', \"Install the given extension\"),\n\t\targs: [\n\t\t\t{\n\t\t\t\tname: 'extensionIdOrVSIXUri',\n\t\t\t\tdescription: localize('workbench.extensions.installExtension.arg.decription', \"Extension id or VSIX resource uri\"),\n\t\t\t\tconstraint: (value: any) => typeof value === 'string' || value instanceof URI,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'options',\n\t\t\t\tdescription: '(optional) Options for installing the extension. Object with the following properties: ' +\n\t\t\t\t\t'`installOnlyNewlyAddedFromExtensionPackVSIX`: When enabled, VS Code installs only newly added extensions from the extension pack VSIX. This option is considered only when installing VSIX. ',\n\t\t\t\tisOptional: true,\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'installOnlyNewlyAddedFromExtensionPackVSIX': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': localize('workbench.extensions.installExtension.option.installOnlyNewlyAddedFromExtensionPackVSIX', \"When enabled, VS Code installs only newly added extensions from the extension pack VSIX. This option is considered only while installing a VSIX.\"),\n\t\t\t\t\t\t\tdefault: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'installPreReleaseVersion': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': localize('workbench.extensions.installExtension.option.installPreReleaseVersion', \"When enabled, VS Code installs the pre-release version of the extension if available.\"),\n\t\t\t\t\t\t\tdefault: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'donotSync': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': localize('workbench.extensions.installExtension.option.donotSync', \"When enabled, VS Code do not sync this extension when Settings Sync is on.\"),\n\t\t\t\t\t\t\tdefault: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'justification': {\n\t\t\t\t\t\t\t'type': ['string', 'object'],\n\t\t\t\t\t\t\t'description': localize('workbench.extensions.installExtension.option.justification', \"Justification for installing the extension. This is a string or an object that can be used to pass any information to the installation handlers. i.e. `{reason: 'This extension wants to open a URI', action: 'Open URI'}` will show a message box with the reason and action upon install.\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'enable': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': localize('workbench.extensions.installExtension.option.enable', \"When enabled, the extension will be enabled if it is installed but disabled. If the extension is already enabled, this has no effect.\"),\n\t\t\t\t\t\t\tdefault: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'context': {\n\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t'description': localize('workbench.extensions.installExtension.option.context', \"Context for the installation. This is a JSON object that can be used to pass any information to the installation handlers. i.e. `{skipWalkthrough: true}` will skip opening the walkthrough upon install.\"),\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\thandler: async (\n\t\taccessor,\n\t\targ: string | UriComponents,\n\t\toptions?: {\n\t\t\tinstallOnlyNewlyAddedFromExtensionPackVSIX?: boolean;\n\t\t\tinstallPreReleaseVersion?: boolean;\n\t\t\tdonotSync?: boolean;\n\t\t\tjustification?: string | { reason: string; action: string };\n\t\t\tenable?: boolean;\n\t\t\tcontext?: IStringDictionary<any>;\n\t\t}) => {\n\t\tconst extensionsWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\tconst extensionManagementService = accessor.get(IWorkbenchExtensionManagementService);\n\t\tconst extensionGalleryService = accessor.get(IExtensionGalleryService);\n\t\ttry {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tconst [id, version] = getIdAndVersion(arg);\n\t\t\t\tconst extension = extensionsWorkbenchService.local.find(e => areSameExtensions(e.identifier, { id, uuid: version }));\n\t\t\t\tif (extension?.enablementState === EnablementState.DisabledByExtensionKind) {\n\t\t\t\t\tconst [gallery] = await extensionGalleryService.getExtensions([{ id, preRelease: options?.installPreReleaseVersion }], CancellationToken.None);\n\t\t\t\t\tif (!gallery) {\n\t\t\t\t\t\tthrow new Error(localize('notFound', \"Extension '{0}' not found.\", arg));\n\t\t\t\t\t}\n\t\t\t\t\tawait extensionManagementService.installFromGallery(gallery, {\n\t\t\t\t\t\tisMachineScoped: options?.donotSync ? true : undefined, /* do not allow syncing extensions automatically while installing through the command */\n\t\t\t\t\t\tinstallPreReleaseVersion: options?.installPreReleaseVersion,\n\t\t\t\t\t\tinstallGivenVersion: !!version,\n\t\t\t\t\t\tcontext: { ...options?.context, [EXTENSION_INSTALL_SOURCE_CONTEXT]: ExtensionInstallSource.COMMAND },\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tawait extensionsWorkbenchService.install(arg, {\n\t\t\t\t\t\tversion,\n\t\t\t\t\t\tinstallPreReleaseVersion: options?.installPreReleaseVersion,\n\t\t\t\t\t\tcontext: { ...options?.context, [EXTENSION_INSTALL_SOURCE_CONTEXT]: ExtensionInstallSource.COMMAND },\n\t\t\t\t\t\tjustification: options?.justification,\n\t\t\t\t\t\tenable: options?.enable,\n\t\t\t\t\t\tisMachineScoped: options?.donotSync ? true : undefined, /* do not allow syncing extensions automatically while installing through the command */\n\t\t\t\t\t}, ProgressLocation.Notification);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst vsix = URI.revive(arg);\n\t\t\t\tawait extensionsWorkbenchService.install(vsix, { installOnlyNewlyAddedFromExtensionPack: options?.installOnlyNewlyAddedFromExtensionPackVSIX, installGivenVersion: true });\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'workbench.extensions.uninstallExtension',\n\tmetadata: {\n\t\tdescription: localize('workbench.extensions.uninstallExtension.description', \"Uninstall the given extension\"),\n\t\targs: [\n\t\t\t{\n\t\t\t\tname: localize('workbench.extensions.uninstallExtension.arg.name', \"Id of the extension to uninstall\"),\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'string'\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\thandler: async (accessor, id: string) => {\n\t\tif (!id) {\n\t\t\tthrow new Error(localize('id required', \"Extension id required.\"));\n\t\t}\n\t\tconst extensionManagementService = accessor.get(IExtensionManagementService);\n\t\tconst installed = await extensionManagementService.getInstalled();\n\t\tconst [extensionToUninstall] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\tif (!extensionToUninstall) {\n\t\t\tthrow new Error(localize('notInstalled', \"Extension '{0}' is not installed. Make sure you use the full extension ID, including the publisher, e.g.: ms-dotnettools.csharp.\", id));\n\t\t}\n\t\tif (extensionToUninstall.isBuiltin) {\n\t\t\tthrow new Error(localize('builtin', \"Extension '{0}' is a Built-in extension and cannot be installed\", id));\n\t\t}\n\n\t\ttry {\n\t\t\tawait extensionManagementService.uninstall(extensionToUninstall);\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'workbench.extensions.search',\n\tmetadata: {\n\t\tdescription: localize('workbench.extensions.search.description', \"Search for a specific extension\"),\n\t\targs: [\n\t\t\t{\n\t\t\t\tname: localize('workbench.extensions.search.arg.name', \"Query to use in search\"),\n\t\t\t\tschema: { 'type': 'string' }\n\t\t\t}\n\t\t]\n\t},\n\thandler: async (accessor, query: string = '') => {\n\t\treturn accessor.get(IExtensionsWorkbenchService).openSearch(query);\n\t}\n});\n\nfunction overrideActionForActiveExtensionEditorWebview(command: MultiCommand | undefined, f: (webview: IWebview) => void) {\n\tcommand?.addImplementation(105, 'extensions-editor', (accessor) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = editorService.activeEditorPane;\n\t\tif (editor instanceof ExtensionEditor) {\n\t\t\tif (editor.activeWebview?.isFocused) {\n\t\t\t\tf(editor.activeWebview);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t});\n}\n\noverrideActionForActiveExtensionEditorWebview(CopyAction, webview => webview.copy());\noverrideActionForActiveExtensionEditorWebview(CutAction, webview => webview.cut());\noverrideActionForActiveExtensionEditorWebview(PasteAction, webview => webview.paste());\n\n// Contexts\nexport const CONTEXT_HAS_LOCAL_SERVER = new RawContextKey<boolean>('hasLocalServer', false);\nexport const CONTEXT_HAS_REMOTE_SERVER = new RawContextKey<boolean>('hasRemoteServer', false);\nexport const CONTEXT_HAS_WEB_SERVER = new RawContextKey<boolean>('hasWebServer', false);\n\nasync function runAction(action: IAction): Promise<void> {\n\ttry {\n\t\tawait action.run();\n\t} finally {\n\t\tif (isDisposable(action)) {\n\t\t\taction.dispose();\n\t\t}\n\t}\n}\n\ntype IExtensionActionOptions = IAction2Options & {\n\tmenuTitles?: { [id: string]: string };\n\trun(accessor: ServicesAccessor, ...args: any[]): Promise<any>;\n};\n\nclass ExtensionsContributions extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionGalleryService extensionGalleryService: IExtensionGalleryService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t) {\n\t\tsuper();\n\t\tconst hasGalleryContext = CONTEXT_HAS_GALLERY.bindTo(contextKeyService);\n\t\tif (extensionGalleryService.isEnabled()) {\n\t\t\thasGalleryContext.set(true);\n\t\t}\n\n\t\tconst hasLocalServerContext = CONTEXT_HAS_LOCAL_SERVER.bindTo(contextKeyService);\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\thasLocalServerContext.set(true);\n\t\t}\n\n\t\tconst hasRemoteServerContext = CONTEXT_HAS_REMOTE_SERVER.bindTo(contextKeyService);\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\thasRemoteServerContext.set(true);\n\t\t}\n\n\t\tconst hasWebServerContext = CONTEXT_HAS_WEB_SERVER.bindTo(contextKeyService);\n\t\tif (this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\thasWebServerContext.set(true);\n\t\t}\n\n\t\tthis.registerGlobalActions();\n\t\tthis.registerContextMenuActions();\n\t\tthis.registerQuickAccessProvider();\n\t}\n\n\tprivate registerQuickAccessProvider(): void {\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer\n\t\t\t|| this.extensionManagementServerService.remoteExtensionManagementServer\n\t\t\t|| this.extensionManagementServerService.webExtensionManagementServer\n\t\t) {\n\t\t\tRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\t\t\t\tctor: InstallExtensionQuickAccessProvider,\n\t\t\t\tprefix: InstallExtensionQuickAccessProvider.PREFIX,\n\t\t\t\tplaceholder: localize('installExtensionQuickAccessPlaceholder', \"Type the name of an extension to install or search.\"),\n\t\t\t\thelpEntries: [{ description: localize('installExtensionQuickAccessHelp', \"Install or Search Extensions\") }]\n\t\t\t});\n\t\t}\n\t}\n\n\t// Global actions\n\tprivate registerGlobalActions(): void {\n\t\tthis._register(MenuRegistry.appendMenuItem(MenuId.MenubarPreferencesMenu, {\n\t\t\tcommand: {\n\t\t\t\tid: VIEWLET_ID,\n\t\t\t\ttitle: localize({ key: 'miPreferencesExtensions', comment: ['&& denotes a mnemonic'] }, \"&&Extensions\")\n\t\t\t},\n\t\t\tgroup: '2_configuration',\n\t\t\torder: 3\n\t\t}));\n\t\tthis._register(MenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\t\t\tcommand: {\n\t\t\t\tid: VIEWLET_ID,\n\t\t\t\ttitle: localize('showExtensions', \"Extensions\")\n\t\t\t},\n\t\t\tgroup: '2_configuration',\n\t\t\torder: 3\n\t\t}));\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.focusExtensionsView',\n\t\t\ttitle: localize2('focusExtensions', 'Focus on Extensions View'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tf1: true,\n\t\t\trun: async (accessor: ServicesAccessor) => {\n\t\t\t\tawait accessor.get(IExtensionsWorkbenchService).openSearch('');\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.installExtensions',\n\t\t\ttitle: localize2('installExtensions', 'Install Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_HAS_GALLERY, ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor) => {\n\t\t\t\taccessor.get(IViewsService).openViewContainer(VIEWLET_ID, true);\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.showRecommendedKeymapExtensions',\n\t\t\ttitle: localize2('showRecommendedKeymapExtensionsShort', 'Keymaps'),\n\t\t\tcategory: PreferencesLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY\n\t\t\t}, {\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_HAS_GALLERY),\n\t\t\t\tgroup: '2_keyboard_discover_actions'\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[MenuId.EditorTitle.id]: localize('importKeyboardShortcutsFroms', \"Migrate Keyboard Shortcuts from...\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@recommended:keymaps ')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.showLanguageExtensions',\n\t\t\ttitle: localize2('showLanguageExtensionsShort', 'Language Extensions'),\n\t\t\tcategory: PreferencesLocalizedLabel,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@recommended:languages ')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.checkForUpdates',\n\t\t\ttitle: localize2('checkForUpdates', 'Check for Extension Updates'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_HAS_GALLERY, ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER))\n\t\t\t}, {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), CONTEXT_HAS_GALLERY),\n\t\t\t\tgroup: '1_updates',\n\t\t\t\torder: 1\n\t\t\t}],\n\t\t\trun: async () => {\n\t\t\t\tawait this.extensionsWorkbenchService.checkForUpdates();\n\t\t\t\tconst outdated = this.extensionsWorkbenchService.outdated;\n\t\t\t\tif (outdated.length) {\n\t\t\t\t\treturn this.extensionsWorkbenchService.openSearch('@outdated ');\n\t\t\t\t} else {\n\t\t\t\t\treturn this.dialogService.info(localize('noUpdatesAvailable', \"All extensions are up to date.\"));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst enableAutoUpdateWhenCondition = ContextKeyExpr.equals(`config.${AutoUpdateConfigurationKey}`, false);\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.enableAutoUpdate',\n\t\t\ttitle: localize2('enableAutoUpdate', 'Enable Auto Update for All Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tprecondition: enableAutoUpdateWhenCondition,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\torder: 5,\n\t\t\t\tgroup: '1_updates',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), enableAutoUpdateWhenCondition)\n\t\t\t}, {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t}],\n\t\t\trun: (accessor: ServicesAccessor) => accessor.get(IExtensionsWorkbenchService).updateAutoUpdateForAllExtensions(true)\n\t\t});\n\n\t\tconst disableAutoUpdateWhenCondition = ContextKeyExpr.notEquals(`config.${AutoUpdateConfigurationKey}`, false);\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.disableAutoUpdate',\n\t\t\ttitle: localize2('disableAutoUpdate', 'Disable Auto Update for All Extensions'),\n\t\t\tprecondition: disableAutoUpdateWhenCondition,\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\torder: 5,\n\t\t\t\tgroup: '1_updates',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), disableAutoUpdateWhenCondition)\n\t\t\t}, {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t}],\n\t\t\trun: (accessor: ServicesAccessor) => accessor.get(IExtensionsWorkbenchService).updateAutoUpdateForAllExtensions(false)\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.updateAllExtensions',\n\t\t\ttitle: localize2('updateAll', 'Update All Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tprecondition: HasOutdatedExtensionsContext,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_HAS_GALLERY, ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER))\n\t\t\t\t}, {\n\t\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), ContextKeyExpr.or(ContextKeyExpr.has(`config.${AutoUpdateConfigurationKey}`).negate(), ContextKeyExpr.equals(`config.${AutoUpdateConfigurationKey}`, 'onlyEnabledExtensions'))),\n\t\t\t\t\tgroup: '1_updates',\n\t\t\t\t\torder: 2\n\t\t\t\t}, {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\twhen: ContextKeyExpr.equals('view', OUTDATED_EXTENSIONS_VIEW_ID),\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 1\n\t\t\t\t}\n\t\t\t],\n\t\t\ticon: installWorkspaceRecommendedIcon,\n\t\t\trun: async () => {\n\t\t\t\tconst outdated = this.extensionsWorkbenchService.outdated;\n\t\t\t\tconst results = await this.extensionsWorkbenchService.updateAll();\n\t\t\t\tresults.forEach((result) => {\n\t\t\t\t\tif (result.error) {\n\t\t\t\t\t\tconst extension: IExtension | undefined = outdated.find((extension) => areSameExtensions(extension.identifier, result.identifier));\n\t\t\t\t\t\tif (extension) {\n\t\t\t\t\t\t\trunAction(this.instantiationService.createInstance(PromptExtensionInstallFailureAction, extension, extension.latestVersion, InstallOperation.Update, result.error));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.enableAll',\n\t\t\ttitle: localize2('enableAll', 'Enable All Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER)\n\t\t\t}, {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\twhen: ContextKeyExpr.equals('viewContainer', VIEWLET_ID),\n\t\t\t\tgroup: '2_enablement',\n\t\t\t\torder: 1\n\t\t\t}],\n\t\t\trun: async () => {\n\t\t\t\tconst extensionsToEnable = this.extensionsWorkbenchService.local.filter(e => !!e.local && this.extensionEnablementService.canChangeEnablement(e.local) && !this.extensionEnablementService.isEnabled(e.local));\n\t\t\t\tif (extensionsToEnable.length) {\n\t\t\t\t\tawait this.extensionsWorkbenchService.setEnablement(extensionsToEnable, EnablementState.EnabledGlobally);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.enableAllWorkspace',\n\t\t\ttitle: localize2('enableAllWorkspace', 'Enable All Extensions for this Workspace'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(WorkbenchStateContext.notEqualsTo('empty'), ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER))\n\t\t\t},\n\t\t\trun: async () => {\n\t\t\t\tconst extensionsToEnable = this.extensionsWorkbenchService.local.filter(e => !!e.local && this.extensionEnablementService.canChangeEnablement(e.local) && !this.extensionEnablementService.isEnabled(e.local));\n\t\t\t\tif (extensionsToEnable.length) {\n\t\t\t\t\tawait this.extensionsWorkbenchService.setEnablement(extensionsToEnable, EnablementState.EnabledWorkspace);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.disableAll',\n\t\t\ttitle: localize2('disableAll', 'Disable All Installed Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER)\n\t\t\t}, {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\twhen: ContextKeyExpr.equals('viewContainer', VIEWLET_ID),\n\t\t\t\tgroup: '2_enablement',\n\t\t\t\torder: 2\n\t\t\t}],\n\t\t\trun: async () => {\n\t\t\t\tconst extensionsToDisable = this.extensionsWorkbenchService.local.filter(e => !e.isBuiltin && !!e.local && this.extensionEnablementService.isEnabled(e.local) && this.extensionEnablementService.canChangeEnablement(e.local));\n\t\t\t\tif (extensionsToDisable.length) {\n\t\t\t\t\tawait this.extensionsWorkbenchService.setEnablement(extensionsToDisable, EnablementState.DisabledGlobally);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.disableAllWorkspace',\n\t\t\ttitle: localize2('disableAllWorkspace', 'Disable All Installed Extensions for this Workspace'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(WorkbenchStateContext.notEqualsTo('empty'), ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER))\n\t\t\t},\n\t\t\trun: async () => {\n\t\t\t\tconst extensionsToDisable = this.extensionsWorkbenchService.local.filter(e => !e.isBuiltin && !!e.local && this.extensionEnablementService.isEnabled(e.local) && this.extensionEnablementService.canChangeEnablement(e.local));\n\t\t\t\tif (extensionsToDisable.length) {\n\t\t\t\t\tawait this.extensionsWorkbenchService.setEnablement(extensionsToDisable, EnablementState.DisabledWorkspace);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: SELECT_INSTALL_VSIX_EXTENSION_COMMAND_ID,\n\t\t\ttitle: localize2('InstallFromVSIX', 'Install from VSIX...'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER)\n\t\t\t}, {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER)),\n\t\t\t\tgroup: '3_install',\n\t\t\t\torder: 1\n\t\t\t}],\n\t\t\trun: async (accessor: ServicesAccessor) => {\n\t\t\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\tconst vsixPaths = await fileDialogService.showOpenDialog({\n\t\t\t\t\ttitle: localize('installFromVSIX', \"Install from VSIX\"),\n\t\t\t\t\tfilters: [{ name: 'VSIX Extensions', extensions: ['vsix'] }],\n\t\t\t\t\tcanSelectFiles: true,\n\t\t\t\t\tcanSelectMany: true,\n\t\t\t\t\topenLabel: mnemonicButtonLabel(localize({ key: 'installButton', comment: ['&& denotes a mnemonic'] }, \"&&Install\"))\n\t\t\t\t});\n\t\t\t\tif (vsixPaths) {\n\t\t\t\t\tawait commandService.executeCommand(INSTALL_EXTENSION_FROM_VSIX_COMMAND_ID, vsixPaths);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: INSTALL_EXTENSION_FROM_VSIX_COMMAND_ID,\n\t\t\ttitle: localize('installVSIX', \"Install Extension VSIX\"),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ExplorerContext,\n\t\t\t\tgroup: 'extensions',\n\t\t\t\twhen: ContextKeyExpr.and(ResourceContextKey.Extension.isEqualTo('.vsix'), ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER)),\n\t\t\t}],\n\t\t\trun: async (accessor: ServicesAccessor, resources: URI[] | URI) => {\n\t\t\t\tconst extensionsWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst hostService = accessor.get(IHostService);\n\t\t\t\tconst notificationService = accessor.get(INotificationService);\n\n\t\t\t\tconst vsixs = Array.isArray(resources) ? resources : [resources];\n\t\t\t\tconst result = await Promise.allSettled(vsixs.map(async (vsix) => await extensionsWorkbenchService.install(vsix, { installGivenVersion: true })));\n\t\t\t\tlet error: Error | undefined, requireReload = false, requireRestart = false;\n\t\t\t\tfor (const r of result) {\n\t\t\t\t\tif (r.status === 'rejected') {\n\t\t\t\t\t\terror = new Error(r.reason);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\trequireReload = requireReload || r.value.runtimeState?.action === ExtensionRuntimeActionType.ReloadWindow;\n\t\t\t\t\trequireRestart = requireRestart || r.value.runtimeState?.action === ExtensionRuntimeActionType.RestartExtensions;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tif (requireReload) {\n\t\t\t\t\tnotificationService.prompt(\n\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\tlocalize('InstallVSIXAction.successReload', \"Completed installing extension from VSIX. Please reload Visual Studio Code to enable it.\"),\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\tlabel: localize('InstallVSIXAction.reloadNow', \"Reload Now\"),\n\t\t\t\t\t\t\trun: () => hostService.reload()\n\t\t\t\t\t\t}]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if (requireRestart) {\n\t\t\t\t\tnotificationService.prompt(\n\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\tlocalize('InstallVSIXAction.successRestart', \"Completed installing extension from VSIX. Please restart extensions to enable it.\"),\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\tlabel: localize('InstallVSIXAction.restartExtensions', \"Restart Extensions\"),\n\t\t\t\t\t\t\trun: () => extensionsWorkbenchService.updateRunningExtensions()\n\t\t\t\t\t\t}]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnotificationService.prompt(\n\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\tlocalize('InstallVSIXAction.successNoReload', \"Completed installing extension.\"),\n\t\t\t\t\t\t[]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.installExtensionFromLocation',\n\t\t\ttitle: localize2('installExtensionFromLocation', 'Install Extension from Location...'),\n\t\t\tcategory: Categories.Developer,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_WEB_SERVER, CONTEXT_HAS_LOCAL_SERVER)\n\t\t\t}],\n\t\t\trun: async (accessor: ServicesAccessor) => {\n\t\t\t\tconst extensionManagementService = accessor.get(IWorkbenchExtensionManagementService);\n\t\t\t\tif (isWeb) {\n\t\t\t\t\treturn new Promise<void>((c, e) => {\n\t\t\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\t\t\tconst quickPick = disposables.add(quickInputService.createQuickPick());\n\t\t\t\t\t\tquickPick.title = localize('installFromLocation', \"Install Extension from Location\");\n\t\t\t\t\t\tquickPick.customButton = true;\n\t\t\t\t\t\tquickPick.customLabel = localize('install button', \"Install\");\n\t\t\t\t\t\tquickPick.placeholder = localize('installFromLocationPlaceHolder', \"Location of the web extension\");\n\t\t\t\t\t\tquickPick.ignoreFocusOut = true;\n\t\t\t\t\t\tdisposables.add(Event.any(quickPick.onDidAccept, quickPick.onDidCustom)(async () => {\n\t\t\t\t\t\t\tquickPick.hide();\n\t\t\t\t\t\t\tif (quickPick.value) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait extensionManagementService.installFromLocation(URI.parse(quickPick.value));\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tc();\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tdisposables.add(quickPick.onDidHide(() => disposables.dispose()));\n\t\t\t\t\t\tquickPick.show();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\t\t\t\t\tconst extensionLocation = await fileDialogService.showOpenDialog({\n\t\t\t\t\t\tcanSelectFolders: true,\n\t\t\t\t\t\tcanSelectFiles: false,\n\t\t\t\t\t\tcanSelectMany: false,\n\t\t\t\t\t\ttitle: localize('installFromLocation', \"Install Extension from Location\"),\n\t\t\t\t\t});\n\t\t\t\t\tif (extensionLocation?.[0]) {\n\t\t\t\t\t\tawait extensionManagementService.installFromLocation(extensionLocation[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst extensionsFilterSubMenu = new MenuId('extensionsFilterSubMenu');\n\t\tMenuRegistry.appendMenuItem(extensionsSearchActionsMenu, {\n\t\t\tsubmenu: extensionsFilterSubMenu,\n\t\t\ttitle: localize('filterExtensions', \"Filter Extensions...\"),\n\t\t\tgroup: 'navigation',\n\t\t\torder: 2,\n\t\t\ticon: filterIcon,\n\t\t});\n\n\t\tconst showFeaturedExtensionsId = 'extensions.filter.featured';\n\t\tthis.registerExtensionAction({\n\t\t\tid: showFeaturedExtensionsId,\n\t\t\ttitle: localize2('showFeaturedExtensions', 'Show Featured Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY\n\t\t\t}, {\n\t\t\t\tid: extensionsFilterSubMenu,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY,\n\t\t\t\tgroup: '1_predefined',\n\t\t\t\torder: 1,\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[extensionsFilterSubMenu.id]: localize('featured filter', \"Featured\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@featured ')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.showPopularExtensions',\n\t\t\ttitle: localize2('showPopularExtensions', 'Show Popular Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY\n\t\t\t}, {\n\t\t\t\tid: extensionsFilterSubMenu,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY,\n\t\t\t\tgroup: '1_predefined',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[extensionsFilterSubMenu.id]: localize('most popular filter', \"Most Popular\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@popular ')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.showRecommendedExtensions',\n\t\t\ttitle: localize2('showRecommendedExtensions', 'Show Recommended Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY\n\t\t\t}, {\n\t\t\t\tid: extensionsFilterSubMenu,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY,\n\t\t\t\tgroup: '1_predefined',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[extensionsFilterSubMenu.id]: localize('most popular recommended', \"Recommended\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@recommended ')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.recentlyPublishedExtensions',\n\t\t\ttitle: localize2('recentlyPublishedExtensions', 'Show Recently Published Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY\n\t\t\t}, {\n\t\t\t\tid: extensionsFilterSubMenu,\n\t\t\t\twhen: CONTEXT_HAS_GALLERY,\n\t\t\t\tgroup: '1_predefined',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[extensionsFilterSubMenu.id]: localize('recently published filter', \"Recently Published\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@recentlyPublished ')\n\t\t});\n\n\t\tconst extensionsCategoryFilterSubMenu = new MenuId('extensionsCategoryFilterSubMenu');\n\t\tMenuRegistry.appendMenuItem(extensionsFilterSubMenu, {\n\t\t\tsubmenu: extensionsCategoryFilterSubMenu,\n\t\t\ttitle: localize('filter by category', \"Category\"),\n\t\t\twhen: CONTEXT_HAS_GALLERY,\n\t\t\tgroup: '2_categories',\n\t\t\torder: 1,\n\t\t});\n\n\t\tEXTENSION_CATEGORIES.forEach((category, index) => {\n\t\t\tthis.registerExtensionAction({\n\t\t\t\tid: `extensions.actions.searchByCategory.${category}`,\n\t\t\t\ttitle: category,\n\t\t\t\tmenu: [{\n\t\t\t\t\tid: extensionsCategoryFilterSubMenu,\n\t\t\t\t\twhen: CONTEXT_HAS_GALLERY,\n\t\t\t\t\torder: index,\n\t\t\t\t}],\n\t\t\t\trun: () => this.extensionsWorkbenchService.openSearch(`@category:\"${category.toLowerCase()}\"`)\n\t\t\t});\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.listBuiltInExtensions',\n\t\t\ttitle: localize2('showBuiltInExtensions', 'Show Built-in Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER)\n\t\t\t}, {\n\t\t\t\tid: extensionsFilterSubMenu,\n\t\t\t\tgroup: '3_installed',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[extensionsFilterSubMenu.id]: localize('builtin filter', \"Built-in\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@builtin ')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.extensionUpdates',\n\t\t\ttitle: localize2('extensionUpdates', 'Show Extension Updates'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tprecondition: CONTEXT_HAS_GALLERY,\n\t\t\tf1: true,\n\t\t\tmenu: [{\n\t\t\t\tid: extensionsFilterSubMenu,\n\t\t\t\tgroup: '3_installed',\n\t\t\t\twhen: CONTEXT_HAS_GALLERY,\n\t\t\t\torder: 1,\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[extensionsFilterSubMenu.id]: localize('extension updates filter', \"Updates\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@updates')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID,\n\t\t\ttitle: localize2('showWorkspaceUnsupportedExtensions', 'Show Extensions Unsupported By Workspace'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER),\n\t\t\t}, {\n\t\t\t\tid: extensionsFilterSubMenu,\n\t\t\t\tgroup: '3_installed',\n\t\t\t\torder: 5,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER),\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[extensionsFilterSubMenu.id]: localize('workspace unsupported filter', \"Workspace Unsupported\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@workspaceUnsupported')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.showEnabledExtensions',\n\t\t\ttitle: localize2('showEnabledExtensions', 'Show Enabled Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER)\n\t\t\t}, {\n\t\t\t\tid: extensionsFilterSubMenu,\n\t\t\t\tgroup: '3_installed',\n\t\t\t\torder: 3,\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[extensionsFilterSubMenu.id]: localize('enabled filter', \"Enabled\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@enabled ')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.showDisabledExtensions',\n\t\t\ttitle: localize2('showDisabledExtensions', 'Show Disabled Extensions'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER)\n\t\t\t}, {\n\t\t\t\tid: extensionsFilterSubMenu,\n\t\t\t\tgroup: '3_installed',\n\t\t\t\torder: 4,\n\t\t\t}],\n\t\t\tmenuTitles: {\n\t\t\t\t[extensionsFilterSubMenu.id]: localize('disabled filter', \"Disabled\")\n\t\t\t},\n\t\t\trun: () => this.extensionsWorkbenchService.openSearch('@disabled ')\n\t\t});\n\n\t\tconst extensionsSortSubMenu = new MenuId('extensionsSortSubMenu');\n\t\tMenuRegistry.appendMenuItem(extensionsFilterSubMenu, {\n\t\t\tsubmenu: extensionsSortSubMenu,\n\t\t\ttitle: localize('sorty by', \"Sort By\"),\n\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.or(CONTEXT_HAS_GALLERY, DefaultViewsContext)),\n\t\t\tgroup: '4_sort',\n\t\t\torder: 1,\n\t\t});\n\n\t\t[\n\t\t\t{ id: 'installs', title: localize('sort by installs', \"Install Count\"), precondition: BuiltInExtensionsContext.negate() },\n\t\t\t{ id: 'rating', title: localize('sort by rating', \"Rating\"), precondition: BuiltInExtensionsContext.negate() },\n\t\t\t{ id: 'name', title: localize('sort by name', \"Name\"), precondition: BuiltInExtensionsContext.negate() },\n\t\t\t{ id: 'publishedDate', title: localize('sort by published date', \"Published Date\"), precondition: BuiltInExtensionsContext.negate() },\n\t\t\t{ id: 'updateDate', title: localize('sort by update date', \"Updated Date\"), precondition: ContextKeyExpr.and(SearchMarketplaceExtensionsContext.negate(), RecommendedExtensionsContext.negate(), BuiltInExtensionsContext.negate()) },\n\t\t].map(({ id, title, precondition }, index) => {\n\t\t\tthis.registerExtensionAction({\n\t\t\t\tid: `extensions.sort.${id}`,\n\t\t\t\ttitle,\n\t\t\t\tprecondition: precondition,\n\t\t\t\tmenu: [{\n\t\t\t\t\tid: extensionsSortSubMenu,\n\t\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_HAS_GALLERY, DefaultViewsContext),\n\t\t\t\t\torder: index,\n\t\t\t\t}],\n\t\t\t\ttoggled: ExtensionsSortByContext.isEqualTo(id),\n\t\t\t\trun: async () => {\n\t\t\t\t\tconst extensionsViewPaneContainer = ((await this.viewsService.openViewContainer(VIEWLET_ID, true))?.getViewPaneContainer()) as IExtensionsViewPaneContainer | undefined;\n\t\t\t\t\tconst currentQuery = Query.parse(extensionsViewPaneContainer?.searchValue ?? '');\n\t\t\t\t\textensionsViewPaneContainer?.search(new Query(currentQuery.value, id).toString());\n\t\t\t\t\textensionsViewPaneContainer?.focus();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.clearExtensionsSearchResults',\n\t\t\ttitle: localize2('clearExtensionsSearchResults', 'Clear Extensions Search Results'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\ticon: clearSearchResultsIcon,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchHasTextContext,\n\t\t\tmenu: {\n\t\t\t\tid: extensionsSearchActionsMenu,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1,\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor) => {\n\t\t\t\tconst viewPaneContainer = accessor.get(IViewsService).getActiveViewPaneContainerWithId(VIEWLET_ID);\n\t\t\t\tif (viewPaneContainer) {\n\t\t\t\t\tconst extensionsViewPaneContainer = viewPaneContainer as IExtensionsViewPaneContainer;\n\t\t\t\t\textensionsViewPaneContainer.search('');\n\t\t\t\t\textensionsViewPaneContainer.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.refreshExtension',\n\t\t\ttitle: localize2('refreshExtension', 'Refresh'),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\ticon: refreshIcon,\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\twhen: ContextKeyExpr.equals('viewContainer', VIEWLET_ID),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor) => {\n\t\t\t\tconst viewPaneContainer = accessor.get(IViewsService).getActiveViewPaneContainerWithId(VIEWLET_ID);\n\t\t\t\tif (viewPaneContainer) {\n\t\t\t\t\tawait (viewPaneContainer as IExtensionsViewPaneContainer).refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.installWorkspaceRecommendedExtensions',\n\t\t\ttitle: localize('installWorkspaceRecommendedExtensions', \"Install Workspace Recommended Extensions\"),\n\t\t\ticon: installWorkspaceRecommendedIcon,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyExpr.equals('view', WORKSPACE_RECOMMENDATIONS_VIEW_ID),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor) => {\n\t\t\t\tconst view = accessor.get(IViewsService).getActiveViewWithId(WORKSPACE_RECOMMENDATIONS_VIEW_ID) as IWorkspaceRecommendedExtensionsView;\n\t\t\t\treturn view.installWorkspaceRecommendations();\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: ConfigureWorkspaceFolderRecommendedExtensionsAction.ID,\n\t\t\ttitle: ConfigureWorkspaceFolderRecommendedExtensionsAction.LABEL,\n\t\t\ticon: configureRecommendedIcon,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: WorkbenchStateContext.notEqualsTo('empty'),\n\t\t\t}, {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyExpr.equals('view', WORKSPACE_RECOMMENDATIONS_VIEW_ID),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2\n\t\t\t}],\n\t\t\trun: () => runAction(this.instantiationService.createInstance(ConfigureWorkspaceFolderRecommendedExtensionsAction, ConfigureWorkspaceFolderRecommendedExtensionsAction.ID, ConfigureWorkspaceFolderRecommendedExtensionsAction.LABEL))\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: InstallSpecificVersionOfExtensionAction.ID,\n\t\t\ttitle: { value: InstallSpecificVersionOfExtensionAction.LABEL, original: 'Install Specific Version of Extension...' },\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_HAS_GALLERY, ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER, CONTEXT_HAS_WEB_SERVER))\n\t\t\t},\n\t\t\trun: () => runAction(this.instantiationService.createInstance(InstallSpecificVersionOfExtensionAction, InstallSpecificVersionOfExtensionAction.ID, InstallSpecificVersionOfExtensionAction.LABEL))\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: ReinstallAction.ID,\n\t\t\ttitle: { value: ReinstallAction.LABEL, original: 'Reinstall Extension...' },\n\t\t\tcategory: Categories.Developer,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_HAS_GALLERY, ContextKeyExpr.or(CONTEXT_HAS_LOCAL_SERVER, CONTEXT_HAS_REMOTE_SERVER))\n\t\t\t},\n\t\t\trun: () => runAction(this.instantiationService.createInstance(ReinstallAction, ReinstallAction.ID, ReinstallAction.LABEL))\n\t\t});\n\t}\n\n\t// Extension Context Menu\n\tprivate registerContextMenuActions(): void {\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: SetColorThemeAction.ID,\n\t\t\ttitle: SetColorThemeAction.TITLE,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: THEME_ACTIONS_GROUP,\n\t\t\t\torder: 0,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.not('inExtensionEditor'), ContextKeyExpr.equals('extensionStatus', 'installed'), ContextKeyExpr.has('extensionHasColorThemes'))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst extensionWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extension = extensionWorkbenchService.local.find(e => areSameExtensions(e.identifier, { id: extensionId }));\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst action = instantiationService.createInstance(SetColorThemeAction);\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: SetFileIconThemeAction.ID,\n\t\t\ttitle: SetFileIconThemeAction.TITLE,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: THEME_ACTIONS_GROUP,\n\t\t\t\torder: 0,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.not('inExtensionEditor'), ContextKeyExpr.equals('extensionStatus', 'installed'), ContextKeyExpr.has('extensionHasFileIconThemes'))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst extensionWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extension = extensionWorkbenchService.local.find(e => areSameExtensions(e.identifier, { id: extensionId }));\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst action = instantiationService.createInstance(SetFileIconThemeAction);\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: SetProductIconThemeAction.ID,\n\t\t\ttitle: SetProductIconThemeAction.TITLE,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: THEME_ACTIONS_GROUP,\n\t\t\t\torder: 0,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.not('inExtensionEditor'), ContextKeyExpr.equals('extensionStatus', 'installed'), ContextKeyExpr.has('extensionHasProductIconThemes'))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst extensionWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extension = extensionWorkbenchService.local.find(e => areSameExtensions(e.identifier, { id: extensionId }));\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst action = instantiationService.createInstance(SetProductIconThemeAction);\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.showPreReleaseVersion',\n\t\t\ttitle: localize2('show pre-release version', 'Show Pre-Release Version'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: INSTALL_ACTIONS_GROUP,\n\t\t\t\torder: 0,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.has('inExtensionEditor'), ContextKeyExpr.has('galleryExtensionHasPreReleaseVersion'), ContextKeyExpr.not('showPreReleaseVersion'), ContextKeyExpr.not('isBuiltinExtension'))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst extensionWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst extension = (await extensionWorkbenchService.getExtensions([{ id: extensionId }], CancellationToken.None))[0];\n\t\t\t\textensionWorkbenchService.open(extension, { showPreReleaseVersion: true });\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.showReleasedVersion',\n\t\t\ttitle: localize2('show released version', 'Show Release Version'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: INSTALL_ACTIONS_GROUP,\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.has('inExtensionEditor'), ContextKeyExpr.has('galleryExtensionHasPreReleaseVersion'), ContextKeyExpr.has('extensionHasReleaseVersion'), ContextKeyExpr.has('showPreReleaseVersion'), ContextKeyExpr.not('isBuiltinExtension'))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst extensionWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst extension = (await extensionWorkbenchService.getExtensions([{ id: extensionId }], CancellationToken.None))[0];\n\t\t\t\textensionWorkbenchService.open(extension, { showPreReleaseVersion: false });\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: ToggleAutoUpdateForExtensionAction.ID,\n\t\t\ttitle: ToggleAutoUpdateForExtensionAction.LABEL,\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(ContextKeyExpr.notEquals(`config.${AutoUpdateConfigurationKey}`, 'onlyEnabledExtensions'), ContextKeyExpr.equals('isExtensionEnabled', true)), ContextKeyExpr.not('extensionDisallowInstall')),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: UPDATE_ACTIONS_GROUP,\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.not('inExtensionEditor'),\n\t\t\t\t\tContextKeyExpr.equals('extensionStatus', 'installed'),\n\t\t\t\t\tContextKeyExpr.not('isBuiltinExtension'),\n\t\t\t\t)\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => {\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extensionWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst extension = extensionWorkbenchService.local.find(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst action = instantiationService.createInstance(ToggleAutoUpdateForExtensionAction);\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: ToggleAutoUpdatesForPublisherAction.ID,\n\t\t\ttitle: { value: ToggleAutoUpdatesForPublisherAction.LABEL, original: 'Auto Update (Publisher)' },\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tprecondition: ContextKeyExpr.equals(`config.${AutoUpdateConfigurationKey}`, false),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: UPDATE_ACTIONS_GROUP,\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('extensionStatus', 'installed'), ContextKeyExpr.not('isBuiltinExtension'))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => {\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extensionWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst extension = extensionWorkbenchService.local.find(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst action = instantiationService.createInstance(ToggleAutoUpdatesForPublisherAction);\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.switchToPreRlease',\n\t\t\ttitle: localize('enablePreRleaseLabel', \"Switch to Pre-Release Version\"),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: INSTALL_ACTIONS_GROUP,\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_HAS_GALLERY, ContextKeyExpr.has('galleryExtensionHasPreReleaseVersion'), ContextKeyExpr.not('installedExtensionIsOptedToPreRelease'), ContextKeyExpr.not('inExtensionEditor'), ContextKeyExpr.equals('extensionStatus', 'installed'), ContextKeyExpr.not('isBuiltinExtension'))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => {\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extensionWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst extension = extensionWorkbenchService.local.find(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst action = instantiationService.createInstance(TogglePreReleaseExtensionAction);\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.switchToRelease',\n\t\t\ttitle: localize('disablePreRleaseLabel', \"Switch to Release Version\"),\n\t\t\tcategory: ExtensionsLocalizedLabel,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: INSTALL_ACTIONS_GROUP,\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_HAS_GALLERY, ContextKeyExpr.has('galleryExtensionHasPreReleaseVersion'), ContextKeyExpr.has('installedExtensionIsOptedToPreRelease'), ContextKeyExpr.not('inExtensionEditor'), ContextKeyExpr.equals('extensionStatus', 'installed'), ContextKeyExpr.not('isBuiltinExtension'))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => {\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extensionWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst extension = extensionWorkbenchService.local.find(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst action = instantiationService.createInstance(TogglePreReleaseExtensionAction);\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: ClearLanguageAction.ID,\n\t\t\ttitle: ClearLanguageAction.TITLE,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: INSTALL_ACTIONS_GROUP,\n\t\t\t\torder: 0,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.not('inExtensionEditor'), ContextKeyExpr.has('canSetLanguage'), ContextKeyExpr.has('isActiveLanguagePackExtension'))\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extensionsWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\t\t\tconst extension = (await extensionsWorkbenchService.getExtensions([{ id: extensionId }], CancellationToken.None))[0];\n\t\t\t\tconst action = instantiationService.createInstance(ClearLanguageAction);\n\t\t\t\taction.extension = extension;\n\t\t\t\treturn action.run();\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.installAndDonotSync',\n\t\t\ttitle: localize('install installAndDonotSync', \"Install (Do not Sync)\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '0_install',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('extensionStatus', 'uninstalled'), ContextKeyExpr.has('isGalleryExtension'), ContextKeyExpr.not('extensionDisallowInstall'), CONTEXT_SYNC_ENABLEMENT),\n\t\t\t\torder: 1\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extension = this.extensionsWorkbenchService.local.filter(e => areSameExtensions(e.identifier, { id: extensionId }))[0]\n\t\t\t\t\t|| (await this.extensionsWorkbenchService.getExtensions([{ id: extensionId }], CancellationToken.None))[0];\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst action = instantiationService.createInstance(InstallAction, {\n\t\t\t\t\t\tisMachineScoped: true,\n\t\t\t\t\t});\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.installPrereleaseAndDonotSync',\n\t\t\ttitle: localize('installPrereleaseAndDonotSync', \"Install Pre-Release (Do not Sync)\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '0_install',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('extensionStatus', 'uninstalled'), ContextKeyExpr.has('isGalleryExtension'), ContextKeyExpr.has('extensionHasPreReleaseVersion'), ContextKeyExpr.not('extensionDisallowInstall'), CONTEXT_SYNC_ENABLEMENT),\n\t\t\t\torder: 2\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extension = this.extensionsWorkbenchService.local.filter(e => areSameExtensions(e.identifier, { id: extensionId }))[0]\n\t\t\t\t\t|| (await this.extensionsWorkbenchService.getExtensions([{ id: extensionId }], CancellationToken.None))[0];\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst action = instantiationService.createInstance(InstallAction, {\n\t\t\t\t\t\tisMachineScoped: true,\n\t\t\t\t\t\tpreRelease: true\n\t\t\t\t\t});\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: InstallAnotherVersionAction.ID,\n\t\t\ttitle: InstallAnotherVersionAction.LABEL,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '0_install',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('extensionStatus', 'uninstalled'), ContextKeyExpr.has('isGalleryExtension'), ContextKeyExpr.not('extensionDisallowInstall')),\n\t\t\t\torder: 3\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst extension = this.extensionsWorkbenchService.local.filter(e => areSameExtensions(e.identifier, { id: extensionId }))[0]\n\t\t\t\t\t|| (await this.extensionsWorkbenchService.getExtensions([{ id: extensionId }], CancellationToken.None))[0];\n\t\t\t\tif (extension) {\n\t\t\t\t\treturn instantiationService.createInstance(InstallAnotherVersionAction, extension, false).run();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.copyExtension',\n\t\t\ttitle: localize2('workbench.extensions.action.copyExtension', 'Copy'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '1_copy'\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, extensionId: string) => {\n\t\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\t\t\tconst extension = this.extensionsWorkbenchService.local.filter(e => areSameExtensions(e.identifier, { id: extensionId }))[0]\n\t\t\t\t\t|| (await this.extensionsWorkbenchService.getExtensions([{ id: extensionId }], CancellationToken.None))[0];\n\t\t\t\tif (extension) {\n\t\t\t\t\tconst name = localize('extensionInfoName', 'Name: {0}', extension.displayName);\n\t\t\t\t\tconst id = localize('extensionInfoId', 'Id: {0}', extensionId);\n\t\t\t\t\tconst description = localize('extensionInfoDescription', 'Description: {0}', extension.description);\n\t\t\t\t\tconst verision = localize('extensionInfoVersion', 'Version: {0}', extension.version);\n\t\t\t\t\tconst publisher = localize('extensionInfoPublisher', 'Publisher: {0}', extension.publisherDisplayName);\n\t\t\t\t\tconst link = extension.url ? localize('extensionInfoVSMarketplaceLink', 'VS Marketplace Link: {0}', `${extension.url}`) : null;\n\t\t\t\t\tconst clipboardStr = `${name}\\n${id}\\n${description}\\n${verision}\\n${publisher}${link ? '\\n' + link : ''}`;\n\t\t\t\t\tawait clipboardService.writeText(clipboardStr);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.copyExtensionId',\n\t\t\ttitle: localize2('workbench.extensions.action.copyExtensionId', 'Copy Extension ID'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '1_copy'\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => accessor.get(IClipboardService).writeText(id)\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.configure',\n\t\t\ttitle: localize2('workbench.extensions.action.configure', 'Extension Settings'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '2_configure',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('extensionStatus', 'installed'), ContextKeyExpr.has('extensionHasConfiguration')),\n\t\t\t\torder: 1\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => accessor.get(IPreferencesService).openSettings({ jsonEditor: false, query: `@ext:${id}` })\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.configureKeybindings',\n\t\t\ttitle: localize2('workbench.extensions.action.configureKeybindings', 'Extension Keyboard Shortcuts'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '2_configure',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('extensionStatus', 'installed'), ContextKeyExpr.has('extensionHasKeybindings')),\n\t\t\t\torder: 2\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => accessor.get(IPreferencesService).openGlobalKeybindingSettings(false, { query: `@ext:${id}` })\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.toggleApplyToAllProfiles',\n\t\t\ttitle: localize2('workbench.extensions.action.toggleApplyToAllProfiles', \"Apply Extension to all Profiles\"),\n\t\t\ttoggled: ContextKeyExpr.has('isApplicationScopedExtension'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '2_configure',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('extensionStatus', 'installed'), ContextKeyExpr.has('isDefaultApplicationScopedExtension').negate(), ContextKeyExpr.has('isBuiltinExtension').negate(), ContextKeyExpr.equals('isWorkspaceScopedExtension', false)),\n\t\t\t\torder: 3\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, _: string, extensionArg: IExtensionArg) => {\n\t\t\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\t\t\t\tconst extension = extensionArg.location ? this.extensionsWorkbenchService.installed.find(e => uriIdentityService.extUri.isEqual(e.local?.location, extensionArg.location)) : undefined;\n\t\t\t\tif (extension) {\n\t\t\t\t\treturn this.extensionsWorkbenchService.toggleApplyExtensionToAllProfiles(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: TOGGLE_IGNORE_EXTENSION_ACTION_ID,\n\t\t\ttitle: localize2('workbench.extensions.action.toggleIgnoreExtension', \"Sync This Extension\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '2_configure',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('extensionStatus', 'installed'), CONTEXT_SYNC_ENABLEMENT, ContextKeyExpr.equals('isWorkspaceScopedExtension', false)),\n\t\t\t\torder: 4\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => {\n\t\t\t\tconst extension = this.extensionsWorkbenchService.local.find(e => areSameExtensions({ id }, e.identifier));\n\t\t\t\tif (extension) {\n\t\t\t\t\treturn this.extensionsWorkbenchService.toggleExtensionIgnoredToSync(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.ignoreRecommendation',\n\t\t\ttitle: localize2('workbench.extensions.action.ignoreRecommendation', \"Ignore Recommendation\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '3_recommendations',\n\t\t\t\twhen: ContextKeyExpr.has('isExtensionRecommended'),\n\t\t\t\torder: 1\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => accessor.get(IExtensionIgnoredRecommendationsService).toggleGlobalIgnoredRecommendation(id, true)\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.undoIgnoredRecommendation',\n\t\t\ttitle: localize2('workbench.extensions.action.undoIgnoredRecommendation', \"Undo Ignored Recommendation\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '3_recommendations',\n\t\t\t\twhen: ContextKeyExpr.has('isUserIgnoredRecommendation'),\n\t\t\t\torder: 1\n\t\t\t},\n\t\t\trun: async (accessor: ServicesAccessor, id: string) => accessor.get(IExtensionIgnoredRecommendationsService).toggleGlobalIgnoredRecommendation(id, false)\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.addExtensionToWorkspaceRecommendations',\n\t\t\ttitle: localize2('workbench.extensions.action.addExtensionToWorkspaceRecommendations', \"Add to Workspace Recommendations\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '3_recommendations',\n\t\t\t\twhen: ContextKeyExpr.and(WorkbenchStateContext.notEqualsTo('empty'), ContextKeyExpr.has('isBuiltinExtension').negate(), ContextKeyExpr.has('isExtensionWorkspaceRecommended').negate(), ContextKeyExpr.has('isUserIgnoredRecommendation').negate(), ContextKeyExpr.notEquals('extensionSource', 'resource')),\n\t\t\t\torder: 2\n\t\t\t},\n\t\t\trun: (accessor: ServicesAccessor, id: string) => accessor.get(IWorkspaceExtensionsConfigService).toggleRecommendation(id)\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.removeExtensionFromWorkspaceRecommendations',\n\t\t\ttitle: localize2('workbench.extensions.action.removeExtensionFromWorkspaceRecommendations', \"Remove from Workspace Recommendations\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ExtensionContext,\n\t\t\t\tgroup: '3_recommendations',\n\t\t\t\twhen: ContextKeyExpr.and(WorkbenchStateContext.notEqualsTo('empty'), ContextKeyExpr.has('isBuiltinExtension').negate(), ContextKeyExpr.has('isExtensionWorkspaceRecommended')),\n\t\t\t\torder: 2\n\t\t\t},\n\t\t\trun: (accessor: ServicesAccessor, id: string) => accessor.get(IWorkspaceExtensionsConfigService).toggleRecommendation(id)\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.addToWorkspaceRecommendations',\n\t\t\ttitle: localize2('workbench.extensions.action.addToWorkspaceRecommendations', \"Add Extension to Workspace Recommendations\"),\n\t\t\tcategory: localize('extensions', \"Extensions\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(WorkbenchStateContext.isEqualTo('workspace'), ContextKeyExpr.equals('resourceScheme', Schemas.extension)),\n\t\t\t},\n\t\t\tasync run(accessor: ServicesAccessor): Promise<any> {\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst workspaceExtensionsConfigService = accessor.get(IWorkspaceExtensionsConfigService);\n\t\t\t\tif (!(editorService.activeEditor instanceof ExtensionsInput)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst extensionId = editorService.activeEditor.extension.identifier.id.toLowerCase();\n\t\t\t\tconst recommendations = await workspaceExtensionsConfigService.getRecommendations();\n\t\t\t\tif (recommendations.includes(extensionId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tawait workspaceExtensionsConfigService.toggleRecommendation(extensionId);\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.addToWorkspaceFolderRecommendations',\n\t\t\ttitle: localize2('workbench.extensions.action.addToWorkspaceFolderRecommendations', \"Add Extension to Workspace Folder Recommendations\"),\n\t\t\tcategory: localize('extensions', \"Extensions\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(WorkbenchStateContext.isEqualTo('folder'), ContextKeyExpr.equals('resourceScheme', Schemas.extension)),\n\t\t\t},\n\t\t\trun: () => this.commandService.executeCommand('workbench.extensions.action.addToWorkspaceRecommendations')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.addToWorkspaceIgnoredRecommendations',\n\t\t\ttitle: localize2('workbench.extensions.action.addToWorkspaceIgnoredRecommendations', \"Add Extension to Workspace Ignored Recommendations\"),\n\t\t\tcategory: localize('extensions', \"Extensions\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(WorkbenchStateContext.isEqualTo('workspace'), ContextKeyExpr.equals('resourceScheme', Schemas.extension)),\n\t\t\t},\n\t\t\tasync run(accessor: ServicesAccessor): Promise<any> {\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst workspaceExtensionsConfigService = accessor.get(IWorkspaceExtensionsConfigService);\n\t\t\t\tif (!(editorService.activeEditor instanceof ExtensionsInput)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst extensionId = editorService.activeEditor.extension.identifier.id.toLowerCase();\n\t\t\t\tconst unwantedRecommendations = await workspaceExtensionsConfigService.getUnwantedRecommendations();\n\t\t\t\tif (unwantedRecommendations.includes(extensionId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tawait workspaceExtensionsConfigService.toggleUnwantedRecommendation(extensionId);\n\t\t\t}\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: 'workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations',\n\t\t\ttitle: localize2('workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations', \"Add Extension to Workspace Folder Ignored Recommendations\"),\n\t\t\tcategory: localize('extensions', \"Extensions\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.and(WorkbenchStateContext.isEqualTo('folder'), ContextKeyExpr.equals('resourceScheme', Schemas.extension)),\n\t\t\t},\n\t\t\trun: () => this.commandService.executeCommand('workbench.extensions.action.addToWorkspaceIgnoredRecommendations')\n\t\t});\n\n\t\tthis.registerExtensionAction({\n\t\t\tid: ConfigureWorkspaceRecommendedExtensionsAction.ID,\n\t\t\ttitle: { value: ConfigureWorkspaceRecommendedExtensionsAction.LABEL, original: 'Configure Recommended Extensions (Workspace)' },\n\t\t\tcategory: localize('extensions', \"Extensions\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: WorkbenchStateContext.isEqualTo('workspace'),\n\t\t\t},\n\t\t\trun: () => runAction(this.instantiationService.createInstance(ConfigureWorkspaceRecommendedExtensionsAction, ConfigureWorkspaceRecommendedExtensionsAction.ID, ConfigureWorkspaceRecommendedExtensionsAction.LABEL))\n\t\t});\n\n\t}\n\n\tprivate registerExtensionAction(extensionActionOptions: IExtensionActionOptions): IDisposable {\n\t\tconst menus = extensionActionOptions.menu ? Array.isArray(extensionActionOptions.menu) ? extensionActionOptions.menu : [extensionActionOptions.menu] : [];\n\t\tlet menusWithOutTitles: ({ id: MenuId } & Omit<IMenuItem, 'command'>)[] = [];\n\t\tconst menusWithTitles: { id: MenuId; item: IMenuItem }[] = [];\n\t\tif (extensionActionOptions.menuTitles) {\n\t\t\tfor (let index = 0; index < menus.length; index++) {\n\t\t\t\tconst menu = menus[index];\n\t\t\t\tconst menuTitle = extensionActionOptions.menuTitles[menu.id.id];\n\t\t\t\tif (menuTitle) {\n\t\t\t\t\tmenusWithTitles.push({ id: menu.id, item: { ...menu, command: { id: extensionActionOptions.id, title: menuTitle } } });\n\t\t\t\t} else {\n\t\t\t\t\tmenusWithOutTitles.push(menu);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmenusWithOutTitles = menus;\n\t\t}\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\t...extensionActionOptions,\n\t\t\t\t\tmenu: menusWithOutTitles\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, ...args: any[]): Promise<any> {\n\t\t\t\treturn extensionActionOptions.run(accessor, ...args);\n\t\t\t}\n\t\t}));\n\t\tif (menusWithTitles.length) {\n\t\t\tdisposables.add(MenuRegistry.appendMenuItems(menusWithTitles));\n\t\t}\n\t\treturn disposables;\n\t}\n\n}\n\nclass ExtensionStorageCleaner implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tExtensionStorageService.removeOutdatedExtensionVersions(extensionManagementService, storageService);\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionsContributions, LifecyclePhase.Restored);\nworkbenchRegistry.registerWorkbenchContribution(StatusUpdater, LifecyclePhase.Eventually);\nworkbenchRegistry.registerWorkbenchContribution(MaliciousExtensionChecker, LifecyclePhase.Eventually);\nworkbenchRegistry.registerWorkbenchContribution(KeymapExtensions, LifecyclePhase.Restored);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionsViewletViewsContribution, LifecyclePhase.Restored);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionActivationProgress, LifecyclePhase.Eventually);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionDependencyChecker, LifecyclePhase.Eventually);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionEnablementWorkspaceTrustTransitionParticipant, LifecyclePhase.Restored);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionsCompletionItemsProvider, LifecyclePhase.Restored);\nworkbenchRegistry.registerWorkbenchContribution(UnsupportedExtensionsMigrationContrib, LifecyclePhase.Eventually);\nworkbenchRegistry.registerWorkbenchContribution(DeprecatedExtensionsChecker, LifecyclePhase.Eventually);\nif (isWeb) {\n\tworkbenchRegistry.registerWorkbenchContribution(ExtensionStorageCleaner, LifecyclePhase.Eventually);\n}\n\n\n// Running Extensions\nregisterAction2(ShowRuntimeExtensionsAction);\n\nRegistry.as<IConfigurationMigrationRegistry>(ConfigurationMigrationExtensions.ConfigurationMigration)\n\t.registerConfigurationMigrations([{\n\t\tkey: AutoUpdateConfigurationKey,\n\t\tmigrateFn: (value, accessor) => {\n\t\t\tif (value === 'onlySelectedExtensions') {\n\t\t\t\treturn { value: false };\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}]);\n"],
  "mappings": "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",
  "names": ["extension"]
}
