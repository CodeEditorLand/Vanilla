import { Dimension } from "vs/base/browser/dom";
import { CancellationToken } from "vs/base/common/cancellation";
import "vs/css!./media/extensionEditor";
import { ILanguageService } from "vs/editor/common/languages/language";
import { IContextKeyService } from "vs/platform/contextkey/common/contextkey";
import { IContextMenuService } from "vs/platform/contextview/browser/contextView";
import { IExtensionGalleryService } from "vs/platform/extensionManagement/common/extensionManagement";
import { IHoverService } from "vs/platform/hover/browser/hover";
import { IInstantiationService } from "vs/platform/instantiation/common/instantiation";
import { INotificationService } from "vs/platform/notification/common/notification";
import { IOpenerService } from "vs/platform/opener/common/opener";
import { IStorageService } from "vs/platform/storage/common/storage";
import { ITelemetryService } from "vs/platform/telemetry/common/telemetry";
import { IThemeService } from "vs/platform/theme/common/themeService";
import { IUriIdentityService } from "vs/platform/uriIdentity/common/uriIdentity";
import { IWorkspaceContextService } from "vs/platform/workspace/common/workspace";
import { EditorPane } from "vs/workbench/browser/parts/editor/editorPane";
import { IEditorOpenContext } from "vs/workbench/common/editor";
import { ExtensionEditorTab, IExtensionsWorkbenchService } from "vs/workbench/contrib/extensions/common/extensions";
import { ExtensionsInput, IExtensionEditorOptions } from "vs/workbench/contrib/extensions/common/extensionsInput";
import { IExplorerService } from "vs/workbench/contrib/files/browser/files";
import { IWebview, IWebviewService } from "vs/workbench/contrib/webview/browser/webview";
import { IEditorGroup } from "vs/workbench/services/editor/common/editorGroupsService";
import { IExtensionRecommendationsService } from "vs/workbench/services/extensionRecommendations/common/extensionRecommendations";
import { IExtensionService } from "vs/workbench/services/extensions/common/extensions";
import { IPaneCompositePartService } from "vs/workbench/services/panecomposite/browser/panecomposite";
import { IViewsService } from "vs/workbench/services/views/common/viewsService";
export declare class ExtensionEditor extends EditorPane {
    private readonly instantiationService;
    private readonly paneCompositeService;
    private readonly extensionsWorkbenchService;
    private readonly extensionGalleryService;
    private readonly notificationService;
    private readonly openerService;
    private readonly extensionRecommendationsService;
    private readonly extensionService;
    private readonly webviewService;
    private readonly languageService;
    private readonly contextMenuService;
    private readonly contextKeyService;
    private readonly contextService;
    private readonly explorerService;
    private readonly viewsService;
    private readonly uriIdentityService;
    private readonly hoverService;
    static readonly ID: string;
    private readonly _scopedContextKeyService;
    private template;
    private extensionReadme;
    private extensionChangelog;
    private extensionManifest;
    private initialScrollProgress;
    private currentIdentifier;
    private layoutParticipants;
    private readonly contentDisposables;
    private readonly transientDisposables;
    private activeElement;
    private dimension;
    private showPreReleaseVersionContextKey;
    constructor(group: IEditorGroup, telemetryService: ITelemetryService, instantiationService: IInstantiationService, paneCompositeService: IPaneCompositePartService, extensionsWorkbenchService: IExtensionsWorkbenchService, extensionGalleryService: IExtensionGalleryService, themeService: IThemeService, notificationService: INotificationService, openerService: IOpenerService, extensionRecommendationsService: IExtensionRecommendationsService, storageService: IStorageService, extensionService: IExtensionService, webviewService: IWebviewService, languageService: ILanguageService, contextMenuService: IContextMenuService, contextKeyService: IContextKeyService, contextService: IWorkspaceContextService, explorerService: IExplorerService, viewsService: IViewsService, uriIdentityService: IUriIdentityService, hoverService: IHoverService);
    get scopedContextKeyService(): IContextKeyService | undefined;
    protected createEditor(parent: HTMLElement): void;
    setInput(input: ExtensionsInput, options: IExtensionEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void>;
    setOptions(options: IExtensionEditorOptions | undefined): void;
    private updatePreReleaseVersionContext;
    openTab(tab: ExtensionEditorTab): Promise<void>;
    private getGalleryVersionToShow;
    private render;
    private renderNavbar;
    clearInput(): void;
    focus(): void;
    showFind(): void;
    runFindAction(previous: boolean): void;
    get activeWebview(): IWebview | undefined;
    private onNavbarChange;
    private open;
    private openMarkdown;
    private renderMarkdown;
    private renderBody;
    private openDetails;
    private shallRenderAsExtensionPack;
    private openExtensionPackReadme;
    private renderAdditionalDetails;
    private renderCategories;
    private renderExtensionResources;
    private renderMoreInfo;
    private openChangelog;
    private openFeatures;
    private openExtensionDependencies;
    private openExtensionPack;
    private renderExtensionPack;
    private loadContents;
    layout(dimension: Dimension): void;
    private onError;
}
