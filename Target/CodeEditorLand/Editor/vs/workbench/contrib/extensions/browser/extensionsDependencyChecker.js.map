{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsDependencyChecker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IExtensionsWorkbenchService } from '../common/extensions.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { MenuRegistry, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { localize } from '../../../../nls.js';\nimport { areSameExtensions } from '../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Promises } from '../../../../base/common/async.js';\n\nexport class ExtensionDependencyChecker extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IHostService private readonly hostService: IHostService\n\t) {\n\t\tsuper();\n\t\tCommandsRegistry.registerCommand('workbench.extensions.installMissingDependencies', () => this.installMissingDependencies());\n\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: 'workbench.extensions.installMissingDependencies',\n\t\t\t\tcategory: localize('extensions', \"Extensions\"),\n\t\t\t\ttitle: localize('auto install missing deps', \"Install Missing Dependencies\")\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async getUninstalledMissingDependencies(): Promise<string[]> {\n\t\tconst allMissingDependencies = await this.getAllMissingDependencies();\n\t\tconst localExtensions = await this.extensionsWorkbenchService.queryLocal();\n\t\treturn allMissingDependencies.filter(id => localExtensions.every(l => !areSameExtensions(l.identifier, { id })));\n\t}\n\n\tprivate async getAllMissingDependencies(): Promise<string[]> {\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\t\tconst runningExtensionsIds: Set<string> = this.extensionService.extensions.reduce((result, r) => { result.add(r.identifier.value.toLowerCase()); return result; }, new Set<string>());\n\t\tconst missingDependencies: Set<string> = new Set<string>();\n\t\tfor (const extension of this.extensionService.extensions) {\n\t\t\tif (extension.extensionDependencies) {\n\t\t\t\textension.extensionDependencies.forEach(dep => {\n\t\t\t\t\tif (!runningExtensionsIds.has(dep.toLowerCase())) {\n\t\t\t\t\t\tmissingDependencies.add(dep);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn [...missingDependencies.values()];\n\t}\n\n\tprivate async installMissingDependencies(): Promise<void> {\n\t\tconst missingDependencies = await this.getUninstalledMissingDependencies();\n\t\tif (missingDependencies.length) {\n\t\t\tconst extensions = await this.extensionsWorkbenchService.getExtensions(missingDependencies.map(id => ({ id })), CancellationToken.None);\n\t\t\tif (extensions.length) {\n\t\t\t\tawait Promises.settled(extensions.map(extension => this.extensionsWorkbenchService.install(extension)));\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\tmessage: localize('finished installing missing deps', \"Finished installing missing dependencies. Please reload the window now.\"),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [new Action('realod', localize('reload', \"Reload Window\"), '', true,\n\t\t\t\t\t\t\t() => this.hostService.reload())]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.notificationService.info(localize('no missing deps', \"There are no missing dependencies to install.\"));\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,mCAAmC;AAC5C,SAAS,8BAA8B;AACvC,SAAS,yBAAyB;AAClC,SAAS,wBAAwB;AACjC,SAAS,cAAc,cAAc;AACrC,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC,SAAS,sBAAsB,gBAAgB;AAC/C,SAAS,cAAc;AACvB,SAAS,oBAAoB;AAC7B,SAAS,kBAAkB;AAC3B,SAAS,yBAAyB;AAClC,SAAS,gBAAgB;AAElB,IAAM,6BAAN,cAAyC,WAA6C;AAAA,EAE5F,YACqC,kBACU,4BACP,qBACR,aAC9B;AACD,UAAM;AAL8B;AACU;AACP;AACR;AAG/B,qBAAiB,gBAAgB,mDAAmD,MAAM,KAAK,2BAA2B,CAAC;AAC3H,iBAAa,eAAe,OAAO,gBAAgB;AAAA,MAClD,SAAS;AAAA,QACR,IAAI;AAAA,QACJ,UAAU,SAAS,cAAc,YAAY;AAAA,QAC7C,OAAO,SAAS,6BAA6B,8BAA8B;AAAA,MAC5E;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EApCD,OAmB6F;AAAA;AAAA;AAAA,EAmB5F,MAAc,oCAAuD;AACpE,UAAM,yBAAyB,MAAM,KAAK,0BAA0B;AACpE,UAAM,kBAAkB,MAAM,KAAK,2BAA2B,WAAW;AACzE,WAAO,uBAAuB,OAAO,QAAM,gBAAgB,MAAM,OAAK,CAAC,kBAAkB,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;AAAA,EAChH;AAAA,EAEA,MAAc,4BAA+C;AAC5D,UAAM,KAAK,iBAAiB,kCAAkC;AAC9D,UAAM,uBAAoC,KAAK,iBAAiB,WAAW,OAAO,CAAC,QAAQ,MAAM;AAAE,aAAO,IAAI,EAAE,WAAW,MAAM,YAAY,CAAC;AAAG,aAAO;AAAA,IAAQ,GAAG,oBAAI,IAAY,CAAC;AACpL,UAAM,sBAAmC,oBAAI,IAAY;AACzD,eAAW,aAAa,KAAK,iBAAiB,YAAY;AACzD,UAAI,UAAU,uBAAuB;AACpC,kBAAU,sBAAsB,QAAQ,SAAO;AAC9C,cAAI,CAAC,qBAAqB,IAAI,IAAI,YAAY,CAAC,GAAG;AACjD,gCAAoB,IAAI,GAAG;AAAA,UAC5B;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AACA,WAAO,CAAC,GAAG,oBAAoB,OAAO,CAAC;AAAA,EACxC;AAAA,EAEA,MAAc,6BAA4C;AACzD,UAAM,sBAAsB,MAAM,KAAK,kCAAkC;AACzE,QAAI,oBAAoB,QAAQ;AAC/B,YAAM,aAAa,MAAM,KAAK,2BAA2B,cAAc,oBAAoB,IAAI,SAAO,EAAE,GAAG,EAAE,GAAG,kBAAkB,IAAI;AACtI,UAAI,WAAW,QAAQ;AACtB,cAAM,SAAS,QAAQ,WAAW,IAAI,eAAa,KAAK,2BAA2B,QAAQ,SAAS,CAAC,CAAC;AACtG,aAAK,oBAAoB,OAAO;AAAA,UAC/B,UAAU,SAAS;AAAA,UACnB,SAAS,SAAS,oCAAoC,yEAAyE;AAAA,UAC/H,SAAS;AAAA,YACR,SAAS,CAAC,IAAI;AAAA,cAAO;AAAA,cAAU,SAAS,UAAU,eAAe;AAAA,cAAG;AAAA,cAAI;AAAA,cACvE,MAAM,KAAK,YAAY,OAAO;AAAA,YAAC,CAAC;AAAA,UAClC;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,OAAO;AACN,WAAK,oBAAoB,KAAK,SAAS,mBAAmB,+CAA+C,CAAC;AAAA,IAC3G;AAAA,EACD;AACD;AA5Da,6BAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GANU;",
  "names": []
}
