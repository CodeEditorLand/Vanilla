{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsDependencyChecker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { Promises } from \"../../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tMenuId,\n\tMenuRegistry,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { areSameExtensions } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { IExtensionsWorkbenchService } from \"../common/extensions.js\";\n\nexport class ExtensionDependencyChecker\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionsWorkbenchService\n\t\tprivate readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tCommandsRegistry.registerCommand(\n\t\t\t\"workbench.extensions.installMissingDependencies\",\n\t\t\t() => this.installMissingDependencies(),\n\t\t);\n\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: \"workbench.extensions.installMissingDependencies\",\n\t\t\t\tcategory: localize(\"extensions\", \"Extensions\"),\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"auto install missing deps\",\n\t\t\t\t\t\"Install Missing Dependencies\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async getUninstalledMissingDependencies(): Promise<string[]> {\n\t\tconst allMissingDependencies = await this.getAllMissingDependencies();\n\t\tconst localExtensions =\n\t\t\tawait this.extensionsWorkbenchService.queryLocal();\n\t\treturn allMissingDependencies.filter((id) =>\n\t\t\tlocalExtensions.every(\n\t\t\t\t(l) => !areSameExtensions(l.identifier, { id }),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async getAllMissingDependencies(): Promise<string[]> {\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\t\tconst runningExtensionsIds: Set<string> =\n\t\t\tthis.extensionService.extensions.reduce((result, r) => {\n\t\t\t\tresult.add(r.identifier.value.toLowerCase());\n\t\t\t\treturn result;\n\t\t\t}, new Set<string>());\n\t\tconst missingDependencies: Set<string> = new Set<string>();\n\t\tfor (const extension of this.extensionService.extensions) {\n\t\t\tif (extension.extensionDependencies) {\n\t\t\t\textension.extensionDependencies.forEach((dep) => {\n\t\t\t\t\tif (!runningExtensionsIds.has(dep.toLowerCase())) {\n\t\t\t\t\t\tmissingDependencies.add(dep);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn [...missingDependencies.values()];\n\t}\n\n\tprivate async installMissingDependencies(): Promise<void> {\n\t\tconst missingDependencies =\n\t\t\tawait this.getUninstalledMissingDependencies();\n\t\tif (missingDependencies.length) {\n\t\t\tconst extensions =\n\t\t\t\tawait this.extensionsWorkbenchService.getExtensions(\n\t\t\t\t\tmissingDependencies.map((id) => ({ id })),\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\t\t\tif (extensions.length) {\n\t\t\t\tawait Promises.settled(\n\t\t\t\t\textensions.map((extension) =>\n\t\t\t\t\t\tthis.extensionsWorkbenchService.install(extension),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"finished installing missing deps\",\n\t\t\t\t\t\t\"Finished installing missing dependencies. Please reload the window now.\",\n\t\t\t\t\t),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\t\"realod\",\n\t\t\t\t\t\t\t\tlocalize(\"reload\", \"Reload Window\"),\n\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t() => this.hostService.reload(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.notificationService.info(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"no missing deps\",\n\t\t\t\t\t\"There are no missing dependencies to install.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
