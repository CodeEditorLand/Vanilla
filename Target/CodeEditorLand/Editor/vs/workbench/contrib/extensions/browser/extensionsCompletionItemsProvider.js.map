{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsCompletionItemsProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { getLocation, parse } from '../../../../base/common/json.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { CompletionContext, CompletionList, CompletionItemKind, CompletionItem } from '../../../../editor/common/languages.js';\nimport { IExtensionManagementService } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../../editor/common/services/languageFeatures.js';\n\n\nexport class ExtensionsCompletionItemsProvider extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(languageFeaturesService.completionProvider.register({ language: 'jsonc', pattern: '**/settings.json' }, {\n\t\t\t_debugDisplayName: 'extensionsCompletionProvider',\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, token: CancellationToken): Promise<CompletionList> => {\n\t\t\t\tconst getWordRangeAtPosition = (model: ITextModel, position: Position): Range | null => {\n\t\t\t\t\tconst wordAtPosition = model.getWordAtPosition(position);\n\t\t\t\t\treturn wordAtPosition ? new Range(position.lineNumber, wordAtPosition.startColumn, position.lineNumber, wordAtPosition.endColumn) : null;\n\t\t\t\t};\n\n\t\t\t\tconst location = getLocation(model.getValue(), model.getOffsetAt(position));\n\t\t\t\tconst range = getWordRangeAtPosition(model, position) ?? Range.fromPositions(position, position);\n\n\t\t\t\t// extensions.supportUntrustedWorkspaces\n\t\t\t\tif (location.path[0] === 'extensions.supportUntrustedWorkspaces' && location.path.length === 2 && location.isAtPropertyKey) {\n\t\t\t\t\tlet alreadyConfigured: string[] = [];\n\t\t\t\t\ttry {\n\t\t\t\t\t\talreadyConfigured = Object.keys(parse(model.getValue())['extensions.supportUntrustedWorkspaces']);\n\t\t\t\t\t} catch (e) {/* ignore error */ }\n\n\t\t\t\t\treturn { suggestions: await this.provideSupportUntrustedWorkspacesExtensionProposals(alreadyConfigured, range) };\n\t\t\t\t}\n\n\t\t\t\treturn { suggestions: [] };\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async provideSupportUntrustedWorkspacesExtensionProposals(alreadyConfigured: string[], range: Range): Promise<CompletionItem[]> {\n\t\tconst suggestions: CompletionItem[] = [];\n\t\tconst installedExtensions = (await this.extensionManagementService.getInstalled()).filter(e => e.manifest.main);\n\t\tconst proposedExtensions = installedExtensions.filter(e => alreadyConfigured.indexOf(e.identifier.id) === -1);\n\n\t\tif (proposedExtensions.length) {\n\t\t\tsuggestions.push(...proposedExtensions.map(e => {\n\t\t\t\tconst text = `\"${e.identifier.id}\": {\\n\\t\"supported\": true,\\n\\t\"version\": \"${e.manifest.version}\"\\n},`;\n\t\t\t\treturn { label: e.identifier.id, kind: CompletionItemKind.Value, insertText: text, filterText: text, range };\n\t\t\t}));\n\t\t} else {\n\t\t\tconst text = '\"vscode.csharp\": {\\n\\t\"supported\": true,\\n\\t\"version\": \"0.0.0\"\\n},';\n\t\t\tsuggestions.push({ label: localize('exampleExtension', \"Example\"), kind: CompletionItemKind.Value, insertText: text, filterText: text, range });\n\t\t}\n\n\t\treturn suggestions;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC,SAAS,aAAa,aAAa;AACnC,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB,gBAAgB,oBAAoB,sBAAsB;AACtF,SAAS,mCAAmC;AAC5C,SAAS,8BAA8B;AACvC,SAAS,aAAa;AACtB,SAAS,gCAAgC;AAGlC,IAAM,oCAAN,cAAgD,WAA6C;AAAA,EACnG,YAC+C,4BACpB,yBACzB;AACD,UAAM;AAHwC;AAK9C,SAAK,UAAU,wBAAwB,mBAAmB,SAAS,EAAE,UAAU,SAAS,SAAS,mBAAmB,GAAG;AAAA,MACtH,mBAAmB;AAAA,MACnB,wBAAwB,8BAAO,OAAmB,UAAoB,UAA6B,UAAsD;AACxJ,cAAM,yBAAyB,wBAACA,QAAmBC,cAAqC;AACvF,gBAAM,iBAAiBD,OAAM,kBAAkBC,SAAQ;AACvD,iBAAO,iBAAiB,IAAI,MAAMA,UAAS,YAAY,eAAe,aAAaA,UAAS,YAAY,eAAe,SAAS,IAAI;AAAA,QACrI,GAH+B;AAK/B,cAAM,WAAW,YAAY,MAAM,SAAS,GAAG,MAAM,YAAY,QAAQ,CAAC;AAC1E,cAAM,QAAQ,uBAAuB,OAAO,QAAQ,KAAK,MAAM,cAAc,UAAU,QAAQ;AAG/F,YAAI,SAAS,KAAK,CAAC,MAAM,2CAA2C,SAAS,KAAK,WAAW,KAAK,SAAS,iBAAiB;AAC3H,cAAI,oBAA8B,CAAC;AACnC,cAAI;AACH,gCAAoB,OAAO,KAAK,MAAM,MAAM,SAAS,CAAC,EAAE,uCAAuC,CAAC;AAAA,UACjG,SAAS,GAAG;AAAA,UAAoB;AAEhC,iBAAO,EAAE,aAAa,MAAM,KAAK,oDAAoD,mBAAmB,KAAK,EAAE;AAAA,QAChH;AAEA,eAAO,EAAE,aAAa,CAAC,EAAE;AAAA,MAC1B,GApBwB;AAAA,IAqBzB,CAAC,CAAC;AAAA,EACH;AAAA,EAjDD,OAkBoG;AAAA;AAAA;AAAA,EAiCnG,MAAc,oDAAoD,mBAA6B,OAAyC;AACvI,UAAM,cAAgC,CAAC;AACvC,UAAM,uBAAuB,MAAM,KAAK,2BAA2B,aAAa,GAAG,OAAO,OAAK,EAAE,SAAS,IAAI;AAC9G,UAAM,qBAAqB,oBAAoB,OAAO,OAAK,kBAAkB,QAAQ,EAAE,WAAW,EAAE,MAAM,EAAE;AAE5G,QAAI,mBAAmB,QAAQ;AAC9B,kBAAY,KAAK,GAAG,mBAAmB,IAAI,OAAK;AAC/C,cAAM,OAAO,IAAI,EAAE,WAAW,EAAE;AAAA;AAAA,eAA6C,EAAE,SAAS,OAAO;AAAA;AAC/F,eAAO,EAAE,OAAO,EAAE,WAAW,IAAI,MAAM,mBAAmB,OAAO,YAAY,MAAM,YAAY,MAAM,MAAM;AAAA,MAC5G,CAAC,CAAC;AAAA,IACH,OAAO;AACN,YAAM,OAAO;AACb,kBAAY,KAAK,EAAE,OAAO,SAAS,oBAAoB,SAAS,GAAG,MAAM,mBAAmB,OAAO,YAAY,MAAM,YAAY,MAAM,MAAM,CAAC;AAAA,IAC/I;AAEA,WAAO;AAAA,EACR;AACD;AAlDa,oCAAN;AAAA,EAEJ;AAAA,EACA;AAAA,GAHU;",
  "names": ["model", "position"]
}
