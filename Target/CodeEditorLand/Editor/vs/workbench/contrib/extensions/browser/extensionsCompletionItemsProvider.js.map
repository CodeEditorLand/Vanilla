{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsCompletionItemsProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { getLocation, parse } from \"../../../../base/common/json.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport type { Position } from \"../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport {\n\ttype CompletionContext,\n\ttype CompletionItem,\n\tCompletionItemKind,\n\ttype CompletionList,\n} from \"../../../../editor/common/languages.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../../editor/common/services/languageFeatures.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IExtensionManagementService } from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\n\nexport class ExtensionsCompletionItemsProvider\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(languageFeaturesService.completionProvider.register({ language: 'jsonc', pattern: '**/settings.json' }, {\n\t\t\t_debugDisplayName: 'extensionsCompletionProvider',\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, token: CancellationToken): Promise<CompletionList> => {\n\t\t\t\tconst getWordRangeAtPosition = (model: ITextModel, position: Position): Range | null => {\n\t\t\t\t\tconst wordAtPosition = model.getWordAtPosition(position);\n\t\t\t\t\treturn wordAtPosition ? new Range(position.lineNumber, wordAtPosition.startColumn, position.lineNumber, wordAtPosition.endColumn) : null;\n\t\t\t\t};\n\n\t\t\t\tconst location = getLocation(model.getValue(), model.getOffsetAt(position));\n\t\t\t\tconst range = getWordRangeAtPosition(model, position) ?? Range.fromPositions(position, position);\n\n\t\t\t\t// extensions.supportUntrustedWorkspaces\n\t\t\t\tif (location.path[0] === 'extensions.supportUntrustedWorkspaces' && location.path.length === 2 && location.isAtPropertyKey) {\n\t\t\t\t\tlet alreadyConfigured: string[] = [];\n\t\t\t\t\ttry {\n\t\t\t\t\t\talreadyConfigured = Object.keys(parse(model.getValue())['extensions.supportUntrustedWorkspaces']);\n\t\t\t\t\t} catch (e) {/* ignore error */ }\n\n\t\t\t\t\treturn { suggestions: await this.provideSupportUntrustedWorkspacesExtensionProposals(alreadyConfigured, range) };\n\t\t\t\t}\n\n\t\t\t\treturn { suggestions: [] };\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async provideSupportUntrustedWorkspacesExtensionProposals(\n\t\talreadyConfigured: string[],\n\t\trange: Range,\n\t): Promise<CompletionItem[]> {\n\t\tconst suggestions: CompletionItem[] = [];\n\t\tconst installedExtensions = (\n\t\t\tawait this.extensionManagementService.getInstalled()\n\t\t).filter((e) => e.manifest.main);\n\t\tconst proposedExtensions = installedExtensions.filter(\n\t\t\t(e) => alreadyConfigured.indexOf(e.identifier.id) === -1,\n\t\t);\n\n\t\tif (proposedExtensions.length) {\n\t\t\tsuggestions.push(\n\t\t\t\t...proposedExtensions.map((e) => {\n\t\t\t\t\tconst text = `\"${e.identifier.id}\": {\\n\\t\"supported\": true,\\n\\t\"version\": \"${e.manifest.version}\"\\n},`;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: e.identifier.id,\n\t\t\t\t\t\tkind: CompletionItemKind.Value,\n\t\t\t\t\t\tinsertText: text,\n\t\t\t\t\t\tfilterText: text,\n\t\t\t\t\t\trange,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tconst text =\n\t\t\t\t'\"vscode.csharp\": {\\n\\t\"supported\": true,\\n\\t\"version\": \"0.0.0\"\\n},';\n\t\t\tsuggestions.push({\n\t\t\t\tlabel: localize(\"exampleExtension\", \"Example\"),\n\t\t\t\tkind: CompletionItemKind.Value,\n\t\t\t\tinsertText: text,\n\t\t\t\tfilterText: text,\n\t\t\t\trange,\n\t\t\t});\n\t\t}\n\n\t\treturn suggestions;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMA,SAAS,aAAa,aAAa;AACnC,SAAS,kBAAkB;AAE3B,SAAS,aAAa;AACtB;AAAA,EAGC;AAAA,OAEM;AAEP,SAAS,gCAAgC;AACzC,SAAS,gBAAgB;AACzB,SAAS,mCAAmC;AAGrC,IAAM,oCAAN,cACE,WAET;AAAA,EACC,YAC+C,4BACpB,yBACzB;AACD,UAAM;AAHwC;AAK9C,SAAK,UAAU,wBAAwB,mBAAmB,SAAS,EAAE,UAAU,SAAS,SAAS,mBAAmB,GAAG;AAAA,MACtH,mBAAmB;AAAA,MACnB,wBAAwB,8BAAO,OAAmB,UAAoB,UAA6B,UAAsD;AACxJ,cAAM,yBAAyB,wBAACA,QAAmBC,cAAqC;AACvF,gBAAM,iBAAiBD,OAAM,kBAAkBC,SAAQ;AACvD,iBAAO,iBAAiB,IAAI,MAAMA,UAAS,YAAY,eAAe,aAAaA,UAAS,YAAY,eAAe,SAAS,IAAI;AAAA,QACrI,GAH+B;AAK/B,cAAM,WAAW,YAAY,MAAM,SAAS,GAAG,MAAM,YAAY,QAAQ,CAAC;AAC1E,cAAM,QAAQ,uBAAuB,OAAO,QAAQ,KAAK,MAAM,cAAc,UAAU,QAAQ;AAG/F,YAAI,SAAS,KAAK,CAAC,MAAM,2CAA2C,SAAS,KAAK,WAAW,KAAK,SAAS,iBAAiB;AAC3H,cAAI,oBAA8B,CAAC;AACnC,cAAI;AACH,gCAAoB,OAAO,KAAK,MAAM,MAAM,SAAS,CAAC,EAAE,uCAAuC,CAAC;AAAA,UACjG,SAAS,GAAG;AAAA,UAAoB;AAEhC,iBAAO,EAAE,aAAa,MAAM,KAAK,oDAAoD,mBAAmB,KAAK,EAAE;AAAA,QAChH;AAEA,eAAO,EAAE,aAAa,CAAC,EAAE;AAAA,MAC1B,GApBwB;AAAA,IAqBzB,CAAC,CAAC;AAAA,EACH;AAAA,EAxDD,OAyBA;AAAA;AAAA;AAAA,EAiCC,MAAc,oDACb,mBACA,OAC4B;AAC5B,UAAM,cAAgC,CAAC;AACvC,UAAM,uBACL,MAAM,KAAK,2BAA2B,aAAa,GAClD,OAAO,CAAC,MAAM,EAAE,SAAS,IAAI;AAC/B,UAAM,qBAAqB,oBAAoB;AAAA,MAC9C,CAAC,MAAM,kBAAkB,QAAQ,EAAE,WAAW,EAAE,MAAM;AAAA,IACvD;AAEA,QAAI,mBAAmB,QAAQ;AAC9B,kBAAY;AAAA,QACX,GAAG,mBAAmB,IAAI,CAAC,MAAM;AAChC,gBAAM,OAAO,IAAI,EAAE,WAAW,EAAE;AAAA;AAAA,eAA6C,EAAE,SAAS,OAAO;AAAA;AAC/F,iBAAO;AAAA,YACN,OAAO,EAAE,WAAW;AAAA,YACpB,MAAM,mBAAmB;AAAA,YACzB,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,OAAO;AACN,YAAM,OACL;AACD,kBAAY,KAAK;AAAA,QAChB,OAAO,SAAS,oBAAoB,SAAS;AAAA,QAC7C,MAAM,mBAAmB;AAAA,QACzB,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ;AAAA,MACD,CAAC;AAAA,IACF;AAEA,WAAO;AAAA,EACR;AACD;AA3Ea,oCAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;",
  "names": ["model", "position"]
}
