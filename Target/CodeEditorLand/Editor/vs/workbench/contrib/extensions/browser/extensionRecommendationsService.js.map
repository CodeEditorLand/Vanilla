{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionRecommendationsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shuffle } from \"../../../../base/common/arrays.js\";\nimport {\n\ttype CancelablePromise,\n\ttimeout,\n} from \"../../../../base/common/async.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { Disposable, toDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { isString } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport {\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n\ttype InstallExtensionResult,\n\tInstallOperation,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport { IExtensionRecommendationNotificationService } from \"../../../../platform/extensionRecommendations/common/extensionRecommendations.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IRemoteExtensionsScannerService } from \"../../../../platform/remote/common/remoteExtensionsScanner.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype ExtensionRecommendationReason,\n\tIExtensionIgnoredRecommendationsService,\n\ttype IExtensionRecommendationsService,\n} from \"../../../services/extensionRecommendations/common/extensionRecommendations.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IUserDataInitializationService } from \"../../../services/userData/browser/userDataInit.js\";\nimport { IExtensionsWorkbenchService } from \"../common/extensions.js\";\nimport { ConfigBasedRecommendations } from \"./configBasedRecommendations.js\";\nimport { ExeBasedRecommendations } from \"./exeBasedRecommendations.js\";\nimport type { ExtensionRecommendation } from \"./extensionRecommendations.js\";\nimport { FileBasedRecommendations } from \"./fileBasedRecommendations.js\";\nimport { KeymapRecommendations } from \"./keymapRecommendations.js\";\nimport { LanguageRecommendations } from \"./languageRecommendations.js\";\nimport { RemoteRecommendations } from \"./remoteRecommendations.js\";\nimport { WebRecommendations } from \"./webRecommendations.js\";\nimport { WorkspaceRecommendations } from \"./workspaceRecommendations.js\";\n\ntype IgnoreRecommendationClassification = {\n\towner: \"sandy081\";\n\tcomment: \"Report when a recommendation is ignored\";\n\trecommendationReason: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Reason why extension is recommended\";\n\t};\n\textensionId: {\n\t\tclassification: \"PublicNonPersonalData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Id of the extension recommendation that is being ignored\";\n\t};\n};\n\nexport class ExtensionRecommendationsService\n\textends Disposable\n\timplements IExtensionRecommendationsService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\t// Recommendations\n\tprivate readonly fileBasedRecommendations: FileBasedRecommendations;\n\tprivate readonly workspaceRecommendations: WorkspaceRecommendations;\n\tprivate readonly configBasedRecommendations: ConfigBasedRecommendations;\n\tprivate readonly exeBasedRecommendations: ExeBasedRecommendations;\n\tprivate readonly keymapRecommendations: KeymapRecommendations;\n\tprivate readonly webRecommendations: WebRecommendations;\n\tprivate readonly languageRecommendations: LanguageRecommendations;\n\tprivate readonly remoteRecommendations: RemoteRecommendations;\n\n\tpublic readonly activationPromise: Promise<void>;\n\tprivate sessionSeed: number;\n\n\tprivate _onDidChangeRecommendations = this._register(new Emitter<void>());\n\treadonly onDidChangeRecommendations =\n\t\tthis._onDidChangeRecommendations.event;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IExtensionGalleryService\n\t\tprivate readonly galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentService\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\t@IExtensionManagementService\n\t\tprivate readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionIgnoredRecommendationsService\n\t\tprivate readonly extensionRecommendationsManagementService: IExtensionIgnoredRecommendationsService,\n\t\t@IExtensionRecommendationNotificationService\n\t\tprivate readonly extensionRecommendationNotificationService: IExtensionRecommendationNotificationService,\n\t\t@IExtensionsWorkbenchService\n\t\tprivate readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IRemoteExtensionsScannerService\n\t\tprivate readonly remoteExtensionsScannerService: IRemoteExtensionsScannerService,\n\t\t@IUserDataInitializationService\n\t\tprivate readonly userDataInitializationService: IUserDataInitializationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.workspaceRecommendations = this._register(\n\t\t\tinstantiationService.createInstance(WorkspaceRecommendations),\n\t\t);\n\t\tthis.fileBasedRecommendations = this._register(\n\t\t\tinstantiationService.createInstance(FileBasedRecommendations),\n\t\t);\n\t\tthis.configBasedRecommendations = this._register(\n\t\t\tinstantiationService.createInstance(ConfigBasedRecommendations),\n\t\t);\n\t\tthis.exeBasedRecommendations = this._register(\n\t\t\tinstantiationService.createInstance(ExeBasedRecommendations),\n\t\t);\n\t\tthis.keymapRecommendations = this._register(\n\t\t\tinstantiationService.createInstance(KeymapRecommendations),\n\t\t);\n\t\tthis.webRecommendations = this._register(\n\t\t\tinstantiationService.createInstance(WebRecommendations),\n\t\t);\n\t\tthis.languageRecommendations = this._register(\n\t\t\tinstantiationService.createInstance(LanguageRecommendations),\n\t\t);\n\t\tthis.remoteRecommendations = this._register(\n\t\t\tinstantiationService.createInstance(RemoteRecommendations),\n\t\t);\n\n\t\tif (!this.isEnabled()) {\n\t\t\tthis.sessionSeed = 0;\n\t\t\tthis.activationPromise = Promise.resolve();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.sessionSeed = +new Date();\n\n\t\t// Activation\n\t\tthis.activationPromise = this.activate();\n\n\t\tthis._register(\n\t\t\tthis.extensionManagementService.onDidInstallExtensions((e) =>\n\t\t\t\tthis.onDidInstallExtensions(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async activate(): Promise<void> {\n\t\ttry {\n\t\t\tawait Promise.allSettled([\n\t\t\t\tthis.remoteExtensionsScannerService.whenExtensionsReady(),\n\t\t\t\tthis.userDataInitializationService.whenInitializationFinished(),\n\t\t\t\tthis.lifecycleService.when(LifecyclePhase.Restored),\n\t\t\t]);\n\t\t} catch (error) {\n\t\t\t/* ignore */\n\t\t}\n\n\t\t// activate all recommendations\n\t\tawait Promise.all([\n\t\t\tthis.workspaceRecommendations.activate(),\n\t\t\tthis.configBasedRecommendations.activate(),\n\t\t\tthis.fileBasedRecommendations.activate(),\n\t\t\tthis.keymapRecommendations.activate(),\n\t\t\tthis.languageRecommendations.activate(),\n\t\t\tthis.webRecommendations.activate(),\n\t\t\tthis.remoteRecommendations.activate(),\n\t\t]);\n\n\t\tthis._register(\n\t\t\tEvent.any(\n\t\t\t\tthis.workspaceRecommendations.onDidChangeRecommendations,\n\t\t\t\tthis.configBasedRecommendations.onDidChangeRecommendations,\n\t\t\t\tthis.extensionRecommendationsManagementService\n\t\t\t\t\t.onDidChangeIgnoredRecommendations,\n\t\t\t)(() => this._onDidChangeRecommendations.fire()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.extensionRecommendationsManagementService.onDidChangeGlobalIgnoredRecommendation(\n\t\t\t\t({ extensionId, isRecommended }) => {\n\t\t\t\t\tif (!isRecommended) {\n\t\t\t\t\t\tconst reason =\n\t\t\t\t\t\t\tthis.getAllRecommendationsWithReason()[extensionId];\n\t\t\t\t\t\tif (reason && reason.reasonId) {\n\t\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\textensionId: string;\n\t\t\t\t\t\t\t\t\trecommendationReason: ExtensionRecommendationReason;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tIgnoreRecommendationClassification\n\t\t\t\t\t\t\t>(\n\t\t\t\t\t\t\t\t\"extensionsRecommendations:ignoreRecommendation\",\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\textensionId,\n\t\t\t\t\t\t\t\t\trecommendationReason: reason.reasonId,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.promptWorkspaceRecommendations();\n\t}\n\n\tprivate isEnabled(): boolean {\n\t\treturn (\n\t\t\tthis.galleryService.isEnabled() &&\n\t\t\t!this.environmentService.isExtensionDevelopment\n\t\t);\n\t}\n\n\tprivate async activateProactiveRecommendations(): Promise<void> {\n\t\tawait Promise.all([\n\t\t\tthis.exeBasedRecommendations.activate(),\n\t\t\tthis.configBasedRecommendations.activate(),\n\t\t]);\n\t}\n\n\tgetAllRecommendationsWithReason(): {\n\t\t[id: string]: {\n\t\t\treasonId: ExtensionRecommendationReason;\n\t\t\treasonText: string;\n\t\t};\n\t} {\n\t\t/* Activate proactive recommendations */\n\t\tthis.activateProactiveRecommendations();\n\n\t\tconst output: {\n\t\t\t[id: string]: {\n\t\t\t\treasonId: ExtensionRecommendationReason;\n\t\t\t\treasonText: string;\n\t\t\t};\n\t\t} = Object.create(null);\n\n\t\tconst allRecommendations = [\n\t\t\t...this.configBasedRecommendations.recommendations,\n\t\t\t...this.exeBasedRecommendations.recommendations,\n\t\t\t...this.fileBasedRecommendations.recommendations,\n\t\t\t...this.workspaceRecommendations.recommendations,\n\t\t\t...this.keymapRecommendations.recommendations,\n\t\t\t...this.languageRecommendations.recommendations,\n\t\t\t...this.webRecommendations.recommendations,\n\t\t];\n\n\t\tfor (const { extension, reason } of allRecommendations) {\n\t\t\tif (\n\t\t\t\tisString(extension) &&\n\t\t\t\tthis.isExtensionAllowedToBeRecommended(extension)\n\t\t\t) {\n\t\t\t\toutput[extension.toLowerCase()] = reason;\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tasync getConfigBasedRecommendations(): Promise<{\n\t\timportant: string[];\n\t\tothers: string[];\n\t}> {\n\t\tawait this.configBasedRecommendations.activate();\n\t\treturn {\n\t\t\timportant: this.toExtensionIds(\n\t\t\t\tthis.configBasedRecommendations.importantRecommendations,\n\t\t\t),\n\t\t\tothers: this.toExtensionIds(\n\t\t\t\tthis.configBasedRecommendations.otherRecommendations,\n\t\t\t),\n\t\t};\n\t}\n\n\tasync getOtherRecommendations(): Promise<string[]> {\n\t\tawait this.activationPromise;\n\t\tawait this.activateProactiveRecommendations();\n\n\t\tconst recommendations = [\n\t\t\t...this.configBasedRecommendations.otherRecommendations,\n\t\t\t...this.exeBasedRecommendations.otherRecommendations,\n\t\t\t...this.webRecommendations.recommendations,\n\t\t];\n\n\t\tconst extensionIds = this.toExtensionIds(recommendations);\n\t\tshuffle(extensionIds, this.sessionSeed);\n\t\treturn extensionIds;\n\t}\n\n\tasync getImportantRecommendations(): Promise<string[]> {\n\t\tawait this.activateProactiveRecommendations();\n\n\t\tconst recommendations = [\n\t\t\t...this.fileBasedRecommendations.importantRecommendations,\n\t\t\t...this.configBasedRecommendations.importantRecommendations,\n\t\t\t...this.exeBasedRecommendations.importantRecommendations,\n\t\t];\n\n\t\tconst extensionIds = this.toExtensionIds(recommendations);\n\t\tshuffle(extensionIds, this.sessionSeed);\n\t\treturn extensionIds;\n\t}\n\n\tgetKeymapRecommendations(): string[] {\n\t\treturn this.toExtensionIds(this.keymapRecommendations.recommendations);\n\t}\n\n\tgetLanguageRecommendations(): string[] {\n\t\treturn this.toExtensionIds(\n\t\t\tthis.languageRecommendations.recommendations,\n\t\t);\n\t}\n\n\tgetRemoteRecommendations(): string[] {\n\t\treturn this.toExtensionIds(this.remoteRecommendations.recommendations);\n\t}\n\n\tasync getWorkspaceRecommendations(): Promise<Array<string | URI>> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn [];\n\t\t}\n\t\tawait this.workspaceRecommendations.activate();\n\t\tconst result: Array<string | URI> = [];\n\t\tfor (const { extension } of this.workspaceRecommendations\n\t\t\t.recommendations) {\n\t\t\tif (isString(extension)) {\n\t\t\t\tif (\n\t\t\t\t\t!result.includes(extension.toLowerCase()) &&\n\t\t\t\t\tthis.isExtensionAllowedToBeRecommended(extension)\n\t\t\t\t) {\n\t\t\t\t\tresult.push(extension.toLowerCase());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push(extension);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync getExeBasedRecommendations(\n\t\texe?: string,\n\t): Promise<{ important: string[]; others: string[] }> {\n\t\tawait this.exeBasedRecommendations.activate();\n\t\tconst { important, others } = exe\n\t\t\t? this.exeBasedRecommendations.getRecommendations(exe)\n\t\t\t: {\n\t\t\t\t\timportant:\n\t\t\t\t\t\tthis.exeBasedRecommendations.importantRecommendations,\n\t\t\t\t\tothers: this.exeBasedRecommendations.otherRecommendations,\n\t\t\t\t};\n\t\treturn {\n\t\t\timportant: this.toExtensionIds(important),\n\t\t\tothers: this.toExtensionIds(others),\n\t\t};\n\t}\n\n\tgetFileBasedRecommendations(): string[] {\n\t\treturn this.toExtensionIds(\n\t\t\tthis.fileBasedRecommendations.recommendations,\n\t\t);\n\t}\n\n\tprivate onDidInstallExtensions(\n\t\tresults: readonly InstallExtensionResult[],\n\t): void {\n\t\tfor (const e of results) {\n\t\t\tif (\n\t\t\t\te.source &&\n\t\t\t\t!URI.isUri(e.source) &&\n\t\t\t\te.operation === InstallOperation.Install\n\t\t\t) {\n\t\t\t\tconst extRecommendations =\n\t\t\t\t\tthis.getAllRecommendationsWithReason() || {};\n\t\t\t\tconst recommendationReason =\n\t\t\t\t\textRecommendations[e.source.identifier.id.toLowerCase()];\n\t\t\t\tif (recommendationReason) {\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\"extensionGallery:install:recommendations\" : {\n\t\t\t\t\t\t\t\"owner\": \"sandy081\",\n\t\t\t\t\t\t\t\"recommendationReason\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\t\t\t\"${include}\": [\n\t\t\t\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog(\n\t\t\t\t\t\t\"extensionGallery:install:recommendations\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...e.source.telemetryData,\n\t\t\t\t\t\t\trecommendationReason: recommendationReason.reasonId,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate toExtensionIds(\n\t\trecommendations: ReadonlyArray<ExtensionRecommendation>,\n\t): string[] {\n\t\tconst extensionIds: string[] = [];\n\t\tfor (const { extension } of recommendations) {\n\t\t\tif (\n\t\t\t\tisString(extension) &&\n\t\t\t\tthis.isExtensionAllowedToBeRecommended(extension) &&\n\t\t\t\t!extensionIds.includes(extension.toLowerCase())\n\t\t\t) {\n\t\t\t\textensionIds.push(extension.toLowerCase());\n\t\t\t}\n\t\t}\n\t\treturn extensionIds;\n\t}\n\n\tprivate isExtensionAllowedToBeRecommended(extensionId: string): boolean {\n\t\treturn !this.extensionRecommendationsManagementService.ignoredRecommendations.includes(\n\t\t\textensionId.toLowerCase(),\n\t\t);\n\t}\n\n\tprivate async promptWorkspaceRecommendations(): Promise<void> {\n\t\tconst installed = await this.extensionsWorkbenchService.queryLocal();\n\t\tconst allowedRecommendations = [\n\t\t\t...this.workspaceRecommendations.recommendations,\n\t\t\t...this.configBasedRecommendations.importantRecommendations.filter(\n\t\t\t\t(recommendation) =>\n\t\t\t\t\t!recommendation.whenNotInstalled ||\n\t\t\t\t\trecommendation.whenNotInstalled.every((id) =>\n\t\t\t\t\t\tinstalled.every(\n\t\t\t\t\t\t\t(local) =>\n\t\t\t\t\t\t\t\t!areSameExtensions(local.identifier, { id }),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t),\n\t\t]\n\t\t\t.map(({ extension }) => extension)\n\t\t\t.filter(\n\t\t\t\t(extension) =>\n\t\t\t\t\t!isString(extension) ||\n\t\t\t\t\tthis.isExtensionAllowedToBeRecommended(extension),\n\t\t\t);\n\n\t\tif (allowedRecommendations.length) {\n\t\t\tawait this._registerP(timeout(5000));\n\t\t\tawait this.extensionRecommendationNotificationService.promptWorkspaceRecommendations(\n\t\t\t\tallowedRecommendations,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _registerP<T>(o: CancelablePromise<T>): CancelablePromise<T> {\n\t\tthis._register(toDisposable(() => o.cancel()));\n\t\treturn o;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
