{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport { index } from \"../../../../base/common/arrays.js\";\nimport {\n\ttype CancelablePromise,\n\tPromises,\n\tThrottledDelayer,\n\tcreateCancelablePromise,\n} from \"../../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tCancellationError,\n\tisCancellationError,\n} from \"../../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { FileAccess } from \"../../../../base/common/network.js\";\nimport {\n\ttype IPager,\n\tsinglePagePager,\n} from \"../../../../base/common/paging.js\";\nimport { isWeb, language } from \"../../../../base/common/platform.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport * as semver from \"../../../../base/common/semver/semver.js\";\nimport {\n\tisBoolean,\n\tisDefined,\n\tisString,\n\tisUndefined,\n} from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIDialogService,\n\ttype IPromptButton,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\ttype DidUninstallExtensionEvent,\n\tEXTENSION_IDENTIFIER_REGEX,\n\ttype IDeprecationInfo,\n\tIExtensionGalleryService,\n\ttype IExtensionInfo,\n\ttype IExtensionQueryOptions,\n\ttype IExtensionsControlManifest,\n\ttype IGalleryExtension,\n\ttype ILocalExtension,\n\ttype IProductVersion,\n\ttype IQueryOptions,\n\ttype InstallExtensionEvent,\n\ttype InstallExtensionInfo,\n\ttype InstallExtensionResult,\n\tInstallOperation,\n\ttype InstallOptions,\n\ttype UninstallExtensionInfo,\n\tWEB_EXTENSION_TAG,\n\tisTargetPlatformCompatible,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport {\n\tareSameExtensions,\n\tgetGalleryExtensionId,\n\tgetGalleryExtensionTelemetryData,\n\tgetLocalExtensionTelemetryData,\n\tgroupByExtension,\n} from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\tareApiProposalsCompatible,\n\tisEngineValid,\n} from \"../../../../platform/extensions/common/extensionValidator.js\";\nimport {\n\tExtensionIdentifier,\n\tExtensionType,\n\ttype IExtensionDescription,\n\ttype IExtensionIdentifier,\n\ttype IExtensionManifest,\n\ttype IExtension as IPlatformExtension,\n\tTargetPlatform,\n\tisApplicationScopedExtension,\n} from \"../../../../platform/extensions/common/extensions.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { getLocale } from \"../../../../platform/languagePacks/common/languagePacks.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tINotificationService,\n\tNotificationPriority,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\ttype IProgressOptions,\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { TelemetryTrustedValue } from \"../../../../platform/telemetry/common/telemetryUtils.js\";\nimport {\n\tIUpdateService,\n\tStateType,\n} from \"../../../../platform/update/common/update.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IOpenURLOptions,\n\ttype IURLHandler,\n\tIURLService,\n} from \"../../../../platform/url/common/url.js\";\nimport { IIgnoredExtensionsManagementService } from \"../../../../platform/userDataSync/common/ignoredExtensions.js\";\nimport {\n\tIUserDataAutoSyncService,\n\tIUserDataSyncEnablementService,\n\tSyncResource,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tACTIVE_GROUP,\n\tIEditorService,\n\tSIDE_GROUP,\n} from \"../../../services/editor/common/editorService.js\";\nimport {\n\tDefaultIconPath,\n\tEnablementState,\n\ttype IExtensionManagementServer,\n\tIExtensionManagementServerService,\n\ttype IResourceExtension,\n\tIWorkbenchExtensionEnablementService,\n\tIWorkbenchExtensionManagementService,\n\textensionsConfigurationNodeBase,\n} from \"../../../services/extensionManagement/common/extensionManagement.js\";\nimport { IExtensionManifestPropertiesService } from \"../../../services/extensions/common/extensionManifestPropertiesService.js\";\nimport {\n\ttype IExtensionsStatus as IExtensionRuntimeStatus,\n\tIExtensionService,\n\ttoExtension,\n\ttoExtensionDescription,\n} from \"../../../services/extensions/common/extensions.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { ILocaleService } from \"../../../services/localization/common/locale.js\";\nimport { IUserDataProfileService } from \"../../../services/userDataProfile/common/userDataProfile.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { ShowCurrentReleaseNotesActionId } from \"../../update/common/update.js\";\nimport {\n\tAutoCheckUpdatesConfigurationKey,\n\tAutoRestartConfigurationKey,\n\tAutoUpdateConfigurationKey,\n\ttype AutoUpdateConfigurationValue,\n\tExtensionRuntimeActionType,\n\ttype ExtensionRuntimeState,\n\tExtensionState,\n\tHasOutdatedExtensionsContext,\n\ttype IExtension,\n\ttype IExtensionsNotification,\n\ttype IExtensionsViewPaneContainer,\n\ttype IExtensionsWorkbenchService,\n\ttype InstallExtensionOptions,\n\tVIEWLET_ID,\n} from \"../common/extensions.js\";\nimport {\n\tExtensionsInput,\n\ttype IExtensionEditorOptions,\n} from \"../common/extensionsInput.js\";\n\ninterface IExtensionStateProvider<T> {\n\t(extension: Extension): T;\n}\n\ninterface InstalledExtensionsEvent {\n\treadonly extensionIds: TelemetryTrustedValue<string>;\n\treadonly count: number;\n}\ntype ExtensionsLoadClassification = {\n\towner: \"digitarald\";\n\tcomment: \"Helps to understand which extensions are the most actively used.\";\n\treadonly extensionIds: {\n\t\tclassification: \"PublicNonPersonalData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The list of extension ids that are installed.\";\n\t};\n\treadonly count: {\n\t\tclassification: \"PublicNonPersonalData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The number of extensions that are installed.\";\n\t};\n};\n\nexport class Extension implements IExtension {\n\tpublic enablementState: EnablementState = EnablementState.EnabledGlobally;\n\n\tprivate galleryResourcesCache = new Map<string, any>();\n\n\tconstructor(\n\t\tprivate stateProvider: IExtensionStateProvider<ExtensionState>,\n\t\tprivate runtimeStateProvider: IExtensionStateProvider<\n\t\t\tExtensionRuntimeState | undefined\n\t\t>,\n\t\tpublic readonly server: IExtensionManagementServer | undefined,\n\t\tpublic local: ILocalExtension | undefined,\n\t\tprivate _gallery: IGalleryExtension | undefined,\n\t\tprivate readonly resourceExtensionInfo:\n\t\t\t| {\n\t\t\t\t\tresourceExtension: IResourceExtension;\n\t\t\t\t\tisWorkspaceScoped: boolean;\n\t\t\t  }\n\t\t\t| undefined,\n\t\t@IExtensionGalleryService\n\t\tprivate readonly galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {}\n\n\tget resourceExtension(): IResourceExtension | undefined {\n\t\tif (this.resourceExtensionInfo) {\n\t\t\treturn this.resourceExtensionInfo.resourceExtension;\n\t\t}\n\t\tif (this.local?.isWorkspaceScoped) {\n\t\t\treturn {\n\t\t\t\ttype: \"resource\",\n\t\t\t\tidentifier: this.local.identifier,\n\t\t\t\tlocation: this.local.location,\n\t\t\t\tmanifest: this.local.manifest,\n\t\t\t\tchangelogUri: this.local.changelogUrl,\n\t\t\t\treadmeUri: this.local.readmeUrl,\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget gallery(): IGalleryExtension | undefined {\n\t\treturn this._gallery;\n\t}\n\n\tset gallery(gallery: IGalleryExtension | undefined) {\n\t\tthis._gallery = gallery;\n\t\tthis.galleryResourcesCache.clear();\n\t}\n\n\tget type(): ExtensionType {\n\t\treturn this.local ? this.local.type : ExtensionType.User;\n\t}\n\n\tget isBuiltin(): boolean {\n\t\treturn this.local ? this.local.isBuiltin : false;\n\t}\n\n\tget isWorkspaceScoped(): boolean {\n\t\tif (this.local) {\n\t\t\treturn this.local.isWorkspaceScoped;\n\t\t}\n\t\tif (this.resourceExtensionInfo) {\n\t\t\treturn this.resourceExtensionInfo.isWorkspaceScoped;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget name(): string {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.name;\n\t\t}\n\t\treturn this.getManifestFromLocalOrResource()?.name ?? \"\";\n\t}\n\n\tget displayName(): string {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.displayName || this.gallery.name;\n\t\t}\n\n\t\treturn this.getManifestFromLocalOrResource()?.displayName ?? this.name;\n\t}\n\n\tget identifier(): IExtensionIdentifier {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.identifier;\n\t\t}\n\t\tif (this.resourceExtension) {\n\t\t\treturn this.resourceExtension.identifier;\n\t\t}\n\t\treturn this.local!.identifier;\n\t}\n\n\tget uuid(): string | undefined {\n\t\treturn this.gallery\n\t\t\t? this.gallery.identifier.uuid\n\t\t\t: this.local?.identifier.uuid;\n\t}\n\n\tget publisher(): string {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.publisher;\n\t\t}\n\t\treturn this.getManifestFromLocalOrResource()?.publisher ?? \"\";\n\t}\n\n\tget publisherDisplayName(): string {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.publisherDisplayName || this.gallery.publisher;\n\t\t}\n\n\t\tif (this.local?.publisherDisplayName) {\n\t\t\treturn this.local.publisherDisplayName;\n\t\t}\n\n\t\treturn this.publisher;\n\t}\n\n\tget publisherUrl(): URI | undefined {\n\t\tif (!this.productService.extensionsGallery || !this.gallery) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn resources.joinPath(\n\t\t\tURI.parse(this.productService.extensionsGallery.publisherUrl),\n\t\t\tthis.publisher,\n\t\t);\n\t}\n\n\tget publisherDomain(): { link: string; verified: boolean } | undefined {\n\t\treturn this.gallery?.publisherDomain;\n\t}\n\n\tget publisherSponsorLink(): URI | undefined {\n\t\treturn this.gallery?.publisherSponsorLink\n\t\t\t? URI.parse(this.gallery.publisherSponsorLink)\n\t\t\t: undefined;\n\t}\n\n\tget version(): string {\n\t\treturn this.local ? this.local.manifest.version : this.latestVersion;\n\t}\n\n\tget pinned(): boolean {\n\t\treturn !!this.local?.pinned;\n\t}\n\n\tget latestVersion(): string {\n\t\treturn this.gallery\n\t\t\t? this.gallery.version\n\t\t\t: (this.getManifestFromLocalOrResource()?.version ?? \"\");\n\t}\n\n\tget description(): string {\n\t\treturn this.gallery\n\t\t\t? this.gallery.description\n\t\t\t: (this.getManifestFromLocalOrResource()?.description ?? \"\");\n\t}\n\n\tget url(): string | undefined {\n\t\tif (!this.productService.extensionsGallery || !this.gallery) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn `${this.productService.extensionsGallery.itemUrl}?itemName=${this.publisher}.${this.name}`;\n\t}\n\n\tget iconUrl(): string {\n\t\treturn (\n\t\t\tthis.galleryIconUrl ||\n\t\t\tthis.resourceExtensionIconUrl ||\n\t\t\tthis.localIconUrl ||\n\t\t\tthis.defaultIconUrl\n\t\t);\n\t}\n\n\tget iconUrlFallback(): string {\n\t\treturn (\n\t\t\tthis.galleryIconUrlFallback ||\n\t\t\tthis.resourceExtensionIconUrl ||\n\t\t\tthis.localIconUrl ||\n\t\t\tthis.defaultIconUrl\n\t\t);\n\t}\n\n\tprivate get localIconUrl(): string | null {\n\t\tif (this.local && this.local.manifest.icon) {\n\t\t\treturn FileAccess.uriToBrowserUri(\n\t\t\t\tresources.joinPath(\n\t\t\t\t\tthis.local.location,\n\t\t\t\t\tthis.local.manifest.icon,\n\t\t\t\t),\n\t\t\t).toString(true);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate get resourceExtensionIconUrl(): string | null {\n\t\tif (this.resourceExtension?.manifest.icon) {\n\t\t\treturn FileAccess.uriToBrowserUri(\n\t\t\t\tresources.joinPath(\n\t\t\t\t\tthis.resourceExtension.location,\n\t\t\t\t\tthis.resourceExtension.manifest.icon,\n\t\t\t\t),\n\t\t\t).toString(true);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate get galleryIconUrl(): string | null {\n\t\treturn this.gallery?.assets.icon ? this.gallery.assets.icon.uri : null;\n\t}\n\n\tprivate get galleryIconUrlFallback(): string | null {\n\t\treturn this.gallery?.assets.icon\n\t\t\t? this.gallery.assets.icon.fallbackUri\n\t\t\t: null;\n\t}\n\n\tprivate get defaultIconUrl(): string {\n\t\tif (this.type === ExtensionType.System && this.local) {\n\t\t\tif (this.local.manifest && this.local.manifest.contributes) {\n\t\t\t\tif (\n\t\t\t\t\tArray.isArray(this.local.manifest.contributes.themes) &&\n\t\t\t\t\tthis.local.manifest.contributes.themes.length\n\t\t\t\t) {\n\t\t\t\t\treturn FileAccess.asBrowserUri(\n\t\t\t\t\t\t\"vs/workbench/contrib/extensions/browser/media/theme-icon.png\",\n\t\t\t\t\t).toString(true);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tArray.isArray(this.local.manifest.contributes.grammars) &&\n\t\t\t\t\tthis.local.manifest.contributes.grammars.length\n\t\t\t\t) {\n\t\t\t\t\treturn FileAccess.asBrowserUri(\n\t\t\t\t\t\t\"vs/workbench/contrib/extensions/browser/media/language-icon.svg\",\n\t\t\t\t\t).toString(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn DefaultIconPath;\n\t}\n\n\tget repository(): string | undefined {\n\t\treturn this.gallery && this.gallery.assets.repository\n\t\t\t? this.gallery.assets.repository.uri\n\t\t\t: undefined;\n\t}\n\n\tget licenseUrl(): string | undefined {\n\t\treturn this.gallery && this.gallery.assets.license\n\t\t\t? this.gallery.assets.license.uri\n\t\t\t: undefined;\n\t}\n\n\tget supportUrl(): string | undefined {\n\t\treturn this.gallery && this.gallery.supportLink\n\t\t\t? this.gallery.supportLink\n\t\t\t: undefined;\n\t}\n\n\tget state(): ExtensionState {\n\t\treturn this.stateProvider(this);\n\t}\n\n\tpublic isMalicious = false;\n\tpublic deprecationInfo: IDeprecationInfo | undefined;\n\n\tget installCount(): number | undefined {\n\t\treturn this.gallery ? this.gallery.installCount : undefined;\n\t}\n\n\tget rating(): number | undefined {\n\t\treturn this.gallery ? this.gallery.rating : undefined;\n\t}\n\n\tget ratingCount(): number | undefined {\n\t\treturn this.gallery ? this.gallery.ratingCount : undefined;\n\t}\n\n\tget outdated(): boolean {\n\t\ttry {\n\t\t\tif (!this.gallery || !this.local) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// Do not allow updating system extensions in stable\n\t\t\tif (\n\t\t\t\tthis.type === ExtensionType.System &&\n\t\t\t\tthis.productService.quality === \"stable\"\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!this.local.preRelease &&\n\t\t\t\tthis.gallery.properties.isPreReleaseVersion\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (semver.gt(this.latestVersion, this.version)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.outdatedTargetPlatform) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* Ignore */\n\t\t}\n\t\treturn false;\n\t}\n\n\tget outdatedTargetPlatform(): boolean {\n\t\treturn (\n\t\t\t!!this.local &&\n\t\t\t!!this.gallery &&\n\t\t\t![TargetPlatform.UNDEFINED, TargetPlatform.WEB].includes(\n\t\t\t\tthis.local.targetPlatform,\n\t\t\t) &&\n\t\t\tthis.gallery.properties.targetPlatform !== TargetPlatform.WEB &&\n\t\t\tthis.local.targetPlatform !==\n\t\t\t\tthis.gallery.properties.targetPlatform &&\n\t\t\tsemver.eq(this.latestVersion, this.version)\n\t\t);\n\t}\n\n\tget runtimeState(): ExtensionRuntimeState | undefined {\n\t\treturn this.runtimeStateProvider(this);\n\t}\n\n\tget telemetryData(): any {\n\t\tconst { local, gallery } = this;\n\n\t\tif (gallery) {\n\t\t\treturn getGalleryExtensionTelemetryData(gallery);\n\t\t} else if (local) {\n\t\t\treturn getLocalExtensionTelemetryData(local);\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tget preview(): boolean {\n\t\treturn this.local?.manifest.preview ?? this.gallery?.preview ?? false;\n\t}\n\n\tget preRelease(): boolean {\n\t\treturn !!this.local?.preRelease;\n\t}\n\n\tget isPreReleaseVersion(): boolean {\n\t\tif (this.local) {\n\t\t\treturn this.local.isPreReleaseVersion;\n\t\t}\n\t\treturn !!this.gallery?.properties.isPreReleaseVersion;\n\t}\n\n\tprivate _extensionEnabledWithPreRelease: boolean | undefined;\n\tget hasPreReleaseVersion(): boolean {\n\t\treturn (\n\t\t\t!!this.gallery?.hasPreReleaseVersion ||\n\t\t\t!!this.local?.hasPreReleaseVersion ||\n\t\t\t!!this._extensionEnabledWithPreRelease\n\t\t);\n\t}\n\n\tget hasReleaseVersion(): boolean {\n\t\treturn !!this.resourceExtension || !!this.gallery?.hasReleaseVersion;\n\t}\n\n\tprivate getLocal(): ILocalExtension | undefined {\n\t\treturn this.local && !this.outdated ? this.local : undefined;\n\t}\n\n\tasync getManifest(\n\t\ttoken: CancellationToken,\n\t): Promise<IExtensionManifest | null> {\n\t\tconst local = this.getLocal();\n\t\tif (local) {\n\t\t\treturn local.manifest;\n\t\t}\n\n\t\tif (this.gallery) {\n\t\t\treturn this.getGalleryManifest(token);\n\t\t}\n\n\t\tif (this.resourceExtension) {\n\t\t\treturn this.resourceExtension.manifest;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync getGalleryManifest(\n\t\ttoken: CancellationToken = CancellationToken.None,\n\t): Promise<IExtensionManifest | null> {\n\t\tif (this.gallery) {\n\t\t\tlet cache = this.galleryResourcesCache.get(\"manifest\");\n\t\t\tif (!cache) {\n\t\t\t\tif (this.gallery.assets.manifest) {\n\t\t\t\t\tthis.galleryResourcesCache.set(\n\t\t\t\t\t\t\"manifest\",\n\t\t\t\t\t\t(cache = this.galleryService\n\t\t\t\t\t\t\t.getManifest(this.gallery, token)\n\t\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\t\tthis.galleryResourcesCache.delete(\"manifest\");\n\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"Manifest is not found\",\n\t\t\t\t\t\t\t\"Manifest is not found\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis.identifier.id,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cache;\n\t\t}\n\t\treturn null;\n\t}\n\n\thasReadme(): boolean {\n\t\tif (this.local && this.local.readmeUrl) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.gallery && this.gallery.assets.readme) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.resourceExtension?.readmeUri) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.type === ExtensionType.System;\n\t}\n\n\tasync getReadme(token: CancellationToken): Promise<string> {\n\t\tconst local = this.getLocal();\n\t\tif (local?.readmeUrl) {\n\t\t\tconst content = await this.fileService.readFile(local.readmeUrl);\n\t\t\treturn content.value.toString();\n\t\t}\n\n\t\tif (this.gallery) {\n\t\t\tif (this.gallery.assets.readme) {\n\t\t\t\treturn this.galleryService.getReadme(this.gallery, token);\n\t\t\t}\n\t\t\tthis.telemetryService.publicLog(\n\t\t\t\t\"extensions:NotFoundReadMe\",\n\t\t\t\tthis.telemetryData,\n\t\t\t);\n\t\t}\n\n\t\tif (this.type === ExtensionType.System) {\n\t\t\treturn Promise.resolve(`# ${this.displayName || this.name}\n**Notice:** This extension is bundled with Visual Studio Code. It can be disabled but not uninstalled.\n## Features\n${this.description}\n`);\n\t\t}\n\n\t\tif (this.resourceExtension?.readmeUri) {\n\t\t\tconst content = await this.fileService.readFile(\n\t\t\t\tthis.resourceExtension?.readmeUri,\n\t\t\t);\n\t\t\treturn content.value.toString();\n\t\t}\n\n\t\treturn Promise.reject(new Error(\"not available\"));\n\t}\n\n\thasChangelog(): boolean {\n\t\tif (this.local && this.local.changelogUrl) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.gallery && this.gallery.assets.changelog) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.type === ExtensionType.System;\n\t}\n\n\tasync getChangelog(token: CancellationToken): Promise<string> {\n\t\tconst local = this.getLocal();\n\t\tif (local?.changelogUrl) {\n\t\t\tconst content = await this.fileService.readFile(local.changelogUrl);\n\t\t\treturn content.value.toString();\n\t\t}\n\n\t\tif (this.gallery?.assets.changelog) {\n\t\t\treturn this.galleryService.getChangelog(this.gallery, token);\n\t\t}\n\n\t\tif (this.type === ExtensionType.System) {\n\t\t\treturn Promise.resolve(\n\t\t\t\t`Please check the [VS Code Release Notes](command:${ShowCurrentReleaseNotesActionId}) for changes to the built-in extensions.`,\n\t\t\t);\n\t\t}\n\n\t\treturn Promise.reject(new Error(\"not available\"));\n\t}\n\n\tget categories(): readonly string[] {\n\t\tconst { local, gallery, resourceExtension } = this;\n\t\tif (local && local.manifest.categories && !this.outdated) {\n\t\t\treturn local.manifest.categories;\n\t\t}\n\t\tif (gallery) {\n\t\t\treturn gallery.categories;\n\t\t}\n\t\tif (resourceExtension) {\n\t\t\treturn resourceExtension.manifest.categories ?? [];\n\t\t}\n\t\treturn [];\n\t}\n\n\tget tags(): readonly string[] {\n\t\tconst { gallery } = this;\n\t\tif (gallery) {\n\t\t\treturn gallery.tags.filter((tag) => !tag.startsWith(\"_\"));\n\t\t}\n\t\treturn [];\n\t}\n\n\tget dependencies(): string[] {\n\t\tconst { local, gallery, resourceExtension } = this;\n\t\tif (local && local.manifest.extensionDependencies && !this.outdated) {\n\t\t\treturn local.manifest.extensionDependencies;\n\t\t}\n\t\tif (gallery) {\n\t\t\treturn gallery.properties.dependencies || [];\n\t\t}\n\t\tif (resourceExtension) {\n\t\t\treturn resourceExtension.manifest.extensionDependencies || [];\n\t\t}\n\t\treturn [];\n\t}\n\n\tget extensionPack(): string[] {\n\t\tconst { local, gallery, resourceExtension } = this;\n\t\tif (local && local.manifest.extensionPack && !this.outdated) {\n\t\t\treturn local.manifest.extensionPack;\n\t\t}\n\t\tif (gallery) {\n\t\t\treturn gallery.properties.extensionPack || [];\n\t\t}\n\t\tif (resourceExtension) {\n\t\t\treturn resourceExtension.manifest.extensionPack || [];\n\t\t}\n\t\treturn [];\n\t}\n\n\tsetExtensionsControlManifest(\n\t\textensionsControlManifest: IExtensionsControlManifest,\n\t): void {\n\t\tthis.isMalicious = extensionsControlManifest.malicious.some(\n\t\t\t(identifier) => areSameExtensions(this.identifier, identifier),\n\t\t);\n\t\tthis.deprecationInfo = extensionsControlManifest.deprecated\n\t\t\t? extensionsControlManifest.deprecated[\n\t\t\t\t\tthis.identifier.id.toLowerCase()\n\t\t\t\t]\n\t\t\t: undefined;\n\t\tthis._extensionEnabledWithPreRelease =\n\t\t\textensionsControlManifest?.extensionsEnabledWithPreRelease?.includes(\n\t\t\t\tthis.identifier.id.toLowerCase(),\n\t\t\t);\n\t}\n\n\tprivate getManifestFromLocalOrResource(): IExtensionManifest | null {\n\t\tif (this.local) {\n\t\t\treturn this.local.manifest;\n\t\t}\n\t\tif (this.resourceExtension) {\n\t\t\treturn this.resourceExtension.manifest;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nconst EXTENSIONS_AUTO_UPDATE_KEY = \"extensions.autoUpdate\";\nconst EXTENSIONS_DONOT_AUTO_UPDATE_KEY = \"extensions.donotAutoUpdate\";\n\nclass Extensions extends Disposable {\n\tprivate readonly _onChange = this._register(\n\t\tnew Emitter<\n\t\t\t{ extension: Extension; operation?: InstallOperation } | undefined\n\t\t>(),\n\t);\n\tget onChange() {\n\t\treturn this._onChange.event;\n\t}\n\n\tprivate readonly _onReset = this._register(new Emitter<void>());\n\tget onReset() {\n\t\treturn this._onReset.event;\n\t}\n\n\tprivate installing: Extension[] = [];\n\tprivate uninstalling: Extension[] = [];\n\tprivate installed: Extension[] = [];\n\n\tconstructor(\n\t\treadonly server: IExtensionManagementServer,\n\t\tprivate readonly stateProvider: IExtensionStateProvider<ExtensionState>,\n\t\tprivate readonly runtimeStateProvider: IExtensionStateProvider<\n\t\t\tExtensionRuntimeState | undefined\n\t\t>,\n\t\tprivate readonly isWorkspaceServer: boolean,\n\t\t@IExtensionGalleryService\n\t\tprivate readonly galleryService: IExtensionGalleryService,\n\t\t@IWorkbenchExtensionEnablementService\n\t\tprivate readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IWorkbenchExtensionManagementService\n\t\tprivate readonly workbenchExtensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@IUserDataProfileService\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tserver.extensionManagementService.onInstallExtension((e) =>\n\t\t\t\tthis.onInstallExtension(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tserver.extensionManagementService.onDidInstallExtensions((e) =>\n\t\t\t\tthis.onDidInstallExtensions(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tserver.extensionManagementService.onUninstallExtension((e) =>\n\t\t\t\tthis.onUninstallExtension(e.identifier),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tserver.extensionManagementService.onDidUninstallExtension((e) =>\n\t\t\t\tthis.onDidUninstallExtension(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tserver.extensionManagementService.onDidUpdateExtensionMetadata(\n\t\t\t\t(e) => this.onDidUpdateExtensionMetadata(e.local),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tserver.extensionManagementService.onDidChangeProfile(() =>\n\t\t\t\tthis.reset(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\textensionEnablementService.onEnablementChanged((e) =>\n\t\t\t\tthis.onEnablementChanged(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.any(\n\t\t\t\tthis.onChange,\n\t\t\t\tthis.onReset,\n\t\t\t)(() => (this._local = undefined)),\n\t\t);\n\t\tif (this.isWorkspaceServer) {\n\t\t\tthis._register(\n\t\t\t\tthis.workbenchExtensionManagementService.onInstallExtension(\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (e.workspaceScoped) {\n\t\t\t\t\t\t\tthis.onInstallExtension(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.workbenchExtensionManagementService.onDidInstallExtensions(\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tconst result = e.filter((e) => e.workspaceScoped);\n\t\t\t\t\t\tif (result.length) {\n\t\t\t\t\t\t\tthis.onDidInstallExtensions(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.workbenchExtensionManagementService.onUninstallExtension(\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (e.workspaceScoped) {\n\t\t\t\t\t\t\tthis.onUninstallExtension(e.identifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.workbenchExtensionManagementService.onDidUninstallExtension(\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (e.workspaceScoped) {\n\t\t\t\t\t\t\tthis.onDidUninstallExtension(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _local: IExtension[] | undefined;\n\tget local(): IExtension[] {\n\t\tif (!this._local) {\n\t\t\tthis._local = [];\n\t\t\tfor (const extension of this.installed) {\n\t\t\t\tthis._local.push(extension);\n\t\t\t}\n\t\t\tfor (const extension of this.installing) {\n\t\t\t\tif (\n\t\t\t\t\t!this.installed.some((installed) =>\n\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\tinstalled.identifier,\n\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis._local.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this._local;\n\t}\n\n\tasync queryInstalled(\n\t\tproductVersion: IProductVersion,\n\t): Promise<IExtension[]> {\n\t\tawait this.fetchInstalledExtensions(productVersion);\n\t\tthis._onChange.fire(undefined);\n\t\treturn this.local;\n\t}\n\n\tasync syncInstalledExtensionsWithGallery(\n\t\tgalleryExtensions: IGalleryExtension[],\n\t\tproductVersion: IProductVersion,\n\t): Promise<void> {\n\t\tconst extensions =\n\t\t\tawait this.mapInstalledExtensionWithCompatibleGalleryExtension(\n\t\t\t\tgalleryExtensions,\n\t\t\t\tproductVersion,\n\t\t\t);\n\t\tfor (const [extension, gallery] of extensions) {\n\t\t\t// update metadata of the extension if it does not exist\n\t\t\tif (extension.local && !extension.local.identifier.uuid) {\n\t\t\t\textension.local = await this.updateMetadata(\n\t\t\t\t\textension.local,\n\t\t\t\t\tgallery,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!extension.gallery ||\n\t\t\t\textension.gallery.version !== gallery.version ||\n\t\t\t\textension.gallery.properties.targetPlatform !==\n\t\t\t\t\tgallery.properties.targetPlatform\n\t\t\t) {\n\t\t\t\textension.gallery = gallery;\n\t\t\t\tthis._onChange.fire({ extension });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async mapInstalledExtensionWithCompatibleGalleryExtension(\n\t\tgalleryExtensions: IGalleryExtension[],\n\t\tproductVersion: IProductVersion,\n\t): Promise<[Extension, IGalleryExtension][]> {\n\t\tconst mappedExtensions =\n\t\t\tthis.mapInstalledExtensionWithGalleryExtension(galleryExtensions);\n\t\tconst targetPlatform =\n\t\t\tawait this.server.extensionManagementService.getTargetPlatform();\n\t\tconst compatibleGalleryExtensions: IGalleryExtension[] = [];\n\t\tconst compatibleGalleryExtensionsToFetch: IExtensionInfo[] = [];\n\t\tawait Promise.allSettled(\n\t\t\tmappedExtensions.map(async ([extension, gallery]) => {\n\t\t\t\tif (extension.local) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tawait this.galleryService.isExtensionCompatible(\n\t\t\t\t\t\t\tgallery,\n\t\t\t\t\t\t\textension.local.preRelease,\n\t\t\t\t\t\t\ttargetPlatform,\n\t\t\t\t\t\t\tproductVersion,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcompatibleGalleryExtensions.push(gallery);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcompatibleGalleryExtensionsToFetch.push({\n\t\t\t\t\t\t\t...extension.local.identifier,\n\t\t\t\t\t\t\tpreRelease: extension.local.preRelease,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tif (compatibleGalleryExtensionsToFetch.length) {\n\t\t\tconst result = await this.galleryService.getExtensions(\n\t\t\t\tcompatibleGalleryExtensionsToFetch,\n\t\t\t\t{\n\t\t\t\t\ttargetPlatform,\n\t\t\t\t\tcompatible: true,\n\t\t\t\t\tqueryAllVersions: true,\n\t\t\t\t\tproductVersion,\n\t\t\t\t},\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t\tcompatibleGalleryExtensions.push(...result);\n\t\t}\n\t\treturn this.mapInstalledExtensionWithGalleryExtension(\n\t\t\tcompatibleGalleryExtensions,\n\t\t);\n\t}\n\n\tprivate mapInstalledExtensionWithGalleryExtension(\n\t\tgalleryExtensions: IGalleryExtension[],\n\t): [Extension, IGalleryExtension][] {\n\t\tconst mappedExtensions: [Extension, IGalleryExtension][] = [];\n\t\tconst byUUID = new Map<string, IGalleryExtension>(),\n\t\t\tbyID = new Map<string, IGalleryExtension>();\n\t\tfor (const gallery of galleryExtensions) {\n\t\t\tbyUUID.set(gallery.identifier.uuid, gallery);\n\t\t\tbyID.set(gallery.identifier.id.toLowerCase(), gallery);\n\t\t}\n\t\tfor (const installed of this.installed) {\n\t\t\tif (installed.uuid) {\n\t\t\t\tconst gallery = byUUID.get(installed.uuid);\n\t\t\t\tif (gallery) {\n\t\t\t\t\tmappedExtensions.push([installed, gallery]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (installed.local?.source !== \"resource\") {\n\t\t\t\tconst gallery = byID.get(installed.identifier.id.toLowerCase());\n\t\t\t\tif (gallery) {\n\t\t\t\t\tmappedExtensions.push([installed, gallery]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mappedExtensions;\n\t}\n\n\tprivate async updateMetadata(\n\t\tlocalExtension: ILocalExtension,\n\t\tgallery: IGalleryExtension,\n\t): Promise<ILocalExtension> {\n\t\tlet isPreReleaseVersion = false;\n\t\tif (localExtension.manifest.version !== gallery.version) {\n\t\t\ttype GalleryServiceMatchInstalledExtensionClassification = {\n\t\t\t\towner: \"sandy081\";\n\t\t\t\tcomment: \"Report when a request is made to update metadata of an installed extension\";\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t{},\n\t\t\t\tGalleryServiceMatchInstalledExtensionClassification\n\t\t\t>(\"galleryService:updateMetadata\");\n\t\t\tconst galleryWithLocalVersion: IGalleryExtension | undefined = (\n\t\t\t\tawait this.galleryService.getExtensions(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...localExtension.identifier,\n\t\t\t\t\t\t\tversion: localExtension.manifest.version,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t)\n\t\t\t)[0];\n\t\t\tisPreReleaseVersion =\n\t\t\t\t!!galleryWithLocalVersion?.properties?.isPreReleaseVersion;\n\t\t}\n\t\treturn this.server.extensionManagementService.updateMetadata(\n\t\t\tlocalExtension,\n\t\t\t{\n\t\t\t\tid: gallery.identifier.uuid,\n\t\t\t\tpublisherDisplayName: gallery.publisherDisplayName,\n\t\t\t\tpublisherId: gallery.publisherId,\n\t\t\t\tisPreReleaseVersion,\n\t\t\t},\n\t\t\tthis.userDataProfileService.currentProfile.extensionsResource,\n\t\t);\n\t}\n\n\tcanInstall(galleryExtension: IGalleryExtension): Promise<boolean> {\n\t\treturn this.server.extensionManagementService.canInstall(\n\t\t\tgalleryExtension,\n\t\t);\n\t}\n\n\tprivate onInstallExtension(event: InstallExtensionEvent): void {\n\t\tconst { source } = event;\n\t\tif (source && !URI.isUri(source)) {\n\t\t\tconst extension =\n\t\t\t\tthis.installed.find((e) =>\n\t\t\t\t\tareSameExtensions(e.identifier, source.identifier),\n\t\t\t\t) ??\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tExtension,\n\t\t\t\t\tthis.stateProvider,\n\t\t\t\t\tthis.runtimeStateProvider,\n\t\t\t\t\tthis.server,\n\t\t\t\t\tundefined,\n\t\t\t\t\tsource,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\tthis.installing.push(extension);\n\t\t\tthis._onChange.fire({ extension });\n\t\t}\n\t}\n\n\tprivate async fetchInstalledExtensions(\n\t\tproductVersion?: IProductVersion,\n\t): Promise<void> {\n\t\tconst extensionsControlManifest =\n\t\t\tawait this.server.extensionManagementService.getExtensionsControlManifest();\n\t\tconst all = await this.server.extensionManagementService.getInstalled(\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tproductVersion,\n\t\t);\n\t\tif (this.isWorkspaceServer) {\n\t\t\tall.push(\n\t\t\t\t...(await this.workbenchExtensionManagementService.getInstalledWorkspaceExtensions(\n\t\t\t\t\ttrue,\n\t\t\t\t)),\n\t\t\t);\n\t\t}\n\n\t\t// dedup workspace, user and system extensions by giving priority to workspace first and then to user extension.\n\t\tconst installed = groupByExtension(all, (r) => r.identifier).reduce(\n\t\t\t(result, extensions) => {\n\t\t\t\tif (extensions.length === 1) {\n\t\t\t\t\tresult.push(extensions[0]);\n\t\t\t\t} else {\n\t\t\t\t\tlet workspaceExtension: ILocalExtension | undefined,\n\t\t\t\t\t\tuserExtension: ILocalExtension | undefined,\n\t\t\t\t\t\tsystemExtension: ILocalExtension | undefined;\n\t\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\t\tif (extension.isWorkspaceScoped) {\n\t\t\t\t\t\t\tworkspaceExtension = extension;\n\t\t\t\t\t\t} else if (extension.type === ExtensionType.User) {\n\t\t\t\t\t\t\tuserExtension = extension;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsystemExtension = extension;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst extension =\n\t\t\t\t\t\tworkspaceExtension ?? userExtension ?? systemExtension;\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tresult.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t[],\n\t\t);\n\n\t\tconst byId = index(this.installed, (e) =>\n\t\t\te.local ? e.local.identifier.id : e.identifier.id,\n\t\t);\n\t\tthis.installed = installed.map((local) => {\n\t\t\tconst extension =\n\t\t\t\tbyId[local.identifier.id] ||\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tExtension,\n\t\t\t\t\tthis.stateProvider,\n\t\t\t\t\tthis.runtimeStateProvider,\n\t\t\t\t\tthis.server,\n\t\t\t\t\tlocal,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\textension.local = local;\n\t\t\textension.enablementState =\n\t\t\t\tthis.extensionEnablementService.getEnablementState(local);\n\t\t\textension.setExtensionsControlManifest(extensionsControlManifest);\n\t\t\treturn extension;\n\t\t});\n\t}\n\n\tprivate async reset(): Promise<void> {\n\t\tthis.installed = [];\n\t\tthis.installing = [];\n\t\tthis.uninstalling = [];\n\t\tawait this.fetchInstalledExtensions();\n\t\tthis._onReset.fire();\n\t}\n\n\tprivate async onDidInstallExtensions(\n\t\tresults: readonly InstallExtensionResult[],\n\t): Promise<void> {\n\t\tfor (const event of results) {\n\t\t\tconst { local, source } = event;\n\t\t\tconst gallery = source && !URI.isUri(source) ? source : undefined;\n\t\t\tconst location = source && URI.isUri(source) ? source : undefined;\n\t\t\tconst installingExtension = gallery\n\t\t\t\t? this.installing.filter((e) =>\n\t\t\t\t\t\tareSameExtensions(e.identifier, gallery.identifier),\n\t\t\t\t\t)[0]\n\t\t\t\t: null;\n\t\t\tthis.installing = installingExtension\n\t\t\t\t? this.installing.filter((e) => e !== installingExtension)\n\t\t\t\t: this.installing;\n\n\t\t\tlet extension: Extension | undefined = installingExtension\n\t\t\t\t? installingExtension\n\t\t\t\t: location || local\n\t\t\t\t\t? this.instantiationService.createInstance(\n\t\t\t\t\t\t\tExtension,\n\t\t\t\t\t\t\tthis.stateProvider,\n\t\t\t\t\t\t\tthis.runtimeStateProvider,\n\t\t\t\t\t\t\tthis.server,\n\t\t\t\t\t\t\tlocal,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t)\n\t\t\t\t\t: undefined;\n\t\t\tif (extension) {\n\t\t\t\tif (local) {\n\t\t\t\t\tconst installed = this.installed.filter((e) =>\n\t\t\t\t\t\tareSameExtensions(e.identifier, extension!.identifier),\n\t\t\t\t\t)[0];\n\t\t\t\t\tif (installed) {\n\t\t\t\t\t\textension = installed;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.installed.push(extension);\n\t\t\t\t\t}\n\t\t\t\t\textension.local = local;\n\t\t\t\t\tif (!extension.gallery) {\n\t\t\t\t\t\textension.gallery = gallery;\n\t\t\t\t\t}\n\t\t\t\t\textension.setExtensionsControlManifest(\n\t\t\t\t\t\tawait this.server.extensionManagementService.getExtensionsControlManifest(),\n\t\t\t\t\t);\n\t\t\t\t\textension.enablementState =\n\t\t\t\t\t\tthis.extensionEnablementService.getEnablementState(\n\t\t\t\t\t\t\tlocal,\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onChange.fire(\n\t\t\t\t!local || !extension\n\t\t\t\t\t? undefined\n\t\t\t\t\t: { extension, operation: event.operation },\n\t\t\t);\n\t\t\tif (\n\t\t\t\textension &&\n\t\t\t\textension.local &&\n\t\t\t\t!extension.gallery &&\n\t\t\t\textension.local.source !== \"resource\"\n\t\t\t) {\n\t\t\t\tawait this.syncInstalledExtensionWithGallery(extension);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async onDidUpdateExtensionMetadata(\n\t\tlocal: ILocalExtension,\n\t): Promise<void> {\n\t\tconst extension = this.installed.find((e) =>\n\t\t\tareSameExtensions(e.identifier, local.identifier),\n\t\t);\n\t\tif (extension?.local) {\n\t\t\tconst hasChanged =\n\t\t\t\textension.local.pinned !== local.pinned ||\n\t\t\t\textension.local.preRelease !== local.preRelease;\n\t\t\textension.local = local;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis._onChange.fire({ extension });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async syncInstalledExtensionWithGallery(\n\t\textension: Extension,\n\t): Promise<void> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\ttype GalleryServiceMatchInstalledExtensionClassification = {\n\t\t\towner: \"sandy081\";\n\t\t\tcomment: \"Report when a request is made to match installed extension with gallery\";\n\t\t};\n\t\tthis.telemetryService.publicLog2<\n\t\t\t{},\n\t\t\tGalleryServiceMatchInstalledExtensionClassification\n\t\t>(\"galleryService:matchInstalledExtension\");\n\t\tconst [compatible] = await this.galleryService.getExtensions(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t...extension.identifier,\n\t\t\t\t\tpreRelease: extension.local?.preRelease,\n\t\t\t\t},\n\t\t\t],\n\t\t\t{\n\t\t\t\tcompatible: true,\n\t\t\t\ttargetPlatform:\n\t\t\t\t\tawait this.server.extensionManagementService.getTargetPlatform(),\n\t\t\t},\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tif (compatible) {\n\t\t\textension.gallery = compatible;\n\t\t\tthis._onChange.fire({ extension });\n\t\t}\n\t}\n\n\tprivate onUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tconst extension = this.installed.filter((e) =>\n\t\t\tareSameExtensions(e.identifier, identifier),\n\t\t)[0];\n\t\tif (extension) {\n\t\t\tconst uninstalling =\n\t\t\t\tthis.uninstalling.filter((e) =>\n\t\t\t\t\tareSameExtensions(e.identifier, identifier),\n\t\t\t\t)[0] || extension;\n\t\t\tthis.uninstalling = [\n\t\t\t\tuninstalling,\n\t\t\t\t...this.uninstalling.filter(\n\t\t\t\t\t(e) => !areSameExtensions(e.identifier, identifier),\n\t\t\t\t),\n\t\t\t];\n\t\t\tthis._onChange.fire(\n\t\t\t\tuninstalling ? { extension: uninstalling } : undefined,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension({\n\t\tidentifier,\n\t\terror,\n\t}: DidUninstallExtensionEvent): void {\n\t\tconst uninstalled =\n\t\t\tthis.uninstalling.find((e) =>\n\t\t\t\tareSameExtensions(e.identifier, identifier),\n\t\t\t) ||\n\t\t\tthis.installed.find((e) =>\n\t\t\t\tareSameExtensions(e.identifier, identifier),\n\t\t\t);\n\t\tthis.uninstalling = this.uninstalling.filter(\n\t\t\t(e) => !areSameExtensions(e.identifier, identifier),\n\t\t);\n\t\tif (!error) {\n\t\t\tthis.installed = this.installed.filter(\n\t\t\t\t(e) => !areSameExtensions(e.identifier, identifier),\n\t\t\t);\n\t\t}\n\t\tif (uninstalled) {\n\t\t\tthis._onChange.fire({ extension: uninstalled });\n\t\t}\n\t}\n\n\tprivate onEnablementChanged(\n\t\tplatformExtensions: readonly IPlatformExtension[],\n\t) {\n\t\tconst extensions = this.local.filter((e) =>\n\t\t\tplatformExtensions.some((p) =>\n\t\t\t\tareSameExtensions(e.identifier, p.identifier),\n\t\t\t),\n\t\t);\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension.local) {\n\t\t\t\tconst enablementState =\n\t\t\t\t\tthis.extensionEnablementService.getEnablementState(\n\t\t\t\t\t\textension.local,\n\t\t\t\t\t);\n\t\t\t\tif (enablementState !== extension.enablementState) {\n\t\t\t\t\t(extension as Extension).enablementState = enablementState;\n\t\t\t\t\tthis._onChange.fire({ extension: extension as Extension });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetExtensionState(extension: Extension): ExtensionState {\n\t\tif (\n\t\t\textension.gallery &&\n\t\t\tthis.installing.some(\n\t\t\t\t(e) =>\n\t\t\t\t\t!!e.gallery &&\n\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\te.gallery.identifier,\n\t\t\t\t\t\textension.gallery!.identifier,\n\t\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\treturn ExtensionState.Installing;\n\t\t}\n\t\tif (\n\t\t\tthis.uninstalling.some((e) =>\n\t\t\t\tareSameExtensions(e.identifier, extension.identifier),\n\t\t\t)\n\t\t) {\n\t\t\treturn ExtensionState.Uninstalling;\n\t\t}\n\t\tconst local = this.installed.filter(\n\t\t\t(e) =>\n\t\t\t\te === extension ||\n\t\t\t\t(e.gallery &&\n\t\t\t\t\textension.gallery &&\n\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\te.gallery.identifier,\n\t\t\t\t\t\textension.gallery.identifier,\n\t\t\t\t\t)),\n\t\t)[0];\n\t\treturn local ? ExtensionState.Installed : ExtensionState.Uninstalled;\n\t}\n}\n\nexport class ExtensionsWorkbenchService\n\textends Disposable\n\timplements IExtensionsWorkbenchService, IURLHandler\n{\n\tprivate static readonly UpdatesCheckInterval = 1000 * 60 * 60 * 12; // 12 hours\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate hasOutdatedExtensionsContextKey: IContextKey<boolean>;\n\n\tprivate readonly localExtensions: Extensions | null = null;\n\tprivate readonly remoteExtensions: Extensions | null = null;\n\tprivate readonly webExtensions: Extensions | null = null;\n\tprivate readonly extensionsServers: Extensions[] = [];\n\n\tprivate updatesCheckDelayer: ThrottledDelayer<void>;\n\tprivate autoUpdateDelayer: ThrottledDelayer<void>;\n\n\tprivate readonly _onChange = this._register(\n\t\tnew Emitter<IExtension | undefined>(),\n\t);\n\tget onChange(): Event<IExtension | undefined> {\n\t\treturn this._onChange.event;\n\t}\n\n\tprivate extensionsNotification: IExtensionsNotification | undefined;\n\tprivate dismissedNotifications: string[] = [];\n\tprivate readonly _onDidChangeExtensionsNotification = new Emitter<\n\t\tIExtensionsNotification | undefined\n\t>();\n\treadonly onDidChangeExtensionsNotification =\n\t\tthis._onDidChangeExtensionsNotification.event;\n\n\tprivate readonly _onReset = new Emitter<void>();\n\tget onReset() {\n\t\treturn this._onReset.event;\n\t}\n\n\treadonly preferPreReleases = this.productService.quality !== \"stable\";\n\n\tprivate installing: IExtension[] = [];\n\tprivate tasksInProgress: CancelablePromise<any>[] = [];\n\n\treadonly whenInitialized: Promise<void>;\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IWorkbenchExtensionManagementService\n\t\tprivate readonly extensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@IExtensionGalleryService\n\t\tprivate readonly galleryService: IExtensionGalleryService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@IURLService urlService: IURLService,\n\t\t@IWorkbenchExtensionEnablementService\n\t\tprivate readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IExtensionManagementServerService\n\t\tprivate readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IIgnoredExtensionsManagementService\n\t\tprivate readonly extensionsSyncManagementService: IIgnoredExtensionsManagementService,\n\t\t@IUserDataAutoSyncService\n\t\tprivate readonly userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionManifestPropertiesService\n\t\tprivate readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@ILocaleService private readonly localeService: ILocaleService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataProfileService\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUpdateService private readonly updateService: IUpdateService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t) {\n\t\tsuper();\n\t\tconst preferPreReleasesValue = configurationService.getValue(\n\t\t\t\"_extensions.preferPreReleases\",\n\t\t);\n\t\tif (!isUndefined(preferPreReleasesValue)) {\n\t\t\tthis.preferPreReleases = !!preferPreReleasesValue;\n\t\t}\n\t\tthis.hasOutdatedExtensionsContextKey =\n\t\t\tHasOutdatedExtensionsContext.bindTo(contextKeyService);\n\t\tif (extensionManagementServerService.localExtensionManagementServer) {\n\t\t\tthis.localExtensions = this._register(\n\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\tExtensions,\n\t\t\t\t\textensionManagementServerService.localExtensionManagementServer,\n\t\t\t\t\t(ext) => this.getExtensionState(ext),\n\t\t\t\t\t(ext) => this.getRuntimeState(ext),\n\t\t\t\t\t!extensionManagementServerService.remoteExtensionManagementServer,\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.localExtensions.onChange((e) =>\n\t\t\t\t\tthis.onDidChangeExtensions(e?.extension),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(this.localExtensions.onReset((e) => this.reset()));\n\t\t\tthis.extensionsServers.push(this.localExtensions);\n\t\t}\n\t\tif (extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tthis.remoteExtensions = this._register(\n\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\tExtensions,\n\t\t\t\t\textensionManagementServerService.remoteExtensionManagementServer,\n\t\t\t\t\t(ext) => this.getExtensionState(ext),\n\t\t\t\t\t(ext) => this.getRuntimeState(ext),\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.remoteExtensions.onChange((e) =>\n\t\t\t\t\tthis.onDidChangeExtensions(e?.extension),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(this.remoteExtensions.onReset((e) => this.reset()));\n\t\t\tthis.extensionsServers.push(this.remoteExtensions);\n\t\t}\n\t\tif (extensionManagementServerService.webExtensionManagementServer) {\n\t\t\tthis.webExtensions = this._register(\n\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\tExtensions,\n\t\t\t\t\textensionManagementServerService.webExtensionManagementServer,\n\t\t\t\t\t(ext) => this.getExtensionState(ext),\n\t\t\t\t\t(ext) => this.getRuntimeState(ext),\n\t\t\t\t\t!(\n\t\t\t\t\t\textensionManagementServerService.remoteExtensionManagementServer ||\n\t\t\t\t\t\textensionManagementServerService.localExtensionManagementServer\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.webExtensions.onChange((e) =>\n\t\t\t\t\tthis.onDidChangeExtensions(e?.extension),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(this.webExtensions.onReset((e) => this.reset()));\n\t\t\tthis.extensionsServers.push(this.webExtensions);\n\t\t}\n\n\t\tthis.updatesCheckDelayer = new ThrottledDelayer<void>(\n\t\t\tExtensionsWorkbenchService.UpdatesCheckInterval,\n\t\t);\n\t\tthis.autoUpdateDelayer = new ThrottledDelayer<void>(1000);\n\t\tthis._register(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.updatesCheckDelayer.cancel();\n\t\t\t\tthis.autoUpdateDelayer.cancel();\n\t\t\t}),\n\t\t);\n\n\t\turlService.registerHandler(this);\n\n\t\tif (this.productService.quality !== \"stable\") {\n\t\t\tthis.registerAutoRestartConfig();\n\t\t}\n\n\t\tthis.whenInitialized = this.initialize();\n\t}\n\n\tprivate registerAutoRestartConfig(): void {\n\t\tRegistry.as<IConfigurationRegistry>(\n\t\t\tConfigurationExtensions.Configuration,\n\t\t).registerConfiguration({\n\t\t\t...extensionsConfigurationNodeBase,\n\t\t\tproperties: {\n\t\t\t\t[AutoRestartConfigurationKey]: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"autoRestart\",\n\t\t\t\t\t\t\"If activated, extensions will automatically restart following an update if the window is not in focus. There can be a data loss if you have open Notebooks or Custom Editors.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: false,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\t// initialize local extensions\n\t\tawait Promise.all([\n\t\t\tthis.queryLocal(),\n\t\t\tthis.extensionService.whenInstalledExtensionsRegistered(),\n\t\t]);\n\t\tif (this._store.isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.onDidChangeRunningExtensions(this.extensionService.extensions, []);\n\t\tthis._register(\n\t\t\tthis.extensionService.onDidChangeExtensions(({ added, removed }) =>\n\t\t\t\tthis.onDidChangeRunningExtensions(added, removed),\n\t\t\t),\n\t\t);\n\n\t\tawait this.lifecycleService.when(LifecyclePhase.Eventually);\n\t\tif (this._store.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initializeAutoUpdate();\n\t\tthis.updateExtensionsNotificaiton();\n\t\tthis.reportInstalledExtensionsTelemetry();\n\t\tthis._register(\n\t\t\tthis.storageService.onDidChangeValue(\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tEXTENSIONS_AUTO_UPDATE_KEY,\n\t\t\t\tthis._store,\n\t\t\t)((e) => this.onDidSelectedExtensionToAutoUpdateValueChange()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.storageService.onDidChangeValue(\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tEXTENSIONS_DONOT_AUTO_UPDATE_KEY,\n\t\t\t\tthis._store,\n\t\t\t)((e) => this.onDidSelectedExtensionToAutoUpdateValueChange()),\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.debounce(\n\t\t\t\tthis.onChange,\n\t\t\t\t() => undefined,\n\t\t\t\t100,\n\t\t\t)(() => {\n\t\t\t\tthis.updateExtensionsNotificaiton();\n\t\t\t\tthis.reportProgressFromOtherSources();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate initializeAutoUpdate(): void {\n\t\t// Register listeners for auto updates\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(AutoUpdateConfigurationKey)) {\n\t\t\t\t\tif (this.isAutoUpdateEnabled()) {\n\t\t\t\t\t\tthis.eventuallyAutoUpdateExtensions();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(AutoCheckUpdatesConfigurationKey)) {\n\t\t\t\t\tif (this.isAutoCheckUpdatesEnabled()) {\n\t\t\t\t\t\tthis.checkForUpdates();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.extensionEnablementService.onEnablementChanged(\n\t\t\t\t(platformExtensions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.getAutoUpdateValue() === \"onlyEnabledExtensions\" &&\n\t\t\t\t\t\tplatformExtensions.some((e) =>\n\t\t\t\t\t\t\tthis.extensionEnablementService.isEnabled(e),\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.checkForUpdates();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.debounce(\n\t\t\t\tthis.onChange,\n\t\t\t\t() => undefined,\n\t\t\t\t100,\n\t\t\t)(() =>\n\t\t\t\tthis.hasOutdatedExtensionsContextKey.set(\n\t\t\t\t\tthis.outdated.length > 0,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.updateService.onStateChange((e) => {\n\t\t\t\tif (\n\t\t\t\t\t(e.type === StateType.CheckingForUpdates && e.explicit) ||\n\t\t\t\t\te.type === StateType.AvailableForDownload ||\n\t\t\t\t\te.type === StateType.Downloaded\n\t\t\t\t) {\n\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\towner: \"sandy081\";\n\t\t\t\t\t\t\tcomment: \"Report when update check is triggered on product update\";\n\t\t\t\t\t\t}\n\t\t\t\t\t>(\"extensions:updatecheckonproductupdate\");\n\t\t\t\t\tif (this.isAutoCheckUpdatesEnabled()) {\n\t\t\t\t\t\tthis.checkForUpdates();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Update AutoUpdate Contexts\n\t\tthis.hasOutdatedExtensionsContextKey.set(this.outdated.length > 0);\n\n\t\t// Check for updates\n\t\tthis.eventuallyCheckForUpdates(true);\n\n\t\tif (isWeb) {\n\t\t\tthis.syncPinnedBuiltinExtensions();\n\t\t\t// Always auto update builtin extensions in web\n\t\t\tif (!this.isAutoUpdateEnabled()) {\n\t\t\t\tthis.autoUpdateBuiltinExtensions();\n\t\t\t}\n\t\t}\n\n\t\tthis.registerAutoRestartListener();\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(AutoRestartConfigurationKey)) {\n\t\t\t\t\tthis.registerAutoRestartListener();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate isAutoUpdateEnabled(): boolean {\n\t\treturn this.getAutoUpdateValue() !== false;\n\t}\n\n\tgetAutoUpdateValue(): AutoUpdateConfigurationValue {\n\t\tconst autoUpdate =\n\t\t\tthis.configurationService.getValue<AutoUpdateConfigurationValue>(\n\t\t\t\tAutoUpdateConfigurationKey,\n\t\t\t);\n\t\tif (<any>autoUpdate === \"onlySelectedExtensions\") {\n\t\t\treturn false;\n\t\t}\n\t\treturn isBoolean(autoUpdate) || autoUpdate === \"onlyEnabledExtensions\"\n\t\t\t? autoUpdate\n\t\t\t: true;\n\t}\n\n\tasync updateAutoUpdateForAllExtensions(\n\t\tisAutoUpdateEnabled: boolean,\n\t): Promise<void> {\n\t\tconst wasAutoUpdateEnabled = this.isAutoUpdateEnabled();\n\t\tif (wasAutoUpdateEnabled === isAutoUpdateEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await this.dialogService.confirm({\n\t\t\ttitle: nls.localize(\n\t\t\t\t\"confirmEnableDisableAutoUpdate\",\n\t\t\t\t\"Auto Update Extensions\",\n\t\t\t),\n\t\t\tmessage: isAutoUpdateEnabled\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"confirmEnableAutoUpdate\",\n\t\t\t\t\t\t\"Do you want to enable auto update for all extensions?\",\n\t\t\t\t\t)\n\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\"confirmDisableAutoUpdate\",\n\t\t\t\t\t\t\"Do you want to disable auto update for all extensions?\",\n\t\t\t\t\t),\n\t\t\tdetail: nls.localize(\n\t\t\t\t\"confirmEnableDisableAutoUpdateDetail\",\n\t\t\t\t\"This will reset any auto update settings you have set for individual extensions.\",\n\t\t\t),\n\t\t});\n\t\tif (!result.confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset extensions enabled for auto update first to prevent them from being updated\n\t\tthis.setEnabledAutoUpdateExtensions([]);\n\n\t\tawait this.configurationService.updateValue(\n\t\t\tAutoUpdateConfigurationKey,\n\t\t\tisAutoUpdateEnabled,\n\t\t);\n\n\t\tthis.setDisabledAutoUpdateExtensions([]);\n\t\tawait this.updateExtensionsPinnedState(!isAutoUpdateEnabled);\n\t\tthis._onChange.fire(undefined);\n\t}\n\n\tprivate readonly autoRestartListenerDisposable = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\tprivate registerAutoRestartListener(): void {\n\t\tthis.autoRestartListenerDisposable.value = undefined;\n\t\tif (\n\t\t\tthis.configurationService.getValue(AutoRestartConfigurationKey) ===\n\t\t\ttrue\n\t\t) {\n\t\t\tthis.autoRestartListenerDisposable.value =\n\t\t\t\tthis.hostService.onDidChangeFocus((focus) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!focus &&\n\t\t\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\t\t\tAutoRestartConfigurationKey,\n\t\t\t\t\t\t) === true\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.updateRunningExtensions(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprivate reportInstalledExtensionsTelemetry() {\n\t\tconst extensionIds = this.installed\n\t\t\t.filter(\n\t\t\t\t(extension) =>\n\t\t\t\t\t!extension.isBuiltin &&\n\t\t\t\t\t(extension.enablementState ===\n\t\t\t\t\t\tEnablementState.EnabledWorkspace ||\n\t\t\t\t\t\textension.enablementState ===\n\t\t\t\t\t\t\tEnablementState.EnabledGlobally),\n\t\t\t)\n\t\t\t.map((extension) =>\n\t\t\t\tExtensionIdentifier.toKey(extension.identifier.id),\n\t\t\t);\n\t\tthis.telemetryService.publicLog2<\n\t\t\tInstalledExtensionsEvent,\n\t\t\tExtensionsLoadClassification\n\t\t>(\"installedExtensions\", {\n\t\t\textensionIds: new TelemetryTrustedValue(extensionIds.join(\";\")),\n\t\t\tcount: extensionIds.length,\n\t\t});\n\t}\n\n\tprivate async onDidChangeRunningExtensions(\n\t\tadded: ReadonlyArray<IExtensionDescription>,\n\t\tremoved: ReadonlyArray<IExtensionDescription>,\n\t): Promise<void> {\n\t\tconst changedExtensions: IExtension[] = [];\n\t\tconst extensionsToFetch: IExtensionDescription[] = [];\n\t\tfor (const desc of added) {\n\t\t\tconst extension = this.installed.find((e) =>\n\t\t\t\tareSameExtensions(\n\t\t\t\t\t{ id: desc.identifier.value, uuid: desc.uuid },\n\t\t\t\t\te.identifier,\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (extension) {\n\t\t\t\tchangedExtensions.push(extension);\n\t\t\t} else {\n\t\t\t\textensionsToFetch.push(desc);\n\t\t\t}\n\t\t}\n\t\tconst workspaceExtensions: IExtensionDescription[] = [];\n\t\tfor (const desc of removed) {\n\t\t\tif (\n\t\t\t\tthis.workspaceContextService.isInsideWorkspace(\n\t\t\t\t\tdesc.extensionLocation,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tworkspaceExtensions.push(desc);\n\t\t\t} else {\n\t\t\t\textensionsToFetch.push(desc);\n\t\t\t}\n\t\t}\n\t\tif (extensionsToFetch.length) {\n\t\t\tconst extensions = await this.getExtensions(\n\t\t\t\textensionsToFetch.map((e) => ({\n\t\t\t\t\tid: e.identifier.value,\n\t\t\t\t\tuuid: e.uuid,\n\t\t\t\t})),\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t\tchangedExtensions.push(...extensions);\n\t\t}\n\t\tif (workspaceExtensions.length) {\n\t\t\tconst extensions = await this.getResourceExtensions(\n\t\t\t\tworkspaceExtensions.map((e) => e.extensionLocation),\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\tchangedExtensions.push(...extensions);\n\t\t}\n\t\tfor (const changedExtension of changedExtensions) {\n\t\t\tthis._onChange.fire(changedExtension);\n\t\t}\n\t}\n\n\tprivate updateExtensionsPinnedState(pinned: boolean): Promise<void> {\n\t\treturn this.progressService.withProgress(\n\t\t\t{\n\t\t\t\tlocation: ProgressLocation.Extensions,\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\"updatingExtensions\",\n\t\t\t\t\t\"Updating Extensions Auto Update State\",\n\t\t\t\t),\n\t\t\t},\n\t\t\t() =>\n\t\t\t\tthis.extensionManagementService.resetPinnedStateForAllUserExtensions(\n\t\t\t\t\tpinned,\n\t\t\t\t),\n\t\t);\n\t}\n\n\tprivate reset(): void {\n\t\tfor (const task of this.tasksInProgress) {\n\t\t\ttask.cancel();\n\t\t}\n\t\tthis.tasksInProgress = [];\n\t\tthis.installing = [];\n\t\tthis.onDidChangeExtensions();\n\t\tthis._onReset.fire();\n\t}\n\n\tprivate onDidChangeExtensions(extension?: IExtension): void {\n\t\tthis._installed = undefined;\n\t\tthis._local = undefined;\n\t\tthis._onChange.fire(extension);\n\t}\n\n\tprivate _local: IExtension[] | undefined;\n\tget local(): IExtension[] {\n\t\tif (!this._local) {\n\t\t\tif (this.extensionsServers.length === 1) {\n\t\t\t\tthis._local = this.installed;\n\t\t\t} else {\n\t\t\t\tthis._local = [];\n\t\t\t\tconst byId = groupByExtension(\n\t\t\t\t\tthis.installed,\n\t\t\t\t\t(r) => r.identifier,\n\t\t\t\t);\n\t\t\t\tfor (const extensions of byId) {\n\t\t\t\t\tthis._local.push(this.getPrimaryExtension(extensions));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this._local;\n\t}\n\n\tprivate _installed: IExtension[] | undefined;\n\tget installed(): IExtension[] {\n\t\tif (!this._installed) {\n\t\t\tthis._installed = [];\n\t\t\tfor (const extensions of this.extensionsServers) {\n\t\t\t\tfor (const extension of extensions.local) {\n\t\t\t\t\tthis._installed.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this._installed;\n\t}\n\n\tget outdated(): IExtension[] {\n\t\treturn this.installed.filter(\n\t\t\t(e) =>\n\t\t\t\te.outdated && e.local && e.state === ExtensionState.Installed,\n\t\t);\n\t}\n\n\tasync queryLocal(\n\t\tserver?: IExtensionManagementServer,\n\t): Promise<IExtension[]> {\n\t\tif (server) {\n\t\t\tif (\n\t\t\t\tthis.localExtensions &&\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.localExtensionManagementServer === server\n\t\t\t) {\n\t\t\t\treturn this.localExtensions.queryInstalled(\n\t\t\t\t\tthis.getProductVersion(),\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.remoteExtensions &&\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.remoteExtensionManagementServer === server\n\t\t\t) {\n\t\t\t\treturn this.remoteExtensions.queryInstalled(\n\t\t\t\t\tthis.getProductVersion(),\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.webExtensions &&\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.webExtensionManagementServer === server\n\t\t\t) {\n\t\t\t\treturn this.webExtensions.queryInstalled(\n\t\t\t\t\tthis.getProductVersion(),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (this.localExtensions) {\n\t\t\ttry {\n\t\t\t\tawait this.localExtensions.queryInstalled(\n\t\t\t\t\tthis.getProductVersion(),\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\ttry {\n\t\t\t\tawait this.remoteExtensions.queryInstalled(\n\t\t\t\t\tthis.getProductVersion(),\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\ttry {\n\t\t\t\tawait this.webExtensions.queryInstalled(\n\t\t\t\t\tthis.getProductVersion(),\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\treturn this.local;\n\t}\n\n\tqueryGallery(token: CancellationToken): Promise<IPager<IExtension>>;\n\tqueryGallery(\n\t\toptions: IQueryOptions,\n\t\ttoken: CancellationToken,\n\t): Promise<IPager<IExtension>>;\n\tasync queryGallery(arg1: any, arg2?: any): Promise<IPager<IExtension>> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn singlePagePager([]);\n\t\t}\n\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(\n\t\t\targ1,\n\t\t)\n\t\t\t? {}\n\t\t\t: arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(\n\t\t\targ1,\n\t\t)\n\t\t\t? arg1\n\t\t\t: arg2;\n\t\toptions.text = options.text\n\t\t\t? this.resolveQueryText(options.text)\n\t\t\t: options.text;\n\t\toptions.includePreRelease = isUndefined(options.includePreRelease)\n\t\t\t? this.preferPreReleases\n\t\t\t: options.includePreRelease;\n\n\t\tconst extensionsControlManifest =\n\t\t\tawait this.extensionManagementService.getExtensionsControlManifest();\n\t\tconst pager = await this.galleryService.query(options, token);\n\t\tthis.syncInstalledExtensionsWithGallery(pager.firstPage);\n\t\treturn {\n\t\t\tfirstPage: pager.firstPage.map((gallery) =>\n\t\t\t\tthis.fromGallery(gallery, extensionsControlManifest),\n\t\t\t),\n\t\t\ttotal: pager.total,\n\t\t\tpageSize: pager.pageSize,\n\t\t\tgetPage: async (pageIndex, token) => {\n\t\t\t\tconst page = await pager.getPage(pageIndex, token);\n\t\t\t\tthis.syncInstalledExtensionsWithGallery(page);\n\t\t\t\treturn page.map((gallery) =>\n\t\t\t\t\tthis.fromGallery(gallery, extensionsControlManifest),\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetExtensions(\n\t\textensionInfos: IExtensionInfo[],\n\t\ttoken: CancellationToken,\n\t): Promise<IExtension[]>;\n\tgetExtensions(\n\t\textensionInfos: IExtensionInfo[],\n\t\toptions: IExtensionQueryOptions,\n\t\ttoken: CancellationToken,\n\t): Promise<IExtension[]>;\n\tasync getExtensions(\n\t\textensionInfos: IExtensionInfo[],\n\t\targ1: any,\n\t\targ2?: any,\n\t): Promise<IExtension[]> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn [];\n\t\t}\n\n\t\textensionInfos.forEach(\n\t\t\t(e) => (e.preRelease = e.preRelease ?? this.preferPreReleases),\n\t\t);\n\t\tconst extensionsControlManifest =\n\t\t\tawait this.extensionManagementService.getExtensionsControlManifest();\n\t\tconst galleryExtensions = await this.galleryService.getExtensions(\n\t\t\textensionInfos,\n\t\t\targ1,\n\t\t\targ2,\n\t\t);\n\t\tthis.syncInstalledExtensionsWithGallery(galleryExtensions);\n\t\treturn galleryExtensions.map((gallery) =>\n\t\t\tthis.fromGallery(gallery, extensionsControlManifest),\n\t\t);\n\t}\n\n\tasync getResourceExtensions(\n\t\tlocations: URI[],\n\t\tisWorkspaceScoped: boolean,\n\t): Promise<IExtension[]> {\n\t\tconst resourceExtensions =\n\t\t\tawait this.extensionManagementService.getExtensions(locations);\n\t\treturn resourceExtensions.map(\n\t\t\t(resourceExtension) =>\n\t\t\t\tthis.getInstalledExtensionMatchingLocation(\n\t\t\t\t\tresourceExtension.location,\n\t\t\t\t) ??\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tExtension,\n\t\t\t\t\t(ext) => this.getExtensionState(ext),\n\t\t\t\t\t(ext) => this.getRuntimeState(ext),\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\t{ resourceExtension, isWorkspaceScoped },\n\t\t\t\t),\n\t\t);\n\t}\n\n\tprivate updateExtensionsNotificaiton(): void {\n\t\tconst computedNotificiation = this.computeExtensionsNotification();\n\t\tconst extensionsNotification =\n\t\t\tcomputedNotificiation &&\n\t\t\t!this.dismissedNotifications.includes(computedNotificiation.message)\n\t\t\t\t? {\n\t\t\t\t\t\t...computedNotificiation,\n\t\t\t\t\t\tdismiss: () => {\n\t\t\t\t\t\t\tthis.dismissedNotifications.push(\n\t\t\t\t\t\t\t\tcomputedNotificiation.message,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.updateExtensionsNotificaiton();\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t: undefined;\n\n\t\tif (\n\t\t\tthis.extensionsNotification?.message !==\n\t\t\textensionsNotification?.message\n\t\t) {\n\t\t\tthis.extensionsNotification = extensionsNotification;\n\t\t\tthis._onDidChangeExtensionsNotification.fire(\n\t\t\t\tthis.extensionsNotification,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate computeExtensionsNotification():\n\t\t| Omit<IExtensionsNotification, \"dismiss\">\n\t\t| undefined {\n\t\tconst invalidExtensions = this.local.filter(\n\t\t\t(e) =>\n\t\t\t\te.enablementState ===\n\t\t\t\t\tEnablementState.DisabledByInvalidExtension &&\n\t\t\t\t!e.isWorkspaceScoped,\n\t\t);\n\t\tif (invalidExtensions.length) {\n\t\t\tif (\n\t\t\t\tinvalidExtensions.some(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\te.local &&\n\t\t\t\t\t\t(!isEngineValid(\n\t\t\t\t\t\t\te.local.manifest.engines.vscode,\n\t\t\t\t\t\t\tthis.productService.version,\n\t\t\t\t\t\t\tthis.productService.date,\n\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\tareApiProposalsCompatible([\n\t\t\t\t\t\t\t\t...(e.local.manifest.enabledApiProposals ?? []),\n\t\t\t\t\t\t\t])),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\"incompatibleExtensions\",\n\t\t\t\t\t\t\"Some extensions are disabled due to version incompatibility. Review and update them.\",\n\t\t\t\t\t),\n\t\t\t\t\tseverity: Severity.Warning,\n\t\t\t\t\textensions: invalidExtensions,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\"invalidExtensions\",\n\t\t\t\t\t\t\"Invalid extensions detected. Review them.\",\n\t\t\t\t\t),\n\t\t\t\t\tseverity: Severity.Warning,\n\t\t\t\t\textensions: invalidExtensions,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst deprecatedExtensions = this.local.filter(\n\t\t\t(e) => !!e.deprecationInfo,\n\t\t);\n\t\tif (deprecatedExtensions.length) {\n\t\t\treturn {\n\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\"deprecated extensions\",\n\t\t\t\t\t\"Deprecated extensions detected. Review them and migrate to alternatives.\",\n\t\t\t\t),\n\t\t\t\tseverity: Severity.Warning,\n\t\t\t\textensions: deprecatedExtensions,\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetExtensionsNotification(): IExtensionsNotification | undefined {\n\t\treturn this.extensionsNotification;\n\t}\n\n\tprivate resolveQueryText(text: string): string {\n\t\ttext = text.replace(/@web/g, `tag:\"${WEB_EXTENSION_TAG}\"`);\n\n\t\tconst extensionRegex = /\\bext:([^\\s]+)\\b/g;\n\t\tif (extensionRegex.test(text)) {\n\t\t\ttext = text.replace(extensionRegex, (m, ext) => {\n\t\t\t\t// Get curated keywords\n\t\t\t\tconst lookup = this.productService.extensionKeywords || {};\n\t\t\t\tconst keywords = lookup[ext] || [];\n\n\t\t\t\t// Get mode name\n\t\t\t\tconst languageId =\n\t\t\t\t\tthis.languageService.guessLanguageIdByFilepathOrFirstLine(\n\t\t\t\t\t\tURI.file(`.${ext}`),\n\t\t\t\t\t);\n\t\t\t\tconst languageName =\n\t\t\t\t\tlanguageId &&\n\t\t\t\t\tthis.languageService.getLanguageName(languageId);\n\t\t\t\tconst languageTag = languageName\n\t\t\t\t\t? ` tag:\"${languageName}\"`\n\t\t\t\t\t: \"\";\n\n\t\t\t\t// Construct a rich query\n\t\t\t\treturn `tag:\"__ext_${ext}\" tag:\"__ext_.${ext}\" ${keywords.map((tag) => `tag:\"${tag}\"`).join(\" \")}${languageTag} tag:\"${ext}\"`;\n\t\t\t});\n\t\t}\n\t\treturn text.substr(0, 350);\n\t}\n\n\tprivate fromGallery(\n\t\tgallery: IGalleryExtension,\n\t\textensionsControlManifest: IExtensionsControlManifest,\n\t): IExtension {\n\t\tlet extension = this.getInstalledExtensionMatchingGallery(gallery);\n\t\tif (!extension) {\n\t\t\textension = this.instantiationService.createInstance(\n\t\t\t\tExtension,\n\t\t\t\t(ext) => this.getExtensionState(ext),\n\t\t\t\t(ext) => this.getRuntimeState(ext),\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\tgallery,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t\t(<Extension>extension).setExtensionsControlManifest(\n\t\t\t\textensionsControlManifest,\n\t\t\t);\n\t\t}\n\t\treturn extension;\n\t}\n\n\tprivate getInstalledExtensionMatchingGallery(\n\t\tgallery: IGalleryExtension,\n\t): IExtension | null {\n\t\tfor (const installed of this.local) {\n\t\t\tif (installed.identifier.uuid) {\n\t\t\t\t// Installed from Gallery\n\t\t\t\tif (installed.identifier.uuid === gallery.identifier.uuid) {\n\t\t\t\t\treturn installed;\n\t\t\t\t}\n\t\t\t} else if (installed.local?.source !== \"resource\") {\n\t\t\t\tif (\n\t\t\t\t\tareSameExtensions(installed.identifier, gallery.identifier)\n\t\t\t\t) {\n\t\t\t\t\t// Installed from other sources\n\t\t\t\t\treturn installed;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getInstalledExtensionMatchingLocation(\n\t\tlocation: URI,\n\t): IExtension | null {\n\t\treturn (\n\t\t\tthis.local.find(\n\t\t\t\t(e) =>\n\t\t\t\t\te.local &&\n\t\t\t\t\tthis.uriIdentityService.extUri.isEqualOrParent(\n\t\t\t\t\t\tlocation,\n\t\t\t\t\t\te.local?.location,\n\t\t\t\t\t),\n\t\t\t) ?? null\n\t\t);\n\t}\n\n\tasync open(\n\t\textension: IExtension | string,\n\t\toptions?: IExtensionEditorOptions,\n\t): Promise<void> {\n\t\tif (typeof extension === \"string\") {\n\t\t\tconst id = extension;\n\t\t\textension =\n\t\t\t\tthis.installed.find((e) =>\n\t\t\t\t\tareSameExtensions(e.identifier, { id }),\n\t\t\t\t) ??\n\t\t\t\t(\n\t\t\t\t\tawait this.getExtensions(\n\t\t\t\t\t\t[{ id: extension }],\n\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t)\n\t\t\t\t)[0];\n\t\t}\n\t\tif (!extension) {\n\t\t\tthrow new Error(`Extension not found. ${extension}`);\n\t\t}\n\t\tawait this.editorService.openEditor(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tExtensionsInput,\n\t\t\t\textension,\n\t\t\t),\n\t\t\toptions,\n\t\t\toptions?.sideByside ? SIDE_GROUP : ACTIVE_GROUP,\n\t\t);\n\t}\n\n\tasync openSearch(\n\t\tsearchValue: string,\n\t\tpreserveFoucs?: boolean,\n\t): Promise<void> {\n\t\tconst viewPaneContainer = (\n\t\t\tawait this.viewsService.openViewContainer(VIEWLET_ID, true)\n\t\t)?.getViewPaneContainer() as IExtensionsViewPaneContainer;\n\t\tviewPaneContainer.search(searchValue);\n\t\tif (!preserveFoucs) {\n\t\t\tviewPaneContainer.focus();\n\t\t}\n\t}\n\n\tgetExtensionRuntimeStatus(\n\t\textension: IExtension,\n\t): IExtensionRuntimeStatus | undefined {\n\t\tconst extensionsStatus = this.extensionService.getExtensionsStatus();\n\t\tfor (const id of Object.keys(extensionsStatus)) {\n\t\t\tif (areSameExtensions({ id }, extension.identifier)) {\n\t\t\t\treturn extensionsStatus[id];\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasync updateRunningExtensions(auto = false): Promise<void> {\n\t\tconst toAdd: ILocalExtension[] = [];\n\t\tconst toRemove: string[] = [];\n\n\t\tconst extensionsToCheck = [...this.local];\n\t\tfor (const extension of extensionsToCheck) {\n\t\t\tconst runtimeState = extension.runtimeState;\n\t\t\tif (\n\t\t\t\t!runtimeState ||\n\t\t\t\truntimeState.action !==\n\t\t\t\t\tExtensionRuntimeActionType.RestartExtensions\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (extension.state === ExtensionState.Uninstalled) {\n\t\t\t\ttoRemove.push(extension.identifier.id);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!extension.local) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst isEnabled = this.extensionEnablementService.isEnabled(\n\t\t\t\textension.local,\n\t\t\t);\n\t\t\tif (isEnabled) {\n\t\t\t\tconst runningExtension = this.extensionService.extensions.find(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t{ id: e.identifier.value, uuid: e.uuid },\n\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (runningExtension) {\n\t\t\t\t\ttoRemove.push(runningExtension.identifier.value);\n\t\t\t\t}\n\t\t\t\ttoAdd.push(extension.local);\n\t\t\t} else {\n\t\t\t\ttoRemove.push(extension.identifier.id);\n\t\t\t}\n\t\t}\n\n\t\tfor (const extension of this.extensionService.extensions) {\n\t\t\tif (extension.isUnderDevelopment) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (\n\t\t\t\textensionsToCheck.some((e) =>\n\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: extension.identifier.value,\n\t\t\t\t\t\t\tuuid: extension.uuid,\n\t\t\t\t\t\t},\n\t\t\t\t\t\te.local?.identifier ?? e.identifier,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Extension is running but doesn't exist locally. Remove it from running extensions.\n\t\t\ttoRemove.push(extension.identifier.value);\n\t\t}\n\n\t\tif (toAdd.length || toRemove.length) {\n\t\t\tif (\n\t\t\t\tawait this.extensionService.stopExtensionHosts(\n\t\t\t\t\tnls.localize(\"restart\", \"Enable or Disable extensions\"),\n\t\t\t\t\tauto,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tawait this.extensionService.startExtensionHosts({\n\t\t\t\t\ttoAdd,\n\t\t\t\t\ttoRemove,\n\t\t\t\t});\n\t\t\t\tif (auto) {\n\t\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\t\"extensionsAutoRestart\",\n\t\t\t\t\t\t\t\"Extensions were auto restarted to enable updates.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpriority: NotificationPriority.SILENT,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\ttype ExtensionsAutoRestartClassification = {\n\t\t\t\t\towner: \"sandy081\";\n\t\t\t\t\tcomment: \"Report when extensions are auto restarted\";\n\t\t\t\t\tcount: {\n\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\tcomment: \"Number of extensions auto restarted\";\n\t\t\t\t\t};\n\t\t\t\t\tauto: {\n\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\tcomment: \"Whether the restart was triggered automatically\";\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\ttype ExtensionsAutoRestartEvent = {\n\t\t\t\t\tcount: number;\n\t\t\t\t\tauto: boolean;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tExtensionsAutoRestartEvent,\n\t\t\t\t\tExtensionsAutoRestartClassification\n\t\t\t\t>(\"extensions:autorestart\", {\n\t\t\t\t\tcount: toAdd.length + toRemove.length,\n\t\t\t\t\tauto,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getRuntimeState(\n\t\textension: IExtension,\n\t): ExtensionRuntimeState | undefined {\n\t\tconst isUninstalled = extension.state === ExtensionState.Uninstalled;\n\t\tconst runningExtension = this.extensionService.extensions.find((e) =>\n\t\t\tareSameExtensions({ id: e.identifier.value }, extension.identifier),\n\t\t);\n\t\tconst reloadAction = this.extensionManagementServerService\n\t\t\t.remoteExtensionManagementServer\n\t\t\t? ExtensionRuntimeActionType.ReloadWindow\n\t\t\t: ExtensionRuntimeActionType.RestartExtensions;\n\t\tconst reloadActionLabel =\n\t\t\treloadAction === ExtensionRuntimeActionType.ReloadWindow\n\t\t\t\t? nls.localize(\"reload\", \"reload window\")\n\t\t\t\t: nls.localize(\"restart extensions\", \"restart extensions\");\n\n\t\tif (isUninstalled) {\n\t\t\tconst canRemoveRunningExtension =\n\t\t\t\trunningExtension &&\n\t\t\t\tthis.extensionService.canRemoveExtension(runningExtension);\n\t\t\tconst isSameExtensionRunning =\n\t\t\t\trunningExtension &&\n\t\t\t\t(!extension.server ||\n\t\t\t\t\textension.server ===\n\t\t\t\t\t\tthis.extensionManagementServerService.getExtensionManagementServer(\n\t\t\t\t\t\t\ttoExtension(runningExtension),\n\t\t\t\t\t\t)) &&\n\t\t\t\t(!extension.resourceExtension ||\n\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\textension.resourceExtension.location,\n\t\t\t\t\t\trunningExtension.extensionLocation,\n\t\t\t\t\t));\n\t\t\tif (\n\t\t\t\t!canRemoveRunningExtension &&\n\t\t\t\tisSameExtensionRunning &&\n\t\t\t\t!runningExtension.isUnderDevelopment\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\taction: reloadAction,\n\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\"postUninstallTooltip\",\n\t\t\t\t\t\t\"Please {0} to complete the uninstallation of this extension.\",\n\t\t\t\t\t\treloadActionLabel,\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t\tif (extension.local) {\n\t\t\tconst isSameExtensionRunning =\n\t\t\t\trunningExtension &&\n\t\t\t\textension.server ===\n\t\t\t\t\tthis.extensionManagementServerService.getExtensionManagementServer(\n\t\t\t\t\t\ttoExtension(runningExtension),\n\t\t\t\t\t);\n\t\t\tconst isEnabled = this.extensionEnablementService.isEnabled(\n\t\t\t\textension.local,\n\t\t\t);\n\n\t\t\t// Extension is running\n\t\t\tif (runningExtension) {\n\t\t\t\tif (isEnabled) {\n\t\t\t\t\t// No Reload is required if extension can run without reload\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.extensionService.canAddExtension(\n\t\t\t\t\t\t\ttoExtensionDescription(extension.local),\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tconst runningExtensionServer =\n\t\t\t\t\t\tthis.extensionManagementServerService.getExtensionManagementServer(\n\t\t\t\t\t\t\ttoExtension(runningExtension),\n\t\t\t\t\t\t);\n\n\t\t\t\t\tif (isSameExtensionRunning) {\n\t\t\t\t\t\t// Different version or target platform of same extension is running. Requires reload to run the current version\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!runningExtension.isUnderDevelopment &&\n\t\t\t\t\t\t\t(extension.version !== runningExtension.version ||\n\t\t\t\t\t\t\t\textension.local.targetPlatform !==\n\t\t\t\t\t\t\t\t\trunningExtension.targetPlatform)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst productCurrentVersion =\n\t\t\t\t\t\t\t\tthis.getProductCurrentVersion();\n\t\t\t\t\t\t\tconst productUpdateVersion =\n\t\t\t\t\t\t\t\tthis.getProductUpdateVersion();\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tproductUpdateVersion &&\n\t\t\t\t\t\t\t\t!isEngineValid(\n\t\t\t\t\t\t\t\t\textension.local.manifest.engines.vscode,\n\t\t\t\t\t\t\t\t\tproductCurrentVersion.version,\n\t\t\t\t\t\t\t\t\tproductCurrentVersion.date,\n\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\tisEngineValid(\n\t\t\t\t\t\t\t\t\textension.local.manifest.engines.vscode,\n\t\t\t\t\t\t\t\t\tproductUpdateVersion.version,\n\t\t\t\t\t\t\t\t\tproductUpdateVersion.date,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst state = this.updateService.state;\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tstate.type ===\n\t\t\t\t\t\t\t\t\tStateType.AvailableForDownload\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\taction: ExtensionRuntimeActionType.DownloadUpdate,\n\t\t\t\t\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\"postUpdateDownloadTooltip\",\n\t\t\t\t\t\t\t\t\t\t\t\"Please update {0} to enable the updated extension.\",\n\t\t\t\t\t\t\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (state.type === StateType.Downloaded) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\taction: ExtensionRuntimeActionType.ApplyUpdate,\n\t\t\t\t\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\"postUpdateUpdateTooltip\",\n\t\t\t\t\t\t\t\t\t\t\t\"Please update {0} to enable the updated extension.\",\n\t\t\t\t\t\t\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (state.type === StateType.Ready) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\taction: ExtensionRuntimeActionType.QuitAndInstall,\n\t\t\t\t\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\"postUpdateRestartTooltip\",\n\t\t\t\t\t\t\t\t\t\t\t\"Please restart {0} to enable the updated extension.\",\n\t\t\t\t\t\t\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\taction: reloadAction,\n\t\t\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\t\t\"postUpdateTooltip\",\n\t\t\t\t\t\t\t\t\t\"Please {0} to enable the updated extension.\",\n\t\t\t\t\t\t\t\t\treloadActionLabel,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.extensionsServers.length > 1) {\n\t\t\t\t\t\t\tconst extensionInOtherServer =\n\t\t\t\t\t\t\t\tthis.installed.filter(\n\t\t\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t\t\t\t\t) && e.server !== extension.server,\n\t\t\t\t\t\t\t\t)[0];\n\t\t\t\t\t\t\tif (extensionInOtherServer) {\n\t\t\t\t\t\t\t\t// This extension prefers to run on UI/Local side but is running in remote\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\trunningExtensionServer ===\n\t\t\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t\t\t.remoteExtensionManagementServer &&\n\t\t\t\t\t\t\t\t\tthis.extensionManifestPropertiesService.prefersExecuteOnUI(\n\t\t\t\t\t\t\t\t\t\textension.local.manifest,\n\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\textensionInOtherServer.server ===\n\t\t\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t\t\t.localExtensionManagementServer\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\taction: reloadAction,\n\t\t\t\t\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\"enable locally\",\n\t\t\t\t\t\t\t\t\t\t\t\"Please {0} to enable this extension locally.\",\n\t\t\t\t\t\t\t\t\t\t\treloadActionLabel,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// This extension prefers to run on Workspace/Remote side but is running in local\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\trunningExtensionServer ===\n\t\t\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t\t\t.localExtensionManagementServer &&\n\t\t\t\t\t\t\t\t\tthis.extensionManifestPropertiesService.prefersExecuteOnWorkspace(\n\t\t\t\t\t\t\t\t\t\textension.local.manifest,\n\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\textensionInOtherServer.server ===\n\t\t\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t\t\t.remoteExtensionManagementServer\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\taction: reloadAction,\n\t\t\t\t\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\"enable remote\",\n\t\t\t\t\t\t\t\t\t\t\t\"Please {0} to enable this extension in {1}.\",\n\t\t\t\t\t\t\t\t\t\t\treloadActionLabel,\n\t\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t\t\t\t.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t\t\t\t.remoteExtensionManagementServer\n\t\t\t\t\t\t\t\t\t\t\t\t?.label,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\textension.server ===\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.localExtensionManagementServer &&\n\t\t\t\t\t\t\trunningExtensionServer ===\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.remoteExtensionManagementServer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// This extension prefers to run on UI/Local side but is running in remote\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis.extensionManifestPropertiesService.prefersExecuteOnUI(\n\t\t\t\t\t\t\t\t\textension.local.manifest,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\taction: reloadAction,\n\t\t\t\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"postEnableTooltip\",\n\t\t\t\t\t\t\t\t\t\t\"Please {0} to enable this extension.\",\n\t\t\t\t\t\t\t\t\t\treloadActionLabel,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\textension.server ===\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.remoteExtensionManagementServer &&\n\t\t\t\t\t\t\trunningExtensionServer ===\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.localExtensionManagementServer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// This extension prefers to run on Workspace/Remote side but is running in local\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis.extensionManifestPropertiesService.prefersExecuteOnWorkspace(\n\t\t\t\t\t\t\t\t\textension.local.manifest,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\taction: reloadAction,\n\t\t\t\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"postEnableTooltip\",\n\t\t\t\t\t\t\t\t\t\t\"Please {0} to enable this extension.\",\n\t\t\t\t\t\t\t\t\t\treloadActionLabel,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else if (isSameExtensionRunning) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\taction: reloadAction,\n\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\"postDisableTooltip\",\n\t\t\t\t\t\t\t\"Please {0} to disable this extension.\",\n\t\t\t\t\t\t\treloadActionLabel,\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Extension is not running\n\t\t\telse {\n\t\t\t\tif (\n\t\t\t\t\tisEnabled &&\n\t\t\t\t\t!this.extensionService.canAddExtension(\n\t\t\t\t\t\ttoExtensionDescription(extension.local),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\taction: reloadAction,\n\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\"postEnableTooltip\",\n\t\t\t\t\t\t\t\"Please {0} to enable this extension.\",\n\t\t\t\t\t\t\treloadActionLabel,\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst otherServer = extension.server\n\t\t\t\t\t? extension.server ===\n\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t.localExtensionManagementServer\n\t\t\t\t\t\t? this.extensionManagementServerService\n\t\t\t\t\t\t\t\t.remoteExtensionManagementServer\n\t\t\t\t\t\t: this.extensionManagementServerService\n\t\t\t\t\t\t\t\t.localExtensionManagementServer\n\t\t\t\t\t: null;\n\t\t\t\tif (\n\t\t\t\t\totherServer &&\n\t\t\t\t\textension.enablementState ===\n\t\t\t\t\t\tEnablementState.DisabledByExtensionKind\n\t\t\t\t) {\n\t\t\t\t\tconst extensionInOtherServer = this.local.filter(\n\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t\t) && e.server === otherServer,\n\t\t\t\t\t)[0];\n\t\t\t\t\t// Same extension in other server exists and\n\t\t\t\t\tif (\n\t\t\t\t\t\textensionInOtherServer &&\n\t\t\t\t\t\textensionInOtherServer.local &&\n\t\t\t\t\t\tthis.extensionEnablementService.isEnabled(\n\t\t\t\t\t\t\textensionInOtherServer.local,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\taction: reloadAction,\n\t\t\t\t\t\t\treason: nls.localize(\n\t\t\t\t\t\t\t\t\"postEnableTooltip\",\n\t\t\t\t\t\t\t\t\"Please {0} to enable this extension.\",\n\t\t\t\t\t\t\t\treloadActionLabel,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getPrimaryExtension(extensions: IExtension[]): IExtension {\n\t\tif (extensions.length === 1) {\n\t\t\treturn extensions[0];\n\t\t}\n\n\t\tconst enabledExtensions = extensions.filter(\n\t\t\t(e) =>\n\t\t\t\te.local && this.extensionEnablementService.isEnabled(e.local),\n\t\t);\n\t\tif (enabledExtensions.length === 1) {\n\t\t\treturn enabledExtensions[0];\n\t\t}\n\n\t\tconst extensionsToChoose = enabledExtensions.length\n\t\t\t? enabledExtensions\n\t\t\t: extensions;\n\t\tconst manifest = extensionsToChoose.find(\n\t\t\t(e) => e.local && e.local.manifest,\n\t\t)?.local?.manifest;\n\n\t\t// Manifest is not found which should not happen.\n\t\t// In which case return the first extension.\n\t\tif (!manifest) {\n\t\t\treturn extensionsToChoose[0];\n\t\t}\n\n\t\tconst extensionKinds =\n\t\t\tthis.extensionManifestPropertiesService.getExtensionKind(manifest);\n\n\t\tlet extension = extensionsToChoose.find((extension) => {\n\t\t\tfor (const extensionKind of extensionKinds) {\n\t\t\t\tswitch (extensionKind) {\n\t\t\t\t\tcase \"ui\":\n\t\t\t\t\t\t/* UI extension is chosen only if it is installed locally */\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\textension.server ===\n\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t.localExtensionManagementServer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase \"workspace\":\n\t\t\t\t\t\t/* Choose remote workspace extension if exists */\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\textension.server ===\n\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t.remoteExtensionManagementServer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase \"web\":\n\t\t\t\t\t\t/* Choose web extension if exists */\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\textension.server ===\n\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t.webExtensionManagementServer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (\n\t\t\t!extension &&\n\t\t\tthis.extensionManagementServerService.localExtensionManagementServer\n\t\t) {\n\t\t\textension = extensionsToChoose.find((extension) => {\n\t\t\t\tfor (const extensionKind of extensionKinds) {\n\t\t\t\t\tswitch (extensionKind) {\n\t\t\t\t\t\tcase \"workspace\":\n\t\t\t\t\t\t\t/* Choose local workspace extension if exists */\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\textension.server ===\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.localExtensionManagementServer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tcase \"web\":\n\t\t\t\t\t\t\t/* Choose local web extension if exists */\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\textension.server ===\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.localExtensionManagementServer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\t!extension &&\n\t\t\tthis.extensionManagementServerService.webExtensionManagementServer\n\t\t) {\n\t\t\textension = extensionsToChoose.find((extension) => {\n\t\t\t\tfor (const extensionKind of extensionKinds) {\n\t\t\t\t\tswitch (extensionKind) {\n\t\t\t\t\t\tcase \"web\":\n\t\t\t\t\t\t\t/* Choose web extension if exists */\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\textension.server ===\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.webExtensionManagementServer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\t!extension &&\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer\n\t\t) {\n\t\t\textension = extensionsToChoose.find((extension) => {\n\t\t\t\tfor (const extensionKind of extensionKinds) {\n\t\t\t\t\tswitch (extensionKind) {\n\t\t\t\t\t\tcase \"web\":\n\t\t\t\t\t\t\t/* Choose remote web extension if exists */\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\textension.server ===\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.remoteExtensionManagementServer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\treturn extension || extensions[0];\n\t}\n\n\tprivate getExtensionState(extension: Extension): ExtensionState {\n\t\tif (\n\t\t\tthis.installing.some(\n\t\t\t\t(i) =>\n\t\t\t\t\tareSameExtensions(i.identifier, extension.identifier) &&\n\t\t\t\t\t(!extension.server || i.server === extension.server),\n\t\t\t)\n\t\t) {\n\t\t\treturn ExtensionState.Installing;\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\tconst state = this.remoteExtensions.getExtensionState(extension);\n\t\t\tif (state !== ExtensionState.Uninstalled) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\tconst state = this.webExtensions.getExtensionState(extension);\n\t\t\tif (state !== ExtensionState.Uninstalled) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\t\tif (this.localExtensions) {\n\t\t\treturn this.localExtensions.getExtensionState(extension);\n\t\t}\n\t\treturn ExtensionState.Uninstalled;\n\t}\n\n\tasync checkForUpdates(onlyBuiltin?: boolean): Promise<void> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tconst extensions: Extensions[] = [];\n\t\tif (this.localExtensions) {\n\t\t\textensions.push(this.localExtensions);\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\textensions.push(this.remoteExtensions);\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\textensions.push(this.webExtensions);\n\t\t}\n\t\tif (!extensions.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst infos: IExtensionInfo[] = [];\n\t\tfor (const installed of this.local) {\n\t\t\tif (onlyBuiltin && !installed.isBuiltin) {\n\t\t\t\t// Skip if check updates only for builtin extensions and current extension is not builtin.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tinstalled.isBuiltin &&\n\t\t\t\t!installed.local?.pinned &&\n\t\t\t\t(installed.type === ExtensionType.System ||\n\t\t\t\t\t!installed.local?.identifier.uuid)\n\t\t\t) {\n\t\t\t\t// Skip checking updates for a builtin extension if it is a system extension or if it does not has Marketplace identifier\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (installed.local?.source === \"resource\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tinfos.push({\n\t\t\t\t...installed.identifier,\n\t\t\t\tpreRelease: !!installed.local?.preRelease,\n\t\t\t});\n\t\t}\n\t\tif (infos.length) {\n\t\t\tconst targetPlatform =\n\t\t\t\tawait extensions[0].server.extensionManagementService.getTargetPlatform();\n\t\t\ttype GalleryServiceUpdatesCheckClassification = {\n\t\t\t\towner: \"sandy081\";\n\t\t\t\tcomment: \"Report when a request is made to check for updates of extensions\";\n\t\t\t\tcount: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"Number of extensions to check update\";\n\t\t\t\t};\n\t\t\t};\n\t\t\ttype GalleryServiceUpdatesCheckEvent = {\n\t\t\t\tcount: number;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tGalleryServiceUpdatesCheckEvent,\n\t\t\t\tGalleryServiceUpdatesCheckClassification\n\t\t\t>(\"galleryService:checkingForUpdates\", {\n\t\t\t\tcount: infos.length,\n\t\t\t});\n\t\t\tconst galleryExtensions = await this.galleryService.getExtensions(\n\t\t\t\tinfos,\n\t\t\t\t{\n\t\t\t\t\ttargetPlatform,\n\t\t\t\t\tcompatible: true,\n\t\t\t\t\tproductVersion: this.getProductVersion(),\n\t\t\t\t},\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tawait this.syncInstalledExtensionsWithGallery(\n\t\t\t\t\tgalleryExtensions,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync updateAll(): Promise<InstallExtensionResult[]> {\n\t\tconst toUpdate: InstallExtensionInfo[] = [];\n\t\tthis.outdated.forEach((extension) => {\n\t\t\tif (extension.gallery) {\n\t\t\t\ttoUpdate.push({\n\t\t\t\t\textension: extension.gallery,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\toperation: InstallOperation.Update,\n\t\t\t\t\t\tinstallPreReleaseVersion:\n\t\t\t\t\t\t\textension.local?.isPreReleaseVersion,\n\t\t\t\t\t\tprofileLocation:\n\t\t\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t\t\t.extensionsResource,\n\t\t\t\t\t\tisApplicationScoped:\n\t\t\t\t\t\t\textension.local?.isApplicationScoped,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn this.extensionManagementService.installGalleryExtensions(\n\t\t\ttoUpdate,\n\t\t);\n\t}\n\n\tprivate async syncInstalledExtensionsWithGallery(\n\t\tgallery: IGalleryExtension[],\n\t): Promise<void> {\n\t\tconst extensions: Extensions[] = [];\n\t\tif (this.localExtensions) {\n\t\t\textensions.push(this.localExtensions);\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\textensions.push(this.remoteExtensions);\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\textensions.push(this.webExtensions);\n\t\t}\n\t\tif (!extensions.length) {\n\t\t\treturn;\n\t\t}\n\t\tawait Promise.allSettled(\n\t\t\textensions.map((extensions) =>\n\t\t\t\textensions.syncInstalledExtensionsWithGallery(\n\t\t\t\t\tgallery,\n\t\t\t\t\tthis.getProductVersion(),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tif (this.outdated.length) {\n\t\t\tthis.eventuallyAutoUpdateExtensions();\n\t\t}\n\t}\n\n\tprivate isAutoCheckUpdatesEnabled(): boolean {\n\t\treturn this.configurationService.getValue(\n\t\t\tAutoCheckUpdatesConfigurationKey,\n\t\t);\n\t}\n\n\tprivate eventuallyCheckForUpdates(immediate = false): void {\n\t\tthis.updatesCheckDelayer.cancel();\n\t\tthis.updatesCheckDelayer\n\t\t\t.trigger(\n\t\t\t\tasync () => {\n\t\t\t\t\tif (this.isAutoCheckUpdatesEnabled()) {\n\t\t\t\t\t\tawait this.checkForUpdates();\n\t\t\t\t\t}\n\t\t\t\t\tthis.eventuallyCheckForUpdates();\n\t\t\t\t},\n\t\t\t\timmediate ? 0 : this.getUpdatesCheckInterval(),\n\t\t\t)\n\t\t\t.then(undefined, (err) => null);\n\t}\n\n\tprivate getUpdatesCheckInterval(): number {\n\t\tif (\n\t\t\tthis.productService.quality === \"insider\" &&\n\t\t\tthis.getProductUpdateVersion()\n\t\t) {\n\t\t\treturn 1000 * 60 * 60 * 1; // 1 hour\n\t\t}\n\t\treturn ExtensionsWorkbenchService.UpdatesCheckInterval;\n\t}\n\n\tprivate eventuallyAutoUpdateExtensions(): void {\n\t\tthis.autoUpdateDelayer\n\t\t\t.trigger(() => this.autoUpdateExtensions())\n\t\t\t.then(undefined, (err) => null);\n\t}\n\n\tprivate async autoUpdateBuiltinExtensions(): Promise<void> {\n\t\tawait this.checkForUpdates(true);\n\t\tconst toUpdate = this.outdated.filter((e) => e.isBuiltin);\n\t\tawait Promises.settled(\n\t\t\ttoUpdate.map((e) =>\n\t\t\t\tthis.install(\n\t\t\t\t\te,\n\t\t\t\t\te.local?.preRelease\n\t\t\t\t\t\t? { installPreReleaseVersion: true }\n\t\t\t\t\t\t: undefined,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async syncPinnedBuiltinExtensions(): Promise<void> {\n\t\tconst infos: IExtensionInfo[] = [];\n\t\tfor (const installed of this.local) {\n\t\t\tif (\n\t\t\t\tinstalled.isBuiltin &&\n\t\t\t\tinstalled.local?.pinned &&\n\t\t\t\tinstalled.local?.identifier.uuid\n\t\t\t) {\n\t\t\t\tinfos.push({\n\t\t\t\t\t...installed.identifier,\n\t\t\t\t\tversion: installed.version,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (infos.length) {\n\t\t\tconst galleryExtensions = await this.galleryService.getExtensions(\n\t\t\t\tinfos,\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tawait this.syncInstalledExtensionsWithGallery(\n\t\t\t\t\tgalleryExtensions,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async autoUpdateExtensions(): Promise<void> {\n\t\tconst toUpdate: IExtension[] = [];\n\t\tfor (const extension of this.outdated) {\n\t\t\tif (!this.shouldAutoUpdateExtension(extension)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (await this.shouldRequireConsentToUpdate(extension)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttoUpdate.push(extension);\n\t\t}\n\n\t\tif (!toUpdate.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst productVersion = this.getProductVersion();\n\t\tawait Promises.settled(\n\t\t\ttoUpdate.map((e) =>\n\t\t\t\tthis.install(\n\t\t\t\t\te,\n\t\t\t\t\te.local?.preRelease\n\t\t\t\t\t\t? { installPreReleaseVersion: true, productVersion }\n\t\t\t\t\t\t: { productVersion },\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate getProductVersion(): IProductVersion {\n\t\treturn (\n\t\t\tthis.getProductUpdateVersion() ?? this.getProductCurrentVersion()\n\t\t);\n\t}\n\n\tprivate getProductCurrentVersion(): IProductVersion {\n\t\treturn {\n\t\t\tversion: this.productService.version,\n\t\t\tdate: this.productService.date,\n\t\t};\n\t}\n\n\tprivate getProductUpdateVersion(): IProductVersion | undefined {\n\t\tswitch (this.updateService.state.type) {\n\t\t\tcase StateType.AvailableForDownload:\n\t\t\tcase StateType.Downloaded:\n\t\t\tcase StateType.Updating:\n\t\t\tcase StateType.Ready: {\n\t\t\t\tconst version = this.updateService.state.update.productVersion;\n\t\t\t\tif (version && semver.valid(version)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tversion,\n\t\t\t\t\t\tdate: this.updateService.state.update.timestamp\n\t\t\t\t\t\t\t? new Date(\n\t\t\t\t\t\t\t\t\tthis.updateService.state.update.timestamp,\n\t\t\t\t\t\t\t\t).toISOString()\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate shouldAutoUpdateExtension(extension: IExtension): boolean {\n\t\tif (extension.deprecationInfo?.disallowInstall) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst autoUpdateValue = this.getAutoUpdateValue();\n\n\t\tif (autoUpdateValue === false) {\n\t\t\tconst extensionsToAutoUpdate =\n\t\t\t\tthis.getEnabledAutoUpdateExtensions();\n\t\t\tconst extensionId = extension.identifier.id.toLowerCase();\n\t\t\tif (extensionsToAutoUpdate.includes(extensionId)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.isAutoUpdateEnabledForPublisher(extension.publisher) &&\n\t\t\t\t!extensionsToAutoUpdate.includes(`-${extensionId}`)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extension.pinned) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst disabledAutoUpdateExtensions =\n\t\t\tthis.getDisabledAutoUpdateExtensions();\n\t\tif (\n\t\t\tdisabledAutoUpdateExtensions.includes(\n\t\t\t\textension.identifier.id.toLowerCase(),\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (autoUpdateValue === true) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (autoUpdateValue === \"onlyEnabledExtensions\") {\n\t\t\treturn this.extensionEnablementService.isEnabledEnablementState(\n\t\t\t\textension.enablementState,\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync shouldRequireConsentToUpdate(\n\t\textension: IExtension,\n\t): Promise<string | undefined> {\n\t\tif (!extension.outdated) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\textension.local?.manifest.main ||\n\t\t\textension.local?.manifest.browser\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!extension.gallery) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isDefined(extension.gallery.properties?.executesCode)) {\n\t\t\tif (!extension.gallery.properties.executesCode) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tconst manifest =\n\t\t\t\textension instanceof Extension\n\t\t\t\t\t? await extension.getGalleryManifest()\n\t\t\t\t\t: await this.galleryService.getManifest(\n\t\t\t\t\t\t\textension.gallery,\n\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t);\n\t\t\tif (!manifest?.main && !manifest?.browser) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\treturn nls.localize(\n\t\t\t\"consentRequiredToUpdate\",\n\t\t\t\"The update for {0} extension introduces executable code, which is not present in the currently installed version.\",\n\t\t\textension.displayName,\n\t\t);\n\t}\n\n\tisAutoUpdateEnabledFor(extensionOrPublisher: IExtension | string): boolean {\n\t\tif (isString(extensionOrPublisher)) {\n\t\t\tif (EXTENSION_IDENTIFIER_REGEX.test(extensionOrPublisher)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Expected publisher string, found extension identifier\",\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.isAutoUpdateEnabled()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this.isAutoUpdateEnabledForPublisher(extensionOrPublisher);\n\t\t}\n\t\treturn this.shouldAutoUpdateExtension(extensionOrPublisher);\n\t}\n\n\tprivate isAutoUpdateEnabledForPublisher(publisher: string): boolean {\n\t\tconst publishersToAutoUpdate = this.getPublishersToAutoUpdate();\n\t\treturn publishersToAutoUpdate.includes(publisher.toLowerCase());\n\t}\n\n\tasync updateAutoUpdateEnablementFor(\n\t\textensionOrPublisher: IExtension | string,\n\t\tenable: boolean,\n\t): Promise<void> {\n\t\tif (this.isAutoUpdateEnabled()) {\n\t\t\tif (isString(extensionOrPublisher)) {\n\t\t\t\tthrow new Error(\"Expected extension, found publisher string\");\n\t\t\t}\n\t\t\tconst disabledAutoUpdateExtensions =\n\t\t\t\tthis.getDisabledAutoUpdateExtensions();\n\t\t\tconst extensionId =\n\t\t\t\textensionOrPublisher.identifier.id.toLowerCase();\n\t\t\tconst extensionIndex =\n\t\t\t\tdisabledAutoUpdateExtensions.indexOf(extensionId);\n\t\t\tif (enable) {\n\t\t\t\tif (extensionIndex !== -1) {\n\t\t\t\t\tdisabledAutoUpdateExtensions.splice(extensionIndex, 1);\n\t\t\t\t}\n\t\t\t} else if (extensionIndex === -1) {\n\t\t\t\tdisabledAutoUpdateExtensions.push(extensionId);\n\t\t\t}\n\t\t\tthis.setDisabledAutoUpdateExtensions(disabledAutoUpdateExtensions);\n\t\t\tif (\n\t\t\t\tenable &&\n\t\t\t\textensionOrPublisher.local &&\n\t\t\t\textensionOrPublisher.pinned\n\t\t\t) {\n\t\t\t\tawait this.extensionManagementService.updateMetadata(\n\t\t\t\t\textensionOrPublisher.local,\n\t\t\t\t\t{ pinned: false },\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._onChange.fire(extensionOrPublisher);\n\t\t} else {\n\t\t\tconst enabledAutoUpdateExtensions =\n\t\t\t\tthis.getEnabledAutoUpdateExtensions();\n\t\t\tif (isString(extensionOrPublisher)) {\n\t\t\t\tif (EXTENSION_IDENTIFIER_REGEX.test(extensionOrPublisher)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"Expected publisher string, found extension identifier\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\textensionOrPublisher = extensionOrPublisher.toLowerCase();\n\t\t\t\tif (\n\t\t\t\t\tthis.isAutoUpdateEnabledFor(extensionOrPublisher) !== enable\n\t\t\t\t) {\n\t\t\t\t\tif (enable) {\n\t\t\t\t\t\tenabledAutoUpdateExtensions.push(extensionOrPublisher);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tenabledAutoUpdateExtensions.includes(\n\t\t\t\t\t\t\textensionOrPublisher,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.indexOf(\n\t\t\t\t\t\t\t\textensionOrPublisher,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setEnabledAutoUpdateExtensions(\n\t\t\t\t\tenabledAutoUpdateExtensions,\n\t\t\t\t);\n\t\t\t\tfor (const e of this.installed) {\n\t\t\t\t\tif (e.publisher.toLowerCase() === extensionOrPublisher) {\n\t\t\t\t\t\tthis._onChange.fire(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst extensionId =\n\t\t\t\t\textensionOrPublisher.identifier.id.toLowerCase();\n\t\t\t\tconst enableAutoUpdatesForPublisher =\n\t\t\t\t\tthis.isAutoUpdateEnabledFor(\n\t\t\t\t\t\textensionOrPublisher.publisher.toLowerCase(),\n\t\t\t\t\t);\n\t\t\t\tconst enableAutoUpdatesForExtension =\n\t\t\t\t\tenabledAutoUpdateExtensions.includes(extensionId);\n\t\t\t\tconst disableAutoUpdatesForExtension =\n\t\t\t\t\tenabledAutoUpdateExtensions.includes(`-${extensionId}`);\n\n\t\t\t\tif (enable) {\n\t\t\t\t\tif (disableAutoUpdatesForExtension) {\n\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.indexOf(\n\t\t\t\t\t\t\t\t`-${extensionId}`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (enableAutoUpdatesForPublisher) {\n\t\t\t\t\t\tif (enableAutoUpdatesForExtension) {\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(\n\t\t\t\t\t\t\t\tenabledAutoUpdateExtensions.indexOf(\n\t\t\t\t\t\t\t\t\textensionId,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!enableAutoUpdatesForExtension) {\n\t\t\t\t\t\tenabledAutoUpdateExtensions.push(extensionId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Disable Auto Updates\n\t\t\t\telse {\n\t\t\t\t\tif (enableAutoUpdatesForExtension) {\n\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.indexOf(extensionId),\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (enableAutoUpdatesForPublisher) {\n\t\t\t\t\t\tif (!disableAutoUpdatesForExtension) {\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.push(`-${extensionId}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (disableAutoUpdatesForExtension) {\n\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.indexOf(\n\t\t\t\t\t\t\t\t`-${extensionId}`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setEnabledAutoUpdateExtensions(\n\t\t\t\t\tenabledAutoUpdateExtensions,\n\t\t\t\t);\n\t\t\t\tthis._onChange.fire(extensionOrPublisher);\n\t\t\t}\n\t\t}\n\n\t\tif (enable) {\n\t\t\tthis.autoUpdateExtensions();\n\t\t}\n\t}\n\n\tprivate onDidSelectedExtensionToAutoUpdateValueChange(): void {\n\t\tif (\n\t\t\tthis.enabledAuotUpdateExtensionsValue !==\n\t\t\t\tthis.getEnabledAutoUpdateExtensionsValue() /* This checks if current window changed the value or not */ ||\n\t\t\tthis.disabledAutoUpdateExtensionsValue !==\n\t\t\t\tthis.getDisabledAutoUpdateExtensionsValue() /* This checks if current window changed the value or not */\n\t\t) {\n\t\t\tconst userExtensions = this.installed.filter((e) => !e.isBuiltin);\n\t\t\tconst groupBy = (extensions: IExtension[]): IExtension[][] => {\n\t\t\t\tconst shouldAutoUpdate: IExtension[] = [];\n\t\t\t\tconst shouldNotAutoUpdate: IExtension[] = [];\n\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\tif (this.shouldAutoUpdateExtension(extension)) {\n\t\t\t\t\t\tshouldAutoUpdate.push(extension);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshouldNotAutoUpdate.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [shouldAutoUpdate, shouldNotAutoUpdate];\n\t\t\t};\n\n\t\t\tconst [wasShouldAutoUpdate, wasShouldNotAutoUpdate] =\n\t\t\t\tgroupBy(userExtensions);\n\t\t\tthis._enabledAutoUpdateExtensionsValue = undefined;\n\t\t\tthis._disabledAutoUpdateExtensionsValue = undefined;\n\t\t\tconst [shouldAutoUpdate, shouldNotAutoUpdate] =\n\t\t\t\tgroupBy(userExtensions);\n\n\t\t\tfor (const e of wasShouldAutoUpdate ?? []) {\n\t\t\t\tif (shouldNotAutoUpdate?.includes(e)) {\n\t\t\t\t\tthis._onChange.fire(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const e of wasShouldNotAutoUpdate ?? []) {\n\t\t\t\tif (shouldAutoUpdate?.includes(e)) {\n\t\t\t\t\tthis._onChange.fire(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canInstall(extension: IExtension): Promise<boolean> {\n\t\tif (!(extension instanceof Extension)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extension.isMalicious) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extension.deprecationInfo?.disallowInstall) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extension.gallery) {\n\t\t\tif (\n\t\t\t\tthis.localExtensions &&\n\t\t\t\t(await this.localExtensions.canInstall(extension.gallery))\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.remoteExtensions &&\n\t\t\t\t(await this.remoteExtensions.canInstall(extension.gallery))\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.webExtensions &&\n\t\t\t\t(await this.webExtensions.canInstall(extension.gallery))\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\textension.resourceExtension &&\n\t\t\t(await this.extensionManagementService.canInstall(\n\t\t\t\textension.resourceExtension,\n\t\t\t))\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync install(\n\t\targ: string | URI | IExtension,\n\t\tinstallOptions: InstallExtensionOptions = {},\n\t\tprogressLocation?: ProgressLocation,\n\t): Promise<IExtension> {\n\t\tlet installable:\n\t\t\t| URI\n\t\t\t| IGalleryExtension\n\t\t\t| IResourceExtension\n\t\t\t| undefined;\n\t\tlet extension: IExtension | undefined;\n\n\t\tif (arg instanceof URI) {\n\t\t\tinstallable = arg;\n\t\t} else {\n\t\t\tlet installableInfo: IExtensionInfo | undefined;\n\t\t\tlet gallery: IGalleryExtension | undefined;\n\t\t\tif (isString(arg)) {\n\t\t\t\textension = this.local.find((e) =>\n\t\t\t\t\tareSameExtensions(e.identifier, { id: arg }),\n\t\t\t\t);\n\t\t\t\tif (!extension?.isBuiltin) {\n\t\t\t\t\tinstallableInfo = {\n\t\t\t\t\t\tid: arg,\n\t\t\t\t\t\tversion: installOptions.version,\n\t\t\t\t\t\tpreRelease:\n\t\t\t\t\t\t\tinstallOptions.installPreReleaseVersion ??\n\t\t\t\t\t\t\tthis.preferPreReleases,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else if (arg.gallery) {\n\t\t\t\textension = arg;\n\t\t\t\tgallery = arg.gallery;\n\t\t\t\tif (\n\t\t\t\t\tinstallOptions.version &&\n\t\t\t\t\tinstallOptions.version !== gallery?.version\n\t\t\t\t) {\n\t\t\t\t\tinstallableInfo = {\n\t\t\t\t\t\tid: extension.identifier.id,\n\t\t\t\t\t\tversion: installOptions.version,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else if (arg.resourceExtension) {\n\t\t\t\textension = arg;\n\t\t\t\tinstallable = arg.resourceExtension;\n\t\t\t}\n\t\t\tif (installableInfo) {\n\t\t\t\tconst targetPlatform = extension?.server\n\t\t\t\t\t? await extension.server.extensionManagementService.getTargetPlatform()\n\t\t\t\t\t: undefined;\n\t\t\t\tgallery = (\n\t\t\t\t\tawait this.galleryService.getExtensions(\n\t\t\t\t\t\t[installableInfo],\n\t\t\t\t\t\t{ targetPlatform },\n\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t)\n\t\t\t\t).at(0);\n\t\t\t}\n\t\t\tif (!extension && gallery) {\n\t\t\t\textension = this.instantiationService.createInstance(\n\t\t\t\t\tExtension,\n\t\t\t\t\t(ext) => this.getExtensionState(ext),\n\t\t\t\t\t(ext) => this.getRuntimeState(ext),\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tgallery,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\t\t(<Extension>extension).setExtensionsControlManifest(\n\t\t\t\t\tawait this.extensionManagementService.getExtensionsControlManifest(),\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (extension?.isMalicious) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"malicious\",\n\t\t\t\t\t\t\"This extension is reported to be problematic.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\t// Do not install if requested to enable and extension is already installed\n\t\t\tif (!(installOptions.enable && extension?.local)) {\n\t\t\t\tif (!installable) {\n\t\t\t\t\tif (!gallery) {\n\t\t\t\t\t\tconst id = isString(arg)\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: (<IExtension>arg).identifier.id;\n\t\t\t\t\t\tif (installOptions.version) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"not found version\",\n\t\t\t\t\t\t\t\t\t\"Unable to install extension '{0}' because the requested version '{1}' is not found.\",\n\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\tinstallOptions.version,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"not found\",\n\t\t\t\t\t\t\t\t\t\"Unable to install extension '{0}' because it is not found.\",\n\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tinstallable = gallery;\n\t\t\t\t}\n\t\t\t\tif (installOptions.version) {\n\t\t\t\t\tinstallOptions.installGivenVersion = true;\n\t\t\t\t}\n\t\t\t\tif (extension?.isWorkspaceScoped) {\n\t\t\t\t\tinstallOptions.isWorkspaceScoped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (installable) {\n\t\t\tif (installOptions.justification) {\n\t\t\t\tconst syncCheck =\n\t\t\t\t\tisUndefined(installOptions.isMachineScoped) &&\n\t\t\t\t\tthis.userDataSyncEnablementService.isEnabled() &&\n\t\t\t\t\tthis.userDataSyncEnablementService.isResourceEnabled(\n\t\t\t\t\t\tSyncResource.Extensions,\n\t\t\t\t\t);\n\t\t\t\tconst buttons: IPromptButton<boolean>[] = [];\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel:\n\t\t\t\t\t\tisString(installOptions.justification) ||\n\t\t\t\t\t\t!installOptions.justification.action\n\t\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"installButtonLabel\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Install Extension\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"installButtonLabelWithAction\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Install Extension and {0}\",\n\t\t\t\t\t\t\t\t\tinstallOptions.justification.action,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\trun: () => true,\n\t\t\t\t});\n\t\t\t\tif (!extension) {\n\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\tlabel: nls.localize(\"open\", \"Open Extension\"),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\tthis.open(extension!);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconst result = await this.dialogService.prompt<boolean>({\n\t\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\t\"installExtensionTitle\",\n\t\t\t\t\t\t\"Install Extension\",\n\t\t\t\t\t),\n\t\t\t\t\tmessage: extension\n\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\"installExtensionMessage\",\n\t\t\t\t\t\t\t\t\"Would you like to install '{0}' extension from '{1}'?\",\n\t\t\t\t\t\t\t\textension.displayName,\n\t\t\t\t\t\t\t\textension.publisherDisplayName,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\t\"installVSIXMessage\",\n\t\t\t\t\t\t\t\t\"Would you like to install the extension?\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\tdetail: isString(installOptions.justification)\n\t\t\t\t\t\t? installOptions.justification\n\t\t\t\t\t\t: installOptions.justification.reason,\n\t\t\t\t\tcancelButton: true,\n\t\t\t\t\tbuttons,\n\t\t\t\t\tcheckbox: syncCheck\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\t\t\"sync extension\",\n\t\t\t\t\t\t\t\t\t\"Sync this extension\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: undefined,\n\t\t\t\t});\n\t\t\t\tif (!result.result) {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t\tif (syncCheck) {\n\t\t\t\t\tinstallOptions.isMachineScoped = !result.checkboxChecked;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (installable instanceof URI) {\n\t\t\t\textension = await this.doInstall(\n\t\t\t\t\tundefined,\n\t\t\t\t\t() => this.installFromVSIX(installable, installOptions),\n\t\t\t\t\tprogressLocation,\n\t\t\t\t);\n\t\t\t} else if (extension) {\n\t\t\t\tif (extension.resourceExtension) {\n\t\t\t\t\textension = await this.doInstall(\n\t\t\t\t\t\textension,\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\tthis.extensionManagementService.installResourceExtension(\n\t\t\t\t\t\t\t\tinstallable as IResourceExtension,\n\t\t\t\t\t\t\t\tinstallOptions,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tprogressLocation,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\textension = await this.doInstall(\n\t\t\t\t\t\textension,\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\tthis.installFromGallery(\n\t\t\t\t\t\t\t\textension!,\n\t\t\t\t\t\t\t\tinstallable as IGalleryExtension,\n\t\t\t\t\t\t\t\tinstallOptions,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tprogressLocation,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!extension) {\n\t\t\tthrow new Error(\n\t\t\t\tnls.localize(\"unknown\", \"Unable to install extension\"),\n\t\t\t);\n\t\t}\n\n\t\tif (installOptions.enable) {\n\t\t\tif (\n\t\t\t\textension.enablementState ===\n\t\t\t\t\tEnablementState.DisabledWorkspace ||\n\t\t\t\textension.enablementState === EnablementState.DisabledGlobally\n\t\t\t) {\n\t\t\t\tif (installOptions.justification) {\n\t\t\t\t\tconst result = await this.dialogService.confirm({\n\t\t\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\t\t\"enableExtensionTitle\",\n\t\t\t\t\t\t\t\"Enable Extension\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\t\"enableExtensionMessage\",\n\t\t\t\t\t\t\t\"Would you like to enable '{0}' extension?\",\n\t\t\t\t\t\t\textension.displayName,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdetail: isString(installOptions.justification)\n\t\t\t\t\t\t\t? installOptions.justification\n\t\t\t\t\t\t\t: installOptions.justification.reason,\n\t\t\t\t\t\tprimaryButton: isString(installOptions.justification)\n\t\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"enableButtonLabel\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Enable Extension\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"enableButtonLabelWithAction\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Enable Extension and {0}\",\n\t\t\t\t\t\t\t\t\tinstallOptions.justification.action,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t\tif (!result.confirmed) {\n\t\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tawait this.setEnablement(\n\t\t\t\t\textension,\n\t\t\t\t\textension.enablementState ===\n\t\t\t\t\t\tEnablementState.DisabledWorkspace\n\t\t\t\t\t\t? EnablementState.EnabledWorkspace\n\t\t\t\t\t\t: EnablementState.EnabledGlobally,\n\t\t\t\t);\n\t\t\t}\n\t\t\tawait this.waitUntilExtensionIsEnabled(extension);\n\t\t}\n\n\t\treturn extension;\n\t}\n\n\tasync installInServer(\n\t\textension: IExtension,\n\t\tserver: IExtensionManagementServer,\n\t): Promise<void> {\n\t\tawait this.doInstall(extension, async () => {\n\t\t\tconst local = extension.local;\n\t\t\tif (!local) {\n\t\t\t\tthrow new Error(\"Extension not found\");\n\t\t\t}\n\t\t\tif (!extension.gallery) {\n\t\t\t\textension =\n\t\t\t\t\t(\n\t\t\t\t\t\tawait this.getExtensions(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...extension.identifier,\n\t\t\t\t\t\t\t\t\tpreRelease: local.preRelease,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t)\n\t\t\t\t\t)[0] ?? extension;\n\t\t\t}\n\t\t\tif (extension.gallery) {\n\t\t\t\treturn server.extensionManagementService.installFromGallery(\n\t\t\t\t\textension.gallery,\n\t\t\t\t\t{ installPreReleaseVersion: local.preRelease },\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst targetPlatform =\n\t\t\t\tawait server.extensionManagementService.getTargetPlatform();\n\t\t\tif (\n\t\t\t\t!isTargetPlatformCompatible(\n\t\t\t\t\tlocal.targetPlatform,\n\t\t\t\t\t[local.targetPlatform],\n\t\t\t\t\ttargetPlatform,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"incompatible\",\n\t\t\t\t\t\t\"Can't install '{0}' extension because it is not compatible.\",\n\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst vsix = await this.extensionManagementService.zip(local);\n\t\t\ttry {\n\t\t\t\treturn await server.extensionManagementService.install(vsix);\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.fileService.del(vsix);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tcanSetLanguage(extension: IExtension): boolean {\n\t\tif (!isWeb) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!extension.gallery) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst locale = getLocale(extension.gallery);\n\t\tif (!locale) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync setLanguage(extension: IExtension): Promise<void> {\n\t\tif (!this.canSetLanguage(extension)) {\n\t\t\tthrow new Error(\"Can not set language\");\n\t\t}\n\t\tconst locale = getLocale(extension.gallery!);\n\t\tif (locale === language) {\n\t\t\treturn;\n\t\t}\n\t\tconst localizedLanguageName =\n\t\t\textension.gallery?.properties?.localizedLanguages?.[0];\n\t\treturn this.localeService.setLocale({\n\t\t\tid: locale,\n\t\t\tgalleryExtension: extension.gallery,\n\t\t\textensionId: extension.identifier.id,\n\t\t\tlabel: localizedLanguageName ?? extension.displayName,\n\t\t});\n\t}\n\n\tsetEnablement(\n\t\textensions: IExtension | IExtension[],\n\t\tenablementState: EnablementState,\n\t): Promise<void> {\n\t\textensions = Array.isArray(extensions) ? extensions : [extensions];\n\t\treturn this.promptAndSetEnablement(extensions, enablementState);\n\t}\n\n\tasync uninstall(e: IExtension): Promise<void> {\n\t\tconst extension = e.local\n\t\t\t? e\n\t\t\t: this.local.find((local) =>\n\t\t\t\t\tareSameExtensions(local.identifier, e.identifier),\n\t\t\t\t);\n\t\tif (!extension?.local) {\n\t\t\tthrow new Error(\"Missing local\");\n\t\t}\n\n\t\tconst extensionsToUninstall: UninstallExtensionInfo[] = [\n\t\t\t{ extension: extension.local },\n\t\t];\n\t\tfor (const packExtension of this.getAllPackExtensionsToUninstall(\n\t\t\textension.local,\n\t\t\tthis.local,\n\t\t)) {\n\t\t\tif (\n\t\t\t\t!extensionsToUninstall.some((e) =>\n\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\te.extension.identifier,\n\t\t\t\t\t\tpackExtension.identifier,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\textensionsToUninstall.push({ extension: packExtension });\n\t\t\t}\n\t\t}\n\n\t\tconst dependents: IExtension[] = [];\n\t\tfor (const { extension } of extensionsToUninstall) {\n\t\t\tfor (const local of this.local) {\n\t\t\t\tif (!local.local) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (areSameExtensions(local.identifier, extension.identifier)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (local.dependencies.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\textension.manifest.extensionPack?.some((id) =>\n\t\t\t\t\t\tareSameExtensions({ id }, local.identifier),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tdependents.some((d) =>\n\t\t\t\t\t\td.extensionPack.some((id) =>\n\t\t\t\t\t\t\tareSameExtensions({ id }, local.identifier),\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tlocal.dependencies.some((dep) =>\n\t\t\t\t\t\tareSameExtensions(extension.identifier, { id: dep }),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tdependents.push(local);\n\t\t\t\t\textensionsToUninstall.push({ extension: local.local });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dependents.length) {\n\t\t\tconst { result } = await this.dialogService.prompt({\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\"uninstallDependents\",\n\t\t\t\t\t\"Uninstall Extension with Dependents\",\n\t\t\t\t),\n\t\t\t\ttype: Severity.Warning,\n\t\t\t\tmessage:\n\t\t\t\t\tthis.getErrorMessageForUninstallingAnExtensionWithDependents(\n\t\t\t\t\t\textension,\n\t\t\t\t\t\tdependents,\n\t\t\t\t\t),\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: nls.localize(\"uninstallAll\", \"Uninstall All\"),\n\t\t\t\t\t\trun: () => true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => false,\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (!result) {\n\t\t\t\tthrow new CancellationError();\n\t\t\t}\n\t\t}\n\n\t\treturn this.withProgress(\n\t\t\t{\n\t\t\t\tlocation: ProgressLocation.Extensions,\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\"uninstallingExtension\",\n\t\t\t\t\t\"Uninstalling extension....\",\n\t\t\t\t),\n\t\t\t\tsource: `${extension.identifier.id}`,\n\t\t\t},\n\t\t\t() =>\n\t\t\t\tthis.extensionManagementService\n\t\t\t\t\t.uninstallExtensions(extensionsToUninstall)\n\t\t\t\t\t.then(() => undefined),\n\t\t);\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(\n\t\textension: ILocalExtension,\n\t\tinstalled: IExtension[],\n\t\tchecked: ILocalExtension[] = [],\n\t): ILocalExtension[] {\n\t\tif (\n\t\t\tchecked.some((e) =>\n\t\t\t\tareSameExtensions(e.identifier, extension.identifier),\n\t\t\t)\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ?? [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const i of installed) {\n\t\t\t\tif (\n\t\t\t\t\ti.local &&\n\t\t\t\t\t!i.isBuiltin &&\n\t\t\t\t\textensionsPack.some((id) =>\n\t\t\t\t\t\tareSameExtensions({ id }, i.identifier),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tpackedExtensions.push(i.local);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(\n\t\t\t\t\t...this.getAllPackExtensionsToUninstall(\n\t\t\t\t\t\tpackedExtension,\n\t\t\t\t\t\tinstalled,\n\t\t\t\t\t\tchecked,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getErrorMessageForUninstallingAnExtensionWithDependents(\n\t\textension: IExtension,\n\t\tdependents: IExtension[],\n\t): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize(\n\t\t\t\t\"singleDependentUninstallError\",\n\t\t\t\t\"Cannot uninstall '{0}' extension alone. '{1}' extension depends on this. Do you want to uninstall all these extensions?\",\n\t\t\t\textension.displayName,\n\t\t\t\tdependents[0].displayName,\n\t\t\t);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize(\n\t\t\t\t\"twoDependentsUninstallError\",\n\t\t\t\t\"Cannot uninstall '{0}' extension alone. '{1}' and '{2}' extensions depend on this. Do you want to uninstall all these extensions?\",\n\t\t\t\textension.displayName,\n\t\t\t\tdependents[0].displayName,\n\t\t\t\tdependents[1].displayName,\n\t\t\t);\n\t\t}\n\t\treturn nls.localize(\n\t\t\t\"multipleDependentsUninstallError\",\n\t\t\t\"Cannot uninstall '{0}' extension alone. '{1}', '{2}' and other extensions depend on this. Do you want to uninstall all these extensions?\",\n\t\t\textension.displayName,\n\t\t\tdependents[0].displayName,\n\t\t\tdependents[1].displayName,\n\t\t);\n\t}\n\n\treinstall(extension: IExtension): Promise<IExtension> {\n\t\treturn this.doInstall(extension, () => {\n\t\t\tconst ext = extension.local\n\t\t\t\t? extension\n\t\t\t\t: this.local.filter((e) =>\n\t\t\t\t\t\tareSameExtensions(e.identifier, extension.identifier),\n\t\t\t\t\t)[0];\n\t\t\tconst toReinstall: ILocalExtension | null =\n\t\t\t\text && ext.local ? ext.local : null;\n\t\t\tif (!toReinstall) {\n\t\t\t\tthrow new Error(\"Missing local\");\n\t\t\t}\n\t\t\treturn this.extensionManagementService.reinstallFromGallery(\n\t\t\t\ttoReinstall,\n\t\t\t);\n\t\t});\n\t}\n\n\tisExtensionIgnoredToSync(extension: IExtension): boolean {\n\t\treturn extension.local\n\t\t\t? !this.isInstalledExtensionSynced(extension.local)\n\t\t\t: this.extensionsSyncManagementService.hasToNeverSyncExtension(\n\t\t\t\t\textension.identifier.id,\n\t\t\t\t);\n\t}\n\n\tasync togglePreRelease(extension: IExtension): Promise<void> {\n\t\tif (!extension.local) {\n\t\t\treturn;\n\t\t}\n\t\tif (extension.preRelease !== extension.isPreReleaseVersion) {\n\t\t\tawait this.extensionManagementService.updateMetadata(\n\t\t\t\textension.local,\n\t\t\t\t{ preRelease: !extension.preRelease },\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tawait this.install(extension, {\n\t\t\tinstallPreReleaseVersion: !extension.preRelease,\n\t\t\tpreRelease: !extension.preRelease,\n\t\t});\n\t}\n\n\tasync toggleExtensionIgnoredToSync(extension: IExtension): Promise<void> {\n\t\tconst isIgnored = this.isExtensionIgnoredToSync(extension);\n\t\tif (extension.local && isIgnored) {\n\t\t\t(<Extension>extension).local =\n\t\t\t\tawait this.updateSynchronizingInstalledExtension(\n\t\t\t\t\textension.local,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\tthis._onChange.fire(extension);\n\t\t} else {\n\t\t\tthis.extensionsSyncManagementService.updateIgnoredExtensions(\n\t\t\t\textension.identifier.id,\n\t\t\t\t!isIgnored,\n\t\t\t);\n\t\t}\n\t\tawait this.userDataAutoSyncService.triggerSync(\n\t\t\t[\"IgnoredExtensionsUpdated\"],\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t);\n\t}\n\n\tasync toggleApplyExtensionToAllProfiles(\n\t\textension: IExtension,\n\t): Promise<void> {\n\t\tif (\n\t\t\t!extension.local ||\n\t\t\tisApplicationScopedExtension(extension.local.manifest) ||\n\t\t\textension.isBuiltin\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst isApplicationScoped = extension.local.isApplicationScoped;\n\t\tawait Promise.all(\n\t\t\tthis.getAllExtensions().map(async (extensions) => {\n\t\t\t\tconst local = extensions.local.find((e) =>\n\t\t\t\t\tareSameExtensions(e.identifier, extension.identifier),\n\t\t\t\t)?.local;\n\t\t\t\tif (\n\t\t\t\t\tlocal &&\n\t\t\t\t\tlocal.isApplicationScoped === isApplicationScoped\n\t\t\t\t) {\n\t\t\t\t\tawait this.extensionManagementService.toggleAppliationScope(\n\t\t\t\t\t\tlocal,\n\t\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t\t.extensionsResource,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate getAllExtensions(): Extensions[] {\n\t\tconst extensions: Extensions[] = [];\n\t\tif (this.localExtensions) {\n\t\t\textensions.push(this.localExtensions);\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\textensions.push(this.remoteExtensions);\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\textensions.push(this.webExtensions);\n\t\t}\n\t\treturn extensions;\n\t}\n\n\tprivate isInstalledExtensionSynced(extension: ILocalExtension): boolean {\n\t\tif (extension.isMachineScoped) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tthis.extensionsSyncManagementService.hasToAlwaysSyncExtension(\n\t\t\t\textension.identifier.id,\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn !this.extensionsSyncManagementService.hasToNeverSyncExtension(\n\t\t\textension.identifier.id,\n\t\t);\n\t}\n\n\tasync updateSynchronizingInstalledExtension(\n\t\textension: ILocalExtension,\n\t\tsync: boolean,\n\t): Promise<ILocalExtension> {\n\t\tconst isMachineScoped = !sync;\n\t\tif (extension.isMachineScoped !== isMachineScoped) {\n\t\t\textension = await this.extensionManagementService.updateMetadata(\n\t\t\t\textension,\n\t\t\t\t{ isMachineScoped },\n\t\t\t);\n\t\t}\n\t\tif (sync) {\n\t\t\tthis.extensionsSyncManagementService.updateIgnoredExtensions(\n\t\t\t\textension.identifier.id,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\t\treturn extension;\n\t}\n\n\tprivate doInstall(\n\t\textension: IExtension | undefined,\n\t\tinstallTask: () => Promise<ILocalExtension>,\n\t\tprogressLocation?: ProgressLocation,\n\t): Promise<IExtension> {\n\t\tconst title = extension\n\t\t\t? nls.localize(\n\t\t\t\t\t\"installing named extension\",\n\t\t\t\t\t\"Installing '{0}' extension....\",\n\t\t\t\t\textension.displayName,\n\t\t\t\t)\n\t\t\t: nls.localize(\"installing extension\", \"Installing extension....\");\n\t\treturn this.withProgress(\n\t\t\t{\n\t\t\t\tlocation: progressLocation ?? ProgressLocation.Extensions,\n\t\t\t\ttitle,\n\t\t\t},\n\t\t\tasync () => {\n\t\t\t\ttry {\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tthis.installing.push(extension);\n\t\t\t\t\t\tthis._onChange.fire(extension);\n\t\t\t\t\t}\n\t\t\t\t\tconst local = await installTask();\n\t\t\t\t\treturn await this.waitAndGetInstalledExtension(\n\t\t\t\t\t\tlocal.identifier,\n\t\t\t\t\t);\n\t\t\t\t} finally {\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tthis.installing = this.installing.filter(\n\t\t\t\t\t\t\t(e) => e !== extension,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// Trigger the change without passing the extension because it is replaced by a new instance.\n\t\t\t\t\t\tthis._onChange.fire(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate async installFromVSIX(\n\t\tvsix: URI,\n\t\tinstallOptions: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tconst manifest =\n\t\t\tawait this.extensionManagementService.getManifest(vsix);\n\t\tconst existingExtension = this.local.find((local) =>\n\t\t\tareSameExtensions(local.identifier, {\n\t\t\t\tid: getGalleryExtensionId(manifest.publisher, manifest.name),\n\t\t\t}),\n\t\t);\n\t\tif (existingExtension) {\n\t\t\tinstallOptions = installOptions || {};\n\t\t\tif (existingExtension.latestVersion === manifest.version) {\n\t\t\t\tinstallOptions.pinned =\n\t\t\t\t\texistingExtension.local?.pinned ||\n\t\t\t\t\t!this.shouldAutoUpdateExtension(existingExtension);\n\t\t\t} else {\n\t\t\t\tinstallOptions.installGivenVersion = true;\n\t\t\t}\n\t\t}\n\t\treturn this.extensionManagementService.installVSIX(\n\t\t\tvsix,\n\t\t\tmanifest,\n\t\t\tinstallOptions,\n\t\t);\n\t}\n\n\tprivate installFromGallery(\n\t\textension: IExtension,\n\t\tgallery: IGalleryExtension,\n\t\tinstallOptions?: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tinstallOptions = installOptions ?? {};\n\t\tinstallOptions.pinned =\n\t\t\textension.local?.pinned ||\n\t\t\t!this.shouldAutoUpdateExtension(extension);\n\t\tif (extension.local) {\n\t\t\tinstallOptions.productVersion = this.getProductVersion();\n\t\t\tinstallOptions.operation = InstallOperation.Update;\n\t\t\treturn this.extensionManagementService.updateFromGallery(\n\t\t\t\tgallery,\n\t\t\t\textension.local,\n\t\t\t\tinstallOptions,\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.extensionManagementService.installFromGallery(\n\t\t\t\tgallery,\n\t\t\t\tinstallOptions,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async waitAndGetInstalledExtension(\n\t\tidentifier: IExtensionIdentifier,\n\t): Promise<IExtension> {\n\t\tlet installedExtension = this.local.find((local) =>\n\t\t\tareSameExtensions(local.identifier, identifier),\n\t\t);\n\t\tif (!installedExtension) {\n\t\t\tawait Event.toPromise(\n\t\t\t\tEvent.filter(\n\t\t\t\t\tthis.onChange,\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\t!!e &&\n\t\t\t\t\t\tthis.local.some((local) =>\n\t\t\t\t\t\t\tareSameExtensions(local.identifier, identifier),\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tinstalledExtension = this.local.find((local) =>\n\t\t\tareSameExtensions(local.identifier, identifier),\n\t\t);\n\t\tif (!installedExtension) {\n\t\t\t// This should not happen\n\t\t\tthrow new Error(\"Extension should have been installed\");\n\t\t}\n\t\treturn installedExtension;\n\t}\n\n\tprivate async waitUntilExtensionIsEnabled(\n\t\textension: IExtension,\n\t): Promise<void> {\n\t\tif (\n\t\t\tthis.extensionService.extensions.find((e) =>\n\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\te.identifier,\n\t\t\t\t\textension.identifier.id,\n\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\t!extension.local ||\n\t\t\t!this.extensionService.canAddExtension(\n\t\t\t\ttoExtensionDescription(extension.local),\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tawait new Promise<void>((c, e) => {\n\t\t\tconst disposable = this.extensionService.onDidChangeExtensions(\n\t\t\t\t() => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.extensionService.extensions.find((e) =>\n\t\t\t\t\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\t\tc();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\te(error);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate promptAndSetEnablement(\n\t\textensions: IExtension[],\n\t\tenablementState: EnablementState,\n\t): Promise<any> {\n\t\tconst enable =\n\t\t\tenablementState === EnablementState.EnabledGlobally ||\n\t\t\tenablementState === EnablementState.EnabledWorkspace;\n\t\tif (enable) {\n\t\t\tconst allDependenciesAndPackedExtensions =\n\t\t\t\tthis.getExtensionsRecursively(\n\t\t\t\t\textensions,\n\t\t\t\t\tthis.local,\n\t\t\t\t\tenablementState,\n\t\t\t\t\t{ dependencies: true, pack: true },\n\t\t\t\t);\n\t\t\treturn this.checkAndSetEnablement(\n\t\t\t\textensions,\n\t\t\t\tallDependenciesAndPackedExtensions,\n\t\t\t\tenablementState,\n\t\t\t);\n\t\t} else {\n\t\t\tconst packedExtensions = this.getExtensionsRecursively(\n\t\t\t\textensions,\n\t\t\t\tthis.local,\n\t\t\t\tenablementState,\n\t\t\t\t{ dependencies: false, pack: true },\n\t\t\t);\n\t\t\tif (packedExtensions.length) {\n\t\t\t\treturn this.checkAndSetEnablement(\n\t\t\t\t\textensions,\n\t\t\t\t\tpackedExtensions,\n\t\t\t\t\tenablementState,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn this.checkAndSetEnablement(extensions, [], enablementState);\n\t\t}\n\t}\n\n\tprivate async checkAndSetEnablement(\n\t\textensions: IExtension[],\n\t\totherExtensions: IExtension[],\n\t\tenablementState: EnablementState,\n\t): Promise<any> {\n\t\tconst allExtensions = [...extensions, ...otherExtensions];\n\t\tconst enable =\n\t\t\tenablementState === EnablementState.EnabledGlobally ||\n\t\t\tenablementState === EnablementState.EnabledWorkspace;\n\t\tif (!enable) {\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tconst dependents = this.getDependentsAfterDisablement(\n\t\t\t\t\textension,\n\t\t\t\t\tallExtensions,\n\t\t\t\t\tthis.local,\n\t\t\t\t);\n\t\t\t\tif (dependents.length) {\n\t\t\t\t\tconst { result } = await this.dialogService.prompt({\n\t\t\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\t\t\"disableDependents\",\n\t\t\t\t\t\t\t\"Disable Extension with Dependents\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: Severity.Warning,\n\t\t\t\t\t\tmessage: this.getDependentsErrorMessageForDisablement(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\tallExtensions,\n\t\t\t\t\t\t\tdependents,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\t\t\"disable all\",\n\t\t\t\t\t\t\t\t\t\"Disable All\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\trun: () => true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tcancelButton: {\n\t\t\t\t\t\t\trun: () => false,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t\t}\n\t\t\t\t\tawait this.checkAndSetEnablement(\n\t\t\t\t\t\tdependents,\n\t\t\t\t\t\t[extension],\n\t\t\t\t\t\tenablementState,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.doSetEnablement(allExtensions, enablementState);\n\t}\n\n\tprivate getExtensionsRecursively(\n\t\textensions: IExtension[],\n\t\tinstalled: IExtension[],\n\t\tenablementState: EnablementState,\n\t\toptions: { dependencies: boolean; pack: boolean },\n\t\tchecked: IExtension[] = [],\n\t): IExtension[] {\n\t\tconst toCheck = extensions.filter((e) => checked.indexOf(e) === -1);\n\t\tif (toCheck.length) {\n\t\t\tfor (const extension of toCheck) {\n\t\t\t\tchecked.push(extension);\n\t\t\t}\n\t\t\tconst extensionsToEanbleOrDisable = installed.filter((i) => {\n\t\t\t\tif (checked.indexOf(i) !== -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst enable =\n\t\t\t\t\tenablementState === EnablementState.EnabledGlobally ||\n\t\t\t\t\tenablementState === EnablementState.EnabledWorkspace;\n\t\t\t\tconst isExtensionEnabled =\n\t\t\t\t\ti.enablementState === EnablementState.EnabledGlobally ||\n\t\t\t\t\ti.enablementState === EnablementState.EnabledWorkspace;\n\t\t\t\tif (enable === isExtensionEnabled) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t(enable || !i.isBuiltin) && // Include all Extensions for enablement and only non builtin extensions for disablement\n\t\t\t\t\t(options.dependencies || options.pack) &&\n\t\t\t\t\textensions.some(\n\t\t\t\t\t\t(extension) =>\n\t\t\t\t\t\t\t(options.dependencies &&\n\t\t\t\t\t\t\t\textension.dependencies.some((id) =>\n\t\t\t\t\t\t\t\t\tareSameExtensions({ id }, i.identifier),\n\t\t\t\t\t\t\t\t)) ||\n\t\t\t\t\t\t\t(options.pack &&\n\t\t\t\t\t\t\t\textension.extensionPack.some((id) =>\n\t\t\t\t\t\t\t\t\tareSameExtensions({ id }, i.identifier),\n\t\t\t\t\t\t\t\t)),\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (extensionsToEanbleOrDisable.length) {\n\t\t\t\textensionsToEanbleOrDisable.push(\n\t\t\t\t\t...this.getExtensionsRecursively(\n\t\t\t\t\t\textensionsToEanbleOrDisable,\n\t\t\t\t\t\tinstalled,\n\t\t\t\t\t\tenablementState,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tchecked,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn extensionsToEanbleOrDisable;\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependentsAfterDisablement(\n\t\textension: IExtension,\n\t\textensionsToDisable: IExtension[],\n\t\tinstalled: IExtension[],\n\t): IExtension[] {\n\t\treturn installed.filter((i) => {\n\t\t\tif (i.dependencies.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (i === extension) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!this.extensionEnablementService.isEnabledEnablementState(\n\t\t\t\t\ti.enablementState,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (extensionsToDisable.indexOf(i) !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn i.dependencies.some((dep) =>\n\t\t\t\t[extension, ...extensionsToDisable].some((d) =>\n\t\t\t\t\tareSameExtensions(d.identifier, { id: dep }),\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate getDependentsErrorMessageForDisablement(\n\t\textension: IExtension,\n\t\tallDisabledExtensions: IExtension[],\n\t\tdependents: IExtension[],\n\t): string {\n\t\tfor (const e of [extension, ...allDisabledExtensions]) {\n\t\t\tconst dependentsOfTheExtension = dependents.filter((d) =>\n\t\t\t\td.dependencies.some((id) =>\n\t\t\t\t\tareSameExtensions({ id }, e.identifier),\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (dependentsOfTheExtension.length) {\n\t\t\t\treturn this.getErrorMessageForDisablingAnExtensionWithDependents(\n\t\t\t\t\te,\n\t\t\t\t\tdependentsOfTheExtension,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tprivate getErrorMessageForDisablingAnExtensionWithDependents(\n\t\textension: IExtension,\n\t\tdependents: IExtension[],\n\t): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize(\n\t\t\t\t\"singleDependentError\",\n\t\t\t\t\"Cannot disable '{0}' extension alone. '{1}' extension depends on this. Do you want to disable all these extensions?\",\n\t\t\t\textension.displayName,\n\t\t\t\tdependents[0].displayName,\n\t\t\t);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize(\n\t\t\t\t\"twoDependentsError\",\n\t\t\t\t\"Cannot disable '{0}' extension alone. '{1}' and '{2}' extensions depend on this. Do you want to disable all these extensions?\",\n\t\t\t\textension.displayName,\n\t\t\t\tdependents[0].displayName,\n\t\t\t\tdependents[1].displayName,\n\t\t\t);\n\t\t}\n\t\treturn nls.localize(\n\t\t\t\"multipleDependentsError\",\n\t\t\t\"Cannot disable '{0}' extension alone. '{1}', '{2}' and other extensions depend on this. Do you want to disable all these extensions?\",\n\t\t\textension.displayName,\n\t\t\tdependents[0].displayName,\n\t\t\tdependents[1].displayName,\n\t\t);\n\t}\n\n\tprivate async doSetEnablement(\n\t\textensions: IExtension[],\n\t\tenablementState: EnablementState,\n\t): Promise<boolean[]> {\n\t\tconst changed = await this.extensionEnablementService.setEnablement(\n\t\t\textensions.map((e) => e.local!),\n\t\t\tenablementState,\n\t\t);\n\t\tfor (let i = 0; i < changed.length; i++) {\n\t\t\tif (changed[i]) {\n\t\t\t\t/* __GDPR__\n\t\t\t\t\"extension:enable\" : {\n\t\t\t\t\t\"owner\": \"sandy081\",\n\t\t\t\t\t\"${include}\": [\n\t\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t/* __GDPR__\n\t\t\t\t\"extension:disable\" : {\n\t\t\t\t\t\"owner\": \"sandy081\",\n\t\t\t\t\t\"${include}\": [\n\t\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.telemetryService.publicLog(\n\t\t\t\t\tenablementState === EnablementState.EnabledGlobally ||\n\t\t\t\t\t\tenablementState === EnablementState.EnabledWorkspace\n\t\t\t\t\t\t? \"extension:enable\"\n\t\t\t\t\t\t: \"extension:disable\",\n\t\t\t\t\textensions[i].telemetryData,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t// Current service reports progress when installing/uninstalling extensions\n\t// This is to report progress for other sources of extension install/uninstall changes\n\t// Since we cannot differentiate between the two, we report progress for all extension install/uninstall changes\n\tprivate _activityCallBack: ((value: void) => void) | undefined;\n\tprivate reportProgressFromOtherSources(): void {\n\t\tif (\n\t\t\tthis.installed.some(\n\t\t\t\t(e) =>\n\t\t\t\t\te.state === ExtensionState.Installing ||\n\t\t\t\t\te.state === ExtensionState.Uninstalling,\n\t\t\t)\n\t\t) {\n\t\t\tif (!this._activityCallBack) {\n\t\t\t\tthis.withProgress(\n\t\t\t\t\t{ location: ProgressLocation.Extensions },\n\t\t\t\t\t() =>\n\t\t\t\t\t\tnew Promise(\n\t\t\t\t\t\t\t(resolve) => (this._activityCallBack = resolve),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._activityCallBack?.();\n\t\t\tthis._activityCallBack = undefined;\n\t\t}\n\t}\n\n\tprivate withProgress<T>(\n\t\toptions: IProgressOptions,\n\t\ttask: () => Promise<T>,\n\t): Promise<T> {\n\t\treturn this.progressService.withProgress(options, async () => {\n\t\t\tconst cancelableTask = createCancelablePromise(() => task());\n\t\t\tthis.tasksInProgress.push(cancelableTask);\n\t\t\ttry {\n\t\t\t\treturn await cancelableTask;\n\t\t\t} finally {\n\t\t\t\tconst index = this.tasksInProgress.indexOf(cancelableTask);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tthis.tasksInProgress.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onError(err: any): void {\n\t\tif (isCancellationError(err)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = (err && err.message) || \"\";\n\n\t\tif (\n\t\t\t/getaddrinfo ENOTFOUND|getaddrinfo ENOENT|connect EACCES|connect ECONNREFUSED/.test(\n\t\t\t\tmessage,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notificationService.error(err);\n\t}\n\n\thandleURL(uri: URI, options?: IOpenURLOptions): Promise<boolean> {\n\t\tif (!/^extension/.test(uri.path)) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.onOpenExtensionUrl(uri);\n\t\treturn Promise.resolve(true);\n\t}\n\n\tprivate onOpenExtensionUrl(uri: URI): void {\n\t\tconst match = /^extension\\/([^/]+)$/.exec(uri.path);\n\n\t\tif (!match) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst extensionId = match[1];\n\n\t\tthis.queryLocal()\n\t\t\t.then(async (local) => {\n\t\t\t\tlet extension = local.find((local) =>\n\t\t\t\t\tareSameExtensions(local.identifier, { id: extensionId }),\n\t\t\t\t);\n\t\t\t\tif (!extension) {\n\t\t\t\t\t[extension] = await this.getExtensions(\n\t\t\t\t\t\t[{ id: extensionId }],\n\t\t\t\t\t\t{ source: \"uri\" },\n\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (extension) {\n\t\t\t\t\tawait this.hostService.focus(mainWindow);\n\t\t\t\t\tawait this.open(extension);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(undefined, (error) => this.onError(error));\n\t}\n\n\tprivate getPublishersToAutoUpdate(): string[] {\n\t\treturn this.getEnabledAutoUpdateExtensions().filter(\n\t\t\t(id) => !EXTENSION_IDENTIFIER_REGEX.test(id),\n\t\t);\n\t}\n\n\tgetEnabledAutoUpdateExtensions(): string[] {\n\t\ttry {\n\t\t\tconst parsedValue = JSON.parse(\n\t\t\t\tthis.enabledAuotUpdateExtensionsValue,\n\t\t\t);\n\t\t\tif (Array.isArray(parsedValue)) {\n\t\t\t\treturn parsedValue;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t/* Ignore */\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate setEnabledAutoUpdateExtensions(\n\t\tenabledAutoUpdateExtensions: string[],\n\t): void {\n\t\tthis.enabledAuotUpdateExtensionsValue = JSON.stringify(\n\t\t\tenabledAutoUpdateExtensions,\n\t\t);\n\t}\n\n\tprivate _enabledAutoUpdateExtensionsValue: string | undefined;\n\tprivate get enabledAuotUpdateExtensionsValue(): string {\n\t\tif (!this._enabledAutoUpdateExtensionsValue) {\n\t\t\tthis._enabledAutoUpdateExtensionsValue =\n\t\t\t\tthis.getEnabledAutoUpdateExtensionsValue();\n\t\t}\n\n\t\treturn this._enabledAutoUpdateExtensionsValue;\n\t}\n\n\tprivate set enabledAuotUpdateExtensionsValue(enabledAuotUpdateExtensionsValue: string) {\n\t\tif (\n\t\t\tthis.enabledAuotUpdateExtensionsValue !==\n\t\t\tenabledAuotUpdateExtensionsValue\n\t\t) {\n\t\t\tthis._enabledAutoUpdateExtensionsValue =\n\t\t\t\tenabledAuotUpdateExtensionsValue;\n\t\t\tthis.setEnabledAutoUpdateExtensionsValue(\n\t\t\t\tenabledAuotUpdateExtensionsValue,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getEnabledAutoUpdateExtensionsValue(): string {\n\t\treturn this.storageService.get(\n\t\t\tEXTENSIONS_AUTO_UPDATE_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t\t\"[]\",\n\t\t);\n\t}\n\n\tprivate setEnabledAutoUpdateExtensionsValue(value: string): void {\n\t\tthis.storageService.store(\n\t\t\tEXTENSIONS_AUTO_UPDATE_KEY,\n\t\t\tvalue,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n\n\tgetDisabledAutoUpdateExtensions(): string[] {\n\t\ttry {\n\t\t\tconst parsedValue = JSON.parse(\n\t\t\t\tthis.disabledAutoUpdateExtensionsValue,\n\t\t\t);\n\t\t\tif (Array.isArray(parsedValue)) {\n\t\t\t\treturn parsedValue;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t/* Ignore */\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate setDisabledAutoUpdateExtensions(\n\t\tdisabledAutoUpdateExtensions: string[],\n\t): void {\n\t\tthis.disabledAutoUpdateExtensionsValue = JSON.stringify(\n\t\t\tdisabledAutoUpdateExtensions,\n\t\t);\n\t}\n\n\tprivate _disabledAutoUpdateExtensionsValue: string | undefined;\n\tprivate get disabledAutoUpdateExtensionsValue(): string {\n\t\tif (!this._disabledAutoUpdateExtensionsValue) {\n\t\t\tthis._disabledAutoUpdateExtensionsValue =\n\t\t\t\tthis.getDisabledAutoUpdateExtensionsValue();\n\t\t}\n\n\t\treturn this._disabledAutoUpdateExtensionsValue;\n\t}\n\n\tprivate set disabledAutoUpdateExtensionsValue(disabledAutoUpdateExtensionsValue: string) {\n\t\tif (\n\t\t\tthis.disabledAutoUpdateExtensionsValue !==\n\t\t\tdisabledAutoUpdateExtensionsValue\n\t\t) {\n\t\t\tthis._disabledAutoUpdateExtensionsValue =\n\t\t\t\tdisabledAutoUpdateExtensionsValue;\n\t\t\tthis.setDisabledAutoUpdateExtensionsValue(\n\t\t\t\tdisabledAutoUpdateExtensionsValue,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getDisabledAutoUpdateExtensionsValue(): string {\n\t\treturn this.storageService.get(\n\t\t\tEXTENSIONS_DONOT_AUTO_UPDATE_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t\t\"[]\",\n\t\t);\n\t}\n\n\tprivate setDisabledAutoUpdateExtensionsValue(value: string): void {\n\t\tthis.storageService.store(\n\t\t\tEXTENSIONS_DONOT_AUTO_UPDATE_KEY,\n\t\t\tvalue,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["e", "extension", "token", "extensions", "shouldAutoUpdate", "shouldNotAutoUpdate", "index", "local"]
}
