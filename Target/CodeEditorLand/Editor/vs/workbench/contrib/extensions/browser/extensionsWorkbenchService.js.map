{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport * as semver from '../../../../base/common/semver/semver.js';\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport { index } from '../../../../base/common/arrays.js';\nimport { CancelablePromise, Promises, ThrottledDelayer, createCancelablePromise } from '../../../../base/common/async.js';\nimport { CancellationError, isCancellationError } from '../../../../base/common/errors.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { IPager, singlePagePager } from '../../../../base/common/paging.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport {\n\tIExtensionGalleryService, ILocalExtension, IGalleryExtension, IQueryOptions,\n\tInstallExtensionEvent, DidUninstallExtensionEvent, InstallOperation, WEB_EXTENSION_TAG, InstallExtensionResult,\n\tIExtensionsControlManifest, IExtensionInfo, IExtensionQueryOptions, IDeprecationInfo, isTargetPlatformCompatible, InstallExtensionInfo, EXTENSION_IDENTIFIER_REGEX,\n\tInstallOptions, IProductVersion,\n\tUninstallExtensionInfo\n} from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { IWorkbenchExtensionEnablementService, EnablementState, IExtensionManagementServerService, IExtensionManagementServer, IWorkbenchExtensionManagementService, DefaultIconPath, IResourceExtension, extensionsConfigurationNodeBase } from '../../../services/extensionManagement/common/extensionManagement.js';\nimport { getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, areSameExtensions, groupByExtension, getGalleryExtensionId } from '../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IExtension, ExtensionState, IExtensionsWorkbenchService, AutoUpdateConfigurationKey, AutoCheckUpdatesConfigurationKey, HasOutdatedExtensionsContext, AutoUpdateConfigurationValue, InstallExtensionOptions, ExtensionRuntimeState, ExtensionRuntimeActionType, AutoRestartConfigurationKey, VIEWLET_ID, IExtensionsViewPaneContainer, IExtensionsNotification } from '../common/extensions.js';\nimport { IEditorService, SIDE_GROUP, ACTIVE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { IURLService, IURLHandler, IOpenURLOptions } from '../../../../platform/url/common/url.js';\nimport { ExtensionsInput, IExtensionEditorOptions } from '../common/extensionsInput.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IProgressOptions, IProgressService, ProgressLocation } from '../../../../platform/progress/common/progress.js';\nimport { INotificationService, NotificationPriority, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IExtensionManifest, ExtensionType, IExtension as IPlatformExtension, TargetPlatform, ExtensionIdentifier, IExtensionIdentifier, IExtensionDescription, isApplicationScopedExtension } from '../../../../platform/extensions/common/extensions.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { FileAccess } from '../../../../base/common/network.js';\nimport { IIgnoredExtensionsManagementService } from '../../../../platform/userDataSync/common/ignoredExtensions.js';\nimport { IUserDataAutoSyncService, IUserDataSyncEnablementService, SyncResource } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { isBoolean, isDefined, isString, isUndefined } from '../../../../base/common/types.js';\nimport { IExtensionManifestPropertiesService } from '../../../services/extensions/common/extensionManifestPropertiesService.js';\nimport { IExtensionService, IExtensionsStatus as IExtensionRuntimeStatus, toExtension, toExtensionDescription } from '../../../services/extensions/common/extensions.js';\nimport { isWeb, language } from '../../../../base/common/platform.js';\nimport { getLocale } from '../../../../platform/languagePacks/common/languagePacks.js';\nimport { ILocaleService } from '../../../services/localization/common/locale.js';\nimport { TelemetryTrustedValue } from '../../../../platform/telemetry/common/telemetryUtils.js';\nimport { ILifecycleService, LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IUserDataProfileService } from '../../../services/userDataProfile/common/userDataProfile.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { IDialogService, IPromptButton } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IUpdateService, StateType } from '../../../../platform/update/common/update.js';\nimport { areApiProposalsCompatible, isEngineValid } from '../../../../platform/extensions/common/extensionValidator.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { ShowCurrentReleaseNotesActionId } from '../../update/common/update.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\n\ninterface IExtensionStateProvider<T> {\n\t(extension: Extension): T;\n}\n\ninterface InstalledExtensionsEvent {\n\treadonly extensionIds: TelemetryTrustedValue<string>;\n\treadonly count: number;\n}\ntype ExtensionsLoadClassification = {\n\towner: 'digitarald';\n\tcomment: 'Helps to understand which extensions are the most actively used.';\n\treadonly extensionIds: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'The list of extension ids that are installed.' };\n\treadonly count: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'The number of extensions that are installed.' };\n};\n\nexport class Extension implements IExtension {\n\n\tpublic enablementState: EnablementState = EnablementState.EnabledGlobally;\n\n\tprivate galleryResourcesCache = new Map<string, any>();\n\n\tconstructor(\n\t\tprivate stateProvider: IExtensionStateProvider<ExtensionState>,\n\t\tprivate runtimeStateProvider: IExtensionStateProvider<ExtensionRuntimeState | undefined>,\n\t\tpublic readonly server: IExtensionManagementServer | undefined,\n\t\tpublic local: ILocalExtension | undefined,\n\t\tprivate _gallery: IGalleryExtension | undefined,\n\t\tprivate readonly resourceExtensionInfo: { resourceExtension: IResourceExtension; isWorkspaceScoped: boolean } | undefined,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t}\n\n\tget resourceExtension(): IResourceExtension | undefined {\n\t\tif (this.resourceExtensionInfo) {\n\t\t\treturn this.resourceExtensionInfo.resourceExtension;\n\t\t}\n\t\tif (this.local?.isWorkspaceScoped) {\n\t\t\treturn {\n\t\t\t\ttype: 'resource',\n\t\t\t\tidentifier: this.local.identifier,\n\t\t\t\tlocation: this.local.location,\n\t\t\t\tmanifest: this.local.manifest,\n\t\t\t\tchangelogUri: this.local.changelogUrl,\n\t\t\t\treadmeUri: this.local.readmeUrl,\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget gallery(): IGalleryExtension | undefined {\n\t\treturn this._gallery;\n\t}\n\n\tset gallery(gallery: IGalleryExtension | undefined) {\n\t\tthis._gallery = gallery;\n\t\tthis.galleryResourcesCache.clear();\n\t}\n\n\tget type(): ExtensionType {\n\t\treturn this.local ? this.local.type : ExtensionType.User;\n\t}\n\n\tget isBuiltin(): boolean {\n\t\treturn this.local ? this.local.isBuiltin : false;\n\t}\n\n\tget isWorkspaceScoped(): boolean {\n\t\tif (this.local) {\n\t\t\treturn this.local.isWorkspaceScoped;\n\t\t}\n\t\tif (this.resourceExtensionInfo) {\n\t\t\treturn this.resourceExtensionInfo.isWorkspaceScoped;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget name(): string {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.name;\n\t\t}\n\t\treturn this.getManifestFromLocalOrResource()?.name ?? '';\n\t}\n\n\tget displayName(): string {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.displayName || this.gallery.name;\n\t\t}\n\n\t\treturn this.getManifestFromLocalOrResource()?.displayName ?? this.name;\n\t}\n\n\tget identifier(): IExtensionIdentifier {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.identifier;\n\t\t}\n\t\tif (this.resourceExtension) {\n\t\t\treturn this.resourceExtension.identifier;\n\t\t}\n\t\treturn this.local!.identifier;\n\t}\n\n\tget uuid(): string | undefined {\n\t\treturn this.gallery ? this.gallery.identifier.uuid : this.local?.identifier.uuid;\n\t}\n\n\tget publisher(): string {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.publisher;\n\t\t}\n\t\treturn this.getManifestFromLocalOrResource()?.publisher ?? '';\n\t}\n\n\tget publisherDisplayName(): string {\n\t\tif (this.gallery) {\n\t\t\treturn this.gallery.publisherDisplayName || this.gallery.publisher;\n\t\t}\n\n\t\tif (this.local?.publisherDisplayName) {\n\t\t\treturn this.local.publisherDisplayName;\n\t\t}\n\n\t\treturn this.publisher;\n\t}\n\n\tget publisherUrl(): URI | undefined {\n\t\tif (!this.productService.extensionsGallery || !this.gallery) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn resources.joinPath(URI.parse(this.productService.extensionsGallery.publisherUrl), this.publisher);\n\t}\n\n\tget publisherDomain(): { link: string; verified: boolean } | undefined {\n\t\treturn this.gallery?.publisherDomain;\n\t}\n\n\tget publisherSponsorLink(): URI | undefined {\n\t\treturn this.gallery?.publisherSponsorLink ? URI.parse(this.gallery.publisherSponsorLink) : undefined;\n\t}\n\n\tget version(): string {\n\t\treturn this.local ? this.local.manifest.version : this.latestVersion;\n\t}\n\n\tget pinned(): boolean {\n\t\treturn !!this.local?.pinned;\n\t}\n\n\tget latestVersion(): string {\n\t\treturn this.gallery ? this.gallery.version : this.getManifestFromLocalOrResource()?.version ?? '';\n\t}\n\n\tget description(): string {\n\t\treturn this.gallery ? this.gallery.description : this.getManifestFromLocalOrResource()?.description ?? '';\n\t}\n\n\tget url(): string | undefined {\n\t\tif (!this.productService.extensionsGallery || !this.gallery) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn `${this.productService.extensionsGallery.itemUrl}?itemName=${this.publisher}.${this.name}`;\n\t}\n\n\tget iconUrl(): string {\n\t\treturn this.galleryIconUrl || this.resourceExtensionIconUrl || this.localIconUrl || this.defaultIconUrl;\n\t}\n\n\tget iconUrlFallback(): string {\n\t\treturn this.galleryIconUrlFallback || this.resourceExtensionIconUrl || this.localIconUrl || this.defaultIconUrl;\n\t}\n\n\tprivate get localIconUrl(): string | null {\n\t\tif (this.local && this.local.manifest.icon) {\n\t\t\treturn FileAccess.uriToBrowserUri(resources.joinPath(this.local.location, this.local.manifest.icon)).toString(true);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate get resourceExtensionIconUrl(): string | null {\n\t\tif (this.resourceExtension?.manifest.icon) {\n\t\t\treturn FileAccess.uriToBrowserUri(resources.joinPath(this.resourceExtension.location, this.resourceExtension.manifest.icon)).toString(true);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate get galleryIconUrl(): string | null {\n\t\treturn this.gallery?.assets.icon ? this.gallery.assets.icon.uri : null;\n\t}\n\n\tprivate get galleryIconUrlFallback(): string | null {\n\t\treturn this.gallery?.assets.icon ? this.gallery.assets.icon.fallbackUri : null;\n\t}\n\n\tprivate get defaultIconUrl(): string {\n\t\tif (this.type === ExtensionType.System && this.local) {\n\t\t\tif (this.local.manifest && this.local.manifest.contributes) {\n\t\t\t\tif (Array.isArray(this.local.manifest.contributes.themes) && this.local.manifest.contributes.themes.length) {\n\t\t\t\t\treturn FileAccess.asBrowserUri('vs/workbench/contrib/extensions/browser/media/theme-icon.png').toString(true);\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(this.local.manifest.contributes.grammars) && this.local.manifest.contributes.grammars.length) {\n\t\t\t\t\treturn FileAccess.asBrowserUri('vs/workbench/contrib/extensions/browser/media/language-icon.svg').toString(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn DefaultIconPath;\n\t}\n\n\tget repository(): string | undefined {\n\t\treturn this.gallery && this.gallery.assets.repository ? this.gallery.assets.repository.uri : undefined;\n\t}\n\n\tget licenseUrl(): string | undefined {\n\t\treturn this.gallery && this.gallery.assets.license ? this.gallery.assets.license.uri : undefined;\n\t}\n\n\tget supportUrl(): string | undefined {\n\t\treturn this.gallery && this.gallery.supportLink ? this.gallery.supportLink : undefined;\n\t}\n\n\tget state(): ExtensionState {\n\t\treturn this.stateProvider(this);\n\t}\n\n\tpublic isMalicious: boolean = false;\n\tpublic deprecationInfo: IDeprecationInfo | undefined;\n\n\tget installCount(): number | undefined {\n\t\treturn this.gallery ? this.gallery.installCount : undefined;\n\t}\n\n\tget rating(): number | undefined {\n\t\treturn this.gallery ? this.gallery.rating : undefined;\n\t}\n\n\tget ratingCount(): number | undefined {\n\t\treturn this.gallery ? this.gallery.ratingCount : undefined;\n\t}\n\n\tget outdated(): boolean {\n\t\ttry {\n\t\t\tif (!this.gallery || !this.local) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// Do not allow updating system extensions in stable\n\t\t\tif (this.type === ExtensionType.System && this.productService.quality === 'stable') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!this.local.preRelease && this.gallery.properties.isPreReleaseVersion) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (semver.gt(this.latestVersion, this.version)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.outdatedTargetPlatform) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* Ignore */\n\t\t}\n\t\treturn false;\n\t}\n\n\tget outdatedTargetPlatform(): boolean {\n\t\treturn !!this.local && !!this.gallery\n\t\t\t&& ![TargetPlatform.UNDEFINED, TargetPlatform.WEB].includes(this.local.targetPlatform)\n\t\t\t&& this.gallery.properties.targetPlatform !== TargetPlatform.WEB\n\t\t\t&& this.local.targetPlatform !== this.gallery.properties.targetPlatform\n\t\t\t&& semver.eq(this.latestVersion, this.version);\n\t}\n\n\tget runtimeState(): ExtensionRuntimeState | undefined {\n\t\treturn this.runtimeStateProvider(this);\n\t}\n\n\tget telemetryData(): any {\n\t\tconst { local, gallery } = this;\n\n\t\tif (gallery) {\n\t\t\treturn getGalleryExtensionTelemetryData(gallery);\n\t\t} else if (local) {\n\t\t\treturn getLocalExtensionTelemetryData(local);\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tget preview(): boolean {\n\t\treturn this.local?.manifest.preview ?? this.gallery?.preview ?? false;\n\t}\n\n\tget preRelease(): boolean {\n\t\treturn !!this.local?.preRelease;\n\t}\n\n\tget isPreReleaseVersion(): boolean {\n\t\tif (this.local) {\n\t\t\treturn this.local.isPreReleaseVersion;\n\t\t}\n\t\treturn !!this.gallery?.properties.isPreReleaseVersion;\n\t}\n\n\tprivate _extensionEnabledWithPreRelease: boolean | undefined;\n\tget hasPreReleaseVersion(): boolean {\n\t\treturn !!this.gallery?.hasPreReleaseVersion || !!this.local?.hasPreReleaseVersion || !!this._extensionEnabledWithPreRelease;\n\t}\n\n\tget hasReleaseVersion(): boolean {\n\t\treturn !!this.resourceExtension || !!this.gallery?.hasReleaseVersion;\n\t}\n\n\tprivate getLocal(): ILocalExtension | undefined {\n\t\treturn this.local && !this.outdated ? this.local : undefined;\n\t}\n\n\tasync getManifest(token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tconst local = this.getLocal();\n\t\tif (local) {\n\t\t\treturn local.manifest;\n\t\t}\n\n\t\tif (this.gallery) {\n\t\t\treturn this.getGalleryManifest(token);\n\t\t}\n\n\t\tif (this.resourceExtension) {\n\t\t\treturn this.resourceExtension.manifest;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync getGalleryManifest(token: CancellationToken = CancellationToken.None): Promise<IExtensionManifest | null> {\n\t\tif (this.gallery) {\n\t\t\tlet cache = this.galleryResourcesCache.get('manifest');\n\t\t\tif (!cache) {\n\t\t\t\tif (this.gallery.assets.manifest) {\n\t\t\t\t\tthis.galleryResourcesCache.set('manifest', cache = this.galleryService.getManifest(this.gallery, token)\n\t\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\t\tthis.galleryResourcesCache.delete('manifest');\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.error(nls.localize('Manifest is not found', \"Manifest is not found\"), this.identifier.id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cache;\n\t\t}\n\t\treturn null;\n\t}\n\n\thasReadme(): boolean {\n\t\tif (this.local && this.local.readmeUrl) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.gallery && this.gallery.assets.readme) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.resourceExtension?.readmeUri) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.type === ExtensionType.System;\n\t}\n\n\tasync getReadme(token: CancellationToken): Promise<string> {\n\t\tconst local = this.getLocal();\n\t\tif (local?.readmeUrl) {\n\t\t\tconst content = await this.fileService.readFile(local.readmeUrl);\n\t\t\treturn content.value.toString();\n\t\t}\n\n\t\tif (this.gallery) {\n\t\t\tif (this.gallery.assets.readme) {\n\t\t\t\treturn this.galleryService.getReadme(this.gallery, token);\n\t\t\t}\n\t\t\tthis.telemetryService.publicLog('extensions:NotFoundReadMe', this.telemetryData);\n\t\t}\n\n\t\tif (this.type === ExtensionType.System) {\n\t\t\treturn Promise.resolve(`# ${this.displayName || this.name}\n**Notice:** This extension is bundled with Visual Studio Code. It can be disabled but not uninstalled.\n## Features\n${this.description}\n`);\n\t\t}\n\n\t\tif (this.resourceExtension?.readmeUri) {\n\t\t\tconst content = await this.fileService.readFile(this.resourceExtension?.readmeUri);\n\t\t\treturn content.value.toString();\n\t\t}\n\n\t\treturn Promise.reject(new Error('not available'));\n\t}\n\n\thasChangelog(): boolean {\n\t\tif (this.local && this.local.changelogUrl) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.gallery && this.gallery.assets.changelog) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.type === ExtensionType.System;\n\t}\n\n\tasync getChangelog(token: CancellationToken): Promise<string> {\n\t\tconst local = this.getLocal();\n\t\tif (local?.changelogUrl) {\n\t\t\tconst content = await this.fileService.readFile(local.changelogUrl);\n\t\t\treturn content.value.toString();\n\t\t}\n\n\t\tif (this.gallery?.assets.changelog) {\n\t\t\treturn this.galleryService.getChangelog(this.gallery, token);\n\t\t}\n\n\t\tif (this.type === ExtensionType.System) {\n\t\t\treturn Promise.resolve(`Please check the [VS Code Release Notes](command:${ShowCurrentReleaseNotesActionId}) for changes to the built-in extensions.`);\n\t\t}\n\n\t\treturn Promise.reject(new Error('not available'));\n\t}\n\n\tget categories(): readonly string[] {\n\t\tconst { local, gallery, resourceExtension } = this;\n\t\tif (local && local.manifest.categories && !this.outdated) {\n\t\t\treturn local.manifest.categories;\n\t\t}\n\t\tif (gallery) {\n\t\t\treturn gallery.categories;\n\t\t}\n\t\tif (resourceExtension) {\n\t\t\treturn resourceExtension.manifest.categories ?? [];\n\t\t}\n\t\treturn [];\n\t}\n\n\tget tags(): readonly string[] {\n\t\tconst { gallery } = this;\n\t\tif (gallery) {\n\t\t\treturn gallery.tags.filter(tag => !tag.startsWith('_'));\n\t\t}\n\t\treturn [];\n\t}\n\n\tget dependencies(): string[] {\n\t\tconst { local, gallery, resourceExtension } = this;\n\t\tif (local && local.manifest.extensionDependencies && !this.outdated) {\n\t\t\treturn local.manifest.extensionDependencies;\n\t\t}\n\t\tif (gallery) {\n\t\t\treturn gallery.properties.dependencies || [];\n\t\t}\n\t\tif (resourceExtension) {\n\t\t\treturn resourceExtension.manifest.extensionDependencies || [];\n\t\t}\n\t\treturn [];\n\t}\n\n\tget extensionPack(): string[] {\n\t\tconst { local, gallery, resourceExtension } = this;\n\t\tif (local && local.manifest.extensionPack && !this.outdated) {\n\t\t\treturn local.manifest.extensionPack;\n\t\t}\n\t\tif (gallery) {\n\t\t\treturn gallery.properties.extensionPack || [];\n\t\t}\n\t\tif (resourceExtension) {\n\t\t\treturn resourceExtension.manifest.extensionPack || [];\n\t\t}\n\t\treturn [];\n\t}\n\n\tsetExtensionsControlManifest(extensionsControlManifest: IExtensionsControlManifest): void {\n\t\tthis.isMalicious = extensionsControlManifest.malicious.some(identifier => areSameExtensions(this.identifier, identifier));\n\t\tthis.deprecationInfo = extensionsControlManifest.deprecated ? extensionsControlManifest.deprecated[this.identifier.id.toLowerCase()] : undefined;\n\t\tthis._extensionEnabledWithPreRelease = extensionsControlManifest?.extensionsEnabledWithPreRelease?.includes(this.identifier.id.toLowerCase());\n\t}\n\n\tprivate getManifestFromLocalOrResource(): IExtensionManifest | null {\n\t\tif (this.local) {\n\t\t\treturn this.local.manifest;\n\t\t}\n\t\tif (this.resourceExtension) {\n\t\t\treturn this.resourceExtension.manifest;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nconst EXTENSIONS_AUTO_UPDATE_KEY = 'extensions.autoUpdate';\nconst EXTENSIONS_DONOT_AUTO_UPDATE_KEY = 'extensions.donotAutoUpdate';\n\nclass Extensions extends Disposable {\n\n\tprivate readonly _onChange = this._register(new Emitter<{ extension: Extension; operation?: InstallOperation } | undefined>());\n\tget onChange() { return this._onChange.event; }\n\n\tprivate readonly _onReset = this._register(new Emitter<void>());\n\tget onReset() { return this._onReset.event; }\n\n\tprivate installing: Extension[] = [];\n\tprivate uninstalling: Extension[] = [];\n\tprivate installed: Extension[] = [];\n\n\tconstructor(\n\t\treadonly server: IExtensionManagementServer,\n\t\tprivate readonly stateProvider: IExtensionStateProvider<ExtensionState>,\n\t\tprivate readonly runtimeStateProvider: IExtensionStateProvider<ExtensionRuntimeState | undefined>,\n\t\tprivate readonly isWorkspaceServer: boolean,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IWorkbenchExtensionManagementService private readonly workbenchExtensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._register(server.extensionManagementService.onInstallExtension(e => this.onInstallExtension(e)));\n\t\tthis._register(server.extensionManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t\tthis._register(server.extensionManagementService.onUninstallExtension(e => this.onUninstallExtension(e.identifier)));\n\t\tthis._register(server.extensionManagementService.onDidUninstallExtension(e => this.onDidUninstallExtension(e)));\n\t\tthis._register(server.extensionManagementService.onDidUpdateExtensionMetadata(e => this.onDidUpdateExtensionMetadata(e.local)));\n\t\tthis._register(server.extensionManagementService.onDidChangeProfile(() => this.reset()));\n\t\tthis._register(extensionEnablementService.onEnablementChanged(e => this.onEnablementChanged(e)));\n\t\tthis._register(Event.any(this.onChange, this.onReset)(() => this._local = undefined));\n\t\tif (this.isWorkspaceServer) {\n\t\t\tthis._register(this.workbenchExtensionManagementService.onInstallExtension(e => {\n\t\t\t\tif (e.workspaceScoped) {\n\t\t\t\t\tthis.onInstallExtension(e);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._register(this.workbenchExtensionManagementService.onDidInstallExtensions(e => {\n\t\t\t\tconst result = e.filter(e => e.workspaceScoped);\n\t\t\t\tif (result.length) {\n\t\t\t\t\tthis.onDidInstallExtensions(result);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._register(this.workbenchExtensionManagementService.onUninstallExtension(e => {\n\t\t\t\tif (e.workspaceScoped) {\n\t\t\t\t\tthis.onUninstallExtension(e.identifier);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._register(this.workbenchExtensionManagementService.onDidUninstallExtension(e => {\n\t\t\t\tif (e.workspaceScoped) {\n\t\t\t\t\tthis.onDidUninstallExtension(e);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate _local: IExtension[] | undefined;\n\tget local(): IExtension[] {\n\t\tif (!this._local) {\n\t\t\tthis._local = [];\n\t\t\tfor (const extension of this.installed) {\n\t\t\t\tthis._local.push(extension);\n\t\t\t}\n\t\t\tfor (const extension of this.installing) {\n\t\t\t\tif (!this.installed.some(installed => areSameExtensions(installed.identifier, extension.identifier))) {\n\t\t\t\t\tthis._local.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this._local;\n\t}\n\n\tasync queryInstalled(productVersion: IProductVersion): Promise<IExtension[]> {\n\t\tawait this.fetchInstalledExtensions(productVersion);\n\t\tthis._onChange.fire(undefined);\n\t\treturn this.local;\n\t}\n\n\tasync syncInstalledExtensionsWithGallery(galleryExtensions: IGalleryExtension[], productVersion: IProductVersion): Promise<void> {\n\t\tconst extensions = await this.mapInstalledExtensionWithCompatibleGalleryExtension(galleryExtensions, productVersion);\n\t\tfor (const [extension, gallery] of extensions) {\n\t\t\t// update metadata of the extension if it does not exist\n\t\t\tif (extension.local && !extension.local.identifier.uuid) {\n\t\t\t\textension.local = await this.updateMetadata(extension.local, gallery);\n\t\t\t}\n\t\t\tif (!extension.gallery || extension.gallery.version !== gallery.version || extension.gallery.properties.targetPlatform !== gallery.properties.targetPlatform) {\n\t\t\t\textension.gallery = gallery;\n\t\t\t\tthis._onChange.fire({ extension });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async mapInstalledExtensionWithCompatibleGalleryExtension(galleryExtensions: IGalleryExtension[], productVersion: IProductVersion): Promise<[Extension, IGalleryExtension][]> {\n\t\tconst mappedExtensions = this.mapInstalledExtensionWithGalleryExtension(galleryExtensions);\n\t\tconst targetPlatform = await this.server.extensionManagementService.getTargetPlatform();\n\t\tconst compatibleGalleryExtensions: IGalleryExtension[] = [];\n\t\tconst compatibleGalleryExtensionsToFetch: IExtensionInfo[] = [];\n\t\tawait Promise.allSettled(mappedExtensions.map(async ([extension, gallery]) => {\n\t\t\tif (extension.local) {\n\t\t\t\tif (await this.galleryService.isExtensionCompatible(gallery, extension.local.preRelease, targetPlatform, productVersion)) {\n\t\t\t\t\tcompatibleGalleryExtensions.push(gallery);\n\t\t\t\t} else {\n\t\t\t\t\tcompatibleGalleryExtensionsToFetch.push({ ...extension.local.identifier, preRelease: extension.local.preRelease });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tif (compatibleGalleryExtensionsToFetch.length) {\n\t\t\tconst result = await this.galleryService.getExtensions(compatibleGalleryExtensionsToFetch, { targetPlatform, compatible: true, queryAllVersions: true, productVersion }, CancellationToken.None);\n\t\t\tcompatibleGalleryExtensions.push(...result);\n\t\t}\n\t\treturn this.mapInstalledExtensionWithGalleryExtension(compatibleGalleryExtensions);\n\t}\n\n\tprivate mapInstalledExtensionWithGalleryExtension(galleryExtensions: IGalleryExtension[]): [Extension, IGalleryExtension][] {\n\t\tconst mappedExtensions: [Extension, IGalleryExtension][] = [];\n\t\tconst byUUID = new Map<string, IGalleryExtension>(), byID = new Map<string, IGalleryExtension>();\n\t\tfor (const gallery of galleryExtensions) {\n\t\t\tbyUUID.set(gallery.identifier.uuid, gallery);\n\t\t\tbyID.set(gallery.identifier.id.toLowerCase(), gallery);\n\t\t}\n\t\tfor (const installed of this.installed) {\n\t\t\tif (installed.uuid) {\n\t\t\t\tconst gallery = byUUID.get(installed.uuid);\n\t\t\t\tif (gallery) {\n\t\t\t\t\tmappedExtensions.push([installed, gallery]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (installed.local?.source !== 'resource') {\n\t\t\t\tconst gallery = byID.get(installed.identifier.id.toLowerCase());\n\t\t\t\tif (gallery) {\n\t\t\t\t\tmappedExtensions.push([installed, gallery]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mappedExtensions;\n\t}\n\n\tprivate async updateMetadata(localExtension: ILocalExtension, gallery: IGalleryExtension): Promise<ILocalExtension> {\n\t\tlet isPreReleaseVersion = false;\n\t\tif (localExtension.manifest.version !== gallery.version) {\n\t\t\ttype GalleryServiceMatchInstalledExtensionClassification = {\n\t\t\t\towner: 'sandy081';\n\t\t\t\tcomment: 'Report when a request is made to update metadata of an installed extension';\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<{}, GalleryServiceMatchInstalledExtensionClassification>('galleryService:updateMetadata');\n\t\t\tconst galleryWithLocalVersion: IGalleryExtension | undefined = (await this.galleryService.getExtensions([{ ...localExtension.identifier, version: localExtension.manifest.version }], CancellationToken.None))[0];\n\t\t\tisPreReleaseVersion = !!galleryWithLocalVersion?.properties?.isPreReleaseVersion;\n\t\t}\n\t\treturn this.server.extensionManagementService.updateMetadata(localExtension, { id: gallery.identifier.uuid, publisherDisplayName: gallery.publisherDisplayName, publisherId: gallery.publisherId, isPreReleaseVersion }, this.userDataProfileService.currentProfile.extensionsResource);\n\t}\n\n\tcanInstall(galleryExtension: IGalleryExtension): Promise<boolean> {\n\t\treturn this.server.extensionManagementService.canInstall(galleryExtension);\n\t}\n\n\tprivate onInstallExtension(event: InstallExtensionEvent): void {\n\t\tconst { source } = event;\n\t\tif (source && !URI.isUri(source)) {\n\t\t\tconst extension = this.installed.find(e => areSameExtensions(e.identifier, source.identifier))\n\t\t\t\t?? this.instantiationService.createInstance(Extension, this.stateProvider, this.runtimeStateProvider, this.server, undefined, source, undefined);\n\t\t\tthis.installing.push(extension);\n\t\t\tthis._onChange.fire({ extension });\n\t\t}\n\t}\n\n\tprivate async fetchInstalledExtensions(productVersion?: IProductVersion): Promise<void> {\n\t\tconst extensionsControlManifest = await this.server.extensionManagementService.getExtensionsControlManifest();\n\t\tconst all = await this.server.extensionManagementService.getInstalled(undefined, undefined, productVersion);\n\t\tif (this.isWorkspaceServer) {\n\t\t\tall.push(...await this.workbenchExtensionManagementService.getInstalledWorkspaceExtensions(true));\n\t\t}\n\n\t\t// dedup workspace, user and system extensions by giving priority to workspace first and then to user extension.\n\t\tconst installed = groupByExtension(all, r => r.identifier).reduce((result, extensions) => {\n\t\t\tif (extensions.length === 1) {\n\t\t\t\tresult.push(extensions[0]);\n\t\t\t} else {\n\t\t\t\tlet workspaceExtension: ILocalExtension | undefined,\n\t\t\t\t\tuserExtension: ILocalExtension | undefined,\n\t\t\t\t\tsystemExtension: ILocalExtension | undefined;\n\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\tif (extension.isWorkspaceScoped) {\n\t\t\t\t\t\tworkspaceExtension = extension;\n\t\t\t\t\t} else if (extension.type === ExtensionType.User) {\n\t\t\t\t\t\tuserExtension = extension;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsystemExtension = extension;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst extension = workspaceExtension ?? userExtension ?? systemExtension;\n\t\t\t\tif (extension) {\n\t\t\t\t\tresult.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}, []);\n\n\t\tconst byId = index(this.installed, e => e.local ? e.local.identifier.id : e.identifier.id);\n\t\tthis.installed = installed.map(local => {\n\t\t\tconst extension = byId[local.identifier.id] || this.instantiationService.createInstance(Extension, this.stateProvider, this.runtimeStateProvider, this.server, local, undefined, undefined);\n\t\t\textension.local = local;\n\t\t\textension.enablementState = this.extensionEnablementService.getEnablementState(local);\n\t\t\textension.setExtensionsControlManifest(extensionsControlManifest);\n\t\t\treturn extension;\n\t\t});\n\t}\n\n\tprivate async reset(): Promise<void> {\n\t\tthis.installed = [];\n\t\tthis.installing = [];\n\t\tthis.uninstalling = [];\n\t\tawait this.fetchInstalledExtensions();\n\t\tthis._onReset.fire();\n\t}\n\n\tprivate async onDidInstallExtensions(results: readonly InstallExtensionResult[]): Promise<void> {\n\t\tfor (const event of results) {\n\t\t\tconst { local, source } = event;\n\t\t\tconst gallery = source && !URI.isUri(source) ? source : undefined;\n\t\t\tconst location = source && URI.isUri(source) ? source : undefined;\n\t\t\tconst installingExtension = gallery ? this.installing.filter(e => areSameExtensions(e.identifier, gallery.identifier))[0] : null;\n\t\t\tthis.installing = installingExtension ? this.installing.filter(e => e !== installingExtension) : this.installing;\n\n\t\t\tlet extension: Extension | undefined = installingExtension ? installingExtension\n\t\t\t\t: (location || local) ? this.instantiationService.createInstance(Extension, this.stateProvider, this.runtimeStateProvider, this.server, local, undefined, undefined)\n\t\t\t\t\t: undefined;\n\t\t\tif (extension) {\n\t\t\t\tif (local) {\n\t\t\t\t\tconst installed = this.installed.filter(e => areSameExtensions(e.identifier, extension!.identifier))[0];\n\t\t\t\t\tif (installed) {\n\t\t\t\t\t\textension = installed;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.installed.push(extension);\n\t\t\t\t\t}\n\t\t\t\t\textension.local = local;\n\t\t\t\t\tif (!extension.gallery) {\n\t\t\t\t\t\textension.gallery = gallery;\n\t\t\t\t\t}\n\t\t\t\t\textension.setExtensionsControlManifest(await this.server.extensionManagementService.getExtensionsControlManifest());\n\t\t\t\t\textension.enablementState = this.extensionEnablementService.getEnablementState(local);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onChange.fire(!local || !extension ? undefined : { extension, operation: event.operation });\n\t\t\tif (extension && extension.local && !extension.gallery && extension.local.source !== 'resource') {\n\t\t\t\tawait this.syncInstalledExtensionWithGallery(extension);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async onDidUpdateExtensionMetadata(local: ILocalExtension): Promise<void> {\n\t\tconst extension = this.installed.find(e => areSameExtensions(e.identifier, local.identifier));\n\t\tif (extension?.local) {\n\t\t\tconst hasChanged = extension.local.pinned !== local.pinned\n\t\t\t\t|| extension.local.preRelease !== local.preRelease;\n\t\t\textension.local = local;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis._onChange.fire({ extension });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async syncInstalledExtensionWithGallery(extension: Extension): Promise<void> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\ttype GalleryServiceMatchInstalledExtensionClassification = {\n\t\t\towner: 'sandy081';\n\t\t\tcomment: 'Report when a request is made to match installed extension with gallery';\n\t\t};\n\t\tthis.telemetryService.publicLog2<{}, GalleryServiceMatchInstalledExtensionClassification>('galleryService:matchInstalledExtension');\n\t\tconst [compatible] = await this.galleryService.getExtensions([{ ...extension.identifier, preRelease: extension.local?.preRelease }], { compatible: true, targetPlatform: await this.server.extensionManagementService.getTargetPlatform() }, CancellationToken.None);\n\t\tif (compatible) {\n\t\t\textension.gallery = compatible;\n\t\t\tthis._onChange.fire({ extension });\n\t\t}\n\t}\n\n\tprivate onUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tconst extension = this.installed.filter(e => areSameExtensions(e.identifier, identifier))[0];\n\t\tif (extension) {\n\t\t\tconst uninstalling = this.uninstalling.filter(e => areSameExtensions(e.identifier, identifier))[0] || extension;\n\t\t\tthis.uninstalling = [uninstalling, ...this.uninstalling.filter(e => !areSameExtensions(e.identifier, identifier))];\n\t\t\tthis._onChange.fire(uninstalling ? { extension: uninstalling } : undefined);\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension({ identifier, error }: DidUninstallExtensionEvent): void {\n\t\tconst uninstalled = this.uninstalling.find(e => areSameExtensions(e.identifier, identifier)) || this.installed.find(e => areSameExtensions(e.identifier, identifier));\n\t\tthis.uninstalling = this.uninstalling.filter(e => !areSameExtensions(e.identifier, identifier));\n\t\tif (!error) {\n\t\t\tthis.installed = this.installed.filter(e => !areSameExtensions(e.identifier, identifier));\n\t\t}\n\t\tif (uninstalled) {\n\t\t\tthis._onChange.fire({ extension: uninstalled });\n\t\t}\n\t}\n\n\tprivate onEnablementChanged(platformExtensions: readonly IPlatformExtension[]) {\n\t\tconst extensions = this.local.filter(e => platformExtensions.some(p => areSameExtensions(e.identifier, p.identifier)));\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension.local) {\n\t\t\t\tconst enablementState = this.extensionEnablementService.getEnablementState(extension.local);\n\t\t\t\tif (enablementState !== extension.enablementState) {\n\t\t\t\t\t(extension as Extension).enablementState = enablementState;\n\t\t\t\t\tthis._onChange.fire({ extension: extension as Extension });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetExtensionState(extension: Extension): ExtensionState {\n\t\tif (extension.gallery && this.installing.some(e => !!e.gallery && areSameExtensions(e.gallery.identifier, extension.gallery!.identifier))) {\n\t\t\treturn ExtensionState.Installing;\n\t\t}\n\t\tif (this.uninstalling.some(e => areSameExtensions(e.identifier, extension.identifier))) {\n\t\t\treturn ExtensionState.Uninstalling;\n\t\t}\n\t\tconst local = this.installed.filter(e => e === extension || (e.gallery && extension.gallery && areSameExtensions(e.gallery.identifier, extension.gallery.identifier)))[0];\n\t\treturn local ? ExtensionState.Installed : ExtensionState.Uninstalled;\n\t}\n}\n\nexport class ExtensionsWorkbenchService extends Disposable implements IExtensionsWorkbenchService, IURLHandler {\n\n\tprivate static readonly UpdatesCheckInterval = 1000 * 60 * 60 * 12; // 12 hours\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate hasOutdatedExtensionsContextKey: IContextKey<boolean>;\n\n\tprivate readonly localExtensions: Extensions | null = null;\n\tprivate readonly remoteExtensions: Extensions | null = null;\n\tprivate readonly webExtensions: Extensions | null = null;\n\tprivate readonly extensionsServers: Extensions[] = [];\n\n\tprivate updatesCheckDelayer: ThrottledDelayer<void>;\n\tprivate autoUpdateDelayer: ThrottledDelayer<void>;\n\n\tprivate readonly _onChange = this._register(new Emitter<IExtension | undefined>());\n\tget onChange(): Event<IExtension | undefined> { return this._onChange.event; }\n\n\tprivate extensionsNotification: IExtensionsNotification | undefined;\n\tprivate dismissedNotifications: string[] = [];\n\tprivate readonly _onDidChangeExtensionsNotification = new Emitter<IExtensionsNotification | undefined>();\n\treadonly onDidChangeExtensionsNotification = this._onDidChangeExtensionsNotification.event;\n\n\tprivate readonly _onReset = new Emitter<void>();\n\tget onReset() { return this._onReset.event; }\n\n\treadonly preferPreReleases = this.productService.quality !== 'stable';\n\n\tprivate installing: IExtension[] = [];\n\tprivate tasksInProgress: CancelablePromise<any>[] = [];\n\n\treadonly whenInitialized: Promise<void>;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IWorkbenchExtensionManagementService private readonly extensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IURLService urlService: IURLService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IIgnoredExtensionsManagementService private readonly extensionsSyncManagementService: IIgnoredExtensionsManagementService,\n\t\t@IUserDataAutoSyncService private readonly userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@ILocaleService private readonly localeService: ILocaleService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUpdateService private readonly updateService: IUpdateService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t) {\n\t\tsuper();\n\t\tconst preferPreReleasesValue = configurationService.getValue('_extensions.preferPreReleases');\n\t\tif (!isUndefined(preferPreReleasesValue)) {\n\t\t\tthis.preferPreReleases = !!preferPreReleasesValue;\n\t\t}\n\t\tthis.hasOutdatedExtensionsContextKey = HasOutdatedExtensionsContext.bindTo(contextKeyService);\n\t\tif (extensionManagementServerService.localExtensionManagementServer) {\n\t\t\tthis.localExtensions = this._register(instantiationService.createInstance(Extensions,\n\t\t\t\textensionManagementServerService.localExtensionManagementServer,\n\t\t\t\text => this.getExtensionState(ext),\n\t\t\t\text => this.getRuntimeState(ext),\n\t\t\t\t!extensionManagementServerService.remoteExtensionManagementServer\n\t\t\t));\n\t\t\tthis._register(this.localExtensions.onChange(e => this.onDidChangeExtensions(e?.extension)));\n\t\t\tthis._register(this.localExtensions.onReset(e => this.reset()));\n\t\t\tthis.extensionsServers.push(this.localExtensions);\n\t\t}\n\t\tif (extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tthis.remoteExtensions = this._register(instantiationService.createInstance(Extensions,\n\t\t\t\textensionManagementServerService.remoteExtensionManagementServer,\n\t\t\t\text => this.getExtensionState(ext),\n\t\t\t\text => this.getRuntimeState(ext),\n\t\t\t\ttrue\n\t\t\t));\n\t\t\tthis._register(this.remoteExtensions.onChange(e => this.onDidChangeExtensions(e?.extension)));\n\t\t\tthis._register(this.remoteExtensions.onReset(e => this.reset()));\n\t\t\tthis.extensionsServers.push(this.remoteExtensions);\n\t\t}\n\t\tif (extensionManagementServerService.webExtensionManagementServer) {\n\t\t\tthis.webExtensions = this._register(instantiationService.createInstance(Extensions,\n\t\t\t\textensionManagementServerService.webExtensionManagementServer,\n\t\t\t\text => this.getExtensionState(ext),\n\t\t\t\text => this.getRuntimeState(ext),\n\t\t\t\t!(extensionManagementServerService.remoteExtensionManagementServer || extensionManagementServerService.localExtensionManagementServer)\n\t\t\t));\n\t\t\tthis._register(this.webExtensions.onChange(e => this.onDidChangeExtensions(e?.extension)));\n\t\t\tthis._register(this.webExtensions.onReset(e => this.reset()));\n\t\t\tthis.extensionsServers.push(this.webExtensions);\n\t\t}\n\n\t\tthis.updatesCheckDelayer = new ThrottledDelayer<void>(ExtensionsWorkbenchService.UpdatesCheckInterval);\n\t\tthis.autoUpdateDelayer = new ThrottledDelayer<void>(1000);\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.updatesCheckDelayer.cancel();\n\t\t\tthis.autoUpdateDelayer.cancel();\n\t\t}));\n\n\t\turlService.registerHandler(this);\n\n\t\tif (this.productService.quality !== 'stable') {\n\t\t\tthis.registerAutoRestartConfig();\n\t\t}\n\n\t\tthis.whenInitialized = this.initialize();\n\t}\n\n\tprivate registerAutoRestartConfig(): void {\n\t\tRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration)\n\t\t\t.registerConfiguration({\n\t\t\t\t...extensionsConfigurationNodeBase,\n\t\t\t\tproperties: {\n\t\t\t\t\t[AutoRestartConfigurationKey]: {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: nls.localize('autoRestart', \"If activated, extensions will automatically restart following an update if the window is not in focus. There can be a data loss if you have open Notebooks or Custom Editors.\"),\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\t// initialize local extensions\n\t\tawait Promise.all([this.queryLocal(), this.extensionService.whenInstalledExtensionsRegistered()]);\n\t\tif (this._store.isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.onDidChangeRunningExtensions(this.extensionService.extensions, []);\n\t\tthis._register(this.extensionService.onDidChangeExtensions(({ added, removed }) => this.onDidChangeRunningExtensions(added, removed)));\n\n\t\tawait this.lifecycleService.when(LifecyclePhase.Eventually);\n\t\tif (this._store.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initializeAutoUpdate();\n\t\tthis.updateExtensionsNotificaiton();\n\t\tthis.reportInstalledExtensionsTelemetry();\n\t\tthis._register(this.storageService.onDidChangeValue(StorageScope.APPLICATION, EXTENSIONS_AUTO_UPDATE_KEY, this._store)(e => this.onDidSelectedExtensionToAutoUpdateValueChange()));\n\t\tthis._register(this.storageService.onDidChangeValue(StorageScope.APPLICATION, EXTENSIONS_DONOT_AUTO_UPDATE_KEY, this._store)(e => this.onDidSelectedExtensionToAutoUpdateValueChange()));\n\t\tthis._register(Event.debounce(this.onChange, () => undefined, 100)(() => {\n\t\t\tthis.updateExtensionsNotificaiton();\n\t\t\tthis.reportProgressFromOtherSources();\n\t\t}));\n\t}\n\n\tprivate initializeAutoUpdate(): void {\n\t\t// Register listeners for auto updates\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(AutoUpdateConfigurationKey)) {\n\t\t\t\tif (this.isAutoUpdateEnabled()) {\n\t\t\t\t\tthis.eventuallyAutoUpdateExtensions();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(AutoCheckUpdatesConfigurationKey)) {\n\t\t\t\tif (this.isAutoCheckUpdatesEnabled()) {\n\t\t\t\t\tthis.checkForUpdates();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.extensionEnablementService.onEnablementChanged(platformExtensions => {\n\t\t\tif (this.getAutoUpdateValue() === 'onlyEnabledExtensions' && platformExtensions.some(e => this.extensionEnablementService.isEnabled(e))) {\n\t\t\t\tthis.checkForUpdates();\n\t\t\t}\n\t\t}));\n\t\tthis._register(Event.debounce(this.onChange, () => undefined, 100)(() => this.hasOutdatedExtensionsContextKey.set(this.outdated.length > 0)));\n\t\tthis._register(this.updateService.onStateChange(e => {\n\t\t\tif ((e.type === StateType.CheckingForUpdates && e.explicit) || e.type === StateType.AvailableForDownload || e.type === StateType.Downloaded) {\n\t\t\t\tthis.telemetryService.publicLog2<{}, {\n\t\t\t\t\towner: 'sandy081';\n\t\t\t\t\tcomment: 'Report when update check is triggered on product update';\n\t\t\t\t}>('extensions:updatecheckonproductupdate');\n\t\t\t\tif (this.isAutoCheckUpdatesEnabled()) {\n\t\t\t\t\tthis.checkForUpdates();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Update AutoUpdate Contexts\n\t\tthis.hasOutdatedExtensionsContextKey.set(this.outdated.length > 0);\n\n\t\t// Check for updates\n\t\tthis.eventuallyCheckForUpdates(true);\n\n\t\tif (isWeb) {\n\t\t\tthis.syncPinnedBuiltinExtensions();\n\t\t\t// Always auto update builtin extensions in web\n\t\t\tif (!this.isAutoUpdateEnabled()) {\n\t\t\t\tthis.autoUpdateBuiltinExtensions();\n\t\t\t}\n\t\t}\n\n\t\tthis.registerAutoRestartListener();\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(AutoRestartConfigurationKey)) {\n\t\t\t\tthis.registerAutoRestartListener();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate isAutoUpdateEnabled(): boolean {\n\t\treturn this.getAutoUpdateValue() !== false;\n\t}\n\n\tgetAutoUpdateValue(): AutoUpdateConfigurationValue {\n\t\tconst autoUpdate = this.configurationService.getValue<AutoUpdateConfigurationValue>(AutoUpdateConfigurationKey);\n\t\tif (<any>autoUpdate === 'onlySelectedExtensions') {\n\t\t\treturn false;\n\t\t}\n\t\treturn isBoolean(autoUpdate) || autoUpdate === 'onlyEnabledExtensions' ? autoUpdate : true;\n\t}\n\n\tasync updateAutoUpdateForAllExtensions(isAutoUpdateEnabled: boolean): Promise<void> {\n\t\tconst wasAutoUpdateEnabled = this.isAutoUpdateEnabled();\n\t\tif (wasAutoUpdateEnabled === isAutoUpdateEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await this.dialogService.confirm({\n\t\t\ttitle: nls.localize('confirmEnableDisableAutoUpdate', \"Auto Update Extensions\"),\n\t\t\tmessage: isAutoUpdateEnabled\n\t\t\t\t? nls.localize('confirmEnableAutoUpdate', \"Do you want to enable auto update for all extensions?\")\n\t\t\t\t: nls.localize('confirmDisableAutoUpdate', \"Do you want to disable auto update for all extensions?\"),\n\t\t\tdetail: nls.localize('confirmEnableDisableAutoUpdateDetail', \"This will reset any auto update settings you have set for individual extensions.\"),\n\t\t});\n\t\tif (!result.confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset extensions enabled for auto update first to prevent them from being updated\n\t\tthis.setEnabledAutoUpdateExtensions([]);\n\n\t\tawait this.configurationService.updateValue(AutoUpdateConfigurationKey, isAutoUpdateEnabled);\n\n\t\tthis.setDisabledAutoUpdateExtensions([]);\n\t\tawait this.updateExtensionsPinnedState(!isAutoUpdateEnabled);\n\t\tthis._onChange.fire(undefined);\n\t}\n\n\tprivate readonly autoRestartListenerDisposable = this._register(new MutableDisposable());\n\tprivate registerAutoRestartListener(): void {\n\t\tthis.autoRestartListenerDisposable.value = undefined;\n\t\tif (this.configurationService.getValue(AutoRestartConfigurationKey) === true) {\n\t\t\tthis.autoRestartListenerDisposable.value = this.hostService.onDidChangeFocus(focus => {\n\t\t\t\tif (!focus && this.configurationService.getValue(AutoRestartConfigurationKey) === true) {\n\t\t\t\t\tthis.updateRunningExtensions(true);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate reportInstalledExtensionsTelemetry() {\n\t\tconst extensionIds = this.installed.filter(extension =>\n\t\t\t!extension.isBuiltin &&\n\t\t\t(extension.enablementState === EnablementState.EnabledWorkspace ||\n\t\t\t\textension.enablementState === EnablementState.EnabledGlobally))\n\t\t\t.map(extension => ExtensionIdentifier.toKey(extension.identifier.id));\n\t\tthis.telemetryService.publicLog2<InstalledExtensionsEvent, ExtensionsLoadClassification>('installedExtensions', { extensionIds: new TelemetryTrustedValue(extensionIds.join(';')), count: extensionIds.length });\n\t}\n\n\tprivate async onDidChangeRunningExtensions(added: ReadonlyArray<IExtensionDescription>, removed: ReadonlyArray<IExtensionDescription>): Promise<void> {\n\t\tconst changedExtensions: IExtension[] = [];\n\t\tconst extensionsToFetch: IExtensionDescription[] = [];\n\t\tfor (const desc of added) {\n\t\t\tconst extension = this.installed.find(e => areSameExtensions({ id: desc.identifier.value, uuid: desc.uuid }, e.identifier));\n\t\t\tif (extension) {\n\t\t\t\tchangedExtensions.push(extension);\n\t\t\t} else {\n\t\t\t\textensionsToFetch.push(desc);\n\t\t\t}\n\t\t}\n\t\tconst workspaceExtensions: IExtensionDescription[] = [];\n\t\tfor (const desc of removed) {\n\t\t\tif (this.workspaceContextService.isInsideWorkspace(desc.extensionLocation)) {\n\t\t\t\tworkspaceExtensions.push(desc);\n\t\t\t} else {\n\t\t\t\textensionsToFetch.push(desc);\n\t\t\t}\n\t\t}\n\t\tif (extensionsToFetch.length) {\n\t\t\tconst extensions = await this.getExtensions(extensionsToFetch.map(e => ({ id: e.identifier.value, uuid: e.uuid })), CancellationToken.None);\n\t\t\tchangedExtensions.push(...extensions);\n\t\t}\n\t\tif (workspaceExtensions.length) {\n\t\t\tconst extensions = await this.getResourceExtensions(workspaceExtensions.map(e => e.extensionLocation), true);\n\t\t\tchangedExtensions.push(...extensions);\n\t\t}\n\t\tfor (const changedExtension of changedExtensions) {\n\t\t\tthis._onChange.fire(changedExtension);\n\t\t}\n\t}\n\n\tprivate updateExtensionsPinnedState(pinned: boolean): Promise<void> {\n\t\treturn this.progressService.withProgress({\n\t\t\tlocation: ProgressLocation.Extensions,\n\t\t\ttitle: nls.localize('updatingExtensions', \"Updating Extensions Auto Update State\"),\n\t\t}, () => this.extensionManagementService.resetPinnedStateForAllUserExtensions(pinned));\n\t}\n\n\tprivate reset(): void {\n\t\tfor (const task of this.tasksInProgress) {\n\t\t\ttask.cancel();\n\t\t}\n\t\tthis.tasksInProgress = [];\n\t\tthis.installing = [];\n\t\tthis.onDidChangeExtensions();\n\t\tthis._onReset.fire();\n\t}\n\n\tprivate onDidChangeExtensions(extension?: IExtension): void {\n\t\tthis._installed = undefined;\n\t\tthis._local = undefined;\n\t\tthis._onChange.fire(extension);\n\t}\n\n\tprivate _local: IExtension[] | undefined;\n\tget local(): IExtension[] {\n\t\tif (!this._local) {\n\t\t\tif (this.extensionsServers.length === 1) {\n\t\t\t\tthis._local = this.installed;\n\t\t\t} else {\n\t\t\t\tthis._local = [];\n\t\t\t\tconst byId = groupByExtension(this.installed, r => r.identifier);\n\t\t\t\tfor (const extensions of byId) {\n\t\t\t\t\tthis._local.push(this.getPrimaryExtension(extensions));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this._local;\n\t}\n\n\tprivate _installed: IExtension[] | undefined;\n\tget installed(): IExtension[] {\n\t\tif (!this._installed) {\n\t\t\tthis._installed = [];\n\t\t\tfor (const extensions of this.extensionsServers) {\n\t\t\t\tfor (const extension of extensions.local) {\n\t\t\t\t\tthis._installed.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this._installed;\n\t}\n\n\tget outdated(): IExtension[] {\n\t\treturn this.installed.filter(e => e.outdated && e.local && e.state === ExtensionState.Installed);\n\t}\n\n\tasync queryLocal(server?: IExtensionManagementServer): Promise<IExtension[]> {\n\t\tif (server) {\n\t\t\tif (this.localExtensions && this.extensionManagementServerService.localExtensionManagementServer === server) {\n\t\t\t\treturn this.localExtensions.queryInstalled(this.getProductVersion());\n\t\t\t}\n\t\t\tif (this.remoteExtensions && this.extensionManagementServerService.remoteExtensionManagementServer === server) {\n\t\t\t\treturn this.remoteExtensions.queryInstalled(this.getProductVersion());\n\t\t\t}\n\t\t\tif (this.webExtensions && this.extensionManagementServerService.webExtensionManagementServer === server) {\n\t\t\t\treturn this.webExtensions.queryInstalled(this.getProductVersion());\n\t\t\t}\n\t\t}\n\n\t\tif (this.localExtensions) {\n\t\t\ttry {\n\t\t\t\tawait this.localExtensions.queryInstalled(this.getProductVersion());\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\ttry {\n\t\t\t\tawait this.remoteExtensions.queryInstalled(this.getProductVersion());\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\ttry {\n\t\t\t\tawait this.webExtensions.queryInstalled(this.getProductVersion());\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\treturn this.local;\n\t}\n\n\tqueryGallery(token: CancellationToken): Promise<IPager<IExtension>>;\n\tqueryGallery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IExtension>>;\n\tasync queryGallery(arg1: any, arg2?: any): Promise<IPager<IExtension>> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn singlePagePager([]);\n\t\t}\n\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\t\toptions.text = options.text ? this.resolveQueryText(options.text) : options.text;\n\t\toptions.includePreRelease = isUndefined(options.includePreRelease) ? this.preferPreReleases : options.includePreRelease;\n\n\t\tconst extensionsControlManifest = await this.extensionManagementService.getExtensionsControlManifest();\n\t\tconst pager = await this.galleryService.query(options, token);\n\t\tthis.syncInstalledExtensionsWithGallery(pager.firstPage);\n\t\treturn {\n\t\t\tfirstPage: pager.firstPage.map(gallery => this.fromGallery(gallery, extensionsControlManifest)),\n\t\t\ttotal: pager.total,\n\t\t\tpageSize: pager.pageSize,\n\t\t\tgetPage: async (pageIndex, token) => {\n\t\t\t\tconst page = await pager.getPage(pageIndex, token);\n\t\t\t\tthis.syncInstalledExtensionsWithGallery(page);\n\t\t\t\treturn page.map(gallery => this.fromGallery(gallery, extensionsControlManifest));\n\t\t\t}\n\t\t};\n\t}\n\n\tgetExtensions(extensionInfos: IExtensionInfo[], token: CancellationToken): Promise<IExtension[]>;\n\tgetExtensions(extensionInfos: IExtensionInfo[], options: IExtensionQueryOptions, token: CancellationToken): Promise<IExtension[]>;\n\tasync getExtensions(extensionInfos: IExtensionInfo[], arg1: any, arg2?: any): Promise<IExtension[]> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn [];\n\t\t}\n\n\t\textensionInfos.forEach(e => e.preRelease = e.preRelease ?? this.preferPreReleases);\n\t\tconst extensionsControlManifest = await this.extensionManagementService.getExtensionsControlManifest();\n\t\tconst galleryExtensions = await this.galleryService.getExtensions(extensionInfos, arg1, arg2);\n\t\tthis.syncInstalledExtensionsWithGallery(galleryExtensions);\n\t\treturn galleryExtensions.map(gallery => this.fromGallery(gallery, extensionsControlManifest));\n\t}\n\n\tasync getResourceExtensions(locations: URI[], isWorkspaceScoped: boolean): Promise<IExtension[]> {\n\t\tconst resourceExtensions = await this.extensionManagementService.getExtensions(locations);\n\t\treturn resourceExtensions.map(resourceExtension => this.getInstalledExtensionMatchingLocation(resourceExtension.location)\n\t\t\t?? this.instantiationService.createInstance(Extension, ext => this.getExtensionState(ext), ext => this.getRuntimeState(ext), undefined, undefined, undefined, { resourceExtension, isWorkspaceScoped }));\n\t}\n\n\tprivate updateExtensionsNotificaiton(): void {\n\t\tlet extensionsNotification: IExtensionsNotification | undefined;\n\n\t\tlet message = '';\n\t\tconst severity = Severity.Warning;\n\t\tconst extensions: IExtension[] = [];\n\n\t\textensions.push(...this.local.filter(e => e.enablementState === EnablementState.DisabledByInvalidExtension));\n\t\tif (extensions.length) {\n\t\t\tif (extensions.some(e => e.local &&\n\t\t\t\t(!isEngineValid(e.local.manifest.engines.vscode, this.productService.version, this.productService.date) || areApiProposalsCompatible([...e.local.manifest.enabledApiProposals ?? []]))\n\t\t\t)) {\n\t\t\t\tmessage = nls.localize('incompatibleExtensions', \"Some extensions are disabled due to version incompatibility. Review and update them.\");\n\t\t\t} else {\n\t\t\t\tmessage = nls.localize('invalidExtensions', \"You have invalid extensions installed. Review them.\");\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\textensions.push(...this.local.filter(e => e.enablementState === EnablementState.DisabledByExtensionDependency));\n\t\t\tif (extensions.length) {\n\t\t\t\tmessage = nls.localize('missingDependencies', \"Some extensions are disabled due to missing dependencies. Review them.\");\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\textensions.push(...this.local.filter(e => !!e.deprecationInfo));\n\t\t\t\tif (extensions.length) {\n\t\t\t\t\tmessage = nls.localize('deprecated extensions', \"You have deprecated extensions installed. Review them and migrate to alternatives.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (extensions.length && !this.dismissedNotifications.includes(message)) {\n\t\t\textensionsNotification = {\n\t\t\t\tmessage,\n\t\t\t\tseverity,\n\t\t\t\textensions,\n\t\t\t\tdismiss: () => {\n\t\t\t\t\tthis.dismissedNotifications.push(message);\n\t\t\t\t\tthis.updateExtensionsNotificaiton();\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tif (this.extensionsNotification?.message !== extensionsNotification?.message) {\n\t\t\tthis.extensionsNotification = extensionsNotification;\n\t\t\tthis._onDidChangeExtensionsNotification.fire(this.extensionsNotification);\n\t\t}\n\t}\n\n\tgetExtensionsNotification(): IExtensionsNotification | undefined {\n\t\treturn this.extensionsNotification;\n\t}\n\n\tprivate resolveQueryText(text: string): string {\n\t\ttext = text.replace(/@web/g, `tag:\"${WEB_EXTENSION_TAG}\"`);\n\n\t\tconst extensionRegex = /\\bext:([^\\s]+)\\b/g;\n\t\tif (extensionRegex.test(text)) {\n\t\t\ttext = text.replace(extensionRegex, (m, ext) => {\n\n\t\t\t\t// Get curated keywords\n\t\t\t\tconst lookup = this.productService.extensionKeywords || {};\n\t\t\t\tconst keywords = lookup[ext] || [];\n\n\t\t\t\t// Get mode name\n\t\t\t\tconst languageId = this.languageService.guessLanguageIdByFilepathOrFirstLine(URI.file(`.${ext}`));\n\t\t\t\tconst languageName = languageId && this.languageService.getLanguageName(languageId);\n\t\t\t\tconst languageTag = languageName ? ` tag:\"${languageName}\"` : '';\n\n\t\t\t\t// Construct a rich query\n\t\t\t\treturn `tag:\"__ext_${ext}\" tag:\"__ext_.${ext}\" ${keywords.map(tag => `tag:\"${tag}\"`).join(' ')}${languageTag} tag:\"${ext}\"`;\n\t\t\t});\n\t\t}\n\t\treturn text.substr(0, 350);\n\t}\n\n\tprivate fromGallery(gallery: IGalleryExtension, extensionsControlManifest: IExtensionsControlManifest): IExtension {\n\t\tlet extension = this.getInstalledExtensionMatchingGallery(gallery);\n\t\tif (!extension) {\n\t\t\textension = this.instantiationService.createInstance(Extension, ext => this.getExtensionState(ext), ext => this.getRuntimeState(ext), undefined, undefined, gallery, undefined);\n\t\t\t(<Extension>extension).setExtensionsControlManifest(extensionsControlManifest);\n\t\t}\n\t\treturn extension;\n\t}\n\n\tprivate getInstalledExtensionMatchingGallery(gallery: IGalleryExtension): IExtension | null {\n\t\tfor (const installed of this.local) {\n\t\t\tif (installed.identifier.uuid) { // Installed from Gallery\n\t\t\t\tif (installed.identifier.uuid === gallery.identifier.uuid) {\n\t\t\t\t\treturn installed;\n\t\t\t\t}\n\t\t\t} else if (installed.local?.source !== 'resource') {\n\t\t\t\tif (areSameExtensions(installed.identifier, gallery.identifier)) { // Installed from other sources\n\t\t\t\t\treturn installed;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getInstalledExtensionMatchingLocation(location: URI): IExtension | null {\n\t\treturn this.local.find(e => e.local && this.uriIdentityService.extUri.isEqualOrParent(location, e.local?.location)) ?? null;\n\t}\n\n\tasync open(extension: IExtension | string, options?: IExtensionEditorOptions): Promise<void> {\n\t\tif (typeof extension === 'string') {\n\t\t\tconst id = extension;\n\t\t\textension = this.installed.find(e => areSameExtensions(e.identifier, { id })) ?? (await this.getExtensions([{ id: extension }], CancellationToken.None))[0];\n\t\t}\n\t\tif (!extension) {\n\t\t\tthrow new Error(`Extension not found. ${extension}`);\n\t\t}\n\t\tawait this.editorService.openEditor(this.instantiationService.createInstance(ExtensionsInput, extension), options, options?.sideByside ? SIDE_GROUP : ACTIVE_GROUP);\n\t}\n\n\tasync openSearch(searchValue: string, preserveFoucs?: boolean): Promise<void> {\n\t\tconst viewPaneContainer = (await this.viewsService.openViewContainer(VIEWLET_ID, true))?.getViewPaneContainer() as IExtensionsViewPaneContainer;\n\t\tviewPaneContainer.search(searchValue);\n\t\tif (!preserveFoucs) {\n\t\t\tviewPaneContainer.focus();\n\t\t}\n\t}\n\n\tgetExtensionRuntimeStatus(extension: IExtension): IExtensionRuntimeStatus | undefined {\n\t\tconst extensionsStatus = this.extensionService.getExtensionsStatus();\n\t\tfor (const id of Object.keys(extensionsStatus)) {\n\t\t\tif (areSameExtensions({ id }, extension.identifier)) {\n\t\t\t\treturn extensionsStatus[id];\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasync updateRunningExtensions(auto: boolean = false): Promise<void> {\n\t\tconst toAdd: ILocalExtension[] = [];\n\t\tconst toRemove: string[] = [];\n\n\t\tconst extensionsToCheck = [...this.local];\n\t\tfor (const extension of extensionsToCheck) {\n\t\t\tconst runtimeState = extension.runtimeState;\n\t\t\tif (!runtimeState || runtimeState.action !== ExtensionRuntimeActionType.RestartExtensions) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (extension.state === ExtensionState.Uninstalled) {\n\t\t\t\ttoRemove.push(extension.identifier.id);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!extension.local) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst isEnabled = this.extensionEnablementService.isEnabled(extension.local);\n\t\t\tif (isEnabled) {\n\t\t\t\tconst runningExtension = this.extensionService.extensions.find(e => areSameExtensions({ id: e.identifier.value, uuid: e.uuid }, extension.identifier));\n\t\t\t\tif (runningExtension) {\n\t\t\t\t\ttoRemove.push(runningExtension.identifier.value);\n\t\t\t\t}\n\t\t\t\ttoAdd.push(extension.local);\n\t\t\t} else {\n\t\t\t\ttoRemove.push(extension.identifier.id);\n\t\t\t}\n\t\t}\n\n\t\tfor (const extension of this.extensionService.extensions) {\n\t\t\tif (extension.isUnderDevelopment) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (extensionsToCheck.some(e => areSameExtensions({ id: extension.identifier.value, uuid: extension.uuid }, e.local?.identifier ?? e.identifier))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Extension is running but doesn't exist locally. Remove it from running extensions.\n\t\t\ttoRemove.push(extension.identifier.value);\n\t\t}\n\n\t\tif (toAdd.length || toRemove.length) {\n\t\t\tif (await this.extensionService.stopExtensionHosts(nls.localize('restart', \"Enable or Disable extensions\"), auto)) {\n\t\t\t\tawait this.extensionService.startExtensionHosts({ toAdd, toRemove });\n\t\t\t\tif (auto) {\n\t\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\t\tmessage: nls.localize('extensionsAutoRestart', \"Extensions were auto restarted to enable updates.\"),\n\t\t\t\t\t\tpriority: NotificationPriority.SILENT\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\ttype ExtensionsAutoRestartClassification = {\n\t\t\t\t\towner: 'sandy081';\n\t\t\t\t\tcomment: 'Report when extensions are auto restarted';\n\t\t\t\t\tcount: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Number of extensions auto restarted' };\n\t\t\t\t\tauto: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether the restart was triggered automatically' };\n\t\t\t\t};\n\t\t\t\ttype ExtensionsAutoRestartEvent = {\n\t\t\t\t\tcount: number;\n\t\t\t\t\tauto: boolean;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<ExtensionsAutoRestartEvent, ExtensionsAutoRestartClassification>('extensions:autorestart', { count: toAdd.length + toRemove.length, auto });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getRuntimeState(extension: IExtension): ExtensionRuntimeState | undefined {\n\t\tconst isUninstalled = extension.state === ExtensionState.Uninstalled;\n\t\tconst runningExtension = this.extensionService.extensions.find(e => areSameExtensions({ id: e.identifier.value }, extension.identifier));\n\t\tconst reloadAction = this.extensionManagementServerService.remoteExtensionManagementServer ? ExtensionRuntimeActionType.ReloadWindow : ExtensionRuntimeActionType.RestartExtensions;\n\t\tconst reloadActionLabel = reloadAction === ExtensionRuntimeActionType.ReloadWindow ? nls.localize('reload', \"reload window\") : nls.localize('restart extensions', \"restart extensions\");\n\n\t\tif (isUninstalled) {\n\t\t\tconst canRemoveRunningExtension = runningExtension && this.extensionService.canRemoveExtension(runningExtension);\n\t\t\tconst isSameExtensionRunning = runningExtension\n\t\t\t\t&& (!extension.server || extension.server === this.extensionManagementServerService.getExtensionManagementServer(toExtension(runningExtension)))\n\t\t\t\t&& (!extension.resourceExtension || this.uriIdentityService.extUri.isEqual(extension.resourceExtension.location, runningExtension.extensionLocation));\n\t\t\tif (!canRemoveRunningExtension && isSameExtensionRunning && !runningExtension.isUnderDevelopment) {\n\t\t\t\treturn { action: reloadAction, reason: nls.localize('postUninstallTooltip', \"Please {0} to complete the uninstallation of this extension.\", reloadActionLabel) };\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t\tif (extension.local) {\n\t\t\tconst isSameExtensionRunning = runningExtension && extension.server === this.extensionManagementServerService.getExtensionManagementServer(toExtension(runningExtension));\n\t\t\tconst isEnabled = this.extensionEnablementService.isEnabled(extension.local);\n\n\t\t\t// Extension is running\n\t\t\tif (runningExtension) {\n\t\t\t\tif (isEnabled) {\n\t\t\t\t\t// No Reload is required if extension can run without reload\n\t\t\t\t\tif (this.extensionService.canAddExtension(toExtensionDescription(extension.local))) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tconst runningExtensionServer = this.extensionManagementServerService.getExtensionManagementServer(toExtension(runningExtension));\n\n\t\t\t\t\tif (isSameExtensionRunning) {\n\t\t\t\t\t\t// Different version or target platform of same extension is running. Requires reload to run the current version\n\t\t\t\t\t\tif (!runningExtension.isUnderDevelopment && (extension.version !== runningExtension.version || extension.local.targetPlatform !== runningExtension.targetPlatform)) {\n\t\t\t\t\t\t\tconst productCurrentVersion = this.getProductCurrentVersion();\n\t\t\t\t\t\t\tconst productUpdateVersion = this.getProductUpdateVersion();\n\t\t\t\t\t\t\tif (productUpdateVersion\n\t\t\t\t\t\t\t\t&& !isEngineValid(extension.local.manifest.engines.vscode, productCurrentVersion.version, productCurrentVersion.date)\n\t\t\t\t\t\t\t\t&& isEngineValid(extension.local.manifest.engines.vscode, productUpdateVersion.version, productUpdateVersion.date)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst state = this.updateService.state;\n\t\t\t\t\t\t\t\tif (state.type === StateType.AvailableForDownload) {\n\t\t\t\t\t\t\t\t\treturn { action: ExtensionRuntimeActionType.DownloadUpdate, reason: nls.localize('postUpdateDownloadTooltip', \"Please update {0} to enable the updated extension.\", this.productService.nameLong) };\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (state.type === StateType.Downloaded) {\n\t\t\t\t\t\t\t\t\treturn { action: ExtensionRuntimeActionType.ApplyUpdate, reason: nls.localize('postUpdateUpdateTooltip', \"Please update {0} to enable the updated extension.\", this.productService.nameLong) };\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (state.type === StateType.Ready) {\n\t\t\t\t\t\t\t\t\treturn { action: ExtensionRuntimeActionType.QuitAndInstall, reason: nls.localize('postUpdateRestartTooltip', \"Please restart {0} to enable the updated extension.\", this.productService.nameLong) };\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn { action: reloadAction, reason: nls.localize('postUpdateTooltip', \"Please {0} to enable the updated extension.\", reloadActionLabel) };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.extensionsServers.length > 1) {\n\t\t\t\t\t\t\tconst extensionInOtherServer = this.installed.filter(e => areSameExtensions(e.identifier, extension.identifier) && e.server !== extension.server)[0];\n\t\t\t\t\t\t\tif (extensionInOtherServer) {\n\t\t\t\t\t\t\t\t// This extension prefers to run on UI/Local side but is running in remote\n\t\t\t\t\t\t\t\tif (runningExtensionServer === this.extensionManagementServerService.remoteExtensionManagementServer && this.extensionManifestPropertiesService.prefersExecuteOnUI(extension.local.manifest) && extensionInOtherServer.server === this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\t\t\t\t\t\treturn { action: reloadAction, reason: nls.localize('enable locally', \"Please {0} to enable this extension locally.\", reloadActionLabel) };\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// This extension prefers to run on Workspace/Remote side but is running in local\n\t\t\t\t\t\t\t\tif (runningExtensionServer === this.extensionManagementServerService.localExtensionManagementServer && this.extensionManifestPropertiesService.prefersExecuteOnWorkspace(extension.local.manifest) && extensionInOtherServer.server === this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\t\t\t\t\t\treturn { action: reloadAction, reason: nls.localize('enable remote', \"Please {0} to enable this extension in {1}.\", reloadActionLabel, this.extensionManagementServerService.remoteExtensionManagementServer?.label) };\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif (extension.server === this.extensionManagementServerService.localExtensionManagementServer && runningExtensionServer === this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\t\t\t\t// This extension prefers to run on UI/Local side but is running in remote\n\t\t\t\t\t\t\tif (this.extensionManifestPropertiesService.prefersExecuteOnUI(extension.local.manifest)) {\n\t\t\t\t\t\t\t\treturn { action: reloadAction, reason: nls.localize('postEnableTooltip', \"Please {0} to enable this extension.\", reloadActionLabel) };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (extension.server === this.extensionManagementServerService.remoteExtensionManagementServer && runningExtensionServer === this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\t\t\t\t// This extension prefers to run on Workspace/Remote side but is running in local\n\t\t\t\t\t\t\tif (this.extensionManifestPropertiesService.prefersExecuteOnWorkspace(extension.local.manifest)) {\n\t\t\t\t\t\t\t\treturn { action: reloadAction, reason: nls.localize('postEnableTooltip', \"Please {0} to enable this extension.\", reloadActionLabel) };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\tif (isSameExtensionRunning) {\n\t\t\t\t\t\treturn { action: reloadAction, reason: nls.localize('postDisableTooltip', \"Please {0} to disable this extension.\", reloadActionLabel) };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Extension is not running\n\t\t\telse {\n\t\t\t\tif (isEnabled && !this.extensionService.canAddExtension(toExtensionDescription(extension.local))) {\n\t\t\t\t\treturn { action: reloadAction, reason: nls.localize('postEnableTooltip', \"Please {0} to enable this extension.\", reloadActionLabel) };\n\t\t\t\t}\n\n\t\t\t\tconst otherServer = extension.server ? extension.server === this.extensionManagementServerService.localExtensionManagementServer ? this.extensionManagementServerService.remoteExtensionManagementServer : this.extensionManagementServerService.localExtensionManagementServer : null;\n\t\t\t\tif (otherServer && extension.enablementState === EnablementState.DisabledByExtensionKind) {\n\t\t\t\t\tconst extensionInOtherServer = this.local.filter(e => areSameExtensions(e.identifier, extension.identifier) && e.server === otherServer)[0];\n\t\t\t\t\t// Same extension in other server exists and\n\t\t\t\t\tif (extensionInOtherServer && extensionInOtherServer.local && this.extensionEnablementService.isEnabled(extensionInOtherServer.local)) {\n\t\t\t\t\t\treturn { action: reloadAction, reason: nls.localize('postEnableTooltip', \"Please {0} to enable this extension.\", reloadActionLabel) };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getPrimaryExtension(extensions: IExtension[]): IExtension {\n\t\tif (extensions.length === 1) {\n\t\t\treturn extensions[0];\n\t\t}\n\n\t\tconst enabledExtensions = extensions.filter(e => e.local && this.extensionEnablementService.isEnabled(e.local));\n\t\tif (enabledExtensions.length === 1) {\n\t\t\treturn enabledExtensions[0];\n\t\t}\n\n\t\tconst extensionsToChoose = enabledExtensions.length ? enabledExtensions : extensions;\n\t\tconst manifest = extensionsToChoose.find(e => e.local && e.local.manifest)?.local?.manifest;\n\n\t\t// Manifest is not found which should not happen.\n\t\t// In which case return the first extension.\n\t\tif (!manifest) {\n\t\t\treturn extensionsToChoose[0];\n\t\t}\n\n\t\tconst extensionKinds = this.extensionManifestPropertiesService.getExtensionKind(manifest);\n\n\t\tlet extension = extensionsToChoose.find(extension => {\n\t\t\tfor (const extensionKind of extensionKinds) {\n\t\t\t\tswitch (extensionKind) {\n\t\t\t\t\tcase 'ui':\n\t\t\t\t\t\t/* UI extension is chosen only if it is installed locally */\n\t\t\t\t\t\tif (extension.server === this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase 'workspace':\n\t\t\t\t\t\t/* Choose remote workspace extension if exists */\n\t\t\t\t\t\tif (extension.server === this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase 'web':\n\t\t\t\t\t\t/* Choose web extension if exists */\n\t\t\t\t\t\tif (extension.server === this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (!extension && this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\textension = extensionsToChoose.find(extension => {\n\t\t\t\tfor (const extensionKind of extensionKinds) {\n\t\t\t\t\tswitch (extensionKind) {\n\t\t\t\t\t\tcase 'workspace':\n\t\t\t\t\t\t\t/* Choose local workspace extension if exists */\n\t\t\t\t\t\t\tif (extension.server === this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tcase 'web':\n\t\t\t\t\t\t\t/* Choose local web extension if exists */\n\t\t\t\t\t\t\tif (extension.server === this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\tif (!extension && this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\textension = extensionsToChoose.find(extension => {\n\t\t\t\tfor (const extensionKind of extensionKinds) {\n\t\t\t\t\tswitch (extensionKind) {\n\t\t\t\t\t\tcase 'web':\n\t\t\t\t\t\t\t/* Choose web extension if exists */\n\t\t\t\t\t\t\tif (extension.server === this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\tif (!extension && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\textension = extensionsToChoose.find(extension => {\n\t\t\t\tfor (const extensionKind of extensionKinds) {\n\t\t\t\t\tswitch (extensionKind) {\n\t\t\t\t\t\tcase 'web':\n\t\t\t\t\t\t\t/* Choose remote web extension if exists */\n\t\t\t\t\t\t\tif (extension.server === this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\treturn extension || extensions[0];\n\t}\n\n\tprivate getExtensionState(extension: Extension): ExtensionState {\n\t\tif (this.installing.some(i => areSameExtensions(i.identifier, extension.identifier) && (!extension.server || i.server === extension.server))) {\n\t\t\treturn ExtensionState.Installing;\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\tconst state = this.remoteExtensions.getExtensionState(extension);\n\t\t\tif (state !== ExtensionState.Uninstalled) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\tconst state = this.webExtensions.getExtensionState(extension);\n\t\t\tif (state !== ExtensionState.Uninstalled) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\t\tif (this.localExtensions) {\n\t\t\treturn this.localExtensions.getExtensionState(extension);\n\t\t}\n\t\treturn ExtensionState.Uninstalled;\n\t}\n\n\tasync checkForUpdates(onlyBuiltin?: boolean): Promise<void> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tconst extensions: Extensions[] = [];\n\t\tif (this.localExtensions) {\n\t\t\textensions.push(this.localExtensions);\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\textensions.push(this.remoteExtensions);\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\textensions.push(this.webExtensions);\n\t\t}\n\t\tif (!extensions.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst infos: IExtensionInfo[] = [];\n\t\tfor (const installed of this.local) {\n\t\t\tif (onlyBuiltin && !installed.isBuiltin) {\n\t\t\t\t// Skip if check updates only for builtin extensions and current extension is not builtin.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (installed.isBuiltin && !installed.local?.pinned && (installed.type === ExtensionType.System || !installed.local?.identifier.uuid)) {\n\t\t\t\t// Skip checking updates for a builtin extension if it is a system extension or if it does not has Marketplace identifier\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (installed.local?.source === 'resource') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tinfos.push({ ...installed.identifier, preRelease: !!installed.local?.preRelease });\n\t\t}\n\t\tif (infos.length) {\n\t\t\tconst targetPlatform = await extensions[0].server.extensionManagementService.getTargetPlatform();\n\t\t\ttype GalleryServiceUpdatesCheckClassification = {\n\t\t\t\towner: 'sandy081';\n\t\t\t\tcomment: 'Report when a request is made to check for updates of extensions';\n\t\t\t\tcount: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Number of extensions to check update' };\n\t\t\t};\n\t\t\ttype GalleryServiceUpdatesCheckEvent = {\n\t\t\t\tcount: number;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceUpdatesCheckEvent, GalleryServiceUpdatesCheckClassification>('galleryService:checkingForUpdates', {\n\t\t\t\tcount: infos.length,\n\t\t\t});\n\t\t\tconst galleryExtensions = await this.galleryService.getExtensions(infos, { targetPlatform, compatible: true, productVersion: this.getProductVersion() }, CancellationToken.None);\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tawait this.syncInstalledExtensionsWithGallery(galleryExtensions);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync updateAll(): Promise<InstallExtensionResult[]> {\n\t\tconst toUpdate: InstallExtensionInfo[] = [];\n\t\tthis.outdated.forEach((extension) => {\n\t\t\tif (extension.gallery) {\n\t\t\t\ttoUpdate.push({\n\t\t\t\t\textension: extension.gallery,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\toperation: InstallOperation.Update,\n\t\t\t\t\t\tinstallPreReleaseVersion: extension.local?.isPreReleaseVersion,\n\t\t\t\t\t\tprofileLocation: this.userDataProfileService.currentProfile.extensionsResource,\n\t\t\t\t\t\tisApplicationScoped: extension.local?.isApplicationScoped,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn this.extensionManagementService.installGalleryExtensions(toUpdate);\n\t}\n\n\tprivate async syncInstalledExtensionsWithGallery(gallery: IGalleryExtension[]): Promise<void> {\n\t\tconst extensions: Extensions[] = [];\n\t\tif (this.localExtensions) {\n\t\t\textensions.push(this.localExtensions);\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\textensions.push(this.remoteExtensions);\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\textensions.push(this.webExtensions);\n\t\t}\n\t\tif (!extensions.length) {\n\t\t\treturn;\n\t\t}\n\t\tawait Promise.allSettled(extensions.map(extensions => extensions.syncInstalledExtensionsWithGallery(gallery, this.getProductVersion())));\n\t\tif (this.outdated.length) {\n\t\t\tthis.eventuallyAutoUpdateExtensions();\n\t\t}\n\t}\n\n\tprivate isAutoCheckUpdatesEnabled(): boolean {\n\t\treturn this.configurationService.getValue(AutoCheckUpdatesConfigurationKey);\n\t}\n\n\tprivate eventuallyCheckForUpdates(immediate = false): void {\n\t\tthis.updatesCheckDelayer.cancel();\n\t\tthis.updatesCheckDelayer.trigger(async () => {\n\t\t\tif (this.isAutoCheckUpdatesEnabled()) {\n\t\t\t\tawait this.checkForUpdates();\n\t\t\t}\n\t\t\tthis.eventuallyCheckForUpdates();\n\t\t}, immediate ? 0 : this.getUpdatesCheckInterval()).then(undefined, err => null);\n\t}\n\n\tprivate getUpdatesCheckInterval(): number {\n\t\tif (this.productService.quality === 'insider' && this.getProductUpdateVersion()) {\n\t\t\treturn 1000 * 60 * 60 * 1; // 1 hour\n\t\t}\n\t\treturn ExtensionsWorkbenchService.UpdatesCheckInterval;\n\t}\n\n\tprivate eventuallyAutoUpdateExtensions(): void {\n\t\tthis.autoUpdateDelayer.trigger(() => this.autoUpdateExtensions())\n\t\t\t.then(undefined, err => null);\n\t}\n\n\tprivate async autoUpdateBuiltinExtensions(): Promise<void> {\n\t\tawait this.checkForUpdates(true);\n\t\tconst toUpdate = this.outdated.filter(e => e.isBuiltin);\n\t\tawait Promises.settled(toUpdate.map(e => this.install(e, e.local?.preRelease ? { installPreReleaseVersion: true } : undefined)));\n\t}\n\n\tprivate async syncPinnedBuiltinExtensions(): Promise<void> {\n\t\tconst infos: IExtensionInfo[] = [];\n\t\tfor (const installed of this.local) {\n\t\t\tif (installed.isBuiltin && installed.local?.pinned && installed.local?.identifier.uuid) {\n\t\t\t\tinfos.push({ ...installed.identifier, version: installed.version });\n\t\t\t}\n\t\t}\n\t\tif (infos.length) {\n\t\t\tconst galleryExtensions = await this.galleryService.getExtensions(infos, CancellationToken.None);\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tawait this.syncInstalledExtensionsWithGallery(galleryExtensions);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async autoUpdateExtensions(): Promise<void> {\n\t\tconst toUpdate: IExtension[] = [];\n\t\tfor (const extension of this.outdated) {\n\t\t\tif (!this.shouldAutoUpdateExtension(extension)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (await this.shouldRequireConsentToUpdate(extension)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttoUpdate.push(extension);\n\t\t}\n\n\t\tif (!toUpdate.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst productVersion = this.getProductVersion();\n\t\tawait Promises.settled(toUpdate.map(e => this.install(e, e.local?.preRelease ? { installPreReleaseVersion: true, productVersion } : { productVersion })));\n\t}\n\n\tprivate getProductVersion(): IProductVersion {\n\t\treturn this.getProductUpdateVersion() ?? this.getProductCurrentVersion();\n\t}\n\n\tprivate getProductCurrentVersion(): IProductVersion {\n\t\treturn { version: this.productService.version, date: this.productService.date };\n\t}\n\n\tprivate getProductUpdateVersion(): IProductVersion | undefined {\n\t\tswitch (this.updateService.state.type) {\n\t\t\tcase StateType.AvailableForDownload:\n\t\t\tcase StateType.Downloaded:\n\t\t\tcase StateType.Updating:\n\t\t\tcase StateType.Ready: {\n\t\t\t\tconst version = this.updateService.state.update.productVersion;\n\t\t\t\tif (version && semver.valid(version)) {\n\t\t\t\t\treturn { version, date: this.updateService.state.update.timestamp ? new Date(this.updateService.state.update.timestamp).toISOString() : undefined };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate shouldAutoUpdateExtension(extension: IExtension): boolean {\n\t\tif (extension.deprecationInfo?.disallowInstall) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst autoUpdateValue = this.getAutoUpdateValue();\n\n\t\tif (autoUpdateValue === false) {\n\t\t\tconst extensionsToAutoUpdate = this.getEnabledAutoUpdateExtensions();\n\t\t\tconst extensionId = extension.identifier.id.toLowerCase();\n\t\t\tif (extensionsToAutoUpdate.includes(extensionId)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isAutoUpdateEnabledForPublisher(extension.publisher) && !extensionsToAutoUpdate.includes(`-${extensionId}`)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extension.pinned) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst disabledAutoUpdateExtensions = this.getDisabledAutoUpdateExtensions();\n\t\tif (disabledAutoUpdateExtensions.includes(extension.identifier.id.toLowerCase())) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (autoUpdateValue === true) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (autoUpdateValue === 'onlyEnabledExtensions') {\n\t\t\treturn this.extensionEnablementService.isEnabledEnablementState(extension.enablementState);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync shouldRequireConsentToUpdate(extension: IExtension): Promise<string | undefined> {\n\t\tif (!extension.outdated) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (extension.local?.manifest.main || extension.local?.manifest.browser) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!extension.gallery) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isDefined(extension.gallery.properties?.executesCode)) {\n\t\t\tif (!extension.gallery.properties.executesCode) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tconst manifest = extension instanceof Extension\n\t\t\t\t? await extension.getGalleryManifest()\n\t\t\t\t: await this.galleryService.getManifest(extension.gallery, CancellationToken.None);\n\t\t\tif (!manifest?.main && !manifest?.browser) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\treturn nls.localize('consentRequiredToUpdate', \"The update for {0} extension introduces executable code, which is not present in the currently installed version.\", extension.displayName);\n\t}\n\n\tisAutoUpdateEnabledFor(extensionOrPublisher: IExtension | string): boolean {\n\t\tif (isString(extensionOrPublisher)) {\n\t\t\tif (EXTENSION_IDENTIFIER_REGEX.test(extensionOrPublisher)) {\n\t\t\t\tthrow new Error('Expected publisher string, found extension identifier');\n\t\t\t}\n\t\t\tif (this.isAutoUpdateEnabled()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this.isAutoUpdateEnabledForPublisher(extensionOrPublisher);\n\t\t}\n\t\treturn this.shouldAutoUpdateExtension(extensionOrPublisher);\n\t}\n\n\tprivate isAutoUpdateEnabledForPublisher(publisher: string): boolean {\n\t\tconst publishersToAutoUpdate = this.getPublishersToAutoUpdate();\n\t\treturn publishersToAutoUpdate.includes(publisher.toLowerCase());\n\t}\n\n\tasync updateAutoUpdateEnablementFor(extensionOrPublisher: IExtension | string, enable: boolean): Promise<void> {\n\t\tif (this.isAutoUpdateEnabled()) {\n\t\t\tif (isString(extensionOrPublisher)) {\n\t\t\t\tthrow new Error('Expected extension, found publisher string');\n\t\t\t}\n\t\t\tconst disabledAutoUpdateExtensions = this.getDisabledAutoUpdateExtensions();\n\t\t\tconst extensionId = extensionOrPublisher.identifier.id.toLowerCase();\n\t\t\tconst extensionIndex = disabledAutoUpdateExtensions.indexOf(extensionId);\n\t\t\tif (enable) {\n\t\t\t\tif (extensionIndex !== -1) {\n\t\t\t\t\tdisabledAutoUpdateExtensions.splice(extensionIndex, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (extensionIndex === -1) {\n\t\t\t\t\tdisabledAutoUpdateExtensions.push(extensionId);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setDisabledAutoUpdateExtensions(disabledAutoUpdateExtensions);\n\t\t\tif (enable && extensionOrPublisher.local && extensionOrPublisher.pinned) {\n\t\t\t\tawait this.extensionManagementService.updateMetadata(extensionOrPublisher.local, { pinned: false });\n\t\t\t}\n\t\t\tthis._onChange.fire(extensionOrPublisher);\n\t\t}\n\n\t\telse {\n\t\t\tconst enabledAutoUpdateExtensions = this.getEnabledAutoUpdateExtensions();\n\t\t\tif (isString(extensionOrPublisher)) {\n\t\t\t\tif (EXTENSION_IDENTIFIER_REGEX.test(extensionOrPublisher)) {\n\t\t\t\t\tthrow new Error('Expected publisher string, found extension identifier');\n\t\t\t\t}\n\t\t\t\textensionOrPublisher = extensionOrPublisher.toLowerCase();\n\t\t\t\tif (this.isAutoUpdateEnabledFor(extensionOrPublisher) !== enable) {\n\t\t\t\t\tif (enable) {\n\t\t\t\t\t\tenabledAutoUpdateExtensions.push(extensionOrPublisher);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (enabledAutoUpdateExtensions.includes(extensionOrPublisher)) {\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(enabledAutoUpdateExtensions.indexOf(extensionOrPublisher), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setEnabledAutoUpdateExtensions(enabledAutoUpdateExtensions);\n\t\t\t\tfor (const e of this.installed) {\n\t\t\t\t\tif (e.publisher.toLowerCase() === extensionOrPublisher) {\n\t\t\t\t\t\tthis._onChange.fire(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst extensionId = extensionOrPublisher.identifier.id.toLowerCase();\n\t\t\t\tconst enableAutoUpdatesForPublisher = this.isAutoUpdateEnabledFor(extensionOrPublisher.publisher.toLowerCase());\n\t\t\t\tconst enableAutoUpdatesForExtension = enabledAutoUpdateExtensions.includes(extensionId);\n\t\t\t\tconst disableAutoUpdatesForExtension = enabledAutoUpdateExtensions.includes(`-${extensionId}`);\n\n\t\t\t\tif (enable) {\n\t\t\t\t\tif (disableAutoUpdatesForExtension) {\n\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(enabledAutoUpdateExtensions.indexOf(`-${extensionId}`), 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (enableAutoUpdatesForPublisher) {\n\t\t\t\t\t\tif (enableAutoUpdatesForExtension) {\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(enabledAutoUpdateExtensions.indexOf(extensionId), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!enableAutoUpdatesForExtension) {\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.push(extensionId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Disable Auto Updates\n\t\t\t\telse {\n\t\t\t\t\tif (enableAutoUpdatesForExtension) {\n\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(enabledAutoUpdateExtensions.indexOf(extensionId), 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (enableAutoUpdatesForPublisher) {\n\t\t\t\t\t\tif (!disableAutoUpdatesForExtension) {\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.push(`-${extensionId}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (disableAutoUpdatesForExtension) {\n\t\t\t\t\t\t\tenabledAutoUpdateExtensions.splice(enabledAutoUpdateExtensions.indexOf(`-${extensionId}`), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setEnabledAutoUpdateExtensions(enabledAutoUpdateExtensions);\n\t\t\t\tthis._onChange.fire(extensionOrPublisher);\n\t\t\t}\n\t\t}\n\n\t\tif (enable) {\n\t\t\tthis.autoUpdateExtensions();\n\t\t}\n\t}\n\n\tprivate onDidSelectedExtensionToAutoUpdateValueChange(): void {\n\t\tif (\n\t\t\tthis.enabledAuotUpdateExtensionsValue !== this.getEnabledAutoUpdateExtensionsValue() /* This checks if current window changed the value or not */\n\t\t\t|| this.disabledAutoUpdateExtensionsValue !== this.getDisabledAutoUpdateExtensionsValue() /* This checks if current window changed the value or not */\n\t\t) {\n\t\t\tconst userExtensions = this.installed.filter(e => !e.isBuiltin);\n\t\t\tconst groupBy = (extensions: IExtension[]): IExtension[][] => {\n\t\t\t\tconst shouldAutoUpdate: IExtension[] = [];\n\t\t\t\tconst shouldNotAutoUpdate: IExtension[] = [];\n\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\tif (this.shouldAutoUpdateExtension(extension)) {\n\t\t\t\t\t\tshouldAutoUpdate.push(extension);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshouldNotAutoUpdate.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [shouldAutoUpdate, shouldNotAutoUpdate];\n\t\t\t};\n\n\t\t\tconst [wasShouldAutoUpdate, wasShouldNotAutoUpdate] = groupBy(userExtensions);\n\t\t\tthis._enabledAutoUpdateExtensionsValue = undefined;\n\t\t\tthis._disabledAutoUpdateExtensionsValue = undefined;\n\t\t\tconst [shouldAutoUpdate, shouldNotAutoUpdate] = groupBy(userExtensions);\n\n\t\t\tfor (const e of wasShouldAutoUpdate ?? []) {\n\t\t\t\tif (shouldNotAutoUpdate?.includes(e)) {\n\t\t\t\t\tthis._onChange.fire(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const e of wasShouldNotAutoUpdate ?? []) {\n\t\t\t\tif (shouldAutoUpdate?.includes(e)) {\n\t\t\t\t\tthis._onChange.fire(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canInstall(extension: IExtension): Promise<boolean> {\n\t\tif (!(extension instanceof Extension)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extension.isMalicious) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extension.deprecationInfo?.disallowInstall) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extension.gallery) {\n\t\t\tif (this.localExtensions && await this.localExtensions.canInstall(extension.gallery)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (this.remoteExtensions && await this.remoteExtensions.canInstall(extension.gallery)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (this.webExtensions && await this.webExtensions.canInstall(extension.gallery)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extension.resourceExtension && await this.extensionManagementService.canInstall(extension.resourceExtension)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync install(arg: string | URI | IExtension, installOptions: InstallExtensionOptions = {}, progressLocation?: ProgressLocation): Promise<IExtension> {\n\t\tlet installable: URI | IGalleryExtension | IResourceExtension | undefined;\n\t\tlet extension: IExtension | undefined;\n\n\t\tif (arg instanceof URI) {\n\t\t\tinstallable = arg;\n\t\t} else {\n\t\t\tlet installableInfo: IExtensionInfo | undefined;\n\t\t\tlet gallery: IGalleryExtension | undefined;\n\t\t\tif (isString(arg)) {\n\t\t\t\textension = this.local.find(e => areSameExtensions(e.identifier, { id: arg }));\n\t\t\t\tif (!extension?.isBuiltin) {\n\t\t\t\t\tinstallableInfo = { id: arg, version: installOptions.version, preRelease: installOptions.installPreReleaseVersion ?? this.preferPreReleases };\n\t\t\t\t}\n\t\t\t} else if (arg.gallery) {\n\t\t\t\textension = arg;\n\t\t\t\tgallery = arg.gallery;\n\t\t\t\tif (installOptions.version && installOptions.version !== gallery?.version) {\n\t\t\t\t\tinstallableInfo = { id: extension.identifier.id, version: installOptions.version };\n\t\t\t\t}\n\t\t\t} else if (arg.resourceExtension) {\n\t\t\t\textension = arg;\n\t\t\t\tinstallable = arg.resourceExtension;\n\t\t\t}\n\t\t\tif (installableInfo) {\n\t\t\t\tconst targetPlatform = extension?.server ? await extension.server.extensionManagementService.getTargetPlatform() : undefined;\n\t\t\t\tgallery = (await this.galleryService.getExtensions([installableInfo], { targetPlatform }, CancellationToken.None)).at(0);\n\t\t\t}\n\t\t\tif (!extension && gallery) {\n\t\t\t\textension = this.instantiationService.createInstance(Extension, ext => this.getExtensionState(ext), ext => this.getRuntimeState(ext), undefined, undefined, gallery, undefined);\n\t\t\t\t(<Extension>extension).setExtensionsControlManifest(await this.extensionManagementService.getExtensionsControlManifest());\n\t\t\t}\n\t\t\tif (extension?.isMalicious) {\n\t\t\t\tthrow new Error(nls.localize('malicious', \"This extension is reported to be problematic.\"));\n\t\t\t}\n\t\t\t// Do not install if requested to enable and extension is already installed\n\t\t\tif (!(installOptions.enable && extension?.local)) {\n\t\t\t\tif (!installable) {\n\t\t\t\t\tif (!gallery) {\n\t\t\t\t\t\tconst id = isString(arg) ? arg : (<IExtension>arg).identifier.id;\n\t\t\t\t\t\tif (installOptions.version) {\n\t\t\t\t\t\t\tthrow new Error(nls.localize('not found version', \"Unable to install extension '{0}' because the requested version '{1}' is not found.\", id, installOptions.version));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(nls.localize('not found', \"Unable to install extension '{0}' because it is not found.\", id));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tinstallable = gallery;\n\t\t\t\t}\n\t\t\t\tif (installOptions.version) {\n\t\t\t\t\tinstallOptions.installGivenVersion = true;\n\t\t\t\t}\n\t\t\t\tif (extension?.isWorkspaceScoped) {\n\t\t\t\t\tinstallOptions.isWorkspaceScoped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (installable) {\n\t\t\tif (installOptions.justification) {\n\t\t\t\tconst syncCheck = isUndefined(installOptions.isMachineScoped) && this.userDataSyncEnablementService.isEnabled() && this.userDataSyncEnablementService.isResourceEnabled(SyncResource.Extensions);\n\t\t\t\tconst buttons: IPromptButton<boolean>[] = [];\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel: isString(installOptions.justification) || !installOptions.justification.action\n\t\t\t\t\t\t? nls.localize({ key: 'installButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Install Extension\")\n\t\t\t\t\t\t: nls.localize({ key: 'installButtonLabelWithAction', comment: ['&& denotes a mnemonic'] }, \"&&Install Extension and {0}\", installOptions.justification.action), run: () => true\n\t\t\t\t});\n\t\t\t\tif (!extension) {\n\t\t\t\t\tbuttons.push({ label: nls.localize('open', \"Open Extension\"), run: () => { this.open(extension!); return false; } });\n\t\t\t\t}\n\t\t\t\tconst result = await this.dialogService.prompt<boolean>({\n\t\t\t\t\ttitle: nls.localize('installExtensionTitle', \"Install Extension\"),\n\t\t\t\t\tmessage: extension ? nls.localize('installExtensionMessage', \"Would you like to install '{0}' extension from '{1}'?\", extension.displayName, extension.publisherDisplayName) : nls.localize('installVSIXMessage', \"Would you like to install the extension?\"),\n\t\t\t\t\tdetail: isString(installOptions.justification) ? installOptions.justification : installOptions.justification.reason,\n\t\t\t\t\tcancelButton: true,\n\t\t\t\t\tbuttons,\n\t\t\t\t\tcheckbox: syncCheck ? {\n\t\t\t\t\t\tlabel: nls.localize('sync extension', \"Sync this extension\"),\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t} : undefined,\n\t\t\t\t});\n\t\t\t\tif (!result.result) {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t\tif (syncCheck) {\n\t\t\t\t\tinstallOptions.isMachineScoped = !result.checkboxChecked;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (installable instanceof URI) {\n\t\t\t\textension = await this.doInstall(undefined, () => this.installFromVSIX(installable, installOptions), progressLocation);\n\t\t\t} else if (extension) {\n\t\t\t\tif (extension.resourceExtension) {\n\t\t\t\t\textension = await this.doInstall(extension, () => this.extensionManagementService.installResourceExtension(installable as IResourceExtension, installOptions), progressLocation);\n\t\t\t\t} else {\n\t\t\t\t\textension = await this.doInstall(extension, () => this.installFromGallery(extension!, installable as IGalleryExtension, installOptions), progressLocation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!extension) {\n\t\t\tthrow new Error(nls.localize('unknown', \"Unable to install extension\"));\n\t\t}\n\n\t\tif (installOptions.enable) {\n\t\t\tif (extension.enablementState === EnablementState.DisabledWorkspace || extension.enablementState === EnablementState.DisabledGlobally) {\n\t\t\t\tif (installOptions.justification) {\n\t\t\t\t\tconst result = await this.dialogService.confirm({\n\t\t\t\t\t\ttitle: nls.localize('enableExtensionTitle', \"Enable Extension\"),\n\t\t\t\t\t\tmessage: nls.localize('enableExtensionMessage', \"Would you like to enable '{0}' extension?\", extension.displayName),\n\t\t\t\t\t\tdetail: isString(installOptions.justification) ? installOptions.justification : installOptions.justification.reason,\n\t\t\t\t\t\tprimaryButton: isString(installOptions.justification) ? nls.localize({ key: 'enableButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Enable Extension\") : nls.localize({ key: 'enableButtonLabelWithAction', comment: ['&& denotes a mnemonic'] }, \"&&Enable Extension and {0}\", installOptions.justification.action),\n\t\t\t\t\t});\n\t\t\t\t\tif (!result.confirmed) {\n\t\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tawait this.setEnablement(extension, extension.enablementState === EnablementState.DisabledWorkspace ? EnablementState.EnabledWorkspace : EnablementState.EnabledGlobally);\n\t\t\t}\n\t\t\tawait this.waitUntilExtensionIsEnabled(extension);\n\t\t}\n\n\t\treturn extension;\n\t}\n\n\tasync installInServer(extension: IExtension, server: IExtensionManagementServer): Promise<void> {\n\t\tawait this.doInstall(extension, async () => {\n\t\t\tconst local = extension.local;\n\t\t\tif (!local) {\n\t\t\t\tthrow new Error('Extension not found');\n\t\t\t}\n\t\t\tif (!extension.gallery) {\n\t\t\t\textension = (await this.getExtensions([{ ...extension.identifier, preRelease: local.preRelease }], CancellationToken.None))[0] ?? extension;\n\t\t\t}\n\t\t\tif (extension.gallery) {\n\t\t\t\treturn server.extensionManagementService.installFromGallery(extension.gallery, { installPreReleaseVersion: local.preRelease });\n\t\t\t}\n\n\t\t\tconst targetPlatform = await server.extensionManagementService.getTargetPlatform();\n\t\t\tif (!isTargetPlatformCompatible(local.targetPlatform, [local.targetPlatform], targetPlatform)) {\n\t\t\t\tthrow new Error(nls.localize('incompatible', \"Can't install '{0}' extension because it is not compatible.\", extension.identifier.id));\n\t\t\t}\n\n\t\t\tconst vsix = await this.extensionManagementService.zip(local);\n\t\t\ttry {\n\t\t\t\treturn await server.extensionManagementService.install(vsix);\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.fileService.del(vsix);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tcanSetLanguage(extension: IExtension): boolean {\n\t\tif (!isWeb) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!extension.gallery) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst locale = getLocale(extension.gallery);\n\t\tif (!locale) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync setLanguage(extension: IExtension): Promise<void> {\n\t\tif (!this.canSetLanguage(extension)) {\n\t\t\tthrow new Error('Can not set language');\n\t\t}\n\t\tconst locale = getLocale(extension.gallery!);\n\t\tif (locale === language) {\n\t\t\treturn;\n\t\t}\n\t\tconst localizedLanguageName = extension.gallery?.properties?.localizedLanguages?.[0];\n\t\treturn this.localeService.setLocale({ id: locale, galleryExtension: extension.gallery, extensionId: extension.identifier.id, label: localizedLanguageName ?? extension.displayName });\n\t}\n\n\tsetEnablement(extensions: IExtension | IExtension[], enablementState: EnablementState): Promise<void> {\n\t\textensions = Array.isArray(extensions) ? extensions : [extensions];\n\t\treturn this.promptAndSetEnablement(extensions, enablementState);\n\t}\n\n\tasync uninstall(e: IExtension): Promise<void> {\n\t\tconst extension = e.local ? e : this.local.find(local => areSameExtensions(local.identifier, e.identifier));\n\t\tif (!extension?.local) {\n\t\t\tthrow new Error('Missing local');\n\t\t}\n\n\t\tconst extensionsToUninstall: UninstallExtensionInfo[] = [{ extension: extension.local }];\n\t\tfor (const packExtension of this.getAllPackExtensionsToUninstall(extension.local, this.local)) {\n\t\t\tif (!extensionsToUninstall.some(e => areSameExtensions(e.extension.identifier, packExtension.identifier))) {\n\t\t\t\textensionsToUninstall.push({ extension: packExtension });\n\t\t\t}\n\t\t}\n\n\t\tconst dependents: IExtension[] = [];\n\t\tfor (const { extension } of extensionsToUninstall) {\n\t\t\tfor (const local of this.local) {\n\t\t\t\tif (!local.local) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (areSameExtensions(local.identifier, extension.identifier)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (local.dependencies.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (extension.manifest.extensionPack?.some(id => areSameExtensions({ id }, local.identifier))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (dependents.some(d => d.extensionPack.some(id => areSameExtensions({ id }, local.identifier)))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (local.dependencies.some(dep => areSameExtensions(extension.identifier, { id: dep }))) {\n\t\t\t\t\tdependents.push(local);\n\t\t\t\t\textensionsToUninstall.push({ extension: local.local });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dependents.length) {\n\t\t\tconst { result } = await this.dialogService.prompt({\n\t\t\t\ttitle: nls.localize('uninstallDependents', \"Uninstall Extension with Dependents\"),\n\t\t\t\ttype: Severity.Warning,\n\t\t\t\tmessage: this.getErrorMessageForUninstallingAnExtensionWithDependents(extension, dependents),\n\t\t\t\tbuttons: [{\n\t\t\t\t\tlabel: nls.localize('uninstallAll', \"Uninstall All\"),\n\t\t\t\t\trun: () => true\n\t\t\t\t}],\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => false\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!result) {\n\t\t\t\tthrow new CancellationError();\n\t\t\t}\n\t\t}\n\n\t\treturn this.withProgress({\n\t\t\tlocation: ProgressLocation.Extensions,\n\t\t\ttitle: nls.localize('uninstallingExtension', 'Uninstalling extension....'),\n\t\t\tsource: `${extension.identifier.id}`\n\t\t}, () => this.extensionManagementService.uninstallExtensions(extensionsToUninstall).then(() => undefined));\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: IExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.some(e => areSameExtensions(e.identifier, extension.identifier))) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ?? [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const i of installed) {\n\t\t\t\tif (i.local && !i.isBuiltin && extensionsPack.some(id => areSameExtensions({ id }, i.identifier))) {\n\t\t\t\t\tpackedExtensions.push(i.local);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getErrorMessageForUninstallingAnExtensionWithDependents(extension: IExtension, dependents: IExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleDependentUninstallError', \"Cannot uninstall '{0}' extension alone. '{1}' extension depends on this. Do you want to uninstall all these extensions?\", extension.displayName, dependents[0].displayName);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoDependentsUninstallError', \"Cannot uninstall '{0}' extension alone. '{1}' and '{2}' extensions depend on this. Do you want to uninstall all these extensions?\",\n\t\t\t\textension.displayName, dependents[0].displayName, dependents[1].displayName);\n\t\t}\n\t\treturn nls.localize('multipleDependentsUninstallError', \"Cannot uninstall '{0}' extension alone. '{1}', '{2}' and other extensions depend on this. Do you want to uninstall all these extensions?\",\n\t\t\textension.displayName, dependents[0].displayName, dependents[1].displayName);\n\t}\n\n\treinstall(extension: IExtension): Promise<IExtension> {\n\t\treturn this.doInstall(extension, () => {\n\t\t\tconst ext = extension.local ? extension : this.local.filter(e => areSameExtensions(e.identifier, extension.identifier))[0];\n\t\t\tconst toReinstall: ILocalExtension | null = ext && ext.local ? ext.local : null;\n\t\t\tif (!toReinstall) {\n\t\t\t\tthrow new Error('Missing local');\n\t\t\t}\n\t\t\treturn this.extensionManagementService.reinstallFromGallery(toReinstall);\n\t\t});\n\t}\n\n\tisExtensionIgnoredToSync(extension: IExtension): boolean {\n\t\treturn extension.local ? !this.isInstalledExtensionSynced(extension.local)\n\t\t\t: this.extensionsSyncManagementService.hasToNeverSyncExtension(extension.identifier.id);\n\t}\n\n\tasync togglePreRelease(extension: IExtension): Promise<void> {\n\t\tif (!extension.local) {\n\t\t\treturn;\n\t\t}\n\t\tif (extension.preRelease !== extension.isPreReleaseVersion) {\n\t\t\tawait this.extensionManagementService.updateMetadata(extension.local, { preRelease: !extension.preRelease });\n\t\t\treturn;\n\t\t}\n\t\tawait this.install(extension, { installPreReleaseVersion: !extension.preRelease, preRelease: !extension.preRelease });\n\t}\n\n\tasync toggleExtensionIgnoredToSync(extension: IExtension): Promise<void> {\n\t\tconst isIgnored = this.isExtensionIgnoredToSync(extension);\n\t\tif (extension.local && isIgnored) {\n\t\t\t(<Extension>extension).local = await this.updateSynchronizingInstalledExtension(extension.local, true);\n\t\t\tthis._onChange.fire(extension);\n\t\t} else {\n\t\t\tthis.extensionsSyncManagementService.updateIgnoredExtensions(extension.identifier.id, !isIgnored);\n\t\t}\n\t\tawait this.userDataAutoSyncService.triggerSync(['IgnoredExtensionsUpdated'], false, false);\n\t}\n\n\tasync toggleApplyExtensionToAllProfiles(extension: IExtension): Promise<void> {\n\t\tif (!extension.local || isApplicationScopedExtension(extension.local.manifest) || extension.isBuiltin) {\n\t\t\treturn;\n\t\t}\n\t\tconst isApplicationScoped = extension.local.isApplicationScoped;\n\t\tawait Promise.all(this.getAllExtensions().map(async extensions => {\n\t\t\tconst local = extensions.local.find(e => areSameExtensions(e.identifier, extension.identifier))?.local;\n\t\t\tif (local && local.isApplicationScoped === isApplicationScoped) {\n\t\t\t\tawait this.extensionManagementService.toggleAppliationScope(local, this.userDataProfileService.currentProfile.extensionsResource);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate getAllExtensions(): Extensions[] {\n\t\tconst extensions: Extensions[] = [];\n\t\tif (this.localExtensions) {\n\t\t\textensions.push(this.localExtensions);\n\t\t}\n\t\tif (this.remoteExtensions) {\n\t\t\textensions.push(this.remoteExtensions);\n\t\t}\n\t\tif (this.webExtensions) {\n\t\t\textensions.push(this.webExtensions);\n\t\t}\n\t\treturn extensions;\n\t}\n\n\tprivate isInstalledExtensionSynced(extension: ILocalExtension): boolean {\n\t\tif (extension.isMachineScoped) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.extensionsSyncManagementService.hasToAlwaysSyncExtension(extension.identifier.id)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn !this.extensionsSyncManagementService.hasToNeverSyncExtension(extension.identifier.id);\n\t}\n\n\tasync updateSynchronizingInstalledExtension(extension: ILocalExtension, sync: boolean): Promise<ILocalExtension> {\n\t\tconst isMachineScoped = !sync;\n\t\tif (extension.isMachineScoped !== isMachineScoped) {\n\t\t\textension = await this.extensionManagementService.updateMetadata(extension, { isMachineScoped });\n\t\t}\n\t\tif (sync) {\n\t\t\tthis.extensionsSyncManagementService.updateIgnoredExtensions(extension.identifier.id, false);\n\t\t}\n\t\treturn extension;\n\t}\n\n\tprivate doInstall(extension: IExtension | undefined, installTask: () => Promise<ILocalExtension>, progressLocation?: ProgressLocation): Promise<IExtension> {\n\t\tconst title = extension ? nls.localize('installing named extension', \"Installing '{0}' extension....\", extension.displayName) : nls.localize('installing extension', 'Installing extension....');\n\t\treturn this.withProgress({\n\t\t\tlocation: progressLocation ?? ProgressLocation.Extensions,\n\t\t\ttitle\n\t\t}, async () => {\n\t\t\ttry {\n\t\t\t\tif (extension) {\n\t\t\t\t\tthis.installing.push(extension);\n\t\t\t\t\tthis._onChange.fire(extension);\n\t\t\t\t}\n\t\t\t\tconst local = await installTask();\n\t\t\t\treturn await this.waitAndGetInstalledExtension(local.identifier);\n\t\t\t} finally {\n\t\t\t\tif (extension) {\n\t\t\t\t\tthis.installing = this.installing.filter(e => e !== extension);\n\t\t\t\t\t// Trigger the change without passing the extension because it is replaced by a new instance.\n\t\t\t\t\tthis._onChange.fire(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async installFromVSIX(vsix: URI, installOptions: InstallOptions): Promise<ILocalExtension> {\n\t\tconst manifest = await this.extensionManagementService.getManifest(vsix);\n\t\tconst existingExtension = this.local.find(local => areSameExtensions(local.identifier, { id: getGalleryExtensionId(manifest.publisher, manifest.name) }));\n\t\tif (existingExtension) {\n\t\t\tinstallOptions = installOptions || {};\n\t\t\tif (existingExtension.latestVersion === manifest.version) {\n\t\t\t\tinstallOptions.pinned = existingExtension.local?.pinned || !this.shouldAutoUpdateExtension(existingExtension);\n\t\t\t} else {\n\t\t\t\tinstallOptions.installGivenVersion = true;\n\t\t\t}\n\t\t}\n\t\treturn this.extensionManagementService.installVSIX(vsix, manifest, installOptions);\n\t}\n\n\tprivate installFromGallery(extension: IExtension, gallery: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\tinstallOptions = installOptions ?? {};\n\t\tinstallOptions.pinned = extension.local?.pinned || !this.shouldAutoUpdateExtension(extension);\n\t\tif (extension.local) {\n\t\t\tinstallOptions.productVersion = this.getProductVersion();\n\t\t\treturn this.extensionManagementService.updateFromGallery(gallery, extension.local, installOptions);\n\t\t} else {\n\t\t\treturn this.extensionManagementService.installFromGallery(gallery, installOptions);\n\t\t}\n\t}\n\n\tprivate async waitAndGetInstalledExtension(identifier: IExtensionIdentifier): Promise<IExtension> {\n\t\tlet installedExtension = this.local.find(local => areSameExtensions(local.identifier, identifier));\n\t\tif (!installedExtension) {\n\t\t\tawait Event.toPromise(Event.filter(this.onChange, e => !!e && this.local.some(local => areSameExtensions(local.identifier, identifier))));\n\t\t}\n\t\tinstalledExtension = this.local.find(local => areSameExtensions(local.identifier, identifier));\n\t\tif (!installedExtension) {\n\t\t\t// This should not happen\n\t\t\tthrow new Error('Extension should have been installed');\n\t\t}\n\t\treturn installedExtension;\n\t}\n\n\tprivate async waitUntilExtensionIsEnabled(extension: IExtension): Promise<void> {\n\t\tif (this.extensionService.extensions.find(e => ExtensionIdentifier.equals(e.identifier, extension.identifier.id))) {\n\t\t\treturn;\n\t\t}\n\t\tif (!extension.local || !this.extensionService.canAddExtension(toExtensionDescription(extension.local))) {\n\t\t\treturn;\n\t\t}\n\t\tawait new Promise<void>((c, e) => {\n\t\t\tconst disposable = this.extensionService.onDidChangeExtensions(() => {\n\t\t\t\ttry {\n\t\t\t\t\tif (this.extensionService.extensions.find(e => ExtensionIdentifier.equals(e.identifier, extension.identifier.id))) {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\tc();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\te(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate promptAndSetEnablement(extensions: IExtension[], enablementState: EnablementState): Promise<any> {\n\t\tconst enable = enablementState === EnablementState.EnabledGlobally || enablementState === EnablementState.EnabledWorkspace;\n\t\tif (enable) {\n\t\t\tconst allDependenciesAndPackedExtensions = this.getExtensionsRecursively(extensions, this.local, enablementState, { dependencies: true, pack: true });\n\t\t\treturn this.checkAndSetEnablement(extensions, allDependenciesAndPackedExtensions, enablementState);\n\t\t} else {\n\t\t\tconst packedExtensions = this.getExtensionsRecursively(extensions, this.local, enablementState, { dependencies: false, pack: true });\n\t\t\tif (packedExtensions.length) {\n\t\t\t\treturn this.checkAndSetEnablement(extensions, packedExtensions, enablementState);\n\t\t\t}\n\t\t\treturn this.checkAndSetEnablement(extensions, [], enablementState);\n\t\t}\n\t}\n\n\tprivate async checkAndSetEnablement(extensions: IExtension[], otherExtensions: IExtension[], enablementState: EnablementState): Promise<any> {\n\t\tconst allExtensions = [...extensions, ...otherExtensions];\n\t\tconst enable = enablementState === EnablementState.EnabledGlobally || enablementState === EnablementState.EnabledWorkspace;\n\t\tif (!enable) {\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tconst dependents = this.getDependentsAfterDisablement(extension, allExtensions, this.local);\n\t\t\t\tif (dependents.length) {\n\t\t\t\t\tconst { result } = await this.dialogService.prompt({\n\t\t\t\t\t\ttitle: nls.localize('disableDependents', \"Disable Extension with Dependents\"),\n\t\t\t\t\t\ttype: Severity.Warning,\n\t\t\t\t\t\tmessage: this.getDependentsErrorMessageForDisablement(extension, allExtensions, dependents),\n\t\t\t\t\t\tbuttons: [{\n\t\t\t\t\t\t\tlabel: nls.localize('disable all', 'Disable All'),\n\t\t\t\t\t\t\trun: () => true\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tcancelButton: {\n\t\t\t\t\t\t\trun: () => false\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t\t}\n\t\t\t\t\tawait this.checkAndSetEnablement(dependents, [extension], enablementState);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.doSetEnablement(allExtensions, enablementState);\n\t}\n\n\tprivate getExtensionsRecursively(extensions: IExtension[], installed: IExtension[], enablementState: EnablementState, options: { dependencies: boolean; pack: boolean }, checked: IExtension[] = []): IExtension[] {\n\t\tconst toCheck = extensions.filter(e => checked.indexOf(e) === -1);\n\t\tif (toCheck.length) {\n\t\t\tfor (const extension of toCheck) {\n\t\t\t\tchecked.push(extension);\n\t\t\t}\n\t\t\tconst extensionsToEanbleOrDisable = installed.filter(i => {\n\t\t\t\tif (checked.indexOf(i) !== -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst enable = enablementState === EnablementState.EnabledGlobally || enablementState === EnablementState.EnabledWorkspace;\n\t\t\t\tconst isExtensionEnabled = i.enablementState === EnablementState.EnabledGlobally || i.enablementState === EnablementState.EnabledWorkspace;\n\t\t\t\tif (enable === isExtensionEnabled) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn (enable || !i.isBuiltin) // Include all Extensions for enablement and only non builtin extensions for disablement\n\t\t\t\t\t&& (options.dependencies || options.pack)\n\t\t\t\t\t&& extensions.some(extension =>\n\t\t\t\t\t\t(options.dependencies && extension.dependencies.some(id => areSameExtensions({ id }, i.identifier)))\n\t\t\t\t\t\t|| (options.pack && extension.extensionPack.some(id => areSameExtensions({ id }, i.identifier)))\n\t\t\t\t\t);\n\t\t\t});\n\t\t\tif (extensionsToEanbleOrDisable.length) {\n\t\t\t\textensionsToEanbleOrDisable.push(...this.getExtensionsRecursively(extensionsToEanbleOrDisable, installed, enablementState, options, checked));\n\t\t\t}\n\t\t\treturn extensionsToEanbleOrDisable;\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependentsAfterDisablement(extension: IExtension, extensionsToDisable: IExtension[], installed: IExtension[]): IExtension[] {\n\t\treturn installed.filter(i => {\n\t\t\tif (i.dependencies.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (i === extension) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!this.extensionEnablementService.isEnabledEnablementState(i.enablementState)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (extensionsToDisable.indexOf(i) !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn i.dependencies.some(dep => [extension, ...extensionsToDisable].some(d => areSameExtensions(d.identifier, { id: dep })));\n\t\t});\n\t}\n\n\tprivate getDependentsErrorMessageForDisablement(extension: IExtension, allDisabledExtensions: IExtension[], dependents: IExtension[]): string {\n\t\tfor (const e of [extension, ...allDisabledExtensions]) {\n\t\t\tconst dependentsOfTheExtension = dependents.filter(d => d.dependencies.some(id => areSameExtensions({ id }, e.identifier)));\n\t\t\tif (dependentsOfTheExtension.length) {\n\t\t\t\treturn this.getErrorMessageForDisablingAnExtensionWithDependents(e, dependentsOfTheExtension);\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate getErrorMessageForDisablingAnExtensionWithDependents(extension: IExtension, dependents: IExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleDependentError', \"Cannot disable '{0}' extension alone. '{1}' extension depends on this. Do you want to disable all these extensions?\", extension.displayName, dependents[0].displayName);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoDependentsError', \"Cannot disable '{0}' extension alone. '{1}' and '{2}' extensions depend on this. Do you want to disable all these extensions?\",\n\t\t\t\textension.displayName, dependents[0].displayName, dependents[1].displayName);\n\t\t}\n\t\treturn nls.localize('multipleDependentsError', \"Cannot disable '{0}' extension alone. '{1}', '{2}' and other extensions depend on this. Do you want to disable all these extensions?\",\n\t\t\textension.displayName, dependents[0].displayName, dependents[1].displayName);\n\t}\n\n\tprivate async doSetEnablement(extensions: IExtension[], enablementState: EnablementState): Promise<boolean[]> {\n\t\tconst changed = await this.extensionEnablementService.setEnablement(extensions.map(e => e.local!), enablementState);\n\t\tfor (let i = 0; i < changed.length; i++) {\n\t\t\tif (changed[i]) {\n\t\t\t\t/* __GDPR__\n\t\t\t\t\"extension:enable\" : {\n\t\t\t\t\t\"owner\": \"sandy081\",\n\t\t\t\t\t\"${include}\": [\n\t\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t/* __GDPR__\n\t\t\t\t\"extension:disable\" : {\n\t\t\t\t\t\"owner\": \"sandy081\",\n\t\t\t\t\t\"${include}\": [\n\t\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.telemetryService.publicLog(enablementState === EnablementState.EnabledGlobally || enablementState === EnablementState.EnabledWorkspace ? 'extension:enable' : 'extension:disable', extensions[i].telemetryData);\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t// Current service reports progress when installing/uninstalling extensions\n\t// This is to report progress for other sources of extension install/uninstall changes\n\t// Since we cannot differentiate between the two, we report progress for all extension install/uninstall changes\n\tprivate _activityCallBack: ((value: void) => void) | undefined;\n\tprivate reportProgressFromOtherSources(): void {\n\t\tif (this.installed.some(e => e.state === ExtensionState.Installing || e.state === ExtensionState.Uninstalling)) {\n\t\t\tif (!this._activityCallBack) {\n\t\t\t\tthis.withProgress({ location: ProgressLocation.Extensions }, () => new Promise(resolve => this._activityCallBack = resolve));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._activityCallBack?.();\n\t\t\tthis._activityCallBack = undefined;\n\t\t}\n\t}\n\n\tprivate withProgress<T>(options: IProgressOptions, task: () => Promise<T>): Promise<T> {\n\t\treturn this.progressService.withProgress(options, async () => {\n\t\t\tconst cancelableTask = createCancelablePromise(() => task());\n\t\t\tthis.tasksInProgress.push(cancelableTask);\n\t\t\ttry {\n\t\t\t\treturn await cancelableTask;\n\t\t\t} finally {\n\t\t\t\tconst index = this.tasksInProgress.indexOf(cancelableTask);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tthis.tasksInProgress.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onError(err: any): void {\n\t\tif (isCancellationError(err)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = err && err.message || '';\n\n\t\tif (/getaddrinfo ENOTFOUND|getaddrinfo ENOENT|connect EACCES|connect ECONNREFUSED/.test(message)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notificationService.error(err);\n\t}\n\n\thandleURL(uri: URI, options?: IOpenURLOptions): Promise<boolean> {\n\t\tif (!/^extension/.test(uri.path)) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.onOpenExtensionUrl(uri);\n\t\treturn Promise.resolve(true);\n\t}\n\n\tprivate onOpenExtensionUrl(uri: URI): void {\n\t\tconst match = /^extension\\/([^/]+)$/.exec(uri.path);\n\n\t\tif (!match) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst extensionId = match[1];\n\n\t\tthis.queryLocal().then(async local => {\n\t\t\tlet extension = local.find(local => areSameExtensions(local.identifier, { id: extensionId }));\n\t\t\tif (!extension) {\n\t\t\t\t[extension] = await this.getExtensions([{ id: extensionId }], { source: 'uri' }, CancellationToken.None);\n\t\t\t}\n\t\t\tif (extension) {\n\t\t\t\tawait this.hostService.focus(mainWindow);\n\t\t\t\tawait this.open(extension);\n\t\t\t}\n\t\t}).then(undefined, error => this.onError(error));\n\t}\n\n\tprivate getPublishersToAutoUpdate(): string[] {\n\t\treturn this.getEnabledAutoUpdateExtensions().filter(id => !EXTENSION_IDENTIFIER_REGEX.test(id));\n\t}\n\n\tgetEnabledAutoUpdateExtensions(): string[] {\n\t\ttry {\n\t\t\tconst parsedValue = JSON.parse(this.enabledAuotUpdateExtensionsValue);\n\t\t\tif (Array.isArray(parsedValue)) {\n\t\t\t\treturn parsedValue;\n\t\t\t}\n\t\t} catch (e) { /* Ignore */ }\n\t\treturn [];\n\t}\n\n\tprivate setEnabledAutoUpdateExtensions(enabledAutoUpdateExtensions: string[]): void {\n\t\tthis.enabledAuotUpdateExtensionsValue = JSON.stringify(enabledAutoUpdateExtensions);\n\t}\n\n\tprivate _enabledAutoUpdateExtensionsValue: string | undefined;\n\tprivate get enabledAuotUpdateExtensionsValue(): string {\n\t\tif (!this._enabledAutoUpdateExtensionsValue) {\n\t\t\tthis._enabledAutoUpdateExtensionsValue = this.getEnabledAutoUpdateExtensionsValue();\n\t\t}\n\n\t\treturn this._enabledAutoUpdateExtensionsValue;\n\t}\n\n\tprivate set enabledAuotUpdateExtensionsValue(enabledAuotUpdateExtensionsValue: string) {\n\t\tif (this.enabledAuotUpdateExtensionsValue !== enabledAuotUpdateExtensionsValue) {\n\t\t\tthis._enabledAutoUpdateExtensionsValue = enabledAuotUpdateExtensionsValue;\n\t\t\tthis.setEnabledAutoUpdateExtensionsValue(enabledAuotUpdateExtensionsValue);\n\t\t}\n\t}\n\n\tprivate getEnabledAutoUpdateExtensionsValue(): string {\n\t\treturn this.storageService.get(EXTENSIONS_AUTO_UPDATE_KEY, StorageScope.APPLICATION, '[]');\n\t}\n\n\tprivate setEnabledAutoUpdateExtensionsValue(value: string): void {\n\t\tthis.storageService.store(EXTENSIONS_AUTO_UPDATE_KEY, value, StorageScope.APPLICATION, StorageTarget.USER);\n\t}\n\n\tgetDisabledAutoUpdateExtensions(): string[] {\n\t\ttry {\n\t\t\tconst parsedValue = JSON.parse(this.disabledAutoUpdateExtensionsValue);\n\t\t\tif (Array.isArray(parsedValue)) {\n\t\t\t\treturn parsedValue;\n\t\t\t}\n\t\t} catch (e) { /* Ignore */ }\n\t\treturn [];\n\t}\n\n\tprivate setDisabledAutoUpdateExtensions(disabledAutoUpdateExtensions: string[]): void {\n\t\tthis.disabledAutoUpdateExtensionsValue = JSON.stringify(disabledAutoUpdateExtensions);\n\t}\n\n\tprivate _disabledAutoUpdateExtensionsValue: string | undefined;\n\tprivate get disabledAutoUpdateExtensionsValue(): string {\n\t\tif (!this._disabledAutoUpdateExtensionsValue) {\n\t\t\tthis._disabledAutoUpdateExtensionsValue = this.getDisabledAutoUpdateExtensionsValue();\n\t\t}\n\n\t\treturn this._disabledAutoUpdateExtensionsValue;\n\t}\n\n\tprivate set disabledAutoUpdateExtensionsValue(disabledAutoUpdateExtensionsValue: string) {\n\t\tif (this.disabledAutoUpdateExtensionsValue !== disabledAutoUpdateExtensionsValue) {\n\t\t\tthis._disabledAutoUpdateExtensionsValue = disabledAutoUpdateExtensionsValue;\n\t\t\tthis.setDisabledAutoUpdateExtensionsValue(disabledAutoUpdateExtensionsValue);\n\t\t}\n\t}\n\n\tprivate getDisabledAutoUpdateExtensionsValue(): string {\n\t\treturn this.storageService.get(EXTENSIONS_DONOT_AUTO_UPDATE_KEY, StorageScope.APPLICATION, '[]');\n\t}\n\n\tprivate setDisabledAutoUpdateExtensionsValue(value: string): void {\n\t\tthis.storageService.store(EXTENSIONS_DONOT_AUTO_UPDATE_KEY, value, StorageScope.APPLICATION, StorageTarget.USER);\n\t}\n\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,YAAY,YAAY;AACxB,SAAS,OAAO,eAAe;AAC/B,SAAS,aAAa;AACtB,SAAS,mBAAmB,UAAU,kBAAkB,+BAA+B;AACvF,SAAS,mBAAmB,2BAA2B;AACvD,SAAS,YAAY,mBAAmB,oBAAoB;AAC5D,SAAS,QAAQ,uBAAuB;AACxC,SAAS,yBAAyB;AAClC;AAAA,EACC;AAAA,EAA0B;AAAA,EAAiB;AAAA,EAAmB;AAAA,EAC9D;AAAA,EAAuB;AAAA,EAA4B;AAAA,EAAkB;AAAA,EAAmB;AAAA,EACxF;AAAA,EAA4B;AAAA,EAAgB;AAAA,EAAwB;AAAA,EAAkB;AAAA,EAA4B;AAAA,EAAsB;AAAA,EACxI;AAAA,EAAgB;AAAA,EAChB;AAAA,OACM;AACP,SAAS,sCAAsC,iBAAiB,mCAAmC,4BAA4B,sCAAsC,iBAAiB,oBAAoB,uCAAuC;AACjP,SAAS,kCAAkC,gCAAgC,mBAAmB,kBAAkB,6BAA6B;AAC7I,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AACtC,SAAS,oBAAoB;AAC7B,SAAS,WAAW;AACpB,SAAS,YAAY,gBAAgB,6BAA6B,4BAA4B,kCAAkC,8BAA8B,8BAA8B,yBAAyB,uBAAuB,4BAA4B,6BAA6B,YAAY,8BAA8B,+BAA+B;AAC9W,SAAS,gBAAgB,YAAY,oBAAoB;AACzD,SAAS,aAAa,aAAa,uBAAuB;AAC1D,SAAS,iBAAiB,+BAA+B;AACzD,SAAS,mBAAmB;AAC5B,SAAS,kBAAkB,kBAAkB,wBAAwB;AACrE,SAAS,sBAAsB,sBAAsB,gBAAgB;AACrE,YAAY,eAAe;AAC3B,SAAS,yBAAyB;AAClC,SAAS,iBAAiB,cAAc,qBAAqB;AAC7D,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB,eAAe,cAAc,oBAAoB,gBAAgB,qBAAqB,sBAAsB,uBAAuB,oCAAoC;AACpM,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,kBAAkB;AAC3B,SAAS,2CAA2C;AACpD,SAAS,0BAA0B,gCAAgC,oBAAoB;AACvF,SAAS,aAAa,0BAA0B;AAChD,SAAS,WAAW,WAAW,UAAU,mBAAmB;AAC5D,SAAS,2CAA2C;AACpD,SAAS,mBAAmB,qBAAqB,yBAAyB,aAAa,8BAA8B;AACrH,SAAS,OAAO,gBAAgB;AAChC,SAAS,iBAAiB;AAC1B,SAAS,sBAAsB;AAC/B,SAAS,6BAA6B;AACtC,SAAS,mBAAmB,sBAAsB;AAClD,SAAS,+BAA+B;AACxC,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB,qBAAqB;AAC9C,SAAS,gBAAgB,iBAAiB;AAC1C,SAAS,2BAA2B,qBAAqB;AACzD,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,uCAAuC;AAChD,SAAS,gBAAgB;AACzB,SAAS,wBAAwB,cAAc,+BAA+B;AAC9E,SAAS,qBAAqB;AAiBvB,IAAM,YAAN,MAAsC;AAAA,EAM5C,YACS,eACA,sBACQ,QACT,OACC,UACS,uBAC0B,gBACP,kBACN,YACC,aACG,gBACjC;AAXO;AACA;AACQ;AACT;AACC;AACS;AAC0B;AACP;AACN;AACC;AACG;AAAA,EAEnC;AAAA,EAnGD,OAgF6C;AAAA;AAAA;AAAA,EAErC,kBAAmC,gBAAgB;AAAA,EAElD,wBAAwB,oBAAI,IAAiB;AAAA,EAiBrD,IAAI,oBAAoD;AACvD,QAAI,KAAK,uBAAuB;AAC/B,aAAO,KAAK,sBAAsB;AAAA,IACnC;AACA,QAAI,KAAK,OAAO,mBAAmB;AAClC,aAAO;AAAA,QACN,MAAM;AAAA,QACN,YAAY,KAAK,MAAM;AAAA,QACvB,UAAU,KAAK,MAAM;AAAA,QACrB,UAAU,KAAK,MAAM;AAAA,QACrB,cAAc,KAAK,MAAM;AAAA,QACzB,WAAW,KAAK,MAAM;AAAA,MACvB;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,IAAI,UAAyC;AAC5C,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,QAAQ,SAAwC;AACnD,SAAK,WAAW;AAChB,SAAK,sBAAsB,MAAM;AAAA,EAClC;AAAA,EAEA,IAAI,OAAsB;AACzB,WAAO,KAAK,QAAQ,KAAK,MAAM,OAAO,cAAc;AAAA,EACrD;AAAA,EAEA,IAAI,YAAqB;AACxB,WAAO,KAAK,QAAQ,KAAK,MAAM,YAAY;AAAA,EAC5C;AAAA,EAEA,IAAI,oBAA6B;AAChC,QAAI,KAAK,OAAO;AACf,aAAO,KAAK,MAAM;AAAA,IACnB;AACA,QAAI,KAAK,uBAAuB;AAC/B,aAAO,KAAK,sBAAsB;AAAA,IACnC;AACA,WAAO;AAAA,EACR;AAAA,EAEA,IAAI,OAAe;AAClB,QAAI,KAAK,SAAS;AACjB,aAAO,KAAK,QAAQ;AAAA,IACrB;AACA,WAAO,KAAK,+BAA+B,GAAG,QAAQ;AAAA,EACvD;AAAA,EAEA,IAAI,cAAsB;AACzB,QAAI,KAAK,SAAS;AACjB,aAAO,KAAK,QAAQ,eAAe,KAAK,QAAQ;AAAA,IACjD;AAEA,WAAO,KAAK,+BAA+B,GAAG,eAAe,KAAK;AAAA,EACnE;AAAA,EAEA,IAAI,aAAmC;AACtC,QAAI,KAAK,SAAS;AACjB,aAAO,KAAK,QAAQ;AAAA,IACrB;AACA,QAAI,KAAK,mBAAmB;AAC3B,aAAO,KAAK,kBAAkB;AAAA,IAC/B;AACA,WAAO,KAAK,MAAO;AAAA,EACpB;AAAA,EAEA,IAAI,OAA2B;AAC9B,WAAO,KAAK,UAAU,KAAK,QAAQ,WAAW,OAAO,KAAK,OAAO,WAAW;AAAA,EAC7E;AAAA,EAEA,IAAI,YAAoB;AACvB,QAAI,KAAK,SAAS;AACjB,aAAO,KAAK,QAAQ;AAAA,IACrB;AACA,WAAO,KAAK,+BAA+B,GAAG,aAAa;AAAA,EAC5D;AAAA,EAEA,IAAI,uBAA+B;AAClC,QAAI,KAAK,SAAS;AACjB,aAAO,KAAK,QAAQ,wBAAwB,KAAK,QAAQ;AAAA,IAC1D;AAEA,QAAI,KAAK,OAAO,sBAAsB;AACrC,aAAO,KAAK,MAAM;AAAA,IACnB;AAEA,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,eAAgC;AACnC,QAAI,CAAC,KAAK,eAAe,qBAAqB,CAAC,KAAK,SAAS;AAC5D,aAAO;AAAA,IACR;AAEA,WAAO,UAAU,SAAS,IAAI,MAAM,KAAK,eAAe,kBAAkB,YAAY,GAAG,KAAK,SAAS;AAAA,EACxG;AAAA,EAEA,IAAI,kBAAmE;AACtE,WAAO,KAAK,SAAS;AAAA,EACtB;AAAA,EAEA,IAAI,uBAAwC;AAC3C,WAAO,KAAK,SAAS,uBAAuB,IAAI,MAAM,KAAK,QAAQ,oBAAoB,IAAI;AAAA,EAC5F;AAAA,EAEA,IAAI,UAAkB;AACrB,WAAO,KAAK,QAAQ,KAAK,MAAM,SAAS,UAAU,KAAK;AAAA,EACxD;AAAA,EAEA,IAAI,SAAkB;AACrB,WAAO,CAAC,CAAC,KAAK,OAAO;AAAA,EACtB;AAAA,EAEA,IAAI,gBAAwB;AAC3B,WAAO,KAAK,UAAU,KAAK,QAAQ,UAAU,KAAK,+BAA+B,GAAG,WAAW;AAAA,EAChG;AAAA,EAEA,IAAI,cAAsB;AACzB,WAAO,KAAK,UAAU,KAAK,QAAQ,cAAc,KAAK,+BAA+B,GAAG,eAAe;AAAA,EACxG;AAAA,EAEA,IAAI,MAA0B;AAC7B,QAAI,CAAC,KAAK,eAAe,qBAAqB,CAAC,KAAK,SAAS;AAC5D,aAAO;AAAA,IACR;AAEA,WAAO,GAAG,KAAK,eAAe,kBAAkB,OAAO,aAAa,KAAK,SAAS,IAAI,KAAK,IAAI;AAAA,EAChG;AAAA,EAEA,IAAI,UAAkB;AACrB,WAAO,KAAK,kBAAkB,KAAK,4BAA4B,KAAK,gBAAgB,KAAK;AAAA,EAC1F;AAAA,EAEA,IAAI,kBAA0B;AAC7B,WAAO,KAAK,0BAA0B,KAAK,4BAA4B,KAAK,gBAAgB,KAAK;AAAA,EAClG;AAAA,EAEA,IAAY,eAA8B;AACzC,QAAI,KAAK,SAAS,KAAK,MAAM,SAAS,MAAM;AAC3C,aAAO,WAAW,gBAAgB,UAAU,SAAS,KAAK,MAAM,UAAU,KAAK,MAAM,SAAS,IAAI,CAAC,EAAE,SAAS,IAAI;AAAA,IACnH;AACA,WAAO;AAAA,EACR;AAAA,EAEA,IAAY,2BAA0C;AACrD,QAAI,KAAK,mBAAmB,SAAS,MAAM;AAC1C,aAAO,WAAW,gBAAgB,UAAU,SAAS,KAAK,kBAAkB,UAAU,KAAK,kBAAkB,SAAS,IAAI,CAAC,EAAE,SAAS,IAAI;AAAA,IAC3I;AACA,WAAO;AAAA,EACR;AAAA,EAEA,IAAY,iBAAgC;AAC3C,WAAO,KAAK,SAAS,OAAO,OAAO,KAAK,QAAQ,OAAO,KAAK,MAAM;AAAA,EACnE;AAAA,EAEA,IAAY,yBAAwC;AACnD,WAAO,KAAK,SAAS,OAAO,OAAO,KAAK,QAAQ,OAAO,KAAK,cAAc;AAAA,EAC3E;AAAA,EAEA,IAAY,iBAAyB;AACpC,QAAI,KAAK,SAAS,cAAc,UAAU,KAAK,OAAO;AACrD,UAAI,KAAK,MAAM,YAAY,KAAK,MAAM,SAAS,aAAa;AAC3D,YAAI,MAAM,QAAQ,KAAK,MAAM,SAAS,YAAY,MAAM,KAAK,KAAK,MAAM,SAAS,YAAY,OAAO,QAAQ;AAC3G,iBAAO,WAAW,aAAa,8DAA8D,EAAE,SAAS,IAAI;AAAA,QAC7G;AACA,YAAI,MAAM,QAAQ,KAAK,MAAM,SAAS,YAAY,QAAQ,KAAK,KAAK,MAAM,SAAS,YAAY,SAAS,QAAQ;AAC/G,iBAAO,WAAW,aAAa,iEAAiE,EAAE,SAAS,IAAI;AAAA,QAChH;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,IAAI,aAAiC;AACpC,WAAO,KAAK,WAAW,KAAK,QAAQ,OAAO,aAAa,KAAK,QAAQ,OAAO,WAAW,MAAM;AAAA,EAC9F;AAAA,EAEA,IAAI,aAAiC;AACpC,WAAO,KAAK,WAAW,KAAK,QAAQ,OAAO,UAAU,KAAK,QAAQ,OAAO,QAAQ,MAAM;AAAA,EACxF;AAAA,EAEA,IAAI,aAAiC;AACpC,WAAO,KAAK,WAAW,KAAK,QAAQ,cAAc,KAAK,QAAQ,cAAc;AAAA,EAC9E;AAAA,EAEA,IAAI,QAAwB;AAC3B,WAAO,KAAK,cAAc,IAAI;AAAA,EAC/B;AAAA,EAEO,cAAuB;AAAA,EACvB;AAAA,EAEP,IAAI,eAAmC;AACtC,WAAO,KAAK,UAAU,KAAK,QAAQ,eAAe;AAAA,EACnD;AAAA,EAEA,IAAI,SAA6B;AAChC,WAAO,KAAK,UAAU,KAAK,QAAQ,SAAS;AAAA,EAC7C;AAAA,EAEA,IAAI,cAAkC;AACrC,WAAO,KAAK,UAAU,KAAK,QAAQ,cAAc;AAAA,EAClD;AAAA,EAEA,IAAI,WAAoB;AACvB,QAAI;AACH,UAAI,CAAC,KAAK,WAAW,CAAC,KAAK,OAAO;AACjC,eAAO;AAAA,MACR;AAEA,UAAI,KAAK,SAAS,cAAc,UAAU,KAAK,eAAe,YAAY,UAAU;AACnF,eAAO;AAAA,MACR;AACA,UAAI,CAAC,KAAK,MAAM,cAAc,KAAK,QAAQ,WAAW,qBAAqB;AAC1E,eAAO;AAAA,MACR;AACA,UAAI,OAAO,GAAG,KAAK,eAAe,KAAK,OAAO,GAAG;AAChD,eAAO;AAAA,MACR;AACA,UAAI,KAAK,wBAAwB;AAChC,eAAO;AAAA,MACR;AAAA,IACD,SAAS,OAAO;AAAA,IAEhB;AACA,WAAO;AAAA,EACR;AAAA,EAEA,IAAI,yBAAkC;AACrC,WAAO,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,KAAK,WAC1B,CAAC,CAAC,eAAe,WAAW,eAAe,GAAG,EAAE,SAAS,KAAK,MAAM,cAAc,KAClF,KAAK,QAAQ,WAAW,mBAAmB,eAAe,OAC1D,KAAK,MAAM,mBAAmB,KAAK,QAAQ,WAAW,kBACtD,OAAO,GAAG,KAAK,eAAe,KAAK,OAAO;AAAA,EAC/C;AAAA,EAEA,IAAI,eAAkD;AACrD,WAAO,KAAK,qBAAqB,IAAI;AAAA,EACtC;AAAA,EAEA,IAAI,gBAAqB;AACxB,UAAM,EAAE,OAAO,QAAQ,IAAI;AAE3B,QAAI,SAAS;AACZ,aAAO,iCAAiC,OAAO;AAAA,IAChD,WAAW,OAAO;AACjB,aAAO,+BAA+B,KAAK;AAAA,IAC5C,OAAO;AACN,aAAO,CAAC;AAAA,IACT;AAAA,EACD;AAAA,EAEA,IAAI,UAAmB;AACtB,WAAO,KAAK,OAAO,SAAS,WAAW,KAAK,SAAS,WAAW;AAAA,EACjE;AAAA,EAEA,IAAI,aAAsB;AACzB,WAAO,CAAC,CAAC,KAAK,OAAO;AAAA,EACtB;AAAA,EAEA,IAAI,sBAA+B;AAClC,QAAI,KAAK,OAAO;AACf,aAAO,KAAK,MAAM;AAAA,IACnB;AACA,WAAO,CAAC,CAAC,KAAK,SAAS,WAAW;AAAA,EACnC;AAAA,EAEQ;AAAA,EACR,IAAI,uBAAgC;AACnC,WAAO,CAAC,CAAC,KAAK,SAAS,wBAAwB,CAAC,CAAC,KAAK,OAAO,wBAAwB,CAAC,CAAC,KAAK;AAAA,EAC7F;AAAA,EAEA,IAAI,oBAA6B;AAChC,WAAO,CAAC,CAAC,KAAK,qBAAqB,CAAC,CAAC,KAAK,SAAS;AAAA,EACpD;AAAA,EAEQ,WAAwC;AAC/C,WAAO,KAAK,SAAS,CAAC,KAAK,WAAW,KAAK,QAAQ;AAAA,EACpD;AAAA,EAEA,MAAM,YAAY,OAA8D;AAC/E,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,OAAO;AACV,aAAO,MAAM;AAAA,IACd;AAEA,QAAI,KAAK,SAAS;AACjB,aAAO,KAAK,mBAAmB,KAAK;AAAA,IACrC;AAEA,QAAI,KAAK,mBAAmB;AAC3B,aAAO,KAAK,kBAAkB;AAAA,IAC/B;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,mBAAmB,QAA2B,kBAAkB,MAA0C;AAC/G,QAAI,KAAK,SAAS;AACjB,UAAI,QAAQ,KAAK,sBAAsB,IAAI,UAAU;AACrD,UAAI,CAAC,OAAO;AACX,YAAI,KAAK,QAAQ,OAAO,UAAU;AACjC,eAAK,sBAAsB,IAAI,YAAY,QAAQ,KAAK,eAAe,YAAY,KAAK,SAAS,KAAK,EACpG,MAAM,OAAK;AACX,iBAAK,sBAAsB,OAAO,UAAU;AAC5C,kBAAM;AAAA,UACP,CAAC,CAAC;AAAA,QACJ,OAAO;AACN,eAAK,WAAW,MAAM,IAAI,SAAS,yBAAyB,uBAAuB,GAAG,KAAK,WAAW,EAAE;AAAA,QACzG;AAAA,MACD;AACA,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEA,YAAqB;AACpB,QAAI,KAAK,SAAS,KAAK,MAAM,WAAW;AACvC,aAAO;AAAA,IACR;AAEA,QAAI,KAAK,WAAW,KAAK,QAAQ,OAAO,QAAQ;AAC/C,aAAO;AAAA,IACR;AAEA,QAAI,KAAK,mBAAmB,WAAW;AACtC,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,SAAS,cAAc;AAAA,EACpC;AAAA,EAEA,MAAM,UAAU,OAA2C;AAC1D,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,OAAO,WAAW;AACrB,YAAM,UAAU,MAAM,KAAK,YAAY,SAAS,MAAM,SAAS;AAC/D,aAAO,QAAQ,MAAM,SAAS;AAAA,IAC/B;AAEA,QAAI,KAAK,SAAS;AACjB,UAAI,KAAK,QAAQ,OAAO,QAAQ;AAC/B,eAAO,KAAK,eAAe,UAAU,KAAK,SAAS,KAAK;AAAA,MACzD;AACA,WAAK,iBAAiB,UAAU,6BAA6B,KAAK,aAAa;AAAA,IAChF;AAEA,QAAI,KAAK,SAAS,cAAc,QAAQ;AACvC,aAAO,QAAQ,QAAQ,KAAK,KAAK,eAAe,KAAK,IAAI;AAAA;AAAA;AAAA,EAG1D,KAAK,WAAW;AAAA,CACjB;AAAA,IACC;AAEA,QAAI,KAAK,mBAAmB,WAAW;AACtC,YAAM,UAAU,MAAM,KAAK,YAAY,SAAS,KAAK,mBAAmB,SAAS;AACjF,aAAO,QAAQ,MAAM,SAAS;AAAA,IAC/B;AAEA,WAAO,QAAQ,OAAO,IAAI,MAAM,eAAe,CAAC;AAAA,EACjD;AAAA,EAEA,eAAwB;AACvB,QAAI,KAAK,SAAS,KAAK,MAAM,cAAc;AAC1C,aAAO;AAAA,IACR;AAEA,QAAI,KAAK,WAAW,KAAK,QAAQ,OAAO,WAAW;AAClD,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,SAAS,cAAc;AAAA,EACpC;AAAA,EAEA,MAAM,aAAa,OAA2C;AAC7D,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,OAAO,cAAc;AACxB,YAAM,UAAU,MAAM,KAAK,YAAY,SAAS,MAAM,YAAY;AAClE,aAAO,QAAQ,MAAM,SAAS;AAAA,IAC/B;AAEA,QAAI,KAAK,SAAS,OAAO,WAAW;AACnC,aAAO,KAAK,eAAe,aAAa,KAAK,SAAS,KAAK;AAAA,IAC5D;AAEA,QAAI,KAAK,SAAS,cAAc,QAAQ;AACvC,aAAO,QAAQ,QAAQ,oDAAoD,+BAA+B,2CAA2C;AAAA,IACtJ;AAEA,WAAO,QAAQ,OAAO,IAAI,MAAM,eAAe,CAAC;AAAA,EACjD;AAAA,EAEA,IAAI,aAAgC;AACnC,UAAM,EAAE,OAAO,SAAS,kBAAkB,IAAI;AAC9C,QAAI,SAAS,MAAM,SAAS,cAAc,CAAC,KAAK,UAAU;AACzD,aAAO,MAAM,SAAS;AAAA,IACvB;AACA,QAAI,SAAS;AACZ,aAAO,QAAQ;AAAA,IAChB;AACA,QAAI,mBAAmB;AACtB,aAAO,kBAAkB,SAAS,cAAc,CAAC;AAAA,IAClD;AACA,WAAO,CAAC;AAAA,EACT;AAAA,EAEA,IAAI,OAA0B;AAC7B,UAAM,EAAE,QAAQ,IAAI;AACpB,QAAI,SAAS;AACZ,aAAO,QAAQ,KAAK,OAAO,SAAO,CAAC,IAAI,WAAW,GAAG,CAAC;AAAA,IACvD;AACA,WAAO,CAAC;AAAA,EACT;AAAA,EAEA,IAAI,eAAyB;AAC5B,UAAM,EAAE,OAAO,SAAS,kBAAkB,IAAI;AAC9C,QAAI,SAAS,MAAM,SAAS,yBAAyB,CAAC,KAAK,UAAU;AACpE,aAAO,MAAM,SAAS;AAAA,IACvB;AACA,QAAI,SAAS;AACZ,aAAO,QAAQ,WAAW,gBAAgB,CAAC;AAAA,IAC5C;AACA,QAAI,mBAAmB;AACtB,aAAO,kBAAkB,SAAS,yBAAyB,CAAC;AAAA,IAC7D;AACA,WAAO,CAAC;AAAA,EACT;AAAA,EAEA,IAAI,gBAA0B;AAC7B,UAAM,EAAE,OAAO,SAAS,kBAAkB,IAAI;AAC9C,QAAI,SAAS,MAAM,SAAS,iBAAiB,CAAC,KAAK,UAAU;AAC5D,aAAO,MAAM,SAAS;AAAA,IACvB;AACA,QAAI,SAAS;AACZ,aAAO,QAAQ,WAAW,iBAAiB,CAAC;AAAA,IAC7C;AACA,QAAI,mBAAmB;AACtB,aAAO,kBAAkB,SAAS,iBAAiB,CAAC;AAAA,IACrD;AACA,WAAO,CAAC;AAAA,EACT;AAAA,EAEA,6BAA6B,2BAA6D;AACzF,SAAK,cAAc,0BAA0B,UAAU,KAAK,gBAAc,kBAAkB,KAAK,YAAY,UAAU,CAAC;AACxH,SAAK,kBAAkB,0BAA0B,aAAa,0BAA0B,WAAW,KAAK,WAAW,GAAG,YAAY,CAAC,IAAI;AACvI,SAAK,kCAAkC,2BAA2B,iCAAiC,SAAS,KAAK,WAAW,GAAG,YAAY,CAAC;AAAA,EAC7I;AAAA,EAEQ,iCAA4D;AACnE,QAAI,KAAK,OAAO;AACf,aAAO,KAAK,MAAM;AAAA,IACnB;AACA,QAAI,KAAK,mBAAmB;AAC3B,aAAO,KAAK,kBAAkB;AAAA,IAC/B;AACA,WAAO;AAAA,EACR;AACD;AAjea,YAAN;AAAA,EAaJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAjBU;AAmeb,MAAM,6BAA6B;AACnC,MAAM,mCAAmC;AAEzC,IAAM,aAAN,cAAyB,WAAW;AAAA,EAYnC,YACU,QACQ,eACA,sBACA,mBAC0B,gBACY,4BACA,qCACb,wBACN,kBACI,sBACvC;AACD,UAAM;AAXG;AACQ;AACA;AACA;AAC0B;AACY;AACA;AACb;AACN;AACI;AAGxC,SAAK,UAAU,OAAO,2BAA2B,mBAAmB,OAAK,KAAK,mBAAmB,CAAC,CAAC,CAAC;AACpG,SAAK,UAAU,OAAO,2BAA2B,uBAAuB,OAAK,KAAK,uBAAuB,CAAC,CAAC,CAAC;AAC5G,SAAK,UAAU,OAAO,2BAA2B,qBAAqB,OAAK,KAAK,qBAAqB,EAAE,UAAU,CAAC,CAAC;AACnH,SAAK,UAAU,OAAO,2BAA2B,wBAAwB,OAAK,KAAK,wBAAwB,CAAC,CAAC,CAAC;AAC9G,SAAK,UAAU,OAAO,2BAA2B,6BAA6B,OAAK,KAAK,6BAA6B,EAAE,KAAK,CAAC,CAAC;AAC9H,SAAK,UAAU,OAAO,2BAA2B,mBAAmB,MAAM,KAAK,MAAM,CAAC,CAAC;AACvF,SAAK,UAAU,2BAA2B,oBAAoB,OAAK,KAAK,oBAAoB,CAAC,CAAC,CAAC;AAC/F,SAAK,UAAU,MAAM,IAAI,KAAK,UAAU,KAAK,OAAO,EAAE,MAAM,KAAK,SAAS,MAAS,CAAC;AACpF,QAAI,KAAK,mBAAmB;AAC3B,WAAK,UAAU,KAAK,oCAAoC,mBAAmB,OAAK;AAC/E,YAAI,EAAE,iBAAiB;AACtB,eAAK,mBAAmB,CAAC;AAAA,QAC1B;AAAA,MACD,CAAC,CAAC;AACF,WAAK,UAAU,KAAK,oCAAoC,uBAAuB,OAAK;AACnF,cAAM,SAAS,EAAE,OAAO,CAAAA,OAAKA,GAAE,eAAe;AAC9C,YAAI,OAAO,QAAQ;AAClB,eAAK,uBAAuB,MAAM;AAAA,QACnC;AAAA,MACD,CAAC,CAAC;AACF,WAAK,UAAU,KAAK,oCAAoC,qBAAqB,OAAK;AACjF,YAAI,EAAE,iBAAiB;AACtB,eAAK,qBAAqB,EAAE,UAAU;AAAA,QACvC;AAAA,MACD,CAAC,CAAC;AACF,WAAK,UAAU,KAAK,oCAAoC,wBAAwB,OAAK;AACpF,YAAI,EAAE,iBAAiB;AACtB,eAAK,wBAAwB,CAAC;AAAA,QAC/B;AAAA,MACD,CAAC,CAAC;AAAA,IACH;AAAA,EACD;AAAA,EA9mBD,OAsjBoC;AAAA;AAAA;AAAA,EAElB,YAAY,KAAK,UAAU,IAAI,QAA4E,CAAC;AAAA,EAC7H,IAAI,WAAW;AAAE,WAAO,KAAK,UAAU;AAAA,EAAO;AAAA,EAE7B,WAAW,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAC9D,IAAI,UAAU;AAAE,WAAO,KAAK,SAAS;AAAA,EAAO;AAAA,EAEpC,aAA0B,CAAC;AAAA,EAC3B,eAA4B,CAAC;AAAA,EAC7B,YAAyB,CAAC;AAAA,EAgD1B;AAAA,EACR,IAAI,QAAsB;AACzB,QAAI,CAAC,KAAK,QAAQ;AACjB,WAAK,SAAS,CAAC;AACf,iBAAW,aAAa,KAAK,WAAW;AACvC,aAAK,OAAO,KAAK,SAAS;AAAA,MAC3B;AACA,iBAAW,aAAa,KAAK,YAAY;AACxC,YAAI,CAAC,KAAK,UAAU,KAAK,eAAa,kBAAkB,UAAU,YAAY,UAAU,UAAU,CAAC,GAAG;AACrG,eAAK,OAAO,KAAK,SAAS;AAAA,QAC3B;AAAA,MACD;AAAA,IACD;AACA,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,MAAM,eAAe,gBAAwD;AAC5E,UAAM,KAAK,yBAAyB,cAAc;AAClD,SAAK,UAAU,KAAK,MAAS;AAC7B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,MAAM,mCAAmC,mBAAwC,gBAAgD;AAChI,UAAM,aAAa,MAAM,KAAK,oDAAoD,mBAAmB,cAAc;AACnH,eAAW,CAAC,WAAW,OAAO,KAAK,YAAY;AAE9C,UAAI,UAAU,SAAS,CAAC,UAAU,MAAM,WAAW,MAAM;AACxD,kBAAU,QAAQ,MAAM,KAAK,eAAe,UAAU,OAAO,OAAO;AAAA,MACrE;AACA,UAAI,CAAC,UAAU,WAAW,UAAU,QAAQ,YAAY,QAAQ,WAAW,UAAU,QAAQ,WAAW,mBAAmB,QAAQ,WAAW,gBAAgB;AAC7J,kBAAU,UAAU;AACpB,aAAK,UAAU,KAAK,EAAE,UAAU,CAAC;AAAA,MAClC;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,oDAAoD,mBAAwC,gBAA4E;AACrL,UAAM,mBAAmB,KAAK,0CAA0C,iBAAiB;AACzF,UAAM,iBAAiB,MAAM,KAAK,OAAO,2BAA2B,kBAAkB;AACtF,UAAM,8BAAmD,CAAC;AAC1D,UAAM,qCAAuD,CAAC;AAC9D,UAAM,QAAQ,WAAW,iBAAiB,IAAI,OAAO,CAAC,WAAW,OAAO,MAAM;AAC7E,UAAI,UAAU,OAAO;AACpB,YAAI,MAAM,KAAK,eAAe,sBAAsB,SAAS,UAAU,MAAM,YAAY,gBAAgB,cAAc,GAAG;AACzH,sCAA4B,KAAK,OAAO;AAAA,QACzC,OAAO;AACN,6CAAmC,KAAK,EAAE,GAAG,UAAU,MAAM,YAAY,YAAY,UAAU,MAAM,WAAW,CAAC;AAAA,QAClH;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,QAAI,mCAAmC,QAAQ;AAC9C,YAAM,SAAS,MAAM,KAAK,eAAe,cAAc,oCAAoC,EAAE,gBAAgB,YAAY,MAAM,kBAAkB,MAAM,eAAe,GAAG,kBAAkB,IAAI;AAC/L,kCAA4B,KAAK,GAAG,MAAM;AAAA,IAC3C;AACA,WAAO,KAAK,0CAA0C,2BAA2B;AAAA,EAClF;AAAA,EAEQ,0CAA0C,mBAA0E;AAC3H,UAAM,mBAAqD,CAAC;AAC5D,UAAM,SAAS,oBAAI,IAA+B,GAAG,OAAO,oBAAI,IAA+B;AAC/F,eAAW,WAAW,mBAAmB;AACxC,aAAO,IAAI,QAAQ,WAAW,MAAM,OAAO;AAC3C,WAAK,IAAI,QAAQ,WAAW,GAAG,YAAY,GAAG,OAAO;AAAA,IACtD;AACA,eAAW,aAAa,KAAK,WAAW;AACvC,UAAI,UAAU,MAAM;AACnB,cAAM,UAAU,OAAO,IAAI,UAAU,IAAI;AACzC,YAAI,SAAS;AACZ,2BAAiB,KAAK,CAAC,WAAW,OAAO,CAAC;AAC1C;AAAA,QACD;AAAA,MACD;AACA,UAAI,UAAU,OAAO,WAAW,YAAY;AAC3C,cAAM,UAAU,KAAK,IAAI,UAAU,WAAW,GAAG,YAAY,CAAC;AAC9D,YAAI,SAAS;AACZ,2BAAiB,KAAK,CAAC,WAAW,OAAO,CAAC;AAAA,QAC3C;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAc,eAAe,gBAAiC,SAAsD;AACnH,QAAI,sBAAsB;AAC1B,QAAI,eAAe,SAAS,YAAY,QAAQ,SAAS;AAKxD,WAAK,iBAAiB,WAAoE,+BAA+B;AACzH,YAAM,2BAA0D,MAAM,KAAK,eAAe,cAAc,CAAC,EAAE,GAAG,eAAe,YAAY,SAAS,eAAe,SAAS,QAAQ,CAAC,GAAG,kBAAkB,IAAI,GAAG,CAAC;AAChN,4BAAsB,CAAC,CAAC,yBAAyB,YAAY;AAAA,IAC9D;AACA,WAAO,KAAK,OAAO,2BAA2B,eAAe,gBAAgB,EAAE,IAAI,QAAQ,WAAW,MAAM,sBAAsB,QAAQ,sBAAsB,aAAa,QAAQ,aAAa,oBAAoB,GAAG,KAAK,uBAAuB,eAAe,kBAAkB;AAAA,EACvR;AAAA,EAEA,WAAW,kBAAuD;AACjE,WAAO,KAAK,OAAO,2BAA2B,WAAW,gBAAgB;AAAA,EAC1E;AAAA,EAEQ,mBAAmB,OAAoC;AAC9D,UAAM,EAAE,OAAO,IAAI;AACnB,QAAI,UAAU,CAAC,IAAI,MAAM,MAAM,GAAG;AACjC,YAAM,YAAY,KAAK,UAAU,KAAK,OAAK,kBAAkB,EAAE,YAAY,OAAO,UAAU,CAAC,KACzF,KAAK,qBAAqB,eAAe,WAAW,KAAK,eAAe,KAAK,sBAAsB,KAAK,QAAQ,QAAW,QAAQ,MAAS;AAChJ,WAAK,WAAW,KAAK,SAAS;AAC9B,WAAK,UAAU,KAAK,EAAE,UAAU,CAAC;AAAA,IAClC;AAAA,EACD;AAAA,EAEA,MAAc,yBAAyB,gBAAiD;AACvF,UAAM,4BAA4B,MAAM,KAAK,OAAO,2BAA2B,6BAA6B;AAC5G,UAAM,MAAM,MAAM,KAAK,OAAO,2BAA2B,aAAa,QAAW,QAAW,cAAc;AAC1G,QAAI,KAAK,mBAAmB;AAC3B,UAAI,KAAK,GAAG,MAAM,KAAK,oCAAoC,gCAAgC,IAAI,CAAC;AAAA,IACjG;AAGA,UAAM,YAAY,iBAAiB,KAAK,OAAK,EAAE,UAAU,EAAE,OAAO,CAAC,QAAQ,eAAe;AACzF,UAAI,WAAW,WAAW,GAAG;AAC5B,eAAO,KAAK,WAAW,CAAC,CAAC;AAAA,MAC1B,OAAO;AACN,YAAI,oBACH,eACA;AACD,mBAAWC,cAAa,YAAY;AACnC,cAAIA,WAAU,mBAAmB;AAChC,iCAAqBA;AAAA,UACtB,WAAWA,WAAU,SAAS,cAAc,MAAM;AACjD,4BAAgBA;AAAA,UACjB,OAAO;AACN,8BAAkBA;AAAA,UACnB;AAAA,QACD;AACA,cAAM,YAAY,sBAAsB,iBAAiB;AACzD,YAAI,WAAW;AACd,iBAAO,KAAK,SAAS;AAAA,QACtB;AAAA,MACD;AACA,aAAO;AAAA,IACR,GAAG,CAAC,CAAC;AAEL,UAAM,OAAO,MAAM,KAAK,WAAW,OAAK,EAAE,QAAQ,EAAE,MAAM,WAAW,KAAK,EAAE,WAAW,EAAE;AACzF,SAAK,YAAY,UAAU,IAAI,WAAS;AACvC,YAAM,YAAY,KAAK,MAAM,WAAW,EAAE,KAAK,KAAK,qBAAqB,eAAe,WAAW,KAAK,eAAe,KAAK,sBAAsB,KAAK,QAAQ,OAAO,QAAW,MAAS;AAC1L,gBAAU,QAAQ;AAClB,gBAAU,kBAAkB,KAAK,2BAA2B,mBAAmB,KAAK;AACpF,gBAAU,6BAA6B,yBAAyB;AAChE,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AAAA,EAEA,MAAc,QAAuB;AACpC,SAAK,YAAY,CAAC;AAClB,SAAK,aAAa,CAAC;AACnB,SAAK,eAAe,CAAC;AACrB,UAAM,KAAK,yBAAyB;AACpC,SAAK,SAAS,KAAK;AAAA,EACpB;AAAA,EAEA,MAAc,uBAAuB,SAA2D;AAC/F,eAAW,SAAS,SAAS;AAC5B,YAAM,EAAE,OAAO,OAAO,IAAI;AAC1B,YAAM,UAAU,UAAU,CAAC,IAAI,MAAM,MAAM,IAAI,SAAS;AACxD,YAAM,WAAW,UAAU,IAAI,MAAM,MAAM,IAAI,SAAS;AACxD,YAAM,sBAAsB,UAAU,KAAK,WAAW,OAAO,OAAK,kBAAkB,EAAE,YAAY,QAAQ,UAAU,CAAC,EAAE,CAAC,IAAI;AAC5H,WAAK,aAAa,sBAAsB,KAAK,WAAW,OAAO,OAAK,MAAM,mBAAmB,IAAI,KAAK;AAEtG,UAAI,YAAmC,sBAAsB,sBACzD,YAAY,QAAS,KAAK,qBAAqB,eAAe,WAAW,KAAK,eAAe,KAAK,sBAAsB,KAAK,QAAQ,OAAO,QAAW,MAAS,IAChK;AACJ,UAAI,WAAW;AACd,YAAI,OAAO;AACV,gBAAM,YAAY,KAAK,UAAU,OAAO,OAAK,kBAAkB,EAAE,YAAY,UAAW,UAAU,CAAC,EAAE,CAAC;AACtG,cAAI,WAAW;AACd,wBAAY;AAAA,UACb,OAAO;AACN,iBAAK,UAAU,KAAK,SAAS;AAAA,UAC9B;AACA,oBAAU,QAAQ;AAClB,cAAI,CAAC,UAAU,SAAS;AACvB,sBAAU,UAAU;AAAA,UACrB;AACA,oBAAU,6BAA6B,MAAM,KAAK,OAAO,2BAA2B,6BAA6B,CAAC;AAClH,oBAAU,kBAAkB,KAAK,2BAA2B,mBAAmB,KAAK;AAAA,QACrF;AAAA,MACD;AACA,WAAK,UAAU,KAAK,CAAC,SAAS,CAAC,YAAY,SAAY,EAAE,WAAW,WAAW,MAAM,UAAU,CAAC;AAChG,UAAI,aAAa,UAAU,SAAS,CAAC,UAAU,WAAW,UAAU,MAAM,WAAW,YAAY;AAChG,cAAM,KAAK,kCAAkC,SAAS;AAAA,MACvD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,6BAA6B,OAAuC;AACjF,UAAM,YAAY,KAAK,UAAU,KAAK,OAAK,kBAAkB,EAAE,YAAY,MAAM,UAAU,CAAC;AAC5F,QAAI,WAAW,OAAO;AACrB,YAAM,aAAa,UAAU,MAAM,WAAW,MAAM,UAChD,UAAU,MAAM,eAAe,MAAM;AACzC,gBAAU,QAAQ;AAClB,UAAI,YAAY;AACf,aAAK,UAAU,KAAK,EAAE,UAAU,CAAC;AAAA,MAClC;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,kCAAkC,WAAqC;AACpF,QAAI,CAAC,KAAK,eAAe,UAAU,GAAG;AACrC;AAAA,IACD;AAKA,SAAK,iBAAiB,WAAoE,wCAAwC;AAClI,UAAM,CAAC,UAAU,IAAI,MAAM,KAAK,eAAe,cAAc,CAAC,EAAE,GAAG,UAAU,YAAY,YAAY,UAAU,OAAO,WAAW,CAAC,GAAG,EAAE,YAAY,MAAM,gBAAgB,MAAM,KAAK,OAAO,2BAA2B,kBAAkB,EAAE,GAAG,kBAAkB,IAAI;AACnQ,QAAI,YAAY;AACf,gBAAU,UAAU;AACpB,WAAK,UAAU,KAAK,EAAE,UAAU,CAAC;AAAA,IAClC;AAAA,EACD;AAAA,EAEQ,qBAAqB,YAAwC;AACpE,UAAM,YAAY,KAAK,UAAU,OAAO,OAAK,kBAAkB,EAAE,YAAY,UAAU,CAAC,EAAE,CAAC;AAC3F,QAAI,WAAW;AACd,YAAM,eAAe,KAAK,aAAa,OAAO,OAAK,kBAAkB,EAAE,YAAY,UAAU,CAAC,EAAE,CAAC,KAAK;AACtG,WAAK,eAAe,CAAC,cAAc,GAAG,KAAK,aAAa,OAAO,OAAK,CAAC,kBAAkB,EAAE,YAAY,UAAU,CAAC,CAAC;AACjH,WAAK,UAAU,KAAK,eAAe,EAAE,WAAW,aAAa,IAAI,MAAS;AAAA,IAC3E;AAAA,EACD;AAAA,EAEQ,wBAAwB,EAAE,YAAY,MAAM,GAAqC;AACxF,UAAM,cAAc,KAAK,aAAa,KAAK,OAAK,kBAAkB,EAAE,YAAY,UAAU,CAAC,KAAK,KAAK,UAAU,KAAK,OAAK,kBAAkB,EAAE,YAAY,UAAU,CAAC;AACpK,SAAK,eAAe,KAAK,aAAa,OAAO,OAAK,CAAC,kBAAkB,EAAE,YAAY,UAAU,CAAC;AAC9F,QAAI,CAAC,OAAO;AACX,WAAK,YAAY,KAAK,UAAU,OAAO,OAAK,CAAC,kBAAkB,EAAE,YAAY,UAAU,CAAC;AAAA,IACzF;AACA,QAAI,aAAa;AAChB,WAAK,UAAU,KAAK,EAAE,WAAW,YAAY,CAAC;AAAA,IAC/C;AAAA,EACD;AAAA,EAEQ,oBAAoB,oBAAmD;AAC9E,UAAM,aAAa,KAAK,MAAM,OAAO,OAAK,mBAAmB,KAAK,OAAK,kBAAkB,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;AACrH,eAAW,aAAa,YAAY;AACnC,UAAI,UAAU,OAAO;AACpB,cAAM,kBAAkB,KAAK,2BAA2B,mBAAmB,UAAU,KAAK;AAC1F,YAAI,oBAAoB,UAAU,iBAAiB;AAClD,UAAC,UAAwB,kBAAkB;AAC3C,eAAK,UAAU,KAAK,EAAE,UAAkC,CAAC;AAAA,QAC1D;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,kBAAkB,WAAsC;AACvD,QAAI,UAAU,WAAW,KAAK,WAAW,KAAK,OAAK,CAAC,CAAC,EAAE,WAAW,kBAAkB,EAAE,QAAQ,YAAY,UAAU,QAAS,UAAU,CAAC,GAAG;AAC1I,aAAO,eAAe;AAAA,IACvB;AACA,QAAI,KAAK,aAAa,KAAK,OAAK,kBAAkB,EAAE,YAAY,UAAU,UAAU,CAAC,GAAG;AACvF,aAAO,eAAe;AAAA,IACvB;AACA,UAAM,QAAQ,KAAK,UAAU,OAAO,OAAK,MAAM,aAAc,EAAE,WAAW,UAAU,WAAW,kBAAkB,EAAE,QAAQ,YAAY,UAAU,QAAQ,UAAU,CAAE,EAAE,CAAC;AACxK,WAAO,QAAQ,eAAe,YAAY,eAAe;AAAA,EAC1D;AACD;AAnUM,aAAN;AAAA,EAiBG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAtBG;AAqUC,IAAM,6BAAN,cAAyC,WAA+D;AAAA,EAiC9G,YACyC,sBACP,eACsB,4BACZ,gBACH,sBACJ,kBACG,qBAC1B,YAC0C,4BACxB,aACI,iBACiB,kCACjB,iBACmB,iCACX,yBACT,gBACd,mBACkC,oCACxB,YACM,kBACH,eACG,kBACL,aACW,wBACR,gBACD,eACgB,+BAChB,eACK,oBACK,yBACX,cAC/B;AACD,UAAM;AAhCkC;AACP;AACsB;AACZ;AACH;AACJ;AACG;AAEgB;AACxB;AACI;AACiB;AACjB;AACmB;AACX;AACT;AAEoB;AACxB;AACM;AACH;AACG;AACL;AACW;AACR;AACD;AACgB;AAChB;AACK;AACK;AACX;AAGhC,UAAM,yBAAyB,qBAAqB,SAAS,+BAA+B;AAC5F,QAAI,CAAC,YAAY,sBAAsB,GAAG;AACzC,WAAK,oBAAoB,CAAC,CAAC;AAAA,IAC5B;AACA,SAAK,kCAAkC,6BAA6B,OAAO,iBAAiB;AAC5F,QAAI,iCAAiC,gCAAgC;AACpE,WAAK,kBAAkB,KAAK,UAAU,qBAAqB;AAAA,QAAe;AAAA,QACzE,iCAAiC;AAAA,QACjC,SAAO,KAAK,kBAAkB,GAAG;AAAA,QACjC,SAAO,KAAK,gBAAgB,GAAG;AAAA,QAC/B,CAAC,iCAAiC;AAAA,MACnC,CAAC;AACD,WAAK,UAAU,KAAK,gBAAgB,SAAS,OAAK,KAAK,sBAAsB,GAAG,SAAS,CAAC,CAAC;AAC3F,WAAK,UAAU,KAAK,gBAAgB,QAAQ,OAAK,KAAK,MAAM,CAAC,CAAC;AAC9D,WAAK,kBAAkB,KAAK,KAAK,eAAe;AAAA,IACjD;AACA,QAAI,iCAAiC,iCAAiC;AACrE,WAAK,mBAAmB,KAAK,UAAU,qBAAqB;AAAA,QAAe;AAAA,QAC1E,iCAAiC;AAAA,QACjC,SAAO,KAAK,kBAAkB,GAAG;AAAA,QACjC,SAAO,KAAK,gBAAgB,GAAG;AAAA,QAC/B;AAAA,MACD,CAAC;AACD,WAAK,UAAU,KAAK,iBAAiB,SAAS,OAAK,KAAK,sBAAsB,GAAG,SAAS,CAAC,CAAC;AAC5F,WAAK,UAAU,KAAK,iBAAiB,QAAQ,OAAK,KAAK,MAAM,CAAC,CAAC;AAC/D,WAAK,kBAAkB,KAAK,KAAK,gBAAgB;AAAA,IAClD;AACA,QAAI,iCAAiC,8BAA8B;AAClE,WAAK,gBAAgB,KAAK,UAAU,qBAAqB;AAAA,QAAe;AAAA,QACvE,iCAAiC;AAAA,QACjC,SAAO,KAAK,kBAAkB,GAAG;AAAA,QACjC,SAAO,KAAK,gBAAgB,GAAG;AAAA,QAC/B,EAAE,iCAAiC,mCAAmC,iCAAiC;AAAA,MACxG,CAAC;AACD,WAAK,UAAU,KAAK,cAAc,SAAS,OAAK,KAAK,sBAAsB,GAAG,SAAS,CAAC,CAAC;AACzF,WAAK,UAAU,KAAK,cAAc,QAAQ,OAAK,KAAK,MAAM,CAAC,CAAC;AAC5D,WAAK,kBAAkB,KAAK,KAAK,aAAa;AAAA,IAC/C;AAEA,SAAK,sBAAsB,IAAI,iBAAuB,2BAA2B,oBAAoB;AACrG,SAAK,oBAAoB,IAAI,iBAAuB,GAAI;AACxD,SAAK,UAAU,aAAa,MAAM;AACjC,WAAK,oBAAoB,OAAO;AAChC,WAAK,kBAAkB,OAAO;AAAA,IAC/B,CAAC,CAAC;AAEF,eAAW,gBAAgB,IAAI;AAE/B,QAAI,KAAK,eAAe,YAAY,UAAU;AAC7C,WAAK,0BAA0B;AAAA,IAChC;AAEA,SAAK,kBAAkB,KAAK,WAAW;AAAA,EACxC;AAAA,EAn/BD,OA23B+G;AAAA;AAAA;AAAA,EAE9G,OAAwB,uBAAuB,MAAO,KAAK,KAAK;AAAA,EAGxD;AAAA,EAES,kBAAqC;AAAA,EACrC,mBAAsC;AAAA,EACtC,gBAAmC;AAAA,EACnC,oBAAkC,CAAC;AAAA,EAE5C;AAAA,EACA;AAAA,EAES,YAAY,KAAK,UAAU,IAAI,QAAgC,CAAC;AAAA,EACjF,IAAI,WAA0C;AAAE,WAAO,KAAK,UAAU;AAAA,EAAO;AAAA,EAErE;AAAA,EACA,yBAAmC,CAAC;AAAA,EAC3B,qCAAqC,IAAI,QAA6C;AAAA,EAC9F,oCAAoC,KAAK,mCAAmC;AAAA,EAEpE,WAAW,IAAI,QAAc;AAAA,EAC9C,IAAI,UAAU;AAAE,WAAO,KAAK,SAAS;AAAA,EAAO;AAAA,EAEnC,oBAAoB,KAAK,eAAe,YAAY;AAAA,EAErD,aAA2B,CAAC;AAAA,EAC5B,kBAA4C,CAAC;AAAA,EAE5C;AAAA,EA2FD,4BAAkC;AACzC,aAAS,GAA2B,wBAAwB,aAAa,EACvE,sBAAsB;AAAA,MACtB,GAAG;AAAA,MACH,YAAY;AAAA,QACX,CAAC,2BAA2B,GAAG;AAAA,UAC9B,MAAM;AAAA,UACN,aAAa,IAAI,SAAS,eAAe,+KAA+K;AAAA,UACxN,SAAS;AAAA,QACV;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACH;AAAA,EAEA,MAAc,aAA4B;AAEzC,UAAM,QAAQ,IAAI,CAAC,KAAK,WAAW,GAAG,KAAK,iBAAiB,kCAAkC,CAAC,CAAC;AAChG,QAAI,KAAK,OAAO,YAAY;AAC3B;AAAA,IACD;AACA,SAAK,6BAA6B,KAAK,iBAAiB,YAAY,CAAC,CAAC;AACtE,SAAK,UAAU,KAAK,iBAAiB,sBAAsB,CAAC,EAAE,OAAO,QAAQ,MAAM,KAAK,6BAA6B,OAAO,OAAO,CAAC,CAAC;AAErI,UAAM,KAAK,iBAAiB,KAAK,eAAe,UAAU;AAC1D,QAAI,KAAK,OAAO,YAAY;AAC3B;AAAA,IACD;AAEA,SAAK,qBAAqB;AAC1B,SAAK,6BAA6B;AAClC,SAAK,mCAAmC;AACxC,SAAK,UAAU,KAAK,eAAe,iBAAiB,aAAa,aAAa,4BAA4B,KAAK,MAAM,EAAE,OAAK,KAAK,8CAA8C,CAAC,CAAC;AACjL,SAAK,UAAU,KAAK,eAAe,iBAAiB,aAAa,aAAa,kCAAkC,KAAK,MAAM,EAAE,OAAK,KAAK,8CAA8C,CAAC,CAAC;AACvL,SAAK,UAAU,MAAM,SAAS,KAAK,UAAU,MAAM,QAAW,GAAG,EAAE,MAAM;AACxE,WAAK,6BAA6B;AAClC,WAAK,+BAA+B;AAAA,IACrC,CAAC,CAAC;AAAA,EACH;AAAA,EAEQ,uBAA6B;AAEpC,SAAK,UAAU,KAAK,qBAAqB,yBAAyB,OAAK;AACtE,UAAI,EAAE,qBAAqB,0BAA0B,GAAG;AACvD,YAAI,KAAK,oBAAoB,GAAG;AAC/B,eAAK,+BAA+B;AAAA,QACrC;AAAA,MACD;AACA,UAAI,EAAE,qBAAqB,gCAAgC,GAAG;AAC7D,YAAI,KAAK,0BAA0B,GAAG;AACrC,eAAK,gBAAgB;AAAA,QACtB;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,KAAK,2BAA2B,oBAAoB,wBAAsB;AACxF,UAAI,KAAK,mBAAmB,MAAM,2BAA2B,mBAAmB,KAAK,OAAK,KAAK,2BAA2B,UAAU,CAAC,CAAC,GAAG;AACxI,aAAK,gBAAgB;AAAA,MACtB;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,MAAM,SAAS,KAAK,UAAU,MAAM,QAAW,GAAG,EAAE,MAAM,KAAK,gCAAgC,IAAI,KAAK,SAAS,SAAS,CAAC,CAAC,CAAC;AAC5I,SAAK,UAAU,KAAK,cAAc,cAAc,OAAK;AACpD,UAAK,EAAE,SAAS,UAAU,sBAAsB,EAAE,YAAa,EAAE,SAAS,UAAU,wBAAwB,EAAE,SAAS,UAAU,YAAY;AAC5I,aAAK,iBAAiB,WAGnB,uCAAuC;AAC1C,YAAI,KAAK,0BAA0B,GAAG;AACrC,eAAK,gBAAgB;AAAA,QACtB;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAGF,SAAK,gCAAgC,IAAI,KAAK,SAAS,SAAS,CAAC;AAGjE,SAAK,0BAA0B,IAAI;AAEnC,QAAI,OAAO;AACV,WAAK,4BAA4B;AAEjC,UAAI,CAAC,KAAK,oBAAoB,GAAG;AAChC,aAAK,4BAA4B;AAAA,MAClC;AAAA,IACD;AAEA,SAAK,4BAA4B;AACjC,SAAK,UAAU,KAAK,qBAAqB,yBAAyB,OAAK;AACtE,UAAI,EAAE,qBAAqB,2BAA2B,GAAG;AACxD,aAAK,4BAA4B;AAAA,MAClC;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEQ,sBAA+B;AACtC,WAAO,KAAK,mBAAmB,MAAM;AAAA,EACtC;AAAA,EAEA,qBAAmD;AAClD,UAAM,aAAa,KAAK,qBAAqB,SAAuC,0BAA0B;AAC9G,QAAS,eAAe,0BAA0B;AACjD,aAAO;AAAA,IACR;AACA,WAAO,UAAU,UAAU,KAAK,eAAe,0BAA0B,aAAa;AAAA,EACvF;AAAA,EAEA,MAAM,iCAAiC,qBAA6C;AACnF,UAAM,uBAAuB,KAAK,oBAAoB;AACtD,QAAI,yBAAyB,qBAAqB;AACjD;AAAA,IACD;AAEA,UAAM,SAAS,MAAM,KAAK,cAAc,QAAQ;AAAA,MAC/C,OAAO,IAAI,SAAS,kCAAkC,wBAAwB;AAAA,MAC9E,SAAS,sBACN,IAAI,SAAS,2BAA2B,uDAAuD,IAC/F,IAAI,SAAS,4BAA4B,wDAAwD;AAAA,MACpG,QAAQ,IAAI,SAAS,wCAAwC,kFAAkF;AAAA,IAChJ,CAAC;AACD,QAAI,CAAC,OAAO,WAAW;AACtB;AAAA,IACD;AAGA,SAAK,+BAA+B,CAAC,CAAC;AAEtC,UAAM,KAAK,qBAAqB,YAAY,4BAA4B,mBAAmB;AAE3F,SAAK,gCAAgC,CAAC,CAAC;AACvC,UAAM,KAAK,4BAA4B,CAAC,mBAAmB;AAC3D,SAAK,UAAU,KAAK,MAAS;AAAA,EAC9B;AAAA,EAEiB,gCAAgC,KAAK,UAAU,IAAI,kBAAkB,CAAC;AAAA,EAC/E,8BAAoC;AAC3C,SAAK,8BAA8B,QAAQ;AAC3C,QAAI,KAAK,qBAAqB,SAAS,2BAA2B,MAAM,MAAM;AAC7E,WAAK,8BAA8B,QAAQ,KAAK,YAAY,iBAAiB,WAAS;AACrF,YAAI,CAAC,SAAS,KAAK,qBAAqB,SAAS,2BAA2B,MAAM,MAAM;AACvF,eAAK,wBAAwB,IAAI;AAAA,QAClC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,qCAAqC;AAC5C,UAAM,eAAe,KAAK,UAAU,OAAO,eAC1C,CAAC,UAAU,cACV,UAAU,oBAAoB,gBAAgB,oBAC9C,UAAU,oBAAoB,gBAAgB,gBAAgB,EAC9D,IAAI,eAAa,oBAAoB,MAAM,UAAU,WAAW,EAAE,CAAC;AACrE,SAAK,iBAAiB,WAAmE,uBAAuB,EAAE,cAAc,IAAI,sBAAsB,aAAa,KAAK,GAAG,CAAC,GAAG,OAAO,aAAa,OAAO,CAAC;AAAA,EAChN;AAAA,EAEA,MAAc,6BAA6B,OAA6C,SAA8D;AACrJ,UAAM,oBAAkC,CAAC;AACzC,UAAM,oBAA6C,CAAC;AACpD,eAAW,QAAQ,OAAO;AACzB,YAAM,YAAY,KAAK,UAAU,KAAK,OAAK,kBAAkB,EAAE,IAAI,KAAK,WAAW,OAAO,MAAM,KAAK,KAAK,GAAG,EAAE,UAAU,CAAC;AAC1H,UAAI,WAAW;AACd,0BAAkB,KAAK,SAAS;AAAA,MACjC,OAAO;AACN,0BAAkB,KAAK,IAAI;AAAA,MAC5B;AAAA,IACD;AACA,UAAM,sBAA+C,CAAC;AACtD,eAAW,QAAQ,SAAS;AAC3B,UAAI,KAAK,wBAAwB,kBAAkB,KAAK,iBAAiB,GAAG;AAC3E,4BAAoB,KAAK,IAAI;AAAA,MAC9B,OAAO;AACN,0BAAkB,KAAK,IAAI;AAAA,MAC5B;AAAA,IACD;AACA,QAAI,kBAAkB,QAAQ;AAC7B,YAAM,aAAa,MAAM,KAAK,cAAc,kBAAkB,IAAI,QAAM,EAAE,IAAI,EAAE,WAAW,OAAO,MAAM,EAAE,KAAK,EAAE,GAAG,kBAAkB,IAAI;AAC1I,wBAAkB,KAAK,GAAG,UAAU;AAAA,IACrC;AACA,QAAI,oBAAoB,QAAQ;AAC/B,YAAM,aAAa,MAAM,KAAK,sBAAsB,oBAAoB,IAAI,OAAK,EAAE,iBAAiB,GAAG,IAAI;AAC3G,wBAAkB,KAAK,GAAG,UAAU;AAAA,IACrC;AACA,eAAW,oBAAoB,mBAAmB;AACjD,WAAK,UAAU,KAAK,gBAAgB;AAAA,IACrC;AAAA,EACD;AAAA,EAEQ,4BAA4B,QAAgC;AACnE,WAAO,KAAK,gBAAgB,aAAa;AAAA,MACxC,UAAU,iBAAiB;AAAA,MAC3B,OAAO,IAAI,SAAS,sBAAsB,uCAAuC;AAAA,IAClF,GAAG,MAAM,KAAK,2BAA2B,qCAAqC,MAAM,CAAC;AAAA,EACtF;AAAA,EAEQ,QAAc;AACrB,eAAW,QAAQ,KAAK,iBAAiB;AACxC,WAAK,OAAO;AAAA,IACb;AACA,SAAK,kBAAkB,CAAC;AACxB,SAAK,aAAa,CAAC;AACnB,SAAK,sBAAsB;AAC3B,SAAK,SAAS,KAAK;AAAA,EACpB;AAAA,EAEQ,sBAAsB,WAA8B;AAC3D,SAAK,aAAa;AAClB,SAAK,SAAS;AACd,SAAK,UAAU,KAAK,SAAS;AAAA,EAC9B;AAAA,EAEQ;AAAA,EACR,IAAI,QAAsB;AACzB,QAAI,CAAC,KAAK,QAAQ;AACjB,UAAI,KAAK,kBAAkB,WAAW,GAAG;AACxC,aAAK,SAAS,KAAK;AAAA,MACpB,OAAO;AACN,aAAK,SAAS,CAAC;AACf,cAAM,OAAO,iBAAiB,KAAK,WAAW,OAAK,EAAE,UAAU;AAC/D,mBAAW,cAAc,MAAM;AAC9B,eAAK,OAAO,KAAK,KAAK,oBAAoB,UAAU,CAAC;AAAA,QACtD;AAAA,MACD;AAAA,IACD;AACA,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ;AAAA,EACR,IAAI,YAA0B;AAC7B,QAAI,CAAC,KAAK,YAAY;AACrB,WAAK,aAAa,CAAC;AACnB,iBAAW,cAAc,KAAK,mBAAmB;AAChD,mBAAW,aAAa,WAAW,OAAO;AACzC,eAAK,WAAW,KAAK,SAAS;AAAA,QAC/B;AAAA,MACD;AAAA,IACD;AACA,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,WAAyB;AAC5B,WAAO,KAAK,UAAU,OAAO,OAAK,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,eAAe,SAAS;AAAA,EAChG;AAAA,EAEA,MAAM,WAAW,QAA4D;AAC5E,QAAI,QAAQ;AACX,UAAI,KAAK,mBAAmB,KAAK,iCAAiC,mCAAmC,QAAQ;AAC5G,eAAO,KAAK,gBAAgB,eAAe,KAAK,kBAAkB,CAAC;AAAA,MACpE;AACA,UAAI,KAAK,oBAAoB,KAAK,iCAAiC,oCAAoC,QAAQ;AAC9G,eAAO,KAAK,iBAAiB,eAAe,KAAK,kBAAkB,CAAC;AAAA,MACrE;AACA,UAAI,KAAK,iBAAiB,KAAK,iCAAiC,iCAAiC,QAAQ;AACxG,eAAO,KAAK,cAAc,eAAe,KAAK,kBAAkB,CAAC;AAAA,MAClE;AAAA,IACD;AAEA,QAAI,KAAK,iBAAiB;AACzB,UAAI;AACH,cAAM,KAAK,gBAAgB,eAAe,KAAK,kBAAkB,CAAC;AAAA,MACnE,SACO,OAAO;AACb,aAAK,WAAW,MAAM,KAAK;AAAA,MAC5B;AAAA,IACD;AACA,QAAI,KAAK,kBAAkB;AAC1B,UAAI;AACH,cAAM,KAAK,iBAAiB,eAAe,KAAK,kBAAkB,CAAC;AAAA,MACpE,SACO,OAAO;AACb,aAAK,WAAW,MAAM,KAAK;AAAA,MAC5B;AAAA,IACD;AACA,QAAI,KAAK,eAAe;AACvB,UAAI;AACH,cAAM,KAAK,cAAc,eAAe,KAAK,kBAAkB,CAAC;AAAA,MACjE,SACO,OAAO;AACb,aAAK,WAAW,MAAM,KAAK;AAAA,MAC5B;AAAA,IACD;AACA,WAAO,KAAK;AAAA,EACb;AAAA,EAIA,MAAM,aAAa,MAAW,MAAyC;AACtE,QAAI,CAAC,KAAK,eAAe,UAAU,GAAG;AACrC,aAAO,gBAAgB,CAAC,CAAC;AAAA,IAC1B;AAEA,UAAM,UAAyB,kBAAkB,oBAAoB,IAAI,IAAI,CAAC,IAAI;AAClF,UAAM,QAA2B,kBAAkB,oBAAoB,IAAI,IAAI,OAAO;AACtF,YAAQ,OAAO,QAAQ,OAAO,KAAK,iBAAiB,QAAQ,IAAI,IAAI,QAAQ;AAC5E,YAAQ,oBAAoB,YAAY,QAAQ,iBAAiB,IAAI,KAAK,oBAAoB,QAAQ;AAEtG,UAAM,4BAA4B,MAAM,KAAK,2BAA2B,6BAA6B;AACrG,UAAM,QAAQ,MAAM,KAAK,eAAe,MAAM,SAAS,KAAK;AAC5D,SAAK,mCAAmC,MAAM,SAAS;AACvD,WAAO;AAAA,MACN,WAAW,MAAM,UAAU,IAAI,aAAW,KAAK,YAAY,SAAS,yBAAyB,CAAC;AAAA,MAC9F,OAAO,MAAM;AAAA,MACb,UAAU,MAAM;AAAA,MAChB,SAAS,8BAAO,WAAWC,WAAU;AACpC,cAAM,OAAO,MAAM,MAAM,QAAQ,WAAWA,MAAK;AACjD,aAAK,mCAAmC,IAAI;AAC5C,eAAO,KAAK,IAAI,aAAW,KAAK,YAAY,SAAS,yBAAyB,CAAC;AAAA,MAChF,GAJS;AAAA,IAKV;AAAA,EACD;AAAA,EAIA,MAAM,cAAc,gBAAkC,MAAW,MAAmC;AACnG,QAAI,CAAC,KAAK,eAAe,UAAU,GAAG;AACrC,aAAO,CAAC;AAAA,IACT;AAEA,mBAAe,QAAQ,OAAK,EAAE,aAAa,EAAE,cAAc,KAAK,iBAAiB;AACjF,UAAM,4BAA4B,MAAM,KAAK,2BAA2B,6BAA6B;AACrG,UAAM,oBAAoB,MAAM,KAAK,eAAe,cAAc,gBAAgB,MAAM,IAAI;AAC5F,SAAK,mCAAmC,iBAAiB;AACzD,WAAO,kBAAkB,IAAI,aAAW,KAAK,YAAY,SAAS,yBAAyB,CAAC;AAAA,EAC7F;AAAA,EAEA,MAAM,sBAAsB,WAAkB,mBAAmD;AAChG,UAAM,qBAAqB,MAAM,KAAK,2BAA2B,cAAc,SAAS;AACxF,WAAO,mBAAmB,IAAI,uBAAqB,KAAK,sCAAsC,kBAAkB,QAAQ,KACpH,KAAK,qBAAqB,eAAe,WAAW,SAAO,KAAK,kBAAkB,GAAG,GAAG,SAAO,KAAK,gBAAgB,GAAG,GAAG,QAAW,QAAW,QAAW,EAAE,mBAAmB,kBAAkB,CAAC,CAAC;AAAA,EACzM;AAAA,EAEQ,+BAAqC;AAC5C,QAAI;AAEJ,QAAI,UAAU;AACd,UAAM,WAAW,SAAS;AAC1B,UAAM,aAA2B,CAAC;AAElC,eAAW,KAAK,GAAG,KAAK,MAAM,OAAO,OAAK,EAAE,oBAAoB,gBAAgB,0BAA0B,CAAC;AAC3G,QAAI,WAAW,QAAQ;AACtB,UAAI,WAAW;AAAA,QAAK,OAAK,EAAE,UACzB,CAAC,cAAc,EAAE,MAAM,SAAS,QAAQ,QAAQ,KAAK,eAAe,SAAS,KAAK,eAAe,IAAI,KAAK,0BAA0B,CAAC,GAAG,EAAE,MAAM,SAAS,uBAAuB,CAAC,CAAC,CAAC;AAAA,MACrL,GAAG;AACF,kBAAU,IAAI,SAAS,0BAA0B,sFAAsF;AAAA,MACxI,OAAO;AACN,kBAAU,IAAI,SAAS,qBAAqB,qDAAqD;AAAA,MAClG;AAAA,IACD,OAEK;AACJ,iBAAW,KAAK,GAAG,KAAK,MAAM,OAAO,OAAK,EAAE,oBAAoB,gBAAgB,6BAA6B,CAAC;AAC9G,UAAI,WAAW,QAAQ;AACtB,kBAAU,IAAI,SAAS,uBAAuB,wEAAwE;AAAA,MACvH,OAEK;AACJ,mBAAW,KAAK,GAAG,KAAK,MAAM,OAAO,OAAK,CAAC,CAAC,EAAE,eAAe,CAAC;AAC9D,YAAI,WAAW,QAAQ;AACtB,oBAAU,IAAI,SAAS,yBAAyB,oFAAoF;AAAA,QACrI;AAAA,MACD;AAAA,IACD;AAEA,QAAI,WAAW,UAAU,CAAC,KAAK,uBAAuB,SAAS,OAAO,GAAG;AACxE,+BAAyB;AAAA,QACxB;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,6BAAM;AACd,eAAK,uBAAuB,KAAK,OAAO;AACxC,eAAK,6BAA6B;AAAA,QACnC,GAHS;AAAA,MAIV;AAAA,IACD;AAEA,QAAI,KAAK,wBAAwB,YAAY,wBAAwB,SAAS;AAC7E,WAAK,yBAAyB;AAC9B,WAAK,mCAAmC,KAAK,KAAK,sBAAsB;AAAA,IACzE;AAAA,EACD;AAAA,EAEA,4BAAiE;AAChE,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,iBAAiB,MAAsB;AAC9C,WAAO,KAAK,QAAQ,SAAS,QAAQ,iBAAiB,GAAG;AAEzD,UAAM,iBAAiB;AACvB,QAAI,eAAe,KAAK,IAAI,GAAG;AAC9B,aAAO,KAAK,QAAQ,gBAAgB,CAAC,GAAG,QAAQ;AAG/C,cAAM,SAAS,KAAK,eAAe,qBAAqB,CAAC;AACzD,cAAM,WAAW,OAAO,GAAG,KAAK,CAAC;AAGjC,cAAM,aAAa,KAAK,gBAAgB,qCAAqC,IAAI,KAAK,IAAI,GAAG,EAAE,CAAC;AAChG,cAAM,eAAe,cAAc,KAAK,gBAAgB,gBAAgB,UAAU;AAClF,cAAM,cAAc,eAAe,SAAS,YAAY,MAAM;AAG9D,eAAO,cAAc,GAAG,iBAAiB,GAAG,KAAK,SAAS,IAAI,SAAO,QAAQ,GAAG,GAAG,EAAE,KAAK,GAAG,CAAC,GAAG,WAAW,SAAS,GAAG;AAAA,MACzH,CAAC;AAAA,IACF;AACA,WAAO,KAAK,OAAO,GAAG,GAAG;AAAA,EAC1B;AAAA,EAEQ,YAAY,SAA4B,2BAAmE;AAClH,QAAI,YAAY,KAAK,qCAAqC,OAAO;AACjE,QAAI,CAAC,WAAW;AACf,kBAAY,KAAK,qBAAqB,eAAe,WAAW,SAAO,KAAK,kBAAkB,GAAG,GAAG,SAAO,KAAK,gBAAgB,GAAG,GAAG,QAAW,QAAW,SAAS,MAAS;AAC9K,MAAY,UAAW,6BAA6B,yBAAyB;AAAA,IAC9E;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,qCAAqC,SAA+C;AAC3F,eAAW,aAAa,KAAK,OAAO;AACnC,UAAI,UAAU,WAAW,MAAM;AAC9B,YAAI,UAAU,WAAW,SAAS,QAAQ,WAAW,MAAM;AAC1D,iBAAO;AAAA,QACR;AAAA,MACD,WAAW,UAAU,OAAO,WAAW,YAAY;AAClD,YAAI,kBAAkB,UAAU,YAAY,QAAQ,UAAU,GAAG;AAChE,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,sCAAsC,UAAkC;AAC/E,WAAO,KAAK,MAAM,KAAK,OAAK,EAAE,SAAS,KAAK,mBAAmB,OAAO,gBAAgB,UAAU,EAAE,OAAO,QAAQ,CAAC,KAAK;AAAA,EACxH;AAAA,EAEA,MAAM,KAAK,WAAgC,SAAkD;AAC5F,QAAI,OAAO,cAAc,UAAU;AAClC,YAAM,KAAK;AACX,kBAAY,KAAK,UAAU,KAAK,OAAK,kBAAkB,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC,MAAM,MAAM,KAAK,cAAc,CAAC,EAAE,IAAI,UAAU,CAAC,GAAG,kBAAkB,IAAI,GAAG,CAAC;AAAA,IAC3J;AACA,QAAI,CAAC,WAAW;AACf,YAAM,IAAI,MAAM,wBAAwB,SAAS,EAAE;AAAA,IACpD;AACA,UAAM,KAAK,cAAc,WAAW,KAAK,qBAAqB,eAAe,iBAAiB,SAAS,GAAG,SAAS,SAAS,aAAa,aAAa,YAAY;AAAA,EACnK;AAAA,EAEA,MAAM,WAAW,aAAqB,eAAwC;AAC7E,UAAM,qBAAqB,MAAM,KAAK,aAAa,kBAAkB,YAAY,IAAI,IAAI,qBAAqB;AAC9G,sBAAkB,OAAO,WAAW;AACpC,QAAI,CAAC,eAAe;AACnB,wBAAkB,MAAM;AAAA,IACzB;AAAA,EACD;AAAA,EAEA,0BAA0B,WAA4D;AACrF,UAAM,mBAAmB,KAAK,iBAAiB,oBAAoB;AACnE,eAAW,MAAM,OAAO,KAAK,gBAAgB,GAAG;AAC/C,UAAI,kBAAkB,EAAE,GAAG,GAAG,UAAU,UAAU,GAAG;AACpD,eAAO,iBAAiB,EAAE;AAAA,MAC3B;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,wBAAwB,OAAgB,OAAsB;AACnE,UAAM,QAA2B,CAAC;AAClC,UAAM,WAAqB,CAAC;AAE5B,UAAM,oBAAoB,CAAC,GAAG,KAAK,KAAK;AACxC,eAAW,aAAa,mBAAmB;AAC1C,YAAM,eAAe,UAAU;AAC/B,UAAI,CAAC,gBAAgB,aAAa,WAAW,2BAA2B,mBAAmB;AAC1F;AAAA,MACD;AACA,UAAI,UAAU,UAAU,eAAe,aAAa;AACnD,iBAAS,KAAK,UAAU,WAAW,EAAE;AACrC;AAAA,MACD;AACA,UAAI,CAAC,UAAU,OAAO;AACrB;AAAA,MACD;AACA,YAAM,YAAY,KAAK,2BAA2B,UAAU,UAAU,KAAK;AAC3E,UAAI,WAAW;AACd,cAAM,mBAAmB,KAAK,iBAAiB,WAAW,KAAK,OAAK,kBAAkB,EAAE,IAAI,EAAE,WAAW,OAAO,MAAM,EAAE,KAAK,GAAG,UAAU,UAAU,CAAC;AACrJ,YAAI,kBAAkB;AACrB,mBAAS,KAAK,iBAAiB,WAAW,KAAK;AAAA,QAChD;AACA,cAAM,KAAK,UAAU,KAAK;AAAA,MAC3B,OAAO;AACN,iBAAS,KAAK,UAAU,WAAW,EAAE;AAAA,MACtC;AAAA,IACD;AAEA,eAAW,aAAa,KAAK,iBAAiB,YAAY;AACzD,UAAI,UAAU,oBAAoB;AACjC;AAAA,MACD;AACA,UAAI,kBAAkB,KAAK,OAAK,kBAAkB,EAAE,IAAI,UAAU,WAAW,OAAO,MAAM,UAAU,KAAK,GAAG,EAAE,OAAO,cAAc,EAAE,UAAU,CAAC,GAAG;AAClJ;AAAA,MACD;AAEA,eAAS,KAAK,UAAU,WAAW,KAAK;AAAA,IACzC;AAEA,QAAI,MAAM,UAAU,SAAS,QAAQ;AACpC,UAAI,MAAM,KAAK,iBAAiB,mBAAmB,IAAI,SAAS,WAAW,8BAA8B,GAAG,IAAI,GAAG;AAClH,cAAM,KAAK,iBAAiB,oBAAoB,EAAE,OAAO,SAAS,CAAC;AACnE,YAAI,MAAM;AACT,eAAK,oBAAoB,OAAO;AAAA,YAC/B,UAAU,SAAS;AAAA,YACnB,SAAS,IAAI,SAAS,yBAAyB,mDAAmD;AAAA,YAClG,UAAU,qBAAqB;AAAA,UAChC,CAAC;AAAA,QACF;AAWA,aAAK,iBAAiB,WAA4E,0BAA0B,EAAE,OAAO,MAAM,SAAS,SAAS,QAAQ,KAAK,CAAC;AAAA,MAC5K;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,gBAAgB,WAA0D;AACjF,UAAM,gBAAgB,UAAU,UAAU,eAAe;AACzD,UAAM,mBAAmB,KAAK,iBAAiB,WAAW,KAAK,OAAK,kBAAkB,EAAE,IAAI,EAAE,WAAW,MAAM,GAAG,UAAU,UAAU,CAAC;AACvI,UAAM,eAAe,KAAK,iCAAiC,kCAAkC,2BAA2B,eAAe,2BAA2B;AAClK,UAAM,oBAAoB,iBAAiB,2BAA2B,eAAe,IAAI,SAAS,UAAU,eAAe,IAAI,IAAI,SAAS,sBAAsB,oBAAoB;AAEtL,QAAI,eAAe;AAClB,YAAM,4BAA4B,oBAAoB,KAAK,iBAAiB,mBAAmB,gBAAgB;AAC/G,YAAM,yBAAyB,qBAC1B,CAAC,UAAU,UAAU,UAAU,WAAW,KAAK,iCAAiC,6BAA6B,YAAY,gBAAgB,CAAC,OAC1I,CAAC,UAAU,qBAAqB,KAAK,mBAAmB,OAAO,QAAQ,UAAU,kBAAkB,UAAU,iBAAiB,iBAAiB;AACpJ,UAAI,CAAC,6BAA6B,0BAA0B,CAAC,iBAAiB,oBAAoB;AACjG,eAAO,EAAE,QAAQ,cAAc,QAAQ,IAAI,SAAS,wBAAwB,gEAAgE,iBAAiB,EAAE;AAAA,MAChK;AACA,aAAO;AAAA,IACR;AACA,QAAI,UAAU,OAAO;AACpB,YAAM,yBAAyB,oBAAoB,UAAU,WAAW,KAAK,iCAAiC,6BAA6B,YAAY,gBAAgB,CAAC;AACxK,YAAM,YAAY,KAAK,2BAA2B,UAAU,UAAU,KAAK;AAG3E,UAAI,kBAAkB;AACrB,YAAI,WAAW;AAEd,cAAI,KAAK,iBAAiB,gBAAgB,uBAAuB,UAAU,KAAK,CAAC,GAAG;AACnF,mBAAO;AAAA,UACR;AACA,gBAAM,yBAAyB,KAAK,iCAAiC,6BAA6B,YAAY,gBAAgB,CAAC;AAE/H,cAAI,wBAAwB;AAE3B,gBAAI,CAAC,iBAAiB,uBAAuB,UAAU,YAAY,iBAAiB,WAAW,UAAU,MAAM,mBAAmB,iBAAiB,iBAAiB;AACnK,oBAAM,wBAAwB,KAAK,yBAAyB;AAC5D,oBAAM,uBAAuB,KAAK,wBAAwB;AAC1D,kBAAI,wBACA,CAAC,cAAc,UAAU,MAAM,SAAS,QAAQ,QAAQ,sBAAsB,SAAS,sBAAsB,IAAI,KACjH,cAAc,UAAU,MAAM,SAAS,QAAQ,QAAQ,qBAAqB,SAAS,qBAAqB,IAAI,GAChH;AACD,sBAAM,QAAQ,KAAK,cAAc;AACjC,oBAAI,MAAM,SAAS,UAAU,sBAAsB;AAClD,yBAAO,EAAE,QAAQ,2BAA2B,gBAAgB,QAAQ,IAAI,SAAS,6BAA6B,sDAAsD,KAAK,eAAe,QAAQ,EAAE;AAAA,gBACnM;AACA,oBAAI,MAAM,SAAS,UAAU,YAAY;AACxC,yBAAO,EAAE,QAAQ,2BAA2B,aAAa,QAAQ,IAAI,SAAS,2BAA2B,sDAAsD,KAAK,eAAe,QAAQ,EAAE;AAAA,gBAC9L;AACA,oBAAI,MAAM,SAAS,UAAU,OAAO;AACnC,yBAAO,EAAE,QAAQ,2BAA2B,gBAAgB,QAAQ,IAAI,SAAS,4BAA4B,uDAAuD,KAAK,eAAe,QAAQ,EAAE;AAAA,gBACnM;AACA,uBAAO;AAAA,cACR;AACA,qBAAO,EAAE,QAAQ,cAAc,QAAQ,IAAI,SAAS,qBAAqB,+CAA+C,iBAAiB,EAAE;AAAA,YAC5I;AAEA,gBAAI,KAAK,kBAAkB,SAAS,GAAG;AACtC,oBAAM,yBAAyB,KAAK,UAAU,OAAO,OAAK,kBAAkB,EAAE,YAAY,UAAU,UAAU,KAAK,EAAE,WAAW,UAAU,MAAM,EAAE,CAAC;AACnJ,kBAAI,wBAAwB;AAE3B,oBAAI,2BAA2B,KAAK,iCAAiC,mCAAmC,KAAK,mCAAmC,mBAAmB,UAAU,MAAM,QAAQ,KAAK,uBAAuB,WAAW,KAAK,iCAAiC,gCAAgC;AACvS,yBAAO,EAAE,QAAQ,cAAc,QAAQ,IAAI,SAAS,kBAAkB,gDAAgD,iBAAiB,EAAE;AAAA,gBAC1I;AAGA,oBAAI,2BAA2B,KAAK,iCAAiC,kCAAkC,KAAK,mCAAmC,0BAA0B,UAAU,MAAM,QAAQ,KAAK,uBAAuB,WAAW,KAAK,iCAAiC,iCAAiC;AAC9S,yBAAO,EAAE,QAAQ,cAAc,QAAQ,IAAI,SAAS,iBAAiB,+CAA+C,mBAAmB,KAAK,iCAAiC,iCAAiC,KAAK,EAAE;AAAA,gBACtN;AAAA,cACD;AAAA,YACD;AAAA,UAED,OAAO;AAEN,gBAAI,UAAU,WAAW,KAAK,iCAAiC,kCAAkC,2BAA2B,KAAK,iCAAiC,iCAAiC;AAElM,kBAAI,KAAK,mCAAmC,mBAAmB,UAAU,MAAM,QAAQ,GAAG;AACzF,uBAAO,EAAE,QAAQ,cAAc,QAAQ,IAAI,SAAS,qBAAqB,wCAAwC,iBAAiB,EAAE;AAAA,cACrI;AAAA,YACD;AACA,gBAAI,UAAU,WAAW,KAAK,iCAAiC,mCAAmC,2BAA2B,KAAK,iCAAiC,gCAAgC;AAElM,kBAAI,KAAK,mCAAmC,0BAA0B,UAAU,MAAM,QAAQ,GAAG;AAChG,uBAAO,EAAE,QAAQ,cAAc,QAAQ,IAAI,SAAS,qBAAqB,wCAAwC,iBAAiB,EAAE;AAAA,cACrI;AAAA,YACD;AAAA,UACD;AACA,iBAAO;AAAA,QACR,OAAO;AACN,cAAI,wBAAwB;AAC3B,mBAAO,EAAE,QAAQ,cAAc,QAAQ,IAAI,SAAS,sBAAsB,yCAAyC,iBAAiB,EAAE;AAAA,UACvI;AAAA,QACD;AACA,eAAO;AAAA,MACR,OAGK;AACJ,YAAI,aAAa,CAAC,KAAK,iBAAiB,gBAAgB,uBAAuB,UAAU,KAAK,CAAC,GAAG;AACjG,iBAAO,EAAE,QAAQ,cAAc,QAAQ,IAAI,SAAS,qBAAqB,wCAAwC,iBAAiB,EAAE;AAAA,QACrI;AAEA,cAAM,cAAc,UAAU,SAAS,UAAU,WAAW,KAAK,iCAAiC,iCAAiC,KAAK,iCAAiC,kCAAkC,KAAK,iCAAiC,iCAAiC;AAClR,YAAI,eAAe,UAAU,oBAAoB,gBAAgB,yBAAyB;AACzF,gBAAM,yBAAyB,KAAK,MAAM,OAAO,OAAK,kBAAkB,EAAE,YAAY,UAAU,UAAU,KAAK,EAAE,WAAW,WAAW,EAAE,CAAC;AAE1I,cAAI,0BAA0B,uBAAuB,SAAS,KAAK,2BAA2B,UAAU,uBAAuB,KAAK,GAAG;AACtI,mBAAO,EAAE,QAAQ,cAAc,QAAQ,IAAI,SAAS,qBAAqB,wCAAwC,iBAAiB,EAAE;AAAA,UACrI;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,oBAAoB,YAAsC;AACjE,QAAI,WAAW,WAAW,GAAG;AAC5B,aAAO,WAAW,CAAC;AAAA,IACpB;AAEA,UAAM,oBAAoB,WAAW,OAAO,OAAK,EAAE,SAAS,KAAK,2BAA2B,UAAU,EAAE,KAAK,CAAC;AAC9G,QAAI,kBAAkB,WAAW,GAAG;AACnC,aAAO,kBAAkB,CAAC;AAAA,IAC3B;AAEA,UAAM,qBAAqB,kBAAkB,SAAS,oBAAoB;AAC1E,UAAM,WAAW,mBAAmB,KAAK,OAAK,EAAE,SAAS,EAAE,MAAM,QAAQ,GAAG,OAAO;AAInF,QAAI,CAAC,UAAU;AACd,aAAO,mBAAmB,CAAC;AAAA,IAC5B;AAEA,UAAM,iBAAiB,KAAK,mCAAmC,iBAAiB,QAAQ;AAExF,QAAI,YAAY,mBAAmB,KAAK,CAAAD,eAAa;AACpD,iBAAW,iBAAiB,gBAAgB;AAC3C,gBAAQ,eAAe;AAAA,UACtB,KAAK;AAEJ,gBAAIA,WAAU,WAAW,KAAK,iCAAiC,gCAAgC;AAC9F,qBAAO;AAAA,YACR;AACA,mBAAO;AAAA,UACR,KAAK;AAEJ,gBAAIA,WAAU,WAAW,KAAK,iCAAiC,iCAAiC;AAC/F,qBAAO;AAAA,YACR;AACA,mBAAO;AAAA,UACR,KAAK;AAEJ,gBAAIA,WAAU,WAAW,KAAK,iCAAiC,8BAA8B;AAC5F,qBAAO;AAAA,YACR;AACA,mBAAO;AAAA,QACT;AAAA,MACD;AACA,aAAO;AAAA,IACR,CAAC;AAED,QAAI,CAAC,aAAa,KAAK,iCAAiC,gCAAgC;AACvF,kBAAY,mBAAmB,KAAK,CAAAA,eAAa;AAChD,mBAAW,iBAAiB,gBAAgB;AAC3C,kBAAQ,eAAe;AAAA,YACtB,KAAK;AAEJ,kBAAIA,WAAU,WAAW,KAAK,iCAAiC,gCAAgC;AAC9F,uBAAO;AAAA,cACR;AACA,qBAAO;AAAA,YACR,KAAK;AAEJ,kBAAIA,WAAU,WAAW,KAAK,iCAAiC,gCAAgC;AAC9F,uBAAO;AAAA,cACR;AACA,qBAAO;AAAA,UACT;AAAA,QACD;AACA,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAEA,QAAI,CAAC,aAAa,KAAK,iCAAiC,8BAA8B;AACrF,kBAAY,mBAAmB,KAAK,CAAAA,eAAa;AAChD,mBAAW,iBAAiB,gBAAgB;AAC3C,kBAAQ,eAAe;AAAA,YACtB,KAAK;AAEJ,kBAAIA,WAAU,WAAW,KAAK,iCAAiC,8BAA8B;AAC5F,uBAAO;AAAA,cACR;AACA,qBAAO;AAAA,UACT;AAAA,QACD;AACA,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAEA,QAAI,CAAC,aAAa,KAAK,iCAAiC,iCAAiC;AACxF,kBAAY,mBAAmB,KAAK,CAAAA,eAAa;AAChD,mBAAW,iBAAiB,gBAAgB;AAC3C,kBAAQ,eAAe;AAAA,YACtB,KAAK;AAEJ,kBAAIA,WAAU,WAAW,KAAK,iCAAiC,iCAAiC;AAC/F,uBAAO;AAAA,cACR;AACA,qBAAO;AAAA,UACT;AAAA,QACD;AACA,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAEA,WAAO,aAAa,WAAW,CAAC;AAAA,EACjC;AAAA,EAEQ,kBAAkB,WAAsC;AAC/D,QAAI,KAAK,WAAW,KAAK,OAAK,kBAAkB,EAAE,YAAY,UAAU,UAAU,MAAM,CAAC,UAAU,UAAU,EAAE,WAAW,UAAU,OAAO,GAAG;AAC7I,aAAO,eAAe;AAAA,IACvB;AACA,QAAI,KAAK,kBAAkB;AAC1B,YAAM,QAAQ,KAAK,iBAAiB,kBAAkB,SAAS;AAC/D,UAAI,UAAU,eAAe,aAAa;AACzC,eAAO;AAAA,MACR;AAAA,IACD;AACA,QAAI,KAAK,eAAe;AACvB,YAAM,QAAQ,KAAK,cAAc,kBAAkB,SAAS;AAC5D,UAAI,UAAU,eAAe,aAAa;AACzC,eAAO;AAAA,MACR;AAAA,IACD;AACA,QAAI,KAAK,iBAAiB;AACzB,aAAO,KAAK,gBAAgB,kBAAkB,SAAS;AAAA,IACxD;AACA,WAAO,eAAe;AAAA,EACvB;AAAA,EAEA,MAAM,gBAAgB,aAAsC;AAC3D,QAAI,CAAC,KAAK,eAAe,UAAU,GAAG;AACrC;AAAA,IACD;AACA,UAAM,aAA2B,CAAC;AAClC,QAAI,KAAK,iBAAiB;AACzB,iBAAW,KAAK,KAAK,eAAe;AAAA,IACrC;AACA,QAAI,KAAK,kBAAkB;AAC1B,iBAAW,KAAK,KAAK,gBAAgB;AAAA,IACtC;AACA,QAAI,KAAK,eAAe;AACvB,iBAAW,KAAK,KAAK,aAAa;AAAA,IACnC;AACA,QAAI,CAAC,WAAW,QAAQ;AACvB;AAAA,IACD;AACA,UAAM,QAA0B,CAAC;AACjC,eAAW,aAAa,KAAK,OAAO;AACnC,UAAI,eAAe,CAAC,UAAU,WAAW;AAExC;AAAA,MACD;AACA,UAAI,UAAU,aAAa,CAAC,UAAU,OAAO,WAAW,UAAU,SAAS,cAAc,UAAU,CAAC,UAAU,OAAO,WAAW,OAAO;AAEtI;AAAA,MACD;AACA,UAAI,UAAU,OAAO,WAAW,YAAY;AAC3C;AAAA,MACD;AACA,YAAM,KAAK,EAAE,GAAG,UAAU,YAAY,YAAY,CAAC,CAAC,UAAU,OAAO,WAAW,CAAC;AAAA,IAClF;AACA,QAAI,MAAM,QAAQ;AACjB,YAAM,iBAAiB,MAAM,WAAW,CAAC,EAAE,OAAO,2BAA2B,kBAAkB;AAS/F,WAAK,iBAAiB,WAAsF,qCAAqC;AAAA,QAChJ,OAAO,MAAM;AAAA,MACd,CAAC;AACD,YAAM,oBAAoB,MAAM,KAAK,eAAe,cAAc,OAAO,EAAE,gBAAgB,YAAY,MAAM,gBAAgB,KAAK,kBAAkB,EAAE,GAAG,kBAAkB,IAAI;AAC/K,UAAI,kBAAkB,QAAQ;AAC7B,cAAM,KAAK,mCAAmC,iBAAiB;AAAA,MAChE;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,YAA+C;AACpD,UAAM,WAAmC,CAAC;AAC1C,SAAK,SAAS,QAAQ,CAAC,cAAc;AACpC,UAAI,UAAU,SAAS;AACtB,iBAAS,KAAK;AAAA,UACb,WAAW,UAAU;AAAA,UACrB,SAAS;AAAA,YACR,WAAW,iBAAiB;AAAA,YAC5B,0BAA0B,UAAU,OAAO;AAAA,YAC3C,iBAAiB,KAAK,uBAAuB,eAAe;AAAA,YAC5D,qBAAqB,UAAU,OAAO;AAAA,UACvC;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,CAAC;AACD,WAAO,KAAK,2BAA2B,yBAAyB,QAAQ;AAAA,EACzE;AAAA,EAEA,MAAc,mCAAmC,SAA6C;AAC7F,UAAM,aAA2B,CAAC;AAClC,QAAI,KAAK,iBAAiB;AACzB,iBAAW,KAAK,KAAK,eAAe;AAAA,IACrC;AACA,QAAI,KAAK,kBAAkB;AAC1B,iBAAW,KAAK,KAAK,gBAAgB;AAAA,IACtC;AACA,QAAI,KAAK,eAAe;AACvB,iBAAW,KAAK,KAAK,aAAa;AAAA,IACnC;AACA,QAAI,CAAC,WAAW,QAAQ;AACvB;AAAA,IACD;AACA,UAAM,QAAQ,WAAW,WAAW,IAAI,CAAAE,gBAAcA,YAAW,mCAAmC,SAAS,KAAK,kBAAkB,CAAC,CAAC,CAAC;AACvI,QAAI,KAAK,SAAS,QAAQ;AACzB,WAAK,+BAA+B;AAAA,IACrC;AAAA,EACD;AAAA,EAEQ,4BAAqC;AAC5C,WAAO,KAAK,qBAAqB,SAAS,gCAAgC;AAAA,EAC3E;AAAA,EAEQ,0BAA0B,YAAY,OAAa;AAC1D,SAAK,oBAAoB,OAAO;AAChC,SAAK,oBAAoB,QAAQ,YAAY;AAC5C,UAAI,KAAK,0BAA0B,GAAG;AACrC,cAAM,KAAK,gBAAgB;AAAA,MAC5B;AACA,WAAK,0BAA0B;AAAA,IAChC,GAAG,YAAY,IAAI,KAAK,wBAAwB,CAAC,EAAE,KAAK,QAAW,SAAO,IAAI;AAAA,EAC/E;AAAA,EAEQ,0BAAkC;AACzC,QAAI,KAAK,eAAe,YAAY,aAAa,KAAK,wBAAwB,GAAG;AAChF,aAAO,MAAO,KAAK,KAAK;AAAA,IACzB;AACA,WAAO,2BAA2B;AAAA,EACnC;AAAA,EAEQ,iCAAuC;AAC9C,SAAK,kBAAkB,QAAQ,MAAM,KAAK,qBAAqB,CAAC,EAC9D,KAAK,QAAW,SAAO,IAAI;AAAA,EAC9B;AAAA,EAEA,MAAc,8BAA6C;AAC1D,UAAM,KAAK,gBAAgB,IAAI;AAC/B,UAAM,WAAW,KAAK,SAAS,OAAO,OAAK,EAAE,SAAS;AACtD,UAAM,SAAS,QAAQ,SAAS,IAAI,OAAK,KAAK,QAAQ,GAAG,EAAE,OAAO,aAAa,EAAE,0BAA0B,KAAK,IAAI,MAAS,CAAC,CAAC;AAAA,EAChI;AAAA,EAEA,MAAc,8BAA6C;AAC1D,UAAM,QAA0B,CAAC;AACjC,eAAW,aAAa,KAAK,OAAO;AACnC,UAAI,UAAU,aAAa,UAAU,OAAO,UAAU,UAAU,OAAO,WAAW,MAAM;AACvF,cAAM,KAAK,EAAE,GAAG,UAAU,YAAY,SAAS,UAAU,QAAQ,CAAC;AAAA,MACnE;AAAA,IACD;AACA,QAAI,MAAM,QAAQ;AACjB,YAAM,oBAAoB,MAAM,KAAK,eAAe,cAAc,OAAO,kBAAkB,IAAI;AAC/F,UAAI,kBAAkB,QAAQ;AAC7B,cAAM,KAAK,mCAAmC,iBAAiB;AAAA,MAChE;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,uBAAsC;AACnD,UAAM,WAAyB,CAAC;AAChC,eAAW,aAAa,KAAK,UAAU;AACtC,UAAI,CAAC,KAAK,0BAA0B,SAAS,GAAG;AAC/C;AAAA,MACD;AACA,UAAI,MAAM,KAAK,6BAA6B,SAAS,GAAG;AACvD;AAAA,MACD;AACA,eAAS,KAAK,SAAS;AAAA,IACxB;AAEA,QAAI,CAAC,SAAS,QAAQ;AACrB;AAAA,IACD;AAEA,UAAM,iBAAiB,KAAK,kBAAkB;AAC9C,UAAM,SAAS,QAAQ,SAAS,IAAI,OAAK,KAAK,QAAQ,GAAG,EAAE,OAAO,aAAa,EAAE,0BAA0B,MAAM,eAAe,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;AAAA,EACzJ;AAAA,EAEQ,oBAAqC;AAC5C,WAAO,KAAK,wBAAwB,KAAK,KAAK,yBAAyB;AAAA,EACxE;AAAA,EAEQ,2BAA4C;AACnD,WAAO,EAAE,SAAS,KAAK,eAAe,SAAS,MAAM,KAAK,eAAe,KAAK;AAAA,EAC/E;AAAA,EAEQ,0BAAuD;AAC9D,YAAQ,KAAK,cAAc,MAAM,MAAM;AAAA,MACtC,KAAK,UAAU;AAAA,MACf,KAAK,UAAU;AAAA,MACf,KAAK,UAAU;AAAA,MACf,KAAK,UAAU,OAAO;AACrB,cAAM,UAAU,KAAK,cAAc,MAAM,OAAO;AAChD,YAAI,WAAW,OAAO,MAAM,OAAO,GAAG;AACrC,iBAAO,EAAE,SAAS,MAAM,KAAK,cAAc,MAAM,OAAO,YAAY,IAAI,KAAK,KAAK,cAAc,MAAM,OAAO,SAAS,EAAE,YAAY,IAAI,OAAU;AAAA,QACnJ;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,0BAA0B,WAAgC;AACjE,QAAI,UAAU,iBAAiB,iBAAiB;AAC/C,aAAO;AAAA,IACR;AAEA,UAAM,kBAAkB,KAAK,mBAAmB;AAEhD,QAAI,oBAAoB,OAAO;AAC9B,YAAM,yBAAyB,KAAK,+BAA+B;AACnE,YAAM,cAAc,UAAU,WAAW,GAAG,YAAY;AACxD,UAAI,uBAAuB,SAAS,WAAW,GAAG;AACjD,eAAO;AAAA,MACR;AACA,UAAI,KAAK,gCAAgC,UAAU,SAAS,KAAK,CAAC,uBAAuB,SAAS,IAAI,WAAW,EAAE,GAAG;AACrH,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAEA,QAAI,UAAU,QAAQ;AACrB,aAAO;AAAA,IACR;AAEA,UAAM,+BAA+B,KAAK,gCAAgC;AAC1E,QAAI,6BAA6B,SAAS,UAAU,WAAW,GAAG,YAAY,CAAC,GAAG;AACjF,aAAO;AAAA,IACR;AAEA,QAAI,oBAAoB,MAAM;AAC7B,aAAO;AAAA,IACR;AAEA,QAAI,oBAAoB,yBAAyB;AAChD,aAAO,KAAK,2BAA2B,yBAAyB,UAAU,eAAe;AAAA,IAC1F;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,6BAA6B,WAAoD;AACtF,QAAI,CAAC,UAAU,UAAU;AACxB;AAAA,IACD;AAEA,QAAI,UAAU,OAAO,SAAS,QAAQ,UAAU,OAAO,SAAS,SAAS;AACxE;AAAA,IACD;AAEA,QAAI,CAAC,UAAU,SAAS;AACvB;AAAA,IACD;AAEA,QAAI,UAAU,UAAU,QAAQ,YAAY,YAAY,GAAG;AAC1D,UAAI,CAAC,UAAU,QAAQ,WAAW,cAAc;AAC/C;AAAA,MACD;AAAA,IACD,OAAO;AACN,YAAM,WAAW,qBAAqB,YACnC,MAAM,UAAU,mBAAmB,IACnC,MAAM,KAAK,eAAe,YAAY,UAAU,SAAS,kBAAkB,IAAI;AAClF,UAAI,CAAC,UAAU,QAAQ,CAAC,UAAU,SAAS;AAC1C;AAAA,MACD;AAAA,IACD;AAEA,WAAO,IAAI,SAAS,2BAA2B,qHAAqH,UAAU,WAAW;AAAA,EAC1L;AAAA,EAEA,uBAAuB,sBAAoD;AAC1E,QAAI,SAAS,oBAAoB,GAAG;AACnC,UAAI,2BAA2B,KAAK,oBAAoB,GAAG;AAC1D,cAAM,IAAI,MAAM,uDAAuD;AAAA,MACxE;AACA,UAAI,KAAK,oBAAoB,GAAG;AAC/B,eAAO;AAAA,MACR;AACA,aAAO,KAAK,gCAAgC,oBAAoB;AAAA,IACjE;AACA,WAAO,KAAK,0BAA0B,oBAAoB;AAAA,EAC3D;AAAA,EAEQ,gCAAgC,WAA4B;AACnE,UAAM,yBAAyB,KAAK,0BAA0B;AAC9D,WAAO,uBAAuB,SAAS,UAAU,YAAY,CAAC;AAAA,EAC/D;AAAA,EAEA,MAAM,8BAA8B,sBAA2C,QAAgC;AAC9G,QAAI,KAAK,oBAAoB,GAAG;AAC/B,UAAI,SAAS,oBAAoB,GAAG;AACnC,cAAM,IAAI,MAAM,4CAA4C;AAAA,MAC7D;AACA,YAAM,+BAA+B,KAAK,gCAAgC;AAC1E,YAAM,cAAc,qBAAqB,WAAW,GAAG,YAAY;AACnE,YAAM,iBAAiB,6BAA6B,QAAQ,WAAW;AACvE,UAAI,QAAQ;AACX,YAAI,mBAAmB,IAAI;AAC1B,uCAA6B,OAAO,gBAAgB,CAAC;AAAA,QACtD;AAAA,MACD,OACK;AACJ,YAAI,mBAAmB,IAAI;AAC1B,uCAA6B,KAAK,WAAW;AAAA,QAC9C;AAAA,MACD;AACA,WAAK,gCAAgC,4BAA4B;AACjE,UAAI,UAAU,qBAAqB,SAAS,qBAAqB,QAAQ;AACxE,cAAM,KAAK,2BAA2B,eAAe,qBAAqB,OAAO,EAAE,QAAQ,MAAM,CAAC;AAAA,MACnG;AACA,WAAK,UAAU,KAAK,oBAAoB;AAAA,IACzC,OAEK;AACJ,YAAM,8BAA8B,KAAK,+BAA+B;AACxE,UAAI,SAAS,oBAAoB,GAAG;AACnC,YAAI,2BAA2B,KAAK,oBAAoB,GAAG;AAC1D,gBAAM,IAAI,MAAM,uDAAuD;AAAA,QACxE;AACA,+BAAuB,qBAAqB,YAAY;AACxD,YAAI,KAAK,uBAAuB,oBAAoB,MAAM,QAAQ;AACjE,cAAI,QAAQ;AACX,wCAA4B,KAAK,oBAAoB;AAAA,UACtD,OAAO;AACN,gBAAI,4BAA4B,SAAS,oBAAoB,GAAG;AAC/D,0CAA4B,OAAO,4BAA4B,QAAQ,oBAAoB,GAAG,CAAC;AAAA,YAChG;AAAA,UACD;AAAA,QACD;AACA,aAAK,+BAA+B,2BAA2B;AAC/D,mBAAW,KAAK,KAAK,WAAW;AAC/B,cAAI,EAAE,UAAU,YAAY,MAAM,sBAAsB;AACvD,iBAAK,UAAU,KAAK,CAAC;AAAA,UACtB;AAAA,QACD;AAAA,MACD,OAAO;AACN,cAAM,cAAc,qBAAqB,WAAW,GAAG,YAAY;AACnE,cAAM,gCAAgC,KAAK,uBAAuB,qBAAqB,UAAU,YAAY,CAAC;AAC9G,cAAM,gCAAgC,4BAA4B,SAAS,WAAW;AACtF,cAAM,iCAAiC,4BAA4B,SAAS,IAAI,WAAW,EAAE;AAE7F,YAAI,QAAQ;AACX,cAAI,gCAAgC;AACnC,wCAA4B,OAAO,4BAA4B,QAAQ,IAAI,WAAW,EAAE,GAAG,CAAC;AAAA,UAC7F;AACA,cAAI,+BAA+B;AAClC,gBAAI,+BAA+B;AAClC,0CAA4B,OAAO,4BAA4B,QAAQ,WAAW,GAAG,CAAC;AAAA,YACvF;AAAA,UACD,OAAO;AACN,gBAAI,CAAC,+BAA+B;AACnC,0CAA4B,KAAK,WAAW;AAAA,YAC7C;AAAA,UACD;AAAA,QACD,OAEK;AACJ,cAAI,+BAA+B;AAClC,wCAA4B,OAAO,4BAA4B,QAAQ,WAAW,GAAG,CAAC;AAAA,UACvF;AACA,cAAI,+BAA+B;AAClC,gBAAI,CAAC,gCAAgC;AACpC,0CAA4B,KAAK,IAAI,WAAW,EAAE;AAAA,YACnD;AAAA,UACD,OAAO;AACN,gBAAI,gCAAgC;AACnC,0CAA4B,OAAO,4BAA4B,QAAQ,IAAI,WAAW,EAAE,GAAG,CAAC;AAAA,YAC7F;AAAA,UACD;AAAA,QACD;AACA,aAAK,+BAA+B,2BAA2B;AAC/D,aAAK,UAAU,KAAK,oBAAoB;AAAA,MACzC;AAAA,IACD;AAEA,QAAI,QAAQ;AACX,WAAK,qBAAqB;AAAA,IAC3B;AAAA,EACD;AAAA,EAEQ,gDAAsD;AAC7D,QACC,KAAK,qCAAqC,KAAK,oCAAoC,KAChF,KAAK,sCAAsC,KAAK,qCAAqC,GACvF;AACD,YAAM,iBAAiB,KAAK,UAAU,OAAO,OAAK,CAAC,EAAE,SAAS;AAC9D,YAAM,UAAU,wBAAC,eAA6C;AAC7D,cAAMC,oBAAiC,CAAC;AACxC,cAAMC,uBAAoC,CAAC;AAC3C,mBAAW,aAAa,YAAY;AACnC,cAAI,KAAK,0BAA0B,SAAS,GAAG;AAC9C,YAAAD,kBAAiB,KAAK,SAAS;AAAA,UAChC,OAAO;AACN,YAAAC,qBAAoB,KAAK,SAAS;AAAA,UACnC;AAAA,QACD;AACA,eAAO,CAACD,mBAAkBC,oBAAmB;AAAA,MAC9C,GAXgB;AAahB,YAAM,CAAC,qBAAqB,sBAAsB,IAAI,QAAQ,cAAc;AAC5E,WAAK,oCAAoC;AACzC,WAAK,qCAAqC;AAC1C,YAAM,CAAC,kBAAkB,mBAAmB,IAAI,QAAQ,cAAc;AAEtE,iBAAW,KAAK,uBAAuB,CAAC,GAAG;AAC1C,YAAI,qBAAqB,SAAS,CAAC,GAAG;AACrC,eAAK,UAAU,KAAK,CAAC;AAAA,QACtB;AAAA,MACD;AACA,iBAAW,KAAK,0BAA0B,CAAC,GAAG;AAC7C,YAAI,kBAAkB,SAAS,CAAC,GAAG;AAClC,eAAK,UAAU,KAAK,CAAC;AAAA,QACtB;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,WAAW,WAAyC;AACzD,QAAI,EAAE,qBAAqB,YAAY;AACtC,aAAO;AAAA,IACR;AAEA,QAAI,UAAU,aAAa;AAC1B,aAAO;AAAA,IACR;AAEA,QAAI,UAAU,iBAAiB,iBAAiB;AAC/C,aAAO;AAAA,IACR;AAEA,QAAI,UAAU,SAAS;AACtB,UAAI,KAAK,mBAAmB,MAAM,KAAK,gBAAgB,WAAW,UAAU,OAAO,GAAG;AACrF,eAAO;AAAA,MACR;AAEA,UAAI,KAAK,oBAAoB,MAAM,KAAK,iBAAiB,WAAW,UAAU,OAAO,GAAG;AACvF,eAAO;AAAA,MACR;AAEA,UAAI,KAAK,iBAAiB,MAAM,KAAK,cAAc,WAAW,UAAU,OAAO,GAAG;AACjF,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAEA,QAAI,UAAU,qBAAqB,MAAM,KAAK,2BAA2B,WAAW,UAAU,iBAAiB,GAAG;AACjH,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,QAAQ,KAAgC,iBAA0C,CAAC,GAAG,kBAA0D;AACrJ,QAAI;AACJ,QAAI;AAEJ,QAAI,eAAe,KAAK;AACvB,oBAAc;AAAA,IACf,OAAO;AACN,UAAI;AACJ,UAAI;AACJ,UAAI,SAAS,GAAG,GAAG;AAClB,oBAAY,KAAK,MAAM,KAAK,OAAK,kBAAkB,EAAE,YAAY,EAAE,IAAI,IAAI,CAAC,CAAC;AAC7E,YAAI,CAAC,WAAW,WAAW;AAC1B,4BAAkB,EAAE,IAAI,KAAK,SAAS,eAAe,SAAS,YAAY,eAAe,4BAA4B,KAAK,kBAAkB;AAAA,QAC7I;AAAA,MACD,WAAW,IAAI,SAAS;AACvB,oBAAY;AACZ,kBAAU,IAAI;AACd,YAAI,eAAe,WAAW,eAAe,YAAY,SAAS,SAAS;AAC1E,4BAAkB,EAAE,IAAI,UAAU,WAAW,IAAI,SAAS,eAAe,QAAQ;AAAA,QAClF;AAAA,MACD,WAAW,IAAI,mBAAmB;AACjC,oBAAY;AACZ,sBAAc,IAAI;AAAA,MACnB;AACA,UAAI,iBAAiB;AACpB,cAAM,iBAAiB,WAAW,SAAS,MAAM,UAAU,OAAO,2BAA2B,kBAAkB,IAAI;AACnH,mBAAW,MAAM,KAAK,eAAe,cAAc,CAAC,eAAe,GAAG,EAAE,eAAe,GAAG,kBAAkB,IAAI,GAAG,GAAG,CAAC;AAAA,MACxH;AACA,UAAI,CAAC,aAAa,SAAS;AAC1B,oBAAY,KAAK,qBAAqB,eAAe,WAAW,SAAO,KAAK,kBAAkB,GAAG,GAAG,SAAO,KAAK,gBAAgB,GAAG,GAAG,QAAW,QAAW,SAAS,MAAS;AAC9K,QAAY,UAAW,6BAA6B,MAAM,KAAK,2BAA2B,6BAA6B,CAAC;AAAA,MACzH;AACA,UAAI,WAAW,aAAa;AAC3B,cAAM,IAAI,MAAM,IAAI,SAAS,aAAa,+CAA+C,CAAC;AAAA,MAC3F;AAEA,UAAI,EAAE,eAAe,UAAU,WAAW,QAAQ;AACjD,YAAI,CAAC,aAAa;AACjB,cAAI,CAAC,SAAS;AACb,kBAAM,KAAK,SAAS,GAAG,IAAI,MAAmB,IAAK,WAAW;AAC9D,gBAAI,eAAe,SAAS;AAC3B,oBAAM,IAAI,MAAM,IAAI,SAAS,qBAAqB,uFAAuF,IAAI,eAAe,OAAO,CAAC;AAAA,YACrK,OAAO;AACN,oBAAM,IAAI,MAAM,IAAI,SAAS,aAAa,8DAA8D,EAAE,CAAC;AAAA,YAC5G;AAAA,UACD;AACA,wBAAc;AAAA,QACf;AACA,YAAI,eAAe,SAAS;AAC3B,yBAAe,sBAAsB;AAAA,QACtC;AACA,YAAI,WAAW,mBAAmB;AACjC,yBAAe,oBAAoB;AAAA,QACpC;AAAA,MACD;AAAA,IACD;AAEA,QAAI,aAAa;AAChB,UAAI,eAAe,eAAe;AACjC,cAAM,YAAY,YAAY,eAAe,eAAe,KAAK,KAAK,8BAA8B,UAAU,KAAK,KAAK,8BAA8B,kBAAkB,aAAa,UAAU;AAC/L,cAAM,UAAoC,CAAC;AAC3C,gBAAQ,KAAK;AAAA,UACZ,OAAO,SAAS,eAAe,aAAa,KAAK,CAAC,eAAe,cAAc,SAC5E,IAAI,SAAS,EAAE,KAAK,sBAAsB,SAAS,CAAC,uBAAuB,EAAE,GAAG,qBAAqB,IACrG,IAAI,SAAS,EAAE,KAAK,gCAAgC,SAAS,CAAC,uBAAuB,EAAE,GAAG,+BAA+B,eAAe,cAAc,MAAM;AAAA,UAAG,KAAK,6BAAM,MAAN;AAAA,QACxK,CAAC;AACD,YAAI,CAAC,WAAW;AACf,kBAAQ,KAAK,EAAE,OAAO,IAAI,SAAS,QAAQ,gBAAgB,GAAG,KAAK,6BAAM;AAAE,iBAAK,KAAK,SAAU;AAAG,mBAAO;AAAA,UAAO,GAA7C,OAA+C,CAAC;AAAA,QACpH;AACA,cAAM,SAAS,MAAM,KAAK,cAAc,OAAgB;AAAA,UACvD,OAAO,IAAI,SAAS,yBAAyB,mBAAmB;AAAA,UAChE,SAAS,YAAY,IAAI,SAAS,2BAA2B,yDAAyD,UAAU,aAAa,UAAU,oBAAoB,IAAI,IAAI,SAAS,sBAAsB,0CAA0C;AAAA,UAC5P,QAAQ,SAAS,eAAe,aAAa,IAAI,eAAe,gBAAgB,eAAe,cAAc;AAAA,UAC7G,cAAc;AAAA,UACd;AAAA,UACA,UAAU,YAAY;AAAA,YACrB,OAAO,IAAI,SAAS,kBAAkB,qBAAqB;AAAA,YAC3D,SAAS;AAAA,UACV,IAAI;AAAA,QACL,CAAC;AACD,YAAI,CAAC,OAAO,QAAQ;AACnB,gBAAM,IAAI,kBAAkB;AAAA,QAC7B;AACA,YAAI,WAAW;AACd,yBAAe,kBAAkB,CAAC,OAAO;AAAA,QAC1C;AAAA,MACD;AACA,UAAI,uBAAuB,KAAK;AAC/B,oBAAY,MAAM,KAAK,UAAU,QAAW,MAAM,KAAK,gBAAgB,aAAa,cAAc,GAAG,gBAAgB;AAAA,MACtH,WAAW,WAAW;AACrB,YAAI,UAAU,mBAAmB;AAChC,sBAAY,MAAM,KAAK,UAAU,WAAW,MAAM,KAAK,2BAA2B,yBAAyB,aAAmC,cAAc,GAAG,gBAAgB;AAAA,QAChL,OAAO;AACN,sBAAY,MAAM,KAAK,UAAU,WAAW,MAAM,KAAK,mBAAmB,WAAY,aAAkC,cAAc,GAAG,gBAAgB;AAAA,QAC1J;AAAA,MACD;AAAA,IACD;AAEA,QAAI,CAAC,WAAW;AACf,YAAM,IAAI,MAAM,IAAI,SAAS,WAAW,6BAA6B,CAAC;AAAA,IACvE;AAEA,QAAI,eAAe,QAAQ;AAC1B,UAAI,UAAU,oBAAoB,gBAAgB,qBAAqB,UAAU,oBAAoB,gBAAgB,kBAAkB;AACtI,YAAI,eAAe,eAAe;AACjC,gBAAM,SAAS,MAAM,KAAK,cAAc,QAAQ;AAAA,YAC/C,OAAO,IAAI,SAAS,wBAAwB,kBAAkB;AAAA,YAC9D,SAAS,IAAI,SAAS,0BAA0B,6CAA6C,UAAU,WAAW;AAAA,YAClH,QAAQ,SAAS,eAAe,aAAa,IAAI,eAAe,gBAAgB,eAAe,cAAc;AAAA,YAC7G,eAAe,SAAS,eAAe,aAAa,IAAI,IAAI,SAAS,EAAE,KAAK,qBAAqB,SAAS,CAAC,uBAAuB,EAAE,GAAG,oBAAoB,IAAI,IAAI,SAAS,EAAE,KAAK,+BAA+B,SAAS,CAAC,uBAAuB,EAAE,GAAG,8BAA8B,eAAe,cAAc,MAAM;AAAA,UAC1T,CAAC;AACD,cAAI,CAAC,OAAO,WAAW;AACtB,kBAAM,IAAI,kBAAkB;AAAA,UAC7B;AAAA,QACD;AACA,cAAM,KAAK,cAAc,WAAW,UAAU,oBAAoB,gBAAgB,oBAAoB,gBAAgB,mBAAmB,gBAAgB,eAAe;AAAA,MACzK;AACA,YAAM,KAAK,4BAA4B,SAAS;AAAA,IACjD;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,gBAAgB,WAAuB,QAAmD;AAC/F,UAAM,KAAK,UAAU,WAAW,YAAY;AAC3C,YAAM,QAAQ,UAAU;AACxB,UAAI,CAAC,OAAO;AACX,cAAM,IAAI,MAAM,qBAAqB;AAAA,MACtC;AACA,UAAI,CAAC,UAAU,SAAS;AACvB,qBAAa,MAAM,KAAK,cAAc,CAAC,EAAE,GAAG,UAAU,YAAY,YAAY,MAAM,WAAW,CAAC,GAAG,kBAAkB,IAAI,GAAG,CAAC,KAAK;AAAA,MACnI;AACA,UAAI,UAAU,SAAS;AACtB,eAAO,OAAO,2BAA2B,mBAAmB,UAAU,SAAS,EAAE,0BAA0B,MAAM,WAAW,CAAC;AAAA,MAC9H;AAEA,YAAM,iBAAiB,MAAM,OAAO,2BAA2B,kBAAkB;AACjF,UAAI,CAAC,2BAA2B,MAAM,gBAAgB,CAAC,MAAM,cAAc,GAAG,cAAc,GAAG;AAC9F,cAAM,IAAI,MAAM,IAAI,SAAS,gBAAgB,+DAA+D,UAAU,WAAW,EAAE,CAAC;AAAA,MACrI;AAEA,YAAM,OAAO,MAAM,KAAK,2BAA2B,IAAI,KAAK;AAC5D,UAAI;AACH,eAAO,MAAM,OAAO,2BAA2B,QAAQ,IAAI;AAAA,MAC5D,UAAE;AACD,YAAI;AACH,gBAAM,KAAK,YAAY,IAAI,IAAI;AAAA,QAChC,SAAS,OAAO;AACf,eAAK,WAAW,MAAM,KAAK;AAAA,QAC5B;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,eAAe,WAAgC;AAC9C,QAAI,CAAC,OAAO;AACX,aAAO;AAAA,IACR;AAEA,QAAI,CAAC,UAAU,SAAS;AACvB,aAAO;AAAA,IACR;AAEA,UAAM,SAAS,UAAU,UAAU,OAAO;AAC1C,QAAI,CAAC,QAAQ;AACZ,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,YAAY,WAAsC;AACvD,QAAI,CAAC,KAAK,eAAe,SAAS,GAAG;AACpC,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACvC;AACA,UAAM,SAAS,UAAU,UAAU,OAAQ;AAC3C,QAAI,WAAW,UAAU;AACxB;AAAA,IACD;AACA,UAAM,wBAAwB,UAAU,SAAS,YAAY,qBAAqB,CAAC;AACnF,WAAO,KAAK,cAAc,UAAU,EAAE,IAAI,QAAQ,kBAAkB,UAAU,SAAS,aAAa,UAAU,WAAW,IAAI,OAAO,yBAAyB,UAAU,YAAY,CAAC;AAAA,EACrL;AAAA,EAEA,cAAc,YAAuC,iBAAiD;AACrG,iBAAa,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAC,UAAU;AACjE,WAAO,KAAK,uBAAuB,YAAY,eAAe;AAAA,EAC/D;AAAA,EAEA,MAAM,UAAU,GAA8B;AAC7C,UAAM,YAAY,EAAE,QAAQ,IAAI,KAAK,MAAM,KAAK,WAAS,kBAAkB,MAAM,YAAY,EAAE,UAAU,CAAC;AAC1G,QAAI,CAAC,WAAW,OAAO;AACtB,YAAM,IAAI,MAAM,eAAe;AAAA,IAChC;AAEA,UAAM,wBAAkD,CAAC,EAAE,WAAW,UAAU,MAAM,CAAC;AACvF,eAAW,iBAAiB,KAAK,gCAAgC,UAAU,OAAO,KAAK,KAAK,GAAG;AAC9F,UAAI,CAAC,sBAAsB,KAAK,CAAAL,OAAK,kBAAkBA,GAAE,UAAU,YAAY,cAAc,UAAU,CAAC,GAAG;AAC1G,8BAAsB,KAAK,EAAE,WAAW,cAAc,CAAC;AAAA,MACxD;AAAA,IACD;AAEA,UAAM,aAA2B,CAAC;AAClC,eAAW,EAAE,WAAAC,WAAU,KAAK,uBAAuB;AAClD,iBAAW,SAAS,KAAK,OAAO;AAC/B,YAAI,CAAC,MAAM,OAAO;AACjB;AAAA,QACD;AACA,YAAI,kBAAkB,MAAM,YAAYA,WAAU,UAAU,GAAG;AAC9D;AAAA,QACD;AACA,YAAI,MAAM,aAAa,WAAW,GAAG;AACpC;AAAA,QACD;AACA,YAAIA,WAAU,SAAS,eAAe,KAAK,QAAM,kBAAkB,EAAE,GAAG,GAAG,MAAM,UAAU,CAAC,GAAG;AAC9F;AAAA,QACD;AACA,YAAI,WAAW,KAAK,OAAK,EAAE,cAAc,KAAK,QAAM,kBAAkB,EAAE,GAAG,GAAG,MAAM,UAAU,CAAC,CAAC,GAAG;AAClG;AAAA,QACD;AACA,YAAI,MAAM,aAAa,KAAK,SAAO,kBAAkBA,WAAU,YAAY,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG;AACzF,qBAAW,KAAK,KAAK;AACrB,gCAAsB,KAAK,EAAE,WAAW,MAAM,MAAM,CAAC;AAAA,QACtD;AAAA,MACD;AAAA,IACD;AAEA,QAAI,WAAW,QAAQ;AACtB,YAAM,EAAE,OAAO,IAAI,MAAM,KAAK,cAAc,OAAO;AAAA,QAClD,OAAO,IAAI,SAAS,uBAAuB,qCAAqC;AAAA,QAChF,MAAM,SAAS;AAAA,QACf,SAAS,KAAK,wDAAwD,WAAW,UAAU;AAAA,QAC3F,SAAS,CAAC;AAAA,UACT,OAAO,IAAI,SAAS,gBAAgB,eAAe;AAAA,UACnD,KAAK,6BAAM,MAAN;AAAA,QACN,CAAC;AAAA,QACD,cAAc;AAAA,UACb,KAAK,6BAAM,OAAN;AAAA,QACN;AAAA,MACD,CAAC;AACD,UAAI,CAAC,QAAQ;AACZ,cAAM,IAAI,kBAAkB;AAAA,MAC7B;AAAA,IACD;AAEA,WAAO,KAAK,aAAa;AAAA,MACxB,UAAU,iBAAiB;AAAA,MAC3B,OAAO,IAAI,SAAS,yBAAyB,4BAA4B;AAAA,MACzE,QAAQ,GAAG,UAAU,WAAW,EAAE;AAAA,IACnC,GAAG,MAAM,KAAK,2BAA2B,oBAAoB,qBAAqB,EAAE,KAAK,MAAM,MAAS,CAAC;AAAA,EAC1G;AAAA,EAEQ,gCAAgC,WAA4B,WAAyB,UAA6B,CAAC,GAAsB;AAChJ,QAAI,QAAQ,KAAK,OAAK,kBAAkB,EAAE,YAAY,UAAU,UAAU,CAAC,GAAG;AAC7E,aAAO,CAAC;AAAA,IACT;AACA,YAAQ,KAAK,SAAS;AACtB,UAAM,iBAAiB,UAAU,SAAS,iBAAiB,CAAC;AAC5D,QAAI,eAAe,QAAQ;AAC1B,YAAM,mBAAsC,CAAC;AAC7C,iBAAW,KAAK,WAAW;AAC1B,YAAI,EAAE,SAAS,CAAC,EAAE,aAAa,eAAe,KAAK,QAAM,kBAAkB,EAAE,GAAG,GAAG,EAAE,UAAU,CAAC,GAAG;AAClG,2BAAiB,KAAK,EAAE,KAAK;AAAA,QAC9B;AAAA,MACD;AACA,YAAM,yBAA4C,CAAC;AACnD,iBAAW,mBAAmB,kBAAkB;AAC/C,+BAAuB,KAAK,GAAG,KAAK,gCAAgC,iBAAiB,WAAW,OAAO,CAAC;AAAA,MACzG;AACA,aAAO,CAAC,GAAG,kBAAkB,GAAG,sBAAsB;AAAA,IACvD;AACA,WAAO,CAAC;AAAA,EACT;AAAA,EAEQ,wDAAwD,WAAuB,YAAkC;AACxH,QAAI,WAAW,WAAW,GAAG;AAC5B,aAAO,IAAI,SAAS,iCAAiC,2HAA2H,UAAU,aAAa,WAAW,CAAC,EAAE,WAAW;AAAA,IACjO;AACA,QAAI,WAAW,WAAW,GAAG;AAC5B,aAAO,IAAI;AAAA,QAAS;AAAA,QAA+B;AAAA,QAClD,UAAU;AAAA,QAAa,WAAW,CAAC,EAAE;AAAA,QAAa,WAAW,CAAC,EAAE;AAAA,MAAW;AAAA,IAC7E;AACA,WAAO,IAAI;AAAA,MAAS;AAAA,MAAoC;AAAA,MACvD,UAAU;AAAA,MAAa,WAAW,CAAC,EAAE;AAAA,MAAa,WAAW,CAAC,EAAE;AAAA,IAAW;AAAA,EAC7E;AAAA,EAEA,UAAU,WAA4C;AACrD,WAAO,KAAK,UAAU,WAAW,MAAM;AACtC,YAAM,MAAM,UAAU,QAAQ,YAAY,KAAK,MAAM,OAAO,OAAK,kBAAkB,EAAE,YAAY,UAAU,UAAU,CAAC,EAAE,CAAC;AACzH,YAAM,cAAsC,OAAO,IAAI,QAAQ,IAAI,QAAQ;AAC3E,UAAI,CAAC,aAAa;AACjB,cAAM,IAAI,MAAM,eAAe;AAAA,MAChC;AACA,aAAO,KAAK,2BAA2B,qBAAqB,WAAW;AAAA,IACxE,CAAC;AAAA,EACF;AAAA,EAEA,yBAAyB,WAAgC;AACxD,WAAO,UAAU,QAAQ,CAAC,KAAK,2BAA2B,UAAU,KAAK,IACtE,KAAK,gCAAgC,wBAAwB,UAAU,WAAW,EAAE;AAAA,EACxF;AAAA,EAEA,MAAM,iBAAiB,WAAsC;AAC5D,QAAI,CAAC,UAAU,OAAO;AACrB;AAAA,IACD;AACA,QAAI,UAAU,eAAe,UAAU,qBAAqB;AAC3D,YAAM,KAAK,2BAA2B,eAAe,UAAU,OAAO,EAAE,YAAY,CAAC,UAAU,WAAW,CAAC;AAC3G;AAAA,IACD;AACA,UAAM,KAAK,QAAQ,WAAW,EAAE,0BAA0B,CAAC,UAAU,YAAY,YAAY,CAAC,UAAU,WAAW,CAAC;AAAA,EACrH;AAAA,EAEA,MAAM,6BAA6B,WAAsC;AACxE,UAAM,YAAY,KAAK,yBAAyB,SAAS;AACzD,QAAI,UAAU,SAAS,WAAW;AACjC,MAAY,UAAW,QAAQ,MAAM,KAAK,sCAAsC,UAAU,OAAO,IAAI;AACrG,WAAK,UAAU,KAAK,SAAS;AAAA,IAC9B,OAAO;AACN,WAAK,gCAAgC,wBAAwB,UAAU,WAAW,IAAI,CAAC,SAAS;AAAA,IACjG;AACA,UAAM,KAAK,wBAAwB,YAAY,CAAC,0BAA0B,GAAG,OAAO,KAAK;AAAA,EAC1F;AAAA,EAEA,MAAM,kCAAkC,WAAsC;AAC7E,QAAI,CAAC,UAAU,SAAS,6BAA6B,UAAU,MAAM,QAAQ,KAAK,UAAU,WAAW;AACtG;AAAA,IACD;AACA,UAAM,sBAAsB,UAAU,MAAM;AAC5C,UAAM,QAAQ,IAAI,KAAK,iBAAiB,EAAE,IAAI,OAAM,eAAc;AACjE,YAAM,QAAQ,WAAW,MAAM,KAAK,OAAK,kBAAkB,EAAE,YAAY,UAAU,UAAU,CAAC,GAAG;AACjG,UAAI,SAAS,MAAM,wBAAwB,qBAAqB;AAC/D,cAAM,KAAK,2BAA2B,sBAAsB,OAAO,KAAK,uBAAuB,eAAe,kBAAkB;AAAA,MACjI;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEQ,mBAAiC;AACxC,UAAM,aAA2B,CAAC;AAClC,QAAI,KAAK,iBAAiB;AACzB,iBAAW,KAAK,KAAK,eAAe;AAAA,IACrC;AACA,QAAI,KAAK,kBAAkB;AAC1B,iBAAW,KAAK,KAAK,gBAAgB;AAAA,IACtC;AACA,QAAI,KAAK,eAAe;AACvB,iBAAW,KAAK,KAAK,aAAa;AAAA,IACnC;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,2BAA2B,WAAqC;AACvE,QAAI,UAAU,iBAAiB;AAC9B,aAAO;AAAA,IACR;AACA,QAAI,KAAK,gCAAgC,yBAAyB,UAAU,WAAW,EAAE,GAAG;AAC3F,aAAO;AAAA,IACR;AACA,WAAO,CAAC,KAAK,gCAAgC,wBAAwB,UAAU,WAAW,EAAE;AAAA,EAC7F;AAAA,EAEA,MAAM,sCAAsC,WAA4B,MAAyC;AAChH,UAAM,kBAAkB,CAAC;AACzB,QAAI,UAAU,oBAAoB,iBAAiB;AAClD,kBAAY,MAAM,KAAK,2BAA2B,eAAe,WAAW,EAAE,gBAAgB,CAAC;AAAA,IAChG;AACA,QAAI,MAAM;AACT,WAAK,gCAAgC,wBAAwB,UAAU,WAAW,IAAI,KAAK;AAAA,IAC5F;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,UAAU,WAAmC,aAA6C,kBAA0D;AAC3J,UAAM,QAAQ,YAAY,IAAI,SAAS,8BAA8B,kCAAkC,UAAU,WAAW,IAAI,IAAI,SAAS,wBAAwB,0BAA0B;AAC/L,WAAO,KAAK,aAAa;AAAA,MACxB,UAAU,oBAAoB,iBAAiB;AAAA,MAC/C;AAAA,IACD,GAAG,YAAY;AACd,UAAI;AACH,YAAI,WAAW;AACd,eAAK,WAAW,KAAK,SAAS;AAC9B,eAAK,UAAU,KAAK,SAAS;AAAA,QAC9B;AACA,cAAM,QAAQ,MAAM,YAAY;AAChC,eAAO,MAAM,KAAK,6BAA6B,MAAM,UAAU;AAAA,MAChE,UAAE;AACD,YAAI,WAAW;AACd,eAAK,aAAa,KAAK,WAAW,OAAO,OAAK,MAAM,SAAS;AAE7D,eAAK,UAAU,KAAK,MAAS;AAAA,QAC9B;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAc,gBAAgB,MAAW,gBAA0D;AAClG,UAAM,WAAW,MAAM,KAAK,2BAA2B,YAAY,IAAI;AACvE,UAAM,oBAAoB,KAAK,MAAM,KAAK,WAAS,kBAAkB,MAAM,YAAY,EAAE,IAAI,sBAAsB,SAAS,WAAW,SAAS,IAAI,EAAE,CAAC,CAAC;AACxJ,QAAI,mBAAmB;AACtB,uBAAiB,kBAAkB,CAAC;AACpC,UAAI,kBAAkB,kBAAkB,SAAS,SAAS;AACzD,uBAAe,SAAS,kBAAkB,OAAO,UAAU,CAAC,KAAK,0BAA0B,iBAAiB;AAAA,MAC7G,OAAO;AACN,uBAAe,sBAAsB;AAAA,MACtC;AAAA,IACD;AACA,WAAO,KAAK,2BAA2B,YAAY,MAAM,UAAU,cAAc;AAAA,EAClF;AAAA,EAEQ,mBAAmB,WAAuB,SAA4B,gBAA2D;AACxI,qBAAiB,kBAAkB,CAAC;AACpC,mBAAe,SAAS,UAAU,OAAO,UAAU,CAAC,KAAK,0BAA0B,SAAS;AAC5F,QAAI,UAAU,OAAO;AACpB,qBAAe,iBAAiB,KAAK,kBAAkB;AACvD,aAAO,KAAK,2BAA2B,kBAAkB,SAAS,UAAU,OAAO,cAAc;AAAA,IAClG,OAAO;AACN,aAAO,KAAK,2BAA2B,mBAAmB,SAAS,cAAc;AAAA,IAClF;AAAA,EACD;AAAA,EAEA,MAAc,6BAA6B,YAAuD;AACjG,QAAI,qBAAqB,KAAK,MAAM,KAAK,WAAS,kBAAkB,MAAM,YAAY,UAAU,CAAC;AACjG,QAAI,CAAC,oBAAoB;AACxB,YAAM,MAAM,UAAU,MAAM,OAAO,KAAK,UAAU,OAAK,CAAC,CAAC,KAAK,KAAK,MAAM,KAAK,WAAS,kBAAkB,MAAM,YAAY,UAAU,CAAC,CAAC,CAAC;AAAA,IACzI;AACA,yBAAqB,KAAK,MAAM,KAAK,WAAS,kBAAkB,MAAM,YAAY,UAAU,CAAC;AAC7F,QAAI,CAAC,oBAAoB;AAExB,YAAM,IAAI,MAAM,sCAAsC;AAAA,IACvD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAc,4BAA4B,WAAsC;AAC/E,QAAI,KAAK,iBAAiB,WAAW,KAAK,OAAK,oBAAoB,OAAO,EAAE,YAAY,UAAU,WAAW,EAAE,CAAC,GAAG;AAClH;AAAA,IACD;AACA,QAAI,CAAC,UAAU,SAAS,CAAC,KAAK,iBAAiB,gBAAgB,uBAAuB,UAAU,KAAK,CAAC,GAAG;AACxG;AAAA,IACD;AACA,UAAM,IAAI,QAAc,CAAC,GAAG,MAAM;AACjC,YAAM,aAAa,KAAK,iBAAiB,sBAAsB,MAAM;AACpE,YAAI;AACH,cAAI,KAAK,iBAAiB,WAAW,KAAK,CAAAD,OAAK,oBAAoB,OAAOA,GAAE,YAAY,UAAU,WAAW,EAAE,CAAC,GAAG;AAClH,uBAAW,QAAQ;AACnB,cAAE;AAAA,UACH;AAAA,QACD,SAAS,OAAO;AACf,YAAE,KAAK;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AAAA,EAEQ,uBAAuB,YAA0B,iBAAgD;AACxG,UAAM,SAAS,oBAAoB,gBAAgB,mBAAmB,oBAAoB,gBAAgB;AAC1G,QAAI,QAAQ;AACX,YAAM,qCAAqC,KAAK,yBAAyB,YAAY,KAAK,OAAO,iBAAiB,EAAE,cAAc,MAAM,MAAM,KAAK,CAAC;AACpJ,aAAO,KAAK,sBAAsB,YAAY,oCAAoC,eAAe;AAAA,IAClG,OAAO;AACN,YAAM,mBAAmB,KAAK,yBAAyB,YAAY,KAAK,OAAO,iBAAiB,EAAE,cAAc,OAAO,MAAM,KAAK,CAAC;AACnI,UAAI,iBAAiB,QAAQ;AAC5B,eAAO,KAAK,sBAAsB,YAAY,kBAAkB,eAAe;AAAA,MAChF;AACA,aAAO,KAAK,sBAAsB,YAAY,CAAC,GAAG,eAAe;AAAA,IAClE;AAAA,EACD;AAAA,EAEA,MAAc,sBAAsB,YAA0B,iBAA+B,iBAAgD;AAC5I,UAAM,gBAAgB,CAAC,GAAG,YAAY,GAAG,eAAe;AACxD,UAAM,SAAS,oBAAoB,gBAAgB,mBAAmB,oBAAoB,gBAAgB;AAC1G,QAAI,CAAC,QAAQ;AACZ,iBAAW,aAAa,YAAY;AACnC,cAAM,aAAa,KAAK,8BAA8B,WAAW,eAAe,KAAK,KAAK;AAC1F,YAAI,WAAW,QAAQ;AACtB,gBAAM,EAAE,OAAO,IAAI,MAAM,KAAK,cAAc,OAAO;AAAA,YAClD,OAAO,IAAI,SAAS,qBAAqB,mCAAmC;AAAA,YAC5E,MAAM,SAAS;AAAA,YACf,SAAS,KAAK,wCAAwC,WAAW,eAAe,UAAU;AAAA,YAC1F,SAAS,CAAC;AAAA,cACT,OAAO,IAAI,SAAS,eAAe,aAAa;AAAA,cAChD,KAAK,6BAAM,MAAN;AAAA,YACN,CAAC;AAAA,YACD,cAAc;AAAA,cACb,KAAK,6BAAM,OAAN;AAAA,YACN;AAAA,UACD,CAAC;AACD,cAAI,CAAC,QAAQ;AACZ,kBAAM,IAAI,kBAAkB;AAAA,UAC7B;AACA,gBAAM,KAAK,sBAAsB,YAAY,CAAC,SAAS,GAAG,eAAe;AAAA,QAC1E;AAAA,MACD;AAAA,IACD;AACA,WAAO,KAAK,gBAAgB,eAAe,eAAe;AAAA,EAC3D;AAAA,EAEQ,yBAAyB,YAA0B,WAAyB,iBAAkC,SAAmD,UAAwB,CAAC,GAAiB;AAClN,UAAM,UAAU,WAAW,OAAO,OAAK,QAAQ,QAAQ,CAAC,MAAM,EAAE;AAChE,QAAI,QAAQ,QAAQ;AACnB,iBAAW,aAAa,SAAS;AAChC,gBAAQ,KAAK,SAAS;AAAA,MACvB;AACA,YAAM,8BAA8B,UAAU,OAAO,OAAK;AACzD,YAAI,QAAQ,QAAQ,CAAC,MAAM,IAAI;AAC9B,iBAAO;AAAA,QACR;AACA,cAAM,SAAS,oBAAoB,gBAAgB,mBAAmB,oBAAoB,gBAAgB;AAC1G,cAAM,qBAAqB,EAAE,oBAAoB,gBAAgB,mBAAmB,EAAE,oBAAoB,gBAAgB;AAC1H,YAAI,WAAW,oBAAoB;AAClC,iBAAO;AAAA,QACR;AACA,gBAAQ,UAAU,CAAC,EAAE,eAChB,QAAQ,gBAAgB,QAAQ,SACjC,WAAW;AAAA,UAAK,eACjB,QAAQ,gBAAgB,UAAU,aAAa,KAAK,QAAM,kBAAkB,EAAE,GAAG,GAAG,EAAE,UAAU,CAAC,KAC9F,QAAQ,QAAQ,UAAU,cAAc,KAAK,QAAM,kBAAkB,EAAE,GAAG,GAAG,EAAE,UAAU,CAAC;AAAA,QAC/F;AAAA,MACF,CAAC;AACD,UAAI,4BAA4B,QAAQ;AACvC,oCAA4B,KAAK,GAAG,KAAK,yBAAyB,6BAA6B,WAAW,iBAAiB,SAAS,OAAO,CAAC;AAAA,MAC7I;AACA,aAAO;AAAA,IACR;AACA,WAAO,CAAC;AAAA,EACT;AAAA,EAEQ,8BAA8B,WAAuB,qBAAmC,WAAuC;AACtI,WAAO,UAAU,OAAO,OAAK;AAC5B,UAAI,EAAE,aAAa,WAAW,GAAG;AAChC,eAAO;AAAA,MACR;AACA,UAAI,MAAM,WAAW;AACpB,eAAO;AAAA,MACR;AACA,UAAI,CAAC,KAAK,2BAA2B,yBAAyB,EAAE,eAAe,GAAG;AACjF,eAAO;AAAA,MACR;AACA,UAAI,oBAAoB,QAAQ,CAAC,MAAM,IAAI;AAC1C,eAAO;AAAA,MACR;AACA,aAAO,EAAE,aAAa,KAAK,SAAO,CAAC,WAAW,GAAG,mBAAmB,EAAE,KAAK,OAAK,kBAAkB,EAAE,YAAY,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;AAAA,IAC9H,CAAC;AAAA,EACF;AAAA,EAEQ,wCAAwC,WAAuB,uBAAqC,YAAkC;AAC7I,eAAW,KAAK,CAAC,WAAW,GAAG,qBAAqB,GAAG;AACtD,YAAM,2BAA2B,WAAW,OAAO,OAAK,EAAE,aAAa,KAAK,QAAM,kBAAkB,EAAE,GAAG,GAAG,EAAE,UAAU,CAAC,CAAC;AAC1H,UAAI,yBAAyB,QAAQ;AACpC,eAAO,KAAK,qDAAqD,GAAG,wBAAwB;AAAA,MAC7F;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,qDAAqD,WAAuB,YAAkC;AACrH,QAAI,WAAW,WAAW,GAAG;AAC5B,aAAO,IAAI,SAAS,wBAAwB,uHAAuH,UAAU,aAAa,WAAW,CAAC,EAAE,WAAW;AAAA,IACpN;AACA,QAAI,WAAW,WAAW,GAAG;AAC5B,aAAO,IAAI;AAAA,QAAS;AAAA,QAAsB;AAAA,QACzC,UAAU;AAAA,QAAa,WAAW,CAAC,EAAE;AAAA,QAAa,WAAW,CAAC,EAAE;AAAA,MAAW;AAAA,IAC7E;AACA,WAAO,IAAI;AAAA,MAAS;AAAA,MAA2B;AAAA,MAC9C,UAAU;AAAA,MAAa,WAAW,CAAC,EAAE;AAAA,MAAa,WAAW,CAAC,EAAE;AAAA,IAAW;AAAA,EAC7E;AAAA,EAEA,MAAc,gBAAgB,YAA0B,iBAAsD;AAC7G,UAAM,UAAU,MAAM,KAAK,2BAA2B,cAAc,WAAW,IAAI,OAAK,EAAE,KAAM,GAAG,eAAe;AAClH,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACxC,UAAI,QAAQ,CAAC,GAAG;AAiBf,aAAK,iBAAiB,UAAU,oBAAoB,gBAAgB,mBAAmB,oBAAoB,gBAAgB,mBAAmB,qBAAqB,qBAAqB,WAAW,CAAC,EAAE,aAAa;AAAA,MACpN;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA,EAKQ;AAAA,EACA,iCAAuC;AAC9C,QAAI,KAAK,UAAU,KAAK,OAAK,EAAE,UAAU,eAAe,cAAc,EAAE,UAAU,eAAe,YAAY,GAAG;AAC/G,UAAI,CAAC,KAAK,mBAAmB;AAC5B,aAAK,aAAa,EAAE,UAAU,iBAAiB,WAAW,GAAG,MAAM,IAAI,QAAQ,aAAW,KAAK,oBAAoB,OAAO,CAAC;AAAA,MAC5H;AAAA,IACD,OAAO;AACN,WAAK,oBAAoB;AACzB,WAAK,oBAAoB;AAAA,IAC1B;AAAA,EACD;AAAA,EAEQ,aAAgB,SAA2B,MAAoC;AACtF,WAAO,KAAK,gBAAgB,aAAa,SAAS,YAAY;AAC7D,YAAM,iBAAiB,wBAAwB,MAAM,KAAK,CAAC;AAC3D,WAAK,gBAAgB,KAAK,cAAc;AACxC,UAAI;AACH,eAAO,MAAM;AAAA,MACd,UAAE;AACD,cAAMM,SAAQ,KAAK,gBAAgB,QAAQ,cAAc;AACzD,YAAIA,WAAU,IAAI;AACjB,eAAK,gBAAgB,OAAOA,QAAO,CAAC;AAAA,QACrC;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEQ,QAAQ,KAAgB;AAC/B,QAAI,oBAAoB,GAAG,GAAG;AAC7B;AAAA,IACD;AAEA,UAAM,UAAU,OAAO,IAAI,WAAW;AAEtC,QAAI,+EAA+E,KAAK,OAAO,GAAG;AACjG;AAAA,IACD;AAEA,SAAK,oBAAoB,MAAM,GAAG;AAAA,EACnC;AAAA,EAEA,UAAU,KAAU,SAA6C;AAChE,QAAI,CAAC,aAAa,KAAK,IAAI,IAAI,GAAG;AACjC,aAAO,QAAQ,QAAQ,KAAK;AAAA,IAC7B;AAEA,SAAK,mBAAmB,GAAG;AAC3B,WAAO,QAAQ,QAAQ,IAAI;AAAA,EAC5B;AAAA,EAEQ,mBAAmB,KAAgB;AAC1C,UAAM,QAAQ,uBAAuB,KAAK,IAAI,IAAI;AAElD,QAAI,CAAC,OAAO;AACX;AAAA,IACD;AAEA,UAAM,cAAc,MAAM,CAAC;AAE3B,SAAK,WAAW,EAAE,KAAK,OAAM,UAAS;AACrC,UAAI,YAAY,MAAM,KAAK,CAAAC,WAAS,kBAAkBA,OAAM,YAAY,EAAE,IAAI,YAAY,CAAC,CAAC;AAC5F,UAAI,CAAC,WAAW;AACf,SAAC,SAAS,IAAI,MAAM,KAAK,cAAc,CAAC,EAAE,IAAI,YAAY,CAAC,GAAG,EAAE,QAAQ,MAAM,GAAG,kBAAkB,IAAI;AAAA,MACxG;AACA,UAAI,WAAW;AACd,cAAM,KAAK,YAAY,MAAM,UAAU;AACvC,cAAM,KAAK,KAAK,SAAS;AAAA,MAC1B;AAAA,IACD,CAAC,EAAE,KAAK,QAAW,WAAS,KAAK,QAAQ,KAAK,CAAC;AAAA,EAChD;AAAA,EAEQ,4BAAsC;AAC7C,WAAO,KAAK,+BAA+B,EAAE,OAAO,QAAM,CAAC,2BAA2B,KAAK,EAAE,CAAC;AAAA,EAC/F;AAAA,EAEA,iCAA2C;AAC1C,QAAI;AACH,YAAM,cAAc,KAAK,MAAM,KAAK,gCAAgC;AACpE,UAAI,MAAM,QAAQ,WAAW,GAAG;AAC/B,eAAO;AAAA,MACR;AAAA,IACD,SAAS,GAAG;AAAA,IAAe;AAC3B,WAAO,CAAC;AAAA,EACT;AAAA,EAEQ,+BAA+B,6BAA6C;AACnF,SAAK,mCAAmC,KAAK,UAAU,2BAA2B;AAAA,EACnF;AAAA,EAEQ;AAAA,EACR,IAAY,mCAA2C;AACtD,QAAI,CAAC,KAAK,mCAAmC;AAC5C,WAAK,oCAAoC,KAAK,oCAAoC;AAAA,IACnF;AAEA,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAY,iCAAiC,kCAA0C;AACtF,QAAI,KAAK,qCAAqC,kCAAkC;AAC/E,WAAK,oCAAoC;AACzC,WAAK,oCAAoC,gCAAgC;AAAA,IAC1E;AAAA,EACD;AAAA,EAEQ,sCAA8C;AACrD,WAAO,KAAK,eAAe,IAAI,4BAA4B,aAAa,aAAa,IAAI;AAAA,EAC1F;AAAA,EAEQ,oCAAoC,OAAqB;AAChE,SAAK,eAAe,MAAM,4BAA4B,OAAO,aAAa,aAAa,cAAc,IAAI;AAAA,EAC1G;AAAA,EAEA,kCAA4C;AAC3C,QAAI;AACH,YAAM,cAAc,KAAK,MAAM,KAAK,iCAAiC;AACrE,UAAI,MAAM,QAAQ,WAAW,GAAG;AAC/B,eAAO;AAAA,MACR;AAAA,IACD,SAAS,GAAG;AAAA,IAAe;AAC3B,WAAO,CAAC;AAAA,EACT;AAAA,EAEQ,gCAAgC,8BAA8C;AACrF,SAAK,oCAAoC,KAAK,UAAU,4BAA4B;AAAA,EACrF;AAAA,EAEQ;AAAA,EACR,IAAY,oCAA4C;AACvD,QAAI,CAAC,KAAK,oCAAoC;AAC7C,WAAK,qCAAqC,KAAK,qCAAqC;AAAA,IACrF;AAEA,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAY,kCAAkC,mCAA2C;AACxF,QAAI,KAAK,sCAAsC,mCAAmC;AACjF,WAAK,qCAAqC;AAC1C,WAAK,qCAAqC,iCAAiC;AAAA,IAC5E;AAAA,EACD;AAAA,EAEQ,uCAA+C;AACtD,WAAO,KAAK,eAAe,IAAI,kCAAkC,aAAa,aAAa,IAAI;AAAA,EAChG;AAAA,EAEQ,qCAAqC,OAAqB;AACjE,SAAK,eAAe,MAAM,kCAAkC,OAAO,aAAa,aAAa,cAAc,IAAI;AAAA,EAChH;AAED;AA9gEa,6BAAN;AAAA,EAkCJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAhEU;",
  "names": ["e", "extension", "token", "extensions", "shouldAutoUpdate", "shouldNotAutoUpdate", "index", "local"]
}
