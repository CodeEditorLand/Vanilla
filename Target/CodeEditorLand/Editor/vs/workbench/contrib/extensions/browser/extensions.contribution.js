var en=Object.defineProperty;var nn=Object.getOwnPropertyDescriptor;var ie=(m,x,n,o)=>{for(var i=o>1?void 0:o?nn(x,n):x,a=m.length-1,r;a>=0;a--)(r=m[a])&&(i=(o?r(x,n,i):r(i))||i);return o&&i&&en(x,n,i),i},W=(m,x)=>(n,o)=>x(n,o,m);import"../../../../../vs/base/common/actions.js";import{CancellationToken as _}from"../../../../../vs/base/common/cancellation.js";import"../../../../../vs/base/common/collections.js";import{onUnexpectedError as ke}from"../../../../../vs/base/common/errors.js";import{Event as tn}from"../../../../../vs/base/common/event.js";import{KeyCode as on,KeyMod as Ae}from"../../../../../vs/base/common/keyCodes.js";import{mnemonicButtonLabel as sn}from"../../../../../vs/base/common/labels.js";import{Disposable as rn,DisposableStore as Ce,isDisposable as an}from"../../../../../vs/base/common/lifecycle.js";import{Schemas as z}from"../../../../../vs/base/common/network.js";import{isWeb as Re}from"../../../../../vs/base/common/platform.js";import{URI as oe}from"../../../../../vs/base/common/uri.js";import"../../../../../vs/editor/browser/editorExtensions.js";import{CopyAction as cn,CutAction as ln,PasteAction as dn}from"../../../../../vs/editor/contrib/clipboard/browser/clipboard.js";import{localize as t,localize2 as u}from"../../../../../vs/nls.js";import{Categories as We}from"../../../../../vs/platform/action/common/actionCommonCategories.js";import{Action2 as un,MenuId as s,MenuRegistry as O,registerAction2 as Pe}from"../../../../../vs/platform/actions/common/actions.js";import{IClipboardService as Te}from"../../../../../vs/platform/clipboard/common/clipboardService.js";import{CommandsRegistry as q,ICommandService as se}from"../../../../../vs/platform/commands/common/commands.js";import{Extensions as mn,ConfigurationScope as Z}from"../../../../../vs/platform/configuration/common/configurationRegistry.js";import{ContextKeyExpr as e,IContextKeyService as xn,RawContextKey as re}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IDialogService as hn,IFileDialogService as Ve}from"../../../../../vs/platform/dialogs/common/dialogs.js";import{EXTENSION_INSTALL_SOURCE_CONTEXT as De,ExtensionInstallSource as _e,ExtensionsLocalizedLabel as h,IExtensionGalleryService as Me,IExtensionManagementService as Le,InstallOperation as pn,PreferencesLocalizedLabel as Ne}from"../../../../../vs/platform/extensionManagement/common/extensionManagement.js";import{areSameExtensions as I,getIdAndVersion as gn}from"../../../../../vs/platform/extensionManagement/common/extensionManagementUtil.js";import{ExtensionStorageService as En}from"../../../../../vs/platform/extensionManagement/common/extensionStorage.js";import{IExtensionRecommendationNotificationService as fn}from"../../../../../vs/platform/extensionRecommendations/common/extensionRecommendations.js";import{EXTENSION_CATEGORIES as bn}from"../../../../../vs/platform/extensions/common/extensions.js";import{SyncDescriptor as Oe}from"../../../../../vs/platform/instantiation/common/descriptors.js";import{InstantiationType as ae,registerSingleton as ce}from"../../../../../vs/platform/instantiation/common/extensions.js";import{IInstantiationService as P}from"../../../../../vs/platform/instantiation/common/instantiation.js";import*as Sn from"../../../../../vs/platform/jsonschemas/common/jsonContributionRegistry.js";import{INotificationService as wn,Severity as le}from"../../../../../vs/platform/notification/common/notification.js";import{ProgressLocation as vn}from"../../../../../vs/platform/progress/common/progress.js";import{Extensions as Ue}from"../../../../../vs/platform/quickinput/common/quickAccess.js";import{IQuickInputService as yn}from"../../../../../vs/platform/quickinput/common/quickInput.js";import{Registry as M}from"../../../../../vs/platform/registry/common/platform.js";import{IStorageService as In}from"../../../../../vs/platform/storage/common/storage.js";import{IUriIdentityService as kn}from"../../../../../vs/platform/uriIdentity/common/uriIdentity.js";import{EditorPaneDescriptor as An}from"../../../../../vs/workbench/browser/editor.js";import{Extensions as Cn}from"../../../../../vs/workbench/common/configuration.js";import{ResourceContextKey as Rn,WorkbenchStateContext as D}from"../../../../../vs/workbench/common/contextkeys.js";import{Extensions as Wn}from"../../../../../vs/workbench/common/contributions.js";import{EditorExtensions as Pn}from"../../../../../vs/workbench/common/editor.js";import{Extensions as Tn,ViewContainerLocation as J}from"../../../../../vs/workbench/common/views.js";import{ShowRuntimeExtensionsAction as Vn}from"../../../../../vs/workbench/contrib/extensions/browser/abstractRuntimeExtensionsEditor.js";import{DeprecatedExtensionsChecker as Dn}from"../../../../../vs/workbench/contrib/extensions/browser/deprecatedExtensionsChecker.js";import{ExtensionEditor as de}from"../../../../../vs/workbench/contrib/extensions/browser/extensionEditor.js";import{ExtensionEnablementWorkspaceTrustTransitionParticipant as _n}from"../../../../../vs/workbench/contrib/extensions/browser/extensionEnablementWorkspaceTrustTransitionParticipant.js";import{ExtensionRecommendationNotificationService as Mn}from"../../../../../vs/workbench/contrib/extensions/browser/extensionRecommendationNotificationService.js";import{ExtensionRecommendationsService as Ln}from"../../../../../vs/workbench/contrib/extensions/browser/extensionRecommendationsService.js";import{ClearLanguageAction as ue,ConfigureWorkspaceFolderRecommendedExtensionsAction as F,ConfigureWorkspaceRecommendedExtensionsAction as X,InstallAction as qe,InstallAnotherVersionAction as me,InstallSpecificVersionOfExtensionAction as B,PromptExtensionInstallFailureAction as Nn,ReinstallAction as G,SearchExtensionsAction as k,SetColorThemeAction as xe,SetFileIconThemeAction as he,SetProductIconThemeAction as pe,ToggleAutoUpdateForExtensionAction as ge,ToggleAutoUpdatesForPublisherAction as Ee,TogglePreReleaseExtensionAction as Fe}from"../../../../../vs/workbench/contrib/extensions/browser/extensionsActions.js";import{ExtensionActivationProgress as On}from"../../../../../vs/workbench/contrib/extensions/browser/extensionsActivationProgress.js";import{ExtensionsCompletionItemsProvider as Un}from"../../../../../vs/workbench/contrib/extensions/browser/extensionsCompletionItemsProvider.js";import{ExtensionDependencyChecker as qn}from"../../../../../vs/workbench/contrib/extensions/browser/extensionsDependencyChecker.js";import{clearSearchResultsIcon as Fn,configureRecommendedIcon as Xn,extensionsViewIcon as Bn,filterIcon as Gn,installWorkspaceRecommendedIcon as Xe,refreshIcon as Hn}from"../../../../../vs/workbench/contrib/extensions/browser/extensionsIcons.js";import{InstallExtensionQuickAccessProvider as Be,ManageExtensionsQuickAccessProvider as Ge}from"../../../../../vs/workbench/contrib/extensions/browser/extensionsQuickAccess.js";import{BuiltInExtensionsContext as H,DefaultViewsContext as He,ExtensionsSortByContext as Kn,ExtensionsViewletViewsContribution as Qn,ExtensionsViewPaneContainer as jn,MaliciousExtensionChecker as $n,RecommendedExtensionsContext as zn,SearchHasTextContext as Zn,SearchMarketplaceExtensionsContext as Jn,StatusUpdater as Yn}from"../../../../../vs/workbench/contrib/extensions/browser/extensionsViewlet.js";import{ExtensionsWorkbenchService as et}from"../../../../../vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.js";import{UnsupportedExtensionsMigrationContrib as nt}from"../../../../../vs/workbench/contrib/extensions/browser/unsupportedExtensionsMigrationContribution.js";import{Query as Ke}from"../../../../../vs/workbench/contrib/extensions/common/extensionQuery.js";import{AutoUpdateConfigurationKey as L,CONTEXT_HAS_GALLERY as p,ExtensionRuntimeActionType as Qe,extensionsSearchActionsMenu as je,HasOutdatedExtensionsContext as tt,IExtensionsWorkbenchService as S,INSTALL_ACTIONS_GROUP as K,INSTALL_EXTENSION_FROM_VSIX_COMMAND_ID as $e,LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID as it,OUTDATED_EXTENSIONS_VIEW_ID as ot,SELECT_INSTALL_VSIX_EXTENSION_COMMAND_ID as st,THEME_ACTIONS_GROUP as fe,TOGGLE_IGNORE_EXTENSION_ACTION_ID as rt,UPDATE_ACTIONS_GROUP as ze,VIEWLET_ID as w,WORKSPACE_RECOMMENDATIONS_VIEW_ID as be}from"../../../../../vs/workbench/contrib/extensions/common/extensions.js";import{ExtensionsConfigurationSchema as at,ExtensionsConfigurationSchemaId as ct}from"../../../../../vs/workbench/contrib/extensions/common/extensionsFileTemplate.js";import{ExtensionsInput as Se}from"../../../../../vs/workbench/contrib/extensions/common/extensionsInput.js";import{KeymapExtensions as lt}from"../../../../../vs/workbench/contrib/extensions/common/extensionsUtils.js";import{CONTEXT_KEYBINDINGS_EDITOR as dt}from"../../../../../vs/workbench/contrib/preferences/common/preferences.js";import"../../../../../vs/workbench/contrib/webview/browser/webview.js";import{IEditorService as we}from"../../../../../vs/workbench/services/editor/common/editorService.js";import{EnablementState as Q,extensionsConfigurationNodeBase as ut,IExtensionManagementServerService as mt,IWorkbenchExtensionEnablementService as xt,IWorkbenchExtensionManagementService as Ze}from"../../../../../vs/workbench/services/extensionManagement/common/extensionManagement.js";import{IExtensionIgnoredRecommendationsService as Je,IExtensionRecommendationsService as ht}from"../../../../../vs/workbench/services/extensionRecommendations/common/extensionRecommendations.js";import{IWorkspaceExtensionsConfigService as Y}from"../../../../../vs/workbench/services/extensionRecommendations/common/workspaceExtensionsConfig.js";import{IHostService as pt}from"../../../../../vs/workbench/services/host/browser/host.js";import{LifecyclePhase as T}from"../../../../../vs/workbench/services/lifecycle/common/lifecycle.js";import{IPaneCompositePartService as ve}from"../../../../../vs/workbench/services/panecomposite/browser/panecomposite.js";import{IPreferencesService as Ye}from"../../../../../vs/workbench/services/preferences/common/preferences.js";import{CONTEXT_SYNC_ENABLEMENT as ye}from"../../../../../vs/workbench/services/userDataSync/common/userDataSync.js";import{IViewsService as ee}from"../../../../../vs/workbench/services/views/common/viewsService.js";import{WORKSPACE_TRUST_EXTENSION_SUPPORT as gt}from"../../../../../vs/workbench/services/workspaces/common/workspaceTrust.js";ce(S,et,ae.Eager),ce(fn,Mn,ae.Delayed),ce(ht,Ln,ae.Eager),M.as(Ue.Quickaccess).registerQuickAccessProvider({ctor:Ge,prefix:Ge.PREFIX,placeholder:t("manageExtensionsQuickAccessPlaceholder","Press Enter to manage extensions."),helpEntries:[{description:t("manageExtensionsHelp","Manage Extensions")}]}),M.as(Pn.EditorPane).registerEditorPane(An.create(de,de.ID,t("extension","Extension")),[new Oe(Se)]),M.as(Tn.ViewContainersRegistry).registerViewContainer({id:w,title:u("extensions","Extensions"),openCommandActionDescriptor:{id:w,mnemonicTitle:t({key:"miViewExtensions",comment:["&& denotes a mnemonic"]},"E&&xtensions"),keybindings:{primary:Ae.CtrlCmd|Ae.Shift|on.KeyX},order:4},ctorDescriptor:new Oe(jn),icon:Bn,order:4,rejectAddedViews:!0,alwaysUseContainerInfo:!0},J.Sidebar),M.as(mn.Configuration).registerConfiguration({...ut,properties:{"extensions.autoUpdate":{enum:[!0,"onlyEnabledExtensions",!1],enumItemLabels:[t("all","All Extensions"),t("enabled","Only Enabled Extensions"),t("none","None")],enumDescriptions:[t("extensions.autoUpdate.true","Download and install updates automatically for all extensions."),t("extensions.autoUpdate.enabled","Download and install updates automatically only for enabled extensions."),t("extensions.autoUpdate.false","Extensions are not automatically updated.")],description:t("extensions.autoUpdate","Controls the automatic update behavior of extensions. The updates are fetched from a Microsoft online service."),default:!0,scope:Z.APPLICATION,tags:["usesOnlineServices"]},"extensions.autoCheckUpdates":{type:"boolean",description:t("extensionsCheckUpdates","When enabled, automatically checks extensions for updates. If an extension has an update, it is marked as outdated in the Extensions view. The updates are fetched from a Microsoft online service."),default:!0,scope:Z.APPLICATION,tags:["usesOnlineServices"]},"extensions.ignoreRecommendations":{type:"boolean",description:t("extensionsIgnoreRecommendations","When enabled, the notifications for extension recommendations will not be shown."),default:!1},"extensions.showRecommendationsOnlyOnDemand":{type:"boolean",deprecationMessage:t("extensionsShowRecommendationsOnlyOnDemand_Deprecated","This setting is deprecated. Use extensions.ignoreRecommendations setting to control recommendation notifications. Use Extensions view's visibility actions to hide Recommended view by default."),default:!1,tags:["usesOnlineServices"]},"extensions.closeExtensionDetailsOnViewChange":{type:"boolean",description:t("extensionsCloseExtensionDetailsOnViewChange","When enabled, editors with extension details will be automatically closed upon navigating away from the Extensions View."),default:!1},"extensions.confirmedUriHandlerExtensionIds":{type:"array",items:{type:"string"},description:t("handleUriConfirmedExtensions","When an extension is listed here, a confirmation prompt will not be shown when that extension handles a URI."),default:[],scope:Z.APPLICATION},"extensions.webWorker":{type:["boolean","string"],enum:[!0,!1,"auto"],enumDescriptions:[t("extensionsWebWorker.true","The Web Worker Extension Host will always be launched."),t("extensionsWebWorker.false","The Web Worker Extension Host will never be launched."),t("extensionsWebWorker.auto","The Web Worker Extension Host will be launched when a web extension needs it.")],description:t("extensionsWebWorker","Enable web worker extension host."),default:"auto"},"extensions.supportVirtualWorkspaces":{type:"object",markdownDescription:t("extensions.supportVirtualWorkspaces","Override the virtual workspaces support of an extension."),patternProperties:{"([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$":{type:"boolean",default:!1}},additionalProperties:!1,default:{},defaultSnippets:[{body:{"pub.name":!1}}]},"extensions.experimental.affinity":{type:"object",markdownDescription:t("extensions.affinity","Configure an extension to execute in a different extension host process."),patternProperties:{"([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$":{type:"integer",default:1}},additionalProperties:!1,default:{},defaultSnippets:[{body:{"pub.name":1}}]},[gt]:{type:"object",scope:Z.APPLICATION,markdownDescription:t("extensions.supportUntrustedWorkspaces","Override the untrusted workspace support of an extension. Extensions using `true` will always be enabled. Extensions using `limited` will always be enabled, and the extension will hide functionality that requires trust. Extensions using `false` will only be enabled only when the workspace is trusted."),patternProperties:{"([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$":{type:"object",properties:{supported:{type:["boolean","string"],enum:[!0,!1,"limited"],enumDescriptions:[t("extensions.supportUntrustedWorkspaces.true","Extension will always be enabled."),t("extensions.supportUntrustedWorkspaces.false","Extension will only be enabled only when the workspace is trusted."),t("extensions.supportUntrustedWorkspaces.limited","Extension will always be enabled, and the extension will hide functionality requiring trust.")],description:t("extensions.supportUntrustedWorkspaces.supported","Defines the untrusted workspace support setting for the extension.")},version:{type:"string",description:t("extensions.supportUntrustedWorkspaces.version","Defines the version of the extension for which the override should be applied. If not specified, the override will be applied independent of the extension version.")}}}}},"extensions.experimental.deferredStartupFinishedActivation":{type:"boolean",description:t("extensionsDeferredStartupFinishedActivation","When enabled, extensions which declare the `onStartupFinished` activation event will be activated after a timeout."),default:!1},"extensions.experimental.issueQuickAccess":{type:"boolean",description:t("extensionsInQuickAccess","When enabled, extensions can be searched for via Quick Access and report issues from there."),default:!0}}});const Et=M.as(Sn.Extensions.JSONContribution);Et.registerSchema(ct,at),q.registerCommand("_extensions.manage",(m,x,n,o,i)=>{const a=m.get(S),r=a.local.find(l=>I(l.identifier,{id:x}));if(r)a.open(r,{tab:n,preserveFocus:o,feature:i});else throw new Error(t("notFound","Extension '{0}' not found.",x))}),q.registerCommand("extension.open",async(m,x,n,o,i,a)=>{const r=m.get(S),l=m.get(se),[c]=await r.getExtensions([{id:x}],_.None);return c?r.open(c,{tab:n,preserveFocus:o,feature:i,sideByside:a}):l.executeCommand("_extensions.manage",x,n,o,i)}),q.registerCommand({id:"workbench.extensions.installExtension",metadata:{description:t("workbench.extensions.installExtension.description","Install the given extension"),args:[{name:"extensionIdOrVSIXUri",description:t("workbench.extensions.installExtension.arg.decription","Extension id or VSIX resource uri"),constraint:m=>typeof m=="string"||m instanceof oe},{name:"options",description:"(optional) Options for installing the extension. Object with the following properties: `installOnlyNewlyAddedFromExtensionPackVSIX`: When enabled, VS Code installs only newly added extensions from the extension pack VSIX. This option is considered only when installing VSIX. ",isOptional:!0,schema:{type:"object",properties:{installOnlyNewlyAddedFromExtensionPackVSIX:{type:"boolean",description:t("workbench.extensions.installExtension.option.installOnlyNewlyAddedFromExtensionPackVSIX","When enabled, VS Code installs only newly added extensions from the extension pack VSIX. This option is considered only while installing a VSIX."),default:!1},installPreReleaseVersion:{type:"boolean",description:t("workbench.extensions.installExtension.option.installPreReleaseVersion","When enabled, VS Code installs the pre-release version of the extension if available."),default:!1},donotSync:{type:"boolean",description:t("workbench.extensions.installExtension.option.donotSync","When enabled, VS Code do not sync this extension when Settings Sync is on."),default:!1},justification:{type:["string","object"],description:t("workbench.extensions.installExtension.option.justification","Justification for installing the extension. This is a string or an object that can be used to pass any information to the installation handlers. i.e. `{reason: 'This extension wants to open a URI', action: 'Open URI'}` will show a message box with the reason and action upon install.")},enable:{type:"boolean",description:t("workbench.extensions.installExtension.option.enable","When enabled, the extension will be enabled if it is installed but disabled. If the extension is already enabled, this has no effect."),default:!1},context:{type:"object",description:t("workbench.extensions.installExtension.option.context","Context for the installation. This is a JSON object that can be used to pass any information to the installation handlers. i.e. `{skipWalkthrough: true}` will skip opening the walkthrough upon install.")}}}}]},handler:async(m,x,n)=>{const o=m.get(S),i=m.get(Ze),a=m.get(Me);try{if(typeof x=="string"){const[r,l]=gn(x);if(o.local.find(d=>I(d.identifier,{id:r,uuid:l}))?.enablementState===Q.DisabledByExtensionKind){const[d]=await a.getExtensions([{id:r,preRelease:n?.installPreReleaseVersion}],_.None);if(!d)throw new Error(t("notFound","Extension '{0}' not found.",x));await i.installFromGallery(d,{isMachineScoped:n?.donotSync?!0:void 0,installPreReleaseVersion:n?.installPreReleaseVersion,installGivenVersion:!!l,context:{...n?.context,[De]:_e.COMMAND}})}else await o.install(x,{version:l,installPreReleaseVersion:n?.installPreReleaseVersion,context:{...n?.context,[De]:_e.COMMAND},justification:n?.justification,enable:n?.enable,isMachineScoped:n?.donotSync?!0:void 0},vn.Notification)}else{const r=oe.revive(x);await o.install(r,{installOnlyNewlyAddedFromExtensionPack:n?.installOnlyNewlyAddedFromExtensionPackVSIX,installGivenVersion:!0})}}catch(r){throw ke(r),r}}}),q.registerCommand({id:"workbench.extensions.uninstallExtension",metadata:{description:t("workbench.extensions.uninstallExtension.description","Uninstall the given extension"),args:[{name:t("workbench.extensions.uninstallExtension.arg.name","Id of the extension to uninstall"),schema:{type:"string"}}]},handler:async(m,x)=>{if(!x)throw new Error(t("id required","Extension id required."));const n=m.get(Le),o=await n.getInstalled(),[i]=o.filter(a=>I(a.identifier,{id:x}));if(!i)throw new Error(t("notInstalled","Extension '{0}' is not installed. Make sure you use the full extension ID, including the publisher, e.g.: ms-dotnettools.csharp.",x));if(i.isBuiltin)throw new Error(t("builtin","Extension '{0}' is a Built-in extension and cannot be installed",x));try{await n.uninstall(i)}catch(a){throw ke(a),a}}}),q.registerCommand({id:"workbench.extensions.search",metadata:{description:t("workbench.extensions.search.description","Search for a specific extension"),args:[{name:t("workbench.extensions.search.arg.name","Query to use in search"),schema:{type:"string"}}]},handler:async(m,x="")=>{const o=await m.get(ve).openPaneComposite(w,J.Sidebar,!0);o&&(o.getViewPaneContainer().search(x),o.focus())}});function Ie(m,x){m?.addImplementation(105,"extensions-editor",n=>{const i=n.get(we).activeEditorPane;return i instanceof de&&i.activeWebview?.isFocused?(x(i.activeWebview),!0):!1})}Ie(cn,m=>m.copy()),Ie(ln,m=>m.cut()),Ie(dn,m=>m.paste());const f=new re("hasLocalServer",!1),v=new re("hasRemoteServer",!1),A=new re("hasWebServer",!1);async function y(m){try{await m.run()}finally{an(m)&&m.dispose()}}let j=class extends rn{constructor(n,o,i,a,r,l,c,d,E){super();this.extensionManagementServerService=n;this.paneCompositeService=a;this.extensionsWorkbenchService=r;this.extensionEnablementService=l;this.instantiationService=c;this.dialogService=d;this.commandService=E;const g=p.bindTo(i);o.isEnabled()&&g.set(!0);const C=f.bindTo(i);this.extensionManagementServerService.localExtensionManagementServer&&C.set(!0);const R=v.bindTo(i);this.extensionManagementServerService.remoteExtensionManagementServer&&R.set(!0);const b=A.bindTo(i);this.extensionManagementServerService.webExtensionManagementServer&&b.set(!0),this.registerGlobalActions(),this.registerContextMenuActions(),this.registerQuickAccessProvider()}registerQuickAccessProvider(){(this.extensionManagementServerService.localExtensionManagementServer||this.extensionManagementServerService.remoteExtensionManagementServer||this.extensionManagementServerService.webExtensionManagementServer)&&M.as(Ue.Quickaccess).registerQuickAccessProvider({ctor:Be,prefix:Be.PREFIX,placeholder:t("installExtensionQuickAccessPlaceholder","Type the name of an extension to install or search."),helpEntries:[{description:t("installExtensionQuickAccessHelp","Install or Search Extensions")}]})}registerGlobalActions(){this._register(O.appendMenuItem(s.MenubarPreferencesMenu,{command:{id:w,title:t({key:"miPreferencesExtensions",comment:["&& denotes a mnemonic"]},"&&Extensions")},group:"2_configuration",order:3})),this._register(O.appendMenuItem(s.GlobalActivity,{command:{id:w,title:t("showExtensions","Extensions")},group:"2_configuration",order:3})),this.registerExtensionAction({id:"workbench.extensions.action.focusExtensionsView",title:u("focusExtensions","Focus on Extensions View"),category:h,f1:!0,run:async c=>{await c.get(ve).openPaneComposite(w,J.Sidebar,!0)}}),this.registerExtensionAction({id:"workbench.extensions.action.installExtensions",title:u("installExtensions","Install Extensions"),category:h,menu:{id:s.CommandPalette,when:e.and(p,e.or(f,v,A))},run:async c=>{c.get(ee).openViewContainer(w,!0)}}),this.registerExtensionAction({id:"workbench.extensions.action.showRecommendedKeymapExtensions",title:u("showRecommendedKeymapExtensionsShort","Keymaps"),category:Ne,menu:[{id:s.CommandPalette,when:p},{id:s.EditorTitle,when:e.and(dt,p),group:"2_keyboard_discover_actions"}],menuTitles:{[s.EditorTitle.id]:t("importKeyboardShortcutsFroms","Migrate Keyboard Shortcuts from...")},run:()=>y(this.instantiationService.createInstance(k,"@recommended:keymaps "))}),this.registerExtensionAction({id:"workbench.extensions.action.showLanguageExtensions",title:u("showLanguageExtensionsShort","Language Extensions"),category:Ne,menu:{id:s.CommandPalette,when:p},run:()=>y(this.instantiationService.createInstance(k,"@recommended:languages "))}),this.registerExtensionAction({id:"workbench.extensions.action.checkForUpdates",title:u("checkForUpdates","Check for Extension Updates"),category:h,menu:[{id:s.CommandPalette,when:e.and(p,e.or(f,v,A))},{id:s.ViewContainerTitle,when:e.and(e.equals("viewContainer",w),p),group:"1_updates",order:1}],run:async()=>(await this.extensionsWorkbenchService.checkForUpdates(),this.extensionsWorkbenchService.outdated.length?y(this.instantiationService.createInstance(k,"@outdated ")):this.dialogService.info(t("noUpdatesAvailable","All extensions are up to date.")))});const n=e.equals(`config.${L}`,!1);this.registerExtensionAction({id:"workbench.extensions.action.enableAutoUpdate",title:u("enableAutoUpdate","Enable Auto Update for All Extensions"),category:h,precondition:n,menu:[{id:s.ViewContainerTitle,order:5,group:"1_updates",when:e.and(e.equals("viewContainer",w),n)},{id:s.CommandPalette}],run:c=>c.get(S).updateAutoUpdateValue(!0)});const o=e.notEquals(`config.${L}`,!1);this.registerExtensionAction({id:"workbench.extensions.action.disableAutoUpdate",title:u("disableAutoUpdate","Disable Auto Update for All Extensions"),precondition:o,category:h,menu:[{id:s.ViewContainerTitle,order:5,group:"1_updates",when:e.and(e.equals("viewContainer",w),o)},{id:s.CommandPalette}],run:c=>c.get(S).updateAutoUpdateValue(!1)}),this.registerExtensionAction({id:"workbench.extensions.action.updateAllExtensions",title:u("updateAll","Update All Extensions"),category:h,precondition:tt,menu:[{id:s.CommandPalette,when:e.and(p,e.or(f,v,A))},{id:s.ViewContainerTitle,when:e.and(e.equals("viewContainer",w),e.or(e.has(`config.${L}`).negate(),e.equals(`config.${L}`,"onlyEnabledExtensions"))),group:"1_updates",order:2},{id:s.ViewTitle,when:e.equals("view",ot),group:"navigation",order:1}],icon:Xe,run:async()=>{const c=this.extensionsWorkbenchService.outdated;(await this.extensionsWorkbenchService.updateAll()).forEach(E=>{if(E.error){const g=c.find(C=>I(C.identifier,E.identifier));g&&y(this.instantiationService.createInstance(Nn,g,g.latestVersion,pn.Update,E.error))}})}}),this.registerExtensionAction({id:"workbench.extensions.action.enableAll",title:u("enableAll","Enable All Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(f,v,A)},{id:s.ViewContainerTitle,when:e.equals("viewContainer",w),group:"2_enablement",order:1}],run:async()=>{const c=this.extensionsWorkbenchService.local.filter(d=>!!d.local&&this.extensionEnablementService.canChangeEnablement(d.local)&&!this.extensionEnablementService.isEnabled(d.local));c.length&&await this.extensionsWorkbenchService.setEnablement(c,Q.EnabledGlobally)}}),this.registerExtensionAction({id:"workbench.extensions.action.enableAllWorkspace",title:u("enableAllWorkspace","Enable All Extensions for this Workspace"),category:h,menu:{id:s.CommandPalette,when:e.and(D.notEqualsTo("empty"),e.or(f,v,A))},run:async()=>{const c=this.extensionsWorkbenchService.local.filter(d=>!!d.local&&this.extensionEnablementService.canChangeEnablement(d.local)&&!this.extensionEnablementService.isEnabled(d.local));c.length&&await this.extensionsWorkbenchService.setEnablement(c,Q.EnabledWorkspace)}}),this.registerExtensionAction({id:"workbench.extensions.action.disableAll",title:u("disableAll","Disable All Installed Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(f,v,A)},{id:s.ViewContainerTitle,when:e.equals("viewContainer",w),group:"2_enablement",order:2}],run:async()=>{const c=this.extensionsWorkbenchService.local.filter(d=>!d.isBuiltin&&!!d.local&&this.extensionEnablementService.isEnabled(d.local)&&this.extensionEnablementService.canChangeEnablement(d.local));c.length&&await this.extensionsWorkbenchService.setEnablement(c,Q.DisabledGlobally)}}),this.registerExtensionAction({id:"workbench.extensions.action.disableAllWorkspace",title:u("disableAllWorkspace","Disable All Installed Extensions for this Workspace"),category:h,menu:{id:s.CommandPalette,when:e.and(D.notEqualsTo("empty"),e.or(f,v,A))},run:async()=>{const c=this.extensionsWorkbenchService.local.filter(d=>!d.isBuiltin&&!!d.local&&this.extensionEnablementService.isEnabled(d.local)&&this.extensionEnablementService.canChangeEnablement(d.local));c.length&&await this.extensionsWorkbenchService.setEnablement(c,Q.DisabledWorkspace)}}),this.registerExtensionAction({id:st,title:u("InstallFromVSIX","Install from VSIX..."),category:h,menu:[{id:s.CommandPalette,when:e.or(f,v)},{id:s.ViewContainerTitle,when:e.and(e.equals("viewContainer",w),e.or(f,v)),group:"3_install",order:1}],run:async c=>{const d=c.get(Ve),E=c.get(se),g=await d.showOpenDialog({title:t("installFromVSIX","Install from VSIX"),filters:[{name:"VSIX Extensions",extensions:["vsix"]}],canSelectFiles:!0,canSelectMany:!0,openLabel:sn(t({key:"installButton",comment:["&& denotes a mnemonic"]},"&&Install"))});g&&await E.executeCommand($e,g)}}),this.registerExtensionAction({id:$e,title:t("installVSIX","Install Extension VSIX"),menu:[{id:s.ExplorerContext,group:"extensions",when:e.and(Rn.Extension.isEqualTo(".vsix"),e.or(f,v))}],run:async(c,d)=>{const E=c.get(S),g=c.get(pt),C=c.get(wn),R=Array.isArray(d)?d:[d],b=await Promise.allSettled(R.map(async N=>await E.install(N,{installGivenVersion:!0})));let U,ne=!1,te=!1;for(const N of b){if(N.status==="rejected"){U=new Error(N.reason);break}ne=ne||N.value.runtimeState?.action===Qe.ReloadWindow,te=te||N.value.runtimeState?.action===Qe.RestartExtensions}if(U)throw U;ne?C.prompt(le.Info,t("InstallVSIXAction.successReload","Completed installing extension from VSIX. Please reload Visual Studio Code to enable it."),[{label:t("InstallVSIXAction.reloadNow","Reload Now"),run:()=>g.reload()}]):te?C.prompt(le.Info,t("InstallVSIXAction.successRestart","Completed installing extension from VSIX. Please restart extensions to enable it."),[{label:t("InstallVSIXAction.restartExtensions","Restart Extensions"),run:()=>E.updateRunningExtensions()}]):C.prompt(le.Info,t("InstallVSIXAction.successNoReload","Completed installing extension."),[])}}),this.registerExtensionAction({id:"workbench.extensions.action.installExtensionFromLocation",title:u("installExtensionFromLocation","Install Extension from Location..."),category:We.Developer,menu:[{id:s.CommandPalette,when:e.or(A,f)}],run:async c=>{const d=c.get(Ze);if(Re)return new Promise((E,g)=>{const C=c.get(yn),R=new Ce,b=R.add(C.createQuickPick());b.title=t("installFromLocation","Install Extension from Location"),b.customButton=!0,b.customLabel=t("install button","Install"),b.placeholder=t("installFromLocationPlaceHolder","Location of the web extension"),b.ignoreFocusOut=!0,R.add(tn.any(b.onDidAccept,b.onDidCustom)(async()=>{if(b.hide(),b.value)try{await d.installFromLocation(oe.parse(b.value))}catch(U){g(U);return}E()})),R.add(b.onDidHide(()=>R.dispose())),b.show()});{const g=await c.get(Ve).showOpenDialog({canSelectFolders:!0,canSelectFiles:!1,canSelectMany:!1,title:t("installFromLocation","Install Extension from Location")});g?.[0]&&await d.installFromLocation(g[0])}}});const i=new s("extensionsFilterSubMenu");O.appendMenuItem(je,{submenu:i,title:t("filterExtensions","Filter Extensions..."),group:"navigation",order:2,icon:Gn}),this.registerExtensionAction({id:"extensions.filter.featured",title:u("showFeaturedExtensions","Show Featured Extensions"),category:h,menu:[{id:s.CommandPalette,when:p},{id:i,when:p,group:"1_predefined",order:1}],menuTitles:{[i.id]:t("featured filter","Featured")},run:()=>y(this.instantiationService.createInstance(k,"@featured "))}),this.registerExtensionAction({id:"workbench.extensions.action.showPopularExtensions",title:u("showPopularExtensions","Show Popular Extensions"),category:h,menu:[{id:s.CommandPalette,when:p},{id:i,when:p,group:"1_predefined",order:2}],menuTitles:{[i.id]:t("most popular filter","Most Popular")},run:()=>y(this.instantiationService.createInstance(k,"@popular "))}),this.registerExtensionAction({id:"workbench.extensions.action.showRecommendedExtensions",title:u("showRecommendedExtensions","Show Recommended Extensions"),category:h,menu:[{id:s.CommandPalette,when:p},{id:i,when:p,group:"1_predefined",order:2}],menuTitles:{[i.id]:t("most popular recommended","Recommended")},run:()=>y(this.instantiationService.createInstance(k,"@recommended "))}),this.registerExtensionAction({id:"workbench.extensions.action.recentlyPublishedExtensions",title:u("recentlyPublishedExtensions","Show Recently Published Extensions"),category:h,menu:[{id:s.CommandPalette,when:p},{id:i,when:p,group:"1_predefined",order:2}],menuTitles:{[i.id]:t("recently published filter","Recently Published")},run:()=>y(this.instantiationService.createInstance(k,"@recentlyPublished "))});const r=new s("extensionsCategoryFilterSubMenu");O.appendMenuItem(i,{submenu:r,title:t("filter by category","Category"),when:p,group:"2_categories",order:1}),bn.forEach((c,d)=>{this.registerExtensionAction({id:`extensions.actions.searchByCategory.${c}`,title:c,menu:[{id:r,when:p,order:d}],run:()=>y(this.instantiationService.createInstance(k,`@category:"${c.toLowerCase()}"`))})}),this.registerExtensionAction({id:"workbench.extensions.action.listBuiltInExtensions",title:u("showBuiltInExtensions","Show Built-in Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(f,v,A)},{id:i,group:"3_installed",order:2}],menuTitles:{[i.id]:t("builtin filter","Built-in")},run:()=>y(this.instantiationService.createInstance(k,"@builtin "))}),this.registerExtensionAction({id:"workbench.extensions.action.extensionUpdates",title:u("extensionUpdates","Show Extension Updates"),category:h,precondition:p,f1:!0,menu:[{id:i,group:"3_installed",when:p,order:1}],menuTitles:{[i.id]:t("extension updates filter","Updates")},run:()=>y(this.instantiationService.createInstance(k,"@updates"))}),this.registerExtensionAction({id:it,title:u("showWorkspaceUnsupportedExtensions","Show Extensions Unsupported By Workspace"),category:h,menu:[{id:s.CommandPalette,when:e.or(f,v)},{id:i,group:"3_installed",order:5,when:e.or(f,v)}],menuTitles:{[i.id]:t("workspace unsupported filter","Workspace Unsupported")},run:()=>y(this.instantiationService.createInstance(k,"@workspaceUnsupported"))}),this.registerExtensionAction({id:"workbench.extensions.action.showEnabledExtensions",title:u("showEnabledExtensions","Show Enabled Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(f,v,A)},{id:i,group:"3_installed",order:3}],menuTitles:{[i.id]:t("enabled filter","Enabled")},run:()=>y(this.instantiationService.createInstance(k,"@enabled "))}),this.registerExtensionAction({id:"workbench.extensions.action.showDisabledExtensions",title:u("showDisabledExtensions","Show Disabled Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(f,v,A)},{id:i,group:"3_installed",order:4}],menuTitles:{[i.id]:t("disabled filter","Disabled")},run:()=>y(this.instantiationService.createInstance(k,"@disabled "))});const l=new s("extensionsSortSubMenu");O.appendMenuItem(i,{submenu:l,title:t("sorty by","Sort By"),when:e.and(e.or(p,He)),group:"4_sort",order:1}),[{id:"installs",title:t("sort by installs","Install Count"),precondition:H.negate()},{id:"rating",title:t("sort by rating","Rating"),precondition:H.negate()},{id:"name",title:t("sort by name","Name"),precondition:H.negate()},{id:"publishedDate",title:t("sort by published date","Published Date"),precondition:H.negate()},{id:"updateDate",title:t("sort by update date","Updated Date"),precondition:e.and(Jn.negate(),zn.negate(),H.negate())}].map(({id:c,title:d,precondition:E},g)=>{this.registerExtensionAction({id:`extensions.sort.${c}`,title:d,precondition:E,menu:[{id:l,when:e.or(p,He),order:g}],toggled:Kn.isEqualTo(c),run:async()=>{const R=(await this.paneCompositeService.openPaneComposite(w,J.Sidebar,!0))?.getViewPaneContainer(),b=Ke.parse(R.searchValue||"");R.search(new Ke(b.value,c).toString()),R.focus()}})}),this.registerExtensionAction({id:"workbench.extensions.action.clearExtensionsSearchResults",title:u("clearExtensionsSearchResults","Clear Extensions Search Results"),category:h,icon:Fn,f1:!0,precondition:Zn,menu:{id:je,group:"navigation",order:1},run:async c=>{const d=c.get(ee).getActiveViewPaneContainerWithId(w);if(d){const E=d;E.search(""),E.focus()}}}),this.registerExtensionAction({id:"workbench.extensions.action.refreshExtension",title:u("refreshExtension","Refresh"),category:h,icon:Hn,f1:!0,menu:{id:s.ViewContainerTitle,when:e.equals("viewContainer",w),group:"navigation",order:2},run:async c=>{const d=c.get(ee).getActiveViewPaneContainerWithId(w);d&&await d.refresh()}}),this.registerExtensionAction({id:"workbench.extensions.action.installWorkspaceRecommendedExtensions",title:t("installWorkspaceRecommendedExtensions","Install Workspace Recommended Extensions"),icon:Xe,menu:{id:s.ViewTitle,when:e.equals("view",be),group:"navigation",order:1},run:async c=>c.get(ee).getActiveViewWithId(be).installWorkspaceRecommendations()}),this.registerExtensionAction({id:F.ID,title:F.LABEL,icon:Xn,menu:[{id:s.CommandPalette,when:D.notEqualsTo("empty")},{id:s.ViewTitle,when:e.equals("view",be),group:"navigation",order:2}],run:()=>y(this.instantiationService.createInstance(F,F.ID,F.LABEL))}),this.registerExtensionAction({id:B.ID,title:{value:B.LABEL,original:"Install Specific Version of Extension..."},category:h,menu:{id:s.CommandPalette,when:e.and(p,e.or(f,v,A))},run:()=>y(this.instantiationService.createInstance(B,B.ID,B.LABEL))}),this.registerExtensionAction({id:G.ID,title:{value:G.LABEL,original:"Reinstall Extension..."},category:We.Developer,menu:{id:s.CommandPalette,when:e.and(p,e.or(f,v))},run:()=>y(this.instantiationService.createInstance(G,G.ID,G.LABEL))})}registerContextMenuActions(){this.registerExtensionAction({id:xe.ID,title:xe.TITLE,menu:{id:s.ExtensionContext,group:fe,order:0,when:e.and(e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.has("extensionHasColorThemes"))},run:async(n,o)=>{const i=n.get(S),a=n.get(P),r=i.local.find(l=>I(l.identifier,{id:o}));if(r){const l=a.createInstance(xe);return l.extension=r,l.run()}}}),this.registerExtensionAction({id:he.ID,title:he.TITLE,menu:{id:s.ExtensionContext,group:fe,order:0,when:e.and(e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.has("extensionHasFileIconThemes"))},run:async(n,o)=>{const i=n.get(S),a=n.get(P),r=i.local.find(l=>I(l.identifier,{id:o}));if(r){const l=a.createInstance(he);return l.extension=r,l.run()}}}),this.registerExtensionAction({id:pe.ID,title:pe.TITLE,menu:{id:s.ExtensionContext,group:fe,order:0,when:e.and(e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.has("extensionHasProductIconThemes"))},run:async(n,o)=>{const i=n.get(S),a=n.get(P),r=i.local.find(l=>I(l.identifier,{id:o}));if(r){const l=a.createInstance(pe);return l.extension=r,l.run()}}}),this.registerExtensionAction({id:"workbench.extensions.action.showPreReleaseVersion",title:u("show pre-release version","Show Pre-Release Version"),menu:{id:s.ExtensionContext,group:K,order:0,when:e.and(e.has("inExtensionEditor"),e.has("galleryExtensionHasPreReleaseVersion"),e.not("showPreReleaseVersion"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(S),a=(await i.getExtensions([{id:o}],_.None))[0];i.open(a,{showPreReleaseVersion:!0})}}),this.registerExtensionAction({id:"workbench.extensions.action.showReleasedVersion",title:u("show released version","Show Release Version"),menu:{id:s.ExtensionContext,group:K,order:1,when:e.and(e.has("inExtensionEditor"),e.has("galleryExtensionHasPreReleaseVersion"),e.has("extensionHasReleaseVersion"),e.has("showPreReleaseVersion"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(S),a=(await i.getExtensions([{id:o}],_.None))[0];i.open(a,{showPreReleaseVersion:!1})}}),this.registerExtensionAction({id:ge.ID,title:ge.LABEL,category:h,precondition:e.and(e.or(e.notEquals(`config.${L}`,"onlyEnabledExtensions"),e.equals("isExtensionEnabled",!0)),e.not("extensionDisallowInstall")),menu:{id:s.ExtensionContext,group:ze,order:1,when:e.and(e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(P),r=n.get(S).local.find(l=>I(l.identifier,{id:o}));if(r){const l=i.createInstance(ge);return l.extension=r,l.run()}}}),this.registerExtensionAction({id:Ee.ID,title:{value:Ee.LABEL,original:"Auto Update (Publisher)"},category:h,precondition:e.equals(`config.${L}`,!1),menu:{id:s.ExtensionContext,group:ze,order:2,when:e.and(e.equals("extensionStatus","installed"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(P),r=n.get(S).local.find(l=>I(l.identifier,{id:o}));if(r){const l=i.createInstance(Ee);return l.extension=r,l.run()}}}),this.registerExtensionAction({id:"workbench.extensions.action.switchToPreRlease",title:t("enablePreRleaseLabel","Switch to Pre-Release Version"),category:h,menu:{id:s.ExtensionContext,group:K,order:2,when:e.and(p,e.has("galleryExtensionHasPreReleaseVersion"),e.not("installedExtensionIsOptedToPreRelease"),e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(P),r=n.get(S).local.find(l=>I(l.identifier,{id:o}));if(r){const l=i.createInstance(Fe);return l.extension=r,l.run()}}}),this.registerExtensionAction({id:"workbench.extensions.action.switchToRelease",title:t("disablePreRleaseLabel","Switch to Release Version"),category:h,menu:{id:s.ExtensionContext,group:K,order:2,when:e.and(p,e.has("galleryExtensionHasPreReleaseVersion"),e.has("installedExtensionIsOptedToPreRelease"),e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(P),r=n.get(S).local.find(l=>I(l.identifier,{id:o}));if(r){const l=i.createInstance(Fe);return l.extension=r,l.run()}}}),this.registerExtensionAction({id:ue.ID,title:ue.TITLE,menu:{id:s.ExtensionContext,group:K,order:0,when:e.and(e.not("inExtensionEditor"),e.has("canSetLanguage"),e.has("isActiveLanguagePackExtension"))},run:async(n,o)=>{const i=n.get(P),r=(await n.get(S).getExtensions([{id:o}],_.None))[0],l=i.createInstance(ue);return l.extension=r,l.run()}}),this.registerExtensionAction({id:"workbench.extensions.action.installAndDonotSync",title:t("install installAndDonotSync","Install (Do not Sync)"),menu:{id:s.ExtensionContext,group:"0_install",when:e.and(e.equals("extensionStatus","uninstalled"),e.has("isGalleryExtension"),e.not("extensionDisallowInstall"),ye),order:1},run:async(n,o)=>{const i=n.get(P),a=this.extensionsWorkbenchService.local.filter(r=>I(r.identifier,{id:o}))[0]||(await this.extensionsWorkbenchService.getExtensions([{id:o}],_.None))[0];if(a){const r=i.createInstance(qe,{isMachineScoped:!0});return r.extension=a,r.run()}}}),this.registerExtensionAction({id:"workbench.extensions.action.installPrereleaseAndDonotSync",title:t("installPrereleaseAndDonotSync","Install Pre-Release (Do not Sync)"),menu:{id:s.ExtensionContext,group:"0_install",when:e.and(e.equals("extensionStatus","uninstalled"),e.has("isGalleryExtension"),e.has("extensionHasPreReleaseVersion"),e.not("extensionDisallowInstall"),ye),order:2},run:async(n,o)=>{const i=n.get(P),a=this.extensionsWorkbenchService.local.filter(r=>I(r.identifier,{id:o}))[0]||(await this.extensionsWorkbenchService.getExtensions([{id:o}],_.None))[0];if(a){const r=i.createInstance(qe,{isMachineScoped:!0,preRelease:!0});return r.extension=a,r.run()}}}),this.registerExtensionAction({id:me.ID,title:me.LABEL,menu:{id:s.ExtensionContext,group:"0_install",when:e.and(e.equals("extensionStatus","uninstalled"),e.has("isGalleryExtension"),e.not("extensionDisallowInstall")),order:3},run:async(n,o)=>{const i=n.get(P),a=this.extensionsWorkbenchService.local.filter(r=>I(r.identifier,{id:o}))[0]||(await this.extensionsWorkbenchService.getExtensions([{id:o}],_.None))[0];if(a)return i.createInstance(me,a,!1).run()}}),this.registerExtensionAction({id:"workbench.extensions.action.copyExtension",title:u("workbench.extensions.action.copyExtension","Copy"),menu:{id:s.ExtensionContext,group:"1_copy"},run:async(n,o)=>{const i=n.get(Te),a=this.extensionsWorkbenchService.local.filter(r=>I(r.identifier,{id:o}))[0]||(await this.extensionsWorkbenchService.getExtensions([{id:o}],_.None))[0];if(a){const r=t("extensionInfoName","Name: {0}",a.displayName),l=t("extensionInfoId","Id: {0}",o),c=t("extensionInfoDescription","Description: {0}",a.description),d=t("extensionInfoVersion","Version: {0}",a.version),E=t("extensionInfoPublisher","Publisher: {0}",a.publisherDisplayName),g=a.url?t("extensionInfoVSMarketplaceLink","VS Marketplace Link: {0}",`${a.url}`):null,C=`${r}
${l}
${c}
${d}
${E}${g?`
`+g:""}`;await i.writeText(C)}}}),this.registerExtensionAction({id:"workbench.extensions.action.copyExtensionId",title:u("workbench.extensions.action.copyExtensionId","Copy Extension ID"),menu:{id:s.ExtensionContext,group:"1_copy"},run:async(n,o)=>n.get(Te).writeText(o)}),this.registerExtensionAction({id:"workbench.extensions.action.configure",title:u("workbench.extensions.action.configure","Extension Settings"),menu:{id:s.ExtensionContext,group:"2_configure",when:e.and(e.equals("extensionStatus","installed"),e.has("extensionHasConfiguration")),order:1},run:async(n,o)=>n.get(Ye).openSettings({jsonEditor:!1,query:`@ext:${o}`})}),this.registerExtensionAction({id:"workbench.extensions.action.configureKeybindings",title:u("workbench.extensions.action.configureKeybindings","Extension Keyboard Shortcuts"),menu:{id:s.ExtensionContext,group:"2_configure",when:e.and(e.equals("extensionStatus","installed"),e.has("extensionHasKeybindings")),order:2},run:async(n,o)=>n.get(Ye).openGlobalKeybindingSettings(!1,{query:`@ext:${o}`})}),this.registerExtensionAction({id:"workbench.extensions.action.toggleApplyToAllProfiles",title:u("workbench.extensions.action.toggleApplyToAllProfiles","Apply Extension to all Profiles"),toggled:e.has("isApplicationScopedExtension"),menu:{id:s.ExtensionContext,group:"2_configure",when:e.and(e.equals("extensionStatus","installed"),e.has("isDefaultApplicationScopedExtension").negate(),e.has("isBuiltinExtension").negate(),e.equals("isWorkspaceScopedExtension",!1)),order:3},run:async(n,o,i)=>{const a=n.get(kn),r=i.location?this.extensionsWorkbenchService.installed.find(l=>a.extUri.isEqual(l.local?.location,i.location)):void 0;if(r)return this.extensionsWorkbenchService.toggleApplyExtensionToAllProfiles(r)}}),this.registerExtensionAction({id:rt,title:u("workbench.extensions.action.toggleIgnoreExtension","Sync This Extension"),menu:{id:s.ExtensionContext,group:"2_configure",when:e.and(e.equals("extensionStatus","installed"),ye,e.equals("isWorkspaceScopedExtension",!1)),order:4},run:async(n,o)=>{const i=this.extensionsWorkbenchService.local.find(a=>I({id:o},a.identifier));if(i)return this.extensionsWorkbenchService.toggleExtensionIgnoredToSync(i)}}),this.registerExtensionAction({id:"workbench.extensions.action.ignoreRecommendation",title:u("workbench.extensions.action.ignoreRecommendation","Ignore Recommendation"),menu:{id:s.ExtensionContext,group:"3_recommendations",when:e.has("isExtensionRecommended"),order:1},run:async(n,o)=>n.get(Je).toggleGlobalIgnoredRecommendation(o,!0)}),this.registerExtensionAction({id:"workbench.extensions.action.undoIgnoredRecommendation",title:u("workbench.extensions.action.undoIgnoredRecommendation","Undo Ignored Recommendation"),menu:{id:s.ExtensionContext,group:"3_recommendations",when:e.has("isUserIgnoredRecommendation"),order:1},run:async(n,o)=>n.get(Je).toggleGlobalIgnoredRecommendation(o,!1)}),this.registerExtensionAction({id:"workbench.extensions.action.addExtensionToWorkspaceRecommendations",title:u("workbench.extensions.action.addExtensionToWorkspaceRecommendations","Add to Workspace Recommendations"),menu:{id:s.ExtensionContext,group:"3_recommendations",when:e.and(D.notEqualsTo("empty"),e.has("isBuiltinExtension").negate(),e.has("isExtensionWorkspaceRecommended").negate(),e.has("isUserIgnoredRecommendation").negate(),e.notEquals("extensionSource","resource")),order:2},run:(n,o)=>n.get(Y).toggleRecommendation(o)}),this.registerExtensionAction({id:"workbench.extensions.action.removeExtensionFromWorkspaceRecommendations",title:u("workbench.extensions.action.removeExtensionFromWorkspaceRecommendations","Remove from Workspace Recommendations"),menu:{id:s.ExtensionContext,group:"3_recommendations",when:e.and(D.notEqualsTo("empty"),e.has("isBuiltinExtension").negate(),e.has("isExtensionWorkspaceRecommended")),order:2},run:(n,o)=>n.get(Y).toggleRecommendation(o)}),this.registerExtensionAction({id:"workbench.extensions.action.addToWorkspaceRecommendations",title:u("workbench.extensions.action.addToWorkspaceRecommendations","Add Extension to Workspace Recommendations"),category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:e.and(D.isEqualTo("workspace"),e.equals("resourceScheme",z.extension))},async run(n){const o=n.get(we),i=n.get(Y);if(!(o.activeEditor instanceof Se))return;const a=o.activeEditor.extension.identifier.id.toLowerCase();(await i.getRecommendations()).includes(a)||await i.toggleRecommendation(a)}}),this.registerExtensionAction({id:"workbench.extensions.action.addToWorkspaceFolderRecommendations",title:u("workbench.extensions.action.addToWorkspaceFolderRecommendations","Add Extension to Workspace Folder Recommendations"),category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:e.and(D.isEqualTo("folder"),e.equals("resourceScheme",z.extension))},run:()=>this.commandService.executeCommand("workbench.extensions.action.addToWorkspaceRecommendations")}),this.registerExtensionAction({id:"workbench.extensions.action.addToWorkspaceIgnoredRecommendations",title:u("workbench.extensions.action.addToWorkspaceIgnoredRecommendations","Add Extension to Workspace Ignored Recommendations"),category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:e.and(D.isEqualTo("workspace"),e.equals("resourceScheme",z.extension))},async run(n){const o=n.get(we),i=n.get(Y);if(!(o.activeEditor instanceof Se))return;const a=o.activeEditor.extension.identifier.id.toLowerCase();(await i.getUnwantedRecommendations()).includes(a)||await i.toggleUnwantedRecommendation(a)}}),this.registerExtensionAction({id:"workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations",title:u("workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations","Add Extension to Workspace Folder Ignored Recommendations"),category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:e.and(D.isEqualTo("folder"),e.equals("resourceScheme",z.extension))},run:()=>this.commandService.executeCommand("workbench.extensions.action.addToWorkspaceIgnoredRecommendations")}),this.registerExtensionAction({id:X.ID,title:{value:X.LABEL,original:"Configure Recommended Extensions (Workspace)"},category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:D.isEqualTo("workspace")},run:()=>y(this.instantiationService.createInstance(X,X.ID,X.LABEL))})}registerExtensionAction(n){const o=n.menu?Array.isArray(n.menu)?n.menu:[n.menu]:[];let i=[];const a=[];if(n.menuTitles)for(let l=0;l<o.length;l++){const c=o[l],d=n.menuTitles[c.id.id];d?a.push({id:c.id,item:{...c,command:{id:n.id,title:d}}}):i.push(c)}else i=o;const r=new Ce;return r.add(Pe(class extends un{constructor(){super({...n,menu:i})}run(l,...c){return n.run(l,...c)}})),a.length&&r.add(O.appendMenuItems(a)),r}};j=ie([W(0,mt),W(1,Me),W(2,xn),W(3,ve),W(4,S),W(5,xt),W(6,P),W(7,hn),W(8,se)],j);let $=class{constructor(x,n){En.removeOutdatedExtensionVersions(x,n)}};$=ie([W(0,Le),W(1,In)],$);const V=M.as(Wn.Workbench);V.registerWorkbenchContribution(j,T.Restored),V.registerWorkbenchContribution(Yn,T.Eventually),V.registerWorkbenchContribution($n,T.Eventually),V.registerWorkbenchContribution(lt,T.Restored),V.registerWorkbenchContribution(Qn,T.Restored),V.registerWorkbenchContribution(On,T.Eventually),V.registerWorkbenchContribution(qn,T.Eventually),V.registerWorkbenchContribution(_n,T.Restored),V.registerWorkbenchContribution(Un,T.Restored),V.registerWorkbenchContribution(nt,T.Eventually),V.registerWorkbenchContribution(Dn,T.Eventually),Re&&V.registerWorkbenchContribution($,T.Eventually),Pe(Vn),M.as(Cn.ConfigurationMigration).registerConfigurationMigrations([{key:L,migrateFn:(m,x)=>m==="onlySelectedExtensions"?{value:!1}:[]}]);export{f as CONTEXT_HAS_LOCAL_SERVER,v as CONTEXT_HAS_REMOTE_SERVER,A as CONTEXT_HAS_WEB_SERVER};
