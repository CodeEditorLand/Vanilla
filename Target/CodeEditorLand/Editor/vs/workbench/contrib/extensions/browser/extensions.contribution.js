var Ze=Object.defineProperty;var Je=Object.getOwnPropertyDescriptor;var ne=(x,m,n,o)=>{for(var i=o>1?void 0:o?Je(m,n):m,a=x.length-1,r;a>=0;a--)(r=x[a])&&(i=(o?r(m,n,i):r(i))||i);return o&&i&&Ze(m,n,i),i},A=(x,m)=>(n,o)=>m(n,o,x);import{CancellationToken as V}from"../../../../base/common/cancellation.js";import{onUnexpectedError as ye}from"../../../../base/common/errors.js";import{Event as Ye}from"../../../../base/common/event.js";import{KeyCode as en,KeyMod as ve}from"../../../../base/common/keyCodes.js";import{mnemonicButtonLabel as nn}from"../../../../base/common/labels.js";import{Disposable as tn,DisposableStore as Ie,isDisposable as on}from"../../../../base/common/lifecycle.js";import{Schemas as z}from"../../../../base/common/network.js";import{isLinux as sn,isNative as rn,isWeb as ke}from"../../../../base/common/platform.js";import{URI as te}from"../../../../base/common/uri.js";import{CopyAction as an,CutAction as cn,PasteAction as ln}from"../../../../editor/contrib/clipboard/browser/clipboard.js";import{localize as t,localize2 as u}from"../../../../nls.js";import{Categories as Ae}from"../../../../platform/action/common/actionCommonCategories.js";import{Action2 as dn,MenuId as s,MenuRegistry as L,registerAction2 as Ce}from"../../../../platform/actions/common/actions.js";import{IClipboardService as Re}from"../../../../platform/clipboard/common/clipboardService.js";import{CommandsRegistry as O,ICommandService as ie}from"../../../../platform/commands/common/commands.js";import{Extensions as un,ConfigurationScope as U}from"../../../../platform/configuration/common/configurationRegistry.js";import{ContextKeyExpr as e,IContextKeyService as xn,RawContextKey as oe}from"../../../../platform/contextkey/common/contextkey.js";import{IDialogService as mn,IFileDialogService as We}from"../../../../platform/dialogs/common/dialogs.js";import{EXTENSION_INSTALL_SOURCE_CONTEXT as Te,ExtensionInstallSource as Pe,ExtensionsLocalizedLabel as h,IExtensionGalleryService as Ve,IExtensionManagementService as De,PreferencesLocalizedLabel as _e}from"../../../../platform/extensionManagement/common/extensionManagement.js";import{areSameExtensions as v,getIdAndVersion as hn}from"../../../../platform/extensionManagement/common/extensionManagementUtil.js";import{ExtensionStorageService as pn}from"../../../../platform/extensionManagement/common/extensionStorage.js";import{IExtensionRecommendationNotificationService as gn}from"../../../../platform/extensionRecommendations/common/extensionRecommendations.js";import{EXTENSION_CATEGORIES as En}from"../../../../platform/extensions/common/extensions.js";import{SyncDescriptor as Me}from"../../../../platform/instantiation/common/descriptors.js";import{InstantiationType as se,registerSingleton as re}from"../../../../platform/instantiation/common/extensions.js";import{IInstantiationService as C}from"../../../../platform/instantiation/common/instantiation.js";import*as bn from"../../../../platform/jsonschemas/common/jsonContributionRegistry.js";import{INotificationService as fn,Severity as ae}from"../../../../platform/notification/common/notification.js";import{ProgressLocation as Sn}from"../../../../platform/progress/common/progress.js";import{Extensions as Le}from"../../../../platform/quickinput/common/quickAccess.js";import{IQuickInputService as wn}from"../../../../platform/quickinput/common/quickInput.js";import{Registry as D}from"../../../../platform/registry/common/platform.js";import{IStorageService as yn}from"../../../../platform/storage/common/storage.js";import{IUriIdentityService as vn}from"../../../../platform/uriIdentity/common/uriIdentity.js";import{EditorPaneDescriptor as In}from"../../../browser/editor.js";import{Extensions as kn}from"../../../common/configuration.js";import{ResourceContextKey as An,WorkbenchStateContext as P}from"../../../common/contextkeys.js";import{Extensions as Cn}from"../../../common/contributions.js";import{EditorExtensions as Rn}from"../../../common/editor.js";import{Extensions as Wn,ViewContainerLocation as Tn}from"../../../common/views.js";import{IEditorService as ce}from"../../../services/editor/common/editorService.js";import{EnablementState as q,IExtensionManagementServerService as Pn,IWorkbenchExtensionEnablementService as Vn,IWorkbenchExtensionManagementService as Ne,extensionsConfigurationNodeBase as Dn}from"../../../services/extensionManagement/common/extensionManagement.js";import{IExtensionIgnoredRecommendationsService as Oe,IExtensionRecommendationsService as _n}from"../../../services/extensionRecommendations/common/extensionRecommendations.js";import{IWorkspaceExtensionsConfigService as Z}from"../../../services/extensionRecommendations/common/workspaceExtensionsConfig.js";import{IHostService as Mn}from"../../../services/host/browser/host.js";import{LifecyclePhase as R}from"../../../services/lifecycle/common/lifecycle.js";import{IPreferencesService as Ue}from"../../../services/preferences/common/preferences.js";import{CONTEXT_SYNC_ENABLEMENT as le}from"../../../services/userDataSync/common/userDataSync.js";import{IViewsService as F}from"../../../services/views/common/viewsService.js";import{WORKSPACE_TRUST_EXTENSION_SUPPORT as Ln}from"../../../services/workspaces/common/workspaceTrust.js";import{CONTEXT_KEYBINDINGS_EDITOR as Nn}from"../../preferences/common/preferences.js";import{Query as qe}from"../common/extensionQuery.js";import{AutoUpdateConfigurationKey as _,CONTEXT_HAS_GALLERY as p,ExtensionRuntimeActionType as Fe,HasOutdatedExtensionsContext as On,IExtensionsWorkbenchService as g,INSTALL_ACTIONS_GROUP as X,INSTALL_EXTENSION_FROM_VSIX_COMMAND_ID as Xe,LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID as Un,OUTDATED_EXTENSIONS_VIEW_ID as qn,SELECT_INSTALL_VSIX_EXTENSION_COMMAND_ID as Fn,THEME_ACTIONS_GROUP as de,TOGGLE_IGNORE_EXTENSION_ACTION_ID as Xn,UPDATE_ACTIONS_GROUP as Be,VIEWLET_ID as w,WORKSPACE_RECOMMENDATIONS_VIEW_ID as ue,extensionsSearchActionsMenu as Ge}from"../common/extensions.js";import{ExtensionsConfigurationSchema as Bn,ExtensionsConfigurationSchemaId as Gn}from"../common/extensionsFileTemplate.js";import{ExtensionsInput as xe}from"../common/extensionsInput.js";import{KeymapExtensions as Hn}from"../common/extensionsUtils.js";import{ShowRuntimeExtensionsAction as jn}from"./abstractRuntimeExtensionsEditor.js";import{DeprecatedExtensionsChecker as Kn}from"./deprecatedExtensionsChecker.js";import{ExtensionEditor as me}from"./extensionEditor.js";import{ExtensionEnablementWorkspaceTrustTransitionParticipant as Qn}from"./extensionEnablementWorkspaceTrustTransitionParticipant.js";import{ExtensionRecommendationNotificationService as $n}from"./extensionRecommendationNotificationService.js";import{ExtensionRecommendationsService as zn}from"./extensionRecommendationsService.js";import{ClearLanguageAction as he,ConfigureWorkspaceFolderRecommendedExtensionsAction as B,ConfigureWorkspaceRecommendedExtensionsAction as G,InstallAction as He,InstallAnotherVersionAction as pe,InstallSpecificVersionOfExtensionAction as H,ReinstallAction as j,SetColorThemeAction as ge,SetFileIconThemeAction as Ee,SetProductIconThemeAction as be,ToggleAutoUpdateForExtensionAction as fe,ToggleAutoUpdatesForPublisherAction as Se,TogglePreReleaseExtensionAction as je}from"./extensionsActions.js";import{ExtensionActivationProgress as Zn}from"./extensionsActivationProgress.js";import{ExtensionsCompletionItemsProvider as Jn}from"./extensionsCompletionItemsProvider.js";import{ExtensionDependencyChecker as Yn}from"./extensionsDependencyChecker.js";import{clearSearchResultsIcon as et,configureRecommendedIcon as nt,extensionsViewIcon as tt,filterIcon as it,installWorkspaceRecommendedIcon as Ke,refreshIcon as ot}from"./extensionsIcons.js";import{InstallExtensionQuickAccessProvider as Qe,ManageExtensionsQuickAccessProvider as $e}from"./extensionsQuickAccess.js";import{BuiltInExtensionsContext as K,DefaultViewsContext as ze,ExtensionsSortByContext as st,ExtensionsViewPaneContainer as rt,ExtensionsViewletViewsContribution as at,MaliciousExtensionChecker as ct,RecommendedExtensionsContext as lt,SearchHasTextContext as dt,SearchMarketplaceExtensionsContext as ut,StatusUpdater as xt}from"./extensionsViewlet.js";import{ExtensionsWorkbenchService as mt}from"./extensionsWorkbenchService.js";import{UnsupportedExtensionsMigrationContrib as ht}from"./unsupportedExtensionsMigrationContribution.js";re(g,mt,se.Eager),re(gn,$n,se.Delayed),re(_n,zn,se.Eager),D.as(Le.Quickaccess).registerQuickAccessProvider({ctor:$e,prefix:$e.PREFIX,placeholder:t("manageExtensionsQuickAccessPlaceholder","Press Enter to manage extensions."),helpEntries:[{description:t("manageExtensionsHelp","Manage Extensions")}]}),D.as(Rn.EditorPane).registerEditorPane(In.create(me,me.ID,t("extension","Extension")),[new Me(xe)]),D.as(Wn.ViewContainersRegistry).registerViewContainer({id:w,title:u("extensions","Extensions"),openCommandActionDescriptor:{id:w,mnemonicTitle:t({key:"miViewExtensions",comment:["&& denotes a mnemonic"]},"E&&xtensions"),keybindings:{primary:ve.CtrlCmd|ve.Shift|en.KeyX},order:4},ctorDescriptor:new Me(rt),icon:tt,order:4,rejectAddedViews:!0,alwaysUseContainerInfo:!0},Tn.Sidebar),D.as(un.Configuration).registerConfiguration({...Dn,properties:{"extensions.autoUpdate":{enum:[!0,"onlyEnabledExtensions",!1],enumItemLabels:[t("all","All Extensions"),t("enabled","Only Enabled Extensions"),t("none","None")],enumDescriptions:[t("extensions.autoUpdate.true","Download and install updates automatically for all extensions."),t("extensions.autoUpdate.enabled","Download and install updates automatically only for enabled extensions."),t("extensions.autoUpdate.false","Extensions are not automatically updated.")],description:t("extensions.autoUpdate","Controls the automatic update behavior of extensions. The updates are fetched from a Microsoft online service."),default:!0,scope:U.APPLICATION,tags:["usesOnlineServices"]},"extensions.autoCheckUpdates":{type:"boolean",description:t("extensionsCheckUpdates","When enabled, automatically checks extensions for updates. If an extension has an update, it is marked as outdated in the Extensions view. The updates are fetched from a Microsoft online service."),default:!0,scope:U.APPLICATION,tags:["usesOnlineServices"]},"extensions.ignoreRecommendations":{type:"boolean",description:t("extensionsIgnoreRecommendations","When enabled, the notifications for extension recommendations will not be shown."),default:!1},"extensions.showRecommendationsOnlyOnDemand":{type:"boolean",deprecationMessage:t("extensionsShowRecommendationsOnlyOnDemand_Deprecated","This setting is deprecated. Use extensions.ignoreRecommendations setting to control recommendation notifications. Use Extensions view's visibility actions to hide Recommended view by default."),default:!1,tags:["usesOnlineServices"]},"extensions.closeExtensionDetailsOnViewChange":{type:"boolean",description:t("extensionsCloseExtensionDetailsOnViewChange","When enabled, editors with extension details will be automatically closed upon navigating away from the Extensions View."),default:!1},"extensions.confirmedUriHandlerExtensionIds":{type:"array",items:{type:"string"},description:t("handleUriConfirmedExtensions","When an extension is listed here, a confirmation prompt will not be shown when that extension handles a URI."),default:[],scope:U.APPLICATION},"extensions.webWorker":{type:["boolean","string"],enum:[!0,!1,"auto"],enumDescriptions:[t("extensionsWebWorker.true","The Web Worker Extension Host will always be launched."),t("extensionsWebWorker.false","The Web Worker Extension Host will never be launched."),t("extensionsWebWorker.auto","The Web Worker Extension Host will be launched when a web extension needs it.")],description:t("extensionsWebWorker","Enable web worker extension host."),default:"auto"},"extensions.supportVirtualWorkspaces":{type:"object",markdownDescription:t("extensions.supportVirtualWorkspaces","Override the virtual workspaces support of an extension."),patternProperties:{"([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$":{type:"boolean",default:!1}},additionalProperties:!1,default:{},defaultSnippets:[{body:{"pub.name":!1}}]},"extensions.experimental.affinity":{type:"object",markdownDescription:t("extensions.affinity","Configure an extension to execute in a different extension host process."),patternProperties:{"([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$":{type:"integer",default:1}},additionalProperties:!1,default:{},defaultSnippets:[{body:{"pub.name":1}}]},[Ln]:{type:"object",scope:U.APPLICATION,markdownDescription:t("extensions.supportUntrustedWorkspaces","Override the untrusted workspace support of an extension. Extensions using `true` will always be enabled. Extensions using `limited` will always be enabled, and the extension will hide functionality that requires trust. Extensions using `false` will only be enabled only when the workspace is trusted."),patternProperties:{"([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$":{type:"object",properties:{supported:{type:["boolean","string"],enum:[!0,!1,"limited"],enumDescriptions:[t("extensions.supportUntrustedWorkspaces.true","Extension will always be enabled."),t("extensions.supportUntrustedWorkspaces.false","Extension will only be enabled only when the workspace is trusted."),t("extensions.supportUntrustedWorkspaces.limited","Extension will always be enabled, and the extension will hide functionality requiring trust.")],description:t("extensions.supportUntrustedWorkspaces.supported","Defines the untrusted workspace support setting for the extension.")},version:{type:"string",description:t("extensions.supportUntrustedWorkspaces.version","Defines the version of the extension for which the override should be applied. If not specified, the override will be applied independent of the extension version.")}}}}},"extensions.experimental.deferredStartupFinishedActivation":{type:"boolean",description:t("extensionsDeferredStartupFinishedActivation","When enabled, extensions which declare the `onStartupFinished` activation event will be activated after a timeout."),default:!1},"extensions.experimental.issueQuickAccess":{type:"boolean",description:t("extensionsInQuickAccess","When enabled, extensions can be searched for via Quick Access and report issues from there."),default:!0},"extensions.verifySignature":{type:"boolean",description:t("extensions.verifySignature","When enabled, extensions are verified to be signed before getting installed."),default:!0,scope:U.APPLICATION,included:rn&&!sn}}});const pt=D.as(bn.Extensions.JSONContribution);pt.registerSchema(Gn,Bn),O.registerCommand("_extensions.manage",(x,m,n,o,i)=>{const a=x.get(g),r=a.local.find(c=>v(c.identifier,{id:m}));if(r)a.open(r,{tab:n,preserveFocus:o,feature:i});else throw new Error(t("notFound","Extension '{0}' not found.",m))}),O.registerCommand("extension.open",async(x,m,n,o,i,a)=>{const r=x.get(g),c=x.get(ie),[l]=await r.getExtensions([{id:m}],V.None);return l?r.open(l,{tab:n,preserveFocus:o,feature:i,sideByside:a}):c.executeCommand("_extensions.manage",m,n,o,i)}),O.registerCommand({id:"workbench.extensions.installExtension",metadata:{description:t("workbench.extensions.installExtension.description","Install the given extension"),args:[{name:"extensionIdOrVSIXUri",description:t("workbench.extensions.installExtension.arg.decription","Extension id or VSIX resource uri"),constraint:x=>typeof x=="string"||x instanceof te},{name:"options",description:"(optional) Options for installing the extension. Object with the following properties: `installOnlyNewlyAddedFromExtensionPackVSIX`: When enabled, VS Code installs only newly added extensions from the extension pack VSIX. This option is considered only when installing VSIX. ",isOptional:!0,schema:{type:"object",properties:{installOnlyNewlyAddedFromExtensionPackVSIX:{type:"boolean",description:t("workbench.extensions.installExtension.option.installOnlyNewlyAddedFromExtensionPackVSIX","When enabled, VS Code installs only newly added extensions from the extension pack VSIX. This option is considered only while installing a VSIX."),default:!1},installPreReleaseVersion:{type:"boolean",description:t("workbench.extensions.installExtension.option.installPreReleaseVersion","When enabled, VS Code installs the pre-release version of the extension if available."),default:!1},donotSync:{type:"boolean",description:t("workbench.extensions.installExtension.option.donotSync","When enabled, VS Code do not sync this extension when Settings Sync is on."),default:!1},justification:{type:["string","object"],description:t("workbench.extensions.installExtension.option.justification","Justification for installing the extension. This is a string or an object that can be used to pass any information to the installation handlers. i.e. `{reason: 'This extension wants to open a URI', action: 'Open URI'}` will show a message box with the reason and action upon install.")},enable:{type:"boolean",description:t("workbench.extensions.installExtension.option.enable","When enabled, the extension will be enabled if it is installed but disabled. If the extension is already enabled, this has no effect."),default:!1},context:{type:"object",description:t("workbench.extensions.installExtension.option.context","Context for the installation. This is a JSON object that can be used to pass any information to the installation handlers. i.e. `{skipWalkthrough: true}` will skip opening the walkthrough upon install.")}}}}]},handler:async(x,m,n)=>{const o=x.get(g),i=x.get(Ne),a=x.get(Ve);try{if(typeof m=="string"){const[r,c]=hn(m);if(o.local.find(d=>v(d.identifier,{id:r,uuid:c}))?.enablementState===q.DisabledByExtensionKind){const[d]=await a.getExtensions([{id:r,preRelease:n?.installPreReleaseVersion}],V.None);if(!d)throw new Error(t("notFound","Extension '{0}' not found.",m));await i.installFromGallery(d,{isMachineScoped:n?.donotSync?!0:void 0,installPreReleaseVersion:n?.installPreReleaseVersion,installGivenVersion:!!c,context:{...n?.context,[Te]:Pe.COMMAND}})}else await o.install(m,{version:c,installPreReleaseVersion:n?.installPreReleaseVersion,context:{...n?.context,[Te]:Pe.COMMAND},justification:n?.justification,enable:n?.enable,isMachineScoped:n?.donotSync?!0:void 0},Sn.Notification)}else{const r=te.revive(m);await o.install(r,{installOnlyNewlyAddedFromExtensionPack:n?.installOnlyNewlyAddedFromExtensionPackVSIX,installGivenVersion:!0})}}catch(r){throw ye(r),r}}}),O.registerCommand({id:"workbench.extensions.uninstallExtension",metadata:{description:t("workbench.extensions.uninstallExtension.description","Uninstall the given extension"),args:[{name:t("workbench.extensions.uninstallExtension.arg.name","Id of the extension to uninstall"),schema:{type:"string"}}]},handler:async(x,m)=>{if(!m)throw new Error(t("id required","Extension id required."));const n=x.get(De),o=await n.getInstalled(),[i]=o.filter(a=>v(a.identifier,{id:m}));if(!i)throw new Error(t("notInstalled","Extension '{0}' is not installed. Make sure you use the full extension ID, including the publisher, e.g.: ms-dotnettools.csharp.",m));if(i.isBuiltin)throw new Error(t("builtin","Extension '{0}' is a Built-in extension and cannot be installed",m));try{await n.uninstall(i)}catch(a){throw ye(a),a}}}),O.registerCommand({id:"workbench.extensions.search",metadata:{description:t("workbench.extensions.search.description","Search for a specific extension"),args:[{name:t("workbench.extensions.search.arg.name","Query to use in search"),schema:{type:"string"}}]},handler:async(x,m="")=>x.get(g).openSearch(m)});function we(x,m){x?.addImplementation(105,"extensions-editor",n=>{const i=n.get(ce).activeEditorPane;return i instanceof me&&i.activeWebview?.isFocused?(m(i.activeWebview),!0):!1})}we(an,x=>x.copy()),we(cn,x=>x.cut()),we(ln,x=>x.paste());const E=new oe("hasLocalServer",!1),b=new oe("hasRemoteServer",!1),k=new oe("hasWebServer",!1);async function J(x){try{await x.run()}finally{on(x)&&x.dispose()}}let Q=class extends tn{constructor(n,o,i,a,r,c,l,d,y){super();this.extensionManagementServerService=n;this.viewsService=a;this.extensionsWorkbenchService=r;this.extensionEnablementService=c;this.instantiationService=l;this.dialogService=d;this.commandService=y;const f=p.bindTo(i);o.isEnabled()&&f.set(!0);const I=E.bindTo(i);this.extensionManagementServerService.localExtensionManagementServer&&I.set(!0);const T=b.bindTo(i);this.extensionManagementServerService.remoteExtensionManagementServer&&T.set(!0);const S=k.bindTo(i);this.extensionManagementServerService.webExtensionManagementServer&&S.set(!0),this.registerGlobalActions(),this.registerContextMenuActions(),this.registerQuickAccessProvider()}registerQuickAccessProvider(){(this.extensionManagementServerService.localExtensionManagementServer||this.extensionManagementServerService.remoteExtensionManagementServer||this.extensionManagementServerService.webExtensionManagementServer)&&D.as(Le.Quickaccess).registerQuickAccessProvider({ctor:Qe,prefix:Qe.PREFIX,placeholder:t("installExtensionQuickAccessPlaceholder","Type the name of an extension to install or search."),helpEntries:[{description:t("installExtensionQuickAccessHelp","Install or Search Extensions")}]})}registerGlobalActions(){this._register(L.appendMenuItem(s.MenubarPreferencesMenu,{command:{id:w,title:t({key:"miPreferencesExtensions",comment:["&& denotes a mnemonic"]},"&&Extensions")},group:"2_configuration",order:3})),this._register(L.appendMenuItem(s.GlobalActivity,{command:{id:w,title:t("showExtensions","Extensions")},group:"2_configuration",order:3})),this.registerExtensionAction({id:"workbench.extensions.action.focusExtensionsView",title:u("focusExtensions","Focus on Extensions View"),category:h,f1:!0,run:async l=>{await l.get(g).openSearch("")}}),this.registerExtensionAction({id:"workbench.extensions.action.installExtensions",title:u("installExtensions","Install Extensions"),category:h,menu:{id:s.CommandPalette,when:e.and(p,e.or(E,b,k))},run:async l=>{l.get(F).openViewContainer(w,!0)}}),this.registerExtensionAction({id:"workbench.extensions.action.showRecommendedKeymapExtensions",title:u("showRecommendedKeymapExtensionsShort","Keymaps"),category:_e,menu:[{id:s.CommandPalette,when:p},{id:s.EditorTitle,when:e.and(Nn,p),group:"2_keyboard_discover_actions"}],menuTitles:{[s.EditorTitle.id]:t("importKeyboardShortcutsFroms","Migrate Keyboard Shortcuts from...")},run:()=>this.extensionsWorkbenchService.openSearch("@recommended:keymaps ")}),this.registerExtensionAction({id:"workbench.extensions.action.showLanguageExtensions",title:u("showLanguageExtensionsShort","Language Extensions"),category:_e,menu:{id:s.CommandPalette,when:p},run:()=>this.extensionsWorkbenchService.openSearch("@recommended:languages ")}),this.registerExtensionAction({id:"workbench.extensions.action.checkForUpdates",title:u("checkForUpdates","Check for Extension Updates"),category:h,menu:[{id:s.CommandPalette,when:e.and(p,e.or(E,b,k))},{id:s.ViewContainerTitle,when:e.and(e.equals("viewContainer",w),p),group:"1_updates",order:1}],run:async()=>(await this.extensionsWorkbenchService.checkForUpdates(),this.extensionsWorkbenchService.outdated.length?this.extensionsWorkbenchService.openSearch("@outdated "):this.dialogService.info(t("noUpdatesAvailable","All extensions are up to date.")))});const n=e.equals(`config.${_}`,!1);this.registerExtensionAction({id:"workbench.extensions.action.enableAutoUpdate",title:u("enableAutoUpdate","Enable Auto Update for All Extensions"),category:h,precondition:n,menu:[{id:s.ViewContainerTitle,order:5,group:"1_updates",when:e.and(e.equals("viewContainer",w),n)},{id:s.CommandPalette}],run:l=>l.get(g).updateAutoUpdateForAllExtensions(!0)});const o=e.notEquals(`config.${_}`,!1);this.registerExtensionAction({id:"workbench.extensions.action.disableAutoUpdate",title:u("disableAutoUpdate","Disable Auto Update for All Extensions"),precondition:o,category:h,menu:[{id:s.ViewContainerTitle,order:5,group:"1_updates",when:e.and(e.equals("viewContainer",w),o)},{id:s.CommandPalette}],run:l=>l.get(g).updateAutoUpdateForAllExtensions(!1)}),this.registerExtensionAction({id:"workbench.extensions.action.updateAllExtensions",title:u("updateAll","Update All Extensions"),category:h,precondition:On,menu:[{id:s.CommandPalette,when:e.and(p,e.or(E,b,k))},{id:s.ViewContainerTitle,when:e.and(e.equals("viewContainer",w),e.or(e.has(`config.${_}`).negate(),e.equals(`config.${_}`,"onlyEnabledExtensions"))),group:"1_updates",order:2},{id:s.ViewTitle,when:e.equals("view",qn),group:"navigation",order:1}],icon:Ke,run:async()=>{await this.extensionsWorkbenchService.updateAll()}}),this.registerExtensionAction({id:"workbench.extensions.action.enableAll",title:u("enableAll","Enable All Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(E,b,k)},{id:s.ViewContainerTitle,when:e.equals("viewContainer",w),group:"2_enablement",order:1}],run:async()=>{const l=this.extensionsWorkbenchService.local.filter(d=>!!d.local&&this.extensionEnablementService.canChangeEnablement(d.local)&&!this.extensionEnablementService.isEnabled(d.local));l.length&&await this.extensionsWorkbenchService.setEnablement(l,q.EnabledGlobally)}}),this.registerExtensionAction({id:"workbench.extensions.action.enableAllWorkspace",title:u("enableAllWorkspace","Enable All Extensions for this Workspace"),category:h,menu:{id:s.CommandPalette,when:e.and(P.notEqualsTo("empty"),e.or(E,b,k))},run:async()=>{const l=this.extensionsWorkbenchService.local.filter(d=>!!d.local&&this.extensionEnablementService.canChangeEnablement(d.local)&&!this.extensionEnablementService.isEnabled(d.local));l.length&&await this.extensionsWorkbenchService.setEnablement(l,q.EnabledWorkspace)}}),this.registerExtensionAction({id:"workbench.extensions.action.disableAll",title:u("disableAll","Disable All Installed Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(E,b,k)},{id:s.ViewContainerTitle,when:e.equals("viewContainer",w),group:"2_enablement",order:2}],run:async()=>{const l=this.extensionsWorkbenchService.local.filter(d=>!d.isBuiltin&&!!d.local&&this.extensionEnablementService.isEnabled(d.local)&&this.extensionEnablementService.canChangeEnablement(d.local));l.length&&await this.extensionsWorkbenchService.setEnablement(l,q.DisabledGlobally)}}),this.registerExtensionAction({id:"workbench.extensions.action.disableAllWorkspace",title:u("disableAllWorkspace","Disable All Installed Extensions for this Workspace"),category:h,menu:{id:s.CommandPalette,when:e.and(P.notEqualsTo("empty"),e.or(E,b,k))},run:async()=>{const l=this.extensionsWorkbenchService.local.filter(d=>!d.isBuiltin&&!!d.local&&this.extensionEnablementService.isEnabled(d.local)&&this.extensionEnablementService.canChangeEnablement(d.local));l.length&&await this.extensionsWorkbenchService.setEnablement(l,q.DisabledWorkspace)}}),this.registerExtensionAction({id:Fn,title:u("InstallFromVSIX","Install from VSIX..."),category:h,menu:[{id:s.CommandPalette,when:e.or(E,b)},{id:s.ViewContainerTitle,when:e.and(e.equals("viewContainer",w),e.or(E,b)),group:"3_install",order:1}],run:async l=>{const d=l.get(We),y=l.get(ie),f=await d.showOpenDialog({title:t("installFromVSIX","Install from VSIX"),filters:[{name:"VSIX Extensions",extensions:["vsix"]}],canSelectFiles:!0,canSelectMany:!0,openLabel:nn(t({key:"installButton",comment:["&& denotes a mnemonic"]},"&&Install"))});f&&await y.executeCommand(Xe,f)}}),this.registerExtensionAction({id:Xe,title:t("installVSIX","Install Extension VSIX"),menu:[{id:s.ExplorerContext,group:"extensions",when:e.and(An.Extension.isEqualTo(".vsix"),e.or(E,b))}],run:async(l,d)=>{const y=l.get(g),f=l.get(Mn),I=l.get(fn),T=Array.isArray(d)?d:[d],S=await Promise.allSettled(T.map(async M=>await y.install(M,{installGivenVersion:!0})));let N,Y=!1,ee=!1;for(const M of S){if(M.status==="rejected"){N=new Error(M.reason);break}Y=Y||M.value.runtimeState?.action===Fe.ReloadWindow,ee=ee||M.value.runtimeState?.action===Fe.RestartExtensions}if(N)throw N;Y?I.prompt(ae.Info,t("InstallVSIXAction.successReload","Completed installing extension from VSIX. Please reload Visual Studio Code to enable it."),[{label:t("InstallVSIXAction.reloadNow","Reload Now"),run:()=>f.reload()}]):ee?I.prompt(ae.Info,t("InstallVSIXAction.successRestart","Completed installing extension from VSIX. Please restart extensions to enable it."),[{label:t("InstallVSIXAction.restartExtensions","Restart Extensions"),run:()=>y.updateRunningExtensions()}]):I.prompt(ae.Info,t("InstallVSIXAction.successNoReload","Completed installing extension."),[])}}),this.registerExtensionAction({id:"workbench.extensions.action.installExtensionFromLocation",title:u("installExtensionFromLocation","Install Extension from Location..."),category:Ae.Developer,menu:[{id:s.CommandPalette,when:e.or(k,E)}],run:async l=>{const d=l.get(Ne);if(ke)return new Promise((y,f)=>{const I=l.get(wn),T=new Ie,S=T.add(I.createQuickPick());S.title=t("installFromLocation","Install Extension from Location"),S.customButton=!0,S.customLabel=t("install button","Install"),S.placeholder=t("installFromLocationPlaceHolder","Location of the web extension"),S.ignoreFocusOut=!0,T.add(Ye.any(S.onDidAccept,S.onDidCustom)(async()=>{if(S.hide(),S.value)try{await d.installFromLocation(te.parse(S.value))}catch(N){f(N);return}y()})),T.add(S.onDidHide(()=>T.dispose())),S.show()});{const f=await l.get(We).showOpenDialog({canSelectFolders:!0,canSelectFiles:!1,canSelectMany:!1,title:t("installFromLocation","Install Extension from Location")});f?.[0]&&await d.installFromLocation(f[0])}}});const i=new s("extensionsFilterSubMenu");L.appendMenuItem(Ge,{submenu:i,title:t("filterExtensions","Filter Extensions..."),group:"navigation",order:2,icon:it}),this.registerExtensionAction({id:"extensions.filter.featured",title:u("showFeaturedExtensions","Show Featured Extensions"),category:h,menu:[{id:s.CommandPalette,when:p},{id:i,when:p,group:"1_predefined",order:1}],menuTitles:{[i.id]:t("featured filter","Featured")},run:()=>this.extensionsWorkbenchService.openSearch("@featured ")}),this.registerExtensionAction({id:"workbench.extensions.action.showPopularExtensions",title:u("showPopularExtensions","Show Popular Extensions"),category:h,menu:[{id:s.CommandPalette,when:p},{id:i,when:p,group:"1_predefined",order:2}],menuTitles:{[i.id]:t("most popular filter","Most Popular")},run:()=>this.extensionsWorkbenchService.openSearch("@popular ")}),this.registerExtensionAction({id:"workbench.extensions.action.showRecommendedExtensions",title:u("showRecommendedExtensions","Show Recommended Extensions"),category:h,menu:[{id:s.CommandPalette,when:p},{id:i,when:p,group:"1_predefined",order:2}],menuTitles:{[i.id]:t("most popular recommended","Recommended")},run:()=>this.extensionsWorkbenchService.openSearch("@recommended ")}),this.registerExtensionAction({id:"workbench.extensions.action.recentlyPublishedExtensions",title:u("recentlyPublishedExtensions","Show Recently Published Extensions"),category:h,menu:[{id:s.CommandPalette,when:p},{id:i,when:p,group:"1_predefined",order:2}],menuTitles:{[i.id]:t("recently published filter","Recently Published")},run:()=>this.extensionsWorkbenchService.openSearch("@recentlyPublished ")});const r=new s("extensionsCategoryFilterSubMenu");L.appendMenuItem(i,{submenu:r,title:t("filter by category","Category"),when:p,group:"2_categories",order:1}),En.forEach((l,d)=>{this.registerExtensionAction({id:`extensions.actions.searchByCategory.${l}`,title:l,menu:[{id:r,when:p,order:d}],run:()=>this.extensionsWorkbenchService.openSearch(`@category:"${l.toLowerCase()}"`)})}),this.registerExtensionAction({id:"workbench.extensions.action.listBuiltInExtensions",title:u("showBuiltInExtensions","Show Built-in Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(E,b,k)},{id:i,group:"3_installed",order:2}],menuTitles:{[i.id]:t("builtin filter","Built-in")},run:()=>this.extensionsWorkbenchService.openSearch("@builtin ")}),this.registerExtensionAction({id:"workbench.extensions.action.extensionUpdates",title:u("extensionUpdates","Show Extension Updates"),category:h,precondition:p,f1:!0,menu:[{id:i,group:"3_installed",when:p,order:1}],menuTitles:{[i.id]:t("extension updates filter","Updates")},run:()=>this.extensionsWorkbenchService.openSearch("@updates")}),this.registerExtensionAction({id:Un,title:u("showWorkspaceUnsupportedExtensions","Show Extensions Unsupported By Workspace"),category:h,menu:[{id:s.CommandPalette,when:e.or(E,b)},{id:i,group:"3_installed",order:5,when:e.or(E,b)}],menuTitles:{[i.id]:t("workspace unsupported filter","Workspace Unsupported")},run:()=>this.extensionsWorkbenchService.openSearch("@workspaceUnsupported")}),this.registerExtensionAction({id:"workbench.extensions.action.showEnabledExtensions",title:u("showEnabledExtensions","Show Enabled Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(E,b,k)},{id:i,group:"3_installed",order:3}],menuTitles:{[i.id]:t("enabled filter","Enabled")},run:()=>this.extensionsWorkbenchService.openSearch("@enabled ")}),this.registerExtensionAction({id:"workbench.extensions.action.showDisabledExtensions",title:u("showDisabledExtensions","Show Disabled Extensions"),category:h,menu:[{id:s.CommandPalette,when:e.or(E,b,k)},{id:i,group:"3_installed",order:4}],menuTitles:{[i.id]:t("disabled filter","Disabled")},run:()=>this.extensionsWorkbenchService.openSearch("@disabled ")});const c=new s("extensionsSortSubMenu");L.appendMenuItem(i,{submenu:c,title:t("sorty by","Sort By"),when:e.and(e.or(p,ze)),group:"4_sort",order:1}),[{id:"installs",title:t("sort by installs","Install Count"),precondition:K.negate()},{id:"rating",title:t("sort by rating","Rating"),precondition:K.negate()},{id:"name",title:t("sort by name","Name"),precondition:K.negate()},{id:"publishedDate",title:t("sort by published date","Published Date"),precondition:K.negate()},{id:"updateDate",title:t("sort by update date","Updated Date"),precondition:e.and(ut.negate(),lt.negate(),K.negate())}].map(({id:l,title:d,precondition:y},f)=>{this.registerExtensionAction({id:`extensions.sort.${l}`,title:d,precondition:y,menu:[{id:c,when:e.or(p,ze),order:f}],toggled:st.isEqualTo(l),run:async()=>{const I=(await this.viewsService.openViewContainer(w,!0))?.getViewPaneContainer(),T=qe.parse(I?.searchValue??"");I?.search(new qe(T.value,l).toString()),I?.focus()}})}),this.registerExtensionAction({id:"workbench.extensions.action.clearExtensionsSearchResults",title:u("clearExtensionsSearchResults","Clear Extensions Search Results"),category:h,icon:et,f1:!0,precondition:dt,menu:{id:Ge,group:"navigation",order:1},run:async l=>{const d=l.get(F).getActiveViewPaneContainerWithId(w);if(d){const y=d;y.search(""),y.focus()}}}),this.registerExtensionAction({id:"workbench.extensions.action.refreshExtension",title:u("refreshExtension","Refresh"),category:h,icon:ot,f1:!0,menu:{id:s.ViewContainerTitle,when:e.equals("viewContainer",w),group:"navigation",order:2},run:async l=>{const d=l.get(F).getActiveViewPaneContainerWithId(w);d&&await d.refresh()}}),this.registerExtensionAction({id:"workbench.extensions.action.installWorkspaceRecommendedExtensions",title:t("installWorkspaceRecommendedExtensions","Install Workspace Recommended Extensions"),icon:Ke,menu:{id:s.ViewTitle,when:e.equals("view",ue),group:"navigation",order:1},run:async l=>l.get(F).getActiveViewWithId(ue).installWorkspaceRecommendations()}),this.registerExtensionAction({id:B.ID,title:B.LABEL,icon:nt,menu:[{id:s.CommandPalette,when:P.notEqualsTo("empty")},{id:s.ViewTitle,when:e.equals("view",ue),group:"navigation",order:2}],run:()=>J(this.instantiationService.createInstance(B,B.ID,B.LABEL))}),this.registerExtensionAction({id:H.ID,title:{value:H.LABEL,original:"Install Specific Version of Extension..."},category:h,menu:{id:s.CommandPalette,when:e.and(p,e.or(E,b,k))},run:()=>J(this.instantiationService.createInstance(H,H.ID,H.LABEL))}),this.registerExtensionAction({id:j.ID,title:{value:j.LABEL,original:"Reinstall Extension..."},category:Ae.Developer,menu:{id:s.CommandPalette,when:e.and(p,e.or(E,b))},run:()=>J(this.instantiationService.createInstance(j,j.ID,j.LABEL))})}registerContextMenuActions(){this.registerExtensionAction({id:ge.ID,title:ge.TITLE,menu:{id:s.ExtensionContext,group:de,order:0,when:e.and(e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.has("extensionHasColorThemes"))},run:async(n,o)=>{const i=n.get(g),a=n.get(C),r=i.local.find(c=>v(c.identifier,{id:o}));if(r){const c=a.createInstance(ge);return c.extension=r,c.run()}}}),this.registerExtensionAction({id:Ee.ID,title:Ee.TITLE,menu:{id:s.ExtensionContext,group:de,order:0,when:e.and(e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.has("extensionHasFileIconThemes"))},run:async(n,o)=>{const i=n.get(g),a=n.get(C),r=i.local.find(c=>v(c.identifier,{id:o}));if(r){const c=a.createInstance(Ee);return c.extension=r,c.run()}}}),this.registerExtensionAction({id:be.ID,title:be.TITLE,menu:{id:s.ExtensionContext,group:de,order:0,when:e.and(e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.has("extensionHasProductIconThemes"))},run:async(n,o)=>{const i=n.get(g),a=n.get(C),r=i.local.find(c=>v(c.identifier,{id:o}));if(r){const c=a.createInstance(be);return c.extension=r,c.run()}}}),this.registerExtensionAction({id:"workbench.extensions.action.showPreReleaseVersion",title:u("show pre-release version","Show Pre-Release Version"),menu:{id:s.ExtensionContext,group:X,order:0,when:e.and(e.has("inExtensionEditor"),e.has("galleryExtensionHasPreReleaseVersion"),e.not("showPreReleaseVersion"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(g),a=(await i.getExtensions([{id:o}],V.None))[0];i.open(a,{showPreReleaseVersion:!0})}}),this.registerExtensionAction({id:"workbench.extensions.action.showReleasedVersion",title:u("show released version","Show Release Version"),menu:{id:s.ExtensionContext,group:X,order:1,when:e.and(e.has("inExtensionEditor"),e.has("galleryExtensionHasPreReleaseVersion"),e.has("extensionHasReleaseVersion"),e.has("showPreReleaseVersion"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(g),a=(await i.getExtensions([{id:o}],V.None))[0];i.open(a,{showPreReleaseVersion:!1})}}),this.registerExtensionAction({id:fe.ID,title:fe.LABEL,category:h,precondition:e.and(e.or(e.notEquals(`config.${_}`,"onlyEnabledExtensions"),e.equals("isExtensionEnabled",!0)),e.not("extensionDisallowInstall")),menu:{id:s.ExtensionContext,group:Be,order:1,when:e.and(e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(C),r=n.get(g).local.find(c=>v(c.identifier,{id:o}));if(r){const c=i.createInstance(fe);return c.extension=r,c.run()}}}),this.registerExtensionAction({id:Se.ID,title:{value:Se.LABEL,original:"Auto Update (Publisher)"},category:h,precondition:e.equals(`config.${_}`,!1),menu:{id:s.ExtensionContext,group:Be,order:2,when:e.and(e.equals("extensionStatus","installed"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(C),r=n.get(g).local.find(c=>v(c.identifier,{id:o}));if(r){const c=i.createInstance(Se);return c.extension=r,c.run()}}}),this.registerExtensionAction({id:"workbench.extensions.action.switchToPreRlease",title:t("enablePreRleaseLabel","Switch to Pre-Release Version"),category:h,menu:{id:s.ExtensionContext,group:X,order:2,when:e.and(p,e.has("galleryExtensionHasPreReleaseVersion"),e.not("installedExtensionIsOptedToPreRelease"),e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(C),r=n.get(g).local.find(c=>v(c.identifier,{id:o}));if(r){const c=i.createInstance(je);return c.extension=r,c.run()}}}),this.registerExtensionAction({id:"workbench.extensions.action.switchToRelease",title:t("disablePreRleaseLabel","Switch to Release Version"),category:h,menu:{id:s.ExtensionContext,group:X,order:2,when:e.and(p,e.has("galleryExtensionHasPreReleaseVersion"),e.has("installedExtensionIsOptedToPreRelease"),e.not("inExtensionEditor"),e.equals("extensionStatus","installed"),e.not("isBuiltinExtension"))},run:async(n,o)=>{const i=n.get(C),r=n.get(g).local.find(c=>v(c.identifier,{id:o}));if(r){const c=i.createInstance(je);return c.extension=r,c.run()}}}),this.registerExtensionAction({id:he.ID,title:he.TITLE,menu:{id:s.ExtensionContext,group:X,order:0,when:e.and(e.not("inExtensionEditor"),e.has("canSetLanguage"),e.has("isActiveLanguagePackExtension"))},run:async(n,o)=>{const i=n.get(C),r=(await n.get(g).getExtensions([{id:o}],V.None))[0],c=i.createInstance(he);return c.extension=r,c.run()}}),this.registerExtensionAction({id:"workbench.extensions.action.installAndDonotSync",title:t("install installAndDonotSync","Install (Do not Sync)"),menu:{id:s.ExtensionContext,group:"0_install",when:e.and(e.equals("extensionStatus","uninstalled"),e.has("isGalleryExtension"),e.not("extensionDisallowInstall"),le),order:1},run:async(n,o)=>{const i=n.get(C),a=this.extensionsWorkbenchService.local.filter(r=>v(r.identifier,{id:o}))[0]||(await this.extensionsWorkbenchService.getExtensions([{id:o}],V.None))[0];if(a){const r=i.createInstance(He,{isMachineScoped:!0});return r.extension=a,r.run()}}}),this.registerExtensionAction({id:"workbench.extensions.action.installPrereleaseAndDonotSync",title:t("installPrereleaseAndDonotSync","Install Pre-Release (Do not Sync)"),menu:{id:s.ExtensionContext,group:"0_install",when:e.and(e.equals("extensionStatus","uninstalled"),e.has("isGalleryExtension"),e.has("extensionHasPreReleaseVersion"),e.not("extensionDisallowInstall"),le),order:2},run:async(n,o)=>{const i=n.get(C),a=this.extensionsWorkbenchService.local.filter(r=>v(r.identifier,{id:o}))[0]||(await this.extensionsWorkbenchService.getExtensions([{id:o}],V.None))[0];if(a){const r=i.createInstance(He,{isMachineScoped:!0,preRelease:!0});return r.extension=a,r.run()}}}),this.registerExtensionAction({id:pe.ID,title:pe.LABEL,menu:{id:s.ExtensionContext,group:"0_install",when:e.and(e.equals("extensionStatus","uninstalled"),e.has("isGalleryExtension"),e.not("extensionDisallowInstall")),order:3},run:async(n,o)=>{const i=n.get(C),a=this.extensionsWorkbenchService.local.filter(r=>v(r.identifier,{id:o}))[0]||(await this.extensionsWorkbenchService.getExtensions([{id:o}],V.None))[0];if(a)return i.createInstance(pe,a,!1).run()}}),this.registerExtensionAction({id:"workbench.extensions.action.copyExtension",title:u("workbench.extensions.action.copyExtension","Copy"),menu:{id:s.ExtensionContext,group:"1_copy"},run:async(n,o)=>{const i=n.get(Re),a=this.extensionsWorkbenchService.local.filter(r=>v(r.identifier,{id:o}))[0]||(await this.extensionsWorkbenchService.getExtensions([{id:o}],V.None))[0];if(a){const r=t("extensionInfoName","Name: {0}",a.displayName),c=t("extensionInfoId","Id: {0}",o),l=t("extensionInfoDescription","Description: {0}",a.description),d=t("extensionInfoVersion","Version: {0}",a.version),y=t("extensionInfoPublisher","Publisher: {0}",a.publisherDisplayName),f=a.url?t("extensionInfoVSMarketplaceLink","VS Marketplace Link: {0}",`${a.url}`):null,I=`${r}
${c}
${l}
${d}
${y}${f?`
`+f:""}`;await i.writeText(I)}}}),this.registerExtensionAction({id:"workbench.extensions.action.copyExtensionId",title:u("workbench.extensions.action.copyExtensionId","Copy Extension ID"),menu:{id:s.ExtensionContext,group:"1_copy"},run:async(n,o)=>n.get(Re).writeText(o)}),this.registerExtensionAction({id:"workbench.extensions.action.configure",title:u("workbench.extensions.action.configure","Extension Settings"),menu:{id:s.ExtensionContext,group:"2_configure",when:e.and(e.equals("extensionStatus","installed"),e.has("extensionHasConfiguration")),order:1},run:async(n,o)=>n.get(Ue).openSettings({jsonEditor:!1,query:`@ext:${o}`})}),this.registerExtensionAction({id:"workbench.extensions.action.configureKeybindings",title:u("workbench.extensions.action.configureKeybindings","Extension Keyboard Shortcuts"),menu:{id:s.ExtensionContext,group:"2_configure",when:e.and(e.equals("extensionStatus","installed"),e.has("extensionHasKeybindings")),order:2},run:async(n,o)=>n.get(Ue).openGlobalKeybindingSettings(!1,{query:`@ext:${o}`})}),this.registerExtensionAction({id:"workbench.extensions.action.toggleApplyToAllProfiles",title:u("workbench.extensions.action.toggleApplyToAllProfiles","Apply Extension to all Profiles"),toggled:e.has("isApplicationScopedExtension"),menu:{id:s.ExtensionContext,group:"2_configure",when:e.and(e.equals("extensionStatus","installed"),e.has("isDefaultApplicationScopedExtension").negate(),e.has("isBuiltinExtension").negate(),e.equals("isWorkspaceScopedExtension",!1)),order:3},run:async(n,o,i)=>{const a=n.get(vn),r=i.location?this.extensionsWorkbenchService.installed.find(c=>a.extUri.isEqual(c.local?.location,i.location)):void 0;if(r)return this.extensionsWorkbenchService.toggleApplyExtensionToAllProfiles(r)}}),this.registerExtensionAction({id:Xn,title:u("workbench.extensions.action.toggleIgnoreExtension","Sync This Extension"),menu:{id:s.ExtensionContext,group:"2_configure",when:e.and(e.equals("extensionStatus","installed"),le,e.equals("isWorkspaceScopedExtension",!1)),order:4},run:async(n,o)=>{const i=this.extensionsWorkbenchService.local.find(a=>v({id:o},a.identifier));if(i)return this.extensionsWorkbenchService.toggleExtensionIgnoredToSync(i)}}),this.registerExtensionAction({id:"workbench.extensions.action.ignoreRecommendation",title:u("workbench.extensions.action.ignoreRecommendation","Ignore Recommendation"),menu:{id:s.ExtensionContext,group:"3_recommendations",when:e.has("isExtensionRecommended"),order:1},run:async(n,o)=>n.get(Oe).toggleGlobalIgnoredRecommendation(o,!0)}),this.registerExtensionAction({id:"workbench.extensions.action.undoIgnoredRecommendation",title:u("workbench.extensions.action.undoIgnoredRecommendation","Undo Ignored Recommendation"),menu:{id:s.ExtensionContext,group:"3_recommendations",when:e.has("isUserIgnoredRecommendation"),order:1},run:async(n,o)=>n.get(Oe).toggleGlobalIgnoredRecommendation(o,!1)}),this.registerExtensionAction({id:"workbench.extensions.action.addExtensionToWorkspaceRecommendations",title:u("workbench.extensions.action.addExtensionToWorkspaceRecommendations","Add to Workspace Recommendations"),menu:{id:s.ExtensionContext,group:"3_recommendations",when:e.and(P.notEqualsTo("empty"),e.has("isBuiltinExtension").negate(),e.has("isExtensionWorkspaceRecommended").negate(),e.has("isUserIgnoredRecommendation").negate(),e.notEquals("extensionSource","resource")),order:2},run:(n,o)=>n.get(Z).toggleRecommendation(o)}),this.registerExtensionAction({id:"workbench.extensions.action.removeExtensionFromWorkspaceRecommendations",title:u("workbench.extensions.action.removeExtensionFromWorkspaceRecommendations","Remove from Workspace Recommendations"),menu:{id:s.ExtensionContext,group:"3_recommendations",when:e.and(P.notEqualsTo("empty"),e.has("isBuiltinExtension").negate(),e.has("isExtensionWorkspaceRecommended")),order:2},run:(n,o)=>n.get(Z).toggleRecommendation(o)}),this.registerExtensionAction({id:"workbench.extensions.action.addToWorkspaceRecommendations",title:u("workbench.extensions.action.addToWorkspaceRecommendations","Add Extension to Workspace Recommendations"),category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:e.and(P.isEqualTo("workspace"),e.equals("resourceScheme",z.extension))},async run(n){const o=n.get(ce),i=n.get(Z);if(!(o.activeEditor instanceof xe))return;const a=o.activeEditor.extension.identifier.id.toLowerCase();(await i.getRecommendations()).includes(a)||await i.toggleRecommendation(a)}}),this.registerExtensionAction({id:"workbench.extensions.action.addToWorkspaceFolderRecommendations",title:u("workbench.extensions.action.addToWorkspaceFolderRecommendations","Add Extension to Workspace Folder Recommendations"),category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:e.and(P.isEqualTo("folder"),e.equals("resourceScheme",z.extension))},run:()=>this.commandService.executeCommand("workbench.extensions.action.addToWorkspaceRecommendations")}),this.registerExtensionAction({id:"workbench.extensions.action.addToWorkspaceIgnoredRecommendations",title:u("workbench.extensions.action.addToWorkspaceIgnoredRecommendations","Add Extension to Workspace Ignored Recommendations"),category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:e.and(P.isEqualTo("workspace"),e.equals("resourceScheme",z.extension))},async run(n){const o=n.get(ce),i=n.get(Z);if(!(o.activeEditor instanceof xe))return;const a=o.activeEditor.extension.identifier.id.toLowerCase();(await i.getUnwantedRecommendations()).includes(a)||await i.toggleUnwantedRecommendation(a)}}),this.registerExtensionAction({id:"workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations",title:u("workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations","Add Extension to Workspace Folder Ignored Recommendations"),category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:e.and(P.isEqualTo("folder"),e.equals("resourceScheme",z.extension))},run:()=>this.commandService.executeCommand("workbench.extensions.action.addToWorkspaceIgnoredRecommendations")}),this.registerExtensionAction({id:G.ID,title:{value:G.LABEL,original:"Configure Recommended Extensions (Workspace)"},category:t("extensions","Extensions"),menu:{id:s.CommandPalette,when:P.isEqualTo("workspace")},run:()=>J(this.instantiationService.createInstance(G,G.ID,G.LABEL))})}registerExtensionAction(n){const o=n.menu?Array.isArray(n.menu)?n.menu:[n.menu]:[];let i=[];const a=[];if(n.menuTitles)for(let c=0;c<o.length;c++){const l=o[c],d=n.menuTitles[l.id.id];d?a.push({id:l.id,item:{...l,command:{id:n.id,title:d}}}):i.push(l)}else i=o;const r=new Ie;return r.add(Ce(class extends dn{constructor(){super({...n,menu:i})}run(c,...l){return n.run(c,...l)}})),a.length&&r.add(L.appendMenuItems(a)),r}};Q=ne([A(0,Pn),A(1,Ve),A(2,xn),A(3,F),A(4,g),A(5,Vn),A(6,C),A(7,mn),A(8,ie)],Q);let $=class{constructor(m,n){pn.removeOutdatedExtensionVersions(m,n)}};$=ne([A(0,De),A(1,yn)],$);const W=D.as(Cn.Workbench);W.registerWorkbenchContribution(Q,R.Restored),W.registerWorkbenchContribution(xt,R.Eventually),W.registerWorkbenchContribution(ct,R.Eventually),W.registerWorkbenchContribution(Hn,R.Restored),W.registerWorkbenchContribution(at,R.Restored),W.registerWorkbenchContribution(Zn,R.Eventually),W.registerWorkbenchContribution(Yn,R.Eventually),W.registerWorkbenchContribution(Qn,R.Restored),W.registerWorkbenchContribution(Jn,R.Restored),W.registerWorkbenchContribution(ht,R.Eventually),W.registerWorkbenchContribution(Kn,R.Eventually),ke&&W.registerWorkbenchContribution($,R.Eventually),Ce(jn),D.as(kn.ConfigurationMigration).registerConfigurationMigrations([{key:_,migrateFn:(x,m)=>x==="onlySelectedExtensions"?{value:!1}:[]}]);export{E as CONTEXT_HAS_LOCAL_SERVER,b as CONTEXT_HAS_REMOTE_SERVER,k as CONTEXT_HAS_WEB_SERVER};
